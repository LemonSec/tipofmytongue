1
00:00:00,060 --> 00:00:05,819
right we'll get<font color="#CCCCCC"> Sidon so um</font><font color="#E5E5E5"> kephale</font>

2
00:00:03,689 --> 00:00:07,710
<font color="#E5E5E5">Drake</font><font color="#CCCCCC"> this follows on</font><font color="#E5E5E5"> from the talk</font>

3
00:00:05,819 --> 00:00:10,500
yesterday<font color="#E5E5E5"> where I talked about</font><font color="#CCCCCC"> high</font><font color="#E5E5E5"> tech</font>

4
00:00:07,710 --> 00:00:12,719
<font color="#CCCCCC">- yesterday I talked about</font><font color="#E5E5E5"> the first</font>

5
00:00:10,500 --> 00:00:15,839
attack in the paper<font color="#CCCCCC"> gun</font><font color="#E5E5E5"> in 360 seconds</font>

6
00:00:12,719 --> 00:00:17,880
<font color="#CCCCCC">my verdict but I</font><font color="#E5E5E5"> go</font><font color="#CCCCCC"> siient</font><font color="#E5E5E5"> blush and</font>

7
00:00:15,839 --> 00:00:21,180
today I<font color="#E5E5E5"> will talk about attacks</font><font color="#CCCCCC"> 2 & 3</font>

8
00:00:17,880 --> 00:00:24,390
<font color="#E5E5E5">which are even cooler more interesting</font>

9
00:00:21,180 --> 00:00:25,769
attacks<font color="#E5E5E5"> but</font><font color="#CCCCCC"> I will recap on what we did</font>

10
00:00:24,390 --> 00:00:28,019
yesterday<font color="#E5E5E5"> because I realize we've all</font>

11
00:00:25,769 --> 00:00:30,089
been<font color="#CCCCCC"> drinking and</font><font color="#E5E5E5"> sleeping since then so</font>

12
00:00:28,019 --> 00:00:31,709
it probably kind<font color="#E5E5E5"> of makes sense but I</font>

13
00:00:30,090 --> 00:00:35,309
will go<font color="#E5E5E5"> through that faster than I</font><font color="#CCCCCC"> did</font>

14
00:00:31,710 --> 00:00:37,140
yesterday so<font color="#E5E5E5"> I'm sure be good so there's</font>

15
00:00:35,309 --> 00:00:42,780
the<font color="#CCCCCC"> Who am I slide</font>

16
00:00:37,140 --> 00:00:45,390
obviously I'll work in cyber I say we're

17
00:00:42,780 --> 00:00:48,899
going<font color="#E5E5E5"> to cover protector 2</font><font color="#CCCCCC"> &</font><font color="#E5E5E5"> 3</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> this</font>

18
00:00:45,390 --> 00:00:52,289
is a workshop format<font color="#E5E5E5"> as opposed to the</font>

19
00:00:48,899 --> 00:00:53,969
<font color="#E5E5E5">talk format that we had yesterday so do</font>

20
00:00:52,289 --> 00:00:56,190
you feel<font color="#E5E5E5"> free to ask questions</font><font color="#CCCCCC"> there's</font>

21
00:00:53,969 --> 00:00:57,899
no like exercises there's nothing<font color="#E5E5E5"> for</font>

22
00:00:56,190 --> 00:01:01,589
you<font color="#E5E5E5"> to necessarily</font><font color="#CCCCCC"> need to</font><font color="#E5E5E5"> do your part</font>

23
00:00:57,899 --> 00:01:04,890
from like watch and understand or you

24
00:01:01,590 --> 00:01:07,200
know but feel free to interact and<font color="#CCCCCC"> ask</font>

25
00:01:04,890 --> 00:01:09,479
questions as<font color="#E5E5E5"> we go so so that makes some</font>

26
00:01:07,200 --> 00:01:12,000
sort of sense<font color="#CCCCCC"> our driver you understood</font>

27
00:01:09,479 --> 00:01:13,770
<font color="#CCCCCC">it then kind</font><font color="#E5E5E5"> of just thought that was</font>

28
00:01:12,000 --> 00:01:17,390
two hours<font color="#CCCCCC"> I'm never going to get back as</font>

29
00:01:13,770 --> 00:01:20,699
it were there's<font color="#E5E5E5"> quite a lot of maths</font>

30
00:01:17,390 --> 00:01:24,090
don't be scared of<font color="#E5E5E5"> it obviously it's not</font>

31
00:01:20,700 --> 00:01:25,290
quite the<font color="#E5E5E5"> same it's very crypto math so</font>

32
00:01:24,090 --> 00:01:28,920
<font color="#CCCCCC">there weren't</font><font color="#E5E5E5"> really numbers it'll be</font>

33
00:01:25,290 --> 00:01:30,119
symbols and exhort<font color="#CCCCCC"> um right equipment</font><font color="#E5E5E5"> so</font>

34
00:01:28,920 --> 00:01:31,680
<font color="#CCCCCC">yeah so didn't</font><font color="#E5E5E5"> we talk about equipment</font>

35
00:01:30,119 --> 00:01:32,850
<font color="#E5E5E5">but I thought I'd chuck it into the</font>

36
00:01:31,680 --> 00:01:34,799
<font color="#E5E5E5">workshop - there's a bit</font><font color="#CCCCCC"> we've got a bit</font>

37
00:01:32,850 --> 00:01:36,539
more time I don't we need for two hours

38
00:01:34,799 --> 00:01:38,909
to crack on<font color="#CCCCCC"> for these attacks I'm</font><font color="#E5E5E5"> just</font>

39
00:01:36,540 --> 00:01:41,430
going to fill out a little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> um in</font>

40
00:01:38,909 --> 00:01:44,549
order<font color="#E5E5E5"> to do this work I needed a high</font>

41
00:01:41,430 --> 00:01:48,119
<font color="#CCCCCC">tattoo reader</font><font color="#E5E5E5"> and some tags and like I</font>

42
00:01:44,549 --> 00:01:50,640
said<font color="#CCCCCC"> yesterday to read of are using was</font>

43
00:01:48,119 --> 00:01:52,890
non-standard<font color="#E5E5E5"> so it did other stuff</font><font color="#CCCCCC"> the</font>

44
00:01:50,640 --> 00:01:54,659
protocol<font color="#CCCCCC"> was different to the standard</font>

45
00:01:52,890 --> 00:01:56,219
<font color="#E5E5E5">high tech to read it but if</font><font color="#CCCCCC"> you're gonna</font>

46
00:01:54,659 --> 00:01:58,290
do something on these<font color="#CCCCCC"> lines</font><font color="#E5E5E5"> you probably</font>

47
00:01:56,219 --> 00:02:02,009
don't want a reader<font color="#E5E5E5"> of some sort</font>

48
00:01:58,290 --> 00:02:04,649
<font color="#E5E5E5">say Adam</font><font color="#CCCCCC"> lorries sold me a frosh</font><font color="#E5E5E5"> and I</font>

49
00:02:02,009 --> 00:02:06,780
got<font color="#E5E5E5"> through three</font><font color="#CCCCCC"> of them</font><font color="#E5E5E5"> and I still</font>

50
00:02:04,649 --> 00:02:07,469
<font color="#CCCCCC">not managed</font><font color="#E5E5E5"> to get one</font><font color="#CCCCCC"> that works which</font>

51
00:02:06,780 --> 00:02:10,318
is<font color="#E5E5E5"> really annoying</font>

52
00:02:07,469 --> 00:02:12,599
<font color="#CCCCCC">um but the froth design is like</font><font color="#E5E5E5"> the</font>

53
00:02:10,318 --> 00:02:13,859
standard prototype<font color="#E5E5E5"> to reader design so</font>

54
00:02:12,599 --> 00:02:15,989
there'll be an<font color="#CCCCCC"> ATR</font>

55
00:02:13,860 --> 00:02:19,470
<font color="#CCCCCC">t110 chip which is does the analogue</font>

56
00:02:15,990 --> 00:02:22,530
front end<font color="#CCCCCC"> there's like a massive short</font>

57
00:02:19,470 --> 00:02:23,760
PDF on designing<font color="#E5E5E5"> the front end that fits</font>

58
00:02:22,530 --> 00:02:27,080
on that<font color="#CCCCCC"> but it's a few passive</font>

59
00:02:23,760 --> 00:02:30,630
components in an antenna and<font color="#CCCCCC"> that has a</font>

60
00:02:27,080 --> 00:02:32,490
serial ish<font color="#E5E5E5"> kind of interface where which</font>

61
00:02:30,630 --> 00:02:35,910
<font color="#E5E5E5">is controlled our</font><font color="#CCCCCC"> pic I think it's like</font>

62
00:02:32,490 --> 00:02:38,610
16 F on the<font color="#CCCCCC"> fuch</font><font color="#E5E5E5"> but that's all there</font><font color="#CCCCCC"> is</font>

63
00:02:35,910 --> 00:02:40,290
<font color="#E5E5E5">and anyone any other high tech to</font><font color="#CCCCCC"> reader</font>

64
00:02:38,610 --> 00:02:42,870
<font color="#E5E5E5">you come across pretty</font><font color="#CCCCCC"> much will be that</font>

65
00:02:40,290 --> 00:02:46,380
design<font color="#E5E5E5"> to some degree I did see and a</font>

66
00:02:42,870 --> 00:02:47,850
<font color="#CCCCCC">bull and a</font><font color="#E5E5E5"> Raspberry Pi shield which</font><font color="#CCCCCC"> is</font>

67
00:02:46,380 --> 00:02:49,470
based on the<font color="#E5E5E5"> same design but it claims</font>

68
00:02:47,850 --> 00:02:51,900
<font color="#CCCCCC">that 20 new password' mode and not</font>

69
00:02:49,470 --> 00:02:55,200
crypto mode and I imagine that's because

70
00:02:51,900 --> 00:02:57,630
they've got an old version<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the</font>

71
00:02:55,200 --> 00:02:59,310
firmware<font color="#E5E5E5"> on</font><font color="#CCCCCC"> the pic or something I'm</font><font color="#E5E5E5"> not</font>

72
00:02:57,630 --> 00:03:01,260
really<font color="#E5E5E5"> sure</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> there or they didn't</font>

73
00:02:59,310 --> 00:03:03,720
quite work out entirely how to make

74
00:03:01,260 --> 00:03:06,570
crypto might work but<font color="#E5E5E5"> they were around</font>

75
00:03:03,720 --> 00:03:10,170
<font color="#E5E5E5">I'm gonna punch that into</font><font color="#CCCCCC"> being</font><font color="#E5E5E5"> one that</font>

76
00:03:06,570 --> 00:03:12,090
could do crypto mode just because I want

77
00:03:10,170 --> 00:03:14,399
one that works but yet<font color="#E5E5E5"> I said they're</font>

78
00:03:12,090 --> 00:03:16,890
hard to<font color="#E5E5E5"> find so if you do work</font><font color="#CCCCCC"> for like</font>

79
00:03:14,400 --> 00:03:18,380
an access control company like building

80
00:03:16,890 --> 00:03:20,910
access control things like<font color="#E5E5E5"> that then</font>

81
00:03:18,380 --> 00:03:21,989
yeah use all<font color="#E5E5E5"> your channels and</font><font color="#CCCCCC"> if you</font>

82
00:03:20,910 --> 00:03:26,519
can<font color="#E5E5E5"> find</font><font color="#CCCCCC"> four and I</font><font color="#E5E5E5"> will quite happily</font>

83
00:03:21,989 --> 00:03:28,140
buy a<font color="#E5E5E5"> high tech to me</font><font color="#CCCCCC"> drop okay so the</font>

84
00:03:26,519 --> 00:03:30,690
eavesdropping on what I<font color="#E5E5E5"> was doing I use</font>

85
00:03:28,140 --> 00:03:34,429
the next USRP one which should if<font color="#CCCCCC"> you</font>

86
00:03:30,690 --> 00:03:34,430
know<font color="#CCCCCC"> it's like a software-defined radio</font>

87
00:03:35,299 --> 00:03:41,970
sort of losing people<font color="#E5E5E5"> could have thought</font>

88
00:03:37,470 --> 00:03:43,769
<font color="#E5E5E5">about</font><font color="#CCCCCC"> equivalent</font><font color="#E5E5E5"> scenarios and it was</font>

89
00:03:41,970 --> 00:03:45,060
<font color="#E5E5E5">really useful just to just to see what</font>

90
00:03:43,769 --> 00:03:46,920
<font color="#E5E5E5">was going on so as I was writing code</font>

91
00:03:45,060 --> 00:03:48,090
<font color="#CCCCCC">and</font><font color="#E5E5E5"> making it do stuff</font><font color="#CCCCCC"> and you traction</font>

92
00:03:46,920 --> 00:03:49,708
<font color="#E5E5E5">with the tags</font><font color="#CCCCCC"> or interaction</font><font color="#E5E5E5"> with the</font>

93
00:03:48,090 --> 00:03:51,510
reader it's nice to actually see<font color="#E5E5E5"> the</font>

94
00:03:49,709 --> 00:03:55,170
waveforms and know that what you'd got

95
00:03:51,510 --> 00:03:57,000
was what you're expecting like manually

96
00:03:55,170 --> 00:03:58,980
decode stuff from the frequencies and

97
00:03:57,000 --> 00:04:00,690
<font color="#CCCCCC">that arby's at all I wrote</font><font color="#E5E5E5"> I'll show</font>

98
00:03:58,980 --> 00:04:03,660
this screenshot<font color="#CCCCCC"> in a second but it's not</font>

99
00:04:00,690 --> 00:04:07,500
released<font color="#E5E5E5"> Jeff proxmark</font><font color="#CCCCCC"> 3</font><font color="#E5E5E5"> because of</font>

100
00:04:03,660 --> 00:04:11,459
<font color="#CCCCCC">course we need a pockmark our</font><font color="#E5E5E5"> fiddler so</font>

101
00:04:07,500 --> 00:04:14,040
the<font color="#CCCCCC"> mplab ide is yeah but</font><font color="#E5E5E5"> the default</font>

102
00:04:11,459 --> 00:04:15,600
kind of<font color="#CCCCCC"> suite for like taking the code</font>

103
00:04:14,040 --> 00:04:18,709
from github<font color="#E5E5E5"> and actually</font><font color="#CCCCCC"> just modifying</font>

104
00:04:15,600 --> 00:04:21,089
it and<font color="#CCCCCC"> we</font><font color="#E5E5E5"> compiling yourself and</font>

105
00:04:18,709 --> 00:04:23,400
apparently before<font color="#E5E5E5"> me no one had actually</font>

106
00:04:21,089 --> 00:04:25,409
<font color="#E5E5E5">offered any updates to github for</font><font color="#CCCCCC"> a</font>

107
00:04:23,400 --> 00:04:26,940
fiddler but the idea is<font color="#E5E5E5"> that you all do</font>

108
00:04:25,410 --> 00:04:27,480
<font color="#E5E5E5">because there's lots more you can do</font>

109
00:04:26,940 --> 00:04:30,570
with<font color="#CCCCCC"> it if you</font>

110
00:04:27,480 --> 00:04:32,940
<font color="#CCCCCC">okay and then like for back-end</font><font color="#E5E5E5"> stuff</font>

111
00:04:30,570 --> 00:04:37,020
logic analyzers Arduino stand mimic the

112
00:04:32,940 --> 00:04:39,960
<font color="#E5E5E5">backend lots of code lots of stuff so</font>

113
00:04:37,020 --> 00:04:42,599
<font color="#E5E5E5">that's a tool that's</font><font color="#CCCCCC"> our be</font><font color="#E5E5E5"> the idea so</font>

114
00:04:39,960 --> 00:04:45,479
in<font color="#CCCCCC"> goo radio it's really good for</font>

115
00:04:42,600 --> 00:04:47,850
instantaneous stuff but when<font color="#E5E5E5"> you're like</font>

116
00:04:45,480 --> 00:04:49,590
<font color="#CCCCCC">putting out data or you're putting</font>

117
00:04:47,850 --> 00:04:51,060
outdated<font color="#E5E5E5"> traces that you can't quite</font>

118
00:04:49,590 --> 00:04:55,049
decode because your software is<font color="#E5E5E5"> not</font>

119
00:04:51,060 --> 00:04:56,850
quite right then you want to<font color="#E5E5E5"> really see</font>

120
00:04:55,050 --> 00:05:00,120
what actually<font color="#E5E5E5"> happened in time at what</font>

121
00:04:56,850 --> 00:05:01,430
point so<font color="#CCCCCC"> uh so basically I tap</font><font color="#E5E5E5"> my flow</font>

122
00:05:00,120 --> 00:05:05,010
graph<font color="#E5E5E5"> and lots of different points</font>

123
00:05:01,430 --> 00:05:07,380
<font color="#E5E5E5">wherever frequency the the it's moving</font>

124
00:05:05,010 --> 00:05:09,599
at<font color="#CCCCCC"> that point</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> stormwater files and</font>

125
00:05:07,380 --> 00:05:10,980
then<font color="#E5E5E5"> RB</font><font color="#CCCCCC"> loads all those files in and</font>

126
00:05:09,600 --> 00:05:12,960
lines and<font color="#CCCCCC"> water</font><font color="#E5E5E5"> over the top</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> each</font>

127
00:05:10,980 --> 00:05:14,850
other<font color="#CCCCCC"> so you can sort of see what's</font>

128
00:05:12,960 --> 00:05:17,219
<font color="#E5E5E5">going on and you can also line up like</font>

129
00:05:14,850 --> 00:05:19,980
multiple kind of sessions so<font color="#E5E5E5"> you can see</font>

130
00:05:17,220 --> 00:05:21,690
that here's a good session<font color="#E5E5E5"> with a real</font>

131
00:05:19,980 --> 00:05:23,370
card and here's a bad<font color="#E5E5E5"> session with my</font>

132
00:05:21,690 --> 00:05:25,860
emulator<font color="#CCCCCC"> that doesn't work web app story</font>

133
00:05:23,370 --> 00:05:28,290
but one<font color="#CCCCCC"> day I'll release RB it's quite</font>

134
00:05:25,860 --> 00:05:30,960
um there's all<font color="#E5E5E5"> sorts of radio you stuff</font>

135
00:05:28,290 --> 00:05:32,670
you can do<font color="#CCCCCC"> with that right</font><font color="#E5E5E5"> so the</font>

136
00:05:30,960 --> 00:05:34,109
<font color="#CCCCCC">academic paper know who this</font><font color="#E5E5E5"> works speed</font>

137
00:05:32,670 --> 00:05:35,460
up and<font color="#CCCCCC"> I've got quickly back through</font>

138
00:05:34,110 --> 00:05:38,370
what we<font color="#CCCCCC"> did yesterday</font><font color="#E5E5E5"> so there's</font><font color="#CCCCCC"> likely</font>

139
00:05:35,460 --> 00:05:40,650
<font color="#CCCCCC">on pokel gone in</font><font color="#E5E5E5"> 360 seconds by the</font><font color="#CCCCCC"> dog</font>

140
00:05:38,370 --> 00:05:42,120
<font color="#CCCCCC">our symbol ash if you haven't read it</font><font color="#E5E5E5"> I</font>

141
00:05:40,650 --> 00:05:45,450
<font color="#E5E5E5">recommend you read it it's free on the</font>

142
00:05:42,120 --> 00:05:48,480
internet<font color="#CCCCCC"> it's very easy to</font><font color="#E5E5E5"> find it's</font>

143
00:05:45,450 --> 00:05:50,670
about<font color="#E5E5E5"> 16</font><font color="#CCCCCC"> pages and the maths will make</font>

144
00:05:48,480 --> 00:05:55,140
your eyes bleed which is why I'm kind of

145
00:05:50,670 --> 00:05:58,470
doing<font color="#CCCCCC"> this</font><font color="#E5E5E5"> talk</font><font color="#CCCCCC"> high-tech</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> 8 pages 32</font>

146
00:05:55,140 --> 00:06:00,539
bits each page<font color="#CCCCCC"> nor your ideas public</font>

147
00:05:58,470 --> 00:06:02,430
it's not<font color="#CCCCCC"> used for</font><font color="#E5E5E5"> access control</font>

148
00:06:00,540 --> 00:06:05,580
decisions typically<font color="#E5E5E5"> but it is the first</font>

149
00:06:02,430 --> 00:06:07,610
page it's provided as part<font color="#E5E5E5"> of the crypto</font>

150
00:06:05,580 --> 00:06:10,469
handshake and<font color="#E5E5E5"> is used to see the orangey</font>

151
00:06:07,610 --> 00:06:11,970
pages<font color="#E5E5E5"> 1 2 & 3 contain the crypto keys</font>

152
00:06:10,470 --> 00:06:13,890
and the tag password<font color="#CCCCCC"> therefore the</font>

153
00:06:11,970 --> 00:06:16,680
<font color="#E5E5E5">mutual authentication and to</font><font color="#CCCCCC"> see the</font>

154
00:06:13,890 --> 00:06:18,510
PRNG which sets up a stream cipher and

155
00:06:16,680 --> 00:06:20,700
pages<font color="#CCCCCC"> four to</font><font color="#E5E5E5"> seven holes to user data</font>

156
00:06:18,510 --> 00:06:22,560
<font color="#CCCCCC">which identifies the</font><font color="#E5E5E5"> person who's the</font>

157
00:06:20,700 --> 00:06:27,330
cards for and that's<font color="#E5E5E5"> what the access</font>

158
00:06:22,560 --> 00:06:30,390
control<font color="#E5E5E5"> decisions are made on</font><font color="#CCCCCC"> it</font>

159
00:06:27,330 --> 00:06:32,370
<font color="#CCCCCC">appreciate keys and</font><font color="#E5E5E5"> booted off all round</font>

160
00:06:30,390 --> 00:06:34,260
so every reader in<font color="#E5E5E5"> a systems got the</font>

161
00:06:32,370 --> 00:06:37,170
same key every tag in the same<font color="#E5E5E5"> systems</font>

162
00:06:34,260 --> 00:06:39,060
got the same key that<font color="#CCCCCC"> means</font><font color="#E5E5E5"> that if you</font>

163
00:06:37,170 --> 00:06:40,620
attack one<font color="#CCCCCC"> reader and</font><font color="#E5E5E5"> get the key you've</font>

164
00:06:39,060 --> 00:06:41,120
got the key for the entire<font color="#CCCCCC"> system and</font>

165
00:06:40,620 --> 00:06:43,580
equally

166
00:06:41,120 --> 00:06:45,650
go to the tags<font color="#E5E5E5"> so you could be an</font>

167
00:06:43,580 --> 00:06:47,870
insider with your valid tag<font color="#E5E5E5"> that only</font>

168
00:06:45,650 --> 00:06:50,090
gets<font color="#E5E5E5"> you into the ground floor hack that</font>

169
00:06:47,870 --> 00:06:53,150
and then copy<font color="#E5E5E5"> publish tags to get you</font>

170
00:06:50,090 --> 00:06:55,280
into the<font color="#E5E5E5"> top floor</font><font color="#CCCCCC"> you could be a</font>

171
00:06:53,150 --> 00:06:56,960
contractor and hack your<font color="#E5E5E5"> contractors</font>

172
00:06:55,280 --> 00:06:59,330
<font color="#CCCCCC">past you could find millions straight</font>

173
00:06:56,960 --> 00:07:02,270
you could copy one in the pub there's

174
00:06:59,330 --> 00:07:06,380
all<font color="#E5E5E5"> sorts of attack methods red teamers</font>

175
00:07:02,270 --> 00:07:07,969
what<font color="#E5E5E5"> I'm going to</font><font color="#CCCCCC"> use to to gain but if</font>

176
00:07:06,380 --> 00:07:09,290
you're only attacking<font color="#E5E5E5"> the reader attack</font>

177
00:07:07,970 --> 00:07:10,550
<font color="#E5E5E5">three will let</font><font color="#CCCCCC"> your attack just</font><font color="#E5E5E5"> the</font>

178
00:07:09,290 --> 00:07:12,800
reader<font color="#CCCCCC"> without actually having to have</font>

179
00:07:10,550 --> 00:07:14,419
attack<font color="#CCCCCC"> which</font><font color="#E5E5E5"> is even better</font><font color="#CCCCCC"> so what</font>

180
00:07:12,800 --> 00:07:16,490
we're going<font color="#E5E5E5"> to come to so crypto mode</font>

181
00:07:14,419 --> 00:07:19,000
<font color="#E5E5E5">looks</font><font color="#CCCCCC"> me like this as you can see every</font>

182
00:07:16,490 --> 00:07:21,860
step is encrypted<font color="#E5E5E5"> after the first one</font>

183
00:07:19,000 --> 00:07:24,620
they<font color="#E5E5E5"> exchanged the nonce which sees the</font>

184
00:07:21,860 --> 00:07:27,940
<font color="#CCCCCC">RNG and a challenge response</font><font color="#E5E5E5"> value which</font>

185
00:07:24,620 --> 00:07:30,530
is the<font color="#E5E5E5"> encryption of</font><font color="#CCCCCC"> oxf f-f-f-f-f-f-f</font>

186
00:07:27,940 --> 00:07:32,810
<font color="#E5E5E5">that means the tag can guarantee that</font>

187
00:07:30,530 --> 00:07:35,510
<font color="#E5E5E5">the reader knows</font><font color="#CCCCCC"> the key</font><font color="#E5E5E5"> that the tanks</font>

188
00:07:32,810 --> 00:07:37,940
got when the<font color="#CCCCCC"> tank responds</font><font color="#E5E5E5"> with its</font>

189
00:07:35,510 --> 00:07:40,460
password<font color="#E5E5E5"> encrypted then the reader can</font>

190
00:07:37,940 --> 00:07:43,070
confirm that<font color="#E5E5E5"> the tag knows the</font><font color="#CCCCCC"> password</font>

191
00:07:40,460 --> 00:07:44,690
as<font color="#CCCCCC"> well and then they literally</font>

192
00:07:43,070 --> 00:07:46,280
authenticated and for me<font color="#CCCCCC"> that one which</font>

193
00:07:44,690 --> 00:07:48,169
they can have an encrypted communication

194
00:07:46,280 --> 00:07:50,229
where they really<font color="#E5E5E5"> could say come on</font>

195
00:07:48,169 --> 00:07:57,139
<font color="#E5E5E5">underneath I can respond</font>

196
00:07:50,229 --> 00:07:59,780
so the overall the<font color="#E5E5E5"> what's missing from</font>

197
00:07:57,139 --> 00:08:02,090
this<font color="#E5E5E5"> is UID so the tag to UID is passed</font>

198
00:07:59,780 --> 00:08:04,250
over<font color="#E5E5E5"> and the reader seeds it's not</font>

199
00:08:02,090 --> 00:08:06,560
seized<font color="#CCCCCC"> it's pre ong</font><font color="#E5E5E5"> but the non-sticky</font>

200
00:08:04,250 --> 00:08:08,419
<font color="#CCCCCC">in</font><font color="#E5E5E5"> the tank UID the tag does the same</font>

201
00:08:06,560 --> 00:08:10,280
<font color="#CCCCCC">the nuts gets</font><font color="#E5E5E5"> sent encrypted across it</font>

202
00:08:08,419 --> 00:08:11,900
all gets fed in we will<font color="#E5E5E5"> talk</font><font color="#CCCCCC"> about that</font>

203
00:08:10,280 --> 00:08:15,409
it turns<font color="#E5E5E5"> into a stream cipher stream</font>

204
00:08:11,900 --> 00:08:19,909
ciphers<font color="#E5E5E5"> XOR yeah will can remember where</font>

205
00:08:15,410 --> 00:08:21,950
we were yesterday yeah so here's the

206
00:08:19,910 --> 00:08:25,250
PRNG being seeded it starts with your

207
00:08:21,950 --> 00:08:28,700
<font color="#E5E5E5">idea in the</font><font color="#CCCCCC"> lower 60 minutes the key the</font>

208
00:08:25,250 --> 00:08:30,770
reader invents a nonce<font color="#E5E5E5"> it XOR that with</font>

209
00:08:28,700 --> 00:08:32,689
the upper 30 which the<font color="#CCCCCC"> keen shifts it in</font>

210
00:08:30,770 --> 00:08:34,909
one bit at a time<font color="#E5E5E5"> and as it does it gets</font>

211
00:08:32,690 --> 00:08:37,250
PRNG outputs<font color="#E5E5E5"> and as it gets the output</font>

212
00:08:34,909 --> 00:08:39,439
it<font color="#CCCCCC"> XOR that with</font><font color="#E5E5E5"> the nonce</font><font color="#CCCCCC"> it's created</font>

213
00:08:37,250 --> 00:08:42,320
to encrypt the nonce which can then be

214
00:08:39,440 --> 00:08:43,580
transmitted to the tag the tag starts<font color="#CCCCCC"> in</font>

215
00:08:42,320 --> 00:08:46,870
the same situation

216
00:08:43,580 --> 00:08:49,880
it receives the encrypted<font color="#E5E5E5"> nonce it</font>

217
00:08:46,870 --> 00:08:52,010
excells the output the PRNG one bit at a

218
00:08:49,880 --> 00:08:54,380
time<font color="#CCCCCC"> with</font><font color="#E5E5E5"> the upper 32 which the key and</font>

219
00:08:52,010 --> 00:08:56,450
the<font color="#CCCCCC"> encrypted nan slits received and for</font>

220
00:08:54,380 --> 00:08:59,390
every bit that<font color="#CCCCCC"> it XOS it can it</font>

221
00:08:56,450 --> 00:09:01,100
retrieves one bit of nrx<font color="#E5E5E5"> all key which</font>

222
00:08:59,390 --> 00:09:02,270
you<font color="#E5E5E5"> can then push in and that will put</font>

223
00:09:01,100 --> 00:09:04,550
it<font color="#E5E5E5"> into the next state where it can</font><font color="#CCCCCC"> get</font>

224
00:09:02,270 --> 00:09:06,530
the next bit out of the PRNG<font color="#E5E5E5"> it's a</font>

225
00:09:04,550 --> 00:09:08,540
really neat<font color="#E5E5E5"> way of like seeding and</font>

226
00:09:06,530 --> 00:09:09,829
decrypting at the same time which I

227
00:09:08,540 --> 00:09:11,540
really like<font color="#E5E5E5"> if you try and do the whole</font>

228
00:09:09,830 --> 00:09:13,880
<font color="#CCCCCC">32 bit word of when she can't because</font>

229
00:09:11,540 --> 00:09:15,620
<font color="#E5E5E5">you</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> have the PNG output to do so</font>

230
00:09:13,880 --> 00:09:17,720
but you do<font color="#CCCCCC"> it one bit at a time</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> can</font>

231
00:09:15,620 --> 00:09:19,070
which I quite like

232
00:09:17,720 --> 00:09:21,770
we<font color="#E5E5E5"> doesn't make</font><font color="#CCCCCC"> it secure I just quite</font>

233
00:09:19,070 --> 00:09:23,180
like it so the reader after<font color="#CCCCCC"> it's sent</font>

234
00:09:21,770 --> 00:09:26,449
the encrypted<font color="#E5E5E5"> nonce ends up in this</font>

235
00:09:23,180 --> 00:09:28,939
<font color="#CCCCCC">situation and so just</font><font color="#E5E5E5"> attack which means</font>

236
00:09:26,450 --> 00:09:32,420
<font color="#CCCCCC">the PRNG</font><font color="#E5E5E5"> zone step they're both going to</font>

237
00:09:28,940 --> 00:09:34,430
produce the<font color="#E5E5E5"> same sort of pseudo random</font>

238
00:09:32,420 --> 00:09:37,479
output which is<font color="#E5E5E5"> what's going to</font><font color="#CCCCCC"> used</font><font color="#E5E5E5"> to</font>

239
00:09:34,430 --> 00:09:40,040
the stream cipher<font color="#CCCCCC"> so one end will take</font>

240
00:09:37,480 --> 00:09:42,650
<font color="#CCCCCC">so you know the same number of bits that</font>

241
00:09:40,040 --> 00:09:44,420
<font color="#E5E5E5">the PNG that it's got for its data to</font>

242
00:09:42,650 --> 00:09:46,640
encrypt<font color="#CCCCCC"> XOR the two together</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> give</font>

243
00:09:44,420 --> 00:09:48,170
<font color="#CCCCCC">encrypted data</font><font color="#E5E5E5"> send it to the</font><font color="#CCCCCC"> roundup</font>

244
00:09:46,640 --> 00:09:50,300
get the same number of bits<font color="#CCCCCC"> archeology</font>

245
00:09:48,170 --> 00:09:51,800
which will be the same<font color="#CCCCCC"> king stream XOR</font>

246
00:09:50,300 --> 00:09:54,969
that with<font color="#E5E5E5"> the encrypted data</font><font color="#CCCCCC"> and now I</font>

247
00:09:51,800 --> 00:09:58,189
will turn it back<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> original data</font>

248
00:09:54,970 --> 00:09:59,900
after it's been seeded the both of<font color="#E5E5E5"> them</font>

249
00:09:58,190 --> 00:10:01,820
enable<font color="#CCCCCC"> the feedback</font><font color="#E5E5E5"> function so there's</font>

250
00:09:59,900 --> 00:10:03,500
no more seeding data it's just<font color="#E5E5E5"> you know</font>

251
00:10:01,820 --> 00:10:04,940
<font color="#CCCCCC">you run a</font><font color="#E5E5E5"> function</font><font color="#CCCCCC"> on the state and that</font>

252
00:10:03,500 --> 00:10:07,580
<font color="#E5E5E5">produces the new bit that's going to get</font>

253
00:10:04,940 --> 00:10:11,840
shifted<font color="#E5E5E5"> in every time you kind of shift</font>

254
00:10:07,580 --> 00:10:14,120
<font color="#E5E5E5">to PRNG to take a bit of output this is</font>

255
00:10:11,840 --> 00:10:15,710
the encryption<font color="#CCCCCC"> and decryption steps as</font>

256
00:10:14,120 --> 00:10:18,080
we<font color="#E5E5E5"> talked</font><font color="#CCCCCC"> about the feedback functions</font>

257
00:10:15,710 --> 00:10:19,940
basically<font color="#E5E5E5"> the XOR of</font><font color="#CCCCCC"> sixteen bits of the</font>

258
00:10:18,080 --> 00:10:23,270
<font color="#E5E5E5">PRNG if you don't know the state</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> the</font>

259
00:10:19,940 --> 00:10:25,250
<font color="#E5E5E5">PRNG then you can't predict what the</font>

260
00:10:23,270 --> 00:10:27,050
feedback function would<font color="#E5E5E5"> return as a zero</font>

261
00:10:25,250 --> 00:10:29,210
<font color="#E5E5E5">or</font><font color="#CCCCCC"> one so you can't predict</font><font color="#E5E5E5"> future</font>

262
00:10:27,050 --> 00:10:31,339
<font color="#CCCCCC">states</font><font color="#E5E5E5"> that's quite sound</font>

263
00:10:29,210 --> 00:10:34,760
<font color="#E5E5E5">lfsr's have been around for ages and</font>

264
00:10:31,340 --> 00:10:37,460
they are used<font color="#E5E5E5"> in lots of places I'm sure</font>

265
00:10:34,760 --> 00:10:42,560
<font color="#E5E5E5">they</font><font color="#CCCCCC"> really secure</font><font color="#E5E5E5"> to just know in this</font>

266
00:10:37,460 --> 00:10:43,970
<font color="#E5E5E5">case the output the PRG that's not the</font>

267
00:10:42,560 --> 00:10:49,270
bit that<font color="#CCCCCC"> just gets knocked off the end</font>

268
00:10:43,970 --> 00:10:52,100
<font color="#E5E5E5">it's produced by a filter function f</font>

269
00:10:49,270 --> 00:10:55,310
which is<font color="#E5E5E5"> made up of the hierarchy of</font>

270
00:10:52,100 --> 00:10:57,380
filter<font color="#E5E5E5"> functions a B and C</font><font color="#CCCCCC"> each of the</font>

271
00:10:55,310 --> 00:10:59,810
A's and<font color="#CCCCCC"> B's takes four bits each so</font>

272
00:10:57,380 --> 00:11:02,750
<font color="#E5E5E5">that's 20 bits coming from the lfsr PNG</font>

273
00:10:59,810 --> 00:11:04,459
<font color="#CCCCCC">state each of those produces one bit</font><font color="#E5E5E5"> of</font>

274
00:11:02,750 --> 00:11:06,290
output<font color="#E5E5E5"> which gets fed in function</font><font color="#CCCCCC"> of C</font>

275
00:11:04,460 --> 00:11:08,060
which is one bit<font color="#CCCCCC"> of output and that</font>

276
00:11:06,290 --> 00:11:11,300
<font color="#CCCCCC">becomes the X output</font><font color="#E5E5E5"> bit the</font>

277
00:11:08,060 --> 00:11:14,270
all of these<font color="#CCCCCC"> 5050 biased</font><font color="#E5E5E5"> so if you don't</font>

278
00:11:11,300 --> 00:11:16,819
know the bits going<font color="#E5E5E5"> in you can't predict</font>

279
00:11:14,270 --> 00:11:20,740
the output<font color="#E5E5E5"> at all which looks quite</font>

280
00:11:16,820 --> 00:11:23,000
random this<font color="#E5E5E5"> is how they're made up I</font>

281
00:11:20,740 --> 00:11:24,350
don't<font color="#CCCCCC"> think I</font><font color="#E5E5E5"> included these slides</font>

282
00:11:23,000 --> 00:11:26,060
yesterday<font color="#E5E5E5"> cuz we didn't need to know</font>

283
00:11:24,350 --> 00:11:29,390
about filter function yesterday<font color="#CCCCCC"> we were</font>

284
00:11:26,060 --> 00:11:31,310
<font color="#CCCCCC">all</font><font color="#E5E5E5"> today but</font><font color="#CCCCCC"> we didn't yesterday so</font><font color="#E5E5E5"> you</font>

285
00:11:29,390 --> 00:11:33,319
can see they all take<font color="#CCCCCC"> four bits and they</font>

286
00:11:31,310 --> 00:11:35,390
<font color="#E5E5E5">produced one bit of output</font><font color="#CCCCCC"> they're</font>

287
00:11:33,320 --> 00:11:37,070
implemented<font color="#E5E5E5"> using boolean tables which</font>

288
00:11:35,390 --> 00:11:40,870
is quite a common<font color="#E5E5E5"> thing in hardware</font>

289
00:11:37,070 --> 00:11:43,310
<font color="#CCCCCC">because it's really easy</font><font color="#E5E5E5"> to implement so</font>

290
00:11:40,870 --> 00:11:45,290
if you've<font color="#E5E5E5"> got four bits going into</font>

291
00:11:43,310 --> 00:11:47,000
function a you turn<font color="#E5E5E5"> that into a</font><font color="#CCCCCC"> 4-bit</font>

292
00:11:45,290 --> 00:11:51,230
number<font color="#CCCCCC"> so it's got</font><font color="#E5E5E5"> value</font><font color="#CCCCCC"> between</font><font color="#E5E5E5"> normal</font>

293
00:11:47,000 --> 00:11:53,420
<font color="#CCCCCC">fifteen it's basically going to look</font>

294
00:11:51,230 --> 00:11:55,580
that up<font color="#E5E5E5"> in a</font><font color="#CCCCCC"> 16-bit number</font><font color="#E5E5E5"> and pick that</font>

295
00:11:53,420 --> 00:11:58,430
bit position and that bit position will

296
00:11:55,580 --> 00:12:01,370
<font color="#E5E5E5">either being a naught or one same for</font>

297
00:11:58,430 --> 00:12:02,870
function B so you<font color="#E5E5E5"> can see like oh x2 c79</font>

298
00:12:01,370 --> 00:12:05,870
has got an equal<font color="#CCCCCC"> number of ones and</font>

299
00:12:02,870 --> 00:12:07,370
zeros<font color="#CCCCCC"> six six seven one again equal</font>

300
00:12:05,870 --> 00:12:10,070
number<font color="#E5E5E5"> of ones and</font><font color="#CCCCCC"> zeros</font><font color="#E5E5E5"> so if you don't</font>

301
00:12:07,370 --> 00:12:11,810
know<font color="#E5E5E5"> the input bits you don't know</font>

302
00:12:10,070 --> 00:12:13,700
wearing that brilliant able you're going

303
00:12:11,810 --> 00:12:15,170
to be<font color="#E5E5E5"> picking the bit you can't predict</font>

304
00:12:13,700 --> 00:12:18,920
if that's commune<font color="#E5E5E5"> or one</font><font color="#CCCCCC"> cuz you've</font><font color="#E5E5E5"> got</font>

305
00:12:15,170 --> 00:12:21,290
a<font color="#CCCCCC"> 50-50 chance equally they will produce</font>

306
00:12:18,920 --> 00:12:24,620
one bitch<font color="#CCCCCC"> that gets finding function C</font>

307
00:12:21,290 --> 00:12:27,770
which is obviously a<font color="#CCCCCC"> five bit number so</font>

308
00:12:24,620 --> 00:12:30,560
values<font color="#CCCCCC"> nought 231</font><font color="#E5E5E5"> which looks up in a</font><font color="#CCCCCC"> 32</font>

309
00:12:27,770 --> 00:12:33,620
<font color="#CCCCCC">bit buoy table so there's</font><font color="#E5E5E5"> say two ones</font>

310
00:12:30,560 --> 00:12:35,810
<font color="#E5E5E5">and</font><font color="#CCCCCC"> zeros there</font><font color="#E5E5E5"> of which 16 of ones and</font>

311
00:12:33,620 --> 00:12:37,520
<font color="#CCCCCC">sixteen of zeros in</font><font color="#E5E5E5"> some</font><font color="#CCCCCC"> tight kind</font><font color="#E5E5E5"> of</font>

312
00:12:35,810 --> 00:12:41,719
random function for<font color="#CCCCCC"> hi tag - these</font>

313
00:12:37,520 --> 00:12:43,490
numbers<font color="#CCCCCC"> are fixed</font><font color="#E5E5E5"> so if if you've got</font>

314
00:12:41,720 --> 00:12:45,800
your own<font color="#E5E5E5"> hi tag</font><font color="#CCCCCC"> to system they'll be</font>

315
00:12:43,490 --> 00:12:47,870
these numbers but a certain a<font color="#E5E5E5"> 50/50 so</font>

316
00:12:45,800 --> 00:12:52,130
it's<font color="#E5E5E5"> really hard to predict if you don't</font>

317
00:12:47,870 --> 00:12:55,190
know internal state information so far

318
00:12:52,130 --> 00:12:58,760
so good<font color="#E5E5E5"> so there's the picture function</font>

319
00:12:55,190 --> 00:13:02,570
as it's<font color="#E5E5E5"> very biased so it looks like it</font>

320
00:12:58,760 --> 00:13:04,130
looks<font color="#E5E5E5"> pretty good I would say so</font><font color="#CCCCCC"> I</font>

321
00:13:02,570 --> 00:13:05,810
should go through<font color="#E5E5E5"> the process we get to</font>

322
00:13:04,130 --> 00:13:07,580
the commands at the bottom<font color="#CCCCCC"> hi-tec two</font>

323
00:13:05,810 --> 00:13:08,900
commands<font color="#E5E5E5"> so I talked about this</font>

324
00:13:07,580 --> 00:13:11,840
<font color="#E5E5E5">yesterday I'm gonna go through quickly</font>

325
00:13:08,900 --> 00:13:17,000
<font color="#E5E5E5">there's four commands to a read command</font>

326
00:13:11,840 --> 00:13:19,089
<font color="#CCCCCC">cm 0 is a 1</font><font color="#E5E5E5"> if it's a read command a 2 3</font>

327
00:13:17,000 --> 00:13:20,649
<font color="#CCCCCC">or 4 makes up the page</font>

328
00:13:19,089 --> 00:13:24,399
that we're<font color="#E5E5E5"> gonna read or write or</font>

329
00:13:20,649 --> 00:13:26,889
<font color="#E5E5E5">whether now command is actually a</font>

330
00:13:24,399 --> 00:13:29,079
minimum of<font color="#CCCCCC"> 10 bits</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> have to be the</font>

331
00:13:26,889 --> 00:13:32,319
normal five bits followed by the five

332
00:13:29,079 --> 00:13:37,120
bits invert it like sort of<font color="#E5E5E5"> ex-ored with</font>

333
00:13:32,319 --> 00:13:38,949
<font color="#CCCCCC">ffs</font><font color="#E5E5E5"> essentially because that provides</font>

334
00:13:37,120 --> 00:13:41,290
integrity<font color="#E5E5E5"> when it gets decrypted at the</font>

335
00:13:38,949 --> 00:13:43,439
tag the tag can check the second<font color="#E5E5E5"> block</font>

336
00:13:41,290 --> 00:13:46,120
is<font color="#E5E5E5"> the inverse of the first block and</font>

337
00:13:43,439 --> 00:13:48,219
therefore know that nothing's gone wrong

338
00:13:46,120 --> 00:13:52,689
<font color="#E5E5E5">or screwing in the comms</font><font color="#CCCCCC"> you don't have</font>

339
00:13:48,220 --> 00:13:54,399
a right tank command received when you

340
00:13:52,689 --> 00:13:58,899
<font color="#CCCCCC">actually made sentry tack come on yeah</font>

341
00:13:54,399 --> 00:14:00,670
you might mess stuff up<font color="#E5E5E5"> but you don't</font>

342
00:13:58,899 --> 00:14:01,930
you're not limited to<font color="#E5E5E5"> two blocks you</font><font color="#CCCCCC"> can</font>

343
00:14:00,670 --> 00:14:03,610
have as many blocks as you want as<font color="#CCCCCC"> long</font>

344
00:14:01,930 --> 00:14:05,410
as<font color="#E5E5E5"> they follow the same format of normal</font>

345
00:14:03,610 --> 00:14:07,569
being<font color="#E5E5E5"> but it normal being for</font><font color="#CCCCCC"> it normal</font>

346
00:14:05,410 --> 00:14:09,670
being<font color="#E5E5E5"> very etc and you can literally</font>

347
00:14:07,569 --> 00:14:12,370
<font color="#CCCCCC">have thousands of</font><font color="#E5E5E5"> these in a command and</font>

348
00:14:09,670 --> 00:14:15,160
the type will quite happily<font color="#CCCCCC"> check these</font>

349
00:14:12,370 --> 00:14:17,470
as<font color="#E5E5E5"> they're received and then acts</font>

350
00:14:15,160 --> 00:14:21,370
<font color="#E5E5E5">assuming that the integrity holds up act</font>

351
00:14:17,470 --> 00:14:23,800
upon<font color="#CCCCCC"> what the command said to do which</font>

352
00:14:21,370 --> 00:14:27,490
<font color="#E5E5E5">is Harris and it's something that's what</font>

353
00:14:23,800 --> 00:14:29,920
we abuse in the attack<font color="#CCCCCC"> so in the paper</font>

354
00:14:27,490 --> 00:14:31,870
that's three attacks<font color="#E5E5E5"> the</font><font color="#CCCCCC"> nodes replay</font>

355
00:14:29,920 --> 00:14:33,248
<font color="#E5E5E5">length extension attack we looked at</font>

356
00:14:31,870 --> 00:14:37,209
yesterday which is<font color="#CCCCCC"> pretty</font><font color="#E5E5E5"> stream</font>

357
00:14:33,249 --> 00:14:40,420
recovery<font color="#E5E5E5"> but there were two more attacks</font>

358
00:14:37,209 --> 00:14:42,429
are basically<font color="#E5E5E5"> if the keys are read</font>

359
00:14:40,420 --> 00:14:44,349
protected then you can't read them<font color="#E5E5E5"> out</font>

360
00:14:42,429 --> 00:14:46,660
even with even<font color="#E5E5E5"> if you know the key or</font>

361
00:14:44,350 --> 00:14:48,910
the key stream so<font color="#CCCCCC"> attacks two or</font><font color="#E5E5E5"> three</font>

362
00:14:46,660 --> 00:14:53,410
then kick in because<font color="#CCCCCC"> they</font><font color="#E5E5E5"> can be</font><font color="#CCCCCC"> useful</font>

363
00:14:48,910 --> 00:14:56,620
for<font color="#E5E5E5"> getting the key so quickly not</font>

364
00:14:53,410 --> 00:14:58,240
replay I can skip<font color="#E5E5E5"> through this but</font>

365
00:14:56,620 --> 00:14:59,679
there's at least one person<font color="#CCCCCC"> remember</font>

366
00:14:58,240 --> 00:15:02,050
didn't seen it so I<font color="#E5E5E5"> sort of feel like we</font>

367
00:14:59,679 --> 00:15:03,279
should<font color="#E5E5E5"> probably cover this quickly</font><font color="#CCCCCC"> and</font>

368
00:15:02,050 --> 00:15:06,429
also<font color="#E5E5E5"> we're going to need this</font><font color="#CCCCCC"> for attack</font>

369
00:15:03,279 --> 00:15:08,170
<font color="#E5E5E5">too so you know</font><font color="#CCCCCC"> let's do what you'll</font>

370
00:15:06,429 --> 00:15:10,629
notice<font color="#E5E5E5"> is that all the entropy in</font><font color="#CCCCCC"> the</font>

371
00:15:08,170 --> 00:15:13,089
system to give it given a single<font color="#E5E5E5"> tag</font>

372
00:15:10,629 --> 00:15:14,649
<font color="#E5E5E5">that the mean is talking to you all the</font>

373
00:15:13,089 --> 00:15:17,709
entropy came from the nonce<font color="#E5E5E5"> that the</font>

374
00:15:14,649 --> 00:15:20,679
<font color="#CCCCCC">reader in sort of</font><font color="#E5E5E5"> came up</font><font color="#CCCCCC"> with the tag</font>

375
00:15:17,709 --> 00:15:22,479
produced no entropy whatsoever so if you

376
00:15:20,679 --> 00:15:23,949
can capture<font color="#E5E5E5"> the encrypted not in the</font>

377
00:15:22,480 --> 00:15:25,480
encrypted tunnel response<font color="#E5E5E5"> value as it's</font>

378
00:15:23,949 --> 00:15:28,149
passed from the reader<font color="#CCCCCC"> to the</font><font color="#E5E5E5"> tag and</font>

379
00:15:25,480 --> 00:15:30,459
then<font color="#E5E5E5"> you can emulate a reader you</font><font color="#CCCCCC"> can</font>

380
00:15:28,149 --> 00:15:32,230
replay<font color="#E5E5E5"> those values to the tag every</font>

381
00:15:30,459 --> 00:15:34,270
time you initialize the tag

382
00:15:32,230 --> 00:15:36,760
<font color="#E5E5E5">initializer take to the same state every</font>

383
00:15:34,270 --> 00:15:38,170
time<font color="#E5E5E5"> which means the</font><font color="#CCCCCC"> period goe in the</font>

384
00:15:36,760 --> 00:15:39,939
same<font color="#E5E5E5"> state which means the keystream</font>

385
00:15:38,170 --> 00:15:41,949
will start<font color="#E5E5E5"> from the same</font><font color="#CCCCCC"> position and</font>

386
00:15:39,940 --> 00:15:44,770
<font color="#E5E5E5">always be the same and if you've got</font>

387
00:15:41,950 --> 00:15:46,930
repeating keystream<font color="#E5E5E5"> and it's all</font><font color="#CCCCCC"> ex-ored</font>

388
00:15:44,770 --> 00:15:48,400
then you know from a crypto point of

389
00:15:46,930 --> 00:15:50,349
view you<font color="#CCCCCC"> know you can now attack that</font>

390
00:15:48,400 --> 00:15:51,610
because you can get multiple<font color="#E5E5E5"> cases and</font>

391
00:15:50,350 --> 00:15:55,660
you can explore stuff<font color="#CCCCCC"> together and pull</font>

392
00:15:51,610 --> 00:15:57,250
out<font color="#E5E5E5"> the key string so that's the</font><font color="#CCCCCC"> knobs</font>

393
00:15:55,660 --> 00:15:58,810
replay attack we're basically going<font color="#E5E5E5"> to</font>

394
00:15:57,250 --> 00:16:00,280
always<font color="#E5E5E5"> send it you're going to</font><font color="#CCCCCC"> capture</font>

395
00:15:58,810 --> 00:16:01,270
one encrypted notes<font color="#CCCCCC"> in China response</font>

396
00:16:00,280 --> 00:16:03,459
<font color="#CCCCCC">value and then we're gonna use</font><font color="#E5E5E5"> that</font>

397
00:16:01,270 --> 00:16:04,480
<font color="#E5E5E5">every time to make sure the key stream</font>

398
00:16:03,460 --> 00:16:07,900
is always the same

399
00:16:04,480 --> 00:16:11,190
so in<font color="#E5E5E5"> pictures that's after sent the</font>

400
00:16:07,900 --> 00:16:16,140
nonce<font color="#CCCCCC"> you can see is simply the key and</font>

401
00:16:11,190 --> 00:16:16,140
the nonce<font color="#CCCCCC"> is nothing</font><font color="#E5E5E5"> else going on there</font>

402
00:16:16,380 --> 00:16:21,880
so there<font color="#E5E5E5"> are but that's what we're going</font>

403
00:16:19,060 --> 00:16:24,729
to do so as an example<font color="#E5E5E5"> if</font><font color="#CCCCCC"> we were if we</font>

404
00:16:21,880 --> 00:16:27,730
<font color="#E5E5E5">had this encrypted nonce</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> for a a 5</font>

405
00:16:24,730 --> 00:16:29,620
B<font color="#CCCCCC"> 2 DF then perhaps the tag would</font>

406
00:16:27,730 --> 00:16:32,470
respond with<font color="#E5E5E5"> this particular key string</font>

407
00:16:29,620 --> 00:16:35,380
and every time we initialize<font color="#E5E5E5"> that tag</font>

408
00:16:32,470 --> 00:16:36,940
we'll get that key string so that's<font color="#E5E5E5"> the</font>

409
00:16:35,380 --> 00:16:39,820
kind of key bit but why we're doing

410
00:16:36,940 --> 00:16:42,250
nonce replay so we're going to try and

411
00:16:39,820 --> 00:16:44,080
<font color="#E5E5E5">find the read page 0 command because</font><font color="#CCCCCC"> we</font>

412
00:16:42,250 --> 00:16:45,610
<font color="#E5E5E5">already know the contents page 0 it's in</font>

413
00:16:44,080 --> 00:16:48,940
your ID which<font color="#CCCCCC"> is broadcast</font><font color="#E5E5E5"> at the</font>

414
00:16:45,610 --> 00:16:51,420
beginning of<font color="#E5E5E5"> the handshake in clip so we</font>

415
00:16:48,940 --> 00:16:55,450
already<font color="#E5E5E5"> know the</font><font color="#CCCCCC"> answer</font>

416
00:16:51,420 --> 00:16:58,300
there's<font color="#E5E5E5"> the quite have encrypted so</font>

417
00:16:55,450 --> 00:17:00,220
there's 10 bits long<font color="#E5E5E5"> as a thousand 24</font>

418
00:16:58,300 --> 00:17:04,740
<font color="#CCCCCC">possibilities of which there's</font><font color="#E5E5E5"> 16 valid</font>

419
00:17:00,220 --> 00:17:07,900
ones<font color="#E5E5E5"> so we could route the entire space</font>

420
00:17:04,740 --> 00:17:10,960
like this<font color="#E5E5E5"> but</font><font color="#CCCCCC"> actually we can do a</font>

421
00:17:07,900 --> 00:17:13,660
clever bit flipping it clever attack

422
00:17:10,960 --> 00:17:18,460
what we only need to look for<font color="#CCCCCC"> 6</font><font color="#E5E5E5"> bits if</font>

423
00:17:13,660 --> 00:17:21,100
we know that bit<font color="#E5E5E5"> F of the encrypted</font>

424
00:17:18,460 --> 00:17:23,950
<font color="#E5E5E5">command is going</font><font color="#CCCCCC"> to decrypt 1 and bit K</font>

425
00:17:21,099 --> 00:17:25,300
is<font color="#E5E5E5"> going to decrypt</font><font color="#CCCCCC"> to 0 because the</font>

426
00:17:23,950 --> 00:17:28,870
second half is a bit inverted version

427
00:17:25,300 --> 00:17:32,110
<font color="#E5E5E5">the first</font><font color="#CCCCCC"> half and jl m and n will</font>

428
00:17:28,870 --> 00:17:37,179
decrypt the inverse of what<font color="#E5E5E5"> EG h and ie</font>

429
00:17:32,110 --> 00:17:40,090
decrypt<font color="#CCCCCC"> T then we can actually hold</font><font color="#E5E5E5"> jl m</font>

430
00:17:37,180 --> 00:17:42,070
and n as<font color="#E5E5E5"> zeros for example or any values</font>

431
00:17:40,090 --> 00:17:44,709
<font color="#CCCCCC">that we particularly like and then we</font>

432
00:17:42,070 --> 00:17:45,850
can brute<font color="#CCCCCC"> EG</font><font color="#E5E5E5"> h and i until we find</font>

433
00:17:44,710 --> 00:17:50,440
something that

434
00:17:45,850 --> 00:17:54,100
matches when they're both decrypted what

435
00:17:50,440 --> 00:17:55,930
do<font color="#E5E5E5"> we need to prove F and K because yeah</font>

436
00:17:54,100 --> 00:17:58,689
we<font color="#CCCCCC"> don't know what what keystream there</font>

437
00:17:55,930 --> 00:18:01,990
we just<font color="#E5E5E5"> know what</font><font color="#CCCCCC"> it decrypt - so we</font>

438
00:17:58,690 --> 00:18:07,540
only actually<font color="#E5E5E5"> need to group six bits</font><font color="#CCCCCC"> F G</font>

439
00:18:01,990 --> 00:18:09,990
H I K which<font color="#E5E5E5"> is 64</font><font color="#CCCCCC"> States</font><font color="#E5E5E5"> so on average</font>

440
00:18:07,540 --> 00:18:12,790
we'll hit one after stage<font color="#CCCCCC"> few guesses</font>

441
00:18:09,990 --> 00:18:18,370
<font color="#CCCCCC">that make</font><font color="#E5E5E5"> sense yeah everyone</font><font color="#CCCCCC"> have that</font>

442
00:18:12,790 --> 00:18:20,590
<font color="#E5E5E5">good</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> what we found one valid read</font>

443
00:18:18,370 --> 00:18:22,510
command<font color="#E5E5E5"> and so what we're doing we're</font>

444
00:18:20,590 --> 00:18:24,580
going<font color="#E5E5E5"> to initialize</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> tag send our</font>

445
00:18:22,510 --> 00:18:26,080
guess you know and and just keep on

446
00:18:24,580 --> 00:18:27,970
doing it until<font color="#E5E5E5"> we get anything without</font>

447
00:18:26,080 --> 00:18:29,980
the unencrypted response<font color="#E5E5E5"> I have</font><font color="#CCCCCC"> a</font>

448
00:18:27,970 --> 00:18:31,720
response<font color="#CCCCCC"> and once we get something back</font>

449
00:18:29,980 --> 00:18:33,040
then we know we<font color="#E5E5E5"> found one and</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> once</font>

450
00:18:31,720 --> 00:18:35,500
we've got that<font color="#E5E5E5"> we're gonna bit flip back</font>

451
00:18:33,040 --> 00:18:38,080
to<font color="#E5E5E5"> find all the other</font><font color="#CCCCCC"> 15 so we know that</font>

452
00:18:35,500 --> 00:18:42,160
FD Crips<font color="#CCCCCC"> -</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> akkada</font><font color="#E5E5E5"> Crips to</font><font color="#CCCCCC"> zero we</font>

453
00:18:38,080 --> 00:18:44,679
know you know<font color="#CCCCCC"> eega should</font><font color="#E5E5E5"> I decrypt the</font>

454
00:18:42,160 --> 00:18:47,860
inverse<font color="#E5E5E5"> of what</font><font color="#CCCCCC"> J Elliman and decrypt T</font>

455
00:18:44,680 --> 00:18:50,050
so we can<font color="#E5E5E5"> flip bits so because it's like</font>

456
00:18:47,860 --> 00:18:53,379
an<font color="#E5E5E5"> XOR because it's a like a stream</font>

457
00:18:50,050 --> 00:18:55,840
cipher<font color="#E5E5E5"> we can XOR bits in the cipher</font>

458
00:18:53,380 --> 00:18:58,090
<font color="#E5E5E5">text</font><font color="#CCCCCC"> and that</font><font color="#E5E5E5"> will act sorry we can in</font>

459
00:18:55,840 --> 00:18:59,560
become flip bits in the<font color="#CCCCCC"> ciphertext</font><font color="#E5E5E5"> and</font>

460
00:18:58,090 --> 00:19:02,199
that will flip the<font color="#E5E5E5"> corresponding bit in</font>

461
00:18:59,560 --> 00:19:03,730
the plaintext which is really neat

462
00:19:02,200 --> 00:19:06,880
because<font color="#CCCCCC"> of there's no real integrity</font>

463
00:19:03,730 --> 00:19:08,050
<font color="#CCCCCC">protection so how are</font><font color="#E5E5E5"> the integrity</font><font color="#CCCCCC"> of</font>

464
00:19:06,880 --> 00:19:09,640
prediction that<font color="#E5E5E5"> they provide is</font>

465
00:19:08,050 --> 00:19:11,530
literally<font color="#E5E5E5"> for</font><font color="#CCCCCC"> comms integrity not for</font>

466
00:19:09,640 --> 00:19:14,800
light side for<font color="#CCCCCC"> integrity which is where</font>

467
00:19:11,530 --> 00:19:16,990
they went wrong<font color="#E5E5E5"> clearly</font><font color="#CCCCCC"> so we can flip a</font>

468
00:19:14,800 --> 00:19:19,330
bit and turn a read<font color="#CCCCCC"> inverting</font><font color="#E5E5E5"> into a</font>

469
00:19:16,990 --> 00:19:22,060
read or read into a reverted we can flip

470
00:19:19,330 --> 00:19:24,010
<font color="#CCCCCC">a page</font><font color="#E5E5E5"> bit and turn like from one page</font>

471
00:19:22,060 --> 00:19:25,690
read into a different<font color="#E5E5E5"> page</font><font color="#CCCCCC"> free so if we</font>

472
00:19:24,010 --> 00:19:28,330
flip all<font color="#E5E5E5"> of those bits</font><font color="#CCCCCC"> honest in a</font>

473
00:19:25,690 --> 00:19:31,660
sequence where<font color="#CCCCCC"> you can find all you know</font>

474
00:19:28,330 --> 00:19:33,970
the other<font color="#E5E5E5"> 15 possible commands we have</font>

475
00:19:31,660 --> 00:19:36,790
now got a set<font color="#E5E5E5"> of</font><font color="#CCCCCC"> 16 encrypted commands</font>

476
00:19:33,970 --> 00:19:39,010
which are all valid reads<font color="#E5E5E5"> and one of</font>

477
00:19:36,790 --> 00:19:42,870
those<font color="#E5E5E5"> is repaid</font><font color="#CCCCCC"> zero which is what we're</font>

478
00:19:39,010 --> 00:19:42,870
<font color="#CCCCCC">going to</font><font color="#E5E5E5"> look for so</font>

479
00:19:43,950 --> 00:19:51,690
<font color="#E5E5E5">all we're going to do is initialize the</font>

480
00:19:46,169 --> 00:19:53,970
tag<font color="#CCCCCC"> sent</font><font color="#E5E5E5"> one and test it and when it</font>

481
00:19:51,690 --> 00:19:55,080
succeeds<font color="#CCCCCC"> retrieves</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> keystream that it</font>

482
00:19:53,970 --> 00:19:56,760
provides and then<font color="#E5E5E5"> we're going to use</font>

483
00:19:55,080 --> 00:19:59,070
<font color="#CCCCCC">that key stream layer to actually attack</font>

484
00:19:56,760 --> 00:20:02,250
the<font color="#E5E5E5"> tag so the way we test it is we</font>

485
00:19:59,070 --> 00:20:03,000
assume we're right<font color="#CCCCCC"> we assume it's read</font>

486
00:20:02,250 --> 00:20:05,070
page<font color="#CCCCCC"> zero</font>

487
00:20:03,000 --> 00:20:07,500
<font color="#CCCCCC">what I'll apply</font><font color="#E5E5E5"> our encrypted command</font>

488
00:20:05,070 --> 00:20:09,330
decrypt to which means that we<font color="#E5E5E5"> assume</font>

489
00:20:07,500 --> 00:20:11,100
the response we get back is then going

490
00:20:09,330 --> 00:20:12,870
to decrypt to<font color="#E5E5E5"> the UID which is the</font>

491
00:20:11,100 --> 00:20:17,549
contents page<font color="#E5E5E5"> zero which we know</font><font color="#CCCCCC"> is</font>

492
00:20:12,870 --> 00:20:19,678
public we XOR our guests with the<font color="#CCCCCC"> read</font>

493
00:20:17,549 --> 00:20:21,929
page zero we XOR the response with our

494
00:20:19,679 --> 00:20:23,850
UI with the UID<font color="#E5E5E5"> and</font><font color="#CCCCCC"> that'll give us the</font>

495
00:20:21,929 --> 00:20:26,789
<font color="#E5E5E5">first forty two bits a key stream if</font>

496
00:20:23,850 --> 00:20:30,689
we're right<font color="#CCCCCC"> we don't know four right so</font>

497
00:20:26,789 --> 00:20:32,700
what we do is we take the key stream and

498
00:20:30,690 --> 00:20:36,419
we make a<font color="#E5E5E5"> 40 bit version of the read</font>

499
00:20:32,700 --> 00:20:39,330
page<font color="#CCCCCC"> zero command which using that</font>

500
00:20:36,419 --> 00:20:43,340
length extension<font color="#E5E5E5"> in comes integrity I</font>

501
00:20:39,330 --> 00:20:46,799
talked about<font color="#E5E5E5"> and that simply a case of</font>

502
00:20:43,340 --> 00:20:48,658
build that<font color="#E5E5E5"> read page zero command</font><font color="#CCCCCC"> XOR it</font>

503
00:20:46,799 --> 00:20:50,100
with the first 40 bits of the key<font color="#E5E5E5"> stream</font>

504
00:20:48,659 --> 00:20:52,830
which will essentially encrypt it<font color="#E5E5E5"> in</font>

505
00:20:50,100 --> 00:20:54,840
this<font color="#E5E5E5"> flows the tag back so</font><font color="#CCCCCC"> it started</font>

506
00:20:52,830 --> 00:20:58,590
<font color="#E5E5E5">with</font><font color="#CCCCCC"> the same key stream</font><font color="#E5E5E5"> and send the 40</font>

507
00:20:54,840 --> 00:21:01,980
bit command now you'll get back a<font color="#E5E5E5"> 32 bit</font>

508
00:20:58,590 --> 00:21:03,809
response if it's the error response then

509
00:21:01,980 --> 00:21:06,210
that means our key streams invalid and

510
00:21:03,809 --> 00:21:08,340
<font color="#CCCCCC">odd</font><font color="#E5E5E5"> on our command didn't decrypt</font>

511
00:21:06,210 --> 00:21:10,799
properly so that guess is wrong we've

512
00:21:08,340 --> 00:21:12,658
got to the<font color="#E5E5E5"> next guess and go and cycle</font>

513
00:21:10,799 --> 00:21:15,179
through<font color="#CCCCCC"> all 16</font><font color="#E5E5E5"> but when you get a</font>

514
00:21:12,659 --> 00:21:17,750
<font color="#CCCCCC">response there isn't there a</font><font color="#E5E5E5"> response</font>

515
00:21:15,179 --> 00:21:20,279
<font color="#CCCCCC">that</font><font color="#E5E5E5"> means the tank successfully</font>

516
00:21:17,750 --> 00:21:21,779
<font color="#E5E5E5">accepted that 40 bit command which means</font>

517
00:21:20,279 --> 00:21:25,230
it decrypted properly the comms

518
00:21:21,779 --> 00:21:27,960
integrity stood up<font color="#CCCCCC"> we understood it</font><font color="#E5E5E5"> and</font>

519
00:21:25,230 --> 00:21:30,570
therefore replied with what is<font color="#E5E5E5"> page</font><font color="#CCCCCC"> zero</font>

520
00:21:27,960 --> 00:21:32,730
at which<font color="#E5E5E5"> point we can then XOR that with</font>

521
00:21:30,570 --> 00:21:35,939
what<font color="#CCCCCC"> we know is paid to or the</font><font color="#E5E5E5"> UID and</font>

522
00:21:32,730 --> 00:21:37,889
<font color="#E5E5E5">we've now got another 32 bits of key</font>

523
00:21:35,940 --> 00:21:39,870
<font color="#E5E5E5">stream so now</font><font color="#CCCCCC"> what's 72 bits of key</font>

524
00:21:37,889 --> 00:21:43,860
stream from this<font color="#E5E5E5"> starting position of</font>

525
00:21:39,870 --> 00:21:46,799
that replayed encrypted knots which is

526
00:21:43,860 --> 00:21:48,840
what<font color="#E5E5E5"> basically say here so you can then</font>

527
00:21:46,799 --> 00:21:53,039
<font color="#E5E5E5">use</font><font color="#CCCCCC"> that key stream to read out every</font>

528
00:21:48,840 --> 00:21:57,169
page of<font color="#E5E5E5"> the tag and that will give you</font>

529
00:21:53,039 --> 00:21:59,780
these pages<font color="#E5E5E5"> hopefully including the keys</font>

530
00:21:57,170 --> 00:22:01,550
<font color="#CCCCCC">I talked very briefly</font><font color="#E5E5E5"> about you know go</font>

531
00:21:59,780 --> 00:22:03,680
<font color="#E5E5E5">get the code for our fiddler</font><font color="#CCCCCC"> Dakota</font>

532
00:22:01,550 --> 00:22:05,690
<font color="#E5E5E5">Britain is all in in the github</font><font color="#CCCCCC"> I'm</font>

533
00:22:03,680 --> 00:22:08,810
<font color="#E5E5E5">Jesse</font><font color="#CCCCCC"> check</font><font color="#E5E5E5"> I should have</font><font color="#CCCCCC"> check it</font>

534
00:22:05,690 --> 00:22:11,960
should be<font color="#CCCCCC"> life it should</font><font color="#E5E5E5"> be there</font>

535
00:22:08,810 --> 00:22:15,440
it's just see you see some<font color="#E5E5E5"> of that this</font>

536
00:22:11,960 --> 00:22:20,660
<font color="#E5E5E5">is my code it's a really bad function</font>

537
00:22:15,440 --> 00:22:23,630
names and that's the<font color="#CCCCCC"> comedy bit actually</font>

538
00:22:20,660 --> 00:22:25,130
<font color="#E5E5E5">sending and receiving data but</font><font color="#CCCCCC"> you can</font>

539
00:22:23,630 --> 00:22:26,660
pinch all of that from other bits<font color="#E5E5E5"> of our</font>

540
00:22:25,130 --> 00:22:30,500
<font color="#E5E5E5">food look because you can see it being</font>

541
00:22:26,660 --> 00:22:33,590
done<font color="#E5E5E5"> elsewhere in our fiddler so these</font>

542
00:22:30,500 --> 00:22:41,120
are the six<font color="#E5E5E5"> coins I added and I modify</font>

543
00:22:33,590 --> 00:22:43,580
sniff<font color="#E5E5E5"> PWM so if you were going to do the</font>

544
00:22:41,120 --> 00:22:45,620
tack one you simply<font color="#CCCCCC"> need to</font><font color="#E5E5E5"> get one</font>

545
00:22:43,580 --> 00:22:47,240
encrypted<font color="#CCCCCC"> challenge/response non-chinese</font>

546
00:22:45,620 --> 00:22:49,790
response value and then<font color="#E5E5E5"> you will</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> a</font>

547
00:22:47,240 --> 00:22:51,260
tech crack<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> it's true crack using</font>

548
00:22:49,790 --> 00:22:52,340
<font color="#E5E5E5">those values against that card and then</font>

549
00:22:51,260 --> 00:22:57,170
it will crack the card

550
00:22:52,340 --> 00:23:01,639
so you want<font color="#E5E5E5"> to see that demo again yeah</font>

551
00:22:57,170 --> 00:23:04,700
<font color="#E5E5E5">yeah</font><font color="#CCCCCC"> it's gonna be interactive today</font><font color="#E5E5E5"> I</font>

552
00:23:01,640 --> 00:23:14,330
would like so<font color="#E5E5E5"> I</font><font color="#CCCCCC"> have a high tech two</font>

553
00:23:04,700 --> 00:23:27,740
card here<font color="#CCCCCC"> no better better find my</font><font color="#E5E5E5"> our</font>

554
00:23:14,330 --> 00:23:29,720
fiddler yeah

555
00:23:27,740 --> 00:23:33,620
so there's off fiddler<font color="#E5E5E5"> in fact to tell</font>

556
00:23:29,720 --> 00:23:36,850
<font color="#E5E5E5">you what cuz it</font><font color="#CCCCCC"> wasn't so great was it</font>

557
00:23:33,620 --> 00:23:39,469
yesterday in that<font color="#E5E5E5"> it's there we go so</font>

558
00:23:36,850 --> 00:23:46,219
there's my new commands<font color="#E5E5E5"> that I've added</font>

559
00:23:39,470 --> 00:23:50,360
and there's the<font color="#E5E5E5"> sniff PWM modification I</font>

560
00:23:46,220 --> 00:23:54,230
added I won't<font color="#CCCCCC"> if there the whole</font><font color="#E5E5E5"> thing</font>

561
00:23:50,360 --> 00:23:56,560
<font color="#CCCCCC">I'll just use some new some values that</font>

562
00:23:54,230 --> 00:23:56,560
I've got

563
00:24:05,250 --> 00:24:10,500
so I've got<font color="#E5E5E5"> files it's like captured</font>

564
00:24:08,640 --> 00:24:15,690
<font color="#CCCCCC">encrypted non-sitting challenge-response</font>

565
00:24:10,500 --> 00:24:17,880
values it's like you know here we saves

566
00:24:15,690 --> 00:24:33,630
me how to do<font color="#CCCCCC"> it live where's my mouse</font>

567
00:24:17,880 --> 00:24:35,429
<font color="#CCCCCC">gone okay so hopefully hope</font><font color="#E5E5E5"> you can see</font>

568
00:24:33,630 --> 00:24:37,860
<font color="#E5E5E5">that that's</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> then so it's searching</font>

569
00:24:35,429 --> 00:24:40,470
for<font color="#E5E5E5"> any valid read commands and then</font>

570
00:24:37,860 --> 00:24:42,030
it's going<font color="#E5E5E5"> to be new if so</font><font color="#CCCCCC"> do the bit</font>

571
00:24:40,470 --> 00:24:43,590
flip it<font color="#E5E5E5"> and find the</font><font color="#CCCCCC"> repaid zero and</font>

572
00:24:42,030 --> 00:24:49,320
then<font color="#E5E5E5"> it just pops out and reads all</font>

573
00:24:43,590 --> 00:24:52,080
eight pages<font color="#E5E5E5"> so that's the UID there that</font>

574
00:24:49,320 --> 00:24:55,770
is the<font color="#CCCCCC"> liver</font><font color="#E5E5E5"> safety bits the key that's</font>

575
00:24:52,080 --> 00:24:57,990
<font color="#CCCCCC">the upper sixteen bits of the key</font><font color="#E5E5E5"> that's</font>

576
00:24:55,770 --> 00:24:59,760
<font color="#E5E5E5">the conflict by and</font><font color="#CCCCCC"> tag password</font>

577
00:24:57,990 --> 00:25:02,520
followed by four pages of<font color="#CCCCCC"> user day yet</font>

578
00:24:59,760 --> 00:25:04,350
<font color="#E5E5E5">so that's the normal attack but if these</font>

579
00:25:02,520 --> 00:25:05,850
pages have<font color="#E5E5E5"> read protected and you don't</font>

580
00:25:04,350 --> 00:25:09,270
get the key<font color="#E5E5E5"> you're then a little it's</font>

581
00:25:05,850 --> 00:25:18,120
done<font color="#E5E5E5"> once you've got the key you can</font><font color="#CCCCCC"> run</font>

582
00:25:09,270 --> 00:25:20,010
I<font color="#CCCCCC"> tend to read it</font><font color="#E5E5E5"> and also paste that in</font>

583
00:25:18,120 --> 00:25:23,158
<font color="#E5E5E5">and that</font><font color="#CCCCCC"> would just</font><font color="#E5E5E5"> read whatever</font><font color="#CCCCCC"> tagged</font>

584
00:25:20,010 --> 00:25:29,179
with<font color="#E5E5E5"> a high tag - tag I've got that uses</font>

585
00:25:23,159 --> 00:25:31,590
that<font color="#E5E5E5"> same key so you can see yeah so</font>

586
00:25:29,179 --> 00:25:33,450
<font color="#CCCCCC">much you've stolen</font><font color="#E5E5E5"> the key you don't</font>

587
00:25:31,590 --> 00:25:35,580
need to crack cards from that system<font color="#CCCCCC"> you</font>

588
00:25:33,450 --> 00:25:38,309
can<font color="#E5E5E5"> just go in like obviously use the</font>

589
00:25:35,580 --> 00:25:44,010
key<font color="#E5E5E5"> to just read</font><font color="#CCCCCC"> everyone's tags</font><font color="#E5E5E5"> unless</font>

590
00:25:38,309 --> 00:25:48,750
of course they<font color="#E5E5E5"> have their page the pages</font>

591
00:25:44,010 --> 00:25:50,429
be protected<font color="#E5E5E5"> so right so I hope that</font>

592
00:25:48,750 --> 00:25:53,220
wasn't too<font color="#E5E5E5"> boring kind of going back</font>

593
00:25:50,429 --> 00:25:54,780
over<font color="#E5E5E5"> all that</font><font color="#CCCCCC"> again I say</font><font color="#E5E5E5"> copy</font><font color="#CCCCCC"> attacks</font>

594
00:25:53,220 --> 00:25:57,270
is dead<font color="#E5E5E5"> easy just stick all into the B</font>

595
00:25:54,780 --> 00:26:00,030
tag and then hit clone<font color="#E5E5E5"> when you</font><font color="#CCCCCC"> clone</font>

596
00:25:57,270 --> 00:26:03,179
you need to know the tag password or key

597
00:26:00,030 --> 00:26:08,299
for the blank which is in the datasheet

598
00:26:03,179 --> 00:26:08,299
<font color="#E5E5E5">for the blank</font><font color="#CCCCCC"> identity tags</font>

599
00:26:08,530 --> 00:26:12,070
so<font color="#E5E5E5"> I</font><font color="#CCCCCC"> said the pages could read read</font>

600
00:26:10,600 --> 00:26:14,080
<font color="#E5E5E5">protected which means we do need</font>

601
00:26:12,070 --> 00:26:17,260
<font color="#CCCCCC">different attacks</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> attacked to the</font>

602
00:26:14,080 --> 00:26:19,510
time when<font color="#CCCCCC"> we trade off</font><font color="#E5E5E5"> basically the</font>

603
00:26:17,260 --> 00:26:22,960
<font color="#E5E5E5">keys 48 bits long</font><font color="#CCCCCC"> so the keys place is</font>

604
00:26:19,510 --> 00:26:25,420
<font color="#CCCCCC">massive and it's too big to build a</font>

605
00:26:22,960 --> 00:26:27,430
table<font color="#E5E5E5"> for the entire key space and the</font>

606
00:26:25,420 --> 00:26:29,020
protocol is only about<font color="#CCCCCC"> 5 kilobits</font><font color="#E5E5E5"> a</font>

607
00:26:27,430 --> 00:26:30,730
second so it's way too slow to do an

608
00:26:29,020 --> 00:26:32,800
online<font color="#CCCCCC"> attack so we need to do some kind</font>

609
00:26:30,730 --> 00:26:36,160
of<font color="#E5E5E5"> offline attack so the approach they</font>

610
00:26:32,800 --> 00:26:38,530
took the academics was a<font color="#CCCCCC"> builder</font><font color="#E5E5E5"> table</font>

611
00:26:36,160 --> 00:26:40,660
for part<font color="#E5E5E5"> of the problem and then do some</font>

612
00:26:38,530 --> 00:26:43,780
kind of an online attack<font color="#E5E5E5"> to get</font>

613
00:26:40,660 --> 00:26:45,490
something to<font color="#E5E5E5"> look up in the table</font><font color="#CCCCCC"> so</font>

614
00:26:43,780 --> 00:26:51,660
<font color="#E5E5E5">what they do is they build</font><font color="#CCCCCC"> a table to to</font>

615
00:26:45,490 --> 00:26:51,660
the<font color="#E5E5E5"> 37 entries which is big but doable</font>

616
00:26:52,290 --> 00:27:00,430
it's a 2048 of the entire space so what

617
00:26:57,160 --> 00:27:03,160
they that table consists of is literally

618
00:27:00,430 --> 00:27:04,660
pure energy<font color="#E5E5E5"> states and 48 bits of</font><font color="#CCCCCC"> key</font>

619
00:27:03,160 --> 00:27:09,060
<font color="#CCCCCC">stream generated from each of those</font>

620
00:27:04,660 --> 00:27:13,360
states so what you<font color="#CCCCCC"> then do is recover</font>

621
00:27:09,060 --> 00:27:15,639
<font color="#E5E5E5">2048 bits of key stream from the tag and</font>

622
00:27:13,360 --> 00:27:17,459
then<font color="#CCCCCC"> you</font><font color="#E5E5E5"> slide through that key stream</font>

623
00:27:15,640 --> 00:27:20,410
looking for<font color="#E5E5E5"> matches in</font><font color="#CCCCCC"> your table and</font>

624
00:27:17,460 --> 00:27:23,860
<font color="#E5E5E5">probability says</font><font color="#CCCCCC"> you have</font><font color="#E5E5E5"> a least</font><font color="#CCCCCC"> one</font>

625
00:27:20,410 --> 00:27:25,930
match<font color="#CCCCCC"> there will be a</font><font color="#E5E5E5"> valid match with</font>

626
00:27:23,860 --> 00:27:29,320
with high probability<font color="#CCCCCC"> isn't only</font><font color="#E5E5E5"> what</font>

627
00:27:25,930 --> 00:27:31,420
they would say at that<font color="#CCCCCC"> point in every</font>

628
00:27:29,320 --> 00:27:34,659
test I've done<font color="#E5E5E5"> is always found it so</font>

629
00:27:31,420 --> 00:27:39,150
<font color="#E5E5E5">yeah so in my small sample set of like</font>

630
00:27:34,660 --> 00:27:41,140
50 tests out of like<font color="#CCCCCC"> to 237</font><font color="#E5E5E5"> it worked</font><font color="#CCCCCC"> so</font>

631
00:27:39,150 --> 00:27:43,450
from there you can go back<font color="#E5E5E5"> to pure</font>

632
00:27:41,140 --> 00:27:45,640
energy<font color="#E5E5E5"> state</font><font color="#CCCCCC"> to the initialization steps</font>

633
00:27:43,450 --> 00:27:47,980
<font color="#E5E5E5">where you can extract the nonce</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then</font>

634
00:27:45,640 --> 00:27:52,500
you can XOR that with the key bits to

635
00:27:47,980 --> 00:27:55,870
get the key out<font color="#CCCCCC"> ok so to build the table</font>

636
00:27:52,500 --> 00:27:57,850
<font color="#E5E5E5">you literally you need to start from a</font>

637
00:27:55,870 --> 00:27:59,500
<font color="#CCCCCC">random state</font><font color="#E5E5E5"> like all the zeros is not</font>

638
00:27:57,850 --> 00:28:02,169
good<font color="#CCCCCC"> because it doesn't really shift</font>

639
00:27:59,500 --> 00:28:06,250
<font color="#CCCCCC">incorrectly so</font><font color="#E5E5E5"> you just pick some random</font>

640
00:28:02,170 --> 00:28:07,960
<font color="#E5E5E5">state store the 48</font><font color="#CCCCCC"> bit</font><font color="#E5E5E5"> stay generate 48</font>

641
00:28:06,250 --> 00:28:09,820
bits of key stream store it with that

642
00:28:07,960 --> 00:28:15,160
<font color="#E5E5E5">and then just advance from the</font><font color="#CCCCCC"> stored</font>

643
00:28:09,820 --> 00:28:17,889
<font color="#E5E5E5">state by 2048 States and then and this</font>

644
00:28:15,160 --> 00:28:19,990
<font color="#E5E5E5">is the big thing</font><font color="#CCCCCC"> sort your table on</font><font color="#E5E5E5"> the</font>

645
00:28:17,890 --> 00:28:22,360
key stream output<font color="#E5E5E5"> now you can't</font>

646
00:28:19,990 --> 00:28:24,040
presort it as you go

647
00:28:22,360 --> 00:28:29,070
unless you<font color="#E5E5E5"> build some massive kind of</font>

648
00:28:24,040 --> 00:28:31,450
binary<font color="#E5E5E5"> tree which I found</font><font color="#CCCCCC"> impossible</font><font color="#E5E5E5"> so</font>

649
00:28:29,070 --> 00:28:32,919
I'll come back<font color="#CCCCCC"> to it but I've</font><font color="#E5E5E5"> had</font>

650
00:28:31,450 --> 00:28:34,990
<font color="#CCCCCC">multiple attempts at building</font><font color="#E5E5E5"> these</font>

651
00:28:32,920 --> 00:28:36,700
tables efficiently and<font color="#E5E5E5"> I can't find it a</font>

652
00:28:34,990 --> 00:28:39,130
really good<font color="#E5E5E5"> one</font><font color="#CCCCCC"> my first</font><font color="#E5E5E5"> attempt is</font>

653
00:28:36,700 --> 00:28:44,560
going to take nine days I've got it down

654
00:28:39,130 --> 00:28:46,600
<font color="#CCCCCC">to two days</font><font color="#E5E5E5"> by the end of it yeah so</font>

655
00:28:44,560 --> 00:28:49,780
this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> interesting</font><font color="#CCCCCC"> though so in the</font>

656
00:28:46,600 --> 00:28:51,580
paper<font color="#E5E5E5"> they went up with a but an</font>

657
00:28:49,780 --> 00:28:54,639
academic<font color="#CCCCCC"> writes the next proposition</font>

658
00:28:51,580 --> 00:28:55,870
introduces a small trick yeah what they

659
00:28:54,640 --> 00:28:58,180
mean is magic

660
00:28:55,870 --> 00:29:00,399
<font color="#CCCCCC">all right</font><font color="#E5E5E5"> good</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> now I'll</font>

661
00:28:58,180 --> 00:29:02,470
search for this<font color="#E5E5E5"> and I can't find</font>

662
00:29:00,400 --> 00:29:03,970
anywhere<font color="#E5E5E5"> where this is in somebody</font>

663
00:29:02,470 --> 00:29:06,280
else's paper<font color="#CCCCCC"> so this must just be</font>

664
00:29:03,970 --> 00:29:07,870
something<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is generally known about</font>

665
00:29:06,280 --> 00:29:10,389
<font color="#E5E5E5">linear feedback shift registers that</font><font color="#CCCCCC"> I</font>

666
00:29:07,870 --> 00:29:12,040
don't know<font color="#E5E5E5"> well I didn't know you</font><font color="#CCCCCC"> know</font>

667
00:29:10,390 --> 00:29:13,630
they also use weren't intuitively which

668
00:29:12,040 --> 00:29:15,580
is again<font color="#E5E5E5"> there's</font><font color="#CCCCCC"> another like cinnamon</font>

669
00:29:13,630 --> 00:29:17,740
<font color="#E5E5E5">for magic it means that I'm not</font><font color="#CCCCCC"> going to</font>

670
00:29:15,580 --> 00:29:20,710
<font color="#E5E5E5">tell you how this</font><font color="#CCCCCC"> works but</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> just</font>

671
00:29:17,740 --> 00:29:22,780
have<font color="#E5E5E5"> to trust me now</font><font color="#CCCCCC"> I stared at</font><font color="#E5E5E5"> this</font>

672
00:29:20,710 --> 00:29:24,910
equation<font color="#CCCCCC"> on and off for about three</font>

673
00:29:22,780 --> 00:29:27,040
<font color="#CCCCCC">weeks before</font><font color="#E5E5E5"> I finally understood what</font>

674
00:29:24,910 --> 00:29:27,670
it was<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> saying and what it's</font>

675
00:29:27,040 --> 00:29:29,350
<font color="#E5E5E5">actually saying is really</font>

676
00:29:27,670 --> 00:29:30,910
<font color="#E5E5E5">straightforward and you'll go for the</font>

677
00:29:29,350 --> 00:29:35,830
next<font color="#E5E5E5"> few slides if I think</font><font color="#CCCCCC"> well why was</font>

678
00:29:30,910 --> 00:29:36,250
that so hard<font color="#CCCCCC"> but</font><font color="#E5E5E5"> I yeah it didn't make</font>

679
00:29:35,830 --> 00:29:39,760
<font color="#CCCCCC">sense</font>

680
00:29:36,250 --> 00:29:42,670
I'll explain<font color="#E5E5E5"> when</font><font color="#CCCCCC"> I get it what</font><font color="#E5E5E5"> it's</font>

681
00:29:39,760 --> 00:29:43,930
saying is<font color="#CCCCCC"> that the the difference</font>

682
00:29:42,670 --> 00:29:46,600
<font color="#CCCCCC">between the linear</font><font color="#E5E5E5"> difference between</font>

683
00:29:43,930 --> 00:29:49,720
<font color="#E5E5E5">estate and the nth successor so that you</font>

684
00:29:46,600 --> 00:29:51,939
<font color="#E5E5E5">say so for n we're</font><font color="#CCCCCC"> going to assume 2048</font>

685
00:29:49,720 --> 00:29:52,690
for this for all this why<font color="#CCCCCC"> use a and</font><font color="#E5E5E5"> all</font>

686
00:29:51,940 --> 00:29:55,150
the way through<font color="#CCCCCC"> it because</font><font color="#E5E5E5"> it's a</font>

687
00:29:52,690 --> 00:29:57,820
generalization right but<font color="#E5E5E5"> between a state</font>

688
00:29:55,150 --> 00:30:04,030
and<font color="#CCCCCC"> the state you get to 2048 psychotics</font>

689
00:29:57,820 --> 00:30:07,419
later<font color="#E5E5E5"> is the linear differences between</font>

690
00:30:04,030 --> 00:30:08,950
those two states<font color="#E5E5E5"> is a combination of the</font>

691
00:30:07,420 --> 00:30:12,310
linear differences between<font color="#E5E5E5"> each of the</font>

692
00:30:08,950 --> 00:30:16,540
bits<font color="#E5E5E5"> in the starting state having been</font>

693
00:30:12,310 --> 00:30:17,679
advanced<font color="#E5E5E5"> 2048</font><font color="#CCCCCC"> States so what</font><font color="#E5E5E5"> you</font>

694
00:30:16,540 --> 00:30:20,790
essentially what we're going to do is

695
00:30:17,680 --> 00:30:23,800
we're going<font color="#CCCCCC"> to if</font><font color="#E5E5E5"> we create 48 states</font>

696
00:30:20,790 --> 00:30:25,629
where each one<font color="#E5E5E5"> only had one bit that was</font>

697
00:30:23,800 --> 00:30:27,730
a<font color="#E5E5E5"> 1 right</font><font color="#CCCCCC"> so we start with</font><font color="#E5E5E5"> all zeros</font>

698
00:30:25,630 --> 00:30:29,380
with<font color="#E5E5E5"> 1 on the end and then like shifting</font>

699
00:30:27,730 --> 00:30:33,610
<font color="#E5E5E5">shifting shifting all the way through</font>

700
00:30:29,380 --> 00:30:36,039
<font color="#E5E5E5">and we jumped those forward by 2048</font>

701
00:30:33,610 --> 00:30:37,809
<font color="#E5E5E5">States we'd have</font>

702
00:30:36,039 --> 00:30:40,570
Starla's would have<font color="#CCCCCC"> liked destination</font>

703
00:30:37,809 --> 00:30:44,979
states for every bit we<font color="#E5E5E5"> could then look</font>

704
00:30:40,570 --> 00:30:47,678
at the any random<font color="#E5E5E5"> state that we wanted</font>

705
00:30:44,979 --> 00:30:50,859
<font color="#E5E5E5">to advance and for every bit that's on</font>

706
00:30:47,679 --> 00:30:53,440
take the<font color="#E5E5E5"> corresponding destination</font>

707
00:30:50,859 --> 00:30:55,928
states that each of those individual

708
00:30:53,440 --> 00:30:58,119
bits gets to<font color="#CCCCCC"> and XOR all of those</font>

709
00:30:55,929 --> 00:31:00,639
together and through the<font color="#E5E5E5"> process</font>

710
00:30:58,119 --> 00:31:02,408
<font color="#CCCCCC">literally</font><font color="#E5E5E5"> magic that will give us the</font>

711
00:31:00,639 --> 00:31:10,658
state<font color="#E5E5E5"> you have got to had you moved</font>

712
00:31:02,409 --> 00:31:12,279
state s<font color="#CCCCCC"> forward 2048 states yes</font><font color="#E5E5E5"> but why</font>

713
00:31:10,659 --> 00:31:15,070
can you XOR them all together

714
00:31:12,279 --> 00:31:17,019
that's why then it's done<font color="#CCCCCC"> oh I still</font>

715
00:31:15,070 --> 00:31:20,590
don't get why it works<font color="#E5E5E5"> but I've tested</font>

716
00:31:17,019 --> 00:31:23,229
it it<font color="#CCCCCC"> definitely folks so I'll</font>

717
00:31:20,590 --> 00:31:26,320
give it you<font color="#CCCCCC"> know right so so</font><font color="#E5E5E5"> you put</font>

718
00:31:23,229 --> 00:31:29,409
<font color="#E5E5E5">into canto V naught would be the state</font>

719
00:31:26,320 --> 00:31:32,649
the<font color="#CCCCCC"> N successor of</font><font color="#E5E5E5"> the state where a bit</font>

720
00:31:29,409 --> 00:31:34,690
naught is a<font color="#E5E5E5"> 1</font><font color="#CCCCCC"> d 1</font><font color="#E5E5E5"> would be</font><font color="#CCCCCC"> mo bit 1 is 1</font>

721
00:31:32,649 --> 00:31:39,629
<font color="#E5E5E5">D 2 bit 2 is 1</font>

722
00:31:34,690 --> 00:31:43,239
<font color="#E5E5E5">you build up 48 of those and then if if</font>

723
00:31:39,629 --> 00:31:46,570
success was this<font color="#E5E5E5"> fort a bit state which</font>

724
00:31:43,239 --> 00:31:49,599
I've shortened for brevity then for<font color="#E5E5E5"> each</font>

725
00:31:46,570 --> 00:31:51,009
<font color="#E5E5E5">one you take the destination state and</font>

726
00:31:49,599 --> 00:31:53,168
you detect<font color="#E5E5E5"> saw the whole lot together</font><font color="#CCCCCC"> so</font>

727
00:31:51,009 --> 00:31:56,080
bit forty sevens not on so we ignore

728
00:31:53,169 --> 00:32:00,190
that<font color="#E5E5E5"> but bit 46 and 45 are so you take D</font>

729
00:31:56,080 --> 00:32:03,340
46 and D 45 and we also take D 3 D 2 and

730
00:32:00,190 --> 00:32:06,669
D 1<font color="#CCCCCC"> o</font><font color="#E5E5E5"> C not D 0 X all</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> of those</font>

731
00:32:03,340 --> 00:32:11,799
together and that'll advance<font color="#E5E5E5"> s by 2048</font>

732
00:32:06,669 --> 00:32:13,210
<font color="#CCCCCC">States the reason why this what we'll</font>

733
00:32:11,799 --> 00:32:17,979
<font color="#E5E5E5">have is whether</font><font color="#CCCCCC"> this equation so hard to</font>

734
00:32:13,210 --> 00:32:24,429
understand<font color="#E5E5E5"> is because di is a 48-bit</font>

735
00:32:17,979 --> 00:32:25,960
state but<font color="#E5E5E5"> si is a single bit and then</font>

736
00:32:24,429 --> 00:32:28,539
maybe<font color="#E5E5E5"> maybe I'm just not used for the</font>

737
00:32:25,960 --> 00:32:30,460
way academics<font color="#E5E5E5"> like my death but</font><font color="#CCCCCC"> I died</font>

738
00:32:28,539 --> 00:32:32,408
<font color="#E5E5E5">it would</font><font color="#CCCCCC"> it would have expected</font><font color="#E5E5E5"> them to</font>

739
00:32:30,460 --> 00:32:36,909
have<font color="#E5E5E5"> been of the same sort of size and</font>

740
00:32:32,409 --> 00:32:39,009
so I've<font color="#E5E5E5"> been very</font><font color="#CCCCCC"> confused by that but</font>

741
00:32:36,909 --> 00:32:40,899
yeah that's kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> what we're doing</font>

742
00:32:39,009 --> 00:32:42,460
that's<font color="#E5E5E5"> what the</font><font color="#CCCCCC"> equation means which is</font>

743
00:32:40,899 --> 00:32:45,129
<font color="#E5E5E5">really simple when you</font><font color="#CCCCCC"> look at it like</font>

744
00:32:42,460 --> 00:32:46,830
in those<font color="#E5E5E5"> terms now I think but I just</font>

745
00:32:45,129 --> 00:32:49,299
did not<font color="#E5E5E5"> understand what</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> was saying</font>

746
00:32:46,830 --> 00:32:51,730
or why it would work

747
00:32:49,299 --> 00:32:53,649
the theater space<font color="#E5E5E5"> so pseudocode for</font>

748
00:32:51,730 --> 00:32:56,769
building the table<font color="#CCCCCC"> it's really</font>

749
00:32:53,649 --> 00:32:58,029
straightforward<font color="#CCCCCC"> you just keep on moving</font>

750
00:32:56,769 --> 00:33:01,389
<font color="#CCCCCC">that state the bit through the state</font>

751
00:32:58,029 --> 00:33:03,009
<font color="#E5E5E5">mask</font><font color="#CCCCCC"> the lfsr in step is just a function</font>

752
00:33:01,389 --> 00:33:05,529
<font color="#E5E5E5">to step it as many steps as you</font><font color="#CCCCCC"> want</font>

753
00:33:03,009 --> 00:33:07,899
into<font color="#E5E5E5"> step and then to actually</font><font color="#CCCCCC"> do the</font>

754
00:33:05,529 --> 00:33:10,419
jump in again<font color="#E5E5E5"> really straightforward you</font>

755
00:33:07,899 --> 00:33:13,029
just<font color="#E5E5E5"> check</font><font color="#CCCCCC"> in which bits are on in the</font>

756
00:33:10,419 --> 00:33:15,610
state and then<font color="#E5E5E5"> X or an in the D States</font>

757
00:33:13,029 --> 00:33:20,529
and that<font color="#E5E5E5"> will do the jump in now the</font>

758
00:33:15,610 --> 00:33:23,139
reason we're doing<font color="#E5E5E5"> this is because if if</font>

759
00:33:20,529 --> 00:33:25,210
<font color="#CCCCCC">n is 2048 which is the values we need</font>

760
00:33:23,139 --> 00:33:27,219
for this<font color="#E5E5E5"> then building the fail tricks</font><font color="#CCCCCC"> a</font>

761
00:33:25,210 --> 00:33:28,840
<font color="#CCCCCC">hundred-thousand cipher takes which is</font>

762
00:33:27,220 --> 00:33:33,460
done<font color="#CCCCCC"> in a split second like you don't</font>

763
00:33:28,840 --> 00:33:36,850
even<font color="#CCCCCC"> notice it but when we</font><font color="#E5E5E5"> come to jump</font>

764
00:33:33,460 --> 00:33:40,570
through the table we do that<font color="#E5E5E5"> 137 billion</font>

765
00:33:36,850 --> 00:33:42,879
times and those fractions of second<font color="#CCCCCC"> feel</font>

766
00:33:40,570 --> 00:33:45,850
<font color="#CCCCCC">at Earth whereas instead</font><font color="#E5E5E5"> of doing a</font>

767
00:33:42,879 --> 00:33:47,709
<font color="#CCCCCC">thousand</font><font color="#E5E5E5"> instead of doing 2048 so</font><font color="#CCCCCC"> for</font>

768
00:33:45,850 --> 00:33:50,439
ticks<font color="#CCCCCC"> for each one</font><font color="#E5E5E5"> of those we can do up</font>

769
00:33:47,710 --> 00:33:54,850
to<font color="#E5E5E5"> 48 x horns which is clearly a lot</font>

770
00:33:50,440 --> 00:33:55,840
faster<font color="#E5E5E5"> so it is really worth doing it's</font>

771
00:33:54,850 --> 00:33:59,590
something<font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> be using in the</font><font color="#CCCCCC"> future</font>

772
00:33:55,840 --> 00:34:02,168
<font color="#E5E5E5">whenever I see an lfsr the way I built</font>

773
00:33:59,590 --> 00:34:04,449
the table was I movie<font color="#E5E5E5"> threaded it across</font>

774
00:34:02,169 --> 00:34:09,220
<font color="#E5E5E5">over the course or the virtual</font><font color="#CCCCCC"> cores</font><font color="#E5E5E5"> are</font>

775
00:34:04,450 --> 00:34:10,510
<font color="#E5E5E5">available so and so instead of like if</font>

776
00:34:09,219 --> 00:34:12,158
<font color="#CCCCCC">you're made from the space that you're</font>

777
00:34:10,510 --> 00:34:15,190
<font color="#E5E5E5">gonna kind of kind of step for instead</font>

778
00:34:12,159 --> 00:34:16,960
<font color="#CCCCCC">of like trying to do like one</font><font color="#E5E5E5"> core has</font>

779
00:34:15,190 --> 00:34:19,659
this bit more core as this bit more as

780
00:34:16,960 --> 00:34:22,240
this bit<font color="#E5E5E5"> I interleaved am Aldous dead so</font>

781
00:34:19,659 --> 00:34:24,490
I just kicked every core off 2048 steps

782
00:34:22,239 --> 00:34:26,168
apart<font color="#CCCCCC"> and then each</font><font color="#E5E5E5"> one jumps forward</font>

783
00:34:24,489 --> 00:34:29,799
like if I've got<font color="#E5E5E5"> eight cause it would</font>

784
00:34:26,168 --> 00:34:31,779
mean like 16,000 whoever steps<font color="#E5E5E5"> so</font>

785
00:34:29,799 --> 00:34:33,609
<font color="#CCCCCC">they're all kind of like overlap</font><font color="#E5E5E5"> kind of</font>

786
00:34:31,780 --> 00:34:34,839
each other<font color="#E5E5E5"> it was just it just meant I</font>

787
00:34:33,609 --> 00:34:37,989
didn't have<font color="#E5E5E5"> to have like</font><font color="#CCCCCC"> lots of crazy</font>

788
00:34:34,839 --> 00:34:39,909
<font color="#CCCCCC">you know you actually like jump into the</font>

789
00:34:37,989 --> 00:34:41,558
bottom block to start<font color="#E5E5E5"> the block and</font>

790
00:34:39,909 --> 00:34:43,359
block<font color="#E5E5E5"> it's like how many</font><font color="#CCCCCC"> psycho ticks is</font>

791
00:34:41,559 --> 00:34:46,569
that kind<font color="#CCCCCC"> of it's ridiculous so I said I</font>

792
00:34:43,359 --> 00:34:48,520
<font color="#CCCCCC">mean I mean</font><font color="#E5E5E5"> so you got do that</font><font color="#CCCCCC"> XOR in</font>

793
00:34:46,569 --> 00:34:50,219
like<font color="#CCCCCC"> 8 times this</font><font color="#E5E5E5"> went together but so</font>

794
00:34:48,520 --> 00:34:52,599
yeah it was<font color="#CCCCCC"> just</font><font color="#E5E5E5"> an idea</font>

795
00:34:50,219 --> 00:34:56,709
<font color="#CCCCCC">everybody works</font><font color="#E5E5E5"> so up so I have two</font>

796
00:34:52,599 --> 00:35:00,579
details of the 2048 table for getting

797
00:34:56,710 --> 00:35:02,559
<font color="#E5E5E5">sign points and then I of the to 2048</font>

798
00:35:00,579 --> 00:35:03,300
times how<font color="#CCCCCC"> many friends</font><font color="#E5E5E5"> I've got to be</font>

799
00:35:02,559 --> 00:35:05,940
the

800
00:35:03,300 --> 00:35:08,640
actual jump table<font color="#E5E5E5"> for jumping through</font>

801
00:35:05,940 --> 00:35:10,170
the<font color="#E5E5E5"> blocks because it doesn't matter</font>

802
00:35:08,640 --> 00:35:11,850
<font color="#E5E5E5">what order you build me</font><font color="#CCCCCC"> because they're</font>

803
00:35:10,170 --> 00:35:12,990
random anyway<font color="#E5E5E5"> is it I mean it's</font>

804
00:35:11,850 --> 00:35:14,670
literally<font color="#E5E5E5"> a pseudo-random number</font>

805
00:35:12,990 --> 00:35:16,350
generator so there's no there's<font color="#CCCCCC"> no</font>

806
00:35:14,670 --> 00:35:17,610
<font color="#E5E5E5">benefit and building it in any</font>

807
00:35:16,350 --> 00:35:20,730
particular<font color="#E5E5E5"> order because</font><font color="#CCCCCC"> you can't</font>

808
00:35:17,610 --> 00:35:22,710
predict what you're<font color="#E5E5E5"> going to get right</font>

809
00:35:20,730 --> 00:35:25,560
<font color="#E5E5E5">and</font><font color="#CCCCCC"> then you need</font><font color="#E5E5E5"> to solve it right and</font>

810
00:35:22,710 --> 00:35:27,030
you can't well I didn't find any way and

811
00:35:25,560 --> 00:35:28,440
I did talk<font color="#E5E5E5"> to some good computer</font>

812
00:35:27,030 --> 00:35:31,790
scientists but<font color="#CCCCCC"> I couldn't find</font><font color="#E5E5E5"> any good</font>

813
00:35:28,440 --> 00:35:35,340
<font color="#E5E5E5">way</font><font color="#CCCCCC"> of sorting it as I was</font><font color="#E5E5E5"> generating it</font>

814
00:35:31,790 --> 00:35:39,840
so instead I decided to generate it<font color="#E5E5E5"> and</font>

815
00:35:35,340 --> 00:35:42,440
then sort<font color="#E5E5E5"> it as I and then sort the</font>

816
00:35:39,840 --> 00:35:45,180
subtables afterwards<font color="#CCCCCC"> I</font><font color="#E5E5E5"> found</font><font color="#CCCCCC"> that was</font>

817
00:35:42,440 --> 00:35:48,510
that seemed to<font color="#E5E5E5"> be faster</font><font color="#CCCCCC"> I stood it all</font>

818
00:35:45,180 --> 00:35:51,450
on a<font color="#E5E5E5"> USB 3 disc and the bottleneck on</font>

819
00:35:48,510 --> 00:35:53,100
<font color="#E5E5E5">USB 3 is ridiculous by you know able to</font>

820
00:35:51,450 --> 00:35:54,569
told you<font color="#E5E5E5"> USB 3 is quick but it's not</font>

821
00:35:53,100 --> 00:35:54,930
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> like it's just as bad as anything</font>

822
00:35:54,570 --> 00:35:57,390
<font color="#E5E5E5">else</font>

823
00:35:54,930 --> 00:35:58,980
so yeah you wanna<font color="#E5E5E5"> do</font><font color="#CCCCCC"> on connector</font>

824
00:35:57,390 --> 00:36:00,779
scientists<font color="#E5E5E5"> but</font><font color="#CCCCCC"> cuz I'm</font><font color="#E5E5E5"> gonna like</font><font color="#CCCCCC"> on Mac</font>

825
00:35:58,980 --> 00:36:02,370
household<font color="#E5E5E5"> you know</font><font color="#CCCCCC"> I've got like</font>

826
00:36:00,780 --> 00:36:03,690
machines you can't take apart<font color="#CCCCCC"> old</font>

827
00:36:02,370 --> 00:36:06,000
machines<font color="#CCCCCC"> they've already</font><font color="#E5E5E5"> got all their</font>

828
00:36:03,690 --> 00:36:10,040
base filmed up<font color="#E5E5E5"> the only</font><font color="#CCCCCC"> limit is</font><font color="#E5E5E5"> boxes</font>

829
00:36:06,000 --> 00:36:12,030
have got a<font color="#E5E5E5"> really old man</font><font color="#CCCCCC"> key so yeah</font>

830
00:36:10,040 --> 00:36:18,600
but you want a<font color="#E5E5E5"> better computer than</font>

831
00:36:12,030 --> 00:36:20,940
<font color="#CCCCCC">Wyatt</font><font color="#E5E5E5"> basically so this is what we're</font>

832
00:36:18,600 --> 00:36:23,220
<font color="#E5E5E5">gonna do right we built the table we're</font>

833
00:36:20,940 --> 00:36:25,710
going to get 2048 bits we're gonna slide

834
00:36:23,220 --> 00:36:27,689
through it<font color="#E5E5E5"> in Windows or 48 bits we're</font>

835
00:36:25,710 --> 00:36:29,220
gonna find matches<font color="#CCCCCC"> we're going to test</font>

836
00:36:27,690 --> 00:36:30,750
the matches to<font color="#E5E5E5"> make sure they're valid</font>

837
00:36:29,220 --> 00:36:33,959
<font color="#E5E5E5">and then we're gonna roll</font><font color="#CCCCCC"> it all the way</font>

838
00:36:30,750 --> 00:36:37,230
back so<font color="#CCCCCC"> I</font><font color="#E5E5E5"> quickly go through so we'll</font>

839
00:36:33,960 --> 00:36:39,480
use attack<font color="#CCCCCC"> 1 but</font><font color="#E5E5E5"> instead of getting 72</font>

840
00:36:37,230 --> 00:36:42,300
bits of<font color="#CCCCCC"> keystream we're going to</font><font color="#E5E5E5"> keep on</font>

841
00:36:39,480 --> 00:36:44,580
<font color="#E5E5E5">repeating that attack so if you've got</font>

842
00:36:42,300 --> 00:36:47,130
72 bits of<font color="#E5E5E5"> keystream you can make a 70</font>

843
00:36:44,580 --> 00:36:49,230
bit<font color="#E5E5E5"> being paged in command and then that</font>

844
00:36:47,130 --> 00:36:51,390
will get you<font color="#CCCCCC"> another 32 on the</font><font color="#E5E5E5"> end of</font>

845
00:36:49,230 --> 00:36:53,040
<font color="#E5E5E5">that so you get to 100</font><font color="#CCCCCC"> two bits</font><font color="#E5E5E5"> and if</font>

846
00:36:51,390 --> 00:36:54,450
you've got<font color="#E5E5E5"> 100</font><font color="#CCCCCC"> two bits you can do the</font>

847
00:36:53,040 --> 00:36:57,150
<font color="#E5E5E5">same thing like</font><font color="#CCCCCC"> a hundred bit command</font>

848
00:36:54,450 --> 00:36:59,450
and then keep on advancing along those

849
00:36:57,150 --> 00:36:59,450
lines

850
00:36:59,750 --> 00:37:09,360
<font color="#CCCCCC">the our Fiddler's the wonderful piece of</font>

851
00:37:04,740 --> 00:37:14,040
<font color="#E5E5E5">equipment that it is limits the commands</font>

852
00:37:09,360 --> 00:37:17,000
to 512 bits so<font color="#E5E5E5"> you're 2048 bits</font><font color="#CCCCCC"> you're</font>

853
00:37:14,040 --> 00:37:22,170
kind<font color="#E5E5E5"> of</font><font color="#CCCCCC"> slightly stuck and</font>

854
00:37:17,000 --> 00:37:25,260
so I wrote it<font color="#CCCCCC"> to consume the keystream</font>

855
00:37:22,170 --> 00:37:26,820
and then kind<font color="#E5E5E5"> of send the command so you</font>

856
00:37:25,260 --> 00:37:28,890
just<font color="#E5E5E5"> don't so you don't reset the</font>

857
00:37:26,820 --> 00:37:31,740
session<font color="#CCCCCC"> but you basically</font><font color="#E5E5E5"> to keep on</font>

858
00:37:28,890 --> 00:37:32,759
sending commands which<font color="#E5E5E5"> the read</font><font color="#CCCCCC"> page 0</font>

859
00:37:31,740 --> 00:37:34,229
<font color="#CCCCCC">commands</font><font color="#E5E5E5"> come on or do you know the</font>

860
00:37:32,760 --> 00:37:35,640
answer<font color="#CCCCCC"> stick just to use up the</font>

861
00:37:34,230 --> 00:37:36,750
<font color="#E5E5E5">keystream and then</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> eventually get to</font>

862
00:37:35,640 --> 00:37:39,509
the<font color="#CCCCCC"> point where you've run out of key</font>

863
00:37:36,750 --> 00:37:41,490
stream and then you send your<font color="#CCCCCC"> what you</font>

864
00:37:39,510 --> 00:37:44,250
need to keep<font color="#CCCCCC"> 10</font><font color="#E5E5E5"> bits back so you can</font>

865
00:37:41,490 --> 00:37:46,950
<font color="#E5E5E5">send a command and then you can get</font><font color="#CCCCCC"> your</font>

866
00:37:44,250 --> 00:37:49,020
response so it's just<font color="#E5E5E5"> a bit more</font>

867
00:37:46,950 --> 00:37:50,759
complicated than if and when the guys

868
00:37:49,020 --> 00:37:52,950
did it on proxmark<font color="#CCCCCC"> not that i've seen</font>

869
00:37:50,760 --> 00:37:55,290
their code but as I understand it they

870
00:37:52,950 --> 00:37:56,549
could just do make their command as long

871
00:37:55,290 --> 00:37:58,410
as they<font color="#E5E5E5"> wanted to make their client</font><font color="#CCCCCC"> if</font>

872
00:37:56,550 --> 00:38:00,960
you just worked<font color="#E5E5E5"> it's just on our figure</font>

873
00:37:58,410 --> 00:38:03,600
you<font color="#E5E5E5"> got</font><font color="#CCCCCC"> B</font><font color="#E5E5E5"> I took like silly little</font>

874
00:38:00,960 --> 00:38:06,450
<font color="#E5E5E5">leaped it did a bit more work</font><font color="#CCCCCC"> but hey</font>

875
00:38:03,600 --> 00:38:08,339
hug<font color="#CCCCCC"> so I didn't</font><font color="#E5E5E5"> mean to attack really</font>

876
00:38:06,450 --> 00:38:10,649
<font color="#E5E5E5">straightforward</font><font color="#CCCCCC"> each does the each of</font>

877
00:38:08,340 --> 00:38:12,420
these<font color="#E5E5E5"> slices we offset by one bit</font><font color="#CCCCCC"> so</font>

878
00:38:10,650 --> 00:38:15,870
we're just<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> slice through one bit</font>

879
00:38:12,420 --> 00:38:18,600
at a time when we find a match that

880
00:38:15,870 --> 00:38:21,930
<font color="#E5E5E5">would recover the PRNG state and then</font>

881
00:38:18,600 --> 00:38:24,480
we'll do<font color="#E5E5E5"> one or other of these depending</font>

882
00:38:21,930 --> 00:38:27,810
<font color="#E5E5E5">where we are in the stream</font><font color="#CCCCCC"> so typically</font>

883
00:38:24,480 --> 00:38:30,360
I rolled<font color="#E5E5E5"> that state forward by</font><font color="#CCCCCC"> 48 bits</font>

884
00:38:27,810 --> 00:38:33,270
and recover the next 48 bits of key

885
00:38:30,360 --> 00:38:35,430
stream and compare<font color="#CCCCCC"> that in the recovered</font>

886
00:38:33,270 --> 00:38:36,780
key stream see if it matches the<font color="#CCCCCC"> only</font>

887
00:38:35,430 --> 00:38:39,089
time<font color="#CCCCCC"> we can't do that as if</font><font color="#E5E5E5"> you're</font>

888
00:38:36,780 --> 00:38:41,310
<font color="#E5E5E5">within 48 bits of the end</font><font color="#CCCCCC"> so instead of</font>

889
00:38:39,090 --> 00:38:44,490
going<font color="#E5E5E5"> forwards you're going backwards 48</font>

890
00:38:41,310 --> 00:38:47,220
bits but<font color="#E5E5E5"> you need to do this because you</font>

891
00:38:44,490 --> 00:38:49,020
will<font color="#E5E5E5"> get random matches</font><font color="#CCCCCC"> it was a it was</font>

892
00:38:47,220 --> 00:38:52,080
blown my mind<font color="#CCCCCC"> when I</font><font color="#E5E5E5"> was</font><font color="#CCCCCC"> writing I wrote</font>

893
00:38:49,020 --> 00:38:54,420
a test handle<font color="#E5E5E5"> for it and I'd go like</font>

894
00:38:52,080 --> 00:38:56,549
generally<font color="#E5E5E5"> 10 test cases and the</font><font color="#CCCCCC"> first</font>

895
00:38:54,420 --> 00:38:58,560
test<font color="#E5E5E5"> case would always succeed and find</font>

896
00:38:56,550 --> 00:39:01,130
the right key<font color="#E5E5E5"> the second test case and</font>

897
00:38:58,560 --> 00:39:03,600
<font color="#E5E5E5">all</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> others would all fail and</font><font color="#CCCCCC"> I</font>

898
00:39:01,130 --> 00:39:05,160
<font color="#E5E5E5">something's wrong with my code so and</font>

899
00:39:03,600 --> 00:39:07,200
<font color="#E5E5E5">I've got the point</font><font color="#CCCCCC"> of like generating</font>

900
00:39:05,160 --> 00:39:08,940
individual test cases one after<font color="#CCCCCC"> another</font>

901
00:39:07,200 --> 00:39:10,500
<font color="#CCCCCC">I was separate most of the product wait</font>

902
00:39:08,940 --> 00:39:13,110
<font color="#CCCCCC">for there's no like variable to interact</font>

903
00:39:10,500 --> 00:39:14,730
<font color="#CCCCCC">in and</font><font color="#E5E5E5"> I still would</font><font color="#CCCCCC"> have the first one</font>

904
00:39:13,110 --> 00:39:17,190
would<font color="#E5E5E5"> work and the second one wouldn't</font>

905
00:39:14,730 --> 00:39:19,650
and I was<font color="#E5E5E5"> just like why it was just</font>

906
00:39:17,190 --> 00:39:22,200
complete random luck but all it was done

907
00:39:19,650 --> 00:39:23,910
on the<font color="#E5E5E5"> first case the matter</font><font color="#CCCCCC"> I had was</font>

908
00:39:22,200 --> 00:39:25,560
the right match and on the second case

909
00:39:23,910 --> 00:39:27,330
<font color="#CCCCCC">the match I had was just</font><font color="#E5E5E5"> a pseudo match</font>

910
00:39:25,560 --> 00:39:29,910
and wasn't<font color="#E5E5E5"> the right state because the</font>

911
00:39:27,330 --> 00:39:31,799
wasn't doing this test<font color="#E5E5E5"> but so</font>

912
00:39:29,910 --> 00:39:33,839
at least by writing the test cases it

913
00:39:31,800 --> 00:39:38,400
forced me<font color="#E5E5E5"> to realize I had to be a bit</font>

914
00:39:33,840 --> 00:39:42,300
<font color="#E5E5E5">smart and build a in</font><font color="#CCCCCC"> volume backwards</font>

915
00:39:38,400 --> 00:39:43,800
right<font color="#E5E5E5"> if you know the state the lfsr</font><font color="#CCCCCC"> is</font>

916
00:39:42,300 --> 00:39:46,110
<font color="#CCCCCC">then</font><font color="#E5E5E5"> easy to roll backwards it's a</font>

917
00:39:43,800 --> 00:39:48,510
<font color="#E5E5E5">basically function l shifted by a bit</font>

918
00:39:46,110 --> 00:39:52,350
and<font color="#CCCCCC"> you</font><font color="#E5E5E5"> that'll generate the new bit</font>

919
00:39:48,510 --> 00:39:57,540
<font color="#E5E5E5">that would be that got lost before so we</font>

920
00:39:52,350 --> 00:39:59,850
can go backwards what we found<font color="#E5E5E5"> the</font><font color="#CCCCCC"> PRG</font>

921
00:39:57,540 --> 00:40:02,910
state and we've confirmed<font color="#E5E5E5"> it's the right</font>

922
00:39:59,850 --> 00:40:05,850
one then we know what offset we are in

923
00:40:02,910 --> 00:40:08,040
that 2048 bits of key stream<font color="#E5E5E5"> so we can</font>

924
00:40:05,850 --> 00:40:10,259
roll back<font color="#E5E5E5"> all the way through to start</font>

925
00:40:08,040 --> 00:40:14,670
<font color="#CCCCCC">that key string and then we can roll</font>

926
00:40:10,260 --> 00:40:16,710
back<font color="#E5E5E5"> through the handshake so it would</font>

927
00:40:14,670 --> 00:40:18,630
<font color="#E5E5E5">be page three would have been received</font>

928
00:40:16,710 --> 00:40:20,610
<font color="#E5E5E5">and then the challenge</font><font color="#CCCCCC"> response would</font>

929
00:40:18,630 --> 00:40:25,560
<font color="#E5E5E5">have been sent and then you</font><font color="#CCCCCC"> wrote this</font>

930
00:40:20,610 --> 00:40:28,050
<font color="#E5E5E5">then you at this point where the</font>

931
00:40:25,560 --> 00:40:30,870
encrypted<font color="#E5E5E5"> nonce has been sent</font>

932
00:40:28,050 --> 00:40:32,310
well we want to decrypt<font color="#CCCCCC"> they're not</font>

933
00:40:30,870 --> 00:40:34,170
encrypted nods we have the encrypted

934
00:40:32,310 --> 00:40:36,240
<font color="#E5E5E5">nonce but if we need</font><font color="#CCCCCC"> to decrypt</font><font color="#E5E5E5"> that</font>

935
00:40:34,170 --> 00:40:38,730
because we want<font color="#E5E5E5"> to get the key out</font><font color="#CCCCCC"> and</font>

936
00:40:36,240 --> 00:40:40,560
the keys ex-ored with the nonce<font color="#E5E5E5"> so when</font>

937
00:40:38,730 --> 00:40:42,690
you get<font color="#E5E5E5"> back to that point you then roll</font>

938
00:40:40,560 --> 00:40:45,029
back by pushing in the<font color="#CCCCCC"> you heed and</font>

939
00:40:42,690 --> 00:40:48,330
<font color="#E5E5E5">recover 32 bits of key stream as you do</font>

940
00:40:45,030 --> 00:40:49,590
it<font color="#E5E5E5"> and then you can X all that and</font><font color="#CCCCCC"> I if</font>

941
00:40:48,330 --> 00:40:53,069
<font color="#E5E5E5">at there's some</font><font color="#CCCCCC"> matters you</font><font color="#E5E5E5"> can you can</font>

942
00:40:49,590 --> 00:40:54,420
just<font color="#CCCCCC"> X or your</font><font color="#E5E5E5"> encrypted nonce that</font>

943
00:40:53,070 --> 00:40:55,740
you've captured<font color="#E5E5E5"> with</font><font color="#CCCCCC"> the output that</font>

944
00:40:54,420 --> 00:40:58,350
you've just<font color="#E5E5E5"> recovered that will give you</font>

945
00:40:55,740 --> 00:41:00,990
<font color="#E5E5E5">back the original nonce go back to that</font>

946
00:40:58,350 --> 00:41:03,299
state<font color="#CCCCCC"> that you had in where the non-sex</font>

947
00:41:00,990 --> 00:41:06,680
<font color="#CCCCCC">hoard the key is in there X all that</font><font color="#E5E5E5"> out</font>

948
00:41:03,300 --> 00:41:10,350
pops the key<font color="#CCCCCC"> now you have to kick okay</font>

949
00:41:06,680 --> 00:41:14,540
so the<font color="#E5E5E5"> table is one half terabyte so it</font>

950
00:41:10,350 --> 00:41:18,360
fits on<font color="#E5E5E5"> a three terabyte disk and yeah</font>

951
00:41:14,540 --> 00:41:21,779
<font color="#E5E5E5">it was fun to do I've spent this this</font>

952
00:41:18,360 --> 00:41:24,180
attack took less time<font color="#E5E5E5"> to understand but</font>

953
00:41:21,780 --> 00:41:26,130
I've spent<font color="#E5E5E5"> the most</font><font color="#CCCCCC"> not most</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> my time</font>

954
00:41:24,180 --> 00:41:28,440
on<font color="#E5E5E5"> it trying to improve trying to</font>

955
00:41:26,130 --> 00:41:30,300
improve that like building<font color="#E5E5E5"> and sorting</font>

956
00:41:28,440 --> 00:41:32,940
algorithm because it is just such<font color="#CCCCCC"> it</font>

957
00:41:30,300 --> 00:41:34,920
just felt wrong and I<font color="#E5E5E5"> just couldn't</font><font color="#CCCCCC"> ever</font>

958
00:41:32,940 --> 00:41:36,660
<font color="#CCCCCC">you speak to kind of goes oh yeah why</font>

959
00:41:34,920 --> 00:41:38,550
<font color="#CCCCCC">don't</font><font color="#E5E5E5"> you and then whatever they say</font>

960
00:41:36,660 --> 00:41:39,930
you're kind<font color="#CCCCCC"> of like either yeah I've</font>

961
00:41:38,550 --> 00:41:42,850
tried that and here's<font color="#E5E5E5"> what doesn't</font><font color="#CCCCCC"> work</font>

962
00:41:39,930 --> 00:41:44,319
or that won't<font color="#CCCCCC"> work</font><font color="#E5E5E5"> and then they</font>

963
00:41:42,850 --> 00:41:45,850
scratch their heads<font color="#E5E5E5"> and then they kind</font>

964
00:41:44,320 --> 00:41:46,630
of<font color="#E5E5E5"> like feel really embarrassed because</font>

965
00:41:45,850 --> 00:41:48,220
they think<font color="#E5E5E5"> they know a bit</font><font color="#CCCCCC"> about</font>

966
00:41:46,630 --> 00:41:49,690
<font color="#CCCCCC">programming and then</font><font color="#E5E5E5"> they</font><font color="#CCCCCC"> wander away</font>

967
00:41:48,220 --> 00:41:51,339
<font color="#E5E5E5">and they come back a few</font><font color="#CCCCCC"> weeks</font><font color="#E5E5E5"> later on</font>

968
00:41:49,690 --> 00:41:53,410
yeah I've got absolutely<font color="#E5E5E5"> nothing</font>

969
00:41:51,340 --> 00:41:56,440
I've got no you know someone like use a

970
00:41:53,410 --> 00:41:58,210
database<font color="#E5E5E5"> I'm like yeah okay there's a</font>

971
00:41:56,440 --> 00:42:01,270
database<font color="#E5E5E5"> I'll go on Wikipedia to find</font>

972
00:41:58,210 --> 00:42:03,430
out what the insert times are ridiculous

973
00:42:01,270 --> 00:42:04,600
well you<font color="#CCCCCC"> only</font><font color="#E5E5E5"> sir to to the 37 names in</font>

974
00:42:03,430 --> 00:42:05,980
the database<font color="#E5E5E5"> good luck</font>

975
00:42:04,600 --> 00:42:08,259
<font color="#CCCCCC">know you'll</font><font color="#E5E5E5"> be here for weeks</font><font color="#CCCCCC"> just</font>

976
00:42:05,980 --> 00:42:10,810
<font color="#E5E5E5">inserting the data yeah yes it</font><font color="#CCCCCC"> will be</font>

977
00:42:08,260 --> 00:42:12,550
sorted<font color="#E5E5E5"> but it gets there but you</font>

978
00:42:10,810 --> 00:42:14,620
literally can't<font color="#E5E5E5"> get the</font><font color="#CCCCCC"> throughput on</font>

979
00:42:12,550 --> 00:42:18,610
<font color="#E5E5E5">the</font><font color="#CCCCCC"> ID</font><font color="#E5E5E5"> to actually insert into the tape</font>

980
00:42:14,620 --> 00:42:20,500
so and if you're<font color="#E5E5E5"> trying import it's just</font>

981
00:42:18,610 --> 00:42:24,340
as<font color="#E5E5E5"> bad because they do inserts behind</font>

982
00:42:20,500 --> 00:42:26,410
the scene so off the<font color="#E5E5E5"> commands there's a</font>

983
00:42:24,340 --> 00:42:29,740
key stream<font color="#CCCCCC"> command that I wrote which</font>

984
00:42:26,410 --> 00:42:34,180
does this and so the way<font color="#E5E5E5"> we do it built</font>

985
00:42:29,740 --> 00:42:35,770
the table once get the UID<font color="#E5E5E5"> get some try</font>

986
00:42:34,180 --> 00:42:37,450
to encrypt<font color="#CCCCCC"> a nonce and could pretend</font>

987
00:42:35,770 --> 00:42:39,430
response value<font color="#E5E5E5"> and use that to get key</font>

988
00:42:37,450 --> 00:42:40,930
stream copy the key string which<font color="#CCCCCC"> were</font>

989
00:42:39,430 --> 00:42:43,930
file and then just<font color="#E5E5E5"> run the search</font>

990
00:42:40,930 --> 00:42:53,500
against<font color="#CCCCCC"> the against that so let's do</font>

991
00:42:43,930 --> 00:42:55,960
that<font color="#CCCCCC"> so no key stream no key stream you</font>

992
00:42:53,500 --> 00:42:58,450
can<font color="#E5E5E5"> see no key stream right we've got a</font>

993
00:42:55,960 --> 00:43:09,490
encrypted<font color="#CCCCCC"> non-step and</font><font color="#E5E5E5"> Chinese</font><font color="#CCCCCC"> response</font>

994
00:42:58,450 --> 00:43:11,350
value and<font color="#E5E5E5"> that's for that tank if any</font>

995
00:43:09,490 --> 00:43:15,459
point<font color="#E5E5E5"> this doesn't make sense</font><font color="#CCCCCC"> it just</font>

996
00:43:11,350 --> 00:43:16,960
<font color="#CCCCCC">shell</font><font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> it is interactive so it's</font>

997
00:43:15,460 --> 00:43:18,280
going<font color="#E5E5E5"> to do the same attack but then</font>

998
00:43:16,960 --> 00:43:28,480
it's going<font color="#E5E5E5"> to recover key stream</font><font color="#CCCCCC"> which</font>

999
00:43:18,280 --> 00:43:30,990
<font color="#CCCCCC">is</font><font color="#E5E5E5"> found found it and you can see that</font>

1000
00:43:28,480 --> 00:43:34,510
they<font color="#E5E5E5"> were really</font><font color="#CCCCCC"> smart about</font><font color="#E5E5E5"> picking</font>

1001
00:43:30,990 --> 00:43:37,450
2048<font color="#CCCCCC"> is their number because if you make</font>

1002
00:43:34,510 --> 00:43:38,770
it 4096<font color="#E5E5E5"> you are there forever trying to</font>

1003
00:43:37,450 --> 00:43:40,180
get key<font color="#CCCCCC"> string because every time you</font>

1004
00:43:38,770 --> 00:43:41,440
try and<font color="#E5E5E5"> get keys to be able to do an</font>

1005
00:43:40,180 --> 00:43:44,020
extension<font color="#CCCCCC"> you've got to send everything</font>

1006
00:43:41,440 --> 00:43:46,090
you<font color="#E5E5E5"> had before and then you</font><font color="#CCCCCC"> know to</font>

1007
00:43:44,020 --> 00:43:50,710
extend<font color="#CCCCCC"> this</font><font color="#E5E5E5"> one so it slows</font><font color="#CCCCCC"> down as you</font>

1008
00:43:46,090 --> 00:43:54,010
go and it would<font color="#E5E5E5"> like take ages but your</font>

1009
00:43:50,710 --> 00:43:55,840
table would<font color="#CCCCCC"> be only half as big which</font>

1010
00:43:54,010 --> 00:43:56,530
isn't really<font color="#E5E5E5"> like you know from one and</font>

1011
00:43:55,840 --> 00:43:59,140
a half terabyte

1012
00:43:56,530 --> 00:44:01,540
<font color="#CCCCCC">- like 750</font><font color="#E5E5E5"> make doesn't really save you</font>

1013
00:43:59,140 --> 00:44:04,000
<font color="#CCCCCC">lot but if you went</font><font color="#E5E5E5"> the other way your</font>

1014
00:44:01,540 --> 00:44:07,180
table goes<font color="#CCCCCC"> at 3 terabytes it takes 4</font>

1015
00:44:04,000 --> 00:44:09,670
times as long<font color="#CCCCCC"> to make</font><font color="#E5E5E5"> so yeah I</font><font color="#CCCCCC"> mean</font>

1016
00:44:07,180 --> 00:44:17,470
<font color="#CCCCCC">I'll and they picked exactly the work</font>

1017
00:44:09,670 --> 00:44:21,430
<font color="#CCCCCC">cutoff yeah yeah definitely</font>

1018
00:44:17,470 --> 00:44:23,740
babe<font color="#E5E5E5"> but it's like</font><font color="#CCCCCC"> for my practical in</font>

1019
00:44:21,430 --> 00:44:27,060
the field<font color="#CCCCCC"> perspective</font><font color="#E5E5E5"> how long do you</font>

1020
00:44:23,740 --> 00:44:29,080
<font color="#E5E5E5">want to spend like</font><font color="#CCCCCC"> Fatima someone's card</font>

1021
00:44:27,060 --> 00:44:32,980
yeah because<font color="#E5E5E5"> you really got build this</font>

1022
00:44:29,080 --> 00:44:34,630
once<font color="#E5E5E5"> so</font><font color="#CCCCCC"> yeah so</font><font color="#E5E5E5"> quite I did so I do</font>

1023
00:44:32,980 --> 00:44:37,110
think they've<font color="#E5E5E5"> kind of got it right if</font>

1024
00:44:34,630 --> 00:44:40,660
<font color="#E5E5E5">anything I'd go</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> 3 terabytes and</font>

1025
00:44:37,110 --> 00:44:44,290
gave<font color="#CCCCCC"> them less keystream but but you can</font>

1026
00:44:40,660 --> 00:44:50,020
see the 2048<font color="#E5E5E5"> is just about doable so</font>

1027
00:44:44,290 --> 00:44:54,460
yeah right so<font color="#E5E5E5"> to get all of that we're</font>

1028
00:44:50,020 --> 00:45:02,470
gonna bang that<font color="#E5E5E5"> into a file</font>

1029
00:44:54,460 --> 00:45:09,490
<font color="#CCCCCC">tight hello Oh bollocks</font>

1030
00:45:02,470 --> 00:45:14,379
yes<font color="#E5E5E5"> yes</font><font color="#CCCCCC"> fooled that up in it did it</font><font color="#E5E5E5"> that</font>

1031
00:45:09,490 --> 00:45:21,520
looks right right so we've<font color="#CCCCCC"> got that</font>

1032
00:45:14,380 --> 00:45:36,790
should be key<font color="#E5E5E5"> stream anyway and then why</font>

1033
00:45:21,520 --> 00:45:41,830
this just right<font color="#E5E5E5"> that might</font><font color="#CCCCCC"> be because I</font>

1034
00:45:36,790 --> 00:45:44,250
need to<font color="#E5E5E5"> put</font><font color="#CCCCCC"> 9 it's Friday morning</font><font color="#E5E5E5"> like</font>

1035
00:45:41,830 --> 00:45:44,250
<font color="#E5E5E5">you know</font>

1036
00:45:45,880 --> 00:46:02,180
any moment<font color="#CCCCCC"> days</font><font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> I could feel it</font>

1037
00:45:51,099 --> 00:46:08,180
yeah<font color="#E5E5E5"> okay but says my table so sir</font><font color="#CCCCCC"> no</font>

1038
00:46:02,180 --> 00:46:16,459
crack<font color="#E5E5E5"> to</font><font color="#CCCCCC"> surgeon back to so it wants the</font>

1039
00:46:08,180 --> 00:46:20,180
<font color="#CCCCCC">keystream file it was the UID good point</font>

1040
00:46:16,459 --> 00:46:25,999
<font color="#E5E5E5">and it wants</font><font color="#CCCCCC"> the NR so just check in the</font>

1041
00:46:20,180 --> 00:46:30,288
<font color="#CCCCCC">oh so I survived really good yesterday I</font>

1042
00:46:25,999 --> 00:46:37,009
managed to get this right<font color="#CCCCCC"> what's the</font>

1043
00:46:30,289 --> 00:46:45,920
<font color="#CCCCCC">keystream</font><font color="#E5E5E5"> right so it was the</font><font color="#CCCCCC"> that's the</font>

1044
00:46:37,009 --> 00:46:49,420
UID<font color="#E5E5E5"> this tag and it wants</font><font color="#CCCCCC"> the nonce the</font>

1045
00:46:45,920 --> 00:46:53,569
encrypted<font color="#CCCCCC"> knots</font><font color="#E5E5E5"> wishes that one there</font><font color="#CCCCCC"> so</font>

1046
00:46:49,420 --> 00:46:55,519
<font color="#CCCCCC">it reports on every hundred bits because</font>

1047
00:46:53,569 --> 00:46:58,308
you<font color="#E5E5E5"> just want to know</font><font color="#CCCCCC"> that it's doing</font>

1048
00:46:55,519 --> 00:47:00,649
something<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that's and if we're</font>

1049
00:46:58,309 --> 00:47:02,690
<font color="#CCCCCC">reporting any</font><font color="#E5E5E5"> more often you just get</font>

1050
00:47:00,650 --> 00:47:08,449
streams of fine by and it's all of

1051
00:47:02,690 --> 00:47:10,069
it pointless<font color="#CCCCCC"> and</font><font color="#E5E5E5"> there's only 2048 bits</font>

1052
00:47:08,449 --> 00:47:13,009
<font color="#E5E5E5">so it's only going to take a certain</font>

1053
00:47:10,069 --> 00:47:14,569
that time but<font color="#E5E5E5"> it is so is a</font><font color="#CCCCCC"> sim</font><font color="#E5E5E5"> for it</font>

1054
00:47:13,009 --> 00:47:16,369
all what it's doing is going<font color="#E5E5E5"> through 48</font>

1055
00:47:14,569 --> 00:47:18,739
<font color="#E5E5E5">bits at a time just slicing it through</font>

1056
00:47:16,369 --> 00:47:21,559
<font color="#E5E5E5">offset won't</font><font color="#CCCCCC"> bear each time I'm just</font>

1057
00:47:18,739 --> 00:47:26,719
<font color="#E5E5E5">looking them up in the table</font><font color="#CCCCCC"> so the</font>

1058
00:47:21,559 --> 00:47:28,309
table<font color="#E5E5E5"> is made of</font><font color="#CCCCCC"> 65536</font><font color="#E5E5E5"> tables so they've</font>

1059
00:47:26,719 --> 00:47:30,769
already sorted on the first<font color="#E5E5E5"> two bytes of</font>

1060
00:47:28,309 --> 00:47:33,469
the<font color="#CCCCCC"> keystream each of those files is</font>

1061
00:47:30,769 --> 00:47:35,868
around 24 Megan sighs I mean around

1062
00:47:33,469 --> 00:47:38,269
because it's random<font color="#E5E5E5"> as to which one to</font>

1063
00:47:35,869 --> 00:47:41,089
end up<font color="#CCCCCC"> gained but</font><font color="#E5E5E5"> the average out</font><font color="#CCCCCC"> to 24</font>

1064
00:47:38,269 --> 00:47:43,698
<font color="#E5E5E5">make or 20 mega round</font><font color="#CCCCCC"> I anyway and then</font>

1065
00:47:41,089 --> 00:47:46,249
they've been like you sorted in<font color="#CCCCCC"> see so</font>

1066
00:47:43,699 --> 00:47:48,709
I'm just<font color="#CCCCCC"> doing a be search on that</font><font color="#E5E5E5"> so</font>

1067
00:47:46,249 --> 00:47:51,890
you know and find which table you want

1068
00:47:48,709 --> 00:47:55,249
<font color="#E5E5E5">to find</font><font color="#CCCCCC"> man map it in and then just be</font>

1069
00:47:51,890 --> 00:47:57,769
search on it and it just yeah ever finds

1070
00:47:55,249 --> 00:47:59,359
it or it<font color="#CCCCCC"> doesn't or it</font><font color="#E5E5E5"> finds it and it's</font>

1071
00:47:57,769 --> 00:48:01,399
wrong<font color="#CCCCCC"> you know so</font>

1072
00:47:59,360 --> 00:48:05,810
<font color="#CCCCCC">if every match is</font><font color="#E5E5E5"> also checking if the</font>

1073
00:48:01,400 --> 00:48:07,700
match is<font color="#E5E5E5"> the right match but it should</font>

1074
00:48:05,810 --> 00:48:10,040
complete<font color="#E5E5E5"> any moment now</font>

1075
00:48:07,700 --> 00:48:11,529
<font color="#CCCCCC">see I've got</font><font color="#E5E5E5"> just about enough patter to</font>

1076
00:48:10,040 --> 00:48:15,110
kind of get through<font color="#E5E5E5"> this bit before</font><font color="#CCCCCC"> it</font>

1077
00:48:11,530 --> 00:48:23,390
<font color="#E5E5E5">kind</font><font color="#CCCCCC"> of completes oh I thought</font><font color="#E5E5E5"> I had</font>

1078
00:48:15,110 --> 00:48:25,520
maybe<font color="#E5E5E5"> though there you have it so it's</font>

1079
00:48:23,390 --> 00:48:28,879
found the<font color="#E5E5E5"> RNG match it's pulled out</font>

1080
00:48:25,520 --> 00:48:33,140
state that it<font color="#E5E5E5"> was the bit offset was 12</font>

1081
00:48:28,880 --> 00:48:34,600
33 so it rolls<font color="#E5E5E5"> back 1233</font><font color="#CCCCCC"> states then</font>

1082
00:48:33,140 --> 00:48:38,420
rolls back through the initialization

1083
00:48:34,600 --> 00:48:43,600
<font color="#CCCCCC">self set up it and</font><font color="#E5E5E5"> give them just a</font>

1084
00:48:38,420 --> 00:48:46,610
<font color="#E5E5E5">score but actually yes you</font><font color="#CCCCCC"> can see so</font><font color="#E5E5E5"> I</font>

1085
00:48:43,600 --> 00:48:48,410
mean these these swordfish like

1086
00:48:46,610 --> 00:48:50,960
printouts are just there because<font color="#E5E5E5"> I I</font>

1087
00:48:48,410 --> 00:48:52,790
<font color="#E5E5E5">assume check</font><font color="#CCCCCC"> to us</font><font color="#E5E5E5"> by hand when I was</font>

1088
00:48:50,960 --> 00:48:56,840
<font color="#E5E5E5">coding it</font><font color="#CCCCCC"> and then never</font><font color="#E5E5E5"> took them out</font>

1089
00:48:52,790 --> 00:48:58,400
when it is finished<font color="#CCCCCC"> so it you know but</font>

1090
00:48:56,840 --> 00:49:01,400
that's<font color="#E5E5E5"> but it's doing the kind of maths</font>

1091
00:48:58,400 --> 00:49:03,080
is pulling out the B is<font color="#E5E5E5"> the</font><font color="#CCCCCC"> keystream</font>

1092
00:49:01,400 --> 00:49:06,170
that it falls<font color="#E5E5E5"> out</font><font color="#CCCCCC"> from the</font><font color="#E5E5E5"> PRNG the</font>

1093
00:49:03,080 --> 00:49:08,450
safety bits and it's just<font color="#CCCCCC"> x soaring to</font>

1094
00:49:06,170 --> 00:49:14,030
pull out the nonce<font color="#E5E5E5"> and then it's gets</font>

1095
00:49:08,450 --> 00:49:16,250
the key in you've got<font color="#E5E5E5"> an</font><font color="#CCCCCC"> India s--</font>

1096
00:49:14,030 --> 00:49:20,650
Indian this thing because<font color="#CCCCCC"> bits</font>

1097
00:49:16,250 --> 00:49:24,560
transmitted on RF are in big bit<font color="#E5E5E5"> onion</font>

1098
00:49:20,650 --> 00:49:27,080
always and that really<font color="#CCCCCC"> messes with my</font>

1099
00:49:24,560 --> 00:49:31,340
head<font color="#CCCCCC"> so you gotta like rotate each byte</font>

1100
00:49:27,080 --> 00:49:34,640
in<font color="#E5E5E5"> one of it yeah but hey it</font><font color="#CCCCCC"> works and</font>

1101
00:49:31,340 --> 00:49:38,690
<font color="#CCCCCC">that</font><font color="#E5E5E5"> up there</font><font color="#CCCCCC"> with my mouse is</font><font color="#E5E5E5"> that</font>

1102
00:49:34,640 --> 00:49:46,509
there is the key fill these<font color="#E5E5E5"> tanks so it</font>

1103
00:49:38,690 --> 00:49:49,790
works<font color="#E5E5E5"> so I'm impressed</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> know honey</font>

1104
00:49:46,510 --> 00:49:54,380
so let's move on to attack<font color="#CCCCCC"> three so</font>

1105
00:49:49,790 --> 00:49:56,210
attack<font color="#E5E5E5"> two quite easy to code once your</font>

1106
00:49:54,380 --> 00:49:58,750
code<font color="#E5E5E5"> what you understood the little bits</font>

1107
00:49:56,210 --> 00:50:01,460
<font color="#E5E5E5">were jumbled forwards building the table</font>

1108
00:49:58,750 --> 00:50:03,560
<font color="#E5E5E5">is trivial if you don't mind waiting a</font>

1109
00:50:01,460 --> 00:50:05,540
week for<font color="#E5E5E5"> it if you want to do in a day</font>

1110
00:50:03,560 --> 00:50:07,070
you've got a like<font color="#E5E5E5"> Prince method but once</font>

1111
00:50:05,540 --> 00:50:09,050
you've<font color="#E5E5E5"> but the code is</font><font color="#CCCCCC"> out there now the</font>

1112
00:50:07,070 --> 00:50:11,190
codes on<font color="#CCCCCC"> care</font><font color="#E5E5E5"> so you can just run</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> in</font>

1113
00:50:09,050 --> 00:50:12,810
your<font color="#CCCCCC"> builder table but</font><font color="#E5E5E5"> what</font>

1114
00:50:11,190 --> 00:50:15,540
you've got the table<font color="#CCCCCC"> it will work on</font>

1115
00:50:12,810 --> 00:50:18,599
<font color="#CCCCCC">every high tech to system</font><font color="#E5E5E5"> so you want to</font>

1116
00:50:15,540 --> 00:50:20,910
go<font color="#E5E5E5"> break into Volkswagen cars then this</font>

1117
00:50:18,599 --> 00:50:24,020
is the same<font color="#CCCCCC"> table that</font><font color="#E5E5E5"> they would be</font>

1118
00:50:20,910 --> 00:50:24,020
using<font color="#CCCCCC"> to break into</font><font color="#E5E5E5"> cars</font>

1119
00:50:24,079 --> 00:50:27,630
now cryptanalytic<font color="#E5E5E5"> attack this is quite</font>

1120
00:50:26,849 --> 00:50:31,470
fun

1121
00:50:27,630 --> 00:50:33,089
so the<font color="#CCCCCC"> period out PRNG</font><font color="#E5E5E5"> output</font><font color="#CCCCCC"> produced</font>

1122
00:50:31,470 --> 00:50:37,980
by this filter function f which was made

1123
00:50:33,089 --> 00:50:40,078
up of<font color="#E5E5E5"> light</font><font color="#CCCCCC"> faz bees and FC</font><font color="#E5E5E5"> as</font><font color="#CCCCCC"> i said</font>

1124
00:50:37,980 --> 00:50:42,270
before<font color="#E5E5E5"> each of the</font><font color="#CCCCCC"> FIM bees take</font><font color="#E5E5E5"> four</font>

1125
00:50:40,079 --> 00:50:43,740
bits from the<font color="#CCCCCC"> pure energy state and</font>

1126
00:50:42,270 --> 00:50:45,300
<font color="#CCCCCC">produced one bit of</font><font color="#E5E5E5"> output that feeds</font>

1127
00:50:43,740 --> 00:50:46,529
and the<font color="#CCCCCC"> function saves takes five bits</font>

1128
00:50:45,300 --> 00:50:48,510
<font color="#E5E5E5">of input produces one bit of output</font>

1129
00:50:46,530 --> 00:50:51,349
they're all<font color="#CCCCCC"> fifty-fifty biased</font><font color="#E5E5E5"> ones and</font>

1130
00:50:48,510 --> 00:50:55,550
<font color="#CCCCCC">zeros</font><font color="#E5E5E5"> so this looks pretty</font><font color="#CCCCCC"> good yeah</font>

1131
00:50:51,349 --> 00:50:59,640
well there's the definition<font color="#CCCCCC"> again and</font>

1132
00:50:55,550 --> 00:51:02,510
this<font color="#E5E5E5"> is the modified definition so if</font>

1133
00:50:59,640 --> 00:51:05,098
you<font color="#CCCCCC"> imagine that</font><font color="#E5E5E5"> your lfsr ships by bit</font>

1134
00:51:02,510 --> 00:51:07,619
when you're you know<font color="#E5E5E5"> every time</font><font color="#CCCCCC"> you</font>

1135
00:51:05,099 --> 00:51:09,990
produce a bit you can<font color="#CCCCCC"> either consider it</font>

1136
00:51:07,619 --> 00:51:12,150
<font color="#E5E5E5">before</font><font color="#CCCCCC"> you've shifted</font><font color="#E5E5E5"> it or after you've</font>

1137
00:51:09,990 --> 00:51:14,609
shifted it well

1138
00:51:12,150 --> 00:51:17,520
the reference design works differently

1139
00:51:14,609 --> 00:51:20,190
to the format<font color="#CCCCCC"> that the paper authors</font>

1140
00:51:17,520 --> 00:51:21,780
used and so they<font color="#E5E5E5"> work in the pre shifted</font>

1141
00:51:20,190 --> 00:51:25,020
format<font color="#E5E5E5"> whereas the reference design</font>

1142
00:51:21,780 --> 00:51:27,960
<font color="#E5E5E5">works in the post shifted format it's</font>

1143
00:51:25,020 --> 00:51:30,359
good<font color="#E5E5E5"> B so all</font><font color="#CCCCCC"> of my maths</font><font color="#E5E5E5"> works on these</font>

1144
00:51:27,960 --> 00:51:34,410
<font color="#CCCCCC">numbers</font><font color="#E5E5E5"> but they work on</font><font color="#CCCCCC"> these numbers</font>

1145
00:51:30,359 --> 00:51:36,480
<font color="#E5E5E5">so yeah you know</font><font color="#CCCCCC"> some</font><font color="#E5E5E5"> just it's just one</font>

1146
00:51:34,410 --> 00:51:39,118
out but<font color="#CCCCCC"> you just</font><font color="#E5E5E5"> have to accept it well</font>

1147
00:51:36,480 --> 00:51:43,680
what you<font color="#E5E5E5"> can notice there is the first</font>

1148
00:51:39,119 --> 00:51:47,490
line the first<font color="#CCCCCC"> FA function the bits it's</font>

1149
00:51:43,680 --> 00:51:52,410
taking<font color="#E5E5E5"> from a really wide section of the</font>

1150
00:51:47,490 --> 00:51:54,959
lfsr<font color="#CCCCCC"> know from bit 34 upwards</font><font color="#E5E5E5"> by it</font>

1151
00:51:52,410 --> 00:51:58,440
<font color="#E5E5E5">which is</font><font color="#CCCCCC"> like 14 bits worth whereas all</font>

1152
00:51:54,960 --> 00:52:00,569
the others<font color="#CCCCCC"> are kind</font><font color="#E5E5E5"> of you know four</font>

1153
00:51:58,440 --> 00:52:05,760
bits from<font color="#E5E5E5"> a kind of like a six or eight</font>

1154
00:52:00,569 --> 00:52:07,230
bit kind<font color="#E5E5E5"> of section so they noticed that</font>

1155
00:52:05,760 --> 00:52:11,670
<font color="#E5E5E5">this</font><font color="#CCCCCC"> was a bit</font><font color="#E5E5E5"> of a problem and the</font>

1156
00:52:07,230 --> 00:52:15,599
<font color="#CCCCCC">reason</font><font color="#E5E5E5"> is because in a quarter of the</font>

1157
00:52:11,670 --> 00:52:17,910
cases<font color="#E5E5E5"> the most significant bit the one</font>

1158
00:52:15,599 --> 00:52:20,250
<font color="#E5E5E5">produced by that</font><font color="#CCCCCC"> FA function doesn't</font>

1159
00:52:17,910 --> 00:52:21,670
<font color="#E5E5E5">actually affect the</font><font color="#CCCCCC"> output you get</font><font color="#E5E5E5"> from</font>

1160
00:52:20,250 --> 00:52:25,000
the<font color="#CCCCCC"> PNG</font>

1161
00:52:21,670 --> 00:52:27,760
right<font color="#E5E5E5"> so if you take the boolean table</font>

1162
00:52:25,000 --> 00:52:31,599
for function<font color="#CCCCCC"> C which</font><font color="#E5E5E5"> is like 7907</font><font color="#CCCCCC"> t be</font>

1163
00:52:27,760 --> 00:52:33,519
<font color="#E5E5E5">near to 8</font><font color="#CCCCCC"> 7 b and you line out at binary</font>

1164
00:52:31,599 --> 00:52:35,529
<font color="#E5E5E5">which is what these</font><font color="#CCCCCC"> two lines are</font><font color="#E5E5E5"> here</font>

1165
00:52:33,519 --> 00:52:38,799
<font color="#E5E5E5">all I've done is</font><font color="#CCCCCC"> put the least</font>

1166
00:52:35,529 --> 00:52:40,269
significant bit version above the most

1167
00:52:38,799 --> 00:52:42,038
significant<font color="#E5E5E5"> bit version and then I</font>

1168
00:52:40,269 --> 00:52:46,750
bolded all the ones<font color="#E5E5E5"> that match</font>

1169
00:52:42,039 --> 00:52:49,809
so there's based basically<font color="#E5E5E5"> up from the</font>

1170
00:52:46,750 --> 00:52:52,690
first 34 bits of the lfsr<font color="#CCCCCC"> a quarter</font><font color="#E5E5E5"> of</font>

1171
00:52:49,809 --> 00:52:55,390
the state's<font color="#E5E5E5"> you could end up in meaning</font>

1172
00:52:52,690 --> 00:52:57,039
that only those state<font color="#CCCCCC"> four bits are</font>

1173
00:52:55,390 --> 00:52:59,379
<font color="#CCCCCC">going to determine the</font><font color="#E5E5E5"> output</font><font color="#CCCCCC"> at the PNG</font>

1174
00:52:57,039 --> 00:53:01,660
and the<font color="#E5E5E5"> upper 40 bits to have no impact</font>

1175
00:52:59,380 --> 00:53:03,130
whatsoever<font color="#E5E5E5"> because all they're gonna do</font>

1176
00:53:01,660 --> 00:53:05,019
is move you<font color="#E5E5E5"> from the top row to the</font>

1177
00:53:03,130 --> 00:53:08,680
bottom row or the<font color="#E5E5E5"> bottom</font><font color="#CCCCCC"> mode at the top</font>

1178
00:53:05,019 --> 00:53:10,149
row<font color="#E5E5E5"> and it's already a</font><font color="#CCCCCC"> 0 and it's</font><font color="#E5E5E5"> going</font>

1179
00:53:08,680 --> 00:53:14,348
<font color="#E5E5E5">to become a 0 it's already a 1 it's</font>

1180
00:53:10,150 --> 00:53:16,299
going<font color="#CCCCCC"> to become a 1 so then that happens</font>

1181
00:53:14,349 --> 00:53:18,039
in<font color="#E5E5E5"> the quarter of the cases which is</font>

1182
00:53:16,299 --> 00:53:20,980
enough of<font color="#E5E5E5"> a bias that</font><font color="#CCCCCC"> you can do</font>

1183
00:53:18,039 --> 00:53:22,450
somewhere with it<font color="#E5E5E5"> so you end up with it</font>

1184
00:53:20,980 --> 00:53:24,430
actually<font color="#CCCCCC"> looks like this and</font><font color="#E5E5E5"> the corner</font>

1185
00:53:22,450 --> 00:53:27,279
<font color="#E5E5E5">cases</font><font color="#CCCCCC"> that left hand block doesn't</font>

1186
00:53:24,430 --> 00:53:29,740
<font color="#E5E5E5">actually matter now you what this is</font>

1187
00:53:27,279 --> 00:53:33,460
reducing is instead of having a 48-bit

1188
00:53:29,740 --> 00:53:36,848
<font color="#CCCCCC">brute</font><font color="#E5E5E5"> force problem we've now got a 34</font>

1189
00:53:33,460 --> 00:53:39,670
bit kind<font color="#E5E5E5"> of brute force problem and so</font>

1190
00:53:36,849 --> 00:53:43,750
what we<font color="#E5E5E5"> can what we could do but what</font>

1191
00:53:39,670 --> 00:53:47,980
<font color="#E5E5E5">they did is essentially brute force at</font>

1192
00:53:43,750 --> 00:53:51,329
34 bits and find<font color="#E5E5E5"> candidates that</font><font color="#CCCCCC"> are</font>

1193
00:53:47,980 --> 00:53:57,460
valid<font color="#E5E5E5"> candidates that might be the key</font>

1194
00:53:51,329 --> 00:53:58,750
sort of<font color="#CCCCCC"> possible A's or candidates</font><font color="#E5E5E5"> for</font>

1195
00:53:57,460 --> 00:54:01,930
the<font color="#CCCCCC"> kid for the</font><font color="#E5E5E5"> first eight four bits</font>

1196
00:53:58,750 --> 00:54:05,289
the key<font color="#E5E5E5"> and then for all the candidates</font>

1197
00:54:01,930 --> 00:54:07,269
<font color="#E5E5E5">brute force the last 14 bits so before</font>

1198
00:54:05,289 --> 00:54:09,339
we had this bias we had to brute force a

1199
00:54:07,269 --> 00:54:11,589
whole 48 bit of space now with brute

1200
00:54:09,339 --> 00:54:13,960
force a<font color="#CCCCCC"> four bits of it and end</font><font color="#E5E5E5"> up a</font>

1201
00:54:11,589 --> 00:54:15,788
very<font color="#E5E5E5"> small set of possibilities</font><font color="#CCCCCC"> and from</font>

1202
00:54:13,960 --> 00:54:19,599
those<font color="#E5E5E5"> small set brute force</font><font color="#CCCCCC"> the last 40</font>

1203
00:54:15,789 --> 00:54:21,759
bits the difference is<font color="#E5E5E5"> you go from 48</font>

1204
00:54:19,599 --> 00:54:24,970
bits worth of work down<font color="#CCCCCC"> to 35 bits worth</font>

1205
00:54:21,759 --> 00:54:28,059
of work<font color="#E5E5E5"> which is</font><font color="#CCCCCC"> really significant in</font>

1206
00:54:24,970 --> 00:54:30,730
terms<font color="#E5E5E5"> of our long tough stuff takes so</font>

1207
00:54:28,059 --> 00:54:33,519
there's a the event<font color="#CCCCCC"> function</font><font color="#E5E5E5"> P function</font>

1208
00:54:30,730 --> 00:54:35,140
<font color="#E5E5E5">P tells you if you're in this state</font><font color="#CCCCCC"> or</font>

1209
00:54:33,519 --> 00:54:38,830
not<font color="#CCCCCC"> and it uses the boolean</font>

1210
00:54:35,140 --> 00:54:40,720
<font color="#CCCCCC">able so this will tell you</font><font color="#E5E5E5"> if you're in</font>

1211
00:54:38,830 --> 00:54:43,060
that<font color="#E5E5E5"> one of those</font><font color="#CCCCCC"> 1 in 4 states where</font>

1212
00:54:40,720 --> 00:54:47,200
did the<font color="#CCCCCC"> upper bit doesn't matter</font><font color="#E5E5E5"> if the</font>

1213
00:54:43,060 --> 00:54:50,920
14 bits don't<font color="#E5E5E5"> matter so I'm going</font><font color="#CCCCCC"> to do</font>

1214
00:54:47,200 --> 00:54:53,799
my<font color="#E5E5E5"> best to</font><font color="#CCCCCC"> explain this right so very</font>

1215
00:54:50,920 --> 00:54:55,450
<font color="#CCCCCC">early</font><font color="#E5E5E5"> on when the nonce</font><font color="#CCCCCC"> X</font><font color="#E5E5E5"> or the key is</font>

1216
00:54:53,800 --> 00:54:58,420
shifted into<font color="#E5E5E5"> the lfsr</font><font color="#CCCCCC"> and it encrypts</font>

1217
00:54:55,450 --> 00:55:00,819
the<font color="#E5E5E5"> nonce</font><font color="#CCCCCC"> we have this situation</font><font color="#E5E5E5"> and</font>

1218
00:54:58,420 --> 00:55:05,770
this is kind of<font color="#CCCCCC"> area</font><font color="#E5E5E5"> we're working in</font>

1219
00:55:00,820 --> 00:55:08,620
right so<font color="#E5E5E5"> n</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> the nonce is encrypted</font><font color="#CCCCCC"> as</font>

1220
00:55:05,770 --> 00:55:12,160
the key ex-ored with the<font color="#CCCCCC"> NI was pushed</font>

1221
00:55:08,620 --> 00:55:15,370
into the PRNG<font color="#E5E5E5"> that means the later bits</font>

1222
00:55:12,160 --> 00:55:19,180
of the nonce<font color="#E5E5E5"> being encrypted are based</font>

1223
00:55:15,370 --> 00:55:21,370
on the earlier bits of the nonce that

1224
00:55:19,180 --> 00:55:26,890
have already been shifted in now there's

1225
00:55:21,370 --> 00:55:28,690
a there's<font color="#CCCCCC"> a relationship</font><font color="#E5E5E5"> between the</font>

1226
00:55:26,890 --> 00:55:31,000
bits of<font color="#E5E5E5"> the nonce and the encrypted</font>

1227
00:55:28,690 --> 00:55:34,000
<font color="#E5E5E5">nonce there later bits of the encrypted</font>

1228
00:55:31,000 --> 00:55:35,500
<font color="#E5E5E5">nonce which is bad it turns out a</font><font color="#CCCCCC"> pair</font>

1229
00:55:34,000 --> 00:55:38,890
<font color="#E5E5E5">of how that's a really bad thing to have</font>

1230
00:55:35,500 --> 00:55:40,540
done and then it encrypts the

1231
00:55:38,890 --> 00:55:43,720
<font color="#CCCCCC">challenge/response next using feedback</font>

1232
00:55:40,540 --> 00:55:45,820
function so the first bit<font color="#CCCCCC"> the challenge</font>

1233
00:55:43,720 --> 00:55:48,520
<font color="#CCCCCC">response is encrypted when the thing is</font>

1234
00:55:45,820 --> 00:55:50,800
<font color="#E5E5E5">fully seeded where you've got the key x</font>

1235
00:55:48,520 --> 00:55:58,450
over then<font color="#E5E5E5"> are followed</font><font color="#CCCCCC"> by the key is in</font>

1236
00:55:50,800 --> 00:55:59,740
<font color="#E5E5E5">the lfsr state so if we were looking</font><font color="#CCCCCC"> at</font>

1237
00:55:58,450 --> 00:56:03,609
the encryption of the<font color="#E5E5E5"> first bit of the</font>

1238
00:55:59,740 --> 00:56:05,919
<font color="#CCCCCC">challenge</font><font color="#E5E5E5"> response we could if if</font><font color="#CCCCCC"> that</font>

1239
00:56:03,610 --> 00:56:09,100
state there was one of those states

1240
00:56:05,920 --> 00:56:12,430
where the<font color="#E5E5E5"> upper 14 bits don't matter</font><font color="#CCCCCC"> and</font>

1241
00:56:09,100 --> 00:56:14,560
we would finally<font color="#E5E5E5"> get that state well</font>

1242
00:56:12,430 --> 00:56:18,700
then<font color="#E5E5E5"> we</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> have to guess the lower 34</font>

1243
00:56:14,560 --> 00:56:20,049
bits of that state because if 14<font color="#E5E5E5"> bits</font>

1244
00:56:18,700 --> 00:56:21,750
would<font color="#E5E5E5"> have</font><font color="#CCCCCC"> mattered because</font><font color="#E5E5E5"> it's already</font>

1245
00:56:20,050 --> 00:56:24,490
in<font color="#E5E5E5"> this position</font><font color="#CCCCCC"> where wherever</font><font color="#E5E5E5"> they are</font>

1246
00:56:21,750 --> 00:56:27,190
<font color="#E5E5E5">you're still going to get a</font><font color="#CCCCCC"> 0 or 1 based</font>

1247
00:56:24,490 --> 00:56:30,330
on what the lower 34 bits say which

1248
00:56:27,190 --> 00:56:32,680
<font color="#E5E5E5">means that only the lower 18 bits of the</font>

1249
00:56:30,330 --> 00:56:36,610
upper bits<font color="#CCCCCC"> of the K XOR with the NR</font>

1250
00:56:32,680 --> 00:56:38,379
matter so you<font color="#CCCCCC"> know that that would only</font>

1251
00:56:36,610 --> 00:56:40,420
<font color="#CCCCCC">be</font><font color="#E5E5E5"> 32 bits</font><font color="#CCCCCC"> we can get it down</font><font color="#E5E5E5"> to 18</font>

1252
00:56:38,380 --> 00:56:43,630
which<font color="#E5E5E5"> means we can attack this bit of</font>

1253
00:56:40,420 --> 00:56:46,030
<font color="#E5E5E5">the process so if we were given</font><font color="#CCCCCC"> the</font>

1254
00:56:43,630 --> 00:56:47,470
<font color="#CCCCCC">lower 16 bits of the key</font><font color="#E5E5E5"> most obviously</font>

1255
00:56:46,030 --> 00:56:48,670
<font color="#E5E5E5">we're not we don't</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> what the are but</font>

1256
00:56:47,470 --> 00:56:50,290
we're<font color="#E5E5E5"> going to enumerate</font>

1257
00:56:48,670 --> 00:56:53,920
<font color="#E5E5E5">for those but if we were given</font><font color="#CCCCCC"> the level</font>

1258
00:56:50,290 --> 00:56:56,710
<font color="#CCCCCC">16 bits</font><font color="#E5E5E5"> we could find values that</font><font color="#CCCCCC"> would</font>

1259
00:56:53,920 --> 00:57:00,069
<font color="#E5E5E5">set for the the upper 32 bits of that</font>

1260
00:56:56,710 --> 00:57:02,109
lfsr<font color="#E5E5E5"> state the key X</font><font color="#CCCCCC"> within</font><font color="#E5E5E5"> our that</font>

1261
00:57:00,069 --> 00:57:03,700
would satisfy P of X now we wouldn't

1262
00:57:02,109 --> 00:57:05,710
know that<font color="#E5E5E5"> we don't know the key bits we</font>

1263
00:57:03,700 --> 00:57:09,368
don't know<font color="#E5E5E5"> NR could find random states</font>

1264
00:57:05,710 --> 00:57:13,000
that<font color="#E5E5E5"> would satisfy P of X so that</font><font color="#CCCCCC"> for</font>

1265
00:57:09,369 --> 00:57:15,700
<font color="#CCCCCC">you miss didn't matter</font><font color="#E5E5E5"> and then that</font>

1266
00:57:13,000 --> 00:57:17,380
would mean<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we could encrypt the</font>

1267
00:57:15,700 --> 00:57:20,049
first bit of the<font color="#CCCCCC"> challenge/response</font>

1268
00:57:17,380 --> 00:57:21,940
<font color="#E5E5E5">without having to know the upper 14 bits</font>

1269
00:57:20,049 --> 00:57:23,980
of the state so<font color="#CCCCCC"> we're quick</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> survive</font>

1270
00:57:21,940 --> 00:57:25,839
until<font color="#CCCCCC"> I worry</font><font color="#E5E5E5"> about an entire 48 bit</font>

1271
00:57:23,980 --> 00:57:33,069
<font color="#E5E5E5">state we can worry about 34</font><font color="#CCCCCC"> bit state</font>

1272
00:57:25,839 --> 00:57:35,380
for that<font color="#E5E5E5"> particular</font><font color="#CCCCCC"> point so as we if we</font>

1273
00:57:33,069 --> 00:57:38,770
could get a value for<font color="#E5E5E5"> that as we shifted</font>

1274
00:57:35,380 --> 00:57:41,440
in that value<font color="#E5E5E5"> we could extract the first</font>

1275
00:57:38,770 --> 00:57:44,470
18 bits of the output<font color="#E5E5E5"> which is what is</font>

1276
00:57:41,440 --> 00:57:47,349
used<font color="#E5E5E5"> to encrypt the nonce because we're</font>

1277
00:57:44,470 --> 00:57:50,589
shifting in 18 bits and that will give

1278
00:57:47,349 --> 00:57:53,079
<font color="#CCCCCC">us 18</font><font color="#E5E5E5"> bits and we know the entire</font><font color="#CCCCCC"> PNG</font>

1279
00:57:50,589 --> 00:57:54,970
<font color="#CCCCCC">state throughout that process I</font><font color="#E5E5E5"> it</font>

1280
00:57:53,079 --> 00:57:57,460
started<font color="#CCCCCC"> with</font><font color="#E5E5E5"> UID in the low 60 beats of</font>

1281
00:57:54,970 --> 00:57:58,598
the key we shift in 18 bits worth<font color="#E5E5E5"> we</font>

1282
00:57:57,460 --> 00:58:03,730
know everything that's<font color="#E5E5E5"> going on so we</font>

1283
00:57:58,599 --> 00:58:05,710
<font color="#E5E5E5">can work out the</font><font color="#CCCCCC"> PRG output assuming we</font>

1284
00:58:03,730 --> 00:58:08,980
do the<font color="#CCCCCC"> lower</font><font color="#E5E5E5"> 16 bits the key right and</font>

1285
00:58:05,710 --> 00:58:11,290
then we could<font color="#E5E5E5"> shift in 14 zeros to get</font>

1286
00:58:08,980 --> 00:58:13,839
it to the position<font color="#CCCCCC"> where this wouldn't</font>

1287
00:58:11,290 --> 00:58:15,130
fall for<font color="#CCCCCC"> a function</font><font color="#E5E5E5"> P thing kicks in and</font>

1288
00:58:13,839 --> 00:58:17,020
encrypt the first bit of the

1289
00:58:15,130 --> 00:58:20,200
<font color="#CCCCCC">challenge-response</font><font color="#E5E5E5"> so we could get out</font>

1290
00:58:17,020 --> 00:58:21,190
the key bits at that point the<font color="#E5E5E5"> key</font><font color="#CCCCCC"> 3 bit</font>

1291
00:58:20,200 --> 00:58:22,618
at<font color="#CCCCCC"> that point that</font><font color="#E5E5E5"> would encrypt the</font>

1292
00:58:21,190 --> 00:58:25,450
<font color="#CCCCCC">challenge-response</font>

1293
00:58:22,619 --> 00:58:26,920
<font color="#CCCCCC">I've</font><font color="#E5E5E5"> given that you get encrypted</font>

1294
00:58:25,450 --> 00:58:29,919
<font color="#CCCCCC">notices</font><font color="#E5E5E5"> and encrypt returns response</font>

1295
00:58:26,920 --> 00:58:31,990
values in pairs<font color="#E5E5E5"> we've got two sides of</font>

1296
00:58:29,920 --> 00:58:35,290
<font color="#E5E5E5">this</font><font color="#CCCCCC"> equations</font><font color="#E5E5E5"> which we can now compare</font>

1297
00:58:31,990 --> 00:58:36,609
we can we can<font color="#E5E5E5"> work on so this is</font><font color="#CCCCCC"> the</font>

1298
00:58:35,290 --> 00:58:37,779
<font color="#E5E5E5">state we're going</font><font color="#CCCCCC"> to get to</font><font color="#E5E5E5"> it we're</font>

1299
00:58:36,609 --> 00:58:45,220
going<font color="#CCCCCC"> to encrypt the challenge response</font>

1300
00:58:37,780 --> 00:58:47,260
value so for given<font color="#CCCCCC"> lower</font><font color="#E5E5E5"> 16 bits the key</font>

1301
00:58:45,220 --> 00:58:48,819
we're going<font color="#CCCCCC"> to find candidates</font><font color="#E5E5E5"> and we're</font>

1302
00:58:47,260 --> 00:58:50,140
going to<font color="#E5E5E5"> test whether they encrypt the</font>

1303
00:58:48,819 --> 00:58:52,450
first<font color="#E5E5E5"> flip the</font><font color="#CCCCCC"> challenge was</font><font color="#E5E5E5"> correctly</font>

1304
00:58:50,140 --> 00:58:53,890
<font color="#CCCCCC">which will reduce the number</font><font color="#E5E5E5"> of options</font>

1305
00:58:52,450 --> 00:58:56,740
we have<font color="#CCCCCC"> in the middle bits of the key</font>

1306
00:58:53,890 --> 00:58:59,830
and then all the ones<font color="#E5E5E5"> that survive will</font>

1307
00:58:56,740 --> 00:59:02,439
<font color="#CCCCCC">brute-force</font><font color="#E5E5E5"> the last bit</font>

1308
00:58:59,830 --> 00:59:06,190
so we're<font color="#E5E5E5"> gonna catch we need</font><font color="#CCCCCC"> 100 36</font>

1309
00:59:02,440 --> 00:59:07,780
pairs which is 34 times<font color="#E5E5E5"> 4 so because it</font>

1310
00:59:06,190 --> 00:59:11,290
happens one in four times and there's

1311
00:59:07,780 --> 00:59:15,730
say<font color="#CCCCCC"> 4 bits then it tells</font><font color="#E5E5E5"> us about so why</font>

1312
00:59:11,290 --> 00:59:17,200
that is again it's more magic<font color="#E5E5E5"> I'll say</font>

1313
00:59:15,730 --> 00:59:19,000
actually flabbergasted one of the

1314
00:59:17,200 --> 00:59:20,589
authors is at Birmingham<font color="#CCCCCC"> University</font><font color="#E5E5E5"> and</font>

1315
00:59:19,000 --> 00:59:22,240
he's<font color="#E5E5E5"> really good on email</font><font color="#CCCCCC"> he'll actually</font>

1316
00:59:20,590 --> 00:59:25,060
will answer your questions and<font color="#CCCCCC"> surf so</font>

1317
00:59:22,240 --> 00:59:26,459
feel free<font color="#CCCCCC"> to who I have</font><font color="#E5E5E5"> contact him</font><font color="#CCCCCC"> it's</font>

1318
00:59:25,060 --> 00:59:28,870
nice<font color="#E5E5E5"> guy</font>

1319
00:59:26,460 --> 00:59:32,350
so we're<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> divide</font><font color="#CCCCCC"> the key into three</font>

1320
00:59:28,870 --> 00:59:37,450
sections<font color="#CCCCCC"> lower 16 middle 18 and upper 16</font>

1321
00:59:32,350 --> 00:59:40,390
0 / 14<font color="#CCCCCC"> rather</font><font color="#E5E5E5"> loop over</font><font color="#CCCCCC"> the lower 16</font>

1322
00:59:37,450 --> 00:59:42,399
bits and for each<font color="#CCCCCC"> possibly each of the</font>

1323
00:59:40,390 --> 00:59:45,160
<font color="#E5E5E5">65,000 possibilities will do this entire</font>

1324
00:59:42,400 --> 00:59:49,810
rest of the process<font color="#E5E5E5"> so we're gonna find</font>

1325
00:59:45,160 --> 00:59:51,640
values<font color="#CCCCCC"> Y</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> Y essentially will be the</font>

1326
00:59:49,810 --> 00:59:56,730
middle bits of the key<font color="#CCCCCC"> X or</font><font color="#E5E5E5"> the first 18</font>

1327
00:59:51,640 --> 00:59:56,730
bits than the nonce right

1328
00:59:59,250 --> 01:00:04,870
so yeah we were here I<font color="#E5E5E5"> don't really need</font>

1329
01:00:02,440 --> 01:00:08,310
to<font color="#CCCCCC"> go backwards</font>

1330
01:00:04,870 --> 01:00:15,190
that's a<font color="#E5E5E5"> very bright light</font><font color="#CCCCCC"> is that new</font>

1331
01:00:08,310 --> 01:00:20,230
<font color="#CCCCCC">is</font><font color="#E5E5E5"> that there</font><font color="#CCCCCC"> before oh well seems like</font>

1332
01:00:15,190 --> 01:00:24,760
<font color="#CCCCCC">flashy</font><font color="#E5E5E5"> lights with</font><font color="#CCCCCC"> the Y's so this</font><font color="#E5E5E5"> is a</font>

1333
01:00:20,230 --> 01:00:27,820
<font color="#E5E5E5">good place to carry on from basically</font>

1334
01:00:24,760 --> 01:00:30,070
we're gonna capture 136 encrypted nonce

1335
01:00:27,820 --> 01:00:32,440
encrypted channel<font color="#CCCCCC"> response</font><font color="#E5E5E5"> values which</font>

1336
01:00:30,070 --> 01:00:34,210
is 34 times<font color="#CCCCCC"> 4 because</font><font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> just caught at</font>

1337
01:00:32,440 --> 01:00:38,620
<font color="#CCCCCC">a time and</font><font color="#E5E5E5"> would say four bits we're</font>

1338
01:00:34,210 --> 01:00:40,930
gonna attack so loop over the<font color="#CCCCCC"> first 16</font>

1339
01:00:38,620 --> 01:00:44,500
bits<font color="#CCCCCC"> at 65,000 times we're going</font><font color="#E5E5E5"> to do</font>

1340
01:00:40,930 --> 01:00:47,279
this process<font color="#E5E5E5"> and for</font><font color="#CCCCCC"> each time we're</font>

1341
01:00:44,500 --> 01:00:50,920
going<font color="#E5E5E5"> to find all the values</font><font color="#CCCCCC"> of Y that</font>

1342
01:00:47,280 --> 01:00:54,970
<font color="#E5E5E5">satisfy this situation given the</font><font color="#CCCCCC"> lower</font>

1343
01:00:50,920 --> 01:00:57,370
<font color="#E5E5E5">16 bits of it we're working with because</font>

1344
01:00:54,970 --> 01:00:59,169
that<font color="#CCCCCC"> will mean</font><font color="#E5E5E5"> we can attack the first</font>

1345
01:00:57,370 --> 01:01:07,990
bit of the encrypted<font color="#CCCCCC"> channels response</font>

1346
01:00:59,170 --> 01:01:11,230
value by<font color="#CCCCCC"> e testing our values of</font><font color="#E5E5E5"> Y</font>

1347
01:01:07,990 --> 01:01:13,479
against all the encrypted<font color="#E5E5E5"> nonce and tell</font>

1348
01:01:11,230 --> 01:01:15,100
us what values<font color="#E5E5E5"> we'll find potential</font>

1349
01:01:13,480 --> 01:01:17,500
for the<font color="#E5E5E5"> middle bits</font><font color="#CCCCCC"> the key and it'll be</font>

1350
01:01:15,100 --> 01:01:19,420
a small set and then<font color="#CCCCCC"> we'll of the ones</font>

1351
01:01:17,500 --> 01:01:24,940
<font color="#E5E5E5">that go in that small set will</font><font color="#CCCCCC"> route the</font>

1352
01:01:19,420 --> 01:01:26,650
<font color="#E5E5E5">last 40 bits so we're going to do this</font>

1353
01:01:24,940 --> 01:01:27,790
which<font color="#CCCCCC"> is a modified version of what we</font>

1354
01:01:26,650 --> 01:01:29,680
had before<font color="#E5E5E5"> we're</font><font color="#CCCCCC"> just going to</font><font color="#E5E5E5"> do the</font>

1355
01:01:27,790 --> 01:01:31,779
first 18 bits<font color="#E5E5E5"> of that process of</font>

1356
01:01:29,680 --> 01:01:33,430
encrypting the knots<font color="#E5E5E5"> so we don't know</font>

1357
01:01:31,780 --> 01:01:35,230
<font color="#E5E5E5">the knots we don't know the key but we</font>

1358
01:01:33,430 --> 01:01:43,450
<font color="#E5E5E5">know but why is the value we're going to</font>

1359
01:01:35,230 --> 01:01:46,810
<font color="#CCCCCC">enumerate</font><font color="#E5E5E5"> right so there's a lot of</font>

1360
01:01:43,450 --> 01:01:47,770
unknowns in this picture<font color="#E5E5E5"> right but it</font>

1361
01:01:46,810 --> 01:01:52,299
won't<font color="#E5E5E5"> matter</font>

1362
01:01:47,770 --> 01:01:54,820
<font color="#E5E5E5">because that the beauty of maths so if</font>

1363
01:01:52,300 --> 01:01:56,740
we know<font color="#CCCCCC"> that Y is essentially</font><font color="#E5E5E5"> the middle</font>

1364
01:01:54,820 --> 01:02:00,040
bit<font color="#E5E5E5"> of the key ex-ored with the first 18</font>

1365
01:01:56,740 --> 01:02:02,979
bits of the nonce<font color="#CCCCCC"> and we know the first</font>

1366
01:02:00,040 --> 01:02:04,840
18 bits of the encrypted<font color="#E5E5E5"> nonce is the</font>

1367
01:02:02,980 --> 01:02:07,150
first 18 bits of the<font color="#CCCCCC"> non-sex sword for</font>

1368
01:02:04,840 --> 01:02:10,060
the<font color="#E5E5E5"> first 18 bits of output from PR and</font>

1369
01:02:07,150 --> 01:02:14,200
G then<font color="#CCCCCC"> we can rearrange</font><font color="#E5E5E5"> those equations</font>

1370
01:02:10,060 --> 01:02:16,090
to do this<font color="#E5E5E5"> right so we can say the nonce</font>

1371
01:02:14,200 --> 01:02:17,799
is the<font color="#CCCCCC"> encrypted non-sex sword with</font><font color="#E5E5E5"> the</font>

1372
01:02:16,090 --> 01:02:19,960
output because it's just rearranging the

1373
01:02:17,800 --> 01:02:23,200
<font color="#CCCCCC">XOR where you</font><font color="#E5E5E5"> can say we can then</font>

1374
01:02:19,960 --> 01:02:27,119
substitute<font color="#E5E5E5"> that nonce into the equation</font>

1375
01:02:23,200 --> 01:02:30,339
<font color="#CCCCCC">we read</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> y and then we</font><font color="#E5E5E5"> can just move</font>

1376
01:02:27,119 --> 01:02:31,570
the<font color="#CCCCCC"> output P</font><font color="#E5E5E5"> our energy output term to</font>

1377
01:02:30,340 --> 01:02:33,040
the other<font color="#E5E5E5"> side of the equals because</font>

1378
01:02:31,570 --> 01:02:36,340
<font color="#E5E5E5">it's all X or you know you can just</font>

1379
01:02:33,040 --> 01:02:38,109
<font color="#E5E5E5">rearrange stuff easily</font><font color="#CCCCCC"> Konya so what</font>

1380
01:02:36,340 --> 01:02:39,730
we've<font color="#E5E5E5"> got then is ye that we're going to</font>

1381
01:02:38,109 --> 01:02:41,740
<font color="#CCCCCC">enumerate or we're going</font><font color="#E5E5E5"> to build a</font>

1382
01:02:39,730 --> 01:02:44,800
<font color="#CCCCCC">segment based on we've got the output</font>

1383
01:02:41,740 --> 01:02:47,200
<font color="#CCCCCC">which would be generated from</font><font color="#E5E5E5"> Y because</font>

1384
01:02:44,800 --> 01:02:50,290
we<font color="#CCCCCC"> see</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> random number generator and</font>

1385
01:02:47,200 --> 01:02:53,529
shift in<font color="#E5E5E5"> Y and as we shift it in we get</font>

1386
01:02:50,290 --> 01:02:55,180
<font color="#CCCCCC">the output</font><font color="#E5E5E5"> so we know for any Y we know</font>

1387
01:02:53,530 --> 01:02:57,220
the first<font color="#E5E5E5"> 18 bits of output</font><font color="#CCCCCC"> that we'll</font>

1388
01:02:55,180 --> 01:03:00,100
get so the left-hand<font color="#CCCCCC"> side of</font><font color="#E5E5E5"> the</font>

1389
01:02:57,220 --> 01:03:01,390
<font color="#CCCCCC">equation we we know and on the</font>

1390
01:03:00,100 --> 01:03:03,430
right-hand<font color="#CCCCCC"> side of</font><font color="#E5E5E5"> the equation we've</font>

1391
01:03:01,390 --> 01:03:05,190
got the key the middle bits of the key

1392
01:03:03,430 --> 01:03:08,080
which we're going<font color="#E5E5E5"> to find work out and</font>

1393
01:03:05,190 --> 01:03:11,650
an encrypted nonce which we've captured

1394
01:03:08,080 --> 01:03:14,560
<font color="#E5E5E5">so you can sort of see</font><font color="#CCCCCC"> that we're kind</font>

1395
01:03:11,650 --> 01:03:16,060
of reducing the unknowns<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that we can</font>

1396
01:03:14,560 --> 01:03:19,000
<font color="#E5E5E5">work out the</font><font color="#CCCCCC"> one unknown that we've got</font>

1397
01:03:16,060 --> 01:03:22,330
<font color="#E5E5E5">left so this is the situation we're</font>

1398
01:03:19,000 --> 01:03:24,700
going<font color="#E5E5E5"> to get to where we've shifted in</font>

1399
01:03:22,330 --> 01:03:25,470
those 18<font color="#E5E5E5"> bits of Y and then we've</font>

1400
01:03:24,700 --> 01:03:28,259
shifted and

1401
01:03:25,470 --> 01:03:31,200
when capture the 18 bits of pol<font color="#CCCCCC"> per</font><font color="#E5E5E5"> then</font>

1402
01:03:28,260 --> 01:03:32,940
we<font color="#E5E5E5"> shift in 14 zeros and then get the</font>

1403
01:03:31,200 --> 01:03:34,560
<font color="#E5E5E5">next bit of PRNG output because that</font>

1404
01:03:32,940 --> 01:03:36,780
would be<font color="#E5E5E5"> the bit that encrypts the first</font>

1405
01:03:34,560 --> 01:03:40,859
bit of the<font color="#CCCCCC"> challenge/response value but</font>

1406
01:03:36,780 --> 01:03:44,660
called a are now<font color="#E5E5E5"> a our channel</font><font color="#CCCCCC"> response</font>

1407
01:03:40,859 --> 01:03:47,310
is o X F F F F F F F<font color="#E5E5E5"> F</font><font color="#CCCCCC"> it's all</font><font color="#E5E5E5"> ones and</font>

1408
01:03:44,660 --> 01:03:49,140
the encrypted<font color="#CCCCCC"> child's response is that</font>

1409
01:03:47,310 --> 01:03:50,609
ex-ored with the output the<font color="#CCCCCC"> PRNG</font>

1410
01:03:49,140 --> 01:03:53,009
<font color="#CCCCCC">no because of course that is all ones</font>

1411
01:03:50,609 --> 01:03:54,080
<font color="#E5E5E5">that same as inverting the output of the</font>

1412
01:03:53,010 --> 01:03:57,480
PRNG

1413
01:03:54,080 --> 01:03:59,580
so we therefore know the first bit of

1414
01:03:57,480 --> 01:04:03,869
<font color="#E5E5E5">the encrypted</font><font color="#CCCCCC"> challenge/response</font><font color="#E5E5E5"> value</font>

1415
01:03:59,580 --> 01:04:06,090
is the inverse of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> 32nd bit of</font><font color="#E5E5E5"> output</font>

1416
01:04:03,869 --> 01:04:07,800
<font color="#E5E5E5">from the PNG so we're going to be</font>

1417
01:04:06,090 --> 01:04:08,849
dealing<font color="#E5E5E5"> with the first 18 bits of output</font>

1418
01:04:07,800 --> 01:04:11,670
<font color="#CCCCCC">from PRNG</font>

1419
01:04:08,849 --> 01:04:14,760
skip 14<font color="#E5E5E5"> to get to this state</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> get the</font>

1420
01:04:11,670 --> 01:04:16,080
<font color="#CCCCCC">32nd bit wish me the first bit the</font>

1421
01:04:14,760 --> 01:04:20,400
inverse<font color="#E5E5E5"> of which will</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> the first bit</font>

1422
01:04:16,080 --> 01:04:23,819
of the encrypted<font color="#E5E5E5"> tunnel spawns value so</font>

1423
01:04:20,400 --> 01:04:27,510
we<font color="#CCCCCC"> can now build a table based on</font>

1424
01:04:23,820 --> 01:04:30,720
so we're numerate all of Y and X<font color="#E5E5E5"> and for</font>

1425
01:04:27,510 --> 01:04:35,849
every<font color="#CCCCCC"> y</font><font color="#E5E5E5"> get the 18 bits of out and XOR</font>

1426
01:04:30,720 --> 01:04:39,029
it with ye<font color="#E5E5E5"> and map and then</font><font color="#CCCCCC"> shift in the</font>

1427
01:04:35,849 --> 01:04:40,830
14 zeros to get the inverse of the 32nd

1428
01:04:39,030 --> 01:04:42,180
bit of<font color="#E5E5E5"> output</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> PNG</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> they're</font>

1429
01:04:40,830 --> 01:04:44,970
<font color="#CCCCCC">going that's</font><font color="#E5E5E5"> going to be our table</font>

1430
01:04:42,180 --> 01:04:46,080
values that we're going to build and

1431
01:04:44,970 --> 01:04:48,450
we're only going<font color="#E5E5E5"> to deal with Y's that</font>

1432
01:04:46,080 --> 01:04:52,740
satisfy function P so<font color="#CCCCCC"> that we can</font>

1433
01:04:48,450 --> 01:04:54,868
actually do<font color="#E5E5E5"> this trick so if we've</font><font color="#CCCCCC"> got</font>

1434
01:04:52,740 --> 01:04:58,410
these equations that<font color="#E5E5E5"> we've kind of come</font>

1435
01:04:54,869 --> 01:05:02,670
up<font color="#CCCCCC"> with the</font><font color="#E5E5E5"> left-hand side of</font><font color="#CCCCCC"> those</font>

1436
01:04:58,410 --> 01:05:04,500
equals<font color="#CCCCCC"> are what's in the table</font><font color="#E5E5E5"> and the</font>

1437
01:05:02,670 --> 01:05:06,119
right-hand<font color="#CCCCCC"> side is what we have been</font><font color="#E5E5E5"> in</font>

1438
01:05:04,500 --> 01:05:07,530
map map it<font color="#E5E5E5"> against you can see on the</font>

1439
01:05:06,119 --> 01:05:09,540
<font color="#CCCCCC">right-hand</font><font color="#E5E5E5"> side we've got the encrypted</font>

1440
01:05:07,530 --> 01:05:12,630
<font color="#E5E5E5">nonce the encrypted</font><font color="#CCCCCC"> challenge-response</font>

1441
01:05:09,540 --> 01:05:15,210
value which we've captured<font color="#E5E5E5"> lots of and</font>

1442
01:05:12,630 --> 01:05:18,510
the middle bits of the key<font color="#E5E5E5"> so we've now</font>

1443
01:05:15,210 --> 01:05:20,130
got<font color="#E5E5E5"> a formalistic attack to find middle</font>

1444
01:05:18,510 --> 01:05:24,780
bits of key that satisfy this<font color="#CCCCCC"> some</font>

1445
01:05:20,130 --> 01:05:28,010
arrangement so what we do is we say<font color="#CCCCCC"> that</font>

1446
01:05:24,780 --> 01:05:30,839
the Z is going to be remunerate across

1447
01:05:28,010 --> 01:05:35,490
all of the middle bits of the key that

1448
01:05:30,839 --> 01:05:37,020
possibilities<font color="#E5E5E5"> and set Z to the middle</font>

1449
01:05:35,490 --> 01:05:39,149
bit<font color="#CCCCCC"> I'll guess for the middle bit</font><font color="#E5E5E5"> of the</font>

1450
01:05:37,020 --> 01:05:42,300
key ex-ored with the first<font color="#E5E5E5"> eight</font>

1451
01:05:39,150 --> 01:05:44,970
<font color="#E5E5E5">the encrypted nonce</font><font color="#CCCCCC"> and then we look to</font>

1452
01:05:42,300 --> 01:05:47,190
<font color="#CCCCCC">see if that's</font><font color="#E5E5E5"> in the table now it might</font>

1453
01:05:44,970 --> 01:05:48,810
not<font color="#CCCCCC"> be in the</font><font color="#E5E5E5"> table right and if it's</font>

1454
01:05:47,190 --> 01:05:52,290
not<font color="#E5E5E5"> in the table it doesn't tell us</font>

1455
01:05:48,810 --> 01:05:54,720
anything<font color="#CCCCCC"> but if it is in the table we</font>

1456
01:05:52,290 --> 01:05:56,700
<font color="#CCCCCC">can look to see</font><font color="#E5E5E5"> what the first bit of</font>

1457
01:05:54,720 --> 01:05:59,549
the<font color="#E5E5E5"> cryptid</font><font color="#CCCCCC"> challenge-response</font><font color="#E5E5E5"> value</font>

1458
01:05:56,700 --> 01:06:03,180
should<font color="#E5E5E5"> be</font><font color="#CCCCCC"> for that entry in the table</font>

1459
01:05:59,550 --> 01:06:05,010
<font color="#E5E5E5">and if it isn't what the first bit of on</font>

1460
01:06:03,180 --> 01:06:07,259
<font color="#E5E5E5">crypto</font><font color="#CCCCCC"> challenge/response value is for</font>

1461
01:06:05,010 --> 01:06:09,120
that<font color="#E5E5E5"> pair then we know there</font><font color="#CCCCCC"> is little</font>

1462
01:06:07,260 --> 01:06:11,220
bits<font color="#CCCCCC"> of the key wrong because</font><font color="#E5E5E5"> it doesn't</font>

1463
01:06:09,120 --> 01:06:14,670
<font color="#E5E5E5">satisfy this relationship which it</font>

1464
01:06:11,220 --> 01:06:16,259
should<font color="#E5E5E5"> satisfy so</font><font color="#CCCCCC"> we can then take we</font>

1465
01:06:14,670 --> 01:06:18,810
<font color="#E5E5E5">can then like ignore that one as a</font>

1466
01:06:16,260 --> 01:06:22,650
<font color="#E5E5E5">possibility and so given a hundred</font>

1467
01:06:18,810 --> 01:06:25,980
<font color="#E5E5E5">thirty six pairs we will probably remove</font>

1468
01:06:22,650 --> 01:06:28,500
most of<font color="#E5E5E5"> the middle bit options for the</font>

1469
01:06:25,980 --> 01:06:30,570
key<font color="#E5E5E5"> they are wrong and only leave a</font>

1470
01:06:28,500 --> 01:06:32,610
<font color="#CCCCCC">really</font><font color="#E5E5E5"> small set and for</font><font color="#CCCCCC"> every one</font><font color="#E5E5E5"> that</font>

1471
01:06:30,570 --> 01:06:37,320
passes within<font color="#CCCCCC"> brute-force</font><font color="#E5E5E5"> the last</font><font color="#CCCCCC"> forty</font>

1472
01:06:32,610 --> 01:06:39,570
<font color="#CCCCCC">minutes it is literally</font><font color="#E5E5E5"> magic for me</font>

1473
01:06:37,320 --> 01:06:41,630
this is<font color="#E5E5E5"> like that being swordfish where</font>

1474
01:06:39,570 --> 01:06:44,820
<font color="#CCCCCC">they</font><font color="#E5E5E5"> put the gun</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> attend the girl and</font>

1475
01:06:41,630 --> 01:06:46,320
and he's like cracking<font color="#CCCCCC"> till</font><font color="#E5E5E5"> that's what</font>

1476
01:06:44,820 --> 01:06:48,210
everyone's right this is this is<font color="#E5E5E5"> that</font>

1477
01:06:46,320 --> 01:06:53,610
<font color="#E5E5E5">bit of the film this is what this</font><font color="#CCCCCC"> is the</font>

1478
01:06:48,210 --> 01:06:54,750
code<font color="#CCCCCC"> he's</font><font color="#E5E5E5"> writing you know because of</font>

1479
01:06:53,610 --> 01:06:58,560
course you write<font color="#E5E5E5"> code to</font><font color="#CCCCCC"> track</font><font color="#E5E5E5"> to</font>

1480
01:06:54,750 --> 01:07:01,650
<font color="#CCCCCC">nesting and so yeah</font><font color="#E5E5E5"> so that's in a</font>

1481
01:06:58,560 --> 01:07:03,810
nutshell what<font color="#CCCCCC"> I'm saying</font><font color="#E5E5E5"> so we we</font>

1482
01:07:01,650 --> 01:07:05,310
enumerate across the first<font color="#E5E5E5"> 16 bits</font><font color="#CCCCCC"> the</font>

1483
01:07:03,810 --> 01:07:08,790
key for<font color="#E5E5E5"> every</font><font color="#CCCCCC"> one of</font><font color="#E5E5E5"> every</font><font color="#CCCCCC"> one of</font><font color="#E5E5E5"> those</font>

1484
01:07:05,310 --> 01:07:11,250
possibilities we build a table<font color="#E5E5E5"> we search</font>

1485
01:07:08,790 --> 01:07:14,130
for middle bits of the key in the table

1486
01:07:11,250 --> 01:07:16,950
<font color="#CCCCCC">with a valid based on the challenger's</font>

1487
01:07:14,130 --> 01:07:18,570
equipped<font color="#CCCCCC"> 9 to 10 points</font><font color="#E5E5E5"> values we</font>

1488
01:07:16,950 --> 01:07:21,149
<font color="#CCCCCC">brute-force the last 40 bits for the</font>

1489
01:07:18,570 --> 01:07:24,380
ones<font color="#E5E5E5"> that survived and then the way</font><font color="#CCCCCC"> we</font>

1490
01:07:21,150 --> 01:07:26,100
<font color="#CCCCCC">brute-force is we</font><font color="#E5E5E5"> test against</font><font color="#CCCCCC"> 2</font>

1491
01:07:24,380 --> 01:07:27,840
encrypted<font color="#CCCCCC"> not encrypted</font>

1492
01:07:26,100 --> 01:07:29,759
<font color="#CCCCCC">challenge-response values we know it was</font>

1493
01:07:27,840 --> 01:07:31,500
<font color="#E5E5E5">satisfied</font><font color="#CCCCCC"> 1 because</font><font color="#E5E5E5"> that's how</font><font color="#CCCCCC"> its ended</font>

1494
01:07:29,760 --> 01:07:33,720
up<font color="#CCCCCC"> on the</font><font color="#E5E5E5"> table which</font><font color="#CCCCCC"> won't do - to make</font>

1495
01:07:31,500 --> 01:07:36,360
sure and all you're going to do is seed

1496
01:07:33,720 --> 01:07:39,209
it with the key<font color="#E5E5E5"> that you're trying and</font>

1497
01:07:36,360 --> 01:07:41,430
the<font color="#E5E5E5"> crypto challenge nonce and then see</font>

1498
01:07:39,210 --> 01:07:44,100
if it decrypt<font color="#E5E5E5"> see chance response</font><font color="#CCCCCC"> value</font>

1499
01:07:41,430 --> 01:07:47,569
that's all that's all<font color="#E5E5E5"> you do so in terms</font>

1500
01:07:44,100 --> 01:07:49,650
of complexity<font color="#E5E5E5"> we have 2 to the 16 tables</font>

1501
01:07:47,570 --> 01:07:52,200
<font color="#E5E5E5">because there's 16 bits in the lower</font>

1502
01:07:49,650 --> 01:07:53,039
part<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the key we're going</font><font color="#CCCCCC"> to do</font><font color="#E5E5E5"> 2 to</font>

1503
01:07:52,200 --> 01:07:55,739
the 18

1504
01:07:53,039 --> 01:07:58,829
<font color="#E5E5E5">options to build the</font><font color="#CCCCCC"> table for</font><font color="#E5E5E5"> each of</font>

1505
01:07:55,739 --> 01:08:01,410
these and<font color="#E5E5E5"> to</font><font color="#CCCCCC"> tune</font><font color="#E5E5E5"> 18 lookups to find</font>

1506
01:07:58,829 --> 01:08:03,749
matches and then for the ones<font color="#E5E5E5"> that</font>

1507
01:08:01,410 --> 01:08:05,939
<font color="#CCCCCC">survived to to the</font><font color="#E5E5E5"> 14 brute force which</font>

1508
01:08:03,749 --> 01:08:08,968
is only happens<font color="#CCCCCC"> every now and again it's</font>

1509
01:08:05,939 --> 01:08:13,049
negligible<font color="#E5E5E5"> doesn't impact which becomes</font>

1510
01:08:08,969 --> 01:08:15,599
<font color="#CCCCCC">2 to the 35 operations in total which is</font>

1511
01:08:13,049 --> 01:08:18,238
smaller than<font color="#E5E5E5"> 2 to the 48 and therefore</font>

1512
01:08:15,599 --> 01:08:22,199
is Wyatt wins and it takes 16 minutes on

1513
01:08:18,238 --> 01:08:23,698
average<font color="#E5E5E5"> on my</font><font color="#CCCCCC"> MacBook Air but I every</font>

1514
01:08:22,198 --> 01:08:25,948
<font color="#CCCCCC">time</font><font color="#E5E5E5"> I look at the code I</font><font color="#CCCCCC"> realize</font><font color="#E5E5E5"> I</font>

1515
01:08:23,698 --> 01:08:27,658
<font color="#E5E5E5">could have done stuff better</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> you</font>

1516
01:08:25,948 --> 01:08:29,460
know<font color="#E5E5E5"> there's things I'm</font><font color="#CCCCCC"> recalculating</font>

1517
01:08:27,658 --> 01:08:31,170
<font color="#E5E5E5">every time we go find</font><font color="#CCCCCC"> a loop that I</font>

1518
01:08:29,460 --> 01:08:34,980
could have<font color="#E5E5E5"> probably cached stuff like</font>

1519
01:08:31,170 --> 01:08:36,630
<font color="#E5E5E5">that say so if you want to you know</font>

1520
01:08:34,979 --> 01:08:38,608
become a rock star<font color="#E5E5E5"> in the</font><font color="#CCCCCC"> world</font><font color="#E5E5E5"> of</font>

1521
01:08:36,630 --> 01:08:39,779
crypto then you know for an<font color="#E5E5E5"> out update</font>

1522
01:08:38,609 --> 01:08:41,790
technology that no one's been<font color="#E5E5E5"> using</font>

1523
01:08:39,779 --> 01:08:42,480
<font color="#CCCCCC">anymore</font><font color="#E5E5E5"> you could fix my code</font><font color="#CCCCCC"> to make it</font>

1524
01:08:41,790 --> 01:08:44,790
<font color="#E5E5E5">better</font>

1525
01:08:42,479 --> 01:08:46,858
<font color="#E5E5E5">and I'd be very</font><font color="#CCCCCC"> interested and it's on</font>

1526
01:08:44,790 --> 01:08:49,500
github<font color="#CCCCCC"> so you</font><font color="#E5E5E5"> can even submit like pull</font>

1527
01:08:46,859 --> 01:08:51,949
requests and you know<font color="#CCCCCC"> fancy</font><font color="#E5E5E5"> hipster</font>

1528
01:08:49,500 --> 01:08:51,948
things like that

1529
01:08:52,279 --> 01:08:58,319
so it<font color="#E5E5E5"> was the hardest one</font><font color="#CCCCCC"> to understand</font>

1530
01:08:56,130 --> 01:09:00,449
<font color="#CCCCCC">I still don't know why the probability</font>

1531
01:08:58,319 --> 01:09:02,130
as a courtroom not<font color="#E5E5E5"> half because whenever</font>

1532
01:09:00,448 --> 01:09:05,460
I look<font color="#E5E5E5"> at the Google hitting</font><font color="#CCCCCC"> table I see</font>

1533
01:09:02,130 --> 01:09:06,839
half and contacted Flavio Garcia and I

1534
01:09:05,460 --> 01:09:09,059
said why<font color="#CCCCCC"> is it a quarter-turn you</font><font color="#E5E5E5"> and</font>

1535
01:09:06,839 --> 01:09:10,979
all<font color="#CCCCCC"> your reading it</font><font color="#E5E5E5"> wrong you reading</font>

1536
01:09:09,059 --> 01:09:12,719
the phone<font color="#CCCCCC"> really wrong and then I was</font>

1537
01:09:10,979 --> 01:09:14,568
like yeah I still don't<font color="#CCCCCC"> really get it</font>

1538
01:09:12,719 --> 01:09:16,859
and he was up<font color="#CCCCCC"> where's because of this</font>

1539
01:09:14,569 --> 01:09:18,869
yes is to<font color="#E5E5E5"> look at the food in tables</font>

1540
01:09:16,859 --> 01:09:24,239
it's obvious now system<font color="#CCCCCC"> applying I</font><font color="#E5E5E5"> was</font>

1541
01:09:18,868 --> 01:09:26,368
like it dude it's not and so after

1542
01:09:24,238 --> 01:09:27,899
<font color="#CCCCCC">taught</font><font color="#E5E5E5"> off</font><font color="#CCCCCC"> two times if you answer my</font>

1543
01:09:26,368 --> 01:09:29,250
<font color="#E5E5E5">question like with something</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> can</font>

1544
01:09:27,899 --> 01:09:30,598
understand<font color="#CCCCCC"> though I decided to stop</font>

1545
01:09:29,250 --> 01:09:34,078
asking<font color="#CCCCCC"> cuz</font><font color="#E5E5E5"> I don't want to appear to be</font>

1546
01:09:30,599 --> 01:09:38,299
<font color="#CCCCCC">a complete</font><font color="#E5E5E5"> idiot to him and Indian this</font>

1547
01:09:34,078 --> 01:09:42,719
really matters<font color="#E5E5E5"> because the the paper</font>

1548
01:09:38,299 --> 01:09:46,710
<font color="#CCCCCC">talk</font><font color="#E5E5E5"> about</font><font color="#CCCCCC"> bits</font><font color="#E5E5E5"> in terms of the order</font>

1549
01:09:42,719 --> 01:09:49,259
<font color="#E5E5E5">they're sent in over the RF so the first</font>

1550
01:09:46,710 --> 01:09:51,480
bit sent would be bit<font color="#CCCCCC"> zero and then it</font>

1551
01:09:49,259 --> 01:09:53,099
would<font color="#E5E5E5"> be bit</font><font color="#CCCCCC"> one etc but</font><font color="#E5E5E5"> when you</font>

1552
01:09:51,479 --> 01:09:55,769
actually put them in a computer<font color="#CCCCCC"> into</font>

1553
01:09:53,099 --> 01:09:58,800
<font color="#E5E5E5">variables we have all our bits in the</font>

1554
01:09:55,770 --> 01:10:00,599
way around and so you<font color="#CCCCCC"> kind of you can</font>

1555
01:09:58,800 --> 01:10:03,320
<font color="#CCCCCC">easily be working</font><font color="#E5E5E5"> back to front on what</font>

1556
01:10:00,599 --> 01:10:03,320
you<font color="#E5E5E5"> think and</font>

1557
01:10:03,370 --> 01:10:08,410
as it turns out I<font color="#E5E5E5"> was lucky good at my</font>

1558
01:10:05,590 --> 01:10:10,390
<font color="#E5E5E5">first time but I was at the point of</font>

1559
01:10:08,410 --> 01:10:12,490
kind<font color="#CCCCCC"> of going</font><font color="#E5E5E5"> I will just guess that</font>

1560
01:10:10,390 --> 01:10:14,200
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> going to</font><font color="#CCCCCC"> work and see if it works</font>

1561
01:10:12,490 --> 01:10:16,690
or not<font color="#E5E5E5"> and it happened to work but if</font>

1562
01:10:14,200 --> 01:10:21,010
you hadn't<font color="#E5E5E5"> had all this engine this bit</font>

1563
01:10:16,690 --> 01:10:22,360
<font color="#E5E5E5">flipping nonsense</font><font color="#CCCCCC"> to to try it</font><font color="#E5E5E5"> just</font>

1564
01:10:21,010 --> 01:10:23,860
messes with your mind<font color="#E5E5E5"> when you're trying</font>

1565
01:10:22,360 --> 01:10:25,480
<font color="#E5E5E5">to remember what they're saying about</font>

1566
01:10:23,860 --> 01:10:29,019
<font color="#E5E5E5">the different bits and which ones they</font>

1567
01:10:25,480 --> 01:10:30,849
map<font color="#E5E5E5"> to so in terms of the commands again</font>

1568
01:10:29,020 --> 01:10:34,540
we're going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> use sniff</font><font color="#E5E5E5"> PWM to get the</font>

1569
01:10:30,850 --> 01:10:39,400
hundred<font color="#CCCCCC"> thirty six</font><font color="#E5E5E5"> encrypted fonts</font>

1570
01:10:34,540 --> 01:10:40,930
values and then we're going to wish is

1571
01:10:39,400 --> 01:10:42,580
<font color="#CCCCCC">just how we're</font><font color="#E5E5E5"> going to capture them</font>

1572
01:10:40,930 --> 01:10:45,460
using that<font color="#E5E5E5"> hundred thirty six women at</font>

1573
01:10:42,580 --> 01:10:46,930
<font color="#E5E5E5">least you can have more the code as it</font>

1574
01:10:45,460 --> 01:10:49,630
<font color="#E5E5E5">stands will take a thousand and twenty</font>

1575
01:10:46,930 --> 01:10:52,180
<font color="#E5E5E5">four because I had to stick an arbitrary</font>

1576
01:10:49,630 --> 01:10:53,860
ceiling on<font color="#CCCCCC"> it the more you have the more</font>

1577
01:10:52,180 --> 01:10:59,440
the quicker<font color="#CCCCCC"> it'll run</font><font color="#E5E5E5"> in the more</font>

1578
01:10:53,860 --> 01:11:02,320
reliable it will be if the values you

1579
01:10:59,440 --> 01:11:05,080
get have any<font color="#E5E5E5"> errors in</font><font color="#CCCCCC"> them the whole</font>

1580
01:11:02,320 --> 01:11:08,200
<font color="#E5E5E5">thing won't work</font><font color="#CCCCCC"> so you have to be very</font>

1581
01:11:05,080 --> 01:11:09,880
<font color="#CCCCCC">you have</font><font color="#E5E5E5"> to test the whole capturing bit</font>

1582
01:11:08,200 --> 01:11:13,210
to make<font color="#E5E5E5"> sure you're capturing good</font>

1583
01:11:09,880 --> 01:11:14,620
values it was hard to do if you don't

1584
01:11:13,210 --> 01:11:17,350
<font color="#E5E5E5">know the key because it's hard to test</font>

1585
01:11:14,620 --> 01:11:19,480
if they're<font color="#CCCCCC"> valid a lot so you need to do</font>

1586
01:11:17,350 --> 01:11:21,310
everything<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> in your power to</font><font color="#E5E5E5"> get</font>

1587
01:11:19,480 --> 01:11:24,250
as good a read as<font color="#E5E5E5"> you can because one</font>

1588
01:11:21,310 --> 01:11:26,970
bit flipped in one of the<font color="#CCCCCC"> pair's will</font>

1589
01:11:24,250 --> 01:11:29,470
trash the entire process<font color="#CCCCCC"> because</font>

1590
01:11:26,970 --> 01:11:34,570
something<font color="#E5E5E5"> you know the valid bit of the</font>

1591
01:11:29,470 --> 01:11:37,150
key won't get through<font color="#E5E5E5"> the net</font><font color="#CCCCCC"> and then</font>

1592
01:11:34,570 --> 01:11:44,650
you just run<font color="#E5E5E5"> HT to crack three and it</font>

1593
01:11:37,150 --> 01:11:45,670
just works<font color="#E5E5E5"> so let's do the demo</font><font color="#CCCCCC"> right</font>

1594
01:11:44,650 --> 01:11:53,280
what we'll do

1595
01:11:45,670 --> 01:11:53,280
I will<font color="#E5E5E5"> sit her I'll get rid of this disc</font>

1596
01:11:57,000 --> 01:12:00,960
he says

1597
01:11:59,219 --> 01:12:04,699
oh yeah<font color="#E5E5E5"> because</font><font color="#CCCCCC"> I could you</font><font color="#E5E5E5"> go spin the</font>

1598
01:12:00,960 --> 01:12:04,699
disc up in order<font color="#E5E5E5"> to eject it on you</font>

1599
01:12:04,880 --> 01:12:12,510
thank you<font color="#CCCCCC"> I'm good give her that and</font>

1600
01:12:09,480 --> 01:12:26,250
I'll plug in my other<font color="#CCCCCC"> wife fiddler just</font>

1601
01:12:12,510 --> 01:12:28,400
to sort of demonstrate this bit<font color="#CCCCCC"> so bear</font>

1602
01:12:26,250 --> 01:12:41,060
with me<font color="#E5E5E5"> one second I'll just send this</font>

1603
01:12:28,400 --> 01:12:41,059
second half in as a<font color="#E5E5E5"> as a reader I need I</font>

1604
01:12:42,920 --> 01:13:02,820
just<font color="#E5E5E5"> need the key right so we're in here</font>

1605
01:12:59,630 --> 01:13:08,300
sniffing<font color="#CCCCCC"> the UMS right so we're</font><font color="#E5E5E5"> gonna</font>

1606
01:13:02,820 --> 01:13:08,299
<font color="#E5E5E5">start sniffing so if I overlap the coils</font>

1607
01:13:09,620 --> 01:13:14,190
<font color="#E5E5E5">there's that's the start off that</font>

1608
01:13:12,480 --> 01:13:16,049
because<font color="#CCCCCC"> to me is constant you</font><font color="#E5E5E5"> don't</font>

1609
01:13:14,190 --> 01:13:17,280
constantly gonna start or start<font color="#E5E5E5"> off</font>

1610
01:13:16,050 --> 01:13:21,469
start<font color="#CCCCCC"> looking it's kind of like</font>

1611
01:13:17,280 --> 01:13:24,690
initially<font color="#E5E5E5"> and if I get a card on there</font>

1612
01:13:21,469 --> 01:13:27,030
you<font color="#E5E5E5"> can see how quickly they're coming</font>

1613
01:13:24,690 --> 01:13:28,530
<font color="#E5E5E5">up so you</font><font color="#CCCCCC"> can even</font><font color="#E5E5E5"> you don't have to do</font>

1614
01:13:27,030 --> 01:13:34,019
this all in<font color="#E5E5E5"> one session you</font><font color="#CCCCCC"> just have to</font>

1615
01:13:28,530 --> 01:13:35,820
use the<font color="#E5E5E5"> same UID so always</font><font color="#CCCCCC"> go</font><font color="#E5E5E5"> just just</font>

1616
01:13:34,020 --> 01:13:39,989
<font color="#E5E5E5">quickly demonstrate</font><font color="#CCCCCC"> how</font><font color="#E5E5E5"> quickly you can</font>

1617
01:13:35,820 --> 01:13:45,590
<font color="#E5E5E5">get like valid encrypted nonce encrypted</font>

1618
01:13:39,989 --> 01:13:49,910
telephones values<font color="#E5E5E5"> so we just stop that</font>

1619
01:13:45,590 --> 01:13:49,910
and if<font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> sir phone</font><font color="#E5E5E5"> list</font>

1620
01:13:52,470 --> 01:13:55,620
<font color="#CCCCCC">and fairness some of those were probably</font>

1621
01:13:53,850 --> 01:13:59,180
stored<font color="#CCCCCC"> let's let's do that again</font>

1622
01:13:55,620 --> 01:14:01,349
<font color="#CCCCCC">that's clear I'll just clear it and</font>

1623
01:13:59,180 --> 01:14:06,060
because that's probably<font color="#CCCCCC"> a</font><font color="#E5E5E5"> learning fair</font>

1624
01:14:01,350 --> 01:14:11,310
test<font color="#CCCCCC"> PW in</font><font color="#E5E5E5"> their own</font><font color="#CCCCCC"> right</font>

1625
01:14:06,060 --> 01:14:16,730
there are<font color="#E5E5E5"> no that I can't type there are</font>

1626
01:14:11,310 --> 01:14:16,730
no stored ones in there all<font color="#CCCCCC"> right so</font>

1627
01:14:17,780 --> 01:14:21,440
<font color="#CCCCCC">I'll use that one</font>

1628
01:14:29,210 --> 01:14:35,400
<font color="#E5E5E5">it's just grabbing your load these are</font>

1629
01:14:33,870 --> 01:14:37,970
really not random if you read the code

1630
01:14:35,400 --> 01:14:40,889
you'll see<font color="#E5E5E5"> how not random these are</font><font color="#CCCCCC"> pyth</font>

1631
01:14:37,970 --> 01:14:44,340
it's fine<font color="#CCCCCC"> it's only for testing purposes</font>

1632
01:14:40,890 --> 01:14:46,110
this bit<font color="#E5E5E5"> right</font><font color="#CCCCCC"> if I list them yeah okay</font>

1633
01:14:44,340 --> 01:14:49,110
<font color="#CCCCCC">where they go</font><font color="#E5E5E5"> see we've got that many</font>

1634
01:14:46,110 --> 01:14:51,750
<font color="#CCCCCC">like pages</font><font color="#E5E5E5"> worth in that amount of</font><font color="#CCCCCC"> time</font>

1635
01:14:49,110 --> 01:14:56,670
so<font color="#CCCCCC"> the other thing I</font><font color="#E5E5E5"> was</font><font color="#CCCCCC"> going to say</font>

1636
01:14:51,750 --> 01:14:58,950
<font color="#CCCCCC">about this one was you</font><font color="#E5E5E5"> don't have to so</font>

1637
01:14:56,670 --> 01:15:01,440
these are obviously<font color="#CCCCCC"> divided cards for</font>

1638
01:14:58,950 --> 01:15:03,389
this key for this system<font color="#E5E5E5"> but they don't</font>

1639
01:15:01,440 --> 01:15:07,500
have to be as long<font color="#CCCCCC"> as</font><font color="#E5E5E5"> the system will</font>

1640
01:15:03,390 --> 01:15:10,320
take in any<font color="#CCCCCC"> hi tag</font><font color="#E5E5E5"> to card now any UID</font>

1641
01:15:07,500 --> 01:15:13,020
<font color="#E5E5E5">which cars won't as I said yesterday</font>

1642
01:15:10,320 --> 01:15:15,900
cars<font color="#CCCCCC"> are programmed to</font><font color="#E5E5E5"> the UID they be</font>

1643
01:15:13,020 --> 01:15:17,430
<font color="#E5E5E5">their whitelisted but any building</font>

1644
01:15:15,900 --> 01:15:20,190
<font color="#CCCCCC">access control system kind</font><font color="#E5E5E5"> of has to</font>

1645
01:15:17,430 --> 01:15:22,620
<font color="#E5E5E5">because you know you've got you know</font>

1646
01:15:20,190 --> 01:15:24,450
<font color="#CCCCCC">20,000 employees and then load more joy</font>

1647
01:15:22,620 --> 01:15:25,950
well you can't predict<font color="#E5E5E5"> ahead of time</font>

1648
01:15:24,450 --> 01:15:27,450
where their yurts<font color="#E5E5E5"> are going to be and</font>

1649
01:15:25,950 --> 01:15:30,630
you probably<font color="#CCCCCC"> aren't gonna whitelist</font><font color="#E5E5E5"> to</font>

1650
01:15:27,450 --> 01:15:33,480
all 20,000 cards so so you can<font color="#CCCCCC"> buy</font>

1651
01:15:30,630 --> 01:15:35,340
blanks and just use the random blank<font color="#E5E5E5"> as</font>

1652
01:15:33,480 --> 01:15:37,799
long as you use<font color="#E5E5E5"> the same blank every</font>

1653
01:15:35,340 --> 01:15:40,740
time<font color="#CCCCCC"> you're capturing these things</font><font color="#E5E5E5"> and</font>

1654
01:15:37,800 --> 01:15:42,480
then use that<font color="#E5E5E5"> your</font><font color="#CCCCCC"> ID</font><font color="#E5E5E5"> in the attack you</font>

1655
01:15:40,740 --> 01:15:44,490
<font color="#E5E5E5">can attack it just by attacking the</font>

1656
01:15:42,480 --> 01:15:45,929
reader with a random card that you've

1657
01:15:44,490 --> 01:15:49,170
got so you<font color="#E5E5E5"> don't actually have to have</font>

1658
01:15:45,930 --> 01:15:58,130
<font color="#E5E5E5">stolen or borrowed a valid tag for this</font>

1659
01:15:49,170 --> 01:16:01,890
attack so if we cut to this window I'll

1660
01:15:58,130 --> 01:16:06,140
just bring up<font color="#E5E5E5"> so you can see in the</font>

1661
01:16:01,890 --> 01:16:06,140
workplace<font color="#CCCCCC"> yeah so</font>

1662
01:16:07,369 --> 01:16:13,920
it's<font color="#CCCCCC"> have a</font><font color="#E5E5E5"> quick look</font><font color="#CCCCCC"> we'll do that</font>

1663
01:16:10,980 --> 01:16:17,459
same doing the same card again<font color="#E5E5E5"> they'll</font>

1664
01:16:13,920 --> 01:16:21,420
have 136 encrypted<font color="#CCCCCC"> noise encrypted</font>

1665
01:16:17,460 --> 01:16:24,060
<font color="#CCCCCC">chance response phase I'll show you what</font>

1666
01:16:21,420 --> 01:16:28,380
the file looks<font color="#CCCCCC"> like it's just like like</font>

1667
01:16:24,060 --> 01:16:33,690
literally<font color="#CCCCCC"> you know blah</font><font color="#E5E5E5"> and then all</font>

1668
01:16:28,380 --> 01:16:35,820
we're gonna do is when the crack so it

1669
01:16:33,690 --> 01:16:41,549
needs<font color="#E5E5E5"> the</font><font color="#CCCCCC"> new</font><font color="#E5E5E5"> ID which is</font><font color="#CCCCCC"> that value</font>

1670
01:16:35,820 --> 01:16:47,280
<font color="#E5E5E5">there</font><font color="#CCCCCC"> and it needs</font><font color="#E5E5E5"> the foil which is</font>

1671
01:16:41,550 --> 01:16:51,420
that<font color="#CCCCCC"> there now of judiciously chosen a</font>

1672
01:16:47,280 --> 01:16:53,429
key that<font color="#E5E5E5"> won't take 16 minutes know it</font>

1673
01:16:51,420 --> 01:16:55,409
knowing how<font color="#CCCCCC"> it searches I'll pick</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> get</font>

1674
01:16:53,429 --> 01:16:56,760
a<font color="#E5E5E5"> key in</font><font color="#CCCCCC"> that in a you know in the right</font>

1675
01:16:55,409 --> 01:16:58,920
sort<font color="#CCCCCC"> of space so</font><font color="#E5E5E5"> this would be</font>

1676
01:16:56,760 --> 01:17:01,560
relatively quick<font color="#E5E5E5"> but you can see these</font>

1677
01:16:58,920 --> 01:17:03,719
are all like the lower<font color="#E5E5E5"> 16 bits of the</font>

1678
01:17:01,560 --> 01:17:07,290
key<font color="#E5E5E5"> that's how quickly it's getting</font>

1679
01:17:03,719 --> 01:17:09,869
<font color="#E5E5E5">through building the tables</font><font color="#CCCCCC"> and certain</font>

1680
01:17:07,290 --> 01:17:12,000
tables and and not finding any valid

1681
01:17:09,869 --> 01:17:14,580
middle bits of the key<font color="#E5E5E5"> so these are all</font>

1682
01:17:12,000 --> 01:17:16,469
ones<font color="#E5E5E5"> whether were</font><font color="#CCCCCC"> all words</font><font color="#E5E5E5"> that we</font>

1683
01:17:14,580 --> 01:17:17,550
worth<font color="#CCCCCC"> hammer</font><font color="#E5E5E5"> brute force and then we</font>

1684
01:17:16,469 --> 01:17:20,960
found<font color="#E5E5E5"> a whole road that had to</font>

1685
01:17:17,550 --> 01:17:20,960
<font color="#CCCCCC">brute-force because they were candidates</font>

1686
01:17:22,610 --> 01:17:26,909
<font color="#E5E5E5">but you can see</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> not brute forcing</font>

1687
01:17:24,989 --> 01:17:29,339
all of them and<font color="#E5E5E5"> that's the point is</font><font color="#CCCCCC"> that</font>

1688
01:17:26,909 --> 01:17:32,730
we've<font color="#CCCCCC"> reduced the problem</font><font color="#E5E5E5"> from a massive</font>

1689
01:17:29,340 --> 01:17:35,670
brute force<font color="#E5E5E5"> to and then there's the key</font>

1690
01:17:32,730 --> 01:17:37,830
so it's now<font color="#E5E5E5"> crack the key on average it</font>

1691
01:17:35,670 --> 01:17:41,550
<font color="#CCCCCC">takes</font><font color="#E5E5E5"> 16 minutes total search</font><font color="#CCCCCC"> base 32</font>

1692
01:17:37,830 --> 01:17:47,070
minutes on this you<font color="#CCCCCC"> know MacBook but cue</font>

1693
01:17:41,550 --> 01:17:50,130
<font color="#CCCCCC">Adam you know faster computer more cause</font>

1694
01:17:47,070 --> 01:17:51,900
you could do it quicker<font color="#E5E5E5"> if your</font><font color="#CCCCCC"> code you</font>

1695
01:17:50,130 --> 01:17:57,719
<font color="#CCCCCC">could do it</font><font color="#E5E5E5"> quicker but that that is</font>

1696
01:17:51,900 --> 01:18:09,059
indeed<font color="#CCCCCC"> the key</font><font color="#E5E5E5"> so there you have that</font>

1697
01:17:57,719 --> 01:18:11,730
attack so it's<font color="#CCCCCC"> I will now</font><font color="#E5E5E5"> quickly talk</font>

1698
01:18:09,060 --> 01:18:14,460
about limitations of future work because

1699
01:18:11,730 --> 01:18:17,190
you kind of you know should have<font color="#CCCCCC"> some</font>

1700
01:18:14,460 --> 01:18:22,800
kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> aim to this sort</font><font color="#CCCCCC"> of thing</font>

1701
01:18:17,190 --> 01:18:24,809
so the<font color="#E5E5E5"> our</font><font color="#CCCCCC"> Fiddler's</font><font color="#E5E5E5"> this baby here a</font>

1702
01:18:22,800 --> 01:18:26,850
very<font color="#E5E5E5"> short read distance you're trying</font>

1703
01:18:24,810 --> 01:18:31,170
to read a high tag - tag<font color="#E5E5E5"> it's got to</font>

1704
01:18:26,850 --> 01:18:34,050
literally be touching the thing and not

1705
01:18:31,170 --> 01:18:36,300
<font color="#E5E5E5">overlapping the wire</font><font color="#CCCCCC"> because that</font>

1706
01:18:34,050 --> 01:18:38,989
it<font color="#CCCCCC"> up and you might need</font><font color="#E5E5E5"> to move it</font>

1707
01:18:36,300 --> 01:18:42,030
<font color="#CCCCCC">about a bit</font><font color="#E5E5E5"> it's very very sensitive and</font>

1708
01:18:38,989 --> 01:18:44,428
<font color="#E5E5E5">-</font><font color="#CCCCCC"> to being</font><font color="#E5E5E5"> in the right place and any</font>

1709
01:18:42,030 --> 01:18:47,250
<font color="#E5E5E5">amount of distance it won't read it now</font>

1710
01:18:44,429 --> 01:18:48,179
<font color="#E5E5E5">I</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> actually</font><font color="#CCCCCC"> been I experimented with</font>

1711
01:18:47,250 --> 01:18:53,250
different<font color="#CCCCCC"> coils</font>

1712
01:18:48,179 --> 01:18:55,409
I was profound<font color="#E5E5E5"> in</font><font color="#CCCCCC"> lorry about how to go</font>

1713
01:18:53,250 --> 01:18:58,139
join coil<font color="#E5E5E5"> and already do is</font><font color="#CCCCCC"> whine wire</font>

1714
01:18:55,409 --> 01:19:02,370
around<font color="#E5E5E5"> some around obviously</font><font color="#CCCCCC"> where you</font>

1715
01:18:58,139 --> 01:19:06,230
<font color="#E5E5E5">buy this meter</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> LCR meter so you get</font>

1716
01:19:02,370 --> 01:19:12,570
an LCR<font color="#E5E5E5"> 45 don't measure inductance</font><font color="#CCCCCC"> so</font>

1717
01:19:06,230 --> 01:19:17,400
<font color="#CCCCCC">you know what ductus this coil</font><font color="#E5E5E5"> is 267</font>

1718
01:19:12,570 --> 01:19:20,190
micro henries<font color="#E5E5E5"> I think it was and you</font>

1719
01:19:17,400 --> 01:19:21,719
<font color="#CCCCCC">basically wind around until you get a</font>

1720
01:19:20,190 --> 01:19:24,739
coil<font color="#E5E5E5"> that's around the same kind</font><font color="#CCCCCC"> of</font>

1721
01:19:21,719 --> 01:19:28,199
number<font color="#E5E5E5"> and then use that</font><font color="#CCCCCC"> so around</font>

1722
01:19:24,739 --> 01:19:31,530
around a strainer<font color="#E5E5E5"> which is about</font><font color="#CCCCCC"> nine</font>

1723
01:19:28,199 --> 01:19:34,530
inches<font color="#CCCCCC"> and that would</font><font color="#E5E5E5"> get me another</font>

1724
01:19:31,530 --> 01:19:39,030
<font color="#E5E5E5">centimeter on the distance and then I</font>

1725
01:19:34,530 --> 01:19:41,150
round it around sometimes about that

1726
01:19:39,030 --> 01:19:44,009
sort of size and<font color="#CCCCCC"> a</font><font color="#E5E5E5"> common one of us</font>

1727
01:19:41,150 --> 01:19:45,480
wasn't a saucepan<font color="#CCCCCC"> it was</font><font color="#E5E5E5"> something now</font><font color="#CCCCCC"> I</font>

1728
01:19:44,010 --> 01:19:48,060
basically raided the kitchen<font color="#E5E5E5"> for</font>

1729
01:19:45,480 --> 01:19:49,620
anything fun<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> round and round</font>

1730
01:19:48,060 --> 01:19:52,110
stuff around it so I had a coil<font color="#CCCCCC"> it was</font>

1731
01:19:49,620 --> 01:19:56,250
about this big<font color="#CCCCCC"> and that turned out that</font>

1732
01:19:52,110 --> 01:19:59,009
<font color="#CCCCCC">got me</font><font color="#E5E5E5"> five centimeters of</font><font color="#CCCCCC"> reed distance</font>

1733
01:19:56,250 --> 01:20:00,659
<font color="#E5E5E5">which was kind of good and then I round</font>

1734
01:19:59,010 --> 01:20:02,850
it around the laundry basket which was

1735
01:20:00,659 --> 01:20:05,099
like this<font color="#CCCCCC"> sort of</font><font color="#E5E5E5"> size by and it</font>

1736
01:20:02,850 --> 01:20:07,320
wouldn't<font color="#E5E5E5"> energize</font><font color="#CCCCCC"> the card at all at any</font>

1737
01:20:05,100 --> 01:20:09,420
distance<font color="#E5E5E5"> and that's because you're only</font>

1738
01:20:07,320 --> 01:20:11,849
feeding off USB<font color="#E5E5E5"> you've got a maximum</font>

1739
01:20:09,420 --> 01:20:13,409
<font color="#E5E5E5">amount</font><font color="#CCCCCC"> of power</font><font color="#E5E5E5"> you're giving it and the</font>

1740
01:20:11,850 --> 01:20:15,270
field<font color="#E5E5E5"> doesn't get sufficiently</font>

1741
01:20:13,409 --> 01:20:19,019
established in<font color="#E5E5E5"> order to talk to the card</font>

1742
01:20:15,270 --> 01:20:21,989
so there's a limitation there<font color="#CCCCCC"> I've asked</font>

1743
01:20:19,020 --> 01:20:23,790
Adam and<font color="#CCCCCC"> Zach a number</font><font color="#E5E5E5"> of times if</font>

1744
01:20:21,989 --> 01:20:28,459
there's any mods they could do<font color="#E5E5E5"> to the</font>

1745
01:20:23,790 --> 01:20:28,460
board<font color="#CCCCCC"> to like give it</font><font color="#E5E5E5"> more power or</font>

1746
01:20:28,699 --> 01:20:32,549
anyway you can attach a passport or

1747
01:20:31,139 --> 01:20:34,080
anything<font color="#E5E5E5"> you could do to the front end</font>

1748
01:20:32,550 --> 01:20:37,980
<font color="#CCCCCC">and they</font><font color="#E5E5E5"> just do</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> have an answer at</font>

1749
01:20:34,080 --> 01:20:43,199
this<font color="#CCCCCC"> point</font><font color="#E5E5E5"> in time so</font><font color="#CCCCCC"> so that's not an</font>

1750
01:20:37,980 --> 01:20:46,080
ideal<font color="#CCCCCC"> see now you can you all probably</font>

1751
01:20:43,199 --> 01:20:50,400
<font color="#E5E5E5">saw</font><font color="#CCCCCC"> the tastic</font><font color="#E5E5E5"> from the couple years</font><font color="#CCCCCC"> ago</font>

1752
01:20:46,080 --> 01:20:52,710
which was<font color="#CCCCCC"> a long-range</font><font color="#E5E5E5"> rfid reader 425</font>

1753
01:20:50,400 --> 01:20:56,780
kilohertz<font color="#E5E5E5"> but that's for like</font><font color="#CCCCCC"> iam 4102</font>

1754
01:20:52,710 --> 01:20:59,699
<font color="#CCCCCC">Zork you phibes</font><font color="#E5E5E5"> sort of tags now</font>

1755
01:20:56,780 --> 01:21:01,710
so the standard when it's on there is a

1756
01:20:59,699 --> 01:21:03,598
hitbox which is like a<font color="#E5E5E5"> car park readers</font>

1757
01:21:01,710 --> 01:21:05,849
<font color="#E5E5E5">by</font><font color="#CCCCCC"> this big and it's</font><font color="#E5E5E5"> got a really good</font>

1758
01:21:03,599 --> 01:21:08,670
<font color="#E5E5E5">read distance of like over half a meter</font>

1759
01:21:05,849 --> 01:21:13,349
it's like really<font color="#E5E5E5"> good but the only reads</font>

1760
01:21:08,670 --> 01:21:15,300
up to 80 bits times up to 80 bits long

1761
01:21:13,349 --> 01:21:17,610
<font color="#E5E5E5">and it expects a particular</font>

1762
01:21:15,300 --> 01:21:19,710
synchronization pattern and if that

1763
01:21:17,610 --> 01:21:20,880
synchronization pattern<font color="#E5E5E5"> isn't there it</font>

1764
01:21:19,710 --> 01:21:23,250
doesn't<font color="#CCCCCC"> give you anything out of</font><font color="#E5E5E5"> the</font>

1765
01:21:20,880 --> 01:21:25,440
back in<font color="#CCCCCC"> Wiegand</font><font color="#E5E5E5"> so for a start it's not</font>

1766
01:21:23,250 --> 01:21:28,619
<font color="#E5E5E5">big enough because we will need to read</font>

1767
01:21:25,440 --> 01:21:30,540
more<font color="#E5E5E5"> him if our tags happen to have the</font>

1768
01:21:28,619 --> 01:21:32,848
<font color="#CCCCCC">public mode kind of</font><font color="#E5E5E5"> dated thing turned</font>

1769
01:21:30,540 --> 01:21:34,949
on I won't<font color="#E5E5E5"> go into an into too much</font>

1770
01:21:32,849 --> 01:21:36,750
detail but they don't talk high tag<font color="#CCCCCC"> to</font>

1771
01:21:34,949 --> 01:21:40,469
<font color="#CCCCCC">they</font><font color="#E5E5E5"> are really unsuitable for our</font>

1772
01:21:36,750 --> 01:21:42,960
purposes the only<font color="#CCCCCC"> long-range high tattoo</font>

1773
01:21:40,469 --> 01:21:46,110
<font color="#CCCCCC">reads on fire</font><font color="#E5E5E5"> by</font><font color="#CCCCCC"> frequent which</font><font color="#E5E5E5"> is</font>

1774
01:21:42,960 --> 01:21:47,790
bracel<font color="#E5E5E5"> to vendors and technology is a</font>

1775
01:21:46,110 --> 01:21:54,540
vendor that's<font color="#E5E5E5"> brought that</font><font color="#CCCCCC"> and put</font><font color="#E5E5E5"> it in</font>

1776
01:21:47,790 --> 01:21:57,239
a box they're really slow<font color="#E5E5E5"> as in the tag</font>

1777
01:21:54,540 --> 01:21:58,980
has<font color="#CCCCCC"> to be in the field like for over a</font>

1778
01:21:57,239 --> 01:22:01,110
second before it<font color="#E5E5E5"> can</font><font color="#CCCCCC"> actually read the</font>

1779
01:21:58,980 --> 01:22:03,629
tag which if<font color="#E5E5E5"> you're just</font><font color="#CCCCCC"> bumping</font><font color="#E5E5E5"> pass</font>

1780
01:22:01,110 --> 01:22:04,920
people<font color="#E5E5E5"> in a red team kind of way that</font>

1781
01:22:03,630 --> 01:22:06,750
doesn't<font color="#CCCCCC"> really happen you need to be</font>

1782
01:22:04,920 --> 01:22:11,190
like<font color="#E5E5E5"> lingering in a little people and</font>

1783
01:22:06,750 --> 01:22:13,380
stuff<font color="#E5E5E5"> like that and the range they claim</font>

1784
01:22:11,190 --> 01:22:16,559
which should be like up<font color="#E5E5E5"> to</font><font color="#CCCCCC"> 60</font>

1785
01:22:13,380 --> 01:22:18,300
<font color="#CCCCCC">centimetres and I'm like going I'm</font><font color="#E5E5E5"> not</font>

1786
01:22:16,560 --> 01:22:20,699
<font color="#CCCCCC">going anywhere and</font><font color="#E5E5E5"> they also get like 10</font>

1787
01:22:18,300 --> 01:22:23,130
<font color="#CCCCCC">centimeters and</font><font color="#E5E5E5"> as Isis I never like</font><font color="#CCCCCC"> oh</font>

1788
01:22:20,699 --> 01:22:26,489
<font color="#CCCCCC">oh</font><font color="#E5E5E5"> your cables too long so they flunked</font>

1789
01:22:23,130 --> 01:22:28,650
me a new cable<font color="#CCCCCC"> for 50 euros</font><font color="#E5E5E5"> they they</font>

1790
01:22:26,489 --> 01:22:29,519
literally made a cable like that and

1791
01:22:28,650 --> 01:22:31,469
charged me

1792
01:22:29,520 --> 01:22:34,139
<font color="#E5E5E5">outrageous</font><font color="#CCCCCC"> amounts of</font><font color="#E5E5E5"> engineering time</font>

1793
01:22:31,469 --> 01:22:35,550
to make a cable but<font color="#E5E5E5"> that upped it to 18</font>

1794
01:22:34,139 --> 01:22:37,260
central years<font color="#E5E5E5"> and I was like oh yeah</font>

1795
01:22:35,550 --> 01:22:38,520
this is<font color="#E5E5E5"> still nowhere near 60 and</font>

1796
01:22:37,260 --> 01:22:41,460
they're<font color="#CCCCCC"> looking</font><font color="#E5E5E5"> older I</font><font color="#CCCCCC"> think you</font>

1797
01:22:38,520 --> 01:22:43,740
<font color="#CCCCCC">probably said</font><font color="#E5E5E5"> up to 30 as I</font>

1798
01:22:41,460 --> 01:22:47,520
well you didn't<font color="#E5E5E5"> burn</font><font color="#CCCCCC"> it but him so it's</font>

1799
01:22:43,740 --> 01:22:49,800
still<font color="#CCCCCC"> not 30 you know</font><font color="#E5E5E5"> I understand the</font>

1800
01:22:47,520 --> 01:22:51,500
up to bit because<font color="#E5E5E5"> that's like a joke</font><font color="#CCCCCC"> and</font>

1801
01:22:49,800 --> 01:22:54,780
<font color="#CCCCCC">do</font><font color="#E5E5E5"> scientist every month isn't it but</font>

1802
01:22:51,500 --> 01:22:57,120
and they they were then<font color="#E5E5E5"> colleagues and</font>

1803
01:22:54,780 --> 01:22:58,980
always to do with the flux density of

1804
01:22:57,120 --> 01:23:00,420
your<font color="#E5E5E5"> tags like you know you obviously</font>

1805
01:22:58,980 --> 01:23:02,129
haven't bought in from us

1806
01:23:00,420 --> 01:23:03,510
you know you need to<font color="#CCCCCC"> look it up on</font><font color="#E5E5E5"> this</font>

1807
01:23:02,130 --> 01:23:06,270
graph<font color="#CCCCCC"> and</font><font color="#E5E5E5"> it will tell you what the read</font>

1808
01:23:03,510 --> 01:23:07,590
distance is and I'm thinking I<font color="#E5E5E5"> can't</font>

1809
01:23:06,270 --> 01:23:09,690
tell<font color="#E5E5E5"> them</font><font color="#CCCCCC"> that I'm reading other</font>

1810
01:23:07,590 --> 01:23:11,370
people's tags that I don't have<font color="#CCCCCC"> access</font>

1811
01:23:09,690 --> 01:23:15,839
<font color="#CCCCCC">to the spec sheets for that's like</font>

1812
01:23:11,370 --> 01:23:18,150
that's<font color="#E5E5E5"> not very fair</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> so I know</font><font color="#CCCCCC"> I'd a</font>

1813
01:23:15,840 --> 01:23:21,300
little moan about<font color="#E5E5E5"> like their</font><font color="#CCCCCC"> antennae</font>

1814
01:23:18,150 --> 01:23:22,980
being rubbish<font color="#E5E5E5"> and and then not be</font><font color="#CCCCCC"> known</font>

1815
01:23:21,300 --> 01:23:24,720
<font color="#E5E5E5">what they're doing and they came back</font>

1816
01:23:22,980 --> 01:23:28,709
another<font color="#E5E5E5"> bone about me no no my students</font>

1817
01:23:24,720 --> 01:23:29,850
and<font color="#CCCCCC"> beyond sponsors so no I'm not a</font><font color="#E5E5E5"> big</font>

1818
01:23:28,710 --> 01:23:32,400
fan of<font color="#E5E5E5"> Technology</font>

1819
01:23:29,850 --> 01:23:36,690
<font color="#CCCCCC">I knew famous</font><font color="#E5E5E5"> after I made it portable</font>

1820
01:23:32,400 --> 01:23:39,389
and bulk circuits and batteries<font color="#CCCCCC"> and</font>

1821
01:23:36,690 --> 01:23:42,419
stuff<font color="#E5E5E5"> like that to run it on it's all</font>

1822
01:23:39,390 --> 01:23:46,080
stopped working<font color="#E5E5E5"> and</font><font color="#CCCCCC"> I don't know if it</font>

1823
01:23:42,420 --> 01:23:48,410
because it overheated or<font color="#E5E5E5"> because the my</font>

1824
01:23:46,080 --> 01:23:51,030
power suppliers are too noisy for<font color="#E5E5E5"> it or</font>

1825
01:23:48,410 --> 01:23:53,340
what<font color="#E5E5E5"> it was working when I gave</font><font color="#CCCCCC"> it to</font>

1826
01:23:51,030 --> 01:23:54,210
<font color="#CCCCCC">one of my</font><font color="#E5E5E5"> colleagues or like I</font><font color="#CCCCCC"> says that</font>

1827
01:23:53,340 --> 01:23:58,230
after<font color="#CCCCCC"> I've got it back from an</font>

1828
01:23:54,210 --> 01:24:01,590
<font color="#CCCCCC">engagement it no longer works</font><font color="#E5E5E5"> so really</font>

1829
01:23:58,230 --> 01:24:02,879
sensitive to ripple in power supplies<font color="#E5E5E5"> so</font>

1830
01:24:01,590 --> 01:24:04,560
<font color="#E5E5E5">you can't burn off switch mode power</font>

1831
01:24:02,880 --> 01:24:07,710
supplies unless they're really<font color="#E5E5E5"> really</font>

1832
01:24:04,560 --> 01:24:09,810
high<font color="#E5E5E5"> quality ones so I was running off</font>

1833
01:24:07,710 --> 01:24:12,510
batteries which was kind of<font color="#CCCCCC"> working but</font>

1834
01:24:09,810 --> 01:24:15,180
<font color="#E5E5E5">I toasted to really expensive batteries</font>

1835
01:24:12,510 --> 01:24:19,950
in the first that I could<font color="#CCCCCC"> nerd it so yes</font>

1836
01:24:15,180 --> 01:24:22,470
it's not<font color="#CCCCCC"> easy tag emulation so on the</font>

1837
01:24:19,950 --> 01:24:25,620
off<font color="#CCCCCC"> fiddler</font><font color="#E5E5E5"> you can emulate</font><font color="#CCCCCC"> pretty much</font>

1838
01:24:22,470 --> 01:24:27,420
every tag that<font color="#E5E5E5"> it can talk to right but</font>

1839
01:24:25,620 --> 01:24:30,090
there's no tag emulation for<font color="#CCCCCC"> hi tag -</font>

1840
01:24:27,420 --> 01:24:32,250
you know I have have<font color="#E5E5E5"> been writing it but</font>

1841
01:24:30,090 --> 01:24:36,060
you need<font color="#E5E5E5"> hardware</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> test again it's not</font>

1842
01:24:32,250 --> 01:24:37,500
any hardware<font color="#E5E5E5"> it is</font><font color="#CCCCCC"> tricky to</font><font color="#E5E5E5"> do but</font><font color="#CCCCCC"> it's</font>

1843
01:24:36,060 --> 01:24:39,360
<font color="#E5E5E5">doable and so if anyone's</font><font color="#CCCCCC"> getting</font>

1844
01:24:37,500 --> 01:24:43,410
<font color="#E5E5E5">hardware I've got codes it's</font><font color="#CCCCCC"> 99%</font>

1845
01:24:39,360 --> 01:24:45,269
<font color="#E5E5E5">finished we could probably add</font><font color="#CCCCCC"> that but</font>

1846
01:24:43,410 --> 01:24:47,760
if you if you had that you<font color="#CCCCCC"> could get</font>

1847
01:24:45,270 --> 01:24:50,400
<font color="#E5E5E5">someone's like</font><font color="#CCCCCC"> UID</font><font color="#E5E5E5"> off their actual tag</font>

1848
01:24:47,760 --> 01:24:52,620
by<font color="#E5E5E5"> bumping into in the pub</font><font color="#CCCCCC"> doing because</font>

1849
01:24:50,400 --> 01:24:54,509
<font color="#E5E5E5">you just start doing the first step</font><font color="#CCCCCC"> of</font>

1850
01:24:52,620 --> 01:24:55,620
the<font color="#E5E5E5"> handshake and get the UID</font>

1851
01:24:54,510 --> 01:24:57,780
and then you can program<font color="#E5E5E5"> you our</font>

1852
01:24:55,620 --> 01:24:59,070
<font color="#E5E5E5">Fiddler's to me that</font><font color="#CCCCCC"> UID</font><font color="#E5E5E5"> and then just</font>

1853
01:24:57,780 --> 01:25:00,840
go through this to stick this on the

1854
01:24:59,070 --> 01:25:03,210
<font color="#E5E5E5">thing that we'll just pretend to be the</font>

1855
01:25:00,840 --> 01:25:05,550
tag<font color="#E5E5E5"> and capture the encrypted</font><font color="#CCCCCC"> nonces</font>

1856
01:25:03,210 --> 01:25:08,550
<font color="#E5E5E5">transform values at the same time which</font>

1857
01:25:05,550 --> 01:25:14,910
might be better<font color="#CCCCCC"> than light and actually</font>

1858
01:25:08,550 --> 01:25:17,730
have a tag<font color="#E5E5E5"> for real so potential future</font>

1859
01:25:14,910 --> 01:25:19,410
work<font color="#E5E5E5"> so once though inside the</font><font color="#CCCCCC"> fraction</font>

1860
01:25:17,730 --> 01:25:23,089
which<font color="#CCCCCC"> is based on</font><font color="#E5E5E5"> the frosh design is</font>

1861
01:25:19,410 --> 01:25:23,090
<font color="#E5E5E5">its</font><font color="#CCCCCC"> mind off a pic 16f</font>

1862
01:25:23,480 --> 01:25:28,440
the rest of the circuit myself because I

1863
01:25:25,800 --> 01:25:31,500
understand<font color="#E5E5E5"> how the HDR c-110 works which</font>

1864
01:25:28,440 --> 01:25:34,500
says the<font color="#E5E5E5"> hole for an end stuff</font><font color="#CCCCCC"> it's not</font>

1865
01:25:31,500 --> 01:25:37,460
trivial<font color="#E5E5E5"> but it's you know</font><font color="#CCCCCC"> a few</font><font color="#E5E5E5"> days of</font>

1866
01:25:34,500 --> 01:25:40,140
coding it's not it's not<font color="#CCCCCC"> like impossible</font>

1867
01:25:37,460 --> 01:25:41,850
<font color="#E5E5E5">and from</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> I might be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to buy</font>

1868
01:25:40,140 --> 01:25:45,360
something<font color="#CCCCCC"> it's faster so it's actually</font><font color="#E5E5E5"> a</font>

1869
01:25:41,850 --> 01:25:47,250
bit more<font color="#CCCCCC"> useful and while I've got all</font>

1870
01:25:45,360 --> 01:25:49,170
in pieces<font color="#CCCCCC"> I might try and turn up the</font>

1871
01:25:47,250 --> 01:25:51,180
<font color="#E5E5E5">power so it might go a bit further I</font>

1872
01:25:49,170 --> 01:25:53,010
might be you know wine by own antenna

1873
01:25:51,180 --> 01:25:55,650
because<font color="#E5E5E5"> our antennas only 18 centimeters</font>

1874
01:25:53,010 --> 01:25:57,450
and maybe maybe the power could deal

1875
01:25:55,650 --> 01:25:59,730
with<font color="#E5E5E5"> much bigger when I don't</font><font color="#CCCCCC"> even try</font>

1876
01:25:57,450 --> 01:26:01,230
<font color="#CCCCCC">to be honest I mean it's so expensive</font>

1877
01:25:59,730 --> 01:26:03,679
but<font color="#E5E5E5"> they want to break it</font><font color="#CCCCCC"> it was like</font>

1878
01:26:01,230 --> 01:26:06,150
<font color="#CCCCCC">1,300 euros in this kit</font><font color="#E5E5E5"> and it's like</font>

1879
01:26:03,680 --> 01:26:07,680
you can<font color="#E5E5E5"> imagine I you know going back to</font>

1880
01:26:06,150 --> 01:26:10,110
<font color="#E5E5E5">employ and kind of</font><font color="#CCCCCC"> go dude I think we</font>

1881
01:26:07,680 --> 01:26:13,670
<font color="#CCCCCC">both can we have another</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> they could</font>

1882
01:26:10,110 --> 01:26:16,320
I broke it<font color="#CCCCCC"> they could not be so happy</font>

1883
01:26:13,670 --> 01:26:18,030
but<font color="#E5E5E5"> the other idea</font><font color="#CCCCCC"> is to build a high</font>

1884
01:26:16,320 --> 01:26:19,769
path for an infidel fiddler and<font color="#E5E5E5"> this is</font>

1885
01:26:18,030 --> 01:26:22,559
something<font color="#CCCCCC"> I am</font><font color="#E5E5E5"> going to try so I'm</font><font color="#CCCCCC"> gonna</font>

1886
01:26:19,770 --> 01:26:24,030
<font color="#E5E5E5">get a</font><font color="#CCCCCC"> hid</font><font color="#E5E5E5"> procs which is</font><font color="#CCCCCC"> the carpark</font>

1887
01:26:22,560 --> 01:26:25,980
<font color="#CCCCCC">really</font><font color="#E5E5E5"> use the</font><font color="#CCCCCC"> no tastic</font>

1888
01:26:24,030 --> 01:26:29,690
which can't read what we're<font color="#E5E5E5"> trying to</font>

1889
01:26:25,980 --> 01:26:33,389
read but it does kick out 125 kilohertz

1890
01:26:29,690 --> 01:26:35,160
<font color="#E5E5E5">field on a really big range and then</font><font color="#CCCCCC"> I'm</font>

1891
01:26:33,390 --> 01:26:40,080
<font color="#E5E5E5">going to and then so I'm going to use</font>

1892
01:26:35,160 --> 01:26:42,330
that to energize the<font color="#CCCCCC"> tag and I'm going</font>

1893
01:26:40,080 --> 01:26:44,100
<font color="#E5E5E5">to build</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> antenna for</font><font color="#CCCCCC"> our filter</font>

1894
01:26:42,330 --> 01:26:46,500
that's bigger and<font color="#CCCCCC"> use</font><font color="#E5E5E5"> that in passive</font>

1895
01:26:44,100 --> 01:26:50,190
<font color="#CCCCCC">mode and then we're going to</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> GPIO</font>

1896
01:26:46,500 --> 01:26:52,710
pin so if you know the<font color="#E5E5E5"> are</font><font color="#CCCCCC"> Fiddler's but</font>

1897
01:26:50,190 --> 01:26:54,780
it's basically that's a pic 32<font color="#E5E5E5"> in the</font>

1898
01:26:52,710 --> 01:26:58,410
<font color="#CCCCCC">middle of there and if you buy the</font><font color="#E5E5E5"> pics</font>

1899
01:26:54,780 --> 01:27:02,969
<font color="#E5E5E5">82 on its breakout board for prototyping</font>

1900
01:26:58,410 --> 01:27:05,760
<font color="#CCCCCC">it's literally that half of the board so</font>

1901
01:27:02,970 --> 01:27:07,950
<font color="#E5E5E5">that</font><font color="#CCCCCC"> whole</font><font color="#E5E5E5"> that series of holes for pin</font>

1902
01:27:05,760 --> 01:27:09,600
strip and that<font color="#CCCCCC"> series</font><font color="#E5E5E5"> holds pin strip</font><font color="#CCCCCC"> II</font>

1903
01:27:07,950 --> 01:27:11,309
the breakout board and all<font color="#CCCCCC"> Leatherman</font>

1904
01:27:09,600 --> 01:27:13,020
<font color="#CCCCCC">Zack did was build their own</font><font color="#E5E5E5"> and look</font>

1905
01:27:11,310 --> 01:27:15,300
for an end and<font color="#E5E5E5"> then attached it to the</font>

1906
01:27:13,020 --> 01:27:16,890
side<font color="#CCCCCC"> is we sort of think</font><font color="#E5E5E5"> about those</font>

1907
01:27:15,300 --> 01:27:18,210
things it's<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> I kind of</font>

1908
01:27:16,890 --> 01:27:21,060
understand that bit better now

1909
01:27:18,210 --> 01:27:24,150
so there's shitloads of<font color="#CCCCCC"> GPIOs</font><font color="#E5E5E5"> so I'm</font>

1910
01:27:21,060 --> 01:27:26,160
thinking use<font color="#E5E5E5"> a cheaper</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> find the</font>

1911
01:27:24,150 --> 01:27:29,280
appropriate component which might be

1912
01:27:26,160 --> 01:27:32,420
<font color="#CCCCCC">effects or fun find</font><font color="#E5E5E5"> a suitably fast</font>

1913
01:27:29,280 --> 01:27:36,990
<font color="#CCCCCC">solid-state relay maybe</font><font color="#E5E5E5"> or whatever and</font>

1914
01:27:32,420 --> 01:27:39,420
then hook that<font color="#E5E5E5"> into the field that's</font>

1915
01:27:36,990 --> 01:27:41,639
been<font color="#CCCCCC"> generated by the tastic</font><font color="#E5E5E5"> both by the</font>

1916
01:27:39,420 --> 01:27:45,510
hip<font color="#CCCCCC"> drops I can</font><font color="#E5E5E5"> then post that</font><font color="#CCCCCC"> on and</font>

1917
01:27:41,640 --> 01:27:47,310
off to do<font color="#CCCCCC"> PWM they</font><font color="#E5E5E5"> air to send the start</font>

1918
01:27:45,510 --> 01:27:48,510
off the tag will respond with<font color="#CCCCCC"> shooing</font>

1919
01:27:47,310 --> 01:27:51,750
<font color="#E5E5E5">which I pick up with our</font><font color="#CCCCCC"> fiddler</font>

1920
01:27:48,510 --> 01:27:54,030
passively and then and<font color="#E5E5E5"> so and build</font><font color="#CCCCCC"> my</font>

1921
01:27:51,750 --> 01:27:56,250
two-way thing by having transmit and

1922
01:27:54,030 --> 01:27:58,380
receive coil rather than I<font color="#E5E5E5"> mean it only</font>

1923
01:27:56,250 --> 01:27:59,670
in one<font color="#E5E5E5"> coil</font><font color="#CCCCCC"> and maybe get around in</font><font color="#E5E5E5"> that</font>

1924
01:27:58,380 --> 01:28:03,450
way<font color="#CCCCCC"> so that's something I'm going to</font>

1925
01:27:59,670 --> 01:28:08,970
<font color="#CCCCCC">actually try at some point probably</font><font color="#E5E5E5"> next</font>

1926
01:28:03,450 --> 01:28:11,070
<font color="#E5E5E5">month so other stuff would be the</font>

1927
01:28:08,970 --> 01:28:17,010
<font color="#E5E5E5">Builder tagging me later like I say you</font>

1928
01:28:11,070 --> 01:28:19,139
know and you know maybe build a portable

1929
01:28:17,010 --> 01:28:21,300
one based<font color="#E5E5E5"> on a</font><font color="#CCCCCC"> CRC 110 but that would</font>

1930
01:28:19,140 --> 01:28:22,860
mean<font color="#E5E5E5"> needing to understand</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> analog</font>

1931
01:28:21,300 --> 01:28:27,030
<font color="#E5E5E5">electronics which I</font><font color="#CCCCCC"> don't really</font>

1932
01:28:22,860 --> 01:28:28,769
understand<font color="#CCCCCC"> it's it's</font><font color="#E5E5E5"> like I don't even</font>

1933
01:28:27,030 --> 01:28:30,300
understand the datasheet that tells you

1934
01:28:28,770 --> 01:28:33,600
how to do the equations it's kind of

1935
01:28:30,300 --> 01:28:35,460
like just<font color="#E5E5E5"> it's just beyond me what's</font>

1936
01:28:33,600 --> 01:28:37,620
actually more likely<font color="#E5E5E5"> to happen is that</font>

1937
01:28:35,460 --> 01:28:40,770
<font color="#E5E5E5">I'll stop playing</font><font color="#CCCCCC"> all this crap</font><font color="#E5E5E5"> and I'll</font>

1938
01:28:37,620 --> 01:28:43,140
go and do crypto somewhere else<font color="#CCCCCC"> so I've</font>

1939
01:28:40,770 --> 01:28:45,570
got my sights set on wpa2<font color="#E5E5E5"> at the moment</font>

1940
01:28:43,140 --> 01:28:51,390
because<font color="#E5E5E5"> there's a academic break in that</font>

1941
01:28:45,570 --> 01:28:53,480
it hasn't<font color="#E5E5E5"> been weaponized and I'm</font>

1942
01:28:51,390 --> 01:28:57,210
supposed<font color="#E5E5E5"> to be writing a course for</font>

1943
01:28:53,480 --> 01:28:59,339
called crypto which is crypto for

1944
01:28:57,210 --> 01:29:01,230
<font color="#E5E5E5">pen testers</font><font color="#CCCCCC"> so it's not like the</font>

1945
01:28:59,340 --> 01:29:03,890
Stanford and Maryland<font color="#E5E5E5"> courses of</font>

1946
01:29:01,230 --> 01:29:06,570
Coursera which are<font color="#E5E5E5"> really in-depth</font>

1947
01:29:03,890 --> 01:29:08,850
clever courses about crypto which are

1948
01:29:06,570 --> 01:29:11,009
fun<font color="#E5E5E5"> but don't really tell</font><font color="#CCCCCC"> you what you</font>

1949
01:29:08,850 --> 01:29:14,640
<font color="#E5E5E5">need</font><font color="#CCCCCC"> to know as a pen tester but they're</font>

1950
01:29:11,010 --> 01:29:17,730
<font color="#CCCCCC">a world</font><font color="#E5E5E5"> away from the we're going to do</font>

1951
01:29:14,640 --> 01:29:19,350
a Caesar<font color="#E5E5E5"> cipher you know type attack</font>

1952
01:29:17,730 --> 01:29:21,059
which<font color="#CCCCCC"> is what you normally get it's</font><font color="#E5E5E5"> more</font>

1953
01:29:19,350 --> 01:29:23,520
like how would<font color="#CCCCCC"> you audited</font>

1954
01:29:21,060 --> 01:29:25,260
configuration how would you spot<font color="#CCCCCC"> that</font>

1955
01:29:23,520 --> 01:29:27,690
the crypto is bad even<font color="#CCCCCC"> if you can't</font>

1956
01:29:25,260 --> 01:29:30,140
break<font color="#CCCCCC"> it so you can tell a customer</font><font color="#E5E5E5"> that</font>

1957
01:29:27,690 --> 01:29:33,929
they should be doing<font color="#CCCCCC"> somewhat</font><font color="#E5E5E5"> different</font>

1958
01:29:30,140 --> 01:29:35,700
you know you know<font color="#CCCCCC"> I've yeah I</font><font color="#E5E5E5"> mean the</font>

1959
01:29:33,930 --> 01:29:37,950
sort things I've had<font color="#E5E5E5"> on previous tests</font>

1960
01:29:35,700 --> 01:29:41,309
right on<font color="#CCCCCC"> embedded code embedded stuff</font>

1961
01:29:37,950 --> 01:29:44,460
<font color="#E5E5E5">and it's</font><font color="#CCCCCC"> like there was a there was a</font>

1962
01:29:41,310 --> 01:29:45,990
camera<font color="#E5E5E5"> and every every bit of comms from</font>

1963
01:29:44,460 --> 01:29:49,320
<font color="#E5E5E5">the camera that went to the cloud was</font>

1964
01:29:45,990 --> 01:29:51,420
TLS right<font color="#E5E5E5"> and afterward convinced</font><font color="#CCCCCC"> them</font>

1965
01:29:49,320 --> 01:29:52,950
to<font color="#E5E5E5"> check their certificates and all that</font>

1966
01:29:51,420 --> 01:29:55,170
sort of<font color="#E5E5E5"> clever</font><font color="#CCCCCC"> goings they were all</font>

1967
01:29:52,950 --> 01:29:57,840
secure and there was one<font color="#E5E5E5"> comms channel</font>

1968
01:29:55,170 --> 01:30:01,290
left<font color="#E5E5E5"> which was a local network one so</font>

1969
01:29:57,840 --> 01:30:04,260
your mobile phone could watch the video

1970
01:30:01,290 --> 01:30:06,269
from the thing on a local network<font color="#E5E5E5"> also</font>

1971
01:30:04,260 --> 01:30:10,500
you can't do<font color="#E5E5E5"> hit tear less because</font>

1972
01:30:06,270 --> 01:30:15,660
you've got no<font color="#CCCCCC"> PKI so they were</font><font color="#E5E5E5"> doing</font>

1973
01:30:10,500 --> 01:30:16,410
<font color="#E5E5E5">AES 128 encrypted with user CBC mode for</font>

1974
01:30:15,660 --> 01:30:19,950
the<font color="#CCCCCC"> comms</font>

1975
01:30:16,410 --> 01:30:22,320
so when the<font color="#E5E5E5"> camera started up it would</font>

1976
01:30:19,950 --> 01:30:25,200
over tear<font color="#E5E5E5"> less to the cloud would pick a</font>

1977
01:30:22,320 --> 01:30:27,090
key<font color="#E5E5E5"> and put it in the cloud and when the</font>

1978
01:30:25,200 --> 01:30:28,710
<font color="#E5E5E5">mobile phone started up and went to the</font>

1979
01:30:27,090 --> 01:30:31,140
app it would go<font color="#E5E5E5"> to the same cloud</font><font color="#CCCCCC"> own</font>

1980
01:30:28,710 --> 01:30:34,110
<font color="#CCCCCC">tears</font><font color="#E5E5E5"> and get that key and then the two</font>

1981
01:30:31,140 --> 01:30:37,440
could communicate right<font color="#E5E5E5"> well which is</font>

1982
01:30:34,110 --> 01:30:39,150
all<font color="#E5E5E5"> really good</font><font color="#CCCCCC"> apart</font><font color="#E5E5E5"> from the key they</font>

1983
01:30:37,440 --> 01:30:41,940
chose was based on the number of

1984
01:30:39,150 --> 01:30:45,980
<font color="#E5E5E5">microseconds since the last second by</font>

1985
01:30:41,940 --> 01:30:49,469
<font color="#CCCCCC">using</font><font color="#E5E5E5"> s random</font><font color="#CCCCCC"> R and so there</font><font color="#E5E5E5"> is only</font>

1986
01:30:45,980 --> 01:30:51,150
<font color="#CCCCCC">999,999 possible keys out of the</font>

1987
01:30:49,470 --> 01:30:53,220
trillion trillion trillion that there

1988
01:30:51,150 --> 01:30:55,230
should have<font color="#CCCCCC"> been so</font><font color="#E5E5E5"> one should</font><font color="#CCCCCC"> spy</font><font color="#E5E5E5"> that</font>

1989
01:30:53,220 --> 01:30:57,090
which<font color="#CCCCCC"> is like you know check decoded why</font>

1990
01:30:55,230 --> 01:31:01,440
<font color="#E5E5E5">don't just kind of go me that's</font>

1991
01:30:57,090 --> 01:31:04,230
<font color="#E5E5E5">that's clearly wrong then you can you</font>

1992
01:31:01,440 --> 01:31:06,599
<font color="#CCCCCC">can build a thing that will handshake</font>

1993
01:31:04,230 --> 01:31:08,309
with the thing and crack the key in real

1994
01:31:06,600 --> 01:31:10,140
<font color="#E5E5E5">time while it's</font><font color="#CCCCCC"> doing the handshake</font>

1995
01:31:08,310 --> 01:31:11,790
<font color="#E5E5E5">because you've only got like a million</font>

1996
01:31:10,140 --> 01:31:13,920
possibilities to go for a basic<font color="#CCCCCC"> just</font>

1997
01:31:11,790 --> 01:31:16,050
built table<font color="#CCCCCC"> or one of the million keys</font>

1998
01:31:13,920 --> 01:31:21,210
and then just<font color="#CCCCCC"> I tried each</font><font color="#E5E5E5"> one and it</font>

1999
01:31:16,050 --> 01:31:23,220
<font color="#CCCCCC">worked so that's what as pen testers or</font>

2000
01:31:21,210 --> 01:31:25,710
as a<font color="#CCCCCC"> Penta so that's how I end up at a</font>

2001
01:31:23,220 --> 01:31:28,740
<font color="#E5E5E5">keen crypto it's not by staring at</font>

2002
01:31:25,710 --> 01:31:30,300
encrypted stuff and trying<font color="#E5E5E5"> to work work</font>

2003
01:31:28,740 --> 01:31:33,389
out what it might be or guess the

2004
01:31:30,300 --> 01:31:34,410
algorithm<font color="#E5E5E5"> or whatever it or doing some</font>

2005
01:31:33,390 --> 01:31:36,420
really<font color="#E5E5E5"> clever kind of</font>

2006
01:31:34,410 --> 01:31:38,580
it's normally<font color="#CCCCCC"> chucking I</font><font color="#E5E5E5"> have a look at</font>

2007
01:31:36,420 --> 01:31:41,070
the code<font color="#CCCCCC"> and then find ways of pointing</font>

2008
01:31:38,580 --> 01:31:43,230
<font color="#E5E5E5">out what's wrong with it so that's what</font>

2009
01:31:41,070 --> 01:31:45,410
<font color="#E5E5E5">this</font><font color="#CCCCCC"> that's what</font><font color="#E5E5E5"> I was supposed to be</font>

2010
01:31:43,230 --> 01:31:48,719
writing there's a course<font color="#E5E5E5"> about that and</font>

2011
01:31:45,410 --> 01:31:50,250
again life<font color="#E5E5E5"> obviously</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> it's the other</font>

2012
01:31:48,720 --> 01:31:51,330
thing I've been<font color="#E5E5E5"> doing</font><font color="#CCCCCC"> so that's</font><font color="#E5E5E5"> why I'm</font>

2013
01:31:50,250 --> 01:31:54,300
<font color="#CCCCCC">not</font><font color="#E5E5E5"> being</font><font color="#CCCCCC"> allowed</font><font color="#E5E5E5"> at the</font><font color="#CCCCCC"> parties this</font>

2014
01:31:51,330 --> 01:31:54,990
week I've been<font color="#E5E5E5"> getting a life</font><font color="#CCCCCC"> closing</font>

2015
01:31:54,300 --> 01:31:56,310
remarks

2016
01:31:54,990 --> 01:31:58,700
so attack one that talked about

2017
01:31:56,310 --> 01:32:02,520
<font color="#E5E5E5">yesterday and</font><font color="#CCCCCC"> the start of</font><font color="#E5E5E5"> this workshop</font>

2018
01:31:58,700 --> 01:32:04,470
<font color="#CCCCCC">is brilliant and uses key stream becomes</font>

2019
01:32:02,520 --> 01:32:08,100
key stream to read the<font color="#CCCCCC"> pages but</font><font color="#E5E5E5"> you can</font>

2020
01:32:04,470 --> 01:32:09,600
protect<font color="#E5E5E5"> the pages</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> two and so</font>

2021
01:32:08,100 --> 01:32:11,820
<font color="#CCCCCC">attacks two or three will recover the</font>

2022
01:32:09,600 --> 01:32:14,160
<font color="#E5E5E5">key in the situations where attack one</font>

2023
01:32:11,820 --> 01:32:16,469
doesn't<font color="#E5E5E5"> work and attack three doesn't</font>

2024
01:32:14,160 --> 01:32:21,420
need a valid tag you only need a tag

2025
01:32:16,470 --> 01:32:22,770
that<font color="#CCCCCC"> the system will talk to you this is</font>

2026
01:32:21,420 --> 01:32:26,190
basically what I'm<font color="#CCCCCC"> saying here</font>

2027
01:32:22,770 --> 01:32:27,690
so yeah<font color="#CCCCCC"> tact</font><font color="#E5E5E5"> here</font><font color="#CCCCCC"> was the time</font><font color="#E5E5E5"> when we</font>

2028
01:32:26,190 --> 01:32:30,179
trade off<font color="#CCCCCC"> the big table</font><font color="#E5E5E5"> and the two</font>

2029
01:32:27,690 --> 01:32:31,440
<font color="#E5E5E5">thirds for yep it's a key stream attack</font>

2030
01:32:30,180 --> 01:32:36,260
<font color="#E5E5E5">three was what we just did with the</font>

2031
01:32:31,440 --> 01:32:36,259
<font color="#E5E5E5">hundred thirty six pairs and and the tag</font>

2032
01:32:36,680 --> 01:32:41,820
<font color="#CCCCCC">now if you</font><font color="#E5E5E5"> really like this stuff last</font>

2033
01:32:39,750 --> 01:32:42,360
year so that's<font color="#E5E5E5"> this</font><font color="#CCCCCC"> paper is</font><font color="#E5E5E5"> five years</font>

2034
01:32:41,820 --> 01:32:44,849
<font color="#E5E5E5">old</font>

2035
01:32:42,360 --> 01:32:46,259
<font color="#E5E5E5">but last year</font><font color="#CCCCCC"> Flavio Garcia one</font><font color="#E5E5E5"> of the</font>

2036
01:32:44,850 --> 01:32:49,470
<font color="#CCCCCC">authors released another</font><font color="#E5E5E5"> payment called</font>

2037
01:32:46,260 --> 01:32:51,960
<font color="#E5E5E5">locking it still lose it and that's a</font>

2038
01:32:49,470 --> 01:32:53,970
different approach<font color="#E5E5E5"> so when you push the</font>

2039
01:32:51,960 --> 01:32:57,570
flipper to open the doors on your

2040
01:32:53,970 --> 01:33:00,330
Volkswagen<font color="#CCCCCC"> or the other car</font>

2041
01:32:57,570 --> 01:33:02,160
manufacturers<font color="#E5E5E5"> are available should say</font>

2042
01:33:00,330 --> 01:33:03,510
when they do own<font color="#CCCCCC"> twenty three</font><font color="#E5E5E5"> percent</font><font color="#CCCCCC"> of</font>

2043
01:33:02,160 --> 01:33:05,790
the<font color="#E5E5E5"> European</font><font color="#CCCCCC"> market which is why they</font>

2044
01:33:03,510 --> 01:33:08,850
attacked Volkswagen particularly then it

2045
01:33:05,790 --> 01:33:11,490
<font color="#E5E5E5">uses because the key got one handy</font>

2046
01:33:08,850 --> 01:33:15,930
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> but because the key has got a</font>

2047
01:33:11,490 --> 01:33:17,490
high tag<font color="#CCCCCC"> two RFID</font><font color="#E5E5E5"> to do to demobilize</font><font color="#CCCCCC"> to</font>

2048
01:33:15,930 --> 01:33:21,180
car when you put the key in the barrel

2049
01:33:17,490 --> 01:33:24,570
and<font color="#CCCCCC"> put the key flipper was</font><font color="#E5E5E5"> over for 33</font>

2050
01:33:21,180 --> 01:33:26,910
megahertz<font color="#CCCCCC"> they used the crypto from the</font>

2051
01:33:24,570 --> 01:33:29,549
<font color="#E5E5E5">high tag</font><font color="#CCCCCC"> two bit of the key to do the</font>

2052
01:33:26,910 --> 01:33:33,389
crypto over the<font color="#CCCCCC"> four 33 megahertz so</font>

2053
01:33:29,550 --> 01:33:35,580
they can do the<font color="#CCCCCC"> same attacks</font><font color="#E5E5E5"> but over</font>

2054
01:33:33,390 --> 01:33:38,640
the door opening as well as the turning

2055
01:33:35,580 --> 01:33:42,780
<font color="#E5E5E5">on the car bit but obviously</font><font color="#CCCCCC"> trying</font><font color="#E5E5E5"> to</font>

2056
01:33:38,640 --> 01:33:44,790
get 136 like<font color="#E5E5E5"> challenged and non-spam</font><font color="#CCCCCC"> is</font>

2057
01:33:42,780 --> 01:33:47,710
<font color="#E5E5E5">just hard because</font><font color="#CCCCCC"> you be there for like</font>

2058
01:33:44,790 --> 01:33:49,600
weeks or months like wait we would push

2059
01:33:47,710 --> 01:33:52,090
but in<font color="#E5E5E5"> order to get those values so</font>

2060
01:33:49,600 --> 01:33:54,550
<font color="#CCCCCC">they've got a new attack that only takes</font>

2061
01:33:52,090 --> 01:33:56,410
between four and eight pairs<font color="#CCCCCC"> which is</font>

2062
01:33:54,550 --> 01:33:58,180
like a few days of<font color="#CCCCCC"> hanging around and</font>

2063
01:33:56,410 --> 01:34:02,530
when they're opening and closing their

2064
01:33:58,180 --> 01:34:04,120
car doors<font color="#CCCCCC"> and it works in 45 seconds so</font>

2065
01:34:02,530 --> 01:34:05,739
when I was<font color="#E5E5E5"> in Flavio's office it was</font>

2066
01:34:04,120 --> 01:34:07,210
like don't<font color="#E5E5E5"> try to see it I was like yo</font>

2067
01:34:05,739 --> 01:34:10,360
and<font color="#E5E5E5"> then he just ran it on his laptop</font>

2068
01:34:07,210 --> 01:34:12,730
and like 45 seconds<font color="#E5E5E5"> later it's decrypted</font>

2069
01:34:10,360 --> 01:34:15,519
it<font color="#E5E5E5"> and it's very similar to the weapon</font>

2070
01:34:12,730 --> 01:34:18,759
<font color="#CCCCCC">tack so it starts with a guess was a</font>

2071
01:34:15,520 --> 01:34:21,219
section of the key<font color="#E5E5E5"> and then for every a</font>

2072
01:34:18,760 --> 01:34:24,969
then extends it by<font color="#E5E5E5"> one bit and works out</font>

2073
01:34:21,219 --> 01:34:27,370
the best<font color="#CCCCCC"> possible so</font><font color="#E5E5E5"> if you start with</font>

2074
01:34:24,969 --> 01:34:29,620
16 bits you've got<font color="#CCCCCC"> 65,000</font><font color="#E5E5E5"> possibilities</font>

2075
01:34:27,370 --> 01:34:32,320
of what<font color="#E5E5E5"> those 16 bits could be so it</font>

2076
01:34:29,620 --> 01:34:34,510
finds<font color="#E5E5E5"> the best candidates the ones most</font>

2077
01:34:32,320 --> 01:34:37,210
<font color="#CCCCCC">likely to work probabilistically</font><font color="#E5E5E5"> and</font>

2078
01:34:34,510 --> 01:34:39,580
then extends<font color="#E5E5E5"> that window by one bit and</font>

2079
01:34:37,210 --> 01:34:41,890
only uses the<font color="#CCCCCC"> best ones from</font><font color="#E5E5E5"> the</font>

2080
01:34:39,580 --> 01:34:43,600
previous step every time<font color="#CCCCCC"> it extends it</font>

2081
01:34:41,890 --> 01:34:46,480
and by the<font color="#E5E5E5"> time</font><font color="#CCCCCC"> you end up you've got</font>

2082
01:34:43,600 --> 01:34:48,940
you that'll expand<font color="#E5E5E5"> out bit by bit to 48</font>

2083
01:34:46,480 --> 01:34:52,089
bits wide<font color="#E5E5E5"> obviously</font><font color="#CCCCCC"> taking less than a</font>

2084
01:34:48,940 --> 01:34:53,910
second per bit to do so<font color="#CCCCCC"> is it's a clever</font>

2085
01:34:52,090 --> 01:34:56,320
<font color="#E5E5E5">thing I've not implemented it yet but I</font>

2086
01:34:53,910 --> 01:34:58,450
might do just<font color="#E5E5E5"> so I'll get practice</font><font color="#CCCCCC"> at</font>

2087
01:34:56,320 --> 01:35:02,830
implement in yet<font color="#CCCCCC"> another kind of useful</font>

2088
01:34:58,450 --> 01:35:05,469
<font color="#E5E5E5">thing so the point of the yesterday's</font>

2089
01:35:02,830 --> 01:35:07,809
talk<font color="#E5E5E5"> and the point of this workshop this</font>

2090
01:35:05,469 --> 01:35:11,440
is the last slide<font color="#CCCCCC"> it</font><font color="#E5E5E5"> is to say we can</font>

2091
01:35:07,810 --> 01:35:14,170
<font color="#CCCCCC">learn from academics</font><font color="#E5E5E5"> I know we</font><font color="#CCCCCC"> film them</font>

2092
01:35:11,440 --> 01:35:16,089
a lot and<font color="#E5E5E5"> we get really annoyed</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we</font>

2093
01:35:14,170 --> 01:35:18,130
can't go to<font color="#CCCCCC"> their conferences and they</font>

2094
01:35:16,090 --> 01:35:20,469
don't accept our papers because<font color="#E5E5E5"> you know</font>

2095
01:35:18,130 --> 01:35:23,380
yes another<font color="#CCCCCC"> O'Dea</font><font color="#E5E5E5"> it's a buffer overflow</font>

2096
01:35:20,469 --> 01:35:25,180
<font color="#CCCCCC">doesn't</font><font color="#E5E5E5"> really excite them but they some</font>

2097
01:35:23,380 --> 01:35:27,760
of<font color="#E5E5E5"> them do</font><font color="#CCCCCC"> have stuff</font><font color="#E5E5E5"> we can learn from</font>

2098
01:35:25,180 --> 01:35:31,540
<font color="#CCCCCC">that I</font><font color="#E5E5E5"> think is really</font><font color="#CCCCCC"> interesting and</font>

2099
01:35:27,760 --> 01:35:34,180
useful and practical<font color="#E5E5E5"> so I think we</font>

2100
01:35:31,540 --> 01:35:36,280
<font color="#E5E5E5">should do more of looking at what</font>

2101
01:35:34,180 --> 01:35:38,620
they're doing<font color="#CCCCCC"> because I don't think many</font>

2102
01:35:36,280 --> 01:35:42,849
<font color="#CCCCCC">people in</font><font color="#E5E5E5"> our industry are necessarily</font>

2103
01:35:38,620 --> 01:35:44,630
doing<font color="#E5E5E5"> that and that as they say is</font><font color="#CCCCCC"> that</font>

2104
01:35:42,850 --> 01:36:08,219
<font color="#E5E5E5">any questions</font>

2105
01:35:44,630 --> 01:36:08,219
[Music]

