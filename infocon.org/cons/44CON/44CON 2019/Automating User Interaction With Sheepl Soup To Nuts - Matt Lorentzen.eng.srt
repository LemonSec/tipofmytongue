1
00:00:00,500 --> 00:00:02,560
you

2
00:00:04,110 --> 00:00:09,290
well good morning thank you for coming

3
00:00:06,180 --> 00:00:11,849
along to this I hope you've had a good

4
00:00:09,290 --> 00:00:16,230
conference I left four words for Kahn I

5
00:00:11,849 --> 00:00:18,150
spoke last year with my old boss here

6
00:00:16,230 --> 00:00:21,510
about sort of red teaming and what it

7
00:00:18,150 --> 00:00:25,288
means to try and get into the industry

8
00:00:21,510 --> 00:00:28,949
and I released like a beta version of

9
00:00:25,289 --> 00:00:30,089
sheeple 0.1 just as a kind of a taster

10
00:00:28,949 --> 00:00:33,420
to the types of things that I've been

11
00:00:30,089 --> 00:00:34,769
working on I'm really into sort of

12
00:00:33,420 --> 00:00:36,390
mentoring and building training

13
00:00:34,770 --> 00:00:39,050
environments I think it's really

14
00:00:36,390 --> 00:00:41,550
important that we have real-world

15
00:00:39,050 --> 00:00:43,739
representative environments that build

16
00:00:41,550 --> 00:00:45,629
skill sets in and you know we're always

17
00:00:43,740 --> 00:00:47,940
talking about this big skills gap as to

18
00:00:45,630 --> 00:00:49,260
how do we how do we train the people in

19
00:00:47,940 --> 00:00:51,210
the right way that are coming through

20
00:00:49,260 --> 00:00:53,460
the industry and I've spent the last

21
00:00:51,210 --> 00:00:55,680
sort of two years three years looking at

22
00:00:53,460 --> 00:00:59,280
how I can make my training environment

23
00:00:55,680 --> 00:01:00,390
more more realistic from a selfish point

24
00:00:59,280 --> 00:01:02,490
of view in the beginning because I

25
00:01:00,390 --> 00:01:06,659
wanted to improve my own tradecraft both

26
00:01:02,490 --> 00:01:08,280
from the red and the blue side so a bit

27
00:01:06,659 --> 00:01:10,590
of background about myself so I worked

28
00:01:08,280 --> 00:01:13,920
for spider labs I've done the crash

29
00:01:10,590 --> 00:01:15,829
track CC SATs I spend most of my time

30
00:01:13,920 --> 00:01:19,109
looking at red teaming and pen testing

31
00:01:15,829 --> 00:01:20,639
I've had quite a varied career in terms

32
00:01:19,109 --> 00:01:22,890
of the types of environments that I've

33
00:01:20,640 --> 00:01:25,499
worked in which is which has been a good

34
00:01:22,890 --> 00:01:27,659
foundation for me I'm a former Czech

35
00:01:25,499 --> 00:01:29,399
team leader so I used to work for a

36
00:01:27,659 --> 00:01:31,770
Czech greenlight company and delivered a

37
00:01:29,399 --> 00:01:34,109
lot of that sort of work I ran my own

38
00:01:31,770 --> 00:01:36,390
company for a long time which is a

39
00:01:34,109 --> 00:01:40,530
really good experience I think it gives

40
00:01:36,390 --> 00:01:42,469
you an angle of business that you don't

41
00:01:40,530 --> 00:01:45,030
always kind of get if you're sort of

42
00:01:42,469 --> 00:01:47,158
employed by somebody so I was out there

43
00:01:45,030 --> 00:01:50,069
selling it was an IT consultancy service

44
00:01:47,159 --> 00:01:51,659
and I was employing technicians and that

45
00:01:50,069 --> 00:01:53,639
was kind of I think if I reflect back

46
00:01:51,659 --> 00:01:55,649
now in my mid-20s that was really the

47
00:01:53,639 --> 00:01:57,810
start the seed of all of this sort of

48
00:01:55,649 --> 00:02:00,420
stuff that I'm doing now because from my

49
00:01:57,810 --> 00:02:02,909
perspective at the time starting a

50
00:02:00,420 --> 00:02:05,130
limited company I was the company so

51
00:02:02,909 --> 00:02:06,990
people were buying me and then as soon

52
00:02:05,130 --> 00:02:08,639
as I scaled it out to having technicians

53
00:02:06,990 --> 00:02:10,470
and things all of a sudden they're no

54
00:02:08,639 --> 00:02:11,910
longer getting map turning up on site

55
00:02:10,470 --> 00:02:13,590
they're getting somebody else and I was

56
00:02:11,910 --> 00:02:14,960
like well that post is a really

57
00:02:13,590 --> 00:02:17,300
interesting challenge how

58
00:02:14,960 --> 00:02:19,010
why baseline people skills how do I

59
00:02:17,300 --> 00:02:21,110
train them how do I mold them in the way

60
00:02:19,010 --> 00:02:23,329
that I want them to be so I think this

61
00:02:21,110 --> 00:02:24,920
seed for that was already set I've

62
00:02:23,330 --> 00:02:26,480
spoken a lot but they're probably the

63
00:02:24,920 --> 00:02:27,589
most important part about this slide is

64
00:02:26,480 --> 00:02:29,149
I've been bouncing this picture around

65
00:02:27,590 --> 00:02:31,340
for a while and a friend of mine says I

66
00:02:29,150 --> 00:02:33,830
look like a magician so I thought I

67
00:02:31,340 --> 00:02:35,750
would just just roll with it and like

68
00:02:33,830 --> 00:02:37,490
you know I think it actually looks quite

69
00:02:35,750 --> 00:02:40,040
quite quite good I might even start

70
00:02:37,490 --> 00:02:45,260
learning card tricks and stuff just just

71
00:02:40,040 --> 00:02:47,209
to bring it home so the purpose of today

72
00:02:45,260 --> 00:02:48,560
really I've built a massive environment

73
00:02:47,210 --> 00:02:51,170
I've been walking around in this

74
00:02:48,560 --> 00:02:52,760
suitcase with a big HP server there's

75
00:02:51,170 --> 00:02:55,190
about 14 machines in there they're

76
00:02:52,760 --> 00:02:58,040
clients and what I really want to do is

77
00:02:55,190 --> 00:03:00,980
introduce to you why I think sheeple is

78
00:02:58,040 --> 00:03:03,859
a really useful tool I've actually used

79
00:03:00,980 --> 00:03:05,690
it in different ways lab environments

80
00:03:03,860 --> 00:03:07,490
that deliver training for people I've

81
00:03:05,690 --> 00:03:09,260
actually also used it on ops before to

82
00:03:07,490 --> 00:03:11,870
create noise there's a big thing at the

83
00:03:09,260 --> 00:03:14,630
moment about distraction tactics and

84
00:03:11,870 --> 00:03:17,510
stuff so that there is some sort of real

85
00:03:14,630 --> 00:03:19,010
world and I also did a pilot with some

86
00:03:17,510 --> 00:03:22,100
telcos where they were using it to

87
00:03:19,010 --> 00:03:23,480
evaluate some of their endpoint security

88
00:03:22,100 --> 00:03:26,450
software and whether it would trigger

89
00:03:23,480 --> 00:03:28,070
things like PowerShell download cradles

90
00:03:26,450 --> 00:03:31,790
etc and whether or that logging would

91
00:03:28,070 --> 00:03:35,090
all bubble up so give you an idea of how

92
00:03:31,790 --> 00:03:37,280
it all works and then hopefully we can

93
00:03:35,090 --> 00:03:41,630
dive into some various different types

94
00:03:37,280 --> 00:03:43,160
of sheeple the idea being that it's kind

95
00:03:41,630 --> 00:03:44,810
of carte blanche for you you can make

96
00:03:43,160 --> 00:03:46,670
good sheeple or bad people and it really

97
00:03:44,810 --> 00:03:48,740
depends on the types of things that you

98
00:03:46,670 --> 00:03:50,690
want to be focusing on so a lot of the

99
00:03:48,740 --> 00:03:52,850
time I'll just create benign sheeple

100
00:03:50,690 --> 00:03:55,609
that are going about mundane tasks

101
00:03:52,850 --> 00:03:58,130
opening documents opening command shells

102
00:03:55,610 --> 00:04:00,470
even spawning processes different users

103
00:03:58,130 --> 00:04:03,859
so that I can practice tradecraft for

104
00:04:00,470 --> 00:04:06,020
understanding processes I'm in and sort

105
00:04:03,860 --> 00:04:08,000
of moving around a network and other

106
00:04:06,020 --> 00:04:09,740
times I want to look at it from the blue

107
00:04:08,000 --> 00:04:12,410
team perspective and how that logging

108
00:04:09,740 --> 00:04:14,600
comes up so I'll I'll have PowerShell

109
00:04:12,410 --> 00:04:16,880
version 5 and transcript logging enabled

110
00:04:14,600 --> 00:04:18,620
and event forwarding and stuff and then

111
00:04:16,880 --> 00:04:20,600
I'll create people that are deliberately

112
00:04:18,620 --> 00:04:22,370
trying to do things like creating

113
00:04:20,600 --> 00:04:24,290
download cradles or trying to bypass

114
00:04:22,370 --> 00:04:26,570
ANSI all these sorts of things that

115
00:04:24,290 --> 00:04:27,330
attackers would do on a system I wanted

116
00:04:26,570 --> 00:04:29,449
to see whether

117
00:04:27,330 --> 00:04:32,280
I could find ways of leaving that to log

118
00:04:29,449 --> 00:04:33,900
so hopefully this should be an engaging

119
00:04:32,280 --> 00:04:35,638
and fun talk I also want it to be

120
00:04:33,900 --> 00:04:37,229
interactive because one of the things

121
00:04:35,639 --> 00:04:39,439
about this at the point where we're

122
00:04:37,229 --> 00:04:42,360
saying well now you can type commands

123
00:04:39,439 --> 00:04:43,770
I'm sure everybody has different ways of

124
00:04:42,360 --> 00:04:46,139
doing different things and that's the

125
00:04:43,770 --> 00:04:47,969
feedback loop for me is that you may do

126
00:04:46,139 --> 00:04:50,039
something completely different to I and

127
00:04:47,969 --> 00:04:51,330
that's kind of what I want because like

128
00:04:50,039 --> 00:04:54,810
oh that's an interesting way that we

129
00:04:51,330 --> 00:04:58,068
could emulate that person so as I said

130
00:04:54,810 --> 00:05:01,169
it all came from kind of a skills gap

131
00:04:58,069 --> 00:05:04,020
initially for me I was looking at trying

132
00:05:01,169 --> 00:05:06,299
to improve my tradecraft I still try and

133
00:05:04,020 --> 00:05:08,310
improve my tradecraft all the time but I

134
00:05:06,300 --> 00:05:09,870
wanted to kind of look at ways that I

135
00:05:08,310 --> 00:05:13,949
could practice this sort of real world

136
00:05:09,870 --> 00:05:15,719
feel for for it but I kind of felt like

137
00:05:13,949 --> 00:05:18,150
I was just sort of flogging this dead

138
00:05:15,719 --> 00:05:19,469
horse really because I don't know

139
00:05:18,150 --> 00:05:21,508
whether you feel the same but this

140
00:05:19,469 --> 00:05:22,710
industry very much I'll flick it back to

141
00:05:21,509 --> 00:05:24,210
that slide because that can get quite

142
00:05:22,710 --> 00:05:29,219
distracting after a while people just

143
00:05:24,210 --> 00:05:32,099
beating a horse this industry it's very

144
00:05:29,219 --> 00:05:33,539
much self-directed learning if you were

145
00:05:32,099 --> 00:05:35,340
I don't know whether you agree with that

146
00:05:33,539 --> 00:05:36,930
but that's certainly been my experience

147
00:05:35,340 --> 00:05:39,359
of it you know you can access courses

148
00:05:36,930 --> 00:05:41,340
and stuff but really the onus is on you

149
00:05:39,360 --> 00:05:42,599
to sort of develop your skills and

150
00:05:41,340 --> 00:05:44,429
explore these things

151
00:05:42,599 --> 00:05:46,440
the problem with self-directed learning

152
00:05:44,430 --> 00:05:48,210
is how do you know if you're looking in

153
00:05:46,440 --> 00:05:49,979
the right places right I mean that's the

154
00:05:48,210 --> 00:05:52,229
thing like if anybody's ever done osep

155
00:05:49,979 --> 00:05:54,089
or anything like that where you you hit

156
00:05:52,229 --> 00:05:56,099
challenges and they can sort of hold you

157
00:05:54,089 --> 00:05:59,129
back and really slow you down that's

158
00:05:56,099 --> 00:06:00,839
great I spent far too much money on my

159
00:05:59,129 --> 00:06:02,849
osep getting back into the labs again

160
00:06:00,839 --> 00:06:04,469
because I really wanted to know

161
00:06:02,849 --> 00:06:06,300
so self-directed learning is really

162
00:06:04,469 --> 00:06:07,830
important but then has to become a point

163
00:06:06,300 --> 00:06:10,289
where it becomes an inefficient way of

164
00:06:07,830 --> 00:06:13,650
learning in my opinion you need that

165
00:06:10,289 --> 00:06:15,180
tenacity to smash into problems and you

166
00:06:13,650 --> 00:06:16,739
know keep on sort of going back to it

167
00:06:15,180 --> 00:06:18,629
over and over again and getting a good

168
00:06:16,740 --> 00:06:20,460
idea but then at some point you also

169
00:06:18,629 --> 00:06:23,310
need somebody to be like it's not there

170
00:06:20,460 --> 00:06:24,960
it's there or at least why don't you go

171
00:06:23,310 --> 00:06:27,210
and look over there and not like here's

172
00:06:24,960 --> 00:06:28,500
the answer so I wanted to work out all

173
00:06:27,210 --> 00:06:31,289
that sort of stuff and I was like well

174
00:06:28,500 --> 00:06:33,180
how can I do things like let's say you

175
00:06:31,289 --> 00:06:34,889
use the spawns a process and I'm trying

176
00:06:33,180 --> 00:06:36,509
to work with somebody to give them an

177
00:06:34,889 --> 00:06:39,209
insight into what it is to read team

178
00:06:36,509 --> 00:06:40,610
what about like why have you injected

179
00:06:39,209 --> 00:06:42,710
into that process now it's all

180
00:06:40,610 --> 00:06:44,330
just crashed out of all of the process

181
00:06:42,710 --> 00:06:46,549
lists in here which would be a good one

182
00:06:44,330 --> 00:06:48,438
to start did you see a process pop up

183
00:06:46,550 --> 00:06:50,060
and then disappear again you know all

184
00:06:48,439 --> 00:06:51,469
these sorts of things I started focusing

185
00:06:50,060 --> 00:06:53,150
on thinking well I actually need

186
00:06:51,469 --> 00:06:57,080
something to bounce off I almost need

187
00:06:53,150 --> 00:07:00,109
like a sparring partner essentially now

188
00:06:57,080 --> 00:07:02,270
I'll say from the back there's no AI in

189
00:07:00,110 --> 00:07:03,979
chapala K there's no machine learning

190
00:07:02,270 --> 00:07:06,169
there's none of this you can get very

191
00:07:03,979 --> 00:07:08,120
creative with the way that they interact

192
00:07:06,169 --> 00:07:11,659
with the environment but it really is

193
00:07:08,120 --> 00:07:12,289
you orchestrating how you want things to

194
00:07:11,659 --> 00:07:15,469
work

195
00:07:12,289 --> 00:07:17,449
however I've built a lot of entropy into

196
00:07:15,469 --> 00:07:19,340
this solution because I didn't want to

197
00:07:17,449 --> 00:07:22,430
be marking my own homework that was my

198
00:07:19,340 --> 00:07:24,229
biggest frustration is that script based

199
00:07:22,430 --> 00:07:26,479
approach is they're very predictable you

200
00:07:24,229 --> 00:07:28,610
know if a Python scripts will run every

201
00:07:26,479 --> 00:07:31,279
couple of minutes it does exactly the

202
00:07:28,610 --> 00:07:33,169
same thing and and I felt that I kind of

203
00:07:31,279 --> 00:07:34,430
built a bit of complacency in me because

204
00:07:33,169 --> 00:07:35,659
that's not how it happens in the real

205
00:07:34,430 --> 00:07:37,310
world you know if I know that

206
00:07:35,659 --> 00:07:40,159
something's gonna happen every 10

207
00:07:37,310 --> 00:07:41,449
minutes then whatever am I really sort

208
00:07:40,159 --> 00:07:43,279
of building that sort of natural

209
00:07:41,449 --> 00:07:44,029
response in a way so that was really

210
00:07:43,279 --> 00:07:47,479
important to me

211
00:07:44,029 --> 00:07:50,599
and sheeple that's at the core of the

212
00:07:47,479 --> 00:07:53,449
project the whole idea is that you don't

213
00:07:50,599 --> 00:07:55,669
know when things are going to happen and

214
00:07:53,449 --> 00:07:57,020
I have plans to make that even more so

215
00:07:55,669 --> 00:07:59,229
you'll see that there's some baking

216
00:07:57,020 --> 00:08:01,520
there there so there is some sort of

217
00:07:59,229 --> 00:08:03,770
predictability if you watched it for a

218
00:08:01,520 --> 00:08:05,839
couple of days but I plan to make it so

219
00:08:03,770 --> 00:08:07,190
that that's completely random but and

220
00:08:05,839 --> 00:08:09,139
that was really important to me so that

221
00:08:07,190 --> 00:08:11,150
for example if I'm keylogging

222
00:08:09,139 --> 00:08:13,599
and they're sheep all types and SSH

223
00:08:11,150 --> 00:08:16,669
connection credential into some server

224
00:08:13,599 --> 00:08:18,139
over a couple of days if I'm not key

225
00:08:16,669 --> 00:08:19,909
logging in the right process I'm going

226
00:08:18,139 --> 00:08:22,460
to miss that credential if I see that

227
00:08:19,909 --> 00:08:24,050
credential passed I'm going to respond

228
00:08:22,460 --> 00:08:25,938
in the way that I would in the real

229
00:08:24,050 --> 00:08:27,710
world and that's kind of the whole

230
00:08:25,939 --> 00:08:30,139
purpose of all of this it's not me kind

231
00:08:27,710 --> 00:08:32,360
of going I know when it's gonna happen

232
00:08:30,139 --> 00:08:34,690
so whatever I want to be ready I want to

233
00:08:32,360 --> 00:08:37,849
be focusing on developing my tradecraft

234
00:08:34,690 --> 00:08:39,500
so as I said you have to look at the

235
00:08:37,849 --> 00:08:41,120
ways that you're practicing label is

236
00:08:39,500 --> 00:08:43,630
whole to a practice makes perfect

237
00:08:41,120 --> 00:08:46,120
approach

238
00:08:43,630 --> 00:08:48,070
again self-directed learning as I said

239
00:08:46,120 --> 00:08:49,840
before like how do you know what you're

240
00:08:48,070 --> 00:08:52,270
actually practicing is the right thing

241
00:08:49,840 --> 00:08:54,700
to do I never never ceases to amaze me

242
00:08:52,270 --> 00:08:57,819
that actually it's how you ended up

243
00:08:54,700 --> 00:08:58,270
getting to that idea that that would be

244
00:08:57,820 --> 00:09:01,480
good

245
00:08:58,270 --> 00:09:03,280
to do so we really want perfect practice

246
00:09:01,480 --> 00:09:04,810
makes perfect if we're gonna smash into

247
00:09:03,280 --> 00:09:08,380
things let's really go for something

248
00:09:04,810 --> 00:09:10,359
hard and really tests that theory so

249
00:09:08,380 --> 00:09:12,430
that was quite important to me how am i

250
00:09:10,360 --> 00:09:14,050
developing myself what can I do what

251
00:09:12,430 --> 00:09:17,920
tools are out there that are available

252
00:09:14,050 --> 00:09:20,380
for me and how can I improve so this is

253
00:09:17,920 --> 00:09:22,300
a wicked quote from Michael Jordan it

254
00:09:20,380 --> 00:09:24,130
basically says that if you spend all day

255
00:09:22,300 --> 00:09:25,780
doing the wrong thing you just become

256
00:09:24,130 --> 00:09:28,270
really good at doing the wrong thing so

257
00:09:25,780 --> 00:09:31,750
I was like okay yeah how can i how can I

258
00:09:28,270 --> 00:09:34,390
make this better and it's because we

259
00:09:31,750 --> 00:09:35,860
have this sort of assumed breach this is

260
00:09:34,390 --> 00:09:37,660
where we are with customers now we're

261
00:09:35,860 --> 00:09:40,300
assuming breach we're saying to people

262
00:09:37,660 --> 00:09:42,790
well you know what's gonna happen is

263
00:09:40,300 --> 00:09:44,199
somebody gonna get in I it's inevitable

264
00:09:42,790 --> 00:09:46,180
that somebody's gonna get in in some way

265
00:09:44,200 --> 00:09:48,190
even if it's inside a threat what does

266
00:09:46,180 --> 00:09:50,160
that look like you know can you even see

267
00:09:48,190 --> 00:09:52,270
it within the context of the network

268
00:09:50,160 --> 00:09:54,370
particularly have you have a massive

269
00:09:52,270 --> 00:09:56,949
network these are real challenges for

270
00:09:54,370 --> 00:09:58,780
people I'm sure if you've seen different

271
00:09:56,950 --> 00:10:00,460
sized networks you know it's quite easy

272
00:09:58,780 --> 00:10:02,860
for us as attackers to come in and go

273
00:10:00,460 --> 00:10:04,240
hey I owned all the things like blah you

274
00:10:02,860 --> 00:10:06,340
know and pointing fingers at the IT

275
00:10:04,240 --> 00:10:07,870
department but I was assist atman for

276
00:10:06,340 --> 00:10:09,730
ten years and I've seen some very big

277
00:10:07,870 --> 00:10:12,910
networks and some of this stuff is

278
00:10:09,730 --> 00:10:14,500
really really hard to secure and even so

279
00:10:12,910 --> 00:10:16,540
there's still a threat the admins with

280
00:10:14,500 --> 00:10:19,180
the keys to the kingdom right so there's

281
00:10:16,540 --> 00:10:20,740
this whole sort of idea of can you see

282
00:10:19,180 --> 00:10:21,790
things when they're happening and do you

283
00:10:20,740 --> 00:10:23,560
even know what you want to be looking

284
00:10:21,790 --> 00:10:25,420
for and if everything starts burning

285
00:10:23,560 --> 00:10:26,979
down do you even know where those fires

286
00:10:25,420 --> 00:10:29,170
are let's say you've got 50 fires

287
00:10:26,980 --> 00:10:31,270
throughout your network which is the

288
00:10:29,170 --> 00:10:34,000
most important fire to start with first

289
00:10:31,270 --> 00:10:36,760
so the more I work on this I kind of

290
00:10:34,000 --> 00:10:40,180
feel that I'm kind of turning into a red

291
00:10:36,760 --> 00:10:42,010
blue type mishmash purple whatever

292
00:10:40,180 --> 00:10:44,859
because I think that both sides inform

293
00:10:42,010 --> 00:10:46,720
the other side how long does it take you

294
00:10:44,860 --> 00:10:49,840
to do that now what is the Delta between

295
00:10:46,720 --> 00:10:51,100
you detecting this and actually been

296
00:10:49,840 --> 00:10:52,990
able to respond and that's where sheep

297
00:10:51,100 --> 00:10:56,620
were really cool because you can create

298
00:10:52,990 --> 00:10:58,270
them over hours minutes hours or days

299
00:10:56,620 --> 00:11:01,000
there's a sleep function in author-it

300
00:10:58,270 --> 00:11:03,670
that you'll see later on I use heavily

301
00:11:01,000 --> 00:11:06,760
and one sleep cycle and you'll see I use

302
00:11:03,670 --> 00:11:09,610
it a lot one sleep cycle can be up to 24

303
00:11:06,760 --> 00:11:11,800
days so it's realistic that you could

304
00:11:09,610 --> 00:11:16,390
create a chi pool that basically did one

305
00:11:11,800 --> 00:11:18,099
or two tasks over a period of a good few

306
00:11:16,390 --> 00:11:20,380
weeks I've had them running on a loop

307
00:11:18,100 --> 00:11:22,260
one iteration of his loop as you'll see

308
00:11:20,380 --> 00:11:24,340
for a couple of days in the labs

309
00:11:22,260 --> 00:11:25,930
basically because I haven't got too much

310
00:11:24,340 --> 00:11:28,690
time to wait for these things to happen

311
00:11:25,930 --> 00:11:31,270
and and the the runtime itself is is

312
00:11:28,690 --> 00:11:33,280
pretty solid so I think these bring in

313
00:11:31,270 --> 00:11:36,430
interesting opportunities for how we can

314
00:11:33,280 --> 00:11:38,890
remove that stuff a command happens and

315
00:11:36,430 --> 00:11:41,410
then a couple of days later another

316
00:11:38,890 --> 00:11:43,210
command happens and we kind of go from

317
00:11:41,410 --> 00:11:45,730
that perspective and I guess as incident

318
00:11:43,210 --> 00:11:47,590
responders or socks you need to be able

319
00:11:45,730 --> 00:11:49,420
to draw the correlation between those

320
00:11:47,590 --> 00:11:51,460
threads and if it happens in a very

321
00:11:49,420 --> 00:11:54,099
short sequence of time then that's

322
00:11:51,460 --> 00:11:55,690
fairly easy to it's a sort of isolate

323
00:11:54,100 --> 00:11:57,610
and event but if it happens over a

324
00:11:55,690 --> 00:12:00,370
prolonged period of time then that

325
00:11:57,610 --> 00:12:01,840
becomes quite a challenge so as I said

326
00:12:00,370 --> 00:12:03,940
I've got this project called lab seed

327
00:12:01,840 --> 00:12:06,160
which I've been working on for the last

328
00:12:03,940 --> 00:12:08,410
year and my idea is to automate all of

329
00:12:06,160 --> 00:12:09,969
this now so this is the kind of a

330
00:12:08,410 --> 00:12:12,790
representation of what we have here

331
00:12:09,970 --> 00:12:14,770
we're kind of in this DMZ bit so when

332
00:12:12,790 --> 00:12:16,329
you get an IP address you'll essentially

333
00:12:14,770 --> 00:12:18,880
be in this range and there's quite a few

334
00:12:16,330 --> 00:12:21,310
servers and stuff for you to work with I

335
00:12:18,880 --> 00:12:23,350
use a virus if you've ever heard of our

336
00:12:21,310 --> 00:12:25,750
any buddy heard a virus before viata

337
00:12:23,350 --> 00:12:27,640
anybody heard of vieta like a virtual

338
00:12:25,750 --> 00:12:31,900
firewall versus I use the open-source

339
00:12:27,640 --> 00:12:33,460
version Lulu of virus and that basically

340
00:12:31,900 --> 00:12:35,020
controls all the network segments so

341
00:12:33,460 --> 00:12:38,020
these are all independently routed

342
00:12:35,020 --> 00:12:39,880
Network segments and you can have web

343
00:12:38,020 --> 00:12:41,650
proxies between them and stateful packet

344
00:12:39,880 --> 00:12:44,560
inspection and stuff so it's all really

345
00:12:41,650 --> 00:12:46,000
good and these are network segments that

346
00:12:44,560 --> 00:12:47,890
they won't run through in they're fairly

347
00:12:46,000 --> 00:12:49,210
route of all so not everything is in the

348
00:12:47,890 --> 00:12:51,240
labs that I've built today but there's

349
00:12:49,210 --> 00:12:53,950
about 40 machines of different Windows

350
00:12:51,240 --> 00:12:57,880
versions for us to create people and

351
00:12:53,950 --> 00:12:59,410
deploy them on and and stuff as I said

352
00:12:57,880 --> 00:13:02,320
like looking at that lab design there

353
00:12:59,410 --> 00:13:05,560
was always a missing piece for me and if

354
00:13:02,320 --> 00:13:06,970
you look at traditional lab designs

355
00:13:05,560 --> 00:13:08,979
themselves and stuff they're just a

356
00:13:06,970 --> 00:13:10,230
collection of vulnerable boxes and I

357
00:13:08,980 --> 00:13:12,090
didn't feel that that

358
00:13:10,230 --> 00:13:14,490
represented what I was seeing in the

359
00:13:12,090 --> 00:13:17,370
real world you know red teaming is

360
00:13:14,490 --> 00:13:18,990
really about attacking people to to a

361
00:13:17,370 --> 00:13:23,040
degree that's where the attack surface

362
00:13:18,990 --> 00:13:23,790
seems to focus right now and so I

363
00:13:23,040 --> 00:13:25,469
thought well this is a really

364
00:13:23,790 --> 00:13:27,719
interesting problem like how do you

365
00:13:25,470 --> 00:13:30,060
emulate people properly what is it like

366
00:13:27,720 --> 00:13:32,070
with the person within a network how can

367
00:13:30,060 --> 00:13:33,630
I solve this issue and I started looking

368
00:13:32,070 --> 00:13:35,990
around at stuff and there's lots of

369
00:13:33,630 --> 00:13:37,980
solutions for setting up lab seed type

370
00:13:35,990 --> 00:13:39,930
environments Microsoft have actually got

371
00:13:37,980 --> 00:13:42,150
a really cool script which if you run

372
00:13:39,930 --> 00:13:43,680
hyper-v you can just run this PowerShell

373
00:13:42,150 --> 00:13:46,110
script and it will do all the magic for

374
00:13:43,680 --> 00:13:47,670
you in there's a lab in a box so there's

375
00:13:46,110 --> 00:13:49,980
lots of solutions for this sort of stuff

376
00:13:47,670 --> 00:13:51,990
for creating the infrastructure for lab

377
00:13:49,980 --> 00:13:54,270
environments but I I kind of kept some

378
00:13:51,990 --> 00:13:56,370
going around the loops like yeah but how

379
00:13:54,270 --> 00:13:57,150
do I then add that next layer on where

380
00:13:56,370 --> 00:13:59,810
were the people

381
00:13:57,150 --> 00:14:03,120
so I started mooching and I found this

382
00:13:59,810 --> 00:14:05,099
University of Amsterdam paper last year

383
00:14:03,120 --> 00:14:06,750
which I read through really good like

384
00:14:05,100 --> 00:14:08,580
looks at lots of different solutions for

385
00:14:06,750 --> 00:14:11,460
how you can deploy lab environments and

386
00:14:08,580 --> 00:14:14,310
stuff and they're also showcasing their

387
00:14:11,460 --> 00:14:15,660
own solution I've got a lot of time for

388
00:14:14,310 --> 00:14:17,790
people like Marx meets you know

389
00:14:15,660 --> 00:14:20,069
outflanked Fame I think they do a lot of

390
00:14:17,790 --> 00:14:22,709
really interesting work but as I read

391
00:14:20,070 --> 00:14:25,680
through this it was basically saying

392
00:14:22,710 --> 00:14:28,470
well there isn't any way of emulating

393
00:14:25,680 --> 00:14:30,660
user traffic like we want users creating

394
00:14:28,470 --> 00:14:32,400
documents and creating files and

395
00:14:30,660 --> 00:14:33,870
creating data and creating real world

396
00:14:32,400 --> 00:14:37,920
traffic that isn't literally just a

397
00:14:33,870 --> 00:14:39,930
script making a post request but there's

398
00:14:37,920 --> 00:14:41,699
a lot of challenges with that really the

399
00:14:39,930 --> 00:14:45,390
first challenge is if you look at sort

400
00:14:41,700 --> 00:14:47,850
of Python as an example which is kind of

401
00:14:45,390 --> 00:14:50,430
where I started it's very difficult to

402
00:14:47,850 --> 00:14:52,050
control where your input goes you know

403
00:14:50,430 --> 00:14:54,000
things will happen on an end point that

404
00:14:52,050 --> 00:14:55,650
you're not necessarily expecting and

405
00:14:54,000 --> 00:14:57,500
then because your script doesn't have

406
00:14:55,650 --> 00:15:00,329
that flexibility to deal with those

407
00:14:57,500 --> 00:15:02,880
types of problems you can quickly end up

408
00:15:00,330 --> 00:15:04,850
sending input somewhere else and so that

409
00:15:02,880 --> 00:15:07,020
means that everything kind of breaks the

410
00:15:04,850 --> 00:15:08,970
other thing is if you don't compile

411
00:15:07,020 --> 00:15:12,210
stuff then you you nent start requiring

412
00:15:08,970 --> 00:15:14,490
lots of run times on clients obviously

413
00:15:12,210 --> 00:15:16,320
you can write c-sharp and stuff and do

414
00:15:14,490 --> 00:15:18,210
all that the newfangled cool kid stuff

415
00:15:16,320 --> 00:15:20,670
but essentially I was thinking well I

416
00:15:18,210 --> 00:15:21,900
try I ultimately want to be able to just

417
00:15:20,670 --> 00:15:23,280
put one thing

418
00:15:21,900 --> 00:15:24,510
then that has everything that I need to

419
00:15:23,280 --> 00:15:27,839
do that seemed to me to be the most

420
00:15:24,510 --> 00:15:29,220
flexible solution and then if you want

421
00:15:27,840 --> 00:15:32,400
to move away from this predictability

422
00:15:29,220 --> 00:15:34,830
like building in this timing becomes a

423
00:15:32,400 --> 00:15:36,990
real problem it's a real challenge to

424
00:15:34,830 --> 00:15:39,510
build in that randomness and still keep

425
00:15:36,990 --> 00:15:44,250
that sequence of events so I reflected

426
00:15:39,510 --> 00:15:46,700
on this for quite a while and as I said

427
00:15:44,250 --> 00:15:48,780
I'm I'm an old-school sysadmin really

428
00:15:46,700 --> 00:15:52,350
and my company we used to work with

429
00:15:48,780 --> 00:15:54,150
schools and we used to deploy software

430
00:15:52,350 --> 00:15:57,000
for schools and it was kind of Windows

431
00:15:54,150 --> 00:15:58,709
95 windows 98 here where you couldn't

432
00:15:57,000 --> 00:16:00,480
wrap this stuff if you put an msi

433
00:15:58,710 --> 00:16:03,450
wrapper around it it would break and

434
00:16:00,480 --> 00:16:05,010
just wasn't very flexible and there was

435
00:16:03,450 --> 00:16:08,430
one particular piece of software it is

436
00:16:05,010 --> 00:16:10,170
these tools that I couldn't I had to

437
00:16:08,430 --> 00:16:11,880
deploy on a large number of machines and

438
00:16:10,170 --> 00:16:13,890
it was literally a case of going to each

439
00:16:11,880 --> 00:16:15,300
one and putting you know manually

440
00:16:13,890 --> 00:16:18,300
clicking and going through that which

441
00:16:15,300 --> 00:16:19,439
was which was a nightmare and all of a

442
00:16:18,300 --> 00:16:22,319
sudden that sort of bubbled to the top

443
00:16:19,440 --> 00:16:23,430
of my mind like last year and I was

444
00:16:22,320 --> 00:16:24,630
going through some old files and I

445
00:16:23,430 --> 00:16:26,880
realized I've kind of solved this

446
00:16:24,630 --> 00:16:29,189
problem before in in a way or at least

447
00:16:26,880 --> 00:16:31,290
the genesis of this problem through a

448
00:16:29,190 --> 00:16:32,990
programming language called all - it has

449
00:16:31,290 --> 00:16:37,410
anybody ever heard of or to it before

450
00:16:32,990 --> 00:16:39,690
just one or two well now you have hey

451
00:16:37,410 --> 00:16:41,550
only ever hears me talking to him about

452
00:16:39,690 --> 00:16:42,870
on slack is all to it and cheap oil and

453
00:16:41,550 --> 00:16:45,120
stuff so I can you just go and do some

454
00:16:42,870 --> 00:16:46,440
work match nobody's interesting well I

455
00:16:45,120 --> 00:16:48,210
might be able to create a cheap well

456
00:16:46,440 --> 00:16:51,180
that could automate my work feel that's

457
00:16:48,210 --> 00:16:53,820
my boss by the way so yet also it has

458
00:16:51,180 --> 00:16:57,209
been around forever since like forever

459
00:16:53,820 --> 00:17:00,660
basically and what it's really good at

460
00:16:57,210 --> 00:17:03,630
is it's a freeware is basic type

461
00:17:00,660 --> 00:17:05,700
language so you'll see the code is quite

462
00:17:03,630 --> 00:17:08,369
easy to read I'm a self-taught developer

463
00:17:05,700 --> 00:17:10,260
I started with Python and understanding

464
00:17:08,369 --> 00:17:11,939
how all - it works wasn't too much of a

465
00:17:10,260 --> 00:17:14,220
jump for me so for those with more

466
00:17:11,940 --> 00:17:17,250
experience I'm sure it won't be a

467
00:17:14,220 --> 00:17:18,930
problem at all but it's really good at

468
00:17:17,250 --> 00:17:20,819
some of the core things that I wanted

469
00:17:18,930 --> 00:17:23,670
which was controlling the Windows GUI

470
00:17:20,819 --> 00:17:26,220
into interfacing with Windows a class

471
00:17:23,670 --> 00:17:28,260
level so how I solved the tizzies tools

472
00:17:26,220 --> 00:17:31,169
problem as an example as it expected

473
00:17:28,260 --> 00:17:33,570
specific D levels and specific paths

474
00:17:31,169 --> 00:17:37,289
it was a case of next next browse select

475
00:17:33,570 --> 00:17:38,908
file next next specify a specific path

476
00:17:37,289 --> 00:17:41,460
it was that type of a manual

477
00:17:38,909 --> 00:17:45,289
distribution and I automated all of that

478
00:17:41,460 --> 00:17:48,840
with all to it into an au 3 script and

479
00:17:45,289 --> 00:17:50,609
then compiled that into a binary so what

480
00:17:48,840 --> 00:17:52,738
happened was I had the original binary

481
00:17:50,609 --> 00:17:54,720
on a share and I had all to it running

482
00:17:52,739 --> 00:17:57,059
as a compiled binary and I use group

483
00:17:54,720 --> 00:17:58,710
policy to deploy a startup script which

484
00:17:57,059 --> 00:18:01,440
basically said the very first time the

485
00:17:58,710 --> 00:18:03,960
machine runs up you need to copy down

486
00:18:01,440 --> 00:18:07,379
the the program installation binary

487
00:18:03,960 --> 00:18:09,090
together with my early sheeple and then

488
00:18:07,379 --> 00:18:11,609
run that to run the other and basically

489
00:18:09,090 --> 00:18:13,289
watch the installation go through so

490
00:18:11,609 --> 00:18:15,449
it's like this is absolutely perfect

491
00:18:13,289 --> 00:18:17,999
because it can do things like control

492
00:18:15,450 --> 00:18:20,549
windows it can react when a pop-up comes

493
00:18:17,999 --> 00:18:23,940
up it can send keys which is why we can

494
00:18:20,549 --> 00:18:26,039
key log them and it's pretty much runs

495
00:18:23,940 --> 00:18:29,129
on I've had it running on all the

496
00:18:26,039 --> 00:18:32,070
versions of Windows so far from XP up to

497
00:18:29,129 --> 00:18:33,869
Server 2019 so it doesn't seem to have

498
00:18:32,070 --> 00:18:35,519
any real problems with dependencies at

499
00:18:33,869 --> 00:18:37,649
all but more than anything

500
00:18:35,519 --> 00:18:40,619
everything compiles to a single binary

501
00:18:37,649 --> 00:18:43,080
so once you've created this sheeple and

502
00:18:40,619 --> 00:18:45,629
you've compiled it that executable has

503
00:18:43,080 --> 00:18:47,158
the runtime in it and all of the tasks

504
00:18:45,629 --> 00:18:49,559
and all of the input that you've built

505
00:18:47,159 --> 00:18:51,419
into this program all wrapped up in a

506
00:18:49,559 --> 00:18:53,249
package that can then be distributed so

507
00:18:51,419 --> 00:18:58,739
I was like this is this is absolutely

508
00:18:53,249 --> 00:19:01,919
perfect for me so that began sheeple so

509
00:18:58,739 --> 00:19:03,629
it's really it's two components because

510
00:19:01,919 --> 00:19:04,980
what I didn't want to do is say hey I've

511
00:19:03,629 --> 00:19:07,590
written this tool you just need to go

512
00:19:04,980 --> 00:19:08,789
and learn all to it and then you'll be

513
00:19:07,590 --> 00:19:11,340
fine because I think that's quite a

514
00:19:08,789 --> 00:19:14,609
barrier to entry so what I've done is

515
00:19:11,340 --> 00:19:16,889
I've written a Python 3 wrapper around

516
00:19:14,609 --> 00:19:18,809
the creation of sheeple and it handles

517
00:19:16,889 --> 00:19:20,820
lots of bits that you don't necessarily

518
00:19:18,809 --> 00:19:22,678
need to know about once we get into the

519
00:19:20,820 --> 00:19:24,210
code you'll you'll see it more but

520
00:19:22,679 --> 00:19:26,789
essentially python acts as the wrapper

521
00:19:24,210 --> 00:19:28,919
for that and I started thinking okay

522
00:19:26,789 --> 00:19:30,899
well so I've got a way of emulating user

523
00:19:28,919 --> 00:19:33,239
behavior now but what is it to be a user

524
00:19:30,899 --> 00:19:34,859
what do we actually do and I kind of

525
00:19:33,239 --> 00:19:37,529
come to the conclusion that we spend our

526
00:19:34,859 --> 00:19:39,090
day and we have tasks through our day we

527
00:19:37,529 --> 00:19:41,220
would you know interact with command

528
00:19:39,090 --> 00:19:43,070
shells or create emails open Word

529
00:19:41,220 --> 00:19:45,500
documents etc or

530
00:19:43,070 --> 00:19:48,678
whatever so it's like that's cool these

531
00:19:45,500 --> 00:19:51,019
these packets of functionality these

532
00:19:48,679 --> 00:19:54,380
modules if you will need to be wrapped

533
00:19:51,019 --> 00:19:55,549
so that it's fully extendable it was

534
00:19:54,380 --> 00:19:57,440
really important for me to be able to

535
00:19:55,549 --> 00:19:59,360
emulate keystrokes I wanted them to type

536
00:19:57,440 --> 00:20:01,220
because I wanted to be able to do things

537
00:19:59,360 --> 00:20:03,918
like key logging those key credentials

538
00:20:01,220 --> 00:20:06,500
or when a user copy and paste something

539
00:20:03,919 --> 00:20:08,179
to the clipboard I haven't published a

540
00:20:06,500 --> 00:20:10,610
task for that yet but I've been working

541
00:20:08,179 --> 00:20:12,200
on that process where all the user does

542
00:20:10,610 --> 00:20:14,629
is takes a credential from something

543
00:20:12,200 --> 00:20:16,279
like keepass copies it pastes it to the

544
00:20:14,630 --> 00:20:18,070
clipboard and then ten seconds later

545
00:20:16,279 --> 00:20:20,960
that it's gone that credential is gone

546
00:20:18,070 --> 00:20:23,509
if you're watching the clipboard you're

547
00:20:20,960 --> 00:20:25,190
gonna see that if you a if you have the

548
00:20:23,509 --> 00:20:27,679
privileges and B you're actually

549
00:20:25,190 --> 00:20:29,899
focusing on what type of tradecraft you

550
00:20:27,679 --> 00:20:31,340
want to develop so that you're watching

551
00:20:29,899 --> 00:20:33,168
what happens to the clipboard you're

552
00:20:31,340 --> 00:20:34,759
going to see that credential and that

553
00:20:33,169 --> 00:20:37,279
may mean the difference between you

554
00:20:34,759 --> 00:20:39,590
being able to move on through a CTF type

555
00:20:37,279 --> 00:20:41,120
lab environment or not but essentially

556
00:20:39,590 --> 00:20:43,129
you know that sort of thinking's like

557
00:20:41,120 --> 00:20:44,989
our that's that's pretty useful for me

558
00:20:43,129 --> 00:20:47,299
to think about and maybe it won't happen

559
00:20:44,990 --> 00:20:48,980
again for a couple of days which is and

560
00:20:47,299 --> 00:20:51,529
of where you can start to see you use

561
00:20:48,980 --> 00:20:53,330
this as a foundation for development and

562
00:20:51,529 --> 00:20:55,519
they have an amount of time to complete

563
00:20:53,330 --> 00:20:58,879
them and that can be pretty much

564
00:20:55,519 --> 00:21:00,679
whatever you want it to be for demos and

565
00:20:58,879 --> 00:21:03,379
for testing I tend to reduce it down to

566
00:21:00,679 --> 00:21:04,940
a couple of minutes and even that's not

567
00:21:03,379 --> 00:21:07,668
quick enough when you're testing so I

568
00:21:04,940 --> 00:21:10,639
tend to solve hard code mess around with

569
00:21:07,669 --> 00:21:12,169
the output I you three file directly and

570
00:21:10,639 --> 00:21:14,000
then once I'm happy that it's the way

571
00:21:12,169 --> 00:21:17,179
that I wanted to I then revert it back

572
00:21:14,000 --> 00:21:19,190
and compile it but the random time

573
00:21:17,179 --> 00:21:20,720
intervals the the entropy in there was a

574
00:21:19,190 --> 00:21:22,750
really important part of it that I

575
00:21:20,720 --> 00:21:25,940
wanted to build into it so that I wasn't

576
00:21:22,750 --> 00:21:27,740
predicting when things were gonna happen

577
00:21:25,940 --> 00:21:29,899
and as I said it can be compiled into a

578
00:21:27,740 --> 00:21:32,149
self-contained binary that you can then

579
00:21:29,899 --> 00:21:34,158
copy around it can even self replicate

580
00:21:32,149 --> 00:21:36,439
which is quite interesting as sheeple

581
00:21:34,159 --> 00:21:38,179
can copy itself and copy itself to

582
00:21:36,440 --> 00:21:40,279
somewhere else and then trigger trigger

583
00:21:38,179 --> 00:21:42,049
that action which is why I said about

584
00:21:40,279 --> 00:21:44,120
using it in real-world engagements to

585
00:21:42,049 --> 00:21:47,690
create noise across a couple of machines

586
00:21:44,120 --> 00:21:48,489
you can almost worm a PHY if that's your

587
00:21:47,690 --> 00:21:51,289
your thing

588
00:21:48,490 --> 00:21:53,419
so version one was released last year

589
00:21:51,289 --> 00:21:55,399
here as a beta and then I kind of

590
00:21:53,419 --> 00:21:57,739
reflected and realized how terrible

591
00:21:55,399 --> 00:22:00,649
my approach was to all of this like if

592
00:21:57,739 --> 00:22:03,049
you hate your own tool after a bit then

593
00:22:00,649 --> 00:22:05,658
you're probably not in the right path so

594
00:22:03,049 --> 00:22:08,570
over Christmas I finally sat down with a

595
00:22:05,659 --> 00:22:09,649
good bottle of spirits and really

596
00:22:08,570 --> 00:22:11,779
thought well if this is going to be

597
00:22:09,649 --> 00:22:13,279
where I want it to be then I need

598
00:22:11,779 --> 00:22:16,309
architecture I need to make it

599
00:22:13,279 --> 00:22:18,169
extensible there was too much if else do

600
00:22:16,309 --> 00:22:20,389
this do that do the other if you wanted

601
00:22:18,169 --> 00:22:22,609
to add in a file then you had to change

602
00:22:20,389 --> 00:22:25,039
it in like 50 different places it was

603
00:22:22,609 --> 00:22:26,299
just it just wasn't cool and I was like

604
00:22:25,039 --> 00:22:28,129
well I want people to get involved in

605
00:22:26,299 --> 00:22:29,899
this and if nobody gets involved in this

606
00:22:28,129 --> 00:22:32,899
I still want to make it easy for myself

607
00:22:29,899 --> 00:22:35,928
to extend and develop so I've built a

608
00:22:32,899 --> 00:22:38,149
different approach to this so it has two

609
00:22:35,929 --> 00:22:39,859
modes now which is an interactive

610
00:22:38,149 --> 00:22:42,139
console and then I've taken it so that

611
00:22:39,859 --> 00:22:43,549
you can give you can define a sheeple in

612
00:22:42,139 --> 00:22:45,978
JSON which I thought was really quite

613
00:22:43,549 --> 00:22:47,509
useful for pipeline building you know

614
00:22:45,979 --> 00:22:48,049
where you want to automate some of this

615
00:22:47,509 --> 00:22:50,089
sort of stuff

616
00:22:48,049 --> 00:22:52,729
ie in a big project to build lab

617
00:22:50,089 --> 00:22:54,440
environments like that seed and now I've

618
00:22:52,729 --> 00:22:55,279
encapsulated everything so I didn't

619
00:22:54,440 --> 00:22:57,859
really know too much about

620
00:22:55,279 --> 00:23:01,070
object-oriented programming but um I

621
00:22:57,859 --> 00:23:02,960
took a udemy course as you do for Python

622
00:23:01,070 --> 00:23:05,178
and I sort of learned how I could do

623
00:23:02,960 --> 00:23:06,619
catch today all of these tasks so now

624
00:23:05,179 --> 00:23:09,559
what basically happens is there's lots

625
00:23:06,619 --> 00:23:11,629
of parent there's lots of inheritance in

626
00:23:09,559 --> 00:23:13,789
place but essentially if you want to add

627
00:23:11,629 --> 00:23:16,639
in a new task yourself build a new

628
00:23:13,789 --> 00:23:18,289
module the tool will create you the sub

629
00:23:16,639 --> 00:23:20,478
code that has everything you need you

630
00:23:18,289 --> 00:23:22,489
just need to edit that one file and you

631
00:23:20,479 --> 00:23:23,869
don't need to go adding anything into

632
00:23:22,489 --> 00:23:25,909
the core because it's dynamically

633
00:23:23,869 --> 00:23:27,468
imported and stuff so that was really

634
00:23:25,909 --> 00:23:30,559
really good the other thing is I'd

635
00:23:27,469 --> 00:23:32,599
written my own sort of CLI for it and

636
00:23:30,559 --> 00:23:35,059
again it was like if the command is this

637
00:23:32,599 --> 00:23:36,830
do this if the command is that do that

638
00:23:35,059 --> 00:23:39,049
and that wasn't scalable particularly

639
00:23:36,830 --> 00:23:41,210
with the amount of modules that I wanted

640
00:23:39,049 --> 00:23:43,339
to build in and Python in the standard

641
00:23:41,210 --> 00:23:45,259
libraries got a CMD module which

642
00:23:43,339 --> 00:23:49,668
basically took a lot of that pain away

643
00:23:45,259 --> 00:23:51,229
it handles a lot of the edge cases where

644
00:23:49,669 --> 00:23:52,849
something is typed in that you don't

645
00:23:51,229 --> 00:23:54,649
necessarily expect in your entire

646
00:23:52,849 --> 00:23:56,509
program bombs and then you've just lost

647
00:23:54,649 --> 00:23:58,070
the last couple of minutes worth of work

648
00:23:56,509 --> 00:24:00,799
so it's really good for that it also

649
00:23:58,070 --> 00:24:03,468
means that for every single module we

650
00:24:00,799 --> 00:24:05,809
can have our own customized C alive

651
00:24:03,469 --> 00:24:08,659
which is specific to that as an example

652
00:24:05,809 --> 00:24:09,240
like a word task you will give it an

653
00:24:08,659 --> 00:24:10,830
input for

654
00:24:09,240 --> 00:24:13,529
and they will type out whatever you

655
00:24:10,830 --> 00:24:15,330
suppliers in input file whereas a

656
00:24:13,529 --> 00:24:18,570
PowerShell task you can give it a

657
00:24:15,330 --> 00:24:20,340
command text file and it will assign all

658
00:24:18,570 --> 00:24:22,590
of the commands in that file so this

659
00:24:20,340 --> 00:24:24,418
idea that each task can have its own set

660
00:24:22,590 --> 00:24:26,189
of attributes and you can write those

661
00:24:24,419 --> 00:24:28,830
specifically for that it's quite useful

662
00:24:26,190 --> 00:24:30,779
and quite powerful and I didn't want it

663
00:24:28,830 --> 00:24:34,710
to be well out of the repo just take a

664
00:24:30,779 --> 00:24:37,140
copy of this this template example and

665
00:24:34,710 --> 00:24:39,510
whatever and then make the changes so

666
00:24:37,140 --> 00:24:43,350
I've built the actual generation of like

667
00:24:39,510 --> 00:24:45,690
templates code into the tool itself so

668
00:24:43,350 --> 00:24:49,529
that you kind of start as you mean to go

669
00:24:45,690 --> 00:24:53,429
on and everything is OCD organized and

670
00:24:49,529 --> 00:24:55,020
you know tabs etc it's quite important I

671
00:24:53,429 --> 00:24:58,020
think for clean code for people to get

672
00:24:55,020 --> 00:24:59,730
involved and then one that I felt was

673
00:24:58,020 --> 00:25:01,049
really quite important and I banged my

674
00:24:59,730 --> 00:25:04,710
head against the wall for quite a while

675
00:25:01,049 --> 00:25:09,720
is this idea of subtasks so RDP being

676
00:25:04,710 --> 00:25:11,549
the one like I was at DEFCON a couple of

677
00:25:09,720 --> 00:25:13,110
years ago and my two were there and they

678
00:25:11,549 --> 00:25:15,029
representing Khedira and they were

679
00:25:13,110 --> 00:25:17,219
showing like how you can on a small

680
00:25:15,029 --> 00:25:18,270
network do things and they're saying

681
00:25:17,220 --> 00:25:21,570
some of the things that are really hard

682
00:25:18,270 --> 00:25:24,690
though are keystroke emulation getting

683
00:25:21,570 --> 00:25:25,620
users to type and RDP and I'm sort of

684
00:25:24,690 --> 00:25:28,020
sitting in the back thinking what I

685
00:25:25,620 --> 00:25:31,559
might have got a solution for some of

686
00:25:28,020 --> 00:25:34,529
that sort of stuff so but the point

687
00:25:31,559 --> 00:25:36,090
about RDP is my initial release was it

688
00:25:34,529 --> 00:25:38,520
would create a remote desktop connection

689
00:25:36,090 --> 00:25:40,620
it would type in the credentials and

690
00:25:38,520 --> 00:25:41,908
then that would be it and I was like

691
00:25:40,620 --> 00:25:43,590
well that kind of sucks

692
00:25:41,909 --> 00:25:45,029
admins don't really do that in the real

693
00:25:43,590 --> 00:25:46,949
world right we make a remote desktop

694
00:25:45,029 --> 00:25:49,260
connection to somewhere else to do

695
00:25:46,950 --> 00:25:51,360
something and then it's like well what

696
00:25:49,260 --> 00:25:53,309
is it that you want to do so this whole

697
00:25:51,360 --> 00:25:55,379
idea of like what we're really cool if

698
00:25:53,309 --> 00:25:58,289
like each task could essentially be its

699
00:25:55,380 --> 00:25:59,909
own subtasks so you could say RDP to the

700
00:25:58,289 --> 00:26:03,149
server and run this sequence of

701
00:25:59,909 --> 00:26:05,549
PowerShell commands or whatever magic

702
00:26:03,149 --> 00:26:08,189
you want to create so this idea of like

703
00:26:05,549 --> 00:26:10,918
oh how can I make that work and it's

704
00:26:08,190 --> 00:26:12,740
stable and it works I've got some videos

705
00:26:10,919 --> 00:26:14,850
and you can play with stuff as well I

706
00:26:12,740 --> 00:26:16,890
think there's a lot of more potential

707
00:26:14,850 --> 00:26:18,600
there but yeah that was quite an

708
00:26:16,890 --> 00:26:20,900
important one for me to do and I'm

709
00:26:18,600 --> 00:26:23,270
pretty pleased to say that that's

710
00:26:20,900 --> 00:26:26,960
seems to be working quite well and it

711
00:26:23,270 --> 00:26:28,700
just uses Python 3.4 and up so 3.4 is

712
00:26:26,960 --> 00:26:30,500
about ten years old now so you've got a

713
00:26:28,700 --> 00:26:33,380
decade and the reason that that's

714
00:26:30,500 --> 00:26:36,350
important is because utilizes the path

715
00:26:33,380 --> 00:26:39,220
Lib library so that you can run the

716
00:26:36,350 --> 00:26:42,050
sheeple python part of it on anything so

717
00:26:39,220 --> 00:26:45,710
if you've ever tried to run Python and

718
00:26:42,050 --> 00:26:46,760
then all of this fancy import requests

719
00:26:45,710 --> 00:26:48,650
and then you realize that Windows

720
00:26:46,760 --> 00:26:49,790
doesn't have requests so then you have

721
00:26:48,650 --> 00:26:52,160
to go through this loop of pip

722
00:26:49,790 --> 00:26:54,649
installing stuff and it all becomes a

723
00:26:52,160 --> 00:26:56,330
bit of a mess I was like well how far

724
00:26:54,650 --> 00:26:58,490
can I get with the standard library so

725
00:26:56,330 --> 00:27:01,520
that essentially all you need is a

726
00:26:58,490 --> 00:27:03,460
Python installation it means that you

727
00:27:01,520 --> 00:27:06,170
can build the source stuff on Windows

728
00:27:03,460 --> 00:27:09,500
and the the time for sort of

729
00:27:06,170 --> 00:27:11,000
unpredictability was ramped up so in my

730
00:27:09,500 --> 00:27:12,590
first version you would give it a

731
00:27:11,000 --> 00:27:15,200
sequence of tasks it would take that

732
00:27:12,590 --> 00:27:17,030
number of tasks it would say oh how much

733
00:27:15,200 --> 00:27:19,130
time have you given me to do them and it

734
00:27:17,030 --> 00:27:23,210
would rip those tasks up into a sequence

735
00:27:19,130 --> 00:27:24,470
of timescales it's amazing isn't it what

736
00:27:23,210 --> 00:27:26,720
I'd love to work in that office just

737
00:27:24,470 --> 00:27:28,130
like spending all day building these

738
00:27:26,720 --> 00:27:31,220
contraptions and he's very happy with

739
00:27:28,130 --> 00:27:33,140
his is outcome but it baked it in which

740
00:27:31,220 --> 00:27:34,760
kind of went against the ethos of the

741
00:27:33,140 --> 00:27:36,320
project which is I don't want to be able

742
00:27:34,760 --> 00:27:38,930
to predict stuff if you ran it enough

743
00:27:36,320 --> 00:27:40,760
times I'd kind of introduced that

744
00:27:38,930 --> 00:27:42,050
predictability back again and you seem

745
00:27:40,760 --> 00:27:44,900
to be enjoying that so I'll just keep it

746
00:27:42,050 --> 00:27:48,800
going for what so in the second version

747
00:27:44,900 --> 00:27:50,900
I've built in even more so now it still

748
00:27:48,800 --> 00:27:52,850
kind of creates a list of times as

749
00:27:50,900 --> 00:27:55,010
you'll see but it bakes them into an

750
00:27:52,850 --> 00:27:57,469
array and on every iteration it shuffles

751
00:27:55,010 --> 00:28:00,110
that arrived and it also now shuffles

752
00:27:57,470 --> 00:28:02,390
the task list as well one thing actually

753
00:28:00,110 --> 00:28:04,490
the IR guys that are using it internally

754
00:28:02,390 --> 00:28:06,890
have said that that's they preferred

755
00:28:04,490 --> 00:28:09,290
they want the option to be able to have

756
00:28:06,890 --> 00:28:10,610
tasks in a sequence rather than on every

757
00:28:09,290 --> 00:28:12,379
loop it does things in a different way

758
00:28:10,610 --> 00:28:13,909
so for the next version I'm going to

759
00:28:12,380 --> 00:28:16,400
build that back in again with the option

760
00:28:13,910 --> 00:28:19,040
for you to specify sequential tasks as

761
00:28:16,400 --> 00:28:21,860
you define them so that it keeps that

762
00:28:19,040 --> 00:28:24,139
still with random time intervals so this

763
00:28:21,860 --> 00:28:25,610
is the type of feedback that you want

764
00:28:24,140 --> 00:28:29,450
from people that are using your tool

765
00:28:25,610 --> 00:28:30,949
like that's that's pretty cool so why

766
00:28:29,450 --> 00:28:32,420
would you even want to use this like

767
00:28:30,950 --> 00:28:34,020
what what's the point of all of this

768
00:28:32,420 --> 00:28:35,910
well it creates login

769
00:28:34,020 --> 00:28:37,440
because they're typing and if they're

770
00:28:35,910 --> 00:28:39,030
trying to authenticate the things and

771
00:28:37,440 --> 00:28:40,920
you're getting era fives back you know

772
00:28:39,030 --> 00:28:43,920
you get an access denied

773
00:28:40,920 --> 00:28:45,630
it creates PowerShell transcript logging

774
00:28:43,920 --> 00:28:48,320
as well if you have all of that on its

775
00:28:45,630 --> 00:28:50,940
typing PowerShell so it's leaving that

776
00:28:48,320 --> 00:28:53,189
that sort of artifact behind and as I

777
00:28:50,940 --> 00:28:55,050
said forensics guys at work that are

778
00:28:53,190 --> 00:28:57,000
building training courses and labs for

779
00:28:55,050 --> 00:28:59,070
people they were like this is great

780
00:28:57,000 --> 00:29:01,440
because historically we would have a set

781
00:28:59,070 --> 00:29:03,689
of bat files that would do things leave

782
00:29:01,440 --> 00:29:05,940
an imprint on the box and then they kind

783
00:29:03,690 --> 00:29:08,480
of know but now they chuckle sheeple on

784
00:29:05,940 --> 00:29:11,040
it for a couple of days shut it down

785
00:29:08,480 --> 00:29:13,050
forensic ly capture it and they have to

786
00:29:11,040 --> 00:29:14,790
go through and they find when things

787
00:29:13,050 --> 00:29:16,950
have happened because they literally

788
00:29:14,790 --> 00:29:19,530
don't know when this has happened they

789
00:29:16,950 --> 00:29:21,840
know that it's stemmed from a call to a

790
00:29:19,530 --> 00:29:24,300
binary but what's interesting is it

791
00:29:21,840 --> 00:29:26,879
seems to on earth the process tree so if

792
00:29:24,300 --> 00:29:30,510
you look at how you as a user create

793
00:29:26,880 --> 00:29:32,130
processes it spawns them in the same way

794
00:29:30,510 --> 00:29:33,840
so there will always be your sheep or

795
00:29:32,130 --> 00:29:37,950
exe or whatever you choose to call it

796
00:29:33,840 --> 00:29:40,139
but as you'll see if you spawn CMD C and

797
00:29:37,950 --> 00:29:42,540
d is not spawned as a child of sheeple

798
00:29:40,140 --> 00:29:44,250
it's spawned as a child of Explorer in

799
00:29:42,540 --> 00:29:48,960
exactly the same way that when you as a

800
00:29:44,250 --> 00:29:50,790
user invoke CMD that's it honors that

801
00:29:48,960 --> 00:29:52,380
process tree and that's important

802
00:29:50,790 --> 00:29:54,750
because of the way we're indicating it

803
00:29:52,380 --> 00:29:56,250
we're controlling controlling it we're

804
00:29:54,750 --> 00:29:57,450
running it in the same way that a user

805
00:29:56,250 --> 00:30:00,480
would because to all intents and

806
00:29:57,450 --> 00:30:02,310
purposes we're emulating user actions so

807
00:30:00,480 --> 00:30:04,140
I think that's really really important

808
00:30:02,310 --> 00:30:05,940
in the sense that apart from this weird

809
00:30:04,140 --> 00:30:10,140
binary that's running there you don't

810
00:30:05,940 --> 00:30:11,460
see you don't see many things and it's

811
00:30:10,140 --> 00:30:13,890
really good for that sort of process

812
00:30:11,460 --> 00:30:15,900
injection stealing tokens you can run

813
00:30:13,890 --> 00:30:18,360
ass all that all anything that you can

814
00:30:15,900 --> 00:30:20,340
type basically can be emulated so at

815
00:30:18,360 --> 00:30:22,229
that point it's really back to how

816
00:30:20,340 --> 00:30:24,659
creative you want to be in thinking

817
00:30:22,230 --> 00:30:27,360
about what how can you invoke some of

818
00:30:24,660 --> 00:30:30,480
this sort of stuff I think that's kind

819
00:30:27,360 --> 00:30:32,580
of the fun part and it creates normal

820
00:30:30,480 --> 00:30:34,830
Network noise so you know if you look at

821
00:30:32,580 --> 00:30:36,570
it from a pcap perspective that's HTTP

822
00:30:34,830 --> 00:30:38,220
traffic I mean there's SMB traffic as

823
00:30:36,570 --> 00:30:40,439
they're trying to you know access things

824
00:30:38,220 --> 00:30:42,810
it's normal Network stuff because we all

825
00:30:40,440 --> 00:30:44,840
love shells right I'm sure you've you've

826
00:30:42,810 --> 00:30:46,330
seen this sort of thing

827
00:30:44,840 --> 00:30:48,860
[Music]

828
00:30:46,330 --> 00:30:50,990
so you can put in this sort of stuff

829
00:30:48,860 --> 00:30:53,540
where there's an opportunity to exploit

830
00:30:50,990 --> 00:30:54,710
something get something back and we I'm

831
00:30:53,540 --> 00:30:58,399
sure everybody's done the meterpreter

832
00:30:54,710 --> 00:31:01,250
dance and as I said before we get into

833
00:30:58,400 --> 00:31:04,370
the overall structure and getting access

834
00:31:01,250 --> 00:31:06,740
awesome there's this child process

835
00:31:04,370 --> 00:31:09,159
procedure so this is how it you would

836
00:31:06,740 --> 00:31:11,600
normally look I've got sysinternals

837
00:31:09,160 --> 00:31:14,210
access for you are on the boxes and

838
00:31:11,600 --> 00:31:16,250
stuff this is a normal process tree why

839
00:31:14,210 --> 00:31:18,800
is this important because if you look at

840
00:31:16,250 --> 00:31:23,300
how edr solutions work they play a lot

841
00:31:18,800 --> 00:31:25,129
of this is really important to how some

842
00:31:23,300 --> 00:31:28,070
of the things get signatures because why

843
00:31:25,130 --> 00:31:30,440
is it why is no pad spawning PowerShell

844
00:31:28,070 --> 00:31:32,870
or why is Excel calling out this process

845
00:31:30,440 --> 00:31:35,060
tree is is quite an important part of it

846
00:31:32,870 --> 00:31:37,100
and as you'll see as you run some sort

847
00:31:35,060 --> 00:31:38,840
of simple sheeple there'll be a sheep

848
00:31:37,100 --> 00:31:40,939
all got binary somewhere running and

849
00:31:38,840 --> 00:31:45,230
then as it invoked things they get

850
00:31:40,940 --> 00:31:48,100
invoked as normal so I think what I'd

851
00:31:45,230 --> 00:31:53,300
like to do at this point is first of all

852
00:31:48,100 --> 00:31:54,679
Phillip has very kindly turned up today

853
00:31:53,300 --> 00:31:57,409
when I found him this morning with the

854
00:31:54,680 --> 00:31:58,970
wireless access point because I've

855
00:31:57,410 --> 00:32:00,980
assumed that everybody would turn it

856
00:31:58,970 --> 00:32:03,710
with cat 5 cables and stuff like shame

857
00:32:00,980 --> 00:32:05,750
on me it's obviously the modern era now

858
00:32:03,710 --> 00:32:07,280
where we don't really need cat 5 cables

859
00:32:05,750 --> 00:32:10,520
anymore because you're rocking hotspots

860
00:32:07,280 --> 00:32:12,110
and stuff but I realized the first thing

861
00:32:10,520 --> 00:32:13,670
this morning that it's probably not

862
00:32:12,110 --> 00:32:18,620
going to be particularly useful for you

863
00:32:13,670 --> 00:32:24,410
if we've got all of that and you can't

864
00:32:18,620 --> 00:32:27,070
access it so my very helpful helper is

865
00:32:24,410 --> 00:32:31,520
doing this and in the meantime I'll just

866
00:32:27,070 --> 00:32:34,370
come out of this and show you some of

867
00:32:31,520 --> 00:32:36,500
the lab and I think let's get people

868
00:32:34,370 --> 00:32:38,120
connected in IP address so that we can

869
00:32:36,500 --> 00:32:39,470
route to the sort of stuff and then some

870
00:32:38,120 --> 00:32:42,500
of the people that want to work through

871
00:32:39,470 --> 00:32:43,550
some of these demos with me I've just

872
00:32:42,500 --> 00:32:46,040
worked through the whole thing that's

873
00:32:43,550 --> 00:32:50,780
awesome so as anybody heard of proxmox

874
00:32:46,040 --> 00:32:53,240
before one man it's my favorite thing

875
00:32:50,780 --> 00:32:55,310
now I was trying to do all this with ESX

876
00:32:53,240 --> 00:32:58,440
and it was a complete pain in the

877
00:32:55,310 --> 00:33:01,470
backside and so I've kind of settled on

878
00:32:58,440 --> 00:33:03,929
proxmox is my solution so I've got the

879
00:33:01,470 --> 00:33:06,000
server in a suitcase that I take with me

880
00:33:03,929 --> 00:33:07,649
wherever I can there's about 40 machines

881
00:33:06,000 --> 00:33:11,700
running on there I've got this proxmox

882
00:33:07,649 --> 00:33:13,590
cluster of a single node and then I've

883
00:33:11,700 --> 00:33:15,240
got the the vo score there which kind of

884
00:33:13,590 --> 00:33:17,309
handles all of the infrastructure and

885
00:33:15,240 --> 00:33:18,840
then I've got this various Windows

886
00:33:17,309 --> 00:33:20,850
machines there's a couple of Kali boxes

887
00:33:18,840 --> 00:33:22,259
in the public network as well if you

888
00:33:20,850 --> 00:33:24,168
want to connect to those or if you just

889
00:33:22,259 --> 00:33:26,759
want to mess around with SSH stuff

890
00:33:24,169 --> 00:33:29,419
there's different versions of Windows so

891
00:33:26,759 --> 00:33:32,929
we've got some version 10 some sevens

892
00:33:29,419 --> 00:33:35,340
2012 boxes for file servers for SMB

893
00:33:32,929 --> 00:33:36,960
there's a domain controller as well so

894
00:33:35,340 --> 00:33:38,519
it's a part of lab seed I've written

895
00:33:36,960 --> 00:33:41,039
another tool called user which is

896
00:33:38,519 --> 00:33:43,230
designed to create massive amounts of

897
00:33:41,039 --> 00:33:45,360
Active Directory users with credentials

898
00:33:43,230 --> 00:33:47,730
that I don't know and names that I don't

899
00:33:45,360 --> 00:33:49,620
know so that in true sort of tradecraft

900
00:33:47,730 --> 00:33:53,100
development I have to go and explore

901
00:33:49,620 --> 00:33:55,110
those so users kind of a fairly simple

902
00:33:53,100 --> 00:33:56,639
tool it does use a third-party library

903
00:33:55,110 --> 00:33:58,709
because you can't do this with Python

904
00:33:56,639 --> 00:34:01,860
standard library but it uses something

905
00:33:58,710 --> 00:34:03,539
called faker and I've got lots of plans

906
00:34:01,860 --> 00:34:06,240
for user but for now what it's really

907
00:34:03,539 --> 00:34:07,559
good at is creating a list of users I

908
00:34:06,240 --> 00:34:09,659
don't know about with credentials I

909
00:34:07,559 --> 00:34:11,790
don't know so there's about five six

910
00:34:09,659 --> 00:34:13,919
thousand user accounts in the directory

911
00:34:11,790 --> 00:34:15,929
at the moment that you can mess around

912
00:34:13,918 --> 00:34:17,969
with create cheap or maybe even create

913
00:34:15,929 --> 00:34:20,339
people that are looking to enumerate the

914
00:34:17,969 --> 00:34:22,379
directory and think about well from the

915
00:34:20,339 --> 00:34:23,819
blue team perspective maybe you want to

916
00:34:22,379 --> 00:34:25,469
start sort of triggering on a user

917
00:34:23,819 --> 00:34:27,899
that's doing a large amount of LDAP

918
00:34:25,469 --> 00:34:29,939
queries looking for for accounts and

919
00:34:27,899 --> 00:34:31,230
stuff it's entirely up to you how you

920
00:34:29,940 --> 00:34:33,089
want to use it but all of these

921
00:34:31,230 --> 00:34:34,020
opportunities are there and then there's

922
00:34:33,089 --> 00:34:36,540
a couple of machines that are in

923
00:34:34,020 --> 00:34:38,250
different networks that pivot I've got

924
00:34:36,540 --> 00:34:40,168
some web servers in here as well so if

925
00:34:38,250 --> 00:34:42,329
we want to use some of the IE modules to

926
00:34:40,168 --> 00:34:45,569
go and visit websites I mean why would

927
00:34:42,329 --> 00:34:47,849
that be useful because of token stealing

928
00:34:45,569 --> 00:34:51,060
and injecting cross-site scripting and

929
00:34:47,849 --> 00:34:52,740
actually authenticating to things one of

930
00:34:51,060 --> 00:34:54,060
the big pushes in my roadmap that I

931
00:34:52,739 --> 00:34:56,129
haven't pushed yet because I'm still

932
00:34:54,060 --> 00:34:57,990
working out some of the kinks is that

933
00:34:56,129 --> 00:34:59,700
ability to be able to authenticate to

934
00:34:57,990 --> 00:35:01,709
web applications and browse through web

935
00:34:59,700 --> 00:35:03,750
applications and stuff so I can do the

936
00:35:01,710 --> 00:35:05,460
initial posts and all the rest of it and

937
00:35:03,750 --> 00:35:07,380
now I'm just trying to work out well you

938
00:35:05,460 --> 00:35:09,530
know how would I get it to actually

939
00:35:07,380 --> 00:35:11,760
interact with a web app but certainly

940
00:35:09,530 --> 00:35:15,000
stealing credentials for web

941
00:35:11,760 --> 00:35:16,920
is really good tab stealing beef hooks

942
00:35:15,000 --> 00:35:19,470
all of that good fun you can sort of

943
00:35:16,920 --> 00:35:24,020
play around and understand how all that

944
00:35:19,470 --> 00:35:27,689
works so is there a wireless network

945
00:35:24,020 --> 00:35:32,850
available so if you have a look there's

946
00:35:27,690 --> 00:35:34,890
a wireless network called sheeple I'm

947
00:35:32,850 --> 00:35:36,870
gonna stay off the wireless because I

948
00:35:34,890 --> 00:35:38,790
don't trust your own that's not because

949
00:35:36,870 --> 00:35:40,589
I don't want to break my Ethernet

950
00:35:38,790 --> 00:35:44,040
connection but you should be able to

951
00:35:40,590 --> 00:35:47,310
connect to it and password is workshop

952
00:35:44,040 --> 00:36:00,240
and what you should get back is a 191 6

953
00:35:47,310 --> 00:36:01,440
877 address and we'll just have a couple

954
00:36:00,240 --> 00:36:08,520
of minutes for those that want to get

955
00:36:01,440 --> 00:36:10,200
involved and get connection now if

956
00:36:08,520 --> 00:36:14,250
you've got your own windows vm's

957
00:36:10,200 --> 00:36:15,930
or you're running Windows and you want

958
00:36:14,250 --> 00:36:18,570
to use that as a like an attack platform

959
00:36:15,930 --> 00:36:21,810
or ever go for it I'm gonna squash this

960
00:36:18,570 --> 00:36:24,180
once we finish so we can destroy we can

961
00:36:21,810 --> 00:36:26,940
absolutely nail this thing if that's how

962
00:36:24,180 --> 00:36:28,680
you want to do it feel free to do very

963
00:36:26,940 --> 00:36:30,060
destructive things so the machines if

964
00:36:28,680 --> 00:36:31,649
that's what we want bear in mind there's

965
00:36:30,060 --> 00:36:34,230
only a few people so there's about 40

966
00:36:31,650 --> 00:36:36,770
machines so we can go for it things I'd

967
00:36:34,230 --> 00:36:39,210
like to be able to come out of today are

968
00:36:36,770 --> 00:36:41,009
getting them to authenticate to

969
00:36:39,210 --> 00:36:43,530
different servers Rd peeing around

970
00:36:41,010 --> 00:36:45,000
working out on SSH stuff because they

971
00:36:43,530 --> 00:36:46,860
can do that as well they can interface

972
00:36:45,000 --> 00:36:49,890
his Linux over SSH which is quite

973
00:36:46,860 --> 00:36:53,760
powerful so I'll get into all of that a

974
00:36:49,890 --> 00:36:55,410
bit later but yes so if you've got you

975
00:36:53,760 --> 00:36:57,240
can either use the ones in the lab so

976
00:36:55,410 --> 00:37:00,839
you can authenticate I can give you some

977
00:36:57,240 --> 00:37:03,839
credentials for that but if you then get

978
00:37:00,840 --> 00:37:06,450
an IP address if you go to that 191 6

979
00:37:03,840 --> 00:37:08,160
877 dot 3 which is this I've put a

980
00:37:06,450 --> 00:37:11,700
simple web server up there and I've left

981
00:37:08,160 --> 00:37:13,410
some credentials for the boxes there's

982
00:37:11,700 --> 00:37:15,600
some autoit snippets in there as well

983
00:37:13,410 --> 00:37:17,339
which we'll get into there's some

984
00:37:15,600 --> 00:37:20,940
software there's the sheeple master

985
00:37:17,340 --> 00:37:24,300
that's it as well and I've also pulled

986
00:37:20,940 --> 00:37:25,170
down the latest Python 3.7 so if you're

987
00:37:24,300 --> 00:37:27,030
running Windows and

988
00:37:25,170 --> 00:37:29,400
you don't have Python and you want to

989
00:37:27,030 --> 00:37:31,430
run it from windows you should be able

990
00:37:29,400 --> 00:37:35,540
to get up and running with all of that

991
00:37:31,430 --> 00:37:35,540
inside the software a bit

992
00:37:38,549 --> 00:37:44,099
there's the auto it setup file there's

993
00:37:40,799 --> 00:37:46,410
putty and we'll get into all of that as

994
00:37:44,099 --> 00:37:48,089
well but you don't have to have all two

995
00:37:46,410 --> 00:37:50,069
installed on the endpoints as I said

996
00:37:48,089 --> 00:37:52,529
before but obviously for development it

997
00:37:50,069 --> 00:37:54,450
definitely helps if you have the auto

998
00:37:52,530 --> 00:37:56,190
environment there's some really cool

999
00:37:54,450 --> 00:37:58,529
things and packages that you get with

1000
00:37:56,190 --> 00:37:59,730
all to it one is a window inspector so

1001
00:37:58,530 --> 00:38:01,710
that's really good when you're building

1002
00:37:59,730 --> 00:38:05,099
these modules and stuff you can sort of

1003
00:38:01,710 --> 00:38:07,829
inspect things and also it can hook at

1004
00:38:05,099 --> 00:38:10,950
the class level so I generally tend to

1005
00:38:07,829 --> 00:38:13,020
hook at a window title but as you'll see

1006
00:38:10,950 --> 00:38:16,819
like it can inspect everything within

1007
00:38:13,020 --> 00:38:20,940
the GUI and even can reference buttons

1008
00:38:16,819 --> 00:38:22,619
which have a class name so let me put

1009
00:38:20,940 --> 00:38:24,420
that into context for you then for how

1010
00:38:22,619 --> 00:38:26,160
you could build this for tradecraft

1011
00:38:24,420 --> 00:38:28,920
because you can interface with GUI

1012
00:38:26,160 --> 00:38:31,368
elements a button level let's say that

1013
00:38:28,920 --> 00:38:33,950
you want to test the ability for

1014
00:38:31,369 --> 00:38:36,900
detecting when somebody enables a macro

1015
00:38:33,950 --> 00:38:39,450
what you could do from a tradecraft

1016
00:38:36,900 --> 00:38:41,970
perspective is have a sheeple that sends

1017
00:38:39,450 --> 00:38:45,089
an email to somebody that's going to

1018
00:38:41,970 --> 00:38:47,069
open that email okay and the body of

1019
00:38:45,089 --> 00:38:48,808
that email could be the first logical

1020
00:38:47,069 --> 00:38:50,790
point of inspection let's say that the

1021
00:38:48,809 --> 00:38:53,220
sheeple the attacking cheap word is

1022
00:38:50,790 --> 00:38:55,619
designed to send it to somebody in HR if

1023
00:38:53,220 --> 00:38:57,328
the context of the message is nothing to

1024
00:38:55,619 --> 00:38:57,990
do with the person that works in HR it's

1025
00:38:57,329 --> 00:39:01,200
not relevant

1026
00:38:57,990 --> 00:39:02,939
VIN it off that's it if it passes that

1027
00:39:01,200 --> 00:39:05,759
first check so that that phishing email

1028
00:39:02,940 --> 00:39:07,079
is relevant to that person or maybe has

1029
00:39:05,760 --> 00:39:09,210
some information from the website or

1030
00:39:07,079 --> 00:39:12,030
there's a correlation and we'll move to

1031
00:39:09,210 --> 00:39:14,430
the next step which is to open the Excel

1032
00:39:12,030 --> 00:39:17,430
spreadsheet that you've sent with a you

1033
00:39:14,430 --> 00:39:19,200
know with a macro inside it staged to

1034
00:39:17,430 --> 00:39:21,359
open the Excel spreadsheet if it's a

1035
00:39:19,200 --> 00:39:24,029
blank Excel spreadsheet with nothing in

1036
00:39:21,359 --> 00:39:25,740
it we'll bin it off because it has to

1037
00:39:24,030 --> 00:39:28,290
have context has to have some sort of

1038
00:39:25,740 --> 00:39:30,118
call to action and then if we pass that

1039
00:39:28,290 --> 00:39:32,880
check at that point you can then either

1040
00:39:30,119 --> 00:39:34,920
move the mouse to click on the GUI

1041
00:39:32,880 --> 00:39:38,250
control or you can just send the clicker

1042
00:39:34,920 --> 00:39:39,069
a class level as well so that's a really

1043
00:39:38,250 --> 00:39:41,529
like girl

1044
00:39:39,069 --> 00:39:44,140
Angella focus on on how you could use

1045
00:39:41,529 --> 00:39:45,359
this but I think that's what my opinion

1046
00:39:44,140 --> 00:39:47,140
is that that's really powerful

1047
00:39:45,359 --> 00:39:50,049
particularly from a training perspective

1048
00:39:47,140 --> 00:39:52,569
when you're trying to take a person and

1049
00:39:50,049 --> 00:39:54,699
say okay these are the things that you

1050
00:39:52,569 --> 00:39:57,069
need to focus on when you're developing

1051
00:39:54,699 --> 00:39:58,930
tradecraft emails have to be

1052
00:39:57,069 --> 00:40:00,788
well-written they have to be relevant to

1053
00:39:58,930 --> 00:40:03,129
the person that they're maybe not even

1054
00:40:00,789 --> 00:40:04,660
the first one hey Debbie hope you don't

1055
00:40:03,130 --> 00:40:06,910
mind but I've just sent you this toast

1056
00:40:04,660 --> 00:40:08,410
legit exe would you mind just running it

1057
00:40:06,910 --> 00:40:11,288
for me please I mean that's not the real

1058
00:40:08,410 --> 00:40:13,058
world so that builds that that enforces

1059
00:40:11,289 --> 00:40:15,219
that complacency that I said before so

1060
00:40:13,059 --> 00:40:17,559
we have an opportunity to explore that

1061
00:40:15,219 --> 00:40:19,059
and trigger off the logic of that and

1062
00:40:17,559 --> 00:40:21,099
then the same thing with crafting

1063
00:40:19,059 --> 00:40:23,259
payloads as well we can have that logic

1064
00:40:21,099 --> 00:40:24,759
inside it to say well if it meets a

1065
00:40:23,259 --> 00:40:26,949
certain set of criteria that we're

1066
00:40:24,759 --> 00:40:29,289
trying to foster as tradecraft

1067
00:40:26,949 --> 00:40:30,940
development then we can take an action

1068
00:40:29,289 --> 00:40:32,019
based on that so it's not machine

1069
00:40:30,940 --> 00:40:34,690
learning because they're not going to

1070
00:40:32,019 --> 00:40:38,649
work it out for you it's you planning

1071
00:40:34,690 --> 00:40:42,130
how you want to develop right it's you

1072
00:40:38,650 --> 00:40:44,949
building the ingredients for what you're

1073
00:40:42,130 --> 00:40:46,930
gonna make for dinner you might have a

1074
00:40:44,949 --> 00:40:48,309
cupboard and there's lots of bits but at

1075
00:40:46,930 --> 00:40:50,410
some point you know that you're gonna

1076
00:40:48,309 --> 00:40:52,299
eat and it's going to involve some

1077
00:40:50,410 --> 00:40:53,410
ingredients I mean I can't cook so you

1078
00:40:52,299 --> 00:40:55,869
probably wouldn't really want to come

1079
00:40:53,410 --> 00:40:59,319
around my house it would be baked beans

1080
00:40:55,869 --> 00:41:02,160
and golden syrup I think with Jakob's

1081
00:40:59,319 --> 00:41:04,269
crackers for for pudding

1082
00:41:02,160 --> 00:41:06,038
so yeah so that's the point about all

1083
00:41:04,269 --> 00:41:08,229
this like people kind of come back I'm

1084
00:41:06,039 --> 00:41:09,969
like the onus is on you to think about

1085
00:41:08,229 --> 00:41:11,589
how you want to develop but then once

1086
00:41:09,969 --> 00:41:13,599
you get that into your head the

1087
00:41:11,589 --> 00:41:16,719
possibilities for this are really quite

1088
00:41:13,599 --> 00:41:18,130
some broad so I'll just show you the the

1089
00:41:16,719 --> 00:41:21,729
vyas box as well just so that you've got

1090
00:41:18,130 --> 00:41:23,890
the context of the lab it's the default

1091
00:41:21,729 --> 00:41:27,819
credits so if anybody kills the voice

1092
00:41:23,890 --> 00:41:29,288
box shame on you but it's a really good

1093
00:41:27,819 --> 00:41:31,569
solution for these types of lab

1094
00:41:29,289 --> 00:41:34,390
environments because it's essentially a

1095
00:41:31,569 --> 00:41:37,630
router and everything that I need all in

1096
00:41:34,390 --> 00:41:39,009
one place so I can show you all the

1097
00:41:37,630 --> 00:41:41,259
interfaces there's a couple of network

1098
00:41:39,009 --> 00:41:42,820
segments you can stack these things as

1099
00:41:41,259 --> 00:41:46,300
much as you want

1100
00:41:42,820 --> 00:41:48,850
what the Vios solution does is it

1101
00:41:46,300 --> 00:41:50,950
defines all those modes it acts as the

1102
00:41:48,850 --> 00:41:52,630
DHCP server for all these segments so

1103
00:41:50,950 --> 00:41:55,270
when boxes are stood up they

1104
00:41:52,630 --> 00:41:57,640
automatically get all the correct DNS

1105
00:41:55,270 --> 00:41:59,740
stuff and they can all talk etc so it

1106
00:41:57,640 --> 00:42:01,870
handles that for all of those it listens

1107
00:41:59,740 --> 00:42:03,580
on SSH acts as a web proxy that I

1108
00:42:01,870 --> 00:42:06,069
combined two different addresses as well

1109
00:42:03,580 --> 00:42:07,450
so let's say you want to be focusing on

1110
00:42:06,070 --> 00:42:09,040
clients that are coming back through an

1111
00:42:07,450 --> 00:42:10,629
authenticated proxy and you want to

1112
00:42:09,040 --> 00:42:13,480
develop all of that tradecraft type

1113
00:42:10,630 --> 00:42:14,650
stuff we can do all of that and then

1114
00:42:13,480 --> 00:42:18,280
there's just some package management

1115
00:42:14,650 --> 00:42:20,230
stuff so I really like this and in the

1116
00:42:18,280 --> 00:42:23,350
true sense of that automation procedure

1117
00:42:20,230 --> 00:42:25,210
that I spoke about I've now got it so

1118
00:42:23,350 --> 00:42:27,339
that via the configure vias is

1119
00:42:25,210 --> 00:42:29,170
completely unique every time I build one

1120
00:42:27,340 --> 00:42:31,090
so I don't even know what the IP

1121
00:42:29,170 --> 00:42:33,760
addresses of the network segments are

1122
00:42:31,090 --> 00:42:36,190
going to be and how that's laid out I

1123
00:42:33,760 --> 00:42:37,570
have to go and enumerate this thing I

1124
00:42:36,190 --> 00:42:40,000
have to find out what the IP addresses

1125
00:42:37,570 --> 00:42:44,710
are of the segment's and I have to focus

1126
00:42:40,000 --> 00:42:46,690
on tradecraft so is everybody managed to

1127
00:42:44,710 --> 00:42:51,000
get an IP address on the network

1128
00:42:46,690 --> 00:42:55,180
yeah one nine two one six eight 77 yeah

1129
00:42:51,000 --> 00:43:08,490
let's just check yeah yeah

1130
00:42:55,180 --> 00:43:08,490
dresses that's weird

1131
00:43:10,770 --> 00:43:17,020
something's blocking your connection

1132
00:43:13,860 --> 00:43:19,000
saying like firewall and fess is blocked

1133
00:43:17,020 --> 00:43:20,440
your internet access is blocked firewall

1134
00:43:19,000 --> 00:43:24,760
antivirus software might have bottler

1135
00:43:20,440 --> 00:43:26,110
connection so I think it's um something

1136
00:43:24,760 --> 00:43:29,310
aggressive okay cool

1137
00:43:26,110 --> 00:43:31,420
so if you want to pull down the

1138
00:43:29,310 --> 00:43:33,759
environment like get yourself a copy of

1139
00:43:31,420 --> 00:43:35,860
sheep halt and then get yourself

1140
00:43:33,760 --> 00:43:37,480
installed whether you weren't running on

1141
00:43:35,860 --> 00:43:40,600
Windows or whatever I've actually got it

1142
00:43:37,480 --> 00:43:42,850
on the Mac side let me just come out of

1143
00:43:40,600 --> 00:43:45,130
this oh yeah that's the other thing as

1144
00:43:42,850 --> 00:43:46,569
well you can see what's really useful

1145
00:43:45,130 --> 00:43:48,940
it's because I'm running vias and I can

1146
00:43:46,570 --> 00:43:52,930
connect to that I can see all the

1147
00:43:48,940 --> 00:43:54,880
addresses stuff so now we can see things

1148
00:43:52,930 --> 00:43:56,379
coming through now so anybody that's

1149
00:43:54,880 --> 00:43:58,660
interested in DevOps and

1150
00:43:56,380 --> 00:43:59,619
environments and stuff this is this is a

1151
00:43:58,660 --> 00:44:04,808
cool way of doing it

1152
00:43:59,619 --> 00:44:09,730
I think okay so let me go into slide

1153
00:44:04,809 --> 00:44:11,980
labs sheeple so I'll go over the folder

1154
00:44:09,730 --> 00:44:13,960
structure actually first in vs code

1155
00:44:11,980 --> 00:44:27,460
let's do it properly from the very

1156
00:44:13,960 --> 00:44:32,730
beginning and if this isn't big enough

1157
00:44:27,460 --> 00:44:32,730
then please feel free to shout and stuff

1158
00:44:32,849 --> 00:44:38,559
I've also got the beginning you you're

1159
00:44:35,680 --> 00:44:40,660
seeing the kind of the yet to push to

1160
00:44:38,559 --> 00:44:42,099
github version so you kind of get an

1161
00:44:40,660 --> 00:44:44,259
idea of some of the other things that

1162
00:44:42,099 --> 00:44:45,369
I've been doing lawrence said to me like

1163
00:44:44,259 --> 00:44:47,470
you can't write at all without the

1164
00:44:45,369 --> 00:44:49,000
option of having a GUI like you can't

1165
00:44:47,470 --> 00:44:50,709
assume that everybody likes to work in

1166
00:44:49,000 --> 00:44:53,200
the CLI plus you're building windows

1167
00:44:50,710 --> 00:44:54,910
like GUI interaction so you need to go

1168
00:44:53,200 --> 00:44:57,700
make a GUI and I was like actually he's

1169
00:44:54,910 --> 00:45:00,430
right so I've been working on a GUI for

1170
00:44:57,700 --> 00:45:03,279
this as well just for just making it

1171
00:45:00,430 --> 00:45:05,769
easier and also building this into a

1172
00:45:03,279 --> 00:45:07,839
bigger pipeline so the lab seed example

1173
00:45:05,769 --> 00:45:09,519
where you create vias and you create all

1174
00:45:07,839 --> 00:45:10,900
these machine sheeple will be a part of

1175
00:45:09,519 --> 00:45:12,970
that so you can say are what I want

1176
00:45:10,900 --> 00:45:15,759
cheap all the do x y&z and that's why

1177
00:45:12,970 --> 00:45:17,980
the the JSON profiles part is really

1178
00:45:15,759 --> 00:45:20,579
important but let me just close all this

1179
00:45:17,980 --> 00:45:23,289
out so that we don't get distracted

1180
00:45:20,579 --> 00:45:25,599
quite a lot of code but hopefully you'll

1181
00:45:23,289 --> 00:45:28,869
see that I've taken the time to try and

1182
00:45:25,599 --> 00:45:30,549
keep it fairly clean so there's some

1183
00:45:28,869 --> 00:45:32,440
utilities and stuff and folder

1184
00:45:30,549 --> 00:45:34,538
structures it all runs from the root

1185
00:45:32,440 --> 00:45:37,569
downwards so sheeple as being the top

1186
00:45:34,539 --> 00:45:38,859
level you can see it imports all these

1187
00:45:37,569 --> 00:45:41,049
bits and pieces and all that really does

1188
00:45:38,859 --> 00:45:43,890
this passage in the Arg pass stuff a

1189
00:45:41,049 --> 00:45:47,440
couple of checks and that's it basically

1190
00:45:43,890 --> 00:45:49,598
everything that happens from a tasks

1191
00:45:47,440 --> 00:45:51,730
perspective is inside this task folder

1192
00:45:49,599 --> 00:45:53,589
and I've started to imply a category

1193
00:45:51,730 --> 00:45:55,359
based system already because I was like

1194
00:45:53,589 --> 00:45:57,099
well I want them to have lots of things

1195
00:45:55,359 --> 00:45:59,319
I need to organize it so I'm using the

1196
00:45:57,099 --> 00:46:02,529
folder structure almost as a as a

1197
00:45:59,319 --> 00:46:04,660
category based solution and then you

1198
00:46:02,529 --> 00:46:07,480
know it's easy to add in different types

1199
00:46:04,660 --> 00:46:09,828
of categories as you'll see later on but

1200
00:46:07,480 --> 00:46:12,859
we have this structure so if I take four

1201
00:46:09,829 --> 00:46:15,890
sample the shell I've been pretty strict

1202
00:46:12,859 --> 00:46:17,390
in terms of how the naming conventions

1203
00:46:15,890 --> 00:46:19,069
of the files come in and that's quite

1204
00:46:17,390 --> 00:46:22,819
important from the task list perspective

1205
00:46:19,069 --> 00:46:25,640
so it is like uppercase for each network

1206
00:46:22,819 --> 00:46:27,829
segment etc but if you look at the

1207
00:46:25,640 --> 00:46:31,700
command shell one if I just get rid of

1208
00:46:27,829 --> 00:46:34,640
that again I've been really pedantic

1209
00:46:31,700 --> 00:46:36,529
about the structure of the files this is

1210
00:46:34,640 --> 00:46:39,288
all template code and I wanted it to be

1211
00:46:36,529 --> 00:46:41,660
really clear so that people could see

1212
00:46:39,289 --> 00:46:43,400
how it is so you get a sheeple object

1213
00:46:41,660 --> 00:46:45,078
you create sheeple objects and then

1214
00:46:43,400 --> 00:46:48,380
these tasks become attributes of that

1215
00:46:45,079 --> 00:46:52,089
sheeple object basically and there's for

1216
00:46:48,380 --> 00:46:55,670
each of these tasks structures there is

1217
00:46:52,089 --> 00:46:57,319
like the base console itself which where

1218
00:46:55,670 --> 00:47:00,049
you define all the bits and pieces about

1219
00:46:57,319 --> 00:47:03,170
how the command works and then there's

1220
00:47:00,049 --> 00:47:05,390
an actual the meat of the task itself in

1221
00:47:03,170 --> 00:47:06,859
how it actually interacts and how it

1222
00:47:05,390 --> 00:47:08,239
builds all that sort of stuff out you

1223
00:47:06,859 --> 00:47:10,190
don't really have to make too many

1224
00:47:08,239 --> 00:47:13,999
changes there and then the biggest bit

1225
00:47:10,190 --> 00:47:15,589
is this is Auto EIT block down here and

1226
00:47:13,999 --> 00:47:18,348
this is where you define all of the

1227
00:47:15,589 --> 00:47:20,449
actions in terms of how it starts

1228
00:47:18,349 --> 00:47:23,299
whatever is you've asked it to how long

1229
00:47:20,449 --> 00:47:26,119
it waits how it indicates things you

1230
00:47:23,299 --> 00:47:29,690
know what it's looking for and how it

1231
00:47:26,119 --> 00:47:33,680
passes that through so I'll show you it

1232
00:47:29,690 --> 00:47:36,750
in the context of the actual program so

1233
00:47:33,680 --> 00:47:36,750
[Music]

1234
00:47:39,069 --> 00:47:45,529
actually I just show you that so there's

1235
00:47:42,109 --> 00:47:47,029
a - help and you can see that the I've

1236
00:47:45,529 --> 00:47:48,380
started building is that big enough for

1237
00:47:47,029 --> 00:47:50,930
people at the back yeah I've tried to go

1238
00:47:48,380 --> 00:47:55,369
for big stylee text so there's a couple

1239
00:47:50,930 --> 00:47:56,538
of things no loop so I am I just assumed

1240
00:47:55,369 --> 00:47:58,160
that everybody would want these things

1241
00:47:56,539 --> 00:47:59,509
to loop over and over and over and then

1242
00:47:58,160 --> 00:48:01,788
somebody went I don't want it to do that

1243
00:47:59,509 --> 00:48:04,459
I want it to run once and then that's it

1244
00:48:01,789 --> 00:48:06,319
so there's now an option to remove the

1245
00:48:04,459 --> 00:48:07,848
looping part of things so once you run

1246
00:48:06,319 --> 00:48:10,339
the binary it will go that through that

1247
00:48:07,849 --> 00:48:13,579
sequence of tasks randomly once and then

1248
00:48:10,339 --> 00:48:16,069
it will just never run again no color

1249
00:48:13,579 --> 00:48:17,509
options and stuff tray icons is quite

1250
00:48:16,069 --> 00:48:19,410
interesting so if you want to use this

1251
00:48:17,509 --> 00:48:21,720
to build something a little bit

1252
00:48:19,410 --> 00:48:23,640
more aggressive you can hide the tray

1253
00:48:21,720 --> 00:48:25,288
icons I've left it in by default but

1254
00:48:23,640 --> 00:48:26,759
because cheaper will pop up as a tray

1255
00:48:25,289 --> 00:48:28,109
thing but you can remove all that and

1256
00:48:26,759 --> 00:48:30,029
then there's some information about

1257
00:48:28,109 --> 00:48:32,130
profiles and as you can see down here

1258
00:48:30,029 --> 00:48:33,980
like a template creation engine that

1259
00:48:32,130 --> 00:48:37,500
creates that stub code for you

1260
00:48:33,980 --> 00:48:40,859
so in interactive mode which is where I

1261
00:48:37,500 --> 00:48:42,869
spend a lot of my time actually the

1262
00:48:40,859 --> 00:48:45,089
first thing that you do is you have to

1263
00:48:42,869 --> 00:48:48,029
create a sheep or if you're trying to

1264
00:48:45,089 --> 00:48:50,279
sign something before you have a task

1265
00:48:48,029 --> 00:48:51,450
then before you have a sheep will to

1266
00:48:50,279 --> 00:48:59,730
assign it to it's just going to bomb out

1267
00:48:51,450 --> 00:49:01,828
so we create sheeple and then how how

1268
00:48:59,730 --> 00:49:03,720
long do you want them to take to do

1269
00:49:01,829 --> 00:49:05,609
stuff and you haven't defined how what

1270
00:49:03,720 --> 00:49:07,410
you want to give them yet just how long

1271
00:49:05,609 --> 00:49:09,420
is it going to take for you to do things

1272
00:49:07,410 --> 00:49:11,069
so for testing and messing around I

1273
00:49:09,420 --> 00:49:13,859
generally start with like a minute and

1274
00:49:11,069 --> 00:49:17,369
then I'll go back through again and do

1275
00:49:13,859 --> 00:49:20,250
it that way typing speed so by default

1276
00:49:17,369 --> 00:49:22,200
40 through testing I found that 40

1277
00:49:20,250 --> 00:49:24,960
milliseconds seems to be quite quite

1278
00:49:22,200 --> 00:49:28,140
fast typing but fairly sort of natural

1279
00:49:24,960 --> 00:49:31,440
for a proficient typist they can type

1280
00:49:28,140 --> 00:49:34,440
perfectly which I'll get to a bit later

1281
00:49:31,440 --> 00:49:35,789
and I've got some ultimate files to show

1282
00:49:34,440 --> 00:49:37,140
you how I want to break that up as well

1283
00:49:35,789 --> 00:49:38,339
because if you've ever tried to clean

1284
00:49:37,140 --> 00:49:40,769
log somebody in the real world I am

1285
00:49:38,339 --> 00:49:42,538
terrible at typing so I would imagine

1286
00:49:40,769 --> 00:49:44,069
anybody that's keylogging me there

1287
00:49:42,539 --> 00:49:46,769
trying to decide for the billions of

1288
00:49:44,069 --> 00:49:49,589
back spaces that are in the actual clean

1289
00:49:46,769 --> 00:49:51,598
output and I was like that should be in

1290
00:49:49,589 --> 00:49:53,339
there right that's real-world we should

1291
00:49:51,599 --> 00:49:56,009
do that we shouldn't have a perfect key

1292
00:49:53,339 --> 00:50:00,089
log we should say to people there's like

1293
00:49:56,009 --> 00:50:01,500
I don't know 20,000 keystrokes fish

1294
00:50:00,089 --> 00:50:04,288
through that for me please you'll find

1295
00:50:01,500 --> 00:50:06,799
some creds in there and go through it so

1296
00:50:04,289 --> 00:50:08,910
we can specify this sort of stuff and

1297
00:50:06,799 --> 00:50:10,559
segwaying and bouncing around i also

1298
00:50:08,910 --> 00:50:12,868
like the idea of having this typing

1299
00:50:10,559 --> 00:50:15,450
speed as profiles so you have like the

1300
00:50:12,869 --> 00:50:18,390
PA that can type nearly perfectly at

1301
00:50:15,450 --> 00:50:20,460
like 120 words a minute and very rarely

1302
00:50:18,390 --> 00:50:23,368
makes mistakes and then you've got like

1303
00:50:20,460 --> 00:50:25,799
my old IT boss who was like a chicken

1304
00:50:23,369 --> 00:50:27,720
pecker that would take like three weeks

1305
00:50:25,799 --> 00:50:29,339
to type a word and that's lots of

1306
00:50:27,720 --> 00:50:31,240
backspacing so I think that's relevant

1307
00:50:29,339 --> 00:50:33,759
as well we have

1308
00:50:31,240 --> 00:50:35,740
we're kind of personalizing the types of

1309
00:50:33,760 --> 00:50:39,030
sheeple that we create that ultimately

1310
00:50:35,740 --> 00:50:43,839
leads into a more real-world experience

1311
00:50:39,030 --> 00:50:45,520
so at that point we are into the realms

1312
00:50:43,840 --> 00:50:49,150
of we're now in the context of that

1313
00:50:45,520 --> 00:50:51,009
sheeple and the CM d solutions really

1314
00:50:49,150 --> 00:50:52,840
good because it dealt with a couple of

1315
00:50:51,010 --> 00:50:55,120
the bits and pieces that i missed before

1316
00:50:52,840 --> 00:50:57,130
like you could bomb out at this point or

1317
00:50:55,120 --> 00:51:01,359
you could end up creating things that

1318
00:50:57,130 --> 00:51:04,330
doesn't don't exist so for example if we

1319
00:51:01,360 --> 00:51:07,390
list that's currently all the tasks that

1320
00:51:04,330 --> 00:51:08,950
are inside that folder structure ok I'll

1321
00:51:07,390 --> 00:51:11,440
show you how we can dynamically import

1322
00:51:08,950 --> 00:51:12,430
things later but those are all the

1323
00:51:11,440 --> 00:51:14,290
things that they can do at the moment

1324
00:51:12,430 --> 00:51:16,419
the key parts one I haven't yet pushed

1325
00:51:14,290 --> 00:51:19,870
it so some of this is form art for my

1326
00:51:16,420 --> 00:51:21,730
local but if enthusiasm appears after

1327
00:51:19,870 --> 00:51:23,940
this workshop then I'll definitely be

1328
00:51:21,730 --> 00:51:25,630
kind of pushing more bits and pieces so

1329
00:51:23,940 --> 00:51:30,310
that's what they can do at the moment

1330
00:51:25,630 --> 00:51:32,260
but for example you could before you

1331
00:51:30,310 --> 00:51:34,930
could accidentally miss type something

1332
00:51:32,260 --> 00:51:36,940
and it would go OK and at that point it

1333
00:51:34,930 --> 00:51:38,500
now thinks that that's a valid task even

1334
00:51:36,940 --> 00:51:40,990
though it doesn't exist and the whole

1335
00:51:38,500 --> 00:51:44,080
program would die and people would send

1336
00:51:40,990 --> 00:51:46,060
me abuse on slack go in your rubbish so

1337
00:51:44,080 --> 00:51:47,170
C and D handles all of that because even

1338
00:51:46,060 --> 00:51:50,380
though it's there it doesn't bother I

1339
00:51:47,170 --> 00:51:52,780
just can't do anything with it so we

1340
00:51:50,380 --> 00:51:54,670
generally start with command shell

1341
00:51:52,780 --> 00:51:58,450
interactions because I'm generally

1342
00:51:54,670 --> 00:52:00,370
trying to emulate admin users ok so as

1343
00:51:58,450 --> 00:52:03,149
you can see now the context has changed

1344
00:52:00,370 --> 00:52:08,440
so we're now inside a command shell

1345
00:52:03,150 --> 00:52:10,990
interaction and if you help you can see

1346
00:52:08,440 --> 00:52:13,090
this is all the stuff that's specific to

1347
00:52:10,990 --> 00:52:17,459
the command file itself to this

1348
00:52:13,090 --> 00:52:19,870
particular task we'll get to that later

1349
00:52:17,460 --> 00:52:21,820
you can define whether it's a sub task

1350
00:52:19,870 --> 00:52:24,640
or not and stuff but all of this help

1351
00:52:21,820 --> 00:52:28,210
just gives it that kind of feel of CLR

1352
00:52:24,640 --> 00:52:31,270
type interaction but if I try and say

1353
00:52:28,210 --> 00:52:34,330
okay I want you to type ipconfig it says

1354
00:52:31,270 --> 00:52:36,820
to you you need to start a new

1355
00:52:34,330 --> 00:52:38,680
invocation of that because what I found

1356
00:52:36,820 --> 00:52:41,470
was that I would go into a command shell

1357
00:52:38,680 --> 00:52:43,690
task I'd create one I'd complete it and

1358
00:52:41,470 --> 00:52:44,399
then I'd want to create another one but

1359
00:52:43,690 --> 00:52:47,940
I'd have to go

1360
00:52:44,400 --> 00:52:49,980
back out back in again again back to

1361
00:52:47,940 --> 00:52:51,690
that guy smelling his own hand I was

1362
00:52:49,980 --> 00:52:53,760
like this is terrible

1363
00:52:51,690 --> 00:52:56,220
you need architecture so you make a new

1364
00:52:53,760 --> 00:52:59,460
invocation of that and now at that point

1365
00:52:56,220 --> 00:53:01,169
it tells us what the the IDS of that

1366
00:52:59,460 --> 00:53:03,120
command Chell that we've created right

1367
00:53:01,170 --> 00:53:05,220
and you can see that in the code arrays

1368
00:53:03,120 --> 00:53:07,650
these are the actual names of what

1369
00:53:05,220 --> 00:53:10,230
basically ends up as or - it functions

1370
00:53:07,650 --> 00:53:11,550
that's what it gets called and then at

1371
00:53:10,230 --> 00:53:15,300
that point we can basically type

1372
00:53:11,550 --> 00:53:17,790
anything that we can run inside a

1373
00:53:15,300 --> 00:53:19,850
terminal because it will start CMD for

1374
00:53:17,790 --> 00:53:23,730
you as part of the tasks module itself

1375
00:53:19,850 --> 00:53:26,700
and then it will you know do enumeration

1376
00:53:23,730 --> 00:53:29,430
and you can sort of keep a track of

1377
00:53:26,700 --> 00:53:32,160
where you are as to what you've assigned

1378
00:53:29,430 --> 00:53:33,690
to this user you can discard stuff if

1379
00:53:32,160 --> 00:53:36,029
you've decided that that's not what you

1380
00:53:33,690 --> 00:53:38,610
want to do and then at that point you

1381
00:53:36,030 --> 00:53:40,080
can bomb out it again so at this point I

1382
00:53:38,610 --> 00:53:41,730
kind of go we'll it's up to you like

1383
00:53:40,080 --> 00:53:45,569
what do you want to do what do you want

1384
00:53:41,730 --> 00:53:47,250
to execute how do you want to do it you

1385
00:53:45,570 --> 00:53:50,100
can do a lot of things anything that you

1386
00:53:47,250 --> 00:53:51,810
can type can be emulated so it's really

1387
00:53:50,100 --> 00:53:54,600
about well what do you want to type like

1388
00:53:51,810 --> 00:53:56,370
what is your special foo that only you

1389
00:53:54,600 --> 00:53:57,529
know how to do or even your own way of

1390
00:53:56,370 --> 00:53:59,880
doing things

1391
00:53:57,530 --> 00:54:01,050
how does that look what does that look

1392
00:53:59,880 --> 00:54:05,340
like for you and then you can just

1393
00:54:01,050 --> 00:54:07,080
encapsulate that so at that point you

1394
00:54:05,340 --> 00:54:08,670
can go okay well I'm going to complete

1395
00:54:07,080 --> 00:54:11,460
that or discard it but if I complete

1396
00:54:08,670 --> 00:54:13,050
that that completes that task and now I

1397
00:54:11,460 --> 00:54:16,320
have the opportunity of going back to

1398
00:54:13,050 --> 00:54:20,100
the task list or I can create a new one

1399
00:54:16,320 --> 00:54:22,170
and do the same thing again and of

1400
00:54:20,100 --> 00:54:25,230
course all of these like you're calling

1401
00:54:22,170 --> 00:54:27,780
Who am I Who am I is going to be a child

1402
00:54:25,230 --> 00:54:29,310
of CMD in the process true and it's cool

1403
00:54:27,780 --> 00:54:32,730
so anything that we're triggering here

1404
00:54:29,310 --> 00:54:34,500
honors that process tree and then at

1405
00:54:32,730 --> 00:54:36,030
that point we can just complete that and

1406
00:54:34,500 --> 00:54:39,300
then go back again and then it's just

1407
00:54:36,030 --> 00:54:41,580
rinse and repeat right just looking back

1408
00:54:39,300 --> 00:54:43,290
at what the tasks lists are and what

1409
00:54:41,580 --> 00:54:46,470
types of things that I want to introduce

1410
00:54:43,290 --> 00:54:49,350
so the CMD ones really good for even

1411
00:54:46,470 --> 00:54:51,240
using runners I'm actually going to

1412
00:54:49,350 --> 00:54:54,150
create that as its own module as you'll

1413
00:54:51,240 --> 00:54:56,609
see later but you know that's pretty

1414
00:54:54,150 --> 00:54:57,600
pretty cool stuff process kill I've

1415
00:54:56,610 --> 00:54:59,430
built some

1416
00:54:57,600 --> 00:55:00,810
capture the flag type things that you've

1417
00:54:59,430 --> 00:55:02,960
got as snippets we'll go through all

1418
00:55:00,810 --> 00:55:05,310
that as we get into it a little bit more

1419
00:55:02,960 --> 00:55:07,110
but some at that point I now have

1420
00:55:05,310 --> 00:55:10,820
options to keep on like smashing up

1421
00:55:07,110 --> 00:55:14,160
through the task lists or I can finish

1422
00:55:10,820 --> 00:55:16,620
and at that point it takes the total

1423
00:55:14,160 --> 00:55:19,080
number of tasks that we've assigned it

1424
00:55:16,620 --> 00:55:20,880
takes the total amount of time and it

1425
00:55:19,080 --> 00:55:22,920
does some like chopping up in the

1426
00:55:20,880 --> 00:55:24,570
background and it creates some sleep

1427
00:55:22,920 --> 00:55:26,850
time arrays and then it adds those

1428
00:55:24,570 --> 00:55:30,210
arrays to that file and then it writes

1429
00:55:26,850 --> 00:55:31,860
this 44 comm workshop that iu3 file now

1430
00:55:30,210 --> 00:55:35,370
at this point you can't just run that as

1431
00:55:31,860 --> 00:55:37,440
a binary that is the auto it outputs you

1432
00:55:35,370 --> 00:55:39,210
have to compile that with all to it but

1433
00:55:37,440 --> 00:55:42,030
I've got some pipeline stuff for that as

1434
00:55:39,210 --> 00:55:43,740
well you can run it on wine anyway so

1435
00:55:42,030 --> 00:55:46,140
you could essentially just bolt on a

1436
00:55:43,740 --> 00:55:48,990
process where the profile gets hoovered

1437
00:55:46,140 --> 00:55:50,670
up it creates a u3 files then something

1438
00:55:48,990 --> 00:55:52,649
loop through that a u3 files directly

1439
00:55:50,670 --> 00:55:54,030
compiles them all to binaries and then

1440
00:55:52,650 --> 00:55:56,160
distributes them through the network is

1441
00:55:54,030 --> 00:55:57,720
group policy and if you build in entropy

1442
00:55:56,160 --> 00:56:00,240
to there you might not even know which

1443
00:55:57,720 --> 00:56:01,709
machines are running the types of

1444
00:56:00,240 --> 00:56:03,959
sheeple that you've created so now you

1445
00:56:01,710 --> 00:56:05,490
have to go and try and find those users

1446
00:56:03,960 --> 00:56:08,130
that are doing the things that you've

1447
00:56:05,490 --> 00:56:10,290
added in fair enough you've added that

1448
00:56:08,130 --> 00:56:14,040
moment of opportunity that I add I said

1449
00:56:10,290 --> 00:56:15,720
before but you don't know when they're

1450
00:56:14,040 --> 00:56:17,130
going to do it and on which machine

1451
00:56:15,720 --> 00:56:19,560
they're going to do it so that's

1452
00:56:17,130 --> 00:56:22,980
probably about as entropic as you can

1453
00:56:19,560 --> 00:56:25,590
get really that's even a word so if you

1454
00:56:22,980 --> 00:56:36,330
look at this output file now if we open

1455
00:56:25,590 --> 00:56:38,100
that out of tasks okay this is what it's

1456
00:56:36,330 --> 00:56:40,980
just created for you and this is why you

1457
00:56:38,100 --> 00:56:43,140
didn't have to go and learn all to it

1458
00:56:40,980 --> 00:56:46,530
essentially so it's a little bit like

1459
00:56:43,140 --> 00:56:48,859
Python it brings in his own modules now

1460
00:56:46,530 --> 00:56:51,870
it has a set of standard libraries I

1461
00:56:48,860 --> 00:56:53,130
just if you can keep if I start getting

1462
00:56:51,870 --> 00:56:54,870
crazy on time what we're a couple of

1463
00:56:53,130 --> 00:56:57,540
hours aren't we for this so it's half 10

1464
00:56:54,870 --> 00:56:59,130
we're all right for time for a bit so it

1465
00:56:57,540 --> 00:57:01,800
has its own standard libraries but you

1466
00:56:59,130 --> 00:57:03,270
have this concept of UDF's where people

1467
00:57:01,800 --> 00:57:05,340
can write their own libraries as well

1468
00:57:03,270 --> 00:57:07,110
and you can include those and there's

1469
00:57:05,340 --> 00:57:09,780
some amazing UDF's there's a guy called

1470
00:57:07,110 --> 00:57:10,619
water on the the auto at forums and he's

1471
00:57:09,780 --> 00:57:12,539
written things too in

1472
00:57:10,619 --> 00:57:15,150
faced with Active Directory he's written

1473
00:57:12,539 --> 00:57:17,279
a whole client for Outlook that can do

1474
00:57:15,150 --> 00:57:19,680
everything that you can do in Outlook so

1475
00:57:17,279 --> 00:57:21,509
I haven't included those yet because

1476
00:57:19,680 --> 00:57:24,118
they're sort of outside of the standard

1477
00:57:21,509 --> 00:57:25,950
or to it library but it certainly means

1478
00:57:24,119 --> 00:57:27,299
that it's extensible and we can sort of

1479
00:57:25,950 --> 00:57:28,499
look at this sort of stuff but you can

1480
00:57:27,299 --> 00:57:31,049
see we're doing a couple of things we're

1481
00:57:28,499 --> 00:57:34,140
bringing in the arrays and the Winn API

1482
00:57:31,049 --> 00:57:37,529
so it can interface natively with the

1483
00:57:34,140 --> 00:57:40,890
wind' win32 api so already pretty

1484
00:57:37,529 --> 00:57:42,630
powerful stuff right and at the top as

1485
00:57:40,890 --> 00:57:44,788
you can see we've got the it creates two

1486
00:57:42,630 --> 00:57:46,529
arrays and they have to be bound array

1487
00:57:44,789 --> 00:57:48,779
so you have to sorry they have to be did

1488
00:57:46,529 --> 00:57:50,700
them defined length if that didn't have

1489
00:57:48,779 --> 00:57:52,470
a two in it that wouldn't work so you

1490
00:57:50,700 --> 00:57:54,868
have to be explicit which is kind of why

1491
00:57:52,470 --> 00:57:57,328
I handled all of this with my Python

1492
00:57:54,869 --> 00:57:59,309
tooling and what happens is there's a

1493
00:57:57,329 --> 00:58:01,769
while loop that it goes through it

1494
00:57:59,309 --> 00:58:04,140
creates the copy of the array I'm still

1495
00:58:01,769 --> 00:58:06,359
not entirely sure why I did that but it

1496
00:58:04,140 --> 00:58:08,970
takes it shuffles it on every loop so

1497
00:58:06,359 --> 00:58:11,450
this wire one now there's no concept of

1498
00:58:08,970 --> 00:58:13,740
object-oriented programming or to it so

1499
00:58:11,450 --> 00:58:15,839
you can't do any of that sort of stuff

1500
00:58:13,740 --> 00:58:18,629
and you can only you can also only have

1501
00:58:15,839 --> 00:58:20,430
one explicit while loop so you couldn't

1502
00:58:18,630 --> 00:58:21,650
nest something else inside there at

1503
00:58:20,430 --> 00:58:25,618
least that's what I found

1504
00:58:21,650 --> 00:58:26,970
so this is kind of like your main loop

1505
00:58:25,619 --> 00:58:29,730
and then everything happens in there

1506
00:58:26,970 --> 00:58:31,879
what you can do is define functions but

1507
00:58:29,730 --> 00:58:35,670
then get called as part of this loop

1508
00:58:31,880 --> 00:58:37,230
okay and I've just left some CLR rights

1509
00:58:35,670 --> 00:58:40,650
there just so that we can see it running

1510
00:58:37,230 --> 00:58:43,259
and then this is the declaration of that

1511
00:58:40,650 --> 00:58:45,499
function so it comes in it defines how

1512
00:58:43,259 --> 00:58:47,789
we start it so it's literally sending

1513
00:58:45,499 --> 00:58:50,160
Windows key and our because you can

1514
00:58:47,789 --> 00:58:52,499
emulate that and then it types out CMD

1515
00:58:50,160 --> 00:58:54,180
and it sends Enter it creates at the

1516
00:58:52,499 --> 00:58:56,549
class level it makes sure it gets a

1517
00:58:54,180 --> 00:59:00,359
handle to the window and it hooks that

1518
00:58:56,549 --> 00:59:02,849
window so that that seems like a trivial

1519
00:59:00,359 --> 00:59:05,880
thing but that solves a lot of the

1520
00:59:02,849 --> 00:59:08,759
issues with something taking focus and

1521
00:59:05,880 --> 00:59:11,069
all of a sudden you losing where your

1522
00:59:08,759 --> 00:59:13,049
input is going because it will create

1523
00:59:11,069 --> 00:59:15,869
that CMD file and it will constantly

1524
00:59:13,049 --> 00:59:17,730
check to see if it has a focal handle

1525
00:59:15,869 --> 00:59:21,029
and if it doesn't it will take that

1526
00:59:17,730 --> 00:59:22,890
focus back so you can minimize stuff and

1527
00:59:21,029 --> 00:59:25,380
if you've sent tol it to sender come

1528
00:59:22,890 --> 00:59:27,509
and if it's minimized it will just

1529
00:59:25,380 --> 00:59:28,980
unwise it and continue with the command

1530
00:59:27,510 --> 00:59:31,140
so I thought that was really useful in

1531
00:59:28,980 --> 00:59:33,869
solving that problem and this is some of

1532
00:59:31,140 --> 00:59:35,609
the sub tasks stuff that I've done to

1533
00:59:33,869 --> 00:59:38,670
check whether you're inside a remote

1534
00:59:35,609 --> 00:59:40,470
desktop session or not and then these

1535
00:59:38,670 --> 00:59:43,140
are all of the commands that I told it

1536
00:59:40,470 --> 00:59:45,149
to type out I've built in some arbitrary

1537
00:59:43,140 --> 00:59:47,759
sleep times into this so there's a

1538
00:59:45,150 --> 00:59:51,630
15-second delay again but this is all

1539
00:59:47,760 --> 00:59:53,039
kind of hard-coded in terms of it does

1540
00:59:51,630 --> 00:59:54,960
it once and then it never changes so

1541
00:59:53,039 --> 00:59:56,700
this you know we can we can improve on

1542
00:59:54,960 --> 00:59:58,470
that for sure and then there's the

1543
00:59:56,700 --> 00:59:59,700
second one and all it's going to do is

1544
00:59:58,470 --> 01:00:02,038
it's going to loop through those two

1545
00:59:59,700 --> 01:00:04,230
task lists and it's going to select so

1546
01:00:02,039 --> 01:00:08,250
because these are fairly long wait times

1547
01:00:04,230 --> 01:00:09,690
I'm going to just manually make that 10

1548
01:00:08,250 --> 01:00:11,970
seconds for that one so that we're not

1549
01:00:09,690 --> 01:00:15,210
waiting too long and five seconds for

1550
01:00:11,970 --> 01:00:21,359
that one okay so we've got our a u3 file

1551
01:00:15,210 --> 01:00:22,890
we'll just go back to my windows box and

1552
01:00:21,359 --> 01:00:25,078
I'll just start this up on my local and

1553
01:00:22,890 --> 01:00:45,509
then we can we can get things going in

1554
01:00:25,079 --> 01:00:49,400
the lab ok so if I open that file that

1555
01:00:45,509 --> 01:00:51,329
I've just created for Khan workshop

1556
01:00:49,400 --> 01:00:53,339
there's the file there I'll leave this

1557
01:00:51,329 --> 01:00:56,130
window open so you can see there's the

1558
01:00:53,339 --> 01:01:00,119
edits that I've made so this is the site

1559
01:00:56,130 --> 01:01:01,769
site T this is the like the editor that

1560
01:01:00,119 --> 01:01:03,269
you get when you install or to it and

1561
01:01:01,769 --> 01:01:05,609
it's really useful to have this because

1562
01:01:03,269 --> 01:01:07,709
it's got code hints and it allows you to

1563
01:01:05,609 --> 01:01:09,839
compile on the fly I've got the the

1564
01:01:07,710 --> 01:01:12,240
extended version which supports like

1565
01:01:09,839 --> 01:01:14,400
millions of languages but it's pretty

1566
01:01:12,240 --> 01:01:15,868
good and it gives you other options like

1567
01:01:14,400 --> 01:01:17,640
how it compiles you can specify

1568
01:01:15,869 --> 01:01:19,859
different Packers and stuff so there's

1569
01:01:17,640 --> 01:01:23,210
lots of options there but for now before

1570
01:01:19,859 --> 01:01:25,529
I compile it I'm just going to run it so

1571
01:01:23,210 --> 01:01:26,970
it comes in you can see there's those

1572
01:01:25,529 --> 01:01:28,200
console messages that we've said it's

1573
01:01:26,970 --> 01:01:30,230
going to go around the loop for 6

1574
01:01:28,200 --> 01:01:34,410
seconds

1575
01:01:30,230 --> 01:01:36,030
and then invoked CMD and it's running

1576
01:01:34,410 --> 01:01:38,399
who are my slash groups and that's all

1577
01:01:36,030 --> 01:01:42,030
being typed and then it's gonna exit out

1578
01:01:38,400 --> 01:01:43,559
of that and it's gonna wait again yeah

1579
01:01:42,030 --> 01:01:45,420
and then it's gonna go through and it's

1580
01:01:43,559 --> 01:01:47,730
gonna sleep and then it's gonna wait for

1581
01:01:45,420 --> 01:01:50,119
the next task which is just the other

1582
01:01:47,730 --> 01:01:52,799
CMD file that we did so now it's running

1583
01:01:50,119 --> 01:01:55,530
ipconfig I can't member what else I

1584
01:01:52,799 --> 01:01:56,730
wrote actually net user I think and you

1585
01:01:55,530 --> 01:01:59,430
can see like there's that that's that

1586
01:01:56,730 --> 01:02:01,500
15-second delay it's like come on come

1587
01:01:59,430 --> 01:02:03,899
on come on I spend ages waiting for them

1588
01:02:01,500 --> 01:02:06,270
because I've realized that I've kind of

1589
01:02:03,900 --> 01:02:09,119
made that a part of the tool but running

1590
01:02:06,270 --> 01:02:11,579
that user commands again from from a

1591
01:02:09,119 --> 01:02:12,809
review perspective you can see all this

1592
01:02:11,579 --> 01:02:15,180
sort of stuff right that user has just

1593
01:02:12,809 --> 01:02:16,349
run that command map on this machine has

1594
01:02:15,180 --> 01:02:19,078
run that and it will just keep going

1595
01:02:16,349 --> 01:02:29,539
forever so whilst that's running if we

1596
01:02:19,079 --> 01:02:40,200
open up proc mom I know not problem

1597
01:02:29,539 --> 01:02:42,900
stupid process Explorer even fact I'll

1598
01:02:40,200 --> 01:02:44,640
just stop that for a second because

1599
01:02:42,900 --> 01:02:52,069
otherwise you end up typing it in places

1600
01:02:44,640 --> 01:02:59,700
you don't want it to be see area left so

1601
01:02:52,069 --> 01:03:00,020
if we move this over actually what I'll

1602
01:02:59,700 --> 01:03:02,890
do

1603
01:03:00,020 --> 01:03:09,009
I'll compile it for you right so tools

1604
01:03:02,890 --> 01:03:09,009
compile where we're gonna put it I'll

1605
01:03:10,420 --> 01:03:17,840
compile it there

1606
01:03:12,320 --> 01:03:19,460
it's an exe so aut does all that for us

1607
01:03:17,840 --> 01:03:23,240
and then what we end up with in this

1608
01:03:19,460 --> 01:03:25,370
folder is it says hopefully 44 comm

1609
01:03:23,240 --> 01:03:28,310
workshop application so this is about a

1610
01:03:25,370 --> 01:03:30,230
Meg or because it's got all of the stuff

1611
01:03:28,310 --> 01:03:32,029
inside it you can do loads that you can

1612
01:03:30,230 --> 01:03:34,490
specify Packers and you can reduce the

1613
01:03:32,030 --> 01:03:36,350
file size and it can clean up code and

1614
01:03:34,490 --> 01:03:38,359
stuff but essentially it's all intents

1615
01:03:36,350 --> 01:03:45,740
and purposes if I copy that and chuck it

1616
01:03:38,360 --> 01:03:48,560
on my desktop that's it so when I run

1617
01:03:45,740 --> 01:03:50,120
that although you don't see any console

1618
01:03:48,560 --> 01:03:51,380
out but I don't think it's very small

1619
01:03:50,120 --> 01:03:56,180
here but in the bottom right hand corner

1620
01:03:51,380 --> 01:03:59,530
there's the tray icon kicking off and

1621
01:03:56,180 --> 01:04:01,700
there's all that and if I minimize that

1622
01:03:59,530 --> 01:04:04,130
if we look at Explorer

1623
01:04:01,700 --> 01:04:05,330
there's the 44 comm workshop and I'll

1624
01:04:04,130 --> 01:04:06,800
just leave that open so that we can

1625
01:04:05,330 --> 01:04:08,870
watch the processor involved you see

1626
01:04:06,800 --> 01:04:11,570
that CMD file is minimized at the moment

1627
01:04:08,870 --> 01:04:13,759
right so it's lost focus for that but it

1628
01:04:11,570 --> 01:04:15,080
should see it snaps back it's like I've

1629
01:04:13,760 --> 01:04:16,640
got to send them to the command to it so

1630
01:04:15,080 --> 01:04:18,680
I need I haven't got that window handle

1631
01:04:16,640 --> 01:04:20,089
at the moment because process Explorer

1632
01:04:18,680 --> 01:04:22,069
has got that so I'm gonna steal that

1633
01:04:20,090 --> 01:04:23,840
back again and I'm gonna continue with

1634
01:04:22,070 --> 01:04:25,550
the commands so that is really really

1635
01:04:23,840 --> 01:04:28,010
useful when you're trying to build BOTS

1636
01:04:25,550 --> 01:04:29,690
because you know that it's gonna do what

1637
01:04:28,010 --> 01:04:34,280
it what it's supposed to do and it'll

1638
01:04:29,690 --> 01:04:36,710
keep on going so if we look here I don't

1639
01:04:34,280 --> 01:04:39,830
think I did nets that actually let's

1640
01:04:36,710 --> 01:04:41,210
move it over and if you start messing

1641
01:04:39,830 --> 01:04:43,250
with stuff and you can kill it like I

1642
01:04:41,210 --> 01:04:44,720
just did then alright that the idea of

1643
01:04:43,250 --> 01:04:45,950
this is that you create it and then you

1644
01:04:44,720 --> 01:04:47,779
just leave them to run because if you

1645
01:04:45,950 --> 01:04:50,270
try and sort of interact with it whilst

1646
01:04:47,780 --> 01:04:52,220
it's going I don't know whether the

1647
01:04:50,270 --> 01:04:53,450
process that I've chosen at the moment

1648
01:04:52,220 --> 01:04:56,390
is going to show you that tree but you

1649
01:04:53,450 --> 01:04:58,399
can see that CMD is not a child of 44

1650
01:04:56,390 --> 01:05:00,830
Khan it's a child of it Explorer so on

1651
01:04:58,400 --> 01:05:04,340
that point we've got that that that

1652
01:05:00,830 --> 01:05:08,470
process tree going yeah

1653
01:05:04,340 --> 01:05:11,360
so because it's running as as the Hat

1654
01:05:08,470 --> 01:05:13,040
you have to hard kill it so that's

1655
01:05:11,360 --> 01:05:13,740
something to be aware of because it's

1656
01:05:13,040 --> 01:05:17,250
now

1657
01:05:13,740 --> 01:05:19,229
Winery on a loop that is no longer in a

1658
01:05:17,250 --> 01:05:21,630
scripting environment it's compiled and

1659
01:05:19,230 --> 01:05:24,000
it will and it's pretty bulletproof so

1660
01:05:21,630 --> 01:05:26,520
it will just keep on running until you

1661
01:05:24,000 --> 01:05:29,280
hard kill it which is exactly what you

1662
01:05:26,520 --> 01:05:30,740
want particularly over long periods of

1663
01:05:29,280 --> 01:05:35,070
time

1664
01:05:30,740 --> 01:05:38,459
so I think where are we in terms of the

1665
01:05:35,070 --> 01:05:40,619
presentation and timing I think what we

1666
01:05:38,460 --> 01:05:43,020
should do now then is let's start

1667
01:05:40,619 --> 01:05:46,050
creating some stuff right let's see

1668
01:05:43,020 --> 01:05:47,700
let's have like half an hour or so I can

1669
01:05:46,050 --> 01:05:49,320
help you get into the environment

1670
01:05:47,700 --> 01:05:52,980
there's different windows machines there

1671
01:05:49,320 --> 01:05:55,320
create some things malicious or not and

1672
01:05:52,980 --> 01:05:57,030
see how you want to go look at the

1673
01:05:55,320 --> 01:06:00,570
PowerShell stuff and then I've got some

1674
01:05:57,030 --> 01:06:02,430
examples of things as well and yeah

1675
01:06:00,570 --> 01:06:17,520
we'll just sort of build them and see

1676
01:06:02,430 --> 01:06:19,799
how we can go with that a command shell

1677
01:06:17,520 --> 01:06:21,869
one as well and then a PowerShell

1678
01:06:19,800 --> 01:06:23,310
invocation to kind of get into showing

1679
01:06:21,869 --> 01:06:25,020
you the types of things that you can do

1680
01:06:23,310 --> 01:06:27,420
with it so if I step through the file

1681
01:06:25,020 --> 01:06:29,640
first of all before actually run it for

1682
01:06:27,420 --> 01:06:31,580
you you can see that this is essentially

1683
01:06:29,640 --> 01:06:34,020
you know open it's going to spawn word

1684
01:06:31,580 --> 01:06:36,090
and then it's basically going to start

1685
01:06:34,020 --> 01:06:38,100
typing out all of this sort of stuff and

1686
01:06:36,090 --> 01:06:39,480
you'll see that I'm kind of snout

1687
01:06:38,100 --> 01:06:41,490
starting to get into the realms of

1688
01:06:39,480 --> 01:06:42,980
formatting so because we can sync

1689
01:06:41,490 --> 01:06:45,660
keystrokes we can do things like

1690
01:06:42,980 --> 01:06:47,700
selecting all of the text and then

1691
01:06:45,660 --> 01:06:49,589
making it H ones and we can start

1692
01:06:47,700 --> 01:06:51,390
getting into formatting and kind of

1693
01:06:49,590 --> 01:06:53,609
making it feel written more real-world

1694
01:06:51,390 --> 01:06:55,830
so you'll see all that and that's

1695
01:06:53,609 --> 01:06:57,990
handled through you can see these send

1696
01:06:55,830 --> 01:07:00,270
Kara exclamation these are all to it

1697
01:06:57,990 --> 01:07:02,609
language declarations that have a

1698
01:07:00,270 --> 01:07:05,430
wild-card key that are assigned to

1699
01:07:02,609 --> 01:07:07,109
certain things like alt or ctrl or

1700
01:07:05,430 --> 01:07:13,319
something like that so you can get quite

1701
01:07:07,109 --> 01:07:15,540
clever with that stuff scroll down so

1702
01:07:13,320 --> 01:07:17,220
that's the word one and then we move on

1703
01:07:15,540 --> 01:07:18,330
to a power command shell one which is

1704
01:07:17,220 --> 01:07:19,859
fairly simple I've already shown you

1705
01:07:18,330 --> 01:07:21,420
that sort of stuff before it's just IP

1706
01:07:19,859 --> 01:07:23,069
confit and net

1707
01:07:21,420 --> 01:07:25,109
that's and what not to show the process

1708
01:07:23,069 --> 01:07:26,880
tree and then we get into stuff which is

1709
01:07:25,109 --> 01:07:29,160
a little bit more interesting in terms

1710
01:07:26,880 --> 01:07:32,040
of attacking so we've now got this

1711
01:07:29,160 --> 01:07:33,779
PowerShell invocation and what it's

1712
01:07:32,040 --> 01:07:35,220
going to try and do is it's going to

1713
01:07:33,780 --> 01:07:37,319
enumerate all the running services

1714
01:07:35,220 --> 01:07:42,959
through WMI and then it's going to try

1715
01:07:37,319 --> 01:07:45,839
and start a bit transfer from 44 from

1716
01:07:42,960 --> 01:07:47,069
this here to the desktop basically it's

1717
01:07:45,839 --> 01:07:49,410
going to try and download those files

1718
01:07:47,069 --> 01:07:51,450
using PowerShell and then it's going to

1719
01:07:49,410 --> 01:07:53,359
attempt to do those so I don't know how

1720
01:07:51,450 --> 01:07:59,399
this is gonna work because this malware

1721
01:07:53,359 --> 01:08:02,430
exe is actually a sheeple the hurt that

1722
01:07:59,400 --> 01:08:04,410
I've created so things could go really

1723
01:08:02,430 --> 01:08:06,720
wrong here but that's the compiled cheap

1724
01:08:04,410 --> 01:08:09,540
all that I showed you before so

1725
01:08:06,720 --> 01:08:10,828
essentially this is now self-replicating

1726
01:08:09,540 --> 01:08:14,369
seemed malware dough it exceeds

1727
01:08:10,829 --> 01:08:16,560
basically the 44 Connect 44 workshop to

1728
01:08:14,369 --> 01:08:18,239
EXCI rename to malware so we'll see how

1729
01:08:16,560 --> 01:08:21,890
that goes and we should see the hit come

1730
01:08:18,238 --> 01:08:24,178
in here on 8081

1731
01:08:21,890 --> 01:08:28,549
let's just check that that can actually

1732
01:08:24,179 --> 01:08:31,170
route to that before it all dies from -

1733
01:08:28,549 --> 01:08:33,238
yeah they can at least see it so let's

1734
01:08:31,170 --> 01:08:34,710
see what happens again I'm not going to

1735
01:08:33,238 --> 01:08:37,139
bother compiling it I'll just let it run

1736
01:08:34,710 --> 01:08:38,640
so that you can see it in situ we will

1737
01:08:37,140 --> 01:08:40,799
have prop Mon running in the background

1738
01:08:38,640 --> 01:08:46,609
as well just so that you can see how

1739
01:08:40,799 --> 01:08:50,100
things formed I think we're good to go

1740
01:08:46,609 --> 01:08:53,609
our hardwired the times in to be fairly

1741
01:08:50,100 --> 01:08:56,850
sure nine seconds and stuff for their

1742
01:08:53,609 --> 01:08:58,259
sake of demos really so I don't actually

1743
01:08:56,850 --> 01:09:00,150
know what the first one's going to be I

1744
01:08:58,259 --> 01:09:03,719
chosen PowerShell first of all so this

1745
01:09:00,149 --> 01:09:06,750
is v5 because it's running on my Windows

1746
01:09:03,719 --> 01:09:09,089
10 box so in terms of malware and doing

1747
01:09:06,750 --> 01:09:11,040
download cradles and stuff then you can

1748
01:09:09,089 --> 01:09:12,479
trigger and see if you try and do a

1749
01:09:11,040 --> 01:09:13,920
download crater you'll see those

1750
01:09:12,479 --> 01:09:16,669
warnings and if you've got script block

1751
01:09:13,920 --> 01:09:20,370
logging enabled you're going to see that

1752
01:09:16,670 --> 01:09:21,839
in place already so you can see it's

1753
01:09:20,370 --> 01:09:24,509
just done a bitch transfer to the

1754
01:09:21,839 --> 01:09:27,089
desktop of malware exe and it's going to

1755
01:09:24,509 --> 01:09:28,930
do a bits transfer of the 44 connect

1756
01:09:27,089 --> 01:09:32,859
than that as well it should get the con

1757
01:09:28,930 --> 01:09:34,930
of that hopefully okay so that's what

1758
01:09:32,859 --> 01:09:36,279
that is the text file so this is just

1759
01:09:34,930 --> 01:09:38,620
PowerShell at this point anything that

1760
01:09:36,279 --> 01:09:40,540
you can type in PowerShell is going to

1761
01:09:38,620 --> 01:09:46,300
be the case it's now going to attempt to

1762
01:09:40,540 --> 01:09:48,100
run the other one so let's see that ends

1763
01:09:46,300 --> 01:09:53,500
but I'm not sure whether it's triggered

1764
01:09:48,100 --> 01:09:54,850
the other or to it one it may or may not

1765
01:09:53,500 --> 01:09:56,710
then but that's just a gimmicky thing

1766
01:09:54,850 --> 01:09:58,630
what I did before was I left that as

1767
01:09:56,710 --> 01:10:00,700
cobalt strike it was a default cobalt

1768
01:09:58,630 --> 01:10:03,340
strike binary so that it lands on the

1769
01:10:00,700 --> 01:10:05,320
desktop as a bits transfer and then

1770
01:10:03,340 --> 01:10:07,540
defender goes whoa you don't want this

1771
01:10:05,320 --> 01:10:09,250
on your desktop starts a whole process

1772
01:10:07,540 --> 01:10:11,290
of remediation and cleanup which then

1773
01:10:09,250 --> 01:10:12,940
leaves a whole event trail so even if

1774
01:10:11,290 --> 01:10:15,610
you just want to see whether you get

1775
01:10:12,940 --> 01:10:18,460
your av events the bubbling back up the

1776
01:10:15,610 --> 01:10:19,929
top so the sort of the sim you can do it

1777
01:10:18,460 --> 01:10:21,340
for that you deploy sheep or get it to

1778
01:10:19,930 --> 01:10:22,990
sit there for a while and then get it to

1779
01:10:21,340 --> 01:10:24,940
download some malware to the desktop and

1780
01:10:22,990 --> 01:10:27,040
see whether first of all that AV

1781
01:10:24,940 --> 01:10:28,839
triggers it you find it within your logs

1782
01:10:27,040 --> 01:10:30,220
as to where it is and whether that comes

1783
01:10:28,840 --> 01:10:32,200
all the way back up to somebody that

1784
01:10:30,220 --> 01:10:33,610
needs to be like hi so this is the word

1785
01:10:32,200 --> 01:10:36,730
one so this is kind of gives you an idea

1786
01:10:33,610 --> 01:10:39,549
of where we're going this is just a key

1787
01:10:36,730 --> 01:10:41,830
really to be honest but if your screen

1788
01:10:39,550 --> 01:10:44,020
grabbing screen showing video watching

1789
01:10:41,830 --> 01:10:45,519
the users desktop I think all of this

1790
01:10:44,020 --> 01:10:49,240
sort of stuff just adds to the realism

1791
01:10:45,520 --> 01:10:50,890
it looks like a users typing it and I

1792
01:10:49,240 --> 01:10:52,870
really did this if you look at the top

1793
01:10:50,890 --> 01:10:58,480
you can see it will be switching between

1794
01:10:52,870 --> 01:10:59,980
the title and formatting and stuff what

1795
01:10:58,480 --> 01:11:02,830
is also interesting about this is the

1796
01:10:59,980 --> 01:11:06,580
way all to invocate word is it's got its

1797
01:11:02,830 --> 01:11:08,620
own API calls so next time you have an

1798
01:11:06,580 --> 01:11:10,630
opportunity create a sheeple that runs

1799
01:11:08,620 --> 01:11:14,680
word then look at the process tree and

1800
01:11:10,630 --> 01:11:16,540
Windward never actually spawns because

1801
01:11:14,680 --> 01:11:18,940
it's done it through like a comm object

1802
01:11:16,540 --> 01:11:21,490
I believe or something so when words or

1803
01:11:18,940 --> 01:11:24,519
exe is currently not appearing in the

1804
01:11:21,490 --> 01:11:26,530
process list which I find mind-boggling

1805
01:11:24,520 --> 01:11:28,480
and intriguing at the same time as to

1806
01:11:26,530 --> 01:11:30,639
how that can be how that can be useful

1807
01:11:28,480 --> 01:11:32,049
you can see we can create links and all

1808
01:11:30,640 --> 01:11:34,540
the rest of it and as I said before I

1809
01:11:32,050 --> 01:11:36,580
dropped in a password into that so the

1810
01:11:34,540 --> 01:11:39,340
user typed a password and because we can

1811
01:11:36,580 --> 01:11:42,400
key log you can get those credentials as

1812
01:11:39,340 --> 01:11:42,880
well so that's just a bit of an idea of

1813
01:11:42,400 --> 01:11:44,280
what

1814
01:11:42,880 --> 01:11:46,480
you can do with this sort of stuff

1815
01:11:44,280 --> 01:11:49,150
building at the tasks over a longer

1816
01:11:46,480 --> 01:11:52,139
period of time making them richer sit

1817
01:11:49,150 --> 01:11:55,059
once to open another Word document

1818
01:11:52,140 --> 01:11:57,340
so that's pretty cool you can see

1819
01:11:55,060 --> 01:11:58,780
there's all the gets so it can come and

1820
01:11:57,340 --> 01:12:01,390
get stuff particularly through a bits

1821
01:11:58,780 --> 01:12:02,980
transfer so that's a nice nice at a

1822
01:12:01,390 --> 01:12:05,200
Curie way of getting things through ie

1823
01:12:02,980 --> 01:12:06,969
down low cradles will work as well so

1824
01:12:05,200 --> 01:12:08,290
you can get them to sort of emulate

1825
01:12:06,970 --> 01:12:11,470
attack of feed

1826
01:12:08,290 --> 01:12:30,100
a little bit as well and if I go back to

1827
01:12:11,470 --> 01:12:32,320
my powerpoint presence of stuff I won't

1828
01:12:30,100 --> 01:12:34,450
bore you with the attack but I like this

1829
01:12:32,320 --> 01:12:36,370
idea because I kind of bounce back to

1830
01:12:34,450 --> 01:12:39,610
well what can I actually make people do

1831
01:12:36,370 --> 01:12:41,530
is it possible for me to email and sends

1832
01:12:39,610 --> 01:12:43,480
the thinnest BOTS and I think it is and

1833
01:12:41,530 --> 01:12:44,800
we've already proven this morning a

1834
01:12:43,480 --> 01:12:46,389
number of times that we can interface

1835
01:12:44,800 --> 01:12:48,670
with command shells or command line

1836
01:12:46,390 --> 01:12:50,860
stuff can we manipulate accounts well

1837
01:12:48,670 --> 01:12:52,510
you can steal tokens you can inject into

1838
01:12:50,860 --> 01:12:53,219
other processes you can do that sort of

1839
01:12:52,510 --> 01:12:56,050
stuff

1840
01:12:53,220 --> 01:12:58,290
certainly creating processes in the

1841
01:12:56,050 --> 01:13:01,420
context of other users is quite useful

1842
01:12:58,290 --> 01:13:03,670
bypass you act through exploits etc you

1843
01:13:01,420 --> 01:13:04,960
can use it to trigger that sort of thing

1844
01:13:03,670 --> 01:13:08,680
messing around with your group

1845
01:13:04,960 --> 01:13:11,950
permissions so numeration is very easy

1846
01:13:08,680 --> 01:13:13,450
net user in or WMI against either the

1847
01:13:11,950 --> 01:13:16,150
local machine or a wider active

1848
01:13:13,450 --> 01:13:19,150
directory is quite cool and then it gets

1849
01:13:16,150 --> 01:13:20,969
into clipboard data as I said before

1850
01:13:19,150 --> 01:13:24,610
that's quite interesting to think about

1851
01:13:20,970 --> 01:13:26,380
and then how can we get stuff back so as

1852
01:13:24,610 --> 01:13:28,420
I said before this I haven't pushed too

1853
01:13:26,380 --> 01:13:31,840
much yet but this idea that they can

1854
01:13:28,420 --> 01:13:34,120
make get requests to servers etc but

1855
01:13:31,840 --> 01:13:36,340
they can also make post requests as well

1856
01:13:34,120 --> 01:13:37,780
and in the or to its snippets you'll see

1857
01:13:36,340 --> 01:13:39,100
that there's a couple of files in there

1858
01:13:37,780 --> 01:13:42,790
that are pretty much straight from the

1859
01:13:39,100 --> 01:13:45,970
or to it directories that do things like

1860
01:13:42,790 --> 01:13:47,950
either operate at the inet level so

1861
01:13:45,970 --> 01:13:50,950
they'll use win api's to interface with

1862
01:13:47,950 --> 01:13:52,450
inet or they can create sockets and they

1863
01:13:50,950 --> 01:13:54,710
can do it over that level so there's

1864
01:13:52,450 --> 01:13:57,980
different ways that you can interact

1865
01:13:54,710 --> 01:14:00,290
so realistically could you could you use

1866
01:13:57,980 --> 01:14:03,320
this for like a rudimentary Zoar see -

1867
01:14:00,290 --> 01:14:05,780
back and forth I think that you could

1868
01:14:03,320 --> 01:14:09,230
definitely get a there's a potential for

1869
01:14:05,780 --> 01:14:11,450
a Bock here if that's how you so so

1870
01:14:09,230 --> 01:14:12,769
desire and then sort of build this chain

1871
01:14:11,450 --> 01:14:16,610
of attack to see whether it comes

1872
01:14:12,770 --> 01:14:19,040
through but importantly that um that

1873
01:14:16,610 --> 01:14:21,019
malware call that I just made that is

1874
01:14:19,040 --> 01:14:23,660
straight out of mitre like that is a

1875
01:14:21,020 --> 01:14:26,330
tiata that is a technique ID from mitre

1876
01:14:23,660 --> 01:14:28,130
a bits transfer so from like the blue

1877
01:14:26,330 --> 01:14:31,519
team perspective this is cool right

1878
01:14:28,130 --> 01:14:34,310
because you can go how can I emulate and

1879
01:14:31,520 --> 01:14:36,500
I really like atomic red canary and I

1880
01:14:34,310 --> 01:14:38,360
think they've extended the solution

1881
01:14:36,500 --> 01:14:40,219
quite a lot now as I understand it they

1882
01:14:38,360 --> 01:14:42,380
have Yama files and things where you can

1883
01:14:40,219 --> 01:14:44,960
pull down these sorts of techniques and

1884
01:14:42,380 --> 01:14:46,969
you can run them but I was doing this

1885
01:14:44,960 --> 01:14:48,620
kind of before that project was extended

1886
01:14:46,969 --> 01:14:51,890
a little bit and I was very much going

1887
01:14:48,620 --> 01:14:55,370
well how are people executing my turret

1888
01:14:51,890 --> 01:14:57,950
at framework commands how are people

1889
01:14:55,370 --> 01:15:00,110
doing it and the common way is like bat

1890
01:14:57,950 --> 01:15:02,570
files or bits and pieces that just kind

1891
01:15:00,110 --> 01:15:04,370
of create things at a moment in time but

1892
01:15:02,570 --> 01:15:06,380
it goes back to that complacency that I

1893
01:15:04,370 --> 01:15:07,820
said before because you're like right if

1894
01:15:06,380 --> 01:15:09,770
you've got your sensor ready if you've

1895
01:15:07,820 --> 01:15:12,580
got your sensor ready everybody ready

1896
01:15:09,770 --> 01:15:15,860
execute the bat file everybody see that

1897
01:15:12,580 --> 01:15:17,480
we've got this apt thing solved and I'm

1898
01:15:15,860 --> 01:15:19,280
like well yeah that's cool and that

1899
01:15:17,480 --> 01:15:22,160
definitely shows whether those events

1900
01:15:19,280 --> 01:15:24,980
bubble up but there's no noise around

1901
01:15:22,160 --> 01:15:27,530
real world normal network traffic in

1902
01:15:24,980 --> 01:15:28,940
that so what about you know that module

1903
01:15:27,530 --> 01:15:32,450
does that bitch transfer and then it

1904
01:15:28,940 --> 01:15:35,030
sits there for two days before that that

1905
01:15:32,450 --> 01:15:41,480
final call comes in so I think this is

1906
01:15:35,030 --> 01:15:43,759
all quite useful stuff so so as

1907
01:15:41,480 --> 01:15:45,320
everybody managed to at least I mean you

1908
01:15:43,760 --> 01:15:46,850
tell me what you needed the machines you

1909
01:15:45,320 --> 01:15:48,650
want to access you want to just keep on

1910
01:15:46,850 --> 01:15:50,450
going through this and I'll show you the

1911
01:15:48,650 --> 01:15:52,070
capabilities I'm not going anywhere so

1912
01:15:50,450 --> 01:15:54,290
this server can keep running feel free

1913
01:15:52,070 --> 01:15:56,210
to you know keep smashing away at it and

1914
01:15:54,290 --> 01:15:58,730
stuff it's entirely up to you but I want

1915
01:15:56,210 --> 01:16:00,980
to try and give you the whole oversight

1916
01:15:58,730 --> 01:16:03,290
of the project so that you know you can

1917
01:16:00,980 --> 01:16:07,309
hopefully use it for your or your own

1918
01:16:03,290 --> 01:16:07,940
benefits so on that basis I'll move on

1919
01:16:07,310 --> 01:16:09,739
to sub

1920
01:16:07,940 --> 01:16:16,309
this is a good place to sort of look at

1921
01:16:09,739 --> 01:16:17,900
how we extend it through after I show

1922
01:16:16,310 --> 01:16:20,360
you one more thing that I think is quite

1923
01:16:17,900 --> 01:16:22,070
useful so there's a couple of things

1924
01:16:20,360 --> 01:16:26,179
here we've got like a responder type

1925
01:16:22,070 --> 01:16:31,280
attack so we can we can program people

1926
01:16:26,180 --> 01:16:34,489
that are looking for paths servers and

1927
01:16:31,280 --> 01:16:37,040
things that then are incorrect that we

1928
01:16:34,489 --> 01:16:38,299
can then respond to those so I can set

1929
01:16:37,040 --> 01:16:41,060
that up in the break and I can show you

1930
01:16:38,300 --> 01:16:45,140
how that one works I've got a process

1931
01:16:41,060 --> 01:16:46,580
killing solution as well as a fairly

1932
01:16:45,140 --> 01:16:48,590
advanced one I'll get to that one in a

1933
01:16:46,580 --> 01:16:51,890
minute but this was quite I would

1934
01:16:48,590 --> 01:16:57,650
consider the next steps of looking at

1935
01:16:51,890 --> 01:17:01,489
attack output compiling C sharp so

1936
01:16:57,650 --> 01:17:03,620
there's no sort of real difficulty here

1937
01:17:01,489 --> 01:17:06,110
I've basically got on the desktop of

1938
01:17:03,620 --> 01:17:09,860
this machine a very simple hello world

1939
01:17:06,110 --> 01:17:13,940
c-sharp program there's nothing to it

1940
01:17:09,860 --> 01:17:16,519
it's literally just hoping it's just

1941
01:17:13,940 --> 01:17:19,759
hello world in in c-sharp but you know

1942
01:17:16,520 --> 01:17:22,310
this idea of using um box compilers to

1943
01:17:19,760 --> 01:17:24,800
pull down text files and then compile

1944
01:17:22,310 --> 01:17:26,719
them I'm sure everybody's aware of that

1945
01:17:24,800 --> 01:17:29,690
sort of stuff and we can use the sheeple

1946
01:17:26,719 --> 01:17:31,190
to do that so it depends on how you want

1947
01:17:29,690 --> 01:17:33,320
to get the text file down so you could

1948
01:17:31,190 --> 01:17:35,570
use all of the other tasks beforehand

1949
01:17:33,320 --> 01:17:38,299
you could use PowerShell to do it as a

1950
01:17:35,570 --> 01:17:40,250
bitch transfer you could use ie and

1951
01:17:38,300 --> 01:17:41,750
actually download it directly however

1952
01:17:40,250 --> 01:17:43,730
you want to get that on the boxes

1953
01:17:41,750 --> 01:17:44,930
there's a lot of ways forward but then

1954
01:17:43,730 --> 01:17:47,330
at this point is stuff that I've been

1955
01:17:44,930 --> 01:17:50,000
showing you all morning it's creating a

1956
01:17:47,330 --> 01:17:54,380
CMD task it's specifying the path to the

1957
01:17:50,000 --> 01:17:55,940
CS the c-sharp compiler with the c-sharp

1958
01:17:54,380 --> 01:17:58,880
source code and then it's compiling it

1959
01:17:55,940 --> 01:18:00,620
so let's just run that just so hopefully

1960
01:17:58,880 --> 01:18:06,320
that starts the plants and seeds about

1961
01:18:00,620 --> 01:18:07,519
oh thank you so I've been talking all

1962
01:18:06,320 --> 01:18:09,790
that time and you didn't see any of that

1963
01:18:07,520 --> 01:18:09,790
at all

1964
01:18:10,450 --> 01:18:20,040
yeah so so this is the hello world

1965
01:18:16,650 --> 01:18:22,420
sheesh art program really simple okay

1966
01:18:20,040 --> 01:18:24,550
and all I'm doing here is I've created a

1967
01:18:22,420 --> 01:18:26,800
command shell task and again as I said

1968
01:18:24,550 --> 01:18:28,840
before anything that you can type so

1969
01:18:26,800 --> 01:18:31,510
command shell task and all it's doing is

1970
01:18:28,840 --> 01:18:33,280
it's specifying the path to the c-sharp

1971
01:18:31,510 --> 01:18:35,680
compiler on this version of Windows now

1972
01:18:33,280 --> 01:18:37,420
you can enumerate that okay you could do

1973
01:18:35,680 --> 01:18:39,790
some initial checking to see whether

1974
01:18:37,420 --> 01:18:41,860
it's there beforehand but essentially

1975
01:18:39,790 --> 01:18:44,670
this is the path to the c-sharp compiler

1976
01:18:41,860 --> 01:18:47,679
on most of these Windows versions and

1977
01:18:44,670 --> 01:18:48,700
then the source code and what I want to

1978
01:18:47,680 --> 01:18:52,900
output yeah so I'm just going to

1979
01:18:48,700 --> 01:18:54,760
basically output it as H W sorry exit so

1980
01:18:52,900 --> 01:18:58,240
now we're using sheeple to grab c-sharp

1981
01:18:54,760 --> 01:19:02,080
source code to compile it on the box at

1982
01:18:58,240 --> 01:19:06,330
some random point that we specify so if

1983
01:19:02,080 --> 01:19:17,769
we run that as a 14 second sleep so

1984
01:19:06,330 --> 01:19:19,240
we'll just let them do their thing and

1985
01:19:17,770 --> 01:19:20,770
you can see there's a theme here right

1986
01:19:19,240 --> 01:19:23,349
I'm always kind of launching from a

1987
01:19:20,770 --> 01:19:28,390
command shell path to CSC the file

1988
01:19:23,350 --> 01:19:29,860
itself and that's it it's compiled so

1989
01:19:28,390 --> 01:19:31,480
we've just pulled down the payload and

1990
01:19:29,860 --> 01:19:37,630
we've compiled it in real time and then

1991
01:19:31,480 --> 01:19:40,509
I exit so I'll stop that CMD go to the

1992
01:19:37,630 --> 01:19:43,660
desktop so there's the thing that it's

1993
01:19:40,510 --> 01:19:46,480
just compiled at 11:14 and if we run

1994
01:19:43,660 --> 01:19:49,330
that hello work so I think that's quite

1995
01:19:46,480 --> 01:19:51,549
cool because this ability to pull down

1996
01:19:49,330 --> 01:19:52,960
like c-sharp shell code and stuff and

1997
01:19:51,550 --> 01:19:56,350
have it sitting on the box and then

1998
01:19:52,960 --> 01:19:57,700
msbuild is another example and all these

1999
01:19:56,350 --> 01:19:59,020
sorts of things that are in the attack

2000
01:19:57,700 --> 01:20:02,500
framework and they're sort of well-known

2001
01:19:59,020 --> 01:20:08,530
attacking type scenarios pretty good to

2002
01:20:02,500 --> 01:20:09,790
to explore I think as a mechanism yeah

2003
01:20:08,530 --> 01:20:11,920
so the other thing I want to show you

2004
01:20:09,790 --> 01:20:13,720
then is this process killer and I've

2005
01:20:11,920 --> 01:20:15,250
written this by hand so I haven't pushed

2006
01:20:13,720 --> 01:20:18,430
this through yet and this isn't really

2007
01:20:15,250 --> 01:20:23,080
in sheeple as such yet but it will be so

2008
01:20:18,430 --> 01:20:23,650
this idea of OPSEC and how can I improve

2009
01:20:23,080 --> 01:20:26,559
my

2010
01:20:23,650 --> 01:20:28,509
aircraft and you know what types of

2011
01:20:26,560 --> 01:20:30,340
processes am i actually spawning are

2012
01:20:28,510 --> 01:20:32,230
they well signature processes do I want

2013
01:20:30,340 --> 01:20:35,800
to look for them as an example like

2014
01:20:32,230 --> 01:20:38,199
co-op strike is well known for as one

2015
01:20:35,800 --> 01:20:41,350
tool that I use is well known for run

2016
01:20:38,199 --> 01:20:43,030
DLL 32 spawning or powershell invocation

2017
01:20:41,350 --> 01:20:45,520
all over the place because of how it

2018
01:20:43,030 --> 01:20:46,659
does its injection etc so I thought well

2019
01:20:45,520 --> 01:20:48,250
that's quite interesting I wonder

2020
01:20:46,659 --> 01:20:50,530
whether I could almost write like a

2021
01:20:48,250 --> 01:20:52,659
little EDR solution that would go

2022
01:20:50,530 --> 01:20:54,190
through the whole process list and look

2023
01:20:52,659 --> 01:20:56,199
at the process list and if it found

2024
01:20:54,190 --> 01:20:58,960
things that I wanted to key off for

2025
01:20:56,199 --> 01:21:00,759
tradecraft development it would go it

2026
01:20:58,960 --> 01:21:02,650
would either have levels of that's

2027
01:21:00,760 --> 01:21:04,960
terrible terrible OPSEC and it just

2028
01:21:02,650 --> 01:21:07,000
kills it straight away or gives me a

2029
01:21:04,960 --> 01:21:09,969
couple of chances and it and it posts it

2030
01:21:07,000 --> 01:21:12,310
somewhere to go this process is still

2031
01:21:09,969 --> 01:21:14,440
running one counter this process is

2032
01:21:12,310 --> 01:21:16,179
still running two counters third time

2033
01:21:14,440 --> 01:21:19,030
lucky this process is still running you

2034
01:21:16,179 --> 01:21:21,480
need to consider OPSEC kill so that's

2035
01:21:19,030 --> 01:21:25,059
basically what I've written now so this

2036
01:21:21,480 --> 01:21:27,009
is essentially a little bit more

2037
01:21:25,060 --> 01:21:28,480
complicated you can see that there's

2038
01:21:27,010 --> 01:21:30,040
lots of functions here for looping

2039
01:21:28,480 --> 01:21:32,889
through the window I didn't write all of

2040
01:21:30,040 --> 01:21:34,150
this or to it forums and source code are

2041
01:21:32,890 --> 01:21:36,219
great for that sort of stuff I've

2042
01:21:34,150 --> 01:21:38,620
written some of these counters etc to

2043
01:21:36,219 --> 01:21:40,300
just check through it's pretty Python

2044
01:21:38,620 --> 01:21:44,159
like if you're if you know that sort of

2045
01:21:40,300 --> 01:21:46,360
stuff and you can see opposite so if I

2046
01:21:44,159 --> 01:21:47,769
maximize this window because this is

2047
01:21:46,360 --> 01:21:49,540
where you'll see all the output and

2048
01:21:47,770 --> 01:21:51,219
let's run that at the moment we haven't

2049
01:21:49,540 --> 01:21:54,370
got any processes that it cares about I

2050
01:21:51,219 --> 01:21:57,400
think it's just in the array it cares

2051
01:21:54,370 --> 01:21:58,380
about PowerShell notepad and ie and you

2052
01:21:57,400 --> 01:22:00,549
can see there's a message there

2053
01:21:58,380 --> 01:22:04,860
powershell common process to look at

2054
01:22:00,550 --> 01:22:08,350
your spawning so let's go and run that

2055
01:22:04,860 --> 01:22:10,570
okay so a hard-coded counter is like

2056
01:22:08,350 --> 01:22:11,800
five seconds so every five seconds it's

2057
01:22:10,570 --> 01:22:12,699
going to pass through that list and it's

2058
01:22:11,800 --> 01:22:14,440
going to be looking for those processes

2059
01:22:12,699 --> 01:22:22,150
and if they're there and it's going to

2060
01:22:14,440 --> 01:22:27,200
kill it so let's start powershell it

2061
01:22:22,150 --> 01:22:29,750
should see powershell yeah so

2062
01:22:27,200 --> 01:22:32,210
PowerShell it gets the pit it

2063
01:22:29,750 --> 01:22:37,580
appreciates that it's a common process

2064
01:22:32,210 --> 01:22:41,900
that we need to be aware of it adds one

2065
01:22:37,580 --> 01:22:44,210
strike and then once you get to the

2066
01:22:41,900 --> 01:22:46,009
third time it's like hey this needs to

2067
01:22:44,210 --> 01:22:48,440
be this isn't something that you should

2068
01:22:46,010 --> 01:22:53,150
be running so it just kills it and it

2069
01:22:48,440 --> 01:22:55,219
will do it for if you look at how

2070
01:22:53,150 --> 01:22:57,679
people's for like a box that somebody's

2071
01:22:55,220 --> 01:22:58,670
beasted there's like processes

2072
01:22:57,680 --> 01:23:00,740
everywhere

2073
01:22:58,670 --> 01:23:02,870
I'm sure we've all seen that so that's a

2074
01:23:00,740 --> 01:23:04,070
ton of PowerShell now running and you

2075
01:23:02,870 --> 01:23:05,720
can see it's found all of them and

2076
01:23:04,070 --> 01:23:07,190
originally because I wrote more than

2077
01:23:05,720 --> 01:23:09,740
three I'm quite happy to publicly

2078
01:23:07,190 --> 01:23:11,599
disclose my crappy code if I did more

2079
01:23:09,740 --> 01:23:13,429
than three it just went ah one two three

2080
01:23:11,600 --> 01:23:14,900
PowerShell skill and there's this like

2081
01:23:13,430 --> 01:23:16,580
that's kind of not what I'm trying to

2082
01:23:14,900 --> 01:23:19,820
achieve so it goes through and it gives

2083
01:23:16,580 --> 01:23:21,110
you if it defines any PowerShell it

2084
01:23:19,820 --> 01:23:23,420
doesn't matter how many processes are

2085
01:23:21,110 --> 01:23:25,250
running that's one strike so you know we

2086
01:23:23,420 --> 01:23:26,420
can kind of tweak that and then it goes

2087
01:23:25,250 --> 01:23:28,760
through and it's grabbed the pig and

2088
01:23:26,420 --> 01:23:31,100
it's killed it all again so I think this

2089
01:23:28,760 --> 01:23:32,870
is quite powerful as a as a tradecraft

2090
01:23:31,100 --> 01:23:34,220
development tool having this sitting

2091
01:23:32,870 --> 01:23:36,440
somewhere on a box that you want

2092
01:23:34,220 --> 01:23:38,600
somebody to land on or maybe just having

2093
01:23:36,440 --> 01:23:41,120
them distributed as boxes and you're

2094
01:23:38,600 --> 01:23:43,430
like well you need to look at how from a

2095
01:23:41,120 --> 01:23:44,990
Red Team tradecraft perspective how are

2096
01:23:43,430 --> 01:23:47,480
things being detected what are the types

2097
01:23:44,990 --> 01:23:50,030
of processes that these EDR solutions

2098
01:23:47,480 --> 01:23:51,679
are signature ring on do we want to

2099
01:23:50,030 --> 01:23:54,650
spawn those processes and then how can

2100
01:23:51,680 --> 01:23:55,940
we develop tradecraft to steer people in

2101
01:23:54,650 --> 01:23:57,080
the right direction that those aren't

2102
01:23:55,940 --> 01:24:00,679
the sorts of things that they want

2103
01:23:57,080 --> 01:24:02,480
same thing with notepad so my ultimate

2104
01:24:00,680 --> 01:24:04,100
goal is to have it so that this

2105
01:24:02,480 --> 01:24:05,870
information that's really been pushed

2106
01:24:04,100 --> 01:24:08,330
into the console at the moment gets

2107
01:24:05,870 --> 01:24:10,099
pushed somewhere else as part of that

2108
01:24:08,330 --> 01:24:13,850
sort of lab seat scenario they post

2109
01:24:10,100 --> 01:24:19,760
something back or so I thought that was

2110
01:24:13,850 --> 01:24:25,160
quite interesting yeah there's some

2111
01:24:19,760 --> 01:24:30,560
mileage in that good feedback since

2112
01:24:25,160 --> 01:24:32,269
in-app reset reset reset reset okay so

2113
01:24:30,560 --> 01:24:33,650
subtask I'll just show you the video for

2114
01:24:32,270 --> 01:24:36,440
this one I think it's easier for now

2115
01:24:33,650 --> 01:24:39,019
because it's easier to talk over but

2116
01:24:36,440 --> 01:24:41,239
some yeah this is cool

2117
01:24:39,020 --> 01:24:44,360
so I'll just play

2118
01:24:41,239 --> 01:24:48,230
we have this client that's in the

2119
01:24:44,360 --> 01:24:49,759
environment there's an RDP file on there

2120
01:24:48,230 --> 01:24:51,379
because I want to get you to start SS

2121
01:24:49,760 --> 01:24:53,360
aging around now as well because there's

2122
01:24:51,380 --> 01:24:56,930
Linux boxes you can issue commands on

2123
01:24:53,360 --> 01:24:59,120
and stuff so same thing handles all of

2124
01:24:56,930 --> 01:25:01,730
this so all of these are kind of

2125
01:24:59,120 --> 01:25:03,380
grabbing the the insights into where

2126
01:25:01,730 --> 01:25:05,509
what computer need to connect to what

2127
01:25:03,380 --> 01:25:08,180
the user name is credentials that I pass

2128
01:25:05,510 --> 01:25:10,100
handling this window security window is

2129
01:25:08,180 --> 01:25:12,020
quite important as well because that's a

2130
01:25:10,100 --> 01:25:14,390
pop up you know so now technically we've

2131
01:25:12,020 --> 01:25:17,239
lost focus so you need to be able to

2132
01:25:14,390 --> 01:25:18,860
react to this sort of stuff this as well

2133
01:25:17,239 --> 01:25:20,690
because I've connected to it via an IP

2134
01:25:18,860 --> 01:25:22,009
address it's not a fully qualified

2135
01:25:20,690 --> 01:25:23,179
domain name so you're gonna get a

2136
01:25:22,010 --> 01:25:25,850
certificate error how do you deal with

2137
01:25:23,180 --> 01:25:27,410
that well like accessibility plugins and

2138
01:25:25,850 --> 01:25:30,110
the score so you can send all of these

2139
01:25:27,410 --> 01:25:31,880
as key commands so we can go I'll okay

2140
01:25:30,110 --> 01:25:36,049
I'll wait for a quite a lot of time here

2141
01:25:31,880 --> 01:25:38,420
but you can send that yes

2142
01:25:36,050 --> 01:25:39,710
now essentially we've now made a remote

2143
01:25:38,420 --> 01:25:40,820
desktop connection you could have key

2144
01:25:39,710 --> 01:25:42,620
logged the credentials as they were

2145
01:25:40,820 --> 01:25:44,870
passed through as I'll show you in a

2146
01:25:42,620 --> 01:25:48,110
second but we're now on the remote

2147
01:25:44,870 --> 01:25:49,849
server so there's a caveat with sub

2148
01:25:48,110 --> 01:25:51,650
tasking is that everything is now

2149
01:25:49,850 --> 01:25:53,930
available but you don't really get the

2150
01:25:51,650 --> 01:25:56,120
insight in the same way because what we

2151
01:25:53,930 --> 01:25:58,219
now need to lock on is this entire

2152
01:25:56,120 --> 01:25:59,809
Terminal Services window because

2153
01:25:58,219 --> 01:26:02,719
something else could take focus and you

2154
01:25:59,810 --> 01:26:04,219
could now not lose access to the program

2155
01:26:02,719 --> 01:26:07,190
that you're trying to connect to but the

2156
01:26:04,219 --> 01:26:09,290
entire GUI so at this point we're

2157
01:26:07,190 --> 01:26:11,450
constantly checking to see whether we're

2158
01:26:09,290 --> 01:26:13,580
inside the Terminal Services class

2159
01:26:11,450 --> 01:26:14,780
window and it'll hooks on that and as

2160
01:26:13,580 --> 01:26:16,719
long as it's there then it will just

2161
01:26:14,780 --> 01:26:19,610
send the other commands that you have

2162
01:26:16,719 --> 01:26:21,080
asked it to do so that's basically what

2163
01:26:19,610 --> 01:26:23,839
it's doing here it's just like running

2164
01:26:21,080 --> 01:26:25,880
some PowerShell stuff chucking it to

2165
01:26:23,840 --> 01:26:27,440
that day working out what the version is

2166
01:26:25,880 --> 01:26:30,500
but again at this point this could be

2167
01:26:27,440 --> 01:26:32,690
anything so you could remote desktop to

2168
01:26:30,500 --> 01:26:35,530
a machine and then start running using

2169
01:26:32,690 --> 01:26:38,929
PowerShell as an example to execute

2170
01:26:35,530 --> 01:26:41,960
commands or whatever it is that you want

2171
01:26:38,930 --> 01:26:43,340
to test you know test whether amps he's

2172
01:26:41,960 --> 01:26:45,980
actually working or whether you can

2173
01:26:43,340 --> 01:26:48,200
bypass it all this other stuff and that

2174
01:26:45,980 --> 01:26:49,849
will just keep looping that getting out

2175
01:26:48,200 --> 01:26:52,250
of that window was a really difficult

2176
01:26:49,850 --> 01:26:53,880
thing because if you've ever used RDP it

2177
01:26:52,250 --> 01:26:56,520
it

2178
01:26:53,880 --> 01:26:58,380
who takes focus so as you're typing

2179
01:26:56,520 --> 01:27:00,840
commands now all of your keyboard is

2180
01:26:58,380 --> 01:27:02,219
almost redirected into this session so

2181
01:27:00,840 --> 01:27:05,520
the question for me was like well how do

2182
01:27:02,219 --> 01:27:08,550
I get out of this and it took me like a

2183
01:27:05,520 --> 01:27:10,710
week or so of serious googling to find

2184
01:27:08,550 --> 01:27:13,500
out that if you press the caps lock key

2185
01:27:10,710 --> 01:27:14,909
I believe that for a very short amount

2186
01:27:13,500 --> 01:27:17,100
of time

2187
01:27:14,909 --> 01:27:20,909
breaks the focus of the remote desktop

2188
01:27:17,100 --> 01:27:22,920
window and momentarily sends focus back

2189
01:27:20,909 --> 01:27:25,500
to your local keyboard and in that

2190
01:27:22,920 --> 01:27:27,449
moment I can then snatch that key and

2191
01:27:25,500 --> 01:27:29,760
send the exit command for a remote

2192
01:27:27,449 --> 01:27:31,559
desktop so that's how I've done that

2193
01:27:29,760 --> 01:27:33,929
looping because obviously I want them to

2194
01:27:31,560 --> 01:27:36,929
authenticate to Remote Desktop do some

2195
01:27:33,929 --> 01:27:39,150
things exit out wait for whatever period

2196
01:27:36,929 --> 01:27:43,560
of time authenticate back in again and

2197
01:27:39,150 --> 01:27:46,860
stuff so around we go typing is it's

2198
01:27:43,560 --> 01:27:50,310
really good stuff so this that's the key

2199
01:27:46,860 --> 01:27:52,349
logging from cobalt strike on the client

2200
01:27:50,310 --> 01:27:54,179
that I had that running that's key

2201
01:27:52,350 --> 01:27:56,070
logging at that point in time so as you

2202
01:27:54,179 --> 01:27:58,139
can see there's all the old commands

2203
01:27:56,070 --> 01:28:00,420
that it's sending to answer those

2204
01:27:58,139 --> 01:28:01,320
questions about do you want this do you

2205
01:28:00,420 --> 01:28:03,389
want that do on the other

2206
01:28:01,320 --> 01:28:04,949
that's the credential for the user and

2207
01:28:03,389 --> 01:28:07,560
the users password so there's the

2208
01:28:04,949 --> 01:28:10,259
Windows security title that we saw pop

2209
01:28:07,560 --> 01:28:12,330
up so you can clap you can grab that a

2210
01:28:10,260 --> 01:28:14,400
class level for that window and then you

2211
01:28:12,330 --> 01:28:15,929
can send the password to that and then

2212
01:28:14,400 --> 01:28:18,290
at that point all you see is that you're

2213
01:28:15,929 --> 01:28:23,219
inside the remote desktop connection so

2214
01:28:18,290 --> 01:28:25,290
you're no longer key logging on what's

2215
01:28:23,219 --> 01:28:27,570
been typed into a remote desktop because

2216
01:28:25,290 --> 01:28:29,969
you don't have a process visible in

2217
01:28:27,570 --> 01:28:31,830
remote desktop if that makes sense yeah

2218
01:28:29,969 --> 01:28:34,409
because what you're catching is the

2219
01:28:31,830 --> 01:28:36,449
invocation of creating a remote desktop

2220
01:28:34,409 --> 01:28:38,099
session and that's why we've got all of

2221
01:28:36,449 --> 01:28:39,900
this stuff here but then once that

2222
01:28:38,100 --> 01:28:42,449
you're not seeing any of the PowerShell

2223
01:28:39,900 --> 01:28:44,040
stuff anymore because that's inside of a

2224
01:28:42,449 --> 01:28:46,019
remote session that you don't currently

2225
01:28:44,040 --> 01:28:49,650
have visibility of does that make sense

2226
01:28:46,020 --> 01:28:52,380
I know that even though you're you're

2227
01:28:49,650 --> 01:28:54,239
typing on your keyboard but to all

2228
01:28:52,380 --> 01:28:57,480
intents and purposes your key logging

2229
01:28:54,239 --> 01:28:59,549
Explorer locally and what you need to be

2230
01:28:57,480 --> 01:29:01,259
key logging is Explorer remotely if you

2231
01:28:59,550 --> 01:29:03,090
want to see that whole PowerShell thing

2232
01:29:01,260 --> 01:29:05,310
so it's a bit a bit of

2233
01:29:03,090 --> 01:29:07,980
a brain melt to understand how the

2234
01:29:05,310 --> 01:29:09,810
keyboards get redirected and I still

2235
01:29:07,980 --> 01:29:11,610
don't fully understand it but I am

2236
01:29:09,810 --> 01:29:14,370
pretty confident that that's the reason

2237
01:29:11,610 --> 01:29:17,219
why you don't see that moving forward so

2238
01:29:14,370 --> 01:29:18,870
it's it's pretty good from from from a

2239
01:29:17,220 --> 01:29:21,330
tradecraft perspective you can see all

2240
01:29:18,870 --> 01:29:23,430
caps lock caps lock caps lock so it

2241
01:29:21,330 --> 01:29:25,170
sends caps like a couple of times to

2242
01:29:23,430 --> 01:29:27,060
break that focus on the remote desktop

2243
01:29:25,170 --> 01:29:31,290
session so that then you can come out

2244
01:29:27,060 --> 01:29:33,210
again so if I show you some other bits

2245
01:29:31,290 --> 01:29:35,220
that I've created and then I think make

2246
01:29:33,210 --> 01:29:36,990
some more tasks if you've got visibility

2247
01:29:35,220 --> 01:29:39,210
if you've got the mechanism of

2248
01:29:36,990 --> 01:29:41,370
connecting to the remote machines then

2249
01:29:39,210 --> 01:29:45,030
you can see that sort of stuff

2250
01:29:41,370 --> 01:29:57,809
yourselves as well so let's just go back

2251
01:29:45,030 --> 01:29:59,849
to sheeple I'll do it an interactive

2252
01:29:57,810 --> 01:30:07,410
mode again socially you can see some of

2253
01:29:59,850 --> 01:30:09,900
the so take one minute you can type

2254
01:30:07,410 --> 01:30:14,970
normally and then if we list the tasks

2255
01:30:09,900 --> 01:30:17,670
there's this putty connection so if we

2256
01:30:14,970 --> 01:30:19,500
use that so I mean about typing

2257
01:30:17,670 --> 01:30:20,700
backspace backspace backspace you key

2258
01:30:19,500 --> 01:30:22,020
logging in to see all that and I've

2259
01:30:20,700 --> 01:30:24,870
actually got a different type of that to

2260
01:30:22,020 --> 01:30:26,460
show you so the same thing now you can

2261
01:30:24,870 --> 01:30:28,110
see there's a I've tried to keep a

2262
01:30:26,460 --> 01:30:30,870
standard for the module so you always

2263
01:30:28,110 --> 01:30:32,870
start with a new invocation and this one

2264
01:30:30,870 --> 01:30:35,610
has different things because it takes

2265
01:30:32,870 --> 01:30:37,440
credentials it takes a command files of

2266
01:30:35,610 --> 01:30:40,170
it so the party connection is quite more

2267
01:30:37,440 --> 01:30:41,669
advanced modulars it has more stuff to

2268
01:30:40,170 --> 01:30:43,260
it because you need to know what

2269
01:30:41,670 --> 01:30:44,100
credentials are there at the moment if

2270
01:30:43,260 --> 01:30:46,940
we have a look

2271
01:30:44,100 --> 01:30:49,800
we haven't assigned any so I wouldn't

2272
01:30:46,940 --> 01:30:51,360
expect that to be the case also if

2273
01:30:49,800 --> 01:30:54,090
you're running on Linux and you have the

2274
01:30:51,360 --> 01:30:55,349
read line library installed the new read

2275
01:30:54,090 --> 01:30:57,690
line I think it is you get tab

2276
01:30:55,350 --> 01:30:59,310
completion for for all of this as well

2277
01:30:57,690 --> 01:31:02,759
which is quite helpful but Mac doesn't

2278
01:30:59,310 --> 01:31:06,990
have that support so at this point we

2279
01:31:02,760 --> 01:31:09,360
can specify well credentials and then we

2280
01:31:06,990 --> 01:31:11,969
want to log into this machine I think

2281
01:31:09,360 --> 01:31:15,980
it's that one we want to use a server

2282
01:31:11,970 --> 01:31:18,960
admin and we want to use the password

2283
01:31:15,980 --> 01:31:21,780
okay so we've started that and now if we

2284
01:31:18,960 --> 01:31:23,969
show those credentials should all be

2285
01:31:21,780 --> 01:31:25,559
there so that's now baked in as

2286
01:31:23,969 --> 01:31:28,110
something that's going to be passed to

2287
01:31:25,560 --> 01:31:30,480
the output of the module so then at that

2288
01:31:28,110 --> 01:31:37,170
point we can start going well let's

2289
01:31:30,480 --> 01:31:38,910
assign some commands just insert

2290
01:31:37,170 --> 01:31:43,020
whatever command you want to type okay

2291
01:31:38,910 --> 01:31:45,030
yes you get the point at this point so I

2292
01:31:43,020 --> 01:31:47,040
could complete that so if you know if

2293
01:31:45,030 --> 01:31:49,650
you want to download the latest 30 Cal

2294
01:31:47,040 --> 01:31:51,900
compile it on the box try and get route

2295
01:31:49,650 --> 01:31:55,019
execute as route all these sorts of

2296
01:31:51,900 --> 01:31:57,599
things you could mess around with so at

2297
01:31:55,020 --> 01:31:59,190
that point we can finish that so we've

2298
01:31:57,600 --> 01:32:01,170
got this SSH going now there is a bug

2299
01:31:59,190 --> 01:32:03,239
that somebody submitted that the third

2300
01:32:01,170 --> 01:32:05,550
issue the first two issues I submitted

2301
01:32:03,239 --> 01:32:07,830
to my repo and then I noticed a couple

2302
01:32:05,550 --> 01:32:11,460
of weeks ago that a guy is issued a bug

2303
01:32:07,830 --> 01:32:12,690
for this putty right here and when I

2304
01:32:11,460 --> 01:32:14,400
first tested I was like I can't

2305
01:32:12,690 --> 01:32:16,080
replicate that and then this morning

2306
01:32:14,400 --> 01:32:18,150
before you guys turn that by actually

2307
01:32:16,080 --> 01:32:20,580
replicated it so I think it would be

2308
01:32:18,150 --> 01:32:22,349
useful to show you in real time it

2309
01:32:20,580 --> 01:32:25,110
doesn't happen the first time either

2310
01:32:22,350 --> 01:32:27,510
it's only when it loops so it's pretty

2311
01:32:25,110 --> 01:32:28,950
good to show you where the bug is and

2312
01:32:27,510 --> 01:32:31,260
then obviously I'll have to fix it as

2313
01:32:28,950 --> 01:32:32,969
well because it's publicly recorded but

2314
01:32:31,260 --> 01:32:35,340
you can see how this sort of stuff works

2315
01:32:32,969 --> 01:32:37,800
and how if you're not kind of walking

2316
01:32:35,340 --> 01:32:41,010
through how the windows get mapped you

2317
01:32:37,800 --> 01:32:55,620
can get lost quite quickly so let's open

2318
01:32:41,010 --> 01:32:57,930
up this SSH guy said spider lapse so

2319
01:32:55,620 --> 01:33:01,320
that's what we just created let's hide

2320
01:32:57,930 --> 01:33:02,940
that window for a minute so you can see

2321
01:33:01,320 --> 01:33:06,150
party connection again I won't make you

2322
01:33:02,940 --> 01:33:08,460
wait 20 seconds this is the thing with

2323
01:33:06,150 --> 01:33:10,710
like just doing one task over a minute

2324
01:33:08,460 --> 01:33:13,980
you can't go less than a minute at the

2325
01:33:10,710 --> 01:33:15,300
moment didn't seem to be any point so

2326
01:33:13,980 --> 01:33:20,269
that's what you have to sort of bake it

2327
01:33:15,300 --> 01:33:23,460
in yourself so the issue is this here

2328
01:33:20,270 --> 01:33:26,280
the bug that he submitted was that he

2329
01:33:23,460 --> 01:33:29,000
was then finding that o was being

2330
01:33:26,280 --> 01:33:34,880
appended pre prepended

2331
01:33:29,000 --> 01:33:36,260
to the username on every run which I

2332
01:33:34,880 --> 01:33:38,090
couldn't replicate until I left it

2333
01:33:36,260 --> 01:33:43,390
looping so let's let it go I'll show you

2334
01:33:38,090 --> 01:33:47,330
the screen as well so you can see that

2335
01:33:43,390 --> 01:33:49,460
so assuming that servers there three

2336
01:33:47,330 --> 01:33:51,559
seconds it should then start party

2337
01:33:49,460 --> 01:33:55,700
obviously has to be installed you

2338
01:33:51,560 --> 01:33:59,480
can see it's done that that obut to

2339
01:33:55,700 --> 01:34:04,220
accept that window that's coming up logs

2340
01:33:59,480 --> 01:34:07,160
in a couple of seconds password and then

2341
01:34:04,220 --> 01:34:09,410
at this point so now we can drive linux

2342
01:34:07,160 --> 01:34:12,050
from windows good for key logging but

2343
01:34:09,410 --> 01:34:13,940
good to start like generating traffic in

2344
01:34:12,050 --> 01:34:16,970
from Windows to Linux and different

2345
01:34:13,940 --> 01:34:18,500
operating systems LS and then it should

2346
01:34:16,970 --> 01:34:21,050
run new name and then it should come out

2347
01:34:18,500 --> 01:34:26,600
again and then I'll let it loop so that

2348
01:34:21,050 --> 01:34:39,860
we can see the bug in real time come on

2349
01:34:26,600 --> 01:34:41,600
quicker okay so that's the first time

2350
01:34:39,860 --> 01:34:51,170
around should be fairly quick to go

2351
01:34:41,600 --> 01:34:55,130
again yeah oh that's not that the second

2352
01:34:51,170 --> 01:34:57,830
time so it's uh it's a bit of a race

2353
01:34:55,130 --> 01:35:00,980
condition then I think because that old

2354
01:34:57,830 --> 01:35:03,200
o is to accept a pop-up and I've also

2355
01:35:00,980 --> 01:35:04,519
got some more that I need to think about

2356
01:35:03,200 --> 01:35:06,559
is because when you make a party

2357
01:35:04,520 --> 01:35:08,360
connection for the first time it comes

2358
01:35:06,560 --> 01:35:11,750
up and it prompts about how you want to

2359
01:35:08,360 --> 01:35:13,519
accept the SSH key for for this so we

2360
01:35:11,750 --> 01:35:15,380
need to deal with that window as well so

2361
01:35:13,520 --> 01:35:16,730
I'll let this loop one more time just to

2362
01:35:15,380 --> 01:35:18,680
see whether it does it third time lucky

2363
01:35:16,730 --> 01:35:21,589
and if not I think this is a good point

2364
01:35:18,680 --> 01:35:24,350
to show you the auto info file so that

2365
01:35:21,590 --> 01:35:26,330
we can reference this putty task and you

2366
01:35:24,350 --> 01:35:29,180
can see how you pick up these bits and

2367
01:35:26,330 --> 01:35:33,080
pieces of Windows that you need to watch

2368
01:35:29,180 --> 01:35:39,950
for and interact with and respond to see

2369
01:35:33,080 --> 01:35:42,460
if it does it a third time does

2370
01:35:39,950 --> 01:35:46,960
like it should be they're violent no

2371
01:35:42,460 --> 01:35:49,940
show off so yeah it's a weird bug

2372
01:35:46,960 --> 01:35:53,900
because I'm typing you have to forcibly

2373
01:35:49,940 --> 01:35:56,030
stop it I have managed to fix it anyway

2374
01:35:53,900 --> 01:35:57,650
this morning which is basically that all

2375
01:35:56,030 --> 01:36:01,400
doesn't need to be there

2376
01:35:57,650 --> 01:36:03,290
really so I'll just switch that out so

2377
01:36:01,400 --> 01:36:05,030
in that auto it bundle or if you've

2378
01:36:03,290 --> 01:36:07,940
installed or to it you get this program

2379
01:36:05,030 --> 01:36:10,070
called or to it window info and this is

2380
01:36:07,940 --> 01:36:13,099
brilliant in like learning how to build

2381
01:36:10,070 --> 01:36:16,340
your own modules and extending stuff so

2382
01:36:13,100 --> 01:36:19,160
if we take the putty example if we start

2383
01:36:16,340 --> 01:36:24,290
putty up what is it that it's actually

2384
01:36:19,160 --> 01:36:26,450
hooking on so in this SSH guy here you

2385
01:36:24,290 --> 01:36:29,300
can see look there's a win way active

2386
01:36:26,450 --> 01:36:31,849
class putty box and it's got this ten

2387
01:36:29,300 --> 01:36:33,890
there's ten here which is ten seconds if

2388
01:36:31,850 --> 01:36:36,770
that isn't defined it means that it will

2389
01:36:33,890 --> 01:36:39,590
wait forever until that window becomes

2390
01:36:36,770 --> 01:36:42,740
active now you might want that to happen

2391
01:36:39,590 --> 01:36:44,960
but it literally will wait forever so I

2392
01:36:42,740 --> 01:36:48,410
had a bug where I introduce the I'd miss

2393
01:36:44,960 --> 01:36:51,200
spelt remote desktop in the module I

2394
01:36:48,410 --> 01:36:52,730
fat-fingered it and it and I got rid of

2395
01:36:51,200 --> 01:36:54,230
the fact that it would wait for 10

2396
01:36:52,730 --> 01:36:56,389
seconds and then bomb out it would just

2397
01:36:54,230 --> 01:36:58,339
wait and it waited for this thing for

2398
01:36:56,390 --> 01:37:00,050
like days and I was like what is that

2399
01:36:58,340 --> 01:37:04,250
doing and then I realized that I'd got

2400
01:37:00,050 --> 01:37:07,670
it wrong so yes so it literally is is

2401
01:37:04,250 --> 01:37:09,350
that that explicit so how do we find

2402
01:37:07,670 --> 01:37:10,910
this sort stuff so this is basically a

2403
01:37:09,350 --> 01:37:12,800
drag-and-drop so if you'd right you

2404
01:37:10,910 --> 01:37:14,690
click this here and now you're

2405
01:37:12,800 --> 01:37:17,570
interfacing with anything that's within

2406
01:37:14,690 --> 01:37:19,460
your Windows GUI which is really cool so

2407
01:37:17,570 --> 01:37:21,410
you can click that there and you can

2408
01:37:19,460 --> 01:37:23,930
click the overall configuration box and

2409
01:37:21,410 --> 01:37:27,139
you can see that that's where we get the

2410
01:37:23,930 --> 01:37:28,970
title but also the class as well so

2411
01:37:27,140 --> 01:37:30,800
that's what I'm signature and that's why

2412
01:37:28,970 --> 01:37:33,410
I'm hooking on is the class because it

2413
01:37:30,800 --> 01:37:36,530
might be at some point that that putty

2414
01:37:33,410 --> 01:37:38,510
configuration title could change but the

2415
01:37:36,530 --> 01:37:39,950
class title of the windows box won't

2416
01:37:38,510 --> 01:37:43,130
change because it's part of how it's

2417
01:37:39,950 --> 01:37:45,139
built so that's pretty cool that's

2418
01:37:43,130 --> 01:37:47,120
basically how I start when I'm thinking

2419
01:37:45,140 --> 01:37:49,370
well what do I want to start with how do

2420
01:37:47,120 --> 01:37:50,809
I normally start the program you'll have

2421
01:37:49,370 --> 01:37:53,059
seen that I generally use

2422
01:37:50,810 --> 01:37:55,010
windows are type it as a run command but

2423
01:37:53,060 --> 01:37:57,500
you don't have to do that you can do

2424
01:37:55,010 --> 01:37:59,780
other things to start it but then once

2425
01:37:57,500 --> 01:38:02,270
that program started how do i hook it

2426
01:37:59,780 --> 01:38:05,240
and that's what I'm using using the

2427
01:38:02,270 --> 01:38:07,040
class title to say send keep active

2428
01:38:05,240 --> 01:38:09,200
these two things are pretty much the

2429
01:38:07,040 --> 01:38:11,650
glue of that Windows management that

2430
01:38:09,200 --> 01:38:14,120
they're gonna wait for that to appear

2431
01:38:11,650 --> 01:38:16,190
and once it appears it's gonna specify

2432
01:38:14,120 --> 01:38:18,380
that that is the active window and then

2433
01:38:16,190 --> 01:38:19,820
it will send commands through that but

2434
01:38:18,380 --> 01:38:24,800
what's cool is that all of these buttons

2435
01:38:19,820 --> 01:38:26,719
also have classes as well controls you

2436
01:38:24,800 --> 01:38:28,820
can see that there has a class of button

2437
01:38:26,720 --> 01:38:32,060
and you can go through you can even

2438
01:38:28,820 --> 01:38:34,429
signature on visible texts or attributes

2439
01:38:32,060 --> 01:38:36,350
it gets quite specific in what you want

2440
01:38:34,430 --> 01:38:39,680
to click and you can send the click

2441
01:38:36,350 --> 01:38:42,290
command for that so that's quite cool

2442
01:38:39,680 --> 01:38:44,720
but this our old open is where the

2443
01:38:42,290 --> 01:38:49,010
problem is down here because I'm sending

2444
01:38:44,720 --> 01:38:51,920
that as a keystroke to make sure that it

2445
01:38:49,010 --> 01:38:55,280
opens it automatically but I think I'm

2446
01:38:51,920 --> 01:38:57,830
wrong if you just hit enter it does it

2447
01:38:55,280 --> 01:39:02,990
anyway so I don't need to account for

2448
01:38:57,830 --> 01:39:04,940
that sending of old oh I don't need to

2449
01:39:02,990 --> 01:39:08,929
account for that keystroke because enter

2450
01:39:04,940 --> 01:39:11,750
will do it for me which which might be

2451
01:39:08,930 --> 01:39:13,070
better to be honest so I think that's

2452
01:39:11,750 --> 01:39:14,390
the solution to that problem that at

2453
01:39:13,070 --> 01:39:18,740
least you can see that's a life buggy

2454
01:39:14,390 --> 01:39:20,390
anyway so I think at that point let's

2455
01:39:18,740 --> 01:39:21,950
make some sheep all that actually move

2456
01:39:20,390 --> 01:39:26,180
around a little bit connect to remote

2457
01:39:21,950 --> 01:39:27,650
desktop servers SSH to things you know

2458
01:39:26,180 --> 01:39:29,870
and then we can spend some time looking

2459
01:39:27,650 --> 01:39:32,080
at how you can potentially build your

2460
01:39:29,870 --> 01:39:34,220
own modules how the JSON profile works

2461
01:39:32,080 --> 01:39:38,059
and how you can do cool things like

2462
01:39:34,220 --> 01:39:39,710
drive karlie as well because I somebody

2463
01:39:38,060 --> 01:39:43,040
said to me well how do I actually make

2464
01:39:39,710 --> 01:39:45,680
it attack so well you could drive karlie

2465
01:39:43,040 --> 01:39:49,269
over SSH that's one solution because

2466
01:39:45,680 --> 01:39:52,100
Metasploit has RC files and stuff that

2467
01:39:49,270 --> 01:39:55,280
would work but with the advent of this

2468
01:39:52,100 --> 01:39:57,260
world where you can run limits with

2469
01:39:55,280 --> 01:39:59,240
inside Windows containers which are

2470
01:39:57,260 --> 01:40:01,760
essentially Windows GUI controls I've

2471
01:39:59,240 --> 01:40:03,559
now got solutions where you can install

2472
01:40:01,760 --> 01:40:05,870
karlie on Windows

2473
01:40:03,560 --> 01:40:07,790
and then drive Carly to attack other

2474
01:40:05,870 --> 01:40:11,630
things so that might be like you want to

2475
01:40:07,790 --> 01:40:13,040
spray for MS 1710 and you want to

2476
01:40:11,630 --> 01:40:15,470
literally trigger that across a network

2477
01:40:13,040 --> 01:40:19,070
segment at some point in a couple of

2478
01:40:15,470 --> 01:40:21,760
days from what constitutes a malicious

2479
01:40:19,070 --> 01:40:24,230
box so at that point we're not

2480
01:40:21,760 --> 01:40:26,000
automating attack but we are thinking of

2481
01:40:24,230 --> 01:40:28,610
ways that we can create even more

2482
01:40:26,000 --> 01:40:30,710
realistic attack traffic to signature

2483
01:40:28,610 --> 01:40:32,540
off so I think let's get some SSH going

2484
01:40:30,710 --> 01:40:35,480
around and see if you can do that and

2485
01:40:32,540 --> 01:40:40,160
then I'll show you some some more funky

2486
01:40:35,480 --> 01:40:42,589
stuff scream if you want any help I can

2487
01:40:40,160 --> 01:40:45,530
give the IP addresses of things that you

2488
01:40:42,590 --> 01:40:49,430
can SSH to directly from where you are

2489
01:40:45,530 --> 01:40:51,980
now there's a couple of Kali boxes in

2490
01:40:49,430 --> 01:40:54,710
the public as well so there's one on 7c

2491
01:40:51,980 --> 01:40:57,379
there's one on 69 their tour so if you

2492
01:40:54,710 --> 01:40:59,830
wanted to SSH to those then you could

2493
01:40:57,380 --> 01:41:03,280
use those to then start searching

2494
01:40:59,830 --> 01:41:06,920
through bear in mind that it needs

2495
01:41:03,280 --> 01:41:08,800
windows so in terms of using all to it

2496
01:41:06,920 --> 01:41:13,040
you start with a Windows box there is no

2497
01:41:08,800 --> 01:41:15,740
concept of running a sheeple on linux

2498
01:41:13,040 --> 01:41:17,690
directly because it's a it uses windows

2499
01:41:15,740 --> 01:41:18,349
api is under the hood so that's never

2500
01:41:17,690 --> 01:41:20,690
gonna happen

2501
01:41:18,350 --> 01:41:22,880
but this came about because somebody was

2502
01:41:20,690 --> 01:41:25,099
like well I want to be able to control

2503
01:41:22,880 --> 01:41:27,080
Linux and run things around and I went

2504
01:41:25,100 --> 01:41:29,060
well maybe SSH would be a good solution

2505
01:41:27,080 --> 01:41:32,870
so at this point anything that you can

2506
01:41:29,060 --> 01:41:35,060
do through SSH pivoting port forwarding

2507
01:41:32,870 --> 01:41:36,920
all that sort of stuff that you know how

2508
01:41:35,060 --> 01:41:45,310
to do yourselves you can make a sheep

2509
01:41:36,920 --> 01:41:48,040
will do because you could type it and

2510
01:41:45,310 --> 01:41:52,480
one's here Fortis Network SSH - Fortis

2511
01:41:48,040 --> 01:41:56,530
Network SSH one so 68 and 67 and there's

2512
01:41:52,480 --> 01:42:00,040
also a dev one which is in a different

2513
01:41:56,530 --> 01:42:01,210
network range which should be route Abul

2514
01:42:00,040 --> 01:42:05,110
from where you are are so you should be

2515
01:42:01,210 --> 01:42:06,760
able to get to that one or we can set it

2516
01:42:05,110 --> 01:42:09,190
up so that you can pivot through them so

2517
01:42:06,760 --> 01:42:10,510
you could SSH to one and then send SSH

2518
01:42:09,190 --> 01:42:31,450
commands through to another one and

2519
01:42:10,510 --> 01:42:33,810
pivot through that way bond out no no

2520
01:42:31,450 --> 01:42:35,830
that's a bug that's a that's a good bug

2521
01:42:33,810 --> 01:42:53,320
so what does that want for that you were

2522
01:42:35,830 --> 01:42:54,850
using the run command yeah so the run

2523
01:42:53,320 --> 01:42:58,360
command is literally what you think it

2524
01:42:54,850 --> 01:43:00,940
is rather than using run to then spawn a

2525
01:42:58,360 --> 01:43:02,950
process it's just whatever you type in

2526
01:43:00,940 --> 01:43:04,330
that run field it will it will send

2527
01:43:02,950 --> 01:43:08,110
which is good for the responder stuff

2528
01:43:04,330 --> 01:43:23,650
where you can type in correct UNC's and

2529
01:43:08,110 --> 01:43:27,089
things respond to hashes etc oh so what

2530
01:43:23,650 --> 01:43:27,089
did you do at this point sub task list

2531
01:43:31,050 --> 01:44:01,000
boom thanks very much

2532
01:43:34,930 --> 01:44:01,000
bug live on camera as well perfect so

2533
01:44:48,420 --> 01:44:52,200
I think that actually comes from higher

2534
01:44:50,250 --> 01:44:55,200
up so if you look at like the output for

2535
01:44:52,200 --> 01:44:58,559
run command here you don't see that

2536
01:44:55,200 --> 01:45:02,940
command in the the list so sub sub task

2537
01:44:58,560 --> 01:45:04,650
and the score list is not is not defined

2538
01:45:02,940 --> 01:45:07,799
as the command so you've got the new and

2539
01:45:04,650 --> 01:45:09,179
CMD and assigned and complete but you

2540
01:45:07,800 --> 01:45:11,880
don't see that command and that's

2541
01:45:09,180 --> 01:45:17,730
because of the inheritance on this one

2542
01:45:11,880 --> 01:45:25,610
like base CMD so if we go into IRAs it

2543
01:45:17,730 --> 01:45:25,610
utils I think where is it

2544
01:45:33,719 --> 01:45:44,270
bass bass CMD so because it's inheriting

2545
01:45:38,790 --> 01:45:47,370
than that sub task sub task supported

2546
01:45:44,270 --> 01:45:50,100
comes through from here as a command

2547
01:45:47,370 --> 01:45:53,550
option so I'll probably check to see

2548
01:45:50,100 --> 01:45:55,350
yeah it's just passing so I'm not

2549
01:45:53,550 --> 01:45:56,790
actually doing anything with it so it's

2550
01:45:55,350 --> 01:45:58,380
expecting something that it's not

2551
01:45:56,790 --> 01:46:00,269
getting and then it's bombing so that's

2552
01:45:58,380 --> 01:46:01,949
cool thank you that might at least I can

2553
01:46:00,270 --> 01:46:04,980
fix it there and then it will fix fit

2554
01:46:01,949 --> 01:46:07,110
for everything basically which is kind

2555
01:46:04,980 --> 01:46:08,669
of like before if I found a bug because

2556
01:46:07,110 --> 01:46:11,610
I'd sort of replicated this cookie

2557
01:46:08,670 --> 01:46:13,260
cutter approach I have to go fix in like

2558
01:46:11,610 --> 01:46:14,580
three hundred different places and it

2559
01:46:13,260 --> 01:46:17,219
was really annoying and I was like this

2560
01:46:14,580 --> 01:46:19,980
is just not going to work so that's cool

2561
01:46:17,219 --> 01:46:21,480
why not I'll submit it as an issue or

2562
01:46:19,980 --> 01:46:26,509
you can submit it as an issue that you

2563
01:46:21,480 --> 01:46:26,509
but I'll submit it and then get fixed

2564
01:46:34,070 --> 01:46:39,449
where it does work actually if you're

2565
01:46:37,100 --> 01:46:43,350
interested let's discard that and I'll

2566
01:46:39,449 --> 01:46:47,160
show you how it works with RDP which is

2567
01:46:43,350 --> 01:46:48,780
why you have to tart the subtasks and so

2568
01:46:47,160 --> 01:46:52,199
remote desktop is by far the most

2569
01:46:48,780 --> 01:46:53,820
complicated and you have the same sort

2570
01:46:52,199 --> 01:46:59,129
of things that you define credentials

2571
01:46:53,820 --> 01:47:14,699
and you define what's going on just do

2572
01:46:59,130 --> 01:47:15,719
anything just and that's where it

2573
01:47:14,699 --> 01:47:17,879
becomes applicable

2574
01:47:15,719 --> 01:47:19,620
so inside remote desktop you can say are

2575
01:47:17,880 --> 01:47:23,400
call I've just done the initial

2576
01:47:19,620 --> 01:47:27,840
credentials so there's nothing there but

2577
01:47:23,400 --> 01:47:30,330
you've got show credentials so I've done

2578
01:47:27,840 --> 01:47:31,980
the initial this is how you make a

2579
01:47:30,330 --> 01:47:36,960
remote desktop connection to something

2580
01:47:31,980 --> 01:47:39,419
but then if you if you call subtasks sub

2581
01:47:36,960 --> 01:47:42,570
tasks even you basically get a replica

2582
01:47:39,420 --> 01:47:44,820
of of everything that you've had before

2583
01:47:42,570 --> 01:47:46,259
and you can see remote desktop is there

2584
01:47:44,820 --> 01:47:48,840
as an option so

2585
01:47:46,260 --> 01:47:50,550
this idea if you create a module and

2586
01:47:48,840 --> 01:47:53,100
then it should not only be available

2587
01:47:50,550 --> 01:47:55,770
locally you should be able to create it

2588
01:47:53,100 --> 01:47:58,020
somewhere else what and and because of

2589
01:47:55,770 --> 01:48:01,679
that you can actually chain remote

2590
01:47:58,020 --> 01:48:04,530
desktop so you can go RDP to this then

2591
01:48:01,679 --> 01:48:07,020
RDP to that an RDP to that it gets a bit

2592
01:48:04,530 --> 01:48:09,480
crazy like finding out which keyboard

2593
01:48:07,020 --> 01:48:13,170
you're eventually on as to what gets

2594
01:48:09,480 --> 01:48:14,639
sent but that is possible I'll probably

2595
01:48:13,170 --> 01:48:15,929
have to limit the levels of that but

2596
01:48:14,640 --> 01:48:18,960
that's basically how you do it so I

2597
01:48:15,929 --> 01:48:22,650
would then say sub task command shell

2598
01:48:18,960 --> 01:48:24,710
and now you can see I mean this is all

2599
01:48:22,650 --> 01:48:27,480
fresh right so it might need people's

2600
01:48:24,710 --> 01:48:29,520
opinions as to how how well it works but

2601
01:48:27,480 --> 01:48:32,428
essentially we're creating a sub task

2602
01:48:29,520 --> 01:48:34,170
inside it which is exactly the same

2603
01:48:32,429 --> 01:48:38,040
thing is calling itself again

2604
01:48:34,170 --> 01:48:39,690
so I'm now making a new one and I would

2605
01:48:38,040 --> 01:48:47,010
just use the module in exactly the same

2606
01:48:39,690 --> 01:48:50,910
way yeah and then when some finished I'm

2607
01:48:47,010 --> 01:48:54,570
back again and now you can see that

2608
01:48:50,910 --> 01:48:55,949
inside there it's completed so if I

2609
01:48:54,570 --> 01:49:00,330
actually complete this one for you

2610
01:48:55,949 --> 01:49:07,620
you'll see how it works complete back

2611
01:49:00,330 --> 01:49:10,850
finish alright poke poke poke so you can

2612
01:49:07,620 --> 01:49:13,620
see like sub tasking and stuff it gets

2613
01:49:10,850 --> 01:49:17,940
pretty complicated to understand where

2614
01:49:13,620 --> 01:49:19,559
you are but there's the bug one so how

2615
01:49:17,940 --> 01:49:21,360
this is different now is that you don't

2616
01:49:19,560 --> 01:49:23,130
see that command shell that I've just

2617
01:49:21,360 --> 01:49:26,670
assigned you don't see it as a global

2618
01:49:23,130 --> 01:49:27,960
task anymore what you do see is it goes

2619
01:49:26,670 --> 01:49:29,730
through the loop and the only thing that

2620
01:49:27,960 --> 01:49:32,880
is calling at the moment is RDP but

2621
01:49:29,730 --> 01:49:37,739
inside RDP what it's done is it's then

2622
01:49:32,880 --> 01:49:42,000
written out the sub task stuff for all

2623
01:49:37,739 --> 01:49:43,889
the command shell interactions so I'm

2624
01:49:42,000 --> 01:49:46,800
explaining it now and even now I'm like

2625
01:49:43,890 --> 01:49:47,850
what it it just kind of jumps around but

2626
01:49:46,800 --> 01:49:50,760
essentially that's what we're doing

2627
01:49:47,850 --> 01:49:52,380
inside there we are calling the same

2628
01:49:50,760 --> 01:49:54,840
function that we've written here with IP

2629
01:49:52,380 --> 01:49:56,670
config it just gets called in in the

2630
01:49:54,840 --> 01:49:59,270
context of remote desktop that makes

2631
01:49:56,670 --> 01:50:02,000
sense once you write them more and more

2632
01:49:59,270 --> 01:50:03,800
you'll see that I guess there's going to

2633
01:50:02,000 --> 01:50:05,480
be a point where subtasks are applicable

2634
01:50:03,800 --> 01:50:06,920
in remote desktop and I'll probably have

2635
01:50:05,480 --> 01:50:08,509
to put in some flags to go you can't

2636
01:50:06,920 --> 01:50:14,140
really use this anywhere else but for

2637
01:50:08,510 --> 01:50:14,140
now it's a pretty bulletproof solution

2638
01:50:18,700 --> 01:50:33,230
structure is their dispersion and it's

2639
01:50:21,410 --> 01:50:41,120
very defined format and stuff so I can

2640
01:50:33,230 --> 01:50:44,450
see a lot of it that's a success I like

2641
01:50:41,120 --> 01:50:48,650
double action so that like that when

2642
01:50:44,450 --> 01:50:52,300
actually slightly words like sorry do

2643
01:50:48,650 --> 01:50:55,879
that much of a setter etcetera

2644
01:50:52,300 --> 01:51:03,290
Mississippi all tasks are simple and

2645
01:50:55,880 --> 01:51:07,160
really how I search strategy see very

2646
01:51:03,290 --> 01:51:11,450
happily the city squash it slow examples

2647
01:51:07,160 --> 01:51:22,519
of how Jesus quiet direct is Jose

2648
01:51:11,450 --> 01:51:26,080
example it's looking lovely dress and so

2649
01:51:22,520 --> 01:51:32,210
much coming is very tiring this morning

2650
01:51:26,080 --> 01:51:36,620
I was my appreciation bid below our area

2651
01:51:32,210 --> 01:51:50,360
that's most project of it most part you

2652
01:51:36,620 --> 01:51:55,040
know what so what will requests or gonna

2653
01:51:50,360 --> 01:52:00,370
be what it is to the contrary I know I

2654
01:51:55,040 --> 01:52:00,370
would use it but how how I said is going

2655
01:52:04,090 --> 01:52:07,090
valuations

2656
01:52:07,539 --> 01:52:14,610
so they rush

2657
01:52:09,940 --> 01:52:14,610
[Applause]

