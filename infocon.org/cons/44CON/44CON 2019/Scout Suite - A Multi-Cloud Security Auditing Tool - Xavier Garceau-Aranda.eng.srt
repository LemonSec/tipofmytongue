1
00:00:03,220 --> 00:00:09,290
all right hello everyone thank you for

2
00:00:06,319 --> 00:00:11,540
attending my talk my name is Xavier and

3
00:00:09,290 --> 00:00:14,509
today we'll be talking about scout suite

4
00:00:11,540 --> 00:00:16,279
a multi cloud security auditing tool by

5
00:00:14,510 --> 00:00:19,519
show of hands can I know who has worked

6
00:00:16,279 --> 00:00:22,640
before with AWS Amazon Web Services

7
00:00:19,519 --> 00:00:25,668
buzzer Microsoft Azure and Google cloud

8
00:00:22,640 --> 00:00:28,369
platform GCP alright those numbers

9
00:00:25,669 --> 00:00:31,159
pretty much represent what people

10
00:00:28,369 --> 00:00:33,980
usually use all right who has heard of

11
00:00:31,159 --> 00:00:35,239
scout suite before all right more or

12
00:00:33,980 --> 00:00:36,828
less the same people have heard of

13
00:00:35,239 --> 00:00:39,620
Scouts we then people who use GCP which

14
00:00:36,829 --> 00:00:41,660
is pretty good all right so scout suite

15
00:00:39,620 --> 00:00:43,550
is a open source multi-cloud

16
00:00:41,660 --> 00:00:45,910
configuration review tool which

17
00:00:43,550 --> 00:00:48,500
basically helps you add it to the

18
00:00:45,910 --> 00:00:51,849
security posture of cloud environments

19
00:00:48,500 --> 00:00:54,679
what it does is it interacts with the

20
00:00:51,850 --> 00:00:56,600
API is exposed by cloud providers

21
00:00:54,679 --> 00:00:59,390
basically grabs a bunch of information

22
00:00:56,600 --> 00:01:00,829
through those api's and then presents

23
00:00:59,390 --> 00:01:04,370
you with a report that you can then

24
00:01:00,829 --> 00:01:06,590
review to see what has been flying so as

25
00:01:04,370 --> 00:01:09,650
I said it uses the providers API so

26
00:01:06,590 --> 00:01:13,700
everything is authenticated it abides by

27
00:01:09,650 --> 00:01:14,930
the let's say the policies of each of

28
00:01:13,700 --> 00:01:16,189
the cloud provider so you don't have to

29
00:01:14,930 --> 00:01:19,990
advise them that you're running these

30
00:01:16,189 --> 00:01:22,429
this tool currently we support AWS

31
00:01:19,990 --> 00:01:24,829
Microsoft Azure and Google cloud

32
00:01:22,430 --> 00:01:26,930
platform and a couple of months ago we

33
00:01:24,829 --> 00:01:29,240
released support for Alibaba cloud as

34
00:01:26,930 --> 00:01:30,649
well as Oracle cloud infrastructure one

35
00:01:29,240 --> 00:01:32,780
of the reasons to support these cloud

36
00:01:30,649 --> 00:01:34,850
providers they're not very much used

37
00:01:32,780 --> 00:01:38,360
well otherwise used a bit more in Asia

38
00:01:34,850 --> 00:01:39,979
was kind of to showcase that scout's

39
00:01:38,360 --> 00:01:42,020
architecture really helped supporting

40
00:01:39,979 --> 00:01:44,390
what we call the multi cloud hard I'm

41
00:01:42,020 --> 00:01:47,560
pretty elegantly we'll talk a bit more

42
00:01:44,390 --> 00:01:50,210
about this throughout the presentation

43
00:01:47,560 --> 00:01:52,369
the tool some of you might know of it it

44
00:01:50,210 --> 00:01:54,619
was originally called Scout 2 which was

45
00:01:52,369 --> 00:01:56,000
a project that started in 2013 so quite

46
00:01:54,619 --> 00:02:00,170
a long time ago when really the cloud

47
00:01:56,000 --> 00:02:03,649
was in its infancy in terms of adoption

48
00:02:00,170 --> 00:02:06,049
so Scout 2 was specifically for AWS so

49
00:02:03,649 --> 00:02:09,949
when we moved toward the multi cloud we

50
00:02:06,049 --> 00:02:13,090
really really fun stuff had changed most

51
00:02:09,949 --> 00:02:14,780
my say more than half of the codebase

52
00:02:13,090 --> 00:02:17,200
changed

53
00:02:14,780 --> 00:02:20,720
to support that the tool is released

54
00:02:17,200 --> 00:02:22,670
under gplv2 it's received a bunch of

55
00:02:20,720 --> 00:02:26,270
contributions on github more than 24

56
00:02:22,670 --> 00:02:28,040
people have contributed and if you're

57
00:02:26,270 --> 00:02:30,710
interested in more details after the

58
00:02:28,040 --> 00:02:34,850
talk on github the wiki has quite a lot

59
00:02:30,710 --> 00:02:38,270
of information all right so what's the

60
00:02:34,850 --> 00:02:40,489
multi cloud paradigm well initially AWS

61
00:02:38,270 --> 00:02:43,340
was really the only cool kid on the

62
00:02:40,490 --> 00:02:46,070
block everyone was using it but through

63
00:02:43,340 --> 00:02:48,560
time the last two to four years I would

64
00:02:46,070 --> 00:02:50,930
say through with the rise of Microsoft

65
00:02:48,560 --> 00:02:52,940
Azure with GCP coming out with a bunch

66
00:02:50,930 --> 00:02:55,370
more services and functionalities we've

67
00:02:52,940 --> 00:02:56,840
really come to this place where many

68
00:02:55,370 --> 00:02:58,850
organizations especially the large

69
00:02:56,840 --> 00:03:00,080
organizations are no longer relying on a

70
00:02:58,850 --> 00:03:01,570
single cloud provider but are

71
00:03:00,080 --> 00:03:05,150
distributing their sort of their

72
00:03:01,570 --> 00:03:08,090
infrastructure and their platforms on a

73
00:03:05,150 --> 00:03:09,920
number of different cloud providers

74
00:03:08,090 --> 00:03:11,930
right there's really a lot of reasons

75
00:03:09,920 --> 00:03:13,790
for this one of the big ones as always

76
00:03:11,930 --> 00:03:15,380
is costs let's say you have an

77
00:03:13,790 --> 00:03:17,630
organization that relies heavily on

78
00:03:15,380 --> 00:03:19,850
storage of buckets the whole application

79
00:03:17,630 --> 00:03:22,370
is hosted in AWS but then you realize

80
00:03:19,850 --> 00:03:24,049
well moving the storage buckets to this

81
00:03:22,370 --> 00:03:28,790
other provider is gonna cut our costs by

82
00:03:24,050 --> 00:03:31,070
70% which is quite possible considering

83
00:03:28,790 --> 00:03:33,350
a lot of these similar services work in

84
00:03:31,070 --> 00:03:35,600
a similar fashion there's not that much

85
00:03:33,350 --> 00:03:37,010
of a lock-in into a specific service for

86
00:03:35,600 --> 00:03:39,709
from a specific cloud provider like a

87
00:03:37,010 --> 00:03:41,780
storage bucket in AWS works pretty much

88
00:03:39,709 --> 00:03:43,549
the same way as in Azure and DCP so if

89
00:03:41,780 --> 00:03:45,560
the functionalities are the same and the

90
00:03:43,549 --> 00:03:47,830
cost is lower a lot of organizations are

91
00:03:45,560 --> 00:03:50,209
going to choose the lowest costs right

92
00:03:47,830 --> 00:03:52,850
another big one is always family already

93
00:03:50,209 --> 00:03:54,709
if it's a side project you're doing for

94
00:03:52,850 --> 00:03:56,120
fun well often you'll go towards

95
00:03:54,709 --> 00:03:58,040
something already know a lot of

96
00:03:56,120 --> 00:04:00,019
organizations often work with this model

97
00:03:58,040 --> 00:04:02,090
let's say I have a team and the team has

98
00:04:00,019 --> 00:04:04,459
a lot of experience with Azure well it

99
00:04:02,090 --> 00:04:05,810
might be worth telling them to build

100
00:04:04,459 --> 00:04:08,900
whatever product you're building with

101
00:04:05,810 --> 00:04:12,170
Azure instead of spending a month to get

102
00:04:08,900 --> 00:04:15,320
get to know AWS right another one is

103
00:04:12,170 --> 00:04:17,599
offering depending on the cloud provider

104
00:04:15,320 --> 00:04:19,358
you're using these services available to

105
00:04:17,600 --> 00:04:22,010
you will vary

106
00:04:19,358 --> 00:04:23,419
obviously all cloud providers are trying

107
00:04:22,010 --> 00:04:24,860
to get the same point where they're

108
00:04:23,419 --> 00:04:26,330
offering the same services well they're

109
00:04:24,860 --> 00:04:27,800
trying to offer the best services but

110
00:04:26,330 --> 00:04:28,139
it's pretty much a rat race where

111
00:04:27,800 --> 00:04:31,199
everyone

112
00:04:28,139 --> 00:04:33,270
trying to put out the same stuff more or

113
00:04:31,199 --> 00:04:37,169
less at the same time and then the final

114
00:04:33,270 --> 00:04:39,779
one is resilience you really get pretty

115
00:04:37,169 --> 00:04:41,520
good resilience by using a single cloud

116
00:04:39,779 --> 00:04:43,650
provider but distributing your resources

117
00:04:41,520 --> 00:04:44,729
through let's say regions but obviously

118
00:04:43,650 --> 00:04:46,498
if you're using multiple cloud providers

119
00:04:44,729 --> 00:04:48,719
that have completely separates

120
00:04:46,499 --> 00:04:51,870
infrastructures you have a bit more real

121
00:04:48,719 --> 00:04:55,289
resilience there right so and you see

122
00:04:51,870 --> 00:04:57,499
what we've been seeing in the last two

123
00:04:55,289 --> 00:05:00,210
or three years is that organizations

124
00:04:57,499 --> 00:05:02,340
security posture when it comes to AWS

125
00:05:00,210 --> 00:05:04,409
has it really been improving greatly but

126
00:05:02,340 --> 00:05:07,349
obviously as organizations have started

127
00:05:04,409 --> 00:05:09,270
also moving away from maybe EWS and also

128
00:05:07,349 --> 00:05:12,029
starting deploying resources in Azure

129
00:05:09,270 --> 00:05:14,008
and Google cloud and other cloud

130
00:05:12,029 --> 00:05:16,289
providers well obviously they have to do

131
00:05:14,009 --> 00:05:18,539
the whole process of learning security

132
00:05:16,289 --> 00:05:21,839
again and implementing security again so

133
00:05:18,539 --> 00:05:23,099
what we've seen is that by organizations

134
00:05:21,839 --> 00:05:25,039
starting to adopt the multi cloud

135
00:05:23,099 --> 00:05:27,748
paradigm their security posture has

136
00:05:25,039 --> 00:05:30,930
taken let's say a step back so hopefully

137
00:05:27,749 --> 00:05:34,319
with tools such as Scout we can help

138
00:05:30,930 --> 00:05:36,689
them better secure their environments

139
00:05:34,319 --> 00:05:40,620
and help us assess their environments

140
00:05:36,689 --> 00:05:42,210
also all right so cloud providers

141
00:05:40,620 --> 00:05:43,680
similarities once you start looking at a

142
00:05:42,210 --> 00:05:45,089
lot of cloud providers how they're

143
00:05:43,680 --> 00:05:46,620
implemented what are the functionalities

144
00:05:45,089 --> 00:05:48,389
that they expose you start realizing

145
00:05:46,620 --> 00:05:49,800
well everything is pretty much the same

146
00:05:48,389 --> 00:05:52,800
when you come down and when I come down

147
00:05:49,800 --> 00:05:55,110
comes down to it the big one as always

148
00:05:52,800 --> 00:05:56,399
is Identity and Access Management so any

149
00:05:55,110 --> 00:05:58,830
cloud provider is going to allow you to

150
00:05:56,399 --> 00:06:00,449
create users great groups have some kind

151
00:05:58,830 --> 00:06:02,460
of programmatic identities so that your

152
00:06:00,449 --> 00:06:04,889
code can authenticate to the cloud

153
00:06:02,460 --> 00:06:07,138
provider and access other services so in

154
00:06:04,889 --> 00:06:09,719
its roles you have service principles in

155
00:06:07,139 --> 00:06:11,669
deser you have service accounts in DCP

156
00:06:09,719 --> 00:06:13,339
and obviously you always have some sort

157
00:06:11,669 --> 00:06:16,830
of policies or permissions that allow

158
00:06:13,339 --> 00:06:18,990
all of these identities to carry out

159
00:06:16,830 --> 00:06:21,659
actions and interact with the different

160
00:06:18,990 --> 00:06:24,060
services right cloud providers generally

161
00:06:21,659 --> 00:06:26,580
segregate resources through regions it

162
00:06:24,060 --> 00:06:28,620
can be closer in its aggregate closer in

163
00:06:26,580 --> 00:06:30,449
relationships or more of a segregation

164
00:06:28,620 --> 00:06:32,669
but that's common for all cloud

165
00:06:30,449 --> 00:06:34,110
providers mostly because the region is

166
00:06:32,669 --> 00:06:36,508
kind of an abstraction of where the

167
00:06:34,110 --> 00:06:38,459
actual data centers are you also have

168
00:06:36,509 --> 00:06:41,030
virtual private clouds throughout all

169
00:06:38,459 --> 00:06:42,410
cloud providers it's basically

170
00:06:41,030 --> 00:06:44,960
network where you can deploy resources

171
00:06:42,410 --> 00:06:46,940
nowadays most resources are networked so

172
00:06:44,960 --> 00:06:49,010
you need a way to configure IPs and

173
00:06:46,940 --> 00:06:52,280
firewalls and routing etc right and

174
00:06:49,010 --> 00:06:55,430
resources for all cloud providers the

175
00:06:52,280 --> 00:06:57,440
base unit is a resource anything can be

176
00:06:55,430 --> 00:07:00,950
a resource or a virtual machine a user a

177
00:06:57,440 --> 00:07:03,140
network an IP obviously that allows you

178
00:07:00,950 --> 00:07:04,880
a lot of control over your environment

179
00:07:03,140 --> 00:07:06,710
it also allows them to bill you for

180
00:07:04,880 --> 00:07:11,030
every specific little thing that you're

181
00:07:06,710 --> 00:07:12,590
using and make a lot of money in terms

182
00:07:11,030 --> 00:07:14,330
of services well it's pretty much again

183
00:07:12,590 --> 00:07:15,770
the same for all cloud providers we have

184
00:07:14,330 --> 00:07:18,440
infrastructure as a service you have

185
00:07:15,770 --> 00:07:21,440
platforms as a service software as a

186
00:07:18,440 --> 00:07:23,180
service function as a service they all

187
00:07:21,440 --> 00:07:25,610
have different names for each of these

188
00:07:23,180 --> 00:07:28,550
services but when it comes down to it

189
00:07:25,610 --> 00:07:30,260
they pretty much do the same thing so if

190
00:07:28,550 --> 00:07:31,550
you have virtual machines virtual

191
00:07:30,260 --> 00:07:33,560
machines in the desert are pretty much

192
00:07:31,550 --> 00:07:36,260
the same as a virtual machines in AWS if

193
00:07:33,560 --> 00:07:38,450
you have functions as a service right so

194
00:07:36,260 --> 00:07:40,280
server list computing while in the end

195
00:07:38,450 --> 00:07:42,800
service computing is the same pretty

196
00:07:40,280 --> 00:07:44,929
much everywhere when we come down to the

197
00:07:42,800 --> 00:07:46,640
risks again since you pretty much have

198
00:07:44,930 --> 00:07:50,630
the same structure and the same

199
00:07:46,640 --> 00:07:53,060
functionalities the risks are quite

200
00:07:50,630 --> 00:07:54,860
similar access controls again is one of

201
00:07:53,060 --> 00:07:57,920
the big ones so the big one is first of

202
00:07:54,860 --> 00:07:59,900
all well whether or how your credentials

203
00:07:57,920 --> 00:08:02,150
can be leaked and then what are the

204
00:07:59,900 --> 00:08:03,650
vectors of privilege escalation once

205
00:08:02,150 --> 00:08:05,900
someone has compromised your credentials

206
00:08:03,650 --> 00:08:08,870
the second one is publicly accessible

207
00:08:05,900 --> 00:08:12,169
resources organizations are very much

208
00:08:08,870 --> 00:08:14,120
scared of this one there's been just so

209
00:08:12,170 --> 00:08:16,010
many instances where sensitive

210
00:08:14,120 --> 00:08:19,880
information has been leaked by storage

211
00:08:16,010 --> 00:08:22,099
buckets database backups being publicly

212
00:08:19,880 --> 00:08:23,390
accessible on AWS etc there's been so

213
00:08:22,100 --> 00:08:26,420
many cases and some of them have had

214
00:08:23,390 --> 00:08:28,610
such significant impacts for example the

215
00:08:26,420 --> 00:08:35,060
Capital One breach that happened on a

216
00:08:28,610 --> 00:08:37,070
couple of weeks ago was kind of a an

217
00:08:35,059 --> 00:08:39,530
instance of the first two so it had kind

218
00:08:37,070 --> 00:08:40,880
of an access control issue and then that

219
00:08:39,530 --> 00:08:43,039
allowed resources to be publicly

220
00:08:40,880 --> 00:08:46,730
accessible and then hundreds of millions

221
00:08:43,039 --> 00:08:48,980
of client records were made public so

222
00:08:46,730 --> 00:08:51,260
these issues can really have very

223
00:08:48,980 --> 00:08:53,000
significant impacts on organizations

224
00:08:51,260 --> 00:08:54,110
there's also the case of devi'

225
00:08:53,000 --> 00:08:55,640
development practices

226
00:08:54,110 --> 00:08:57,680
right so when you're using cloud

227
00:08:55,640 --> 00:08:59,689
environments it becomes so easy to

228
00:08:57,680 --> 00:09:02,209
deploy your resources and even really

229
00:08:59,690 --> 00:09:04,519
very vast resources or very vast

230
00:09:02,209 --> 00:09:06,680
environments very quickly that quite

231
00:09:04,519 --> 00:09:10,390
commonly teams especially when they have

232
00:09:06,680 --> 00:09:13,149
more of a DevOps workflow will have a

233
00:09:10,390 --> 00:09:15,370
constant cycles of deploying resources

234
00:09:13,149 --> 00:09:19,040
scratching everything storing from zero

235
00:09:15,370 --> 00:09:22,610
and one of the issues with that is when

236
00:09:19,040 --> 00:09:24,290
you kind of use the you know the age-old

237
00:09:22,610 --> 00:09:25,459
tried into workflow where you start

238
00:09:24,290 --> 00:09:27,620
designing stuff and then the security

239
00:09:25,459 --> 00:09:29,449
team comes in or use everything then

240
00:09:27,620 --> 00:09:31,310
says okay this is fine we can publicly

241
00:09:29,450 --> 00:09:32,510
expose this and then you do it well it

242
00:09:31,310 --> 00:09:33,859
gives you a bit more of an assurance but

243
00:09:32,510 --> 00:09:36,649
when you're when you're constantly

244
00:09:33,860 --> 00:09:39,800
changing your whole infrastructure it

245
00:09:36,649 --> 00:09:42,079
becomes much harder to ensure that on a

246
00:09:39,800 --> 00:09:43,670
Wednesday morning someone didn't start

247
00:09:42,079 --> 00:09:46,279
creating all of these publicly exposed

248
00:09:43,670 --> 00:09:49,310
resources right and then as always you

249
00:09:46,279 --> 00:09:52,820
have the incident response and disaster

250
00:09:49,310 --> 00:09:55,279
recovery which organizations have become

251
00:09:52,820 --> 00:09:56,450
with the years much more capable when it

252
00:09:55,279 --> 00:09:58,189
comes to their own on-site

253
00:09:56,450 --> 00:09:59,540
infrastructures but then when you move

254
00:09:58,190 --> 00:10:01,730
everything to the cloud the paradigm

255
00:09:59,540 --> 00:10:04,069
changes the tools and the approaches

256
00:10:01,730 --> 00:10:06,140
have to change somewhat so the readiness

257
00:10:04,070 --> 00:10:09,560
of organizations to respond to those

258
00:10:06,140 --> 00:10:12,640
situations really has to improve in the

259
00:10:09,560 --> 00:10:14,630
next tunnel year two years decades I

260
00:10:12,640 --> 00:10:15,620
mean a decade will probably do something

261
00:10:14,630 --> 00:10:18,860
else anyway

262
00:10:15,620 --> 00:10:22,370
so we've talked a lot about Scout but

263
00:10:18,860 --> 00:10:25,100
what is or how does Scout actually work

264
00:10:22,370 --> 00:10:26,930
so it's really quite simple it's a

265
00:10:25,100 --> 00:10:29,600
Python based tool so let's say I want to

266
00:10:26,930 --> 00:10:33,170
run it against a AWS account I could

267
00:10:29,600 --> 00:10:35,449
just run Python Scout and then here I'm

268
00:10:33,170 --> 00:10:37,550
giving it a profile this is basically

269
00:10:35,449 --> 00:10:42,380
the same as if you were using the AWS

270
00:10:37,550 --> 00:10:44,439
CLI to run a command against yes yes of

271
00:10:42,380 --> 00:10:44,439
course

272
00:10:44,490 --> 00:10:47,879
[Music]

273
00:10:47,890 --> 00:10:53,480
all right everyone can see yes right

274
00:10:50,540 --> 00:10:57,380
right so it's pretty much the same as if

275
00:10:53,480 --> 00:10:59,930
you were running a command against AWS

276
00:10:57,380 --> 00:11:01,490
CLI if you're running it against GCP

277
00:10:59,930 --> 00:11:03,560
it's pretty much the same so you can use

278
00:11:01,490 --> 00:11:05,329
a user authentication or you can use a

279
00:11:03,560 --> 00:11:07,459
service account if you're running it

280
00:11:05,329 --> 00:11:09,199
against Microsoft Azure again the

281
00:11:07,459 --> 00:11:12,529
you can run it pretty much all of the

282
00:11:09,199 --> 00:11:14,959
authentication strategies provided by

283
00:11:12,529 --> 00:11:16,999
the cloud providers are available

284
00:11:14,959 --> 00:11:19,248
through Scout so then you just run the

285
00:11:16,999 --> 00:11:20,869
scan what I'll do is it it will first

286
00:11:19,249 --> 00:11:22,670
authenticate against the cloud provider

287
00:11:20,869 --> 00:11:24,829
and then it will start fetching the

288
00:11:22,670 --> 00:11:25,699
resources for each of these services

289
00:11:24,829 --> 00:11:27,769
that are supported

290
00:11:25,699 --> 00:11:29,269
once it's done grabbing all of that

291
00:11:27,769 --> 00:11:32,209
information it'll kind of do some

292
00:11:29,269 --> 00:11:35,480
processing to analyze it and then what

293
00:11:32,209 --> 00:11:39,229
it does is it generates a report which

294
00:11:35,480 --> 00:11:43,279
is basically a static HTML report which

295
00:11:39,230 --> 00:11:46,610
you can view in your browser so again

296
00:11:43,279 --> 00:11:48,679
this is a multi cloud tool and one of

297
00:11:46,610 --> 00:11:50,569
the things that we really strive to do

298
00:11:48,679 --> 00:11:51,679
is ensure that whatever the cloud

299
00:11:50,569 --> 00:11:53,719
provider you're scanning we're

300
00:11:51,679 --> 00:11:54,259
presenting the information in a similar

301
00:11:53,720 --> 00:11:55,819
fashion

302
00:11:54,259 --> 00:11:59,089
so for example in this case this is a

303
00:11:55,819 --> 00:12:01,368
report for Amazon Web Services but then

304
00:11:59,089 --> 00:12:03,410
we have here a report for Microsoft

305
00:12:01,369 --> 00:12:05,899
d'azyr we have here another report for

306
00:12:03,410 --> 00:12:07,009
Google cloud platform so you can see

307
00:12:05,899 --> 00:12:10,610
that the structure is really pretty much

308
00:12:07,009 --> 00:12:14,209
the same and we have another one for

309
00:12:10,610 --> 00:12:15,350
Alibaba cloud as well as for Oracle

310
00:12:14,209 --> 00:12:18,589
cloud infrastructure if we go back to

311
00:12:15,350 --> 00:12:20,119
the AWS one so basically the main

312
00:12:18,589 --> 00:12:21,860
dashboard is just a list of all the

313
00:12:20,119 --> 00:12:25,339
services in this case we've only scanned

314
00:12:21,860 --> 00:12:26,959
the cloud formation and I am service and

315
00:12:25,339 --> 00:12:28,730
you can see that we have a certain

316
00:12:26,959 --> 00:12:30,079
amount of resources we have a certain

317
00:12:28,730 --> 00:12:32,540
amount of rules that are used because

318
00:12:30,079 --> 00:12:34,160
the Scout is a rule-based tool so you

319
00:12:32,540 --> 00:12:35,689
have a bunch of rules and you can create

320
00:12:34,160 --> 00:12:39,139
rule sets if you're only interested in

321
00:12:35,689 --> 00:12:41,149
specific types of issues in this case if

322
00:12:39,139 --> 00:12:43,249
we focus on Identity and Access

323
00:12:41,149 --> 00:12:44,929
Management we can see that we hadn't

324
00:12:43,249 --> 00:12:49,639
fight 48 resources so those will be

325
00:12:44,929 --> 00:12:53,839
users groups roles manage policies etc

326
00:12:49,639 --> 00:12:57,619
we have 32 rules written for the I am

327
00:12:53,839 --> 00:13:00,889
service and out of those 32 rules we had

328
00:12:57,619 --> 00:13:03,049
11 resources that were flagged and the

329
00:13:00,889 --> 00:13:05,119
total was 233 checks anyway so if we

330
00:13:03,049 --> 00:13:07,069
drill into Identity and Access

331
00:13:05,119 --> 00:13:09,259
Management then these are the actual

332
00:13:07,069 --> 00:13:12,649
rules we can see some of them were

333
00:13:09,259 --> 00:13:14,779
flagged as really a important finding

334
00:13:12,649 --> 00:13:17,329
whereas some of them are maybe a little

335
00:13:14,779 --> 00:13:20,779
bit less critical or should be looked at

336
00:13:17,329 --> 00:13:22,349
into more detail to assess the the risk

337
00:13:20,779 --> 00:13:25,350
rating of

338
00:13:22,350 --> 00:13:26,610
you can see most issues have

339
00:13:25,350 --> 00:13:28,920
descriptions this is one thing we're

340
00:13:26,610 --> 00:13:30,480
going to try to improve so for example

341
00:13:28,920 --> 00:13:33,240
in this case what was flagged was that

342
00:13:30,480 --> 00:13:34,829
there was a cross alias account access

343
00:13:33,240 --> 00:13:37,529
that was set up but that wasn't

344
00:13:34,829 --> 00:13:41,849
requiring external ID or the for a user

345
00:13:37,529 --> 00:13:44,250
to have MFA enable right if we click on

346
00:13:41,850 --> 00:13:45,930
defining what we'll see is the different

347
00:13:44,250 --> 00:13:48,839
resources that were affected by this

348
00:13:45,930 --> 00:13:50,489
specific issue if I go on show all it'll

349
00:13:48,839 --> 00:13:52,350
basically show all of the iron roles

350
00:13:50,490 --> 00:13:56,540
within the account but this aesthetic

351
00:13:52,350 --> 00:13:59,100
finding only flagged these two these two

352
00:13:56,540 --> 00:14:01,920
resources one of the important things

353
00:13:59,100 --> 00:14:04,950
about the scout report is that when

354
00:14:01,920 --> 00:14:08,010
let's say you have an issue in AWS with

355
00:14:04,950 --> 00:14:09,630
a resource quite often you'll have to go

356
00:14:08,010 --> 00:14:11,760
through the management console and then

357
00:14:09,630 --> 00:14:13,019
go to a bunch of different pages to get

358
00:14:11,760 --> 00:14:14,700
all of the information you need to

359
00:14:13,019 --> 00:14:16,529
really understand whether or not it's an

360
00:14:14,700 --> 00:14:18,810
issue or a false positive what's the

361
00:14:16,529 --> 00:14:21,000
actual impact as well as the details of

362
00:14:18,810 --> 00:14:23,279
this issue one of the things we do in

363
00:14:21,000 --> 00:14:24,510
the Scout report is take that

364
00:14:23,279 --> 00:14:28,230
information from all of those different

365
00:14:24,510 --> 00:14:30,870
parts and put it all together on in a

366
00:14:28,230 --> 00:14:32,760
single pane right so quite often with

367
00:14:30,870 --> 00:14:34,320
cloud providers and this you can even be

368
00:14:32,760 --> 00:14:35,910
cross service so you'll have to go to

369
00:14:34,320 --> 00:14:37,110
the pages for one service and then

370
00:14:35,910 --> 00:14:39,180
understand kind of the bits of

371
00:14:37,110 --> 00:14:41,220
information from there then move back to

372
00:14:39,180 --> 00:14:43,019
another the other service in this case

373
00:14:41,220 --> 00:14:46,140
what we do is we really aggregate all of

374
00:14:43,019 --> 00:14:48,149
the information in the report in a much

375
00:14:46,140 --> 00:14:51,779
more comprehensive fashion will showthe

376
00:14:48,149 --> 00:14:54,720
an example of this I believe I believe

377
00:14:51,779 --> 00:14:59,939
for Microsoft those are a bit later and

378
00:14:54,720 --> 00:15:02,699
be in the demo if we go to let's say the

379
00:14:59,940 --> 00:15:04,589
Google cloud platform report it's very

380
00:15:02,699 --> 00:15:06,180
much the same when you go into the cloud

381
00:15:04,589 --> 00:15:07,800
storage we see that we have a bunch of

382
00:15:06,180 --> 00:15:09,390
well you have four issues here that

383
00:15:07,800 --> 00:15:12,479
would reflect cloud storage is the

384
00:15:09,390 --> 00:15:14,310
equivalent of AWS s3 so storage buckets

385
00:15:12,480 --> 00:15:15,720
and it's pretty much the same we'll see

386
00:15:14,310 --> 00:15:18,180
this a bit more in detail but you can

387
00:15:15,720 --> 00:15:20,730
see well okay so I rechecked seven

388
00:15:18,180 --> 00:15:23,699
storage buckets and we flagged this

389
00:15:20,730 --> 00:15:24,990
specific issue for one of these buckets

390
00:15:23,699 --> 00:15:27,569
as you can see here we have a reference

391
00:15:24,990 --> 00:15:30,420
for the benchmark one of the things

392
00:15:27,570 --> 00:15:32,720
we've been working towards is to support

393
00:15:30,420 --> 00:15:35,120
the suspension Mart for AWS

394
00:15:32,720 --> 00:15:37,189
as well as DCP and we were building

395
00:15:35,120 --> 00:15:39,079
specific rule sets for these benchmarks

396
00:15:37,189 --> 00:15:42,620
so let's say your organization is

397
00:15:39,079 --> 00:15:45,560
specifically interested in ensuring that

398
00:15:42,620 --> 00:15:47,600
you comply to the latest AWS since sis

399
00:15:45,560 --> 00:15:50,180
benchmark then you can leverage Scout to

400
00:15:47,600 --> 00:15:52,550
see if there are any services that are

401
00:15:50,180 --> 00:15:54,859
configured in a way that does not comply

402
00:15:52,550 --> 00:15:57,579
to what the benchmark says one of the

403
00:15:54,860 --> 00:16:00,680
issues when you're dealing with cloud

404
00:15:57,579 --> 00:16:03,649
cloud environments is that it's not

405
00:16:00,680 --> 00:16:05,899
always self-evident whether an issue is

406
00:16:03,649 --> 00:16:07,819
an actual issue or a false positive

407
00:16:05,899 --> 00:16:10,790
let's say you have a storage bucket the

408
00:16:07,819 --> 00:16:12,860
bucket is configured so that all of the

409
00:16:10,790 --> 00:16:16,399
files within it are publicly available

410
00:16:12,860 --> 00:16:18,110
well maybe that bucket stores static

411
00:16:16,399 --> 00:16:19,939
resources for a web application which

412
00:16:18,110 --> 00:16:22,339
have to be publicly available or they

413
00:16:19,939 --> 00:16:24,079
can host all of the information for all

414
00:16:22,339 --> 00:16:26,060
of your clients which is obviously not

415
00:16:24,079 --> 00:16:28,910
something you want publicly available so

416
00:16:26,060 --> 00:16:31,489
Scout will flag these independently of

417
00:16:28,910 --> 00:16:33,500
what's in the bucket and then you always

418
00:16:31,490 --> 00:16:34,699
need kind of a human that comes in and

419
00:16:33,500 --> 00:16:37,279
sees well whether or not that's an issue

420
00:16:34,699 --> 00:16:39,079
or not we do support exceptions so let's

421
00:16:37,279 --> 00:16:40,579
say you're running Scout every week

422
00:16:39,079 --> 00:16:42,829
against your infrastructure and you

423
00:16:40,579 --> 00:16:44,689
don't want the same static file storage

424
00:16:42,829 --> 00:16:46,370
buckets to pop out every week you can

425
00:16:44,689 --> 00:16:48,920
create exceptions and then feed them

426
00:16:46,370 --> 00:16:52,610
into Scout so it won't flag specific

427
00:16:48,920 --> 00:16:59,120
resources for specific findings all

428
00:16:52,610 --> 00:17:00,500
right presentation all right so at this

429
00:16:59,120 --> 00:17:02,509
point at least from my perspective

430
00:17:00,500 --> 00:17:04,159
because I'm quite close to the tools

431
00:17:02,509 --> 00:17:06,559
architecture I see it almost more as a

432
00:17:04,159 --> 00:17:09,589
framework than as a tool so as you can

433
00:17:06,559 --> 00:17:11,178
see here for the Scout suite

434
00:17:09,589 --> 00:17:13,039
architecture I won't go too much into

435
00:17:11,179 --> 00:17:15,020
details but we have really the core of

436
00:17:13,039 --> 00:17:17,119
the tool which is for those of you

437
00:17:15,020 --> 00:17:18,589
taking pictures in spine all of these

438
00:17:17,119 --> 00:17:19,938
are in the wiki so if you want the like

439
00:17:18,589 --> 00:17:22,490
the specific images or whatever you can

440
00:17:19,939 --> 00:17:23,870
just go on the project's wiki so we

441
00:17:22,490 --> 00:17:25,699
really have the core of the tool which

442
00:17:23,869 --> 00:17:27,049
is the rule engine the processing engine

443
00:17:25,699 --> 00:17:29,230
something that's really leveraged to

444
00:17:27,049 --> 00:17:31,370
whatever cloud provider you are

445
00:17:29,230 --> 00:17:34,280
assessing then there is the output

446
00:17:31,370 --> 00:17:37,100
package that generates the takes care of

447
00:17:34,280 --> 00:17:38,899
the whole generation of the report and

448
00:17:37,100 --> 00:17:40,699
then what happens when you go into the

449
00:17:38,900 --> 00:17:44,030
implementation of each provider is we

450
00:17:40,700 --> 00:17:46,160
really took a hard look at how each

451
00:17:44,030 --> 00:17:48,080
provider worked and used kind of our own

452
00:17:46,160 --> 00:17:50,570
experience dealing with these and

453
00:17:48,080 --> 00:17:52,639
working on scout to etc and we've come

454
00:17:50,570 --> 00:17:55,070
down with like a base which is like the

455
00:17:52,640 --> 00:17:57,320
base package for a cloud provider that

456
00:17:55,070 --> 00:18:00,020
details all the different pieces you

457
00:17:57,320 --> 00:18:01,939
need in order to create a tool to scan a

458
00:18:00,020 --> 00:18:04,400
cloud provider and then what we did is

459
00:18:01,940 --> 00:18:06,170
using that base class we implemented

460
00:18:04,400 --> 00:18:08,360
support for in this case we're just

461
00:18:06,170 --> 00:18:11,030
showing these three cloud providers but

462
00:18:08,360 --> 00:18:12,560
we implemented it for five so let's say

463
00:18:11,030 --> 00:18:14,120
we're talking about authentication while

464
00:18:12,560 --> 00:18:15,590
authentication is generally the same

465
00:18:14,120 --> 00:18:16,850
right you have some credentials you send

466
00:18:15,590 --> 00:18:18,860
the credentials to the cloud provider

467
00:18:16,850 --> 00:18:20,750
you get back some kind of token which

468
00:18:18,860 --> 00:18:22,760
you can then use to make authenticated

469
00:18:20,750 --> 00:18:25,850
requests but obviously the specific

470
00:18:22,760 --> 00:18:27,950
implementation of this operation is

471
00:18:25,850 --> 00:18:31,040
completely dependent on the cloud

472
00:18:27,950 --> 00:18:32,420
provider you'll be scanning so it's

473
00:18:31,040 --> 00:18:34,100
something we've abstracted in the base

474
00:18:32,420 --> 00:18:36,590
class and then something that you can

475
00:18:34,100 --> 00:18:38,149
implement in each of the providers which

476
00:18:36,590 --> 00:18:40,280
gives you really a lot of flexibility

477
00:18:38,150 --> 00:18:41,810
because quite often in tool when you

478
00:18:40,280 --> 00:18:43,310
want to write plug-ins and etc you might

479
00:18:41,810 --> 00:18:45,139
have a situation when you're like well

480
00:18:43,310 --> 00:18:47,570
this specific instance doesn't work the

481
00:18:45,140 --> 00:18:49,970
way it's expected or the way the tool

482
00:18:47,570 --> 00:18:52,129
expects me to implement it so it becomes

483
00:18:49,970 --> 00:18:53,810
kind of a kind of an issue in this case

484
00:18:52,130 --> 00:18:56,570
we've really we really believe that

485
00:18:53,810 --> 00:18:59,060
we've found a pretty good base

486
00:18:56,570 --> 00:19:01,580
implementation that allows you to

487
00:18:59,060 --> 00:19:03,889
support in this case cloud providers but

488
00:19:01,580 --> 00:19:08,710
anything that has really an API could in

489
00:19:03,890 --> 00:19:10,850
theory be supported by Scout all right

490
00:19:08,710 --> 00:19:13,460
this is just basically the amount of

491
00:19:10,850 --> 00:19:15,590
services and rules we currently have

492
00:19:13,460 --> 00:19:18,050
obviously there's a lot more that's

493
00:19:15,590 --> 00:19:20,149
currently supported for AWS the reason

494
00:19:18,050 --> 00:19:21,740
being that the tool has been supporting

495
00:19:20,150 --> 00:19:23,660
AWS for the past six years

496
00:19:21,740 --> 00:19:25,880
buzzer GCP have been supportive for

497
00:19:23,660 --> 00:19:28,250
around a year maybe a bit less and

498
00:19:25,880 --> 00:19:30,460
Alibaba cloud and OCI have been

499
00:19:28,250 --> 00:19:32,540
supported for two three months obviously

500
00:19:30,460 --> 00:19:36,890
also we see that a lot of our clients

501
00:19:32,540 --> 00:19:40,850
use AWS over other cloud providers much

502
00:19:36,890 --> 00:19:42,380
more than Alibaba be asleep or OCI so

503
00:19:40,850 --> 00:19:44,270
yeah we kind of try to focus our

504
00:19:42,380 --> 00:19:49,970
attention on what people are actually

505
00:19:44,270 --> 00:19:51,889
using as I mentioned there's a bit of

506
00:19:49,970 --> 00:19:53,780
advanced features in Scout which I won't

507
00:19:51,890 --> 00:19:57,170
do more right now so you have findings

508
00:19:53,780 --> 00:19:59,000
and rule sets so as I mentioned Scout

509
00:19:57,170 --> 00:20:00,020
basically has a bunch of findings let's

510
00:19:59,000 --> 00:20:02,810
say you just want to rule

511
00:20:00,020 --> 00:20:04,760
sets the scan ten findings then you can

512
00:20:02,810 --> 00:20:06,409
write your own rule set we support

513
00:20:04,760 --> 00:20:08,320
exceptions to ensure that if you run

514
00:20:06,410 --> 00:20:11,030
Scout every week you don't get the same

515
00:20:08,320 --> 00:20:14,149
false positives every time you can

516
00:20:11,030 --> 00:20:16,430
export specific chunks to CSV and Jason

517
00:20:14,150 --> 00:20:18,350
this is quite useful for consultancies

518
00:20:16,430 --> 00:20:18,830
where you use the tools output to write

519
00:20:18,350 --> 00:20:22,100
a report

520
00:20:18,830 --> 00:20:24,919
well exporting it to CSV or to a excel

521
00:20:22,100 --> 00:20:27,230
file really helps with that process as

522
00:20:24,920 --> 00:20:29,810
well as report parsing there's a lot of

523
00:20:27,230 --> 00:20:33,400
people who use the output to feed it

524
00:20:29,810 --> 00:20:37,370
into their own issue tracking solutions

525
00:20:33,400 --> 00:20:39,250
we're also working towards allowing to

526
00:20:37,370 --> 00:20:41,330
export the Scout into cloud native

527
00:20:39,250 --> 00:20:43,910
solutions like we'll talk about this in

528
00:20:41,330 --> 00:20:45,189
the conclusion oh yeah so there's a lot

529
00:20:43,910 --> 00:20:48,290
there's a bit of more advanced

530
00:20:45,190 --> 00:20:49,760
functionalities which are again detailed

531
00:20:48,290 --> 00:20:52,760
in the wiki for those interested

532
00:20:49,760 --> 00:20:55,580
obviously the tool is on github if you

533
00:20:52,760 --> 00:20:57,680
have any issues there's an email address

534
00:20:55,580 --> 00:21:00,379
in the project you can open issues well

535
00:20:57,680 --> 00:21:04,490
answer as fast as our workload allows us

536
00:21:00,380 --> 00:21:07,310
to alright so here what we'll do is I

537
00:21:04,490 --> 00:21:10,790
have three scenarios for AWS user and

538
00:21:07,310 --> 00:21:13,179
GCP of pretty typical issues that we

539
00:21:10,790 --> 00:21:15,860
found find in our day-to-day assessing

540
00:21:13,180 --> 00:21:20,420
conviron ments and how Scout can help

541
00:21:15,860 --> 00:21:23,659
you identify assess these issues right

542
00:21:20,420 --> 00:21:25,970
so the first one is a privilege

543
00:21:23,660 --> 00:21:27,770
escalation vector in CloudFormation by

544
00:21:25,970 --> 00:21:30,440
chopin who has used or knows of

545
00:21:27,770 --> 00:21:32,770
Confirmation all right so a bit of

546
00:21:30,440 --> 00:21:35,270
people so conformation is a

547
00:21:32,770 --> 00:21:37,940
infrastructure as code service so you

548
00:21:35,270 --> 00:21:39,440
write a template in yam or jason of the

549
00:21:37,940 --> 00:21:41,900
infrastructure you want to deploy so you

550
00:21:39,440 --> 00:21:44,420
can say I want one network with one

551
00:21:41,900 --> 00:21:46,430
virtual machine that's it you write the

552
00:21:44,420 --> 00:21:48,670
template you pass it to confirmation and

553
00:21:46,430 --> 00:21:51,770
it takes care of deploying these

554
00:21:48,670 --> 00:21:56,930
resources so this is really useful

555
00:21:51,770 --> 00:21:59,960
because it allows you to put the

556
00:21:56,930 --> 00:22:02,210
templates let's say into a github type

557
00:21:59,960 --> 00:22:03,530
solution so you can track the changes it

558
00:22:02,210 --> 00:22:06,950
allows you to River changes it's really

559
00:22:03,530 --> 00:22:09,139
very useful one of the issues here with

560
00:22:06,950 --> 00:22:10,119
AWS is you can configure the service to

561
00:22:09,140 --> 00:22:13,539
use a specific

562
00:22:10,119 --> 00:22:17,589
identity and that allows for privilege

563
00:22:13,539 --> 00:22:19,569
escalation to happen we won't go too

564
00:22:17,589 --> 00:22:21,428
much into detail on how that works it

565
00:22:19,569 --> 00:22:23,289
would take a bit more time than I have

566
00:22:21,429 --> 00:22:25,179
but what I will show is how you would

567
00:22:23,289 --> 00:22:28,359
typically identify this type of issue

568
00:22:25,179 --> 00:22:32,229
right so in this case we have a scout

569
00:22:28,359 --> 00:22:34,359
report for a specific AWS account as we

570
00:22:32,229 --> 00:22:35,919
can see we only scan the cloud formation

571
00:22:34,359 --> 00:22:38,139
and identity and access management

572
00:22:35,919 --> 00:22:40,389
mainly just to remove clutter that could

573
00:22:38,139 --> 00:22:43,089
be that would be found if we scan the

574
00:22:40,389 --> 00:22:45,188
whole thing right so in this case we can

575
00:22:43,089 --> 00:22:47,229
see that the issue was that as I

576
00:22:45,189 --> 00:22:49,629
mentioned a role was passed to a

577
00:22:47,229 --> 00:22:53,529
confirmation stack which potentially

578
00:22:49,629 --> 00:22:56,918
could allow for privilege escalation

579
00:22:53,529 --> 00:22:59,949
scenarios to happen let's say right so

580
00:22:56,919 --> 00:23:02,259
what we see here is the stack was

581
00:22:59,949 --> 00:23:04,899
configured with a specific role so let's

582
00:23:02,259 --> 00:23:06,489
say we dig into the role and this is

583
00:23:04,899 --> 00:23:07,809
what I was mentioning before of having

584
00:23:06,489 --> 00:23:10,569
kind of a cross service information

585
00:23:07,809 --> 00:23:12,189
through the report so what you're seeing

586
00:23:10,569 --> 00:23:13,539
here is information of the Identity and

587
00:23:12,189 --> 00:23:15,129
Access Management Service who were as

588
00:23:13,539 --> 00:23:17,739
what's in the background is information

589
00:23:15,129 --> 00:23:20,708
from the cloud formation service so if

590
00:23:17,739 --> 00:23:21,999
you were using the AWS console to view

591
00:23:20,709 --> 00:23:23,439
this information you would have to go

592
00:23:21,999 --> 00:23:27,309
back and forth in this case it's

593
00:23:23,439 --> 00:23:27,669
presented in a somewhat more consistent

594
00:23:27,309 --> 00:23:29,739
fashion

595
00:23:27,669 --> 00:23:31,269
what we can see here is that the role

596
00:23:29,739 --> 00:23:33,039
what's important here is to see that the

597
00:23:31,269 --> 00:23:35,579
role has identity and access management

598
00:23:33,039 --> 00:23:38,079
full access as well as full access to

599
00:23:35,579 --> 00:23:39,999
ec2 so it's quite a significant amount

600
00:23:38,079 --> 00:23:42,519
of privileges for a role which means

601
00:23:39,999 --> 00:23:44,529
that if someone was able to let's say

602
00:23:42,519 --> 00:23:46,869
leverage that specific role they would

603
00:23:44,529 --> 00:23:48,639
have basically root access on your

604
00:23:46,869 --> 00:23:50,289
account because if you have full access

605
00:23:48,639 --> 00:23:51,549
to the identity and management service

606
00:23:50,289 --> 00:23:54,279
it allows you to change your own

607
00:23:51,549 --> 00:23:56,979
privileges which in turn can provide you

608
00:23:54,279 --> 00:23:59,409
with root privileges right so then if we

609
00:23:56,979 --> 00:24:02,019
go back to the panel and we dig into the

610
00:23:59,409 --> 00:24:04,179
I M service we can see again the issue I

611
00:24:02,019 --> 00:24:06,999
mentioned which was cross account assume

612
00:24:04,179 --> 00:24:08,409
role policy lacks external ID NMFA this

613
00:24:06,999 --> 00:24:11,019
basically means that someone in another

614
00:24:08,409 --> 00:24:12,879
AWS account can impersonate an identity

615
00:24:11,019 --> 00:24:15,729
within your own AWS account and you're

616
00:24:12,879 --> 00:24:22,269
not enforcing them to use nfa or an

617
00:24:15,729 --> 00:24:23,980
external ID obviously MFA is really a

618
00:24:22,269 --> 00:24:26,320
great way of ensuring that

619
00:24:23,980 --> 00:24:29,679
even though if even if rentals are

620
00:24:26,320 --> 00:24:32,860
compromised those credentials without

621
00:24:29,679 --> 00:24:35,470
the additional MFA won't be usable right

622
00:24:32,860 --> 00:24:37,178
so what we would see here is in this

623
00:24:35,470 --> 00:24:38,770
case we only have two roles this one

624
00:24:37,179 --> 00:24:41,080
really isn't very important but if we

625
00:24:38,770 --> 00:24:43,660
see this one called external provider

626
00:24:41,080 --> 00:24:45,870
which you can assume to mean that this

627
00:24:43,660 --> 00:24:50,200
is an external provider of whatever

628
00:24:45,870 --> 00:24:52,120
client you are your assassin and in this

629
00:24:50,200 --> 00:24:55,000
case we can see that this specific

630
00:24:52,120 --> 00:24:57,879
external provider is not required to use

631
00:24:55,000 --> 00:24:59,650
MFA and if we use if we look at the

632
00:24:57,880 --> 00:25:02,710
permissions the provider has configured

633
00:24:59,650 --> 00:25:06,520
we can see that they have this policy

634
00:25:02,710 --> 00:25:09,730
that's called confirmation stack admin

635
00:25:06,520 --> 00:25:12,790
we dig into the specifics what we

636
00:25:09,730 --> 00:25:15,100
basically see is that this identity has

637
00:25:12,790 --> 00:25:17,110
full access to confirmation so the issue

638
00:25:15,100 --> 00:25:19,360
here becomes that you have an external

639
00:25:17,110 --> 00:25:21,459
account that can access your own account

640
00:25:19,360 --> 00:25:23,678
and that has permission on the service

641
00:25:21,460 --> 00:25:27,429
which essentially has root privileges on

642
00:25:23,679 --> 00:25:30,700
the the account so as you can see this

643
00:25:27,429 --> 00:25:33,040
can very quickly become a quite large

644
00:25:30,700 --> 00:25:35,380
issue not only let's say if the pro if

645
00:25:33,040 --> 00:25:36,760
the if there's like a rogue employee in

646
00:25:35,380 --> 00:25:39,540
your provider but also if someone

647
00:25:36,760 --> 00:25:42,129
compromises your own provider they can

648
00:25:39,540 --> 00:25:44,710
potentially move laterally into your own

649
00:25:42,130 --> 00:25:47,910
account then compromise your own account

650
00:25:44,710 --> 00:25:51,970
getting this type of information through

651
00:25:47,910 --> 00:25:54,820
the AWS panel itself is really not

652
00:25:51,970 --> 00:25:58,030
trivial I really find that Scout helps

653
00:25:54,820 --> 00:26:00,909
in identifying these types of issues

654
00:25:58,030 --> 00:26:03,940
greatly if we move back to the

655
00:26:00,910 --> 00:26:05,770
presentation will go into Microsoft

656
00:26:03,940 --> 00:26:07,360
desert an example for is er expose

657
00:26:05,770 --> 00:26:09,370
virtual machines this is also a big one

658
00:26:07,360 --> 00:26:11,889
obviously you're constantly spinning up

659
00:26:09,370 --> 00:26:14,110
virtual instances in the cloud one of

660
00:26:11,890 --> 00:26:16,260
the things you worry about is that some

661
00:26:14,110 --> 00:26:19,120
of these instances are not protected by

662
00:26:16,260 --> 00:26:22,929
firewalls so that ports are accessible

663
00:26:19,120 --> 00:26:26,139
RDP SSH you name it right so if we go

664
00:26:22,929 --> 00:26:29,530
back into this time the Microsoft

665
00:26:26,140 --> 00:26:32,169
reserved report we dig into the network

666
00:26:29,530 --> 00:26:34,059
service we can see three findings so

667
00:26:32,169 --> 00:26:35,230
what the findings say is that the

668
00:26:34,059 --> 00:26:37,299
security groups which are basically

669
00:26:35,230 --> 00:26:40,690
firewall rules for virtual instance

670
00:26:37,299 --> 00:26:44,889
is our allowing in this case RDP SQL and

671
00:26:40,690 --> 00:26:46,690
SSH ports to be accessed if we look here

672
00:26:44,889 --> 00:26:48,879
what we see is okay well so there's only

673
00:26:46,690 --> 00:26:52,539
one security group which could be seen

674
00:26:48,879 --> 00:26:54,009
as a firewall rule that is allowing this

675
00:26:52,539 --> 00:26:55,389
type of access right in this case we can

676
00:26:54,009 --> 00:26:57,669
see that there's an inbound rule with

677
00:26:55,389 --> 00:26:59,498
the low priority that basically allows

678
00:26:57,669 --> 00:27:01,629
all trying to come in then you're like

679
00:26:59,499 --> 00:27:03,429
okay it's not too bad the security group

680
00:27:01,629 --> 00:27:06,658
rule is called troubleshooting security

681
00:27:03,429 --> 00:27:09,580
group which if it's a troubleshooting

682
00:27:06,659 --> 00:27:12,129
resource is expected to allow for a lot

683
00:27:09,580 --> 00:27:13,629
of access right so the question then

684
00:27:12,129 --> 00:27:16,600
becomes what are the resources that are

685
00:27:13,629 --> 00:27:18,129
actually affected by this security group

686
00:27:16,600 --> 00:27:19,959
so in this case we can see that there's

687
00:27:18,129 --> 00:27:22,090
only one subnet we can click on the

688
00:27:19,960 --> 00:27:24,039
subnet and then what we can see is we

689
00:27:22,090 --> 00:27:25,418
have instances which are well there's

690
00:27:24,039 --> 00:27:28,600
only one instance and the instance is

691
00:27:25,419 --> 00:27:30,220
called VM what web prot obviously if you

692
00:27:28,600 --> 00:27:32,320
see a production instance that's being

693
00:27:30,220 --> 00:27:34,869
assigned to troubleshooting security

694
00:27:32,320 --> 00:27:38,019
groups that's probably not something you

695
00:27:34,869 --> 00:27:40,059
want right we look at all of these

696
00:27:38,019 --> 00:27:41,289
security groups what we see is we

697
00:27:40,059 --> 00:27:42,759
actually have three we have a web

698
00:27:41,289 --> 00:27:43,929
security group we have a troubleshooting

699
00:27:42,759 --> 00:27:45,549
security group and we have it that's a

700
00:27:43,929 --> 00:27:46,869
pretty group in this case and this is

701
00:27:45,549 --> 00:27:49,960
really quite common would probably

702
00:27:46,869 --> 00:27:51,549
happen is well someone launched the

703
00:27:49,960 --> 00:27:53,980
production instance and then tried to

704
00:27:51,549 --> 00:27:54,970
access it wasn't able to access it so

705
00:27:53,980 --> 00:27:56,710
they were like oh well this isn't

706
00:27:54,970 --> 00:27:58,720
working so what am I gonna do well I'll

707
00:27:56,710 --> 00:28:00,100
try to assign the troubleshooting

708
00:27:58,720 --> 00:28:02,169
security group and now see if I can

709
00:28:00,100 --> 00:28:04,719
access whatever application is deployed

710
00:28:02,169 --> 00:28:06,580
on the instance okay no it works then

711
00:28:04,720 --> 00:28:09,190
obviously what do you do when something

712
00:28:06,580 --> 00:28:11,320
works you leave it as it is you don't

713
00:28:09,190 --> 00:28:13,749
touch it you don't try to go back and

714
00:28:11,320 --> 00:28:16,570
start debugging everything works all

715
00:28:13,749 --> 00:28:20,559
right we can go to production great well

716
00:28:16,570 --> 00:28:23,080
obviously it's not great and let's say

717
00:28:20,559 --> 00:28:25,779
you're running Scout on a daily or a

718
00:28:23,080 --> 00:28:28,210
weekly basis and someone makes such a

719
00:28:25,779 --> 00:28:29,830
change to your AWS to your other

720
00:28:28,210 --> 00:28:32,320
environments then this is something that

721
00:28:29,830 --> 00:28:33,639
will become flagged so let's say you're

722
00:28:32,320 --> 00:28:35,439
not using exceptions and you're just

723
00:28:33,639 --> 00:28:37,059
running Scout and you wake up on a

724
00:28:35,440 --> 00:28:41,499
Monday look at the output of Scout and

725
00:28:37,059 --> 00:28:43,720
you see that you now have a bunch of

726
00:28:41,499 --> 00:28:45,909
instances that are being publicly

727
00:28:43,720 --> 00:28:47,230
exposed then that's something that you

728
00:28:45,909 --> 00:28:49,119
would be quite grateful to know about

729
00:28:47,230 --> 00:28:50,050
not six months later when someone

730
00:28:49,119 --> 00:28:54,010
already broker

731
00:28:50,050 --> 00:28:57,490
started moving laterally etc right and

732
00:28:54,010 --> 00:28:59,230
now the last example for GCP one of the

733
00:28:57,490 --> 00:29:02,320
important things with these examples is

734
00:28:59,230 --> 00:29:03,700
that so I there was an AWS example and

735
00:29:02,320 --> 00:29:06,370
there was an example and this one is a

736
00:29:03,700 --> 00:29:07,570
Google cloud example but the cloud

737
00:29:06,370 --> 00:29:09,129
provider for each of these is pretty

738
00:29:07,570 --> 00:29:10,960
much arbitrary I could have used for

739
00:29:09,130 --> 00:29:12,850
example this one applies to Azure as

740
00:29:10,960 --> 00:29:15,460
much as it applies to AWS and it's the

741
00:29:12,850 --> 00:29:17,469
other ones and vice-versa in this case

742
00:29:15,460 --> 00:29:20,770
what we're talking about is storage

743
00:29:17,470 --> 00:29:22,450
buckets that have weak permissions let's

744
00:29:20,770 --> 00:29:25,090
say that exposed resources in a way that

745
00:29:22,450 --> 00:29:26,740
you would not necessarily want to expose

746
00:29:25,090 --> 00:29:28,659
them we've heard a bunch of stories for

747
00:29:26,740 --> 00:29:30,190
AWS I just think it's a question of time

748
00:29:28,660 --> 00:29:33,280
before we start hearing just as much of

749
00:29:30,190 --> 00:29:35,290
these issues in desert and GCP because

750
00:29:33,280 --> 00:29:38,830
fundamentally they provide the same

751
00:29:35,290 --> 00:29:41,889
opportunity for abuse in this case if

752
00:29:38,830 --> 00:29:45,570
you look at the the figure it's simply a

753
00:29:41,890 --> 00:29:48,310
web application that is using this a bit

754
00:29:45,570 --> 00:29:50,620
anyway so it's using me two storage

755
00:29:48,310 --> 00:29:52,330
buckets one of them is called static

756
00:29:50,620 --> 00:29:53,800
content so you can assume that it holds

757
00:29:52,330 --> 00:29:55,990
these static resources for the web

758
00:29:53,800 --> 00:29:57,940
application and the other one is called

759
00:29:55,990 --> 00:30:02,500
public content which you can also assume

760
00:29:57,940 --> 00:30:07,210
to be public storage buckets right so if

761
00:30:02,500 --> 00:30:09,910
we look at if we look at the report for

762
00:30:07,210 --> 00:30:11,200
GC P we can see okay here in cloud

763
00:30:09,910 --> 00:30:13,120
storage I have something that's being

764
00:30:11,200 --> 00:30:16,750
fine red red is usually mean something

765
00:30:13,120 --> 00:30:19,330
that's not too good right what I can see

766
00:30:16,750 --> 00:30:20,590
here is okay so I have these two rules

767
00:30:19,330 --> 00:30:22,530
that were flagged the first one says

768
00:30:20,590 --> 00:30:24,639
that a bucket is accessible by all

769
00:30:22,530 --> 00:30:28,240
authenticated users and the second one

770
00:30:24,640 --> 00:30:29,860
is accessible by all users right there's

771
00:30:28,240 --> 00:30:31,840
a bit of a nuance here and it's quite

772
00:30:29,860 --> 00:30:32,979
funny because authenticated users is

773
00:30:31,840 --> 00:30:35,860
something that was initially implemented

774
00:30:32,980 --> 00:30:36,910
by AWS which was a terrible idea because

775
00:30:35,860 --> 00:30:39,219
what it basically means all

776
00:30:36,910 --> 00:30:41,200
authenticated users means everyone

777
00:30:39,220 --> 00:30:42,730
authenticated to the cloud provider it

778
00:30:41,200 --> 00:30:44,620
doesn't mean anyone authenticated into

779
00:30:42,730 --> 00:30:47,350
your specific account it means everyone

780
00:30:44,620 --> 00:30:49,199
authenticated throughout the cloud

781
00:30:47,350 --> 00:30:50,949
provider so let's say throughout AWS

782
00:30:49,200 --> 00:30:52,840
obviously there's not a lot of

783
00:30:50,950 --> 00:30:55,000
situations where you don't want anyone

784
00:30:52,840 --> 00:30:56,290
where you want everyone from the whole

785
00:30:55,000 --> 00:30:59,920
cloud provider to access your resources

786
00:30:56,290 --> 00:31:01,629
but not anyone in general right in this

787
00:30:59,920 --> 00:31:04,050
case quite funnily it's some things that

788
00:31:01,630 --> 00:31:06,300
AWS realized was not

789
00:31:04,050 --> 00:31:08,250
and have now been trying to phase out so

790
00:31:06,300 --> 00:31:09,899
if you go and D into the web console

791
00:31:08,250 --> 00:31:14,970
it's not available anymore

792
00:31:09,900 --> 00:31:17,010
but since buzzer and GCP have kind of

793
00:31:14,970 --> 00:31:18,000
based their own implementation on what

794
00:31:17,010 --> 00:31:20,490
the cool kid on the block has

795
00:31:18,000 --> 00:31:21,810
implemented well they've copied the good

796
00:31:20,490 --> 00:31:25,440
stuff and they've also come copied a

797
00:31:21,810 --> 00:31:26,909
couple of mistakes so authenticated

798
00:31:25,440 --> 00:31:29,010
users and one thing that UCP implemented

799
00:31:26,910 --> 00:31:31,590
that they never should have implemented

800
00:31:29,010 --> 00:31:33,000
right but let's say I look into the

801
00:31:31,590 --> 00:31:35,399
buckets that are accessible by everyone

802
00:31:33,000 --> 00:31:39,720
what's being fired by scout is basically

803
00:31:35,400 --> 00:31:41,790
the static file bucket is available I do

804
00:31:39,720 --> 00:31:42,960
not want to mark this as an exception so

805
00:31:41,790 --> 00:31:45,750
basically what we see here is that

806
00:31:42,960 --> 00:31:48,210
there's basically a bucket reader policy

807
00:31:45,750 --> 00:31:50,520
for all users which is fine since it's a

808
00:31:48,210 --> 00:31:52,620
static file bucket same thing for the

809
00:31:50,520 --> 00:31:54,540
public files bucket it's basically

810
00:31:52,620 --> 00:31:57,419
allowing anyone to read the files from

811
00:31:54,540 --> 00:31:59,970
the storage bucket so in this case this

812
00:31:57,420 --> 00:32:01,410
is being fired by Scout obviously it's a

813
00:31:59,970 --> 00:32:03,450
correct finding this bucket does have

814
00:32:01,410 --> 00:32:05,040
this configuration but in this case you

815
00:32:03,450 --> 00:32:06,380
could consider it to be false positive

816
00:32:05,040 --> 00:32:09,480
considering what you know of the

817
00:32:06,380 --> 00:32:12,000
solution being assessed if we go back

818
00:32:09,480 --> 00:32:14,400
into all authenticated users what we can

819
00:32:12,000 --> 00:32:17,100
now see is that the static files bucket

820
00:32:14,400 --> 00:32:21,480
also has all authenticated users are

821
00:32:17,100 --> 00:32:23,280
allowed to read as well as write to the

822
00:32:21,480 --> 00:32:25,320
bucket so what this means is anyone

823
00:32:23,280 --> 00:32:27,930
authenticated to GCP not necessarily

824
00:32:25,320 --> 00:32:30,600
your own GCP account will be able to

825
00:32:27,930 --> 00:32:32,730
write files into your storage bucket

826
00:32:30,600 --> 00:32:35,070
this might seem like oh well this never

827
00:32:32,730 --> 00:32:40,490
happens but this is something I've seen

828
00:32:35,070 --> 00:32:43,129
more than once on real and some very

829
00:32:40,490 --> 00:32:45,570
popular and very much used applications

830
00:32:43,130 --> 00:32:47,250
let's say you compromised or you found

831
00:32:45,570 --> 00:32:50,070
out that in a web application let's say

832
00:32:47,250 --> 00:32:51,540
is using a as in this case a static file

833
00:32:50,070 --> 00:32:53,070
buckets well what you could do for

834
00:32:51,540 --> 00:32:54,960
example is take the JavaScript that's

835
00:32:53,070 --> 00:32:57,389
being hosted on that bucket modify it

836
00:32:54,960 --> 00:32:59,220
let's say to add some crypto mining code

837
00:32:57,390 --> 00:33:01,230
upload it back into the bucket and then

838
00:32:59,220 --> 00:33:03,120
everyone who goes on to the web site

839
00:33:01,230 --> 00:33:06,060
downloads those static files is now

840
00:33:03,120 --> 00:33:09,659
mining whatever cryptocurrency in your

841
00:33:06,060 --> 00:33:11,669
name so it's not necessarily as bad as

842
00:33:09,660 --> 00:33:14,520
anyone having access to all of your

843
00:33:11,670 --> 00:33:18,000
clients records right but it can still

844
00:33:14,520 --> 00:33:21,560
have quite an impact on your or

845
00:33:18,000 --> 00:33:26,010
all right so that was the example for

846
00:33:21,560 --> 00:33:28,020
GCP again I chose one example per cloud

847
00:33:26,010 --> 00:33:30,000
provider but really these examples apply

848
00:33:28,020 --> 00:33:34,379
to these three cloud providers as well

849
00:33:30,000 --> 00:33:37,500
as pretty much all the others all right

850
00:33:34,380 --> 00:33:38,970
so one thing we have seen so we we work

851
00:33:37,500 --> 00:33:40,860
on Scout suite which is an open source

852
00:33:38,970 --> 00:33:42,420
tool and it's on github and you one can

853
00:33:40,860 --> 00:33:44,820
use it a bunch of people use it and we

854
00:33:42,420 --> 00:33:46,220
have a lot of our clients who also use

855
00:33:44,820 --> 00:33:48,870
it themselves within their own

856
00:33:46,220 --> 00:33:51,750
organizations to secure their own cloud

857
00:33:48,870 --> 00:33:53,939
environments one thing they have asked

858
00:33:51,750 --> 00:33:56,340
us quite a bit of times is ok so I have

859
00:33:53,940 --> 00:33:58,560
this tool but how can I run this tool

860
00:33:56,340 --> 00:34:02,159
let's say every week every month and

861
00:33:58,560 --> 00:34:04,290
leverage it's to ensure that when

862
00:34:02,160 --> 00:34:06,390
security issues arise in my account

863
00:34:04,290 --> 00:34:08,429
environments which always happens at

864
00:34:06,390 --> 00:34:11,700
some point I'll know about it quickly

865
00:34:08,429 --> 00:34:13,889
right so what we did is on top of Scout

866
00:34:11,699 --> 00:34:16,739
suite we built a software as a service

867
00:34:13,889 --> 00:34:18,679
solution which basically helps people to

868
00:34:16,739 --> 00:34:21,600
ensure that they have cloud-based

869
00:34:18,679 --> 00:34:23,219
persistent monitoring on their cloud

870
00:34:21,600 --> 00:34:25,860
accounts one of the great benefits of

871
00:34:23,219 --> 00:34:27,839
this is that since Scout is a multi

872
00:34:25,860 --> 00:34:30,720
cloud tool it provides a kind of

873
00:34:27,840 --> 00:34:32,400
one-stop shop for persistent monitoring

874
00:34:30,719 --> 00:34:34,230
of environments in the cloud which is

875
00:34:32,400 --> 00:34:36,860
really quite useful for organizations

876
00:34:34,230 --> 00:34:39,240
that might have a large amount of

877
00:34:36,860 --> 00:34:42,540
accounts across different cloud

878
00:34:39,239 --> 00:34:44,909
providers right so I'll just do a very

879
00:34:42,540 --> 00:34:48,420
quick demo I mean the goal presentation

880
00:34:44,909 --> 00:34:50,940
is not to do a product demo so basically

881
00:34:48,420 --> 00:34:52,470
it's a software as a service as you can

882
00:34:50,940 --> 00:34:54,389
see here this is the main dashboard

883
00:34:52,469 --> 00:34:58,049
where I can see all of these Scout jobs

884
00:34:54,389 --> 00:35:01,020
that were run you can see I ran one just

885
00:34:58,050 --> 00:35:03,420
before the presentation so let's say I

886
00:35:01,020 --> 00:35:04,710
come here into my cloud accounts so you

887
00:35:03,420 --> 00:35:09,210
can see these are the cloud accounts

888
00:35:04,710 --> 00:35:12,690
that are configured to be to be scans I

889
00:35:09,210 --> 00:35:14,040
can go into a specific GCP account one

890
00:35:12,690 --> 00:35:15,540
of the great things is I can schedule

891
00:35:14,040 --> 00:35:18,810
jobs so let's say I want this to run

892
00:35:15,540 --> 00:35:21,000
every every day in the morning because I

893
00:35:18,810 --> 00:35:22,770
have a DevOps team that is constantly

894
00:35:21,000 --> 00:35:24,210
changing resources and I want to ensure

895
00:35:22,770 --> 00:35:26,730
that from one day to the next

896
00:35:24,210 --> 00:35:28,140
we don't go from having no security

897
00:35:26,730 --> 00:35:30,480
issues to having a bunch of buckets

898
00:35:28,140 --> 00:35:32,368
publicly available with

899
00:35:30,480 --> 00:35:36,600
read and write configured right so you

900
00:35:32,369 --> 00:35:38,910
can also execute scans manually and you

901
00:35:36,600 --> 00:35:40,650
can view the results of the scan when

902
00:35:38,910 --> 00:35:43,980
you view the report it's pretty much the

903
00:35:40,650 --> 00:35:46,619
same thing as when you are accessing a

904
00:35:43,980 --> 00:35:48,540
scout report locally we do have a bit

905
00:35:46,619 --> 00:35:51,840
more of functionalities in the service

906
00:35:48,540 --> 00:35:53,040
than in the open source version it's mmm

907
00:35:51,840 --> 00:35:55,020
how can I say like the open source

908
00:35:53,040 --> 00:35:56,940
version is always a bit behind on what

909
00:35:55,020 --> 00:35:59,730
we have in the the service because this

910
00:35:56,940 --> 00:36:02,850
is also something we use at NCC

911
00:35:59,730 --> 00:36:05,100
internally for our own delivery but once

912
00:36:02,850 --> 00:36:07,368
you know how to use the open source tool

913
00:36:05,100 --> 00:36:11,450
the service pretty much does the same

914
00:36:07,369 --> 00:36:15,480
thing all right so that's it for scout

915
00:36:11,450 --> 00:36:19,799
and going forward well obviously our

916
00:36:15,480 --> 00:36:20,880
goal is to improve support for all of

917
00:36:19,800 --> 00:36:22,650
the cloud providers that we currently

918
00:36:20,880 --> 00:36:24,570
support so for example as I said for AWS

919
00:36:22,650 --> 00:36:27,990
we support something like 25 services

920
00:36:24,570 --> 00:36:30,690
but AWS itself has something like 170

921
00:36:27,990 --> 00:36:34,319
services the core is really more around

922
00:36:30,690 --> 00:36:36,060
30 to 35 services but what we're working

923
00:36:34,320 --> 00:36:38,940
on is not only improving the core but

924
00:36:36,060 --> 00:36:41,910
also constantly adding support for new

925
00:36:38,940 --> 00:36:44,010
services and implementing new rules we

926
00:36:41,910 --> 00:36:45,779
also want to focus in the next let's say

927
00:36:44,010 --> 00:36:47,430
year or so on really proudly privilege

928
00:36:45,780 --> 00:36:50,400
escalation this is something that has

929
00:36:47,430 --> 00:36:52,710
become more and more of an issue in AWS

930
00:36:50,400 --> 00:36:54,570
and that will obviously become more of

931
00:36:52,710 --> 00:36:58,170
an issue also for other cloud providers

932
00:36:54,570 --> 00:37:00,359
and as I mentioned before we are working

933
00:36:58,170 --> 00:37:02,520
towards implementing integration with

934
00:37:00,359 --> 00:37:04,049
native security management solutions so

935
00:37:02,520 --> 00:37:05,730
we have a lot of people using the

936
00:37:04,050 --> 00:37:07,619
security hub so what they say is well I

937
00:37:05,730 --> 00:37:10,050
want to be able to directly import a

938
00:37:07,619 --> 00:37:12,869
scout report into AWS security hub to

939
00:37:10,050 --> 00:37:15,390
then do tracking of all of the issues

940
00:37:12,869 --> 00:37:17,700
that are being raised same thing for a

941
00:37:15,390 --> 00:37:19,049
zero security Center and GCP security

942
00:37:17,700 --> 00:37:20,910
command center as I said at the

943
00:37:19,050 --> 00:37:22,830
beginning of the presentation all cloud

944
00:37:20,910 --> 00:37:26,129
providers strive to be pretty much the

945
00:37:22,830 --> 00:37:28,890
same so obviously the u.s. is not the

946
00:37:26,130 --> 00:37:30,660
only one that has such a service also

947
00:37:28,890 --> 00:37:34,319
contributes so the tool is open source

948
00:37:30,660 --> 00:37:37,200
if it's something that you use we

949
00:37:34,320 --> 00:37:37,890
receive PRS quite regularly we always

950
00:37:37,200 --> 00:37:39,299
accept them

951
00:37:37,890 --> 00:37:42,000
even though might sometimes there might

952
00:37:39,300 --> 00:37:43,050
be a couple of things to change if you

953
00:37:42,000 --> 00:37:44,970
use heavily

954
00:37:43,050 --> 00:37:47,369
or a cloud infrastructure or Alibaba

955
00:37:44,970 --> 00:37:50,399
cloud or IBM cloud or whatever in your

956
00:37:47,369 --> 00:37:51,990
organization and you find yourself with

957
00:37:50,400 --> 00:37:53,520
the need to have a tool that allows you

958
00:37:51,990 --> 00:37:55,410
to assess the security posture of these

959
00:37:53,520 --> 00:37:57,180
environments while implementing support

960
00:37:55,410 --> 00:37:58,740
in Scout suite is very much a

961
00:37:57,180 --> 00:38:00,960
possibility and there's a really a bunch

962
00:37:58,740 --> 00:38:02,669
of information in the wiki on how can I

963
00:38:00,960 --> 00:38:05,040
add support for a service how can I add

964
00:38:02,670 --> 00:38:07,500
a new rule how can I add support for a

965
00:38:05,040 --> 00:38:11,580
whole new cloud provider so I really

966
00:38:07,500 --> 00:38:13,860
invite you to do this special mentions

967
00:38:11,580 --> 00:38:15,630
we're not here but I just want to thank

968
00:38:13,860 --> 00:38:17,820
these specific people who have been

969
00:38:15,630 --> 00:38:20,130
really contributing to of the tool so

970
00:38:17,820 --> 00:38:23,400
Lloyd is the original author of the tool

971
00:38:20,130 --> 00:38:25,110
he started back in 2013 we have a great

972
00:38:23,400 --> 00:38:27,180
team from the Polytechnic University of

973
00:38:25,110 --> 00:38:29,670
Montreal that really did a lot of work

974
00:38:27,180 --> 00:38:31,910
on on the open source project really

975
00:38:29,670 --> 00:38:36,930
helped a lot as well as Matt Lewis

976
00:38:31,910 --> 00:38:49,200
research director I leave for NCC all

977
00:38:36,930 --> 00:38:52,560
right any questions this with kms it's

978
00:38:49,200 --> 00:38:55,980
mostly out two keys that aren't being

979
00:38:52,560 --> 00:38:58,350
rotate rotated outdated keys I mean for

980
00:38:55,980 --> 00:38:59,970
AWS and or and also other cloud

981
00:38:58,350 --> 00:39:02,310
providers where it also becomes quite

982
00:38:59,970 --> 00:39:05,009
useful is also kms is a service to

983
00:39:02,310 --> 00:39:06,420
encrypt resources right so it's very

984
00:39:05,010 --> 00:39:08,100
much used in conjunction with other

985
00:39:06,420 --> 00:39:11,850
services so let's say you have a

986
00:39:08,100 --> 00:39:14,040
database you have a drive for an

987
00:39:11,850 --> 00:39:15,420
instance for a virtual machine etc you

988
00:39:14,040 --> 00:39:17,700
want to know well am I actually

989
00:39:15,420 --> 00:39:21,060
encrypting my resources and am I also

990
00:39:17,700 --> 00:39:22,859
encrypting it with keys that I control

991
00:39:21,060 --> 00:39:24,720
so it's not only a question of flagging

992
00:39:22,859 --> 00:39:26,310
specific issues in kms but it's also

993
00:39:24,720 --> 00:39:28,618
ensuring that other services are

994
00:39:26,310 --> 00:39:35,759
leveraging kms to encrypt those

995
00:39:28,619 --> 00:39:37,560
resources cognition HSM is not currently

996
00:39:35,760 --> 00:39:40,980
one of the services that is supported

997
00:39:37,560 --> 00:39:42,960
for AWS the only reason for it is we

998
00:39:40,980 --> 00:39:46,140
just haven't put the time in to add

999
00:39:42,960 --> 00:39:47,760
support for that specific service yeah

1000
00:39:46,140 --> 00:39:50,400
it's it's really been a question of how

1001
00:39:47,760 --> 00:39:53,400
much time can we dedicate to all the

1002
00:39:50,400 --> 00:39:54,810
specific components but yeah if when

1003
00:39:53,400 --> 00:39:56,670
people have like a specific mean then

1004
00:39:54,810 --> 00:39:58,500
they write let's say they open an issue

1005
00:39:56,670 --> 00:40:00,540
like oh I use the service a lot why

1006
00:39:58,500 --> 00:40:02,730
isn't this being supported we usually

1007
00:40:00,540 --> 00:40:04,109
try to put it a bit higher up or stack

1008
00:40:02,730 --> 00:40:08,460
we're really trying to make it more of a

1009
00:40:04,109 --> 00:40:19,859
community driven but thank you anyone

1010
00:40:08,460 --> 00:40:28,380
else yes mm-hmm

1011
00:40:19,859 --> 00:40:29,940
yeah mm-hmm yeah so it does do it so in

1012
00:40:28,380 --> 00:40:33,089
this case there is not any issue but

1013
00:40:29,940 --> 00:40:35,880
basically this is a so this is a

1014
00:40:33,089 --> 00:40:38,279
specific scan of a the cloud environment

1015
00:40:35,880 --> 00:40:40,020
and here what we what you can see is

1016
00:40:38,280 --> 00:40:41,700
whether or not there's any new instances

1017
00:40:40,020 --> 00:40:43,589
of specific issues or new issues that

1018
00:40:41,700 --> 00:40:46,290
are being raised as well as whether or

1019
00:40:43,589 --> 00:40:48,569
not you resolve issues right and you can

1020
00:40:46,290 --> 00:40:50,490
see it here in the web application but

1021
00:40:48,569 --> 00:40:52,140
you also get you can also get email

1022
00:40:50,490 --> 00:40:53,339
notifications so let's say every time it

1023
00:40:52,140 --> 00:40:56,040
runs it'll send you an email and say

1024
00:40:53,339 --> 00:41:10,319
well these are the new issues that arose

1025
00:40:56,040 --> 00:41:13,980
within your account yes yes that is

1026
00:41:10,319 --> 00:41:16,369
correct so so Scout leverages the API is

1027
00:41:13,980 --> 00:41:19,559
exposed by the cloud providers buzzer is

1028
00:41:16,369 --> 00:41:22,140
really the cloud provider that is not

1029
00:41:19,559 --> 00:41:25,380
putting as much priority into their API

1030
00:41:22,140 --> 00:41:27,058
so we are we're kind of always like one

1031
00:41:25,380 --> 00:41:28,589
step behind them so we look at the rest

1032
00:41:27,059 --> 00:41:29,940
DK we realized oh they released a new

1033
00:41:28,589 --> 00:41:31,619
version well what are the things that

1034
00:41:29,940 --> 00:41:34,049
they've added now so okay so now we're

1035
00:41:31,619 --> 00:41:35,790
able to implement support for this so ad

1036
00:41:34,049 --> 00:41:37,109
basically all the users and groups and

1037
00:41:35,790 --> 00:41:39,210
everything is something they really

1038
00:41:37,109 --> 00:41:41,369
support for back in May and this is

1039
00:41:39,210 --> 00:41:43,349
something we've started adding into the

1040
00:41:41,369 --> 00:41:46,980
tool mfa and a bunch of other things are

1041
00:41:43,349 --> 00:41:48,720
still not possible to to implement but

1042
00:41:46,980 --> 00:41:50,099
we're basically just behind them waiting

1043
00:41:48,720 --> 00:41:55,109
for them to release stuff so that we can

1044
00:41:50,099 --> 00:41:56,910
also implement support for it all right

1045
00:41:55,109 --> 00:41:57,870
well thank you for attending if you have

1046
00:41:56,910 --> 00:42:01,049
any questions

1047
00:41:57,870 --> 00:42:01,049
[Applause]

