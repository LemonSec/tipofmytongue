1
00:00:02,480 --> 00:00:07,500
welcome everybody thank you for coming

2
00:00:05,400 --> 00:00:09,540
hope you all had fun last night or

3
00:00:07,500 --> 00:00:11,190
feeling better after lunch my name is

4
00:00:09,540 --> 00:00:12,419
Kyle to opener this is Alessandro Vela

5
00:00:11,190 --> 00:00:14,790
Pucci and we're gonna be talking about

6
00:00:12,420 --> 00:00:17,310
throwing open the gates trading control

7
00:00:14,790 --> 00:00:19,288
for visibility and just to set some

8
00:00:17,310 --> 00:00:21,479
quick expectations this talk is a

9
00:00:19,289 --> 00:00:23,250
defensive more blue team oriented talk

10
00:00:21,480 --> 00:00:26,070
we're not talking about any fancy

11
00:00:23,250 --> 00:00:28,019
attacks here and it's a practical case

12
00:00:26,070 --> 00:00:29,910
study on kind of a philosophy that we

13
00:00:28,019 --> 00:00:32,250
got to test at Salesforce where we work

14
00:00:29,910 --> 00:00:33,989
it involves a tool but it's not really

15
00:00:32,250 --> 00:00:36,329
about the tool so we'll talk about our

16
00:00:33,989 --> 00:00:37,860
tool but the goal isn't the tool itself

17
00:00:36,329 --> 00:00:40,079
it's more the results of the the

18
00:00:37,860 --> 00:00:42,719
philosophy and we're gonna provide some

19
00:00:40,079 --> 00:00:43,829
data points about our results which i

20
00:00:42,719 --> 00:00:45,570
think is cool because we don't usually

21
00:00:43,829 --> 00:00:49,350
see those kind of data points in a talk

22
00:00:45,570 --> 00:00:51,719
like this so like I said my name is Kyle

23
00:00:49,350 --> 00:00:53,760
to opener I'm a director of enterprise

24
00:00:51,719 --> 00:00:54,570
security at Salesforce I live in San

25
00:00:53,760 --> 00:00:56,849
Francisco

26
00:00:54,570 --> 00:00:58,949
I've been in security for about seven

27
00:00:56,850 --> 00:01:01,410
years and my focus generally is

28
00:00:58,949 --> 00:01:03,390
application security I could have to

29
00:01:01,410 --> 00:01:05,700
known everybody this is Alessandro I'm

30
00:01:03,390 --> 00:01:07,619
an application security and software

31
00:01:05,700 --> 00:01:09,720
engineer with security compliance at

32
00:01:07,619 --> 00:01:11,520
Salesforce where I work on

33
00:01:09,720 --> 00:01:15,920
customer-facing applications and

34
00:01:11,520 --> 00:01:17,759
internal automation tools however these

35
00:01:15,920 --> 00:01:20,159
presentation speaks to the work that

36
00:01:17,759 --> 00:01:23,369
Kyle and I started about three years ago

37
00:01:20,159 --> 00:01:25,409
in enterprise security and you're gonna

38
00:01:23,369 --> 00:01:27,150
get two perspectives here you're gonna

39
00:01:25,409 --> 00:01:31,710
get my perspective as a manager and

40
00:01:27,150 --> 00:01:34,290
allies perspective as an engineer so a

41
00:01:31,710 --> 00:01:36,720
little bit of background here I like I

42
00:01:34,290 --> 00:01:38,640
said I work doing enterprise security

43
00:01:36,720 --> 00:01:39,869
Holly does as well I think it's

44
00:01:38,640 --> 00:01:41,430
important to understand what is

45
00:01:39,869 --> 00:01:42,570
enterprise security and what do we mean

46
00:01:41,430 --> 00:01:44,460
because it'll put you kind of in the

47
00:01:42,570 --> 00:01:47,369
mindset that we had when we were making

48
00:01:44,460 --> 00:01:49,740
these decisions so in a traditional

49
00:01:47,369 --> 00:01:52,079
environment you have IT security and IT

50
00:01:49,740 --> 00:01:54,509
security focuses on things that IT does

51
00:01:52,079 --> 00:01:57,059
you know internal automation servers

52
00:01:54,509 --> 00:01:59,880
stuff like that in our company because

53
00:01:57,060 --> 00:02:02,219
we are hyper growth we don't just have

54
00:01:59,880 --> 00:02:04,259
IT doing automation every business unit

55
00:02:02,219 --> 00:02:06,929
has their own development team is doing

56
00:02:04,259 --> 00:02:10,500
a ton of work so marketing sales finance

57
00:02:06,930 --> 00:02:12,599
HR customer support and I T so we

58
00:02:10,500 --> 00:02:13,620
branded our team enterprise security to

59
00:02:12,599 --> 00:02:15,238
make sure our minds

60
00:02:13,620 --> 00:02:17,280
was focusing on taking care of the

61
00:02:15,239 --> 00:02:20,190
security needs of the entire company not

62
00:02:17,280 --> 00:02:22,200
just IT but this comes with some very

63
00:02:20,190 --> 00:02:24,269
significant challenges you know when

64
00:02:22,200 --> 00:02:26,220
your IT security you have a choke point

65
00:02:24,269 --> 00:02:28,409
a place where you can put your focus IT

66
00:02:26,220 --> 00:02:31,560
when you are looking at the entire

67
00:02:28,409 --> 00:02:33,149
company you know we are a team of six at

68
00:02:31,560 --> 00:02:34,950
the time when we started this work and

69
00:02:33,150 --> 00:02:38,579
though we had thirty thousand employees

70
00:02:34,950 --> 00:02:40,290
so trying to do scalable security work

71
00:02:38,579 --> 00:02:41,970
against every different department in

72
00:02:40,290 --> 00:02:44,420
the company can be a major challenge

73
00:02:41,970 --> 00:02:44,420
sometimes

74
00:02:54,180 --> 00:02:57,709
but if you click right there sorry we

75
00:02:56,129 --> 00:03:01,560
lost her there we go

76
00:02:57,709 --> 00:03:03,480
so these security people we like gates

77
00:03:01,560 --> 00:03:05,700
we like to say you're gonna do a risky

78
00:03:03,480 --> 00:03:07,980
thing I'm gonna put myself in front of

79
00:03:05,700 --> 00:03:10,018
you and production so if you're gonna do

80
00:03:07,980 --> 00:03:12,298
that risky thing I can have input I can

81
00:03:10,019 --> 00:03:14,040
say well let's do this let's make it

82
00:03:12,299 --> 00:03:14,519
less risky or no you shouldn't do that

83
00:03:14,040 --> 00:03:16,560
at all

84
00:03:14,519 --> 00:03:18,810
that's a gated process security people

85
00:03:16,560 --> 00:03:22,140
like myself we love those processes but

86
00:03:18,810 --> 00:03:25,530
gates don't scale super well if you know

87
00:03:22,140 --> 00:03:27,089
big companies that like the setup that

88
00:03:25,530 --> 00:03:29,959
we have working with the entire company

89
00:03:27,090 --> 00:03:32,430
can cause havoc for a gated process

90
00:03:29,959 --> 00:03:34,230
people will bypass our process if they

91
00:03:32,430 --> 00:03:35,849
just don't know we exist you know how do

92
00:03:34,230 --> 00:03:37,798
you communicate that there is this sort

93
00:03:35,849 --> 00:03:39,659
of security process over here to all

94
00:03:37,799 --> 00:03:41,970
these departments who are getting new

95
00:03:39,659 --> 00:03:43,078
people constantly they never know who to

96
00:03:41,970 --> 00:03:46,109
talk to they just go and do their own

97
00:03:43,079 --> 00:03:48,299
thing and then if they do know that you

98
00:03:46,109 --> 00:03:51,569
exist if you happen to provide bad

99
00:03:48,299 --> 00:03:53,819
customer service or you're slow you know

100
00:03:51,569 --> 00:03:55,409
you get a backlog suddenly it's two

101
00:03:53,819 --> 00:03:57,480
weeks review three weeks review whatever

102
00:03:55,409 --> 00:03:58,918
they're just gonna bypass you they need

103
00:03:57,480 --> 00:03:59,578
to get to production as quickly as

104
00:03:58,919 --> 00:04:01,379
possible

105
00:03:59,579 --> 00:04:03,599
automate this new marketing thing that's

106
00:04:01,379 --> 00:04:04,980
super critical for them there's no like

107
00:04:03,599 --> 00:04:07,078
they have no incentive to come to you

108
00:04:04,980 --> 00:04:08,518
and they're gonna bypass you if there's

109
00:04:07,079 --> 00:04:09,780
an easier way maybe they don't like the

110
00:04:08,519 --> 00:04:11,250
advice that we're giving maybe they

111
00:04:09,780 --> 00:04:16,949
don't like the technologies that we're

112
00:04:11,250 --> 00:04:18,630
pushing they're just gonna bypass us so

113
00:04:16,949 --> 00:04:20,459
once you're bypassed you have a

114
00:04:18,630 --> 00:04:22,380
significant problem which is visibility

115
00:04:20,459 --> 00:04:24,539
you know if marketing is doing all this

116
00:04:22,380 --> 00:04:25,949
stuff that we're not ever seeing they

117
00:04:24,539 --> 00:04:27,449
could be doing really risky stuff that

118
00:04:25,949 --> 00:04:29,280
we don't know about and we can't have

119
00:04:27,449 --> 00:04:32,190
any input so suddenly I'm not doing my

120
00:04:29,280 --> 00:04:33,900
job very effectively i T used to be the

121
00:04:32,190 --> 00:04:35,250
key to this you know you could go to the

122
00:04:33,900 --> 00:04:37,080
people who are provisioning servers you

123
00:04:35,250 --> 00:04:38,849
could say anytime someone comes to you

124
00:04:37,080 --> 00:04:40,949
for a vm I want to know I want to do

125
00:04:38,849 --> 00:04:42,750
something about it can't really do that

126
00:04:40,949 --> 00:04:44,729
anymore when someone can take a credit

127
00:04:42,750 --> 00:04:46,470
card they can go over to AWS they can

128
00:04:44,729 --> 00:04:47,460
have a new environment for a data Lake

129
00:04:46,470 --> 00:04:50,340
in like an hour

130
00:04:47,460 --> 00:04:51,630
that is really problematic because it

131
00:04:50,340 --> 00:04:53,729
can introduce a ton of variability

132
00:04:51,630 --> 00:04:54,960
everyone has a credit card everyone has

133
00:04:53,729 --> 00:04:58,260
a budget everyone's doing these

134
00:04:54,960 --> 00:05:00,960
automation tasks how can I scale my

135
00:04:58,260 --> 00:05:03,000
security efforts when there are you know

136
00:05:00,960 --> 00:05:05,279
multiple platforms all these different

137
00:05:03,000 --> 00:05:07,650
environments it's just really quite a

138
00:05:05,279 --> 00:05:09,690
mess so la

139
00:05:07,650 --> 00:05:12,419
right so head oku for those of you who

140
00:05:09,690 --> 00:05:14,490
don't know Heroku is a cloud platform is

141
00:05:12,419 --> 00:05:16,560
so-called platform-as-a-service

142
00:05:14,490 --> 00:05:19,770
which makes the process of running

143
00:05:16,560 --> 00:05:22,110
scaling managing and doing application

144
00:05:19,770 --> 00:05:24,150
as easy and straightforward as possible

145
00:05:22,110 --> 00:05:26,220
so that developers can focus on what

146
00:05:24,150 --> 00:05:28,799
they care about the most which is

147
00:05:26,220 --> 00:05:31,740
building applications not worrying about

148
00:05:28,800 --> 00:05:34,860
all the underlying infrastructure and

149
00:05:31,740 --> 00:05:37,830
deploying applications on Heroku is as

150
00:05:34,860 --> 00:05:39,479
simple as a gate push on top of the head

151
00:05:37,830 --> 00:05:44,250
oku supports a variety of languages

152
00:05:39,479 --> 00:05:46,740
including node Python Java PHP Scala go

153
00:05:44,250 --> 00:05:49,229
and so can be used by a variety of

154
00:05:46,740 --> 00:05:51,360
different develop developers and n teams

155
00:05:49,229 --> 00:05:53,699
and so sure enough

156
00:05:51,360 --> 00:05:55,860
shortly after Salesforce acquired the

157
00:05:53,699 --> 00:05:58,169
Heroku we started hearing about all

158
00:05:55,860 --> 00:06:00,979
these new Heroku applications popping

159
00:05:58,169 --> 00:06:04,799
out throughout Salesforce here and there

160
00:06:00,979 --> 00:06:06,979
we talked a little deeper and came to

161
00:06:04,800 --> 00:06:10,320
notice a couple of things so number one

162
00:06:06,979 --> 00:06:12,210
you just needed to know someone to get

163
00:06:10,320 --> 00:06:14,039
an account on Heroku if you know the

164
00:06:12,210 --> 00:06:16,888
right person you could get a an account

165
00:06:14,039 --> 00:06:19,169
really quickly developers where at the

166
00:06:16,889 --> 00:06:21,030
same time very excited about the sort of

167
00:06:19,169 --> 00:06:23,340
like flexibility and ease of use that

168
00:06:21,030 --> 00:06:25,590
the platform provides which is all great

169
00:06:23,340 --> 00:06:28,500
but this kind of like is concerning for

170
00:06:25,590 --> 00:06:31,169
enterprise security because we would

171
00:06:28,500 --> 00:06:33,570
only hear about applications if someone

172
00:06:31,169 --> 00:06:38,430
told us without any proactive way to get

173
00:06:33,570 --> 00:06:41,340
to know about them so really we had

174
00:06:38,430 --> 00:06:44,849
three main challenges the the internal

175
00:06:41,340 --> 00:06:46,799
Heroku footprint was rapidly expanding

176
00:06:44,849 --> 00:06:49,169
which as we said is great from a

177
00:06:46,800 --> 00:06:51,570
business perspective developers love the

178
00:06:49,169 --> 00:06:54,150
platform but it was very challenging for

179
00:06:51,570 --> 00:06:55,770
a small team such as ours to keep up

180
00:06:54,150 --> 00:06:58,739
with in the number of new environments

181
00:06:55,770 --> 00:07:01,260
that we were seeing coming up throughout

182
00:06:58,740 --> 00:07:03,180
the company number two

183
00:07:01,260 --> 00:07:05,789
limited visibility we had really no

184
00:07:03,180 --> 00:07:08,940
programmatic way to discover all these

185
00:07:05,789 --> 00:07:10,740
new environments we kept hearing about

186
00:07:08,940 --> 00:07:13,370
applications that we had never been

187
00:07:10,740 --> 00:07:16,770
involved with and let me tell you

188
00:07:13,370 --> 00:07:18,510
responding no to someone who asks did

189
00:07:16,770 --> 00:07:20,849
you know about this application is the

190
00:07:18,510 --> 00:07:23,879
worst feeling as a security engineer we

191
00:07:20,849 --> 00:07:26,639
the worse and so ultimately without any

192
00:07:23,879 --> 00:07:29,189
hooks into the provisioning process our

193
00:07:26,639 --> 00:07:31,020
gated approval process was really

194
00:07:29,189 --> 00:07:33,330
ineffective and we could easily be

195
00:07:31,020 --> 00:07:35,068
bypassed anybody just like Cal said

196
00:07:33,330 --> 00:07:37,378
could just kind of goes what credit card

197
00:07:35,069 --> 00:07:40,319
or user hello coud not not telling us

198
00:07:37,379 --> 00:07:42,569
anything so we began to wonder what can

199
00:07:40,319 --> 00:07:45,779
we do in order to solve all sort of

200
00:07:42,569 --> 00:07:47,159
solve for these three challenges yeah

201
00:07:45,779 --> 00:07:49,319
you could imagine at that time we were

202
00:07:47,159 --> 00:07:53,369
getting very frustrated because this was

203
00:07:49,319 --> 00:07:55,349
happening like quite quite often so we

204
00:07:53,369 --> 00:07:57,539
started to theorize about what we could

205
00:07:55,349 --> 00:07:59,099
do and we got inspired by a couple of

206
00:07:57,539 --> 00:08:01,740
key things we were seeing from the

207
00:07:59,099 --> 00:08:03,330
industry around that time the first was

208
00:08:01,740 --> 00:08:04,110
like this concept of a path of least

209
00:08:03,330 --> 00:08:06,628
resistance

210
00:08:04,110 --> 00:08:08,099
you know if developers or you know

211
00:08:06,629 --> 00:08:09,990
business people have credit cards and

212
00:08:08,099 --> 00:08:11,308
they can just march over AWS and end up

213
00:08:09,990 --> 00:08:13,499
with this giant environment that we've

214
00:08:11,309 --> 00:08:15,569
never seen that we have no input on you

215
00:08:13,499 --> 00:08:18,119
know that's problematic for us so we

216
00:08:15,569 --> 00:08:20,909
need to find a way to provide a path to

217
00:08:18,119 --> 00:08:23,309
resources within Salesforce that is more

218
00:08:20,909 --> 00:08:24,949
effective than a credit card so if we

219
00:08:23,309 --> 00:08:28,319
can be more effective than a credit card

220
00:08:24,949 --> 00:08:30,029
process we might have a chance but if we

221
00:08:28,319 --> 00:08:32,938
can't we're gonna lose out to kind of

222
00:08:30,029 --> 00:08:35,698
these other these other systems and so

223
00:08:32,938 --> 00:08:37,438
we thought well cost then is probably a

224
00:08:35,698 --> 00:08:39,419
motivating factor if we can find some

225
00:08:37,438 --> 00:08:41,549
way to play with the cost of server

226
00:08:39,419 --> 00:08:44,939
resources we might have you know an

227
00:08:41,549 --> 00:08:46,709
advantage and then ease-of-use and speed

228
00:08:44,939 --> 00:08:48,660
if we can speed up how people are

229
00:08:46,709 --> 00:08:50,279
getting access to these resources you

230
00:08:48,660 --> 00:08:53,519
know maybe take our gated process out of

231
00:08:50,279 --> 00:08:56,240
the way that would be really awesome the

232
00:08:53,519 --> 00:08:58,649
other thing we've looking at is SDLC

233
00:08:56,240 --> 00:09:00,930
security champions kind of that kind of

234
00:08:58,649 --> 00:09:02,519
enablement we didn't have anything like

235
00:09:00,930 --> 00:09:05,219
that for this process but we thought

236
00:09:02,519 --> 00:09:07,139
that might be a good approach you know

237
00:09:05,220 --> 00:09:09,509
if we could shift the security effort

238
00:09:07,139 --> 00:09:11,939
left to the developers for small team

239
00:09:09,509 --> 00:09:14,040
like ours any work that they do is just

240
00:09:11,939 --> 00:09:17,310
work that it's taken off our plate you

241
00:09:14,040 --> 00:09:19,829
know it's like huge value for us finally

242
00:09:17,310 --> 00:09:21,239
we had this theory that you know we have

243
00:09:19,829 --> 00:09:22,709
this gated process but it's low

244
00:09:21,240 --> 00:09:24,959
participation we're getting people

245
00:09:22,709 --> 00:09:27,388
bypassing it constantly so if we could

246
00:09:24,959 --> 00:09:29,849
go to more of a high volume high

247
00:09:27,389 --> 00:09:32,850
participation process that was

248
00:09:29,850 --> 00:09:33,750
self-service we may sacrifice some of

249
00:09:32,850 --> 00:09:35,850
the depths that we

250
00:09:33,750 --> 00:09:37,949
in our gated process which involved like

251
00:09:35,850 --> 00:09:39,300
code reviews pen tests architecture

252
00:09:37,949 --> 00:09:42,029
reviews that kind of standard security

253
00:09:39,300 --> 00:09:44,878
stuff we could shift left maybe have a

254
00:09:42,029 --> 00:09:46,529
little less depth but significantly more

255
00:09:44,879 --> 00:09:48,930
coverage hopefully approaching a hundred

256
00:09:46,529 --> 00:09:51,420
percent like maybe the math would work

257
00:09:48,930 --> 00:09:53,310
out such that we're doing less but we've

258
00:09:51,420 --> 00:09:59,160
kept the same amount of security value

259
00:09:53,310 --> 00:10:01,888
overall so we decided to build a new

260
00:09:59,160 --> 00:10:05,850
process using some of these ideas and so

261
00:10:01,889 --> 00:10:07,319
we came up with three key goals we

262
00:10:05,850 --> 00:10:08,759
weren't sure but we thought what if we

263
00:10:07,319 --> 00:10:11,069
could just make it free like we have a

264
00:10:08,759 --> 00:10:14,189
huge advantage here we own Heroku it's

265
00:10:11,069 --> 00:10:16,019
kind of funny math right like I pay for

266
00:10:14,189 --> 00:10:17,699
it they pay for it it's still salesforce

267
00:10:16,019 --> 00:10:19,470
paying for it so what if we find a way

268
00:10:17,699 --> 00:10:21,329
to take cost completely out of the

269
00:10:19,470 --> 00:10:23,310
equation and just don't charge the

270
00:10:21,329 --> 00:10:25,138
developers you know they come they say

271
00:10:23,310 --> 00:10:29,069
I'd like server resources and we say

272
00:10:25,139 --> 00:10:30,329
here they are and there's no bill we

273
00:10:29,069 --> 00:10:31,889
thought well that's gonna kick the crap

274
00:10:30,329 --> 00:10:33,589
out of a credit card like you don't have

275
00:10:31,889 --> 00:10:36,120
to pay that sounds awesome

276
00:10:33,589 --> 00:10:37,410
next we thought okay right now we have

277
00:10:36,120 --> 00:10:39,420
this gated process what if we could

278
00:10:37,410 --> 00:10:41,550
switch to entirely self-serve so

279
00:10:39,420 --> 00:10:42,959
developers say hey I have this you know

280
00:10:41,550 --> 00:10:45,689
this automation I need to do for my

281
00:10:42,959 --> 00:10:47,939
department I go to some kind of portal I

282
00:10:45,689 --> 00:10:49,769
have request resources I get them as

283
00:10:47,939 --> 00:10:51,839
quickly as possible and there's no like

284
00:10:49,769 --> 00:10:53,850
approval process we don't say what are

285
00:10:51,839 --> 00:10:57,149
you doing no you can't have resources we

286
00:10:53,850 --> 00:10:58,589
just say here they are that seems like a

287
00:10:57,149 --> 00:11:00,540
really good idea that really would

288
00:10:58,589 --> 00:11:03,500
enable the developers and make them feel

289
00:11:00,540 --> 00:11:05,459
like they were owning their own security

290
00:11:03,500 --> 00:11:06,930
finally we thought if we're going to do

291
00:11:05,459 --> 00:11:08,518
this we need some kind of automated

292
00:11:06,930 --> 00:11:10,319
visibility you know if we don't have a

293
00:11:08,519 --> 00:11:11,910
gate even though our visibility it was

294
00:11:10,319 --> 00:11:14,099
bad with the gate we have some we need

295
00:11:11,910 --> 00:11:15,870
some way to replace that visibility with

296
00:11:14,100 --> 00:11:17,970
something better so we thought let's

297
00:11:15,870 --> 00:11:21,000
build a tool that can track all of these

298
00:11:17,970 --> 00:11:23,189
environments in a very scalable way so

299
00:11:21,000 --> 00:11:24,959
you know I'm a manager I'm about to get

300
00:11:23,189 --> 00:11:26,399
rid of a more in-depth security process

301
00:11:24,959 --> 00:11:28,500
and switch it up with something a little

302
00:11:26,399 --> 00:11:30,809
looser I was excited but like a little

303
00:11:28,500 --> 00:11:34,259
scared definitely an unexplored frontier

304
00:11:30,809 --> 00:11:37,290
for our team so I thought we better find

305
00:11:34,259 --> 00:11:39,540
some ways to measure effectiveness so at

306
00:11:37,290 --> 00:11:41,099
least in this process we thought if we

307
00:11:39,540 --> 00:11:44,099
got to have a path of least resistance

308
00:11:41,100 --> 00:11:46,470
we need to measure did we reduce that

309
00:11:44,100 --> 00:11:47,520
resistance if we did we would probably

310
00:11:46,470 --> 00:11:50,310
see a huge

311
00:11:47,520 --> 00:11:52,890
like in usage of our process so we

312
00:11:50,310 --> 00:11:54,540
looked at how many environments had gone

313
00:11:52,890 --> 00:11:56,490
through our process the previous year

314
00:11:54,540 --> 00:11:57,750
and the previous year before that and we

315
00:11:56,490 --> 00:11:58,950
looked at how many environments we

316
00:11:57,750 --> 00:12:01,200
discovered that didn't go through our

317
00:11:58,950 --> 00:12:03,180
process and we kind of came up with a

318
00:12:01,200 --> 00:12:05,130
number that we thought if we can beat

319
00:12:03,180 --> 00:12:07,920
this number then we've done a really

320
00:12:05,130 --> 00:12:10,680
good job we've got a statistically

321
00:12:07,920 --> 00:12:12,839
significant amount of growth we also

322
00:12:10,680 --> 00:12:14,130
just we weren't sure at the time but we

323
00:12:12,840 --> 00:12:15,750
thought if we can make it totally free

324
00:12:14,130 --> 00:12:17,520
for the developers that's gonna be kind

325
00:12:15,750 --> 00:12:19,440
of a binary yes-or-no we succeeded in

326
00:12:17,520 --> 00:12:21,180
that path of least resistance there's

327
00:12:19,440 --> 00:12:22,620
kind of a lot of behind the scenes

328
00:12:21,180 --> 00:12:24,750
business work that would have to go into

329
00:12:22,620 --> 00:12:26,850
that but we thought if we can get that

330
00:12:24,750 --> 00:12:28,470
that would be great I also wanted to

331
00:12:26,850 --> 00:12:31,290
measure how quickly do they get the

332
00:12:28,470 --> 00:12:33,870
resources like ideally 100% automated

333
00:12:31,290 --> 00:12:35,699
instantaneous is the goal but you know

334
00:12:33,870 --> 00:12:37,620
there may be things down the line other

335
00:12:35,700 --> 00:12:39,690
teams that have dependencies that we

336
00:12:37,620 --> 00:12:41,670
don't control so our goal was like let's

337
00:12:39,690 --> 00:12:44,250
get it down to maybe a day or a couple

338
00:12:41,670 --> 00:12:46,500
days as quickly as possible so that when

339
00:12:44,250 --> 00:12:48,600
combined with the free usage it would

340
00:12:46,500 --> 00:12:51,990
really compete with kind of like swiping

341
00:12:48,600 --> 00:12:54,420
a credit card and then we even wanted to

342
00:12:51,990 --> 00:12:56,190
think about okay we're asking developers

343
00:12:54,420 --> 00:12:57,810
to follow security guidelines kind of

344
00:12:56,190 --> 00:12:59,580
shift left be security champions

345
00:12:57,810 --> 00:13:01,589
themselves how can we measure whether

346
00:12:59,580 --> 00:13:04,080
that's been effective so we looked at

347
00:13:01,590 --> 00:13:05,250
the properties of a Heroku environment

348
00:13:04,080 --> 00:13:07,920
that we really cared about and we

349
00:13:05,250 --> 00:13:10,260
thought we can measure how many users

350
00:13:07,920 --> 00:13:11,310
turn on to FA you know when our security

351
00:13:10,260 --> 00:13:13,350
guidelines we're gonna tell them to do

352
00:13:11,310 --> 00:13:15,150
it if they do it that's gonna be a

353
00:13:13,350 --> 00:13:16,470
really good sign that they are following

354
00:13:15,150 --> 00:13:18,150
the guidelines that they give them if

355
00:13:16,470 --> 00:13:19,440
they're not doing it I mean turning on

356
00:13:18,150 --> 00:13:21,569
to a PHA is super easy if they're not

357
00:13:19,440 --> 00:13:23,280
doing it that's probably gonna be a good

358
00:13:21,570 --> 00:13:26,700
sign that they are just ignoring the

359
00:13:23,280 --> 00:13:28,890
guidelines entirely we also wanted to

360
00:13:26,700 --> 00:13:30,240
add a measurement that wasn't just to a

361
00:13:28,890 --> 00:13:31,650
fake because we thought well some people

362
00:13:30,240 --> 00:13:33,900
might just turn that on without even

363
00:13:31,650 --> 00:13:36,209
reading the guidelines so we put in some

364
00:13:33,900 --> 00:13:38,699
third-party add-on usage

365
00:13:36,210 --> 00:13:40,260
you know Heroku has a marketplace a lot

366
00:13:38,700 --> 00:13:42,480
like other platforms where you can go

367
00:13:40,260 --> 00:13:44,220
and get different add-ons and we have a

368
00:13:42,480 --> 00:13:45,870
list of ones that our company can work

369
00:13:44,220 --> 00:13:47,940
with and a list where we shouldn't work

370
00:13:45,870 --> 00:13:49,710
with them and so we thought well let's

371
00:13:47,940 --> 00:13:51,840
make that list part of the security

372
00:13:49,710 --> 00:13:53,330
guidelines and see how people adhere to

373
00:13:51,840 --> 00:13:55,890
that list

374
00:13:53,330 --> 00:13:57,870
finally this theory of like high volume

375
00:13:55,890 --> 00:14:00,930
self-service versus like the more

376
00:13:57,870 --> 00:14:02,339
in-depth part low participation gate

377
00:14:00,930 --> 00:14:04,949
it's a little harder to measure this

378
00:14:02,339 --> 00:14:06,420
exactly but using all of the previous

379
00:14:04,950 --> 00:14:08,640
measures we thought we could get to more

380
00:14:06,420 --> 00:14:10,560
of a qualitative look at this you know

381
00:14:08,640 --> 00:14:11,939
if we definitely have a path of least

382
00:14:10,560 --> 00:14:13,829
resistance if we feel like we're getting

383
00:14:11,940 --> 00:14:17,550
a much higher volume of usage of our

384
00:14:13,830 --> 00:14:19,770
process and we get good adherence to the

385
00:14:17,550 --> 00:14:22,050
security policy then we thought we might

386
00:14:19,770 --> 00:14:23,790
be able to really understand if we've

387
00:14:22,050 --> 00:14:27,630
gotten the right amount of security

388
00:14:23,790 --> 00:14:31,589
value out of this process so here we go

389
00:14:27,630 --> 00:14:36,750
little nervous hi let's look at

390
00:14:31,589 --> 00:14:39,690
implementation so as Cal said providing

391
00:14:36,750 --> 00:14:42,899
the path of least resistance is key to

392
00:14:39,690 --> 00:14:44,700
the adoption of this new process we are

393
00:14:42,899 --> 00:14:47,010
so clearly needed some automation to

394
00:14:44,700 --> 00:14:49,080
help and we decided to build a simple

395
00:14:47,010 --> 00:14:51,600
request form where employees could

396
00:14:49,080 --> 00:14:52,740
provide some basic details and get

397
00:14:51,600 --> 00:14:54,990
access to their new header okuu

398
00:14:52,740 --> 00:14:58,890
environment so right away no approvals

399
00:14:54,990 --> 00:15:01,770
needed here you go so you know we sorry

400
00:14:58,890 --> 00:15:03,810
we use nodejs on a head oku to send up a

401
00:15:01,770 --> 00:15:07,500
simple form collecting details such as

402
00:15:03,810 --> 00:15:10,109
the hood requester is the name of the

403
00:15:07,500 --> 00:15:12,029
account the technical contact the target

404
00:15:10,110 --> 00:15:14,190
audience the type of data that the

405
00:15:12,029 --> 00:15:16,200
account will deal with and whether or

406
00:15:14,190 --> 00:15:18,000
not the applications where will be

407
00:15:16,200 --> 00:15:23,190
integrated with any internal or external

408
00:15:18,000 --> 00:15:25,410
systems amongst other data points and to

409
00:15:23,190 --> 00:15:29,430
successfully complete the request the

410
00:15:25,410 --> 00:15:31,550
the user must agree with our security

411
00:15:29,430 --> 00:15:36,290
guidelines which enforces our

412
00:15:31,550 --> 00:15:36,290
self-service approach to the process so

413
00:15:36,890 --> 00:15:41,910
in this new process we'll have a chance

414
00:15:39,120 --> 00:15:43,500
to build in a security baseline while at

415
00:15:41,910 --> 00:15:45,990
the same time allowing developers to

416
00:15:43,500 --> 00:15:49,140
manage some security requirements for

417
00:15:45,990 --> 00:15:51,270
themselves so as we said we provide

418
00:15:49,140 --> 00:15:54,680
developers with the quote unquote free

419
00:15:51,270 --> 00:15:57,779
compute resources that come coupled with

420
00:15:54,680 --> 00:16:00,180
custom domain and related certificate

421
00:15:57,779 --> 00:16:01,740
for each application we started doing

422
00:16:00,180 --> 00:16:03,540
this through an automated certificate

423
00:16:01,740 --> 00:16:05,850
management system although nowadays

424
00:16:03,540 --> 00:16:07,800
ahead oku supports free certificates

425
00:16:05,850 --> 00:16:10,589
through let's encrypt for all

426
00:16:07,800 --> 00:16:12,630
applications we also grant developers

427
00:16:10,589 --> 00:16:14,430
with access to private spaces which are

428
00:16:12,630 --> 00:16:17,730
dedicated environments

429
00:16:14,430 --> 00:16:21,630
applications on an isolated Network very

430
00:16:17,730 --> 00:16:24,600
much like an AWS VPC environment and

431
00:16:21,630 --> 00:16:26,610
those come with static static outbound

432
00:16:24,600 --> 00:16:29,940
IPS which are useful for things like

433
00:16:26,610 --> 00:16:32,700
integration where IP whitelisting may be

434
00:16:29,940 --> 00:16:36,320
desired or required as well as the

435
00:16:32,700 --> 00:16:40,680
ability to appear with other AWS v pcs

436
00:16:36,320 --> 00:16:43,200
the best part the provision accounts

437
00:16:40,680 --> 00:16:47,099
come with a backdoor in the form of a

438
00:16:43,200 --> 00:16:49,890
service account which as we'll see next

439
00:16:47,100 --> 00:16:53,460
slides provide us with a ton of built-in

440
00:16:49,890 --> 00:16:55,620
visibility and at the same time we ask

441
00:16:53,460 --> 00:16:59,040
account owners to manage but we don't

442
00:16:55,620 --> 00:17:01,020
yet at least in enforce enabling

443
00:16:59,040 --> 00:17:03,270
two-factor authentication or single

444
00:17:01,020 --> 00:17:07,500
sign-on through our internal identity

445
00:17:03,270 --> 00:17:10,470
provider and as we touched on Heroku

446
00:17:07,500 --> 00:17:12,089
offers a number of native and

447
00:17:10,470 --> 00:17:15,150
third-party add-ons in fact I believe

448
00:17:12,089 --> 00:17:17,458
that is 150 plus of those which provide

449
00:17:15,150 --> 00:17:20,160
are providing services such as data

450
00:17:17,459 --> 00:17:23,130
stores content management system email

451
00:17:20,160 --> 00:17:25,890
delivery capability login uptime alerts

452
00:17:23,130 --> 00:17:29,190
and so forth and so we ask developers to

453
00:17:25,890 --> 00:17:31,110
only stick to the add-ons that have been

454
00:17:29,190 --> 00:17:34,100
pre-approved so that have been tested

455
00:17:31,110 --> 00:17:36,510
and put on a sort of like a whitelist

456
00:17:34,100 --> 00:17:39,389
last but not least we ask them to please

457
00:17:36,510 --> 00:17:43,550
please please don't disable the service

458
00:17:39,390 --> 00:17:46,980
accounts or we lose all that visibility

459
00:17:43,550 --> 00:17:49,350
so having gotten that visibility into

460
00:17:46,980 --> 00:17:51,570
the new provision the Heroku accounts we

461
00:17:49,350 --> 00:17:55,070
built a Heroku warden as a monitoring

462
00:17:51,570 --> 00:17:57,629
console to report on the utilization and

463
00:17:55,070 --> 00:18:02,010
security baseline of those hadoken

464
00:17:57,630 --> 00:18:04,560
counts again built-in ojs on Heroku it's

465
00:18:02,010 --> 00:18:05,760
made up of two components a web

466
00:18:04,560 --> 00:18:09,179
application front-end

467
00:18:05,760 --> 00:18:12,300
which you can see here on screen as well

468
00:18:09,180 --> 00:18:14,660
as a worker process which thanks through

469
00:18:12,300 --> 00:18:17,220
the to the backdoored service accounts

470
00:18:14,660 --> 00:18:20,280
it runs a set of queries against the

471
00:18:17,220 --> 00:18:23,160
Heroku platform api's on a hourly basis

472
00:18:20,280 --> 00:18:25,830
and stores the result in an underlying

473
00:18:23,160 --> 00:18:28,169
Postgres database things like snapshots

474
00:18:25,830 --> 00:18:30,570
so that we can go back in time and

475
00:18:28,169 --> 00:18:34,320
see how the sophistic swear like on a

476
00:18:30,570 --> 00:18:36,418
specific day time and so the application

477
00:18:34,320 --> 00:18:38,580
helps us answer questions such as you

478
00:18:36,419 --> 00:18:42,239
know how many organizations how many

479
00:18:38,580 --> 00:18:45,210
accounts users private spaces add-ons

480
00:18:42,239 --> 00:18:46,769
domains are part of the ecosystem of

481
00:18:45,210 --> 00:18:49,409
applications that we see running on

482
00:18:46,769 --> 00:18:51,629
Heroku it also helps us answer the

483
00:18:49,409 --> 00:18:54,509
questions that we asked earlier such as

484
00:18:51,629 --> 00:18:56,850
how many user are using 2fa how many are

485
00:18:54,509 --> 00:18:59,600
using single sign-on how many of those

486
00:18:56,850 --> 00:19:02,158
are not using either hopefully not many

487
00:18:59,600 --> 00:19:04,498
and ultimately of course how many

488
00:19:02,159 --> 00:19:07,559
observations are using approved versus

489
00:19:04,499 --> 00:19:12,629
unapproved add-ons okay so let's look at

490
00:19:07,559 --> 00:19:16,139
some metrics so we launched this process

491
00:19:12,629 --> 00:19:17,840
in April 2016 and we kind of seeded that

492
00:19:16,139 --> 00:19:19,830
tool that Ali just showed with

493
00:19:17,840 --> 00:19:23,039
environments that we had found

494
00:19:19,830 --> 00:19:25,739
previously that maybe had bypassed us or

495
00:19:23,039 --> 00:19:27,539
had had come to us so orgs are kind of

496
00:19:25,739 --> 00:19:29,639
the high-level structure but we

497
00:19:27,539 --> 00:19:33,690
aggregate users and apps and so we had

498
00:19:29,639 --> 00:19:35,219
50 users 150 apps on day one and we

499
00:19:33,690 --> 00:19:37,409
wanted to use this as our baseline to

500
00:19:35,220 --> 00:19:39,720
kind of make predictions about what

501
00:19:37,409 --> 00:19:42,330
success would look like after a year of

502
00:19:39,720 --> 00:19:44,129
running this process because you know we

503
00:19:42,330 --> 00:19:46,678
want to measure our people adopting our

504
00:19:44,129 --> 00:19:49,080
process and maybe can we you know

505
00:19:46,679 --> 00:19:52,679
understand are we getting close to full

506
00:19:49,080 --> 00:19:57,029
adoption so here's the prediction we

507
00:19:52,679 --> 00:19:58,679
came up with we expected based on kind

508
00:19:57,029 --> 00:20:00,509
of previous volume and then a certain

509
00:19:58,679 --> 00:20:06,690
amount of statistical significance to

510
00:20:00,509 --> 00:20:09,200
get up to 250 users and 250 apps how do

511
00:20:06,690 --> 00:20:13,019
we do well I think we did pretty well

512
00:20:09,200 --> 00:20:15,869
let's look at those numbers so by April

513
00:20:13,019 --> 00:20:17,519
2017 we had twice as many counts twice

514
00:20:15,869 --> 00:20:20,850
as many users and a lot more

515
00:20:17,519 --> 00:20:23,070
applications than we had predicted so

516
00:20:20,850 --> 00:20:24,779
our customers our users were really

517
00:20:23,070 --> 00:20:26,489
responding to the speed at which they

518
00:20:24,779 --> 00:20:27,989
could come up with new environments and

519
00:20:26,489 --> 00:20:28,739
start getting their applications up and

520
00:20:27,989 --> 00:20:30,509
running

521
00:20:28,739 --> 00:20:32,850
and word was quickly spreading

522
00:20:30,509 --> 00:20:35,789
throughout the company between their

523
00:20:32,850 --> 00:20:38,309
colleagues and so obviously a year

524
00:20:35,789 --> 00:20:39,779
metrics don't tell the whole story but

525
00:20:38,309 --> 00:20:42,100
we knew that these numbers were growing

526
00:20:39,779 --> 00:20:46,809
quickly and so let's take a look at

527
00:20:42,100 --> 00:20:49,209
how things look like today so since then

528
00:20:46,809 --> 00:20:53,049
like the curve just kind of exploded

529
00:20:49,210 --> 00:20:56,140
we now have 5000 users and 3500 apps on

530
00:20:53,049 --> 00:20:59,850
Heroku that are monitored by us every

531
00:20:56,140 --> 00:21:03,610
hour and it's been kind of incredible

532
00:20:59,850 --> 00:21:05,709
you know that's basically 10x users 10x

533
00:21:03,610 --> 00:21:07,418
apps maybe a bit more than that and

534
00:21:05,710 --> 00:21:09,820
we're still seeing about five new

535
00:21:07,419 --> 00:21:12,669
organizations hop on board every month

536
00:21:09,820 --> 00:21:14,230
and there are so many great business

537
00:21:12,669 --> 00:21:15,700
apps that have been built this way that

538
00:21:14,230 --> 00:21:17,409
are really helping our company grow

539
00:21:15,700 --> 00:21:19,659
because people are just able to go from

540
00:21:17,409 --> 00:21:21,730
oh we need this automation to speed up

541
00:21:19,659 --> 00:21:24,850
this process let's go to an app super

542
00:21:21,730 --> 00:21:27,400
quick the other nice thing is our team

543
00:21:24,850 --> 00:21:31,240
has only grown from 6 users to 10 users

544
00:21:27,400 --> 00:21:32,860
so we didn't quite double but the number

545
00:21:31,240 --> 00:21:35,650
of apps that we've been able to cover

546
00:21:32,860 --> 00:21:37,658
with this process is awesome like we

547
00:21:35,650 --> 00:21:39,820
would have been crushed or we would not

548
00:21:37,659 --> 00:21:41,320
have seen all of this or it you know

549
00:21:39,820 --> 00:21:43,510
maybe the growth wouldn't even be on

550
00:21:41,320 --> 00:21:45,189
Heroku it could be on AWS or GCP because

551
00:21:43,510 --> 00:21:50,440
we wouldn't have had this streamlined

552
00:21:45,190 --> 00:21:54,789
process okay so cuz some lessons learned

553
00:21:50,440 --> 00:21:57,640
from this so we think that the process

554
00:21:54,789 --> 00:22:00,490
was wildly successful primarily because

555
00:21:57,640 --> 00:22:03,250
we focused solving a business process or

556
00:22:00,490 --> 00:22:05,620
a business issue while trying to solve

557
00:22:03,250 --> 00:22:07,929
our own visibility problems so we

558
00:22:05,620 --> 00:22:09,639
ditched the slow and gated approval

559
00:22:07,929 --> 00:22:12,640
process that we were talking about and

560
00:22:09,640 --> 00:22:14,440
we're able to deliver the computer

561
00:22:12,640 --> 00:22:16,539
sources quickly so that developers could

562
00:22:14,440 --> 00:22:18,580
move at the speed of the business and

563
00:22:16,539 --> 00:22:21,070
ultimately really incentivizes the

564
00:22:18,580 --> 00:22:24,428
adoption we were able to concentrate our

565
00:22:21,070 --> 00:22:27,039
users on a single platform so we

566
00:22:24,429 --> 00:22:29,830
essentially swung the value calculation

567
00:22:27,039 --> 00:22:33,309
value proposition so far towards our

568
00:22:29,830 --> 00:22:36,490
process our platforms the very few other

569
00:22:33,309 --> 00:22:38,340
options if any could compete she's a

570
00:22:36,490 --> 00:22:40,600
great success

571
00:22:38,340 --> 00:22:43,408
another thing that's really influenced

572
00:22:40,600 --> 00:22:46,750
me is kind of a manager of a team is the

573
00:22:43,409 --> 00:22:49,809
demand that we saw so I previously

574
00:22:46,750 --> 00:22:51,669
operated this gated process and it was

575
00:22:49,809 --> 00:22:53,168
the lowest low you know it had an

576
00:22:51,669 --> 00:22:54,540
unpredictable outcome for the business

577
00:22:53,169 --> 00:22:55,920
because if you came got a

578
00:22:54,540 --> 00:22:57,480
test for code review or something and

579
00:22:55,920 --> 00:23:00,420
you you could walk away with homework

580
00:22:57,480 --> 00:23:01,950
and not end up going to production so

581
00:23:00,420 --> 00:23:03,720
there were delays and there weren't many

582
00:23:01,950 --> 00:23:07,140
incentives to actually go through my

583
00:23:03,720 --> 00:23:08,910
process and all of my understanding of

584
00:23:07,140 --> 00:23:10,890
my environment was built around that

585
00:23:08,910 --> 00:23:12,300
process you know I had this conception

586
00:23:10,890 --> 00:23:13,710
and I had these reports that said there

587
00:23:12,300 --> 00:23:15,210
were this many applications that we did

588
00:23:13,710 --> 00:23:16,980
in a year and so on and so forth and

589
00:23:15,210 --> 00:23:18,480
that would roll up to my management and

590
00:23:16,980 --> 00:23:21,480
all that was essentially a little bit

591
00:23:18,480 --> 00:23:24,090
wrong once I had a better understanding

592
00:23:21,480 --> 00:23:26,100
from this you know increased adoption

593
00:23:24,090 --> 00:23:27,570
and increased visibility like the

594
00:23:26,100 --> 00:23:29,550
consistency and understanding of my

595
00:23:27,570 --> 00:23:31,710
environment was so much higher than I

596
00:23:29,550 --> 00:23:35,550
thought it would be my prediction was at

597
00:23:31,710 --> 00:23:38,100
least double off so this got me thinking

598
00:23:35,550 --> 00:23:40,740
for as long as I was running that gated

599
00:23:38,100 --> 00:23:42,959
process I was vastly under estimating

600
00:23:40,740 --> 00:23:45,360
what my environment looked like and I

601
00:23:42,960 --> 00:23:47,490
was not doing the diligence I needed to

602
00:23:45,360 --> 00:23:49,530
be doing to secure my environment once I

603
00:23:47,490 --> 00:23:53,460
had a much more consistent understanding

604
00:23:49,530 --> 00:23:56,460
of what was happening I was much doing

605
00:23:53,460 --> 00:23:58,680
my job so much better you know I had

606
00:23:56,460 --> 00:24:00,600
this consistency of visibility into

607
00:23:58,680 --> 00:24:02,220
environments we had this scaleable

608
00:24:00,600 --> 00:24:04,350
baseline which we could then put our

609
00:24:02,220 --> 00:24:06,000
efforts into increasing if we wanted to

610
00:24:04,350 --> 00:24:07,199
invest more time and up levelling the

611
00:24:06,000 --> 00:24:09,540
amount of security we're doing on these

612
00:24:07,200 --> 00:24:11,220
applications and so overall I really do

613
00:24:09,540 --> 00:24:13,230
think we had a much better security

614
00:24:11,220 --> 00:24:15,300
outcome for the amount of time I

615
00:24:13,230 --> 00:24:20,670
invested as a manager in securing these

616
00:24:15,300 --> 00:24:22,440
resources so with that in mind I now

617
00:24:20,670 --> 00:24:24,450
look at some of my other processes that

618
00:24:22,440 --> 00:24:28,590
I own and wherever there is a gated

619
00:24:24,450 --> 00:24:30,150
process I now think well it's probably

620
00:24:28,590 --> 00:24:32,520
being bypassed a lot more than I think

621
00:24:30,150 --> 00:24:34,350
and so I need to invest a lot more time

622
00:24:32,520 --> 00:24:35,970
and energy in visibility asset

623
00:24:34,350 --> 00:24:37,980
management where I can because sometimes

624
00:24:35,970 --> 00:24:40,110
a gated process is necessary for legal

625
00:24:37,980 --> 00:24:41,520
reasons or all kinds of stuff so you

626
00:24:40,110 --> 00:24:44,610
can't always just ditch it like we did

627
00:24:41,520 --> 00:24:46,590
here but knowing that there are flaws in

628
00:24:44,610 --> 00:24:48,389
a gated process like that and knowing

629
00:24:46,590 --> 00:24:50,459
that people will bypass it to a degree

630
00:24:48,390 --> 00:24:52,650
probably more than you expect you can

631
00:24:50,460 --> 00:24:54,780
invest in something like tooling asset

632
00:24:52,650 --> 00:24:56,190
management discovery to make sure you

633
00:24:54,780 --> 00:24:57,389
have that good understanding of your

634
00:24:56,190 --> 00:25:00,930
environment and you're securing

635
00:24:57,390 --> 00:25:01,920
everything you need to be ok so let's

636
00:25:00,930 --> 00:25:04,560
talk about how the cell service

637
00:25:01,920 --> 00:25:06,170
approached towards security worked with

638
00:25:04,560 --> 00:25:09,000
our developers

639
00:25:06,170 --> 00:25:10,650
so as you can see here about 80% of the

640
00:25:09,000 --> 00:25:13,080
users on the platform we're willing to

641
00:25:10,650 --> 00:25:16,200
enable two-factor authentication or

642
00:25:13,080 --> 00:25:18,240
single sign-on so we know that 80% isn't

643
00:25:16,200 --> 00:25:20,550
perfect but it's a honestly a very

644
00:25:18,240 --> 00:25:22,740
respectable rate for the security

645
00:25:20,550 --> 00:25:24,450
control that basically required no input

646
00:25:22,740 --> 00:25:27,600
whatsoever from the security department

647
00:25:24,450 --> 00:25:29,700
and so at a high level we really think

648
00:25:27,600 --> 00:25:32,100
that this is sort of like evidence that

649
00:25:29,700 --> 00:25:34,650
if the requirement is relatively simple

650
00:25:32,100 --> 00:25:36,659
to achieve it does not conflict with the

651
00:25:34,650 --> 00:25:38,820
needs that the developers have to get

652
00:25:36,660 --> 00:25:41,880
their job done and it has a clear

653
00:25:38,820 --> 00:25:43,620
security outcome then users seem to be

654
00:25:41,880 --> 00:25:44,940
you know willing to manage the

655
00:25:43,620 --> 00:25:48,810
requirement by themselves

656
00:25:44,940 --> 00:25:50,160
I also think it's really interesting you

657
00:25:48,810 --> 00:25:53,700
know we've been operating this process

658
00:25:50,160 --> 00:25:55,830
for about three years and this number

659
00:25:53,700 --> 00:25:58,140
has stayed pretty consistent I think

660
00:25:55,830 --> 00:26:01,530
right now so this was the one year

661
00:25:58,140 --> 00:26:03,390
number right now it said like 85% and

662
00:26:01,530 --> 00:26:05,700
throughout the lifecycle it's been

663
00:26:03,390 --> 00:26:07,350
somewhere between 80 and 85 so we swing

664
00:26:05,700 --> 00:26:09,870
a little bit by a few percent every now

665
00:26:07,350 --> 00:26:11,520
and again but overall people are willing

666
00:26:09,870 --> 00:26:13,080
to adhere to that requirement about that

667
00:26:11,520 --> 00:26:17,610
level which i think is pretty

668
00:26:13,080 --> 00:26:19,199
interesting so another area where we

669
00:26:17,610 --> 00:26:20,010
were worried was the removal of the

670
00:26:19,200 --> 00:26:22,080
service account

671
00:26:20,010 --> 00:26:24,360
you know if they own the environment

672
00:26:22,080 --> 00:26:26,070
we're not you know managing their

673
00:26:24,360 --> 00:26:28,110
environment if they go in and disable

674
00:26:26,070 --> 00:26:30,870
our access we can't see the environment

675
00:26:28,110 --> 00:26:32,310
anymore so we measured how often people

676
00:26:30,870 --> 00:26:36,689
did that and it was actually very very

677
00:26:32,310 --> 00:26:39,270
low 3% about disabled that backdoor and

678
00:26:36,690 --> 00:26:41,190
when we reached out to them it was

679
00:26:39,270 --> 00:26:43,290
mostly just a mistake they said oh I saw

680
00:26:41,190 --> 00:26:44,970
this this you know this access I didn't

681
00:26:43,290 --> 00:26:46,260
know what it was I turned it off and

682
00:26:44,970 --> 00:26:47,370
then we just said hey can you turn it

683
00:26:46,260 --> 00:26:50,940
back on here's why we do it and they

684
00:26:47,370 --> 00:26:52,860
were like oh great so we have a really

685
00:26:50,940 --> 00:26:55,140
simple report that monitors this now and

686
00:26:52,860 --> 00:26:56,669
it's not a big deal so pretty much like

687
00:26:55,140 --> 00:26:59,160
we've been able to maintain that

688
00:26:56,670 --> 00:27:01,140
visibility as we've scaled with very

689
00:26:59,160 --> 00:27:02,850
little issues so again this is a simple

690
00:27:01,140 --> 00:27:05,010
requirement don't disable the black door

691
00:27:02,850 --> 00:27:09,480
and for the most part developers are

692
00:27:05,010 --> 00:27:11,690
very trustful here now we come to an

693
00:27:09,480 --> 00:27:15,000
area where the self-service model didn't

694
00:27:11,690 --> 00:27:16,830
perform quite as well as we had hoped so

695
00:27:15,000 --> 00:27:18,390
if you remember back to the security

696
00:27:16,830 --> 00:27:20,370
requirements we said that developers

697
00:27:18,390 --> 00:27:22,410
were only

698
00:27:20,370 --> 00:27:25,649
so we asked them to only use approved

699
00:27:22,410 --> 00:27:28,590
add-ons and what we found out is that

700
00:27:25,650 --> 00:27:30,990
only 30% of them we're willing to

701
00:27:28,590 --> 00:27:33,330
conform with this requirement and

702
00:27:30,990 --> 00:27:34,830
honestly chances that the number of or

703
00:27:33,330 --> 00:27:37,710
the percentage of developers that are

704
00:27:34,830 --> 00:27:41,159
willing to conform to the requirement is

705
00:27:37,710 --> 00:27:43,290
even lower plus obviously that is a set

706
00:27:41,160 --> 00:27:46,350
of developers who you know chances

707
00:27:43,290 --> 00:27:48,570
didn't need any add-ons to build their

708
00:27:46,350 --> 00:27:52,889
current applications but if they needed

709
00:27:48,570 --> 00:27:54,270
a they would have likely used them so we

710
00:27:52,890 --> 00:27:56,309
think that this is likely because this

711
00:27:54,270 --> 00:27:58,679
is a more complex requirement that does

712
00:27:56,309 --> 00:28:02,280
not have a nice clear security outcome

713
00:27:58,679 --> 00:28:04,530
and and obviously conflicts directly to

714
00:28:02,280 --> 00:28:06,270
the developer needs because we add-ons

715
00:28:04,530 --> 00:28:08,428
provide the functionalities as we said

716
00:28:06,270 --> 00:28:11,760
that developers need to get their jobs

717
00:28:08,429 --> 00:28:14,700
done and ultimately if we had a little

718
00:28:11,760 --> 00:28:16,770
extra development cycles to invest in in

719
00:28:14,700 --> 00:28:19,169
that kind of like a baseline automation

720
00:28:16,770 --> 00:28:21,120
it you know at this point we would

721
00:28:19,169 --> 00:28:24,450
likely prioritize a more complex

722
00:28:21,120 --> 00:28:26,399
requirement like this managing add-ons

723
00:28:24,450 --> 00:28:28,140
over things like two-factor

724
00:28:26,400 --> 00:28:30,030
authentication and single sign-on which

725
00:28:28,140 --> 00:28:36,750
are much easier to measure and to sort

726
00:28:30,030 --> 00:28:38,309
of fix over time so we got interested in

727
00:28:36,750 --> 00:28:39,900
doing this talk because we started to

728
00:28:38,309 --> 00:28:42,450
work on this tool again and it got us

729
00:28:39,900 --> 00:28:44,429
thinking about where we started so we're

730
00:28:42,450 --> 00:28:45,510
making some updates now and so I just

731
00:28:44,429 --> 00:28:48,690
started to talk a little bit about the

732
00:28:45,510 --> 00:28:50,370
roadmap we are going to do a little bit

733
00:28:48,690 --> 00:28:51,750
of notification for the 2fa because I

734
00:28:50,370 --> 00:28:53,729
would like to see that number up at a

735
00:28:51,750 --> 00:28:55,350
hundred percent but all we're gonna do

736
00:28:53,730 --> 00:28:57,150
is just send a little email to people

737
00:28:55,350 --> 00:28:58,620
and be like hey you should turn on to FA

738
00:28:57,150 --> 00:29:00,360
I don't think it needs anything more

739
00:28:58,620 --> 00:29:01,559
than that because 80 percent or more

740
00:29:00,360 --> 00:29:04,500
people are willing to do it on their own

741
00:29:01,559 --> 00:29:06,149
so we can just you know gently remind

742
00:29:04,500 --> 00:29:09,390
people who haven't and we should get

743
00:29:06,150 --> 00:29:11,250
there for the third-party add-ons that's

744
00:29:09,390 --> 00:29:13,679
a more complicated issue we're looking

745
00:29:11,250 --> 00:29:15,540
at building a whitelist that can manage

746
00:29:13,679 --> 00:29:18,900
sort of what you can and cannot install

747
00:29:15,540 --> 00:29:21,090
for them so you know developers are

748
00:29:18,900 --> 00:29:22,950
probably following the path of least

749
00:29:21,090 --> 00:29:24,780
resistance and you know if they need

750
00:29:22,950 --> 00:29:26,760
email they're using an email add on

751
00:29:24,780 --> 00:29:29,129
which we may or may not have a contract

752
00:29:26,760 --> 00:29:31,460
with and going that direction if we can

753
00:29:29,130 --> 00:29:33,330
provide them guidance or you know

754
00:29:31,460 --> 00:29:34,530
basically a white list black

755
00:29:33,330 --> 00:29:36,780
that says here's the add-ons that you

756
00:29:34,530 --> 00:29:41,190
can choose from that will probably solve

757
00:29:36,780 --> 00:29:43,290
that 30% very well for us and then we'd

758
00:29:41,190 --> 00:29:45,000
like to in the near future start working

759
00:29:43,290 --> 00:29:47,460
more on some of the application layer

760
00:29:45,000 --> 00:29:50,310
things like the code you know get some

761
00:29:47,460 --> 00:29:51,960
static analysis into the tool start

762
00:29:50,310 --> 00:29:54,240
monitoring for out-of-date libraries

763
00:29:51,960 --> 00:29:56,520
perhaps or even anonymous behavior you

764
00:29:54,240 --> 00:29:57,960
know if we have non Salesforce users in

765
00:29:56,520 --> 00:30:00,030
the user base kick them out

766
00:29:57,960 --> 00:30:02,090
automatically things like that but the

767
00:30:00,030 --> 00:30:05,820
nice thing is you know we've gone from

768
00:30:02,090 --> 00:30:08,310
150 apps to 3,500 apps and my team

769
00:30:05,820 --> 00:30:10,260
hasn't grown that much we have the time

770
00:30:08,310 --> 00:30:12,179
to invest in raising this bar because

771
00:30:10,260 --> 00:30:14,400
we've dug ourselves out of the hole of

772
00:30:12,180 --> 00:30:16,380
all of those constant manual reviews of

773
00:30:14,400 --> 00:30:20,910
every single app and not every single

774
00:30:16,380 --> 00:30:23,040
apps just some apps okay so here are

775
00:30:20,910 --> 00:30:25,520
some of our conclusions from this

776
00:30:23,040 --> 00:30:28,470
experimentation over the last few years

777
00:30:25,520 --> 00:30:29,940
so the former enablement process or

778
00:30:28,470 --> 00:30:31,860
approval process as we said was

779
00:30:29,940 --> 00:30:35,340
inconsistent and resulted in a

780
00:30:31,860 --> 00:30:37,199
significant number of missed assets and

781
00:30:35,340 --> 00:30:40,409
as we said as asset management is so

782
00:30:37,200 --> 00:30:41,910
important to to help secure resources at

783
00:30:40,410 --> 00:30:44,160
scale at the scale that we are talking

784
00:30:41,910 --> 00:30:46,980
about without the broad visibility that

785
00:30:44,160 --> 00:30:49,020
this new tool and process provided us we

786
00:30:46,980 --> 00:30:51,600
would have likely overestimated the

787
00:30:49,020 --> 00:30:54,720
coverage the security coverage that we

788
00:30:51,600 --> 00:30:57,870
had and and so likely left a significant

789
00:30:54,720 --> 00:31:00,240
number of assets exposed yeah I can just

790
00:30:57,870 --> 00:31:02,370
say anecdotally that this tool has saved

791
00:31:00,240 --> 00:31:03,540
my ass a number of times when someone

792
00:31:02,370 --> 00:31:05,370
says hey T what do you know about this

793
00:31:03,540 --> 00:31:07,770
application and I can just list out a

794
00:31:05,370 --> 00:31:09,479
whole bunch of detail about what's going

795
00:31:07,770 --> 00:31:11,310
on with it and then if there's some kind

796
00:31:09,480 --> 00:31:12,560
of issue we need to resolve we can move

797
00:31:11,310 --> 00:31:15,419
so much faster

798
00:31:12,560 --> 00:31:19,320
discovery digging in trying to figure

799
00:31:15,420 --> 00:31:22,320
out who owns something it's all done so

800
00:31:19,320 --> 00:31:24,270
next a majority of developers are

801
00:31:22,320 --> 00:31:26,909
trustworthy without the gated process I

802
00:31:24,270 --> 00:31:30,150
feel like from the 80% that we saw with

803
00:31:26,910 --> 00:31:34,260
to a faith a 97% with remove you know

804
00:31:30,150 --> 00:31:36,540
keeping the monitoring in place even

805
00:31:34,260 --> 00:31:38,490
with the 30% on the third-party apps I

806
00:31:36,540 --> 00:31:39,780
feel like I'm happy trusting the

807
00:31:38,490 --> 00:31:42,900
developers to manage the security

808
00:31:39,780 --> 00:31:44,860
themselves and where necessary we will

809
00:31:42,900 --> 00:31:47,530
nudge them in the right direction

810
00:31:44,860 --> 00:31:50,469
help them out with some guardrails but

811
00:31:47,530 --> 00:31:52,059
overall I think enabling them to do what

812
00:31:50,470 --> 00:31:54,250
they need to grow their line of business

813
00:31:52,059 --> 00:31:55,139
and meet their objectives is the right

814
00:31:54,250 --> 00:31:58,390
call

815
00:31:55,140 --> 00:32:00,970
and so ultimately the the actual demand

816
00:31:58,390 --> 00:32:02,590
for this process really far exceeded any

817
00:32:00,970 --> 00:32:06,190
expectations that we could have possibly

818
00:32:02,590 --> 00:32:08,590
had which I that argued that indicates a

819
00:32:06,190 --> 00:32:12,750
fundamental misunderstanding from from

820
00:32:08,590 --> 00:32:15,280
our part in terms of the developer needs

821
00:32:12,750 --> 00:32:16,990
and as security professionals really I

822
00:32:15,280 --> 00:32:19,600
don't think that we often get involved

823
00:32:16,990 --> 00:32:21,610
with the business side of things but I

824
00:32:19,600 --> 00:32:24,159
feel it really pays off to be involved

825
00:32:21,610 --> 00:32:28,270
in that kind of like enablement and and

826
00:32:24,160 --> 00:32:30,640
an approval process where you know it at

827
00:32:28,270 --> 00:32:33,340
least grants us the visibility just like

828
00:32:30,640 --> 00:32:36,429
in this case which allow us to sort of

829
00:32:33,340 --> 00:32:39,668
like research how things are and improve

830
00:32:36,429 --> 00:32:40,840
the security baseline over time yeah we

831
00:32:39,669 --> 00:32:42,340
do have to acknowledge that we have a

832
00:32:40,840 --> 00:32:45,610
little bit of an advantage by owning

833
00:32:42,340 --> 00:32:47,678
Heroku but you know I've taken this

834
00:32:45,610 --> 00:32:50,260
philosophy to other things that we don't

835
00:32:47,679 --> 00:32:51,850
own spend some time with finance and you

836
00:32:50,260 --> 00:32:53,740
know whether it's our department that

837
00:32:51,850 --> 00:32:55,270
pays or another department that pays as

838
00:32:53,740 --> 00:32:56,440
long as Finance understands that it's

839
00:32:55,270 --> 00:32:58,418
going to the entire company there are

840
00:32:56,440 --> 00:33:01,210
ways to work around this kind of funny

841
00:32:58,419 --> 00:33:03,520
money so you can take out financing from

842
00:33:01,210 --> 00:33:16,600
the equation and it's been successful in

843
00:33:03,520 --> 00:33:20,049
other areas as well cool questions yeah

844
00:33:16,600 --> 00:33:32,658
I see a couple of hands one here one

845
00:33:20,049 --> 00:33:33,859
there there yeah thank you

846
00:33:32,659 --> 00:33:36,470
presentation by the way thanks a lot

847
00:33:33,859 --> 00:33:38,689
very informative what is the scope of

848
00:33:36,470 --> 00:33:40,159
the applications that you were targeting

849
00:33:38,690 --> 00:33:44,080
here because obviously you have have

850
00:33:40,159 --> 00:33:46,429
kind of those those that are supporting

851
00:33:44,080 --> 00:33:49,908
the organization and those that are

852
00:33:46,429 --> 00:33:51,889
facing the client yes so we are not

853
00:33:49,909 --> 00:33:54,080
sales forces product security team so

854
00:33:51,889 --> 00:33:58,519
our mandate is operational applications

855
00:33:54,080 --> 00:34:00,439
so really marketing sales IT you know

856
00:33:58,519 --> 00:34:01,700
the benefits team things like that so

857
00:34:00,440 --> 00:34:17,510
it's often applications that are

858
00:34:01,700 --> 00:34:23,119
employee facing primarily Hey

859
00:34:17,510 --> 00:34:25,369
so waving so now that you've basically

860
00:34:23,119 --> 00:34:28,700
provided the platform for people to be

861
00:34:25,369 --> 00:34:31,579
able to be you know secure by default

862
00:34:28,699 --> 00:34:33,649
are you considering actually you know

863
00:34:31,579 --> 00:34:36,200
putting in place any rules that actually

864
00:34:33,649 --> 00:34:38,449
you know deviation from that and like

865
00:34:36,199 --> 00:34:42,078
you know turning stuff off is like a

866
00:34:38,449 --> 00:34:44,779
hard no no and like actually sort of

867
00:34:42,079 --> 00:34:48,379
enforcing security best practices now

868
00:34:44,779 --> 00:34:50,239
that you considered it is easy enough so

869
00:34:48,379 --> 00:34:53,690
in the third-party space for sure

870
00:34:50,239 --> 00:34:55,459
because there are certain certain

871
00:34:53,690 --> 00:34:57,440
companies from a contractual perspective

872
00:34:55,460 --> 00:35:00,349
that are complicated and so entering

873
00:34:57,440 --> 00:35:02,359
into you know add-on relationships with

874
00:35:00,349 --> 00:35:03,559
those complicates as matters so there

875
00:35:02,359 --> 00:35:06,200
are areas where we definitely kind of

876
00:35:03,559 --> 00:35:09,619
have to draw a line but I think as a

877
00:35:06,200 --> 00:35:11,509
team what we found is we've done this

878
00:35:09,619 --> 00:35:12,890
work you know it's been about three

879
00:35:11,510 --> 00:35:14,059
years we haven't spent a ton of time on

880
00:35:12,890 --> 00:35:15,589
this tool because we have so many

881
00:35:14,059 --> 00:35:17,420
challenges to face that it's kind of

882
00:35:15,589 --> 00:35:19,400
great to say we hit a baseline that

883
00:35:17,420 --> 00:35:20,960
we're really happy with let's move on to

884
00:35:19,400 --> 00:35:24,260
some other challenges where we do have

885
00:35:20,960 --> 00:35:25,490
to be having you know stronger arms and

886
00:35:24,260 --> 00:35:28,369
ultimately to get the sort of like

887
00:35:25,490 --> 00:35:30,470
resources and an investment it really

888
00:35:28,369 --> 00:35:32,869
helps to get gained up visibility first

889
00:35:30,470 --> 00:35:36,109
to be able to then say okay this is how

890
00:35:32,869 --> 00:35:38,539
much of these thing X we are using and

891
00:35:36,109 --> 00:35:40,609
now can we get you know whatever budget

892
00:35:38,539 --> 00:35:43,569
headcount whatever it is that you need

893
00:35:40,609 --> 00:35:45,660
in order to go target right whether it's

894
00:35:43,569 --> 00:35:48,000
enforcing strong Authority

895
00:35:45,660 --> 00:35:49,950
or whether he's doing actual automated

896
00:35:48,000 --> 00:35:51,900
code reviews or whatnot those those

897
00:35:49,950 --> 00:35:54,149
things can sort of like be plugged in

898
00:35:51,900 --> 00:35:58,170
now that we have a an automated way to

899
00:35:54,150 --> 00:36:03,089
go about doing it in the first place ya

900
00:35:58,170 --> 00:36:05,549
eeka part of my question there certain

901
00:36:03,089 --> 00:36:08,880
tasks move by moving from Mercker of

902
00:36:05,549 --> 00:36:15,269
gated process to a more broad kind of

903
00:36:08,880 --> 00:36:17,190
less deep process of security audit

904
00:36:15,269 --> 00:36:19,618
are you considering doing automation of

905
00:36:17,190 --> 00:36:22,859
some of the more complex parts like code

906
00:36:19,619 --> 00:36:26,220
review and interesting and assign a few

907
00:36:22,859 --> 00:36:28,460
bands do you mean for this process or

908
00:36:26,220 --> 00:36:30,538
for other processes that we might own

909
00:36:28,460 --> 00:36:32,490
okay

910
00:36:30,539 --> 00:36:35,190
so for this I would love to get into

911
00:36:32,490 --> 00:36:37,379
some static analysis we do have lots of

912
00:36:35,190 --> 00:36:39,420
static analysis engines at Salesforce so

913
00:36:37,380 --> 00:36:41,250
we just need to carve out the dev time

914
00:36:39,420 --> 00:36:43,500
to hook them up and I think that would

915
00:36:41,250 --> 00:36:45,720
be a great scalable process as long as

916
00:36:43,500 --> 00:36:46,980
there aren't a ton of false positives

917
00:36:45,720 --> 00:36:50,399
that would bury the team and kind of

918
00:36:46,980 --> 00:36:52,319
helping with that for other processes

919
00:36:50,400 --> 00:36:54,210
there are things legitimately where we

920
00:36:52,319 --> 00:36:57,119
still have to do manual work like my

921
00:36:54,210 --> 00:36:58,200
team owns vendor security for Salesforce

922
00:36:57,119 --> 00:37:00,420
so we do a lot of third-party

923
00:36:58,200 --> 00:37:02,578
assessments and that's a much harder

924
00:37:00,420 --> 00:37:05,009
space to just entirely automate so we do

925
00:37:02,579 --> 00:37:06,869
do manual work as well the nice thing is

926
00:37:05,009 --> 00:37:08,160
we can pick and choose so there's there

927
00:37:06,869 --> 00:37:10,170
are a couple other domains where we've

928
00:37:08,160 --> 00:37:13,500
done asset management almost exactly

929
00:37:10,170 --> 00:37:15,269
like this after this project and being

930
00:37:13,500 --> 00:37:17,700
able to say these are the areas of scope

931
00:37:15,269 --> 00:37:20,008
or we've automated heavily so that we

932
00:37:17,700 --> 00:37:21,598
can focus our manual time over here has

933
00:37:20,009 --> 00:37:23,519
been able to give my team the ability to

934
00:37:21,599 --> 00:37:25,289
cover a much broader portfolio of things

935
00:37:23,519 --> 00:37:27,000
and kind of help my leadership

936
00:37:25,289 --> 00:37:28,829
understand certain things or bigger

937
00:37:27,000 --> 00:37:30,930
challenge these things are much more

938
00:37:28,829 --> 00:37:32,970
automatable so whenever you can give us

939
00:37:30,930 --> 00:37:34,230
you know dev dollars we can uplift these

940
00:37:32,970 --> 00:37:37,109
things and whenever you can give us

941
00:37:34,230 --> 00:37:39,180
headcount we can uplift these things any

942
00:37:37,109 --> 00:37:41,490
from a odd I guess so you can also take

943
00:37:39,180 --> 00:37:45,000
a mmm sort of like a staggered approach

944
00:37:41,490 --> 00:37:47,279
where by saying looking at some metrics

945
00:37:45,000 --> 00:37:48,839
such as you know that the size of the

946
00:37:47,279 --> 00:37:50,339
application the utilization of the

947
00:37:48,839 --> 00:37:52,440
application whether or not the

948
00:37:50,339 --> 00:37:54,509
application is tied to the corporate

949
00:37:52,440 --> 00:37:56,250
domain so you assume is an externally

950
00:37:54,509 --> 00:37:58,710
facing application you can sort of like

951
00:37:56,250 --> 00:38:01,230
try to create groups of the

952
00:37:58,710 --> 00:38:04,290
and start targeting those that obviously

953
00:38:01,230 --> 00:38:05,700
seem like the most critical ones because

954
00:38:04,290 --> 00:38:08,040
obviously I mean I think that the whole

955
00:38:05,700 --> 00:38:10,529
premise here is that we are just not

956
00:38:08,040 --> 00:38:12,540
going to be able to scale you know at

957
00:38:10,530 --> 00:38:14,400
the same speed as the company grows and

958
00:38:12,540 --> 00:38:16,290
so we really need to start thinking

959
00:38:14,400 --> 00:38:17,910
about a different approach and and we've

960
00:38:16,290 --> 00:38:20,400
seen that this sort of like gaining

961
00:38:17,910 --> 00:38:26,089
visibility to then uplift the security

962
00:38:20,400 --> 00:38:26,090
baseline really works for us thank you

963
00:38:34,910 --> 00:38:40,319
all right Chris where you got it's an

964
00:38:38,550 --> 00:38:43,350
easy one have you given any

965
00:38:40,320 --> 00:38:45,450
consideration to opening this up so

966
00:38:43,350 --> 00:38:47,130
other companies who aren't Salesforce

967
00:38:45,450 --> 00:38:49,620
can use the same functionality within

968
00:38:47,130 --> 00:38:54,930
Heroku to bring themselves up to the

969
00:38:49,620 --> 00:38:58,200
same kind of level yes we have so we did

970
00:38:54,930 --> 00:39:01,319
a similar work for our internal

971
00:38:58,200 --> 00:39:03,930
Salesforce core Salesforce usage and we

972
00:39:01,320 --> 00:39:07,290
were able to get the tooling open

973
00:39:03,930 --> 00:39:09,390
sourced some time after going live I

974
00:39:07,290 --> 00:39:11,940
would hope that there is the opportunity

975
00:39:09,390 --> 00:39:13,740
to do the same for both I mean the

976
00:39:11,940 --> 00:39:16,080
intake process although that's kind of

977
00:39:13,740 --> 00:39:17,729
like just a relatively simple form that

978
00:39:16,080 --> 00:39:21,029
collects whichever details you care

979
00:39:17,730 --> 00:39:22,890
about but didn't the the more automation

980
00:39:21,030 --> 00:39:25,590
side of things and the monitoring side

981
00:39:22,890 --> 00:39:26,609
of the the application but definitely

982
00:39:25,590 --> 00:39:28,530
something that we should consider doing

983
00:39:26,610 --> 00:39:30,300
yeah we thought about it one of the

984
00:39:28,530 --> 00:39:32,990
bigger challenges with kind of the auto

985
00:39:30,300 --> 00:39:35,370
provisioning piece ended up being very

986
00:39:32,990 --> 00:39:38,310
Salesforce specific because of the way

987
00:39:35,370 --> 00:39:41,220
we did it so that that part didn't make

988
00:39:38,310 --> 00:39:42,930
sense to open-source and just the

989
00:39:41,220 --> 00:39:44,370
dashboard itself I think is great but

990
00:39:42,930 --> 00:39:46,140
people would really be missing that

991
00:39:44,370 --> 00:39:47,640
other piece so we thought about ways

992
00:39:46,140 --> 00:39:49,200
where we can figure that out we're

993
00:39:47,640 --> 00:39:50,819
looking at it the other thing that might

994
00:39:49,200 --> 00:39:52,620
happen is they might just like it's been

995
00:39:50,820 --> 00:39:54,750
so successful we've had conversations

996
00:39:52,620 --> 00:39:56,880
about just building it into the product

997
00:39:54,750 --> 00:39:58,590
itself because there's there's a lot

998
00:39:56,880 --> 00:40:00,240
more demand these days for this kind of

999
00:39:58,590 --> 00:40:02,430
asset management at any platform you

1000
00:40:00,240 --> 00:40:06,080
know people have lots of something and

1001
00:40:02,430 --> 00:40:06,080
they want to be able to see all of it

1002
00:40:09,560 --> 00:40:13,430
see a couple hands up here

1003
00:40:21,810 --> 00:40:28,299
just looked at your numbers you have

1004
00:40:25,200 --> 00:40:31,930
roughly 1.3 users per application which

1005
00:40:28,300 --> 00:40:34,870
is not that many so I assume because of

1006
00:40:31,930 --> 00:40:36,669
the free nature of your service you must

1007
00:40:34,870 --> 00:40:38,920
have lots of zombie applications which

1008
00:40:36,670 --> 00:40:41,800
are built-in they're not used so how do

1009
00:40:38,920 --> 00:40:43,870
you hands-on no miss one thing I should

1010
00:40:41,800 --> 00:40:48,250
clarify there is that those users are

1011
00:40:43,870 --> 00:40:50,500
developers not front end users so there

1012
00:40:48,250 --> 00:40:52,210
is a disproportionate number so like one

1013
00:40:50,500 --> 00:40:54,880
of the applications that's built on this

1014
00:40:52,210 --> 00:40:57,910
platform is our ticketing intake system

1015
00:40:54,880 --> 00:41:00,790
for like IT tickets so there's actually

1016
00:40:57,910 --> 00:41:04,629
like 40,000 users of that platform and

1017
00:41:00,790 --> 00:41:06,009
maybe 35 developers so they're they're

1018
00:41:04,630 --> 00:41:08,020
you know the because they're an

1019
00:41:06,010 --> 00:41:09,490
aggregate they don't really show the

1020
00:41:08,020 --> 00:41:11,290
different environment there probably are

1021
00:41:09,490 --> 00:41:13,509
some zombie applications honestly or

1022
00:41:11,290 --> 00:41:14,380
like QA applications tab applications

1023
00:41:13,510 --> 00:41:17,980
Fair Play

1024
00:41:14,380 --> 00:41:20,230
but the the actual business impact isn't

1025
00:41:17,980 --> 00:41:21,190
shown super well by the number of users

1026
00:41:20,230 --> 00:41:29,170
because that's just a number of

1027
00:41:21,190 --> 00:41:32,950
developers I just want to hear thanks

1028
00:41:29,170 --> 00:41:36,670
very informative you've obviously made a

1029
00:41:32,950 --> 00:41:38,470
great process for making new apps going

1030
00:41:36,670 --> 00:41:40,120
through this method do you find that

1031
00:41:38,470 --> 00:41:42,069
there are some apps that don't fit the

1032
00:41:40,120 --> 00:41:43,330
Heroku platform that have been going to

1033
00:41:42,070 --> 00:41:45,880
the other platforms you mentioned at the

1034
00:41:43,330 --> 00:41:48,460
beginning and also how have you managed

1035
00:41:45,880 --> 00:41:50,650
the other platforms as part of this so

1036
00:41:48,460 --> 00:41:53,860
you mentioned Amazon and Google and

1037
00:41:50,650 --> 00:41:55,390
Microsoft cloud platforms early on how

1038
00:41:53,860 --> 00:41:59,020
does that fit into this process now it's

1039
00:41:55,390 --> 00:42:01,029
a very good question so we have another

1040
00:41:59,020 --> 00:42:03,250
team within enterprise security that

1041
00:42:01,030 --> 00:42:05,260
does a lot of infrastructure work and we

1042
00:42:03,250 --> 00:42:06,880
worked with them on like AWS and things

1043
00:42:05,260 --> 00:42:08,440
because Heroku isn't great if you need

1044
00:42:06,880 --> 00:42:11,080
like a data Lake or something like a

1045
00:42:08,440 --> 00:42:13,630
really high volume data environment so

1046
00:42:11,080 --> 00:42:15,910
we do have AWS and GCP environments in

1047
00:42:13,630 --> 00:42:18,640
use of the company and those just right

1048
00:42:15,910 --> 00:42:21,580
now because they aren't to the volume or

1049
00:42:18,640 --> 00:42:23,680
degree that this one was and they

1050
00:42:21,580 --> 00:42:25,120
generally come from more like IT funded

1051
00:42:23,680 --> 00:42:26,080
teams now because they're much larger

1052
00:42:25,120 --> 00:42:27,910
implementation

1053
00:42:26,080 --> 00:42:30,850
this kind of like easy business app

1054
00:42:27,910 --> 00:42:32,500
style they are bigger projects and

1055
00:42:30,850 --> 00:42:34,960
usually take a little more manual

1056
00:42:32,500 --> 00:42:38,920
investment we haven't done like a super

1057
00:42:34,960 --> 00:42:40,360
scaled like AWS tool in the same way for

1058
00:42:38,920 --> 00:42:42,070
these kind of internal apps just because

1059
00:42:40,360 --> 00:42:50,350
the demand we have we haven't needed it

1060
00:42:42,070 --> 00:42:52,930
because we've done it this way good

1061
00:42:50,350 --> 00:42:55,799
thank you so much we'll see you all

1062
00:42:52,930 --> 00:42:55,799
later thank you

