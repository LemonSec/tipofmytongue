1
00:00:00,060 --> 00:00:02,159
alright hello everybody welcome to day 2

2
00:00:02,159 --> 00:00:04,620
a 44 con I hope you're all feeling at

3
00:00:04,620 --> 00:00:10,110
least as tired and rested desire so you

4
00:00:10,110 --> 00:00:11,130
everybody have a good night last night

5
00:00:11,130 --> 00:00:15,540
yeah but we are party alright so today

6
00:00:15,540 --> 00:00:17,400
starting off we've got Phil pollster I

7
00:00:17,400 --> 00:00:18,859
just want to say a couple of things

8
00:00:18,859 --> 00:00:22,170
firstly you know the sponsors have gone

9
00:00:22,170 --> 00:00:23,789
a long way towards subsidizing the cost

10
00:00:23,789 --> 00:00:25,560
of the tickets please please do see them

11
00:00:25,560 --> 00:00:27,510
today please make the effort to go

12
00:00:27,510 --> 00:00:30,240
around and talk to them all and grab

13
00:00:30,240 --> 00:00:31,910
some free visit we've got them I mean

14
00:00:31,910 --> 00:00:35,370
entertaining positive discourse and the

15
00:00:35,370 --> 00:00:38,129
other thing is we could do with you know

16
00:00:38,129 --> 00:00:40,379
we're going to do this next year we want

17
00:00:40,379 --> 00:00:42,750
to know what we did right what we did

18
00:00:42,750 --> 00:00:44,640
wrong which speakers you liked which

19
00:00:44,640 --> 00:00:46,800
because you didn't we have survey forms

20
00:00:46,800 --> 00:00:49,800
and feedback forms please fill them in

21
00:00:49,800 --> 00:00:53,820
so without further ado here's Phil

22
00:00:53,820 --> 00:01:01,190
pollster good morning

23
00:01:01,190 --> 00:01:03,300
so today I want to talk a little bit

24
00:01:03,300 --> 00:01:07,560
about USB flash drive forensics some of

25
00:01:07,560 --> 00:01:09,650
the stuff we're gonna talk about today

26
00:01:09,650 --> 00:01:12,810
very briefly I want to talk about some

27
00:01:12,810 --> 00:01:15,150
of the basics the USB Steve assured me

28
00:01:15,150 --> 00:01:16,770
everyone knows all this so we're gonna

29
00:01:16,770 --> 00:01:22,650
review talk about flash drives a little

30
00:01:22,650 --> 00:01:24,920
bit about technology and flash drives

31
00:01:24,920 --> 00:01:26,790
everyone uses them

32
00:01:26,790 --> 00:01:28,680
some of you have them hanging around

33
00:01:28,680 --> 00:01:33,659
your necks right now talk about forensic

34
00:01:33,659 --> 00:01:36,939
issues that are specific to flash drives

35
00:01:36,939 --> 00:01:39,100
and then we're gonna have the real fun

36
00:01:39,100 --> 00:01:41,109
people talk about fun with

37
00:01:41,109 --> 00:01:43,569
microcontrollers what can you do on the

38
00:01:43,569 --> 00:01:54,250
cheap with flash drives and I think that

39
00:01:54,250 --> 00:02:08,949
Steve just likes to manhandle that

40
00:02:08,949 --> 00:02:12,640
better all right it frightens me you

41
00:02:12,640 --> 00:02:14,319
guys are probably more likely seeing

42
00:02:14,319 --> 00:02:17,110
this show than people back in the US the

43
00:02:17,110 --> 00:02:24,310
IT Crowd have you tried what not turn it

44
00:02:24,310 --> 00:02:26,500
off turn it back again I just recently

45
00:02:26,500 --> 00:02:28,840
discovered that show you know lovely

46
00:02:28,840 --> 00:02:33,340
Netflix and finally I'll talk a little

47
00:02:33,340 --> 00:02:36,310
bit about a potential problem that you

48
00:02:36,310 --> 00:02:37,870
might run into trying to do some of this

49
00:02:37,870 --> 00:02:39,430
stuff I'm going to talk about and an

50
00:02:39,430 --> 00:02:42,690
awesome solution that I came up with so

51
00:02:42,690 --> 00:02:48,099
alright so basics of USB USB we'll talk

52
00:02:48,099 --> 00:02:50,230
about the history of USB a little bit

53
00:02:50,230 --> 00:02:52,690
about hardware and software right so

54
00:02:52,690 --> 00:02:55,950
brief history back in the olden times

55
00:02:55,950 --> 00:02:58,269
some of us are aware of these olden

56
00:02:58,269 --> 00:03:01,810
times before 1996 we had non Universal

57
00:03:01,810 --> 00:03:03,700
Serial bus everybody had their own

58
00:03:03,700 --> 00:03:08,139
specialized ports things were somewhat

59
00:03:08,139 --> 00:03:11,290
confusing you had to configure serial

60
00:03:11,290 --> 00:03:13,840
ports to work with every single device

61
00:03:13,840 --> 00:03:14,980
you had different kinds of cables

62
00:03:14,980 --> 00:03:17,769
possible and you discover oh no that's

63
00:03:17,769 --> 00:03:19,720
not a null modem cable that's a

64
00:03:19,720 --> 00:03:21,489
different kind of cable and stuff didn't

65
00:03:21,489 --> 00:03:22,120
work all right

66
00:03:22,120 --> 00:03:25,389
so in 1996 they came up with USB 1 and

67
00:03:25,389 --> 00:03:27,940
it allowed you to connect things more

68
00:03:27,940 --> 00:03:30,940
easily from the users perspective at

69
00:03:30,940 --> 00:03:35,730
speeds of 1.5 or 12 megabits per second

70
00:03:35,730 --> 00:03:39,040
two years later they said we need to

71
00:03:39,040 --> 00:03:42,579
tweak that USB 1 1 was born born two

72
00:03:42,579 --> 00:03:45,610
years after that USB 2

73
00:03:45,610 --> 00:03:48,520
and they added another speed called high

74
00:03:48,520 --> 00:03:53,110
speed then eight years go by in 2008

75
00:03:53,110 --> 00:03:57,130
they released the USB 3.0 spec and now

76
00:03:57,130 --> 00:03:59,800
we have potentially up to five gigabit

77
00:03:59,800 --> 00:04:02,830
per second speeds alright so hardware

78
00:04:02,830 --> 00:04:05,530
you have all seen the hardware yeah it's

79
00:04:05,530 --> 00:04:07,540
a pretty simple four wire connection

80
00:04:07,540 --> 00:04:10,720
you've got two data wires you've got a

81
00:04:10,720 --> 00:04:13,840
power wire and a ground wire and it's

82
00:04:13,840 --> 00:04:16,750
meant so that the cabling will prevent

83
00:04:16,750 --> 00:04:20,950
something improper right which is good

84
00:04:20,950 --> 00:04:23,350
from a user perspective it's bad from a

85
00:04:23,350 --> 00:04:25,420
developer perspective if you have a

86
00:04:25,420 --> 00:04:28,120
device that's already got a couple of

87
00:04:28,120 --> 00:04:31,060
ports and it's not the port that you

88
00:04:31,060 --> 00:04:35,140
wanted then you can search and search

89
00:04:35,140 --> 00:04:37,420
for a gender changer or you can make

90
00:04:37,420 --> 00:04:39,370
your own and things get a little

91
00:04:39,370 --> 00:04:42,580
complicated but the user perspective for

92
00:04:42,580 --> 00:04:45,190
it pretty simple everything's hot

93
00:04:45,190 --> 00:04:47,980
pluggable uses differential voltages

94
00:04:47,980 --> 00:04:50,650
instead of absolute voltages that's a

95
00:04:50,650 --> 00:04:54,730
little bit less noise sensitive and you

96
00:04:54,730 --> 00:04:58,390
can have up to 16 foot cables alright so

97
00:04:58,390 --> 00:05:02,410
all this is good stuff software wise you

98
00:05:02,410 --> 00:05:04,330
want something that's automatic that you

99
00:05:04,330 --> 00:05:06,550
don't have to worry about setting

100
00:05:06,550 --> 00:05:10,090
jumpers and the way this works is a

101
00:05:10,090 --> 00:05:13,270
process called enumeration where hosts

102
00:05:13,270 --> 00:05:15,550
and devices talk to each other and

103
00:05:15,550 --> 00:05:17,380
figure out what's going on and what they

104
00:05:17,380 --> 00:05:22,660
provide the spec has a number of

105
00:05:22,660 --> 00:05:25,990
standard device classes human interface

106
00:05:25,990 --> 00:05:29,830
devices printers audio and mass storage

107
00:05:29,830 --> 00:05:32,760
which is the subject of this talk

108
00:05:32,760 --> 00:05:36,730
alright enough about basic stuff USB

109
00:05:36,730 --> 00:05:40,300
flash drives we'll talk about some of

110
00:05:40,300 --> 00:05:42,250
the things involved with flash drives

111
00:05:42,250 --> 00:05:43,750
you know what does the hardware look

112
00:05:43,750 --> 00:05:45,939
like software

113
00:05:45,939 --> 00:05:48,250
that sort of file systems might want to

114
00:05:48,250 --> 00:05:50,409
expect to find in a little bit with how

115
00:05:50,409 --> 00:05:55,930
Windows deals with flash drives right so

116
00:05:55,930 --> 00:05:57,610
here's a picture I ripped it off of

117
00:05:57,610 --> 00:05:59,860
Wikipedia all right I'll just say that

118
00:05:59,860 --> 00:06:03,969
right up of a typical flash drive so

119
00:06:03,969 --> 00:06:08,349
what do you have you have a connector so

120
00:06:08,349 --> 00:06:11,189
you have your USB a connector here and

121
00:06:11,189 --> 00:06:14,110
then you have a circuit board the

122
00:06:14,110 --> 00:06:15,909
biggest thing on this circuit board is

123
00:06:15,909 --> 00:06:18,699
going to be a flash memory chip hence

124
00:06:18,699 --> 00:06:22,360
the name flash drive so typically you'll

125
00:06:22,360 --> 00:06:24,460
have a flash chip this particular one

126
00:06:24,460 --> 00:06:30,279
pictured has a spot for a second flash

127
00:06:30,279 --> 00:06:33,250
chip it's not installed and then you'll

128
00:06:33,250 --> 00:06:36,610
have a controller of some sort often

129
00:06:36,610 --> 00:06:40,779
you'll have an oscillator usually twelve

130
00:06:40,779 --> 00:06:45,340
megahertz oscillator crystal if you're

131
00:06:45,340 --> 00:06:48,490
lucky and this is primarily on the older

132
00:06:48,490 --> 00:06:51,569
devices you get a readwrite switch

133
00:06:51,569 --> 00:06:54,460
alright we'll talk about this a little

134
00:06:54,460 --> 00:06:57,190
bit more later but today you typically

135
00:06:57,190 --> 00:06:59,620
don't find many flash drive shipping

136
00:06:59,620 --> 00:07:01,000
with us which is kind of unfortunate

137
00:07:01,000 --> 00:07:05,889
right and if you're lucky you get a nice

138
00:07:05,889 --> 00:07:08,259
little LED that blinks at you so that

139
00:07:08,259 --> 00:07:11,110
you know things are happening I have a

140
00:07:11,110 --> 00:07:12,729
couple of flash drives here right

141
00:07:12,729 --> 00:07:15,759
including some four gigabyte drives I

142
00:07:15,759 --> 00:07:17,979
got my local staples for a whopping

143
00:07:17,979 --> 00:07:21,909
eight dollars unfortunately there were

144
00:07:21,909 --> 00:07:23,529
only eight dollars but there's no

145
00:07:23,529 --> 00:07:26,289
flashing LEDs so you don't know what's

146
00:07:26,289 --> 00:07:28,599
going on with this one all right

147
00:07:28,599 --> 00:07:31,389
software the software typically is

148
00:07:31,389 --> 00:07:34,210
implemented in firmware inside a

149
00:07:34,210 --> 00:07:37,599
specialized controller chip so there are

150
00:07:37,599 --> 00:07:39,639
a number of manufacturers that put out

151
00:07:39,639 --> 00:07:42,009
these chips you know they're pretty

152
00:07:42,009 --> 00:07:47,469
generic they read NAND flash memory they

153
00:07:47,469 --> 00:07:49,349
talk USB right

154
00:07:49,349 --> 00:07:52,129
so what sorts of things must they do

155
00:07:52,129 --> 00:07:54,990
they have to detect any kind of

156
00:07:54,990 --> 00:07:56,969
communication that's sent to this drive

157
00:07:56,969 --> 00:07:59,639
they have to respond to standard

158
00:07:59,639 --> 00:08:00,710
requests

159
00:08:00,710 --> 00:08:04,770
standard requests such as hey tell me

160
00:08:04,770 --> 00:08:08,490
what you are please suspend yourself

161
00:08:08,490 --> 00:08:10,800
please stop suspending yourself things

162
00:08:10,800 --> 00:08:12,809
like that they have to check for errors

163
00:08:12,809 --> 00:08:16,409
and transmission manage power devices

164
00:08:16,409 --> 00:08:19,199
are allowed to request different levels

165
00:08:19,199 --> 00:08:22,919
of power and they need to respond

166
00:08:22,919 --> 00:08:26,339
appropriately and they exchange data of

167
00:08:26,339 --> 00:08:31,199
course all right file systems what kind

168
00:08:31,199 --> 00:08:33,630
of file system can you put on this flash

169
00:08:33,630 --> 00:08:36,659
drive well the flash drive presents

170
00:08:36,659 --> 00:08:39,448
itself to your computer as a block

171
00:08:39,448 --> 00:08:41,789
device essentially tries to emulate a

172
00:08:41,789 --> 00:08:45,839
hard drive and it says I am a hard drive

173
00:08:45,839 --> 00:08:48,089
typically a hard drive that has a bunch

174
00:08:48,089 --> 00:08:53,519
of 512 byte sectors on it and you can do

175
00:08:53,519 --> 00:08:55,560
whatever you want any any kind of file

176
00:08:55,560 --> 00:08:58,680
system you can put on that almost every

177
00:08:58,680 --> 00:09:00,569
flash drive you ever buy though is

178
00:09:00,569 --> 00:09:04,380
probably pre formatted with fat or fat32

179
00:09:04,380 --> 00:09:09,329
more likely fat32 but sometimes you will

180
00:09:09,329 --> 00:09:13,849
find a drive that's formatted with NTFS

181
00:09:13,910 --> 00:09:20,130
now there are a number of flash specific

182
00:09:20,130 --> 00:09:24,089
file systems you get the true flash file

183
00:09:24,089 --> 00:09:28,639
system the extreme flash file system the

184
00:09:28,639 --> 00:09:31,230
journaling flash file system one of my

185
00:09:31,230 --> 00:09:34,889
favorites is Jeff's yet another flash

186
00:09:34,889 --> 00:09:38,010
file system all right and of course you

187
00:09:38,010 --> 00:09:41,130
can also put your favorite UNIX or Linux

188
00:09:41,130 --> 00:09:42,149
file system

189
00:09:42,149 --> 00:09:45,600
you can put X 4 X 5 whatever you want on

190
00:09:45,600 --> 00:09:49,410
their riser file system whichever you

191
00:09:49,410 --> 00:09:52,050
prefer so it presents itself as a block

192
00:09:52,050 --> 00:09:55,290
device so you it's pretty flexible on

193
00:09:55,290 --> 00:09:56,610
how you

194
00:09:56,610 --> 00:09:59,519
connected right so let's talk just a

195
00:09:59,519 --> 00:10:01,920
little bit about Windows

196
00:10:01,920 --> 00:10:05,700
how does Windows respond to flash drives

197
00:10:05,700 --> 00:10:07,950
so talk about what happens when you

198
00:10:07,950 --> 00:10:12,750
connect a drive how do you block write

199
00:10:12,750 --> 00:10:14,339
operations if you don't have one of

200
00:10:14,339 --> 00:10:16,920
those lovely switches and how do you

201
00:10:16,920 --> 00:10:19,890
figure out who was there you know what

202
00:10:19,890 --> 00:10:23,339
has been going on USB related on your

203
00:10:23,339 --> 00:10:29,100
computer so here's what happens when you

204
00:10:29,100 --> 00:10:30,839
connect to drive you know it all seems

205
00:10:30,839 --> 00:10:33,390
very simple right you plug in and you

206
00:10:33,390 --> 00:10:35,519
get the little noise right so you plug

207
00:10:35,519 --> 00:10:38,370
it in you get the little noise must be

208
00:10:38,370 --> 00:10:41,730
easy right well if you dig into this by

209
00:10:41,730 --> 00:10:43,740
the way you get involved in the whole

210
00:10:43,740 --> 00:10:46,380
USB what's going on and you start

211
00:10:46,380 --> 00:10:47,700
building devices it gets a little

212
00:10:47,700 --> 00:10:49,890
addictive and I think the reason for

213
00:10:49,890 --> 00:10:53,279
that is that there's 12 steps you know I

214
00:10:53,279 --> 00:10:54,839
don't know if you guys have 12 step

215
00:10:54,839 --> 00:10:57,240
programs here for addicts but I'm

216
00:10:57,240 --> 00:11:00,029
guessing you do so here are the 12

217
00:11:00,029 --> 00:11:02,100
things that happen you connect your

218
00:11:02,100 --> 00:11:05,640
device the hub which is the piece of

219
00:11:05,640 --> 00:11:09,000
hardware on your PC normally there's two

220
00:11:09,000 --> 00:11:11,370
sides of the USB there's the slave or

221
00:11:11,370 --> 00:11:14,699
device and then there's the host site so

222
00:11:14,699 --> 00:11:16,890
the PC is normally on the host side of

223
00:11:16,890 --> 00:11:20,399
this it detects that a device has been

224
00:11:20,399 --> 00:11:24,510
connected and the hardware the hub and

225
00:11:24,510 --> 00:11:28,230
forms the hose usually a PC hey somebody

226
00:11:28,230 --> 00:11:31,019
connected something so then the hub

227
00:11:31,019 --> 00:11:34,170
determines what kind of capabilities

228
00:11:34,170 --> 00:11:36,810
this device has and how does it do that

229
00:11:36,810 --> 00:11:41,220
it sends a bunch of signals and you know

230
00:11:41,220 --> 00:11:43,079
you can you can read the spec if you're

231
00:11:43,079 --> 00:11:44,970
really interested but spends bunches

232
00:11:44,970 --> 00:11:46,470
sends a bunch of signals and it

233
00:11:46,470 --> 00:11:48,449
determines how fast can this device

234
00:11:48,449 --> 00:11:52,019
operate can it operate at one point five

235
00:11:52,019 --> 00:11:54,750
megabits per second or it can operate at

236
00:11:54,750 --> 00:11:58,980
twelve and it determines that based on

237
00:11:58,980 --> 00:12:00,930
where these pull-up resistors are

238
00:12:00,930 --> 00:12:04,500
installed on the device right so once

239
00:12:04,500 --> 00:12:06,110
it's determined that

240
00:12:06,110 --> 00:12:07,700
then the hub says thank you for telling

241
00:12:07,700 --> 00:12:10,850
me about yourself now reset so resets

242
00:12:10,850 --> 00:12:15,800
device and then it says hey you said you

243
00:12:15,800 --> 00:12:18,019
could do 12 megabits per second can you

244
00:12:18,019 --> 00:12:21,890
do 480 and the mechanism for that is a

245
00:12:21,890 --> 00:12:23,329
little different they don't just use

246
00:12:23,329 --> 00:12:25,910
pull-up resistors in part because of

247
00:12:25,910 --> 00:12:28,220
backward compatibility right you want

248
00:12:28,220 --> 00:12:30,829
your device to be backward compatible to

249
00:12:30,829 --> 00:12:33,500
a usb one hop so what it does is it

250
00:12:33,500 --> 00:12:35,209
sends a bunch of signals called chirps

251
00:12:35,209 --> 00:12:38,750
and based on the responses the device

252
00:12:38,750 --> 00:12:40,459
you know if the device responds

253
00:12:40,459 --> 00:12:42,769
essentially it's saying oh yeah I know

254
00:12:42,769 --> 00:12:44,959
what you're saying I know how to do

255
00:12:44,959 --> 00:12:49,000
high-speed all right once that's done it

256
00:12:49,000 --> 00:12:51,740
establishes the signal path the signal

257
00:12:51,740 --> 00:12:55,370
path is a set of end points and these

258
00:12:55,370 --> 00:12:57,620
end points are used to communicate

259
00:12:57,620 --> 00:12:59,839
between the device and the host all

260
00:12:59,839 --> 00:13:02,870
right so now we've got communications

261
00:13:02,870 --> 00:13:06,550
we've established a speed and all this

262
00:13:06,550 --> 00:13:09,529
left to be done is to figure out what it

263
00:13:09,529 --> 00:13:13,850
is that this device actually does so it

264
00:13:13,850 --> 00:13:15,890
asks for a descriptor and descriptors

265
00:13:15,890 --> 00:13:17,750
there's a whole set of descriptors

266
00:13:17,750 --> 00:13:20,449
available from the device that tells it

267
00:13:20,449 --> 00:13:23,060
what is the maximum size packet that

268
00:13:23,060 --> 00:13:26,209
you'll take once it's done that and it

269
00:13:26,209 --> 00:13:29,300
signs in an address it says you'll be

270
00:13:29,300 --> 00:13:32,779
device number one right most likely if

271
00:13:32,779 --> 00:13:36,079
you're the first device and then it's

272
00:13:36,079 --> 00:13:37,279
gonna enumerate through their

273
00:13:37,279 --> 00:13:41,149
capabilities once it's figured out oh

274
00:13:41,149 --> 00:13:44,480
you're a human interface device or your

275
00:13:44,480 --> 00:13:47,690
mass storage device Windows is going to

276
00:13:47,690 --> 00:13:50,360
load an appropriate INF file a device

277
00:13:50,360 --> 00:13:53,930
driver right so if you have a standard

278
00:13:53,930 --> 00:13:57,829
flash drive if I have you know this is a

279
00:13:57,829 --> 00:14:02,810
little sand disk drive if I have PATRIOT

280
00:14:02,810 --> 00:14:05,149
memory whoever if I have somebody else's

281
00:14:05,149 --> 00:14:07,459
Drive Windows doesn't have to have a

282
00:14:07,459 --> 00:14:09,649
custom driver for everybody's Drive they

283
00:14:09,649 --> 00:14:12,579
all use the standard interface drive now

284
00:14:12,579 --> 00:14:15,300
some drives might use a

285
00:14:15,300 --> 00:14:17,550
custom driver in particular if you get

286
00:14:17,550 --> 00:14:19,950
encrypted drives I didn't bring it with

287
00:14:19,950 --> 00:14:22,019
me but I have a flash drive that takes

288
00:14:22,019 --> 00:14:24,810
fingerprint scans you may have seen

289
00:14:24,810 --> 00:14:27,959
things like this typically what they do

290
00:14:27,959 --> 00:14:30,630
is they have their own custom driver and

291
00:14:30,630 --> 00:14:33,410
only unlocks with the fingerprint but

292
00:14:33,410 --> 00:14:36,269
which is really annoying if you like to

293
00:14:36,269 --> 00:14:39,570
run Linux because they don't provide a

294
00:14:39,570 --> 00:14:42,360
Linux driver for that but it is an

295
00:14:42,360 --> 00:14:47,130
option and finally a device can't have

296
00:14:47,130 --> 00:14:49,910
more than one configuration available

297
00:14:49,910 --> 00:14:54,000
most of them don't especially flash

298
00:14:54,000 --> 00:14:55,440
drives typically they have one

299
00:14:55,440 --> 00:14:59,220
configuration and then the device says

300
00:14:59,220 --> 00:15:01,110
this is the configuration we're gonna

301
00:15:01,110 --> 00:15:05,220
use all right very simple right makes a

302
00:15:05,220 --> 00:15:07,649
little noise you plug it in that's all

303
00:15:07,649 --> 00:15:09,750
that's going on behind the scenes all

304
00:15:09,750 --> 00:15:15,209
right as I said before often you want to

305
00:15:15,209 --> 00:15:18,269
block write operations and if you're

306
00:15:18,269 --> 00:15:20,760
lucky you have a little switch on your

307
00:15:20,760 --> 00:15:23,029
drive you don't see that so much anymore

308
00:15:23,029 --> 00:15:26,430
unfortunately there is a workaround that

309
00:15:26,430 --> 00:15:30,930
kind of works right if I want to block

310
00:15:30,930 --> 00:15:38,160
write access to every USB device that's

311
00:15:38,160 --> 00:15:41,160
the downside I can't say well you can't

312
00:15:41,160 --> 00:15:42,930
write to that one you can only write to

313
00:15:42,930 --> 00:15:45,120
this one now yes I could write software

314
00:15:45,120 --> 00:15:47,760
that detects the different devices and I

315
00:15:47,760 --> 00:15:49,890
could go about it that way but if I want

316
00:15:49,890 --> 00:15:52,200
to do this very easily I can go into the

317
00:15:52,200 --> 00:15:56,370
registry and I can find this key under

318
00:15:56,370 --> 00:15:58,860
local machine system currentcontrolset

319
00:15:58,860 --> 00:16:01,070
controlled storage device policies

320
00:16:01,070 --> 00:16:02,190
write-protect

321
00:16:02,190 --> 00:16:04,380
and all I have to do is create that key

322
00:16:04,380 --> 00:16:07,560
if it doesn't exist and put a one in

323
00:16:07,560 --> 00:16:11,070
there now I can't write to any USB

324
00:16:11,070 --> 00:16:13,020
device

325
00:16:13,020 --> 00:16:16,170
why would I want to do that maybe I work

326
00:16:16,170 --> 00:16:19,950
in a sensitive organization and I don't

327
00:16:19,950 --> 00:16:22,800
want all of my employees stealing

328
00:16:22,800 --> 00:16:25,709
information by plugging in their flash

329
00:16:25,709 --> 00:16:30,360
drives and taking them home by the way

330
00:16:30,360 --> 00:16:33,540
my preferred solution for that is called

331
00:16:33,540 --> 00:16:38,160
a hot glue hot glue and USB ports does

332
00:16:38,160 --> 00:16:41,730
wonders you'll see a little later I have

333
00:16:41,730 --> 00:16:45,209
this love for hot glue it comes in handy

334
00:16:45,209 --> 00:16:49,410
for many things but other options you

335
00:16:49,410 --> 00:16:51,600
can buy commercial white blockers the

336
00:16:51,600 --> 00:16:55,140
cheapest commercial write blocker I was

337
00:16:55,140 --> 00:17:00,720
able to find cost around 800 us that's

338
00:17:00,720 --> 00:17:03,480
the cheapest one I'm gonna show you

339
00:17:03,480 --> 00:17:05,390
something that you could build for about

340
00:17:05,390 --> 00:17:12,510
25 euros 25 euros what 500 euros it's

341
00:17:12,510 --> 00:17:15,260
hard to choice to make there but um and

342
00:17:15,260 --> 00:17:17,520
we'll discuss that a bit later by the

343
00:17:17,520 --> 00:17:19,740
way other reasons you might want to

344
00:17:19,740 --> 00:17:23,339
write blocker not just for forensics if

345
00:17:23,339 --> 00:17:26,579
you're like me you have some flash

346
00:17:26,579 --> 00:17:29,100
drives that have all of your great tools

347
00:17:29,100 --> 00:17:32,850
and your toys right maybe katana I'm

348
00:17:32,850 --> 00:17:35,150
sure several of you've heard of katana

349
00:17:35,150 --> 00:17:40,530
great tool what happens if I walk it

350
00:17:40,530 --> 00:17:43,410
around the University and I want to get

351
00:17:43,410 --> 00:17:45,150
something off one of my flash drives I

352
00:17:45,150 --> 00:17:49,470
plug it in and I forget what's on the

353
00:17:49,470 --> 00:17:52,200
drive what happens to me

354
00:17:52,200 --> 00:17:54,360
all of a sudden a little message pops up

355
00:17:54,360 --> 00:17:56,910
oh the university's antivirus has

356
00:17:56,910 --> 00:17:59,640
detected horrible malicious software my

357
00:17:59,640 --> 00:18:02,550
tools on this flash drive and what is it

358
00:18:02,550 --> 00:18:06,690
gonna do I am helpfully deleting them

359
00:18:06,690 --> 00:18:07,730
for you

360
00:18:07,730 --> 00:18:10,710
so you know then there are times like

361
00:18:10,710 --> 00:18:12,300
that where you wish you had the right

362
00:18:12,300 --> 00:18:14,670
protect switch or something like that so

363
00:18:14,670 --> 00:18:17,690
we'll talk about that all right

364
00:18:17,690 --> 00:18:19,770
Windows if you're doing Windows

365
00:18:19,770 --> 00:18:23,520
forensics Windows is great at storing

366
00:18:23,520 --> 00:18:24,809
all kinds of

367
00:18:24,809 --> 00:18:27,389
for mason in the registry right you guys

368
00:18:27,389 --> 00:18:30,120
are probably all aware of this your

369
00:18:30,120 --> 00:18:32,730
average user is completely oblivious and

370
00:18:32,730 --> 00:18:35,909
even the moderately sophisticated user

371
00:18:35,909 --> 00:18:39,149
that thanks to you know delete their

372
00:18:39,149 --> 00:18:41,460
files a little better probably doesn't

373
00:18:41,460 --> 00:18:43,649
even think about going into the registry

374
00:18:43,649 --> 00:18:45,779
because it's a scary place right nobody

375
00:18:45,779 --> 00:18:51,899
wants to go there so the registry stores

376
00:18:51,899 --> 00:18:55,289
every single USB device that was ever

377
00:18:55,289 --> 00:18:58,409
connected and all kinds of information

378
00:18:58,409 --> 00:19:00,360
about it you might think why do they do

379
00:19:00,360 --> 00:19:02,039
that do they do that for forensic

380
00:19:02,039 --> 00:19:05,070
investigators well maybe not

381
00:19:05,070 --> 00:19:07,679
they probably do that so that when I

382
00:19:07,679 --> 00:19:10,289
plug in a drop device the second time

383
00:19:10,289 --> 00:19:12,990
it's a little faster because it says hey

384
00:19:12,990 --> 00:19:16,789
I know that device I know what to do

385
00:19:16,789 --> 00:19:20,100
last year I taught a cyber forensics

386
00:19:20,100 --> 00:19:23,730
class at the University and I gave this

387
00:19:23,730 --> 00:19:25,169
assignment I thought this is going to

388
00:19:25,169 --> 00:19:26,909
keep my students busy for a couple hours

389
00:19:26,909 --> 00:19:29,070
I said all right I want you to go in

390
00:19:29,070 --> 00:19:30,629
this computer lab here and I want you to

391
00:19:30,629 --> 00:19:32,639
tell me about every flash drive that's

392
00:19:32,639 --> 00:19:36,350
ever been plugged in to these devices

393
00:19:36,350 --> 00:19:38,460
five minutes after I gave this

394
00:19:38,460 --> 00:19:39,990
assignment I thought okay I got a couple

395
00:19:39,990 --> 00:19:41,399
hours to just kind of kick back and

396
00:19:41,399 --> 00:19:43,619
relax one of the one of the students is

397
00:19:43,619 --> 00:19:45,539
sitting there any cuz all right

398
00:19:45,539 --> 00:19:48,210
everybody I just googled it you go to

399
00:19:48,210 --> 00:19:52,249
get this thing called USB dove you and

400
00:19:52,249 --> 00:19:54,749
boom you can do it alright here's that

401
00:19:54,749 --> 00:19:59,100
here's a screenshot I'll also show you a

402
00:19:59,100 --> 00:20:02,519
live there you go there's a live

403
00:20:02,519 --> 00:20:06,419
instance of this tool USB Deb view nice

404
00:20:06,419 --> 00:20:09,600
little tool and it will show you here's

405
00:20:09,600 --> 00:20:12,929
all the devices different types I've got

406
00:20:12,929 --> 00:20:14,909
it sorted by type so you can see all the

407
00:20:14,909 --> 00:20:20,029
human interface devices I've connected

408
00:20:20,179 --> 00:20:24,570
mass storage devices is it currently

409
00:20:24,570 --> 00:20:26,059
connected

410
00:20:26,059 --> 00:20:29,169
what's the drive letter assigned to it

411
00:20:29,169 --> 00:20:32,269
last time it was connected serial

412
00:20:32,269 --> 00:20:36,789
numbers you know createdate vendor ID

413
00:20:36,789 --> 00:20:40,909
product ID firmware version you know

414
00:20:40,909 --> 00:20:45,710
what kind of USB device was it all these

415
00:20:45,710 --> 00:20:48,919
lovely things it'll tell me it goes on

416
00:20:48,919 --> 00:20:53,599
and on and on and on right so something

417
00:20:53,599 --> 00:20:56,269
to keep in mind you know next time you

418
00:20:56,269 --> 00:20:57,919
know in the movies what happens right in

419
00:20:57,919 --> 00:21:00,499
the movies somebody connects their flash

420
00:21:00,499 --> 00:21:02,210
drive and they download the secret

421
00:21:02,210 --> 00:21:04,039
information and then they get they get

422
00:21:04,039 --> 00:21:06,080
busted later well how do they get busted

423
00:21:06,080 --> 00:21:09,049
later well there's all kinds of

424
00:21:09,049 --> 00:21:10,789
information in there the moral of the

425
00:21:10,789 --> 00:21:16,669
story is just don't run Windows all

426
00:21:16,669 --> 00:21:21,109
right so I somewhat but only slightly

427
00:21:21,109 --> 00:21:23,239
disappointed by that though you know my

428
00:21:23,239 --> 00:21:24,679
students are thinking all feels gonna be

429
00:21:24,679 --> 00:21:26,659
really mad because you know we found

430
00:21:26,659 --> 00:21:30,139
this tool to do this thing in five

431
00:21:30,139 --> 00:21:31,729
minutes and you know five minutes later

432
00:21:31,729 --> 00:21:32,839
I'm getting all these reports from my

433
00:21:32,839 --> 00:21:34,609
students they went home early that day

434
00:21:34,609 --> 00:21:37,839
right there's a one-month class and I

435
00:21:37,839 --> 00:21:39,739
thought well that's great because

436
00:21:39,739 --> 00:21:41,659
they're working smart not working hard

437
00:21:41,659 --> 00:21:45,619
so I actually was kind of pleased and

438
00:21:45,619 --> 00:21:47,839
surprised that they they managed to do

439
00:21:47,839 --> 00:21:49,549
that all right so let's talk a little

440
00:21:49,549 --> 00:21:53,659
bit about forensics we talked about

441
00:21:53,659 --> 00:21:57,080
forensics you know others such as Gareth

442
00:21:57,080 --> 00:21:59,719
yesterday they've told us what forensics

443
00:21:59,719 --> 00:22:02,389
is you know investigating stuff usually

444
00:22:02,389 --> 00:22:04,940
as part of a criminal investigation not

445
00:22:04,940 --> 00:22:07,969
always though but when we look at flash

446
00:22:07,969 --> 00:22:09,919
drives we can treat them either as

447
00:22:09,919 --> 00:22:14,869
memory or as storage media so when we

448
00:22:14,869 --> 00:22:16,960
look at a flash drive as memory

449
00:22:16,960 --> 00:22:20,299
typically flash drives use flash memory

450
00:22:20,299 --> 00:22:22,039
well they're different kinds of flash

451
00:22:22,039 --> 00:22:22,609
memory

452
00:22:22,609 --> 00:22:25,519
there's nor flash memory and there's

453
00:22:25,519 --> 00:22:28,729
NAND flash memory sounds kinda like or

454
00:22:28,729 --> 00:22:32,539
and and all right and it refers to the

455
00:22:32,539 --> 00:22:36,490
way that the flash memory is acts

456
00:22:36,490 --> 00:22:39,799
NAND flash memory by far is what you're

457
00:22:39,799 --> 00:22:42,860
gonna see and flash drives because of

458
00:22:42,860 --> 00:22:46,249
speed but primarily because of size all

459
00:22:46,249 --> 00:22:50,110
right NAND flash trips are much smaller

460
00:22:50,110 --> 00:22:52,519
what are some of the downsides of flash

461
00:22:52,519 --> 00:22:55,970
memory right you can only write so many

462
00:22:55,970 --> 00:22:59,120
times to flash memory typically about

463
00:22:59,120 --> 00:23:02,389
10,000 times after that the memory

464
00:23:02,389 --> 00:23:08,110
degrades you have issues other things

465
00:23:08,110 --> 00:23:11,809
most of these chips aren't even close to

466
00:23:11,809 --> 00:23:15,139
high-speed 480 megabits per second in

467
00:23:15,139 --> 00:23:17,110
particular if you're writing to them

468
00:23:17,110 --> 00:23:21,619
they're nowhere close a little bit later

469
00:23:21,619 --> 00:23:24,409
when I show you some fun devices you'll

470
00:23:24,409 --> 00:23:27,289
see that they're limited not by the

471
00:23:27,289 --> 00:23:31,039
device but they're limited by the flash

472
00:23:31,039 --> 00:23:33,440
drives the flash drives can only write

473
00:23:33,440 --> 00:23:37,009
so fast so what really kills me you can

474
00:23:37,009 --> 00:23:39,860
get a flash drive and some of them will

475
00:23:39,860 --> 00:23:45,080
even advertise supports high speed ok it

476
00:23:45,080 --> 00:23:47,320
does support it but that doesn't mean

477
00:23:47,320 --> 00:23:51,259
you're gonna read off of that chip at

478
00:23:51,259 --> 00:23:54,440
high speed rates it also means you're

479
00:23:54,440 --> 00:23:56,360
certainly not going to write anywhere

480
00:23:56,360 --> 00:23:57,619
close to those rates you're not even

481
00:23:57,619 --> 00:24:00,220
gonna write it 12 megabits per second

482
00:24:00,220 --> 00:24:05,889
but it's good advertising I suppose

483
00:24:05,889 --> 00:24:08,720
other downsides of NAND flash memory

484
00:24:08,720 --> 00:24:11,690
chips you can only write chunks you

485
00:24:11,690 --> 00:24:15,619
can't write one little bite right so

486
00:24:15,619 --> 00:24:17,659
what happens if I want to change one

487
00:24:17,659 --> 00:24:22,759
little bite I read out a chunk I change

488
00:24:22,759 --> 00:24:25,070
the one little bite and I put back the

489
00:24:25,070 --> 00:24:28,490
chunk right some cases the chunk size is

490
00:24:28,490 --> 00:24:29,929
for the reading the right and the right

491
00:24:29,929 --> 00:24:32,690
aren't the same either a lot of this is

492
00:24:32,690 --> 00:24:35,539
handled by the controller yeah it's

493
00:24:35,539 --> 00:24:36,950
really crazy I know

494
00:24:36,950 --> 00:24:40,160
MacGyver is laughing at me here

495
00:24:40,160 --> 00:24:44,670
so you know reading and writing in

496
00:24:44,670 --> 00:24:47,040
blocks as I said before typically those

497
00:24:47,040 --> 00:24:52,620
blocks are 512 bytes some of the newer

498
00:24:52,620 --> 00:24:56,910
drives do have 2k by sector sizes or

499
00:24:56,910 --> 00:25:01,020
maybe 4k I I don't think I've ever

500
00:25:01,020 --> 00:25:03,480
actually seen one I just heard that they

501
00:25:03,480 --> 00:25:07,410
exist you know a knife had some largest

502
00:25:07,410 --> 00:25:11,580
like 32 gig flash drives and they still

503
00:25:11,580 --> 00:25:15,750
have 512 byte blocks which is horribly

504
00:25:15,750 --> 00:25:17,160
inefficient especially when you're

505
00:25:17,160 --> 00:25:22,080
running fat they're fat32 but other

506
00:25:22,080 --> 00:25:24,660
things you can do if you have a flash

507
00:25:24,660 --> 00:25:27,930
device and it's been damaged

508
00:25:27,930 --> 00:25:29,970
you know yesterday Gareth showed us some

509
00:25:29,970 --> 00:25:33,030
really damaged hard drives if you have a

510
00:25:33,030 --> 00:25:34,920
highly damaged flash device you can

511
00:25:34,920 --> 00:25:39,000
normally somewhat easily unsolder that

512
00:25:39,000 --> 00:25:40,800
memory chip and as long as the memory

513
00:25:40,800 --> 00:25:44,970
chip isn't bad get another flash device

514
00:25:44,970 --> 00:25:49,020
and solder it on there read it you don't

515
00:25:49,020 --> 00:25:50,760
have those issues that you would have

516
00:25:50,760 --> 00:25:53,520
with a hard drive where oh I'm sorry you

517
00:25:53,520 --> 00:25:56,010
know like the Sony hacker hole that

518
00:25:56,010 --> 00:25:58,050
printed circuit board just disappeared

519
00:25:58,050 --> 00:26:04,350
I'm sorry so if you're really lucky you

520
00:26:04,350 --> 00:26:08,280
might have a JTAG port for those of you

521
00:26:08,280 --> 00:26:10,380
aren't familiar JTAG is a standard for

522
00:26:10,380 --> 00:26:13,140
testing allows you to connect to a

523
00:26:13,140 --> 00:26:16,650
device and do some testing on it other

524
00:26:16,650 --> 00:26:19,470
things that you should be aware of when

525
00:26:19,470 --> 00:26:21,360
you buy hard drives they cheat a little

526
00:26:21,360 --> 00:26:25,650
bit right you buy the gigabyte or the

527
00:26:25,650 --> 00:26:28,650
terabyte drive it doesn't really have a

528
00:26:28,650 --> 00:26:32,510
terabyte it has you know a trillion

529
00:26:32,510 --> 00:26:38,040
bytes not a thousand 24 times 1,024 etc

530
00:26:38,040 --> 00:26:39,039
right

531
00:26:39,039 --> 00:26:43,700
so you can have slight differences if

532
00:26:43,700 --> 00:26:46,580
you buy a flash drive you should be

533
00:26:46,580 --> 00:26:48,859
aware there can be slight differences as

534
00:26:48,859 --> 00:26:52,340
well because some of those controller

535
00:26:52,340 --> 00:26:54,309
chips I talked about a little while ago

536
00:26:54,309 --> 00:26:57,379
some of them have their own RAM and

537
00:26:57,379 --> 00:27:01,539
their own storage and some of them steal

538
00:27:01,539 --> 00:27:05,539
some of your flash memory so if you have

539
00:27:05,539 --> 00:27:08,599
to flex four gig flash drives from

540
00:27:08,599 --> 00:27:10,669
different manufacturers they might have

541
00:27:10,669 --> 00:27:13,509
slightly different amounts of storage

542
00:27:13,509 --> 00:27:16,999
which might be bad if say you're trying

543
00:27:16,999 --> 00:27:20,029
to make a forensic copy of the larger

544
00:27:20,029 --> 00:27:22,489
one to the smaller one alright so

545
00:27:22,489 --> 00:27:27,200
something to keep in mind alright as the

546
00:27:27,200 --> 00:27:31,009
storage media it just emulates a hard

547
00:27:31,009 --> 00:27:33,200
drive typically with a scuzzy interface

548
00:27:33,200 --> 00:27:37,519
and as I said 512 bytes is the typical

549
00:27:37,519 --> 00:27:43,009
sector size often they'll use the scuzzy

550
00:27:43,009 --> 00:27:49,429
command set and typically a heart our

551
00:27:49,429 --> 00:27:52,399
flash drive is formatted as just one big

552
00:27:52,399 --> 00:27:57,229
partition alright our logical unit the

553
00:27:57,229 --> 00:27:59,269
flash drives can support multiple

554
00:27:59,269 --> 00:28:04,729
logical units however they're treated

555
00:28:04,729 --> 00:28:08,809
differently in different OSS in theory

556
00:28:08,809 --> 00:28:11,720
windows can read other than the first

557
00:28:11,720 --> 00:28:14,779
logical unit I have never seen that

558
00:28:14,779 --> 00:28:17,389
happen though maybe I haven't used the

559
00:28:17,389 --> 00:28:19,700
right version of Windows but typically I

560
00:28:19,700 --> 00:28:24,109
can hide information on higher logical

561
00:28:24,109 --> 00:28:27,080
units alright so if I have information I

562
00:28:27,080 --> 00:28:29,299
don't want someone to just naively get

563
00:28:29,299 --> 00:28:34,159
by plugging in my flash drive I just put

564
00:28:34,159 --> 00:28:36,169
it on a higher logical unit now if I'm

565
00:28:36,169 --> 00:28:39,499
really paranoid well first of all I'm of

566
00:28:39,499 --> 00:28:41,419
course I'm running Linux right if I'm

567
00:28:41,419 --> 00:28:44,450
paranoid I'm not running Windows but you

568
00:28:44,450 --> 00:28:46,399
can use an encrypted filesystem and put

569
00:28:46,399 --> 00:28:48,320
that on a higher order

570
00:28:48,320 --> 00:28:51,240
logical unit on your flashdrive just a

571
00:28:51,240 --> 00:28:54,090
little tip for the stuff that you don't

572
00:28:54,090 --> 00:28:56,930
want disappearing or people looking at

573
00:28:56,930 --> 00:29:00,960
alright other things you should check

574
00:29:00,960 --> 00:29:05,490
the device will report its size and then

575
00:29:05,490 --> 00:29:10,290
it has its real size okay there have

576
00:29:10,290 --> 00:29:14,010
been a batch of some really cheap drives

577
00:29:14,010 --> 00:29:16,260
coming out of China this was a few years

578
00:29:16,260 --> 00:29:19,710
ago they would advertise themselves as

579
00:29:19,710 --> 00:29:22,320
perhaps a four gig drive and they were

580
00:29:22,320 --> 00:29:25,470
really a one gig drive and I guess they

581
00:29:25,470 --> 00:29:27,810
figured that it'll take a while for

582
00:29:27,810 --> 00:29:30,330
someone to notice you know all of a

583
00:29:30,330 --> 00:29:32,490
sudden you get over a gigabyte and you

584
00:29:32,490 --> 00:29:35,310
get all these errors it can't why can't

585
00:29:35,310 --> 00:29:36,930
it right to anything because it's not

586
00:29:36,930 --> 00:29:40,970
there it was a lie all right

587
00:29:40,970 --> 00:29:45,050
other things you should be aware of the

588
00:29:45,050 --> 00:29:47,910
you know and the hard drive game you

589
00:29:47,910 --> 00:29:50,580
know a thousand is a thousand not a

590
00:29:50,580 --> 00:29:53,400
thousand 24 well you might think well

591
00:29:53,400 --> 00:29:54,930
since we're dealing with memory chips

592
00:29:54,930 --> 00:29:58,440
when it comes to flash drives we don't

593
00:29:58,440 --> 00:30:00,210
have to worry about that well that's not

594
00:30:00,210 --> 00:30:03,420
quite true because of two things I

595
00:30:03,420 --> 00:30:05,070
already mentioned that some controller

596
00:30:05,070 --> 00:30:08,160
chips use part of that memory for

597
00:30:08,160 --> 00:30:10,050
themselves and the other thing is you

598
00:30:10,050 --> 00:30:12,030
need to realize there's error correcting

599
00:30:12,030 --> 00:30:16,230
bytes there's about 16 bytes for a 512

600
00:30:16,230 --> 00:30:20,430
byte block so it really takes 528 bytes

601
00:30:20,430 --> 00:30:23,100
to store 512 bytes so you lose a little

602
00:30:23,100 --> 00:30:29,670
bit okay so let's get to the real fun so

603
00:30:29,670 --> 00:30:32,270
have a little fun with microcontrollers

604
00:30:32,270 --> 00:30:36,300
I talked a little bit about the chip

605
00:30:36,300 --> 00:30:38,700
choice that I made for making some

606
00:30:38,700 --> 00:30:41,780
devices how do we talk to flash drives

607
00:30:41,780 --> 00:30:45,180
how can we make very small I want to

608
00:30:45,180 --> 00:30:46,620
claim I have the world's smallest

609
00:30:46,620 --> 00:30:50,100
forensic duplicator you can challenge me

610
00:30:50,100 --> 00:30:51,900
on that later

611
00:30:51,900 --> 00:30:54,480
and I have a slightly larger but more

612
00:30:54,480 --> 00:30:56,530
user-friendly version

613
00:30:56,530 --> 00:30:59,290
then talk a little bit about using a

614
00:30:59,290 --> 00:31:02,740
microcontroller to block write

615
00:31:02,740 --> 00:31:05,620
operations all right chip choice I chose

616
00:31:05,620 --> 00:31:10,540
a vinculum to chip from FTDI you guys

617
00:31:10,540 --> 00:31:13,120
ever heard of this company a little

618
00:31:13,120 --> 00:31:15,490
north of here I think anything Glasgow I

619
00:31:15,490 --> 00:31:19,690
think that's where they're at but they

620
00:31:19,690 --> 00:31:23,050
do a lot of USB stuff I am I never heard

621
00:31:23,050 --> 00:31:25,770
of Arduino right

622
00:31:25,770 --> 00:31:28,510
the little chips that make your Arduino

623
00:31:28,510 --> 00:31:30,850
talk to your PC guess who makes those

624
00:31:30,850 --> 00:31:35,410
chips FTDI all right there seem to be

625
00:31:35,410 --> 00:31:37,840
the USB people they do if they do it

626
00:31:37,840 --> 00:31:39,310
it's probably has something to do with

627
00:31:39,310 --> 00:31:42,370
USB well I guess they got tired of just

628
00:31:42,370 --> 00:31:44,710
building those chips and they said hey

629
00:31:44,710 --> 00:31:46,300
everyone's got their own microcontroller

630
00:31:46,300 --> 00:31:50,350
let's make one so they introduced this

631
00:31:50,350 --> 00:31:53,200
series this is the second version of the

632
00:31:53,200 --> 00:31:55,810
series and what does it feature all

633
00:31:55,810 --> 00:32:00,030
right you've got two full speed USB 2.0

634
00:32:00,030 --> 00:32:02,620
interfaces and you can configure them as

635
00:32:02,620 --> 00:32:06,970
either a host or a slave 256k of flash

636
00:32:06,970 --> 00:32:11,460
memory that's respectable 16k of RAM

637
00:32:11,460 --> 00:32:13,210
sounds low if you don't do

638
00:32:13,210 --> 00:32:14,710
microcontrollers otherwise you're like

639
00:32:14,710 --> 00:32:17,830
wow it's pretty good and they have all

640
00:32:17,830 --> 00:32:19,950
the normal microcontroller kind of stuff

641
00:32:19,950 --> 00:32:24,540
right also comes with an easy-to-use IDE

642
00:32:24,540 --> 00:32:28,360
some simultaneous access you can do

643
00:32:28,360 --> 00:32:32,260
between devices they have different

644
00:32:32,260 --> 00:32:34,530
development modules available

645
00:32:34,530 --> 00:32:37,720
unfortunately they only make

646
00:32:37,720 --> 00:32:40,390
surface-mount chips I don't know how

647
00:32:40,390 --> 00:32:42,340
many of you like to build electronics

648
00:32:42,340 --> 00:32:44,950
and like to solder I don't know too many

649
00:32:44,950 --> 00:32:46,330
people that like to solder with

650
00:32:46,330 --> 00:32:51,130
surface-mount chips right it's it's a

651
00:32:51,130 --> 00:32:53,380
bit of a hassle in particular you have

652
00:32:53,380 --> 00:32:57,250
to make a board right you can't just oh

653
00:32:57,250 --> 00:32:59,740
I've got this chip let me build

654
00:32:59,740 --> 00:33:01,090
something with it you have to make a

655
00:33:01,090 --> 00:33:03,820
board and you know do all the etching

656
00:33:03,820 --> 00:33:06,250
and they can be a little bit involved so

657
00:33:06,250 --> 00:33:08,200
fortunately they do produce some

658
00:33:08,200 --> 00:33:10,810
development boards which are essentially

659
00:33:10,810 --> 00:33:14,740
just their chip with a bit big pin out

660
00:33:14,740 --> 00:33:17,050
you know it's like oh I can plug this on

661
00:33:17,050 --> 00:33:19,030
a breadboard now it's a lot easier to

662
00:33:19,030 --> 00:33:21,880
deal with and those devices their

663
00:33:21,880 --> 00:33:23,730
development boards are cheap enough that

664
00:33:23,730 --> 00:33:26,620
you might just instead of just

665
00:33:26,620 --> 00:33:28,330
breadboard a net you might just plug it

666
00:33:28,330 --> 00:33:30,010
into an actual device which is what

667
00:33:30,010 --> 00:33:33,070
you'll see it here about right so they

668
00:33:33,070 --> 00:33:36,330
have as I said surface mount packages

669
00:33:36,330 --> 00:33:38,980
here's a block diagram I don't know how

670
00:33:38,980 --> 00:33:42,640
well you can see this but you have a

671
00:33:42,640 --> 00:33:46,770
little embedded CPU some flash memory

672
00:33:46,770 --> 00:33:51,190
little bits that talk USB and then kind

673
00:33:51,190 --> 00:33:52,930
of standard microcontroller stuff

674
00:33:52,930 --> 00:33:57,490
general purpose i/o SPI if you don't

675
00:33:57,490 --> 00:33:59,380
know what SPI is it's a real common

676
00:33:59,380 --> 00:34:00,780
thing that's used to talk between

677
00:34:00,780 --> 00:34:02,860
microcontrollers and devices and things

678
00:34:02,860 --> 00:34:05,890
like that but you can ask me more about

679
00:34:05,890 --> 00:34:11,290
that later their ide isn't bad looks

680
00:34:11,290 --> 00:34:13,600
kind of like this this is stolen from

681
00:34:13,600 --> 00:34:16,899
their brochures I'll show you the actual

682
00:34:16,899 --> 00:34:22,120
ID here in a bit and you know people ask

683
00:34:22,120 --> 00:34:23,860
me well what do you think of this ID

684
00:34:23,860 --> 00:34:28,570
it's like well it's not eclipse but it's

685
00:34:28,570 --> 00:34:31,899
nice you know it's very functional I've

686
00:34:31,899 --> 00:34:38,800
had worse and yes it's not eclipse but

687
00:34:38,800 --> 00:34:41,860
I'm not building large operating systems

688
00:34:41,860 --> 00:34:43,780
or anything like that either that fit in

689
00:34:43,780 --> 00:34:48,320
my 256 km flash memory right

690
00:34:48,320 --> 00:34:55,280
I just pulled up a project here this is

691
00:34:55,280 --> 00:35:00,260
actually well what's going on there this

692
00:35:00,260 --> 00:35:05,210
is a duplicator actually but you know

693
00:35:05,210 --> 00:35:07,940
it's pretty basic kind of the stuff you

694
00:35:07,940 --> 00:35:09,770
would expect where you can edit your

695
00:35:09,770 --> 00:35:12,230
code and get messages and set

696
00:35:12,230 --> 00:35:15,770
breakpoints and set of watches and etc

697
00:35:15,770 --> 00:35:22,490
etc alright another nice thing that they

698
00:35:22,490 --> 00:35:26,150
have is they have general purpose i/o on

699
00:35:26,150 --> 00:35:29,570
the chips and you can set that up they

700
00:35:29,570 --> 00:35:32,480
have a nice view II like so that you can

701
00:35:32,480 --> 00:35:35,680
use for that and here's one of their

702
00:35:35,680 --> 00:35:39,500
development packages right this is a 64

703
00:35:39,500 --> 00:35:43,550
pin version they have three versions of

704
00:35:43,550 --> 00:35:45,230
their chips they all have the same

705
00:35:45,230 --> 00:35:47,150
functionality it's just different levels

706
00:35:47,150 --> 00:35:52,250
of i/o 32 pin 48 pin 64 pin alright so

707
00:35:52,250 --> 00:35:55,130
this is a blow-up no this is not actual

708
00:35:55,130 --> 00:35:56,660
size or it'd be hard to fit in your

709
00:35:56,660 --> 00:36:02,360
pocket of the 64 pin version and you'll

710
00:36:02,360 --> 00:36:05,270
see an actual one here in a while this

711
00:36:05,270 --> 00:36:10,610
is actual size like that and they also

712
00:36:10,610 --> 00:36:14,330
make smaller such as 32 and you'll see

713
00:36:14,330 --> 00:36:18,350
that shortly here's the schematic for

714
00:36:18,350 --> 00:36:24,650
that development board pretty much it's

715
00:36:24,650 --> 00:36:25,910
all going on here

716
00:36:25,910 --> 00:36:31,850
they have pin outs for the chip and then

717
00:36:31,850 --> 00:36:34,280
there's a couple connectors to do USB

718
00:36:34,280 --> 00:36:37,620
stuff alright

719
00:36:37,620 --> 00:36:40,590
so my first project I said you know why

720
00:36:40,590 --> 00:36:42,270
don't I make a nice simple duplicator

721
00:36:42,270 --> 00:36:43,950
just something you can you can make a

722
00:36:43,950 --> 00:36:45,600
forensic copy with a sector-by-sector

723
00:36:45,600 --> 00:36:49,560
copy you know you sit insert your drive

724
00:36:49,560 --> 00:36:53,570
to copy you insert the target drive

725
00:36:53,570 --> 00:36:56,130
ideally the same model let me talk about

726
00:36:56,130 --> 00:36:57,840
the fact that it should be at least the

727
00:36:57,840 --> 00:37:00,050
same size you might want to check that

728
00:37:00,050 --> 00:37:02,760
hopefully uses the same block size not a

729
00:37:02,760 --> 00:37:04,740
problem everybody seems to be using 512

730
00:37:04,740 --> 00:37:06,960
and then do a sector-by-sector copy

731
00:37:06,960 --> 00:37:09,720
right well because of the write

732
00:37:09,720 --> 00:37:12,930
limitations on flash drives and this

733
00:37:12,930 --> 00:37:14,760
does vary a little bit depending on how

734
00:37:14,760 --> 00:37:17,850
cheap they are it takes about 11 minutes

735
00:37:17,850 --> 00:37:20,190
to do a gigabyte all right so if you

736
00:37:20,190 --> 00:37:22,830
have a four gig drive 45 minutes or so

737
00:37:22,830 --> 00:37:26,310
maybe an hour and it'll be done right

738
00:37:26,310 --> 00:37:29,400
and it's kind of a pain now or pay later

739
00:37:29,400 --> 00:37:33,420
either you pay now by making a duplicate

740
00:37:33,420 --> 00:37:36,330
as a flash drive or you pay later by

741
00:37:36,330 --> 00:37:38,700
doing an image which might be faster but

742
00:37:38,700 --> 00:37:40,890
then working with the image is gonna be

743
00:37:40,890 --> 00:37:43,140
slower or maybe you actually just want

744
00:37:43,140 --> 00:37:44,700
to make a copy maybe you want to make a

745
00:37:44,700 --> 00:37:47,550
copy of your katana drive you know and

746
00:37:47,550 --> 00:37:49,430
you want to do a sector-by-sector copy

747
00:37:49,430 --> 00:37:53,430
to make sure that the new one boots when

748
00:37:53,430 --> 00:37:57,660
you're done so how do we talk to flash

749
00:37:57,660 --> 00:38:01,080
drive very quickly it uses what we

750
00:38:01,080 --> 00:38:03,270
called bulk only mass storage or

751
00:38:03,270 --> 00:38:06,720
sometimes called BBB because there are

752
00:38:06,720 --> 00:38:08,670
different kinds of transfers that are

753
00:38:08,670 --> 00:38:12,210
allowed a lot of devices use the control

754
00:38:12,210 --> 00:38:14,840
endpoints to control their transfers

755
00:38:14,840 --> 00:38:18,140
bulk only mass storage devices do not

756
00:38:18,140 --> 00:38:20,670
they use the control endpoints to

757
00:38:20,670 --> 00:38:22,800
enumerate and then everything is done

758
00:38:22,800 --> 00:38:24,990
with bulk endpoints all right so they

759
00:38:24,990 --> 00:38:28,350
send out stuff they have three phases

760
00:38:28,350 --> 00:38:30,150
all right there's a command block

761
00:38:30,150 --> 00:38:33,870
wrapper that sent sounds like it must

762
00:38:33,870 --> 00:38:38,010
wrap a command block all right possibly

763
00:38:38,010 --> 00:38:39,900
some data transport and then there's a

764
00:38:39,900 --> 00:38:42,380
command status wrapper that comes back

765
00:38:42,380 --> 00:38:43,810
right

766
00:38:43,810 --> 00:38:48,880
and pretty much all these drives use a

767
00:38:48,880 --> 00:38:53,380
reduced scuzzy set and everything as I

768
00:38:53,380 --> 00:38:57,640
said is on bulk endpoints here is a

769
00:38:57,640 --> 00:38:59,710
little C code for a command block

770
00:38:59,710 --> 00:39:02,770
wrapper what does it look like you know

771
00:39:02,770 --> 00:39:07,270
we start out with a signature there's a

772
00:39:07,270 --> 00:39:09,910
tag the tag is used to associate this

773
00:39:09,910 --> 00:39:13,180
command block wrapper with the command

774
00:39:13,180 --> 00:39:16,390
status wrapper that comes at the end so

775
00:39:16,390 --> 00:39:18,340
that I know which one I'm talking about

776
00:39:18,340 --> 00:39:23,950
how much data am I gonna send any flags

777
00:39:23,950 --> 00:39:28,630
is it in or out which logical unit is it

778
00:39:28,630 --> 00:39:31,540
what's the length the length is the

779
00:39:31,540 --> 00:39:34,540
length of my command block right I have

780
00:39:34,540 --> 00:39:38,260
16 bytes and I'm going to use between 6

781
00:39:38,260 --> 00:39:39,610
and 16

782
00:39:39,610 --> 00:39:41,830
all right the smallest command uses six

783
00:39:41,830 --> 00:39:45,070
of those so the command block as I said

784
00:39:45,070 --> 00:39:47,800
is six to sixteen bytes the first byte

785
00:39:47,800 --> 00:39:50,770
is the command so for example the

786
00:39:50,770 --> 00:39:53,590
command to format your drive which is

787
00:39:53,590 --> 00:39:55,000
something you might want to do because

788
00:39:55,000 --> 00:39:57,540
it's quick and autonomous you just do

789
00:39:57,540 --> 00:40:00,460
format and it's a lot quicker than

790
00:40:00,460 --> 00:40:03,420
writing zeros to the drive alright so

791
00:40:03,420 --> 00:40:06,490
you know the operation code for that one

792
00:40:06,490 --> 00:40:10,870
is four you can tell it which one you

793
00:40:10,870 --> 00:40:13,870
want here things get a little weird

794
00:40:13,870 --> 00:40:15,730
because they don't have everything on

795
00:40:15,730 --> 00:40:17,800
byte boundaries so you have three bits

796
00:40:17,800 --> 00:40:21,390
for the logical unit number you know

797
00:40:21,390 --> 00:40:26,879
extra parameters etc etc so all right

798
00:40:27,720 --> 00:40:30,900
here's an example of the read command

799
00:40:30,900 --> 00:40:34,050
block there's different versions of this

800
00:40:34,050 --> 00:40:39,480
this is called the read 10 and it's

801
00:40:39,480 --> 00:40:42,839
gonna have an opcode of 28 hex and here

802
00:40:42,839 --> 00:40:44,369
are the different parameters I won't go

803
00:40:44,369 --> 00:40:46,589
into that a little bit limited on time

804
00:40:46,589 --> 00:40:49,829
but okay here are some comments Guzzi

805
00:40:49,829 --> 00:40:53,849
commands that you'll find useful most

806
00:40:53,849 --> 00:40:58,920
every device will implement these some

807
00:40:58,920 --> 00:41:01,109
of them I have listed as required that's

808
00:41:01,109 --> 00:41:05,099
required by the scuzzy spec so you'll

809
00:41:05,099 --> 00:41:08,329
notice format units required inquiry

810
00:41:08,329 --> 00:41:10,440
basically says tell me about your device

811
00:41:10,440 --> 00:41:14,460
and mode selects says this is what I

812
00:41:14,460 --> 00:41:17,190
want to use to talk to you and then

813
00:41:17,190 --> 00:41:20,750
there are different versions of read

814
00:41:20,750 --> 00:41:25,079
some of which are required and read

815
00:41:25,079 --> 00:41:28,619
capacity says how big are you reformat

816
00:41:28,619 --> 00:41:32,400
capacities is how much real space do you

817
00:41:32,400 --> 00:41:36,560
have after you've been formatted right

818
00:41:36,560 --> 00:41:38,700
and of course we have to be able to

819
00:41:38,700 --> 00:41:42,000
write and there are commands for things

820
00:41:42,000 --> 00:41:43,710
like synchronized cache if you've been

821
00:41:43,710 --> 00:41:46,230
cashing and I want to unplug my device

822
00:41:46,230 --> 00:41:48,569
please sync it so that I don't have any

823
00:41:48,569 --> 00:41:52,740
data corruption or data loss all right

824
00:41:52,740 --> 00:41:55,859
once this has been sent you have a

825
00:41:55,859 --> 00:41:58,079
command status wrapper that comes back

826
00:41:58,079 --> 00:42:01,170
and it's much simpler you have the

827
00:42:01,170 --> 00:42:04,800
signature the tag that associates it

828
00:42:04,800 --> 00:42:06,890
with the appropriate command block and

829
00:42:06,890 --> 00:42:10,109
then you can get a res residue that

830
00:42:10,109 --> 00:42:12,660
tells you what's the difference between

831
00:42:12,660 --> 00:42:15,380
how much you ask for and what you got

832
00:42:15,380 --> 00:42:19,109
and then more most importantly you have

833
00:42:19,109 --> 00:42:23,099
the status 3 statuses are possible zero

834
00:42:23,099 --> 00:42:26,550
means all everything's good 1 means

835
00:42:26,550 --> 00:42:29,880
everything's not good and 2 means of

836
00:42:29,880 --> 00:42:32,040
phase err you might think what does that

837
00:42:32,040 --> 00:42:35,099
mean I don't have time to go into it

838
00:42:35,099 --> 00:42:37,050
right now but if you're interested we

839
00:42:37,050 --> 00:42:38,570
can talk about it later

840
00:42:38,570 --> 00:42:43,040
they use phasing to send commands and

841
00:42:43,040 --> 00:42:45,500
send information on the USB so I'll use

842
00:42:45,500 --> 00:42:47,960
data 0 data 1 and they go back and forth

843
00:42:47,960 --> 00:42:50,060
and their rules then going back and

844
00:42:50,060 --> 00:42:53,000
forth as to where you're toggled if

845
00:42:53,000 --> 00:42:56,570
either on 0 or 1 and if you get out of

846
00:42:56,570 --> 00:42:58,790
phase then you send a phase there which

847
00:42:58,790 --> 00:43:00,860
means ok I'm not sure where we are

848
00:43:00,860 --> 00:43:04,550
let's go back to 0 all right the reason

849
00:43:04,550 --> 00:43:08,990
that it's just simply 1 its historical

850
00:43:08,990 --> 00:43:11,950
scuzzy drives in your in your machine

851
00:43:11,950 --> 00:43:15,260
you just want to check for 0 check for 0

852
00:43:15,260 --> 00:43:17,870
oh it's one then you inquire to see what

853
00:43:17,870 --> 00:43:20,390
the error was it's a lot faster than

854
00:43:20,390 --> 00:43:25,580
saying is it zero is it this is it that

855
00:43:25,580 --> 00:43:27,770
you know sometimes you just want to know

856
00:43:27,770 --> 00:43:28,580
if it worked or not

857
00:43:28,580 --> 00:43:35,300
so alright just a little bit of code you

858
00:43:35,300 --> 00:43:40,010
know here's code that will connect to a

859
00:43:40,010 --> 00:43:43,730
flash drive a bulk storage device using

860
00:43:43,730 --> 00:43:47,540
this chipset very briefly you start up

861
00:43:47,540 --> 00:43:51,440
you create a handle to a bulk device you

862
00:43:51,440 --> 00:43:54,050
set up a bunch of variables you connect

863
00:43:54,050 --> 00:43:55,970
to it you say hey I want to talk to a

864
00:43:55,970 --> 00:43:59,690
mass storage device and one that speaks

865
00:43:59,690 --> 00:44:03,170
scuzzy please they all do and the

866
00:44:03,170 --> 00:44:05,810
protocol will be this bulk only mass

867
00:44:05,810 --> 00:44:07,730
storage protocol we've been talking

868
00:44:07,730 --> 00:44:11,720
about and I want to find a device handle

869
00:44:11,720 --> 00:44:14,420
by the clasp which is what I've

870
00:44:14,420 --> 00:44:16,940
specified here I make an i/o control

871
00:44:16,940 --> 00:44:20,980
call and hopefully at the end of this I

872
00:44:20,980 --> 00:44:24,350
have handled to a device so now that I

873
00:44:24,350 --> 00:44:27,740
have a handle device I open it attached

874
00:44:27,740 --> 00:44:31,760
to it that might seem a little weird why

875
00:44:31,760 --> 00:44:33,470
do I open and then attach but that's

876
00:44:33,470 --> 00:44:38,530
just the way it is so another IO control

877
00:44:38,530 --> 00:44:41,090
the cursor seemed to disappear in this

878
00:44:41,090 --> 00:44:43,270
room I think it's a Bermuda Triangle

879
00:44:43,270 --> 00:44:46,300
I don't I know it's not just me because

880
00:44:46,300 --> 00:44:49,420
other speakers it does anyone see the

881
00:44:49,420 --> 00:44:52,020
cursor the hidden hurts me there it is

882
00:44:52,020 --> 00:44:58,000
alright alright and so we attach and

883
00:44:58,000 --> 00:45:01,030
once we've attached we do some stuff and

884
00:45:01,030 --> 00:45:05,170
then we detach how do you read and write

885
00:45:05,170 --> 00:45:07,570
sectors there's stuff provided in the

886
00:45:07,570 --> 00:45:10,450
library again once I have a handle to

887
00:45:10,450 --> 00:45:12,640
the device I tell it which sector I want

888
00:45:12,640 --> 00:45:18,430
and I attach and I was waiting for Steve

889
00:45:18,430 --> 00:45:20,040
to pick up that gun

890
00:45:20,040 --> 00:45:22,619
alright apparently I'm not that like it

891
00:45:22,619 --> 00:45:28,080
so you know off we go and we can read in

892
00:45:28,080 --> 00:45:30,400
sectors now one thing you should be

893
00:45:30,400 --> 00:45:32,380
aware of your doing this kind of stuff

894
00:45:32,380 --> 00:45:35,140
you can't read in an individual sector

895
00:45:35,140 --> 00:45:37,750
many of these devices like to read and

896
00:45:37,750 --> 00:45:41,920
write in clusters so if you read in one

897
00:45:41,920 --> 00:45:44,410
sector at a time but they really have

898
00:45:44,410 --> 00:45:47,230
clusters that they're working with what

899
00:45:47,230 --> 00:45:50,410
happens is if I read in sector zero it's

900
00:45:50,410 --> 00:45:53,290
gonna read in the first cluster and then

901
00:45:53,290 --> 00:45:54,820
when I read in sector one it's gonna

902
00:45:54,820 --> 00:45:57,220
read that cluster and again and again

903
00:45:57,220 --> 00:45:59,619
and again and again alright so it ends

904
00:45:59,619 --> 00:46:02,290
up being pretty slow so you want to try

905
00:46:02,290 --> 00:46:02,920
not to do that

906
00:46:02,920 --> 00:46:07,090
alright now here's the device realized I

907
00:46:07,090 --> 00:46:09,250
have to apologize I know that in this

908
00:46:09,250 --> 00:46:10,960
country you have an inversion to the

909
00:46:10,960 --> 00:46:14,530
letter Z or Zed as you call it here so I

910
00:46:14,530 --> 00:46:17,430
apologize if my use of the letter Z

911
00:46:17,430 --> 00:46:21,040
offends you I would write an apology but

912
00:46:21,040 --> 00:46:23,260
if I apologized in writing that might

913
00:46:23,260 --> 00:46:24,750
use another Z and

914
00:46:24,750 --> 00:46:28,050
and you know the cycle continues so all

915
00:46:28,050 --> 00:46:31,740
right so in order to improve performance

916
00:46:31,740 --> 00:46:34,230
over the simple-minded way of doing this

917
00:46:34,230 --> 00:46:38,090
I implemented a double buffered

918
00:46:38,090 --> 00:46:41,910
multi-threaded algorithm for this again

919
00:46:41,910 --> 00:46:45,660
for primates is still limited by right

920
00:46:45,660 --> 00:46:47,720
speeds of the device some future

921
00:46:47,720 --> 00:46:51,590
enhancements that I intend for this to

922
00:46:51,590 --> 00:46:55,470
actually use that format unit and then

923
00:46:55,470 --> 00:46:57,630
detect stuff that's all zeroes because

924
00:46:57,630 --> 00:46:59,930
often most of it's empty

925
00:46:59,930 --> 00:47:02,940
why should I write write write zeroes

926
00:47:02,940 --> 00:47:04,620
all the time it doesn't make sense in

927
00:47:04,620 --> 00:47:06,510
this context hard drives it makes more

928
00:47:06,510 --> 00:47:09,870
sense and it might speed things up a

929
00:47:09,870 --> 00:47:13,620
little bit for this particular device I

930
00:47:13,620 --> 00:47:17,820
use the smallest board that vinculum

931
00:47:17,820 --> 00:47:21,630
makes or FTDI makes and I actually took

932
00:47:21,630 --> 00:47:23,010
one of their development boards and

933
00:47:23,010 --> 00:47:24,660
hacked it a little bit and soldered

934
00:47:24,660 --> 00:47:27,930
directly to the board right and it's got

935
00:47:27,930 --> 00:47:32,190
a nice debug port here is you can see

936
00:47:32,190 --> 00:47:35,220
the scale you know here's blown up

937
00:47:35,220 --> 00:47:37,740
here's actual size notice I have a

938
00:47:37,740 --> 00:47:42,270
convenient carrying tin from Altoids go

939
00:47:42,270 --> 00:47:45,270
all right so you know here's the actual

940
00:47:45,270 --> 00:47:45,900
oops

941
00:47:45,900 --> 00:47:49,440
see it's so small I dropped it here's

942
00:47:49,440 --> 00:47:54,230
the actual device based on a 32 pin

943
00:47:54,230 --> 00:47:58,970
development module I just unsoldered the

944
00:47:58,970 --> 00:48:01,470
pins the header pins on this and

945
00:48:01,470 --> 00:48:04,110
soldered my LEDs and my power connector

946
00:48:04,110 --> 00:48:07,740
directly to it why did I inside of the

947
00:48:07,740 --> 00:48:09,480
pins mostly because they were poked me

948
00:48:09,480 --> 00:48:12,900
in my pocket before I got the stylish

949
00:48:12,900 --> 00:48:15,780
carrying 10 alright so how would you

950
00:48:15,780 --> 00:48:19,590
power such a device well it's a USB

951
00:48:19,590 --> 00:48:23,400
device isn't it so naturally one would

952
00:48:23,400 --> 00:48:27,990
have to get a USB power cable to power

953
00:48:27,990 --> 00:48:31,230
your USB device it makes sense by the

954
00:48:31,230 --> 00:48:32,400
way this

955
00:48:32,400 --> 00:48:35,299
Kable I reclaimed off my broken we

956
00:48:35,299 --> 00:48:38,549
recharger it it went bad and I thought

957
00:48:38,549 --> 00:48:42,089
it's a nice cable I could do something

958
00:48:42,089 --> 00:48:45,930
with that so you know part of why you

959
00:48:45,930 --> 00:48:48,720
might want to do any of this is to avoid

960
00:48:48,720 --> 00:48:50,130
having to use a computer

961
00:48:50,130 --> 00:48:52,730
plugging a computer around to do things

962
00:48:52,730 --> 00:48:55,349
nowadays since I got my Android tablet

963
00:48:55,349 --> 00:48:57,119
the only thing I use my computer for is

964
00:48:57,119 --> 00:49:00,569
programming things like this but you

965
00:49:00,569 --> 00:49:01,920
might not have that you might be

966
00:49:01,920 --> 00:49:08,180
traveling so you might need some power

967
00:49:08,180 --> 00:49:12,420
so you get your other Altoid gum tin you

968
00:49:12,420 --> 00:49:15,809
know the one that has a little bit of

969
00:49:15,809 --> 00:49:17,700
circuitry and a couple of rechargeable

970
00:49:17,700 --> 00:49:19,829
double A batteries that'll boost your

971
00:49:19,829 --> 00:49:26,609
three volts up to five volts and you

972
00:49:26,609 --> 00:49:29,990
just plug it in and you got power right

973
00:49:29,990 --> 00:49:33,480
and this guy he stinks he speaks blinky

974
00:49:33,480 --> 00:49:35,849
he doesn't speak English she's not

975
00:49:35,849 --> 00:49:37,440
American English or British English he

976
00:49:37,440 --> 00:49:40,259
speaks blinky and green blinky means

977
00:49:40,259 --> 00:49:44,220
please insert your original so I can

978
00:49:44,220 --> 00:49:47,999
grab a drive over here let's see what

979
00:49:47,999 --> 00:49:48,599
happens

980
00:49:48,599 --> 00:49:50,369
he went from green blinky two yellow

981
00:49:50,369 --> 00:49:52,890
blinky what do you think yellow blankie

982
00:49:52,890 --> 00:49:56,609
means and he blinked me blinky scholars

983
00:49:56,609 --> 00:49:57,180
in here

984
00:49:57,180 --> 00:49:59,130
blinky yellow blankie means please

985
00:49:59,130 --> 00:50:01,619
insert your duplicate or your target

986
00:50:01,619 --> 00:50:06,210
device all right so now he's on solid

987
00:50:06,210 --> 00:50:09,690
yellow and if you watch you'll see

988
00:50:09,690 --> 00:50:13,650
blinking lights here indicating access

989
00:50:13,650 --> 00:50:18,259
and over time you will see these lights

990
00:50:18,259 --> 00:50:22,079
sequencing all right that's my C just

991
00:50:22,079 --> 00:50:23,849
went to the next LED every couple

992
00:50:23,849 --> 00:50:27,499
thousand sectors it'll do that right

993
00:50:27,499 --> 00:50:31,340
that's its way of saying I'm not dead

994
00:50:31,340 --> 00:50:36,260
and then when it's done red I know it's

995
00:50:36,260 --> 00:50:38,810
probably a bad choice but red on means

996
00:50:38,810 --> 00:50:43,700
I'm done now right so well that need

997
00:50:43,700 --> 00:50:46,750
he's not he's not staying there yeah but

998
00:50:46,750 --> 00:50:49,610
so that's my world smallest now you

999
00:50:49,610 --> 00:50:53,020
might object and you might say well

1000
00:50:53,020 --> 00:50:57,470
that's that's nice Phil but maybe I

1001
00:50:57,470 --> 00:51:02,000
could use a little more space and so

1002
00:51:02,000 --> 00:51:05,950
maybe I want to use a more user-friendly

1003
00:51:05,950 --> 00:51:08,690
interface I want to use the same code

1004
00:51:08,690 --> 00:51:10,340
because I'm lazy good programmers are

1005
00:51:10,340 --> 00:51:13,640
always lazy somebody augment the

1006
00:51:13,640 --> 00:51:16,820
blinking lights with some English I also

1007
00:51:16,820 --> 00:51:18,740
like the power maybe with a 9-volt

1008
00:51:18,740 --> 00:51:22,670
battery make a little simpler all right

1009
00:51:22,670 --> 00:51:27,080
so I was originally hoping to fit this

1010
00:51:27,080 --> 00:51:31,190
in an Altoid tin it was just a little

1011
00:51:31,190 --> 00:51:33,050
too big even though I did shave a little

1012
00:51:33,050 --> 00:51:35,530
off the circuit boards to make it fit

1013
00:51:35,530 --> 00:51:38,410
but I did get it to fit in a puzzle tin

1014
00:51:38,410 --> 00:51:39,830
all right

1015
00:51:39,830 --> 00:51:44,600
and so you might say why the puzzle 10y

1016
00:51:44,600 --> 00:51:47,480
this puzzle 10 because if I took the

1017
00:51:47,480 --> 00:51:49,460
cars 10 away from my son he would scream

1018
00:51:49,460 --> 00:51:53,060
so the Mickey Mouse and Donald Duck Tim

1019
00:51:53,060 --> 00:51:54,320
not so much all right

1020
00:51:54,320 --> 00:52:00,910
so Steve's all cocked and ready there

1021
00:52:00,910 --> 00:52:04,070
this is the slightly more user-friendly

1022
00:52:04,070 --> 00:52:06,710
version all right so what I've done here

1023
00:52:06,710 --> 00:52:09,530
is I actually took a 64 pen development

1024
00:52:09,530 --> 00:52:12,110
device did I need that no but I had one

1025
00:52:12,110 --> 00:52:15,890
laying around so in an LCD screen and

1026
00:52:15,890 --> 00:52:19,670
those bolts nicely fit on top of a

1027
00:52:19,670 --> 00:52:21,230
little perfboard that I had laying

1028
00:52:21,230 --> 00:52:26,440
around and onto that I attached a switch

1029
00:52:26,440 --> 00:52:31,070
9 volt battery a 5 volt power regulator

1030
00:52:31,070 --> 00:52:35,120
and a pot to just the lighting on the

1031
00:52:35,120 --> 00:52:38,400
LCD so right that Oh

1032
00:52:38,400 --> 00:52:40,500
upside-down so there you have the

1033
00:52:40,500 --> 00:52:43,380
slightly more user-friendly version and

1034
00:52:43,380 --> 00:52:47,579
now it's saying what does it say insert

1035
00:52:47,579 --> 00:52:50,520
original right by the way in terms of

1036
00:52:50,520 --> 00:52:52,440
your battery life what do you think

1037
00:52:52,440 --> 00:52:56,480
sucks a lot of power on this backlight

1038
00:52:56,480 --> 00:53:00,900
backlight and the LCD incidentally I

1039
00:53:00,900 --> 00:53:02,940
lost all this and my luggage I checked

1040
00:53:02,940 --> 00:53:04,410
because I didn't want to walk through

1041
00:53:04,410 --> 00:53:05,970
the airport with all this homemade stuff

1042
00:53:05,970 --> 00:53:10,140
and I thought that the fact that I

1043
00:53:10,140 --> 00:53:12,599
beefed up the pump the power lines

1044
00:53:12,599 --> 00:53:15,180
coming to the battery is a is a big

1045
00:53:15,180 --> 00:53:18,630
no-no odd you know we did start 10

1046
00:53:18,630 --> 00:53:34,319
minutes late now Steve alright well

1047
00:53:34,319 --> 00:53:36,029
here's some more pictures you know I'll

1048
00:53:36,029 --> 00:53:39,450
be around if you want to see that later

1049
00:53:39,450 --> 00:53:41,880
one last device that I wanted to talk

1050
00:53:41,880 --> 00:53:45,240
about real quickly is the write blocker

1051
00:53:45,240 --> 00:53:48,180
this is device that I've had a couple of

1052
00:53:48,180 --> 00:53:54,960
issues with this device FTDI has come

1053
00:53:54,960 --> 00:53:58,529
out with their Arduino clone originally

1054
00:53:58,529 --> 00:54:00,210
called the Vinc alone and now called the

1055
00:54:00,210 --> 00:54:02,190
binco they can't decide what to call it

1056
00:54:02,190 --> 00:54:04,049
looks about like this and of course it

1057
00:54:04,049 --> 00:54:07,849
fits in a puzzle tin - and this is

1058
00:54:07,849 --> 00:54:14,730
eventually going to be a USB write

1059
00:54:14,730 --> 00:54:18,150
blocker I say eventually because I some

1060
00:54:18,150 --> 00:54:20,880
of the issues I ran into catch me later

1061
00:54:20,880 --> 00:54:23,039
if you want to hear more about that I

1062
00:54:23,039 --> 00:54:25,410
didn't quite get this to where I wanted

1063
00:54:25,410 --> 00:54:30,809
it before today but alright some future

1064
00:54:30,809 --> 00:54:34,980
directions using something like this to

1065
00:54:34,980 --> 00:54:37,700
make an Android Open accessory device I

1066
00:54:37,700 --> 00:54:40,619
did test their demos of that and it

1067
00:54:40,619 --> 00:54:46,760
works well and possibly some high speed

1068
00:54:46,760 --> 00:54:52,760
Brice's alright last thing I want to see

1069
00:54:52,760 --> 00:54:58,610
before Steve reloads is one potential

1070
00:54:58,610 --> 00:55:04,370
problem with this is that some might

1071
00:55:04,370 --> 00:55:07,070
object you know sometimes if you end up

1072
00:55:07,070 --> 00:55:08,990
in court you might want to have a

1073
00:55:08,990 --> 00:55:11,300
certified device and the solution of

1074
00:55:11,300 --> 00:55:14,480
that is a new organization that I'm in

1075
00:55:14,480 --> 00:55:17,660
the process of starting for it's called

1076
00:55:17,660 --> 00:55:19,100
the open source cyber forensics

1077
00:55:19,100 --> 00:55:22,100
Association and what is it it's about

1078
00:55:22,100 --> 00:55:26,230
giving people a place to collect

1079
00:55:26,230 --> 00:55:30,050
hardware and software specs for security

1080
00:55:30,050 --> 00:55:32,840
and forensics stuff kind of like the

1081
00:55:32,840 --> 00:55:35,600
Arduino of the InfoSec space is the way

1082
00:55:35,600 --> 00:55:37,700
I like to think of it like what Arduino

1083
00:55:37,700 --> 00:55:41,450
is two microcontrollers os CFA hopes to

1084
00:55:41,450 --> 00:55:47,630
be for InfoSec and security so you can

1085
00:55:47,630 --> 00:55:50,420
ask me more about that later here's some

1086
00:55:50,420 --> 00:55:54,740
books that I referenced and I'd ask for

1087
00:55:54,740 --> 00:55:56,420
questions but Steve will shoot me again

1088
00:55:56,420 --> 00:55:59,810
so I guess I'm done so I'll be around if

1089
00:55:59,810 --> 00:56:07,640
you have questions I would certainly be

1090
00:56:07,640 --> 00:56:10,089
willing to do that

1091
00:56:27,140 --> 00:56:29,200
you

