1
00:00:00,000 --> 00:00:20,400
hi sexy<font color="#CCCCCC"> user-level</font><font color="#E5E5E5"> open a really great</font>

2
00:00:12,570 --> 00:00:25,619
<font color="#E5E5E5">American engineer going over it again</font>

3
00:00:20,400 --> 00:00:42,930
yes almost<font color="#CCCCCC"> time you have restarted sorry</font>

4
00:00:25,619 --> 00:00:47,370
um mr. no good tactic wait<font color="#CCCCCC"> talk to</font><font color="#E5E5E5"> your</font>

5
00:00:42,930 --> 00:00:50,550
<font color="#CCCCCC">patients and painter hear about web</font>

6
00:00:47,370 --> 00:00:55,410
crypto I did after<font color="#CCCCCC"> a show of hands of</font>

7
00:00:50,550 --> 00:00:57,480
whom was cartography<font color="#E5E5E5"> inclined that a</font>

8
00:00:55,410 --> 00:01:02,250
<font color="#E5E5E5">couple so it was kind of warm web</font>

9
00:00:57,480 --> 00:01:04,500
inclined couple folks alright cool<font color="#E5E5E5"> we'll</font>

10
00:01:02,250 --> 00:01:07,860
<font color="#E5E5E5">introduce myself here my name is</font><font color="#CCCCCC"> Kat</font>

11
00:01:04,500 --> 00:01:11,729
<font color="#E5E5E5">Traxler you could call me milk is like</font>

12
00:01:07,860 --> 00:01:16,170
my my day job is web application

13
00:01:11,729 --> 00:01:18,299
penetration testing and I also have some

14
00:01:16,170 --> 00:01:23,040
relevant experience building means back

15
00:01:18,299 --> 00:01:26,640
<font color="#E5E5E5">application this is where I found a love</font>

16
00:01:23,040 --> 00:01:30,210
for JavaScript building Mongo<font color="#E5E5E5"> Express</font>

17
00:01:26,640 --> 00:01:33,689
angular know the full stack JavaScript

18
00:01:30,210 --> 00:01:37,559
it's a kind of love a person has when

19
00:01:33,689 --> 00:01:38,789
they see a storm coming and it just

20
00:01:37,560 --> 00:01:44,579
really wanted to go<font color="#CCCCCC"> outside and see the</font>

21
00:01:38,790 --> 00:01:46,259
lightning that's John strip for me and I

22
00:01:44,579 --> 00:01:50,399
was always really interested in

23
00:01:46,259 --> 00:01:52,470
<font color="#E5E5E5">photography but I'd really be classified</font>

24
00:01:50,399 --> 00:01:56,520
more of a photography tourists<font color="#E5E5E5"> and</font>

25
00:01:52,470 --> 00:02:00,990
anything I<font color="#E5E5E5"> just have</font><font color="#CCCCCC"> to go too far to</font>

26
00:01:56,520 --> 00:02:04,369
<font color="#CCCCCC">see a cryptography tourist site because</font>

27
00:02:00,990 --> 00:02:04,369
photography just kind of came to me

28
00:02:08,090 --> 00:02:15,800
huh photography your browser's been

29
00:02:12,650 --> 00:02:20,180
around since you know remind<font color="#E5E5E5"> you since</font>

30
00:02:15,800 --> 00:02:28,430
GLS as well<font color="#CCCCCC"> but</font><font color="#E5E5E5"> what has changed really</font>

31
00:02:20,180 --> 00:02:50,390
what changed really<font color="#E5E5E5"> is client fired</font>

32
00:02:28,430 --> 00:02:52,190
encryption<font color="#CCCCCC"> justin is being</font><font color="#E5E5E5"> listed to do</font>

33
00:02:50,390 --> 00:02:56,929
some heavy lifting in your browser

34
00:02:52,190 --> 00:02:59,810
implementation of javascript in your

35
00:02:56,930 --> 00:03:04,879
browser things like the<font color="#CCCCCC"> stanford</font>

36
00:02:59,810 --> 00:03:06,920
<font color="#E5E5E5">javascript library the stanford active</font>

37
00:03:04,879 --> 00:03:10,489
crypto library is sought to prove that

38
00:03:06,920 --> 00:03:12,888
there was no<font color="#CCCCCC"> reason you could do</font>

39
00:03:10,489 --> 00:03:17,030
cryptographic operations directly in

40
00:03:12,889 --> 00:03:19,280
<font color="#E5E5E5">javascript but there's some there's some</font>

41
00:03:17,030 --> 00:03:22,970
glaring security gaps<font color="#CCCCCC"> they're just</font>

42
00:03:19,280 --> 00:03:25,310
inherent to javascript javascript for

43
00:03:22,970 --> 00:03:29,329
example has no strong bindings

44
00:03:25,310 --> 00:03:32,480
javascript cannot value any of its

45
00:03:29,329 --> 00:03:36,109
dependencies additionally javascript

46
00:03:32,480 --> 00:03:39,319
doesn't have any protected variables

47
00:03:36,109 --> 00:03:41,630
<font color="#E5E5E5">representing namespaces furthermore</font><font color="#CCCCCC"> i'm</font>

48
00:03:39,319 --> 00:03:45,950
discussing javascript doing this in<font color="#CCCCCC"> the</font>

49
00:03:41,630 --> 00:03:49,489
browser javascript for<font color="#E5E5E5"> the web is bound</font>

50
00:03:45,950 --> 00:03:54,709
by its runtime which is the browser

51
00:03:49,489 --> 00:04:04,340
missing and router is an obvious secure

52
00:03:54,709 --> 00:04:10,040
p storage without secure key storage in

53
00:04:04,340 --> 00:04:12,079
<font color="#E5E5E5">the browser this is just the OL mess</font>

54
00:04:10,040 --> 00:04:15,769
that we have to deal with right the

55
00:04:12,079 --> 00:04:21,380
browser is is our OS now without any

56
00:04:15,769 --> 00:04:23,870
security storage why is

57
00:04:21,380 --> 00:04:28,040
photography here in the brown sugar

58
00:04:23,870 --> 00:04:32,960
right like why are we doing this at all

59
00:04:28,040 --> 00:04:36,770
<font color="#E5E5E5">fearsome there's a pretty good reasons</font>

60
00:04:32,960 --> 00:04:40,549
<font color="#E5E5E5">why people are doing it for</font><font color="#CCCCCC"> example</font>

61
00:04:36,770 --> 00:04:45,740
secure document storage multi-factor

62
00:04:40,550 --> 00:04:47,000
authentication protected document it

63
00:04:45,740 --> 00:04:50,930
always done all of these settings

64
00:04:47,000 --> 00:04:56,990
service<font color="#CCCCCC"> ID for a long time so the</font>

65
00:04:50,930 --> 00:05:03,320
reasons for<font color="#CCCCCC"> this arm special what's</font>

66
00:04:56,990 --> 00:05:08,000
<font color="#E5E5E5">changed is is where it's happening and</font>

67
00:05:03,320 --> 00:05:10,070
why is it<font color="#E5E5E5"> happening client-side well it</font>

68
00:05:08,000 --> 00:05:12,350
can be sold to a user as you have more

69
00:05:10,070 --> 00:05:17,990
protection over your day to navigate for

70
00:05:12,350 --> 00:05:20,690
control for the application what happens

71
00:05:17,990 --> 00:05:25,670
when you move encryption client-side is

72
00:05:20,690 --> 00:05:28,040
you limit your burden you know I think<font color="#E5E5E5"> I</font>

73
00:05:25,670 --> 00:05:30,440
think they're the fallacy that says that

74
00:05:28,040 --> 00:05:32,300
your application really wants<font color="#E5E5E5"> you to</font>

75
00:05:30,440 --> 00:05:33,860
know the contents of your daddy<font color="#E5E5E5"> weight</font>

76
00:05:32,300 --> 00:05:36,650
<font color="#E5E5E5">watchers metadata they don't really want</font>

77
00:05:33,860 --> 00:05:43,880
the content to do data if they're served

78
00:05:36,650 --> 00:05:45,469
with a warrant for for your data they

79
00:05:43,880 --> 00:05:47,930
want to be able to limit the liability

80
00:05:45,470 --> 00:05:52,490
and doin client-side encryption is<font color="#CCCCCC"> the</font>

81
00:05:47,930 --> 00:05:55,850
perfect way to do<font color="#CCCCCC"> that so it's</font><font color="#E5E5E5"> brings us</font>

82
00:05:52,490 --> 00:06:02,570
back to the<font color="#CCCCCC"> question what are we asking</font>

83
00:05:55,850 --> 00:06:05,210
<font color="#E5E5E5">JavaScript to do I highlight for four</font>

84
00:06:02,570 --> 00:06:07,730
<font color="#CCCCCC">holes of crypto occasionally there's a</font>

85
00:06:05,210 --> 00:06:12,109
is a triad of<font color="#CCCCCC"> gold for</font><font color="#E5E5E5"> a confidentiality</font>

86
00:06:07,730 --> 00:06:16,340
integrity authentication confidentiality

87
00:06:12,110 --> 00:06:19,610
typically in bed encryption you can also

88
00:06:16,340 --> 00:06:22,429
have availability encryption<font color="#E5E5E5"> you have</font>

89
00:06:19,610 --> 00:06:23,849
your vehicle description better bringing

90
00:06:22,430 --> 00:06:26,279
some availability

91
00:06:23,849 --> 00:06:29,669
authentication integrity non-repudiation

92
00:06:26,279 --> 00:06:32,669
we need is with<font color="#CCCCCC"> max to movies with</font>

93
00:06:29,669 --> 00:06:38,818
public key cryptography digital

94
00:06:32,669 --> 00:06:42,179
signatures but we<font color="#E5E5E5"> haven't understand</font>

95
00:06:38,819 --> 00:06:46,110
that all cryptography starts with secure

96
00:06:42,179 --> 00:06:48,839
numbers secure random numbers some keys

97
00:06:46,110 --> 00:06:52,830
must be random some to use need to have

98
00:06:48,839 --> 00:06:56,759
more random bits a turkey sub keys need

99
00:06:52,830 --> 00:06:59,998
to be<font color="#E5E5E5"> unique we adopted two assaults</font>

100
00:06:56,759 --> 00:07:08,459
these are all cryptographic operations

101
00:06:59,999 --> 00:07:13,589
that require a secure random number so

102
00:07:08,459 --> 00:07:17,490
how does java script attempt to overcome

103
00:07:13,589 --> 00:07:20,669
its lack of a secure<font color="#CCCCCC"> reading number</font>

104
00:07:17,490 --> 00:07:24,330
generator its lack of secure random as

105
00:07:20,669 --> 00:07:25,769
you might see in<font color="#E5E5E5"> jemison there's two</font>

106
00:07:24,330 --> 00:07:29,818
different approaches<font color="#E5E5E5"> and</font><font color="#CCCCCC"> talked</font><font color="#E5E5E5"> about</font>

107
00:07:25,769 --> 00:07:31,740
here one of the approaches actually says

108
00:07:29,819 --> 00:07:38,430
we can't trust<font color="#E5E5E5"> JavaScript animal to</font>

109
00:07:31,740 --> 00:07:41,909
Jesus so I'll mention the first the

110
00:07:38,430 --> 00:07:44,550
Stanford ejector crypto library the

111
00:07:41,909 --> 00:07:49,558
first real solution to this problem as

112
00:07:44,550 --> 00:07:54,509
JavaScript library devised a solution

113
00:07:49,559 --> 00:07:56,789
for collecting entropy from events that

114
00:07:54,509 --> 00:07:59,429
happen in the browser on click on<font color="#CCCCCC"> mouse</font>

115
00:07:56,789 --> 00:08:02,188
<font color="#CCCCCC">over on board on key from these are</font>

116
00:07:59,429 --> 00:08:03,958
combined with the times<font color="#E5E5E5"> that even has</font>

117
00:08:02,189 --> 00:08:06,240
occurred they run it through a bright

118
00:08:03,959 --> 00:08:11,189
white main function and you have a

119
00:08:06,240 --> 00:08:19,110
fairly decent sort of entropy the other

120
00:08:11,189 --> 00:08:21,209
the other method<font color="#E5E5E5"> for obtaining secure</font>

121
00:08:19,110 --> 00:08:24,089
random in a browser is what we're doing

122
00:08:21,209 --> 00:08:27,209
again and what's the whipped cream to

123
00:08:24,089 --> 00:08:30,300
<font color="#CCCCCC">API says is we can't trust JavaScript at</font>

124
00:08:27,209 --> 00:08:33,830
all to handle this we are going<font color="#E5E5E5"> to reach</font>

125
00:08:30,300 --> 00:08:35,360
outside of the browser for entropy and

126
00:08:33,830 --> 00:08:40,220
those cryptographic operations are

127
00:08:35,360 --> 00:08:43,159
performed natively in your hardware so

128
00:08:40,220 --> 00:08:45,890
that does a commentary not on the source

129
00:08:43,159 --> 00:08:47,300
of the interference I another service

130
00:08:45,890 --> 00:08:51,920
not the<font color="#E5E5E5"> quality of the hitter Peavy</font>

131
00:08:47,300 --> 00:08:55,520
visual gain from<font color="#E5E5E5"> event-driven model but</font>

132
00:08:51,920 --> 00:09:02,689
<font color="#E5E5E5">it really is a commentary on the secure</font>

133
00:08:55,520 --> 00:09:07,640
secure solace so a<font color="#E5E5E5"> dense tying for the</font>

134
00:09:02,690 --> 00:09:10,100
source of entropy is only as good as you

135
00:09:07,640 --> 00:09:12,350
can pick up those times and events and

136
00:09:10,100 --> 00:09:14,300
what I'm trying<font color="#E5E5E5"> to impress upon</font>

137
00:09:12,350 --> 00:09:22,730
everybody is that really can't trust

138
00:09:14,300 --> 00:09:24,589
much that happens with a browser so I'm

139
00:09:22,730 --> 00:09:27,950
gonna<font color="#CCCCCC"> give</font><font color="#E5E5E5"> me a little bit of overview</font>

140
00:09:24,590 --> 00:09:34,640
of the web crypto API so the web crypto

141
00:09:27,950 --> 00:09:39,170
API working group so it developed a

142
00:09:34,640 --> 00:09:43,280
method like instead of obtaining secure

143
00:09:39,170 --> 00:09:45,770
random outside of the browser I guess it

144
00:09:43,280 --> 00:09:47,360
said you can't trust anything that

145
00:09:45,770 --> 00:09:49,670
happens in the browser these events

146
00:09:47,360 --> 00:09:52,700
<font color="#E5E5E5">these mouse clicks we're ready to</font>

147
00:09:49,670 --> 00:09:55,459
provide a source for developers to do

148
00:09:52,700 --> 00:10:00,200
this securely photography in a browser

149
00:09:55,460 --> 00:10:03,530
was happening but also javascript in the

150
00:10:00,200 --> 00:10:05,390
browser needed access to these the

151
00:10:03,530 --> 00:10:10,699
ability to direct these petrographic

152
00:10:05,390 --> 00:10:13,340
operations what's<font color="#E5E5E5"> really missing from</font>

153
00:10:10,700 --> 00:10:19,250
the web crypto API is any sort<font color="#E5E5E5"> of</font>

154
00:10:13,340 --> 00:10:21,950
direction I'm<font color="#E5E5E5"> going to start out by</font>

155
00:10:19,250 --> 00:10:24,890
taking us down a bit of a fictional path

156
00:10:21,950 --> 00:10:27,020
we're<font color="#E5E5E5"> going to do a thought experiment</font>

157
00:10:24,890 --> 00:10:29,900
here in Riverton were developer and

158
00:10:27,020 --> 00:10:34,460
we've been tapped with the idea of

159
00:10:29,900 --> 00:10:38,420
creating a feature and we're going to be

160
00:10:34,460 --> 00:10:40,340
encrypting a document for a user and the

161
00:10:38,420 --> 00:10:43,130
user needs to later decrypt this

162
00:10:40,340 --> 00:10:44,120
document so we're left with a few

163
00:10:43,130 --> 00:10:50,660
methods we

164
00:10:44,120 --> 00:10:53,510
eat encrypt decrypt sign verify we're

165
00:10:50,660 --> 00:10:57,290
asking whether to API by the<font color="#CCCCCC"> crystal</font>

166
00:10:53,510 --> 00:10:59,120
<font color="#CCCCCC">meth fuddles interface and the creators</font>

167
00:10:57,290 --> 00:11:02,990
of the<font color="#E5E5E5"> limiter to allah AAP</font><font color="#CCCCCC"> i meant to</font>

168
00:10:59,120 --> 00:11:06,350
say subtle as a hint to everybody that

169
00:11:02,990 --> 00:11:09,740
<font color="#E5E5E5">maybe some operations have some subtle</font>

170
00:11:06,350 --> 00:11:11,480
impact but as this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> sal for</font><font color="#E5E5E5"> the same</font>

171
00:11:09,740 --> 00:11:15,890
we're going to start out we're going<font color="#CCCCCC"> to</font>

172
00:11:11,480 --> 00:11:18,440
<font color="#CCCCCC">crip the document by person a key let's</font>

173
00:11:15,890 --> 00:11:22,430
let's<font color="#E5E5E5"> take a look at your hankies and</font>

174
00:11:18,440 --> 00:11:27,080
when we when we generate a key through

175
00:11:22,430 --> 00:11:29,900
the web crypto API we have we have a few

176
00:11:27,080 --> 00:11:33,290
choices that were presented with and the

177
00:11:29,900 --> 00:11:36,800
web crypto API attempts to limit our

178
00:11:33,290 --> 00:11:39,079
abilities to share some foot right so

179
00:11:36,800 --> 00:11:44,719
when you<font color="#CCCCCC"> are</font><font color="#E5E5E5"> creating a symmetric key</font>

180
00:11:39,080 --> 00:11:47,720
the only algorithm vailable is a yes

181
00:11:44,720 --> 00:11:49,730
that's all we have in fact if<font color="#E5E5E5"> you don't</font>

182
00:11:47,720 --> 00:11:54,170
want to specify a healing when creating

183
00:11:49,730 --> 00:11:57,320
a key 256 is what if you folks<font color="#E5E5E5"> to in</font>

184
00:11:54,170 --> 00:12:00,469
addition<font color="#E5E5E5"> you need to indicate if this</font>

185
00:11:57,320 --> 00:12:05,510
key is going to be structural or not and

186
00:12:00,470 --> 00:12:10,820
this usages now whether or not what<font color="#CCCCCC"> bold</font>

187
00:12:05,510 --> 00:12:12,890
you tune of<font color="#CCCCCC"> aes this this choice is</font>

188
00:12:10,820 --> 00:12:15,860
definitely<font color="#CCCCCC"> sold piffle and then the</font>

189
00:12:12,890 --> 00:12:19,910
skirts of choices right here and just

190
00:12:15,860 --> 00:12:23,390
saying that it's<font color="#CCCCCC"> not a unique problem to</font>

191
00:12:19,910 --> 00:12:25,790
web crypto however whether or not a key

192
00:12:23,390 --> 00:12:28,040
is extracted a lot of browser is<font color="#E5E5E5"> very</font>

193
00:12:25,790 --> 00:12:33,650
unique<font color="#E5E5E5"> and so this is what makes makes</font>

194
00:12:28,040 --> 00:12:35,599
us knew a little more on what's created

195
00:12:33,650 --> 00:12:38,180
when we are going to creating<font color="#E5E5E5"> the</font>

196
00:12:35,600 --> 00:12:41,990
<font color="#E5E5E5">symmetric key when what a create a</font>

197
00:12:38,180 --> 00:12:44,329
symmetric key this object that we're

198
00:12:41,990 --> 00:12:46,310
going<font color="#E5E5E5"> to be creating it it's going to be</font>

199
00:12:44,330 --> 00:12:48,740
a little bit<font color="#E5E5E5"> object it's not going to be</font>

200
00:12:46,310 --> 00:12:50,959
available to access I

201
00:12:48,740 --> 00:12:53,510
it's not<font color="#E5E5E5"> going to be available to the</font>

202
00:12:50,959 --> 00:12:55,910
access or stored in mobile<font color="#CCCCCC"> stores we can</font>

203
00:12:53,510 --> 00:12:59,089
<font color="#CCCCCC">save as a cookie we're not going to be</font>

204
00:12:55,910 --> 00:13:03,170
allowed to write it can you read only

205
00:12:59,089 --> 00:13:05,060
object value if not actually if you

206
00:13:03,170 --> 00:13:08,360
<font color="#E5E5E5">don't the browser if we want to create</font>

207
00:13:05,060 --> 00:13:10,310
it as an honest for logic it's going<font color="#E5E5E5"> to</font>

208
00:13:08,360 --> 00:13:13,310
be tied specifically to that browser

209
00:13:10,310 --> 00:13:17,390
that is created in the web crypto API

210
00:13:13,310 --> 00:13:21,020
have not through<font color="#CCCCCC"> the rules of the web</font>

211
00:13:17,390 --> 00:13:24,500
when you<font color="#E5E5E5"> create a keen with a Webster to</font>

212
00:13:21,020 --> 00:13:29,180
API the same origin policy applause so

213
00:13:24,500 --> 00:13:33,980
you can't send this key<font color="#CCCCCC"> consummated now</font>

214
00:13:29,180 --> 00:13:36,979
<font color="#CCCCCC">I put a big caveat around you cancel the</font>

215
00:13:33,980 --> 00:13:39,380
key consummated because crafter main web

216
00:13:36,980 --> 00:13:42,140
requests happen every day in that

217
00:13:39,380 --> 00:13:44,959
<font color="#E5E5E5">through thing called</font><font color="#CCCCCC"> course on the</font><font color="#E5E5E5"> cross</font>

218
00:13:42,140 --> 00:13:47,810
origin resource policy so if a

219
00:13:44,959 --> 00:13:51,890
application implement scores incorrectly

220
00:13:47,810 --> 00:13:53,479
and create this web crypto key as an

221
00:13:51,890 --> 00:13:58,310
extractable key it can certainly be

222
00:13:53,480 --> 00:14:04,730
signs constantly so you've created a key

223
00:13:58,310 --> 00:14:06,260
for fictitious feature and maybe we

224
00:14:04,730 --> 00:14:10,160
should created not exceptional

225
00:14:06,260 --> 00:14:14,420
extractable needs that we could send it

226
00:14:10,160 --> 00:14:17,540
we can transmit<font color="#CCCCCC"> as keen on extractable</font>

227
00:14:14,420 --> 00:14:19,910
mean but<font color="#E5E5E5"> I need to lid an industry be so</font>

228
00:14:17,540 --> 00:14:23,240
<font color="#E5E5E5">maybe we keep it not accessible and keep</font>

229
00:14:19,910 --> 00:14:25,130
it at the<font color="#E5E5E5"> safety first choice we would</font>

230
00:14:23,240 --> 00:14:27,200
we do with this key now that we haven't

231
00:14:25,130 --> 00:14:28,820
you probably become want to use a

232
00:14:27,200 --> 00:14:33,410
transcript or document that make sense

233
00:14:28,820 --> 00:14:35,209
so we're going to encrypt the<font color="#E5E5E5"> key we're</font>

234
00:14:33,410 --> 00:14:37,399
going<font color="#E5E5E5"> to prepare document with this</font>

235
00:14:35,209 --> 00:14:39,859
symmetric keys and we're<font color="#E5E5E5"> going to keep a</font>

236
00:14:37,399 --> 00:14:43,160
keen on for loan we're going to<font color="#E5E5E5"> keep it</font>

237
00:14:39,860 --> 00:14:44,870
tucked away in our index<font color="#CCCCCC"> TV and our</font>

238
00:14:43,160 --> 00:14:47,209
users document can be encrypted it

239
00:14:44,870 --> 00:14:49,730
because onto the server to be saved and

240
00:14:47,209 --> 00:14:54,410
we have a perfectly good encryption

241
00:14:49,730 --> 00:14:57,860
scheme but something let<font color="#E5E5E5"> me go steam</font>

242
00:14:54,410 --> 00:15:00,529
right here and maybe some folks are

243
00:14:57,860 --> 00:15:06,170
following along with this

244
00:15:00,529 --> 00:15:10,639
um Becky to the decrypt the document of

245
00:15:06,170 --> 00:15:13,219
hanging out in SCV index DB is not going

246
00:15:10,639 --> 00:15:16,730
to<font color="#E5E5E5"> hang around forever the user can</font>

247
00:15:13,220 --> 00:15:18,559
<font color="#E5E5E5">certainly clear and xev and third or</font>

248
00:15:16,730 --> 00:15:21,379
their documents gone this<font color="#E5E5E5"> is not a new</font>

249
00:15:18,559 --> 00:15:27,529
<font color="#CCCCCC">schoolteacher where workers</font><font color="#E5E5E5"> can combine</font>

250
00:15:21,379 --> 00:15:29,779
clear<font color="#E5E5E5"> out and xev so what's going to</font>

251
00:15:27,529 --> 00:15:32,180
<font color="#CCCCCC">actually happen in practice this</font>

252
00:15:29,779 --> 00:15:34,790
adventure kita we created to encrypt the

253
00:15:32,180 --> 00:15:36,410
documents and we thought it'd be<font color="#E5E5E5"> a</font>

254
00:15:34,790 --> 00:15:38,120
really safe right<font color="#E5E5E5"> hand to keep it non</font>

255
00:15:36,410 --> 00:15:40,850
extractable so it can't be sent<font color="#E5E5E5"> across</font>

256
00:15:38,120 --> 00:15:43,339
<font color="#CCCCCC">today</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> I don't actually have to have</font>

257
00:15:40,850 --> 00:15:45,740
to make it accessible because we're

258
00:15:43,339 --> 00:15:48,769
going to use another function of the web

259
00:15:45,740 --> 00:15:50,509
crypto API and we're going to<font color="#E5E5E5"> wrap it so</font>

260
00:15:48,769 --> 00:15:52,939
we're going to create<font color="#E5E5E5"> a key from user</font>

261
00:15:50,509 --> 00:15:54,980
credentials and we'll wrap<font color="#E5E5E5"> this key and</font>

262
00:15:52,939 --> 00:15:57,139
going to send along<font color="#E5E5E5"> with the document</font>

263
00:15:54,980 --> 00:16:02,240
and then<font color="#CCCCCC"> it'll</font><font color="#E5E5E5"> be returned and can</font>

264
00:15:57,139 --> 00:16:06,439
unwrap the key and then either to give

265
00:16:02,240 --> 00:16:08,779
it up<font color="#E5E5E5"> in it unwrapping unwrapping a key</font>

266
00:16:06,439 --> 00:16:14,449
it was very confident together practice

267
00:16:08,779 --> 00:16:16,279
and there's there's a fun function on

268
00:16:14,449 --> 00:16:18,680
the web crypto API that actually allows

269
00:16:16,279 --> 00:16:21,350
you to change a team's usage of a moment

270
00:16:18,680 --> 00:16:23,719
so the<font color="#E5E5E5"> workers way see I really tried</font>

271
00:16:21,350 --> 00:16:26,809
hard to prevent us<font color="#E5E5E5"> from shooting</font>

272
00:16:23,720 --> 00:16:29,809
yourself in the foot however at<font color="#E5E5E5"> that</font>

273
00:16:26,809 --> 00:16:32,629
moment we could specify the key to be

274
00:16:29,809 --> 00:16:34,969
assigning<font color="#E5E5E5"> key which if you know anything</font>

275
00:16:32,629 --> 00:16:36,620
about retired is a horrible idea<font color="#E5E5E5"> to do</font>

276
00:16:34,970 --> 00:16:45,110
with the keys that is also<font color="#CCCCCC"> new Jim Crow</font>

277
00:16:36,620 --> 00:16:46,850
and we're<font color="#E5E5E5"> not</font><font color="#CCCCCC"> all so we're not also</font>

278
00:16:45,110 --> 00:16:52,730
<font color="#CCCCCC">going to be using the web crypto API</font>

279
00:16:46,850 --> 00:16:55,490
dramatically I'm sorry this this pathway

280
00:16:52,730 --> 00:16:57,439
alleging down actually<font color="#E5E5E5"> definitely happen</font>

281
00:16:55,490 --> 00:17:00,889
to practice what happens in practice<font color="#E5E5E5"> is</font>

282
00:16:57,439 --> 00:17:04,339
developers use libraries that are

283
00:17:00,889 --> 00:17:06,349
abstraction layers and here's just a

284
00:17:04,339 --> 00:17:10,389
handful of the libraries that have

285
00:17:06,349 --> 00:17:15,250
sprung up to support<font color="#E5E5E5"> web crypto</font>

286
00:17:10,390 --> 00:17:20,709
forged am clever ge'ez polyfill anthem

287
00:17:15,250 --> 00:17:21,970
<font color="#E5E5E5">Chris open</font><font color="#CCCCCC"> PJ pjs and some of these tell</font>

288
00:17:20,709 --> 00:17:24,130
themselves<font color="#CCCCCC"> is pure JavaScript</font>

289
00:17:21,970 --> 00:17:27,190
<font color="#E5E5E5">implications and if you ever see those</font>

290
00:17:24,130 --> 00:17:30,670
<font color="#E5E5E5">words pure JavaScript implementation you</font>

291
00:17:27,190 --> 00:17:32,500
know that it is a venture to model it's

292
00:17:30,670 --> 00:17:37,480
not calling with crypto API indirectly

293
00:17:32,500 --> 00:17:40,330
what most of those libraries do is

294
00:17:37,480 --> 00:17:42,910
they're actually more of a<font color="#CCCCCC"> hybrid so I'm</font>

295
00:17:40,330 --> 00:17:44,530
<font color="#CCCCCC">going to highlight three different</font>

296
00:17:42,910 --> 00:17:45,910
libraries<font color="#E5E5E5"> I'll talk</font><font color="#CCCCCC"> about to be</font>

297
00:17:44,530 --> 00:17:47,170
different libraries and I have is just a

298
00:17:45,910 --> 00:17:50,290
chunk of code up here<font color="#E5E5E5"> because if I</font>

299
00:17:47,170 --> 00:17:53,290
thought it was<font color="#E5E5E5"> the most egregious coming</font>

300
00:17:50,290 --> 00:17:55,690
the trip clip Virginia<font color="#E5E5E5"> clipper Jas is a</font>

301
00:17:53,290 --> 00:17:58,389
browser extension<font color="#CCCCCC"> password manager is</font>

302
00:17:55,690 --> 00:18:00,850
really healthy they never know what your

303
00:17:58,390 --> 00:18:05,050
data your data is never sensitive

304
00:18:00,850 --> 00:18:08,500
servers unencrypted while they are pure

305
00:18:05,050 --> 00:18:13,149
JavaScript annotation a driver source of

306
00:18:08,500 --> 00:18:15,220
entropy from user events then there's a

307
00:18:13,150 --> 00:18:20,620
more of a hybrid method which I have up

308
00:18:15,220 --> 00:18:24,700
here so petite PG PG as proton nailed

309
00:18:20,620 --> 00:18:27,040
actually the maintainer event<font color="#E5E5E5"> open</font>

310
00:18:24,700 --> 00:18:28,810
source project right now<font color="#CCCCCC"> adulterous the</font>

311
00:18:27,040 --> 00:18:31,990
town to access the web crypto<font color="#CCCCCC"> if you</font>

312
00:18:28,810 --> 00:18:34,330
have project the web crypto API and then

313
00:18:31,990 --> 00:18:35,650
it thinks maybe maybe I'm hanging up ms

314
00:18:34,330 --> 00:18:37,090
node server maybe I should get my

315
00:18:35,650 --> 00:18:40,180
service that i'm<font color="#E5E5E5"> free from this node</font>

316
00:18:37,090 --> 00:18:42,220
object now finally<font color="#E5E5E5"> okay well maybe</font>

317
00:18:40,180 --> 00:18:43,990
whoever called assumption has a random

318
00:18:42,220 --> 00:18:48,280
buckle and maybe i will use<font color="#CCCCCC"> that for my</font>

319
00:18:43,990 --> 00:18:50,050
entropy so if anybody here has some

320
00:18:48,280 --> 00:18:52,750
wonderful ideas about server side

321
00:18:50,050 --> 00:18:56,139
includes or any kind of<font color="#E5E5E5"> javascript</font>

322
00:18:52,750 --> 00:18:58,390
injection to this we should<font color="#E5E5E5"> talk</font>

323
00:18:56,140 --> 00:19:03,010
afterwards because this is kind<font color="#CCCCCC"> of</font>

324
00:18:58,390 --> 00:19:08,440
really excited and the last<font color="#CCCCCC"> kidero</font>

325
00:19:03,010 --> 00:19:11,170
mentioned is TK ideas<font color="#CCCCCC"> PK</font><font color="#E5E5E5"> jazz</font><font color="#CCCCCC"> does have</font>

326
00:19:08,440 --> 00:19:14,279
a strict web crypto API implementation

327
00:19:11,170 --> 00:19:16,349
however<font color="#CCCCCC"> under get how they do they do</font>

328
00:19:14,279 --> 00:19:20,009
their library somewhat limiting and

329
00:19:16,349 --> 00:19:21,749
you're<font color="#E5E5E5"> probably going to actually have</font>

330
00:19:20,009 --> 00:19:23,249
<font color="#E5E5E5">skews ish in they print you directly</font>

331
00:19:21,749 --> 00:19:28,049
physician you're probably have to use

332
00:19:23,249 --> 00:19:34,499
make your features and usable so what do

333
00:19:28,049 --> 00:19:40,049
<font color="#E5E5E5">I have to say at all this by</font><font color="#CCCCCC"> so take</font>

334
00:19:34,499 --> 00:19:44,549
<font color="#CCCCCC">ways that I hope you have</font><font color="#E5E5E5"> our that her</font>

335
00:19:40,049 --> 00:19:47,070
turkey complicated stuff right and the

336
00:19:44,549 --> 00:19:49,889
way software in<font color="#E5E5E5"> pinellas is as people</font>

337
00:19:47,070 --> 00:19:51,599
<font color="#CCCCCC">built it and then they tested and they</font>

338
00:19:49,889 --> 00:19:55,049
fix that intelligent<font color="#CCCCCC"> bracelet making</font>

339
00:19:51,599 --> 00:19:56,999
<font color="#CCCCCC">builds anymore and somebody's you know</font>

340
00:19:55,049 --> 00:20:00,450
insecure random number generator never

341
00:19:56,999 --> 00:20:04,589
broken any buddies out is that the playa

342
00:20:00,450 --> 00:20:06,330
sale and if you find<font color="#CCCCCC"> yourself reviewing</font>

343
00:20:04,589 --> 00:20:08,129
some web crypto and it seems like

344
00:20:06,330 --> 00:20:10,349
variable missing everything right if

345
00:20:08,129 --> 00:20:12,978
don't don't worry and ready to<font color="#CCCCCC"> just</font>

346
00:20:10,349 --> 00:20:12,979
<font color="#E5E5E5">break the climate</font>

