1
00:00:00,180 --> 00:00:03,399
[Music]

2
00:00:07,700 --> 00:00:10,700
thank you

3
00:00:20,990 --> 00:00:29,238
[Music]

4
00:00:37,160 --> 00:00:40,218
all right

5
00:00:47,280 --> 00:00:49,460
foreign

6
00:01:15,320 --> 00:01:18,659
because I can look at all my friends in

7
00:01:18,659 --> 00:01:22,200
the audience but for those of you who I

8
00:01:22,200 --> 00:01:23,640
don't know

9
00:01:23,640 --> 00:01:26,880
uh my name is Kat Traxler I'm the

10
00:01:26,880 --> 00:01:29,220
principal security researcher at a

11
00:01:29,220 --> 00:01:32,280
company called Vector AI focusing on

12
00:01:32,280 --> 00:01:37,079
threats as they exist within AWS and gcp

13
00:01:37,079 --> 00:01:41,839
not Azure don't talk to me about azure

14
00:01:42,200 --> 00:01:44,460
so I work in the r d of the product

15
00:01:44,460 --> 00:01:46,680
working to improve our capabilities of

16
00:01:46,680 --> 00:01:49,140
detecting attacker behaviors on the

17
00:01:49,140 --> 00:01:52,680
cloud control plane very cool stuff I

18
00:01:52,680 --> 00:01:55,020
really enjoyed my job is is working in

19
00:01:55,020 --> 00:01:56,479
the threat

20
00:01:56,479 --> 00:01:59,220
the threat intersection between identity

21
00:01:59,220 --> 00:02:00,780
and the cloud that's where I get to hang

22
00:02:00,780 --> 00:02:03,979
out all day long and I love it

23
00:02:03,979 --> 00:02:08,459
I was reflecting on my infosec career

24
00:02:08,459 --> 00:02:10,380
last night and it came to the conclusion

25
00:02:10,380 --> 00:02:12,360
that my career might sound a little

26
00:02:12,360 --> 00:02:15,239
chaotic to some thinking about some of

27
00:02:15,239 --> 00:02:17,760
the jobs that I've had in-house pen

28
00:02:17,760 --> 00:02:19,620
testing

29
00:02:19,620 --> 00:02:21,920
done a fair amount of capsic work

30
00:02:21,920 --> 00:02:25,140
testing those in-house ppis and web apps

31
00:02:25,140 --> 00:02:26,819
writing tickets and working with Dev

32
00:02:26,819 --> 00:02:28,800
teams I've done a lot of security

33
00:02:28,800 --> 00:02:30,599
architecture in the cloud for a Fortune

34
00:02:30,599 --> 00:02:33,720
50 company and I worked on a security

35
00:02:33,720 --> 00:02:36,420
architecture and engineering team

36
00:02:36,420 --> 00:02:39,780
building the guardrails to support a

37
00:02:39,780 --> 00:02:42,660
company's acceleration to the cloud and

38
00:02:42,660 --> 00:02:45,360
then finally last year I made this

39
00:02:45,360 --> 00:02:48,959
switch over from the proactive

40
00:02:48,959 --> 00:02:51,140
preventative control side of the house

41
00:02:51,140 --> 00:02:54,120
to the detective side

42
00:02:54,120 --> 00:02:56,519
of the house where

43
00:02:56,519 --> 00:03:00,319
partly because I I become a little

44
00:03:00,319 --> 00:03:03,480
disillusioned with preventative controls

45
00:03:03,480 --> 00:03:05,400
in the cloud

46
00:03:05,400 --> 00:03:07,739
um I saw that those preventative

47
00:03:07,739 --> 00:03:10,319
controls only took you so far they were

48
00:03:10,319 --> 00:03:12,900
bound to fail so if you look at my talks

49
00:03:12,900 --> 00:03:15,180
online you can see a lot of talks on

50
00:03:15,180 --> 00:03:17,340
this limiting of the I am blast radius

51
00:03:17,340 --> 00:03:20,400
I've done a ton of talks on permissions

52
00:03:20,400 --> 00:03:23,459
and privilege escalation but now I'm

53
00:03:23,459 --> 00:03:26,099
really focusing on

54
00:03:26,099 --> 00:03:27,980
two

55
00:03:27,980 --> 00:03:30,540
what happens when despite your best

56
00:03:30,540 --> 00:03:33,420
efforts everything has failed and you

57
00:03:33,420 --> 00:03:34,860
really really must detect what's

58
00:03:34,860 --> 00:03:35,720
happening

59
00:03:35,720 --> 00:03:39,239
so in my research I did focus on a set

60
00:03:39,239 --> 00:03:41,099
of permissions that would allow an

61
00:03:41,099 --> 00:03:45,000
attacker to acquire the ability to

62
00:03:45,000 --> 00:03:47,340
perform certain behaviors I just went

63
00:03:47,340 --> 00:03:50,940
right for what the business impact might

64
00:03:50,940 --> 00:03:53,220
be and then what recovery steps might

65
00:03:53,220 --> 00:03:55,400
happen

66
00:03:55,680 --> 00:03:56,280
um

67
00:03:56,280 --> 00:03:58,080
I should say

68
00:03:58,080 --> 00:04:00,540
um don't be concerned if you didn't

69
00:04:00,540 --> 00:04:02,159
catch anything the first time in this

70
00:04:02,159 --> 00:04:03,120
talk

71
00:04:03,120 --> 00:04:05,879
um the slides for this presentation will

72
00:04:05,879 --> 00:04:07,620
certainly be made available but I also

73
00:04:07,620 --> 00:04:10,220
published a white paper a few days ago

74
00:04:10,220 --> 00:04:12,659
where all of this content is in this

75
00:04:12,659 --> 00:04:15,239
white paper all this content and more

76
00:04:15,239 --> 00:04:16,978
um that you could ever want to throw

77
00:04:16,978 --> 00:04:19,019
swipe papers so you can find all of that

78
00:04:19,019 --> 00:04:21,478
on my Twitter nightmare.js

79
00:04:21,478 --> 00:04:23,400
um please feel free to take a look at

80
00:04:23,400 --> 00:04:24,780
that and I'll publish a link to that

81
00:04:24,780 --> 00:04:26,759
right after

82
00:04:26,759 --> 00:04:29,720
the sock

83
00:04:32,759 --> 00:04:34,500
so here's a perfectly reasonable

84
00:04:34,500 --> 00:04:35,759
question

85
00:04:35,759 --> 00:04:38,759
um that I think is healthy for all of us

86
00:04:38,759 --> 00:04:40,740
to ask

87
00:04:40,740 --> 00:04:42,900
um why would ransomware the

88
00:04:42,900 --> 00:04:44,400
classroom

89
00:04:44,400 --> 00:04:45,780
will it

90
00:04:45,780 --> 00:04:48,619
have had appointments

91
00:04:51,180 --> 00:04:52,979
to ask the questions

92
00:04:52,979 --> 00:04:55,440
and I want to tell you how I've been

93
00:04:55,440 --> 00:04:58,219
thinking about it

94
00:04:58,500 --> 00:05:01,620
um I I look at ransomware clearly as a

95
00:05:01,620 --> 00:05:04,440
financially motivated crime with the

96
00:05:04,440 --> 00:05:07,199
goal to inhibit Business Systems in

97
00:05:07,199 --> 00:05:09,479
order to extract The Ransom payment so

98
00:05:09,479 --> 00:05:11,280
historically there's been plenty of

99
00:05:11,280 --> 00:05:13,860
money to be made in ranciding data on

100
00:05:13,860 --> 00:05:16,740
traditional on-prem systems

101
00:05:16,740 --> 00:05:19,979
so for me the question is more about

102
00:05:19,979 --> 00:05:22,740
will there be evolutionary pressure on

103
00:05:22,740 --> 00:05:26,400
attackers to force them to evolve their

104
00:05:26,400 --> 00:05:28,680
captives

105
00:05:28,680 --> 00:05:31,620
um I'm not sure if there's a reason that

106
00:05:31,620 --> 00:05:33,660
malware authors would need to redesign

107
00:05:33,660 --> 00:05:36,960
their their malware if if the old ways

108
00:05:36,960 --> 00:05:39,138
of doing

109
00:05:40,500 --> 00:05:43,259
um but as I observe

110
00:05:43,259 --> 00:05:45,419
um the volume and speed with which

111
00:05:45,419 --> 00:05:47,039
Enterprises are undergoing Cloud

112
00:05:47,039 --> 00:05:48,300
migrations

113
00:05:48,300 --> 00:05:50,039
I mean they're they're full on ditching

114
00:05:50,039 --> 00:05:51,660
the data center

115
00:05:51,660 --> 00:05:53,699
I don't see how ransomware could not

116
00:05:53,699 --> 00:05:56,940
become a larger problem for businesses

117
00:05:56,940 --> 00:05:59,820
with Cloud hosted data

118
00:05:59,820 --> 00:06:02,180
um so my thesis on the subject is that

119
00:06:02,180 --> 00:06:05,280
wherever the the business critical data

120
00:06:05,280 --> 00:06:06,600
goes

121
00:06:06,600 --> 00:06:08,880
ransomware without

122
00:06:08,880 --> 00:06:10,800
so when there's the moment that there's

123
00:06:10,800 --> 00:06:13,080
the critical mass of business data in

124
00:06:13,080 --> 00:06:15,060
the cloud this is when it makes

125
00:06:15,060 --> 00:06:17,699
Financial sense for the attackers to

126
00:06:17,699 --> 00:06:20,280
evolve their tactics to Target the

127
00:06:20,280 --> 00:06:23,039
on-prem cloud I'm sorry to Target the

128
00:06:23,039 --> 00:06:26,699
cloud versus on-prem systems

129
00:06:26,699 --> 00:06:28,500
we can't think that attackers are going

130
00:06:28,500 --> 00:06:31,560
to just leave money on the table

131
00:06:31,560 --> 00:06:34,319
just because that you know your

132
00:06:34,319 --> 00:06:36,000
organizations in the middle of a massive

133
00:06:36,000 --> 00:06:39,419
Cloud migration and the attacker's old

134
00:06:39,419 --> 00:06:42,000
you know word doc exploit isn't going to

135
00:06:42,000 --> 00:06:43,860
work in the cloud anymore

136
00:06:43,860 --> 00:06:44,940
um they're not going to just walk away

137
00:06:44,940 --> 00:06:46,680
from the money

138
00:06:46,680 --> 00:06:48,720
so this is kind of where my research

139
00:06:48,720 --> 00:06:50,759
came into play

140
00:06:50,759 --> 00:06:51,660
um

141
00:06:51,660 --> 00:06:54,240
when I ask the question how should we

142
00:06:54,240 --> 00:06:56,639
think about the characteristics of an

143
00:06:56,639 --> 00:06:58,500
attack in the cloud

144
00:06:58,500 --> 00:07:01,440
and then how can we compare and contrast

145
00:07:01,440 --> 00:07:05,120
it to an on-prem event

146
00:07:05,880 --> 00:07:08,580
attackers on the cloud plane

147
00:07:08,580 --> 00:07:10,919
they don't have any Windows processes to

148
00:07:10,919 --> 00:07:14,819
manipulate they don't have any

149
00:07:14,819 --> 00:07:17,639
typically have any hosts to exploit

150
00:07:17,639 --> 00:07:20,340
they don't have any unpatched exchange

151
00:07:20,340 --> 00:07:21,479
servers

152
00:07:21,479 --> 00:07:23,940
so what does this mean for an attacker

153
00:07:23,940 --> 00:07:26,400
to gain control of a cloud native

154
00:07:26,400 --> 00:07:29,060
application

155
00:07:29,340 --> 00:07:31,919
in the cloud the available tools that

156
00:07:31,919 --> 00:07:34,380
developers and customers need to

157
00:07:34,380 --> 00:07:36,840
accomplish the everyday tasks

158
00:07:36,840 --> 00:07:39,720
these are built-in Services they're

159
00:07:39,720 --> 00:07:41,699
offered as features by the cloud service

160
00:07:41,699 --> 00:07:44,300
providers

161
00:07:45,000 --> 00:07:47,599
pools

162
00:07:48,660 --> 00:07:51,479
to overcome security controls avoid

163
00:07:51,479 --> 00:07:55,919
detection and accomplish specific goals

164
00:07:55,919 --> 00:07:58,680
teachers with with ill intent is often

165
00:07:58,680 --> 00:08:02,280
referred to as teachers

166
00:08:02,280 --> 00:08:05,000
where future abuse is rather the

167
00:08:05,000 --> 00:08:09,180
misuse of cloud native tools and the

168
00:08:09,180 --> 00:08:11,940
apis created by the hard-working

169
00:08:11,940 --> 00:08:15,860
developers at AWS at gcp

170
00:08:15,860 --> 00:08:19,979
this this strikes me as not entirely

171
00:08:19,979 --> 00:08:23,879
dissimilar to an on-prem attack where

172
00:08:23,879 --> 00:08:26,160
malware is using

173
00:08:26,160 --> 00:08:30,060
the utilities that spines right on its

174
00:08:30,060 --> 00:08:33,419
infected systems to advance and spread

175
00:08:33,419 --> 00:08:37,320
so living off the land techniques the

176
00:08:37,320 --> 00:08:40,940
the LOL binaries in the cloud

177
00:08:40,940 --> 00:08:44,640
they're not your sticky keys they're

178
00:08:44,640 --> 00:08:46,140
they're the cloud apis themselves

179
00:08:46,140 --> 00:08:49,260
feature Rich public open

180
00:08:49,260 --> 00:08:51,779
in contrast to the windows executables

181
00:08:51,779 --> 00:08:55,740
which can be uninstalled

182
00:08:55,740 --> 00:08:58,040
as superfluous

183
00:08:58,040 --> 00:09:02,279
AWS Cloud apis they're always on

184
00:09:02,279 --> 00:09:05,279
they're open they're Cloud native and it

185
00:09:05,279 --> 00:09:08,760
makes them very attractive for abusers

186
00:09:08,760 --> 00:09:12,140
to misuse

187
00:09:13,260 --> 00:09:16,860
not with your old crusty data warehouses

188
00:09:16,860 --> 00:09:19,140
though those tried and true data

189
00:09:19,140 --> 00:09:21,779
warehouses that many organizations are

190
00:09:21,779 --> 00:09:23,700
rapidly running away from

191
00:09:23,700 --> 00:09:25,860
you know these these on-prem servers are

192
00:09:25,860 --> 00:09:28,860
typically full full stack environments

193
00:09:28,860 --> 00:09:31,320
physical hosts

194
00:09:31,320 --> 00:09:33,360
um however these these full stack

195
00:09:33,360 --> 00:09:35,760
environments while they have a broad

196
00:09:35,760 --> 00:09:38,160
attack surface

197
00:09:38,160 --> 00:09:41,820
um they're generally secured by you know

198
00:09:41,820 --> 00:09:44,339
20 years of understanding on how to

199
00:09:44,339 --> 00:09:46,820
secure these environments

200
00:09:46,820 --> 00:09:49,860
the decrease in the hands of a corporate

201
00:09:49,860 --> 00:09:50,880
Network

202
00:09:50,880 --> 00:09:53,640
they're heavily monitored by asian-based

203
00:09:53,640 --> 00:09:55,200
tools

204
00:09:55,200 --> 00:09:57,899
there's a corpus of understanding on how

205
00:09:57,899 --> 00:10:00,000
to handle these Legacy systems

206
00:10:00,000 --> 00:10:02,940
is this while there are

207
00:10:02,940 --> 00:10:06,899
a large attack surface there's also a

208
00:10:06,899 --> 00:10:08,940
large understanding on how we handle

209
00:10:08,940 --> 00:10:11,600
threats face

210
00:10:12,930 --> 00:10:15,000
[Music]

211
00:10:15,000 --> 00:10:17,640
but this on-prem approach just a curing

212
00:10:17,640 --> 00:10:22,019
traditional data centers your a host

213
00:10:22,019 --> 00:10:25,160
based agents your you know

214
00:10:25,160 --> 00:10:27,600
network based controls it doesn't

215
00:10:27,600 --> 00:10:29,779
necessarily translate to the cloud

216
00:10:29,779 --> 00:10:32,040
and I'm saying it they probably

217
00:10:32,040 --> 00:10:33,839
shouldn't actually translate to the

218
00:10:33,839 --> 00:10:36,440
cloud we should try to shoot hornet in

219
00:10:36,440 --> 00:10:39,660
data was migrated to the cloud resides

220
00:10:39,660 --> 00:10:42,180
in systems where the end users

221
00:10:42,180 --> 00:10:44,640
including malicious actors

222
00:10:44,640 --> 00:10:46,500
they're going to have limited curated

223
00:10:46,500 --> 00:10:48,959
access to the Android

224
00:10:48,959 --> 00:10:51,420
generally everybody just lives at layer

225
00:10:51,420 --> 00:10:53,880
seven and this is a curated experience

226
00:10:53,880 --> 00:10:56,399
from the CSP

227
00:10:56,399 --> 00:10:59,339
this means that cloud data stores have

228
00:10:59,339 --> 00:11:01,019
these dramatically different attack

229
00:11:01,019 --> 00:11:02,339
services

230
00:11:02,339 --> 00:11:04,680
and each of the major Cloud providers

231
00:11:04,680 --> 00:11:08,720
has a ubiquitous cloud data store

232
00:11:08,720 --> 00:11:13,620
S3 Azure blob gcp buckets but today on

233
00:11:13,620 --> 00:11:17,000
my research I really focus on the AWS

234
00:11:17,000 --> 00:11:19,320
S3 buckets

235
00:11:19,320 --> 00:11:20,700
but

236
00:11:20,700 --> 00:11:23,519
the attack the attacks I'm going to be

237
00:11:23,519 --> 00:11:25,260
describing are not

238
00:11:25,260 --> 00:11:27,680
unique to AWS

239
00:11:27,680 --> 00:11:31,399
rather they're going to be

240
00:11:31,440 --> 00:11:33,839
um pretty applicable to any Cloud where

241
00:11:33,839 --> 00:11:36,600
you have a system

242
00:11:36,600 --> 00:11:38,279
a data store

243
00:11:38,279 --> 00:11:40,560
that could be encrypted and those

244
00:11:40,560 --> 00:11:43,380
encrypted Keys encryption keys can be

245
00:11:43,380 --> 00:11:45,660
restricted by some sort of conditional

246
00:11:45,660 --> 00:11:47,100
access

247
00:11:47,100 --> 00:11:48,720
that's the recipe that we're going to be

248
00:11:48,720 --> 00:11:51,019
following

249
00:11:52,620 --> 00:11:54,120
all right this is the point of my talk

250
00:11:54,120 --> 00:11:55,860
where people's eyes might Blaze over I

251
00:11:55,860 --> 00:11:56,820
appreciate we have to do a little

252
00:11:56,820 --> 00:11:58,980
cryptography today a little bit just a

253
00:11:58,980 --> 00:11:59,880
little bit

254
00:11:59,880 --> 00:12:01,920
and

255
00:12:01,920 --> 00:12:03,959
yeah in an effort to like compare and

256
00:12:03,959 --> 00:12:08,040
contrast on-prem malware with

257
00:12:08,040 --> 00:12:10,560
um cloud of rainforter and I thought

258
00:12:10,560 --> 00:12:12,959
like what are the steps what are the

259
00:12:12,959 --> 00:12:14,480
Hoops that

260
00:12:14,480 --> 00:12:17,040
on-prem ransomware has to go through

261
00:12:17,040 --> 00:12:18,839
necessarily

262
00:12:18,839 --> 00:12:22,740
to perform their actions right

263
00:12:22,740 --> 00:12:25,140
so ranting my targeting on-prem systems

264
00:12:25,140 --> 00:12:27,480
they're going to have to use this hybrid

265
00:12:27,480 --> 00:12:30,240
approach this hybrid encryption speaking

266
00:12:30,240 --> 00:12:33,420
leveraging Both Worlds leveraging both

267
00:12:33,420 --> 00:12:35,640
symmetric and asymmetric encryptions to

268
00:12:35,640 --> 00:12:38,040
work around the limitations the

269
00:12:38,040 --> 00:12:40,079
limitations of both asymmetric and

270
00:12:40,079 --> 00:12:42,240
symmetric encryption so

271
00:12:42,240 --> 00:12:45,300
where asymmetric encryption is really

272
00:12:45,300 --> 00:12:47,639
slow

273
00:12:47,639 --> 00:12:49,500
symmetric encryption is really fast yes

274
00:12:49,500 --> 00:12:50,820
we want that

275
00:12:50,820 --> 00:12:52,500
mother

276
00:12:52,500 --> 00:12:54,899
symmetric encryption uses both the same

277
00:12:54,899 --> 00:12:58,019
key though for encryption and decryption

278
00:12:58,019 --> 00:13:00,620
so if you have just a purely symmetric

279
00:13:00,620 --> 00:13:03,779
encryption strategy for encrypting your

280
00:13:03,779 --> 00:13:06,300
targeted data right it might make it

281
00:13:06,300 --> 00:13:08,399
easier by forensics teams to recover

282
00:13:08,399 --> 00:13:11,480
that key if they're doing some some

283
00:13:11,480 --> 00:13:13,320
forensics

284
00:13:13,320 --> 00:13:16,079
so the strategy that ransomware authors

285
00:13:16,079 --> 00:13:17,459
use to kind of work around this

286
00:13:17,459 --> 00:13:19,620
limitation and these are the same

287
00:13:19,620 --> 00:13:21,420
techniques that

288
00:13:21,420 --> 00:13:24,120
your in-house cryptographic operators

289
00:13:24,120 --> 00:13:26,220
your your crypto guys are going to use

290
00:13:26,220 --> 00:13:27,959
day in Day Out

291
00:13:27,959 --> 00:13:30,440
so whether for a benevolent or

292
00:13:30,440 --> 00:13:33,720
malevolent intent key hierarchies are

293
00:13:33,720 --> 00:13:35,880
used

294
00:13:35,880 --> 00:13:38,339
um to derive one set of keys from

295
00:13:38,339 --> 00:13:42,420
another to encrypt the symmetric keys

296
00:13:42,420 --> 00:13:47,300
it's not necessary for this is necessary

297
00:13:47,600 --> 00:13:52,440
not necessary for the cloud

298
00:13:52,440 --> 00:13:57,360
infinite hacker leverages your csps Key

299
00:13:57,360 --> 00:13:59,519
Management Service

300
00:13:59,519 --> 00:14:01,139
these Cloud providers have done the

301
00:14:01,139 --> 00:14:03,420
heavy lifting for you they're

302
00:14:03,420 --> 00:14:05,760
maintaining secure routes of trust

303
00:14:05,760 --> 00:14:08,339
and there's really no reason for

304
00:14:08,339 --> 00:14:13,320
attackers not to piggyback on the

305
00:14:13,320 --> 00:14:15,420
um the cryptographic niceties that are

306
00:14:15,420 --> 00:14:19,639
provided by a CSP

307
00:14:28,440 --> 00:14:31,320
all right so we're talking a lot about

308
00:14:31,320 --> 00:14:35,279
KMS AWS KMS and it's a service that

309
00:14:35,279 --> 00:14:41,279
allows AWS customers to generate keys

310
00:14:41,279 --> 00:14:43,500
control access to these Keys using

311
00:14:43,500 --> 00:14:45,899
perform cryptographic operations signing

312
00:14:45,899 --> 00:14:47,339
verify

313
00:14:47,339 --> 00:14:50,579
managing envelope encryption and

314
00:14:50,579 --> 00:14:52,620
interestingly enough is also the process

315
00:14:52,620 --> 00:14:56,820
for managing the keys that are used for

316
00:14:56,820 --> 00:14:59,040
server-side encryption

317
00:14:59,040 --> 00:15:00,480
ns3

318
00:15:00,480 --> 00:15:03,060
so what I'm going to Showcase to you is

319
00:15:03,060 --> 00:15:06,060
that just a really quick demo of two

320
00:15:06,060 --> 00:15:08,160
buckets

321
00:15:08,160 --> 00:15:11,160
you'll see an attacker who has gained a

322
00:15:11,160 --> 00:15:14,100
significant permissions in an AWS

323
00:15:14,100 --> 00:15:16,279
account

324
00:15:16,880 --> 00:15:20,040
they're going to copy objects from one

325
00:15:20,040 --> 00:15:21,779
bucket which I'll call the victim bucket

326
00:15:21,779 --> 00:15:22,800
this is the bucket that they're

327
00:15:22,800 --> 00:15:25,680
targeting for encryption they're going

328
00:15:25,680 --> 00:15:27,480
to copy those objects to a staging

329
00:15:27,480 --> 00:15:29,399
bucket

330
00:15:29,399 --> 00:15:31,800
the object in the second bucket are

331
00:15:31,800 --> 00:15:36,920
encrypted with a KMS key

332
00:15:37,019 --> 00:15:39,600
that KMS key is under the attacker's

333
00:15:39,600 --> 00:15:40,740
control

334
00:15:40,740 --> 00:15:44,040
not available for use in the victims

335
00:15:44,040 --> 00:15:46,339
account

336
00:15:47,399 --> 00:15:50,519
so when he copies the objects over to

337
00:15:50,519 --> 00:15:52,860
the second staging bucket

338
00:15:52,860 --> 00:15:55,500
staring in KMS are going to server-side

339
00:15:55,500 --> 00:15:58,800
encrypt those objects with the KMS key

340
00:15:58,800 --> 00:16:01,860
that's controlled by the attacker

341
00:16:01,860 --> 00:16:03,720
and I just wanted to show you briefly

342
00:16:03,720 --> 00:16:05,699
what this looks like what the user

343
00:16:05,699 --> 00:16:07,440
experience looks like

344
00:16:07,440 --> 00:16:10,079
specifically when

345
00:16:10,079 --> 00:16:12,720
when a customer no longer has access to

346
00:16:12,720 --> 00:16:16,380
the underlying backing key when objects

347
00:16:16,380 --> 00:16:20,000
are server-side encrypted with KMS

348
00:16:45,120 --> 00:16:49,459
I was just looking at the bucket that um

349
00:16:52,380 --> 00:16:54,540
yeah I'm sure case in here is that an

350
00:16:54,540 --> 00:16:58,199
attacker has copied over objects to the

351
00:16:58,199 --> 00:17:00,720
staging bucket again with a key that

352
00:17:00,720 --> 00:17:03,120
only they control are our victim design

353
00:17:03,120 --> 00:17:03,650
control

354
00:17:03,650 --> 00:17:06,740
[Music]

355
00:17:09,720 --> 00:17:12,000
I'm going to switch users over here to

356
00:17:12,000 --> 00:17:14,900
our our victim account

357
00:17:14,900 --> 00:17:17,699
somebody who doesn't have access to the

358
00:17:17,699 --> 00:17:19,500
underlying backing key and I just want

359
00:17:19,500 --> 00:17:21,900
to highlight to you the effect on

360
00:17:21,900 --> 00:17:23,579
availability

361
00:17:23,579 --> 00:17:25,439
okay they're going over to the staging

362
00:17:25,439 --> 00:17:27,799
bucket

363
00:17:30,360 --> 00:17:34,699
I tried to download an object yeah

364
00:17:36,900 --> 00:17:38,460
there we go

365
00:17:38,460 --> 00:17:40,140
access denied

366
00:17:40,140 --> 00:17:41,880
it's hard to see you there let me see if

367
00:17:41,880 --> 00:17:43,799
I can zoom in nope can't zoom in anyways

368
00:17:43,799 --> 00:17:47,120
access and I

369
00:17:48,419 --> 00:17:52,380
so our our victim account

370
00:17:52,380 --> 00:17:54,720
very well may have to access the objects

371
00:17:54,720 --> 00:17:56,580
very well they had access to the buckets

372
00:17:56,580 --> 00:17:59,160
but that backing key they no longer they

373
00:17:59,160 --> 00:18:01,500
don't have access to

374
00:18:01,500 --> 00:18:04,200
um and AWS dutifully is not going to

375
00:18:04,200 --> 00:18:07,520
give them access to those objects

376
00:18:08,700 --> 00:18:12,840
okay so so what what happened here

377
00:18:12,840 --> 00:18:15,780
um why

378
00:18:15,780 --> 00:18:21,480
why was why were the keys unavailable

379
00:18:21,480 --> 00:18:22,140
um

380
00:18:22,140 --> 00:18:24,299
one of the mechanisms for controlling

381
00:18:24,299 --> 00:18:29,120
access to these Keys is by defining a

382
00:18:29,120 --> 00:18:31,320
resource-based policy

383
00:18:31,320 --> 00:18:33,980
on the key

384
00:18:33,980 --> 00:18:37,200
and as such defining a policy on the key

385
00:18:37,200 --> 00:18:39,299
defining who is allowed and who is

386
00:18:39,299 --> 00:18:40,740
denied access

387
00:18:40,740 --> 00:18:43,080
that leaves our attacker the opportunity

388
00:18:43,080 --> 00:18:46,080
to affect availability on the key and

389
00:18:46,080 --> 00:18:49,919
effect availability on the objects

390
00:18:49,919 --> 00:18:52,260
my research here and as I'll go more

391
00:18:52,260 --> 00:18:54,900
into it it's really focusing on a key

392
00:18:54,900 --> 00:18:57,419
policy lockout technique that was very

393
00:18:57,419 --> 00:18:59,600
first described in 2020

394
00:18:59,600 --> 00:19:02,520
by a gentleman called Spencer dietzen

395
00:19:02,520 --> 00:19:04,980
from Rhino security so I highly

396
00:19:04,980 --> 00:19:07,380
recommend you take a look at his talk

397
00:19:07,380 --> 00:19:09,900
from well coming up on two years ago

398
00:19:09,900 --> 00:19:13,820
where it goes into this specific

399
00:19:13,820 --> 00:19:18,179
key policy a lockout technique on S3 and

400
00:19:18,179 --> 00:19:20,160
also some other mechanisms for affecting

401
00:19:20,160 --> 00:19:23,820
availability on dynamodb

402
00:19:23,820 --> 00:19:27,600
uh so to recap the KMS key in the Target

403
00:19:27,600 --> 00:19:29,580
account would

404
00:19:29,580 --> 00:19:32,280
somehow need to become under the control

405
00:19:32,280 --> 00:19:35,160
of an attacker either by the creation of

406
00:19:35,160 --> 00:19:38,520
a new key as I described or maybe an

407
00:19:38,520 --> 00:19:39,960
attacker has gained the ability to

408
00:19:39,960 --> 00:19:42,660
update the resource policy and can

409
00:19:42,660 --> 00:19:45,539
affect availability on an existing key

410
00:19:45,539 --> 00:19:47,700
potentially

411
00:19:47,700 --> 00:19:49,799
both of these mechanisms whether the key

412
00:19:49,799 --> 00:19:52,320
is new whether the key is existing they

413
00:19:52,320 --> 00:19:55,919
have the same lockout effect you are the

414
00:19:55,919 --> 00:20:00,080
victim is locked out of their data

415
00:20:03,120 --> 00:20:07,020
so we can expect these access denied

416
00:20:07,020 --> 00:20:10,740
responses from AWS where requests

417
00:20:10,740 --> 00:20:14,220
originate from callers that lack

418
00:20:14,220 --> 00:20:17,100
explicit permissions to access both S3

419
00:20:17,100 --> 00:20:21,260
objects and the KMS keys

420
00:20:22,320 --> 00:20:25,020
one explicit denied permission on the

421
00:20:25,020 --> 00:20:27,299
object or the key

422
00:20:27,299 --> 00:20:30,360
S3 is not going to serve the data

423
00:20:30,360 --> 00:20:32,760
uh the behavior that we saw in the

424
00:20:32,760 --> 00:20:34,260
little in the demo there was something

425
00:20:34,260 --> 00:20:38,520
that I call deny except when allow only

426
00:20:38,520 --> 00:20:39,720
when

427
00:20:39,720 --> 00:20:41,820
uh bring this out to two different

428
00:20:41,820 --> 00:20:44,340
stages on a key policy deny all actions

429
00:20:44,340 --> 00:20:46,500
on the KMS key

430
00:20:46,500 --> 00:20:48,419
except

431
00:20:48,419 --> 00:20:51,179
when the source IP addresses is mine the

432
00:20:51,179 --> 00:20:53,940
attacker controlled IP

433
00:20:53,940 --> 00:20:57,500
well and also by the way allow

434
00:20:57,900 --> 00:21:00,480
only when

435
00:21:00,480 --> 00:21:02,340
The Source IP is for my attacker

436
00:21:02,340 --> 00:21:05,059
controlled IP

437
00:21:05,880 --> 00:21:08,700
um so when updating the resource based

438
00:21:08,700 --> 00:21:12,059
key policy attached to the KMS key

439
00:21:12,059 --> 00:21:13,740
this is a pattern that you could

440
00:21:13,740 --> 00:21:16,320
potentially see in

441
00:21:16,320 --> 00:21:18,660
an attacker attempting to affect the

442
00:21:18,660 --> 00:21:21,780
availability of any resource

443
00:21:21,780 --> 00:21:24,000
and it would affect even the root user

444
00:21:24,000 --> 00:21:26,700
even the user would be able unable to

445
00:21:26,700 --> 00:21:28,020
access

446
00:21:28,020 --> 00:21:33,440
the KMS key and thus the data

447
00:21:39,240 --> 00:21:41,039
so this resource-based policy this is

448
00:21:41,039 --> 00:21:42,780
actually the one that I use for my demo

449
00:21:42,780 --> 00:21:44,460
and

450
00:21:44,460 --> 00:21:46,320
I'm sure he's in the use of the IP

451
00:21:46,320 --> 00:21:48,299
address condition to restrict access to

452
00:21:48,299 --> 00:21:50,520
the canvas resource but you can imagine

453
00:21:50,520 --> 00:21:53,159
there's some other conditions that might

454
00:21:53,159 --> 00:21:55,679
be leveraged by our ransomware operator

455
00:21:55,679 --> 00:21:58,140
looking to employ this pattern

456
00:21:58,140 --> 00:22:00,299
um some other conditions they might use

457
00:22:00,299 --> 00:22:02,520
Maybe

458
00:22:02,520 --> 00:22:07,380
the AWS principal arm saying you can't

459
00:22:07,380 --> 00:22:10,620
access this KMS key unless you're coming

460
00:22:10,620 --> 00:22:12,900
from this specific AWS principle hard

461
00:22:12,900 --> 00:22:14,640
and oh by the way that's an attacker

462
00:22:14,640 --> 00:22:18,240
controlled principal account condition

463
00:22:18,240 --> 00:22:22,260
Source VPC restriction or Source ABC

464
00:22:22,260 --> 00:22:24,380
employee restriction

465
00:22:24,380 --> 00:22:28,020
the lesson here is that any condition in

466
00:22:28,020 --> 00:22:32,120
a policy where the value

467
00:22:32,120 --> 00:22:36,500
is required by the caller

468
00:22:36,659 --> 00:22:41,039
it's Unique and it's attacker controlled

469
00:22:41,039 --> 00:22:43,380
that's when it can be leveraged to lock

470
00:22:43,380 --> 00:22:47,360
out a customer from resource

471
00:22:52,380 --> 00:22:55,620
so just like we can't presume to know

472
00:22:55,620 --> 00:22:57,419
what

473
00:22:57,419 --> 00:23:00,720
uh ransomware would look like in the

474
00:23:00,720 --> 00:23:02,580
cloud what it would look like to impact

475
00:23:02,580 --> 00:23:06,539
resources we can't presume to know what

476
00:23:06,539 --> 00:23:08,760
the relinquishing of data would look

477
00:23:08,760 --> 00:23:10,080
like

478
00:23:10,080 --> 00:23:12,000
um what passing over that decryption key

479
00:23:12,000 --> 00:23:14,280
would look like in the cloud so in the

480
00:23:14,280 --> 00:23:17,039
cloud turning over the keys

481
00:23:17,039 --> 00:23:19,679
to encrypted data would look just as

482
00:23:19,679 --> 00:23:21,380
different as

483
00:23:21,380 --> 00:23:25,440
techniques used for impact

484
00:23:25,440 --> 00:23:28,080
so in the scenario that I laid out that

485
00:23:28,080 --> 00:23:31,140
I demoed only callers from

486
00:23:31,140 --> 00:23:33,480
the attacker-controlled account can

487
00:23:33,480 --> 00:23:35,820
access the KMS key

488
00:23:35,820 --> 00:23:39,559
right that locks up availability

489
00:23:39,900 --> 00:23:41,460
but

490
00:23:41,460 --> 00:23:43,799
to update that key policy again to

491
00:23:43,799 --> 00:23:45,360
relinquish control

492
00:23:45,360 --> 00:23:47,280
it can only it cannot be performed

493
00:23:47,280 --> 00:23:49,500
cross-account so you're locked you're

494
00:23:49,500 --> 00:23:51,740
stuck

495
00:23:52,200 --> 00:23:53,940
now well authors are going to need a

496
00:23:53,940 --> 00:23:56,700
real-time a viable mechanism for

497
00:23:56,700 --> 00:23:59,000
returning control to the victim

498
00:23:59,000 --> 00:24:02,039
and it can't involve updating that key

499
00:24:02,039 --> 00:24:05,280
policy again it can't involve

500
00:24:05,280 --> 00:24:07,799
bid hacker updating this policy across

501
00:24:07,799 --> 00:24:09,179
account because that's just not allowed

502
00:24:09,179 --> 00:24:10,799
in AWS

503
00:24:10,799 --> 00:24:13,020
today I think of another way fortunately

504
00:24:13,020 --> 00:24:16,620
I did for them okay uh

505
00:24:16,620 --> 00:24:19,620
kmstagrams

506
00:24:19,740 --> 00:24:21,539
um

507
00:24:21,539 --> 00:24:24,960
so how might how about an attacker

508
00:24:24,960 --> 00:24:28,880
um you know complete the life cycle

509
00:24:28,880 --> 00:24:33,240
and and return data to the victim

510
00:24:33,240 --> 00:24:36,000
um chemistry grants his possibilities so

511
00:24:36,000 --> 00:24:38,400
it's an alternative Access Control

512
00:24:38,400 --> 00:24:41,280
mechanism for KMS keys

513
00:24:41,280 --> 00:24:43,380
use the delegate cryptographic

514
00:24:43,380 --> 00:24:45,240
operations just because I've denied

515
00:24:45,240 --> 00:24:47,940
access to the key and key policy

516
00:24:47,940 --> 00:24:50,340
does it mean that somebody can generate

517
00:24:50,340 --> 00:24:52,080
a

518
00:24:52,080 --> 00:24:55,500
a key Grant token to say you know

519
00:24:55,500 --> 00:24:58,679
oh actually by the way you can use the

520
00:24:58,679 --> 00:25:00,780
key to encrypt or decrypt or sign or

521
00:25:00,780 --> 00:25:02,760
verify or whatever

522
00:25:02,760 --> 00:25:04,140
um

523
00:25:04,140 --> 00:25:05,640
so

524
00:25:05,640 --> 00:25:06,360
um

525
00:25:06,360 --> 00:25:08,520
I can't miss key Grand would allow the

526
00:25:08,520 --> 00:25:09,980
victim to access

527
00:25:09,980 --> 00:25:12,900
their KMS key and begin the decryption

528
00:25:12,900 --> 00:25:14,940
process without having to update that

529
00:25:14,940 --> 00:25:16,740
key policy cross account which is

530
00:25:16,740 --> 00:25:19,580
disallowed

531
00:25:26,220 --> 00:25:28,860
I'm not psychic but I feel like

532
00:25:28,860 --> 00:25:30,480
a few people in here have been wondering

533
00:25:30,480 --> 00:25:33,000
what where where is AWS and all of this

534
00:25:33,000 --> 00:25:36,000
like where could they have helped me

535
00:25:36,000 --> 00:25:37,080
um

536
00:25:37,080 --> 00:25:39,059
I think that's very valid I think we

537
00:25:39,059 --> 00:25:40,500
should start talking about all of this

538
00:25:40,500 --> 00:25:42,900
out loud if for nothing else but to

539
00:25:42,900 --> 00:25:44,940
force their hand and saying what they

540
00:25:44,940 --> 00:25:48,380
could or could not help us with

541
00:25:48,419 --> 00:25:50,340
um

542
00:25:50,340 --> 00:25:52,559
where's the shared responsibility in

543
00:25:52,559 --> 00:25:53,940
fact where's the shared responsibility

544
00:25:53,940 --> 00:25:56,159
model how does it factor in we don't

545
00:25:56,159 --> 00:25:58,500
really know

546
00:25:58,500 --> 00:26:01,919
um there's three potential

547
00:26:01,919 --> 00:26:05,279
um scenarios that stand out for me and

548
00:26:05,279 --> 00:26:07,799
that I think are worth talking out loud

549
00:26:07,799 --> 00:26:09,779
about

550
00:26:09,779 --> 00:26:13,140
the first scenario is

551
00:26:13,140 --> 00:26:16,020
for an AWS intervention hypothesizes

552
00:26:16,020 --> 00:26:18,600
that what if AWS could just go into

553
00:26:18,600 --> 00:26:22,620
their data center go into their HSN and

554
00:26:22,620 --> 00:26:24,900
break out that key material you need and

555
00:26:24,900 --> 00:26:27,240
give to you

556
00:26:27,240 --> 00:26:29,520
this feels like an absolutely ridiculous

557
00:26:29,520 --> 00:26:31,260
thought

558
00:26:31,260 --> 00:26:32,520
um you know

559
00:26:32,520 --> 00:26:35,520
AWS KMS is a very serious service

560
00:26:35,520 --> 00:26:38,460
created by very serious people and the

561
00:26:38,460 --> 00:26:39,480
thought that that would be even

562
00:26:39,480 --> 00:26:41,400
technically feasible

563
00:26:41,400 --> 00:26:44,460
um you know I feel a little guilty even

564
00:26:44,460 --> 00:26:46,260
hypothesized me about but I think it's

565
00:26:46,260 --> 00:26:49,020
worth saying in case I was in anybody's

566
00:26:49,020 --> 00:26:50,760
thoughts

567
00:26:50,760 --> 00:26:53,460
um AWS has gone to Great Links to ensure

568
00:26:53,460 --> 00:26:55,260
that no person

569
00:26:55,260 --> 00:26:57,480
no system could retrieve that key

570
00:26:57,480 --> 00:26:59,220
material

571
00:26:59,220 --> 00:27:01,200
um and they make Earnest public

572
00:27:01,200 --> 00:27:04,260
statements to that effect so I think the

573
00:27:04,260 --> 00:27:06,470
first possibility is out of the question

574
00:27:06,470 --> 00:27:08,480
[Music]

575
00:27:08,480 --> 00:27:11,640
the next scenario is for an AWS

576
00:27:11,640 --> 00:27:13,440
intervention are like much more of an

577
00:27:13,440 --> 00:27:16,260
open question to me

578
00:27:16,260 --> 00:27:18,960
um the First Avenue for assistance would

579
00:27:18,960 --> 00:27:20,760
involve AWS

580
00:27:20,760 --> 00:27:24,900
having the ability to change the victims

581
00:27:24,900 --> 00:27:27,020
and

582
00:27:27,539 --> 00:27:28,080
um

583
00:27:28,080 --> 00:27:31,500
there's no evidence that ews Henry verse

584
00:27:31,500 --> 00:27:36,299
a maliciously applied key policy

585
00:27:36,299 --> 00:27:36,960
um

586
00:27:36,960 --> 00:27:39,659
so restoring access to a KMS key there's

587
00:27:39,659 --> 00:27:42,299
no indication that they can do that

588
00:27:42,299 --> 00:27:44,880
there's no indication that they have

589
00:27:44,880 --> 00:27:47,279
this this hand of God that they can

590
00:27:47,279 --> 00:27:50,100
reach in and update

591
00:27:50,100 --> 00:27:52,740
um and key policy and there's honestly

592
00:27:52,740 --> 00:27:54,419
not much incentive

593
00:27:54,419 --> 00:27:57,659
to publicly admit that they they could

594
00:27:57,659 --> 00:28:00,260
if they did

595
00:28:00,900 --> 00:28:04,440
the final the final bit of assisted

596
00:28:04,440 --> 00:28:07,679
remediation that we've kind of ponder

597
00:28:07,679 --> 00:28:08,700
um

598
00:28:08,700 --> 00:28:11,640
is the idea that you know would ews have

599
00:28:11,640 --> 00:28:14,520
the ability to commandeer

600
00:28:14,520 --> 00:28:17,340
an account which the malicious actors

601
00:28:17,340 --> 00:28:19,799
are operating out of

602
00:28:19,799 --> 00:28:20,520
um

603
00:28:20,520 --> 00:28:23,100
like the trustless AP team at AWS they

604
00:28:23,100 --> 00:28:26,220
will quarantine accounts they will close

605
00:28:26,220 --> 00:28:28,380
row accounts if they're violating in

606
00:28:28,380 --> 00:28:30,679
terms of service

607
00:28:30,679 --> 00:28:33,900
but quarantining

608
00:28:33,900 --> 00:28:36,000
close accounts is much different than

609
00:28:36,000 --> 00:28:39,539
seizing control of an account and you

610
00:28:39,539 --> 00:28:41,400
would fully need to seize control over

611
00:28:41,400 --> 00:28:43,440
that account and the resources and you

612
00:28:43,440 --> 00:28:46,440
need to take over that account

613
00:28:46,440 --> 00:28:48,059
um and there's there's actually some

614
00:28:48,059 --> 00:28:49,799
evidence to suggest that they can do

615
00:28:49,799 --> 00:28:51,720
that that they the that ability

616
00:28:51,720 --> 00:28:54,299
technically exists

617
00:28:54,299 --> 00:28:56,220
um so if anybody's familiar with the

618
00:28:56,220 --> 00:28:58,559
mechanism to change the root email

619
00:28:58,559 --> 00:29:00,539
address for your account change their

620
00:29:00,539 --> 00:29:02,400
email address if you've forgotten the

621
00:29:02,400 --> 00:29:04,860
password and MFA if anybody's ever been

622
00:29:04,860 --> 00:29:06,679
lucky enough to be in that position yeah

623
00:29:06,679 --> 00:29:09,539
AWS I own this account you have your own

624
00:29:09,539 --> 00:29:10,799
email no do you have the root password

625
00:29:10,799 --> 00:29:14,039
no do you have the root MFA sorry

626
00:29:14,039 --> 00:29:15,720
um there is actually a process for

627
00:29:15,720 --> 00:29:18,899
recovering your account if if all hope

628
00:29:18,899 --> 00:29:21,720
seems to be lost

629
00:29:21,720 --> 00:29:24,000
um you have to

630
00:29:24,000 --> 00:29:26,279
um submit an affidavit notarize

631
00:29:26,279 --> 00:29:29,039
affidavit to PWS

632
00:29:29,039 --> 00:29:30,720
um in my experience it takes a couple

633
00:29:30,720 --> 00:29:32,760
months they process it and they verify

634
00:29:32,760 --> 00:29:34,799
that you own it and then they will

635
00:29:34,799 --> 00:29:36,899
change the root email address to

636
00:29:36,899 --> 00:29:40,440
something that you have control over

637
00:29:40,440 --> 00:29:43,220
so this internal process

638
00:29:43,220 --> 00:29:46,500
suggests that AWS does have the power to

639
00:29:46,500 --> 00:29:49,620
seize control over our accounts not just

640
00:29:49,620 --> 00:29:52,220
simply close them but restore

641
00:29:52,220 --> 00:29:54,960
to access the resources house with them

642
00:29:54,960 --> 00:29:57,120
with some sort of you know admin

643
00:29:57,120 --> 00:29:59,399
capabilities

644
00:29:59,399 --> 00:30:02,580
but similar to the hand of God Theory

645
00:30:02,580 --> 00:30:04,679
it just tells you that they have a lot

646
00:30:04,679 --> 00:30:08,419
of incentive to publicly admit this

647
00:30:08,419 --> 00:30:11,760
from and and from a defender's point of

648
00:30:11,760 --> 00:30:13,020
view

649
00:30:13,020 --> 00:30:15,779
um from a GRC point of view from a legal

650
00:30:15,779 --> 00:30:17,760
point of view from everybody in the

651
00:30:17,760 --> 00:30:20,039
world point of view

652
00:30:20,039 --> 00:30:22,760
um without a clear documented process

653
00:30:22,760 --> 00:30:27,480
for assisted recovery from AWS

654
00:30:27,480 --> 00:30:30,659
without guaranteed slas on a process

655
00:30:30,659 --> 00:30:34,080
like any theoretical remediation

656
00:30:34,080 --> 00:30:38,279
assistance from AWS is just not useful

657
00:30:38,279 --> 00:30:41,520
so planning for response planning for

658
00:30:41,520 --> 00:30:43,620
recovery from a ransomware event it

659
00:30:43,620 --> 00:30:45,720
should not be centered

660
00:30:45,720 --> 00:30:48,480
on the idea that ews

661
00:30:48,480 --> 00:30:51,380
can help you

662
00:30:53,760 --> 00:30:55,620
thumbs up we got some thumbs up we're

663
00:30:55,620 --> 00:30:59,220
here we're there yes PWS cannot help you

664
00:30:59,220 --> 00:31:01,399
know

665
00:31:06,059 --> 00:31:07,740
Okay so

666
00:31:07,740 --> 00:31:09,840
rooted in the understanding that it's

667
00:31:09,840 --> 00:31:13,200
unlikely AWS could help during a

668
00:31:13,200 --> 00:31:15,539
ransomware event we turn our sights to

669
00:31:15,539 --> 00:31:18,299
the bread and butter of all Security

670
00:31:18,299 --> 00:31:23,100
Programs preventative controls

671
00:31:23,760 --> 00:31:27,000
and detection is Landscaping families

672
00:31:27,000 --> 00:31:29,039
um

673
00:31:29,039 --> 00:31:31,080
I'll start by underscoring that these

674
00:31:31,080 --> 00:31:33,419
controls I'm going to go through

675
00:31:33,419 --> 00:31:36,919
they are unlikely to be

676
00:31:36,919 --> 00:31:40,260
compatible with highly transactional

677
00:31:40,260 --> 00:31:41,820
data

678
00:31:41,820 --> 00:31:44,340
but they could be feasible if you're

679
00:31:44,340 --> 00:31:47,580
looking to secure your backups

680
00:31:47,580 --> 00:31:50,760
you know secure your you know off sites

681
00:31:50,760 --> 00:31:52,320
if your off-site backups are in the

682
00:31:52,320 --> 00:31:54,659
cloud these are some controls that you

683
00:31:54,659 --> 00:31:57,059
might want to look at nope but knowing

684
00:31:57,059 --> 00:31:59,399
where your data is

685
00:31:59,399 --> 00:32:01,500
and knowing which data you need to

686
00:32:01,500 --> 00:32:02,720
secure

687
00:32:02,720 --> 00:32:06,000
is the first step for enforcing any of

688
00:32:06,000 --> 00:32:08,279
these Bucket Level controls so it goes

689
00:32:08,279 --> 00:32:09,680
back down to asset manage

690
00:32:09,680 --> 00:32:12,299
[Music]

691
00:32:12,299 --> 00:32:16,460
um okay SV bucket configurations

692
00:32:18,539 --> 00:32:20,820
because they said not all S3 buckets can

693
00:32:20,820 --> 00:32:23,760
be configured to be a fortress

694
00:32:23,760 --> 00:32:25,440
but it's worth noting the controls

695
00:32:25,440 --> 00:32:28,200
available in S3 which can add to the

696
00:32:28,200 --> 00:32:32,279
overall Ransom resiliency strategy

697
00:32:32,279 --> 00:32:36,080
kind of a trifecta here of controls

698
00:32:36,080 --> 00:32:39,799
S3 object lock

699
00:32:41,299 --> 00:32:44,460
does exactly what you would imagine you

700
00:32:44,460 --> 00:32:47,220
can't delete an object a big versioning

701
00:32:47,220 --> 00:32:48,779
instead of

702
00:32:48,779 --> 00:32:49,559
um

703
00:32:49,559 --> 00:32:51,779
you know every time a new version of an

704
00:32:51,779 --> 00:32:54,059
object is updated you don't replace the

705
00:32:54,059 --> 00:32:55,559
old object you just create a million

706
00:32:55,559 --> 00:32:59,520
versions of it so it can prevent

707
00:32:59,520 --> 00:33:03,419
some delicious encryption and rewriting

708
00:33:03,419 --> 00:33:06,840
your existing data and then the final

709
00:33:06,840 --> 00:33:09,960
one I'll touch on is mfa's Elite so FFA

710
00:33:09,960 --> 00:33:12,240
delete is a setting that says okay if

711
00:33:12,240 --> 00:33:14,460
you really have to delete this data

712
00:33:14,460 --> 00:33:16,860
you have to be using the root user and

713
00:33:16,860 --> 00:33:19,620
that root user has to be using an MFS

714
00:33:19,620 --> 00:33:21,600
so pretty high bar across in order to

715
00:33:21,600 --> 00:33:24,379
delete some data

716
00:33:25,019 --> 00:33:27,240
um kind of an architect at heart so I

717
00:33:27,240 --> 00:33:28,860
kind of went overboard and talking about

718
00:33:28,860 --> 00:33:30,720
the defense of architectural patterns

719
00:33:30,720 --> 00:33:32,100
here

720
00:33:32,100 --> 00:33:34,980
um mitigations via sap service control

721
00:33:34,980 --> 00:33:36,659
policy

722
00:33:36,659 --> 00:33:38,700
these are different require a certain

723
00:33:38,700 --> 00:33:40,799
level of maturity

724
00:33:40,799 --> 00:33:44,159
in your Cloud security program

725
00:33:44,159 --> 00:33:48,240
so it doesn't mean that We should strive

726
00:33:48,240 --> 00:33:50,399
for these goals but I fully don't expect

727
00:33:50,399 --> 00:33:52,559
that everybody's going to be there on

728
00:33:52,559 --> 00:33:54,000
day one

729
00:33:54,000 --> 00:33:56,460
so a couple things we can

730
00:33:56,460 --> 00:33:59,820
potentially create a bespoke SCP policy

731
00:33:59,820 --> 00:34:01,500
that says

732
00:34:01,500 --> 00:34:05,039
these are the only keys that are allowed

733
00:34:05,039 --> 00:34:08,760
to perform cryptographic operations on

734
00:34:08,760 --> 00:34:10,739
your keys

735
00:34:10,739 --> 00:34:13,260
naming these specific keys and being

736
00:34:13,260 --> 00:34:15,300
able to know which those which specific

737
00:34:15,300 --> 00:34:17,879
Keys those are

738
00:34:17,879 --> 00:34:19,619
that's a good start in preventing

739
00:34:19,619 --> 00:34:22,820
cognitive ransomware

740
00:34:23,000 --> 00:34:28,280
oftentimes oftentimes this type of

741
00:34:28,280 --> 00:34:31,199
SCP is coupled with an architectural

742
00:34:31,199 --> 00:34:33,899
pattern that like will Corral all of

743
00:34:33,899 --> 00:34:39,080
your KMS Keys into a single account

744
00:34:39,379 --> 00:34:42,599
this sort of creates this Fort Knox

745
00:34:42,599 --> 00:34:45,060
approach to Key Management it creates

746
00:34:45,060 --> 00:34:46,500
this

747
00:34:46,500 --> 00:34:49,859
all of your eggs in one basket approach

748
00:34:49,859 --> 00:34:53,219
but it also says all of your controls in

749
00:34:53,219 --> 00:34:55,260
one basket all of your eyes in one

750
00:34:55,260 --> 00:34:56,520
basket

751
00:34:56,520 --> 00:34:59,280
so a centralized key management account

752
00:34:59,280 --> 00:35:02,040
allows your security organization to a

753
00:35:02,040 --> 00:35:04,740
force the principle of these privilege

754
00:35:04,740 --> 00:35:07,859
and just the most extreme sense in a

755
00:35:07,859 --> 00:35:10,560
very concentrated place it says that

756
00:35:10,560 --> 00:35:12,720
here are here's the location where all

757
00:35:12,720 --> 00:35:14,240
my keys live

758
00:35:14,240 --> 00:35:17,520
yes it's a massive Target but yes we're

759
00:35:17,520 --> 00:35:19,079
going to monitor the heck out of it and

760
00:35:19,079 --> 00:35:20,579
do these privilege like we've never done

761
00:35:20,579 --> 00:35:22,500
before right here

762
00:35:22,500 --> 00:35:25,920
and it also allows for things like you

763
00:35:25,920 --> 00:35:28,320
know bespoke sap to say

764
00:35:28,320 --> 00:35:30,540
only keys out of this account can

765
00:35:30,540 --> 00:35:32,940
perform good for graphic operations can

766
00:35:32,940 --> 00:35:34,140
be pattern

767
00:35:34,140 --> 00:35:36,060
some people hate it

768
00:35:36,060 --> 00:35:38,599
it's fine

769
00:35:44,099 --> 00:35:45,119
all right

770
00:35:45,119 --> 00:35:48,680
have we miss remiss if I tend to leave

771
00:35:48,680 --> 00:35:51,660
with some some signals you could latch

772
00:35:51,660 --> 00:35:54,060
onto in your

773
00:35:54,060 --> 00:35:54,720
um

774
00:35:54,720 --> 00:35:57,300
in your environment to try to track down

775
00:35:57,300 --> 00:35:59,700
someone's Behavior

776
00:35:59,700 --> 00:36:03,480
the scenario I laid out had a threat

777
00:36:03,480 --> 00:36:08,640
actor using a key policy lockout method

778
00:36:08,640 --> 00:36:12,240
on a new KMS key

779
00:36:12,240 --> 00:36:14,700
but also recognize is the possibility of

780
00:36:14,700 --> 00:36:17,520
using that same motorcycle round eye on

781
00:36:17,520 --> 00:36:19,880
an existing key

782
00:36:19,880 --> 00:36:22,160
or even

783
00:36:22,160 --> 00:36:25,200
maliciously encrypting S3 data with an

784
00:36:25,200 --> 00:36:27,060
external key I didn't touch on that but

785
00:36:27,060 --> 00:36:29,880
that's absolutely a possibility

786
00:36:29,880 --> 00:36:31,140
um

787
00:36:31,140 --> 00:36:34,260
so let's take a look at each three of

788
00:36:34,260 --> 00:36:36,020
these scenarios

789
00:36:36,020 --> 00:36:39,660
and talk about you know what what you

790
00:36:39,660 --> 00:36:42,119
could find in cloud trail

791
00:36:42,119 --> 00:36:44,880
that might tip you off to some unusual

792
00:36:44,880 --> 00:36:46,800
behavior and might warrant investigation

793
00:36:46,800 --> 00:36:49,220
okay

794
00:36:49,440 --> 00:36:52,020
a key policy lockout with a new key

795
00:36:52,020 --> 00:36:54,660
so if a threat actor employs this

796
00:36:54,660 --> 00:36:56,700
technique there's a couple a couple

797
00:36:56,700 --> 00:36:58,079
critical

798
00:36:58,079 --> 00:37:00,480
pivot Points

799
00:37:00,480 --> 00:37:02,520
that you could be alerted on and respond

800
00:37:02,520 --> 00:37:05,640
to during this exploitation phase

801
00:37:05,640 --> 00:37:09,560
um when when you're looking at a new key

802
00:37:09,780 --> 00:37:12,359
so first off if your key if your

803
00:37:12,359 --> 00:37:15,240
organization has a clear view into the

804
00:37:15,240 --> 00:37:17,160
approved keys and all of a sudden a key

805
00:37:17,160 --> 00:37:19,140
that's not approved or not known or out

806
00:37:19,140 --> 00:37:21,660
of a weird account

807
00:37:21,660 --> 00:37:24,119
alarm

808
00:37:24,119 --> 00:37:27,240
Additionally the updating of the key

809
00:37:27,240 --> 00:37:29,760
key policy to include one of these you

810
00:37:29,760 --> 00:37:30,480
know

811
00:37:30,480 --> 00:37:33,599
deny except when allow only when

812
00:37:33,599 --> 00:37:34,859
conditional

813
00:37:34,859 --> 00:37:37,859
patterns that's another potential point

814
00:37:37,859 --> 00:37:40,680
for alerting

815
00:37:40,680 --> 00:37:41,579
um

816
00:37:41,579 --> 00:37:43,800
key policy lockup mechanism with an

817
00:37:43,800 --> 00:37:45,420
existing key a little bit more tricky

818
00:37:45,420 --> 00:37:47,520
because potentially if there's a

819
00:37:47,520 --> 00:37:49,140
scenario where

820
00:37:49,140 --> 00:37:50,760
you know you've done everything right

821
00:37:50,760 --> 00:37:53,220
with your defensive architectural

822
00:37:53,220 --> 00:37:55,859
patterns you have this list of approved

823
00:37:55,859 --> 00:37:56,940
keys

824
00:37:56,940 --> 00:37:59,640
and your attacker needs access to update

825
00:37:59,640 --> 00:38:01,260
the policy with one of those approved

826
00:38:01,260 --> 00:38:03,839
keys at that point what you're really

827
00:38:03,839 --> 00:38:06,900
gonna kind of latch onto is the updating

828
00:38:06,900 --> 00:38:10,380
of that key policy to

829
00:38:10,380 --> 00:38:14,400
um a condition which would log out the

830
00:38:14,400 --> 00:38:16,380
organization of their access in that

831
00:38:16,380 --> 00:38:18,900
conditional lab

832
00:38:18,900 --> 00:38:21,060
and then finally in another scenario

833
00:38:21,060 --> 00:38:23,760
where you potentially encrypt data with

834
00:38:23,760 --> 00:38:26,220
an external key

835
00:38:26,220 --> 00:38:28,859
um you know security operations teams

836
00:38:28,859 --> 00:38:31,680
would want to be notified when

837
00:38:31,680 --> 00:38:32,780
um

838
00:38:32,780 --> 00:38:36,359
these keys are being used that are

839
00:38:36,359 --> 00:38:37,859
external

840
00:38:37,859 --> 00:38:40,260
you know this really relies on you

841
00:38:40,260 --> 00:38:43,140
having a fundamental idea on what is

842
00:38:43,140 --> 00:38:46,260
external to your organization

843
00:38:46,260 --> 00:38:48,420
um how do you how do you know it's

844
00:38:48,420 --> 00:38:50,160
external and how do you know it's weird

845
00:38:50,160 --> 00:38:53,359
if an external AWS account pops up

846
00:38:53,359 --> 00:38:57,980
especially in the in the construct of a

847
00:38:57,980 --> 00:39:01,220
KMS key

848
00:39:01,260 --> 00:39:04,160
that requires

849
00:39:05,940 --> 00:39:08,720
okay

850
00:39:11,400 --> 00:39:16,579
in conclusion everything's on fire

851
00:39:18,060 --> 00:39:19,920
that sort of

852
00:39:19,920 --> 00:39:21,839
customers providers make available

853
00:39:21,839 --> 00:39:27,420
services and apis which can be misused

854
00:39:27,420 --> 00:39:30,000
and used and potentially leveraged by

855
00:39:30,000 --> 00:39:32,900
ransomware gangs

856
00:39:33,000 --> 00:39:35,280
as successful ransomware campaigns in

857
00:39:35,280 --> 00:39:37,680
the cloud use cloud data services to

858
00:39:37,680 --> 00:39:40,619
encrypt data that can affect

859
00:39:40,619 --> 00:39:43,020
availability you can affect availability

860
00:39:43,020 --> 00:39:44,940
with just built-in Access Control

861
00:39:44,940 --> 00:39:46,500
mechanisms

862
00:39:46,500 --> 00:39:52,260
no fancy key hierarchies required

863
00:39:52,520 --> 00:39:55,680
drafting these these central fort

864
00:39:55,680 --> 00:39:58,619
knox-like approaches to Key Management I

865
00:39:58,619 --> 00:40:00,720
think is a good step

866
00:40:00,720 --> 00:40:04,160
um to preventing Valor

867
00:40:04,320 --> 00:40:06,359
um so it's it's Additionally the

868
00:40:06,359 --> 00:40:08,520
organization's responsibility even in

869
00:40:08,520 --> 00:40:09,660
those most highly restricted

870
00:40:09,660 --> 00:40:12,540
environments to plan for the day when

871
00:40:12,540 --> 00:40:15,000
there are these privileged guardrails

872
00:40:15,000 --> 00:40:17,460
fail

873
00:40:17,460 --> 00:40:20,820
um as such detecting if your Cloud also

874
00:40:20,820 --> 00:40:23,160
data is impacted by ransomware it should

875
00:40:23,160 --> 00:40:26,220
be a priority these detection techniques

876
00:40:26,220 --> 00:40:28,980
Can Depend subtly depending on what

877
00:40:28,980 --> 00:40:30,780
variant

878
00:40:30,780 --> 00:40:34,200
of you know Cloud native ransomware

879
00:40:34,200 --> 00:40:35,339
you're looking at whether or not they're

880
00:40:35,339 --> 00:40:38,579
using an existing key a new key an

881
00:40:38,579 --> 00:40:40,200
external key

882
00:40:40,200 --> 00:40:42,000
it's all rooted under the understanding

883
00:40:42,000 --> 00:40:43,800
that we need to know what's external to

884
00:40:43,800 --> 00:40:46,020
your account and you need to know what

885
00:40:46,020 --> 00:40:48,180
conditional policies would prevent you

886
00:40:48,180 --> 00:40:50,099
from accessing a resource at a given

887
00:40:50,099 --> 00:40:52,220
time

888
00:40:53,820 --> 00:40:57,000
um if you need more on cloud native

889
00:40:57,000 --> 00:40:58,920
ransomware there's

890
00:40:58,920 --> 00:41:01,440
not a lot out there but what there is

891
00:41:01,440 --> 00:41:03,599
out there is really really Choice it's

892
00:41:03,599 --> 00:41:05,880
really foundational

893
00:41:05,880 --> 00:41:07,740
um Scott Piper put together just this

894
00:41:07,740 --> 00:41:11,180
comprehensive list on S3 mitigations

895
00:41:11,180 --> 00:41:14,000
most of my

896
00:41:14,000 --> 00:41:17,480
bits on

897
00:41:17,660 --> 00:41:20,460
bucket configurations were from his blog

898
00:41:20,460 --> 00:41:22,619
about a year ago so I highly recommend

899
00:41:22,619 --> 00:41:26,099
checking out Scott Piper's blog

900
00:41:26,099 --> 00:41:28,380
um and then I also gave Spencer a shout

901
00:41:28,380 --> 00:41:29,339
out

902
00:41:29,339 --> 00:41:32,040
um Spencer's talk uh the Cod Village in

903
00:41:32,040 --> 00:41:34,079
2020.

904
00:41:34,079 --> 00:41:37,040
um he talks a lot about

905
00:41:37,040 --> 00:41:40,500
just keep policy lockout mechanism also

906
00:41:40,500 --> 00:41:41,880
encrypting

907
00:41:41,880 --> 00:41:44,460
um Sue data with client-side mechanisms

908
00:41:44,460 --> 00:41:48,079
also affecting time in my DDP

909
00:41:51,660 --> 00:41:54,359
dramatically dramatically change the

910
00:41:54,359 --> 00:41:56,960
subject here

911
00:41:57,839 --> 00:42:01,940
does anybody know what this is

912
00:42:03,540 --> 00:42:07,320
safer cons use speaker badge

913
00:42:07,320 --> 00:42:09,000
here um just want to let everybody know

914
00:42:09,000 --> 00:42:11,579
the speaker badge is up for auction

915
00:42:11,579 --> 00:42:15,060
for a good cause all benefits uh go to

916
00:42:15,060 --> 00:42:17,460
the mcgizzy foundation

917
00:42:17,460 --> 00:42:19,859
um uh charity in Minneapolis that

918
00:42:19,859 --> 00:42:23,220
benefits youth uh in Minneapolis you can

919
00:42:23,220 --> 00:42:25,200
go to that URL

920
00:42:25,200 --> 00:42:28,619
and put in your auction auction ends at

921
00:42:28,619 --> 00:42:30,359
the end of safer cons so I think

922
00:42:30,359 --> 00:42:32,579
bidding's up to 250 last I checked so

923
00:42:32,579 --> 00:42:34,619
this is a steal

924
00:42:34,619 --> 00:42:37,040
fantastic cube right

925
00:42:37,040 --> 00:42:40,880
I have a couple of minutes for questions

926
00:42:40,880 --> 00:42:44,880
Commons concerns

927
00:42:45,540 --> 00:42:49,560
stays concerned about Esther Vance Meyer

928
00:42:49,560 --> 00:42:52,200
I will definitely take that no okay

929
00:42:52,200 --> 00:42:54,170
thank you appreciate it

930
00:42:54,170 --> 00:42:59,760
[Applause]

931
00:43:22,460 --> 00:43:25,520
thank you

932
00:43:28,940 --> 00:43:32,190
[Music]

