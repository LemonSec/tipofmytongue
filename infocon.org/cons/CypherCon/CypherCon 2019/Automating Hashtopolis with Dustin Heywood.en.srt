1
00:00:20,740 --> 00:00:25,180
Welcome to Automating Hashtopolis. The second you see this slide, you might think it's an

2
00:00:25,190 --> 00:00:31,390
awkward thing. So disclaimer; I have to
read this as legal will kill me if I don't.

3
00:00:31,390 --> 00:00:36,680
This talk has not been invented by IBM,
IBM Security or X-Force Red. Opinions

4
00:00:36,680 --> 00:00:40,160
expressed this talk are mine and  mine alone. I'm not here speaking on behalf of

5
00:00:40,160 --> 00:00:45,110
Hashcat, Hashtoplis, Team Hashcat, The Church of Wi-Fi, CSP, the Illuminati or Bigfoot.

6
00:00:45,110 --> 00:00:48,260
No warranties expressed or implied. Not
responsible for setting the house on fire, break

7
00:00:48,260 --> 00:00:51,110
your Hashtoplis instance, blow up your database or otherwise severely break something and/or get yourself

8
00:00:51,110 --> 00:00:55,300
fired. Please seek the assistance of a professional before doing this in production.

9
00:00:56,900 --> 00:01:03,519
So, who am I? I'm noticing a lot in the industry. Bishop of the church Wi-Fi. Hacker for

10
00:01:03,530 --> 00:01:08,090
X-Force Red. Member of Teamm Hashcat and that the CCDC has also rear admiral

11
00:01:08,090 --> 00:01:11,300
eagle mohammed bit evil and special
asian people.

12
00:01:13,360 --> 00:01:18,979
Why are you here? Because Hashtopolis is awesome. Hashtopolis manages Hashcat.

13
00:01:18,979 --> 00:01:23,510
And Hashtopolis can be automated with JSON. That's right, you all can be very, very

14
00:01:23,510 --> 00:01:29,990
lazy. So, some terminology before we get
going. Just in case you haven't used

15
00:01:29,990 --> 00:01:34,850
Hashtopolis. An Agent is a hashcat worker node. Trust is an agent that it's

16
00:01:34,850 --> 00:01:39,350
trusted to run secret hash lists. A Secret
is a hashlist that cannot be sent to a

17
00:01:39,350 --> 00:01:43,610
untrusted agents. A Task is a hashcat job. A Hatchlist

18
00:01:43,610 --> 00:01:46,759
is a list hashes. Hashcat's an awesome password cracker,

19
00:01:46,759 --> 00:01:51,439
Thank you Atom. And Hashtopolis manages Hashcat to distribute work thanks s3!nlc, hops,

20
00:01:51,439 --> 00:01:57,949
Winxp and all others. That small crew right in front of me. So, we need to get

21
00:01:57,950 --> 00:02:01,880
started. With this, you need to obviously
install Hashtopolis. It needs to sort

22
00:02:01,880 --> 00:02:07,399
of work at some point. If it doesn't start
here. Next, go to generate yourself an api

23
00:02:07,400 --> 00:02:12,860
key, go to users and api management.
generate key. Then there's a nice little

24
00:02:12,860 --> 00:02:18,349
document I'll be referencing throughout
most of this. There's a user API

25
00:02:18,349 --> 00:02:22,670
PDF which has the entire JSON spec for
automating things. The tool I'm going to be

26
00:02:22,670 --> 00:02:26,298
talking about is the Python bindings
that calls it, but realistically run

27
00:02:26,299 --> 00:02:34,549
Python, Powershell, JavaScript, Ruby,
C-sharp, C++ if you're sadistic. But, right now

28
00:02:34,549 --> 00:02:37,969
we're gonna talk about the Python bindings. You see, making you dredge up your

29
00:02:37,969 --> 00:02:42,019
project in that directory to clone my
really terrible repo. It's Python version

30
00:02:42,020 --> 00:02:45,820
two only. You know I haven't
upgraded to Python three because I'm really lazy.

31
00:02:46,620 --> 00:02:53,359
I assume you're all good. I don't need to restart? Alight, cool. So yes, make your directory. A

32
00:02:53,359 --> 00:02:58,849
clone my bindings as a sub-module.
Questionable stuff happens and be

33
00:02:58,849 --> 00:03:04,339
potentially profit. So the first thing
you do is make yourself a config dot

34
00:03:04,340 --> 00:03:08,060
JSON. There's three critical things you
need to know here. One is your endpoint

35
00:03:08,060 --> 00:03:12,469
that you're talking to, the speeder Hashtopolis instance. Yeah, if your being

36
00:03:12,469 --> 00:03:16,879
smart, runs from port 443 but most of us
are lazy run port 80. Really insecure

37
00:03:16,879 --> 00:03:21,858
mode, but... Set yourself your endpoint.
Certain path is if you want to actually

38
00:03:21,859 --> 00:03:25,939
validate a certificate. Otherwise it says it's just a false. Also, there's a typo

39
00:03:25,939 --> 00:03:29,840
here, it should be a lower case "F", not an
upper case "f" on the JSON. I discovered that

40
00:03:29,840 --> 00:03:35,449
this morning when I was fixing my
slides. Set the API key relatively easy.

41
00:03:35,449 --> 00:03:41,150
That's the major things you need to
configure. Next thing you want to do is

42
00:03:41,150 --> 00:03:45,139
want to test your connection to Hashtopolis. So in this case you know, run a

43
00:03:45,139 --> 00:03:49,849
half from the htp client, API a top
functions in port star, x equals test

44
00:03:49,849 --> 00:03:53,899
connection, print x. It will return
success. There are only two portions of

45
00:03:53,900 --> 00:03:57,139
the Python bindings that return
successor okay, everything else returns

46
00:03:57,139 --> 00:04:01,780
raw JSON. And that is because I
didn't feel like writing JSON parsers for the rest of

47
00:04:01,780 --> 00:04:07,330
the API because I was lazy. So, test connection and test access. Return some kind of parse

48
00:04:07,330 --> 00:04:11,860
and everything else doesn't. Under the
hood, it's just all straight JSON. In fact

49
00:04:11,860 --> 00:04:15,430
the entire API is and that's where
that PDF comes in handy. So in

50
00:04:15,430 --> 00:04:18,940
this case we're sending a section test,
section or a connection before that.

51
00:04:18,940 --> 00:04:23,350
Request connection, it'll return test
connection success. This is the only

52
00:04:23,350 --> 00:04:27,220
entry that does not require API keys.
If you're API keys are wrong, you'll still

53
00:04:27,220 --> 00:04:32,680
succeed. And this is just for us to get
ready. I'm going to make sure the API

54
00:04:32,680 --> 00:04:37,380
key actually works. So do something
like test connection, test access,

55
00:04:37,380 --> 00:04:41,110
standard important, print outputs,
yeah.

56
00:04:41,110 --> 00:04:46,690
Pretty simple. It's all Python two. I
will import it eventually, but. Ignore my

57
00:04:46,690 --> 00:04:52,840
terrible trans statements. Checking the
access under the hood looks like a simple

58
00:04:52,840 --> 00:04:57,969
section route test request, acts request
access, given access key, the return ok

59
00:04:57,970 --> 00:05:02,410
or error.
Relativity simple. And in case there's a

60
00:05:02,410 --> 00:05:09,880
message, it states something useful like API key not found. Now let's do something useful so

61
00:05:09,880 --> 00:05:15,250
let's take going to create a hash list
like say the example 0 - we import our

62
00:05:15,250 --> 00:05:22,330
Python bindings import base64 will then
read the example 0 Don - it'd be 64

63
00:05:22,330 --> 00:05:27,400
encoded you pass off to create hash list
so in this case the order is going to be

64
00:05:27,400 --> 00:05:31,870
named whether it's salted or not whether
it's going to be a heck salt but it's

65
00:05:31,870 --> 00:05:38,020
secret your separator you pass format
your hash type in DX group ID then your

66
00:05:38,020 --> 00:05:43,859
encoded data whether using brain and the
brain features and it should return

67
00:05:43,860 --> 00:05:47,950
something like this will give your
responsive okay if you have any

68
00:05:47,950 --> 00:05:51,849
questions as to what you know if you're
in front of your own the PDA is

69
00:05:51,850 --> 00:05:56,470
fantastic I'm pretty sure they just have
some latex that generates and PDF on a

70
00:05:56,470 --> 00:06:00,280
routine basis so you could go grab the
latex but I actually did all this by

71
00:06:00,280 --> 00:06:05,710
hand they have seen here in the big guy
but the assaulted his secret is how to

72
00:06:05,710 --> 00:06:09,039
solve you pretty much do anything you
need to to make it past

73
00:06:09,040 --> 00:06:17,200
- lastrella quickly the important part
is the hash for nut as well as sect

74
00:06:17,200 --> 00:06:20,650
yeah it's hash formats the important one
there's also a section here we've set up

75
00:06:20,650 --> 00:06:27,370
with the binary etc but relatively
simple the next thing you can do that's

76
00:06:27,370 --> 00:06:32,650
really cool say you have a hundred masks
and you wanna go ahead into a patch list

77
00:06:32,650 --> 00:06:37,330
like save hathwell from the or logic
folks in this case we're going to import

78
00:06:37,330 --> 00:06:42,909
our HTTP client API functions when it's
at the hash list ID which is an American

79
00:06:42,910 --> 00:06:48,190
of Earth this case my headless was one
we've given a priority value 102 set its

80
00:06:48,190 --> 00:06:51,640
speed or the benchmarking to speed
because the default benchmark one tends

81
00:06:51,640 --> 00:06:56,610
to fail most the time if this breaks so
we can flip back to a benchmark mode

82
00:06:56,610 --> 00:07:03,100
open your mouth off I'll do a quick loop
through it will set a priority - the

83
00:07:03,100 --> 00:07:06,910
priority when we do things take master
bought the newline character this is

84
00:07:06,910 --> 00:07:09,940
very important if you have a newline
character at the end of it it might

85
00:07:09,940 --> 00:07:15,400
throw these things off then before your
tasks so in this case % of the task name

86
00:07:15,400 --> 00:07:21,400
said the paschal studied he said we've
got my attack mode and then your mask we

87
00:07:21,400 --> 00:07:29,229
said in this case 1200 is your trauma
timer I hope I wasn't 5 those students

88
00:07:29,230 --> 00:07:33,190
in the next line would go through it
say benchmark you save your color on

89
00:07:33,190 --> 00:07:38,200
things whether it's a secret hash etc
etc that prints the new test get what

90
00:07:38,200 --> 00:07:44,260
you're done it looks like oh okay
exception of the JSON for this you also

91
00:07:44,260 --> 00:07:47,560
set a priority for your strings
important if you see the little brackets

92
00:07:47,560 --> 00:07:51,340
there that's your final number so
whatever you're creating a list and hash

93
00:07:51,340 --> 00:07:56,320
table let's say what the word list say
examples he wrote up dick you don't need

94
00:07:56,320 --> 00:08:00,969
for that file you don't follow ribs in
circles in brackets and it just prints

95
00:08:00,970 --> 00:08:05,680
out your task when you hit a little
script for if you need to go run say

96
00:08:05,680 --> 00:08:11,530
pack on various things and import both
tasks now this is kind of superfluous as

97
00:08:11,530 --> 00:08:15,000
they don't have this in the GUI that
makes me poor really easy but I like

98
00:08:15,000 --> 00:08:22,260
CLI this one's handy they never have to
delete all of your tasks from mash

99
00:08:22,260 --> 00:08:26,310
topless bandwidth by clicking each and
every single individual one this has

100
00:08:26,310 --> 00:08:32,669
happened in contests it really annoyed
me so in this case we do next week and

101
00:08:32,669 --> 00:08:38,280
forty I said dude worthless tasks and
there's a task I need seven list assets

102
00:08:38,280 --> 00:08:43,228
JSON sweets looped through the tasks and
upset kill tasks to delete house that

103
00:08:43,229 --> 00:08:47,070
line in your task ID and it'll tell you
what it's filling it'll destroy your one

104
00:08:47,070 --> 00:08:52,050
hundred mouth wall tasks in a matter of
seconds it's pretty quick and easy which

105
00:08:52,050 --> 00:08:58,319
I'm pretty sure is saved some of us some
time other cool thing if you have a hash

106
00:08:58,320 --> 00:09:01,530
table instance that's been running for a
long time you probably have a lot of

107
00:09:01,530 --> 00:09:05,459
crack after to store it there so you
just look them up rather than retracting

108
00:09:05,460 --> 00:09:08,790
them all the time it's like the using
hash table was it's your jangle pop up

109
00:09:08,790 --> 00:09:14,130
so in this case you're important of the
API again running get hash of the hash

110
00:09:14,130 --> 00:09:21,600
you're looking for print X it'll return
hash it'll return the crack position the

111
00:09:21,600 --> 00:09:29,610
plane and your salt sat there said but a
cooler way doing this if you want to get

112
00:09:29,610 --> 00:09:35,790
this done in am actually details sir
another slide after this so you want to

113
00:09:35,790 --> 00:09:40,079
get the hash list details find out what
set on mash these run get hatch list on

114
00:09:40,080 --> 00:09:44,790
a setting you don't filter that I think
the task ID it'll tell you what form it

115
00:09:44,790 --> 00:09:51,480
is hash count your hash list it'll cut
your hash that maybe your separators you

116
00:09:51,480 --> 00:09:55,560
know and all this can be used for other
functions later on so that's why we're

117
00:09:55,560 --> 00:09:59,160
certain raw JSON as opposed to returning
parsed and put for all this so you can

118
00:09:59,160 --> 00:10:01,680
go look it up and do your own
programming I don't have many

119
00:10:01,680 --> 00:10:06,569
assumptions but what you're doing when
you're automating your systems that's

120
00:10:06,570 --> 00:10:11,280
exactly what you should be doing it
this one's handy where you're going to

121
00:10:11,280 --> 00:10:15,699
get all the crack times for a hash list
this is a really dirty way of doing it

122
00:10:15,699 --> 00:10:20,469
the next slide how to do it in the way
that opens like a hash jackpot file but

123
00:10:20,470 --> 00:10:26,199
friend get hash list cracked they hatch
this ID and then cracked itself and then

124
00:10:26,199 --> 00:10:32,139
they'll bring clear hash but a cooler
way to win this he spilled things of

125
00:10:32,139 --> 00:10:37,179
looking at pot fall again all the
automated the flavor post-processing so

126
00:10:37,179 --> 00:10:41,379
we're in quarry API via tell them only
get the hashes when we get them hash was

127
00:10:41,379 --> 00:10:46,629
cracked then you do it for loop on this
or hash your hashes you print your hash

128
00:10:46,629 --> 00:10:51,489
hash in your house playing separator in
there all sudden you've got your dump

129
00:10:51,489 --> 00:10:56,319
out of all the plain text which is handy
for you to do this another system may be

130
00:10:56,319 --> 00:11:00,639
kind of like a pot falls after it I
think this because hash propolis tends

131
00:11:00,639 --> 00:11:05,529
to be crankier than hash the pussy ever
did or has to put specifically about

132
00:11:05,529 --> 00:11:10,029
getting exports food things so the API
is far easier for getting exports from

133
00:11:10,029 --> 00:11:14,980
your hash list use this in contests so
thank you later

134
00:11:14,980 --> 00:11:19,269
join me task details me to the same
thing running get tasks on the tasks

135
00:11:19,269 --> 00:11:24,129
Peggy cut your data it'll tell you
everyone know what a task and on task on

136
00:11:24,129 --> 00:11:30,519
this case is a hash that job so this
comes in handy when say you've dispensed

137
00:11:30,519 --> 00:11:35,609
the task and that task tends to rotate
by the way one of the fixable things

138
00:11:35,609 --> 00:11:38,589
I'll turn of these we're gonna be
already on the task but gives you the

139
00:11:38,589 --> 00:11:43,600
entire command output whether work is
possible this is handy if you need to

140
00:11:43,600 --> 00:11:46,839
find out if a task completed before
moving on another one that's true put

141
00:11:46,839 --> 00:11:50,980
this in my request is three things
running calculating correctly so if you

142
00:11:50,980 --> 00:11:55,359
don't look up if a task is please just
search for possible true or false if

143
00:11:55,359 --> 00:12:02,739
it's false then you're going to go so
the important thing you'll run into when

144
00:12:02,739 --> 00:12:06,910
you're automating hash monopolists is
you really need to go look at files for

145
00:12:06,910 --> 00:12:10,319
both rules
and worthless and trying to find the

146
00:12:10,320 --> 00:12:19,110
file IDs at the time it's kind of a pain
so the in front missed the API call on

147
00:12:19,110 --> 00:12:25,769
that I so I missed they all not baby I
call it get file files I'll go to a show

148
00:12:25,769 --> 00:12:30,480
on this at the next slide
my quality that's right in this little

149
00:12:30,480 --> 00:12:36,110
flake they ain't here on the list files
on that I'm skated with all pause here

150
00:12:36,110 --> 00:12:49,490
Eric in so let's do some actual code
coding with mock my apology is due

151
00:12:50,149 --> 00:13:01,250
it's a readable a bring it there we go
unless you work so see the allocation

152
00:13:01,250 --> 00:13:15,149
can get files today oh this process with
us this files WI yeah every time so yes

153
00:13:15,149 --> 00:13:20,910
so files equals list files makes me even
tell you what balls are out there so if

154
00:13:20,910 --> 00:13:27,209
we run this like for example simulation
it works today nope doesn't like make it

155
00:13:27,209 --> 00:13:34,800
back to the very versatile program so
this follows a handy the was decent is

156
00:13:34,800 --> 00:13:37,529
also sure we haven't been filled listing
of all the definitions that are in there

157
00:13:37,529 --> 00:13:41,010
I have tested each units in one it
should work

158
00:13:41,010 --> 00:13:46,920
they don't sweetie gave half of course
Daniella I accept yellow and I bet my

159
00:13:46,920 --> 00:13:52,219
slide should nice play from Kraft slide

160
00:13:54,300 --> 00:14:02,109
use slideshow so I don't PowerPoint I
don't know it might well so yeah so the

161
00:14:02,110 --> 00:14:06,550
gay user list it's a handy one from this
one we do like a listing of all the

162
00:14:06,550 --> 00:14:10,300
existing users in your environment and
let me try to create eaves or sandy

163
00:14:10,300 --> 00:14:15,399
variety management purposes but often
Mary contests are doing real-world info

164
00:14:15,399 --> 00:14:23,470
on board 30 40 people on hit monthly but
every single time gets tedious so they

165
00:14:23,470 --> 00:14:27,189
for example when I run the script it
returns an user anyone even long and

166
00:14:27,189 --> 00:14:31,360
brave group one there's usually no
administrator chosen knowledge of my

167
00:14:31,360 --> 00:14:37,300
session lifetime relatively so I've got
a great user this is Andy

168
00:14:37,300 --> 00:14:42,189
so we've somebody who's maybe was test
email test equals test calm bright

169
00:14:42,189 --> 00:14:47,110
goodbye to equals one I'm using a real
bull trout password please don't use

170
00:14:47,110 --> 00:14:53,050
this in the real world but hey you can
call create user first specify username

171
00:14:53,050 --> 00:14:57,519
email right everybody and then you need
to elicit the users to get that user any

172
00:14:57,519 --> 00:15:01,480
that usually just create as you set its
password so what we're doing here is

173
00:15:01,480 --> 00:15:06,970
we're going for lining this user list
from a user was to call my username

174
00:15:06,970 --> 00:15:09,490
matches up we said its password we're
good to go

175
00:15:09,490 --> 00:15:16,600
sounds kind of handy in that case we've
done a lot of work for people this is 92

176
00:15:16,600 --> 00:15:21,069
creating poachers honey dead no greed
like 30 40 vouchers to go hand into

177
00:15:21,069 --> 00:15:26,469
various agents I mean it's just we may
be nominating much else but this was all

178
00:15:26,470 --> 00:15:31,329
right great voter script well I got
created so it's there's a couple of

179
00:15:31,329 --> 00:15:34,899
different voter creation commands when I
have is a create virtual random is also

180
00:15:34,899 --> 00:15:37,839
longer your set a specific voucher code
if you don't want to use the built-in

181
00:15:37,839 --> 00:15:41,920
random generator if you want to hit with
a static vouchers everyone's agents may

182
00:15:41,920 --> 00:15:44,979
get first onboarding
but in this case for you stink or at the

183
00:15:44,980 --> 00:15:51,880
API run creation Bhoja random list about
useless for onboarding your agents so

184
00:15:51,880 --> 00:15:57,700
that gets for the head not simply
patients you can delete vouchers and if

185
00:15:57,700 --> 00:16:03,250
you look a little freedom from that this
is cool I mean I apologize for telling

186
00:16:03,250 --> 00:16:07,330
you to do this but the whole donation
link at the bottom of the screen please

187
00:16:07,330 --> 00:16:12,400
donate that turn off the link but donate
first so that's the case even for the

188
00:16:12,400 --> 00:16:17,230
API we said force equals false so the
force was true would also work and we

189
00:16:17,230 --> 00:16:20,410
said that donate hills get config donate
off just so you can see what the

190
00:16:20,410 --> 00:16:25,180
donation setting was we cranked the old
setting out then you're on a second fake

191
00:16:25,180 --> 00:16:31,329
20 off true with your forced value of
false maybe we get it again also like

192
00:16:31,330 --> 00:16:35,890
the durational links off nice and easy
now if you want to see what else you can

193
00:16:35,890 --> 00:16:40,689
change about there's some scripts
provides a list of the configuration

194
00:16:40,690 --> 00:16:45,220
sessions you run the sessions equals
list sections the overcurrent each line

195
00:16:45,220 --> 00:16:48,670
you have something cracking your town on
sixth really heat your fine-tuning your

196
00:16:48,670 --> 00:16:53,709
UI and i'm server or multicast
notifications these are handy broad

197
00:16:53,710 --> 00:16:56,680
categories you see I don't actually use
these I'm here to change new things

198
00:16:56,680 --> 00:17:03,189
because we use let's configuration
either side so this is handy if you can

199
00:17:03,190 --> 00:17:08,290
spin up a hash table sentences fresh for
every contest configured specific ways

200
00:17:08,290 --> 00:17:13,089
you can configure your entire hash table
since pence by setting out your donation

201
00:17:13,089 --> 00:17:17,290
settings or supertastic setting is your
chunking settings to be the same every

202
00:17:17,290 --> 00:17:20,800
time you guys do something in front of
the sun's already run configure items

203
00:17:20,800 --> 00:17:26,319
list config but for line or faith atoms
items primal lions and in this case I

204
00:17:26,319 --> 00:17:29,710
just grabbed for a brain for example
take a bigger brain but because you'd be

205
00:17:29,710 --> 00:17:34,000
list of configuration items fairly
default state bar once you setup your

206
00:17:34,000 --> 00:17:37,540
hash table lists pull the settings down
for each one of them and make a skirt

207
00:17:37,540 --> 00:17:45,510
for it this will save you 20 30 minutes
and 17 hash table plus maybe longer

208
00:17:45,840 --> 00:17:50,110
now this script is script right here
will save your bacon

209
00:17:50,110 --> 00:17:55,330
how many people here by show of hands
and put in a bad task and also and

210
00:17:55,330 --> 00:17:59,750
alterations shut down
and then it's a 30 45 cent of manually

211
00:17:59,750 --> 00:18:03,320
fix and it's a pain clicking everyone
let's see I'm logging the line well

212
00:18:03,320 --> 00:18:09,800
server yeah WinXP that's three offs you
guys know what I'm talking about this

213
00:18:09,800 --> 00:18:15,020
saves time so what we're doing here is
we're gonna take our API list all the

214
00:18:15,020 --> 00:18:20,810
agents and for each agent we're going to
unassign there is a fantastic we're

215
00:18:20,810 --> 00:18:25,399
gonna force them to not see but you only
cuz that happens once popular thing the

216
00:18:25,400 --> 00:18:30,620
wrong things in your system they need
reset it to trust it because we trust

217
00:18:30,620 --> 00:18:36,770
all our agents I mean we like the system
but also in many cases we forgot to set

218
00:18:36,770 --> 00:18:39,830
optimize and work little probe all
through in all our agents would be doing

219
00:18:39,830 --> 00:18:44,540
ntlm so in this case we'll set the agent
s parameters then you set a page

220
00:18:44,540 --> 00:18:47,990
inactive and all of a sudden your agents
are working again assuming you believe

221
00:18:47,990 --> 00:18:53,000
your bad tasks keep this iran it saves
you a lot of interesting l server I need

222
00:18:53,000 --> 00:18:56,980
you to do a funny for example you're
trying to have a puppet through VPN and

223
00:18:56,980 --> 00:19:05,660
figure out how to do buying maintenance
and etc etc so I know it's really super

224
00:19:05,660 --> 00:19:09,500
quick where you go through all the other
cool a kind of the stole slide material

225
00:19:09,500 --> 00:19:14,180
and I had but most important thing is
chairman almost API these great API

226
00:19:14,180 --> 00:19:17,600
management through to show you some of
these options after this little slide

227
00:19:17,600 --> 00:19:22,040
here it has all the debugging
information you will ever need to find a

228
00:19:22,040 --> 00:19:25,970
something wrong the PDF is usually
correct and this changes often I don't

229
00:19:25,970 --> 00:19:29,870
know get messed up quite often so and
then we get home like I said it's

230
00:19:29,870 --> 00:19:34,010
positive version to I will probably
report it to Python version 3 just

231
00:19:34,010 --> 00:19:36,770
please don't run all the way they
thought and fire like someone does to my

232
00:19:36,770 --> 00:19:41,750
other code because I will read a few
more requests donate nationalist project

233
00:19:41,750 --> 00:19:47,270
success to it for beer or buy the beer
over here and the three mad geniuses are

234
00:19:47,270 --> 00:19:52,400
sitting right there especially things
test three he is saved my bacon on a

235
00:19:52,400 --> 00:19:55,820
number of times when they have a
slightly wrong or I was doing things

236
00:19:55,820 --> 00:20:00,020
right he'd fix things in a bit a little
bit thankful for him and also the

237
00:20:00,020 --> 00:20:04,970
stuffing magically works and also thank
Thailand for me - bad now that being

238
00:20:04,970 --> 00:20:08,000
said not soul they went through
ridiculously fast

239
00:20:08,000 --> 00:20:12,920
is there anything anybody wants me to
cover in detail on the API or functions

240
00:20:12,920 --> 00:20:16,880
you'd like to see strips work is also
one of them get it before late but I

241
00:20:16,880 --> 00:20:22,970
take requests not by soe me show you it
would be a documentation this looks like

242
00:20:22,970 --> 00:20:28,820
we're here just because I love this
thing so they wrote a really detailed

243
00:20:28,820 --> 00:20:33,290
API spec guide like it details how the
sections look like what each the

244
00:20:33,290 --> 00:20:39,740
functions look like for example let's go
we're on a super task and you're there

245
00:20:39,740 --> 00:20:43,340
section and request ID even literally
implement this in any language you want

246
00:20:43,340 --> 00:20:47,360
my penny bomb is terrible I love to see
the second power shell all I love

247
00:20:47,360 --> 00:20:52,100
citizen Ruby yeah I'd like to see people
automating national smart this is a

248
00:20:52,100 --> 00:20:57,350
great system and it's free
well be aware I think my license feeding

249
00:20:57,350 --> 00:21:03,080
bourbon earlier this week and that's
pretty small organizing the tasks

250
00:21:03,080 --> 00:21:07,250
everything is basically a session in a
request so everything that regarding

251
00:21:07,250 --> 00:21:12,950
tasks is all in the same place ever do
with requests but girls are a secondary

252
00:21:12,950 --> 00:21:17,780
section in there so you can really find
your way through how these pieces work

253
00:21:17,780 --> 00:21:23,120
and then if you need to find out in the
API how things are sorted get back to

254
00:21:23,120 --> 00:21:33,290
this I just do it with grab death used
to be functions functions and it tells

255
00:21:33,290 --> 00:21:37,520
me all the various offers that are in
there yeah it's not documented well but

256
00:21:37,520 --> 00:21:43,230
that's it's mostly self talking about
so if you want to keep into how that

257
00:21:43,230 --> 00:21:46,410
amazing works
I wrote this over the course of a

258
00:21:46,410 --> 00:21:50,370
weekend mainly typing all the GS I need
to do something Teresa but that's all it

259
00:21:50,370 --> 00:21:55,489
really is some more functional study

260
00:21:56,870 --> 00:22:00,870
this is all this is I'm literally
transcribing the genius I'm it's

261
00:22:00,870 --> 00:22:04,949
basically a jsonparser
energy is not creative actively so

262
00:22:04,950 --> 00:22:08,400
there's more of a toolkit rather than a
natural tool in itself but you can do

263
00:22:08,400 --> 00:22:12,210
some really crazy things with its
various functions same person ever have

264
00:22:12,210 --> 00:22:16,080
to touch the GUI again except for a
couple of very specific things and we

265
00:22:16,080 --> 00:22:21,389
see something's missing in the API
please submit a FOIA request but make

266
00:22:21,390 --> 00:22:26,250
sure it's complete blow requests and
you've got exact details there's a lot

267
00:22:26,250 --> 00:22:29,400
of reasons the ones up in hash-table
must get and they've taken these in the

268
00:22:29,400 --> 00:22:33,900
forums for support instead so check the
forums first check their discord and

269
00:22:33,900 --> 00:22:39,380
then about valent motocross or a tour
bus ideally but a github issue of not

270
00:22:39,380 --> 00:22:47,520
and I think that's and is there any
questions and it was to try topic but

271
00:22:47,520 --> 00:22:52,410
thank you all for showing up in a three
o'clock on day two of conferring the

272
00:22:52,410 --> 00:22:59,240
night before that's it

273
00:23:52,580 --> 00:23:54,639
you

