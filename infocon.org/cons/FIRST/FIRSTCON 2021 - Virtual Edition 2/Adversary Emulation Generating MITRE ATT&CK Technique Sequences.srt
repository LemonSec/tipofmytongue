1
00:00:04,360 --> 00:00:08,400
[Music]

2
00:00:08,400 --> 00:00:09,440
hi

3
00:00:09,440 --> 00:00:11,599
my name is martin i'm the head of

4
00:00:11,599 --> 00:00:14,080
research at mnemonic

5
00:00:14,080 --> 00:00:15,839
i'm here to talk about adversary

6
00:00:15,839 --> 00:00:18,240
emulation more specifically

7
00:00:18,240 --> 00:00:21,039
on how to generate sequences of

8
00:00:21,039 --> 00:00:21,920
techniques

9
00:00:21,920 --> 00:00:25,039
from microplex first a little bit of

10
00:00:25,039 --> 00:00:26,080
background

11
00:00:26,080 --> 00:00:29,199
on adversariation

12
00:00:29,199 --> 00:00:32,800
we defend against real adversaries

13
00:00:32,800 --> 00:00:35,280
and in order to test our defenses we

14
00:00:35,280 --> 00:00:36,800
should test them against

15
00:00:36,800 --> 00:00:40,160
real world adversary behaviors

16
00:00:40,160 --> 00:00:42,960
and we can do that by using adversary

17
00:00:42,960 --> 00:00:45,280
emulation in order to do that

18
00:00:45,280 --> 00:00:47,920
we need a plan an adversary emulation

19
00:00:47,920 --> 00:00:49,440
plan

20
00:00:49,440 --> 00:00:51,520
this is an example of the first

21
00:00:51,520 --> 00:00:53,440
adversary emulation plan

22
00:00:53,440 --> 00:00:57,360
published by mitre on apk3

23
00:00:57,360 --> 00:00:59,920
and the figure shows the different

24
00:00:59,920 --> 00:01:00,640
phases

25
00:01:00,640 --> 00:01:03,440
of the attack and the activities that

26
00:01:03,440 --> 00:01:07,200
the adversary performs within each phase

27
00:01:07,200 --> 00:01:10,400
now adversary emulation plans

28
00:01:10,400 --> 00:01:12,400
have developed further since this plan

29
00:01:12,400 --> 00:01:13,680
was published

30
00:01:13,680 --> 00:01:16,560
and the current state of the art is that

31
00:01:16,560 --> 00:01:18,640
an adversary emulation plan

32
00:01:18,640 --> 00:01:21,600
consists of three main components the

33
00:01:21,600 --> 00:01:22,640
first

34
00:01:22,640 --> 00:01:25,759
is the intelligence summary which gives

35
00:01:25,759 --> 00:01:28,960
a general overview of the adversary

36
00:01:28,960 --> 00:01:33,200
with references the second component

37
00:01:33,200 --> 00:01:36,240
is the operational flow where

38
00:01:36,240 --> 00:01:38,880
the techniques used by the adversary are

39
00:01:38,880 --> 00:01:39,840
chained together

40
00:01:39,840 --> 00:01:43,280
into a logical flow to show the progress

41
00:01:43,280 --> 00:01:45,439
of an attack

42
00:01:45,439 --> 00:01:48,240
and the final component is the emulation

43
00:01:48,240 --> 00:01:49,200
plan itself

44
00:01:49,200 --> 00:01:52,320
step-by-step instructions showing

45
00:01:52,320 --> 00:01:55,119
each command executed by the adversary

46
00:01:55,119 --> 00:01:57,759
of that step

47
00:01:59,040 --> 00:02:01,759
making adversary emulation plans require

48
00:02:01,759 --> 00:02:04,079
a substantial amount of time

49
00:02:04,079 --> 00:02:07,680
expertise and effort and it's largely a

50
00:02:07,680 --> 00:02:09,919
manual task

51
00:02:09,919 --> 00:02:13,120
so one of our goals was to see

52
00:02:13,120 --> 00:02:15,200
whether or not we could automate parts

53
00:02:15,200 --> 00:02:16,720
of this process

54
00:02:16,720 --> 00:02:20,640
to speed up the creation of adversary

55
00:02:20,640 --> 00:02:22,400
emulation plans

56
00:02:22,400 --> 00:02:25,440
now adversary emulation plans are

57
00:02:25,440 --> 00:02:28,879
based on my choice adversarial tactics

58
00:02:28,879 --> 00:02:31,040
techniques and common knowledge

59
00:02:31,040 --> 00:02:34,319
also known as attack an attack is

60
00:02:34,319 --> 00:02:36,640
security and knowledge base and model

61
00:02:36,640 --> 00:02:40,399
for adversary behavior

62
00:02:41,040 --> 00:02:44,080
mitre attack consists of the following

63
00:02:44,080 --> 00:02:47,280
core components tactics that are

64
00:02:47,280 --> 00:02:49,519
tactical adversary goals during

65
00:02:49,519 --> 00:02:50,959
intrusion

66
00:02:50,959 --> 00:02:53,760
examples include initial access

67
00:02:53,760 --> 00:02:54,720
persistence

68
00:02:54,720 --> 00:02:59,840
natural movement collection exfiltration

69
00:03:00,640 --> 00:03:03,360
then the second component is techniques

70
00:03:03,360 --> 00:03:04,480
and techniques

71
00:03:04,480 --> 00:03:08,400
describe how an adversary

72
00:03:08,400 --> 00:03:11,120
achieve these tactical goals so one

73
00:03:11,120 --> 00:03:13,599
tactic can have multiple techniques

74
00:03:13,599 --> 00:03:16,480
some techniques are in principle the

75
00:03:16,480 --> 00:03:16,959
same

76
00:03:16,959 --> 00:03:19,599
as techniques they just have a more

77
00:03:19,599 --> 00:03:22,000
detailed description

78
00:03:22,000 --> 00:03:26,000
and finally mitre attack contains

79
00:03:26,000 --> 00:03:29,440
information about adversary usage of

80
00:03:29,440 --> 00:03:30,319
techniques

81
00:03:30,319 --> 00:03:33,440
what kind of software they use

82
00:03:33,440 --> 00:03:35,840
descriptions of their procedures and

83
00:03:35,840 --> 00:03:38,879
other kinds of metadata

84
00:03:38,879 --> 00:03:41,680
microattack has an object relationship

85
00:03:41,680 --> 00:03:42,480
model

86
00:03:42,480 --> 00:03:44,959
which is shown here so in the top left

87
00:03:44,959 --> 00:03:46,640
you have an adversary group

88
00:03:46,640 --> 00:03:49,599
this adversary group uses techniques and

89
00:03:49,599 --> 00:03:50,799
some techniques

90
00:03:50,799 --> 00:03:53,920
and they also use software

91
00:03:53,920 --> 00:03:56,480
and that software implements techniques

92
00:03:56,480 --> 00:03:58,799
and some techniques

93
00:03:58,799 --> 00:04:01,680
a type contains mitigations that prevent

94
00:04:01,680 --> 00:04:02,640
techniques

95
00:04:02,640 --> 00:04:04,319
and finally techniques and some

96
00:04:04,319 --> 00:04:06,400
techniques accomplish

97
00:04:06,400 --> 00:04:09,920
tactics as you might notice

98
00:04:09,920 --> 00:04:12,879
there are no relations between

99
00:04:12,879 --> 00:04:14,720
techniques and sub techniques

100
00:04:14,720 --> 00:04:16,720
so mitre attack does not contain any

101
00:04:16,720 --> 00:04:18,079
kind of information

102
00:04:18,079 --> 00:04:21,279
on what relations or dependencies you

103
00:04:21,279 --> 00:04:21,918
have

104
00:04:21,918 --> 00:04:25,520
between techniques and that's

105
00:04:25,520 --> 00:04:27,040
an issue if you want to change

106
00:04:27,040 --> 00:04:29,280
techniques together

107
00:04:29,280 --> 00:04:31,120
so our problem statement what we try to

108
00:04:31,120 --> 00:04:32,720
solve was

109
00:04:32,720 --> 00:04:35,840
to generate the operational flow of an

110
00:04:35,840 --> 00:04:37,120
adversary group

111
00:04:37,120 --> 00:04:40,400
or a campaign or an incident

112
00:04:40,400 --> 00:04:43,680
that means you can spend the time

113
00:04:43,680 --> 00:04:46,880
expertise and effort once

114
00:04:46,880 --> 00:04:49,280
and then reuse that every time you want

115
00:04:49,280 --> 00:04:53,360
to generate a new operation as well

116
00:04:53,360 --> 00:04:56,000
there is some previous work on this

117
00:04:56,000 --> 00:04:56,880
topic

118
00:04:56,880 --> 00:05:00,720
mitra caldera is a tool for automated

119
00:05:00,720 --> 00:05:04,880
red tv and caldera has a concept of

120
00:05:04,880 --> 00:05:06,960
preconditions and post conditions for

121
00:05:06,960 --> 00:05:08,840
attack steps that are mapped to

122
00:05:08,840 --> 00:05:11,840
techniques

123
00:05:11,840 --> 00:05:13,680
and the apple bone from my crew took the

124
00:05:13,680 --> 00:05:15,199
instant step further at the first

125
00:05:15,199 --> 00:05:17,039
conference in 2019

126
00:05:17,039 --> 00:05:20,160
where he presented how to

127
00:05:20,160 --> 00:05:23,360
use caldera to change

128
00:05:23,360 --> 00:05:26,400
techniques together in microattack now

129
00:05:26,400 --> 00:05:28,400
the limitations on this previous work is

130
00:05:28,400 --> 00:05:30,080
that

131
00:05:30,080 --> 00:05:32,960
it doesn't cover all of microattack it

132
00:05:32,960 --> 00:05:34,479
only covers the techniques and some

133
00:05:34,479 --> 00:05:36,240
techniques that are defined in magical

134
00:05:36,240 --> 00:05:37,440
era

135
00:05:37,440 --> 00:05:40,240
and second it's tool centric to

136
00:05:40,240 --> 00:05:41,520
micrometrical there

137
00:05:41,520 --> 00:05:43,600
because the preconditions and post

138
00:05:43,600 --> 00:05:44,560
conditions in

139
00:05:44,560 --> 00:05:47,199
caldera are very closely tied to the

140
00:05:47,199 --> 00:05:48,160
toolbox

141
00:05:48,160 --> 00:05:50,720
that caldera provides so we want a

142
00:05:50,720 --> 00:05:51,759
general way

143
00:05:51,759 --> 00:05:53,520
to describe dependencies between

144
00:05:53,520 --> 00:05:55,199
techniques

145
00:05:55,199 --> 00:05:58,080
in order to generate chains and

146
00:05:58,080 --> 00:05:59,120
techniques

147
00:05:59,120 --> 00:06:01,440
uh from a threat actor incidental

148
00:06:01,440 --> 00:06:03,520
campaign

149
00:06:03,520 --> 00:06:05,840
and to achieve that we applied promise

150
00:06:05,840 --> 00:06:06,560
theory

151
00:06:06,560 --> 00:06:08,400
i will not go into the details on

152
00:06:08,400 --> 00:06:10,240
promised promise theory here if you're

153
00:06:10,240 --> 00:06:11,840
interested there's a link at the bottom

154
00:06:11,840 --> 00:06:14,160
to the paper that introduced it

155
00:06:14,160 --> 00:06:18,000
but i'll give a very very simplified

156
00:06:18,000 --> 00:06:21,520
explanation of how we use it so promise

157
00:06:21,520 --> 00:06:25,520
theory consists of autonomous agents

158
00:06:25,520 --> 00:06:27,919
and promises and a promise is a

159
00:06:27,919 --> 00:06:29,199
statement of intent

160
00:06:29,199 --> 00:06:32,080
basically an autonomous agent saying i

161
00:06:32,080 --> 00:06:33,680
can provide this

162
00:06:33,680 --> 00:06:36,240
and as opposed to the classical way of

163
00:06:36,240 --> 00:06:37,440
thinking where

164
00:06:37,440 --> 00:06:41,120
one agent would call another agent and

165
00:06:41,120 --> 00:06:45,199
ask it for something so give me this

166
00:06:45,199 --> 00:06:48,800
like a function call or a web request

167
00:06:48,800 --> 00:06:51,520
in promise theory each autonomous agent

168
00:06:51,520 --> 00:06:51,919
says

169
00:06:51,919 --> 00:06:55,520
i can provide this and then the

170
00:06:55,520 --> 00:06:58,960
agent that needs that promise will

171
00:06:58,960 --> 00:07:02,080
look for other agents that provide it

172
00:07:02,080 --> 00:07:04,160
that can give it to it and then this

173
00:07:04,160 --> 00:07:05,280
agent might again

174
00:07:05,280 --> 00:07:07,039
provide promises that are required by

175
00:07:07,039 --> 00:07:08,960
other agents so the advantage of

176
00:07:08,960 --> 00:07:10,880
benefits of using from a theory is that

177
00:07:10,880 --> 00:07:12,880
it's capable

178
00:07:12,880 --> 00:07:16,000
there's no explicit coordination between

179
00:07:16,000 --> 00:07:18,000
these autonomous agents so they can

180
00:07:18,000 --> 00:07:20,000
self-organize

181
00:07:20,000 --> 00:07:23,520
and it's distributed so that

182
00:07:23,520 --> 00:07:26,400
you can view each autonomous agent

183
00:07:26,400 --> 00:07:27,039
without

184
00:07:27,039 --> 00:07:28,880
considering all of the other autonomous

185
00:07:28,880 --> 00:07:31,520
agents

186
00:07:31,520 --> 00:07:34,400
so the way we use it in a general model

187
00:07:34,400 --> 00:07:35,199
is that

188
00:07:35,199 --> 00:07:38,400
we view techniques and sub techniques as

189
00:07:38,400 --> 00:07:41,440
autonomous agents

190
00:07:41,599 --> 00:07:44,400
and then each technique or some

191
00:07:44,400 --> 00:07:45,039
technique

192
00:07:45,039 --> 00:07:50,080
has a set of preconditions or requires

193
00:07:50,080 --> 00:07:52,560
there are promises that are needed to

194
00:07:52,560 --> 00:07:53,440
execute

195
00:07:53,440 --> 00:07:56,560
the technique furthermore

196
00:07:56,560 --> 00:07:58,800
it also has a set of post conditions or

197
00:07:58,800 --> 00:07:59,759
provides

198
00:07:59,759 --> 00:08:01,440
which is a set of promises that are

199
00:08:01,440 --> 00:08:04,560
provided after executing a technique

200
00:08:04,560 --> 00:08:06,879
and since every technique and sub

201
00:08:06,879 --> 00:08:09,360
technique is autonomous

202
00:08:09,360 --> 00:08:11,840
analysts can review them separately and

203
00:08:11,840 --> 00:08:13,280
they don't need to

204
00:08:13,280 --> 00:08:16,720
consider anything else than one specific

205
00:08:16,720 --> 00:08:17,599
technique they're

206
00:08:17,599 --> 00:08:22,160
assessing here now but

207
00:08:22,160 --> 00:08:25,280
one example just to illustrate this this

208
00:08:25,280 --> 00:08:26,000
is a technique

209
00:08:26,000 --> 00:08:27,759
remote services from the lateral

210
00:08:27,759 --> 00:08:29,759
movement tactic

211
00:08:29,759 --> 00:08:33,440
uh it has a required section with

212
00:08:33,440 --> 00:08:36,320
four promises access network credentials

213
00:08:36,320 --> 00:08:37,120
users

214
00:08:37,120 --> 00:08:39,760
info network hosts and info network

215
00:08:39,760 --> 00:08:42,240
services

216
00:08:42,399 --> 00:08:45,120
access network means that it has access

217
00:08:45,120 --> 00:08:46,480
to

218
00:08:46,480 --> 00:08:48,560
the internal network of the target

219
00:08:48,560 --> 00:08:49,600
infrastructure

220
00:08:49,600 --> 00:08:51,680
credentials users means that it has

221
00:08:51,680 --> 00:08:53,519
access to valid credentials for

222
00:08:53,519 --> 00:08:56,720
multiple users in the infrastructure

223
00:08:56,720 --> 00:08:59,200
info network hosts means that it knows

224
00:08:59,200 --> 00:08:59,760
about

225
00:08:59,760 --> 00:09:03,040
posts and addresses of other systems

226
00:09:03,040 --> 00:09:05,519
in the infrastructure and finally info

227
00:09:05,519 --> 00:09:06,880
network services

228
00:09:06,880 --> 00:09:09,279
means that it knows what kind of

229
00:09:09,279 --> 00:09:10,240
services

230
00:09:10,240 --> 00:09:12,560
that are running and listening on that

231
00:09:12,560 --> 00:09:13,279
reports

232
00:09:13,279 --> 00:09:17,040
in the infrastructure finally

233
00:09:17,040 --> 00:09:19,600
there's a provide section and it

234
00:09:19,600 --> 00:09:22,480
provides the promise moved laterally

235
00:09:22,480 --> 00:09:24,800
moved laterally means that the adversary

236
00:09:24,800 --> 00:09:26,640
is now no longer constrained

237
00:09:26,640 --> 00:09:28,320
to the single system where they gain

238
00:09:28,320 --> 00:09:30,480
initial access they have moved and they

239
00:09:30,480 --> 00:09:31,600
have access to

240
00:09:31,600 --> 00:09:34,839
several different systems in the target

241
00:09:34,839 --> 00:09:37,839
infrastructure

242
00:09:38,560 --> 00:09:40,640
another a little bit more elaborate

243
00:09:40,640 --> 00:09:41,839
example

244
00:09:41,839 --> 00:09:44,640
with two techniques so here we have the

245
00:09:44,640 --> 00:09:46,000
phishing technique and

246
00:09:46,000 --> 00:09:50,880
the user execution techniques

247
00:09:50,880 --> 00:09:53,519
the first promise i'll show is info

248
00:09:53,519 --> 00:09:55,040
email address

249
00:09:55,040 --> 00:09:57,600
this promise represents the knowledge of

250
00:09:57,600 --> 00:09:58,959
a valid email address

251
00:09:58,959 --> 00:10:01,920
in the target organization and you see

252
00:10:01,920 --> 00:10:03,920
an incoming error to phishing that means

253
00:10:03,920 --> 00:10:05,120
that

254
00:10:05,120 --> 00:10:08,480
phishing requires info email address

255
00:10:08,480 --> 00:10:11,440
in order to execute once executed

256
00:10:11,440 --> 00:10:12,800
phishing provides

257
00:10:12,800 --> 00:10:16,079
to deliver tool delivery means that you

258
00:10:16,079 --> 00:10:16,800
have the

259
00:10:16,800 --> 00:10:20,640
capability to upload or deliver

260
00:10:20,640 --> 00:10:25,120
an arbitrary payload to a target system

261
00:10:26,079 --> 00:10:29,360
tool delivery is required by user

262
00:10:29,360 --> 00:10:31,680
execution but user execution

263
00:10:31,680 --> 00:10:34,640
also requires another promise called to

264
00:10:34,640 --> 00:10:36,160
available

265
00:10:36,160 --> 00:10:39,360
tool available represents the fact that

266
00:10:39,360 --> 00:10:40,560
an adversary has

267
00:10:40,560 --> 00:10:43,600
access to a tube or malware

268
00:10:43,600 --> 00:10:45,279
and that's different from having the

269
00:10:45,279 --> 00:10:47,440
capability of delivering

270
00:10:47,440 --> 00:10:49,920
a payload to a target system so user

271
00:10:49,920 --> 00:10:52,560
execution requires both

272
00:10:52,560 --> 00:10:56,560
and as you might see in this picture we

273
00:10:56,560 --> 00:10:58,480
have no techniques that provide

274
00:10:58,480 --> 00:11:01,600
info email address or two available

275
00:11:01,600 --> 00:11:04,880
which means that by themselves these

276
00:11:04,880 --> 00:11:07,839
two techniques cannot be executed

277
00:11:07,839 --> 00:11:10,000
because they require promises that are

278
00:11:10,000 --> 00:11:10,320
not

279
00:11:10,320 --> 00:11:13,680
provided by any of the teachers

280
00:11:13,680 --> 00:11:17,600
finally user execution provides

281
00:11:17,600 --> 00:11:20,399
four promises privileges use local

282
00:11:20,399 --> 00:11:21,839
access file system

283
00:11:21,839 --> 00:11:29,040
access memory and code execute

284
00:11:29,040 --> 00:11:32,560
so the approach to we wanted to

285
00:11:32,560 --> 00:11:35,680
be able to generate these

286
00:11:35,680 --> 00:11:39,120
sequences or chains of techniques

287
00:11:39,120 --> 00:11:42,000
and we started out by developing a

288
00:11:42,000 --> 00:11:43,760
vocabulary of promises

289
00:11:43,760 --> 00:11:45,120
the first thing we did was to

290
00:11:45,120 --> 00:11:46,959
investigate sticks and mic

291
00:11:46,959 --> 00:11:50,000
vocabularies but we couldn't find any

292
00:11:50,000 --> 00:11:52,639
that were at the right abstraction level

293
00:11:52,639 --> 00:11:53,920
to fit

294
00:11:53,920 --> 00:11:55,360
techniques and some techniques in

295
00:11:55,360 --> 00:11:56,959
microattack

296
00:11:56,959 --> 00:11:59,279
so we started developing our own

297
00:11:59,279 --> 00:12:01,040
vocabulary

298
00:12:01,040 --> 00:12:03,519
and then we reviewed all techniques and

299
00:12:03,519 --> 00:12:06,240
sub techniques in microattack

300
00:12:06,240 --> 00:12:09,360
and we defined which promises

301
00:12:09,360 --> 00:12:12,000
are required by and which promises are

302
00:12:12,000 --> 00:12:13,680
provided by

303
00:12:13,680 --> 00:12:15,120
every one of those techniques of

304
00:12:15,120 --> 00:12:17,279
techniques

305
00:12:17,279 --> 00:12:19,440
we also developed a tool that could

306
00:12:19,440 --> 00:12:21,519
generate attack stages

307
00:12:21,519 --> 00:12:23,600
based on this information that tool is

308
00:12:23,600 --> 00:12:25,360
open source it's on github

309
00:12:25,360 --> 00:12:27,920
on the link on the bottom of this slide

310
00:12:27,920 --> 00:12:28,480
and i'll

311
00:12:28,480 --> 00:12:30,720
give a demo of that tool a little bit

312
00:12:30,720 --> 00:12:33,040
later

313
00:12:33,120 --> 00:12:35,519
and this was an iterative process so we

314
00:12:35,519 --> 00:12:38,480
did one pass at least then we went back

315
00:12:38,480 --> 00:12:40,880
expanded and refined the vocabulary

316
00:12:40,880 --> 00:12:44,079
reviewed the techniques again

317
00:12:44,079 --> 00:12:47,279
improved the tool and cycled through

318
00:12:47,279 --> 00:12:49,279
like that for several iterations

319
00:12:49,279 --> 00:12:52,399
so we're not done with this work but

320
00:12:52,399 --> 00:12:54,160
we've gotten to the point where

321
00:12:54,160 --> 00:12:57,600
it starts to become useful and we hope

322
00:12:57,600 --> 00:12:59,279
that this tool can be useful to other

323
00:12:59,279 --> 00:13:01,600
people as well

324
00:13:01,600 --> 00:13:03,600
so to give a very brief overview of that

325
00:13:03,600 --> 00:13:04,880
tool

326
00:13:04,880 --> 00:13:06,959
the tool takes three inputs the first

327
00:13:06,959 --> 00:13:08,800
input is a list of techniques and

328
00:13:08,800 --> 00:13:09,920
subtechnics

329
00:13:09,920 --> 00:13:13,519
it supports uh attack navigator layers

330
00:13:13,519 --> 00:13:15,440
uh but it also supports a very simple

331
00:13:15,440 --> 00:13:17,040
json format which

332
00:13:17,040 --> 00:13:21,519
is just a list of json list of

333
00:13:21,519 --> 00:13:23,680
technique and subtechnique ids from

334
00:13:23,680 --> 00:13:26,319
microattack

335
00:13:26,720 --> 00:13:30,000
the second input is the definitions of

336
00:13:30,000 --> 00:13:31,839
the requires and provides for each

337
00:13:31,839 --> 00:13:34,480
technique in microattack we have a big

338
00:13:34,480 --> 00:13:36,480
json file with all those definitions on

339
00:13:36,480 --> 00:13:37,680
github

340
00:13:37,680 --> 00:13:41,600
as part of the data for this tool

341
00:13:41,600 --> 00:13:44,320
and the final input is the end condition

342
00:13:44,320 --> 00:13:46,000
or objective

343
00:13:46,000 --> 00:13:48,480
and that could be exfiltration

344
00:13:48,480 --> 00:13:49,920
destruction

345
00:13:49,920 --> 00:13:53,120
extortion denial of service

346
00:13:53,120 --> 00:13:56,320
representing what the adversary

347
00:13:56,320 --> 00:14:02,160
tries to achieve by this intuition

348
00:14:02,160 --> 00:14:04,240
some techniques provide this

349
00:14:04,240 --> 00:14:05,839
unconditional so in order

350
00:14:05,839 --> 00:14:07,760
to reach it you need to execute one of

351
00:14:07,760 --> 00:14:10,160
those techniques

352
00:14:10,160 --> 00:14:13,680
when executed the tool initializes by

353
00:14:13,680 --> 00:14:16,000
creating an empty queue

354
00:14:16,000 --> 00:14:19,440
and then for each attack stage it

355
00:14:19,440 --> 00:14:22,160
executes all techniques and sub

356
00:14:22,160 --> 00:14:23,360
techniques

357
00:14:23,360 --> 00:14:26,800
where all promises

358
00:14:26,800 --> 00:14:28,639
in the requires section of that

359
00:14:28,639 --> 00:14:31,519
technique are present in the queue

360
00:14:31,519 --> 00:14:35,360
that also means that for the first stage

361
00:14:35,360 --> 00:14:37,600
only techniques with no requirements can

362
00:14:37,600 --> 00:14:39,600
be executed

363
00:14:39,600 --> 00:14:43,279
next it adds all of the promises

364
00:14:43,279 --> 00:14:45,839
in the provide section of the executive

365
00:14:45,839 --> 00:14:47,279
techniques to the queue

366
00:14:47,279 --> 00:14:49,519
and then it advances to the next stage

367
00:14:49,519 --> 00:14:51,199
and thus this all over again

368
00:14:51,199 --> 00:14:53,360
and it keeps doing this until it is

369
00:14:53,360 --> 00:14:54,399
unable to

370
00:14:54,399 --> 00:14:57,120
execute any more new techniques of

371
00:14:57,120 --> 00:14:59,440
techniques

372
00:14:59,440 --> 00:15:03,519
the output the main output is

373
00:15:03,519 --> 00:15:07,440
a table with the stages of the attack

374
00:15:07,440 --> 00:15:09,120
and the corresponding techniques and sub

375
00:15:09,120 --> 00:15:11,120
techniques but it can also display

376
00:15:11,120 --> 00:15:13,519
the tactics that those techniques belong

377
00:15:13,519 --> 00:15:14,639
to and

378
00:15:14,639 --> 00:15:17,600
the promises that were provided during

379
00:15:17,600 --> 00:15:18,959
that stage

380
00:15:18,959 --> 00:15:21,839
and finally it outputs a verdict and

381
00:15:21,839 --> 00:15:23,760
that verbatim is whether or not

382
00:15:23,760 --> 00:15:25,839
in the uncondition that was given as

383
00:15:25,839 --> 00:15:27,199
input was

384
00:15:27,199 --> 00:15:30,639
achieved given the techniques

385
00:15:30,639 --> 00:15:33,519
that were available

386
00:15:34,959 --> 00:15:39,360
so i want to give a quick demonstration

387
00:15:39,360 --> 00:15:40,240
on what

388
00:15:40,240 --> 00:15:44,800
this tool looks like and how it works

389
00:15:44,880 --> 00:15:47,920
the tool on github is

390
00:15:47,920 --> 00:15:50,639
command line but we have a prototype web

391
00:15:50,639 --> 00:15:51,360
interface

392
00:15:51,360 --> 00:15:54,959
which is shown here

393
00:15:54,959 --> 00:15:57,279
and in order to run the tool you first

394
00:15:57,279 --> 00:15:59,839
have to select

395
00:15:59,839 --> 00:16:02,959
a threat actor or incident so

396
00:16:02,959 --> 00:16:05,199
for this example i'll use the master

397
00:16:05,199 --> 00:16:05,860
screen

398
00:16:05,860 --> 00:16:07,199
[Music]

399
00:16:07,199 --> 00:16:10,079
then you need to select an end condition

400
00:16:10,079 --> 00:16:10,800
so i will

401
00:16:10,800 --> 00:16:15,199
choose objective exfiltration

402
00:16:15,199 --> 00:16:18,000
which means they want to find the

403
00:16:18,000 --> 00:16:22,720
information they're after and exfoliate

404
00:16:22,720 --> 00:16:24,800
i want the tool to show the promises

405
00:16:24,800 --> 00:16:26,720
that were obtained or provided during

406
00:16:26,720 --> 00:16:27,519
its stage

407
00:16:27,519 --> 00:16:31,199
and then run it

408
00:16:31,279 --> 00:16:34,880
so when i do this

409
00:16:34,880 --> 00:16:36,480
the first thing that happens is that the

410
00:16:36,480 --> 00:16:38,720
tool says it failed incomplete attack

411
00:16:38,720 --> 00:16:39,199
chain

412
00:16:39,199 --> 00:16:40,720
and the only thing that happened was

413
00:16:40,720 --> 00:16:43,199
that at stage one it executed

414
00:16:43,199 --> 00:16:46,560
brute force password spray which

415
00:16:46,560 --> 00:16:49,440
provided credentials usually local and

416
00:16:49,440 --> 00:16:52,240
then nothing more happened

417
00:16:52,240 --> 00:16:55,279
and the reason for that is that

418
00:16:55,279 --> 00:16:57,519
the techniques associated with lazarus

419
00:16:57,519 --> 00:16:59,360
group in microattack are not

420
00:16:59,360 --> 00:17:02,839
sufficient to be able to carry out an

421
00:17:02,839 --> 00:17:04,640
intrusion

422
00:17:04,640 --> 00:17:08,880
so in order to see what would happen

423
00:17:08,880 --> 00:17:11,439
if they had other techniques i can give

424
00:17:11,439 --> 00:17:13,520
them the technique

425
00:17:13,520 --> 00:17:16,720
gather victim identity information which

426
00:17:16,720 --> 00:17:17,359
is

427
00:17:17,359 --> 00:17:20,079
we'll provide them with with a valid

428
00:17:20,079 --> 00:17:21,280
email address

429
00:17:21,280 --> 00:17:24,240
in the target organization the technique

430
00:17:24,240 --> 00:17:25,160
id is

431
00:17:25,160 --> 00:17:28,319
1589 so just

432
00:17:28,319 --> 00:17:31,360
add that and then

433
00:17:31,360 --> 00:17:34,159
run it again

434
00:17:35,440 --> 00:17:39,760
so now this is the technique that i

435
00:17:39,760 --> 00:17:41,600
gave them gather victim identity

436
00:17:41,600 --> 00:17:43,280
information

437
00:17:43,280 --> 00:17:46,000
and what happened is that they are now

438
00:17:46,000 --> 00:17:46,640
able

439
00:17:46,640 --> 00:17:49,919
to launch a phishing attack as you saw

440
00:17:49,919 --> 00:17:50,880
in the previous

441
00:17:50,880 --> 00:17:55,120
example with phishing and user execution

442
00:17:55,200 --> 00:17:57,120
you might remember from that example

443
00:17:57,120 --> 00:17:58,720
that user execution

444
00:17:58,720 --> 00:18:02,160
also required to available

445
00:18:02,160 --> 00:18:03,760
and that's actually what's missing you

446
00:18:03,760 --> 00:18:06,080
because

447
00:18:06,240 --> 00:18:09,919
from the fishing spearfishing attachment

448
00:18:09,919 --> 00:18:12,000
you get tool delivery so you now have

449
00:18:12,000 --> 00:18:14,080
the capability to deliver a piece of

450
00:18:14,080 --> 00:18:15,280
malware

451
00:18:15,280 --> 00:18:17,760
but you might not have that malware in

452
00:18:17,760 --> 00:18:19,039
the first place

453
00:18:19,039 --> 00:18:22,000
so the next step is that i grant lazarus

454
00:18:22,000 --> 00:18:23,120
group access to

455
00:18:23,120 --> 00:18:29,840
develop capabilities which is 1587.

456
00:18:32,080 --> 00:18:35,280
and i run it again so now they have

457
00:18:35,280 --> 00:18:36,880
access to malware and then

458
00:18:36,880 --> 00:18:40,640
a whole lot more happens at stage 3

459
00:18:40,640 --> 00:18:42,559
we get user execution of a malicious

460
00:18:42,559 --> 00:18:44,480
file

461
00:18:44,480 --> 00:18:48,080
then they move on to

462
00:18:48,080 --> 00:18:51,520
internal discovery on the target system

463
00:18:51,520 --> 00:18:55,039
they obtain persistence they do

464
00:18:55,039 --> 00:18:58,320
privilege escalation

465
00:18:58,400 --> 00:18:59,840
and they reach some of the other

466
00:18:59,840 --> 00:19:01,520
objectives like the amount of service

467
00:19:01,520 --> 00:19:03,440
destruction

468
00:19:03,440 --> 00:19:05,679
computational resources but they do not

469
00:19:05,679 --> 00:19:10,960
reach objective acceleration

470
00:19:10,960 --> 00:19:13,520
one of the missing pieces for reaching

471
00:19:13,520 --> 00:19:14,000
that

472
00:19:14,000 --> 00:19:15,919
is they don't have a command control

473
00:19:15,919 --> 00:19:17,440
channel

474
00:19:17,440 --> 00:19:19,679
so

475
00:19:20,720 --> 00:19:22,480
what they're missing to get the command

476
00:19:22,480 --> 00:19:24,799
control channel is command and control

477
00:19:24,799 --> 00:19:26,320
infrastructure they don't have any

478
00:19:26,320 --> 00:19:28,160
technique that gives them

479
00:19:28,160 --> 00:19:30,480
command and control infrastructure there

480
00:19:30,480 --> 00:19:32,080
is a technique called acquire

481
00:19:32,080 --> 00:19:33,440
infrastructure

482
00:19:33,440 --> 00:19:35,440
which i can give them assuming that

483
00:19:35,440 --> 00:19:36,880
laster is group has

484
00:19:36,880 --> 00:19:38,000
access to economic control

485
00:19:38,000 --> 00:19:40,760
infrastructure and that technique is

486
00:19:40,760 --> 00:19:43,760
1583.

487
00:19:45,760 --> 00:19:49,039
we run it again so

488
00:19:49,039 --> 00:19:50,799
the main difference here that this is

489
00:19:50,799 --> 00:19:52,400
not that much more exciting than the

490
00:19:52,400 --> 00:19:53,840
previous execution but

491
00:19:53,840 --> 00:19:57,200
uh at this point

492
00:19:57,200 --> 00:19:59,280
they're able to establish command

493
00:19:59,280 --> 00:20:00,880
control which gives them the promise

494
00:20:00,880 --> 00:20:06,720
adversary control communication job

495
00:20:06,720 --> 00:20:10,320
so okay they're still not able to

496
00:20:10,320 --> 00:20:12,799
complete their objective which is

497
00:20:12,799 --> 00:20:14,799
acceleration

498
00:20:14,799 --> 00:20:17,039
the last missing piece here is that

499
00:20:17,039 --> 00:20:18,799
they're not able to do lateral movement

500
00:20:18,799 --> 00:20:20,080
because they do not know

501
00:20:20,080 --> 00:20:22,799
about other hosts and services in the

502
00:20:22,799 --> 00:20:24,080
infrastructure

503
00:20:24,080 --> 00:20:27,280
which is a requirement for moving and

504
00:20:27,280 --> 00:20:28,799
laterally

505
00:20:28,799 --> 00:20:30,799
so i will give them the technique

506
00:20:30,799 --> 00:20:32,960
network service scanning

507
00:20:32,960 --> 00:20:38,559
which is number 1046

508
00:20:38,799 --> 00:20:41,679
and run it again

509
00:20:43,280 --> 00:20:46,880
and at this point the tool says success

510
00:20:46,880 --> 00:20:49,679
because what happened now is that at

511
00:20:49,679 --> 00:20:51,360
stage seven

512
00:20:51,360 --> 00:20:53,760
they move laterally using remote desktop

513
00:20:53,760 --> 00:20:54,799
protocol

514
00:20:54,799 --> 00:20:57,840
at stage eight they collect data from

515
00:20:57,840 --> 00:20:59,520
local system

516
00:20:59,520 --> 00:21:01,919
which gives them the target information

517
00:21:01,919 --> 00:21:03,280
and at stage nine

518
00:21:03,280 --> 00:21:06,000
they archive stage and exfiltrate that

519
00:21:06,000 --> 00:21:07,200
data

520
00:21:07,200 --> 00:21:12,559
which reaches objective exfiltration

521
00:21:13,600 --> 00:21:16,240
so just a quick this was a threat factor

522
00:21:16,240 --> 00:21:18,960
we also have

523
00:21:18,960 --> 00:21:21,679
incidents here so just a quick example

524
00:21:21,679 --> 00:21:24,480
of a solar winds incident

525
00:21:24,480 --> 00:21:28,640
without giving them any pre-seated

526
00:21:28,640 --> 00:21:31,679
techniques i just run it with the

527
00:21:31,679 --> 00:21:33,840
attack navigator layer that describes

528
00:21:33,840 --> 00:21:35,520
the solarwinds incident

529
00:21:35,520 --> 00:21:37,200
they're actually able to do quite a lot

530
00:21:37,200 --> 00:21:38,559
because they start off with

531
00:21:38,559 --> 00:21:41,840
supply chain compromise

532
00:21:41,919 --> 00:21:44,400
they obtain execution defense elevation

533
00:21:44,400 --> 00:21:45,760
persistence

534
00:21:45,760 --> 00:21:49,120
command control channel privilege

535
00:21:49,120 --> 00:21:50,240
escalation

536
00:21:50,240 --> 00:21:53,120
but they are missing some techniques to

537
00:21:53,120 --> 00:21:53,440
get

538
00:21:53,440 --> 00:21:56,799
all the way to exfiltration so there are

539
00:21:56,799 --> 00:21:58,400
some missing parts here but

540
00:21:58,400 --> 00:22:02,640
uh at least the first four stages of the

541
00:22:02,640 --> 00:22:04,559
attack or intrusion are pretty complete

542
00:22:04,559 --> 00:22:05,520
compared to

543
00:22:05,520 --> 00:22:07,679
that

544
00:22:09,200 --> 00:22:13,840
so back to the presentation

545
00:22:16,480 --> 00:22:20,480
that was a demo um then i want to talk a

546
00:22:20,480 --> 00:22:22,400
little bit about some issues that we

547
00:22:22,400 --> 00:22:22,960
have

548
00:22:22,960 --> 00:22:25,760
these are not necessarily issues with

549
00:22:25,760 --> 00:22:26,400
attack

550
00:22:26,400 --> 00:22:28,000
that there is something wrong with it

551
00:22:28,000 --> 00:22:31,200
but it's an issue for how we use attack

552
00:22:31,200 --> 00:22:34,000
so the first issue we have that is that

553
00:22:34,000 --> 00:22:35,840
the tactics defense salvation

554
00:22:35,840 --> 00:22:39,360
and persistence they don't really drive

555
00:22:39,360 --> 00:22:41,360
an attack chain any further they might

556
00:22:41,360 --> 00:22:43,200
be necessary for an adversary

557
00:22:43,200 --> 00:22:45,039
to avoid detection and to be able to

558
00:22:45,039 --> 00:22:46,799
come back at a later time

559
00:22:46,799 --> 00:22:48,799
but they don't give you they don't let

560
00:22:48,799 --> 00:22:50,960
you progress to the next stage

561
00:22:50,960 --> 00:22:54,320
of the intrusion so for those techniques

562
00:22:54,320 --> 00:22:55,840
we basically just say that

563
00:22:55,840 --> 00:22:57,919
okay you achieve persistence you achieve

564
00:22:57,919 --> 00:22:59,280
the translation

565
00:22:59,280 --> 00:23:02,720
but those promises are not used by

566
00:23:02,720 --> 00:23:06,080
or required by any other techniques

567
00:23:06,080 --> 00:23:08,159
the main issue we have with attack is

568
00:23:08,159 --> 00:23:10,159
that an attack basically consists of two

569
00:23:10,159 --> 00:23:12,240
different types of techniques

570
00:23:12,240 --> 00:23:14,400
the first one is we call how it's done

571
00:23:14,400 --> 00:23:15,360
techniques

572
00:23:15,360 --> 00:23:18,640
like exploit public facing application

573
00:23:18,640 --> 00:23:20,880
those techniques describes what an

574
00:23:20,880 --> 00:23:22,320
adversary does

575
00:23:22,320 --> 00:23:24,000
and they map pretty well to what we've

576
00:23:24,000 --> 00:23:26,559
been doing because you can identify

577
00:23:26,559 --> 00:23:28,400
what the prerequisites or requirements

578
00:23:28,400 --> 00:23:30,400
are and you can identify what you get

579
00:23:30,400 --> 00:23:32,320
when you do it

580
00:23:32,320 --> 00:23:35,679
so those techniques are fine the main

581
00:23:35,679 --> 00:23:36,240
issue

582
00:23:36,240 --> 00:23:38,640
is that attack also contains what we

583
00:23:38,640 --> 00:23:40,080
call what you get techniques

584
00:23:40,080 --> 00:23:42,159
like valid accounts that don't really

585
00:23:42,159 --> 00:23:43,679
describe

586
00:23:43,679 --> 00:23:46,880
adversary behavior they describe

587
00:23:46,880 --> 00:23:49,919
what the adversary gets which more or

588
00:23:49,919 --> 00:23:51,600
less maps to our

589
00:23:51,600 --> 00:23:54,559
provides promises so we had issues with

590
00:23:54,559 --> 00:23:56,960
that we've tried to get around it but

591
00:23:56,960 --> 00:23:59,090
ideally we would

592
00:23:59,090 --> 00:24:00,240
[Music]

593
00:24:00,240 --> 00:24:03,120
hope that all techniques should be how

594
00:24:03,120 --> 00:24:04,240
it's done

595
00:24:04,240 --> 00:24:06,720
describing how the adversary behaves

596
00:24:06,720 --> 00:24:09,679
rather than what they did

597
00:24:11,039 --> 00:24:13,440
so an interesting side effect of what we

598
00:24:13,440 --> 00:24:14,880
did was that

599
00:24:14,880 --> 00:24:17,840
we pretty quickly started identifying

600
00:24:17,840 --> 00:24:19,679
missing techniques and subjects

601
00:24:19,679 --> 00:24:23,360
and from the demo

602
00:24:23,360 --> 00:24:27,120
you could see that iteratively

603
00:24:27,120 --> 00:24:30,320
you could you can identify candidates

604
00:24:30,320 --> 00:24:32,640
for missing techniques

605
00:24:32,640 --> 00:24:35,679
which takes the generation of the attack

606
00:24:35,679 --> 00:24:36,799
stage one

607
00:24:36,799 --> 00:24:39,520
a step further we also have some

608
00:24:39,520 --> 00:24:41,120
functionality in the tool that i didn't

609
00:24:41,120 --> 00:24:42,240
show to help

610
00:24:42,240 --> 00:24:44,840
identify or pinpoint exactly which

611
00:24:44,840 --> 00:24:46,080
promises

612
00:24:46,080 --> 00:24:49,039
are missing and which techniques that

613
00:24:49,039 --> 00:24:50,960
might provide those promises

614
00:24:50,960 --> 00:24:52,880
so we've already had one submission to

615
00:24:52,880 --> 00:24:54,400
my chair

616
00:24:54,400 --> 00:24:56,080
of missing techniques and we hope to

617
00:24:56,080 --> 00:24:58,240
have more in the future

618
00:24:58,240 --> 00:25:01,679
so the tool also can help as a quality

619
00:25:01,679 --> 00:25:04,400
assurance tool

620
00:25:04,880 --> 00:25:08,640
there's a bunch of caveats um

621
00:25:08,640 --> 00:25:11,520
the first one is that i used last year's

622
00:25:11,520 --> 00:25:14,000
group as an example but

623
00:25:14,000 --> 00:25:15,679
it actually is quite a bad example

624
00:25:15,679 --> 00:25:17,440
because

625
00:25:17,440 --> 00:25:20,720
adversary groups and mitral attacks

626
00:25:20,720 --> 00:25:23,360
are linked to techniques that have been

627
00:25:23,360 --> 00:25:26,320
observed over a very long period of time

628
00:25:26,320 --> 00:25:29,279
so in some cases you might have

629
00:25:29,279 --> 00:25:31,200
aggregated techniques that have been

630
00:25:31,200 --> 00:25:32,559
observed

631
00:25:32,559 --> 00:25:35,200
over a period of more than 10 years and

632
00:25:35,200 --> 00:25:36,559
if we keep doing this

633
00:25:36,559 --> 00:25:39,120
in the future we might have adversary

634
00:25:39,120 --> 00:25:40,320
groups

635
00:25:40,320 --> 00:25:43,039
with a long list of techniques that are

636
00:25:43,039 --> 00:25:44,960
being observed over the time span of

637
00:25:44,960 --> 00:25:46,880
decades

638
00:25:46,880 --> 00:25:49,679
so those techniques don't really tell

639
00:25:49,679 --> 00:25:51,279
you what that adversary

640
00:25:51,279 --> 00:25:54,640
has been doing recently so the best

641
00:25:54,640 --> 00:25:57,760
source of

642
00:25:57,760 --> 00:26:00,559
techniques to be used with this tool is

643
00:26:00,559 --> 00:26:01,200
actually from

644
00:26:01,200 --> 00:26:04,240
incidents or campaigns so you have a

645
00:26:04,240 --> 00:26:04,880
clear

646
00:26:04,880 --> 00:26:06,799
time frame in which you have observed

647
00:26:06,799 --> 00:26:09,440
these techniques

648
00:26:09,440 --> 00:26:11,440
that being said there are not that many

649
00:26:11,440 --> 00:26:13,039
good sources of techniques

650
00:26:13,039 --> 00:26:17,440
except for micro attack so

651
00:26:18,400 --> 00:26:20,080
i don't really see any good alternatives

652
00:26:20,080 --> 00:26:22,640
at the moment but ideally

653
00:26:22,640 --> 00:26:24,640
techniques should be linked to incidents

654
00:26:24,640 --> 00:26:25,919
and campaigns

655
00:26:25,919 --> 00:26:29,679
in addition to threat factors um

656
00:26:29,679 --> 00:26:31,679
also keep in mind that what we've been

657
00:26:31,679 --> 00:26:33,440
doing here

658
00:26:33,440 --> 00:26:35,600
we're not considering any specific

659
00:26:35,600 --> 00:26:37,039
infrastructure we're not

660
00:26:37,039 --> 00:26:40,480
simulating attack or an attack

661
00:26:40,480 --> 00:26:42,880
on a specific infrastructure what the

662
00:26:42,880 --> 00:26:44,159
tool tells you

663
00:26:44,159 --> 00:26:46,480
is these are all the options that the

664
00:26:46,480 --> 00:26:47,600
adversary has

665
00:26:47,600 --> 00:26:50,400
at each stage of the intrusion but those

666
00:26:50,400 --> 00:26:51,360
are options

667
00:26:51,360 --> 00:26:52,880
those are not necessarily what they

668
00:26:52,880 --> 00:26:54,480
would choose to do

669
00:26:54,480 --> 00:26:58,480
but they if you just look at

670
00:26:58,480 --> 00:27:00,960
one path through these options that

671
00:27:00,960 --> 00:27:03,279
might be an attack

672
00:27:03,279 --> 00:27:05,120
so to visualize this as a graph you

673
00:27:05,120 --> 00:27:07,840
would have

674
00:27:08,080 --> 00:27:09,840
edges going out to lots and lots of

675
00:27:09,840 --> 00:27:11,360
nodes further down but

676
00:27:11,360 --> 00:27:13,120
one path through that graph would be

677
00:27:13,120 --> 00:27:14,480
attached

678
00:27:14,480 --> 00:27:15,919
so you don't get that one path from the

679
00:27:15,919 --> 00:27:18,880
tool but you get all the possibilities

680
00:27:18,880 --> 00:27:22,159
then our vocabulary

681
00:27:22,159 --> 00:27:24,559
our vocabulary doesn't cover everything

682
00:27:24,559 --> 00:27:26,240
it's not finished

683
00:27:26,240 --> 00:27:28,720
and we're still working on it and we're

684
00:27:28,720 --> 00:27:30,480
probably going to change this and

685
00:27:30,480 --> 00:27:34,399
change it in the future and finally uh

686
00:27:34,399 --> 00:27:36,799
there's probably mapping bias at play as

687
00:27:36,799 --> 00:27:38,080
well we're humans

688
00:27:38,080 --> 00:27:42,000
we do mistakes um and when we

689
00:27:42,000 --> 00:27:44,000
assign promises to the requires and

690
00:27:44,000 --> 00:27:45,840
provides that's

691
00:27:45,840 --> 00:27:48,799
a little bit subjective it depends on

692
00:27:48,799 --> 00:27:50,720
the experience and the expertise of the

693
00:27:50,720 --> 00:27:53,120
analyst

694
00:27:53,120 --> 00:27:56,480
which kind of brings me to future work

695
00:27:56,480 --> 00:27:57,840
because

696
00:27:57,840 --> 00:28:01,039
we're not able to finish this on our own

697
00:28:01,039 --> 00:28:04,000
if but what we want to achieve is to

698
00:28:04,000 --> 00:28:05,919
develop a standard vocabulary of

699
00:28:05,919 --> 00:28:08,080
promises for us

700
00:28:08,080 --> 00:28:10,000
that's accepted across the industry and

701
00:28:10,000 --> 00:28:11,440
that's not something we can do on our

702
00:28:11,440 --> 00:28:12,399
own

703
00:28:12,399 --> 00:28:16,480
so we're hoping that others will

704
00:28:16,480 --> 00:28:18,880
see the value of this and see that this

705
00:28:18,880 --> 00:28:21,039
might be a useful

706
00:28:21,039 --> 00:28:24,480
way to ultimate generation of

707
00:28:24,480 --> 00:28:27,360
attack stages and then we can

708
00:28:27,360 --> 00:28:28,159
collaborate

709
00:28:28,159 --> 00:28:30,399
on bringing this photo and maybe even

710
00:28:30,399 --> 00:28:32,320
bring it into a standardization body at

711
00:28:32,320 --> 00:28:34,399
some points

712
00:28:34,399 --> 00:28:37,279
so if you're interested in that then

713
00:28:37,279 --> 00:28:38,000
please

714
00:28:38,000 --> 00:28:42,840
uh interact with us on github or contact

715
00:28:42,840 --> 00:28:44,000
us

716
00:28:44,000 --> 00:28:47,039
i will be happy to collaborate the next

717
00:28:47,039 --> 00:28:49,279
step would be attack integration

718
00:28:49,279 --> 00:28:51,279
so whenever you add the new technique to

719
00:28:51,279 --> 00:28:52,480
attack

720
00:28:52,480 --> 00:28:54,960
in addition to what's done today you

721
00:28:54,960 --> 00:28:56,240
also

722
00:28:56,240 --> 00:28:59,440
define the promises provided by

723
00:28:59,440 --> 00:29:02,480
and required by that technique

724
00:29:02,480 --> 00:29:04,480
because once you've done a job of

725
00:29:04,480 --> 00:29:07,200
mapping all the existing techniques

726
00:29:07,200 --> 00:29:10,720
the extra effort of

727
00:29:10,720 --> 00:29:13,760
mapping new techniques is negligible

728
00:29:13,760 --> 00:29:16,240
compared to the big job of doing it to

729
00:29:16,240 --> 00:29:17,279
the

730
00:29:17,279 --> 00:29:19,520
techniques currently in attack and it

731
00:29:19,520 --> 00:29:20,640
has

732
00:29:20,640 --> 00:29:23,600
it is very useful

733
00:29:24,399 --> 00:29:26,000
we also want to integrate this in the

734
00:29:26,000 --> 00:29:27,440
socrates platform i'll get

735
00:29:27,440 --> 00:29:29,760
back to that in the next slide and

736
00:29:29,760 --> 00:29:30,720
finally

737
00:29:30,720 --> 00:29:33,919
more ambitious is that sometime in the

738
00:29:33,919 --> 00:29:35,120
future we would hope

739
00:29:35,120 --> 00:29:37,279
to develop structured procedure

740
00:29:37,279 --> 00:29:39,440
definitions to address the actual

741
00:29:39,440 --> 00:29:42,640
emulation plan part of this so that you

742
00:29:42,640 --> 00:29:43,760
can

743
00:29:43,760 --> 00:29:46,720
take even further steps to automatically

744
00:29:46,720 --> 00:29:47,600
generate

745
00:29:47,600 --> 00:29:51,120
a full adversary emulation

746
00:29:51,120 --> 00:29:55,840
so finally on the socrates project

747
00:29:57,039 --> 00:29:59,039
the socrates project is an innovation

748
00:29:59,039 --> 00:30:00,159
project that

749
00:30:00,159 --> 00:30:03,200
builds a security automation and

750
00:30:03,200 --> 00:30:05,200
decision support platform for socks and

751
00:30:05,200 --> 00:30:06,320
c-serves

752
00:30:06,320 --> 00:30:07,320
it has a web page webpage at

753
00:30:07,320 --> 00:30:09,440
soccertest.eu and

754
00:30:09,440 --> 00:30:11,200
the project is also looking for new

755
00:30:11,200 --> 00:30:13,440
members of the stakeholder group so

756
00:30:13,440 --> 00:30:15,760
if you're interested i think this uh

757
00:30:15,760 --> 00:30:18,159
sounds interesting

758
00:30:18,159 --> 00:30:19,520
please consider signing up for the

759
00:30:19,520 --> 00:30:21,520
stakeholder

760
00:30:21,520 --> 00:30:25,840
that's all from me and thank you very

761
00:30:30,840 --> 00:30:33,840
much

