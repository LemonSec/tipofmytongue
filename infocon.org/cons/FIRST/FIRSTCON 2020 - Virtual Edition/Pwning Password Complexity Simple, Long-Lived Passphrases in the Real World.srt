1
00:00:04,720 --> 00:00:05,440
all right

2
00:00:05,440 --> 00:00:07,839
hey everybody welcome back uh thanks for

3
00:00:07,839 --> 00:00:08,960
joining us today

4
00:00:08,960 --> 00:00:10,480
a couple of quick reminders before we

5
00:00:10,480 --> 00:00:13,120
get started everybody is muted

6
00:00:13,120 --> 00:00:14,480
if you're using the event app we

7
00:00:14,480 --> 00:00:16,400
encourage you to check into the session

8
00:00:16,400 --> 00:00:18,400
update your activities and please be

9
00:00:18,400 --> 00:00:20,000
sure to complete the session

10
00:00:20,000 --> 00:00:22,960
survey the session is tlp white and is

11
00:00:22,960 --> 00:00:23,840
being recorded

12
00:00:23,840 --> 00:00:26,080
recordings will be available within 24

13
00:00:26,080 --> 00:00:28,320
hours via the app or the desktop mobile

14
00:00:28,320 --> 00:00:28,960
site

15
00:00:28,960 --> 00:00:30,560
and with that i'd like to introduce your

16
00:00:30,560 --> 00:00:33,920
session moderator dr serge droz

17
00:00:33,920 --> 00:00:37,040
thank you trace thank you tracy yes and

18
00:00:37,040 --> 00:00:40,640
hello everybody to uh an end to the slow

19
00:00:40,640 --> 00:00:43,120
coming on the end of the conference it's

20
00:00:43,120 --> 00:00:44,719
my pleasure to introduce

21
00:00:44,719 --> 00:00:47,200
city hanford principal engineer at proof

22
00:00:47,200 --> 00:00:48,000
point

23
00:00:48,000 --> 00:00:51,280
uh i'm not gonna read a long bio so

24
00:00:51,280 --> 00:00:53,840
the floor is your seat um don't forget

25
00:00:53,840 --> 00:00:56,320
to put questions into the qa

26
00:00:56,320 --> 00:00:59,760
and with that having said uh

27
00:00:59,760 --> 00:01:03,039
now it's really yours all right thank

28
00:01:03,039 --> 00:01:04,720
you very much serge i appreciate that

29
00:01:04,720 --> 00:01:06,320
uh hello everyone welcome my name is

30
00:01:06,320 --> 00:01:07,840
seth hanford and i'm going to be talking

31
00:01:07,840 --> 00:01:09,680
to you today about using

32
00:01:09,680 --> 00:01:12,159
known compromise passwords from troy

33
00:01:12,159 --> 00:01:14,159
hunt's have i been pwned password list

34
00:01:14,159 --> 00:01:16,240
to protect my enterprise

35
00:01:16,240 --> 00:01:17,920
if anyone's not familiar the have it

36
00:01:17,920 --> 00:01:19,600
been pwned service collects normalizes

37
00:01:19,600 --> 00:01:20,720
and publishes

38
00:01:20,720 --> 00:01:23,840
sha1 and ntlm hashes for over 500

39
00:01:23,840 --> 00:01:25,680
million passwords as of

40
00:01:25,680 --> 00:01:28,640
june of this year so a brief story on

41
00:01:28,640 --> 00:01:29,119
how

42
00:01:29,119 --> 00:01:31,360
this process all began we had a new

43
00:01:31,360 --> 00:01:32,880
employee send an email to

44
00:01:32,880 --> 00:01:35,280
our ceo and some other senior leaders in

45
00:01:35,280 --> 00:01:36,640
the company

46
00:01:36,640 --> 00:01:38,720
essentially saying our password policy

47
00:01:38,720 --> 00:01:40,000
is painful

48
00:01:40,000 --> 00:01:41,439
complex passwords are changing too

49
00:01:41,439 --> 00:01:43,360
frequently nist has new guidance

50
00:01:43,360 --> 00:01:44,479
saying we don't even need to do it this

51
00:01:44,479 --> 00:01:46,640
way anymore can we make this better

52
00:01:46,640 --> 00:01:49,040
and so empowered by leadership i stepped

53
00:01:49,040 --> 00:01:49,759
up and

54
00:01:49,759 --> 00:01:51,360
put a team together to look into what

55
00:01:51,360 --> 00:01:53,360
could do and how and so i want to start

56
00:01:53,360 --> 00:01:55,200
by saying thanks to everyone involved

57
00:01:55,200 --> 00:01:56,719
from top to bottom leadership to

58
00:01:56,719 --> 00:01:57,920
employees

59
00:01:57,920 --> 00:02:00,240
who helped to give us the idea so josh

60
00:02:00,240 --> 00:02:02,159
thank you for speaking up and asking

61
00:02:02,159 --> 00:02:03,600
that great question and then to the

62
00:02:03,600 --> 00:02:04,880
fantastic team that did the

63
00:02:04,880 --> 00:02:06,159
implementation technically

64
00:02:06,159 --> 00:02:08,959
anand and slava and others involved will

65
00:02:08,959 --> 00:02:10,318
ed scott dwayne

66
00:02:10,318 --> 00:02:11,920
and all the all our leadership it was

67
00:02:11,920 --> 00:02:13,520
really uh great

68
00:02:13,520 --> 00:02:15,280
i really consider this a chance of a

69
00:02:15,280 --> 00:02:17,280
lifetime opportunity

70
00:02:17,280 --> 00:02:20,000
to make security better and the

71
00:02:20,000 --> 00:02:20,720
experience

72
00:02:20,720 --> 00:02:22,800
easier while being fully supported and

73
00:02:22,800 --> 00:02:23,840
encouraged by leadership

74
00:02:23,840 --> 00:02:25,760
these opportunities don't come around

75
00:02:25,760 --> 00:02:26,879
every day

76
00:02:26,879 --> 00:02:28,319
especially in security and so i'm really

77
00:02:28,319 --> 00:02:30,400
glad to have had the chance

78
00:02:30,400 --> 00:02:32,480
so a bit about me as search said i'm

79
00:02:32,480 --> 00:02:33,840
principal engineer and security

80
00:02:33,840 --> 00:02:34,400
architect

81
00:02:34,400 --> 00:02:36,879
at proofpoint my scope includes

82
00:02:36,879 --> 00:02:38,239
assisting with compliance

83
00:02:38,239 --> 00:02:40,800
sea cert activities peacert activities

84
00:02:40,800 --> 00:02:41,440
design

85
00:02:41,440 --> 00:02:42,800
and other consulting with business

86
00:02:42,800 --> 00:02:43,570
partners

87
00:02:43,570 --> 00:02:44,720
[Music]

88
00:02:44,720 --> 00:02:45,760
just to make sure that we're doing

89
00:02:45,760 --> 00:02:47,840
things the best that we can and my goal

90
00:02:47,840 --> 00:02:49,200
today is to really tell you about the

91
00:02:49,200 --> 00:02:50,560
how and why

92
00:02:50,560 --> 00:02:53,840
proofpoint can use long-lived passwords

93
00:02:53,840 --> 00:02:55,360
reduce the complexity of password

94
00:02:55,360 --> 00:02:57,360
composition and make sure we're keeping

95
00:02:57,360 --> 00:02:58,239
up to date on

96
00:02:58,239 --> 00:02:59,920
known compromised passwords and

97
00:02:59,920 --> 00:03:01,599
rejecting them as candidates

98
00:03:01,599 --> 00:03:04,640
for password sets and resets

99
00:03:04,640 --> 00:03:06,879
a little bit about where we started so

100
00:03:06,879 --> 00:03:08,000
our organization

101
00:03:08,000 --> 00:03:11,680
required long complex user passwords

102
00:03:11,680 --> 00:03:14,720
and we were requiring just every 60 days

103
00:03:14,720 --> 00:03:18,879
so very painful this project

104
00:03:18,879 --> 00:03:22,080
had in scope user memorized secrets so

105
00:03:22,080 --> 00:03:23,760
it doesn't apply to what we do with

106
00:03:23,760 --> 00:03:25,599
service accounts or other non-memorized

107
00:03:25,599 --> 00:03:27,200
secrets like api keys this is really

108
00:03:27,200 --> 00:03:28,640
about what are we asking

109
00:03:28,640 --> 00:03:31,680
users to make

110
00:03:31,680 --> 00:03:34,319
unique and memorable and then further

111
00:03:34,319 --> 00:03:35,920
this is really related to our internal

112
00:03:35,920 --> 00:03:37,440
passwords it's not something that was a

113
00:03:37,440 --> 00:03:38,959
customer facing change this is for

114
00:03:38,959 --> 00:03:40,000
employees and

115
00:03:40,000 --> 00:03:43,920
and how they access things so

116
00:03:43,920 --> 00:03:46,400
why are we doing this expiring complex

117
00:03:46,400 --> 00:03:47,200
passwords

118
00:03:47,200 --> 00:03:50,640
hurt us they're hard to remember and

119
00:03:50,640 --> 00:03:52,879
expiring passwords are going to require

120
00:03:52,879 --> 00:03:54,640
regular mental effort

121
00:03:54,640 --> 00:03:56,959
from users and when users have so many

122
00:03:56,959 --> 00:03:58,319
sites where passwords

123
00:03:58,319 --> 00:04:00,159
should be unique that effort just

124
00:04:00,159 --> 00:04:03,120
compounds so it leads users as lots of

125
00:04:03,120 --> 00:04:04,400
studies have shown

126
00:04:04,400 --> 00:04:07,680
to generate password generation patterns

127
00:04:07,680 --> 00:04:10,480
and reuse because they need shortcuts to

128
00:04:10,480 --> 00:04:12,239
remember all of these secrets

129
00:04:12,239 --> 00:04:14,799
users are likely to reuse passwords or

130
00:04:14,799 --> 00:04:16,560
those password patterns even across

131
00:04:16,560 --> 00:04:18,720
organizations so even if your

132
00:04:18,720 --> 00:04:20,320
organization like mine

133
00:04:20,320 --> 00:04:23,280
requires a has a policy that requires

134
00:04:23,280 --> 00:04:24,080
users

135
00:04:24,080 --> 00:04:26,240
to use a password unique to the

136
00:04:26,240 --> 00:04:27,440
organization

137
00:04:27,440 --> 00:04:29,600
it may be technically unique but based

138
00:04:29,600 --> 00:04:31,360
on a pattern that's used elsewhere

139
00:04:31,360 --> 00:04:32,880
and what does that mean if if

140
00:04:32,880 --> 00:04:35,759
compromised passwords from any source

141
00:04:35,759 --> 00:04:38,000
uh are are made available to an attacker

142
00:04:38,000 --> 00:04:40,240
they become a risk to your organization

143
00:04:40,240 --> 00:04:42,880
and that risk increases with expiry

144
00:04:42,880 --> 00:04:43,759
frequency because

145
00:04:43,759 --> 00:04:46,320
users are going to have to do this more

146
00:04:46,320 --> 00:04:47,759
often and the patterns may become

147
00:04:47,759 --> 00:04:50,160
even more predictable a compromise

148
00:04:50,160 --> 00:04:52,720
password that follows a pattern

149
00:04:52,720 --> 00:04:55,120
even if it's an old password if the path

150
00:04:55,120 --> 00:04:56,000
if the pattern

151
00:04:56,000 --> 00:04:58,400
increments or has some other indicator

152
00:04:58,400 --> 00:05:00,639
can be used to not only predict your

153
00:05:00,639 --> 00:05:01,759
current password

154
00:05:01,759 --> 00:05:03,120
but they could also predict all future

155
00:05:03,120 --> 00:05:04,720
passwords for your user so we want to

156
00:05:04,720 --> 00:05:05,919
stop that

157
00:05:05,919 --> 00:05:07,759
and so a successful implementation will

158
00:05:07,759 --> 00:05:09,360
address online and offline attacks

159
00:05:09,360 --> 00:05:10,880
including credential stuffing and we're

160
00:05:10,880 --> 00:05:11,440
going to use

161
00:05:11,440 --> 00:05:14,919
compliance with nist special publication

162
00:05:14,919 --> 00:05:17,840
863b and that's also going to add some

163
00:05:17,840 --> 00:05:21,120
additional hardening controls for us

164
00:05:21,120 --> 00:05:23,440
so we want to keep things simple we want

165
00:05:23,440 --> 00:05:24,639
memorized secrets

166
00:05:24,639 --> 00:05:27,320
uh according to compliance with nist

167
00:05:27,320 --> 00:05:28,960
863b

168
00:05:28,960 --> 00:05:30,960
uh you'll have memorized secrets that

169
00:05:30,960 --> 00:05:32,080
are greater than or equal to eight

170
00:05:32,080 --> 00:05:32,720
characters

171
00:05:32,720 --> 00:05:34,800
they will have no expiry no complexity

172
00:05:34,800 --> 00:05:37,440
requirements and you'll be

173
00:05:37,440 --> 00:05:40,720
ensuring that condemned and that you

174
00:05:40,720 --> 00:05:42,320
will condemn and rotate compromise

175
00:05:42,320 --> 00:05:43,440
passwords and there's some additional

176
00:05:43,440 --> 00:05:44,960
controls that you'll gain

177
00:05:44,960 --> 00:05:46,560
but it's important to note these

178
00:05:46,560 --> 00:05:48,080
controls are designed

179
00:05:48,080 --> 00:05:49,919
to be implemented together and it's

180
00:05:49,919 --> 00:05:52,000
unsafe to choose

181
00:05:52,000 --> 00:05:53,360
controls that you like such as no

182
00:05:53,360 --> 00:05:55,120
complexity without those that you aren't

183
00:05:55,120 --> 00:05:56,639
ready for such as checking against the

184
00:05:56,639 --> 00:05:58,639
compromise password

185
00:05:58,639 --> 00:06:00,639
and again to note that these are really

186
00:06:00,639 --> 00:06:02,080
about

187
00:06:02,080 --> 00:06:03,840
controls for memorized secrets and you

188
00:06:03,840 --> 00:06:05,360
should use different controls

189
00:06:05,360 --> 00:06:08,240
for service accounts and other secrets

190
00:06:08,240 --> 00:06:08,639
there is

191
00:06:08,639 --> 00:06:10,400
some opportunity for for modification

192
00:06:10,400 --> 00:06:12,319
for example in many cases

193
00:06:12,319 --> 00:06:14,160
it's not safe to just use eight

194
00:06:14,160 --> 00:06:15,759
characters so length

195
00:06:15,759 --> 00:06:17,440
is the kind of control that you might

196
00:06:17,440 --> 00:06:18,960
increase um

197
00:06:18,960 --> 00:06:20,479
you know where others you really should

198
00:06:20,479 --> 00:06:22,080
take a look at your risk and

199
00:06:22,080 --> 00:06:25,280
understand um you know not to modify

200
00:06:25,280 --> 00:06:26,080
them just because

201
00:06:26,080 --> 00:06:28,639
it's convenient to you um in this case

202
00:06:28,639 --> 00:06:29,520
we're going to be talking about

203
00:06:29,520 --> 00:06:31,840
addressing this according to level 2 or

204
00:06:31,840 --> 00:06:35,360
aal2 in the standard um so i'll be

205
00:06:35,360 --> 00:06:37,199
speaking with that as a reference point

206
00:06:37,199 --> 00:06:39,440
uh it's a moderate level of security um

207
00:06:39,440 --> 00:06:41,759
and it fit our risk tolerance

208
00:06:41,759 --> 00:06:43,440
um but you can see from the additional

209
00:06:43,440 --> 00:06:45,199
controls we also get great benefits in a

210
00:06:45,199 --> 00:06:46,080
password space

211
00:06:46,080 --> 00:06:48,639
that users really appreciate and

212
00:06:48,639 --> 00:06:49,520
remember that no

213
00:06:49,520 --> 00:06:51,360
expiry is really one of the key benefits

214
00:06:51,360 --> 00:06:52,960
obviously it's why you're here it's why

215
00:06:52,960 --> 00:06:53,680
you want to

216
00:06:53,680 --> 00:06:55,840
get into this position because you want

217
00:06:55,840 --> 00:06:58,080
to help your users and make security

218
00:06:58,080 --> 00:06:59,360
better

219
00:06:59,360 --> 00:07:01,120
but that key benefit allows users to

220
00:07:01,120 --> 00:07:03,120
choose long strong passwords

221
00:07:03,120 --> 00:07:04,720
that last until they're shown to be

222
00:07:04,720 --> 00:07:07,280
compromised

223
00:07:08,160 --> 00:07:09,360
so i'm going to talk a little bit about

224
00:07:09,360 --> 00:07:11,440
the have i been pwned approach it's

225
00:07:11,440 --> 00:07:12,720
something that we adopted into our

226
00:07:12,720 --> 00:07:15,280
architecture

227
00:07:15,440 --> 00:07:18,560
it's uh using a

228
00:07:18,560 --> 00:07:19,840
an algorithm that was developed in

229
00:07:19,840 --> 00:07:22,880
partnership with a cloud

230
00:07:22,880 --> 00:07:24,160
player because of the way that the

231
00:07:24,160 --> 00:07:26,000
service works online

232
00:07:26,000 --> 00:07:29,599
um they used the k anonymity approach

233
00:07:29,599 --> 00:07:30,400
and

234
00:07:30,400 --> 00:07:32,560
if you haven't read into it it's really

235
00:07:32,560 --> 00:07:33,599
fascinating it's it's

236
00:07:33,599 --> 00:07:35,919
a great read there's a lot of blogs um

237
00:07:35,919 --> 00:07:37,520
that troy has done on this topic

238
00:07:37,520 --> 00:07:40,560
uh and cloud for cloudflare as well

239
00:07:40,560 --> 00:07:42,400
that talk about it but essentially what

240
00:07:42,400 --> 00:07:44,160
you do is you generate

241
00:07:44,160 --> 00:07:47,280
an unsalted hash of a proposed password

242
00:07:47,280 --> 00:07:48,800
you then take the first five characters

243
00:07:48,800 --> 00:07:50,720
of that hash and you send it

244
00:07:50,720 --> 00:07:53,199
to the compromise password service in

245
00:07:53,199 --> 00:07:53,919
response

246
00:07:53,919 --> 00:07:56,319
you will receive a list of all hashes

247
00:07:56,319 --> 00:07:58,560
known to be compromised whose first five

248
00:07:58,560 --> 00:07:59,520
characters match

249
00:07:59,520 --> 00:08:01,759
the five characters that you sent and

250
00:08:01,759 --> 00:08:02,960
then you

251
00:08:02,960 --> 00:08:05,599
take the hash that you have and compare

252
00:08:05,599 --> 00:08:06,879
it against the returned list

253
00:08:06,879 --> 00:08:09,680
if your hash if the full hash is found

254
00:08:09,680 --> 00:08:11,199
on the list returned to you you reject

255
00:08:11,199 --> 00:08:13,039
it it's known compromised

256
00:08:13,039 --> 00:08:16,479
so you know troy work with cloudflare uh

257
00:08:16,479 --> 00:08:18,000
to design this method to send the

258
00:08:18,000 --> 00:08:19,520
request it's not going to compromise

259
00:08:19,520 --> 00:08:21,599
secrecy but does allow for scalability

260
00:08:21,599 --> 00:08:22,720
and performance

261
00:08:22,720 --> 00:08:24,400
and in our use really had to understand

262
00:08:24,400 --> 00:08:25,919
this model and ensure that we weren't

263
00:08:25,919 --> 00:08:26,800
breaking

264
00:08:26,800 --> 00:08:29,360
security or weakening security and

265
00:08:29,360 --> 00:08:31,280
missing assumptions that went into

266
00:08:31,280 --> 00:08:32,958
their service design so it's important

267
00:08:32,958 --> 00:08:34,240
to read up on that if you're going to do

268
00:08:34,240 --> 00:08:35,679
a similar implementation

269
00:08:35,679 --> 00:08:37,599
as you can see you can also do this

270
00:08:37,599 --> 00:08:39,839
offline and that's what we opted for

271
00:08:39,839 --> 00:08:42,080
it's a download of about 11 gigabytes

272
00:08:42,080 --> 00:08:42,559
it's

273
00:08:42,559 --> 00:08:45,760
again over 500 million hashes as of

274
00:08:45,760 --> 00:08:47,600
this year but one of the things that was

275
00:08:47,600 --> 00:08:48,959
important to us since

276
00:08:48,959 --> 00:08:52,320
our adoption of nist 863b required us to

277
00:08:52,320 --> 00:08:52,880
condemn

278
00:08:52,880 --> 00:08:54,880
known compromise passwords we couldn't

279
00:08:54,880 --> 00:08:56,240
just use the online service

280
00:08:56,240 --> 00:08:58,720
we wanted to also check internally

281
00:08:58,720 --> 00:09:00,720
compromised passwords say if a user is

282
00:09:00,720 --> 00:09:02,000
phished or if we do a phishing

283
00:09:02,000 --> 00:09:04,080
simulation and a user falls for it

284
00:09:04,080 --> 00:09:06,800
we want to make sure that we're taking

285
00:09:06,800 --> 00:09:07,519
our

286
00:09:07,519 --> 00:09:10,160
potential compromises and we're going to

287
00:09:10,160 --> 00:09:10,959
put them through

288
00:09:10,959 --> 00:09:12,970
a process to condemn them

289
00:09:12,970 --> 00:09:14,080
[Music]

290
00:09:14,080 --> 00:09:16,560
and include them so we can't just use

291
00:09:16,560 --> 00:09:18,959
have i been toned

292
00:09:18,959 --> 00:09:20,480
right we also need to address some key

293
00:09:20,480 --> 00:09:22,959
risks um along the way so

294
00:09:22,959 --> 00:09:24,640
you know reading through the nist

295
00:09:24,640 --> 00:09:27,120
document we're selecting our aal2

296
00:09:27,120 --> 00:09:28,959
control level gather those controls we

297
00:09:28,959 --> 00:09:30,160
need to do a gap assessment and

298
00:09:30,160 --> 00:09:31,120
understand

299
00:09:31,120 --> 00:09:32,640
you know where are we according to the

300
00:09:32,640 --> 00:09:34,320
controls that we're going to need

301
00:09:34,320 --> 00:09:35,839
do we have external dependencies yes you

302
00:09:35,839 --> 00:09:37,120
know we have have been phoned as a

303
00:09:37,120 --> 00:09:38,560
service if they go away

304
00:09:38,560 --> 00:09:41,360
then you know we we have an issue also

305
00:09:41,360 --> 00:09:42,880
you know other things can we use mutual

306
00:09:42,880 --> 00:09:44,320
tls in all cases

307
00:09:44,320 --> 00:09:47,279
um for remote logins like vpns uh what

308
00:09:47,279 --> 00:09:48,640
maintenance is needed for this

309
00:09:48,640 --> 00:09:50,560
compromise password store

310
00:09:50,560 --> 00:09:51,839
so yes you know we're going to update

311
00:09:51,839 --> 00:09:53,920
from have i been pwned and internally

312
00:09:53,920 --> 00:09:55,440
but what happens if that goes offline

313
00:09:55,440 --> 00:09:57,519
and it becomes unavailable and here i'm

314
00:09:57,519 --> 00:09:59,040
not speaking about service availability

315
00:09:59,040 --> 00:10:00,240
i'm not going to design an internal

316
00:10:00,240 --> 00:10:02,560
service that's more available

317
00:10:02,560 --> 00:10:03,839
than the online service that they

318
00:10:03,839 --> 00:10:06,079
provide but what if they close up shop

319
00:10:06,079 --> 00:10:07,360
well that was an interesting question

320
00:10:07,360 --> 00:10:09,920
that we asked and it was really

321
00:10:09,920 --> 00:10:11,040
quite interesting because as we were

322
00:10:11,040 --> 00:10:13,200
going through our process uh

323
00:10:13,200 --> 00:10:16,240
in june of 2019 um you know troy

324
00:10:16,240 --> 00:10:17,440
released a blog and said

325
00:10:17,440 --> 00:10:18,959
i'm you know this is really hard it's

326
00:10:18,959 --> 00:10:21,040
hard to maintain and i'm going to

327
00:10:21,040 --> 00:10:23,839
um you know be looking into selling have

328
00:10:23,839 --> 00:10:25,279
i been pwned and then of course by march

329
00:10:25,279 --> 00:10:26,240
of this year

330
00:10:26,240 --> 00:10:28,000
uh troy released another blog and said

331
00:10:28,000 --> 00:10:30,079
no i'm actually not gonna sell it

332
00:10:30,079 --> 00:10:32,640
um but that he called project svalbard

333
00:10:32,640 --> 00:10:34,240
and his decision process is also really

334
00:10:34,240 --> 00:10:35,440
interesting reading

335
00:10:35,440 --> 00:10:38,240
um but if you follow troy on twitter

336
00:10:38,240 --> 00:10:39,200
like i do

337
00:10:39,200 --> 00:10:42,480
you see a lot of pictures of him

338
00:10:42,480 --> 00:10:44,079
you know the gold coast of australia and

339
00:10:44,079 --> 00:10:45,839
this beautiful location riding around on

340
00:10:45,839 --> 00:10:46,880
the jet ski

341
00:10:46,880 --> 00:10:49,360
you know he's got a pretty uh great

342
00:10:49,360 --> 00:10:50,160
setup right

343
00:10:50,160 --> 00:10:52,560
and and so we knew in advance it's a

344
00:10:52,560 --> 00:10:54,640
one-man operation he's in a fantastic

345
00:10:54,640 --> 00:10:56,640
situation he does great work but if he

346
00:10:56,640 --> 00:10:58,480
wants to retire who can blame him

347
00:10:58,480 --> 00:11:00,240
so we really wanted to make sure that we

348
00:11:00,240 --> 00:11:01,360
took all of those things into

349
00:11:01,360 --> 00:11:02,800
consideration and we're glad that he's

350
00:11:02,800 --> 00:11:04,399
still operating it's fantastic service

351
00:11:04,399 --> 00:11:05,360
really helps

352
00:11:05,360 --> 00:11:07,920
um you know and and uh you know wish him

353
00:11:07,920 --> 00:11:09,200
all the best of course

354
00:11:09,200 --> 00:11:12,560
um so with that you'll talk a little bit

355
00:11:12,560 --> 00:11:14,399
about the technical implementation

356
00:11:14,399 --> 00:11:16,959
that we got into so you can see here

357
00:11:16,959 --> 00:11:18,240
we're going to as i mentioned we're

358
00:11:18,240 --> 00:11:19,519
going to do an offline and we're going

359
00:11:19,519 --> 00:11:20,800
to re-implement

360
00:11:20,800 --> 00:11:22,880
essentially the function that the

361
00:11:22,880 --> 00:11:24,800
website and the web api

362
00:11:24,800 --> 00:11:26,480
for have i been pwned does and that's

363
00:11:26,480 --> 00:11:28,560
here at the center our exposed password

364
00:11:28,560 --> 00:11:29,279
service

365
00:11:29,279 --> 00:11:31,279
that expose password service is going to

366
00:11:31,279 --> 00:11:32,320
reach out to

367
00:11:32,320 --> 00:11:33,920
have i been pwned check to see if there

368
00:11:33,920 --> 00:11:35,600
are new passwords available and it's

369
00:11:35,600 --> 00:11:37,440
going to download

370
00:11:37,440 --> 00:11:41,920
the offline list and then we're going to

371
00:11:41,920 --> 00:11:42,720
store that

372
00:11:42,720 --> 00:11:45,120
in our compromise password uh database

373
00:11:45,120 --> 00:11:46,560
it's going to have a couple of tables

374
00:11:46,560 --> 00:11:48,560
we're going to use the pup list and

375
00:11:48,560 --> 00:11:49,760
we're going to put that in our public

376
00:11:49,760 --> 00:11:50,720
password store

377
00:11:50,720 --> 00:11:52,320
and then any private compromise

378
00:11:52,320 --> 00:11:55,279
passwords go into our private table

379
00:11:55,279 --> 00:11:57,760
um any request that comes in through the

380
00:11:57,760 --> 00:11:59,680
load balancer from either ldap or active

381
00:11:59,680 --> 00:12:01,600
directory

382
00:12:01,600 --> 00:12:03,200
checking for passwords going to send

383
00:12:03,200 --> 00:12:05,279
five characters just like in the normal

384
00:12:05,279 --> 00:12:08,320
k anonymity hash approach uh

385
00:12:08,320 --> 00:12:10,560
to that exposed password service but

386
00:12:10,560 --> 00:12:12,160
then the list is generated

387
00:12:12,160 --> 00:12:14,399
uh by looking at both tables so any

388
00:12:14,399 --> 00:12:16,079
publicly known passwords that start with

389
00:12:16,079 --> 00:12:17,839
that hash or any privately known

390
00:12:17,839 --> 00:12:21,519
pass that start with that hash um

391
00:12:21,519 --> 00:12:23,360
and we're gonna rely on sort of the

392
00:12:23,360 --> 00:12:24,959
password quality checks that are

393
00:12:24,959 --> 00:12:26,639
available to you whether using windows

394
00:12:26,639 --> 00:12:26,959
or

395
00:12:26,959 --> 00:12:29,760
linux or whatever other ldap um you know

396
00:12:29,760 --> 00:12:30,880
or password

397
00:12:30,880 --> 00:12:32,959
checking solution so look for those as

398
00:12:32,959 --> 00:12:34,160
you do your implementation and

399
00:12:34,160 --> 00:12:35,200
essentially use

400
00:12:35,200 --> 00:12:39,200
this check as you know your

401
00:12:39,200 --> 00:12:41,279
quality step instead of a say complexity

402
00:12:41,279 --> 00:12:42,399
check

403
00:12:42,399 --> 00:12:44,160
um it's really important also to note

404
00:12:44,160 --> 00:12:45,600
that since we have a private table

405
00:12:45,600 --> 00:12:47,440
we need to restrict who can request

406
00:12:47,440 --> 00:12:49,040
hashes well why is that

407
00:12:49,040 --> 00:12:51,839
anyone can make a hash request to the

408
00:12:51,839 --> 00:12:52,639
online

409
00:12:52,639 --> 00:12:55,120
public have it been phone service and so

410
00:12:55,120 --> 00:12:56,880
an attacker could

411
00:12:56,880 --> 00:13:00,320
um take a five take a hash a potential

412
00:13:00,320 --> 00:13:01,920
hash

413
00:13:01,920 --> 00:13:03,440
for a user and in this case i'm speaking

414
00:13:03,440 --> 00:13:05,440
of potentially an internal

415
00:13:05,440 --> 00:13:08,720
user who is or an attacker who has

416
00:13:08,720 --> 00:13:10,800
access to the service internally

417
00:13:10,800 --> 00:13:13,279
if they take a proposed password and

418
00:13:13,279 --> 00:13:14,480
they submit it

419
00:13:14,480 --> 00:13:17,920
they get a list from us that potentially

420
00:13:17,920 --> 00:13:19,279
includes different hashes than what's

421
00:13:19,279 --> 00:13:20,959
available publicly so if they diff those

422
00:13:20,959 --> 00:13:22,320
lists if they compare them

423
00:13:22,320 --> 00:13:23,360
and they pull out everything that's

424
00:13:23,360 --> 00:13:25,440
available publicly they could know this

425
00:13:25,440 --> 00:13:25,920
is a

426
00:13:25,920 --> 00:13:28,560
password that was used here now you say

427
00:13:28,560 --> 00:13:30,079
well only compromise passwords go in the

428
00:13:30,079 --> 00:13:31,200
private database

429
00:13:31,200 --> 00:13:33,440
yes but again we've established that

430
00:13:33,440 --> 00:13:34,480
users

431
00:13:34,480 --> 00:13:37,600
use patterns and so if they've used our

432
00:13:37,600 --> 00:13:39,120
password as a pattern

433
00:13:39,120 --> 00:13:40,880
potentially we're compromising our own

434
00:13:40,880 --> 00:13:42,880
user security

435
00:13:42,880 --> 00:13:45,279
where we may be exposing a pattern that

436
00:13:45,279 --> 00:13:46,880
a

437
00:13:46,880 --> 00:13:48,399
user has used elsewhere and we want to

438
00:13:48,399 --> 00:13:50,399
protect user privacy to protect our

439
00:13:50,399 --> 00:13:51,279
users

440
00:13:51,279 --> 00:13:53,440
uh not just at work but in their own

441
00:13:53,440 --> 00:13:54,959
personal lives as well

442
00:13:54,959 --> 00:13:56,240
so even though they're not supposed to

443
00:13:56,240 --> 00:13:57,519
if they've used that password elsewhere

444
00:13:57,519 --> 00:13:59,279
we want to make sure that that's private

445
00:13:59,279 --> 00:14:02,399
um so that's an important thing and then

446
00:14:02,399 --> 00:14:04,399
there's also this ceaser use case so in

447
00:14:04,399 --> 00:14:05,839
the event of an incident we give our

448
00:14:05,839 --> 00:14:07,360
cert users the ability

449
00:14:07,360 --> 00:14:09,519
not just to read uh passwords from the

450
00:14:09,519 --> 00:14:11,120
service but also to post into the

451
00:14:11,120 --> 00:14:12,480
service so they can

452
00:14:12,480 --> 00:14:16,240
send a post request with a hash

453
00:14:16,240 --> 00:14:18,240
for a compromise password and and submit

454
00:14:18,240 --> 00:14:20,079
it and add it to that private table

455
00:14:20,079 --> 00:14:23,040
in the event of a compromise all right

456
00:14:23,040 --> 00:14:24,320
maintenance workflows i talked a little

457
00:14:24,320 --> 00:14:25,360
bit about that

458
00:14:25,360 --> 00:14:27,920
um designing this technical method to

459
00:14:27,920 --> 00:14:29,199
update and maintain that table

460
00:14:29,199 --> 00:14:32,000
since we wanted to regularly consume the

461
00:14:32,000 --> 00:14:32,959
public data

462
00:14:32,959 --> 00:14:34,320
we wanted a separate table for private

463
00:14:34,320 --> 00:14:36,240
passwords this satisfied access control

464
00:14:36,240 --> 00:14:37,680
and it also gave us the ability to more

465
00:14:37,680 --> 00:14:39,440
quickly just drop that old table and

466
00:14:39,440 --> 00:14:40,800
it's much more performant to just say

467
00:14:40,800 --> 00:14:41,680
here's the new

468
00:14:41,680 --> 00:14:43,279
updates you know build that table

469
00:14:43,279 --> 00:14:45,279
directly we also had to build that cert

470
00:14:45,279 --> 00:14:46,959
workflow to uniformly hash passwords and

471
00:14:46,959 --> 00:14:48,240
submit them as condemned

472
00:14:48,240 --> 00:14:50,880
and we needed to address user resets so

473
00:14:50,880 --> 00:14:52,000
there's a lot of ways you can do this

474
00:14:52,000 --> 00:14:52,880
you may be

475
00:14:52,880 --> 00:14:55,600
using commercial tools or other options

476
00:14:55,600 --> 00:14:56,399
so

477
00:14:56,399 --> 00:14:58,399
i want to speak generally to what we

478
00:14:58,399 --> 00:15:00,480
believe is an ideal flow for us

479
00:15:00,480 --> 00:15:01,920
you might want to look into this and see

480
00:15:01,920 --> 00:15:03,519
how it fits with you and what things you

481
00:15:03,519 --> 00:15:04,399
could or couldn't

482
00:15:04,399 --> 00:15:08,160
adopt it's never good in my opinion to

483
00:15:08,160 --> 00:15:10,720
ask users to submit passwords to many

484
00:15:10,720 --> 00:15:11,360
online

485
00:15:11,360 --> 00:15:13,199
forms right that's just bad practice it

486
00:15:13,199 --> 00:15:14,560
leads to encouraging people to do

487
00:15:14,560 --> 00:15:16,079
phishing so if you can unify that

488
00:15:16,079 --> 00:15:17,600
experience it's best

489
00:15:17,600 --> 00:15:19,360
and our ideal flow might look something

490
00:15:19,360 --> 00:15:21,519
like this ask a user to confirm their

491
00:15:21,519 --> 00:15:22,079
old

492
00:15:22,079 --> 00:15:23,680
compromised password so if you have a

493
00:15:23,680 --> 00:15:25,199
user who's been phished you say go to

494
00:15:25,199 --> 00:15:25,519
this

495
00:15:25,519 --> 00:15:28,639
site to reset it it's best if this site

496
00:15:28,639 --> 00:15:30,079
is the same site that they use to set

497
00:15:30,079 --> 00:15:31,440
passwords and reset passwords

498
00:15:31,440 --> 00:15:33,399
all day long we're going to use one

499
00:15:33,399 --> 00:15:35,600
single

500
00:15:35,600 --> 00:15:39,120
known easy url it's not complicated it's

501
00:15:39,120 --> 00:15:40,320
internal

502
00:15:40,320 --> 00:15:41,600
you know it has all the hallmarks that

503
00:15:41,600 --> 00:15:43,120
you can to say this is a trusted thing

504
00:15:43,120 --> 00:15:44,720
and you use it frequently

505
00:15:44,720 --> 00:15:46,320
so you ask the user to confirm their old

506
00:15:46,320 --> 00:15:48,320
compromise password so then this will

507
00:15:48,320 --> 00:15:50,500
take a hash and it will

508
00:15:50,500 --> 00:15:51,680
[Music]

509
00:15:51,680 --> 00:15:54,000
then use that hash of the old compromise

510
00:15:54,000 --> 00:15:55,120
password

511
00:15:55,120 --> 00:15:57,519
or the normal login sequence to check

512
00:15:57,519 --> 00:15:59,199
and see is this user able to log in with

513
00:15:59,199 --> 00:16:00,240
that old password

514
00:16:00,240 --> 00:16:02,480
yes then you ask a user to set a new

515
00:16:02,480 --> 00:16:03,680
password and this is the one that we'll

516
00:16:03,680 --> 00:16:04,079
use

517
00:16:04,079 --> 00:16:06,000
to do the have a binp check against the

518
00:16:06,000 --> 00:16:07,360
new

519
00:16:07,360 --> 00:16:08,800
the password against the known

520
00:16:08,800 --> 00:16:11,040
compromised and if it's okay we'll

521
00:16:11,040 --> 00:16:12,800
accept that for change for changes

522
00:16:12,800 --> 00:16:14,800
since we've confirmed the user's old

523
00:16:14,800 --> 00:16:16,399
hash was valid

524
00:16:16,399 --> 00:16:18,399
then we do our reset we can then take

525
00:16:18,399 --> 00:16:20,240
that hash of the old password and

526
00:16:20,240 --> 00:16:21,120
condemn it

527
00:16:21,120 --> 00:16:23,120
now what does this do it preserves user

528
00:16:23,120 --> 00:16:24,560
privacy because the c cert doesn't need

529
00:16:24,560 --> 00:16:26,800
to find use or otherwise retrieve that

530
00:16:26,800 --> 00:16:28,880
old password from the user who's

531
00:16:28,880 --> 00:16:30,240
experienced the compromise

532
00:16:30,240 --> 00:16:32,320
it simplifies the end user experience

533
00:16:32,320 --> 00:16:34,480
and it means that we can hash it in both

534
00:16:34,480 --> 00:16:37,199
shot1 and ntlm as necessary to pre you

535
00:16:37,199 --> 00:16:37,759
know

536
00:16:37,759 --> 00:16:40,720
provide those hashes in line with what

537
00:16:40,720 --> 00:16:41,199
we get

538
00:16:41,199 --> 00:16:43,759
from have i been pumped as a service and

539
00:16:43,759 --> 00:16:44,560
so finally

540
00:16:44,560 --> 00:16:46,639
we had to look into some some spend some

541
00:16:46,639 --> 00:16:48,000
time looking at what resources and

542
00:16:48,000 --> 00:16:51,759
procedures we would use in the event

543
00:16:51,759 --> 00:16:53,839
that something like a project's involved

544
00:16:53,839 --> 00:16:55,199
come up again

545
00:16:55,199 --> 00:16:57,519
and the opponent would decide to go

546
00:16:57,519 --> 00:16:58,959
offline or change the way it did

547
00:16:58,959 --> 00:16:59,519
business

548
00:16:59,519 --> 00:17:02,000
so we planned and prepared sort of how

549
00:17:02,000 --> 00:17:02,880
would we keep our

550
00:17:02,880 --> 00:17:06,559
own database updated of as you would

551
00:17:06,559 --> 00:17:08,640
publicly known breach passwords and add

552
00:17:08,640 --> 00:17:10,880
them to the table do emailization so

553
00:17:10,880 --> 00:17:12,799
thankfully as i said uh troy's

554
00:17:12,799 --> 00:17:14,720
continuing with his work

555
00:17:14,720 --> 00:17:18,160
and uh so we'll just keep those uh

556
00:17:18,160 --> 00:17:20,319
items on the shelf and hopefully not

557
00:17:20,319 --> 00:17:22,400
have to use them anytime soon

558
00:17:22,400 --> 00:17:24,400
so lastly i want to talk about lessons

559
00:17:24,400 --> 00:17:25,839
learned and next steps

560
00:17:25,839 --> 00:17:27,520
one of the key things that we did was a

561
00:17:27,520 --> 00:17:30,400
rolling deployment

562
00:17:30,559 --> 00:17:32,000
we wanted this to be a good user

563
00:17:32,000 --> 00:17:33,679
experience but we couldn't

564
00:17:33,679 --> 00:17:35,679
set all users to a longer password

565
00:17:35,679 --> 00:17:37,039
expiry

566
00:17:37,039 --> 00:17:39,039
in active directory while they still had

567
00:17:39,039 --> 00:17:41,280
old potentially bad passwords

568
00:17:41,280 --> 00:17:43,919
so say a user was able to set password

569
00:17:43,919 --> 00:17:45,440
one two three four five

570
00:17:45,440 --> 00:17:47,760
exclamation point and they'd been using

571
00:17:47,760 --> 00:17:49,679
that password and they had their pattern

572
00:17:49,679 --> 00:17:51,600
and you know test our complexity checks

573
00:17:51,600 --> 00:17:53,360
and you know our length and whatever it

574
00:17:53,360 --> 00:17:54,000
was

575
00:17:54,000 --> 00:17:56,960
but if we just say hey the next time you

576
00:17:56,960 --> 00:17:58,320
set a password

577
00:17:58,320 --> 00:18:00,080
you'll be checked against uh our

578
00:18:00,080 --> 00:18:01,600
compromise password store

579
00:18:01,600 --> 00:18:03,760
and i'm gonna up your expiry to you know

580
00:18:03,760 --> 00:18:05,520
forever or what have you

581
00:18:05,520 --> 00:18:08,960
um we would basically

582
00:18:08,960 --> 00:18:10,880
be extending the life of that terrible

583
00:18:10,880 --> 00:18:13,120
password so we rolled out the service

584
00:18:13,120 --> 00:18:14,000
while our

585
00:18:14,000 --> 00:18:17,360
six day expiry was still in effect then

586
00:18:17,360 --> 00:18:19,840
at the end of uh so within that next 60

587
00:18:19,840 --> 00:18:21,520
days each user in the organization would

588
00:18:21,520 --> 00:18:22,880
have a password change

589
00:18:22,880 --> 00:18:24,799
so those new passwords were going to be

590
00:18:24,799 --> 00:18:26,000
checked to see if they were known

591
00:18:26,000 --> 00:18:26,960
compromised

592
00:18:26,960 --> 00:18:29,840
and so along that rolling 60 days the

593
00:18:29,840 --> 00:18:31,039
users are going to set to

594
00:18:31,039 --> 00:18:34,160
new um

595
00:18:34,720 --> 00:18:37,280
robust passwords and then at the end of

596
00:18:37,280 --> 00:18:38,559
the 60 days they would have another

597
00:18:38,559 --> 00:18:39,520
password change

598
00:18:39,520 --> 00:18:41,919
but at that 61st day we would up the

599
00:18:41,919 --> 00:18:42,960
expiry

600
00:18:42,960 --> 00:18:44,640
so at the end of the 60 days they would

601
00:18:44,640 --> 00:18:46,080
all have a simple non-compromised

602
00:18:46,080 --> 00:18:46,799
password

603
00:18:46,799 --> 00:18:48,400
and then after the 60 days had elapsed

604
00:18:48,400 --> 00:18:50,640
they'd have one more password change

605
00:18:50,640 --> 00:18:53,200
but but under that new change the

606
00:18:53,200 --> 00:18:54,480
lifetime increases

607
00:18:54,480 --> 00:18:55,760
so we knew that anyone who had a

608
00:18:55,760 --> 00:18:57,039
password greater than or equal to 60

609
00:18:57,039 --> 00:18:58,559
days old had a good one and we were fine

610
00:18:58,559 --> 00:18:59,280
to increase

611
00:18:59,280 --> 00:19:01,919
the expiry so we continued to use this

612
00:19:01,919 --> 00:19:02,480
method

613
00:19:02,480 --> 00:19:04,400
uh to make the process more or less

614
00:19:04,400 --> 00:19:05,760
seamless with at least

615
00:19:05,760 --> 00:19:07,520
some noticeable benefit so in that first

616
00:19:07,520 --> 00:19:09,120
60 day users got

617
00:19:09,120 --> 00:19:10,480
simple passwords that weren't

618
00:19:10,480 --> 00:19:13,120
compromised and then the second change

619
00:19:13,120 --> 00:19:15,520
they got simple long-lived passwords and

620
00:19:15,520 --> 00:19:16,880
that password could live

621
00:19:16,880 --> 00:19:20,000
as long as you needed it to um so i just

622
00:19:20,000 --> 00:19:21,679
mentioned we're doing this in a

623
00:19:21,679 --> 00:19:24,720
phased approach because you know

624
00:19:24,720 --> 00:19:27,280
our case some controls that we needed to

625
00:19:27,280 --> 00:19:28,559
implement weren't ready

626
00:19:28,559 --> 00:19:30,400
and as i mentioned previously it's

627
00:19:30,400 --> 00:19:32,160
important to not just pick and choose

628
00:19:32,160 --> 00:19:33,280
we did want to make a risk-based

629
00:19:33,280 --> 00:19:34,640
assessment of which controls we could do

630
00:19:34,640 --> 00:19:35,200
now

631
00:19:35,200 --> 00:19:37,200
which might take more time phase them

632
00:19:37,200 --> 00:19:38,720
into our adoption of the standard

633
00:19:38,720 --> 00:19:40,640
and we were able to move quickly and

634
00:19:40,640 --> 00:19:41,840
keep ourselves to that aggressive

635
00:19:41,840 --> 00:19:42,640
timeline

636
00:19:42,640 --> 00:19:43,840
to close the gap on those missing

637
00:19:43,840 --> 00:19:46,400
controls the private password store

638
00:19:46,400 --> 00:19:49,760
was another interesting situation

639
00:19:49,760 --> 00:19:51,360
so we were trying to figure out how to

640
00:19:51,360 --> 00:19:54,799
handle user resets and the complication

641
00:19:54,799 --> 00:19:56,160
and how it integrated with various tools

642
00:19:56,160 --> 00:19:57,039
that we used

643
00:19:57,039 --> 00:19:58,400
and so this was a great time to have

644
00:19:58,400 --> 00:20:00,080
dialogue not just from security people

645
00:20:00,080 --> 00:20:01,520
but you know admins and

646
00:20:01,520 --> 00:20:04,000
and and uh you know developers everybody

647
00:20:04,000 --> 00:20:05,120
at the table

648
00:20:05,120 --> 00:20:06,480
and you know one of the participants

649
00:20:06,480 --> 00:20:08,559
asked us well do we need

650
00:20:08,559 --> 00:20:10,240
a custom password reset tool in this

651
00:20:10,240 --> 00:20:11,760
case that checks the old password and

652
00:20:11,760 --> 00:20:13,039
condemns it sort of like i mentioned in

653
00:20:13,039 --> 00:20:14,640
my ideal flow

654
00:20:14,640 --> 00:20:15,840
and i said well you know that's a really

655
00:20:15,840 --> 00:20:18,240
great question um we thought

656
00:20:18,240 --> 00:20:20,000
well what other options would we have

657
00:20:20,000 --> 00:20:21,440
and so someone suggested

658
00:20:21,440 --> 00:20:23,280
well what if every time a user sets

659
00:20:23,280 --> 00:20:25,520
their password we just pre-condemn it

660
00:20:25,520 --> 00:20:28,880
so if i'm my new simple password like

661
00:20:28,880 --> 00:20:31,120
correct horse battery staple of course

662
00:20:31,120 --> 00:20:32,559
you know that one's already condemned

663
00:20:32,559 --> 00:20:33,039
but

664
00:20:33,039 --> 00:20:35,520
say it was available if i'm going to set

665
00:20:35,520 --> 00:20:37,039
correct horse battery staple why don't i

666
00:20:37,039 --> 00:20:39,039
just pre-condemn that

667
00:20:39,039 --> 00:20:42,080
and then anytime a user's password gets

668
00:20:42,080 --> 00:20:43,200
compromised

669
00:20:43,200 --> 00:20:45,919
they won't be able to you know give that

670
00:20:45,919 --> 00:20:47,600
password if they wanted to continue that

671
00:20:47,600 --> 00:20:48,000
pattern

672
00:20:48,000 --> 00:20:51,200
or try to keep that in

673
00:20:51,200 --> 00:20:54,159
in place we could just hash it and store

674
00:20:54,159 --> 00:20:55,520
it and then at any password change we

675
00:20:55,520 --> 00:20:56,720
don't need to say is the user really

676
00:20:56,720 --> 00:20:58,320
giving us their actual password

677
00:20:58,320 --> 00:20:59,760
we still don't need the cert to go and

678
00:20:59,760 --> 00:21:02,080
look at their password or ask them for

679
00:21:02,080 --> 00:21:03,039
it

680
00:21:03,039 --> 00:21:05,760
it takes out any of those issues and we

681
00:21:05,760 --> 00:21:06,400
could just say

682
00:21:06,400 --> 00:21:07,760
hey their old password's already in the

683
00:21:07,760 --> 00:21:10,400
list but of course we can't do that

684
00:21:10,400 --> 00:21:13,760
well why is that in order for k n n k

685
00:21:13,760 --> 00:21:16,159
anonymity to work we need to have

686
00:21:16,159 --> 00:21:17,600
unsalted hashes

687
00:21:17,600 --> 00:21:19,600
so that we can use the same hash list

688
00:21:19,600 --> 00:21:21,280
that we get from have i been pwned

689
00:21:21,280 --> 00:21:22,400
and so what that would do is it would

690
00:21:22,400 --> 00:21:24,480
mean that private password database

691
00:21:24,480 --> 00:21:26,480
would now be a weak point in our

692
00:21:26,480 --> 00:21:28,240
environment so these are really

693
00:21:28,240 --> 00:21:29,280
interesting kinds of

694
00:21:29,280 --> 00:21:32,720
things to ask because since those hashes

695
00:21:32,720 --> 00:21:34,000
would be insulted we only

696
00:21:34,000 --> 00:21:37,039
want condemned passwords in the list we

697
00:21:37,039 --> 00:21:38,559
don't want to introduce risk

698
00:21:38,559 --> 00:21:40,000
downgrading enterprise security and

699
00:21:40,000 --> 00:21:41,679
saying hey you know you can't easily get

700
00:21:41,679 --> 00:21:42,720
at hashes

701
00:21:42,720 --> 00:21:43,840
you know for this service or that

702
00:21:43,840 --> 00:21:45,120
service but if you go and attack this

703
00:21:45,120 --> 00:21:46,240
database you then get

704
00:21:46,240 --> 00:21:49,440
all current and previously compromised

705
00:21:49,440 --> 00:21:51,600
unsalted hashes that would be a huge

706
00:21:51,600 --> 00:21:53,360
problem so it's a great discussion

707
00:21:53,360 --> 00:21:55,280
i'm so thankful that that got asked

708
00:21:55,280 --> 00:21:56,559
because those are the kinds of things

709
00:21:56,559 --> 00:21:58,640
that you need to do in your organization

710
00:21:58,640 --> 00:22:00,880
ask those questions get that input from

711
00:22:00,880 --> 00:22:02,480
from stakeholders try to find those

712
00:22:02,480 --> 00:22:03,840
places where

713
00:22:03,840 --> 00:22:07,120
shortcuts or things that improve user

714
00:22:07,120 --> 00:22:08,159
security

715
00:22:08,159 --> 00:22:11,520
help you so thankful for you know those

716
00:22:11,520 --> 00:22:12,799
kinds of

717
00:22:12,799 --> 00:22:14,480
interactions and it was great it was it

718
00:22:14,480 --> 00:22:16,000
was essential for our project

719
00:22:16,000 --> 00:22:17,679
uh to succeed in the way that it did

720
00:22:17,679 --> 00:22:19,200
because at the end of the day

721
00:22:19,200 --> 00:22:22,000
the last lesson that i learned this was

722
00:22:22,000 --> 00:22:22,320
an

723
00:22:22,320 --> 00:22:24,720
absolute joy so many things we do in

724
00:22:24,720 --> 00:22:26,960
security are complicated or they make

725
00:22:26,960 --> 00:22:28,640
things more difficult for users they

726
00:22:28,640 --> 00:22:30,000
create friction

727
00:22:30,000 --> 00:22:33,039
but i just want to again express my

728
00:22:33,039 --> 00:22:34,559
deep bang leadership and co-workers at

729
00:22:34,559 --> 00:22:36,799
proofpoint we got a lot of great

730
00:22:36,799 --> 00:22:37,440
feedback

731
00:22:37,440 --> 00:22:39,600
from our youth and i absolutely love the

732
00:22:39,600 --> 00:22:41,360
chance i had security better

733
00:22:41,360 --> 00:22:43,360
people's computer experience more

734
00:22:43,360 --> 00:22:44,799
enjoyable

735
00:22:44,799 --> 00:22:47,120
and i really wanted to share this with

736
00:22:47,120 --> 00:22:47,919
all of you

737
00:22:47,919 --> 00:22:49,840
because anyone else in security who has

738
00:22:49,840 --> 00:22:51,520
an opportunity to take on

739
00:22:51,520 --> 00:22:54,880
a project like this it's it was just

740
00:22:54,880 --> 00:22:55,440
amazing

741
00:22:55,440 --> 00:22:57,760
to you know do both of those things and

742
00:22:57,760 --> 00:22:59,440
that was that was sort of the

743
00:22:59,440 --> 00:23:01,360
key thing for me that i took away was

744
00:23:01,360 --> 00:23:02,720
just joy

745
00:23:02,720 --> 00:23:04,480
so that's it for me i hope it was

746
00:23:04,480 --> 00:23:05,760
helpful and uh

747
00:23:05,760 --> 00:23:09,840
thank you very much for your time

748
00:23:10,400 --> 00:23:12,559
okay thank you say that was kind of

749
00:23:12,559 --> 00:23:13,600
really

750
00:23:13,600 --> 00:23:15,120
really interesting talk and i think you

751
00:23:15,120 --> 00:23:17,039
probably did more for security by making

752
00:23:17,039 --> 00:23:19,039
it easier for users than that

753
00:23:19,039 --> 00:23:21,840
and installing another password

754
00:23:21,840 --> 00:23:23,600
assessment tool and stuff like this

755
00:23:23,600 --> 00:23:25,280
there's actually quite a couple of

756
00:23:25,280 --> 00:23:27,280
questions so someone are

757
00:23:27,280 --> 00:23:30,960
someone actually seems seems to uh

758
00:23:30,960 --> 00:23:33,039
mirror my feelings about saying i'm

759
00:23:33,039 --> 00:23:34,799
really eager to hear how this made

760
00:23:34,799 --> 00:23:38,159
employees very very happy

761
00:23:38,159 --> 00:23:42,000
so that's good then arkadeep

762
00:23:42,000 --> 00:23:44,880
asks are you sure that have i been pawn

763
00:23:44,880 --> 00:23:45,760
will be able

764
00:23:45,760 --> 00:23:48,240
to detect all compromised passwords if

765
00:23:48,240 --> 00:23:50,640
not what is the accuracy of have i been

766
00:23:50,640 --> 00:23:52,400
planned

767
00:23:52,400 --> 00:23:57,120
i mean so in my experience um all of the

768
00:23:57,120 --> 00:23:59,440
um breaches that troy has been able to

769
00:23:59,440 --> 00:24:00,159
put into

770
00:24:00,159 --> 00:24:05,039
um you know that of you know 570

771
00:24:05,039 --> 00:24:09,360
million passwords um not

772
00:24:09,360 --> 00:24:12,720
tried uh hasn't in the the list at least

773
00:24:12,720 --> 00:24:16,400
um you know not before long um i think

774
00:24:16,400 --> 00:24:18,000
you know he and the team do a fantastic

775
00:24:18,000 --> 00:24:20,320
job there so i think that

776
00:24:20,320 --> 00:24:23,760
um i can't guarantee that all

777
00:24:23,760 --> 00:24:25,679
compromise passwords go into it but from

778
00:24:25,679 --> 00:24:26,799
a service that's

779
00:24:26,799 --> 00:24:30,840
free uh the amount of threat it's there

780
00:24:30,840 --> 00:24:34,960
uh you know nist doesn't specify

781
00:24:34,960 --> 00:24:37,760
how much security you need from this or

782
00:24:37,760 --> 00:24:38,000
or

783
00:24:38,000 --> 00:24:39,919
how you maintain your list for us it was

784
00:24:39,919 --> 00:24:41,039
a great fit

785
00:24:41,039 --> 00:24:45,279
um and so that's way better than average

786
00:24:45,279 --> 00:24:48,480
okay i would say that that mirrors my

787
00:24:48,480 --> 00:24:51,440
experience so the next question

788
00:24:51,440 --> 00:24:54,480
case nila is did you consider using

789
00:24:54,480 --> 00:25:00,000
password managers

790
00:25:00,000 --> 00:25:01,919
password managers are fantastic

791
00:25:01,919 --> 00:25:04,320
absolutely recommend password managers

792
00:25:04,320 --> 00:25:08,720
um generally at the end of the day um

793
00:25:08,720 --> 00:25:11,600
you know security is layered and while

794
00:25:11,600 --> 00:25:12,960
you can recommend

795
00:25:12,960 --> 00:25:15,200
the use of password managers users have

796
00:25:15,200 --> 00:25:17,600
to log into something

797
00:25:17,600 --> 00:25:20,720
and so having a solution that helps

798
00:25:20,720 --> 00:25:22,880
for user logins where secrets must be

799
00:25:22,880 --> 00:25:24,000
memorized is

800
00:25:24,000 --> 00:25:27,039
also important so in my opinion why not

801
00:25:27,039 --> 00:25:28,159
both

802
00:25:28,159 --> 00:25:30,880
okay cool then uh another question by

803
00:25:30,880 --> 00:25:32,000
robin stevens

804
00:25:32,000 --> 00:25:33,679
how often have you seen people actually

805
00:25:33,679 --> 00:25:37,679
trying one of the compromise passwords

806
00:25:38,159 --> 00:25:43,200
um yeah so um i

807
00:25:43,200 --> 00:25:46,400
um i think that

808
00:25:46,400 --> 00:25:49,840
instead of tlp white i'll give a general

809
00:25:49,840 --> 00:25:50,480
there

810
00:25:50,480 --> 00:25:54,720
um and just say the gruesome

811
00:25:54,720 --> 00:25:57,840
is that

812
00:25:58,880 --> 00:26:01,120
a potentially compromised we're going to

813
00:26:01,120 --> 00:26:02,640
get a sort of reject message

814
00:26:02,640 --> 00:26:04,960
and so in that reject message it's you

815
00:26:04,960 --> 00:26:05,679
know they

816
00:26:05,679 --> 00:26:08,640
they just have to try uh try again we

817
00:26:08,640 --> 00:26:09,600
give good guidance

818
00:26:09,600 --> 00:26:11,679
about how to construct a memorable

819
00:26:11,679 --> 00:26:12,799
passphrase

820
00:26:12,799 --> 00:26:15,200
and we haven't had any user complaints

821
00:26:15,200 --> 00:26:16,960
um that they're unable to

822
00:26:16,960 --> 00:26:18,640
find a solution to the problem of

823
00:26:18,640 --> 00:26:20,880
setting a good password

824
00:26:20,880 --> 00:26:24,000
okay then a next question by peter

825
00:26:24,000 --> 00:26:27,520
is a similar to the previous one do you

826
00:26:27,520 --> 00:26:29,520
do you plan to import passwords from

827
00:26:29,520 --> 00:26:31,520
other sources than have ever been panned

828
00:26:31,520 --> 00:26:34,080
like from some other breaches that have

829
00:26:34,080 --> 00:26:36,880
been panned is not aware

830
00:26:36,880 --> 00:26:39,520
given the scale and scope of habitponent

831
00:26:39,520 --> 00:26:40,159
we

832
00:26:40,159 --> 00:26:43,840
haven't um found a need to do that

833
00:26:43,840 --> 00:26:46,240
but our service easily makes that

834
00:26:46,240 --> 00:26:47,679
available we would just add additional

835
00:26:47,679 --> 00:26:49,279
tables if we have additional sources

836
00:26:49,279 --> 00:26:51,679
we would want to normalize them we have

837
00:26:51,679 --> 00:26:52,480
to make sure

838
00:26:52,480 --> 00:26:54,960
that the passwords were vetted that they

839
00:26:54,960 --> 00:26:55,600
were either

840
00:26:55,600 --> 00:26:58,240
unsalted sha-1 or unsalted ntlm so that

841
00:26:58,240 --> 00:26:59,440
they could be compared

842
00:26:59,440 --> 00:27:03,039
uh you know uniformly in the service so

843
00:27:03,039 --> 00:27:04,240
if you have

844
00:27:04,240 --> 00:27:06,080
other sources that you prefer uh it's

845
00:27:06,080 --> 00:27:09,200
just as easy as adding a new table

846
00:27:09,200 --> 00:27:10,960
okay and then there's two similar

847
00:27:10,960 --> 00:27:12,320
questions both by an

848
00:27:12,320 --> 00:27:14,559
anonymous attendee or an anonymous

849
00:27:14,559 --> 00:27:16,000
attendees

850
00:27:16,000 --> 00:27:18,080
one is how was this tied to active

851
00:27:18,080 --> 00:27:20,240
directory and the other one does this

852
00:27:20,240 --> 00:27:22,320
need a special password change type or

853
00:27:22,320 --> 00:27:24,559
does it kind of work out of the box and

854
00:27:24,559 --> 00:27:28,000
mr windows password tools

855
00:27:28,000 --> 00:27:31,679
absolutely on the windows cases

856
00:27:31,679 --> 00:27:36,159
capabilities to run a um

857
00:27:36,159 --> 00:27:40,960
a external service um

858
00:27:40,960 --> 00:27:42,640
to you know check the quality of a

859
00:27:42,640 --> 00:27:44,480
password and so you can tell

860
00:27:44,480 --> 00:27:47,120
your domain controllers to you know use

861
00:27:47,120 --> 00:27:48,240
this uh

862
00:27:48,240 --> 00:27:49,919
program to make the change and that

863
00:27:49,919 --> 00:27:52,080
would be essentially that program

864
00:27:52,080 --> 00:27:53,600
would need to reach out to this internal

865
00:27:53,600 --> 00:27:56,080
service um so it looks exactly like a

866
00:27:56,080 --> 00:27:57,520
normal user password change

867
00:27:57,520 --> 00:27:58,960
they hit control alt delete to change

868
00:27:58,960 --> 00:28:01,120
their password and it's going to

869
00:28:01,120 --> 00:28:03,840
on the back end uh query our service to

870
00:28:03,840 --> 00:28:05,360
do that

871
00:28:05,360 --> 00:28:09,279
okay then and another question um how

872
00:28:09,279 --> 00:28:13,159
how do you avoid iterations like p

873
00:28:13,159 --> 00:28:17,600
pdw01 pdw02 and so on and so on

874
00:28:17,600 --> 00:28:21,760
yeah absolutely this particular troll

875
00:28:21,760 --> 00:28:24,960
doesn't prevent those iterations

876
00:28:24,960 --> 00:28:26,080
right we're checking against a

877
00:28:26,080 --> 00:28:28,559
compromise

878
00:28:29,600 --> 00:28:31,919
that hasn't been previously compromised

879
00:28:31,919 --> 00:28:33,120
it doesn't

880
00:28:33,120 --> 00:28:36,720
solve that problem but if

881
00:28:36,720 --> 00:28:38,919
a candidate password isn't on a list of

882
00:28:38,919 --> 00:28:40,720
572 million

883
00:28:40,720 --> 00:28:44,320
known passwords already and it's long

884
00:28:44,320 --> 00:28:45,919
you know you can set the length that is

885
00:28:45,919 --> 00:28:47,919
appropriate to your organization

886
00:28:47,919 --> 00:28:50,080
uh the chance of something like that

887
00:28:50,080 --> 00:28:52,240
being a risk

888
00:28:52,240 --> 00:28:55,919
to us wasn't um wasn't significant

889
00:28:55,919 --> 00:28:56,640
enough to

890
00:28:56,640 --> 00:28:58,000
you know prevent us from taking this

891
00:28:58,000 --> 00:29:00,000
step

892
00:29:00,000 --> 00:29:02,640
okay cool and then there's a another

893
00:29:02,640 --> 00:29:03,120
question

894
00:29:03,120 --> 00:29:05,120
i still don't understand how you dealt

895
00:29:05,120 --> 00:29:08,159
with the problem of having unsolved

896
00:29:08,159 --> 00:29:10,720
and unsalted password base could you go

897
00:29:10,720 --> 00:29:11,760
further on

898
00:29:11,760 --> 00:29:14,880
to that absolutely so in order for kn

899
00:29:14,880 --> 00:29:18,880
entity to work um passwords

900
00:29:18,880 --> 00:29:21,760
uh a hash of a password must have five

901
00:29:21,760 --> 00:29:23,200
characters that can be found in the list

902
00:29:23,200 --> 00:29:24,559
so if you salt each password

903
00:29:24,559 --> 00:29:26,480
individually you will never find matches

904
00:29:26,480 --> 00:29:29,600
that are correct um so

905
00:29:29,600 --> 00:29:31,440
you have to have unsalted passwords in

906
00:29:31,440 --> 00:29:33,120
the have a binp data set

907
00:29:33,120 --> 00:29:34,880
in our private compromise store we also

908
00:29:34,880 --> 00:29:36,399
want to use unsalted passwords

909
00:29:36,399 --> 00:29:38,080
so that we understand whether or not we

910
00:29:38,080 --> 00:29:40,000
have duplication already uh

911
00:29:40,000 --> 00:29:42,399
and can use essentially again that same

912
00:29:42,399 --> 00:29:43,520
five character password

913
00:29:43,520 --> 00:29:45,120
five characters that are sent into the

914
00:29:45,120 --> 00:29:47,440
service to return

915
00:29:47,440 --> 00:29:49,200
uh the password that we're looking for

916
00:29:49,200 --> 00:29:50,480
with one call so

917
00:29:50,480 --> 00:29:53,760
in doing that um we do

918
00:29:53,760 --> 00:29:56,880
make we do introduce some risk in that

919
00:29:56,880 --> 00:29:58,399
we have unsalted

920
00:29:58,399 --> 00:30:00,159
passwords in that compromise private

921
00:30:00,159 --> 00:30:02,080
data store so we want to heavily protect

922
00:30:02,080 --> 00:30:03,279
that we want to provide the right

923
00:30:03,279 --> 00:30:04,960
controls around that service it is not

924
00:30:04,960 --> 00:30:06,480
generally accessible from inside our

925
00:30:06,480 --> 00:30:07,520
organization

926
00:30:07,520 --> 00:30:08,880
it's accessible only to the tools that

927
00:30:08,880 --> 00:30:10,880
need to do the checking so we protect

928
00:30:10,880 --> 00:30:12,720
that system and we protect access to

929
00:30:12,720 --> 00:30:14,559
that api to even ask the questions

930
00:30:14,559 --> 00:30:16,000
unlike have it been phoned which is open

931
00:30:16,000 --> 00:30:17,679
to the world

932
00:30:17,679 --> 00:30:19,840
so there is some risk but we only put

933
00:30:19,840 --> 00:30:21,679
passwords that are known compromised in

934
00:30:21,679 --> 00:30:22,000
that

935
00:30:22,000 --> 00:30:24,480
so to our organization they should have

936
00:30:24,480 --> 00:30:26,559
no that should create no exposure

937
00:30:26,559 --> 00:30:28,559
i am i want to be clear i am not saying

938
00:30:28,559 --> 00:30:30,559
at all that we have stopped password

939
00:30:30,559 --> 00:30:31,600
hashing

940
00:30:31,600 --> 00:30:34,159
in ldap in active directory we're still

941
00:30:34,159 --> 00:30:35,840
using

942
00:30:35,840 --> 00:30:38,559
you know strong controls there it's only

943
00:30:38,559 --> 00:30:39,200
in this

944
00:30:39,200 --> 00:30:41,520
one table of this private data store

945
00:30:41,520 --> 00:30:42,799
that we would

946
00:30:42,799 --> 00:30:46,559
store unsalted hashes in order to match

947
00:30:46,559 --> 00:30:47,360
them against

948
00:30:47,360 --> 00:30:50,080
the same results that you get inside of

949
00:30:50,080 --> 00:30:51,200
um

950
00:30:51,200 --> 00:30:54,240
that that have been set okay one last

951
00:30:54,240 --> 00:30:55,840
questions because we already a bit over

952
00:30:55,840 --> 00:30:56,960
time um

953
00:30:56,960 --> 00:30:59,200
is there a password is this password

954
00:30:59,200 --> 00:31:00,799
service open source or are there any

955
00:31:00,799 --> 00:31:05,760
open source tools around that do this

956
00:31:05,760 --> 00:31:08,480
there are some uh solutions to problems

957
00:31:08,480 --> 00:31:09,200
like this

958
00:31:09,200 --> 00:31:11,679
that are of

959
00:31:14,960 --> 00:31:19,039
um put together for organization have

960
00:31:19,519 --> 00:31:21,519
okay you seem to drop like you sound

961
00:31:21,519 --> 00:31:23,120
drops every now and then so maybe you

962
00:31:23,120 --> 00:31:26,719
you want to try to answer this again

963
00:31:26,880 --> 00:31:29,760
i'm sorry one more time so there are

964
00:31:29,760 --> 00:31:31,519
some open source solutions that solve

965
00:31:31,519 --> 00:31:33,039
pieces of this problem

966
00:31:33,039 --> 00:31:35,440
the overall solution i described has not

967
00:31:35,440 --> 00:31:36,720
been open sourced

968
00:31:36,720 --> 00:31:40,399
by proofpoint okay hey thanks a lot i

969
00:31:40,399 --> 00:31:41,919
think that was a really interesting talk

970
00:31:41,919 --> 00:31:43,200
i enjoyed that very much

971
00:31:43,200 --> 00:31:46,320
and then uh thank you and with that

972
00:31:46,320 --> 00:31:50,080
we end the session bye say bye

973
00:31:50,080 --> 00:31:54,639
to all the audience

