1
00:00:05,279 --> 00:00:06,480
all right hi everybody

2
00:00:06,480 --> 00:00:08,240
thanks for joining us the closing

3
00:00:08,240 --> 00:00:11,120
keynote for day two of first con

4
00:00:11,120 --> 00:00:13,200
uh just a few quick reminders before we

5
00:00:13,200 --> 00:00:14,559
get started

6
00:00:14,559 --> 00:00:17,199
everyone has been muted if you are using

7
00:00:17,199 --> 00:00:19,119
the event app we encourage you to check

8
00:00:19,119 --> 00:00:20,160
into the session

9
00:00:20,160 --> 00:00:21,920
update your activities and be sure to

10
00:00:21,920 --> 00:00:24,000
complete the sessions survey

11
00:00:24,000 --> 00:00:25,840
um if you are having any issues with the

12
00:00:25,840 --> 00:00:27,560
app please email us at

13
00:00:27,560 --> 00:00:30,080
eventsetfirst.org so we can help you out

14
00:00:30,080 --> 00:00:32,159
this session is tlp white and is being

15
00:00:32,159 --> 00:00:32,800
recorded

16
00:00:32,800 --> 00:00:35,040
recordings will be available within 24

17
00:00:35,040 --> 00:00:37,360
hours via the app or the desktop mobile

18
00:00:37,360 --> 00:00:38,079
site

19
00:00:38,079 --> 00:00:39,840
and with that i'd like to introduce to

20
00:00:39,840 --> 00:00:42,640
you our program chair for 2020

21
00:00:42,640 --> 00:00:45,280
and your session moderator lucy mara

22
00:00:45,280 --> 00:00:47,920
does sedera

23
00:00:48,559 --> 00:00:51,280
hi everyone good morning good afternoon

24
00:00:51,280 --> 00:00:51,920
good evening

25
00:00:51,920 --> 00:00:55,520
and um i am lucy the first counseling

26
00:00:55,520 --> 00:00:56,719
program committee chair

27
00:00:56,719 --> 00:00:59,840
and welcome to the grand finale of day

28
00:00:59,840 --> 00:01:01,199
two

29
00:01:01,199 --> 00:01:04,559
so our today's keynote is someone whose

30
00:01:04,559 --> 00:01:05,119
job

31
00:01:05,119 --> 00:01:08,240
over the last six years has impacted

32
00:01:08,240 --> 00:01:11,040
not only our work as defenders but also

33
00:01:11,040 --> 00:01:11,760
the id

34
00:01:11,760 --> 00:01:14,880
industry and its users probably

35
00:01:14,880 --> 00:01:17,439
i'm delighted to introduce ben hawkes a

36
00:01:17,439 --> 00:01:19,439
founding member and technical lead

37
00:01:19,439 --> 00:01:21,759
of google's project xero security

38
00:01:21,759 --> 00:01:24,560
research team

39
00:01:25,200 --> 00:01:27,920
at project zero ben helped develop the

40
00:01:27,920 --> 00:01:28,880
team's mission

41
00:01:28,880 --> 00:01:31,200
strategy and vulnerability disclosure

42
00:01:31,200 --> 00:01:32,400
policies

43
00:01:32,400 --> 00:01:34,799
and as a researcher he discovered many

44
00:01:34,799 --> 00:01:36,640
vulnerabilities across a range of

45
00:01:36,640 --> 00:01:39,200
different software platforms

46
00:01:39,200 --> 00:01:41,840
and this presentation ben will bring a

47
00:01:41,840 --> 00:01:42,240
core

48
00:01:42,240 --> 00:01:44,399
aspect of the vulnerability disclosure

49
00:01:44,399 --> 00:01:46,880
debate and provide insights

50
00:01:46,880 --> 00:01:49,680
based on project serials experience

51
00:01:49,680 --> 00:01:51,200
please don't forget to make your

52
00:01:51,200 --> 00:01:54,560
questions using the q a 2 and zoom and

53
00:01:54,560 --> 00:01:57,759
ben the floor is yours

54
00:01:57,759 --> 00:02:00,320
excellent thanks lucy uh right so yeah

55
00:02:00,320 --> 00:02:02,079
i'm the technical lead

56
00:02:02,079 --> 00:02:04,399
for project zero the security research

57
00:02:04,399 --> 00:02:05,759
team at google

58
00:02:05,759 --> 00:02:07,920
and first of all thank you a big thank

59
00:02:07,920 --> 00:02:09,758
you to the first conference organizers

60
00:02:09,758 --> 00:02:13,200
for inviting me to speak today about

61
00:02:13,200 --> 00:02:14,720
project zero's experiences with

62
00:02:14,720 --> 00:02:17,040
vulnerability disclosure

63
00:02:17,040 --> 00:02:19,040
so this talk is called project zero's

64
00:02:19,040 --> 00:02:21,040
disclosure philosophy

65
00:02:21,040 --> 00:02:23,200
and i wanted to to share that with you

66
00:02:23,200 --> 00:02:24,480
all since i think

67
00:02:24,480 --> 00:02:26,080
we have a pretty unique perspective on

68
00:02:26,080 --> 00:02:28,560
this topic and i know that at times our

69
00:02:28,560 --> 00:02:30,400
perspective has been perhaps a bit

70
00:02:30,400 --> 00:02:33,440
surprising or unintuitive to some of you

71
00:02:33,440 --> 00:02:36,000
who are familiar with this work so what

72
00:02:36,000 --> 00:02:38,160
i wanted to do is dive into the topic

73
00:02:38,160 --> 00:02:40,800
and really examine the fundamental

74
00:02:40,800 --> 00:02:42,319
challenges that we face

75
00:02:42,319 --> 00:02:44,640
when creating a vulnerability disclosure

76
00:02:44,640 --> 00:02:46,400
policy

77
00:02:46,400 --> 00:02:48,000
and then based on that i think we'll be

78
00:02:48,000 --> 00:02:49,840
in a better position to actually

79
00:02:49,840 --> 00:02:52,239
describe and assess what project zero's

80
00:02:52,239 --> 00:02:53,599
actual approach to vulnerability

81
00:02:53,599 --> 00:02:54,879
disclosure is

82
00:02:54,879 --> 00:02:57,040
and then in the end i want to give sort

83
00:02:57,040 --> 00:02:59,120
of one concrete suggestion

84
00:02:59,120 --> 00:03:01,200
that hope will lead to better outcomes

85
00:03:01,200 --> 00:03:02,959
for for user security and

86
00:03:02,959 --> 00:03:05,920
and perhaps even a few less contentious

87
00:03:05,920 --> 00:03:09,599
debates about vulnerability disclosure

88
00:03:09,599 --> 00:03:12,080
but first i i wanted to briefly take a

89
00:03:12,080 --> 00:03:12,720
step back

90
00:03:12,720 --> 00:03:15,760
and talk about my team project zero

91
00:03:15,760 --> 00:03:17,519
and why i think we we do have this

92
00:03:17,519 --> 00:03:19,120
unique perspective on

93
00:03:19,120 --> 00:03:22,000
this topic of vulnerability disclosure

94
00:03:22,000 --> 00:03:22,720
so we were

95
00:03:22,720 --> 00:03:25,920
founded uh as lucy said back in 2014

96
00:03:25,920 --> 00:03:29,200
uh with the team mission to make zero

97
00:03:29,200 --> 00:03:30,560
day hard

98
00:03:30,560 --> 00:03:32,720
a zero day being about ability that

99
00:03:32,720 --> 00:03:34,720
attackers know about but the defenders

100
00:03:34,720 --> 00:03:37,360
don't know about and make zero day hard

101
00:03:37,360 --> 00:03:38,560
that implies

102
00:03:38,560 --> 00:03:41,440
that zero days are too cheap and too

103
00:03:41,440 --> 00:03:42,239
numerous

104
00:03:42,239 --> 00:03:44,840
in proportion to their capability for

105
00:03:44,840 --> 00:03:46,400
attackers and

106
00:03:46,400 --> 00:03:48,080
importantly something unique about

107
00:03:48,080 --> 00:03:49,599
project zero is that we want to make

108
00:03:49,599 --> 00:03:50,400
zero day hard

109
00:03:50,400 --> 00:03:52,959
for everybody not just for those who are

110
00:03:52,959 --> 00:03:53,519
using

111
00:03:53,519 --> 00:03:56,080
google's products directly so we decided

112
00:03:56,080 --> 00:03:57,280
to focus on

113
00:03:57,280 --> 00:03:59,360
all types of important ubiquitous

114
00:03:59,360 --> 00:04:00,480
software

115
00:04:00,480 --> 00:04:02,560
and hardware ranging from things like

116
00:04:02,560 --> 00:04:04,720
mobile to web browsers

117
00:04:04,720 --> 00:04:07,200
operating systems cloud systems and so

118
00:04:07,200 --> 00:04:09,280
on

119
00:04:09,280 --> 00:04:11,599
and to achieve all of this we created a

120
00:04:11,599 --> 00:04:13,200
pipeline of work

121
00:04:13,200 --> 00:04:15,599
based around attack research or

122
00:04:15,599 --> 00:04:17,519
offensive security research

123
00:04:17,519 --> 00:04:19,600
essentially replicating the process of a

124
00:04:19,600 --> 00:04:20,880
real attacker

125
00:04:20,880 --> 00:04:24,160
but with a defensive mission in mind

126
00:04:24,160 --> 00:04:27,040
so we create tools and methodologies

127
00:04:27,040 --> 00:04:28,560
that can be used to

128
00:04:28,560 --> 00:04:30,880
surface critical security bugs the

129
00:04:30,880 --> 00:04:32,720
software that we all rely on

130
00:04:32,720 --> 00:04:34,320
and then for some proportion of those

131
00:04:34,320 --> 00:04:36,400
discoveries we actually attempt to write

132
00:04:36,400 --> 00:04:37,840
an exploit for them

133
00:04:37,840 --> 00:04:40,000
just as a as a real attacker would

134
00:04:40,000 --> 00:04:41,280
attempt to do

135
00:04:41,280 --> 00:04:42,720
and then the two main differences

136
00:04:42,720 --> 00:04:45,680
between our work and a real attacker

137
00:04:45,680 --> 00:04:48,320
is that firstly obviously we try to

138
00:04:48,320 --> 00:04:49,680
report and help fix all of the

139
00:04:49,680 --> 00:04:51,759
vulnerabilities that we find

140
00:04:51,759 --> 00:04:54,400
but secondly we also try to use the

141
00:04:54,400 --> 00:04:55,759
insights that we

142
00:04:55,759 --> 00:04:58,240
derive from this attack research process

143
00:04:58,240 --> 00:05:00,000
to to drive

144
00:05:00,000 --> 00:05:02,080
longer-term structural improvements to

145
00:05:02,080 --> 00:05:03,039
security

146
00:05:03,039 --> 00:05:05,440
and that's things like better sandboxing

147
00:05:05,440 --> 00:05:06,160
or

148
00:05:06,160 --> 00:05:08,880
fixing an entire bug class exploit

149
00:05:08,880 --> 00:05:10,320
mitigations

150
00:05:10,320 --> 00:05:12,000
even things like process improvements

151
00:05:12,000 --> 00:05:14,240
and improved improved testing fuzz

152
00:05:14,240 --> 00:05:16,720
testing etc

153
00:05:16,720 --> 00:05:19,600
so as a result of this over the past six

154
00:05:19,600 --> 00:05:20,240
years

155
00:05:20,240 --> 00:05:23,280
we've helped to fix over 1800 unique

156
00:05:23,280 --> 00:05:25,280
vulnerabilities

157
00:05:25,280 --> 00:05:27,199
and that's i guess the crux of the topic

158
00:05:27,199 --> 00:05:28,560
we're discussing today

159
00:05:28,560 --> 00:05:30,880
so vulnerability disclosure is about how

160
00:05:30,880 --> 00:05:32,479
do you communicate

161
00:05:32,479 --> 00:05:34,639
the discovery of a vulnerability how do

162
00:05:34,639 --> 00:05:35,759
you get that vulnerability

163
00:05:35,759 --> 00:05:37,600
fixed and how do you inform the public

164
00:05:37,600 --> 00:05:39,840
about it and we've had to communicate a

165
00:05:39,840 --> 00:05:41,360
lot of vulnerabilities

166
00:05:41,360 --> 00:05:43,440
so on average we're publishing the the

167
00:05:43,440 --> 00:05:44,639
technical details

168
00:05:44,639 --> 00:05:48,400
of about five to six bugs per week

169
00:05:48,400 --> 00:05:50,400
and that means we've built up a huge

170
00:05:50,400 --> 00:05:52,160
amount of experience with vulnerability

171
00:05:52,160 --> 00:05:53,440
disclosure

172
00:05:53,440 --> 00:05:56,400
and we've seen just about everything

173
00:05:56,400 --> 00:05:58,479
that there is to see

174
00:05:58,479 --> 00:06:00,319
and quite consistently i'd say

175
00:06:00,319 --> 00:06:01,759
throughout the past

176
00:06:01,759 --> 00:06:04,639
past few years our decisions about

177
00:06:04,639 --> 00:06:05,680
disclosure

178
00:06:05,680 --> 00:06:07,919
have been scrutinized you might say

179
00:06:07,919 --> 00:06:08,800
critiqued

180
00:06:08,800 --> 00:06:10,240
sometimes we talk about the

181
00:06:10,240 --> 00:06:13,120
vulnerability disclosure debate

182
00:06:13,120 --> 00:06:16,240
and quite frankly at times managing the

183
00:06:16,240 --> 00:06:17,440
disclosure process

184
00:06:17,440 --> 00:06:21,199
can be a bit stressful i think

185
00:06:21,199 --> 00:06:22,639
certainly i was stressed when i wrote

186
00:06:22,639 --> 00:06:25,120
this tweet around spectre and meltdown

187
00:06:25,120 --> 00:06:26,639
but i think that there is a great sense

188
00:06:26,639 --> 00:06:28,319
of responsibility

189
00:06:28,319 --> 00:06:31,360
to users and when you combine that with

190
00:06:31,360 --> 00:06:34,160
the knowledge that your your actions are

191
00:06:34,160 --> 00:06:34,720
going to be

192
00:06:34,720 --> 00:06:36,400
held up to a microscope particularly

193
00:06:36,400 --> 00:06:38,240
when uh things go wrong

194
00:06:38,240 --> 00:06:40,319
uh and then it's nearly impossible to

195
00:06:40,319 --> 00:06:41,759
please everybody

196
00:06:41,759 --> 00:06:45,039
in the uh in in the uh

197
00:06:45,039 --> 00:06:48,080
in the in the world um

198
00:06:48,080 --> 00:06:50,240
but where does this sort of feeling come

199
00:06:50,240 --> 00:06:51,919
from

200
00:06:51,919 --> 00:06:54,560
um frankly this phenomenon of a

201
00:06:54,560 --> 00:06:55,919
disclosure debate isn't

202
00:06:55,919 --> 00:06:58,960
new the the debate has been

203
00:06:58,960 --> 00:07:01,360
fairly intense since at least the late

204
00:07:01,360 --> 00:07:02,560
80s

205
00:07:02,560 --> 00:07:05,440
um and working through the the timeline

206
00:07:05,440 --> 00:07:06,240
here from the

207
00:07:06,240 --> 00:07:09,039
the left we started out with sort of

208
00:07:09,039 --> 00:07:10,880
invite only private vulnerability

209
00:07:10,880 --> 00:07:11,759
sharing clubs

210
00:07:11,759 --> 00:07:14,080
might sound familiar to some of you in

211
00:07:14,080 --> 00:07:14,960
the first

212
00:07:14,960 --> 00:07:17,360
ecosystem um things like the zados

213
00:07:17,360 --> 00:07:19,360
security digest mailing list

214
00:07:19,360 --> 00:07:21,919
um or a bit later we had vendorsec for

215
00:07:21,919 --> 00:07:24,400
um sort of linux related issues

216
00:07:24,400 --> 00:07:26,800
we had to be invited to join a private

217
00:07:26,800 --> 00:07:28,479
mailing list and you'd share information

218
00:07:28,479 --> 00:07:30,080
about vulnerabilities

219
00:07:30,080 --> 00:07:32,080
then from there we through that sort of

220
00:07:32,080 --> 00:07:33,919
the 90s we had the advent of full

221
00:07:33,919 --> 00:07:34,960
disclosure

222
00:07:34,960 --> 00:07:36,639
and just sort of the arrival of the bug

223
00:07:36,639 --> 00:07:38,400
track mailing list and sort of reaction

224
00:07:38,400 --> 00:07:41,120
to this this private sharing club

225
00:07:41,120 --> 00:07:44,240
and then fast forward a bit we have um

226
00:07:44,240 --> 00:07:47,039
microsoft's infamous memo called uh it's

227
00:07:47,039 --> 00:07:48,000
time to end

228
00:07:48,000 --> 00:07:50,400
information anarchy um and that's where

229
00:07:50,400 --> 00:07:52,080
sort of like the

230
00:07:52,080 --> 00:07:54,639
demands for the so-called responsible

231
00:07:54,639 --> 00:07:55,360
disclosure

232
00:07:55,360 --> 00:07:57,599
as it was called then came in now it

233
00:07:57,599 --> 00:07:58,720
might be called coordinated

234
00:07:58,720 --> 00:08:00,479
vulnerability disclosure

235
00:08:00,479 --> 00:08:02,400
and that's when essentially the vendors

236
00:08:02,400 --> 00:08:03,680
were asking

237
00:08:03,680 --> 00:08:05,440
for the ability to set the timeline for

238
00:08:05,440 --> 00:08:08,000
publication of the patch and the details

239
00:08:08,000 --> 00:08:10,080
on their own not the researcher the

240
00:08:10,080 --> 00:08:12,319
vendor would set the timeline

241
00:08:12,319 --> 00:08:14,960
um around that same time perhaps not so

242
00:08:14,960 --> 00:08:16,160
much in reaction

243
00:08:16,160 --> 00:08:19,360
to um to responsible disclosure but

244
00:08:19,360 --> 00:08:21,360
just a related thread of thought we had

245
00:08:21,360 --> 00:08:23,919
somewhat of a a radical reaction from a

246
00:08:23,919 --> 00:08:25,759
segment of the hacker community

247
00:08:25,759 --> 00:08:27,599
who called for non-disclosure policies

248
00:08:27,599 --> 00:08:28,879
to essentially never

249
00:08:28,879 --> 00:08:31,360
report or publish information about how

250
00:08:31,360 --> 00:08:32,799
attacks worked

251
00:08:32,799 --> 00:08:35,599
um then we sort of had this burgeoning

252
00:08:35,599 --> 00:08:37,440
marketplace of

253
00:08:37,440 --> 00:08:38,640
vulnerability information it's the

254
00:08:38,640 --> 00:08:40,559
demand for this knowledge

255
00:08:40,559 --> 00:08:43,599
increased both in public markets like

256
00:08:43,599 --> 00:08:46,720
uh exploit competitions and bug bounties

257
00:08:46,720 --> 00:08:48,480
uh but also certainly there's been a

258
00:08:48,480 --> 00:08:49,839
huge growth in in the

259
00:08:49,839 --> 00:08:51,920
private markets the gray markets and

260
00:08:51,920 --> 00:08:54,320
black markets for exploits

261
00:08:54,320 --> 00:08:56,959
and then finally uh toward the the end

262
00:08:56,959 --> 00:08:58,720
there we have the sort of first serious

263
00:08:58,720 --> 00:08:59,440
adoption

264
00:08:59,440 --> 00:09:01,920
of something called disclosure deadlines

265
00:09:01,920 --> 00:09:02,880
by google

266
00:09:02,880 --> 00:09:05,040
and that's essentially the precursor to

267
00:09:05,040 --> 00:09:07,600
project zero's current disclosure policy

268
00:09:07,600 --> 00:09:09,440
so it's a long winding path to where

269
00:09:09,440 --> 00:09:10,720
we're at today

270
00:09:10,720 --> 00:09:12,160
and throughout all of this time

271
00:09:12,160 --> 00:09:13,839
certainly we debated back and forth

272
00:09:13,839 --> 00:09:14,720
about which

273
00:09:14,720 --> 00:09:17,680
disclosure process was the best and i

274
00:09:17,680 --> 00:09:18,560
think it's

275
00:09:18,560 --> 00:09:21,279
fair to say that 30 years later the

276
00:09:21,279 --> 00:09:22,399
debate is

277
00:09:22,399 --> 00:09:25,440
still as fair as ever

278
00:09:25,440 --> 00:09:27,440
but why is there a debate about this at

279
00:09:27,440 --> 00:09:29,360
all why is it

280
00:09:29,360 --> 00:09:31,920
so hard to agree on the best way to

281
00:09:31,920 --> 00:09:33,519
handle the vulnerability once you've

282
00:09:33,519 --> 00:09:34,240
found it

283
00:09:34,240 --> 00:09:36,320
because on the surface it doesn't seem

284
00:09:36,320 --> 00:09:38,640
like a very difficult problem

285
00:09:38,640 --> 00:09:41,680
um but alas if you dig deeper it does

286
00:09:41,680 --> 00:09:43,279
somewhat make sense that there's so much

287
00:09:43,279 --> 00:09:44,320
disagreement about

288
00:09:44,320 --> 00:09:48,800
disclosure there's three reasons why

289
00:09:48,800 --> 00:09:54,080
imperfect data conflict in models

290
00:09:54,080 --> 00:09:57,680
and divergent goals so let's

291
00:09:57,680 --> 00:09:59,920
quickly dive into each of these root

292
00:09:59,920 --> 00:10:00,720
issues

293
00:10:00,720 --> 00:10:02,240
so that hopefully we can understand a

294
00:10:02,240 --> 00:10:04,320
bit more about the challenges we face

295
00:10:04,320 --> 00:10:06,720
when trying to agree on a disclosure

296
00:10:06,720 --> 00:10:08,880
policy

297
00:10:08,880 --> 00:10:12,240
so in perfect data what we know

298
00:10:12,240 --> 00:10:14,399
is that security is fundamentally

299
00:10:14,399 --> 00:10:15,600
adversarial

300
00:10:15,600 --> 00:10:17,360
so that means that attackers are

301
00:10:17,360 --> 00:10:18,720
incentivized to

302
00:10:18,720 --> 00:10:20,800
deprive us of the data that we need to

303
00:10:20,800 --> 00:10:22,880
make the best decisions possible

304
00:10:22,880 --> 00:10:24,880
in defense in fact you could even say

305
00:10:24,880 --> 00:10:26,000
that attackers

306
00:10:26,000 --> 00:10:28,880
are incentivized to actively mislead us

307
00:10:28,880 --> 00:10:30,720
about what they're working on

308
00:10:30,720 --> 00:10:33,200
so i think if we always had perfect

309
00:10:33,200 --> 00:10:33,839
knowledge

310
00:10:33,839 --> 00:10:36,800
of which vulnerabilities were being used

311
00:10:36,800 --> 00:10:37,760
by whom

312
00:10:37,760 --> 00:10:39,920
and against whom then would actually be

313
00:10:39,920 --> 00:10:41,360
able to solve the disclosure debate

314
00:10:41,360 --> 00:10:43,120
almost immediately

315
00:10:43,120 --> 00:10:45,200
but unfortunately i don't think we can

316
00:10:45,200 --> 00:10:47,200
really hope to achieve that perfect

317
00:10:47,200 --> 00:10:49,839
level of insight it's not realistic

318
00:10:49,839 --> 00:10:52,480
and in fact what little data we do have

319
00:10:52,480 --> 00:10:52,959
about

320
00:10:52,959 --> 00:10:55,839
how exploits are actually used either as

321
00:10:55,839 --> 00:10:56,959
a zero day

322
00:10:56,959 --> 00:10:59,200
or as what we might call a one day so an

323
00:10:59,200 --> 00:11:01,040
opportunistic attack once the bug is

324
00:11:01,040 --> 00:11:02,160
known

325
00:11:02,160 --> 00:11:05,120
that data is by definition a failure

326
00:11:05,120 --> 00:11:05,760
case

327
00:11:05,760 --> 00:11:08,399
for the attacker so in statistics we

328
00:11:08,399 --> 00:11:09,360
know that you can't

329
00:11:09,360 --> 00:11:11,200
really rely on just the failure cases

330
00:11:11,200 --> 00:11:13,200
alone that data is

331
00:11:13,200 --> 00:11:16,320
is not representative so when we

332
00:11:16,320 --> 00:11:19,279
say that the data isn't perfect we're

333
00:11:19,279 --> 00:11:21,440
really saying that if you make decisions

334
00:11:21,440 --> 00:11:24,000
in security only based on the data about

335
00:11:24,000 --> 00:11:24,640
attackers

336
00:11:24,640 --> 00:11:27,279
that you have available to you then by

337
00:11:27,279 --> 00:11:30,240
definition that's a sub-optimal decision

338
00:11:30,240 --> 00:11:32,480
so in order to account for this we need

339
00:11:32,480 --> 00:11:34,320
to introduce some sort of model

340
00:11:34,320 --> 00:11:36,240
that accounts for the data that we don't

341
00:11:36,240 --> 00:11:37,920
see

342
00:11:37,920 --> 00:11:40,640
in other words we need to build a model

343
00:11:40,640 --> 00:11:42,560
for attacker behavior

344
00:11:42,560 --> 00:11:46,240
and so concretely that means building

345
00:11:46,240 --> 00:11:47,680
some sort of description of the

346
00:11:47,680 --> 00:11:49,200
different classes of attacker the

347
00:11:49,200 --> 00:11:50,880
different types of attacker

348
00:11:50,880 --> 00:11:53,600
that are active at any given moment and

349
00:11:53,600 --> 00:11:54,480
so that means

350
00:11:54,480 --> 00:11:57,600
estimating their overall resources it

351
00:11:57,600 --> 00:12:00,320
means describing their capabilities

352
00:12:00,320 --> 00:12:04,000
their motivations constraints means

353
00:12:04,000 --> 00:12:05,519
understanding how the attacker

354
00:12:05,519 --> 00:12:07,440
prioritizes their work

355
00:12:07,440 --> 00:12:09,920
their level of risk tolerance where

356
00:12:09,920 --> 00:12:11,680
their funding comes from

357
00:12:11,680 --> 00:12:14,560
their ability to to do in-house research

358
00:12:14,560 --> 00:12:16,000
and development versus having to

359
00:12:16,000 --> 00:12:17,519
outsource a lot of the technical work

360
00:12:17,519 --> 00:12:18,720
and so on

361
00:12:18,720 --> 00:12:20,880
and it means doing all of this with a

362
00:12:20,880 --> 00:12:23,519
global perspective

363
00:12:23,519 --> 00:12:24,639
and i think this is something that

364
00:12:24,639 --> 00:12:27,440
security professionals

365
00:12:27,440 --> 00:12:28,720
i think this is something that security

366
00:12:28,720 --> 00:12:31,360
professionals do intuitively

367
00:12:31,360 --> 00:12:34,800
um here we're more specifically talking

368
00:12:34,800 --> 00:12:35,680
about

369
00:12:35,680 --> 00:12:37,360
some sort of process that's deliberate

370
00:12:37,360 --> 00:12:39,600
and inspectable you can't really reason

371
00:12:39,600 --> 00:12:41,120
about something that can't be

372
00:12:41,120 --> 00:12:45,600
described but the key point is that

373
00:12:45,600 --> 00:12:48,000
there's so many unknown variables at

374
00:12:48,000 --> 00:12:50,000
play behind these models and how we

375
00:12:50,000 --> 00:12:50,800
create them

376
00:12:50,800 --> 00:12:53,200
that there's a wide variety of like

377
00:12:53,200 --> 00:12:54,480
legitimate

378
00:12:54,480 --> 00:12:56,639
legitimately justifiable approaches and

379
00:12:56,639 --> 00:12:58,560
models that you can choose

380
00:12:58,560 --> 00:13:01,200
and so since there's a wide range here

381
00:13:01,200 --> 00:13:01,839
that can

382
00:13:01,839 --> 00:13:04,000
lead to substantial conflicts in the

383
00:13:04,000 --> 00:13:06,079
disclosure policy discussion

384
00:13:06,079 --> 00:13:09,279
so for example take the question

385
00:13:09,279 --> 00:13:11,600
uh will this new proof of concept that

386
00:13:11,600 --> 00:13:12,800
was released today

387
00:13:12,800 --> 00:13:15,360
will this proof of concept be repurposed

388
00:13:15,360 --> 00:13:17,360
by opportunistic attackers in the month

389
00:13:17,360 --> 00:13:19,279
following disclosure

390
00:13:19,279 --> 00:13:22,160
and depending on your model you might

391
00:13:22,160 --> 00:13:22,560
say

392
00:13:22,560 --> 00:13:24,880
yes or most certainly it will or no

393
00:13:24,880 --> 00:13:26,160
almost certainly it won't

394
00:13:26,160 --> 00:13:29,200
or something in between and where you

395
00:13:29,200 --> 00:13:30,959
fall on these questions

396
00:13:30,959 --> 00:13:33,200
questions of this type that will

397
00:13:33,200 --> 00:13:34,079
radically affect

398
00:13:34,079 --> 00:13:36,320
your preferences and choices regarding

399
00:13:36,320 --> 00:13:39,360
disclosure policy

400
00:13:41,760 --> 00:13:44,959
but even even if we were to say that we

401
00:13:44,959 --> 00:13:46,320
agreed on

402
00:13:46,320 --> 00:13:49,040
on the set of data that's available and

403
00:13:49,040 --> 00:13:51,279
and how to interpret that data

404
00:13:51,279 --> 00:13:53,680
we still then run into some problems in

405
00:13:53,680 --> 00:13:55,519
terms of the motivations

406
00:13:55,519 --> 00:13:57,839
and the goals of defenders because it's

407
00:13:57,839 --> 00:13:59,440
fair to say that the goals of defenders

408
00:13:59,440 --> 00:14:01,360
are just as broad as those

409
00:14:01,360 --> 00:14:04,880
of attackers and what that means is that

410
00:14:04,880 --> 00:14:08,639
when we diverge in priorities and goals

411
00:14:08,639 --> 00:14:10,480
i think so too does our understanding of

412
00:14:10,480 --> 00:14:12,399
what we're actually trying to optimize

413
00:14:12,399 --> 00:14:15,440
for like what is optimal disclosure

414
00:14:15,440 --> 00:14:18,560
um so here are a couple of the most

415
00:14:18,560 --> 00:14:19,920
common dimensions

416
00:14:19,920 --> 00:14:21,680
where this divergence can occur and i

417
00:14:21,680 --> 00:14:23,120
think there certainly are

418
00:14:23,120 --> 00:14:25,199
more than two dimensions here this is

419
00:14:25,199 --> 00:14:27,600
perhaps a common way to think about it

420
00:14:27,600 --> 00:14:30,399
the balancing and weighting of user harm

421
00:14:30,399 --> 00:14:32,320
versus business priorities

422
00:14:32,320 --> 00:14:33,920
and balancing and weighting of

423
00:14:33,920 --> 00:14:35,920
short-term risks and outcomes

424
00:14:35,920 --> 00:14:38,880
versus long-term risks and outcomes so

425
00:14:38,880 --> 00:14:40,880
as a thought exercise

426
00:14:40,880 --> 00:14:42,320
you think about like which of these

427
00:14:42,320 --> 00:14:44,880
points represents your organization

428
00:14:44,880 --> 00:14:46,399
and then perhaps your own personal

429
00:14:46,399 --> 00:14:48,079
values then

430
00:14:48,079 --> 00:14:50,399
which is someone who might be reporting

431
00:14:50,399 --> 00:14:52,320
a vulnerability to your organization

432
00:14:52,320 --> 00:14:54,800
are they the same point roughly or very

433
00:14:54,800 --> 00:14:55,760
different

434
00:14:55,760 --> 00:14:58,320
which one is project zero which one is

435
00:14:58,320 --> 00:14:59,360
google

436
00:14:59,360 --> 00:15:01,199
which one is the linux kernel upstream

437
00:15:01,199 --> 00:15:03,199
community which one is apple microsoft

438
00:15:03,199 --> 00:15:04,560
and so on

439
00:15:04,560 --> 00:15:07,360
so clearly there isn't always a right

440
00:15:07,360 --> 00:15:09,199
and wrong answer for what anyone's goals

441
00:15:09,199 --> 00:15:10,800
and priorities should be

442
00:15:10,800 --> 00:15:12,480
but we need to recognize when this

443
00:15:12,480 --> 00:15:14,399
divergence is occurring

444
00:15:14,399 --> 00:15:17,199
factor it in and try to communicate our

445
00:15:17,199 --> 00:15:17,920
intent

446
00:15:17,920 --> 00:15:21,680
as best as we can and so based on

447
00:15:21,680 --> 00:15:23,519
all of that i think it's clear to me at

448
00:15:23,519 --> 00:15:25,760
least that the disclosure debate is

449
00:15:25,760 --> 00:15:28,800
is here to stay uh and that isn't

450
00:15:28,800 --> 00:15:31,279
necessarily a bad thing uh we often like

451
00:15:31,279 --> 00:15:33,360
to make jokes about this topic like oh

452
00:15:33,360 --> 00:15:35,920
are we still talking about this in 2020

453
00:15:35,920 --> 00:15:36,399
and

454
00:15:36,399 --> 00:15:37,920
you know we get frustrated with people

455
00:15:37,920 --> 00:15:39,680
for the long twitter threads and all of

456
00:15:39,680 --> 00:15:40,560
that

457
00:15:40,560 --> 00:15:42,880
um but for those of you that have to

458
00:15:42,880 --> 00:15:43,920
make decisions

459
00:15:43,920 --> 00:15:46,320
about this this disclosure topic and

460
00:15:46,320 --> 00:15:48,320
these decisions can affect the security

461
00:15:48,320 --> 00:15:49,519
and safety of of

462
00:15:49,519 --> 00:15:51,839
potentially billions of users it really

463
00:15:51,839 --> 00:15:53,360
isn't that trivial and i think this

464
00:15:53,360 --> 00:15:54,079
debate

465
00:15:54,079 --> 00:15:57,360
is actually important um so fortunately

466
00:15:57,360 --> 00:15:59,519
i do think that there's a simple way

467
00:15:59,519 --> 00:16:01,040
that we can improve

468
00:16:01,040 --> 00:16:03,279
how this debate is happening and we'll

469
00:16:03,279 --> 00:16:04,480
discuss that in

470
00:16:04,480 --> 00:16:07,199
just a few minutes first though i'd like

471
00:16:07,199 --> 00:16:09,519
to to share some more details

472
00:16:09,519 --> 00:16:11,839
about project zero's disclosure

473
00:16:11,839 --> 00:16:13,839
philosophy

474
00:16:13,839 --> 00:16:16,160
so i want to talk about the specific

475
00:16:16,160 --> 00:16:17,360
choices we've made and

476
00:16:17,360 --> 00:16:19,839
and why we've made them and i'll preface

477
00:16:19,839 --> 00:16:20,720
this by

478
00:16:20,720 --> 00:16:22,639
saying that we think we've got a great

479
00:16:22,639 --> 00:16:23,920
disclosure policy

480
00:16:23,920 --> 00:16:26,800
certainly but the point of this section

481
00:16:26,800 --> 00:16:28,320
isn't so much to convince you

482
00:16:28,320 --> 00:16:30,480
that it's the best i'd say the goal is

483
00:16:30,480 --> 00:16:32,320
more to try and break down the problem

484
00:16:32,320 --> 00:16:32,880
space

485
00:16:32,880 --> 00:16:34,000
so that you can at least sort of

486
00:16:34,000 --> 00:16:36,240
understand the different factors that go

487
00:16:36,240 --> 00:16:37,680
into to choosing

488
00:16:37,680 --> 00:16:39,759
any specific disclosure policy whatever

489
00:16:39,759 --> 00:16:42,399
that might be

490
00:16:42,720 --> 00:16:45,920
but before you even choose a policy it's

491
00:16:45,920 --> 00:16:47,759
a it's a good idea to think about some

492
00:16:47,759 --> 00:16:49,040
guiding principles

493
00:16:49,040 --> 00:16:51,199
so this is like a general framework for

494
00:16:51,199 --> 00:16:52,480
policy making

495
00:16:52,480 --> 00:16:55,680
uh i can outline what the policy should

496
00:16:55,680 --> 00:16:57,440
sort of feel like once it's all set in

497
00:16:57,440 --> 00:16:58,480
place

498
00:16:58,480 --> 00:17:00,880
um and we and project zero arrived at

499
00:17:00,880 --> 00:17:01,759
three

500
00:17:01,759 --> 00:17:04,319
guiding principles that we try to sort

501
00:17:04,319 --> 00:17:06,000
of weave into all of our policy

502
00:17:06,000 --> 00:17:07,520
development work

503
00:17:07,520 --> 00:17:10,799
simple consistent and fair

504
00:17:10,799 --> 00:17:13,039
so simple means that a policy should be

505
00:17:13,039 --> 00:17:14,640
easy to communicate

506
00:17:14,640 --> 00:17:17,199
and easy to operate easy to work with

507
00:17:17,199 --> 00:17:18,160
each day

508
00:17:18,160 --> 00:17:20,720
and so we need a simple policy in order

509
00:17:20,720 --> 00:17:21,520
to avoid

510
00:17:21,520 --> 00:17:24,959
any confusion in our communication

511
00:17:24,959 --> 00:17:27,119
and also in order to be able to scale up

512
00:17:27,119 --> 00:17:28,000
our work

513
00:17:28,000 --> 00:17:30,160
i mean this this process this policy has

514
00:17:30,160 --> 00:17:31,520
to work for

515
00:17:31,520 --> 00:17:33,360
thousands of vulnerabilities not just

516
00:17:33,360 --> 00:17:35,280
one or two

517
00:17:35,280 --> 00:17:37,600
consistent means that the policy should

518
00:17:37,600 --> 00:17:39,600
operate in a predictable way

519
00:17:39,600 --> 00:17:42,080
so the same inputs get the same outputs

520
00:17:42,080 --> 00:17:42,960
each time

521
00:17:42,960 --> 00:17:46,000
that you run the process and

522
00:17:46,000 --> 00:17:48,880
fear means that no one group or company

523
00:17:48,880 --> 00:17:49,919
should be favored

524
00:17:49,919 --> 00:17:52,240
over another essentially the same rules

525
00:17:52,240 --> 00:17:55,039
apply evenly

526
00:17:55,039 --> 00:17:56,799
and it's i would say surprisingly

527
00:17:56,799 --> 00:17:59,360
difficult to build a disclosure policy

528
00:17:59,360 --> 00:18:01,280
that doesn't rely on a lot of

529
00:18:01,280 --> 00:18:04,240
subjectivity and a lot of judgment calls

530
00:18:04,240 --> 00:18:06,400
um but i would say through hard-won

531
00:18:06,400 --> 00:18:07,840
experience

532
00:18:07,840 --> 00:18:11,280
um we would say and i'd say

533
00:18:11,280 --> 00:18:13,039
with subcertainty that we know it's the

534
00:18:13,039 --> 00:18:15,280
best to aim for these principles even if

535
00:18:15,280 --> 00:18:16,559
it's harder to do that

536
00:18:16,559 --> 00:18:19,600
it's worth it in the long run

537
00:18:20,559 --> 00:18:22,880
all right so what do we actually need to

538
00:18:22,880 --> 00:18:23,840
decide

539
00:18:23,840 --> 00:18:26,160
when we're sort of crafting or building

540
00:18:26,160 --> 00:18:28,320
a disclosure policy

541
00:18:28,320 --> 00:18:30,559
concretely there are three central

542
00:18:30,559 --> 00:18:32,720
questions that we have to answer

543
00:18:32,720 --> 00:18:35,440
in order to define a disclosure policy

544
00:18:35,440 --> 00:18:36,480
this is

545
00:18:36,480 --> 00:18:39,840
my model for how this works the first

546
00:18:39,840 --> 00:18:40,559
question

547
00:18:40,559 --> 00:18:43,200
is when to release the details of the

548
00:18:43,200 --> 00:18:45,039
the vulnerability publicly

549
00:18:45,039 --> 00:18:47,200
and you see sort of a few of the example

550
00:18:47,200 --> 00:18:48,559
settings that you might be able to

551
00:18:48,559 --> 00:18:49,679
choose

552
00:18:49,679 --> 00:18:52,240
ranging from full disclosure on one end

553
00:18:52,240 --> 00:18:52,720
to

554
00:18:52,720 --> 00:18:55,280
non-disclosure on the other end a couple

555
00:18:55,280 --> 00:18:56,880
of the more sort of common choices

556
00:18:56,880 --> 00:18:58,799
disclosure deadlines there

557
00:18:58,799 --> 00:19:01,520
t 0 plus n so the the time of discovery

558
00:19:01,520 --> 00:19:02,400
plus some

559
00:19:02,400 --> 00:19:05,360
fixed length of time um that's one

560
00:19:05,360 --> 00:19:06,000
option

561
00:19:06,000 --> 00:19:08,000
coordinated disclosure is another sort

562
00:19:08,000 --> 00:19:10,080
of popular option right now

563
00:19:10,080 --> 00:19:11,760
that's where you take the time of the

564
00:19:11,760 --> 00:19:13,440
patch being released and then perhaps

565
00:19:13,440 --> 00:19:13,919
add some

566
00:19:13,919 --> 00:19:18,000
some time on from from patch release

567
00:19:18,400 --> 00:19:20,720
the second question that we need to

568
00:19:20,720 --> 00:19:21,520
consider

569
00:19:21,520 --> 00:19:23,600
is once we've decided to publish

570
00:19:23,600 --> 00:19:25,600
something what level of technical

571
00:19:25,600 --> 00:19:26,320
details

572
00:19:26,320 --> 00:19:29,520
should we be publishing and this ranges

573
00:19:29,520 --> 00:19:31,280
of course from releasing no details at

574
00:19:31,280 --> 00:19:32,080
all or just some

575
00:19:32,080 --> 00:19:34,880
some high level metadata um like in some

576
00:19:34,880 --> 00:19:37,280
vendor bulletins you might just say

577
00:19:37,280 --> 00:19:39,120
a bug class and a product that was

578
00:19:39,120 --> 00:19:41,679
affected all the way through to

579
00:19:41,679 --> 00:19:43,919
releasing full technical details about

580
00:19:43,919 --> 00:19:45,280
how the vulnerability works

581
00:19:45,280 --> 00:19:47,120
how it was patched and how it was

582
00:19:47,120 --> 00:19:50,320
successfully exploited

583
00:19:50,559 --> 00:19:52,720
and the final question that we need to

584
00:19:52,720 --> 00:19:53,600
consider

585
00:19:53,600 --> 00:19:56,320
is who to inform prior to publishing the

586
00:19:56,320 --> 00:19:56,960
details

587
00:19:56,960 --> 00:19:59,760
publicly and once the details of public

588
00:19:59,760 --> 00:20:01,120
somewhat of a moot point

589
00:20:01,120 --> 00:20:02,480
um unless you're talking about different

590
00:20:02,480 --> 00:20:04,640
thresholds of information

591
00:20:04,640 --> 00:20:07,600
but we have this this um question of

592
00:20:07,600 --> 00:20:08,320
what happens

593
00:20:08,320 --> 00:20:12,240
prior to disclosure public disclosure

594
00:20:12,240 --> 00:20:13,840
and of course typically you would want

595
00:20:13,840 --> 00:20:16,080
to tell the upstream owner of the

596
00:20:16,080 --> 00:20:17,919
affected component like whether that's

597
00:20:17,919 --> 00:20:20,000
like a software vendor or an open source

598
00:20:20,000 --> 00:20:22,240
project they're in the best position to

599
00:20:22,240 --> 00:20:23,200
actually build

600
00:20:23,200 --> 00:20:25,200
the official batch for the issue but

601
00:20:25,200 --> 00:20:26,240
there's

602
00:20:26,240 --> 00:20:27,760
actually a wide range of other

603
00:20:27,760 --> 00:20:29,600
stakeholders as well

604
00:20:29,600 --> 00:20:31,120
and you have to sort of carefully

605
00:20:31,120 --> 00:20:32,640
consider the merits of giving

606
00:20:32,640 --> 00:20:35,120
each of these parties an early heads up

607
00:20:35,120 --> 00:20:37,280
about the the disclosure

608
00:20:37,280 --> 00:20:39,280
rather the vulnerability details and

609
00:20:39,280 --> 00:20:40,960
certainly they're all

610
00:20:40,960 --> 00:20:44,799
asking for those details

611
00:20:46,400 --> 00:20:48,400
so now i think we have a better

612
00:20:48,400 --> 00:20:50,480
framework to describe the actual problem

613
00:20:50,480 --> 00:20:52,080
we're trying to solve here

614
00:20:52,080 --> 00:20:54,400
um earlier in the presentation i talked

615
00:20:54,400 --> 00:20:56,559
about how hard it is to make optimal

616
00:20:56,559 --> 00:20:57,360
decisions

617
00:20:57,360 --> 00:20:59,919
in vulnerability disclosure without

618
00:20:59,919 --> 00:21:02,000
really defining what i meant

619
00:21:02,000 --> 00:21:03,919
and so here's a basic definition that we

620
00:21:03,919 --> 00:21:05,440
can start to use

621
00:21:05,440 --> 00:21:07,280
optimal disclosure policy is the

622
00:21:07,280 --> 00:21:09,360
configuration of these decisions the

623
00:21:09,360 --> 00:21:09,919
when

624
00:21:09,919 --> 00:21:12,880
what and who in order to minimize user

625
00:21:12,880 --> 00:21:14,960
harm

626
00:21:14,960 --> 00:21:17,039
and here we only have sort of one final

627
00:21:17,039 --> 00:21:18,720
thing to define before we can really

628
00:21:18,720 --> 00:21:19,600
dive into

629
00:21:19,600 --> 00:21:21,360
how we're answering our big three

630
00:21:21,360 --> 00:21:23,039
questions um

631
00:21:23,039 --> 00:21:25,039
so it says here that we want to minimize

632
00:21:25,039 --> 00:21:26,320
user harm

633
00:21:26,320 --> 00:21:30,000
but how do we measure user harm because

634
00:21:30,000 --> 00:21:31,440
of course we need to be able to measure

635
00:21:31,440 --> 00:21:32,960
it in order to know what we're trying to

636
00:21:32,960 --> 00:21:34,400
minimize

637
00:21:34,400 --> 00:21:36,480
and it turns out that this is a really

638
00:21:36,480 --> 00:21:40,080
challenging problem all of its own

639
00:21:40,320 --> 00:21:43,440
the temptation historically has been to

640
00:21:43,440 --> 00:21:45,280
measure user harm by counting

641
00:21:45,280 --> 00:21:48,080
the number of affected users so more

642
00:21:48,080 --> 00:21:49,280
compromised users

643
00:21:49,280 --> 00:21:52,559
equates to more harm and we know i think

644
00:21:52,559 --> 00:21:54,159
that a lot of vendors still think in

645
00:21:54,159 --> 00:21:54,960
these terms

646
00:21:54,960 --> 00:21:56,640
because they seem to like

647
00:21:56,640 --> 00:21:58,960
disproportionately prioritize widespread

648
00:21:58,960 --> 00:22:00,000
attacks

649
00:22:00,000 --> 00:22:02,000
which means like untargeted mass

650
00:22:02,000 --> 00:22:03,919
exploitation and internet worms and so

651
00:22:03,919 --> 00:22:04,640
on

652
00:22:04,640 --> 00:22:07,760
um and it seems seemingly intuitive at

653
00:22:07,760 --> 00:22:09,919
first glance to measure harm

654
00:22:09,919 --> 00:22:11,760
in this way by counting the affected

655
00:22:11,760 --> 00:22:13,360
users but

656
00:22:13,360 --> 00:22:14,720
we actually believe that this is a

657
00:22:14,720 --> 00:22:16,960
subtly incomplete description of what

658
00:22:16,960 --> 00:22:19,280
we're actually trying to measure

659
00:22:19,280 --> 00:22:22,320
so here's an example if we take an

660
00:22:22,320 --> 00:22:23,039
exploit

661
00:22:23,039 --> 00:22:26,480
that's used for tens of thousands

662
00:22:26,480 --> 00:22:29,840
uh of hosts to install monero mining

663
00:22:29,840 --> 00:22:30,559
software

664
00:22:30,559 --> 00:22:32,720
on like randomly selected targets on the

665
00:22:32,720 --> 00:22:33,760
internet

666
00:22:33,760 --> 00:22:36,559
tens of thousands compare that with an

667
00:22:36,559 --> 00:22:37,360
exploit that's

668
00:22:37,360 --> 00:22:40,400
just used a single time just once

669
00:22:40,400 --> 00:22:42,799
but it's used on a high level government

670
00:22:42,799 --> 00:22:43,520
official

671
00:22:43,520 --> 00:22:45,679
by a foreign adversary with the intent

672
00:22:45,679 --> 00:22:47,360
to steal data that can give an

673
00:22:47,360 --> 00:22:49,120
upper hand in trade negotiations for

674
00:22:49,120 --> 00:22:51,120
example something that could have like a

675
00:22:51,120 --> 00:22:53,039
small but noticeable effect on

676
00:22:53,039 --> 00:22:56,720
on gdp so even if we're just comparing

677
00:22:56,720 --> 00:22:57,679
the dollar value

678
00:22:57,679 --> 00:23:00,000
impact of these two compromises it's

679
00:23:00,000 --> 00:23:00,799
clear that the

680
00:23:00,799 --> 00:23:03,280
measure of user harm here is deceptively

681
00:23:03,280 --> 00:23:04,559
wrong

682
00:23:04,559 --> 00:23:07,440
so that's i think because we we really

683
00:23:07,440 --> 00:23:08,320
want to measure

684
00:23:08,320 --> 00:23:10,240
and understand what the real world

685
00:23:10,240 --> 00:23:11,919
consequences of each

686
00:23:11,919 --> 00:23:14,320
attack each compromise is essentially

687
00:23:14,320 --> 00:23:15,280
the total

688
00:23:15,280 --> 00:23:18,799
societal harm from that compromise

689
00:23:18,799 --> 00:23:20,640
and our central claim here is that while

690
00:23:20,640 --> 00:23:22,960
it's relatively easy to count the number

691
00:23:22,960 --> 00:23:24,640
of affected users by

692
00:23:24,640 --> 00:23:27,120
by any given attack it's actually

693
00:23:27,120 --> 00:23:29,120
incredibly difficult to reason about the

694
00:23:29,120 --> 00:23:29,840
total

695
00:23:29,840 --> 00:23:33,440
societal harm from that the consequence

696
00:23:33,440 --> 00:23:34,960
of a compromise

697
00:23:34,960 --> 00:23:37,600
is not uniform across the population of

698
00:23:37,600 --> 00:23:38,640
users

699
00:23:38,640 --> 00:23:41,279
and so the level of harm caused by any

700
00:23:41,279 --> 00:23:42,480
given attack

701
00:23:42,480 --> 00:23:44,320
it isn't always clear just on the number

702
00:23:44,320 --> 00:23:46,720
of affected users

703
00:23:46,720 --> 00:23:48,320
in some sense i think this is actually

704
00:23:48,320 --> 00:23:50,799
quite an unsatisfying definition

705
00:23:50,799 --> 00:23:53,600
because it is inherently subjective um

706
00:23:53,600 --> 00:23:54,159
but

707
00:23:54,159 --> 00:23:56,960
in project zero's disclosure philosophy

708
00:23:56,960 --> 00:23:57,360
um

709
00:23:57,360 --> 00:24:00,000
this is certainly a key idea that sort

710
00:24:00,000 --> 00:24:01,679
of permeates all of the

711
00:24:01,679 --> 00:24:03,679
decisions we have to make both in policy

712
00:24:03,679 --> 00:24:05,440
and elsewhere

713
00:24:05,440 --> 00:24:08,159
when we say the word user harm we can

714
00:24:08,159 --> 00:24:09,760
use the term societal harm

715
00:24:09,760 --> 00:24:12,559
interchangeably

716
00:24:12,640 --> 00:24:16,000
so now that we know what we're trying to

717
00:24:16,000 --> 00:24:17,679
optimize for more or less

718
00:24:17,679 --> 00:24:20,240
we can describe finally so projects are

719
00:24:20,240 --> 00:24:21,200
a specific

720
00:24:21,200 --> 00:24:23,360
configuration of our disclosure policy

721
00:24:23,360 --> 00:24:25,360
at least in basic terms

722
00:24:25,360 --> 00:24:28,159
when do we publish a bug 90 days after

723
00:24:28,159 --> 00:24:29,520
reporting it

724
00:24:29,520 --> 00:24:32,240
what do we publish at that time all of

725
00:24:32,240 --> 00:24:34,000
the technical details that we know about

726
00:24:34,000 --> 00:24:36,559
include improvement concept exploits

727
00:24:36,559 --> 00:24:39,200
and who do we tell prior to disclosure

728
00:24:39,200 --> 00:24:41,440
only the affected vendor or open source

729
00:24:41,440 --> 00:24:43,039
project that's responsible for

730
00:24:43,039 --> 00:24:43,760
developing

731
00:24:43,760 --> 00:24:47,840
an official batch nobody else

732
00:24:48,960 --> 00:24:51,440
so let's dive into each of these aspects

733
00:24:51,440 --> 00:24:52,559
in a bit more detail

734
00:24:52,559 --> 00:24:56,960
let's first consider when to publish

735
00:24:56,960 --> 00:25:00,000
so we use a 90 day deadline on

736
00:25:00,000 --> 00:25:02,559
our vulnerability reports meaning that

737
00:25:02,559 --> 00:25:04,880
regardless of whether a fix is available

738
00:25:04,880 --> 00:25:06,080
or not

739
00:25:06,080 --> 00:25:08,080
after 90 days we will make the issue

740
00:25:08,080 --> 00:25:10,640
public publicly available

741
00:25:10,640 --> 00:25:13,200
but why would we want to have a deadline

742
00:25:13,200 --> 00:25:14,240
at all

743
00:25:14,240 --> 00:25:16,559
that's the question so prior to

744
00:25:16,559 --> 00:25:18,720
disclosure deadlines the the standard

745
00:25:18,720 --> 00:25:19,360
approach was

746
00:25:19,360 --> 00:25:21,279
was called this responsible disclosure

747
00:25:21,279 --> 00:25:23,840
or coordinated vulnerability disclosure

748
00:25:23,840 --> 00:25:26,080
and that was where the software vendor

749
00:25:26,080 --> 00:25:27,760
uh

750
00:25:27,760 --> 00:25:29,360
whichever vendor was responsible for

751
00:25:29,360 --> 00:25:31,679
sort of developing the security patch

752
00:25:31,679 --> 00:25:33,840
they would decide the the time frame for

753
00:25:33,840 --> 00:25:35,200
that patch to be developed

754
00:25:35,200 --> 00:25:38,240
and uh and released and unfortunately

755
00:25:38,240 --> 00:25:40,240
the results weren't fantastic

756
00:25:40,240 --> 00:25:41,840
we tried this approach for many many

757
00:25:41,840 --> 00:25:44,159
years and bugs were regularly taking

758
00:25:44,159 --> 00:25:47,679
six months to fix sometimes over a year

759
00:25:47,679 --> 00:25:50,400
but why does it matter if a security bug

760
00:25:50,400 --> 00:25:52,400
takes over a year to fix

761
00:25:52,400 --> 00:25:54,240
um i think there's sort of three steps

762
00:25:54,240 --> 00:25:55,440
to this argument so

763
00:25:55,440 --> 00:25:59,200
come along with me um firstly

764
00:25:59,200 --> 00:26:01,520
we know that when a vulnerability is

765
00:26:01,520 --> 00:26:03,360
known to be exploited in the wild when

766
00:26:03,360 --> 00:26:04,880
there's an active attack and it's been

767
00:26:04,880 --> 00:26:05,600
discovered

768
00:26:05,600 --> 00:26:08,240
then an urgent fix is required it gets

769
00:26:08,240 --> 00:26:08,799
kind of

770
00:26:08,799 --> 00:26:12,080
accepted in across industry now when no

771
00:26:12,080 --> 00:26:13,840
one user harm is occurring

772
00:26:13,840 --> 00:26:15,919
we have a responsibility to address that

773
00:26:15,919 --> 00:26:17,039
in a timely manner

774
00:26:17,039 --> 00:26:21,200
so that's sort of like step one step two

775
00:26:21,200 --> 00:26:24,240
is a subtle point we know

776
00:26:24,240 --> 00:26:26,559
that some proportion of project zeros

777
00:26:26,559 --> 00:26:27,520
discoveries

778
00:26:27,520 --> 00:26:31,039
are bug collisions with attackers um

779
00:26:31,039 --> 00:26:32,880
at what that means is that at a certain

780
00:26:32,880 --> 00:26:35,120
rate our discoveries have already been

781
00:26:35,120 --> 00:26:36,720
exploited by attackers

782
00:26:36,720 --> 00:26:38,880
in secret in a way that nobody knows

783
00:26:38,880 --> 00:26:40,799
about and we've stumbled across the same

784
00:26:40,799 --> 00:26:42,640
result as they did

785
00:26:42,640 --> 00:26:44,640
and we know this because i think we're

786
00:26:44,640 --> 00:26:46,240
in a pretty unique position

787
00:26:46,240 --> 00:26:48,720
of highly public leadership in project

788
00:26:48,720 --> 00:26:49,440
zero

789
00:26:49,440 --> 00:26:50,799
and i think we have a view into this

790
00:26:50,799 --> 00:26:52,480
topic that no one really else

791
00:26:52,480 --> 00:26:55,760
has um attackers from

792
00:26:55,760 --> 00:26:57,600
all around the world have pretty

793
00:26:57,600 --> 00:26:59,760
consistently showed up at our doorsteps

794
00:26:59,760 --> 00:27:02,320
after the bug is fixed with some sort of

795
00:27:02,320 --> 00:27:03,600
evidence or claims

796
00:27:03,600 --> 00:27:06,559
about bug collision um it's a

797
00:27:06,559 --> 00:27:08,080
fascinating phenomenon

798
00:27:08,080 --> 00:27:09,600
interesting really interesting and it

799
00:27:09,600 --> 00:27:12,400
probably won't last too much longer

800
00:27:12,400 --> 00:27:14,640
um but it has given us sort of the

801
00:27:14,640 --> 00:27:16,400
insight we needed to arrive

802
00:27:16,400 --> 00:27:18,960
at the the need for a disclosure

803
00:27:18,960 --> 00:27:20,159
deadline

804
00:27:20,159 --> 00:27:21,120
because that's essentially the

805
00:27:21,120 --> 00:27:24,080
conclusion is that we need to factor in

806
00:27:24,080 --> 00:27:26,640
this reality of bug collision that at a

807
00:27:26,640 --> 00:27:28,480
certain rate our bugs are already being

808
00:27:28,480 --> 00:27:29,520
exploited

809
00:27:29,520 --> 00:27:32,559
and 90 days reflects that so we're

810
00:27:32,559 --> 00:27:33,600
saying here that there's an

811
00:27:33,600 --> 00:27:35,919
average case urgency that's somewhat

812
00:27:35,919 --> 00:27:37,039
higher than

813
00:27:37,039 --> 00:27:39,360
we'll get around to it eventually um but

814
00:27:39,360 --> 00:27:41,200
somewhat lower than

815
00:27:41,200 --> 00:27:42,799
there's a no in case of in the wild

816
00:27:42,799 --> 00:27:44,240
exploitation that's

817
00:27:44,240 --> 00:27:47,120
that's 90 days and i think we're pretty

818
00:27:47,120 --> 00:27:48,000
happy with the the

819
00:27:48,000 --> 00:27:50,559
results we've we've had with this uh

820
00:27:50,559 --> 00:27:51,200
approach

821
00:27:51,200 --> 00:27:53,360
we've gone from a world where just a

822
00:27:53,360 --> 00:27:54,399
small proportion

823
00:27:54,399 --> 00:27:56,880
of our bugs were fixed under 90 days to

824
00:27:56,880 --> 00:27:57,840
a world where

825
00:27:57,840 --> 00:27:59,760
98 percent or thereabouts of our

826
00:27:59,760 --> 00:28:01,600
discoveries are now fixed

827
00:28:01,600 --> 00:28:04,159
within the disclosure deadline so the

828
00:28:04,159 --> 00:28:05,360
lingering question

829
00:28:05,360 --> 00:28:08,000
for the win in my mind isn't so much

830
00:28:08,000 --> 00:28:09,520
whether or not to have a disclosure

831
00:28:09,520 --> 00:28:10,640
deadline

832
00:28:10,640 --> 00:28:12,720
um but rather it's it's whether we have

833
00:28:12,720 --> 00:28:14,159
an opportunity to

834
00:28:14,159 --> 00:28:17,039
improve things even further so looking

835
00:28:17,039 --> 00:28:18,159
for that i think

836
00:28:18,159 --> 00:28:21,039
there's no reason why we can't aim for a

837
00:28:21,039 --> 00:28:23,200
lower number than 90.

838
00:28:23,200 --> 00:28:25,279
um what that number might be still

839
00:28:25,279 --> 00:28:26,559
remains to be seen but

840
00:28:26,559 --> 00:28:30,799
i think that should be the vision

841
00:28:30,799 --> 00:28:32,960
so moving on we need to decide what to

842
00:28:32,960 --> 00:28:34,240
publish

843
00:28:34,240 --> 00:28:35,840
both in the case where a patch is

844
00:28:35,840 --> 00:28:37,679
available and in the case where no batch

845
00:28:37,679 --> 00:28:40,320
is available

846
00:28:41,200 --> 00:28:45,039
right so at project zero we have decided

847
00:28:45,039 --> 00:28:45,840
to share

848
00:28:45,840 --> 00:28:47,600
all of our insights about a

849
00:28:47,600 --> 00:28:49,840
vulnerability including proof of concept

850
00:28:49,840 --> 00:28:50,880
exploits

851
00:28:50,880 --> 00:28:52,960
um so let's first look at some of the

852
00:28:52,960 --> 00:28:54,720
positive aspects of releasing these

853
00:28:54,720 --> 00:28:55,840
details

854
00:28:55,840 --> 00:28:58,240
and then we'll look at the risks so

855
00:28:58,240 --> 00:29:00,480
firstly

856
00:29:00,480 --> 00:29:02,559
full technical details are more

857
00:29:02,559 --> 00:29:04,320
actionable than just saying here's a

858
00:29:04,320 --> 00:29:06,480
patch and you should install it

859
00:29:06,480 --> 00:29:08,320
and you might say that well most users

860
00:29:08,320 --> 00:29:10,080
won't use this information

861
00:29:10,080 --> 00:29:12,000
i think that's definitely true but we

862
00:29:12,000 --> 00:29:14,080
want to give an opportunity for those

863
00:29:14,080 --> 00:29:14,880
users that

864
00:29:14,880 --> 00:29:17,919
can utilize this data um or will be

865
00:29:17,919 --> 00:29:19,520
influenced by this data

866
00:29:19,520 --> 00:29:22,080
or who will use products and services

867
00:29:22,080 --> 00:29:23,840
that uh using this data

868
00:29:23,840 --> 00:29:26,559
there's an entire ecosystem of defenders

869
00:29:26,559 --> 00:29:27,360
that exist

870
00:29:27,360 --> 00:29:29,360
outside of the the closed walls of the

871
00:29:29,360 --> 00:29:30,559
big software vendors

872
00:29:30,559 --> 00:29:32,640
we shouldn't forget that i have a lot of

873
00:29:32,640 --> 00:29:34,720
optimism for what defenders can achieve

874
00:29:34,720 --> 00:29:36,880
when when trusted with the raw data like

875
00:29:36,880 --> 00:29:37,360
this

876
00:29:37,360 --> 00:29:39,360
and it's often wildly creative and

877
00:29:39,360 --> 00:29:41,679
important work

878
00:29:41,679 --> 00:29:44,480
so secondly we want to share what we've

879
00:29:44,480 --> 00:29:46,080
learned about the state of the art and

880
00:29:46,080 --> 00:29:47,360
exploit development

881
00:29:47,360 --> 00:29:49,600
because we want to demystify how

882
00:29:49,600 --> 00:29:50,399
exploits

883
00:29:50,399 --> 00:29:54,000
really work exploits are the

884
00:29:54,000 --> 00:29:55,840
closest thing to magic we have in the

885
00:29:55,840 --> 00:29:57,840
modern world and people

886
00:29:57,840 --> 00:30:00,320
connect with that they respond to that

887
00:30:00,320 --> 00:30:01,600
um we want

888
00:30:01,600 --> 00:30:04,000
to get our users engaged in this topic

889
00:30:04,000 --> 00:30:06,240
we want our users to understand

890
00:30:06,240 --> 00:30:08,320
the power of these exploits and their

891
00:30:08,320 --> 00:30:10,080
importance to society

892
00:30:10,080 --> 00:30:12,720
and we want our users to ask questions

893
00:30:12,720 --> 00:30:14,399
of the companies that are providing this

894
00:30:14,399 --> 00:30:15,360
vulnerable tech

895
00:30:15,360 --> 00:30:18,720
to them so finally uh

896
00:30:18,720 --> 00:30:22,080
i think we have to plan for the future

897
00:30:22,080 --> 00:30:24,880
and to share our knowledge with the the

898
00:30:24,880 --> 00:30:25,360
next

899
00:30:25,360 --> 00:30:28,480
generation of hackers it's i think it's

900
00:30:28,480 --> 00:30:30,399
a fundamentally pessimistic world view

901
00:30:30,399 --> 00:30:32,880
to say that if we share that information

902
00:30:32,880 --> 00:30:35,679
with the public and you know share this

903
00:30:35,679 --> 00:30:37,679
information about how these attacks work

904
00:30:37,679 --> 00:30:40,000
that that will cause more harm than good

905
00:30:40,000 --> 00:30:41,120
i've i've seen

906
00:30:41,120 --> 00:30:43,039
i would say quite the opposite and in

907
00:30:43,039 --> 00:30:45,279
terms of the number of young researchers

908
00:30:45,279 --> 00:30:45,760
that have

909
00:30:45,760 --> 00:30:47,440
approached me to say that they were

910
00:30:47,440 --> 00:30:49,600
inspired by the project zero blog and

911
00:30:49,600 --> 00:30:51,120
then it gave them the resources they

912
00:30:51,120 --> 00:30:51,840
needed to

913
00:30:51,840 --> 00:30:54,880
to learn this craft um some of them

914
00:30:54,880 --> 00:30:56,960
may even be in this audience like some

915
00:30:56,960 --> 00:30:58,640
of them may be working for your

916
00:30:58,640 --> 00:31:01,440
for your company um and on balance i

917
00:31:01,440 --> 00:31:01,840
think

918
00:31:01,840 --> 00:31:06,559
um that's a wonderfully positive outcome

919
00:31:06,559 --> 00:31:08,880
and also i would say within the existing

920
00:31:08,880 --> 00:31:09,679
community

921
00:31:09,679 --> 00:31:11,279
at project zero we we do have an

922
00:31:11,279 --> 00:31:13,200
opportunity to be leaders

923
00:31:13,200 --> 00:31:16,159
as well as researchers and our work

924
00:31:16,159 --> 00:31:16,960
we've found

925
00:31:16,960 --> 00:31:19,760
sets an agenda for for a wave of

926
00:31:19,760 --> 00:31:21,279
follow-up research

927
00:31:21,279 --> 00:31:23,600
um take spectra meltdown and all of the

928
00:31:23,600 --> 00:31:25,039
wonderful work that's happened

929
00:31:25,039 --> 00:31:28,320
as a result of of that publication

930
00:31:28,320 --> 00:31:31,120
and this follow-up research is pursued

931
00:31:31,120 --> 00:31:32,799
by defensive researchers

932
00:31:32,799 --> 00:31:34,559
all over the world and we want to

933
00:31:34,559 --> 00:31:35,840
encourage that we want

934
00:31:35,840 --> 00:31:37,840
more of that type of community-based

935
00:31:37,840 --> 00:31:39,120
collaboration

936
00:31:39,120 --> 00:31:40,880
and i think sharing our results is the

937
00:31:40,880 --> 00:31:43,120
foundation for that community effort

938
00:31:43,120 --> 00:31:45,120
so if you believe in that approach and

939
00:31:45,120 --> 00:31:46,799
what can be achieved in that method

940
00:31:46,799 --> 00:31:49,919
we need that that sharing uh to get it

941
00:31:49,919 --> 00:31:53,679
all started that's the raw ingredients

942
00:31:54,000 --> 00:31:56,480
so i've established i think that there

943
00:31:56,480 --> 00:31:58,559
is some defensive benefits of releasing

944
00:31:58,559 --> 00:32:00,240
these details

945
00:32:00,240 --> 00:32:02,159
but how does it balance against the

946
00:32:02,159 --> 00:32:04,240
potential risks

947
00:32:04,240 --> 00:32:06,480
so obviously exploits can be dangerous

948
00:32:06,480 --> 00:32:07,600
and so

949
00:32:07,600 --> 00:32:09,519
surely intuitively releasing more

950
00:32:09,519 --> 00:32:13,039
exploits leads to more user harm

951
00:32:13,039 --> 00:32:16,320
it's a subtle point um it certainly has

952
00:32:16,320 --> 00:32:16,960
happened

953
00:32:16,960 --> 00:32:18,640
that project zero's reported

954
00:32:18,640 --> 00:32:20,240
vulnerabilities have been picked up

955
00:32:20,240 --> 00:32:22,559
and used by opportunistic attackers we

956
00:32:22,559 --> 00:32:25,039
have seen that happen a handful of times

957
00:32:25,039 --> 00:32:27,039
but it doesn't seem to happen very often

958
00:32:27,039 --> 00:32:28,880
based on all of the observer

959
00:32:28,880 --> 00:32:32,159
observable data on one day attacks

960
00:32:32,159 --> 00:32:34,960
of course as i mentioned the data is

961
00:32:34,960 --> 00:32:37,440
incomplete

962
00:32:37,440 --> 00:32:39,600
but you would argue that the the data

963
00:32:39,600 --> 00:32:41,360
for known vulnerabilities appears to be

964
00:32:41,360 --> 00:32:43,039
a little bit more representative than

965
00:32:43,039 --> 00:32:44,880
our data on zero day attacks

966
00:32:44,880 --> 00:32:47,840
what we see in that one day spaces is um

967
00:32:47,840 --> 00:32:49,279
it's not very common that our

968
00:32:49,279 --> 00:32:51,039
our issues have been picked up and used

969
00:32:51,039 --> 00:32:53,519
by opportunistic attackers

970
00:32:53,519 --> 00:32:56,480
so why is that why isn't our research

971
00:32:56,480 --> 00:32:58,240
being used in malicious attacks very

972
00:32:58,240 --> 00:32:59,919
often

973
00:32:59,919 --> 00:33:01,279
i think the main reason is that there's

974
00:33:01,279 --> 00:33:03,840
a mismatch between capabilities

975
00:33:03,840 --> 00:33:07,120
and motivation so remember that

976
00:33:07,120 --> 00:33:09,360
most of project series disclosures are

977
00:33:09,360 --> 00:33:10,399
one part of

978
00:33:10,399 --> 00:33:13,600
an exploit chain and in a modern

979
00:33:13,600 --> 00:33:15,760
operating system you often need like

980
00:33:15,760 --> 00:33:17,039
three or four or five

981
00:33:17,039 --> 00:33:20,080
individual bugs to compromise remotely

982
00:33:20,080 --> 00:33:21,919
the the entire system it's like due to

983
00:33:21,919 --> 00:33:23,519
all the sandboxing and exploit

984
00:33:23,519 --> 00:33:25,440
mitigations and so on

985
00:33:25,440 --> 00:33:27,760
so you need a pretty high level of skill

986
00:33:27,760 --> 00:33:29,679
to complete and exploit chain from

987
00:33:29,679 --> 00:33:32,240
whatever initial ingredients project

988
00:33:32,240 --> 00:33:33,760
zero has given you

989
00:33:33,760 --> 00:33:36,000
and if you can do that if you can

990
00:33:36,000 --> 00:33:38,000
complete that exploit chain

991
00:33:38,000 --> 00:33:39,760
you can probably find your own zero day

992
00:33:39,760 --> 00:33:41,760
rather than just using one of ours

993
00:33:41,760 --> 00:33:44,000
and from a detection risk perspective

994
00:33:44,000 --> 00:33:44,960
it's clear

995
00:33:44,960 --> 00:33:46,640
which of these two options as an

996
00:33:46,640 --> 00:33:49,360
attacker you would prefer

997
00:33:49,360 --> 00:33:52,080
so what the data does actually suggest

998
00:33:52,080 --> 00:33:53,519
is that there are two classes of

999
00:33:53,519 --> 00:33:55,440
vulnerabilities that are favored by the

1000
00:33:55,440 --> 00:33:57,600
the low-skilled opportunistic attackers

1001
00:33:57,600 --> 00:33:58,480
the ones that

1002
00:33:58,480 --> 00:34:01,440
can't complete the exploit chain um

1003
00:34:01,440 --> 00:34:02,080
firstly

1004
00:34:02,080 --> 00:34:04,240
bugs that are trivial to exploit so

1005
00:34:04,240 --> 00:34:06,080
we're talking like one shot remote code

1006
00:34:06,080 --> 00:34:07,440
execution based on

1007
00:34:07,440 --> 00:34:10,719
design for a logic bug things like the

1008
00:34:10,719 --> 00:34:13,359
sort of apache struts or sharepoint type

1009
00:34:13,359 --> 00:34:15,199
uh deserialization bugs that we've seen

1010
00:34:15,199 --> 00:34:16,399
in recent years

1011
00:34:16,399 --> 00:34:18,480
um unfortunately like the exploit

1012
00:34:18,480 --> 00:34:20,000
payloads for those are trivial they can

1013
00:34:20,000 --> 00:34:21,280
be reversed out of the patch

1014
00:34:21,280 --> 00:34:24,079
generally pretty easily um the second

1015
00:34:24,079 --> 00:34:25,280
sort of class of

1016
00:34:25,280 --> 00:34:27,280
of issue and this is a again a subtle

1017
00:34:27,280 --> 00:34:28,639
point

1018
00:34:28,639 --> 00:34:30,560
bugs that were originally detected as

1019
00:34:30,560 --> 00:34:32,879
being exploited in the wild as a zero

1020
00:34:32,879 --> 00:34:33,599
day

1021
00:34:33,599 --> 00:34:36,079
are being used at a higher rate in

1022
00:34:36,079 --> 00:34:37,359
opportunistic attacks

1023
00:34:37,359 --> 00:34:40,960
than normal cves i think that's because

1024
00:34:40,960 --> 00:34:43,760
either um a fully sort of productized

1025
00:34:43,760 --> 00:34:45,760
exploit capability leaks

1026
00:34:45,760 --> 00:34:49,119
like we saw wannacry and not picture

1027
00:34:49,119 --> 00:34:51,280
using the eternal blue exploits

1028
00:34:51,280 --> 00:34:53,440
um or because there's a higher level of

1029
00:34:53,440 --> 00:34:55,440
social proof for a particular cve

1030
00:34:55,440 --> 00:34:57,839
is worth it to invest in for for

1031
00:34:57,839 --> 00:34:59,599
whatever capability there is to do that

1032
00:34:59,599 --> 00:35:01,680
investment

1033
00:35:01,680 --> 00:35:04,240
in the vast majority of cases project

1034
00:35:04,240 --> 00:35:05,760
zero isn't released in either

1035
00:35:05,760 --> 00:35:09,280
two of these categories so

1036
00:35:09,280 --> 00:35:12,400
overall our conclusion is that the

1037
00:35:12,400 --> 00:35:15,359
openness here benefits defenders more

1038
00:35:15,359 --> 00:35:16,560
than attackers

1039
00:35:16,560 --> 00:35:18,320
so we're saying we have a neutral effect

1040
00:35:18,320 --> 00:35:19,920
on attacker capability

1041
00:35:19,920 --> 00:35:21,680
and a positive effect on defender

1042
00:35:21,680 --> 00:35:23,119
capability

1043
00:35:23,119 --> 00:35:24,560
and i think this represents a

1044
00:35:24,560 --> 00:35:27,040
fundamentally optimistic world view but

1045
00:35:27,040 --> 00:35:29,599
but one that's also grounded in reality

1046
00:35:29,599 --> 00:35:31,359
based on our experience with with

1047
00:35:31,359 --> 00:35:32,640
exploit development and

1048
00:35:32,640 --> 00:35:34,880
vulnerability disclosure so we look at

1049
00:35:34,880 --> 00:35:36,160
the data

1050
00:35:36,160 --> 00:35:38,160
we work on our models for attacker

1051
00:35:38,160 --> 00:35:39,200
behavior

1052
00:35:39,200 --> 00:35:41,119
and this is the the conclusion the

1053
00:35:41,119 --> 00:35:43,599
results

1054
00:35:43,599 --> 00:35:46,320
so now our final decision uh the the

1055
00:35:46,320 --> 00:35:47,839
common scenario is this

1056
00:35:47,839 --> 00:35:50,079
you find a critical security bug and a

1057
00:35:50,079 --> 00:35:51,520
piece of code that's used

1058
00:35:51,520 --> 00:35:53,520
throughout the internet who should you

1059
00:35:53,520 --> 00:35:55,599
tell

1060
00:35:55,599 --> 00:35:57,359
and for project zero the answer is that

1061
00:35:57,359 --> 00:35:59,119
we have

1062
00:35:59,119 --> 00:36:01,440
a policy to only report the issue to the

1063
00:36:01,440 --> 00:36:03,680
party that's responsible for developing

1064
00:36:03,680 --> 00:36:05,680
and releasing the patch so in other

1065
00:36:05,680 --> 00:36:07,920
words once we've validated the

1066
00:36:07,920 --> 00:36:09,440
vulnerability exists and we're ready to

1067
00:36:09,440 --> 00:36:12,240
report it we tell the minimum necessary

1068
00:36:12,240 --> 00:36:14,000
number of people required to build the

1069
00:36:14,000 --> 00:36:15,839
official security patch

1070
00:36:15,839 --> 00:36:17,599
and in our experience this gets the best

1071
00:36:17,599 --> 00:36:19,680
results uh it allows us to

1072
00:36:19,680 --> 00:36:22,400
to focus on the engineering task at hand

1073
00:36:22,400 --> 00:36:24,400
working with the vendor to build a

1074
00:36:24,400 --> 00:36:26,960
correct and comprehensive patch with the

1075
00:36:26,960 --> 00:36:29,119
minimum number of distractions

1076
00:36:29,119 --> 00:36:30,560
so what we've found is that as you

1077
00:36:30,560 --> 00:36:32,000
expand the set of people who are

1078
00:36:32,000 --> 00:36:33,040
involved

1079
00:36:33,040 --> 00:36:34,880
the more complicated the coordination

1080
00:36:34,880 --> 00:36:36,880
effort becomes and you start to take on

1081
00:36:36,880 --> 00:36:37,359
a lot of

1082
00:36:37,359 --> 00:36:40,800
excess risk so let's dive into that a

1083
00:36:40,800 --> 00:36:42,160
bit more

1084
00:36:42,160 --> 00:36:44,640
the question is wouldn't it be ideal if

1085
00:36:44,640 --> 00:36:45,440
we could tell

1086
00:36:45,440 --> 00:36:47,359
a small group of defenders about the

1087
00:36:47,359 --> 00:36:49,839
security bug at the same time as the

1088
00:36:49,839 --> 00:36:50,880
upstream vendor

1089
00:36:50,880 --> 00:36:53,359
so in that ideal world you'll be able to

1090
00:36:53,359 --> 00:36:54,079
do this

1091
00:36:54,079 --> 00:36:56,000
to share the information about the

1092
00:36:56,000 --> 00:36:57,280
threats and the vulnerabilities

1093
00:36:57,280 --> 00:36:59,599
so they can get started uh working on

1094
00:36:59,599 --> 00:37:02,000
the issue as soon as possible

1095
00:37:02,000 --> 00:37:04,960
but the the reality is very different so

1096
00:37:04,960 --> 00:37:06,000
concretely

1097
00:37:06,000 --> 00:37:08,000
these efforts to create a sharing club

1098
00:37:08,000 --> 00:37:09,440
for vulnerabilities

1099
00:37:09,440 --> 00:37:12,079
they have consistently leaked and i'm

1100
00:37:12,079 --> 00:37:13,280
not talking about just

1101
00:37:13,280 --> 00:37:15,040
public leaks here i'm talking about like

1102
00:37:15,040 --> 00:37:17,119
the the more insidious kind of leak

1103
00:37:17,119 --> 00:37:17,599
where

1104
00:37:17,599 --> 00:37:19,280
attackers have gained access to the

1105
00:37:19,280 --> 00:37:21,359
embargo but the embargo members are

1106
00:37:21,359 --> 00:37:22,720
unaware

1107
00:37:22,720 --> 00:37:24,560
and it's happened time and time again in

1108
00:37:24,560 --> 00:37:26,800
history going all the way back to the

1109
00:37:26,800 --> 00:37:28,560
the zados security mailing list we

1110
00:37:28,560 --> 00:37:30,880
talked about in our timeline earlier

1111
00:37:30,880 --> 00:37:32,000
where the mailing list was like a

1112
00:37:32,000 --> 00:37:33,760
favorite target of hackers seeking to

1113
00:37:33,760 --> 00:37:34,480
gain

1114
00:37:34,480 --> 00:37:36,560
special knowledge of the vulnerabilities

1115
00:37:36,560 --> 00:37:38,000
being discussed there

1116
00:37:38,000 --> 00:37:39,599
and it happened again to the vendor sec

1117
00:37:39,599 --> 00:37:41,040
mailing list the same

1118
00:37:41,040 --> 00:37:43,920
concept in the early 2000s it's happened

1119
00:37:43,920 --> 00:37:44,320
to

1120
00:37:44,320 --> 00:37:46,240
microsoft's map antivirus sharing

1121
00:37:46,240 --> 00:37:48,240
program and i suspect it's happened to

1122
00:37:48,240 --> 00:37:50,000
project zero bug reports in the past

1123
00:37:50,000 --> 00:37:52,079
as well like spectre and meltdown for

1124
00:37:52,079 --> 00:37:54,720
example i have my suspicions

1125
00:37:54,720 --> 00:37:57,440
and unless a potential risk goes on

1126
00:37:57,440 --> 00:37:58,880
we've noticed that there's a certain

1127
00:37:58,880 --> 00:37:59,760
behavior

1128
00:37:59,760 --> 00:38:01,359
that happens in these vulnerability

1129
00:38:01,359 --> 00:38:03,599
sharing clubs where members are

1130
00:38:03,599 --> 00:38:05,680
are somewhat eager perhaps desperate to

1131
00:38:05,680 --> 00:38:07,920
maintain their membership in the club

1132
00:38:07,920 --> 00:38:10,000
and so they don't want to rock the boat

1133
00:38:10,000 --> 00:38:11,599
and that means that

1134
00:38:11,599 --> 00:38:14,720
the timelines trend towards the demands

1135
00:38:14,720 --> 00:38:16,880
and needs of the slowest members of the

1136
00:38:16,880 --> 00:38:18,079
group with very little

1137
00:38:18,079 --> 00:38:20,400
pushback and so in a world where we're

1138
00:38:20,400 --> 00:38:22,480
trying to decrease the the vulnerability

1139
00:38:22,480 --> 00:38:24,079
remediation timeline

1140
00:38:24,079 --> 00:38:26,320
i find this quite counterproductive and

1141
00:38:26,320 --> 00:38:28,240
indeed quite frustrating

1142
00:38:28,240 --> 00:38:31,040
so there's a question of incentives as

1143
00:38:31,040 --> 00:38:32,160
well and this is more of a

1144
00:38:32,160 --> 00:38:35,520
long-term view we've seen that people

1145
00:38:35,520 --> 00:38:37,760
rely on these these vulnerability

1146
00:38:37,760 --> 00:38:39,440
sharing clubs as type of like a

1147
00:38:39,440 --> 00:38:42,640
a band-aid type solution um but really

1148
00:38:42,640 --> 00:38:43,280
we need

1149
00:38:43,280 --> 00:38:44,960
structural improvements to how

1150
00:38:44,960 --> 00:38:47,040
vulnerabilities are attached and how

1151
00:38:47,040 --> 00:38:47,440
those

1152
00:38:47,440 --> 00:38:50,880
patches are adopted by users and these

1153
00:38:50,880 --> 00:38:52,560
sharing clubs seem rather

1154
00:38:52,560 --> 00:38:55,599
to entrench the current technologies the

1155
00:38:55,599 --> 00:38:57,280
current processes

1156
00:38:57,280 --> 00:38:59,760
and we want to overhaul and improve

1157
00:38:59,760 --> 00:39:01,599
those processes rather than entrench

1158
00:39:01,599 --> 00:39:03,280
them

1159
00:39:03,280 --> 00:39:04,640
and finally of course there's the issue

1160
00:39:04,640 --> 00:39:06,960
of fairness um the process to

1161
00:39:06,960 --> 00:39:10,480
decide who's included and excluded is

1162
00:39:10,480 --> 00:39:12,400
also typically quite inconsistent and

1163
00:39:12,400 --> 00:39:14,160
unfair and we don't

1164
00:39:14,160 --> 00:39:15,920
really want to be in a position to pick

1165
00:39:15,920 --> 00:39:18,079
winners and losers

1166
00:39:18,079 --> 00:39:20,160
so overall we think it's a better idea

1167
00:39:20,160 --> 00:39:21,760
to work directly

1168
00:39:21,760 --> 00:39:23,839
with vendors to get an official patch

1169
00:39:23,839 --> 00:39:26,160
out a timely manner

1170
00:39:26,160 --> 00:39:27,839
and then for the wider ecosystem to

1171
00:39:27,839 --> 00:39:29,920
respond to the security advisories when

1172
00:39:29,920 --> 00:39:32,960
the patch is ready

1173
00:39:34,960 --> 00:39:37,520
so that's how we arrived at the answers

1174
00:39:37,520 --> 00:39:39,200
for our big three questions trying to

1175
00:39:39,200 --> 00:39:41,280
achieve a policy that's optimized for

1176
00:39:41,280 --> 00:39:42,160
user security

1177
00:39:42,160 --> 00:39:45,040
but also simple consistent and fair but

1178
00:39:45,040 --> 00:39:47,280
i wanted to to quickly point out that

1179
00:39:47,280 --> 00:39:48,000
even with

1180
00:39:48,000 --> 00:39:49,440
all of our best efforts to treat

1181
00:39:49,440 --> 00:39:51,040
vulnerabilities fairly under our

1182
00:39:51,040 --> 00:39:52,560
disclosure policy

1183
00:39:52,560 --> 00:39:54,560
there's always going to be extreme edge

1184
00:39:54,560 --> 00:39:56,560
cases where things go

1185
00:39:56,560 --> 00:39:58,400
quite differently and i think it's

1186
00:39:58,400 --> 00:40:00,480
fascinating to inspect those extremes to

1187
00:40:00,480 --> 00:40:01,040
see

1188
00:40:01,040 --> 00:40:03,760
what can be learned so here are two

1189
00:40:03,760 --> 00:40:05,520
examples that have quite radically

1190
00:40:05,520 --> 00:40:08,880
different outcomes firstly a couple of

1191
00:40:08,880 --> 00:40:09,520
weeks ago

1192
00:40:09,520 --> 00:40:10,960
we discovered and reported a

1193
00:40:10,960 --> 00:40:12,800
vulnerability in free type a font

1194
00:40:12,800 --> 00:40:13,680
library

1195
00:40:13,680 --> 00:40:16,480
and it was been actively exploited in

1196
00:40:16,480 --> 00:40:18,720
the wild against chrome users

1197
00:40:18,720 --> 00:40:20,480
so we reported the bug to chrome

1198
00:40:20,480 --> 00:40:22,960
security one day later there was a new

1199
00:40:22,960 --> 00:40:24,000
chrome stable release

1200
00:40:24,000 --> 00:40:26,240
with the fix included and a new version

1201
00:40:26,240 --> 00:40:28,079
of the free type library the day after

1202
00:40:28,079 --> 00:40:28,480
that

1203
00:40:28,480 --> 00:40:32,240
it's pretty amazing at the other extreme

1204
00:40:32,240 --> 00:40:34,319
project zero discovered and reported the

1205
00:40:34,319 --> 00:40:36,839
cpu vulnerabilities known as vector and

1206
00:40:36,839 --> 00:40:38,079
meltdown

1207
00:40:38,079 --> 00:40:40,560
and that involved an industry-wide

1208
00:40:40,560 --> 00:40:42,480
embargo that were brought into

1209
00:40:42,480 --> 00:40:45,680
somewhat reluctantly involving a huge

1210
00:40:45,680 --> 00:40:47,440
number of organizations

1211
00:40:47,440 --> 00:40:50,640
cpu vendors hardware oems operating

1212
00:40:50,640 --> 00:40:52,079
system vendors browser vendors

1213
00:40:52,079 --> 00:40:55,280
and more it's like a lot of people and

1214
00:40:55,280 --> 00:40:55,920
took

1215
00:40:55,920 --> 00:40:58,960
216 days between nearly

1216
00:40:58,960 --> 00:41:01,200
over seven months between our initial

1217
00:41:01,200 --> 00:41:02,400
bug report

1218
00:41:02,400 --> 00:41:05,440
and the first public release of details

1219
00:41:05,440 --> 00:41:07,760
and over seven months and that embargo

1220
00:41:07,760 --> 00:41:08,720
leaked

1221
00:41:08,720 --> 00:41:10,319
and the patches at the end of it were

1222
00:41:10,319 --> 00:41:12,560
only partially complete

1223
00:41:12,560 --> 00:41:15,760
so obviously the the complexity involved

1224
00:41:15,760 --> 00:41:16,960
in these two responses

1225
00:41:16,960 --> 00:41:20,000
is quite different on multiple levels

1226
00:41:20,000 --> 00:41:21,359
but i think the point is that we should

1227
00:41:21,359 --> 00:41:23,680
be working on decreasing the distance

1228
00:41:23,680 --> 00:41:25,599
between these two cases

1229
00:41:25,599 --> 00:41:28,319
i think it'll be interesting to revisit

1230
00:41:28,319 --> 00:41:29,359
this exercise

1231
00:41:29,359 --> 00:41:31,839
let's say in like 10 years time because

1232
00:41:31,839 --> 00:41:32,880
i think the distance

1233
00:41:32,880 --> 00:41:35,520
is actually closing and one day we'll

1234
00:41:35,520 --> 00:41:35,920
have

1235
00:41:35,920 --> 00:41:38,480
a reasonable shot at responding to bugs

1236
00:41:38,480 --> 00:41:39,760
like spectre

1237
00:41:39,760 --> 00:41:41,760
in days rather than months i think

1238
00:41:41,760 --> 00:41:44,400
that's the goal

1239
00:41:44,880 --> 00:41:46,880
so certainly there's this cause for

1240
00:41:46,880 --> 00:41:48,960
optimism uh and certainly i think the

1241
00:41:48,960 --> 00:41:51,119
90-day disclosure deadline itself

1242
00:41:51,119 --> 00:41:54,000
isn't as controversial as it once was uh

1243
00:41:54,000 --> 00:41:55,119
but we still have some big

1244
00:41:55,119 --> 00:41:57,839
challenges and disclosure and here's a

1245
00:41:57,839 --> 00:42:01,839
few that been on my mind in 2020

1246
00:42:01,839 --> 00:42:03,920
um while the patch timelines have

1247
00:42:03,920 --> 00:42:05,280
improved a lot

1248
00:42:05,280 --> 00:42:08,000
patch correctness is still a problem

1249
00:42:08,000 --> 00:42:09,200
like the rate of

1250
00:42:09,200 --> 00:42:12,400
broken or incomplete patches is very

1251
00:42:12,400 --> 00:42:13,359
high

1252
00:42:13,359 --> 00:42:14,880
um and we've been finding a lot of

1253
00:42:14,880 --> 00:42:16,640
variants and this is pretty concerning

1254
00:42:16,640 --> 00:42:17,680
because we know the

1255
00:42:17,680 --> 00:42:19,599
attackers are looking for these variants

1256
00:42:19,599 --> 00:42:21,359
as well

1257
00:42:21,359 --> 00:42:24,480
so secondly while we had some success

1258
00:42:24,480 --> 00:42:26,000
recently with the free type bug and

1259
00:42:26,000 --> 00:42:27,040
others

1260
00:42:27,040 --> 00:42:29,040
as a whole i think the industry responds

1261
00:42:29,040 --> 00:42:30,880
to actively exploited zero-day

1262
00:42:30,880 --> 00:42:32,079
vulnerabilities

1263
00:42:32,079 --> 00:42:33,520
those are zero days that we know are

1264
00:42:33,520 --> 00:42:35,680
being used in the wild i think it needs

1265
00:42:35,680 --> 00:42:36,880
a little bit more work

1266
00:42:36,880 --> 00:42:39,599
the the outcomes are very inconsistent

1267
00:42:39,599 --> 00:42:41,040
at the moment

1268
00:42:41,040 --> 00:42:43,599
so it's fair to say that there's less

1269
00:42:43,599 --> 00:42:44,079
industry

1270
00:42:44,079 --> 00:42:46,400
consensus around how they handle

1271
00:42:46,400 --> 00:42:47,200
disclosure

1272
00:42:47,200 --> 00:42:49,599
for actively exploited bug reports uh

1273
00:42:49,599 --> 00:42:50,560
and that's something we've

1274
00:42:50,560 --> 00:42:54,160
committed to working on in 2021

1275
00:42:54,160 --> 00:42:56,400
so finally uh we said earlier that

1276
00:42:56,400 --> 00:42:58,480
exploits are magic

1277
00:42:58,480 --> 00:43:02,000
but people fear magic and so

1278
00:43:02,000 --> 00:43:03,599
what we see is that there's like a

1279
00:43:03,599 --> 00:43:05,760
growing amount of pressure

1280
00:43:05,760 --> 00:43:08,160
to withhold or stop publishing proof of

1281
00:43:08,160 --> 00:43:09,440
concept exploits

1282
00:43:09,440 --> 00:43:12,000
at all or particularly at any time close

1283
00:43:12,000 --> 00:43:12,800
to a patch

1284
00:43:12,800 --> 00:43:15,760
is released and i suspect that this is

1285
00:43:15,760 --> 00:43:16,480
going to be

1286
00:43:16,480 --> 00:43:18,720
a longer discussion uh that plays out

1287
00:43:18,720 --> 00:43:20,480
over the next few years

1288
00:43:20,480 --> 00:43:22,480
but i wanted to share my fundamental

1289
00:43:22,480 --> 00:43:23,680
fear

1290
00:43:23,680 --> 00:43:25,760
is that in a world where we can't

1291
00:43:25,760 --> 00:43:27,680
publish information about how

1292
00:43:27,680 --> 00:43:30,160
exploits really work then the private

1293
00:43:30,160 --> 00:43:32,160
state of the art and exploit development

1294
00:43:32,160 --> 00:43:32,720
will move

1295
00:43:32,720 --> 00:43:34,960
so far ahead of the public understanding

1296
00:43:34,960 --> 00:43:36,720
of it that we'll just never be able to

1297
00:43:36,720 --> 00:43:37,760
catch up again

1298
00:43:37,760 --> 00:43:39,359
i think that divergence would be really

1299
00:43:39,359 --> 00:43:41,839
scary

1300
00:43:43,200 --> 00:43:45,760
but let's focus on the the here and now

1301
00:43:45,760 --> 00:43:47,680
and i promise to finish with a simple

1302
00:43:47,680 --> 00:43:49,520
idea that i think can improve the

1303
00:43:49,520 --> 00:43:51,040
disclosure debate so

1304
00:43:51,040 --> 00:43:54,000
let's return to our three core reasons

1305
00:43:54,000 --> 00:43:54,960
for the debate

1306
00:43:54,960 --> 00:43:57,040
um and look at where we might make some

1307
00:43:57,040 --> 00:43:58,079
progress i think

1308
00:43:58,079 --> 00:44:00,880
and perfect data is hard to solve uh

1309
00:44:00,880 --> 00:44:02,640
perhaps we can improve like the level of

1310
00:44:02,640 --> 00:44:03,839
information sharing

1311
00:44:03,839 --> 00:44:07,040
surfacing more data um that might be

1312
00:44:07,040 --> 00:44:08,079
possible

1313
00:44:08,079 --> 00:44:10,880
um divergent goals i think is also hard

1314
00:44:10,880 --> 00:44:11,440
i think

1315
00:44:11,440 --> 00:44:13,280
we have to accept that different people

1316
00:44:13,280 --> 00:44:15,520
have have different motivations except

1317
00:44:15,520 --> 00:44:17,440
to move on

1318
00:44:17,440 --> 00:44:20,079
so it's an area of conflicting models i

1319
00:44:20,079 --> 00:44:21,359
think we can make some

1320
00:44:21,359 --> 00:44:24,800
quick uh improvements and the answer

1321
00:44:24,800 --> 00:44:28,480
is qualitative forecasting

1322
00:44:28,480 --> 00:44:30,800
also known as making predictions and

1323
00:44:30,800 --> 00:44:32,319
keeping score

1324
00:44:32,319 --> 00:44:34,480
and really it's the work of ryan mcginn

1325
00:44:34,480 --> 00:44:36,319
on his medium blog that has been the the

1326
00:44:36,319 --> 00:44:37,440
catalyst for me

1327
00:44:37,440 --> 00:44:38,880
to realize the importance of this

1328
00:44:38,880 --> 00:44:41,280
approach he ran a few different studies

1329
00:44:41,280 --> 00:44:42,160
that used

1330
00:44:42,160 --> 00:44:44,960
expert panels to forecast outcomes

1331
00:44:44,960 --> 00:44:47,040
related to vulnerability disclosure

1332
00:44:47,040 --> 00:44:48,079
and i thought the results were

1333
00:44:48,079 --> 00:44:51,040
fascinating so here's an example for the

1334
00:44:51,040 --> 00:44:51,839
blue keep

1335
00:44:51,839 --> 00:44:53,359
vulnerability he asked a group of

1336
00:44:53,359 --> 00:44:55,040
experts the question will

1337
00:44:55,040 --> 00:44:57,119
exploitation of blue keep be observed by

1338
00:44:57,119 --> 00:44:59,200
the security community in the wild

1339
00:44:59,200 --> 00:45:01,119
then he tracked the panel's accuracy and

1340
00:45:01,119 --> 00:45:04,079
making these predictions

1341
00:45:04,079 --> 00:45:06,960
so why is this important um this is

1342
00:45:06,960 --> 00:45:08,400
essentially a test

1343
00:45:08,400 --> 00:45:10,480
of the panel participants model for

1344
00:45:10,480 --> 00:45:11,839
attacker behavior

1345
00:45:11,839 --> 00:45:13,599
that the more accurate their model of

1346
00:45:13,599 --> 00:45:15,760
the world is the more accurate their

1347
00:45:15,760 --> 00:45:17,599
predictions will be

1348
00:45:17,599 --> 00:45:19,839
so it gives us a structured way to

1349
00:45:19,839 --> 00:45:20,880
bridge the gap

1350
00:45:20,880 --> 00:45:22,960
between our different conflicting models

1351
00:45:22,960 --> 00:45:25,599
of attacker behavior

1352
00:45:25,599 --> 00:45:27,760
and the results were i think fascinating

1353
00:45:27,760 --> 00:45:28,640
um

1354
00:45:28,640 --> 00:45:30,720
because it for me showed that security

1355
00:45:30,720 --> 00:45:32,960
experts weren't making very accurate

1356
00:45:32,960 --> 00:45:34,319
forecasts at all

1357
00:45:34,319 --> 00:45:36,560
the the particular power of the panel

1358
00:45:36,560 --> 00:45:37,760
was little better than

1359
00:45:37,760 --> 00:45:40,880
like an even odds guess on each outcome

1360
00:45:40,880 --> 00:45:42,880
so here's our one suggestion for the

1361
00:45:42,880 --> 00:45:44,560
path forward to improving

1362
00:45:44,560 --> 00:45:47,200
the disclosure debate make predictions

1363
00:45:47,200 --> 00:45:48,720
and keep score

1364
00:45:48,720 --> 00:45:50,800
so let's take ryan's initial work and

1365
00:45:50,800 --> 00:45:51,760
scale it up

1366
00:45:51,760 --> 00:45:54,000
let's get more people involved in this

1367
00:45:54,000 --> 00:45:56,400
and let's make it a regular thing

1368
00:45:56,400 --> 00:45:58,960
this is a new goal we have and something

1369
00:45:58,960 --> 00:46:00,079
that we're

1370
00:46:00,079 --> 00:46:01,920
exploring in project zero and looking at

1371
00:46:01,920 --> 00:46:04,079
funding the pandemic has slowed this

1372
00:46:04,079 --> 00:46:06,720
down a little bit but i'm happy to say

1373
00:46:06,720 --> 00:46:08,000
that the initial interest

1374
00:46:08,000 --> 00:46:11,040
is um very high and we're hoping to have

1375
00:46:11,040 --> 00:46:14,240
something up and running next year

1376
00:46:14,240 --> 00:46:15,599
once that's up and running i think we

1377
00:46:15,599 --> 00:46:18,400
can get serious about using the results

1378
00:46:18,400 --> 00:46:20,560
specifically we can borrow some

1379
00:46:20,560 --> 00:46:22,240
techniques from statistics

1380
00:46:22,240 --> 00:46:24,160
and probability assessment and in

1381
00:46:24,160 --> 00:46:26,079
particular ryan has been using the briar

1382
00:46:26,079 --> 00:46:26,640
score

1383
00:46:26,640 --> 00:46:29,119
which gives you a concrete measure of a

1384
00:46:29,119 --> 00:46:30,079
panel's particular

1385
00:46:30,079 --> 00:46:32,400
ability it's the mean squared error of

1386
00:46:32,400 --> 00:46:34,000
all of your predictions so the lower the

1387
00:46:34,000 --> 00:46:34,400
score

1388
00:46:34,400 --> 00:46:37,920
the better your predictions are simple

1389
00:46:37,920 --> 00:46:39,920
so i think my basic hope is that

1390
00:46:39,920 --> 00:46:41,200
confronting your own

1391
00:46:41,200 --> 00:46:44,319
inaccuracies will force an evolution of

1392
00:46:44,319 --> 00:46:46,400
your model for attacking behavior

1393
00:46:46,400 --> 00:46:48,880
and that that evolution will trend

1394
00:46:48,880 --> 00:46:50,400
towards a more accurate

1395
00:46:50,400 --> 00:46:52,720
and a more unified understanding of

1396
00:46:52,720 --> 00:46:54,319
attacker behavior

1397
00:46:54,319 --> 00:46:55,520
and i think there are certainly some

1398
00:46:55,520 --> 00:46:57,839
challenges around creating events that

1399
00:46:57,839 --> 00:46:59,520
can actually be measured

1400
00:46:59,520 --> 00:47:01,200
um but we think there's enough here to

1401
00:47:01,200 --> 00:47:03,520
get started including

1402
00:47:03,520 --> 00:47:05,040
in some of the more challenging areas we

1403
00:47:05,040 --> 00:47:07,040
face at project zero that we referred to

1404
00:47:07,040 --> 00:47:08,000
earlier

1405
00:47:08,000 --> 00:47:09,440
and importantly i think that

1406
00:47:09,440 --> 00:47:11,200
participation in this panel would

1407
00:47:11,200 --> 00:47:12,560
actually incentivize

1408
00:47:12,560 --> 00:47:15,040
better information sharing of any data

1409
00:47:15,040 --> 00:47:16,480
related to the events that we're trying

1410
00:47:16,480 --> 00:47:17,440
to forecast

1411
00:47:17,440 --> 00:47:20,800
should be a nice side effect

1412
00:47:20,800 --> 00:47:22,800
so what we want to build is a crystal

1413
00:47:22,800 --> 00:47:24,800
ball for vulnerability disclosure

1414
00:47:24,800 --> 00:47:26,800
and that's the the expert panel based

1415
00:47:26,800 --> 00:47:28,640
qualitative forecasting

1416
00:47:28,640 --> 00:47:30,720
so we're going to ask questions like

1417
00:47:30,720 --> 00:47:32,880
will this proof of concept be observed

1418
00:47:32,880 --> 00:47:35,760
in active attacks in the next month will

1419
00:47:35,760 --> 00:47:36,079
the

1420
00:47:36,079 --> 00:47:38,559
vulnerability details released today be

1421
00:47:38,559 --> 00:47:40,000
turned into an exploit

1422
00:47:40,000 --> 00:47:42,079
in the next week will the zero day

1423
00:47:42,079 --> 00:47:43,920
vulnerability in a certain product be

1424
00:47:43,920 --> 00:47:46,240
found in active exploitation in the wild

1425
00:47:46,240 --> 00:47:47,920
in the next quarter

1426
00:47:47,920 --> 00:47:50,160
and we fully expect to get these

1427
00:47:50,160 --> 00:47:51,200
predictions wrong

1428
00:47:51,200 --> 00:47:54,720
a lot as a panel but by asking these

1429
00:47:54,720 --> 00:47:56,880
questions we're aiming to unify

1430
00:47:56,880 --> 00:47:59,440
our understanding of attacker behavior

1431
00:47:59,440 --> 00:48:01,599
and by doing so we're aiming to improve

1432
00:48:01,599 --> 00:48:03,680
the disclosure debate

1433
00:48:03,680 --> 00:48:05,200
so if you're interested in being an

1434
00:48:05,200 --> 00:48:07,920
expert on a crystal ball panel

1435
00:48:07,920 --> 00:48:09,280
please reach out to let me know

1436
00:48:09,280 --> 00:48:11,520
otherwise if you take one thing away

1437
00:48:11,520 --> 00:48:12,640
from this presentation

1438
00:48:12,640 --> 00:48:14,400
it would have to be make predictions of

1439
00:48:14,400 --> 00:48:15,920
your own your

1440
00:48:15,920 --> 00:48:18,839
ability as security experts to make good

1441
00:48:18,839 --> 00:48:20,079
predictions

1442
00:48:20,079 --> 00:48:23,280
despite the immense unknowns we face

1443
00:48:23,280 --> 00:48:26,960
in this field is critically important

1444
00:48:26,960 --> 00:48:28,160
and the way you get good at that is to

1445
00:48:28,160 --> 00:48:30,720
practice and to keep score

1446
00:48:30,720 --> 00:48:33,359
so uh unfortunately we haven't solved

1447
00:48:33,359 --> 00:48:35,119
the vulnerability disclosure debate

1448
00:48:35,119 --> 00:48:35,599
today

1449
00:48:35,599 --> 00:48:37,599
uh but i hope you found this perspective

1450
00:48:37,599 --> 00:48:39,520
interesting or challenging in some way

1451
00:48:39,520 --> 00:48:41,040
and i hope you're excited about

1452
00:48:41,040 --> 00:48:43,680
qualitative forecasting like me um

1453
00:48:43,680 --> 00:48:45,599
thanks again to the the first conference

1454
00:48:45,599 --> 00:48:46,559
organizers

1455
00:48:46,559 --> 00:48:48,640
and thank you all very much for

1456
00:48:48,640 --> 00:48:50,240
listening to my talk today it's a

1457
00:48:50,240 --> 00:48:52,640
pleasure

1458
00:49:01,280 --> 00:49:04,800
so thank you so much ben

1459
00:49:04,800 --> 00:49:07,839
and uh we have plenty of

1460
00:49:07,839 --> 00:49:11,359
questions here no sure yeah so

1461
00:49:11,359 --> 00:49:15,119
let's get started with that um

1462
00:49:15,119 --> 00:49:18,000
i will i will i will throw uh in order

1463
00:49:18,000 --> 00:49:19,760
they arrive there and we'll try to find

1464
00:49:19,760 --> 00:49:21,680
if it does some have some

1465
00:49:21,680 --> 00:49:25,280
uh corporation maybe do it if they have

1466
00:49:25,280 --> 00:49:25,920
a

1467
00:49:25,920 --> 00:49:28,079
making just one but i will start with

1468
00:49:28,079 --> 00:49:29,839
david here

1469
00:49:29,839 --> 00:49:32,720
with the disclosure time would you in

1470
00:49:32,720 --> 00:49:33,440
the future

1471
00:49:33,440 --> 00:49:36,079
include more details for verification

1472
00:49:36,079 --> 00:49:37,040
tests

1473
00:49:37,040 --> 00:49:40,000
more than exploits capability itself

1474
00:49:40,000 --> 00:49:40,800
openness for

1475
00:49:40,800 --> 00:49:44,480
corrective defenders yeah good question

1476
00:49:44,480 --> 00:49:47,200
um so i think it's really hard to

1477
00:49:47,200 --> 00:49:47,839
separate

1478
00:49:47,839 --> 00:49:49,839
the two and this is one thing we've

1479
00:49:49,839 --> 00:49:51,280
we've learned is that

1480
00:49:51,280 --> 00:49:53,920
um when a patch is released and you want

1481
00:49:53,920 --> 00:49:54,880
to sort of check if

1482
00:49:54,880 --> 00:49:56,800
you're affected by a particular issue or

1483
00:49:56,800 --> 00:49:58,160
you want to verify if a patch is

1484
00:49:58,160 --> 00:50:00,079
actually working as intended

1485
00:50:00,079 --> 00:50:02,960
um we have certainly the ability to

1486
00:50:02,960 --> 00:50:04,640
build verification tooling

1487
00:50:04,640 --> 00:50:06,079
which is essentially the proof of

1488
00:50:06,079 --> 00:50:08,079
concept repurposed as a trigger

1489
00:50:08,079 --> 00:50:10,400
with perhaps a better login or

1490
00:50:10,400 --> 00:50:12,480
integration into um

1491
00:50:12,480 --> 00:50:14,240
maybe an xml-based output format or

1492
00:50:14,240 --> 00:50:15,920
something like this so you can automate

1493
00:50:15,920 --> 00:50:18,160
um but the key point is that the

1494
00:50:18,160 --> 00:50:19,119
difference between

1495
00:50:19,119 --> 00:50:22,160
that tool and the poc is actually fairly

1496
00:50:22,160 --> 00:50:25,040
minimal um certainly in terms of the

1497
00:50:25,040 --> 00:50:26,319
triggers that we're often

1498
00:50:26,319 --> 00:50:28,160
often releasing and that's one thing i

1499
00:50:28,160 --> 00:50:30,079
think with we haven't done a good job of

1500
00:50:30,079 --> 00:50:31,680
is describing the terminology the

1501
00:50:31,680 --> 00:50:32,880
difference between

1502
00:50:32,880 --> 00:50:34,800
what is a productized exploit that can

1503
00:50:34,800 --> 00:50:36,079
actually be used

1504
00:50:36,079 --> 00:50:38,160
versus a proof of concept exploit that

1505
00:50:38,160 --> 00:50:39,680
kind of works in a lab

1506
00:50:39,680 --> 00:50:41,200
versus a trigger that just sort of

1507
00:50:41,200 --> 00:50:42,960
demonstrates an issue

1508
00:50:42,960 --> 00:50:46,319
versus just some lightweight details

1509
00:50:46,319 --> 00:50:48,880
and one thing we do know is that

1510
00:50:48,880 --> 00:50:50,880
regardless of the level of details we

1511
00:50:50,880 --> 00:50:53,280
share attackers are incentivized to

1512
00:50:53,280 --> 00:50:54,640
analyze the patch

1513
00:50:54,640 --> 00:50:56,240
and to work out what the buggers

1514
00:50:56,240 --> 00:50:58,559
themselves from the patch details

1515
00:50:58,559 --> 00:51:01,200
so even if we're not releasing any

1516
00:51:01,200 --> 00:51:02,079
details

1517
00:51:02,079 --> 00:51:03,680
the truth is that attackers will still

1518
00:51:03,680 --> 00:51:04,960
learn those details they are

1519
00:51:04,960 --> 00:51:06,000
incentivized

1520
00:51:06,000 --> 00:51:08,000
to learn those details so it's just an

1521
00:51:08,000 --> 00:51:09,520
interesting side point on that good

1522
00:51:09,520 --> 00:51:11,520
question

1523
00:51:11,520 --> 00:51:14,559
okay uh question for an art minion how

1524
00:51:14,559 --> 00:51:15,200
silent

1525
00:51:15,200 --> 00:51:18,240
is a silent patch

1526
00:51:18,240 --> 00:51:20,319
right well i think that's related to uh

1527
00:51:20,319 --> 00:51:22,400
what i've just just mentioned is um

1528
00:51:22,400 --> 00:51:24,319
silent patches are silent for defenders

1529
00:51:24,319 --> 00:51:26,079
but they're not silent for attackers

1530
00:51:26,079 --> 00:51:28,480
attackers are very skilled at um

1531
00:51:28,480 --> 00:51:29,200
reversing

1532
00:51:29,200 --> 00:51:31,520
engineering patches to to assess the

1533
00:51:31,520 --> 00:51:32,720
route issue

1534
00:51:32,720 --> 00:51:34,720
um having the the details of the

1535
00:51:34,720 --> 00:51:36,079
vulnerability public

1536
00:51:36,079 --> 00:51:38,720
um we have reasonable claims to say that

1537
00:51:38,720 --> 00:51:40,400
that's save in a matter of hours

1538
00:51:40,400 --> 00:51:43,920
not days for attackers and so

1539
00:51:43,920 --> 00:51:46,480
when asylum patch occurs defenders do

1540
00:51:46,480 --> 00:51:47,760
not have the resources

1541
00:51:47,760 --> 00:51:50,160
nor the motivation to actually go and

1542
00:51:50,160 --> 00:51:51,359
study the details

1543
00:51:51,359 --> 00:51:54,400
of the patch they need better ways to

1544
00:51:54,400 --> 00:51:55,119
consume

1545
00:51:55,119 --> 00:51:56,880
information actionable information that

1546
00:51:56,880 --> 00:51:59,040
they can use to defend their systems

1547
00:51:59,040 --> 00:52:01,119
so that's a big asymmetry that's where

1548
00:52:01,119 --> 00:52:02,880
we think that if we were to

1549
00:52:02,880 --> 00:52:04,960
end up in a world where we can't talk

1550
00:52:04,960 --> 00:52:07,280
about the details of a vulnerability in

1551
00:52:07,280 --> 00:52:08,319
a timely manner

1552
00:52:08,319 --> 00:52:10,400
that's actually favors attackers because

1553
00:52:10,400 --> 00:52:11,839
it slows defenders down

1554
00:52:11,839 --> 00:52:12,960
and attackers are going to get that

1555
00:52:12,960 --> 00:52:18,160
information anyway thank you

1556
00:52:18,160 --> 00:52:21,520
a comment another question uh this was a

1557
00:52:21,520 --> 00:52:23,040
fantastic review and i

1558
00:52:23,040 --> 00:52:25,839
greatly appreciate it from matt stamper

1559
00:52:25,839 --> 00:52:29,040
i appreciate that thank you matt

1560
00:52:29,040 --> 00:52:32,319
uh jessica uh do you find that another

1561
00:52:32,319 --> 00:52:33,680
day deadline to be

1562
00:52:33,680 --> 00:52:36,240
sufficient or can you see it is changing

1563
00:52:36,240 --> 00:52:38,319
in the future

1564
00:52:38,319 --> 00:52:41,680
yeah um i did foreshadow that a bit so

1565
00:52:41,680 --> 00:52:43,280
we don't have any active plans

1566
00:52:43,280 --> 00:52:45,359
like immediate plans to change the 90

1567
00:52:45,359 --> 00:52:46,880
day value there's two sides of this

1568
00:52:46,880 --> 00:52:47,280
there's

1569
00:52:47,280 --> 00:52:49,680
there's the positive side where there's

1570
00:52:49,680 --> 00:52:51,200
certain technologies certain vendors

1571
00:52:51,200 --> 00:52:52,480
that are doing so well

1572
00:52:52,480 --> 00:52:54,000
that we think um that they could

1573
00:52:54,000 --> 00:52:55,760
probably quite consistently

1574
00:52:55,760 --> 00:52:57,440
achieve something lower than a 90 day

1575
00:52:57,440 --> 00:52:59,440
deadline there are also

1576
00:52:59,440 --> 00:53:02,079
a few areas where um we have like a long

1577
00:53:02,079 --> 00:53:02,480
tail

1578
00:53:02,480 --> 00:53:05,200
in terms of our ability as an industry

1579
00:53:05,200 --> 00:53:06,720
to respond i'm thinking like

1580
00:53:06,720 --> 00:53:10,880
uh microcode patches or firmware patches

1581
00:53:10,880 --> 00:53:14,079
um uh expanding out into the iot

1582
00:53:14,079 --> 00:53:17,680
world etc the the there is a long tail

1583
00:53:17,680 --> 00:53:17,920
of

1584
00:53:17,920 --> 00:53:20,240
of issues that i would probably struggle

1585
00:53:20,240 --> 00:53:22,240
right now to to make a 90 day

1586
00:53:22,240 --> 00:53:25,599
um deadline consistently um the vision

1587
00:53:25,599 --> 00:53:29,040
i think um 90 days

1588
00:53:29,040 --> 00:53:31,760
uh let's rephrase this i think if i was

1589
00:53:31,760 --> 00:53:32,960
to make a prediction

1590
00:53:32,960 --> 00:53:35,119
let's say 30 years out we'll look back

1591
00:53:35,119 --> 00:53:36,640
at our time today and look back at that

1592
00:53:36,640 --> 00:53:38,160
90 day figure and just

1593
00:53:38,160 --> 00:53:40,480
it will boggle the mind that security

1594
00:53:40,480 --> 00:53:42,000
bugs aren't patched in a number of

1595
00:53:42,000 --> 00:53:44,079
minutes or hours but that's the time

1596
00:53:44,079 --> 00:53:45,680
frame eventually we will be talking

1597
00:53:45,680 --> 00:53:46,480
about

1598
00:53:46,480 --> 00:53:49,119
um and how we incentivize the the

1599
00:53:49,119 --> 00:53:50,400
research and development

1600
00:53:50,400 --> 00:53:51,920
that needs to happen the innovation that

1601
00:53:51,920 --> 00:53:53,839
needs to happen to to bring the world to

1602
00:53:53,839 --> 00:53:54,559
that place

1603
00:53:54,559 --> 00:53:56,720
that's a great question um so fine

1604
00:53:56,720 --> 00:53:58,160
tuning in 90 days

1605
00:53:58,160 --> 00:54:00,640
may or may not be enough to incentivize

1606
00:54:00,640 --> 00:54:01,599
that innovation

1607
00:54:01,599 --> 00:54:03,680
but that should be the vision it's like

1608
00:54:03,680 --> 00:54:05,839
there's no good reason why we can't fix

1609
00:54:05,839 --> 00:54:08,800
all of our systems hardware firmware

1610
00:54:08,800 --> 00:54:09,760
software

1611
00:54:09,760 --> 00:54:13,040
in a timely manner

1612
00:54:13,040 --> 00:54:16,319
thank you so have you considered from

1613
00:54:16,319 --> 00:54:19,520
perry uh have you considered to open a

1614
00:54:19,520 --> 00:54:22,319
time gap between the 90 days deadline

1615
00:54:22,319 --> 00:54:24,559
for disclosure and the day in which they

1616
00:54:24,559 --> 00:54:26,319
exploit the poc

1617
00:54:26,319 --> 00:54:29,839
especially for the trivial rces

1618
00:54:29,839 --> 00:54:33,119
in published if not why

1619
00:54:33,119 --> 00:54:35,760
so we think we we did incorporate

1620
00:54:35,760 --> 00:54:37,440
feedback from vendors that they were

1621
00:54:37,440 --> 00:54:39,119
concerned about patch adoption

1622
00:54:39,119 --> 00:54:42,880
and the the fact that um even um

1623
00:54:42,880 --> 00:54:44,640
vendors that have a very good reputation

1624
00:54:44,640 --> 00:54:46,079
for for

1625
00:54:46,079 --> 00:54:48,480
um delivering patches in a timely manner

1626
00:54:48,480 --> 00:54:50,000
and for their users to be

1627
00:54:50,000 --> 00:54:53,280
patched um or to to take that patch

1628
00:54:53,280 --> 00:54:54,799
um they were giving us feedback that it

1629
00:54:54,799 --> 00:54:56,559
still takes you know a number of weeks

1630
00:54:56,559 --> 00:54:58,240
uh potentially the months for the

1631
00:54:58,240 --> 00:55:00,000
ecosystem as a whole to

1632
00:55:00,000 --> 00:55:02,640
to reach sort of a saturation of a patch

1633
00:55:02,640 --> 00:55:03,520
adoption

1634
00:55:03,520 --> 00:55:05,920
and how we incorporated that earlier in

1635
00:55:05,920 --> 00:55:08,000
our 2020 policy update

1636
00:55:08,000 --> 00:55:10,480
was to essentially do a fixed 90-day

1637
00:55:10,480 --> 00:55:11,119
deadline

1638
00:55:11,119 --> 00:55:13,920
um so that regardless of the day that we

1639
00:55:13,920 --> 00:55:15,839
regret regardless of when that issue is

1640
00:55:15,839 --> 00:55:17,359
patched we're always going to release

1641
00:55:17,359 --> 00:55:19,119
the details at 90 days

1642
00:55:19,119 --> 00:55:22,160
and so what we're hoping is that um if a

1643
00:55:22,160 --> 00:55:25,119
vendor then is patching an issue

1644
00:55:25,119 --> 00:55:28,400
in 30 days or 45 days then they have

1645
00:55:28,400 --> 00:55:30,160
more soak time for the patch to be

1646
00:55:30,160 --> 00:55:32,640
adopted before that point of the details

1647
00:55:32,640 --> 00:55:35,280
becoming public so that's um there's

1648
00:55:35,280 --> 00:55:37,119
more details on the project zero blog

1649
00:55:37,119 --> 00:55:38,160
and uh

1650
00:55:38,160 --> 00:55:41,440
policy update 2020 entry um but um i

1651
00:55:41,440 --> 00:55:42,640
think that's the approach we're trying

1652
00:55:42,640 --> 00:55:43,839
to take right now

1653
00:55:43,839 --> 00:55:47,440
um uh eventually whether there is some

1654
00:55:47,440 --> 00:55:48,880
sort of um

1655
00:55:48,880 --> 00:55:51,680
uh tiered classification staging of the

1656
00:55:51,680 --> 00:55:53,359
level of details being released

1657
00:55:53,359 --> 00:55:54,799
i think that's in the mix and it's been

1658
00:55:54,799 --> 00:55:56,640
discussed constantly but it's all about

1659
00:55:56,640 --> 00:55:56,960
um

1660
00:55:56,960 --> 00:55:58,559
trying to find the best approach for for

1661
00:55:58,559 --> 00:56:00,160
user security and and really

1662
00:56:00,160 --> 00:56:03,040
hone in on that that what is optimal and

1663
00:56:03,040 --> 00:56:04,319
it's sometimes

1664
00:56:04,319 --> 00:56:06,079
a separate discussion between what is

1665
00:56:06,079 --> 00:56:07,839
optimal and what is going to

1666
00:56:07,839 --> 00:56:09,760
keep the most people happy um and that's

1667
00:56:09,760 --> 00:56:12,000
that's the harder part of our job is

1668
00:56:12,000 --> 00:56:14,079
there is certainly a degree of balancing

1669
00:56:14,079 --> 00:56:16,960
of user our user risk outcomes to

1670
00:56:16,960 --> 00:56:18,640
business priorities that we all have to

1671
00:56:18,640 --> 00:56:19,040
take

1672
00:56:19,040 --> 00:56:20,559
and there's politics around that of too

1673
00:56:20,559 --> 00:56:23,280
of course so it's going to be an ongoing

1674
00:56:23,280 --> 00:56:25,520
evolution of the the policy settings i

1675
00:56:25,520 --> 00:56:26,880
think

1676
00:56:26,880 --> 00:56:31,040
thank you anonymous and was attained e

1677
00:56:31,040 --> 00:56:34,400
uh why can't you disclose a 90 days but

1678
00:56:34,400 --> 00:56:35,839
waited three weeks after

1679
00:56:35,839 --> 00:56:39,040
disclosure to post the poc or gp

1680
00:56:39,040 --> 00:56:40,240
technical content

1681
00:56:40,240 --> 00:56:42,079
to give customers a chance to get the

1682
00:56:42,079 --> 00:56:43,839
fix i kind of comment

1683
00:56:43,839 --> 00:56:45,520
yeah i i think yeah i think that's

1684
00:56:45,520 --> 00:56:47,040
essentially addressed in the the

1685
00:56:47,040 --> 00:56:49,680
the previous answer is um yeah it's

1686
00:56:49,680 --> 00:56:50,799
something we're looking at we think that

1687
00:56:50,799 --> 00:56:53,040
the current policy update of 2020 does

1688
00:56:53,040 --> 00:56:54,160
actually

1689
00:56:54,160 --> 00:56:56,240
incorporate that sufficiently but um

1690
00:56:56,240 --> 00:56:57,280
we're still

1691
00:56:57,280 --> 00:57:01,280
looking at this for 2021 and beyond okay

1692
00:57:01,280 --> 00:57:03,920
uh from arc minion uh appreciate the

1693
00:57:03,920 --> 00:57:06,240
reasons for a narrow embargo scope

1694
00:57:06,240 --> 00:57:09,359
but uh how does the the account for

1695
00:57:09,359 --> 00:57:11,680
widely used components like upstream

1696
00:57:11,680 --> 00:57:12,480
libraries or

1697
00:57:12,480 --> 00:57:16,319
protocols yeah so we we tend to

1698
00:57:16,319 --> 00:57:18,720
in that situation we still report the

1699
00:57:18,720 --> 00:57:20,640
bugs upstream and we work with the

1700
00:57:20,640 --> 00:57:22,559
upstream maintainer to decide

1701
00:57:22,559 --> 00:57:25,280
what's best for the downstream ecosystem

1702
00:57:25,280 --> 00:57:26,880
what we've found is that the

1703
00:57:26,880 --> 00:57:29,040
the upstream is in a in a better

1704
00:57:29,040 --> 00:57:30,720
position generally

1705
00:57:30,720 --> 00:57:34,559
um to initiate downstream notification

1706
00:57:34,559 --> 00:57:36,319
in the way that's best for their

1707
00:57:36,319 --> 00:57:38,880
ecosystem and so some

1708
00:57:38,880 --> 00:57:41,680
upstreams do take the approach of

1709
00:57:41,680 --> 00:57:42,640
forming their own

1710
00:57:42,640 --> 00:57:44,880
vulnerability embargo and we let them do

1711
00:57:44,880 --> 00:57:46,720
that you know within the parameters of

1712
00:57:46,720 --> 00:57:48,079
our disclosure policy

1713
00:57:48,079 --> 00:57:50,240
um but if an upstream vendor would

1714
00:57:50,240 --> 00:57:51,440
prefer to

1715
00:57:51,440 --> 00:57:53,359
just get the patch up publicly then we

1716
00:57:53,359 --> 00:57:54,720
also support that

1717
00:57:54,720 --> 00:57:56,640
so essentially we don't think that

1718
00:57:56,640 --> 00:57:58,559
security researchers should be making

1719
00:57:58,559 --> 00:57:59,920
that determination about

1720
00:57:59,920 --> 00:58:02,559
what's in the best interest for for for

1721
00:58:02,559 --> 00:58:04,160
somebody's given ecosystem

1722
00:58:04,160 --> 00:58:05,920
we want to work with the upstream on on

1723
00:58:05,920 --> 00:58:08,160
that to get to a good result

1724
00:58:08,160 --> 00:58:10,720
um i think we have been pretty passive

1725
00:58:10,720 --> 00:58:12,720
in that space and it's an area where we

1726
00:58:12,720 --> 00:58:14,400
perhaps could be showing more leadership

1727
00:58:14,400 --> 00:58:16,240
than we than we have in the past

1728
00:58:16,240 --> 00:58:20,319
um and i think experimentally i guess

1729
00:58:20,319 --> 00:58:21,119
through

1730
00:58:21,119 --> 00:58:22,319
throughout the the number of bike

1731
00:58:22,319 --> 00:58:25,440
reports we've had um

1732
00:58:25,440 --> 00:58:27,200
given the characteristics of

1733
00:58:27,200 --> 00:58:28,880
opportunistic reuse

1734
00:58:28,880 --> 00:58:31,520
um i actually favored the openness

1735
00:58:31,520 --> 00:58:32,960
approach to actually get the patch out

1736
00:58:32,960 --> 00:58:34,640
publicly as soon as possible

1737
00:58:34,640 --> 00:58:36,240
rather than to try and maintain these

1738
00:58:36,240 --> 00:58:38,160
awkward large embargoes between

1739
00:58:38,160 --> 00:58:39,599
lots of different cloud companies or

1740
00:58:39,599 --> 00:58:41,680
something like this um that doesn't seem

1741
00:58:41,680 --> 00:58:42,000
to

1742
00:58:42,000 --> 00:58:45,760
get as good results in my experience

1743
00:58:45,760 --> 00:58:47,599
i would jump in a few questions and just

1744
00:58:47,599 --> 00:58:49,280
get the germain's

1745
00:58:49,280 --> 00:58:51,359
question because he's saying that it's

1746
00:58:51,359 --> 00:58:53,599
following up on our part of the question

1747
00:58:53,599 --> 00:58:54,480
so

1748
00:58:54,480 --> 00:58:56,559
sometimes when vulnerable leads to

1749
00:58:56,559 --> 00:58:58,480
discovering structural problems in

1750
00:58:58,480 --> 00:59:02,000
many products does that happen often or

1751
00:59:02,000 --> 00:59:05,280
do you how do you handle that it

1752
00:59:05,280 --> 00:59:07,040
does happen often in the sense that we

1753
00:59:07,040 --> 00:59:08,559
have a very um

1754
00:59:08,559 --> 00:59:10,880
intertwined ecosystem of software and

1755
00:59:10,880 --> 00:59:12,319
that's part of the motivation for

1756
00:59:12,319 --> 00:59:13,440
projects where it's

1757
00:59:13,440 --> 00:59:16,720
it's not possible just to look at

1758
00:59:16,720 --> 00:59:18,640
a modern technology stack and just look

1759
00:59:18,640 --> 00:59:20,240
at the bits that google wrote

1760
00:59:20,240 --> 00:59:21,599
we're so intertwined and we're all

1761
00:59:21,599 --> 00:59:23,680
relying on each other's code

1762
00:59:23,680 --> 00:59:25,359
um that yeah i think that phenomenon

1763
00:59:25,359 --> 00:59:26,640
does happen particularly in like a

1764
00:59:26,640 --> 00:59:27,280
library

1765
00:59:27,280 --> 00:59:30,160
setting and we know that a lot of

1766
00:59:30,160 --> 00:59:31,200
projects now

1767
00:59:31,200 --> 00:59:33,119
are maintaining their own third-party

1768
00:59:33,119 --> 00:59:35,359
repository and so

1769
00:59:35,359 --> 00:59:37,680
they have a huge challenge with

1770
00:59:37,680 --> 00:59:39,520
vulnerability remediation in terms of

1771
00:59:39,520 --> 00:59:41,359
cherry-picking security fixes into their

1772
00:59:41,359 --> 00:59:43,520
own branch for example

1773
00:59:43,520 --> 00:59:45,119
it's a it's a big problem and we've

1774
00:59:45,119 --> 00:59:46,720
certainly seen attackers

1775
00:59:46,720 --> 00:59:50,000
take advantage of that gap where we've

1776
00:59:50,000 --> 00:59:52,319
for example done a lot of work on um

1777
00:59:52,319 --> 00:59:53,920
font security on windows

1778
00:59:53,920 --> 00:59:55,520
and then starting to see some of those

1779
00:59:55,520 --> 00:59:57,680
attackers move to um

1780
00:59:57,680 --> 01:00:00,079
font-based attacks and browsers or in

1781
01:00:00,079 --> 01:00:02,079
macos for example

1782
01:00:02,079 --> 01:00:05,359
and so yeah certainly there is a

1783
01:00:05,359 --> 01:00:08,400
a structural problem there i agree with

1784
01:00:08,400 --> 01:00:11,520
the premise

1785
01:00:12,000 --> 01:00:15,280
thank you uh a question from derek shaw

1786
01:00:15,280 --> 01:00:18,319
many times getting a fix in 90 days

1787
01:00:18,319 --> 01:00:18,799
isn't

1788
01:00:18,799 --> 01:00:21,680
that hard getting all fixed in 90 days

1789
01:00:21,680 --> 01:00:22,640
can be hard

1790
01:00:22,640 --> 01:00:25,599
you mentioned that you measure the time

1791
01:00:25,599 --> 01:00:26,480
to fix

1792
01:00:26,480 --> 01:00:29,359
i'm assuming that time is to list one

1793
01:00:29,359 --> 01:00:29,839
fix

1794
01:00:29,839 --> 01:00:32,000
uh have you measured the number of fix

1795
01:00:32,000 --> 01:00:32,880
that don't

1796
01:00:32,880 --> 01:00:35,839
don't come become available until uh

1797
01:00:35,839 --> 01:00:38,400
after your disclosure

1798
01:00:38,400 --> 01:00:41,280
yeah so i mean it does happen from from

1799
01:00:41,280 --> 01:00:42,000
time to time

1800
01:00:42,000 --> 01:00:44,400
that we disclose the details of an issue

1801
01:00:44,400 --> 01:00:46,480
where no fix is available

1802
01:00:46,480 --> 01:00:48,720
it used to happen a lot more so when we

1803
01:00:48,720 --> 01:00:50,400
first started a plane disclosure

1804
01:00:50,400 --> 01:00:52,240
deadline certain vendors were telling us

1805
01:00:52,240 --> 01:00:54,000
for example it just simply wasn't

1806
01:00:54,000 --> 01:00:56,240
possible to fix a kernel bug in

1807
01:00:56,240 --> 01:00:59,599
90 days like the testing involved so

1808
01:00:59,599 --> 01:01:02,880
so rigorous etc um that it just wasn't

1809
01:01:02,880 --> 01:01:03,599
going to happen

1810
01:01:03,599 --> 01:01:05,119
um but we sort of looked at and said

1811
01:01:05,119 --> 01:01:06,960
like we think it probably

1812
01:01:06,960 --> 01:01:10,559
is possible um you know um

1813
01:01:10,559 --> 01:01:12,640
given the right investments uh given the

1814
01:01:12,640 --> 01:01:14,559
rights or the focus on that area

1815
01:01:14,559 --> 01:01:16,319
which had been left to languish for many

1816
01:01:16,319 --> 01:01:18,319
years um and so we

1817
01:01:18,319 --> 01:01:21,440
we saw that um it was the

1818
01:01:21,440 --> 01:01:23,040
sort of strict enforcement of the

1819
01:01:23,040 --> 01:01:25,839
deadline that motivated that

1820
01:01:25,839 --> 01:01:29,440
refreshed attention and investment into

1821
01:01:29,440 --> 01:01:32,319
getting patches out for even the most

1822
01:01:32,319 --> 01:01:35,200
complicated systems in a timely manner

1823
01:01:35,200 --> 01:01:37,119
certainly there is a long tail of issues

1824
01:01:37,119 --> 01:01:39,280
i think a lot of the ones that

1825
01:01:39,280 --> 01:01:42,400
pass the deadline now aren't so much

1826
01:01:42,400 --> 01:01:43,839
because they were so complicated they

1827
01:01:43,839 --> 01:01:45,680
couldn't be fixed within 90 days

1828
01:01:45,680 --> 01:01:48,000
it's normally because um at the last

1829
01:01:48,000 --> 01:01:49,839
minute they realized that the patch

1830
01:01:49,839 --> 01:01:51,760
was broken and it didn't work well or

1831
01:01:51,760 --> 01:01:53,200
something like this

1832
01:01:53,200 --> 01:01:56,400
and that's something that um that we are

1833
01:01:56,400 --> 01:01:58,160
actually here as a resource and if a

1834
01:01:58,160 --> 01:01:58,960
vendor is

1835
01:01:58,960 --> 01:02:00,799
more open with us and can can work with

1836
01:02:00,799 --> 01:02:02,480
us on the details of that patch

1837
01:02:02,480 --> 01:02:04,799
earlier on in the time frame that result

1838
01:02:04,799 --> 01:02:06,240
is much less likely to

1839
01:02:06,240 --> 01:02:09,119
occur um so that's sort of um the one

1840
01:02:09,119 --> 01:02:10,240
thing that i think would

1841
01:02:10,240 --> 01:02:12,400
sort of clean up some of the the long

1842
01:02:12,400 --> 01:02:14,400
tail of issues that are still going out

1843
01:02:14,400 --> 01:02:18,079
uh without a patch okay uh

1844
01:02:18,079 --> 01:02:21,280
we still have lots of questions here but

1845
01:02:21,280 --> 01:02:22,160
we will not

1846
01:02:22,160 --> 01:02:25,359
be able to go through all of them uh uh

1847
01:02:25,359 --> 01:02:27,760
sure unfortunately i would like to keep

1848
01:02:27,760 --> 01:02:28,960
you talking here

1849
01:02:28,960 --> 01:02:32,319
for longer i will pick you one more and

1850
01:02:32,319 --> 01:02:36,799
uh i will pick up searches question

1851
01:02:36,799 --> 01:02:37,839
because it's

1852
01:02:37,839 --> 01:02:40,400
really about the future so do if your

1853
01:02:40,400 --> 01:02:40,880
project

1854
01:02:40,880 --> 01:02:43,520
is zero is enough or should there be

1855
01:02:43,520 --> 01:02:45,520
more activity by others

1856
01:02:45,520 --> 01:02:49,680
if so what i think

1857
01:02:49,680 --> 01:02:52,799
we've certainly had a dream that

1858
01:02:52,799 --> 01:02:55,839
um that project zero at google

1859
01:02:55,839 --> 01:02:59,200
wouldn't be alone that we could have

1860
01:02:59,200 --> 01:03:02,880
a community of project zeros that that

1861
01:03:02,880 --> 01:03:05,119
an organization can consider having a

1862
01:03:05,119 --> 01:03:06,559
team like project zero

1863
01:03:06,559 --> 01:03:09,200
as the pinnacle of uh like a maturity

1864
01:03:09,200 --> 01:03:10,720
model for building out a security

1865
01:03:10,720 --> 01:03:11,680
organization

1866
01:03:11,680 --> 01:03:13,119
so once you have sort of everything else

1867
01:03:13,119 --> 01:03:15,359
in place um having this this

1868
01:03:15,359 --> 01:03:16,160
contribution

1869
01:03:16,160 --> 01:03:19,359
to sort of a a society-wide problem

1870
01:03:19,359 --> 01:03:21,760
an intellect technology problem uh where

1871
01:03:21,760 --> 01:03:22,960
we can all sort of take

1872
01:03:22,960 --> 01:03:25,440
our expertise and and share that

1873
01:03:25,440 --> 01:03:26,480
expertise

1874
01:03:26,480 --> 01:03:29,440
um where it's most needed throughout the

1875
01:03:29,440 --> 01:03:30,799
ecosystem

1876
01:03:30,799 --> 01:03:32,799
i think that's a great model for success

1877
01:03:32,799 --> 01:03:34,880
um i think we've learned a lot

1878
01:03:34,880 --> 01:03:38,400
about running a team like project zero

1879
01:03:38,400 --> 01:03:40,640
and the subtle alchemy that goes into

1880
01:03:40,640 --> 01:03:42,000
making a team like project zero

1881
01:03:42,000 --> 01:03:44,079
successful and it's amazing what you can

1882
01:03:44,079 --> 01:03:44,880
achieve with this

1883
01:03:44,880 --> 01:03:47,200
this approach the energy that comes from

1884
01:03:47,200 --> 01:03:48,000
it the

1885
01:03:48,000 --> 01:03:50,240
from the freedom of our researchers to

1886
01:03:50,240 --> 01:03:52,720
pursue what they think is most important

1887
01:03:52,720 --> 01:03:55,760
um it's amazing what that unlocks so if

1888
01:03:55,760 --> 01:03:56,720
you are

1889
01:03:56,720 --> 01:03:59,200
out there and you're listening and um

1890
01:03:59,200 --> 01:04:00,960
you're working in an organization that

1891
01:04:00,960 --> 01:04:02,559
might one day consider creating their

1892
01:04:02,559 --> 01:04:04,079
own team like project zero

1893
01:04:04,079 --> 01:04:06,000
please please please reach out to talk

1894
01:04:06,000 --> 01:04:07,359
to me i'm very happy

1895
01:04:07,359 --> 01:04:09,359
i'm very open about sharing our

1896
01:04:09,359 --> 01:04:11,119
experiences and creating a team like

1897
01:04:11,119 --> 01:04:12,000
projects or at google

1898
01:04:12,000 --> 01:04:13,200
and how that's going to be a little bit

1899
01:04:13,200 --> 01:04:15,119
different for every organization but

1900
01:04:15,119 --> 01:04:16,400
we've learned

1901
01:04:16,400 --> 01:04:19,359
a lot about um about what makes this

1902
01:04:19,359 --> 01:04:21,440
work and i think it's a very very

1903
01:04:21,440 --> 01:04:22,880
special approach i think it's super

1904
01:04:22,880 --> 01:04:24,480
viable and i think it can have

1905
01:04:24,480 --> 01:04:27,119
a lot of impact still in the next 10 20

1906
01:04:27,119 --> 01:04:29,280
years

1907
01:04:29,280 --> 01:04:31,520
all right well thank you very much i

1908
01:04:31,520 --> 01:04:32,480
really appreciate it

1909
01:04:32,480 --> 01:04:34,880
thanks lucy thank you thank you so much

1910
01:04:34,880 --> 01:04:40,319
man bye bye

1911
01:04:40,319 --> 01:04:42,400
you

