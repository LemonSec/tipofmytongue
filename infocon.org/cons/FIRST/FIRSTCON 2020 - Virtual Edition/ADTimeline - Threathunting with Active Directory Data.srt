1
00:00:03,040 --> 00:00:04,720
welcome to my talk about

2
00:00:04,720 --> 00:00:07,200
the ad tamarind project i will present

3
00:00:07,200 --> 00:00:09,519
you how to do threat hunting with active

4
00:00:09,519 --> 00:00:12,000
directory data

5
00:00:12,000 --> 00:00:14,639
i am leonard sabina i do digital

6
00:00:14,639 --> 00:00:16,239
forensics and incidence

7
00:00:16,239 --> 00:00:19,920
response at certain fr certifier

8
00:00:19,920 --> 00:00:22,560
is part of ansi which is the french

9
00:00:22,560 --> 00:00:26,000
national cyber security center

10
00:00:26,000 --> 00:00:31,840
you can reach me on twitter at ldap389

11
00:00:33,120 --> 00:00:37,120
let's look at the agenda first

12
00:00:37,120 --> 00:00:39,280
i will present you how we do that

13
00:00:39,280 --> 00:00:41,520
collection on forensic analysis on an

14
00:00:41,520 --> 00:00:44,160
active directory domain

15
00:00:44,160 --> 00:00:47,200
then i will present you the ad timeline

16
00:00:47,200 --> 00:00:49,039
collection script

17
00:00:49,039 --> 00:00:51,280
and explain you what active directory

18
00:00:51,280 --> 00:00:54,719
replication metadata is

19
00:00:54,719 --> 00:00:57,039
then i will show you how we do analyze

20
00:00:57,039 --> 00:00:58,960
this data with the ad timeline

21
00:00:58,960 --> 00:01:01,840
application for splunk

22
00:01:01,840 --> 00:01:04,559
and finally i will present you how to

23
00:01:04,559 --> 00:01:05,280
enhance

24
00:01:05,280 --> 00:01:07,200
your traditional event log threat

25
00:01:07,200 --> 00:01:13,600
hunting with active directory data

26
00:01:13,600 --> 00:01:16,479
so when we perform a forensic analysis

27
00:01:16,479 --> 00:01:18,400
on an active directory domain

28
00:01:18,400 --> 00:01:21,840
we collect a few things first we collect

29
00:01:21,840 --> 00:01:24,400
the active directory data itself

30
00:01:24,400 --> 00:01:28,720
by using the ad timeline portion script

31
00:01:28,720 --> 00:01:31,600
the script is open sourced and available

32
00:01:31,600 --> 00:01:34,320
on github

33
00:01:34,320 --> 00:01:38,479
then we will deploy the dfir.org

34
00:01:38,479 --> 00:01:43,600
program on every member computer

35
00:01:43,600 --> 00:01:47,200
dfir orc which we also call arc

36
00:01:47,200 --> 00:01:50,560
is developed in surplus plus and was

37
00:01:50,560 --> 00:01:52,320
opened first last year

38
00:01:52,320 --> 00:01:56,399
it is also available on gita

39
00:01:56,399 --> 00:01:59,759
finally we will collect some network

40
00:01:59,759 --> 00:02:02,159
logs

41
00:02:04,000 --> 00:02:06,479
so let's have a look at the data

42
00:02:06,479 --> 00:02:08,720
collection process

43
00:02:08,720 --> 00:02:10,639
we will extract network clocks from

44
00:02:10,639 --> 00:02:12,720
security devices

45
00:02:12,720 --> 00:02:16,640
and put them on a central storage

46
00:02:16,640 --> 00:02:19,440
we will run the powershell ad timeline

47
00:02:19,440 --> 00:02:20,480
collection script

48
00:02:20,480 --> 00:02:24,000
against every domain

49
00:02:24,000 --> 00:02:27,440
then on every domain we will also

50
00:02:27,440 --> 00:02:30,959
deploy the arc

51
00:02:30,959 --> 00:02:34,239
collection tool against every member

52
00:02:34,239 --> 00:02:38,480
or workstation for this we can use

53
00:02:38,480 --> 00:02:40,800
a group policy object setting up a

54
00:02:40,800 --> 00:02:42,800
scheduled task

55
00:02:42,800 --> 00:02:46,239
we can also use in-place deployment

56
00:02:46,239 --> 00:02:47,360
tools such as

57
00:02:47,360 --> 00:02:51,680
sccm or lambdas

58
00:02:51,680 --> 00:02:54,319
clock will collect a forensics artifact

59
00:02:54,319 --> 00:02:54,879
on the

60
00:02:54,879 --> 00:02:58,080
windows computer

61
00:02:58,080 --> 00:03:00,560
it will put those artifacts in archives

62
00:03:00,560 --> 00:03:02,879
and those archives will be uploaded via

63
00:03:02,879 --> 00:03:04,400
the bits of assembly

64
00:03:04,400 --> 00:03:08,879
protocol on the central storage

65
00:03:10,640 --> 00:03:13,040
once we have all this data we can bring

66
00:03:13,040 --> 00:03:13,840
it

67
00:03:13,840 --> 00:03:17,280
to ansi for processing on our own

68
00:03:17,280 --> 00:03:21,519
analysis and we can also

69
00:03:21,519 --> 00:03:24,720
do the analysis on site with a dedicated

70
00:03:24,720 --> 00:03:27,680
forensic server

71
00:03:29,040 --> 00:03:33,200
just a quick focus on dfir arc

72
00:03:33,200 --> 00:03:34,879
which is a program that collects

73
00:03:34,879 --> 00:03:36,640
forensics artifacts on

74
00:03:36,640 --> 00:03:39,440
windows posts

75
00:03:39,840 --> 00:03:43,120
it do so by using embed

76
00:03:43,120 --> 00:03:46,480
tools such as getsys which will collect

77
00:03:46,480 --> 00:03:49,760
artifact using a low level interface in

78
00:03:49,760 --> 00:03:50,959
order to prevent

79
00:03:50,959 --> 00:03:54,319
booking it also has

80
00:03:54,319 --> 00:03:58,080
an embedded mft parser

81
00:03:58,080 --> 00:04:01,280
you can in ork embed some third-party

82
00:04:01,280 --> 00:04:02,319
tools such as

83
00:04:02,319 --> 00:04:05,599
a sysenternal source a memory

84
00:04:05,599 --> 00:04:07,280
acquisition tool

85
00:04:07,280 --> 00:04:11,599
any tool you'd like you can so retrieve

86
00:04:11,599 --> 00:04:14,000
the output from a common line that you

87
00:04:14,000 --> 00:04:17,199
will launch on the system

88
00:04:17,199 --> 00:04:21,120
so arc is a modular collection program

89
00:04:21,120 --> 00:04:24,400
and you can set it up to collect

90
00:04:24,400 --> 00:04:27,520
any artifact you want please read the

91
00:04:27,520 --> 00:04:28,880
doc which is available

92
00:04:28,880 --> 00:04:32,800
on github.io to configure your own

93
00:04:32,800 --> 00:04:37,759
arc collection configuration

94
00:04:39,600 --> 00:04:43,840
so once we have collected all these data

95
00:04:45,040 --> 00:04:48,560
we will start the investigation

96
00:04:48,560 --> 00:04:51,120
firstly we will create a an index in

97
00:04:51,120 --> 00:04:52,560
splunk for the new

98
00:04:52,560 --> 00:04:55,040
investigation on a new relational

99
00:04:55,040 --> 00:04:56,800
database

100
00:04:56,800 --> 00:04:59,120
the network clocks and the any timeline

101
00:04:59,120 --> 00:05:02,479
data will be indexed in sprint

102
00:05:02,479 --> 00:05:04,880
regarding the orc archives that contain

103
00:05:04,880 --> 00:05:05,600
the

104
00:05:05,600 --> 00:05:08,840
raw artifacts such as event logs

105
00:05:08,840 --> 00:05:12,160
registry boot card and so on

106
00:05:12,160 --> 00:05:15,600
it will be password by python

107
00:05:15,600 --> 00:05:18,240
passwords and some of this data will be

108
00:05:18,240 --> 00:05:18,960
indexed

109
00:05:18,960 --> 00:05:21,520
in splunk on some other will be imported

110
00:05:21,520 --> 00:05:24,320
in the relational database

111
00:05:24,320 --> 00:05:27,280
all this import process is orchestrated

112
00:05:27,280 --> 00:05:30,799
via apache airflow

113
00:05:31,120 --> 00:05:34,400
so once all the data is imported

114
00:05:34,400 --> 00:05:36,960
our forensics analyst will start to do

115
00:05:36,960 --> 00:05:37,440
some

116
00:05:37,440 --> 00:05:40,720
threat hunting queries and it might spot

117
00:05:40,720 --> 00:05:42,960
some malicious activity

118
00:05:42,960 --> 00:05:46,320
and find out some iocs

119
00:05:46,320 --> 00:05:49,120
those iocs will be capitalized in the

120
00:05:49,120 --> 00:05:50,560
malware information

121
00:05:50,560 --> 00:05:53,919
sharing platform from the circle

122
00:05:53,919 --> 00:05:56,880
on the other end we will export existing

123
00:05:56,880 --> 00:05:59,600
iocs from misps

124
00:05:59,600 --> 00:06:02,720
and compare them with our data set to

125
00:06:02,720 --> 00:06:06,319
see if we have a match

126
00:06:06,319 --> 00:06:09,120
once the investigation is over our

127
00:06:09,120 --> 00:06:10,639
threat intel team

128
00:06:10,639 --> 00:06:13,840
will capitalize on the incident by using

129
00:06:13,840 --> 00:06:15,039
the opencti

130
00:06:15,039 --> 00:06:18,240
project which is an open source project

131
00:06:18,240 --> 00:06:20,000
developed by certain u on

132
00:06:20,000 --> 00:06:22,479
certain

133
00:06:26,160 --> 00:06:29,440
so now let's focus on the ad timeline

134
00:06:29,440 --> 00:06:31,039
collection script

135
00:06:31,039 --> 00:06:33,360
the id timeline corrects some script

136
00:06:33,360 --> 00:06:34,319
retrieved

137
00:06:34,319 --> 00:06:37,039
active directory data itself meaning the

138
00:06:37,039 --> 00:06:39,120
object on the attribute value

139
00:06:39,120 --> 00:06:42,720
but also id replication metadata

140
00:06:42,720 --> 00:06:44,800
which gives you the time at which each

141
00:06:44,800 --> 00:06:46,400
attribute for a given object

142
00:06:46,400 --> 00:06:50,000
was changed as a consequence the

143
00:06:50,000 --> 00:06:51,840
modifications you will retrieve

144
00:06:51,840 --> 00:06:55,280
are partial if the same attribute on the

145
00:06:55,280 --> 00:06:58,000
same object is modified subsequent times

146
00:06:58,000 --> 00:07:00,840
we only have the information of the last

147
00:07:00,840 --> 00:07:03,840
modification but for every modification

148
00:07:03,840 --> 00:07:08,318
a version number is incremented

149
00:07:08,960 --> 00:07:12,160
so replication metadata do not apply to

150
00:07:12,160 --> 00:07:13,840
non-replicated attributes

151
00:07:13,840 --> 00:07:17,520
such as bad password com attribute

152
00:07:17,520 --> 00:07:20,319
application metadata can be retrieved

153
00:07:20,319 --> 00:07:21,440
using powershell

154
00:07:21,440 --> 00:07:23,360
that was the edit timeline collection

155
00:07:23,360 --> 00:07:24,800
script used

156
00:07:24,800 --> 00:07:27,120
but it can be also received using the

157
00:07:27,120 --> 00:07:28,960
rap admin command line tool

158
00:07:28,960 --> 00:07:32,639
so here is an example of the rap admin

159
00:07:32,639 --> 00:07:35,120
command line run against the hr

160
00:07:35,120 --> 00:07:38,000
underscore rw group

161
00:07:38,000 --> 00:07:41,039
you can see that you have a knocker part

162
00:07:41,039 --> 00:07:44,960
on the result output on the lower part

163
00:07:44,960 --> 00:07:47,759
the upper part is for the replication

164
00:07:47,759 --> 00:07:49,199
attribute metadata

165
00:07:49,199 --> 00:07:51,759
value which applied to all attributes

166
00:07:51,759 --> 00:07:53,599
interactive directory

167
00:07:53,599 --> 00:07:56,080
the lower part is for the replication

168
00:07:56,080 --> 00:07:59,120
value metadata that only applies to

169
00:07:59,120 --> 00:08:01,680
linked attributes such as a member and

170
00:08:01,680 --> 00:08:03,840
member of match

171
00:08:03,840 --> 00:08:06,400
so let's read the output from the

172
00:08:06,400 --> 00:08:08,560
reponding command

173
00:08:08,560 --> 00:08:10,479
which is run against the hr underscore

174
00:08:10,479 --> 00:08:12,800
lw group

175
00:08:12,800 --> 00:08:16,280
so firstly we have the group creation at

176
00:08:16,280 --> 00:08:18,960
527 because we are looking at the when

177
00:08:18,960 --> 00:08:21,599
created attributes

178
00:08:21,599 --> 00:08:25,360
then we can tell that at 5 30

179
00:08:25,360 --> 00:08:30,160
the user rick was added to the group

180
00:08:30,160 --> 00:08:33,679
then at 5 39 the description

181
00:08:33,679 --> 00:08:36,320
the group description was edited we can

182
00:08:36,320 --> 00:08:37,760
tell this is the second time the

183
00:08:37,760 --> 00:08:38,719
description

184
00:08:38,719 --> 00:08:42,559
is edited but we do not have an idea of

185
00:08:42,559 --> 00:08:42,958
the

186
00:08:42,958 --> 00:08:46,320
time of the first modification

187
00:08:46,320 --> 00:08:49,519
and finally at 544

188
00:08:49,519 --> 00:08:53,839
the user marty is removed from the group

189
00:08:53,839 --> 00:08:56,000
you can see that by just reading the

190
00:08:56,000 --> 00:08:57,680
replication metadata

191
00:08:57,680 --> 00:09:00,080
you have a timeline of the modification

192
00:09:00,080 --> 00:09:02,959
occurring on the active directory object

193
00:09:02,959 --> 00:09:04,560
so what the ad timeline collection

194
00:09:04,560 --> 00:09:06,640
script do

195
00:09:06,640 --> 00:09:09,040
is that it will um collect object

196
00:09:09,040 --> 00:09:09,760
consider

197
00:09:09,760 --> 00:09:12,399
of interest in the active directory and

198
00:09:12,399 --> 00:09:13,760
for each object

199
00:09:13,760 --> 00:09:15,760
it will retrieve its replication

200
00:09:15,760 --> 00:09:17,279
metadata

201
00:09:17,279 --> 00:09:19,600
then this replication metadata will be

202
00:09:19,600 --> 00:09:20,399
sorted by

203
00:09:20,399 --> 00:09:23,920
last originating change time

204
00:09:23,920 --> 00:09:26,320
as has already saved the timeline is

205
00:09:26,320 --> 00:09:28,320
partial

206
00:09:28,320 --> 00:09:30,320
it is also a snapshot of your active

207
00:09:30,320 --> 00:09:31,360
directory

208
00:09:31,360 --> 00:09:34,080
at a given time if you want to properly

209
00:09:34,080 --> 00:09:36,360
monitor your active directory

210
00:09:36,360 --> 00:09:37,680
modification

211
00:09:37,680 --> 00:09:40,320
please do use security event logs by

212
00:09:40,320 --> 00:09:41,360
configuring

213
00:09:41,360 --> 00:09:44,480
windows audit policies on

214
00:09:44,480 --> 00:09:47,120
setting up a centralization of those

215
00:09:47,120 --> 00:09:47,760
events

216
00:09:47,760 --> 00:09:52,399
with windows event collector

217
00:09:53,120 --> 00:09:56,160
the ad timeline script can be run on a

218
00:09:56,160 --> 00:09:57,040
live domain

219
00:09:57,040 --> 00:10:00,480
it also and as an offline mode meaning

220
00:10:00,480 --> 00:10:00,800
that

221
00:10:00,800 --> 00:10:03,120
if you have a domain controller disk

222
00:10:03,120 --> 00:10:04,000
image

223
00:10:04,000 --> 00:10:06,399
you can extract from this image active

224
00:10:06,399 --> 00:10:08,640
directory database

225
00:10:08,640 --> 00:10:12,240
mount it and run against it

226
00:10:12,240 --> 00:10:18,720
the powershell script

227
00:10:18,720 --> 00:10:21,839
so now we will see how we do analyze

228
00:10:21,839 --> 00:10:24,160
the data collected by the edit timeline

229
00:10:24,160 --> 00:10:26,000
correct

230
00:10:26,000 --> 00:10:28,560
for this we use a splunk app which is

231
00:10:28,560 --> 00:10:29,600
available

232
00:10:29,600 --> 00:10:33,519
on sprint base so add timeline

233
00:10:33,519 --> 00:10:35,040
collection script

234
00:10:35,040 --> 00:10:38,880
generates the ad timeline in a csv file

235
00:10:38,880 --> 00:10:41,120
so we will apply it the ad timeline

236
00:10:41,120 --> 00:10:42,640
source type

237
00:10:42,640 --> 00:10:45,600
in order to index it in splunk and there

238
00:10:45,600 --> 00:10:46,000
will be

239
00:10:46,000 --> 00:10:48,399
some of field extraction performed

240
00:10:48,399 --> 00:10:50,560
fields such as distinguished name object

241
00:10:50,560 --> 00:10:53,360
class will be extracted

242
00:10:53,360 --> 00:10:55,839
regarding the active directory objects

243
00:10:55,839 --> 00:10:57,440
themselves they are

244
00:10:57,440 --> 00:11:00,560
exported an xml file

245
00:11:00,560 --> 00:11:03,600
and we will apply to it the ad object

246
00:11:03,600 --> 00:11:04,560
source type

247
00:11:04,560 --> 00:11:06,880
some field extraction will be also be

248
00:11:06,880 --> 00:11:08,079
performed

249
00:11:08,079 --> 00:11:10,079
on the attributes that says

250
00:11:10,079 --> 00:11:11,200
distinguished name

251
00:11:11,200 --> 00:11:13,120
service principal name and so on will be

252
00:11:13,120 --> 00:11:15,839
extracted

253
00:11:18,000 --> 00:11:20,160
so ad timeline application first plan

254
00:11:20,160 --> 00:11:23,600
gives you some dashboard for analysis

255
00:11:23,600 --> 00:11:25,519
those dashboards are active directory

256
00:11:25,519 --> 00:11:27,920
general information dashboards on active

257
00:11:27,920 --> 00:11:29,279
directory search

258
00:11:29,279 --> 00:11:31,839
dashboard

259
00:11:33,200 --> 00:11:35,360
so we'll have a look at the stage part

260
00:11:35,360 --> 00:11:37,200
first you have a getting started page

261
00:11:37,200 --> 00:11:39,200
that shows you how to index the data

262
00:11:39,200 --> 00:11:40,320
inspect

263
00:11:40,320 --> 00:11:43,360
so let's move on to the first dashboard

264
00:11:43,360 --> 00:11:44,720
which is the active directory

265
00:11:44,720 --> 00:11:46,079
infrastructure dashboard

266
00:11:46,079 --> 00:11:47,519
for each dashboard you have to pick up

267
00:11:47,519 --> 00:11:49,680
your index fromage which is cheese in

268
00:11:49,680 --> 00:11:51,839
france and then the domain

269
00:11:51,839 --> 00:11:54,800
that you want to analyze so first you

270
00:11:54,800 --> 00:11:56,399
have information about

271
00:11:56,399 --> 00:12:00,000
um directory schema version if exchange

272
00:12:00,000 --> 00:12:01,680
is installed in the domain

273
00:12:01,680 --> 00:12:04,959
if what security features are enabled or

274
00:12:04,959 --> 00:12:06,720
not

275
00:12:06,720 --> 00:12:09,680
information about uh trust here we have

276
00:12:09,680 --> 00:12:12,240
an intra forest on the

277
00:12:12,240 --> 00:12:15,120
the child domain which is the child

278
00:12:15,120 --> 00:12:17,600
domain on the interest first

279
00:12:17,600 --> 00:12:19,360
and then you have information about

280
00:12:19,360 --> 00:12:21,200
service connection points and finally

281
00:12:21,200 --> 00:12:22,560
you have the active directory

282
00:12:22,560 --> 00:12:25,519
infrastructure timeline

283
00:12:25,519 --> 00:12:27,360
which give you the change occurring on

284
00:12:27,360 --> 00:12:28,560
the domain we will click

285
00:12:28,560 --> 00:12:31,600
on the trusted domain object class in

286
00:12:31,600 --> 00:12:33,519
order to just have the timeline

287
00:12:33,519 --> 00:12:39,839
of the domain trust modification

288
00:12:40,079 --> 00:12:42,240
so we can see that we have the proper

289
00:12:42,240 --> 00:12:43,839
field extraction with the

290
00:12:43,839 --> 00:12:47,040
two trusts that are listed here and we

291
00:12:47,040 --> 00:12:50,719
are looking at their distinguishing

292
00:12:51,120 --> 00:12:53,040
let's move on with the next dashboard

293
00:12:53,040 --> 00:12:54,480
which is the sensitive accounts

294
00:12:54,480 --> 00:12:56,000
dashboard

295
00:12:56,000 --> 00:12:59,040
so firstly you have an inventory of the

296
00:12:59,040 --> 00:13:02,079
privilege account then a timeline of

297
00:13:02,079 --> 00:13:02,480
this

298
00:13:02,480 --> 00:13:04,320
on the modification occurring on this

299
00:13:04,320 --> 00:13:06,800
privilege account

300
00:13:06,800 --> 00:13:10,000
so now for example we can look at the

301
00:13:10,000 --> 00:13:11,760
domain admin group

302
00:13:11,760 --> 00:13:15,600
and we can click on it in order to have

303
00:13:15,600 --> 00:13:17,760
a timeline of the modification

304
00:13:17,760 --> 00:13:20,160
occurring on this particular group which

305
00:13:20,160 --> 00:13:23,279
is the domain admin group

306
00:13:23,279 --> 00:13:26,320
and we can click on the member

307
00:13:26,320 --> 00:13:27,120
attributes

308
00:13:27,120 --> 00:13:31,440
in order to get the object which were

309
00:13:31,440 --> 00:13:35,839
added or removed from the domain

310
00:13:37,680 --> 00:13:39,440
so now let's move on with the threat

311
00:13:39,440 --> 00:13:42,000
hunting dashboard first one is the

312
00:13:42,000 --> 00:13:43,040
investigate

313
00:13:43,040 --> 00:13:44,800
time fringe dashboard so you will have

314
00:13:44,800 --> 00:13:46,240
to pick up your index

315
00:13:46,240 --> 00:13:49,920
flash the domain and now we will have to

316
00:13:49,920 --> 00:13:51,839
select a time frame because it's the

317
00:13:51,839 --> 00:13:54,560
investigate time frame dashboard

318
00:13:54,560 --> 00:13:57,760
so firstly you have the raw

319
00:13:57,760 --> 00:14:00,639
timeline of change occurring within this

320
00:14:00,639 --> 00:14:01,519
time frame

321
00:14:01,519 --> 00:14:03,760
then you have some panels showing you

322
00:14:03,760 --> 00:14:05,519
stats about

323
00:14:05,519 --> 00:14:08,079
the modification then you have a

324
00:14:08,079 --> 00:14:09,600
dedicated timelines

325
00:14:09,600 --> 00:14:13,440
on each timeline you have miter attack

326
00:14:13,440 --> 00:14:16,399
technique mapping so first time is about

327
00:14:16,399 --> 00:14:17,360
attempts created

328
00:14:17,360 --> 00:14:20,480
and deleted within the time frame second

329
00:14:20,480 --> 00:14:22,240
one is about a group

330
00:14:22,240 --> 00:14:24,320
membership modification and access

331
00:14:24,320 --> 00:14:27,199
control list modification

332
00:14:27,199 --> 00:14:30,880
and last one is about a group policy

333
00:14:30,880 --> 00:14:32,240
object modification

334
00:14:32,240 --> 00:14:34,480
occurring within the timeframe so here

335
00:14:34,480 --> 00:14:36,320
we can see that the default domain

336
00:14:36,320 --> 00:14:37,040
policy

337
00:14:37,040 --> 00:14:39,440
was modified during the period of

338
00:14:39,440 --> 00:14:41,040
interest

339
00:14:41,040 --> 00:14:44,560
on the domain policy as a

340
00:14:44,560 --> 00:14:47,040
scheduled task configured so it might

341
00:14:47,040 --> 00:14:49,440
was investigating this scheduled task it

342
00:14:49,440 --> 00:14:51,760
was used in the recent case to deploy a

343
00:14:51,760 --> 00:14:53,680
ransomware

344
00:14:53,680 --> 00:14:56,079
last dashboard is about track suspicious

345
00:14:56,079 --> 00:14:57,680
activity it is

346
00:14:57,680 --> 00:15:00,000
it gives you a general panel that will

347
00:15:00,000 --> 00:15:01,920
try to highlight some suspicious

348
00:15:01,920 --> 00:15:03,199
activity

349
00:15:03,199 --> 00:15:06,720
such as users that were added on removed

350
00:15:06,720 --> 00:15:07,760
from group

351
00:15:07,760 --> 00:15:11,040
within a short time frame a suspicious

352
00:15:11,040 --> 00:15:14,639
sid history edition modification

353
00:15:14,639 --> 00:15:16,639
occurring on a group policy object

354
00:15:16,639 --> 00:15:20,560
configuring audit settings

355
00:15:20,560 --> 00:15:23,920
possible this year shadow

356
00:15:23,920 --> 00:15:28,079
operation a possible male expectation

357
00:15:28,079 --> 00:15:31,839
occurring on your exchange on prem

358
00:15:31,839 --> 00:15:34,480
and so on

359
00:15:39,279 --> 00:15:43,680
so you can also combine the analysis of

360
00:15:43,680 --> 00:15:46,639
active directory data with element logs

361
00:15:46,639 --> 00:15:48,560
we have shown in the first part that we

362
00:15:48,560 --> 00:15:50,480
do index the ad timeline

363
00:15:50,480 --> 00:15:53,759
data in splunk but we do

364
00:15:53,759 --> 00:15:57,519
also index the event log collected on

365
00:15:57,519 --> 00:15:58,240
every

366
00:15:58,240 --> 00:16:01,759
member computer in

367
00:16:01,759 --> 00:16:05,920
in splunk so with both data we can

368
00:16:05,920 --> 00:16:06,720
perform some

369
00:16:06,720 --> 00:16:09,839
active directory educated queries answer

370
00:16:09,839 --> 00:16:11,360
some questions such as

371
00:16:11,360 --> 00:16:13,839
did a privileged user account perform an

372
00:16:13,839 --> 00:16:15,519
azure account logon

373
00:16:15,519 --> 00:16:18,320
or did the service accounts process is

374
00:16:18,320 --> 00:16:20,880
not related to its service

375
00:16:20,880 --> 00:16:23,519
so let's have a look and try to answer

376
00:16:23,519 --> 00:16:24,800
our first question

377
00:16:24,800 --> 00:16:28,880
which is did a privileged user account

378
00:16:28,880 --> 00:16:32,000
perform unusual account logo

379
00:16:32,000 --> 00:16:34,639
in an ideal world a privilege account

380
00:16:34,639 --> 00:16:35,440
will only

381
00:16:35,440 --> 00:16:38,480
log on tr0 machines meaning

382
00:16:38,480 --> 00:16:41,120
domain controllers on privilege of

383
00:16:41,120 --> 00:16:43,279
access workstation

384
00:16:43,279 --> 00:16:46,639
unfortunately tr0 is too rarely

385
00:16:46,639 --> 00:16:51,839
implemented and we never see

386
00:16:52,800 --> 00:16:55,600
so if you want to retrieve a privilege

387
00:16:55,600 --> 00:16:56,240
accounts

388
00:16:56,240 --> 00:16:58,959
we will perform the following ldap query

389
00:16:58,959 --> 00:17:00,800
against our active directory we are

390
00:17:00,800 --> 00:17:02,480
looking at

391
00:17:02,480 --> 00:17:04,720
object class users on the network so

392
00:17:04,720 --> 00:17:06,480
basically user object

393
00:17:06,480 --> 00:17:09,119
having an admin count equal to one it

394
00:17:09,119 --> 00:17:09,520
means

395
00:17:09,520 --> 00:17:13,439
accounts that are or were privileged

396
00:17:13,679 --> 00:17:15,439
you can see that you can retrieve their

397
00:17:15,439 --> 00:17:18,319
sid value

398
00:17:18,319 --> 00:17:21,039
if you are looking at account logon you

399
00:17:21,039 --> 00:17:21,919
will

400
00:17:21,919 --> 00:17:25,199
look at event id 4624

401
00:17:25,199 --> 00:17:28,240
from the security event log

402
00:17:28,240 --> 00:17:31,200
and you can see that the target user sid

403
00:17:31,200 --> 00:17:32,080
is the sid

404
00:17:32,080 --> 00:17:36,240
of the user performing the logon

405
00:17:36,240 --> 00:17:40,080
so the common key between

406
00:17:40,080 --> 00:17:44,720
both type of data is the sid

407
00:17:44,720 --> 00:17:48,240
so if we want to get a privileged user

408
00:17:48,240 --> 00:17:49,280
account logon

409
00:17:49,280 --> 00:17:52,960
we are looking in our index called

410
00:17:52,960 --> 00:17:54,080
fromage

411
00:17:54,080 --> 00:17:57,520
at the event id 4624

412
00:17:57,520 --> 00:18:00,559
from the security envelope log but we

413
00:18:00,559 --> 00:18:03,200
will use a subsearch to

414
00:18:03,200 --> 00:18:06,480
narrow down our results only to

415
00:18:06,480 --> 00:18:10,559
a privileged user account meaning

416
00:18:10,559 --> 00:18:13,120
we are creating the source type active

417
00:18:13,120 --> 00:18:13,840
directory

418
00:18:13,840 --> 00:18:17,120
object for object class users having an

419
00:18:17,120 --> 00:18:19,679
admin count equal to one

420
00:18:19,679 --> 00:18:23,600
and the common key between

421
00:18:23,600 --> 00:18:25,919
both source type will be sid and target

422
00:18:25,919 --> 00:18:28,720
user essay

423
00:18:28,720 --> 00:18:30,960
finally we will group the results by

424
00:18:30,960 --> 00:18:33,520
username

425
00:18:34,320 --> 00:18:37,440
so for example the user adm

426
00:18:37,440 --> 00:18:40,480
vader logged on not only to

427
00:18:40,480 --> 00:18:43,039
domain controllers but also on a web

428
00:18:43,039 --> 00:18:43,600
server

429
00:18:43,600 --> 00:18:46,720
on exchange server so basically

430
00:18:46,720 --> 00:18:50,240
the tier administration is unfortunately

431
00:18:50,240 --> 00:18:56,000
not implemented in this domain

432
00:18:56,000 --> 00:18:58,080
next example is the kerberos attack

433
00:18:58,080 --> 00:19:00,160
scenario

434
00:19:00,160 --> 00:19:03,600
the kerberos attack involves the

435
00:19:03,600 --> 00:19:06,400
ticket granting service request process

436
00:19:06,400 --> 00:19:11,039
of the kerberos authentication process

437
00:19:11,039 --> 00:19:14,799
users retrieve tgs for given service

438
00:19:14,799 --> 00:19:16,320
from accounts having a service

439
00:19:16,320 --> 00:19:17,520
participant

440
00:19:17,520 --> 00:19:20,559
usually those service

441
00:19:20,559 --> 00:19:24,000
are set up on computer accounts but in

442
00:19:24,000 --> 00:19:24,960
some cases

443
00:19:24,960 --> 00:19:27,679
those are user accounts they are called

444
00:19:27,679 --> 00:19:29,840
kerberos table accounts

445
00:19:29,840 --> 00:19:32,559
the problem is that the tgs has a part

446
00:19:32,559 --> 00:19:33,280
encrypted

447
00:19:33,280 --> 00:19:36,320
with the service account hash if the

448
00:19:36,320 --> 00:19:38,960
user service account has a weak password

449
00:19:38,960 --> 00:19:41,679
the tgs can be cracked offline on user

450
00:19:41,679 --> 00:19:44,480
password retrieved by an attacker

451
00:19:44,480 --> 00:19:47,280
this is especially bad if the user

452
00:19:47,280 --> 00:19:47,760
account

453
00:19:47,760 --> 00:19:50,960
is privileged in that case

454
00:19:50,960 --> 00:19:53,600
the attacker will perform an elevation

455
00:19:53,600 --> 00:19:56,240
of privilege in the domain

456
00:19:56,240 --> 00:19:58,720
as a mitigation please do use a group

457
00:19:58,720 --> 00:20:00,559
managed service account which were

458
00:20:00,559 --> 00:20:02,000
introduced by

459
00:20:02,000 --> 00:20:06,080
windows 2012

460
00:20:06,080 --> 00:20:09,840
instead of normal user accounts

461
00:20:09,840 --> 00:20:13,200
so we have our active directory

462
00:20:13,200 --> 00:20:18,640
with user account unfortunately with spn

463
00:20:18,840 --> 00:20:20,960
configured

464
00:20:20,960 --> 00:20:24,480
um tgs for this service can be

465
00:20:24,480 --> 00:20:29,039
legitimately retrieved by a

466
00:20:29,039 --> 00:20:32,400
user accessing to the web server where

467
00:20:32,400 --> 00:20:34,159
some of those service accounts are

468
00:20:34,159 --> 00:20:36,320
configured

469
00:20:36,320 --> 00:20:38,240
on the other end what will be most

470
00:20:38,240 --> 00:20:39,440
suspicious

471
00:20:39,440 --> 00:20:43,679
is are multiple tgs requests for

472
00:20:43,679 --> 00:20:46,880
may for many user accounts having an

473
00:20:46,880 --> 00:20:48,000
espn

474
00:20:48,000 --> 00:20:51,600
within a short period of time

475
00:20:51,600 --> 00:20:54,480
because with all those tgs the attacker

476
00:20:54,480 --> 00:20:56,480
will try to crack

477
00:20:56,480 --> 00:20:59,600
all of them offline and if he is lucky

478
00:20:59,600 --> 00:20:59,919
or

479
00:20:59,919 --> 00:21:03,200
the password is weak he will be able to

480
00:21:03,200 --> 00:21:07,039
crack one and retrieve a service account

481
00:21:07,039 --> 00:21:08,640
secret

482
00:21:08,640 --> 00:21:11,919
our attacker will then perform a lateral

483
00:21:11,919 --> 00:21:16,400
movement with this service account

484
00:21:16,400 --> 00:21:19,440
so let's have a look we are looking at

485
00:21:19,440 --> 00:21:19,919
the

486
00:21:19,919 --> 00:21:24,240
sensitive account dashboard

487
00:21:24,240 --> 00:21:26,960
so we once again we choose our index of

488
00:21:26,960 --> 00:21:28,960
homage

489
00:21:28,960 --> 00:21:31,760
we are looking at the cable restable

490
00:21:31,760 --> 00:21:33,919
account

491
00:21:33,919 --> 00:21:37,679
inventory so we can tell that there is

492
00:21:37,679 --> 00:21:39,840
no privilege account which is

493
00:21:39,840 --> 00:21:42,960
a carberos table but they

494
00:21:42,960 --> 00:21:46,960
might have some privileges as

495
00:21:47,120 --> 00:21:50,158
just workstation

496
00:21:52,960 --> 00:21:55,440
so we are looking at the source type id

497
00:21:55,440 --> 00:21:56,159
object

498
00:21:56,159 --> 00:21:59,200
and the object class user having

499
00:21:59,200 --> 00:22:02,640
a responsible name which is not the krbt

500
00:22:02,640 --> 00:22:03,200
gt

501
00:22:03,200 --> 00:22:07,280
account so if we want to

502
00:22:07,280 --> 00:22:11,440
spot some suspicious tgs request we are

503
00:22:11,440 --> 00:22:12,000
looking at

504
00:22:12,000 --> 00:22:16,000
event id 4769 which are

505
00:22:16,000 --> 00:22:18,880
recorded on domain controller and we

506
00:22:18,880 --> 00:22:19,360
will

507
00:22:19,360 --> 00:22:22,799
just ask for a tgs request

508
00:22:22,799 --> 00:22:26,480
for a kerberos stable

509
00:22:26,480 --> 00:22:29,280
account meaning we are looking at object

510
00:22:29,280 --> 00:22:31,039
class

511
00:22:31,039 --> 00:22:34,480
users and having an spn from the sort

512
00:22:34,480 --> 00:22:34,880
type

513
00:22:34,880 --> 00:22:37,600
ad object

514
00:22:39,120 --> 00:22:44,960
so uh first we will have some

515
00:22:44,960 --> 00:22:47,840
tgs requests coming from the for the

516
00:22:47,840 --> 00:22:48,960
same service

517
00:22:48,960 --> 00:22:52,240
which look totally tragic occurring on

518
00:22:52,240 --> 00:22:55,360
from one given ip

519
00:22:55,360 --> 00:22:58,720
on the other end we have a another

520
00:22:58,720 --> 00:23:02,159
ip that is requesting many

521
00:23:02,159 --> 00:23:05,520
tgs within a short period of time so

522
00:23:05,520 --> 00:23:07,520
this is very suspicious so you might

523
00:23:07,520 --> 00:23:08,000
want to

524
00:23:08,000 --> 00:23:15,120
investigate the ip ending with a 56.126

525
00:23:15,919 --> 00:23:18,720
now we will try to figure out if we if

526
00:23:18,720 --> 00:23:21,120
our attacker

527
00:23:21,120 --> 00:23:24,880
successfully uh compromised one account

528
00:23:24,880 --> 00:23:26,960
on perform lateral movement with this

529
00:23:26,960 --> 00:23:28,080
service account

530
00:23:28,080 --> 00:23:30,480
so we are looking at the authentication

531
00:23:30,480 --> 00:23:33,080
event so event id

532
00:23:33,080 --> 00:23:36,000
46.24 and but

533
00:23:36,000 --> 00:23:39,120
only a four kerbers or stable account

534
00:23:39,120 --> 00:23:44,000
so we narrow down our search for

535
00:23:44,000 --> 00:23:50,000
a user object having a

536
00:23:50,000 --> 00:23:53,360
we run our search and we see that

537
00:23:53,360 --> 00:23:56,880
on the computer uh on the on the web

538
00:23:56,880 --> 00:23:58,240
server

539
00:23:58,240 --> 00:24:01,440
we have um logon time for occurring for

540
00:24:01,440 --> 00:24:02,000
some

541
00:24:02,000 --> 00:24:04,559
services account so service account

542
00:24:04,559 --> 00:24:06,080
performing a

543
00:24:06,080 --> 00:24:09,520
log on time for uh nursing suspicious

544
00:24:09,520 --> 00:24:12,000
on the other hand on a windows 10

545
00:24:12,000 --> 00:24:14,080
workstation there is a service account

546
00:24:14,080 --> 00:24:14,960
performing

547
00:24:14,960 --> 00:24:18,559
a rdp connection so it's a bit

548
00:24:18,559 --> 00:24:19,679
suspicious for

549
00:24:19,679 --> 00:24:22,640
a workstation or for a service account

550
00:24:22,640 --> 00:24:25,279
performing an entire tv logger

551
00:24:25,279 --> 00:24:27,039
so you might want to investigate this

552
00:24:27,039 --> 00:24:28,559
workstation

553
00:24:28,559 --> 00:24:30,799
then we will have a look at the process

554
00:24:30,799 --> 00:24:32,559
launched by the cabal sustainable

555
00:24:32,559 --> 00:24:37,039
account we are looking at event id 4688

556
00:24:37,039 --> 00:24:39,840
we perform the same sub-search so we are

557
00:24:39,840 --> 00:24:40,880
looking at

558
00:24:40,880 --> 00:24:44,799
only cabarrus table accounts

559
00:24:45,120 --> 00:24:48,000
and we group the results by computer

560
00:24:48,000 --> 00:24:48,960
first we have

561
00:24:48,960 --> 00:24:52,320
a process launched by a user having an

562
00:24:52,320 --> 00:24:54,000
spn on a web server

563
00:24:54,000 --> 00:24:56,960
so our cable stable accounts are

564
00:24:56,960 --> 00:24:58,559
launching processes

565
00:24:58,559 --> 00:25:01,600
related to internet information services

566
00:25:01,600 --> 00:25:04,240
application pool which is totally legit

567
00:25:04,240 --> 00:25:06,559
it's their purpose they're running

568
00:25:06,559 --> 00:25:10,080
this service on the other end

569
00:25:10,080 --> 00:25:13,440
on the windows host we have a logon type

570
00:25:13,440 --> 00:25:17,200
type 10 so we have many process

571
00:25:17,200 --> 00:25:20,640
launched we will see

572
00:25:20,640 --> 00:25:23,760
that there are some processes that look

573
00:25:23,760 --> 00:25:28,480
a bit odd such as the parmigiano process

574
00:25:28,480 --> 00:25:31,679
which is launching uh powershell so you

575
00:25:31,679 --> 00:25:33,760
might also want to have a look at your

576
00:25:33,760 --> 00:25:36,720
powershell logs on this workstation

577
00:25:36,720 --> 00:25:41,120
and you will also see the creation of a

578
00:25:41,120 --> 00:25:43,600
net share called the stilton so you

579
00:25:43,600 --> 00:25:44,159
might

580
00:25:44,159 --> 00:25:48,640
want to investigate this as well

581
00:25:51,600 --> 00:25:54,240
as a conclusion we have just shown you

582
00:25:54,240 --> 00:25:55,279
that you can use

583
00:25:55,279 --> 00:25:57,520
edit timeline on windows event logs to

584
00:25:57,520 --> 00:25:58,320
find a

585
00:25:58,320 --> 00:26:02,240
well-known active directory attacks

586
00:26:02,240 --> 00:26:05,200
you can use ad timeline alone in order

587
00:26:05,200 --> 00:26:07,200
to characterize change main in your

588
00:26:07,200 --> 00:26:09,360
active directory if you do not have

589
00:26:09,360 --> 00:26:11,279
sufficient log history

590
00:26:11,279 --> 00:26:13,520
but remember that it is a snapshot from

591
00:26:13,520 --> 00:26:15,760
your active directory

592
00:26:15,760 --> 00:26:19,039
not a monitoring tool so please set up

593
00:26:19,039 --> 00:26:21,440
proper

594
00:26:21,919 --> 00:26:25,760
event log forwarding

595
00:26:25,760 --> 00:26:27,840
by reading the dashboard you can find

596
00:26:27,840 --> 00:26:30,080
some persistent mechanism

597
00:26:30,080 --> 00:26:33,279
and so on with a timeline application

598
00:26:33,279 --> 00:26:37,200
for splunk and if you do some audit with

599
00:26:37,200 --> 00:26:39,520
tools such as bloat on ad control pass

600
00:26:39,520 --> 00:26:40,640
or pin castle

601
00:26:40,640 --> 00:26:43,679
if you find some bad configuration you

602
00:26:43,679 --> 00:26:44,960
can

603
00:26:44,960 --> 00:26:47,919
look with a timeline at what time those

604
00:26:47,919 --> 00:26:49,520
that configuration

605
00:26:49,520 --> 00:26:53,200
occurred in order to have some context

606
00:26:53,200 --> 00:26:56,000
on those modifications and finally you

607
00:26:56,000 --> 00:26:56,480
can use

608
00:26:56,480 --> 00:26:59,200
ad timeline with other data source for

609
00:26:59,200 --> 00:27:00,320
example if you have

610
00:27:00,320 --> 00:27:03,919
a proxy that does windows integrated

611
00:27:03,919 --> 00:27:05,279
onto application

612
00:27:05,279 --> 00:27:08,400
you can look for a service account

613
00:27:08,400 --> 00:27:12,880
activity or you can also

614
00:27:12,880 --> 00:27:16,080
baseline your your vpn logs with a

615
00:27:16,080 --> 00:27:19,120
active directory

616
00:27:19,120 --> 00:27:21,840
so thank you for listening to this

617
00:27:21,840 --> 00:27:23,279
presentation

618
00:27:23,279 --> 00:27:25,919
that's all for me if you have any

619
00:27:25,919 --> 00:27:27,039
question

620
00:27:27,039 --> 00:27:30,960
please do not hesitate to reach out

621
00:27:31,640 --> 00:27:34,640
goodbye

