1
00:00:02,480 --> 00:00:04,000
thank you for joining us today

2
00:00:04,000 --> 00:00:06,319
just a few very quick reminders before

3
00:00:06,319 --> 00:00:07,520
we get started

4
00:00:07,520 --> 00:00:10,160
all the attendees are muted if you're

5
00:00:10,160 --> 00:00:12,080
using the event app we encourage you to

6
00:00:12,080 --> 00:00:13,440
check into the session

7
00:00:13,440 --> 00:00:15,360
update your activities and be sure to

8
00:00:15,360 --> 00:00:18,000
complete the session survey at the end

9
00:00:18,000 --> 00:00:20,320
this session is tlp white and is being

10
00:00:20,320 --> 00:00:21,279
recorded

11
00:00:21,279 --> 00:00:23,359
recordings will be available within 24

12
00:00:23,359 --> 00:00:25,119
hours via the app

13
00:00:25,119 --> 00:00:26,640
and with that i'd like to introduce you

14
00:00:26,640 --> 00:00:28,840
to your session moderator

15
00:00:28,840 --> 00:00:32,800
natsuko take it away thank you

16
00:00:32,800 --> 00:00:36,079
thank you um hi everyone this is

17
00:00:36,079 --> 00:00:38,399
i'll be moderating this session today uh

18
00:00:38,399 --> 00:00:39,520
you're at the session

19
00:00:39,520 --> 00:00:42,640
scan analyze and test data oh my how to

20
00:00:42,640 --> 00:00:44,800
get over the results rainbow

21
00:00:44,800 --> 00:00:47,120
um just one thing before we get started

22
00:00:47,120 --> 00:00:47,840
so

23
00:00:47,840 --> 00:00:49,840
we ask that you submit your questions

24
00:00:49,840 --> 00:00:52,000
for the q a in the q a section

25
00:00:52,000 --> 00:00:55,280
on the q a function in your zoom window

26
00:00:55,280 --> 00:00:56,719
the questions will be queued up in the

27
00:00:56,719 --> 00:00:58,559
order they are received

28
00:00:58,559 --> 00:01:01,280
and with that i would like to go ahead

29
00:01:01,280 --> 00:01:02,320
and get started

30
00:01:02,320 --> 00:01:04,479
and i will start by introducing our

31
00:01:04,479 --> 00:01:05,600
speakers today

32
00:01:05,600 --> 00:01:08,880
so we have two speakers from nvidia

33
00:01:08,880 --> 00:01:13,119
um and they are both um

34
00:01:13,119 --> 00:01:15,280
senior application developer and lead

35
00:01:15,280 --> 00:01:17,280
product security tools team

36
00:01:17,280 --> 00:01:20,560
um so we have jessica and dee

37
00:01:20,560 --> 00:01:23,439
so jessica is a senior application

38
00:01:23,439 --> 00:01:25,040
developer and lead for

39
00:01:25,040 --> 00:01:27,520
nvidia's product security tools team and

40
00:01:27,520 --> 00:01:28,080
she has

41
00:01:28,080 --> 00:01:31,200
13 over 13 years of experience

42
00:01:31,200 --> 00:01:32,880
and earned her master's in computer

43
00:01:32,880 --> 00:01:34,400
engineering from washington university

44
00:01:34,400 --> 00:01:36,240
in st louis

45
00:01:36,240 --> 00:01:38,720
she also has her certifications in java

46
00:01:38,720 --> 00:01:41,040
ruby and cisco's the cna

47
00:01:41,040 --> 00:01:44,240
and d anachae is a senior

48
00:01:44,240 --> 00:01:46,960
development leader at nvidia's security

49
00:01:46,960 --> 00:01:48,640
tools platform team

50
00:01:48,640 --> 00:01:50,799
um she has 14 years of experience in the

51
00:01:50,799 --> 00:01:53,399
software industry and she specializes in

52
00:01:53,399 --> 00:01:55,119
architecting and

53
00:01:55,119 --> 00:01:57,600
delivering reliable and scalable systems

54
00:01:57,600 --> 00:01:59,200
in a variety of areas

55
00:01:59,200 --> 00:02:02,159
especially online services and with that

56
00:02:02,159 --> 00:02:04,240
i will turn the tables over to jessica

57
00:02:04,240 --> 00:02:06,079
and dee for their presentation

58
00:02:06,079 --> 00:02:09,840
thank you thank you

59
00:02:17,280 --> 00:02:20,319
okay welcome to scan

60
00:02:20,319 --> 00:02:23,200
analyze and test data oh my getting over

61
00:02:23,200 --> 00:02:26,080
the results rainbow

62
00:02:26,080 --> 00:02:28,080
i have d today go ahead d if you would

63
00:02:28,080 --> 00:02:29,120
like to introduce yourself yeah

64
00:02:29,120 --> 00:02:29,760
absolutely

65
00:02:29,760 --> 00:02:31,680
really good introductions already so

66
00:02:31,680 --> 00:02:33,680
yeah i know thanks natsuko for a great

67
00:02:33,680 --> 00:02:34,640
introduction but

68
00:02:34,640 --> 00:02:37,120
i will just add i've been at nvidia for

69
00:02:37,120 --> 00:02:38,640
over uh two years now

70
00:02:38,640 --> 00:02:40,400
and i'm really excited to share our

71
00:02:40,400 --> 00:02:42,239
registration and reporting platform with

72
00:02:42,239 --> 00:02:44,080
you guys

73
00:02:44,080 --> 00:02:46,160
and uh i am jessica butler i've been

74
00:02:46,160 --> 00:02:47,840
with the security tools team

75
00:02:47,840 --> 00:02:50,080
at nvidia for a little over three years

76
00:02:50,080 --> 00:02:52,000
um i've had the privilege of being one

77
00:02:52,000 --> 00:02:53,360
of the founding members for the

78
00:02:53,360 --> 00:02:54,959
application we're going to share today

79
00:02:54,959 --> 00:02:57,200
inspect

80
00:02:57,200 --> 00:02:59,440
and actually looking at this picture

81
00:02:59,440 --> 00:03:00,560
makes me a little sad this was

82
00:03:00,560 --> 00:03:02,319
after the last first conference we were

83
00:03:02,319 --> 00:03:04,159
able to travel still

84
00:03:04,159 --> 00:03:08,000
in portugal so hopefully soon we'll be

85
00:03:08,000 --> 00:03:09,280
out again

86
00:03:09,280 --> 00:03:11,840
okay so today i want to talk a bit about

87
00:03:11,840 --> 00:03:12,560
our journey

88
00:03:12,560 --> 00:03:14,480
and kind of how we have landed where we

89
00:03:14,480 --> 00:03:16,640
are and where we are in our journey

90
00:03:16,640 --> 00:03:18,080
and where we started and all the

91
00:03:18,080 --> 00:03:20,560
struggles that have gone on so far

92
00:03:20,560 --> 00:03:22,560
so we'll start with kind of the pitfalls

93
00:03:22,560 --> 00:03:24,000
of a manual process

94
00:03:24,000 --> 00:03:27,680
of working on getting some

95
00:03:27,680 --> 00:03:29,680
scanning applications and all the data

96
00:03:29,680 --> 00:03:30,720
around that for

97
00:03:30,720 --> 00:03:33,200
our product teams at nvidia and we'll

98
00:03:33,200 --> 00:03:34,879
talk about some of the different

99
00:03:34,879 --> 00:03:37,200
um applications that we actually use for

100
00:03:37,200 --> 00:03:39,120
scanning and the data that we are trying

101
00:03:39,120 --> 00:03:39,840
to

102
00:03:39,840 --> 00:03:41,680
make sense of and try to present in a

103
00:03:41,680 --> 00:03:43,760
way that actually is actionable for our

104
00:03:43,760 --> 00:03:45,040
teams

105
00:03:45,040 --> 00:03:46,720
then we'll talk a little bit about how

106
00:03:46,720 --> 00:03:48,879
we are cataloging our software portfolio

107
00:03:48,879 --> 00:03:50,640
at nvidia

108
00:03:50,640 --> 00:03:53,280
and then we'll move on to kind of where

109
00:03:53,280 --> 00:03:54,319
we landed with

110
00:03:54,319 --> 00:03:56,799
how we could actually put the onus back

111
00:03:56,799 --> 00:03:58,879
on the teams for registering

112
00:03:58,879 --> 00:04:00,560
all of their applications and their data

113
00:04:00,560 --> 00:04:02,720
themselves then d will take over

114
00:04:02,720 --> 00:04:04,400
and talk more about how we're mapping

115
00:04:04,400 --> 00:04:06,879
the data so that we can get all of our

116
00:04:06,879 --> 00:04:09,519
information into a single pane in a

117
00:04:09,519 --> 00:04:10,640
place where we can

118
00:04:10,640 --> 00:04:12,799
see everything together and a much

119
00:04:12,799 --> 00:04:14,000
easier way to visualize

120
00:04:14,000 --> 00:04:16,478
the risk that all of our software has or

121
00:04:16,478 --> 00:04:17,839
hopefully doesn't have

122
00:04:17,839 --> 00:04:20,959
um along with that we've learned kind of

123
00:04:20,959 --> 00:04:22,720
along the way that we need to be able to

124
00:04:22,720 --> 00:04:24,639
automate notifications so she'll go into

125
00:04:24,639 --> 00:04:25,919
some of the notifications that we're

126
00:04:25,919 --> 00:04:27,199
sending out to our product

127
00:04:27,199 --> 00:04:30,800
owners and how we can automate

128
00:04:30,800 --> 00:04:32,479
automate the issue management and

129
00:04:32,479 --> 00:04:34,880
getting all of the tickets in a place

130
00:04:34,880 --> 00:04:36,400
where the product teams are used to

131
00:04:36,400 --> 00:04:39,120
finding them after that we'll touch on

132
00:04:39,120 --> 00:04:40,639
calculating risk and we would love to

133
00:04:40,639 --> 00:04:42,400
have some questions and have some

134
00:04:42,400 --> 00:04:44,160
of the audience share with us at that

135
00:04:44,160 --> 00:04:46,400
point

136
00:04:48,160 --> 00:04:50,639
so when i started at nvidia um i had

137
00:04:50,639 --> 00:04:51,759
already been a developer

138
00:04:51,759 --> 00:04:55,120
for about i guess 11 years so i came and

139
00:04:55,120 --> 00:04:55,759
i

140
00:04:55,759 --> 00:04:57,440
was new to security so i came onto the

141
00:04:57,440 --> 00:04:59,520
security team um

142
00:04:59,520 --> 00:05:01,199
wanting to really kind of build an

143
00:05:01,199 --> 00:05:02,960
application around

144
00:05:02,960 --> 00:05:06,479
the scanning process but the way things

145
00:05:06,479 --> 00:05:07,120
kind of

146
00:05:07,120 --> 00:05:10,560
started was we

147
00:05:10,560 --> 00:05:12,479
we already had a tool that we knew we

148
00:05:12,479 --> 00:05:13,919
wanted to use for

149
00:05:13,919 --> 00:05:16,320
um open source vulnerability scanning

150
00:05:16,320 --> 00:05:17,039
and so

151
00:05:17,039 --> 00:05:19,520
we would we kind of let the product

152
00:05:19,520 --> 00:05:21,520
teams know that we had this tool and we

153
00:05:21,520 --> 00:05:23,039
started asking people to have these

154
00:05:23,039 --> 00:05:24,720
scans done

155
00:05:24,720 --> 00:05:26,080
and before we were ready with the

156
00:05:26,080 --> 00:05:28,479
application we had teams that would just

157
00:05:28,479 --> 00:05:30,160
reach out to us via email

158
00:05:30,160 --> 00:05:33,520
or slack or whatever the

159
00:05:33,520 --> 00:05:36,720
i guess choice of communication was at

160
00:05:36,720 --> 00:05:38,000
that time

161
00:05:38,000 --> 00:05:39,199
tell us that they were ready to do a

162
00:05:39,199 --> 00:05:41,280
release and they knew that they needed

163
00:05:41,280 --> 00:05:42,880
to have a scan done

164
00:05:42,880 --> 00:05:44,800
before they could release so we would

165
00:05:44,800 --> 00:05:46,240
gather the source location

166
00:05:46,240 --> 00:05:48,479
um run the scanning tool and then

167
00:05:48,479 --> 00:05:50,560
obviously there was more than one

168
00:05:50,560 --> 00:05:53,039
source code location that was associated

169
00:05:53,039 --> 00:05:54,960
to a product so we'd have to manually

170
00:05:54,960 --> 00:05:56,319
group that data and then we would

171
00:05:56,319 --> 00:05:58,560
would ship that report off to the

172
00:05:58,560 --> 00:06:01,120
requester

173
00:06:01,360 --> 00:06:03,440
and some of the tools that we were using

174
00:06:03,440 --> 00:06:04,639
at that time

175
00:06:04,639 --> 00:06:06,160
or actually some of the tools that we're

176
00:06:06,160 --> 00:06:07,919
using now

177
00:06:07,919 --> 00:06:10,000
show data in a way like this so we're

178
00:06:10,000 --> 00:06:11,600
looking at some of the

179
00:06:11,600 --> 00:06:14,000
user interfaces for the scanning tools

180
00:06:14,000 --> 00:06:15,360
that we use

181
00:06:15,360 --> 00:06:18,319
you can see here this one you can see

182
00:06:18,319 --> 00:06:19,039
the different

183
00:06:19,039 --> 00:06:21,039
open source components that were found

184
00:06:21,039 --> 00:06:22,240
you can see some of the

185
00:06:22,240 --> 00:06:23,759
open source vulnerabilities and the

186
00:06:23,759 --> 00:06:25,680
security risk over here

187
00:06:25,680 --> 00:06:28,240
you can see the different licenses and

188
00:06:28,240 --> 00:06:30,160
then if you drill down into these then

189
00:06:30,160 --> 00:06:33,360
you can get more information

190
00:06:33,600 --> 00:06:37,039
and also we use coverity um and you can

191
00:06:37,039 --> 00:06:37,600
see

192
00:06:37,600 --> 00:06:40,960
basically the id of the vulnerability

193
00:06:40,960 --> 00:06:42,479
that's found

194
00:06:42,479 --> 00:06:45,039
in this case it looks like somebody

195
00:06:45,039 --> 00:06:46,080
needed to scrub this

196
00:06:46,080 --> 00:06:48,080
so i just grabbed a screenshot of one

197
00:06:48,080 --> 00:06:50,080
project um

198
00:06:50,080 --> 00:06:51,520
you can see the impact you can see first

199
00:06:51,520 --> 00:06:53,759
detected

200
00:06:53,759 --> 00:06:56,400
and for check marks you see something

201
00:06:56,400 --> 00:06:57,759
that looks a little bit similar where

202
00:06:57,759 --> 00:06:59,840
you get your kind of your your risk down

203
00:06:59,840 --> 00:07:00,319
here

204
00:07:00,319 --> 00:07:03,280
but again all of these things are kind

205
00:07:03,280 --> 00:07:04,880
of foreign and for you to be able to

206
00:07:04,880 --> 00:07:06,080
understand what each

207
00:07:06,080 --> 00:07:08,560
of the different scan tools are trying

208
00:07:08,560 --> 00:07:09,599
to tell you

209
00:07:09,599 --> 00:07:11,680
and learn how to use each one and how to

210
00:07:11,680 --> 00:07:13,039
drill down into each one

211
00:07:13,039 --> 00:07:14,880
takes time and we don't really want to

212
00:07:14,880 --> 00:07:16,720
push that onto all of our product teams

213
00:07:16,720 --> 00:07:18,800
it's hard enough to get them to start

214
00:07:18,800 --> 00:07:21,919
the security process

215
00:07:21,919 --> 00:07:24,960
alone so

216
00:07:24,960 --> 00:07:26,560
we wanted to be able to grab all this

217
00:07:26,560 --> 00:07:28,880
data together and

218
00:07:28,880 --> 00:07:31,199
display it in a way that makes sense for

219
00:07:31,199 --> 00:07:33,280
not only the owners of each of the

220
00:07:33,280 --> 00:07:36,800
products but all the way up to the

221
00:07:36,800 --> 00:07:40,400
org3 leader or the the vps executives

222
00:07:40,400 --> 00:07:41,120
that

223
00:07:41,120 --> 00:07:42,960
actually own all of this so that they

224
00:07:42,960 --> 00:07:44,639
can understand the risk that they are

225
00:07:44,639 --> 00:07:45,759
shipping

226
00:07:45,759 --> 00:07:48,160
so we started by defining how do we want

227
00:07:48,160 --> 00:07:48,800
to

228
00:07:48,800 --> 00:07:51,039
actually catalog all this information in

229
00:07:51,039 --> 00:07:52,319
our database

230
00:07:52,319 --> 00:07:54,639
so we knew we needed like a top level

231
00:07:54,639 --> 00:07:55,759
product

232
00:07:55,759 --> 00:07:57,280
this is something that is shippable or

233
00:07:57,280 --> 00:07:58,800
deployable we know we need

234
00:07:58,800 --> 00:08:00,800
executive ownership at this level so

235
00:08:00,800 --> 00:08:01,919
that we can drive these

236
00:08:01,919 --> 00:08:05,520
actions and we allow versioning and we

237
00:08:05,520 --> 00:08:06,960
want to make sure that we can capture

238
00:08:06,960 --> 00:08:10,240
end of life after that we need to be

239
00:08:10,240 --> 00:08:11,840
able to break this down into how are

240
00:08:11,840 --> 00:08:13,919
things built how do things go together

241
00:08:13,919 --> 00:08:16,400
how is ownership defined at a component

242
00:08:16,400 --> 00:08:18,720
level and also we know that there are

243
00:08:18,720 --> 00:08:21,199
many components at the or in the

244
00:08:21,199 --> 00:08:22,240
organization that

245
00:08:22,240 --> 00:08:24,960
are shared among many products so we

246
00:08:24,960 --> 00:08:26,800
have this logical segregation

247
00:08:26,800 --> 00:08:29,280
that's known as a component and it can

248
00:08:29,280 --> 00:08:30,160
have

249
00:08:30,160 --> 00:08:33,039
um many source code locations in it so

250
00:08:33,039 --> 00:08:34,719
many source code repositories

251
00:08:34,719 --> 00:08:37,039
it can be found in many products we want

252
00:08:37,039 --> 00:08:39,120
to make sure that we have the ownership

253
00:08:39,120 --> 00:08:41,839
at this level and we do we do marry this

254
00:08:41,839 --> 00:08:45,120
kind of to a build

255
00:08:46,000 --> 00:08:47,760
the next thing that we need to be able

256
00:08:47,760 --> 00:08:49,120
to

257
00:08:49,120 --> 00:08:51,600
show in the database is the dependencies

258
00:08:51,600 --> 00:08:53,360
how things are related

259
00:08:53,360 --> 00:08:55,040
so we know we have internal components

260
00:08:55,040 --> 00:08:57,200
already we can also have external open

261
00:08:57,200 --> 00:08:59,040
source software and external third-party

262
00:08:59,040 --> 00:08:59,680
software

263
00:08:59,680 --> 00:09:01,680
and we know we need to be able to have a

264
00:09:01,680 --> 00:09:03,360
nested relationship with this so we

265
00:09:03,360 --> 00:09:05,839
built this into our database

266
00:09:05,839 --> 00:09:08,240
and then since the the first kind of

267
00:09:08,240 --> 00:09:09,279
service that we

268
00:09:09,279 --> 00:09:11,279
offered was this open source scanning

269
00:09:11,279 --> 00:09:13,120
solution we wanted to make sure that we

270
00:09:13,120 --> 00:09:14,560
highlight the things that are open

271
00:09:14,560 --> 00:09:15,040
source

272
00:09:15,040 --> 00:09:18,080
so we can actually track any

273
00:09:18,080 --> 00:09:20,000
versioning there and the vulnerability

274
00:09:20,000 --> 00:09:21,279
mapping

275
00:09:21,279 --> 00:09:23,600
and then we do have a service now in

276
00:09:23,600 --> 00:09:24,560
place where

277
00:09:24,560 --> 00:09:26,080
we check every night for all of our

278
00:09:26,080 --> 00:09:27,839
source code repositories to see if

279
00:09:27,839 --> 00:09:29,360
there's been any commits and we will

280
00:09:29,360 --> 00:09:30,959
rescan to see if

281
00:09:30,959 --> 00:09:34,839
the fix has been applied so we do fix

282
00:09:34,839 --> 00:09:36,880
verification

283
00:09:36,880 --> 00:09:38,720
okay so we had all the data in the

284
00:09:38,720 --> 00:09:40,800
catalog and we started to actually

285
00:09:40,800 --> 00:09:43,839
um put some of this data in there in

286
00:09:43,839 --> 00:09:45,600
in your own org if you're thinking about

287
00:09:45,600 --> 00:09:47,200
trying to do something like this which i

288
00:09:47,200 --> 00:09:49,680
highly recommend

289
00:09:49,680 --> 00:09:51,839
it would be a good place to like at this

290
00:09:51,839 --> 00:09:53,360
point kind of stop and see is there a

291
00:09:53,360 --> 00:09:54,959
way that you could seed the data for

292
00:09:54,959 --> 00:09:55,519
this

293
00:09:55,519 --> 00:09:58,800
so that you can uh kind of

294
00:09:58,800 --> 00:10:02,160
pre-initialize any level of this

295
00:10:02,160 --> 00:10:04,000
most likely the top level where you have

296
00:10:04,000 --> 00:10:05,839
the the business units and

297
00:10:05,839 --> 00:10:07,279
the organization and who owns each

298
00:10:07,279 --> 00:10:10,000
product we weren't able to actually

299
00:10:10,000 --> 00:10:11,839
um get all the information that we

300
00:10:11,839 --> 00:10:13,519
needed at this point and my guess is

301
00:10:13,519 --> 00:10:13,920
that

302
00:10:13,920 --> 00:10:15,760
you will not be able to find everything

303
00:10:15,760 --> 00:10:17,680
that you need down to the granularity

304
00:10:17,680 --> 00:10:20,240
that you're going to want to understand

305
00:10:20,240 --> 00:10:22,079
how things are built how things are put

306
00:10:22,079 --> 00:10:23,279
together

307
00:10:23,279 --> 00:10:26,399
and be able to easily collate all those

308
00:10:26,399 --> 00:10:27,120
results

309
00:10:27,120 --> 00:10:30,839
into a proper story i guess

310
00:10:30,839 --> 00:10:34,720
so we were still kind of in the mode of

311
00:10:34,720 --> 00:10:36,959
manually entering this data ourselves

312
00:10:36,959 --> 00:10:39,360
and we had the idea of

313
00:10:39,360 --> 00:10:41,200
creating this self-service registration

314
00:10:41,200 --> 00:10:42,399
platform so that

315
00:10:42,399 --> 00:10:44,320
we could actually tell the users you

316
00:10:44,320 --> 00:10:45,680
should go update this

317
00:10:45,680 --> 00:10:48,959
or you should go add in your new program

318
00:10:48,959 --> 00:10:51,600
and we could kind of take the the data

319
00:10:51,600 --> 00:10:53,120
owning and the data

320
00:10:53,120 --> 00:10:56,320
um mining i guess off of our plates so

321
00:10:56,320 --> 00:10:58,000
we could focus on what we really want to

322
00:10:58,000 --> 00:11:00,000
do and automate the scanning and and try

323
00:11:00,000 --> 00:11:01,839
to build a better dashboard for the

324
00:11:01,839 --> 00:11:03,279
security risk

325
00:11:03,279 --> 00:11:05,040
so that's kind of how the self-service

326
00:11:05,040 --> 00:11:07,279
registration tool was born

327
00:11:07,279 --> 00:11:10,560
so how our tool looks right now is we

328
00:11:10,560 --> 00:11:13,760
ask the user to come in and add any and

329
00:11:13,760 --> 00:11:15,279
add the product info

330
00:11:15,279 --> 00:11:17,600
at this point they can add new versions

331
00:11:17,600 --> 00:11:18,560
for that product

332
00:11:18,560 --> 00:11:21,440
they can update anything um in regards

333
00:11:21,440 --> 00:11:22,640
to any of the information that you're

334
00:11:22,640 --> 00:11:25,120
about to see

335
00:11:25,120 --> 00:11:26,640
once we have the product info we have

336
00:11:26,640 --> 00:11:28,240
some required contacts

337
00:11:28,240 --> 00:11:31,279
so at this time we require owner

338
00:11:31,279 --> 00:11:34,320
and direct our bu vp sorry

339
00:11:34,320 --> 00:11:36,160
and then we have some security contacts

340
00:11:36,160 --> 00:11:37,600
that are required as well

341
00:11:37,600 --> 00:11:39,600
um our pcert team works really closely

342
00:11:39,600 --> 00:11:41,839
with us so there's a lot of pcert

343
00:11:41,839 --> 00:11:43,519
contacts that are required at this time

344
00:11:43,519 --> 00:11:45,839
as well

345
00:11:48,079 --> 00:11:50,639
the next step that we decided is

346
00:11:50,639 --> 00:11:52,480
probably the best way to move forward is

347
00:11:52,480 --> 00:11:52,959
to

348
00:11:52,959 --> 00:11:55,760
actually understand how everybody at the

349
00:11:55,760 --> 00:11:56,959
company is building

350
00:11:56,959 --> 00:11:59,440
their projects so we do have at nvidia a

351
00:11:59,440 --> 00:12:00,240
few

352
00:12:00,240 --> 00:12:03,680
um homegrown build tools we also use

353
00:12:03,680 --> 00:12:04,959
jenkins and we use

354
00:12:04,959 --> 00:12:08,399
gitlab so we wanted to actually

355
00:12:08,399 --> 00:12:10,560
understand all the different build tools

356
00:12:10,560 --> 00:12:11,680
that people are using

357
00:12:11,680 --> 00:12:14,399
as well as you know where we can find

358
00:12:14,399 --> 00:12:15,279
the artifacts

359
00:12:15,279 --> 00:12:17,519
once we can start doing some binary

360
00:12:17,519 --> 00:12:18,720
scanning as well

361
00:12:18,720 --> 00:12:20,399
so that's why we're asking for the the

362
00:12:20,399 --> 00:12:23,200
build information we also can refresh

363
00:12:23,200 --> 00:12:25,519
any of the source code locations that

364
00:12:25,519 --> 00:12:27,200
are found in the builds since we already

365
00:12:27,200 --> 00:12:28,160
have this information

366
00:12:28,160 --> 00:12:30,160
so once a week we can go through and

367
00:12:30,160 --> 00:12:31,680
actually make sure that all the source

368
00:12:31,680 --> 00:12:33,680
code locations that we have detected

369
00:12:33,680 --> 00:12:35,279
through the build information

370
00:12:35,279 --> 00:12:37,200
is updated and we're still up to date or

371
00:12:37,200 --> 00:12:38,720
we can contact the team

372
00:12:38,720 --> 00:12:40,720
and let them know that you know we've

373
00:12:40,720 --> 00:12:43,760
got some stale data

374
00:12:43,760 --> 00:12:46,000
at this point when we ask them for the

375
00:12:46,000 --> 00:12:47,279
build information we

376
00:12:47,279 --> 00:12:49,680
we always validate that we can access it

377
00:12:49,680 --> 00:12:50,959
so that's where you're seeing this check

378
00:12:50,959 --> 00:12:52,000
mark right here

379
00:12:52,000 --> 00:12:54,399
if we cannot access it we don't actually

380
00:12:54,399 --> 00:12:56,240
add it to our database at this time

381
00:12:56,240 --> 00:12:57,279
and we'll give them some warning

382
00:12:57,279 --> 00:12:59,279
messages that they can

383
00:12:59,279 --> 00:13:01,200
use to try to go figure out why we're

384
00:13:01,200 --> 00:13:03,279
not able to access it or maybe it's just

385
00:13:03,279 --> 00:13:07,760
a typo and they need to try again

386
00:13:07,760 --> 00:13:10,240
so when they click next after they enter

387
00:13:10,240 --> 00:13:11,600
their build information

388
00:13:11,600 --> 00:13:14,160
we create components in the database and

389
00:13:14,160 --> 00:13:15,279
we actually look

390
00:13:15,279 --> 00:13:18,240
at the build and grab the source code

391
00:13:18,240 --> 00:13:19,440
locations from that

392
00:13:19,440 --> 00:13:21,360
so that's what you're seeing down here

393
00:13:21,360 --> 00:13:22,800
we also allow

394
00:13:22,800 --> 00:13:25,120
teams to enter manually any source code

395
00:13:25,120 --> 00:13:25,920
locations

396
00:13:25,920 --> 00:13:27,680
in case maybe they're using a script for

397
00:13:27,680 --> 00:13:28,959
build that's necessary

398
00:13:28,959 --> 00:13:31,360
that we can't actually parse or if they

399
00:13:31,360 --> 00:13:32,000
don't

400
00:13:32,000 --> 00:13:35,839
have a build set up yet

401
00:13:36,320 --> 00:13:38,880
the next step is linking some services

402
00:13:38,880 --> 00:13:40,720
that as the security tools team we don't

403
00:13:40,720 --> 00:13:42,480
own at this time

404
00:13:42,480 --> 00:13:44,320
so in the case of check marks and

405
00:13:44,320 --> 00:13:46,320
coverity these have already

406
00:13:46,320 --> 00:13:48,079
these tools have already been set up by

407
00:13:48,079 --> 00:13:49,760
other um

408
00:13:49,760 --> 00:13:52,240
teams at nvidia and so we just need to

409
00:13:52,240 --> 00:13:54,079
get the mapping so that we can

410
00:13:54,079 --> 00:13:56,320
add the project information add all the

411
00:13:56,320 --> 00:13:59,519
scan data into our dashboards

412
00:13:59,519 --> 00:14:00,959
we also get check marks here but i

413
00:14:00,959 --> 00:14:02,800
didn't sorry i forgot to grab a

414
00:14:02,800 --> 00:14:05,040
screenshot of that one

415
00:14:05,040 --> 00:14:07,440
and that's it when they click next after

416
00:14:07,440 --> 00:14:08,240
that page

417
00:14:08,240 --> 00:14:10,000
they'll get this summary and it gives

418
00:14:10,000 --> 00:14:11,360
them a little bit more information

419
00:14:11,360 --> 00:14:14,320
about what they can do next we have in

420
00:14:14,320 --> 00:14:15,519
pipeline scanning

421
00:14:15,519 --> 00:14:18,800
as well so using the same

422
00:14:18,800 --> 00:14:21,040
scanning tools that we already use for

423
00:14:21,040 --> 00:14:21,839
open source

424
00:14:21,839 --> 00:14:24,240
vulnerability scanning we can actually

425
00:14:24,240 --> 00:14:25,120
add that to

426
00:14:25,120 --> 00:14:27,920
their pipeline so once they have

427
00:14:27,920 --> 00:14:29,600
finished registration and they reach out

428
00:14:29,600 --> 00:14:30,959
to us

429
00:14:30,959 --> 00:14:33,040
we can add that we're also working on

430
00:14:33,040 --> 00:14:34,079
trying to get some

431
00:14:34,079 --> 00:14:35,920
better documentation so that teams can

432
00:14:35,920 --> 00:14:37,680
add that without having to reach out to

433
00:14:37,680 --> 00:14:38,000
us

434
00:14:38,000 --> 00:14:40,000
but it is a newer thing since we're we

435
00:14:40,000 --> 00:14:41,120
are

436
00:14:41,120 --> 00:14:44,399
trying to get that into their pipeline

437
00:14:44,399 --> 00:14:46,560
after they register they also get a

438
00:14:46,560 --> 00:14:47,440
report

439
00:14:47,440 --> 00:14:50,800
link the next day and then d will go

440
00:14:50,800 --> 00:14:52,480
over some more of those notifications as

441
00:14:52,480 --> 00:14:53,120
well

442
00:14:53,120 --> 00:14:54,320
if there's anything that we're missing

443
00:14:54,320 --> 00:14:56,079
we also add that into these areas to

444
00:14:56,079 --> 00:14:56,800
improve

445
00:14:56,800 --> 00:14:58,399
and then they do get links to the

446
00:14:58,399 --> 00:15:00,079
dashboards at this point

447
00:15:00,079 --> 00:15:02,399
but uh they actually are not populated

448
00:15:02,399 --> 00:15:03,519
until a scan is done

449
00:15:03,519 --> 00:15:05,279
we wanted to make sure that they're not

450
00:15:05,279 --> 00:15:06,880
just sitting here during registration

451
00:15:06,880 --> 00:15:08,560
waiting for a scan to be done

452
00:15:08,560 --> 00:15:09,920
so they'll see the scan and the

453
00:15:09,920 --> 00:15:12,160
dashboards the next day

454
00:15:12,160 --> 00:15:13,440
and i'm going to go ahead and pass it on

455
00:15:13,440 --> 00:15:14,959
to d so she can go over how we're

456
00:15:14,959 --> 00:15:16,560
mapping all the data and kind of how our

457
00:15:16,560 --> 00:15:18,320
dashboards are turning out

458
00:15:18,320 --> 00:15:21,120
yeah thank you jessica so now you have

459
00:15:21,120 --> 00:15:21,680
50

460
00:15:21,680 --> 00:15:23,920
of your work done where you have a team

461
00:15:23,920 --> 00:15:25,199
that has registered using the

462
00:15:25,199 --> 00:15:26,639
registration portal

463
00:15:26,639 --> 00:15:29,120
about within 10 minutes so how do we get

464
00:15:29,120 --> 00:15:30,480
to the reports

465
00:15:30,480 --> 00:15:33,680
so you have all the data that they gave

466
00:15:33,680 --> 00:15:35,600
you at the registration in our portfolio

467
00:15:35,600 --> 00:15:36,399
database

468
00:15:36,399 --> 00:15:37,839
and then you have these different

469
00:15:37,839 --> 00:15:40,079
scanning services that you're linking to

470
00:15:40,079 --> 00:15:42,720
these programs that are registered

471
00:15:42,720 --> 00:15:44,800
so how do we get to the single pane view

472
00:15:44,800 --> 00:15:48,560
of having all the results consolidated

473
00:15:48,560 --> 00:15:50,720
and married to the hierarchy that they

474
00:15:50,720 --> 00:15:51,839
registered with

475
00:15:51,839 --> 00:15:53,680
so that question is answered by our

476
00:15:53,680 --> 00:15:55,360
reporting platform

477
00:15:55,360 --> 00:15:57,680
um in order to solve this we were

478
00:15:57,680 --> 00:15:59,279
thinking about different routes of how

479
00:15:59,279 --> 00:16:00,959
could we get this information

480
00:16:00,959 --> 00:16:04,240
into one single data source and at that

481
00:16:04,240 --> 00:16:05,759
point we thought that an elegant

482
00:16:05,759 --> 00:16:07,360
solution of doing this for us

483
00:16:07,360 --> 00:16:09,600
could be microservice architecture and

484
00:16:09,600 --> 00:16:11,360
the reason of moving to microservice

485
00:16:11,360 --> 00:16:12,880
architecture was

486
00:16:12,880 --> 00:16:15,920
uh primarily two reasons uh one is

487
00:16:15,920 --> 00:16:18,639
an ability for us to easily scale when a

488
00:16:18,639 --> 00:16:20,000
new tool is added

489
00:16:20,000 --> 00:16:21,920
so say for right now we have these three

490
00:16:21,920 --> 00:16:23,519
services that are being linked

491
00:16:23,519 --> 00:16:25,440
uh to the programs that are registered

492
00:16:25,440 --> 00:16:27,600
one is open source scanning service

493
00:16:27,600 --> 00:16:29,600
other is a static analysis service which

494
00:16:29,600 --> 00:16:31,519
was your check marks and coverity

495
00:16:31,519 --> 00:16:33,360
uh one could be a dynamic analysis

496
00:16:33,360 --> 00:16:35,199
service but say tomorrow we wanted to do

497
00:16:35,199 --> 00:16:36,959
a container emit scanning

498
00:16:36,959 --> 00:16:40,079
we wanted to be able to add uh a service

499
00:16:40,079 --> 00:16:41,680
that could grab data from

500
00:16:41,680 --> 00:16:44,240
that particular service without disper

501
00:16:44,240 --> 00:16:46,160
disturbing the core platform

502
00:16:46,160 --> 00:16:48,399
so what we have here is a bunch of

503
00:16:48,399 --> 00:16:50,160
network of microservices

504
00:16:50,160 --> 00:16:52,240
which are grabbing data from individual

505
00:16:52,240 --> 00:16:53,279
services

506
00:16:53,279 --> 00:16:55,199
marrying it with the information that

507
00:16:55,199 --> 00:16:56,560
the user gave us

508
00:16:56,560 --> 00:16:59,120
at registration and then kind of having

509
00:16:59,120 --> 00:16:59,600
it

510
00:16:59,600 --> 00:17:02,000
into our reporting platform at this

511
00:17:02,000 --> 00:17:02,880
point

512
00:17:02,880 --> 00:17:04,720
the reporting solution that we decided

513
00:17:04,720 --> 00:17:07,119
to use was elasticsearch kibana

514
00:17:07,119 --> 00:17:09,199
so elasticsearch being our backend data

515
00:17:09,199 --> 00:17:10,400
store and we

516
00:17:10,400 --> 00:17:13,520
are leveraging the kibana visualizations

517
00:17:13,520 --> 00:17:14,640
and dashboards

518
00:17:14,640 --> 00:17:16,799
so we have our services running nightly

519
00:17:16,799 --> 00:17:17,760
and refreshing

520
00:17:17,760 --> 00:17:19,760
all the data from the scan results for

521
00:17:19,760 --> 00:17:23,280
all the programs that are registered

522
00:17:25,199 --> 00:17:27,439
and this is the sample of the single

523
00:17:27,439 --> 00:17:28,319
pane dashboard

524
00:17:28,319 --> 00:17:30,080
it's much of a simplified version so

525
00:17:30,080 --> 00:17:32,080
that you can see it clearly

526
00:17:32,080 --> 00:17:34,640
so what you see on your left hand pane

527
00:17:34,640 --> 00:17:36,880
is the results from the open source

528
00:17:36,880 --> 00:17:38,000
software scan

529
00:17:38,000 --> 00:17:40,640
you can see at the top we have

530
00:17:40,640 --> 00:17:42,559
vulnerability is kind of divided into a

531
00:17:42,559 --> 00:17:43,280
pie chart

532
00:17:43,280 --> 00:17:46,640
so that the users can see which ones are

533
00:17:46,640 --> 00:17:48,400
critical which ones are medium

534
00:17:48,400 --> 00:17:51,120
and then we also have kind of divided

535
00:17:51,120 --> 00:17:53,440
them by the packages that that we found

536
00:17:53,440 --> 00:17:55,600
and on the right hand side you see that

537
00:17:55,600 --> 00:17:57,520
we have results from the static analysis

538
00:17:57,520 --> 00:18:00,640
tool so in this case it was check marks

539
00:18:00,640 --> 00:18:02,559
the idea here is that we should be able

540
00:18:02,559 --> 00:18:04,559
to add more panes as we introduce new

541
00:18:04,559 --> 00:18:05,440
services

542
00:18:05,440 --> 00:18:08,000
so like i said if we have a container

543
00:18:08,000 --> 00:18:08,880
image scanning

544
00:18:08,880 --> 00:18:10,799
we would just add more visualizations to

545
00:18:10,799 --> 00:18:13,120
this pane we don't want the product

546
00:18:13,120 --> 00:18:14,080
teams to be going

547
00:18:14,080 --> 00:18:16,480
and chasing down the different tools

548
00:18:16,480 --> 00:18:17,600
that we are using

549
00:18:17,600 --> 00:18:20,960
and kind of maintaining those ui so

550
00:18:20,960 --> 00:18:22,640
this is where they would come this is

551
00:18:22,640 --> 00:18:24,720
where project management would come

552
00:18:24,720 --> 00:18:26,640
and i want to talk a little bit about

553
00:18:26,640 --> 00:18:29,120
that here about the filtering

554
00:18:29,120 --> 00:18:30,960
we wanted to make sure that the reports

555
00:18:30,960 --> 00:18:33,200
are uh kind of dynamic

556
00:18:33,200 --> 00:18:36,080
in sense of say tomorrow we have a team

557
00:18:36,080 --> 00:18:38,080
that is planned to register

558
00:18:38,080 --> 00:18:40,640
uh we wanted the reporting to be

559
00:18:40,640 --> 00:18:42,559
automatic so we are using the dynamic

560
00:18:42,559 --> 00:18:43,360
filtering

561
00:18:43,360 --> 00:18:46,720
so that the email that goes out is

562
00:18:46,720 --> 00:18:50,400
always focusing on the report that is

563
00:18:50,400 --> 00:18:54,080
having the scan results for their team

564
00:18:54,799 --> 00:18:58,000
and this is the sample of um another

565
00:18:58,000 --> 00:18:59,520
kind of report that we have which is

566
00:18:59,520 --> 00:19:00,960
more of a details report

567
00:19:00,960 --> 00:19:03,039
which is targeted towards the engineer

568
00:19:03,039 --> 00:19:04,000
who would be taking

569
00:19:04,000 --> 00:19:06,880
a look at this so like i said all in one

570
00:19:06,880 --> 00:19:07,520
single pane

571
00:19:07,520 --> 00:19:09,760
at the top you can see the results from

572
00:19:09,760 --> 00:19:10,799
the oss scan

573
00:19:10,799 --> 00:19:12,640
which is the open source software and at

574
00:19:12,640 --> 00:19:14,720
the bottom you can see the check marks

575
00:19:14,720 --> 00:19:16,559
and the here they are able to kind of

576
00:19:16,559 --> 00:19:18,320
see which packages were found what are

577
00:19:18,320 --> 00:19:20,000
the vulnerabilities associated with the

578
00:19:20,000 --> 00:19:20,720
package

579
00:19:20,720 --> 00:19:22,720
what is the fix recommended by the tool

580
00:19:22,720 --> 00:19:23,760
that we use

581
00:19:23,760 --> 00:19:26,960
and same for check marks

582
00:19:28,080 --> 00:19:30,720
so now we have the reporting platform we

583
00:19:30,720 --> 00:19:32,559
have registration taken care of we have

584
00:19:32,559 --> 00:19:33,520
reporting

585
00:19:33,520 --> 00:19:34,960
but we still need to maintain that

586
00:19:34,960 --> 00:19:36,799
active communication with the user base

587
00:19:36,799 --> 00:19:37,360
that has

588
00:19:37,360 --> 00:19:39,679
um signed up with us so we have a

589
00:19:39,679 --> 00:19:41,440
notification platform so that we are

590
00:19:41,440 --> 00:19:43,440
more in control of our communication

591
00:19:43,440 --> 00:19:45,120
so i wanted to walk you guys through

592
00:19:45,120 --> 00:19:46,640
some of the notifications that we are

593
00:19:46,640 --> 00:19:47,760
sending

594
00:19:47,760 --> 00:19:49,600
um once the team registered we are

595
00:19:49,600 --> 00:19:52,160
sending an initial report the next day

596
00:19:52,160 --> 00:19:54,720
with the scans that have been linked to

597
00:19:54,720 --> 00:19:56,640
their registration

598
00:19:56,640 --> 00:19:59,200
we also want to be able to have a weekly

599
00:19:59,200 --> 00:19:59,760
email

600
00:19:59,760 --> 00:20:01,679
so that they can plan their sprints

601
00:20:01,679 --> 00:20:03,440
better so i know some teams are more

602
00:20:03,440 --> 00:20:05,440
proactive in fixing their issues but we

603
00:20:05,440 --> 00:20:07,200
thought that it would be good

604
00:20:07,200 --> 00:20:09,840
to remind the teams every monday that

605
00:20:09,840 --> 00:20:11,360
this is where you stand because our

606
00:20:11,360 --> 00:20:12,240
dashboards are

607
00:20:12,240 --> 00:20:14,320
updated nightly so there's nothing that

608
00:20:14,320 --> 00:20:15,760
is stopping from them to

609
00:20:15,760 --> 00:20:18,400
go to their dashboards anytime so we

610
00:20:18,400 --> 00:20:20,559
have that weekly report um

611
00:20:20,559 --> 00:20:22,880
then we have a new cve report so there

612
00:20:22,880 --> 00:20:24,400
are teams who are releasing

613
00:20:24,400 --> 00:20:27,760
uh software um almost every day in a ci

614
00:20:27,760 --> 00:20:29,120
cd fashion

615
00:20:29,120 --> 00:20:31,440
and once they have gone through that

616
00:20:31,440 --> 00:20:33,039
security process and they've released

617
00:20:33,039 --> 00:20:34,640
their software we wanted to let them

618
00:20:34,640 --> 00:20:35,679
know that it's not

619
00:20:35,679 --> 00:20:38,159
really over because new vulnerabilities

620
00:20:38,159 --> 00:20:40,000
are constantly discovered for the

621
00:20:40,000 --> 00:20:40,720
packages

622
00:20:40,720 --> 00:20:42,880
that we found so we want to be able to

623
00:20:42,880 --> 00:20:44,080
let them know that

624
00:20:44,080 --> 00:20:46,159
for this package that is in production

625
00:20:46,159 --> 00:20:48,000
there is a new vulnerability that

626
00:20:48,000 --> 00:20:49,840
was now discovered and you might want to

627
00:20:49,840 --> 00:20:51,840
take a look into that

628
00:20:51,840 --> 00:20:54,000
we also had a requirement from our pcr

629
00:20:54,000 --> 00:20:55,280
team where

630
00:20:55,280 --> 00:20:57,600
they have channels and pipelines where

631
00:20:57,600 --> 00:20:59,200
they are able to

632
00:20:59,200 --> 00:21:02,000
know about undisclosed vulnerability and

633
00:21:02,000 --> 00:21:03,360
we wanted to give them

634
00:21:03,360 --> 00:21:06,480
an ability to create a notification

635
00:21:06,480 --> 00:21:08,080
manually where we could let the teams

636
00:21:08,080 --> 00:21:10,080
know saying that we are aware about this

637
00:21:10,080 --> 00:21:11,520
vulnerability and these are the

638
00:21:11,520 --> 00:21:12,559
different teams

639
00:21:12,559 --> 00:21:14,720
and if you remember now inspect has that

640
00:21:14,720 --> 00:21:16,080
ability to find

641
00:21:16,080 --> 00:21:18,159
for this particular package say five

642
00:21:18,159 --> 00:21:20,080
teams within nvidia are using it so we

643
00:21:20,080 --> 00:21:22,480
have that package discovery alert

644
00:21:22,480 --> 00:21:24,559
and last but not the least uh kind of a

645
00:21:24,559 --> 00:21:27,200
portfolio health kind of a notification

646
00:21:27,200 --> 00:21:29,200
so we have all this beautiful inventory

647
00:21:29,200 --> 00:21:30,320
of builds

648
00:21:30,320 --> 00:21:32,559
repositories and static analysis

649
00:21:32,559 --> 00:21:34,799
projects that we have from teams

650
00:21:34,799 --> 00:21:37,440
so we nightly go and make sure that we

651
00:21:37,440 --> 00:21:39,280
still have the right required data we

652
00:21:39,280 --> 00:21:40,559
still have the contacts

653
00:21:40,559 --> 00:21:42,480
and we are kind of letting them know

654
00:21:42,480 --> 00:21:43,840
that these are the things that you still

655
00:21:43,840 --> 00:21:45,280
need to take care of looks like this

656
00:21:45,280 --> 00:21:47,039
repository was deleted

657
00:21:47,039 --> 00:21:48,880
looks like you have moved your branch

658
00:21:48,880 --> 00:21:50,640
and you need to go back to registration

659
00:21:50,640 --> 00:21:53,600
and update that info

660
00:21:54,880 --> 00:21:56,720
so you have your reporting you have your

661
00:21:56,720 --> 00:21:58,640
notification but how do you really make

662
00:21:58,640 --> 00:21:59,120
sure

663
00:21:59,120 --> 00:22:01,679
that the issues that you are telling

664
00:22:01,679 --> 00:22:02,640
them about

665
00:22:02,640 --> 00:22:05,120
are remediated what is the policy for

666
00:22:05,120 --> 00:22:06,159
enforcing it

667
00:22:06,159 --> 00:22:08,960
so we wanted to kind of uh do this issue

668
00:22:08,960 --> 00:22:10,400
tracking service or

669
00:22:10,400 --> 00:22:12,480
issue tracking platform and here are

670
00:22:12,480 --> 00:22:13,840
some of the things that we needed to

671
00:22:13,840 --> 00:22:16,159
take care before we do that

672
00:22:16,159 --> 00:22:17,919
so when we talk to the product teams

673
00:22:17,919 --> 00:22:20,240
about us being able to create

674
00:22:20,240 --> 00:22:23,440
issues into their preferred tool uh some

675
00:22:23,440 --> 00:22:24,559
of the things that we

676
00:22:24,559 --> 00:22:26,240
came to know is that different product

677
00:22:26,240 --> 00:22:27,919
teams have different policies

678
00:22:27,919 --> 00:22:29,919
so we wanted to make sure that our issue

679
00:22:29,919 --> 00:22:32,640
management platform is able to honor

680
00:22:32,640 --> 00:22:34,640
something like a bring your own policy

681
00:22:34,640 --> 00:22:36,000
because different teams

682
00:22:36,000 --> 00:22:37,679
uh work with different security

683
00:22:37,679 --> 00:22:40,320
architects who know more about

684
00:22:40,320 --> 00:22:42,320
the use cases that are relevant to their

685
00:22:42,320 --> 00:22:43,520
business scenarios

686
00:22:43,520 --> 00:22:44,960
so they could have different policies

687
00:22:44,960 --> 00:22:46,480
and we wanted to make sure that the

688
00:22:46,480 --> 00:22:48,240
issue tracking system is aware about

689
00:22:48,240 --> 00:22:50,799
those policies

690
00:22:50,799 --> 00:22:53,200
another thing we wanted to take care was

691
00:22:53,200 --> 00:22:55,200
a deduplication of the bugs before we

692
00:22:55,200 --> 00:22:56,320
create them

693
00:22:56,320 --> 00:22:57,840
nobody wants to get up in the morning

694
00:22:57,840 --> 00:22:59,360
and see thousands of bucks created in

695
00:22:59,360 --> 00:23:00,080
their jira

696
00:23:00,080 --> 00:23:01,520
so we wanted to make sure that we work

697
00:23:01,520 --> 00:23:03,760
with our pc team closely to make sure

698
00:23:03,760 --> 00:23:05,600
that we create bugs that are more

699
00:23:05,600 --> 00:23:07,280
actionable

700
00:23:07,280 --> 00:23:09,360
so for example one of the metrics by

701
00:23:09,360 --> 00:23:11,200
which we are deciding to open bugs

702
00:23:11,200 --> 00:23:13,440
is by a package and vulnerability

703
00:23:13,440 --> 00:23:14,640
combination

704
00:23:14,640 --> 00:23:17,280
so that we don't open thousands of

705
00:23:17,280 --> 00:23:18,559
issues and we

706
00:23:18,559 --> 00:23:21,280
give we try to give optimal information

707
00:23:21,280 --> 00:23:24,960
in that one issue that is created

708
00:23:26,159 --> 00:23:28,320
we also wanted to kind of look at the

709
00:23:28,320 --> 00:23:29,919
nuance of prioritization

710
00:23:29,919 --> 00:23:31,520
which is a little different from

711
00:23:31,520 --> 00:23:34,480
severity of a particular vulnerability

712
00:23:34,480 --> 00:23:37,919
we wanted to make sure that um the issue

713
00:23:37,919 --> 00:23:38,720
management

714
00:23:38,720 --> 00:23:42,880
um platform um kind of understands

715
00:23:42,880 --> 00:23:46,400
that uh hi i'm gonna give you an example

716
00:23:46,400 --> 00:23:48,960
a high of a vulnerability which has

717
00:23:48,960 --> 00:23:50,960
severe high severity doesn't mean that

718
00:23:50,960 --> 00:23:51,279
it

719
00:23:51,279 --> 00:23:53,279
always necessarily translates into high

720
00:23:53,279 --> 00:23:54,320
priority

721
00:23:54,320 --> 00:23:56,960
for example there could be a source code

722
00:23:56,960 --> 00:23:59,520
within nvidia which is more of a

723
00:23:59,520 --> 00:24:01,840
core component which is shared by more

724
00:24:01,840 --> 00:24:02,799
than 10

725
00:24:02,799 --> 00:24:04,480
business units which are critical to the

726
00:24:04,480 --> 00:24:06,880
business and if a vulnerability is found

727
00:24:06,880 --> 00:24:08,559
associated to that package

728
00:24:08,559 --> 00:24:10,240
we wanted to make sure that the issue

729
00:24:10,240 --> 00:24:12,240
management is kind of customizing the

730
00:24:12,240 --> 00:24:15,440
priority on that issue

731
00:24:15,440 --> 00:24:17,120
and last but not the least the most

732
00:24:17,120 --> 00:24:19,679
requested feature is allow listing

733
00:24:19,679 --> 00:24:22,240
uh we wanted to make sure that maybe in

734
00:24:22,240 --> 00:24:23,039
pipeline

735
00:24:23,039 --> 00:24:25,279
and this is more actually critical in

736
00:24:25,279 --> 00:24:26,080
pipeline

737
00:24:26,080 --> 00:24:28,400
or maybe with our nightly scans we are

738
00:24:28,400 --> 00:24:30,320
always allowing our teams to kind of

739
00:24:30,320 --> 00:24:31,440
make progress

740
00:24:31,440 --> 00:24:33,360
by having a feature where they could

741
00:24:33,360 --> 00:24:35,360
come in and say that for this particular

742
00:24:35,360 --> 00:24:35,919
package

743
00:24:35,919 --> 00:24:38,080
or for this particular vulnerability we

744
00:24:38,080 --> 00:24:39,279
are aware about it

745
00:24:39,279 --> 00:24:41,840
but it's associated with a test platform

746
00:24:41,840 --> 00:24:42,559
or

747
00:24:42,559 --> 00:24:45,360
it is related to a transitive dependency

748
00:24:45,360 --> 00:24:47,520
that we don't have really control on

749
00:24:47,520 --> 00:24:50,080
um or we are very early in our stages

750
00:24:50,080 --> 00:24:51,840
and and we want to fix it later so we

751
00:24:51,840 --> 00:24:52,559
want to be

752
00:24:52,559 --> 00:24:55,039
able to have our issue management

753
00:24:55,039 --> 00:24:55,840
platform

754
00:24:55,840 --> 00:24:57,600
a kind of allow listing feature that

755
00:24:57,600 --> 00:25:01,840
would let them make progress

756
00:25:01,919 --> 00:25:04,480
and calculating risk now that you have

757
00:25:04,480 --> 00:25:05,279
reports

758
00:25:05,279 --> 00:25:08,720
notification issue tracking the final

759
00:25:08,720 --> 00:25:10,640
part of goal like we say we want to be

760
00:25:10,640 --> 00:25:12,320
able to kind of calculate

761
00:25:12,320 --> 00:25:15,360
a risk for a registered program with

762
00:25:15,360 --> 00:25:17,360
inspect

763
00:25:17,360 --> 00:25:19,440
so here are some of the things that we

764
00:25:19,440 --> 00:25:22,480
are still in the process of ironing out

765
00:25:22,480 --> 00:25:25,600
before we can get to a place where we

766
00:25:25,600 --> 00:25:26,799
have an objective

767
00:25:26,799 --> 00:25:29,600
risk associated with every program so

768
00:25:29,600 --> 00:25:30,799
one of the things that we need to

769
00:25:30,799 --> 00:25:31,520
consider

770
00:25:31,520 --> 00:25:33,600
is that the risk that we associate is

771
00:25:33,600 --> 00:25:36,640
normalized and what i mean by that is

772
00:25:36,640 --> 00:25:38,559
different programs or different business

773
00:25:38,559 --> 00:25:39,679
units

774
00:25:39,679 --> 00:25:42,080
can be at a different stage with inspect

775
00:25:42,080 --> 00:25:43,120
registration

776
00:25:43,120 --> 00:25:45,120
so some of the teams could be coming in

777
00:25:45,120 --> 00:25:46,880
and have 90 percent of their code

778
00:25:46,880 --> 00:25:48,400
register or even 100

779
00:25:48,400 --> 00:25:50,320
and some of the teams might not be ready

780
00:25:50,320 --> 00:25:52,720
yet and have about 10 percent of their

781
00:25:52,720 --> 00:25:53,679
code registered

782
00:25:53,679 --> 00:25:55,600
so when we calculate a risk into our

783
00:25:55,600 --> 00:25:57,760
report dashboard we want to make sure

784
00:25:57,760 --> 00:26:00,640
that we account for that factor we want

785
00:26:00,640 --> 00:26:02,640
to make sure that when we calculate risk

786
00:26:02,640 --> 00:26:05,120
it multifaceted and what i mean by that

787
00:26:05,120 --> 00:26:07,840
is the severity versus priority

788
00:26:07,840 --> 00:26:09,440
discussion that we just had

789
00:26:09,440 --> 00:26:11,520
with the issue we want to make sure that

790
00:26:11,520 --> 00:26:12,880
we are accounting for

791
00:26:12,880 --> 00:26:16,480
custom policies and um shared code

792
00:26:16,480 --> 00:26:17,919
before we kind of

793
00:26:17,919 --> 00:26:20,880
assess the risk for a particular program

794
00:26:20,880 --> 00:26:22,960
we want to be able to take a look at

795
00:26:22,960 --> 00:26:24,400
the vulnerabilities when they were

796
00:26:24,400 --> 00:26:26,400
disclosed how long have they been

797
00:26:26,400 --> 00:26:27,440
sitting into their

798
00:26:27,440 --> 00:26:29,679
reporting platform and we also want to

799
00:26:29,679 --> 00:26:31,120
be able to know that

800
00:26:31,120 --> 00:26:34,559
a particular vulnerability can be

801
00:26:34,559 --> 00:26:38,000
more public and it could uh be more

802
00:26:38,000 --> 00:26:40,640
critical in terms of our pizza than

803
00:26:40,640 --> 00:26:41,279
others

804
00:26:41,279 --> 00:26:43,440
and the severity can be like a plain

805
00:26:43,440 --> 00:26:45,360
measure to us as that

806
00:26:45,360 --> 00:26:47,200
and last but not the least we want to be

807
00:26:47,200 --> 00:26:49,120
able to get to a place like i said where

808
00:26:49,120 --> 00:26:49,600
we want

809
00:26:49,600 --> 00:26:52,240
we have an objective risk associated so

810
00:26:52,240 --> 00:26:53,600
we have been thinking

811
00:26:53,600 --> 00:26:56,000
of ideas like a scorecard which would be

812
00:26:56,000 --> 00:26:56,960
a number

813
00:26:56,960 --> 00:26:58,880
like a percentage number between 0 to

814
00:26:58,880 --> 00:27:01,840
100 that we could assign with a program

815
00:27:01,840 --> 00:27:03,840
but at the same time it should be

816
00:27:03,840 --> 00:27:06,559
explainable or it should be measurable

817
00:27:06,559 --> 00:27:09,919
so our project management as well as our

818
00:27:09,919 --> 00:27:10,720
teams can

819
00:27:10,720 --> 00:27:13,039
clearly assess what is the risk

820
00:27:13,039 --> 00:27:15,679
associated with that program

821
00:27:15,679 --> 00:27:19,200
so at this point i would really like to

822
00:27:19,200 --> 00:27:20,960
open it up to you guys if you want to

823
00:27:20,960 --> 00:27:23,840
share what are the steps you are taking

824
00:27:23,840 --> 00:27:25,919
to get to that pot of gold which is a

825
00:27:25,919 --> 00:27:27,600
risk associated to a program

826
00:27:27,600 --> 00:27:30,000
in your company or if you have other

827
00:27:30,000 --> 00:27:30,880
questions we would

828
00:27:30,880 --> 00:27:34,240
love to take them as well at this time

829
00:27:34,240 --> 00:27:37,520
thank you we have a few minutes i think

830
00:27:37,520 --> 00:27:39,440
and i will try to run through as many

831
00:27:39,440 --> 00:27:41,679
questions as we possibly can

832
00:27:41,679 --> 00:27:44,559
so first question would you think a bank

833
00:27:44,559 --> 00:27:45,760
could use

834
00:27:45,760 --> 00:27:47,520
pcred approach in general and your

835
00:27:47,520 --> 00:27:49,279
specific approach instead of a normal

836
00:27:49,279 --> 00:27:50,080
c-cert

837
00:27:50,080 --> 00:27:53,200
since they usually have many products

838
00:27:53,200 --> 00:27:56,559
for example online services

839
00:27:57,679 --> 00:27:59,679
i am not sure about the difference

840
00:27:59,679 --> 00:28:01,279
between c-cert and p-cert if you would

841
00:28:01,279 --> 00:28:03,120
be able to go all the way away from cser

842
00:28:03,120 --> 00:28:04,320
but i definitely think that you could

843
00:28:04,320 --> 00:28:06,000
organize it in a way that

844
00:28:06,000 --> 00:28:09,200
um maybe allow the products of the bank

845
00:28:09,200 --> 00:28:10,799
to be cataloged and then have

846
00:28:10,799 --> 00:28:13,200
dashboards for them in this way do you

847
00:28:13,200 --> 00:28:15,039
have any other thoughts on that dee

848
00:28:15,039 --> 00:28:18,399
yeah no that makes sense i think uh

849
00:28:18,399 --> 00:28:19,600
whatever we are doing with our

850
00:28:19,600 --> 00:28:21,600
automation in terms of different steps

851
00:28:21,600 --> 00:28:22,640
of registering

852
00:28:22,640 --> 00:28:24,159
reporting issue management and

853
00:28:24,159 --> 00:28:26,480
notification that applies to csr as well

854
00:28:26,480 --> 00:28:29,760
not just pcert okay

855
00:28:29,760 --> 00:28:32,000
so next question i'm just going to fire

856
00:28:32,000 --> 00:28:33,200
these at you so

857
00:28:33,200 --> 00:28:35,840
how do you handle how do you handle

858
00:28:35,840 --> 00:28:37,440
feedback from your teams from the

859
00:28:37,440 --> 00:28:38,799
reports they receive

860
00:28:38,799 --> 00:28:40,480
i'm thinking especially about false

861
00:28:40,480 --> 00:28:42,399
positives and issues

862
00:28:42,399 --> 00:28:45,039
risk acceptance is it just some kind of

863
00:28:45,039 --> 00:28:45,600
filter

864
00:28:45,600 --> 00:28:48,799
on off or something more so it can also

865
00:28:48,799 --> 00:28:51,760
benefit other teams

866
00:28:51,919 --> 00:28:55,200
yeah that's kind of i think the biggest

867
00:28:55,200 --> 00:28:56,799
thing that we're dealing with manually

868
00:28:56,799 --> 00:28:58,399
right now um

869
00:28:58,399 --> 00:29:01,360
so because we have over a hundred and

870
00:29:01,360 --> 00:29:03,600
did you say 160 now products yeah we

871
00:29:03,600 --> 00:29:04,480
have registered

872
00:29:04,480 --> 00:29:06,640
yeah so the amount of source code that

873
00:29:06,640 --> 00:29:07,520
we're scanning

874
00:29:07,520 --> 00:29:10,159
with the tool um compared to the number

875
00:29:10,159 --> 00:29:12,720
of people that we have on the security

876
00:29:12,720 --> 00:29:13,679
tools team

877
00:29:13,679 --> 00:29:15,520
we can't really manually go through all

878
00:29:15,520 --> 00:29:17,760
of them ourselves so

879
00:29:17,760 --> 00:29:19,679
um we were trying to come up with ideas

880
00:29:19,679 --> 00:29:20,799
of how we could build

881
00:29:20,799 --> 00:29:23,440
that sort of thing into the tool maybe

882
00:29:23,440 --> 00:29:25,279
have a way where somebody could come in

883
00:29:25,279 --> 00:29:26,480
and give us like

884
00:29:26,480 --> 00:29:29,039
um you know a rating on how well they

885
00:29:29,039 --> 00:29:30,640
think that the tool did and we would be

886
00:29:30,640 --> 00:29:32,720
able to take that back and actually

887
00:29:32,720 --> 00:29:35,279
use some machine learning to help our

888
00:29:35,279 --> 00:29:36,000
reports

889
00:29:36,000 --> 00:29:38,480
aggregate things better any other

890
00:29:38,480 --> 00:29:40,880
thoughts on that dee yeah no and some of

891
00:29:40,880 --> 00:29:42,240
the tools that we work with

892
00:29:42,240 --> 00:29:45,520
have a way that you can um tell

893
00:29:45,520 --> 00:29:47,440
or remediate a particular vulnerability

894
00:29:47,440 --> 00:29:49,279
by giving them more information about

895
00:29:49,279 --> 00:29:51,120
the version that the user is directly

896
00:29:51,120 --> 00:29:52,399
telling you rather than the one they

897
00:29:52,399 --> 00:29:53,120
discovered

898
00:29:53,120 --> 00:29:54,880
so we are trying to come up with a way

899
00:29:54,880 --> 00:29:57,200
that we integrate that into our ui

900
00:29:57,200 --> 00:29:59,200
by making api calls to the underlying

901
00:29:59,200 --> 00:30:00,720
tools

902
00:30:00,720 --> 00:30:02,559
yeah i think our first approach really

903
00:30:02,559 --> 00:30:04,720
is this allow listing so having

904
00:30:04,720 --> 00:30:07,679
teams open up exceptions with the pcr

905
00:30:07,679 --> 00:30:08,480
team so that

906
00:30:08,480 --> 00:30:10,720
we can still track those but then have a

907
00:30:10,720 --> 00:30:14,000
way to filter those out

908
00:30:14,159 --> 00:30:15,760
thank you next question how do you

909
00:30:15,760 --> 00:30:18,480
identify false positives in scan reports

910
00:30:18,480 --> 00:30:22,559
before showing them in your dashboard

911
00:30:22,559 --> 00:30:24,640
i think that really relates probably to

912
00:30:24,640 --> 00:30:25,760
the last one as well

913
00:30:25,760 --> 00:30:27,840
at this point we don't have a great way

914
00:30:27,840 --> 00:30:29,520
to identify false positives

915
00:30:29,520 --> 00:30:32,880
so it's kind of on the team to go and

916
00:30:32,880 --> 00:30:34,960
tell us what is a false positive so we

917
00:30:34,960 --> 00:30:36,080
can dig into that more

918
00:30:36,080 --> 00:30:37,120
because there's no way that we can

919
00:30:37,120 --> 00:30:39,039
understand all of the source code

920
00:30:39,039 --> 00:30:39,919
unfortunately

921
00:30:39,919 --> 00:30:42,640
at the company yeah i think developers

922
00:30:42,640 --> 00:30:44,159
know about their code the best so we

923
00:30:44,159 --> 00:30:45,760
definitely need to partner with product

924
00:30:45,760 --> 00:30:46,320
teams

925
00:30:46,320 --> 00:30:48,080
although one of the ideas that jessica

926
00:30:48,080 --> 00:30:49,760
and i have talked about is probably

927
00:30:49,760 --> 00:30:51,360
cross referencing between different

928
00:30:51,360 --> 00:30:52,000
tools

929
00:30:52,000 --> 00:30:53,760
so we could potentially build a system

930
00:30:53,760 --> 00:30:55,600
where the source code is scanned by

931
00:30:55,600 --> 00:30:57,919
multiple tools and then we try to do a

932
00:30:57,919 --> 00:30:58,559
union

933
00:30:58,559 --> 00:31:00,559
of there is a intersection of result to

934
00:31:00,559 --> 00:31:02,159
kind of get closer

935
00:31:02,159 --> 00:31:06,480
to reducing the false positives

936
00:31:06,480 --> 00:31:09,919
okay and two more questions i'm going to

937
00:31:09,919 --> 00:31:11,440
try to squeeze in so

938
00:31:11,440 --> 00:31:13,200
uh have you developed criteria to

939
00:31:13,200 --> 00:31:15,679
semi-automate this prioritization or is

940
00:31:15,679 --> 00:31:19,840
this left for manual analysis

941
00:31:20,159 --> 00:31:23,600
uh right now um the way

942
00:31:23,600 --> 00:31:26,240
this is working is like we said we are

943
00:31:26,240 --> 00:31:28,080
taking a lot of feedback manually from

944
00:31:28,080 --> 00:31:29,440
the product teams

945
00:31:29,440 --> 00:31:32,320
uh but the way um this could be

946
00:31:32,320 --> 00:31:33,120
automated

947
00:31:33,120 --> 00:31:35,360
is uh by having features by which we

948
00:31:35,360 --> 00:31:36,480
would allow

949
00:31:36,480 --> 00:31:38,320
uh something like bring your own policy

950
00:31:38,320 --> 00:31:40,080
which is currently under development

951
00:31:40,080 --> 00:31:42,880
so that what we couldn't do is um for a

952
00:31:42,880 --> 00:31:44,399
specific team they could define their

953
00:31:44,399 --> 00:31:46,000
policy by working with their security

954
00:31:46,000 --> 00:31:48,080
architect and our platform would just

955
00:31:48,080 --> 00:31:49,200
ingest that

956
00:31:49,200 --> 00:31:51,679
and then that way the priority that our

957
00:31:51,679 --> 00:31:53,120
issue tracking

958
00:31:53,120 --> 00:31:56,159
system is aware about is more custom to

959
00:31:56,159 --> 00:31:57,600
what they bring in

960
00:31:57,600 --> 00:32:00,480
anything more jessica i think at this

961
00:32:00,480 --> 00:32:02,480
point it is a manual analysis

962
00:32:02,480 --> 00:32:04,880
um but yes we we're hoping to get to it

963
00:32:04,880 --> 00:32:06,880
some sort of semi-automated i also think

964
00:32:06,880 --> 00:32:07,440
that

965
00:32:07,440 --> 00:32:09,840
knowing which source code locations or

966
00:32:09,840 --> 00:32:11,919
repositories are used in the most places

967
00:32:11,919 --> 00:32:13,679
and the components that are used in the

968
00:32:13,679 --> 00:32:15,360
most products will give us

969
00:32:15,360 --> 00:32:18,159
kind of a best roi so we could kind of

970
00:32:18,159 --> 00:32:19,919
drive those down first

971
00:32:19,919 --> 00:32:21,360
so that would be a pretty easy way to

972
00:32:21,360 --> 00:32:22,720
automate because we could just easily

973
00:32:22,720 --> 00:32:25,200
see that

974
00:32:25,600 --> 00:32:29,519
okay so final question so this is a very

975
00:32:29,519 --> 00:32:31,760
impressive process and platform are

976
00:32:31,760 --> 00:32:33,360
there any plans to make it open source

977
00:32:33,360 --> 00:32:34,720
which might be difficult but

978
00:32:34,720 --> 00:32:37,039
overall the platform is great so hoping

979
00:32:37,039 --> 00:32:37,840
for it

980
00:32:37,840 --> 00:32:40,399
well thank you at this point i don't

981
00:32:40,399 --> 00:32:41,360
think there's been

982
00:32:41,360 --> 00:32:44,559
plans to make it open source um

983
00:32:44,559 --> 00:32:47,840
but who knows there have been

984
00:32:47,840 --> 00:32:49,200
discussions to offer it

985
00:32:49,200 --> 00:32:51,600
uh outside of nvidia for other companies

986
00:32:51,600 --> 00:32:52,320
but

987
00:32:52,320 --> 00:32:53,840
uh there haven't been talks about making

988
00:32:53,840 --> 00:32:55,360
it open source

989
00:32:55,360 --> 00:32:58,480
yeah okay so i think

990
00:32:58,480 --> 00:33:01,360
um we're three minutes over so i think

991
00:33:01,360 --> 00:33:02,559
we will

992
00:33:02,559 --> 00:33:06,080
hand it over um hand it over no we land

993
00:33:06,080 --> 00:33:07,600
this session

994
00:33:07,600 --> 00:33:09,919
so thank you dee and jessica for this

995
00:33:09,919 --> 00:33:11,679
wonderful presentation and thank you to

996
00:33:11,679 --> 00:33:12,880
all the participants for

997
00:33:12,880 --> 00:33:14,480
an engaging session with all of your

998
00:33:14,480 --> 00:33:16,640
questions um thank you all so this is

999
00:33:16,640 --> 00:33:17,279
the

1000
00:33:17,279 --> 00:33:19,200
last um i think breakout session of the

1001
00:33:19,200 --> 00:33:20,399
day and

1002
00:33:20,399 --> 00:33:23,279
the keynote will be next in about 20

1003
00:33:23,279 --> 00:33:23,679
minutes

1004
00:33:23,679 --> 00:33:25,919
so please um i'll take a break grab a

1005
00:33:25,919 --> 00:33:26,799
coffee

1006
00:33:26,799 --> 00:33:28,799
and join the keynote and i hope you have

1007
00:33:28,799 --> 00:33:30,399
a wonderful rest of your day

1008
00:33:30,399 --> 00:33:32,640
and a wonderful first conference so

1009
00:33:32,640 --> 00:33:33,919
thanks again dee and jessica and

1010
00:33:33,919 --> 00:33:35,360
everybody that came

1011
00:33:35,360 --> 00:33:39,840
thank you bye

