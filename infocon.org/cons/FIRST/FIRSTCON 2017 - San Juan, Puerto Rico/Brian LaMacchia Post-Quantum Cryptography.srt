1
00:00:00,469 --> 00:00:03,620
speaking of looking back I remember

2
00:00:03,620 --> 00:00:09,330
maybe 15 years ago Microsoft was still

3
00:00:09,330 --> 00:00:13,830
relatively inward focused I guess in the

4
00:00:13,830 --> 00:00:15,960
security arena and it took a little bit

5
00:00:15,960 --> 00:00:19,380
of time before they basically sacrificed

6
00:00:19,380 --> 00:00:21,660
a young engineer by the name of Rob

7
00:00:21,660 --> 00:00:23,460
Henson by sending him to a first

8
00:00:23,460 --> 00:00:25,260
conference and the first time a

9
00:00:25,260 --> 00:00:27,359
Microsoft security guy showed up at a

10
00:00:27,359 --> 00:00:30,630
first conference he was easily the most

11
00:00:30,630 --> 00:00:33,600
popular person in both good and bad ways

12
00:00:33,600 --> 00:00:39,059
at the conference but Rob was amazing he

13
00:00:39,059 --> 00:00:41,040
took all of it and was happy to work

14
00:00:41,040 --> 00:00:44,489
with everybody in bringing Microsoft

15
00:00:44,489 --> 00:00:46,680
into part of this community and as a

16
00:00:46,680 --> 00:00:49,469
result the nsrc has been a huge

17
00:00:49,469 --> 00:00:52,079
proponent and and and sponsor and

18
00:00:52,079 --> 00:00:54,180
supporter and in any possible way of

19
00:00:54,180 --> 00:00:57,090
first conferences it's interesting

20
00:00:57,090 --> 00:00:59,550
because our keynote speaker Brian

21
00:00:59,550 --> 00:01:00,510
LaMacchia

22
00:01:00,510 --> 00:01:02,879
works in a different part of Microsoft a

23
00:01:02,879 --> 00:01:04,619
crypto part and obviously he knows the

24
00:01:04,619 --> 00:01:07,409
nsrc folks but it when first reached out

25
00:01:07,409 --> 00:01:09,090
to him and asked it he'd be interested

26
00:01:09,090 --> 00:01:11,010
in doing a keynote he didn't know al

27
00:01:11,010 --> 00:01:12,750
awful lot about first being on the Crypt

28
00:01:12,750 --> 00:01:14,850
both side so he reached out to the nsrc

29
00:01:14,850 --> 00:01:16,979
and said you know anything about these

30
00:01:16,979 --> 00:01:19,770
guys and obviously the endorsement was

31
00:01:19,770 --> 00:01:21,540
good because we are very fortunate they

32
00:01:21,540 --> 00:01:25,110
have Brian here to talk to us as I said

33
00:01:25,110 --> 00:01:28,110
he is the director of security of the

34
00:01:28,110 --> 00:01:29,970
security and cryptography group within

35
00:01:29,970 --> 00:01:32,759
the Microsoft Research arm he's had

36
00:01:32,759 --> 00:01:35,280
various roles at Microsoft for about 20

37
00:01:35,280 --> 00:01:35,759
years

38
00:01:35,759 --> 00:01:39,060
security architect he's part in industry

39
00:01:39,060 --> 00:01:40,850
he's part of the crypto review board

40
00:01:40,850 --> 00:01:43,740
involved of another things there he's an

41
00:01:43,740 --> 00:01:47,189
adjunct professor at the at Indiana

42
00:01:47,189 --> 00:01:49,350
University and I promise I did not know

43
00:01:49,350 --> 00:01:50,820
that when I chose to warm my Purdue

44
00:01:50,820 --> 00:01:54,329
University shirt today and he is also

45
00:01:54,329 --> 00:01:56,369
the treasurer of the International

46
00:01:56,369 --> 00:01:58,439
Association of Cryptologic research and

47
00:01:58,439 --> 00:02:00,689
I am very proud and happy to have him

48
00:02:00,689 --> 00:02:03,810
here today so Brian LaMacchia thank you

49
00:02:03,810 --> 00:02:09,530
[Applause]

50
00:02:09,530 --> 00:02:12,140
thank you all

51
00:02:12,140 --> 00:02:21,690
ok the laptop decided to rotate yeah can

52
00:02:21,690 --> 00:02:24,750
you guys see that this is going to be

53
00:02:24,750 --> 00:02:29,819
really interesting here hold on a sec it

54
00:02:29,819 --> 00:02:32,940
went into portrait mode so I got a this

55
00:02:32,940 --> 00:02:36,840
is not my laptop so hi I'm Brian

56
00:02:36,840 --> 00:02:39,269
while the laptop is coming back up here

57
00:02:39,269 --> 00:02:41,060
for a minute

58
00:02:41,060 --> 00:02:44,099
hopefully ok

59
00:02:44,099 --> 00:02:45,540
tech support may want to come up and

60
00:02:45,540 --> 00:02:47,280
like rotate this back because of course

61
00:02:47,280 --> 00:02:48,989
Windows 10 has decided that I'm looking

62
00:02:48,989 --> 00:02:51,930
at this the wrong way so let me start by

63
00:02:51,930 --> 00:02:53,489
saying thank you very much it's a

64
00:02:53,489 --> 00:02:57,239
pleasure to be here as they said yeah I

65
00:02:57,239 --> 00:02:58,560
run the security and crypto group at

66
00:02:58,560 --> 00:03:01,140
Microsoft Research where we focus on

67
00:03:01,140 --> 00:03:04,530
trying to both do long term research for

68
00:03:04,530 --> 00:03:06,360
the needs of the company out 10-15 years

69
00:03:06,360 --> 00:03:08,989
as well as near-term sorts of things

70
00:03:08,989 --> 00:03:11,579
I've been asked here in continuing the

71
00:03:11,579 --> 00:03:14,160
theme of keynotes of the morning

72
00:03:14,160 --> 00:03:16,410
keynotes I'm here to talk to you about

73
00:03:16,410 --> 00:03:18,420
how we're going to make sticks and taxi

74
00:03:18,420 --> 00:03:20,489
quantum resistant and we'll spend the

75
00:03:20,489 --> 00:03:24,269
next hour doing that actually assuming

76
00:03:24,269 --> 00:03:26,010
that my slides come up we'll actually

77
00:03:26,010 --> 00:03:27,720
talk about more general issues in

78
00:03:27,720 --> 00:03:29,090
quantum resistant cryptography

79
00:03:29,090 --> 00:03:34,139
how can you throw it in the landscape

80
00:03:34,139 --> 00:03:35,610
mode

81
00:03:35,610 --> 00:03:39,010
okay so let me let me try to I don't

82
00:03:39,010 --> 00:03:44,560
have my slider so um it went into

83
00:03:44,560 --> 00:03:49,840
portrait mode yeah yeah take the take

84
00:03:49,840 --> 00:03:59,650
the landscape but yeah you got them what

85
00:03:59,650 --> 00:04:04,230
what do you want me to ctrl alt down

86
00:04:04,230 --> 00:04:05,530
there

87
00:04:05,530 --> 00:04:11,140
well now it's upside down okay I think

88
00:04:11,140 --> 00:04:15,880
we got it back thank you you can tell

89
00:04:15,880 --> 00:04:20,110
I'm in research at MSR okay but I will

90
00:04:20,110 --> 00:04:23,290
send that over to the office team there

91
00:04:23,290 --> 00:04:25,900
we go have I and I got a clicker here so

92
00:04:25,900 --> 00:04:27,960
this works

93
00:04:27,960 --> 00:04:32,110
can I Drive off of that okay

94
00:04:32,110 --> 00:04:33,220
you're going to drive I'll Drive it

95
00:04:33,220 --> 00:04:41,460
manually that's fine there we go yay

96
00:04:41,460 --> 00:04:46,030
okay what's a Microsoft keynote without

97
00:04:46,030 --> 00:04:47,440
a little bit of problem with office in

98
00:04:47,440 --> 00:04:51,430
Windows right okay so let me let's get

99
00:04:51,430 --> 00:04:53,830
back on track here um why am I here to

100
00:04:53,830 --> 00:04:56,370
talk about quantum resistant crypto and

101
00:04:56,370 --> 00:04:58,780
to give you some motivation for this

102
00:04:58,780 --> 00:05:01,330
let's start by looking back at how

103
00:05:01,330 --> 00:05:03,340
computing has changed over really the

104
00:05:03,340 --> 00:05:05,560
last 2,000 years we don't normally think

105
00:05:05,560 --> 00:05:08,200
about computing as having a 2,000 year

106
00:05:08,200 --> 00:05:10,720
history but if you actually go back to

107
00:05:10,720 --> 00:05:12,280
the Antikythera mechanisms and other

108
00:05:12,280 --> 00:05:14,470
sorts of very early mechanical devices

109
00:05:14,470 --> 00:05:17,110
that were used for doing astronomical

110
00:05:17,110 --> 00:05:20,320
calculations there is a long history of

111
00:05:20,320 --> 00:05:24,760
us actually using physics in one way or

112
00:05:24,760 --> 00:05:26,440
another to build computing devices

113
00:05:26,440 --> 00:05:29,200
whether mechanical whether something

114
00:05:29,200 --> 00:05:31,450
like Babbage's Difference Engine when we

115
00:05:31,450 --> 00:05:32,920
move to electrical computer starting

116
00:05:32,920 --> 00:05:35,710
with the e niak more recently the de

117
00:05:35,710 --> 00:05:38,170
Haan hey - which until very recently was

118
00:05:38,170 --> 00:05:40,060
the number one computer on the top 500

119
00:05:40,060 --> 00:05:42,010
supercomputers it's now been superseded

120
00:05:42,010 --> 00:05:45,160
by another Chinese supercomputer and the

121
00:05:45,160 --> 00:05:46,780
reason I'm here today is because we are

122
00:05:46,780 --> 00:05:48,490
we believe we are on

123
00:05:48,490 --> 00:05:50,440
cusp of another change in fundamental

124
00:05:50,440 --> 00:05:53,080
physics for computing just like the move

125
00:05:53,080 --> 00:05:55,810
from mechanical to electrical we believe

126
00:05:55,810 --> 00:05:57,940
that we are now going to be able to

127
00:05:57,940 --> 00:05:59,680
build computers built on top of quantum

128
00:05:59,680 --> 00:06:01,240
physical properties that have a

129
00:06:01,240 --> 00:06:04,120
different computing model and they admit

130
00:06:04,120 --> 00:06:06,099
or will admit if we can build them big

131
00:06:06,099 --> 00:06:09,490
enough and coherent long enough to solve

132
00:06:09,490 --> 00:06:11,349
different classes of problems quickly

133
00:06:11,349 --> 00:06:14,470
and Microsoft happens to have a group

134
00:06:14,470 --> 00:06:16,300
that sits right above me in Microsoft

135
00:06:16,300 --> 00:06:17,800
Research is working on topological

136
00:06:17,800 --> 00:06:18,699
quantum computing and there are other

137
00:06:18,699 --> 00:06:20,169
research groups around the world working

138
00:06:20,169 --> 00:06:21,910
on different types of quantum computing

139
00:06:21,910 --> 00:06:24,849
and the good news about this is that if

140
00:06:24,849 --> 00:06:25,870
you could actually build a quantum

141
00:06:25,870 --> 00:06:27,550
computer it's going to let you solve a

142
00:06:27,550 --> 00:06:28,900
whole bunch of problems quickly that we

143
00:06:28,900 --> 00:06:31,270
can't solve today bad news from my

144
00:06:31,270 --> 00:06:32,500
perspective which I'll get to for a

145
00:06:32,500 --> 00:06:34,090
moment is I'll let you solve a whole

146
00:06:34,090 --> 00:06:35,139
bunch of problems that you can't solve

147
00:06:35,139 --> 00:06:37,270
quickly today like all the ones we use

148
00:06:37,270 --> 00:06:39,400
for cryptography so we have to have it

149
00:06:39,400 --> 00:06:42,909
two defenses against that um we

150
00:06:42,909 --> 00:06:44,590
celebrated recently the 50th anniversary

151
00:06:44,590 --> 00:06:47,919
of Moore's law right this is a chart I

152
00:06:47,919 --> 00:06:50,620
pulled just recently again off top 500

153
00:06:50,620 --> 00:06:53,830
of basically the top number of flops per

154
00:06:53,830 --> 00:06:58,030
second of the the triangles here in the

155
00:06:58,030 --> 00:06:59,289
middle is the number one machine on the

156
00:06:59,289 --> 00:07:01,180
list that's the number 500 machine on

157
00:07:01,180 --> 00:07:03,490
the list that's the sum of the top 500

158
00:07:03,490 --> 00:07:05,440
machines and you can see on a log scale

159
00:07:05,440 --> 00:07:07,509
on the left it's that very nice growth

160
00:07:07,509 --> 00:07:09,280
line that we expect from Moore's Law

161
00:07:09,280 --> 00:07:11,050
that seems to be continuing pretty much

162
00:07:11,050 --> 00:07:14,080
on and on and it is natural for us to

163
00:07:14,080 --> 00:07:16,690
ask the question is there anything we

164
00:07:16,690 --> 00:07:19,270
can't solve on digital computers because

165
00:07:19,270 --> 00:07:21,370
frankly we got plenty of compute power

166
00:07:21,370 --> 00:07:23,469
and if there's a problem that we can't

167
00:07:23,469 --> 00:07:26,020
seem to solve today with what we've got

168
00:07:26,020 --> 00:07:28,509
we can either put more compute power out

169
00:07:28,509 --> 00:07:30,610
there or we can wait a little bit and

170
00:07:30,610 --> 00:07:31,870
wait for everything to get faster and

171
00:07:31,870 --> 00:07:33,099
all of a sudden we can solve more things

172
00:07:33,099 --> 00:07:35,800
and that's how that approach is kind of

173
00:07:35,800 --> 00:07:38,620
taken on the way there are a class of

174
00:07:38,620 --> 00:07:40,539
problems though that don't fit that

175
00:07:40,539 --> 00:07:42,849
model and we depend upon them for

176
00:07:42,849 --> 00:07:44,650
securing all of our electronic commerce

177
00:07:44,650 --> 00:07:46,150
and a lot of online businesses such

178
00:07:46,150 --> 00:07:47,770
today and that's the problems that

179
00:07:47,770 --> 00:07:49,780
cryptography are based on and these

180
00:07:49,780 --> 00:07:52,210
problems are just intractable with

181
00:07:52,210 --> 00:07:54,789
classical computing factoring is the one

182
00:07:54,789 --> 00:07:55,990
that's most common it's the fundamental

183
00:07:55,990 --> 00:07:58,659
problem underneath the RSA encryption

184
00:07:58,659 --> 00:08:01,000
and digital signature algorithm every

185
00:08:01,000 --> 00:08:02,270
day this gets used and

186
00:08:02,270 --> 00:08:04,220
time you connect to an HTTP website

187
00:08:04,220 --> 00:08:06,740
you're probably using RSA or using a

188
00:08:06,740 --> 00:08:08,450
related problem on elliptic curves and

189
00:08:08,450 --> 00:08:10,940
this is the 2048 bit RSA challenge

190
00:08:10,940 --> 00:08:13,160
problem that is the product that is a

191
00:08:13,160 --> 00:08:14,930
2048-bit number that is the product of

192
00:08:14,930 --> 00:08:17,810
two 1024 bit primes if I give you the

193
00:08:17,810 --> 00:08:19,400
two 1024 bit Prime's and I say would you

194
00:08:19,400 --> 00:08:21,470
please go multiply them that's easy we

195
00:08:21,470 --> 00:08:23,390
can do that quickly if I give you the

196
00:08:23,390 --> 00:08:25,130
product and I say find the two numbers

197
00:08:25,130 --> 00:08:27,440
that multiply to that that's really hard

198
00:08:27,440 --> 00:08:28,760
we don't have a polynomial time

199
00:08:28,760 --> 00:08:31,250
algorithm to do that that is outside of

200
00:08:31,250 --> 00:08:33,980
our bounds in fact if you were to go get

201
00:08:33,980 --> 00:08:35,929
a bunch of CPUs you need a billion CPU

202
00:08:35,929 --> 00:08:38,450
years with current technology and what

203
00:08:38,450 --> 00:08:40,039
we know about the fastest known hours to

204
00:08:40,039 --> 00:08:42,080
do that but if I can build a quantum

205
00:08:42,080 --> 00:08:43,970
computer that's big enough and big

206
00:08:43,970 --> 00:08:45,710
enough is really important here I don't

207
00:08:45,710 --> 00:08:47,660
just need like two little quantum bits I

208
00:08:47,660 --> 00:08:50,570
need about twice the number of quantum

209
00:08:50,570 --> 00:08:52,040
bits as that number I need four to five

210
00:08:52,040 --> 00:08:53,660
thousand quantum bits logical quantum

211
00:08:53,660 --> 00:08:55,970
bits that are coherent I can solve that

212
00:08:55,970 --> 00:08:58,340
in a hundred seconds that's the type of

213
00:08:58,340 --> 00:09:01,040
breakthrough that is the potential of

214
00:09:01,040 --> 00:09:02,750
quantum computing if we're actually able

215
00:09:02,750 --> 00:09:06,320
to build it now that's great unless

216
00:09:06,320 --> 00:09:07,670
you're a cryptographer trying to protect

217
00:09:07,670 --> 00:09:09,920
information because we have been

218
00:09:09,920 --> 00:09:14,330
dependent on the exponential work factor

219
00:09:14,330 --> 00:09:16,430
of adding a couple more bits to the

220
00:09:16,430 --> 00:09:18,500
encryption keys or to the size of RSA

221
00:09:18,500 --> 00:09:21,680
numbers to making the amount of work

222
00:09:21,680 --> 00:09:23,150
that it takes to break it that's how

223
00:09:23,150 --> 00:09:25,150
we've been staying at a Moore's Law as

224
00:09:25,150 --> 00:09:27,290
computers have gotten faster and faster

225
00:09:27,290 --> 00:09:29,060
we've upped our key sizes but we've only

226
00:09:29,060 --> 00:09:31,940
had to up our key sizes a little bit to

227
00:09:31,940 --> 00:09:34,520
account for great growth in the amount

228
00:09:34,520 --> 00:09:37,030
of compute power that's available okay

229
00:09:37,030 --> 00:09:41,080
we believe that a how can I put this a

230
00:09:41,080 --> 00:09:43,970
well-funded nation state agency or

231
00:09:43,970 --> 00:09:46,460
similar sized organization could

232
00:09:46,460 --> 00:09:48,260
probably gather enough compute power

233
00:09:48,260 --> 00:09:50,420
together in secret to factor a 1024 bit

234
00:09:50,420 --> 00:09:52,940
RSA number we don't think anybody's

235
00:09:52,940 --> 00:09:54,470
actually got enough compute power to do

236
00:09:54,470 --> 00:09:56,090
a 2048 but number because that's so far

237
00:09:56,090 --> 00:09:57,470
out of reach of what we think is

238
00:09:57,470 --> 00:10:00,020
physically possible but quantum

239
00:10:00,020 --> 00:10:01,850
computing changes that and we have

240
00:10:01,850 --> 00:10:04,190
actually known that fact since 1994 when

241
00:10:04,190 --> 00:10:07,040
Peter shor at 18 T Bell Labs came up

242
00:10:07,040 --> 00:10:09,350
with a quantum based factoring algorithm

243
00:10:09,350 --> 00:10:11,030
and what Pete what Peter showed was that

244
00:10:11,030 --> 00:10:13,310
if you had a quantum computer you could

245
00:10:13,310 --> 00:10:15,230
actually solve a subproblem of the

246
00:10:15,230 --> 00:10:15,980
factoring for all

247
00:10:15,980 --> 00:10:18,260
in polynomial time and that reduced the

248
00:10:18,260 --> 00:10:20,779
entire problem so this is why we are all

249
00:10:20,779 --> 00:10:22,070
theoretically worried about this and

250
00:10:22,070 --> 00:10:23,839
since 1994 it's been a theoretical

251
00:10:23,839 --> 00:10:25,339
concern and nobody was really a

252
00:10:25,339 --> 00:10:27,260
practical concern we didn't see any way

253
00:10:27,260 --> 00:10:30,290
to build a quantum computer and now you

254
00:10:30,290 --> 00:10:32,029
know we're starting to get some sense

255
00:10:32,029 --> 00:10:34,220
that that might be true and it's not

256
00:10:34,220 --> 00:10:37,040
just factoring okay if you look at

257
00:10:37,040 --> 00:10:38,540
everything that we use in contemporary

258
00:10:38,540 --> 00:10:41,600
cryptography today and for example take

259
00:10:41,600 --> 00:10:43,579
the most common TLS cipher suite that's

260
00:10:43,579 --> 00:10:45,290
out there so if you're running HTTP

261
00:10:45,290 --> 00:10:48,920
you're running TLS you end up using

262
00:10:48,920 --> 00:10:50,870
elliptic curve diffie-hellman ephemeral

263
00:10:50,870 --> 00:10:52,910
for a key exchange and you use RSA for

264
00:10:52,910 --> 00:10:54,889
validating those certificates for server

265
00:10:54,889 --> 00:10:56,630
and maybe client and then you do some

266
00:10:56,630 --> 00:10:59,060
symmetric cryptography with AES and shot

267
00:10:59,060 --> 00:11:01,820
256 on the inside all of those

268
00:11:01,820 --> 00:11:03,560
algorithms to a greater extent or a

269
00:11:03,560 --> 00:11:06,050
lesser extent can be solved more quickly

270
00:11:06,050 --> 00:11:08,060
if quantum computers are available that

271
00:11:08,060 --> 00:11:09,889
is if your attacker has access to one

272
00:11:09,889 --> 00:11:12,230
they can do something for the

273
00:11:12,230 --> 00:11:13,940
fundamental math the number theory

274
00:11:13,940 --> 00:11:16,070
problems underlying RSA factoring and

275
00:11:16,070 --> 00:11:18,199
elliptic curve diffie-hellman they all

276
00:11:18,199 --> 00:11:21,050
fall and there's no way to resolve that

277
00:11:21,050 --> 00:11:23,209
because you can just build you double

278
00:11:23,209 --> 00:11:25,250
the key length for the RSA you just

279
00:11:25,250 --> 00:11:27,170
double them or quantum bits and the same

280
00:11:27,170 --> 00:11:29,570
happens on the elliptic curve side you

281
00:11:29,570 --> 00:11:30,980
actually need about six times the number

282
00:11:30,980 --> 00:11:32,660
of quantum bits for elliptic curve but

283
00:11:32,660 --> 00:11:35,209
the curves are smaller for AES and shot

284
00:11:35,209 --> 00:11:38,029
to the quantum attacks aren't quite as

285
00:11:38,029 --> 00:11:40,160
big what they do is they reduce the

286
00:11:40,160 --> 00:11:42,079
number of bits the effective length the

287
00:11:42,079 --> 00:11:44,329
effective length of bits in half so in a

288
00:11:44,329 --> 00:11:46,550
AES 128-bit key that's a very commonly

289
00:11:46,550 --> 00:11:49,220
saw you sized a two to the 128 bit work

290
00:11:49,220 --> 00:11:51,320
to brute-force it quantum makes at two

291
00:11:51,320 --> 00:11:53,300
to the 64 so the answer there should

292
00:11:53,300 --> 00:11:54,440
double the key length and you go to to

293
00:11:54,440 --> 00:11:56,570
256 that's what we do with hash

294
00:11:56,570 --> 00:11:58,100
functions so we're not really as worried

295
00:11:58,100 --> 00:11:59,510
about the far side of the screen as we

296
00:11:59,510 --> 00:12:03,800
are about the number theory now where

297
00:12:03,800 --> 00:12:04,910
are we aquatic computing

298
00:12:04,910 --> 00:12:07,399
well they look something like this this

299
00:12:07,399 --> 00:12:08,990
is the photo from Charlie Marcus's lab

300
00:12:08,990 --> 00:12:10,579
in Copenhagen Denmark there well he's

301
00:12:10,579 --> 00:12:11,930
one of the groups that collaborates with

302
00:12:11,930 --> 00:12:13,459
Microsoft Research on building quantum

303
00:12:13,459 --> 00:12:15,230
machines I love putting these pictures

304
00:12:15,230 --> 00:12:16,850
in because cryptographers have no fancy

305
00:12:16,850 --> 00:12:18,649
pictures we have nothing to show you

306
00:12:18,649 --> 00:12:21,620
okay but these guys they have all the

307
00:12:21,620 --> 00:12:23,180
cool equipment right this is the

308
00:12:23,180 --> 00:12:29,779
dilution refrigerator logical

309
00:12:29,779 --> 00:12:31,100
wanna bits and experiment with it and

310
00:12:31,100 --> 00:12:33,620
it's really really cold and we don't

311
00:12:33,620 --> 00:12:34,610
even know how we're gonna get data in

312
00:12:34,610 --> 00:12:35,329
and out of there yet

313
00:12:35,329 --> 00:12:37,430
but that's kind of what they're building

314
00:12:37,430 --> 00:12:39,649
and they're demonstrating this problem

315
00:12:39,649 --> 00:12:41,060
and there's other groups iBM has done

316
00:12:41,060 --> 00:12:42,560
some stuff with I think ion traps and

317
00:12:42,560 --> 00:12:44,660
there's a couple other physics this is

318
00:12:44,660 --> 00:12:46,040
not something we're going to deploy in

319
00:12:46,040 --> 00:12:49,249
every Windows PC okay but well-funded

320
00:12:49,249 --> 00:12:51,980
organizations if you can build and make

321
00:12:51,980 --> 00:12:53,449
enough wonnum bits out of this could

322
00:12:53,449 --> 00:12:54,290
start to actually do something

323
00:12:54,290 --> 00:12:56,990
interesting with it and there's a lot of

324
00:12:56,990 --> 00:12:58,339
interesting problems that you can kind

325
00:12:58,339 --> 00:13:01,089
of solve so where are we on this journey

326
00:13:01,089 --> 00:13:03,889
right is this a cold fusion situation

327
00:13:03,889 --> 00:13:06,920
when we don't think so but we're still

328
00:13:06,920 --> 00:13:10,220
just somewhere along the stack of

329
00:13:10,220 --> 00:13:12,259
solving the engineering problems that we

330
00:13:12,259 --> 00:13:15,769
have to solve okay we are not in

331
00:13:15,769 --> 00:13:18,680
imminent danger of having a 9000 quantum

332
00:13:18,680 --> 00:13:21,470
bit computer tomorrow okay this is

333
00:13:21,470 --> 00:13:23,329
actually a graph from a debragoff

334
00:13:23,329 --> 00:13:25,759
science article from 2013 where we are

335
00:13:25,759 --> 00:13:28,040
basically you know three or four steps

336
00:13:28,040 --> 00:13:29,779
along the way but we are making progress

337
00:13:29,779 --> 00:13:31,339
or I should say the groups that are

338
00:13:31,339 --> 00:13:32,480
doing that are trying to build the

339
00:13:32,480 --> 00:13:33,949
computers that got to break by stuff

340
00:13:33,949 --> 00:13:36,379
they are making progress and we're

341
00:13:36,379 --> 00:13:37,430
making progress in trying to defend

342
00:13:37,430 --> 00:13:39,649
against that so this is kind of what's

343
00:13:39,649 --> 00:13:44,389
happening in the world and you know the

344
00:13:44,389 --> 00:13:47,689
question now is why should we care about

345
00:13:47,689 --> 00:13:50,660
this now I'm up here telling you that

346
00:13:50,660 --> 00:13:52,189
there's a threat that's going to come

347
00:13:52,189 --> 00:13:55,339
sometime in the far future this

348
00:13:55,339 --> 00:13:56,809
organizations worried about threats that

349
00:13:56,809 --> 00:13:58,639
are happening right now and we all are

350
00:13:58,639 --> 00:13:59,779
right we're trying to defend the

351
00:13:59,779 --> 00:14:01,309
internet today against a bunch of things

352
00:14:01,309 --> 00:14:04,819
so why do we care and what you know why

353
00:14:04,819 --> 00:14:06,529
should you be thinking about this well

354
00:14:06,529 --> 00:14:08,750
it's real simple we don't have a

355
00:14:08,750 --> 00:14:10,040
large-scale quantum computer now but

356
00:14:10,040 --> 00:14:11,870
there might be one and let's say 15

357
00:14:11,870 --> 00:14:14,209
years okay could be 10 years it could be

358
00:14:14,209 --> 00:14:16,069
20 years there's a few people to say

359
00:14:16,069 --> 00:14:17,540
optimistically 5 years in which case

360
00:14:17,540 --> 00:14:20,329
we're really in trouble but let's say

361
00:14:20,329 --> 00:14:22,279
that roughly speaking just to put your

362
00:14:22,279 --> 00:14:24,949
finger in the wind 15 years from now one

363
00:14:24,949 --> 00:14:26,509
or more organizations will have access

364
00:14:26,509 --> 00:14:28,069
to quantum computers big enough to break

365
00:14:28,069 --> 00:14:30,769
these types of algorithms a well funded

366
00:14:30,769 --> 00:14:31,819
organization have it a little bit sooner

367
00:14:31,819 --> 00:14:33,079
but let's just say that

368
00:14:33,079 --> 00:14:35,059
how long does it take to migrate the

369
00:14:35,059 --> 00:14:37,009
internet to a new public key encryption

370
00:14:37,009 --> 00:14:38,250
algorithm

371
00:14:38,250 --> 00:14:41,730
it take took us at least a decade just

372
00:14:41,730 --> 00:14:43,680
to switch hash functions we're still

373
00:14:43,680 --> 00:14:45,870
trying to get rid of sha-1 you may have

374
00:14:45,870 --> 00:14:47,970
seen the ongoing wars between the

375
00:14:47,970 --> 00:14:50,190
browser organizations and some of the

376
00:14:50,190 --> 00:14:51,420
other certificate authorities trying to

377
00:14:51,420 --> 00:14:53,670
get sha-1 out of places before that it

378
00:14:53,670 --> 00:14:56,400
was md5 we are not very good at

379
00:14:56,400 --> 00:14:58,710
migrating the entire internet and all of

380
00:14:58,710 --> 00:15:00,930
the embedded devices to new algorithms

381
00:15:00,930 --> 00:15:02,760
and migrating a new public key algorithm

382
00:15:02,760 --> 00:15:03,630
is going to be even worse

383
00:15:03,630 --> 00:15:04,980
we haven't even standardized on anything

384
00:15:04,980 --> 00:15:08,280
yet okay so that's a problem the second

385
00:15:08,280 --> 00:15:10,320
one has to do with recording of

386
00:15:10,320 --> 00:15:13,610
encrypted data we have to assume that in

387
00:15:13,610 --> 00:15:16,470
communications that are encrypted today

388
00:15:16,470 --> 00:15:20,010
may have lifetimes beyond the working

389
00:15:20,010 --> 00:15:21,750
lifetime of the algorithms right if your

390
00:15:21,750 --> 00:15:23,780
data is got a 20 year or 30 year

391
00:15:23,780 --> 00:15:26,310
confidentiality lifetime that data could

392
00:15:26,310 --> 00:15:28,350
be recorded by an adversary and could be

393
00:15:28,350 --> 00:15:30,780
broken down the road and so even today

394
00:15:30,780 --> 00:15:32,880
we have customers who are concerned

395
00:15:32,880 --> 00:15:35,850
about the long term confidentiality of

396
00:15:35,850 --> 00:15:38,340
the data that they sent and we need

397
00:15:38,340 --> 00:15:39,990
answers for them so how long is it going

398
00:15:39,990 --> 00:15:41,670
to take to even re-encrypt storage data

399
00:15:41,670 --> 00:15:44,370
things like that and then to throw into

400
00:15:44,370 --> 00:15:48,030
this mix we had this little announcement

401
00:15:48,030 --> 00:15:49,740
from the US National Security Agency in

402
00:15:49,740 --> 00:15:50,700
August 2015

403
00:15:50,700 --> 00:15:53,430
now NSA doesn't say a lot very often

404
00:15:53,430 --> 00:15:56,240
they don't really say a lot period in

405
00:15:56,240 --> 00:15:59,190
2005 NSA came to the cryptographic

406
00:15:59,190 --> 00:16:01,290
community they made an announcement at

407
00:16:01,290 --> 00:16:03,000
the RSA security conference and they

408
00:16:03,000 --> 00:16:04,530
announced something called suite B which

409
00:16:04,530 --> 00:16:06,660
was their set of algorithms that they

410
00:16:06,660 --> 00:16:08,580
were going to back and that they wanted

411
00:16:08,580 --> 00:16:10,830
a the commercial industry to implement

412
00:16:10,830 --> 00:16:14,060
for use in up - what up - top secret

413
00:16:14,060 --> 00:16:16,560
which in NSA terminology isn't actually

414
00:16:16,560 --> 00:16:18,480
that secret but it's top secret okay um

415
00:16:18,480 --> 00:16:22,110
and this was a set of algorithms using

416
00:16:22,110 --> 00:16:23,760
an elliptic curve and some curves they

417
00:16:23,760 --> 00:16:25,710
specified an AES and shot - and we all

418
00:16:25,710 --> 00:16:27,660
went and implemented that was one of my

419
00:16:27,660 --> 00:16:30,630
jobs for vishton for this device none of

420
00:16:30,630 --> 00:16:31,650
you probably ever heard of called a

421
00:16:31,650 --> 00:16:34,950
Windows Phone that we that I did the

422
00:16:34,950 --> 00:16:36,390
crypto for that

423
00:16:36,390 --> 00:16:38,339
and the most interesting was that's been

424
00:16:38,339 --> 00:16:39,390
what we've kind of been following the

425
00:16:39,390 --> 00:16:40,740
guidance for 10 years and in an August

426
00:16:40,740 --> 00:16:42,390
without any announcement NSA made an

427
00:16:42,390 --> 00:16:44,100
update to their website it was a stealth

428
00:16:44,100 --> 00:16:46,010
update that folks just kind of noticed

429
00:16:46,010 --> 00:16:48,510
that talked about the transition of

430
00:16:48,510 --> 00:16:50,400
quantum resistant crypto including this

431
00:16:50,400 --> 00:16:52,440
line for those partners in vendor

432
00:16:52,440 --> 00:16:54,150
have not yet made the transition to

433
00:16:54,150 --> 00:16:56,760
sweet be elliptic curve algorithms we

434
00:16:56,760 --> 00:16:58,680
recommend not making a significant

435
00:16:58,680 --> 00:17:00,540
expenditure to do so at this point but

436
00:17:00,540 --> 00:17:02,040
instead to prepare for the upcoming

437
00:17:02,040 --> 00:17:03,949
quantum resistant algorithm translation

438
00:17:03,949 --> 00:17:06,119
now you show that to developers that

439
00:17:06,119 --> 00:17:07,680
you've just tasked with moving to

440
00:17:07,680 --> 00:17:08,760
elliptic curve and they're going to say

441
00:17:08,760 --> 00:17:10,079
why should I bother I'm going to move on

442
00:17:10,079 --> 00:17:12,060
to something else and in fact there was

443
00:17:12,060 --> 00:17:14,040
a lot of pushback to NSA saying well how

444
00:17:14,040 --> 00:17:15,959
much should I invest to keep going you

445
00:17:15,959 --> 00:17:17,880
know how much of my sunk cost is worth

446
00:17:17,880 --> 00:17:20,010
going to elliptic curve and they did a

447
00:17:20,010 --> 00:17:22,260
fact that said well if you like if

448
00:17:22,260 --> 00:17:23,520
you're seventy percent of the way you

449
00:17:23,520 --> 00:17:25,170
should kind of finish but if maybe if

450
00:17:25,170 --> 00:17:26,699
you're not that far you should kind of

451
00:17:26,699 --> 00:17:27,959
hold off because something might come

452
00:17:27,959 --> 00:17:31,710
down the road it was very vague but this

453
00:17:31,710 --> 00:17:35,610
caused um really everyone to take notice

454
00:17:35,610 --> 00:17:37,980
that a transition was going to be coming

455
00:17:37,980 --> 00:17:41,070
soon possibly by specification from the

456
00:17:41,070 --> 00:17:42,780
NSA possibly by other folks so we needed

457
00:17:42,780 --> 00:17:46,140
to really start paying attention so to

458
00:17:46,140 --> 00:17:49,160
be clear what I'm talking about here are

459
00:17:49,160 --> 00:17:52,200
cryptographic schemes that we believe

460
00:17:52,200 --> 00:17:54,690
will be secure against both classical

461
00:17:54,690 --> 00:17:57,330
attacks that we know today as well as if

462
00:17:57,330 --> 00:17:58,980
your adversary has access to a big

463
00:17:58,980 --> 00:18:01,020
enough quantum computer we come close

464
00:18:01,020 --> 00:18:02,340
call this quantum safe for quantum

465
00:18:02,340 --> 00:18:06,210
resistant this is not quantum

466
00:18:06,210 --> 00:18:07,770
cryptography or quantum key distribution

467
00:18:07,770 --> 00:18:09,630
some of you may have seen an article

468
00:18:09,630 --> 00:18:11,400
that was in science I think yesterday

469
00:18:11,400 --> 00:18:12,990
the day before about the Chinese

470
00:18:12,990 --> 00:18:15,140
government demonstrated that they could

471
00:18:15,140 --> 00:18:18,240
do spooky action at a distance over 1200

472
00:18:18,240 --> 00:18:20,010
kilometers so they've got a satellite

473
00:18:20,010 --> 00:18:21,420
now that actually creates entangled

474
00:18:21,420 --> 00:18:22,920
photons and beams them down to two

475
00:18:22,920 --> 00:18:24,510
different ground stations in China and

476
00:18:24,510 --> 00:18:26,520
you know you change one photon here and

477
00:18:26,520 --> 00:18:29,550
it changes 1,200 kilometers away that's

478
00:18:29,550 --> 00:18:31,110
not what we're talking about we're not

479
00:18:31,110 --> 00:18:33,300
going to be building you know photonic

480
00:18:33,300 --> 00:18:35,550
equipment into every laptop that's

481
00:18:35,550 --> 00:18:37,260
sitting out there but what I want to do

482
00:18:37,260 --> 00:18:38,640
is come up with classical algorithms

483
00:18:38,640 --> 00:18:40,920
that could resist the types of quantum

484
00:18:40,920 --> 00:18:44,100
attacks as well as classical attacks so

485
00:18:44,100 --> 00:18:45,960
that's the problem because I've got

486
00:18:45,960 --> 00:18:47,520
things that aren't going to sell that

487
00:18:47,520 --> 00:18:49,830
problem and the reason that we're really

488
00:18:49,830 --> 00:18:51,930
concerned about this now is because of

489
00:18:51,930 --> 00:18:55,320
the potential 15 year time horizon for

490
00:18:55,320 --> 00:18:57,240
the work we have to go do so back in

491
00:18:57,240 --> 00:18:58,560
2015 when I actually started this

492
00:18:58,560 --> 00:19:00,810
project in my group I went upstairs to

493
00:19:00,810 --> 00:19:02,130
the quantum guys and I said how long is

494
00:19:02,130 --> 00:19:03,480
it going to take for us to get a

495
00:19:03,480 --> 00:19:04,620
reasonable sized quantum computer and

496
00:19:04,620 --> 00:19:05,910
they gave me the 15-year

497
00:19:05,910 --> 00:19:07,740
number so I said okay it's January 2015

498
00:19:07,740 --> 00:19:09,540
let's think about having a quantum

499
00:19:09,540 --> 00:19:12,390
computer in 2030 what's that mean in

500
00:19:12,390 --> 00:19:14,070
terms of doing the research on

501
00:19:14,070 --> 00:19:15,660
algorithms trying to test them out

502
00:19:15,660 --> 00:19:17,250
trying to standardize them trying to

503
00:19:17,250 --> 00:19:18,810
even roll it out a big company like

504
00:19:18,810 --> 00:19:21,000
Microsoft trying to get it into software

505
00:19:21,000 --> 00:19:24,750
stacks and deploy I'm out of time that

506
00:19:24,750 --> 00:19:26,310
was the conclusion in January 2015 was

507
00:19:26,310 --> 00:19:27,720
we were right on the edge of being out

508
00:19:27,720 --> 00:19:29,670
of time when you actually look at how

509
00:19:29,670 --> 00:19:32,580
long it takes to do all of the work to

510
00:19:32,580 --> 00:19:34,560
come up with a new set of cryptographic

511
00:19:34,560 --> 00:19:38,010
algorithms and evaluate them and decide

512
00:19:38,010 --> 00:19:40,290
whether or not they're actually usable

513
00:19:40,290 --> 00:19:42,860
and deploy and now to give you an update

514
00:19:42,860 --> 00:19:47,610
we're here at that point the double

515
00:19:47,610 --> 00:19:49,770
question mark is five years from now if

516
00:19:49,770 --> 00:19:52,770
we get a quantum computer by then that's

517
00:19:52,770 --> 00:19:54,480
big enough we're not going to have stuff

518
00:19:54,480 --> 00:19:56,160
deployed we're going to be in as they

519
00:19:56,160 --> 00:19:59,820
say a world of hurt at ten years we're

520
00:19:59,820 --> 00:20:01,880
likely to have more stuff ready to go

521
00:20:01,880 --> 00:20:04,770
and through the standardization process

522
00:20:04,770 --> 00:20:06,090
and deployment and the testing and that

523
00:20:06,090 --> 00:20:08,040
sort of thing but that is why that the

524
00:20:08,040 --> 00:20:09,630
cryptographic community is actively

525
00:20:09,630 --> 00:20:12,630
working on this and it's also why the US

526
00:20:12,630 --> 00:20:14,580
government is now launching a

527
00:20:14,580 --> 00:20:18,120
competition to neh to develop and choose

528
00:20:18,120 --> 00:20:20,040
new quantum resistant algorithms for

529
00:20:20,040 --> 00:20:22,080
Standardization and that's what the NIST

530
00:20:22,080 --> 00:20:23,730
PQ start is that's going to happen later

531
00:20:23,730 --> 00:20:25,650
this year and that's a process that's

532
00:20:25,650 --> 00:20:28,590
going to run for six years and this is

533
00:20:28,590 --> 00:20:29,910
what that looks like so the Nationals

534
00:20:29,910 --> 00:20:31,410
use of standard technology in the in the

535
00:20:31,410 --> 00:20:33,630
US government standardized it chooses

536
00:20:33,630 --> 00:20:35,520
and standardizes algorithms for US

537
00:20:35,520 --> 00:20:37,530
government use these become FIPS federal

538
00:20:37,530 --> 00:20:39,840
information processing standards AES was

539
00:20:39,840 --> 00:20:41,070
developed through a public competition

540
00:20:41,070 --> 00:20:43,710
that NIST ran sha-3 was developed

541
00:20:43,710 --> 00:20:45,090
through a public competition and mr. and

542
00:20:45,090 --> 00:20:47,100
Miss is now announced they're not

543
00:20:47,100 --> 00:20:48,690
calling in a competition they're calling

544
00:20:48,690 --> 00:20:51,080
it a selection process for certain

545
00:20:51,080 --> 00:20:53,670
technical reasons on because they may

546
00:20:53,670 --> 00:20:56,850
pick multiple algorithms but they've put

547
00:20:56,850 --> 00:20:59,190
out a call for proposals there's a

548
00:20:59,190 --> 00:21:01,470
deadline at the end of November for

549
00:21:01,470 --> 00:21:04,890
schemes to be submitted by teams around

550
00:21:04,890 --> 00:21:06,270
the world and then there's going to be a

551
00:21:06,270 --> 00:21:08,940
six year bake-off and NIST will run this

552
00:21:08,940 --> 00:21:10,830
process like they've run past things

553
00:21:10,830 --> 00:21:13,590
where they sort of weigh the pros and

554
00:21:13,590 --> 00:21:15,240
cons of particular schemes they asked

555
00:21:15,240 --> 00:21:16,590
everybody to attack everybody else's

556
00:21:16,590 --> 00:21:18,780
algorithms and at the end of this and

557
00:21:18,780 --> 00:21:19,420
they hold a series

558
00:21:19,420 --> 00:21:20,740
workshops and at the end of this the

559
00:21:20,740 --> 00:21:22,930
goal is for nist to pick one or more

560
00:21:22,930 --> 00:21:24,820
algorithms for key exchange of digital

561
00:21:24,820 --> 00:21:27,070
signature that are resistant to

562
00:21:27,070 --> 00:21:29,260
classical attacks and are resistant to

563
00:21:29,260 --> 00:21:31,090
known quantum attacks and would be

564
00:21:31,090 --> 00:21:33,670
suitable for deployment either alone or

565
00:21:33,670 --> 00:21:35,800
what's more likely and we'll talk about

566
00:21:35,800 --> 00:21:38,080
this in a little bit in combination with

567
00:21:38,080 --> 00:21:39,700
existing schemes that we already have

568
00:21:39,700 --> 00:21:41,710
deployed today to sort of do built-in

569
00:21:41,710 --> 00:21:44,380
suspenders approach so the nist

570
00:21:44,380 --> 00:21:46,540
competition right now is what's driving

571
00:21:46,540 --> 00:21:49,270
work in this field in cryptography

572
00:21:49,270 --> 00:21:51,520
across the world so there's a lot of

573
00:21:51,520 --> 00:21:52,720
different groups i'm going to talk about

574
00:21:52,720 --> 00:21:54,700
three efforts that my group at

575
00:21:54,700 --> 00:21:56,620
microsoft's involved in in trying to

576
00:21:56,620 --> 00:21:58,540
come up with algorithms that are based

577
00:21:58,540 --> 00:22:00,850
on different hard problems that are as

578
00:22:00,850 --> 00:22:03,550
resistant to classical attacks as RSA

579
00:22:03,550 --> 00:22:05,440
note the curve but not subject to

580
00:22:05,440 --> 00:22:06,910
quantum attacks and we're all that a

581
00:22:06,910 --> 00:22:08,170
submitted earnest and then everybody's

582
00:22:08,170 --> 00:22:09,340
going to kind of shoot at everybody else

583
00:22:09,340 --> 00:22:12,910
and we're going to see who wins because

584
00:22:12,910 --> 00:22:15,570
that's what cryptographers like to do so

585
00:22:15,570 --> 00:22:17,950
i'm going to now give you a little bit

586
00:22:17,950 --> 00:22:20,620
of math don't get scared arm i want to

587
00:22:20,620 --> 00:22:22,090
talk a little bit and just give you a

588
00:22:22,090 --> 00:22:25,450
flavor for the types of problems that we

589
00:22:25,450 --> 00:22:26,890
and the other folks in the community are

590
00:22:26,890 --> 00:22:28,750
looking at for new post quantum schemes

591
00:22:28,750 --> 00:22:31,810
and my reason for doing that is mostly

592
00:22:31,810 --> 00:22:33,490
to give you a feel for the fact that

593
00:22:33,490 --> 00:22:35,020
none of these schemes have the same

594
00:22:35,020 --> 00:22:37,630
complete engineering characteristics is

595
00:22:37,630 --> 00:22:40,240
what we're all using today and what that

596
00:22:40,240 --> 00:22:42,520
means is that when we transition to post

597
00:22:42,520 --> 00:22:44,800
quantum schemes some of the assumptions

598
00:22:44,800 --> 00:22:46,150
that are in our software stacks may

599
00:22:46,150 --> 00:22:48,280
break like how long it takes to do a

600
00:22:48,280 --> 00:22:50,200
signature or do a key exchange or how

601
00:22:50,200 --> 00:22:52,330
small the data elements are that go by

602
00:22:52,330 --> 00:22:54,790
the schemes that we are playing with

603
00:22:54,790 --> 00:22:57,790
right now some of them are fast some of

604
00:22:57,790 --> 00:22:59,650
them are slow some of them are small in

605
00:22:59,650 --> 00:23:01,150
size some of them are larger size and

606
00:23:01,150 --> 00:23:03,040
you need to understand what the

607
00:23:03,040 --> 00:23:04,720
trade-offs are to think through what the

608
00:23:04,720 --> 00:23:08,470
protocols look like what's best um to

609
00:23:08,470 --> 00:23:10,270
give you a rough feel for the space

610
00:23:10,270 --> 00:23:12,640
right now there are five main families

611
00:23:12,640 --> 00:23:15,850
of hard problems or problems that we

612
00:23:15,850 --> 00:23:18,370
think are hard that we are that we as a

613
00:23:18,370 --> 00:23:20,230
community are looking at basing one or

614
00:23:20,230 --> 00:23:21,580
more quantum resistant schemes on this

615
00:23:21,580 --> 00:23:22,840
is just a list of some of the possible

616
00:23:22,840 --> 00:23:25,780
the ones that are out there the five

617
00:23:25,780 --> 00:23:27,490
families of problems are roughly coding

618
00:23:27,490 --> 00:23:31,000
theory lattice based schemes the scheme

619
00:23:31,000 --> 00:23:32,260
signatures use based off cryptographic

620
00:23:32,260 --> 00:23:33,890
hashes

621
00:23:33,890 --> 00:23:36,140
schemes based off like sahjhan EES which

622
00:23:36,140 --> 00:23:38,740
are maps between elliptic curves and

623
00:23:38,740 --> 00:23:40,880
multivariate based systems

624
00:23:40,880 --> 00:23:43,400
none of these get used widely today and

625
00:23:43,400 --> 00:23:46,040
anything that's currently being used Bom

626
00:23:46,040 --> 00:23:47,900
they you know basically RS an elliptic

627
00:23:47,900 --> 00:23:49,610
curve are all faster than all of these

628
00:23:49,610 --> 00:23:51,650
schemes or have more knowledge about

629
00:23:51,650 --> 00:23:53,540
them but this is the space where we

630
00:23:53,540 --> 00:23:55,640
think that you can build on these

631
00:23:55,640 --> 00:23:57,049
problems and we're not aware of any

632
00:23:57,049 --> 00:24:01,340
quantum resistant attacks now my team at

633
00:24:01,340 --> 00:24:03,500
Microsoft is involved in efforts in two

634
00:24:03,500 --> 00:24:05,960
of these spaces in both the lattice

635
00:24:05,960 --> 00:24:07,400
based scheme and the ISO geneva-based

636
00:24:07,400 --> 00:24:09,140
scheme and those are things we'll talk

637
00:24:09,140 --> 00:24:11,000
about in a little bit in terms of just

638
00:24:11,000 --> 00:24:12,230
to give you a feel for what the

639
00:24:12,230 --> 00:24:14,150
properties look like for them and we

640
00:24:14,150 --> 00:24:15,650
also have just started developing a

641
00:24:15,650 --> 00:24:17,990
signature scheme that builds off hashes

642
00:24:17,990 --> 00:24:19,220
but doesn't really fit in that hash base

643
00:24:19,220 --> 00:24:23,540
bucket the lwe stands for learning with

644
00:24:23,540 --> 00:24:26,660
errors the r - LW e stands for ring

645
00:24:26,660 --> 00:24:28,549
based where there's an algebraic ring

646
00:24:28,549 --> 00:24:30,679
which adds some structure to it there's

647
00:24:30,679 --> 00:24:32,630
pros and cons to doing that and then

648
00:24:32,630 --> 00:24:34,160
super singular isogen we'll talk about

649
00:24:34,160 --> 00:24:36,500
that in a little bit now when you go to

650
00:24:36,500 --> 00:24:39,740
develop a new crypto system there's lots

651
00:24:39,740 --> 00:24:43,940
of questions that you have to answer you

652
00:24:43,940 --> 00:24:45,799
want to design better schemes you start

653
00:24:45,799 --> 00:24:47,120
with a hard problem and you try to

654
00:24:47,120 --> 00:24:48,620
figure out well how can I build a key

655
00:24:48,620 --> 00:24:50,809
exchange scheme out of this hard problem

656
00:24:50,809 --> 00:24:53,240
right you start with factoring and you

657
00:24:53,240 --> 00:24:54,590
try to figure out how do I build a

658
00:24:54,590 --> 00:24:56,299
digital signature algorithm or a key

659
00:24:56,299 --> 00:24:57,770
exchange algorithm out of factoring it's

660
00:24:57,770 --> 00:25:00,049
not as easy as just doing the raw RSA

661
00:25:00,049 --> 00:25:01,040
operation there's a lot of engineering

662
00:25:01,040 --> 00:25:02,690
steps that happen there because there's

663
00:25:02,690 --> 00:25:05,120
a lot of ways that even if you do if you

664
00:25:05,120 --> 00:25:06,679
have built on top of factoring the

665
00:25:06,679 --> 00:25:08,540
system can fail and we have seen a

666
00:25:08,540 --> 00:25:10,970
series of attacks against say the use of

667
00:25:10,970 --> 00:25:14,480
RSA with with inappropriate padding

668
00:25:14,480 --> 00:25:16,250
modes for example or or you know in

669
00:25:16,250 --> 00:25:17,690
signature schemes and things like that

670
00:25:17,690 --> 00:25:19,970
over the years so there's a lot of steps

671
00:25:19,970 --> 00:25:22,160
to what you have to do when you pick a

672
00:25:22,160 --> 00:25:24,220
problem and try to build a scheme on it

673
00:25:24,220 --> 00:25:26,390
you try to improve the best known

674
00:25:26,390 --> 00:25:28,880
classic and quantum attacks for all the

675
00:25:28,880 --> 00:25:29,900
schemes and I'm going to talk about

676
00:25:29,900 --> 00:25:32,150
we're not aware of a quantum attack

677
00:25:32,150 --> 00:25:34,669
that's efficient that doesn't mean there

678
00:25:34,669 --> 00:25:37,340
isn't one right we have no proofs in

679
00:25:37,340 --> 00:25:39,620
this space that any of these problems

680
00:25:39,620 --> 00:25:42,919
are the equivalent of np-hard ok there

681
00:25:42,919 --> 00:25:45,890
is no proof that we're guaranteed so we

682
00:25:45,890 --> 00:25:46,919
are this is an area of

683
00:25:46,919 --> 00:25:48,869
to study and the classical attacks on

684
00:25:48,869 --> 00:25:50,249
all these problems have not been studied

685
00:25:50,249 --> 00:25:53,460
as much as factoring has which is one of

686
00:25:53,460 --> 00:25:54,659
the reasons why we're not comfortable

687
00:25:54,659 --> 00:25:56,909
necessarily using just any of these as a

688
00:25:56,909 --> 00:25:58,049
replacement we do the

689
00:25:58,049 --> 00:25:59,369
belt-and-suspenders approach because we

690
00:25:59,369 --> 00:26:01,230
think that we would need we have more

691
00:26:01,230 --> 00:26:02,879
confidence in the older problems in

692
00:26:02,879 --> 00:26:05,489
cryptography old is really good I keep

693
00:26:05,489 --> 00:26:06,989
telling my younger developers that old

694
00:26:06,989 --> 00:26:10,619
is good we want problems to be studied

695
00:26:10,619 --> 00:26:12,450
for a long time and we want folks to be

696
00:26:12,450 --> 00:26:14,190
able to have caught and we build

697
00:26:14,190 --> 00:26:15,600
confidence and problems by actually

698
00:26:15,600 --> 00:26:18,179
trying to break them and failing okay so

699
00:26:18,179 --> 00:26:19,169
we're going to try and improve our

700
00:26:19,169 --> 00:26:20,639
classical attacks we have to pick

701
00:26:20,639 --> 00:26:22,139
parameter sizes and there's a lot of

702
00:26:22,139 --> 00:26:24,090
engineering trade-offs if you choose

703
00:26:24,090 --> 00:26:25,590
your problem too big you end up spending

704
00:26:25,590 --> 00:26:27,690
sending too much data and you slow down

705
00:26:27,690 --> 00:26:29,999
too much for the amount of security that

706
00:26:29,999 --> 00:26:32,399
you want to be competitive if you don't

707
00:26:32,399 --> 00:26:33,989
choose your parameters big enough to try

708
00:26:33,989 --> 00:26:36,509
to speed things up you might get broken

709
00:26:36,509 --> 00:26:38,940
quickly and there's a lot of tension in

710
00:26:38,940 --> 00:26:40,080
that and this is something that NIST

711
00:26:40,080 --> 00:26:41,609
deals with did in their process in the

712
00:26:41,609 --> 00:26:44,279
AES competition there was the the

713
00:26:44,279 --> 00:26:46,100
algorithm Rhine ball which became AES

714
00:26:46,100 --> 00:26:48,720
actually got submitted with more

715
00:26:48,720 --> 00:26:50,609
encryption rounds in it than what NIST

716
00:26:50,609 --> 00:26:52,109
ended up standardizing on because NIST

717
00:26:52,109 --> 00:26:54,210
was worried about the overall time now

718
00:26:54,210 --> 00:26:56,519
at the end of the day instructions got

719
00:26:56,519 --> 00:26:58,289
put into CPUs for doing that and it was

720
00:26:58,289 --> 00:27:00,629
less of a concern because your Intel

721
00:27:00,629 --> 00:27:02,100
processor for example has an AES

722
00:27:02,100 --> 00:27:05,039
instruction but it's one of the things

723
00:27:05,039 --> 00:27:07,049
you have to weigh in trade-off you want

724
00:27:07,049 --> 00:27:07,919
to develop fast and secure

725
00:27:07,919 --> 00:27:09,509
implementations that's not necessarily

726
00:27:09,509 --> 00:27:11,820
the easiest thing to do and then you

727
00:27:11,820 --> 00:27:13,139
want to try to integrate them and test

728
00:27:13,139 --> 00:27:15,539
them out in things like TLS and see how

729
00:27:15,539 --> 00:27:17,429
well it runs and figure out where your

730
00:27:17,429 --> 00:27:19,070
software stacks are going to break

731
00:27:19,070 --> 00:27:21,960
because your certificates may be larger

732
00:27:21,960 --> 00:27:23,669
or it may take a lot longer to do a

733
00:27:23,669 --> 00:27:25,200
setup when you're trying to negotiate an

734
00:27:25,200 --> 00:27:27,809
IPSec connection or things like that all

735
00:27:27,809 --> 00:27:30,419
right so let me briefly talk about ah

736
00:27:30,419 --> 00:27:33,269
three schemes and just give you a taste

737
00:27:33,269 --> 00:27:35,730
for what's going on here and they're

738
00:27:35,730 --> 00:27:40,019
called frodo cid h and picnic because we

739
00:27:40,019 --> 00:27:42,899
have to have cute names for things let's

740
00:27:42,899 --> 00:27:44,730
start with frodo which is our learning

741
00:27:44,730 --> 00:27:47,940
with errors key exchange now why is it

742
00:27:47,940 --> 00:27:48,779
call Frodo

743
00:27:48,779 --> 00:27:51,749
it's called Frodo because a four of the

744
00:27:51,749 --> 00:27:54,359
folks on this list originally did a ring

745
00:27:54,359 --> 00:27:57,059
based learning with error scheme that

746
00:27:57,059 --> 00:27:59,039
they integrated an OpenSSL as a proof of

747
00:27:59,039 --> 00:28:00,870
concept that got improved by

748
00:28:00,870 --> 00:28:01,950
another group into something called New

749
00:28:01,950 --> 00:28:03,870
Hope which is sort of the leading ring

750
00:28:03,870 --> 00:28:06,960
based scheme but the ring adds algebraic

751
00:28:06,960 --> 00:28:09,480
structure so of course we want to

752
00:28:09,480 --> 00:28:13,680
attempt to get rid of the ring okay

753
00:28:13,680 --> 00:28:16,920
thus Frodo thus humor among

754
00:28:16,920 --> 00:28:22,140
cryptographers okay so this is a this is

755
00:28:22,140 --> 00:28:24,600
a collaborate clean researchers in my

756
00:28:24,600 --> 00:28:27,540
own organization at Microsoft Google nxp

757
00:28:27,540 --> 00:28:29,700
CWI in the Netherlands McMaster in

758
00:28:29,700 --> 00:28:31,830
Canada and Stanford University and this

759
00:28:31,830 --> 00:28:33,600
will be sort of one of the schemes that

760
00:28:33,600 --> 00:28:36,980
we submit to the to the nist competition

761
00:28:36,980 --> 00:28:39,120
the nice thing about these lattice

762
00:28:39,120 --> 00:28:42,179
schemes are that they're fast and that

763
00:28:42,179 --> 00:28:43,800
they're very competitive when in terms

764
00:28:43,800 --> 00:28:45,929
of speed when you compare them to what

765
00:28:45,929 --> 00:28:47,760
you're using today for RSA and elliptic

766
00:28:47,760 --> 00:28:48,929
curves and i'll show you some numbers in

767
00:28:48,929 --> 00:28:51,450
a bit the downside is that the keys are

768
00:28:51,450 --> 00:28:54,840
relatively large and the assumptions

769
00:28:54,840 --> 00:28:56,429
that we have made in software stacks

770
00:28:56,429 --> 00:28:58,290
today about the size of our signature

771
00:28:58,290 --> 00:29:00,210
keys or our encryption keys don't

772
00:29:00,210 --> 00:29:01,679
necessarily hold when we're looking at

773
00:29:01,679 --> 00:29:05,490
this problem so fast but large um okay

774
00:29:05,490 --> 00:29:07,020
this is the this is the most math I'll

775
00:29:07,020 --> 00:29:09,390
put on a slide at least for this scheme

776
00:29:09,390 --> 00:29:12,270
arm the basic idea in a lattice scheme

777
00:29:12,270 --> 00:29:13,559
and I'm going to walk you through a toy

778
00:29:13,559 --> 00:29:16,790
example in a minute is we are choosing

779
00:29:16,790 --> 00:29:19,080
samples and we're doing basically linear

780
00:29:19,080 --> 00:29:20,580
algebra but adding a little bit of error

781
00:29:20,580 --> 00:29:23,040
to it and I'm asking you to distinguish

782
00:29:23,040 --> 00:29:25,020
between whether or not I actually did

783
00:29:25,020 --> 00:29:26,490
linear algebra and added a little bit of

784
00:29:26,490 --> 00:29:28,410
error or whether I picked some values at

785
00:29:28,410 --> 00:29:31,230
random and that's a hard problem to

786
00:29:31,230 --> 00:29:33,090
actually distinguish and we can use that

787
00:29:33,090 --> 00:29:37,260
as the basis to build a scheme the best

788
00:29:37,260 --> 00:29:38,880
known attack against this class of

789
00:29:38,880 --> 00:29:41,309
problem are the set of algorithms like

790
00:29:41,309 --> 00:29:43,890
lll that try to find the shortest vector

791
00:29:43,890 --> 00:29:48,420
in a lattice and we can build post

792
00:29:48,420 --> 00:29:50,220
quantum security of at least 130 bits of

793
00:29:50,220 --> 00:29:53,040
security that's comparable to AES 128 in

794
00:29:53,040 --> 00:29:54,960
the classical realm and we get 144 bits

795
00:29:54,960 --> 00:29:57,120
of classical security what's this thing

796
00:29:57,120 --> 00:29:58,710
looked like now let me show you the toy

797
00:29:58,710 --> 00:30:00,600
example this is equivalent to doing RSA

798
00:30:00,600 --> 00:30:04,800
with like 21 is 3 times 7 arm the

799
00:30:04,800 --> 00:30:06,000
fundamental problem here is I'm going to

800
00:30:06,000 --> 00:30:07,050
ask you to solve a system of linear

801
00:30:07,050 --> 00:30:10,020
equations you choose a public matrix in

802
00:30:10,020 --> 00:30:12,990
blue I have a secret little element in

803
00:30:12,990 --> 00:30:13,610
red

804
00:30:13,610 --> 00:30:15,650
and I multiply and I tell you what the

805
00:30:15,650 --> 00:30:19,430
answer is now if I give you the blue

806
00:30:19,430 --> 00:30:21,170
boxes and I ask you to find the red

807
00:30:21,170 --> 00:30:23,750
boxes you'd all have to go back and

808
00:30:23,750 --> 00:30:25,010
think through your basic linear algebra

809
00:30:25,010 --> 00:30:26,930
that we've all forgotten for many years

810
00:30:26,930 --> 00:30:28,940
ago but that's actually doable that

811
00:30:28,940 --> 00:30:31,340
that's Gaussian elimination that is an

812
00:30:31,340 --> 00:30:33,440
easy problem to solve and even though I

813
00:30:33,440 --> 00:30:36,350
am doing that mod thirteen that's an

814
00:30:36,350 --> 00:30:41,000
easy problem to solve okay okay trust me

815
00:30:41,000 --> 00:30:42,320
it's it's relatively easy as these

816
00:30:42,320 --> 00:30:48,770
things go okay okay it's as these things

817
00:30:48,770 --> 00:30:51,800
go it's easy armed now I'm going to make

818
00:30:51,800 --> 00:30:55,160
it harder and I'm going to add a very

819
00:30:55,160 --> 00:30:58,430
small vector of error terms a little bit

820
00:30:58,430 --> 00:31:00,800
of noise not a lot of noise just a

821
00:31:00,800 --> 00:31:02,690
little bit of noise sampled from a

822
00:31:02,690 --> 00:31:05,300
Gaussian distribution and I'm going to

823
00:31:05,300 --> 00:31:06,800
say okay I'm going to take my matrix

824
00:31:06,800 --> 00:31:08,900
that's public I have my secret value I

825
00:31:08,900 --> 00:31:10,820
sample some error that gets mixed in and

826
00:31:10,820 --> 00:31:12,050
I give you the answer back on the right

827
00:31:12,050 --> 00:31:15,980
hand side and now there's two problems

828
00:31:15,980 --> 00:31:17,570
there's a computational problem and a

829
00:31:17,570 --> 00:31:19,760
different and a decision problem the

830
00:31:19,760 --> 00:31:21,380
computational problem is if I give you

831
00:31:21,380 --> 00:31:22,760
the blue elements and I tell you that

832
00:31:22,760 --> 00:31:24,680
there is a secret red and some noise can

833
00:31:24,680 --> 00:31:27,140
you find the red and that's equivalent

834
00:31:27,140 --> 00:31:29,090
to basically I can cast this in lattice

835
00:31:29,090 --> 00:31:31,070
terms I can cast it in matrix terms here

836
00:31:31,070 --> 00:31:33,590
can you figure out what the red is where

837
00:31:33,590 --> 00:31:35,450
the where the yellow is restricted to

838
00:31:35,450 --> 00:31:36,920
being sampled off a particular small

839
00:31:36,920 --> 00:31:39,800
error distribution that's hard the

840
00:31:39,800 --> 00:31:43,580
equivalent decision problem is if I give

841
00:31:43,580 --> 00:31:46,520
you the green and I give you the blue

842
00:31:46,520 --> 00:31:48,770
can you tell me whether the green was

843
00:31:48,770 --> 00:31:50,240
actually computed this way or did I just

844
00:31:50,240 --> 00:31:51,710
make the green up and choose random

845
00:31:51,710 --> 00:31:55,370
values okay that's actually hard that

846
00:31:55,370 --> 00:31:56,540
decision problem is hard the

847
00:31:56,540 --> 00:31:59,300
computations problem is hard and we can

848
00:31:59,300 --> 00:32:03,620
use that difficulty to cast to make up

849
00:32:03,620 --> 00:32:06,170
to make a public key scheme now I'm not

850
00:32:06,170 --> 00:32:07,430
going to actually do it with seven by

851
00:32:07,430 --> 00:32:09,560
four matrices over mod thirteen that's a

852
00:32:09,560 --> 00:32:13,580
toy example okay what I'm going to do it

853
00:32:13,580 --> 00:32:15,080
over is something in the real world

854
00:32:15,080 --> 00:32:18,410
where I'm doing 752 by 8 over 16-bit

855
00:32:18,410 --> 00:32:20,420
values and I'm sending about 11

856
00:32:20,420 --> 00:32:22,400
kilobytes of data across the matrix and

857
00:32:22,400 --> 00:32:25,640
that blue is basically the public key so

858
00:32:25,640 --> 00:32:27,410
now I'm talking about instead of an RS

859
00:32:27,410 --> 00:32:32,300
a 2048-bit value or a 4096 bit value I'm

860
00:32:32,300 --> 00:32:34,910
talking about 11 kilobytes of data and

861
00:32:34,910 --> 00:32:36,050
that's fast

862
00:32:36,050 --> 00:32:38,090
that's fast but that's kind of one of

863
00:32:38,090 --> 00:32:39,800
the problems we'll work on now let me

864
00:32:39,800 --> 00:32:41,540
give you the other side of what we're

865
00:32:41,540 --> 00:32:43,490
you know another example of a way that

866
00:32:43,490 --> 00:32:44,720
the problem spins a different way

867
00:32:44,720 --> 00:32:47,450
small but slow and this is what we call

868
00:32:47,450 --> 00:32:49,280
Sid H which is super single oddity

869
00:32:49,280 --> 00:32:52,010
diffie-hellman okay that's probably a

870
00:32:52,010 --> 00:32:54,410
scary term but let me explain what we're

871
00:32:54,410 --> 00:32:55,480
doing here this is a different

872
00:32:55,480 --> 00:32:57,440
collaboration you'll notice that it was

873
00:32:57,440 --> 00:32:59,210
Microsoft and Google on one of them it's

874
00:32:59,210 --> 00:33:00,950
I've got some folks from Amazon on this

875
00:33:00,950 --> 00:33:02,780
one who are working with us along with

876
00:33:02,780 --> 00:33:04,190
researchers at Waterloo and Versailles

877
00:33:04,190 --> 00:33:07,490
and Rob out University and here we're

878
00:33:07,490 --> 00:33:09,320
looking at a different type of problem

879
00:33:09,320 --> 00:33:11,690
on elliptic curves so those of you who

880
00:33:11,690 --> 00:33:13,730
may have seen elliptic curves and the

881
00:33:13,730 --> 00:33:16,070
pictures of how I do point addition it's

882
00:33:16,070 --> 00:33:18,020
a similar sort of problem what I'm

883
00:33:18,020 --> 00:33:21,140
trying to do is build a different type

884
00:33:21,140 --> 00:33:24,020
of diffie-hellman on it and I get small

885
00:33:24,020 --> 00:33:27,590
keys but it's relatively slow and here's

886
00:33:27,590 --> 00:33:29,900
the though okay so a little bit more

887
00:33:29,900 --> 00:33:34,070
math that I promised arm the basic idea

888
00:33:34,070 --> 00:33:38,330
in um in Supercenter scientific helmet

889
00:33:38,330 --> 00:33:41,120
is I take two elliptic curves that have

890
00:33:41,120 --> 00:33:43,250
the same order and are not identical but

891
00:33:43,250 --> 00:33:45,830
are similar in structure and I am trying

892
00:33:45,830 --> 00:33:47,360
and I'm playing with mappings from one

893
00:33:47,360 --> 00:33:49,130
curve to the other that maintain the

894
00:33:49,130 --> 00:33:50,840
structure you might remember when you

895
00:33:50,840 --> 00:33:53,330
took an algorithms class those all those

896
00:33:53,330 --> 00:33:55,160
problems that you had to show where I've

897
00:33:55,160 --> 00:33:56,870
got a graph and I've got another graph

898
00:33:56,870 --> 00:33:58,640
and the graphs aren't identical but they

899
00:33:58,640 --> 00:34:00,050
have the same structure and I can show

900
00:34:00,050 --> 00:34:02,480
if I do a cyclic path and one it maps to

901
00:34:02,480 --> 00:34:04,700
a cyclic path and another it's kind of a

902
00:34:04,700 --> 00:34:06,800
similar sort of scheme here except I'm

903
00:34:06,800 --> 00:34:08,690
doing this over curves that are a very

904
00:34:08,690 --> 00:34:11,659
high order and I am trying to show

905
00:34:11,659 --> 00:34:16,100
mappings and the analogy to thinking

906
00:34:16,100 --> 00:34:17,510
about this to what you may have seen

907
00:34:17,510 --> 00:34:19,280
with diffie-hellman is if I'm doing

908
00:34:19,280 --> 00:34:21,918
diffie-hellman over finite fields Alice

909
00:34:21,918 --> 00:34:23,989
and Bob each use a secret exponent and

910
00:34:23,989 --> 00:34:26,840
the hard problem is to do a discrete log

911
00:34:26,840 --> 00:34:29,960
right Alice chooses a secret and raises

912
00:34:29,960 --> 00:34:31,639
a generator to her secret sends it to

913
00:34:31,639 --> 00:34:33,650
the other side Bob takes that and raise

914
00:34:33,650 --> 00:34:34,760
it to his secret power and they've

915
00:34:34,760 --> 00:34:37,130
agreed because G to the a to the B is G

916
00:34:37,130 --> 00:34:39,918
to the B to the a in elliptic curves we

917
00:34:39,918 --> 00:34:41,360
do a complete it's an

918
00:34:41,360 --> 00:34:43,100
that acceptance point addition on

919
00:34:43,100 --> 00:34:45,440
elliptic curves in this space we're

920
00:34:45,440 --> 00:34:47,120
doing the same thing with isogen YZ

921
00:34:47,120 --> 00:34:49,550
we're applying two maps to elliptic

922
00:34:49,550 --> 00:34:54,860
curves and if I gave you a diagram like

923
00:34:54,860 --> 00:34:56,690
a diffie-hellman diagram everybody

924
00:34:56,690 --> 00:34:58,970
starts with a public curvy zero Alice

925
00:34:58,970 --> 00:35:01,040
moves horizontally Bob moves vertically

926
00:35:01,040 --> 00:35:04,130
so Alice has some secret map gets a

927
00:35:04,130 --> 00:35:06,830
curve Bob has a secret map five B gets a

928
00:35:06,830 --> 00:35:09,500
curve and then they swap information and

929
00:35:09,500 --> 00:35:11,570
they end up at the point in the lower

930
00:35:11,570 --> 00:35:13,430
right but they've only they have not

931
00:35:13,430 --> 00:35:15,170
passed enough information publicly to

932
00:35:15,170 --> 00:35:17,000
let anybody who only sees the

933
00:35:17,000 --> 00:35:19,400
information going across the wire to

934
00:35:19,400 --> 00:35:22,100
compute that and I'm simplifying here a

935
00:35:22,100 --> 00:35:25,460
bunch but basically we are able to use

936
00:35:25,460 --> 00:35:27,950
this property of mapping between curves

937
00:35:27,950 --> 00:35:30,350
of similar structures to build up a

938
00:35:30,350 --> 00:35:32,630
similar analogy to what we do with

939
00:35:32,630 --> 00:35:35,900
diffie-hellman now now we can set that

940
00:35:35,900 --> 00:35:37,070
aside let's look at some performance

941
00:35:37,070 --> 00:35:38,270
numbers and think about what the

942
00:35:38,270 --> 00:35:41,900
trade-offs are if I'm running RSA today

943
00:35:41,900 --> 00:35:44,150
with three kilobit keys I chose three

944
00:35:44,150 --> 00:35:45,410
kilobits just to give you something that

945
00:35:45,410 --> 00:35:47,300
was roughly the same size as this on a

946
00:35:47,300 --> 00:35:50,450
good implementation on a core i7 running

947
00:35:50,450 --> 00:35:53,210
at three and a half 3.4 gigahertz takes

948
00:35:53,210 --> 00:35:55,340
me 4 and 1/2 milliseconds to do an RSA

949
00:35:55,340 --> 00:35:57,910
key exchange and I end up sending about

950
00:35:57,910 --> 00:36:01,910
384 bytes each way on the wire Alice to

951
00:36:01,910 --> 00:36:04,550
Bob and Bob to Alice if I go to elliptic

952
00:36:04,550 --> 00:36:05,900
curve and this is part of the reason why

953
00:36:05,900 --> 00:36:07,640
cell phones tend to use elliptic curves

954
00:36:07,640 --> 00:36:10,730
I can do equivalent security strength in

955
00:36:10,730 --> 00:36:12,710
1.4 milliseconds and I'm only sending 32

956
00:36:12,710 --> 00:36:16,130
bytes each way I don't have anything

957
00:36:16,130 --> 00:36:18,500
that makes both the time requirements

958
00:36:18,500 --> 00:36:20,240
and the size requirements with any of

959
00:36:20,240 --> 00:36:22,640
the problems that we're looking at so if

960
00:36:22,640 --> 00:36:24,710
you take New Hope which is are the best

961
00:36:24,710 --> 00:36:26,930
sort of ring based lwe scheme out there

962
00:36:26,930 --> 00:36:28,970
it's really fast but it's sending 2

963
00:36:28,970 --> 00:36:32,030
kilobytes of data across each way you

964
00:36:32,030 --> 00:36:34,100
take Frodo worried about the same speed

965
00:36:34,100 --> 00:36:37,250
is e C D H but I'm sending 11 kilobytes

966
00:36:37,250 --> 00:36:40,100
of data across the wire if I go to Sid H

967
00:36:40,100 --> 00:36:42,290
I can get down to 500 bytes of data

968
00:36:42,290 --> 00:36:43,580
that's great but it's going to take me

969
00:36:43,580 --> 00:36:46,670
56 milliseconds and now we think we

970
00:36:46,670 --> 00:36:48,290
might be able to another factor 5 out of

971
00:36:48,290 --> 00:36:49,430
that but we're not going to be able to

972
00:36:49,430 --> 00:36:51,590
necessarily hit the times so if I am

973
00:36:51,590 --> 00:36:53,060
looking at deploying this into an

974
00:36:53,060 --> 00:36:54,680
existing system part of

975
00:36:54,680 --> 00:36:58,220
challenges I may not have the I may have

976
00:36:58,220 --> 00:37:00,110
made engineering assumptions in my

977
00:37:00,110 --> 00:37:01,730
implementations that I'm about to go

978
00:37:01,730 --> 00:37:04,690
break when I try to deploy one of these

979
00:37:04,690 --> 00:37:07,340
the situation gets a little bit worse in

980
00:37:07,340 --> 00:37:09,230
signatures and let me talk about picnic

981
00:37:09,230 --> 00:37:11,810
which is our code name for post quantum

982
00:37:11,810 --> 00:37:13,180
non-interactive zero-knowledge

983
00:37:13,180 --> 00:37:16,850
picnics a lot nicer um this is another

984
00:37:16,850 --> 00:37:19,370
collaboration where researchers at

985
00:37:19,370 --> 00:37:21,620
Microsoft are working with four other

986
00:37:21,620 --> 00:37:24,710
institutions to come up with a signature

987
00:37:24,710 --> 00:37:26,450
scheme that actually isn't based on any

988
00:37:26,450 --> 00:37:29,090
number theoretic problems the way to

989
00:37:29,090 --> 00:37:30,860
think about this scheme is that we are

990
00:37:30,860 --> 00:37:32,990
using the hard problems of finding hash

991
00:37:32,990 --> 00:37:35,150
collisions and we all know about hash

992
00:37:35,150 --> 00:37:36,560
collisions because we've seen hash

993
00:37:36,560 --> 00:37:38,420
collision attacks get used in places and

994
00:37:38,420 --> 00:37:41,240
we understand how you know the how sha-1

995
00:37:41,240 --> 00:37:42,530
has now fallen because it's been

996
00:37:42,530 --> 00:37:44,060
demonstrated at actual collision and

997
00:37:44,060 --> 00:37:46,130
sha-1 has been demonstrated and if you

998
00:37:46,130 --> 00:37:47,930
have knowledge of a block cipher key or

999
00:37:47,930 --> 00:37:50,030
you have knowledge of a hash collision

1000
00:37:50,030 --> 00:37:52,340
or a hash preimage we can actually build

1001
00:37:52,340 --> 00:37:54,230
that using a whole bunch of heavy

1002
00:37:54,230 --> 00:37:57,470
lifting in theoretical cryptography to

1003
00:37:57,470 --> 00:37:58,430
build something called a zero knowledge

1004
00:37:58,430 --> 00:38:01,150
proof and a zero knowledge proof is

1005
00:38:01,150 --> 00:38:04,250
exactly kind of what it sounds like I'm

1006
00:38:04,250 --> 00:38:05,900
able to prove convince you that I know

1007
00:38:05,900 --> 00:38:08,570
some secret without actually showing you

1008
00:38:08,570 --> 00:38:11,450
the secret and there's a whole body of

1009
00:38:11,450 --> 00:38:14,960
theoretical work in this space and what

1010
00:38:14,960 --> 00:38:18,950
we do is we are able to conduct they

1011
00:38:18,950 --> 00:38:21,470
start as interactive so I can convince

1012
00:38:21,470 --> 00:38:23,060
you I'm going to prove to you that I

1013
00:38:23,060 --> 00:38:26,090
know a fact you may query me a bunch of

1014
00:38:26,090 --> 00:38:27,740
you ask me a bunch of questions and I'm

1015
00:38:27,740 --> 00:38:29,660
able to only answer them and convince

1016
00:38:29,660 --> 00:38:31,250
you of that fact in multiple rounds if I

1017
00:38:31,250 --> 00:38:32,900
know the secret but I don't actually

1018
00:38:32,900 --> 00:38:35,270
relate to you the contents of the secret

1019
00:38:35,270 --> 00:38:37,610
itself that was kind of where zero

1020
00:38:37,610 --> 00:38:39,230
knowledge proof started and then in the

1021
00:38:39,230 --> 00:38:41,450
cryptographic theory space they turned

1022
00:38:41,450 --> 00:38:42,860
in a non-interactive where you sort of

1023
00:38:42,860 --> 00:38:45,680
capture all of the rounds into a package

1024
00:38:45,680 --> 00:38:48,140
and you can send the entire proof across

1025
00:38:48,140 --> 00:38:50,300
with many rounds of this of

1026
00:38:50,300 --> 00:38:52,040
interactivity sort of packaged up into

1027
00:38:52,040 --> 00:38:55,730
one non interactive send and we can do

1028
00:38:55,730 --> 00:38:58,100
that and build a signature scheme out of

1029
00:38:58,100 --> 00:39:00,650
that and we actually have code and we've

1030
00:39:00,650 --> 00:39:02,090
demonstrated this work in an open SSL

1031
00:39:02,090 --> 00:39:08,630
and it's slow and it's big so there's an

1032
00:39:08,630 --> 00:39:12,170
RSA 4096 bit signature if you were doing

1033
00:39:12,170 --> 00:39:14,990
that let's say you're a root CA that's a

1034
00:39:14,990 --> 00:39:16,790
common key size that you'd use for your

1035
00:39:16,790 --> 00:39:19,880
ca right Microsoft's roots are all 4096

1036
00:39:19,880 --> 00:39:21,800
bit RSA keys takes about six

1037
00:39:21,800 --> 00:39:23,720
milliseconds to sign with a good RSA

1038
00:39:23,720 --> 00:39:25,820
operation verifications very quick

1039
00:39:25,820 --> 00:39:27,740
because that's part of the way that the

1040
00:39:27,740 --> 00:39:29,570
trade-off works in RSA if you choose

1041
00:39:29,570 --> 00:39:32,420
your encryption exponent and properly

1042
00:39:32,420 --> 00:39:34,700
and you send about 512 bytes of data

1043
00:39:34,700 --> 00:39:37,820
across our schemes are currently you

1044
00:39:37,820 --> 00:39:39,320
know ten times slower five ten times

1045
00:39:39,320 --> 00:39:41,720
slower twenty-nine milliseconds 17

1046
00:39:41,720 --> 00:39:43,700
milliseconds one verify but I got to

1047
00:39:43,700 --> 00:39:46,090
send 120 kilobytes of signature across

1048
00:39:46,090 --> 00:39:48,410
now that hundred twenty-five kilobytes

1049
00:39:48,410 --> 00:39:51,580
of signature turns into a really large

1050
00:39:51,580 --> 00:39:55,490
x.509 server certificate open ssl we'll

1051
00:39:55,490 --> 00:39:57,920
deal with it but other systems may not

1052
00:39:57,920 --> 00:40:00,260
necessarily expect so and if you just

1053
00:40:00,260 --> 00:40:01,880
kind of throw those around because we

1054
00:40:01,880 --> 00:40:03,890
have made implicit assumptions about the

1055
00:40:03,890 --> 00:40:05,870
sizes of our authentication information

1056
00:40:05,870 --> 00:40:08,450
that may no longer hold now it gets even

1057
00:40:08,450 --> 00:40:10,130
worse for some of the other schemes this

1058
00:40:10,130 --> 00:40:12,080
is just a sampling of some of the

1059
00:40:12,080 --> 00:40:13,610
alternative post quantum schemes that

1060
00:40:13,610 --> 00:40:14,690
are currently floating around that

1061
00:40:14,690 --> 00:40:16,610
people are considering and you can see

1062
00:40:16,610 --> 00:40:19,220
that some of them want to send megabyte

1063
00:40:19,220 --> 00:40:21,530
keys across some of them want to spend

1064
00:40:21,530 --> 00:40:24,620
73 seconds to do computations I don't

1065
00:40:24,620 --> 00:40:27,410
think you really want to do that there's

1066
00:40:27,410 --> 00:40:29,180
trade-offs here and part of what's going

1067
00:40:29,180 --> 00:40:30,680
to get sussed out is in the

1068
00:40:30,680 --> 00:40:33,260
standardization effort is how do we pick

1069
00:40:33,260 --> 00:40:34,970
what the best trade-off is and there may

1070
00:40:34,970 --> 00:40:36,470
not be a single answer and depending on

1071
00:40:36,470 --> 00:40:38,060
upon what your engineering situation is

1072
00:40:38,060 --> 00:40:39,620
like you may have a very different

1073
00:40:39,620 --> 00:40:42,770
situation for example if you've got very

1074
00:40:42,770 --> 00:40:44,480
low bandwidth you may be willing to

1075
00:40:44,480 --> 00:40:46,760
spend a lot of time computing to send

1076
00:40:46,760 --> 00:40:49,310
very few bits across and with this cheap

1077
00:40:49,310 --> 00:40:51,410
but your compute power isn't you choose

1078
00:40:51,410 --> 00:40:55,550
a different sort of thing okay so now I

1079
00:40:55,550 --> 00:40:57,020
want to spend a little bit of time about

1080
00:40:57,020 --> 00:40:59,630
what do I think is going to happen sort

1081
00:40:59,630 --> 00:41:04,250
of looking ahead here ah and where do I

1082
00:41:04,250 --> 00:41:07,760
think things are going to go let me

1083
00:41:07,760 --> 00:41:11,480
first start with it's great to play with

1084
00:41:11,480 --> 00:41:13,100
these in the lab but until you actually

1085
00:41:13,100 --> 00:41:14,810
deploy them in real systems nothing

1086
00:41:14,810 --> 00:41:17,150
really matters so the first thing

1087
00:41:17,150 --> 00:41:18,800
everybody does is say let's do an

1088
00:41:18,800 --> 00:41:20,450
implementation we think the implication

1089
00:41:20,450 --> 00:41:22,490
is secure let's go try to

1090
00:41:22,490 --> 00:41:23,690
deploy it in the system and where's

1091
00:41:23,690 --> 00:41:27,560
everyone go first OpenSSL why because 99

1092
00:41:27,560 --> 00:41:29,810
and 44 100% of the internet secured over

1093
00:41:29,810 --> 00:41:33,170
TLS and that's the open-source

1094
00:41:33,170 --> 00:41:35,300
implementation or variants of open SSL

1095
00:41:35,300 --> 00:41:36,680
that everybody uses

1096
00:41:36,680 --> 00:41:38,240
so everybody plugs in there and sees how

1097
00:41:38,240 --> 00:41:40,010
well it works and these are numbers off

1098
00:41:40,010 --> 00:41:41,600
of saying off a test that we did and

1099
00:41:41,600 --> 00:41:44,060
integrating these various schemes into

1100
00:41:44,060 --> 00:41:46,400
open SSL with Apache on the server side

1101
00:41:46,400 --> 00:41:48,530
and all the code on this is available

1102
00:41:48,530 --> 00:41:51,440
I've got links at the end on it the key

1103
00:41:51,440 --> 00:41:53,060
point I want you to take away from this

1104
00:41:53,060 --> 00:41:56,060
is really simple this orange line here

1105
00:41:56,060 --> 00:41:57,860
is what we're all doing today with

1106
00:41:57,860 --> 00:42:00,320
elliptic curves and I've got one byte

1107
00:42:00,320 --> 00:42:03,140
kilobyte 10 and 100 kilobyte payloads in

1108
00:42:03,140 --> 00:42:05,420
terms of connections per second that I

1109
00:42:05,420 --> 00:42:07,310
can actually do using that scheme so

1110
00:42:07,310 --> 00:42:10,040
higher is better here that orange line

1111
00:42:10,040 --> 00:42:12,680
is sort of your baseline if you're

1112
00:42:12,680 --> 00:42:14,690
willing to throw away the classical

1113
00:42:14,690 --> 00:42:16,280
scheme where you today and just go with

1114
00:42:16,280 --> 00:42:17,420
the ring learning with eret you can

1115
00:42:17,420 --> 00:42:20,240
actually go faster but none of us

1116
00:42:20,240 --> 00:42:22,220
believe that that's actually got enough

1117
00:42:22,220 --> 00:42:25,369
maturity yet to do that so we're looking

1118
00:42:25,369 --> 00:42:27,560
at combination schemes where we would do

1119
00:42:27,560 --> 00:42:29,930
both belt-and-suspenders we would do

1120
00:42:29,930 --> 00:42:31,490
what we currently do today mixed with

1121
00:42:31,490 --> 00:42:33,890
the post quantum scheme in there we slow

1122
00:42:33,890 --> 00:42:36,320
down a little bit with some of our non

1123
00:42:36,320 --> 00:42:38,150
ring schemes we slow down a little bit

1124
00:42:38,150 --> 00:42:40,250
more entries another competitor out

1125
00:42:40,250 --> 00:42:43,400
there they're a little bit slower but at

1126
00:42:43,400 --> 00:42:46,580
most I'm paying a factor to cost if I

1127
00:42:46,580 --> 00:42:48,830
had to deploy an algorithm today and I

1128
00:42:48,830 --> 00:42:51,050
had to make my best guess I do have

1129
00:42:51,050 --> 00:42:52,670
things that we could put into the

1130
00:42:52,670 --> 00:42:55,520
OpenSSL stack and kind of put out we

1131
00:42:55,520 --> 00:42:57,080
would have to pay a performance cost on

1132
00:42:57,080 --> 00:42:58,880
doing that and we wouldn't know really

1133
00:42:58,880 --> 00:43:01,190
enough about the security of it but if

1134
00:43:01,190 --> 00:43:02,900
you said Brian we have to deploy

1135
00:43:02,900 --> 00:43:04,160
something today there are some

1136
00:43:04,160 --> 00:43:05,930
trade-offs and you could and we could do

1137
00:43:05,930 --> 00:43:10,070
something and open SSL hat we have

1138
00:43:10,070 --> 00:43:12,080
demonstrated we've actually got a full

1139
00:43:12,080 --> 00:43:13,369
demonstration with all of our algorithms

1140
00:43:13,369 --> 00:43:16,040
using the signature scheme as well and I

1141
00:43:16,040 --> 00:43:18,560
can do an open SSL and n handshake and

1142
00:43:18,560 --> 00:43:20,869
the code works pass is more data across

1143
00:43:20,869 --> 00:43:23,600
the certificates are a lot larger but we

1144
00:43:23,600 --> 00:43:27,859
can actually make that go now

1145
00:43:27,859 --> 00:43:30,800
okay everybody starts with open SSL but

1146
00:43:30,800 --> 00:43:33,310
there is more to the world than just TLS

1147
00:43:33,310 --> 00:43:36,770
ok um and I don't just mean I

1148
00:43:36,770 --> 00:43:39,220
and s mom and things like that so

1149
00:43:39,220 --> 00:43:41,600
everyone had started by doing their own

1150
00:43:41,600 --> 00:43:43,220
patches and there's lots of patches to

1151
00:43:43,220 --> 00:43:45,260
OpenSSL out and then Douglas stability

1152
00:43:45,260 --> 00:43:46,550
master said this is really kind of

1153
00:43:46,550 --> 00:43:47,090
stupid

1154
00:43:47,090 --> 00:43:50,300
why don't we define one API for everyone

1155
00:43:50,300 --> 00:43:51,680
to plug their post quantum schemes in

1156
00:43:51,680 --> 00:43:52,730
and then we'll integrate that into

1157
00:43:52,730 --> 00:43:53,930
everything so he started something

1158
00:43:53,930 --> 00:43:56,090
called the open quantum safe project

1159
00:43:56,090 --> 00:43:58,340
it's public it's up on github it's a

1160
00:43:58,340 --> 00:44:00,290
common API for all of these schemes and

1161
00:44:00,290 --> 00:44:02,600
we and now lots of other teams are

1162
00:44:02,600 --> 00:44:04,370
plugging into open quantum safe and then

1163
00:44:04,370 --> 00:44:06,320
we integrate that into things like open

1164
00:44:06,320 --> 00:44:10,160
SSL OpenSSH we just finished doing key

1165
00:44:10,160 --> 00:44:12,370
exchange on that codes coming shortly

1166
00:44:12,370 --> 00:44:15,200
and we're looking at integrating the

1167
00:44:15,200 --> 00:44:18,590
standard API into a lot of other

1168
00:44:18,590 --> 00:44:20,270
protocols as we need them to kind of

1169
00:44:20,270 --> 00:44:22,730
make things available and all of our all

1170
00:44:22,730 --> 00:44:24,290
of the things I've talked about so far

1171
00:44:24,290 --> 00:44:26,660
and other schemes from other teams are

1172
00:44:26,660 --> 00:44:29,000
available through this so if anyone in

1173
00:44:29,000 --> 00:44:31,040
here is actually looking at wanting to

1174
00:44:31,040 --> 00:44:33,860
play with this code start with oqs up on

1175
00:44:33,860 --> 00:44:35,330
on github and then start there because

1176
00:44:35,330 --> 00:44:36,560
that'll be your easiest way to start

1177
00:44:36,560 --> 00:44:38,480
integrating in a lot of different

1178
00:44:38,480 --> 00:44:39,830
options and then you can play mix and

1179
00:44:39,830 --> 00:44:43,100
max and test in your environment I'm

1180
00:44:43,100 --> 00:44:47,870
doing ok 10:30 so I just have a couple

1181
00:44:47,870 --> 00:44:49,460
more slides and I want to go to QA

1182
00:44:49,460 --> 00:44:51,080
because there tend to always be a lot of

1183
00:44:51,080 --> 00:44:54,800
questions about bottom here's the

1184
00:44:54,800 --> 00:44:56,300
takeaways I want you to come away with

1185
00:44:56,300 --> 00:44:59,570
off of this one quantum computers are

1186
00:44:59,570 --> 00:45:02,350
coming maybe not for a decade or more

1187
00:45:02,350 --> 00:45:06,080
maybe not for a little bit longer than

1188
00:45:06,080 --> 00:45:09,380
that but eventually within the

1189
00:45:09,380 --> 00:45:10,790
protection lifetime of data that we are

1190
00:45:10,790 --> 00:45:12,350
currently generating and saving today

1191
00:45:12,350 --> 00:45:15,860
and frankly even if it's a cold fusion

1192
00:45:15,860 --> 00:45:18,680
type thing where we never actually see a

1193
00:45:18,680 --> 00:45:22,310
quantum computer built merely the belief

1194
00:45:22,310 --> 00:45:24,680
that it is possible is going to cause

1195
00:45:24,680 --> 00:45:26,800
people to want this type of protection

1196
00:45:26,800 --> 00:45:29,510
so one of the things that that I am

1197
00:45:29,510 --> 00:45:31,100
dealing with on a regular basis are

1198
00:45:31,100 --> 00:45:32,930
customers who believe that the

1199
00:45:32,930 --> 00:45:35,300
capability will be in someone's hands in

1200
00:45:35,300 --> 00:45:37,730
a not-too-distant future even if not

1201
00:45:37,730 --> 00:45:39,710
certainly known publicly and that in and

1202
00:45:39,710 --> 00:45:42,860
of itself creates the need for quantum

1203
00:45:42,860 --> 00:45:46,070
resistant algorithms okay this is why

1204
00:45:46,070 --> 00:45:47,720
we're planning now because we have seen

1205
00:45:47,720 --> 00:45:50,609
how long it takes us to transition

1206
00:45:50,609 --> 00:45:53,150
from even for much simpler algorithms

1207
00:45:53,150 --> 00:45:55,920
okay we're still not all on shot too

1208
00:45:55,920 --> 00:45:58,049
we're still getting rid of sha-1 heck I

1209
00:45:58,049 --> 00:45:59,249
still have people inside of Microsoft

1210
00:45:59,249 --> 00:46:00,749
who come to me every so often with an

1211
00:46:00,749 --> 00:46:02,759
md5 hash function used somewhere in a

1212
00:46:02,759 --> 00:46:05,549
Microsoft codebase we acquire a little

1213
00:46:05,549 --> 00:46:07,230
company and we do the first code review

1214
00:46:07,230 --> 00:46:07,980
on their code and all of a sudden

1215
00:46:07,980 --> 00:46:10,470
they're using md5 all over the place or

1216
00:46:10,470 --> 00:46:13,829
Triple DES or something right um it

1217
00:46:13,829 --> 00:46:16,319
takes a long time once the systems

1218
00:46:16,319 --> 00:46:19,470
deployed and in fact frankly IOT is only

1219
00:46:19,470 --> 00:46:20,460
going to make this worse because we're

1220
00:46:20,460 --> 00:46:22,289
gonna start putting algorithms into

1221
00:46:22,289 --> 00:46:23,880
light switches that go into walls that

1222
00:46:23,880 --> 00:46:25,230
have no update paths and we're not gonna

1223
00:46:25,230 --> 00:46:27,569
be able to update them in 30 years that

1224
00:46:27,569 --> 00:46:30,630
are going to go for Oken so the most

1225
00:46:30,630 --> 00:46:32,999
important fact that I want you to take

1226
00:46:32,999 --> 00:46:35,249
away today is that to be rare for this

1227
00:46:35,249 --> 00:46:37,950
transition we have to have crypto agile

1228
00:46:37,950 --> 00:46:39,839
systems that is we have to have

1229
00:46:39,839 --> 00:46:42,210
engineering systems that are easy to

1230
00:46:42,210 --> 00:46:45,390
plug into play plug and play with new

1231
00:46:45,390 --> 00:46:46,769
cryptographic algorithms and change

1232
00:46:46,769 --> 00:46:48,569
things out and don't make assumptions

1233
00:46:48,569 --> 00:46:51,299
about key sizes or how long it takes to

1234
00:46:51,299 --> 00:46:54,049
do an operation or something like that

1235
00:46:54,049 --> 00:46:56,819
core algorithms in the IETF tend to be

1236
00:46:56,819 --> 00:46:59,369
pretty good at this the TLS community

1237
00:46:59,369 --> 00:47:01,619
has lots of cipher suites in fact they

1238
00:47:01,619 --> 00:47:03,660
have too many cipher suites in TLS 1.3

1239
00:47:03,660 --> 00:47:04,739
is going to restrict a bunch of those

1240
00:47:04,739 --> 00:47:07,380
but if you're building a system today or

1241
00:47:07,380 --> 00:47:08,789
you're specifying a system or you're

1242
00:47:08,789 --> 00:47:12,420
buying a system ask your vendor what are

1243
00:47:12,420 --> 00:47:14,970
you doing in terms of crypto agility how

1244
00:47:14,970 --> 00:47:17,009
do you move between algorithms how easy

1245
00:47:17,009 --> 00:47:18,599
is it to reconfigure if something new

1246
00:47:18,599 --> 00:47:19,650
comes along that I have to move to

1247
00:47:19,650 --> 00:47:21,589
because something new will come along

1248
00:47:21,589 --> 00:47:23,579
writeln is just going to standardize

1249
00:47:23,579 --> 00:47:24,989
something in six to seven years and

1250
00:47:24,989 --> 00:47:26,460
that's going to start the process so

1251
00:47:26,460 --> 00:47:27,690
that's sort of the most important

1252
00:47:27,690 --> 00:47:30,839
message don't build assumptions into

1253
00:47:30,839 --> 00:47:32,849
code and systems based on what the

1254
00:47:32,849 --> 00:47:34,019
algorithms are that we're using today

1255
00:47:34,019 --> 00:47:37,099
because those assumptions no longer hold

1256
00:47:37,099 --> 00:47:41,759
ok practical engineering options

1257
00:47:41,759 --> 00:47:44,609
actually do exist today we don't know

1258
00:47:44,609 --> 00:47:46,529
enough about them to want to use them by

1259
00:47:46,529 --> 00:47:49,319
themselves because they just haven't

1260
00:47:49,319 --> 00:47:52,349
baked long enough so hybrid schemes that

1261
00:47:52,349 --> 00:47:54,599
mix classical algorithms that were well

1262
00:47:54,599 --> 00:47:56,400
understood over the past thirty years

1263
00:47:56,400 --> 00:47:58,349
along with the new schemes is probably

1264
00:47:58,349 --> 00:47:59,339
the way we're going to go for the first

1265
00:47:59,339 --> 00:48:01,559
decade of deployment I expected for the

1266
00:48:01,559 --> 00:48:03,150
for at least the first ten years after

1267
00:48:03,150 --> 00:48:04,470
we start rolling these out

1268
00:48:04,470 --> 00:48:05,640
we're going to be doing hybrid schemes

1269
00:48:05,640 --> 00:48:06,690
and paying a little extra performance

1270
00:48:06,690 --> 00:48:09,210
costs on TLS where we mix and match a

1271
00:48:09,210 --> 00:48:12,030
classical RSA or elliptic curve schema

1272
00:48:12,030 --> 00:48:13,260
with one of these post quantum schemes

1273
00:48:13,260 --> 00:48:14,339
and eventually we may have enough

1274
00:48:14,339 --> 00:48:15,630
confidence in the post quantum schemes

1275
00:48:15,630 --> 00:48:17,579
to drop the RSA des love the curve but

1276
00:48:17,579 --> 00:48:20,430
that won't happen anytime soon it's

1277
00:48:20,430 --> 00:48:21,869
going to take a long time to update

1278
00:48:21,869 --> 00:48:24,119
software stacks speaking as someone who

1279
00:48:24,119 --> 00:48:26,040
worked on elliptic curve and Microsoft

1280
00:48:26,040 --> 00:48:28,260
took us a long time to build that out in

1281
00:48:28,260 --> 00:48:30,329
the stack it's real easy to say hey we

1282
00:48:30,329 --> 00:48:32,160
have support for the algorithm deep down

1283
00:48:32,160 --> 00:48:34,560
at the lowest levels of Windows it's

1284
00:48:34,560 --> 00:48:36,510
very different saying you can send a

1285
00:48:36,510 --> 00:48:38,700
secure email message out of Outlook and

1286
00:48:38,700 --> 00:48:41,790
and using elliptic curve algorithms or

1287
00:48:41,790 --> 00:48:43,859
you can spin up an entire software stack

1288
00:48:43,859 --> 00:48:45,950
or you can make sure that all of the

1289
00:48:45,950 --> 00:48:47,910
messages that you send back and forth

1290
00:48:47,910 --> 00:48:50,760
are our securities in the cuantas

1291
00:48:50,760 --> 00:48:53,730
algorithm and so for example consider

1292
00:48:53,730 --> 00:48:57,180
taxi 2.0 I did tell you I was going to

1293
00:48:57,180 --> 00:49:01,220
talk about make a taxi post quantum uh I

1294
00:49:01,220 --> 00:49:04,260
never heard a taxi before coming here

1295
00:49:04,260 --> 00:49:06,300
okay but I took a look at the protocol

1296
00:49:06,300 --> 00:49:08,730
because I wanted to see what taxi was

1297
00:49:08,730 --> 00:49:10,770
doing for transport and I went by the

1298
00:49:10,770 --> 00:49:13,410
way those are really large specification

1299
00:49:13,410 --> 00:49:17,700
documents um uh uh they're they're

1300
00:49:17,700 --> 00:49:18,990
interesting that they're there oh a

1301
00:49:18,990 --> 00:49:23,430
suspect's all right um so what taxi does

1302
00:49:23,430 --> 00:49:25,530
is when you look at it and you dig down

1303
00:49:25,530 --> 00:49:27,210
deep into what the transport is it

1304
00:49:27,210 --> 00:49:28,319
actually does something completely

1305
00:49:28,319 --> 00:49:29,640
reasonable it says we're going to build

1306
00:49:29,640 --> 00:49:32,819
on TLS 1.2 and 1.3 and we're gonna and

1307
00:49:32,819 --> 00:49:34,109
we suggest that if you're doing

1308
00:49:34,109 --> 00:49:35,550
certificate operations you stick to P

1309
00:49:35,550 --> 00:49:37,770
kicks out of the ITF all reasonable

1310
00:49:37,770 --> 00:49:39,810
sorts of things to assume because what

1311
00:49:39,810 --> 00:49:41,460
it does it pushes the problem on dealing

1312
00:49:41,460 --> 00:49:43,290
with anything on to the IETF groups that

1313
00:49:43,290 --> 00:49:45,750
specify TLS and P kicks alright and so

1314
00:49:45,750 --> 00:49:47,369
if you solve the problem at your TLS

1315
00:49:47,369 --> 00:49:49,859
layer you've solved the problem except

1316
00:49:49,859 --> 00:49:52,950
here's the issue with this all of your

1317
00:49:52,950 --> 00:49:54,900
underlying protocols need to be updated

1318
00:49:54,900 --> 00:49:57,089
to post quantum and that just puts

1319
00:49:57,089 --> 00:49:58,950
pressure on the TLS group to do that and

1320
00:49:58,950 --> 00:50:00,930
specify and this is what sort of every

1321
00:50:00,930 --> 00:50:02,220
standard that I've worked with that

1322
00:50:02,220 --> 00:50:04,650
builds on top of TLS does is it says use

1323
00:50:04,650 --> 00:50:09,329
TLS and then maybe it specifies a you

1324
00:50:09,329 --> 00:50:11,579
know it does a profile of it and says

1325
00:50:11,579 --> 00:50:12,630
well this is the way we're going to use

1326
00:50:12,630 --> 00:50:15,270
TLS in soap this is the way we're going

1327
00:50:15,270 --> 00:50:16,980
to use TLS in this this is the way we're

1328
00:50:16,980 --> 00:50:18,270
going to use TLS and that

1329
00:50:18,270 --> 00:50:19,290
this is what we're going to use TLS in

1330
00:50:19,290 --> 00:50:23,390
taxi 2.0 so at some point taxi three-arm

1331
00:50:23,390 --> 00:50:25,980
there's going to be a prote of a profile

1332
00:50:25,980 --> 00:50:29,370
that says when you're using TLS 1.3 it's

1333
00:50:29,370 --> 00:50:30,950
going to be these cipher suites with

1334
00:50:30,950 --> 00:50:33,570
with the minimum of this sort of quantum

1335
00:50:33,570 --> 00:50:34,500
resistance and if you're doing

1336
00:50:34,500 --> 00:50:36,630
certificate operations this is what

1337
00:50:36,630 --> 00:50:37,590
you're going to have to do inside of

1338
00:50:37,590 --> 00:50:39,540
peak X right there's going to be some

1339
00:50:39,540 --> 00:50:41,430
profiles that get specified on that but

1340
00:50:41,430 --> 00:50:43,740
in general all that does that puts a

1341
00:50:43,740 --> 00:50:46,500
dependency where if you're shipping taxi

1342
00:50:46,500 --> 00:50:48,720
software or speaking software you're

1343
00:50:48,720 --> 00:50:50,760
going to need your underlying stats to

1344
00:50:50,760 --> 00:50:52,860
get updated that's fine that just adds a

1345
00:50:52,860 --> 00:50:55,650
dependency in right and so for your TLS

1346
00:50:55,650 --> 00:50:57,900
stack to be updated your underlying

1347
00:50:57,900 --> 00:50:59,130
systems under there need to be updated

1348
00:50:59,130 --> 00:51:05,660
and that just kind of builds frankly

1349
00:51:05,660 --> 00:51:08,310
depending upon when we think we start to

1350
00:51:08,310 --> 00:51:11,460
see a quantum resistant out computer out

1351
00:51:11,460 --> 00:51:12,630
there or a quantum computer out there

1352
00:51:12,630 --> 00:51:15,060
the easiest response is probably going

1353
00:51:15,060 --> 00:51:17,060
to be to wrap everything in VPNs I

1354
00:51:17,060 --> 00:51:19,110
suspect and one of the things that I'm

1355
00:51:19,110 --> 00:51:22,230
trying to keep in my back pocket are PQ

1356
00:51:22,230 --> 00:51:24,240
enabled VPNs that I can tunnel

1357
00:51:24,240 --> 00:51:26,400
everything else over because I can throw

1358
00:51:26,400 --> 00:51:28,230
those tunnels up quickly if I need to

1359
00:51:28,230 --> 00:51:30,030
and I don't have to modify the entire

1360
00:51:30,030 --> 00:51:32,190
stack that is not the most efficient way

1361
00:51:32,190 --> 00:51:33,510
to do it because I'm adding yet another

1362
00:51:33,510 --> 00:51:35,970
wrap of encryption around everything but

1363
00:51:35,970 --> 00:51:38,910
if the guys in Asscher come to me and

1364
00:51:38,910 --> 00:51:41,580
say we need to secure the VPNs between

1365
00:51:41,580 --> 00:51:44,250
our data centers against a potential

1366
00:51:44,250 --> 00:51:47,490
quantum enabled adversary my easiest

1367
00:51:47,490 --> 00:51:48,960
response to them is to say let's put

1368
00:51:48,960 --> 00:51:51,840
some PQ enable VPNs down and that's the

1369
00:51:51,840 --> 00:51:53,400
first response before looking at all the

1370
00:51:53,400 --> 00:51:55,440
details in the software stacks and I

1371
00:51:55,440 --> 00:51:57,930
suspect we will see some of those

1372
00:51:57,930 --> 00:52:00,450
options get deployed pretty quick and we

1373
00:52:00,450 --> 00:52:03,060
can do we can do this with open VPN or

1374
00:52:03,060 --> 00:52:05,160
with other VPN technologies it's really

1375
00:52:05,160 --> 00:52:07,380
no different at an algorithm level but

1376
00:52:07,380 --> 00:52:08,940
that's probably going to be what the

1377
00:52:08,940 --> 00:52:10,650
simplest deployment is that you start to

1378
00:52:10,650 --> 00:52:14,640
see um finally I just want to reiterate

1379
00:52:14,640 --> 00:52:16,620
that all of this work is being done in

1380
00:52:16,620 --> 00:52:21,330
the open so crypto abhors crypto

1381
00:52:21,330 --> 00:52:24,600
algorithms of secrecy in code you should

1382
00:52:24,600 --> 00:52:25,980
be able to inspect your crypto

1383
00:52:25,980 --> 00:52:29,190
algorithms um Microsoft is doing all

1384
00:52:29,190 --> 00:52:31,290
this work without any IP we're not

1385
00:52:31,290 --> 00:52:33,180
pursuing any of that because the crypto

1386
00:52:33,180 --> 00:52:35,510
community abhors that generally as well

1387
00:52:35,510 --> 00:52:37,950
our work and the work of our

1388
00:52:37,950 --> 00:52:39,980
collaborators is all up either on

1389
00:52:39,980 --> 00:52:42,240
publicly accessible download pages from

1390
00:52:42,240 --> 00:52:44,400
Microsoft or or up on github if you go

1391
00:52:44,400 --> 00:52:45,540
out to github and search for this you'll

1392
00:52:45,540 --> 00:52:48,120
find lots of work if you are thinking

1393
00:52:48,120 --> 00:52:50,010
about playing with any of this code hey

1394
00:52:50,010 --> 00:52:51,900
that's fantastic be we're happy to

1395
00:52:51,900 --> 00:52:55,200
answer questions about it see please

1396
00:52:55,200 --> 00:52:58,230
contribute back test your systems out

1397
00:52:58,230 --> 00:53:00,210
find out where things work or not no one

1398
00:53:00,210 --> 00:53:01,410
knows what's actually going to come out

1399
00:53:01,410 --> 00:53:03,540
of the nist process i actually expect

1400
00:53:03,540 --> 00:53:05,670
the IETF will start standardizing things

1401
00:53:05,670 --> 00:53:08,370
on a quicker pace then NIST because NIST

1402
00:53:08,370 --> 00:53:09,810
is going to take six years and frankly

1403
00:53:09,810 --> 00:53:11,700
that's a bit too long but that process

1404
00:53:11,700 --> 00:53:15,840
is going to continue and that's kind of

1405
00:53:15,840 --> 00:53:17,130
where I want to leave things here and

1406
00:53:17,130 --> 00:53:18,810
start to open things up for questions

1407
00:53:18,810 --> 00:53:22,320
um so actually I'll go to questions and

1408
00:53:22,320 --> 00:53:23,370
I'll just leave it back in case anyone

1409
00:53:23,370 --> 00:53:24,900
wants to copy the URLs down I want to

1410
00:53:24,900 --> 00:53:27,000
thank you very much for listening to me

1411
00:53:27,000 --> 00:53:28,380
today and letting me throw a little bit

1412
00:53:28,380 --> 00:53:31,860
of math at you and I will be happy to

1413
00:53:31,860 --> 00:53:33,030
take any questions you've got about

1414
00:53:33,030 --> 00:53:35,130
quantum computing or quantum resists

1415
00:53:35,130 --> 00:53:37,080
encrypt or where things go thanks very

1416
00:53:37,080 --> 00:53:37,690
much

1417
00:53:37,690 --> 00:53:46,320
[Applause]

1418
00:53:46,680 --> 00:53:49,540
okay yeah

1419
00:53:49,540 --> 00:53:51,700
it's wrecking so I have a question for

1420
00:53:51,700 --> 00:53:53,620
you when you are showing those timing

1421
00:53:53,620 --> 00:53:54,940
and everything else obviously you do

1422
00:53:54,940 --> 00:53:57,520
have assumptions on capabilities or the

1423
00:53:57,520 --> 00:54:01,990
processor what is your prediction how

1424
00:54:01,990 --> 00:54:04,600
low those capability capacities will go

1425
00:54:04,600 --> 00:54:07,150
because the still bunch of stuff that is

1426
00:54:07,150 --> 00:54:09,190
built with 8-bit for bit processors

1427
00:54:09,190 --> 00:54:10,090
correct

1428
00:54:10,090 --> 00:54:12,670
so those timing numbers in fact if I go

1429
00:54:12,670 --> 00:54:15,520
back to them for example this is gonna

1430
00:54:15,520 --> 00:54:17,820
take me a little while to go back here

1431
00:54:17,820 --> 00:54:20,770
you'll see though on for example on the

1432
00:54:20,770 --> 00:54:22,240
key exchange ones we are all assuming

1433
00:54:22,240 --> 00:54:24,490
like reasonable speed core i7s right so

1434
00:54:24,490 --> 00:54:26,800
these are pretty fast processors okay so

1435
00:54:26,800 --> 00:54:29,200
it is absolutely the case that you have

1436
00:54:29,200 --> 00:54:30,970
to look at a wide range of processors

1437
00:54:30,970 --> 00:54:32,940
and if you're looking at a very small

1438
00:54:32,940 --> 00:54:35,350
IOT device that's got a four bit or an

1439
00:54:35,350 --> 00:54:39,940
8-bit processor you know that you're not

1440
00:54:39,940 --> 00:54:41,230
going to get these kinds of speeds and

1441
00:54:41,230 --> 00:54:42,970
things are going to and and your

1442
00:54:42,970 --> 00:54:44,170
trade-offs are going to be different and

1443
00:54:44,170 --> 00:54:46,960
you may choose something where I really

1444
00:54:46,960 --> 00:54:48,910
need very small cycle times and I'm

1445
00:54:48,910 --> 00:54:50,620
willing to pay a space cost because

1446
00:54:50,620 --> 00:54:52,660
that's a trade-off or you may you may go

1447
00:54:52,660 --> 00:54:56,050
the other way right um the other thing I

1448
00:54:56,050 --> 00:54:58,270
want to point out is that it is possible

1449
00:54:58,270 --> 00:55:00,850
that we will see depending on what's

1450
00:55:00,850 --> 00:55:05,290
chosen for Standardization specific

1451
00:55:05,290 --> 00:55:06,850
instruction sequences you know

1452
00:55:06,850 --> 00:55:08,830
instruction to get defined for new

1453
00:55:08,830 --> 00:55:11,020
processors just like intel has done this

1454
00:55:11,020 --> 00:55:14,350
for AES and for sha-2 now that's not

1455
00:55:14,350 --> 00:55:15,730
going to help your 4-bit microcontroller

1456
00:55:15,730 --> 00:55:18,880
frankly okay um not much may help your

1457
00:55:18,880 --> 00:55:22,570
format microcontroller um but some of

1458
00:55:22,570 --> 00:55:23,920
these don't like like the lattice

1459
00:55:23,920 --> 00:55:25,180
schemes don't really require much more

1460
00:55:25,180 --> 00:55:27,820
than than matrix multiplication and they

1461
00:55:27,820 --> 00:55:29,920
may be well-suited even if you're

1462
00:55:29,920 --> 00:55:32,140
spending a lot of data you might say in

1463
00:55:32,140 --> 00:55:34,660
that environment I'm willing to pay the

1464
00:55:34,660 --> 00:55:36,520
cost of having enough memory around to

1465
00:55:36,520 --> 00:55:39,160
hold larger keys and buffer because I've

1466
00:55:39,160 --> 00:55:41,980
only got a small amount of compute I'm

1467
00:55:41,980 --> 00:55:44,110
sure there's also someone from an ARM

1468
00:55:44,110 --> 00:55:45,580
processor manufacturer who would be

1469
00:55:45,580 --> 00:55:47,110
happy to sell you a better processor to

1470
00:55:47,110 --> 00:55:50,500
in that environment you know that's a

1471
00:55:50,500 --> 00:55:52,150
real trade-off because we're starting to

1472
00:55:52,150 --> 00:55:54,700
see you know 32 and 64-bit processors

1473
00:55:54,700 --> 00:55:55,840
show up in

1474
00:55:55,840 --> 00:55:58,930
cables right all over the place and so

1475
00:55:58,930 --> 00:55:59,920
there's a question about what's the

1476
00:55:59,920 --> 00:56:03,340
capability in past NIST competitions

1477
00:56:03,340 --> 00:56:05,740
NIST ended to fix the platforms that

1478
00:56:05,740 --> 00:56:07,510
they cared about as an 8-bit

1479
00:56:07,510 --> 00:56:09,430
microprocessor and a 32-bit

1480
00:56:09,430 --> 00:56:12,520
microprocessor and I actually think that

1481
00:56:12,520 --> 00:56:14,020
was a bit of a mistake because their

1482
00:56:14,020 --> 00:56:15,340
standards going to be around for a long

1483
00:56:15,340 --> 00:56:16,780
time and the processors move a lot

1484
00:56:16,780 --> 00:56:18,130
faster so you really got to kind of

1485
00:56:18,130 --> 00:56:20,830
predict where the processor advancements

1486
00:56:20,830 --> 00:56:23,020
are going to go but if I'm talking about

1487
00:56:23,020 --> 00:56:24,670
satellite communications and I'm

1488
00:56:24,670 --> 00:56:26,320
launching something and I need to have a

1489
00:56:26,320 --> 00:56:28,510
post quantum secure channel between a

1490
00:56:28,510 --> 00:56:31,180
ground station and a satellite and I

1491
00:56:31,180 --> 00:56:33,520
really care about bandwidth and I'm not

1492
00:56:33,520 --> 00:56:34,710
gonna be able to update the hardware

1493
00:56:34,710 --> 00:56:37,360
then yeah I may make a very different

1494
00:56:37,360 --> 00:56:39,970
trade off on that but yeah these are all

1495
00:56:39,970 --> 00:56:41,590
none of these are as performant as

1496
00:56:41,590 --> 00:56:43,000
what's being used today and so if you're

1497
00:56:43,000 --> 00:56:45,070
struggling to do RSA or elliptic curve

1498
00:56:45,070 --> 00:56:47,110
today you're going to struggle a little

1499
00:56:47,110 --> 00:56:50,530
bit more that's my answer other

1500
00:56:50,530 --> 00:56:52,620
questions

1501
00:56:56,280 --> 00:57:00,119
after the first quantum break it out of

1502
00:57:00,119 --> 00:57:03,200
the decryption how quickly the

1503
00:57:03,200 --> 00:57:06,300
development will be into coming into

1504
00:57:06,300 --> 00:57:09,390
mass scale or actually I would say even

1505
00:57:09,390 --> 00:57:13,020
low-end nation-state scale a decryption

1506
00:57:13,020 --> 00:57:15,869
oh that depends upon who's got the

1507
00:57:15,869 --> 00:57:17,730
capability okay

1508
00:57:17,730 --> 00:57:21,810
so one of the so first - there's a pre

1509
00:57:21,810 --> 00:57:23,580
question there before yours which is are

1510
00:57:23,580 --> 00:57:25,920
we going to know when the first break

1511
00:57:25,920 --> 00:57:28,770
happens yes okay and I get asked that

1512
00:57:28,770 --> 00:57:30,150
question by the way--by execs at

1513
00:57:30,150 --> 00:57:31,500
Microsoft where I go Brian how are we

1514
00:57:31,500 --> 00:57:33,599
going to know and I'm like well if it's

1515
00:57:33,599 --> 00:57:35,369
a nation-state we may you know if it's

1516
00:57:35,369 --> 00:57:37,170
an intelligence community we may not or

1517
00:57:37,170 --> 00:57:39,119
we may have to infer it if it's an

1518
00:57:39,119 --> 00:57:40,890
academic community that does it they'll

1519
00:57:40,890 --> 00:57:42,300
publish a paper and they'll get Awards

1520
00:57:42,300 --> 00:57:46,410
and we'll know you know if I can build a

1521
00:57:46,410 --> 00:57:48,570
quantum computer at scale if I'm able to

1522
00:57:48,570 --> 00:57:50,430
construct nine or ten thousand logical

1523
00:57:50,430 --> 00:57:51,869
quantum bits which is what I need to go

1524
00:57:51,869 --> 00:57:53,820
after this I'm going to be able to build

1525
00:57:53,820 --> 00:57:56,280
twenty thousand right by the time you

1526
00:57:56,280 --> 00:57:57,930
get to that scale we're struggling to

1527
00:57:57,930 --> 00:57:59,820
build a few and to keep a small number

1528
00:57:59,820 --> 00:58:01,950
coherent if you saw the engineering

1529
00:58:01,950 --> 00:58:04,230
problems to build many then you're going

1530
00:58:04,230 --> 00:58:06,390
to be able to turn out more quantum

1531
00:58:06,390 --> 00:58:07,800
computers now they may be really

1532
00:58:07,800 --> 00:58:09,359
expensive you may not have a lot of

1533
00:58:09,359 --> 00:58:10,650
people to buy them and they may be

1534
00:58:10,650 --> 00:58:15,420
tasked with other problems neatly we do

1535
00:58:15,420 --> 00:58:17,010
this way what's the market for selling

1536
00:58:17,010 --> 00:58:19,349
quantum computers that are tasked with

1537
00:58:19,349 --> 00:58:22,470
breaking crypto there's probably three

1538
00:58:22,470 --> 00:58:24,210
buyers out there I can think of off the

1539
00:58:24,210 --> 00:58:26,880
top of my head okay and they all have

1540
00:58:26,880 --> 00:58:28,380
three or four letters in there in their

1541
00:58:28,380 --> 00:58:31,320
agency names um you know I mean

1542
00:58:31,320 --> 00:58:33,570
Microsoft doesn't have an interest in

1543
00:58:33,570 --> 00:58:35,940
buying a quantum computer or building

1544
00:58:35,940 --> 00:58:38,460
one to break crypto we want to make the

1545
00:58:38,460 --> 00:58:41,160
capability available right we you know

1546
00:58:41,160 --> 00:58:42,780
if we had one we wouldn't make that

1547
00:58:42,780 --> 00:58:44,099
available as part of you know cloud

1548
00:58:44,099 --> 00:58:45,810
services rent quantum computing time for

1549
00:58:45,810 --> 00:58:47,580
solving new problems but I think it

1550
00:58:47,580 --> 00:58:49,320
would fall pretty quick and really in

1551
00:58:49,320 --> 00:58:50,580
the as far as cryptographers are

1552
00:58:50,580 --> 00:58:51,359
concerned all you got to do is

1553
00:58:51,359 --> 00:58:53,490
demonstrate at once okay

1554
00:58:53,490 --> 00:58:55,530
mark Stephens in March of this late

1555
00:58:55,530 --> 00:58:57,570
February this year demonstrated a sha-1

1556
00:58:57,570 --> 00:58:59,609
hash collision okay that was a

1557
00:58:59,609 --> 00:59:01,320
breakthrough moment for sha-1 we knew

1558
00:59:01,320 --> 00:59:02,910
that was coming

1559
00:59:02,910 --> 00:59:04,500
I had somebody working with mark for

1560
00:59:04,500 --> 00:59:05,849
about three or four years because we

1561
00:59:05,849 --> 00:59:07,470
figured that that was where that was

1562
00:59:07,470 --> 00:59:09,390
going to come out and that's why we've

1563
00:59:09,390 --> 00:59:09,960
had

1564
00:59:09,960 --> 00:59:11,940
collision detection code for sha-1 that

1565
00:59:11,940 --> 00:59:13,260
we've made available and we're now

1566
00:59:13,260 --> 00:59:16,320
integrating into in the systems as soon

1567
00:59:16,320 --> 00:59:17,400
as you demonstrate it once the

1568
00:59:17,400 --> 00:59:18,690
assumption is that the algorithm is

1569
00:59:18,690 --> 00:59:21,599
broken so if you if someone demonstrates

1570
00:59:21,599 --> 00:59:23,520
that they can factor with a quantum

1571
00:59:23,520 --> 00:59:26,700
computer say a 2048 bit RSA number as

1572
00:59:26,700 --> 00:59:27,720
far as the cryptographic community

1573
00:59:27,720 --> 00:59:30,990
concerned 2048 bit RSA is dead and since

1574
00:59:30,990 --> 00:59:32,940
I'd only need to double the number of

1575
00:59:32,940 --> 00:59:34,890
quantum bits to go after 4096 bit RSA

1576
00:59:34,890 --> 00:59:37,140
we'd assume that's dead too so it'll

1577
00:59:37,140 --> 00:59:38,540
happen very quickly

1578
00:59:38,540 --> 00:59:43,400
how will the post quantum computing era

1579
00:59:43,400 --> 00:59:48,450
change the discussion on government

1580
00:59:48,450 --> 00:59:53,880
access to crypto and ha and will there

1581
00:59:53,880 --> 00:59:59,369
be a will you see solutions make

1582
00:59:59,369 --> 01:00:01,940
government access to crypto keys that is

1583
01:00:01,940 --> 01:00:07,010
and will you see possibilities for

1584
01:00:07,010 --> 01:00:09,480
individuals to be able to secure the

1585
01:00:09,480 --> 01:00:11,700
communications in the post a quantum

1586
01:00:11,700 --> 01:00:14,550
error so that's a very good question I

1587
01:00:14,550 --> 01:00:16,980
also do get called in to these sort of

1588
01:00:16,980 --> 01:00:19,920
law enforcement conversations because

1589
01:00:19,920 --> 01:00:21,690
law enforcement says hey you know what

1590
01:00:21,690 --> 01:00:23,580
can we do to get access these sorts of

1591
01:00:23,580 --> 01:00:26,640
things it's a cat-and-mouse game what

1592
01:00:26,640 --> 01:00:29,040
happens right now the I think for

1593
01:00:29,040 --> 01:00:31,980
individuals the moves going to be this

1594
01:00:31,980 --> 01:00:33,510
is why we're looking at these types of

1595
01:00:33,510 --> 01:00:34,920
algorithms because they're algorithms

1596
01:00:34,920 --> 01:00:38,010
where we don't think that having access

1597
01:00:38,010 --> 01:00:40,349
to quantum computing helps break it now

1598
01:00:40,349 --> 01:00:42,570
that doesn't change the general debate

1599
01:00:42,570 --> 01:00:45,960
over whether or not law enforcement

1600
01:00:45,960 --> 01:00:48,119
should have access on a general mass

1601
01:00:48,119 --> 01:00:50,609
scale to keys in certain types of

1602
01:00:50,609 --> 01:00:52,440
devices the properties of these

1603
01:00:52,440 --> 01:00:54,420
algorithms that we're talking about are

1604
01:00:54,420 --> 01:00:55,859
similar from a law enforcement

1605
01:00:55,859 --> 01:00:59,040
perspective to what we're using today

1606
01:00:59,040 --> 01:01:01,770
with RSA and elliptic curve okay so you

1607
01:01:01,770 --> 01:01:03,480
know at the gross level there isn't much

1608
01:01:03,480 --> 01:01:05,220
difference there now

1609
01:01:05,220 --> 01:01:08,130
if law enforcement has access all of a

1610
01:01:08,130 --> 01:01:10,170
sudden to say a quantum computing

1611
01:01:10,170 --> 01:01:12,869
capability and can break classical then

1612
01:01:12,869 --> 01:01:14,280
there's devices that they're now going

1613
01:01:14,280 --> 01:01:15,869
to and protocols and keys that they're

1614
01:01:15,869 --> 01:01:18,750
now going to be able to crack and the

1615
01:01:18,750 --> 01:01:20,490
move to quantum resistant algorithms

1616
01:01:20,490 --> 01:01:22,830
would then thwart that just like the

1617
01:01:22,830 --> 01:01:23,730
other cat-and-mouse

1618
01:01:23,730 --> 01:01:26,400
we've seen Pappa before but you know in

1619
01:01:26,400 --> 01:01:27,690
a lot of cases that's not the way you

1620
01:01:27,690 --> 01:01:29,580
get around stuff right the math works if

1621
01:01:29,580 --> 01:01:31,890
you do it properly and a lot of the ways

1622
01:01:31,890 --> 01:01:33,810
the folks are able to get access to

1623
01:01:33,810 --> 01:01:36,210
systems they want to it by bypassing and

1624
01:01:36,210 --> 01:01:37,470
by breaking and I don't think that's

1625
01:01:37,470 --> 01:01:39,630
going to change anything I mean I'm not

1626
01:01:39,630 --> 01:01:42,540
giving you any sort of guarantees about

1627
01:01:42,540 --> 01:01:44,130
the security of systems implementing

1628
01:01:44,130 --> 01:01:46,350
this right you know crappy

1629
01:01:46,350 --> 01:01:48,000
implementations of crypto are going to

1630
01:01:48,000 --> 01:01:49,770
be just as vulnerable as they are today

1631
01:01:49,770 --> 01:01:51,420
whether they're implementing RSA or a

1632
01:01:51,420 --> 01:01:54,510
post quantum scheme um and if you don't

1633
01:01:54,510 --> 01:01:56,430
secure your systems and an attacker can

1634
01:01:56,430 --> 01:01:57,900
break in and go get your private keys

1635
01:01:57,900 --> 01:01:59,190
off the system it doesn't matter what

1636
01:01:59,190 --> 01:02:00,900
algorithm is being used so I don't

1637
01:02:00,900 --> 01:02:05,190
really think that changes I do think

1638
01:02:05,190 --> 01:02:08,400
that that conversation continues and I

1639
01:02:08,400 --> 01:02:11,340
don't have a way just like every other

1640
01:02:11,340 --> 01:02:12,840
cryptography will tell you I don't have

1641
01:02:12,840 --> 01:02:15,359
a way to secure the system so that only

1642
01:02:15,359 --> 01:02:16,680
the good guys have access to the

1643
01:02:16,680 --> 01:02:18,180
encryption keys and not the bad guys I

1644
01:02:18,180 --> 01:02:19,740
mean we can talk about that and

1645
01:02:19,740 --> 01:02:21,570
engineering sorts of things but I don't

1646
01:02:21,570 --> 01:02:22,920
think that this particular problem

1647
01:02:22,920 --> 01:02:27,710
changes the nature of that debate okay I

1648
01:02:27,710 --> 01:02:29,970
think we're just about out of time I

1649
01:02:29,970 --> 01:02:31,650
certainly didn't know I'd be having to

1650
01:02:31,650 --> 01:02:33,180
do math this early on a Friday morning

1651
01:02:33,180 --> 01:02:38,180
but thank you very much thank you all

1652
01:02:41,420 --> 01:02:44,660
coffee break

1653
01:02:58,789 --> 01:03:00,849
you

