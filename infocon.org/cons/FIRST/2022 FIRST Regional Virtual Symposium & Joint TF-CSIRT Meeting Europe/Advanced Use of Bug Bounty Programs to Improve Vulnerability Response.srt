1
00:00:00,350 --> 00:00:05,040
[Music]

2
00:00:05,040 --> 00:00:07,040
so thank you very much for having me

3
00:00:07,040 --> 00:00:08,800
here today i'm quite happy to meet you

4
00:00:08,800 --> 00:00:11,360
all virtually so yes indeed this talk

5
00:00:11,360 --> 00:00:13,519
will be about uh using bad bounty

6
00:00:13,519 --> 00:00:15,839
programs to improve the

7
00:00:15,839 --> 00:00:17,039
vulnerability response of an

8
00:00:17,039 --> 00:00:18,880
organization yes

9
00:00:18,880 --> 00:00:21,039
for us this is quite a useful tool uh

10
00:00:21,039 --> 00:00:22,640
maybe before moving on with the

11
00:00:22,640 --> 00:00:24,640
presentation i can give a couple of

12
00:00:24,640 --> 00:00:26,960
words about myself so i do work for

13
00:00:26,960 --> 00:00:28,800
huawei indeed

14
00:00:28,800 --> 00:00:30,480
i'm actually an evangelist

15
00:00:30,480 --> 00:00:33,120
on responsible diploma disclosure and

16
00:00:33,120 --> 00:00:35,040
vulnerability management

17
00:00:35,040 --> 00:00:37,760
and my focus is the europe region so i

18
00:00:37,760 --> 00:00:39,760
am actually attached to our research

19
00:00:39,760 --> 00:00:42,559
center in munich in germany and i also

20
00:00:42,559 --> 00:00:44,559
work closely with

21
00:00:44,559 --> 00:00:46,960
the huawei pso colleagues in china as

22
00:00:46,960 --> 00:00:48,960
well as our

23
00:00:48,960 --> 00:00:51,120
internal teams that do

24
00:00:51,120 --> 00:00:54,160
that contact our vulnerability research

25
00:00:54,160 --> 00:00:57,440
efforts and our back bounty program

26
00:00:57,440 --> 00:01:01,359
so the talk today is about advanced use

27
00:01:01,359 --> 00:01:03,440
of the advantage programs in the sense

28
00:01:03,440 --> 00:01:05,920
that there is an opportunity for for

29
00:01:05,920 --> 00:01:07,360
vendors at least

30
00:01:07,360 --> 00:01:09,360
to make the best out of the

31
00:01:09,360 --> 00:01:11,200
vulnerability reports that can be

32
00:01:11,200 --> 00:01:12,479
received so

33
00:01:12,479 --> 00:01:14,479
and this in order to improve the

34
00:01:14,479 --> 00:01:18,560
security prosper of an organization

35
00:01:18,560 --> 00:01:22,479
and the formula for this is based on two

36
00:01:22,479 --> 00:01:23,920
components

37
00:01:23,920 --> 00:01:26,960
the first component is to use

38
00:01:26,960 --> 00:01:28,479
um

39
00:01:28,479 --> 00:01:31,119
vulnerability reports to conduct

40
00:01:31,119 --> 00:01:33,280
additional vulnerability research

41
00:01:33,280 --> 00:01:34,960
so when a vulnerability researcher

42
00:01:34,960 --> 00:01:37,040
submits a report the knowledge of the

43
00:01:37,040 --> 00:01:39,680
vulnerability

44
00:01:39,680 --> 00:01:41,840
can actually be used to conduct further

45
00:01:41,840 --> 00:01:44,000
research

46
00:01:44,000 --> 00:01:45,840
so that means finding

47
00:01:45,840 --> 00:01:47,759
additional vulnerabilities that are

48
00:01:47,759 --> 00:01:49,439
similar to the one that was just

49
00:01:49,439 --> 00:01:52,000
reported in the product

50
00:01:52,000 --> 00:01:55,520
and the second component to this is to

51
00:01:55,520 --> 00:01:57,280
try to maximize the scope and the

52
00:01:57,280 --> 00:02:00,000
quality of vulnerability reports uh in

53
00:02:00,000 --> 00:02:02,000
order to actually have

54
00:02:02,000 --> 00:02:05,360
interesting uh say let's put it this way

55
00:02:05,360 --> 00:02:07,520
vulnerabilities to look for and for this

56
00:02:07,520 --> 00:02:08,399
actually

57
00:02:08,399 --> 00:02:10,560
from our perspective the bounty program

58
00:02:10,560 --> 00:02:13,920
is is quite an ideal tool

59
00:02:13,920 --> 00:02:15,520
so that's an approach that is in our

60
00:02:15,520 --> 00:02:16,400
view

61
00:02:16,400 --> 00:02:19,120
relevant for all sort of organizations

62
00:02:19,120 --> 00:02:21,440
that deliver products or system

63
00:02:21,440 --> 00:02:22,720
components

64
00:02:22,720 --> 00:02:24,400
and that are responsible for the secure

65
00:02:24,400 --> 00:02:26,319
development life cycle of those products

66
00:02:26,319 --> 00:02:28,239
or components so typically equipment

67
00:02:28,239 --> 00:02:30,080
vendors consumer device vendors and

68
00:02:30,080 --> 00:02:32,879
software vendors

69
00:02:33,920 --> 00:02:35,040
so

70
00:02:35,040 --> 00:02:36,959
to illustrate uh

71
00:02:36,959 --> 00:02:40,160
this i will briefly introduce uh the

72
00:02:40,160 --> 00:02:42,239
vulnerability handling process and the

73
00:02:42,239 --> 00:02:44,959
bounty programs as we do them

74
00:02:44,959 --> 00:02:45,920
huawei

75
00:02:45,920 --> 00:02:47,920
and then i will illustrate a possible

76
00:02:47,920 --> 00:02:48,840
way

77
00:02:48,840 --> 00:02:53,519
um to integrate vulnerability research

78
00:02:53,519 --> 00:02:56,160
into the vulnerability handling process

79
00:02:56,160 --> 00:02:57,040
and

80
00:02:57,040 --> 00:02:58,319
as a conclusion i will give some

81
00:02:58,319 --> 00:02:59,519
examples of

82
00:02:59,519 --> 00:03:01,120
vulnerability research techniques that

83
00:03:01,120 --> 00:03:04,319
can be used in this context

84
00:03:04,319 --> 00:03:05,280
so

85
00:03:05,280 --> 00:03:07,360
huawei p3

86
00:03:07,360 --> 00:03:09,519
is the central organization within the

87
00:03:09,519 --> 00:03:11,680
company within huawei for handling the

88
00:03:11,680 --> 00:03:13,920
vulnerability reports

89
00:03:13,920 --> 00:03:17,360
we have two key drivers the first one is

90
00:03:17,360 --> 00:03:19,760
to reduce the risk for our customers and

91
00:03:19,760 --> 00:03:21,360
the second one is to collaborate with

92
00:03:21,360 --> 00:03:24,959
all relevant stakeholders for them

93
00:03:25,200 --> 00:03:27,840
so that is done in cooperation with our

94
00:03:27,840 --> 00:03:29,519
product lines

95
00:03:29,519 --> 00:03:31,680
research remains the domain organization

96
00:03:31,680 --> 00:03:33,920
and we then we have people responsible

97
00:03:33,920 --> 00:03:35,280
in product lines

98
00:03:35,280 --> 00:03:38,080
um and in addition to this github at

99
00:03:38,080 --> 00:03:40,480
huawei also manages vulnerability

100
00:03:40,480 --> 00:03:43,040
monitoring activities as well as

101
00:03:43,040 --> 00:03:45,040
training activities so a lot of things

102
00:03:45,040 --> 00:03:48,560
that are common activities for

103
00:03:48,560 --> 00:03:51,920
public security incidence response

104
00:03:51,920 --> 00:03:53,680
this is

105
00:03:53,680 --> 00:03:55,840
on a high level how our process looks

106
00:03:55,840 --> 00:03:57,439
like

107
00:03:57,439 --> 00:03:59,120
so it is pretty

108
00:03:59,120 --> 00:04:02,239
standard i think uh the huawei p30 is

109
00:04:02,239 --> 00:04:04,720
the interface for reliability handling

110
00:04:04,720 --> 00:04:06,879
both as an intake point for

111
00:04:06,879 --> 00:04:09,360
vulnerability reports so we accept them

112
00:04:09,360 --> 00:04:12,319
from our customers and our suppliers but

113
00:04:12,319 --> 00:04:14,480
also internal sources within the company

114
00:04:14,480 --> 00:04:16,320
and of course from the security

115
00:04:16,320 --> 00:04:18,560
community at large so we have a

116
00:04:18,560 --> 00:04:20,399
vulnerability um

117
00:04:20,399 --> 00:04:22,560
disclosure policy available for

118
00:04:22,560 --> 00:04:25,120
researchers and we have to run

119
00:04:25,120 --> 00:04:27,360
several activities including the

120
00:04:27,360 --> 00:04:29,680
boundary

121
00:04:29,680 --> 00:04:32,320
that covers actually

122
00:04:32,320 --> 00:04:34,479
all aspects of good vulnerability

123
00:04:34,479 --> 00:04:36,160
management that the research should

124
00:04:36,160 --> 00:04:38,320
actually do so we handle the

125
00:04:38,320 --> 00:04:40,320
vulnerability reports we

126
00:04:40,320 --> 00:04:42,240
collect also non-reported

127
00:04:42,240 --> 00:04:44,479
vulnerabilities

128
00:04:44,479 --> 00:04:48,000
uh we do the triage we

129
00:04:48,000 --> 00:04:50,479
identify the possible with remediations

130
00:04:50,479 --> 00:04:52,800
with our product lines and then we

131
00:04:52,800 --> 00:04:54,639
handle the disclosure

132
00:04:54,639 --> 00:04:57,199
to our customers

133
00:04:57,199 --> 00:04:59,120
and that

134
00:04:59,120 --> 00:05:01,199
again is closely done in collaboration

135
00:05:01,199 --> 00:05:05,440
with several stakeholders within within

136
00:05:06,560 --> 00:05:08,880
i will briefly cover these slides it's

137
00:05:08,880 --> 00:05:11,520
just to illustrate

138
00:05:11,520 --> 00:05:13,600
our continued willingness

139
00:05:13,600 --> 00:05:15,520
to cooperate with all relevant staff

140
00:05:15,520 --> 00:05:16,800
stakeholders

141
00:05:16,800 --> 00:05:20,000
that's our process to to coordinate with

142
00:05:20,000 --> 00:05:22,800
our customers and with coordinators

143
00:05:22,800 --> 00:05:26,000
like the seasons uh but also with other

144
00:05:26,000 --> 00:05:28,320
vendors and most importantly with

145
00:05:28,320 --> 00:05:29,840
vulnerability

146
00:05:29,840 --> 00:05:32,000
and those are actually a very important

147
00:05:32,000 --> 00:05:33,840
part of the equation

148
00:05:33,840 --> 00:05:36,240
for us basically it's our branding

149
00:05:36,240 --> 00:05:37,440
better for

150
00:05:37,440 --> 00:05:40,720
vulnerability management as a vendor so

151
00:05:40,720 --> 00:05:42,960
in our view it is very important to

152
00:05:42,960 --> 00:05:45,199
establish good relationships with the

153
00:05:45,199 --> 00:05:46,960
navigator

154
00:05:46,960 --> 00:05:49,120
this is one of the reasons

155
00:05:49,120 --> 00:05:50,680
why we have

156
00:05:50,680 --> 00:05:53,600
advantage problem so they actually

157
00:05:53,600 --> 00:05:56,479
provide very good structure for

158
00:05:56,479 --> 00:05:58,240
the hacking effort

159
00:05:58,240 --> 00:06:00,960
um and they provide various incentives

160
00:06:00,960 --> 00:06:02,960
for researchers to participate and and

161
00:06:02,960 --> 00:06:03,759
here

162
00:06:03,759 --> 00:06:05,520
i'm not only talking about financial

163
00:06:05,520 --> 00:06:08,319
incentives but also the ability to get

164
00:06:08,319 --> 00:06:11,039
recognition to for the researchers to

165
00:06:11,039 --> 00:06:12,720
publish the research

166
00:06:12,720 --> 00:06:13,919
present their work

167
00:06:13,919 --> 00:06:16,080
conferences and so forth

168
00:06:16,080 --> 00:06:17,440
so

169
00:06:17,440 --> 00:06:19,360
it is

170
00:06:19,360 --> 00:06:21,759
an important option for us to provide a

171
00:06:21,759 --> 00:06:24,720
viable alternative viable option

172
00:06:24,720 --> 00:06:27,120
for vulnerability researchers to report

173
00:06:27,120 --> 00:06:30,000
vulnerabilities directly to the vendor

174
00:06:30,000 --> 00:06:32,160
and so that's a key tool for vendors to

175
00:06:32,160 --> 00:06:33,600
actually reduce the risk of good

176
00:06:33,600 --> 00:06:35,840
disclosure

177
00:06:36,080 --> 00:06:39,600
at huawei we actually run both public

178
00:06:39,600 --> 00:06:41,039
and private

179
00:06:41,039 --> 00:06:43,120
so invitation only programs for black

180
00:06:43,120 --> 00:06:45,039
bounties

181
00:06:45,039 --> 00:06:47,520
as an example of a public but party

182
00:06:47,520 --> 00:06:49,919
program i can refer you to our

183
00:06:49,919 --> 00:06:54,080
blood body program or our harmony os

184
00:06:54,080 --> 00:06:56,319
or our operating system for mobile

185
00:06:56,319 --> 00:06:57,520
devices

186
00:06:57,520 --> 00:06:59,199
so that is the public program you can

187
00:06:59,199 --> 00:07:01,440
find it if you follow the link under the

188
00:07:01,440 --> 00:07:04,080
presentation

189
00:07:04,080 --> 00:07:06,319
i'm also happy to share it on the chat

190
00:07:06,319 --> 00:07:08,160
if necessary um

191
00:07:08,160 --> 00:07:09,520
it

192
00:07:09,520 --> 00:07:11,759
illustrates basically what i just said

193
00:07:11,759 --> 00:07:13,039
the program

194
00:07:13,039 --> 00:07:16,880
it provides scoping information

195
00:07:16,880 --> 00:07:18,319
of the

196
00:07:18,319 --> 00:07:20,319
research support that is expected it

197
00:07:20,319 --> 00:07:21,599
provides a classification of

198
00:07:21,599 --> 00:07:23,759
vulnerabilities depending on severity

199
00:07:23,759 --> 00:07:25,919
and affected components and this

200
00:07:25,919 --> 00:07:28,000
classification is also mapped to a

201
00:07:28,000 --> 00:07:30,160
various amounts

202
00:07:30,160 --> 00:07:33,120
for financial payer

203
00:07:33,120 --> 00:07:35,440
but then there is a second interest to

204
00:07:35,440 --> 00:07:38,400
consider for for vendors

205
00:07:38,400 --> 00:07:39,440
and there

206
00:07:39,440 --> 00:07:41,360
the question

207
00:07:41,360 --> 00:07:43,360
for the vendor is actually

208
00:07:43,360 --> 00:07:46,479
how we make sure that all aspects of a

209
00:07:46,479 --> 00:07:48,240
product is

210
00:07:48,240 --> 00:07:49,599
are being covered

211
00:07:49,599 --> 00:07:51,440
so in this situation you have to

212
00:07:51,440 --> 00:07:53,039
consider that

213
00:07:53,039 --> 00:07:55,919
for many modern devices and products the

214
00:07:55,919 --> 00:07:58,319
complexity of the hardware and the

215
00:07:58,319 --> 00:08:01,039
software stack is is actually increasing

216
00:08:01,039 --> 00:08:03,120
so there is a need for an ever

217
00:08:03,120 --> 00:08:05,039
increasing combination of security

218
00:08:05,039 --> 00:08:06,720
expertise and domain

219
00:08:06,720 --> 00:08:09,280
domain level knowledge so it's

220
00:08:09,280 --> 00:08:10,720
different hardware shift sets on

221
00:08:10,720 --> 00:08:13,599
different communication technologies

222
00:08:13,599 --> 00:08:17,120
protocol stats radio access technologies

223
00:08:17,120 --> 00:08:18,879
positioning technologies and so on and

224
00:08:18,879 --> 00:08:20,400
so forth

225
00:08:20,400 --> 00:08:21,840
so

226
00:08:21,840 --> 00:08:24,400
often the top talents that can offer a

227
00:08:24,400 --> 00:08:27,840
specific combination of

228
00:08:28,240 --> 00:08:30,560
expertise are quite rare and such

229
00:08:30,560 --> 00:08:32,479
expertise is not going to be necessarily

230
00:08:32,479 --> 00:08:36,240
available in-house at the vending so a

231
00:08:36,240 --> 00:08:38,880
bug party program allows a vendor to tap

232
00:08:38,880 --> 00:08:40,719
into a vast pool of expertise that is

233
00:08:40,719 --> 00:08:43,360
available in the crowd and hopefully out

234
00:08:43,360 --> 00:08:44,480
of that

235
00:08:44,480 --> 00:08:47,760
with the right incentive and properly

236
00:08:47,760 --> 00:08:49,040
defined scope

237
00:08:49,040 --> 00:08:51,600
we can get interesting results so

238
00:08:51,600 --> 00:08:53,680
what i mean by interesting results here

239
00:08:53,680 --> 00:08:54,880
in this case

240
00:08:54,880 --> 00:08:56,480
actually covers

241
00:08:56,480 --> 00:08:57,839
different things

242
00:08:57,839 --> 00:09:00,320
mainly it could be vulnerabilities that

243
00:09:00,320 --> 00:09:02,080
are of high severity

244
00:09:02,080 --> 00:09:04,240
that the vendor did not find

245
00:09:04,240 --> 00:09:06,000
for various reasons

246
00:09:06,000 --> 00:09:08,399
but an external researcher

247
00:09:08,399 --> 00:09:11,279
found it so that's useful to report

248
00:09:11,279 --> 00:09:13,920
or vulnerabilities that cover components

249
00:09:13,920 --> 00:09:15,360
of the product

250
00:09:15,360 --> 00:09:16,959
on which the vendor does not have the

251
00:09:16,959 --> 00:09:18,640
expertise because for example the

252
00:09:18,640 --> 00:09:20,240
component is provided by the supply

253
00:09:20,240 --> 00:09:22,080
chain

254
00:09:22,080 --> 00:09:24,880
or that could also be innovative

255
00:09:24,880 --> 00:09:27,360
vulnerabilities that rely

256
00:09:27,360 --> 00:09:28,480
on new

257
00:09:28,480 --> 00:09:31,279
exploitation methods

258
00:09:31,279 --> 00:09:34,080
in any case those are vulnerabilities

259
00:09:34,080 --> 00:09:37,040
with high knowledge value so high added

260
00:09:37,040 --> 00:09:39,120
value from the vendor and the question

261
00:09:39,120 --> 00:09:40,800
then becomes what do we do with that

262
00:09:40,800 --> 00:09:42,160
knowledge

263
00:09:42,160 --> 00:09:44,640
uh so there are several things that we

264
00:09:44,640 --> 00:09:46,160
do of course

265
00:09:46,160 --> 00:09:47,760
of course there is the obvious one that

266
00:09:47,760 --> 00:09:49,360
we need to remediate the vulnerability

267
00:09:49,360 --> 00:09:51,360
that was reported

268
00:09:51,360 --> 00:09:53,200
that's the usual

269
00:09:53,200 --> 00:09:54,880
processes but let's not dwell on that

270
00:09:54,880 --> 00:09:57,600
too much but most importantly there is

271
00:09:57,600 --> 00:09:59,440
no learning

272
00:09:59,440 --> 00:10:01,040
and normally what is done in the

273
00:10:01,040 --> 00:10:02,959
learning phase of or at least what the

274
00:10:02,959 --> 00:10:04,720
vendor should do

275
00:10:04,720 --> 00:10:07,279
is to improve the secure development

276
00:10:07,279 --> 00:10:09,120
life cycle based on the knowledge that

277
00:10:09,120 --> 00:10:11,360
was gained from the vulnerability

278
00:10:11,360 --> 00:10:12,720
so

279
00:10:12,720 --> 00:10:15,839
this may entail for example improving

280
00:10:15,839 --> 00:10:17,760
the documentation and the tools that are

281
00:10:17,760 --> 00:10:20,079
available to the developers

282
00:10:20,079 --> 00:10:22,320
so that they avoid making similar

283
00:10:22,320 --> 00:10:24,640
mistakes in the future

284
00:10:24,640 --> 00:10:27,600
or maybe it's actually possible to kill

285
00:10:27,600 --> 00:10:30,320
the vulnerability plus entirely like

286
00:10:30,320 --> 00:10:32,079
what has been done for example in the

287
00:10:32,079 --> 00:10:33,839
linux kernel uh

288
00:10:33,839 --> 00:10:35,760
prevent uh middle pointer the

289
00:10:35,760 --> 00:10:37,600
referencing

290
00:10:37,600 --> 00:10:39,839
maybe it's also possible to introduce an

291
00:10:39,839 --> 00:10:42,640
export mitigation technique like

292
00:10:42,640 --> 00:10:44,160
islr

293
00:10:44,160 --> 00:10:47,519
and so forth so those are things that um

294
00:10:47,519 --> 00:10:50,240
the vendor can integrate

295
00:10:50,240 --> 00:10:52,640
in the secure development life cycle in

296
00:10:52,640 --> 00:10:54,560
the long term so the sooner the better

297
00:10:54,560 --> 00:10:56,640
but in the long term the the development

298
00:10:56,640 --> 00:10:59,040
life cycle should be improved take into

299
00:10:59,040 --> 00:11:02,079
account those new information and

300
00:11:02,079 --> 00:11:05,040
implement the right mitigations

301
00:11:05,040 --> 00:11:08,000
in the form of documentation on

302
00:11:08,000 --> 00:11:10,320
techniques

303
00:11:10,320 --> 00:11:13,120
and there is one question that remains

304
00:11:13,120 --> 00:11:16,240
and that is actually uh the question of

305
00:11:16,240 --> 00:11:18,320
what do we do right now with that

306
00:11:18,320 --> 00:11:21,360
information so for example bugs tend to

307
00:11:21,360 --> 00:11:22,560
repeat

308
00:11:22,560 --> 00:11:24,240
but there are variations of the winner

309
00:11:24,240 --> 00:11:26,399
between the code base

310
00:11:26,399 --> 00:11:27,279
and

311
00:11:27,279 --> 00:11:29,360
then does the vendor have some of those

312
00:11:29,360 --> 00:11:31,120
variations in their own codebase or

313
00:11:31,120 --> 00:11:32,480
maybe in other products that they've

314
00:11:32,480 --> 00:11:34,560
done and maybe we should also ask

315
00:11:34,560 --> 00:11:36,079
ourselves well

316
00:11:36,079 --> 00:11:38,160
why didn't we find the vulnerability

317
00:11:38,160 --> 00:11:40,800
that was reported already

318
00:11:40,800 --> 00:11:43,760
why for example our fuzzing efforts

319
00:11:43,760 --> 00:11:45,519
were not successful in finding that

320
00:11:45,519 --> 00:11:48,000
vulnerability that's where

321
00:11:48,000 --> 00:11:51,600
vulnerability research comes into play

322
00:11:51,600 --> 00:11:54,240
so in a high-level

323
00:11:54,240 --> 00:11:55,360
approach

324
00:11:55,360 --> 00:11:57,519
that's how the process could look like

325
00:11:57,519 --> 00:11:58,880
so this is only uh

326
00:11:58,880 --> 00:12:01,519
it wasn't processed

327
00:12:01,519 --> 00:12:04,240
in the normal uh processes of the p3 is

328
00:12:04,240 --> 00:12:06,959
the following so you still have

329
00:12:06,959 --> 00:12:10,399
the the intake interface from um

330
00:12:10,399 --> 00:12:12,880
from several stakeholders for

331
00:12:12,880 --> 00:12:15,040
with independent vulnerability reports

332
00:12:15,040 --> 00:12:17,440
including the program

333
00:12:17,440 --> 00:12:20,639
and during the during the

334
00:12:20,639 --> 00:12:23,279
and taking this into account

335
00:12:23,279 --> 00:12:24,800
um

336
00:12:24,800 --> 00:12:27,279
starts the normal triage and remediation

337
00:12:27,279 --> 00:12:28,560
process

338
00:12:28,560 --> 00:12:31,279
as usual but for selected

339
00:12:31,279 --> 00:12:34,000
vulnerabilities so vulnerabilities that

340
00:12:34,000 --> 00:12:36,079
are of interest because they are

341
00:12:36,079 --> 00:12:38,399
innovative or maybe they are very high

342
00:12:38,399 --> 00:12:40,639
severity and it's important to

343
00:12:40,639 --> 00:12:42,399
make sure that similar vulnerabilities

344
00:12:42,399 --> 00:12:44,560
are

345
00:12:45,519 --> 00:12:48,160
examined as quickly as possible then we

346
00:12:48,160 --> 00:12:51,600
start another parallel process which is

347
00:12:51,600 --> 00:12:53,600
vulnerability research process and this

348
00:12:53,600 --> 00:12:54,639
will

349
00:12:54,639 --> 00:12:57,360
hopefully lead to finding

350
00:12:57,360 --> 00:12:59,519
additional similar vulnerabilities that

351
00:12:59,519 --> 00:13:00,720
we can then

352
00:13:00,720 --> 00:13:03,040
look back so you know some sort of

353
00:13:03,040 --> 00:13:05,440
virtuous feedback

354
00:13:05,440 --> 00:13:08,800
into a key search so that those newly

355
00:13:08,800 --> 00:13:11,839
found vulnerabilities can be handled and

356
00:13:11,839 --> 00:13:13,279
scripted

357
00:13:13,279 --> 00:13:14,959
and those new availabilities would then

358
00:13:14,959 --> 00:13:17,518
actually be

359
00:13:19,519 --> 00:13:22,240
so taking over the work of the external

360
00:13:22,240 --> 00:13:24,000
vulnerability researcher through the

361
00:13:24,000 --> 00:13:25,680
bounty program

362
00:13:25,680 --> 00:13:27,279
to further analyze the situation and

363
00:13:27,279 --> 00:13:30,000
we'll be finding

364
00:13:30,560 --> 00:13:32,160
so

365
00:13:32,160 --> 00:13:33,360
what

366
00:13:33,360 --> 00:13:35,120
are the means that are available to us

367
00:13:35,120 --> 00:13:37,360
for this um so

368
00:13:37,360 --> 00:13:39,279
first maybe i would like to briefly

369
00:13:39,279 --> 00:13:41,440
define what vulnerability research is

370
00:13:41,440 --> 00:13:44,000
and that is actually a process used to

371
00:13:44,000 --> 00:13:46,399
find flows in software and hardware that

372
00:13:46,399 --> 00:13:48,560
could lead to a security issue

373
00:13:48,560 --> 00:13:51,040
so in our case we want that process to

374
00:13:51,040 --> 00:13:53,680
be informed that is to say

375
00:13:53,680 --> 00:13:56,480
we are going to direct the work you with

376
00:13:56,480 --> 00:13:58,000
the knowledge that we have applied from

377
00:13:58,000 --> 00:14:00,240
the initial vulnerability report

378
00:14:00,240 --> 00:14:01,920
and for this we have three letters i

379
00:14:01,920 --> 00:14:04,800
will we have several methods but i will

380
00:14:04,800 --> 00:14:07,440
present three of them today

381
00:14:07,440 --> 00:14:10,000
the first method is variant analysis and

382
00:14:10,000 --> 00:14:12,079
that's a method we can use to find

383
00:14:12,079 --> 00:14:14,079
similar vulnerabilities to the one that

384
00:14:14,079 --> 00:14:15,360
was reported

385
00:14:15,360 --> 00:14:18,480
and this is the method based on modeling

386
00:14:18,480 --> 00:14:20,720
the seven method that we can use is

387
00:14:20,720 --> 00:14:21,839
fuzzing

388
00:14:21,839 --> 00:14:24,480
and here the question for the vendor is

389
00:14:24,480 --> 00:14:27,600
actually more on the side of

390
00:14:27,600 --> 00:14:29,120
well

391
00:14:29,120 --> 00:14:32,480
if the initial vulnerability uh was

392
00:14:32,480 --> 00:14:34,160
found by fuzzing from the external

393
00:14:34,160 --> 00:14:35,440
researcher

394
00:14:35,440 --> 00:14:37,199
why didn't we find it through our

395
00:14:37,199 --> 00:14:39,839
internal physical so

396
00:14:39,839 --> 00:14:41,279
the question becomes okay what do we

397
00:14:41,279 --> 00:14:43,760
need to change in our fusing fusing

398
00:14:43,760 --> 00:14:46,160
activities to make sure that we can find

399
00:14:46,160 --> 00:14:48,079
that kind of vulnerability and similar

400
00:14:48,079 --> 00:14:49,680
ones in the future

401
00:14:49,680 --> 00:14:51,920
so the the application of variant

402
00:14:51,920 --> 00:14:54,240
analysis and feeding in this case are a

403
00:14:54,240 --> 00:14:56,160
bit different

404
00:14:56,160 --> 00:14:58,720
finally i will discuss a manual code

405
00:14:58,720 --> 00:15:01,120
review which is also an important aspect

406
00:15:01,120 --> 00:15:03,760
of vulnerability

407
00:15:03,760 --> 00:15:06,720
let's just start here with a

408
00:15:06,720 --> 00:15:08,800
vulnerability

409
00:15:08,800 --> 00:15:11,600
variant analysis excuse me

410
00:15:11,600 --> 00:15:13,920
so that's a method that relies on

411
00:15:13,920 --> 00:15:15,120
modeling

412
00:15:15,120 --> 00:15:16,639
and on using

413
00:15:16,639 --> 00:15:18,639
known vulnerabilities at the starting

414
00:15:18,639 --> 00:15:20,639
point to find similar problems in the

415
00:15:20,639 --> 00:15:22,639
code so there are many different tools

416
00:15:22,639 --> 00:15:25,920
to do this some of which are listed here

417
00:15:25,920 --> 00:15:29,120
on the slide i'm presenting right now

418
00:15:29,120 --> 00:15:30,480
and actually

419
00:15:30,480 --> 00:15:33,199
the most basic form of doing variant

420
00:15:33,199 --> 00:15:36,639
analysis is to use great it finds uh the

421
00:15:36,639 --> 00:15:38,639
same piece of vulnerable code elsewhere

422
00:15:38,639 --> 00:15:41,120
in the context so that's the simplest

423
00:15:41,120 --> 00:15:43,120
way to do it and actually

424
00:15:43,120 --> 00:15:45,839
even in recent years uh it it is still

425
00:15:45,839 --> 00:15:47,600
possible to find vulnerabilities that

426
00:15:47,600 --> 00:15:48,399
way

427
00:15:48,399 --> 00:15:50,800
uh but from a high-level point of view

428
00:15:50,800 --> 00:15:52,800
the process is the following so this is

429
00:15:52,800 --> 00:15:54,880
based on modeling and there are two

430
00:15:54,880 --> 00:15:55,759
sides

431
00:15:55,759 --> 00:15:57,120
on the one hand

432
00:15:57,120 --> 00:16:00,079
the source code to analyze is passed in

433
00:16:00,079 --> 00:16:01,519
order to get a special graph

434
00:16:01,519 --> 00:16:03,839
representation of that source code

435
00:16:03,839 --> 00:16:06,079
and this graph representation is made

436
00:16:06,079 --> 00:16:09,680
available as a method

437
00:16:09,680 --> 00:16:10,639
and

438
00:16:10,639 --> 00:16:12,079
there is a knowledge corpus of

439
00:16:12,079 --> 00:16:14,800
non-security but and those bugs are

440
00:16:14,800 --> 00:16:17,360
moduled into templates

441
00:16:17,360 --> 00:16:19,440
then those templates are used to query

442
00:16:19,440 --> 00:16:21,040
the graph representation of the source

443
00:16:21,040 --> 00:16:24,000
code if the queries succeed normally

444
00:16:24,000 --> 00:16:25,519
this should

445
00:16:25,519 --> 00:16:28,560
help us identify new security values

446
00:16:28,560 --> 00:16:31,600
that are similar to the one that

447
00:16:31,600 --> 00:16:33,680
those that are in the process

448
00:16:33,680 --> 00:16:35,120
so that's actually an established

449
00:16:35,120 --> 00:16:37,920
process of vulnerability research but

450
00:16:37,920 --> 00:16:41,440
the point here is to extend that

451
00:16:41,440 --> 00:16:42,560
with

452
00:16:42,560 --> 00:16:44,480
with the newly applied knowledge so we

453
00:16:44,480 --> 00:16:46,399
extend the knowledge corpus

454
00:16:46,399 --> 00:16:48,320
with the new vulnerability report so we

455
00:16:48,320 --> 00:16:50,560
need to model the new vulnerability so

456
00:16:50,560 --> 00:16:52,000
understand

457
00:16:52,000 --> 00:16:53,680
what the vulnerability is about and

458
00:16:53,680 --> 00:16:55,120
model it

459
00:16:55,120 --> 00:16:57,040
we'll get a template out of it and then

460
00:16:57,040 --> 00:16:59,199
we can query the graph implementation

461
00:16:59,199 --> 00:17:01,519
with this new knowledge

462
00:17:01,519 --> 00:17:02,800
and so that's

463
00:17:02,800 --> 00:17:04,640
one way to

464
00:17:04,640 --> 00:17:07,039
leverage the initial report using

465
00:17:07,039 --> 00:17:10,319
existing tools such as

466
00:17:13,760 --> 00:17:14,959
now

467
00:17:14,959 --> 00:17:15,919
with

468
00:17:15,919 --> 00:17:18,559
regard to further causing things are a

469
00:17:18,559 --> 00:17:20,160
bit different

470
00:17:20,160 --> 00:17:22,480
purposing is actually a

471
00:17:22,480 --> 00:17:24,400
as you know a dynamic software testing

472
00:17:24,400 --> 00:17:27,439
methodology that aims at finding bugs by

473
00:17:27,439 --> 00:17:29,520
feeding the software and the test with

474
00:17:29,520 --> 00:17:32,799
random data or with to the random data

475
00:17:32,799 --> 00:17:35,120
and observe the behavior of the offset

476
00:17:35,120 --> 00:17:36,559
software

477
00:17:36,559 --> 00:17:39,600
if under specific input the software

478
00:17:39,600 --> 00:17:41,919
crashes or the bug is triggered then

479
00:17:41,919 --> 00:17:47,400
that input is most likely triggered

480
00:17:48,720 --> 00:17:52,080
nicely triggered a security map

481
00:17:52,080 --> 00:17:54,880
so we have here again many different

482
00:17:54,880 --> 00:17:57,039
tools available to do that kind of

483
00:17:57,039 --> 00:18:00,240
activities we have format and grammar

484
00:18:00,240 --> 00:18:03,200
feathers like peach sully and conomicons

485
00:18:03,200 --> 00:18:06,160
we have pinball driven puzzles like the

486
00:18:06,160 --> 00:18:08,720
famous american phase loop and lip

487
00:18:08,720 --> 00:18:09,679
feather

488
00:18:09,679 --> 00:18:13,200
and we also have sanitizers like asano

489
00:18:13,200 --> 00:18:15,280
ubison so those are actually

490
00:18:15,280 --> 00:18:17,200
instrumentation tools that allow to

491
00:18:17,200 --> 00:18:20,480
detect um for example memory errors for

492
00:18:20,480 --> 00:18:22,799
asan and

493
00:18:22,799 --> 00:18:25,600
undefined behavior for ubison

494
00:18:25,600 --> 00:18:28,559
and so these sanitizers we can use them

495
00:18:28,559 --> 00:18:31,520
during the fuzzing effort as customers

496
00:18:31,520 --> 00:18:33,039
instrumentation

497
00:18:33,039 --> 00:18:35,360
for detecting when a bug is actually

498
00:18:35,360 --> 00:18:37,840
triggered by

499
00:18:37,840 --> 00:18:40,880
so from a high level perspective uh the

500
00:18:40,880 --> 00:18:42,480
way a building engine works is the

501
00:18:42,480 --> 00:18:44,240
following first

502
00:18:44,240 --> 00:18:46,799
you have an input corpus so that would

503
00:18:46,799 --> 00:18:49,600
be for example a valid input file to a

504
00:18:49,600 --> 00:18:50,640
program

505
00:18:50,640 --> 00:18:53,280
like it's a valid pdf file for example

506
00:18:53,280 --> 00:18:55,120
or it could also be valid input to a

507
00:18:55,120 --> 00:18:57,039
function inside the program that we want

508
00:18:57,039 --> 00:18:58,640
to first

509
00:18:58,640 --> 00:19:01,120
then we have the mutator which is

510
00:19:01,120 --> 00:19:03,440
uh which role is to modify

511
00:19:03,440 --> 00:19:06,799
that initial input so in the corpus

512
00:19:06,799 --> 00:19:09,600
we buy it randomly of sudo randomly so

513
00:19:09,600 --> 00:19:11,919
by sort of randomly i mean that one may

514
00:19:11,919 --> 00:19:15,360
want to only modify a specific part

515
00:19:15,360 --> 00:19:17,600
of the input and maybe according to

516
00:19:17,600 --> 00:19:20,240
specific patterns so we are only

517
00:19:20,240 --> 00:19:22,480
interested in a

518
00:19:22,480 --> 00:19:25,120
very special specific uh

519
00:19:25,120 --> 00:19:27,120
modifications maybe with a broad branch

520
00:19:27,120 --> 00:19:29,679
but specific modifications of specific

521
00:19:29,679 --> 00:19:31,600
places

522
00:19:31,600 --> 00:19:33,840
and that modified input is sent to the

523
00:19:33,840 --> 00:19:35,840
program or to the function that we want

524
00:19:35,840 --> 00:19:38,160
to first by means of the harness so the

525
00:19:38,160 --> 00:19:39,760
harness is actually

526
00:19:39,760 --> 00:19:42,320
a piece of code a piece of software that

527
00:19:42,320 --> 00:19:45,280
allows the fuzzer to interact with the

528
00:19:45,280 --> 00:19:47,440
software and the test so it's the glue

529
00:19:47,440 --> 00:19:49,120
that allows the puzzle to operate

530
00:19:49,120 --> 00:19:51,360
against the target

531
00:19:51,360 --> 00:19:52,640
finally

532
00:19:52,640 --> 00:19:55,520
we monitor the software and the test

533
00:19:55,520 --> 00:19:58,960
and if the crash happens or if a baggage

534
00:19:58,960 --> 00:20:02,080
is triggered then that is tracked and

535
00:20:02,080 --> 00:20:04,720
the crash information is then used to

536
00:20:04,720 --> 00:20:07,360
evaluate outside of the puzzle so

537
00:20:07,360 --> 00:20:10,000
outside of the freezing loop whether

538
00:20:10,000 --> 00:20:12,400
the modified input that triggered the

539
00:20:12,400 --> 00:20:14,480
bird has actually triggered an

540
00:20:14,480 --> 00:20:16,320
expressible level

541
00:20:16,320 --> 00:20:18,799
we run this process until

542
00:20:18,799 --> 00:20:20,960
for

543
00:20:21,440 --> 00:20:24,240
that's actually a very effective way of

544
00:20:24,240 --> 00:20:26,320
finding drugs

545
00:20:26,320 --> 00:20:27,679
if you look at the environment

546
00:20:27,679 --> 00:20:29,360
literature for physical principle

547
00:20:29,360 --> 00:20:32,080
projects uh there is a very very high

548
00:20:32,080 --> 00:20:33,600
number of words that have been found

549
00:20:33,600 --> 00:20:35,200
that way

550
00:20:35,200 --> 00:20:36,159
and

551
00:20:36,159 --> 00:20:39,120
just like with variant analysis this

552
00:20:39,120 --> 00:20:41,039
process can be adapted based on the

553
00:20:41,039 --> 00:20:42,960
knowledge acquired from the previous

554
00:20:42,960 --> 00:20:44,400
reports so

555
00:20:44,400 --> 00:20:46,240
the greatly the question becomes again

556
00:20:46,240 --> 00:20:49,440
okay uh how do you actually configure

557
00:20:49,440 --> 00:20:52,320
the presence of buying similar works

558
00:20:52,320 --> 00:20:54,159
and uh

559
00:20:54,159 --> 00:20:56,400
again why didn't we find similar

560
00:20:56,400 --> 00:20:58,240
vulnerabilities normally our photoshoots

561
00:20:58,240 --> 00:20:59,840
have detected them

562
00:20:59,840 --> 00:21:01,440
and actually here

563
00:21:01,440 --> 00:21:04,400
there are many reasons why the

564
00:21:04,400 --> 00:21:07,200
the fuzzer may not have detected

565
00:21:07,200 --> 00:21:08,799
in the first place

566
00:21:08,799 --> 00:21:10,960
uh maybe actually

567
00:21:10,960 --> 00:21:13,120
the function in which the vulnerability

568
00:21:13,120 --> 00:21:15,760
is present has not been tested so far so

569
00:21:15,760 --> 00:21:17,440
we would actually need to develop a

570
00:21:17,440 --> 00:21:19,600
specific hardness to interact with the

571
00:21:19,600 --> 00:21:21,440
function that has been

572
00:21:21,440 --> 00:21:24,240
tested by the by the external researcher

573
00:21:24,240 --> 00:21:27,360
vulnerability researcher

574
00:21:27,440 --> 00:21:29,840
and as a follow-up to that maybe we have

575
00:21:29,840 --> 00:21:32,480
similar functions in our code that also

576
00:21:32,480 --> 00:21:34,720
take input controlled by the attacker so

577
00:21:34,720 --> 00:21:36,960
we will also need harnesses for for

578
00:21:36,960 --> 00:21:38,880
those functions in order to be able to

579
00:21:38,880 --> 00:21:40,640
present

580
00:21:40,640 --> 00:21:43,600
maybe it was not detected because

581
00:21:43,600 --> 00:21:46,720
there was no crash so that means maybe

582
00:21:46,720 --> 00:21:48,400
we don't have the instrumentation that

583
00:21:48,400 --> 00:21:51,200
is needed in the monitoring part to

584
00:21:51,200 --> 00:21:53,840
actually detect the work

585
00:21:53,840 --> 00:21:55,919
and another possibility is that even

586
00:21:55,919 --> 00:21:58,559
though the proper functions are being

587
00:21:58,559 --> 00:22:00,960
first and that can be detected the

588
00:22:00,960 --> 00:22:03,280
initial corpus of the mutator will not

589
00:22:03,280 --> 00:22:06,640
have the right input

590
00:22:06,640 --> 00:22:09,039
it means the purpose of the mutator were

591
00:22:09,039 --> 00:22:11,280
not properly configured and we need to

592
00:22:11,280 --> 00:22:13,120
adapt them

593
00:22:13,120 --> 00:22:14,880
using using the knowledge of the

594
00:22:14,880 --> 00:22:17,280
vulnerability report here again so that

595
00:22:17,280 --> 00:22:20,320
we will produce them

596
00:22:22,720 --> 00:22:24,159
so

597
00:22:24,159 --> 00:22:26,159
so these are the things we can we can

598
00:22:26,159 --> 00:22:28,400
dispersing so that's again based on the

599
00:22:28,400 --> 00:22:30,480
initial vulnerability report

600
00:22:30,480 --> 00:22:31,679
so

601
00:22:31,679 --> 00:22:33,600
again i insist here this is about

602
00:22:33,600 --> 00:22:35,440
incorporating new knowledge new

603
00:22:35,440 --> 00:22:38,159
knowledge within an existing technique

604
00:22:38,159 --> 00:22:39,520
and that's why

605
00:22:39,520 --> 00:22:42,159
uh it's quite uh useful to bind this

606
00:22:42,159 --> 00:22:44,000
activity with bug bounty programs

607
00:22:44,000 --> 00:22:45,280
because usually

608
00:22:45,280 --> 00:22:47,679
uh we will uh we will

609
00:22:47,679 --> 00:22:48,640
receive

610
00:22:48,640 --> 00:22:51,039
very interesting vulnerability reports

611
00:22:51,039 --> 00:22:52,880
in the sense that we can

612
00:22:52,880 --> 00:22:55,760
really often learn new things about our

613
00:22:55,760 --> 00:22:58,000
code base as vendors

614
00:22:58,000 --> 00:23:00,400
out of those activities

615
00:23:00,400 --> 00:23:03,679
um and finally i would like to talk

616
00:23:03,679 --> 00:23:06,559
a bit about manual code review so

617
00:23:06,559 --> 00:23:08,480
that one is a bit different

618
00:23:08,480 --> 00:23:10,240
of course it is it is not an automated

619
00:23:10,240 --> 00:23:11,840
method

620
00:23:11,840 --> 00:23:13,600
but the practice it remains one of the

621
00:23:13,600 --> 00:23:15,280
best ways to find new types of

622
00:23:15,280 --> 00:23:17,200
vulnerability

623
00:23:17,200 --> 00:23:21,280
while automation is very good at finding

624
00:23:21,280 --> 00:23:23,360
vulnerabilities based on known security

625
00:23:23,360 --> 00:23:24,720
problems

626
00:23:24,720 --> 00:23:27,039
um it has a number of shortcomings and

627
00:23:27,039 --> 00:23:28,880
the first one is precisely that one

628
00:23:28,880 --> 00:23:30,640
needs to know about the security

629
00:23:30,640 --> 00:23:32,720
problems in the first place so if you

630
00:23:32,720 --> 00:23:36,159
start good for single problem space

631
00:23:36,159 --> 00:23:37,760
it's not really it's not really the same

632
00:23:37,760 --> 00:23:39,919
as trying to understand the problem that

633
00:23:39,919 --> 00:23:43,120
that has to be automated

634
00:23:43,279 --> 00:23:44,400
so

635
00:23:44,400 --> 00:23:45,600
currently

636
00:23:45,600 --> 00:23:48,960
if uh vulnerability research relies only

637
00:23:48,960 --> 00:23:50,640
on automation we run the risk of

638
00:23:50,640 --> 00:23:52,320
introducing um

639
00:23:52,320 --> 00:23:55,279
research by us so we are we run the risk

640
00:23:55,279 --> 00:23:55,919
of

641
00:23:55,919 --> 00:23:59,039
missing as vendors we are missing

642
00:23:59,039 --> 00:24:01,120
important vulnerabilities

643
00:24:01,120 --> 00:24:03,200
and that's actually a problem so that's

644
00:24:03,200 --> 00:24:04,559
why uh

645
00:24:04,559 --> 00:24:07,840
we we actually uh that's again

646
00:24:07,840 --> 00:24:10,240
making these two big bounty programs is

647
00:24:10,240 --> 00:24:12,559
a is a good way of

648
00:24:12,559 --> 00:24:14,240
compensating for that kind of risk that

649
00:24:14,240 --> 00:24:16,799
can be introduced so research we should

650
00:24:16,799 --> 00:24:20,559
buy as risk that can be introduced

651
00:24:21,679 --> 00:24:24,480
but back to manual code review um

652
00:24:24,480 --> 00:24:26,000
that's actually

653
00:24:26,000 --> 00:24:26,720
uh

654
00:24:26,720 --> 00:24:29,279
it it's actually a method that requires

655
00:24:29,279 --> 00:24:31,840
someone to learn how the code works we

656
00:24:31,840 --> 00:24:34,480
need to get out of their comfort zone

657
00:24:34,480 --> 00:24:36,640
and once someone has reached a good

658
00:24:36,640 --> 00:24:38,559
knowledge of the code they can actually

659
00:24:38,559 --> 00:24:40,799
try start testing complex

660
00:24:40,799 --> 00:24:43,520
use cases so they can try to look if for

661
00:24:43,520 --> 00:24:45,200
example if there are race conditions in

662
00:24:45,200 --> 00:24:48,080
the code or they can try to model the

663
00:24:48,080 --> 00:24:50,000
code and try to anticipate how it will

664
00:24:50,000 --> 00:24:52,880
react under certain conditions that's

665
00:24:52,880 --> 00:24:55,440
how we can bring novelty

666
00:24:55,440 --> 00:24:58,679
in the research

667
00:25:03,279 --> 00:25:07,520
a very important thing to do um so

668
00:25:07,520 --> 00:25:10,000
we don't necessarily do so that there

669
00:25:10,000 --> 00:25:11,919
are there are of course the vendors

670
00:25:11,919 --> 00:25:15,039
should have a internal research report

671
00:25:15,039 --> 00:25:17,840
that that is based on manual review but

672
00:25:17,840 --> 00:25:20,080
uh in fact many vulnerability

673
00:25:20,080 --> 00:25:23,120
researchers do use manual review

674
00:25:23,120 --> 00:25:24,960
mix

675
00:25:24,960 --> 00:25:28,480
their research activities so again

676
00:25:28,480 --> 00:25:29,279
we

677
00:25:29,279 --> 00:25:31,279
leverage their knowledge and very

678
00:25:31,279 --> 00:25:35,200
impressive multi-program to

679
00:25:35,760 --> 00:25:37,520
learn about new types of vulnerabilities

680
00:25:37,520 --> 00:25:38,880
eventually or new exploitation

681
00:25:38,880 --> 00:25:42,559
techniques or get information that on

682
00:25:42,559 --> 00:25:44,080
the end of the vendor may require

683
00:25:44,080 --> 00:25:46,880
further analysis and actually trigger

684
00:25:46,880 --> 00:25:48,240
new kind of

685
00:25:48,240 --> 00:25:50,640
research

686
00:25:52,400 --> 00:25:54,799
so as a conclusion

687
00:25:54,799 --> 00:25:58,159
uh i would like to give some kitty take

688
00:25:58,159 --> 00:25:59,919
away so

689
00:25:59,919 --> 00:26:02,799
it is uh it is actually possible to

690
00:26:02,799 --> 00:26:03,919
enhance

691
00:26:03,919 --> 00:26:06,320
the the vulnerability response process

692
00:26:06,320 --> 00:26:08,159
of the vendor

693
00:26:08,159 --> 00:26:09,760
using a feedback loop based on

694
00:26:09,760 --> 00:26:13,120
vulnerability research uh principles

695
00:26:13,120 --> 00:26:17,279
um from the knowledge gained from

696
00:26:17,279 --> 00:26:19,360
the ibt repository disclosed to the

697
00:26:19,360 --> 00:26:20,559
vendor

698
00:26:20,559 --> 00:26:22,640
and in order to

699
00:26:22,640 --> 00:26:25,039
maximize the the output bounty programs

700
00:26:25,039 --> 00:26:27,039
are actually a very good a very good way

701
00:26:27,039 --> 00:26:28,960
of doing this

702
00:26:28,960 --> 00:26:30,640
we are actually

703
00:26:30,640 --> 00:26:32,880
keen to get feedback from the community

704
00:26:32,880 --> 00:26:34,640
i'm happy to answer your questions now

705
00:26:34,640 --> 00:26:37,120
and we would also like to

706
00:26:37,120 --> 00:26:38,960
get your feedback on visibility and

707
00:26:38,960 --> 00:26:41,760
experience if you have

708
00:26:42,080 --> 00:26:43,679
okay

709
00:26:43,679 --> 00:26:45,840
there's a question from francois

710
00:26:45,840 --> 00:26:47,840
from andrew cormac sorry

711
00:26:47,840 --> 00:26:50,720
if you can see that one on your screen

712
00:26:50,720 --> 00:26:54,000
let me see up

713
00:26:55,760 --> 00:26:58,480
oh okay i'm wondering how hard it is to

714
00:26:58,480 --> 00:27:00,240
get vulnerability researchers to reveal

715
00:27:00,240 --> 00:27:01,919
their secrets if i'm making money from

716
00:27:01,919 --> 00:27:03,919
repeating vulnerabilities then i have an

717
00:27:03,919 --> 00:27:06,480
instance keep finding more myself

718
00:27:06,480 --> 00:27:10,000
not help the vendor to do it

719
00:27:12,880 --> 00:27:15,440
yeah good but actually that's precisely

720
00:27:15,440 --> 00:27:18,399
the point that we offer that i mean as

721
00:27:18,399 --> 00:27:19,679
part of your

722
00:27:19,679 --> 00:27:21,679
so so you have several aspects in the

723
00:27:21,679 --> 00:27:23,039
bug bounty program you have the

724
00:27:23,039 --> 00:27:25,520
financial incentive aspect so there is

725
00:27:25,520 --> 00:27:26,480
so the

726
00:27:26,480 --> 00:27:28,720
it's possible to financially reward the

727
00:27:28,720 --> 00:27:30,159
vulnerability researchers so that they

728
00:27:30,159 --> 00:27:31,679
actually share that secret

729
00:27:31,679 --> 00:27:33,360
of course share

730
00:27:33,360 --> 00:27:35,200
share the secret

731
00:27:35,200 --> 00:27:37,520
to really to provide the vulnerability

732
00:27:37,520 --> 00:27:39,760
report to us

733
00:27:39,760 --> 00:27:42,080
and we also give other incentives like

734
00:27:42,080 --> 00:27:43,440
we

735
00:27:43,440 --> 00:27:45,440
of course normally as part of the bounty

736
00:27:45,440 --> 00:27:46,720
program you have confidentiality

737
00:27:46,720 --> 00:27:48,640
agreements that they can also have

738
00:27:48,640 --> 00:27:50,640
agreements in the form of allowing the

739
00:27:50,640 --> 00:27:52,640
the researcher to publish their work uh

740
00:27:52,640 --> 00:27:53,919
once uh

741
00:27:53,919 --> 00:27:55,600
the secret the advisory has been

742
00:27:55,600 --> 00:27:57,440
published published on the event aside

743
00:27:57,440 --> 00:27:59,919
so so the event

744
00:27:59,919 --> 00:28:02,640
actually it's it's also a field where

745
00:28:02,640 --> 00:28:02,900
you

746
00:28:02,900 --> 00:28:04,159
[Music]

747
00:28:04,159 --> 00:28:05,840
researchers also need to exchange

748
00:28:05,840 --> 00:28:08,240
information otherwise uh you limit

749
00:28:08,240 --> 00:28:10,799
innovation

750
00:28:13,360 --> 00:28:15,039
it looks like that did it's it's

751
00:28:15,039 --> 00:28:17,279
disappeared so yes

752
00:28:17,279 --> 00:28:19,919
question done

753
00:28:20,320 --> 00:28:23,760
any other questions from anyone

754
00:28:24,480 --> 00:28:26,240
i'm aware we're sort of hitting the end

755
00:28:26,240 --> 00:28:28,080
times i imagine it's getting to the

756
00:28:28,080 --> 00:28:29,440
point where people are people are

757
00:28:29,440 --> 00:28:31,279
starting to flag but that was that was

758
00:28:31,279 --> 00:28:32,960
thankful for that was really interesting

759
00:28:32,960 --> 00:28:35,679
thank you

