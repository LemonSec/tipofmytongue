1
00:00:03,000 --> 00:00:05,870
foreign

2
00:00:05,870 --> 00:00:07,919
[Music]

3
00:00:07,919 --> 00:00:10,080
good morning

4
00:00:10,080 --> 00:00:12,780
I'm Leonel ferret working for the

5
00:00:12,780 --> 00:00:15,059
Belgian national cert and I will be your

6
00:00:15,059 --> 00:00:18,119
session chair this morning

7
00:00:18,119 --> 00:00:20,640
so our session chair I'm required to

8
00:00:20,640 --> 00:00:22,740
remind you to turn your phones back on

9
00:00:22,740 --> 00:00:24,500
when you leave the room

10
00:00:24,500 --> 00:00:27,480
I'm also required to ask you to remember

11
00:00:27,480 --> 00:00:32,098
to fill in the presentation surveys

12
00:00:32,098 --> 00:00:34,860
um after after the speech before

13
00:00:34,860 --> 00:00:37,500
preferably after and that way you can

14
00:00:37,500 --> 00:00:39,000
make an informed decision

15
00:00:39,000 --> 00:00:42,000
uh there will be questions at the end of

16
00:00:42,000 --> 00:00:44,640
the 30 minutes presentation there are a

17
00:00:44,640 --> 00:00:47,460
couple mics scattered through the

18
00:00:47,460 --> 00:00:49,680
um through the room for that so please

19
00:00:49,680 --> 00:00:53,280
use them and uh in the meantime without

20
00:00:53,280 --> 00:00:56,100
further Ado here are

21
00:00:56,100 --> 00:00:57,059
um

22
00:00:57,059 --> 00:00:59,879
Jaromir and Danielle from Trend Micro

23
00:00:59,879 --> 00:01:02,579
who are going to have a presentation

24
00:01:02,579 --> 00:01:07,020
about attacks on gambling customers so

25
00:01:07,020 --> 00:01:10,900
I enjoy and give them a warm welcome

26
00:01:10,900 --> 00:01:14,640
[Applause]

27
00:01:14,640 --> 00:01:16,979
so hi I'm Danielle this is Jeremiah we

28
00:01:16,979 --> 00:01:19,380
both for train micro and today we will

29
00:01:19,380 --> 00:01:21,240
talk about operation gambling puppet

30
00:01:21,240 --> 00:01:22,799
which was actually performed by a

31
00:01:22,799 --> 00:01:24,180
protector that we named Earth

32
00:01:24,180 --> 00:01:26,340
barbaroccan

33
00:01:26,340 --> 00:01:28,860
so this is a ton of the talk so after a

34
00:01:28,860 --> 00:01:31,500
few we'll see a few inspection vectors

35
00:01:31,500 --> 00:01:33,299
discuss some malware families some

36
00:01:33,299 --> 00:01:34,979
targets infrastructure then discuss

37
00:01:34,979 --> 00:01:38,159
attribution and conclude this talk

38
00:01:38,159 --> 00:01:40,380
so it all began with actually one

39
00:01:40,380 --> 00:01:42,899
malware sample from a Marvel family

40
00:01:42,899 --> 00:01:44,299
named xnot

41
00:01:44,299 --> 00:01:46,979
that was actually connecting to some

42
00:01:46,979 --> 00:01:48,720
domain name that was familiar to us

43
00:01:48,720 --> 00:01:50,759
because we already saw that domain name

44
00:01:50,759 --> 00:01:53,220
during an investigation named Operation

45
00:01:53,220 --> 00:01:57,119
Derby control that we made in 2020

46
00:01:57,119 --> 00:01:59,700
and so we this was a targeted attack so

47
00:01:59,700 --> 00:02:01,380
we felt it was going to be interesting

48
00:02:01,380 --> 00:02:03,899
and especially because in this case the

49
00:02:03,899 --> 00:02:06,719
platform targeted was Linux and in the

50
00:02:06,719 --> 00:02:08,160
previous investigation we did not see

51
00:02:08,160 --> 00:02:11,099
any Linux stuff so we decided to dig a

52
00:02:11,099 --> 00:02:13,319
bit about this so we pivoted on the

53
00:02:13,319 --> 00:02:15,000
these domain names

54
00:02:15,000 --> 00:02:17,099
and we found another malware family

55
00:02:17,099 --> 00:02:19,800
named hellobot again targeting the Linux

56
00:02:19,800 --> 00:02:22,319
which gave us more samples more domain

57
00:02:22,319 --> 00:02:23,940
names which you could we could pivot on

58
00:02:23,940 --> 00:02:26,040
those find other Marvel families like

59
00:02:26,040 --> 00:02:28,200
black dicks puppet loader or rats which

60
00:02:28,200 --> 00:02:29,520
were actually running on different

61
00:02:29,520 --> 00:02:32,220
platforms we found more and more Mario

62
00:02:32,220 --> 00:02:33,720
families after all these pivoting that

63
00:02:33,720 --> 00:02:36,300
we continue doing done doing on doing so

64
00:02:36,300 --> 00:02:38,700
we found out that other major platforms

65
00:02:38,700 --> 00:02:40,379
like Windows and Mac OS were also

66
00:02:40,379 --> 00:02:41,480
targeted

67
00:02:41,480 --> 00:02:44,360
this allowed us to find also some

68
00:02:44,360 --> 00:02:46,800
victims actually from this protector in

69
00:02:46,800 --> 00:02:48,959
our Telemetry and we could find also

70
00:02:48,959 --> 00:02:50,640
some infection vectors

71
00:02:50,640 --> 00:02:52,500
so let's start talking about those

72
00:02:52,500 --> 00:02:54,780
actually infection vectors the first one

73
00:02:54,780 --> 00:02:59,280
we noticed a website that was offering a

74
00:02:59,280 --> 00:03:01,440
chat application actually so you can see

75
00:03:01,440 --> 00:03:03,959
here in the screenshot what the website

76
00:03:03,959 --> 00:03:05,540
looked like so it written in Chinese

77
00:03:05,540 --> 00:03:08,459
that application was named Mimi which in

78
00:03:08,459 --> 00:03:10,319
Chinese means secret so it was supposed

79
00:03:10,319 --> 00:03:12,360
to be a secret chat application

80
00:03:12,360 --> 00:03:13,980
and as you can see in the bottom of the

81
00:03:13,980 --> 00:03:15,959
screenshot there were two platforms

82
00:03:15,959 --> 00:03:19,739
offered for installation Windows or Mac

83
00:03:19,739 --> 00:03:21,900
so we analyzed that application we found

84
00:03:21,900 --> 00:03:23,940
out it was written in electron.js which

85
00:03:23,940 --> 00:03:25,200
is some kind of framework based on

86
00:03:25,200 --> 00:03:27,420
node.js which means it is multi-platform

87
00:03:27,420 --> 00:03:30,060
so the protractor can recompile it for

88
00:03:30,060 --> 00:03:32,940
different platforms and we found out in

89
00:03:32,940 --> 00:03:35,220
one file that is called at the beginning

90
00:03:35,220 --> 00:03:38,459
of the installation that there was a few

91
00:03:38,459 --> 00:03:40,560
malicious pellets reference so in the

92
00:03:40,560 --> 00:03:42,840
case of the windows platform The Uso

93
00:03:42,840 --> 00:03:44,640
private executable was called and in the

94
00:03:44,640 --> 00:03:46,980
case of the Darwin platform which is Mac

95
00:03:46,980 --> 00:03:49,980
OS an executable name Darwin x64 was

96
00:03:49,980 --> 00:03:51,780
called you can see in the bottom of the

97
00:03:51,780 --> 00:03:54,239
screenshots that along this executable

98
00:03:54,239 --> 00:03:56,760
Uso private there was also a log dll

99
00:03:56,760 --> 00:04:00,060
file on the user provided that file so

100
00:04:00,060 --> 00:04:03,000
this is a typical Trident ways of that

101
00:04:03,000 --> 00:04:05,400
usually Chinese traductors use to load

102
00:04:05,400 --> 00:04:07,200
stuff you exporting dll side loading

103
00:04:07,200 --> 00:04:08,640
vulnerabilities in legitimate

104
00:04:08,640 --> 00:04:10,319
executables

105
00:04:10,319 --> 00:04:12,420
so in the end the target would visit

106
00:04:12,420 --> 00:04:15,560
this chat application download the the

107
00:04:15,560 --> 00:04:17,940
installer and then depending on the

108
00:04:17,940 --> 00:04:19,798
platform either in Windows the plugin

109
00:04:19,798 --> 00:04:22,680
malware would be loaded on in Mac OS the

110
00:04:22,680 --> 00:04:24,120
all right malware will be loaded so

111
00:04:24,120 --> 00:04:25,979
we'll discuss later this or at malware

112
00:04:25,979 --> 00:04:27,479
family

113
00:04:27,479 --> 00:04:29,580
also interesting the registration page

114
00:04:29,580 --> 00:04:32,220
for this application contains some font

115
00:04:32,220 --> 00:04:33,960
prefixes that were limited to certain

116
00:04:33,960 --> 00:04:36,479
countries and so this gives an idea of

117
00:04:36,479 --> 00:04:38,040
where the targets could be located so

118
00:04:38,040 --> 00:04:39,840
here you can see there was U.S and

119
00:04:39,840 --> 00:04:41,699
Canada on all other countries are in

120
00:04:41,699 --> 00:04:43,860
Southeast Asia

121
00:04:43,860 --> 00:04:46,979
a second infection Vector a bit more

122
00:04:46,979 --> 00:04:49,199
complicated this time was in this case

123
00:04:49,199 --> 00:04:51,060
the protractor would look for legitimate

124
00:04:51,060 --> 00:04:53,160
websites on search for cross-sized

125
00:04:53,160 --> 00:04:54,479
script invulnerabilities inside those

126
00:04:54,479 --> 00:04:56,340
websites actually persistent cross-sized

127
00:04:56,340 --> 00:04:58,500
scripting vulnerabilities and so they

128
00:04:58,500 --> 00:05:00,000
would exploit that to inject some

129
00:05:00,000 --> 00:05:01,259
JavaScript code

130
00:05:01,259 --> 00:05:02,940
and that code would be loaded when the

131
00:05:02,940 --> 00:05:06,060
victim visits this a particular page of

132
00:05:06,060 --> 00:05:07,919
this website

133
00:05:07,919 --> 00:05:10,560
so then what would happen is that the

134
00:05:10,560 --> 00:05:12,720
website would load again more JavaScript

135
00:05:12,720 --> 00:05:15,419
code from a third-party server which we

136
00:05:15,419 --> 00:05:17,340
call here the xss platform

137
00:05:17,340 --> 00:05:19,860
and then that platform would redirect

138
00:05:19,860 --> 00:05:22,139
the finer website which in this case was

139
00:05:22,139 --> 00:05:25,560
offering some fake Flash installer

140
00:05:25,560 --> 00:05:27,960
and so if the Target Falls for this lure

141
00:05:27,960 --> 00:05:30,539
and installs the fake Flash installer it

142
00:05:30,539 --> 00:05:31,680
would get the reverse from malware

143
00:05:31,680 --> 00:05:33,360
family so here I don't specify the

144
00:05:33,360 --> 00:05:35,400
family because we we solve over time

145
00:05:35,400 --> 00:05:40,080
different malware families being offered

146
00:05:40,740 --> 00:05:42,960
so the the the first JavaScript code

147
00:05:42,960 --> 00:05:44,880
inserted by the protractor actually just

148
00:05:44,880 --> 00:05:46,860
displayed this message that you can see

149
00:05:46,860 --> 00:05:48,900
here so again in Chinese it was some

150
00:05:48,900 --> 00:05:50,460
very simple message saying you should

151
00:05:50,460 --> 00:05:52,500
update your flash version

152
00:05:52,500 --> 00:05:56,520
uh so then PHP script was was a cold

153
00:05:56,520 --> 00:05:59,039
probably collection statistics about the

154
00:05:59,039 --> 00:06:02,039
victim under the the

155
00:06:02,039 --> 00:06:04,680
end website that deliver this Flash

156
00:06:04,680 --> 00:06:07,680
Player was also written in Chinese

157
00:06:07,680 --> 00:06:09,600
when we search in this third party

158
00:06:09,600 --> 00:06:12,120
server a bit more about it we found a

159
00:06:12,120 --> 00:06:14,039
login page actually on a different uh

160
00:06:14,039 --> 00:06:17,220
place of the the server different URL so

161
00:06:17,220 --> 00:06:18,660
we found this authentic authentication

162
00:06:18,660 --> 00:06:21,300
panel under the title of of this page

163
00:06:21,300 --> 00:06:23,100
was xss platform

164
00:06:23,100 --> 00:06:24,780
and there was some kind of disclaimer

165
00:06:24,780 --> 00:06:26,340
mentioning that this was a private

166
00:06:26,340 --> 00:06:28,560
platform and there are other free online

167
00:06:28,560 --> 00:06:31,259
exercise platforms over in the internet

168
00:06:31,259 --> 00:06:33,060
so we figured out actually what that

169
00:06:33,060 --> 00:06:35,639
what was this this uh platform is

170
00:06:35,639 --> 00:06:38,400
actually some kind of website that is

171
00:06:38,400 --> 00:06:40,800
used as a vulnerability scanner so the

172
00:06:40,800 --> 00:06:43,139
protractor would use this tool to search

173
00:06:43,139 --> 00:06:46,560
automatically for remote websites for

174
00:06:46,560 --> 00:06:48,360
across scripting vulnerabilities and

175
00:06:48,360 --> 00:06:49,860
then exploit them

176
00:06:49,860 --> 00:06:52,199
so this was interesting to us

177
00:06:52,199 --> 00:06:54,120
we found actually two different

178
00:06:54,120 --> 00:06:56,039
legitimate websites being exploited the

179
00:06:56,039 --> 00:06:58,139
first one was a News website aimed at

180
00:06:58,139 --> 00:07:00,960
the Chinese community and it was a based

181
00:07:00,960 --> 00:07:02,400
on a big U.S city

182
00:07:02,400 --> 00:07:04,259
and the other one unfortunately we could

183
00:07:04,259 --> 00:07:05,819
not identify it because it was just an

184
00:07:05,819 --> 00:07:07,500
IP address and it was offline at the

185
00:07:07,500 --> 00:07:09,180
time when we checked it

186
00:07:09,180 --> 00:07:10,979
the third and last infection Vector that

187
00:07:10,979 --> 00:07:13,380
we'll discuss is a DMG file so this is

188
00:07:13,380 --> 00:07:15,419
kind of an installer for Mac OS platform

189
00:07:15,419 --> 00:07:18,660
and it contains some malicious commands

190
00:07:18,660 --> 00:07:20,819
in the print style script which would

191
00:07:20,819 --> 00:07:23,280
just very simply download from remote

192
00:07:23,280 --> 00:07:25,919
some executable and launch it and what

193
00:07:25,919 --> 00:07:28,139
we can mention here that the file was

194
00:07:28,139 --> 00:07:30,240
named bitget.dmg and we found out that

195
00:07:30,240 --> 00:07:32,580
bitget is a cryptocurrency exchange

196
00:07:32,580 --> 00:07:35,039
application based in Singapore so again

197
00:07:35,039 --> 00:07:37,500
this gives an idea because this

198
00:07:37,500 --> 00:07:39,240
application certainly have some kind of

199
00:07:39,240 --> 00:07:41,699
relationship to the victim

200
00:07:41,699 --> 00:07:43,199
so it's not because some malware

201
00:07:43,199 --> 00:07:46,139
toolkits okay so I will continue with

202
00:07:46,139 --> 00:07:49,500
the malware toolkits so this projector

203
00:07:49,500 --> 00:07:51,300
was very interesting because they used

204
00:07:51,300 --> 00:07:52,860
lots of different malware family

205
00:07:52,860 --> 00:07:55,919
families under all three major platforms

206
00:07:55,919 --> 00:07:57,479
like Linux

207
00:07:57,479 --> 00:07:59,460
Mac and windows

208
00:07:59,460 --> 00:08:02,160
and from all these families many many of

209
00:08:02,160 --> 00:08:04,800
them are known or not very interesting

210
00:08:04,800 --> 00:08:07,259
so we'll just mention them on this slide

211
00:08:07,259 --> 00:08:10,500
but we will not go like much deeper into

212
00:08:10,500 --> 00:08:12,780
the analysis so out of the known ones

213
00:08:12,780 --> 00:08:16,560
are like plug X gold Strat Cobalt strike

214
00:08:16,560 --> 00:08:18,660
and few others many of these projects

215
00:08:18,660 --> 00:08:20,759
are easily available on GitHub for

216
00:08:20,759 --> 00:08:22,919
example so anyone can download them and

217
00:08:22,919 --> 00:08:25,259
use them so we will not spend any time

218
00:08:25,259 --> 00:08:27,360
or more time with these known families

219
00:08:27,360 --> 00:08:29,879
but we would later in this presentation

220
00:08:29,879 --> 00:08:32,640
go more deeper in some unique malware

221
00:08:32,640 --> 00:08:34,260
families which has been used by this

222
00:08:34,260 --> 00:08:36,320
trajector so these are some names

223
00:08:36,320 --> 00:08:39,240
particularly this puppet loader puppet

224
00:08:39,240 --> 00:08:42,179
downloader and all red which are which

225
00:08:42,179 --> 00:08:44,339
basically gave the name or which we used

226
00:08:44,339 --> 00:08:47,700
to give name to this operation

227
00:08:47,700 --> 00:08:50,279
for Linux there are also like few known

228
00:08:50,279 --> 00:08:52,740
from other families like X node hello

229
00:08:52,740 --> 00:08:55,680
bot and few others and also this

230
00:08:55,680 --> 00:08:58,320
investigation is still ongoing so we

231
00:08:58,320 --> 00:09:00,480
have found another kind of malware

232
00:09:00,480 --> 00:09:02,880
family or malware written in go language

233
00:09:02,880 --> 00:09:05,339
which we are investigating now and

234
00:09:05,339 --> 00:09:08,100
probably very soon we will publish a

235
00:09:08,100 --> 00:09:11,339
blog post or some update about it

236
00:09:11,339 --> 00:09:13,560
for Mac OS

237
00:09:13,560 --> 00:09:15,360
we have seen that there is this version

238
00:09:15,360 --> 00:09:17,700
of overet which is malware written in

239
00:09:17,700 --> 00:09:20,279
golang and it can be compiled into

240
00:09:20,279 --> 00:09:22,680
execute into executable files under

241
00:09:22,680 --> 00:09:24,480
different platforms so we have seen

242
00:09:24,480 --> 00:09:27,120
compile version for Windows but also for

243
00:09:27,120 --> 00:09:29,040
Mac OS

244
00:09:29,040 --> 00:09:31,320
so now we will continue or we will talk

245
00:09:31,320 --> 00:09:33,480
about this puppet loader which is very

246
00:09:33,480 --> 00:09:36,360
interesting piece of malware it has like

247
00:09:36,360 --> 00:09:39,600
five stages and the latest stage is the

248
00:09:39,600 --> 00:09:41,880
back door why we call it puppet loader

249
00:09:41,880 --> 00:09:44,399
because there is a screenshot then in

250
00:09:44,399 --> 00:09:46,740
the in the body of the of the executable

251
00:09:46,740 --> 00:09:49,620
file there was this text or there there

252
00:09:49,620 --> 00:09:51,680
is the string

253
00:09:51,680 --> 00:09:53,640
puppetloader.puppet.core dot something

254
00:09:53,640 --> 00:09:56,940
dot release and so on so we just took it

255
00:09:56,940 --> 00:09:59,880
we just took the string from the malware

256
00:09:59,880 --> 00:10:00,779
itself

257
00:10:00,779 --> 00:10:03,600
I said like it has like five stages what

258
00:10:03,600 --> 00:10:05,579
are these stages so the first stage is

259
00:10:05,579 --> 00:10:07,560
the stealthy loader

260
00:10:07,560 --> 00:10:11,040
it loads a dropper into memory then this

261
00:10:11,040 --> 00:10:13,620
dropper drops basic loader

262
00:10:13,620 --> 00:10:16,920
then it drops bitmap file but this

263
00:10:16,920 --> 00:10:20,820
bitmap file has some encoded data in the

264
00:10:20,820 --> 00:10:23,459
overlay then it drops another bitmap

265
00:10:23,459 --> 00:10:26,339
file with client code

266
00:10:26,339 --> 00:10:29,459
in overlay of the bitmap file then it

267
00:10:29,459 --> 00:10:32,519
executes basic loader which loads and

268
00:10:32,519 --> 00:10:35,640
decorates the core which is the fourth

269
00:10:35,640 --> 00:10:38,579
stage and the core decrypts and loads

270
00:10:38,579 --> 00:10:41,040
the last stage which is the back door

271
00:10:41,040 --> 00:10:43,399
itself

272
00:10:43,800 --> 00:10:45,959
one very interesting thing which we

273
00:10:45,959 --> 00:10:48,060
noticed when analyzing this puppet

274
00:10:48,060 --> 00:10:52,380
loader was usage of rc4 Cipher but this

275
00:10:52,380 --> 00:10:55,380
ic4 Cipher was somehow flawed like it

276
00:10:55,380 --> 00:10:58,860
didn't work as it should be because if

277
00:10:58,860 --> 00:11:01,380
you know or if you look at the algorithm

278
00:11:01,380 --> 00:11:04,320
of rc4 Cipher like several different

279
00:11:04,320 --> 00:11:06,720
operations but one of the operations is

280
00:11:06,720 --> 00:11:09,839
called swap which swaps like two memory

281
00:11:09,839 --> 00:11:11,160
values

282
00:11:11,160 --> 00:11:14,220
and it was implemented in this quite

283
00:11:14,220 --> 00:11:16,620
strange way I don't know why they're

284
00:11:16,620 --> 00:11:18,420
like five steps and you can see them in

285
00:11:18,420 --> 00:11:20,459
the left part of the slide so in the

286
00:11:20,459 --> 00:11:22,200
beginning they use some temporary value

287
00:11:22,200 --> 00:11:25,380
then then it puts like sum of these

288
00:11:25,380 --> 00:11:29,540
values then it moves it a few times

289
00:11:29,540 --> 00:11:33,180
subtract something and in the end both

290
00:11:33,180 --> 00:11:35,880
values should be swapped so how it work

291
00:11:35,880 --> 00:11:39,060
how it works this strangely implemented

292
00:11:39,060 --> 00:11:41,940
swap operation so see this diagram there

293
00:11:41,940 --> 00:11:44,640
are like two memory places like inj they

294
00:11:44,640 --> 00:11:47,339
have values one and two and there's like

295
00:11:47,339 --> 00:11:48,959
one temporary value

296
00:11:48,959 --> 00:11:52,139
so after the first step one plus two is

297
00:11:52,139 --> 00:11:56,480
three so you can see it easily here

298
00:11:56,760 --> 00:11:59,880
after the second step this value from

299
00:11:59,880 --> 00:12:02,720
here is assigned to this memory place

300
00:12:02,720 --> 00:12:05,639
after the third step there is the

301
00:12:05,639 --> 00:12:08,120
subtraction so this value changes to one

302
00:12:08,120 --> 00:12:12,600
after the fourth step the I value is

303
00:12:12,600 --> 00:12:14,639
assigned the temporary value so this

304
00:12:14,639 --> 00:12:16,500
value is copied here

305
00:12:16,500 --> 00:12:19,200
and after the fifth step there is this

306
00:12:19,200 --> 00:12:22,019
subtraction so basically from the

307
00:12:22,019 --> 00:12:25,139
original one and two the values in the

308
00:12:25,139 --> 00:12:27,060
memory are swapped so it seems it works

309
00:12:27,060 --> 00:12:27,899
well

310
00:12:27,899 --> 00:12:31,920
but what happens if I and J are equal so

311
00:12:31,920 --> 00:12:35,279
s i and SJ point to exactly the same

312
00:12:35,279 --> 00:12:37,980
location so again we can go through this

313
00:12:37,980 --> 00:12:39,120
algorithm

314
00:12:39,120 --> 00:12:42,899
so in the beginning s i plus SJ is one

315
00:12:42,899 --> 00:12:45,120
plus one so in temporary value there is

316
00:12:45,120 --> 00:12:47,160
suddenly two

317
00:12:47,160 --> 00:12:50,160
then the same value is copied from

318
00:12:50,160 --> 00:12:52,620
temporary variable value back to this

319
00:12:52,620 --> 00:12:54,720
memory location

320
00:12:54,720 --> 00:12:58,440
then temporary value is subtracted so

321
00:12:58,440 --> 00:13:00,839
here appears zero

322
00:13:00,839 --> 00:13:03,240
one more step

323
00:13:03,240 --> 00:13:05,220
from the valve from the original value

324
00:13:05,220 --> 00:13:08,160
is changed to zero and fifth step has no

325
00:13:08,160 --> 00:13:11,100
effect so suddenly like swapping the

326
00:13:11,100 --> 00:13:14,459
value of itself with the within the same

327
00:13:14,459 --> 00:13:16,980
location shouldn't do anything but this

328
00:13:16,980 --> 00:13:20,040
memory location is zeroed

329
00:13:20,040 --> 00:13:23,279
so this is the the the screenshot of the

330
00:13:23,279 --> 00:13:25,740
like internal state of the rc4 cipher

331
00:13:25,740 --> 00:13:28,380
there should be 256 values it should be

332
00:13:28,380 --> 00:13:31,200
permutation of all the byte values so

333
00:13:31,200 --> 00:13:34,560
from 0 0 to 0 xff so there should be all

334
00:13:34,560 --> 00:13:37,680
the each value exactly once but what you

335
00:13:37,680 --> 00:13:39,540
can see here originally there was zero

336
00:13:39,540 --> 00:13:44,040
here a zero here but after this step

337
00:13:44,040 --> 00:13:46,800
there was the value 2C and suddenly it

338
00:13:46,800 --> 00:13:49,620
became zero so there are like after this

339
00:13:49,620 --> 00:13:51,480
step they're like more zeros and the

340
00:13:51,480 --> 00:13:53,519
longer the process goes the more and

341
00:13:53,519 --> 00:13:56,820
more zeros are in this in this memory

342
00:13:56,820 --> 00:13:57,779
area

343
00:13:57,779 --> 00:14:00,120
until almost everything becomes zero

344
00:14:00,120 --> 00:14:01,980
which is which is the problem which

345
00:14:01,980 --> 00:14:03,899
shouldn't work like which is not correct

346
00:14:03,899 --> 00:14:06,120
RC for implementation so we have seen

347
00:14:06,120 --> 00:14:09,959
the same flawed rc4 implementation and

348
00:14:09,959 --> 00:14:12,120
two more malware families or to two more

349
00:14:12,120 --> 00:14:14,100
pieces of malware one was puppet

350
00:14:14,100 --> 00:14:15,959
downloader which was downloading like

351
00:14:15,959 --> 00:14:17,639
something from the internet and not

352
00:14:17,639 --> 00:14:19,980
executing the second stage and also

353
00:14:19,980 --> 00:14:23,639
there was like user and rootkit uh which

354
00:14:23,639 --> 00:14:27,060
was spreading uh plug X malware via RDP

355
00:14:27,060 --> 00:14:29,820
it was named by other researchers a

356
00:14:29,820 --> 00:14:31,980
spider tiger plaque so we have seen it

357
00:14:31,980 --> 00:14:34,800
like in this puppet loader plus two more

358
00:14:34,800 --> 00:14:36,720
malware family so they share something

359
00:14:36,720 --> 00:14:40,199
in common they share the same uh wrongly

360
00:14:40,199 --> 00:14:43,680
implemented or wrongly implemented RC

361
00:14:43,680 --> 00:14:45,240
for implementation

362
00:14:45,240 --> 00:14:47,699
so let's do a little bit more analysis

363
00:14:47,699 --> 00:14:50,699
on this puppet loader so I thought that

364
00:14:50,699 --> 00:14:53,699
the first stage is stealthy loader so

365
00:14:53,699 --> 00:14:56,279
what it does stealthy loader means that

366
00:14:56,279 --> 00:14:59,940
it replaces some code stealthy like on

367
00:14:59,940 --> 00:15:04,079
the fly so it uses hooking so first it

368
00:15:04,079 --> 00:15:06,300
hooks several functions so you can see

369
00:15:06,300 --> 00:15:08,579
here that there are a few functions of

370
00:15:08,579 --> 00:15:11,519
ntdll which are hooked and then also it

371
00:15:11,519 --> 00:15:14,459
uses some frames there are some

372
00:15:14,459 --> 00:15:17,060
undocumented functions to solve some

373
00:15:17,060 --> 00:15:20,519
recursive hooking problem

374
00:15:20,519 --> 00:15:23,220
so this is this is the the screenshot of

375
00:15:23,220 --> 00:15:26,040
some structure which was taken into

376
00:15:26,040 --> 00:15:28,019
memory basically what's interesting for

377
00:15:28,019 --> 00:15:30,240
us are there are some some file names

378
00:15:30,240 --> 00:15:33,000
this name or this name some of the the

379
00:15:33,000 --> 00:15:35,459
sizes some of the length which are later

380
00:15:35,459 --> 00:15:39,720
used in this stealthy process

381
00:15:39,720 --> 00:15:41,820
so this is like Step Up step by step

382
00:15:41,820 --> 00:15:45,000
what's going on so in the beginning the

383
00:15:45,000 --> 00:15:47,699
malware tries the loader tries to load

384
00:15:47,699 --> 00:15:51,600
this dll file Asic field.dll which would

385
00:15:51,600 --> 00:15:53,519
build a legitimate file which you can

386
00:15:53,519 --> 00:15:56,699
find in Windows directory

387
00:15:56,699 --> 00:16:01,380
but hooked and the open file will

388
00:16:01,380 --> 00:16:04,579
replace the name to the another file

389
00:16:04,579 --> 00:16:07,980
lz32.dll then hooked and pick rate

390
00:16:07,980 --> 00:16:10,560
section will check the handles if the

391
00:16:10,560 --> 00:16:14,279
handle matches this name that it fixes

392
00:16:14,279 --> 00:16:17,699
some sizes in the memory then hooked and

393
00:16:17,699 --> 00:16:20,279
teammate view of section again fixes

394
00:16:20,279 --> 00:16:21,540
some size

395
00:16:21,540 --> 00:16:24,959
and copies the malicious payload

396
00:16:24,959 --> 00:16:28,079
into into the memory section which was

397
00:16:28,079 --> 00:16:31,320
assigned to the to to this currently

398
00:16:31,320 --> 00:16:32,820
loaded file

399
00:16:32,820 --> 00:16:35,519
then empty then hooked antique query

400
00:16:35,519 --> 00:16:38,579
section does some computations because

401
00:16:38,579 --> 00:16:41,399
each file can be loaded either into

402
00:16:41,399 --> 00:16:44,519
preferred image base or the other image

403
00:16:44,519 --> 00:16:47,040
base and if it is not equal it will tell

404
00:16:47,040 --> 00:16:50,279
the loader to rebase it and load the

405
00:16:50,279 --> 00:16:51,839
dependencies

406
00:16:51,839 --> 00:16:54,360
so what it means like like this stealthy

407
00:16:54,360 --> 00:16:57,959
loading so if we check like loader data

408
00:16:57,959 --> 00:17:01,320
in the process it tells us that the file

409
00:17:01,320 --> 00:17:04,020
name called Asic filter.dll is loaded in

410
00:17:04,020 --> 00:17:05,640
the memory to this address

411
00:17:05,640 --> 00:17:08,939
if we use a process monitor or some tool

412
00:17:08,939 --> 00:17:12,119
for monitoring file operations it tells

413
00:17:12,119 --> 00:17:16,199
us that lz32.drl was loaded but actually

414
00:17:16,199 --> 00:17:18,780
none of these files was loaded or used

415
00:17:18,780 --> 00:17:20,579
there is the the virus known to

416
00:17:20,579 --> 00:17:23,459
malicious pilot in the memory

417
00:17:23,459 --> 00:17:25,380
so that's why we call it like stealthy

418
00:17:25,380 --> 00:17:27,179
stealthy loader

419
00:17:27,179 --> 00:17:31,440
stage 2 is dropper it drops just few

420
00:17:31,440 --> 00:17:33,840
files and some bitmap files with

421
00:17:33,840 --> 00:17:37,380
encrypted data in in the overlay there

422
00:17:37,380 --> 00:17:40,620
is not much important to say about it

423
00:17:40,620 --> 00:17:43,679
then the third stage basic loader it

424
00:17:43,679 --> 00:17:46,799
searches for few bitmap files and each

425
00:17:46,799 --> 00:17:48,480
of these bitmap files is like this one

426
00:17:48,480 --> 00:17:51,240
it's like very small picture 33 times 11

427
00:17:51,240 --> 00:17:53,220
pixels so it should be like few hundred

428
00:17:53,220 --> 00:17:55,260
bytes of size but in overlay there are

429
00:17:55,260 --> 00:17:56,880
hundreds of kilobytes

430
00:17:56,880 --> 00:17:59,640
float lc4 encrypted additional pilot

431
00:17:59,640 --> 00:18:01,200
payloads

432
00:18:01,200 --> 00:18:04,380
there is password hard-coded so this

433
00:18:04,380 --> 00:18:07,620
loader just finds the file decrypts the

434
00:18:07,620 --> 00:18:08,760
payload

435
00:18:08,760 --> 00:18:12,200
and loads it into the memory

436
00:18:12,200 --> 00:18:15,539
fourth fourth stage score

437
00:18:15,539 --> 00:18:19,080
it runs some thread logger so it keeps

438
00:18:19,080 --> 00:18:21,120
logging like events what are what are

439
00:18:21,120 --> 00:18:23,360
going on and it also handles some

440
00:18:23,360 --> 00:18:25,860
command line arguments so you can see

441
00:18:25,860 --> 00:18:27,600
there is list of arguments which are

442
00:18:27,600 --> 00:18:30,120
pretty self-explanatory you can also

443
00:18:30,120 --> 00:18:31,919
notice that the threat actor they type

444
00:18:31,919 --> 00:18:34,440
very quickly so instead of invoke there

445
00:18:34,440 --> 00:18:37,260
is letter V missing so they the one of

446
00:18:37,260 --> 00:18:39,780
these parameters is called in Oak and so

447
00:18:39,780 --> 00:18:43,260
on so basically it just tells us it if

448
00:18:43,260 --> 00:18:45,660
it should use either the stealthy loader

449
00:18:45,660 --> 00:18:47,640
as in the stage one or it can load the

450
00:18:47,640 --> 00:18:49,919
Shell Code which is like the binary just

451
00:18:49,919 --> 00:18:52,500
binary code without any executable

452
00:18:52,500 --> 00:18:53,940
headers

453
00:18:53,940 --> 00:18:56,520
and the fifth stage is the back door

454
00:18:56,520 --> 00:18:58,620
itself so here you can see the list of

455
00:18:58,620 --> 00:19:00,419
some functions which are like standard

456
00:19:00,419 --> 00:19:02,400
like backdoor functions like download

457
00:19:02,400 --> 00:19:05,640
upload shell commands and so on

458
00:19:05,640 --> 00:19:07,799
and there is also like a screenshot of

459
00:19:07,799 --> 00:19:10,799
the rc4 communication with CNC server

460
00:19:10,799 --> 00:19:14,100
again flawed rc4 encryption

461
00:19:14,100 --> 00:19:18,380
and the the call the key is also like

462
00:19:18,380 --> 00:19:21,780
sent via Wireless Channel

463
00:19:21,780 --> 00:19:24,840
so this was all about uh puppet loader

464
00:19:24,840 --> 00:19:27,660
then we will shortly look at orat which

465
00:19:27,660 --> 00:19:30,120
was mod multi-platform malware written

466
00:19:30,120 --> 00:19:33,240
in golang for this sorry

467
00:19:33,240 --> 00:19:35,520
for for this for this malware we are

468
00:19:35,520 --> 00:19:37,380
interested in

469
00:19:37,380 --> 00:19:39,900
in configuration this is the decorated

470
00:19:39,900 --> 00:19:43,280
configuration encryption is with a AES

471
00:19:43,280 --> 00:19:45,840
uh Cipher

472
00:19:45,840 --> 00:19:47,640
the most important features are the

473
00:19:47,640 --> 00:19:52,140
Gateway like traffic forwarder then it

474
00:19:52,140 --> 00:19:55,080
gives option to run the communication

475
00:19:55,080 --> 00:19:57,780
either encrypted or unencrypted it runs

476
00:19:57,780 --> 00:20:00,240
the local server when it registered

477
00:20:00,240 --> 00:20:02,580
so-called roots and attacker can

478
00:20:02,580 --> 00:20:04,080
directly connect to the infected machine

479
00:20:04,080 --> 00:20:06,900
and Via get and post request they can

480
00:20:06,900 --> 00:20:09,539
call like one of these commands so these

481
00:20:09,539 --> 00:20:11,880
names are again pretty self-explanatory

482
00:20:11,880 --> 00:20:14,400
like getting information uploading

483
00:20:14,400 --> 00:20:17,159
downloading files taking screenshots and

484
00:20:17,159 --> 00:20:18,600
so on

485
00:20:18,600 --> 00:20:21,419
now we will shortly talk about

486
00:20:21,419 --> 00:20:24,179
two malware families for Linux they are

487
00:20:24,179 --> 00:20:26,940
called X note and hello bot this has

488
00:20:26,940 --> 00:20:29,460
been known like from from the past

489
00:20:29,460 --> 00:20:30,840
but there have been also like

490
00:20:30,840 --> 00:20:32,820
extensively used by this thread actor

491
00:20:32,820 --> 00:20:35,220
they have like a typical red features

492
00:20:35,220 --> 00:20:38,400
rat features and for us researchers we

493
00:20:38,400 --> 00:20:40,620
are usually most interested not

494
00:20:40,620 --> 00:20:42,059
necessarily about the features but

495
00:20:42,059 --> 00:20:44,460
mainly about the configuration files so

496
00:20:44,460 --> 00:20:46,740
in these cases only configuration files

497
00:20:46,740 --> 00:20:48,720
are like sort encrypted and after

498
00:20:48,720 --> 00:20:52,260
decryption we can see like the part of

499
00:20:52,260 --> 00:20:54,059
the configuration file looks like this

500
00:20:54,059 --> 00:20:55,679
so there are lots of

501
00:20:55,679 --> 00:20:59,340
simplified Chinese commands followed by

502
00:20:59,340 --> 00:21:02,460
some some configuration settings and for

503
00:21:02,460 --> 00:21:04,799
us the most important settings are some

504
00:21:04,799 --> 00:21:07,620
comments or identifiers or nodes which

505
00:21:07,620 --> 00:21:10,140
can give us a hint whom these threat

506
00:21:10,140 --> 00:21:13,700
actor is targeting or like some kind of

507
00:21:13,700 --> 00:21:16,260
Distinction which is used by tradector

508
00:21:16,260 --> 00:21:18,780
to see to see like what campaign they

509
00:21:18,780 --> 00:21:22,760
are they are targeting

510
00:21:23,100 --> 00:21:25,260
also like one more interesting thing

511
00:21:25,260 --> 00:21:29,640
about uh X note and hello board that

512
00:21:29,640 --> 00:21:32,220
if you have if you have like session of

513
00:21:32,220 --> 00:21:36,240
X node they use or create one file with

514
00:21:36,240 --> 00:21:38,640
strange particular name which is this

515
00:21:38,640 --> 00:21:43,679
one however if if hello bot notices

516
00:21:43,679 --> 00:21:45,480
process

517
00:21:45,480 --> 00:21:48,360
touching or having having handle to this

518
00:21:48,360 --> 00:21:51,840
file it just kills the file kills kills

519
00:21:51,840 --> 00:21:53,820
the process so it probably tells us that

520
00:21:53,820 --> 00:21:57,179
either the thread actor used the X node

521
00:21:57,179 --> 00:21:59,520
before and then update it to hello bots

522
00:21:59,520 --> 00:22:02,280
so they wanted to kill the

523
00:22:02,280 --> 00:22:04,919
in the previous instances or maybe there

524
00:22:04,919 --> 00:22:06,840
might be like some some competition

525
00:22:06,840 --> 00:22:09,240
between like different groups that maybe

526
00:22:09,240 --> 00:22:12,480
before some machines were infected by X

527
00:22:12,480 --> 00:22:15,059
node but when it is it get later

528
00:22:15,059 --> 00:22:17,760
infected by hello bot it needs to like

529
00:22:17,760 --> 00:22:21,120
cancel all the or all the other malware

530
00:22:21,120 --> 00:22:24,240
just as the competition for resources

531
00:22:24,240 --> 00:22:26,100
okay and Danielle will continue with

532
00:22:26,100 --> 00:22:28,760
targets

533
00:22:29,220 --> 00:22:30,659
so actually we use three different

534
00:22:30,659 --> 00:22:32,820
sources to find the targets of course

535
00:22:32,820 --> 00:22:35,039
the first obvious one is the Telemetry

536
00:22:35,039 --> 00:22:37,860
so our Telemetry but we also we as we

537
00:22:37,860 --> 00:22:40,679
mentioned uh just on by Jaromir we use

538
00:22:40,679 --> 00:22:42,299
some decrypted memory configuration

539
00:22:42,299 --> 00:22:44,700
files so they we had some hints about

540
00:22:44,700 --> 00:22:46,860
the targets the the or some relationship

541
00:22:46,860 --> 00:22:49,620
to the targets and also some of these

542
00:22:49,620 --> 00:22:52,200
malware families like projects actually

543
00:22:52,200 --> 00:22:54,740
has had some features to

544
00:22:54,740 --> 00:22:58,980
record the keystrokes of the victim and

545
00:22:58,980 --> 00:23:01,860
they put those in some kind of file and

546
00:23:01,860 --> 00:23:03,179
we found that during the while some of

547
00:23:03,179 --> 00:23:05,400
those files and we could also use that

548
00:23:05,400 --> 00:23:08,580
as a source to find in some targets so

549
00:23:08,580 --> 00:23:10,799
let's talk about doctrometry first we

550
00:23:10,799 --> 00:23:12,720
found the 15 downloads of this fake

551
00:23:12,720 --> 00:23:14,520
flash downloader that I mentioned before

552
00:23:14,520 --> 00:23:17,220
they were all for from China actually so

553
00:23:17,220 --> 00:23:19,320
all Chinese victims

554
00:23:19,320 --> 00:23:21,539
and then also about we saw five

555
00:23:21,539 --> 00:23:22,980
redirects from that legitimate News

556
00:23:22,980 --> 00:23:25,559
website all coming from us which makes

557
00:23:25,559 --> 00:23:28,020
sense because that News website was from

558
00:23:28,020 --> 00:23:30,179
a big U.S city but we know that behind

559
00:23:30,179 --> 00:23:32,039
that there are some Chinese communities

560
00:23:32,039 --> 00:23:35,520
so again Chinese victims also tree

561
00:23:35,520 --> 00:23:37,260
redirects from this and non-websites

562
00:23:37,260 --> 00:23:39,419
that came from Hong Kong on Malaysia on

563
00:23:39,419 --> 00:23:41,400
one dll detected in Taiwan so again

564
00:23:41,400 --> 00:23:43,919
Southeast Asia

565
00:23:43,919 --> 00:23:46,200
uh on the key logs that we analyzed we

566
00:23:46,200 --> 00:23:48,539
could identify three victims two of them

567
00:23:48,539 --> 00:23:51,299
were from a Chinese gambling website on

568
00:23:51,299 --> 00:23:53,340
one was for from Malaysia hosting

569
00:23:53,340 --> 00:23:54,419
provider

570
00:23:54,419 --> 00:23:57,059
so again Southeast Asia and in the

571
00:23:57,059 --> 00:23:58,380
configuration files that we mentioned

572
00:23:58,380 --> 00:24:01,140
before so this is an excerpt of the like

573
00:24:01,140 --> 00:24:03,120
interesting keywords that we found and

574
00:24:03,120 --> 00:24:06,360
you can see that like yabo or w88 are

575
00:24:06,360 --> 00:24:08,340
gambling betting websites a huge

576
00:24:08,340 --> 00:24:11,100
websites actually so the the victims

577
00:24:11,100 --> 00:24:13,080
probably have some relationship to those

578
00:24:13,080 --> 00:24:15,600
websites and after we publish this uh

579
00:24:15,600 --> 00:24:19,140
this investigation on our blog we then

580
00:24:19,140 --> 00:24:20,820
found more samples being uploaded to

581
00:24:20,820 --> 00:24:23,940
Aristotle and we found even one Russian

582
00:24:23,940 --> 00:24:26,279
defense company being targeted so like

583
00:24:26,279 --> 00:24:28,679
this is not the regular targeting we're

584
00:24:28,679 --> 00:24:31,559
expecting from this protector but yeah

585
00:24:31,559 --> 00:24:33,299
so so there is some maybe some wider

586
00:24:33,299 --> 00:24:35,520
targeting actually

587
00:24:35,520 --> 00:24:38,220
so as we saw mainly the targets are in

588
00:24:38,220 --> 00:24:40,140
China but also Southeast Asian countries

589
00:24:40,140 --> 00:24:42,960
Russia and us the main targeted industry

590
00:24:42,960 --> 00:24:44,340
is gambling but we also saw some

591
00:24:44,340 --> 00:24:46,440
sensitive Industries like defense or

592
00:24:46,440 --> 00:24:49,559
Electronics manufacturing being targeted

593
00:24:49,559 --> 00:24:52,100
so no quick word about infrastructure

594
00:24:52,100 --> 00:24:55,020
it was quite big I mean for an apt group

595
00:24:55,020 --> 00:24:57,799
of course so we saw it

596
00:24:57,799 --> 00:25:01,200
approximately 50 common control servers

597
00:25:01,200 --> 00:25:03,779
but if we looked at the related sub

598
00:25:03,779 --> 00:25:06,059
domains from this community control

599
00:25:06,059 --> 00:25:08,880
servers we found more than 150 so which

600
00:25:08,880 --> 00:25:12,419
is quite big number and also we found at

601
00:25:12,419 --> 00:25:14,820
least 13 different malware families so

602
00:25:14,820 --> 00:25:16,200
this means on the attacker side they

603
00:25:16,200 --> 00:25:19,620
need to maintain 13 different back-ends

604
00:25:19,620 --> 00:25:22,440
so this also is like a huge burden on

605
00:25:22,440 --> 00:25:23,880
the attacker's side so they have some

606
00:25:23,880 --> 00:25:26,700
big operational Manpower

607
00:25:26,700 --> 00:25:28,799
uh so some of the domain names use

608
00:25:28,799 --> 00:25:31,919
cloudflare to hit the IP address and

609
00:25:31,919 --> 00:25:35,039
they had an interesting way of using

610
00:25:35,039 --> 00:25:36,960
that that we will see just right now so

611
00:25:36,960 --> 00:25:39,299
the sometimes they would use a domain

612
00:25:39,299 --> 00:25:41,640
name on all of the subdomains would

613
00:25:41,640 --> 00:25:43,860
relate to a different malware family so

614
00:25:43,860 --> 00:25:45,720
let's see an example of this you have

615
00:25:45,720 --> 00:25:48,059
the domain name github.wiki

616
00:25:48,059 --> 00:25:49,620
this is our next episode of the

617
00:25:49,620 --> 00:25:51,360
different subdomains that we found

618
00:25:51,360 --> 00:25:54,240
and if you go to this github.wiki domain

619
00:25:54,240 --> 00:25:55,980
name you will see this legitimate page

620
00:25:55,980 --> 00:25:57,539
being displayed which is actually the

621
00:25:57,539 --> 00:25:59,640
GitHub documentation so this is pretty

622
00:25:59,640 --> 00:26:02,220
smart on the attacker side because this

623
00:26:02,220 --> 00:26:04,919
page was actually indexed by the search

624
00:26:04,919 --> 00:26:06,960
engines and probably the ranking or

625
00:26:06,960 --> 00:26:09,360
maybe the the this domain would look as

626
00:26:09,360 --> 00:26:11,520
legitimately maybe maybe even be

627
00:26:11,520 --> 00:26:13,320
misclassified by some Security Solutions

628
00:26:13,320 --> 00:26:15,659
has been legitimate but what we found

629
00:26:15,659 --> 00:26:17,760
out is that there is for example here a

630
00:26:17,760 --> 00:26:20,340
hello bot malware sample connecting to

631
00:26:20,340 --> 00:26:22,919
one of the subdomains of github.wiki or

632
00:26:22,919 --> 00:26:25,679
this other sub domain delivering or at

633
00:26:25,679 --> 00:26:27,720
malware sample which connected to a

634
00:26:27,720 --> 00:26:30,480
different sub domain of github.wiki or

635
00:26:30,480 --> 00:26:32,460
the delivering a copyright sample

636
00:26:32,460 --> 00:26:34,380
connecting to another sub domain and

637
00:26:34,380 --> 00:26:37,159
even we found this last sub domain name

638
00:26:37,159 --> 00:26:38,940
check.github.wiki which actually was

639
00:26:38,940 --> 00:26:41,640
some malware panel authentication panel

640
00:26:41,640 --> 00:26:43,860
so probably behind the certification

641
00:26:43,860 --> 00:26:45,659
panel The Protector could actually

642
00:26:45,659 --> 00:26:48,059
control his Bots

643
00:26:48,059 --> 00:26:50,400
and you cannot see here probably because

644
00:26:50,400 --> 00:26:52,679
it's too small but it was written in

645
00:26:52,679 --> 00:26:54,419
Chinese again

646
00:26:54,419 --> 00:26:57,120
another example is this fbi.am domain

647
00:26:57,120 --> 00:26:59,580
name it's had this order subdomains on

648
00:26:59,580 --> 00:27:01,980
every one of these five sub domains was

649
00:27:01,980 --> 00:27:05,460
related to a different malware family

650
00:27:05,460 --> 00:27:07,440
another funny stuff that we found

651
00:27:07,440 --> 00:27:08,940
actually so if you're like me and don't

652
00:27:08,940 --> 00:27:10,980
speak Chinese these domain names or

653
00:27:10,980 --> 00:27:13,020
subdomain names who want to raise any

654
00:27:13,020 --> 00:27:13,980
flag

655
00:27:13,980 --> 00:27:16,860
but if you actually do speak Chinese I

656
00:27:16,860 --> 00:27:18,480
will put here just the translation of

657
00:27:18,480 --> 00:27:20,640
these domain names

658
00:27:20,640 --> 00:27:24,419
and yeah I think we were unsure but I

659
00:27:24,419 --> 00:27:25,799
mean is the protector trying to pass a

660
00:27:25,799 --> 00:27:28,080
message we don't really know or at least

661
00:27:28,080 --> 00:27:29,820
it shows some kind of interest for this

662
00:27:29,820 --> 00:27:31,860
trajectory we don't know but it was kind

663
00:27:31,860 --> 00:27:35,039
of funny for us to find this

664
00:27:35,039 --> 00:27:36,659
so a quick word about the attribution

665
00:27:36,659 --> 00:27:39,539
now uh first of all what we are sure of

666
00:27:39,539 --> 00:27:41,100
and what we can say is this protector

667
00:27:41,100 --> 00:27:43,620
definitely speaks Chinese we saw a lot

668
00:27:43,620 --> 00:27:45,539
of example of this we also didn't

669
00:27:45,539 --> 00:27:47,700
mention but that xss platform that we

670
00:27:47,700 --> 00:27:49,860
discussed in the beginning in the HTML

671
00:27:49,860 --> 00:27:51,840
code we could find the source actually

672
00:27:51,840 --> 00:27:54,480
uh where this platform was downloaded

673
00:27:54,480 --> 00:27:56,220
the source code was downloaded and it

674
00:27:56,220 --> 00:27:58,200
was from a Chinese Forum the panel

675
00:27:58,200 --> 00:27:59,640
itself was written in Chinese the

676
00:27:59,640 --> 00:28:01,260
malware panel in Chinese

677
00:28:01,260 --> 00:28:03,120
the decrypted configuration files were

678
00:28:03,120 --> 00:28:05,340
content comments in Chinese all of those

679
00:28:05,340 --> 00:28:08,120
fake websites delivering

680
00:28:08,120 --> 00:28:10,380
installers background installers were in

681
00:28:10,380 --> 00:28:12,659
Chinese and also some of those malware

682
00:28:12,659 --> 00:28:14,159
families are known to registered from

683
00:28:14,159 --> 00:28:16,500
China like projects on ghosts malware so

684
00:28:16,500 --> 00:28:18,539
I think within no further proof that the

685
00:28:18,539 --> 00:28:21,240
protector speaks Chinese definitely

686
00:28:21,240 --> 00:28:23,940
but we also found some links to some

687
00:28:23,940 --> 00:28:27,360
known groups actually so as I mentioned

688
00:28:27,360 --> 00:28:28,919
it all started with this domain name

689
00:28:28,919 --> 00:28:31,919
being linked to operation drb control in

690
00:28:31,919 --> 00:28:33,840
this operation DLB control we found at

691
00:28:33,840 --> 00:28:36,000
the time the usage of high purple Marvel

692
00:28:36,000 --> 00:28:38,520
family and as far as we know these

693
00:28:38,520 --> 00:28:41,700
Marvel families use exclusively by Iron

694
00:28:41,700 --> 00:28:43,740
tiger also tractor also called Emissary

695
00:28:43,740 --> 00:28:45,899
Panda or apt-27

696
00:28:45,899 --> 00:28:48,179
so this is not at least as far as we

697
00:28:48,179 --> 00:28:50,159
know a shared tool

698
00:28:50,159 --> 00:28:53,760
we also found in the analysis of xnote

699
00:28:53,760 --> 00:28:56,220
by Dr Webb that they attributed this

700
00:28:56,220 --> 00:28:58,799
model family to China's group

701
00:28:58,799 --> 00:29:00,360
and this group we found another blog

702
00:29:00,360 --> 00:29:02,580
post by integer that attributed this

703
00:29:02,580 --> 00:29:04,559
group that linked this group to

704
00:29:04,559 --> 00:29:06,659
operation PC child which is some kind of

705
00:29:06,659 --> 00:29:09,360
blog post by bitdefender and bitdefender

706
00:29:09,360 --> 00:29:11,880
linked this operation to iron tiger too

707
00:29:11,880 --> 00:29:14,580
so here we have here two like low

708
00:29:14,580 --> 00:29:15,740
confidence

709
00:29:15,740 --> 00:29:18,899
links to iron tigers attackedo

710
00:29:18,899 --> 00:29:21,480
we also found on the other side a dll

711
00:29:21,480 --> 00:29:23,700
been signed by a certificate from

712
00:29:23,700 --> 00:29:25,440
Gravity company so gravity is some

713
00:29:25,440 --> 00:29:28,679
gaming Korean company legitimate one

714
00:29:28,679 --> 00:29:30,539
um and so this this they were

715
00:29:30,539 --> 00:29:32,580
compromised of course and the one of the

716
00:29:32,580 --> 00:29:34,740
dll was signed by their certificate we

717
00:29:34,740 --> 00:29:36,360
found one blog post by two intelligence

718
00:29:36,360 --> 00:29:38,880
that stated that this gravity company

719
00:29:38,880 --> 00:29:40,159
was probably

720
00:29:40,159 --> 00:29:43,140
compromised by the win and TI tractor

721
00:29:43,140 --> 00:29:44,700
which is some kind of an umbrella

722
00:29:44,700 --> 00:29:46,500
actually so more specifically it would

723
00:29:46,500 --> 00:29:48,779
be the subgroups Casper or lead

724
00:29:48,779 --> 00:29:51,240
and we also found a blog post by ESET

725
00:29:51,240 --> 00:29:53,399
that also said the same team that

726
00:29:53,399 --> 00:29:55,140
gravity actually was compromised by the

727
00:29:55,140 --> 00:29:57,539
William TI and let's remember also

728
00:29:57,539 --> 00:29:58,799
during our previous investigation

729
00:29:58,799 --> 00:30:00,539
approaching the urban control

730
00:30:00,539 --> 00:30:03,539
had a link also between NTI we could

731
00:30:03,539 --> 00:30:05,760
find some passive domain by using

732
00:30:05,760 --> 00:30:07,140
passive DNS we found some domain name

733
00:30:07,140 --> 00:30:09,059
related to win NTI so if you look at

734
00:30:09,059 --> 00:30:11,100
this graph it's very messy and I think

735
00:30:11,100 --> 00:30:13,380
anyone that worked on Chinese protector

736
00:30:13,380 --> 00:30:15,120
knows that they share a lot of tools so

737
00:30:15,120 --> 00:30:17,100
this is a lot of difficult attribution

738
00:30:17,100 --> 00:30:19,679
so that's why actually we chose to like

739
00:30:19,679 --> 00:30:23,159
name the the protractor to the our own

740
00:30:23,159 --> 00:30:25,080
name undone but but still mention these

741
00:30:25,080 --> 00:30:26,940
links

742
00:30:26,940 --> 00:30:29,340
so let's conclude now uh what would be

743
00:30:29,340 --> 00:30:31,799
the takeaway for for this session so we

744
00:30:31,799 --> 00:30:33,480
saw that pivoting on the infrastructure

745
00:30:33,480 --> 00:30:35,820
can help to relate apparently totally in

746
00:30:35,820 --> 00:30:37,440
related Marvel families so here we saw

747
00:30:37,440 --> 00:30:39,960
some families targeting Linux or Mac OS

748
00:30:39,960 --> 00:30:41,520
or Windows and actually we could find

749
00:30:41,520 --> 00:30:43,980
some Link in the infrastructure

750
00:30:43,980 --> 00:30:47,399
also as a Jeremy showed before we can

751
00:30:47,399 --> 00:30:49,620
analyze the cryptographic algorithms and

752
00:30:49,620 --> 00:30:51,840
if you find some flaws inside them it

753
00:30:51,840 --> 00:30:54,299
can help you to find other malware

754
00:30:54,299 --> 00:30:56,640
families that are related to this also

755
00:30:56,640 --> 00:30:58,620
more simply you can just check at the

756
00:30:58,620 --> 00:31:00,779
encryption keys and again it can help

757
00:31:00,779 --> 00:31:04,140
you to find other related malwares again

758
00:31:04,140 --> 00:31:06,120
declutting the malware configuration is

759
00:31:06,120 --> 00:31:07,559
also useful because we'll find an

760
00:31:07,559 --> 00:31:09,779
interesting information in them not only

761
00:31:09,779 --> 00:31:12,840
the CNC actually and please check also

762
00:31:12,840 --> 00:31:14,580
at the signatures of the the files

763
00:31:14,580 --> 00:31:16,919
because it can help you to do some

764
00:31:16,919 --> 00:31:18,120
attribution or find maybe some

765
00:31:18,120 --> 00:31:21,059
correlation to some non-group

766
00:31:21,059 --> 00:31:22,620
so to conclude this was an advanced

767
00:31:22,620 --> 00:31:24,779
protector we showed that it had a big

768
00:31:24,779 --> 00:31:26,220
infrastructure a lot of development

769
00:31:26,220 --> 00:31:28,919
capabilities a large toolkit like more

770
00:31:28,919 --> 00:31:31,140
than 13 malware families and it was

771
00:31:31,140 --> 00:31:32,820
targeting mostly Community industry but

772
00:31:32,820 --> 00:31:35,399
not limited to that in Southeast Asia so

773
00:31:35,399 --> 00:31:36,779
now we will be glad to answer any

774
00:31:36,779 --> 00:31:38,279
questions you have and this is the

775
00:31:38,279 --> 00:31:40,440
reference of all the papers or blog

776
00:31:40,440 --> 00:31:42,179
posts that we wrote about this protector

777
00:31:42,179 --> 00:31:43,970
thank you

778
00:31:43,970 --> 00:31:51,890
[Applause]

779
00:31:52,140 --> 00:31:54,000
thank you Danielle and yeah Romeo for

780
00:31:54,000 --> 00:31:56,039
that for that presentation are there

781
00:31:56,039 --> 00:31:59,100
questions I don't see anyone in front of

782
00:31:59,100 --> 00:32:01,320
the mics

783
00:32:01,320 --> 00:32:04,399
come on don't be shy

784
00:32:05,460 --> 00:32:06,960
all right Sean I have to answer

785
00:32:06,960 --> 00:32:09,000
questions myself

786
00:32:09,000 --> 00:32:10,740
like if there are no questions we can

787
00:32:10,740 --> 00:32:12,899
you can find us around next

788
00:32:12,899 --> 00:32:15,600
days so you can ask us anytime yeah or

789
00:32:15,600 --> 00:32:17,220
tonight at the social event so don't

790
00:32:17,220 --> 00:32:19,380
hesitate or on Twitter or whatever

791
00:32:19,380 --> 00:32:20,519
here

792
00:32:20,519 --> 00:32:23,240
thank you again

793
00:32:26,580 --> 00:32:30,140
so please remember to uh

794
00:32:30,140 --> 00:32:33,299
fill in the presentation survey in your

795
00:32:33,299 --> 00:32:35,779
mobile app

796
00:32:37,380 --> 00:32:39,720
and we now have a 10 minutes break to

797
00:32:39,720 --> 00:32:43,340
allow people to change rooms

