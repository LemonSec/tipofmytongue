1
00:00:05,870 --> 00:00:08,160
[Music]

2
00:00:08,160 --> 00:00:12,799
yes two o'clock let's start just in time

3
00:00:12,799 --> 00:00:15,839
very welcome to this afternoon session

4
00:00:15,839 --> 00:00:18,800
and i'm very happy to be able to welcome

5
00:00:18,800 --> 00:00:23,920
archaean hollop from cisco he's a senior

6
00:00:23,920 --> 00:00:26,160
security analyst with the

7
00:00:26,160 --> 00:00:28,840
cisco umbrella

8
00:00:28,840 --> 00:00:31,199
intelligence uh

9
00:00:31,199 --> 00:00:34,160
threat intelligence team it is yeah

10
00:00:34,160 --> 00:00:36,320
and it's always nice to have an umbrella

11
00:00:36,320 --> 00:00:39,840
cisco otherwise especially in this

12
00:00:39,840 --> 00:00:42,559
rainy city

13
00:00:43,200 --> 00:00:46,239
there'll be a five-minute

14
00:00:46,239 --> 00:00:48,559
opportunity for questions and and

15
00:00:48,559 --> 00:00:51,520
answers in the end of the presentation

16
00:00:51,520 --> 00:00:52,399
but

17
00:00:52,399 --> 00:00:55,039
take it away jim

18
00:00:55,039 --> 00:00:57,280
uh hello everybody and uh

19
00:00:57,280 --> 00:00:58,719
welcome everyone

20
00:00:58,719 --> 00:01:00,719
thank you all for coming

21
00:01:00,719 --> 00:01:01,840
as

22
00:01:01,840 --> 00:01:03,840
moderator mentioned i work for cisco

23
00:01:03,840 --> 00:01:06,320
umbrella as a senior security analyst on

24
00:01:06,320 --> 00:01:08,479
the threat intelligence team

25
00:01:08,479 --> 00:01:10,000
and today

26
00:01:10,000 --> 00:01:13,200
i'll talk about a few recent attacks uh

27
00:01:13,200 --> 00:01:15,600
where the end result was ransomware

28
00:01:15,600 --> 00:01:18,240
and uh we'll talk about where dns was

29
00:01:18,240 --> 00:01:20,799
involved in these attacks and how we can

30
00:01:20,799 --> 00:01:22,880
use that knowledge to

31
00:01:22,880 --> 00:01:26,080
improve our security using dns as a

32
00:01:26,080 --> 00:01:29,439
additional layer of security

33
00:01:29,439 --> 00:01:31,439
so

34
00:01:31,439 --> 00:01:32,720
to start

35
00:01:32,720 --> 00:01:35,439
we want to talk about the data gathering

36
00:01:35,439 --> 00:01:37,600
so in this example the perfect place to

37
00:01:37,600 --> 00:01:41,920
collect data is within the recursive dns

38
00:01:41,920 --> 00:01:44,000
in in the case who is getting data from

39
00:01:44,000 --> 00:01:46,720
the recursive dns we will work with two

40
00:01:46,720 --> 00:01:49,280
data sets one will be coming from our

41
00:01:49,280 --> 00:01:51,040
users sending the queries to the

42
00:01:51,040 --> 00:01:53,759
recursive dns server and the second one

43
00:01:53,759 --> 00:01:55,600
will be from upstream authoritative

44
00:01:55,600 --> 00:01:57,040
servers

45
00:01:57,040 --> 00:01:58,399
with first data set we have the

46
00:01:58,399 --> 00:02:00,799
opportunity to identify

47
00:02:00,799 --> 00:02:02,880
compromised systems common and control

48
00:02:02,880 --> 00:02:04,320
callbacks

49
00:02:04,320 --> 00:02:07,119
and so on we also can write specific

50
00:02:07,119 --> 00:02:09,360
algorithms that to identify some

51
00:02:09,360 --> 00:02:12,879
specific data that we want to identify

52
00:02:12,879 --> 00:02:15,120
with our observations with the second

53
00:02:15,120 --> 00:02:18,000
data set we can get insights into newly

54
00:02:18,000 --> 00:02:20,720
staged malicious infrastructures

55
00:02:20,720 --> 00:02:23,440
and the malicious components that actors

56
00:02:23,440 --> 00:02:27,120
use to attack the networks

57
00:02:27,120 --> 00:02:29,520
so today the main focus will be the dns

58
00:02:29,520 --> 00:02:31,680
tunneling adoption by quite few

59
00:02:31,680 --> 00:02:33,920
malicious actors and the different

60
00:02:33,920 --> 00:02:36,400
utilization of this technique both for

61
00:02:36,400 --> 00:02:40,800
common and control and data exfiltration

62
00:02:42,800 --> 00:02:45,680
so dns tunneling isn't entirely new

63
00:02:45,680 --> 00:02:48,000
technique it's been around for quite a

64
00:02:48,000 --> 00:02:50,080
while it's been used for legitimate

65
00:02:50,080 --> 00:02:51,920
purposes

66
00:02:51,920 --> 00:02:53,680
however what we

67
00:02:53,680 --> 00:02:56,480
worry about as the network owner is

68
00:02:56,480 --> 00:02:59,920
something like i.t policy avoidance

69
00:02:59,920 --> 00:03:02,720
guest wi-fi abuse or some

70
00:03:02,720 --> 00:03:04,879
you know similar activities but what

71
00:03:04,879 --> 00:03:07,360
even more important is that we witnessed

72
00:03:07,360 --> 00:03:09,360
an increase in use of this technique by

73
00:03:09,360 --> 00:03:12,159
multiple threat actors in the ransomware

74
00:03:12,159 --> 00:03:13,200
space

75
00:03:13,200 --> 00:03:15,360
uh they were involved in high profile

76
00:03:15,360 --> 00:03:17,360
attacks including supply chain

77
00:03:17,360 --> 00:03:18,400
compromise

78
00:03:18,400 --> 00:03:21,440
as well as ransomware

79
00:03:21,440 --> 00:03:24,319
so whenever we talk about using dns as a

80
00:03:24,319 --> 00:03:26,560
cover channel

81
00:03:26,560 --> 00:03:27,360
for

82
00:03:27,360 --> 00:03:29,599
either common and control communication

83
00:03:29,599 --> 00:03:32,959
or data exfiltration we talk about data

84
00:03:32,959 --> 00:03:34,319
encoding

85
00:03:34,319 --> 00:03:37,200
data can be encoded in multiple ways and

86
00:03:37,200 --> 00:03:39,840
transferred through dns channel in

87
00:03:39,840 --> 00:03:42,080
probably million different variations

88
00:03:42,080 --> 00:03:44,879
and that's the exact reason why it's not

89
00:03:44,879 --> 00:03:47,040
easy to detect with common security

90
00:03:47,040 --> 00:03:49,280
controls it's highly

91
00:03:49,280 --> 00:03:52,640
customizable and thus requires somewhat

92
00:03:52,640 --> 00:03:55,519
complex approaches in detection

93
00:03:55,519 --> 00:03:57,920
so in a few examples that i showed you

94
00:03:57,920 --> 00:03:59,680
we've seen that the same data was

95
00:03:59,680 --> 00:04:02,319
encoded in either

96
00:04:02,319 --> 00:04:04,000
long

97
00:04:04,000 --> 00:04:05,280
sub-domains

98
00:04:05,280 --> 00:04:07,040
of the domain which controlled by

99
00:04:07,040 --> 00:04:10,480
malicious attacker or smaller chunks of

100
00:04:10,480 --> 00:04:11,680
the

101
00:04:11,680 --> 00:04:14,080
smaller sub-domains but exactly same

102
00:04:14,080 --> 00:04:16,399
data was exfiltrated both in the first

103
00:04:16,399 --> 00:04:18,478
and the second examples

104
00:04:18,478 --> 00:04:20,798
so let's actually look at some of the

105
00:04:20,798 --> 00:04:22,720
recent ransomware attacks that you know

106
00:04:22,720 --> 00:04:25,919
i personally dealt with

107
00:04:26,000 --> 00:04:28,639
ransomware today is greatly different

108
00:04:28,639 --> 00:04:31,680
from ransomware from five

109
00:04:31,680 --> 00:04:34,639
six years ago at that time ransomware

110
00:04:34,639 --> 00:04:37,520
actors just used you know male spam with

111
00:04:37,520 --> 00:04:38,800
direct

112
00:04:38,800 --> 00:04:41,360
access to the ransomware payloads and

113
00:04:41,360 --> 00:04:45,199
the goal was to infect as many users uh

114
00:04:45,199 --> 00:04:47,280
and then get you know as many payments

115
00:04:47,280 --> 00:04:48,800
as possible

116
00:04:48,800 --> 00:04:52,720
however uh you know recently it changed

117
00:04:52,720 --> 00:04:55,680
greatly to a more sophisticated kind of

118
00:04:55,680 --> 00:04:58,160
like apt-style approach

119
00:04:58,160 --> 00:05:00,960
today ransomware is a result of the

120
00:05:00,960 --> 00:05:02,880
multi-stage attack

121
00:05:02,880 --> 00:05:06,479
and if we look at the schema we see that

122
00:05:06,479 --> 00:05:09,120
dns involved in many places of this

123
00:05:09,120 --> 00:05:12,320
attack dns tunneling is also can be

124
00:05:12,320 --> 00:05:14,240
involved in many stages of the attack

125
00:05:14,240 --> 00:05:16,560
we've seen it being used for initial

126
00:05:16,560 --> 00:05:18,960
access by the loaders and we've seen it

127
00:05:18,960 --> 00:05:20,800
being used by the post exploitation

128
00:05:20,800 --> 00:05:23,600
framework and i think the

129
00:05:23,600 --> 00:05:26,960
uh utilization of the cobble strike

130
00:05:26,960 --> 00:05:29,840
framework in uh recent attacks give a

131
00:05:29,840 --> 00:05:32,880
big bump to the use of this technique by

132
00:05:32,880 --> 00:05:35,520
malicious actors

133
00:05:35,520 --> 00:05:38,320
so the first example we will look at the

134
00:05:38,320 --> 00:05:40,639
chachiret it has been observed to

135
00:05:40,639 --> 00:05:41,680
deliver

136
00:05:41,680 --> 00:05:45,199
pisa aka mespinosa ransomware

137
00:05:45,199 --> 00:05:47,759
it actually utilizes two protocols for

138
00:05:47,759 --> 00:05:52,160
c2 communication one is http based ip

139
00:05:52,160 --> 00:05:54,320
common control channel and second one is

140
00:05:54,320 --> 00:05:55,919
dns

141
00:05:55,919 --> 00:05:59,039
the however the primary uh channel that

142
00:05:59,039 --> 00:06:01,680
it relies on is actually dns tunneling

143
00:06:01,680 --> 00:06:05,600
which uses txt queries txt or text

144
00:06:05,600 --> 00:06:07,520
records were originally intended to

145
00:06:07,520 --> 00:06:09,360
allow domain

146
00:06:09,360 --> 00:06:11,919
owners to add additional data

147
00:06:11,919 --> 00:06:14,240
within the dns request

148
00:06:14,240 --> 00:06:17,280
such as domain ownership or network

149
00:06:17,280 --> 00:06:19,919
or server information and since you can

150
00:06:19,919 --> 00:06:21,919
pack somewhat large amount of data in

151
00:06:21,919 --> 00:06:24,319
this record it start being utilized by

152
00:06:24,319 --> 00:06:28,000
malicious actors uh over and over

153
00:06:28,000 --> 00:06:30,000
so uh chachi is pre-configured with a

154
00:06:30,000 --> 00:06:32,000
list of c2 domains

155
00:06:32,000 --> 00:06:34,639
as well as ap addresses for failover

156
00:06:34,639 --> 00:06:37,919
http cnc protocol the domains are

157
00:06:37,919 --> 00:06:40,479
encoded in obfuscated binary

158
00:06:40,479 --> 00:06:43,199
and the dedicated function will carry

159
00:06:43,199 --> 00:06:46,560
out sort defuscation to identify the

160
00:06:46,560 --> 00:06:50,160
domain to the round of a random ship

161
00:06:50,160 --> 00:06:51,440
challenge

162
00:06:51,440 --> 00:06:52,479
so

163
00:06:52,479 --> 00:06:55,599
when the domain is identified chachi can

164
00:06:55,599 --> 00:06:57,840
now initiate the connection to a situ

165
00:06:57,840 --> 00:07:00,560
infrastructure

166
00:07:00,720 --> 00:07:04,080
rather than implement the completely new

167
00:07:04,080 --> 00:07:07,039
dns stunning protocol for the purpose of

168
00:07:07,039 --> 00:07:11,039
communication malicious actors used

169
00:07:11,039 --> 00:07:13,520
of the shell

170
00:07:13,520 --> 00:07:14,720
reverse

171
00:07:14,720 --> 00:07:18,240
dns based reverse shell component which

172
00:07:18,240 --> 00:07:20,240
called the cha shell

173
00:07:20,240 --> 00:07:23,840
however they are not using it completely

174
00:07:23,840 --> 00:07:26,800
as it comes of the shell they modified

175
00:07:26,800 --> 00:07:27,919
it because

176
00:07:27,919 --> 00:07:30,800
they all know that you know one way

177
00:07:30,800 --> 00:07:33,199
we build our defenses is that we look at

178
00:07:33,199 --> 00:07:35,520
the open source tools or of the shell

179
00:07:35,520 --> 00:07:37,759
tools that let us do something like a

180
00:07:37,759 --> 00:07:40,319
reverse shell and then a lot of the

181
00:07:40,319 --> 00:07:42,080
companies and security products will

182
00:07:42,080 --> 00:07:45,199
have that detection built in by default

183
00:07:45,199 --> 00:07:48,800
however if you modified it a high no

184
00:07:48,800 --> 00:07:50,960
you if you modified it it become a lot

185
00:07:50,960 --> 00:07:52,080
more

186
00:07:52,080 --> 00:07:54,560
complex and it's different enough to

187
00:07:54,560 --> 00:07:56,840
bypass those origin

188
00:07:56,840 --> 00:07:58,639
detections

189
00:07:58,639 --> 00:07:59,840
so uh

190
00:07:59,840 --> 00:08:02,000
now char shell operates as the common

191
00:08:02,000 --> 00:08:04,000
and control channel rather than a

192
00:08:04,000 --> 00:08:06,639
reverse shell itself

193
00:08:06,639 --> 00:08:08,240
and

194
00:08:08,240 --> 00:08:10,240
it the way it does it is that all of the

195
00:08:10,240 --> 00:08:12,960
data that malicious actor want to send

196
00:08:12,960 --> 00:08:16,479
back and forth is serialized into the

197
00:08:16,479 --> 00:08:19,520
protocol buffers before encrypting

198
00:08:19,520 --> 00:08:21,919
using the symmetric encryption

199
00:08:21,919 --> 00:08:24,800
this encrypted data is then hex encoded

200
00:08:24,800 --> 00:08:27,840
and packed into the txt query the

201
00:08:27,840 --> 00:08:30,080
response to the txt query is also

202
00:08:30,080 --> 00:08:31,520
subject to the protocol buffer

203
00:08:31,520 --> 00:08:33,760
serialization encryption and hex

204
00:08:33,760 --> 00:08:36,159
decoding

205
00:08:36,159 --> 00:08:38,559
so another thing that

206
00:08:38,559 --> 00:08:40,880
chacharet authors modified within the

207
00:08:40,880 --> 00:08:42,958
shell is that uh

208
00:08:42,958 --> 00:08:45,760
parts of the message that they use uh to

209
00:08:45,760 --> 00:08:48,080
operate uh as a common and control

210
00:08:48,080 --> 00:08:49,680
channel

211
00:08:49,680 --> 00:08:50,480
so

212
00:08:50,480 --> 00:08:53,040
the main point of the of

213
00:08:53,040 --> 00:08:55,519
this particular message is the chunk

214
00:08:55,519 --> 00:08:56,959
data

215
00:08:56,959 --> 00:08:59,760
those are the messages that

216
00:08:59,760 --> 00:09:02,200
will be encoded prior to

217
00:09:02,200 --> 00:09:04,480
serialization of the data

218
00:09:04,480 --> 00:09:06,480
into a protocol buffer

219
00:09:06,480 --> 00:09:08,720
and it will be performed in two steps

220
00:09:08,720 --> 00:09:12,000
step one will involve base64 encoding

221
00:09:12,000 --> 00:09:14,800
the data and then it will be passed to

222
00:09:14,800 --> 00:09:17,600
the function that performs sore encoding

223
00:09:17,600 --> 00:09:19,680
using a hard-coded string

224
00:09:19,680 --> 00:09:21,200
so you can imagine that with this

225
00:09:21,200 --> 00:09:23,519
approach the end result that we see on

226
00:09:23,519 --> 00:09:26,640
the wire as the dns request going back

227
00:09:26,640 --> 00:09:29,360
and forward looks just like some kind of

228
00:09:29,360 --> 00:09:32,080
dji-based

229
00:09:32,080 --> 00:09:33,680
command not necessarily common in

230
00:09:33,680 --> 00:09:35,200
control but

231
00:09:35,200 --> 00:09:37,760
from a lot of the advertising networks

232
00:09:37,760 --> 00:09:39,920
uh things like cdns

233
00:09:39,920 --> 00:09:42,560
the way data is encoded is very similar

234
00:09:42,560 --> 00:09:44,640
so without knowing what actually is

235
00:09:44,640 --> 00:09:46,880
encoding within that string it's really

236
00:09:46,880 --> 00:09:48,880
hard to determine if that some kind of

237
00:09:48,880 --> 00:09:51,040
malicious communication or just regular

238
00:09:51,040 --> 00:09:52,800
communication by you know one of the

239
00:09:52,800 --> 00:09:55,120
browsers trying to fetch information

240
00:09:55,120 --> 00:09:57,760
from one of the cdns

241
00:09:57,760 --> 00:09:59,360
however and

242
00:09:59,360 --> 00:10:01,440
the end result of the pisa

243
00:10:01,440 --> 00:10:04,640
of the chacheret activity

244
00:10:04,640 --> 00:10:05,600
is the

245
00:10:05,600 --> 00:10:07,200
pisa or

246
00:10:07,200 --> 00:10:11,360
mespinosa ransomware payload

247
00:10:11,440 --> 00:10:13,920
so next thing is the

248
00:10:13,920 --> 00:10:16,800
timeline of the quantum ransomware in

249
00:10:16,800 --> 00:10:19,360
this case it started with someone in the

250
00:10:19,360 --> 00:10:21,839
affected network opening a male spam

251
00:10:21,839 --> 00:10:24,560
which contained an iced id loader

252
00:10:24,560 --> 00:10:26,959
and as we can see it took only four

253
00:10:26,959 --> 00:10:29,600
hours for the malicious actor to

254
00:10:29,600 --> 00:10:31,760
initially identify that you know their

255
00:10:31,760 --> 00:10:33,760
payload was executed

256
00:10:33,760 --> 00:10:36,560
then get into the network establish the

257
00:10:36,560 --> 00:10:39,279
access get through the entire network

258
00:10:39,279 --> 00:10:41,920
via lateral movement identify the

259
00:10:41,920 --> 00:10:44,320
information they needed to launch the

260
00:10:44,320 --> 00:10:46,399
encryption and within four hours the

261
00:10:46,399 --> 00:10:48,720
quantum ransomware was deployed and took

262
00:10:48,720 --> 00:10:51,279
the entire network hostage

263
00:10:51,279 --> 00:10:53,120
what's important on this slide is that

264
00:10:53,120 --> 00:10:55,279
we can see that the cobalt strike

265
00:10:55,279 --> 00:10:58,560
framework was used in multiple parts of

266
00:10:58,560 --> 00:11:00,880
the attack chain it was uh used as a

267
00:11:00,880 --> 00:11:02,320
common in control

268
00:11:02,320 --> 00:11:03,200
uh

269
00:11:03,200 --> 00:11:05,200
by the common control to be injected

270
00:11:05,200 --> 00:11:06,720
into the network and then it was

271
00:11:06,720 --> 00:11:08,640
executed on the server where it

272
00:11:08,640 --> 00:11:11,440
performed both lateral movement and the

273
00:11:11,440 --> 00:11:12,800
end up

274
00:11:12,800 --> 00:11:14,959
operation payload which was a quantum

275
00:11:14,959 --> 00:11:17,599
ransomware

276
00:11:18,079 --> 00:11:20,800
and the reason why we see uh cobalt

277
00:11:20,800 --> 00:11:23,279
strike being used quite a lot is the

278
00:11:23,279 --> 00:11:26,079
possibility of the dns based beaconing

279
00:11:26,079 --> 00:11:28,000
their dns based beaconing isn't

280
00:11:28,000 --> 00:11:30,000
different from what you would expect

281
00:11:30,000 --> 00:11:32,480
from the dns standing operation it

282
00:11:32,480 --> 00:11:34,640
starts with the infected machine which

283
00:11:34,640 --> 00:11:38,079
sends a dns request to the local dns

284
00:11:38,079 --> 00:11:40,640
server and then it goes upstream up to

285
00:11:40,640 --> 00:11:43,040
the point where it reaches the

286
00:11:43,040 --> 00:11:45,600
server controlled by the actor when the

287
00:11:45,600 --> 00:11:48,720
actor got their beaconing out to their

288
00:11:48,720 --> 00:11:50,720
server they pretty much have the full

289
00:11:50,720 --> 00:11:52,320
control of the

290
00:11:52,320 --> 00:11:54,560
end point and then they can carry out

291
00:11:54,560 --> 00:11:56,560
all kind of malicious activities but

292
00:11:56,560 --> 00:11:58,720
what we usually see is that profiling of

293
00:11:58,720 --> 00:12:00,880
the network comes first so they want to

294
00:12:00,880 --> 00:12:02,959
identify what kind of network they have

295
00:12:02,959 --> 00:12:05,519
access to second one is depending on

296
00:12:05,519 --> 00:12:07,519
what kind of network the tools will be

297
00:12:07,519 --> 00:12:09,839
deployed a lot of the tools i embedded

298
00:12:09,839 --> 00:12:12,959
within the kobold strike framework and

299
00:12:12,959 --> 00:12:14,560
then when they

300
00:12:14,560 --> 00:12:16,480
identify all of the weak points of the

301
00:12:16,480 --> 00:12:18,000
network they perform the lateral

302
00:12:18,000 --> 00:12:20,160
movement they

303
00:12:20,160 --> 00:12:22,959
exfiltrated the data to use it in the

304
00:12:22,959 --> 00:12:25,200
double extortion schemas which means

305
00:12:25,200 --> 00:12:27,920
that even if you don't want or you can't

306
00:12:27,920 --> 00:12:29,120
pay for the

307
00:12:29,120 --> 00:12:31,839
decryption of data or you have a really

308
00:12:31,839 --> 00:12:33,920
good ir and backup

309
00:12:33,920 --> 00:12:36,959
solutions you still can lose the data

310
00:12:36,959 --> 00:12:39,440
that the malicious actor got access in

311
00:12:39,440 --> 00:12:41,519
the first place and then the data can be

312
00:12:41,519 --> 00:12:43,839
either weaponized against your company

313
00:12:43,839 --> 00:12:46,480
or against that affected network or it

314
00:12:46,480 --> 00:12:50,240
can be sold on the darknet forums for

315
00:12:50,240 --> 00:12:53,839
monetization purposes

316
00:12:53,920 --> 00:12:54,959
uh

317
00:12:54,959 --> 00:12:57,040
within the last two years from the

318
00:12:57,040 --> 00:12:58,880
ransomware attacks i witnessed we

319
00:12:58,880 --> 00:13:01,760
identified that 78 of them were using

320
00:13:01,760 --> 00:13:05,040
kobe strike framework in most of them

321
00:13:05,040 --> 00:13:07,600
dns beaconing was utilized and the

322
00:13:07,600 --> 00:13:09,519
reason is that once again there is like

323
00:13:09,519 --> 00:13:12,000
no http based communication so it

324
00:13:12,000 --> 00:13:13,920
directly bypasses a lot of the security

325
00:13:13,920 --> 00:13:15,040
controls

326
00:13:15,040 --> 00:13:16,959
second is that

327
00:13:16,959 --> 00:13:18,639
the beacon can be

328
00:13:18,639 --> 00:13:21,839
configured with mulable c2 configuration

329
00:13:21,839 --> 00:13:24,000
so you can deploy multiple beacons

330
00:13:24,000 --> 00:13:25,920
within the same frame within the same

331
00:13:25,920 --> 00:13:28,720
network right and see which ones were

332
00:13:28,720 --> 00:13:30,800
actually blocked so they would never get

333
00:13:30,800 --> 00:13:33,440
out to the exim server or the ones that

334
00:13:33,440 --> 00:13:35,440
actually got out so when you see the one

335
00:13:35,440 --> 00:13:37,920
that actually made it you know what kind

336
00:13:37,920 --> 00:13:40,240
of in encoding or multiple c2

337
00:13:40,240 --> 00:13:42,399
configuration you need to use to carry

338
00:13:42,399 --> 00:13:44,240
out the rest of your

339
00:13:44,240 --> 00:13:46,880
malicious activity

340
00:13:46,880 --> 00:13:49,040
so next we want to uh have a good

341
00:13:49,040 --> 00:13:51,279
understanding of how the beacon is

342
00:13:51,279 --> 00:13:55,279
configured so the start of it will be

343
00:13:55,279 --> 00:13:56,639
uh the

344
00:13:56,639 --> 00:13:58,720
type of the payload and we see that this

345
00:13:58,720 --> 00:14:02,399
is a dns based beaconing the second one

346
00:14:02,399 --> 00:14:05,120
is the malicious domain which actor

347
00:14:05,120 --> 00:14:07,440
actually has the full control of and

348
00:14:07,440 --> 00:14:09,600
then we have a set of

349
00:14:09,600 --> 00:14:12,560
different configurations that will

350
00:14:12,560 --> 00:14:14,720
that can be used by the malicious

351
00:14:14,720 --> 00:14:17,760
attacker depending on which ones are

352
00:14:17,760 --> 00:14:20,320
more or less likely to be detected

353
00:14:20,320 --> 00:14:23,040
within the network

354
00:14:23,040 --> 00:14:25,199
so this is an example of the multiple c2

355
00:14:25,199 --> 00:14:28,079
configuration as we can see

356
00:14:28,079 --> 00:14:28,959
the

357
00:14:28,959 --> 00:14:30,880
different settings for

358
00:14:30,880 --> 00:14:32,720
those fields that i mentioned on the

359
00:14:32,720 --> 00:14:35,040
last slide at the bottom of the slide

360
00:14:35,040 --> 00:14:37,120
they look completely different in this

361
00:14:37,120 --> 00:14:40,880
one right and it's not really something

362
00:14:40,880 --> 00:14:43,920
that you have to use out of the box it's

363
00:14:43,920 --> 00:14:46,639
something that you can modify yourself

364
00:14:46,639 --> 00:14:48,560
so you probably have millions of

365
00:14:48,560 --> 00:14:49,760
different configurations that the

366
00:14:49,760 --> 00:14:52,560
malicious actor can use and

367
00:14:52,560 --> 00:14:55,680
you can't really design a standalone

368
00:14:55,680 --> 00:14:58,320
signature for you know to include all of

369
00:14:58,320 --> 00:15:01,519
them so you have to uh you know have

370
00:15:01,519 --> 00:15:03,600
different approaches to identify this

371
00:15:03,600 --> 00:15:05,600
kind of malicious traffic be able to

372
00:15:05,600 --> 00:15:07,680
detect it and stop it

373
00:15:07,680 --> 00:15:10,480
so next we can see a wireshark view of

374
00:15:10,480 --> 00:15:12,399
the cobble strike dns traffic

375
00:15:12,399 --> 00:15:16,240
as you can see all of the data

376
00:15:16,240 --> 00:15:17,040
just

377
00:15:17,040 --> 00:15:20,480
using the dns protocol

378
00:15:21,680 --> 00:15:23,440
right here

379
00:15:23,440 --> 00:15:26,079
right and then in this case they are

380
00:15:26,079 --> 00:15:27,360
kind of like for

381
00:15:27,360 --> 00:15:29,519
demonstration purposes uh

382
00:15:29,519 --> 00:15:31,279
they were used like all types of the

383
00:15:31,279 --> 00:15:34,480
encoding uh but in uh usually what you

384
00:15:34,480 --> 00:15:36,079
see in the real attacks is that this is

385
00:15:36,079 --> 00:15:38,800
just the initial then they see which one

386
00:15:38,800 --> 00:15:40,320
actually getting through and then they

387
00:15:40,320 --> 00:15:42,480
will use the one that is uh you know

388
00:15:42,480 --> 00:15:45,360
more reliable and uh requires uh less

389
00:15:45,360 --> 00:15:47,839
activity on the wire to be able to stay

390
00:15:47,839 --> 00:15:50,959
undetected as long as possible

391
00:15:50,959 --> 00:15:54,000
so uh here we can see the dns beacon

392
00:15:54,000 --> 00:15:56,639
queries and replies based on the

393
00:15:56,639 --> 00:15:59,360
using the a records as their main mean

394
00:15:59,360 --> 00:16:01,759
of the configuration

395
00:16:01,759 --> 00:16:02,639
and

396
00:16:02,639 --> 00:16:05,360
at regular intervals

397
00:16:05,360 --> 00:16:07,600
which you can determine in the settings

398
00:16:07,600 --> 00:16:10,399
so it's not one you know set and go so

399
00:16:10,399 --> 00:16:11,920
you know that if you're dealing with a

400
00:16:11,920 --> 00:16:13,680
cobble strike beacon you kind of expect

401
00:16:13,680 --> 00:16:15,920
it like every two seconds or every three

402
00:16:15,920 --> 00:16:18,560
seconds no they actually can modify it

403
00:16:18,560 --> 00:16:20,720
within the you know standalone or they

404
00:16:20,720 --> 00:16:23,519
can modify it with the each iteration so

405
00:16:23,519 --> 00:16:26,000
once again even like uh you know some

406
00:16:26,000 --> 00:16:28,399
kind of like time series analysis can be

407
00:16:28,399 --> 00:16:29,759
defeated by

408
00:16:29,759 --> 00:16:33,759
a complex enough uh design dns beacon

409
00:16:33,759 --> 00:16:35,759
however in this case we see that the

410
00:16:35,759 --> 00:16:37,199
first

411
00:16:37,199 --> 00:16:40,480
response will always be an a record and

412
00:16:40,480 --> 00:16:43,360
that's needed to determine what kind of

413
00:16:43,360 --> 00:16:47,199
uh data payload will be used because

414
00:16:47,199 --> 00:16:50,160
even with the cobalt strike framework

415
00:16:50,160 --> 00:16:53,360
you can't overcome some of the basic

416
00:16:53,360 --> 00:16:56,000
features and one of them is that initial

417
00:16:56,000 --> 00:16:58,639
identification of the buffer of the data

418
00:16:58,639 --> 00:17:00,880
that will be used in the attack

419
00:17:00,880 --> 00:17:03,279
without knowing the buffer data you

420
00:17:03,279 --> 00:17:05,679
can't really carry out the rest of the

421
00:17:05,679 --> 00:17:09,119
actions however if that one passed

422
00:17:09,119 --> 00:17:11,280
and you know if you deal with any kind

423
00:17:11,280 --> 00:17:13,599
of the network traffic analysis that

424
00:17:13,599 --> 00:17:16,640
that's pretty benign you just see

425
00:17:16,640 --> 00:17:19,679
one dns request and you see an ip

426
00:17:19,679 --> 00:17:22,000
address what you will kind of expect

427
00:17:22,000 --> 00:17:24,400
from a normal dns resolution what you

428
00:17:24,400 --> 00:17:27,359
might miss is actually that tells the

429
00:17:27,359 --> 00:17:29,760
team server how big chunk of data it

430
00:17:29,760 --> 00:17:32,720
needs to expect to decode it

431
00:17:32,720 --> 00:17:34,559
and in this case

432
00:17:34,559 --> 00:17:35,679
uh

433
00:17:35,679 --> 00:17:38,960
they are using the a records and then if

434
00:17:38,960 --> 00:17:41,120
we look at the

435
00:17:41,120 --> 00:17:43,840
subdomain structure

436
00:17:43,840 --> 00:17:46,400
the origin the start of the the first

437
00:17:46,400 --> 00:17:48,400
sub domain will be the beacon uh

438
00:17:48,400 --> 00:17:51,120
identification of the idea they call it

439
00:17:51,120 --> 00:17:53,120
and this one is actually

440
00:17:53,120 --> 00:17:55,440
needed for team server to identify which

441
00:17:55,440 --> 00:17:57,679
beacon is actually being able to get out

442
00:17:57,679 --> 00:17:59,600
of the network so once again you can

443
00:17:59,600 --> 00:18:01,120
deploy multiple

444
00:18:01,120 --> 00:18:03,039
beacons and then based on the id which

445
00:18:03,039 --> 00:18:04,880
you get on your team server you will

446
00:18:04,880 --> 00:18:07,280
proceed with the proper communication

447
00:18:07,280 --> 00:18:08,559
method

448
00:18:08,559 --> 00:18:11,120
so next one is the possible dns beacon

449
00:18:11,120 --> 00:18:14,240
replies so here we can see that you can

450
00:18:14,240 --> 00:18:15,919
choose any modes

451
00:18:15,919 --> 00:18:17,679
that are

452
00:18:17,679 --> 00:18:21,840
configured by default and either dns dns

453
00:18:21,840 --> 00:18:24,160
with txt records something that

454
00:18:24,160 --> 00:18:26,559
charshell was using or

455
00:18:26,559 --> 00:18:29,840
quad a records

456
00:18:30,640 --> 00:18:33,039
next we'll take a a closer look at one

457
00:18:33,039 --> 00:18:34,160
of the

458
00:18:34,160 --> 00:18:36,640
txt query records

459
00:18:36,640 --> 00:18:38,799
it's very familiar as i mentioned before

460
00:18:38,799 --> 00:18:41,360
it will start with the first response

461
00:18:41,360 --> 00:18:44,640
which represented as the ip address but

462
00:18:44,640 --> 00:18:46,240
after a series of the encoding and

463
00:18:46,240 --> 00:18:48,080
decoding on the team server it will

464
00:18:48,080 --> 00:18:50,880
identify the buffer of the data which

465
00:18:50,880 --> 00:18:53,520
team server expected to get from the

466
00:18:53,520 --> 00:18:55,440
compromised network

467
00:18:55,440 --> 00:18:56,960
i noticed that

468
00:18:56,960 --> 00:19:00,559
the start of the query now is just api

469
00:19:00,559 --> 00:19:02,559
api tells the

470
00:19:02,559 --> 00:19:03,840
or whatever

471
00:19:03,840 --> 00:19:05,520
subdomain they choose

472
00:19:05,520 --> 00:19:06,480
for

473
00:19:06,480 --> 00:19:09,440
txt based communication will be

474
00:19:09,440 --> 00:19:12,080
under understood by will be understand

475
00:19:12,080 --> 00:19:13,200
by the

476
00:19:13,200 --> 00:19:15,120
team server and then they will expect

477
00:19:15,120 --> 00:19:17,679
txt records to contain the data that

478
00:19:17,679 --> 00:19:21,440
they need to decode on the team server

479
00:19:21,440 --> 00:19:23,679
so the value of each txt record is the

480
00:19:23,679 --> 00:19:26,080
base64 string that

481
00:19:26,080 --> 00:19:29,840
needs to be concatenated before decoding

482
00:19:29,840 --> 00:19:32,320
in this case it's only 64 bytes but it

483
00:19:32,320 --> 00:19:33,919
can go

484
00:19:33,919 --> 00:19:37,360
up all to 128 bytes

485
00:19:37,360 --> 00:19:38,640
and then

486
00:19:38,640 --> 00:19:41,679
it needs to understand how to

487
00:19:41,679 --> 00:19:44,160
concatenate the data and also it needs

488
00:19:44,160 --> 00:19:46,799
to avoid caching by the local dns

489
00:19:46,799 --> 00:19:49,280
resolver so to overcome them they

490
00:19:49,280 --> 00:19:51,679
implement a

491
00:19:51,679 --> 00:19:55,600
counter which you can see as the uh

492
00:19:55,600 --> 00:19:57,760
in this case one two three four like

493
00:19:57,760 --> 00:20:00,480
second level sub domain it will be

494
00:20:00,480 --> 00:20:02,640
increased every time and the sequence is

495
00:20:02,640 --> 00:20:04,640
increased and then on the team server

496
00:20:04,640 --> 00:20:06,720
you just put them in the right order to

497
00:20:06,720 --> 00:20:09,679
get the full message

498
00:20:10,960 --> 00:20:12,240
next one is

499
00:20:12,240 --> 00:20:12,960
and

500
00:20:12,960 --> 00:20:15,280
usually what we've seen is that

501
00:20:15,280 --> 00:20:17,760
malicious actors love to rely on the txt

502
00:20:17,760 --> 00:20:19,520
record just because how much data you

503
00:20:19,520 --> 00:20:22,559
can put in a single message however a

504
00:20:22,559 --> 00:20:25,039
lot of the products are able to identify

505
00:20:25,039 --> 00:20:26,640
uh encoded

506
00:20:26,640 --> 00:20:27,440
you know

507
00:20:27,440 --> 00:20:29,200
data in the txt messages and that

508
00:20:29,200 --> 00:20:31,280
communication will be blocked so the

509
00:20:31,280 --> 00:20:33,120
next attempt will be

510
00:20:33,120 --> 00:20:35,280
you know dns a queries

511
00:20:35,280 --> 00:20:37,840
so in this case once again the first one

512
00:20:37,840 --> 00:20:40,799
is the ip which represents the amount of

513
00:20:40,799 --> 00:20:42,640
data that will be

514
00:20:42,640 --> 00:20:46,159
communicated on the wire then we have a

515
00:20:46,159 --> 00:20:49,360
label which in this case is cdn

516
00:20:49,360 --> 00:20:50,640
to show that

517
00:20:50,640 --> 00:20:51,760
the

518
00:20:51,760 --> 00:20:54,640
payload will be within the

519
00:20:54,640 --> 00:20:56,159
a record

520
00:20:56,159 --> 00:20:57,520
and then

521
00:20:57,520 --> 00:20:58,320
the

522
00:20:58,320 --> 00:21:01,679
the rest of the sub domains will be

523
00:21:01,679 --> 00:21:03,120
kind of the same what we've seen in the

524
00:21:03,120 --> 00:21:05,039
first one where you have the

525
00:21:05,039 --> 00:21:08,240
counter the bid identification and the

526
00:21:08,240 --> 00:21:10,320
data which will be encrypted within the

527
00:21:10,320 --> 00:21:12,400
a record

528
00:21:12,400 --> 00:21:14,720
and the last one is the

529
00:21:14,720 --> 00:21:17,360
quad a or no this one is actual beacon

530
00:21:17,360 --> 00:21:19,600
sending results to the team server with

531
00:21:19,600 --> 00:21:21,840
the dns output

532
00:21:21,840 --> 00:21:23,360
and uh

533
00:21:23,360 --> 00:21:25,360
in this example that the query starts

534
00:21:25,360 --> 00:21:26,640
with the

535
00:21:26,640 --> 00:21:28,799
top label post of the

536
00:21:28,799 --> 00:21:31,200
post and then

537
00:21:31,200 --> 00:21:33,679
all of the

538
00:21:34,159 --> 00:21:37,039
and and the data will be transmitted

539
00:21:37,039 --> 00:21:39,360
with once again a unique hexadecimal

540
00:21:39,360 --> 00:21:42,000
counter just like any other queries

541
00:21:42,000 --> 00:21:43,760
we've seen before

542
00:21:43,760 --> 00:21:46,240
and then at the end of the

543
00:21:46,240 --> 00:21:48,400
at the bottom of the screen we can see

544
00:21:48,400 --> 00:21:50,159
how the name breaks down

545
00:21:50,159 --> 00:21:53,360
uh on the team server so the post is the

546
00:21:53,360 --> 00:21:56,799
type of the query output we expected 140

547
00:21:56,799 --> 00:21:58,880
will be transmitted data

548
00:21:58,880 --> 00:22:00,159
the

549
00:22:00,159 --> 00:22:01,919
another

550
00:22:01,919 --> 00:22:04,640
subdomain is the counter and random

551
00:22:04,640 --> 00:22:06,960
number then our beacon id and then the

552
00:22:06,960 --> 00:22:10,400
domain chosen by the operator

553
00:22:10,400 --> 00:22:12,799
so this is great now we have the idea

554
00:22:12,799 --> 00:22:14,480
how different

555
00:22:14,480 --> 00:22:17,120
malicious tools are being

556
00:22:17,120 --> 00:22:19,280
utilized within the attack framework and

557
00:22:19,280 --> 00:22:21,919
how their dns traffic

558
00:22:21,919 --> 00:22:22,799
looks

559
00:22:22,799 --> 00:22:24,559
so in this case

560
00:22:24,559 --> 00:22:26,960
we want to apply several approaches the

561
00:22:26,960 --> 00:22:29,200
first one is kind of like white listing

562
00:22:29,200 --> 00:22:32,960
approach that's where we want to block

563
00:22:32,960 --> 00:22:35,120
any domain that we don't really have any

564
00:22:35,120 --> 00:22:37,440
prior knowledge about as you can imagine

565
00:22:37,440 --> 00:22:39,440
this is very complex

566
00:22:39,440 --> 00:22:41,919
approach if you just put it in place and

567
00:22:41,919 --> 00:22:44,559
you know just let it run it will acquire

568
00:22:44,559 --> 00:22:47,440
tons of fps and your customers probably

569
00:22:47,440 --> 00:22:48,960
will be crazy

570
00:22:48,960 --> 00:22:51,440
however if you have a good understanding

571
00:22:51,440 --> 00:22:53,520
of your network and you know what

572
00:22:53,520 --> 00:22:55,840
critical parts of the network

573
00:22:55,840 --> 00:22:57,440
have specific

574
00:22:57,440 --> 00:23:00,240
dns based activity

575
00:23:00,240 --> 00:23:02,159
you can apply it to the segmented

576
00:23:02,159 --> 00:23:05,120
networks and then only block it to let's

577
00:23:05,120 --> 00:23:07,679
say you have a server which only purpose

578
00:23:07,679 --> 00:23:10,640
have updates for you know several uh

579
00:23:10,640 --> 00:23:13,919
software stack that it uses right so

580
00:23:13,919 --> 00:23:16,080
while you can study it and identify

581
00:23:16,080 --> 00:23:18,480
those uh regular dns requests anything

582
00:23:18,480 --> 00:23:20,240
that will be derived from that or

583
00:23:20,240 --> 00:23:22,080
different from what you've seen before

584
00:23:22,080 --> 00:23:23,440
will be blocked and passed for the

585
00:23:23,440 --> 00:23:25,919
expansion and inspection can be done

586
00:23:25,919 --> 00:23:28,720
either by automated engines or you can

587
00:23:28,720 --> 00:23:30,480
actually escalate it to your stock

588
00:23:30,480 --> 00:23:32,480
analyst who can make you know a much

589
00:23:32,480 --> 00:23:34,400
more informed decision

590
00:23:34,400 --> 00:23:36,400
so with this approach for example

591
00:23:36,400 --> 00:23:38,480
we got a domain that was identified as

592
00:23:38,480 --> 00:23:41,039
newly seen and then we pass it for the

593
00:23:41,039 --> 00:23:43,279
inspection to our sock analyst so what

594
00:23:43,279 --> 00:23:45,120
usually sock analyst does it looks at

595
00:23:45,120 --> 00:23:47,120
the open source intelligence one of the

596
00:23:47,120 --> 00:23:49,120
biggest repositories of such

597
00:23:49,120 --> 00:23:51,760
intelligence is virus total but in this

598
00:23:51,760 --> 00:23:54,799
case uh virus total has no idea what

599
00:23:54,799 --> 00:23:56,799
this domain does and what it represents

600
00:23:56,799 --> 00:23:58,799
so it just marks it as you know no

601
00:23:58,799 --> 00:24:00,960
security vendors flagged it where is

602
00:24:00,960 --> 00:24:04,640
visited and 11 days later and we can see

603
00:24:04,640 --> 00:24:07,200
that only i believe eight different

604
00:24:07,200 --> 00:24:11,600
vendors flagged that domain as malicious

605
00:24:11,600 --> 00:24:13,760
however during our investigation when we

606
00:24:13,760 --> 00:24:15,200
visit the domain we were able to

607
00:24:15,200 --> 00:24:17,360
download the file we run files through

608
00:24:17,360 --> 00:24:19,120
virustotal once again and we see that

609
00:24:19,120 --> 00:24:21,440
well three engines are able to detect it

610
00:24:21,440 --> 00:24:23,520
as malicious which means that if you use

611
00:24:23,520 --> 00:24:25,840
any other engine in your network and

612
00:24:25,840 --> 00:24:27,919
your user actually visited that domain

613
00:24:27,919 --> 00:24:29,919
most likely that payload was able to

614
00:24:29,919 --> 00:24:32,159
execute and now you might have problem

615
00:24:32,159 --> 00:24:34,080
in your network

616
00:24:34,080 --> 00:24:35,840
and if we run that

617
00:24:35,840 --> 00:24:37,200
payload through the

618
00:24:37,200 --> 00:24:40,559
sandbox we can see that it is actually a

619
00:24:40,559 --> 00:24:42,559
bazaar

620
00:24:42,559 --> 00:24:44,640
bazaar backdoor payload which is often

621
00:24:44,640 --> 00:24:47,919
associated with the ransomware attacks

622
00:24:47,919 --> 00:24:50,720
so this kind of the category we

623
00:24:50,720 --> 00:24:52,400
developed and called it as newly seen

624
00:24:52,400 --> 00:24:54,320
domain in cisco umbrella you know you

625
00:24:54,320 --> 00:24:56,640
can just call it new new domains or new

626
00:24:56,640 --> 00:24:58,880
domains for your specific

627
00:24:58,880 --> 00:25:00,400
segment of the network

628
00:25:00,400 --> 00:25:02,799
and it can be incorporated into more

629
00:25:02,799 --> 00:25:04,880
broader analysis right so if you have

630
00:25:04,880 --> 00:25:07,200
some kind of the chip engine which makes

631
00:25:07,200 --> 00:25:09,440
a decision what to allow what to block

632
00:25:09,440 --> 00:25:11,840
uh something that being downloaded

633
00:25:11,840 --> 00:25:13,919
launched or retrieved from this kind of

634
00:25:13,919 --> 00:25:15,520
newly seen domain

635
00:25:15,520 --> 00:25:17,440
should probably be blocked and inspected

636
00:25:17,440 --> 00:25:20,080
either by automated engines or by a

637
00:25:20,080 --> 00:25:23,039
stock analyst to have a much better

638
00:25:23,039 --> 00:25:26,320
decision-making process

639
00:25:26,320 --> 00:25:29,360
so the next step is actually design the

640
00:25:29,360 --> 00:25:32,080
detection for the dns tunneling

641
00:25:32,080 --> 00:25:33,360
so

642
00:25:33,360 --> 00:25:36,159
as we've seen before with uh out of the

643
00:25:36,159 --> 00:25:38,559
box solutions uh not that many of them

644
00:25:38,559 --> 00:25:42,480
actually designed to identify malicious

645
00:25:42,480 --> 00:25:45,440
payload within the dns record so you

646
00:25:45,440 --> 00:25:47,360
have to build something that will be

647
00:25:47,360 --> 00:25:50,640
able to identify it just with the data

648
00:25:50,640 --> 00:25:52,559
on the wire that you can get from the

649
00:25:52,559 --> 00:25:54,559
dns query

650
00:25:54,559 --> 00:25:56,320
so you can use three different

651
00:25:56,320 --> 00:25:57,919
approaches right

652
00:25:57,919 --> 00:26:01,039
uh one approach is uh

653
00:26:01,039 --> 00:26:03,440
uh what we call the reactive right so

654
00:26:03,440 --> 00:26:05,919
you collect the logs from your

655
00:26:05,919 --> 00:26:07,520
recursive dns

656
00:26:07,520 --> 00:26:09,919
uh resolver or you know any other means

657
00:26:09,919 --> 00:26:14,640
that you like more to uh you know to use

658
00:26:14,640 --> 00:26:17,600
and then you run a series of your

659
00:26:17,600 --> 00:26:20,240
algorithms that will detect which

660
00:26:20,240 --> 00:26:23,039
domains are more or less likely to be

661
00:26:23,039 --> 00:26:24,559
dns tunneling

662
00:26:24,559 --> 00:26:27,120
while you are not using it proactively

663
00:26:27,120 --> 00:26:29,600
so some communication can get through at

664
00:26:29,600 --> 00:26:31,679
least you can identify that something in

665
00:26:31,679 --> 00:26:33,919
your network exhibits this behavior and

666
00:26:33,919 --> 00:26:36,799
you can launch a propriet

667
00:26:36,799 --> 00:26:39,600
the right way of the ir

668
00:26:39,600 --> 00:26:42,000
however uh the

669
00:26:42,000 --> 00:26:43,840
better way to

670
00:26:43,840 --> 00:26:46,240
do that is what we call a real-time

671
00:26:46,240 --> 00:26:48,480
blocks however real-time blocks will

672
00:26:48,480 --> 00:26:50,400
require some kind of the security

673
00:26:50,400 --> 00:26:51,440
solution

674
00:26:51,440 --> 00:26:53,840
or the actual reserve resolver to be

675
00:26:53,840 --> 00:26:56,480
able these decisions uh you know on the

676
00:26:56,480 --> 00:26:59,520
fly so what you do is that after you

677
00:26:59,520 --> 00:27:02,559
inspected let's say open source tools or

678
00:27:02,559 --> 00:27:04,960
some proprietary tools or you know any

679
00:27:04,960 --> 00:27:07,520
kind of like dns tunneling data set you

680
00:27:07,520 --> 00:27:10,320
can derive your signatures and a set of

681
00:27:10,320 --> 00:27:12,960
rules that are triggered when a specific

682
00:27:12,960 --> 00:27:15,440
combination of uh

683
00:27:15,440 --> 00:27:17,200
data is seen

684
00:27:17,200 --> 00:27:19,760
in the dns a query or within the dns

685
00:27:19,760 --> 00:27:21,039
resolution

686
00:27:21,039 --> 00:27:22,960
so this is somewhat

687
00:27:22,960 --> 00:27:24,720
complex because it required the prior

688
00:27:24,720 --> 00:27:27,440
knowledge of your good data and your bad

689
00:27:27,440 --> 00:27:28,559
data

690
00:27:28,559 --> 00:27:31,200
in our case we design it kind of like a

691
00:27:31,200 --> 00:27:33,200
modular approach where you have a set of

692
00:27:33,200 --> 00:27:36,799
rules that easily expandable and it also

693
00:27:36,799 --> 00:27:39,520
can work a little bit better with a

694
00:27:39,520 --> 00:27:41,399
little bit more complex

695
00:27:41,399 --> 00:27:44,240
identifications something like

696
00:27:44,240 --> 00:27:47,120
a markov model so you can deploy an

697
00:27:47,120 --> 00:27:49,919
algorithm that looks at the data which

698
00:27:49,919 --> 00:27:52,080
being run within the

699
00:27:52,080 --> 00:27:54,720
query resolution pattern and then try to

700
00:27:54,720 --> 00:27:56,320
predict how

701
00:27:56,320 --> 00:27:58,640
big of a chance that that particular

702
00:27:58,640 --> 00:28:03,840
data is a contained actionable

703
00:28:04,159 --> 00:28:06,399
actionable data in terms of

704
00:28:06,399 --> 00:28:10,320
if it can can contain payload

705
00:28:11,039 --> 00:28:14,000
so if you would tasked with designing

706
00:28:14,000 --> 00:28:15,679
this kind of defense

707
00:28:15,679 --> 00:28:17,520
where do you start so as i mentioned

708
00:28:17,520 --> 00:28:19,840
before the best uh

709
00:28:19,840 --> 00:28:22,000
the best place to start collecting the

710
00:28:22,000 --> 00:28:25,039
data is your recursive dns resolver

711
00:28:25,039 --> 00:28:26,880
and then what you want to do is that you

712
00:28:26,880 --> 00:28:28,960
want to go out there identify the open

713
00:28:28,960 --> 00:28:30,799
source tools for

714
00:28:30,799 --> 00:28:33,200
you know either gene essex filtration or

715
00:28:33,200 --> 00:28:34,799
common and control

716
00:28:34,799 --> 00:28:37,440
uh common control using the

717
00:28:37,440 --> 00:28:39,840
dns as a cover channel right so you run

718
00:28:39,840 --> 00:28:42,240
the tools you collect the data set that

719
00:28:42,240 --> 00:28:44,399
you will be analyzing the second

720
00:28:44,399 --> 00:28:46,799
approach that you want to do is uh

721
00:28:46,799 --> 00:28:49,520
identify encoding techniques would it be

722
00:28:49,520 --> 00:28:53,840
base 64 base 32 and then you want

723
00:28:53,840 --> 00:28:55,600
to be sure that whatever you're

724
00:28:55,600 --> 00:28:57,279
designing not just looks at the

725
00:28:57,279 --> 00:29:00,399
subdomains but also looks as a different

726
00:29:00,399 --> 00:29:02,960
query characteristics would it be q type

727
00:29:02,960 --> 00:29:07,440
like txt srv mx or cname and then with

728
00:29:07,440 --> 00:29:09,039
that data set you apply some

729
00:29:09,039 --> 00:29:10,480
informational

730
00:29:10,480 --> 00:29:12,960
theory trying to identify encoded or

731
00:29:12,960 --> 00:29:16,480
encrypted data and then make a decision

732
00:29:16,480 --> 00:29:18,880
so in the case with cisco umbrella the

733
00:29:18,880 --> 00:29:20,080
way we

734
00:29:20,080 --> 00:29:21,760
actually implemented this kind of

735
00:29:21,760 --> 00:29:24,559
protection is within the resolver so

736
00:29:24,559 --> 00:29:26,399
what we did is that

737
00:29:26,399 --> 00:29:28,720
you know we had this they call it like

738
00:29:28,720 --> 00:29:31,039
smart cache for a while but basically

739
00:29:31,039 --> 00:29:34,320
it's just the technology that let us uh

740
00:29:34,320 --> 00:29:36,960
cache frequently requested dns records

741
00:29:36,960 --> 00:29:40,799
and then build the pairs of the request

742
00:29:40,799 --> 00:29:42,399
and the response

743
00:29:42,399 --> 00:29:45,039
and then when some of the trigger rules

744
00:29:45,039 --> 00:29:45,919
are

745
00:29:45,919 --> 00:29:47,520
actually within the resolver are

746
00:29:47,520 --> 00:29:50,399
triggered the resolvers start looking

747
00:29:50,399 --> 00:29:53,200
not in just one pair of the

748
00:29:53,200 --> 00:29:54,399
resolution

749
00:29:54,399 --> 00:29:57,039
query response it actually looks at the

750
00:29:57,039 --> 00:29:59,279
whole session of them and as it looks at

751
00:29:59,279 --> 00:30:02,240
the session it can apply more and more

752
00:30:02,240 --> 00:30:04,559
deeper inspection uh would it be based

753
00:30:04,559 --> 00:30:06,480
on the behavioral characteristics of the

754
00:30:06,480 --> 00:30:09,120
pattern or the signatures that we

755
00:30:09,120 --> 00:30:10,480
implemented

756
00:30:10,480 --> 00:30:12,000
and when one of the resolvers is

757
00:30:12,000 --> 00:30:14,559
actually able to identify such

758
00:30:14,559 --> 00:30:16,080
uh

759
00:30:16,080 --> 00:30:18,159
which means able to identify dns

760
00:30:18,159 --> 00:30:20,000
tunneling in the process it actually

761
00:30:20,000 --> 00:30:22,080
flags it blocks it and then puts it

762
00:30:22,080 --> 00:30:25,200
upstream so it can go to the whole fleet

763
00:30:25,200 --> 00:30:28,320
of the resolvers everywhere in the world

764
00:30:28,320 --> 00:30:29,200
so

765
00:30:29,200 --> 00:30:32,240
being able to identify maliciousness at

766
00:30:32,240 --> 00:30:34,720
the gns layer is amazing

767
00:30:34,720 --> 00:30:37,039
however malicious actors and their ttps

768
00:30:37,039 --> 00:30:38,960
are consistently evolving and to be

769
00:30:38,960 --> 00:30:41,120
protected from the ransomware you have

770
00:30:41,120 --> 00:30:42,799
to apply

771
00:30:42,799 --> 00:30:45,360
approach where you look at your network

772
00:30:45,360 --> 00:30:48,559
layer by layer and then at the proper

773
00:30:48,559 --> 00:30:50,880
layers you apply proper security

774
00:30:50,880 --> 00:30:53,039
controls and make sure you can detect

775
00:30:53,039 --> 00:30:54,720
all of the ttps that are used by

776
00:30:54,720 --> 00:30:56,399
malicious actors

777
00:30:56,399 --> 00:30:59,200
uh you know either using your own threat

778
00:30:59,200 --> 00:31:02,000
platform or open source intelligence or

779
00:31:02,000 --> 00:31:04,159
the knowledge that gathered by your sock

780
00:31:04,159 --> 00:31:06,080
team

781
00:31:06,080 --> 00:31:09,840
and now i will take your questions

782
00:31:10,480 --> 00:31:12,040
thank you archer

783
00:31:12,040 --> 00:31:15,170
[Applause]

784
00:31:18,159 --> 00:31:21,440
yes we have a microphone over there and

785
00:31:21,440 --> 00:31:22,640
one here

786
00:31:22,640 --> 00:31:23,919
who will

787
00:31:23,919 --> 00:31:26,640
ask the first question

788
00:31:26,640 --> 00:31:28,480
i have five minutes

789
00:31:28,480 --> 00:31:30,000
time enough for

790
00:31:30,000 --> 00:31:33,840
a couple of questions anyone

791
00:31:33,840 --> 00:31:35,120
well if you don't have any questions

792
00:31:35,120 --> 00:31:36,559
right now you can

793
00:31:36,559 --> 00:31:39,600
follow me on twitter i believe

794
00:31:39,600 --> 00:31:42,000
my twitter handle should be somewhere in

795
00:31:42,000 --> 00:31:43,519
the marketing

796
00:31:43,519 --> 00:31:45,279
and

797
00:31:45,279 --> 00:31:47,360
yeah you can reach out on the twitter

798
00:31:47,360 --> 00:31:49,279
probably will be the fastest way and i

799
00:31:49,279 --> 00:31:51,679
can answer any questions you might have

800
00:31:51,679 --> 00:31:54,399
after some time

801
00:31:55,360 --> 00:31:56,399
yes

802
00:31:56,399 --> 00:31:57,360
okay

803
00:31:57,360 --> 00:31:58,480
let's

804
00:31:58,480 --> 00:32:01,200
thank you once more give him an applause

805
00:32:01,200 --> 00:32:02,559
for this

806
00:32:02,559 --> 00:32:06,000
interesting presentation

807
00:32:06,480 --> 00:32:11,399
right thank you very much for having me

808
00:32:24,159 --> 00:32:26,240
you

