1
00:00:05,870 --> 00:00:08,240
[Music]

2
00:00:08,240 --> 00:00:11,200
and uh he told me that he kind of didn't

3
00:00:11,200 --> 00:00:13,440
mean to he sort of got into engineering

4
00:00:13,440 --> 00:00:14,799
and folks there looked like they were a

5
00:00:14,799 --> 00:00:16,880
little bit burned out and i.t looked

6
00:00:16,880 --> 00:00:18,640
like it was a little bit more of a happy

7
00:00:18,640 --> 00:00:22,400
place so he wound up in i.t security and

8
00:00:22,400 --> 00:00:24,640
uh well there's a smile that looks

9
00:00:24,640 --> 00:00:28,000
genuine it does doesn't it folks i'd say

10
00:00:28,000 --> 00:00:30,560
now i asked him i asked him how long

11
00:00:30,560 --> 00:00:32,079
you've been in information security

12
00:00:32,079 --> 00:00:33,840
proper and we figured was about five six

13
00:00:33,840 --> 00:00:35,440
years or something like that like

14
00:00:35,440 --> 00:00:37,600
focused yeah so what would be your

15
00:00:37,600 --> 00:00:40,239
advice for yourself if you could like

16
00:00:40,239 --> 00:00:42,480
you know in a sentence or two tweet wise

17
00:00:42,480 --> 00:00:44,320
you can tweet to yourself when you're

18
00:00:44,320 --> 00:00:46,719
starting out yeah

19
00:00:46,719 --> 00:00:47,920
uh

20
00:00:47,920 --> 00:00:49,920
and what this is working yeah i think

21
00:00:49,920 --> 00:00:53,039
it's working uh i would say take it easy

22
00:00:53,039 --> 00:00:55,039
because in the early early parts of the

23
00:00:55,039 --> 00:00:57,039
career especially in this industry i

24
00:00:57,039 --> 00:00:58,960
found you have a lot of sport and you

25
00:00:58,960 --> 00:01:01,280
have a lot of time to learn

26
00:01:01,280 --> 00:01:03,039
go deep dive on certain areas like

27
00:01:03,039 --> 00:01:05,519
memory analysis malware analysis and

28
00:01:05,519 --> 00:01:07,520
being a junior gives you that space but

29
00:01:07,520 --> 00:01:09,680
as you get more

30
00:01:09,680 --> 00:01:12,240
senior you have to guide people and

31
00:01:12,240 --> 00:01:14,479
train other people and there is a skill

32
00:01:14,479 --> 00:01:15,759
shortage

33
00:01:15,759 --> 00:01:18,240
and it's uh i mean we love the work

34
00:01:18,240 --> 00:01:19,840
because it's so variant

35
00:01:19,840 --> 00:01:21,920
but to be able to deep dive and just

36
00:01:21,920 --> 00:01:24,560
enjoy the you know eating like the the

37
00:01:24,560 --> 00:01:28,240
down to grain it's uh it's it happens

38
00:01:28,240 --> 00:01:30,400
early in the career i would say so for

39
00:01:30,400 --> 00:01:32,159
anybody out there who's just getting

40
00:01:32,159 --> 00:01:34,000
started who has fewer years of

41
00:01:34,000 --> 00:01:35,759
experience if you want to have a smile

42
00:01:35,759 --> 00:01:37,439
on your face and come present at first i

43
00:01:37,439 --> 00:01:39,040
suggest you take that advice let's hear

44
00:01:39,040 --> 00:01:41,360
about ir investigations in the age of

45
00:01:41,360 --> 00:01:42,960
cloud

46
00:01:42,960 --> 00:01:45,279
cool

47
00:01:47,600 --> 00:01:48,960
all right

48
00:01:48,960 --> 00:01:50,640
hi everyone so

49
00:01:50,640 --> 00:01:52,479
i'm a principal incident response

50
00:01:52,479 --> 00:01:55,759
consultant at withsecure you might say

51
00:01:55,759 --> 00:01:58,880
who the hell is vip secure also so we

52
00:01:58,880 --> 00:02:01,600
were previously called f-secure

53
00:02:01,600 --> 00:02:03,680
what happened is we decided that it

54
00:02:03,680 --> 00:02:04,799
needs to be

55
00:02:04,799 --> 00:02:06,799
our focuses in terms of consumer and

56
00:02:06,799 --> 00:02:08,479
business needs to be separated so we

57
00:02:08,479 --> 00:02:10,000
divide it into

58
00:02:10,000 --> 00:02:13,200
vip secure and f-secure so i work in the

59
00:02:13,200 --> 00:02:16,560
vip secure area i mainly focus on

60
00:02:16,560 --> 00:02:18,239
incident response readiness helping

61
00:02:18,239 --> 00:02:20,400
other organizations

62
00:02:20,400 --> 00:02:24,400
we also are a research-based consultancy

63
00:02:24,400 --> 00:02:26,800
we're very proud and passionate about

64
00:02:26,800 --> 00:02:28,800
researching stuff

65
00:02:28,800 --> 00:02:32,400
um so i'm also one of the labs mentor at

66
00:02:32,400 --> 00:02:34,080
with secure labs

67
00:02:34,080 --> 00:02:36,720
most of the blue team content

68
00:02:36,720 --> 00:02:38,879
i try to help people push through it and

69
00:02:38,879 --> 00:02:40,959
share it with you guys

70
00:02:40,959 --> 00:02:43,519
i spend

71
00:02:43,519 --> 00:02:44,800
i would love to spend more time on

72
00:02:44,800 --> 00:02:46,800
research but i do end up spending a lot

73
00:02:46,800 --> 00:02:48,959
of time in service engineering such as

74
00:02:48,959 --> 00:02:51,760
how do we agree in the industry

75
00:02:51,760 --> 00:02:54,800
on uh let's say what we call triage like

76
00:02:54,800 --> 00:02:57,760
a person-to-person agreeingness and just

77
00:02:57,760 --> 00:02:58,720
creating

78
00:02:58,720 --> 00:03:00,800
a service that any junior person can

79
00:03:00,800 --> 00:03:03,200
come into it and we can train them in a

80
00:03:03,200 --> 00:03:04,480
not godly

81
00:03:04,480 --> 00:03:07,599
long amount of time

82
00:03:07,599 --> 00:03:09,760
so i'm talked about research one of the

83
00:03:09,760 --> 00:03:11,040
things i've done

84
00:03:11,040 --> 00:03:14,959
is cat scale compromise assessment

85
00:03:14,959 --> 00:03:17,599
linux at scale

86
00:03:17,599 --> 00:03:19,680
so this this script

87
00:03:19,680 --> 00:03:21,760
is uh one of the research projects i've

88
00:03:21,760 --> 00:03:23,599
done i recommend going looking at it

89
00:03:23,599 --> 00:03:25,680
we've run this script generally when

90
00:03:25,680 --> 00:03:27,760
we're looking at 500

91
00:03:27,760 --> 00:03:31,920
1000 linux at a compromise assessment

92
00:03:31,920 --> 00:03:33,760
though there's a log stache config

93
00:03:33,760 --> 00:03:34,640
that's

94
00:03:34,640 --> 00:03:37,120
a lot of regexes and took

95
00:03:37,120 --> 00:03:38,080
some

96
00:03:38,080 --> 00:03:40,959
i have some white hair building that

97
00:03:40,959 --> 00:03:42,720
some of the other research we're doing

98
00:03:42,720 --> 00:03:44,720
chainsaw i think a lot of people are

99
00:03:44,720 --> 00:03:46,480
very very familiar so i work very

100
00:03:46,480 --> 00:03:48,720
closely with the guys who built that

101
00:03:48,720 --> 00:03:51,760
uh we spend i would say more than 50 of

102
00:03:51,760 --> 00:03:52,879
the time

103
00:03:52,879 --> 00:03:55,200
researching new ideas and tools not all

104
00:03:55,200 --> 00:03:58,080
of these make to you guys but we're very

105
00:03:58,080 --> 00:03:59,599
open so one of the new things that we're

106
00:03:59,599 --> 00:04:01,519
going to be releasing is the tech tree

107
00:04:01,519 --> 00:04:02,959
it's already up

108
00:04:02,959 --> 00:04:04,879
uh we're just reviewing the content of

109
00:04:04,879 --> 00:04:07,519
the blog should be with you i recommend

110
00:04:07,519 --> 00:04:10,239
definitely checking that one out also

111
00:04:10,239 --> 00:04:12,560
so today i'm gonna go through a case

112
00:04:12,560 --> 00:04:13,599
study

113
00:04:13,599 --> 00:04:15,360
we called this case

114
00:04:15,360 --> 00:04:18,000
i changed the name because

115
00:04:18,000 --> 00:04:19,600
anonymity but

116
00:04:19,600 --> 00:04:22,320
the we call this case nuclear orange it

117
00:04:22,320 --> 00:04:25,120
was very unique in terms of impact and

118
00:04:25,120 --> 00:04:27,600
i'll get into that real quick after that

119
00:04:27,600 --> 00:04:28,960
we're going to look at the incident

120
00:04:28,960 --> 00:04:31,520
response challenges and opportunities in

121
00:04:31,520 --> 00:04:33,600
the cloud

122
00:04:33,600 --> 00:04:35,759
and lastly i'll talk about some

123
00:04:35,759 --> 00:04:38,560
readiness strategies both for responders

124
00:04:38,560 --> 00:04:40,639
and organizations

125
00:04:40,639 --> 00:04:42,880
that are helping uh

126
00:04:42,880 --> 00:04:44,880
trying to protect themselves uh that you

127
00:04:44,880 --> 00:04:47,120
can implement

128
00:04:47,120 --> 00:04:48,639
so let's start

129
00:04:48,639 --> 00:04:50,639
uh i photoshopped that orange in there

130
00:04:50,639 --> 00:04:52,160
for your entertainment i hope you like

131
00:04:52,160 --> 00:04:53,440
it

132
00:04:53,440 --> 00:04:54,720
uh

133
00:04:54,720 --> 00:04:57,120
yeah centralize your logging develop

134
00:04:57,120 --> 00:04:59,520
trust issues i think is the subline of

135
00:04:59,520 --> 00:05:00,960
this

136
00:05:00,960 --> 00:05:03,440
uh case so just talk about let's talk

137
00:05:03,440 --> 00:05:05,759
about client who who they were they were

138
00:05:05,759 --> 00:05:08,240
a startup they were loading developing

139
00:05:08,240 --> 00:05:10,880
iot firmware so there's

140
00:05:10,880 --> 00:05:13,440
they had limited logging and monitoring

141
00:05:13,440 --> 00:05:14,320
which we

142
00:05:14,320 --> 00:05:16,560
see most of the startups in that

143
00:05:16,560 --> 00:05:19,199
scenario their iam policies but all over

144
00:05:19,199 --> 00:05:20,800
the place because they're developing and

145
00:05:20,800 --> 00:05:23,120
they're trying to get a product out

146
00:05:23,120 --> 00:05:26,400
they had no mfa and they had actually a

147
00:05:26,400 --> 00:05:27,840
key part of their

148
00:05:27,840 --> 00:05:30,080
infrastructure managed by

149
00:05:30,080 --> 00:05:31,680
a sas

150
00:05:31,680 --> 00:05:32,880
vendor

151
00:05:32,880 --> 00:05:36,320
so their technology was aws windows ad

152
00:05:36,320 --> 00:05:40,160
they had the kubernetes eks

153
00:05:40,160 --> 00:05:42,080
elastic kubernetes service i think it's

154
00:05:42,080 --> 00:05:42,960
called

155
00:05:42,960 --> 00:05:45,199
that was managed by third party

156
00:05:45,199 --> 00:05:47,919
and they had bitbucket and jenkins set

157
00:05:47,919 --> 00:05:51,599
up to automate their pipeline

158
00:05:51,759 --> 00:05:54,880
so this is roughly what it looked like

159
00:05:54,880 --> 00:05:58,000
uh so the external vendor managed this

160
00:05:58,000 --> 00:06:00,160
part of the aws although it was in the

161
00:06:00,160 --> 00:06:01,759
client's environment

162
00:06:01,759 --> 00:06:04,479
so they had the jenkins product staging

163
00:06:04,479 --> 00:06:06,479
they had that's a bit of a spoiler but

164
00:06:06,479 --> 00:06:09,600
this jenkins web portal uh should have

165
00:06:09,600 --> 00:06:11,360
been not public

166
00:06:11,360 --> 00:06:13,680
and they had single sign on through the

167
00:06:13,680 --> 00:06:15,199
bitbucket

168
00:06:15,199 --> 00:06:17,600
accounts so this authentication was not

169
00:06:17,600 --> 00:06:19,919
managed by the client and clients used

170
00:06:19,919 --> 00:06:22,160
obviously windows ad their network and

171
00:06:22,160 --> 00:06:27,120
they accessed aws as it was theirs

172
00:06:27,280 --> 00:06:29,840
so let's start

173
00:06:29,840 --> 00:06:31,840
so this is what they found

174
00:06:31,840 --> 00:06:33,440
one day

175
00:06:33,440 --> 00:06:37,520
they've came to realize that

176
00:06:37,520 --> 00:06:38,720
let's go back

177
00:06:38,720 --> 00:06:41,120
that shouldn't have been on a timer

178
00:06:41,120 --> 00:06:42,880
they came back and they realized all of

179
00:06:42,880 --> 00:06:45,280
their code was open sourced and

180
00:06:45,280 --> 00:06:48,479
including their all aws keys

181
00:06:48,479 --> 00:06:50,720
so they contacted us and said hey we

182
00:06:50,720 --> 00:06:51,680
found

183
00:06:51,680 --> 00:06:53,599
everything we have is open sourced we

184
00:06:53,599 --> 00:06:55,840
don't think we didn't do this

185
00:06:55,840 --> 00:06:58,639
and we're not sure what to do with it so

186
00:06:58,639 --> 00:07:00,639
obviously the things you think about is

187
00:07:00,639 --> 00:07:03,039
is this an insider tractor

188
00:07:03,039 --> 00:07:05,199
because a threat actor who comes outside

189
00:07:05,199 --> 00:07:06,560
has all of these they could have done a

190
00:07:06,560 --> 00:07:08,880
lot more right so you start it's a bit

191
00:07:08,880 --> 00:07:11,360
of an interesting place to start

192
00:07:11,360 --> 00:07:12,240
so

193
00:07:12,240 --> 00:07:15,440
obviously this is a classic scenario of

194
00:07:15,440 --> 00:07:16,880
every incident

195
00:07:16,880 --> 00:07:19,919
you will ask things and you will get 10

196
00:07:19,919 --> 00:07:23,120
or 20 of that so we asked for vpn logs

197
00:07:23,120 --> 00:07:24,880
because if it's an insider we want to

198
00:07:24,880 --> 00:07:26,720
correlate to who's authenticating into

199
00:07:26,720 --> 00:07:29,199
the environment we ask for cloudtrail so

200
00:07:29,199 --> 00:07:31,120
we can see which account has performed

201
00:07:31,120 --> 00:07:32,400
these changes

202
00:07:32,400 --> 00:07:36,160
we wanted to get the snapshot of the

203
00:07:36,160 --> 00:07:37,280
cluster

204
00:07:37,280 --> 00:07:39,280
aws because

205
00:07:39,280 --> 00:07:41,199
jenkins was also part of this jenkin

206
00:07:41,199 --> 00:07:43,360
compromise is quite common

207
00:07:43,360 --> 00:07:45,360
we asked a third-party vendor at this

208
00:07:45,360 --> 00:07:46,319
point

209
00:07:46,319 --> 00:07:48,560
like is this jenkins

210
00:07:48,560 --> 00:07:50,160
open to the public

211
00:07:50,160 --> 00:07:52,639
they said it is not definitely not i

212
00:07:52,639 --> 00:07:53,680
promise you

213
00:07:53,680 --> 00:07:54,879
we're like okay

214
00:07:54,879 --> 00:07:57,039
if you tell us we believe

215
00:07:57,039 --> 00:07:58,720
and then we we obviously looked at

216
00:07:58,720 --> 00:08:01,120
wanted to look at bitlock

217
00:08:01,120 --> 00:08:02,560
logs also just to see who's

218
00:08:02,560 --> 00:08:03,599
authenticating because the

219
00:08:03,599 --> 00:08:06,240
authentication to jenkins is true there

220
00:08:06,240 --> 00:08:09,280
and we wanted s3 logs and vpc logs

221
00:08:09,280 --> 00:08:11,680
obviously and this is

222
00:08:11,680 --> 00:08:12,800
what we got

223
00:08:12,800 --> 00:08:15,520
we got the vpn logs and cloud trail logs

224
00:08:15,520 --> 00:08:16,879
easy

225
00:08:16,879 --> 00:08:19,840
bitbucket uh it was managed by their sas

226
00:08:19,840 --> 00:08:22,639
provider so every time we asked logs we

227
00:08:22,639 --> 00:08:24,800
got it in dips and drops like it drips

228
00:08:24,800 --> 00:08:27,840
and drops like they'll give us a certain

229
00:08:27,840 --> 00:08:29,280
period and we're like okay this is not

230
00:08:29,280 --> 00:08:30,960
the incident period and this looks

231
00:08:30,960 --> 00:08:33,039
filtered please give us the full period

232
00:08:33,039 --> 00:08:34,559
next time they give us the full period

233
00:08:34,559 --> 00:08:36,320
but it's still filtered we can see the

234
00:08:36,320 --> 00:08:37,839
data is

235
00:08:37,839 --> 00:08:40,240
not the original data and when it comes

236
00:08:40,240 --> 00:08:42,640
to the snapshots the snapshots were not

237
00:08:42,640 --> 00:08:45,040
tagged so they couldn't tell us what

238
00:08:45,040 --> 00:08:46,800
these snapshots were

239
00:08:46,800 --> 00:08:48,480
they are like these are the snapshots we

240
00:08:48,480 --> 00:08:50,240
have okay but where

241
00:08:50,240 --> 00:08:52,160
how do these snapshots relate to each

242
00:08:52,160 --> 00:08:54,000
other they had no clue so we're like

243
00:08:54,000 --> 00:08:56,160
okay we'll have to reverse that

244
00:08:56,160 --> 00:08:58,320
jenkins applications log

245
00:08:58,320 --> 00:08:59,760
doesn't exist

246
00:08:59,760 --> 00:09:02,240
like they had no clue where these are we

247
00:09:02,240 --> 00:09:05,040
couldn't find them in these snapshots

248
00:09:05,040 --> 00:09:07,279
it's it's a to me is still a puzzle

249
00:09:07,279 --> 00:09:09,519
today that they couldn't answer where

250
00:09:09,519 --> 00:09:11,839
those logs are they didn't exist in the

251
00:09:11,839 --> 00:09:13,680
snapshots they

252
00:09:13,680 --> 00:09:15,519
it wasn't a side car

253
00:09:15,519 --> 00:09:17,440
so we don't know how

254
00:09:17,440 --> 00:09:19,360
where those are s3 logs they didn't

255
00:09:19,360 --> 00:09:22,640
enable it they're default disabled units

256
00:09:22,640 --> 00:09:24,399
enabled in cloud

257
00:09:24,399 --> 00:09:26,959
and vpc logs same same story they're not

258
00:09:26,959 --> 00:09:29,120
enabled by default so

259
00:09:29,120 --> 00:09:31,279
good luck investigating this right

260
00:09:31,279 --> 00:09:34,640
so look at the cloud trail logs

261
00:09:34,640 --> 00:09:36,880
we could see something interesting

262
00:09:36,880 --> 00:09:38,959
hot dogs are sandwiches

263
00:09:38,959 --> 00:09:40,880
now this is a good debate

264
00:09:40,880 --> 00:09:42,880
i think we left some people leave over

265
00:09:42,880 --> 00:09:44,640
the agree disagreement

266
00:09:44,640 --> 00:09:46,320
no i'm joking they didn't

267
00:09:46,320 --> 00:09:47,440
but

268
00:09:47,440 --> 00:09:49,120
obviously there is few things

269
00:09:49,120 --> 00:09:51,120
interesting about the slogan tree if you

270
00:09:51,120 --> 00:09:52,800
haven't seen a cloud trail log entry

271
00:09:52,800 --> 00:09:55,839
before they're mostly json uh most av

272
00:09:55,839 --> 00:09:57,760
sorry cloud vendors actually have it in

273
00:09:57,760 --> 00:09:59,839
json which is nice of them

274
00:09:59,839 --> 00:10:01,680
but you could also see

275
00:10:01,680 --> 00:10:03,360
sid and game

276
00:10:03,360 --> 00:10:05,920
hot dogs are junk sandwiches jenkins

277
00:10:05,920 --> 00:10:08,880
like a bit of a weird mix really right

278
00:10:08,880 --> 00:10:11,519
so if you look end game or hot dogs are

279
00:10:11,519 --> 00:10:13,760
sandwiches online

280
00:10:13,760 --> 00:10:15,519
you will find that there is a tool

281
00:10:15,519 --> 00:10:17,920
called endgame and it's designed to

282
00:10:17,920 --> 00:10:20,240
create back doors in aws

283
00:10:20,240 --> 00:10:21,120
in

284
00:10:21,120 --> 00:10:23,360
in one liner like one line commands

285
00:10:23,360 --> 00:10:25,360
instead of running multiple things to

286
00:10:25,360 --> 00:10:28,800
vector on aws account and one of the

287
00:10:28,800 --> 00:10:32,079
things about this is the end game um

288
00:10:32,079 --> 00:10:34,000
like the i think the guys who built this

289
00:10:34,000 --> 00:10:36,480
are also called endgame they've they've

290
00:10:36,480 --> 00:10:39,040
actually documented very well how to

291
00:10:39,040 --> 00:10:40,959
detect this how they investigated which

292
00:10:40,959 --> 00:10:43,440
was very useful obviously

293
00:10:43,440 --> 00:10:46,000
uh and it says here this is the default

294
00:10:46,000 --> 00:10:48,399
user agent which is very common actually

295
00:10:48,399 --> 00:10:49,279
that

296
00:10:49,279 --> 00:10:52,320
99 of the cases almost that the threat

297
00:10:52,320 --> 00:10:54,079
actors don't change this

298
00:10:54,079 --> 00:10:55,200
they they're not reading the

299
00:10:55,200 --> 00:10:58,000
documentation

300
00:10:58,000 --> 00:11:01,200
so looking at the cloud trail rugs um

301
00:11:01,200 --> 00:11:03,200
now we identify the account that's doing

302
00:11:03,200 --> 00:11:05,120
the malicious stuff the user agent is

303
00:11:05,120 --> 00:11:07,040
the same right what we're doing is

304
00:11:07,040 --> 00:11:08,480
aggregating

305
00:11:08,480 --> 00:11:10,640
all the actions that tread actor has

306
00:11:10,640 --> 00:11:12,320
taken

307
00:11:12,320 --> 00:11:15,440
now if we go back

308
00:11:15,440 --> 00:11:17,040
you'll see here

309
00:11:17,040 --> 00:11:18,800
uh so

310
00:11:18,800 --> 00:11:20,620
let's see

311
00:11:20,620 --> 00:11:22,880
[Music]

312
00:11:22,880 --> 00:11:25,760
allow current account put bucket policy

313
00:11:25,760 --> 00:11:27,360
you can see there is a field called

314
00:11:27,360 --> 00:11:29,440
event name

315
00:11:29,440 --> 00:11:32,000
so we aggregated these

316
00:11:32,000 --> 00:11:34,399
and you can see there is few of them

317
00:11:34,399 --> 00:11:36,160
like they're very descriptive most of

318
00:11:36,160 --> 00:11:38,399
them are you're listing describing

319
00:11:38,399 --> 00:11:41,200
images getting information but few of

320
00:11:41,200 --> 00:11:42,480
them are

321
00:11:42,480 --> 00:11:44,800
the ones that we we would mostly care

322
00:11:44,800 --> 00:11:46,880
about which is ed permissions

323
00:11:46,880 --> 00:11:49,360
grant yourself permissions on things

324
00:11:49,360 --> 00:11:52,000
you know s3 buckets which is you know

325
00:11:52,000 --> 00:11:54,839
you make the stream you know bucket

326
00:11:54,839 --> 00:11:57,200
public put key policy you know you

327
00:11:57,200 --> 00:11:59,120
attach a new kms key

328
00:11:59,120 --> 00:12:01,440
and such so

329
00:12:01,440 --> 00:12:02,560
this is

330
00:12:02,560 --> 00:12:05,040
effectively how you like aggregate and

331
00:12:05,040 --> 00:12:07,440
try to get an overall understanding of

332
00:12:07,440 --> 00:12:10,399
what the threat actor is trying to

333
00:12:10,399 --> 00:12:12,320
has done

334
00:12:12,320 --> 00:12:14,160
again like i said the ant game has

335
00:12:14,160 --> 00:12:15,440
amazing

336
00:12:15,440 --> 00:12:18,320
documentation they explain you know what

337
00:12:18,320 --> 00:12:20,000
you need to be looking for such as the

338
00:12:20,000 --> 00:12:21,920
event name here we're seeing

339
00:12:21,920 --> 00:12:24,399
in that log we call

340
00:12:24,399 --> 00:12:26,720
so let's look at the random eks

341
00:12:26,720 --> 00:12:28,639
snapshots right so we we said we

342
00:12:28,639 --> 00:12:31,440
investigated this so we found out we had

343
00:12:31,440 --> 00:12:32,880
to reverse them because they weren't

344
00:12:32,880 --> 00:12:34,480
tagged right so we have to like look at

345
00:12:34,480 --> 00:12:36,399
them okay identify the

346
00:12:36,399 --> 00:12:38,880
uh operating system that's running and

347
00:12:38,880 --> 00:12:40,639
then figure out how it all connects

348
00:12:40,639 --> 00:12:43,519
right so we we believe these to be this

349
00:12:43,519 --> 00:12:45,680
hypervisor data disks

350
00:12:45,680 --> 00:12:47,760
they didn't they didn't contain anything

351
00:12:47,760 --> 00:12:49,440
relevant because

352
00:12:49,440 --> 00:12:53,200
uh flash like news that kubernetes has

353
00:12:53,200 --> 00:12:56,000
zero logging enabled by default it's

354
00:12:56,000 --> 00:12:58,560
very easy to enable it on aws actually

355
00:12:58,560 --> 00:13:00,639
it's a one line if you're running it

356
00:13:00,639 --> 00:13:02,560
locally it you need to define a config

357
00:13:02,560 --> 00:13:04,240
which makes a bit more complicated but

358
00:13:04,240 --> 00:13:06,320
again advantages of the cloud the

359
00:13:06,320 --> 00:13:08,399
vendors although they're not enabling

360
00:13:08,399 --> 00:13:11,440
things by def default it's easy to

361
00:13:11,440 --> 00:13:12,720
enable them

362
00:13:12,720 --> 00:13:16,160
so we had one random windows partition

363
00:13:16,160 --> 00:13:18,560
which is absolutely weird because there

364
00:13:18,560 --> 00:13:20,720
shouldn't be any windows so we don't

365
00:13:20,720 --> 00:13:22,880
know what that was we couldn't like we

366
00:13:22,880 --> 00:13:25,040
couldn't link it to the infrastructure

367
00:13:25,040 --> 00:13:26,639
and then we had the containers which we

368
00:13:26,639 --> 00:13:27,760
believe to be

369
00:13:27,760 --> 00:13:29,600
staging and

370
00:13:29,600 --> 00:13:30,880
production

371
00:13:30,880 --> 00:13:32,560
now we had

372
00:13:32,560 --> 00:13:34,720
um with so few

373
00:13:34,720 --> 00:13:35,920
um

374
00:13:35,920 --> 00:13:38,480
information available

375
00:13:38,480 --> 00:13:41,600
um we had to get creative right so we we

376
00:13:41,600 --> 00:13:43,680
done the we done some research on

377
00:13:43,680 --> 00:13:46,399
jenkins we identified the user file

378
00:13:46,399 --> 00:13:48,399
created at the time we're like okay this

379
00:13:48,399 --> 00:13:50,240
is a bit interesting maybe it's the

380
00:13:50,240 --> 00:13:52,320
inside of creating a new account and

381
00:13:52,320 --> 00:13:53,839
then when we were researching we

382
00:13:53,839 --> 00:13:55,519
realized when you create an account in

383
00:13:55,519 --> 00:13:57,440
jenkins

384
00:13:57,440 --> 00:14:00,560
it creates a user file username dot xml

385
00:14:00,560 --> 00:14:02,720
but this xml is not written to the disk

386
00:14:02,720 --> 00:14:04,720
till that user account logs in a second

387
00:14:04,720 --> 00:14:07,040
time it stays in the memory so that was

388
00:14:07,040 --> 00:14:09,360
an absolute rabbit hole that we wasted

389
00:14:09,360 --> 00:14:11,600
some time on

390
00:14:11,600 --> 00:14:13,680
but at the end

391
00:14:13,680 --> 00:14:17,000
they were useless

392
00:14:18,320 --> 00:14:21,600
so the the case lead case and the person

393
00:14:21,600 --> 00:14:23,040
we're going to actually present this

394
00:14:23,040 --> 00:14:25,680
today johnny green she's not here today

395
00:14:25,680 --> 00:14:28,399
but that was the only picture i had over

396
00:14:28,399 --> 00:14:30,320
during christmas we were putting hats on

397
00:14:30,320 --> 00:14:32,320
our profile pictures so

398
00:14:32,320 --> 00:14:34,959
that's still a picture she left me a bit

399
00:14:34,959 --> 00:14:36,959
uh but hey

400
00:14:36,959 --> 00:14:38,880
you know what it's in the cloud

401
00:14:38,880 --> 00:14:40,800
let's let's deploy the jenkins in an

402
00:14:40,800 --> 00:14:42,560
isolated environment and you give us

403
00:14:42,560 --> 00:14:45,120
access right we don't have evidence to

404
00:14:45,120 --> 00:14:47,839
prove theories or disprove them but

405
00:14:47,839 --> 00:14:49,839
let's let's take the attacker's approach

406
00:14:49,839 --> 00:14:52,399
and see what what how does this look

407
00:14:52,399 --> 00:14:55,920
like from the perspective of a user

408
00:14:55,920 --> 00:14:59,760
so what we realized was

409
00:14:59,760 --> 00:15:00,560
the

410
00:15:00,560 --> 00:15:02,720
the vendor made a mistake

411
00:15:02,720 --> 00:15:05,440
and they deployed the config

412
00:15:05,440 --> 00:15:08,000
that allowed any bitbucket account

413
00:15:08,000 --> 00:15:10,079
regardless of the organization or not

414
00:15:10,079 --> 00:15:12,800
organization to account to login to the

415
00:15:12,800 --> 00:15:15,120
jenkins account

416
00:15:15,120 --> 00:15:16,079
so

417
00:15:16,079 --> 00:15:18,000
when johnny logged into the bitbucket

418
00:15:18,000 --> 00:15:19,760
with her account she was like okay this

419
00:15:19,760 --> 00:15:21,760
is bit weird

420
00:15:21,760 --> 00:15:23,279
got up on the call

421
00:15:23,279 --> 00:15:23,920
and said to

422
00:15:23,920 --> 00:15:25,839
[Music]

423
00:15:25,839 --> 00:15:27,760
set to the third part to under okay so

424
00:15:27,760 --> 00:15:29,519
we i just logged into this with my

425
00:15:29,519 --> 00:15:31,759
account that has no relation to you guys

426
00:15:31,759 --> 00:15:34,079
can you explain this and right here is

427
00:15:34,079 --> 00:15:36,320
where my trust issues start because the

428
00:15:36,320 --> 00:15:40,079
vander said actually we made a mistake

429
00:15:40,079 --> 00:15:41,839
we haven't told you but

430
00:15:41,839 --> 00:15:43,519
it was public

431
00:15:43,519 --> 00:15:44,320
and

432
00:15:44,320 --> 00:15:46,639
we made a conflict change that left the

433
00:15:46,639 --> 00:15:48,800
service in this state

434
00:15:48,800 --> 00:15:50,480
so afterwards obviously you have a

435
00:15:50,480 --> 00:15:52,320
public jenkins account with anyone that

436
00:15:52,320 --> 00:15:53,680
can log in

437
00:15:53,680 --> 00:15:56,320
next is quite easy this there is a

438
00:15:56,320 --> 00:15:58,720
script you can google for it

439
00:15:58,720 --> 00:16:01,440
uh i think it's from mohammed amsari

440
00:16:01,440 --> 00:16:02,480
saeed

441
00:16:02,480 --> 00:16:04,320
it basically dumps all the credits you

442
00:16:04,320 --> 00:16:05,839
have in jenkins

443
00:16:05,839 --> 00:16:07,839
from the script console which is

444
00:16:07,839 --> 00:16:09,199
available

445
00:16:09,199 --> 00:16:10,800
so

446
00:16:10,800 --> 00:16:14,160
if you look at the attack path right

447
00:16:14,160 --> 00:16:17,279
the thread actor finds the public

448
00:16:17,279 --> 00:16:19,680
public web portal

449
00:16:19,680 --> 00:16:21,440
no application logs so there's no

450
00:16:21,440 --> 00:16:24,000
opportunity for detection there

451
00:16:24,000 --> 00:16:27,519
the single sign-on config mistake

452
00:16:27,519 --> 00:16:29,519
come to the bitbucket client has no

453
00:16:29,519 --> 00:16:31,199
visibility so they cannot do any

454
00:16:31,199 --> 00:16:33,440
detection there the third party i guess

455
00:16:33,440 --> 00:16:34,839
is not looking at it

456
00:16:34,839 --> 00:16:37,279
either but again like here i think is

457
00:16:37,279 --> 00:16:39,839
the point i would like to make is

458
00:16:39,839 --> 00:16:42,800
which i'm going to get to is that

459
00:16:42,800 --> 00:16:44,560
keep your look central

460
00:16:44,560 --> 00:16:45,519
because

461
00:16:45,519 --> 00:16:47,279
our we could have

462
00:16:47,279 --> 00:16:49,279
quickly understood that this tradactor

463
00:16:49,279 --> 00:16:51,680
was logging to the bitbucket

464
00:16:51,680 --> 00:16:53,600
because if he had the locks but this is

465
00:16:53,600 --> 00:16:55,600
where we realized the logs were actually

466
00:16:55,600 --> 00:16:58,160
why they we kept getting drips and drops

467
00:16:58,160 --> 00:17:00,560
and why they were being filtered and now

468
00:17:00,560 --> 00:17:03,040
i'm while i'm not gonna name the vendor

469
00:17:03,040 --> 00:17:05,280
this is not a small vendor that should

470
00:17:05,280 --> 00:17:08,079
not be doing this

471
00:17:09,599 --> 00:17:11,280
going further

472
00:17:11,280 --> 00:17:13,039
you run the script console you get the

473
00:17:13,039 --> 00:17:14,799
credential

474
00:17:14,799 --> 00:17:17,199
boom now you got the client aws you have

475
00:17:17,199 --> 00:17:20,000
all the creds whatever you want to do

476
00:17:20,000 --> 00:17:22,079
you drop the public s3 bucket dump

477
00:17:22,079 --> 00:17:24,480
everything and there you go

478
00:17:24,480 --> 00:17:26,079
everything is public

479
00:17:26,079 --> 00:17:27,359
right

480
00:17:27,359 --> 00:17:29,600
so

481
00:17:30,160 --> 00:17:34,080
and we didn't have any s3 logs because

482
00:17:34,080 --> 00:17:36,160
they're disabled by default

483
00:17:36,160 --> 00:17:38,080
so you don't even know who

484
00:17:38,080 --> 00:17:39,840
has accessed all of your ip and

485
00:17:39,840 --> 00:17:43,199
credentials if they have

486
00:17:44,720 --> 00:17:45,520
cool

487
00:17:45,520 --> 00:17:47,679
so let's talk about some challenges and

488
00:17:47,679 --> 00:17:49,280
opportunities like based on this

489
00:17:49,280 --> 00:17:50,559
incident right

490
00:17:50,559 --> 00:17:52,799
so

491
00:17:53,200 --> 00:17:55,600
sas products right so

492
00:17:55,600 --> 00:17:57,200
the the things that we don't have

493
00:17:57,200 --> 00:18:00,080
control of like in in our own premise

494
00:18:00,080 --> 00:18:01,679
on our networks

495
00:18:01,679 --> 00:18:03,919
windows there are so many artifacts that

496
00:18:03,919 --> 00:18:06,720
are unintentional that are valued to us

497
00:18:06,720 --> 00:18:09,039
but with sas we're limited to the logs

498
00:18:09,039 --> 00:18:11,039
and if you're trusting that you're going

499
00:18:11,039 --> 00:18:13,520
to get access to your logs instant i can

500
00:18:13,520 --> 00:18:15,679
tell you that 90 of the time that's not

501
00:18:15,679 --> 00:18:18,000
going to be true it takes time so it's

502
00:18:18,000 --> 00:18:20,400
really critical to centralize those like

503
00:18:20,400 --> 00:18:24,480
even with the microsoft 365 and

504
00:18:24,480 --> 00:18:26,640
some of the other sas products where

505
00:18:26,640 --> 00:18:29,440
they store the data it's not

506
00:18:29,440 --> 00:18:31,840
it's not for analysis

507
00:18:31,840 --> 00:18:33,280
and it takes

508
00:18:33,280 --> 00:18:35,280
on demand access is not forensically

509
00:18:35,280 --> 00:18:36,160
sound

510
00:18:36,160 --> 00:18:37,200
so

511
00:18:37,200 --> 00:18:40,080
to dig that deeper for example if you do

512
00:18:40,080 --> 00:18:43,440
on a busy estate microsoft 365 you know

513
00:18:43,440 --> 00:18:45,360
investigation and you do search unify

514
00:18:45,360 --> 00:18:46,480
audit

515
00:18:46,480 --> 00:18:49,039
the output of the result is different

516
00:18:49,039 --> 00:18:51,600
and you're limited to 5 000 entries at a

517
00:18:51,600 --> 00:18:54,160
time so if you're doing a big estate

518
00:18:54,160 --> 00:18:55,760
investigation

519
00:18:55,760 --> 00:18:58,720
your bit should allah like

520
00:18:58,720 --> 00:19:01,039
log extraction may be throttled so again

521
00:19:01,039 --> 00:19:03,520
you're limited to 5000 there are ways to

522
00:19:03,520 --> 00:19:05,360
around it if you want to know come talk

523
00:19:05,360 --> 00:19:06,880
to me

524
00:19:06,880 --> 00:19:09,120
default log retentions they're not going

525
00:19:09,120 --> 00:19:10,400
to be enough

526
00:19:10,400 --> 00:19:13,360
but good thing the opportunity here is

527
00:19:13,360 --> 00:19:15,760
while you're on on-prem it's difficult

528
00:19:15,760 --> 00:19:18,559
to like enable or centralize these logs

529
00:19:18,559 --> 00:19:20,720
on majority of the sas products and

530
00:19:20,720 --> 00:19:22,480
cloud vendors these are there are

531
00:19:22,480 --> 00:19:24,480
multiple ways within single triple

532
00:19:24,480 --> 00:19:27,120
clicks that you can get these logs to

533
00:19:27,120 --> 00:19:29,280
somewhere not even if you're detecting

534
00:19:29,280 --> 00:19:31,440
it at least you have them accessible to

535
00:19:31,440 --> 00:19:34,400
yourself uh so a good example is uh

536
00:19:34,400 --> 00:19:36,480
cloud trail logs they're on s3 bucket

537
00:19:36,480 --> 00:19:38,320
right you can if as long as you have

538
00:19:38,320 --> 00:19:39,600
them you can just

539
00:19:39,600 --> 00:19:42,640
pull them down microsoft 365 you can put

540
00:19:42,640 --> 00:19:46,799
them on a also storage bucket

541
00:19:46,799 --> 00:19:49,200
uh let's talk about containers

542
00:19:49,200 --> 00:19:51,440
scales ups and down evidence is

543
00:19:51,440 --> 00:19:53,919
destroyed so this is the major issue

544
00:19:53,919 --> 00:19:56,400
this is why you need side cars or you

545
00:19:56,400 --> 00:19:57,840
actually need to document where your

546
00:19:57,840 --> 00:20:00,240
logs are logging is not enabled by

547
00:20:00,240 --> 00:20:02,640
default so kubernetes has i believe like

548
00:20:02,640 --> 00:20:05,520
five components in it and one of the key

549
00:20:05,520 --> 00:20:08,240
uh key logs is the api calls that the

550
00:20:08,240 --> 00:20:10,640
controller is making so if the thread

551
00:20:10,640 --> 00:20:13,440
actor compromises kubernetes then that's

552
00:20:13,440 --> 00:20:15,520
where we would see what they're doing if

553
00:20:15,520 --> 00:20:17,440
they're scaling and taking down the

554
00:20:17,440 --> 00:20:18,960
infrastructure

555
00:20:18,960 --> 00:20:20,799
luckily in this scenario we didn't need

556
00:20:20,799 --> 00:20:21,919
that

557
00:20:21,919 --> 00:20:24,080
not enough ir documentation so if you

558
00:20:24,080 --> 00:20:26,559
ever end up doing kubernetes incidents

559
00:20:26,559 --> 00:20:28,080
you're going to realize there is very

560
00:20:28,080 --> 00:20:29,919
few use cases or investigations

561
00:20:29,919 --> 00:20:32,559
documented online and there is

562
00:20:32,559 --> 00:20:35,840
it's it's because it's it's

563
00:20:35,840 --> 00:20:37,679
we haven't got to that stage where

564
00:20:37,679 --> 00:20:39,600
threat actors are done with our own

565
00:20:39,600 --> 00:20:41,360
premise yet they're still very excited

566
00:20:41,360 --> 00:20:43,679
about it but this is something that as

567
00:20:43,679 --> 00:20:45,919
an industry we need to focus on and

568
00:20:45,919 --> 00:20:47,919
share how do you do investigation with

569
00:20:47,919 --> 00:20:49,360
containers and what are the best

570
00:20:49,360 --> 00:20:50,400
practices

571
00:20:50,400 --> 00:20:52,320
but there are opportunities in the cloud

572
00:20:52,320 --> 00:20:55,120
such as automating snapshots like

573
00:20:55,120 --> 00:20:57,280
using eventbridge let's say you had a

574
00:20:57,280 --> 00:20:59,440
cloud watch detection

575
00:20:59,440 --> 00:21:01,440
use eventbrings to immediately take a

576
00:21:01,440 --> 00:21:03,600
snapshot and tag that and keep it for a

577
00:21:03,600 --> 00:21:04,640
week

578
00:21:04,640 --> 00:21:07,120
or keep it for two days but this is very

579
00:21:07,120 --> 00:21:09,120
possible and this is where security

580
00:21:09,120 --> 00:21:11,679
engineering is quite critical

581
00:21:11,679 --> 00:21:14,159
again i mentioned it's one line to

582
00:21:14,159 --> 00:21:16,640
enable logging on kubernetes

583
00:21:16,640 --> 00:21:19,200
and there is cloud native log log

584
00:21:19,200 --> 00:21:21,520
collection agents actually from most of

585
00:21:21,520 --> 00:21:23,840
the vendors that you can enable so the

586
00:21:23,840 --> 00:21:25,679
logs are sent somewhere even if you

587
00:21:25,679 --> 00:21:29,240
don't have your edr

588
00:21:30,080 --> 00:21:33,200
um infrastructure as a service um i

589
00:21:33,200 --> 00:21:35,440
think again default logging is none so

590
00:21:35,440 --> 00:21:36,720
you need to re

591
00:21:36,720 --> 00:21:39,520
redo what you have on your premise

592
00:21:39,520 --> 00:21:42,559
uh network logging default off so if you

593
00:21:42,559 --> 00:21:45,440
want to capture any network flows you

594
00:21:45,440 --> 00:21:48,000
need to enable it but wait some of the

595
00:21:48,000 --> 00:21:51,039
vendors they sample it and they tell you

596
00:21:51,039 --> 00:21:53,360
at best we're going to get you one other

597
00:21:53,360 --> 00:21:54,880
10 package and that's the best case

598
00:21:54,880 --> 00:21:56,240
scenario

599
00:21:56,240 --> 00:21:58,960
uh cloud native log agents exist again

600
00:21:58,960 --> 00:22:00,720
this same agents that you have on the

601
00:22:00,720 --> 00:22:03,280
containers you can apply an automated

602
00:22:03,280 --> 00:22:06,000
network log capture is possible if it's

603
00:22:06,000 --> 00:22:08,960
too much again using event horizon

604
00:22:08,960 --> 00:22:10,880
events bridge and

605
00:22:10,880 --> 00:22:12,320
cloud cloudwatch

606
00:22:12,320 --> 00:22:14,320
you can automate these things

607
00:22:14,320 --> 00:22:18,080
so although it looks grim by default we

608
00:22:18,080 --> 00:22:21,679
have opportunities to actually

609
00:22:21,679 --> 00:22:23,520
take on challenges that are almost

610
00:22:23,520 --> 00:22:26,480
impossible to solve in on-prem quite

611
00:22:26,480 --> 00:22:29,520
easily solvable in cloud

612
00:22:29,520 --> 00:22:31,440
all right let's talk about some

613
00:22:31,440 --> 00:22:33,280
readiness strategies

614
00:22:33,280 --> 00:22:35,760
so if you're a responder in the room

615
00:22:35,760 --> 00:22:38,400
this is what i recommend you do to get

616
00:22:38,400 --> 00:22:40,400
ready for a cloud incident

617
00:22:40,400 --> 00:22:42,400
first of all establish an incident

618
00:22:42,400 --> 00:22:44,240
response cloud account do not

619
00:22:44,240 --> 00:22:46,000
investigate the incident on the

620
00:22:46,000 --> 00:22:48,720
compromised cloud account itself

621
00:22:48,720 --> 00:22:51,120
so have a uh

622
00:22:51,120 --> 00:22:53,120
we call it outbound

623
00:22:53,120 --> 00:22:55,360
no what do we call it

624
00:22:55,360 --> 00:22:56,799
excitement got the best of me i'll

625
00:22:56,799 --> 00:23:00,400
remember that later and cry about it but

626
00:23:00,400 --> 00:23:02,880
what i mean what what we're trying to do

627
00:23:02,880 --> 00:23:05,840
here is keep the account outside of the

628
00:23:05,840 --> 00:23:07,120
traductors

629
00:23:07,120 --> 00:23:09,919
reach focus on aws and azure

630
00:23:09,919 --> 00:23:11,120
i would say right now because they are

631
00:23:11,120 --> 00:23:14,240
more prominent gcp is the grow fastest

632
00:23:14,240 --> 00:23:16,480
growing cloud but i think

633
00:23:16,480 --> 00:23:18,880
we we're still seeing incidents more

634
00:23:18,880 --> 00:23:21,840
prevalent in aws and azure the second

635
00:23:21,840 --> 00:23:24,559
thing is that build an ir analysis

636
00:23:24,559 --> 00:23:29,280
environment so there is few options here

637
00:23:29,280 --> 00:23:30,559
consider

638
00:23:30,559 --> 00:23:32,799
considering infrastructure as a service

639
00:23:32,799 --> 00:23:34,640
first which is you know your virtual

640
00:23:34,640 --> 00:23:38,320
machines ec2 you can easily do

641
00:23:38,320 --> 00:23:40,320
build templates such as like launch

642
00:23:40,320 --> 00:23:42,400
templates i think it's called an ec2

643
00:23:42,400 --> 00:23:44,799
just build an ec2 vm that you can use

644
00:23:44,799 --> 00:23:46,880
with your tools and you can create a

645
00:23:46,880 --> 00:23:48,720
template out of it and then multiple

646
00:23:48,720 --> 00:23:51,200
people cannot reuse this if you have

647
00:23:51,200 --> 00:23:52,880
developers in your team who are

648
00:23:52,880 --> 00:23:55,440
interested like we had you can also

649
00:23:55,440 --> 00:23:57,440
write dream dreamer ansible and

650
00:23:57,440 --> 00:23:58,720
terraformer which is called as

651
00:23:58,720 --> 00:24:00,960
infrastructure that on demand you can

652
00:24:00,960 --> 00:24:02,640
deploy this but that's the next level

653
00:24:02,640 --> 00:24:05,039
right build templates is super easy to

654
00:24:05,039 --> 00:24:06,880
do fun like you know if you have not

655
00:24:06,880 --> 00:24:10,799
dealt with cloud yet it's fun exercise

656
00:24:10,799 --> 00:24:13,279
so when it comes to cloud ir analysis

657
00:24:13,279 --> 00:24:14,159
also

658
00:24:14,159 --> 00:24:16,000
uh there is two parts to it right

659
00:24:16,000 --> 00:24:18,559
artifact analysis which is why we need

660
00:24:18,559 --> 00:24:20,159
this infrastructure

661
00:24:20,159 --> 00:24:22,000
to attach disk images because it's

662
00:24:22,000 --> 00:24:24,000
expensive to take

663
00:24:24,000 --> 00:24:26,720
disks a lot of data outside of the cloud

664
00:24:26,720 --> 00:24:28,480
so this is why we're trying to look to

665
00:24:28,480 --> 00:24:31,200
analyze it within it right shared

666
00:24:31,200 --> 00:24:32,480
snapshots

667
00:24:32,480 --> 00:24:35,039
so artifact parsing we're trying to do

668
00:24:35,039 --> 00:24:37,440
it in the cloud when it comes to json

669
00:24:37,440 --> 00:24:38,799
ingestion so we're talking about

670
00:24:38,799 --> 00:24:42,240
cloudtrail cloudwatch logs or s3

671
00:24:42,240 --> 00:24:45,039
s3 logs you can do this locally using

672
00:24:45,039 --> 00:24:47,360
your existing tooling they're mostly in

673
00:24:47,360 --> 00:24:49,440
json format so you don't need to

674
00:24:49,440 --> 00:24:51,120
immediately consider that when you're

675
00:24:51,120 --> 00:24:54,400
building that infrastructure

676
00:24:54,400 --> 00:24:57,360
so this is the third part right i think

677
00:24:57,360 --> 00:24:59,440
this is an area that we need to all

678
00:24:59,440 --> 00:25:01,520
start thinking about i don't think this

679
00:25:01,520 --> 00:25:04,240
is valid yet but building tooling for

680
00:25:04,240 --> 00:25:06,880
active monitoring right we're very good

681
00:25:06,880 --> 00:25:09,600
at investigating post compromises but

682
00:25:09,600 --> 00:25:11,600
how are we going to investigate a live

683
00:25:11,600 --> 00:25:13,200
attacker in the cloud

684
00:25:13,200 --> 00:25:15,120
how do we keep up to them because

685
00:25:15,120 --> 00:25:17,520
downloading the logs and monitoring is

686
00:25:17,520 --> 00:25:19,600
not enough and not every client is going

687
00:25:19,600 --> 00:25:22,480
to have the budget to deploy uh sentinel

688
00:25:22,480 --> 00:25:24,720
or the cloud vendor

689
00:25:24,720 --> 00:25:29,120
sim products right so i think sans five

690
00:25:29,120 --> 00:25:31,200
five or nine they have fifth scripts

691
00:25:31,200 --> 00:25:34,240
written very simple which is just python

692
00:25:34,240 --> 00:25:37,039
scripts uh that downloads the log every

693
00:25:37,039 --> 00:25:39,679
x minutes and then you ingest it to your

694
00:25:39,679 --> 00:25:41,919
elk stack or whatever sim you're

695
00:25:41,919 --> 00:25:44,000
interested in

696
00:25:44,000 --> 00:25:46,000
i recommend learning how to redirect

697
00:25:46,000 --> 00:25:48,240
logs on different cloud vendors so each

698
00:25:48,240 --> 00:25:49,440
of them

699
00:25:49,440 --> 00:25:51,679
has

700
00:25:52,000 --> 00:25:54,960
different options but almost all of them

701
00:25:54,960 --> 00:25:58,080
has option to dump the logs into a

702
00:25:58,080 --> 00:26:00,559
bucket storage pocket or a s3

703
00:26:00,559 --> 00:26:02,880
so that's definitely the easiest way and

704
00:26:02,880 --> 00:26:04,400
that's the way

705
00:26:04,400 --> 00:26:05,760
sans had been

706
00:26:05,760 --> 00:26:06,960
doing it

707
00:26:06,960 --> 00:26:09,039
or and then you push the logs to a soft

708
00:26:09,039 --> 00:26:10,720
alt for example because they already

709
00:26:10,720 --> 00:26:12,320
have the ingestion

710
00:26:12,320 --> 00:26:13,679
and configs

711
00:26:13,679 --> 00:26:15,279
figured out

712
00:26:15,279 --> 00:26:17,200
if you look at the readiness strategies

713
00:26:17,200 --> 00:26:20,240
for businesses i beg you

714
00:26:20,240 --> 00:26:22,480
i beg you with all my heart

715
00:26:22,480 --> 00:26:24,720
please centralize your logging

716
00:26:24,720 --> 00:26:26,960
you don't need detection but at least

717
00:26:26,960 --> 00:26:29,360
centralize it because the cloud provider

718
00:26:29,360 --> 00:26:31,039
log dashboards are not built for

719
00:26:31,039 --> 00:26:33,039
security investigation

720
00:26:33,039 --> 00:26:34,559
i don't know if any of you have done

721
00:26:34,559 --> 00:26:38,559
microsoft 365 investigations using their

722
00:26:38,559 --> 00:26:40,720
their search functionality or scripts

723
00:26:40,720 --> 00:26:42,159
you will realize

724
00:26:42,159 --> 00:26:44,400
you cannot do any threat hunts or you

725
00:26:44,400 --> 00:26:46,559
know look at data in long ranges you

726
00:26:46,559 --> 00:26:49,679
have to ingest it into something

727
00:26:49,679 --> 00:26:51,760
default logging is not enough

728
00:26:51,760 --> 00:26:53,760
some examples right we talked about it

729
00:26:53,760 --> 00:26:55,360
s3 logs

730
00:26:55,360 --> 00:26:58,080
not enabled system logs not collected

731
00:26:58,080 --> 00:26:59,760
application logs such as you know

732
00:26:59,760 --> 00:27:01,919
jenkins not collected by default

733
00:27:01,919 --> 00:27:04,080
container api logs disabled by default

734
00:27:04,080 --> 00:27:07,279
netflow disabled all you have on cloud

735
00:27:07,279 --> 00:27:08,880
is your

736
00:27:08,880 --> 00:27:10,480
console logs

737
00:27:10,480 --> 00:27:11,840
that's it

738
00:27:11,840 --> 00:27:13,679
it's it's not going to be enough and

739
00:27:13,679 --> 00:27:16,080
we've seen in this incident we like we

740
00:27:16,080 --> 00:27:18,159
were lucky that there was uh

741
00:27:18,159 --> 00:27:20,240
it was in the cloud and we could stand

742
00:27:20,240 --> 00:27:22,720
it up and perform a mini you know pen

743
00:27:22,720 --> 00:27:23,600
test

744
00:27:23,600 --> 00:27:25,760
get creative but this is not always

745
00:27:25,760 --> 00:27:27,600
possible

746
00:27:27,600 --> 00:27:31,840
uh tags tiger map assets uh don't make

747
00:27:31,840 --> 00:27:33,440
your ir vendor

748
00:27:33,440 --> 00:27:35,360
reverse engineer your infrastructure

749
00:27:35,360 --> 00:27:36,799
during an incident

750
00:27:36,799 --> 00:27:39,200
because that's seven snapshots

751
00:27:39,200 --> 00:27:41,440
we had to pull two resources to cycle

752
00:27:41,440 --> 00:27:43,919
through them

753
00:27:44,159 --> 00:27:47,600
establish responder accounts so

754
00:27:47,600 --> 00:27:50,480
this is particularly for your vendors to

755
00:27:50,480 --> 00:27:52,640
be able to get access to your logs it's

756
00:27:52,640 --> 00:27:54,640
fun and nice to talk to our engineers

757
00:27:54,640 --> 00:27:57,039
and tell them hey can i get the logs but

758
00:27:57,039 --> 00:28:00,000
then you most often like 50 of the log

759
00:28:00,000 --> 00:28:02,880
time the logs do not cover the full

760
00:28:02,880 --> 00:28:05,600
full scope right even if the people are

761
00:28:05,600 --> 00:28:07,600
your own people but if you have an

762
00:28:07,600 --> 00:28:10,240
account that has limited

763
00:28:10,240 --> 00:28:11,120
list

764
00:28:11,120 --> 00:28:14,640
uh describe or read the log

765
00:28:14,640 --> 00:28:17,200
type of privileges limited to the for

766
00:28:17,200 --> 00:28:19,200
example s3 bucket that holds the cloud

767
00:28:19,200 --> 00:28:20,480
trail logs

768
00:28:20,480 --> 00:28:23,200
then they can easily pull that down you

769
00:28:23,200 --> 00:28:26,080
don't need to take any actions

770
00:28:26,080 --> 00:28:27,120
and

771
00:28:27,120 --> 00:28:28,399
with that

772
00:28:28,399 --> 00:28:30,880
i believe i have

773
00:28:30,880 --> 00:28:33,760
come to end with my presentation i hope

774
00:28:33,760 --> 00:28:35,600
you guys enjoyed that

775
00:28:35,600 --> 00:28:37,919
um

776
00:28:37,919 --> 00:28:39,919
it is the beginning of questions

777
00:28:39,919 --> 00:28:41,520
i am more than happy to answer some

778
00:28:41,520 --> 00:28:44,399
questions we're like right up

779
00:28:44,399 --> 00:28:46,960
you have managed your time remarkably

780
00:28:46,960 --> 00:28:48,159
well can i endorse you for time

781
00:28:48,159 --> 00:28:49,440
management on linkedin that forward

782
00:28:49,440 --> 00:28:51,279
please do that's great i really respect

783
00:28:51,279 --> 00:28:52,960
that so

784
00:28:52,960 --> 00:28:55,120
great talk great speaker i'm sure we got

785
00:28:55,120 --> 00:28:57,279
some questions out here

786
00:28:57,279 --> 00:28:58,399
and remember

787
00:28:58,399 --> 00:28:59,919
questions are

788
00:28:59,919 --> 00:29:01,679
redeemable for belgian prolines

789
00:29:01,679 --> 00:29:04,960
afterward too oh

790
00:29:05,360 --> 00:29:09,520
hello a great talk i am a big fan of cat

791
00:29:09,520 --> 00:29:11,919
cat scale and you're using it a lot i

792
00:29:11,919 --> 00:29:14,080
wanted to ask in this scenario

793
00:29:14,080 --> 00:29:17,679
um if this customer had like proper

794
00:29:17,679 --> 00:29:20,159
um im role

795
00:29:20,159 --> 00:29:22,880
uh that does not allow

796
00:29:22,880 --> 00:29:23,760
uh

797
00:29:23,760 --> 00:29:26,000
you know the actor to

798
00:29:26,000 --> 00:29:28,080
open the s3 bucket and expose everything

799
00:29:28,080 --> 00:29:29,600
would that help

800
00:29:29,600 --> 00:29:31,919
so in this case the thread actor

801
00:29:31,919 --> 00:29:34,240
actually managed to get majority of the

802
00:29:34,240 --> 00:29:36,240
credentials from jenkins

803
00:29:36,240 --> 00:29:38,720
but what we would have done in another

804
00:29:38,720 --> 00:29:41,919
scenario is that produce alerts

805
00:29:41,919 --> 00:29:44,720
like an account getting a lot of denies

806
00:29:44,720 --> 00:29:46,159
is a very good

807
00:29:46,159 --> 00:29:47,520
sign right

808
00:29:47,520 --> 00:29:49,440
you suddenly you have a spike of denies

809
00:29:49,440 --> 00:29:51,520
in your network if you're monitoring it

810
00:29:51,520 --> 00:29:53,200
in this instance client was not looking

811
00:29:53,200 --> 00:29:55,039
even at looking at the cloud trail log

812
00:29:55,039 --> 00:29:57,120
so they wouldn't see it

813
00:29:57,120 --> 00:29:59,439
thank you

814
00:29:59,520 --> 00:30:02,000
thank you

815
00:30:02,399 --> 00:30:04,640
any more questions

816
00:30:04,640 --> 00:30:06,960
come on now

817
00:30:06,960 --> 00:30:09,200
well if you're excited for

818
00:30:09,200 --> 00:30:11,520
other stuff always happy to chat to you

819
00:30:11,520 --> 00:30:13,679
guys i'll be around today

820
00:30:13,679 --> 00:30:14,480
uh

821
00:30:14,480 --> 00:30:16,880
shooting off later on today but i'm here

822
00:30:16,880 --> 00:30:18,880
till five if you guys want to talk about

823
00:30:18,880 --> 00:30:20,159
this stuff

824
00:30:20,159 --> 00:30:21,600
or tooling

825
00:30:21,600 --> 00:30:24,159
ir infrastructure service design all of

826
00:30:24,159 --> 00:30:27,039
these i'm very happy to talk about

827
00:30:27,039 --> 00:30:30,600
thank you so much

828
00:30:31,160 --> 00:30:34,739
[Applause]

