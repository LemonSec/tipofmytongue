1
00:00:06,320 --> 00:00:08,080
[Music]

2
00:00:08,080 --> 00:00:09,040
so

3
00:00:09,040 --> 00:00:11,120
welcome everybody to the last talk for

4
00:00:11,120 --> 00:00:13,840
today so my name is still matthias

5
00:00:13,840 --> 00:00:16,480
this talk is also tlp white and after

6
00:00:16,480 --> 00:00:18,640
the talk we will have surely a lot of

7
00:00:18,640 --> 00:00:20,400
time since it's the last talk for today

8
00:00:20,400 --> 00:00:22,480
for a q a session so if you have any

9
00:00:22,480 --> 00:00:24,240
questions please line up at the

10
00:00:24,240 --> 00:00:25,760
microphones

11
00:00:25,760 --> 00:00:28,000
as usual in the first app there is a

12
00:00:28,000 --> 00:00:30,560
possibility to

13
00:00:30,560 --> 00:00:31,519
to

14
00:00:31,519 --> 00:00:33,360
rate the talk so

15
00:00:33,360 --> 00:00:35,040
if you enjoy the talk please give the

16
00:00:35,040 --> 00:00:37,040
speakers feedback afterwards if you have

17
00:00:37,040 --> 00:00:40,000
any devices mobile phones whatever that

18
00:00:40,000 --> 00:00:42,480
can make noises please be so kind and

19
00:00:42,480 --> 00:00:46,000
turn them off so and uh

20
00:00:46,000 --> 00:00:47,600
it's now an easy introduction for me

21
00:00:47,600 --> 00:00:49,440
because the two speakers have the same

22
00:00:49,440 --> 00:00:52,079
name so these are both pebbles they are

23
00:00:52,079 --> 00:00:54,640
working with the the polished cert and

24
00:00:54,640 --> 00:00:56,320
the thing they are gonna present you

25
00:00:56,320 --> 00:00:59,280
today a central system for metal malware

26
00:00:59,280 --> 00:01:01,840
analysis it's an open source platform

27
00:01:01,840 --> 00:01:04,879
it's called mwdb and now give them a

28
00:01:04,879 --> 00:01:06,799
warm round of applause and enjoy the

29
00:01:06,799 --> 00:01:09,799
talk

30
00:01:12,159 --> 00:01:14,479
uh thanks for introducing us um

31
00:01:14,479 --> 00:01:17,280
and thanks uh for all of you to coming

32
00:01:17,280 --> 00:01:20,080
to our talk it's uh it's been a long day

33
00:01:20,080 --> 00:01:21,200
uh

34
00:01:21,200 --> 00:01:22,479
for all of us

35
00:01:22,479 --> 00:01:23,759
um

36
00:01:23,759 --> 00:01:25,920
yeah we we came here to talk about uh

37
00:01:25,920 --> 00:01:29,119
our open source tools uh open source is

38
00:01:29,119 --> 00:01:31,680
uh of a key in in what we are going to

39
00:01:31,680 --> 00:01:33,360
present because

40
00:01:33,360 --> 00:01:35,360
we really try to

41
00:01:35,360 --> 00:01:38,320
put uh majority of the code uh

42
00:01:38,320 --> 00:01:40,720
out there on github for our others to

43
00:01:40,720 --> 00:01:42,000
use

44
00:01:42,000 --> 00:01:43,920
um

45
00:01:43,920 --> 00:01:44,720
so

46
00:01:44,720 --> 00:01:46,799
i will start with a quick uh

47
00:01:46,799 --> 00:01:48,960
introduction of uh you know

48
00:01:48,960 --> 00:01:52,159
our and where we came from uh

49
00:01:52,159 --> 00:01:55,360
why why we started building uh the kind

50
00:01:55,360 --> 00:01:57,920
of tools in in in this particular way

51
00:01:57,920 --> 00:01:59,040
also

52
00:01:59,040 --> 00:02:00,960
um so a very quick introduction of the

53
00:02:00,960 --> 00:02:04,719
team uh cert pl is a national uh

54
00:02:04,719 --> 00:02:07,200
national level team as the name suggests

55
00:02:07,200 --> 00:02:09,679
for poland

56
00:02:09,679 --> 00:02:11,760
we have a pretty long history

57
00:02:11,760 --> 00:02:15,599
which we'll not cover in this talk

58
00:02:15,599 --> 00:02:17,360
we are also part of a

59
00:02:17,360 --> 00:02:19,440
research institute called nask

60
00:02:19,440 --> 00:02:22,720
that does multiple things it's also

61
00:02:22,720 --> 00:02:24,720
registry for dot pl

62
00:02:24,720 --> 00:02:25,840
uh

63
00:02:25,840 --> 00:02:27,840
but that is also the kind of the risk

64
00:02:27,840 --> 00:02:28,800
kind of

65
00:02:28,800 --> 00:02:30,560
a research

66
00:02:30,560 --> 00:02:32,720
environment that that our team is

67
00:02:32,720 --> 00:02:34,640
located in that

68
00:02:34,640 --> 00:02:36,879
has some impact on how we

69
00:02:36,879 --> 00:02:39,120
approach things

70
00:02:39,120 --> 00:02:40,720
um

71
00:02:40,720 --> 00:02:43,680
what is important uh for for uh for what

72
00:02:43,680 --> 00:02:46,319
we do that uh you could say that we are

73
00:02:46,319 --> 00:02:48,480
in a threat intelligence business and

74
00:02:48,480 --> 00:02:49,440
have been

75
00:02:49,440 --> 00:02:51,599
well for for many many years

76
00:02:51,599 --> 00:02:55,599
um being a national national level team

77
00:02:55,599 --> 00:02:58,319
means that uh to some degree we need to

78
00:02:58,319 --> 00:03:00,080
uh take care of

79
00:03:00,080 --> 00:03:02,239
various threats voice incidents that can

80
00:03:02,239 --> 00:03:03,360
affect

81
00:03:03,360 --> 00:03:05,840
either regular citizens uh small

82
00:03:05,840 --> 00:03:09,519
enterprise or or big critical companies

83
00:03:09,519 --> 00:03:11,920
in poland

84
00:03:11,920 --> 00:03:13,280
and

85
00:03:13,280 --> 00:03:14,959
well nowadays as

86
00:03:14,959 --> 00:03:16,480
as as we know

87
00:03:16,480 --> 00:03:18,560
fishing in terms of

88
00:03:18,560 --> 00:03:21,519
quantity of incidents uh is probably the

89
00:03:21,519 --> 00:03:24,239
dominating the the landscape

90
00:03:24,239 --> 00:03:26,400
but malware was always you know

91
00:03:26,400 --> 00:03:29,040
important uh threat uh important uh

92
00:03:29,040 --> 00:03:31,599
vector in in in attacks

93
00:03:31,599 --> 00:03:34,319
a tool used by threat actors uh and

94
00:03:34,319 --> 00:03:36,480
still uh like if we look at our

95
00:03:36,480 --> 00:03:38,400
statistics is the second

96
00:03:38,400 --> 00:03:40,319
uh biggest uh

97
00:03:40,319 --> 00:03:43,040
biggest source of of incidents in in our

98
00:03:43,040 --> 00:03:44,720
constituency

99
00:03:44,720 --> 00:03:45,760
and

100
00:03:45,760 --> 00:03:49,120
so what we want to do uh is to

101
00:03:49,120 --> 00:03:50,720
make sure that whenever there's a new

102
00:03:50,720 --> 00:03:52,560
malware campaign in poland

103
00:03:52,560 --> 00:03:54,879
uh we are able to detect this as soon as

104
00:03:54,879 --> 00:03:56,080
possible

105
00:03:56,080 --> 00:03:57,280
ideally

106
00:03:57,280 --> 00:04:01,519
before actually victims get infected

107
00:04:01,519 --> 00:04:02,959
then we want to

108
00:04:02,959 --> 00:04:06,080
whenever possible to warn uh victims uh

109
00:04:06,080 --> 00:04:08,480
or it might be affected institution that

110
00:04:08,480 --> 00:04:11,200
is targeted especially for for financial

111
00:04:11,200 --> 00:04:12,560
institutions

112
00:04:12,560 --> 00:04:15,599
or uh the the victims that were

113
00:04:15,599 --> 00:04:18,478
were infected uh and then

114
00:04:18,478 --> 00:04:22,240
if we can mitigate uh those campaigns uh

115
00:04:22,240 --> 00:04:24,080
either by uh taking down the

116
00:04:24,080 --> 00:04:28,080
infrastructure uh supplying iocs for for

117
00:04:28,080 --> 00:04:30,479
companies to block

118
00:04:30,479 --> 00:04:34,560
things on their endpoints and so on

119
00:04:34,639 --> 00:04:36,160
and

120
00:04:36,160 --> 00:04:37,040
if we

121
00:04:37,040 --> 00:04:40,000
take a look at a bit of history how how

122
00:04:40,000 --> 00:04:41,440
our

123
00:04:41,440 --> 00:04:44,160
our tooling our automation developed

124
00:04:44,160 --> 00:04:45,840
um in

125
00:04:45,840 --> 00:04:47,600
the early days uh

126
00:04:47,600 --> 00:04:49,840
we well we always had some out level of

127
00:04:49,840 --> 00:04:53,280
automation but it was mostly um case by

128
00:04:53,280 --> 00:04:54,320
case

129
00:04:54,320 --> 00:04:56,560
for particular malware families we had

130
00:04:56,560 --> 00:04:59,440
some uh truckers or whatever

131
00:04:59,440 --> 00:05:01,199
that

132
00:05:01,199 --> 00:05:02,080
was

133
00:05:02,080 --> 00:05:04,880
target well suited for that particular

134
00:05:04,880 --> 00:05:06,960
family

135
00:05:06,960 --> 00:05:09,440
and when we had some other incidents

136
00:05:09,440 --> 00:05:11,759
other campaign we

137
00:05:11,759 --> 00:05:13,039
and it was

138
00:05:13,039 --> 00:05:14,960
suitable for automation we developed

139
00:05:14,960 --> 00:05:17,360
some other scripts typically

140
00:05:17,360 --> 00:05:18,720
um

141
00:05:18,720 --> 00:05:20,400
however that

142
00:05:20,400 --> 00:05:23,199
changed or or that the environment we

143
00:05:23,199 --> 00:05:26,080
operate in changed a bit

144
00:05:26,080 --> 00:05:26,880
in

145
00:05:26,880 --> 00:05:28,639
let's say around

146
00:05:28,639 --> 00:05:30,520
early

147
00:05:30,520 --> 00:05:32,160
2010s

148
00:05:32,160 --> 00:05:32,960
so

149
00:05:32,960 --> 00:05:34,560
the decade ago

150
00:05:34,560 --> 00:05:36,639
give or take it i'm not being very

151
00:05:36,639 --> 00:05:39,280
precise here uh

152
00:05:39,280 --> 00:05:41,600
where there is a rise of

153
00:05:41,600 --> 00:05:44,080
a commodity malware especially bankers

154
00:05:44,080 --> 00:05:46,720
in our case where you could see that the

155
00:05:46,720 --> 00:05:49,919
malware actually can get used by people

156
00:05:49,919 --> 00:05:51,680
with a little technical knowledge the

157
00:05:51,680 --> 00:05:54,320
criminals are just buying uh

158
00:05:54,320 --> 00:05:55,840
builders on the market they can just

159
00:05:55,840 --> 00:05:57,120
supply

160
00:05:57,120 --> 00:06:00,000
configuration that they provide and they

161
00:06:00,000 --> 00:06:01,199
don't have they don't need to write

162
00:06:01,199 --> 00:06:03,440
malware they just buy it off of the

163
00:06:03,440 --> 00:06:05,280
shelf

164
00:06:05,280 --> 00:06:07,840
and that means that we got uh campaigns

165
00:06:07,840 --> 00:06:10,400
that that with with the same uh family

166
00:06:10,400 --> 00:06:11,120
with

167
00:06:11,120 --> 00:06:12,800
different configurations

168
00:06:12,800 --> 00:06:16,160
uh so we get a lot of samples uh but we

169
00:06:16,160 --> 00:06:18,479
then we could actually the automation

170
00:06:18,479 --> 00:06:21,199
made even more more different for us in

171
00:06:21,199 --> 00:06:23,759
terms of our ability to analyze those

172
00:06:23,759 --> 00:06:24,880
campaigns

173
00:06:24,880 --> 00:06:26,400
um

174
00:06:26,400 --> 00:06:28,000
so

175
00:06:28,000 --> 00:06:33,280
in let's say around around mid 2010s

176
00:06:33,280 --> 00:06:35,120
we had our first kind of generic

177
00:06:35,120 --> 00:06:37,199
approach where uh where there was

178
00:06:37,199 --> 00:06:39,600
actually uh our tools become

179
00:06:39,600 --> 00:06:42,000
capable of analyzing multiple kinds of

180
00:06:42,000 --> 00:06:45,120
malware and in some consistent uh manner

181
00:06:45,120 --> 00:06:48,160
that was a beginning of some common

182
00:06:48,160 --> 00:06:50,800
framework for automation on our team

183
00:06:50,800 --> 00:06:54,080
a couple of years later we

184
00:06:54,080 --> 00:06:56,720
we kind of our maturity uh as a team

185
00:06:56,720 --> 00:06:59,120
increased so we we are able to track

186
00:06:59,120 --> 00:07:01,280
multiple botnets like almost real time

187
00:07:01,280 --> 00:07:04,960
by uh by by looking at that at the

188
00:07:04,960 --> 00:07:08,160
command control infrastructure

189
00:07:08,160 --> 00:07:09,759
and

190
00:07:09,759 --> 00:07:13,599
recently in recent years we we kind of

191
00:07:13,599 --> 00:07:16,160
put quite a significant effort into

192
00:07:16,160 --> 00:07:18,960
releasing many of those tools as like a

193
00:07:18,960 --> 00:07:22,319
proper supported open source projects

194
00:07:22,319 --> 00:07:23,360
that

195
00:07:23,360 --> 00:07:26,160
you can also use

196
00:07:26,160 --> 00:07:27,039
and

197
00:07:27,039 --> 00:07:29,360
if we look at the what the malware lab

198
00:07:29,360 --> 00:07:31,039
is

199
00:07:31,039 --> 00:07:32,880
it's uh

200
00:07:32,880 --> 00:07:36,080
in how we define it it has three three

201
00:07:36,080 --> 00:07:39,280
three main uh roles one is collection of

202
00:07:39,280 --> 00:07:41,919
of data of samples of

203
00:07:41,919 --> 00:07:43,599
technical threat intelligence related to

204
00:07:43,599 --> 00:07:46,000
malware iocs and so on

205
00:07:46,000 --> 00:07:49,120
and then it should provide a way to

206
00:07:49,120 --> 00:07:50,479
integrate

207
00:07:50,479 --> 00:07:53,280
family specific analysis tools so

208
00:07:53,280 --> 00:07:55,280
specific tools that can analyze specific

209
00:07:55,280 --> 00:07:57,199
molar family

210
00:07:57,199 --> 00:07:59,440
that we can plug into

211
00:07:59,440 --> 00:08:02,160
some common framework and ability to

212
00:08:02,160 --> 00:08:03,759
share this information some export this

213
00:08:03,759 --> 00:08:06,080
information and share it with the with

214
00:08:06,080 --> 00:08:10,000
our partners for of our constituents

215
00:08:10,840 --> 00:08:12,080
and uh

216
00:08:12,080 --> 00:08:14,160
we are going to talk about mostly open

217
00:08:14,160 --> 00:08:15,840
source projects you can find them on our

218
00:08:15,840 --> 00:08:18,479
github uh

219
00:08:18,479 --> 00:08:21,759
and let's start with mwdb core which is

220
00:08:21,759 --> 00:08:22,960
the

221
00:08:22,960 --> 00:08:26,000
core of all the things

222
00:08:26,000 --> 00:08:28,720
so uh hello everyone

223
00:08:28,720 --> 00:08:32,080
okay so we start uh to uh

224
00:08:32,080 --> 00:08:33,360
make a brief

225
00:08:33,360 --> 00:08:35,919
introduction to the projects it will be

226
00:08:35,919 --> 00:08:38,159
built on on the canvas of

227
00:08:38,159 --> 00:08:39,919
these three points that were shown

228
00:08:39,919 --> 00:08:40,958
before

229
00:08:40,958 --> 00:08:44,159
uh collecting analyzing and sharing the

230
00:08:44,159 --> 00:08:45,680
data

231
00:08:45,680 --> 00:08:47,760
so the first thing is

232
00:08:47,760 --> 00:08:48,880
we need to

233
00:08:48,880 --> 00:08:50,640
collect somewhere all of these data we

234
00:08:50,640 --> 00:08:52,959
want to analyze and that's why we made

235
00:08:52,959 --> 00:08:55,200
mwb co

236
00:08:55,200 --> 00:08:57,839
so the nldb core is kind of

237
00:08:57,839 --> 00:09:00,080
the central component of our

238
00:09:00,080 --> 00:09:02,320
laboratory design

239
00:09:02,320 --> 00:09:04,160
it is meant to be repository for

240
00:09:04,160 --> 00:09:07,120
organizing all the artifacts that

241
00:09:07,120 --> 00:09:10,000
we are working on as a malware analyst

242
00:09:10,000 --> 00:09:12,240
and as we have a central point where we

243
00:09:12,240 --> 00:09:14,399
are collecting all of the data we can

244
00:09:14,399 --> 00:09:16,320
also use that as an interface for

245
00:09:16,320 --> 00:09:18,880
example interface to to a whole analyzes

246
00:09:18,880 --> 00:09:21,920
pipeline because all data are aggregated

247
00:09:21,920 --> 00:09:23,920
in single point

248
00:09:23,920 --> 00:09:27,920
we can use that use that to to

249
00:09:27,920 --> 00:09:29,040
explore

250
00:09:29,040 --> 00:09:30,400
for some

251
00:09:30,400 --> 00:09:32,080
[Music]

252
00:09:32,080 --> 00:09:34,959
correlations and so

253
00:09:34,959 --> 00:09:36,040
uh on

254
00:09:36,800 --> 00:09:37,680
that

255
00:09:37,680 --> 00:09:40,239
you you can

256
00:09:40,399 --> 00:09:41,680
look at that

257
00:09:41,680 --> 00:09:44,479
component as

258
00:09:45,680 --> 00:09:48,360
like for a database

259
00:09:48,360 --> 00:09:49,440
[Music]

260
00:09:49,440 --> 00:09:52,800
and but it's not it's not it should not

261
00:09:52,800 --> 00:09:53,680
be

262
00:09:53,680 --> 00:09:56,000
considered as a

263
00:09:56,000 --> 00:09:59,839
general uh malware threat information

264
00:09:59,839 --> 00:10:01,600
uh sharing system

265
00:10:01,600 --> 00:10:04,160
the common question at this point is how

266
00:10:04,160 --> 00:10:05,200
is it

267
00:10:05,200 --> 00:10:07,519
alike or different from misp actually

268
00:10:07,519 --> 00:10:09,360
it's a completely different kind of

269
00:10:09,360 --> 00:10:11,600
thing because it's more focused on the

270
00:10:11,600 --> 00:10:14,640
malware artifacts and this kind of meant

271
00:10:14,640 --> 00:10:15,440
to

272
00:10:15,440 --> 00:10:18,560
be used by malware analysts

273
00:10:18,560 --> 00:10:19,600
so

274
00:10:19,600 --> 00:10:20,880
the main

275
00:10:20,880 --> 00:10:23,120
data model design is strongly focused on

276
00:10:23,120 --> 00:10:25,200
the on these artifacts and they are

277
00:10:25,200 --> 00:10:27,360
divided into three types

278
00:10:27,360 --> 00:10:32,360
files configurations and blobs

279
00:10:33,120 --> 00:10:35,760
and the first thing uh that are

280
00:10:35,760 --> 00:10:37,760
pretty common are files

281
00:10:37,760 --> 00:10:40,800
uh but uh files are meant to

282
00:10:40,800 --> 00:10:41,519
be

283
00:10:41,519 --> 00:10:42,880
the whole chain

284
00:10:42,880 --> 00:10:46,959
of binary data that can be used

285
00:10:46,959 --> 00:10:48,800
by the analyst

286
00:10:48,800 --> 00:10:51,360
so from from the

287
00:10:51,360 --> 00:10:52,959
infected archives

288
00:10:52,959 --> 00:10:56,560
to documents with macros droppers

289
00:10:56,560 --> 00:10:58,480
to the exact

290
00:10:58,480 --> 00:11:00,959
the dxe files with the with the with the

291
00:11:00,959 --> 00:11:01,920
malware

292
00:11:01,920 --> 00:11:04,640
uh finally uh we can also put some some

293
00:11:04,640 --> 00:11:07,920
memory dumps from our sandbox

294
00:11:07,920 --> 00:11:10,079
and uh

295
00:11:10,079 --> 00:11:12,240
the second thing are configurations as

296
00:11:12,240 --> 00:11:14,399
part we said before

297
00:11:14,399 --> 00:11:15,839
malware is

298
00:11:15,839 --> 00:11:17,680
highly reused

299
00:11:17,680 --> 00:11:18,720
it's

300
00:11:18,720 --> 00:11:20,800
bought by by the criminals

301
00:11:20,800 --> 00:11:21,519
in

302
00:11:21,519 --> 00:11:23,600
a kind of generic form

303
00:11:23,600 --> 00:11:25,760
so it needs to be parametrized and we

304
00:11:25,760 --> 00:11:28,240
can parametrize the model operations in

305
00:11:28,240 --> 00:11:29,519
two ways

306
00:11:29,519 --> 00:11:31,680
the first way is static

307
00:11:31,680 --> 00:11:33,040
where the

308
00:11:33,040 --> 00:11:34,720
data

309
00:11:34,720 --> 00:11:36,720
crucial for the operation are put in

310
00:11:36,720 --> 00:11:39,040
directly in the binary like for example

311
00:11:39,040 --> 00:11:41,120
encryption keys

312
00:11:41,120 --> 00:11:43,120
cnc addresses

313
00:11:43,120 --> 00:11:45,279
uh botnet version

314
00:11:45,279 --> 00:11:47,360
api version and so on

315
00:11:47,360 --> 00:11:49,600
all of these data that are

316
00:11:49,600 --> 00:11:51,360
somewhere contained in the binary can

317
00:11:51,360 --> 00:11:53,600
can be extracted into a single structure

318
00:11:53,600 --> 00:11:55,620
that describes the

319
00:11:55,620 --> 00:11:57,360
[Music]

320
00:11:57,360 --> 00:11:59,360
the malware pretty uniquely as it was

321
00:11:59,360 --> 00:12:01,279
configured by the by the criminal by the

322
00:12:01,279 --> 00:12:02,800
actor

323
00:12:02,800 --> 00:12:05,120
other type of configuration is dynamic

324
00:12:05,120 --> 00:12:07,600
configuration

325
00:12:07,600 --> 00:12:08,639
well

326
00:12:08,639 --> 00:12:10,639
it isn't kind of

327
00:12:10,639 --> 00:12:12,880
configuration it's distributable form

328
00:12:12,880 --> 00:12:16,240
it's kind of representation of uh

329
00:12:16,240 --> 00:12:18,240
the data that are coming from the

330
00:12:18,240 --> 00:12:20,480
command and control so for example if we

331
00:12:20,480 --> 00:12:22,240
have some uh

332
00:12:22,240 --> 00:12:23,279
p2p

333
00:12:23,279 --> 00:12:24,720
botnet uh

334
00:12:24,720 --> 00:12:26,399
it can be list of peers

335
00:12:26,399 --> 00:12:30,160
uh there can be commands web injects uh

336
00:12:30,160 --> 00:12:32,959
but what is what is important uh if it's

337
00:12:32,959 --> 00:12:34,399
contained in the

338
00:12:34,399 --> 00:12:36,079
configuration type

339
00:12:36,079 --> 00:12:41,200
uh it means that we are able uh to

340
00:12:41,200 --> 00:12:42,480
uh

341
00:12:42,480 --> 00:12:44,320
label this data

342
00:12:44,320 --> 00:12:47,519
to see their semantics and to put

343
00:12:47,519 --> 00:12:49,839
them in in structured form that can be

344
00:12:49,839 --> 00:12:52,399
useful for further automation and

345
00:12:52,399 --> 00:12:55,120
usually the structure is determined

346
00:12:55,120 --> 00:12:58,560
uh by the author of our

347
00:12:58,560 --> 00:13:00,160
analysis script

348
00:13:00,160 --> 00:13:02,000
that is

349
00:13:02,000 --> 00:13:04,839
extracting this this

350
00:13:04,839 --> 00:13:07,040
configurations so it highly depends on

351
00:13:07,040 --> 00:13:08,880
the malware family there

352
00:13:08,880 --> 00:13:12,320
isn't any standardization

353
00:13:12,720 --> 00:13:14,320
so configurations are

354
00:13:14,320 --> 00:13:16,560
kind of uh

355
00:13:16,560 --> 00:13:18,639
end goal for for malware analysts

356
00:13:18,639 --> 00:13:20,639
because they contain also some

357
00:13:20,639 --> 00:13:24,320
consumable ioc information

358
00:13:24,959 --> 00:13:26,639
so they can be used for different

359
00:13:26,639 --> 00:13:28,880
purposes

360
00:13:28,880 --> 00:13:30,720
and usually these configurations are

361
00:13:30,720 --> 00:13:32,560
coming from

362
00:13:32,560 --> 00:13:34,639
these memory dumps because

363
00:13:34,639 --> 00:13:36,079
malware is usually protected by some

364
00:13:36,079 --> 00:13:38,160
other another layer by

365
00:13:38,160 --> 00:13:39,839
parker protector

366
00:13:39,839 --> 00:13:42,079
and

367
00:13:42,079 --> 00:13:45,440
we have some hybrid approach

368
00:13:45,440 --> 00:13:46,720
firstly we are

369
00:13:46,720 --> 00:13:47,600
doing

370
00:13:47,600 --> 00:13:49,519
analysis in sandbox

371
00:13:49,519 --> 00:13:53,440
and our sandbox is tuned to

372
00:13:55,199 --> 00:13:57,600
damp regions that may contain the

373
00:13:57,600 --> 00:14:00,560
unpacked code the unprotected parts that

374
00:14:00,560 --> 00:14:03,040
may contain the

375
00:14:03,040 --> 00:14:05,120
parts of configuration and parts of code

376
00:14:05,120 --> 00:14:07,360
that are determining the semantics of

377
00:14:07,360 --> 00:14:08,320
this

378
00:14:08,320 --> 00:14:09,920
this data

379
00:14:09,920 --> 00:14:12,399
and if we are able to to dub the

380
00:14:12,399 --> 00:14:14,240
unprotected code

381
00:14:14,240 --> 00:14:16,399
then we are shipping all of these dumps

382
00:14:16,399 --> 00:14:17,120
to

383
00:14:17,120 --> 00:14:19,199
something called configuration extractor

384
00:14:19,199 --> 00:14:21,519
which is a bunch of scripts

385
00:14:21,519 --> 00:14:22,880
designed to

386
00:14:22,880 --> 00:14:25,120
reap the configuration from supported

387
00:14:25,120 --> 00:14:29,240
currently supported malware families

388
00:14:30,240 --> 00:14:32,399
the next thing are blobs

389
00:14:32,399 --> 00:14:34,000
blobs are

390
00:14:34,000 --> 00:14:36,240
text data

391
00:14:36,240 --> 00:14:37,040
which

392
00:14:37,040 --> 00:14:39,519
are nice to have in repository but we

393
00:14:39,519 --> 00:14:42,079
are not so good in

394
00:14:42,079 --> 00:14:44,160
parsing them in making structures out of

395
00:14:44,160 --> 00:14:45,199
it

396
00:14:45,199 --> 00:14:47,279
so for example

397
00:14:47,279 --> 00:14:49,680
if we have some

398
00:14:49,680 --> 00:14:51,839
decrypted strings for example that are

399
00:14:51,839 --> 00:14:53,839
protected by the malware somehow so

400
00:14:53,839 --> 00:14:57,519
there is the caption routine we can

401
00:14:57,519 --> 00:15:00,000
as an early analysis we can make a

402
00:15:00,000 --> 00:15:01,519
script that

403
00:15:01,519 --> 00:15:03,440
reaps all of these decrypted

404
00:15:03,440 --> 00:15:04,240
uh

405
00:15:04,240 --> 00:15:06,480
protected by malware strings

406
00:15:06,480 --> 00:15:08,240
into the text file

407
00:15:08,240 --> 00:15:09,600
and then

408
00:15:09,600 --> 00:15:12,720
we can use

409
00:15:12,720 --> 00:15:15,120
some other approach that will choose the

410
00:15:15,120 --> 00:15:17,120
appropriate strings for for

411
00:15:17,120 --> 00:15:18,800
other operations

412
00:15:18,800 --> 00:15:21,839
the same for web injects the format for

413
00:15:21,839 --> 00:15:23,839
some botnets isn't very stable

414
00:15:23,839 --> 00:15:26,639
and actually we have tried tried to to

415
00:15:26,639 --> 00:15:30,000
pass them at some point but uh

416
00:15:30,000 --> 00:15:32,399
it seems that very often uh they are

417
00:15:32,399 --> 00:15:35,600
much more more useful in its wrong form

418
00:15:35,600 --> 00:15:38,000
so when we are passing something

419
00:15:38,000 --> 00:15:39,440
there is a possibility that we are

420
00:15:39,440 --> 00:15:41,120
losing some information because for

421
00:15:41,120 --> 00:15:42,800
example we don't expect

422
00:15:42,800 --> 00:15:45,279
that information in in the

423
00:15:45,279 --> 00:15:47,600
exact place

424
00:15:47,600 --> 00:15:49,519
and how we are getting the dynamic

425
00:15:49,519 --> 00:15:51,360
information well the static

426
00:15:51,360 --> 00:15:53,279
configuration is kind of

427
00:15:53,279 --> 00:15:54,480
parameters

428
00:15:54,480 --> 00:15:58,160
for bot execution so if we are able to

429
00:15:58,160 --> 00:15:59,600
uh somehow

430
00:15:59,600 --> 00:16:01,199
implement the protocols and the

431
00:16:01,199 --> 00:16:02,639
communication we can use these

432
00:16:02,639 --> 00:16:05,920
parameters to automate automatically

433
00:16:05,920 --> 00:16:07,120
gather the

434
00:16:07,120 --> 00:16:08,399
gathering the

435
00:16:08,399 --> 00:16:11,279
dynamic information and that's something

436
00:16:11,279 --> 00:16:14,399
called amtrak that was described in

437
00:16:14,399 --> 00:16:15,199
some

438
00:16:15,199 --> 00:16:18,959
previous articles and presentations

439
00:16:19,120 --> 00:16:21,199
and all of these things can be connected

440
00:16:21,199 --> 00:16:23,360
to each other so

441
00:16:23,360 --> 00:16:25,680
if we are lucky enough we can have some

442
00:16:25,680 --> 00:16:27,600
nice graph representation a few

443
00:16:27,600 --> 00:16:30,959
architectural graph

444
00:16:30,959 --> 00:16:32,720
so we are able to

445
00:16:32,720 --> 00:16:34,959
to find some connections like for

446
00:16:34,959 --> 00:16:36,560
example samples that are connected to

447
00:16:36,560 --> 00:16:38,399
the configuration are fetched

448
00:16:38,399 --> 00:16:41,120
dynamically and for example they can be

449
00:16:41,120 --> 00:16:45,680
plugins modules or updates that can also

450
00:16:45,680 --> 00:16:48,320
provide another configuration and then

451
00:16:48,320 --> 00:16:49,519
and so on

452
00:16:49,519 --> 00:16:51,680
so we can have a whole

453
00:16:51,680 --> 00:16:53,360
malware infection chain

454
00:16:53,360 --> 00:16:56,000
within our repository

455
00:16:56,000 --> 00:16:56,800
and

456
00:16:56,800 --> 00:16:58,480
also we have lots of

457
00:16:58,480 --> 00:17:00,800
different metadata like tags or

458
00:17:00,800 --> 00:17:02,160
attributes

459
00:17:02,160 --> 00:17:03,759
that are describing the the source of

460
00:17:03,759 --> 00:17:06,640
the samples or or some

461
00:17:06,640 --> 00:17:08,880
text metadata that i related with with

462
00:17:08,880 --> 00:17:10,240
with

463
00:17:10,240 --> 00:17:13,119
that artifact for example we have some

464
00:17:13,119 --> 00:17:14,559
we can have some relations to other

465
00:17:14,559 --> 00:17:15,919
systems

466
00:17:15,919 --> 00:17:18,880
like our instant tracker

467
00:17:18,880 --> 00:17:21,199
well that was about collecting

468
00:17:21,199 --> 00:17:23,679
the second thing is about analyzing

469
00:17:23,679 --> 00:17:24,640
so

470
00:17:24,640 --> 00:17:26,079
analyzing things

471
00:17:26,079 --> 00:17:28,799
was usually done

472
00:17:28,799 --> 00:17:33,440
in set pl via a set of loosely tangles

473
00:17:33,440 --> 00:17:35,600
connected scripts

474
00:17:35,600 --> 00:17:36,640
that were

475
00:17:36,640 --> 00:17:39,280
used for various purposes

476
00:17:39,280 --> 00:17:40,240
and

477
00:17:40,240 --> 00:17:42,880
that network

478
00:17:44,000 --> 00:17:46,000
came to be very complicated at some

479
00:17:46,000 --> 00:17:47,520
point so we

480
00:17:47,520 --> 00:17:49,520
won't be able to to quickly attach

481
00:17:49,520 --> 00:17:51,360
another script because

482
00:17:51,360 --> 00:17:53,280
uh we

483
00:17:53,280 --> 00:17:55,520
needed to analyze the whole

484
00:17:55,520 --> 00:17:57,600
network of connections before we attach

485
00:17:57,600 --> 00:17:59,280
something new

486
00:17:59,280 --> 00:18:01,039
so we also decided to make a framework

487
00:18:01,039 --> 00:18:02,640
for that

488
00:18:02,640 --> 00:18:04,400
called carton

489
00:18:04,400 --> 00:18:06,559
and

490
00:18:06,880 --> 00:18:08,480
the design is

491
00:18:08,480 --> 00:18:09,919
based on

492
00:18:09,919 --> 00:18:12,559
something that we need to do very often

493
00:18:12,559 --> 00:18:15,440
as mobile analysts which is pareto rule

494
00:18:15,440 --> 00:18:17,440
so if you are writing some processing

495
00:18:17,440 --> 00:18:20,960
script uh the the main effect the the

496
00:18:20,960 --> 00:18:23,440
most important effect that is gathering

497
00:18:23,440 --> 00:18:26,000
the data from some artifacts is pretty

498
00:18:26,000 --> 00:18:28,880
easy to

499
00:18:28,880 --> 00:18:31,440
to achieve

500
00:18:31,440 --> 00:18:34,080
because you need to have

501
00:18:34,080 --> 00:18:35,200
do some

502
00:18:35,200 --> 00:18:37,520
malware analysis and

503
00:18:37,520 --> 00:18:39,280
make a script

504
00:18:39,280 --> 00:18:41,120
well

505
00:18:41,120 --> 00:18:43,520
but there are much uh

506
00:18:43,520 --> 00:18:45,760
more challenging things like integrating

507
00:18:45,760 --> 00:18:48,640
that script so it can work on the on the

508
00:18:48,640 --> 00:18:51,200
live feed on the live data

509
00:18:51,200 --> 00:18:52,480
uh

510
00:18:52,480 --> 00:18:54,640
to make some appropriate logging so we

511
00:18:54,640 --> 00:18:55,520
can

512
00:18:55,520 --> 00:18:57,600
debug

513
00:18:57,600 --> 00:19:00,240
the workings of that script after some

514
00:19:00,240 --> 00:19:01,760
time

515
00:19:01,760 --> 00:19:03,280
if it still works for for current

516
00:19:03,280 --> 00:19:04,480
samples

517
00:19:04,480 --> 00:19:06,720
proper error handling so

518
00:19:06,720 --> 00:19:08,960
it doesn't crash silently

519
00:19:08,960 --> 00:19:10,960
and and so on

520
00:19:10,960 --> 00:19:12,799
and

521
00:19:12,799 --> 00:19:14,880
we decided to make

522
00:19:14,880 --> 00:19:17,280
we we started to notice that these

523
00:19:17,280 --> 00:19:18,640
things are pretty common across these

524
00:19:18,640 --> 00:19:20,559
scripts so there is

525
00:19:20,559 --> 00:19:21,520
a

526
00:19:21,520 --> 00:19:24,240
similar code base that is handling all

527
00:19:24,240 --> 00:19:26,960
of that stuff that is meant to integrate

528
00:19:26,960 --> 00:19:29,919
our script with other services

529
00:19:29,919 --> 00:19:32,000
so we decided to make

530
00:19:32,000 --> 00:19:33,520
a small framework

531
00:19:33,520 --> 00:19:35,200
that will provide

532
00:19:35,200 --> 00:19:36,720
all of these common things out of the

533
00:19:36,720 --> 00:19:39,720
box

534
00:19:40,320 --> 00:19:41,440
and that

535
00:19:41,440 --> 00:19:42,830
that is highly

536
00:19:42,830 --> 00:19:44,080
[Music]

537
00:19:44,080 --> 00:19:46,480
visible in the design so

538
00:19:46,480 --> 00:19:48,640
shortly carton is

539
00:19:48,640 --> 00:19:51,679
meant to be a micro micro service based

540
00:19:51,679 --> 00:19:53,360
framework

541
00:19:53,360 --> 00:19:54,320
for

542
00:19:54,320 --> 00:19:56,080
making dynamic

543
00:19:56,080 --> 00:19:59,200
malware analysis pipelines

544
00:19:59,200 --> 00:20:01,440
and

545
00:20:02,559 --> 00:20:04,720
the main design goal

546
00:20:04,720 --> 00:20:08,640
was to be able to quickly deploy new

547
00:20:08,640 --> 00:20:10,840
scripts to the system

548
00:20:10,840 --> 00:20:13,200
[Music]

549
00:20:13,200 --> 00:20:14,720
we tried to

550
00:20:14,720 --> 00:20:15,760
use

551
00:20:15,760 --> 00:20:17,440
some

552
00:20:17,440 --> 00:20:18,960
ready-made approaches

553
00:20:18,960 --> 00:20:21,760
but unfortunately

554
00:20:21,760 --> 00:20:24,000
they

555
00:20:24,320 --> 00:20:27,039
didn't really

556
00:20:27,039 --> 00:20:28,330
know how to say that

557
00:20:28,330 --> 00:20:29,840
[Music]

558
00:20:29,840 --> 00:20:31,520
they were not solution

559
00:20:31,520 --> 00:20:34,799
solution that was able to work in that

560
00:20:34,799 --> 00:20:36,559
plug-and-play manner

561
00:20:36,559 --> 00:20:38,320
so we decided to make something simple

562
00:20:38,320 --> 00:20:40,720
based on radis

563
00:20:40,720 --> 00:20:43,039
that provides the the cues the tasks

564
00:20:43,039 --> 00:20:43,919
used

565
00:20:43,919 --> 00:20:46,400
and a minion for common

566
00:20:46,400 --> 00:20:48,720
file storage that are needed

567
00:20:48,720 --> 00:20:51,679
for the time of analysis

568
00:20:51,679 --> 00:20:52,400
and

569
00:20:52,400 --> 00:20:54,159
what i meant

570
00:20:54,159 --> 00:20:56,080
what i mean by by

571
00:20:56,080 --> 00:20:58,640
talking about microservices

572
00:20:58,640 --> 00:21:01,520
so microservice

573
00:21:01,520 --> 00:21:02,400
is

574
00:21:02,400 --> 00:21:03,440
meant to

575
00:21:03,440 --> 00:21:05,760
do the one job

576
00:21:05,760 --> 00:21:07,520
and do it right

577
00:21:07,520 --> 00:21:10,480
so we are splitting the responsibilities

578
00:21:10,480 --> 00:21:11,600
across

579
00:21:11,600 --> 00:21:12,960
various scripts

580
00:21:12,960 --> 00:21:14,000
that have

581
00:21:14,000 --> 00:21:17,039
well-defined inputs and outputs

582
00:21:17,039 --> 00:21:19,280
so the single script is

583
00:21:19,280 --> 00:21:22,400
attaching to the queue by defining

584
00:21:22,400 --> 00:21:24,080
what kind of data

585
00:21:24,080 --> 00:21:26,720
it wants to receive

586
00:21:26,720 --> 00:21:30,799
and then it has some well-defined output

587
00:21:30,799 --> 00:21:33,440
what kind of data it emits so other

588
00:21:33,440 --> 00:21:37,120
scripts scripts can also

589
00:21:38,080 --> 00:21:41,760
adapt to that workflow and and

590
00:21:41,760 --> 00:21:45,600
the autos know what data to expect

591
00:21:45,600 --> 00:21:47,440
so for example we have

592
00:21:47,440 --> 00:21:48,559
the most

593
00:21:48,559 --> 00:21:51,919
basic kind of script is classifier that

594
00:21:51,919 --> 00:21:54,880
everything it does is the classification

595
00:21:54,880 --> 00:21:56,960
of file type because it isn't that

596
00:21:56,960 --> 00:21:59,039
obvious very often for example for

597
00:21:59,039 --> 00:22:01,440
scripts if we use the file command we

598
00:22:01,440 --> 00:22:03,679
see only ascii text with long lines and

599
00:22:03,679 --> 00:22:05,039
so on

600
00:22:05,039 --> 00:22:06,640
so for example in that service we have

601
00:22:06,640 --> 00:22:08,400
some holistics

602
00:22:08,400 --> 00:22:10,799
that is looking for common keywords for

603
00:22:10,799 --> 00:22:12,799
script languages and this choosing the

604
00:22:12,799 --> 00:22:15,520
appropriate type

605
00:22:15,679 --> 00:22:17,840
the second thing is extractor

606
00:22:17,840 --> 00:22:19,440
that also tries to

607
00:22:19,440 --> 00:22:21,919
match the common passwords for encrypted

608
00:22:21,919 --> 00:22:25,039
archives like infected because

609
00:22:25,039 --> 00:22:27,200
it's usually the easy way

610
00:22:27,200 --> 00:22:29,520
for distributing malware across analysts

611
00:22:29,520 --> 00:22:31,360
in in some corporate environment so we

612
00:22:31,360 --> 00:22:33,039
need to have these files encrypted to

613
00:22:33,039 --> 00:22:35,120
not be spotted by some antivirus

614
00:22:35,120 --> 00:22:37,280
solutions and so on

615
00:22:37,280 --> 00:22:39,600
and that extractor

616
00:22:39,600 --> 00:22:42,320
just extracts the archive and

617
00:22:42,320 --> 00:22:44,080
is producing the tasks

618
00:22:44,080 --> 00:22:47,840
with with the files contained in it

619
00:22:47,840 --> 00:22:49,360
and as we have

620
00:22:49,360 --> 00:22:50,640
some

621
00:22:50,640 --> 00:22:52,960
actual malicious file for example

622
00:22:52,960 --> 00:22:54,960
document that comes from that classifier

623
00:22:54,960 --> 00:22:56,000
stage

624
00:22:56,000 --> 00:22:58,799
uh based on that

625
00:22:58,799 --> 00:23:00,559
that document can be

626
00:23:00,559 --> 00:23:01,360
uh

627
00:23:01,360 --> 00:23:03,760
consumed by some specialized scripts

628
00:23:03,760 --> 00:23:05,679
that are for example

629
00:23:05,679 --> 00:23:06,720
uh

630
00:23:06,720 --> 00:23:09,280
designed for extracting

631
00:23:09,280 --> 00:23:11,760
macros from these word documents

632
00:23:11,760 --> 00:23:15,280
or for analyzing the exact macro

633
00:23:15,280 --> 00:23:17,600
for specific draw for specific campaigns

634
00:23:17,600 --> 00:23:18,640
that are

635
00:23:18,640 --> 00:23:20,960
using a specific dropper

636
00:23:20,960 --> 00:23:23,200
for example for emotots they were very

637
00:23:23,200 --> 00:23:26,480
common documents and we have

638
00:23:26,480 --> 00:23:28,400
tried to

639
00:23:28,400 --> 00:23:30,320
collect all of the distribution urls

640
00:23:30,320 --> 00:23:32,400
actually from these markers and as they

641
00:23:32,400 --> 00:23:34,240
were very similar to each other we

642
00:23:34,240 --> 00:23:37,039
decided to make specialized scripts

643
00:23:37,039 --> 00:23:39,039
especially for that

644
00:23:39,039 --> 00:23:41,760
for that purpose

645
00:23:42,080 --> 00:23:43,360
and uh

646
00:23:43,360 --> 00:23:45,120
what is really important in the

647
00:23:45,120 --> 00:23:46,640
microservice

648
00:23:46,640 --> 00:23:48,640
frameworks is the inspection of the

649
00:23:48,640 --> 00:23:50,400
queues and and the whole network of

650
00:23:50,400 --> 00:23:51,679
services

651
00:23:51,679 --> 00:23:55,200
so carton comes with a small dashboard

652
00:23:55,200 --> 00:23:57,120
which

653
00:23:57,120 --> 00:23:59,760
allows to administrate

654
00:23:59,760 --> 00:24:01,840
the system and and make an inspection

655
00:24:01,840 --> 00:24:02,960
about

656
00:24:02,960 --> 00:24:06,400
supported filters by the services

657
00:24:06,400 --> 00:24:08,400
i think we will try we will try to

658
00:24:08,400 --> 00:24:10,880
implement the output definitions as well

659
00:24:10,880 --> 00:24:12,480
at some point but currently they are

660
00:24:12,480 --> 00:24:14,240
determined

661
00:24:14,240 --> 00:24:16,080
kind of dynamically

662
00:24:16,080 --> 00:24:18,799
based on the his history of tasks that

663
00:24:18,799 --> 00:24:21,440
were emitted by service

664
00:24:21,440 --> 00:24:24,960
but it's work in progress i guess

665
00:24:24,960 --> 00:24:26,559
so okay

666
00:24:26,559 --> 00:24:29,679
that's about carton and finally we are

667
00:24:29,679 --> 00:24:31,120
getting to the last point which is

668
00:24:31,120 --> 00:24:32,480
showing

669
00:24:32,480 --> 00:24:33,840
because

670
00:24:33,840 --> 00:24:36,000
all of these systems were made

671
00:24:36,000 --> 00:24:38,320
mainly for our own purpose

672
00:24:38,320 --> 00:24:41,200
it was a long story of

673
00:24:41,200 --> 00:24:42,720
rewriting

674
00:24:42,720 --> 00:24:44,480
designing and then

675
00:24:44,480 --> 00:24:46,799
making it able to deal with newer

676
00:24:46,799 --> 00:24:48,159
campaigns

677
00:24:48,159 --> 00:24:51,279
and at one point we decided to make it a

678
00:24:51,279 --> 00:24:54,159
kind of open source

679
00:24:54,480 --> 00:24:56,000
so

680
00:24:56,000 --> 00:24:58,559
we decided to

681
00:24:58,559 --> 00:25:01,200
publish the frameworks the tools without

682
00:25:01,200 --> 00:25:03,279
the

683
00:25:03,279 --> 00:25:05,760
modules

684
00:25:05,919 --> 00:25:08,230
to make people able to

685
00:25:08,230 --> 00:25:09,840
[Music]

686
00:25:09,840 --> 00:25:12,240
design a similar malware lab using our

687
00:25:12,240 --> 00:25:14,720
tools

688
00:25:14,720 --> 00:25:16,320
but

689
00:25:16,320 --> 00:25:17,679
because

690
00:25:17,679 --> 00:25:18,960
not all of you

691
00:25:18,960 --> 00:25:22,159
need to have own malware lab and

692
00:25:22,159 --> 00:25:24,799
most of people in id security are just

693
00:25:24,799 --> 00:25:27,120
using some some services for that that

694
00:25:27,120 --> 00:25:28,880
are already made

695
00:25:28,880 --> 00:25:31,120
we decided to share our

696
00:25:31,120 --> 00:25:34,480
central system as well under the mwsb

697
00:25:34,480 --> 00:25:36,720
set pl portal

698
00:25:36,720 --> 00:25:39,120
which is

699
00:25:41,279 --> 00:25:43,840
um

700
00:25:44,799 --> 00:25:47,039
i forgot the what

701
00:25:47,039 --> 00:25:50,960
in general you can use our own

702
00:25:50,960 --> 00:25:53,360
systems our own analysis capabilities

703
00:25:53,360 --> 00:25:56,840
via that interface

704
00:25:56,960 --> 00:25:59,039
so you can access

705
00:25:59,039 --> 00:26:01,840
samples configurations

706
00:26:01,840 --> 00:26:02,640
and

707
00:26:02,640 --> 00:26:05,200
lots of outputs from our analysis via

708
00:26:05,200 --> 00:26:07,840
this service

709
00:26:08,240 --> 00:26:11,600
so there are some statistics uh

710
00:26:11,600 --> 00:26:14,720
also we added at mwdb we are trying to

711
00:26:14,720 --> 00:26:16,240
make a small community of malware

712
00:26:16,240 --> 00:26:18,559
researchers

713
00:26:18,559 --> 00:26:22,880
we are trying to do that from 2018

714
00:26:22,880 --> 00:26:26,080
and we have over 1 000 accounts

715
00:26:26,080 --> 00:26:27,600
of course all of you are also open for

716
00:26:27,600 --> 00:26:29,840
the registration

717
00:26:29,840 --> 00:26:33,200
and we have extractors for 130

718
00:26:33,200 --> 00:26:34,400
families

719
00:26:34,400 --> 00:26:35,840
but

720
00:26:35,840 --> 00:26:38,720
most of them are not working because

721
00:26:38,720 --> 00:26:40,880
they were made at some point for some

722
00:26:40,880 --> 00:26:44,080
excellent version and

723
00:26:44,080 --> 00:26:46,320
then

724
00:26:46,480 --> 00:26:48,720
not all of them are maintained because

725
00:26:48,720 --> 00:26:50,880
the maintenance of these scripts depends

726
00:26:50,880 --> 00:26:53,919
on the current threats in poland

727
00:26:53,919 --> 00:26:54,580
so

728
00:26:54,580 --> 00:26:55,760
[Music]

729
00:26:55,760 --> 00:26:57,440
we are trying to make some cooperation

730
00:26:57,440 --> 00:26:59,360
in that manner but but it's also some

731
00:26:59,360 --> 00:27:01,279
work in progress

732
00:27:01,279 --> 00:27:03,039
the whole repository isn't

733
00:27:03,039 --> 00:27:04,720
very big it is in the scale of various

734
00:27:04,720 --> 00:27:08,880
total but it's pretty okay

735
00:27:08,880 --> 00:27:10,880
we have some nice integrations like uh

736
00:27:10,880 --> 00:27:13,200
malware basel integrated with us

737
00:27:13,200 --> 00:27:15,840
and is pushing all of the samples

738
00:27:15,840 --> 00:27:18,720
submitted to malwarebaser to nwb3pl as

739
00:27:18,720 --> 00:27:20,640
well because we are the effect

740
00:27:20,640 --> 00:27:22,960
intelligence vendor for it

741
00:27:22,960 --> 00:27:25,039
so malwarebuzzer also is using our

742
00:27:25,039 --> 00:27:28,880
service for malware classification

743
00:27:28,880 --> 00:27:31,279
and yeah

744
00:27:31,279 --> 00:27:32,960
about the community

745
00:27:32,960 --> 00:27:35,679
we have a small slack

746
00:27:35,679 --> 00:27:36,640
channel

747
00:27:36,640 --> 00:27:38,799
and we're also trying to

748
00:27:38,799 --> 00:27:41,120
use that service to share some artifacts

749
00:27:41,120 --> 00:27:43,360
with community via twitter or other

750
00:27:43,360 --> 00:27:45,760
channels

751
00:27:46,640 --> 00:27:48,480
okay so that's about the

752
00:27:48,480 --> 00:27:49,679
uh

753
00:27:49,679 --> 00:27:51,919
main products

754
00:27:51,919 --> 00:27:55,279
yeah so this uh what was already

755
00:27:55,279 --> 00:27:57,039
available uh

756
00:27:57,039 --> 00:28:00,240
and uh kind of what can you use the mwdb

757
00:28:00,240 --> 00:28:03,360
srtpl is what you can use

758
00:28:03,360 --> 00:28:04,159
as

759
00:28:04,159 --> 00:28:06,799
without setting anything up or you can

760
00:28:06,799 --> 00:28:10,399
set up your own instance of the

761
00:28:10,399 --> 00:28:12,720
of the whole pipeline

762
00:28:12,720 --> 00:28:14,399
and now a bit

763
00:28:14,399 --> 00:28:18,240
what is coming up uh that would be also

764
00:28:18,240 --> 00:28:20,399
it will also demonstrate uh the

765
00:28:20,399 --> 00:28:21,840
extendability

766
00:28:21,840 --> 00:28:23,120
uh

767
00:28:23,120 --> 00:28:24,880
so we are

768
00:28:24,880 --> 00:28:27,679
what i'll be talking about is using

769
00:28:27,679 --> 00:28:31,200
a plug-in functionality in mwdb which

770
00:28:31,200 --> 00:28:33,039
allows you to

771
00:28:33,039 --> 00:28:34,480
extend the

772
00:28:34,480 --> 00:28:37,279
well the interface and the

773
00:28:37,279 --> 00:28:40,080
operations of the

774
00:28:40,080 --> 00:28:40,799
well

775
00:28:40,799 --> 00:28:43,520
of the whole system

776
00:28:43,520 --> 00:28:44,720
so

777
00:28:44,720 --> 00:28:47,760
this in this case uh we we are uh

778
00:28:47,760 --> 00:28:48,799
looking

779
00:28:48,799 --> 00:28:50,720
we're doing some research into

780
00:28:50,720 --> 00:28:51,919
uh

781
00:28:51,919 --> 00:28:54,720
malware similarity analysis

782
00:28:54,720 --> 00:28:58,240
uh it's not a new topic however it is

783
00:28:58,240 --> 00:29:00,559
some direction we would like to take uh

784
00:29:00,559 --> 00:29:03,200
to extend the existing functionality in

785
00:29:03,200 --> 00:29:07,200
mwdb because currently we are mostly

786
00:29:07,200 --> 00:29:09,039
using yara rules

787
00:29:09,039 --> 00:29:10,640
and

788
00:29:10,640 --> 00:29:13,679
some python codes to to extract uh

789
00:29:13,679 --> 00:29:15,600
interesting parts from

790
00:29:15,600 --> 00:29:16,960
from from the

791
00:29:16,960 --> 00:29:18,720
memory dumps usually

792
00:29:18,720 --> 00:29:22,080
um so by adding a bit of the automation

793
00:29:22,080 --> 00:29:24,240
for for comparing the

794
00:29:24,240 --> 00:29:28,159
similarity between samples we can

795
00:29:28,159 --> 00:29:29,760
we can try to

796
00:29:29,760 --> 00:29:31,919
provide classification

797
00:29:31,919 --> 00:29:34,559
for families even in situations when

798
00:29:34,559 --> 00:29:36,480
there are new variants that are not

799
00:29:36,480 --> 00:29:37,820
necessarily

800
00:29:37,820 --> 00:29:39,120
[Music]

801
00:29:39,120 --> 00:29:41,919
matching our our existing uh urls for

802
00:29:41,919 --> 00:29:43,120
example

803
00:29:43,120 --> 00:29:44,880
uh and also to

804
00:29:44,880 --> 00:29:47,120
when we have new samples the similarity

805
00:29:47,120 --> 00:29:50,480
allows to to pivot uh this is like the

806
00:29:50,480 --> 00:29:53,760
the idea is not new however this is a a

807
00:29:53,760 --> 00:29:55,919
new feature that is that has been

808
00:29:55,919 --> 00:29:58,000
already developed for uh

809
00:29:58,000 --> 00:29:59,919
for for mwdb

810
00:29:59,919 --> 00:30:01,440
um

811
00:30:01,440 --> 00:30:04,320
and um

812
00:30:04,320 --> 00:30:06,640
so very very quick overview of what what

813
00:30:06,640 --> 00:30:08,640
we have already in place uh

814
00:30:08,640 --> 00:30:10,960
we we are uh

815
00:30:10,960 --> 00:30:13,120
using um a combination of dynamic and

816
00:30:13,120 --> 00:30:15,360
static analysis uh so

817
00:30:15,360 --> 00:30:17,840
dynamic analysis is what was already

818
00:30:17,840 --> 00:30:18,880
mentioned

819
00:30:18,880 --> 00:30:22,480
uh using sandbox to obtain memory dumps

820
00:30:22,480 --> 00:30:23,440
uh

821
00:30:23,440 --> 00:30:26,720
this those memory dams are then analyzed

822
00:30:26,720 --> 00:30:27,919
statically

823
00:30:27,919 --> 00:30:31,120
this is there is a tool api scout by by

824
00:30:31,120 --> 00:30:32,880
daniel ploffman

825
00:30:32,880 --> 00:30:34,240
that extracts

826
00:30:34,240 --> 00:30:36,399
potentially interesting

827
00:30:36,399 --> 00:30:38,320
uh

828
00:30:38,320 --> 00:30:41,440
windows apis uh which form a feature

829
00:30:41,440 --> 00:30:44,080
vector that is then uh used for for for

830
00:30:44,080 --> 00:30:45,679
comparison

831
00:30:45,679 --> 00:30:48,240
and for for classification if there is

832
00:30:48,240 --> 00:30:50,720
uh if there is a similar uh

833
00:30:50,720 --> 00:30:52,880
malware so this is like a multi-stage

834
00:30:52,880 --> 00:30:55,440
process that is implemented through

835
00:30:55,440 --> 00:30:57,679
uh for carton modules actually in the

836
00:30:57,679 --> 00:31:00,080
back end

837
00:31:00,399 --> 00:31:02,159
and

838
00:31:02,159 --> 00:31:04,320
the the plug-in functionality in in and

839
00:31:04,320 --> 00:31:05,840
of the db allows

840
00:31:05,840 --> 00:31:08,399
us to extend the interface uh by

841
00:31:08,399 --> 00:31:10,000
providing here it just provides

842
00:31:10,000 --> 00:31:12,799
additional uh tab in the results uh

843
00:31:12,799 --> 00:31:15,679
where we can visualize uh the api

844
00:31:15,679 --> 00:31:18,080
vectors so the the the color color for

845
00:31:18,080 --> 00:31:21,440
picture is the api vector or the api api

846
00:31:21,440 --> 00:31:23,679
qr uh uh

847
00:31:23,679 --> 00:31:26,000
with that with the bits that are

848
00:31:26,000 --> 00:31:28,000
highlighted corresponding to the

849
00:31:28,000 --> 00:31:31,840
used apis in a particular memory dump

850
00:31:31,840 --> 00:31:33,120
and

851
00:31:33,120 --> 00:31:35,279
provide uh like a

852
00:31:35,279 --> 00:31:38,080
pretty easy easy to read overview of

853
00:31:38,080 --> 00:31:40,000
which family is

854
00:31:40,000 --> 00:31:41,360
similar to what

855
00:31:41,360 --> 00:31:42,559
which degree

856
00:31:42,559 --> 00:31:45,120
uh the text might be a bit small here

857
00:31:45,120 --> 00:31:47,440
but we have like 100 percent

858
00:31:47,440 --> 00:31:49,840
similarity much with one of the existing

859
00:31:49,840 --> 00:31:53,120
uh families in these examples of course

860
00:31:53,120 --> 00:31:56,240
that uh sometimes it works sometimes it

861
00:31:56,240 --> 00:31:59,200
does not as these methods uh do there is

862
00:31:59,200 --> 00:32:01,039
no uh

863
00:32:01,039 --> 00:32:04,559
with this fuzzy matching there is no

864
00:32:04,559 --> 00:32:06,480
exception it's not fuzzy mushing but

865
00:32:06,480 --> 00:32:09,519
this is this this kind of uh

866
00:32:09,519 --> 00:32:12,080
approaches uh based on similarity that

867
00:32:12,080 --> 00:32:14,240
they are not guaranteed to provide

868
00:32:14,240 --> 00:32:17,279
meaningful results in in all cases

869
00:32:17,279 --> 00:32:18,240
um

870
00:32:18,240 --> 00:32:21,039
but that's not all of it there is also

871
00:32:21,039 --> 00:32:23,519
an upcoming

872
00:32:23,519 --> 00:32:25,440
extension to that where we are not

873
00:32:25,440 --> 00:32:26,720
looking at

874
00:32:26,720 --> 00:32:30,799
um the api as a static feature but we

875
00:32:30,799 --> 00:32:33,279
are actually

876
00:32:34,240 --> 00:32:37,679
doing disassembly of malware samples

877
00:32:37,679 --> 00:32:40,080
and especially unpacked malware samples

878
00:32:40,080 --> 00:32:44,000
thanks to the sandbox functionality that

879
00:32:44,000 --> 00:32:45,919
we have built in

880
00:32:45,919 --> 00:32:48,640
and we are able to determine what is the

881
00:32:48,640 --> 00:32:51,360
reuse of on a code level looking at the

882
00:32:51,360 --> 00:32:54,399
functions disassembled functions and

883
00:32:54,399 --> 00:32:57,039
normalizing them to a canonical form

884
00:32:57,039 --> 00:33:00,320
which is then compared across our uh

885
00:33:00,320 --> 00:33:03,279
entire data set

886
00:33:03,279 --> 00:33:05,519
and that is we already have some proof

887
00:33:05,519 --> 00:33:08,159
of concept integration with mwdb for for

888
00:33:08,159 --> 00:33:10,960
that system

889
00:33:10,960 --> 00:33:12,399
and

890
00:33:12,399 --> 00:33:14,960
i expect that we'll be able to

891
00:33:14,960 --> 00:33:18,640
to to provide this uh in the inter mwd

892
00:33:18,640 --> 00:33:20,559
cert pl interface

893
00:33:20,559 --> 00:33:22,799
fairly soon

894
00:33:22,799 --> 00:33:24,799
in the back end it looks like this so

895
00:33:24,799 --> 00:33:26,000
there we have

896
00:33:26,000 --> 00:33:29,039
uh like very very rough interface to for

897
00:33:29,039 --> 00:33:31,919
for if someone's get into details but

898
00:33:31,919 --> 00:33:34,240
actually in nwdb it will be

899
00:33:34,240 --> 00:33:37,200
much more user friendly

900
00:33:37,200 --> 00:33:39,360
for also for you to to interact with

901
00:33:39,360 --> 00:33:40,559
that

902
00:33:40,559 --> 00:33:41,600
um

903
00:33:41,600 --> 00:33:44,559
so this is uh kind of what is on our

904
00:33:44,559 --> 00:33:46,960
near-term roadmap uh

905
00:33:46,960 --> 00:33:49,519
the api vectors are already kind of

906
00:33:49,519 --> 00:33:52,240
running just not visible to the uh

907
00:33:52,240 --> 00:33:54,640
general yes they need some polishing

908
00:33:54,640 --> 00:33:55,519
before

909
00:33:55,519 --> 00:33:57,600
we can make it public yeah so

910
00:33:57,600 --> 00:34:02,240
still it's a better testing period

911
00:34:02,559 --> 00:34:05,039
but yes that's kind of the

912
00:34:05,039 --> 00:34:07,440
one of the directions we are taking into

913
00:34:07,440 --> 00:34:09,440
kind of

914
00:34:09,440 --> 00:34:12,079
building additional systems for for

915
00:34:12,079 --> 00:34:14,320
malware analysis and then integrating

916
00:34:14,320 --> 00:34:16,800
results of those systems in nwdb and i

917
00:34:16,800 --> 00:34:18,159
think it kind of

918
00:34:18,159 --> 00:34:20,480
demonstrates that it's kind of really

919
00:34:20,480 --> 00:34:21,918
flexible tool

920
00:34:21,918 --> 00:34:22,960
and you can

921
00:34:22,960 --> 00:34:25,359
adjust it to whatever

922
00:34:25,359 --> 00:34:27,679
requirements you might have

923
00:34:27,679 --> 00:34:28,960
um

924
00:34:28,960 --> 00:34:30,800
so actually that is

925
00:34:30,800 --> 00:34:33,440
all we wanted to to show

926
00:34:33,440 --> 00:34:35,918
so we will end with some pointers to

927
00:34:35,918 --> 00:34:38,000
where you can find more information or

928
00:34:38,000 --> 00:34:40,239
if you if you're interested

929
00:34:40,239 --> 00:34:41,520
um

930
00:34:41,520 --> 00:34:43,040
obviously

931
00:34:43,040 --> 00:34:45,599
official documentation

932
00:34:45,599 --> 00:34:48,320
quite a lot of effort was put into that

933
00:34:48,320 --> 00:34:50,079
yeah that's for example there's some

934
00:34:50,079 --> 00:34:54,240
user guides that will guide you from the

935
00:34:54,320 --> 00:34:55,440
through the

936
00:34:55,440 --> 00:34:56,399
main

937
00:34:56,399 --> 00:34:58,240
points and concepts

938
00:34:58,240 --> 00:34:59,680
so it's nice to

939
00:34:59,680 --> 00:35:03,399
look at i guess

940
00:35:03,599 --> 00:35:04,880
there is uh

941
00:35:04,880 --> 00:35:06,560
their training materials actually with

942
00:35:06,560 --> 00:35:09,599
with tasks where you can go through

943
00:35:09,599 --> 00:35:13,119
uh various parts of nwdb also uh create

944
00:35:13,119 --> 00:35:16,720
a carton module and so on so it's a uh

945
00:35:16,720 --> 00:35:17,520
we

946
00:35:17,520 --> 00:35:20,880
it's an evolution of a training that we

947
00:35:20,880 --> 00:35:23,839
uh did last year at first the virtual

948
00:35:23,839 --> 00:35:26,240
retro virtual training with

949
00:35:26,240 --> 00:35:30,079
mwdb carton and so on uh these materials

950
00:35:30,079 --> 00:35:32,320
updated their updated versions are

951
00:35:32,320 --> 00:35:35,280
available uh for for you

952
00:35:35,280 --> 00:35:36,240
also

953
00:35:36,240 --> 00:35:37,040
uh

954
00:35:37,040 --> 00:35:39,520
there is automation library that likes a

955
00:35:39,520 --> 00:35:42,000
wrapper around the the apis and also

956
00:35:42,000 --> 00:35:44,320
come online interface uh for for

957
00:35:44,320 --> 00:35:45,599
interaction

958
00:35:45,599 --> 00:35:47,839
uh with with nwdb

959
00:35:47,839 --> 00:35:51,040
um and what we did not have time to talk

960
00:35:51,040 --> 00:35:53,920
about today uh a maldek

961
00:35:53,920 --> 00:35:57,200
probably it's it's kind of um swiss

962
00:35:57,200 --> 00:35:59,680
knife for malware researchers that are

963
00:35:59,680 --> 00:36:02,320
writing scripts for for configuration

964
00:36:02,320 --> 00:36:03,839
instruction python

965
00:36:03,839 --> 00:36:06,079
in addition it it has

966
00:36:06,079 --> 00:36:07,119
a

967
00:36:07,119 --> 00:36:09,200
configuration extraction framework

968
00:36:09,200 --> 00:36:11,359
so it is able to run modules that are

969
00:36:11,359 --> 00:36:13,119
compatible with maldoc

970
00:36:13,119 --> 00:36:15,119
formats

971
00:36:15,119 --> 00:36:17,839
so important part of our

972
00:36:17,839 --> 00:36:20,320
code base

973
00:36:20,320 --> 00:36:23,359
that's all we had prepared

974
00:36:23,359 --> 00:36:24,880
for this

975
00:36:24,880 --> 00:36:27,200
like high level a bit a bit high level

976
00:36:27,200 --> 00:36:28,160
talk

977
00:36:28,160 --> 00:36:30,560
uh we get some grunts for for part of

978
00:36:30,560 --> 00:36:32,079
this work

979
00:36:32,079 --> 00:36:35,599
uh if you want to register for uh mwdb

980
00:36:35,599 --> 00:36:38,640
certified that there's the registration

981
00:36:38,640 --> 00:36:39,680
is open

982
00:36:39,680 --> 00:36:42,000
there's just a vetting procedure

983
00:36:42,000 --> 00:36:47,839
we i know we have a backlog of those

984
00:36:47,839 --> 00:36:50,400
applications so if if you applied you

985
00:36:50,400 --> 00:36:52,800
didn't and if you did not get a response

986
00:36:52,800 --> 00:36:54,960
please ping us

987
00:36:54,960 --> 00:36:56,960
we'll make sure that that

988
00:36:56,960 --> 00:36:59,760
that will get pushed through

989
00:36:59,760 --> 00:37:02,400
if you if you have any questions

990
00:37:02,400 --> 00:37:03,680
we'll be here

991
00:37:03,680 --> 00:37:06,800
a whole week actually

992
00:37:06,800 --> 00:37:08,720
but if there are any questions now we'll

993
00:37:08,720 --> 00:37:11,119
be happy to answer them

994
00:37:11,119 --> 00:37:13,160
thank you thank you

995
00:37:13,160 --> 00:37:17,120
[Applause]

