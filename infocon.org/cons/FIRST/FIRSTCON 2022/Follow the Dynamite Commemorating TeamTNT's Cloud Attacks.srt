1
00:00:05,870 --> 00:00:07,440
[Music]

2
00:00:07,440 --> 00:00:09,679
hello everyone thank you to be here

3
00:00:09,679 --> 00:00:10,800
today

4
00:00:10,800 --> 00:00:12,719
i want to remember that the current

5
00:00:12,719 --> 00:00:17,520
session will be tlpy tp white sorry this

6
00:00:17,520 --> 00:00:19,760
session name is follow the dynamite

7
00:00:19,760 --> 00:00:22,880
commemorating team tnt clouds attacks

8
00:00:22,880 --> 00:00:25,359
and to speak about it let me to

9
00:00:25,359 --> 00:00:26,560
introduce

10
00:00:26,560 --> 00:00:29,519
nicole fishbein and joaquin kennedy

11
00:00:29,519 --> 00:00:32,159
thank you guys

12
00:00:35,840 --> 00:00:38,320
um thank you everyone and

13
00:00:38,320 --> 00:00:41,600
we just want to kind of give you guys a

14
00:00:41,600 --> 00:00:44,000
a walk through of the sort of the

15
00:00:44,000 --> 00:00:46,719
activity of a threat actor called team

16
00:00:46,719 --> 00:00:47,920
tnt

17
00:00:47,920 --> 00:00:49,760
um

18
00:00:49,760 --> 00:00:52,239
come on there we go my name is joy kim

19
00:00:52,239 --> 00:00:54,160
kennedy and i'm a security researcher

20
00:00:54,160 --> 00:00:55,920
for inteser

21
00:00:55,920 --> 00:00:58,160
um i kind of consider myself as a

22
00:00:58,160 --> 00:01:00,879
assembly reader i spend most of my days

23
00:01:00,879 --> 00:01:03,359
sort of looking at suspicious binaries

24
00:01:03,359 --> 00:01:05,600
and things like that

25
00:01:05,600 --> 00:01:07,520
when i don't do that i also hunt for

26
00:01:07,520 --> 00:01:10,640
gophers usually malicious gold binaries

27
00:01:10,640 --> 00:01:12,320
i have

28
00:01:12,320 --> 00:01:14,720
a open source project for

29
00:01:14,720 --> 00:01:17,280
binary analysis of go binaries

30
00:01:17,280 --> 00:01:20,799
that is hosted on github

31
00:01:21,280 --> 00:01:23,119
hi my name is nicole fishbein i'm a

32
00:01:23,119 --> 00:01:25,360
security researcher at integer and

33
00:01:25,360 --> 00:01:27,600
previous to that i was in the embedded r

34
00:01:27,600 --> 00:01:31,039
d department in the idf

35
00:01:32,640 --> 00:01:34,720
so today we're going to present you team

36
00:01:34,720 --> 00:01:36,720
tnt and

37
00:01:36,720 --> 00:01:39,280
i will present the chronological order

38
00:01:39,280 --> 00:01:40,880
of their

39
00:01:40,880 --> 00:01:43,200
saga which is kind of a shakespearean

40
00:01:43,200 --> 00:01:46,320
strategy story because it started pretty

41
00:01:46,320 --> 00:01:47,600
well for them

42
00:01:47,600 --> 00:01:49,840
with targeting ready servers

43
00:01:49,840 --> 00:01:51,920
then they moved to the cloud nine

44
00:01:51,920 --> 00:01:53,360
targeting different cloud

45
00:01:53,360 --> 00:01:55,040
infrastructures

46
00:01:55,040 --> 00:01:57,200
and they got really famous they have a

47
00:01:57,200 --> 00:01:59,600
very active twitter

48
00:01:59,600 --> 00:02:01,040
account

49
00:02:01,040 --> 00:02:03,360
and then they had to deal with the cost

50
00:02:03,360 --> 00:02:06,799
of fame when copycats started to show up

51
00:02:06,799 --> 00:02:09,440
and right until the

52
00:02:09,440 --> 00:02:11,679
end

53
00:02:12,239 --> 00:02:14,319
so who are team tnt

54
00:02:14,319 --> 00:02:17,040
uh it's a group it's a threat actor that

55
00:02:17,040 --> 00:02:19,640
targets cloud infrastructures to mine

56
00:02:19,640 --> 00:02:21,200
cryptocurrency

57
00:02:21,200 --> 00:02:23,760
uh basically crypto jacking crypto

58
00:02:23,760 --> 00:02:26,000
jacking means mine cryptocurrency on

59
00:02:26,000 --> 00:02:28,080
someone's else's computer

60
00:02:28,080 --> 00:02:30,400
and crypto jacking is the most popular

61
00:02:30,400 --> 00:02:33,680
threat to to the cloud and team tnt is

62
00:02:33,680 --> 00:02:35,840
the most active threat actor that we can

63
00:02:35,840 --> 00:02:39,440
attribute attacks to

64
00:02:40,239 --> 00:02:41,760
so we will start right from the

65
00:02:41,760 --> 00:02:42,959
beginning

66
00:02:42,959 --> 00:02:44,000
okay

67
00:02:44,000 --> 00:02:46,640
so the beginning

68
00:02:46,640 --> 00:02:49,040
so this kind of era kind of starts in

69
00:02:49,040 --> 00:02:51,680
around like winter 2020.

70
00:02:51,680 --> 00:02:52,640
um

71
00:02:52,640 --> 00:02:54,959
they started to target redis servers

72
00:02:54,959 --> 00:02:55,840
and

73
00:02:55,840 --> 00:02:57,519
what is kind of unique with this kind of

74
00:02:57,519 --> 00:03:00,159
start was the um

75
00:03:00,159 --> 00:03:02,319
the use of pn scan which is something we

76
00:03:02,319 --> 00:03:03,920
usually see

77
00:03:03,920 --> 00:03:06,080
crypto mining threat actors do they

78
00:03:06,080 --> 00:03:08,319
download it on an infected machine and

79
00:03:08,319 --> 00:03:10,159
they scan for others and then just sort

80
00:03:10,159 --> 00:03:12,800
of spread as a worm around it

81
00:03:12,800 --> 00:03:14,159
but the interesting thing with this

82
00:03:14,159 --> 00:03:16,480
actor was not the sort of use of a

83
00:03:16,480 --> 00:03:18,560
massive shell script instead everything

84
00:03:18,560 --> 00:03:20,800
is broken out in a lot of shell scripts

85
00:03:20,800 --> 00:03:22,959
files

86
00:03:22,959 --> 00:03:24,720
in addition to that they also utilize

87
00:03:24,720 --> 00:03:27,840
some binary tools

88
00:03:28,080 --> 00:03:30,080
one of them that's very like that they

89
00:03:30,080 --> 00:03:31,440
liked a lot is

90
00:03:31,440 --> 00:03:34,480
movie track is like tsunami

91
00:03:34,480 --> 00:03:35,599
it kind of was

92
00:03:35,599 --> 00:03:38,319
downloaded as this whois.irc

93
00:03:38,319 --> 00:03:43,599
um it's a irc bot that is designed for

94
00:03:43,599 --> 00:03:45,200
denial service

95
00:03:45,200 --> 00:03:46,799
and hence sort of like where the tsunami

96
00:03:46,799 --> 00:03:48,239
comes from because it's one of the key

97
00:03:48,239 --> 00:03:49,760
words that you can send to the bot which

98
00:03:49,760 --> 00:03:52,640
is basically to flood everything

99
00:03:52,640 --> 00:03:55,120
the other use is a

100
00:03:55,120 --> 00:03:56,879
linux backdoor called rat hole

101
00:03:56,879 --> 00:03:59,280
relatively simple and provides just

102
00:03:59,280 --> 00:04:02,400
shell access with encryption

103
00:04:02,400 --> 00:04:04,239
and in addition to that they also had a

104
00:04:04,239 --> 00:04:06,239
binary that sort of operated as a

105
00:04:06,239 --> 00:04:08,799
watchdog that made sure that everything

106
00:04:08,799 --> 00:04:10,000
was running

107
00:04:10,000 --> 00:04:12,159
and

108
00:04:12,159 --> 00:04:15,120
to do some lateral movement they utilize

109
00:04:15,120 --> 00:04:17,600
a post exploitation tool called punk p

110
00:04:17,600 --> 00:04:20,798
which uh i think is all the way back to

111
00:04:20,798 --> 00:04:22,320
like packet storm and stuff like that

112
00:04:22,320 --> 00:04:24,479
but nowadays you can also find it on uh

113
00:04:24,479 --> 00:04:26,880
github

114
00:04:26,880 --> 00:04:30,160
the interesting a bit here is that

115
00:04:30,160 --> 00:04:32,400
even from like the beginning uh they

116
00:04:32,400 --> 00:04:33,840
started to sort of

117
00:04:33,840 --> 00:04:36,800
exfiltrate credentials uh and trying to

118
00:04:36,800 --> 00:04:39,759
sort of spread within the network um

119
00:04:39,759 --> 00:04:41,120
there were some interesting ways of

120
00:04:41,120 --> 00:04:43,040
doing this where they would go through

121
00:04:43,040 --> 00:04:44,560
bash history and

122
00:04:44,560 --> 00:04:47,680
steal keys or whatever

123
00:04:48,240 --> 00:04:49,759
now the sort of the

124
00:04:49,759 --> 00:04:52,320
initial name of where like team tnt come

125
00:04:52,320 --> 00:04:54,720
from is the first use of sort of the

126
00:04:54,720 --> 00:04:56,960
registration of their domain name which

127
00:04:56,960 --> 00:04:58,800
they registered as you can see here in

128
00:04:58,800 --> 00:05:01,120
february

129
00:05:01,120 --> 00:05:02,720
now

130
00:05:02,720 --> 00:05:04,880
on this sort of server where they hosted

131
00:05:04,880 --> 00:05:06,800
so they hosted all of their tooling on

132
00:05:06,800 --> 00:05:09,120
this server

133
00:05:09,120 --> 00:05:11,520
we could sort of manage to get get some

134
00:05:11,520 --> 00:05:13,680
stuff that was sort of dated uh

135
00:05:13,680 --> 00:05:16,160
relatively early um here's for example

136
00:05:16,160 --> 00:05:18,479
is something that was uploaded or added

137
00:05:18,479 --> 00:05:20,400
to the server four days after the

138
00:05:20,400 --> 00:05:22,960
registration of the domain name

139
00:05:22,960 --> 00:05:24,639
so it's like one of the earliest tools

140
00:05:24,639 --> 00:05:27,520
that was out there

141
00:05:27,520 --> 00:05:30,160
this is kind of the nightmare of shell

142
00:05:30,160 --> 00:05:31,039
script

143
00:05:31,039 --> 00:05:32,639
that you have just to show how things

144
00:05:32,639 --> 00:05:34,080
are sort of connected

145
00:05:34,080 --> 00:05:36,240
it starts with the shell script in the

146
00:05:36,240 --> 00:05:38,560
big sort of in the middle called

147
00:05:38,560 --> 00:05:41,680
load slash setup dot sh that's sort of a

148
00:05:41,680 --> 00:05:44,000
folder name because it has a couple of

149
00:05:44,000 --> 00:05:45,360
other loader

150
00:05:45,360 --> 00:05:46,800
it will download all of these other

151
00:05:46,800 --> 00:05:49,199
tools and stuff like that uh which

152
00:05:49,199 --> 00:05:50,840
sets up to sort of the spreader

153
00:05:50,840 --> 00:05:53,919
functionality um the mining part

154
00:05:53,919 --> 00:05:54,800
um

155
00:05:54,800 --> 00:05:56,000
and

156
00:05:56,000 --> 00:05:58,080
some other stuff like just to grab

157
00:05:58,080 --> 00:06:00,639
credentials

158
00:06:00,960 --> 00:06:02,880
the one thing that's very interesting

159
00:06:02,880 --> 00:06:05,360
with this group is from the beginning

160
00:06:05,360 --> 00:06:07,680
they slapped on like a

161
00:06:07,680 --> 00:06:10,080
copyright header on their shell script

162
00:06:10,080 --> 00:06:10,800
so

163
00:06:10,800 --> 00:06:12,960
here we have you know like

164
00:06:12,960 --> 00:06:14,479
it's describing what it is so this is

165
00:06:14,479 --> 00:06:15,440
you know the

166
00:06:15,440 --> 00:06:17,360
for example we see the top one there is

167
00:06:17,360 --> 00:06:18,800
the

168
00:06:18,800 --> 00:06:20,560
shell scripted

169
00:06:20,560 --> 00:06:23,440
focused on on compromising redis and

170
00:06:23,440 --> 00:06:26,560
it's their private module uh with uh a

171
00:06:26,560 --> 00:06:29,360
copyright of hildegard which is the

172
00:06:29,360 --> 00:06:31,520
handler for a handle name for the team

173
00:06:31,520 --> 00:06:33,440
tnt operator

174
00:06:33,440 --> 00:06:36,240
we also have the apoorman's ssh

175
00:06:36,240 --> 00:06:37,840
keylogger

176
00:06:37,840 --> 00:06:39,919
and things like that

177
00:06:39,919 --> 00:06:40,960
um

178
00:06:40,960 --> 00:06:43,120
also throughout sort of the um the shell

179
00:06:43,120 --> 00:06:44,800
scripts although the comments were in

180
00:06:44,800 --> 00:06:46,400
german so it's kind of like the first

181
00:06:46,400 --> 00:06:48,080
sort of hint that maybe this is actually

182
00:06:48,080 --> 00:06:51,280
a german threat actor

183
00:06:52,960 --> 00:06:54,400
now

184
00:06:54,400 --> 00:06:56,479
they're also utilizing some really

185
00:06:56,479 --> 00:06:58,880
interesting like homemade kind of

186
00:06:58,880 --> 00:07:00,560
tricks to kind of

187
00:07:00,560 --> 00:07:02,479
do stuff here for example is a shell

188
00:07:02,479 --> 00:07:05,199
script that is installed who's designed

189
00:07:05,199 --> 00:07:08,319
to hide files um and as you can see what

190
00:07:08,319 --> 00:07:09,520
it's doing

191
00:07:09,520 --> 00:07:12,400
it is a it creates sort of like a

192
00:07:12,400 --> 00:07:15,520
bind mount or like i know if with a new

193
00:07:15,520 --> 00:07:18,160
fs mount on like a bsd where

194
00:07:18,160 --> 00:07:20,160
it's sort of linking a folder

195
00:07:20,160 --> 00:07:23,199
um and it does it over the um

196
00:07:23,199 --> 00:07:24,800
where in the procf

197
00:07:24,800 --> 00:07:26,720
uh file system where sort of like the

198
00:07:26,720 --> 00:07:28,639
process information would be

199
00:07:28,639 --> 00:07:30,880
uh so it turns to hide itself by doing

200
00:07:30,880 --> 00:07:32,639
that

201
00:07:32,639 --> 00:07:34,319
now

202
00:07:34,319 --> 00:07:36,240
unfortunately unlike most linux

203
00:07:36,240 --> 00:07:38,160
distribution nowadays

204
00:07:38,160 --> 00:07:40,880
um this mount tab is just a link that

205
00:07:40,880 --> 00:07:43,120
it's sort of manipulating with that

206
00:07:43,120 --> 00:07:45,759
points to the proc fs so it's not a file

207
00:07:45,759 --> 00:07:48,240
that exists on disk

208
00:07:48,240 --> 00:07:50,560
and also if you run some of the commands

209
00:07:50,560 --> 00:07:52,639
to list sort of mounted folders and

210
00:07:52,639 --> 00:07:53,840
things like that

211
00:07:53,840 --> 00:07:55,440
and

212
00:07:55,440 --> 00:07:57,840
the tools is not using those files at

213
00:07:57,840 --> 00:07:59,680
all they kind of just provided there for

214
00:07:59,680 --> 00:08:01,039
shell access

215
00:08:01,039 --> 00:08:02,080
so

216
00:08:02,080 --> 00:08:03,919
it was a nice attempt but i don't think

217
00:08:03,919 --> 00:08:05,599
it worked that well on the actual

218
00:08:05,599 --> 00:08:08,479
infected machines

219
00:08:08,479 --> 00:08:09,199
the

220
00:08:09,199 --> 00:08:11,440
credential stealing method so this is a

221
00:08:11,440 --> 00:08:15,039
the poor man's ssh logger um just uses

222
00:08:15,039 --> 00:08:18,000
s-trace and looking for specific

223
00:08:18,000 --> 00:08:20,800
syscalls and just logging it and then

224
00:08:20,800 --> 00:08:23,120
having sort of a cron job that runs

225
00:08:23,120 --> 00:08:24,639
and

226
00:08:24,639 --> 00:08:25,520
sort of

227
00:08:25,520 --> 00:08:28,639
uploading the logs they

228
00:08:28,639 --> 00:08:30,639
in a hope that like someone logged in

229
00:08:30,639 --> 00:08:32,399
and authenticated to another machine and

230
00:08:32,399 --> 00:08:36,080
sort of grabbing those credentials

231
00:08:38,559 --> 00:08:42,479
so the tsunami botnet so this is

232
00:08:42,479 --> 00:08:43,919
from the beginning we saw this one and

233
00:08:43,919 --> 00:08:45,680
this is the one that they've used all

234
00:08:45,680 --> 00:08:47,120
the way till the end

235
00:08:47,120 --> 00:08:49,519
um it was used sort of as a

236
00:08:49,519 --> 00:08:51,760
secondary access once they've sort of

237
00:08:51,760 --> 00:08:53,600
got control over a machine

238
00:08:53,600 --> 00:08:56,240
and we can see how it's

239
00:08:56,240 --> 00:08:57,440
it's a

240
00:08:57,440 --> 00:09:00,160
like a newer version oh sorry it's a

241
00:09:00,160 --> 00:09:05,120
old version of uh chitin or sigistar tux

242
00:09:05,120 --> 00:09:08,800
these are two like uh

243
00:09:08,800 --> 00:09:10,720
incarnation of sort of like this this

244
00:09:10,720 --> 00:09:12,959
malware that you can find source code on

245
00:09:12,959 --> 00:09:14,399
github there's plenty of like

246
00:09:14,399 --> 00:09:16,480
repositories with it

247
00:09:16,480 --> 00:09:18,560
this one that they're using doesn't have

248
00:09:18,560 --> 00:09:20,640
the new functionality so it's taken from

249
00:09:20,640 --> 00:09:22,399
one of the original sort of

250
00:09:22,399 --> 00:09:23,680
source code

251
00:09:23,680 --> 00:09:25,839
and as i said it has the ddos

252
00:09:25,839 --> 00:09:28,080
functionality but it also provides a

253
00:09:28,080 --> 00:09:29,839
shell access

254
00:09:29,839 --> 00:09:33,279
and the way they it it ran on there when

255
00:09:33,279 --> 00:09:35,279
they infected it it will change its name

256
00:09:35,279 --> 00:09:38,160
to sort of masquerading as a kernel

257
00:09:38,160 --> 00:09:40,480
thread

258
00:09:40,560 --> 00:09:43,360
the the rat hole as i said it's just an

259
00:09:43,360 --> 00:09:45,040
open source back door

260
00:09:45,040 --> 00:09:48,000
uh it uses blowfish for the encryption

261
00:09:48,000 --> 00:09:49,440
and

262
00:09:49,440 --> 00:09:51,120
the interesting bit is like the key that

263
00:09:51,120 --> 00:09:53,920
they had was um team tnt

264
00:09:53,920 --> 00:09:55,519
so they started kind of putting their

265
00:09:55,519 --> 00:09:58,240
mark on their stuff

266
00:09:58,320 --> 00:09:59,680
now

267
00:09:59,680 --> 00:10:01,360
those were kind of the artifacts that we

268
00:10:01,360 --> 00:10:03,120
could get from where they started to

269
00:10:03,120 --> 00:10:05,360
utilize sort of like the team tnt

270
00:10:05,360 --> 00:10:08,560
but luckily um this rat hole binary was

271
00:10:08,560 --> 00:10:11,440
actually uploaded to virustotal a couple

272
00:10:11,440 --> 00:10:13,040
of months earlier

273
00:10:13,040 --> 00:10:14,720
and so here here you have sort of like

274
00:10:14,720 --> 00:10:17,040
the posting of it when it was first

275
00:10:17,040 --> 00:10:18,959
uploaded

276
00:10:18,959 --> 00:10:21,200
and sort of utilizing where this one was

277
00:10:21,200 --> 00:10:22,800
shared from we could actually pull back

278
00:10:22,800 --> 00:10:25,360
and find other activity that's that

279
00:10:25,360 --> 00:10:27,680
they've had done before

280
00:10:27,680 --> 00:10:29,760
and the interesting bit here is in the

281
00:10:29,760 --> 00:10:33,040
screenshot down the other user with a

282
00:10:33,040 --> 00:10:36,160
username called hilda and then

283
00:10:36,160 --> 00:10:39,200
the password if you crack it is uh hilda

284
00:10:39,200 --> 00:10:40,880
is a guard so

285
00:10:40,880 --> 00:10:43,120
this is a name that you will see it was

286
00:10:43,120 --> 00:10:45,040
both in sort of like the copyright

287
00:10:45,040 --> 00:10:48,079
and you'll see sort of even like in all

288
00:10:48,079 --> 00:10:51,279
of the activities that they have

289
00:10:54,399 --> 00:10:57,360
all right so spring 2020 that's when we

290
00:10:57,360 --> 00:10:59,360
saw the major shift

291
00:10:59,360 --> 00:11:02,399
to targeting docker and not only redis

292
00:11:02,399 --> 00:11:04,720
but also in spring 2020 the first

293
00:11:04,720 --> 00:11:07,519
documentation of team tnt's activity was

294
00:11:07,519 --> 00:11:09,440
published by trend micro

295
00:11:09,440 --> 00:11:11,680
so that's when other vendors started to

296
00:11:11,680 --> 00:11:14,920
track them

297
00:11:26,079 --> 00:11:26,839
thank

298
00:11:26,839 --> 00:11:30,959
you so spring 2020 uh that one that

299
00:11:30,959 --> 00:11:32,800
that's when the first documentation of

300
00:11:32,800 --> 00:11:36,240
team tnt was published by trent micro

301
00:11:36,240 --> 00:11:38,480
and that's where the major shift to

302
00:11:38,480 --> 00:11:42,000
targeting docker uh environments

303
00:11:42,000 --> 00:11:43,760
made by team tnt

304
00:11:43,760 --> 00:11:46,320
but they still continue to use open

305
00:11:46,320 --> 00:11:49,279
source tools and scripts to deliver the

306
00:11:49,279 --> 00:11:51,200
threat and carry on the malicious

307
00:11:51,200 --> 00:11:53,360
activity

308
00:11:53,360 --> 00:11:56,399
to target any an exposed docker instance

309
00:11:56,399 --> 00:11:58,720
they first would scan the network using

310
00:11:58,720 --> 00:12:01,760
maskin and zigreb to open source tools

311
00:12:01,760 --> 00:12:04,000
once they would find the dock and expose

312
00:12:04,000 --> 00:12:06,320
docker instance they would create

313
00:12:06,320 --> 00:12:08,320
a legitimate image

314
00:12:08,320 --> 00:12:11,440
of alpine and set it to execute to

315
00:12:11,440 --> 00:12:13,440
download a certain script that will

316
00:12:13,440 --> 00:12:15,519
download all the other scripts that will

317
00:12:15,519 --> 00:12:16,880
execute

318
00:12:16,880 --> 00:12:19,839
that data

319
00:12:19,839 --> 00:12:22,480
and similar to what we saw before we

320
00:12:22,480 --> 00:12:24,639
have one script that we'll call another

321
00:12:24,639 --> 00:12:26,800
one and then each script has its own

322
00:12:26,800 --> 00:12:28,560
dedicated

323
00:12:28,560 --> 00:12:31,519
task could be installing persistence

324
00:12:31,519 --> 00:12:34,720
evaded detection and executing the next

325
00:12:34,720 --> 00:12:38,560
components of the attack

326
00:12:38,560 --> 00:12:40,480
and an interesting thing that we were

327
00:12:40,480 --> 00:12:42,800
able to find is when we looked into the

328
00:12:42,800 --> 00:12:45,760
different scripts we found a url

329
00:12:45,760 --> 00:12:48,240
and then we analyzed what other scripts

330
00:12:48,240 --> 00:12:51,120
communicate or using this url

331
00:12:51,120 --> 00:12:54,240
so we found another script on virustotal

332
00:12:54,240 --> 00:12:56,079
and the interesting thing

333
00:12:56,079 --> 00:12:58,560
is that it didn't target docker it

334
00:12:58,560 --> 00:13:01,839
targeted redis but it was uploaded in

335
00:13:01,839 --> 00:13:03,519
spring 2020.

336
00:13:03,519 --> 00:13:05,680
so it means that team tnt didn't

337
00:13:05,680 --> 00:13:08,240
entirely shift their focus from redis to

338
00:13:08,240 --> 00:13:11,680
docker rather they expanded their

339
00:13:11,680 --> 00:13:13,519
victim range

340
00:13:13,519 --> 00:13:15,519
and another interesting thing is that

341
00:13:15,519 --> 00:13:18,320
this script still has two detections on

342
00:13:18,320 --> 00:13:21,320
virustotal

343
00:13:21,519 --> 00:13:24,320
and spring 2020 is when

344
00:13:24,320 --> 00:13:26,880
coveted pandemic spread and affected

345
00:13:26,880 --> 00:13:28,880
each and every one of us

346
00:13:28,880 --> 00:13:30,959
many threat actors still using the

347
00:13:30,959 --> 00:13:33,760
pandemic to deliver threats and phishing

348
00:13:33,760 --> 00:13:34,800
attacks

349
00:13:34,800 --> 00:13:38,079
but team tnt started to use covenanting

350
00:13:38,079 --> 00:13:40,480
keywords and buzzwords in their scripts

351
00:13:40,480 --> 00:13:43,760
and urls for no obvious reason

352
00:13:43,760 --> 00:13:45,760
maybe they decided just to go with the

353
00:13:45,760 --> 00:13:49,839
flow with other threat actors

354
00:13:51,600 --> 00:13:52,959
thank you

355
00:13:52,959 --> 00:13:55,360
so the summer

356
00:13:55,360 --> 00:13:57,760
i'd say the kind of they

357
00:13:57,760 --> 00:13:58,959
they moved the way sort of from the

358
00:13:58,959 --> 00:14:01,360
reddest part and docker became sort of

359
00:14:01,360 --> 00:14:02,880
their bread and butter

360
00:14:02,880 --> 00:14:05,279
now there was some minor changes to it

361
00:14:05,279 --> 00:14:06,399
um

362
00:14:06,399 --> 00:14:08,160
here is one of the setup scripts that he

363
00:14:08,160 --> 00:14:09,440
they utilized

364
00:14:09,440 --> 00:14:13,120
um where he first tries to fetch a

365
00:14:13,120 --> 00:14:15,440
what appears to be a jpeg but it's just

366
00:14:15,440 --> 00:14:17,040
a shell script

367
00:14:17,040 --> 00:14:17,920
and

368
00:14:17,920 --> 00:14:19,519
the sort of the new part here was like

369
00:14:19,519 --> 00:14:22,480
if that failed they just base64 encoded

370
00:14:22,480 --> 00:14:26,800
the shell script uh as an alternative um

371
00:14:26,800 --> 00:14:29,120
so if they because of the uh

372
00:14:29,120 --> 00:14:30,399
the or bar

373
00:14:30,399 --> 00:14:34,079
in in the uh in the double or

374
00:14:34,079 --> 00:14:36,160
if the first command fails it will do

375
00:14:36,160 --> 00:14:37,600
the other one so

376
00:14:37,600 --> 00:14:39,519
even if their server goes down it would

377
00:14:39,519 --> 00:14:42,720
still sort of spread through it

378
00:14:42,800 --> 00:14:43,600
the

379
00:14:43,600 --> 00:14:45,600
other kind of shift we saw here was that

380
00:14:45,600 --> 00:14:48,079
the actual started to go more hardcore

381
00:14:48,079 --> 00:14:51,440
with regards to root kits so here is

382
00:14:51,440 --> 00:14:53,360
sort of a script that downloads the

383
00:14:53,360 --> 00:14:56,639
amorphon this is a open source kernel

384
00:14:56,639 --> 00:15:00,399
level root kit and it would download and

385
00:15:00,399 --> 00:15:03,199
compile it on the machine and load the

386
00:15:03,199 --> 00:15:05,519
kernel module to hide the mining that

387
00:15:05,519 --> 00:15:08,160
was going on

388
00:15:08,880 --> 00:15:10,160
the credential

389
00:15:10,160 --> 00:15:12,639
harvesting expanded and

390
00:15:12,639 --> 00:15:15,519
here you have a sort of a

391
00:15:15,519 --> 00:15:17,120
list of all the different kind of files

392
00:15:17,120 --> 00:15:18,959
where it was going through so

393
00:15:18,959 --> 00:15:20,560
um

394
00:15:20,560 --> 00:15:22,240
it would go through and look for all of

395
00:15:22,240 --> 00:15:26,079
the uh known hosts for ssh all the user

396
00:15:26,079 --> 00:15:28,720
accounts and and ssh keys and things

397
00:15:28,720 --> 00:15:30,800
like that and then it just would loop

398
00:15:30,800 --> 00:15:33,920
through and just try to what would work

399
00:15:33,920 --> 00:15:34,959
um

400
00:15:34,959 --> 00:15:36,880
and sort of just to spread within sort

401
00:15:36,880 --> 00:15:40,439
of like its network

402
00:15:42,800 --> 00:15:45,519
fall 2020 was the time of different

403
00:15:45,519 --> 00:15:48,639
changes and updates in team tnt

404
00:15:48,639 --> 00:15:50,639
the first thing that our research team

405
00:15:50,639 --> 00:15:52,959
was able to find is that they use a tool

406
00:15:52,959 --> 00:15:55,199
called wifscop which is an open source

407
00:15:55,199 --> 00:15:57,600
tool to control and monitor your

408
00:15:57,600 --> 00:15:58,800
containers

409
00:15:58,800 --> 00:16:00,720
and once it's stalled it's relatively

410
00:16:00,720 --> 00:16:02,959
easy to install and once installed it

411
00:16:02,959 --> 00:16:05,199
creates a dashboard that you can access

412
00:16:05,199 --> 00:16:07,040
through the browser

413
00:16:07,040 --> 00:16:09,279
so you have all the files all the

414
00:16:09,279 --> 00:16:11,279
resources all the processes that run on

415
00:16:11,279 --> 00:16:14,399
the container and a really nice shell to

416
00:16:14,399 --> 00:16:16,720
execute commands and it's open in the

417
00:16:16,720 --> 00:16:19,680
browser and it can be set to

418
00:16:19,680 --> 00:16:21,600
to have access from outside of your

419
00:16:21,600 --> 00:16:24,160
network so anyone can access it

420
00:16:24,160 --> 00:16:26,720
so once tmtnt found an exposed docker

421
00:16:26,720 --> 00:16:29,279
instance they would install wifscope and

422
00:16:29,279 --> 00:16:32,240
basically they had a full backdoor

423
00:16:32,240 --> 00:16:35,120
without running or sorry without

424
00:16:35,120 --> 00:16:37,839
developing a backdoor and by using a

425
00:16:37,839 --> 00:16:42,480
legitimate tool so they evaded detection

426
00:16:42,720 --> 00:16:44,560
then once again they expanded the

427
00:16:44,560 --> 00:16:47,279
credential stealing capabilities using

428
00:16:47,279 --> 00:16:49,839
once again open source tools

429
00:16:49,839 --> 00:16:52,800
mimi penguin is similar to mimikots but

430
00:16:52,800 --> 00:16:55,600
only for linux so it dumps all the

431
00:16:55,600 --> 00:16:57,920
processes looks for passwords

432
00:16:57,920 --> 00:17:00,480
and mimi pi does the same but it also

433
00:17:00,480 --> 00:17:02,959
supports extraction of passwords from

434
00:17:02,959 --> 00:17:08,079
http and browser communication

435
00:17:08,880 --> 00:17:10,959
as reported by eset

436
00:17:10,959 --> 00:17:14,799
team dnd started to use izuri so izuri

437
00:17:14,799 --> 00:17:17,919
is a crypter or

438
00:17:17,919 --> 00:17:20,640
or a packer written in goaling and it's

439
00:17:20,640 --> 00:17:22,079
open sourced

440
00:17:22,079 --> 00:17:24,720
and it takes the the payload encrypts it

441
00:17:24,720 --> 00:17:26,160
with aes

442
00:17:26,160 --> 00:17:28,160
and that's how they were able to evade

443
00:17:28,160 --> 00:17:32,760
detection of standard tools

444
00:17:32,880 --> 00:17:35,520
their social media account on twitter

445
00:17:35,520 --> 00:17:38,720
is very active during this time period

446
00:17:38,720 --> 00:17:41,600
and they tweet a lot about their

447
00:17:41,600 --> 00:17:44,240
activity about different things

448
00:17:44,240 --> 00:17:46,480
and that's how we were able to find more

449
00:17:46,480 --> 00:17:48,400
information and better understand this

450
00:17:48,400 --> 00:17:51,120
threat doctor

451
00:17:51,679 --> 00:17:54,400
we took all the tweets and started to

452
00:17:54,400 --> 00:17:56,320
analyze them so

453
00:17:56,320 --> 00:17:58,160
we wanted to understand

454
00:17:58,160 --> 00:18:00,480
what are the active hours of the fred

455
00:18:00,480 --> 00:18:02,480
group maybe to understand where they're

456
00:18:02,480 --> 00:18:03,919
located

457
00:18:03,919 --> 00:18:06,799
and as you can see they're more active

458
00:18:06,799 --> 00:18:09,200
during the late afternoon and evening

459
00:18:09,200 --> 00:18:12,640
however they're active the whole day

460
00:18:12,640 --> 00:18:15,120
and that's how we once again we think

461
00:18:15,120 --> 00:18:16,960
that they're in germany

462
00:18:16,960 --> 00:18:19,280
because of all the tweets that are in

463
00:18:19,280 --> 00:18:23,600
german or talk about german news and

464
00:18:23,600 --> 00:18:26,480
related topics

465
00:18:26,960 --> 00:18:28,799
another very interesting thing is that

466
00:18:28,799 --> 00:18:31,440
they openly talk about their activity

467
00:18:31,440 --> 00:18:34,000
they're not hiding it

468
00:18:34,000 --> 00:18:36,559
and they're not thinking of themselves

469
00:18:36,559 --> 00:18:37,679
of

470
00:18:37,679 --> 00:18:40,640
the bad guys or threat actors

471
00:18:40,640 --> 00:18:42,799
and they're very responsive

472
00:18:42,799 --> 00:18:45,280
with co the researchers and with the

473
00:18:45,280 --> 00:18:46,720
community which is

474
00:18:46,720 --> 00:18:48,240
really rare

475
00:18:48,240 --> 00:18:51,039
so here for example uh they replied to a

476
00:18:51,039 --> 00:18:53,440
research that we posted about one of

477
00:18:53,440 --> 00:18:54,799
their campaigns

478
00:18:54,799 --> 00:18:57,280
and they refer to this

479
00:18:57,280 --> 00:19:00,240
mount trick that we covered a few slides

480
00:19:00,240 --> 00:19:02,640
before

481
00:19:07,440 --> 00:19:08,840
so the

482
00:19:08,840 --> 00:19:11,520
winter so during the win

483
00:19:11,520 --> 00:19:13,919
one of sort of the reports that came out

484
00:19:13,919 --> 00:19:15,440
about the group

485
00:19:15,440 --> 00:19:16,880
from lacework

486
00:19:16,880 --> 00:19:18,799
they

487
00:19:18,799 --> 00:19:20,480
got onto one of the irc servers that

488
00:19:20,480 --> 00:19:22,880
they used to control the tsunami bots

489
00:19:22,880 --> 00:19:25,280
and reported that about 200 affected

490
00:19:25,280 --> 00:19:26,559
bots at

491
00:19:26,559 --> 00:19:28,080
sort of like activity kind of around

492
00:19:28,080 --> 00:19:28,960
that

493
00:19:28,960 --> 00:19:30,000
now

494
00:19:30,000 --> 00:19:32,960
of those 200 it was 90 of them from

495
00:19:32,960 --> 00:19:35,440
unique ip addresses

496
00:19:35,440 --> 00:19:36,400
so

497
00:19:36,400 --> 00:19:37,760
we've already seen that they are very

498
00:19:37,760 --> 00:19:39,679
heavy on like the lateral movement so it

499
00:19:39,679 --> 00:19:41,440
kind of suggests that they are actually

500
00:19:41,440 --> 00:19:43,600
effective in managing the moves within

501
00:19:43,600 --> 00:19:46,880
the network um also the threat act is

502
00:19:46,880 --> 00:19:48,799
also reported of a couple of vendors

503
00:19:48,799 --> 00:19:50,320
that they keep sort of trolling into

504
00:19:50,320 --> 00:19:53,120
their network and it's he kind of found

505
00:19:53,120 --> 00:19:55,200
annoy that he just kept getting in and

506
00:19:55,200 --> 00:19:58,240
stuck in their networks

507
00:19:58,640 --> 00:20:00,799
in general from sort of like the the ip

508
00:20:00,799 --> 00:20:02,640
addresses most of it was just cloud

509
00:20:02,640 --> 00:20:05,679
based cloud providers

510
00:20:05,679 --> 00:20:09,679
majority of them were based in asia but

511
00:20:09,679 --> 00:20:12,000
not just like asian companies and just

512
00:20:12,000 --> 00:20:14,720
their endpoints

513
00:20:14,720 --> 00:20:16,799
so you have the vendors up there indian

514
00:20:16,799 --> 00:20:19,280
in general who was there

515
00:20:19,280 --> 00:20:21,919
additionally to this now they all also

516
00:20:21,919 --> 00:20:24,480
added a secondary kind of method for

517
00:20:24,480 --> 00:20:26,480
their rootkit functionality

518
00:20:26,480 --> 00:20:29,200
so they started to download this lib

519
00:20:29,200 --> 00:20:33,360
process hider it's a open source tool uh

520
00:20:33,360 --> 00:20:34,720
kind of followed with the same theme as

521
00:20:34,720 --> 00:20:36,320
they've always been doing

522
00:20:36,320 --> 00:20:37,679
um

523
00:20:37,679 --> 00:20:40,240
utilizing a different method

524
00:20:40,240 --> 00:20:42,400
to achieve sort of a user land based

525
00:20:42,400 --> 00:20:44,159
root kit which makes it a little bit

526
00:20:44,159 --> 00:20:46,320
more portable

527
00:20:46,320 --> 00:20:50,000
it hooks like it loads itself into

528
00:20:50,000 --> 00:20:51,520
processes using

529
00:20:51,520 --> 00:20:53,840
the linker uh so you can sort of

530
00:20:53,840 --> 00:20:56,320
manipulate the the world around or like

531
00:20:56,320 --> 00:20:58,240
the infected machine and sort of stay

532
00:20:58,240 --> 00:21:00,559
hidden

533
00:21:00,559 --> 00:21:02,559
the other shift that happened here was

534
00:21:02,559 --> 00:21:04,720
that they moved away from docker and

535
00:21:04,720 --> 00:21:07,520
started to directly target kubernetes

536
00:21:07,520 --> 00:21:09,120
um

537
00:21:09,120 --> 00:21:11,280
we also saw more use like pretty much

538
00:21:11,280 --> 00:21:13,200
all of their binaries at this point were

539
00:21:13,200 --> 00:21:15,120
using the same packer to sort of stay

540
00:21:15,120 --> 00:21:17,840
hidden

541
00:21:18,720 --> 00:21:20,159
one thing that

542
00:21:20,159 --> 00:21:23,039
we were surprised to kind of find was

543
00:21:23,039 --> 00:21:23,919
when

544
00:21:23,919 --> 00:21:25,280
we're sort of looking at some of the

545
00:21:25,280 --> 00:21:26,720
files that sort of been or like

546
00:21:26,720 --> 00:21:28,240
connections that

547
00:21:28,240 --> 00:21:30,799
virustotal had recorded for like their

548
00:21:30,799 --> 00:21:31,679
uh

549
00:21:31,679 --> 00:21:33,039
infrastructure

550
00:21:33,039 --> 00:21:36,320
we noticed these urls um

551
00:21:36,320 --> 00:21:38,400
and some of these files are detected as

552
00:21:38,400 --> 00:21:41,440
windows files or pa files

553
00:21:41,440 --> 00:21:42,720
so

554
00:21:42,720 --> 00:21:44,000
it could be that they were sort of

555
00:21:44,000 --> 00:21:47,840
moving on to targeting windows servers

556
00:21:47,840 --> 00:21:49,440
uh and

557
00:21:49,440 --> 00:21:51,919
one of those files was it's just a

558
00:21:51,919 --> 00:21:54,799
compile auto-it script that is called

559
00:21:54,799 --> 00:21:56,880
like a they call it a sniffer and it's

560
00:21:56,880 --> 00:21:59,600
pretty much what it is it will actually

561
00:21:59,600 --> 00:22:01,840
just install a

562
00:22:01,840 --> 00:22:04,000
win pcap and then perform packet

563
00:22:04,000 --> 00:22:06,320
capturing and look for specific

564
00:22:06,320 --> 00:22:07,840
credentials and stuff like that on the

565
00:22:07,840 --> 00:22:09,360
wire

566
00:22:09,360 --> 00:22:13,039
and the other one is a

567
00:22:13,039 --> 00:22:15,840
miner for that is specifically compiled

568
00:22:15,840 --> 00:22:19,039
for uh cuda so like the nvidia graphics

569
00:22:19,039 --> 00:22:20,480
card

570
00:22:20,480 --> 00:22:22,320
additionally to that this drop miner

571
00:22:22,320 --> 00:22:24,640
also will drop a

572
00:22:24,640 --> 00:22:26,480
a windows driver

573
00:22:26,480 --> 00:22:26,820
um

574
00:22:26,820 --> 00:22:28,000
[Music]

575
00:22:28,000 --> 00:22:30,880
it's this driver um

576
00:22:30,880 --> 00:22:33,360
allows for root sort of like ring zero

577
00:22:33,360 --> 00:22:34,400
access

578
00:22:34,400 --> 00:22:37,039
and it it's actually part of the miner

579
00:22:37,039 --> 00:22:38,480
itself

580
00:22:38,480 --> 00:22:39,280
to

581
00:22:39,280 --> 00:22:42,000
set up a couple of uh cpu registers to

582
00:22:42,000 --> 00:22:43,679
improve performance

583
00:22:43,679 --> 00:22:44,559
and

584
00:22:44,559 --> 00:22:46,960
so it's part of the legitimate run miner

585
00:22:46,960 --> 00:22:49,360
but probably not recommended if you to

586
00:22:49,360 --> 00:22:51,520
have it on your machine because a user

587
00:22:51,520 --> 00:22:53,280
lane can reach into

588
00:22:53,280 --> 00:22:56,880
to ring zero and do any manipulation

589
00:22:56,880 --> 00:22:58,320
for the sort of like this

590
00:22:58,320 --> 00:23:00,320
via this driver there's no sort of

591
00:23:00,320 --> 00:23:03,200
protection in that

592
00:23:06,960 --> 00:23:09,760
so next they continued to extend their

593
00:23:09,760 --> 00:23:12,720
credential staying capabilities uh as

594
00:23:12,720 --> 00:23:16,720
reported by trend micro so they uh moved

595
00:23:16,720 --> 00:23:19,919
from targeting only aws or ssh looking

596
00:23:19,919 --> 00:23:20,720
for

597
00:23:20,720 --> 00:23:23,280
crypto wallets ids

598
00:23:23,280 --> 00:23:26,880
github api keys and so on

599
00:23:26,880 --> 00:23:28,480
and on top of that

600
00:23:28,480 --> 00:23:31,360
they use the aws cli tool which is a

601
00:23:31,360 --> 00:23:33,360
legitimate tool that provides lots of

602
00:23:33,360 --> 00:23:36,640
information about the instances the

603
00:23:36,640 --> 00:23:39,200
um the framework the volumes the network

604
00:23:39,200 --> 00:23:42,400
connection that's only a small part of a

605
00:23:42,400 --> 00:23:45,360
huge script full with commands of aws

606
00:23:45,360 --> 00:23:48,640
cli that team tnt executed on a

607
00:23:48,640 --> 00:23:49,919
compromised

608
00:23:49,919 --> 00:23:52,480
environment

609
00:23:53,200 --> 00:23:54,799
and

610
00:23:54,799 --> 00:23:58,960
a report was released saying that 50

611
00:23:58,960 --> 00:24:02,320
000 ip's from china

612
00:24:02,320 --> 00:24:05,039
were compromised by team tnt

613
00:24:05,039 --> 00:24:06,880
and that's where they

614
00:24:06,880 --> 00:24:10,559
replied and said that's not us and the

615
00:24:10,559 --> 00:24:12,720
numbers are not quite right and you

616
00:24:12,720 --> 00:24:16,000
should check your facts

617
00:24:16,080 --> 00:24:19,600
and then another researcher

618
00:24:19,600 --> 00:24:22,240
connected some scripts to one of tim

619
00:24:22,240 --> 00:24:25,120
tnt's campaigns once again they replied

620
00:24:25,120 --> 00:24:28,320
saying that's not us and someone else is

621
00:24:28,320 --> 00:24:32,720
using our old scripts or our techniques

622
00:24:32,720 --> 00:24:33,520
so

623
00:24:33,520 --> 00:24:35,919
it seems like some sort of a copycat

624
00:24:35,919 --> 00:24:38,960
someone else is using team tnt's scripts

625
00:24:38,960 --> 00:24:41,600
and techniques

626
00:24:42,640 --> 00:24:45,600
because another report that attributed

627
00:24:45,600 --> 00:24:46,960
some more

628
00:24:46,960 --> 00:24:49,440
attacks and campaigns to team tnt was

629
00:24:49,440 --> 00:24:52,400
published and once again they responded

630
00:24:52,400 --> 00:24:55,039
so we learned that first of all someone

631
00:24:55,039 --> 00:24:58,880
is trying to use team tnt's artifacts

632
00:24:58,880 --> 00:25:01,919
to spread more mueller

633
00:25:01,919 --> 00:25:06,559
and team tnt refused to take the false

634
00:25:07,360 --> 00:25:10,399
the false connection

635
00:25:13,520 --> 00:25:15,840
so

636
00:25:17,039 --> 00:25:19,440
it's kind of idea with like the copycat

637
00:25:19,440 --> 00:25:20,880
obviously didn't

638
00:25:20,880 --> 00:25:23,120
go well with them and so they kind of

639
00:25:23,120 --> 00:25:25,760
decided to come up with a way of like

640
00:25:25,760 --> 00:25:28,559
how can we make sure that

641
00:25:28,559 --> 00:25:30,240
security

642
00:25:30,240 --> 00:25:32,000
researchers and things like and people

643
00:25:32,000 --> 00:25:34,000
like us actually would know that this is

644
00:25:34,000 --> 00:25:35,760
team tnt

645
00:25:35,760 --> 00:25:38,159
so they put this in this information out

646
00:25:38,159 --> 00:25:39,520
saying that they would

647
00:25:39,520 --> 00:25:41,600
start sort of tagging the stuff which

648
00:25:41,600 --> 00:25:43,360
include like a link where you can get

649
00:25:43,360 --> 00:25:45,679
the most recent version of the shell

650
00:25:45,679 --> 00:25:48,480
scripts that we using

651
00:25:48,480 --> 00:25:51,039
and they also did that so they added

652
00:25:51,039 --> 00:25:53,919
this to the headers for all of their

653
00:25:53,919 --> 00:25:55,520
shell scripts

654
00:25:55,520 --> 00:25:57,679
tells you what it sort of what it is

655
00:25:57,679 --> 00:25:59,919
and the name of it and the aversion

656
00:25:59,919 --> 00:26:02,880
number and also sort of like the

657
00:26:02,880 --> 00:26:06,400
the date when it was created

658
00:26:07,039 --> 00:26:08,320
this was

659
00:26:08,320 --> 00:26:10,799
kind of part of a new kind of campaign

660
00:26:10,799 --> 00:26:12,799
that they called during the summer

661
00:26:12,799 --> 00:26:14,320
called chimera

662
00:26:14,320 --> 00:26:15,600
and

663
00:26:15,600 --> 00:26:17,039
you have sort of they put up this new

664
00:26:17,039 --> 00:26:19,840
website and you can see kind of like the

665
00:26:19,840 --> 00:26:21,279
where they were targeting which

666
00:26:21,279 --> 00:26:23,919
different instances uh so we have both

667
00:26:23,919 --> 00:26:25,679
docker kubernetes and

668
00:26:25,679 --> 00:26:28,000
weave scope um

669
00:26:28,000 --> 00:26:29,279
and they were trying to kind of create

670
00:26:29,279 --> 00:26:31,039
like a live dashboard to say like how

671
00:26:31,039 --> 00:26:33,279
many how many machines have we managed

672
00:26:33,279 --> 00:26:35,600
to compromise and how many hash what's

673
00:26:35,600 --> 00:26:37,679
our hash rate

674
00:26:37,679 --> 00:26:39,039
um

675
00:26:39,039 --> 00:26:40,240
but

676
00:26:40,240 --> 00:26:42,640
clearly like this overwhelming of like

677
00:26:42,640 --> 00:26:44,720
copycat cats

678
00:26:44,720 --> 00:26:46,880
and kind of overwhelmed them and then

679
00:26:46,880 --> 00:26:49,200
eventually towards like the fall

680
00:26:49,200 --> 00:26:51,520
the activity dropped

681
00:26:51,520 --> 00:26:53,039
and then

682
00:26:53,039 --> 00:26:54,960
like in november they post sort of put

683
00:26:54,960 --> 00:26:56,960
this information this announcement out

684
00:26:56,960 --> 00:26:59,279
where they sort of said that they were

685
00:26:59,279 --> 00:27:00,480
done

686
00:27:00,480 --> 00:27:02,480
and they put a

687
00:27:02,480 --> 00:27:05,760
this url here it just is a link to a

688
00:27:05,760 --> 00:27:07,840
i think it was a zip file or a web

689
00:27:07,840 --> 00:27:09,360
directory where they have all their

690
00:27:09,360 --> 00:27:12,159
tooling including source code

691
00:27:12,159 --> 00:27:13,679
so

692
00:27:13,679 --> 00:27:16,080
unfortunately what that leads to today

693
00:27:16,080 --> 00:27:18,559
is that you see a lot of like team tnt

694
00:27:18,559 --> 00:27:20,640
stuff

695
00:27:20,640 --> 00:27:22,799
but it's all coming from like this stash

696
00:27:22,799 --> 00:27:24,240
so there's a lot of like threat actor

697
00:27:24,240 --> 00:27:26,960
just sort of utilizing this

698
00:27:26,960 --> 00:27:29,279
their um

699
00:27:29,279 --> 00:27:31,760
twitter handle has kind of gone quiet in

700
00:27:31,760 --> 00:27:33,360
terms of the

701
00:27:33,360 --> 00:27:35,679
crypto mining part they still tweet

702
00:27:35,679 --> 00:27:39,039
especially around like german

703
00:27:39,039 --> 00:27:41,039
policies and politics and stuff like

704
00:27:41,039 --> 00:27:42,880
that

705
00:27:42,880 --> 00:27:44,559
but they kind of have tried to moved

706
00:27:44,559 --> 00:27:45,840
away from

707
00:27:45,840 --> 00:27:49,520
the crypto jacking part

708
00:27:49,520 --> 00:27:51,200
so

709
00:27:51,200 --> 00:27:53,200
just sort of just to conclude sort of

710
00:27:53,200 --> 00:27:56,799
the the conversation here um

711
00:27:56,799 --> 00:27:58,960
so in general we would say like the

712
00:27:58,960 --> 00:28:01,120
crypto jacking is like one of the majors

713
00:28:01,120 --> 00:28:03,440
or threat to linux environments

714
00:28:03,440 --> 00:28:05,760
there's actually a lot of threat actors

715
00:28:05,760 --> 00:28:08,559
out there doing it um

716
00:28:08,559 --> 00:28:11,120
the barrier to entry is relatively

717
00:28:11,120 --> 00:28:14,080
low for them they utilize this all the

718
00:28:14,080 --> 00:28:16,000
same exploits

719
00:28:16,000 --> 00:28:17,919
and sort of to protect against this is

720
00:28:17,919 --> 00:28:19,679
relatively easy it's just make sure

721
00:28:19,679 --> 00:28:20,399
you're

722
00:28:20,399 --> 00:28:22,559
you use no like solid credentials so you

723
00:28:22,559 --> 00:28:24,640
know no weak passwords

724
00:28:24,640 --> 00:28:28,320
uh patch your stuff uh and don't ex like

725
00:28:28,320 --> 00:28:31,039
expose stuff that shouldn't be exposed

726
00:28:31,039 --> 00:28:34,559
um what team tnt utilized a lot was

727
00:28:34,559 --> 00:28:36,159
the

728
00:28:36,159 --> 00:28:38,240
misconfiguration of docker

729
00:28:38,240 --> 00:28:40,320
servers that had the api

730
00:28:40,320 --> 00:28:41,440
listening

731
00:28:41,440 --> 00:28:44,080
on the internet which allowed anyone to

732
00:28:44,080 --> 00:28:46,960
send whatever command you wanted to the

733
00:28:46,960 --> 00:28:49,200
the back end and spin up whatever images

734
00:28:49,200 --> 00:28:51,440
you wanted

735
00:28:51,440 --> 00:28:54,240
now in during this time team tnt was

736
00:28:54,240 --> 00:28:56,480
sort of like one of those uh predominant

737
00:28:56,480 --> 00:28:58,640
actor they sort of resulted in the most

738
00:28:58,640 --> 00:29:00,960
compromised

739
00:29:00,960 --> 00:29:02,399
machines

740
00:29:02,399 --> 00:29:04,799
and their focus was

741
00:29:04,799 --> 00:29:06,159
most of the time around docker and

742
00:29:06,159 --> 00:29:07,760
kubernetes

743
00:29:07,760 --> 00:29:08,720
and

744
00:29:08,720 --> 00:29:09,520
the

745
00:29:09,520 --> 00:29:10,960
interesting bit

746
00:29:10,960 --> 00:29:13,120
is that compared to all of the other

747
00:29:13,120 --> 00:29:15,120
sort of crypto

748
00:29:15,120 --> 00:29:17,760
jacking actors that we've seen out there

749
00:29:17,760 --> 00:29:19,600
they had a very

750
00:29:19,600 --> 00:29:22,080
strong like public presence

751
00:29:22,080 --> 00:29:24,480
where they

752
00:29:24,640 --> 00:29:26,640
would tell threat researchers if they

753
00:29:26,640 --> 00:29:27,919
were wrong

754
00:29:27,919 --> 00:29:29,840
uh and also as

755
00:29:29,840 --> 00:29:31,600
we saw some of these tweets they would

756
00:29:31,600 --> 00:29:32,640
share

757
00:29:32,640 --> 00:29:35,440
like how successful they were um which

758
00:29:35,440 --> 00:29:36,320
is

759
00:29:36,320 --> 00:29:38,640
quite of an interesting uh

760
00:29:38,640 --> 00:29:41,840
sort of scenario

761
00:29:42,159 --> 00:29:43,840
so

762
00:29:43,840 --> 00:29:47,039
that leaves us with it

763
00:29:50,080 --> 00:29:52,840
so thank you akin thank you

764
00:29:52,840 --> 00:29:55,279
nicole some question

765
00:29:55,279 --> 00:29:57,440
for

766
00:29:57,440 --> 00:29:59,520
okay there we have one

767
00:29:59,520 --> 00:30:01,840
from me

768
00:30:02,320 --> 00:30:03,919
thank you for the talk great talk it's

769
00:30:03,919 --> 00:30:06,159
very interesting um

770
00:30:06,159 --> 00:30:08,399
i'm curious about something because we

771
00:30:08,399 --> 00:30:10,720
are following another group

772
00:30:10,720 --> 00:30:13,039
which is basically using tor web

773
00:30:13,039 --> 00:30:15,360
gateways and accessing hpc

774
00:30:15,360 --> 00:30:17,120
infrastructures

775
00:30:17,120 --> 00:30:19,520
exactly same techniques the tools are

776
00:30:19,520 --> 00:30:21,279
even i think the same scripts are the

777
00:30:21,279 --> 00:30:24,960
same i don't see the german part

778
00:30:24,960 --> 00:30:27,919
and for what we know this seems chinese

779
00:30:27,919 --> 00:30:29,360
because the first connection they do to

780
00:30:29,360 --> 00:30:31,120
their backend infrastructures is from

781
00:30:31,120 --> 00:30:32,720
china

782
00:30:32,720 --> 00:30:34,480
and when we look at the translations we

783
00:30:34,480 --> 00:30:36,320
were wondering if it's not chinese using

784
00:30:36,320 --> 00:30:38,080
automatic translations

785
00:30:38,080 --> 00:30:40,080
or something like that

786
00:30:40,080 --> 00:30:40,960
did you

787
00:30:40,960 --> 00:30:43,360
try with the dataset that you have to

788
00:30:43,360 --> 00:30:45,279
automatically translate all the text to

789
00:30:45,279 --> 00:30:47,600
see which one makes sense

790
00:30:47,600 --> 00:30:49,120
to see if the original translation is

791
00:30:49,120 --> 00:30:52,799
not coming from another language

792
00:30:52,799 --> 00:30:55,600
um good question no we actually didn't

793
00:30:55,600 --> 00:30:58,000
do that

794
00:30:58,480 --> 00:31:00,000
most of the stuff we were looking at we

795
00:31:00,000 --> 00:31:01,360
looked at the

796
00:31:01,360 --> 00:31:02,880
historical part and we just was

797
00:31:02,880 --> 00:31:05,760
following along as they were changing

798
00:31:05,760 --> 00:31:07,600
the scripts

799
00:31:07,600 --> 00:31:11,200
when sort of like that copy cat stuff

800
00:31:11,200 --> 00:31:14,000
came on board

801
00:31:15,519 --> 00:31:16,880
because we looked at so many of the

802
00:31:16,880 --> 00:31:18,159
scripts we could see that this was a

803
00:31:18,159 --> 00:31:20,399
hodgepodge of like it's not theirs it

804
00:31:20,399 --> 00:31:22,640
doesn't follow along with what they were

805
00:31:22,640 --> 00:31:24,399
doing yes it's like it was pulling the

806
00:31:24,399 --> 00:31:25,600
stuff from

807
00:31:25,600 --> 00:31:27,840
their old server

808
00:31:27,840 --> 00:31:30,720
uh which i think was a compromised

809
00:31:30,720 --> 00:31:33,200
web server

810
00:31:33,200 --> 00:31:35,120
but there was so much other stuff going

811
00:31:35,120 --> 00:31:37,919
on that just it was such a drastic

812
00:31:37,919 --> 00:31:38,960
change

813
00:31:38,960 --> 00:31:40,799
it's like we saw like

814
00:31:40,799 --> 00:31:41,600
they

815
00:31:41,600 --> 00:31:43,200
used this technique and then you would

816
00:31:43,200 --> 00:31:44,880
see this completely different thing and

817
00:31:44,880 --> 00:31:47,120
then back to that normal again and it

818
00:31:47,120 --> 00:31:49,600
made no sense those jumps

819
00:31:49,600 --> 00:31:52,080
and also when we looked back further it

820
00:31:52,080 --> 00:31:53,679
was the same thing as they were saying

821
00:31:53,679 --> 00:31:56,240
that those are old scripts

822
00:31:56,240 --> 00:31:58,159
and they match pretty well with the

823
00:31:58,159 --> 00:32:00,559
older stuff too there too so it kind of

824
00:32:00,559 --> 00:32:02,799
made sense um

825
00:32:02,799 --> 00:32:03,760
the

826
00:32:03,760 --> 00:32:05,760
some of the paths too was very similar

827
00:32:05,760 --> 00:32:07,200
to like another

828
00:32:07,200 --> 00:32:09,440
um

829
00:32:09,440 --> 00:32:12,159
krypto miner i think some vendors are

830
00:32:12,159 --> 00:32:14,720
tracking it as system d minor or

831
00:32:14,720 --> 00:32:16,880
something like that

832
00:32:16,880 --> 00:32:18,559
so they were the one that sort of picked

833
00:32:18,559 --> 00:32:19,519
up

834
00:32:19,519 --> 00:32:21,600
but yeah

835
00:32:21,600 --> 00:32:22,880
thank you for question we have another

836
00:32:22,880 --> 00:32:24,080
one

837
00:32:24,080 --> 00:32:25,039
yeah

838
00:32:25,039 --> 00:32:27,919
comment to the to the previous question

839
00:32:27,919 --> 00:32:29,919
and when when you show the tweets as a

840
00:32:29,919 --> 00:32:33,039
native german speaker uh you know they

841
00:32:33,039 --> 00:32:35,279
read all great grammatically until at

842
00:32:35,279 --> 00:32:37,679
some point and then i was like what

843
00:32:37,679 --> 00:32:39,360
grammar is wrong here now

844
00:32:39,360 --> 00:32:40,799
are they smoking potter or something i

845
00:32:40,799 --> 00:32:42,640
don't know what yeah but so maybe that

846
00:32:42,640 --> 00:32:44,640
there is an indication that there is

847
00:32:44,640 --> 00:32:47,840
something there anyway my question is or

848
00:32:47,840 --> 00:32:50,799
my comment is that um when you run

849
00:32:50,799 --> 00:32:53,760
docker by default on ubuntu at least

850
00:32:53,760 --> 00:32:56,720
debian as well you totally evade

851
00:32:56,720 --> 00:32:59,120
ufw or ip tables

852
00:32:59,120 --> 00:33:00,880
so maybe that is something a really

853
00:33:00,880 --> 00:33:02,399
quick trick for

854
00:33:02,399 --> 00:33:05,279
lots of linux systems to actually

855
00:33:05,279 --> 00:33:08,159
not have that by default because

856
00:33:08,159 --> 00:33:10,159
many system admins might not even be

857
00:33:10,159 --> 00:33:12,159
aware that it's actually docker opens

858
00:33:12,159 --> 00:33:13,200
that

859
00:33:13,200 --> 00:33:15,200
and they configured the ip tables

860
00:33:15,200 --> 00:33:16,559
properly but

861
00:33:16,559 --> 00:33:19,919
then docker goes just next to it

862
00:33:19,919 --> 00:33:21,679
yeah did you encounter that in your

863
00:33:21,679 --> 00:33:23,360
research also

864
00:33:23,360 --> 00:33:24,480
i think

865
00:33:24,480 --> 00:33:26,799
it's not part of the the research

866
00:33:26,799 --> 00:33:28,080
per se

867
00:33:28,080 --> 00:33:30,159
do you want to talk yeah i know you did

868
00:33:30,159 --> 00:33:32,080
some research on this part

869
00:33:32,080 --> 00:33:34,320
the initial configuration of docker when

870
00:33:34,320 --> 00:33:36,480
it's installed it actually doesn't

871
00:33:36,480 --> 00:33:38,880
expose these ports

872
00:33:38,880 --> 00:33:39,919
and

873
00:33:39,919 --> 00:33:42,720
i just saw different guides that

874
00:33:42,720 --> 00:33:44,799
guide people to expose these ports

875
00:33:44,799 --> 00:33:46,559
because then it will be easier to access

876
00:33:46,559 --> 00:33:48,080
the containers

877
00:33:48,080 --> 00:33:50,320
so that's how i think most of the

878
00:33:50,320 --> 00:33:53,600
misconfiguration happen

879
00:33:55,679 --> 00:33:58,159
thank you there is no more questions so

880
00:33:58,159 --> 00:34:00,960
thank you again to joahin and nicole

881
00:34:00,960 --> 00:34:02,480
big applause for them

882
00:34:02,480 --> 00:34:06,360
thank you guys thank you

