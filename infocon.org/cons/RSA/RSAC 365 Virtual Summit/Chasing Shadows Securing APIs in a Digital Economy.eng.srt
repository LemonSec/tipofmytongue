1
00:00:01,260 --> 00:00:03,439
- [Narrator] Whether you're
hyper-connecting your ecosystem,

2
00:00:03,440 --> 00:00:05,600
empowering a distributed workforce,

3
00:00:05,600 --> 00:00:07,199
rapidly leveraging cloud,

4
00:00:07,200 --> 00:00:10,430
IOT, AI, or other new technologies,

5
00:00:10,430 --> 00:00:14,120
RSA is here to help you
manage digital risk your way,

6
00:00:14,120 --> 00:00:15,722
at every stage of your journey.

7
00:00:18,130 --> 00:00:20,830
- Good day, everyone, and
welcome to this session.

8
00:00:20,830 --> 00:00:23,310
We're gonna talk about API security.

9
00:00:23,310 --> 00:00:27,259
I'm Joe Krull, a senior
analyst for Aite Group.

10
00:00:27,260 --> 00:00:30,750
We're an independent
research organization,

11
00:00:30,750 --> 00:00:33,850
and for 2020, we did
quite a lot of research

12
00:00:33,850 --> 00:00:36,160
and reporting around API security,

13
00:00:36,160 --> 00:00:37,699
and I'm pleased to share the results

14
00:00:37,700 --> 00:00:40,290
of that research with you today.

15
00:00:40,290 --> 00:00:43,730
So, why should you care
about API security?

16
00:00:43,730 --> 00:00:47,190
Well, the reason why is that APIs

17
00:00:47,190 --> 00:00:49,210
are just absolutely exploding

18
00:00:49,210 --> 00:00:51,790
in our modern enterprises today.

19
00:00:51,790 --> 00:00:56,280
Last year in 2019, an
organization called Nordic APIs,

20
00:00:56,280 --> 00:00:59,270
which is a community of API developers,

21
00:00:59,270 --> 00:01:03,060
they estimated that there
were more than 15,000 APIs

22
00:01:03,060 --> 00:01:05,360
in use across the globe.

23
00:01:05,360 --> 00:01:08,690
But what's happened in the last year or so

24
00:01:08,690 --> 00:01:12,710
is that the use of APIs
has absolutely exploded,

25
00:01:12,710 --> 00:01:15,199
because of the COVID-19 pandemic,

26
00:01:15,200 --> 00:01:18,880
and the use of automated
workflows, and chatbots,

27
00:01:18,880 --> 00:01:22,490
and all different kinds
of collaboration tools.

28
00:01:22,490 --> 00:01:26,039
No one really knows how many
APIs are actually in use today,

29
00:01:26,040 --> 00:01:29,140
but empirically it's somewhere

30
00:01:29,140 --> 00:01:31,670
around the range of 100,000 or more.

31
00:01:31,670 --> 00:01:34,810
So this is an area that
is absolutely growing,

32
00:01:34,810 --> 00:01:38,010
and there's a guarantee that
if it hasn't touched you,

33
00:01:38,010 --> 00:01:41,370
it's definitely gonna
touch you in the future.

34
00:01:41,370 --> 00:01:45,170
An interesting statistic
from Akamai came out

35
00:01:45,170 --> 00:01:48,910
that said 83% of all internet traffic

36
00:01:48,910 --> 00:01:51,810
is somehow related to APIs.

37
00:01:51,810 --> 00:01:53,570
We thought that was quite astounding

38
00:01:53,570 --> 00:01:54,770
and the more we pressed on it,

39
00:01:54,770 --> 00:01:56,923
the more we believe that to be true.

40
00:01:58,240 --> 00:01:59,770
What are APIs being used for?

41
00:01:59,770 --> 00:02:03,380
Well, they're really the
backbone of the digital economy,

42
00:02:03,380 --> 00:02:05,860
and we have something in
Europe called open banking

43
00:02:05,860 --> 00:02:09,060
which is a regulation that
requires banks to be able

44
00:02:09,060 --> 00:02:13,510
to share information and
open up to fintech companies.

45
00:02:13,510 --> 00:02:15,870
That's driving API use.

46
00:02:15,870 --> 00:02:19,430
Also digital transformation
programs and initiatives,

47
00:02:19,430 --> 00:02:24,020
and even IOT deployments
in the driverless cars.

48
00:02:24,020 --> 00:02:26,703
You can't run a driverless
car without using APIs.

49
00:02:27,910 --> 00:02:31,000
So we found that during
our initial research

50
00:02:31,000 --> 00:02:35,030
that most enterprises have more than 600

51
00:02:35,030 --> 00:02:39,253
internal and external APIs
present in their environments.

52
00:02:40,720 --> 00:02:45,280
But, we found as we started
our research in early 2020,

53
00:02:45,280 --> 00:02:49,290
that security awareness around
APIs is actually very low,

54
00:02:49,290 --> 00:02:51,700
and it continues to be very low.

55
00:02:51,700 --> 00:02:54,089
So we started off with an interview

56
00:02:54,090 --> 00:02:57,720
of 20 CISOs, security architects,

57
00:02:57,720 --> 00:03:00,170
and digital transformation specialists,

58
00:03:00,170 --> 00:03:02,549
and we just simply
asked them how many APIs

59
00:03:02,550 --> 00:03:05,700
are traversing your networks
in your environments,

60
00:03:05,700 --> 00:03:07,730
and they really didn't know.

61
00:03:07,730 --> 00:03:12,450
So at last year's RSA
conference in San Francisco,

62
00:03:12,450 --> 00:03:14,440
we actually did a lot of discussions

63
00:03:14,440 --> 00:03:16,280
with security professionals,

64
00:03:16,280 --> 00:03:18,690
those were both scheduled and ad hoc,

65
00:03:18,690 --> 00:03:21,470
and this question kept coming up,

66
00:03:21,470 --> 00:03:23,920
and we found that a lot of people

67
00:03:23,920 --> 00:03:27,260
that probably should
have known did not know,

68
00:03:27,260 --> 00:03:30,322
and there was a very low
visibility around APIs.

69
00:03:31,460 --> 00:03:36,090
So, another thing that we found
out during our conversations

70
00:03:36,090 --> 00:03:39,385
and interviews is that there
was a general assumption

71
00:03:39,385 --> 00:03:43,590
that traditional security
products like firewalls,

72
00:03:43,590 --> 00:03:47,020
and load balancers, and
web application firewalls

73
00:03:47,020 --> 00:03:49,420
were providing sufficient protection

74
00:03:49,420 --> 00:03:52,739
against APIs or API attacks,

75
00:03:52,740 --> 00:03:55,300
and even there was a misconception

76
00:03:55,300 --> 00:03:58,220
about what API gateways do.

77
00:03:58,220 --> 00:04:02,770
And so, based on that, we
published an initial report

78
00:04:02,770 --> 00:04:06,940
that talked about lack of
visibility around APIs,

79
00:04:06,940 --> 00:04:10,120
and I'll touch on that in
a moment in a case study,

80
00:04:10,120 --> 00:04:14,010
but after we finished that
first report and research,

81
00:04:14,010 --> 00:04:17,980
we kinda decided let's
go talk to the people

82
00:04:17,980 --> 00:04:21,649
that are actually creating
and managing APIs.

83
00:04:21,649 --> 00:04:24,310
So over the summer, we did interviews

84
00:04:24,310 --> 00:04:28,740
with 53 application developers
and security professionals

85
00:04:28,740 --> 00:04:31,360
representing 31 different companies.

86
00:04:31,360 --> 00:04:35,640
These were mostly in fintechs, insurtechs,

87
00:04:35,640 --> 00:04:38,940
and financial services
organizations, where we assume

88
00:04:38,940 --> 00:04:41,723
that the level of security
would be quite high,

89
00:04:42,580 --> 00:04:45,280
and to be able to compare apples to apples

90
00:04:45,280 --> 00:04:48,619
and oranges to oranges, we
came up with a methodology

91
00:04:48,620 --> 00:04:52,850
where we came up with a way to come up

92
00:04:52,850 --> 00:04:57,850
and measure the maturity scores
against seven competencies,

93
00:04:57,870 --> 00:05:00,880
and we're gonna share that
with you in just a few minutes,

94
00:05:00,880 --> 00:05:04,040
but the bottom line on that
secondary research was, again,

95
00:05:04,040 --> 00:05:07,563
we found API security
awareness to be very low.

96
00:05:08,880 --> 00:05:10,719
So, what are the threats?

97
00:05:10,720 --> 00:05:15,080
Well, attackers are going after APIs

98
00:05:15,080 --> 00:05:18,570
for one primary reason and a
couple of secondary reasons,

99
00:05:18,570 --> 00:05:23,370
but the main one is there's a
low probability of detection.

100
00:05:23,370 --> 00:05:25,780
They're able to manipulate APIs

101
00:05:25,780 --> 00:05:30,130
and use the API streams for all
kinds of nefarious purposes,

102
00:05:30,130 --> 00:05:34,100
because most organizations
have this limited visibility,

103
00:05:34,100 --> 00:05:39,100
and very few capabilities to
disrupt that attack surface.

104
00:05:40,280 --> 00:05:41,260
So what are they doing?

105
00:05:41,260 --> 00:05:43,539
They're stealing sensitive data.

106
00:05:43,540 --> 00:05:45,910
They're messing with business operations,

107
00:05:45,910 --> 00:05:48,790
manipulating data streams.

108
00:05:48,790 --> 00:05:52,070
They're taking advantage of the ability

109
00:05:52,070 --> 00:05:56,930
to abuse business logic,
get unauthorized access,

110
00:05:56,930 --> 00:05:59,360
and even do denial of service attacks.

111
00:05:59,360 --> 00:06:01,620
So there are lots of threats to APIs,

112
00:06:02,620 --> 00:06:06,540
and that's why our mission
is to try to raise awareness

113
00:06:06,540 --> 00:06:08,070
and help people understand

114
00:06:08,070 --> 00:06:10,740
that if you're not securing your APIs,

115
00:06:10,740 --> 00:06:12,270
it's probably just a matter of time

116
00:06:12,270 --> 00:06:14,169
before you'll have an issue with them.

117
00:06:15,580 --> 00:06:18,050
So, one of the other things we learned

118
00:06:18,050 --> 00:06:19,890
is that this is not something

119
00:06:19,890 --> 00:06:22,090
that we're talking about
nation-state attacks

120
00:06:22,090 --> 00:06:25,510
and we're not talking about
sophisticated cybercriminals.

121
00:06:25,510 --> 00:06:27,700
Actually, you can do API attacks

122
00:06:27,700 --> 00:06:31,110
without having a high level of expertise,

123
00:06:31,110 --> 00:06:34,720
and you can buy tools or
you can get them free.

124
00:06:34,720 --> 00:06:37,440
A lot of these are no-cost tools,

125
00:06:37,440 --> 00:06:39,490
and you can get them in
the hacker marketplaces.

126
00:06:39,490 --> 00:06:40,833
They're widely available.

127
00:06:41,990 --> 00:06:44,300
Attackers can use proxy tools.

128
00:06:44,300 --> 00:06:47,550
They can even get services,

129
00:06:47,550 --> 00:06:49,000
they can get low cost-services

130
00:06:49,000 --> 00:06:51,420
to be able to support their attacks,

131
00:06:51,420 --> 00:06:53,530
and the folks that develop these tools

132
00:06:53,530 --> 00:06:57,090
actually update them on
a fairly frequent basis,

133
00:06:57,090 --> 00:07:00,756
so if they are detected by
certain products or solutions,

134
00:07:00,756 --> 00:07:05,351
they can keep avoiding
those detection modes.

135
00:07:05,351 --> 00:07:08,740
And again, at the RSA
conference last February,

136
00:07:08,740 --> 00:07:13,140
I was able to see a
15-year-old high school student

137
00:07:13,140 --> 00:07:17,580
doing live API attack
against a gift card database,

138
00:07:17,580 --> 00:07:20,729
and based upon his description,
this is not something

139
00:07:20,730 --> 00:07:24,410
that requires a high level of expertise.

140
00:07:24,410 --> 00:07:27,200
And if you just google
any one of these tools,

141
00:07:27,200 --> 00:07:29,643
you'll find out that
they are really prevalent

142
00:07:29,643 --> 00:07:32,960
in the domain, in the marketplaces,

143
00:07:32,960 --> 00:07:35,510
and the places where hackers
go to get their tools.

144
00:07:37,920 --> 00:07:42,920
So, we're not talking
about small organizations

145
00:07:43,170 --> 00:07:44,340
that are being breached

146
00:07:44,340 --> 00:07:47,950
or having to publicly acknowledge
their vulnerabilities.

147
00:07:47,950 --> 00:07:51,020
We're talking big companies,
like Cisco, and Google,

148
00:07:51,020 --> 00:07:56,020
and Facebook, Twitter, Salesforce,

149
00:07:56,050 --> 00:08:00,580
Zoom, Waze, and Amazon Web Services.

150
00:08:00,580 --> 00:08:04,840
Venmo had a particularly
damaging incidence

151
00:08:04,840 --> 00:08:07,609
of an API vulnerability.

152
00:08:07,610 --> 00:08:09,980
Also in retail and hospitality,

153
00:08:09,980 --> 00:08:12,960
also in the automotive space,

154
00:08:12,960 --> 00:08:15,840
and the most recent attack
was a few weeks ago,

155
00:08:15,840 --> 00:08:18,690
was one of the dating services

156
00:08:18,690 --> 00:08:21,640
that was a mobile application,

157
00:08:21,640 --> 00:08:23,310
and they were,

158
00:08:23,310 --> 00:08:26,830
because their API was
not properly configured,

159
00:08:26,830 --> 00:08:29,430
you could actually
extract from the database

160
00:08:29,430 --> 00:08:31,830
all kinds of user profiles,

161
00:08:31,830 --> 00:08:34,000
or you could upgrade your service

162
00:08:34,000 --> 00:08:37,380
without paying for that premium service.

163
00:08:37,380 --> 00:08:40,740
So these are just examples of API attacks,

164
00:08:40,740 --> 00:08:42,633
and public service as well.

165
00:08:43,480 --> 00:08:46,680
The most recent one was the
Biden for President Campaign

166
00:08:46,680 --> 00:08:47,989
had a very interesting app

167
00:08:47,990 --> 00:08:50,930
for managing their potential voters

168
00:08:50,930 --> 00:08:54,180
that suffered from a number
of API vulnerabilities.

169
00:08:54,180 --> 00:08:56,180
And we have also seen in recent weeks

170
00:08:56,180 --> 00:09:00,589
that a lot of the COVID-19
tracking applications,

171
00:09:00,590 --> 00:09:02,580
which have been pushed
into the marketplace

172
00:09:02,580 --> 00:09:04,930
very, very quickly based on need,

173
00:09:04,930 --> 00:09:07,973
also suffer from API vulnerabilities.

174
00:09:09,970 --> 00:09:13,270
So this is an example
of one that was found

175
00:09:13,270 --> 00:09:16,810
as part of Uber's bug
bounty program last year,

176
00:09:16,810 --> 00:09:19,270
and in this particular case,

177
00:09:19,270 --> 00:09:22,480
what happened was there were
a number of security issues

178
00:09:22,480 --> 00:09:25,970
with the API, which allow the attacker

179
00:09:25,970 --> 00:09:29,500
to actually enumerate all
different kinds of information

180
00:09:29,500 --> 00:09:31,690
within that database.

181
00:09:31,690 --> 00:09:33,330
They took advantage of the fact

182
00:09:33,330 --> 00:09:37,770
that there was really poor
authorization on the APIs,

183
00:09:37,770 --> 00:09:41,050
so just simply by intercepting the stream,

184
00:09:41,050 --> 00:09:43,180
you could do a lot of things with the APIs

185
00:09:43,180 --> 00:09:45,699
that you really shouldn't do.

186
00:09:45,700 --> 00:09:48,380
The attackers were able,
well could have been able

187
00:09:48,380 --> 00:09:50,200
to see from the error messages

188
00:09:50,200 --> 00:09:52,630
all kinds of sensitive information,

189
00:09:52,630 --> 00:09:55,120
and what they did was
an enumeration attack

190
00:09:56,622 --> 00:09:58,860
on the part of the application

191
00:09:58,860 --> 00:10:01,540
that allows you to add a driver.

192
00:10:01,540 --> 00:10:04,630
By simply manipulating that API,

193
00:10:04,630 --> 00:10:08,620
they could actually pull
information from the fleet manager

194
00:10:08,620 --> 00:10:11,920
and get access to all
different kinds of things

195
00:10:11,920 --> 00:10:16,120
about the existing drivers,
like their email addresses,

196
00:10:16,120 --> 00:10:18,960
like their phone numbers,
and all other kinds

197
00:10:18,960 --> 00:10:22,010
of sensitive information related to that.

198
00:10:22,010 --> 00:10:24,620
So this is just one simple example

199
00:10:24,620 --> 00:10:29,210
of an API-based vulnerability
that could have resulted

200
00:10:29,210 --> 00:10:33,960
in a pretty significant
privacy and/or security issue

201
00:10:33,960 --> 00:10:38,310
for an organization like
Uber that really relies

202
00:10:38,310 --> 00:10:41,583
extensively on APIs for their application.

203
00:10:43,560 --> 00:10:46,719
So, what do we do about this?

204
00:10:46,720 --> 00:10:51,550
Well, as I mentioned before, I can confirm

205
00:10:51,550 --> 00:10:54,490
based upon our research that
firewalls, load balances,

206
00:10:54,490 --> 00:10:58,680
and WAFS just aren't giving
you sufficient visibility

207
00:10:58,680 --> 00:11:01,400
into API calls and traffic flows,

208
00:11:01,400 --> 00:11:02,840
but there's good news here.

209
00:11:02,840 --> 00:11:05,830
There are a number of solution providers

210
00:11:05,830 --> 00:11:09,740
that are rolling out new
products and new solutions.

211
00:11:09,740 --> 00:11:12,200
These are API security gateways,

212
00:11:12,200 --> 00:11:16,760
which we did a report on in the
early part of the year 2020.

213
00:11:18,220 --> 00:11:22,020
We're seeing the ability to
use artificial intelligence

214
00:11:22,020 --> 00:11:24,760
to do traffic analysis on APIs,

215
00:11:24,760 --> 00:11:28,319
and also services that
you can do discovery

216
00:11:28,320 --> 00:11:30,920
and all different kinds of
ways to protect your APIs

217
00:11:31,850 --> 00:11:34,113
available as a web service.

218
00:11:34,980 --> 00:11:37,510
But from our first bit of research,

219
00:11:37,510 --> 00:11:39,700
we recommended that organizations

220
00:11:39,700 --> 00:11:41,540
just simply make API security

221
00:11:41,540 --> 00:11:44,180
part of their cybersecurity strategy,

222
00:11:44,180 --> 00:11:46,140
and acknowledge that they're gonna need

223
00:11:46,140 --> 00:11:49,220
to go beyond the
traditional cyber defenses

224
00:11:49,220 --> 00:11:52,130
if they intend to provide more protection

225
00:11:52,130 --> 00:11:54,633
against API-based attacks.

226
00:11:55,940 --> 00:11:57,500
So a quick case study here.

227
00:11:57,500 --> 00:12:02,420
I had an opportunity to speak
with a security professional

228
00:12:02,420 --> 00:12:04,939
at a large financial services company,

229
00:12:04,940 --> 00:12:07,170
trillion dollars under management,

230
00:12:07,170 --> 00:12:10,160
and more than 20,000 employees,

231
00:12:10,160 --> 00:12:14,209
and their issue began in 2018

232
00:12:14,210 --> 00:12:16,160
when they were seeing what they thought

233
00:12:16,160 --> 00:12:18,400
were credential stuffing attacks,

234
00:12:18,400 --> 00:12:23,400
where attackers were using
big stores of credentials

235
00:12:23,670 --> 00:12:26,400
that had been compromised
in previous attacks,

236
00:12:26,400 --> 00:12:27,850
and they were sending these in,

237
00:12:27,850 --> 00:12:30,700
trying to go against an API endpoint,

238
00:12:30,700 --> 00:12:32,530
until they found one

239
00:12:32,530 --> 00:12:35,959
that would give them access
to the infrastructure,

240
00:12:35,960 --> 00:12:36,793
and what they did

241
00:12:36,793 --> 00:12:39,490
when they saw these
credential stuffing attacks,

242
00:12:39,490 --> 00:12:41,740
they had all different
kinds of manual process,

243
00:12:41,740 --> 00:12:43,030
and technical controls,

244
00:12:43,030 --> 00:12:45,230
and they would spin up incident response,

245
00:12:45,230 --> 00:12:47,760
and they would open up bridge lines,

246
00:12:47,760 --> 00:12:50,930
but really, they didn't
know what was happening

247
00:12:50,930 --> 00:12:52,680
with the API traffic,

248
00:12:52,680 --> 00:12:54,839
so they had very limited ability

249
00:12:54,840 --> 00:12:56,680
to do anything about these attacks,

250
00:12:56,680 --> 00:12:59,489
and they kept changing time of day,

251
00:12:59,490 --> 00:13:02,160
going up against different services,

252
00:13:02,160 --> 00:13:06,730
and what happened was in
the first half of 2019,

253
00:13:06,730 --> 00:13:10,970
they not only their web
applications were impacted,

254
00:13:10,970 --> 00:13:14,353
but then it extended to their
mobile services as well.

255
00:13:15,290 --> 00:13:17,670
So the security professional I talked to

256
00:13:17,670 --> 00:13:20,949
said that for the better part of a year,

257
00:13:20,950 --> 00:13:23,690
they were running around
playing whack-a-mole

258
00:13:23,690 --> 00:13:26,923
trying to deal with this
different type of attack.

259
00:13:28,310 --> 00:13:29,593
So what did they do?

260
00:13:30,610 --> 00:13:35,610
They instituted an API-enabled
traffic analysis product,

261
00:13:37,880 --> 00:13:40,350
and they put it as a sideband deployment

262
00:13:40,350 --> 00:13:44,160
to an API gateway that was
already in their environment,

263
00:13:44,160 --> 00:13:46,740
and shortly after they
put that product in,

264
00:13:46,740 --> 00:13:50,300
they were able to see
indications of the attacks

265
00:13:50,300 --> 00:13:55,280
against not only cookies,
but also against tokens,

266
00:13:55,280 --> 00:13:57,310
and this gave them a lot of intelligence

267
00:13:57,310 --> 00:14:01,010
about where they needed to
go shore up their defenses.

268
00:14:01,010 --> 00:14:04,980
And the product that was looking at the,

269
00:14:04,980 --> 00:14:07,920
this AI-based product that
was looking at their APIs,

270
00:14:07,920 --> 00:14:09,939
they were able to produce alerts

271
00:14:09,940 --> 00:14:13,210
and send those to their Splunk platform,

272
00:14:13,210 --> 00:14:17,840
and create all kinds of new
use cases related to API abuse,

273
00:14:17,840 --> 00:14:19,720
and this gave the security team

274
00:14:19,720 --> 00:14:22,620
a lot of not only visibility,

275
00:14:22,620 --> 00:14:25,900
but a lot of capability to rapidly respond

276
00:14:25,900 --> 00:14:29,670
to when they saw things
that match these use cases.

277
00:14:29,670 --> 00:14:34,670
And what also happened was
an unintended consequence.

278
00:14:34,970 --> 00:14:38,470
They were finding all
kinds of network issues.

279
00:14:38,470 --> 00:14:41,470
For instance, they found that they had,

280
00:14:41,470 --> 00:14:44,010
there was a troubleshooting application

281
00:14:44,010 --> 00:14:46,950
that was supposed to be disabled

282
00:14:46,950 --> 00:14:49,570
when the application went to deployment,

283
00:14:49,570 --> 00:14:52,020
that somehow never was disabled,

284
00:14:52,020 --> 00:14:55,270
and it was constantly running
tests against the application

285
00:14:55,270 --> 00:14:57,540
which was impacting performance,

286
00:14:57,540 --> 00:15:02,012
and they found that through
this API visibility capability.

287
00:15:03,870 --> 00:15:06,580
So what happened was they raised awareness

288
00:15:06,580 --> 00:15:10,620
of API security by
deploying this solution,

289
00:15:10,620 --> 00:15:12,700
and they felt like they
were in much better stead

290
00:15:12,700 --> 00:15:15,186
to actually do something about it

291
00:15:15,186 --> 00:15:17,273
by implementing this solution.

292
00:15:20,380 --> 00:15:24,360
So, in the summertime,
we decided, let's go look

293
00:15:24,360 --> 00:15:28,380
and see how API development
practices are done.

294
00:15:28,380 --> 00:15:32,543
So what we did there was we
created this methodology.

295
00:15:33,590 --> 00:15:38,160
We looked at what are developers
doing with regards to APIs

296
00:15:38,160 --> 00:15:40,300
and how are they actually creating

297
00:15:40,300 --> 00:15:41,882
and how are they managing them?

298
00:15:42,780 --> 00:15:45,439
So, based upon the interviews,

299
00:15:45,440 --> 00:15:48,480
we also looked at documentation,

300
00:15:48,480 --> 00:15:50,180
we looked at presentations,

301
00:15:50,180 --> 00:15:53,069
we looked at all different
kinds of materials

302
00:15:53,070 --> 00:15:54,890
to be able to assess maturity

303
00:15:54,890 --> 00:15:58,810
against seven API competencies.

304
00:15:58,810 --> 00:16:01,229
And because we wanted to be
fair in our measurements,

305
00:16:01,230 --> 00:16:04,470
we used the Carnegie Mellon CMMI,

306
00:16:04,470 --> 00:16:06,710
which is a rating schedule

307
00:16:06,710 --> 00:16:10,363
that you can be able to address maturity.

308
00:16:11,240 --> 00:16:13,660
And at the end of our
research, which took place

309
00:16:13,660 --> 00:16:16,650
over about a two-and-a-half
to three-month period,

310
00:16:16,650 --> 00:16:19,959
we really found that security awareness,

311
00:16:19,960 --> 00:16:22,330
even regarding what kind of attack trends

312
00:16:22,330 --> 00:16:26,143
were out there in the
environment, was very low.

313
00:16:27,090 --> 00:16:29,500
It was low at financial institutions

314
00:16:29,500 --> 00:16:32,970
and it was really low at
fintechs and insurtech companies,

315
00:16:32,970 --> 00:16:34,960
which tended to be smaller,

316
00:16:34,960 --> 00:16:38,173
but were creating these
very powerful APIs.

317
00:16:40,130 --> 00:16:42,080
These are the seven areas we looked at,

318
00:16:42,080 --> 00:16:44,500
and I'll go through each one in detail,

319
00:16:44,500 --> 00:16:47,130
but we felt that it was important

320
00:16:47,130 --> 00:16:49,770
that an organization have
a central point of contact

321
00:16:49,770 --> 00:16:51,797
for API security.

322
00:16:51,797 --> 00:16:54,860
We wanted to know were
there tools or methods

323
00:16:54,860 --> 00:16:59,860
to manage the inventory of
internal and external APIs?

324
00:17:00,150 --> 00:17:01,900
Is there a defined process

325
00:17:01,900 --> 00:17:04,453
to consume APIs from third-parties?

326
00:17:05,630 --> 00:17:09,460
Does the company follow
application security practices

327
00:17:09,460 --> 00:17:12,893
and those do those include
API security specifically?

328
00:17:14,170 --> 00:17:16,319
Do they publish an API catalog

329
00:17:16,319 --> 00:17:20,000
or do they offer an API development portal

330
00:17:20,000 --> 00:17:22,560
to allow those that consume the APIs

331
00:17:22,560 --> 00:17:25,500
to be able to implement them properly?

332
00:17:25,500 --> 00:17:27,430
Do they have a security training program

333
00:17:27,430 --> 00:17:29,913
and does it include API-specific content?

334
00:17:30,890 --> 00:17:32,530
Does the company have a process

335
00:17:32,530 --> 00:17:34,649
for handling security incidents,

336
00:17:34,650 --> 00:17:39,270
and does that include AppSec
and API security criteria?

337
00:17:39,270 --> 00:17:43,650
We felt that these seven
areas were a good benchmark

338
00:17:43,650 --> 00:17:48,190
for how does the organization
manage specifically

339
00:17:48,190 --> 00:17:51,533
API security-related issues
in their environment.

340
00:17:53,290 --> 00:17:55,373
So, the first one.

341
00:17:59,670 --> 00:18:01,960
So we asked is there a designated

342
00:18:01,960 --> 00:18:04,840
API security point of content,

343
00:18:04,840 --> 00:18:07,137
and we found that only one company

344
00:18:07,137 --> 00:18:09,340
of the 31 that we spoke to

345
00:18:09,340 --> 00:18:12,620
actually had a designated
point of contact.

346
00:18:12,620 --> 00:18:17,239
17 companies said no, and we
don't really have any plan

347
00:18:17,240 --> 00:18:19,510
to appoint a point of contact.

348
00:18:19,510 --> 00:18:22,790
13 said well we have a decentralized model

349
00:18:22,790 --> 00:18:26,960
where API creation is
done in the various teams,

350
00:18:26,960 --> 00:18:29,600
and it's kind of spread
all around the organization

351
00:18:29,600 --> 00:18:33,372
so each team is responsible
for their own APIs.

352
00:18:34,760 --> 00:18:38,030
And we felt that from a
cyber security standpoint,

353
00:18:38,030 --> 00:18:41,240
from a risk standpoint,
that lack of a champion

354
00:18:42,120 --> 00:18:45,760
can have developers doing bad things

355
00:18:45,760 --> 00:18:50,760
like trying to implement APIs
in a way that's not secure,

356
00:18:50,960 --> 00:18:55,570
or maybe to contravene
policies of the organization.

357
00:18:55,570 --> 00:19:00,064
So, we rated them about medium
scale on this at repeatable,

358
00:19:00,065 --> 00:19:03,283
but there are certainly
areas for improvement.

359
00:19:05,630 --> 00:19:07,387
So do you inventory your APIs,

360
00:19:07,387 --> 00:19:10,429
and this goes back to
the visibility question,

361
00:19:10,430 --> 00:19:14,020
now from a creation and
implementation standpoint.

362
00:19:14,020 --> 00:19:19,020
So, nearly half of them, half
of the companies we spoke to,

363
00:19:19,160 --> 00:19:20,863
they couldn't tell us how many APIs

364
00:19:20,863 --> 00:19:24,890
that they had created, or
deployed, or were managing.

365
00:19:24,890 --> 00:19:28,860
They kinda had a rough
number, but no real inventory,

366
00:19:28,860 --> 00:19:32,060
and 13% had no inventory whatsoever.

367
00:19:32,060 --> 00:19:34,077
They say well we create
and we manage them,

368
00:19:34,077 --> 00:19:36,990
but we don't keep track of them at all.

369
00:19:36,990 --> 00:19:39,400
So we saw inconsistencies

370
00:19:39,400 --> 00:19:42,863
between the use of
external and internal APIs.

371
00:19:43,750 --> 00:19:45,790
So we did see one area

372
00:19:45,790 --> 00:19:48,170
that we considered to be a best practice.

373
00:19:48,170 --> 00:19:50,850
There was an organization that says,

374
00:19:50,850 --> 00:19:55,810
we treat all external and
internal APIs the same way.

375
00:19:55,810 --> 00:19:59,340
We put them through the same
security controls and rigor,

376
00:19:59,340 --> 00:20:02,490
regardless of whether they're
internal to our organization,

377
00:20:02,490 --> 00:20:07,210
or exposed out to partners
across the internet.

378
00:20:07,210 --> 00:20:08,910
And the reason they did that, they said,

379
00:20:08,910 --> 00:20:11,620
well in a fast moving
business environment,

380
00:20:11,620 --> 00:20:15,860
an internal API can quickly
become an external API,

381
00:20:15,860 --> 00:20:18,620
and they just treated them all the same

382
00:20:18,620 --> 00:20:21,969
and applied a very high
level of rigor to that.

383
00:20:21,970 --> 00:20:24,550
We thought that was the best practice.

384
00:20:24,550 --> 00:20:28,010
But still, because
they're not keeping track

385
00:20:28,010 --> 00:20:30,420
of the number of APIs they're creating,

386
00:20:30,420 --> 00:20:34,193
this poor visibility can really
contribute to cyber risk.

387
00:20:35,800 --> 00:20:38,173
So our third question was,

388
00:20:40,060 --> 00:20:45,060
do you have controls for third-party APIs?

389
00:20:45,100 --> 00:20:47,679
And 19 of them were actually doing

390
00:20:47,680 --> 00:20:51,930
some kind of due diligence on
their third-party providers.

391
00:20:51,930 --> 00:20:55,300
10 companies did it on
a case-by-case basis,

392
00:20:55,300 --> 00:20:57,190
but two companies we spoke to

393
00:20:57,190 --> 00:21:00,010
said we don't do any due diligence at all.

394
00:21:00,010 --> 00:21:03,150
The developers go out, they
find the API they need,

395
00:21:03,150 --> 00:21:05,170
they contact the organization,

396
00:21:05,170 --> 00:21:09,380
and they integrate these
APIs into their products.

397
00:21:09,380 --> 00:21:12,020
So, what happens there

398
00:21:12,020 --> 00:21:14,550
is if you're implementing
third-party APIs,

399
00:21:14,550 --> 00:21:17,230
it can really have an
impact on the performance

400
00:21:17,230 --> 00:21:19,030
if they're poorly coded,

401
00:21:19,030 --> 00:21:21,570
or they're not properly implemented,

402
00:21:21,570 --> 00:21:24,500
and that can also increase cyber risk,

403
00:21:24,500 --> 00:21:27,760
and another thing is that
if you're an attacker,

404
00:21:27,760 --> 00:21:30,830
you can pose as a
third-party API provider,

405
00:21:30,830 --> 00:21:32,590
and you can slip into the stream

406
00:21:32,590 --> 00:21:34,949
and start to do pretty bad things.

407
00:21:34,950 --> 00:21:37,990
So, controlling third-party APIs

408
00:21:37,990 --> 00:21:41,480
is something that we felt was a,

409
00:21:41,480 --> 00:21:44,323
something that a organization
should really scrutinize.

410
00:21:46,510 --> 00:21:50,890
So we asked, do you perform
application security testing?

411
00:21:50,890 --> 00:21:53,740
And the good news there
is well all 31 companies

412
00:21:53,740 --> 00:21:56,800
said they perform some
type of AppSec testing,

413
00:21:56,800 --> 00:21:59,139
so we thought that was a great idea.

414
00:21:59,140 --> 00:22:02,950
And we saw both DevOps
and agile environments

415
00:22:02,950 --> 00:22:04,670
or hybrid environments

416
00:22:04,670 --> 00:22:08,013
with different teams using
different methodologies.

417
00:22:09,280 --> 00:22:12,220
Interestingly enough,
we did find companies

418
00:22:12,220 --> 00:22:13,620
that were doing threat modeling,

419
00:22:13,620 --> 00:22:15,699
which we thought was a best practice,

420
00:22:15,700 --> 00:22:18,620
and two actually had bug bounty programs,

421
00:22:18,620 --> 00:22:22,129
but, of the 31 companies that we spoke to,

422
00:22:22,130 --> 00:22:27,130
26 of them were not
specifically testing their APIs.

423
00:22:27,180 --> 00:22:28,760
What they were doing is waiting

424
00:22:28,760 --> 00:22:33,760
until the product was done
or the API was complete,

425
00:22:34,100 --> 00:22:36,520
and they were doing penetration testing,

426
00:22:36,520 --> 00:22:40,550
and it was our feeling
that finding these things

427
00:22:40,550 --> 00:22:42,330
during penetration testing

428
00:22:42,330 --> 00:22:44,720
just shortly before going to production

429
00:22:44,720 --> 00:22:46,900
or making the API visible

430
00:22:46,900 --> 00:22:49,410
was probably too late
in the development chain

431
00:22:49,410 --> 00:22:51,093
to really have much impact on it.

432
00:22:53,700 --> 00:22:56,593
Next, we asked do you
publish an API catalog?

433
00:22:57,450 --> 00:23:02,400
15 of the 31 companies said
they don't publish a catalog

434
00:23:02,400 --> 00:23:04,810
and we don't provide a development portal

435
00:23:04,810 --> 00:23:08,810
to help people implement
the APIs that we create.

436
00:23:08,810 --> 00:23:10,460
So why do we want to do this?

437
00:23:10,460 --> 00:23:15,276
Well, you do catalogs so you
can help your own developers

438
00:23:15,276 --> 00:23:20,100
quickly find out what approved
APIs are already available

439
00:23:20,100 --> 00:23:24,070
within your organization,
and development portals

440
00:23:24,070 --> 00:23:27,470
actually help your
customers or your users.

441
00:23:27,470 --> 00:23:30,170
You give them guidance
on how is the best way

442
00:23:30,170 --> 00:23:33,843
I can implement this API,
and how should I secure it.

443
00:23:34,800 --> 00:23:37,220
So, what happens when you don't have it

444
00:23:37,220 --> 00:23:40,230
is that a developer may go out

445
00:23:40,230 --> 00:23:43,640
and create a duplicate or a similar API,

446
00:23:43,640 --> 00:23:45,820
and because it's duplicate, it doesn't go

447
00:23:45,820 --> 00:23:49,159
through any kind of proper
testing and approval.

448
00:23:49,160 --> 00:23:52,760
And we found that one
of the biggest issues

449
00:23:52,760 --> 00:23:54,930
with development of APIs

450
00:23:54,930 --> 00:23:59,180
is that the developers
continue to have questions,

451
00:23:59,180 --> 00:24:01,240
or issues, or challenges

452
00:24:01,240 --> 00:24:04,280
related to authentication
and authorization,

453
00:24:04,280 --> 00:24:07,320
and this is an area that
can really be problematic,

454
00:24:07,320 --> 00:24:10,653
both from an API creation
and a management standpoint.

455
00:24:13,620 --> 00:24:16,750
So we asked about application
security training,

456
00:24:16,750 --> 00:24:18,650
and we saw a wide variance

457
00:24:18,650 --> 00:24:21,630
in how training is done for developers.

458
00:24:21,630 --> 00:24:24,490
14 of the 31 companies
said well we do training,

459
00:24:24,490 --> 00:24:27,910
but it's really high-level
training, it's compliance,

460
00:24:27,910 --> 00:24:31,360
we do it because our customers require it.

461
00:24:31,360 --> 00:24:33,290
It really doesn't provide much

462
00:24:33,290 --> 00:24:35,590
in the way of AppSec guidance.

463
00:24:35,590 --> 00:24:38,340
It's mostly around what
are the company policies,

464
00:24:38,340 --> 00:24:40,800
and password management,
and stuff like that.

465
00:24:40,800 --> 00:24:41,919
We really didn't feel

466
00:24:41,920 --> 00:24:44,740
that that was gonna be
sufficiently targeted

467
00:24:44,740 --> 00:24:46,673
for creation of APIs.

468
00:24:48,050 --> 00:24:50,560
13 of the companies specifically mentioned

469
00:24:50,560 --> 00:24:53,860
that they use the OWASP
Top 10 in their training,

470
00:24:53,860 --> 00:24:55,330
but interestingly enough,

471
00:24:55,330 --> 00:24:58,010
only two of the 31 companies we spoke to

472
00:24:58,010 --> 00:25:00,840
said that they were aware that OWASP

473
00:25:00,840 --> 00:25:03,110
had actually come up
with a separate Top 10

474
00:25:03,110 --> 00:25:06,409
for API security in 2019,

475
00:25:06,410 --> 00:25:07,820
and they were quite surprised

476
00:25:07,820 --> 00:25:11,092
when we pointed them to go
to look at that resource.

477
00:25:12,020 --> 00:25:14,910
None of the companies that we spoke to

478
00:25:14,910 --> 00:25:18,420
provided any API
security-specific training

479
00:25:18,420 --> 00:25:20,170
to their developers.

480
00:25:20,170 --> 00:25:23,410
This was one of the more
interesting findings

481
00:25:23,410 --> 00:25:24,510
from our research.

482
00:25:24,510 --> 00:25:28,443
Not one was providing any
API security training.

483
00:25:31,070 --> 00:25:33,810
So, do you have methods to identify

484
00:25:33,810 --> 00:25:36,409
and report security incidents?

485
00:25:36,410 --> 00:25:37,700
Well nine of the companies

486
00:25:37,700 --> 00:25:39,590
had pretty good documented processes

487
00:25:39,590 --> 00:25:42,139
that we heard of and we reviewed,

488
00:25:42,140 --> 00:25:45,030
and it was good for
handling security incidents.

489
00:25:45,030 --> 00:25:45,863
It was good.

490
00:25:45,863 --> 00:25:49,950
Some of them even had RACI
charts, and they had call trees,

491
00:25:49,950 --> 00:25:52,490
and all the things you would
expect when you were talking

492
00:25:52,490 --> 00:25:55,750
about identifying reporting
security incidents.

493
00:25:55,750 --> 00:25:56,990
But 11 of those companies

494
00:25:56,990 --> 00:25:58,810
say well we don't have anything like that.

495
00:25:58,810 --> 00:26:01,909
We'll just handle these
things as they pop up.

496
00:26:01,910 --> 00:26:04,500
And 10 companies didn't
have anything at all.

497
00:26:04,500 --> 00:26:06,940
In fact, it was kind of foreign to them

498
00:26:06,940 --> 00:26:10,760
to even consider that they
needed to have processes

499
00:26:10,760 --> 00:26:12,783
for handling security incidents.

500
00:26:13,950 --> 00:26:18,440
None of the companies we spoke to,

501
00:26:18,440 --> 00:26:21,360
and none of the materials that we reviewed

502
00:26:21,360 --> 00:26:25,122
had any guidance at all
specifically related to APIs.

503
00:26:26,350 --> 00:26:28,659
So, two companies said

504
00:26:28,660 --> 00:26:33,420
they had actually had API
security-related incidents

505
00:26:33,420 --> 00:26:35,360
that had been reported to them.

506
00:26:35,360 --> 00:26:36,379
They didn't find them.

507
00:26:36,380 --> 00:26:39,070
It was their customers that found them.

508
00:26:39,070 --> 00:26:42,679
And 20 of the companies,
20 of the 31 said yep,

509
00:26:42,680 --> 00:26:44,030
we had problems,

510
00:26:44,030 --> 00:26:48,120
but we found it during
third-party penetration testing.

511
00:26:48,120 --> 00:26:50,580
And as I say, that's
pretty late in the process

512
00:26:50,580 --> 00:26:53,183
to be able to find vulnerabilities.

513
00:26:56,170 --> 00:27:00,894
So our recommendations of
ways to improve API security,

514
00:27:00,894 --> 00:27:04,380
these were the things
we put in our reports.

515
00:27:04,380 --> 00:27:06,130
We think that every organization

516
00:27:06,130 --> 00:27:08,870
that is either producing or consuming APIs

517
00:27:08,870 --> 00:27:13,193
should have a knowledgeable
representative for API security.

518
00:27:14,080 --> 00:27:15,550
We think that organizations

519
00:27:15,550 --> 00:27:18,550
should implement an API
management platform.

520
00:27:18,550 --> 00:27:20,960
This is beyond keeping track of APIs

521
00:27:20,960 --> 00:27:24,060
in spreadsheets or other manual means.

522
00:27:24,060 --> 00:27:27,403
There are tools that you
can use to manage your APIs.

523
00:27:28,280 --> 00:27:32,300
We believe that they should
conduct thorough due diligence

524
00:27:32,300 --> 00:27:34,580
on third-party APIs.

525
00:27:34,580 --> 00:27:38,210
They should implement an API
catalog and developer portal.

526
00:27:38,210 --> 00:27:40,073
It's not as hard as it sounds.

527
00:27:41,160 --> 00:27:44,360
Organizations should expose all developers

528
00:27:44,360 --> 00:27:46,129
to API security concepts,

529
00:27:46,130 --> 00:27:49,370
and this includes what kind
of attacks are out there,

530
00:27:49,370 --> 00:27:52,419
what are the methodologies,
what are the tactics,

531
00:27:52,420 --> 00:27:55,640
what are the procedures that
the attackers are using.

532
00:27:55,640 --> 00:27:59,000
To be forewarned is to be forearmed,

533
00:27:59,000 --> 00:28:01,930
and to create and disseminate procedures

534
00:28:01,930 --> 00:28:03,720
for security incidents,

535
00:28:03,720 --> 00:28:06,380
and include API-specific details in there,

536
00:28:06,380 --> 00:28:10,170
such as, if there's an
incident or an anomaly

537
00:28:10,170 --> 00:28:11,970
that is tracked to an API,

538
00:28:11,970 --> 00:28:15,400
how do you quickly
identify who developed it

539
00:28:15,400 --> 00:28:18,590
or who is responsible
for managing that API,

540
00:28:18,590 --> 00:28:20,419
so you can be troubleshooting,

541
00:28:20,420 --> 00:28:23,290
and/or take the necessary measures

542
00:28:23,290 --> 00:28:27,060
to stop that particular attack.

543
00:28:27,060 --> 00:28:30,510
And finally, to include
API security testing

544
00:28:30,510 --> 00:28:33,480
as part of the software
development life cycle.

545
00:28:33,480 --> 00:28:35,740
So these were our recommendations.

546
00:28:35,740 --> 00:28:38,980
We hope that we've been
able to raise awareness

547
00:28:38,980 --> 00:28:43,840
around API security, because
APIs are gonna continue

548
00:28:43,840 --> 00:28:47,290
to be used all across the infrastructure,

549
00:28:47,290 --> 00:28:50,330
all across different markets
and different verticals,

550
00:28:50,330 --> 00:28:52,199
and now is the time to start to focus

551
00:28:52,200 --> 00:28:53,350
on how to protect them.

552
00:28:55,510 --> 00:28:57,440
So, I encourage you,

553
00:28:57,440 --> 00:29:00,390
if you have anything you'd
like to go deeper onto,

554
00:29:00,390 --> 00:29:03,020
you want to enter that
into the chat window.

555
00:29:03,020 --> 00:29:07,170
We can discuss that as we go along.

556
00:29:07,170 --> 00:29:10,130
So I thank you very much for
your participation today,

557
00:29:10,130 --> 00:29:12,960
and I look forward to additional questions

558
00:29:12,960 --> 00:29:14,670
and additional conversation

559
00:29:14,670 --> 00:29:16,803
around the subject of API security.

