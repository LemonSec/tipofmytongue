1
00:00:07,140 --> 00:00:08,387
- [Narrator] No matter
what business you're in,

2
00:00:08,387 --> 00:00:09,220
(light upbeat music)

3
00:00:09,220 --> 00:00:10,930
digital transformation never stops.

4
00:00:10,930 --> 00:00:14,120
At Verizon, we keep companies
ready for what's next.

5
00:00:14,120 --> 00:00:16,219
We weave security into their business,

6
00:00:16,219 --> 00:00:17,880
virtualize their operations,

7
00:00:17,880 --> 00:00:20,150
and build AI customer experiences.

8
00:00:20,150 --> 00:00:21,310
We also keep them ready

9
00:00:21,310 --> 00:00:23,474
for the next big opportunity like 5G.

10
00:00:23,475 --> 00:00:24,850
(audience applauding)

11
00:00:24,850 --> 00:00:27,663
Almost all of the Fortune
500 partner with us.

12
00:00:28,630 --> 00:00:30,779
When it comes to digital transformation,

13
00:00:30,780 --> 00:00:32,692
we're here and we're ready.

14
00:00:43,700 --> 00:00:44,533
- Hello and welcome

15
00:00:44,533 --> 00:00:47,893
to Effective Software
Supply Chain Monitoring.

16
00:00:49,740 --> 00:00:50,740
If you're joining us live,

17
00:00:50,740 --> 00:00:52,800
our speaker is in the
(indistinct) discussion

18
00:00:52,800 --> 00:00:55,120
answering your questions right now.

19
00:00:55,120 --> 00:00:56,730
For audio and video issues,

20
00:00:56,730 --> 00:01:00,050
please click the Technical
Support button below.

21
00:01:00,050 --> 00:01:01,900
I'd not like to turn
it over to our speaker,

22
00:01:01,900 --> 00:01:03,793
Michael Angelo, for the presentation.

23
00:01:07,450 --> 00:01:11,140
- Thank you Ally, I would
like to talk to you today

24
00:01:11,140 --> 00:01:13,720
about effective software
supply chain monitoring.

25
00:01:13,720 --> 00:01:15,570
It's a subject that I've been working on

26
00:01:15,570 --> 00:01:17,259
for the past 10 years,

27
00:01:17,260 --> 00:01:21,463
and it came about rather
strangely to begin with.

28
00:01:22,880 --> 00:01:25,259
With that in mind, let's
talk about the agenda.

29
00:01:25,260 --> 00:01:28,050
I'll give you an outline of the problem.

30
00:01:28,050 --> 00:01:30,710
We'll talk about the
data collection strategy,

31
00:01:30,710 --> 00:01:34,250
how you can actually go and
address some of these issues,

32
00:01:34,250 --> 00:01:35,990
and get things moving.

33
00:01:35,990 --> 00:01:37,399
How you can analyze it,

34
00:01:37,400 --> 00:01:40,563
and then I'll give you some
suggestions for implementation.

35
00:01:41,440 --> 00:01:44,360
One thing to point out, I will
show you some screenshots.

36
00:01:44,360 --> 00:01:47,540
These are from a program
I wrote internally.

37
00:01:47,540 --> 00:01:50,260
There's no way for me
to get you a copy of it.

38
00:01:50,260 --> 00:01:52,710
But the better part of it is
you can look at what I'm doing

39
00:01:52,710 --> 00:01:55,850
and understand how you
might wanna implement it,

40
00:01:55,850 --> 00:01:58,199
and improve on what I did.

41
00:01:58,200 --> 00:02:00,380
Clearly, what I've been
doing over 10 years

42
00:02:00,380 --> 00:02:03,699
had been hack a little bit here
and push a little bit there.

43
00:02:03,700 --> 00:02:06,571
So let's talk about the real problem.

44
00:02:06,571 --> 00:02:10,440
When we look at our companies,
we think about security.

45
00:02:10,440 --> 00:02:13,550
And we've looked at everything
we could possibly do

46
00:02:13,550 --> 00:02:14,930
with respect to security.

47
00:02:14,930 --> 00:02:18,810
I mean, we've trained our
users, we scanned our systems,

48
00:02:18,810 --> 00:02:22,610
we've configured them,
and we're secure, right?

49
00:02:22,610 --> 00:02:25,330
Well, consider our environment

50
00:02:25,330 --> 00:02:27,690
as though it were a bottle of water.

51
00:02:27,690 --> 00:02:31,340
We know what's in water,
two hydrogen, one oxygen.

52
00:02:31,340 --> 00:02:34,650
Everyone who's did any
chemistry in high school

53
00:02:34,650 --> 00:02:37,333
or junior high even knows that.

54
00:02:37,333 --> 00:02:40,800
But then we have a new
water that gets release,

55
00:02:40,800 --> 00:02:43,050
and it's improved, it's got things

56
00:02:43,050 --> 00:02:46,663
in it like salt and magnesium sulfate.

57
00:02:46,663 --> 00:02:51,500
And if you have them in small
quantities, you're okay.

58
00:02:51,500 --> 00:02:53,810
But if you have them in large quantities,

59
00:02:53,810 --> 00:02:55,923
they can really upset your stomach.

60
00:02:57,120 --> 00:02:59,993
Now, consider the software
in your environment.

61
00:02:59,993 --> 00:03:01,740
When you add new software,

62
00:03:01,740 --> 00:03:03,803
does it impact your security model?

63
00:03:04,730 --> 00:03:08,609
What if we changed the usage
model for that software?

64
00:03:08,610 --> 00:03:11,150
How does that really impact you?

65
00:03:11,150 --> 00:03:12,880
Does it change your security?

66
00:03:12,880 --> 00:03:14,053
Does it weaken it?

67
00:03:16,180 --> 00:03:19,383
When we look at water as an example,

68
00:03:20,240 --> 00:03:23,510
we pay attention to where
it comes from, okay?

69
00:03:23,510 --> 00:03:26,640
And in reality in today's world,

70
00:03:26,640 --> 00:03:30,640
it's not really the overall
product that we care about.

71
00:03:30,640 --> 00:03:35,640
It's not the product we care
about, it's not the origin.

72
00:03:35,840 --> 00:03:38,470
It doesn't really matter if
it's commercial software,

73
00:03:38,470 --> 00:03:40,960
or homegrown, or open source.

74
00:03:40,960 --> 00:03:44,193
What matters is what's
in the software itself.

75
00:03:45,970 --> 00:03:48,900
So our first problem is
with our environment.

76
00:03:48,900 --> 00:03:52,333
How do we know what's in our environment?

77
00:03:52,333 --> 00:03:54,210
When we look at our systems,

78
00:03:54,210 --> 00:03:56,720
do we know actually every product

79
00:03:56,720 --> 00:03:58,220
that has been added in there,

80
00:03:58,220 --> 00:04:00,740
every download that's been added in there?

81
00:04:00,740 --> 00:04:02,713
Or do we think we know?

82
00:04:03,607 --> 00:04:05,910
And then the question
is what vulnerabilities

83
00:04:05,910 --> 00:04:08,603
do they actually have in those products?

84
00:04:09,710 --> 00:04:12,440
Are there things we can track that tell us

85
00:04:12,440 --> 00:04:14,020
what installed in our environment?

86
00:04:14,020 --> 00:04:16,060
I mean, can we monitor those applications

87
00:04:16,060 --> 00:04:18,303
via the National Vulnerability Database?

88
00:04:19,589 --> 00:04:23,210
We can go out, we can buy some
tools to solve the problem,

89
00:04:23,210 --> 00:04:25,729
to keep track of what's
in our environment,

90
00:04:25,730 --> 00:04:28,250
but we're gonna pay big dollars for those.

91
00:04:28,250 --> 00:04:31,336
And they're gonna do binary analyses,

92
00:04:31,336 --> 00:04:33,480
and I don't know about y'all,

93
00:04:33,480 --> 00:04:36,270
but my budget hasn't
grown over the past year,

94
00:04:36,270 --> 00:04:40,940
so I could do it myself
or we can do it ourselves.

95
00:04:40,940 --> 00:04:42,160
And that's what I wanna talk to you

96
00:04:42,160 --> 00:04:43,900
about is how you can do it yourself

97
00:04:43,900 --> 00:04:45,729
and what pieces you actually can

98
00:04:45,730 --> 00:04:47,453
deploy in your infrastructure.

99
00:04:48,450 --> 00:04:51,219
So the first piece is we can identify

100
00:04:51,220 --> 00:04:52,990
the products in our environment.

101
00:04:52,990 --> 00:04:54,800
We could do it manually.

102
00:04:54,800 --> 00:04:56,420
We could write some software

103
00:04:56,420 --> 00:04:59,540
to look for copyright
statements, and trademarks,

104
00:04:59,540 --> 00:05:03,340
and all the version information
in the product headers.

105
00:05:03,340 --> 00:05:05,130
We can look for license files

106
00:05:05,130 --> 00:05:07,580
associated with those products,

107
00:05:07,580 --> 00:05:09,419
and we can even generate hashes

108
00:05:09,420 --> 00:05:11,360
of everything on the computer

109
00:05:11,360 --> 00:05:15,820
and then look them up in a
national database somewhere.

110
00:05:15,820 --> 00:05:18,140
So assume we can identify

111
00:05:18,140 --> 00:05:20,810
all the components in our infrastructure.

112
00:05:20,810 --> 00:05:24,840
The next question is
what's the real product

113
00:05:24,840 --> 00:05:26,869
associated with that component?

114
00:05:26,870 --> 00:05:28,570
Where did it come from?

115
00:05:28,570 --> 00:05:29,460
What version is it?

116
00:05:29,460 --> 00:05:30,900
I don't know about you,

117
00:05:30,900 --> 00:05:34,460
but when I look at my system
I've got four different copies

118
00:05:34,460 --> 00:05:38,000
of a component and five
different versions.

119
00:05:38,000 --> 00:05:40,640
Okay, so four different versions.

120
00:05:40,640 --> 00:05:43,539
The question is can I
associate the versions

121
00:05:43,540 --> 00:05:46,023
of those components back to a product?

122
00:05:47,980 --> 00:05:49,980
And when I do, can I look

123
00:05:49,980 --> 00:05:52,750
and find the vulnerabilities
associated with them?

124
00:05:52,750 --> 00:05:54,270
Well, a few years back,

125
00:05:54,270 --> 00:05:56,650
the National Vulnerabilities
Database came out,

126
00:05:56,650 --> 00:05:58,210
and now we can look at products

127
00:05:58,210 --> 00:06:01,989
and we can say this product
has these vulnerabilities,

128
00:06:01,990 --> 00:06:03,530
and we can push a vendor to go

129
00:06:03,530 --> 00:06:07,229
and provide a update to
the product or a solution,

130
00:06:07,230 --> 00:06:11,470
and that generally works well.

131
00:06:11,470 --> 00:06:14,900
And you can see that over the past

132
00:06:14,900 --> 00:06:16,659
since we've been doing it,

133
00:06:16,660 --> 00:06:19,070
we're finding more and
more vulnerabilities,

134
00:06:19,070 --> 00:06:22,310
and we're declaring those vulnerabilities.

135
00:06:22,310 --> 00:06:26,500
So as popularity in analysis
processes have taken off,

136
00:06:26,500 --> 00:06:29,560
we can see that this is still increasing.

137
00:06:29,560 --> 00:06:33,557
And then if we know the
applications in our environment

138
00:06:33,557 --> 00:06:35,730
and we know their vulnerabilities,

139
00:06:35,730 --> 00:06:37,180
we should be able to cut this

140
00:06:37,180 --> 00:06:40,673
back down to zero, but maybe not.

141
00:06:41,710 --> 00:06:43,049
If you think about it,

142
00:06:43,050 --> 00:06:47,780
there are currently 324
OpenSSL vulnerabilities.

143
00:06:47,780 --> 00:06:49,270
And when you look on the list,

144
00:06:49,270 --> 00:06:53,712
you'll see there are 3,208
products with SSL as components.

145
00:06:54,740 --> 00:06:56,380
Remember most software's written

146
00:06:56,380 --> 00:06:59,540
for functionality, not
necessarily security,

147
00:06:59,540 --> 00:07:03,630
and we may include components
that are vulnerable,

148
00:07:03,630 --> 00:07:07,413
but how do we really know what
components are vulnerable?

149
00:07:08,800 --> 00:07:10,460
Think of it this way also.

150
00:07:10,460 --> 00:07:13,880
When we get a component
that's really vulnerable,

151
00:07:13,880 --> 00:07:15,300
it can be prevalent throughout

152
00:07:15,300 --> 00:07:18,910
our entire infrastructure and the world.

153
00:07:18,910 --> 00:07:22,290
So in 2014, sorry for the old statistics,

154
00:07:22,290 --> 00:07:24,340
it was said that 2/3 of the web servers

155
00:07:24,340 --> 00:07:27,960
used OpenSSL to secure
their communications.

156
00:07:27,960 --> 00:07:30,049
If I looked on March 1st,

157
00:07:30,050 --> 00:07:34,820
there are 1,263,000,000
sites on the internet

158
00:07:36,360 --> 00:07:40,610
or domain sites, and they're
pretty much all using OpenSSL.

159
00:07:40,610 --> 00:07:42,240
And even if we just limit it

160
00:07:42,240 --> 00:07:44,500
to the number of web-facing computers,

161
00:07:44,500 --> 00:07:48,540
there's almost 10 million
web-facing computers,

162
00:07:48,540 --> 00:07:50,910
all of which are running OpenSSL.

163
00:07:50,910 --> 00:07:55,910
So having 3,208 different
programs that have vulnerabilities

164
00:07:57,747 --> 00:08:01,660
and 324 vulnerabilities available to them

165
00:08:01,660 --> 00:08:06,013
makes this number non-tenable
for us to continue to survive.

166
00:08:07,490 --> 00:08:10,640
So how do we find the
components in the products?

167
00:08:10,640 --> 00:08:15,640
So if I'm using OpenSSL and
I've got a program like Tomcat

168
00:08:15,750 --> 00:08:18,670
or something else and
OpenSSL is embedded in it,

169
00:08:18,670 --> 00:08:22,663
how do I find out what products
actually have an OpenSSL?

170
00:08:23,620 --> 00:08:25,970
Well, I can look at the install list

171
00:08:25,970 --> 00:08:28,173
and sometimes that works.

172
00:08:29,200 --> 00:08:32,860
But it usually doesn't
drill down all the way.

173
00:08:32,860 --> 00:08:36,049
There are some free tools like
the OWASP Dependency Checker

174
00:08:36,049 --> 00:08:37,959
which will let you do that.

175
00:08:37,960 --> 00:08:40,169
But again, it doesn't do everything.

176
00:08:40,169 --> 00:08:42,622
So you could build you own tool.

177
00:08:43,539 --> 00:08:46,740
NIST has a software reference
library that has hashes

178
00:08:46,740 --> 00:08:49,350
for hundreds of thousands
of different products,

179
00:08:49,350 --> 00:08:50,920
and there are already some tools out there

180
00:08:50,920 --> 00:08:52,099
that you can actually go

181
00:08:52,100 --> 00:08:56,090
and get to do the look
ups based on the hashes.

182
00:08:56,090 --> 00:08:59,250
So that makes it easier
to say this components

183
00:08:59,250 --> 00:09:02,570
is probably associated
with this application.

184
00:09:02,570 --> 00:09:04,940
I've also taken the liberty on the slides

185
00:09:04,940 --> 00:09:09,380
to stick all of the references
to where you can find stuff

186
00:09:09,380 --> 00:09:10,900
so that if you wanna go back

187
00:09:10,900 --> 00:09:13,000
and try and start doing
this on you're own,

188
00:09:13,000 --> 00:09:14,440
you at least can start from there

189
00:09:14,440 --> 00:09:16,943
rather than having to
go and hunt and find it.

190
00:09:19,368 --> 00:09:23,780
Okay, so if you're developing
software on you're own,

191
00:09:25,360 --> 00:09:27,640
then it's relatively easy

192
00:09:27,640 --> 00:09:29,850
because you're gonna require
your teams to declare

193
00:09:29,850 --> 00:09:33,800
what third-party components
are in there to begin with.

194
00:09:33,800 --> 00:09:35,839
You wanna do this in general
so that you can make sure

195
00:09:35,840 --> 00:09:38,490
that you're not violating
any software licenses

196
00:09:38,490 --> 00:09:40,090
or doing anything that's gonna get you

197
00:09:40,090 --> 00:09:43,150
in trouble with someone's copyright.

198
00:09:43,150 --> 00:09:46,990
So you can be required to
declare what the components are,

199
00:09:46,990 --> 00:09:50,130
or you could go out and get
automations tools as applicable.

200
00:09:50,130 --> 00:09:52,710
So OWASP Dependency Checker, for example,

201
00:09:52,710 --> 00:09:55,390
is a good tool to go and use to run

202
00:09:55,390 --> 00:09:57,650
and see what third-party
components are there.

203
00:09:57,650 --> 00:10:00,393
And it'll also give you
some of the vulnerabilities.

204
00:10:02,020 --> 00:10:04,100
As far as external software,

205
00:10:04,100 --> 00:10:08,450
you should be able to start
asking for a bill of materials.

206
00:10:08,450 --> 00:10:10,540
And as we move forward in time,

207
00:10:10,540 --> 00:10:12,790
there are standards
that have been proposed

208
00:10:12,790 --> 00:10:15,730
that are being adopted to actually go

209
00:10:15,730 --> 00:10:18,860
and do these bills of materials.

210
00:10:18,860 --> 00:10:23,713
So that sort of solves our
problem with supply chain, right?

211
00:10:24,580 --> 00:10:27,303
Well, maybe not.

212
00:10:31,620 --> 00:10:34,250
The next problem with the
components is we need a way

213
00:10:34,250 --> 00:10:37,090
to track all of the vulnerabilities

214
00:10:37,090 --> 00:10:38,730
after the tools are deployed.

215
00:10:38,730 --> 00:10:41,220
So when we're looking at putting

216
00:10:41,220 --> 00:10:42,600
the product out on the system,

217
00:10:42,600 --> 00:10:44,290
we can go and we can look at the tools,

218
00:10:44,290 --> 00:10:46,630
and we can look at the vulnerabilities,

219
00:10:46,630 --> 00:10:50,260
and we can go and look
up them at that point.

220
00:10:50,260 --> 00:10:53,360
But what if a new
vulnerability is released

221
00:10:53,360 --> 00:10:55,903
for a component that's
embedded in a product?

222
00:10:56,790 --> 00:11:00,270
So we really need a tool
that will cross-reference

223
00:11:00,270 --> 00:11:02,500
the software that's on the system

224
00:11:02,500 --> 00:11:05,310
or in the infrastructure
to the vulnerabilities

225
00:11:05,310 --> 00:11:08,103
in the CVE database and
raise the awareness.

226
00:11:09,630 --> 00:11:11,460
It should provide sufficient information

227
00:11:11,460 --> 00:11:13,560
to enable you to test or ask about

228
00:11:13,560 --> 00:11:17,530
the potential security
vulnerabilities from your vendors.

229
00:11:17,530 --> 00:11:19,130
Or from the people who wrote

230
00:11:19,130 --> 00:11:21,600
the software in your own infrastructure.

231
00:11:21,600 --> 00:11:22,840
The rest of this presentation

232
00:11:22,840 --> 00:11:24,687
we're gonna cover the lessons I've learned

233
00:11:24,687 --> 00:11:28,740
and the gotchas I've had
in developing a local tool

234
00:11:28,740 --> 00:11:32,720
in my infrastructure to identify

235
00:11:32,720 --> 00:11:37,640
and bring the awareness
of these components

236
00:11:37,640 --> 00:11:41,733
and these vulnerabilities to
people in my organization.

237
00:11:44,430 --> 00:11:46,858
So the first thing you're gonna wanna do

238
00:11:46,858 --> 00:11:49,820
is you're gonna wanna
define a local database.

239
00:11:49,821 --> 00:11:51,671
It's very important, you do this

240
00:11:51,671 --> 00:11:53,860
because you're gonna be
dealing with a lot of data.

241
00:11:53,860 --> 00:11:56,720
If you look at how many
pieces of applications are-

242
00:11:56,720 --> 00:11:59,620
Or how many applications
are in your infrastructure

243
00:11:59,620 --> 00:12:03,560
and if each application
has 20 to 30 subcomponents,

244
00:12:03,560 --> 00:12:06,119
you're gonna wanna track those.

245
00:12:06,120 --> 00:12:08,533
So you're gonna wanna
develop a local database.

246
00:12:09,470 --> 00:12:14,360
The stuff that I portrayed here
is stuff that I think helps.

247
00:12:14,360 --> 00:12:16,790
Now, of course we're gonna
have the ID of the components,

248
00:12:16,790 --> 00:12:17,660
you're gonna have pointers

249
00:12:17,660 --> 00:12:20,890
to the components and subcomponents.

250
00:12:20,890 --> 00:12:22,470
You're gonna have copyright.

251
00:12:22,470 --> 00:12:24,900
You may want to put some
other things in there

252
00:12:24,900 --> 00:12:27,310
like the license references.

253
00:12:27,310 --> 00:12:28,869
Is this an OpenS-

254
00:12:28,870 --> 00:12:33,410
A LGPL or is it a license
software component

255
00:12:33,410 --> 00:12:34,699
for a library, et cetera?

256
00:12:34,700 --> 00:12:36,250
So you're gonna wanna track that also,

257
00:12:36,250 --> 00:12:39,443
but I'm kind of glossing over that

258
00:12:39,443 --> 00:12:42,860
because there's so many different
things you can put there.

259
00:12:42,860 --> 00:12:47,040
You'll also wanna have CVEs
with the component list.

260
00:12:47,040 --> 00:12:52,040
So CVE One has these five
versions of this software in it.

261
00:12:52,987 --> 00:12:54,270
And you're gonna wanna make sure

262
00:12:54,270 --> 00:12:55,439
that you've enumerated them

263
00:12:55,440 --> 00:12:59,080
because just because you've
got a version of software-

264
00:12:59,080 --> 00:13:01,470
A software package
associated with your product

265
00:13:01,470 --> 00:13:03,560
doesn't mean that that version

266
00:13:03,560 --> 00:13:06,863
is really going to be relevant
for your infrastructure.

267
00:13:09,470 --> 00:13:14,470
What would a database be
without relationships?

268
00:13:14,830 --> 00:13:18,330
One of the things I found
early on was that you'll

269
00:13:18,330 --> 00:13:20,730
wind up with nested relationships.

270
00:13:20,730 --> 00:13:22,880
So you might have Product One.

271
00:13:22,880 --> 00:13:25,240
Product One will have Component Two in it,

272
00:13:25,240 --> 00:13:28,380
and Component Two might
have Component Three in it,

273
00:13:28,380 --> 00:13:30,930
and Component Three might
have Component four in it.

274
00:13:30,930 --> 00:13:33,680
So you'll wanna know that
so that as you're looking

275
00:13:33,680 --> 00:13:35,000
at you're product list,

276
00:13:35,000 --> 00:13:38,750
you'll be able to say, "Oh,
three or four levels down,

277
00:13:38,750 --> 00:13:41,980
we've identified these vulnerabilities."

278
00:13:41,980 --> 00:13:43,840
And you can go back to your vendor

279
00:13:43,840 --> 00:13:46,650
and say, "Are you impacted by this?"

280
00:13:46,650 --> 00:13:49,350
Nine times out of 10 the vendors aren't,

281
00:13:49,350 --> 00:13:52,040
but it's always good
to ask that questions.

282
00:13:52,040 --> 00:13:54,630
In this case, I've just
shown you two levels down,

283
00:13:54,630 --> 00:13:57,520
the main product and then a subcomponent.

284
00:13:57,520 --> 00:14:02,173
And I'm showing you an
entry into the CVE database,

285
00:14:03,020 --> 00:14:07,600
and basically what we have
is we've got the CVE number,

286
00:14:07,600 --> 00:14:12,030
and then we've got a
component ID hidden in a table

287
00:14:12,030 --> 00:14:13,709
so that we can cross-reference

288
00:14:13,710 --> 00:14:15,940
back to the main CVE database.

289
00:14:15,940 --> 00:14:17,930
So if you look at it on the left,

290
00:14:17,930 --> 00:14:22,130
your product, your product
components, your CVE components,

291
00:14:22,130 --> 00:14:24,253
and then the CVE itself.

292
00:14:25,330 --> 00:14:27,740
Very important to get the link list of-

293
00:14:27,740 --> 00:14:31,520
Or the link of the IDs in there properly

294
00:14:31,520 --> 00:14:33,280
and the child components properly

295
00:14:33,280 --> 00:14:36,449
because if you don't then
things really get confused,

296
00:14:36,450 --> 00:14:39,503
and you really haven't got
what you thought you wanted.

297
00:14:40,865 --> 00:14:43,360
So some other things to consider.

298
00:14:43,360 --> 00:14:47,960
Procedurally there are too many
new CVEs released every day.

299
00:14:47,960 --> 00:14:49,320
I've gotta admit that.

300
00:14:49,320 --> 00:14:51,310
Although there are a few
days where I see one or two,

301
00:14:51,310 --> 00:14:54,160
I normally see about 20
or 30 CVEs every day,

302
00:14:54,160 --> 00:14:57,870
so you're gonna wanna
load the CVEs every day

303
00:14:57,870 --> 00:15:00,070
and look at those CVEs to make sure

304
00:15:00,070 --> 00:15:02,380
that there's not something
impacting your product.

305
00:15:02,380 --> 00:15:04,620
Now, the good news is this can be done

306
00:15:04,620 --> 00:15:07,750
relatively fast when you
get the database in place

307
00:15:07,750 --> 00:15:10,500
because you might have 20 CVEs,

308
00:15:10,500 --> 00:15:13,600
but chances are you're not
using any of the components

309
00:15:13,600 --> 00:15:16,090
in those CVEs in your infrastructure.

310
00:15:16,090 --> 00:15:17,863
So it's a very fast run.

311
00:15:18,710 --> 00:15:20,258
The second thing you're gonna wanna do

312
00:15:20,258 --> 00:15:22,060
is you wanna make sure that
you're always reviewing

313
00:15:22,060 --> 00:15:24,680
the old products for new CVEs every day.

314
00:15:24,680 --> 00:15:29,290
So you'll run your CVE check,
you'll get the new CVEs,

315
00:15:29,290 --> 00:15:31,430
and then you wanna run it
against all the products

316
00:15:31,430 --> 00:15:33,992
in your environment out of your database.

317
00:15:35,760 --> 00:15:37,500
The next thing you're gonna wanna do

318
00:15:37,500 --> 00:15:40,470
is you're gonna need to
figure out how to you detect

319
00:15:40,470 --> 00:15:43,010
when a new product is on your system?

320
00:15:43,010 --> 00:15:47,280
Because just because
you've got a old product

321
00:15:47,280 --> 00:15:50,500
doesn't mean that all the
things are being identified.

322
00:15:50,500 --> 00:15:52,410
When you have a new product
in the infrastructure,

323
00:15:52,410 --> 00:15:53,780
now all of the sudden you have to look

324
00:15:53,780 --> 00:15:58,717
and see are there more
vulnerabilities against that, okay?

325
00:15:58,717 --> 00:16:02,330
And by the way, notification
is really important.

326
00:16:02,330 --> 00:16:04,650
You wanna notify someone
if you see new products

327
00:16:04,650 --> 00:16:06,829
and components in your environment,

328
00:16:06,830 --> 00:16:10,560
preferably the person who's
gonna be tracking this stuff.

329
00:16:10,560 --> 00:16:11,680
Preferable they're-

330
00:16:11,680 --> 00:16:12,810
Or maybe even the person

331
00:16:12,810 --> 00:16:15,583
who is going to be
responsible for it, okay?

332
00:16:16,820 --> 00:16:20,030
So you'll wanna have a
list of new products,

333
00:16:20,030 --> 00:16:21,670
a list of components,

334
00:16:21,670 --> 00:16:23,719
and then the CVEs associated

335
00:16:23,720 --> 00:16:26,793
with any of those new
products and or components.

336
00:16:27,660 --> 00:16:29,750
You're gonna wanna
provide a triage mechanism

337
00:16:29,750 --> 00:16:33,760
to say is this important,
isn't this important?

338
00:16:33,760 --> 00:16:35,585
Is there an issue here or not?

339
00:16:35,585 --> 00:16:37,260
Just because something has a CVE

340
00:16:37,260 --> 00:16:38,819
doesn't mean it's vulnerable.

341
00:16:38,820 --> 00:16:40,033
Keep that in mind.

342
00:16:41,800 --> 00:16:44,069
So when you kick off your program,

343
00:16:44,070 --> 00:16:45,580
you're always gonna wanna ask

344
00:16:45,580 --> 00:16:47,610
do you wanna update the CVE list?

345
00:16:47,610 --> 00:16:51,280
If they say no, then we'll
bring you into another screen.

346
00:16:51,280 --> 00:16:54,250
But if they say, you're
gonna wanna make sure

347
00:16:54,250 --> 00:16:55,790
that you've got certain features.

348
00:16:55,790 --> 00:16:56,913
For example, you wanna make sure

349
00:16:56,913 --> 00:16:59,260
that you can specify the year.

350
00:16:59,260 --> 00:17:01,420
Just because you're in 2020

351
00:17:01,420 --> 00:17:03,410
doesn't mean someone won't enter

352
00:17:03,410 --> 00:17:06,720
or update a vulnerability in 2019.

353
00:17:06,720 --> 00:17:10,460
And if that vulnerability from
2019 impacts your product,

354
00:17:10,460 --> 00:17:14,343
you've got an issue, okay?

355
00:17:15,260 --> 00:17:17,869
You're gonna wanna keep track
of how many vulnerabilities

356
00:17:17,869 --> 00:17:19,209
there are in the database.

357
00:17:19,210 --> 00:17:22,890
That's what this Total
Current Vulnerability is.

358
00:17:22,890 --> 00:17:25,300
And then you're gonna
wanna also keep track

359
00:17:25,300 --> 00:17:28,850
of new vulnerabilities and
updated vulnerabilities.

360
00:17:28,850 --> 00:17:32,939
And this stuff can take some
time as you're downloading it.

361
00:17:32,940 --> 00:17:34,580
Well, download takes a few seconds,

362
00:17:34,580 --> 00:17:36,610
but as you're doing the analysis

363
00:17:36,610 --> 00:17:38,790
and dumping into your product,

364
00:17:38,790 --> 00:17:40,370
it's gonna take you a little bit of time

365
00:17:40,370 --> 00:17:41,840
so you wanna make sure that you've got

366
00:17:41,840 --> 00:17:45,870
some sort of measurement
bar to track the progress.

367
00:17:45,870 --> 00:17:46,909
There've been a few times

368
00:17:46,910 --> 00:17:49,230
because I've got my
database across the network

369
00:17:49,230 --> 00:17:52,094
that it's taken longer than I expected.

370
00:17:52,094 --> 00:17:53,347
And I was sitting there going,

371
00:17:53,347 --> 00:17:55,077
"Is this dead or isn't it dead?"

372
00:17:56,020 --> 00:17:58,710
You will wanna have a window on the bottom

373
00:17:58,710 --> 00:18:02,860
so you can see progress, display
messages there, et cetera.

374
00:18:02,860 --> 00:18:06,370
When you're done with that,
you would close this window.

375
00:18:06,370 --> 00:18:08,870
And it should bring you
into the screen on the left

376
00:18:08,870 --> 00:18:12,203
or something like the
screen on the left, okay?

377
00:18:14,970 --> 00:18:17,777
In this screen, you should
be able to select any CVE,

378
00:18:17,777 --> 00:18:20,560
and it'll give you
information about the CVE

379
00:18:20,560 --> 00:18:23,260
in the screen to the
left where it tells you

380
00:18:23,260 --> 00:18:26,300
what the vulnerability
is and everything else.

381
00:18:26,300 --> 00:18:28,280
And you should be able to go

382
00:18:28,280 --> 00:18:30,850
and see what products in your environment

383
00:18:30,850 --> 00:18:35,392
based on the CVE that you
selected are relevant.

384
00:18:36,530 --> 00:18:37,643
One things that's important

385
00:18:37,643 --> 00:18:39,077
because I'm not a SQL expert

386
00:18:39,077 --> 00:18:40,790
and I didn't wanna grow up

387
00:18:40,790 --> 00:18:43,600
to be a SQL expert or an Access expert,

388
00:18:43,600 --> 00:18:46,820
I always displayed what the command string

389
00:18:46,820 --> 00:18:48,770
was that I was sending to the database

390
00:18:48,770 --> 00:18:50,950
so I could make sure it's accurate.

391
00:18:50,950 --> 00:18:55,490
There may be times if you
look to the second row

392
00:18:55,490 --> 00:18:57,800
from the bottom, the
red arrow that's there,

393
00:18:57,800 --> 00:19:00,040
there may be times when you want to select

394
00:19:00,040 --> 00:19:03,067
a specific machine or
groups of machines to scan

395
00:19:03,067 --> 00:19:07,520
and look to see if there's
an issue, very important.

396
00:19:07,520 --> 00:19:11,120
Now, because this code
evolved over 10 years,

397
00:19:11,120 --> 00:19:15,070
I put a debug window in
there which is on the top.

398
00:19:15,070 --> 00:19:16,756
It's a debug flag, basically it says,

399
00:19:16,757 --> 00:19:19,420
"Okay, show me some hidden features."

400
00:19:19,420 --> 00:19:21,180
And that's what the
screen to the right is.

401
00:19:21,180 --> 00:19:24,330
The screen to the right
was an afterthought I had

402
00:19:24,330 --> 00:19:26,699
as I got used to doing this.

403
00:19:26,700 --> 00:19:28,030
Rather than just going through

404
00:19:28,030 --> 00:19:31,250
and looking at all the new CVEs manually,

405
00:19:31,250 --> 00:19:33,880
I wanted to see a bunch of things.

406
00:19:33,880 --> 00:19:35,730
So in this case, the first
thing I wanted to see

407
00:19:35,730 --> 00:19:39,770
was what new products
are in my infrastructure?

408
00:19:39,770 --> 00:19:44,260
Now, I wanted to set it up
in such a way that I could go

409
00:19:44,260 --> 00:19:46,870
based on the portfolio,
the machine portfolio,

410
00:19:46,870 --> 00:19:48,780
and then look at the products on that.

411
00:19:48,780 --> 00:19:53,780
So if I've got a HR group, I
would have a portfolio for HR.

412
00:19:53,850 --> 00:19:56,419
And if I told it to scan the HR portfolio,

413
00:19:56,420 --> 00:20:00,400
it would automatically go
and look all the way down.

414
00:20:00,400 --> 00:20:02,660
There were times when I
just wanted to do one.

415
00:20:02,660 --> 00:20:04,250
There were time when I wanna do

416
00:20:04,250 --> 00:20:07,300
just all the new stuff
in the infrastructure.

417
00:20:07,300 --> 00:20:09,610
So I put a little flag there that says

418
00:20:09,610 --> 00:20:11,110
show me everything that's new.

419
00:20:12,860 --> 00:20:14,543
And then I can run it.

420
00:20:15,630 --> 00:20:18,500
For various reason, I decided don't let it

421
00:20:18,500 --> 00:20:21,050
automatically update the date.

422
00:20:21,050 --> 00:20:23,290
What I found happening
was there were times

423
00:20:23,290 --> 00:20:26,570
when I found new machines or new products,

424
00:20:26,570 --> 00:20:28,310
that I wanted to look at.

425
00:20:28,310 --> 00:20:29,470
And I wanted to go back

426
00:20:29,470 --> 00:20:32,230
but if I exited the program,
it updated the date,

427
00:20:32,230 --> 00:20:33,777
and then I had to edit the database,

428
00:20:33,777 --> 00:20:36,680
and that's not really something fun.

429
00:20:36,680 --> 00:20:39,950
So I force it to allow me or ena-

430
00:20:39,950 --> 00:20:41,250
I created a button that's says

431
00:20:41,250 --> 00:20:44,573
update the date on the new scan list.

432
00:20:45,500 --> 00:20:49,120
These are all simple things
that as you're doing the coding,

433
00:20:49,120 --> 00:20:51,239
you don't necessarily think about,

434
00:20:51,240 --> 00:20:54,600
but trust me, later on
having stuff like that,

435
00:20:54,600 --> 00:20:57,139
those features and functions
can definitely save you

436
00:20:57,140 --> 00:20:58,863
a lot of time and aggravation.

437
00:21:01,080 --> 00:21:04,310
The next functionality was the daily test.

438
00:21:04,310 --> 00:21:06,750
Again, I wanna start
off with the portfolio,

439
00:21:06,750 --> 00:21:09,823
or I could say show me all the portfolios.

440
00:21:10,690 --> 00:21:14,770
There are times when there
are errors that will pop up.

441
00:21:14,770 --> 00:21:19,240
The NVD database doesn't
always have all the data in it.

442
00:21:19,240 --> 00:21:23,350
I know you're shocked by
this, but hey, it happens.

443
00:21:23,350 --> 00:21:25,949
So you're gonna wanna be able to go

444
00:21:25,950 --> 00:21:29,360
and tell it to ignore errors,

445
00:21:29,360 --> 00:21:31,659
you're gonna tell it to go automatic.

446
00:21:31,660 --> 00:21:35,250
You may wanna just look at
one specific vulnerability

447
00:21:35,250 --> 00:21:37,495
and one specific application.

448
00:21:37,495 --> 00:21:41,600
So make sure you include
buttons there to do that.

449
00:21:41,600 --> 00:21:44,260
Another cool feature that
you're gonna wanna implement

450
00:21:44,260 --> 00:21:45,350
because you've got all the data

451
00:21:45,350 --> 00:21:48,449
is you're gonna wanna look up
the CVE list by components.

452
00:21:48,450 --> 00:21:52,373
You're gonna wanna say,
"Hey, I've got OpenSSL.

453
00:21:53,430 --> 00:21:54,340
Show me the list

454
00:21:54,340 --> 00:21:58,860
of the all the CVEs
associated with OpenSSL."

455
00:21:58,860 --> 00:22:02,020
And it'll actually dump the entire list

456
00:22:02,020 --> 00:22:04,293
by that component, very useful.

457
00:22:06,990 --> 00:22:11,990
Of course, if you could do
a list of CVEs by component,

458
00:22:12,210 --> 00:22:13,560
you should also be able to list

459
00:22:13,560 --> 00:22:16,230
the components in a particular product.

460
00:22:16,230 --> 00:22:17,657
So you might sit there and say,

461
00:22:17,657 --> 00:22:21,010
"Oh, is OpenSSL 102J in this product?"

462
00:22:21,010 --> 00:22:23,840
And you'll be able to
just say show me that

463
00:22:23,840 --> 00:22:26,340
and show me all the components in there.

464
00:22:26,340 --> 00:22:28,409
Of course, then you could have some fun

465
00:22:28,410 --> 00:22:30,237
and you can say show me components

466
00:22:30,237 --> 00:22:32,730
and CVEs that match a specific product

467
00:22:32,730 --> 00:22:33,930
on the specific machine.

468
00:22:34,770 --> 00:22:38,430
And the limitations are...

469
00:22:38,430 --> 00:22:41,173
The permutations are
endless in terms of this.

470
00:22:43,600 --> 00:22:48,600
Okay, some cautions, just
because you find a vulnerability

471
00:22:48,720 --> 00:22:52,150
in a component doesn't
mean it's meaningful.

472
00:22:52,150 --> 00:22:54,800
There are times I've seen
vulnerabilities in Tomcat,

473
00:22:54,800 --> 00:22:58,159
and I look at the Tomcat code,
and yeah, it's in Tomcat,

474
00:22:58,160 --> 00:23:01,910
but we're not even enabling
that feature or functionality

475
00:23:01,910 --> 00:23:03,960
so there's no way to get there from here.

476
00:23:06,250 --> 00:23:09,687
When you're doing this, and
you're looking at the CVEs,

477
00:23:09,687 --> 00:23:11,479
and you're looking at the components,

478
00:23:11,480 --> 00:23:14,530
you should think about
how you wanna mark them.

479
00:23:14,530 --> 00:23:18,270
Are they Relevant meaning
someone's gonna get an upgrade,

480
00:23:18,270 --> 00:23:21,310
or an update, or you've gotta
figure out a way to fix it.

481
00:23:21,310 --> 00:23:25,240
Is it Not Relevant meaning
it doesn't really impact us,

482
00:23:25,240 --> 00:23:27,520
there's no way to get it to impact us.

483
00:23:27,520 --> 00:23:30,420
And Under Investigation,
Under Investigation

484
00:23:30,420 --> 00:23:33,630
is probably the one that
I look at the most often

485
00:23:33,630 --> 00:23:35,220
and I'm the most nervous about

486
00:23:35,220 --> 00:23:38,170
because it means it may impact us,

487
00:23:38,170 --> 00:23:40,299
or it doesn't but we don't know.

488
00:23:40,299 --> 00:23:42,213
And anything we don't know is bad.

489
00:23:43,060 --> 00:23:45,389
Next, you're of course
gonna wanna put Mitigated,

490
00:23:45,390 --> 00:23:48,290
or Not Mitigated, or No
mitigation necessary.

491
00:23:48,290 --> 00:23:50,133
So if it's Not Relevant,

492
00:23:50,133 --> 00:23:53,110
then of course no mitigation's necessary.

493
00:23:53,110 --> 00:23:55,580
If it's Relevant and Not Mitigated,

494
00:23:55,580 --> 00:23:58,280
well, then you need to
be looking at solving it.

495
00:23:58,280 --> 00:24:00,410
And if it was Relevant and Mitigated,

496
00:24:00,410 --> 00:24:03,173
then things are good and you can move on.

497
00:24:05,340 --> 00:24:08,669
There are issues with the
Vulnerability Database.

498
00:24:08,670 --> 00:24:10,740
Sometimes you're gonna
get an error message

499
00:24:10,740 --> 00:24:13,763
that says this is lacking
complete information.

500
00:24:14,600 --> 00:24:18,260
This happens from time to
time, it's very frustrating,

501
00:24:18,260 --> 00:24:21,760
but plan on coding if the
Vulnerability Database

502
00:24:21,760 --> 00:24:24,503
is not accurate or
there's an issue with it.

503
00:24:27,520 --> 00:24:30,250
So to recap applying this today,

504
00:24:30,250 --> 00:24:31,440
look at the resources

505
00:24:31,440 --> 00:24:33,440
that I talked about in the presentation.

506
00:24:34,400 --> 00:24:36,930
Look at the strategy for creating a tool

507
00:24:36,930 --> 00:24:38,970
that identifies components in software,

508
00:24:38,970 --> 00:24:42,170
or you should be able to go
and look at some of the BoM,

509
00:24:42,170 --> 00:24:43,920
the bill of material standards,

510
00:24:43,920 --> 00:24:45,823
and see if you can't use one of those.

511
00:24:46,690 --> 00:24:49,670
The tool you should create or can create

512
00:24:49,670 --> 00:24:52,000
should check against the CVEs.

513
00:24:52,000 --> 00:24:53,980
And it should enable you to triage

514
00:24:53,980 --> 00:24:58,586
and communicate potential
issues with other people

515
00:24:58,586 --> 00:25:02,010
in your organization, or
your company, or out there.

516
00:25:02,010 --> 00:25:03,940
So go out, spread the word.

517
00:25:03,940 --> 00:25:05,750
We've got these great databases,

518
00:25:05,750 --> 00:25:10,060
we've got this great technology
that we should be utilizing

519
00:25:10,060 --> 00:25:11,710
to go and make our world better.

520
00:25:11,710 --> 00:25:14,993
And we really, really,
really should be doing it.

521
00:25:16,520 --> 00:25:20,760
So just remember, don't
poison your organization

522
00:25:20,760 --> 00:25:22,090
with a new software or software

523
00:25:22,090 --> 00:25:25,720
that's not quite what you expect it to be,

524
00:25:25,720 --> 00:25:27,730
that has third-party components

525
00:25:27,730 --> 00:25:31,663
that may or may not have
issues in it, thank you.

