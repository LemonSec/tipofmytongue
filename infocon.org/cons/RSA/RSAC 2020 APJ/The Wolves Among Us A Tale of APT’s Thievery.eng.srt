1
00:00:08,029 --> 00:00:10,612
(upbeat music)

2
00:00:41,519 --> 00:00:43,800
- Hello and welcome to
"The Wolves Among Us."

3
00:00:43,800 --> 00:00:45,970
A tale of APCs Thievery.

4
00:00:45,970 --> 00:00:47,519
If you are joining us live,

5
00:00:47,520 --> 00:00:50,340
our speaker is in the Slido
chat discussion area now

6
00:00:50,340 --> 00:00:51,990
answering any questions.

7
00:00:51,990 --> 00:00:54,150
If you have any audio or video issues,

8
00:00:54,150 --> 00:00:56,720
please click the technical
support button below.

9
00:00:56,720 --> 00:00:59,650
I'd now like to turn it
over to Stefano Maccaglia

10
00:00:59,650 --> 00:01:00,723
for the presentation.

11
00:01:05,310 --> 00:01:07,710
- Hello, thank you for joining.

12
00:01:07,710 --> 00:01:09,770
So, we'll speak about

13
00:01:14,476 --> 00:01:15,309
one case

14
00:01:15,309 --> 00:01:18,084
that involves the Middle
East cyberespionage.

15
00:01:18,084 --> 00:01:20,879
Middle East is a quite
busy place and stage

16
00:01:20,879 --> 00:01:23,703
for cyberespionage these days.

17
00:01:23,703 --> 00:01:26,436
The area is attractive both for locals

18
00:01:26,436 --> 00:01:30,022
and foreign attackers
in the last 10 years.

19
00:01:30,022 --> 00:01:32,654
In our case, the Governmental Agency

20
00:01:32,654 --> 00:01:35,979
requested assistance by call to our staff

21
00:01:37,270 --> 00:01:40,100
based on the fact that they
were already our customer,

22
00:01:40,100 --> 00:01:41,720
having our hear in place,

23
00:01:41,720 --> 00:01:45,470
but they were having
some elements to discuss

24
00:01:45,470 --> 00:01:49,429
about finding of compromise
that was tagged back

25
00:01:49,430 --> 00:01:51,713
to August 2018.

26
00:01:52,740 --> 00:01:57,460
We were at the October
2018 now, so two months.

27
00:01:57,460 --> 00:01:59,160
Well to carry our engagement

28
00:01:59,160 --> 00:02:01,210
we normally tenses to spoke,

29
00:02:01,210 --> 00:02:04,059
if have the chance to
ensure our visibility

30
00:02:04,060 --> 00:02:06,360
on three main items.

31
00:02:06,360 --> 00:02:09,863
Network visibility, host
visibility, lost visibility

32
00:02:09,863 --> 00:02:14,863
In this case, while the network
visibility was good enough,

33
00:02:16,090 --> 00:02:20,470
because it was already deployed
into the network traffic

34
00:02:20,470 --> 00:02:23,630
going back and forth from
the environment and internet,

35
00:02:23,630 --> 00:02:25,980
we were still having some issues about

36
00:02:25,980 --> 00:02:29,130
the availability of our endpoint product.

37
00:02:29,130 --> 00:02:31,269
But more important, we were still having

38
00:02:31,270 --> 00:02:33,870
a lot of visibility gain
from the environment

39
00:02:33,870 --> 00:02:37,970
based on the evidences
the customer present.

40
00:02:37,970 --> 00:02:42,970
It present basically, evidences of archive

41
00:02:43,020 --> 00:02:48,020
containing sensitive
data recorded and created

42
00:02:48,270 --> 00:02:53,030
into a DMZ server where
they are not supposed to be,

43
00:02:53,030 --> 00:02:56,273
and the creation date
was I was August 18 2018.

44
00:02:59,070 --> 00:03:03,829
We went into verifying,
obviously, the system in the DMZ

45
00:03:03,830 --> 00:03:07,410
but also because this lateral
movement between files

46
00:03:07,410 --> 00:03:10,310
and not be possible in this
environment unless you have

47
00:03:11,634 --> 00:03:14,660
administrative level events,

48
00:03:14,660 --> 00:03:17,680
the Active Directory and
obviously there was this.

49
00:03:18,560 --> 00:03:19,840
So we started digging into

50
00:03:19,840 --> 00:03:23,853
from the customer presenting evidence,

51
00:03:24,860 --> 00:03:28,100
The customer presented five rmv.jpg file,

52
00:03:28,100 --> 00:03:32,739
but in fact, these files
were archives, RAR archives.

53
00:03:32,740 --> 00:03:37,510
In this case, the potential
attacker was not encrypting

54
00:03:37,510 --> 00:03:40,510
the restructure of the RAR file,

55
00:03:40,510 --> 00:03:45,350
so the victim was able
to dig into the content

56
00:03:45,350 --> 00:03:47,900
of these RAR files and he found the name

57
00:03:47,900 --> 00:03:51,710
of some of these sensitive critical files

58
00:03:51,710 --> 00:03:53,650
of his own environment.

59
00:03:53,650 --> 00:03:56,410
So they rise immediately the call for us

60
00:03:56,410 --> 00:03:59,480
and why we started investigating
on this REPO server

61
00:03:59,480 --> 00:04:03,420
the one where these
files where the stored,

62
00:04:03,420 --> 00:04:08,420
we looked through the MFT
as a typical IR analysis,

63
00:04:09,010 --> 00:04:11,983
and we found the presence of w.exe,

64
00:04:11,984 --> 00:04:14,770
that is basically a
Windows Credential Editor,

65
00:04:14,770 --> 00:04:17,600
drop it on the system on an earlier date

66
00:04:17,600 --> 00:04:19,613
than the one presented by the customer

67
00:04:19,613 --> 00:04:22,324
as the potential initial
date of the attack.

68
00:04:22,324 --> 00:04:25,991
In fact, in our case,
the date of the w.exe,

69
00:04:27,360 --> 00:04:31,220
the Windows Credential
Editor was almost nine months

70
00:04:31,220 --> 00:04:34,403
earlier, on the late December 27.

71
00:04:36,470 --> 00:04:38,670
Together with the Windows
Credential Editor,

72
00:04:39,810 --> 00:04:43,170
basically on the same time,
our temporary file was created

73
00:04:43,170 --> 00:04:46,160
in another directory in
a temp folder in Windows,

74
00:04:46,160 --> 00:04:49,770
and looking into this folder, this file,

75
00:04:49,770 --> 00:04:52,510
we discover a very significant number

76
00:04:52,510 --> 00:04:54,243
of potential domain credentials.

77
00:04:56,500 --> 00:05:00,440
The w.exe file remarkably was then dropped

78
00:05:00,440 --> 00:05:01,802
into an IME folder.

79
00:05:01,802 --> 00:05:04,486
IME folder is a IM folder.

80
00:05:04,486 --> 00:05:08,159
IM folder is a folder
that is present in Windows

81
00:05:08,160 --> 00:05:11,017
in every time the system is configured

82
00:05:11,017 --> 00:05:14,503
to have support for Eastern languages.

83
00:05:15,547 --> 00:05:17,997
So it's pretty common in the Middle East.

84
00:05:17,997 --> 00:05:22,231
And it's also pretty common
for Oilrig APT attacker

85
00:05:22,231 --> 00:05:25,439
that is a local attacker for the area.

86
00:05:25,439 --> 00:05:27,943
We use this folder we have
we were having experience

87
00:05:27,943 --> 00:05:29,873
of this folder in this case.

88
00:05:31,600 --> 00:05:35,463
Looking to the temp file,
droppe by the Credential Editor,

89
00:05:36,670 --> 00:05:39,380
we have extracted in this
presentation just a small excerpt

90
00:05:39,380 --> 00:05:41,550
of the entire file.

91
00:05:41,550 --> 00:05:44,800
But you can imagine you can read as we

92
00:05:44,800 --> 00:05:48,500
the complexity and the
easy guessable credential

93
00:05:48,500 --> 00:05:49,650
some of these accounts.

94
00:05:50,770 --> 00:05:53,900
All these accounts who have
breached on late December.

95
00:05:53,900 --> 00:05:55,777
At this point, we are
tempted to review the logs

96
00:05:55,777 --> 00:05:57,770
of the system in order to highlight

97
00:05:57,770 --> 00:05:59,219
the source of the compromise.

98
00:06:00,480 --> 00:06:03,000
We started to look into the REPO

99
00:06:03,000 --> 00:06:05,060
from the date of the file creation,

100
00:06:05,060 --> 00:06:09,566
and we discovered that few
moments, few minutes earlier

101
00:06:09,566 --> 00:06:12,207
than the w.exe was
dropped into the system,

102
00:06:12,208 --> 00:06:16,470
the system itself were presenting
logs of failed attempts

103
00:06:17,410 --> 00:06:21,240
of authentication from internal IP address

104
00:06:21,240 --> 00:06:23,743
that was 172.16.21.102.

105
00:06:25,490 --> 00:06:29,500
And thanks to this evidence,
we tried to pinpoint

106
00:06:29,500 --> 00:06:32,320
who was the IP address behind...

107
00:06:32,320 --> 00:06:35,310
Who was the hostname
behind these IP address.

108
00:06:35,310 --> 00:06:39,060
We look at to the DHCP because
this segment of network

109
00:06:39,060 --> 00:06:42,630
was allowed by hostapd DHCP release,

110
00:06:44,900 --> 00:06:46,450
but we were not lucky.

111
00:06:46,450 --> 00:06:49,090
We were more likely through the proxy log

112
00:06:49,090 --> 00:06:54,090
that we're still having
this IP address for that day

113
00:06:54,400 --> 00:06:58,688
and through this we were
able to identify ASFOUR

114
00:06:58,688 --> 00:07:02,469
that these a system
workstation belonging to

115
00:07:02,469 --> 00:07:06,110
an administrator that was seeing

116
00:07:07,070 --> 00:07:09,513
creating all these action.

117
00:07:10,360 --> 00:07:13,350
Reviewing the ASFOUR, we
immediately discovered

118
00:07:13,350 --> 00:07:17,170
that the somebody on the
date of the file creation

119
00:07:17,170 --> 00:07:21,093
in August 2018,

120
00:07:22,040 --> 00:07:24,460
was blocking the logs,

121
00:07:24,460 --> 00:07:27,770
so the system logs was
no longer available,

122
00:07:27,770 --> 00:07:29,940
and it canceled the previous logs.

123
00:07:30,920 --> 00:07:35,580
But thanks to our tools
we were able to track,

124
00:07:35,580 --> 00:07:38,760
on the same day, the users of this system

125
00:07:38,760 --> 00:07:41,750
for a number of net use,

126
00:07:41,750 --> 00:07:46,453
so basically lateral
movement on SMB protocol.

127
00:07:48,550 --> 00:07:52,600
Unfortunately, no records were
allowing for us to collect

128
00:07:52,600 --> 00:07:54,550
from the sender just from (indistinct).

129
00:07:56,638 --> 00:07:59,280
However, we went through the ASFOUR

130
00:07:59,280 --> 00:08:03,270
and review logs, IOCs
and other data sources,

131
00:08:03,270 --> 00:08:04,969
we highlighted a number of session

132
00:08:06,760 --> 00:08:09,543
that were targeting this system.

133
00:08:10,490 --> 00:08:13,530
And thanks to the review of
network traffic and logs,

134
00:08:13,530 --> 00:08:16,840
we were able to scope
that this ASFOUR system

135
00:08:16,840 --> 00:08:20,405
was again accessed by
luxury by another system,

136
00:08:20,406 --> 00:08:22,207
who was the me HAKIMI host.

137
00:08:22,207 --> 00:08:24,700
This host was different than ASFOUR.

138
00:08:24,700 --> 00:08:28,979
ASFOUR is a workstation
constantly installed

139
00:08:28,980 --> 00:08:31,000
and present in the customer environment,

140
00:08:31,000 --> 00:08:34,520
while the HAKIMI is a
nomadic system is a laptop,

141
00:08:34,520 --> 00:08:38,150
and he's owner, a lead
developer move back and forth

142
00:08:38,150 --> 00:08:41,222
from the environment and his home address.

143
00:08:42,633 --> 00:08:46,900
Our endpoint forensic solution
was installed in the systems

144
00:08:46,900 --> 00:08:48,620
on January 2018.

145
00:08:48,620 --> 00:08:51,900
So we missed the chance to
track the initial infection,

146
00:08:51,900 --> 00:08:55,189
but the persister mechanism
where we were able to track

147
00:08:55,190 --> 00:08:58,323
and together we that we
highlighted two files.

148
00:08:59,510 --> 00:09:02,033
upd.vbs and the dn.ps1.

149
00:09:03,090 --> 00:09:06,420
These two were both used by the attacker

150
00:09:08,000 --> 00:09:09,660
on different moment to ensure

151
00:09:09,660 --> 00:09:12,230
the primary and secondary channel

152
00:09:12,230 --> 00:09:16,483
to control this system, the HAKIMI laptop.

153
00:09:17,870 --> 00:09:20,220
The upd.vbs was the most interesting

154
00:09:21,060 --> 00:09:24,540
because it was a camouflage as a service

155
00:09:24,541 --> 00:09:27,903
who persists in environment
with an NvidiaUpdate name.

156
00:09:29,610 --> 00:09:33,770
After his execution, he was
also downloading first time

157
00:09:33,770 --> 00:09:38,360
the dn.ps1 on the same
folder where he was present

158
00:09:38,360 --> 00:09:42,680
at APPDATAS\Local\MicrosoftMedia,

159
00:09:42,680 --> 00:09:44,839
and using this two files

160
00:09:44,840 --> 00:09:48,703
were basically allowing
remote access by the attacker.

161
00:09:50,810 --> 00:09:53,459
Thanks to this finding,
and thanks to the fact that

162
00:09:53,460 --> 00:09:57,560
we were having a scheduled task
loophole in the other system

163
00:09:57,560 --> 00:10:00,010
we highlighted all the system infected,

164
00:10:00,010 --> 00:10:01,569
and thanks to that, we were able to track

165
00:10:01,570 --> 00:10:06,570
through the MFP analysis,
the way the attacker got in.

166
00:10:08,067 --> 00:10:12,503
The attacker got in through
the weaponized Excel file,

167
00:10:13,370 --> 00:10:17,270
including a macro that was
downloading and executing

168
00:10:17,270 --> 00:10:22,270
the VBS file, and the upd.vbs file

169
00:10:22,550 --> 00:10:27,550
and the second component,
dn.ps1 was instead dropped

170
00:10:28,860 --> 00:10:32,090
directly by the execution of the VBS file.

171
00:10:33,150 --> 00:10:37,233
We were not able to collect
again the original email

172
00:10:37,234 --> 00:10:40,920
targeting five users internal
users as spear phishing,

173
00:10:40,920 --> 00:10:43,610
but we were able to collect the Excel file

174
00:10:43,610 --> 00:10:46,640
because basically the attachment,
the weaponized attachment.

175
00:10:50,180 --> 00:10:54,969
The execution of upd.vbs is
basically due to the usage

176
00:10:54,970 --> 00:10:58,630
of the XML engine parser of Windows.

177
00:11:00,608 --> 00:11:04,449
The original macro dropper
user, MSXML2.XMLHTTP

178
00:11:07,830 --> 00:11:11,400
that is basically a component that allow

179
00:11:11,400 --> 00:11:16,400
a program that parse XML to
connect to an external system,

180
00:11:17,990 --> 00:11:22,260
a web server and potentially
downloading or executing

181
00:11:22,260 --> 00:11:24,670
or reading files.

182
00:11:24,670 --> 00:11:28,089
In this case, the upd.vbs was downloaded

183
00:11:28,090 --> 00:11:32,060
as Adobe.Stream object
through this particular trick

184
00:11:32,060 --> 00:11:36,599
and executed once downloaded,
through Wshellscript,

185
00:11:36,600 --> 00:11:38,683
Wscript.Shell sorry, in EMR.

186
00:11:39,530 --> 00:11:42,780
So a typical mechanism of infection

187
00:11:42,780 --> 00:11:44,370
that is not really peculiar,

188
00:11:44,370 --> 00:11:46,880
we noticed several in this case.

189
00:11:46,880 --> 00:11:50,770
However, peculiar was the
fact that the persistent

190
00:11:50,770 --> 00:11:54,780
was adopted using scheduled
tasks with the name

191
00:11:54,780 --> 00:11:57,502
of NvidiaUpdate, and
this was a very good IOC

192
00:11:57,502 --> 00:11:59,219
to track the other ocurrencies.

193
00:11:59,220 --> 00:12:03,610
And that is once the VBS
file has been data dated

194
00:12:03,610 --> 00:12:06,760
immediately that he
communicates with a C2,

195
00:12:06,760 --> 00:12:11,650
and in certain condition,
he download the dn.ps1

196
00:12:11,650 --> 00:12:16,650
and ensure a secondary channel
would be annexed internally

197
00:12:16,800 --> 00:12:18,849
for the same attacker to
participate in the system

198
00:12:18,850 --> 00:12:21,763
and to communicate with this victim.

199
00:12:24,870 --> 00:12:26,370
Thanks to these findings,

200
00:12:26,370 --> 00:12:30,112
we were also able reviewing
the network forensic file

201
00:12:30,112 --> 00:12:32,660
to highlight other infected system

202
00:12:32,660 --> 00:12:37,041
in this case by focusing
on the ASFOUR and HAKIMI

203
00:12:37,042 --> 00:12:39,296
we were also able to track Asker

204
00:12:39,296 --> 00:12:43,477
that is another infected
host of the same attacker.

205
00:12:43,477 --> 00:12:47,410
And we were also able to track the C2.

206
00:12:47,410 --> 00:12:49,693
In total, the attacker
was using three C2s,

207
00:12:51,260 --> 00:12:53,000
one is highlighted here.

208
00:12:53,890 --> 00:12:56,580
They were using HTTP protocol.

209
00:12:56,580 --> 00:13:00,703
And they were using
basically port A, TCP port A.

210
00:13:01,552 --> 00:13:04,000
At the end of the investigation process,

211
00:13:04,000 --> 00:13:06,680
it took about two weeks, full weeks,

212
00:13:06,680 --> 00:13:08,959
trying to collect all the evidences

213
00:13:08,960 --> 00:13:13,010
and to discuss and verify the findings.

214
00:13:13,010 --> 00:13:17,069
We were able to highlight the big picture

215
00:13:17,070 --> 00:13:19,267
of the Oilrig attack.

216
00:13:19,267 --> 00:13:22,276
We target these and we classify them

217
00:13:22,276 --> 00:13:23,969
and had to do this to Oilrig simply

218
00:13:23,970 --> 00:13:28,001
because some of the items
we highlighted as malwear,

219
00:13:28,001 --> 00:13:31,233
were a typical part of the Oilrig arsenal.

220
00:13:32,270 --> 00:13:35,823
This is absolutely no new
for the ones that are exposed

221
00:13:35,823 --> 00:13:37,720
to Oilrig attack.

222
00:13:37,720 --> 00:13:41,200
We were counting about five
system plus the REPO system

223
00:13:41,200 --> 00:13:44,440
where initially credentials being stolen

224
00:13:44,440 --> 00:13:48,770
and was also the one that
the attacker leverage upon

225
00:13:48,770 --> 00:13:53,715
to ensure the collection of the XP

226
00:13:53,715 --> 00:13:55,465
from the environment.

227
00:13:59,510 --> 00:14:01,740
In the end we created...

228
00:14:01,740 --> 00:14:04,890
We wrap up the remediation that was aimed

229
00:14:04,890 --> 00:14:08,520
to remove the threat from the environment

230
00:14:08,520 --> 00:14:12,300
and to reveal the proper
protection to the infrastructure.

231
00:14:12,300 --> 00:14:15,780
We were leveraging on rebuild
of compromised machine,

232
00:14:15,780 --> 00:14:17,560
full domain password reset,

233
00:14:17,560 --> 00:14:21,949
removal of local authentication
from all the systems

234
00:14:21,950 --> 00:14:25,347
This was one of the most weakest posture

235
00:14:26,640 --> 00:14:30,160
from the customer, the victim.

236
00:14:30,160 --> 00:14:32,693
This was one of the
reason for the attacker

237
00:14:32,693 --> 00:14:36,110
to have chance to spread easily.

238
00:14:36,110 --> 00:14:38,070
And the adoption in the remediation

239
00:14:38,070 --> 00:14:41,350
of two factor authentication for all VPN

240
00:14:41,350 --> 00:14:45,937
and removal of all the
nuisance services attack.

241
00:14:45,937 --> 00:14:48,710
However, during the investigation,

242
00:14:48,710 --> 00:14:53,710
there was just one weird
file that was highlighted

243
00:14:53,930 --> 00:14:58,000
by our analysts, that
was not really fitting

244
00:14:58,000 --> 00:15:01,360
into the infection, into the attack.

245
00:15:01,360 --> 00:15:06,080
Was this where the vbox
drive, virtual box driver,

246
00:15:06,080 --> 00:15:08,070
a legacy driver 1.6.2 version,

247
00:15:09,460 --> 00:15:12,470
it was already very old
compared to the date

248
00:15:12,470 --> 00:15:16,003
of the investigation, it
was found in another system.

249
00:15:17,280 --> 00:15:22,280
Based on our experience,
drivers like this one

250
00:15:23,180 --> 00:15:26,880
are very, very, concerning

251
00:15:26,880 --> 00:15:30,689
because there are a number
of potential actions

252
00:15:30,690 --> 00:15:33,150
that can be carried out to the users

253
00:15:33,150 --> 00:15:38,150
of these types of drivers in a
potentially effective system.

254
00:15:40,420 --> 00:15:45,420
So, in the end, we presented
the evidence to the customer

255
00:15:47,280 --> 00:15:51,233
and going deeper into the
system that was called ALMASI,

256
00:15:52,070 --> 00:15:55,620
we found through the MFT
and we were able to collect

257
00:15:55,620 --> 00:15:56,773
additional component.

258
00:15:57,890 --> 00:16:01,400
Additional component was
basically orchestrator

259
00:16:01,400 --> 00:16:03,709
of Gazer package from Epic Turla.

260
00:16:03,710 --> 00:16:07,233
Epic Turla is a totally
different APT attacker,

261
00:16:09,460 --> 00:16:10,810
Russian of origin

262
00:16:11,682 --> 00:16:15,300
and Russian speaker attacker

263
00:16:17,190 --> 00:16:21,573
and he's pretty known into
the cyberespionage field

264
00:16:23,708 --> 00:16:26,650
because several different IR things

265
00:16:26,650 --> 00:16:30,650
even ourselves were
investigating in the past reviews

266
00:16:30,650 --> 00:16:33,220
infection by Epic Turla.

267
00:16:33,220 --> 00:16:35,120
Obviously soon as we discovered that,

268
00:16:35,120 --> 00:16:38,684
we immediately report
in full the evidences

269
00:16:38,684 --> 00:16:41,230
to the customer but he
was not really surprised

270
00:16:41,230 --> 00:16:42,070
about this finding.

271
00:16:42,070 --> 00:16:47,070
And he state that in 2016,
basically two years earlier,

272
00:16:47,150 --> 00:16:50,579
he was targeted by so called Russians

273
00:16:50,580 --> 00:16:53,750
and they were expelled in January 2017.

274
00:16:53,750 --> 00:16:56,540
In fact, all the evidences were pointing

275
00:16:56,540 --> 00:17:01,240
to this particular attack, and
this was apparently a remnant

276
00:17:01,240 --> 00:17:04,040
of the previous attack not really removed,

277
00:17:04,040 --> 00:17:06,690
a sort of relic of the previous infection

278
00:17:06,690 --> 00:17:08,280
from Epic Turla.

279
00:17:08,280 --> 00:17:10,980
And in fact, no suspicious
traffic was generated

280
00:17:10,980 --> 00:17:14,569
by the ALMASI procession
during our investigation.

281
00:17:14,569 --> 00:17:18,679
So we classify these as an
important evidence to present,

282
00:17:18,680 --> 00:17:20,700
but in the end, not really fitting

283
00:17:20,700 --> 00:17:23,050
into the remediation process.

284
00:17:23,050 --> 00:17:25,839
Obviously, the machine has
been removed with the rebuild,

285
00:17:25,839 --> 00:17:27,970
but from that perspective,

286
00:17:27,970 --> 00:17:30,050
no longer we investigate

287
00:17:30,050 --> 00:17:32,220
or we spend additional time on them.

288
00:17:33,930 --> 00:17:36,150
Obviously, we still were
puzzled by the fact that

289
00:17:36,150 --> 00:17:40,653
the Trojan was injected
into legitimate processes

290
00:17:42,340 --> 00:17:47,286
and the driver was potentially
used to execute malware,

291
00:17:48,920 --> 00:17:53,350
escaping the signature or
control of the Windows system.

292
00:17:53,350 --> 00:17:57,550
But having no evidence of any
traffic any malicious behavior

293
00:17:57,550 --> 00:18:00,020
apart from the previous ones recorded,

294
00:18:00,020 --> 00:18:03,155
we just rebuild or advised the customer

295
00:18:03,155 --> 00:18:05,072
to rebuild the machine.

296
00:18:05,972 --> 00:18:07,580
This is for posterity.

297
00:18:07,580 --> 00:18:10,980
And obviously as you can
notice, the Turla Gazer package

298
00:18:10,980 --> 00:18:12,547
is leveraging on three components.

299
00:18:12,547 --> 00:18:14,720
The loader is basically a dropper,

300
00:18:14,720 --> 00:18:18,290
that loads the orchestrator
that is the real implant

301
00:18:18,290 --> 00:18:20,500
through the VBox Drive.

302
00:18:20,500 --> 00:18:24,520
That is basically the
file we discovered at fist

303
00:18:24,520 --> 00:18:26,110
on the ALMASI workstation,

304
00:18:26,110 --> 00:18:29,479
and he's just used as auxiliary component,

305
00:18:29,480 --> 00:18:32,165
in order to be able from the loader

306
00:18:32,165 --> 00:18:35,159
to inject the orchestrator in the system.

307
00:18:37,810 --> 00:18:41,654
We presented the remediation plan,

308
00:18:41,654 --> 00:18:44,990
the customer asking for a couple of months

309
00:18:44,990 --> 00:18:47,010
to carry out the entire process.

310
00:18:47,010 --> 00:18:49,030
Obviously, we were already
blocking the communication

311
00:18:49,030 --> 00:18:53,840
of these issues, and we
were watching the systems.

312
00:18:55,760 --> 00:18:59,460
But while we were advising the customer

313
00:18:59,460 --> 00:19:01,390
to block the IP addresses,

314
00:19:01,390 --> 00:19:03,923
the customer blocks
instead only the protocols.

315
00:19:04,840 --> 00:19:07,632
So in the end, it was not really,

316
00:19:10,717 --> 00:19:13,733
was not really blocking
every type of occurrence

317
00:19:13,733 --> 00:19:15,633
from the IP addresses of C2,

318
00:19:15,633 --> 00:19:19,040
leveraging on the monitoring
part for the rest.

319
00:19:19,040 --> 00:19:23,493
When we get back and we were
ready to complete the task,

320
00:19:24,720 --> 00:19:26,550
we went into the pre-flight check,

321
00:19:26,550 --> 00:19:29,912
and we discovered a very curious set

322
00:19:29,912 --> 00:19:32,312
of communication workstreams

323
00:19:32,312 --> 00:19:36,274
into our network forensic point.

324
00:19:36,274 --> 00:19:39,818
As you can notice, in the red box

325
00:19:39,818 --> 00:19:43,720
was the original Oilrig
DNS traffic leveraging

326
00:19:43,720 --> 00:19:47,020
on DNS to communicate outbound to the C2

327
00:19:47,890 --> 00:19:51,280
while from the 24th of October,

328
00:19:51,280 --> 00:19:55,270
late after the completion
of our investigation,

329
00:19:55,270 --> 00:19:58,053
and when the customer start remediating,

330
00:19:59,560 --> 00:20:03,520
all machines that
communicate with the same IP

331
00:20:03,520 --> 00:20:04,750
with a different protocol.

332
00:20:04,750 --> 00:20:08,650
This protocol is BITS
protocol that the customer

333
00:20:08,650 --> 00:20:12,900
was allowing just because
is in his own idea

334
00:20:12,900 --> 00:20:17,900
BITS was only usable by
Microsoft or Microsoft updates.

335
00:20:18,210 --> 00:20:20,993
So he was alone for any
IP address internet.

336
00:20:22,330 --> 00:20:27,330
In the end our idea was
that a different attacker,

337
00:20:29,189 --> 00:20:33,190
or at least a different malware was used

338
00:20:33,190 --> 00:20:35,100
from the 24th of October.

339
00:20:35,100 --> 00:20:38,020
And going in deeper into the machines

340
00:20:38,020 --> 00:20:40,629
that were presenting these malware,

341
00:20:40,630 --> 00:20:45,202
we discover that Epic
Turla basically was having

342
00:20:45,202 --> 00:20:48,470
the upper hand on the C2 of
the original Oilrig attacker,

343
00:20:48,470 --> 00:20:53,470
and was using it with a new
implant to control some system

344
00:20:54,090 --> 00:20:55,490
in the customer environment.

345
00:20:57,370 --> 00:21:00,530
So the machines that were
communicating with BITS

346
00:21:00,530 --> 00:21:04,570
were four and these were
presenting two components,

347
00:21:04,570 --> 00:21:06,360
two DLLs.

348
00:21:06,360 --> 00:21:10,250
These DLLs were configured
to use BITS protocol

349
00:21:10,250 --> 00:21:12,080
for communication.

350
00:21:12,080 --> 00:21:13,870
One was basically a loader,

351
00:21:13,870 --> 00:21:16,979
he second was again, the real implant,

352
00:21:16,980 --> 00:21:20,453
similar to the Gazer package,
but this is not Gazer.

353
00:21:22,300 --> 00:21:26,950
The Trojan was once injected,
was saving two functions,

354
00:21:26,950 --> 00:21:28,360
one W and two W.

355
00:21:28,360 --> 00:21:31,729
The one W was used to install it back

356
00:21:31,730 --> 00:21:34,860
and was called by the previous the loader

357
00:21:34,860 --> 00:21:39,000
while the two W was used to
activate the network socket

358
00:21:39,000 --> 00:21:41,500
to start communicating outbound.

359
00:21:41,500 --> 00:21:45,310
The DLL even in this case
persisted with the scheduled task

360
00:21:45,310 --> 00:21:47,133
that you can see into the box.

361
00:21:48,660 --> 00:21:52,520
And this is basically a
reconstruction of one of the session

362
00:21:52,520 --> 00:21:55,080
we collected, from the
ones that were presented

363
00:21:55,080 --> 00:21:59,015
into the previous slide
from the network forensic

364
00:21:59,016 --> 00:22:02,960
presenting the BIT protocol and the Turla

365
00:22:02,960 --> 00:22:04,674
was using the BIT protocol.

366
00:22:04,674 --> 00:22:07,684
So basically the BIT protocol
was the header and the pole,

367
00:22:07,684 --> 00:22:09,690
but obviously the rest was encrypted

368
00:22:09,690 --> 00:22:11,090
and was definitely not BITS.

369
00:22:12,561 --> 00:22:16,949
However this allowed the
attacker to stretch is persistent

370
00:22:16,950 --> 00:22:18,380
during the investigation period,

371
00:22:18,380 --> 00:22:21,527
as the BIT prorocol was
allowed in the perimeter.

372
00:22:23,120 --> 00:22:26,919
Then Trojan, the loader use rundll32

373
00:22:28,260 --> 00:22:31,440
to activate the implant.

374
00:22:31,440 --> 00:22:35,304
And all the processes were
running through the legitimate

375
00:22:35,304 --> 00:22:37,563
rundll32.exe process.

376
00:22:38,600 --> 00:22:41,433
Share comments were then
used by the attacker

377
00:22:41,433 --> 00:22:45,746
to move laterally into scan or
to carry out additional tasks

378
00:22:45,746 --> 00:22:47,862
through SMB as the previous attacker

379
00:22:47,862 --> 00:22:52,440
used the previous infection
in the previous attack.

380
00:22:54,183 --> 00:22:58,690
At one point investigating,
We were trying to figure out

381
00:22:58,690 --> 00:23:03,380
if the attacks Was
leveraging as we expected

382
00:23:03,380 --> 00:23:06,610
to other C2 even because the
attacker was pretty confident

383
00:23:06,610 --> 00:23:11,169
in the fact that we were
remediating the Oilrig attack.

384
00:23:11,170 --> 00:23:14,650
So at one point, following the flow

385
00:23:14,650 --> 00:23:19,650
of the original remediation,
we configured the block,

386
00:23:19,698 --> 00:23:21,800
the total block of the IP address.

387
00:23:21,800 --> 00:23:25,379
So his implant immediately after the block

388
00:23:25,380 --> 00:23:28,853
of the full IP address, of the
full stack of the IP address

389
00:23:28,853 --> 00:23:32,780
used by the C2 start to
be coming to another C2

390
00:23:32,780 --> 00:23:35,533
with the same beat for BIT protocol.

391
00:23:37,110 --> 00:23:41,350
So thanks to that, and not
really alerting the attacker,

392
00:23:41,350 --> 00:23:43,570
we were able to collect additional IOCs

393
00:23:43,570 --> 00:23:45,592
and obviously, the other main C2.

394
00:23:47,590 --> 00:23:49,439
Together with that in parallel,

395
00:23:49,440 --> 00:23:52,860
we run investigation on other endpoints

396
00:23:52,860 --> 00:23:55,892
and we were able to track
an additional implant,

397
00:23:55,893 --> 00:23:58,780
but this one is known is a casual implant,

398
00:23:58,780 --> 00:24:01,810
that is basically a
Trojan, written in .NET,

399
00:24:02,700 --> 00:24:07,110
that there was able to be
executed on the signal system,

400
00:24:07,110 --> 00:24:10,459
only passing a precise set of parameter

401
00:24:10,460 --> 00:24:11,913
in particular, a preshare.

402
00:24:13,270 --> 00:24:16,340
So if you don't pass it, it doesn't work.

403
00:24:16,340 --> 00:24:21,340
And on the other hand, this
malware was passing through SMB

404
00:24:21,480 --> 00:24:25,293
to other system or was passed
through the local system

405
00:24:25,293 --> 00:24:26,620
and executed locally.

406
00:24:26,620 --> 00:24:31,620
As you can notice in the
tracking in the below table.

407
00:24:35,420 --> 00:24:40,420
Together with the evidence of
the two implants to malware,

408
00:24:43,660 --> 00:24:48,000
we also identified another
very significant threat.

409
00:24:48,000 --> 00:24:53,000
The attacker, the Turla
attacker was able to implant

410
00:24:53,430 --> 00:24:57,490
a very peculiar backdoor
in the OWA Web Serve.

411
00:24:57,490 --> 00:24:59,260
In the Outlook Web Apps Server.

412
00:24:59,260 --> 00:25:02,620
Basically being web
interfaces of the exchange

413
00:25:02,620 --> 00:25:04,919
of the government agents.

414
00:25:04,920 --> 00:25:09,920
And basically through the
items depicted into the code

415
00:25:11,550 --> 00:25:15,680
in the red box, he was able to collect

416
00:25:15,680 --> 00:25:17,870
every new logon on OWA,

417
00:25:17,870 --> 00:25:22,870
by any new or any
password reseted account,

418
00:25:23,540 --> 00:25:25,310
and the store the password pasted

419
00:25:25,310 --> 00:25:29,030
to the interface of Outlook Web Access,

420
00:25:29,030 --> 00:25:32,993
storing it on file called LocalCache.hve.

421
00:25:34,390 --> 00:25:39,390
And he was published on a
precise page into the OWA

422
00:25:39,713 --> 00:25:42,830
that was accessible only if you present

423
00:25:44,411 --> 00:25:47,793
a precise cookie added to your browser.

424
00:25:49,320 --> 00:25:51,450
And this is highlighted into the red box.

425
00:25:51,450 --> 00:25:55,970
So in the end, Turla was able to infect

426
00:25:57,530 --> 00:26:02,160
the Outlook Web Access
service in the way that

427
00:26:02,160 --> 00:26:07,160
every new access from
any account was stored

428
00:26:07,878 --> 00:26:12,166
and the credential kept by the attacker,

429
00:26:12,166 --> 00:26:17,166
stored into a precise file,
publish it on a specific page

430
00:26:17,370 --> 00:26:21,000
that was accessible only
if you present your browser

431
00:26:21,000 --> 00:26:23,940
with the precise cookie, that was coded

432
00:26:23,940 --> 00:26:25,543
into the web page code.

433
00:26:26,804 --> 00:26:30,810
The webshell installed
here was able to perform

434
00:26:30,810 --> 00:26:34,602
a specific set of action
that you can see down here.

435
00:26:35,790 --> 00:26:40,790
So the logic of the
webshell was the determined

436
00:26:41,227 --> 00:26:42,960
by the code that we have highlighted

437
00:26:42,960 --> 00:26:45,810
and was easily understand what was able to

438
00:26:46,690 --> 00:26:49,620
kinda like dumb, like, execute file

439
00:26:49,620 --> 00:26:50,919
and other stuff like that.

440
00:26:52,740 --> 00:26:57,740
In addition, to lower
the chance to get traced

441
00:26:57,790 --> 00:27:02,790
by our solution the
attacker used IP services

442
00:27:04,360 --> 00:27:06,379
presenting his cookie in a session

443
00:27:06,380 --> 00:27:11,380
to access the page where the
new credential were stored.

444
00:27:12,750 --> 00:27:15,283
So, this is also another important aspect.

445
00:27:18,970 --> 00:27:22,830
And in the end of the
investigation process,

446
00:27:22,830 --> 00:27:25,530
we were having these big picture.

447
00:27:25,530 --> 00:27:29,260
In fact, the ALMASI
system that was the first

448
00:27:29,260 --> 00:27:32,830
to be highlighted was not
part of this new infection,

449
00:27:32,830 --> 00:27:35,379
but obviously, was part
of the previous infection

450
00:27:35,380 --> 00:27:36,540
of Epic Turla.

451
00:27:36,540 --> 00:27:38,743
While Epic Turla was leveraging on one

452
00:27:38,743 --> 00:27:43,743
of the Oilrig infrastructure,
to get rid of some

453
00:27:44,040 --> 00:27:47,510
of the initial execution problems

454
00:27:47,510 --> 00:27:51,620
and part of the infection,
the illness part of infection

455
00:27:51,620 --> 00:27:55,296
and leverage on the other part
is a dedicated infrastructure

456
00:27:55,297 --> 00:27:58,100
for the following part of his system.

457
00:27:58,100 --> 00:28:01,867
By the way through MAHINI workstation,

458
00:28:01,867 --> 00:28:06,720
the attacker was also able
to use this infrastructure

459
00:28:08,000 --> 00:28:11,293
to access additional governmental
agencies of the area.

460
00:28:12,330 --> 00:28:14,230
And this is another remarkable aspect.

461
00:28:16,870 --> 00:28:21,860
Okay, we obviously reported
immediately all these findings,

462
00:28:21,860 --> 00:28:24,409
we obviously ran another engagement phase

463
00:28:26,583 --> 00:28:31,019
during this second step
into customer environment,

464
00:28:31,019 --> 00:28:36,019
and we started remediating
keeping the original plan,

465
00:28:36,740 --> 00:28:40,560
but obviously expanding it
including this other attacker.

466
00:28:40,560 --> 00:28:45,200
And it was absolutely
challenging to face two attackers

467
00:28:45,200 --> 00:28:46,423
in the same engagement.

468
00:28:47,760 --> 00:28:50,650
And by the way, after the remediation,

469
00:28:50,650 --> 00:28:53,770
after the successful
remediation that occurred

470
00:28:53,770 --> 00:28:58,740
on the early 2019 we went
into discovering another

471
00:28:58,740 --> 00:29:03,740
occurrence of another after
Epic Turla on the march of 2019.

472
00:29:07,240 --> 00:29:10,643
This case was another local attacker

473
00:29:10,643 --> 00:29:13,400
of another country, basically,

474
00:29:13,400 --> 00:29:17,070
that was using another
another trick that is similar;

475
00:29:17,070 --> 00:29:19,350
however that to the
one used by the Oilrig,

476
00:29:19,350 --> 00:29:23,362
and it was basically through
the spear phishing email.

477
00:29:25,440 --> 00:29:28,670
Okay, so speaking about
the lesson learned.

478
00:29:28,670 --> 00:29:31,802
obviously, we learned a
lot in this engagement,

479
00:29:31,802 --> 00:29:33,683
in this challenging engagement.

480
00:29:34,700 --> 00:29:36,940
Some items we we know about you there,

481
00:29:36,940 --> 00:29:41,720
but in this case was
extremely clear on our eyes,

482
00:29:41,720 --> 00:29:46,200
that we do not need to assume
that the customer remediation

483
00:29:46,200 --> 00:29:49,770
is necessarily prior to our analysis,

484
00:29:49,770 --> 00:29:52,200
is necessarily a success.

485
00:29:52,200 --> 00:29:54,930
And obviously, we tell
that these important,

486
00:29:54,930 --> 00:29:56,400
not to rely on the assumption

487
00:29:56,400 --> 00:29:59,070
that apparently unrelated infection

488
00:29:59,070 --> 00:30:01,540
can be investigated lately.

489
00:30:01,540 --> 00:30:04,399
Obviously do not assume
sophisticated attacker

490
00:30:04,400 --> 00:30:08,192
is limited to the use of
dedicated infrastructure.

491
00:30:08,192 --> 00:30:11,490
This is a precise example of one attacker

492
00:30:11,490 --> 00:30:13,860
using another attacker infrastructure,

493
00:30:13,860 --> 00:30:16,840
to leaving of the lame.

494
00:30:16,840 --> 00:30:18,840
Obviously, do not expect Epic Turla

495
00:30:18,840 --> 00:30:21,800
to behave like common APT groups.

496
00:30:21,800 --> 00:30:25,730
And moreover, do not expect
Middle East to be a quiet place

497
00:30:25,730 --> 00:30:27,130
in these days.

498
00:30:27,130 --> 00:30:29,620
And obviously, as we always say,

499
00:30:29,620 --> 00:30:32,120
think positive and stay vigilant.

500
00:30:32,120 --> 00:30:36,139
Well, thank you very much
guys for your participation

501
00:30:37,150 --> 00:30:38,820
to this presentation.

502
00:30:38,820 --> 00:30:42,669
And I am ready to follow
up to your questions

503
00:30:42,670 --> 00:30:44,150
in the question and answer part.

504
00:30:44,150 --> 00:30:45,660
Thank you very much.

