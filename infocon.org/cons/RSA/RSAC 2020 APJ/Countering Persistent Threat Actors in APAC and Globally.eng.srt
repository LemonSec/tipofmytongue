1
00:00:11,535 --> 00:00:15,202
(orchestrated upbeat music)

2
00:00:45,403 --> 00:00:49,780
- Hello and welcome to Countering
Persistent Threat Actors

3
00:00:49,780 --> 00:00:52,120
in APAC and Globally.

4
00:00:52,120 --> 00:00:53,230
If you're joining us live

5
00:00:53,230 --> 00:00:55,660
our speakers are in the Slido discussion

6
00:00:55,660 --> 00:00:57,910
answering your questions right now.

7
00:00:57,910 --> 00:00:59,610
For audio video issues,

8
00:00:59,610 --> 00:01:02,200
Click the Technical Support Button below.

9
00:01:02,200 --> 00:01:04,959
I'd now like to turn
it over to Steven D'sa

10
00:01:04,959 --> 00:01:05,982
and Vincent Wong.

11
00:01:08,530 --> 00:01:09,363
- Thanks, Casey.

12
00:01:11,760 --> 00:01:13,563
Hello, everyone, this is Steven D'sa.

13
00:01:14,876 --> 00:01:16,490
I've got along with me and Vincent Wong,

14
00:01:16,490 --> 00:01:20,229
who's from the Mandiant IR team.

15
00:01:20,230 --> 00:01:21,223
With the FAS.

16
00:01:22,090 --> 00:01:24,460
We'll be talking today over
the next 30 minutes about

17
00:01:24,460 --> 00:01:28,160
our experiences dealing
with threat actors in APAC.

18
00:01:28,160 --> 00:01:29,470
Some observations that we have

19
00:01:29,470 --> 00:01:33,080
that we could share with
you and also some lessons.

20
00:01:33,080 --> 00:01:35,340
I'm gonna quickly jump into
some quick introductions

21
00:01:35,340 --> 00:01:36,630
setting the background,

22
00:01:36,630 --> 00:01:40,039
and Vincent and I will share
some insights with you.

23
00:01:40,040 --> 00:01:41,800
Vincent, if you wanna turn on your camera,

24
00:01:41,800 --> 00:01:43,509
we'll be able to see you.

25
00:01:43,509 --> 00:01:45,409
Hey, Vincent.
- [Vincent] Sure thing.

26
00:01:46,640 --> 00:01:50,070
Vincent has been working
with me on investigations.

27
00:01:50,070 --> 00:01:52,470
He comes to the background
with the Federal Police,

28
00:01:52,470 --> 00:01:57,100
but he spent the last
five years long with me

29
00:01:57,100 --> 00:01:59,699
dealing with incidences across a APJ

30
00:01:59,700 --> 00:02:03,400
and we'll be sharing
some some details about

31
00:02:04,780 --> 00:02:07,780
some of the interesting
changes that we've seen

32
00:02:07,780 --> 00:02:10,289
in terms of threat actors trying
to stay in the environment.

33
00:02:10,289 --> 00:02:12,489
I've been doing this for a lot longer

34
00:02:12,490 --> 00:02:15,483
and happy to share insights.

35
00:02:16,470 --> 00:02:17,730
Again, through this whole session,

36
00:02:17,730 --> 00:02:20,230
if you have any questions, just
drop a note in the slidedoor

37
00:02:20,230 --> 00:02:23,233
and we'll try and answer
it as quickly as we can.

38
00:02:24,140 --> 00:02:26,739
Over the next 30 minutes, what we'll do is

39
00:02:26,740 --> 00:02:30,010
talk a little bit about
what we are observing

40
00:02:30,010 --> 00:02:31,870
in terms of the state of hack.

41
00:02:31,870 --> 00:02:34,920
Some advancements from threat actors.

42
00:02:34,920 --> 00:02:39,750
Some intrusion details that
we saw them take backdoors

43
00:02:39,750 --> 00:02:41,330
which are of interest.

44
00:02:41,330 --> 00:02:44,610
And some interesting analysis
from recent investigations.

45
00:02:44,610 --> 00:02:47,040
We do want to leave you with
some lessons that we learned

46
00:02:47,040 --> 00:02:49,340
that you could also apply
in your environment.

47
00:02:50,670 --> 00:02:53,299
So, just to recap the goals,

48
00:02:53,300 --> 00:02:56,060
the first one being latest techniques.

49
00:02:56,060 --> 00:02:58,550
The second one being some
interesting data theft

50
00:02:58,550 --> 00:03:00,683
that we've seen that attackers rely on.

51
00:03:01,640 --> 00:03:04,359
Selling base, because I think this is what

52
00:03:04,360 --> 00:03:05,210
is important when you're trying

53
00:03:05,210 --> 00:03:07,390
to counter these threat actors.

54
00:03:07,390 --> 00:03:10,950
And finally, as I mentioned,
some tactical guidance

55
00:03:10,950 --> 00:03:11,940
that you can immediately use

56
00:03:11,940 --> 00:03:15,620
and some strategic guidance
that you can plan for,

57
00:03:15,620 --> 00:03:17,943
over the short time, in your organization.

58
00:03:19,440 --> 00:03:20,870
Just to set the background

59
00:03:20,870 --> 00:03:23,360
Mandiant Investigations across the globe,

60
00:03:23,360 --> 00:03:25,330
we released something
called M-Trends every year.

61
00:03:25,330 --> 00:03:29,170
But this is one of the
statistics that we like to share.

62
00:03:29,170 --> 00:03:31,950
And I've kind of just opposed
that for the last two years.

63
00:03:31,950 --> 00:03:33,619
we've seen attackers,

64
00:03:33,620 --> 00:03:37,940
reattempt to gain access
about one in three times

65
00:03:37,940 --> 00:03:40,840
over the last 12 months
for organizations where

66
00:03:40,840 --> 00:03:43,480
we're dealing with, incident response.

67
00:03:43,480 --> 00:03:46,880
In APJ and I'm picking a year back,

68
00:03:46,880 --> 00:03:49,900
the number was closer with 9/10 times.

69
00:03:49,900 --> 00:03:52,340
What we're seeing is
attackers once they get in,

70
00:03:52,340 --> 00:03:54,600
once they have some information
about the organization

71
00:03:54,600 --> 00:03:56,780
or reattempting to get in.

72
00:03:56,780 --> 00:03:57,614
And this is a very important statistic,

73
00:03:57,614 --> 00:04:01,590
important background in terms of

74
00:04:01,590 --> 00:04:03,528
how you should be planning to

75
00:04:03,528 --> 00:04:05,303
counter these threat actors.

76
00:04:06,140 --> 00:04:08,093
Just in terms of the background,

77
00:04:08,930 --> 00:04:10,310
the state of the hack is that

78
00:04:10,310 --> 00:04:13,610
we're not dealing with
commodity, threat actors,

79
00:04:13,610 --> 00:04:16,630
we're looking at threat
actors who would be

80
00:04:16,630 --> 00:04:18,060
hands on keyboard

81
00:04:18,060 --> 00:04:23,060
are trying being extremely,
less noisy in the environment,

82
00:04:23,400 --> 00:04:27,270
try to live off the land where
they can use existing tools.

83
00:04:27,270 --> 00:04:32,270
And the attackers trying to manipulate

84
00:04:32,330 --> 00:04:35,000
the way they're maintaining
persistence longer

85
00:04:35,000 --> 00:04:36,310
in the environment.

86
00:04:36,310 --> 00:04:38,360
I think this is one of the key aspects

87
00:04:38,360 --> 00:04:41,080
that attackers continue
to stay longer because

88
00:04:41,080 --> 00:04:46,080
they have an ability to evade
or find that's a blind spot

89
00:04:47,760 --> 00:04:50,599
in the security teams remediation measures

90
00:04:50,600 --> 00:04:53,760
to stay in longer and, kind
of reset the whole effort

91
00:04:53,760 --> 00:04:56,289
that the blue team's would be doing.

92
00:04:56,290 --> 00:04:59,120
The adversities do know
that the blue teams

93
00:04:59,120 --> 00:05:00,733
do have certain constraints.

94
00:05:01,750 --> 00:05:04,303
There is limited visibility
across the environment.

95
00:05:06,330 --> 00:05:08,300
No blue team's got unlimited budgets.

96
00:05:08,300 --> 00:05:11,323
We're all working with
constraints, bandwidth,

97
00:05:12,290 --> 00:05:17,150
time limitations, sometimes
there are businesses

98
00:05:17,150 --> 00:05:20,700
that need to operate
with certain limitations

99
00:05:20,700 --> 00:05:24,712
where security software
coverage is, at best,

100
00:05:25,600 --> 00:05:28,960
less than 80%, and there
are some blind spots there.

101
00:05:28,960 --> 00:05:31,969
And attackers use these constraints

102
00:05:31,970 --> 00:05:36,170
to try and add, last minute
changes to their techniques,

103
00:05:36,170 --> 00:05:38,809
so that they can evade
the final push to clean

104
00:05:38,809 --> 00:05:41,220
the environment and stay in longer.

105
00:05:41,220 --> 00:05:44,930
So, that's the background
for the rest of the talk.

106
00:05:44,930 --> 00:05:49,930
And, I'll pass it to Vincent,
very shortly in terms of,

107
00:05:50,840 --> 00:05:52,423
sharing some of the details.

108
00:05:54,330 --> 00:05:55,590
When we talk about threat actors,

109
00:05:55,590 --> 00:05:59,310
I also want to kind of
paint out the landscape.

110
00:05:59,310 --> 00:06:03,343
We're dealing with a
human on the keyboard.

111
00:06:04,315 --> 00:06:07,240
There are variations in
the ways they would attack.

112
00:06:07,240 --> 00:06:09,180
And these are not individuals,

113
00:06:09,180 --> 00:06:13,240
these are more well funded
groups or organizations

114
00:06:13,240 --> 00:06:16,217
trying to get in and stay
in their environment.

115
00:06:16,217 --> 00:06:18,510
And the third part, that's
the most important one,

116
00:06:18,510 --> 00:06:20,730
that if you kick them out,

117
00:06:20,730 --> 00:06:23,920
you have to be very
coordinated while doing that,

118
00:06:23,920 --> 00:06:26,978
but also have visibility
that these threat actors,

119
00:06:26,978 --> 00:06:29,720
they're motivated to stay in longer

120
00:06:29,720 --> 00:06:32,130
and have a higher return on the investment

121
00:06:32,130 --> 00:06:33,530
that they're making,

122
00:06:33,530 --> 00:06:35,010
and they would manage those risks.

123
00:06:35,010 --> 00:06:36,400
And we can talk about some of the ways

124
00:06:36,400 --> 00:06:39,080
that they manage those
risks to get back in.

125
00:06:39,080 --> 00:06:41,250
Because, this is one of their objectives

126
00:06:41,250 --> 00:06:42,600
that if you kick them out,

127
00:06:42,600 --> 00:06:44,300
they would want to return back in.

128
00:06:46,220 --> 00:06:48,630
Case in point was APT1,

129
00:06:48,630 --> 00:06:53,630
when we had the report
that went out in 2014.

130
00:06:53,780 --> 00:06:55,479
One of the things that we saw was,

131
00:06:56,920 --> 00:07:00,390
the day the report went out,
we saw them make changes.

132
00:07:00,390 --> 00:07:04,763
We saw them, park domains, tear
out the staging directories,

133
00:07:05,920 --> 00:07:08,290
take off the tools and change the tools

134
00:07:08,290 --> 00:07:12,050
so that if they could evade any cleanup,

135
00:07:12,050 --> 00:07:14,410
they could be in the
environment a little longer.

136
00:07:14,410 --> 00:07:18,230
They did retool, came back
in, but we haven't seen APT1

137
00:07:18,230 --> 00:07:20,130
for a very long time.

138
00:07:20,130 --> 00:07:23,870
I'll pass it to Vincent
to talk a little bit about

139
00:07:23,870 --> 00:07:25,700
the advancement from threat actors

140
00:07:25,700 --> 00:07:28,440
and give some examples to to outline that.

141
00:07:28,440 --> 00:07:29,273
Vince.

142
00:07:30,140 --> 00:07:31,940
- Sure, thing. Thanks a lot, Steven.

143
00:07:33,300 --> 00:07:35,840
So how we've seen the evolution of tooling

144
00:07:35,840 --> 00:07:39,060
is something as simple as Mimikatz.

145
00:07:39,060 --> 00:07:42,280
So for instance, on the top
left hand screen over there,

146
00:07:42,280 --> 00:07:45,087
you can see the very first
iteration of MimiKatz

147
00:07:45,087 --> 00:07:46,640
was a binary file.

148
00:07:46,640 --> 00:07:48,880
DLL file, you have to load a driver

149
00:07:48,880 --> 00:07:51,219
for it to execute successfully.

150
00:07:51,220 --> 00:07:52,940
On the right hand side, of right hand side

151
00:07:52,940 --> 00:07:54,900
you can see the second
iteration of Mimikatz

152
00:07:54,900 --> 00:07:56,832
where it's getting coded using PowerShell.

153
00:07:58,254 --> 00:08:01,830
At the bottom, bottom left,
you can see the third iteration

154
00:08:01,830 --> 00:08:03,883
of using Mimikatz or using ProcDump.

155
00:08:05,060 --> 00:08:07,620
Microsoft is commonly available tool

156
00:08:07,620 --> 00:08:10,620
to dump a particular process
called LSASS process,

157
00:08:10,620 --> 00:08:12,880
which contains a lot of
the credentials way a lot

158
00:08:12,880 --> 00:08:16,503
of information and passwords
are stored in hashes.

159
00:08:17,450 --> 00:08:20,120
Now, a lot of EDR tools
are catching on to that.

160
00:08:20,120 --> 00:08:21,350
Attackers obviously notice.

161
00:08:21,350 --> 00:08:22,930
So they're moving on
to the next iteration,

162
00:08:22,930 --> 00:08:26,520
which is using another
living off the land technique

163
00:08:26,520 --> 00:08:30,469
could run DLL 32 which is
calling like a DLL service.

164
00:08:30,470 --> 00:08:31,890
It's built into Windows

165
00:08:31,890 --> 00:08:34,909
and then calling a very
particular process ID

166
00:08:34,909 --> 00:08:36,437
to dump the LSASS process as well.

167
00:08:36,437 --> 00:08:39,000
And then the typical
attacker would take this off

168
00:08:40,270 --> 00:08:44,333
and conduct the cracking
and hash analysis that way.

169
00:08:47,170 --> 00:08:49,083
Now, in terms of avenues of return,

170
00:08:50,010 --> 00:08:52,910
these are the top four
things that we usually see

171
00:08:52,910 --> 00:08:53,780
from attackers.

172
00:08:53,780 --> 00:08:54,920
So prior knowledge, obviously,

173
00:08:54,920 --> 00:08:56,676
if they lived in your
environment a little while

174
00:08:56,677 --> 00:08:58,330
and it's not an expert reading your data,

175
00:08:58,330 --> 00:09:01,030
they would have prior
knowledge of how you operated,

176
00:09:01,030 --> 00:09:02,740
what passwords might have been changed

177
00:09:02,740 --> 00:09:05,810
and what might not work
and won't work as well.

178
00:09:05,810 --> 00:09:07,079
In terms of backdoors,

179
00:09:07,080 --> 00:09:10,070
which we'll dig into a
little bit deeper as well,

180
00:09:10,070 --> 00:09:12,820
how sometimes they're
not identified fully.

181
00:09:12,820 --> 00:09:15,250
As Steven said, there are
constraints and budget timing,

182
00:09:15,250 --> 00:09:16,940
and also, expertise as well

183
00:09:17,880 --> 00:09:20,470
to finding some of these backdoors.

184
00:09:20,470 --> 00:09:22,080
Next is the exploits.

185
00:09:22,080 --> 00:09:25,160
We'll also dig into this as
well, a little bit later on.

186
00:09:25,160 --> 00:09:27,199
But we have seen early use of exploits,

187
00:09:27,200 --> 00:09:28,670
especially Apache Struts.

188
00:09:28,670 --> 00:09:30,709
Everybody knows about this,
but also a whole bunch of ones

189
00:09:30,710 --> 00:09:35,710
which we also dealt with
recently in 2019, and 2020.

190
00:09:36,417 --> 00:09:38,900
And supply chain attacks,
especially the MMSPs

191
00:09:38,900 --> 00:09:41,459
and service providers, with have been used

192
00:09:41,460 --> 00:09:44,143
as an exploit point to
move into the environment.

193
00:09:48,340 --> 00:09:49,890
- Thanks Vince.

194
00:09:49,890 --> 00:09:53,000
In terms of just that background,

195
00:09:53,000 --> 00:09:55,760
just jumping in terms
of the prior knowledge.

196
00:09:55,760 --> 00:09:58,790
These are some of the
examples that we saw were

197
00:09:58,790 --> 00:10:00,670
Active Directory database does moving

198
00:10:00,670 --> 00:10:02,010
outside the environment.

199
00:10:02,010 --> 00:10:04,470
But there are other things that are also,

200
00:10:04,470 --> 00:10:07,300
fairly important that
attackers typically will try

201
00:10:07,300 --> 00:10:08,630
that they can reuse.

202
00:10:08,630 --> 00:10:11,550
What we've seen is network
diagrams to find shadow IT,

203
00:10:11,550 --> 00:10:16,449
or internal recon data,
especially for third party VPN,

204
00:10:16,450 --> 00:10:19,410
using that as a way to
get into the environment.

205
00:10:19,410 --> 00:10:21,969
We've seen attackers take
data from internal portals,

206
00:10:21,970 --> 00:10:24,260
because those are some of those locations

207
00:10:24,260 --> 00:10:27,630
where security may not
be applied that strongly.

208
00:10:27,630 --> 00:10:31,050
People will have access to
enterprise architecture,

209
00:10:31,050 --> 00:10:33,490
organization charts, so or individuals,

210
00:10:33,490 --> 00:10:37,340
they can be targeted further
to get into the environment.

211
00:10:37,340 --> 00:10:38,500
And one of the things that I've seen

212
00:10:38,500 --> 00:10:41,160
has been architecture diagrams,

213
00:10:41,160 --> 00:10:44,010
which don't get enough
attention and attackers use that

214
00:10:44,010 --> 00:10:46,020
to get back into the environment.

215
00:10:46,020 --> 00:10:48,840
And we've seen that
repeated multiple times.

216
00:10:48,840 --> 00:10:51,730
Vince if you want to talk a
little bit about the backdoors

217
00:10:51,730 --> 00:10:55,533
I think this is one of
the topics of interest.

218
00:10:56,870 --> 00:10:57,873
- Yeah, absolutely.

219
00:10:57,873 --> 00:11:01,310
So some of the most recent
backdoors, we've seen

220
00:11:01,310 --> 00:11:03,949
is some of these techniques
we have listed down.

221
00:11:03,950 --> 00:11:05,550
So remote desktop tunneling,

222
00:11:05,550 --> 00:11:08,579
web shells placed on internet
facing infrastructure,

223
00:11:08,580 --> 00:11:10,930
persistence mechanisms
which may not be caught,

224
00:11:12,370 --> 00:11:14,040
golden tickets and some variants

225
00:11:14,040 --> 00:11:16,150
on other backdoors seen as well.

226
00:11:16,150 --> 00:11:17,970
We'll also touch on things like exploits

227
00:11:17,970 --> 00:11:18,880
we've also seen as well.

228
00:11:18,880 --> 00:11:23,660
So RDP tunneling is fairly simple,

229
00:11:23,660 --> 00:11:25,790
but also pretty devastating.

230
00:11:25,790 --> 00:11:29,240
So, typically, you can see
on the right hand side.

231
00:11:29,240 --> 00:11:33,099
Typically, you won't
allow inbound connections

232
00:11:33,099 --> 00:11:36,240
to your internet infrastructure generally.

233
00:11:36,240 --> 00:11:38,130
But generally, we've
seen a lot of enterprises

234
00:11:38,130 --> 00:11:40,924
allow outbound connections, which are

235
00:11:40,924 --> 00:11:41,870
fairly open sometimes.

236
00:11:41,870 --> 00:11:44,010
So for instance, in the top diagram,

237
00:11:44,010 --> 00:11:47,760
you can see the the
attacker has obtained access

238
00:11:47,760 --> 00:11:48,991
to that victim system

239
00:11:48,991 --> 00:11:52,319
and have initiated an outbound connection.

240
00:11:52,320 --> 00:11:55,150
He's able to initiate
an outbound connection.

241
00:11:55,150 --> 00:11:57,829
In the bottom one, they
have access to the system

242
00:11:57,830 --> 00:11:59,130
and have actually executated plinks.

243
00:11:59,130 --> 00:12:01,090
So plinks commonly available tool.

244
00:12:01,090 --> 00:12:02,470
Publicly available tool.

245
00:12:02,470 --> 00:12:07,470
And they've set up a
forwarding listening type setup

246
00:12:07,590 --> 00:12:09,870
where you'd actually
set up a connection to

247
00:12:09,870 --> 00:12:13,890
an external TCP server to the internet.

248
00:12:13,890 --> 00:12:16,060
Now the attacker can use this tunnel.

249
00:12:16,060 --> 00:12:18,040
So instead of just having
being restricted to

250
00:12:18,040 --> 00:12:22,870
just text commands, they
can actually build a tunnel.

251
00:12:22,870 --> 00:12:25,520
So you can see here it's
building a tunnel for 12345.

252
00:12:27,425 --> 00:12:30,670
Building a tunnel back
to the victim system

253
00:12:30,670 --> 00:12:32,560
on the right hand side there.

254
00:12:32,560 --> 00:12:34,132
And it gives them the full GUI,

255
00:12:35,830 --> 00:12:39,320
hands keyboard and mouse
access to that endpoint

256
00:12:39,320 --> 00:12:41,170
to perform whatever
activity they need to do.

257
00:12:41,170 --> 00:12:46,000
So that's one example we've
seen in recent projects.

258
00:12:46,000 --> 00:12:50,270
Web shells, another really common backdoor

259
00:12:50,270 --> 00:12:53,710
where we do see if the
attacker has ability

260
00:12:53,710 --> 00:12:55,800
to access web service.

261
00:12:55,800 --> 00:12:58,020
They'll generally put in this web shell.

262
00:12:58,020 --> 00:13:00,870
So web shell is just a
script that would run,

263
00:13:00,870 --> 00:13:02,270
kind of like a normal web page.

264
00:13:02,270 --> 00:13:04,350
And then, depending on the user context

265
00:13:04,350 --> 00:13:05,960
of the process that's running,

266
00:13:05,960 --> 00:13:08,050
you can actually execute
a number of commands.

267
00:13:08,050 --> 00:13:09,740
So here on the top hand top,

268
00:13:09,740 --> 00:13:12,920
you can see the effects
PHP, Linux Web Server,

269
00:13:12,920 --> 00:13:15,270
and the attacker has
just putting in a diff

270
00:13:15,270 --> 00:13:17,270
to see what drives them mounted.

271
00:13:17,270 --> 00:13:18,800
And then in the output window,

272
00:13:18,800 --> 00:13:20,160
they'll see that output window

273
00:13:20,160 --> 00:13:22,092
and see what what's been executed

274
00:13:22,092 --> 00:13:24,230
on that bottom window there.

275
00:13:24,230 --> 00:13:27,010
Next example is scheduled task.

276
00:13:27,010 --> 00:13:30,720
So really simple basic
for an attacker to set up.

277
00:13:30,720 --> 00:13:34,470
It's as easy as placing
a batch file in a folder,

278
00:13:34,470 --> 00:13:35,750
which is fairly obscure.

279
00:13:35,750 --> 00:13:36,870
So in this example, we have

280
00:13:36,870 --> 00:13:39,120
C Windows system Audit folder.

281
00:13:39,120 --> 00:13:41,500
The concept of the batch
file can call up anything

282
00:13:41,500 --> 00:13:43,960
in this example, it's using PowerShell.

283
00:13:43,960 --> 00:13:45,550
And using a download string

284
00:13:45,550 --> 00:13:49,420
to download a particular payload, 1.ps1

285
00:13:49,420 --> 00:13:51,250
to the target system.

286
00:13:51,250 --> 00:13:53,083
Now this is invoked every Saturday,

287
00:13:53,920 --> 00:13:55,589
at 2:00am via Task Scheduler,

288
00:13:55,590 --> 00:13:57,720
and in 1.ps1 is a reverse shell.

289
00:13:57,720 --> 00:14:00,023
So this allows an attacker
a method to get backing

290
00:14:00,023 --> 00:14:03,090
without having to actually
necessarily use malware

291
00:14:03,090 --> 00:14:04,303
at this point.

292
00:14:04,303 --> 00:14:06,890
But this is really just normal,

293
00:14:06,890 --> 00:14:09,063
commonly available tools on Windows.

294
00:14:10,250 --> 00:14:13,690
Next would be some exploits we've seen.

295
00:14:13,690 --> 00:14:18,690
So in 2019/2020, we saw quite
a number of unfortunately,

296
00:14:18,910 --> 00:14:20,459
pretty devastating exploits

297
00:14:20,460 --> 00:14:23,600
targeting very well known
internet facing technologies.

298
00:14:23,600 --> 00:14:25,890
And we have seen skilled
attackers using these exploits

299
00:14:25,890 --> 00:14:28,473
as a method of regaining
access to the environment.

300
00:14:29,330 --> 00:14:34,020
So if sometimes the target may
not be patching in a fairly,

301
00:14:34,020 --> 00:14:35,579
regular pattern, or they're
not putting the mitigations

302
00:14:35,580 --> 00:14:38,930
in a reasonable timeframe, it
can absolutely be exploited.

303
00:14:38,930 --> 00:14:40,829
And we have seen this.

304
00:14:40,830 --> 00:14:42,773
On the right hand side,
there is some examples

305
00:14:42,773 --> 00:14:45,210
of ones we've investigated in our region.

306
00:14:45,210 --> 00:14:47,940
So the Citrix Netscaler,
Pulse Secure VPN, and

307
00:14:47,940 --> 00:14:49,610
SharePoint and obviously Apache Struts

308
00:14:49,610 --> 00:14:51,840
for a little while ago, as well.

309
00:14:51,840 --> 00:14:54,110
But I'll go over one
pretty interesting example,

310
00:14:54,110 --> 00:14:57,630
on the Netscaler, that we found

311
00:14:57,630 --> 00:14:59,400
and we're pretty actively working

312
00:14:59,400 --> 00:15:01,949
pretty closely Citrix as well, it's one.

313
00:15:01,950 --> 00:15:04,550
So a lot of appliances are really built on

314
00:15:04,550 --> 00:15:07,930
like some version of Linux or Unix or VST.

315
00:15:07,930 --> 00:15:09,750
So this means modules can be vulnerable.

316
00:15:09,750 --> 00:15:12,310
So in this instance of the this,

317
00:15:12,310 --> 00:15:16,579
the Citrix VPNs had a
flaw called template tool,

318
00:15:16,580 --> 00:15:19,180
which is a tool that's
sort of built into Linux.

319
00:15:19,180 --> 00:15:22,229
Now this was a way for
the attacker to get in.

320
00:15:22,230 --> 00:15:24,320
So the initial exploit
is up at the top there,

321
00:15:24,320 --> 00:15:26,690
we extract this from HTTP logs.

322
00:15:26,690 --> 00:15:29,090
Next, you can see the next commands

323
00:15:29,090 --> 00:15:31,100
where this particular attack group

324
00:15:31,100 --> 00:15:33,300
use the search and delete netscaler-d,

325
00:15:33,300 --> 00:15:34,859
which is a very popular crypto miner.

326
00:15:34,860 --> 00:15:37,970
So it's obviously so nice
to delete crypto miners

327
00:15:37,970 --> 00:15:40,680
from our netscalars, which is great.

328
00:15:40,680 --> 00:15:42,010
But then it will do a few other things.

329
00:15:42,010 --> 00:15:43,990
So to create a hidden staging folder,

330
00:15:43,990 --> 00:15:47,080
and then install some
variants of the tools.

331
00:15:47,080 --> 00:15:50,110
Now, while we call this NOTROBIN was open,

332
00:15:50,110 --> 00:15:51,190
it seems to be doing good, right.

333
00:15:51,190 --> 00:15:53,440
So the first couple of
iterations of what it's doing,

334
00:15:53,440 --> 00:15:54,910
it seems to be doing
some good stuff for us.

335
00:15:54,910 --> 00:15:57,640
So correcting the folder,
making sure the correct folder

336
00:15:57,640 --> 00:15:58,939
is in the right folder,

337
00:15:58,940 --> 00:16:02,653
removing some more payloads exploits,

338
00:16:03,500 --> 00:16:07,280
deleting other exploits that I seen,

339
00:16:07,280 --> 00:16:09,689
like, for instance projects in India,

340
00:16:09,690 --> 00:16:12,130
but then it's also setting up
an interesting listening port

341
00:16:12,130 --> 00:16:14,980
on UDP port 18634.

342
00:16:14,980 --> 00:16:16,410
And then also deleting certain files.

343
00:16:16,410 --> 00:16:18,170
We think this might be a new ticks

344
00:16:18,170 --> 00:16:21,262
or potentially an avenue
of return as well.

345
00:16:22,170 --> 00:16:24,540
So NOTROBIN, like they actually
stopped other attackers

346
00:16:24,540 --> 00:16:27,810
from deploying their tools that
really lead us just to stop,

347
00:16:27,810 --> 00:16:29,439
the system administrators noticing

348
00:16:29,440 --> 00:16:31,230
that something obvious was happening.

349
00:16:31,230 --> 00:16:33,428
And we believe it was
really useful to campaign

350
00:16:33,428 --> 00:16:36,580
to detection from administrators.

351
00:16:36,580 --> 00:16:39,713
So that's what it's called
NOTROBIN essentially.

352
00:16:41,130 --> 00:16:43,290
- Hey, man, that was pretty helpful,

353
00:16:43,290 --> 00:16:46,110
because I think what it talks
about are different ways

354
00:16:46,110 --> 00:16:48,490
that attackers would come
back in the environment

355
00:16:48,490 --> 00:16:53,320
and the web shell, the RDP as well

356
00:16:53,320 --> 00:16:55,073
as the backdoor like NOTROBIN.

357
00:16:56,150 --> 00:16:57,800
I also wanna touch upon some,

358
00:16:57,800 --> 00:17:00,130
observations that we had
from recent investigation.

359
00:17:00,130 --> 00:17:02,900
That showed us different
ways that attackers

360
00:17:02,900 --> 00:17:04,290
were managing the risks.

361
00:17:04,290 --> 00:17:05,123
So let's quickly run through that.

362
00:17:05,123 --> 00:17:09,119
I just wanted to take take a
minute to set a background.

363
00:17:09,119 --> 00:17:12,119
Typically when we see investigations,

364
00:17:12,119 --> 00:17:13,599
people focus on the systems that

365
00:17:13,599 --> 00:17:15,089
either have received the malware

366
00:17:15,089 --> 00:17:17,849
or that have been compromised.

367
00:17:17,849 --> 00:17:20,889
Very few times we've
actually seen organizations

368
00:17:20,890 --> 00:17:24,010
that doing investigation, look
at systems that got access

369
00:17:24,010 --> 00:17:27,459
to see if anything was
lost in terms of the data.

370
00:17:27,459 --> 00:17:32,210
There is also, a lack of coverage

371
00:17:32,210 --> 00:17:34,260
while the attacker moves
on to other systems

372
00:17:34,260 --> 00:17:35,619
or performs other activities,

373
00:17:35,619 --> 00:17:39,429
the focus is only on the
symptom, but not on the problem,

374
00:17:39,430 --> 00:17:41,860
which is why attackers get back in.

375
00:17:41,860 --> 00:17:44,070
Then one of the ways that we've looked at

376
00:17:44,070 --> 00:17:47,860
and recommended organizations
to deal with investigations

377
00:17:47,860 --> 00:17:49,610
is to keep an iterative.

378
00:17:49,610 --> 00:17:51,070
You would get your initial leads,

379
00:17:51,070 --> 00:17:54,050
you would identify
indicators based on that.

380
00:17:54,050 --> 00:17:56,370
Deploy the IOCs on your existing tools.

381
00:17:56,370 --> 00:17:58,290
These could be the different kinds of

382
00:17:58,290 --> 00:18:01,170
security visibility tools
in your environment.

383
00:18:01,170 --> 00:18:04,320
You are going to validate
the system that are suspect,

384
00:18:04,320 --> 00:18:06,510
but typically don't stop there.

385
00:18:06,510 --> 00:18:09,560
Post that collect data and what
Mandiant does live response.

386
00:18:09,560 --> 00:18:11,730
So, a lot of the findings that we have

387
00:18:11,730 --> 00:18:13,970
are based on that live
response data collection,

388
00:18:13,970 --> 00:18:15,840
that we saw other activities that happened

389
00:18:15,840 --> 00:18:19,060
in the environment, do analysis,

390
00:18:19,060 --> 00:18:21,960
sometimes we found tools that
had certain capabilities.

391
00:18:21,960 --> 00:18:24,200
And there are sometimes false positives.

392
00:18:24,200 --> 00:18:25,710
But once you identify that

393
00:18:25,710 --> 00:18:28,690
you'd rerunning that whole circle, again,

394
00:18:28,690 --> 00:18:29,940
with the new indicators

395
00:18:29,940 --> 00:18:32,367
to see that you've
scoped out the attacker.

396
00:18:32,367 --> 00:18:34,580
And the process that you
have a much better way

397
00:18:34,580 --> 00:18:37,590
to deal with the attacker
in your environment

398
00:18:37,590 --> 00:18:40,120
and kick off the attacker without,

399
00:18:40,120 --> 00:18:42,070
giving them too many avenues to return.

400
00:18:42,960 --> 00:18:45,510
So one of the things I
did wanna talk about was,

401
00:18:45,510 --> 00:18:46,720
password resets.

402
00:18:46,720 --> 00:18:48,560
What we see most compromises

403
00:18:48,560 --> 00:18:51,300
have a privilege escalation real quickly.

404
00:18:51,300 --> 00:18:52,683
They get to domain admin.

405
00:18:54,240 --> 00:18:56,700
There are a couple of questions
that get asked it usually.

406
00:18:56,700 --> 00:18:59,857
We set the passwords, and
the risk of not scoping out

407
00:18:59,857 --> 00:19:00,899
the the incident.

408
00:19:00,900 --> 00:19:03,623
But there's another one that came up was,

409
00:19:03,623 --> 00:19:06,980
what if the attacker can
record your password changes?

410
00:19:06,980 --> 00:19:09,400
And, in the investigation
that Vincent lead,

411
00:19:09,400 --> 00:19:10,800
we observed that they can.

412
00:19:10,800 --> 00:19:13,570
And this, applies a fairly large

413
00:19:15,080 --> 00:19:17,659
windows infrastructure right now.

414
00:19:17,660 --> 00:19:20,570
One of the things that we saw was,

415
00:19:20,570 --> 00:19:23,620
using this DLL password implant,

416
00:19:23,620 --> 00:19:25,793
the password filters that the LSA

417
00:19:27,133 --> 00:19:29,290
when you do a change password request,

418
00:19:29,290 --> 00:19:32,460
the LSA basically cause a
password filter to see if

419
00:19:32,460 --> 00:19:34,640
the password needs a
certain amount of complexity

420
00:19:34,640 --> 00:19:36,340
and then writes it to the SAM.

421
00:19:36,340 --> 00:19:40,110
That's the typical flow
that you can see on the top.

422
00:19:40,110 --> 00:19:43,110
Typically, what attackers would do is...

423
00:19:43,110 --> 00:19:45,580
What we've seen this
particular threat group do

424
00:19:45,580 --> 00:19:49,330
is introduce a bad filter.

425
00:19:49,330 --> 00:19:54,280
Have that hooked into the
filters that the LSA would call

426
00:19:54,280 --> 00:19:56,070
in terms of password filter,

427
00:19:56,070 --> 00:19:58,419
Every time we do a password change,

428
00:19:58,420 --> 00:19:59,730
the password filter gets clogged,

429
00:19:59,730 --> 00:20:01,670
but guess what, it doesn't
do a validation check.

430
00:20:01,670 --> 00:20:03,777
It just writes the new
password in clear text

431
00:20:03,777 --> 00:20:07,580
to a file or location that the
attacker can access later on,

432
00:20:07,580 --> 00:20:09,110
or to a C2.

433
00:20:09,111 --> 00:20:12,963
So that the attacker has that
data available with them,

434
00:20:14,370 --> 00:20:17,770
pretty novel way for the
attacker to learn about that.

435
00:20:17,770 --> 00:20:20,860
And this is because
attackers, they assume.

436
00:20:20,860 --> 00:20:21,949
They are also managing risk.

437
00:20:21,950 --> 00:20:23,560
They know that they could be detected.

438
00:20:23,560 --> 00:20:26,053
And we saw this happen
on one of the clients

439
00:20:26,053 --> 00:20:27,973
that we dealt with recently,

440
00:20:29,000 --> 00:20:31,990
a lot of domain controllers restarted

441
00:20:33,650 --> 00:20:35,970
clients, probably thought was an issue

442
00:20:35,970 --> 00:20:38,200
didn't really investigate all of them.

443
00:20:38,200 --> 00:20:41,730
We saw password filters
set up on some of these.

444
00:20:41,730 --> 00:20:44,260
And while the blue team
was resetting passwords,

445
00:20:44,260 --> 00:20:46,960
because they had observed
some of the activity,

446
00:20:46,960 --> 00:20:51,440
the attacker, was really
quietly siphoning off

447
00:20:51,440 --> 00:20:54,220
about 800 to 1000
passwords, they got reset,

448
00:20:54,220 --> 00:20:56,680
and they had their foothold
back into the environment.

449
00:20:56,680 --> 00:20:59,100
And the defenders they had
a false sense of security

450
00:20:59,100 --> 00:21:03,790
that they had identified some
activity and they had asked,

451
00:21:03,790 --> 00:21:05,389
employees to reset passwords,

452
00:21:05,390 --> 00:21:08,940
not knowing that the attacker
had a pretty good view

453
00:21:08,940 --> 00:21:10,173
into that environment.

454
00:21:11,160 --> 00:21:16,160
So yeah, very interesting method
that we saw attackers use.

455
00:21:17,520 --> 00:21:21,510
Another one that we saw, it's
nice that Vincent spoke about

456
00:21:21,510 --> 00:21:23,306
some of the vulnerabilities
and SharePoint.

457
00:21:23,306 --> 00:21:26,910
And, if you have any
questions on this one as well,

458
00:21:26,910 --> 00:21:29,570
or the previous methods that we spoke,

459
00:21:29,570 --> 00:21:32,929
drop an on Slido where we're
happy to talk about it.

460
00:21:32,930 --> 00:21:34,210
If you like what you saw,
just give us a thumbs up

461
00:21:34,210 --> 00:21:36,410
we'll be happy with the
recognition as well.

462
00:21:37,360 --> 00:21:39,370
So just coming back to SharePoint.

463
00:21:40,235 --> 00:21:44,449
This is a vulnerability around
the NFL April last year.

464
00:21:44,450 --> 00:21:46,723
What we saw was attackers, got in,

465
00:21:47,830 --> 00:21:49,439
database one opportunity window

466
00:21:49,440 --> 00:21:51,300
because the organization they were dealing

467
00:21:51,300 --> 00:21:52,750
very fast to patch but had about

468
00:21:52,750 --> 00:21:54,380
a two to three day patch window,

469
00:21:54,380 --> 00:21:57,020
gotten in wrapped web
shells in their environment

470
00:21:57,020 --> 00:21:59,200
and went off, no further activity,

471
00:21:59,200 --> 00:22:03,190
just hoping that, when these
vulnerabilities got patched,

472
00:22:03,190 --> 00:22:04,280
nobody would have gone and looked

473
00:22:04,280 --> 00:22:05,710
whether they got exploited.

474
00:22:05,710 --> 00:22:09,490
And the simplicity of the attack was,

475
00:22:09,490 --> 00:22:12,370
something that, Vincent and one
of his colleagues worked on.

476
00:22:12,370 --> 00:22:14,203
And I just wanted to show that here.

477
00:22:15,210 --> 00:22:20,210
Echoing a Basic64 encoded
script into a back file,

478
00:22:20,250 --> 00:22:21,830
which is stored in this location.

479
00:22:21,830 --> 00:22:24,760
Again, these are ICS that
are publicly available.

480
00:22:24,760 --> 00:22:27,860
You can go look at this,
if you do have this

481
00:22:28,800 --> 00:22:29,822
in your environment.

482
00:22:30,890 --> 00:22:32,220
The attacker use certutil

483
00:22:32,220 --> 00:22:35,640
which can actually decode Base64 data

484
00:22:35,640 --> 00:22:37,950
use legitimately again living off the land

485
00:22:37,950 --> 00:22:41,950
and have that output into hereditary SPX.

486
00:22:41,950 --> 00:22:44,210
This looked like a simple
China Chopper web shell

487
00:22:44,210 --> 00:22:46,180
that the attacker can use later on.

488
00:22:46,180 --> 00:22:48,890
This was not the only web
shell the attackers dropped.

489
00:22:48,890 --> 00:22:51,470
They use a multiple set
of different web shells.

490
00:22:51,470 --> 00:22:53,810
We were tracking the
threat actor, but again,

491
00:22:53,810 --> 00:22:55,669
a nice way for the attacker

492
00:22:55,670 --> 00:22:59,130
to use a small opportunity window get in,

493
00:22:59,130 --> 00:23:03,660
leave a footprint and get
out web shells backdoors.

494
00:23:03,660 --> 00:23:05,530
And if we don't have visibility to this,

495
00:23:05,530 --> 00:23:09,110
it will be difficult to
counter these threat actors.

496
00:23:09,110 --> 00:23:11,899
So Vince, I think we've read a part of the

497
00:23:12,740 --> 00:23:14,210
conversation covered off.

498
00:23:14,210 --> 00:23:16,560
I think it's time to share some lessons

499
00:23:17,490 --> 00:23:19,670
why don't you take it from here.

500
00:23:19,670 --> 00:23:21,811
- Yep, sure. Thanks, Stephen.

501
00:23:21,811 --> 00:23:24,510
So how do we tackle this
problem with Netscaler?

502
00:23:24,510 --> 00:23:26,350
So, as we learned earlier,

503
00:23:26,350 --> 00:23:28,909
the appliances that we really
just based on some version

504
00:23:28,910 --> 00:23:31,560
of Unix and BSD or Linux.

505
00:23:31,560 --> 00:23:33,350
So one of the benefits is that

506
00:23:33,350 --> 00:23:35,760
a lot of the common scripting
tools and over the logs

507
00:23:35,760 --> 00:23:38,620
that are available as well
for us to investigate.

508
00:23:38,620 --> 00:23:40,520
So I've got some things outlined here.

509
00:23:40,520 --> 00:23:44,260
So in terms of detection,
there was a HTTP log available,

510
00:23:44,260 --> 00:23:45,860
which allowed us to see what was

511
00:23:46,757 --> 00:23:49,470
more potentially the vulnerable item.

512
00:23:49,470 --> 00:23:52,110
So this is one way to
check, is the attacker

513
00:23:52,110 --> 00:23:55,459
trying to hit this
particular file or trying

514
00:23:55,460 --> 00:24:00,170
to allow get access to
the Netscaler itself?

515
00:24:00,170 --> 00:24:03,550
Also, because Netscaler also uses BASH,

516
00:24:03,550 --> 00:24:05,399
there's actually BASH
history logs available.

517
00:24:05,400 --> 00:24:08,430
So you can see here that we
were able to actually extract

518
00:24:08,430 --> 00:24:10,830
the actual commands that were executed

519
00:24:10,830 --> 00:24:12,389
by the attacker as well.

520
00:24:12,390 --> 00:24:15,680
Next, the persistence
mechanism used by the attacker

521
00:24:15,680 --> 00:24:18,373
was a CRON job or schedule task.

522
00:24:18,373 --> 00:24:21,100
So, you can actually
create script fairly easily

523
00:24:21,100 --> 00:24:22,560
to start searching for this

524
00:24:22,560 --> 00:24:25,919
within your Citrix Netscaler environments

525
00:24:25,920 --> 00:24:27,410
and we actually did develop a script.

526
00:24:27,410 --> 00:24:29,160
So if you need to find what that is,

527
00:24:29,160 --> 00:24:30,480
we can also...

528
00:24:30,480 --> 00:24:35,480
please also hit us up on Slido
to grab the link from us.

529
00:24:35,910 --> 00:24:39,076
But it is publicly available
for you to search Netscalars

530
00:24:39,076 --> 00:24:41,643
if you haven't put this
mitigation in place as well.

531
00:24:42,570 --> 00:24:45,566
Steve talked about the password filter.

532
00:24:45,566 --> 00:24:49,170
So we can break this down in
terms of the attack Kill Chain

533
00:24:49,170 --> 00:24:52,490
which a lot of us blue
teamers are familiar with.

534
00:24:52,490 --> 00:24:56,420
So in the first review, you
will look for things like

535
00:24:56,420 --> 00:24:58,710
abnormal access especially
with domain controllers,

536
00:24:58,710 --> 00:25:02,350
which should be fairly
well logged and monitored.

537
00:25:02,350 --> 00:25:06,639
Looking for unsigned DLL
files is very typical signs.

538
00:25:06,640 --> 00:25:09,580
It's unlikely that the DLL will be signed.

539
00:25:09,580 --> 00:25:12,689
But with attackers getting
really good these days,

540
00:25:12,690 --> 00:25:15,090
there is a chance that
there might be some weird

541
00:25:15,090 --> 00:25:17,423
signed binaries as well.

542
00:25:18,590 --> 00:25:20,360
Obviously looking for abnormal changes

543
00:25:20,360 --> 00:25:22,159
in your register keys, the LSI key,

544
00:25:22,160 --> 00:25:25,190
especially looking for
unusual server reboots

545
00:25:25,190 --> 00:25:27,310
might not be as easy on a workstation

546
00:25:27,310 --> 00:25:29,220
but definitely your domain
controller should not have

547
00:25:29,220 --> 00:25:30,770
this password resets.

548
00:25:30,770 --> 00:25:34,800
And the next one is abnormal
file rights to weird locations.

549
00:25:34,800 --> 00:25:37,460
And also is there maybe
a C2 type connection

550
00:25:37,460 --> 00:25:38,860
using your security tools.

551
00:25:38,860 --> 00:25:41,120
May be detecting this as well

552
00:25:41,120 --> 00:25:43,120
before it hits the password filter.

553
00:25:43,120 --> 00:25:46,053
So these are some typical
things we've seen work for us.

554
00:25:47,750 --> 00:25:50,960
This is just a little additional
thing that we also saw.

555
00:25:50,960 --> 00:25:55,630
So IIS, again is the web server,

556
00:25:55,630 --> 00:25:56,870
has a lot of extensions.

557
00:25:56,870 --> 00:26:01,520
So by default, ASPX is the
default file extension to review.

558
00:26:01,520 --> 00:26:06,190
So ISAPI filters are one
way that IIS can expand

559
00:26:06,190 --> 00:26:09,640
its ability to ingest like
PHP files for instance.

560
00:26:09,640 --> 00:26:11,980
Now these are all just
DLL files in the end,

561
00:26:11,980 --> 00:26:14,210
and you have to register them into IIS.

562
00:26:14,210 --> 00:26:16,580
And we have seen these
users passing backdoors

563
00:26:16,580 --> 00:26:18,300
by targets threat actors as well.

564
00:26:18,300 --> 00:26:21,750
But the really good ones use
a ISAPI password filters,

565
00:26:21,750 --> 00:26:24,240
sorry ISAPI filters, for IIS.

566
00:26:24,240 --> 00:26:27,070
Detections, you have to do
it through a lot of stacking

567
00:26:27,070 --> 00:26:29,409
extensions, also looking
at your configuration file.

568
00:26:29,410 --> 00:26:31,950
So having good environmental hygiene

569
00:26:31,950 --> 00:26:34,220
and knowing what's in your
servers is really the key

570
00:26:34,220 --> 00:26:37,843
to detecting ISAPI filters here.

571
00:26:40,060 --> 00:26:41,200
- Hey, thanks, Vince.

572
00:26:41,200 --> 00:26:42,630
Lemme take this from here.

573
00:26:42,630 --> 00:26:47,630
In terms of the aspects
that Vincent spoke about,

574
00:26:48,740 --> 00:26:50,439
that very closely aligns with

575
00:26:50,439 --> 00:26:51,657
the third bullet point on your screen.

576
00:26:51,657 --> 00:26:53,980
The threat hunting program.

577
00:26:53,980 --> 00:26:58,330
We detected like ISAPI
filters and a client where

578
00:26:58,330 --> 00:27:00,929
unusual extension would trigger off

579
00:27:00,930 --> 00:27:04,690
a different filter binary that
was placed by the attacker

580
00:27:04,690 --> 00:27:08,510
and then used to remotely
trigger off activity

581
00:27:08,510 --> 00:27:09,650
on the environment.

582
00:27:09,650 --> 00:27:13,580
So having a threat hunting
program looking for outliers

583
00:27:15,330 --> 00:27:18,649
is one of the good ways for the blue team

584
00:27:18,650 --> 00:27:22,423
to identify these kind of activities.

585
00:27:23,440 --> 00:27:26,980
The baseline for that
is the top two points

586
00:27:26,980 --> 00:27:28,450
that I mentioned there.

587
00:27:28,450 --> 00:27:32,000
Do we have the right amount of
visibility on these systems?

588
00:27:32,000 --> 00:27:34,430
You can't have the same
peanut butter approach.

589
00:27:34,430 --> 00:27:38,320
Certain critical systems do have logging

590
00:27:38,320 --> 00:27:41,629
a lot more stringent
across the environment,

591
00:27:41,630 --> 00:27:44,640
but also VO log baselines
to make sure that

592
00:27:46,920 --> 00:27:48,870
the right amount of logging is available

593
00:27:48,870 --> 00:27:51,239
and for your key critical systems have

594
00:27:52,490 --> 00:27:55,300
defined and categorized so that people

595
00:27:55,300 --> 00:27:58,643
with higher experience, monitor those.

596
00:27:59,740 --> 00:28:03,450
Per the major avenues, which is RDP,

597
00:28:03,450 --> 00:28:06,050
which is again, a major concern.

598
00:28:06,050 --> 00:28:10,250
And we've seen that used
especially with the COVID situation

599
00:28:10,250 --> 00:28:12,840
with organizations in
opening up infrastructure.

600
00:28:12,840 --> 00:28:15,320
So the things that Vincent spoke about.

601
00:28:15,320 --> 00:28:19,090
Citrix, VPN, web shells, RDP, all of these

602
00:28:19,090 --> 00:28:22,159
are even more prevalent now
purely because of COVID.

603
00:28:22,160 --> 00:28:25,910
Make sure that, you leverage
the restricted admin mode

604
00:28:25,910 --> 00:28:28,193
to limit your password
exposure over there.

605
00:28:29,120 --> 00:28:32,510
WDigest again another thing
that we typically hunt for

606
00:28:32,510 --> 00:28:33,850
that keys turned on,

607
00:28:33,850 --> 00:28:36,419
you will see password dumping their text.

608
00:28:36,420 --> 00:28:38,590
And assessment, some basic logging,

609
00:28:38,590 --> 00:28:40,860
just make sure that you have
command line logging visible.

610
00:28:40,860 --> 00:28:44,620
So you know what happens
on those environments

611
00:28:44,620 --> 00:28:47,139
when the attackers, if they're
trying to run something

612
00:28:47,140 --> 00:28:48,500
on the environment.

613
00:28:48,500 --> 00:28:51,130
For me, protection standpoint,

614
00:28:51,130 --> 00:28:55,430
blocking macros for
internet downloaded files.

615
00:28:55,430 --> 00:28:58,210
That will be something I
would strongly recommend.

616
00:28:58,210 --> 00:29:00,690
App Data great place to store information,

617
00:29:00,690 --> 00:29:02,590
not a great place to execute programs.

618
00:29:02,590 --> 00:29:04,443
So again have this
ability to block programs

619
00:29:04,443 --> 00:29:05,673
from that location.

620
00:29:06,580 --> 00:29:09,350
Erroneous users executing scripts.

621
00:29:09,350 --> 00:29:11,560
So, assigning scripts to actually run

622
00:29:11,560 --> 00:29:15,270
in Notepad or text editor,
which would limit the exposure.

623
00:29:15,270 --> 00:29:16,510
I know we're down to our last minute.

624
00:29:16,510 --> 00:29:19,750
So I wanted to talk about the one big gap

625
00:29:19,750 --> 00:29:22,420
that we see on exposure, which is 2FA.

626
00:29:22,420 --> 00:29:24,110
Anything that's exposed to the internet,

627
00:29:24,110 --> 00:29:29,110
make sure you have 2FA on
that, VPN, Citrix or OWA 365.

628
00:29:29,650 --> 00:29:32,200
Attackers love this way to
get into the environment.

629
00:29:32,200 --> 00:29:36,400
Make sure you have visibility
on registering on 2FA.

630
00:29:36,400 --> 00:29:38,373
In any bypass for your OTPs.

631
00:29:40,040 --> 00:29:43,180
In this time, it is important
for the blue team to advise

632
00:29:43,180 --> 00:29:44,190
organizations to do this

633
00:29:44,190 --> 00:29:47,310
and we wanted to leave
you with this advice.

634
00:29:47,310 --> 00:29:49,700
Thank you so much for listening to us.

635
00:29:49,700 --> 00:29:53,280
If you have any questions, and
if we haven't answered them,

636
00:29:53,280 --> 00:29:54,432
reach out to us.

637
00:29:54,432 --> 00:29:57,060
We're fairly visible on LinkedIn.

638
00:29:57,060 --> 00:29:59,200
Vince, thank you very much.

639
00:29:59,200 --> 00:30:00,350
Anything you wanna add?

640
00:30:01,740 --> 00:30:04,030
- No, thanks, Steve and
thank you so much, everyone.

641
00:30:04,030 --> 00:30:04,863
Thank you.

