1
00:00:00,341 --> 00:00:02,924
(lively music)

2
00:00:06,370 --> 00:00:07,893
- Our next company,

3
00:00:09,050 --> 00:00:14,050
redefining zero-trust for
access to cloud infrastructure.

4
00:00:15,680 --> 00:00:18,903
Please welcome CEO of BastionZero,

5
00:00:20,160 --> 00:00:21,821
Sharon Goldberg.

6
00:00:21,821 --> 00:00:23,096
(lively music)

7
00:00:23,096 --> 00:00:26,480
(audience applauding)

8
00:00:26,480 --> 00:00:27,520
- [Host] Hi Sharon. Welcome.

9
00:00:27,520 --> 00:00:28,352
- [Sharon] Thank you.

10
00:00:28,353 --> 00:00:29,186
- [Host] Thank you so much for being here.

11
00:00:29,186 --> 00:00:31,360
- [Sharon] Thank you.

12
00:00:31,360 --> 00:00:34,763
- [Host] Sharon, your time begins now.

13
00:00:36,690 --> 00:00:38,580
- Your production cloud infrastructure

14
00:00:38,580 --> 00:00:41,269
is the crown jewel of your organization,

15
00:00:41,270 --> 00:00:43,390
but your engineers and
your build processes

16
00:00:43,390 --> 00:00:45,860
still need access to this infrastructure.

17
00:00:45,860 --> 00:00:47,710
And this creates a hole in your defenses

18
00:00:47,710 --> 00:00:50,470
that attackers increasingly
try to exploit.

19
00:00:50,470 --> 00:00:52,300
So how do we balance security

20
00:00:52,300 --> 00:00:55,763
against engineering productivity
and platform resilience?

21
00:00:56,732 --> 00:00:58,860
The traditional solution to this problem

22
00:00:58,860 --> 00:01:01,320
is to give users long-lived credentials.

23
00:01:01,320 --> 00:01:03,090
But long-lived credentials can be stolen

24
00:01:03,090 --> 00:01:05,860
like what happened to
Colonial Pipeline last year.

25
00:01:05,860 --> 00:01:08,720
And so we've been moving
to zero-trust architectures

26
00:01:08,720 --> 00:01:11,350
where users no longer hold
long-lived credentials,

27
00:01:11,350 --> 00:01:13,660
but instead are asked to
authenticate every time

28
00:01:13,660 --> 00:01:14,943
they log into a system.

29
00:01:16,050 --> 00:01:18,230
But do these architectures actually mean

30
00:01:18,230 --> 00:01:20,630
that we're trusting zero things?

31
00:01:20,630 --> 00:01:23,440
No. What we're actually doing
is putting all of our trust

32
00:01:23,440 --> 00:01:25,039
in the authentication system.

33
00:01:25,040 --> 00:01:27,850
And this creates a single
point of compromise.

34
00:01:27,850 --> 00:01:30,350
Architectures based on
single points of compromise

35
00:01:30,350 --> 00:01:32,929
have failed over and over again.

36
00:01:32,930 --> 00:01:34,770
These other industries have moved on.

37
00:01:34,770 --> 00:01:37,670
So why do we continue to
call systems zero-trust,

38
00:01:37,670 --> 00:01:40,363
when really they create a
single point of compromise?

39
00:01:41,570 --> 00:01:43,740
Here's what we're doing at BastionZero.

40
00:01:43,740 --> 00:01:46,259
We solve the problem using cryptography.

41
00:01:46,260 --> 00:01:48,810
We have multiple
independent roots of trust.

42
00:01:48,810 --> 00:01:51,170
One of them is the BastionZero
zero cloud service,

43
00:01:51,170 --> 00:01:53,463
and the other one is your SSO provider.

44
00:01:54,640 --> 00:01:55,850
Meanwhile, we make all of

45
00:01:55,850 --> 00:01:59,229
this advanced security architecture
invisible from the user.

46
00:01:59,230 --> 00:02:02,550
The user's access to a system
just involves a single sign on

47
00:02:02,550 --> 00:02:04,580
and a multifactor authentication.

48
00:02:04,580 --> 00:02:08,410
And for the admins perspective
we provide a cloud agnostic,

49
00:02:11,880 --> 00:02:15,091
lightweight SAS system that
auto discovers your targets

50
00:02:15,092 --> 00:02:19,130
and eliminates database
and server passwords.

51
00:02:19,130 --> 00:02:21,329
Meanwhile, by having two roots of trust,

52
00:02:21,330 --> 00:02:22,930
if one of them is compromised

53
00:02:22,930 --> 00:02:25,130
the other one is still
there to protect you.

54
00:02:26,367 --> 00:02:29,880
We are a team of experienced
cryptographers, engineers,

55
00:02:29,880 --> 00:02:31,510
and go to market leaders.

56
00:02:31,510 --> 00:02:33,600
Since 2013, my co-founder and I

57
00:02:33,600 --> 00:02:35,530
have been eliminating
single points of trust

58
00:02:35,530 --> 00:02:37,260
in multiple different contexts,

59
00:02:37,260 --> 00:02:40,560
ranging from internet routing to Bitcoin.

60
00:02:40,560 --> 00:02:43,160
We've built a product that's
solving a critical problem

61
00:02:43,160 --> 00:02:46,190
that affects any organization
that's managing servers,

62
00:02:46,190 --> 00:02:48,590
containers, clusters, and databases,

63
00:02:48,590 --> 00:02:50,350
and it's being used by organizations

64
00:02:50,350 --> 00:02:53,543
in health tech, fintech, and e-commerce.

65
00:02:54,680 --> 00:02:56,140
Our product is at the intersection

66
00:02:56,140 --> 00:02:58,929
of the Cloud Security,
DevOps productivity,

67
00:02:58,930 --> 00:03:01,630
PAM and VPN markets.

68
00:03:01,630 --> 00:03:03,460
It's time to stop losing sleep

69
00:03:03,460 --> 00:03:05,540
over your remote access systems.

70
00:03:05,540 --> 00:03:08,579
BastionZero is both more
secure and easier to manage

71
00:03:08,580 --> 00:03:10,580
than anything you can build yourself,

72
00:03:10,580 --> 00:03:12,730
and we are ready to
redefine the way you think

73
00:03:12,730 --> 00:03:16,273
about zero-trust for remote
access to cloud infrastructure.

74
00:03:20,130 --> 00:03:20,963
(Sharon laughs)

75
00:03:20,963 --> 00:03:21,796
(audience applauding)

76
00:03:21,796 --> 00:03:22,987
- I left some time.

77
00:03:22,987 --> 00:03:24,256
- [Host] Thank you. Yeah.

78
00:03:24,256 --> 00:03:25,089
- [Sharon] Thank you.

79
00:03:25,089 --> 00:03:26,647
- The 20 second power move at the end.

80
00:03:26,647 --> 00:03:27,480
- 20 second, yes.

81
00:03:27,480 --> 00:03:28,313
- I love it.

82
00:03:28,313 --> 00:03:29,283
- Yep.

83
00:03:29,283 --> 00:03:31,866
(lively music)

