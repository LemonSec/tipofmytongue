1
00:00:00,000 --> 00:00:02,750
- (upbeat music)

2
00:00:06,150 --> 00:00:07,120
- Okay,

3
00:00:07,120 --> 00:00:09,470
our final contestant,

4
00:00:09,470 --> 00:00:12,100
surviving intrusions

5
00:00:12,100 --> 00:00:14,730
in cloud native environments,

6
00:00:14,730 --> 00:00:16,820
please welcome co-founder

7
00:00:16,820 --> 00:00:18,340
and CEO

8
00:00:18,340 --> 00:00:20,836
of Araali Networks,

9
00:00:20,836 --> 00:00:22,482
Abhishek Singh.

10
00:00:23,966 --> 00:00:24,799
(upbeat music)

11
00:00:24,799 --> 00:00:27,049
(applause)

12
00:00:28,937 --> 00:00:32,476
Hey Abhishek, welcome.
Thanks for being here.

13
00:00:32,476 --> 00:00:33,946
All right.

14
00:00:33,947 --> 00:00:36,503
Abhishek, your time begins right now.

15
00:00:37,530 --> 00:00:39,600
- As security practitioners,

16
00:00:39,600 --> 00:00:42,460
headlines like these make us cringe.

17
00:00:42,460 --> 00:00:43,828
In spite of our best efforts

18
00:00:43,828 --> 00:00:46,163
we are unable to prevent damages.

19
00:00:47,870 --> 00:00:50,550
It is because one single mistake

20
00:00:50,550 --> 00:00:52,900
allows intruders to sneak in.

21
00:00:52,900 --> 00:00:55,300
The trick is to realize
that perfect posture

22
00:00:55,300 --> 00:00:56,293
is unattainable.

23
00:00:57,310 --> 00:01:01,623
It is essential to build
capabilities to survive intrusions.

24
00:01:02,550 --> 00:01:05,483
Dealing with cloud API is, is complex.

25
00:01:06,660 --> 00:01:09,100
As part of the shared
responsibility model,

26
00:01:09,100 --> 00:01:11,940
you're supposed to securely
program those APIs.

27
00:01:11,940 --> 00:01:13,880
If you're dealing with cloud resources,

28
00:01:13,880 --> 00:01:17,270
you have to go configure
IAM with least privileges.

29
00:01:17,270 --> 00:01:20,670
Kubernetes brings its own set of controls

30
00:01:20,670 --> 00:01:23,225
and whole new configuration paradigm.

31
00:01:23,225 --> 00:01:26,449
When you're dealing with
applications of virtual machines,

32
00:01:26,450 --> 00:01:28,330
you have to deal with legacy controls,

33
00:01:28,330 --> 00:01:30,880
like virtual firewalls
and security groups.

34
00:01:30,880 --> 00:01:32,619
Misconfiguration leads to

35
00:01:32,620 --> 00:01:36,060
over privilege that attackers
abuse to move around

36
00:01:36,060 --> 00:01:37,124
in your environment

37
00:01:37,124 --> 00:01:39,690
and cause material damage.

38
00:01:39,690 --> 00:01:41,698
Correlating logs from disparate sources

39
00:01:41,698 --> 00:01:45,562
and taking timely action
is equally complex.

40
00:01:46,490 --> 00:01:50,402
That is why we took a plug-in
based approach at Araali.

41
00:01:50,403 --> 00:01:54,420
We create normalized
identities for all services,

42
00:01:54,420 --> 00:01:56,090
regardless of where they're running,

43
00:01:56,090 --> 00:02:00,311
On virtual machines, in
Kubernetes, even behind APIs.

44
00:02:00,311 --> 00:02:02,460
We combine endpoint context

45
00:02:02,460 --> 00:02:04,660
with network activity to build a graph

46
00:02:04,660 --> 00:02:07,448
of how these services
interact with each other.

47
00:02:07,448 --> 00:02:09,389
You can allow good interactions

48
00:02:09,389 --> 00:02:11,313
and deny malicious ones.

49
00:02:12,700 --> 00:02:16,030
Assets protected by
Araali are unexploitable.

50
00:02:16,030 --> 00:02:17,460
Defending inside out,

51
00:02:17,460 --> 00:02:19,160
we don't talk to strangers,

52
00:02:19,160 --> 00:02:21,520
even if they have solemn credentials.

53
00:02:21,520 --> 00:02:23,240
We prevent both file based

54
00:02:23,240 --> 00:02:25,140
and file less malware from establishing

55
00:02:25,140 --> 00:02:27,010
back doors, or interacting with

56
00:02:27,010 --> 00:02:28,459
services in your environment.

57
00:02:29,810 --> 00:02:32,330
Denied by default is aspirational,

58
00:02:32,330 --> 00:02:34,540
the hard part is policy discovery,

59
00:02:34,540 --> 00:02:37,373
which we automate
continuously and consistently.

60
00:02:38,880 --> 00:02:41,210
New code comes in with
policies pre discovered

61
00:02:41,210 --> 00:02:43,940
in DEV and deployed alongside your apps.

62
00:02:43,940 --> 00:02:47,829
For existing code, we help you shield in a

63
00:02:47,830 --> 00:02:51,363
prioritized way by identifying
your highest risk assets.

64
00:02:52,260 --> 00:02:54,690
With Araali, customers are
taking their own control

65
00:02:54,690 --> 00:02:56,710
to the cloud, so they
can operate confidently

66
00:02:56,711 --> 00:02:59,133
with deep depth in their defense.

67
00:03:00,690 --> 00:03:03,730
Our founding team has industry
leading experience in areas

68
00:03:03,730 --> 00:03:06,340
like Zero Trust Micro
Segmentation, Wireless Security

69
00:03:06,340 --> 00:03:07,513
and Endpoint Security.

70
00:03:09,160 --> 00:03:10,272
With Araali in your arsenal,

71
00:03:10,272 --> 00:03:13,190
you are ready to defend
against the whole class

72
00:03:13,190 --> 00:03:15,743
of attacks that has been
in headlines recently.

73
00:03:19,600 --> 00:03:22,989
In summary, with consistent controls

74
00:03:22,990 --> 00:03:24,780
deployed in a DevOps friendly way,

75
00:03:24,780 --> 00:03:27,893
builds two resilience
for cloud operations.

76
00:03:29,191 --> 00:03:30,544
(applause)

77
00:03:30,544 --> 00:03:31,377
- Nice.

78
00:03:32,215 --> 00:03:33,048
Excellent

79
00:03:34,115 --> 00:03:36,698
(upbeat music)

