1
00:00:01,130 --> 00:00:04,760
- Welcome everybody to our RSA
Conference 2021 presentation.

2
00:00:04,760 --> 00:00:05,609
What's Old is New:

3
00:00:05,610 --> 00:00:08,770
Hybrid Security for Microsoft
Azure and On-Premises Tech.

4
00:00:08,770 --> 00:00:09,830
My name is Matthew McWhirt.

5
00:00:09,830 --> 00:00:11,490
I'm a director at Mandiant and FireEye

6
00:00:11,490 --> 00:00:13,740
in our security
transformation services team.

7
00:00:13,740 --> 00:00:15,210
With me is my colleague, Mike Burns.

8
00:00:15,210 --> 00:00:17,410
Mike, do you wanna say hello?

9
00:00:17,410 --> 00:00:18,280
- Yeah, thanks Matt.

10
00:00:18,280 --> 00:00:19,470
I'm a principal consultant

11
00:00:19,470 --> 00:00:22,960
on the security transformation
services team at Mandiant.

12
00:00:22,960 --> 00:00:23,793
- All right.

13
00:00:23,793 --> 00:00:24,625
So let's get started.

14
00:00:24,626 --> 00:00:25,940
We have a lot of content here

15
00:00:25,940 --> 00:00:27,820
and we certainly wanna dive right in.

16
00:00:27,820 --> 00:00:29,870
So why did we put this
presentation together?

17
00:00:29,870 --> 00:00:32,340
Attackers today are
following the data, right?

18
00:00:32,340 --> 00:00:34,260
And they're following
the availability of data

19
00:00:34,260 --> 00:00:37,800
and as many organizations
are moving to the cloud,

20
00:00:37,800 --> 00:00:40,269
they still have their
on-premises architecture.

21
00:00:40,270 --> 00:00:42,140
And sometimes we find
that it's a challenge

22
00:00:42,140 --> 00:00:44,150
for organizations to manage security

23
00:00:44,150 --> 00:00:47,489
and visibility for both their
on-premises Active Directory

24
00:00:47,490 --> 00:00:49,760
and their identities and
data that's resident.

25
00:00:49,760 --> 00:00:52,910
Maybe an Azure Active
Directory or Microsoft 365.

26
00:00:52,910 --> 00:00:55,471
So we put this presentation
together to highlight

27
00:00:55,472 --> 00:00:58,720
what are attackers doing
that still allow them

28
00:00:58,720 --> 00:01:02,430
to be successful in targeting
on-premises Active Directory,

29
00:01:02,430 --> 00:01:04,090
but also now, what are they doing

30
00:01:04,090 --> 00:01:06,250
for these hybrid environments
where organizations

31
00:01:06,250 --> 00:01:09,370
have a footprint still on
on-prem, but also in cloud.

32
00:01:09,370 --> 00:01:11,100
So we will spend some
times just looking through

33
00:01:11,100 --> 00:01:13,809
some of the common attack
techniques, but most importantly

34
00:01:13,810 --> 00:01:14,920
we will spend a lot of time

35
00:01:14,920 --> 00:01:16,580
looking at some of the common defenses

36
00:01:16,580 --> 00:01:18,390
that organizations can leverage

37
00:01:18,390 --> 00:01:20,470
to secure their hybrid identities.

38
00:01:20,470 --> 00:01:21,550
Throughout this presentation,

39
00:01:21,550 --> 00:01:22,560
we will be doing a compare

40
00:01:22,560 --> 00:01:24,987
and contrast with on-prem to cloud.

41
00:01:24,987 --> 00:01:27,369
And when we say cloud, we're
talking about Microsoft Azure

42
00:01:27,370 --> 00:01:29,120
and Azure Active Directory, but know

43
00:01:29,120 --> 00:01:32,170
most of the presentation is
weighted more on the cloud side

44
00:01:32,170 --> 00:01:33,860
because a lot of what we will talk about

45
00:01:33,860 --> 00:01:37,200
from the on-premises side
has already been discussed

46
00:01:37,200 --> 00:01:38,400
in many conferences.

47
00:01:38,400 --> 00:01:40,550
A lot of the material
here is more relevant

48
00:01:40,550 --> 00:01:43,009
to what can you do to secure
your cloud architectures?

49
00:01:43,010 --> 00:01:44,473
So before we dive in,

50
00:01:45,390 --> 00:01:47,800
if you have any questions
as we go through,

51
00:01:47,800 --> 00:01:48,810
please post in the chat.

52
00:01:48,810 --> 00:01:51,140
We are happy to address those
as we go through the content

53
00:01:51,140 --> 00:01:52,500
'cause we will be going kind of fast

54
00:01:52,500 --> 00:01:54,070
to get through all of our material.

55
00:01:54,070 --> 00:01:56,220
This is just some clarifying terminology.

56
00:01:56,220 --> 00:01:58,679
Some terms you will hear us use
throughout the presentation.

57
00:01:58,680 --> 00:02:00,610
So this slide just represents a comparison

58
00:02:00,610 --> 00:02:02,890
to what you what you
might be used to hearing

59
00:02:02,890 --> 00:02:04,230
from the on-prem world

60
00:02:04,230 --> 00:02:06,220
to what is the correlating term

61
00:02:06,220 --> 00:02:08,820
or definition in Azure Active Directory.

62
00:02:08,820 --> 00:02:11,799
So let's start and talk about
privileged accounts and roles.

63
00:02:11,800 --> 00:02:15,180
I'm gonna start really
focusing back to the old school

64
00:02:15,180 --> 00:02:16,930
on-prem Active Directory.

65
00:02:16,930 --> 00:02:18,560
This is still relevant today.

66
00:02:18,560 --> 00:02:21,170
The graphic here represents groups, right,

67
00:02:21,170 --> 00:02:22,929
that are highly privileged groups

68
00:02:22,930 --> 00:02:25,270
that exist in on-prem Active Directory

69
00:02:25,270 --> 00:02:27,440
that attackers will commonly target

70
00:02:27,440 --> 00:02:28,650
when they're doing reconnaissance.

71
00:02:28,650 --> 00:02:30,550
These are the groups
that house the accounts

72
00:02:30,550 --> 00:02:32,560
that pretty much had
the keys to the kingdom.

73
00:02:32,560 --> 00:02:34,740
Some challenges that we
find with organizations

74
00:02:34,740 --> 00:02:37,600
that they only focus on those
kind of in the top portion

75
00:02:37,600 --> 00:02:39,510
of this graphic enterprise admins,

76
00:02:39,510 --> 00:02:41,140
through you know, your schema admins

77
00:02:41,140 --> 00:02:43,859
and accounts that have
the ability to access

78
00:02:43,860 --> 00:02:44,950
the main controllers.

79
00:02:44,950 --> 00:02:47,470
The takeaway here is there
are other privileged groups

80
00:02:47,470 --> 00:02:49,010
that are buried within Active Directory

81
00:02:49,010 --> 00:02:50,753
that attackers will also target

82
00:02:50,753 --> 00:02:53,269
when they have access to on-prem.

83
00:02:53,270 --> 00:02:55,850
What are some other interesting
privileges that we see?

84
00:02:55,850 --> 00:02:57,239
So this example right here,

85
00:02:57,240 --> 00:03:00,130
we see an account that has
been delegated permissions

86
00:03:00,130 --> 00:03:03,790
at the root of the domain for
replicating directory changes

87
00:03:03,790 --> 00:03:05,250
and changes all.

88
00:03:05,250 --> 00:03:07,330
The attacker if they were able
to compromise this account

89
00:03:07,330 --> 00:03:09,236
could do a directory sync, a DC sync,

90
00:03:09,236 --> 00:03:11,670
maybe sync the entire
Active Directory database

91
00:03:11,670 --> 00:03:14,640
and then use that for further
compromise of accounts

92
00:03:14,640 --> 00:03:15,472
and lateral movement.

93
00:03:15,473 --> 00:03:16,306
Pivoting.

94
00:03:16,306 --> 00:03:17,160
We also see accounts

95
00:03:17,160 --> 00:03:19,340
that have been delegated
specific permissions, right?

96
00:03:19,340 --> 00:03:22,810
This is an example of account
via user rights assignment

97
00:03:22,810 --> 00:03:24,740
that actually has the
ability to run as system

98
00:03:24,740 --> 00:03:25,960
on a domain controller.

99
00:03:25,960 --> 00:03:29,600
This account may not be in the
domain admins group per se,

100
00:03:29,600 --> 00:03:31,370
but this account in and of itself

101
00:03:31,370 --> 00:03:33,487
based upon these permissions
is highly, highly powerful

102
00:03:33,487 --> 00:03:34,320
and privileged

103
00:03:34,320 --> 00:03:36,700
and one that could be
overlooked by organizations.

104
00:03:36,700 --> 00:03:38,694
We also have an example of here.

105
00:03:38,694 --> 00:03:40,450
This is an example that we found

106
00:03:40,450 --> 00:03:42,510
as part of an Active
Directory security assessment,

107
00:03:42,510 --> 00:03:44,750
where every user and a domain

108
00:03:44,750 --> 00:03:46,540
have the ability to modify permissions

109
00:03:46,540 --> 00:03:48,690
for this (indistinct)
warning security group.

110
00:03:48,690 --> 00:03:51,400
And if this was a highly
privileged group, once again,

111
00:03:51,400 --> 00:03:54,000
this is a quick way for
attackers to further compromise.

112
00:03:54,000 --> 00:03:55,690
This is probably one of my favorites now.

113
00:03:55,690 --> 00:03:57,190
Is looking at accounts and groups

114
00:03:57,190 --> 00:03:58,560
that have the ability to edit

115
00:03:58,560 --> 00:04:00,850
and modify existing group policies.

116
00:04:00,850 --> 00:04:02,820
This is what we see
ransomware attackers do

117
00:04:02,820 --> 00:04:05,440
on a very frequent basis
to push out encrypters

118
00:04:05,440 --> 00:04:08,660
and to really create havoc
to a large scale of endpoints

119
00:04:08,660 --> 00:04:09,500
within an environment.

120
00:04:09,500 --> 00:04:11,400
So these are all kind of
interesting permissions

121
00:04:11,400 --> 00:04:15,380
that are sometimes buried
within on-prem Active Directory.

122
00:04:15,380 --> 00:04:16,680
So now let's take a look at it

123
00:04:16,680 --> 00:04:18,470
from the Azure Active Directory side.

124
00:04:18,470 --> 00:04:20,180
Out of the box, Azure Active Directory,

125
00:04:20,180 --> 00:04:23,800
you have 60 built-in
privilege rules in Azure AD.

126
00:04:23,800 --> 00:04:26,130
Not all of these are
highly, highly privileged

127
00:04:26,130 --> 00:04:27,120
but we will kind of highlight

128
00:04:27,120 --> 00:04:29,880
some of the more interesting
ones from our perspective.

129
00:04:29,880 --> 00:04:31,080
What is very important though

130
00:04:31,080 --> 00:04:32,520
for organizations to understand

131
00:04:32,520 --> 00:04:34,620
is when they have Azure Active Directory,

132
00:04:34,620 --> 00:04:37,810
they might also have
infrastructure in Azure

133
00:04:37,810 --> 00:04:40,000
which is referred to as Azure resources.

134
00:04:40,000 --> 00:04:41,820
So this could be virtual machines,

135
00:04:41,820 --> 00:04:45,770
storage accounts, web
applications, things like that.

136
00:04:45,770 --> 00:04:48,370
There are separate rules which
actually provide the ability

137
00:04:48,370 --> 00:04:51,640
to manage and to provide
administrative permissions

138
00:04:51,640 --> 00:04:52,729
for resources.

139
00:04:52,730 --> 00:04:54,750
These are about 70 roles by default.

140
00:04:54,750 --> 00:04:56,690
You can also create custom roles.

141
00:04:56,690 --> 00:05:00,270
But really I wanna highlight
here is that Azure AD roles

142
00:05:00,270 --> 00:05:04,520
and Azure RBAC role-based access
control roles are different

143
00:05:04,520 --> 00:05:05,700
and they do different things.

144
00:05:05,700 --> 00:05:06,570
And we'll kind of highlight that

145
00:05:06,570 --> 00:05:08,300
as we go through the presentation.

146
00:05:08,300 --> 00:05:09,290
Also of importance.

147
00:05:09,290 --> 00:05:12,080
If you're used to logging
into the Azure portal, right,

148
00:05:12,080 --> 00:05:13,500
to look at all of the different roles

149
00:05:13,500 --> 00:05:15,870
and accounts that are
assigned various roles,

150
00:05:15,870 --> 00:05:17,840
not all of them are visible in the portal.

151
00:05:17,840 --> 00:05:19,919
So this directory
synchronization account role

152
00:05:19,920 --> 00:05:21,490
is highly, highly privileged.

153
00:05:21,490 --> 00:05:24,180
This is a role that I'm one
of the connector accounts

154
00:05:24,180 --> 00:05:27,980
when you create a bind
between on-prem to Azure ID

155
00:05:27,980 --> 00:05:29,560
gets assigned this role, right?

156
00:05:29,560 --> 00:05:31,060
So if you're looking in the Azure portal,

157
00:05:31,060 --> 00:05:33,080
you might not see accounts
assigned this role,

158
00:05:33,080 --> 00:05:35,490
but, you know, lo and behold,
with the PowerShell command

159
00:05:35,490 --> 00:05:37,130
that we have in the
bottom right corner there,

160
00:05:37,130 --> 00:05:39,580
you can actually enumerate
and get more clarity

161
00:05:39,580 --> 00:05:41,609
over accounts that are
assigned hidden roles,

162
00:05:41,610 --> 00:05:42,990
because you can still actually use them

163
00:05:42,990 --> 00:05:44,390
as even though they are hidden.

164
00:05:44,390 --> 00:05:47,680
What's also of important
here is modify, I'm sorry,

165
00:05:47,680 --> 00:05:50,130
monitoring and having good visibility

166
00:05:50,130 --> 00:05:52,690
when accounts are assigned roles.

167
00:05:52,690 --> 00:05:56,530
Even roles that may be hidden
within the classic portal.

168
00:05:56,530 --> 00:05:58,789
So this slide is kind of a
parallel to what we talked about

169
00:05:58,790 --> 00:06:01,030
from on-prem Active Directory.

170
00:06:01,030 --> 00:06:03,559
This shows from the Azure
Active Directory side,

171
00:06:03,560 --> 00:06:04,460
what do we consider

172
00:06:04,460 --> 00:06:07,710
to be those very, very highly
powerful privileged roles?

173
00:06:07,710 --> 00:06:09,650
And Mike will also talk about
these a little bit further

174
00:06:09,650 --> 00:06:11,349
in the presentation.

175
00:06:11,350 --> 00:06:12,875
The ones at the top here have,

176
00:06:12,875 --> 00:06:15,980
are those roles that have
password reset permissions

177
00:06:15,980 --> 00:06:17,615
for various accounts and attendants

178
00:06:17,615 --> 00:06:21,490
and the roles at the bottom
have specific permissions

179
00:06:21,490 --> 00:06:24,040
if you will, of interest
that we highlighted there.

180
00:06:24,890 --> 00:06:27,310
Also, what is important
that a lot of organizations

181
00:06:27,310 --> 00:06:28,800
have not yet started to do

182
00:06:28,800 --> 00:06:31,720
when they move to Azure Active
Directory is monitoring.

183
00:06:31,720 --> 00:06:34,040
Organizations have gotten
really good at monitoring

184
00:06:34,040 --> 00:06:36,000
on-prem AD for, you
know, if someone's added

185
00:06:36,000 --> 00:06:38,850
to a domain admin group
or a group of interests

186
00:06:38,850 --> 00:06:41,280
but not all, you know,
it's not common though

187
00:06:41,280 --> 00:06:43,429
that organizations are now
doing this in Azure AD.

188
00:06:43,430 --> 00:06:46,330
So it's very important for
organizations to start monitoring

189
00:06:46,330 --> 00:06:48,380
some of these very, very
privileged and interesting roles

190
00:06:48,380 --> 00:06:51,440
in Azure ID when a user is
added or removed from that.

191
00:06:51,440 --> 00:06:54,790
So now we gonna talk about
the different set of roles

192
00:06:54,790 --> 00:06:55,623
in Azure.

193
00:06:55,623 --> 00:06:57,469
These are the RBAC roles on resources.

194
00:06:57,470 --> 00:07:00,040
So remember a resource
could be a virtual machine.

195
00:07:00,040 --> 00:07:01,490
It could be a storage account.

196
00:07:01,490 --> 00:07:02,690
It could be a web application,

197
00:07:02,690 --> 00:07:05,410
a database that resides
in an Azure tenant.

198
00:07:05,410 --> 00:07:07,550
We always get questions from clients

199
00:07:07,550 --> 00:07:09,030
about they're often confused

200
00:07:09,030 --> 00:07:10,809
about what is Azure RBAC mean?

201
00:07:10,810 --> 00:07:11,980
You know, if I assigned somebody

202
00:07:11,980 --> 00:07:14,370
one of these bolts and
roles in Azure, you know,

203
00:07:14,370 --> 00:07:16,920
what kind of permissions
is that account assigned?

204
00:07:16,920 --> 00:07:19,620
So we have a formula here
that kind of breaks that down

205
00:07:19,620 --> 00:07:20,500
and clarifies that.

206
00:07:20,500 --> 00:07:23,450
So the first part of this
is related to the scope.

207
00:07:23,450 --> 00:07:24,283
The scope can,

208
00:07:24,283 --> 00:07:27,630
you could assign a permission at the root

209
00:07:27,630 --> 00:07:32,260
for a specific subscription
or for a specific resource.

210
00:07:32,260 --> 00:07:33,340
The next part of the equation

211
00:07:33,340 --> 00:07:35,460
is who am I sending the permission to?

212
00:07:35,460 --> 00:07:37,159
Is it a specific user?

213
00:07:37,160 --> 00:07:39,500
Maybe it's a group, maybe
it's a service principle

214
00:07:39,500 --> 00:07:40,610
or maybe it's an application.

215
00:07:40,610 --> 00:07:42,570
And we will talk about
those a little bit later.

216
00:07:42,570 --> 00:07:45,087
And then third is, what
kind of permissions

217
00:07:45,087 --> 00:07:45,930
are we assigning?

218
00:07:45,930 --> 00:07:48,860
Are we giving them full
contributor, reader, owner?

219
00:07:48,860 --> 00:07:51,270
And they can pretty much have full control

220
00:07:51,270 --> 00:07:54,810
over that resource or is it
just a read-only type role?

221
00:07:54,810 --> 00:07:56,360
So once you kind of understand that,

222
00:07:56,360 --> 00:07:58,110
you can kind of start to get some clarity

223
00:07:58,110 --> 00:07:59,900
about what are all these RBAC permissions

224
00:07:59,900 --> 00:08:01,489
and roles actually doing.

225
00:08:01,490 --> 00:08:02,650
What's also of important.

226
00:08:02,650 --> 00:08:05,270
This is why this is in the
interesting privileges slide,

227
00:08:05,270 --> 00:08:08,780
is sometimes organizations
don't quite monitor or know

228
00:08:08,780 --> 00:08:11,229
the scope of accounts that
have elevated permissions

229
00:08:11,230 --> 00:08:13,803
or some sort of role assigned at the root

230
00:08:13,803 --> 00:08:17,360
or for a specific subscription
within their Azure tenant.

231
00:08:17,360 --> 00:08:19,680
So this shows an example of
how you can actually download

232
00:08:19,680 --> 00:08:22,010
these role assignments
and get some more clarity

233
00:08:22,010 --> 00:08:24,490
over where all these
RBAC permissions assigned

234
00:08:24,490 --> 00:08:25,410
because they can be assigned

235
00:08:25,410 --> 00:08:27,267
in a multitude of places in Azure.

236
00:08:27,267 --> 00:08:29,750
And this often creates
confusion for organizations

237
00:08:29,750 --> 00:08:32,940
just trying to get some clarity here.

238
00:08:32,940 --> 00:08:34,770
There's also custom
roles, which you can do

239
00:08:34,770 --> 00:08:36,850
in RBAC to add even more confusion here.

240
00:08:36,850 --> 00:08:39,080
You know, I think one of the things

241
00:08:39,080 --> 00:08:39,970
that we wanna highlight here

242
00:08:39,970 --> 00:08:42,159
is when organizations create custom roles,

243
00:08:42,159 --> 00:08:43,150
just like in on-prem,

244
00:08:43,150 --> 00:08:44,699
when they create custom security groups

245
00:08:44,700 --> 00:08:46,020
and delegates,

246
00:08:46,020 --> 00:08:49,069
they wanna have a good
process documentation

247
00:08:49,070 --> 00:08:50,210
and a good methodology

248
00:08:50,210 --> 00:08:52,338
around why do we create this custom role?

249
00:08:52,338 --> 00:08:54,530
Where are we assigning permissions?

250
00:08:54,530 --> 00:08:55,750
Is it for a resource?

251
00:08:55,750 --> 00:08:59,120
Is it for a higher level
root, or a subscription?

252
00:08:59,120 --> 00:09:02,363
And then who is assigned
permissions for this custom role?

253
00:09:03,860 --> 00:09:06,300
The other example here in this
slide is a PowerShell command

254
00:09:06,300 --> 00:09:07,750
which you can use to get more clarity

255
00:09:07,750 --> 00:09:09,100
and to kind of bring things all together

256
00:09:09,100 --> 00:09:10,600
without having to go to different places

257
00:09:10,600 --> 00:09:12,900
in the Azure portal to
figure all of this out.

258
00:09:13,810 --> 00:09:15,619
So now let's transition
and talk about, you know,

259
00:09:15,620 --> 00:09:17,640
what are attackers doing from their recon

260
00:09:17,640 --> 00:09:20,170
and privilege escalation perspective

261
00:09:20,170 --> 00:09:23,270
from both on-prem and in
Azure Active Directory?

262
00:09:23,270 --> 00:09:24,850
So not gonna spend a
whole lot of time here

263
00:09:24,850 --> 00:09:26,330
but as I mentioned, if you have questions,

264
00:09:26,330 --> 00:09:28,800
please post in the chat,
we're happy to clarify these,

265
00:09:28,800 --> 00:09:30,680
or any questions that you have.

266
00:09:30,680 --> 00:09:32,079
But this is a classic model that we see

267
00:09:32,080 --> 00:09:33,460
with ransomware cases.

268
00:09:33,460 --> 00:09:34,420
Unfortunately at Mandiant

269
00:09:34,420 --> 00:09:36,740
we support many, many
ransomware cases every week

270
00:09:36,740 --> 00:09:37,690
with clients.

271
00:09:37,690 --> 00:09:40,190
And this is kind of
the path that attackers

272
00:09:40,190 --> 00:09:42,800
kind of follow when they
gain initial access.

273
00:09:42,800 --> 00:09:44,300
Maybe it's through a phishing email,

274
00:09:44,300 --> 00:09:46,729
they're gonna do some sort
of recon to understand

275
00:09:46,730 --> 00:09:47,900
where they are in the environment

276
00:09:47,900 --> 00:09:49,390
and where do they wanna go next, right?

277
00:09:49,390 --> 00:09:50,730
So they might use open-source tools

278
00:09:50,730 --> 00:09:52,132
such as BloodHound.

279
00:09:52,132 --> 00:09:54,170
This might run some PowerShell commands

280
00:09:54,170 --> 00:09:56,240
or just invoke some old school commands

281
00:09:56,240 --> 00:09:58,430
from a command prompt to figure things out

282
00:09:58,430 --> 00:10:00,790
and then determine where
they need to go next.

283
00:10:00,790 --> 00:10:03,689
Then they will oftentimes
invoke Kerberoasting,

284
00:10:03,690 --> 00:10:05,330
which is targeting non-computer accounts

285
00:10:05,330 --> 00:10:06,700
with a service principal name.

286
00:10:06,700 --> 00:10:09,300
And with those accounts
you could get a ticket.

287
00:10:09,300 --> 00:10:11,740
With that ticket an attacker
may be able to brute force

288
00:10:11,740 --> 00:10:12,967
a password for a privileged account

289
00:10:12,967 --> 00:10:14,970
and use that for further escalation.

290
00:10:14,970 --> 00:10:16,360
Then there's of course lateral movement

291
00:10:16,360 --> 00:10:19,000
using the classic built-in
windows default pathways

292
00:10:19,000 --> 00:10:21,030
that are always there, always exist

293
00:10:21,030 --> 00:10:23,939
and we have some examples
here on the slide.

294
00:10:23,940 --> 00:10:25,207
Oftentimes we get asked by clients,

295
00:10:25,207 --> 00:10:27,439
"How did you know the attacker
get the clear text password

296
00:10:27,440 --> 00:10:28,273
for this account?

297
00:10:28,273 --> 00:10:29,500
We had a very long password.

298
00:10:29,500 --> 00:10:30,570
How did they get it?"

299
00:10:30,570 --> 00:10:32,170
The three common ways we see.

300
00:10:32,170 --> 00:10:36,959
The first graphic here on the
left is credential manager

301
00:10:36,960 --> 00:10:39,310
being enabled on a windows
10 or above end point

302
00:10:39,310 --> 00:10:40,560
that allows you to get credentials

303
00:10:40,560 --> 00:10:41,489
if that's not turned off.

304
00:10:41,490 --> 00:10:43,090
You can turn that off
through a group policy.

305
00:10:43,090 --> 00:10:45,060
So we always recommend clients to do that.

306
00:10:45,060 --> 00:10:49,089
The second there in the middle
is WDigest authentication,

307
00:10:49,090 --> 00:10:50,770
which while it's disabled by default

308
00:10:50,770 --> 00:10:54,480
we oftentimes see attackers
will re-enable WDigest.

309
00:10:54,480 --> 00:10:56,380
And with that, they don't
need to reboot an end point.

310
00:10:56,380 --> 00:10:58,950
They just need to wait for
more accounts to authenticate

311
00:10:58,950 --> 00:11:01,080
then they get the clear
text password in memory.

312
00:11:01,080 --> 00:11:02,580
The third is an interesting one.

313
00:11:02,580 --> 00:11:05,030
It's related to Kerberos authentication.

314
00:11:05,030 --> 00:11:07,680
So if you're on a windows
domain join end points,

315
00:11:07,680 --> 00:11:10,829
you log in and the domain
controller is not available.

316
00:11:10,830 --> 00:11:12,950
They can't be contacted at the time.

317
00:11:12,950 --> 00:11:15,830
Kerberos will store the password
and clear text and memory

318
00:11:15,830 --> 00:11:17,640
until the domain controller
can be contacted.

319
00:11:17,640 --> 00:11:20,130
So if we think about
times in COVID, right,

320
00:11:20,130 --> 00:11:21,510
when users are working remotely,

321
00:11:21,510 --> 00:11:24,430
they might be logging
into their laptop at home.

322
00:11:24,430 --> 00:11:25,680
They've not connected to the VPN.

323
00:11:25,680 --> 00:11:27,930
This is a low-hanging fruit
that attackers could use

324
00:11:27,930 --> 00:11:30,109
if they have access to an end point.

325
00:11:30,110 --> 00:11:32,800
So what does this look like
from the Microsoft Azure side?

326
00:11:32,800 --> 00:11:34,740
You don't necessarily need
to have valid credentials

327
00:11:34,740 --> 00:11:36,712
just to get some interesting information

328
00:11:36,712 --> 00:11:40,189
about an Azure tenant and the
configurations that exist.

329
00:11:40,190 --> 00:11:43,020
So this slide just shows some various ways

330
00:11:43,020 --> 00:11:45,677
using some of the APIs and URLs.

331
00:11:45,677 --> 00:11:47,730
All you need to do is just
have the right domain name,

332
00:11:47,730 --> 00:11:49,760
registered domain name, and
you might be able to get

333
00:11:49,760 --> 00:11:52,610
like the tenant ID, which
we have highlighted in red

334
00:11:52,610 --> 00:11:54,020
in that first example.

335
00:11:54,020 --> 00:11:55,360
Think more interesting though,

336
00:11:55,360 --> 00:11:58,050
you can actually determine
what type of authentication

337
00:11:58,050 --> 00:11:59,069
is this tenant using?

338
00:11:59,070 --> 00:12:02,300
Are they using ADFS, Active
Directory Federation Service?

339
00:12:02,300 --> 00:12:06,130
So we see an example of that
in the bottom left portion

340
00:12:06,130 --> 00:12:08,570
of that graphic and on
the right, we see a tenant

341
00:12:08,570 --> 00:12:11,460
that was configured for this
local Azure Active Directory.

342
00:12:11,460 --> 00:12:14,120
It could also be indicative of
password hash synchronization

343
00:12:14,120 --> 00:12:15,040
being configured.

344
00:12:15,040 --> 00:12:16,660
So you can just get some
interesting information

345
00:12:16,660 --> 00:12:20,480
and just from some of the
URLs that are available.

346
00:12:20,480 --> 00:12:22,140
This slide really represents

347
00:12:22,140 --> 00:12:23,680
that there's a lot of tools out there.

348
00:12:23,680 --> 00:12:26,050
There's even more so than we have listed

349
00:12:26,050 --> 00:12:27,479
since we put the slide together.

350
00:12:27,480 --> 00:12:30,100
Just a lot of ways to
kind of automate recon

351
00:12:30,100 --> 00:12:31,430
with Azure Active Directory

352
00:12:31,430 --> 00:12:34,439
and Azure easing either
an unauthenticated method

353
00:12:34,440 --> 00:12:35,850
or if you have valid credentials

354
00:12:35,850 --> 00:12:37,350
obviously that's even better, right?

355
00:12:37,350 --> 00:12:40,650
'Cause you can get more data,
more contextual information.

356
00:12:40,650 --> 00:12:42,970
So say that I do have valid credentials

357
00:12:42,970 --> 00:12:45,810
and I'm able to log, maybe
I got these from on-prem

358
00:12:45,810 --> 00:12:47,380
and maybe the environment does not require

359
00:12:47,380 --> 00:12:49,110
multifactor authentication.

360
00:12:49,110 --> 00:12:50,970
If I have a valid username and password,

361
00:12:50,970 --> 00:12:52,360
I can log into the portal.

362
00:12:52,360 --> 00:12:54,730
And even though this might
not be a privileged account

363
00:12:54,730 --> 00:12:57,230
which this example shows that.

364
00:12:57,230 --> 00:12:58,980
I logged in with a non-privileged account.

365
00:12:58,980 --> 00:13:00,380
I can still enumerate users.

366
00:13:00,380 --> 00:13:01,620
I can see resources.

367
00:13:01,620 --> 00:13:03,090
I can get some great information

368
00:13:03,090 --> 00:13:05,090
about a tenant for further targeting.

369
00:13:05,090 --> 00:13:07,290
Now, the good news is you
can actually turn this off.

370
00:13:07,290 --> 00:13:09,490
So there is a feature where
we recommend to clients

371
00:13:09,490 --> 00:13:11,660
all the time that you turn
off the restrict access

372
00:13:11,660 --> 00:13:13,380
to Azure AD portal.

373
00:13:13,380 --> 00:13:14,670
Change that from a yes to a no

374
00:13:14,670 --> 00:13:17,270
and you kind of see where it
says you do not have access.

375
00:13:17,270 --> 00:13:18,980
That's a great way to stop an attacker

376
00:13:18,980 --> 00:13:21,370
that's used to the graphical interface.

377
00:13:21,370 --> 00:13:22,960
Those that are gonna
use PowerShell though,

378
00:13:22,960 --> 00:13:23,890
even if you turn that off,

379
00:13:23,890 --> 00:13:26,330
it doesn't take away their
ability to still query

380
00:13:26,330 --> 00:13:27,830
some general contextual information

381
00:13:27,830 --> 00:13:28,760
about an environment.

382
00:13:28,760 --> 00:13:30,720
Just as you can with on-prem
Active Directory, right?

383
00:13:30,720 --> 00:13:31,553
This is no different.

384
00:13:31,553 --> 00:13:33,990
It's this read only access if you will.

385
00:13:33,990 --> 00:13:36,750
So how do attackers then pivot

386
00:13:36,750 --> 00:13:39,730
from on-prem to Azure
AD to really, you know,

387
00:13:39,730 --> 00:13:42,760
compromise an Azure
Active Directory tenant?

388
00:13:42,760 --> 00:13:45,580
This is what we at Mandiant
refer to as vertical movement.

389
00:13:45,580 --> 00:13:47,927
So this is an example of a
conditional access policy

390
00:13:47,927 --> 00:13:50,590
you see there on the right
where MFA is required

391
00:13:50,590 --> 00:13:54,290
all the time for all accounts,
except when initiated,

392
00:13:54,290 --> 00:13:57,930
except when the authentication
is sourced from a trusted IP.

393
00:13:57,930 --> 00:14:00,810
This could be a public IP block
assigned to an organization,

394
00:14:00,810 --> 00:14:03,900
or as part of like their VPN
pool or something like that.

395
00:14:03,900 --> 00:14:05,810
So once again, this is a common way

396
00:14:05,810 --> 00:14:09,609
we see attackers that get
valid, privileged credentials

397
00:14:09,610 --> 00:14:11,750
on prem, maybe via phishing or other means

398
00:14:11,750 --> 00:14:14,230
then they then use those
credentials to pivot up

399
00:14:14,230 --> 00:14:15,820
into Azure Active Directory.

400
00:14:15,820 --> 00:14:17,390
Mike will talk about this in more detail

401
00:14:17,390 --> 00:14:19,610
from some of the best
practices, but we all, you know,

402
00:14:19,610 --> 00:14:21,330
we are constantly recommending to clients

403
00:14:21,330 --> 00:14:24,250
if an account is on, is
privileged on-premise

404
00:14:24,250 --> 00:14:26,570
it should not hold privileges in Azure.

405
00:14:26,570 --> 00:14:28,430
There should be separate
cloud-only accounts

406
00:14:28,430 --> 00:14:29,660
that have those permissions.

407
00:14:29,660 --> 00:14:31,959
And for accounts that have
some of those privileged roles

408
00:14:31,960 --> 00:14:33,390
that we just showed earlier,

409
00:14:33,390 --> 00:14:35,100
they require MFA all the time

410
00:14:35,100 --> 00:14:38,090
regardless of where they're
being used to authenticate from.

411
00:14:38,090 --> 00:14:40,568
This example is the perfect storm, right?

412
00:14:40,568 --> 00:14:42,020
That's kind of our theme here.

413
00:14:42,020 --> 00:14:43,745
Is the perfect storm of
bringing everything together.

414
00:14:43,745 --> 00:14:46,884
Remember earlier I said,
Azure Active Directory roles

415
00:14:46,884 --> 00:14:49,270
and Azure RBAC roles are separate, right?

416
00:14:49,270 --> 00:14:51,880
They provide permissions
for separate components.

417
00:14:51,880 --> 00:14:53,210
Well, here is the perfect storm

418
00:14:53,210 --> 00:14:55,377
of if you are a global administrator

419
00:14:55,377 --> 00:14:57,640
and that option that you see there

420
00:14:57,640 --> 00:15:00,005
in the bottom left corner is set to yes,

421
00:15:00,005 --> 00:15:03,140
you can then assume the role
of user access administrator

422
00:15:03,140 --> 00:15:05,110
and Azure RBAC, right?

423
00:15:05,110 --> 00:15:08,510
So with that, I then have the
capability to delegate access

424
00:15:08,510 --> 00:15:10,180
to specific resources.

425
00:15:10,180 --> 00:15:12,209
Sean Metcalf wrote a great blog about this

426
00:15:12,210 --> 00:15:13,043
about a year ago.

427
00:15:13,043 --> 00:15:15,039
I highly recommend you
go to adsecurity.org

428
00:15:15,039 --> 00:15:17,310
and we have a link in our reference slide.

429
00:15:17,310 --> 00:15:19,400
I'm about this specific attack path.

430
00:15:19,400 --> 00:15:21,310
But with this, you can
actually assign yourself.

431
00:15:21,311 --> 00:15:24,100
Say that an organization has
a VM running in the cloud

432
00:15:24,100 --> 00:15:25,430
that's a domain controller.

433
00:15:25,430 --> 00:15:27,599
With this user access administrator role,

434
00:15:27,600 --> 00:15:30,420
I can then start with a
global admin and Azure AD,

435
00:15:30,420 --> 00:15:32,130
move to a VM resource,

436
00:15:32,130 --> 00:15:34,000
and I could potentially
log into that resource,

437
00:15:34,000 --> 00:15:36,940
dump credentials and then go
from cloud to on-prem, right?

438
00:15:36,940 --> 00:15:37,800
Vertical movement.

439
00:15:37,800 --> 00:15:41,030
So this is something that
organizations need to be aware of

440
00:15:41,030 --> 00:15:43,500
and really understand
these roles and permissions

441
00:15:43,500 --> 00:15:45,450
that are assigned to accounts.

442
00:15:45,450 --> 00:15:48,247
The last portion here that
I really wanna highlight

443
00:15:48,247 --> 00:15:51,180
and this is something that we
saw come to fruition last year

444
00:15:51,180 --> 00:15:54,099
as application objects
and service principles

445
00:15:54,100 --> 00:15:55,620
and Azure Active Directory.

446
00:15:55,620 --> 00:15:58,550
So you can see various applications
that might be registered

447
00:15:58,550 --> 00:16:01,199
in a local tenant, either
through the UI or PowerShell.

448
00:16:01,200 --> 00:16:03,150
Applications could be some custom apps

449
00:16:03,150 --> 00:16:04,400
that an organization has

450
00:16:04,400 --> 00:16:07,000
or there could be some third
party app that's now integrated

451
00:16:07,000 --> 00:16:09,810
that they actually install
directly into a tenant.

452
00:16:09,810 --> 00:16:11,739
Those are actually
represented as an object

453
00:16:11,740 --> 00:16:13,290
in Azure Active Directory.

454
00:16:13,290 --> 00:16:15,770
What's interesting though, is
for an application to work,

455
00:16:15,770 --> 00:16:17,949
in order for users in your
Azure Active Directory

456
00:16:17,950 --> 00:16:20,587
to be able to authenticate
and use that application,

457
00:16:20,587 --> 00:16:22,640
the service principle has to be linked.

458
00:16:22,640 --> 00:16:24,740
If you look at service
principles that exist

459
00:16:24,740 --> 00:16:26,230
in Azure Active Directory,

460
00:16:26,230 --> 00:16:27,730
you are gonna see a lot of them,

461
00:16:27,730 --> 00:16:31,050
especially if you're using Microsoft 365.

462
00:16:31,050 --> 00:16:33,530
'Cause Microsoft 365
if you're using Teams,

463
00:16:33,530 --> 00:16:35,079
Exchange Online, SharePoint,

464
00:16:35,080 --> 00:16:38,217
the actual apps are
actually hosted by Microsoft

465
00:16:38,217 --> 00:16:39,720
and their tenant, if you will,

466
00:16:39,720 --> 00:16:42,800
but each tenant that that
an organization manages

467
00:16:42,800 --> 00:16:44,910
will have service principles associated,

468
00:16:44,910 --> 00:16:48,030
Service principles are that
glue that binds an application

469
00:16:48,030 --> 00:16:50,370
to Azure AD for authentication.

470
00:16:50,370 --> 00:16:52,590
The thing to be aware of
with service principles

471
00:16:52,590 --> 00:16:54,370
is they can also be used by attackers.

472
00:16:54,370 --> 00:16:56,180
Service principles or applications

473
00:16:56,180 --> 00:16:58,370
could be assigned specific permissions.

474
00:16:58,370 --> 00:17:00,790
Maybe an application has
permission to read all email,

475
00:17:00,790 --> 00:17:03,199
or to read all file files and SharePoint

476
00:17:03,200 --> 00:17:05,390
and service principles and applications

477
00:17:05,390 --> 00:17:07,890
can also have keen materials associated.

478
00:17:07,890 --> 00:17:08,980
When I say keen materials

479
00:17:08,980 --> 00:17:12,069
I'm talking about a
password or a certificate.

480
00:17:12,069 --> 00:17:13,909
So the perfect storm kind of came together

481
00:17:13,910 --> 00:17:15,670
at the end of 2020.

482
00:17:15,670 --> 00:17:18,150
Still seeing this in the
2021 with an attack group

483
00:17:18,150 --> 00:17:20,660
that we refer to as 24 52.

484
00:17:20,660 --> 00:17:24,130
We have a detailed white paper
that we at, many at FireEye

485
00:17:24,130 --> 00:17:26,089
put out it's on our website, it's free.

486
00:17:26,089 --> 00:17:28,349
So please go there and take a look

487
00:17:28,349 --> 00:17:30,060
'cause we actually do a deep dive

488
00:17:30,060 --> 00:17:31,639
of this entire attack technique

489
00:17:31,640 --> 00:17:33,680
I'm gonna talk about in like 30 seconds

490
00:17:33,680 --> 00:17:35,090
but it's all there in the paper.

491
00:17:35,090 --> 00:17:37,429
So if an attacker is able
to compromise an account,

492
00:17:37,430 --> 00:17:39,860
maybe it's an on-prem account
that unfortunately is synced

493
00:17:39,860 --> 00:17:43,120
with permissions in
Azure Active Directory,

494
00:17:43,120 --> 00:17:45,439
they could then potentially
add a certificate

495
00:17:45,440 --> 00:17:47,350
to an application or service principle

496
00:17:47,350 --> 00:17:49,870
and basically log in as that application

497
00:17:49,870 --> 00:17:52,389
or service principle and
piggyback on those permissions

498
00:17:52,390 --> 00:17:55,230
to maintain persistent access to data.

499
00:17:55,230 --> 00:17:57,180
It could be the email to files, you know,

500
00:17:57,180 --> 00:17:58,810
anything that might be
present in the tenant

501
00:17:58,810 --> 00:18:01,350
or maybe even in Microsoft 365.

502
00:18:01,350 --> 00:18:03,649
Why are attackers using
service principles?

503
00:18:03,650 --> 00:18:05,670
You can't correlate

504
00:18:05,670 --> 00:18:08,170
or you can't require
multifactor authentication

505
00:18:08,170 --> 00:18:09,810
for a service principle login

506
00:18:09,810 --> 00:18:11,290
and service principles are not governed

507
00:18:11,290 --> 00:18:12,659
by conditional access policies.

508
00:18:12,660 --> 00:18:14,110
So if you have these nice guardrails

509
00:18:14,110 --> 00:18:16,080
and your conditional access policies,

510
00:18:16,080 --> 00:18:18,770
surface principal log-ins
do not abide by those.

511
00:18:18,770 --> 00:18:20,639
So this is what we were
seeing attackers do.

512
00:18:20,640 --> 00:18:21,473
If you think about it,

513
00:18:21,473 --> 00:18:24,129
if an organization thinks they
have a compromised account,

514
00:18:24,130 --> 00:18:26,790
an Azure Active Directory or
a large scope of accounts,

515
00:18:26,790 --> 00:18:28,290
they're gonna reset the passwords, right?

516
00:18:28,290 --> 00:18:30,940
They might require users
to re-register multi-factor

517
00:18:30,940 --> 00:18:32,020
authentication devices.

518
00:18:32,020 --> 00:18:33,495
They're gonna do all these great things.

519
00:18:33,495 --> 00:18:36,020
And if they're not taking a careful look

520
00:18:36,020 --> 00:18:38,000
at their applications
and service principles,

521
00:18:38,000 --> 00:18:39,520
the attacker even though the organization

522
00:18:39,520 --> 00:18:42,030
does all this great stuff, will
still maintain their access.

523
00:18:42,030 --> 00:18:43,790
How do you connect as a service principle?

524
00:18:43,790 --> 00:18:46,010
Well, Microsoft actually has very detailed

525
00:18:46,010 --> 00:18:49,290
step-by-step guidance at
these references below.

526
00:18:49,290 --> 00:18:51,070
They kind of walk you
through how that's done.

527
00:18:51,070 --> 00:18:53,409
So here's an example where
we did it in PowerShell.

528
00:18:53,410 --> 00:18:54,890
We created a service principle,

529
00:18:54,890 --> 00:18:56,730
linked a certificate to that,

530
00:18:56,730 --> 00:18:59,420
then linked the service
principle to an application

531
00:18:59,420 --> 00:19:01,760
that had specific permissions
maybe to read files,

532
00:19:01,760 --> 00:19:03,680
let's say in SharePoint.

533
00:19:03,680 --> 00:19:05,970
SharePoint online that we logged in

534
00:19:05,970 --> 00:19:07,020
just with that certificate

535
00:19:07,020 --> 00:19:09,330
that we link to that service principle.

536
00:19:09,330 --> 00:19:11,070
The great news is you can actually monitor

537
00:19:11,070 --> 00:19:12,879
for these logins,

538
00:19:12,880 --> 00:19:14,230
in sign-in logs, right?

539
00:19:14,230 --> 00:19:16,160
This information is available.

540
00:19:16,160 --> 00:19:18,740
So please, please, please start, you know,

541
00:19:18,740 --> 00:19:21,540
correlating and baselining your
service principles sign-ins.

542
00:19:21,540 --> 00:19:23,490
You can also do correlation understanding,

543
00:19:23,490 --> 00:19:25,280
you know, when the
service principal ID is,

544
00:19:25,280 --> 00:19:26,720
what application of that link to

545
00:19:26,720 --> 00:19:29,040
and get some more
contextual awareness there.

546
00:19:29,040 --> 00:19:30,580
So I'm going to turn it over to Mike,

547
00:19:30,580 --> 00:19:31,710
who's gonna let you know,

548
00:19:31,710 --> 00:19:33,450
I think I probably gave
everyone a headache

549
00:19:33,450 --> 00:19:34,590
going through this pretty fast

550
00:19:34,590 --> 00:19:36,760
but Mike has some awesome defenses here

551
00:19:36,760 --> 00:19:39,160
for both the on-prem and
Azure Active Directory side

552
00:19:39,160 --> 00:19:40,460
that we will be going through.

553
00:19:40,460 --> 00:19:41,390
- Thanks, Matt.

554
00:19:41,390 --> 00:19:43,700
I'm gonna talk about some defenses

555
00:19:43,700 --> 00:19:45,520
for privilege escalation hardening

556
00:19:45,520 --> 00:19:47,003
when applying to the cloud.

557
00:19:48,210 --> 00:19:50,360
When on premise, we are
generally recommending

558
00:19:50,360 --> 00:19:53,350
that organizations identify SPNs.

559
00:19:53,350 --> 00:19:56,750
As Matt mentioned, looking
into their WDigest settings

560
00:19:56,750 --> 00:19:58,790
and utilizing the protected users group.

561
00:19:58,790 --> 00:20:02,899
And we often see attackers
utilizing the SMB version one

562
00:20:02,900 --> 00:20:04,420
to laterally move around environments

563
00:20:04,420 --> 00:20:06,900
but also take advantage
of the vulnerabilities

564
00:20:06,900 --> 00:20:08,300
that exist in that protocol.

565
00:20:10,370 --> 00:20:12,229
When it comes to privilege
escalation hardening

566
00:20:12,230 --> 00:20:13,240
in the cloud,

567
00:20:13,240 --> 00:20:15,270
this is where we're
gonna begin to recommend

568
00:20:15,270 --> 00:20:18,370
that organizations understand
password reset privileges,

569
00:20:18,370 --> 00:20:21,449
be utilizing conditional access
policies, utilizing tools

570
00:20:21,450 --> 00:20:23,240
such as privileged identity management.

571
00:20:23,240 --> 00:20:25,290
The cloud only accounts
that Matt mentioned

572
00:20:25,290 --> 00:20:27,610
and then also the same concept holds true

573
00:20:27,610 --> 00:20:28,760
as on-premise as it does.

574
00:20:28,760 --> 00:20:30,470
The cloud is attempting to utilize

575
00:20:30,470 --> 00:20:31,770
privilege access workstations

576
00:20:31,770 --> 00:20:33,720
for controlling Azure Active Directory.

577
00:20:35,270 --> 00:20:38,710
This is a tweet that was
presented by Andrew Robbins

578
00:20:38,710 --> 00:20:40,070
and the team is (indistinct).

579
00:20:40,070 --> 00:20:42,639
Also Ryan Houseknecht of...

580
00:20:42,640 --> 00:20:44,830
They developed a password reset matrix

581
00:20:44,830 --> 00:20:46,820
and posted it publicly on Twitter.

582
00:20:46,820 --> 00:20:49,290
And I it's a great
example of the community

583
00:20:49,290 --> 00:20:52,909
taking the time to promote their research

584
00:20:52,910 --> 00:20:54,660
and then influencing Microsoft

585
00:20:54,660 --> 00:20:56,710
to make official documentation around it.

586
00:20:58,240 --> 00:20:59,560
In their research, they discovered

587
00:20:59,560 --> 00:21:02,520
that the privilege authentication admin

588
00:21:02,520 --> 00:21:04,340
has privileges to reset passwords

589
00:21:04,340 --> 00:21:05,370
for the global admin.

590
00:21:05,370 --> 00:21:07,959
And this was properly
noted by debug privilege

591
00:21:07,960 --> 00:21:09,240
that you should be protecting

592
00:21:09,240 --> 00:21:11,570
your privilege authentication
administrators,

593
00:21:11,570 --> 00:21:14,240
just like you would your
global administrators.

594
00:21:14,240 --> 00:21:15,830
When it comes to
conditional access policies,

595
00:21:15,830 --> 00:21:17,330
there's many routes that you can take

596
00:21:17,330 --> 00:21:19,909
to properly protect
Azure Active Directory.

597
00:21:19,910 --> 00:21:22,070
These are some recommendations
that we give to clients

598
00:21:22,070 --> 00:21:25,060
to building conditional access policies

599
00:21:25,060 --> 00:21:27,250
particularly for those highly privileged

600
00:21:27,250 --> 00:21:29,020
Azure Active Directory roles.

601
00:21:29,020 --> 00:21:30,660
Most notably, you always wanna make sure

602
00:21:30,660 --> 00:21:32,150
that you have two global admins

603
00:21:32,150 --> 00:21:33,790
that are break glass admins,

604
00:21:33,790 --> 00:21:35,530
that do not, are not subject

605
00:21:35,530 --> 00:21:37,800
to any conditional access policies

606
00:21:37,800 --> 00:21:38,720
but what you should be doing

607
00:21:38,720 --> 00:21:40,440
is monitor for their logging activity

608
00:21:40,440 --> 00:21:42,860
and have your security operations
that are always alerting

609
00:21:42,860 --> 00:21:45,520
when they see these accounts in use.

610
00:21:45,520 --> 00:21:48,570
One thing that many
organizations may not be aware of

611
00:21:48,570 --> 00:21:50,919
is that if your admins are logging in

612
00:21:50,920 --> 00:21:54,140
to Azure Active Directory
at least once every 90 days,

613
00:21:54,140 --> 00:21:57,330
if you're not setting a sign
in policy or a session policy

614
00:21:57,330 --> 00:22:00,179
that they will never be
prompted for a password

615
00:22:00,180 --> 00:22:02,050
at they're logging in
at least once every day

616
00:22:02,050 --> 00:22:03,550
from the same workstation.

617
00:22:03,550 --> 00:22:05,240
So this is where you wanna
make sure you're creating

618
00:22:05,240 --> 00:22:06,420
these conditional access policies

619
00:22:06,420 --> 00:22:08,580
that include session policies

620
00:22:08,580 --> 00:22:10,582
or sign in frequency policies.

621
00:22:11,510 --> 00:22:14,960
We could get into a deep dive
on blocking legacy protocols

622
00:22:14,960 --> 00:22:17,020
but we're advising some strategies here

623
00:22:17,020 --> 00:22:19,310
of short-term, mid-term and long-term wins

624
00:22:19,310 --> 00:22:23,450
to be able to remove the
use of legacy protocols

625
00:22:23,450 --> 00:22:24,680
in your environment to make sure

626
00:22:24,680 --> 00:22:26,760
that monitor authentication is used.

627
00:22:26,760 --> 00:22:28,160
And lastly, you wanna start to work

628
00:22:28,160 --> 00:22:30,260
towards utilizing compliant devices

629
00:22:30,260 --> 00:22:31,700
to access your Active Directory

630
00:22:31,700 --> 00:22:34,120
specifically for those
administrative roles.

631
00:22:34,120 --> 00:22:37,010
This could begin to move
into the realm of zero trust

632
00:22:37,010 --> 00:22:40,100
where you are establishing
trust of an endpoint

633
00:22:40,100 --> 00:22:43,550
and an identity based on
the health of that endpoint

634
00:22:43,550 --> 00:22:45,740
and also the health of the identity.

635
00:22:45,740 --> 00:22:48,050
When it comes to disabling
legacy authentication,

636
00:22:48,050 --> 00:22:49,639
there's kind of three main ways

637
00:22:49,640 --> 00:22:50,767
that you can go about doing so.

638
00:22:50,767 --> 00:22:53,680
And you can see here for
moving from left to right

639
00:22:53,680 --> 00:22:55,790
that conditional access policies

640
00:22:55,790 --> 00:22:58,190
are generally the easiest way to enforce

641
00:22:58,190 --> 00:23:00,720
the blocking of legacy protocols

642
00:23:00,720 --> 00:23:02,270
but it can also be done

643
00:23:02,270 --> 00:23:04,379
via an exchange authentication policy

644
00:23:04,380 --> 00:23:06,630
or at the mailbox level.

645
00:23:06,630 --> 00:23:08,970
It's important to note that
conditional access policies

646
00:23:08,970 --> 00:23:11,330
trump both of these methods

647
00:23:11,330 --> 00:23:13,550
of blocking legacy authentication

648
00:23:13,550 --> 00:23:14,760
with the diagram on the right

649
00:23:14,760 --> 00:23:17,680
showing the workflow of when
each control is enforced.

650
00:23:17,680 --> 00:23:18,513
And you can see there

651
00:23:18,513 --> 00:23:22,300
that the Azure conditional
access policies will trump

652
00:23:22,300 --> 00:23:24,550
an authentication policy
or a mailbox policy

653
00:23:24,550 --> 00:23:27,250
if that's where you're
blocking legacy authentication.

654
00:23:29,340 --> 00:23:32,740
As Matt mentioned prior,
we always recommend

655
00:23:32,740 --> 00:23:35,040
to be utilizing dedicated
cloud-only accounts

656
00:23:35,040 --> 00:23:37,430
for managing Azure resources.

657
00:23:37,430 --> 00:23:42,430
This is noted by the
UPN@theviraltenantnameonmicrosoft.com.

658
00:23:43,060 --> 00:23:44,100
You may get some challenges

659
00:23:44,100 --> 00:23:46,199
that this is impossible, but it is.

660
00:23:46,200 --> 00:23:48,080
That if you do it,

661
00:23:48,080 --> 00:23:52,389
have system administrators or developers

662
00:23:52,390 --> 00:23:56,500
asking for exceptions to bypass MFA

663
00:23:56,500 --> 00:23:59,140
or bypass the login from trusted networks,

664
00:23:59,140 --> 00:24:00,610
this is where you wanna be making sure

665
00:24:00,610 --> 00:24:03,139
you're creating an enterprise application

666
00:24:03,140 --> 00:24:05,370
or a service principle
and properly baselining

667
00:24:05,370 --> 00:24:08,419
the logging activity as
Matt mentioned earlier.

668
00:24:08,420 --> 00:24:10,920
When utilizing federated
identities from on-premise

669
00:24:10,920 --> 00:24:13,660
to cloud, this is where we
recommend not to do that.

670
00:24:13,660 --> 00:24:16,550
This is where we see that
form of vertical movement

671
00:24:16,550 --> 00:24:21,550
as noted by on 24 52 in
utilizing the Golden SAML attack.

672
00:24:21,550 --> 00:24:25,100
They were able to bypass MFA
and log in to the environment

673
00:24:25,100 --> 00:24:27,480
where there has been
highly privileged roles

674
00:24:27,480 --> 00:24:29,630
that were seeking from on-prem.

675
00:24:29,630 --> 00:24:32,575
Also, you wanna make sure
that your cloud-only accounts

676
00:24:32,575 --> 00:24:34,900
do not contain an immutable ID.

677
00:24:34,900 --> 00:24:37,800
This does happen albeit it is very rare.

678
00:24:37,800 --> 00:24:40,180
And we also provide a short scriptlet

679
00:24:40,180 --> 00:24:42,140
to be able to identify those accounts.

680
00:24:42,140 --> 00:24:44,140
So if you do identify
any of those accounts

681
00:24:44,140 --> 00:24:47,410
where a immutable ID exists
on a cloud-only account,

682
00:24:47,410 --> 00:24:49,550
it is important to note
that those accounts

683
00:24:49,550 --> 00:24:52,419
are susceptible to a Golden SAML attack.

684
00:24:52,420 --> 00:24:53,890
And that once identified,

685
00:24:53,890 --> 00:24:55,410
you ought to be recreating those accounts

686
00:24:55,410 --> 00:24:58,700
as cloud-only accounts to
remove that immutable ID.

687
00:24:58,700 --> 00:25:01,050
The combination of privileged
identity management

688
00:25:01,050 --> 00:25:02,730
plus conditional access policies

689
00:25:02,730 --> 00:25:05,940
is probably the best way to
prevent privilege escalation.

690
00:25:05,940 --> 00:25:08,700
That ideally you don't
wanna have an administrator

691
00:25:08,700 --> 00:25:11,620
carrying their privileges
all day every day.

692
00:25:11,620 --> 00:25:14,600
That they should be doing
it in adjusting-type format.

693
00:25:14,600 --> 00:25:18,689
Also try to introduce the Fido 2 protocol

694
00:25:18,690 --> 00:25:21,360
for having your admins

695
00:25:21,360 --> 00:25:24,870
log into the Azure Active
Directory environment.

696
00:25:24,870 --> 00:25:26,620
This is a great concept

697
00:25:26,620 --> 00:25:28,580
because it kind of mimics building access.

698
00:25:28,580 --> 00:25:30,050
When we go into the office every day

699
00:25:30,050 --> 00:25:31,889
or we used to go in the office every day,

700
00:25:31,890 --> 00:25:34,250
we would commonly badge into the building,

701
00:25:34,250 --> 00:25:36,540
badge into the elevator that
will let us do a certain floor

702
00:25:36,540 --> 00:25:39,170
and then potentially
badge into our office.

703
00:25:39,170 --> 00:25:40,660
And nobody complains about that

704
00:25:40,660 --> 00:25:42,470
but everybody complains about passwords.

705
00:25:42,470 --> 00:25:45,470
So that's where the items like YubiKeys

706
00:25:45,470 --> 00:25:47,060
can really become beneficial

707
00:25:47,060 --> 00:25:50,870
to administrators, to
efficiently escalate their access

708
00:25:50,870 --> 00:25:53,449
and perform their daily duties.

709
00:25:53,450 --> 00:25:55,510
And here we provide some examples

710
00:25:55,510 --> 00:25:58,129
of conditional access policies

711
00:25:58,130 --> 00:25:59,330
to utilize,

712
00:25:59,330 --> 00:26:03,350
to prevent the escalation of privileges

713
00:26:03,350 --> 00:26:06,342
when in the Azure Active
Directory environment.

714
00:26:09,020 --> 00:26:11,100
This framework here is
just a sample framework

715
00:26:11,100 --> 00:26:13,929
of how an organization could
begin to use the combination

716
00:26:13,930 --> 00:26:16,740
of privileged identity management

717
00:26:16,740 --> 00:26:21,067
plus conditional access policies
to enforce a strong posture

718
00:26:22,220 --> 00:26:24,530
when asking administrators

719
00:26:24,530 --> 00:26:26,300
to either elevate their privileges

720
00:26:26,300 --> 00:26:29,690
or be administrating the environment.

721
00:26:29,690 --> 00:26:32,040
Lastly, the concept of
privileged access workstations

722
00:26:32,040 --> 00:26:34,470
does apply to Azure AD as well.

723
00:26:34,470 --> 00:26:37,830
That this is something that
started with the on-premise

724
00:26:37,830 --> 00:26:40,980
but has also been included in cloud.

725
00:26:40,980 --> 00:26:43,550
So one challenge we get is,

726
00:26:43,550 --> 00:26:45,740
do my administrators really
need to be carrying around

727
00:26:45,740 --> 00:26:48,520
two devices or do they need
to go to a physical device?

728
00:26:48,520 --> 00:26:49,889
And that's not always the case.

729
00:26:49,890 --> 00:26:52,270
One model that we've seen utilized

730
00:26:52,270 --> 00:26:54,760
is having your physical
device or your physical laptop

731
00:26:54,760 --> 00:26:56,750
be the privilege access workstation

732
00:26:56,750 --> 00:27:01,460
with a a strong compliance
policy tied to it.

733
00:27:01,460 --> 00:27:02,570
And then a virtual machine

734
00:27:02,570 --> 00:27:04,300
inside that privilege access workstation,

735
00:27:04,300 --> 00:27:06,889
which we would call the
productivity virtual machine.

736
00:27:06,890 --> 00:27:08,830
And that's where your admins would log in

737
00:27:08,830 --> 00:27:10,919
with their day-to-day accounts

738
00:27:10,920 --> 00:27:12,830
to do their internet browsing

739
00:27:12,830 --> 00:27:16,800
and their email, daily email review.

740
00:27:16,800 --> 00:27:20,190
And that could hopefully
remove the barrier

741
00:27:20,190 --> 00:27:23,063
of having to utilize two workstations.

742
00:27:23,930 --> 00:27:25,800
You're gonna wanna enroll
that physical device

743
00:27:25,800 --> 00:27:28,139
into Intune and apply a baseline to it.

744
00:27:28,140 --> 00:27:31,450
Microsoft has provided some
secure workstation baselines

745
00:27:31,450 --> 00:27:33,430
that can be applied to the workstation

746
00:27:33,430 --> 00:27:35,850
and then also be applied to Intune,

747
00:27:35,850 --> 00:27:38,719
to be marked as a compliant configuration.

748
00:27:38,720 --> 00:27:40,130
And then this could be utilized

749
00:27:40,130 --> 00:27:41,940
in a conditional access policy

750
00:27:41,940 --> 00:27:44,180
where if trying to access

751
00:27:44,180 --> 00:27:47,150
the Microsoft Azure
management cloud application,

752
00:27:47,150 --> 00:27:49,950
that it must be done so
say from a trusted network,

753
00:27:49,950 --> 00:27:51,510
from a compliant device

754
00:27:51,510 --> 00:27:54,980
and require two-factor when needed.

755
00:27:54,980 --> 00:27:56,500
And on the right we're providing

756
00:27:56,500 --> 00:27:59,910
some of those highly privileged roles

757
00:27:59,910 --> 00:28:01,950
that exist within Azure Active Directory

758
00:28:01,950 --> 00:28:03,500
that this should be applied to.

759
00:28:07,370 --> 00:28:09,889
Next we're gonna be talking
about lateral movement hardening

760
00:28:09,890 --> 00:28:11,240
when it comes to the cloud.

761
00:28:12,940 --> 00:28:14,690
Again, starting with on-premise,

762
00:28:14,690 --> 00:28:16,870
we're always advising organizations

763
00:28:16,870 --> 00:28:19,530
to understand the Kerberos ticket process,

764
00:28:19,530 --> 00:28:21,490
understanding user right management groups

765
00:28:21,490 --> 00:28:25,480
with on endpoints and applying
those via group policy.

766
00:28:25,480 --> 00:28:27,860
Always deploying out laps.

767
00:28:27,860 --> 00:28:31,010
Utilizing strong windows
firewall configurations

768
00:28:31,010 --> 00:28:34,187
to block those management
(indistinct) such as WinRm,

769
00:28:34,187 --> 00:28:36,550
RDP and SMB, common protocols

770
00:28:36,550 --> 00:28:37,669
we like to see attackers
take advantage of.

771
00:28:37,670 --> 00:28:39,590
And then lastly, again,

772
00:28:39,590 --> 00:28:42,600
SMB version one that
hopefully this will slowly

773
00:28:42,600 --> 00:28:45,793
be decommissioned across
organizations as time goes on.

774
00:28:47,760 --> 00:28:50,730
How does lateral movement
hardening apply to the cloud?

775
00:28:50,730 --> 00:28:53,400
This is where we'd like to focus
on mobile device management

776
00:28:53,400 --> 00:28:56,840
and really what's the new tier
zero when it comes to cloud?

777
00:28:56,840 --> 00:28:59,183
And we'll talk about
some of these concepts.

778
00:29:01,170 --> 00:29:02,140
Before getting into that

779
00:29:02,140 --> 00:29:04,500
it's really important to
understand the Azure AD

780
00:29:04,500 --> 00:29:05,880
device join types.

781
00:29:05,880 --> 00:29:08,740
That when registering a
device or joining a device

782
00:29:08,740 --> 00:29:12,610
to Azure AD, it could take
on one of these four columns.

783
00:29:12,610 --> 00:29:15,320
And most notably we'll be kind of focusing

784
00:29:15,320 --> 00:29:18,280
on hybrid Azure AD joined
and Azure AD joined

785
00:29:18,280 --> 00:29:22,240
where on the right, Azure AD
registered is most notably

786
00:29:22,240 --> 00:29:24,530
like the devices that our tablets

787
00:29:24,530 --> 00:29:28,062
and our personal cell
phones of iOS and Android.

788
00:29:32,850 --> 00:29:35,620
When it comes to mobile device management,

789
00:29:35,620 --> 00:29:36,540
it's important to note

790
00:29:36,540 --> 00:29:39,750
that users can register
their own devices by default

791
00:29:39,750 --> 00:29:43,370
and they can register up
to 50 devices on-prem.

792
00:29:43,370 --> 00:29:45,810
I'm sorry, on Azure AD.

793
00:29:45,810 --> 00:29:47,730
And if you think about
it, what an attacker

794
00:29:47,730 --> 00:29:50,920
may want to do is
compromise some credentials,

795
00:29:50,920 --> 00:29:53,810
join a device separate from the user,

796
00:29:53,810 --> 00:29:55,590
and then make that device compliant

797
00:29:55,590 --> 00:29:57,419
to gain access in an environment.

798
00:29:57,420 --> 00:30:00,220
So we've seen attackers take this path

799
00:30:00,220 --> 00:30:04,670
where instead of staying
resident on a user's laptop,

800
00:30:04,670 --> 00:30:06,930
that they'll just
compromise those credentials

801
00:30:06,930 --> 00:30:10,350
and then join their own
device and make it compliant

802
00:30:10,350 --> 00:30:14,399
if they need to satisfy some
conditional access policies.

803
00:30:14,400 --> 00:30:16,740
Also, you wanna be making
sure you're protecting access

804
00:30:16,740 --> 00:30:18,360
to the mobile device management platform.

805
00:30:18,360 --> 00:30:21,840
So this isn't only into,
but this is also platforms

806
00:30:21,840 --> 00:30:24,409
like (indistinct) and
AirWatch that once an attacker

807
00:30:24,410 --> 00:30:25,940
gains administrative privileges

808
00:30:25,940 --> 00:30:28,050
to a mobile device management platform

809
00:30:28,050 --> 00:30:29,646
it's pretty much game over.

810
00:30:29,646 --> 00:30:31,750
They've achieved remote code execution

811
00:30:31,750 --> 00:30:34,130
on the endpoint to conduct their attack.

812
00:30:34,130 --> 00:30:36,020
And even in a distributed environment

813
00:30:36,020 --> 00:30:38,980
like we are in the COVID or remote access,

814
00:30:38,980 --> 00:30:41,280
that they're on a mobile
device management platform,

815
00:30:41,280 --> 00:30:43,100
they could begin to
encrypt those end points

816
00:30:43,100 --> 00:30:46,429
by triggering a deployment
of their payload

817
00:30:46,430 --> 00:30:49,270
to all the distributed end
points, registered to MDM,

818
00:30:49,270 --> 00:30:53,322
to conduct kind of a
distributed ransomware attack.

819
00:30:53,322 --> 00:30:56,239
I admittingly have yet to
see that, but it's kind of,

820
00:30:56,240 --> 00:30:58,620
it's important to note
that it may be possible.

821
00:30:58,620 --> 00:31:01,979
And also you wanna be
checking the MBM APIs

822
00:31:01,980 --> 00:31:03,800
that are available from the platform.

823
00:31:03,800 --> 00:31:07,280
We've seen our red teamers
take advantage of APIs

824
00:31:07,280 --> 00:31:09,670
because they do not always require MFA.

825
00:31:09,670 --> 00:31:11,700
And this is one way they can escalate

826
00:31:11,700 --> 00:31:14,163
to their privileges on an MDM platform.

827
00:31:18,090 --> 00:31:20,620
One thing that a lot of
organizations may not know

828
00:31:20,620 --> 00:31:23,110
is when joining devices to Azure AD,

829
00:31:23,110 --> 00:31:26,399
by default, the user
that registers the device

830
00:31:26,400 --> 00:31:29,170
is automatically made
a local administrator.

831
00:31:29,170 --> 00:31:32,250
So here we're documenting the way it looks

832
00:31:32,250 --> 00:31:35,140
on an end point to join
it to work or school,

833
00:31:35,140 --> 00:31:37,002
you enter in the user's,

834
00:31:37,002 --> 00:31:39,254
your own username and password.

835
00:31:39,254 --> 00:31:43,659
That will add you as a device
within Azure Active Directory

836
00:31:43,660 --> 00:31:45,627
and even gives the user a pop-up saying,

837
00:31:45,627 --> 00:31:48,760
"Hey, you are gonna gain
administrative privileges."

838
00:31:48,760 --> 00:31:50,620
And as I log in again here,

839
00:31:50,620 --> 00:31:54,370
I will gain that local
administrative privilege.

840
00:31:54,370 --> 00:31:56,909
So this is why it's important to not allow

841
00:31:56,910 --> 00:31:59,220
all your users to be able to join devices

842
00:31:59,220 --> 00:32:00,330
to Azure Active Directory

843
00:32:00,330 --> 00:32:02,919
if you wanna have a
strong security posture

844
00:32:02,920 --> 00:32:03,833
on your endpoint.

845
00:32:04,720 --> 00:32:07,360
Attackers are taking note
of the local administrators

846
00:32:07,360 --> 00:32:10,800
as well as joining devices to Azure AD.

847
00:32:10,800 --> 00:32:12,810
And reason it is important to note

848
00:32:12,810 --> 00:32:16,169
is that when joining a device
and logging into Azure ID,

849
00:32:16,170 --> 00:32:19,190
the device is given what's
called a primary refresh token.

850
00:32:19,190 --> 00:32:22,090
And this is a long-term token
that is stored on the endpoint

851
00:32:22,090 --> 00:32:25,129
and is given, the token is
given by Azure Active Directory

852
00:32:25,130 --> 00:32:27,110
once a successful authentication is made.

853
00:32:27,110 --> 00:32:30,350
So this is comparable to
a ticket-granting ticket.

854
00:32:30,350 --> 00:32:33,020
And the reason attackers
are targeting this token

855
00:32:33,020 --> 00:32:36,320
is because they can take
this token from a laptop

856
00:32:36,320 --> 00:32:38,629
and use it independently from the laptop

857
00:32:38,630 --> 00:32:42,030
that they compromise and
authenticate as that device

858
00:32:42,030 --> 00:32:43,460
to Azure Active Directory.

859
00:32:43,460 --> 00:32:47,250
And within that token,
it contains the signals

860
00:32:47,250 --> 00:32:48,770
that the conditional access policies

861
00:32:48,770 --> 00:32:49,790
have already been satisfied.

862
00:32:49,790 --> 00:32:51,030
So that's a way they are able

863
00:32:51,030 --> 00:32:54,723
to bypass conditional access policies.

864
00:32:55,740 --> 00:32:59,350
And there are proofs of concepts
that exist of this attack

865
00:32:59,350 --> 00:33:02,469
when a user has local
administrative privileges

866
00:33:02,470 --> 00:33:06,260
as noted in the previous
slide, that it is easy

867
00:33:06,260 --> 00:33:08,770
for users to have local
administrative privileges.

868
00:33:08,770 --> 00:33:10,560
And even if they don't
and they are allowed

869
00:33:10,560 --> 00:33:13,820
to join devices to Azure Active Directory

870
00:33:13,820 --> 00:33:16,120
that the attacker may
do that on their behalf.

871
00:33:18,120 --> 00:33:21,689
One question we get a lot
is how do I do a lapse

872
00:33:21,690 --> 00:33:23,200
within the cloud?

873
00:33:23,200 --> 00:33:26,330
And right now there isn't
a Microsoft native solution

874
00:33:26,330 --> 00:33:31,330
that exists for assigning
a local admin password

875
00:33:31,500 --> 00:33:33,210
on each end point.

876
00:33:33,210 --> 00:33:35,720
That this still requires Active Directory

877
00:33:35,720 --> 00:33:36,973
to be able to utilize it.

878
00:33:37,960 --> 00:33:40,344
There are some possibilities
of shooting this

879
00:33:40,344 --> 00:33:43,410
through third party endpoint
management software,

880
00:33:43,410 --> 00:33:46,450
but as noted in this cloud boy blog,

881
00:33:46,450 --> 00:33:49,700
that a combination of Intune
plus Azure app functions

882
00:33:49,700 --> 00:33:51,100
and Azure key vault,

883
00:33:51,100 --> 00:33:52,750
that they've documented a way

884
00:33:52,750 --> 00:33:53,930
that this could be achievable

885
00:33:53,930 --> 00:33:57,010
using Microsoft hosted services.

886
00:33:57,010 --> 00:33:58,780
And hopefully Microsoft takes note of this

887
00:33:58,780 --> 00:34:03,343
and makes a similar platform
that is supported by Microsoft.

888
00:34:05,440 --> 00:34:07,700
Protecting tier zero is a little different

889
00:34:07,700 --> 00:34:12,699
when it comes to protecting
tier zero in on-premise.

890
00:34:13,540 --> 00:34:15,790
On-premise that we're
always thinking of tier zero

891
00:34:15,790 --> 00:34:17,000
being your domain controller

892
00:34:17,000 --> 00:34:18,880
but now it's your identity providers

893
00:34:18,880 --> 00:34:23,100
like pings and Oktas that
are the new tier zero.

894
00:34:23,100 --> 00:34:24,839
And you wanna be protecting those

895
00:34:24,840 --> 00:34:26,490
as you would a domain controller.

896
00:34:27,670 --> 00:34:30,260
You could think of
these identity providers

897
00:34:30,260 --> 00:34:31,159
as domain controllers

898
00:34:31,159 --> 00:34:33,929
because they are providing
the authentication,

899
00:34:33,929 --> 00:34:35,319
the authorization and auditing

900
00:34:35,320 --> 00:34:37,850
for all your federated cloud apps.

901
00:34:37,850 --> 00:34:41,860
And once a user tends to
log into these platforms

902
00:34:41,860 --> 00:34:44,500
they begin to then gain access

903
00:34:44,500 --> 00:34:48,070
to all the assigned cloud apps

904
00:34:48,070 --> 00:34:50,120
that they've been given
to by an administrator.

905
00:34:50,120 --> 00:34:52,630
So you can see here, it's
kind of a double-edged sword

906
00:34:52,630 --> 00:34:54,989
that you're getting centralized management

907
00:34:54,989 --> 00:34:56,540
over your user base.

908
00:34:56,540 --> 00:34:59,810
But also once that user
is provisioned access

909
00:34:59,810 --> 00:35:01,080
to multiple cloud apps,

910
00:35:01,080 --> 00:35:03,230
that if their credentials are compromised,

911
00:35:03,230 --> 00:35:05,820
that an attacker could
log into these cloud apps

912
00:35:05,820 --> 00:35:10,260
and laterally move across
each of those cloud apps.

913
00:35:10,260 --> 00:35:13,400
Also, we noticed attackers
targeting administrators

914
00:35:13,400 --> 00:35:15,830
of these identity management platforms

915
00:35:16,890 --> 00:35:18,450
to conduct their attacks.

916
00:35:18,450 --> 00:35:20,589
'Cause ultimately if
they are an administrator

917
00:35:20,590 --> 00:35:22,540
they could then provision
their own account

918
00:35:22,540 --> 00:35:25,840
or they could give another
compromised user's access

919
00:35:25,840 --> 00:35:27,600
to more cloud applications.

920
00:35:27,600 --> 00:35:30,839
So that's why we're noting
that you wanna be protecting

921
00:35:30,840 --> 00:35:32,790
your identity service providers,

922
00:35:32,790 --> 00:35:36,279
your cloud service providers,
your MDM platforms,

923
00:35:36,280 --> 00:35:38,050
like you would tier zero.

924
00:35:38,050 --> 00:35:41,090
Logging into those device,
I'm sorry, those platforms

925
00:35:41,090 --> 00:35:44,070
from trusted devices, compliant devices,

926
00:35:44,070 --> 00:35:46,630
trusted networks requiring MFA

927
00:35:46,630 --> 00:35:48,010
because this is where attackers

928
00:35:48,010 --> 00:35:50,610
are beginning to focus their efforts on

929
00:35:50,610 --> 00:35:53,010
when it comes to
cloud-distributed environments.

930
00:35:54,180 --> 00:35:56,180
So that wraps up our conversation

931
00:35:56,180 --> 00:36:00,980
of securing the cloud and
how our cloud concepts apply

932
00:36:00,980 --> 00:36:03,810
to on-premise concepts and vice versa.

933
00:36:03,810 --> 00:36:05,470
If you guys have any questions,

934
00:36:05,470 --> 00:36:07,370
please feel free to reach
out to Matt and myself.

935
00:36:07,370 --> 00:36:09,950
Our contact information
should be made available

936
00:36:09,950 --> 00:36:11,513
on the RSA portal.

