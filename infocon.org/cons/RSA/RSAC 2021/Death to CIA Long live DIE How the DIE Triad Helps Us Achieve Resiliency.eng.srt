1
00:00:01,230 --> 00:00:02,639
- Hi, my name is Sounil Yu,

2
00:00:02,640 --> 00:00:04,330
and this is a follow-up for a talk

3
00:00:04,330 --> 00:00:06,260
that I gave at the RSA
conference last year

4
00:00:06,260 --> 00:00:09,410
called new paradigms for
the next era of security.

5
00:00:09,410 --> 00:00:11,110
I'll recap that session briefly here,

6
00:00:11,110 --> 00:00:12,399
but if I go through it too fast

7
00:00:12,400 --> 00:00:17,360
you might want to watch the
recording of it on YouTube.

8
00:00:17,360 --> 00:00:20,300
So, last year, I proposed
that we are in this new era

9
00:00:20,300 --> 00:00:23,150
of security with a new set of paradigms

10
00:00:23,150 --> 00:00:26,459
and we need new thinking
to tackle these problems.

11
00:00:26,460 --> 00:00:29,080
Coincidentally, it aligned with the theme

12
00:00:29,080 --> 00:00:30,560
of this year's RSA conference.

13
00:00:30,560 --> 00:00:33,129
It turns out that this
new approach and thinking

14
00:00:33,130 --> 00:00:35,730
also helps us achieve a
higher degree of resiliency.

15
00:00:36,700 --> 00:00:37,610
So, before I jump in,

16
00:00:37,610 --> 00:00:39,930
I wanna point out something
that Einstein once said,

17
00:00:39,930 --> 00:00:42,070
that we cannot solve our problems

18
00:00:42,070 --> 00:00:44,800
with the same thinking we
used when we created them.

19
00:00:44,800 --> 00:00:46,330
Well, to understand the problems

20
00:00:46,330 --> 00:00:49,120
and the type of thinking that
led to where we are today,

21
00:00:49,120 --> 00:00:52,140
we need to look back at
a little bit of history.

22
00:00:52,140 --> 00:00:54,970
So, last year I shared
this rough timeline chart

23
00:00:54,970 --> 00:00:57,960
to show where we've been
and where we're heading.

24
00:00:57,960 --> 00:00:59,380
And as we look across each decade,

25
00:00:59,380 --> 00:01:01,380
we faced a new set of challenges,

26
00:01:01,380 --> 00:01:03,490
a different set of challenges each decade

27
00:01:03,490 --> 00:01:05,200
and it required a
different type of thinking

28
00:01:05,200 --> 00:01:06,740
to tackle that challenge.

29
00:01:06,740 --> 00:01:09,550
In the '80s, IT became cheap,

30
00:01:09,550 --> 00:01:10,980
it became affordable to the masses,

31
00:01:10,980 --> 00:01:12,330
so the first problem that we had

32
00:01:12,330 --> 00:01:14,750
was that of asset management

33
00:01:14,750 --> 00:01:17,010
and trying to understand
what did we just buy,

34
00:01:17,010 --> 00:01:19,820
and what business function did it support.

35
00:01:19,820 --> 00:01:22,289
Fast forward to the '90s,
we saw attacks ramp up.

36
00:01:22,290 --> 00:01:25,100
So, naturally, we needed
ways to defend ourselves

37
00:01:25,100 --> 00:01:26,630
against those attacks.

38
00:01:26,630 --> 00:01:28,960
In the 2000s, we saw our defenses failing.

39
00:01:28,960 --> 00:01:32,419
So, we needed new ways to quickly know

40
00:01:32,420 --> 00:01:35,800
when something bad
happened by analyzing logs

41
00:01:35,800 --> 00:01:37,950
and setting alarms when
an intruder got in.

42
00:01:39,000 --> 00:01:41,290
In the 2010s, we learned to assume breach.

43
00:01:41,290 --> 00:01:44,030
And then we had to find ways
to get persistent attackers

44
00:01:44,030 --> 00:01:45,180
out of our environment.

45
00:01:46,500 --> 00:01:47,480
What's in it interesting,

46
00:01:47,480 --> 00:01:50,320
is that each of these areas maps nicely

47
00:01:50,320 --> 00:01:53,070
into the functions of the
NIST cybersecurity framework.

48
00:01:54,050 --> 00:01:56,220
Now, I saw this pattern
emerge several years ago

49
00:01:56,220 --> 00:01:58,560
and back at RSA 2017 I predicted

50
00:01:58,560 --> 00:02:02,720
that if this pattern follows
its course, then in the 2020s

51
00:02:02,720 --> 00:02:05,670
we're gonna face recover
oriented challenges

52
00:02:05,670 --> 00:02:08,880
in the form of irreversible
destructive attacks

53
00:02:08,880 --> 00:02:11,790
that basically undermine
our ability to recover.

54
00:02:11,790 --> 00:02:15,209
And so, in the 2020s, our
focus will be on recover

55
00:02:15,210 --> 00:02:17,970
or perhaps we can use the word resiliency.

56
00:02:17,970 --> 00:02:21,280
That 2020s is the age of resiliency.

57
00:02:21,280 --> 00:02:24,480
Now, in each era, the
solutions of the past eras

58
00:02:24,480 --> 00:02:27,679
didn't address the challenges
of the current era.

59
00:02:27,680 --> 00:02:31,840
So, naturally, we should expect
the need for new solutions

60
00:02:31,840 --> 00:02:34,390
and approaches to tackle
the new challenges

61
00:02:34,390 --> 00:02:36,309
of this present era.

62
00:02:36,310 --> 00:02:39,030
But remember the quote that
I started off from Einstein,

63
00:02:39,030 --> 00:02:41,720
we cannot solve our problems
with the same thinking we used

64
00:02:41,720 --> 00:02:43,070
when we created them.

65
00:02:43,070 --> 00:02:45,260
Well, we have to look
for new ways of thinking

66
00:02:45,260 --> 00:02:48,100
to tackle this present era's problems.

67
00:02:48,100 --> 00:02:49,579
And so, I proposed a new paradigm

68
00:02:49,580 --> 00:02:50,930
for the next era of security,

69
00:02:50,930 --> 00:02:53,873
and it's what I call the DIE triad.

70
00:02:54,827 --> 00:02:59,640
DIE stands for distributed,
immutable and ephemeral.

71
00:02:59,640 --> 00:03:02,079
And the DIE triad
represents what I believe

72
00:03:02,080 --> 00:03:04,890
is the new approach or
new thinking that we need

73
00:03:04,890 --> 00:03:07,042
to tackle the challenges in this new era.

74
00:03:08,460 --> 00:03:10,500
The alternative to the DIE triad,

75
00:03:10,500 --> 00:03:13,680
or the old way of
thinking, is the CIA triad,

76
00:03:13,680 --> 00:03:17,030
which I'm sure you guys are
all pretty familiar with.

77
00:03:17,030 --> 00:03:20,100
But let's now consider
though if the CIA triad

78
00:03:20,100 --> 00:03:23,510
can actually help us in
this new era of resiliency.

79
00:03:23,510 --> 00:03:25,970
Remember, we're at the
stage of recover now.

80
00:03:25,970 --> 00:03:27,640
So, you've already been compromised,

81
00:03:27,640 --> 00:03:29,779
you've already assumed breach.

82
00:03:29,780 --> 00:03:32,710
Let's see what good are
our controls around CIA.

83
00:03:32,710 --> 00:03:34,780
Your data's already in
the hands of the attacker.

84
00:03:34,780 --> 00:03:37,580
Well, how do you restore confidentiality?

85
00:03:37,580 --> 00:03:39,410
Your systems are all suspect,

86
00:03:39,410 --> 00:03:41,490
how do you restore integrity?

87
00:03:41,490 --> 00:03:43,380
Your backups have been wiped,

88
00:03:43,380 --> 00:03:45,079
your systems have been ransomware.

89
00:03:46,010 --> 00:03:48,190
How do you restore availability?

90
00:03:48,190 --> 00:03:52,050
Well, our CIA central
controls can help us protect,

91
00:03:52,050 --> 00:03:54,980
detect and respond, but
we're now at recover.

92
00:03:54,980 --> 00:03:58,500
And I would argue the
CIA triad is failing us

93
00:03:58,500 --> 00:04:00,030
when it comes to understanding

94
00:04:00,030 --> 00:04:02,560
how we can tackle the problem of recover.

95
00:04:02,560 --> 00:04:06,080
And remember, the failure
of controls around CIA

96
00:04:06,080 --> 00:04:08,410
is what got us to having
the need to recover

97
00:04:08,410 --> 00:04:09,363
in the first place.

98
00:04:10,490 --> 00:04:12,963
Let's now consider the DIE approach.

99
00:04:14,263 --> 00:04:16,060
Your data is in the hands of the attacker.

100
00:04:16,060 --> 00:04:17,950
But what if that data were ephemeral,

101
00:04:17,950 --> 00:04:21,729
like a credit card number
that expires after every use?

102
00:04:21,730 --> 00:04:23,020
Your systems are all suspect,

103
00:04:23,020 --> 00:04:25,270
but you've built it to be
immutable using containers.

104
00:04:25,270 --> 00:04:28,400
So, any change or suspect,
and you can blow them all away

105
00:04:28,400 --> 00:04:29,890
and redeploy those containers

106
00:04:29,890 --> 00:04:32,020
from a known good image easily,

107
00:04:32,020 --> 00:04:33,289
and then your backups have been wiped

108
00:04:33,290 --> 00:04:35,080
and then your systems ransomware.

109
00:04:35,080 --> 00:04:36,353
But if you have a distributed environment

110
00:04:36,353 --> 00:04:38,710
that can function
independently from each other

111
00:04:39,843 --> 00:04:40,940
and if that data has been encrypted,

112
00:04:40,940 --> 00:04:43,520
well, it's ephemeral data,
so again, you don't care

113
00:04:43,520 --> 00:04:45,400
that the data has been potentially stolen.

114
00:04:45,400 --> 00:04:46,979
And if you do need that
data, for some reason,

115
00:04:46,980 --> 00:04:48,460
it's on an immutable data store.

116
00:04:48,460 --> 00:04:51,849
So, you can easily revert
back to what it was before.

117
00:04:51,850 --> 00:04:54,893
Well, it turns out that if
we designed towards DIE,

118
00:04:55,890 --> 00:04:58,840
then it helps us become
resilient against the attacks,

119
00:04:58,840 --> 00:05:02,000
but not strictly by stopping attacks,

120
00:05:02,000 --> 00:05:04,713
rather by making attacks irrelevant.

121
00:05:05,800 --> 00:05:07,990
And so, furthermore, it
turns out that if we designed

122
00:05:07,990 --> 00:05:11,800
towards DIE first, then
we lessen our burden

123
00:05:11,800 --> 00:05:16,800
towards CIA centric or
CIA oriented controls.

124
00:05:17,030 --> 00:05:17,863
Think about it.

125
00:05:17,863 --> 00:05:20,130
If I have something that
is highly distributed,

126
00:05:20,130 --> 00:05:23,430
why do I need to worry about a
single system's availability?

127
00:05:23,430 --> 00:05:24,940
I have something that's immutable,

128
00:05:24,940 --> 00:05:27,150
why do I need to worry
about its integrity?

129
00:05:27,150 --> 00:05:28,770
If I have something
that's highly ephemeral,

130
00:05:28,770 --> 00:05:31,510
why do I need to worry
about its confidentiality?

131
00:05:31,510 --> 00:05:34,690
In other words, if we can
build our assets to DIE,

132
00:05:34,690 --> 00:05:37,540
then why do we need to CIA them at all?

133
00:05:37,540 --> 00:05:39,720
Now this might sound
sacrilegious too many of us

134
00:05:39,720 --> 00:05:42,760
in the security field, but
what I'm suggesting is that

135
00:05:42,760 --> 00:05:46,253
if we are designing systems to
address the recover problem,

136
00:05:48,293 --> 00:05:50,560
if we wanna make our
systems more resilient,

137
00:05:50,560 --> 00:05:53,760
then we should design for DIE first,

138
00:05:53,760 --> 00:05:55,457
before we design for CIA.

139
00:05:56,690 --> 00:06:00,340
Now, I don't think we can
fully make all our systems DIE,

140
00:06:00,340 --> 00:06:01,859
and so where it falls short,

141
00:06:01,860 --> 00:06:05,080
we must build in controls for CIA.

142
00:06:05,080 --> 00:06:07,930
But that should be our fallback position.

143
00:06:07,930 --> 00:06:10,820
We oftentimes advocate
for building security in,

144
00:06:10,820 --> 00:06:14,290
or having a security focus mindset,

145
00:06:14,290 --> 00:06:15,950
security first sort of mindset.

146
00:06:15,950 --> 00:06:17,870
And I'm not suggesting that we stop that,

147
00:06:17,870 --> 00:06:20,360
but I'm suggesting that
there's a higher priority.

148
00:06:20,360 --> 00:06:22,980
That we should first and foremost

149
00:06:22,980 --> 00:06:24,670
think about how we can build systems

150
00:06:24,670 --> 00:06:26,743
so that it doesn't need security at all.

151
00:06:27,730 --> 00:06:31,020
And to make this distinction
between CIA and DIE

152
00:06:31,020 --> 00:06:33,310
even more vivid, it
helps to use an analogy

153
00:06:33,310 --> 00:06:36,170
that many cloud native
practitioners have already embraced.

154
00:06:36,170 --> 00:06:38,795
It's the notion of pets and cattle.

155
00:06:38,795 --> 00:06:39,628
And if you're not familiar with it

156
00:06:39,628 --> 00:06:41,460
let me explain it quickly.

157
00:06:41,460 --> 00:06:43,450
So, pets are things
that you give it a name,

158
00:06:43,450 --> 00:06:45,800
if they get sick, you take it to the vet

159
00:06:45,800 --> 00:06:47,580
and you like giving it hugs.

160
00:06:47,580 --> 00:06:49,849
And when we used to think
about how we built systems

161
00:06:49,850 --> 00:06:52,680
in the past era, we built a lot of pets.

162
00:06:52,680 --> 00:06:54,650
Our machines had names
that we could pronounce,

163
00:06:54,650 --> 00:06:57,890
and when it had a
vulnerability or a problem,

164
00:06:57,890 --> 00:06:59,870
we took it to our cyber
veterinarians to patch it

165
00:06:59,870 --> 00:07:00,910
and make it better.

166
00:07:00,910 --> 00:07:02,510
We liked hugging our machines.

167
00:07:02,510 --> 00:07:04,670
And things like our personal laptops,

168
00:07:04,670 --> 00:07:07,143
our national ID numbers, those are pets.

169
00:07:08,140 --> 00:07:09,260
Cattle, on the other hand,

170
00:07:09,260 --> 00:07:10,659
you brand it with some obscure name

171
00:07:10,660 --> 00:07:11,810
that you can't even pronounce,

172
00:07:11,810 --> 00:07:13,900
it's a string of characters and numbers.

173
00:07:13,900 --> 00:07:15,049
And then when it gets sick,

174
00:07:15,050 --> 00:07:18,183
you basically cull it from
their herd and you move on.

175
00:07:19,030 --> 00:07:22,219
And containers, lambda functions
and credit card numbers

176
00:07:22,220 --> 00:07:24,810
that continuously change are like cattle.

177
00:07:24,810 --> 00:07:27,690
When it comes to our
pets, we have to CIA them,

178
00:07:27,690 --> 00:07:30,637
but when it comes to cattle,
we should design them to DIE.

179
00:07:32,420 --> 00:07:33,770
And since we care about our pets,

180
00:07:33,770 --> 00:07:35,390
we have an obligation
to take care of them.

181
00:07:35,390 --> 00:07:37,440
So, we need to be intentional

182
00:07:37,440 --> 00:07:39,690
when it comes to the creation of new pets.

183
00:07:39,690 --> 00:07:44,690
That means that the DIE
may change how we think

184
00:07:45,740 --> 00:07:48,150
about our roles and responsibilities

185
00:07:48,150 --> 00:07:49,950
as it relates to how we handle pets.

186
00:07:52,290 --> 00:07:54,040
When we have to deal with pets,

187
00:07:54,040 --> 00:07:56,210
our role is as a cyber veterinarian.

188
00:07:56,210 --> 00:07:59,570
And taking care of pets
requires lots of tender love

189
00:07:59,570 --> 00:08:03,080
and care through CIA centric controls.

190
00:08:03,080 --> 00:08:07,539
But defending these indefensible
pets is hard enough.

191
00:08:07,540 --> 00:08:08,950
This challenge is exacerbated

192
00:08:08,950 --> 00:08:10,680
by just the sheer number of pets

193
00:08:10,680 --> 00:08:12,230
that we oftentimes have to deal with.

194
00:08:12,230 --> 00:08:15,480
I mean, if you're a pet owner,
I'm sure you're doing fine

195
00:08:15,480 --> 00:08:17,070
taking care of a few
pets in your household,

196
00:08:17,070 --> 00:08:19,880
but imagine if you
multiply that by 10 times

197
00:08:19,880 --> 00:08:22,380
and they started like
breeding amongst themselves,

198
00:08:23,276 --> 00:08:25,800
it would figuratively and
literally be like a zoo.

199
00:08:25,800 --> 00:08:28,050
So, we had to think
about a role differently.

200
00:08:28,050 --> 00:08:32,620
Specifically to avoid
unknowingly creating new pets.

201
00:08:32,620 --> 00:08:35,240
And the operative term
here is unknowingly.

202
00:08:35,240 --> 00:08:38,460
It's fine if someone wants
to create or adopt a new pet,

203
00:08:38,460 --> 00:08:40,559
they just have to sign
up for the responsibility

204
00:08:40,559 --> 00:08:43,760
to care for that pet, or at
least provide the resources

205
00:08:43,760 --> 00:08:46,850
to ensure that it's being
properly taken care of.

206
00:08:46,850 --> 00:08:48,680
And so, I think our role
as security professionals

207
00:08:48,680 --> 00:08:51,689
will shift from strictly
being just a veterinarian,

208
00:08:51,690 --> 00:08:54,100
to also becoming a pet control officer,

209
00:08:54,100 --> 00:08:57,020
ensuring that the organization
doesn't end up adopting

210
00:08:57,020 --> 00:08:59,370
or breeding more pets than it can handle.

211
00:08:59,370 --> 00:09:00,550
And if we take the philosophy

212
00:09:00,550 --> 00:09:03,563
that we should prioritize DIE overs CIA,

213
00:09:04,740 --> 00:09:07,610
then that means that our role
as a cyber pet control officer

214
00:09:07,610 --> 00:09:11,290
should come before our role
as a cyber veterinarian.

215
00:09:11,290 --> 00:09:12,980
In other words, we
should first and foremost

216
00:09:12,980 --> 00:09:16,030
encourage the organization to
minimize the number of pets,

217
00:09:16,030 --> 00:09:21,000
and then secondarily for
the few pets that remain,

218
00:09:21,000 --> 00:09:23,430
practice the best
veterinary care that you can

219
00:09:23,430 --> 00:09:25,479
with the limited resources that you have.

220
00:09:27,360 --> 00:09:29,607
Now, how do we know what our pets are

221
00:09:29,607 --> 00:09:31,020
and what are our cattle?

222
00:09:31,020 --> 00:09:33,439
Is there an easy way to distinguish them?

223
00:09:33,440 --> 00:09:35,110
Well, here's an asset
inventory for a group

224
00:09:35,110 --> 00:09:38,280
that I volunteer with called Project N95.

225
00:09:38,280 --> 00:09:40,439
I'm sure from the name you
can figure it out what we do.

226
00:09:40,440 --> 00:09:43,053
And I sure hope that one
day this project goes away.

227
00:09:44,080 --> 00:09:46,200
Anyway using a tool called JupiterOne,

228
00:09:46,200 --> 00:09:48,700
we can see that we have
nearly 20,000 assets

229
00:09:48,700 --> 00:09:49,820
of varying types.

230
00:09:49,820 --> 00:09:52,540
But what are these are
pets and which are cattle?

231
00:09:52,540 --> 00:09:55,630
Now, typically, most of
us manually tag assets

232
00:09:55,630 --> 00:09:56,463
as being critical,

233
00:09:56,463 --> 00:09:59,550
and here what we've noted
24 being deemed critical.

234
00:09:59,550 --> 00:10:02,262
And this was done manually,
but are they really pets?

235
00:10:03,397 --> 00:10:05,440
Are these the only pets
that we actually have?

236
00:10:05,440 --> 00:10:08,463
Are there potentially more
pets than are represented here?

237
00:10:09,810 --> 00:10:11,229
And so, as I tried to
answer that question,

238
00:10:11,230 --> 00:10:14,070
I found that it was helpful
to look for measurements

239
00:10:14,070 --> 00:10:18,090
that aligned with the
principles of the DIE triad.

240
00:10:18,090 --> 00:10:19,740
For example, let's take ephemerality.

241
00:10:19,740 --> 00:10:23,130
So, if the goal is to make
things more short-lived,

242
00:10:23,130 --> 00:10:26,439
then perhaps we can measure
how long-lived something is.

243
00:10:26,440 --> 00:10:29,480
And it turns out this
type of data, uptime data,

244
00:10:29,480 --> 00:10:31,320
is actually pretty widely available

245
00:10:31,320 --> 00:10:34,010
because most organizations that have a CIO

246
00:10:34,010 --> 00:10:37,650
have a key performance indicator
that is based on uptime.

247
00:10:37,650 --> 00:10:40,270
So, let's suppose I can get
the uptime of every system

248
00:10:40,270 --> 00:10:41,740
or component that I have running,

249
00:10:41,740 --> 00:10:44,390
I'll end up with a graph
that's similar to this.

250
00:10:44,390 --> 00:10:48,060
Now, let's suppose I set some
arbitrary uptime threshold,

251
00:10:48,060 --> 00:10:51,089
meaning anything older than that is a pet,

252
00:10:51,090 --> 00:10:54,253
and anything younger than
that is basically cattle.

253
00:10:55,500 --> 00:10:58,820
Now, having many pets might
not be desirable either,

254
00:10:58,820 --> 00:11:02,460
so essentially, what I wanna
be able to do is set a goal

255
00:11:02,460 --> 00:11:05,330
that says, let's try to have fewer pets,

256
00:11:05,330 --> 00:11:07,090
and, or a shorter-live cattle,

257
00:11:07,090 --> 00:11:09,713
that moves this curve
down and to the left.

258
00:11:10,570 --> 00:11:14,240
And so, this curve I
would argue is potentially

259
00:11:14,240 --> 00:11:17,030
a good representation of resiliency.

260
00:11:17,030 --> 00:11:19,069
Resiliency is an emergent property

261
00:11:19,070 --> 00:11:20,570
and it's hard to measure the directly,

262
00:11:20,570 --> 00:11:22,900
but I think you can get a good perspective

263
00:11:22,900 --> 00:11:25,803
of what is resilient by
the shape of this curve.

264
00:11:27,120 --> 00:11:29,500
Imagine now there are two types of curves.

265
00:11:29,500 --> 00:11:32,913
One that looks like an
L, like the letter L,

266
00:11:34,370 --> 00:11:37,030
and the other one that
looks like the number seven.

267
00:11:37,030 --> 00:11:39,439
And I think it would be easy to argue

268
00:11:39,440 --> 00:11:43,070
that an organization with
a pets versus cattle curve

269
00:11:43,070 --> 00:11:45,730
that looks like an L is
gonna be much more resilient

270
00:11:45,730 --> 00:11:48,100
than an organization whose
pets and cattle curve

271
00:11:48,100 --> 00:11:49,670
looks like a seven.

272
00:11:49,670 --> 00:11:50,560
And as I mentioned earlier,

273
00:11:50,560 --> 00:11:52,280
we can't measure resiliency directly,

274
00:11:52,280 --> 00:11:54,600
but I think the shape of
this curve is representative

275
00:11:54,600 --> 00:11:57,003
of how a resilient system might be.

276
00:11:57,870 --> 00:12:01,340
But I realize it's hard for me
to benchmark based on shapes.

277
00:12:01,340 --> 00:12:03,740
I knew there was some way
to put some kinda number

278
00:12:03,740 --> 00:12:06,420
to this curve so I can compare
one shape with another.

279
00:12:06,420 --> 00:12:07,769
And that's when I realized,

280
00:12:07,769 --> 00:12:10,150
you know this actually
looks like a power curve.

281
00:12:10,150 --> 00:12:11,400
Sorry, a power law curve.

282
00:12:12,468 --> 00:12:15,189
And so, using Excel I put these values

283
00:12:15,190 --> 00:12:16,560
into a power law curve,

284
00:12:16,560 --> 00:12:19,239
and it turns out there's
an important value here

285
00:12:19,240 --> 00:12:21,160
from the trend line equation that emerges

286
00:12:21,160 --> 00:12:23,650
from the resulting scatterplot.

287
00:12:23,650 --> 00:12:25,709
It's the exponent that you see here.

288
00:12:25,710 --> 00:12:29,700
And for this curve, that
value, it's called beta,

289
00:12:29,700 --> 00:12:33,380
is about 1.4 for these data points.

290
00:12:33,380 --> 00:12:36,470
Now, when it comes to measuring
robustness and resiliency,

291
00:12:36,470 --> 00:12:38,230
there's actually a ton of research

292
00:12:38,230 --> 00:12:39,330
that's already been done on this.

293
00:12:39,330 --> 00:12:41,540
And here's a paper that
talks about the importance

294
00:12:41,540 --> 00:12:44,240
of this value and network topologies.

295
00:12:44,240 --> 00:12:46,300
Basically, you want
this number, this beta,

296
00:12:46,300 --> 00:12:51,300
to be less than 2.9 for the
system to be fault tolerant.

297
00:12:51,420 --> 00:12:54,963
But more interestingly,
the lower the beta value,

298
00:12:56,530 --> 00:12:59,853
the more resilient it is
against intentional attacks.

299
00:13:00,960 --> 00:13:03,400
And guess what lowers that beta value?

300
00:13:03,400 --> 00:13:05,463
More shorter-lived cattle.

301
00:13:07,440 --> 00:13:10,920
Now, there also appears to
be a lower bound though,

302
00:13:10,920 --> 00:13:12,620
that's worth further looking into.

303
00:13:13,690 --> 00:13:16,050
I won't go into the math
here, but apparently,

304
00:13:16,050 --> 00:13:19,093
when this beta value is less than 1.8,

305
00:13:20,400 --> 00:13:22,510
things start getting more expensive.

306
00:13:22,510 --> 00:13:24,740
So, the fact that I'm at 1.4 roughly,

307
00:13:24,740 --> 00:13:26,450
means that maybe this
particular environment

308
00:13:26,450 --> 00:13:31,110
is more expensive than
it potentially could be.

309
00:13:31,110 --> 00:13:33,879
Anyway, there's some
mathematical reason for this

310
00:13:33,879 --> 00:13:35,250
when it comes to network connectivity,

311
00:13:35,250 --> 00:13:38,070
but I'm not sure if it applies
for something like uptime.

312
00:13:38,070 --> 00:13:39,560
And perhaps there is a lower bound range

313
00:13:39,560 --> 00:13:42,069
that needs to be accounted
for when it comes to uptime,

314
00:13:42,070 --> 00:13:43,080
but I'm not sure yet.

315
00:13:43,080 --> 00:13:45,720
Originally I thought that
just having lots of cattle

316
00:13:45,720 --> 00:13:48,530
and as few pets as possible is preferred,

317
00:13:48,530 --> 00:13:51,360
and this research shows that's the case

318
00:13:51,360 --> 00:13:54,980
from a resiliency standpoint,
but it may not be the case

319
00:13:54,980 --> 00:13:57,990
from a business efficiency standpoint.

320
00:13:57,990 --> 00:14:00,350
Anyway, I think it's gonna
require some additional research

321
00:14:00,350 --> 00:14:02,440
to discover whether these findings

322
00:14:02,440 --> 00:14:03,980
from network topologies apply

323
00:14:03,980 --> 00:14:07,743
when it comes to measuring
resiliency based on ephemerality.

324
00:14:09,500 --> 00:14:11,300
But now when it comes
to measuring resiliency

325
00:14:11,300 --> 00:14:12,573
from network topologies,

326
00:14:13,480 --> 00:14:16,910
we're measuring a different
part of the DIE triad.

327
00:14:16,910 --> 00:14:20,069
Specifically, it's a measure
of how distributed a network is

328
00:14:20,070 --> 00:14:21,760
and whether it can remain connected

329
00:14:21,760 --> 00:14:24,220
after the loss of certain notes and links.

330
00:14:24,220 --> 00:14:26,170
As I mentioned earlier,
there's a ton of research

331
00:14:26,170 --> 00:14:27,020
already being done here,

332
00:14:27,020 --> 00:14:29,480
so I won't dive too deep into this.

333
00:14:29,480 --> 00:14:32,200
But essentially we can
measure how well distributed

334
00:14:32,200 --> 00:14:35,280
and connected a network is
through well-established graph

335
00:14:35,280 --> 00:14:37,250
and graph analysis techniques.

336
00:14:37,250 --> 00:14:38,290
And in the case with networks,

337
00:14:38,290 --> 00:14:40,699
it's easy to tell what your pets are,

338
00:14:40,700 --> 00:14:45,300
usually because they are your
most highly connected nodes.

339
00:14:45,300 --> 00:14:48,380
The most resilient of these
networks is the random network

340
00:14:48,380 --> 00:14:50,660
on the left, where there are no hubs

341
00:14:50,660 --> 00:14:53,490
or rather what basically there are no pets

342
00:14:53,490 --> 00:14:55,600
and everything has cattle.

343
00:14:55,600 --> 00:14:57,690
But this is not typically what we see

344
00:14:57,690 --> 00:14:59,180
emerge in the natural world.

345
00:14:59,180 --> 00:15:00,760
That the two examples that you see here,

346
00:15:00,760 --> 00:15:02,590
one with Facebook and one where Twitter,

347
00:15:02,590 --> 00:15:05,430
these are what have emerged naturally.

348
00:15:05,430 --> 00:15:07,829
And to me, this reinforces the notion

349
00:15:07,830 --> 00:15:10,730
that we will always have some
form of pets in real life.

350
00:15:10,730 --> 00:15:12,270
I don't think we'll ever get to a state

351
00:15:12,270 --> 00:15:14,803
where it's all purely just cattle.

352
00:15:16,140 --> 00:15:16,973
Even though that's the goal

353
00:15:16,973 --> 00:15:19,183
that we would like to
try to drive towards.

354
00:15:20,850 --> 00:15:22,630
Here's another way to measure DIE.

355
00:15:22,630 --> 00:15:25,100
This is from Will Larson's blog posts

356
00:15:25,100 --> 00:15:26,370
for which you can find the link

357
00:15:26,370 --> 00:15:28,270
at the bottom of the slide here.

358
00:15:28,270 --> 00:15:31,480
Here he talks about giving
servers a security grade,

359
00:15:31,480 --> 00:15:34,400
and he comes up with this synthetic metric

360
00:15:34,400 --> 00:15:38,140
that has the elements of
immutability and ephemerality.

361
00:15:38,140 --> 00:15:39,730
We've already talked about the server age

362
00:15:39,730 --> 00:15:41,120
when it comes to uptime,

363
00:15:41,120 --> 00:15:43,750
but he also captures
information on who has root

364
00:15:43,750 --> 00:15:46,780
or who has SSH access to the server.

365
00:15:46,780 --> 00:15:48,810
Basically, he's asking the question,

366
00:15:48,810 --> 00:15:52,640
how changeable or how
immutable is this server?

367
00:15:52,640 --> 00:15:55,510
If you design a container properly,

368
00:15:55,510 --> 00:15:58,790
no one has any business logging into it.

369
00:15:58,790 --> 00:16:02,770
There's no need for route
access or enabling SSH.

370
00:16:02,770 --> 00:16:05,319
So, the more likely
something can be changed,

371
00:16:05,320 --> 00:16:09,620
whether by an internal
employee, through a SSH enroute,

372
00:16:09,620 --> 00:16:11,550
or maybe even through an external entity

373
00:16:11,550 --> 00:16:13,790
through their vulnerable libraries,

374
00:16:13,790 --> 00:16:16,413
they'll lower the grade for
their server's security.

375
00:16:19,000 --> 00:16:21,670
And then here's one more
way of measuring DIE,

376
00:16:21,670 --> 00:16:24,949
but for an entirely
different type of asset,

377
00:16:24,950 --> 00:16:26,490
namely software code.

378
00:16:26,490 --> 00:16:30,100
Here we can look at the
last updates, timestamp,

379
00:16:30,100 --> 00:16:32,700
as a form of ephemerality.

380
00:16:32,700 --> 00:16:34,100
The more that code changes,

381
00:16:34,100 --> 00:16:37,040
the harder it is for attackers to keep up.

382
00:16:37,040 --> 00:16:38,150
The more that code changes,

383
00:16:38,150 --> 00:16:40,540
the less value there is in the code itself

384
00:16:40,540 --> 00:16:42,459
at least to an attacker.

385
00:16:42,460 --> 00:16:43,390
Consider the alternative,

386
00:16:43,390 --> 00:16:46,640
which is oftentimes
described as software rot

387
00:16:46,640 --> 00:16:47,960
or code smell.

388
00:16:47,960 --> 00:16:51,680
And this can be a long-lived
code that accrues value

389
00:16:51,680 --> 00:16:54,459
to the attacker because
the attacker can count

390
00:16:54,460 --> 00:16:57,470
on certain flaws and
behaviors to remain the same.

391
00:16:57,470 --> 00:17:00,940
And I actually experienced
this myself way back in the day

392
00:17:00,940 --> 00:17:03,380
when I used to scrape lots
of social media sites.

393
00:17:03,380 --> 00:17:04,880
Every time that a social media provider

394
00:17:04,880 --> 00:17:07,349
changed their interface
or added a new feature,

395
00:17:07,349 --> 00:17:10,730
my scrapers would break, and
it was quite frustrating.

396
00:17:10,730 --> 00:17:15,730
But I loved it when my scrapes
would work for months on end

397
00:17:15,750 --> 00:17:17,303
because the code never changed.

398
00:17:18,319 --> 00:17:20,909
Anyway, I think there's
some truth also to the quote

399
00:17:20,910 --> 00:17:22,730
that's shown here from Apple,

400
00:17:22,730 --> 00:17:24,670
that the security of the
products doesn't depend

401
00:17:24,670 --> 00:17:26,829
upon the secrecy of the code.

402
00:17:26,829 --> 00:17:28,569
We can certainly see that

403
00:17:28,569 --> 00:17:30,470
from successful open source companies,

404
00:17:31,920 --> 00:17:33,580
where their business
model or their security

405
00:17:33,580 --> 00:17:36,780
really doesn't depend upon
keeping their code secret.

406
00:17:36,780 --> 00:17:38,730
But with respect to source code,

407
00:17:38,730 --> 00:17:40,420
I wanna argue that the real value

408
00:17:40,420 --> 00:17:42,840
lies not in the code itself,

409
00:17:42,840 --> 00:17:44,780
but in many things that surround it.

410
00:17:44,780 --> 00:17:47,270
It's the developers who write the new code

411
00:17:47,270 --> 00:17:48,280
where the value resides.

412
00:17:48,280 --> 00:17:50,480
It's in the ecosystem
that the code runs in.

413
00:17:51,350 --> 00:17:54,149
I mean, suppose let's say you
had the entire source code

414
00:17:54,150 --> 00:17:56,260
for the Apple App Store.

415
00:17:56,260 --> 00:17:59,140
Would Apple lose competitive advantage?

416
00:17:59,140 --> 00:18:02,290
Not likely, because it takes
a lot more than just a code

417
00:18:02,290 --> 00:18:03,683
to make the app store work.

418
00:18:04,650 --> 00:18:06,190
Now, like the uptime of a system,

419
00:18:06,190 --> 00:18:10,970
the less ephemeral or
the longer-live code is,

420
00:18:10,970 --> 00:18:15,310
the more likely it's gonna become a pet,

421
00:18:15,310 --> 00:18:18,760
accruing more value or
importance to the organization.

422
00:18:18,760 --> 00:18:21,780
You can see that there are
some items here in this list

423
00:18:21,780 --> 00:18:23,690
that haven't changed
in four to five years,

424
00:18:23,690 --> 00:18:27,580
like the license terms
or the code of conduct.

425
00:18:27,580 --> 00:18:29,040
Now, my methodology here would suggest

426
00:18:29,040 --> 00:18:33,090
that these are likely to be
pets and thus need protection,

427
00:18:33,090 --> 00:18:36,610
but maybe not necessarily
in the traditional CIA

428
00:18:36,610 --> 00:18:38,945
or a security sense, but rather
than a form of a cultural

429
00:18:38,945 --> 00:18:40,740
or legal standpoint.

430
00:18:40,740 --> 00:18:42,730
You need to protect the license terms

431
00:18:42,730 --> 00:18:44,820
and the code of conduct.

432
00:18:44,820 --> 00:18:46,860
The license terms through legal protection

433
00:18:46,860 --> 00:18:49,790
and code of conduct through
cultural protection.

434
00:18:49,790 --> 00:18:54,330
Anyway, lastly, all bets are
off if you have ephemeral code,

435
00:18:54,330 --> 00:18:56,419
but you put nonephemeral things in it

436
00:18:56,420 --> 00:18:58,610
like secrets and keys.

437
00:18:58,610 --> 00:19:00,879
I mean, those really should
never be in your source code,

438
00:19:00,880 --> 00:19:02,670
but if they are, you wanna make sure

439
00:19:02,670 --> 00:19:06,303
that those secrets and keys
are also ephemeral as well.

440
00:19:07,980 --> 00:19:11,320
Now, you might be saying, okay,
I get the idea behind DIE,

441
00:19:11,320 --> 00:19:13,040
but how do I actually implement it?

442
00:19:13,040 --> 00:19:14,149
What are some building blocks?

443
00:19:14,150 --> 00:19:16,950
Well, fortunately, there are
many building blocks out there,

444
00:19:16,950 --> 00:19:19,100
and here's a bunch of
projects that are part

445
00:19:19,100 --> 00:19:22,233
of the Cloud Native Computing
Foundation landscape.

446
00:19:23,780 --> 00:19:26,023
We can map them to the attributes of DIE.

447
00:19:30,150 --> 00:19:31,810
Some of these different projects

448
00:19:31,810 --> 00:19:33,139
take on one of the attributes

449
00:19:33,140 --> 00:19:35,600
and the others take on two or all three.

450
00:19:35,600 --> 00:19:38,620
And by the way, I might have
some of these mappings wrong,

451
00:19:38,620 --> 00:19:40,550
so if you have a suggestion
for a better mapping

452
00:19:40,550 --> 00:19:43,360
or other foundational
bricks that I can point out,

453
00:19:43,360 --> 00:19:44,280
certainly let me know.

454
00:19:44,280 --> 00:19:45,280
I'd love to hear it.

455
00:19:47,470 --> 00:19:51,400
Lastly, let's see how it maps
to specific types of assets

456
00:19:51,400 --> 00:19:52,600
that can be made to DIE.

457
00:19:53,910 --> 00:19:56,600
The vertical axis here
is based on a variation

458
00:19:56,600 --> 00:19:58,530
of my cyber defense matrix,

459
00:19:58,530 --> 00:20:00,559
where I break out the
different asset classes

460
00:20:00,559 --> 00:20:05,050
and how each of the projects
help us to achieve D, I, or E

461
00:20:05,050 --> 00:20:06,550
for each asset type.

462
00:20:06,550 --> 00:20:09,440
And let me just walk through
a couple, a few examples.

463
00:20:09,440 --> 00:20:11,970
Let's say, like, for example Firecracker.

464
00:20:11,970 --> 00:20:15,790
Firecracker helps create
secure and fast microVMs.

465
00:20:15,790 --> 00:20:18,070
Basically, ephemeral devices

466
00:20:18,070 --> 00:20:20,929
which are useful for serverless computing.

467
00:20:20,930 --> 00:20:22,323
Or immudb.

468
00:20:24,150 --> 00:20:26,220
Immutability is already in the name.

469
00:20:26,220 --> 00:20:28,130
It's an immutable database
that has the features

470
00:20:28,130 --> 00:20:29,883
of being also highly distributed.

471
00:20:31,150 --> 00:20:33,690
Things like Intoto and CodeNotary,

472
00:20:33,690 --> 00:20:35,790
they help secure the software supply chain

473
00:20:36,750 --> 00:20:38,890
through immutability, by
verifying that no hacker

474
00:20:38,890 --> 00:20:42,180
has inserted malicious
code in between steps

475
00:20:42,180 --> 00:20:43,293
for a software update.

476
00:20:44,210 --> 00:20:46,680
Sounds like a problem that
a green energy company

477
00:20:46,680 --> 00:20:47,813
had recently, right?

478
00:20:49,530 --> 00:20:53,879
For ephemeral identity,
there's these two companies

479
00:20:53,880 --> 00:20:56,250
I pointed out that aren't CNCF projects,

480
00:20:56,250 --> 00:20:57,270
but I wanted to include them here

481
00:20:57,270 --> 00:21:00,460
because it helps us understand
the class of technology

482
00:21:00,460 --> 00:21:02,410
that will be in this category.

483
00:21:02,410 --> 00:21:05,600
These companies support
just-in-time provisioning

484
00:21:05,600 --> 00:21:08,679
of privileged access to resources.

485
00:21:08,680 --> 00:21:10,990
After you do the work that you need to do,

486
00:21:10,990 --> 00:21:12,140
that access goes away.

487
00:21:12,140 --> 00:21:15,350
So, it's a highly ephemeral
access provisioning.

488
00:21:15,350 --> 00:21:19,209
As you can see, there's many
boxes that seem to be blank,

489
00:21:19,210 --> 00:21:22,480
and part of that's just
lack of knowledge on my end,

490
00:21:22,480 --> 00:21:24,240
but if you have ideas or thoughts in terms

491
00:21:24,240 --> 00:21:27,240
of what else can fill this, I
would love to hear it as well.

492
00:21:28,572 --> 00:21:30,429
And then here's how some AWS services

493
00:21:30,430 --> 00:21:32,450
maps into the DIE triad.

494
00:21:32,450 --> 00:21:34,220
Again, I might have some
of these mappings wrong,

495
00:21:34,220 --> 00:21:36,620
so let me know if you disagree
with any of the mappings

496
00:21:36,620 --> 00:21:38,793
or if I should add
anything that's missing.

497
00:21:40,260 --> 00:21:42,530
But anyway, just one other consideration

498
00:21:42,530 --> 00:21:46,740
is that just having these components

499
00:21:46,740 --> 00:21:49,110
doesn't mean that we'll have the ability

500
00:21:49,110 --> 00:21:51,899
to build a defensible wall.

501
00:21:51,900 --> 00:21:55,743
Before we were building
with mud bricks and straws,

502
00:21:56,640 --> 00:21:58,320
but now we at least
have super strong breaks

503
00:21:58,320 --> 00:22:00,919
and we can at least
have a fighting chance.

504
00:22:00,920 --> 00:22:03,020
But we can still build
a pretty crappy wall

505
00:22:03,020 --> 00:22:04,600
with super strong bricks.

506
00:22:04,600 --> 00:22:07,889
So, we need to ensure that
we have good design patterns

507
00:22:07,890 --> 00:22:09,890
to assemble these bricks properly.

508
00:22:09,890 --> 00:22:12,670
And I've yet to find a consolidated place

509
00:22:12,670 --> 00:22:14,840
where we can find these design patterns,

510
00:22:14,840 --> 00:22:16,459
but at least we're now cooking with gas

511
00:22:16,460 --> 00:22:20,023
and we have a way to build
more defensible infrastructure.

512
00:22:22,580 --> 00:22:24,210
Now, when it comes cloud infrastructure,

513
00:22:24,210 --> 00:22:26,210
I found an interesting pattern with DIE.

514
00:22:27,310 --> 00:22:30,919
It seems like the distribution
of pets and cattle shift

515
00:22:30,920 --> 00:22:34,100
in ways that align with the
shared responsibility model.

516
00:22:34,100 --> 00:22:37,260
Now, AWS published this
model to help us understand

517
00:22:38,210 --> 00:22:41,550
where AWS has responsibility
for security of the cloud

518
00:22:41,550 --> 00:22:43,889
and then customers having
responsibility for security

519
00:22:43,890 --> 00:22:44,840
in the cloud.

520
00:22:44,840 --> 00:22:48,810
Since AWS is responsible
for security of the cloud,

521
00:22:48,810 --> 00:22:51,580
the underlying components that
make up the cloud can be seen

522
00:22:51,580 --> 00:22:54,649
as cattle by AWS customers.

523
00:22:54,650 --> 00:22:57,750
Whether it's compute,
storage, database, networking,

524
00:22:57,750 --> 00:23:00,800
hardware, even whole regions
and availability zones.

525
00:23:00,800 --> 00:23:03,572
At the macro level, they're all cattle.

526
00:23:04,470 --> 00:23:06,260
From the customer standpoint,

527
00:23:06,260 --> 00:23:08,470
they're essentially disposable.

528
00:23:08,470 --> 00:23:11,333
They manifest the
attributes of the DIE triad.

529
00:23:12,330 --> 00:23:15,439
However, as we move up
to the part of the model

530
00:23:15,440 --> 00:23:17,570
where the customers are
responsible for security,

531
00:23:17,570 --> 00:23:19,899
we start seeing more pets.

532
00:23:19,900 --> 00:23:22,893
And our goal should be to
try to keep them like cattle.

533
00:23:23,960 --> 00:23:25,370
Over time, and with tools

534
00:23:25,370 --> 00:23:27,860
like Cloud Security Posture Management

535
00:23:27,860 --> 00:23:30,763
and Cloud Workload Protection Platform,

536
00:23:31,930 --> 00:23:33,770
we can start our journey
towards higher levels

537
00:23:33,770 --> 00:23:35,080
of cloud maturity,

538
00:23:35,080 --> 00:23:37,290
so that we end up with
more cattle in the cloud,

539
00:23:37,290 --> 00:23:39,920
and for the pets that
we do have in the cloud,

540
00:23:39,920 --> 00:23:41,770
that they're actually secure.

541
00:23:41,770 --> 00:23:43,240
And over the longer
term, we should continue

542
00:23:43,240 --> 00:23:47,010
to make design decisions that
aim to have our environment

543
00:23:47,010 --> 00:23:49,890
in the cloud be as much
as possible, all cattle.

544
00:23:49,890 --> 00:23:52,180
Again, like I said, I don't
think we'll ever get there

545
00:23:52,180 --> 00:23:54,380
because I think we'll
always have some pets,

546
00:23:56,090 --> 00:23:58,990
but having such a goal helps
us make better design choices

547
00:24:00,710 --> 00:24:02,760
while minimizing the burdens that we have

548
00:24:03,710 --> 00:24:05,190
that we would otherwise have to face

549
00:24:05,190 --> 00:24:06,790
if we end up with too many pets.

550
00:24:08,120 --> 00:24:11,179
And I think the proportion
of pets that we may find

551
00:24:11,180 --> 00:24:12,670
could actually reflect the maturity

552
00:24:12,670 --> 00:24:16,750
of an organization's journey
or adoption of the cloud,

553
00:24:16,750 --> 00:24:19,760
where fewer and fewer assets resemble pets

554
00:24:19,760 --> 00:24:21,460
and look more like cattle instead.

555
00:24:22,820 --> 00:24:23,760
And I think it's noteworthy

556
00:24:23,760 --> 00:24:28,110
that the customer data sits
at the top of this model.

557
00:24:28,110 --> 00:24:32,300
Customer data seems to resist
being turned into cattle.

558
00:24:32,300 --> 00:24:33,960
But I don't think that
will be forever the case

559
00:24:33,960 --> 00:24:35,030
because I think there are a number

560
00:24:35,030 --> 00:24:38,879
of interesting privacy
enhancing technologies

561
00:24:38,880 --> 00:24:41,113
which ironically enough
has the acronym PET

562
00:24:42,000 --> 00:24:45,233
that allows us to turn customer
data from pets into cattle.

563
00:24:46,260 --> 00:24:50,210
And these tools, these privacy
enhancing technologies,

564
00:24:50,210 --> 00:24:52,220
include things like differential privacy,

565
00:24:52,220 --> 00:24:55,410
homomorphic encryption,
secure multiparty computation,

566
00:24:55,410 --> 00:24:57,990
trusted execution environments,
federated learning.

567
00:24:57,990 --> 00:25:00,440
You may have heard all these
different things in the past,

568
00:25:00,440 --> 00:25:02,690
but now imagine them in the context

569
00:25:02,690 --> 00:25:05,570
of being able to use these technologies

570
00:25:05,570 --> 00:25:07,780
to help you manage your data pets

571
00:25:07,780 --> 00:25:11,800
and enable them to be represented
as data cattle instead.

572
00:25:11,800 --> 00:25:14,720
And I think that this is
the future of data security.

573
00:25:14,720 --> 00:25:16,080
Making data more like cattle,

574
00:25:16,080 --> 00:25:18,740
so that we don't even
need to protect it at all.

575
00:25:18,740 --> 00:25:20,187
We can instead let it DIE.

576
00:25:22,400 --> 00:25:24,040
These privacy enhancing technologies

577
00:25:24,040 --> 00:25:26,690
I think are highly aligned
to the DIE principles,

578
00:25:26,690 --> 00:25:30,660
and it enables us to
treat data like cattle.

579
00:25:30,660 --> 00:25:33,530
Not implementing DIE for
data would then require us

580
00:25:33,530 --> 00:25:37,740
to have to essentially
CIA those data pets.

581
00:25:37,740 --> 00:25:39,960
And over time, they become a burden.

582
00:25:39,960 --> 00:25:41,680
And in fact, really a punishment

583
00:25:41,680 --> 00:25:44,770
when data doesn't align with DIE.

584
00:25:44,770 --> 00:25:47,812
The punishment coming through
things like GDPR and CCPA.

585
00:25:51,330 --> 00:25:54,860
Now, DIE done properly I
think radically changes

586
00:25:54,860 --> 00:25:57,409
how the security team
relates to the business.

587
00:25:57,410 --> 00:26:00,070
And the intersection between the DIE triad

588
00:26:00,070 --> 00:26:02,790
and the OODA loop can
help us understand why.

589
00:26:02,790 --> 00:26:05,480
Now, traditionally, when it
comes to the relationship

590
00:26:05,480 --> 00:26:07,380
between defenders and attackers,

591
00:26:07,380 --> 00:26:08,830
the defenders have a OODA loop

592
00:26:08,830 --> 00:26:12,540
that is usually oftentimes
larger than the attackers.

593
00:26:12,540 --> 00:26:15,030
And that's unfortunately
because the attackers

594
00:26:15,030 --> 00:26:18,080
usually have first move or advantage.

595
00:26:18,080 --> 00:26:20,270
However, there is another entity

596
00:26:20,270 --> 00:26:23,070
that's able to move
faster than the attacker,

597
00:26:23,070 --> 00:26:24,270
and that's the business.

598
00:26:25,420 --> 00:26:30,010
Unfortunately, the
security team oftentimes

599
00:26:30,010 --> 00:26:33,420
layers on many CIA oriented restrictions

600
00:26:33,420 --> 00:26:36,160
that result in the business's
OODA loop growing larger

601
00:26:36,160 --> 00:26:37,950
than the attackers.

602
00:26:37,950 --> 00:26:42,700
In my view, DIE enables us to
restore the business OODA loop

603
00:26:42,700 --> 00:26:44,700
back its natural speed.

604
00:26:44,700 --> 00:26:49,010
And DIE design patterns enable
us to shorten the OODA loop.

605
00:26:50,298 --> 00:26:54,340
Now, I think the presence
of shadow IT or shadow SaaS

606
00:26:54,340 --> 00:26:57,770
is a reflection of the
difference in the OODA loop

607
00:26:57,770 --> 00:27:00,770
between the business and
the CIO and the CISO.

608
00:27:00,770 --> 00:27:02,903
Where security is able to embrace DIE,

609
00:27:07,470 --> 00:27:09,800
we can decrease this gap
between the OODA loops

610
00:27:09,800 --> 00:27:12,639
of the business and the CIO, CISO,

611
00:27:12,640 --> 00:27:16,160
and thus find ways to
reduce this, shadow IT.

612
00:27:16,160 --> 00:27:19,450
But it also enables us to increase the gap

613
00:27:19,450 --> 00:27:22,273
between the OODA loop of the
business and the attacker,

614
00:27:23,180 --> 00:27:25,630
thereby returning the
advantage to the attacker.

615
00:27:25,630 --> 00:27:27,460
And I think this is why Ryan McGeehan

616
00:27:27,460 --> 00:27:29,790
who advises a lot of startups,

617
00:27:29,790 --> 00:27:34,300
that generally build cattle
in cloud native environments.

618
00:27:34,300 --> 00:27:38,090
Why Ryan says that large
swerves of security risk

619
00:27:38,090 --> 00:27:39,270
are simply being eliminated

620
00:27:39,270 --> 00:27:42,673
because they're embracing
the DIE-like concepts.

621
00:27:45,160 --> 00:27:47,646
Now, when it comes to
the function of recover,

622
00:27:47,646 --> 00:27:50,950
some of us may say, you know, in the 2020s

623
00:27:50,950 --> 00:27:52,950
we're looking for new solutions, right?

624
00:27:52,950 --> 00:27:54,850
Well, in the function of recover,

625
00:27:54,850 --> 00:27:57,980
you can argue that we've
had technologies like Backup

626
00:27:59,200 --> 00:28:00,090
that helps us recover,

627
00:28:00,090 --> 00:28:02,949
and we've had this for a long, long time.

628
00:28:02,950 --> 00:28:05,830
But I would argue that
Backup is an example

629
00:28:05,830 --> 00:28:07,510
of an old design pattern.

630
00:28:07,510 --> 00:28:10,010
It's an old way of doing recover.

631
00:28:10,010 --> 00:28:12,430
And the old approach impedes the business.

632
00:28:12,430 --> 00:28:14,253
It doesn't add much business value.

633
00:28:15,410 --> 00:28:18,230
This is a situation where
it causes the OODA loop

634
00:28:18,230 --> 00:28:20,073
of the business to increase.

635
00:28:20,960 --> 00:28:22,850
I believe that the new approach

636
00:28:22,850 --> 00:28:24,730
enables us to create business value

637
00:28:24,730 --> 00:28:27,280
and ultimately adds to the top line.

638
00:28:27,280 --> 00:28:30,379
The DIE approach sparks joy,

639
00:28:30,380 --> 00:28:34,220
the CIA approach evokes dread.

640
00:28:34,220 --> 00:28:36,310
I mean, no one wants to pay for backup,

641
00:28:36,310 --> 00:28:39,120
but people are delighted to
be able to see their photos

642
00:28:39,120 --> 00:28:42,689
on any device that they own.

643
00:28:42,690 --> 00:28:43,780
Some people are willing to pay

644
00:28:43,780 --> 00:28:46,710
for what essentially is backup via iCloud.

645
00:28:46,710 --> 00:28:49,970
But the business proposition
is to be able to, again,

646
00:28:49,970 --> 00:28:53,060
have your photos on any
device anytime you want

647
00:28:53,060 --> 00:28:54,190
and people are willing to pay for that.

648
00:28:54,190 --> 00:28:55,600
They don't see that as a dread.

649
00:28:55,600 --> 00:28:56,840
They don't see that as burdensome,

650
00:28:56,840 --> 00:28:59,949
they see that as something that
is essential to their lives,

651
00:28:59,950 --> 00:29:01,480
and again, this sparks joy.

652
00:29:01,480 --> 00:29:03,820
I think DIE done properly,

653
00:29:03,820 --> 00:29:06,429
moves the business towards
models that accelerate business

654
00:29:06,430 --> 00:29:07,330
and not impede it.

655
00:29:10,910 --> 00:29:14,810
So, to summarize, I think the
next era in IT and security

656
00:29:14,810 --> 00:29:17,520
we're gonna see these irreversible attacks

657
00:29:17,520 --> 00:29:19,600
that challenge our ability to recover

658
00:29:19,600 --> 00:29:21,622
and undermine our ability to recover.

659
00:29:22,640 --> 00:29:23,680
Hopefully, I've been able to show you

660
00:29:23,680 --> 00:29:25,780
that being able to do more CIA,

661
00:29:25,780 --> 00:29:28,070
basically doing protect,
detect, and respond

662
00:29:28,070 --> 00:29:31,020
isn't going to address recover scenarios.

663
00:29:31,020 --> 00:29:34,213
They're insufficient
against those scenarios

664
00:29:34,213 --> 00:29:37,060
that essentially undermine
our ability to recover.

665
00:29:37,060 --> 00:29:41,740
So, the best countermeasure is
really to favor DIE over CIA.

666
00:29:41,740 --> 00:29:45,490
And the way to do that is
to be able to also avoid

667
00:29:45,490 --> 00:29:49,170
creating new pets that require more CIA,

668
00:29:49,170 --> 00:29:51,100
and instead try to promote
the creation of cattle

669
00:29:51,100 --> 00:29:52,639
that's built to die.

670
00:29:52,640 --> 00:29:57,640
And so, my mantra is, death
to CIA and long live DIE.

671
00:30:00,320 --> 00:30:02,370
So, a couple of thoughts that
I would have for you guys

672
00:30:02,370 --> 00:30:03,923
in terms of how you can apply DIE,

673
00:30:03,923 --> 00:30:05,870
some of these are from last year as well,

674
00:30:05,870 --> 00:30:07,570
but if you haven't done them last year,

675
00:30:07,570 --> 00:30:08,842
well, now's your chance.

676
00:30:10,130 --> 00:30:11,280
You should be able to,

677
00:30:11,280 --> 00:30:14,190
some of the examples I gave in
terms of how you measure DIE,

678
00:30:14,190 --> 00:30:15,410
these are things that
you should be able to do

679
00:30:15,410 --> 00:30:17,330
for your own organization.

680
00:30:17,330 --> 00:30:19,280
Go and collect them and share them

681
00:30:19,280 --> 00:30:21,450
if you're willing to do so.

682
00:30:21,450 --> 00:30:24,000
And then create this curve
that you saw previously.

683
00:30:25,260 --> 00:30:27,590
Then in the next three months,

684
00:30:27,590 --> 00:30:29,000
track the movement of that curve.

685
00:30:29,000 --> 00:30:32,620
See what causes that beta value to shift.

686
00:30:32,620 --> 00:30:33,810
What are the policies?

687
00:30:33,810 --> 00:30:36,860
What are the actions that
your organization does?

688
00:30:36,860 --> 00:30:39,209
What are the things that
your organization does

689
00:30:40,540 --> 00:30:43,793
to cause that curve to move
in that particular direction?

690
00:30:45,110 --> 00:30:46,870
Again, if you want more resiliency,

691
00:30:46,870 --> 00:30:49,142
then you want a lower B value, beta value.

692
00:30:50,890 --> 00:30:52,440
And as I mentioned earlier,

693
00:30:52,440 --> 00:30:55,740
we don't really have a great
catalog of design patterns

694
00:30:58,341 --> 00:31:00,469
with these DIE bricks that we have,

695
00:31:00,470 --> 00:31:02,290
we need better design patterns.

696
00:31:02,290 --> 00:31:04,960
We need to understand how
to assemble these well.

697
00:31:04,960 --> 00:31:09,040
And so, start now, start
collecting those design patterns

698
00:31:09,040 --> 00:31:11,050
see what works, and again,
hopefully share them

699
00:31:11,050 --> 00:31:13,040
with the community at large.

700
00:31:13,040 --> 00:31:15,240
And then over the longer period,

701
00:31:15,240 --> 00:31:18,300
find ways to basically
discourage pet creation.

702
00:31:18,300 --> 00:31:20,120
That will happen naturally on its own

703
00:31:20,120 --> 00:31:24,020
if you don't put any controls against it.

704
00:31:24,020 --> 00:31:28,070
So, just be mindful of when
new pets are being created

705
00:31:28,070 --> 00:31:31,540
unknowingly and just be deliberate
when you are creating one

706
00:31:31,540 --> 00:31:34,503
so that you have the resources
to take care of that pet.

707
00:31:35,480 --> 00:31:37,890
And along the way, if you find new ways

708
00:31:37,890 --> 00:31:40,510
to avoid pets at all,

709
00:31:40,510 --> 00:31:42,940
then again, discover those, catalog them

710
00:31:42,940 --> 00:31:45,840
and make sure that they
become the preferred way

711
00:31:45,840 --> 00:31:48,149
for your teams to implement

712
00:31:48,150 --> 00:31:49,900
some of the systems that they have.

713
00:31:51,180 --> 00:31:53,410
And with that, here's how to contact me,

714
00:31:53,410 --> 00:31:55,640
and if you have any other questions.

715
00:31:55,640 --> 00:31:56,640
Thank you very much.

