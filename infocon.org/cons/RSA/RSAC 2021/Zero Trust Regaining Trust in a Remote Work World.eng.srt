1
00:00:01,740 --> 00:00:02,573
- Hello everyone.

2
00:00:02,573 --> 00:00:06,300
Thank you for joining
this session at RSA 2021.

3
00:00:06,300 --> 00:00:07,410
I'm Macy Cronkrite,

4
00:00:07,410 --> 00:00:09,810
Principal Security Architect at Splunk.

5
00:00:09,810 --> 00:00:11,967
You can find me on Twitter @macycron.

6
00:00:12,890 --> 00:00:14,510
Today we are discussing what is one

7
00:00:14,510 --> 00:00:17,990
of the most exciting industry
terms this year, zero trust.

8
00:00:17,990 --> 00:00:20,009
I'll be sharing how you can start

9
00:00:20,010 --> 00:00:21,940
to break down and approach zero trust

10
00:00:21,940 --> 00:00:24,260
with some practical
actions that you can take

11
00:00:24,260 --> 00:00:27,100
for implementing zero
trust in your own remote

12
00:00:27,100 --> 00:00:30,150
and hybrid environments so
that you can regain some trust

13
00:00:30,150 --> 00:00:31,849
in this changing work environment.

14
00:00:34,466 --> 00:00:36,240
So a quick overview.

15
00:00:36,240 --> 00:00:37,530
What is zero trust?

16
00:00:37,530 --> 00:00:39,160
Why are we talking about it now?

17
00:00:39,160 --> 00:00:41,608
How do we approach solving this?

18
00:00:41,608 --> 00:00:44,099
Some practical things you can apply

19
00:00:44,100 --> 00:00:46,897
in your own environment after this talk.

20
00:00:46,897 --> 00:00:49,873
Some tips and tricks, and
of course, references.

21
00:00:49,873 --> 00:00:54,110
And please feel free at
any point to ask questions.

22
00:00:54,110 --> 00:00:56,572
I'll be joining you live in the chat today

23
00:00:56,572 --> 00:01:00,696
even though I'm joining you
via recording right now.

24
00:01:00,696 --> 00:01:04,163
At a high level, we're gonna start to talk

25
00:01:04,163 --> 00:01:09,149
about why zero trust is
suddenly on our radar now.

26
00:01:09,150 --> 00:01:11,080
We'll go into some

27
00:01:11,080 --> 00:01:13,160
of the frameworks and
ideas that you'll need

28
00:01:13,160 --> 00:01:16,100
to approach solving
this zero trust problem.

29
00:01:16,100 --> 00:01:20,015
And we'll look at some of the
tips and tricks that I've seen

30
00:01:20,015 --> 00:01:24,060
in the field that may be helpful to you.

31
00:01:24,060 --> 00:01:25,850
So first off, zero trust.

32
00:01:25,850 --> 00:01:26,951
What is it?

33
00:01:26,951 --> 00:01:31,951
Well, 2020 kind of pushed us further away

34
00:01:32,319 --> 00:01:34,601
from the traditional security perimeter

35
00:01:34,601 --> 00:01:38,733
out of our known networks
than we'd ever seen before.

36
00:01:40,100 --> 00:01:42,681
Most IT organizations were suddenly forced

37
00:01:42,682 --> 00:01:47,554
to defend endpoints and
new unknown networks.

38
00:01:47,554 --> 00:01:49,120
This shift meant

39
00:01:49,120 --> 00:01:52,673
that security teams can no
longer defend endpoints based

40
00:01:52,673 --> 00:01:57,380
on the assumption that they
were in known physical networks

41
00:01:57,380 --> 00:02:01,899
behind perimeter security,
behind physical security

42
00:02:01,899 --> 00:02:06,400
and even the same subnets
or networks applied.

43
00:02:06,400 --> 00:02:07,250
So this meant

44
00:02:07,250 --> 00:02:12,050
that the security tools need
different reference data

45
00:02:12,050 --> 00:02:14,450
to identify users and devices.

46
00:02:14,450 --> 00:02:16,000
And security frameworks

47
00:02:16,000 --> 00:02:19,575
that we had used need
their assumptions updated

48
00:02:19,575 --> 00:02:22,539
to reassess the risk that
we're undertaking now

49
00:02:22,539 --> 00:02:25,040
that users are coming in
from all different sorts

50
00:02:25,040 --> 00:02:28,287
of locations, new devices, new networks.

51
00:02:28,288 --> 00:02:31,923
In a nutshell, before the
concept of zero trust,

52
00:02:31,923 --> 00:02:34,210
there were always assumptions made

53
00:02:34,210 --> 00:02:36,130
about the status of the network.

54
00:02:36,130 --> 00:02:40,260
Users were trusted that when
they were in certain networks

55
00:02:40,260 --> 00:02:41,799
they were safe because they were

56
00:02:41,800 --> 00:02:44,710
inside a certain physical security zone.

57
00:02:44,710 --> 00:02:47,943
For example, joining a
corporate building wifi

58
00:02:47,943 --> 00:02:50,860
made assumptions that you
were inside the building

59
00:02:50,860 --> 00:02:52,427
at least by proximity.

60
00:02:52,427 --> 00:02:56,530
Nowadays users joining
from remote networks,

61
00:02:56,530 --> 00:02:58,920
the same assumption can't be made.

62
00:02:58,920 --> 00:03:01,510
So we need to take an approach
that verifies the user

63
00:03:01,510 --> 00:03:05,603
and the device more than
once and in more than one way

64
00:03:05,604 --> 00:03:07,739
and every time they try

65
00:03:07,739 --> 00:03:10,495
and access a resource on the network.

66
00:03:10,495 --> 00:03:12,870
Essentially what we're trying to do

67
00:03:12,870 --> 00:03:16,525
with zero trust in a nutshell
is prevent lateral movement.

68
00:03:16,525 --> 00:03:20,690
So that's a theme we can
take through this talk.

69
00:03:20,690 --> 00:03:24,060
So again, the end points that we're trying

70
00:03:24,060 --> 00:03:27,648
to defend have completely
moved off of the known map

71
00:03:27,648 --> 00:03:29,133
where we were.

72
00:03:29,133 --> 00:03:34,133
The security tools like SIM
tools that we often rely on

73
00:03:34,515 --> 00:03:36,820
usually have reference data

74
00:03:36,820 --> 00:03:41,320
in them that have
subnets, networks, users,

75
00:03:41,320 --> 00:03:45,755
context about these networks
that may not apply anymore.

76
00:03:45,755 --> 00:03:48,091
And when we're talking about zero trust,

77
00:03:48,092 --> 00:03:50,696
we have another mantra here.

78
00:03:50,696 --> 00:03:51,944
Instead of trust

79
00:03:51,944 --> 00:03:54,835
but verify it's never
trust, always verify.

80
00:03:54,836 --> 00:03:58,935
So we're really flipping
around our assumptions here.

81
00:03:58,935 --> 00:04:01,930
So where did this come from?

82
00:04:01,930 --> 00:04:04,301
John Kindervag, VP and Principal Analyst

83
00:04:04,301 --> 00:04:09,301
at Forrester Research
identified this in 2009.

84
00:04:10,680 --> 00:04:12,714
And he developed this framework

85
00:04:12,714 --> 00:04:16,072
which identified six pillars.

86
00:04:17,180 --> 00:04:18,339
People and users.

87
00:04:18,339 --> 00:04:19,921
Sometimes we call this identities.

88
00:04:19,921 --> 00:04:22,310
A lot of times we call it identities.

89
00:04:22,310 --> 00:04:23,270
Devices.

90
00:04:23,270 --> 00:04:25,697
Sometimes we call this assets.

91
00:04:25,697 --> 00:04:28,962
Networks which need to be further isolated

92
00:04:28,962 --> 00:04:31,818
and segmented to then
simply trusting anyone

93
00:04:31,818 --> 00:04:35,101
on the network because they're
on an internal network.

94
00:04:35,101 --> 00:04:38,555
We're used to the concept of a DMZ.

95
00:04:38,555 --> 00:04:43,555
This has taken the DMZ internal,
everything is a DMZ now.

96
00:04:43,690 --> 00:04:46,231
Everything is you versus the outside.

97
00:04:46,231 --> 00:04:50,700
So trust or readily don't trust anything

98
00:04:50,700 --> 00:04:52,550
that you're connecting

99
00:04:52,550 --> 00:04:55,040
to without going through some sort

100
00:04:55,040 --> 00:04:59,200
of zero trust policy that
looks at these six pillars.

101
00:04:59,200 --> 00:05:00,810
So continuing on we've talking

102
00:05:00,810 --> 00:05:02,640
about people and users.

103
00:05:02,640 --> 00:05:04,881
Like I said sometimes
they're called identities.

104
00:05:04,881 --> 00:05:08,250
They're not always people
too, and we'll talk

105
00:05:08,250 --> 00:05:11,040
about this in further detail
as we get into the talk

106
00:05:11,040 --> 00:05:14,280
but there's for every human user account,

107
00:05:14,280 --> 00:05:17,467
there's probably three or four machine

108
00:05:17,467 --> 00:05:22,130
or tokens or service accounts
that are brokering access

109
00:05:22,130 --> 00:05:24,409
for that user's activity.

110
00:05:24,410 --> 00:05:28,147
So we have to think about
more than just the human users

111
00:05:28,147 --> 00:05:30,190
as well as devices.

112
00:05:30,190 --> 00:05:32,177
So we often think about devices

113
00:05:32,177 --> 00:05:34,775
as perhaps just the end point.

114
00:05:34,775 --> 00:05:38,080
In our more complex infrastructures

115
00:05:38,080 --> 00:05:41,205
especially with multifactor,
there's perhaps two devices

116
00:05:41,206 --> 00:05:44,893
in play here, or at least
two device pathways.

117
00:05:45,800 --> 00:05:49,107
So those are sort of foundations,
the first three pillars.

118
00:05:49,107 --> 00:05:51,250
Next, we wanna think

119
00:05:51,250 --> 00:05:56,082
about workloads or sometimes
what we call applications.

120
00:05:56,082 --> 00:05:59,380
And this is where it gets
really tricky for zero trust.

121
00:05:59,380 --> 00:06:02,590
I think this is where
we're all comfortable

122
00:06:02,590 --> 00:06:04,450
understanding network boundaries,

123
00:06:04,450 --> 00:06:08,250
device IP addresses, user account names.

124
00:06:08,250 --> 00:06:10,340
But now when we're talking
about applications,

125
00:06:10,340 --> 00:06:13,008
this is where zero trust gets hard.

126
00:06:13,009 --> 00:06:16,920
Because applications have
complex offering boundaries

127
00:06:16,920 --> 00:06:19,410
between other network resources.

128
00:06:19,410 --> 00:06:23,938
And especially complex modern
enterprise applications

129
00:06:23,938 --> 00:06:26,920
will more than likely span

130
00:06:26,920 --> 00:06:30,398
across multiple vendors,
multiple providers,

131
00:06:30,398 --> 00:06:34,663
multiple cloud and different
data center back ends.

132
00:06:34,663 --> 00:06:39,663
So we can't assume an
application is just one thing.

133
00:06:39,820 --> 00:06:41,892
It's not Microsoft Excel.

134
00:06:41,892 --> 00:06:43,796
I'm thinking payroll,

135
00:06:43,797 --> 00:06:48,797
I'm thinking user portal, shopping online.

136
00:06:49,518 --> 00:06:51,890
There's lots of different interconnects.

137
00:06:51,890 --> 00:06:55,255
And so when we think about an application,

138
00:06:55,255 --> 00:06:57,588
perhaps using the word workload expands

139
00:06:57,588 --> 00:06:59,790
that so our thinking

140
00:06:59,790 --> 00:07:03,880
is more across complex
multi-vendor applications.

141
00:07:03,880 --> 00:07:08,880
Hand in hand with workloads is the data

142
00:07:09,180 --> 00:07:10,440
that's being consumed

143
00:07:10,440 --> 00:07:13,710
by the workloads and applications.

144
00:07:13,710 --> 00:07:15,099
So having data policies

145
00:07:15,100 --> 00:07:18,900
like encryption will help
provide additional protections

146
00:07:18,900 --> 00:07:21,102
to this part of the network.

147
00:07:21,992 --> 00:07:25,007
Finally, another pillar of zero trust

148
00:07:25,007 --> 00:07:29,260
and this is moving away
from the observability parts

149
00:07:29,260 --> 00:07:31,840
about zero trust and
more into our response

150
00:07:31,840 --> 00:07:36,719
and reaction is we need tools
that can help us do the work

151
00:07:36,720 --> 00:07:39,630
of zero trust in an automated fashion.

152
00:07:39,630 --> 00:07:41,323
There's simply too much

153
00:07:41,323 --> 00:07:45,123
in modern applications and
modern enterprise design

154
00:07:45,123 --> 00:07:49,620
for humans to make these
decisions on an ad hoc

155
00:07:49,620 --> 00:07:52,420
our queue or ticket like basis.

156
00:07:52,420 --> 00:07:53,496
It just isn't possible,

157
00:07:53,496 --> 00:07:58,496
especially since the pandora's
boxes are been let out.

158
00:07:59,147 --> 00:08:02,050
We are inevitably going to be trying

159
00:08:02,050 --> 00:08:04,935
to retrofit the concept of zero trust

160
00:08:04,935 --> 00:08:08,683
into an already existing
mission critical application.

161
00:08:08,683 --> 00:08:13,683
So we're not going to be
able to fund or invest

162
00:08:15,380 --> 00:08:18,657
in additional human workload
to provide the same service

163
00:08:18,657 --> 00:08:21,680
just to do better security.

164
00:08:21,680 --> 00:08:23,600
So we need a better story there.

165
00:08:23,600 --> 00:08:24,433
And to do that,

166
00:08:24,433 --> 00:08:28,056
we're gonna need tools like
automation and orchestration.

167
00:08:28,056 --> 00:08:31,000
And it's just this complex nature

168
00:08:31,000 --> 00:08:32,380
of modern IT

169
00:08:32,380 --> 00:08:35,323
that we're gonna need
this more sophisticated

170
00:08:35,323 --> 00:08:38,855
detection capability through automation.

171
00:08:38,855 --> 00:08:42,683
And we're gonna need to orchestrate

172
00:08:42,683 --> 00:08:47,684
across multiple different
platforms, devices, applications,

173
00:08:48,870 --> 00:08:53,280
systems, vendors, the results
of our policy decisions.

174
00:08:53,280 --> 00:08:56,543
So let me just make a
tangible example of that.

175
00:08:56,543 --> 00:08:58,704
I have an shopping application

176
00:08:58,704 --> 00:09:03,170
that crosses across multiple
multiple payment vendors.

177
00:09:03,170 --> 00:09:06,646
Let's say my app accepts
PayPal, Venmo, Bitcoin,

178
00:09:06,646 --> 00:09:11,646
and I'm running on Azure, Amazon and GCP.

179
00:09:12,670 --> 00:09:13,699
Now I have a breach,

180
00:09:13,700 --> 00:09:16,756
I have a decision point where
my automation has decided

181
00:09:16,756 --> 00:09:19,300
that this person or user

182
00:09:19,300 --> 00:09:21,920
or device or network is no longer trusted

183
00:09:21,920 --> 00:09:26,920
and I need to make a quick
response via automation.

184
00:09:26,950 --> 00:09:29,768
So automation works
against one application

185
00:09:29,768 --> 00:09:33,920
or tool orchestrates multiple automations

186
00:09:35,407 --> 00:09:37,990
across multiple platforms.

187
00:09:37,990 --> 00:09:38,910
So that's a little bit

188
00:09:38,910 --> 00:09:41,640
of the difference between
automation and orchestration.

189
00:09:41,640 --> 00:09:44,279
We're gonna need both because the nature

190
00:09:44,279 --> 00:09:49,279
of modern IT is this
multi-cloud, multi-vendor,

191
00:09:50,100 --> 00:09:51,500
multi data center design.

192
00:09:51,500 --> 00:09:53,227
So we're gonna need multiple tools

193
00:09:53,227 --> 00:09:56,346
in our toolkit to achieve this.

194
00:09:56,346 --> 00:10:00,240
And without an automated
approach to zero trust,

195
00:10:00,240 --> 00:10:01,110
there'd be no way

196
00:10:01,110 --> 00:10:04,130
we could provide the same
near real-time experience

197
00:10:04,130 --> 00:10:06,270
that our users have come to expect

198
00:10:06,270 --> 00:10:08,149
in the application they use today.

199
00:10:08,149 --> 00:10:09,740
So that's gonna be one

200
00:10:09,740 --> 00:10:11,847
of the key capabilities

201
00:10:11,847 --> 00:10:15,848
that we're gonna need
to achieve zero trust.

202
00:10:15,848 --> 00:10:20,848
Finally, zero trust is
based on information.

203
00:10:21,350 --> 00:10:23,374
And it's based on information

204
00:10:23,374 --> 00:10:27,033
around the people, devices,
networks, and workloads

205
00:10:27,033 --> 00:10:30,830
and how those four things
interact with each other.

206
00:10:30,830 --> 00:10:33,146
So we're gonna need
visibility and analytics.

207
00:10:33,146 --> 00:10:34,779
One of the key challenges

208
00:10:34,779 --> 00:10:37,667
with the implementation and operalization

209
00:10:37,667 --> 00:10:39,564
of a zero trust program

210
00:10:39,564 --> 00:10:42,300
will be gaining this needed visibility

211
00:10:42,300 --> 00:10:45,849
and to key data sources, logs, and events.

212
00:10:45,850 --> 00:10:50,450
And where those log sources live,

213
00:10:50,450 --> 00:10:52,320
they'll need to be normalized

214
00:10:52,320 --> 00:10:55,560
and brought into analytic capabilities.

215
00:10:55,560 --> 00:10:56,849
So what do I mean by that?

216
00:10:56,850 --> 00:11:01,137
We need a way to bring the
logs and data and events

217
00:11:01,137 --> 00:11:05,150
from various cloud platforms,
various applications,

218
00:11:05,150 --> 00:11:09,574
customer applications, user
traffic, network traffic

219
00:11:09,574 --> 00:11:12,329
and we need to bring them
into an analytical platform

220
00:11:12,329 --> 00:11:17,000
which will allow us to do
baselining and find anomalies.

221
00:11:17,000 --> 00:11:19,428
And we'll talk about that more later

222
00:11:19,428 --> 00:11:22,439
how to actually get those
analytics and visibility

223
00:11:22,439 --> 00:11:24,146
but you'll need a platform.

224
00:11:24,147 --> 00:11:28,320
So these last two pillars
that I've been speaking a lot

225
00:11:28,320 --> 00:11:31,215
about are really different
from the first four pillars.

226
00:11:31,215 --> 00:11:34,468
The first four pillars are
things that exist today

227
00:11:34,468 --> 00:11:36,060
in your network.

228
00:11:36,060 --> 00:11:37,411
These are just facts.

229
00:11:37,411 --> 00:11:41,189
What we need, the second
two pillars are what we use

230
00:11:41,189 --> 00:11:44,209
to analyze those facts and respond

231
00:11:44,210 --> 00:11:46,663
to those facts in a
zero trust environment.

232
00:11:51,628 --> 00:11:55,059
So there are a couple of
fundamental assertions

233
00:11:55,059 --> 00:11:56,409
in zero trust

234
00:11:56,409 --> 00:12:00,257
and I've tried to size them down to five.

235
00:12:00,257 --> 00:12:04,349
We can assume that the
network is always hostile.

236
00:12:04,350 --> 00:12:06,150
This is like what I was saying earlier

237
00:12:06,150 --> 00:12:09,790
with the DMZ.

238
00:12:09,790 --> 00:12:10,959
We used to always think

239
00:12:10,960 --> 00:12:13,500
about the DMZ as hostile.

240
00:12:13,500 --> 00:12:15,120
Now we have to think about everything

241
00:12:15,120 --> 00:12:17,448
outside of our own application as hostile,

242
00:12:17,448 --> 00:12:21,976
the device we're on, to
the network we inhabit.

243
00:12:21,976 --> 00:12:24,790
This means that you cannot allow devices

244
00:12:24,790 --> 00:12:27,110
on the same network to freely communicate

245
00:12:27,110 --> 00:12:30,240
with each other or use
resources on the network

246
00:12:30,240 --> 00:12:32,610
because they may have
already been compromised.

247
00:12:32,610 --> 00:12:35,359
Again, as I mentioned earlier,

248
00:12:35,359 --> 00:12:39,049
we're trying to prevent
lateral movement effectively.

249
00:12:39,049 --> 00:12:42,170
So when you make the assumption

250
00:12:42,170 --> 00:12:45,339
that the network is not to be trusted,

251
00:12:45,340 --> 00:12:46,931
you're going to do certain things

252
00:12:46,931 --> 00:12:49,780
such as encrypt traffic over the wire,

253
00:12:49,780 --> 00:12:51,339
having encrypted communications.

254
00:12:51,339 --> 00:12:55,510
You're going to have no
inherent allow lists.

255
00:12:55,510 --> 00:12:57,939
Let's say from this
network to this network

256
00:12:57,940 --> 00:12:59,500
just allow the sport.

257
00:12:59,500 --> 00:13:02,150
You're gonna have a
more fine-grained rules.

258
00:13:02,150 --> 00:13:04,708
So we're talking about
host based firewalls,

259
00:13:04,708 --> 00:13:06,547
We're talking about encryption,

260
00:13:06,547 --> 00:13:10,150
we're talking about setting
everything up as an island

261
00:13:10,150 --> 00:13:13,266
and its own sort of
inhabitant of your DMZ.

262
00:13:18,730 --> 00:13:19,817
So the second assertion.

263
00:13:19,817 --> 00:13:23,062
The network will always have external

264
00:13:23,062 --> 00:13:26,970
and internal threats at all times.

265
00:13:26,970 --> 00:13:31,530
So we can assume that
there's always a potential

266
00:13:31,530 --> 00:13:35,608
for an adverse event that
either through maliciousness,

267
00:13:35,609 --> 00:13:39,320
through insider threat,
through accidental due

268
00:13:39,320 --> 00:13:43,812
to somebody getting
compromised from phishing.

269
00:13:43,812 --> 00:13:46,850
There's always some kind
of threat on the network.

270
00:13:46,850 --> 00:13:49,050
And this just supports our assumption

271
00:13:49,050 --> 00:13:50,695
that the network is always hostile.

272
00:13:50,696 --> 00:13:54,330
So assume that not even that we've made it

273
00:13:54,330 --> 00:13:58,169
to an internal network can
we still say that it's safe.

274
00:13:58,169 --> 00:14:00,932
We're gonna still keep our thought

275
00:14:00,932 --> 00:14:04,896
of zero trust prevalent as we
keep going through the layers.

276
00:14:04,896 --> 00:14:07,479
As I've been saying all along,

277
00:14:07,480 --> 00:14:09,388
network locality is not sufficient

278
00:14:09,388 --> 00:14:11,470
for deciding trust in the network.

279
00:14:11,470 --> 00:14:12,805
As I said, in the beginning,

280
00:14:12,805 --> 00:14:15,828
2020 really changed our ideas

281
00:14:15,828 --> 00:14:19,760
about where the network
boundary really lives.

282
00:14:19,760 --> 00:14:22,189
And now it lives in many of our homes

283
00:14:22,190 --> 00:14:25,260
and living rooms and coffee
shops or home networks.

284
00:14:25,260 --> 00:14:28,900
So we can't even make the assumption now

285
00:14:28,900 --> 00:14:32,930
that the VPN is safe.

286
00:14:32,930 --> 00:14:34,944
That okay, the user has
logged in from the VPN

287
00:14:34,945 --> 00:14:36,348
and they're accessing it

288
00:14:36,348 --> 00:14:37,882
from within the US.

289
00:14:37,882 --> 00:14:40,979
Looks good, go ahead and allow that.

290
00:14:40,980 --> 00:14:44,561
We have to change our
assumptions about that as well.

291
00:14:44,561 --> 00:14:49,330
In a zero trust minded approach,
we have to strive to ensure

292
00:14:49,330 --> 00:14:54,330
that every device, user
and the flow of workloads

293
00:14:54,680 --> 00:14:58,332
and applications are all
authenticated and authorized.

294
00:14:58,332 --> 00:15:01,040
So that's a fourth assertion.

295
00:15:01,040 --> 00:15:03,334
Every device, user, and network flow

296
00:15:03,335 --> 00:15:08,335
with respect to applications
and workloads is authenticated.

297
00:15:09,635 --> 00:15:12,180
And as I highlighted earlier,

298
00:15:12,180 --> 00:15:15,093
these access control
policies have to be dynamic

299
00:15:15,093 --> 00:15:17,130
and they have to be calculated

300
00:15:17,130 --> 00:15:18,879
with as much information as possible

301
00:15:18,879 --> 00:15:22,280
from as many different
sources of data as possible.

302
00:15:22,280 --> 00:15:25,776
We used to just make blanket assertions.

303
00:15:25,776 --> 00:15:29,839
Network A trust network B
trust network C et cetera

304
00:15:29,840 --> 00:15:32,940
and leave those rules in place.

305
00:15:32,940 --> 00:15:35,560
Instead, the assertion of zero trust

306
00:15:35,560 --> 00:15:39,649
is that these fundamental
policies are changing all the time

307
00:15:39,649 --> 00:15:44,649
and network A may trust network
B in Monday through Friday

308
00:15:45,390 --> 00:15:49,210
during working hours for
this level of workload.

309
00:15:49,210 --> 00:15:51,707
But if there's a sudden DDoS,

310
00:15:51,707 --> 00:15:54,380
denial-of-service attack or sudden burst

311
00:15:54,380 --> 00:15:58,130
in activity that they're trying
to impact could be hostile,

312
00:15:58,130 --> 00:16:01,775
could be accidental that
the policy would gate

313
00:16:01,775 --> 00:16:06,775
that away so that the next
network would be protected.

314
00:16:06,820 --> 00:16:09,190
And so that's how zero trust can help us

315
00:16:09,190 --> 00:16:10,560
at all levels, right?

316
00:16:10,560 --> 00:16:12,689
Because at its fundamental core,

317
00:16:12,689 --> 00:16:15,562
it's allowing a dynamic recalculation

318
00:16:15,562 --> 00:16:19,410
of the network rules
and policies in place.

319
00:16:19,410 --> 00:16:21,695
And that's why, again, we need automation

320
00:16:21,696 --> 00:16:26,696
and orchestration
informed by the visibility

321
00:16:26,825 --> 00:16:31,113
into analytics to really
achieve this at a mature level.

322
00:16:32,480 --> 00:16:35,940
And as I said, as we employ automation

323
00:16:35,940 --> 00:16:37,450
and orchestration techniques,

324
00:16:37,450 --> 00:16:40,794
we're gonna have to have a
really robust data collection

325
00:16:40,794 --> 00:16:43,790
and capture strategy to make sure we have

326
00:16:43,790 --> 00:16:47,973
that proper information
to make these decisions.

327
00:16:51,290 --> 00:16:52,122
So we need to think

328
00:16:52,123 --> 00:16:54,611
of zero trust as more than just a mindset.

329
00:16:54,611 --> 00:16:59,611
It's a mindset that
considers every user, device,

330
00:17:01,470 --> 00:17:03,824
and workload to be hostile.

331
00:17:03,824 --> 00:17:07,794
And even if they are approved
and there a known entity,

332
00:17:07,795 --> 00:17:10,853
we continuously reassess their access

333
00:17:10,853 --> 00:17:13,449
and authority to the network.

334
00:17:13,449 --> 00:17:17,099
And I'll talk a lot about
that more about how we get

335
00:17:17,099 --> 00:17:20,449
into the different
classifications of user behavior,

336
00:17:20,450 --> 00:17:25,450
of asset behavior and where
those analytics need to sit.

337
00:17:25,634 --> 00:17:28,793
And again, I think something here

338
00:17:28,793 --> 00:17:31,939
that in the six pillars isn't called out

339
00:17:31,940 --> 00:17:33,340
as much as I would like

340
00:17:33,340 --> 00:17:34,990
and I would like to draw your attention

341
00:17:34,990 --> 00:17:38,121
to is there's also the
idea of data sensitivity.

342
00:17:38,121 --> 00:17:41,009
So not only do we have
applications and workloads

343
00:17:41,009 --> 00:17:45,160
but underpinning that is data as well.

344
00:17:45,160 --> 00:17:48,056
And so having a data classification system

345
00:17:48,056 --> 00:17:50,060
can also help us here.

346
00:17:50,060 --> 00:17:53,666
Because ultimately, the
adversary is looking

347
00:17:53,666 --> 00:17:56,260
for one of two things,
either they're looking

348
00:17:56,260 --> 00:17:59,530
to use your network as their own resource.

349
00:17:59,530 --> 00:18:02,350
So basically a free data center.

350
00:18:02,350 --> 00:18:03,533
Think bot net.

351
00:18:03,534 --> 00:18:06,080
Or they're looking for your data.

352
00:18:06,080 --> 00:18:07,350
Think ransomware.

353
00:18:07,350 --> 00:18:09,639
So it's either a targeted
attack to get something

354
00:18:09,640 --> 00:18:12,050
like your crown jewels, or it's an attack

355
00:18:12,050 --> 00:18:13,050
on your infrastructure

356
00:18:13,050 --> 00:18:16,586
to just take over your
resources and use your compute.

357
00:18:16,586 --> 00:18:21,480
Data classification
offers us a way to address

358
00:18:21,480 --> 00:18:22,390
that second layer.

359
00:18:22,390 --> 00:18:24,793
Something that's more
sensitive to our business.

360
00:18:27,091 --> 00:18:31,439
So what earns zero trust?

361
00:18:31,440 --> 00:18:33,830
The TL DR, the too long, didn't read.

362
00:18:33,830 --> 00:18:35,727
Don't trust anyone or anything operating

363
00:18:35,728 --> 00:18:39,093
inside or outside your
network at any time.

364
00:18:40,874 --> 00:18:43,250
That goes for people, devices,

365
00:18:43,250 --> 00:18:45,414
networks, workloads, applications

366
00:18:45,414 --> 00:18:49,090
and then we're layering in because all

367
00:18:49,090 --> 00:18:53,187
of this is retrofitting into
our existing IT environments

368
00:18:53,188 --> 00:18:55,674
is automation and orchestration.

369
00:18:55,674 --> 00:19:00,210
So basically, I'm in your
computer stealing your data.

370
00:19:00,210 --> 00:19:02,030
this a little kitty,

371
00:19:02,030 --> 00:19:05,531
it probably isn't has
the same user profile.

372
00:19:05,531 --> 00:19:07,515
Doesn't have the same typing activity,

373
00:19:07,516 --> 00:19:09,398
doesn't have the same browsing history,

374
00:19:09,398 --> 00:19:11,370
doesn't have the same workload,

375
00:19:11,370 --> 00:19:13,984
or is going after the same resources

376
00:19:13,984 --> 00:19:16,035
that a normal user would.

377
00:19:16,036 --> 00:19:18,280
So just kind of as a funny

378
00:19:18,280 --> 00:19:21,100
to think about how are we
gonna see these things.

379
00:19:21,100 --> 00:19:25,144
And don't trust anyone inside
or outside the network.

380
00:19:25,144 --> 00:19:30,144
So that was a lot about
what zero trust is.

381
00:19:30,430 --> 00:19:33,118
So why now?

382
00:19:33,118 --> 00:19:36,716
So are we seeing the
zero trust is a thing?

383
00:19:36,716 --> 00:19:40,149
We're seeing these trends
across IT and security.

384
00:19:40,150 --> 00:19:45,150
First was the move from the
static perimeter based policies.

385
00:19:45,764 --> 00:19:48,536
In a legacy view, we're thinking

386
00:19:48,537 --> 00:19:52,612
that a computer is a
workstation that sits at a desk

387
00:19:52,612 --> 00:19:56,677
at an office at a certain
floor of the building.

388
00:19:56,677 --> 00:20:01,677
Now users are flipped completely
the other way to remote.

389
00:20:02,681 --> 00:20:07,541
So that static boundary
is almost meaningless now.

390
00:20:07,541 --> 00:20:11,224
So any rules that we had have to change

391
00:20:11,224 --> 00:20:13,187
and evolve around that.

392
00:20:13,188 --> 00:20:17,486
So legacy was protecting
the physical perimeter.

393
00:20:17,486 --> 00:20:21,310
Now we have to think about
protecting assets, users

394
00:20:21,310 --> 00:20:25,090
and resources no matter
where they exist physically.

395
00:20:25,090 --> 00:20:27,145
So our assets may be computers,

396
00:20:27,145 --> 00:20:31,381
laptops, bring your own device, mobiles.

397
00:20:31,381 --> 00:20:35,210
It might be users who are
outside of the country,

398
00:20:35,210 --> 00:20:39,170
outside of the office,
maybe at a coffee shop,

399
00:20:39,170 --> 00:20:41,700
maybe at a home network
that is not secure.

400
00:20:41,700 --> 00:20:45,320
Something I think we may
not have always thought

401
00:20:45,320 --> 00:20:48,640
about is that in our new work life

402
00:20:48,641 --> 00:20:51,370
after the pandemic we're seeing

403
00:20:51,370 --> 00:20:53,725
that users are sharing networks.

404
00:20:53,725 --> 00:20:56,661
You have homes where there
are multiple IT users

405
00:20:56,662 --> 00:21:00,890
who are accessing
multiple critical networks

406
00:21:00,890 --> 00:21:03,540
from the same location.

407
00:21:03,540 --> 00:21:05,510
So what does that mean for file sharing?

408
00:21:05,510 --> 00:21:06,350
What does that mean

409
00:21:06,350 --> 00:21:07,654
if your laptop

410
00:21:07,654 --> 00:21:10,498
is inadvertently sharing
documents, et cetera.

411
00:21:10,498 --> 00:21:11,450
We have to think

412
00:21:11,450 --> 00:21:16,450
about some different ways
overlap can start to happen.

413
00:21:16,810 --> 00:21:19,060
So the modern way of thinking about this,

414
00:21:19,060 --> 00:21:21,480
the more zero trust way
is protecting assets,

415
00:21:21,480 --> 00:21:24,649
users and resources,
not just this perimeter.

416
00:21:24,649 --> 00:21:28,649
The trend of implicitly
trusting the perimeter

417
00:21:28,650 --> 00:21:29,937
was already a weak solution

418
00:21:29,937 --> 00:21:32,841
and we'd seen that before.

419
00:21:32,841 --> 00:21:36,898
Every ransomware attack
that we've seen has happened

420
00:21:36,898 --> 00:21:40,129
because it has, once it gains a foothold,

421
00:21:40,130 --> 00:21:41,610
it has unfettered access

422
00:21:41,610 --> 00:21:45,683
to every other device on
the same trusted network.

423
00:21:45,683 --> 00:21:48,057
So zero trust is something
that can really help us

424
00:21:48,057 --> 00:21:52,580
with the ransomware or the malware threat.

425
00:21:52,580 --> 00:21:54,929
Continuing on that theme of isolation

426
00:21:54,930 --> 00:21:56,430
and segmentation of networks,

427
00:21:56,430 --> 00:21:59,210
we're seeing the trend move from approach

428
00:21:59,210 --> 00:22:02,829
where we needed just approval
to connect to the network.

429
00:22:02,829 --> 00:22:05,675
And now we're moving to a trend

430
00:22:05,675 --> 00:22:08,070
where we wanna see the approval

431
00:22:08,070 --> 00:22:10,169
when we connect to each resource.

432
00:22:10,170 --> 00:22:11,010
So an example

433
00:22:11,010 --> 00:22:13,752
of that is what I would
go to the physical office,

434
00:22:13,752 --> 00:22:16,171
I would join the corporate wifi.

435
00:22:16,171 --> 00:22:19,100
And once I was at the corporate wifi,

436
00:22:19,100 --> 00:22:21,536
I had unfettered access to
all the other applications.

437
00:22:21,537 --> 00:22:22,581
It was as if I was plugged

438
00:22:22,581 --> 00:22:26,731
in to the network cord at my desk.

439
00:22:26,731 --> 00:22:29,783
So instead, we need to think

440
00:22:29,783 --> 00:22:32,610
about this a little bit more robustly.

441
00:22:32,610 --> 00:22:35,510
What if I wasn't me and
my laptop was outside

442
00:22:35,510 --> 00:22:38,150
of the building, or it was compromised?

443
00:22:38,150 --> 00:22:41,894
So we need to think
about how each time I ask

444
00:22:41,894 --> 00:22:45,486
for a different network
resource, re-authenticating

445
00:22:45,486 --> 00:22:48,756
and rechecking the context of my user

446
00:22:48,756 --> 00:22:52,210
and my device and the resource
request I'm asking for,

447
00:22:52,210 --> 00:22:54,436
is it within my normal operating behavior

448
00:22:54,436 --> 00:22:56,919
instead of just approving everything

449
00:22:56,920 --> 00:22:59,040
just because I'm either A on the VPN,

450
00:22:59,040 --> 00:23:02,963
or B on a corporate wifi
or connected physically.

451
00:23:04,930 --> 00:23:09,295
So we're gonna start to see,

452
00:23:09,295 --> 00:23:12,070
this is what's called comply to connect

453
00:23:12,070 --> 00:23:15,210
to each resource that my device,

454
00:23:15,210 --> 00:23:18,017
my user, my profile, my
behavior, is all complied

455
00:23:18,017 --> 00:23:22,114
before I can connect to a
resource, not the opposite.

456
00:23:22,114 --> 00:23:26,670
These approvals and
authentications again need

457
00:23:26,670 --> 00:23:28,692
to happen relatively seamlessly

458
00:23:28,692 --> 00:23:31,470
to give a good user experience,

459
00:23:31,470 --> 00:23:33,470
to have a successful user experience.

460
00:23:33,470 --> 00:23:34,634
Otherwise, as you know,

461
00:23:34,634 --> 00:23:38,960
once the C level can't do it,

462
00:23:38,960 --> 00:23:42,594
then it's gonna be very hard
for our users to do the same.

463
00:23:42,594 --> 00:23:46,950
So we wanna see automation

464
00:23:46,950 --> 00:23:49,220
and orchestration help with these tools.

465
00:23:49,220 --> 00:23:51,348
We often see this feature exhibited.

466
00:23:51,348 --> 00:23:54,151
You've probably seen
this in your own networks

467
00:23:54,151 --> 00:23:56,920
when you've had to
reauthenticate every few minutes,

468
00:23:56,920 --> 00:23:58,270
every few minutes.

469
00:23:58,270 --> 00:23:59,599
It kinda gets silly after a while.

470
00:23:59,599 --> 00:24:00,750
So we have to think

471
00:24:00,750 --> 00:24:04,153
about how do we make our
user experience better there?

472
00:24:04,153 --> 00:24:07,510
Finally, we're also seeing
this move towards zero trust

473
00:24:07,510 --> 00:24:10,790
because the older IT
infrastructure is we're very siloed

474
00:24:10,790 --> 00:24:12,370
by product or tools

475
00:24:12,370 --> 00:24:14,676
but now we're seeing a lot
of integration between tools

476
00:24:14,676 --> 00:24:18,730
and product stacks and a
whole of agency approach.

477
00:24:18,730 --> 00:24:23,031
So this is very much like
our multi-cloud designs

478
00:24:23,031 --> 00:24:25,500
that we're starting to see now

479
00:24:25,500 --> 00:24:29,343
where different tool
sets are interchangeable.

480
00:24:29,343 --> 00:24:31,950
So we've got to see a whole

481
00:24:31,950 --> 00:24:36,950
of organization or agency
approach to how we roll this out.

482
00:24:39,410 --> 00:24:41,955
More factors that are driving zero trust.

483
00:24:41,955 --> 00:24:45,179
Despite the changes in industry

484
00:24:45,180 --> 00:24:46,728
where it's been seen over time,

485
00:24:46,728 --> 00:24:50,259
2020 really just pushed us forward.

486
00:24:50,259 --> 00:24:52,820
The rapid erosion of the network boundary

487
00:24:52,820 --> 00:24:55,448
was almost overnight when
they locked outs began.

488
00:24:55,449 --> 00:25:00,299
The shift to remote work meant
a lot of network policies had

489
00:25:00,299 --> 00:25:01,960
to be flipped.

490
00:25:01,960 --> 00:25:06,751
So now more than ever,
and no time too early

491
00:25:06,751 --> 00:25:11,700
to recheck how those
policies may be have changed

492
00:25:11,700 --> 00:25:15,359
our security posture,
given this dynamic shift.

493
00:25:15,359 --> 00:25:19,812
And it's really just
brought to light how devices

494
00:25:19,813 --> 00:25:23,574
and users are used in remote workforce.

495
00:25:23,574 --> 00:25:28,574
That iPad that perhaps a child was using

496
00:25:28,900 --> 00:25:32,480
for homework before may also
be used for work an hour later.

497
00:25:32,480 --> 00:25:35,207
So we have to really rethink
what is on the device

498
00:25:35,207 --> 00:25:38,510
and other users who may be on the device,

499
00:25:38,510 --> 00:25:40,173
especially in BYOD.

500
00:25:42,702 --> 00:25:45,426
Visibility and analytics.

501
00:25:45,426 --> 00:25:49,070
Remember this year where the meme was,

502
00:25:49,070 --> 00:25:52,327
I am not a cat, lawyer cat came online?

503
00:25:52,327 --> 00:25:55,311
It's just another example of zero trust.

504
00:25:55,311 --> 00:25:57,480
Finding out who is on the other side

505
00:25:57,480 --> 00:26:00,910
of the Zoom is very much
a zero trust problem.

506
00:26:00,910 --> 00:26:02,727
The cat had the filter
and the lawyer was like,

507
00:26:02,727 --> 00:26:04,372
"I am not a cat."

508
00:26:04,372 --> 00:26:09,372
This is about access and authentication.

509
00:26:09,500 --> 00:26:12,760
This is how do we know that it
really wasn't a hacker kitty

510
00:26:12,760 --> 00:26:13,899
on the other side?

511
00:26:13,899 --> 00:26:16,360
We would need context, right?

512
00:26:16,360 --> 00:26:20,332
And as Lawyer Kitty
explained on the Zoom call,

513
00:26:20,333 --> 00:26:23,230
he had other ways to
prove that he was human.

514
00:26:23,230 --> 00:26:26,030
So just another funny
way to think about it,

515
00:26:26,030 --> 00:26:29,100
but we really have to really start to say,

516
00:26:29,100 --> 00:26:31,370
there is no such thing as a trusted user.

517
00:26:31,370 --> 00:26:34,053
Anyone could be a cat on the internet.

518
00:26:34,054 --> 00:26:36,797
So we're finally seeing
how much visibility

519
00:26:36,797 --> 00:26:41,060
and analytics we need to
really start to leverage here

520
00:26:41,060 --> 00:26:42,569
for zero trust.

521
00:26:42,569 --> 00:26:47,149
So let me take you through a
very common cyber scenario.

522
00:26:47,150 --> 00:26:48,546
This is the remote exploit

523
00:26:48,546 --> 00:26:50,340
or insider threat.

524
00:26:50,340 --> 00:26:51,850
In this situation,

525
00:26:51,850 --> 00:26:56,290
a malicious cyber actor
compromises a user device,

526
00:26:56,290 --> 00:27:00,287
either through an internet
based mobile code exploit

527
00:27:00,287 --> 00:27:03,810
or the actor is an inside authorized user

528
00:27:03,810 --> 00:27:04,820
with malicious intentions.

529
00:27:04,820 --> 00:27:09,085
This scenario is pretty
much the most common,

530
00:27:09,085 --> 00:27:13,330
classical cybersecurity
scenario we can have.

531
00:27:13,330 --> 00:27:17,255
We don't know if a user's
credentials have been exploited

532
00:27:17,256 --> 00:27:19,056
because they've been discovered

533
00:27:19,056 --> 00:27:22,500
or the user has turned bad and malicious.

534
00:27:22,500 --> 00:27:24,040
So we don't know, right?

535
00:27:24,040 --> 00:27:27,678
And that's again a perfect
situation for zero trust.

536
00:27:27,678 --> 00:27:30,230
So in this non-zero trust scenario,

537
00:27:30,230 --> 00:27:32,303
the actor gets the user's credentials

538
00:27:32,303 --> 00:27:33,680
enumerates the network

539
00:27:33,680 --> 00:27:36,600
and laterally moves because the user could

540
00:27:36,600 --> 00:27:40,214
giving the malicious actor access to data,

541
00:27:40,214 --> 00:27:42,038
and also persistence.

542
00:27:42,038 --> 00:27:44,720
Once the user's credentials
have been compromised,

543
00:27:44,720 --> 00:27:47,510
most of the network has
been compromised as well.

544
00:27:47,510 --> 00:27:50,338
That's why spear phishing
phishing remains one

545
00:27:50,338 --> 00:27:55,338
of the most sought after
trainings in cybersecurity,

546
00:27:55,460 --> 00:27:57,422
because once we lose that user credential,

547
00:27:57,422 --> 00:28:00,712
so much of the network
potential will be compromised.

548
00:28:00,712 --> 00:28:03,400
In a zero trust network however,

549
00:28:03,400 --> 00:28:06,795
the network is segmented
limiting both enumeration

550
00:28:06,795 --> 00:28:08,960
and lateral movement opportunities.

551
00:28:08,960 --> 00:28:10,854
And the reason the network is segmented

552
00:28:10,854 --> 00:28:13,491
is the compromised user credentials

553
00:28:13,491 --> 00:28:17,610
and the device are already
assumed to be malicious

554
00:28:17,610 --> 00:28:18,780
until proven otherwise.

555
00:28:18,780 --> 00:28:21,860
So at every step of the way,
at every resource request,

556
00:28:21,860 --> 00:28:24,683
at every network
traversal, these questions

557
00:28:24,683 --> 00:28:27,480
about the context of the user

558
00:28:27,480 --> 00:28:31,592
and the device are asked
again and again and rechecked.

559
00:28:31,592 --> 00:28:35,610
And because this is
situation is so common,

560
00:28:35,610 --> 00:28:36,735
we can also,

561
00:28:36,736 --> 00:28:39,632
that's why we can reference this idea

562
00:28:39,632 --> 00:28:43,100
that assume that the user

563
00:28:43,100 --> 00:28:45,223
and the device is already compromised.

564
00:28:47,134 --> 00:28:50,910
Another scenario that we're seeing

565
00:28:50,910 --> 00:28:53,370
as an emerging threat is
the supply chain compromise.

566
00:28:53,370 --> 00:28:57,231
In this scenario, a malicious
actor embeds malicious code

567
00:28:57,231 --> 00:29:01,460
into a popular enterprise
network device or application.

568
00:29:01,460 --> 00:29:03,214
The device or application is maintained

569
00:29:03,214 --> 00:29:05,050
and regularly updated according

570
00:29:05,050 --> 00:29:08,370
to the organization's best
practices, which is correct

571
00:29:08,370 --> 00:29:10,729
because we wanna make sure
we have the most secure

572
00:29:10,730 --> 00:29:11,796
and up-to-date software.

573
00:29:11,796 --> 00:29:14,540
In a traditional network architecture,

574
00:29:14,540 --> 00:29:17,690
this device or application
would be internal

575
00:29:17,690 --> 00:29:19,177
and fully trusted.

576
00:29:19,177 --> 00:29:23,694
Now this type of compromise
can be particularly severe

577
00:29:23,694 --> 00:29:28,310
as we saw this year, because
it's so implicitly trusted.

578
00:29:28,310 --> 00:29:30,650
In a mature implementation
of zero trust however,

579
00:29:30,651 --> 00:29:33,290
we would have had to flip the script

580
00:29:33,290 --> 00:29:34,960
and behave as though that software

581
00:29:34,960 --> 00:29:36,860
was not inherently trusted.

582
00:29:36,860 --> 00:29:37,963
Its privileges and access

583
00:29:37,963 --> 00:29:40,540
to data would have been
tightly controlled,

584
00:29:40,540 --> 00:29:42,560
minimized and monitor.

585
00:29:42,560 --> 00:29:45,899
Segmentation, macro at
the network boundary

586
00:29:45,900 --> 00:29:48,740
when the download occurred

587
00:29:48,740 --> 00:29:51,230
and micro between the network segments

588
00:29:51,230 --> 00:29:54,300
or between the services
on the operating system,

589
00:29:54,300 --> 00:29:58,466
so that the executable could then pivot

590
00:29:58,467 --> 00:30:01,140
and start to read data
off the operating system.

591
00:30:01,140 --> 00:30:02,772
So micro segmentation down

592
00:30:02,772 --> 00:30:07,772
to what I was saying
earlier, data on the device.

593
00:30:08,401 --> 00:30:13,401
And then, analyzing supply
chain is gonna be a hard problem

594
00:30:14,934 --> 00:30:17,345
but it becomes easier
when you have visibility

595
00:30:17,345 --> 00:30:19,930
and analytics over many years.

596
00:30:19,930 --> 00:30:22,022
So if you can look at the trends

597
00:30:22,022 --> 00:30:25,669
of perhaps your favorite monitoring tool

598
00:30:25,670 --> 00:30:29,222
or whatever trusted application,
and you look for patterns,

599
00:30:29,222 --> 00:30:31,951
are they updating at
the same time of year?

600
00:30:31,951 --> 00:30:36,951
Is this code update authorized, mentioned,

601
00:30:38,550 --> 00:30:40,820
blogged about, MD5, et cetera.

602
00:30:40,820 --> 00:30:43,560
You can look and see if
the file size was the same.

603
00:30:43,560 --> 00:30:46,760
Was it produced by the
same certificate publisher?

604
00:30:46,760 --> 00:30:48,023
Route search, et cetera.

605
00:30:49,440 --> 00:30:53,096
So at the end of the day,

606
00:30:53,096 --> 00:30:55,849
there's a popular game called Among Us.

607
00:30:55,849 --> 00:30:59,929
And its premise is that
there is one hacker among us.

608
00:30:59,930 --> 00:31:02,169
So someone that's not to be trusted.

609
00:31:02,169 --> 00:31:04,940
And that's basically the
premise of zero trust

610
00:31:04,940 --> 00:31:08,368
that assume there's
already someone kind of sus

611
00:31:08,368 --> 00:31:10,090
or suspicious Among Us.

612
00:31:10,090 --> 00:31:14,339
So we're gonna talk now about
some practical approaches.

613
00:31:14,339 --> 00:31:17,559
Zero trust is not a product, a solution

614
00:31:17,559 --> 00:31:20,052
that you can buy rather is a methodology

615
00:31:20,052 --> 00:31:21,040
that requires the organization

616
00:31:21,040 --> 00:31:25,050
to rethink their security
strategy and architecture.

617
00:31:25,050 --> 00:31:26,111
It's a methodology.

618
00:31:26,112 --> 00:31:28,650
Again, it's a mindset.

619
00:31:28,650 --> 00:31:30,450
It's a flipping of the script

620
00:31:30,450 --> 00:31:32,469
of what our assumptions used to be.

621
00:31:32,469 --> 00:31:35,110
It's gonna require a collection

622
00:31:35,110 --> 00:31:38,135
of products and services across
vendors to work together.

623
00:31:38,135 --> 00:31:40,608
And something I would like you

624
00:31:40,608 --> 00:31:43,511
to take away is that
there is no partial trust.

625
00:31:43,511 --> 00:31:46,960
Abandon the idea because
that would just negate all

626
00:31:46,960 --> 00:31:48,880
of your efforts.

627
00:31:48,880 --> 00:31:52,688
Think service-oriented
architectures from the 2000s.

628
00:31:52,688 --> 00:31:56,932
Some challenges that we'll
see implementing this

629
00:31:56,932 --> 00:31:59,160
is a lack of full support.

630
00:31:59,160 --> 00:32:03,410
Administrators and defenders
are gonna get fatigued

631
00:32:03,410 --> 00:32:06,090
with the idea of
constantly having to defend

632
00:32:06,090 --> 00:32:07,740
against this unknown threat.

633
00:32:07,740 --> 00:32:12,740
So you'll need to create
scalable, automated,

634
00:32:13,288 --> 00:32:15,664
repeatable, bite-sized processes

635
00:32:15,664 --> 00:32:19,190
so that this fatigue doesn't perverse

636
00:32:19,190 --> 00:32:20,530
through the entire organization

637
00:32:20,530 --> 00:32:22,629
from leadership through
your administrators.

638
00:32:22,630 --> 00:32:25,973
It will get exhausting as you transform.

639
00:32:26,812 --> 00:32:29,514
Here's an algorithm
I'd like I like to keep

640
00:32:29,514 --> 00:32:33,179
in the back of my mind about
what are all these six pillars

641
00:32:33,180 --> 00:32:34,830
and how to bring it all together.

642
00:32:35,770 --> 00:32:36,718
The identity trust

643
00:32:36,718 --> 00:32:41,240
equals the identity
access grounding account,

644
00:32:41,240 --> 00:32:44,530
the API, the user, the service, whatever,

645
00:32:44,530 --> 00:32:48,750
plus the device requesting
access and its location,

646
00:32:48,750 --> 00:32:50,810
cloud, on premise, remote.

647
00:32:50,810 --> 00:32:52,998
Those three things create a context.

648
00:32:52,998 --> 00:32:57,820
And that context includes
time, date, season perhaps,

649
00:32:57,820 --> 00:33:01,429
asset type, identity type,
resource, application.

650
00:33:01,430 --> 00:33:03,027
Is it normal, anomalous?

651
00:33:03,027 --> 00:33:06,570
Which will create ongoing
intelligence that you can store

652
00:33:06,570 --> 00:33:10,530
and drive those continuously
improving policies,

653
00:33:10,530 --> 00:33:12,629
those dynamically changing policies.

654
00:33:12,630 --> 00:33:15,360
So it's a bit of a multi-variate function.

655
00:33:15,360 --> 00:33:16,840
It does feed itself.

656
00:33:16,840 --> 00:33:17,860
It does grow itself

657
00:33:17,860 --> 00:33:21,362
but that's why you will need
more advanced capabilities.

658
00:33:21,363 --> 00:33:26,363
I'm gonna say there's some
practical approaches here.

659
00:33:26,530 --> 00:33:29,399
I talked about one before,
which is comply to connect.

660
00:33:29,400 --> 00:33:30,410
That's a notion

661
00:33:30,410 --> 00:33:33,063
that who and what is
connecting to my network.

662
00:33:33,063 --> 00:33:34,650
They have to be healthy,

663
00:33:34,650 --> 00:33:37,720
they have to have certain criteria met

664
00:33:37,720 --> 00:33:41,343
before I deem them worthy or
acceptable on the network.

665
00:33:42,647 --> 00:33:46,570
Use continuous CDM or Continuous
Diagnostic Monitoring.

666
00:33:46,570 --> 00:33:49,280
Now that the user has
connected, what are they doing?

667
00:33:49,280 --> 00:33:52,080
Look and watch and log the user behaviors

668
00:33:52,080 --> 00:33:55,210
so that you can look for
anomalous activity later.

669
00:33:55,210 --> 00:33:56,610
And then my favorite,

670
00:33:56,610 --> 00:33:58,270
most important thing I wanna tell you

671
00:33:58,270 --> 00:34:01,134
is develop an anomaly
detection capability.

672
00:34:01,134 --> 00:34:02,350
This is really the power

673
00:34:02,350 --> 00:34:06,429
that will feed your zero
trust policy engine.

674
00:34:06,430 --> 00:34:11,389
You need a place to store
long-term log metadata like time,

675
00:34:11,389 --> 00:34:15,056
location, IP address, username, email.

676
00:34:15,056 --> 00:34:16,728
And you need a way to run analytics

677
00:34:16,728 --> 00:34:20,245
by time user device across multiple years

678
00:34:20,245 --> 00:34:22,904
because you'll want to catch seasonality.

679
00:34:22,905 --> 00:34:26,699
And you'll need a way to compile
user and device profiles.

680
00:34:26,699 --> 00:34:29,949
And these profiles should
baseline some things

681
00:34:29,949 --> 00:34:31,600
about your devices and users

682
00:34:31,600 --> 00:34:35,409
like installed applications
over time, the files they have,

683
00:34:35,409 --> 00:34:37,639
where have they been over time?

684
00:34:37,639 --> 00:34:39,000
What are their Mac addresses?

685
00:34:39,000 --> 00:34:40,030
This way you are able

686
00:34:40,030 --> 00:34:42,730
to detect variations,
anomalies, deviations.

687
00:34:42,730 --> 00:34:43,891
So record the norm

688
00:34:43,891 --> 00:34:46,760
so you can detect the abnormal.

689
00:34:46,760 --> 00:34:49,156
Users will have locations,
comments, devices,

690
00:34:49,156 --> 00:34:52,139
they'll have common resources access,

691
00:34:52,139 --> 00:34:54,210
common systems and pass.

692
00:34:54,210 --> 00:34:57,943
You can baseline all those with metadata.

693
00:34:58,904 --> 00:35:02,581
Define your outcome from the start.

694
00:35:02,581 --> 00:35:05,970
Find out what your critical
data assets, applications,

695
00:35:05,970 --> 00:35:07,035
and services are.

696
00:35:07,036 --> 00:35:11,050
Start protecting that asset
and work your way out.

697
00:35:11,050 --> 00:35:12,412
Secure all the pathways

698
00:35:12,412 --> 00:35:14,837
of network access to get in.

699
00:35:14,837 --> 00:35:18,650
Determine who and then where are the users

700
00:35:18,650 --> 00:35:20,385
that need that access.

701
00:35:20,385 --> 00:35:23,620
Inspect and log all traffic before acting.

702
00:35:23,620 --> 00:35:25,339
Again, this goes back to our visibility

703
00:35:25,340 --> 00:35:29,974
in analytics need inside the
last pillar of zero trust.

704
00:35:29,974 --> 00:35:32,950
And now I'm gonna just talk a little bit

705
00:35:32,950 --> 00:35:35,622
about the some wrong
assumptions people make

706
00:35:35,623 --> 00:35:36,823
or some wrong ways

707
00:35:36,823 --> 00:35:39,150
I found that people go about this.

708
00:35:39,150 --> 00:35:42,197
One is just choosing the
most critical application

709
00:35:42,197 --> 00:35:44,720
as the proving ground and going with that.

710
00:35:44,720 --> 00:35:46,669
There's a bunch of
reasons why that's flawed

711
00:35:46,670 --> 00:35:48,090
but the most important

712
00:35:48,090 --> 00:35:50,060
is that if it is your most important

713
00:35:50,060 --> 00:35:51,299
mission critical application,

714
00:35:51,299 --> 00:35:56,299
it's going to be the
hardest to define changes

715
00:35:56,330 --> 00:35:57,477
that are not risky.

716
00:35:57,477 --> 00:36:00,250
Pulling the trigger on a boundary change

717
00:36:00,250 --> 00:36:04,800
on blocking access is a
service interrupting event.

718
00:36:04,800 --> 00:36:05,741
It can be.

719
00:36:05,741 --> 00:36:08,190
And guaranteeing that is not as very hard.

720
00:36:08,190 --> 00:36:09,830
So you wanna choose something else.

721
00:36:09,830 --> 00:36:12,799
Don't choose the most important,
most critical asset first.

722
00:36:12,800 --> 00:36:13,790
Choose something smaller

723
00:36:13,790 --> 00:36:16,940
so you can practice and gain those skills.

724
00:36:16,940 --> 00:36:18,862
Another mistake people make is focusing

725
00:36:18,862 --> 00:36:20,893
on all the identities.

726
00:36:21,804 --> 00:36:25,398
Instead I would suggest focus
on the human users first

727
00:36:25,398 --> 00:36:27,507
then look for the machine mapping.

728
00:36:27,507 --> 00:36:29,180
Because with human users,

729
00:36:29,180 --> 00:36:32,812
you can start to baseline and
build contacts and activities.

730
00:36:34,020 --> 00:36:38,220
The third thing I see is
allow any device access

731
00:36:38,220 --> 00:36:39,053
to any application.

732
00:36:39,053 --> 00:36:41,790
Sometimes people get
confused about zero trust

733
00:36:41,791 --> 00:36:43,956
and how it relates to remote work

734
00:36:43,956 --> 00:36:47,367
and mobile devices and
think like, "Oh cool.

735
00:36:47,367 --> 00:36:49,067
"Now that we have multi-factor,

736
00:36:49,067 --> 00:36:51,597
"all our mobile devices
can access anything we need

737
00:36:51,597 --> 00:36:52,728
"and we've got it."

738
00:36:52,728 --> 00:36:55,670
Again, that will just open the door

739
00:36:55,670 --> 00:36:59,190
to reversing the script and
having everything wide open.

740
00:36:59,190 --> 00:37:01,308
So again, you wanna start somewhere small

741
00:37:01,308 --> 00:37:02,641
so you can get some wins

742
00:37:02,641 --> 00:37:06,193
and map out all the paths in and out.

743
00:37:07,423 --> 00:37:10,077
Another approach people take is say,

744
00:37:10,077 --> 00:37:11,027
"Just forget it.

745
00:37:11,027 --> 00:37:12,527
"This is all also complicated.

746
00:37:12,527 --> 00:37:14,608
"I'll just take my existing
system and move it to the cloud

747
00:37:14,608 --> 00:37:18,607
"because the cloud has
various tools already built

748
00:37:18,607 --> 00:37:19,812
"in for zero trust."

749
00:37:19,812 --> 00:37:23,038
Unfortunately, that's
probably a risky move

750
00:37:23,039 --> 00:37:26,850
because without knowing
all the ins and outs

751
00:37:26,850 --> 00:37:27,683
of an application,

752
00:37:27,683 --> 00:37:29,170
when you move it to the cloud,

753
00:37:29,170 --> 00:37:32,550
you may inadvertently expose
yourself across the internet.

754
00:37:32,550 --> 00:37:33,470
You just don't know

755
00:37:33,470 --> 00:37:36,122
unless you've got that
complete visibility.

756
00:37:37,307 --> 00:37:41,973
So finally, quick things
to apply and practice.

757
00:37:41,973 --> 00:37:44,419
This is what you can take
to your office today.

758
00:37:44,419 --> 00:37:48,332
Look for user accounts
that have multifactor token

759
00:37:48,332 --> 00:37:52,520
that have a common key,
like an employee ID.

760
00:37:52,520 --> 00:37:53,645
Make sure that that common key

761
00:37:53,645 --> 00:37:56,277
is across all your access control systems.

762
00:37:56,277 --> 00:37:59,649
Make sure you've got real
time log monitoring available

763
00:37:59,649 --> 00:38:01,473
for the devices in the network

764
00:38:01,473 --> 00:38:05,526
and find out how you're applying
micro segmentation today.

765
00:38:05,526 --> 00:38:08,899
You can also implement file
level access monitoring.

766
00:38:08,900 --> 00:38:10,550
So at least you get visibility

767
00:38:10,550 --> 00:38:13,589
into who is accessing
what at that data layer.

768
00:38:13,589 --> 00:38:15,433
Start to use ML and source

769
00:38:15,434 --> 00:38:19,930
or as a automated
orchestration and response

770
00:38:19,930 --> 00:38:23,339
to compliment your security
event management tools.

771
00:38:23,340 --> 00:38:26,648
You gotta baseline goods so
that you can act on that.

772
00:38:26,648 --> 00:38:28,691
Find the logging gaps.

773
00:38:28,691 --> 00:38:31,082
Look for an executive sponsor.

774
00:38:31,082 --> 00:38:34,553
Like I keep saying, start
baselining your users.

775
00:38:34,553 --> 00:38:36,480
So the next couple of weeks

776
00:38:36,480 --> 00:38:39,410
I challenge you to go look
for those logging gaps.

777
00:38:39,410 --> 00:38:41,660
Start the conversations
with your leadership.

778
00:38:43,100 --> 00:38:44,029
In the next few months,

779
00:38:44,030 --> 00:38:46,640
look at how micro
segmentation can be applied

780
00:38:46,640 --> 00:38:48,500
for your networks and devices.

781
00:38:48,500 --> 00:38:49,890
Gather any missing data.

782
00:38:49,890 --> 00:38:51,875
Start to understand your user activity

783
00:38:51,875 --> 00:38:56,763
by tracing fully and look
for an executive sponsor.

784
00:38:56,763 --> 00:38:59,400
And then as you gain
your executive sponsor,

785
00:38:59,400 --> 00:39:01,747
start to baseline your user activity.

786
00:39:01,747 --> 00:39:02,754
At the end of the day,

787
00:39:02,755 --> 00:39:06,340
applying zero trust in real
life is don't trust me,

788
00:39:06,340 --> 00:39:07,847
don't trust anything you hear.

789
00:39:07,847 --> 00:39:08,815
Just kidding.

790
00:39:08,815 --> 00:39:10,509
I hope this helped.

791
00:39:10,509 --> 00:39:11,916
I would like to share

792
00:39:11,916 --> 00:39:16,165
with you some references here.

793
00:39:16,165 --> 00:39:17,788
Embracing zero trust.

794
00:39:17,788 --> 00:39:22,480
I will give you these links
at the end of the talk.

795
00:39:22,480 --> 00:39:24,320
I'm looking forward to your questions

796
00:39:24,320 --> 00:39:27,860
on how we can implement
zero trust in our networks.

797
00:39:27,860 --> 00:39:28,900
Thanks again.

798
00:39:28,900 --> 00:39:30,843
And my name is Macy Cronkrite.

