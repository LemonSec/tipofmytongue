1
00:00:01,500 --> 00:00:05,310
- Hi, we're coming to you as
contributors to the Suricata

2
00:00:05,310 --> 00:00:08,405
and other open source
network security projects.

3
00:00:08,405 --> 00:00:12,180
But most of the thinking here
comes from our experience

4
00:00:12,180 --> 00:00:14,209
during our day jobs at Stamus Networks,

5
00:00:14,210 --> 00:00:16,480
where we have built the
commercial network detection

6
00:00:16,480 --> 00:00:19,320
and response system on
top of sort of Suricata.

7
00:00:19,320 --> 00:00:20,560
My name is Peter Manev.

8
00:00:20,560 --> 00:00:23,305
I'm Chief Strategy
Officer of Stamus Networks

9
00:00:23,305 --> 00:00:26,853
and also part of the Suricata core team.

10
00:00:27,830 --> 00:00:29,753
- Hello, I am Eric Leblond,

11
00:00:29,753 --> 00:00:31,496
I'm the CTO of Stamus Networks.

12
00:00:31,496 --> 00:00:34,475
I'm part of, as well as Peter,

13
00:00:34,475 --> 00:00:37,512
of Executive Council for
Information Security Foundation,

14
00:00:37,512 --> 00:00:42,512
the foundation which is
driving Suricata development.

15
00:00:43,100 --> 00:00:46,910
- Now, folks, a couple of things

16
00:00:46,910 --> 00:00:48,959
that we wanted to talk to you about today

17
00:00:50,765 --> 00:00:51,598
is Suricata and SELKS.

18
00:00:51,598 --> 00:00:52,920
What is the relation there?

19
00:00:52,920 --> 00:00:55,506
Reducing the noise with
metadata classification

20
00:00:55,506 --> 00:00:57,810
of all those alerts
that Suricata produces.

21
00:00:57,810 --> 00:01:02,233
What other data can Suricata
produce and is useful

22
00:01:02,233 --> 00:01:05,170
for finding that needle
in the haystack, you know.

23
00:01:05,170 --> 00:01:06,940
Filter those alerts out.

24
00:01:06,940 --> 00:01:08,840
We're gonna do our small hands-on demo

25
00:01:08,840 --> 00:01:11,470
to show you what exactly we mean by that

26
00:01:11,470 --> 00:01:13,840
with actual hands-on examples.

27
00:01:13,840 --> 00:01:16,305
We're gonna talk about assets,

28
00:01:16,305 --> 00:01:18,760
asset-oriented threats and signs.

29
00:01:18,760 --> 00:01:21,200
We're gonna talk about
classification and tagging.

30
00:01:21,200 --> 00:01:23,430
How to further reduce the noise.

31
00:01:23,430 --> 00:01:26,538
And how to apply kind of,
what we've learned today

32
00:01:26,538 --> 00:01:31,410
and any additional resources for that.

33
00:01:31,410 --> 00:01:34,433
So, basic Suricata 101.

34
00:01:35,980 --> 00:01:40,580
So, Suricata does a live traffic analysis.

35
00:01:40,580 --> 00:01:42,679
It started as an idea 12 years ago,

36
00:01:42,680 --> 00:01:45,801
but evolved to be something
much more than that.

37
00:01:45,801 --> 00:01:48,709
It can, 'cause Suricata can be deployed

38
00:01:48,709 --> 00:01:52,720
to sniff info traffic
possibly or in-lines,

39
00:01:52,720 --> 00:01:54,926
as an intrusion prevention system.

40
00:01:54,926 --> 00:01:57,799
It can, Suricata itself,
can do full packet capture,

41
00:01:57,799 --> 00:02:00,910
and right hold up disk performance,

42
00:02:00,910 --> 00:02:02,679
the kind of performance ranges from,

43
00:02:02,680 --> 00:02:06,053
you can deploy from Raspberry
Pi to 100 gigabit a second.

44
00:02:07,170 --> 00:02:10,527
2017 we had such tests done successfully

45
00:02:10,527 --> 00:02:13,220
with the honey give it
a second with Apple tech

46
00:02:13,220 --> 00:02:17,020
is regarded as multi
threaded it's community-based

47
00:02:17,020 --> 00:02:18,340
and driven development.

48
00:02:18,340 --> 00:02:21,235
It's open source release
of the GPL version two.

49
00:02:21,235 --> 00:02:23,300
It's driven by OSF,

50
00:02:23,300 --> 00:02:26,363
which stands for Open
Information Security Foundation.

51
00:02:27,980 --> 00:02:30,813
This is actually the
organization behind Suricata.

52
00:02:31,810 --> 00:02:34,930
As I mentioned, Suricata
is an intrusion detection

53
00:02:34,930 --> 00:02:36,481
but can be much more than that.

54
00:02:36,481 --> 00:02:40,660
It's core signature by
secure run at full speed

55
00:02:40,660 --> 00:02:44,720
with 60 plus thousand signatures,

56
00:02:44,720 --> 00:02:48,430
it can use much less, it can
use in cases of compromise

57
00:02:48,430 --> 00:02:53,430
making use anything from you
know, domain J three hashes

58
00:02:53,880 --> 00:02:58,359
in a sorts of MD five shall
some matching as well.

59
00:02:58,360 --> 00:03:00,080
It can actually, you can
actually hook up your own

60
00:03:00,080 --> 00:03:05,080
lore scripts into a Suricata
for extended benefit.

61
00:03:05,670 --> 00:03:09,179
And really I think basically
the people that have

62
00:03:09,180 --> 00:03:12,340
not actually used Suricata
will seem the type

63
00:03:12,340 --> 00:03:16,940
of and the extent of the data
that I can produce actually

64
00:03:17,850 --> 00:03:20,200
have a very limited
knowledge of its power.

65
00:03:20,200 --> 00:03:23,732
And I'll actually let Eric
talk a little bit more

66
00:03:23,733 --> 00:03:28,733
about the protocol Network
Security Monitoring part of that.

67
00:03:28,783 --> 00:03:32,400
- So Suricata is above
ideas, but Peter didn't just

68
00:03:32,401 --> 00:03:36,550
sort of a really good
network security monitoring.

69
00:03:36,550 --> 00:03:38,810
For most use case we can state it.

70
00:03:38,810 --> 00:03:40,980
So we get that kind of replaces it.

71
00:03:40,980 --> 00:03:42,730
You have a same kind of data.

72
00:03:42,730 --> 00:03:46,296
You have a long list of protocols,

73
00:03:46,296 --> 00:03:51,185
is protocol from internet
like HTTP, HTTP/2, TLS,

74
00:03:51,185 --> 00:03:55,364
like FTP, SMTP, data source report.

75
00:03:55,364 --> 00:03:58,781
Corporate Network with Kerberos, SMB, NFS

76
00:04:00,273 --> 00:04:04,519
and the new stuff like IOT with MQTT

77
00:04:05,731 --> 00:04:10,731
the old stuff like Industrial
network and dnp3, modibus

78
00:04:11,368 --> 00:04:15,453
all this protocol for all
of this application layer

79
00:04:15,453 --> 00:04:17,690
like we call them insights to data.

80
00:04:17,690 --> 00:04:22,257
You can have a nice reason
document for making document

81
00:04:22,257 --> 00:04:23,720
for every transactions
in all the networks.

82
00:04:23,720 --> 00:04:27,640
So you can use them for
forensic, for analysis,

83
00:04:27,640 --> 00:04:29,750
for scam detection, for certain team,

84
00:04:29,750 --> 00:04:31,210
you can do a lot with them.

85
00:04:31,210 --> 00:04:33,955
So you already Suricata
you have a combination

86
00:04:33,956 --> 00:04:37,177
of NIDS or the network security

87
00:04:37,177 --> 00:04:40,594
and network security monitoring function.

88
00:04:42,210 --> 00:04:46,760
So one thing, because Suricata is miss.

89
00:04:46,760 --> 00:04:50,735
It means that we can miss
both when we are doing

90
00:04:50,735 --> 00:04:52,190
the IDS part.

91
00:04:52,190 --> 00:04:55,980
So the IDS part comes with
application layer or metadata.

92
00:04:55,980 --> 00:04:59,620
That is really important,
because in the old days

93
00:04:59,620 --> 00:05:02,553
when an IDS was triggering an alert,

94
00:05:03,920 --> 00:05:07,291
what we add is just an
layout of this category,

95
00:05:07,291 --> 00:05:11,665
with this name, was between
safety and these destination IP.

96
00:05:11,665 --> 00:05:13,800
If you are looking you one
report on the source part

97
00:05:13,800 --> 00:05:17,441
on the destination part, but
that was really, really small.

98
00:05:17,441 --> 00:05:21,996
So it was not possible to
really understand what was going

99
00:05:21,997 --> 00:05:24,356
on because the context was not developed.

100
00:05:24,356 --> 00:05:25,657
So that's really bad.

101
00:05:25,657 --> 00:05:29,640
So here we can see in this,
I left some word that we have

102
00:05:29,641 --> 00:05:33,226
an left over with DNS
protocol, we have single,

103
00:05:33,226 --> 00:05:36,694
both that we have contains
all the information extracted

104
00:05:36,694 --> 00:05:39,079
by Suricata, above this area.

105
00:05:39,079 --> 00:05:42,527
So we have information about
the validity of the certificate

106
00:05:42,527 --> 00:05:46,152
and that node after node
should be than the low.

107
00:05:46,153 --> 00:05:48,881
Then have the fingerprint

108
00:05:48,881 --> 00:05:51,712
where the photocoagulation.

109
00:05:51,712 --> 00:05:54,780
So where, I got a lot of
information inside of this or that.

110
00:05:54,780 --> 00:05:56,616
So is not, I gonna guess
sure not if you heard

111
00:05:56,617 --> 00:05:59,650
but is done impossible, so
thing is everything is strictly

112
00:05:59,650 --> 00:06:01,573
out of Suricata in this picture.

113
00:06:02,480 --> 00:06:03,940
Next one.

114
00:06:03,940 --> 00:06:07,873
So now let's see another one which is the,

115
00:06:11,366 --> 00:06:15,272
or TLS event that contains
the TLS information

116
00:06:16,630 --> 00:06:19,159
that we have seen on a TLS rule.

117
00:06:19,160 --> 00:06:23,370
So we have found some kind of
data that we have seen before,

118
00:06:23,370 --> 00:06:26,300
but I wanted to highlight little,

119
00:06:26,300 --> 00:06:28,450
somebody little information
that are quite interesting.

120
00:06:28,450 --> 00:06:31,900
So for example, you know we
see that we have first blue box

121
00:06:31,900 --> 00:06:34,820
it's an old fashion protocol,
it's TLS if you want.

122
00:06:34,820 --> 00:06:36,150
So it's easy to discriminate

123
00:06:36,150 --> 00:06:38,464
between new and old protocol.

124
00:06:38,464 --> 00:06:41,585
If you have security issue with JIRA V1.

125
00:06:41,585 --> 00:06:43,940
so it's better to have
this on your network.

126
00:06:43,940 --> 00:06:46,850
Also what we can see
is that the subject on

127
00:06:46,850 --> 00:06:49,240
the issue of DN are equal

128
00:06:49,240 --> 00:06:51,740
which means that it's a
self-signed certificate.

129
00:06:51,740 --> 00:06:53,771
So it's not a valid certificate authority.

130
00:06:53,771 --> 00:06:54,960
It's not secure.

131
00:06:54,960 --> 00:06:56,580
So we've got a bad photocard

132
00:06:56,581 --> 00:07:00,130
and unsecure certificate on this floor.

133
00:07:00,130 --> 00:07:02,400
So that's something that is very suspect.

134
00:07:02,400 --> 00:07:03,233
Next one.

135
00:07:06,610 --> 00:07:08,370
Okay let's speed up.

136
00:07:08,370 --> 00:07:11,100
Okay so let's take another
example in which is this time

137
00:07:11,100 --> 00:07:13,703
in the left.

138
00:07:18,530 --> 00:07:23,162
So that in the left I have HTTP protocol.

139
00:07:23,163 --> 00:07:26,060
Here we see a lot of
information that helps you

140
00:07:26,060 --> 00:07:26,953
to understand what is going on.

141
00:07:26,953 --> 00:07:30,198
Okay so do I talk to you
about a need, ventilation.

142
00:07:30,199 --> 00:07:31,841
there is not that, but let's look at

143
00:07:31,841 --> 00:07:34,580
what we have inside the HTTP.

144
00:07:34,580 --> 00:07:36,740
One of the first thing
is the first blue box,

145
00:07:36,740 --> 00:07:38,150
it's for hosting.

146
00:07:38,150 --> 00:07:41,560
With even for hosting is directly an IPV4.

147
00:07:41,560 --> 00:07:44,306
So it means when we use our direct connect

148
00:07:44,306 --> 00:07:47,204
through this system.

149
00:07:47,204 --> 00:07:50,740
Through this website by
taking the IPV4 address,

150
00:07:50,740 --> 00:07:52,003
on what we can see also,

151
00:07:54,640 --> 00:07:56,046
status to Android.

152
00:07:56,047 --> 00:07:59,380
And we associate it with digital web page.

153
00:07:59,380 --> 00:08:02,620
So we got the first online IPV4 address.

154
00:08:02,620 --> 00:08:04,350
And what we can see in the on start,

155
00:08:04,350 --> 00:08:06,580
which is the HTTP response body print.

156
00:08:06,580 --> 00:08:10,840
So that is what we got the
standard default web page it was.

157
00:08:10,840 --> 00:08:12,690
This is the default web page.

158
00:08:12,690 --> 00:08:16,718
So just by seeing this
we see that we have,

159
00:08:16,718 --> 00:08:18,940
something that looks
pretty bad because we have

160
00:08:18,940 --> 00:08:20,250
had the context that we have

161
00:08:20,250 --> 00:08:23,134
about VRF show us web page is ready,

162
00:08:23,134 --> 00:08:26,660
if you look URL I mean get the PHP

163
00:08:26,660 --> 00:08:29,710
on vendor HTTP port, which is 443.

164
00:08:29,710 --> 00:08:31,979
We've got a lot of that
stuff just by looking

165
00:08:31,980 --> 00:08:35,919
at this HTTP information,
that complement the detection

166
00:08:35,919 --> 00:08:38,919
that has been done in VNL by the detection

167
00:08:38,919 --> 00:08:41,189
on joint inside Suricata.

168
00:08:41,190 --> 00:08:42,023
Next one.

169
00:08:43,730 --> 00:08:46,850
Okay but all this information
that we have seen previously

170
00:08:46,850 --> 00:08:51,663
in the previous slide, where
about information that have

171
00:08:52,730 --> 00:08:56,933
been extracted by Suricata
at the application layer

172
00:08:56,933 --> 00:08:58,990
and the sunshine.

173
00:08:58,990 --> 00:09:02,140
If what we have is information that comes

174
00:09:02,140 --> 00:09:03,510
from the signature.

175
00:09:03,510 --> 00:09:05,930
There is what you want which is metadata,

176
00:09:05,930 --> 00:09:08,420
but it is used high
quality in the signature

177
00:09:08,420 --> 00:09:10,699
but allow you define T value.

178
00:09:10,700 --> 00:09:13,999
Put value inside and then
it can give you context,

179
00:09:13,999 --> 00:09:17,260
about what does signature match was about.

180
00:09:17,260 --> 00:09:20,079
So here we got two important,

181
00:09:20,079 --> 00:09:22,329
very important thing is
about ability project

182
00:09:22,330 --> 00:09:24,690
so we see that the
targeted project is inside

183
00:09:24,690 --> 00:09:27,080
Windows XP and below,

184
00:09:27,080 --> 00:09:30,817
which on for first metadata,
the single metadata

185
00:09:30,817 --> 00:09:32,400
is very very nice.

186
00:09:32,400 --> 00:09:35,900
Which is the Malware family,
so it means the alert

187
00:09:35,900 --> 00:09:39,730
was targeting the Trickbot
Malware so it was checked.

188
00:09:39,730 --> 00:09:42,648
It was time to detect,
the Trickbot Malware

189
00:09:42,648 --> 00:09:44,595
and then we have got two other information

190
00:09:44,595 --> 00:09:46,120
that can be readily restored.

191
00:09:46,120 --> 00:09:48,369
It's like creative atom updating the at.

192
00:09:48,369 --> 00:09:50,221
Updating the at will you,

193
00:09:50,221 --> 00:09:52,200
and then proceed that
your at has been updated,

194
00:09:52,200 --> 00:09:53,699
quite constantly.

195
00:09:53,699 --> 00:09:57,882
The created at, you will
where this at has been,

196
00:09:58,730 --> 00:10:02,310
found on a signature has
been written on this day.

197
00:10:02,310 --> 00:10:05,380
So if you to focus on the recent things

198
00:10:05,380 --> 00:10:08,000
which is usually the most active specs.

199
00:10:08,000 --> 00:10:11,260
You can use these as you
classify you have to say

200
00:10:11,260 --> 00:10:13,725
okay maybe look first at the,

201
00:10:13,725 --> 00:10:16,590
because it is the first stuff but maybe

202
00:10:16,590 --> 00:10:18,460
my ultimate alert restoration

203
00:10:18,460 --> 00:10:20,600
like EDS has changes is not hiding from.

204
00:10:20,600 --> 00:10:25,600
- And kind of a few words
about the open source SELKS.

205
00:10:25,765 --> 00:10:30,765
And that actually is
developed by some networks

206
00:10:31,220 --> 00:10:33,944
SELKS is a certain case
or a kind of base ideas,

207
00:10:33,944 --> 00:10:37,791
IPS and the same ecosystem with
its own graphic rule manager

208
00:10:37,792 --> 00:10:42,120
and basic network capabilities.

209
00:10:42,120 --> 00:10:44,470
SELK says Debian-based live distribution

210
00:10:44,470 --> 00:10:47,674
viewed from five key
open source components,

211
00:10:47,674 --> 00:10:50,010
that comprises name.

212
00:10:50,010 --> 00:10:52,436
So this is Suricata,
Elasticsearch, Logstash,

213
00:10:52,436 --> 00:10:55,667
Kibana and Stamu Scirius Community Edition

214
00:10:55,667 --> 00:10:57,720
which is your first Suricata management

215
00:10:57,720 --> 00:10:59,670
and Suricata hunting.

216
00:10:59,670 --> 00:11:02,615
In addition, it includes
some other components

217
00:11:02,615 --> 00:11:05,220
such as Moloch and Evebox
which were added actually

218
00:11:05,220 --> 00:11:07,556
after the acronym was established.

219
00:11:07,556 --> 00:11:08,710
But now apart SELKS.

220
00:11:08,710 --> 00:11:12,490
SELKS is a contribution
made by Stamus Networks

221
00:11:12,490 --> 00:11:14,722
to the open source community,
it's really available

222
00:11:14,722 --> 00:11:19,290
and it's released under
GPL version three license.

223
00:11:19,290 --> 00:11:22,599
So the source, the
readme, the issue tracker

224
00:11:22,600 --> 00:11:24,920
and the wiki you can GitHub as,

225
00:11:24,920 --> 00:11:28,810
GitHub.com/StamusNetwork/SELKS.

226
00:11:30,900 --> 00:11:33,933
Let's talk a little bit
about the challenge.

227
00:11:35,080 --> 00:11:36,490
The challenge is obvious.

228
00:11:36,490 --> 00:11:40,470
You know, typical day, the
sock involves you know,

229
00:11:40,470 --> 00:11:42,204
hundreds of millions of events,

230
00:11:42,204 --> 00:11:45,391
anything from medium to large enterprise.

231
00:11:45,391 --> 00:11:47,199
So all these things need to be

232
00:11:48,165 --> 00:11:50,543
need to be taken into account.

233
00:11:52,190 --> 00:11:54,440
You have a lot of data
where do you start for

234
00:11:54,440 --> 00:11:55,960
what do you do with it?

235
00:11:55,960 --> 00:11:58,230
So that's always, that
always is a challenge.

236
00:11:58,230 --> 00:12:01,172
And in this case here
we'll, be talking about,

237
00:12:01,172 --> 00:12:02,340
Suricata data that's produced

238
00:12:02,340 --> 00:12:07,010
by Suricata alerts,
protocol data and so forth

239
00:12:07,010 --> 00:12:09,007
and how to best tackle it

240
00:12:09,007 --> 00:12:12,166
that fits some examples of how to do it.

241
00:12:12,167 --> 00:12:14,735
So the first thing you can do,

242
00:12:14,735 --> 00:12:19,550
is basically of course
you do some filtering.

243
00:12:19,550 --> 00:12:21,420
So select the words by way

244
00:12:21,420 --> 00:12:25,360
of filtering them based
on metadata from that.

245
00:12:25,360 --> 00:12:28,440
So we'll actually use filtering
methods to limit the number

246
00:12:28,440 --> 00:12:32,792
of alerts to investigate,
to concentrate on.

247
00:12:32,792 --> 00:12:36,080
Usually Suricata generates
a bunch of alerts

248
00:12:36,080 --> 00:12:38,793
using those context and actually,

249
00:12:41,600 --> 00:12:44,700
make sure you know which
components of the alert metadata

250
00:12:44,700 --> 00:12:46,400
actually are vulnerable.

251
00:12:46,400 --> 00:12:49,209
So for example, don't use severity

252
00:12:49,210 --> 00:12:52,203
because actually it
could be misstating words

253
00:12:52,203 --> 00:12:55,880
of bigger severity
category for my network,

254
00:12:55,880 --> 00:12:56,810
for my organization

255
00:12:56,810 --> 00:12:58,510
network might not necessarily,

256
00:12:58,510 --> 00:13:00,651
be that severity for your organization,

257
00:13:00,651 --> 00:13:02,579
or for your network, a rule writers,

258
00:13:02,580 --> 00:13:05,370
no writers use it and set it

259
00:13:06,240 --> 00:13:08,247
especially having in mind
that there's different sources

260
00:13:08,247 --> 00:13:10,627
of rule sets for writers

261
00:13:10,627 --> 00:13:12,738
for example nowadays.

262
00:13:12,739 --> 00:13:14,660
The default value is actually critical,

263
00:13:14,660 --> 00:13:17,860
when you use severity,
but let's go and look

264
00:13:17,860 --> 00:13:20,860
at a couple of complimentary
approaches that we can try out,

265
00:13:22,270 --> 00:13:25,160
so classification base
and hunting approach okay.

266
00:13:25,160 --> 00:13:28,459
So classification base
is actually zoomed in

267
00:13:28,460 --> 00:13:33,090
on involving some sorts
of filter sets rather

268
00:13:33,090 --> 00:13:37,203
to filter out and
classify, let's say events,

269
00:13:37,203 --> 00:13:41,350
what in CNC Malware select
kind of the more important

270
00:13:41,350 --> 00:13:42,740
or the real threats.

271
00:13:42,740 --> 00:13:45,072
The more important events
are the real threats.

272
00:13:45,072 --> 00:13:48,330
And then the hunting
approaches for example,

273
00:13:48,330 --> 00:13:52,100
increase your pace and increase your odds

274
00:13:52,100 --> 00:13:54,918
of defeating the other
sorry by investigation,

275
00:13:54,918 --> 00:13:58,010
period you have alerts by
combination of factors,

276
00:13:58,010 --> 00:14:00,650
you know combined
different things together

277
00:14:00,650 --> 00:14:02,620
and that formula actually results

278
00:14:02,620 --> 00:14:07,620
into something more
relevant to investigate.

279
00:14:08,090 --> 00:14:11,943
So, let's have a look actually at a,

280
00:14:13,250 --> 00:14:16,527
I would say three such examples,

281
00:14:16,527 --> 00:14:18,877
some hands-on first we're going to use

282
00:14:18,877 --> 00:14:20,770
the Scirious Community Edition

283
00:14:20,770 --> 00:14:22,975
and then Kibana queries

284
00:14:22,975 --> 00:14:26,354
and three small, very
simple example was just

285
00:14:26,354 --> 00:14:28,660
to emphasize the points
of the different angles

286
00:14:28,660 --> 00:14:33,030
you can take when you
are actually hunting.

287
00:14:33,030 --> 00:14:34,949
So the first concept is like filter

288
00:14:34,950 --> 00:14:38,141
out the noise, active hunting,
discover unknown threats

289
00:14:38,141 --> 00:14:43,110
by way of a filter sets with
the Scirius Community Edition

290
00:14:43,110 --> 00:14:47,300
and the other approach would
be actually hunting queries

291
00:14:47,300 --> 00:14:48,750
by application layer protocol.

292
00:14:48,750 --> 00:14:53,750
So not a lot, not a lot
events related whatsoever.

293
00:14:54,070 --> 00:14:58,940
Now, let's go on to the lab demo.

294
00:14:58,940 --> 00:15:03,800
I'm going to share my screen.

295
00:15:03,800 --> 00:15:04,683
Let me see.

296
00:15:05,950 --> 00:15:10,100
I'm going to do, this stop share.

297
00:15:10,100 --> 00:15:12,923
Do you folks see my screen?

298
00:15:15,192 --> 00:15:17,403
- Can you not just keep the slides up?

299
00:15:19,530 --> 00:15:21,863
- Now it should be, it
should be better okay.

300
00:15:22,800 --> 00:15:24,823
So what we have here is actually,

301
00:15:25,753 --> 00:15:30,753
the landing page of
Scirius Community Edition.

302
00:15:31,160 --> 00:15:34,579
We have a switcher up here
from which I'm gonna jump into,

303
00:15:34,580 --> 00:15:37,260
the hunting application, right in here.

304
00:15:37,260 --> 00:15:40,330
So, this hunting implication actually,

305
00:15:40,330 --> 00:15:44,800
will be a way of using the
filter sets as an example.

306
00:15:44,800 --> 00:15:49,260
And we're actually will be doing
active filtering let's say.

307
00:15:49,260 --> 00:15:53,310
As a couple of filters
that I like to show you

308
00:15:53,310 --> 00:15:55,640
the first one is actually very simple.

309
00:15:55,640 --> 00:15:57,160
It's called tearless old version.

310
00:15:57,160 --> 00:15:59,810
So basically what it is is saying,

311
00:15:59,810 --> 00:16:04,810
we're actually saying, show
me any TLS protocol based

312
00:16:04,981 --> 00:16:09,720
alert events but where
the TLS version is older.

313
00:16:09,720 --> 00:16:12,570
And as you can see this is a simple query.

314
00:16:12,570 --> 00:16:15,720
It returns about 160 results.

315
00:16:15,720 --> 00:16:17,440
It immediately zooms into that.

316
00:16:17,440 --> 00:16:20,410
And the purpose of it actually is just to

317
00:16:20,410 --> 00:16:24,490
show all the TLS non-secure
version of sense.

318
00:16:24,490 --> 00:16:26,210
So let's go ahead and actually have a look

319
00:16:26,210 --> 00:16:29,910
at one of the one such
alerts and see what it shows.

320
00:16:29,910 --> 00:16:32,160
So we have an example of an alert here.

321
00:16:32,160 --> 00:16:36,170
We have the extra TLS protocol, dating

322
00:16:36,170 --> 00:16:40,110
then we have payload principal,
we'll have the signature ID

323
00:16:40,110 --> 00:16:43,700
and we actually have the role log itself.

324
00:16:43,700 --> 00:16:46,691
So in here, this is
actually in Json format.

325
00:16:46,691 --> 00:16:51,170
So in here, we have
any unknown information

326
00:16:51,170 --> 00:16:54,310
about the alert and as we can see,

327
00:16:54,310 --> 00:16:57,290
we were actually looking
for all the tillers versions

328
00:16:57,290 --> 00:16:59,938
and that's why the results were returned.

329
00:16:59,938 --> 00:17:01,943
We have the flat included in there

330
00:17:01,943 --> 00:17:06,943
and you can see by the
subject and be sure that,

331
00:17:08,450 --> 00:17:10,640
we have additional information
there, but it's very

332
00:17:10,640 --> 00:17:15,632
very low old rather version of Telus.

333
00:17:15,632 --> 00:17:16,465
Now.

334
00:17:19,670 --> 00:17:23,911
- You should share the
end of substitute it.

335
00:17:23,911 --> 00:17:28,340
It's valid till 2044.

336
00:17:31,540 --> 00:17:33,320
- A bit of a longer there.

337
00:17:33,320 --> 00:17:36,706
- When you consider, one year
is already is already gone.

338
00:17:42,905 --> 00:17:45,690
- You know an accompany with a GMO.

339
00:17:45,690 --> 00:17:47,280
There's a lot of things
we can hang on here

340
00:17:47,280 --> 00:17:48,129
yeah, absolutely.

341
00:17:49,400 --> 00:17:52,120
So the second filter says,
let's say another filter

342
00:17:52,120 --> 00:17:55,320
another perspective,
another zoom in would be

343
00:17:55,320 --> 00:17:58,040
actually let's say hidden an executable.

344
00:17:58,040 --> 00:18:00,260
So what does this mean?

345
00:18:00,260 --> 00:18:02,840
Actually, the filter itself is kind of

346
00:18:02,840 --> 00:18:07,669
self-explanatory very,
I think very obvious.

347
00:18:07,670 --> 00:18:08,830
So basically we're looking

348
00:18:08,830 --> 00:18:13,689
for HTP content that says
it's an image, right.

349
00:18:13,690 --> 00:18:15,900
But it's actually an executable.

350
00:18:15,900 --> 00:18:18,180
So hence the name with hidden executable.

351
00:18:18,180 --> 00:18:19,420
So what does this Well,

352
00:18:25,412 --> 00:18:29,100
okay so, always have a
look at the look at work.

353
00:18:29,100 --> 00:18:30,659
Yeah, sure go ahead.

354
00:18:30,660 --> 00:18:32,410
- We lost for 10 seconds,

355
00:18:32,410 --> 00:18:35,430
so if you can, just start from the point

356
00:18:35,430 --> 00:18:36,780
where you were saying that.

357
00:18:37,952 --> 00:18:41,410
Just after the beginning
of, that would be nice.

358
00:18:41,410 --> 00:18:42,470
- Okay right in here.

359
00:18:42,470 --> 00:18:45,300
So here we have apologies.

360
00:18:45,300 --> 00:18:48,491
So here we have another
perspective of that filter set.

361
00:18:48,491 --> 00:18:52,570
It is basically self-explanatory.

362
00:18:52,570 --> 00:18:56,700
I think a we're looking for
HTP content that advertises

363
00:18:56,700 --> 00:18:59,520
itself as an image, but it's actually,

364
00:18:59,520 --> 00:19:01,308
it is actually unexecutable

365
00:19:01,308 --> 00:19:06,308
and the the filter here
immediately returns 20 results

366
00:19:06,510 --> 00:19:07,870
for such events.

367
00:19:07,870 --> 00:19:09,638
Again, we don't really care about,

368
00:19:09,638 --> 00:19:13,518
MD5s red listed to white
list events would just say,

369
00:19:13,518 --> 00:19:16,540
give us images that are advertising

370
00:19:16,540 --> 00:19:20,300
give us files as images
will actually executable.

371
00:19:20,300 --> 00:19:23,110
And actually if you zoom in on

372
00:19:23,110 --> 00:19:26,320
and have a look at some
of some of those examples.

373
00:19:26,320 --> 00:19:27,639
When we go to the alert

374
00:19:27,640 --> 00:19:30,670
that these are actually
fetched all the logs in here

375
00:19:30,670 --> 00:19:32,883
and let's have a look at the first one.

376
00:19:33,942 --> 00:19:38,690
And as you can see here,

377
00:19:38,690 --> 00:19:42,460
we have the metadata,
which is quite revealing.

378
00:19:42,460 --> 00:19:44,230
Basically it's saying that we have

379
00:19:45,073 --> 00:19:49,453
a Win peg advertising
as a content type image.

380
00:19:51,280 --> 00:19:53,920
We have a payable principle and
interest for responsibility.

381
00:19:53,920 --> 00:19:56,810
But if we actually go to
look at the related events

382
00:19:56,810 --> 00:20:00,260
we can see that this is actually a file,

383
00:20:00,260 --> 00:20:01,690
is called the Window of P and G,

384
00:20:01,690 --> 00:20:03,790
but it's actually unexecutable.

385
00:20:03,790 --> 00:20:06,639
And this is actually the file transaction.

386
00:20:06,640 --> 00:20:08,440
The file information load would check sums

387
00:20:08,440 --> 00:20:10,600
with magic and so on and so forth.

388
00:20:10,600 --> 00:20:13,469
We have the related HTP requests,

389
00:20:13,470 --> 00:20:16,784
that actually provides further evidence

390
00:20:16,784 --> 00:20:18,580
for where will this downloaded?

391
00:20:18,580 --> 00:20:19,510
Was it successful?

392
00:20:19,510 --> 00:20:23,131
We know the content
time metals and similar.

393
00:20:23,131 --> 00:20:24,752
And of course the conversation,

394
00:20:24,752 --> 00:20:27,950
that triggered that alert also
triggered three other alerts.

395
00:20:27,950 --> 00:20:30,150
And here is all the data, you know.

396
00:20:30,150 --> 00:20:34,050
The file transaction DHCP
log itself, just a quick,

397
00:20:34,050 --> 00:20:37,668
a quick simple example
of how powerful filtering

398
00:20:37,669 --> 00:20:39,533
on metadata can be.

399
00:20:40,730 --> 00:20:43,790
What I wanna show you a third example.

400
00:20:43,790 --> 00:20:48,740
We will actually quickly jump
over to dashboards in Kibana.

401
00:20:48,740 --> 00:20:51,340
So the hump, the Scirius
condition was actually,

402
00:20:51,340 --> 00:20:53,060
it's actually a hunting interface,

403
00:20:53,060 --> 00:20:55,970
based off and displaced database of alerts

404
00:20:55,970 --> 00:20:57,530
and alerts metadata.

405
00:20:57,530 --> 00:21:01,250
Here I'd like to actually
show you file transactions.

406
00:21:01,250 --> 00:21:03,310
So basically this is not alert.

407
00:21:03,310 --> 00:21:07,081
This is any filed
transactions on the network.

408
00:21:07,082 --> 00:21:09,790
Suricata is capable of
actually extracting,

409
00:21:09,790 --> 00:21:13,585
that information from
protocols like HTP, FTP

410
00:21:13,585 --> 00:21:17,550
NFSS and them being, SMTP and similar.

411
00:21:17,550 --> 00:21:20,287
And here I've actually
prepared a simple query.

412
00:21:20,287 --> 00:21:21,120
Yeah I go ahead.

413
00:21:21,120 --> 00:21:22,639
- I also think what you
did not mentioned yet

414
00:21:22,640 --> 00:21:26,530
is what we come this time
with this find on the disk.

415
00:21:26,530 --> 00:21:29,800
So you can have a
signature that it's typed

416
00:21:29,800 --> 00:21:31,879
but when it matched, it's
time to find on disk.

417
00:21:31,880 --> 00:21:34,621
You can do like you say insights Suricata.

418
00:21:34,621 --> 00:21:37,383
Every time you see a
file it's likely to disk.

419
00:21:38,870 --> 00:21:40,479
- Absolutely, thank you.

420
00:21:40,480 --> 00:21:43,490
And here in this case,

421
00:21:43,490 --> 00:21:45,460
we have a dashboard actually displaying

422
00:21:45,460 --> 00:21:47,990
all the information any and
all files, regardless of.

423
00:21:47,990 --> 00:21:50,520
So for example here we have HCP and SMB,

424
00:21:50,520 --> 00:21:52,666
application lab protocols that we've seen

425
00:21:52,666 --> 00:21:54,144
file transactions from.

426
00:21:54,144 --> 00:21:56,514
We've created a simple query in here.

427
00:21:56,514 --> 00:21:59,750
So what we're gonna do
is actually activate it.

428
00:21:59,750 --> 00:22:01,675
Basically what it says is,

429
00:22:01,675 --> 00:22:06,210
we're saying from protocols
like FTP, SMB, HTP

430
00:22:06,210 --> 00:22:11,210
NFS some SMTP, please show us,

431
00:22:11,220 --> 00:22:16,110
executable types that
are actually very long,

432
00:22:16,110 --> 00:22:18,780
in terms of name, just a sample query.

433
00:22:18,780 --> 00:22:20,790
Okay you will be surprised by the results.

434
00:22:20,790 --> 00:22:23,030
So as we scroll down,
we can see the results

435
00:22:23,030 --> 00:22:26,090
and we have for sub transactions

436
00:22:26,090 --> 00:22:29,060
and it can actually see that
the names are quite unusual.

437
00:22:29,060 --> 00:22:31,253
So if we look at one such,

438
00:22:32,750 --> 00:22:34,510
such transaction, we can see

439
00:22:34,510 --> 00:22:38,470
this is a file move a file,
a file name makes executable.

440
00:22:38,470 --> 00:22:41,070
It's unusual to have
that name it's a bit long

441
00:22:41,070 --> 00:22:45,760
and kind of non-logical
to say the very least,

442
00:22:45,760 --> 00:22:47,367
we know that it's an executable.

443
00:22:47,367 --> 00:22:49,722
And actually as we scroll down,

444
00:22:49,722 --> 00:22:52,100
this is pure protocol data.

445
00:22:52,100 --> 00:22:53,790
So this has nothing to do with alerts.

446
00:22:53,790 --> 00:22:56,550
We can actually see
that this is a SMB log.

447
00:22:56,550 --> 00:22:57,620
It's the right.

448
00:22:57,620 --> 00:23:01,822
And basically it's writing
from this source IP to 505

449
00:23:03,460 --> 00:23:06,380
and actually this name is unusual.

450
00:23:06,380 --> 00:23:09,781
So we can actually, we have
a sharp 250 fixed checks on.

451
00:23:09,781 --> 00:23:12,010
We can click on it.

452
00:23:12,010 --> 00:23:13,660
That will bring us to Virus total.

453
00:23:13,660 --> 00:23:14,910
I will, you know, in this case

454
00:23:14,910 --> 00:23:19,910
this one was actually red
listed here in versatile.

455
00:23:20,150 --> 00:23:22,254
So again, this is just an angle.

456
00:23:22,254 --> 00:23:27,199
This is just an idea, but
it's not based on alerts.

457
00:23:27,200 --> 00:23:31,240
This is just entirely
searching queries based

458
00:23:31,240 --> 00:23:33,320
on protocol data in this case, SMB.

459
00:23:34,660 --> 00:23:37,170
So those are the three
examples that I wanted to show.

460
00:23:37,170 --> 00:23:39,963
Let me go ahead will
re share my slides now,

461
00:23:40,890 --> 00:23:44,358
here's another example
based on filter sets.

462
00:23:44,358 --> 00:23:46,889
So in this case, we
are actually filtering,

463
00:23:46,890 --> 00:23:48,913
filtering out by like
category in this case

464
00:23:48,913 --> 00:23:51,083
it's called malware command and control.

465
00:23:52,150 --> 00:23:56,210
Simple but yet it can zoom out
from a million to 10 events.

466
00:23:56,210 --> 00:23:58,710
So you have to combine all these.

467
00:23:58,710 --> 00:24:00,320
There's also a different perspective.

468
00:24:00,320 --> 00:24:03,260
This is just the one that we demoed.

469
00:24:03,260 --> 00:24:04,670
So an executable off

470
00:24:04,670 --> 00:24:08,120
of replacing itself was
an image, really simple.

471
00:24:08,120 --> 00:24:09,043
This is an interesting one.

472
00:24:09,043 --> 00:24:10,610
This is basically what
it comes to something

473
00:24:10,610 --> 00:24:12,350
so it's very simple.

474
00:24:12,350 --> 00:24:17,350
HTP requests replies to
just public IPV4 interests.

475
00:24:17,550 --> 00:24:20,422
Usually use some sort of a domain

476
00:24:20,422 --> 00:24:22,760
not actually the actual IP,

477
00:24:22,760 --> 00:24:24,730
but it can return actually
interesting results

478
00:24:24,730 --> 00:24:27,320
for investigation regardless
of sort of destination

479
00:24:27,320 --> 00:24:29,433
or the name of domain.

480
00:24:30,373 --> 00:24:34,070
There's another example here
that we actually similar tools.

481
00:24:34,070 --> 00:24:36,879
We covered older versions of TLS.

482
00:24:36,880 --> 00:24:38,370
You know, if you have security events

483
00:24:38,370 --> 00:24:41,050
security alerts that are triggered

484
00:24:41,050 --> 00:24:44,850
by unsupported TLS
protocol version let's say.

485
00:24:44,850 --> 00:24:47,550
And that's an interesting one.

486
00:24:47,550 --> 00:24:51,550
Actually here we have,
basically we're saying

487
00:24:51,550 --> 00:24:56,461
give us HTP protocol us that actually are

488
00:24:56,461 --> 00:24:59,120
and we're looking for the word roots

489
00:24:59,120 --> 00:25:00,479
inside the payload.

490
00:25:00,480 --> 00:25:02,230
We're inside the packets.

491
00:25:02,230 --> 00:25:05,140
So that comes with an interesting results.

492
00:25:05,140 --> 00:25:06,410
Believe it or not.

493
00:25:06,410 --> 00:25:09,204
So a different, a different angle

494
00:25:09,204 --> 00:25:12,850
and Eric back to you and
why a filtering is great,

495
00:25:12,850 --> 00:25:14,349
but it has challenges.

496
00:25:14,349 --> 00:25:16,208
What do you say?

497
00:25:16,209 --> 00:25:18,075
- So what Peter did showed currently is

498
00:25:18,075 --> 00:25:20,242
a great, for certain team.

499
00:25:22,430 --> 00:25:23,725
But the other one is,

500
00:25:23,725 --> 00:25:28,725
if you have to do this work of discovery,

501
00:25:28,950 --> 00:25:30,530
they doing thing every day.

502
00:25:30,530 --> 00:25:31,690
Even if you have a few data sets

503
00:25:31,690 --> 00:25:35,380
you will need to go over
all the filter sets,

504
00:25:35,380 --> 00:25:39,179
one by one and it may not
be the most efficient way,

505
00:25:39,179 --> 00:25:42,900
to directly jump on the new things

506
00:25:44,900 --> 00:25:47,023
that need to be investigated.

507
00:25:48,002 --> 00:25:50,089
That will need investigation sorry.

508
00:25:50,089 --> 00:25:51,530
Peter next one.

509
00:25:51,530 --> 00:25:55,685
So, one possible approach
to free this issue is to,

510
00:25:55,685 --> 00:25:59,864
simply tag the event.

511
00:25:59,864 --> 00:26:04,680
Tagging the event is really
something that you need to do

512
00:26:04,680 --> 00:26:07,700
because you, in fact you don't
want to surprise the event.

513
00:26:07,700 --> 00:26:09,300
Because if your surprise event,

514
00:26:09,300 --> 00:26:12,128
you will lose some contexts,
but can be a really

515
00:26:12,128 --> 00:26:13,659
interesting in some case to discriminate,

516
00:26:13,660 --> 00:26:17,548
to combine in the search,
to do the right analysis.

517
00:26:17,548 --> 00:26:22,548
So try not to surprise but
use a tagging mechanism.

518
00:26:24,190 --> 00:26:26,130
So to do a tagging mechanism there is some

519
00:26:26,130 --> 00:26:28,887
simple possibility, you
can sure using something

520
00:26:28,887 --> 00:26:30,254
against to search.

521
00:26:30,255 --> 00:26:31,510
We can do queries on update,

522
00:26:31,510 --> 00:26:34,806
you can also work on output of Suricata

523
00:26:34,806 --> 00:26:39,110
with some what forces
you to do the filtering.

524
00:26:39,110 --> 00:26:42,520
But what is really important here is that

525
00:26:42,520 --> 00:26:45,600
if you look what we have
shown you since the beginning

526
00:26:45,600 --> 00:26:47,179
you've got the metadata coming

527
00:26:47,180 --> 00:26:48,950
from this thing that you have committed

528
00:26:48,950 --> 00:26:51,430
into coming from application layer

529
00:26:51,430 --> 00:26:54,364
and both of them are very valuable source

530
00:26:54,364 --> 00:26:56,970
of information when you tie to analyze

531
00:26:56,970 --> 00:26:59,810
on when you analyze a VNF.

532
00:26:59,810 --> 00:27:01,590
So usually when you are doing this work

533
00:27:01,590 --> 00:27:02,423
and finally using VNF

534
00:27:03,960 --> 00:27:07,450
you will see that this combined to this,

535
00:27:07,450 --> 00:27:10,973
combined to this, is in
fact meaningful for you.

536
00:27:12,080 --> 00:27:13,939
You know that if it's repeat itself

537
00:27:13,940 --> 00:27:17,510
you will have something that
is, would still be interesting.

538
00:27:17,510 --> 00:27:20,063
Or if you have this on
this combine, you know

539
00:27:20,063 --> 00:27:22,455
that it would be always be information

540
00:27:22,455 --> 00:27:24,689
with regards to your network.

541
00:27:24,690 --> 00:27:27,940
So one of the best idea you can have here

542
00:27:27,940 --> 00:27:29,703
is to combine this information.

543
00:27:30,720 --> 00:27:32,640
Every time you've got this set of criteria

544
00:27:32,640 --> 00:27:36,990
you drill the holes that will tag

545
00:27:36,990 --> 00:27:40,512
this the event as a superior
event as information.

546
00:27:40,512 --> 00:27:43,738
It will allow you to update the daily job,

547
00:27:43,738 --> 00:27:46,520
first to check that
event, because you know

548
00:27:46,520 --> 00:27:48,771
possibly some best
effort of a coming back,

549
00:27:48,771 --> 00:27:50,896
then you investigate,

550
00:27:50,896 --> 00:27:53,700
you look at the things that you don't know

551
00:27:53,700 --> 00:27:55,560
you do the classification.

552
00:27:55,560 --> 00:27:58,409
So this way you have something that you,

553
00:27:58,410 --> 00:28:00,640
what you have less work
to do, less to focus.

554
00:28:00,640 --> 00:28:03,670
You just have to focus on what is relevant

555
00:28:03,670 --> 00:28:06,050
what is unknown to do the classification

556
00:28:06,050 --> 00:28:11,050
on, it's not responsive
safe, we need look that too.

557
00:28:11,630 --> 00:28:12,463
Next one.

558
00:28:14,280 --> 00:28:18,347
So, Mr. firs is really
nice, but it has some limits

559
00:28:18,347 --> 00:28:21,950
because for example, you
should take one signature

560
00:28:21,950 --> 00:28:24,466
that detect a criminal court for a beacon,

561
00:28:24,466 --> 00:28:28,040
that can eat every five minutes.

562
00:28:28,040 --> 00:28:31,008
So every five minutes we have
a new alert to investigate.

563
00:28:31,008 --> 00:28:32,710
So at the end of the
day, you still have a lot

564
00:28:32,710 --> 00:28:33,973
of to investigate.

565
00:28:34,880 --> 00:28:37,350
So let's take step back.

566
00:28:37,350 --> 00:28:41,889
We have in fact, when we're
all doing, what we are tying

567
00:28:41,890 --> 00:28:44,646
to different organization
is to find if have

568
00:28:44,646 --> 00:28:45,812
asset at risk.

569
00:28:46,912 --> 00:28:50,340
And I said that it's
potentially infected by a state.

570
00:28:51,670 --> 00:28:55,600
So what will be easier
is to be able to see,

571
00:28:55,600 --> 00:28:57,362
okay I've got some signature,
I've got some event

572
00:28:57,363 --> 00:29:00,661
I've got some edits I want to come from.

573
00:29:00,661 --> 00:29:04,791
we set up a list of assets
that are potentially

574
00:29:04,791 --> 00:29:06,153
infected by asset.

575
00:29:08,130 --> 00:29:10,600
This would be really
useful, because it will be

576
00:29:10,600 --> 00:29:12,810
allow us to be limit vendors about earlier

577
00:29:12,810 --> 00:29:15,120
that repeat themselves.

578
00:29:15,120 --> 00:29:17,110
And it will give us a clear view

579
00:29:17,110 --> 00:29:18,689
of what is happening on the network.

580
00:29:18,690 --> 00:29:19,523
Next one.

581
00:29:20,790 --> 00:29:24,897
So I was asked this question long ago

582
00:29:24,897 --> 00:29:28,206
and it was quite a problem,
infact because if you need

583
00:29:28,207 --> 00:29:33,207
to answer to the question,
give me the list of asset

584
00:29:33,326 --> 00:29:37,060
of the list of attacker in one network,

585
00:29:37,060 --> 00:29:40,303
based on net, event.

586
00:29:40,304 --> 00:29:43,578
It's in fact hand written.

587
00:29:43,578 --> 00:29:47,360
It will be for sure the
source of a destination IP

588
00:29:47,360 --> 00:29:49,147
but you don't really know which one it is.

589
00:29:49,147 --> 00:29:51,881
For example, if we take the
first one which is a scan,

590
00:29:51,882 --> 00:29:54,610
because the scan packet
coming from Vertech

591
00:29:54,610 --> 00:29:56,100
you're going to turn it.

592
00:29:56,100 --> 00:29:58,959
But if you're looking, look
at the signature on it,

593
00:29:58,960 --> 00:30:01,250
second signature sorry in this case,

594
00:30:01,250 --> 00:30:04,370
it's check that the answer
is an answer to an attack.

595
00:30:04,370 --> 00:30:07,796
So expect the source on
this nation are reversed,

596
00:30:07,797 --> 00:30:12,300
with compared to the source
on target of the attack.

597
00:30:12,300 --> 00:30:13,930
So you don't, you cannot
find this university

598
00:30:13,930 --> 00:30:16,950
you cannot save a asset
is always the source IP

599
00:30:16,950 --> 00:30:20,450
that is not working and it's
not ever from a destination IP.

600
00:30:20,450 --> 00:30:22,003
So you need to improve that.

601
00:30:23,470 --> 00:30:24,303
Next one.

602
00:30:24,303 --> 00:30:28,361
So that's something I
did introduce by doing

603
00:30:28,361 --> 00:30:32,933
the target keyword insights
work at times 2016.

604
00:30:34,100 --> 00:30:37,300
And it's just a simple
option that you add to

605
00:30:37,300 --> 00:30:39,820
missing a job to save on
the targets of assets,

606
00:30:39,820 --> 00:30:41,904
is the source of a destination IP,

607
00:30:41,904 --> 00:30:44,010
in of a signature.

608
00:30:44,010 --> 00:30:45,650
So by doing this,

609
00:30:45,650 --> 00:30:49,481
we can have the clear information
about what's going on.

610
00:30:49,481 --> 00:30:51,870
Next one, please.

611
00:30:55,800 --> 00:30:57,540
Yeah so when do we have

612
00:30:57,540 --> 00:31:00,420
when we have this key word
on the inside this unit here,

613
00:31:00,420 --> 00:31:03,810
it create alert.source and alert.targets

614
00:31:03,810 --> 00:31:06,800
an object that contains
information about the IP

615
00:31:06,800 --> 00:31:07,903
on top of the source on the target.

616
00:31:10,308 --> 00:31:11,141
One way of doing this,

617
00:31:11,141 --> 00:31:16,141
if you want the list via set
on when detected by the ideas.

618
00:31:16,430 --> 00:31:18,603
You just do, I left target.apmvenue.

619
00:31:20,220 --> 00:31:21,832
Before it was not doing well.

620
00:31:21,832 --> 00:31:23,540
You have some induction to do manually.

621
00:31:23,540 --> 00:31:25,293
So it was only a thing.

622
00:31:25,293 --> 00:31:29,354
So suddenly not all
the signature contents,

623
00:31:29,355 --> 00:31:34,040
target well so if you can put pressure on,

624
00:31:34,040 --> 00:31:37,450
for example proof point,
so we add the targets,

625
00:31:37,450 --> 00:31:38,933
key world to that one set

626
00:31:40,250 --> 00:31:42,090
which is the coupon that would be on it.

627
00:31:42,090 --> 00:31:43,899
Your appointment will be a bit nice.

628
00:31:43,900 --> 00:31:46,658
As soon as it were introduced in a Scirius

629
00:31:46,658 --> 00:31:47,530
community edition.

630
00:31:47,530 --> 00:31:51,200
So incense noticed on
some algorithm to manually

631
00:31:51,200 --> 00:31:54,420
to determining the value and
you can also do that manually

632
00:31:54,420 --> 00:31:56,109
so you can get to the result.

633
00:31:56,109 --> 00:31:57,832
So next one.

634
00:31:59,260 --> 00:32:00,530
So what is the wizard?

635
00:32:00,530 --> 00:32:04,220
Wizard is let it become
obvious to get a preview

636
00:32:04,220 --> 00:32:07,940
of what is happening on
your network, intel offsite.

637
00:32:07,940 --> 00:32:10,703
So here we have a simple Kibana queries,

638
00:32:10,703 --> 00:32:15,703
that the display of table, the
first column is of a target,

639
00:32:16,440 --> 00:32:19,140
a piece of a list of asset.

640
00:32:19,140 --> 00:32:20,420
On the second column,

641
00:32:20,420 --> 00:32:21,690
is the malware family.

642
00:32:21,690 --> 00:32:23,540
One of the metadata that we have seen

643
00:32:24,413 --> 00:32:26,120
at the beginning of the presentation.

644
00:32:26,120 --> 00:32:29,290
So by combining these in one query

645
00:32:29,290 --> 00:32:31,270
we have a list of two assets

646
00:32:31,270 --> 00:32:34,610
on this network that we find that 500,

647
00:32:34,610 --> 00:32:37,979
the fact that one a one
that have one suites hyped

648
00:32:38,999 --> 00:32:41,203
on the other one as the
thing five sites seen,

649
00:32:42,456 --> 00:32:43,305
you know, in it.

650
00:32:43,306 --> 00:32:45,730
So we get to your view
obviously, present on my network

651
00:32:45,730 --> 00:32:47,870
on my asset in one single query.

652
00:32:47,870 --> 00:32:49,830
So that's failure simply if you just show

653
00:32:51,117 --> 00:32:53,920
even if for example, over
three, but detection is a CNC.

654
00:32:53,920 --> 00:32:57,200
We, just have one information on venue

655
00:32:57,200 --> 00:33:00,980
can also combine with by
doing more advanced query

656
00:33:00,980 --> 00:33:05,915
but you can do already
better things by doing that.

657
00:33:05,915 --> 00:33:08,220
- Sorry thank you about that.

658
00:33:08,220 --> 00:33:10,990
So if you're mentioning
Eric, it's actually

659
00:33:10,990 --> 00:33:13,440
it's a repetitive process,
but the repetitive part you

660
00:33:13,440 --> 00:33:15,653
need to actually automate
and you can automate so

661
00:33:15,653 --> 00:33:19,340
that you have to, you know,
it can look at less and less

662
00:33:19,340 --> 00:33:20,592
and more relevant stuff.

663
00:33:21,780 --> 00:33:25,530
The challenges of relying
on just signature data

664
00:33:25,530 --> 00:33:29,200
along there is a few, of
course the classification

665
00:33:29,200 --> 00:33:30,930
can be complex.

666
00:33:30,930 --> 00:33:34,887
It requires some signature
writers to insert the source

667
00:33:34,887 --> 00:33:36,330
and target keywords.

668
00:33:36,330 --> 00:33:40,480
When writing the rules,
some signatures will only

669
00:33:40,480 --> 00:33:42,600
identify possible threats.

670
00:33:42,600 --> 00:33:45,312
So it could, might not be so useful.

671
00:33:45,312 --> 00:33:48,036
There's a variety of signature sources,

672
00:33:48,037 --> 00:33:50,750
all sorts of providers.

673
00:33:50,750 --> 00:33:54,026
So basically you need to
actually sort repair the process.

674
00:33:54,026 --> 00:33:57,685
Signatures are updated
daily and a lot of phases

675
00:33:57,685 --> 00:34:00,649
where you have, as I
mentioned, different providers.

676
00:34:00,650 --> 00:34:02,580
So you have to actually, it's
something that you have to

677
00:34:02,580 --> 00:34:05,199
do repetitively in a high-paced as well.

678
00:34:05,200 --> 00:34:08,228
So you have to review the
sources, the information

679
00:34:08,228 --> 00:34:10,810
that you get from there, update
the signature content as see

680
00:34:10,810 --> 00:34:14,580
if you have to update anything
in the process in there

681
00:34:14,580 --> 00:34:16,679
and then push it out to the sensors.

682
00:34:16,679 --> 00:34:20,139
And that's repetitive that
has to happen on the fly

683
00:34:20,139 --> 00:34:23,364
and in a rapid fashion, wherever needed.

684
00:34:23,364 --> 00:34:25,110
Just taking pace.

685
00:34:25,110 --> 00:34:30,110
So it's a process that once-

686
00:34:30,579 --> 00:34:33,574
- You knew a couple of
times, you can automate.

687
00:34:33,574 --> 00:34:35,409
- Yes go ahead please.

688
00:34:35,409 --> 00:34:38,053
- No, we need to hurry up.

689
00:34:38,054 --> 00:34:43,054
- And so as open network
source for self contribution

690
00:34:43,270 --> 00:34:45,797
as well actually SELKS is one of them.

691
00:34:45,797 --> 00:34:49,370
It's actually open source
Suricata turnkey distro one.

692
00:34:49,370 --> 00:34:51,520
It's actually the first one out there

693
00:34:51,520 --> 00:34:55,590
that is entirely bases information
on Suricata data alone.

694
00:34:55,590 --> 00:34:59,690
We have GopherCap wall open
source PCAP playback tool.

695
00:34:59,690 --> 00:35:02,020
The you're more welcome to read,

696
00:35:02,020 --> 00:35:04,750
alarm and get the information in there.

697
00:35:04,750 --> 00:35:06,965
It comes really handy
when you need to replay

698
00:35:06,965 --> 00:35:10,783
multiple sorts of different
PCAPS just as they were

699
00:35:10,783 --> 00:35:14,450
as they appeared on the
network has double captions

700
00:35:14,450 --> 00:35:16,049
with the timestamps.

701
00:35:16,050 --> 00:35:18,333
We also have Stamus Network App Splunk.

702
00:35:18,333 --> 00:35:20,780
that is free out there for you,

703
00:35:20,780 --> 00:35:23,612
so that the information you'll get on the

704
00:35:23,612 --> 00:35:28,612
on some central, we are
actually we're believers,

705
00:35:30,090 --> 00:35:31,490
we're defenders, we're believers,

706
00:35:31,490 --> 00:35:34,390
we're believers that defender is a hero

707
00:35:34,390 --> 00:35:38,386
so and actually we believe in the future

708
00:35:38,387 --> 00:35:40,850
where those they protect remain safe.

709
00:35:40,850 --> 00:35:44,020
Okay, so we're just wanted to share some

710
00:35:44,020 --> 00:35:46,247
of the open source tools and processes

711
00:35:46,247 --> 00:35:51,247
and toasts that we actually
do daily at our jobs.

712
00:35:51,660 --> 00:35:56,660
And so apply what you've learned today.

713
00:35:56,847 --> 00:36:00,633
First of all, identify
filter sets in queries

714
00:36:00,633 --> 00:36:02,029
that yield interesting results,

715
00:36:02,030 --> 00:36:05,619
with respect to, we need to
set up your organization.

716
00:36:05,619 --> 00:36:08,526
Let's say that you do security monitoring.

717
00:36:08,526 --> 00:36:11,917
There is no golden
bullet, one fits them all.

718
00:36:11,918 --> 00:36:14,910
You have to actually identify those,

719
00:36:14,910 --> 00:36:19,029
what inquiry is actually
your most interesting results

720
00:36:19,030 --> 00:36:21,183
by the of providing Suricata.

721
00:36:22,920 --> 00:36:25,570
The next step will be
understand that the relationship

722
00:36:25,570 --> 00:36:28,217
the results and these hunting queries.

723
00:36:28,217 --> 00:36:31,150
You know, you'll learn as you
go and that's quite normal.

724
00:36:31,150 --> 00:36:33,903
There's you're always
learning a new environment.

725
00:36:33,903 --> 00:36:35,950
Every environment is different.

726
00:36:35,950 --> 00:36:38,669
And invest time into ultimating
different aspects of it.

727
00:36:38,670 --> 00:36:40,770
So once you do it manually

728
00:36:40,770 --> 00:36:42,370
and you're happy with the research

729
00:36:42,370 --> 00:36:44,574
and the results of the research,
you know, then actually

730
00:36:44,574 --> 00:36:47,080
at what exactly is repetitive,

731
00:36:47,080 --> 00:36:49,851
when it could be automated.

732
00:36:49,851 --> 00:36:52,710
Begin establishing a hunting process based

733
00:36:52,710 --> 00:36:54,600
on the lessons learned.

734
00:36:54,600 --> 00:36:57,870
So I also believe strongly in

735
00:36:57,870 --> 00:37:00,515
inactive threat hunting, you know

736
00:37:00,515 --> 00:37:01,930
go a little bit on the offensive.

737
00:37:01,930 --> 00:37:06,452
Don't just be reactive, go
proactive if possible of course.

738
00:37:06,452 --> 00:37:10,820
And then the last step
would be like, of course

739
00:37:10,820 --> 00:37:13,360
improve the current posture
by implementing those noise

740
00:37:13,360 --> 00:37:17,270
reduction process above
drive a direct project

741
00:37:17,270 --> 00:37:19,610
to improve the security
monitoring with all the lessons

742
00:37:19,610 --> 00:37:22,574
learned, implement all the
automation, ultimate on the ones

743
00:37:22,574 --> 00:37:27,043
and then automate a different
idea, a different process.

744
00:37:27,043 --> 00:37:30,520
Don't automate the same thing over again.

745
00:37:30,520 --> 00:37:32,997
Eric Washer was saying Suricata forums,

746
00:37:32,997 --> 00:37:35,859
all our data comes from Suricata

747
00:37:35,859 --> 00:37:36,947
in the demo line.

748
00:37:36,947 --> 00:37:39,890
And I know daily work, you have the links

749
00:37:39,890 --> 00:37:41,486
right there, on the screen.

750
00:37:41,486 --> 00:37:43,839
Eric is something I'm missing?

751
00:37:43,839 --> 00:37:46,099
- No no, I would just
say that if you want like

752
00:37:46,099 --> 00:37:48,740
a quick grasp of what we have shown

753
00:37:48,740 --> 00:37:52,250
it's very fast to spin up a
SELK sunset when it works.

754
00:37:52,250 --> 00:37:55,630
It just a few minutes before you get

755
00:37:55,630 --> 00:37:57,573
the first meaningful data.

756
00:37:57,573 --> 00:38:01,560
So for good tie on, she
wants some documentation

757
00:38:01,560 --> 00:38:04,360
or some training, you get
the forum for Suricata

758
00:38:04,360 --> 00:38:09,233
and you've got the Suricata
ideas training, done by Yosef.

759
00:38:10,260 --> 00:38:11,160
I think that's all.

760
00:38:11,160 --> 00:38:14,089
- And there's plenty of data in the forums

761
00:38:14,090 --> 00:38:16,040
and discussions by the way,

762
00:38:16,040 --> 00:38:18,009
'cause it can reach out to power users

763
00:38:18,010 --> 00:38:19,210
and regular users.

764
00:38:19,210 --> 00:38:21,310
And you might ask a question that somebody

765
00:38:22,435 --> 00:38:23,470
that probably somebody
already has enough support.

766
00:38:23,470 --> 00:38:24,359
So don't be shy.

767
00:38:24,360 --> 00:38:25,851
- Thank you.

768
00:38:25,851 --> 00:38:28,900
(both laughing)

769
00:38:28,900 --> 00:38:31,520
- To RSA conference until
the defender us there.

770
00:38:31,520 --> 00:38:33,100
And thank you very much for Open Source

771
00:38:33,100 --> 00:38:36,410
and all the people that
are actually sharing,

772
00:38:36,410 --> 00:38:38,660
to others.

773
00:38:38,660 --> 00:38:40,299
Cheers for my part.

774
00:38:40,300 --> 00:38:41,133
- Thanks you.

