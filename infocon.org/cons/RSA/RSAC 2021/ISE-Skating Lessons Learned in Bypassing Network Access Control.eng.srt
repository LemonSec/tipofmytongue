1
00:00:01,100 --> 00:00:03,530
- Good day, my name is Anthony Ralston.

2
00:00:03,530 --> 00:00:06,250
I'm a Senior Security
Consultant at Abricto Security.

3
00:00:06,250 --> 00:00:08,629
And this session is called ISE Skating,

4
00:00:08,630 --> 00:00:12,143
Lesson Learned in Bypassing
Network Access Control.

5
00:00:14,740 --> 00:00:17,280
This session is gonna discuss methods

6
00:00:17,280 --> 00:00:21,823
I've used and are used to
bypass NAC in under a minute.

7
00:00:24,620 --> 00:00:26,430
What will you be learning in this lesson

8
00:00:26,430 --> 00:00:27,403
or in this session?

9
00:00:28,640 --> 00:00:31,780
First off, we'll learn how to understand

10
00:00:31,780 --> 00:00:34,820
an understanding of the NAC process.

11
00:00:34,820 --> 00:00:37,380
Mitigation of traditional attacks,

12
00:00:37,380 --> 00:00:39,660
and how to perform ISE-Skating

13
00:00:39,660 --> 00:00:42,260
and how to identify if
ISE-Skating's occurring

14
00:00:42,260 --> 00:00:43,210
in your environment

15
00:00:45,050 --> 00:00:48,040
In more detail, Network Access Control,

16
00:00:48,040 --> 00:00:52,290
NAC has multiple components.

17
00:00:52,290 --> 00:00:57,290
Two primary, 802.1x and Mac
authentication bypass or MAB.

18
00:00:59,170 --> 00:01:03,160
Now 802.1x leverages extensible
authentication protocol

19
00:01:03,160 --> 00:01:06,232
or EAP, for the authentication mechanism.

20
00:01:07,620 --> 00:01:09,630
Historically NAC bypass

21
00:01:10,620 --> 00:01:13,470
has been done through MAB bypass

22
00:01:13,470 --> 00:01:15,820
and we'll discuss that in further detail

23
00:01:15,820 --> 00:01:18,029
as well as prevention, mitigation,

24
00:01:18,030 --> 00:01:22,800
and indications of compromises or IOC.

25
00:01:22,800 --> 00:01:25,310
As well as abusive misconfigurations.

26
00:01:25,310 --> 00:01:27,920
And the same goes for that,

27
00:01:27,920 --> 00:01:30,780
prevention, mitigation and
indications of compromise.

28
00:01:30,780 --> 00:01:33,900
And then we will move on to ISE-Skating

29
00:01:33,900 --> 00:01:36,740
and we will look at what it is.

30
00:01:36,740 --> 00:01:37,949
Why does it work?

31
00:01:37,950 --> 00:01:39,330
We'll have a demo,

32
00:01:39,330 --> 00:01:42,350
and then we will discuss the
indications of compromise

33
00:01:42,350 --> 00:01:46,273
and potential prevention
of this attack factor.

34
00:01:49,290 --> 00:01:52,073
NAC, EAP, and 802.1x.

35
00:01:53,520 --> 00:01:55,076
So what is NAC?

36
00:01:55,076 --> 00:01:56,919
And I understand that
it's been thrown around

37
00:01:56,920 --> 00:01:58,273
a lot in the industry,

38
00:01:59,210 --> 00:02:00,820
but realistically what it is,

39
00:02:00,820 --> 00:02:02,720
is it's an IEEE standard.

40
00:02:02,720 --> 00:02:03,913
It's an open standard.

41
00:02:04,793 --> 00:02:06,440
It's 802.1x,

42
00:02:06,440 --> 00:02:09,500
which anybody can use
and it's free to use.

43
00:02:09,500 --> 00:02:13,080
And then if a device
cannot support a supplicant

44
00:02:13,080 --> 00:02:15,370
which is software that
is used to authenticate

45
00:02:15,370 --> 00:02:17,810
through EAP on an end point

46
00:02:17,810 --> 00:02:22,633
then NAC leverages MAB or
Mac authentication bypass.

47
00:02:27,905 --> 00:02:31,010
And the components of the intended process

48
00:02:31,010 --> 00:02:35,200
of 802.1x and MAB are
fairly straightforward

49
00:02:35,200 --> 00:02:37,649
and we're gonna go through them here.

50
00:02:37,650 --> 00:02:39,470
So with 802.1x,

51
00:02:39,470 --> 00:02:41,763
there are three primary components.

52
00:02:42,860 --> 00:02:44,140
There's a supplicant,

53
00:02:44,140 --> 00:02:45,369
which is on an end point

54
00:02:45,370 --> 00:02:48,070
and this is a software-based normally.

55
00:02:48,070 --> 00:02:49,470
And then there's an authenticator.

56
00:02:49,470 --> 00:02:52,270
The authenticator tends to be a switch

57
00:02:52,270 --> 00:02:54,240
or an access point.

58
00:02:54,240 --> 00:02:57,110
And then there's an authentication server.

59
00:02:57,110 --> 00:02:59,040
That is just a radius server

60
00:02:59,040 --> 00:03:02,910
or an a rubric clear pass
or a Cisco ISE device.

61
00:03:02,910 --> 00:03:06,593
And in the case of my
lab, it is a packet fence.

62
00:03:08,570 --> 00:03:11,010
When a supplicant connects
to an authenticator

63
00:03:12,800 --> 00:03:15,620
an EAPOL START message or packet

64
00:03:15,620 --> 00:03:18,060
is sent from the supplicant.

65
00:03:18,060 --> 00:03:20,060
The authenticator then responds

66
00:03:20,060 --> 00:03:22,710
with a identity request packet

67
00:03:23,610 --> 00:03:26,100
followed by the supplicant responding with

68
00:03:26,100 --> 00:03:27,823
an identity response.

69
00:03:29,090 --> 00:03:30,760
Once that occurs,

70
00:03:30,760 --> 00:03:32,940
it is sent to the authentication server,

71
00:03:32,940 --> 00:03:35,720
a tunnel as established
between the supplicant

72
00:03:35,720 --> 00:03:38,370
and the server and then the underlay

73
00:03:38,370 --> 00:03:40,740
authentication mechanism occurs.

74
00:03:40,740 --> 00:03:43,670
And the underlay can be a
plethora of different things

75
00:03:43,670 --> 00:03:45,833
from PEAP, which has protected EAP

76
00:03:46,680 --> 00:03:51,300
which has MS-CHAP v2 underlay to EAP- TLS

77
00:03:51,300 --> 00:03:55,603
which is a certificate based
authentication to EAP-TTLs.

78
00:03:57,180 --> 00:04:01,640
Now MAB are there for
the support of devices

79
00:04:01,640 --> 00:04:05,892
that cannot leverage a supplicant.

80
00:04:05,893 --> 00:04:08,380
So think of printers,

81
00:04:08,380 --> 00:04:13,019
think of phones or multifunction devices.

82
00:04:13,020 --> 00:04:15,260
They're there for a specific purpose,

83
00:04:15,260 --> 00:04:16,950
but might not be smart enough

84
00:04:16,950 --> 00:04:18,772
to have the supplicant installed.

85
00:04:19,910 --> 00:04:21,440
And in these cases,

86
00:04:21,440 --> 00:04:24,370
and the first communication
to the authenticator

87
00:04:24,370 --> 00:04:28,150
in the source, there is a Mac address.

88
00:04:28,150 --> 00:04:31,039
And that Mac address is
the authenticator forwards

89
00:04:31,040 --> 00:04:32,563
to the authentication server.

90
00:04:33,620 --> 00:04:35,490
The authentication server then identifies

91
00:04:35,490 --> 00:04:39,490
whether that Mac address
is a valid Mac address

92
00:04:39,490 --> 00:04:42,370
and then authorizes the endpoint

93
00:04:42,370 --> 00:04:45,330
or an invalid Mac address

94
00:04:45,330 --> 00:04:48,039
which then the end point
is then unauthorized

95
00:04:48,040 --> 00:04:49,340
to access the environment.

96
00:04:53,350 --> 00:04:55,897
Traditional attacks of NAC.

97
00:04:58,260 --> 00:05:02,357
MAB bypass is the most
common attack to NAC.

98
00:05:02,357 --> 00:05:05,110
And in fact, if you talk to an individual

99
00:05:05,110 --> 00:05:07,400
and they say that they bypass NAC

100
00:05:07,400 --> 00:05:11,909
more often than not they
are referring to MAB bypass.

101
00:05:11,910 --> 00:05:13,770
Now, just as we referred to before,

102
00:05:13,770 --> 00:05:17,450
where that source Mac address
from the initial packet

103
00:05:17,450 --> 00:05:19,950
of a non supplicant supported device

104
00:05:19,950 --> 00:05:22,973
that's connected to the
network is connected,

105
00:05:24,320 --> 00:05:26,573
MAB hinges on the Mac address.

106
00:05:28,130 --> 00:05:30,360
Now there are other items

107
00:05:30,360 --> 00:05:33,570
that potentially could be leveraged

108
00:05:33,570 --> 00:05:37,070
by the NAC solution.

109
00:05:37,070 --> 00:05:38,960
For instance profiling,

110
00:05:38,960 --> 00:05:41,080
additional information from the endpoint.

111
00:05:41,080 --> 00:05:44,573
However, those are
traditionally trivial to bypass.

112
00:05:45,710 --> 00:05:50,710
So an attacker to conduct MAB bypass

113
00:05:51,140 --> 00:05:54,539
would just normally have
to capture the Mac address

114
00:05:54,540 --> 00:05:57,240
of the MAB supported device.

115
00:05:57,240 --> 00:06:00,820
And once it has clone that
Mac address onto its interface

116
00:06:00,820 --> 00:06:04,253
it can replace that MAB
device on the network.

117
00:06:05,670 --> 00:06:07,933
Mitigation of MAB is
pretty straightforward.

118
00:06:09,773 --> 00:06:12,610
Realistically, all that has to be done is

119
00:06:12,610 --> 00:06:15,300
identify the traffic that is necessary

120
00:06:15,300 --> 00:06:17,150
for those MAB devices to communicate.

121
00:06:18,070 --> 00:06:23,070
Isolate them into a specific VLAN

122
00:06:23,440 --> 00:06:25,870
for all type like devices.

123
00:06:25,870 --> 00:06:29,680
And then segment and isolate through ACL's

124
00:06:29,680 --> 00:06:31,890
those devices separate from the network

125
00:06:31,890 --> 00:06:35,183
and only allow communications
outbound that are expected.

126
00:06:36,710 --> 00:06:38,159
And the indications of compromise

127
00:06:38,160 --> 00:06:43,160
for MAB bypass are pretty,
pretty self-explanatory.

128
00:06:43,310 --> 00:06:45,800
If a printer is doing a port scan

129
00:06:45,800 --> 00:06:47,380
of your domain controller

130
00:06:47,380 --> 00:06:49,320
that is probably a bad thing,

131
00:06:49,320 --> 00:06:51,540
and probably an indication of compromise

132
00:06:51,540 --> 00:06:53,190
that that might not be a printer.

133
00:06:57,150 --> 00:06:58,630
So abusing misconfiguration.

134
00:06:58,630 --> 00:07:01,280
This is a little bit more of a gray area

135
00:07:01,280 --> 00:07:03,609
as far as vulnerabilities go.

136
00:07:03,610 --> 00:07:05,160
When I refer to misconfigurations,

137
00:07:05,160 --> 00:07:07,340
I mean either inconsistent application

138
00:07:07,340 --> 00:07:09,450
of your NAC solution

139
00:07:10,840 --> 00:07:15,840
or a overly permissive
profiling of devices.

140
00:07:18,100 --> 00:07:22,060
So if it reaches the end
of the profiling tree

141
00:07:22,060 --> 00:07:24,060
and there's nothing that applies to it

142
00:07:25,290 --> 00:07:26,493
is permitted access.

143
00:07:28,110 --> 00:07:31,150
Now the likelihood of this attack

144
00:07:32,880 --> 00:07:34,760
is less likely and less successful

145
00:07:34,760 --> 00:07:38,140
simply because an attacker
going into your environment

146
00:07:38,140 --> 00:07:41,190
potentially will not know the
different misconfigurations

147
00:07:41,190 --> 00:07:42,873
that are in your network.

148
00:07:43,930 --> 00:07:47,690
However, traditional attacks
or traditional vectors

149
00:07:47,690 --> 00:07:50,730
are say, an information technology room

150
00:07:50,730 --> 00:07:52,650
that has some open ports.

151
00:07:52,650 --> 00:07:53,972
And in those open ports,

152
00:07:54,930 --> 00:07:58,340
the designer or the
implementer of the NAC solution

153
00:07:58,340 --> 00:08:01,710
did not apply the configuration
to the ports in that room

154
00:08:02,930 --> 00:08:06,250
or specific offices that
haven't been figured yet

155
00:08:06,250 --> 00:08:08,723
or switch causes or data centers.

156
00:08:18,290 --> 00:08:21,610
Mitigation of misconfigurations

157
00:08:21,610 --> 00:08:24,130
are also very straightforward.

158
00:08:24,130 --> 00:08:27,219
It comes through consistent
application of your NAC,

159
00:08:27,220 --> 00:08:29,620
configurations across
your whole environment

160
00:08:30,780 --> 00:08:32,530
to include unused ports and ports

161
00:08:32,530 --> 00:08:34,679
that you wouldn't expect
people to connect.

162
00:08:35,520 --> 00:08:37,150
In addition to that

163
00:08:37,150 --> 00:08:40,659
verification that the
configuration is indeed

164
00:08:40,659 --> 00:08:42,280
what you set it up to be.

165
00:08:42,280 --> 00:08:45,543
So penetration testing
and validation testing.

166
00:08:48,180 --> 00:08:51,620
The indications of compromise
of this kind of attack

167
00:08:51,620 --> 00:08:55,330
would be rogue devices in your environment

168
00:08:55,330 --> 00:08:58,500
or systems that you
wouldn't expect to see.

169
00:08:58,500 --> 00:09:01,300
Unknown Mac addresses that
could be in your environment.

170
00:09:03,930 --> 00:09:05,563
So now to ISE-Skating.

171
00:09:07,970 --> 00:09:12,970
ISE-Skating is the idea
that trying to break TLS

172
00:09:13,810 --> 00:09:15,813
is a heavy task for any individual.

173
00:09:18,300 --> 00:09:19,949
As we do have a man in
the middle position,

174
00:09:19,950 --> 00:09:21,960
that is to our benefit

175
00:09:21,960 --> 00:09:24,200
it would require access to the private key

176
00:09:25,810 --> 00:09:30,483
or the use of a weak
cipher in the certificate.

177
00:09:31,670 --> 00:09:36,069
Either way, the odds of
us successfully defeating

178
00:09:36,070 --> 00:09:39,363
that EAP process at
TLS tunnel is unlikely.

179
00:09:40,500 --> 00:09:45,500
However, writing the
authentication could be possible

180
00:09:45,650 --> 00:09:50,650
if our session looked like
the authenticated device.

181
00:09:53,550 --> 00:09:58,449
However there are mechanisms
built into networks

182
00:09:58,450 --> 00:10:01,620
that prevent this type of attack.

183
00:10:01,620 --> 00:10:06,490
Primarily BPDUs or Bridgeport Data Units.

184
00:10:06,490 --> 00:10:10,360
Bridgeport data units are normally used

185
00:10:10,360 --> 00:10:13,510
or were traditionally used
to identify root bridges

186
00:10:13,510 --> 00:10:17,060
in spanning tree protocol.

187
00:10:17,060 --> 00:10:21,319
However, what they can be used for as well

188
00:10:21,320 --> 00:10:26,320
is to identify if an edge
port has been transferred

189
00:10:26,760 --> 00:10:28,330
into a trunk port

190
00:10:28,330 --> 00:10:31,453
or that another device has
expanded the environment.

191
00:10:32,980 --> 00:10:36,060
Lastly to make this attack successful

192
00:10:36,060 --> 00:10:37,843
is that we should automate it.

193
00:10:38,950 --> 00:10:40,870
The more time and attacker is on site

194
00:10:40,870 --> 00:10:42,430
the less likely they will succeed

195
00:10:42,430 --> 00:10:44,709
and the more likely they will be caught.

196
00:10:44,710 --> 00:10:46,820
So if we can automate this attack

197
00:10:46,820 --> 00:10:51,000
and make it something that
is a potential success

198
00:10:52,470 --> 00:10:55,713
and then we might have a
successful proof of concept.

199
00:10:58,640 --> 00:11:00,760
As I referred to in the previous slide

200
00:11:02,630 --> 00:11:07,630
BPDUs are the key to
making this attack work.

201
00:11:09,760 --> 00:11:13,920
So if an interface sees a BPDU

202
00:11:14,770 --> 00:11:17,760
by default it's gonna treat
that interface as a trunk port

203
00:11:17,760 --> 00:11:20,563
or an extension to another switch.

204
00:11:22,410 --> 00:11:25,469
Traditionally spanning tree
was designed to prevent loops.

205
00:11:25,470 --> 00:11:30,470
However, since networks
have become more complex

206
00:11:30,840 --> 00:11:34,830
and the delimination of
layer three has moved down

207
00:11:34,830 --> 00:11:38,480
we have leveraged BPDUs to also identify

208
00:11:38,480 --> 00:11:43,480
subversion of intended
actions through BPDU guard.

209
00:11:43,970 --> 00:11:48,950
So BPDU guard is designed to identify

210
00:11:48,950 --> 00:11:53,063
if an extension to an edge
interface has been attempted.

211
00:11:53,930 --> 00:11:55,530
And if it has,

212
00:11:55,530 --> 00:11:58,329
to put that port in an air
disabled or shut down state

213
00:12:00,000 --> 00:12:03,403
and this would prevent a
malicious subversion of actions.

214
00:12:04,360 --> 00:12:06,760
So to make ISE-Skating work

215
00:12:06,760 --> 00:12:09,880
we're gonna need a device
that does not give off BPDUs

216
00:12:09,880 --> 00:12:14,880
and that we can leverage to
become a man in the middle

217
00:12:15,320 --> 00:12:17,570
between the supplicant
and the authenticator.

218
00:12:18,650 --> 00:12:20,233
So, first let's look at Hubs.

219
00:12:21,920 --> 00:12:24,599
A hub is basically a Multiport repeater.

220
00:12:24,600 --> 00:12:27,010
They're cheap, easy to obtain,

221
00:12:27,010 --> 00:12:30,830
and they operate on layer
one of the OSI model.

222
00:12:30,830 --> 00:12:33,450
And that means there is no Mac address

223
00:12:33,450 --> 00:12:35,390
that is tied to this hub

224
00:12:37,300 --> 00:12:39,189
But to see if it produces BPDUs,

225
00:12:39,190 --> 00:12:41,340
let's look at this packet capture

226
00:12:42,630 --> 00:12:46,413
and sure enough, I do not
see any BPDUs Packets.

227
00:12:47,780 --> 00:12:51,000
So this could be a successful tool to use

228
00:12:51,000 --> 00:12:52,950
to implement the ISE-Skating technique.

229
00:12:53,830 --> 00:12:56,450
Next let's look at unmanaged switches.

230
00:12:56,450 --> 00:12:59,840
Again, unmanaged switches
are cheap and easy to obtain.

231
00:12:59,840 --> 00:13:02,500
You can buy them at
best buy Walmart, Amazon

232
00:13:02,500 --> 00:13:05,243
anywhere that sells any
kind of computer devices.

233
00:13:06,200 --> 00:13:09,220
However, they do operate on
layer two of the OSI model.

234
00:13:09,220 --> 00:13:12,883
And that means that they
interact with Mac addresses.

235
00:13:14,130 --> 00:13:18,473
But let's look to see if the
packet capture has any BPDUs.

236
00:13:19,330 --> 00:13:21,870
And again, there are no BPDUs.

237
00:13:21,870 --> 00:13:25,240
So this could potentially be a vector

238
00:13:25,240 --> 00:13:27,360
that we could leverage for ISE-Skating.

239
00:13:27,360 --> 00:13:31,020
However, since it does have a Mac address

240
00:13:31,020 --> 00:13:32,590
if they are tracking Mac addresses

241
00:13:32,590 --> 00:13:34,560
that are added to their environment

242
00:13:34,560 --> 00:13:37,963
this could prevent this
type of tool being used.

243
00:13:42,300 --> 00:13:44,652
The NAC authentication process.

244
00:13:46,180 --> 00:13:48,780
So, just like the one prior,

245
00:13:48,780 --> 00:13:50,780
we have three components.

246
00:13:50,780 --> 00:13:53,067
We have a supplicant and authenticator

247
00:13:53,067 --> 00:13:54,693
and authentication server.

248
00:13:55,760 --> 00:13:59,633
When a supplicant connects an
EAPOL START messages is sent.

249
00:14:00,760 --> 00:14:03,939
And then the authenticator
sends a request identity,

250
00:14:03,940 --> 00:14:06,870
followed by a supplicants
response identity.

251
00:14:06,870 --> 00:14:09,400
Think of these as the authenticator

252
00:14:09,400 --> 00:14:11,900
asking the device who are you

253
00:14:11,900 --> 00:14:14,840
and the supplicant responding,

254
00:14:14,840 --> 00:14:17,883
I am XYZ and I'm meant to
be in this environment.

255
00:14:19,840 --> 00:14:23,100
Once that occurs an access
request messages sent

256
00:14:23,100 --> 00:14:25,500
to the authentication server.

257
00:14:25,500 --> 00:14:29,030
And then the authentication
occurs as we explained earlier.

258
00:14:29,030 --> 00:14:32,579
A TLS tunnel, and then
whatever the underlay is

259
00:14:32,580 --> 00:14:33,737
for this type of EAP.

260
00:14:37,150 --> 00:14:39,620
Presuming that event

261
00:14:39,620 --> 00:14:41,960
that underlays successfully authenticated

262
00:14:41,960 --> 00:14:43,940
then an access accept messages is sent

263
00:14:43,940 --> 00:14:46,783
from the authentication
server to the authenticator.

264
00:14:47,710 --> 00:14:51,380
And the authenticator makes it,

265
00:14:51,380 --> 00:14:53,630
turns the port into affording port

266
00:14:53,630 --> 00:14:55,623
and allows normal traffic to flow.

267
00:14:56,880 --> 00:15:00,300
Now, if we take our hub or switch

268
00:15:00,300 --> 00:15:02,020
and put it in between the supplicant

269
00:15:02,020 --> 00:15:03,069
and the authenticator

270
00:15:04,030 --> 00:15:07,400
and connect our attack box

271
00:15:07,400 --> 00:15:11,900
with say some out-of-band
LTE or wireless connection

272
00:15:11,900 --> 00:15:14,600
connecting back to our
command and control server

273
00:15:14,600 --> 00:15:17,813
that we can send commands
to the attack box.

274
00:15:19,609 --> 00:15:21,473
We can subvert this process.

275
00:15:22,910 --> 00:15:24,290
And just so happens

276
00:15:24,290 --> 00:15:26,953
I have created such a physical attack box.

277
00:15:27,850 --> 00:15:32,420
This is just a power strip
that had a battery backup

278
00:15:32,420 --> 00:15:37,420
or UPS that I've gutted
and placed a hub device in

279
00:15:38,010 --> 00:15:41,990
and then a raspberry PI and a LTE shield.

280
00:15:41,990 --> 00:15:43,950
The power strip is still functional.

281
00:15:43,950 --> 00:15:47,560
And I attempted to make it look as genuine

282
00:15:47,560 --> 00:15:49,310
as something would go under a desk.

283
00:15:52,250 --> 00:15:53,890
And once we have this device,

284
00:15:53,890 --> 00:15:56,740
I added a ISE-Skate service.

285
00:15:56,740 --> 00:15:58,020
And the purpose of the service

286
00:15:58,020 --> 00:16:01,870
is to perform the ISE-Skating attack

287
00:16:01,870 --> 00:16:04,700
in an automated fashion for us.

288
00:16:04,700 --> 00:16:07,960
So first it monitors the interface,

289
00:16:07,960 --> 00:16:08,870
the attack interface,

290
00:16:08,870 --> 00:16:11,163
the interface from the raspberry PI.

291
00:16:12,450 --> 00:16:14,710
And if it sees an EAPOL START

292
00:16:15,600 --> 00:16:18,610
then it will look at
the source Mac address

293
00:16:18,610 --> 00:16:22,460
of that EAPOL START packet
for the victim's Mac address.

294
00:16:22,460 --> 00:16:25,700
And it'll apply that
to the attack interface

295
00:16:25,700 --> 00:16:27,863
which is the interface
of the raspberry PI.

296
00:16:29,450 --> 00:16:33,800
And then it will monitor for
that process to have finished

297
00:16:33,800 --> 00:16:35,810
and normal traffic to flow.

298
00:16:35,810 --> 00:16:36,760
And when it does,

299
00:16:36,760 --> 00:16:39,920
it will identify a source IP address

300
00:16:39,920 --> 00:16:43,533
from the supplicant device
or the victim machine.

301
00:16:45,160 --> 00:16:47,949
Once we see that supplicant IP address

302
00:16:47,950 --> 00:16:50,120
we can then take that IP address

303
00:16:50,120 --> 00:16:52,203
and apply it to our interface.

304
00:16:53,428 --> 00:16:56,110
and we don't wanna keep
that IP address for long

305
00:16:56,110 --> 00:16:59,280
however, what we can use with
it is to scan the network

306
00:16:59,280 --> 00:17:02,533
or the local land for unused IP addresses.

307
00:17:03,710 --> 00:17:04,960
And when we identify one

308
00:17:04,960 --> 00:17:07,430
we'll randomly apply it to our interface.

309
00:17:07,430 --> 00:17:11,099
And what this does is help
prevent a race condition.

310
00:17:11,099 --> 00:17:16,099
So if a TCP connection
goes over our device

311
00:17:16,160 --> 00:17:18,119
and then it's sent to
the supplicant by mistake

312
00:17:18,119 --> 00:17:20,072
or before it's sent to us,

313
00:17:20,960 --> 00:17:23,433
it could kill our TLS connection.

314
00:17:24,622 --> 00:17:28,660
So applying this would then make it

315
00:17:28,660 --> 00:17:30,620
so that the supplicant device,

316
00:17:30,620 --> 00:17:32,060
if it receives our packets

317
00:17:32,060 --> 00:17:33,070
it will just forward them

318
00:17:33,070 --> 00:17:34,973
to the Knoll interface or drop that.

319
00:17:36,220 --> 00:17:39,070
Now, once we have had that all set up

320
00:17:39,070 --> 00:17:42,389
we will identify the re
authentication time interval.

321
00:17:42,390 --> 00:17:45,970
And this is the time in
between the EAPOL START

322
00:17:47,670 --> 00:17:51,443
and the authenticator
requiring a request ID.

323
00:17:52,660 --> 00:17:55,520
And we will do this by
looking for a response ID

324
00:17:55,520 --> 00:17:56,920
with our source Mac address.

325
00:17:57,850 --> 00:17:59,330
And if we do not see that

326
00:17:59,330 --> 00:18:02,449
after we have identified
their time interval

327
00:18:02,450 --> 00:18:05,050
then we will restart the
process from the beginning.

328
00:18:08,940 --> 00:18:13,183
So a visual representation of
this process is as followed.

329
00:18:15,640 --> 00:18:17,400
We block all outbound traffic

330
00:18:17,400 --> 00:18:19,450
not allowing anything to communicate

331
00:18:20,730 --> 00:18:23,950
except for receiving traffic

332
00:18:23,950 --> 00:18:26,953
from the supplicant and the authenticator.

333
00:18:29,320 --> 00:18:31,720
Once we receive the EAPOL START,

334
00:18:31,720 --> 00:18:33,050
we will take the Mac address

335
00:18:33,050 --> 00:18:34,680
and apply it to our interface

336
00:18:36,850 --> 00:18:39,439
and wait for the normal traffic to flow,

337
00:18:39,440 --> 00:18:43,110
meaning that it will go
through the whole NAC process

338
00:18:43,110 --> 00:18:44,683
or the EAP process.

339
00:18:45,750 --> 00:18:47,950
And once we see normal traffic

340
00:18:47,950 --> 00:18:51,130
we will spoof the source IP address

341
00:18:51,130 --> 00:18:55,393
and identify unused IP addresses
within the environment.

342
00:18:56,580 --> 00:18:59,500
We will then apply those
unused IP addresses

343
00:18:59,500 --> 00:19:03,363
to our attack box and
monitor for the interval.

344
00:19:05,390 --> 00:19:09,570
And once we have that interval identified

345
00:19:09,570 --> 00:19:14,360
we will then identify,

346
00:19:14,360 --> 00:19:16,449
we will then look for
the re authentication

347
00:19:16,450 --> 00:19:20,340
or the response identifier to be sent.

348
00:19:20,340 --> 00:19:21,500
And if it is not

349
00:19:21,500 --> 00:19:24,230
the process will start
over and the attack box

350
00:19:24,230 --> 00:19:27,013
will again start blocking
all outbound traffic.

351
00:19:28,770 --> 00:19:32,290
In this demo, we will be bypassing NAC

352
00:19:32,290 --> 00:19:34,523
leveraging the ISE-Skating technique.

353
00:19:36,180 --> 00:19:37,910
Our supplicant that we are using

354
00:19:37,910 --> 00:19:39,793
is a native Cisco supplicant.

355
00:19:40,860 --> 00:19:43,770
Our authenticator is a Cisco switch

356
00:19:43,770 --> 00:19:47,223
and our authentication
server is a packet fence.

357
00:19:48,860 --> 00:19:51,139
First let's look at the ISE-Skating box

358
00:19:51,140 --> 00:19:52,383
and how it is set up.

359
00:19:54,220 --> 00:19:57,890
If we do an ifconfig on eth0

360
00:19:57,890 --> 00:20:00,560
we will see that there
is no IPv4 address yet

361
00:20:00,560 --> 00:20:01,909
'cause it's not plugged in.

362
00:20:03,200 --> 00:20:05,600
There also, if we can notice a Mac address

363
00:20:05,600 --> 00:20:08,903
is DC: A6 for the first four,

364
00:20:09,750 --> 00:20:12,210
that's gonna be important later.

365
00:20:12,210 --> 00:20:16,040
Now let's look at the IP tables

366
00:20:16,040 --> 00:20:20,090
to see what is going on.

367
00:20:20,090 --> 00:20:23,253
In an IP tables we have a couple policies,

368
00:20:24,240 --> 00:20:26,050
non for input so we can receive

369
00:20:26,050 --> 00:20:29,950
and identify when the EAPOL START occurs.

370
00:20:29,950 --> 00:20:34,900
But we do have one preventing
forwarding traffic and output

371
00:20:34,900 --> 00:20:38,410
and that is simply so that we
don't have any communication

372
00:20:38,410 --> 00:20:43,410
that triggers in error
disabled mode on the interface.

373
00:20:46,650 --> 00:20:48,290
And if we look at the switch

374
00:20:49,230 --> 00:20:51,120
and particularly on the interface

375
00:20:51,120 --> 00:20:53,110
that we're working with today

376
00:20:53,110 --> 00:20:56,379
which is G0/6.

377
00:20:56,380 --> 00:20:59,990
So if we do a show run interface, G0/6

378
00:21:03,020 --> 00:21:05,670
we will see that the
configuration on this interface

379
00:21:05,670 --> 00:21:09,080
is fairly standard for a NAC deployment.

380
00:21:09,080 --> 00:21:12,139
It prefers.1X over MAB

381
00:21:12,140 --> 00:21:15,460
and it also is leveraging multi R.

382
00:21:15,460 --> 00:21:19,100
And that means that each Mac address

383
00:21:19,100 --> 00:21:20,913
is required to authenticate.

384
00:21:22,870 --> 00:21:26,959
Now let's show the authentication sessions

385
00:21:28,760 --> 00:21:32,840
on interface G0/6

386
00:21:32,840 --> 00:21:35,429
and we can see that it's
already authenticated

387
00:21:35,430 --> 00:21:37,260
using.1X.

388
00:21:37,260 --> 00:21:42,260
And let's keep a note
of the 4B99 session ID.

389
00:21:46,050 --> 00:21:48,460
As we alluded to previously

390
00:21:48,460 --> 00:21:52,130
this is our supplicant machine

391
00:21:52,130 --> 00:21:54,777
that we're using to connect to NAC.

392
00:21:56,108 --> 00:21:59,120
And this is our attack box

393
00:21:59,120 --> 00:22:03,110
and to bypass NAC all we're going to do

394
00:22:03,110 --> 00:22:08,110
is take out the cat five
cable from the victim machine

395
00:22:09,350 --> 00:22:13,149
plug it into our ISE-Skating box.

396
00:22:13,150 --> 00:22:14,833
Either interface will be fine.

397
00:22:16,230 --> 00:22:20,970
And then we'll just
plug in another cat five

398
00:22:20,970 --> 00:22:23,023
to the top of our ISE-Skating box.

399
00:22:25,090 --> 00:22:27,929
And then we will just plug that

400
00:22:27,930 --> 00:22:29,403
into the victim machine.

401
00:22:31,130 --> 00:22:32,853
And once it's plugged in,

402
00:22:34,000 --> 00:22:36,320
NAC authentication will kick off

403
00:22:36,320 --> 00:22:39,233
and an EAPOL START, will be passed.

404
00:22:40,760 --> 00:22:42,430
And if we look closely

405
00:22:42,430 --> 00:22:45,140
at the light on the switch,

406
00:22:45,140 --> 00:22:47,140
we'll notice that once it turns green,

407
00:22:47,140 --> 00:22:48,633
it was affording light.

408
00:22:50,380 --> 00:22:55,380
Now that we have our ISE-Skating
box connected properly

409
00:22:55,960 --> 00:22:59,910
and it looks as if the
port is up and forwarding

410
00:22:59,910 --> 00:23:04,910
let's see what's going on
on our ISE-Skating box.

411
00:23:05,270 --> 00:23:08,853
So if we do an ifconfig of eth0,

412
00:23:13,470 --> 00:23:17,700
we should see that a couple
of things have happened

413
00:23:19,110 --> 00:23:21,280
and they have.

414
00:23:21,280 --> 00:23:25,450
So first we now have an IPV4 address

415
00:23:26,600 --> 00:23:29,822
and we have a different Mac address.

416
00:23:31,140 --> 00:23:34,121
So let's look at our IP tables now.

417
00:23:34,121 --> 00:23:36,954
(keyboard typing)

418
00:23:40,780 --> 00:23:41,639
Excellent.

419
00:23:41,640 --> 00:23:45,560
And as you can see our
policies on our forwarder

420
00:23:45,560 --> 00:23:48,000
and on our output have been removed.

421
00:23:48,000 --> 00:23:50,763
So all traffic should
be flowing properly now.

422
00:23:51,980 --> 00:23:54,563
Let's look at what happened on the switch.

423
00:23:55,890 --> 00:23:58,760
So if we do another,

424
00:23:58,760 --> 00:24:01,140
if we look at the session authentication

425
00:24:01,140 --> 00:24:05,450
we'll notice that it's
the same Mac address

426
00:24:05,450 --> 00:24:07,050
that's on our ISE-Skating box

427
00:24:07,050 --> 00:24:11,230
which is the Mac address
of our victim machine.

428
00:24:11,230 --> 00:24:16,230
It is authenticated and it is using.1X.

429
00:24:16,420 --> 00:24:19,780
And if we look at our session ID

430
00:24:19,780 --> 00:24:22,550
from before and this
one and compare the two

431
00:24:22,550 --> 00:24:25,913
we can see that they are
indeed different session IDs.

432
00:24:29,140 --> 00:24:31,730
So last step would be to prove

433
00:24:31,730 --> 00:24:35,510
that we can access
something on the network.

434
00:24:35,510 --> 00:24:37,140
So what we will do

435
00:24:37,140 --> 00:24:41,560
is we're first going to
ping the domain controller

436
00:24:41,560 --> 00:24:44,250
that I should not have access to

437
00:24:44,250 --> 00:24:45,963
from my ISE-Skating box.

438
00:24:47,320 --> 00:24:51,693
So we're gonna ping 192.168.230.53.

439
00:24:52,840 --> 00:24:53,673
Excellent.

440
00:24:53,673 --> 00:24:55,130
So we can ping it.

441
00:24:55,130 --> 00:24:57,210
Now let's do a step.

442
00:24:57,210 --> 00:25:01,580
Let's go a step further
and do an nmap of that box

443
00:25:03,920 --> 00:25:07,813
to see if it is indeed
the domain controller.

444
00:25:16,090 --> 00:25:20,062
And sure enough it is, port 53 domain.

445
00:25:21,050 --> 00:25:22,953
Yes, this is a domain controller.

446
00:25:25,350 --> 00:25:26,550
And there you have it,

447
00:25:26,550 --> 00:25:31,310
as you can see, we're able to bypass NAC

448
00:25:31,310 --> 00:25:33,940
with ISE-Skating in under a minute.

449
00:25:33,940 --> 00:25:36,410
Indications of compromise
and lessons learned

450
00:25:36,410 --> 00:25:37,503
from ISE-Skating.

451
00:25:39,347 --> 00:25:40,180
So

452
00:25:44,120 --> 00:25:45,979
how can we identify
ISE-Skating in our environment

453
00:25:45,980 --> 00:25:48,550
and what are the
indications of compromise?

454
00:25:48,550 --> 00:25:50,090
So the first one would be

455
00:25:50,090 --> 00:25:54,720
that a device is momentarily
removed from your environment.

456
00:25:54,720 --> 00:25:59,640
However, this is not
a very good indication

457
00:25:59,640 --> 00:26:04,000
simply because most
environments leverage laptops

458
00:26:04,000 --> 00:26:06,400
and laptops are moved around consistently

459
00:26:06,400 --> 00:26:08,263
or constantly in most environments.

460
00:26:09,750 --> 00:26:13,440
The second potential for
indication of compromise

461
00:26:13,440 --> 00:26:15,300
is IP aliasing.

462
00:26:15,300 --> 00:26:16,930
So what IP aliasing is,

463
00:26:16,930 --> 00:26:18,720
is a single Mac address

464
00:26:18,720 --> 00:26:21,500
that's hosting multiple IP addresses

465
00:26:22,960 --> 00:26:25,310
and in most environments

466
00:26:25,310 --> 00:26:29,600
edge devices would not
host multiple IP addresses.

467
00:26:29,600 --> 00:26:31,129
So if I have a computer,

468
00:26:31,130 --> 00:26:32,700
there's no need for me to apply

469
00:26:32,700 --> 00:26:34,753
multiple IP addresses to that computer.

470
00:26:35,924 --> 00:26:37,050
one IP address would allow

471
00:26:37,050 --> 00:26:39,082
that computer to communicate.

472
00:26:40,300 --> 00:26:43,060
And then the primary
indication of compromise

473
00:26:43,060 --> 00:26:44,639
is A-typical traffic.

474
00:26:44,640 --> 00:26:46,480
So if you are baselining your environment

475
00:26:46,480 --> 00:26:48,100
or if you are identifying

476
00:26:48,100 --> 00:26:50,330
what traffic is normal
in your environment,

477
00:26:50,330 --> 00:26:54,939
if you see an endpoint
ping sweeping a network,

478
00:26:54,940 --> 00:26:58,560
or doing a port scan on a file share

479
00:26:58,560 --> 00:27:01,960
or acting in a malicious way
to an internal web server

480
00:27:01,960 --> 00:27:04,430
these are all indications of compromise

481
00:27:04,430 --> 00:27:07,360
that end point has been
con has been compromised

482
00:27:07,360 --> 00:27:08,953
by an attacker in some manner.

483
00:27:12,180 --> 00:27:16,180
So how do we apply what we've
learned in this session?

484
00:27:16,180 --> 00:27:20,890
First off that physical
security is data security.

485
00:27:20,890 --> 00:27:24,970
Physical security is key to
protecting your environment.

486
00:27:24,970 --> 00:27:27,300
If I can access your computers,

487
00:27:27,300 --> 00:27:29,020
if I can access your switch,

488
00:27:29,020 --> 00:27:30,800
I can conduct ISE-Skating.

489
00:27:30,800 --> 00:27:32,320
If I can't access them,

490
00:27:32,320 --> 00:27:33,943
I cannot conduct ISE-Skate.

491
00:27:34,870 --> 00:27:37,510
Now second is try ISE-Skating.

492
00:27:37,510 --> 00:27:40,410
I have a github repository
that will be in the next slide.

493
00:27:40,410 --> 00:27:42,620
Please just give it a
try in your environment.

494
00:27:42,620 --> 00:27:43,580
See if it works,

495
00:27:43,580 --> 00:27:44,860
see when it works

496
00:27:44,860 --> 00:27:47,510
and see if you can see any
indications of compromise.

497
00:27:48,510 --> 00:27:52,200
And then with MAB bypass,

498
00:27:52,200 --> 00:27:54,210
isolate those MAB devices

499
00:27:54,210 --> 00:27:56,620
identify their communication patterns

500
00:27:56,620 --> 00:27:58,479
and isolate them through ACL's

501
00:28:00,025 --> 00:28:02,103
to only approved connections.

502
00:28:03,810 --> 00:28:06,780
And then with
misconfiguration exploitation

503
00:28:07,810 --> 00:28:12,240
fully implement your NAC
design to all end points

504
00:28:12,240 --> 00:28:14,250
or to all edge ports,

505
00:28:14,250 --> 00:28:16,340
and then test it.

506
00:28:16,340 --> 00:28:19,320
Identify if there's any
holes in your design

507
00:28:19,320 --> 00:28:20,760
and also do pin testing.

508
00:28:20,760 --> 00:28:23,760
Do do validation testing
to make sure it's operating

509
00:28:23,760 --> 00:28:24,883
as you configured it.

510
00:28:25,890 --> 00:28:29,610
And then monitor for IP aliasing

511
00:28:29,610 --> 00:28:31,370
on your edge devices.

512
00:28:31,370 --> 00:28:34,100
On those devices that
are your edge devices,

513
00:28:34,100 --> 00:28:35,360
your edge computers.

514
00:28:35,360 --> 00:28:36,949
That if it's on a land

515
00:28:36,950 --> 00:28:39,470
that land should only be
applying at one IP address.

516
00:28:39,470 --> 00:28:41,750
If it's hosting multiple IP addresses

517
00:28:41,750 --> 00:28:44,740
you could be a victim of ISE-Skating.

518
00:28:44,740 --> 00:28:47,730
And then lastly and the
most important point

519
00:28:47,730 --> 00:28:49,230
is to raise awareness

520
00:28:49,230 --> 00:28:51,160
that these types of attacks are out there

521
00:28:51,160 --> 00:28:54,545
that people can bypass NAC.

522
00:28:54,545 --> 00:28:58,800
And that NAC is just
one in a great collage

523
00:28:58,800 --> 00:29:01,500
or tapestry of security.

524
00:29:01,500 --> 00:29:04,810
It's a component and not a silver bullet.

525
00:29:04,810 --> 00:29:07,610
It's designed to be
added to your security,

526
00:29:07,610 --> 00:29:09,312
not the entirety of your security.

527
00:29:10,390 --> 00:29:12,540
And here are my additional resources,

528
00:29:12,540 --> 00:29:13,800
my github repository

529
00:29:13,800 --> 00:29:16,690
where you can download
the ISE-Skating service

530
00:29:16,690 --> 00:29:19,550
or Abricto website where
you can look at our blogs

531
00:29:19,550 --> 00:29:21,669
or the services that we provide.

532
00:29:21,670 --> 00:29:23,093
And my LinkedIn,

533
00:29:23,940 --> 00:29:25,960
if you'd like to follow me on LinkedIn

534
00:29:25,960 --> 00:29:28,270
and as well as if you wanna
connect with me directly,

535
00:29:28,270 --> 00:29:30,050
here's my email address.

536
00:29:30,050 --> 00:29:32,810
It was a privilege talking to
you about ISE-Skating today.

537
00:29:32,810 --> 00:29:34,310
And if you have any questions

538
00:29:34,310 --> 00:29:36,770
I have time to answer them now.

539
00:29:36,770 --> 00:29:37,603
Thank you.

