1
00:00:01,350 --> 00:00:02,970
- Hi, welcome to my presentation.

2
00:00:02,970 --> 00:00:05,320
Hacker's Paradise: Top 10 Biggest Threats

3
00:00:05,320 --> 00:00:06,430
When Working From Home.

4
00:00:06,430 --> 00:00:09,610
My name is Paula Januszkiewicz,
and I'm the CEO of CQURE

5
00:00:09,610 --> 00:00:12,379
also a Regional Director of Microsoft

6
00:00:12,380 --> 00:00:15,030
and also a person who has access

7
00:00:15,030 --> 00:00:16,530
actually to the source code of Windows

8
00:00:16,530 --> 00:00:18,350
for the past 10 years.

9
00:00:18,350 --> 00:00:20,980
And I'm absolutely happy to share insights

10
00:00:20,980 --> 00:00:23,710
that are covering the current situation

11
00:00:23,710 --> 00:00:25,890
when we are all working from home

12
00:00:25,890 --> 00:00:28,010
in order to cover the biggest threats

13
00:00:28,010 --> 00:00:31,960
that we have encountered
within the last projects,

14
00:00:31,960 --> 00:00:35,320
and also interesting observations

15
00:00:35,320 --> 00:00:38,765
from what to do in order
to become more secure

16
00:00:38,765 --> 00:00:42,630
while technically sitting at home.

17
00:00:42,630 --> 00:00:44,850
So regarding the agenda for today,

18
00:00:44,850 --> 00:00:47,430
there are a couple of
things here to cover.

19
00:00:47,430 --> 00:00:48,810
First of all, we're gonna discuss

20
00:00:48,810 --> 00:00:51,130
the security awareness idea.

21
00:00:51,130 --> 00:00:53,690
So what's happening
right now in this world,

22
00:00:53,690 --> 00:00:56,486
then we're gonna dig into
top 10 biggest threats

23
00:00:56,487 --> 00:01:00,050
and then of course, we're
gonna get into the summary.

24
00:01:00,050 --> 00:01:02,180
So as we already know,

25
00:01:02,180 --> 00:01:04,810
we are in the state where
we are working from home.

26
00:01:04,810 --> 00:01:09,150
We are working from locations
that are not necessarily

27
00:01:09,150 --> 00:01:11,500
being in our offices,

28
00:01:11,500 --> 00:01:14,620
and there are different recommendations

29
00:01:14,620 --> 00:01:16,800
and different organizations
that are creating

30
00:01:16,800 --> 00:01:19,500
those recommendations
regarding the remote work.

31
00:01:19,500 --> 00:01:23,376
For example, one of the
agencies, which is called CISA,

32
00:01:23,376 --> 00:01:26,460
they have actually issued a recommendation

33
00:01:26,460 --> 00:01:31,460
that organizations should
adopt to the conditions

34
00:01:32,500 --> 00:01:34,340
that we got currently in the world

35
00:01:34,340 --> 00:01:39,340
in order to enforce and
reach our security solutions

36
00:01:41,560 --> 00:01:44,590
to avoid known vulnerabilities

37
00:01:44,590 --> 00:01:48,130
and known threats that are
out there, for example,

38
00:01:48,130 --> 00:01:50,080
when we take into consideration phishing

39
00:01:50,080 --> 00:01:52,920
being the number one threat
currently in the world

40
00:01:52,920 --> 00:01:56,560
that is the generic recommendation
that they are making.

41
00:01:56,560 --> 00:02:00,251
CISA being one of the
organizations out there,

42
00:02:00,251 --> 00:02:04,210
is technically the Department
of Homeland Security

43
00:02:04,210 --> 00:02:06,589
Cyber and Agency, but they are of course

44
00:02:06,590 --> 00:02:09,574
not the only ones here so
we've got, for example,

45
00:02:09,574 --> 00:02:14,040
checkpoints that share research

46
00:02:14,040 --> 00:02:16,500
that shows that cyber criminals

47
00:02:16,500 --> 00:02:20,010
are actually using Coronavirus
pandemic to spread,

48
00:02:20,010 --> 00:02:21,700
for example, spam activity

49
00:02:21,700 --> 00:02:25,299
through both email campaigns
and malicious domains.

50
00:02:25,300 --> 00:02:28,360
So whenever we take into consideration

51
00:02:28,360 --> 00:02:32,200
some other aspects that are
related with the remote work,

52
00:02:32,200 --> 00:02:36,359
we're also observing that
we've got employees, of course,

53
00:02:36,360 --> 00:02:39,500
sometimes using their
personal device for work

54
00:02:39,500 --> 00:02:42,620
or eventually sharing
that particular device

55
00:02:42,620 --> 00:02:46,160
with some other people, for
example, members of the family,

56
00:02:46,160 --> 00:02:49,640
we've got employees
connecting, for example,

57
00:02:49,640 --> 00:02:53,459
to the company's network,
from their home wifi

58
00:02:53,460 --> 00:02:57,690
or some public unknown wifi,
which technically creates

59
00:02:57,690 --> 00:03:00,910
different situations
that are very comfortable

60
00:03:00,910 --> 00:03:04,700
for hackers to be eventually misused,

61
00:03:04,700 --> 00:03:06,760
and at the same time allowing us

62
00:03:06,760 --> 00:03:10,090
to access the employee's computer.

63
00:03:10,090 --> 00:03:13,120
So that could be work
device, personal device,

64
00:03:13,120 --> 00:03:16,270
and eventually, maybe hopped
through the corporate network.

65
00:03:16,270 --> 00:03:17,740
And here we are discussing of course

66
00:03:17,740 --> 00:03:20,700
many types of attacks that
could be through phishing,

67
00:03:20,700 --> 00:03:21,950
that could be, for example,

68
00:03:21,950 --> 00:03:25,560
through being in the same sub-net

69
00:03:25,560 --> 00:03:27,970
and then eventually,
affecting the traffic,

70
00:03:27,970 --> 00:03:30,140
affecting the communication that employee

71
00:03:31,540 --> 00:03:34,579
is using over here in
order to, for example,

72
00:03:34,580 --> 00:03:38,190
to browse, simply websites or in general,

73
00:03:38,190 --> 00:03:40,810
these kinds of problems
are also usually starting

74
00:03:40,810 --> 00:03:42,440
when we are mixing two worlds.

75
00:03:42,440 --> 00:03:45,750
So our private world with our corporate

76
00:03:45,750 --> 00:03:49,270
or in general work
world, when, for example

77
00:03:49,270 --> 00:03:53,970
we are using applications
or in general websites

78
00:03:53,970 --> 00:03:56,859
with the social media so
things like Facebook and so on,

79
00:03:56,860 --> 00:03:59,540
which could, for example,
lead to an attack

80
00:03:59,540 --> 00:04:02,200
to a code execution on our computers.

81
00:04:02,200 --> 00:04:04,980
Of course, if that's allowed,
if the company allows it

82
00:04:04,980 --> 00:04:09,380
and then spread across the
organization's network.

83
00:04:09,380 --> 00:04:10,930
So whenever we are thinking, of course,

84
00:04:10,930 --> 00:04:14,650
about these top 10 biggest
threats when working from home,

85
00:04:14,650 --> 00:04:17,300
some of them are simple and some of them

86
00:04:17,300 --> 00:04:19,540
are a little bit more advanced.

87
00:04:19,540 --> 00:04:23,280
So let me start with something
simple for us to warm up,

88
00:04:23,280 --> 00:04:26,809
and that is actually
related with the situation

89
00:04:26,810 --> 00:04:29,380
where we disable firewall

90
00:04:29,380 --> 00:04:32,090
or in general different security solutions

91
00:04:32,090 --> 00:04:34,919
that are working on our,
for example, personal device

92
00:04:34,920 --> 00:04:37,670
that could be used for
work-related purposes

93
00:04:37,670 --> 00:04:39,980
or either if we got a possibility

94
00:04:39,980 --> 00:04:42,720
to affect security solutions
on the work device,

95
00:04:42,720 --> 00:04:44,250
that could be also the case.

96
00:04:44,250 --> 00:04:47,290
Or it could be also
misconfiguration of the firewall

97
00:04:47,290 --> 00:04:50,460
that allows the different processes

98
00:04:50,460 --> 00:04:54,000
that are technically
suspicious, not allowed

99
00:04:54,000 --> 00:04:55,860
within our organization's policy

100
00:04:55,860 --> 00:04:58,150
to be communicating out of the network.

101
00:04:58,150 --> 00:05:01,549
Which brings me actually,
to a technical explanation

102
00:05:01,550 --> 00:05:05,630
where we've got, for
example, certain macro

103
00:05:05,630 --> 00:05:08,150
that we are receiving
within the phishing email.

104
00:05:08,150 --> 00:05:11,349
And then macro opens up a child protest,

105
00:05:11,350 --> 00:05:14,021
that child protest could be, for example,

106
00:05:14,021 --> 00:05:16,840
PowerShell, which technically
is an allowed process

107
00:05:16,840 --> 00:05:18,539
within the Windows platform.

108
00:05:18,540 --> 00:05:21,390
And then eventually,
that particular process

109
00:05:21,390 --> 00:05:24,200
is communicating out to the network,

110
00:05:24,200 --> 00:05:27,010
to the internet in general,
in order for example,

111
00:05:27,010 --> 00:05:28,830
to fetch some other items

112
00:05:28,830 --> 00:05:30,630
that could be used within the attack.

113
00:05:30,630 --> 00:05:34,310
Yes, on and the second part
it's something else there

114
00:05:34,310 --> 00:05:36,756
but what is important is
that there is a child process

115
00:05:36,756 --> 00:05:39,700
like PowerShell that from macro opens up

116
00:05:39,700 --> 00:05:41,650
and then tries to establish communication,

117
00:05:41,650 --> 00:05:44,640
which is clearly an anomaly.

118
00:05:44,640 --> 00:05:46,895
So what I would like to show
you in the demonstration

119
00:05:46,895 --> 00:05:49,030
is the perfect example of that.

120
00:05:49,030 --> 00:05:53,210
Let's have a look how
through a malicious macro

121
00:05:53,210 --> 00:05:56,510
we are able to take over
a certain workstation.

122
00:05:56,510 --> 00:05:57,570
So the demo it's called

123
00:05:57,570 --> 00:06:00,719
Initial Access Privilege Escalation.

124
00:06:00,720 --> 00:06:02,160
What you see on the screen right now,

125
00:06:02,160 --> 00:06:03,310
it's just Netcat.

126
00:06:03,310 --> 00:06:06,690
So we're gonna be listening
for the incoming connections.

127
00:06:06,690 --> 00:06:10,680
And in here there's a
microsoftonline.com.co

128
00:06:10,680 --> 00:06:12,190
You probably guys recognize

129
00:06:12,190 --> 00:06:14,660
that it's not a Microsoft domain, right?

130
00:06:14,660 --> 00:06:17,160
That's the domain that we
use for phishing activities

131
00:06:17,160 --> 00:06:20,140
but it's so similar to the Microsoft one.

132
00:06:20,140 --> 00:06:22,599
So over here, there's other trend.

133
00:06:22,600 --> 00:06:25,020
And as you can see over here

134
00:06:25,020 --> 00:06:27,740
we've got similar looking document.

135
00:06:27,740 --> 00:06:32,010
So technically the whole thing
over here, it is an image.

136
00:06:32,010 --> 00:06:34,230
So we enable content for the macros.

137
00:06:34,230 --> 00:06:37,510
User clicks somewhere inside of document.

138
00:06:37,510 --> 00:06:40,289
There is a reverse show
and that reverse show

139
00:06:40,290 --> 00:06:42,800
is in the form of executable design.

140
00:06:42,800 --> 00:06:46,010
And this creates a
connection to the hacker.

141
00:06:46,010 --> 00:06:48,330
When we check out the macro over here

142
00:06:48,330 --> 00:06:51,000
you can see that there's
just one big button.

143
00:06:51,000 --> 00:06:54,270
And over here is a URL
download to the file.

144
00:06:54,270 --> 00:06:56,460
And we are downloading certain executable

145
00:06:57,320 --> 00:06:58,719
in the text file see.

146
00:06:58,720 --> 00:07:03,280
So then we are renaming that
to that executable so .exe.

147
00:07:04,340 --> 00:07:07,957
and over here we are
running .rev-kali.exe.

148
00:07:08,890 --> 00:07:12,104
And being on the hacker
side, if we run whoami/o

149
00:07:12,105 --> 00:07:15,370
you can see that we are
this user right now.

150
00:07:15,370 --> 00:07:19,630
So we managed to become a
user, as you can see Paula.

151
00:07:19,630 --> 00:07:23,690
And eventually this user is just a user

152
00:07:23,690 --> 00:07:26,420
because of the privileges that are listed.

153
00:07:26,420 --> 00:07:27,700
So this is how, of course,

154
00:07:27,700 --> 00:07:30,000
we are able to recognize who we are.

155
00:07:30,000 --> 00:07:30,980
But it doesn't really matter.

156
00:07:30,980 --> 00:07:35,350
So we can here get into
curl and technically

157
00:07:35,350 --> 00:07:38,122
our machine payloads privesc

158
00:07:38,122 --> 00:07:40,723
and then eventually we're
gonna be running the ps1.

159
00:07:42,440 --> 00:07:44,469
So that's the PowerShell.

160
00:07:44,470 --> 00:07:47,500
And that is the script that eventually

161
00:07:47,500 --> 00:07:51,200
we are able to use for
the privs escalation

162
00:07:51,200 --> 00:07:55,150
So they put the privilege
escalation in this computer.

163
00:07:55,150 --> 00:07:59,320
So we can set up a
set-executionpolicy bypass scope

164
00:07:59,320 --> 00:08:02,050
and then process and then for that moment,

165
00:08:02,050 --> 00:08:03,760
we will be able to run scripts

166
00:08:03,760 --> 00:08:05,640
that are not digitally signed.

167
00:08:05,640 --> 00:08:07,640
You can always do it to by the way.

168
00:08:07,640 --> 00:08:12,530
And right now, when we run
our privescalation script

169
00:08:12,530 --> 00:08:15,109
that's actually a DLL hijacking.

170
00:08:15,110 --> 00:08:20,110
Then here you are able to see
that we are using some DLL

171
00:08:20,610 --> 00:08:23,740
and that's particular DLL,
we're gonna be loading

172
00:08:23,740 --> 00:08:27,260
by the task scheduler
upon the service startup

173
00:08:27,260 --> 00:08:32,200
and here we are using also the
internal windows mechanisms.

174
00:08:32,200 --> 00:08:35,500
So everything is, of course,
something particular,

175
00:08:35,500 --> 00:08:37,159
it's something specific over here,

176
00:08:37,159 --> 00:08:41,289
but at the end we are able to
recognize also what's running

177
00:08:41,289 --> 00:08:44,849
on this user's computer to
effectively run the attack.

178
00:08:44,850 --> 00:08:48,290
And in here we're gonna
decurl, reverse DLL

179
00:08:48,290 --> 00:08:50,900
and we specify the output,

180
00:08:50,900 --> 00:08:55,189
We've got that part in 27
DLL, and we're gonna be

181
00:08:55,190 --> 00:08:57,950
leveraging this particular
DLL within the attack.

182
00:08:57,950 --> 00:09:00,450
So this is a DLL that
we have named over here.

183
00:09:00,450 --> 00:09:02,240
This is how, by the way, we can hide.

184
00:09:02,240 --> 00:09:04,603
He has to put it in some kind of a DLL,

185
00:09:04,603 --> 00:09:06,390
into some kind of a folder,

186
00:09:06,390 --> 00:09:09,040
And eventually a DLL that's
not digitally signed,

187
00:09:09,040 --> 00:09:12,060
maybe amongst other DLLs
that are also not signed

188
00:09:12,060 --> 00:09:14,203
out if for this solution.

189
00:09:14,203 --> 00:09:16,530
So when we gonna shut down the computer,

190
00:09:16,530 --> 00:09:18,689
we still set up a listener.

191
00:09:18,690 --> 00:09:22,750
And on the client's
side, we have set up also

192
00:09:22,750 --> 00:09:26,600
the persistency, and this particular DLL

193
00:09:26,600 --> 00:09:29,290
when it's gonna be loaded
by one of their mechanisms

194
00:09:29,290 --> 00:09:32,980
one of the solutions, even
in Windows Operating System

195
00:09:32,980 --> 00:09:36,680
then you can see that that
persistency allowed us to connect

196
00:09:36,680 --> 00:09:39,709
back to that Netcat to
the listening hacker

197
00:09:39,710 --> 00:09:43,720
and at that stage, we are
actually escalating to a system

198
00:09:43,720 --> 00:09:46,790
because from the moment when
we were starting the service

199
00:09:46,790 --> 00:09:50,520
and so on, that was
actually running as system.

200
00:09:50,520 --> 00:09:53,720
So because we were able to drop a DLL

201
00:09:53,720 --> 00:09:56,634
into the certain location
we could at the end

202
00:09:56,634 --> 00:10:01,634
also run it with that escalated
or elevated privileges.

203
00:10:02,920 --> 00:10:06,469
So as you can see guys we were able to

204
00:10:06,470 --> 00:10:07,840
take over a certain machine

205
00:10:07,840 --> 00:10:12,000
just because we were able to
run the code through the macro.

206
00:10:12,000 --> 00:10:15,390
Now it was not the simplest
possible macro that we got

207
00:10:15,390 --> 00:10:20,069
because underneath we were
using the system mechanisms

208
00:10:20,070 --> 00:10:22,640
in order to gain persistency.

209
00:10:22,640 --> 00:10:26,040
So these kinds of situations might lead

210
00:10:26,040 --> 00:10:27,740
to a further execution.

211
00:10:27,740 --> 00:10:29,093
And of course there are many problems here

212
00:10:29,093 --> 00:10:31,136
that we could cover yeah.

213
00:10:31,136 --> 00:10:32,670
So one thing will be user awareness

214
00:10:32,670 --> 00:10:34,860
another part would be why in general,

215
00:10:34,860 --> 00:10:37,540
this email made our mailbox.

216
00:10:37,540 --> 00:10:41,170
Another part might be related
why that code even executed

217
00:10:41,170 --> 00:10:44,150
why there were no attack
surface reduction rules.

218
00:10:44,150 --> 00:10:47,900
So there are plenty of situations
that might not be covered

219
00:10:47,900 --> 00:10:50,510
on the personal workstation
that might be used

220
00:10:50,510 --> 00:10:52,630
for example, for the work purposes.

221
00:10:52,630 --> 00:10:54,820
Another part that I would
like to touch base on

222
00:10:54,820 --> 00:10:58,520
is overly simple password
and security questions.

223
00:10:58,520 --> 00:11:02,540
And that in general covers
situation where companies

224
00:11:02,540 --> 00:11:06,490
do not have yet implemented
multifactor authentication,

225
00:11:06,490 --> 00:11:09,440
that's one thing, and
using the simplest example

226
00:11:09,440 --> 00:11:12,650
that I've got within that,
one of the latest projects is

227
00:11:12,650 --> 00:11:16,189
when I was doing that password
spraying for the organization

228
00:11:16,190 --> 00:11:19,570
cause that's technically my job

229
00:11:19,570 --> 00:11:21,730
and I'm not leaving technology even though

230
00:11:21,730 --> 00:11:23,803
I got a business role within the company.

231
00:11:24,740 --> 00:11:27,120
I did the simplest possible attack

232
00:11:27,120 --> 00:11:30,050
for the approximately 6,000 users

233
00:11:30,050 --> 00:11:32,599
and they did not have
multifactor authentication.

234
00:11:32,600 --> 00:11:36,900
And then it appeared at
2129 actually, of users,

235
00:11:36,900 --> 00:11:39,470
in this example, they had the password

236
00:11:39,470 --> 00:11:44,160
which consisted of the
company name and also a year.

237
00:11:44,160 --> 00:11:47,199
So again, not very surprising, right?

238
00:11:47,200 --> 00:11:51,190
But that is just enough
to use, for example,

239
00:11:51,190 --> 00:11:54,440
one user in order to be able spread fodder

240
00:11:54,440 --> 00:11:57,370
and then send phishing,
which is no longer phishing

241
00:11:57,370 --> 00:12:00,030
because this is an email
that is actually sent

242
00:12:00,030 --> 00:12:01,459
by our friend.

243
00:12:01,460 --> 00:12:04,820
So let's have a look how
that kind of situation

244
00:12:04,820 --> 00:12:06,637
could be escalated further.

245
00:12:06,637 --> 00:12:09,160
What I would like to show
you, it's a situation how

246
00:12:09,160 --> 00:12:14,074
for example, we are able to
sometimes give away our password

247
00:12:14,075 --> 00:12:16,800
because multifactor
authentication is one thing.

248
00:12:16,800 --> 00:12:19,630
But the second thing is simply phishing

249
00:12:19,630 --> 00:12:23,030
that is encouraging us
to give away credentials

250
00:12:23,030 --> 00:12:25,199
that could be later potentially used

251
00:12:25,200 --> 00:12:29,140
within the fodder components
of the infrastructure.

252
00:12:29,140 --> 00:12:32,540
In this illustration, we got a machine

253
00:12:32,540 --> 00:12:34,980
that's connected to a certain network.

254
00:12:34,980 --> 00:12:37,210
And if we open up the browser

255
00:12:37,210 --> 00:12:41,670
and query demo.cqureacademy.com/admin

256
00:12:41,670 --> 00:12:45,300
like you see, then here we can enter

257
00:12:45,300 --> 00:12:48,400
a username CQDemo and certain password.

258
00:12:48,400 --> 00:12:49,740
And then you've got a happy raccoon there,

259
00:12:49,740 --> 00:12:52,810
we are able to successfully login.

260
00:12:52,810 --> 00:12:57,709
Now another part it's
gonna be cqureacadeNy.com

261
00:12:57,710 --> 00:13:01,430
and over here, we're gonna
be also launching the website

262
00:13:01,430 --> 00:13:05,239
that is as well, or
could be as well HTTPS.

263
00:13:05,240 --> 00:13:08,720
And over here we could do
CQDemo and enter the password

264
00:13:08,720 --> 00:13:10,630
and then there was a bad raccoon.

265
00:13:10,630 --> 00:13:13,610
So these are the two
similarly looking websites

266
00:13:13,610 --> 00:13:16,210
but these are really
two different websites

267
00:13:16,210 --> 00:13:19,360
where we are able to extract passwords

268
00:13:19,360 --> 00:13:23,610
at that stage from the login form.

269
00:13:23,610 --> 00:13:25,600
Yeah so this is the setup.

270
00:13:25,600 --> 00:13:28,180
Now we can just close the cards over here.

271
00:13:28,180 --> 00:13:32,770
And what will be our goal
is to verify the IP address

272
00:13:32,770 --> 00:13:37,770
of cqureacademy.com and compare
it with cqureacadeny.com.

273
00:13:38,990 --> 00:13:41,390
So here we are not really
acting on the DNS yet.

274
00:13:41,390 --> 00:13:44,110
It's just, these are two different sites.

275
00:13:44,110 --> 00:13:47,370
So we've got an IP
address given ending name

276
00:13:47,370 --> 00:13:50,370
and then we've got the
also the cqureacadeny

277
00:13:50,370 --> 00:13:52,290
which you can see it's different.

278
00:13:52,290 --> 00:13:55,579
Now the next stage over here,
is that I'm gonna pretend

279
00:13:55,580 --> 00:13:57,890
that I'm connecting to the network

280
00:13:57,890 --> 00:13:59,980
through the malicious access point.

281
00:13:59,980 --> 00:14:01,520
So I'm somewhere at the airport.

282
00:14:01,520 --> 00:14:04,600
I'm connecting to the free
wifi, somewhere in a cafe.

283
00:14:04,600 --> 00:14:05,433
It doesn't really matter.

284
00:14:05,433 --> 00:14:07,880
I do not control my access point.

285
00:14:07,880 --> 00:14:12,353
So here I entered it the
demo.cqureacademy.com/admin.

286
00:14:13,250 --> 00:14:17,120
And that's the cqureacadeny,
yes but we do see CQDemo

287
00:14:18,330 --> 00:14:20,000
and then we run the password.

288
00:14:20,000 --> 00:14:23,020
And then as you can see,
it's just something wrong

289
00:14:23,020 --> 00:14:25,130
because we entered a current address.

290
00:14:25,130 --> 00:14:27,060
How could it be that our credentials

291
00:14:27,060 --> 00:14:29,219
are actually leaking here?

292
00:14:29,220 --> 00:14:31,500
And it's the same in this case, user name

293
00:14:31,500 --> 00:14:33,130
and password that I typed.

294
00:14:33,130 --> 00:14:36,660
An answer this question is
actually very straightforward.

295
00:14:36,660 --> 00:14:40,189
We went over here demo.cqureacadeny.com

296
00:14:40,190 --> 00:14:44,940
That's certain IP address
and also cqureacadeny.com,

297
00:14:44,940 --> 00:14:46,470
that's this certain address.

298
00:14:46,470 --> 00:14:47,900
Why this is possible?

299
00:14:47,900 --> 00:14:51,640
Because we at that stage
control the access point

300
00:14:51,640 --> 00:14:53,683
that the user is connecting to.

301
00:14:54,990 --> 00:14:57,160
So as you can see, we've got a situation

302
00:14:57,160 --> 00:15:01,260
where not only we were
able to get the password

303
00:15:01,260 --> 00:15:04,840
of the user that was phished, but also,

304
00:15:04,840 --> 00:15:08,200
through the possibility to
control the access point.

305
00:15:08,200 --> 00:15:10,750
We were able to spoof the website

306
00:15:10,750 --> 00:15:14,780
and replace the website
eventually either on the fly

307
00:15:14,780 --> 00:15:17,079
or just play with the DNS records

308
00:15:17,080 --> 00:15:21,660
in order to redirect the
user to the incorrect website

309
00:15:21,660 --> 00:15:23,230
to give away credentials

310
00:15:23,230 --> 00:15:26,790
and not a problem over here,
it's no network segmentation.

311
00:15:26,790 --> 00:15:30,439
And what I mean by this, is
that if there is a certain code

312
00:15:30,440 --> 00:15:34,093
running on the user's
computer, then for example,

313
00:15:34,093 --> 00:15:37,030
a user is connected using the VPN.

314
00:15:37,030 --> 00:15:40,610
We've got a problem with the situation,

315
00:15:40,610 --> 00:15:41,850
what the user sees.

316
00:15:41,850 --> 00:15:44,550
So things like VPN pivoting attack

317
00:15:44,550 --> 00:15:46,109
it's perfectly working here.

318
00:15:46,110 --> 00:15:48,880
So just to mention, but
that attack is based

319
00:15:48,880 --> 00:15:51,689
on the situation where attacker manages

320
00:15:51,690 --> 00:15:54,850
to be in the same network as the user,

321
00:15:54,850 --> 00:15:57,550
manages to get access
to the user workstation,

322
00:15:57,550 --> 00:16:00,339
maybe through phishing, maybe
through that kind of activity

323
00:16:00,340 --> 00:16:03,350
that you just guys could see in a demo.

324
00:16:03,350 --> 00:16:06,850
And eventually the next
step would be to treat

325
00:16:06,850 --> 00:16:09,360
users workstation as a proxy,

326
00:16:09,360 --> 00:16:11,410
that's what's called VPN pivoting.

327
00:16:11,410 --> 00:16:14,130
Because user is connected
using VPN connection

328
00:16:14,130 --> 00:16:15,380
to their organization.

329
00:16:15,380 --> 00:16:18,100
And then the hacker is able
by using the workstation

330
00:16:18,100 --> 00:16:21,940
as a proxy to see exactly
the same stuff the user see

331
00:16:21,940 --> 00:16:23,150
in the infrastructure.

332
00:16:23,150 --> 00:16:26,050
And if, for example, user sees servers

333
00:16:26,050 --> 00:16:28,300
some other services that are critical

334
00:16:28,300 --> 00:16:30,506
from the perspective of the organization

335
00:16:30,506 --> 00:16:33,280
that eventually we call a Shadow IT

336
00:16:33,280 --> 00:16:35,420
at the end, because
there might be something

337
00:16:35,420 --> 00:16:38,270
that's misconfigured not
checked within pentest

338
00:16:38,270 --> 00:16:41,750
or maybe checked, but not
corrected, but being still there.

339
00:16:41,750 --> 00:16:45,000
Then this is something
that could be possibly used

340
00:16:45,000 --> 00:16:46,290
within the attack.

341
00:16:46,290 --> 00:16:48,360
So whenever we think about that

342
00:16:48,360 --> 00:16:51,360
there's one thing that actually
comes to my mind as well.

343
00:16:51,360 --> 00:16:53,950
And that's the lack of SMB signing.

344
00:16:53,950 --> 00:16:56,930
So if the hacker is able
to see the same stuff

345
00:16:56,930 --> 00:17:00,209
that the user could see
being connected through VPN

346
00:17:00,210 --> 00:17:02,550
for example, by using VPN pivoting,

347
00:17:02,550 --> 00:17:06,329
we are able at the same time,
to try to launch the attacks

348
00:17:06,329 --> 00:17:10,449
like ARP poisoning and then
eventually, listen to the SMB

349
00:17:10,450 --> 00:17:13,140
a related to communication
in between house.

350
00:17:13,140 --> 00:17:15,000
And when you combine that altogether

351
00:17:15,000 --> 00:17:17,670
with NTLM version three
authentication protocol

352
00:17:17,670 --> 00:17:19,390
which is used in (indistinct) let's say

353
00:17:19,390 --> 00:17:21,550
or instead of Kerberos, for example

354
00:17:21,550 --> 00:17:24,780
across local accounts, for
example across service accounts

355
00:17:24,780 --> 00:17:26,980
or also when you use the short name,

356
00:17:26,980 --> 00:17:29,140
for example \\files

357
00:17:29,140 --> 00:17:32,170
or when you use \\IP address

358
00:17:32,170 --> 00:17:35,200
then you trigger by
default NTLM version two

359
00:17:35,200 --> 00:17:38,930
and then this being
challenged response mechanisms

360
00:17:38,930 --> 00:17:41,350
is actually be able to be spoofed.

361
00:17:41,350 --> 00:17:46,149
And then you can relay the
response to that target.

362
00:17:46,150 --> 00:17:49,060
And that is something that
I would love to show you

363
00:17:49,060 --> 00:17:51,190
within the SMB relay attack.

364
00:17:51,190 --> 00:17:53,060
Let's have a look at the simple attack

365
00:17:53,060 --> 00:17:54,909
where are we gonna deliver SMB relay.

366
00:17:55,780 --> 00:18:00,050
SMB relay in general, it's
relying on the situation

367
00:18:00,050 --> 00:18:03,399
where we have no SMB signing
in the infrastructure

368
00:18:03,400 --> 00:18:07,170
and at the same time we're
using NTLM version two protocol

369
00:18:07,170 --> 00:18:08,910
for authentication.

370
00:18:08,910 --> 00:18:13,080
Now this attack works in vast
majority of organizations

371
00:18:13,080 --> 00:18:15,770
and the problem is that, well, it's easy

372
00:18:15,770 --> 00:18:18,360
but at the same time
there is a certain code

373
00:18:18,360 --> 00:18:21,240
that needs to execute and
it will be great, of course,

374
00:18:21,240 --> 00:18:24,100
to know what are the ways to figure out

375
00:18:24,100 --> 00:18:27,370
that that particular code
has actually executed.

376
00:18:27,370 --> 00:18:30,469
So for the SMB relay, I'm
going to use smbrelayx.py

377
00:18:31,830 --> 00:18:34,159
script, as you see.

378
00:18:34,160 --> 00:18:37,890
And my target is gonna be 10.10.10.250.

379
00:18:37,890 --> 00:18:42,890
And on execution I'm
gonna run CQShell104A.exe

380
00:18:43,250 --> 00:18:45,430
which is actually a reverse shell

381
00:18:45,430 --> 00:18:47,780
that is customized by our team.

382
00:18:47,780 --> 00:18:50,750
Now, the customization
that is happening here

383
00:18:50,750 --> 00:18:54,100
is actually related with the discovery

384
00:18:54,100 --> 00:18:57,280
or nondiscovery by the antivirus solution.

385
00:18:57,280 --> 00:19:00,570
But at the end, it's just
a simple reverse shell.

386
00:19:00,570 --> 00:19:02,080
So that's gonna be the first step.

387
00:19:02,080 --> 00:19:04,149
Second step that we got over here,

388
00:19:04,150 --> 00:19:07,480
is related with the listener or handler

389
00:19:07,480 --> 00:19:09,400
for the incoming connections.

390
00:19:09,400 --> 00:19:11,590
And I have over here, made exploit

391
00:19:11,590 --> 00:19:15,510
which I have simply set up
as you see that's everything.

392
00:19:15,510 --> 00:19:17,820
So that's why it's like it's so simple

393
00:19:17,820 --> 00:19:21,409
to perform the handling of connections

394
00:19:21,410 --> 00:19:25,900
that are about to come if
they run the reverse shell.

395
00:19:25,900 --> 00:19:28,560
So this is basically
what's happening here.

396
00:19:28,560 --> 00:19:31,280
Now that reverse shell in general

397
00:19:31,280 --> 00:19:34,740
it's gonna be running connects
because SMB relayed itself

398
00:19:34,740 --> 00:19:37,148
in order to establish
a connection to assure

399
00:19:37,148 --> 00:19:40,770
and so on has to run its own executable

400
00:19:40,770 --> 00:19:43,830
which we would like to trace afterwards.

401
00:19:43,830 --> 00:19:46,899
And that's gonna be a
very interesting situation

402
00:19:46,900 --> 00:19:48,220
to have a look.

403
00:19:48,220 --> 00:19:50,080
So let's see, first of all,

404
00:19:50,080 --> 00:19:52,372
here we would just need to go exploit.

405
00:19:53,270 --> 00:19:57,060
And second thing here, we
just need to run the script.

406
00:19:57,060 --> 00:19:59,690
Now what I'm gonna do on my side

407
00:19:59,690 --> 00:20:02,940
it's gonna be basically the query

408
00:20:02,940 --> 00:20:05,790
from a certain type of machine.

409
00:20:05,790 --> 00:20:08,399
So from one host to another,

410
00:20:08,400 --> 00:20:11,890
in order to query or trigger

411
00:20:11,890 --> 00:20:14,880
NTLM version two authentication.

412
00:20:14,880 --> 00:20:19,310
Now that situation is
actually quite straightforward

413
00:20:19,310 --> 00:20:22,550
because querying by IP address,
different types of hosts

414
00:20:22,550 --> 00:20:26,180
in the infrastructure it's
quite a typical thing, right?

415
00:20:26,180 --> 00:20:28,440
So basically we do backstage backslash

416
00:20:28,440 --> 00:20:30,640
and then we specify IP address.

417
00:20:30,640 --> 00:20:34,790
Now I'm gonna hear, listen
to incoming connections.

418
00:20:34,790 --> 00:20:36,190
So please have a look.

419
00:20:36,190 --> 00:20:39,320
Now I have queried a certain IP address

420
00:20:39,320 --> 00:20:40,610
in the infrastructure.

421
00:20:40,610 --> 00:20:44,510
Here we can do ps to list processes.

422
00:20:44,510 --> 00:20:47,239
And over here, I'm able
to see that, for example

423
00:20:47,239 --> 00:20:50,610
there an svchost running
as NT authority system

424
00:20:50,610 --> 00:20:52,043
which has process ID 3136,

425
00:20:53,204 --> 00:20:57,409
so let's do that migrate 3136

426
00:20:57,410 --> 00:20:59,310
and the immigration process over here

427
00:20:59,310 --> 00:21:04,310
I was asked to move our bad
piece of code to that process

428
00:21:05,350 --> 00:21:07,750
and this is a typical
exploitation technique,

429
00:21:07,750 --> 00:21:12,470
not in the form of DLL and
so on, but by modification

430
00:21:12,470 --> 00:21:15,440
of the memory address
space of that process.

431
00:21:15,440 --> 00:21:20,306
Now we are right now in
that system so I press shell

432
00:21:20,306 --> 00:21:23,450
here if we do whoami
you are able to see that

433
00:21:23,450 --> 00:21:28,270
we are actually a system
in that target system.

434
00:21:28,270 --> 00:21:32,030
So this is all good, but
the question is, of course

435
00:21:32,030 --> 00:21:35,100
how are we able to investigate that, okay?

436
00:21:35,100 --> 00:21:36,600
And this is something that
I would like to show you.

437
00:21:36,600 --> 00:21:40,810
So we were migrating the 3136

438
00:21:40,810 --> 00:21:45,490
and we are able to see over
here that it's from 2909.

439
00:21:45,490 --> 00:21:48,300
And once we did shell, then basically

440
00:21:48,300 --> 00:21:50,500
here there has been process created.

441
00:21:50,500 --> 00:21:54,140
So let's have a look how this activity

442
00:21:54,140 --> 00:21:58,030
reflects basically on our target machine.

443
00:21:58,030 --> 00:21:59,379
And it's extremely interesting

444
00:21:59,380 --> 00:22:02,140
because this particular attack,

445
00:22:02,140 --> 00:22:04,560
can happen pretty much anytime.

446
00:22:04,560 --> 00:22:07,790
But the thing is, that if
it happened, for example,

447
00:22:07,790 --> 00:22:10,230
six months ago, now the question is

448
00:22:10,230 --> 00:22:13,180
how do we know that
that actually happened?

449
00:22:13,180 --> 00:22:16,480
And there are a couple of
things that could indicate

450
00:22:16,480 --> 00:22:20,850
even after that time that there
is something bad going on.

451
00:22:20,850 --> 00:22:23,570
So first of all, what we gonna do,

452
00:22:23,570 --> 00:22:25,068
We gonna look at the machine.

453
00:22:25,068 --> 00:22:26,560
Yes so let's do it.

454
00:22:26,560 --> 00:22:30,460
So here's the machine, we
can sort by the process IDs.

455
00:22:30,460 --> 00:22:34,330
For the simplification of
this research, this by the way

456
00:22:34,330 --> 00:22:37,139
it's not because there is some
vulnerability or anything.

457
00:22:37,140 --> 00:22:39,580
No, no, no, this is how it works

458
00:22:39,580 --> 00:22:43,562
because of the NTLM version
two and SMB not being signed.

459
00:22:44,620 --> 00:22:46,860
Which is a default actually.

460
00:22:46,860 --> 00:22:49,439
So here we go, we've got a 3136,

461
00:22:51,191 --> 00:22:54,400
3136 we don't have, we actually do.

462
00:22:54,400 --> 00:22:55,870
Do you see that process?

463
00:22:55,870 --> 00:22:57,562
So we got 3136.

464
00:22:57,563 --> 00:23:00,080
Yeah, so this is basically the one

465
00:23:00,080 --> 00:23:02,110
that we are migrating to.

466
00:23:02,110 --> 00:23:04,000
So I'm gonna move down a little bit.

467
00:23:04,000 --> 00:23:05,313
So this is this one 3136.

468
00:23:06,580 --> 00:23:09,850
But we don't have 2904.

469
00:23:09,850 --> 00:23:14,490
If we look for 2904, that
process does not exist anymore.

470
00:23:14,490 --> 00:23:15,560
Now why?

471
00:23:15,560 --> 00:23:20,560
Because when we migrate to
3136, that 2904 just vanished.

472
00:23:22,330 --> 00:23:27,330
Yes, now at 2864, that
is this one basically.

473
00:23:29,240 --> 00:23:30,163
It is here.

474
00:23:31,040 --> 00:23:31,950
We've got this one.

475
00:23:31,950 --> 00:23:33,890
That's the cmd.exe.

476
00:23:33,890 --> 00:23:36,000
Yes indeed, because that's the shell.

477
00:23:36,000 --> 00:23:38,480
But of course, if the hacker closes it

478
00:23:38,480 --> 00:23:41,500
you won't see it anymore, and now what?

479
00:23:41,500 --> 00:23:44,450
So a long story short, first of all,

480
00:23:44,450 --> 00:23:49,450
we can have a look netstat
and with your options ano

481
00:23:50,080 --> 00:23:51,840
maybe let's do more.

482
00:23:51,840 --> 00:23:53,990
And here we've got process IDs

483
00:23:53,990 --> 00:23:56,600
that are related with the communication.

484
00:23:56,600 --> 00:23:59,790
Now, funny fact is that
if you have a look at the

485
00:23:59,790 --> 00:24:03,040
established connection
because it clearly stands out,

486
00:24:03,040 --> 00:24:05,000
we're able to see that the process ID

487
00:24:05,000 --> 00:24:08,840
assigned to that connection it's 2904.

488
00:24:08,840 --> 00:24:12,909
But hey, did we just say that
that process just vanished?

489
00:24:12,910 --> 00:24:16,260
Exactly, because unfortunately netstat

490
00:24:16,260 --> 00:24:18,020
wont to tell you the truth.

491
00:24:18,020 --> 00:24:22,220
Netstat unfortunately will
show you only the connections

492
00:24:22,220 --> 00:24:26,410
or the process that was used
when we were establishing

493
00:24:26,410 --> 00:24:28,610
your connection and that's it.

494
00:24:28,610 --> 00:24:30,899
So simply we cannot trust it.

495
00:24:30,900 --> 00:24:34,110
So is there someone to trust
in the operating system

496
00:24:34,110 --> 00:24:37,570
assuming that that attack
happened long time ago?

497
00:24:37,570 --> 00:24:38,649
Well, yes.

498
00:24:38,650 --> 00:24:42,213
We've got something that
basically we call Prefetch.

499
00:24:43,100 --> 00:24:46,189
And within Windows
Prefetch which is out there

500
00:24:46,190 --> 00:24:48,110
running all the time.

501
00:24:48,110 --> 00:24:50,469
We've got a possibility to verify

502
00:24:50,470 --> 00:24:52,900
what were the processes running

503
00:24:53,810 --> 00:24:56,220
since you have set up your Windows.

504
00:24:56,220 --> 00:24:58,850
So let's do start .

505
00:24:58,850 --> 00:25:03,469
And here I have sorted these
things by date modified.

506
00:25:03,470 --> 00:25:06,360
So you're able to see that eventually

507
00:25:06,360 --> 00:25:11,219
we've got more netstat
process hacker whoami?

508
00:25:11,220 --> 00:25:13,610
And then we've got this strange guy.

509
00:25:13,610 --> 00:25:17,679
That's this IYJR and so on.

510
00:25:17,680 --> 00:25:20,890
So this is quite interesting
because it looks dodgy

511
00:25:20,890 --> 00:25:23,540
but of course it might
have a really nice name.

512
00:25:23,540 --> 00:25:26,840
So let's in general for the
sake of our research here

513
00:25:26,840 --> 00:25:30,949
verify if this could be this bad process.

514
00:25:30,950 --> 00:25:34,030
So what I'm going to do is I'm right now

515
00:25:34,030 --> 00:25:35,850
on the hacker's machine.

516
00:25:35,850 --> 00:25:38,745
And this is this attack
that we were delivering.

517
00:25:38,745 --> 00:25:42,659
And over here, you can see
that authentication was made.

518
00:25:42,660 --> 00:25:44,780
And then we've got uploading file.

519
00:25:44,780 --> 00:25:48,830
IYJRD and so on.

520
00:25:48,830 --> 00:25:50,050
So that's this one.

521
00:25:50,050 --> 00:25:53,490
And that was also the one
that we could confirm.

522
00:25:53,490 --> 00:25:55,630
That was on the client side.

523
00:25:55,630 --> 00:25:58,930
Yeah, so this is basically the situation.

524
00:25:58,930 --> 00:26:01,350
Now, if it was called, whoami, for example

525
00:26:01,350 --> 00:26:05,740
or a notepad or something, then
it won't look that strange.

526
00:26:05,740 --> 00:26:07,730
So how can we look inside?

527
00:26:07,730 --> 00:26:09,870
Of course, Shift + right-click,

528
00:26:09,870 --> 00:26:11,320
Copy as path.

529
00:26:11,320 --> 00:26:15,110
And over here, I'm
going to go to our tools

530
00:26:15,110 --> 00:26:20,070
where I'm going to use CQ and
in this case, PrefetchParser.

531
00:26:20,070 --> 00:26:23,027
So in our team we've got
lots of tools like that

532
00:26:23,027 --> 00:26:25,970
but this particular one we're gonna use

533
00:26:25,970 --> 00:26:28,580
with the parameter F for file.

534
00:26:28,580 --> 00:26:30,159
We're gonna paste above.

535
00:26:30,160 --> 00:26:33,490
And then we're gonna do
minus A for analysis.

536
00:26:33,490 --> 00:26:36,200
And long story short, and
we make a full screen,

537
00:26:36,200 --> 00:26:41,140
We are able to analyze a bit of details

538
00:26:41,140 --> 00:26:44,140
about what's going on
inside a Prefetch file.

539
00:26:44,140 --> 00:26:47,217
For example, here,
we've got run count one.

540
00:26:48,280 --> 00:26:50,460
And the run count one indicates

541
00:26:50,460 --> 00:26:55,180
that this particular executable
has been running only once.

542
00:26:55,180 --> 00:26:57,810
And that is already quite suspicious.

543
00:26:57,810 --> 00:27:02,169
We can see when but we can
also see what kind of DLLs

544
00:27:02,170 --> 00:27:03,660
are loaded over here.

545
00:27:03,660 --> 00:27:06,060
So if this file has a named notepad

546
00:27:06,060 --> 00:27:09,120
and it is actually
malware, then we are always

547
00:27:09,120 --> 00:27:12,870
able to compare, for example,
the list of loaded DLLs

548
00:27:13,748 --> 00:27:17,330
whether it's the same as
original notepad or not.

549
00:27:17,330 --> 00:27:22,330
So prefetch in general allows
us to indicate what kind

550
00:27:23,010 --> 00:27:26,770
of executables were running
in the operating system.

551
00:27:26,770 --> 00:27:29,450
Even though process tracking, for example,

552
00:27:29,450 --> 00:27:32,860
as one of the logging
methods wasn't turned on.

553
00:27:32,860 --> 00:27:36,040
So prefetch it's not that detailed,

554
00:27:36,040 --> 00:27:40,210
but in a worst case it
helps you to understand

555
00:27:40,210 --> 00:27:41,680
if there was something suspicious

556
00:27:41,680 --> 00:27:43,570
actually running on your machine.

557
00:27:43,570 --> 00:27:46,040
How long do we maintain prefetch?

558
00:27:46,040 --> 00:27:48,050
Well, since you installed windows.

559
00:27:48,050 --> 00:27:50,520
So over here you were
able to find a history

560
00:27:50,520 --> 00:27:53,030
of everything that has been ever running

561
00:27:53,030 --> 00:27:55,570
in this operating system that's one thing.

562
00:27:55,570 --> 00:27:58,773
Second, who can delete it or approve it

563
00:27:58,773 --> 00:28:00,629
it can be deleted by administrators.

564
00:28:00,630 --> 00:28:03,720
So long story short, if hacker knows

565
00:28:03,720 --> 00:28:06,550
what he or she is doing, then this person

566
00:28:06,550 --> 00:28:08,370
can go to the prefetch folder

567
00:28:08,370 --> 00:28:10,969
and then eventually delete the trace.

568
00:28:10,970 --> 00:28:13,150
So it really depends on the situation,

569
00:28:13,150 --> 00:28:16,270
but actually during this analysis,

570
00:28:16,270 --> 00:28:19,650
we really see that
prefetch is being deleted.

571
00:28:19,650 --> 00:28:22,400
What if it is deleted actually?

572
00:28:22,400 --> 00:28:26,441
Is it possible to recover
for example, deleted files?

573
00:28:26,441 --> 00:28:28,863
The answer is, of course
we can always do that.

574
00:28:29,710 --> 00:28:32,370
So as you can see, guys
we've got a possibility

575
00:28:32,370 --> 00:28:37,370
to play with the network traffic.

576
00:28:37,850 --> 00:28:41,449
And then at that point,
we are able to affect

577
00:28:41,450 --> 00:28:43,600
the way how people can authenticate

578
00:28:43,600 --> 00:28:46,830
to take over server or workstation.

579
00:28:46,830 --> 00:28:49,199
Let me show you couple of things here.

580
00:28:49,200 --> 00:28:52,060
So there was a code that was executed

581
00:28:52,060 --> 00:28:56,350
and that is something that is
technically a bit of a mistake

582
00:28:56,350 --> 00:28:59,320
because nowadays especially
dealing with ransomware,

583
00:28:59,320 --> 00:29:02,439
we are allowing in some organizations

584
00:29:02,440 --> 00:29:04,520
that ransonware to execute.

585
00:29:04,520 --> 00:29:06,700
We know that, for example, from the news.

586
00:29:06,700 --> 00:29:09,148
So having this in mind, we've got

587
00:29:09,148 --> 00:29:12,550
the possibilities to
implement whitelisting

588
00:29:12,550 --> 00:29:16,159
or something that's called
allowlisting eventually.

589
00:29:16,160 --> 00:29:19,710
And this is something
that would prevent us

590
00:29:19,710 --> 00:29:22,600
that code like that from running.

591
00:29:22,600 --> 00:29:25,399
And we're not only talking
here about SMB relay

592
00:29:25,400 --> 00:29:28,000
which could be fixed in
many ways, for example,

593
00:29:28,000 --> 00:29:31,850
by implementing SMB signing,
but also it could be supported

594
00:29:31,850 --> 00:29:34,266
by implementation of whitelisting.

595
00:29:34,267 --> 00:29:36,680
And that is also
something that we consider

596
00:29:36,680 --> 00:29:39,630
as a configurational mistake

597
00:29:39,630 --> 00:29:42,490
and the problem of the current
times that, for example,

598
00:29:42,490 --> 00:29:47,490
on the personal workstations,
we've got that one

599
00:29:47,490 --> 00:29:50,190
that's not configured yet.

600
00:29:50,190 --> 00:29:53,100
So whenever we think
about some other stuff,

601
00:29:53,100 --> 00:29:56,699
we've got over here, old
protocols or DOD for settings.

602
00:29:56,700 --> 00:29:59,030
So it really depends on
the business applications

603
00:29:59,030 --> 00:30:02,100
that people are, for example, using.

604
00:30:02,100 --> 00:30:04,379
Like we might have applications

605
00:30:04,380 --> 00:30:07,580
that are using connection to SQL server.

606
00:30:07,580 --> 00:30:10,210
And that is actually one
of my favorite things

607
00:30:10,210 --> 00:30:12,010
that I'm checking within the pentest.

608
00:30:12,010 --> 00:30:14,570
So when you are sniffing to the traffic,

609
00:30:14,570 --> 00:30:18,310
then you can sniff for example, traffic of

610
00:30:18,310 --> 00:30:20,600
or like a tabular data stream.

611
00:30:20,600 --> 00:30:24,350
So that sends as a TDS and for
example, within the Wireshark

612
00:30:24,350 --> 00:30:27,370
you are able to use TDS as a filter.

613
00:30:27,370 --> 00:30:30,620
TDS it's a communication to a SQL server.

614
00:30:30,620 --> 00:30:33,820
So for example, query to
database that will be running

615
00:30:33,820 --> 00:30:37,240
within the clear text in
vast majority of obligations

616
00:30:37,240 --> 00:30:40,600
especially the older ones
that is actually clear text

617
00:30:40,600 --> 00:30:43,870
which is best for the
pentest or for the attacker

618
00:30:43,870 --> 00:30:46,959
because that's something
that you can spoof.

619
00:30:46,960 --> 00:30:48,760
And that's something
that could for example,

620
00:30:48,760 --> 00:30:51,410
create an additional count in SQL server.

621
00:30:51,410 --> 00:30:55,200
If, of course you're gonna
have a privilege query.

622
00:30:55,200 --> 00:30:56,290
So that's one thing.

623
00:30:56,290 --> 00:30:58,550
And another one it's trusting solutions

624
00:30:58,550 --> 00:31:01,169
without really knowing how to break them.

625
00:31:01,170 --> 00:31:04,210
So for example if we are using

626
00:31:05,360 --> 00:31:08,409
the multifactor authentication,
is that something

627
00:31:08,410 --> 00:31:11,760
that could be bypassed in a
sense so that when we take over,

628
00:31:11,760 --> 00:31:15,480
for example, the cookies
for the certain application

629
00:31:15,480 --> 00:31:18,190
that user is using, could that be a way

630
00:31:18,190 --> 00:31:20,650
to bypass multifactor authentication?

631
00:31:20,650 --> 00:31:24,380
Or another part is, if we've
got the antivirus solution

632
00:31:24,380 --> 00:31:28,120
are we able to stop it
by modifying the SDDL

633
00:31:28,120 --> 00:31:31,969
and approximately 40%
of antivirus solutions

634
00:31:31,970 --> 00:31:33,700
they're actually allowing that.

635
00:31:33,700 --> 00:31:36,490
So that is something that
we will need to check

636
00:31:36,490 --> 00:31:39,350
how we were able to stop
our security solutions.

637
00:31:39,350 --> 00:31:42,649
What in general are the
ways to bypass stuff

638
00:31:42,650 --> 00:31:43,500
that we are using?

639
00:31:43,500 --> 00:31:46,830
So that is a bit of a
thinking pattern here

640
00:31:46,830 --> 00:31:49,840
and another part it's
misusing service accounts

641
00:31:49,840 --> 00:31:52,649
and in general privilege accounts.

642
00:31:52,650 --> 00:31:55,200
And for this one, I
got a super quick demo.

643
00:31:55,200 --> 00:31:59,090
Where are you guys gonna
read how we are able to

644
00:31:59,090 --> 00:32:02,470
extract passwords from
the service accounts?

645
00:32:02,470 --> 00:32:04,370
Let me show you one of our favorite tools

646
00:32:04,370 --> 00:32:06,820
which is CQSecretsDumper.

647
00:32:06,820 --> 00:32:09,370
So over here, you guys
can see Paula's service

648
00:32:09,370 --> 00:32:12,719
and it's running on the
account CQUREFreddykrueger.

649
00:32:12,720 --> 00:32:15,670
So this is clearly not a built-in account

650
00:32:15,670 --> 00:32:18,210
and there was a risk that this account

651
00:32:18,210 --> 00:32:21,040
or under this account,
we are storing passwords

652
00:32:21,040 --> 00:32:24,550
in the registry of this particular system.

653
00:32:24,550 --> 00:32:26,290
So how you're able to extract it.

654
00:32:26,290 --> 00:32:30,149
Well, that is actually
data prediction API system.

655
00:32:30,150 --> 00:32:31,830
And we've got a tool for that.

656
00:32:31,830 --> 00:32:34,169
And that is actually a problem
for many organizations.

657
00:32:34,170 --> 00:32:37,700
So have a look, here
within the log on area

658
00:32:37,700 --> 00:32:39,910
you can see CQUREFreddy Krueger.

659
00:32:39,910 --> 00:32:43,020
And then eventually there
is this particular password,

660
00:32:43,020 --> 00:32:46,030
and that is something that
we're gonna be extracting

661
00:32:46,030 --> 00:32:47,230
from the registry.

662
00:32:47,230 --> 00:32:51,210
Normally it's not stored in
a clear text in the registry

663
00:32:51,210 --> 00:32:55,120
of this operating system, so
we will have to decrypt it.

664
00:32:55,120 --> 00:32:58,330
And then eventually we gonna
be able to use it later

665
00:32:58,330 --> 00:33:00,850
maybe within the attack who knows?

666
00:33:00,850 --> 00:33:03,480
So long story short that particular secret

667
00:33:03,480 --> 00:33:05,850
it is actually stored in the registry.

668
00:33:05,850 --> 00:33:08,020
And it is used because eventually,

669
00:33:08,020 --> 00:33:10,920
service credential manager has to use it.

670
00:33:10,920 --> 00:33:14,570
So let's see, while we use CQSecretsDamper

671
00:33:14,570 --> 00:33:17,250
and we specify service pjservice.

672
00:33:17,250 --> 00:33:19,930
And in the moment you
guys are gonna see that

673
00:33:19,930 --> 00:33:22,300
because we are running
this particular tool

674
00:33:22,300 --> 00:33:24,960
within the administrative privileges,

675
00:33:24,960 --> 00:33:27,787
then eventually, you can
see that requested registry

676
00:33:27,787 --> 00:33:29,450
access is not allowed.

677
00:33:29,450 --> 00:33:32,430
Well clearly because
that is a system secret

678
00:33:32,430 --> 00:33:36,540
and it is technically stored
within the security hive.

679
00:33:36,540 --> 00:33:40,437
So we have to run psexec -s -i -d cmd.exe,

680
00:33:42,750 --> 00:33:46,360
to elevate ourselves
in the separate window

681
00:33:46,360 --> 00:33:49,639
the local systems so with
the option, do not wait.

682
00:33:49,640 --> 00:33:53,040
And eventually here, you
can see that we are whoami

683
00:33:53,040 --> 00:33:54,210
and the authority system.

684
00:33:54,210 --> 00:33:57,630
And when we moved to our
toolkit we can run again,

685
00:33:57,630 --> 00:34:02,030
CQSecretsDumper or /service

686
00:34:02,030 --> 00:34:04,010
and we're gonna name pjservice

687
00:34:04,010 --> 00:34:06,480
and you can see that password this time

688
00:34:06,480 --> 00:34:10,070
is actually to be extracted
in the clear text.

689
00:34:10,070 --> 00:34:12,449
So I've never seen
organization by the way,

690
00:34:12,449 --> 00:34:15,040
that did not eventually have this problem.

691
00:34:15,040 --> 00:34:20,040
So it's good in the state of
security to verify what kind

692
00:34:20,739 --> 00:34:24,029
of services you've got that
are potentially running

693
00:34:24,030 --> 00:34:29,030
on the regular accounts because
100% password it's stored

694
00:34:29,429 --> 00:34:31,919
in the registry over
there, because this is how,

695
00:34:31,920 --> 00:34:34,260
by the way log on as a service works

696
00:34:34,260 --> 00:34:36,860
that you guys are actually
able to extract passwords

697
00:34:36,860 --> 00:34:38,880
like this, who can do it?

698
00:34:38,880 --> 00:34:41,400
As you could see it could
be actually extracted

699
00:34:41,400 --> 00:34:44,420
only by local system but
you could also use that

700
00:34:44,420 --> 00:34:47,969
to perform volume maintenance
task privilege, for example

701
00:34:47,969 --> 00:34:52,000
to copy that system and
security hive, and as well,

702
00:34:52,000 --> 00:34:54,659
extract the password offline like this.

703
00:34:54,659 --> 00:34:58,140
So these are the possibilities
while extracting passwords

704
00:34:58,140 --> 00:35:01,520
from the service accounts
from the registry.

705
00:35:01,520 --> 00:35:04,580
Okay, guys so you are able
to see how easy it is.

706
00:35:04,580 --> 00:35:07,831
So it could be that
potentially misconfiguration

707
00:35:07,831 --> 00:35:11,760
of the workstation could
be used as one of the steps

708
00:35:11,760 --> 00:35:14,480
that the hacker technically could use

709
00:35:14,480 --> 00:35:17,350
in order to do one step further.

710
00:35:17,350 --> 00:35:20,210
And the extracting passwords
from the service accounts

711
00:35:20,210 --> 00:35:22,893
is just one of that 20 places.

712
00:35:24,160 --> 00:35:26,337
So it depends, of course,
what kind of solutions you got

713
00:35:26,337 --> 00:35:29,700
but we are able to, just
like that, extract password

714
00:35:29,700 --> 00:35:33,310
from the configured service.

715
00:35:33,310 --> 00:35:37,740
So here we go, the last one
we've got falling for evil tools

716
00:35:37,740 --> 00:35:38,939
and what we mean by this,

717
00:35:38,940 --> 00:35:42,010
is that we already
deciding to use a solution.

718
00:35:42,010 --> 00:35:45,030
And at the same time that
solution might appear

719
00:35:45,030 --> 00:35:46,240
not to be safe.

720
00:35:46,240 --> 00:35:50,229
So that is a generic
concept of the solutions

721
00:35:50,230 --> 00:35:53,860
that we decide to use especially
within the pandemic times

722
00:35:53,860 --> 00:35:57,220
when we, for example, switch
immediately to the remote work

723
00:35:57,220 --> 00:36:00,669
and we are forced to do something
or get used to something

724
00:36:00,670 --> 00:36:03,570
that users are simply not used to.

725
00:36:03,570 --> 00:36:06,050
And that is something that
I would love to show you

726
00:36:06,050 --> 00:36:09,200
in terms of multifactor authentication,

727
00:36:09,200 --> 00:36:12,339
and also the ways of how
we are able to take over

728
00:36:12,340 --> 00:36:17,340
user workstation or in
general users mailbox access.

729
00:36:17,470 --> 00:36:19,930
So call it as you won't
because we can escalate

730
00:36:19,930 --> 00:36:22,460
this attack further, but at the same time,

731
00:36:22,460 --> 00:36:25,730
it is relying on the team's communication

732
00:36:25,730 --> 00:36:28,680
or something that looks
like teams communication.

733
00:36:28,680 --> 00:36:31,990
Okay, guys so I'm
leaving you with these 11

734
00:36:31,990 --> 00:36:33,709
key cyber security questions

735
00:36:33,710 --> 00:36:37,330
which is an important thing to note

736
00:36:37,330 --> 00:36:40,509
because every organization
security differs

737
00:36:40,510 --> 00:36:42,540
but having this, for example, 10

738
00:36:42,540 --> 00:36:45,470
but there's definitely
more mistakes, situation

739
00:36:45,470 --> 00:36:47,600
that we are dealing with
when working from home

740
00:36:47,600 --> 00:36:51,500
maybe we are able to improve the security

741
00:36:51,500 --> 00:36:55,390
of the current user
workstation, or in general

742
00:36:55,390 --> 00:36:56,859
our security posture.

743
00:36:56,860 --> 00:36:59,150
Here we've got information and questions

744
00:36:59,150 --> 00:37:03,140
like does our business culture support

745
00:37:03,140 --> 00:37:05,680
a secure cyber environment?

746
00:37:05,680 --> 00:37:08,580
Or within the second set of questions here

747
00:37:08,580 --> 00:37:12,370
are we adequately resourced and insured?

748
00:37:12,370 --> 00:37:16,460
So by having answered this
11 key security questions

749
00:37:16,460 --> 00:37:19,080
that I'm always sharing
with CSOS particularly

750
00:37:19,080 --> 00:37:22,900
we are able to rethink
our remote work strategy

751
00:37:22,900 --> 00:37:27,182
in order to prepare for the, I would say,

752
00:37:27,182 --> 00:37:31,899
not to be missed and the
definitely undoubtfully happening

753
00:37:32,830 --> 00:37:34,930
shift to remote work.

754
00:37:34,930 --> 00:37:38,250
And then within the
summary best practices,

755
00:37:38,250 --> 00:37:40,540
understanding it's definitely
the key to security

756
00:37:40,540 --> 00:37:43,210
which means that the more we look

757
00:37:43,210 --> 00:37:45,370
at our infrastructure from
the hacker's perspective

758
00:37:45,370 --> 00:37:48,109
the more of the issues
we are able to spot,

759
00:37:48,110 --> 00:37:51,690
especially within the users remote work.

760
00:37:51,690 --> 00:37:56,110
Whenever we are thinking about
the remediation and tracking,

761
00:37:56,110 --> 00:37:59,020
so the monitoring solutions
that's another perspective

762
00:37:59,020 --> 00:38:01,870
that gives us basically the view

763
00:38:01,870 --> 00:38:04,410
on what kind of things are executing

764
00:38:04,410 --> 00:38:07,129
on the user workstations or on the server.

765
00:38:07,130 --> 00:38:10,640
So in general, well-designed monitoring

766
00:38:10,640 --> 00:38:13,870
and smart analysis about
what's happening right now.

767
00:38:13,870 --> 00:38:16,270
Filtering and segmentation of the network.

768
00:38:16,270 --> 00:38:19,560
The allowlistings/whitelistings
to prevent things

769
00:38:19,560 --> 00:38:22,529
that are unknown on workstations.

770
00:38:22,530 --> 00:38:24,690
Things like attack
surface reduction rules.

771
00:38:24,690 --> 00:38:28,030
So these are the things that
are very easy to implement

772
00:38:28,030 --> 00:38:31,250
but at the same time being a good answer

773
00:38:31,250 --> 00:38:34,390
for the current remote work problems.

774
00:38:34,390 --> 00:38:37,339
Thank you so much for
listening to my presentation.

775
00:38:37,340 --> 00:38:40,037
I'm Paula Januszkiewicz,
and enjoy your day.

