1
00:00:01,120 --> 00:00:03,470
- Hello. My name is Susan Symington

2
00:00:03,470 --> 00:00:06,250
and I'm a computer scientist
at the Mitre Corporation

3
00:00:06,250 --> 00:00:08,670
and I'm absolutely
delighted to be kicking off

4
00:00:08,670 --> 00:00:11,193
this session in trusted network layer

5
00:00:11,193 --> 00:00:15,140
onboarding and life cycle
management for IoT devices.

6
00:00:15,140 --> 00:00:17,680
We have two talks prepared for you today.

7
00:00:17,680 --> 00:00:20,990
I'll be talking first about
introducing onboarding

8
00:00:20,990 --> 00:00:23,259
in the generic sense with no reference to

9
00:00:23,260 --> 00:00:25,810
any particular products or protocols.

10
00:00:25,810 --> 00:00:28,110
And our second speaker will be Elliot Lear

11
00:00:28,110 --> 00:00:31,390
of Cisco Systems who'll talk about some

12
00:00:31,390 --> 00:00:33,240
specific onboarding solutions and

13
00:00:33,240 --> 00:00:34,940
provide some details on those.

14
00:00:34,940 --> 00:00:36,202
So let's get started.

15
00:00:37,390 --> 00:00:41,120
With more than 40 billion
devices estimated to be online

16
00:00:41,120 --> 00:00:45,084
in 2025 it's really not
realistic for us to expect

17
00:00:45,085 --> 00:00:48,230
to be able to manage
those devices manually.

18
00:00:48,230 --> 00:00:53,230
We need scalable mechanisms to
securely manage those devices

19
00:00:54,500 --> 00:00:59,200
throughout their life
cycles and in this session

20
00:00:59,200 --> 00:01:03,120
we're focused on the point of
the life cycle when the device

21
00:01:03,120 --> 00:01:06,649
is being provisioned with
its network credentials.

22
00:01:06,650 --> 00:01:08,630
That's the critical
point in the life cycle

23
00:01:08,630 --> 00:01:12,000
because if that provisioning
isn't performed securely

24
00:01:12,000 --> 00:01:14,600
then the device is at
risk of being onboarded

25
00:01:14,600 --> 00:01:17,640
to a network that's not
authorized to take control of it.

26
00:01:17,640 --> 00:01:19,650
And the network is at risk of having

27
00:01:19,650 --> 00:01:21,853
unauthorized devices attached to it.

28
00:01:22,830 --> 00:01:26,890
So I guess we're all pretty much familiar

29
00:01:26,890 --> 00:01:29,720
with the onboarding problem
just based on our experience

30
00:01:29,720 --> 00:01:30,960
with the typical home network.

31
00:01:30,960 --> 00:01:33,449
You bring home a device
and you wanna put the

32
00:01:33,450 --> 00:01:35,020
network password into it,

33
00:01:35,020 --> 00:01:38,960
but if it doesn't have an
interface it's pretty hard to do

34
00:01:38,960 --> 00:01:41,229
and it's even harder to do that securely.

35
00:01:41,230 --> 00:01:43,000
And our home networks are insecure

36
00:01:43,000 --> 00:01:46,380
in the sense that all the
devices share the same password,

37
00:01:46,380 --> 00:01:49,420
so if that password falls
into the wrong hands it's very

38
00:01:49,420 --> 00:01:53,740
easy for unauthorized devices
to connect to the network.

39
00:01:53,740 --> 00:01:57,699
Ideally we want to have unique
credentials for each device

40
00:01:57,700 --> 00:02:00,330
but with 40 billion devices
it's not gonna be realistic

41
00:02:00,330 --> 00:02:03,360
to provision those credentials manually.

42
00:02:03,360 --> 00:02:05,810
And right now there
aren't really good options

43
00:02:05,810 --> 00:02:09,009
for zero touch automated provisioning.

44
00:02:09,009 --> 00:02:11,350
So to address this challenge,

45
00:02:11,350 --> 00:02:13,310
we want a trusted mechanism for

46
00:02:13,310 --> 00:02:16,920
provisioning network
credentials to IoT devices

47
00:02:16,920 --> 00:02:19,470
and we'd like that mechanism
to be open, standard,

48
00:02:19,470 --> 00:02:21,783
secure, scalable and automated.

49
00:02:22,860 --> 00:02:25,480
And let's think big let's
not just stop there,

50
00:02:25,480 --> 00:02:27,679
but let's have as an added bonus,

51
00:02:27,680 --> 00:02:30,470
it would be great if that
provisioning protocol

52
00:02:30,470 --> 00:02:34,300
could also support
additional capabilities to

53
00:02:34,300 --> 00:02:36,543
secure the device
throughout its life cycle.

54
00:02:38,130 --> 00:02:40,290
Now what is trusted
network-layer onboarding?

55
00:02:40,290 --> 00:02:42,299
It's a great question
because if you look through

56
00:02:42,300 --> 00:02:45,090
the literature there's not a
clear consensus on the meaning.

57
00:02:45,090 --> 00:02:47,520
So here's how we define it.

58
00:02:47,520 --> 00:02:50,250
Network-layer onboarding
is the provisioning of

59
00:02:50,250 --> 00:02:53,170
network credentials to a
device and it's performed

60
00:02:53,170 --> 00:02:56,989
when the device is deployed
not when it's manufactured.

61
00:02:56,990 --> 00:03:01,080
Trusted network-layer
onboarding is when the device is

62
00:03:01,080 --> 00:03:03,760
provisioned with
credentials that are unique.

63
00:03:03,760 --> 00:03:06,810
The device and the network
can authenticate each other

64
00:03:06,810 --> 00:03:08,360
before the provisioning.

65
00:03:08,360 --> 00:03:11,100
The provisioning occurs
over an encrypted channel

66
00:03:11,100 --> 00:03:14,250
so there's no danger of eavesdropping.

67
00:03:14,250 --> 00:03:17,470
No humans are given access
to the credentials and the

68
00:03:17,470 --> 00:03:20,420
credentialing can be performed repeatedly,

69
00:03:20,420 --> 00:03:23,239
an unlimited number of times throughout

70
00:03:23,240 --> 00:03:24,423
the device life cycle.

71
00:03:25,460 --> 00:03:28,570
So let's take a look at the
steps that are involved in a

72
00:03:28,570 --> 00:03:31,590
typical network-layer
onboarding, a generic onboarding.

73
00:03:31,590 --> 00:03:35,290
Okay. So what you're
seeing on the screen here,

74
00:03:35,290 --> 00:03:36,799
on the left you have an IoT device,

75
00:03:36,800 --> 00:03:38,040
on the right you have a network.

76
00:03:38,040 --> 00:03:39,810
The device wants to connect to the network

77
00:03:39,810 --> 00:03:41,720
but it doesn't know what
its network password is yet.

78
00:03:41,720 --> 00:03:43,970
It doesn't have the credentials to do so.

79
00:03:43,970 --> 00:03:46,200
So we're showing a wireless network

80
00:03:46,200 --> 00:03:48,950
but it could be also a wire
network, it doesn't matter.

81
00:03:50,240 --> 00:03:53,570
Before the network onboarding
begins we assume that the

82
00:03:53,570 --> 00:03:56,670
device and the network
are already provisioned

83
00:03:56,670 --> 00:03:58,530
with bootstrapping credentials.

84
00:03:58,530 --> 00:04:00,300
When the device comes
out of the manufacturer

85
00:04:00,300 --> 00:04:02,650
we expect it to have
these credentials on it.

86
00:04:02,650 --> 00:04:04,980
An example of bootstrapping
credentials are a

87
00:04:04,980 --> 00:04:08,299
unique identifier for the
device and a private key

88
00:04:08,300 --> 00:04:11,083
that the device can use to
authenticate its identifier.

89
00:04:12,920 --> 00:04:15,730
Now the first step in the
network-layer onboarding

90
00:04:15,730 --> 00:04:19,089
is some kind of introduction
of bootstrapping credentials

91
00:04:19,089 --> 00:04:23,090
between the IoT device and
the network so they can

92
00:04:24,870 --> 00:04:26,530
trust each other to some extent.

93
00:04:26,530 --> 00:04:30,039
Now an example of this would
be somehow the network has to

94
00:04:30,040 --> 00:04:32,560
get the public key of the
device and device has to get the

95
00:04:32,560 --> 00:04:37,453
public key of the network and
this could be accomplished

96
00:04:39,250 --> 00:04:40,900
if they both have certificates.

97
00:04:40,900 --> 00:04:43,659
It could be accomplished in a
zero touch fashion, in theory.

98
00:04:43,660 --> 00:04:45,510
But for some onboarding protocols

99
00:04:47,210 --> 00:04:49,960
it might require a human to perform

100
00:04:49,960 --> 00:04:52,599
that introduction of the
public key for example,

101
00:04:52,600 --> 00:04:55,970
and we call that human
a trusted onboarder.

102
00:04:55,970 --> 00:04:59,580
Not all onboarding
protocols may need a human

103
00:04:59,580 --> 00:05:01,729
and some may, some may
not, it's an option.

104
00:05:02,670 --> 00:05:05,020
So the next step is the
device and the network

105
00:05:05,020 --> 00:05:09,719
authenticate each other and
they create a secure channel

106
00:05:09,720 --> 00:05:12,580
and they use that channel
for the network to

107
00:05:12,580 --> 00:05:15,180
send the onboarding
credentials down to the device.

108
00:05:15,180 --> 00:05:16,930
And now that is a network-layer onboarding

109
00:05:16,930 --> 00:05:18,930
in a nutshell in its simplest form.

110
00:05:18,930 --> 00:05:22,960
But remember before I said that
we would like to be able to

111
00:05:22,960 --> 00:05:26,469
support additional security
capabilities to protect

112
00:05:26,470 --> 00:05:28,410
the device throughout its life cycle.

113
00:05:28,410 --> 00:05:30,970
So we'd like to add another
step before we do the

114
00:05:30,970 --> 00:05:33,460
provisioning where we
pass some information

115
00:05:33,460 --> 00:05:36,053
between the device and the
network to accomplish that.

116
00:05:36,053 --> 00:05:38,200
I have three examples shown here.

117
00:05:38,200 --> 00:05:40,900
The first is an attestation token.

118
00:05:40,900 --> 00:05:44,270
The device could perform
some sort of attestation,

119
00:05:44,270 --> 00:05:46,740
maybe measuring its hardware or firmware,

120
00:05:46,740 --> 00:05:49,190
send that up to the network
and the network could use that

121
00:05:49,190 --> 00:05:52,650
token as a basis for a decision
to decide whether or not

122
00:05:52,650 --> 00:05:56,390
it trusts the device sufficiently
to permit it to onboard.

123
00:05:56,390 --> 00:05:59,969
The second example is
device intent information.

124
00:05:59,970 --> 00:06:04,970
This would be something
like a MUD URL from RFC 8520

125
00:06:05,150 --> 00:06:07,900
and the device would send
device intent information

126
00:06:07,900 --> 00:06:11,140
to the network so the
network can be aware of what

127
00:06:11,140 --> 00:06:16,140
communications the device
is permitted to perform.

128
00:06:16,610 --> 00:06:19,790
And it could use that to enforce those

129
00:06:19,790 --> 00:06:21,700
communications on the network.

130
00:06:21,700 --> 00:06:23,050
A third example is

131
00:06:23,050 --> 00:06:25,500
application layer
bootstrapping information.

132
00:06:25,500 --> 00:06:27,620
The device could send
application layer bootstrapping

133
00:06:27,620 --> 00:06:29,140
information to the network.

134
00:06:29,140 --> 00:06:33,180
Now I haven't mentioned
application layer onboarding yet,

135
00:06:33,180 --> 00:06:35,593
but you can think of
application layer onboarding as

136
00:06:35,593 --> 00:06:38,310
analogous to network-layer onboarding.

137
00:06:38,310 --> 00:06:40,670
It just happens at the
application layer rather

138
00:06:40,670 --> 00:06:43,360
than the network-layer and just as the

139
00:06:43,360 --> 00:06:45,670
network-layer onboarding
requires that bootstrapping

140
00:06:45,670 --> 00:06:48,680
information exchange that
I spoke about earlier,

141
00:06:48,680 --> 00:06:50,770
application layer onboarding requires a

142
00:06:50,770 --> 00:06:52,690
bootstrapping information exchange.

143
00:06:52,690 --> 00:06:54,770
So what better way to support

144
00:06:54,770 --> 00:06:57,049
that information exchange
than to do it as part of the

145
00:06:57,050 --> 00:06:59,520
network-layer onboarding protocol.

146
00:06:59,520 --> 00:07:01,940
So the next thing that
happens is the device connects

147
00:07:01,940 --> 00:07:04,815
to the network using the
credentials that were

148
00:07:04,815 --> 00:07:06,540
provisioned to it.

149
00:07:06,540 --> 00:07:10,380
Now if device intent
information had been set up,

150
00:07:10,380 --> 00:07:12,750
then the network is already
configured with access

151
00:07:12,750 --> 00:07:16,400
control filters to
enforce the communications

152
00:07:17,770 --> 00:07:20,789
that were the rules that were sent to it.

153
00:07:20,790 --> 00:07:24,300
So in other words the router
is not gonna let the device

154
00:07:24,300 --> 00:07:26,950
send or receive any
information or any messages

155
00:07:26,950 --> 00:07:30,092
that it doesn't need to
perform its required function.

156
00:07:32,560 --> 00:07:36,060
Now if application layer
bootstrapping information was

157
00:07:36,060 --> 00:07:37,400
signed up in the previous step,

158
00:07:37,400 --> 00:07:39,400
then right after the device
connects to the network,

159
00:07:39,400 --> 00:07:41,099
it can automatically begin performing

160
00:07:41,100 --> 00:07:43,040
application layer onboarding.

161
00:07:43,040 --> 00:07:45,150
And by that we mean the device

162
00:07:45,150 --> 00:07:48,120
and an application server
would authenticate each other,

163
00:07:48,120 --> 00:07:49,960
establish a secure connection.

164
00:07:49,960 --> 00:07:52,640
Then the application
server would download the

165
00:07:52,640 --> 00:07:55,849
latest version of the
device's application to it.

166
00:07:55,850 --> 00:07:58,380
Also as part of application
layer onboarding

167
00:07:58,380 --> 00:08:01,580
the device could establish
a secure association

168
00:08:01,580 --> 00:08:04,130
with a lifecycle management
service that could then

169
00:08:04,130 --> 00:08:07,090
manage the device for as long as it stays

170
00:08:07,090 --> 00:08:08,340
connected to the network.

171
00:08:09,660 --> 00:08:13,450
Now let's take a look at what
points in the device lifecycle

172
00:08:13,450 --> 00:08:15,830
that onboarding is relevant.

173
00:08:15,830 --> 00:08:18,870
We've broken the
lifecycle into two phases.

174
00:08:18,870 --> 00:08:21,540
In this slide we talk about
the supply chain phase

175
00:08:21,540 --> 00:08:23,890
and the next slide the use phase.

176
00:08:23,890 --> 00:08:26,469
In the supply chain phase
the manufacturer has a huge

177
00:08:26,470 --> 00:08:28,840
responsibility for supporting onboarding.

178
00:08:28,840 --> 00:08:30,299
The manufacturer has to make sure

179
00:08:30,300 --> 00:08:33,730
that the device is outfitted
with the onboarding chip set.

180
00:08:33,730 --> 00:08:37,030
It has to install bootstrapping
credentials on the device

181
00:08:38,350 --> 00:08:41,880
and it has to establish yourself
as the owner of the device,

182
00:08:41,880 --> 00:08:44,840
if the onboarding solution
is gonna support something

183
00:08:44,840 --> 00:08:47,020
that's called proof of ownership.

184
00:08:47,020 --> 00:08:49,199
Also interesting during this phase,

185
00:08:49,200 --> 00:08:52,400
the manufacturer may have
to pass the device to one or

186
00:08:52,400 --> 00:08:55,329
more integrators to
enable those integrators

187
00:08:55,330 --> 00:08:56,900
to perform an integration.

188
00:08:56,900 --> 00:08:59,790
And that means those integrators
would have to onboard

189
00:08:59,790 --> 00:09:02,430
the device to their networks
to perform the integration.

190
00:09:02,430 --> 00:09:05,310
So it's kinda interesting
to me that the first time

191
00:09:05,310 --> 00:09:07,750
that the device gets onboarded,

192
00:09:07,750 --> 00:09:10,623
may actually be during
the manufacturing process.

193
00:09:12,330 --> 00:09:15,760
In the use phase the first
real owner of the device

194
00:09:15,760 --> 00:09:18,110
gets the device and
performs application and

195
00:09:18,110 --> 00:09:21,040
network-layer onboarding and
application layer onboarding,

196
00:09:21,040 --> 00:09:22,920
as I described earlier.

197
00:09:22,920 --> 00:09:27,000
And the device reaches the
operational phase and hopefully

198
00:09:27,000 --> 00:09:30,300
it stays in that operational
phase for most of its lifetime.

199
00:09:30,300 --> 00:09:32,780
However periodically the
device may need to be

200
00:09:32,780 --> 00:09:35,410
disconnected from the
network and re-onboarded.

201
00:09:35,410 --> 00:09:39,339
Maybe it needs new credentials
or maybe there's been a

202
00:09:39,340 --> 00:09:42,470
breach so it has to have
its credentials refreshed.

203
00:09:42,470 --> 00:09:45,320
And then later when
the device is no longer

204
00:09:45,320 --> 00:09:48,570
wanted on the network or
maybe it no longer works,

205
00:09:48,570 --> 00:09:50,570
it's disconnected and decommissioned.

206
00:09:50,570 --> 00:09:54,000
And if it's no longer wanted
at all it reaches end of life.

207
00:09:54,000 --> 00:09:56,530
But it's possible it could
be repurposed on that same

208
00:09:56,530 --> 00:09:59,720
network, I mean, on a different
network by the same owner

209
00:09:59,720 --> 00:10:02,740
or it could be resold to a new owner and

210
00:10:02,740 --> 00:10:04,990
re-onboarded to a new network.

211
00:10:04,990 --> 00:10:09,830
So you can see onboarding may
need to be repeated many times

212
00:10:09,830 --> 00:10:11,720
during the device lifecycle.

213
00:10:11,720 --> 00:10:14,770
Now everything I've talked
about so far is documented

214
00:10:14,770 --> 00:10:18,920
in a paper that we posted last year

215
00:10:18,920 --> 00:10:20,170
and it's available online.

216
00:10:20,170 --> 00:10:21,870
We're in the process of updating

217
00:10:21,870 --> 00:10:24,080
that in response to comments.

218
00:10:24,080 --> 00:10:29,080
And that paper was developed
as a result of some

219
00:10:30,260 --> 00:10:31,970
document based research we performed,

220
00:10:31,970 --> 00:10:34,810
but also a series of discussions
that we held with the

221
00:10:34,810 --> 00:10:37,532
variety of onboarding stakeholders,

222
00:10:38,460 --> 00:10:41,260
device and chip manufacturers,

223
00:10:41,260 --> 00:10:44,893
network equipment manufacturers, users,

224
00:10:46,880 --> 00:10:49,770
service providers and representatives

225
00:10:49,770 --> 00:10:51,130
from various consortia.

226
00:10:51,130 --> 00:10:54,140
And we benefited from their
different perspectives

227
00:10:54,140 --> 00:10:58,630
and also their considerable
expertise and experience.

228
00:10:58,630 --> 00:11:02,280
We tried to document everything
we learned in this paper.

229
00:11:02,280 --> 00:11:07,280
The paper also provides a
taxonomy of onboarding solutions

230
00:11:08,340 --> 00:11:10,360
meaning it talks about
different characteristics

231
00:11:10,360 --> 00:11:12,110
and capabilities that any given

232
00:11:12,110 --> 00:11:14,930
onboarding solution might support.

233
00:11:14,930 --> 00:11:16,959
And the most important
of those characteristics

234
00:11:16,960 --> 00:11:19,800
and capabilities are related to security.

235
00:11:19,800 --> 00:11:21,819
Now a lot of the security characteristics

236
00:11:21,820 --> 00:11:24,830
we identified are pretty
standard typical ones you

237
00:11:24,830 --> 00:11:28,200
expect to be associated
with the security mechanism,

238
00:11:28,200 --> 00:11:30,260
but others are noteworthy.

239
00:11:30,260 --> 00:11:33,280
For example, network
selection is the ability

240
00:11:33,280 --> 00:11:35,939
of the onboarding solution
to tell the device not

241
00:11:35,940 --> 00:11:37,600
only what its credentials are,

242
00:11:37,600 --> 00:11:40,640
but what network it should onboard to.

243
00:11:40,640 --> 00:11:43,210
Cause it's possible that a
device could have a choice

244
00:11:43,210 --> 00:11:46,210
of several different networks
that it can onboard to

245
00:11:46,210 --> 00:11:48,560
and we don't want it to
be duped into onboarding

246
00:11:48,560 --> 00:11:50,280
to the wrong network.

247
00:11:50,280 --> 00:11:53,010
Also the trusted onboarder,
as I mentioned earlier,

248
00:11:53,010 --> 00:11:56,964
that's a feature that
some solutions may require

249
00:11:56,964 --> 00:11:58,980
and others may not.

250
00:11:58,980 --> 00:12:03,150
And proof of ownership
is a capability that

251
00:12:03,150 --> 00:12:06,310
if a onboarding solution
supports proof of ownership

252
00:12:06,310 --> 00:12:09,130
then it's possible for the device to

253
00:12:09,130 --> 00:12:14,130
cryptographically verify
what entity is the owner.

254
00:12:14,850 --> 00:12:16,670
And it can use that
information to determine

255
00:12:16,670 --> 00:12:21,433
whether a network is authorized
to onboard it or not.

256
00:12:23,690 --> 00:12:25,680
We also looked at
characteristics that weren't

257
00:12:25,680 --> 00:12:28,036
related to security and
we looked at these from

258
00:12:28,037 --> 00:12:30,600
three different viewpoints.

259
00:12:30,600 --> 00:12:32,710
The user, the manufacturer and

260
00:12:32,710 --> 00:12:34,670
the service provider viewpoint.

261
00:12:34,670 --> 00:12:38,219
Within the user viewpoint
we broke that information

262
00:12:38,220 --> 00:12:40,980
down basically into two,

263
00:12:40,980 --> 00:12:43,470
the home user versus the enterprise user.

264
00:12:43,470 --> 00:12:45,110
And we found some
interesting distinctions.

265
00:12:45,110 --> 00:12:49,110
The home user is much more
concerned with ease of use,

266
00:12:49,110 --> 00:12:51,080
whereas the enterprise user cares about

267
00:12:51,080 --> 00:12:52,320
things like bulk onboarding.

268
00:12:52,320 --> 00:12:57,250
Can you onboard lots of
devices quickly with zero touch

269
00:12:57,250 --> 00:13:01,550
and does the solution
support device intent

270
00:13:01,550 --> 00:13:03,599
and proof of ownership, things like that.

271
00:13:06,430 --> 00:13:09,349
Manufacturers are very
concerned with how complex

272
00:13:09,350 --> 00:13:11,700
the onboarding solution
is for them to support.

273
00:13:12,979 --> 00:13:16,720
What demands it places
on the IoT device itself,

274
00:13:16,720 --> 00:13:20,030
how much secure storage is
required at memory power,

275
00:13:20,030 --> 00:13:21,400
things like that.

276
00:13:21,400 --> 00:13:23,160
What bootstrapping
information they have to

277
00:13:23,160 --> 00:13:24,800
install on a device.

278
00:13:24,800 --> 00:13:28,660
And also whether the onboarding
solution supports things

279
00:13:28,660 --> 00:13:31,439
like device intent or proof of ownership

280
00:13:31,440 --> 00:13:34,170
that may require the manufacturer

281
00:13:34,170 --> 00:13:36,319
to have responsibilities that extend

282
00:13:36,320 --> 00:13:39,773
beyond just simply
manufacturing the device.

283
00:13:41,410 --> 00:13:44,199
So now I'd like to tell you
about an onboarding project that

284
00:13:44,200 --> 00:13:47,370
we've recently kicked off at the NCCoE.

285
00:13:47,370 --> 00:13:49,530
The NCCoE's mission is to accelerate

286
00:13:49,530 --> 00:13:52,439
the adoption of secure technologies and

287
00:13:52,440 --> 00:13:54,640
we collaborate with innovators to provide

288
00:13:54,640 --> 00:13:57,300
real world standards-based solutions

289
00:13:57,300 --> 00:14:00,363
for business cybersecurity needs.

290
00:14:02,780 --> 00:14:07,010
We held a workshop back
in November on onboarding,

291
00:14:07,010 --> 00:14:08,650
trusted network-layer onboarding.

292
00:14:08,650 --> 00:14:11,220
And as a result of that workshop,

293
00:14:11,220 --> 00:14:12,880
the feedback we got there,

294
00:14:12,880 --> 00:14:16,370
we drafted a project description
that it's available online.

295
00:14:16,370 --> 00:14:20,950
And in that project description
we describe our intention

296
00:14:20,950 --> 00:14:23,540
to demonstrate network-layer onboarding

297
00:14:23,540 --> 00:14:26,319
and then hopefully other capabilities too.

298
00:14:26,320 --> 00:14:28,100
Now where we are in that project right now

299
00:14:28,100 --> 00:14:29,780
is right near the beginning.

300
00:14:29,780 --> 00:14:32,920
Soon we'll be forming a team
of collaborators who are

301
00:14:32,920 --> 00:14:37,920
committed to work with us to
design, build, demonstrate

302
00:14:38,210 --> 00:14:41,500
and document example onboarding solutions.

303
00:14:41,500 --> 00:14:43,640
Now we don't know
exactly what capabilities

304
00:14:43,640 --> 00:14:45,480
will be demonstrated
because that will depend

305
00:14:45,480 --> 00:14:49,950
on who our collaborators
are and what technologies

306
00:14:49,950 --> 00:14:51,680
they bring with them.

307
00:14:51,680 --> 00:14:56,069
But in the next slide I just
wanna quickly give you an idea

308
00:14:56,070 --> 00:14:59,290
of the types of things that
are potentially available

309
00:14:59,290 --> 00:15:01,030
for us to demonstrate.

310
00:15:01,030 --> 00:15:02,910
As I said, we want to
focus on network layer

311
00:15:02,910 --> 00:15:05,170
onboarding and demonstrate
that we can do it

312
00:15:05,170 --> 00:15:08,490
in a trusted fashion and
that we can do it repeatedly.

313
00:15:08,490 --> 00:15:11,500
We'd also like to demonstrate
additional capabilities

314
00:15:11,500 --> 00:15:13,580
such as device attestation.

315
00:15:13,580 --> 00:15:18,200
If we could use devices
that are capable of doing

316
00:15:18,200 --> 00:15:20,690
the secure boot and
then taking measurements

317
00:15:20,690 --> 00:15:22,450
of their hardware, firmware, software

318
00:15:22,450 --> 00:15:23,930
and sending that up to the network

319
00:15:23,930 --> 00:15:28,150
in a attestation token then
the network could evaluate that

320
00:15:28,150 --> 00:15:30,360
token to decide whether it
wants to permit the device

321
00:15:30,360 --> 00:15:31,333
to onboard at all.

322
00:15:32,460 --> 00:15:34,900
We'd also like to integrate with

323
00:15:34,900 --> 00:15:38,430
trusted application layer
onboarding as I described before.

324
00:15:38,430 --> 00:15:41,530
And also support some
security capabilities

325
00:15:41,530 --> 00:15:44,270
that would protect the
device on an ongoing basis.

326
00:15:44,270 --> 00:15:46,763
For example, device
intent, as I mentioned,

327
00:15:48,440 --> 00:15:51,980
lifecycle management, mutual attestation.

328
00:15:51,980 --> 00:15:56,320
For example, if the device
wants to access some sort of

329
00:15:56,320 --> 00:15:58,400
high value data on the network,

330
00:15:58,400 --> 00:16:01,569
the network could require
the device to provide an

331
00:16:01,570 --> 00:16:04,530
attestation token that
proves that the device is

332
00:16:04,530 --> 00:16:07,800
compliant before it allows
it to access that data.

333
00:16:07,800 --> 00:16:09,829
And that could work in
the other direction too.

334
00:16:09,830 --> 00:16:13,300
The device could require the
lifecycle management service

335
00:16:13,300 --> 00:16:16,910
to perform attestation before
the device is willing to trust

336
00:16:16,910 --> 00:16:18,670
that lifecycle management service,

337
00:16:18,670 --> 00:16:20,729
to update the device.

338
00:16:20,730 --> 00:16:24,500
And we can imagine any
other number of capabilities

339
00:16:24,500 --> 00:16:26,630
we could integrate with, for example,

340
00:16:26,630 --> 00:16:30,453
access management or device
profiling or behavior analysis.

341
00:16:31,550 --> 00:16:35,790
So hopefully by now you
have an appreciation of the

342
00:16:35,790 --> 00:16:38,849
importance of trusted
network-layer onboarding

343
00:16:38,850 --> 00:16:40,740
and you understand some of the different

344
00:16:40,740 --> 00:16:43,440
capabilities and
characteristics that any given

345
00:16:43,440 --> 00:16:45,830
onboarding solution might offer.

346
00:16:45,830 --> 00:16:47,260
And if you wanna learn more,

347
00:16:47,260 --> 00:16:51,340
you have the links to the
two papers that we have,

348
00:16:51,340 --> 00:16:54,150
where you can look at that more carefully.

349
00:16:54,150 --> 00:16:55,910
So in the near future
you should think about

350
00:16:55,910 --> 00:16:58,319
what onboarding solution
characteristics are

351
00:16:58,320 --> 00:17:00,690
important to you and your use case

352
00:17:00,690 --> 00:17:04,420
and perhaps draft some
requirements, specifications,

353
00:17:04,420 --> 00:17:07,270
so that when those
solutions become available

354
00:17:07,270 --> 00:17:09,109
you'll be ready to adapt them.

355
00:17:09,109 --> 00:17:11,740
And when they are available

356
00:17:11,740 --> 00:17:13,300
you definitely should adapt them,

357
00:17:13,300 --> 00:17:14,272
as soon as you can.

358
00:17:15,750 --> 00:17:18,760
In summary, onboarding is a linchpin of

359
00:17:18,760 --> 00:17:22,640
IOT device and network
security to protect the device

360
00:17:22,640 --> 00:17:25,230
not only just during
credential provisioning

361
00:17:25,230 --> 00:17:28,020
but it can also play a
crucial role in protecting

362
00:17:28,020 --> 00:17:30,770
devices throughout their life cycles.

363
00:17:30,770 --> 00:17:32,200
Now before I wrap up,

364
00:17:32,200 --> 00:17:33,960
I wanna thank the folks listed

365
00:17:33,960 --> 00:17:37,040
on this slide for providing
some of the content

366
00:17:37,040 --> 00:17:40,740
in my presentation and also
in Elliot's presentation.

367
00:17:40,740 --> 00:17:43,070
We're very grateful to
them for their help.

368
00:17:43,070 --> 00:17:44,730
And I wanna thank my colleagues

369
00:17:44,730 --> 00:17:48,430
at the NCCoE and at the MITRE Corporation.

370
00:17:48,430 --> 00:17:50,910
And most of all I wanna thank you,

371
00:17:50,910 --> 00:17:53,943
my audience, for your
time and your attention.

372
00:17:55,070 --> 00:17:57,530
And next I want to introduce

373
00:17:57,530 --> 00:18:01,493
Elliot Lear, principal
engineer at Cisco Systems.

374
00:18:02,480 --> 00:18:05,720
- Thanks Susan, that was
really really informative.

375
00:18:05,720 --> 00:18:08,170
My name is Elliot Lear,
as Susan mentioned,

376
00:18:08,170 --> 00:18:09,970
and I work at Cisco Systems on

377
00:18:09,970 --> 00:18:13,820
IoT security, onboarding and trust.

378
00:18:13,820 --> 00:18:18,090
And now I'm gonna talk
about three of the standards

379
00:18:18,090 --> 00:18:21,740
that have been developed
over the last few years.

380
00:18:21,740 --> 00:18:24,600
In fact they're just finishing up.

381
00:18:24,600 --> 00:18:28,570
So what you're seeing is
a sneak peak as it were,

382
00:18:28,570 --> 00:18:31,840
as the technology begins to diffuse.

383
00:18:31,840 --> 00:18:35,480
So the first technology that
I wanna mention is something

384
00:18:35,480 --> 00:18:38,080
called a Fido Device Onboard Technology.

385
00:18:38,080 --> 00:18:42,330
It's so new that they just approved it

386
00:18:42,330 --> 00:18:44,253
in the last few weeks.

387
00:18:45,510 --> 00:18:50,510
And this technology primarily
covers application onboarding,

388
00:18:52,310 --> 00:18:54,250
as opposed to network-layer onboarding.

389
00:18:54,250 --> 00:18:58,453
And we'll just talk about it
briefly to give you an example.

390
00:18:59,330 --> 00:19:02,970
The other technology that we're gonna talk

391
00:19:02,970 --> 00:19:06,880
about is a cloud-based network application

392
00:19:06,880 --> 00:19:09,030
and an application layer onboarding,

393
00:19:09,030 --> 00:19:13,580
something called bootstrapping
remote key infrastructure.

394
00:19:13,580 --> 00:19:15,439
And since that's such a mouthful

395
00:19:16,450 --> 00:19:19,300
everybody just calls it BRSKI.

396
00:19:19,300 --> 00:19:22,300
But we're gonna start off with the

397
00:19:23,560 --> 00:19:25,716
onboarding technology at
the bottom which is the

398
00:19:25,717 --> 00:19:30,470
Wi-Fi Alliance's Device
Provisioning Protocol or DPP,

399
00:19:30,470 --> 00:19:34,270
which is also known as Wi-Fi easy connect

400
00:19:34,270 --> 00:19:39,043
and it's an optional
component of Wi-Fi six.

401
00:19:40,260 --> 00:19:42,960
And you can see based on
some of the information

402
00:19:42,960 --> 00:19:46,400
that Susan presented earlier

403
00:19:46,400 --> 00:19:49,770
where these different
technologies fit, right.

404
00:19:49,770 --> 00:19:51,810
You have the trusted onboarding

405
00:19:51,810 --> 00:19:55,230
a trusted application layer
onboarding for two of them.

406
00:19:55,230 --> 00:19:57,820
A trusted network
onboarding for two of them.

407
00:19:57,820 --> 00:20:01,250
And I won't be talking very
much about for instance,

408
00:20:01,250 --> 00:20:03,410
device attestation, even though that's

409
00:20:03,410 --> 00:20:05,530
a very interesting area.

410
00:20:05,530 --> 00:20:08,879
So let's get started with DPP.

411
00:20:08,880 --> 00:20:12,530
We're gonna get right into
it with some diagrams.

412
00:20:12,530 --> 00:20:15,360
So the way that DPP
works or was envisioned

413
00:20:15,360 --> 00:20:18,189
to work initially is
that you have a cellphone

414
00:20:18,190 --> 00:20:21,950
and that cellphone scans
something like a QR code,

415
00:20:21,950 --> 00:20:25,160
that QR code contains a
unique piece of information

416
00:20:25,160 --> 00:20:27,450
that only the device
on the left would know,

417
00:20:27,450 --> 00:20:30,380
that printer that you're going to onboard.

418
00:20:30,380 --> 00:20:33,130
And the cellphone would
communicate directly

419
00:20:33,130 --> 00:20:36,130
with that printer to prove to the printer

420
00:20:36,130 --> 00:20:39,453
that it has this one piece of information.

421
00:20:40,350 --> 00:20:43,040
And then once that's done,

422
00:20:43,040 --> 00:20:46,210
a configuration phase
occurs and during that

423
00:20:46,210 --> 00:20:49,870
configuration phase the
network credentials are passed

424
00:20:49,870 --> 00:20:53,209
from the cellphone to the printer.

425
00:20:53,210 --> 00:20:58,210
Now this technology was originally

426
00:20:58,320 --> 00:21:00,070
designed for the consumer.

427
00:21:00,070 --> 00:21:03,480
It has recently been
updated for enterprises,

428
00:21:03,480 --> 00:21:05,720
where rather than passing,

429
00:21:05,720 --> 00:21:10,720
say a WPA three or SAE passphrase,

430
00:21:11,020 --> 00:21:14,379
what can be passed during
the configuration phase

431
00:21:14,380 --> 00:21:17,410
would be a certificate
that could then be used

432
00:21:17,410 --> 00:21:22,280
with say EIP or EIP radius authentication.

433
00:21:22,280 --> 00:21:25,440
And once the configuration
phase concludes,

434
00:21:25,440 --> 00:21:27,750
what then happens is the device just joins

435
00:21:27,750 --> 00:21:29,930
the network as it would,

436
00:21:29,930 --> 00:21:33,310
using whatever information
was passed during that phase.

437
00:21:33,310 --> 00:21:35,610
So what's in that funky QR code.

438
00:21:35,610 --> 00:21:39,832
What is this secret
sauce of DPP as it were.

439
00:21:41,190 --> 00:21:43,650
This is what you would see in a QR code

440
00:21:43,650 --> 00:21:45,770
and it contains some optional information

441
00:21:45,770 --> 00:21:48,940
like a Mac address, a serial number,

442
00:21:48,940 --> 00:21:52,343
but mostly what you see
there is a public key.

443
00:21:54,370 --> 00:21:58,239
What happens is that the device here,

444
00:21:58,240 --> 00:22:02,030
your phone, proves to
the device on the left,

445
00:22:02,030 --> 00:22:05,840
the onboarding device,
the thing if you will,

446
00:22:05,840 --> 00:22:09,300
that it has the public key by
encrypting some information

447
00:22:09,300 --> 00:22:10,960
in the public key or essentially doing

448
00:22:10,960 --> 00:22:15,150
a Diffie-Hellman exchange, a CDH exchange.

449
00:22:15,150 --> 00:22:18,030
And then the device then proves back

450
00:22:18,030 --> 00:22:19,713
that it has the private key.

451
00:22:20,990 --> 00:22:25,200
Now those of you who are
paying very close attention

452
00:22:25,200 --> 00:22:28,440
will note that anybody
who has that QR code

453
00:22:28,440 --> 00:22:30,980
can onboard this device.

454
00:22:30,980 --> 00:22:34,280
Now one of the nice
things about DPP is that

455
00:22:34,280 --> 00:22:36,899
it's pretty darn simple in this regard,

456
00:22:36,900 --> 00:22:39,270
in terms that this is the
only thing you need to

457
00:22:39,270 --> 00:22:40,423
onboard the device.

458
00:22:41,690 --> 00:22:44,120
As originally envisioned though,

459
00:22:44,120 --> 00:22:46,689
you had to have the cellphone
or something like that,

460
00:22:46,690 --> 00:22:50,990
but we can get a lot
more involved with DPP.

461
00:22:50,990 --> 00:22:54,670
And instead of say, having
the device directly talk

462
00:22:54,670 --> 00:22:56,560
to the cellphone, maybe
it's talking to the

463
00:22:56,560 --> 00:23:01,340
routing infrastructure
which is off on the right,

464
00:23:01,340 --> 00:23:04,449
and you can look at that
Wi-Fi router as maybe

465
00:23:04,450 --> 00:23:08,120
one router talking to, or
maybe it's a bunch of routers

466
00:23:08,120 --> 00:23:12,639
in your enterprise that are
controlled by that system above.

467
00:23:12,640 --> 00:23:14,230
And you could imagine the phone

468
00:23:14,230 --> 00:23:16,280
that's taking in that QR code,

469
00:23:16,280 --> 00:23:18,290
talking to that system above and saying,

470
00:23:18,290 --> 00:23:23,290
providing that and thus the
exchange takes place through

471
00:23:23,460 --> 00:23:25,300
backend communications to the router

472
00:23:25,300 --> 00:23:27,963
to allow the printer to onboard.

473
00:23:29,570 --> 00:23:32,310
And so the nice thing
about DPP is that it's

474
00:23:32,310 --> 00:23:34,909
rather minimalist and you
can build out additional

475
00:23:34,910 --> 00:23:37,040
capability on top of it,

476
00:23:37,040 --> 00:23:40,590
which makes it unique amongst
onboarding technologies,

477
00:23:40,590 --> 00:23:42,510
in that it is minimalist.

478
00:23:42,510 --> 00:23:46,370
The other ones are fairly
complex in my opinion.

479
00:23:46,370 --> 00:23:49,560
So let's in fact get to what the

480
00:23:49,560 --> 00:23:53,690
advantages and disadvantages are of DPP.

481
00:23:53,690 --> 00:23:58,690
So the first advantage is that
it is one step provisioning

482
00:24:00,630 --> 00:24:05,050
as it's currently defined
and as people assume

483
00:24:05,050 --> 00:24:08,310
there would be this thing
that you scan the QR code.

484
00:24:08,310 --> 00:24:12,860
It can work with or without
internet connectivity.

485
00:24:12,860 --> 00:24:14,240
And you know in the home,

486
00:24:14,240 --> 00:24:17,200
maybe you can assume that
internet connectivity is there

487
00:24:17,200 --> 00:24:19,240
all the time but you know,

488
00:24:19,240 --> 00:24:22,080
if you happen to be in
a military installation,

489
00:24:22,080 --> 00:24:24,419
may be a little less so.

490
00:24:24,420 --> 00:24:26,650
So you need a little flexibility and

491
00:24:26,650 --> 00:24:28,713
DPP provides that flexibility.

492
00:24:29,870 --> 00:24:33,250
Ownership transfers, such
as there is ownership

493
00:24:33,250 --> 00:24:35,310
in the context of DPP,

494
00:24:35,310 --> 00:24:36,879
is merely a matter of resetting

495
00:24:36,880 --> 00:24:39,960
the device and then using
that same code again.

496
00:24:39,960 --> 00:24:41,470
And I keep saying QR code

497
00:24:41,470 --> 00:24:44,570
but all you saw there
was a public key, right?

498
00:24:44,570 --> 00:24:46,470
Well you can communicate that public key

499
00:24:46,470 --> 00:24:48,300
out of band through
whatever other means to it.

500
00:24:48,300 --> 00:24:51,629
It doesn't just have to
go through a QR code.

501
00:24:51,630 --> 00:24:54,260
And the other advantage
of DPP is that it doesn't

502
00:24:54,260 --> 00:24:56,620
require that a PKI be present

503
00:24:56,620 --> 00:24:58,793
through the manufacturing process.

504
00:24:59,780 --> 00:25:02,120
Now people differ in terms of opinion

505
00:25:02,120 --> 00:25:04,550
as to whether that's a big deal.

506
00:25:04,550 --> 00:25:08,572
But if you think it is a big
deal and some manufacturers do,

507
00:25:09,460 --> 00:25:11,670
this is the one onboarding mechanism

508
00:25:11,670 --> 00:25:13,660
that doesn't require the PKI.

509
00:25:13,660 --> 00:25:15,900
On the other hand there
are some disadvantages

510
00:25:15,900 --> 00:25:17,450
and those disadvantages include,

511
00:25:17,450 --> 00:25:19,150
there are some chip set limitations.

512
00:25:19,150 --> 00:25:21,680
If you actually want to use
the phone those are being

513
00:25:21,680 --> 00:25:24,653
overcome based on new
generation's of chips.

514
00:25:25,490 --> 00:25:27,390
As currently envisioned it was really a

515
00:25:27,390 --> 00:25:29,620
one-step onboarding process not a

516
00:25:29,620 --> 00:25:31,370
zero step onboarding process.

517
00:25:31,370 --> 00:25:35,543
And this is a bit of a trick
for certain environments,

518
00:25:36,420 --> 00:25:38,100
where they really don't have the people

519
00:25:38,100 --> 00:25:40,459
who can do the onboarding
on site for instance,

520
00:25:40,460 --> 00:25:44,070
so they have to do
something a little different

521
00:25:44,070 --> 00:25:46,760
or enhance the DPP flow.

522
00:25:46,760 --> 00:25:49,560
There's no native
anti-counterfeiting capabilities

523
00:25:49,560 --> 00:25:52,520
and this is primarily developed

524
00:25:52,520 --> 00:25:54,093
through wireless technologies.

525
00:25:55,510 --> 00:25:59,500
Let's move to our next
technology, which is BRSKI.

526
00:25:59,500 --> 00:26:02,970
Now BRSKI is based on
something called a voucher.

527
00:26:02,970 --> 00:26:07,470
And what happens is that
the manufacturer is going to

528
00:26:07,470 --> 00:26:09,620
essentially generate this voucher

529
00:26:09,620 --> 00:26:11,739
and send it off to the device,

530
00:26:11,740 --> 00:26:14,280
basically with a signature saying

531
00:26:14,280 --> 00:26:15,520
here's some information that

532
00:26:15,520 --> 00:26:18,350
you should know about this deployment.

533
00:26:18,350 --> 00:26:22,531
And that might include a
trust anchor for instance,

534
00:26:22,531 --> 00:26:27,531
that the device can use to
trust the local deployment.

535
00:26:28,160 --> 00:26:32,040
But how does does this information
get from the manufacturer

536
00:26:32,040 --> 00:26:33,370
to the local deployment,

537
00:26:33,370 --> 00:26:36,129
and that's what BRSKI is all about.

538
00:26:36,130 --> 00:26:40,010
So it starts with the device
sending a voucher request

539
00:26:40,010 --> 00:26:44,340
into the local environment
and then that information

540
00:26:44,340 --> 00:26:46,000
gets forwarded to your registrar,

541
00:26:46,000 --> 00:26:48,280
this might be your AAA server.

542
00:26:48,280 --> 00:26:53,280
It goes up to the internet and
along the way this guy here

543
00:26:53,700 --> 00:26:56,530
has noted that everything looks good.

544
00:26:56,530 --> 00:26:59,320
This guy here has received,

545
00:26:59,320 --> 00:27:01,939
as part of this exchange,

546
00:27:01,940 --> 00:27:03,640
a trust anchor that it puts in the

547
00:27:03,640 --> 00:27:05,320
voucher request and then signs.

548
00:27:05,320 --> 00:27:09,100
All that goes up to the
manufacturer using the internet

549
00:27:09,100 --> 00:27:11,389
and the voucher comes back

550
00:27:11,390 --> 00:27:13,490
and gets delivered into the device.

551
00:27:13,490 --> 00:27:16,930
And now based on this
trusted introduction,

552
00:27:16,930 --> 00:27:20,490
you can use other protocols
like enrollment over

553
00:27:20,490 --> 00:27:25,490
secure transport to configure
a normal device certificate

554
00:27:25,660 --> 00:27:28,260
for the local environment
and then use normal

555
00:27:28,260 --> 00:27:33,260
AAA functions like ETLs
for the device to onboard.

556
00:27:33,510 --> 00:27:36,680
So the benefit is that this can indeed be

557
00:27:36,680 --> 00:27:39,330
zero step provisioning at least in the

558
00:27:39,330 --> 00:27:41,783
first instance of onboarding.

559
00:27:43,270 --> 00:27:46,889
It has some basic
anti-counterfeiting mechanisms

560
00:27:46,890 --> 00:27:50,200
that manufacturers can
employ and customers can take

561
00:27:50,200 --> 00:27:52,790
advantage of to know that
they're getting genuine equipment

562
00:27:52,790 --> 00:27:54,822
because it's all certificate based.

563
00:27:55,810 --> 00:28:00,043
It leverages much of the existing
enterprise infrastructure.

564
00:28:01,087 --> 00:28:04,070
Many of the commercial AAA
servers already support EST

565
00:28:05,000 --> 00:28:07,173
and BRSKI is merely an extension to EST.

566
00:28:08,030 --> 00:28:12,200
Some disadvantages are
that it requires an online

567
00:28:12,200 --> 00:28:16,210
manufacturer service and it
requires internet accessibility

568
00:28:16,210 --> 00:28:20,640
and ownership transferred is
required which complicates

569
00:28:20,640 --> 00:28:23,630
matters in a long supply chain.

570
00:28:23,630 --> 00:28:27,080
And it requires a certificate
infrastructure inside the

571
00:28:27,080 --> 00:28:30,100
manufacturer and it does indeed
need a little bit more work

572
00:28:30,100 --> 00:28:32,852
to support wireless in terms of scale.

573
00:28:34,760 --> 00:28:38,930
Now let's talk about FIDO's
device onboarding technology.

574
00:28:38,930 --> 00:28:42,730
Now this was based initially
on a contribution from

575
00:28:42,730 --> 00:28:47,730
Intel which was known as
STO and now this is now FDO

576
00:28:47,950 --> 00:28:50,330
and where it says review draft online,

577
00:28:50,330 --> 00:28:55,330
actually that's now an
approved FIDO standard.

578
00:28:55,730 --> 00:28:58,700
And one of the key goals of the

579
00:28:58,700 --> 00:29:02,453
FIDO specification is ownership transfer.

580
00:29:03,650 --> 00:29:08,650
And in such a way that you
can have a late binding

581
00:29:09,050 --> 00:29:11,700
and that late binding means many things.

582
00:29:11,700 --> 00:29:16,650
One of the things it means
is that you can simplify

583
00:29:16,650 --> 00:29:21,210
device configuration for
various locales or customers

584
00:29:22,160 --> 00:29:25,700
by having some amount of information

585
00:29:25,700 --> 00:29:29,090
arrived at the local deployment.

586
00:29:29,090 --> 00:29:31,300
And this might include firmware updates.

587
00:29:31,300 --> 00:29:33,879
It might include configuration updates.

588
00:29:33,880 --> 00:29:35,780
It's a very flexible architecture

589
00:29:35,780 --> 00:29:40,520
but it is primarily focused
on application onboarding.

590
00:29:40,520 --> 00:29:45,520
And so what you see in this
slide is with and without

591
00:29:45,530 --> 00:29:50,530
and what you end up
having happen without FDO,

592
00:29:50,740 --> 00:29:52,750
is for the manufacturer ,

593
00:29:52,750 --> 00:29:55,660
it can mean having to
have custom products,

594
00:29:55,660 --> 00:29:58,410
custom SKU's for different deployments.

595
00:29:58,410 --> 00:30:02,520
And we see this for instance
in smart cities all the time

596
00:30:02,520 --> 00:30:07,400
where you have very custom and bespoke

597
00:30:07,400 --> 00:30:10,860
per customer configurations
and the theory being,

598
00:30:10,860 --> 00:30:12,490
well maybe there aren't so many customers,

599
00:30:12,490 --> 00:30:14,750
but as it turns out
there's a lot of cities

600
00:30:14,750 --> 00:30:18,160
and this gets to be more
complex as manufacturers grow.

601
00:30:18,160 --> 00:30:22,440
And so the technology
is intended to simplify

602
00:30:22,440 --> 00:30:24,543
configurations with that late binding.

603
00:30:26,090 --> 00:30:28,510
So FDO can be zero step.

604
00:30:28,510 --> 00:30:31,860
It has the same sort of
anti-counterfeiting measures

605
00:30:31,860 --> 00:30:36,240
because it is also
certificate-based as say BRSKI had

606
00:30:36,240 --> 00:30:38,690
and it leverages much of an existing

607
00:30:38,690 --> 00:30:41,830
enterprise infrastructure
and that late binding

608
00:30:41,830 --> 00:30:45,540
is really really something
that is quite nice.

609
00:30:45,540 --> 00:30:48,750
From a disadvantage
standpoint it does require

610
00:30:48,750 --> 00:30:51,660
a manufactured reference
rendezvous service.

611
00:30:51,660 --> 00:30:56,370
This is akin to the manufacturer
service that BRSKI offered

612
00:30:56,370 --> 00:30:59,489
and that requires a little
bit of an additional

613
00:30:59,490 --> 00:31:02,290
infrastructure investment
somewhere along the way,

614
00:31:02,290 --> 00:31:05,070
either in the cloud or
at a local deployment.

615
00:31:05,070 --> 00:31:10,070
Ownership transfer is required
but on the other hand,

616
00:31:10,860 --> 00:31:13,429
FDO has gone to great lengths to allow for

617
00:31:13,430 --> 00:31:16,530
supply chain management
to not be quite so painful

618
00:31:16,530 --> 00:31:18,990
as say, BRSKI is today.

619
00:31:18,990 --> 00:31:21,840
And this is a major disadvantage in a

620
00:31:21,840 --> 00:31:23,300
network onboarding talk,

621
00:31:23,300 --> 00:31:25,060
FDO doesn't really support network and

622
00:31:25,060 --> 00:31:26,990
onboarding is primarily focused on

623
00:31:26,990 --> 00:31:29,180
application layer onboarding.

624
00:31:29,180 --> 00:31:32,900
So these are the three
technologies that we've introduced.

625
00:31:32,900 --> 00:31:33,890
It's a sneak peak.

626
00:31:33,890 --> 00:31:35,630
They're all really really new,

627
00:31:35,630 --> 00:31:39,700
even DPP which had its first
instance a couple years ago,

628
00:31:39,700 --> 00:31:43,700
was just refreshed in December.

629
00:31:43,700 --> 00:31:47,360
Each of these have their
strengths and weaknesses

630
00:31:47,360 --> 00:31:49,280
and we will see other technologies.

631
00:31:49,280 --> 00:31:51,830
For instance, we know
that there's more coming

632
00:31:51,830 --> 00:31:54,000
from the connected home IP Alliance,

633
00:31:54,000 --> 00:31:56,010
and there are lots of other
technologies out there

634
00:31:56,010 --> 00:31:58,530
that will be developed
because this is a very

635
00:31:58,530 --> 00:32:01,160
nationed area of exploration,

636
00:32:01,160 --> 00:32:04,090
but now is the time for you to explore.

637
00:32:04,090 --> 00:32:07,230
So here are some next steps
that you might want to take.

638
00:32:07,230 --> 00:32:10,840
And the first is to have some
notion as to how many devices

639
00:32:10,840 --> 00:32:12,862
are already connected on your network.

640
00:32:13,720 --> 00:32:16,500
These might be through 802.11 networks.

641
00:32:16,500 --> 00:32:18,780
They might be Bluetooth devices.

642
00:32:18,780 --> 00:32:21,070
It might be what we might call the sort of

643
00:32:21,070 --> 00:32:25,120
dark IT infrastructure that
you might not be able to know,

644
00:32:25,120 --> 00:32:27,649
so you might even have
difficulty counting these things.

645
00:32:27,650 --> 00:32:30,600
There's new technologies
like thread for instance,

646
00:32:30,600 --> 00:32:33,219
that are coming down the
road that use gateways.

647
00:32:33,220 --> 00:32:35,150
Do you have visibility?

648
00:32:35,150 --> 00:32:38,740
So one challenge that you
should be taking on is

649
00:32:38,740 --> 00:32:41,750
making sure you're
establishing that visibility.

650
00:32:41,750 --> 00:32:44,570
The second thing is to make
sure you have a nice strong

651
00:32:44,570 --> 00:32:48,820
infrastructure in place
once a device is onboarded.

652
00:32:48,820 --> 00:32:50,310
After all if you don't have that

653
00:32:50,310 --> 00:32:52,860
authentication infrastructure
in place what was the point

654
00:32:52,860 --> 00:32:55,062
of doing all this secure
network onboarding?

655
00:32:56,550 --> 00:32:59,760
Finally, we recommend that
now is a good time to talk

656
00:32:59,760 --> 00:33:01,940
to vendors about their plans

657
00:33:03,230 --> 00:33:05,560
because there are a lot of IoT vendors,

658
00:33:05,560 --> 00:33:08,629
you're gonna wanna have
a lot of conversations.

659
00:33:08,630 --> 00:33:12,223
Right now the standards
as you heard are somewhat,

660
00:33:13,926 --> 00:33:15,350
let's apply the old joke,

661
00:33:15,350 --> 00:33:16,990
the nice thing about
standards is that there

662
00:33:16,990 --> 00:33:18,450
are so many of them.

663
00:33:18,450 --> 00:33:21,610
It's a good time to talk to
key vendors and ask what their

664
00:33:21,610 --> 00:33:24,659
plans are and particularly
talk about your needs

665
00:33:24,660 --> 00:33:29,080
as to whether you need zero
touch, one touch technology,

666
00:33:29,080 --> 00:33:32,689
whether the internet can
be there for you or not.

667
00:33:32,690 --> 00:33:35,210
And with that, I'd like
to thank you very much.

668
00:33:35,210 --> 00:33:37,380
And I look forward to seeing you in person

669
00:33:37,380 --> 00:33:40,120
at a future RSA conference.

670
00:33:40,120 --> 00:33:43,516
And thanks to my
co-speaker, Susan Symington.

