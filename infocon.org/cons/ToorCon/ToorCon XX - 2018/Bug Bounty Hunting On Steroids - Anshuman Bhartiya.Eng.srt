1
00:00:03,199 --> 00:00:07,490
please introduce on Shimon bar idea

2
00:00:05,720 --> 00:00:09,710
who's gonna give a great talk on bug

3
00:00:07,490 --> 00:00:20,270
bounty hunting on steroids everyone give

4
00:00:09,710 --> 00:00:23,680
a great mid-afternoon welcome we'll just

5
00:00:20,270 --> 00:00:26,920
all look at him awkwardly for a minute

6
00:00:23,680 --> 00:00:26,920
no pressure

7
00:00:27,610 --> 00:00:35,480
so hello and apologies for all the

8
00:00:31,160 --> 00:00:38,600
technical difficulties here so the talk

9
00:00:35,480 --> 00:00:41,419
is obviously on bounties and how to hunt

10
00:00:38,600 --> 00:00:43,489
such a way that you can you don't have

11
00:00:41,420 --> 00:00:44,239
to look for them manually and it just

12
00:00:43,489 --> 00:00:47,120
works for you

13
00:00:44,239 --> 00:00:49,339
so the first layer is basically just a

14
00:00:47,120 --> 00:00:52,180
team it's it's not me working on this

15
00:00:49,340 --> 00:00:54,440
thing we are a team of three

16
00:00:52,180 --> 00:00:56,510
unfortunately I am I'm from San Diego so

17
00:00:54,440 --> 00:00:58,280
I was able to come but there's Glen from

18
00:00:56,510 --> 00:01:01,879
Australia and Mohammed from Egypt and

19
00:00:58,280 --> 00:01:04,189
we've all worked on this together so

20
00:01:01,880 --> 00:01:06,200
today we're going to talk about the

21
00:01:04,188 --> 00:01:08,389
problem right for the problem that we're

22
00:01:06,200 --> 00:01:10,670
trying to solve the situation that we

23
00:01:08,390 --> 00:01:12,909
are in right now I briefly introduce

24
00:01:10,670 --> 00:01:16,340
what is the system that we've built and

25
00:01:12,909 --> 00:01:17,869
I'll show you in action and then just

26
00:01:16,340 --> 00:01:21,350
conclude the presentation with some

27
00:01:17,869 --> 00:01:24,560
thoughts so let's look at some of the

28
00:01:21,350 --> 00:01:26,509
problems the first problem is you know I

29
00:01:24,560 --> 00:01:29,000
mean all of us do hacking but we also

30
00:01:26,510 --> 00:01:30,920
know that not all the hacking is fun

31
00:01:29,000 --> 00:01:34,820
there are so many things that you have

32
00:01:30,920 --> 00:01:38,479
to go and do for each you know job like

33
00:01:34,820 --> 00:01:40,309
one after the other and if there's some

34
00:01:38,479 --> 00:01:43,039
kind of automation that would help all

35
00:01:40,310 --> 00:01:46,070
of that processes it would really be

36
00:01:43,040 --> 00:01:48,130
helpful so that's something that you

37
00:01:46,070 --> 00:01:50,720
know we should be able to automate and I

38
00:01:48,130 --> 00:01:53,060
mean there are people who are doing it

39
00:01:50,720 --> 00:01:55,670
right now so that's number one problem

40
00:01:53,060 --> 00:01:58,400
the second problem is we often see that

41
00:01:55,670 --> 00:02:00,049
if if there are no tools out there to do

42
00:01:58,400 --> 00:02:02,509
certain thing that you want to do we

43
00:02:00,049 --> 00:02:04,040
start building it from the scratch I

44
00:02:02,509 --> 00:02:07,340
just want to point out that this is

45
00:02:04,040 --> 00:02:09,349
really a lot of waste and we should use

46
00:02:07,340 --> 00:02:10,450
whatever is out there and just keep on

47
00:02:09,348 --> 00:02:13,269
improving on it

48
00:02:10,449 --> 00:02:15,220
the third is most of the security tools

49
00:02:13,270 --> 00:02:17,140
that we see these days they are not

50
00:02:15,220 --> 00:02:20,290
really scalable in the sense that you

51
00:02:17,140 --> 00:02:23,140
know you can run a tool to do something

52
00:02:20,290 --> 00:02:25,150
at like one time and then if you want to

53
00:02:23,140 --> 00:02:27,609
scale it across multiple domains or

54
00:02:25,150 --> 00:02:30,490
whatever it usually breaks so

55
00:02:27,610 --> 00:02:32,709
scalability is something that security

56
00:02:30,490 --> 00:02:34,930
folks mean that friends solve but it's

57
00:02:32,709 --> 00:02:37,390
not really there and then the fourth

58
00:02:34,930 --> 00:02:42,520
problem is you know with the advent of

59
00:02:37,390 --> 00:02:43,958
all the cloud servers like AWS gzp the

60
00:02:42,520 --> 00:02:46,959
IP addresses don't remain the same

61
00:02:43,959 --> 00:02:48,970
anymore the domains don't remain the

62
00:02:46,959 --> 00:02:52,600
same anymore so how do we keep a track

63
00:02:48,970 --> 00:02:53,920
of all these changing attack surfaces so

64
00:02:52,600 --> 00:02:57,480
these are some of the problems now let's

65
00:02:53,920 --> 00:03:01,780
look into some of them in more details I

66
00:02:57,480 --> 00:03:03,420
feel this xkcd represents the state of

67
00:03:01,780 --> 00:03:05,440
open source tools pretty nicely

68
00:03:03,420 --> 00:03:08,049
basically you know there are 14 tools

69
00:03:05,440 --> 00:03:11,980
out there and then there's somebody who

70
00:03:08,050 --> 00:03:13,450
wants to basically improve on it or add

71
00:03:11,980 --> 00:03:16,359
a new feature and then they end up

72
00:03:13,450 --> 00:03:18,310
writing the 15 - right so this really is

73
00:03:16,360 --> 00:03:19,750
the state of open source tools right now

74
00:03:18,310 --> 00:03:22,450
I mean there's so many tools trying to

75
00:03:19,750 --> 00:03:23,739
solve the same problem and you know it's

76
00:03:22,450 --> 00:03:27,578
not really solving the problem by just

77
00:03:23,739 --> 00:03:29,170
adding more to it and then you know like

78
00:03:27,579 --> 00:03:31,570
with so many open source tools how do

79
00:03:29,170 --> 00:03:35,230
you actually know which ones you want to

80
00:03:31,570 --> 00:03:38,170
use you know the output of one tool

81
00:03:35,230 --> 00:03:38,590
might work fits a different tool or it

82
00:03:38,170 --> 00:03:39,958
might not

83
00:03:38,590 --> 00:03:42,370
so how do you compare these different

84
00:03:39,959 --> 00:03:45,790
open source tools and how there there is

85
00:03:42,370 --> 00:03:49,570
no standard and that just makes it so

86
00:03:45,790 --> 00:03:50,769
much more difficult the third one I have

87
00:03:49,570 --> 00:03:53,019
already mentioned is the poor

88
00:03:50,769 --> 00:03:54,880
interoperability between the tools so

89
00:03:53,019 --> 00:03:57,310
you know suppose if you want to use a

90
00:03:54,880 --> 00:04:00,310
tool and the tool only produces output

91
00:03:57,310 --> 00:04:02,290
in let's say JSON or CSV and the thing

92
00:04:00,310 --> 00:04:04,299
that you have that uses a different

93
00:04:02,290 --> 00:04:06,820
format altogether again there's no

94
00:04:04,299 --> 00:04:09,760
standard so you know most of the times

95
00:04:06,820 --> 00:04:12,040
it's the tools just do one job and then

96
00:04:09,760 --> 00:04:13,959
that's pretty much it

97
00:04:12,040 --> 00:04:19,620
if you want to combine those tools into

98
00:04:13,959 --> 00:04:23,010
multiple flows that mostly won't work

99
00:04:19,620 --> 00:04:24,360
and then the last problem that I've

100
00:04:23,010 --> 00:04:25,950
already discussed is the scaling and

101
00:04:24,360 --> 00:04:29,450
reliability right most of the tools are

102
00:04:25,950 --> 00:04:32,610
not scalable you have to do some kind of

103
00:04:29,450 --> 00:04:35,460
LD threading you have to use some kind

104
00:04:32,610 --> 00:04:38,940
of orchestration system so the state of

105
00:04:35,460 --> 00:04:41,370
affairs is unfortunately really sad now

106
00:04:38,940 --> 00:04:43,650
let's look into some of the things that

107
00:04:41,370 --> 00:04:45,810
we know right now and that can be

108
00:04:43,650 --> 00:04:48,870
improved so the first one is you know

109
00:04:45,810 --> 00:04:50,310
when we hunt for vulnerability is an

110
00:04:48,870 --> 00:04:54,450
open source software or just like any

111
00:04:50,310 --> 00:04:56,370
software we keep everybody saying that

112
00:04:54,450 --> 00:04:58,139
reconnaissance is really important right

113
00:04:56,370 --> 00:05:00,600
like if you don't know what you have

114
00:04:58,139 --> 00:05:03,090
you can't possibly hack it right so

115
00:05:00,600 --> 00:05:05,760
identifying assets is one of the most

116
00:05:03,090 --> 00:05:07,560
important things in basically like any

117
00:05:05,760 --> 00:05:09,030
sort of hacking whether it is you know

118
00:05:07,560 --> 00:05:12,650
hardware hacking or like physical

119
00:05:09,030 --> 00:05:17,039
security even reconnaissance is the key

120
00:05:12,650 --> 00:05:19,620
this is just some data from alas I think

121
00:05:17,040 --> 00:05:22,260
this is from last year but basically you

122
00:05:19,620 --> 00:05:24,539
can see almost 50 percent of the total

123
00:05:22,260 --> 00:05:27,360
number of beaches were because of you

124
00:05:24,539 --> 00:05:30,870
know assets that people didn't know they

125
00:05:27,360 --> 00:05:32,300
had so the a9 is basically a standard it

126
00:05:30,870 --> 00:05:34,080
says using components with known

127
00:05:32,300 --> 00:05:35,789
vulnerabilities if you don't know what

128
00:05:34,080 --> 00:05:37,500
asset what you have how are you going to

129
00:05:35,789 --> 00:05:41,039
put it against the known vulnerabilities

130
00:05:37,500 --> 00:05:43,979
so just an idea of the how much is out

131
00:05:41,039 --> 00:05:45,450
there which can be automated and just

132
00:05:43,979 --> 00:05:50,639
the low-hanging fruits can just be gone

133
00:05:45,450 --> 00:05:53,400
away and then you know like I mentioned

134
00:05:50,639 --> 00:05:57,470
with everybody moving towards a cloud

135
00:05:53,400 --> 00:06:00,060
like AWS GCP how do you keep and ongoing

136
00:05:57,470 --> 00:06:02,340
real-time in inventory of all the assets

137
00:06:00,060 --> 00:06:05,370
that you have how do you keep track of

138
00:06:02,340 --> 00:06:07,560
all the IP changes the domain names

139
00:06:05,370 --> 00:06:11,690
subdomains how do you do all that it's a

140
00:06:07,560 --> 00:06:14,940
very difficult problem to solve and then

141
00:06:11,690 --> 00:06:17,789
with you know the advent of deaf check

142
00:06:14,940 --> 00:06:20,219
ups all the companies are moving more

143
00:06:17,789 --> 00:06:23,940
towards agile they push code on a daily

144
00:06:20,220 --> 00:06:26,280
basis multiple frequencies there are all

145
00:06:23,940 --> 00:06:28,590
sorts of regressions there's new code

146
00:06:26,280 --> 00:06:30,419
that is constantly being pushed up how

147
00:06:28,590 --> 00:06:32,159
do you keep up to on that right the

148
00:06:30,419 --> 00:06:33,539
attack surface is constantly changing

149
00:06:32,159 --> 00:06:35,409
and evolving

150
00:06:33,539 --> 00:06:37,270
so in order to solve some of these

151
00:06:35,409 --> 00:06:41,289
problems we built something called

152
00:06:37,270 --> 00:06:43,628
County machine and we considered it you

153
00:06:41,289 --> 00:06:45,219
know all the things that we've discussed

154
00:06:43,629 --> 00:06:46,090
so far and I'll actually walk you

155
00:06:45,219 --> 00:06:49,180
through it some of it

156
00:06:46,090 --> 00:06:51,039
so before going into you know showing it

157
00:06:49,180 --> 00:06:52,960
in action I just wanted to walk you

158
00:06:51,039 --> 00:06:56,050
through the architecture of how we think

159
00:06:52,960 --> 00:06:57,909
we've solved this problem so the first

160
00:06:56,050 --> 00:06:59,830
thing it starts with what we want to

161
00:06:57,909 --> 00:07:03,849
hack right whether it is an IP address

162
00:06:59,830 --> 00:07:07,060
or sub domain a domain and organization

163
00:07:03,849 --> 00:07:10,479
so you start with that and that value

164
00:07:07,060 --> 00:07:13,210
gets fed into an input of Oracle which

165
00:07:10,479 --> 00:07:15,159
then drops that value into a queue so

166
00:07:13,210 --> 00:07:18,878
basically the idea is a very earth

167
00:07:15,159 --> 00:07:22,180
synchronous micro micro service based

168
00:07:18,879 --> 00:07:24,400
architecture where it's horizontally and

169
00:07:22,180 --> 00:07:27,400
vertically scalable and you can do that

170
00:07:24,400 --> 00:07:31,120
against not just one domain but multiple

171
00:07:27,400 --> 00:07:34,599
domains or a second so the first step is

172
00:07:31,120 --> 00:07:36,909
this and then after that the the queue

173
00:07:34,599 --> 00:07:39,219
that gets that value it passes on to a

174
00:07:36,909 --> 00:07:41,889
different worker which is where we'll be

175
00:07:39,219 --> 00:07:43,240
running all the tools we'll be doing all

176
00:07:41,889 --> 00:07:45,490
the scanning right so we called the

177
00:07:43,240 --> 00:07:47,830
workflow worker right and then after

178
00:07:45,490 --> 00:07:49,539
these workflows finished they drop the

179
00:07:47,830 --> 00:07:51,729
results into a different cue so you can

180
00:07:49,539 --> 00:07:53,878
see it's all based on queues it's all

181
00:07:51,729 --> 00:07:56,289
horizontally and vertically scalable and

182
00:07:53,879 --> 00:07:59,080
then suppose if you want to combine

183
00:07:56,289 --> 00:08:00,520
multiple workflows right suppose if you

184
00:07:59,080 --> 00:08:02,080
want to scan all the ports and then

185
00:08:00,520 --> 00:08:04,628
after you scan all the ports you want to

186
00:08:02,080 --> 00:08:07,479
find out what are the different CMS

187
00:08:04,629 --> 00:08:09,520
systems that the server is running so

188
00:08:07,479 --> 00:08:11,649
you want to be able to pass the data or

189
00:08:09,520 --> 00:08:14,560
information from one workflow to the

190
00:08:11,649 --> 00:08:16,899
other workflow so the idea is that again

191
00:08:14,560 --> 00:08:19,930
you can just link multiple workflows

192
00:08:16,899 --> 00:08:23,349
together and then once the workflows

193
00:08:19,930 --> 00:08:25,810
finish there's a worker that kind of

194
00:08:23,349 --> 00:08:28,240
compares the results from the previous

195
00:08:25,810 --> 00:08:31,210
run to the new run right so the one of

196
00:08:28,240 --> 00:08:33,339
the biggest problems in bug bounties is

197
00:08:31,210 --> 00:08:35,769
that if you keep running your tools

198
00:08:33,339 --> 00:08:37,839
again again on something you'll keep

199
00:08:35,769 --> 00:08:39,669
seeing the same information right but

200
00:08:37,839 --> 00:08:42,099
ideally you want to know if something

201
00:08:39,669 --> 00:08:45,220
has changed and if something has changed

202
00:08:42,099 --> 00:08:46,990
what is new in that new attack surface

203
00:08:45,220 --> 00:08:50,350
right so we have a con

204
00:08:46,990 --> 00:08:53,140
of different worker they're just kind of

205
00:08:50,350 --> 00:08:54,700
complainers all the results that have

206
00:08:53,140 --> 00:08:57,130
been stored in the database with the new

207
00:08:54,700 --> 00:08:59,020
run that we just ran and then it just

208
00:08:57,130 --> 00:09:01,959
sort of outputs all that information

209
00:08:59,020 --> 00:09:04,990
into a different cue and then from that

210
00:09:01,959 --> 00:09:07,660
different cue we have a notification

211
00:09:04,990 --> 00:09:10,750
worker which just takes all that data

212
00:09:07,660 --> 00:09:12,819
and spits it out into whatever you know

213
00:09:10,750 --> 00:09:15,040
like output your own half so we use

214
00:09:12,820 --> 00:09:16,660
slack for right now so we use slack to

215
00:09:15,040 --> 00:09:18,550
start the workflow and slack receive all

216
00:09:16,660 --> 00:09:20,439
the output but this can easily be

217
00:09:18,550 --> 00:09:23,020
changed into like let's say CLI of

218
00:09:20,440 --> 00:09:26,830
website you know so just the concept of

219
00:09:23,020 --> 00:09:28,959
it's very extensible it's all which we

220
00:09:26,830 --> 00:09:30,880
separated from e each other so if you

221
00:09:28,959 --> 00:09:34,810
want to add a worker that just notifies

222
00:09:30,880 --> 00:09:36,550
you can do that easily as well so in the

223
00:09:34,810 --> 00:09:38,729
end the entire architecture looks

224
00:09:36,550 --> 00:09:42,310
something like this right you start off

225
00:09:38,730 --> 00:09:44,740
sending your attacker whatever target

226
00:09:42,310 --> 00:09:47,140
you have into a queue which is then

227
00:09:44,740 --> 00:09:50,399
picked up by the workflow worker we run

228
00:09:47,140 --> 00:09:52,660
a bunch of workflows which are basically

229
00:09:50,399 --> 00:09:54,430
open source tools or you know if you

230
00:09:52,660 --> 00:09:56,589
have your own tool you can do that and

231
00:09:54,430 --> 00:09:59,020
then after that the results get spin

232
00:09:56,589 --> 00:10:01,360
into a diff worker queue which kind of

233
00:09:59,020 --> 00:10:03,579
differentiates the results from the old

234
00:10:01,360 --> 00:10:06,010
run to the new run that spits into the

235
00:10:03,579 --> 00:10:08,739
notification worker which finally shows

236
00:10:06,010 --> 00:10:10,089
you all the output and all this you know

237
00:10:08,740 --> 00:10:12,520
so all these components that you're

238
00:10:10,089 --> 00:10:16,829
seeing they are they're all running as

239
00:10:12,520 --> 00:10:19,089
containers on a kubernetes cluster on

240
00:10:16,829 --> 00:10:21,010
GCP or any other cloud where you want

241
00:10:19,089 --> 00:10:23,770
but the idea is that you can have

242
00:10:21,010 --> 00:10:25,810
multiple of these workers as well so you

243
00:10:23,770 --> 00:10:28,930
can see how horizontally and vertically

244
00:10:25,810 --> 00:10:32,890
scalable it this really is the whole

245
00:10:28,930 --> 00:10:35,529
architecture so in terms of the

246
00:10:32,890 --> 00:10:37,750
workflows you know so some of the

247
00:10:35,529 --> 00:10:39,520
workflows that we have built so far are

248
00:10:37,750 --> 00:10:42,940
you know like to find all the hidden

249
00:10:39,520 --> 00:10:45,910
files on a particular domain to find all

250
00:10:42,940 --> 00:10:47,950
the cross-domain dot xml files which

251
00:10:45,910 --> 00:10:49,990
have started star entry which means you

252
00:10:47,950 --> 00:10:52,510
know you can basically host a file on

253
00:10:49,990 --> 00:10:54,430
your website and then Excel data out of

254
00:10:52,510 --> 00:10:58,360
it and then there are things like doing

255
00:10:54,430 --> 00:11:00,400
a port scans of all 65535 ports there's

256
00:10:58,360 --> 00:11:03,910
a tools or than their work

257
00:11:00,400 --> 00:11:06,130
that find openness three pockets there's

258
00:11:03,910 --> 00:11:08,770
a workflow that looks for all the open

259
00:11:06,130 --> 00:11:11,350
you know like if it's a Jenkins system

260
00:11:08,770 --> 00:11:13,480
if it is of WordPress if it is WordPress

261
00:11:11,350 --> 00:11:16,450
is it running any plugins that are

262
00:11:13,480 --> 00:11:18,160
vulnerable to known volume buddies or

263
00:11:16,450 --> 00:11:19,960
not so you can see these are all

264
00:11:18,160 --> 00:11:22,240
different workflows we have and they all

265
00:11:19,960 --> 00:11:23,830
sort of separated as well so if you can

266
00:11:22,240 --> 00:11:29,170
think of a new workflow you can easily

267
00:11:23,830 --> 00:11:32,800
go and build it and let's see so there's

268
00:11:29,170 --> 00:11:34,479
a recorded demo because I only had 20

269
00:11:32,800 --> 00:11:39,219
minutes but before we actually see it in

270
00:11:34,480 --> 00:11:41,680
action we set up a target we you know we

271
00:11:39,220 --> 00:11:43,690
made a company we call it a links and

272
00:11:41,680 --> 00:11:45,280
mineral corporation and they're just two

273
00:11:43,690 --> 00:11:48,430
things that we know about this company

274
00:11:45,280 --> 00:11:50,079
there's a github organizations

275
00:11:48,430 --> 00:11:51,880
repository for this it's called a links

276
00:11:50,080 --> 00:11:53,590
and Corp you can go check it out right

277
00:11:51,880 --> 00:11:57,160
now it should be online and there's the

278
00:11:53,590 --> 00:12:00,160
main domain links and calm right now if

279
00:11:57,160 --> 00:12:02,469
you as a hacker if if you want to do

280
00:12:00,160 --> 00:12:04,209
your reconnaissance on this asset or you

281
00:12:02,470 --> 00:12:05,530
know if you just want to hack this how

282
00:12:04,210 --> 00:12:08,590
would you do it you would go through

283
00:12:05,530 --> 00:12:10,810
your you know like written notes and you

284
00:12:08,590 --> 00:12:13,620
try to follow it step-by-step right

285
00:12:10,810 --> 00:12:23,520
instead of doing that the way we do it

286
00:12:13,620 --> 00:12:23,520
and there's a recorded demo

287
00:12:28,760 --> 00:12:32,019
that's just mean

288
00:12:41,520 --> 00:12:46,890
so I've actually recorded it and

289
00:12:43,940 --> 00:12:49,850
uploaded on YouTube if the internet

290
00:12:46,890 --> 00:12:49,850
connection on this laptop

291
00:13:06,350 --> 00:13:12,110
so you can see that the way we start

292
00:13:09,830 --> 00:13:14,420
this whole reconnaissance process or the

293
00:13:12,110 --> 00:13:16,730
tool is that we have different slash

294
00:13:14,420 --> 00:13:18,469
commands in slack so the first thing we

295
00:13:16,730 --> 00:13:21,590
are going to do is we're gonna find all

296
00:13:18,470 --> 00:13:25,160
the secrets in the organization's to get

297
00:13:21,590 --> 00:13:28,850
up repositories probably can't see the

298
00:13:25,160 --> 00:13:30,469
command but so I just added a you know /

299
00:13:28,850 --> 00:13:32,600
command to find all the secrets in that

300
00:13:30,470 --> 00:13:34,520
repository and then the next thing I'm

301
00:13:32,600 --> 00:13:36,590
doing is is actually providing the main

302
00:13:34,520 --> 00:13:38,900
domain to the tool and you can see that

303
00:13:36,590 --> 00:13:41,840
it actually spits out all the secrets

304
00:13:38,900 --> 00:13:45,230
which are storing that data repository

305
00:13:41,840 --> 00:13:48,170
it also spits out all the subdomains of

306
00:13:45,230 --> 00:13:51,620
the main domain so you can see that is

307
00:13:48,170 --> 00:13:53,800
it yeah it's I guess it's a bandwidth or

308
00:13:51,620 --> 00:13:53,800
no

309
00:14:04,300 --> 00:14:09,550
much better and then after it spits out

310
00:14:07,030 --> 00:14:11,800
all the subdomains it actually finds out

311
00:14:09,550 --> 00:14:13,750
all your penis buckets for that sub

312
00:14:11,800 --> 00:14:15,189
domain and then it also shows that that

313
00:14:13,750 --> 00:14:17,410
it's each bucket is listable

314
00:14:15,190 --> 00:14:18,540
it's writable right so all the

315
00:14:17,410 --> 00:14:22,270
information is right here

316
00:14:18,540 --> 00:14:24,250
moving on you can see that it identified

317
00:14:22,270 --> 00:14:27,520
two subdomains that can be taken over

318
00:14:24,250 --> 00:14:30,250
which means that if you if you can just

319
00:14:27,520 --> 00:14:33,220
go and register a subdomain and have the

320
00:14:30,250 --> 00:14:35,170
cname a point to it in the right way you

321
00:14:33,220 --> 00:14:38,980
can actually take over their subdomain

322
00:14:35,170 --> 00:14:41,199
one of the subdomains moving on it shows

323
00:14:38,980 --> 00:14:43,330
all the port scans of all the subdomains

324
00:14:41,200 --> 00:14:45,670
so remember we started with the main

325
00:14:43,330 --> 00:14:47,710
domain it it actually brute-force all

326
00:14:45,670 --> 00:14:50,260
the subdomains and then it actually port

327
00:14:47,710 --> 00:14:52,120
scan all of them and when I say port

328
00:14:50,260 --> 00:14:54,400
scan I'm talking about all six five five

329
00:14:52,120 --> 00:14:56,200
three five bucks it's not just two or

330
00:14:54,400 --> 00:14:58,990
three ports or you know in the first

331
00:14:56,200 --> 00:15:02,440
1,000 ports it's basically the entire

332
00:14:58,990 --> 00:15:04,360
attack surface and then it shows the

333
00:15:02,440 --> 00:15:06,790
status of the port so that they're open

334
00:15:04,360 --> 00:15:09,430
or closed after that it sort of

335
00:15:06,790 --> 00:15:11,469
identified any course vulnerabilities

336
00:15:09,430 --> 00:15:13,719
for those who don't know course is the

337
00:15:11,470 --> 00:15:16,750
cross origin origin resource sharing and

338
00:15:13,720 --> 00:15:19,120
if they're not set correctly in the

339
00:15:16,750 --> 00:15:20,950
headers it might result in different

340
00:15:19,120 --> 00:15:23,290
kind of vulnerabilities being exploited

341
00:15:20,950 --> 00:15:25,660
and then you can see that it identified

342
00:15:23,290 --> 00:15:27,910
a cross domain dot XML file which had a

343
00:15:25,660 --> 00:15:29,319
star entry which basically means you

344
00:15:27,910 --> 00:15:32,020
know if you have control you can take

345
00:15:29,320 --> 00:15:34,480
all it identified all those hidden

346
00:15:32,020 --> 00:15:36,250
endpoints you see there you know robots

347
00:15:34,480 --> 00:15:38,620
or THC and if there was a secret

348
00:15:36,250 --> 00:15:41,590
endpoint it actually identified that and

349
00:15:38,620 --> 00:15:43,810
then this is the best part so you know

350
00:15:41,590 --> 00:15:46,630
it's actually ports can it identify it

351
00:15:43,810 --> 00:15:51,430
was running port 8080 and then actually

352
00:15:46,630 --> 00:15:53,770
scanned for what kind of so the phase

353
00:15:51,430 --> 00:15:56,680
and it find out that it is running

354
00:15:53,770 --> 00:15:58,540
Jenkins and it ran and exploit against

355
00:15:56,680 --> 00:16:00,609
that and then this is the output from

356
00:15:58,540 --> 00:16:03,640
that exploit saying that this

357
00:16:00,610 --> 00:16:05,830
installation might be vulnerable right

358
00:16:03,640 --> 00:16:07,449
so you can see how it started from main

359
00:16:05,830 --> 00:16:09,820
domains going all the way towards the

360
00:16:07,450 --> 00:16:13,180
end and these are all the issues about

361
00:16:09,820 --> 00:16:14,840
the known CVEs against a wordpress sub

362
00:16:13,180 --> 00:16:22,849
domain that it found

363
00:16:14,840 --> 00:16:25,340
moving on these are all the JavaScript

364
00:16:22,850 --> 00:16:28,250
endpoints so these days you'll often

365
00:16:25,340 --> 00:16:31,490
find that in the HTML source code of

366
00:16:28,250 --> 00:16:34,250
different websites websites basically

367
00:16:31,490 --> 00:16:37,030
have a way in which they kind of import

368
00:16:34,250 --> 00:16:39,820
JavaScript from a third party and

369
00:16:37,030 --> 00:16:42,560
oftentimes we see that you know they

370
00:16:39,820 --> 00:16:44,360
they'll have subdomains in that HTML

371
00:16:42,560 --> 00:16:46,459
source code which are no longer valid

372
00:16:44,360 --> 00:16:47,900
so if you can take all that subdomain

373
00:16:46,460 --> 00:16:51,140
you can basically solve your own

374
00:16:47,900 --> 00:16:53,120
JavaScript file to the website so we

375
00:16:51,140 --> 00:16:55,520
have a tool that actually scans for all

376
00:16:53,120 --> 00:16:57,020
the known JavaScript endpoints and tries

377
00:16:55,520 --> 00:17:00,199
to see if there's anything there which

378
00:16:57,020 --> 00:17:02,329
is not already registered it tries to

379
00:17:00,200 --> 00:17:04,220
see if there any secrets in the source

380
00:17:02,330 --> 00:17:06,770
code so you can see that it found a

381
00:17:04,220 --> 00:17:08,540
JavaScript end point and then it scanned

382
00:17:06,770 --> 00:17:10,339
those end points or further end points

383
00:17:08,540 --> 00:17:14,569
so these are all the JavaScript files

384
00:17:10,339 --> 00:17:15,649
you can see again in JavaScript

385
00:17:14,569 --> 00:17:18,230
endpoints and these are from different

386
00:17:15,650 --> 00:17:20,420
subdomains you can see the last one is

387
00:17:18,230 --> 00:17:22,099
from a three-door Ellingson car comm the

388
00:17:20,420 --> 00:17:24,350
one before there is some help so it's

389
00:17:22,099 --> 00:17:28,119
actually scanning it's like spidering

390
00:17:24,349 --> 00:17:28,119
out and doing it for all the subdomains

391
00:17:29,590 --> 00:17:39,350
and then moving on you can see that it

392
00:17:36,950 --> 00:17:42,530
actually found that there was a my

393
00:17:39,350 --> 00:17:45,679
sequel server running on that IP address

394
00:17:42,530 --> 00:17:47,720
on the fold of my sequel which is three

395
00:17:45,680 --> 00:17:50,180
three zero six and it was able to

396
00:17:47,720 --> 00:17:52,880
brute-force it it found out that the

397
00:17:50,180 --> 00:17:55,070
user was rude and the password was a

398
00:17:52,880 --> 00:17:57,020
password so again you can do some basic

399
00:17:55,070 --> 00:17:59,149
boot forcing attacks as well by just

400
00:17:57,020 --> 00:18:03,129
going through the attack surface and

401
00:17:59,150 --> 00:18:05,710
knowing what to stand when to scan right

402
00:18:03,130 --> 00:18:10,670
then I think that's pretty much it so

403
00:18:05,710 --> 00:18:12,710
yes so I've basically you know showed

404
00:18:10,670 --> 00:18:18,880
you in action all the workflows that I

405
00:18:12,710 --> 00:18:18,880
discussed and if we look closely

406
00:18:31,190 --> 00:18:38,260
I don't know why it's so slow but

407
00:18:41,330 --> 00:18:45,679
I'll just I'll just walk through this

408
00:18:42,890 --> 00:18:48,020
like this so we basically started here

409
00:18:45,680 --> 00:18:50,930
right we just knew our domain and the

410
00:18:48,020 --> 00:18:53,210
github repository of that org and we

411
00:18:50,930 --> 00:18:56,060
were able to find all these things just

412
00:18:53,210 --> 00:18:58,310
from that simple reconnaissance and you

413
00:18:56,060 --> 00:19:00,770
know the approach of spidering towards

414
00:18:58,310 --> 00:19:03,919
all the attacks surfaces that we've

415
00:19:00,770 --> 00:19:06,470
identified so yeah this is too small but

416
00:19:03,920 --> 00:19:08,380
again we found out three buckets

417
00:19:06,470 --> 00:19:10,280
subdomains that can be taken over

418
00:19:08,380 --> 00:19:13,760
secrets committed in their github

419
00:19:10,280 --> 00:19:17,420
repositories javascript endpoints secret

420
00:19:13,760 --> 00:19:19,760
files hidden right all of that so in

421
00:19:17,420 --> 00:19:22,310
conclusion you know just have a few

422
00:19:19,760 --> 00:19:24,170
things to point out that I mean

423
00:19:22,310 --> 00:19:27,010
obviously automating everything is not

424
00:19:24,170 --> 00:19:29,510
practically possible but there still

425
00:19:27,010 --> 00:19:31,220
there's still so much in terms of

426
00:19:29,510 --> 00:19:33,530
low-hanging fruits in terms of some

427
00:19:31,220 --> 00:19:35,810
basic scanning that we don't do a good

428
00:19:33,530 --> 00:19:37,940
job of and we should do it so you know

429
00:19:35,810 --> 00:19:40,790
there's a lot we can automate and we

430
00:19:37,940 --> 00:19:43,100
should and then this actually helps so

431
00:19:40,790 --> 00:19:45,470
you can see all the information that

432
00:19:43,100 --> 00:19:48,020
I've received it actually helps me to

433
00:19:45,470 --> 00:19:50,900
God and do more further attacks and

434
00:19:48,020 --> 00:19:53,210
exploits and all the work the scanning

435
00:19:50,900 --> 00:19:55,340
work is already there for me I just have

436
00:19:53,210 --> 00:19:58,190
to go and use that data and then

437
00:19:55,340 --> 00:20:00,439
exploring new technology we in the

438
00:19:58,190 --> 00:20:03,500
security industry we are very skeptical

439
00:20:00,440 --> 00:20:06,470
and often intimidated by using you know

440
00:20:03,500 --> 00:20:08,420
like containers or orchestration systems

441
00:20:06,470 --> 00:20:11,450
but we've actually used all the latest

442
00:20:08,420 --> 00:20:13,760
technologies and then build something

443
00:20:11,450 --> 00:20:15,920
for a security problem so that's really

444
00:20:13,760 --> 00:20:18,140
important to know keep tooling simple

445
00:20:15,920 --> 00:20:20,260
and consumable oftentimes we see a tool

446
00:20:18,140 --> 00:20:22,850
that tries to do all things at once

447
00:20:20,260 --> 00:20:24,800
we've seen that is not really scalable

448
00:20:22,850 --> 00:20:26,600
if you want to combine multiple tools

449
00:20:24,800 --> 00:20:28,550
it's really difficult so just keep it

450
00:20:26,600 --> 00:20:30,230
simple and just improve on existing

451
00:20:28,550 --> 00:20:34,090
tools are out there don't try to build

452
00:20:30,230 --> 00:20:37,750
something from the scratch so claraz8

453
00:20:34,090 --> 00:20:37,750
any questions

454
00:20:41,470 --> 00:20:44,470
out

455
00:20:46,640 --> 00:20:51,840
no so there was a there was one more

456
00:20:50,250 --> 00:20:54,150
site that I wanted to show about it I

457
00:20:51,840 --> 00:20:56,730
can't here but basically all the

458
00:20:54,150 --> 00:20:58,410
workflows that I showed all the

459
00:20:56,730 --> 00:21:00,570
different tools all the tools already

460
00:20:58,410 --> 00:21:03,930
open source but Vanara opens hold the

461
00:21:00,570 --> 00:21:05,370
entire architecture but I've shared the

462
00:21:03,930 --> 00:21:07,050
high level overview and it's really

463
00:21:05,370 --> 00:21:09,090
simple to just go and build something

464
00:21:07,050 --> 00:21:11,010
like this out there but the short answer

465
00:21:09,090 --> 00:21:16,100
to that is no we're not gonna open

466
00:21:11,010 --> 00:21:19,370
source it any other questions all right

467
00:21:16,100 --> 00:21:19,370
thank you folks

