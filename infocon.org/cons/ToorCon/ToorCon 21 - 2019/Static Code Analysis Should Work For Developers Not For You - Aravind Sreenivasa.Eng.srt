1
00:00:01,399 --> 00:00:05,160
how's everybody doing having a good

2
00:00:05,160 --> 00:00:06,410
afternoon

3
00:00:06,410 --> 00:00:10,019
was was lunch good you made it back you

4
00:00:10,019 --> 00:00:12,870
may just in time so the regular

5
00:00:12,870 --> 00:00:14,460
announcements of course jeopardy tonight

6
00:00:14,460 --> 00:00:17,340
Wi-Fi is probably still up at least it

7
00:00:17,340 --> 00:00:19,980
was up half an hour ago and they're

8
00:00:19,980 --> 00:00:21,750
still lock-picking going on outside in

9
00:00:21,750 --> 00:00:23,460
the tents if you want to have a

10
00:00:23,460 --> 00:00:24,119
conversation

11
00:00:24,119 --> 00:00:26,099
feel free to scoot out into the garden

12
00:00:26,099 --> 00:00:30,539
and remain in here because this is a

13
00:00:30,539 --> 00:00:32,189
special occasion

14
00:00:32,189 --> 00:00:34,620
Arvind is here for his first talk at a

15
00:00:34,620 --> 00:00:41,190
conference for all of you so he does

16
00:00:41,190 --> 00:00:42,989
apps application security at DocuSign

17
00:00:42,989 --> 00:00:45,329
right he started out in development but

18
00:00:45,329 --> 00:00:46,800
moved into the security space after

19
00:00:46,800 --> 00:00:49,710
getting a graduate degree so he's got a

20
00:00:49,710 --> 00:00:51,989
motivation for some developer friendly

21
00:00:51,989 --> 00:00:55,079
things in security and basically taking

22
00:00:55,079 --> 00:00:56,280
ways of taking security processes

23
00:00:56,280 --> 00:00:58,020
integrating them into the development

24
00:00:58,020 --> 00:00:59,940
processes and so right in line with that

25
00:00:59,940 --> 00:01:02,070
he's gonna present for you static code

26
00:01:02,070 --> 00:01:04,199
analysis should be for developers not

27
00:01:04,199 --> 00:01:04,709
for you

28
00:01:04,709 --> 00:01:09,869
thanks Arvind thank everyone for coming

29
00:01:09,869 --> 00:01:12,240
and it's right after lunch so I'm pretty

30
00:01:12,240 --> 00:01:15,200
sure everybody is super attentive and

31
00:01:15,200 --> 00:01:17,220
thank you to Khan for giving me this

32
00:01:17,220 --> 00:01:19,770
opportunity this is my first talk in a

33
00:01:19,770 --> 00:01:22,530
conference so yeah I'm excited

34
00:01:22,530 --> 00:01:25,320
so today I'll be presenting on something

35
00:01:25,320 --> 00:01:27,119
I'm really passionate about and I've

36
00:01:27,119 --> 00:01:28,590
been working on this for past year

37
00:01:28,590 --> 00:01:31,740
making security developer friendly as a

38
00:01:31,740 --> 00:01:34,619
whole team but in this one mainly making

39
00:01:34,619 --> 00:01:37,320
static code analysis work for developers

40
00:01:37,320 --> 00:01:39,210
if you don't know what's a static code

41
00:01:39,210 --> 00:01:41,579
analysis it's pretty simple you have

42
00:01:41,579 --> 00:01:44,670
your code in version control and you use

43
00:01:44,670 --> 00:01:46,590
a bunch of tool to scan it to find some

44
00:01:46,590 --> 00:01:48,060
obvious bugs that somebody might

45
00:01:48,060 --> 00:01:51,240
developer might have missed before we go

46
00:01:51,240 --> 00:01:53,820
forward a simple warning that all the

47
00:01:53,820 --> 00:01:56,310
opinions expressed and the tools I call

48
00:01:56,310 --> 00:01:59,640
out are my opinions and not of DocuSign

49
00:01:59,640 --> 00:02:04,740
in any way about me I go by RV so it's

50
00:02:04,740 --> 00:02:08,340
easy to call and also my currently I'm a

51
00:02:08,340 --> 00:02:10,949
knapsack engineer DocuSign be knapsack

52
00:02:10,949 --> 00:02:12,740
engineer at Nike

53
00:02:12,740 --> 00:02:14,990
and I was before that I was a software

54
00:02:14,990 --> 00:02:17,150
engineer at VMware I have a master's

55
00:02:17,150 --> 00:02:18,950
degree from computer science in computer

56
00:02:18,950 --> 00:02:22,580
science at from ASU a special thanks to

57
00:02:22,580 --> 00:02:25,130
John Heisman and Skyler Berg who also

58
00:02:25,130 --> 00:02:27,110
worked on this project and their

59
00:02:27,110 --> 00:02:29,420
guidance and work has been incredible

60
00:02:29,420 --> 00:02:31,130
without that this could not have been

61
00:02:31,130 --> 00:02:35,120
done so today's agenda is pretty simple

62
00:02:35,120 --> 00:02:37,970
I'll go through what's what I think is

63
00:02:37,970 --> 00:02:39,800
the problem with current static code

64
00:02:39,800 --> 00:02:42,050
analysis tools and what was the solution

65
00:02:42,050 --> 00:02:45,200
what did we build and what did I learn

66
00:02:45,200 --> 00:02:46,790
in the process and some of the features

67
00:02:46,790 --> 00:02:49,190
that I think are important and finally

68
00:02:49,190 --> 00:02:51,620
I'll end with some unsolicited advice as

69
00:02:51,620 --> 00:02:54,320
usual which is more of a call to action

70
00:02:54,320 --> 00:02:59,630
but anyway so problem statement I'm a

71
00:02:59,630 --> 00:03:02,990
I'm a fan of metaphors so I it's easy to

72
00:03:02,990 --> 00:03:05,240
grasp the problem if through a metaphor

73
00:03:05,240 --> 00:03:09,980
so let's do one that's one and if you're

74
00:03:09,980 --> 00:03:11,750
not familiar with it which I assume most

75
00:03:11,750 --> 00:03:14,540
of the room is this is from Hindu

76
00:03:14,540 --> 00:03:17,090
mythology Ramayana and the situation is

77
00:03:17,090 --> 00:03:19,670
one of the protagonists is hurt in an

78
00:03:19,670 --> 00:03:21,890
epic battle and the healer on the ground

79
00:03:21,890 --> 00:03:25,040
says hey we can fix him but we need a

80
00:03:25,040 --> 00:03:26,570
specific medicinal plant called

81
00:03:26,570 --> 00:03:29,240
sanjivini which only grows in himalayas

82
00:03:29,240 --> 00:03:32,240
and since it's far they asked the monkey

83
00:03:32,240 --> 00:03:34,850
god Hanuman to bring it Hanuman goes to

84
00:03:34,850 --> 00:03:37,370
Himalayas finds the mountain but cannot

85
00:03:37,370 --> 00:03:40,520
identify the specific medicinal plan so

86
00:03:40,520 --> 00:03:42,590
instead of bringing that he brings whole

87
00:03:42,590 --> 00:03:45,560
mountain and keeps it on the ground so

88
00:03:45,560 --> 00:03:48,080
that the healers can find it and heal

89
00:03:48,080 --> 00:03:50,390
the protagonist this is kind of what

90
00:03:50,390 --> 00:03:53,300
this static analysis tool does we need

91
00:03:53,300 --> 00:03:56,210
specific fix problems to fix our code

92
00:03:56,210 --> 00:03:58,400
base instead of that it brings whole

93
00:03:58,400 --> 00:04:01,610
mountain and just keeps it before us the

94
00:04:01,610 --> 00:04:04,280
expectation it has is someone in some of

95
00:04:04,280 --> 00:04:06,020
the security person knows what to focus

96
00:04:06,020 --> 00:04:08,360
on and what to ignore but more often

97
00:04:08,360 --> 00:04:10,340
than not it's gonna be a developer who's

98
00:04:10,340 --> 00:04:11,990
gonna be looking at it and they have

99
00:04:11,990 --> 00:04:13,970
their own mountain to climb and if you

100
00:04:13,970 --> 00:04:15,770
keep one more it's just an obstacle

101
00:04:15,770 --> 00:04:18,470
they're gonna avoid to put into words

102
00:04:18,470 --> 00:04:21,228
the problem problems are their

103
00:04:21,228 --> 00:04:24,650
monolithic tools trying to scan every

104
00:04:24,650 --> 00:04:26,150
language and every framework that's

105
00:04:26,150 --> 00:04:26,630
available

106
00:04:26,630 --> 00:04:28,730
so it's it's gonna be generic it's a

107
00:04:28,730 --> 00:04:30,980
huge task to be honest and also it's

108
00:04:30,980 --> 00:04:32,660
built for a security professional in the

109
00:04:32,660 --> 00:04:34,820
sense they have so much information and

110
00:04:34,820 --> 00:04:37,340
you know helpful security professional

111
00:04:37,340 --> 00:04:40,190
with their CV cbss all things are great

112
00:04:40,190 --> 00:04:43,220
but a developer needs to know how to fix

113
00:04:43,220 --> 00:04:45,740
it and why not fixing it is a problem

114
00:04:45,740 --> 00:04:47,570
that's all they need now and since

115
00:04:47,570 --> 00:04:49,870
they're casting a wide net to catch

116
00:04:49,870 --> 00:04:52,880
everything possible in every place it's

117
00:04:52,880 --> 00:04:54,980
there are a lot of things that are not

118
00:04:54,980 --> 00:04:57,200
bug they're mostly you know false

119
00:04:57,200 --> 00:04:59,300
positives and if you keep getting in the

120
00:04:59,300 --> 00:05:01,790
habit of saying I'll ignore that it's a

121
00:05:01,790 --> 00:05:02,540
false positive

122
00:05:02,540 --> 00:05:05,030
they're gonna come 2-3 times later they

123
00:05:05,030 --> 00:05:07,490
start ignoring without asking you and

124
00:05:07,490 --> 00:05:10,580
it's it's great works great as a silo as

125
00:05:10,580 --> 00:05:12,500
its own animal you can scan renovate

126
00:05:12,500 --> 00:05:14,510
it's comfortable for you it's quick its

127
00:05:14,510 --> 00:05:17,540
it's works great for you but it's not

128
00:05:17,540 --> 00:05:19,580
integrated with the existing engineering

129
00:05:19,580 --> 00:05:22,340
you know systems some vendors are really

130
00:05:22,340 --> 00:05:24,380
trying to get there and they give option

131
00:05:24,380 --> 00:05:26,870
but that's not its primary purpose so

132
00:05:26,870 --> 00:05:29,030
it's it seems kind of janky if you try

133
00:05:29,030 --> 00:05:32,600
to do that to make my case I borrowed a

134
00:05:32,600 --> 00:05:34,700
slide from my friend my friend

135
00:05:34,700 --> 00:05:37,520
clean Gabler who recently presented in

136
00:05:37,520 --> 00:05:40,250
shell con about rolling your owns SAS

137
00:05:40,250 --> 00:05:42,260
tool and he makes an interesting case

138
00:05:42,260 --> 00:05:45,140
that when should you buy a SAS tool and

139
00:05:45,140 --> 00:05:48,530
his observations are let's say if you

140
00:05:48,530 --> 00:05:51,290
have modern frameworks or if you have if

141
00:05:51,290 --> 00:05:52,910
you want to ship it quickly through ci

142
00:05:52,910 --> 00:05:55,010
City platform or if you have invested

143
00:05:55,010 --> 00:05:57,170
time in building some safe libraries

144
00:05:57,170 --> 00:06:00,070
like we did which I highly recommend

145
00:06:00,070 --> 00:06:03,380
then it might not be for you buying one

146
00:06:03,380 --> 00:06:05,540
might not give the best results and also

147
00:06:05,540 --> 00:06:08,240
he makes an interesting case that even

148
00:06:08,240 --> 00:06:09,980
if you buy an off-the-shelf tool you

149
00:06:09,980 --> 00:06:12,470
might end up writing a lot of automation

150
00:06:12,470 --> 00:06:15,020
code to work with your system and make

151
00:06:15,020 --> 00:06:17,630
it you know it's in black box that you

152
00:06:17,630 --> 00:06:19,160
don't know what's happening inside you

153
00:06:19,160 --> 00:06:20,570
have to write something else to make it

154
00:06:20,570 --> 00:06:25,340
work for you so inevitably like it's not

155
00:06:25,340 --> 00:06:27,140
more of an option it's if you want to

156
00:06:27,140 --> 00:06:29,930
get some security a value of the fit we

157
00:06:29,930 --> 00:06:32,660
and you have your tend to write your own

158
00:06:32,660 --> 00:06:34,880
tool and that's what we did but we did

159
00:06:34,880 --> 00:06:36,890
not write another scanner and at the

160
00:06:36,890 --> 00:06:39,099
tool we wrote a platform

161
00:06:39,099 --> 00:06:41,379
and because there are already so many

162
00:06:41,379 --> 00:06:44,259
scanners and you know we have the code

163
00:06:44,259 --> 00:06:48,009
and also grep is amazing so we don't

164
00:06:48,009 --> 00:06:50,020
have to keep writing new tools again and

165
00:06:50,020 --> 00:06:52,569
again there's so many you know open

166
00:06:52,569 --> 00:06:55,419
source one we can use and so we can

167
00:06:55,419 --> 00:06:57,999
reuse the plug-in model so you can plug

168
00:06:57,999 --> 00:06:59,619
in any tool within two to three hours

169
00:06:59,619 --> 00:07:02,919
but little coding and it's built for

170
00:07:02,919 --> 00:07:05,439
developers whenever they need and what's

171
00:07:05,439 --> 00:07:07,599
the best effective method to give the

172
00:07:07,599 --> 00:07:09,879
feedback to them we use that we consult

173
00:07:09,879 --> 00:07:12,939
with them and it's not a one one-time

174
00:07:12,939 --> 00:07:15,550
process it's a evolving process where

175
00:07:15,550 --> 00:07:18,120
you keep making it better and better

176
00:07:18,120 --> 00:07:20,139
improving something if something is not

177
00:07:20,139 --> 00:07:21,099
working out for you

178
00:07:21,099 --> 00:07:23,139
so it's trained by our apps a team which

179
00:07:23,139 --> 00:07:26,379
I have to thank I'll go through the

180
00:07:26,379 --> 00:07:29,050
lifecycle of it I go from both developer

181
00:07:29,050 --> 00:07:31,449
and app site perspective it's important

182
00:07:31,449 --> 00:07:32,889
to think from developer perspective

183
00:07:32,889 --> 00:07:35,139
because if there's a less friction to

184
00:07:35,139 --> 00:07:37,689
use the tool or you once you want them

185
00:07:37,689 --> 00:07:39,550
to use something the more adaptability

186
00:07:39,550 --> 00:07:42,189
it has if you if you rule with the

187
00:07:42,189 --> 00:07:44,740
Honfest and saying no you got to use

188
00:07:44,740 --> 00:07:47,680
this they might but they try to ignore

189
00:07:47,680 --> 00:07:49,300
you because it's if it doesn't fit in

190
00:07:49,300 --> 00:07:52,689
your existing system so from a developer

191
00:07:52,689 --> 00:07:54,339
perspective everything starts at their

192
00:07:54,339 --> 00:07:56,229
source control and we start the process

193
00:07:56,229 --> 00:07:58,959
when a new PR is put up because that's

194
00:07:58,959 --> 00:08:00,759
the best place to do it I'll go into

195
00:08:00,759 --> 00:08:03,909
detail later but yeah once it starts I

196
00:08:03,909 --> 00:08:06,159
the request comes to see ICD pipeline

197
00:08:06,159 --> 00:08:09,789
and the C ICD pipeline works for us

198
00:08:09,789 --> 00:08:12,490
because the teams see ICD team is our

199
00:08:12,490 --> 00:08:15,550
best ally instead of you know going to

200
00:08:15,550 --> 00:08:17,680
every team and asking them to involve us

201
00:08:17,680 --> 00:08:19,779
or just adding it without telling anyone

202
00:08:19,779 --> 00:08:23,319
we we work with C ICD team to make it

203
00:08:23,319 --> 00:08:25,509
part of a pipeline so anyone gets a new

204
00:08:25,509 --> 00:08:29,259
pipeline our tool comes with with it so

205
00:08:29,259 --> 00:08:31,509
one C ICD sends a request are from a

206
00:08:31,509 --> 00:08:33,940
developer perspective our tool our

207
00:08:33,940 --> 00:08:36,578
platform scans the scans the code and

208
00:08:36,578 --> 00:08:38,828
sends back the relevant result and one

209
00:08:38,828 --> 00:08:41,559
more thing we do do it here is we work

210
00:08:41,559 --> 00:08:44,110
with the team to to understand what

211
00:08:44,110 --> 00:08:46,630
works best for them what how do they

212
00:08:46,630 --> 00:08:48,760
want to see this result not every team

213
00:08:48,760 --> 00:08:51,340
you know once it the same way it

214
00:08:51,340 --> 00:08:53,110
their system is different they have

215
00:08:53,110 --> 00:08:54,880
their own process so we work with them

216
00:08:54,880 --> 00:08:57,610
there as well we also create some

217
00:08:57,610 --> 00:08:59,020
security tickets too

218
00:08:59,020 --> 00:09:01,779
you know follow it up or just to have a

219
00:09:01,779 --> 00:09:04,210
trail for it but the whole system is

220
00:09:04,210 --> 00:09:06,190
supposed to be seamless so this these

221
00:09:06,190 --> 00:09:07,960
tickets are not for developers to look

222
00:09:07,960 --> 00:09:10,240
at and close and everything it's for us

223
00:09:10,240 --> 00:09:14,440
let's say if they fix the any problem we

224
00:09:14,440 --> 00:09:17,200
found in next command then this ticket

225
00:09:17,200 --> 00:09:19,660
is automatically closed if not tickets

226
00:09:19,660 --> 00:09:22,060
remains and one of our apps like

227
00:09:22,060 --> 00:09:24,730
engineers will go in and they open a bug

228
00:09:24,730 --> 00:09:28,360
so that they can come back and fix it so

229
00:09:28,360 --> 00:09:30,370
trying to do as much as booking

230
00:09:30,370 --> 00:09:32,830
bookkeeping for them and just helping

231
00:09:32,830 --> 00:09:34,960
them to fix the bug is one of the key

232
00:09:34,960 --> 00:09:37,000
for success and from our perspective

233
00:09:37,000 --> 00:09:39,820
when when we get up when we get the

234
00:09:39,820 --> 00:09:42,550
request from CIC the pipeline we do

235
00:09:42,550 --> 00:09:43,870
multiple things but one of the main

236
00:09:43,870 --> 00:09:46,990
things we do is cloning the flewning the

237
00:09:46,990 --> 00:09:49,480
code in our local storage and mounting

238
00:09:49,480 --> 00:09:53,170
it to our containers this is this kinda

239
00:09:53,170 --> 00:09:55,060
important and we scan this files that

240
00:09:55,060 --> 00:09:57,490
the PR is touching this is important

241
00:09:57,490 --> 00:10:01,120
because I have seen tools which work at

242
00:10:01,120 --> 00:10:03,640
the PR level when the PR is put up they

243
00:10:03,640 --> 00:10:06,160
again scan the whole you know whole

244
00:10:06,160 --> 00:10:08,170
application which i think is a

245
00:10:08,170 --> 00:10:10,000
squandered opportunity because you have

246
00:10:10,000 --> 00:10:12,370
you have developers at the right moment

247
00:10:12,370 --> 00:10:13,839
when they're fixed working on some

248
00:10:13,839 --> 00:10:16,120
particular file so use that opportunity

249
00:10:16,120 --> 00:10:18,520
to fix you know have them fix on that

250
00:10:18,520 --> 00:10:21,640
one and then we'll send it to our

251
00:10:21,640 --> 00:10:23,830
containers and for most of you it's

252
00:10:23,830 --> 00:10:26,920
pretty obvious why we why we would you

253
00:10:26,920 --> 00:10:28,960
know container raise all of our tools we

254
00:10:28,960 --> 00:10:31,300
use multiple scanning tools to scan our

255
00:10:31,300 --> 00:10:34,810
code and it's a hard process if we have

256
00:10:34,810 --> 00:10:37,600
to keep installing it in every box we're

257
00:10:37,600 --> 00:10:40,209
gonna put our platform in it's a it's a

258
00:10:40,209 --> 00:10:42,339
lot of work and also tools tend to

259
00:10:42,339 --> 00:10:44,140
behave differently based on what

260
00:10:44,140 --> 00:10:45,940
platform are you're running it on or

261
00:10:45,940 --> 00:10:48,820
what OS is that so continue rising it

262
00:10:48,820 --> 00:10:52,089
meters easy and also it's important that

263
00:10:52,089 --> 00:10:54,010
we're not gonna use all the scanning

264
00:10:54,010 --> 00:10:56,260
tools all the other tools we have on

265
00:10:56,260 --> 00:11:00,550
every PR because it's not required we

266
00:11:00,550 --> 00:11:03,459
were deciding which tools to use based

267
00:11:03,459 --> 00:11:05,260
on initially based on

268
00:11:05,260 --> 00:11:07,210
language okay we are scanning this

269
00:11:07,210 --> 00:11:08,980
language so we're gonna use these tools

270
00:11:08,980 --> 00:11:12,040
but we realized well some repositories

271
00:11:12,040 --> 00:11:13,540
even though they have the same language

272
00:11:13,540 --> 00:11:16,150
they have different environment in the

273
00:11:16,150 --> 00:11:17,860
sense they might have some safe

274
00:11:17,860 --> 00:11:20,590
libraries or they you know it's a

275
00:11:20,590 --> 00:11:22,750
internal one and we do not have to put

276
00:11:22,750 --> 00:11:24,790
some tools toolings in there so we added

277
00:11:24,790 --> 00:11:27,760
repository as one of the criteria then

278
00:11:27,760 --> 00:11:29,890
we realized even inside the repositories

279
00:11:29,890 --> 00:11:33,250
some folders and files might need some

280
00:11:33,250 --> 00:11:36,010
additional tooling or some exceptions so

281
00:11:36,010 --> 00:11:38,770
we added that like the changes small

282
00:11:38,770 --> 00:11:41,860
changes like that make can make your

283
00:11:41,860 --> 00:11:44,020
false-positive rate come lower and lower

284
00:11:44,020 --> 00:11:47,380
and also bring the experience better and

285
00:11:47,380 --> 00:11:50,410
better for for the developers safe if

286
00:11:50,410 --> 00:11:53,140
you keep saying how this tool will

287
00:11:53,140 --> 00:11:55,840
generate some you know some bugs for you

288
00:11:55,840 --> 00:11:57,670
but it doesn't apply to you just go

289
00:11:57,670 --> 00:12:00,580
ahead at some point it might so just

290
00:12:00,580 --> 00:12:03,310
making the system work for them is the

291
00:12:03,310 --> 00:12:07,000
best and once everything is done all the

292
00:12:07,000 --> 00:12:08,890
details are all the findings are sent

293
00:12:08,890 --> 00:12:11,110
back to our platform here we do multiple

294
00:12:11,110 --> 00:12:13,210
things one of the important things we do

295
00:12:13,210 --> 00:12:17,140
is filtering of it so initially when we

296
00:12:17,140 --> 00:12:20,230
started what what I did was like if you

297
00:12:20,230 --> 00:12:22,000
are touching a file and if you find any

298
00:12:22,000 --> 00:12:24,430
finding in that file we can assign or we

299
00:12:24,430 --> 00:12:26,650
gonna show it to you but if we quickly

300
00:12:26,650 --> 00:12:30,610
go to push back push back that hey I'm

301
00:12:30,610 --> 00:12:32,980
just changing some part of it code and

302
00:12:32,980 --> 00:12:35,530
other things I'm not even sure I what it

303
00:12:35,530 --> 00:12:37,750
is so I'm not responsible for fixing it

304
00:12:37,750 --> 00:12:41,530
and also it's not a good practice to you

305
00:12:41,530 --> 00:12:43,570
know bunch all the unrelated changes in

306
00:12:43,570 --> 00:12:46,540
one PR so that's a fair pushback and we

307
00:12:46,540 --> 00:12:49,300
agreed with that who smelted deltas not

308
00:12:49,300 --> 00:12:54,670
a good idea for in these situations and

309
00:12:54,670 --> 00:12:56,800
of course we write everything to date

310
00:12:56,800 --> 00:12:59,260
our database collect as much as data as

311
00:12:59,260 --> 00:13:02,290
possible why did it pose even if we

312
00:13:02,290 --> 00:13:04,720
currently don't have you know use cases

313
00:13:04,720 --> 00:13:06,370
for that at some point we will and

314
00:13:06,370 --> 00:13:09,820
having this data is what lets you decide

315
00:13:09,820 --> 00:13:12,010
which tools are useful which are not and

316
00:13:12,010 --> 00:13:15,580
to get some executive buy-in as well are

317
00:13:15,580 --> 00:13:17,230
going to detail on some of the features

318
00:13:17,230 --> 00:13:18,600
we have

319
00:13:18,600 --> 00:13:21,730
one of the important thing is giving

320
00:13:21,730 --> 00:13:24,040
feedback at the CI CD in the code review

321
00:13:24,040 --> 00:13:26,589
stage when they put up a PR the

322
00:13:26,589 --> 00:13:29,199
developers and engineers are open to you

323
00:13:29,199 --> 00:13:30,879
know reviews at that point they are

324
00:13:30,879 --> 00:13:32,769
looking for feedback they want to fix it

325
00:13:32,769 --> 00:13:34,750
at that time so it's better to give at

326
00:13:34,750 --> 00:13:38,230
that stage and also it's easier and much

327
00:13:38,230 --> 00:13:40,720
cheaper to fix at that stage if you run

328
00:13:40,720 --> 00:13:42,759
the tool whenever it's convenient for

329
00:13:42,759 --> 00:13:46,569
you and give them a large amount of

330
00:13:46,569 --> 00:13:49,240
findings to fix the fix-it it's hard for

331
00:13:49,240 --> 00:13:50,290
them because they're working on

332
00:13:50,290 --> 00:13:51,040
something else

333
00:13:51,040 --> 00:13:53,410
the timing not fit and touching some

334
00:13:53,410 --> 00:13:56,829
code is not ideal at that stage so when

335
00:13:56,829 --> 00:13:58,569
they are fixing it that's the best place

336
00:13:58,569 --> 00:14:00,730
to give it to them and we have three

337
00:14:00,730 --> 00:14:04,720
ways of alerting one blocking them let's

338
00:14:04,720 --> 00:14:06,790
say you find something in their PR and

339
00:14:06,790 --> 00:14:09,339
they have to fix it and unless that

340
00:14:09,339 --> 00:14:13,000
their PR is blocked this is more of

341
00:14:13,000 --> 00:14:15,939
where we want to get to we for some rep

342
00:14:15,939 --> 00:14:19,329
for some teams we do it but for many we

343
00:14:19,329 --> 00:14:22,480
don't yet because either they're bigger

344
00:14:22,480 --> 00:14:25,329
team and they're faster and VR it needs

345
00:14:25,329 --> 00:14:26,860
a lot of manpower because you need an

346
00:14:26,860 --> 00:14:29,259
SLA you need a pager duty to do it and

347
00:14:29,259 --> 00:14:31,470
we need more resources to do that

348
00:14:31,470 --> 00:14:35,019
- this was a initial idea that I was

349
00:14:35,019 --> 00:14:36,910
really excited about that hey if we find

350
00:14:36,910 --> 00:14:38,589
anything we're gonna comment on their PR

351
00:14:38,589 --> 00:14:40,750
this seems like a great idea and even

352
00:14:40,750 --> 00:14:43,149
work with smaller teams but it didn't

353
00:14:43,149 --> 00:14:44,500
work for bigger teams because there are

354
00:14:44,500 --> 00:14:46,329
already too many people reviewing and

355
00:14:46,329 --> 00:14:48,519
commenting and an automated tool just

356
00:14:48,519 --> 00:14:51,100
common keep commenting on your PR seems

357
00:14:51,100 --> 00:14:53,519
like a spam and people tend to ignore

358
00:14:53,519 --> 00:14:56,319
automate it's you know these comments

359
00:14:56,319 --> 00:14:58,839
when real people are saying something

360
00:14:58,839 --> 00:15:02,170
there so what we ended up with most

361
00:15:02,170 --> 00:15:03,790
teams are a lot of thing without

362
00:15:03,790 --> 00:15:06,009
blocking so we allowed them saying that

363
00:15:06,009 --> 00:15:08,410
hey you failed our check but we don't

364
00:15:08,410 --> 00:15:11,290
block you yet please fix it and I

365
00:15:11,290 --> 00:15:13,569
honestly believe no developer wants to

366
00:15:13,569 --> 00:15:15,579
write code like they are good

367
00:15:15,579 --> 00:15:16,930
people but they are constrained by

368
00:15:16,930 --> 00:15:19,269
different things so more than 50% of the

369
00:15:19,269 --> 00:15:21,819
time we have seen people fixing it or

370
00:15:21,819 --> 00:15:23,980
just at least asking us hey what is this

371
00:15:23,980 --> 00:15:27,490
about like how can I go about it but if

372
00:15:27,490 --> 00:15:29,860
the many some don't if they don't we

373
00:15:29,860 --> 00:15:32,030
have a trail of tickets where we can go

374
00:15:32,030 --> 00:15:34,250
back and open a bug so that I can be

375
00:15:34,250 --> 00:15:37,640
fixed later now there is tool plug-in

376
00:15:37,640 --> 00:15:41,150
model this is important because we had a

377
00:15:41,150 --> 00:15:43,790
lot of tools we could use and also I

378
00:15:43,790 --> 00:15:46,400
strongly believe smaller tools with

379
00:15:46,400 --> 00:15:49,340
specific purposes are much more good at

380
00:15:49,340 --> 00:15:52,700
finding issues or classes of issues so

381
00:15:52,700 --> 00:15:55,910
that you can you can fix them because

382
00:15:55,910 --> 00:15:58,220
the we are okay with the fact that we

383
00:15:58,220 --> 00:16:01,100
might not catch everything but the

384
00:16:01,100 --> 00:16:03,650
things we catch are important and we are

385
00:16:03,650 --> 00:16:06,350
sure about it so smaller tools with my

386
00:16:06,350 --> 00:16:08,990
specific purpose as my jam and also

387
00:16:08,990 --> 00:16:11,540
there are many you know open-source

388
00:16:11,540 --> 00:16:13,730
tools like def scheme as my colleague

389
00:16:13,730 --> 00:16:17,180
talked about it's an it's a plugin built

390
00:16:17,180 --> 00:16:19,250
first Visual Studio code so it's generic

391
00:16:19,250 --> 00:16:21,530
but since it's open-source you can

392
00:16:21,530 --> 00:16:24,860
change the you can change the rules it's

393
00:16:24,860 --> 00:16:26,810
scanning on and you can cut down the

394
00:16:26,810 --> 00:16:29,540
rules to bare minimum of what you want

395
00:16:29,540 --> 00:16:31,490
it to look for and write your own custom

396
00:16:31,490 --> 00:16:35,740
rules so that you can scan on them

397
00:16:36,250 --> 00:16:39,380
finding normalization I mean this is

398
00:16:39,380 --> 00:16:41,570
specific to our case because it's we are

399
00:16:41,570 --> 00:16:43,370
using multiple tools and getting

400
00:16:43,370 --> 00:16:45,380
multiple details from different kind of

401
00:16:45,380 --> 00:16:48,290
findings from different tools and some

402
00:16:48,290 --> 00:16:49,730
tools are amazing a description and

403
00:16:49,730 --> 00:16:51,710
other things some tools or not I

404
00:16:51,710 --> 00:16:54,320
literally have a tool which the name of

405
00:16:54,320 --> 00:16:57,980
the finding was exercise and description

406
00:16:57,980 --> 00:16:59,450
was cross-site scripting

407
00:16:59,450 --> 00:17:02,270
I mean I like the simplicity of it but

408
00:17:02,270 --> 00:17:04,940
still some more description a detailed

409
00:17:04,940 --> 00:17:06,740
one which can help developers would be

410
00:17:06,740 --> 00:17:12,500
useful key reasons for success if I have

411
00:17:12,500 --> 00:17:15,190
to point out there are two of them one

412
00:17:15,190 --> 00:17:18,319
it's built for developers at every stage

413
00:17:18,319 --> 00:17:21,230
we thought what would make you know

414
00:17:21,230 --> 00:17:23,569
developers life easy here and how can we

415
00:17:23,569 --> 00:17:27,109
help them and it's also useful in the

416
00:17:27,109 --> 00:17:29,870
sense of once you put it we tested with

417
00:17:29,870 --> 00:17:32,720
smaller teams got some buy-in and got

418
00:17:32,720 --> 00:17:34,670
their feedback off ok this is not

419
00:17:34,670 --> 00:17:36,740
working for us or this specific case

420
00:17:36,740 --> 00:17:39,320
doesn't work for us and we get we get

421
00:17:39,320 --> 00:17:41,300
ambiguous responses from different teams

422
00:17:41,300 --> 00:17:43,760
and it's expected because not everyone

423
00:17:43,760 --> 00:17:44,990
is the same

424
00:17:44,990 --> 00:17:47,120
and we should be okay with rolling

425
00:17:47,120 --> 00:17:49,790
rolling with that what works for them as

426
00:17:49,790 --> 00:17:51,860
much you work with them it's better to

427
00:17:51,860 --> 00:17:53,420
better get their buy-in

428
00:17:53,420 --> 00:17:54,679
and building a great relationship with

429
00:17:54,679 --> 00:17:57,770
your developing team and also accepting

430
00:17:57,770 --> 00:18:00,320
for what it is as static analysis tools

431
00:18:00,320 --> 00:18:02,330
are nothing but automation to catch

432
00:18:02,330 --> 00:18:04,880
low-hanging fruits they're not there to

433
00:18:04,880 --> 00:18:07,160
catch amazing bugs they're not there to

434
00:18:07,160 --> 00:18:10,490
you know replace your pen testers if you

435
00:18:10,490 --> 00:18:12,470
put all the amazing buzzwords into it

436
00:18:12,470 --> 00:18:14,420
like machine learning you put oh you

437
00:18:14,420 --> 00:18:16,820
know artificial intelligence blockchain

438
00:18:16,820 --> 00:18:18,890
for no reason like if you add all those

439
00:18:18,890 --> 00:18:21,410
things yeah it might find some cool bugs

440
00:18:21,410 --> 00:18:23,929
but that's not the expectation and it's

441
00:18:23,929 --> 00:18:26,000
a lot of engineering work so the

442
00:18:26,000 --> 00:18:28,970
expectation is to find some of the you

443
00:18:28,970 --> 00:18:31,490
know mistakes that that are easy to make

444
00:18:31,490 --> 00:18:33,590
by developers that they might ignore and

445
00:18:33,590 --> 00:18:36,410
just help them out and we should be

446
00:18:36,410 --> 00:18:40,010
doing that job well one more thing that

447
00:18:40,010 --> 00:18:42,530
worked for us is writing safe libraries

448
00:18:42,530 --> 00:18:44,240
and scanning for them and alerting

449
00:18:44,240 --> 00:18:46,460
people on that my my colleague talked

450
00:18:46,460 --> 00:18:48,350
about it if you have question and that

451
00:18:48,350 --> 00:18:51,610
please talk to Morgan Jerome on there

452
00:18:51,610 --> 00:18:56,090
and this is not unique you know you many

453
00:18:56,090 --> 00:18:57,710
many companies have already done that

454
00:18:57,710 --> 00:19:00,260
because like I showed in the initial

455
00:19:00,260 --> 00:19:02,870
slide from claim that the bar for

456
00:19:02,870 --> 00:19:05,030
writing your own or the necessity that

457
00:19:05,030 --> 00:19:08,000
comes it's really low so you you tend to

458
00:19:08,000 --> 00:19:09,559
write your own all the bigger companies

459
00:19:09,559 --> 00:19:13,340
have done it talk to Google and you know

460
00:19:13,340 --> 00:19:15,590
Netflix snapchat all of their have their

461
00:19:15,590 --> 00:19:19,280
own system because to get some security

462
00:19:19,280 --> 00:19:21,640
value out of the existing tools is hard

463
00:19:21,640 --> 00:19:24,020
these are some of the resources that I

464
00:19:24,020 --> 00:19:26,000
highly recommend rolling your own is

465
00:19:26,000 --> 00:19:29,170
Clint's presentation in shell con and

466
00:19:29,170 --> 00:19:32,179
lessons listen from building static

467
00:19:32,179 --> 00:19:35,990
analysis core is from Oz apps like was

468
00:19:35,990 --> 00:19:39,020
in California last early this year

469
00:19:39,020 --> 00:19:41,920
my boss talked there it's amazing and

470
00:19:41,920 --> 00:19:46,250
this oh sorry that's this one the

471
00:19:46,250 --> 00:19:47,809
lessons from building at at Google

472
00:19:47,809 --> 00:19:50,300
that's a that's a paper that Google

473
00:19:50,300 --> 00:19:52,010
released which I learned amazing things

474
00:19:52,010 --> 00:19:54,440
from it's like a gold standard I at

475
00:19:54,440 --> 00:19:56,360
least in my mind and I learned a lot of

476
00:19:56,360 --> 00:19:58,880
things from there and the last tool like

477
00:19:58,880 --> 00:20:02,270
while our tool is we started it as a POC

478
00:20:02,270 --> 00:20:04,670
so it's still not a open-source tool we

479
00:20:04,670 --> 00:20:06,410
are working on it it's highly embedded

480
00:20:06,410 --> 00:20:09,020
to our this thing our environment but

481
00:20:09,020 --> 00:20:10,850
one of the similar tools is husky CI

482
00:20:10,850 --> 00:20:13,400
whose team I met in DEFCON they're

483
00:20:13,400 --> 00:20:15,860
amazing they're all the features I

484
00:20:15,860 --> 00:20:18,410
mentioned are not there but they are

485
00:20:18,410 --> 00:20:20,750
doing amazing work and they're pretty

486
00:20:20,750 --> 00:20:22,460
cool to talk to just check it out if

487
00:20:22,460 --> 00:20:24,380
you're interested in using one of these

488
00:20:24,380 --> 00:20:30,170
tools unsolicited advice well I'm kind

489
00:20:30,170 --> 00:20:32,480
of in a get in a anti-climactic you know

490
00:20:32,480 --> 00:20:35,090
message here because as much as a lot

491
00:20:35,090 --> 00:20:37,190
building it and enjoyed the process and

492
00:20:37,190 --> 00:20:38,660
we are getting some value out of it I

493
00:20:38,660 --> 00:20:41,360
don't think it's a good way for whole

494
00:20:41,360 --> 00:20:43,700
industry to keep writing in every

495
00:20:43,700 --> 00:20:46,550
company we go to because it's it's not

496
00:20:46,550 --> 00:20:48,710
feasible it's not scalable and huge

497
00:20:48,710 --> 00:20:50,600
waste of resource we should be working

498
00:20:50,600 --> 00:20:53,930
towards this goal and we're doing all

499
00:20:53,930 --> 00:20:56,240
this after I mean all the vendors have

500
00:20:56,240 --> 00:20:58,490
put a lot of work into it they're smart

501
00:20:58,490 --> 00:21:01,520
people but I think they are focusing on

502
00:21:01,520 --> 00:21:04,910
wrong things and also trying to fit in

503
00:21:04,910 --> 00:21:06,590
the existing ecosystem of developers

504
00:21:06,590 --> 00:21:09,530
what's useful for them what we can how

505
00:21:09,530 --> 00:21:11,900
we can help them out fixing fitting in

506
00:21:11,900 --> 00:21:14,780
that context is very important and also

507
00:21:14,780 --> 00:21:17,540
we're also pretty good at finding bugs

508
00:21:17,540 --> 00:21:19,790
you know it's amazing like we love

509
00:21:19,790 --> 00:21:20,630
finding bugs

510
00:21:20,630 --> 00:21:23,060
it's spawn you know you can we can just

511
00:21:23,060 --> 00:21:24,950
call out people that's why we are in

512
00:21:24,950 --> 00:21:28,640
security anyway but like let's we have

513
00:21:28,640 --> 00:21:30,740
to you know build a process to fix them

514
00:21:30,740 --> 00:21:33,620
it's it's time for us to focus on and

515
00:21:33,620 --> 00:21:35,540
helping and enabling all the developers

516
00:21:35,540 --> 00:21:37,100
who are doing amazing things with

517
00:21:37,100 --> 00:21:39,950
empathy to fix it because again I

518
00:21:39,950 --> 00:21:41,390
strongly believe coming from a

519
00:21:41,390 --> 00:21:42,740
development background

520
00:21:42,740 --> 00:21:44,300
I don't think developers want to write

521
00:21:44,300 --> 00:21:46,310
bad code they just not have the

522
00:21:46,310 --> 00:21:49,840
resources and the support to do it and

523
00:21:49,840 --> 00:21:52,760
since I started with the might illogical

524
00:21:52,760 --> 00:21:55,160
metaphor it's only fair if I end with

525
00:21:55,160 --> 00:21:58,270
there's some metaphor

526
00:22:00,679 --> 00:22:03,650
this whole situation is like diapers

527
00:22:03,650 --> 00:22:07,460
you know diapers are for kids but it's

528
00:22:07,460 --> 00:22:09,919
bought by their parents and the

529
00:22:09,919 --> 00:22:11,779
marketing is always towards you know aim

530
00:22:11,779 --> 00:22:14,750
towards parents so as an industry we

531
00:22:14,750 --> 00:22:17,630
have as an industry we we does the same

532
00:22:17,630 --> 00:22:20,210
thing it's used by developers the

533
00:22:20,210 --> 00:22:21,950
statical has his tools but bought by

534
00:22:21,950 --> 00:22:24,169
security professionals as an industry we

535
00:22:24,169 --> 00:22:27,850
have done a great job of marketing it as

536
00:22:27,850 --> 00:22:30,110
security professionals and making us

537
00:22:30,110 --> 00:22:33,440
feel it's important but now it's time to

538
00:22:33,440 --> 00:22:36,110
catch the kids made so let's focus

539
00:22:36,110 --> 00:22:40,539
on that thank you so much

540
00:22:45,820 --> 00:22:55,540
anybody have any questions hey great

541
00:22:55,540 --> 00:22:56,080
talk

542
00:22:56,080 --> 00:23:01,000
thank you so I get that like trying to

543
00:23:01,000 --> 00:23:03,310
do this QA process for catching bugs

544
00:23:03,310 --> 00:23:06,970
earlier on in the development process is

545
00:23:06,970 --> 00:23:10,810
good because you can you know get kind

546
00:23:10,810 --> 00:23:12,220
of earlier access the things that go

547
00:23:12,220 --> 00:23:14,500
wrong but in environments that have a

548
00:23:14,500 --> 00:23:15,730
whole bunch of different development

549
00:23:15,730 --> 00:23:18,100
teams working adding code into the same

550
00:23:18,100 --> 00:23:22,570
codebase how do you how do you reconcile

551
00:23:22,570 --> 00:23:25,000
like maybe bug fixes that cause more

552
00:23:25,000 --> 00:23:28,030
bugs and different situations like that

553
00:23:28,030 --> 00:23:29,380
or development teams that are from

554
00:23:29,380 --> 00:23:31,900
disparate parts of the world and work

555
00:23:31,900 --> 00:23:33,790
differently together how do you what's

556
00:23:33,790 --> 00:23:37,090
your advice for that yeah I I really

557
00:23:37,090 --> 00:23:40,480
think in doing whatever you can as much

558
00:23:40,480 --> 00:23:43,360
fancy tools you have the most important

559
00:23:43,360 --> 00:23:44,710
thing is to build a really solid

560
00:23:44,710 --> 00:23:46,510
relationship with the developers with

561
00:23:46,510 --> 00:23:49,660
the security team I do think and also in

562
00:23:49,660 --> 00:23:51,970
one of the slides I show can share I'll

563
00:23:51,970 --> 00:23:55,450
share it in LinkedIn later that we don't

564
00:23:55,450 --> 00:23:57,610
tell them like when when they go to CR

565
00:23:57,610 --> 00:23:59,830
the detail software finding we don't

566
00:23:59,830 --> 00:24:02,860
tell them that oh this is this as CBS s

567
00:24:02,860 --> 00:24:04,990
core of this that this and everything we

568
00:24:04,990 --> 00:24:06,700
say specific things like what's the

569
00:24:06,700 --> 00:24:10,000
problem and how to fix it and for some

570
00:24:10,000 --> 00:24:13,320
of them yes I agree like there are no

571
00:24:13,320 --> 00:24:16,450
universal fixes and in those cases we

572
00:24:16,450 --> 00:24:18,070
always encourage like we have the link

573
00:24:18,070 --> 00:24:20,680
to directly contact us there I know it's

574
00:24:20,680 --> 00:24:22,330
a complex problem I don't have a perfect

575
00:24:22,330 --> 00:24:24,460
answer for that but at least what has

576
00:24:24,460 --> 00:24:26,320
worked for us is a long-standing

577
00:24:26,320 --> 00:24:29,410
relationship with developing teams where

578
00:24:29,410 --> 00:24:31,330
they can come to us at any time and we

579
00:24:31,330 --> 00:24:33,640
will work with their situation rather

580
00:24:33,640 --> 00:24:35,770
than saying no this is a bug this is how

581
00:24:35,770 --> 00:24:38,350
you fix it this is this is the ultimate

582
00:24:38,350 --> 00:24:40,690
rule so yeah that has worked great for

583
00:24:40,690 --> 00:24:43,840
us okay I think so we're actually going

584
00:24:43,840 --> 00:24:45,760
to shuffle outside for additional

585
00:24:45,760 --> 00:24:47,770
questions so thank you very much Harvin

586
00:24:47,770 --> 00:24:50,310
and they go give a round of applause

587
00:24:50,310 --> 00:24:57,000
[Applause]

