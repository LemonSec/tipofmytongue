1
00:00:20,420 --> 00:00:26,940
so good evening balcom we have some
really interesting stuff coming up for

2
00:00:26,940 --> 00:00:33,640
you now but first let me ask you
something new here among you

3
00:00:33,640 --> 00:00:46,290
likes to eat ham and who he reminds you
is a half so ladies and gentlemen is

4
00:00:46,290 --> 00:01:01,390
Travis Goodspeed winter's dark bowling
in amateur radio injury a date to begin

5
00:01:01,390 --> 00:01:05,600
with a quick public service announcement
the cat that is going around the museum

6
00:01:05,600 --> 00:01:14,810
I have named Olga after the chamber folk
superstar I expect all of you to call

7
00:01:14,810 --> 00:01:19,200
her go while giving a little pieces of
food so the chances to that for years to

8
00:01:19,200 --> 00:01:20,400
come

9
00:01:20,400 --> 00:01:27,380
so today we're going to be talking about
two protocols in particular that are

10
00:01:27,380 --> 00:01:34,329
popular on amateur radio one of them is
PSK 31 and the other is ready or are

11
00:01:34,329 --> 00:01:42,639
ttyl I've been playing with these
protocols in a way that is not entirely

12
00:01:42,640 --> 00:01:49,499
legal by amateur radio rules but is
close enough so a lot of what I'm

13
00:01:49,499 --> 00:01:54,020
teaching you how to do would become
illegal if you just added cryptography

14
00:01:54,020 --> 00:02:00,350
to it or securities in any way because
cryptography is illegal

15
00:02:00,350 --> 00:02:07,499
an amateur video but hypothetically if
you had to say smuggled books into a

16
00:02:07,499 --> 00:02:12,930
country that didn't allow books like
let's say you wanted to send a book to

17
00:02:12,930 --> 00:02:17,290
Germany and the Germans don't allow
books that describe how to write

18
00:02:17,290 --> 00:02:21,950
exploits right so you have the key
uncensored edition of the bug hunters

19
00:02:21,950 --> 00:02:25,560
handbook and you want to to send that to
germany but you don't want to physically

20
00:02:25,560 --> 00:02:30,310
go you want to send it by ham radio in
this lecture I'll be showing you how to

21
00:02:30,310 --> 00:02:36,920
hide extra information inside of a
legitimate amateur video message 3

22
00:02:36,920 --> 00:02:43,518
steganography I will also be showing you
how to create public lights that are

23
00:02:43,519 --> 00:02:50,500
valid as multiple digital formats at the
same time for example I can combine PSK

24
00:02:50,500 --> 00:02:58,580
31 and Morse code in order to have in
order to have a message the talent in

25
00:02:58,580 --> 00:03:04,220
both formats so that the machine can
easily read the PSK 31 and human being

26
00:03:04,220 --> 00:03:13,220
can interpret the Morse code now we're
talking about radios here but internally

27
00:03:13,220 --> 00:03:19,939
you should think of the receiver as a
parser you have a software program on

28
00:03:19,939 --> 00:03:22,980
the receiving computer that is
interpreting the data that comes through

29
00:03:22,980 --> 00:03:28,048
the air in the same way that you would
interpret a file format so a lot of the

30
00:03:28,049 --> 00:03:34,370
tricks that you do with a file format
will also work here and these chicks are

31
00:03:34,370 --> 00:03:39,829
not that hard to find of particular
importance is something called a parser

32
00:03:39,829 --> 00:03:45,680
differential this is a fancy way of
saying that two receivers have a

33
00:03:45,680 --> 00:03:51,329
different view of the same message one
of the most useful things for a pressure

34
00:03:51,329 --> 00:03:59,150
differential is in breaking as a cell if
you can create certificate that looks as

35
00:03:59,150 --> 00:04:02,750
if it represents one domain to the
browser and a different domain to the

36
00:04:02,750 --> 00:04:06,129
certificate authority than you can
sometimes trick the certificate

37
00:04:06,129 --> 00:04:11,709
authority and assigning something that
it really should have the same thing

38
00:04:11,709 --> 00:04:18,980
happens in radio so there is a project
that song about us and I did a few years

39
00:04:18,980 --> 00:04:24,350
back of Pakatan packet where we managed
to smuggle in an entire radio packet

40
00:04:24,350 --> 00:04:31,220
from layer 7 to the physical layer by a
parsing bug on the receiver combined

41
00:04:31,220 --> 00:04:35,710
with natural noise this allows us to
e-mail a wifi

42
00:04:35,710 --> 00:04:41,080
and have it drop out as the message is
being transferred you can even do those

43
00:04:41,080 --> 00:04:48,229
so that not one single by the Interior
message is visible to the naked eye on

44
00:04:48,230 --> 00:04:55,710
inside of the exterior message by making
a packet that meaning changes when it

45
00:04:55,710 --> 00:05:04,560
shifted by 1801 noble or one-half of one
bit

46
00:05:04,560 --> 00:05:11,140
began coming up with ways to perform
this on amateur video particles and our

47
00:05:11,140 --> 00:05:16,090
goal is not quite steganography in the
we're not trying to hide information

48
00:05:16,090 --> 00:05:20,250
although we can instead we're just
trying to figure out all of the crazy

49
00:05:20,250 --> 00:05:27,610
things that can be done with these
protocols if in the future it becomes

50
00:05:27,610 --> 00:05:31,850
necessary to sneak information you have
my blessing use these techniques in that

51
00:05:31,850 --> 00:05:40,190
way we're trying to do here is we're
trying to create a single message that

52
00:05:40,190 --> 00:05:47,969
contains both the bear which is the the
public view of the message and also the

53
00:05:47,970 --> 00:05:57,560
books which is a hidden interior view it
sort of like Russian matryoshka doll

54
00:05:57,560 --> 00:06:11,000
briefly explain how much and which first
each receiver is designed for a

55
00:06:11,000 --> 00:06:17,150
particular modulation height and it
ignores anything that of an orthogonal

56
00:06:17,150 --> 00:06:25,120
type so for example the if you have FM
receiver the FM receiver will generally

57
00:06:25,120 --> 00:06:29,800
ignore the amplitude of the transmission
so you can do minor changes in amplitude

58
00:06:29,800 --> 00:06:39,950
without distorting the audio without
anyone noticing so in our case we have

59
00:06:39,950 --> 00:06:50,800
the signal being modulated on top of the
radio carrier wave if we change the logo

60
00:06:50,800 --> 00:06:56,920
if we change the strength of the signal
amplitude we get a modulation and if

61
00:06:56,920 --> 00:07:04,230
instead we change the frequency the FM
modulation and there's also phase

62
00:07:04,230 --> 00:07:11,720
modulation this diagram is a little bit
of a line to children and I get to Y and

63
00:07:11,720 --> 00:07:18,150
later slide the gist is that you can
encode a bit by changing the phase of

64
00:07:18,150 --> 00:07:24,310
the sine wave so you're jumping back and
forth between sine and cosine and with

65
00:07:24,310 --> 00:07:29,630
the receiver does is it it multiplies
this the current signal by a

66
00:07:29,630 --> 00:07:34,140
time-delayed version of the signal and
if the phase has changed it becomes

67
00:07:34,140 --> 00:07:41,099
positive and if it is not changed it
remains negative know when you're

68
00:07:41,100 --> 00:07:47,530
viewing this on a receiver you generally
look at what's called a waterfall and

69
00:07:47,530 --> 00:07:53,219
inside of the waterfall the single sort
of spreads around its center

70
00:07:53,220 --> 00:07:59,890
mathematician things to this in whatever
fancy you mathematical form from an

71
00:07:59,890 --> 00:08:03,310
amateur's perspective it's more

72
00:08:03,310 --> 00:08:10,370
intuitive or traditional you use what's
called upper sideband which is where the

73
00:08:10,370 --> 00:08:17,330
radio frequency is just down shifted to
become audio and this is what most of

74
00:08:17,330 --> 00:08:23,180
the digital forms of amateur radio use
in short wave in international

75
00:08:23,180 --> 00:08:30,440
communications and this is particularly
cool because you can work with all of

76
00:08:30,440 --> 00:08:35,070
your digital including as a modem
written and software working on a wave

77
00:08:35,070 --> 00:08:40,400
file and your radio appears to your
computer as an extra sound card over USB

78
00:08:40,400 --> 00:08:44,930
whatever you played that sound card gets
transmitted and whatever comes in from

79
00:08:44,930 --> 00:08:49,589
the radio comes into that sound
interface so that all of the programming

80
00:08:49,590 --> 00:08:55,070
that you have to do your doing on audio
files and when you get it wrong you can

81
00:08:55,070 --> 00:09:00,240
hear where you got it wrong and why this
makes developing it a lot easier than

82
00:09:00,240 --> 00:09:05,130
writing software defined radio code and
you don't need any offensive libraries

83
00:09:05,130 --> 00:09:11,630
you can implement all of this in your
self in Python without having to rely on

84
00:09:11,630 --> 00:09:20,330
new radio or rather fancy techniques the
general chair styles used by ham radio

85
00:09:20,330 --> 00:09:25,700
for this measure frequency shift keying
in frequency shift keying you just have

86
00:09:25,700 --> 00:09:29,720
a high frequency that salon and a
low-frequency the 20 and you jump

87
00:09:29,720 --> 00:09:35,680
between them to send your message on the
waterfall this looks like two lines and

88
00:09:35,680 --> 00:09:41,390
the data is in which phone is being used
at that time on the air these are two

89
00:09:41,390 --> 00:09:45,000
different radio frequencies but when you
down shifted you hear them as two

90
00:09:45,000 --> 00:09:49,640
different audio frequencies and that
audio contains all of the information so

91
00:09:49,640 --> 00:09:55,180
you implement your modem in the audio
spectrum instead of the much higher

92
00:09:55,180 --> 00:10:00,180
frequencies that are used on the radio
this is also a low data rate because an

93
00:10:00,180 --> 00:10:04,370
amateur video there isn't much space to
go around all of the short wave

94
00:10:04,370 --> 00:10:10,650
frequencies combined are about 30
megahertz wide which is the same as a

95
00:10:10,650 --> 00:10:17,260
high-end wifi card so the entire world
has as much bandwidth as your wifi card

96
00:10:17,260 --> 00:10:23,730
has and in order to properly sherrit
small segments are allocated to each

97
00:10:23,730 --> 00:10:31,800
user or its style so for amateur radio
we don't have very much bandwidth and in

98
00:10:31,800 --> 00:10:36,469
order to make up for that we send very
narrow signals so narrow that you can

99
00:10:36,470 --> 00:10:41,900
actually have multiple signals in sight
of the audio band at once so you can

100
00:10:41,900 --> 00:10:45,860
hear multiple people talking and your
modem can decode all of these and follow

101
00:10:45,860 --> 00:10:54,960
the conversation we also use what's
called a single sideband the upper

102
00:10:54,960 --> 00:11:02,780
diagram here is a traditional a.m.
single the AM signal you can recognize

103
00:11:02,780 --> 00:11:07,050
because there's a central peep and then
you have to sign loves the cum off of it

104
00:11:07,050 --> 00:11:12,500
and the site loads have the same
information so you can either listen to

105
00:11:12,500 --> 00:11:19,000
the left or the right one and the full
information is there this is wasteful so

106
00:11:19,000 --> 00:11:25,930
instead amateurs and only the upper half
which is called upper sideband or

107
00:11:25,930 --> 00:11:28,939
they'll send only the lower half of the
lower sideband in this allows them to

108
00:11:28,940 --> 00:11:34,900
use half the band as a sort of like a
solution to this man spreading moral

109
00:11:34,900 --> 00:11:43,310
panic that the United States is going
through these days in our situation we

110
00:11:43,310 --> 00:11:48,880
have Allison bob we're trying to have a
conversation and Eve is trying to learn

111
00:11:48,880 --> 00:11:53,210
with a conversation is really about and
even doing this by passive eavesdropping

112
00:11:53,210 --> 00:11:57,550
so she's not taking any signals she's
just recording everything and then

113
00:11:57,550 --> 00:12:04,800
reading through all of the traffic
analysis by my communicate with our ttyl

114
00:12:04,800 --> 00:12:11,150
this is a protocol from the 1940's that
was used by military teletype Riders

115
00:12:11,150 --> 00:12:20,290
uses to FSK modulation and coding so
there are five hits her letter

116
00:12:20,290 --> 00:12:24,560
and this is the same technology that the
serial port standard was originally

117
00:12:24,560 --> 00:12:30,729
developed for you can describe this as
five and two and that there are five

118
00:12:30,730 --> 00:12:37,050
data bits no parity and to stop its her
character in the same way that your

119
00:12:37,050 --> 00:12:43,649
dial-up modem might have been configured
as eight and one this is a picture with

120
00:12:43,649 --> 00:12:48,079
the teletype writer would look like and
in order to shorten your transmission

121
00:12:48,079 --> 00:12:52,699
you would actually type out your message
in this paper tape on the right and then

122
00:12:52,699 --> 00:12:58,758
replay the paper tape in order to send
your message across the air quickly a

123
00:12:58,759 --> 00:13:04,670
modern operator console for this is done
in software

124
00:13:04,670 --> 00:13:10,099
this is a program called FL digi that
allows you to control your amateur radio

125
00:13:10,100 --> 00:13:17,610
and also in taxes and soft modem in
order to convert your conversation so

126
00:13:17,610 --> 00:13:25,670
the operator will type in his message
here in this text the number at the top

127
00:13:25,670 --> 00:13:32,579
left is the frequency that the radio is
tuned to which is not the frequency that

128
00:13:32,579 --> 00:13:37,510
the message is too new to the message is
that the radio frequency plus the audio

129
00:13:37,510 --> 00:13:46,149
frequency so if this is a 1400 700
megahertz and you're transmitting one

130
00:13:46,149 --> 00:13:53,930
kilohertz audio the actual data signal
will be centered at 14:07 one and this

131
00:13:53,930 --> 00:13:58,719
is what it looks like on the spectrum
the left red line with the yellow

132
00:13:58,720 --> 00:13:59,470
surrounding it

133
00:13:59,470 --> 00:14:05,870
that's zero bits and the right or the
one dance and assorted scrolls efforts

134
00:14:05,870 --> 00:14:12,569
to time it is the y axis and frequency
is the x-axis operators leads and ASCII

135
00:14:12,569 --> 00:14:17,360
art through this or bardot art this is a
picture

136
00:14:17,360 --> 00:14:26,010
Seattle Slew the horse that won the
Kentucky Derby in 1974 and the alphabet

137
00:14:26,010 --> 00:14:28,529
used by this is not a ski

138
00:14:28,529 --> 00:14:35,110
to make things more efficient the left
out support for things like case in

139
00:14:35,110 --> 00:14:41,200
letters so all of these messages are an
uppercase you'll also note that each

140
00:14:41,200 --> 00:14:47,370
five bit code can be either a letter or
it can be a number and the way that this

141
00:14:47,370 --> 00:14:53,420
is implemented is that there are
actually two signals called and letters

142
00:14:53,420 --> 00:14:59,630
if you send figs it switches to the
figures alphabet so that you can send

143
00:14:59,630 --> 00:15:08,560
numbers and such and if you send letters
that lets you type in letters so then

144
00:15:08,560 --> 00:15:16,869
the russians wanted to use this
technology so transliterated rather than

145
00:15:16,870 --> 00:15:23,110
an actual Russian city water for about
the first thing you learn Russian class

146
00:15:23,110 --> 00:15:31,440
so you have your four letters letters if
you changed the figures out of that its

147
00:15:31,440 --> 00:15:38,589
exclamation mark 974 space cynical and
so on the russians wanted to be able to

148
00:15:38,589 --> 00:15:44,949
send across the Cyrillic alphabet show
they took advantage of the null

149
00:15:44,949 --> 00:15:51,240
character and on a Russian RTTY
implementation sending an unknown

150
00:15:51,240 --> 00:15:57,690
switches to a third alphabet and allows
you to send Cyrillic alphabet here it is

151
00:15:57,690 --> 00:16:04,850
in the Latin alphabet water so that if
your radio does not support this really

152
00:16:04,850 --> 00:16:08,820
about it will transliterated to latin
and you'll still be able to read the

153
00:16:08,820 --> 00:16:16,490
message and then you better get
satisfied that the letters Commando is

154
00:16:16,490 --> 00:16:21,899
also used as an idol town because in
addition to recording your message and

155
00:16:21,899 --> 00:16:27,350
then transmitting it you can also
operate life in which the machine wait

156
00:16:27,350 --> 00:16:33,770
for you to take the next letter if you
type more slowly than the computer is

157
00:16:33,770 --> 00:16:39,750
transmitting it will send the sequence
of all ones and the reason why does this

158
00:16:39,750 --> 00:16:48,089
is the 0 bids get put around it for the
top tips and that allows the timing to

159
00:16:48,089 --> 00:16:55,560
be synchronized on the receiver you can
also alternate the idle time so a normal

160
00:16:55,560 --> 00:17:01,359
transmitter will always how just letters
is the ideal but if you do letters and

161
00:17:01,360 --> 00:17:05,809
then figures and then figures in the
letters no one on a computer will notice

162
00:17:05,809 --> 00:17:11,780
on a physical teletype writer there will
be this constant current ranking as its

163
00:17:11,780 --> 00:17:16,089
switching between the alphabets but
unless someone is monitoring you with

164
00:17:16,089 --> 00:17:20,790
equipment from the 1940's they won't
notice this change and that's you can

165
00:17:20,790 --> 00:17:29,110
include extra bits during the idle
portions of your conversation

166
00:17:29,110 --> 00:17:32,379
this way can run through the village and
they can keep some books on the backs

167
00:17:32,380 --> 00:17:38,580
you can do similar things in PSK 31
which is the nineteen nineties

168
00:17:38,580 --> 00:17:47,178
replacement for RTTY those of you who
saw the a ham radio station in the yard

169
00:17:47,179 --> 00:17:51,920
today there's a little box on top of the
radio that had serial cable and audio

170
00:17:51,920 --> 00:17:56,799
cables running to it that was a PSK 31
adapter

171
00:17:56,799 --> 00:18:04,010
31 uses 31.25 symbols per second and the
reason why is this rate is that this is

172
00:18:04,010 --> 00:18:11,110
about the speed that you can comfortably
type without feeling rushed so you type

173
00:18:11,110 --> 00:18:15,760
a little bit faster than the mission is
sending and then use the absolute

174
00:18:15,760 --> 00:18:19,140
minimum amount of bandwidth to have as
many conversations and personal audio

175
00:18:19,140 --> 00:18:25,460
channel as possible this only takes 60
Hertz of them with this is actually in

176
00:18:25,460 --> 00:18:34,070
less than the channel separation that's
needed for moscow is before we had two

177
00:18:34,070 --> 00:18:41,230
different lines on the spectral graph is
yellow line here in PSK 31 we only have

178
00:18:41,230 --> 00:18:48,480
11 vertical line and again the actual
frequency is the sum of the audio

179
00:18:48,480 --> 00:18:55,179
frequency and the change frequency of
the radio so we're transmitting our

180
00:18:55,179 --> 00:19:05,070
carrier at 14:07 one killer hurts just
get 31 inverts its phase to market a

181
00:19:05,070 --> 00:19:11,480
zero and there's no phase inversion
demarco one so on this top sine wave

182
00:19:11,480 --> 00:19:15,580
issued a sine wave is going along and
then right in the middle it abruptly

183
00:19:15,580 --> 00:19:22,418
reverses direction it sort of works like
that in practice the volume has to be

184
00:19:22,419 --> 00:19:27,700
dropped 20 at the moment of the
transition if you don't do this then you

185
00:19:27,700 --> 00:19:33,320
get harmonics throughout the the band
and it physically hurts your ears

186
00:19:33,320 --> 00:19:35,870
because as the speaker is

187
00:19:35,870 --> 00:19:40,500
is wiling out where it abruptly gets
yanked back by its value and that

188
00:19:40,500 --> 00:19:48,000
creates a popping noise in software you
implement this by switching between sine

189
00:19:48,000 --> 00:19:55,180
and cosine in hardware you can implement
this by turning a delay on and off and

190
00:19:55,180 --> 00:20:07,980
the phases not inverted DeMarco 122 131
is just a sine wave this figure is a

191
00:20:07,980 --> 00:20:13,600
little bit hard to see but the the
amplitude of the greater wave gets

192
00:20:13,600 --> 00:20:18,250
dropped down to zero at the moment of
the transition this is done to prevent

193
00:20:18,250 --> 00:20:28,870
the harmonics so the way the receiver
decodes this if you remember that a

194
00:20:28,870 --> 00:20:33,809
positive value times a positive value is
always a positive value and a negative

195
00:20:33,809 --> 00:20:40,860
value times a negative value is also
always a positive value you can multiply

196
00:20:40,860 --> 00:20:47,189
the signal that it's delayed self so
that the result is only positive when

197
00:20:47,190 --> 00:20:55,910
the phase has changed otherwise the
value will always be negative and the

198
00:20:55,910 --> 00:21:01,080
result of this transformation is a line
that squiggle along beneath the zero

199
00:21:01,080 --> 00:21:10,090
line and only jumps above it when 0 bit
is encountered similar to our ttyl tsk

200
00:21:10,090 --> 00:21:17,178
31 has a very cold alphabet the reason
why does this is the asking is not very

201
00:21:17,179 --> 00:21:22,110
efficient were English text because it
assumes that every letter has to do the

202
00:21:22,110 --> 00:21:29,090
same with so in PSK 31 kind of like
morse code your your symbols your

203
00:21:29,090 --> 00:21:34,030
letters are different sizes lower case
letters are shorter than upper case

204
00:21:34,030 --> 00:21:40,910
letters common letters are shorter than
rare letters is a table that you can

205
00:21:40,910 --> 00:21:45,370
look up inside of this table you'll see
that the letter E

206
00:21:45,370 --> 00:21:52,059
is just to one's a space is a single one
and you'll also see the uppercase letter

207
00:21:52,059 --> 00:21:56,940
he is a lot longer than the lower case
letters so if you hit the caps lock key

208
00:21:56,940 --> 00:21:58,850
on your Transformer

209
00:21:58,850 --> 00:22:02,129
your message will begin transmitting
more slowly because each letter is

210
00:22:02,130 --> 00:22:11,240
significantly longer than it would be in
lower case there are other rules here

211
00:22:11,240 --> 00:22:15,640
jump back to the table as I read these
the first rule is that every letter

212
00:22:15,640 --> 00:22:21,820
begins and ends with a 12 in all of
these are shown here as well as the rest

213
00:22:21,820 --> 00:22:26,050
of the larger alphabet every single
letter begins with a wine and ends with

214
00:22:26,050 --> 00:22:32,770
the one the other rule is that no letter
contains more than a single zero in a

215
00:22:32,770 --> 00:22:42,070
row so none of these have more than a
single 0 before the next one the third

216
00:22:42,070 --> 00:22:49,928
rule is that letters are separated by
two zeros so with receiver does is

217
00:22:49,929 --> 00:22:55,440
whenever it sees two zeros it takes the
buffer whatever came before those two

218
00:22:55,440 --> 00:22:59,980
zeros and it looks like up in the symbol
table and that's where the letter comes

219
00:22:59,980 --> 00:23:06,790
from so their tricks that you can do it
this the first trick is that you're

220
00:23:06,790 --> 00:23:12,050
required to have at least 20 is between
letters but you could have a lot more

221
00:23:12,050 --> 00:23:19,990
than that you could have 300 400 500 you
could have 5,000 so what you can do is

222
00:23:19,990 --> 00:23:25,010
you can send three zeros in between
letters tomorrow one and four zeros

223
00:23:25,010 --> 00:23:31,580
between letters to mark 0 and used that
to include one extra bit per letter in

224
00:23:31,580 --> 00:23:35,780
order to hide a secondary message and
the receivers will ignore all of this

225
00:23:35,780 --> 00:23:38,060
other thing

226
00:23:38,060 --> 00:23:45,120
31 is the illegally long letters are
always ignores the author of the PSK 31

227
00:23:45,120 --> 00:23:51,969
standard is British and he wanted to
send the great British Pound symbol but

228
00:23:51,970 --> 00:23:56,040
the great British Pound symbol is not in
ASCII and it was not in the original

229
00:23:56,040 --> 00:24:01,800
alphabetic constructed so the way that
he added that was he just made extra

230
00:24:01,800 --> 00:24:06,780
letters that were longer than all of the
old ones and he defined those to the

231
00:24:06,780 --> 00:24:10,850
upper half of the ASCII table but if you
go further than that it remains

232
00:24:10,850 --> 00:24:15,139
undefined and the receiver has to be era
tolerant because there are lots of

233
00:24:15,140 --> 00:24:22,960
errors on the radio so whenever it comes
up with something that's not in the list

234
00:24:22,960 --> 00:24:28,250
of valid characters in ignorance so you
can sort of like flip the standard

235
00:24:28,250 --> 00:24:34,440
around and send your entire message as
money illegally long character which

236
00:24:34,440 --> 00:24:37,970
will roll off the end of the receive
buffer and as long as you never sent to

237
00:24:37,970 --> 00:24:43,110
2008 never tries to look that up and at
the very end when you do to send two

238
00:24:43,110 --> 00:24:48,060
letters in 2008 find something that's
not new to this and it skips over and

239
00:24:48,060 --> 00:24:53,899
the rest of the message and in this way
you can hide extra information they're

240
00:24:53,900 --> 00:24:59,450
also physical tricks that you can do
once again

241
00:24:59,450 --> 00:25:04,580
31 is generated as audio here you have a
laptop on the left and a ham radio on

242
00:25:04,580 --> 00:25:08,889
the right and it's just chill audio
cables running into the back of the

243
00:25:08,890 --> 00:25:17,550
radio so I implemented 31 in Python and
this is something that you can do in a

244
00:25:17,550 --> 00:25:22,350
weekend with the proper documentation
and you don't need any fancy libraries

245
00:25:22,350 --> 00:25:30,080
or anything like that you begin with
your audio rate so PSK 31 was designed

246
00:25:30,080 --> 00:25:35,210
for digital signal processors they did
it thousand samples per second I'm doing

247
00:25:35,210 --> 00:25:37,940
it at forty eight thousand samples per
second just to

248
00:25:37,940 --> 00:25:44,100
giving greater precision so inside of
your audio file every forty eight

249
00:25:44,100 --> 00:25:52,158
thousand samples are one second of time
is also a volume I want the volume to

250
00:25:52,159 --> 00:25:55,649
jump up to half of the sixteen-bit
sample size

251
00:25:55,649 --> 00:26:04,250
the other thing I want is a divisor to
choose what audio frequency and

252
00:26:04,250 --> 00:26:10,639
generating my Tona in this case I just
divide my audio rate by 1000 which will

253
00:26:10,639 --> 00:26:13,779
give me a one killer hearthstone

254
00:26:13,779 --> 00:26:18,740
centering my audio singing with the
radio can best handle it and then the

255
00:26:18,740 --> 00:26:25,620
length of each symbol is the audio rate
divided by 31.25 this is how long a

256
00:26:25,620 --> 00:26:38,360
single dad is then how we gonna throw a
variable I would use my index within the

257
00:26:38,360 --> 00:26:44,408
sample and that's from 0 to the length
of each symbol and I have a value from

258
00:26:44,409 --> 00:26:51,769
each one that I produce any phase which
is 0 for sign or 14 co-sign now if you

259
00:26:51,769 --> 00:26:56,950
naively I'm just abruptly switched from
sign a cosine it sounds absolutely

260
00:26:56,950 --> 00:27:02,179
horrible I would play it for you here
except that the speakers would break and

261
00:27:02,179 --> 00:27:05,629
everybody would get very mad at me and
tomorrow you would have to listen to

262
00:27:05,629 --> 00:27:10,080
speakers trying to yell over the crowd
without amplification

263
00:27:10,080 --> 00:27:18,350
would you do instead is used what's
called a root raised cosine filter is it

264
00:27:18,350 --> 00:27:25,500
dropped this is the city opening a wave
file that might well has produced and

265
00:27:25,500 --> 00:27:30,909
wherever you see the amplitude drop down
to nothing that's where the phase shift

266
00:27:30,909 --> 00:27:35,820
is actually occurring this whip here is
actually one bit

267
00:27:35,820 --> 00:27:42,309
wherever you see it drop that's a zero
bit and wherever it does not drop that's

268
00:27:42,309 --> 00:27:46,040
a London the difference

269
00:27:46,040 --> 00:27:52,460
and spectrum you see on the one on the
left is nice and smooth and narrowband

270
00:27:52,460 --> 00:27:57,290
and the one on the right is just sort of
sitting over the entire audio space the

271
00:27:57,290 --> 00:28:03,580
one on the left is filtered and the one
on the right is not filters

272
00:28:03,580 --> 00:28:12,310
real PSK 31 filters only the debates the
change phase and there's no filter when

273
00:28:12,310 --> 00:28:18,919
the phase remains constant the one thing
you can do is you can do

274
00:28:18,920 --> 00:28:26,240
PSK 31 envelope ambiguity which is where
you dropped the phase even at times and

275
00:28:26,240 --> 00:28:30,370
you don't need to and what the receiver
is looking for is any time in which the

276
00:28:30,370 --> 00:28:35,760
phase was dropped in a one and that
gives you one extra bit of information

277
00:28:35,760 --> 00:28:40,940
her one bit that you're transmitting 0
is don't contain extra bits because they

278
00:28:40,940 --> 00:28:46,390
have to be dropped and most receivers
won't notice the difference at all so

279
00:28:46,390 --> 00:28:53,500
when you're receiving this on on a
laptop in your change the rate region it

280
00:28:53,500 --> 00:28:57,090
sounds very similar and it looks
identical and the computer throws away

281
00:28:57,090 --> 00:29:05,100
all of the differences so in this case
the message on the top is the classic

282
00:29:05,100 --> 00:29:10,879
PSK 31 transmission the one on the
bottom has been modified to drop the

283
00:29:10,880 --> 00:29:17,270
volume in each of the one bits and
proper PSK 31 receiver here is no

284
00:29:17,270 --> 00:29:22,060
difference between this by doing this
selectively for individual bits you can

285
00:29:22,060 --> 00:29:27,360
hide information

286
00:29:27,360 --> 00:29:31,040
the other thing you can do is you can
realize that the PSP 31 is tolerant of

287
00:29:31,040 --> 00:29:37,250
very very wide swings in amplitude if I
am transmitting with a hundred watts and

288
00:29:37,250 --> 00:29:40,370
some down the street is transmitting
with five whites both singles will get

289
00:29:40,370 --> 00:29:47,629
through so you can do is you can change
the amplitude of your transmission at

290
00:29:47,630 --> 00:29:52,960
each point in time that you're you're
dropping down to nothing so you can use

291
00:29:52,960 --> 00:29:54,419
this in order to

292
00:29:54,419 --> 00:29:59,419
hide Morse code in your transmission I'm
going to play to audio samples for you

293
00:29:59,419 --> 00:30:06,779
now this first one is PSK 31
transmission containing a lecture that I

294
00:30:06,779 --> 00:30:12,310
wrote on how to implement 31

295
00:30:12,310 --> 00:30:14,389
here

296
00:30:14,390 --> 00:30:18,160
that's when the amplitude is being
dropped

297
00:30:18,160 --> 00:30:21,980
and that's normal PSK 31 there's nothing
fancy about that there's nothing special

298
00:30:21,980 --> 00:30:34,550
about that this is my ham radio call
sign in Morse code and also in place as

299
00:30:34,550 --> 00:30:40,110
a human operator who knows Morse code
you can hear the calls and some of the

300
00:30:40,110 --> 00:30:46,600
dashes in this transmission line in each
of the letters also contains that letter

301
00:30:46,600 --> 00:30:52,500
as PSK 31 show that your receiver can
identify the callsign automatically as

302
00:30:52,500 --> 00:31:02,400
well as by audio this is what looks like
this is the spectrum of the letter K

303
00:31:02,400 --> 00:31:09,590
just got it up and the first one of the
top contains it the SKA 31 version of

304
00:31:09,590 --> 00:31:10,540
the letter K

305
00:31:10,540 --> 00:31:17,430
this is the same letter drawn out in a
city and you can see that it's the one

306
00:31:17,430 --> 00:31:24,490
on the left that contains 0 bet

307
00:31:24,490 --> 00:31:33,530
first contains letter que es que 31 and
then the rest just contain nothing

308
00:31:33,530 --> 00:31:42,879
they're there for filler you can also do
escape 31 RTTY polyglot RTTY cares about

309
00:31:42,880 --> 00:31:47,940
relative power so you're transmitting
either on the high frequency or in the

310
00:31:47,940 --> 00:31:51,840
low frequency and what matters as far as
a receiver is concerned is which one is

311
00:31:51,840 --> 00:31:57,840
stronger his K 31 doesn't really care
which one is it only cares about the

312
00:31:57,840 --> 00:32:03,209
face so we can combine the two we can
have the low-frequency contain one PSK

313
00:32:03,210 --> 00:32:08,660
31 transmission the high-frequency can
contain a different PSK 31 transmission

314
00:32:08,660 --> 00:32:14,520
and we can jump the strength of each to
make one stronger for a little bit

315
00:32:14,520 --> 00:32:19,920
stronger for more time and this creates
a single into balance in both protocols

316
00:32:19,920 --> 00:32:22,160
at the same time

317
00:32:22,160 --> 00:32:25,520
polyglot

318
00:32:25,520 --> 00:32:37,170
there are also some versions 31 that
contain error correction so because it

319
00:32:37,170 --> 00:32:42,950
has never action some of the bits on the
air can be flipped without damaging the

320
00:32:42,950 --> 00:32:48,180
message so what you do is you let them
intentionally knowing that they will be

321
00:32:48,180 --> 00:32:54,280
corrected on the other side and whether
the bed is correct or incorrect hides

322
00:32:54,280 --> 00:33:00,340
your extra secret information desk on
presentation last year in which this was

323
00:33:00,340 --> 00:33:09,159
implemented for OJT 65 which is a
related video protocol and BTW 65 is a

324
00:33:09,160 --> 00:33:13,080
particularly good target for this
technique because it has a ton of error

325
00:33:13,080 --> 00:33:17,699
correction the protocol was originally
designed for reflecting a message off

326
00:33:17,700 --> 00:33:23,600
meteor as its filing through the
atmosphere and then catching it on the

327
00:33:23,600 --> 00:33:28,280
other side and this is very unreliable
so they had to put in lots of error

328
00:33:28,280 --> 00:33:36,639
correction in order to sneak the message
through despite the damage this

329
00:33:36,640 --> 00:33:44,360
technique is also a little bit fragile
in theory but in practice even though

330
00:33:44,360 --> 00:33:48,600
the tools should be very easy to write
to identify this they haven't been

331
00:33:48,600 --> 00:33:56,740
written so what would be a useful to do
is a project we need to take the audio

332
00:33:56,740 --> 00:34:01,710
recordings that drop Owen Dukes
published last year DEFCON and write a

333
00:34:01,710 --> 00:34:06,210
tool that runs through and identifies
whether the damage to them is

334
00:34:06,210 --> 00:34:12,560
intentional or accidental is ian is it
an honest mistake the debate came out

335
00:34:12,560 --> 00:34:16,710
wrong or was it intentionally
transmitted is wrong with you can do

336
00:34:16,710 --> 00:34:23,770
when you have a good signal-to-noise
ratio is one last check that I want to

337
00:34:23,770 --> 00:34:30,960
share with you how many of you have
Ethernet networks it home ok

338
00:34:30,960 --> 00:34:38,080
and you know that they wifi someone can
sort of here how much traffic you're

339
00:34:38,080 --> 00:34:41,029
using the even though they can't
necessarily know what you're sending

340
00:34:41,030 --> 00:34:51,389
across when it's encrypted so madeline
is a way to do that or wired Ethernet

341
00:34:51,389 --> 00:34:56,570
dinner runs over the internet and we're
going to suppose that the attacker can

342
00:34:56,570 --> 00:35:01,359
control some of that data but not very
well so that say that you're running

343
00:35:01,359 --> 00:35:08,470
HTTP and you're running at over tour and
I want to identify where in Novi Sad you

344
00:35:08,470 --> 00:35:12,859
are and I know that you're in Novi Sad
but I don't know anything more than that

345
00:35:12,859 --> 00:35:22,250
what I can do is make a message in morse
code that's like the client is here the

346
00:35:22,250 --> 00:35:31,410
client is here and controlling the
hidden service on tour I start sending

347
00:35:31,410 --> 00:35:37,379
that message as Morse code in terms of
how much bandwidth you're using so if

348
00:35:37,380 --> 00:35:42,380
you you if I want to send did I use a
lot of bandwidth for a very short period

349
00:35:42,380 --> 00:35:49,050
of time i want to send and I use it for
a longer period of time

350
00:35:49,050 --> 00:35:56,190
sure how many of you wired your own home
Ethernet yourself ok so you know how you

351
00:35:56,190 --> 00:36:00,700
got the twisted Paris and you put the
cap on them and you know how you're

352
00:36:00,700 --> 00:36:04,779
supposed to unleash them just before you
plug it into the cap and you know how

353
00:36:04,780 --> 00:36:11,140
it's so much easier if you give it like
five or six centimeters of unwinding and

354
00:36:11,140 --> 00:36:16,000
you know how China make such awesome
cheap networks which is these days and

355
00:36:16,000 --> 00:36:20,800
you can just buy a cheap network switch
and throw it in so

356
00:36:20,800 --> 00:36:26,940
this is the letter K transmitted from
what used to be my home Ethernet network

357
00:36:26,940 --> 00:36:30,600
before I rewired

358
00:36:30,600 --> 00:36:39,970
amateur radio this actually came out 28
121 megahertz and I was able to hear

359
00:36:39,970 --> 00:36:45,209
this from an antenna on my roof and then
called a friend of mine who lives down

360
00:36:45,210 --> 00:36:51,710
the street and he was able to copy a
Morse code message that I sent him just

361
00:36:51,710 --> 00:36:57,950
three bandwidth usage and the reason why
is that when you under mister peres they

362
00:36:57,950 --> 00:37:02,879
leave just a little bit of radio data
and when you have a combined with a

363
00:37:02,880 --> 00:37:07,530
cheap wireless router at least a little
bit more and the signal is something

364
00:37:07,530 --> 00:37:09,990
that you can pick up with a radio
receiver if you find the right frequency

365
00:37:09,990 --> 00:37:14,479
so we hunt around and find the right
frequency are then able to receive this

366
00:37:14,480 --> 00:37:24,020
information that sexual traded out so
the next part of this project is that I

367
00:37:24,020 --> 00:37:29,560
want to do a wireless capture the flag
project I'm going to be transmitting on

368
00:37:29,560 --> 00:37:36,150
twenty metres from Philadelphia and this
transition will hit most of the western

369
00:37:36,150 --> 00:37:40,740
hemisphere if you have a proper antenna
you will be able to receive it here in

370
00:37:40,740 --> 00:37:47,410
the facade it's by upper side so you
either need an amateur radio receiver or

371
00:37:47,410 --> 00:37:52,940
a high-end shortwave receiver you don't
need a translator and we're only doing

372
00:37:52,940 --> 00:37:57,690
is only transmitting test messages that
contain hidden information as a sort of

373
00:37:57,690 --> 00:38:02,660
capture the flag so you can take an
audio recording of it and then try and

374
00:38:02,660 --> 00:38:07,270
mess with it in order to figure out what
the hidden messages in each one of these

375
00:38:07,270 --> 00:38:10,509
transmissions is a little bit different

376
00:38:10,510 --> 00:38:14,750
the other thing that I'll be releasing
this afternoon on get how is the tool

377
00:38:14,750 --> 00:38:20,140
that I've been using to produce the PSK
31 samples this is in a few pages of

378
00:38:20,140 --> 00:38:24,460
Python it's rather easy to read and
you'll be able to use this to generate

379
00:38:24,460 --> 00:38:25,500
your own

380
00:38:25,500 --> 00:38:32,290
tricky PSK 31 transmissions in order to
hide extra information I'll also

381
00:38:32,290 --> 00:38:38,110
publishing lectures on PSK 31 in PSK 31
that you can receive with the radio

382
00:38:38,110 --> 00:38:42,630
along with their capture the flag
transitions and their source code to

383
00:38:42,630 --> 00:38:51,990
these actresses included with the PSP 31
tool like to remind you that the digital

384
00:38:51,990 --> 00:38:56,959
protocols on the error can be messed
with in the same way that file formats

385
00:38:56,960 --> 00:39:02,580
can be receiving radios are parsers an
assembly that you can find bugs in

386
00:39:02,580 --> 00:39:09,180
purses on a PC or in software on the
phone you can also find bugs in the code

387
00:39:09,180 --> 00:39:14,990
decoder chips you can find bugs in the
protocol itself where ambiguities that

388
00:39:14,990 --> 00:39:18,779
allow you to hide extra information
where to send a message that can only be

389
00:39:18,780 --> 00:39:25,470
received by certain software and this is
a great way to get started in actually

390
00:39:25,470 --> 00:39:33,419
writing radio software yourself with
less and learning curve and software

391
00:39:33,420 --> 00:39:37,430
defined radio would take when you start
playing with softer defined radio at the

392
00:39:37,430 --> 00:39:42,160
beginning it's great it's very easy to
get lots of results and then you sort of

393
00:39:42,160 --> 00:39:46,190
hit a brick wall where everything
becomes impossibly hard an unrelated to

394
00:39:46,190 --> 00:39:52,070
what was before I think that this can
services or is stepping stone to work

395
00:39:52,070 --> 00:39:57,920
from and to work with radio techniques
but in the audio domain where bugs are

396
00:39:57,920 --> 00:40:06,290
easier to find and you're able to catch
up and two billion the signal processing

397
00:40:06,290 --> 00:40:08,520
knowledge that will later allow you to

398
00:40:08,520 --> 00:40:13,470
right software defined radio from
scratch and without relying so heavily

399
00:40:13,470 --> 00:40:19,730
on pre-built libraries thank you for
your time and attention I think I have

400
00:40:19,730 --> 00:40:27,130
time for questions or to your questions
thank you can see around

