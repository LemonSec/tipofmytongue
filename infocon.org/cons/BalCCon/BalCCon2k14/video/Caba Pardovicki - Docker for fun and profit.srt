1
00:00:06,750 --> 00:00:08,420
that

2
00:00:08,420 --> 00:00:14,030
I

3
00:00:14,030 --> 00:00:21,020
well West

4
00:00:21,020 --> 00:00:28,020
air whatever care to hide

5
00:00:30,340 --> 00:00:35,210
%ah think im so looking for fun and
profit

6
00:00:35,210 --> 00:00:38,560
as Solomon hikes said about

7
00:00:38,560 --> 00:00:41,880
okie butter

8
00:00:41,880 --> 00:00:45,520
okay so as someone hikes the

9
00:00:45,520 --> 00:00:49,040
founder and creator doctor project said
I

10
00:00:49,040 --> 00:00:53,170
about Ducker it uses Linux containers
and Internet one-shot up

11
00:00:53,170 --> 00:00:56,239
about it so

12
00:00:56,239 --> 00:00:59,910
but first what's the difference between
containers

13
00:00:59,910 --> 00:01:04,979
and hypervisors so the hypervisor have
high prices are based on emanating

14
00:01:04,979 --> 00:01:06,179
ritual hardware so

15
00:01:06,180 --> 00:01:10,510
the emulate the complete hardware setup
they emanate bias and they then start

16
00:01:10,510 --> 00:01:10,900
the

17
00:01:10,900 --> 00:01:14,790
OS and every instance is completely
separate

18
00:01:14,790 --> 00:01:17,920
this size is measured hopewell

19
00:01:17,920 --> 00:01:21,990
couple love gigabytes at least I

20
00:01:21,990 --> 00:01:25,298
ass if you are using containers the
containers are based

21
00:01:25,299 --> 00:01:28,650
ashamed operating system so every
instance

22
00:01:28,650 --> 00:01:31,680
shares the same colonel the kernel of
the host machine

23
00:01:31,680 --> 00:01:34,760
in this case the Linux kernel

24
00:01:34,760 --> 00:01:38,360
and it is

25
00:01:38,360 --> 00:01:41,470
a kinda limited that you can only Iran

26
00:01:41,470 --> 00:01:45,830
our Linux container on a Linux host so
you cannot mix

27
00:01:45,830 --> 00:01:50,140
operating systems as for the hypervisor
its

28
00:01:50,140 --> 00:01:53,890
so you can run anything on any
hypervisor almost

29
00:01:53,890 --> 00:01:57,800
so they are some limits about the
drivers but

30
00:01:57,800 --> 00:02:01,929
in theory you can so in theory the
container

31
00:02:01,930 --> 00:02:04,960
can share everything and almost nothing
with the host

32
00:02:04,960 --> 00:02:08,060
the only thing that the container has
two the

33
00:02:08,060 --> 00:02:11,569
or must share with the host is the
kernel

34
00:02:11,569 --> 00:02:15,109
I'll one where big a.m.

35
00:02:15,110 --> 00:02:19,379
thing about containers is the start time
so the container can start

36
00:02:19,379 --> 00:02:22,480
in less than a second well

37
00:02:22,480 --> 00:02:25,929
of course it depends what's runs in the
container if it's some Java application

38
00:02:25,930 --> 00:02:27,280
it will be more than a second

39
00:02:27,280 --> 00:02:33,190
always but its Java and the size is
measured in couple megabytes

40
00:02:33,190 --> 00:02:37,140
and you could even share

41
00:02:37,140 --> 00:02:40,779
a the libraries and executables between
container

42
00:02:40,780 --> 00:02:42,880
so the container could be limited to

43
00:02:42,880 --> 00:02:47,900
only applications so it the container
can be it more lightweight

44
00:02:47,900 --> 00:02:52,210
are containers and Linux some straw

45
00:02:52,210 --> 00:02:56,060
history but the first contains Asian
technology

46
00:02:56,060 --> 00:03:00,310
in the so that works with Linux kernel
was open we sat

47
00:03:00,310 --> 00:03:05,730
it was open source in 2005 and it was
the first

48
00:03:05,730 --> 00:03:08,950
commercially successful so a

49
00:03:08,950 --> 00:03:12,429
parallels the base their business

50
00:03:12,430 --> 00:03:16,750
on open we said as for the containers at
the open source did

51
00:03:16,750 --> 00:03:21,030
but it was out with an external source 3
which means that if you wanted to run

52
00:03:21,030 --> 00:03:22,000
opener is at

53
00:03:22,000 --> 00:03:25,130
you had to first batch the the Linux
kernel

54
00:03:25,130 --> 00:03:28,620
then compile its or three install this
from a first-party

55
00:03:28,620 --> 00:03:32,870
a repository so you couldn't use the
standard Linux kernel

56
00:03:32,870 --> 00:03:38,530
that comes with its your distribution
annex 2006

57
00:03:38,530 --> 00:03:44,000
process container or which is now called
a/c group or a control group were at it

58
00:03:44,000 --> 00:03:49,070
to the coronal 2007 Google started using
C group

59
00:03:49,070 --> 00:03:52,720
and its Contreras search and from that
point

60
00:03:52,720 --> 00:03:57,109
the complete Googleplex went pretty much
where the containerized

61
00:03:57,110 --> 00:04:01,010
at Dixie was launched in 2008

62
00:04:01,010 --> 00:04:04,600
so it was the worst in 0.1 0. at

63
00:04:04,600 --> 00:04:08,220
2011 on kernel summit their

64
00:04:08,220 --> 00:04:11,570
a manage to come to an agreement the

65
00:04:11,570 --> 00:04:16,000
so-called contain a unification
agreement a in which

66
00:04:16,000 --> 00:04:19,890
so at this kernel summit Google
parallels and other

67
00:04:19,890 --> 00:04:23,990
big interested parties um came to an
agreement

68
00:04:23,990 --> 00:04:28,930
at that only one container technology
will be available in Linux kernel

69
00:04:28,930 --> 00:04:32,330
which was a very good for starters

70
00:04:32,330 --> 00:04:35,530
the work began on continuing education
that's gonna level

71
00:04:35,530 --> 00:04:39,260
colonel API level see groups and then
spaces

72
00:04:39,260 --> 00:04:44,030
over agreed API and there were included
in the kernel source tree

73
00:04:44,030 --> 00:04:47,429
so you could easily access them and is
we compile without

74
00:04:47,430 --> 00:04:51,040
patching the kernel and

75
00:04:51,040 --> 00:04:54,990
the agreements most important part that

76
00:04:54,990 --> 00:04:58,000
only one underlying current technology
for container

77
00:04:58,000 --> 00:05:01,710
will be used by everybody as in how open
we sat

78
00:05:01,710 --> 00:05:04,799
exceed Dockers 0 VM and the rest them

79
00:05:04,800 --> 00:05:09,290
in 2013 the the first Linux kernel that
was

80
00:05:09,290 --> 00:05:13,560
supporting used

81
00:05:13,560 --> 00:05:18,740
yep so

82
00:05:18,740 --> 00:05:23,730
I continue a so in 2013

83
00:05:23,730 --> 00:05:26,770
at the first look: skin Linux kernel

84
00:05:26,770 --> 00:05:30,950
came out that supported out of the box o
the open reset

85
00:05:30,950 --> 00:05:34,560
was completely functional with the a
kernel source tree

86
00:05:34,560 --> 00:05:39,140
and it was kernel version free point
well you didn't know

87
00:05:39,140 --> 00:05:43,270
the need to patch the kernel to compile
it to run open reset

88
00:05:43,270 --> 00:05:48,440
so namespaces

89
00:05:48,440 --> 00:05:53,160
are used to isolate process which are
then used by the container or two

90
00:05:53,160 --> 00:05:54,800
processes inside the container

91
00:05:54,800 --> 00:05:59,440
see groups are used to control the
resources there are two LC groups and

92
00:05:59,440 --> 00:06:00,850
six namespaces

93
00:06:00,850 --> 00:06:05,340
in the coronal and the containers can
use all of these or any combination

94
00:06:05,340 --> 00:06:09,349
as for the security

95
00:06:09,350 --> 00:06:14,660
as part of the agreement from 2011 using
namespaces became the container security

96
00:06:14,660 --> 00:06:15,740
mechanism

97
00:06:15,740 --> 00:06:19,350
unfortunately at the jusen in space

98
00:06:19,350 --> 00:06:24,340
is isn't available in the majority of
the news the solutions

99
00:06:24,340 --> 00:06:27,530
and only this year started enabling them

100
00:06:27,530 --> 00:06:33,789
in there stock a kernel that comes with
a distribution so

101
00:06:33,790 --> 00:06:39,890
what is doctor there is a tool that uses
containers to create light with packages

102
00:06:39,890 --> 00:06:41,909
for applications within some portability

103
00:06:41,910 --> 00:06:45,050
so it uses the aforementioned to colonel
API

104
00:06:45,050 --> 00:06:48,490
that was agreed and it builds upon it so

105
00:06:48,490 --> 00:06:51,980
doctor isn't a a container technology

106
00:06:51,980 --> 00:06:56,160
it's just uses the computer technology
to create

107
00:06:56,160 --> 00:06:57,160
its own

108
00:06:57,160 --> 00:07:01,850
framework so to use it as a framework
the doctor compliments

109
00:07:01,850 --> 00:07:05,950
are a the doctor client and server
doctor images

110
00:07:05,950 --> 00:07:10,690
registries and doctor containers the
doctor client

111
00:07:10,690 --> 00:07:13,890
a.m. communicates with the doctor demon

112
00:07:13,890 --> 00:07:17,490
or server which can be on a different
machine

113
00:07:17,490 --> 00:07:20,910
it can be a duck a client can access we
r

114
00:07:20,910 --> 00:07:25,000
API remotely the doctor Dame in our
server which then communicates with the

115
00:07:25,000 --> 00:07:25,900
lid container

116
00:07:25,900 --> 00:07:29,700
which is a layer above the host OS
kernel or the Linux kernel

117
00:07:29,700 --> 00:07:33,830
and earth to our on darker

118
00:07:33,830 --> 00:07:37,570
as you need at least kernel version 3.8

119
00:07:37,570 --> 00:07:40,820
and optionally enable member in spot
accounting

120
00:07:40,820 --> 00:07:43,830
if memory and stop accounting isn't
enabled

121
00:07:43,830 --> 00:07:48,010
a when your boot the kernel then you
cannot limit

122
00:07:48,010 --> 00:07:51,880
the memory usage and swap to use %eh a
by container

123
00:07:51,880 --> 00:07:56,600
so the darker images

124
00:07:56,600 --> 00:08:00,810
are basically read-only templates out
which doctor containers are

125
00:08:00,810 --> 00:08:04,080
instantiated know what it mean that

126
00:08:04,080 --> 00:08:07,570
you have up base image on the which

127
00:08:07,570 --> 00:08:12,669
you put a layer a fire system at the
base images for example here

128
00:08:12,669 --> 00:08:16,010
a read-only so put on a layer

129
00:08:16,010 --> 00:08:19,270
another layer that the in which you

130
00:08:19,270 --> 00:08:22,520
at to the container %uh

131
00:08:22,520 --> 00:08:26,049
different executables or that our code
that you need

132
00:08:26,050 --> 00:08:30,220
but it

133
00:08:30,220 --> 00:08:33,940
won't be saved until you commit thats
change

134
00:08:33,940 --> 00:08:38,200
and make it another permanently your I
will explain that

135
00:08:38,200 --> 00:08:41,229
later the

136
00:08:41,229 --> 00:08:45,560
so these images can either be defiant

137
00:08:45,560 --> 00:08:49,339
bio doctor file or by committing a
condenser committing the changes that

138
00:08:49,340 --> 00:08:50,010
you made

139
00:08:50,010 --> 00:08:53,490
doctor file is a simple

140
00:08:53,490 --> 00:08:57,380
file that contains instructions how to
build

141
00:08:57,380 --> 00:08:59,780
our container

142
00:08:59,780 --> 00:09:02,939
and as something that's is also
important to mention

143
00:09:02,940 --> 00:09:06,670
that for example if you have the host
machine with Debian OS

144
00:09:06,670 --> 00:09:10,829
so that members in that can run a doctor

145
00:09:10,830 --> 00:09:13,930
you can inside the crew puts

146
00:09:13,930 --> 00:09:17,310
for example sent to us so you can mix
and match

147
00:09:17,310 --> 00:09:20,339
the Linux distributions and

148
00:09:20,340 --> 00:09:23,490
you can use any of them inside the
container

149
00:09:23,490 --> 00:09:27,020
a the main thing is that it has to be
Linux

150
00:09:27,020 --> 00:09:33,380
so fun one of the solution so they are

151
00:09:33,380 --> 00:09:37,930
something that called a registry the
courageous 3 which stores the images

152
00:09:37,930 --> 00:09:42,180
and that have been built so there is a
very large community

153
00:09:42,180 --> 00:09:45,770
that uses a doctor registry where you

154
00:09:45,770 --> 00:09:50,730
lemme commits your doctor builds there
more than 14,000

155
00:09:50,730 --> 00:09:55,610
a ready to use images those images can
contain for example read this

156
00:09:55,610 --> 00:09:59,250
or memcache or complete Drupal or

157
00:09:59,250 --> 00:10:03,670
my a sequel or PostgreSQL so you can
just download those image

158
00:10:03,670 --> 00:10:06,719
make a new layer on them and start using
them

159
00:10:06,720 --> 00:10:11,710
so they are so-called trust the bills
you know where a you know the source

160
00:10:11,710 --> 00:10:12,570
where they come

161
00:10:12,570 --> 00:10:16,630
and you can trust those containers that
they are clean

162
00:10:16,630 --> 00:10:22,140
so but there are two types the registers
there's a public and the private the

163
00:10:22,140 --> 00:10:23,750
public is operated by

164
00:10:23,750 --> 00:10:27,350
doctor Inc the creator of docker which
was

165
00:10:27,350 --> 00:10:31,750
a earlier called the cloud and

166
00:10:31,750 --> 00:10:37,120
the private a registry im so you can
also register as you can also make a

167
00:10:37,120 --> 00:10:38,120
private registry

168
00:10:38,120 --> 00:10:41,230
with a doctor Hobbs but its limit its

169
00:10:41,230 --> 00:10:45,890
for a free version or you can be or is
you could

170
00:10:45,890 --> 00:10:50,020
make your own private the Dhaka registry
which could

171
00:10:50,020 --> 00:10:54,819
be behind your firewall inside your
infrastructure so nobody can access it's

172
00:10:54,820 --> 00:11:01,139
herbicides you are your developer when
you need to deploy something

173
00:11:01,139 --> 00:11:03,660
the doctor containers our lunch from

174
00:11:03,660 --> 00:11:07,059
images and can contain oh one or more

175
00:11:07,059 --> 00:11:10,259
running process and you can think about
them

176
00:11:10,259 --> 00:11:14,850
as the building were packing aspect of
docker and the containers are the

177
00:11:14,850 --> 00:11:19,749
running for execution aspect of docker
the containers and image formats

178
00:11:19,749 --> 00:11:23,769
are set the standard operations and exit
execution environment

179
00:11:23,769 --> 00:11:27,220
and it captures the

180
00:11:27,220 --> 00:11:30,239
exact configuration other version of an
application

181
00:11:30,239 --> 00:11:33,549
to upgrade application in production

182
00:11:33,549 --> 00:11:37,350
the cat is usually replaced with a new
version and it takes only a couple of

183
00:11:37,350 --> 00:11:38,039
seconds

184
00:11:38,039 --> 00:11:41,600
so for example as you have your

185
00:11:41,600 --> 00:11:44,639
over clog the developments

186
00:11:44,639 --> 00:11:49,069
a so that version and a staging version

187
00:11:49,069 --> 00:11:52,488
on the production version they could be
different versions

188
00:11:52,489 --> 00:11:55,809
of the doctor image so the doctor
container

189
00:11:55,809 --> 00:11:58,809
and you could just pop them when you're
ready

190
00:11:58,809 --> 00:12:01,879
with all the edits you could just

191
00:12:01,879 --> 00:12:06,049
as the for example as and its just check
out the whole container

192
00:12:06,049 --> 00:12:09,069
and the update is

193
00:12:09,069 --> 00:12:15,259
finished and when to use doctor

194
00:12:15,259 --> 00:12:19,789
so if you need the version control for
your whole system that's

195
00:12:19,789 --> 00:12:25,049
on that which you your app is running so
inside the container for example if you

196
00:12:25,049 --> 00:12:25,899
want to deploy

197
00:12:25,899 --> 00:12:29,829
your web app inside the container they
could be web server

198
00:12:29,829 --> 00:12:33,269
that the base server and your
application

199
00:12:33,269 --> 00:12:36,589
so everything is inside the container
and you could apply its

200
00:12:36,589 --> 00:12:39,709
a.m. you could upgrade its and

201
00:12:39,709 --> 00:12:43,679
make it in production as a whole so
there are no version changes

202
00:12:43,679 --> 00:12:50,679
everything is exactly as it was on your
development machine

203
00:12:51,590 --> 00:12:55,960
a on the other hand the ear doctor is
really easy when you want to

204
00:12:55,960 --> 00:12:59,480
distributes a the same machine

205
00:12:59,480 --> 00:13:04,660
so the same setup for many developers to
work on you just built

206
00:13:04,660 --> 00:13:07,790
your or your system administrator builds
are docker

207
00:13:07,790 --> 00:13:11,170
container push it in your

208
00:13:11,170 --> 00:13:15,630
for example private repository and all
your developers can check it out

209
00:13:15,630 --> 00:13:19,980
and use it so everybody is using the
same setup and there's

210
00:13:19,980 --> 00:13:24,450
well probably there won't be a problem
it works on my machine

211
00:13:24,450 --> 00:13:29,930
because everybody has the same setup you
can use it to run

212
00:13:29,930 --> 00:13:33,390
a your code on your laptop in the same
amount as on the server

213
00:13:33,390 --> 00:13:37,350
and yeah I

214
00:13:37,350 --> 00:13:43,390
explained phase development and you
could also combined occur with the

215
00:13:43,390 --> 00:13:47,970
and Sabha or other configuration
management system so-and-so bill has its

216
00:13:47,970 --> 00:13:49,330
own module to control

217
00:13:49,330 --> 00:13:52,400
doctor for developers

218
00:13:52,400 --> 00:13:55,829
it is field once run anywhere its
something

219
00:13:55,830 --> 00:13:58,860
that Java were tried to be so

220
00:13:58,860 --> 00:14:02,860
Java is main functions like that and
configure on Salon

221
00:14:02,860 --> 00:14:09,760
anything for the operations fun with the
curve so

222
00:14:09,760 --> 00:14:13,170
a I will speak about few

223
00:14:13,170 --> 00:14:16,199
ideas how to use doctor and have to have

224
00:14:16,200 --> 00:14:20,260
fun with it and some work flow
techniques

225
00:14:20,260 --> 00:14:24,600
so you could run for example Skype in a
doctor

226
00:14:24,600 --> 00:14:28,320
as we all know Skype axes

227
00:14:28,320 --> 00:14:31,710
many files and it's running on your
computer if

228
00:14:31,710 --> 00:14:35,520
its if it should or shouldn't well thats

229
00:14:35,520 --> 00:14:39,790
for somebody else to decide currently
but you can run it in a container

230
00:14:39,790 --> 00:14:44,310
so a completely isolated from your
operating system from your host machine

231
00:14:44,310 --> 00:14:47,949
for example if you don't want to set up
the home with the Arts Center a

232
00:14:47,949 --> 00:14:51,109
environment you just download the

233
00:14:51,110 --> 00:14:55,319
doctor file which has all the
instructions how to build

234
00:14:55,319 --> 00:14:58,839
the doctor container in which wield the
sky be

235
00:14:58,839 --> 00:15:02,910
started a Skype with communicate with
your host machine

236
00:15:02,910 --> 00:15:08,639
for the sound by up both out your server
and you can forward to be out the Skype

237
00:15:08,639 --> 00:15:14,559
ago Yash the same way you consider for
example

238
00:15:14,559 --> 00:15:17,980
may cause a container for a Dropbox for

239
00:15:17,980 --> 00:15:21,360
me torrent sinks or you could use it to

240
00:15:21,360 --> 00:15:26,540
a contain your web browser so

241
00:15:26,540 --> 00:15:30,730
one scenario if you are a web developer
and you want to test your application

242
00:15:30,730 --> 00:15:32,519
and most versions of Firefox

243
00:15:32,519 --> 00:15:36,829
or chrome you could easily set up a
couple of container with its

244
00:15:36,829 --> 00:15:40,049
the different versions of the my browser

245
00:15:40,049 --> 00:15:44,579
and it's only takes a couple of seconds
to

246
00:15:44,579 --> 00:15:47,949
a starts the container and to access the
web browser

247
00:15:47,949 --> 00:15:52,758
that occurs twice at

248
00:15:52,759 --> 00:15:56,910
so the button there's a small tree be
able to streisand the fact

249
00:15:56,910 --> 00:15:59,999
but there is a stress and project

250
00:15:59,999 --> 00:16:03,360
which was a.m. which created

251
00:16:03,360 --> 00:16:06,809
and civil playbooks that set up or
server

252
00:16:06,809 --> 00:16:09,939
which runs its eco pianists H

253
00:16:09,939 --> 00:16:13,230
open weepy and a et cetera et cetera us

254
00:16:13,230 --> 00:16:17,740
a.m. a lot of security tools you could
use a doctor

255
00:16:17,740 --> 00:16:20,779
a file to build its

256
00:16:20,779 --> 00:16:25,959
to build that server with all the all
the services

257
00:16:25,959 --> 00:16:29,748
and its made in that way that you could
run it

258
00:16:29,749 --> 00:16:32,769
for example on Amazon instance on their

259
00:16:32,769 --> 00:16:36,189
digital ocean um

260
00:16:36,189 --> 00:16:38,630
every major clouds

261
00:16:38,630 --> 00:16:42,410
from club provide their is officially
supporting

262
00:16:42,410 --> 00:16:45,810
doctor so the Google compute engine the

263
00:16:45,810 --> 00:16:49,390
Amazon also Microsoft Azure

264
00:16:49,390 --> 00:16:56,390
is supporting officially doctor shell

265
00:16:56,950 --> 00:17:00,810
which is also very interesting so a
every time

266
00:17:00,810 --> 00:17:04,000
someone locks on your machine or some
server

267
00:17:04,000 --> 00:17:08,949
a new doctor instance is started so
every user is completely cut off

268
00:17:08,949 --> 00:17:13,160
it has its own privacy and

269
00:17:13,160 --> 00:17:16,449
this setup is interesting that a.m. if
you want

270
00:17:16,449 --> 00:17:19,500
for example Iran a

271
00:17:19,500 --> 00:17:24,230
before all doctor instances every doctor
instance would-be

272
00:17:24,230 --> 00:17:27,230
behind net if it did didn't have its

273
00:17:27,230 --> 00:17:30,800
own a public IP or you could

274
00:17:30,800 --> 00:17:35,540
have to run the SSH server on different
ports if you stuck a shell

275
00:17:35,540 --> 00:17:39,760
they're all behind 422 the standard SSH
port

276
00:17:39,760 --> 00:17:42,780
only when the user logs in the docker a

277
00:17:42,780 --> 00:17:49,430
the cream cheese started

278
00:17:49,430 --> 00:17:52,470
Panamax is a very interesting project

279
00:17:52,470 --> 00:17:56,710
its a.m. it enables

280
00:17:56,710 --> 00:18:00,510
earth you to use a simple web interface

281
00:18:00,510 --> 00:18:04,550
it combines the bigger and and core OS

282
00:18:04,550 --> 00:18:07,710
to run the cream inches and you can't

283
00:18:07,710 --> 00:18:12,900
make a a rather complex a.m.
environments with the curve so move

284
00:18:12,900 --> 00:18:15,300
people dockery you could run multiple
dockery images

285
00:18:15,300 --> 00:18:18,530
for example in the house few simple
clicks a

286
00:18:18,530 --> 00:18:21,720
you can run a an instance doctor
instance that will a

287
00:18:21,720 --> 00:18:28,580
Ryan men cash a some kind of database
server connected with the aperture or

288
00:18:28,580 --> 00:18:33,050
for example engine X with a different
instance for at Php FBM

289
00:18:33,050 --> 00:18:36,340
and they're on your application your
publication on it

290
00:18:36,340 --> 00:18:40,730
and it is easily a.m. started

291
00:18:40,730 --> 00:18:43,900
all the containers will be connected

292
00:18:43,900 --> 00:18:48,120
and linked and avail available to
connect from those

293
00:18:48,120 --> 00:18:51,689
the though from that set up core OS

294
00:18:51,690 --> 00:18:55,390
is a lose distribution which is

295
00:18:55,390 --> 00:18:58,990
them completely setup

296
00:18:58,990 --> 00:19:03,030
was only for running docker on the front
in containers

297
00:19:03,030 --> 00:19:08,649
and its a.m. it's acted that way that

298
00:19:08,650 --> 00:19:11,740
its uses you could use its to alarm

299
00:19:11,740 --> 00:19:16,679
deploy on multiple servers and it has a

300
00:19:16,679 --> 00:19:19,910
really interesting way of upgrading its
software

301
00:19:19,910 --> 00:19:23,380
so you have two instances alva core OS

302
00:19:23,380 --> 00:19:27,570
complete chorus though one that's
running is read-only

303
00:19:27,570 --> 00:19:32,389
at the other parties a on the write two
books on

304
00:19:32,390 --> 00:19:37,640
so writeable when you update they just
switch and if something bad happens you

305
00:19:37,640 --> 00:19:44,179
can just switch back

306
00:19:44,179 --> 00:19:48,760
so there are a couple of workflows that
you could use with for working with

307
00:19:48,760 --> 00:19:52,169
a docker injures soda containers

308
00:19:52,169 --> 00:19:57,610
a for example you could develop inside a
single run in container

309
00:19:57,610 --> 00:20:01,049
as you read in our single little machine
so

310
00:20:01,049 --> 00:20:04,158
you could with every service that you
need inside one

311
00:20:04,159 --> 00:20:08,370
a doctor container and work on it so

312
00:20:08,370 --> 00:20:11,469
there's a bays image riches based on

313
00:20:11,470 --> 00:20:15,250
open to 1404 and you could at everything

314
00:20:15,250 --> 00:20:19,149
that you need on it and committed to
have the thats

315
00:20:19,149 --> 00:20:25,059
container which is edited by you because
every time you

316
00:20:25,059 --> 00:20:29,158
restart the container all your changes
are lost if you do not commit

317
00:20:29,159 --> 00:20:32,539
that those changes though that a

318
00:20:32,539 --> 00:20:35,549
by system-level that you created

319
00:20:35,549 --> 00:20:38,840
the second one is the preferred workflow

320
00:20:38,840 --> 00:20:43,449
as it leverage containers immortalize
each service that you need

321
00:20:43,450 --> 00:20:47,419
early you could around in a separate
container and then just link them

322
00:20:47,419 --> 00:20:51,370
and

323
00:20:51,370 --> 00:20:54,969
you will need to have embrace user
reusability of doctor fires

324
00:20:54,970 --> 00:20:58,669
so the if you're making your own tucker
files

325
00:20:58,669 --> 00:21:01,809
as you should write a general
requirements

326
00:21:01,809 --> 00:21:05,750
early commit and name relevant
checkpoint and live com

327
00:21:05,750 --> 00:21:08,760
customizations last so if you have

328
00:21:08,760 --> 00:21:11,870
over to what do you need what are your
general needs

329
00:21:11,870 --> 00:21:15,379
you should write it them first commit
that a.m.

330
00:21:15,380 --> 00:21:20,490
doctor file and then ad on a different
branch or something

331
00:21:20,490 --> 00:21:26,230
what you need for a different project
there's also the so-called at

332
00:21:26,230 --> 00:21:29,919
plus to build routine when you add the

333
00:21:29,919 --> 00:21:33,320
destructions so with a doctor at command
you can copy

334
00:21:33,320 --> 00:21:37,070
for example the source from your host
machine inside the container

335
00:21:37,070 --> 00:21:40,309
and then you could just commit and thats

336
00:21:40,309 --> 00:21:45,080
of new version of your application so
new version of a container that

337
00:21:45,080 --> 00:21:49,070
is for the running with exact versions
of

338
00:21:49,070 --> 00:21:55,240
the services and your application

339
00:21:55,240 --> 00:21:55,760
questions

340
00:21:55,760 --> 00:22:00,310
yes yes

341
00:22:00,310 --> 00:22:07,200
like this

342
00:22:07,200 --> 00:22:08,919
this

343
00:22:08,919 --> 00:22:13,140
this them I

344
00:22:13,140 --> 00:22:17,500
police you %uh restorers

345
00:22:17,500 --> 00:22:21,750
laws live here

346
00:22:21,750 --> 00:22:24,380
there are several techniques for that

347
00:22:24,380 --> 00:22:28,429
of one technique is to use for example
and FS

348
00:22:28,429 --> 00:22:31,540
or two a a

349
00:22:31,540 --> 00:22:35,860
to storage that uses external storage

350
00:22:35,860 --> 00:22:39,549
so the any any files

351
00:22:39,549 --> 00:22:44,730
any data that you don't want to commit
with the doctor container

352
00:22:44,730 --> 00:22:49,120
you have to store it outside the
container and access it from

353
00:22:49,120 --> 00:22:52,699
a from the container so you make it

354
00:22:52,700 --> 00:22:56,309
available for the services that run
inside the container

355
00:22:56,309 --> 00:23:00,370
the other one which is a for other
popular to use

356
00:23:00,370 --> 00:23:04,659
a that the container so use one
container

357
00:23:04,660 --> 00:23:08,710
that has access to all your data on your
filesystem your hosts file system

358
00:23:08,710 --> 00:23:11,809
and to use that container as

359
00:23:11,809 --> 00:23:15,480
I'll proxy a router or something like
that

360
00:23:15,480 --> 00:23:19,250
in that a sense to all the other doctor
containers

361
00:23:19,250 --> 00:23:23,480
which will be banned a.m. accessing the
files

362
00:23:23,480 --> 00:23:25,790
this is a

363
00:23:25,790 --> 00:23:28,800
yes something like that no question

364
00:23:28,800 --> 00:23:29,649
yep

365
00:23:29,650 --> 00:23:30,830
I'm

366
00:23:30,830 --> 00:23:34,178
you saying something about layering
files

367
00:23:34,179 --> 00:23:37,490
the you must yes University you while

368
00:23:37,490 --> 00:23:40,720
my ass a bitter earth

369
00:23:40,720 --> 00:23:43,950
btrfs so but reverse and

370
00:23:43,950 --> 00:23:47,029
mediocre question his what you

371
00:23:47,029 --> 00:23:50,460
two layers the opens users lost

372
00:23:50,460 --> 00:23:52,750
while

373
00:23:52,750 --> 00:23:56,780
how long they are you with us loneliness

374
00:23:56,780 --> 00:23:57,910
all

375
00:23:57,910 --> 00:24:01,340
another late followers only a small
wheres

376
00:24:01,340 --> 00:24:05,560
you don't think Clara when you can take
the first layer out because they're

377
00:24:05,560 --> 00:24:06,250
dependent

378
00:24:06,250 --> 00:24:09,760
so you only commit the diff well yes

379
00:24:09,760 --> 00:24:14,950
but on the other hand the the docker
containers can share the

380
00:24:14,950 --> 00:24:18,590
the fire system so for example

381
00:24:18,590 --> 00:24:21,720
if you create from a base image many

382
00:24:21,720 --> 00:24:25,070
many doctor instances at day which share

383
00:24:25,070 --> 00:24:29,620
those does filers on to that level that
you at something that's different

384
00:24:29,620 --> 00:24:32,360
from the base image

385
00:24:32,360 --> 00:24:34,070
tuned

386
00:24:34,070 --> 00:24:37,620
players players niece change

387
00:24:37,620 --> 00:24:40,039
same while

388
00:24:40,039 --> 00:24:41,860
lost jewish

389
00:24:41,860 --> 00:24:43,830
exchange one of those players

390
00:24:43,830 --> 00:24:46,399
they have we use

391
00:24:46,400 --> 00:24:48,960
well guns yes

392
00:24:48,960 --> 00:24:53,800
yes you have a dependency only Journal
yes something that

393
00:24:53,800 --> 00:24:57,159
my happiness you use she

394
00:24:57,160 --> 00:25:03,330
yes so you mean in this part yeah

395
00:25:03,330 --> 00:25:06,490
yes it good it could but

396
00:25:06,490 --> 00:25:11,690
yet the images are dependent so every
layer is dependent on

397
00:25:11,690 --> 00:25:14,720
they are the one in a mess follows

398
00:25:14,720 --> 00:25:21,720
parish yes yes so yeah every every layer
has its own Hashim its

399
00:25:21,910 --> 00:25:25,680
dependent any more questions

400
00:25:25,680 --> 00:25:28,830
yes I nations

401
00:25:28,830 --> 00:25:33,580
yes the mess number reason no

402
00:25:33,580 --> 00:25:36,658
at

403
00:25:36,659 --> 00:25:39,759
this mill we're going to be no

404
00:25:39,759 --> 00:25:45,799
is involved there's a

405
00:25:45,799 --> 00:25:47,500
is

406
00:25:47,500 --> 00:25:49,460
I share

407
00:25:49,460 --> 00:25:54,590
same series and

408
00:25:54,590 --> 00:25:58,519
this subtle

409
00:25:58,519 --> 00:26:00,230
yeah

410
00:26:00,230 --> 00:26:01,029
jazz

411
00:26:01,029 --> 00:26:04,789
sure cables loomed

412
00:26:04,789 --> 00:26:06,090
review

413
00:26:06,090 --> 00:26:10,959
the not this yes so you have your hands

414
00:26:10,960 --> 00:26:14,820
yes yes

415
00:26:14,820 --> 00:26:18,080
he should the

416
00:26:18,080 --> 00:26:18,790
No

417
00:26:18,790 --> 00:26:23,670
you I on our him

418
00:26:23,670 --> 00:26:25,210
C

419
00:26:25,210 --> 00:26:30,500
or with I a up

420
00:26:30,500 --> 00:26:35,460
ass rooms oakland's

421
00:26:35,460 --> 00:26:38,580
that he's is C

422
00:26:38,580 --> 00:26:42,760
is I yes if you

423
00:26:42,760 --> 00:26:46,730
years yep

424
00:26:46,730 --> 00:26:49,890
possible and

425
00:26:49,890 --> 00:26:51,070
yes

426
00:26:51,070 --> 00:26:52,530
game

427
00:26:52,530 --> 00:26:57,750
I'll say his lace you

428
00:26:57,750 --> 00:27:00,750
along with the next two

429
00:27:00,750 --> 00:27:04,020
bottomless to the host machine so 2x

430
00:27:04,020 --> 00:27:07,510
escape from the container yet was
terrifically it is

431
00:27:07,510 --> 00:27:11,610
possible and that part is still under
development

432
00:27:11,610 --> 00:27:15,159
so that's why I'm you should use the

433
00:27:15,160 --> 00:27:18,810
using namespace which should deal with
that on the other hand

434
00:27:18,810 --> 00:27:23,610
but there are some projects that deal
with this kind the security issue via

435
00:27:23,610 --> 00:27:25,159
Etsy Linux

436
00:27:25,160 --> 00:27:28,320
as the Linux security entrance

437
00:27:28,320 --> 00:27:31,409
use

438
00:27:31,410 --> 00:27:35,030
small you

439
00:27:35,030 --> 00:27:38,250
to games yep your one

440
00:27:38,250 --> 00:27:42,400
as he said yes well

441
00:27:42,400 --> 00:27:45,990
his less you have a

442
00:27:45,990 --> 00:27:50,330
him well here's the user is probably

443
00:27:50,330 --> 00:27:53,418
yes yes because I'll when

444
00:27:53,419 --> 00:27:56,700
the user logs in there are some
temporary files which will be lost

445
00:27:56,700 --> 00:27:57,910
because the docker

446
00:27:57,910 --> 00:28:01,809
the container will rebbe will be
restarted

447
00:28:01,809 --> 00:28:07,100
so everything that's not committed will
be lost yes

448
00:28:07,100 --> 00:28:14,100
with

449
00:28:17,419 --> 00:28:21,669
wuz all he

450
00:28:21,669 --> 00:28:28,500
if it's inside yes yes that's why you
have to use external storage for

451
00:28:28,500 --> 00:28:29,610
containers for

452
00:28:29,610 --> 00:28:36,610
a sequels tickle server

453
00:28:37,280 --> 00:28:42,149
this dan you can't use doctor

454
00:28:42,150 --> 00:28:45,390
so yet but

455
00:28:45,390 --> 00:28:50,060
almost every the solution has it every
modern distribution has it

456
00:28:50,060 --> 00:28:57,060
yes

457
00:28:58,940 --> 00:29:01,310
no no you use the same colonel

458
00:29:01,310 --> 00:29:04,490
for every every doctor and yep

459
00:29:04,490 --> 00:29:11,490
and another answer for your question
about security core OS has that

460
00:29:11,580 --> 00:29:15,790
a.m. security issue kind apps circle
went up with the read-only

461
00:29:15,790 --> 00:29:21,590
filesystem yes

462
00:29:21,590 --> 00:29:23,120
low

463
00:29:23,120 --> 00:29:26,060
round

464
00:29:26,060 --> 00:29:27,960
Wong

465
00:29:27,960 --> 00:29:31,000
losses little hmm

466
00:29:31,000 --> 00:29:34,740
well on is the same colonel

467
00:29:34,740 --> 00:29:39,900
yes the holiday

468
00:29:39,900 --> 00:29:42,960
over relational okay

469
00:29:42,960 --> 00:29:44,830
militias for long

470
00:29:44,830 --> 00:29:48,240
gold no no

471
00:29:48,240 --> 00:29:55,240
know it's it's limited is limited so you
can't this

472
00:29:56,179 --> 00:30:01,769
a yes him out his

473
00:30:01,769 --> 00:30:04,860
lines

474
00:30:04,860 --> 00:30:08,840
yeah his race

475
00:30:08,840 --> 00:30:13,449
yes this

476
00:30:13,450 --> 00:30:16,990
this yes

477
00:30:16,990 --> 00:30:20,059
the advance shove chorus

478
00:30:20,059 --> 00:30:24,500
is that it's suspicious the its
specially built for running

479
00:30:24,500 --> 00:30:28,170
a containers doctor containers so it's

480
00:30:28,170 --> 00:30:31,400
everything else is dropped off so it's

481
00:30:31,400 --> 00:30:38,400
you could use it only for that

482
00:30:38,870 --> 00:30:42,149
yes there are some a tools to manage

483
00:30:42,150 --> 00:30:46,740
a multiple deployments and

484
00:30:46,740 --> 00:30:51,050
well you could easily use it Panamax or
you could try it too

485
00:30:51,050 --> 00:30:54,309
install its on ARM Fullmetal

486
00:30:54,309 --> 00:30:57,660
so bare metal or you could run it you
know vagrant

487
00:30:57,660 --> 00:31:01,710
up any more questions

488
00:31:01,710 --> 00:31:06,250
yeah and also

489
00:31:06,250 --> 00:31:09,790
which is very interesting about the
container

490
00:31:09,790 --> 00:31:12,990
that they could see the be scaled very a

491
00:31:12,990 --> 00:31:17,280
easily horizontally and vertically so
you can very easily at

492
00:31:17,280 --> 00:31:20,770
a around or at storage to them

493
00:31:20,770 --> 00:31:25,590
and also to extracts from sufrir

494
00:31:25,590 --> 00:31:29,919
a RAM from them and you could easily

495
00:31:29,920 --> 00:31:33,140
multiplied instances that are running
because you have to

496
00:31:33,140 --> 00:31:36,460
committed a image which you could just
copy

497
00:31:36,460 --> 00:31:41,480
anywhere else cents just random yes

498
00:31:41,480 --> 00:31:46,510
is yes easier down from the original
motion

499
00:31:46,510 --> 00:31:49,570
no very the No

500
00:31:49,570 --> 00:31:53,120
this itself yes on the way

501
00:31:53,120 --> 00:32:00,039
for manger through here even the mind

502
00:32:00,039 --> 00:32:02,059
yes you

503
00:32:02,059 --> 00:32:03,340
well there

504
00:32:03,340 --> 00:32:08,330
this yes but for example compares to
appear so much in a full-blown we saw

505
00:32:08,330 --> 00:32:08,970
machine

506
00:32:08,970 --> 00:32:14,630
it's very hard to Mt other and that it's
not using and two subs tracted at

507
00:32:14,630 --> 00:32:18,150
from the doctor its easier so you can't
control

508
00:32:18,150 --> 00:32:22,630
how much around us the process inside
the container needs and to

509
00:32:22,630 --> 00:32:25,860
subtract killed that his

510
00:32:25,860 --> 00:32:28,360
this ridge

511
00:32:28,360 --> 00:32:30,320
earth

512
00:32:30,320 --> 00:32:35,010
yes there's

513
00:32:35,010 --> 00:32:38,470
just not yet s

514
00:32:38,470 --> 00:32:41,570
as far as I know not yet but they are
working on it

515
00:32:41,570 --> 00:32:45,850
and it should be March a faster than the

516
00:32:45,850 --> 00:32:50,709
filling up the balloon and its waiting

517
00:32:50,710 --> 00:32:53,080
this

518
00:32:53,080 --> 00:32:54,389
you

519
00:32:54,390 --> 00:32:56,890
no

520
00:32:56,890 --> 00:33:00,420
for example room

521
00:33:00,420 --> 00:33:04,890
this the

522
00:33:04,890 --> 00:33:07,590
if it's not used by a process you could
extract

523
00:33:07,590 --> 00:33:12,169
so you could the this

524
00:33:12,170 --> 00:33:16,440
home yes yes you could limits the amount
around per container:

525
00:33:16,440 --> 00:33:22,700
yes

526
00:33:22,700 --> 00:33:25,610
yes

527
00:33:25,610 --> 00:33:28,260
world

528
00:33:28,260 --> 00:33:31,080
well as if you think yeah

529
00:33:31,080 --> 00:33:34,399
you I gay for your

530
00:33:34,400 --> 00:33:38,550
me my as luv I are you sure

531
00:33:38,550 --> 00:33:42,340
slow I

532
00:33:42,340 --> 00:33:46,559
all process I from the moment

533
00:33:46,559 --> 00:33:50,330
all I into this knowing love you

534
00:33:50,330 --> 00:33:54,580
well if you think about over committing
to resources

535
00:33:54,580 --> 00:33:57,779
that is possible to at to the containers

536
00:33:57,779 --> 00:34:01,570
the Morris source then you physically
hat bottle and

537
00:34:01,570 --> 00:34:05,559
process inside the container start using
call that resources than

538
00:34:05,559 --> 00:34:09,449
you have to be very creative this

539
00:34:09,449 --> 00:34:10,658
you

540
00:34:10,659 --> 00:34:12,870
the

541
00:34:12,870 --> 00:34:15,668
yes the

542
00:34:15,668 --> 00:34:18,819
and more questions yes it is right

543
00:34:18,820 --> 00:34:23,400
my go here moms

544
00:34:23,400 --> 00:34:25,620
you ion kno

545
00:34:25,620 --> 00:34:29,279
not just because dear didn't it's so

546
00:34:29,280 --> 00:34:32,550
it says on their website it's not yet
stable so

547
00:34:32,550 --> 00:34:37,150
they're working I think they're working
with open be sad because they are

548
00:34:37,150 --> 00:34:42,040
finance partially by parallels and Pro
is technology is open we set so I assume

549
00:34:42,040 --> 00:34:42,600
that it will

550
00:34:42,600 --> 00:34:46,520
for starts working with open reside and
then we'd the rest to the containers

551
00:34:46,520 --> 00:34:49,949
this

552
00:34:49,949 --> 00:34:53,049
more questions

553
00:34:53,050 --> 00:34:56,929
the imprints

554
00:34:56,929 --> 00:34:59,020
then

555
00:34:59,020 --> 00:35:04,700
years

556
00:35:04,700 --> 00:35:10,500
you

557
00:35:10,500 --> 00:35:10,750
on

