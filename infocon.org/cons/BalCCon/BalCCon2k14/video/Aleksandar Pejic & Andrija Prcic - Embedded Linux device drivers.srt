1
00:00:06,750 --> 00:00:08,420
that

2
00:00:08,420 --> 00:00:14,030
I

3
00:00:14,030 --> 00:00:21,020
well West

4
00:00:21,020 --> 00:00:28,020
air whatever care to hide

5
00:00:29,940 --> 00:00:33,610
I I welcome every month to a lil
workshop

6
00:00:33,610 --> 00:00:37,840
a just a few words before I start

7
00:00:37,840 --> 00:00:42,130
we come from so what it's a a little
town on the north of serbia

8
00:00:42,130 --> 00:00:46,660
and the with itself so development for
embedded systems

9
00:00:46,660 --> 00:00:51,089
so this a subjective this

10
00:00:51,090 --> 00:00:54,480
workshop is embedded Linux device
drivers

11
00:00:54,480 --> 00:00:59,150
a I will keeper are all

12
00:00:59,150 --> 00:01:03,650
give are short introduction I will keep
it short because

13
00:01:03,650 --> 00:01:08,890
the we would like you to have the more
hands-on experience than the

14
00:01:08,890 --> 00:01:14,799
long talk

15
00:01:14,799 --> 00:01:19,180
so about the embedded systems what is
more

16
00:01:19,180 --> 00:01:22,220
most characteristic about an embedded
system

17
00:01:22,220 --> 00:01:25,590
it's a it's dedicated function so

18
00:01:25,590 --> 00:01:30,229
by the finish in are embedded system is
a system which is a part of a larger

19
00:01:30,229 --> 00:01:31,000
system

20
00:01:31,000 --> 00:01:34,220
which one dedicated specialized function

21
00:01:34,220 --> 00:01:38,200
it's the usually based on
microcontrollers

22
00:01:38,200 --> 00:01:41,250
microcontrollers the are basically

23
00:01:41,250 --> 00:01:46,640
Cebu's which the differ to standard
general-purpose jib use because

24
00:01:46,640 --> 00:01:50,200
they usually have or they always have

25
00:01:50,200 --> 00:01:53,679
onboard memory and peripheral
controllers

26
00:01:53,679 --> 00:01:58,330
one more thing which is important from
the standpoint of the microcontrollers

27
00:01:58,330 --> 00:02:00,000
is the optimization

28
00:02:00,000 --> 00:02:04,570
that means that a microcontroller is
usually highly optimized for

29
00:02:04,570 --> 00:02:07,630
I'll special task for for example

30
00:02:07,630 --> 00:02:09,869
there are a

31
00:02:09,869 --> 00:02:13,690
digital all the a process or the SP's
the

32
00:02:13,690 --> 00:02:16,959
another the

33
00:02:16,959 --> 00:02:20,420
think about the microcontroller
controllers today

34
00:02:20,420 --> 00:02:24,130
they are there is a very at the OFC

35
00:02:24,130 --> 00:02:27,650
applications basically a

36
00:02:27,650 --> 00:02:31,570
from from the

37
00:02:31,570 --> 00:02:35,250
applications in consumer electronics
doing just industrial

38
00:02:35,250 --> 00:02:41,270
the applications then there is health
care applications military and so on

39
00:02:41,270 --> 00:02:46,630
from the hardware standpoint

40
00:02:46,630 --> 00:02:51,079
as I already mentioned the specific
thing is that the peripherals are

41
00:02:51,080 --> 00:02:54,400
on chat you have all the needed but if
ariel's

42
00:02:54,400 --> 00:02:59,290
on your microcontroller the many CPR
detectors

43
00:02:59,290 --> 00:03:03,160
are produced so the

44
00:03:03,160 --> 00:03:06,910
for example an IPS the

45
00:03:06,910 --> 00:03:10,210
the some proprietary like or

46
00:03:10,210 --> 00:03:13,280
and I S the architecture the

47
00:03:13,280 --> 00:03:16,380
however today the most popular
Architektur is

48
00:03:16,380 --> 00:03:20,370
arm by far the from the standpoint

49
00:03:20,370 --> 00:03:23,790
of the world length they are usually
from aids to 32 bits

50
00:03:23,790 --> 00:03:27,049
but today for example the ARM processors
sorrow

51
00:03:27,050 --> 00:03:30,700
available in 64 bits as well the

52
00:03:30,700 --> 00:03:34,440
another great thing about these platform
is that there is

53
00:03:34,440 --> 00:03:37,660
a lot of cheap development boards so
anyone can

54
00:03:37,660 --> 00:03:41,270
start working with them for example the

55
00:03:41,270 --> 00:03:44,950
are the No which you already probably
know

56
00:03:44,950 --> 00:03:48,359
another the important

57
00:03:48,360 --> 00:03:52,570
the term is SLC system-on-a-chip this is
basically

58
00:03:52,570 --> 00:03:57,730
a highly integrated microcontroller
which consists usually of

59
00:03:57,730 --> 00:04:01,440
more than one microcontroller you have
one sort of a

60
00:04:01,440 --> 00:04:05,040
general microcontroller and for example
hardware decoder

61
00:04:05,040 --> 00:04:10,230
and the set the father chips which do
for example digital the processing and

62
00:04:10,230 --> 00:04:10,780
so on

63
00:04:10,780 --> 00:04:14,920
saw

64
00:04:14,920 --> 00:04:18,450
the from the standpoint of Peru for
reals

65
00:04:18,450 --> 00:04:18,870
the

66
00:04:18,870 --> 00:04:24,190
the there is really almost anything that
you could the

67
00:04:24,190 --> 00:04:28,070
imagine from Syria Communications Inc
interfaces

68
00:04:28,070 --> 00:04:32,110
to synchronous serial communication then
there are the union is there a

69
00:04:32,110 --> 00:04:36,100
Universal Serial Bus controllers network
interfaces

70
00:04:36,100 --> 00:04:39,949
Field buses these are mostly
characteristic for industrial

71
00:04:39,949 --> 00:04:43,020
applications then the timorese

72
00:04:43,020 --> 00:04:46,080
and the discrete

73
00:04:46,080 --> 00:04:49,440
input/output general-purpose
input/output ands

74
00:04:49,440 --> 00:04:53,260
analog to digital or digital to analog
converters

75
00:04:53,260 --> 00:04:55,530
so

76
00:04:55,530 --> 00:04:58,570
this is the typical hardware which you
will find one

77
00:04:58,570 --> 00:05:02,250
microcontroller not all but let's say a
combination of these

78
00:05:02,250 --> 00:05:06,780
so a about them bad Linux

79
00:05:06,780 --> 00:05:12,400
the its similar to the microcontroller
its purpose-built

80
00:05:12,400 --> 00:05:15,969
so we optimize it for the application
which

81
00:05:15,970 --> 00:05:19,000
we needed for the

82
00:05:19,000 --> 00:05:22,500
it by definition it's the

83
00:05:22,500 --> 00:05:27,630
consists of a colonel and the minimal
user space the minimal use a space

84
00:05:27,630 --> 00:05:31,170
might be the made usually with the
buildroot

85
00:05:31,170 --> 00:05:36,690
or it might be embedded into the kernel
itself it's the so called in at around

86
00:05:36,690 --> 00:05:42,400
FS from the

87
00:05:42,400 --> 00:05:46,210
a standpoint of the device drivers which
are our topic today

88
00:05:46,210 --> 00:05:49,830
the you can see that's

89
00:05:49,830 --> 00:05:53,169
the device driver actually provides

90
00:05:53,170 --> 00:05:56,180
a connection between the physical device

91
00:05:56,180 --> 00:05:59,900
and the use a space so

92
00:05:59,900 --> 00:06:04,270
that's the role of the driver from the
standpoint of Linux Linux

93
00:06:04,270 --> 00:06:08,810
the creates the very at the very a tix
classes of devices

94
00:06:08,810 --> 00:06:12,340
they are at for devices

95
00:06:12,340 --> 00:06:15,469
storage devices USB devices and so on

96
00:06:15,470 --> 00:06:19,620
typical operations when the you want the
rights

97
00:06:19,620 --> 00:06:24,010
a driver is memory mapping often

98
00:06:24,010 --> 00:06:27,180
internal tunneling handling and
application of

99
00:06:27,180 --> 00:06:32,530
various time routines for example
application of high-resolution timorese

100
00:06:32,530 --> 00:06:33,250
and so on

101
00:06:33,250 --> 00:06:37,220
and

102
00:06:37,220 --> 00:06:41,330
sensor our topic is

103
00:06:41,330 --> 00:06:45,349
or are subject is a workshop I would
like to

104
00:06:45,350 --> 00:06:49,370
give the world to my colleague Andrea
who will now

105
00:06:49,370 --> 00:06:53,470
proceeds with the actual workshop

106
00:06:53,470 --> 00:06:57,540
but the in the meantime before we switch

107
00:06:57,540 --> 00:07:02,100
the you can find all the sources for our
workshop on these

108
00:07:02,100 --> 00:07:05,560
URL's my name is underprivileged a I
will

109
00:07:05,560 --> 00:07:08,910
dodi practical demonstration all this

110
00:07:08,910 --> 00:07:12,210
are there soul a

111
00:07:12,210 --> 00:07:16,460
first all a this presentation and the
practical example is

112
00:07:16,460 --> 00:07:19,570
is built upon is based upon buildroot

113
00:07:19,570 --> 00:07:23,200
so in order to builders you actually
does

114
00:07:23,200 --> 00:07:27,659
do the it glow depository you run

115
00:07:27,660 --> 00:07:31,440
a few simple commands soul first all
make Raspberry Pi

116
00:07:31,440 --> 00:07:35,180
the config so this is the default config
for for the Raspberry Pi

117
00:07:35,180 --> 00:07:39,010
the builder to keep in close this it
will a

118
00:07:39,010 --> 00:07:42,800
make a configuration file for this you
can run make

119
00:07:42,800 --> 00:07:45,870
and config to adapt this if you want

120
00:07:45,870 --> 00:07:49,260
and then run make so it will actually
build everything

121
00:07:49,260 --> 00:07:52,370
at that point so it will download

122
00:07:52,370 --> 00:07:55,480
absolutely everything that it needs so
starting from our

123
00:07:55,480 --> 00:07:59,100
compiler for your host computer to the

124
00:07:59,100 --> 00:08:03,170
Linux kernel sources and everything good
that you have selected for the target

125
00:08:03,170 --> 00:08:03,700
platform

126
00:08:03,700 --> 00:08:07,870
and of course depending on your hardware
this can take from

127
00:08:07,870 --> 00:08:13,330
maybe 15 minutes to over on our key

128
00:08:13,330 --> 00:08:15,878
and questions or

129
00:08:15,879 --> 00:08:18,789
non-traditional key and

130
00:08:18,789 --> 00:08:21,870
a presentation and a moment through

131
00:08:21,870 --> 00:08:28,870
but apart a.m.

132
00:08:32,630 --> 00:08:35,610
okay so I have the rent on and its

133
00:08:35,610 --> 00:08:39,380
booting I have already built the entire
build rodin's

134
00:08:39,380 --> 00:08:42,549
copied it to and as the card and it's on
the Raspberry Pi

135
00:08:42,549 --> 00:08:46,060
so this is the system booting and

136
00:08:46,060 --> 00:08:50,709
the wrong from looks like this and but
basically it's very minimal

137
00:08:50,709 --> 00:08:54,290
system okay

138
00:08:54,290 --> 00:09:01,290
and

139
00:09:16,510 --> 00:09:19,519
case I have prepared a few examples and

140
00:09:19,519 --> 00:09:26,519
should have opened most to them key

141
00:09:29,540 --> 00:09:31,810
it so the

142
00:09:31,810 --> 00:09:37,280
most basic example adjusts so this

143
00:09:37,280 --> 00:09:41,079
is the little driver the for single
length driver needs

144
00:09:41,080 --> 00:09:44,720
is and in its function and an exit
function

145
00:09:44,720 --> 00:09:47,890
so you define these a

146
00:09:47,890 --> 00:09:51,350
they have some predefined a template

147
00:09:51,350 --> 00:09:54,750
you can name it as you want you use this

148
00:09:54,750 --> 00:09:58,690
moderate micro to actually defined for
your module

149
00:09:58,690 --> 00:10:02,950
what is the in its function and this
model doesn't really do

150
00:10:02,950 --> 00:10:07,140
much its basically the most basic

151
00:10:07,140 --> 00:10:10,380
GPIO a model that you can have

152
00:10:10,380 --> 00:10:13,939
so when the model initializes here

153
00:10:13,940 --> 00:10:18,730
it will right out hello and then it will

154
00:10:18,730 --> 00:10:22,290
a iterate through this array that have
defined

155
00:10:22,290 --> 00:10:25,730
saudis been numbers are

156
00:10:25,730 --> 00:10:29,130
actually from the datasheet all the
hardware

157
00:10:29,130 --> 00:10:33,040
and I have connected my abilities

158
00:10:33,040 --> 00:10:36,170
directly to these GPIO Ste so

159
00:10:36,170 --> 00:10:39,300
this not random you have to know your
hardware

160
00:10:39,300 --> 00:10:43,699
want to actually do so you need of
course to

161
00:10:43,700 --> 00:10:47,770
do some includes and

162
00:10:47,770 --> 00:10:51,319
basically to rate over the think a
requests

163
00:10:51,320 --> 00:10:55,680
the GPIO that you want to use configure
it does

164
00:10:55,680 --> 00:10:58,790
a note the direction and give it a value

165
00:10:58,790 --> 00:11:02,280
one so it will go to I want to urge

166
00:11:02,280 --> 00:11:05,400
this is trip when she was seen this

167
00:11:05,400 --> 00:11:08,600
case and the core the return function
has two the

168
00:11:08,600 --> 00:11:12,250
in function has two Ritter for the exit
function

169
00:11:12,250 --> 00:11:15,610
a similar things done but in this case

170
00:11:15,610 --> 00:11:19,200
it will actually so it again computer
the output

171
00:11:19,200 --> 00:11:22,340
direction on the GPIO and will give a
value of $0

172
00:11:22,340 --> 00:11:25,630
so it will turn off so doesn't really do

173
00:11:25,630 --> 00:11:29,350
much but this is something that you
start to build from

174
00:11:29,350 --> 00:11:35,300
and I have older a in this case the dust

175
00:11:35,300 --> 00:11:39,569
everything you that you see here is
available already under get absolute can

176
00:11:39,569 --> 00:11:42,628
disclosing its and you can just its

177
00:11:42,629 --> 00:11:45,839
run a simple make command it will

178
00:11:45,839 --> 00:11:49,220
build you'll have a few files

179
00:11:49,220 --> 00:11:52,420
the most important is this one that and
we'd dot

180
00:11:52,420 --> 00:11:55,679
K 0 so that's colonel object or

181
00:11:55,679 --> 00:11:59,019
a module a loadable module so

182
00:11:59,019 --> 00:12:02,999
going back to our as brit by I can login
here

183
00:12:02,999 --> 00:12:06,420
I have already rebuilt and Coppins

184
00:12:06,420 --> 00:12:10,279
all the models here so because they woke
up sometime and

185
00:12:10,279 --> 00:12:13,449
I can't insmod insert module

186
00:12:13,449 --> 00:12:16,498
this first example

187
00:12:16,499 --> 00:12:19,920
and it will say hello and if you look

188
00:12:19,920 --> 00:12:23,899
around here you can actually see some to
Bo's light up

189
00:12:23,899 --> 00:12:28,589
and here as in don't you and if I remove
the module

190
00:12:28,589 --> 00:12:31,929
the model name is actually

191
00:12:31,929 --> 00:12:35,779
raspberry GPIO but I have does rename
the files for

192
00:12:35,779 --> 00:12:40,100
when loading I can distinguish which 1i
want which was I want to load

193
00:12:40,100 --> 00:12:44,629
and when I remove its it will say bye an
adult or not the Tribune does

194
00:12:44,629 --> 00:12:49,540
so simple so

195
00:12:49,540 --> 00:12:53,019
you know there's no dark we do magic in
writing a driver

196
00:12:53,019 --> 00:12:57,399
can actually start very simple so for
the

197
00:12:57,399 --> 00:13:00,720
next example this one

198
00:13:00,720 --> 00:13:04,309
actually starts also from the in this
function

199
00:13:04,309 --> 00:13:08,420
months apart from outputs you can also
have

200
00:13:08,420 --> 00:13:13,498
inputs so imports are purely buttons or
switches or

201
00:13:13,499 --> 00:13:17,170
something similar and of course

202
00:13:17,170 --> 00:13:20,209
just like you requests the you the Dove

203
00:13:20,209 --> 00:13:23,819
GPIO pins for output and you said

204
00:13:23,819 --> 00:13:28,759
I want this one to be an output in the
same man are you do

205
00:13:28,759 --> 00:13:32,100
again our requests for an empty

206
00:13:32,100 --> 00:13:35,420
for a GPIO an essay and I want this to
be an important

207
00:13:35,420 --> 00:13:38,529
and one more thing so

208
00:13:38,529 --> 00:13:41,910
this example does is it initializes
timer

209
00:13:41,910 --> 00:13:45,230
called oblique timer

210
00:13:45,230 --> 00:13:49,450
Richwoods obviously do some blinking and

211
00:13:49,450 --> 00:13:53,250
for so this is defined here

212
00:13:53,250 --> 00:13:57,070
as a global structure so

213
00:13:57,070 --> 00:14:01,260
this you initialize East Timor you say
it has a function and then when

214
00:14:01,260 --> 00:14:06,040
a time at the course this function will
be called and we actually start timer

215
00:14:06,040 --> 00:14:09,660
the so disc daytime Sat

216
00:14:09,660 --> 00:14:12,949
he's fun is function which converts

217
00:14:12,950 --> 00:14:17,230
normal time to jeff is which are
internal to the kernel

218
00:14:17,230 --> 00:14:22,610
timing mechanism so this will do one
second and 0 90 seconds

219
00:14:22,610 --> 00:14:26,370
and of course so when the

220
00:14:26,370 --> 00:14:29,630
timer triggers it will call
dysfunctional

221
00:14:29,630 --> 00:14:34,430
and in here I had defines us that
credible Richwoods

222
00:14:34,430 --> 00:14:37,489
change each time by negated

223
00:14:37,490 --> 00:14:40,910
and for these outputs I

224
00:14:40,910 --> 00:14:44,300
do some Maduro I

225
00:14:44,300 --> 00:14:47,520
random I in all done even numb

226
00:14:47,520 --> 00:14:51,880
number bins woods have different outputs
and I also

227
00:14:51,880 --> 00:14:55,189
readout the input pins so I can

228
00:14:55,190 --> 00:14:58,210
do get value of

229
00:14:58,210 --> 00:15:01,680
I think the been and bring this to the

230
00:15:01,680 --> 00:15:03,329
the bulk terminal

231
00:15:03,330 --> 00:15:09,150
so a the show this so this would be

232
00:15:09,150 --> 00:15:12,430
this while and now its

233
00:15:12,430 --> 00:15:15,579
drinking and

234
00:15:15,580 --> 00:15:19,290
its as I had said its showing the

235
00:15:19,290 --> 00:15:22,300
input values so he has to input pins
define

236
00:15:22,300 --> 00:15:25,540
and they are both at a high level the

237
00:15:25,540 --> 00:15:28,670
this is because how the harder it
connects I have

238
00:15:28,670 --> 00:15:31,740
connect to this d buttons to short the

239
00:15:31,740 --> 00:15:34,820
input been to the ground when is pushed
so I'll

240
00:15:34,820 --> 00:15:41,260
doctor that this

241
00:15:41,260 --> 00:15:43,910
one of these got there

242
00:15:43,910 --> 00:15:45,550
you know

243
00:15:45,550 --> 00:15:48,250
novel

244
00:15:48,250 --> 00:15:51,240
this

245
00:15:51,240 --> 00:15:53,590
okay so this mattered unearth

246
00:15:53,590 --> 00:15:56,700
reading out imports at predefined time
intervals is called

247
00:15:56,700 --> 00:16:00,240
bowling but it's not really a great idea

248
00:16:00,240 --> 00:16:04,840
because a for fast signals or if
somebody's board

249
00:16:04,840 --> 00:16:08,770
you can actually put a release the
button before timer triggers

250
00:16:08,770 --> 00:16:12,560
and this something you would not catch
because

251
00:16:12,560 --> 00:16:16,180
at the boat I'm should read this the it
will be in the

252
00:16:16,180 --> 00:16:19,199
high-value so you can miss some signals

253
00:16:19,200 --> 00:16:23,830
and this is where interrupts come in and
interrupt is

254
00:16:23,830 --> 00:16:27,020
a sort of a signal in the process or

255
00:16:27,020 --> 00:16:30,130
when something changes and you can

256
00:16:30,130 --> 00:16:34,120
for all these the DPI owes separate
unloaders

257
00:16:34,120 --> 00:16:38,240
to stop it

258
00:16:38,240 --> 00:16:41,430
okay so the next one is

259
00:16:41,430 --> 00:16:45,030
interrupts so a similar

260
00:16:45,030 --> 00:16:50,140
thing for the timer so I'm that the same
but I have also done

261
00:16:50,140 --> 00:16:53,750
so for this people pins I have

262
00:16:53,750 --> 00:16:57,260
requested the GPIO but I can also
request

263
00:16:57,260 --> 00:17:01,180
interrupt a IR Q is interrupt requests

264
00:17:01,180 --> 00:17:05,730
so i forward this the DPI number two and
threw up

265
00:17:05,730 --> 00:17:08,730
and do some more flags so I once

266
00:17:08,730 --> 00:17:12,089
to be notified when this signal is
rising

267
00:17:12,089 --> 00:17:16,720
and when this signal is falling so when
it changes from 0 to 1

268
00:17:16,720 --> 00:17:20,740
and one from 120 so in both of these
cases

269
00:17:20,740 --> 00:17:23,859
are real gets this function called

270
00:17:23,859 --> 00:17:27,770
reads my GPIO well actually with the

271
00:17:27,770 --> 00:17:31,230
interrupt number and then I conclude
that so

272
00:17:31,230 --> 00:17:35,900
other than that this example does
basically the same thing so it's

273
00:17:35,900 --> 00:17:39,970
again when it's unloaded it'll turn on
turn off everything and

274
00:17:39,970 --> 00:17:43,450
it still has that Steiner so this is d

275
00:17:43,450 --> 00:17:47,920
example number tree

276
00:17:47,920 --> 00:17:50,060
K so again its linking

277
00:17:50,060 --> 00:17:54,080
its bowling but when I also touch the
bottom

278
00:17:54,080 --> 00:17:57,439
it will show up immediately thats

279
00:17:57,440 --> 00:18:04,440
the signal has been requested under so
this

280
00:18:12,530 --> 00:18:15,570
okay so as you can see it still bowling
is still reeling

281
00:18:15,570 --> 00:18:19,980
but even in the middle if something
changes it will notified right away

282
00:18:19,980 --> 00:18:23,050
so basically thats trigger din

283
00:18:23,050 --> 00:18:28,260
interrupt handler function is called
this one in

284
00:18:28,260 --> 00:18:31,910
I get the interrupt number a bit I
converts to

285
00:18:31,910 --> 00:18:35,240
GPIO number and then I readout that
value

286
00:18:35,240 --> 00:18:39,800
and I bring that to the terminal so as
you have already seen on the example

287
00:18:39,800 --> 00:18:42,990
so it's nothing really the complicated

288
00:18:42,990 --> 00:18:46,640
but it's very useful that you don't
really have to asks

289
00:18:46,640 --> 00:18:51,080
so sure doing communication too hard the
trip don't really have to bother that

290
00:18:51,080 --> 00:18:51,740
chief reed

291
00:18:51,740 --> 00:18:54,800
are you ready are you ready are you
ready are you ready

292
00:18:54,800 --> 00:18:57,930
no it real notify you when it's ready

293
00:18:57,930 --> 00:19:00,980
you know at that moment the trip will

294
00:19:00,980 --> 00:19:04,790
attendance output level and actually do
something like pushing a button

295
00:19:04,790 --> 00:19:09,850
and you get this interrupt and when you
get this interrupt you can actually

296
00:19:09,850 --> 00:19:13,959
ask that cheap exactly hey what's up
what do you want to tell me

297
00:19:13,960 --> 00:19:18,100
and then to say okay I have some data
ready for you I

298
00:19:18,100 --> 00:19:21,610
or there something wrong or something
whatever

299
00:19:21,610 --> 00:19:24,830
but you don't really have to constantly
ask

300
00:19:24,830 --> 00:19:28,000
and is really bad practice to constantly
all

301
00:19:28,000 --> 00:19:31,610
signals and ask they are ready are you
ready are you ready

302
00:19:31,610 --> 00:19:35,340
okay so a going on

303
00:19:35,340 --> 00:19:38,699
a okay so we have

304
00:19:38,700 --> 00:19:42,560
time are which blinks but wouldn't it be
nice to actually

305
00:19:42,560 --> 00:19:46,419
be able to turn that of or on on demand

306
00:19:46,420 --> 00:19:49,830
so this is what's the next sample oz

307
00:19:49,830 --> 00:19:52,919
so a the

308
00:19:52,920 --> 00:19:56,420
initializing functions has grown quite a
lot

309
00:19:56,420 --> 00:19:59,800
so for this for studying you need

310
00:19:59,800 --> 00:20:03,120
to register or device class

311
00:20:03,120 --> 00:20:06,919
so your device driver needs to belong
somewhere

312
00:20:06,920 --> 00:20:10,550
and that some were at war would and up

313
00:20:10,550 --> 00:20:13,580
in here

314
00:20:13,580 --> 00:20:19,189
and

315
00:20:19,190 --> 00:20:19,680
so

316
00:20:19,680 --> 00:20:22,690
UN sis class you have the

317
00:20:22,690 --> 00:20:25,880
different classes for a device drivers

318
00:20:25,880 --> 00:20:29,000
and inside that those you

319
00:20:29,000 --> 00:20:32,100
would then have various drivers and
components

320
00:20:32,100 --> 00:20:35,409
so first we need to a make a class

321
00:20:35,410 --> 00:20:38,530
where this driver would would be long

322
00:20:38,530 --> 00:20:41,610
and of course I have Picts an
appropriate name

323
00:20:41,610 --> 00:20:46,290
knock-on 2014 and

324
00:20:46,290 --> 00:20:49,620
through complete so next thing

325
00:20:49,620 --> 00:20:53,389
is to read author character device and
well

326
00:20:53,390 --> 00:20:58,310
character devices are some legacy but
not really legacy but

327
00:20:58,310 --> 00:21:01,320
the first type of driver that ever

328
00:21:01,320 --> 00:21:05,149
remains so basically they emulates a
serial

329
00:21:05,150 --> 00:21:09,040
inputs and outputs reads a file so you
have

330
00:21:09,040 --> 00:21:12,330
a Berto file which has some reading
rides

331
00:21:12,330 --> 00:21:16,570
handlers defined and you can write
something to that file

332
00:21:16,570 --> 00:21:20,550
and this would be returned to your
hardware or a memory buffer some Thai

333
00:21:20,550 --> 00:21:21,030
that

334
00:21:21,030 --> 00:21:24,920
and again when you read something it
would go in the other direction

335
00:21:24,920 --> 00:21:29,720
but a this will be handling the next
example

336
00:21:29,720 --> 00:21:33,030
but for the starters you need to
actually have on

337
00:21:33,030 --> 00:21:36,139
objects in crawlspace Richwoods a

338
00:21:36,140 --> 00:21:40,260
have some other structures defined with
it so first you need to define one of

339
00:21:40,260 --> 00:21:40,720
these

340
00:21:40,720 --> 00:21:43,800
character devices k so your def I

341
00:21:43,800 --> 00:21:46,830
you click create a class you register
character device

342
00:21:46,830 --> 00:21:51,659
you create that device so you can
actually had something the

343
00:21:51,660 --> 00:21:57,400
in the whatever and

344
00:21:57,400 --> 00:22:01,700
that file woods be registered in created
automatically

345
00:22:01,700 --> 00:22:04,820
and then with this you can actually

346
00:22:04,820 --> 00:22:09,330
the well apart from that you would also
have I'm

347
00:22:09,330 --> 00:22:14,909
a truck to load the module and show it

348
00:22:14,910 --> 00:22:18,380
so insist class I have now on local

349
00:22:18,380 --> 00:22:21,960
2014 and in here

350
00:22:21,960 --> 00:22:25,150
I have a raspberry GPIO example

351
00:22:25,150 --> 00:22:30,270
as I have defined this Ford desde if
device name and

352
00:22:30,270 --> 00:22:34,340
the stink as a so somebody's our default

353
00:22:34,340 --> 00:22:37,570
so you can have this Devin they've file

354
00:22:37,570 --> 00:22:41,260
which actually gives you up major and
minor

355
00:22:41,260 --> 00:22:44,400
number for the Linux kernel

356
00:22:44,400 --> 00:22:47,960
drivers so every character died device

357
00:22:47,960 --> 00:22:51,410
in so I have now

358
00:22:51,410 --> 00:22:54,640
also created this file and so we also
have the same

359
00:22:54,640 --> 00:22:58,470
major number and minor number in here so

360
00:22:58,470 --> 00:23:01,820
a a system like you dive or something I
that's

361
00:23:01,820 --> 00:23:05,540
handles this device tree can great sorry

362
00:23:05,540 --> 00:23:09,080
remove these as needed but

363
00:23:09,080 --> 00:23:12,220
in any case so you need also so

364
00:23:12,220 --> 00:23:15,920
in here says class so our class our
driver

365
00:23:15,920 --> 00:23:21,210
you also can gets this directory and
with it you can do whatever you want

366
00:23:21,210 --> 00:23:24,660
so what I wanted to do is create this

367
00:23:24,660 --> 00:23:28,430
blink control and

368
00:23:28,430 --> 00:23:32,640
to do this I actually had to define a

369
00:23:32,640 --> 00:23:38,310
read function for this file

370
00:23:38,310 --> 00:23:41,370
and a right function for this file

371
00:23:41,370 --> 00:23:45,290
so basically d read function

372
00:23:45,290 --> 00:23:48,409
those tracks whether the time are is
active

373
00:23:48,410 --> 00:23:51,600
brings that is an integer as in 0 or 1

374
00:23:51,600 --> 00:23:55,469
and that's it the right function woods

375
00:23:55,470 --> 00:23:59,110
read out what's was given in this

376
00:23:59,110 --> 00:24:02,780
buffer written to from the user a

377
00:24:02,780 --> 00:24:06,050
Conger that to an intruder and then
check

378
00:24:06,050 --> 00:24:09,740
do you want to turn it on or off so if
you want to turn it on

379
00:24:09,740 --> 00:24:13,230
and it was not active than actually 2d

380
00:24:13,230 --> 00:24:16,700
start the timer if it was already active
than just

381
00:24:16,700 --> 00:24:20,170
right out some informational message and

382
00:24:20,170 --> 00:24:23,660
in the same manner as you want to turn
it off check whether it was

383
00:24:23,660 --> 00:24:26,920
already of and than just don't do
anything

384
00:24:26,920 --> 00:24:30,290
so I can actually writes

385
00:24:30,290 --> 00:24:34,120
something to this and

386
00:24:34,120 --> 00:24:40,600
timers not actor it was starting and I
can now turn it off

387
00:24:40,600 --> 00:24:44,340
and to start blinking so its

388
00:24:44,340 --> 00:24:48,470
quite simple so you actually have to
define a few functions like this

389
00:24:48,470 --> 00:24:52,090
you define this attributes with a macro

390
00:24:52,090 --> 00:24:55,139
called link say what's

391
00:24:55,140 --> 00:25:00,130
Rd permissions on its so

392
00:25:00,130 --> 00:25:03,330
I want this to be a reason right for
absolutely everybody

393
00:25:03,330 --> 00:25:07,360
who has extras computer swords

394
00:25:07,360 --> 00:25:11,320
readable by the user group others
writeable by the user group others

395
00:25:11,320 --> 00:25:14,879
your lame two functions and then

396
00:25:14,880 --> 00:25:17,880
this attribute is given put inside the
oven

397
00:25:17,880 --> 00:25:21,490
array and that that's put inside the
group

398
00:25:21,490 --> 00:25:24,890
so yards kinda love a little containers

399
00:25:24,890 --> 00:25:28,330
layers but for this then you just say

400
00:25:28,330 --> 00:25:31,740
a greats Asus affairs group

401
00:25:31,740 --> 00:25:35,380
read this object that I have registered

402
00:25:35,380 --> 00:25:38,770
here so this device file the

403
00:25:38,770 --> 00:25:42,820
character device file that group and of
course

404
00:25:42,820 --> 00:25:46,950
if there are some that are return back
and of course if you are unloading the

405
00:25:46,950 --> 00:25:50,200
module damn you'll have to actually
removed that

406
00:25:50,200 --> 00:25:53,620
as well so basically whatever you have
great ads

407
00:25:53,620 --> 00:26:00,080
when the model is on loads destroy its
otherwise you can be left weeds

408
00:26:00,080 --> 00:26:04,360
a whole lotta crap and

409
00:26:04,360 --> 00:26:08,120
the I'm

410
00:26:08,120 --> 00:26:11,129
the fifth example actually

411
00:26:11,130 --> 00:26:16,690
uses that character device so a one very
nice example of character device

412
00:26:16,690 --> 00:26:19,990
is seven segment display which you can
see

413
00:26:19,990 --> 00:26:24,900
on the board and

414
00:26:24,900 --> 00:26:28,040
it's actually going to print out some
numbers well

415
00:26:28,040 --> 00:26:33,050
d number sequence and you actually see
the display it has

416
00:26:33,050 --> 00:26:37,210
done that okay so this this time now

417
00:26:37,210 --> 00:26:41,520
this now this file actually has function
so I can

418
00:26:41,520 --> 00:26:45,250
do something write something to it

419
00:26:45,250 --> 00:26:48,550
and of course this is some garbage that
will be

420
00:26:48,550 --> 00:26:52,200
outputs and spit will do some

421
00:26:52,200 --> 00:26:56,530
alien language signals but this is also
not really

422
00:26:56,530 --> 00:27:00,129
difficult to connect so mmm

423
00:27:00,130 --> 00:27:06,459
whom

424
00:27:06,459 --> 00:27:10,329
okay so you have to define a final
approach instructor for this character

425
00:27:10,329 --> 00:27:11,099
device

426
00:27:11,099 --> 00:27:14,178
then you have defined rights

427
00:27:14,179 --> 00:27:17,429
open release and both course reading
from

428
00:27:17,429 --> 00:27:20,549
a samsung Display is not really a useful
thing to do

429
00:27:20,549 --> 00:27:24,539
but I have putting a prototype just in
case you wanted

430
00:27:24,539 --> 00:27:29,408
so a when you open its

431
00:27:29,409 --> 00:27:32,909
when you actually want to write
something to that file first you

432
00:27:32,909 --> 00:27:37,059
open its then you called the right
function then closing down so you have

433
00:27:37,059 --> 00:27:39,349
to define altri not just the right
functions

434
00:27:39,349 --> 00:27:42,658
okay so you you open the device there's
a

435
00:27:42,659 --> 00:27:46,609
you text so for mutually exclusive
access

436
00:27:46,609 --> 00:27:50,279
sold no two processors can lights at the
same time to thats

437
00:27:50,279 --> 00:27:53,389
character deweiss so if the

438
00:27:53,389 --> 00:27:56,639
new taxes on available then say this
device is busy

439
00:27:56,639 --> 00:28:00,748
and just abort and otherwise the

440
00:28:00,749 --> 00:28:04,029
you text will be logged in you have
access and you can actually call deride

441
00:28:04,029 --> 00:28:04,569
functions

442
00:28:04,569 --> 00:28:08,479
the right function doesn't function
doesn't really do much

443
00:28:08,479 --> 00:28:11,569
its does does again

444
00:28:11,569 --> 00:28:15,099
GPIO output for a

445
00:28:15,099 --> 00:28:19,269
I have defined for these the Sun segment
display for

446
00:28:19,269 --> 00:28:24,089
each segments 1gb I L and Justin
disarray

447
00:28:24,089 --> 00:28:28,319
so its bits has

448
00:28:28,319 --> 00:28:31,879
whatever a sold since characters are it
betrayal use

449
00:28:31,879 --> 00:28:35,509
what I rights to this character to eyes
I have just

450
00:28:35,509 --> 00:28:39,839
did a bitmask and shifting and basically
one bit

451
00:28:39,839 --> 00:28:42,938
is written to one segment so if you do

452
00:28:42,939 --> 00:28:46,449
some issue do know how it's arranged you
can actually writes

453
00:28:46,449 --> 00:28:49,579
a number sequence or some signal that
you want

454
00:28:49,579 --> 00:28:53,789
so you can so dysfunction gets cold

455
00:28:53,789 --> 00:28:57,979
and it's actually configures the GPIO
those you can see the output

456
00:28:57,979 --> 00:29:01,959
and this is well basically

457
00:29:01,959 --> 00:29:06,139
how you don't communicate weeds very
busy car this how you actually

458
00:29:06,139 --> 00:29:07,238
communicate with

459
00:29:07,239 --> 00:29:10,489
even advanced hardware some cases you do

460
00:29:10,489 --> 00:29:13,970
with masking you do GPIO input/output

461
00:29:13,970 --> 00:29:16,820
but of course if you want some high
speeds you

462
00:29:16,820 --> 00:29:20,530
used already predefined protocols like I
square see

463
00:29:20,530 --> 00:29:25,020
SBI or something like that I you can

464
00:29:25,020 --> 00:29:28,650
beat bank most to them so you can
actually do

465
00:29:28,650 --> 00:29:32,520
fine-tuning vote you can match

466
00:29:32,520 --> 00:29:36,010
bit masks and 2 o'clock out the clock
out that online

467
00:29:36,010 --> 00:29:39,040
in and then signal output and all other

468
00:29:39,040 --> 00:29:42,340
and achieve some results butts it will
be slow

469
00:29:42,340 --> 00:29:47,070
so she want to communicate with proper
hardware trip dan

470
00:29:47,070 --> 00:29:51,250
use a some better signal but for the
sake of this

471
00:29:51,250 --> 00:29:56,190
introductory example this is basically
what I have wanted to show you

472
00:29:56,190 --> 00:29:59,910
so now we go back to the presentation

473
00:29:59,910 --> 00:30:03,880
and key question slides and

474
00:30:03,880 --> 00:30:08,980
so any questions okay

475
00:30:08,980 --> 00:30:14,549
should space

476
00:30:14,549 --> 00:30:17,799
versus re me you right

477
00:30:17,799 --> 00:30:21,450
or all and

478
00:30:21,450 --> 00:30:24,890
this a datasheets

479
00:30:24,890 --> 00:30:28,250
are something to rally very painful to
obtain

480
00:30:28,250 --> 00:30:31,610
for some reason did slight top-secret
military

481
00:30:31,610 --> 00:30:34,729
achievement or something i I don't
really know why

482
00:30:34,730 --> 00:30:37,730
so if you want to write a your

483
00:30:37,730 --> 00:30:41,320
own custom-made hardware and drivers for
thats

484
00:30:41,320 --> 00:30:45,050
up becoming a factor that actually
cooperates and gives

485
00:30:45,050 --> 00:30:48,970
data sheets with the trip otherwise you
will have had eight

486
00:30:48,970 --> 00:30:53,140
I mean somethings even if you do get the
data sheet

487
00:30:53,140 --> 00:30:56,650
it will not be completes it will lacks
information

488
00:30:56,650 --> 00:31:01,390
or it will be and the wording can be
also quite confusing and you don't know

489
00:31:01,390 --> 00:31:01,960
that

490
00:31:01,960 --> 00:31:05,390
for some some things to do you have to

491
00:31:05,390 --> 00:31:10,140
reduced to do some other things and
initialized things differently if you

492
00:31:10,140 --> 00:31:10,710
want

493
00:31:10,710 --> 00:31:14,090
to run in that other mode or something
like that so yeah

494
00:31:14,090 --> 00:31:17,370
if you reverse engineering is doable

495
00:31:17,370 --> 00:31:21,840
but takes too much time in Leeds maybe
not worth the effort

496
00:31:21,840 --> 00:31:28,840
any other questions

497
00:31:29,450 --> 00:31:31,190
I'll take that as a No sold

498
00:31:31,190 --> 00:31:36,400
thank you for a time and your attention
%ah

499
00:31:36,400 --> 00:31:38,570
then

500
00:31:38,570 --> 00:31:44,210
the

501
00:31:44,210 --> 00:31:45,050
that

