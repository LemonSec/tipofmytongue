1
00:00:25,580 --> 00:00:31,348
hi everyone we are going to listen ban

2
00:00:28,830 --> 00:00:40,290
and Lada and they are going to talk

3
00:00:31,349 --> 00:00:43,650
about entertainment system hockey hi

4
00:00:40,290 --> 00:00:45,809
hello everybody so we will start with

5
00:00:43,650 --> 00:00:47,790
our presentation so thank you all for

6
00:00:45,809 --> 00:00:50,190
coming it's always pleasure to be in

7
00:00:47,790 --> 00:00:52,800
Serbia in my home country and to be able

8
00:00:50,190 --> 00:00:55,769
to present something that we are doing

9
00:00:52,800 --> 00:00:57,720
so today we are going to talk about one

10
00:00:55,769 --> 00:00:59,479
of the very interesting and very hot

11
00:00:57,720 --> 00:01:02,280
topics today and that is about

12
00:00:59,479 --> 00:01:03,870
automotive security and specifically we

13
00:01:02,280 --> 00:01:06,600
are going to discuss stuff about

14
00:01:03,870 --> 00:01:09,840
infotainment systems which are part of

15
00:01:06,600 --> 00:01:12,449
your off most of the cars today and what

16
00:01:09,840 --> 00:01:14,549
are the dangers and how you can what can

17
00:01:12,450 --> 00:01:18,420
you do to check security and to ensure

18
00:01:14,549 --> 00:01:20,060
that your car is under your control not

19
00:01:18,420 --> 00:01:23,430
controlled by somebody else

20
00:01:20,060 --> 00:01:26,580
so a little bit about us this is my

21
00:01:23,430 --> 00:01:28,229
colleague Ben wave yeah he's from

22
00:01:26,580 --> 00:01:32,250
friends as you see so he's not perfect

23
00:01:28,229 --> 00:01:33,869
of course he's not so he like Java but

24
00:01:32,250 --> 00:01:37,859
if you recall they were here two two

25
00:01:33,869 --> 00:01:40,350
years ago and his note they just draw a

26
00:01:37,859 --> 00:01:44,339
lover now I managed to make him love

27
00:01:40,350 --> 00:01:46,259
Python also so I see that as a my great

28
00:01:44,340 --> 00:01:50,490
accomplishment in developing my friend

29
00:01:46,259 --> 00:01:53,100
and my name is Warren and I'm monster

30
00:01:50,490 --> 00:01:56,999
I'm scaring people around the world and

31
00:01:53,100 --> 00:01:59,280
living of their screams so one important

32
00:01:56,999 --> 00:02:01,229
important announcement so no cars having

33
00:01:59,280 --> 00:02:05,179
hurt during preparing preparation for

34
00:02:01,229 --> 00:02:08,880
this presentation mostly so a little bit

35
00:02:05,179 --> 00:02:10,770
wires around stuff but car was safely

36
00:02:08,880 --> 00:02:16,680
and soundly returned back to his proud

37
00:02:10,770 --> 00:02:19,890
owner so the question is what is

38
00:02:16,680 --> 00:02:23,910
infotainment system actually so if you

39
00:02:19,890 --> 00:02:26,399
have car and then you sit in front seat

40
00:02:23,910 --> 00:02:28,590
you see infotainment system or at least

41
00:02:26,400 --> 00:02:33,239
part of it

42
00:02:28,590 --> 00:02:36,540
that part is interface to you so we will

43
00:02:33,239 --> 00:02:38,340
go into details what it is but what is

44
00:02:36,540 --> 00:02:41,220
the problem with it why it is a problem

45
00:02:38,340 --> 00:02:42,810
so you know our favorite car yoga which

46
00:02:41,220 --> 00:02:45,629
is manufactured here in Serbia doesn't

47
00:02:42,810 --> 00:02:47,129
have any security problems brakes might

48
00:02:45,629 --> 00:02:49,040
work might not work but that's not a

49
00:02:47,129 --> 00:02:51,390
problem we used to deal with it and

50
00:02:49,040 --> 00:02:53,519
heaters and ice if you push it to start

51
00:02:51,390 --> 00:02:56,760
during the winter it hits your hands

52
00:02:53,519 --> 00:02:58,170
you're not cold but other cars which

53
00:02:56,760 --> 00:03:01,649
have a little bit more sophistication

54
00:02:58,170 --> 00:03:05,099
added to it our little complex and has a

55
00:03:01,650 --> 00:03:07,799
little bit more problems associated with

56
00:03:05,099 --> 00:03:11,849
this complexity so as you can see this

57
00:03:07,799 --> 00:03:14,459
is my favorite slide it shows how cars

58
00:03:11,849 --> 00:03:17,640
are actually complex so this is number

59
00:03:14,459 --> 00:03:20,430
of lines of code that is used in two

60
00:03:17,640 --> 00:03:22,890
different computers across the system so

61
00:03:20,430 --> 00:03:25,319
we see that Facebook's Facebook has

62
00:03:22,890 --> 00:03:29,250
roughly or slightly less than seven

63
00:03:25,319 --> 00:03:31,609
million lines lines of code Boeing 787

64
00:03:29,250 --> 00:03:36,659
is around that same number

65
00:03:31,610 --> 00:03:40,920
Ford is at ten ten millions offices 50

66
00:03:36,659 --> 00:03:44,370
millions but modern car like Ford f-150

67
00:03:40,920 --> 00:03:46,890
has 150 millions of lines of code so

68
00:03:44,370 --> 00:03:49,829
this huge amount of code that goes into

69
00:03:46,890 --> 00:03:52,048
development and this is code that these

70
00:03:49,829 --> 00:03:55,049
are on different computers in a normal

71
00:03:52,049 --> 00:03:58,680
car in a standard car that can be about

72
00:03:55,049 --> 00:04:01,799
200 kilograms of different virus and

73
00:03:58,680 --> 00:04:05,280
computers so we have around hundred more

74
00:04:01,799 --> 00:04:08,129
than 100 different processing units so

75
00:04:05,280 --> 00:04:10,409
I'm not saying full ECU's because not

76
00:04:08,129 --> 00:04:12,359
not all of them are fully see issues but

77
00:04:10,409 --> 00:04:14,459
there are small computers which are

78
00:04:12,360 --> 00:04:16,739
dedicated to just simple function or

79
00:04:14,459 --> 00:04:18,840
there are more complex like issue that

80
00:04:16,738 --> 00:04:21,690
controls your engine or or chases

81
00:04:18,839 --> 00:04:25,380
computer that controls your caping and

82
00:04:21,690 --> 00:04:27,690
everything inside it so as I mentioned

83
00:04:25,380 --> 00:04:31,560
what is actually car entertainment

84
00:04:27,690 --> 00:04:34,320
system so it is the screen that

85
00:04:31,560 --> 00:04:37,760
interface video so it is usually you see

86
00:04:34,320 --> 00:04:40,290
it as a stick stereo or FM radio or

87
00:04:37,760 --> 00:04:42,750
navigational device that is in front of

88
00:04:40,290 --> 00:04:43,980
you but in modern cars it can serve a

89
00:04:42,750 --> 00:04:46,140
little bit more

90
00:04:43,980 --> 00:04:48,480
than just this simple information that

91
00:04:46,140 --> 00:04:51,590
we used to so today we practically have

92
00:04:48,480 --> 00:04:54,780
a concept that our cars are like our

93
00:04:51,590 --> 00:04:57,599
phones on the wheel so you can drive

94
00:04:54,780 --> 00:04:59,880
with your computer around and the newer

95
00:04:57,600 --> 00:05:02,520
cars like Tesla you have outer pilot

96
00:04:59,880 --> 00:05:03,990
which can do a lot of stuff replacing

97
00:05:02,520 --> 00:05:06,120
the drivers the driver is just there to

98
00:05:03,990 --> 00:05:08,910
control that something doesn't go wrong

99
00:05:06,120 --> 00:05:11,220
but car can take over a lot of functions

100
00:05:08,910 --> 00:05:13,100
so it is not just cruise control that

101
00:05:11,220 --> 00:05:15,150
most of us has but there are much more

102
00:05:13,100 --> 00:05:18,360
advanced and there is a concept of

103
00:05:15,150 --> 00:05:20,429
autonomous car the T enhances discomfort

104
00:05:18,360 --> 00:05:22,890
completely removing the driver as a

105
00:05:20,430 --> 00:05:24,980
variable so you will be just passengers

106
00:05:22,890 --> 00:05:29,219
all passengers in car that is not driver

107
00:05:24,980 --> 00:05:31,620
car is robot that know how to go from

108
00:05:29,220 --> 00:05:33,900
point A to point B of course it will be

109
00:05:31,620 --> 00:05:35,370
interesting in our roads I always want

110
00:05:33,900 --> 00:05:38,090
to see how it will actually work in

111
00:05:35,370 --> 00:05:40,950
Serbia so when we have details we have

112
00:05:38,090 --> 00:05:45,150
signs and even humans cannot decode what

113
00:05:40,950 --> 00:05:47,969
they actually mean but ok so important

114
00:05:45,150 --> 00:05:51,060
part what you see is just front end of

115
00:05:47,970 --> 00:05:55,200
this interface so there are a lot of

116
00:05:51,060 --> 00:05:58,830
systems that run behind the wheels so it

117
00:05:55,200 --> 00:06:02,060
has navigation system cameras it can

118
00:05:58,830 --> 00:06:05,550
offer browsers connection to internet

119
00:06:02,060 --> 00:06:07,860
car statistics you can use it to

120
00:06:05,550 --> 00:06:10,710
interact with mobile applications to do

121
00:06:07,860 --> 00:06:12,780
remote and locking of your car so car

122
00:06:10,710 --> 00:06:16,500
can send you different information so it

123
00:06:12,780 --> 00:06:19,979
can be tired too tied to tire pressure

124
00:06:16,500 --> 00:06:22,230
sensors so there is a lot of information

125
00:06:19,980 --> 00:06:26,990
flowing around the car in order to make

126
00:06:22,230 --> 00:06:28,740
your drive more enjoyable and more safe

127
00:06:26,990 --> 00:06:32,550
but does it do that

128
00:06:28,740 --> 00:06:34,770
so as I mention it car has a huge number

129
00:06:32,550 --> 00:06:38,130
of systems so this is a little bit hazy

130
00:06:34,770 --> 00:06:43,469
but I hope you can see so this is a

131
00:06:38,130 --> 00:06:46,830
typical electrical car actually so but

132
00:06:43,470 --> 00:06:50,190
more them all of them are following the

133
00:06:46,830 --> 00:06:54,060
same concept you can here you have a run

134
00:06:50,190 --> 00:06:56,340
bus which is exposed to users because it

135
00:06:54,060 --> 00:06:57,480
is required by law each car that is on

136
00:06:56,340 --> 00:07:00,330
the road right now

137
00:06:57,480 --> 00:07:03,030
have implemented obd interface so it is

138
00:07:00,330 --> 00:07:06,719
a small port that is somewhere under the

139
00:07:03,030 --> 00:07:09,570
the the front part of the car and the

140
00:07:06,720 --> 00:07:11,670
agnostic can be done so if you take your

141
00:07:09,570 --> 00:07:13,800
car to the repair shop they will connect

142
00:07:11,670 --> 00:07:17,040
to this integer and they can read false

143
00:07:13,800 --> 00:07:18,450
they can see your gas consumptions so

144
00:07:17,040 --> 00:07:21,600
they can exchange some information they

145
00:07:18,450 --> 00:07:23,250
can even update is your computer from

146
00:07:21,600 --> 00:07:26,460
this interface so it is really complex

147
00:07:23,250 --> 00:07:31,560
interface and it exposes few of more

148
00:07:26,460 --> 00:07:32,669
standard protocols like canvas k2000 so

149
00:07:31,560 --> 00:07:34,980
there are a lot of protocols that are

150
00:07:32,670 --> 00:07:37,380
supported by this system but problem is

151
00:07:34,980 --> 00:07:39,600
that modern car just expose this

152
00:07:37,380 --> 00:07:44,820
interface via obd this is not the

153
00:07:39,600 --> 00:07:47,790
systems that are used behind the curtain

154
00:07:44,820 --> 00:07:49,680
so some of cars still use other canvas

155
00:07:47,790 --> 00:07:51,360
in order to communicate between

156
00:07:49,680 --> 00:07:53,580
different computers as I mentioned there

157
00:07:51,360 --> 00:07:56,040
are a lot of computers in car so canvas

158
00:07:53,580 --> 00:07:58,650
can be used for communication with the

159
00:07:56,040 --> 00:08:01,110
dole between those systems but it is

160
00:07:58,650 --> 00:08:04,200
usually isolated from obd and in newer

161
00:08:01,110 --> 00:08:06,270
cars they've completely abandoned

162
00:08:04,200 --> 00:08:08,250
concept of canvas and they have some

163
00:08:06,270 --> 00:08:10,979
other protocols which can be based on

164
00:08:08,250 --> 00:08:13,320
even a fiber optic communications but

165
00:08:10,980 --> 00:08:15,390
they have simulators so they will

166
00:08:13,320 --> 00:08:18,630
emulate obd because it is required by

167
00:08:15,390 --> 00:08:20,909
law to have it so what you can capture

168
00:08:18,630 --> 00:08:23,190
from your OB the interface is not full

169
00:08:20,910 --> 00:08:24,870
communications that your car is doing it

170
00:08:23,190 --> 00:08:28,500
is just something that car provides as a

171
00:08:24,870 --> 00:08:31,800
convenience in order to be able to make

172
00:08:28,500 --> 00:08:33,659
some of the agnostic equipment work so

173
00:08:31,800 --> 00:08:35,460
it is not full communication it is not

174
00:08:33,659 --> 00:08:38,339
all messages that are exchanged between

175
00:08:35,460 --> 00:08:40,500
your main central ECU for example and

176
00:08:38,340 --> 00:08:43,500
chases computer that is used to unlock

177
00:08:40,500 --> 00:08:47,790
the car so it is has immense it's

178
00:08:43,500 --> 00:08:54,680
complex and it can contain more than

179
00:08:47,790 --> 00:08:57,000
than one one unit so first units unit is

180
00:08:54,680 --> 00:08:58,709
that's the note the images that we're

181
00:08:57,000 --> 00:09:00,270
showing are not of the devices that we

182
00:08:58,710 --> 00:09:02,610
have been testing so these are just

183
00:09:00,270 --> 00:09:05,160
generic pictures because we cannot show

184
00:09:02,610 --> 00:09:08,900
you real pictures of devices that we

185
00:09:05,160 --> 00:09:10,709
have tested so as I mentioned so every

186
00:09:08,900 --> 00:09:13,110
infotainment system can

187
00:09:10,710 --> 00:09:14,970
contain of one or more different nodes

188
00:09:13,110 --> 00:09:17,790
which communicate between themselves and

189
00:09:14,970 --> 00:09:21,660
they collect all this information from

190
00:09:17,790 --> 00:09:23,730
different sensors in the car so they can

191
00:09:21,660 --> 00:09:27,900
track electrical pole electrical

192
00:09:23,730 --> 00:09:31,530
parameters temperature humidity the tire

193
00:09:27,900 --> 00:09:35,370
pressures so mass of the vehicle they

194
00:09:31,530 --> 00:09:40,439
can show you which mode fuel consumption

195
00:09:35,370 --> 00:09:42,000
so probably this is how you update all

196
00:09:40,440 --> 00:09:44,940
this code so as I mentioned there is a

197
00:09:42,000 --> 00:09:47,670
lot of code going into the these systems

198
00:09:44,940 --> 00:09:49,950
and it's not easy to accomplish because

199
00:09:47,670 --> 00:09:52,319
usually you cannot do it by yourself on

200
00:09:49,950 --> 00:09:54,420
your standard Windows or Linux laptop

201
00:09:52,320 --> 00:09:57,210
you just connect to internet retrieve

202
00:09:54,420 --> 00:09:58,949
updates reboot machine if necessary and

203
00:09:57,210 --> 00:10:02,220
you're good to go you are fully patched

204
00:09:58,950 --> 00:10:05,700
and until next 1st 2nd Tuesday of the

205
00:10:02,220 --> 00:10:07,680
month you are usually safe enough in car

206
00:10:05,700 --> 00:10:10,470
it cannot be done like that so you

207
00:10:07,680 --> 00:10:12,780
usually need to drive your car to repair

208
00:10:10,470 --> 00:10:14,610
shop and they will do it for you and you

209
00:10:12,780 --> 00:10:16,380
don't do that regularly and even if you

210
00:10:14,610 --> 00:10:18,240
go to car shop they will not offer to do

211
00:10:16,380 --> 00:10:20,100
it for you so you need to ask them and

212
00:10:18,240 --> 00:10:22,170
in case the problem usually

213
00:10:20,100 --> 00:10:24,630
manufacturers need to do recall of large

214
00:10:22,170 --> 00:10:26,160
number of vehicles in order to fix the

215
00:10:24,630 --> 00:10:31,010
problem so it's really complex this

216
00:10:26,160 --> 00:10:33,510
system and can lead to a lot of problems

217
00:10:31,010 --> 00:10:38,350
ok this is magic wand it can make stuff

218
00:10:33,510 --> 00:10:41,500
disappear you're still here

219
00:10:38,350 --> 00:10:45,400
okay huh just it will exhaust on

220
00:10:41,500 --> 00:10:47,140
presentation unfortunately so as I

221
00:10:45,400 --> 00:10:49,930
mentioned first and the most exposed

222
00:10:47,140 --> 00:10:52,860
part of this system is head unit it is

223
00:10:49,930 --> 00:10:56,170
the thing that is embedded in your - and

224
00:10:52,860 --> 00:10:58,150
which is used for you to interact with

225
00:10:56,170 --> 00:11:00,640
the system so it is usually a large

226
00:10:58,150 --> 00:11:03,280
screen with some buttons or touch screen

227
00:11:00,640 --> 00:11:05,650
and you can select different functions

228
00:11:03,280 --> 00:11:07,000
and you can watch movies in in good cars

229
00:11:05,650 --> 00:11:08,949
you cannot watch movies where you are

230
00:11:07,000 --> 00:11:10,590
driving so if your speed is over three

231
00:11:08,950 --> 00:11:13,740
miles per second

232
00:11:10,590 --> 00:11:18,520
we are not driving the space shuttle so

233
00:11:13,740 --> 00:11:20,350
3 km/h it will disable movies but in

234
00:11:18,520 --> 00:11:23,290
some cases be so it doesn't happen so

235
00:11:20,350 --> 00:11:25,240
you can watch movie while driving so

236
00:11:23,290 --> 00:11:26,860
talk about distracted driving so it

237
00:11:25,240 --> 00:11:29,680
provides some functionalities that are

238
00:11:26,860 --> 00:11:32,110
all the amplifiers car stereo bluetooth

239
00:11:29,680 --> 00:11:35,620
connectivity USB support and it

240
00:11:32,110 --> 00:11:38,910
communicates with canvas so usually for

241
00:11:35,620 --> 00:11:41,170
OBD side but sometimes it can be inter

242
00:11:38,910 --> 00:11:43,300
interconnected with other systems on the

243
00:11:41,170 --> 00:11:44,530
canvas why to provide you some

244
00:11:43,300 --> 00:11:46,329
additional features so you can just

245
00:11:44,530 --> 00:11:49,329
select one of these soft buttons and

246
00:11:46,330 --> 00:11:51,340
open your trunk for example or you can

247
00:11:49,330 --> 00:11:52,900
check your fuel consumption of or track

248
00:11:51,340 --> 00:11:54,610
your fleets there are different

249
00:11:52,900 --> 00:11:57,280
functionalities that are exposed by head

250
00:11:54,610 --> 00:11:59,200
unit but head unit is just the simple

251
00:11:57,280 --> 00:12:01,420
device usually we call it just radio

252
00:11:59,200 --> 00:12:04,630
device because because its primary

253
00:12:01,420 --> 00:12:07,719
purpose is to be a am/fm radio which is

254
00:12:04,630 --> 00:12:09,700
simple device and behind the screen we

255
00:12:07,720 --> 00:12:11,230
have usually difficult device which can

256
00:12:09,700 --> 00:12:15,010
provide additional functionalities of

257
00:12:11,230 --> 00:12:18,420
course so these extension boxes can

258
00:12:15,010 --> 00:12:22,810
contain GPS receiver advanced FM tuners

259
00:12:18,420 --> 00:12:25,420
Wi-Fi USB support so hands-free profiles

260
00:12:22,810 --> 00:12:27,790
a lot of stuff that can be added so what

261
00:12:25,420 --> 00:12:29,500
we see the different manufacturers use

262
00:12:27,790 --> 00:12:32,050
this box in different manners so they

263
00:12:29,500 --> 00:12:34,150
can have more than one a different level

264
00:12:32,050 --> 00:12:36,089
of features that they are offering so

265
00:12:34,150 --> 00:12:39,699
simple devices will offer just single

266
00:12:36,090 --> 00:12:42,790
screen with basic radio button as you go

267
00:12:39,700 --> 00:12:44,470
up in your car equipment they will

268
00:12:42,790 --> 00:12:46,959
provide additional features like GPS

269
00:12:44,470 --> 00:12:49,060
navigation that it will run devised and

270
00:12:46,960 --> 00:12:50,700
they can add another device which will

271
00:12:49,060 --> 00:12:53,670
offer something like raw

272
00:12:50,700 --> 00:12:55,800
assistance connectivity to other system

273
00:12:53,670 --> 00:12:57,990
connectivity on internet so you you will

274
00:12:55,800 --> 00:13:01,439
accomplish a lot that you can do from

275
00:12:57,990 --> 00:13:03,900
your phone does from your car this

276
00:13:01,440 --> 00:13:06,510
second device usually communicates with

277
00:13:03,900 --> 00:13:08,069
your screen device because it is it

278
00:13:06,510 --> 00:13:10,170
would be weird to have more than ones

279
00:13:08,070 --> 00:13:13,590
touchscreen so you have one two three

280
00:13:10,170 --> 00:13:15,540
touch screens so they do not like that

281
00:13:13,590 --> 00:13:17,010
is not really user friendly and usable

282
00:13:15,540 --> 00:13:18,480
so if you need to do something you need

283
00:13:17,010 --> 00:13:21,240
to think on which screen I need now to

284
00:13:18,480 --> 00:13:23,820
click I have three of them so instead

285
00:13:21,240 --> 00:13:25,950
they are interconnected using some

286
00:13:23,820 --> 00:13:29,330
proprietary or internal protocols to

287
00:13:25,950 --> 00:13:31,800
communicate between each other and

288
00:13:29,330 --> 00:13:35,130
navigation extension box for example can

289
00:13:31,800 --> 00:13:37,890
take over screen from the main screen

290
00:13:35,130 --> 00:13:39,720
head unit so it will reuse just the

291
00:13:37,890 --> 00:13:41,970
screen all other functionalities will be

292
00:13:39,720 --> 00:13:46,590
provided by the second box so they are

293
00:13:41,970 --> 00:13:47,880
made to work together and they

294
00:13:46,590 --> 00:13:49,110
communicate between each other so I

295
00:13:47,880 --> 00:13:51,510
would like to show you why is that

296
00:13:49,110 --> 00:13:53,430
important but they are using some kind

297
00:13:51,510 --> 00:13:54,720
of intergroup communication protocol

298
00:13:53,430 --> 00:13:56,430
which can be something that is well

299
00:13:54,720 --> 00:13:58,830
known standardized or something

300
00:13:56,430 --> 00:14:01,260
proprietary automotive manufacturers

301
00:13:58,830 --> 00:14:03,420
like to have very proprietary stuff for

302
00:14:01,260 --> 00:14:06,540
some reason so they make everybody life

303
00:14:03,420 --> 00:14:09,900
much more fun than it should be so how

304
00:14:06,540 --> 00:14:14,550
these devices look when you open them so

305
00:14:09,900 --> 00:14:16,199
as we are very noisy and we like to

306
00:14:14,550 --> 00:14:18,209
disassemble stuff first thing that we

307
00:14:16,200 --> 00:14:20,220
did when we got these boxes is of course

308
00:14:18,210 --> 00:14:22,710
open them up to see what is inside and

309
00:14:20,220 --> 00:14:25,470
in fact these these specific line of

310
00:14:22,710 --> 00:14:28,440
devices are based on Texas Instruments

311
00:14:25,470 --> 00:14:31,550
automotive computing trip which is

312
00:14:28,440 --> 00:14:34,460
optimized to run a UNIX operating system

313
00:14:31,550 --> 00:14:38,310
this Texas Instruments is based on arm

314
00:14:34,460 --> 00:14:41,040
v7 processor so it is similar as older

315
00:14:38,310 --> 00:14:43,500
phones and it has a lot of capabilities

316
00:14:41,040 --> 00:14:46,370
built in in it it has GPU for video

317
00:14:43,500 --> 00:14:48,810
processing it can it have additional

318
00:14:46,370 --> 00:14:52,500
peripherals to process network

319
00:14:48,810 --> 00:14:55,079
connectivity USB connectivity and it is

320
00:14:52,500 --> 00:14:59,610
served by some external peripherals like

321
00:14:55,080 --> 00:15:01,440
flash memory efrem SD card

322
00:14:59,610 --> 00:15:03,580
flash cards there are a lot of

323
00:15:01,440 --> 00:15:06,640
interfaces which are used to

324
00:15:03,580 --> 00:15:08,110
for this trip to communicate with

325
00:15:06,640 --> 00:15:11,890
peripheral devices which are not

326
00:15:08,110 --> 00:15:13,510
integrated inside the sock so if you go

327
00:15:11,890 --> 00:15:15,279
to manufacturer size you can see that

328
00:15:13,510 --> 00:15:17,170
there are a lot of different families

329
00:15:15,279 --> 00:15:20,230
not just with text and instruments by

330
00:15:17,170 --> 00:15:22,120
other manufacturers also so what is

331
00:15:20,230 --> 00:15:23,980
interesting here is that everything was

332
00:15:22,120 --> 00:15:25,660
fully soldered so we cannot remove

333
00:15:23,980 --> 00:15:27,670
anything without actually the soldering

334
00:15:25,660 --> 00:15:31,209
stuff and there there were some

335
00:15:27,670 --> 00:15:32,979
interesting pads on PCB which are

336
00:15:31,209 --> 00:15:36,310
exposed for us to have far with them

337
00:15:32,980 --> 00:15:39,130
later what I want to focus at this point

338
00:15:36,310 --> 00:15:41,920
is about operating system that is

339
00:15:39,130 --> 00:15:43,930
running on these devices and in these

340
00:15:41,920 --> 00:15:46,689
specific cases and it is very common in

341
00:15:43,930 --> 00:15:49,180
the automotive world so they they can

342
00:15:46,690 --> 00:15:54,040
use Android we saw they can use Windows

343
00:15:49,180 --> 00:15:57,790
CE II or Windows 7 embedded but in this

344
00:15:54,040 --> 00:16:01,899
case the most pervasive on the market is

345
00:15:57,790 --> 00:16:04,599
QQ a UNIX UNIX is operating system which

346
00:16:01,899 --> 00:16:08,260
resembles Linux if you have same

347
00:16:04,600 --> 00:16:10,959
philosophy but it utilizes a microkernel

348
00:16:08,260 --> 00:16:15,490
and it is originally developed a long

349
00:16:10,959 --> 00:16:18,189
time ago and it become more market press

350
00:16:15,490 --> 00:16:20,140
again market present as BlackBerry

351
00:16:18,190 --> 00:16:22,329
devices we're using this operating

352
00:16:20,140 --> 00:16:24,730
system on it so all BlackBerry devices

353
00:16:22,329 --> 00:16:27,370
are running our clinics older versions

354
00:16:24,730 --> 00:16:29,050
of Unix new variants of UNIX are of

355
00:16:27,370 --> 00:16:30,730
course optimized a little bit more since

356
00:16:29,050 --> 00:16:33,310
blackberry is no longer platform that is

357
00:16:30,730 --> 00:16:35,560
that has any market interesting market

358
00:16:33,310 --> 00:16:40,540
presence so they are now optimizing to

359
00:16:35,560 --> 00:16:43,479
support arm and Intel platforms and it

360
00:16:40,540 --> 00:16:47,949
is it uses the same concept as Linux for

361
00:16:43,480 --> 00:16:50,199
security approach it supports a lot of

362
00:16:47,949 --> 00:16:51,939
other services we will come to that part

363
00:16:50,199 --> 00:16:55,089
but what is important in this case

364
00:16:51,940 --> 00:16:58,149
device is using Unix but all the

365
00:16:55,089 --> 00:17:02,680
interaction all gooey is done via flash

366
00:16:58,149 --> 00:17:05,380
so it was modified version SWF similar

367
00:17:02,680 --> 00:17:08,260
to blackberry and it uses lua scripting

368
00:17:05,380 --> 00:17:11,230
in behind to drive the features of

369
00:17:08,260 --> 00:17:14,770
course it used the bus for communication

370
00:17:11,230 --> 00:17:16,929
for internal systems services

371
00:17:14,770 --> 00:17:20,020
which run inside the communiques and it

372
00:17:16,929 --> 00:17:22,689
support Java to me it is very old

373
00:17:20,020 --> 00:17:25,510
protocol of course I have Java guy here

374
00:17:22,689 --> 00:17:31,840
so he's happy now this is real way to

375
00:17:25,510 --> 00:17:33,760
write - may delay Java so also Kunik

376
00:17:31,840 --> 00:17:36,909
supports a lot of different file systems

377
00:17:33,760 --> 00:17:38,890
which are not very compatible with stuff

378
00:17:36,910 --> 00:17:43,710
that we saw and they're fairly

379
00:17:38,890 --> 00:17:46,050
unsupported by anything else except UNIX

380
00:17:43,710 --> 00:17:48,929
so as I mentioned all the tunics

381
00:17:46,050 --> 00:17:51,940
resembles Linux by its features and

382
00:17:48,929 --> 00:17:53,980
supported capabilities it's different

383
00:17:51,940 --> 00:17:57,580
because UNIX is developed from scratch

384
00:17:53,980 --> 00:17:59,620
it's not developed based on on Linux

385
00:17:57,580 --> 00:18:02,260
it's closed source it has specific

386
00:17:59,620 --> 00:18:05,439
kernel it is really expensive so

387
00:18:02,260 --> 00:18:07,900
developer license for UNIX is like

388
00:18:05,440 --> 00:18:11,110
twelve hundred twelve thousand sorry

389
00:18:07,900 --> 00:18:13,059
twelve thousand dollars per seat so it's

390
00:18:11,110 --> 00:18:16,059
not trip it's not easy to play with it

391
00:18:13,059 --> 00:18:17,559
if you are not company but you can get

392
00:18:16,059 --> 00:18:20,290
if you go on their site you can get

393
00:18:17,559 --> 00:18:23,530
trial license which is valid for 30 days

394
00:18:20,290 --> 00:18:25,600
so if you want just to see the toolkit

395
00:18:23,530 --> 00:18:28,450
and to see how it works it is good

396
00:18:25,600 --> 00:18:30,550
enough so it uses proprietary file

397
00:18:28,450 --> 00:18:32,500
system as we already mention it is most

398
00:18:30,550 --> 00:18:35,050
of those systems are mounted read-only

399
00:18:32,500 --> 00:18:36,850
because you don't want to suddenly stop

400
00:18:35,050 --> 00:18:40,270
your car and to lose the file system on

401
00:18:36,850 --> 00:18:42,969
your control unit in your car that would

402
00:18:40,270 --> 00:18:44,230
be really bad approach and security is

403
00:18:42,970 --> 00:18:46,360
not very maturely in these devices

404
00:18:44,230 --> 00:18:48,940
because they focus on being closed

405
00:18:46,360 --> 00:18:50,830
source and be in proprietary so it's

406
00:18:48,940 --> 00:18:52,630
security by obscurity with tree which

407
00:18:50,830 --> 00:18:55,510
works to some extent but it is not

408
00:18:52,630 --> 00:18:57,790
enough that that can be run layer but

409
00:18:55,510 --> 00:19:00,309
it's not enough to be really secure and

410
00:18:57,790 --> 00:19:01,990
what we discover it is very difficult to

411
00:19:00,309 --> 00:19:05,230
cross compile for Linux if you don't

412
00:19:01,990 --> 00:19:08,559
have this very expensive SDK that you

413
00:19:05,230 --> 00:19:10,450
need to buy so we can go a little bit in

414
00:19:08,559 --> 00:19:13,270
in boot process so when you power on

415
00:19:10,450 --> 00:19:16,990
your device so when you give a contact

416
00:19:13,270 --> 00:19:19,230
in the car device will be powered from

417
00:19:16,990 --> 00:19:21,670
the battery and it will start to do

418
00:19:19,230 --> 00:19:23,080
initial program loader initial program

419
00:19:21,670 --> 00:19:26,200
holder is a piece of software that will

420
00:19:23,080 --> 00:19:27,439
act the tax has any bootloader

421
00:19:26,200 --> 00:19:31,429
so it will actually load

422
00:19:27,440 --> 00:19:33,080
the image there is the basic kernel with

423
00:19:31,429 --> 00:19:35,210
the necessary drivers and then it will

424
00:19:33,080 --> 00:19:38,570
boot full into full system in the end

425
00:19:35,210 --> 00:19:40,220
and as a last point it will load overlay

426
00:19:38,570 --> 00:19:43,189
flash operating system and there are

427
00:19:40,220 --> 00:19:45,919
some user programs that are that are

428
00:19:43,190 --> 00:19:47,809
deployed on the platform so as I

429
00:19:45,919 --> 00:19:52,539
mentioned security is not very mature in

430
00:19:47,809 --> 00:19:54,408
these devices so during the the

431
00:19:52,539 --> 00:19:56,330
exploratory phase that we did we

432
00:19:54,409 --> 00:19:57,679
discovered that first thing the devices

433
00:19:56,330 --> 00:19:59,928
supporting standard Linux user

434
00:19:57,679 --> 00:20:02,299
permissions so you can have different

435
00:19:59,929 --> 00:20:04,820
users with different levels like same

436
00:20:02,299 --> 00:20:07,279
unit but there is no sin boxing so all

437
00:20:04,820 --> 00:20:09,678
processes share memory the same way as

438
00:20:07,279 --> 00:20:12,169
in Linux so they are a little bit

439
00:20:09,679 --> 00:20:14,059
isolated but if you become a root you

440
00:20:12,169 --> 00:20:16,909
can do anything and interact with other

441
00:20:14,059 --> 00:20:18,799
processes it supports some plaintext

442
00:20:16,909 --> 00:20:20,600
services including tablets which is

443
00:20:18,799 --> 00:20:24,639
which can be enabled all disabled by

444
00:20:20,600 --> 00:20:27,740
default it support UConn UConn is punic

445
00:20:24,639 --> 00:20:29,990
proprietary interface for debugging big

446
00:20:27,740 --> 00:20:32,059
problem in it is that it is not

447
00:20:29,990 --> 00:20:34,370
authenticated so if you have to come

448
00:20:32,059 --> 00:20:36,799
running you can just simply use Q Khan

449
00:20:34,370 --> 00:20:38,779
clients to connect to device via tcp/ip

450
00:20:36,799 --> 00:20:41,000
and you are done

451
00:20:38,779 --> 00:20:45,559
you have full control of the system as a

452
00:20:41,000 --> 00:20:47,419
route due to performance issues so you

453
00:20:45,559 --> 00:20:49,070
don't want to go into your car sit down

454
00:20:47,419 --> 00:20:52,059
give contact away for three minutes for

455
00:20:49,070 --> 00:20:54,710
system to boot so manufacturer

456
00:20:52,059 --> 00:20:58,129
recommends to disable some of security

457
00:20:54,710 --> 00:21:00,500
features like verifying integrity of

458
00:20:58,129 --> 00:21:03,168
image that is being booted so in order

459
00:21:00,500 --> 00:21:05,470
to gain quicker boot so calculating CRC

460
00:21:03,169 --> 00:21:07,879
of big image can take few minutes and

461
00:21:05,470 --> 00:21:09,470
you sit in a car you want to drive you

462
00:21:07,879 --> 00:21:12,769
don't want to sit waiting for system to

463
00:21:09,470 --> 00:21:14,690
boot up also no advanced features like

464
00:21:12,769 --> 00:21:17,509
secure boot or filesystem encryptions

465
00:21:14,690 --> 00:21:20,480
are supported and this is part that we

466
00:21:17,509 --> 00:21:23,330
took from developer sites and their

467
00:21:20,480 --> 00:21:25,000
recommendation to eliminate big bit of

468
00:21:23,330 --> 00:21:28,809
security in order to gain better

469
00:21:25,000 --> 00:21:28,809
responsiveness of the system

470
00:21:30,260 --> 00:21:35,900
so as I mentioned these devices that we

471
00:21:33,380 --> 00:21:38,450
have tested our OEM manufacturers so it

472
00:21:35,900 --> 00:21:40,010
is not related to a specific car model

473
00:21:38,450 --> 00:21:42,620
that you are using for testing we could

474
00:21:40,010 --> 00:21:45,140
test it in any car practically and we

475
00:21:42,620 --> 00:21:46,879
have discovered that it is that these

476
00:21:45,140 --> 00:21:50,330
devices are actually deployed in a lot

477
00:21:46,880 --> 00:21:53,330
of different brands that we have

478
00:21:50,330 --> 00:21:56,360
downloaded when we have done everything

479
00:21:53,330 --> 00:21:58,580
we have grabbed the image of the

480
00:21:56,360 --> 00:22:00,409
operating system and we have found

481
00:21:58,580 --> 00:22:02,720
strings related to different car

482
00:22:00,410 --> 00:22:05,000
manufacturers which are using the same

483
00:22:02,720 --> 00:22:07,100
device so they have one basic device and

484
00:22:05,000 --> 00:22:08,860
then they do some customization in some

485
00:22:07,100 --> 00:22:11,120
specific cases and by specific

486
00:22:08,860 --> 00:22:13,189
requirements of specific manufacturers

487
00:22:11,120 --> 00:22:17,629
but that's it so underneath they are all

488
00:22:13,190 --> 00:22:20,060
the same or similar and as I mentioned

489
00:22:17,630 --> 00:22:23,420
so since this is car manufacturer will

490
00:22:20,060 --> 00:22:25,340
not support this they rely on Original

491
00:22:23,420 --> 00:22:28,280
Equipment Manufacturer to support this

492
00:22:25,340 --> 00:22:31,850
and it can take time to fix any issues

493
00:22:28,280 --> 00:22:34,040
in theorems so I'm not sure if and how

494
00:22:31,850 --> 00:22:35,600
long it took them to fix all the issues

495
00:22:34,040 --> 00:22:39,110
that we have found but we hope they

496
00:22:35,600 --> 00:22:42,320
finished after a year or more than we

497
00:22:39,110 --> 00:22:44,060
have reported all of this and in the end

498
00:22:42,320 --> 00:22:45,950
it comes from car manufacturers so car

499
00:22:44,060 --> 00:22:48,980
manufactures need to be the driving

500
00:22:45,950 --> 00:22:51,380
force that make times fix the problems

501
00:22:48,980 --> 00:22:53,930
so if they are doing that or not that's

502
00:22:51,380 --> 00:22:57,980
up to them but if something bad happens

503
00:22:53,930 --> 00:22:59,990
it will be on both sides so what is the

504
00:22:57,980 --> 00:23:02,030
attack surface so then we disassembled

505
00:22:59,990 --> 00:23:03,920
and factorizing devices we discovered

506
00:23:02,030 --> 00:23:06,680
there are a lot of interesting features

507
00:23:03,920 --> 00:23:09,230
that can be used to access these devices

508
00:23:06,680 --> 00:23:12,710
so first idea was we are not going to

509
00:23:09,230 --> 00:23:15,530
dismantle the whole car so that was sane

510
00:23:12,710 --> 00:23:17,870
idea because we couldn't return it back

511
00:23:15,530 --> 00:23:19,850
we are security expert not car mechanics

512
00:23:17,870 --> 00:23:22,040
so we don't want to venture into that

513
00:23:19,850 --> 00:23:24,649
part so we started around I think water

514
00:23:22,040 --> 00:23:28,430
exports exposed interfaces and first and

515
00:23:24,650 --> 00:23:30,560
most interesting are USB and CD ports so

516
00:23:28,430 --> 00:23:33,170
they support a lot of different file

517
00:23:30,560 --> 00:23:36,050
formats and a lot of different functions

518
00:23:33,170 --> 00:23:37,700
so you can just connect flash USB flash

519
00:23:36,050 --> 00:23:41,379
drive but can you connect keyboard to it

520
00:23:37,700 --> 00:23:43,350
what will happen if you do it so we also

521
00:23:41,380 --> 00:23:44,880
saw that upgrade

522
00:23:43,350 --> 00:23:48,389
procedure for the fever of device

523
00:23:44,880 --> 00:23:50,429
actually can be done by caste customer

524
00:23:48,390 --> 00:23:52,590
and user but you need to go to internet

525
00:23:50,429 --> 00:23:54,929
download update image prepare a flash

526
00:23:52,590 --> 00:23:57,270
device put foolish device in USB port

527
00:23:54,929 --> 00:23:59,400
and then do a little bit of complex

528
00:23:57,270 --> 00:24:02,090
setup in order to start the update

529
00:23:59,400 --> 00:24:04,230
process so it's not easy and trivial

530
00:24:02,090 --> 00:24:06,209
then we saw that there are a lot of

531
00:24:04,230 --> 00:24:09,660
different radios available like

532
00:24:06,210 --> 00:24:13,710
Bluetooth Wi-Fi there is a standard FM

533
00:24:09,660 --> 00:24:16,140
there is GPS of course positioning so if

534
00:24:13,710 --> 00:24:19,080
you were here last year I gave a long

535
00:24:16,140 --> 00:24:21,780
talk about radio assessment and their

536
00:24:19,080 --> 00:24:24,030
applicability to automotive industry so

537
00:24:21,780 --> 00:24:26,760
that would be interesting reading for

538
00:24:24,030 --> 00:24:30,178
this so what we did is we did fuss over

539
00:24:26,760 --> 00:24:31,919
radio waves we did interception of radio

540
00:24:30,179 --> 00:24:33,240
communication in order to see what is

541
00:24:31,919 --> 00:24:35,789
exchange and how devices are

542
00:24:33,240 --> 00:24:38,760
communicating and then we proceed into

543
00:24:35,789 --> 00:24:40,140
dismantling a little bit more of of cars

544
00:24:38,760 --> 00:24:42,090
so this was first without touching

545
00:24:40,140 --> 00:24:45,179
anything so device was mount fully

546
00:24:42,090 --> 00:24:47,908
mounted inside the dash after that we

547
00:24:45,179 --> 00:24:49,890
started removing plastic from the dash

548
00:24:47,909 --> 00:24:52,530
and start removing device outside of car

549
00:24:49,890 --> 00:24:54,780
to see what is inside sewn on this

550
00:24:52,530 --> 00:24:58,080
picture you can see device outside of

551
00:24:54,780 --> 00:25:01,230
the traces so we just pulled PCB out and

552
00:24:58,080 --> 00:25:02,460
started analyzing what is inside and

553
00:25:01,230 --> 00:25:08,309
they found a lot of interesting stuff

554
00:25:02,460 --> 00:25:10,409
like Abram SD card we found SPI square C

555
00:25:08,309 --> 00:25:11,730
protocol we found something that is JTAG

556
00:25:10,409 --> 00:25:13,820
ports so we have found a lot of

557
00:25:11,730 --> 00:25:16,559
interesting stuff that provides attacker

558
00:25:13,820 --> 00:25:20,428
opportunity to do something with device

559
00:25:16,559 --> 00:25:24,649
that is not actually planned by the car

560
00:25:20,429 --> 00:25:27,360
manufacturer so after we have

561
00:25:24,650 --> 00:25:31,380
disassembled everything removed devices

562
00:25:27,360 --> 00:25:33,570
from the car I took pity on Ben because

563
00:25:31,380 --> 00:25:36,120
you can see he's really really cold in a

564
00:25:33,570 --> 00:25:38,520
cramped car with me and I'm not small

565
00:25:36,120 --> 00:25:40,620
person so and we have a lot of equipment

566
00:25:38,520 --> 00:25:45,179
so it was really difficult to be working

567
00:25:40,620 --> 00:25:46,799
in cold outside and relying on pity of

568
00:25:45,179 --> 00:25:49,500
strangers to give us something warm too

569
00:25:46,799 --> 00:25:51,690
or a little bit of gasoline to fill the

570
00:25:49,500 --> 00:25:54,630
car so we don't reach to that so we

571
00:25:51,690 --> 00:25:56,460
decided to consider if we can move

572
00:25:54,630 --> 00:25:58,770
testing out of the car

573
00:25:56,460 --> 00:26:01,140
and into the lab and not just testing of

574
00:25:58,770 --> 00:26:04,050
the passive devices but to have fully

575
00:26:01,140 --> 00:26:06,000
working device in in the lab without

576
00:26:04,050 --> 00:26:08,480
actually putting car inside the lab

577
00:26:06,000 --> 00:26:11,880
because that would be a bit of problem

578
00:26:08,480 --> 00:26:13,530
our entrance are made just for people

579
00:26:11,880 --> 00:26:15,360
not for cars so we would need to really

580
00:26:13,530 --> 00:26:17,160
disassemble car and and they reassemble

581
00:26:15,360 --> 00:26:20,729
it back in the lab in order to put it

582
00:26:17,160 --> 00:26:23,160
inside so we started first by analysing

583
00:26:20,730 --> 00:26:26,100
connectivities that are provided by car

584
00:26:23,160 --> 00:26:30,480
to device and to see how device is

585
00:26:26,100 --> 00:26:33,030
behaving in normal operation so we first

586
00:26:30,480 --> 00:26:35,010
first and most thing you know that all

587
00:26:33,030 --> 00:26:38,160
devices need to be powered so they need

588
00:26:35,010 --> 00:26:40,830
plus twelve volts and and chases in

589
00:26:38,160 --> 00:26:43,500
order to work and since everything is

590
00:26:40,830 --> 00:26:46,110
customized we need to just discover

591
00:26:43,500 --> 00:26:51,120
where these connectivities are provided

592
00:26:46,110 --> 00:26:54,479
and how also this device seems to be

593
00:26:51,120 --> 00:26:57,270
integrated into the canvas of the car so

594
00:26:54,480 --> 00:26:59,640
as I mentioned canvas is is the very

595
00:26:57,270 --> 00:27:02,370
important interface because a lot of

596
00:26:59,640 --> 00:27:04,410
devices can communicate over it so we

597
00:27:02,370 --> 00:27:07,500
have two canvases in the car usually one

598
00:27:04,410 --> 00:27:09,870
is called slow bus one is called speed

599
00:27:07,500 --> 00:27:13,500
bus speed bus is used to communicate

600
00:27:09,870 --> 00:27:15,449
between the motor control unit and other

601
00:27:13,500 --> 00:27:17,790
control units that are critical for car

602
00:27:15,450 --> 00:27:20,060
operation and slow speed bus is used

603
00:27:17,790 --> 00:27:22,740
inside your cabin to provide you

604
00:27:20,060 --> 00:27:24,840
entertainment and comfort so they

605
00:27:22,740 --> 00:27:28,830
operate AC device they are operating

606
00:27:24,840 --> 00:27:30,540
movie players so stuff like that so this

607
00:27:28,830 --> 00:27:32,730
device was connected but during the

608
00:27:30,540 --> 00:27:34,710
tracking we couldn't determine if this

609
00:27:32,730 --> 00:27:37,830
device is actually using anything from

610
00:27:34,710 --> 00:27:41,820
town bus so but to be on safe side we

611
00:27:37,830 --> 00:27:43,830
decided to try and to sniff cannabis in

612
00:27:41,820 --> 00:27:45,149
order to see if device is actually using

613
00:27:43,830 --> 00:27:48,659
so first thing that we do we remove

614
00:27:45,150 --> 00:27:51,300
device from canvas and use different

615
00:27:48,660 --> 00:27:53,190
tools to connect to this so I'm showing

616
00:27:51,300 --> 00:27:54,750
here a little bit of my favorite tools

617
00:27:53,190 --> 00:27:56,280
we have a little bit more professional

618
00:27:54,750 --> 00:27:57,990
tools but probably professional tools

619
00:27:56,280 --> 00:28:00,240
they are made by somebody and felt

620
00:27:57,990 --> 00:28:01,860
specific purpose and when you are

621
00:28:00,240 --> 00:28:03,600
working with hardware you need to be

622
00:28:01,860 --> 00:28:06,479
able to deploy your own tools because

623
00:28:03,600 --> 00:28:09,030
it's necessary as I mentioned car

624
00:28:06,480 --> 00:28:10,340
manufacturers car manufacturers are

625
00:28:09,030 --> 00:28:14,610
actually

626
00:28:10,340 --> 00:28:16,678
using proprietary stuff so if you use

627
00:28:14,610 --> 00:28:18,059
the run-of-the-mill tools you might have

628
00:28:16,679 --> 00:28:23,249
problem actually accomplishing anything

629
00:28:18,059 --> 00:28:28,049
so I I like this this board it is based

630
00:28:23,249 --> 00:28:29,519
on stm32 and it is really versatile it's

631
00:28:28,049 --> 00:28:31,918
very cheap bit cheaper than our do you

632
00:28:29,519 --> 00:28:34,080
know on the internet so you can buy it

633
00:28:31,919 --> 00:28:36,480
for cheap and easily programmed and if

634
00:28:34,080 --> 00:28:38,100
you added the can't she'll come but

635
00:28:36,480 --> 00:28:39,740
she'll that is available for dinner you

636
00:28:38,100 --> 00:28:41,580
can do a lot actually this

637
00:28:39,740 --> 00:28:44,909
microcontroller that is deployed

638
00:28:41,580 --> 00:28:46,529
supports both USB and canvas and I was

639
00:28:44,909 --> 00:28:48,419
so happy I was hoping that I can make

640
00:28:46,529 --> 00:28:50,549
tool just adding transceiver and little

641
00:28:48,419 --> 00:28:55,110
bit but unfortunately due to some

642
00:28:50,549 --> 00:28:56,730
unfortunate decisions made by STM it is

643
00:28:55,110 --> 00:28:58,529
not possible to use both features at the

644
00:28:56,730 --> 00:29:01,919
same time they share some part of memory

645
00:28:58,529 --> 00:29:05,220
and it is impossible so I have also

646
00:29:01,919 --> 00:29:08,909
proper can bus sniffer here so what we

647
00:29:05,220 --> 00:29:13,409
did we snipped canvas and this so what

648
00:29:08,909 --> 00:29:15,330
car normally is using which messages are

649
00:29:13,409 --> 00:29:17,580
normal interest seen on this bus then we

650
00:29:15,330 --> 00:29:20,879
connect the device and start sniffing

651
00:29:17,580 --> 00:29:23,939
again and activating different features

652
00:29:20,879 --> 00:29:25,980
we couldn't find any difference so in

653
00:29:23,940 --> 00:29:29,340
the end we decided yes we can provide

654
00:29:25,980 --> 00:29:32,100
can bus we will emulate everything that

655
00:29:29,340 --> 00:29:34,259
we have sniffed but it is probably not

656
00:29:32,100 --> 00:29:37,559
used by device and actually only a

657
00:29:34,259 --> 00:29:40,230
single feature that supports this is the

658
00:29:37,559 --> 00:29:42,509
car reads fuel consumption but it

659
00:29:40,230 --> 00:29:44,940
doesn't work for some reason so we will

660
00:29:42,509 --> 00:29:47,220
go into more details about it so even if

661
00:29:44,940 --> 00:29:48,389
it is provided so there is a hardware

662
00:29:47,220 --> 00:29:50,129
there is a software supporting

663
00:29:48,389 --> 00:29:54,269
communication device is not using it

664
00:29:50,129 --> 00:29:56,610
because it is a little bit outdated so

665
00:29:54,269 --> 00:30:01,169
we moved everything into the lab

666
00:29:56,610 --> 00:30:03,869
provided power supply and and can bus

667
00:30:01,169 --> 00:30:06,509
and we start working a little bit more

668
00:30:03,869 --> 00:30:08,730
exploring what we can find and first

669
00:30:06,509 --> 00:30:11,490
thing that we know the tea already knew

670
00:30:08,730 --> 00:30:13,320
before is that this device is using it

671
00:30:11,490 --> 00:30:15,480
doesn't have its own internet connection

672
00:30:13,320 --> 00:30:19,499
but you need to provide it by joining

673
00:30:15,480 --> 00:30:22,230
this device to your mobile phone so you

674
00:30:19,499 --> 00:30:24,840
can do it in two different ways

675
00:30:22,230 --> 00:30:27,870
we are Bluetooth or Wi-Fi so low level

676
00:30:24,840 --> 00:30:31,860
low end devices use bluetooth high end

677
00:30:27,870 --> 00:30:33,959
device are using Wi-Fi so with Wi-Fi it

678
00:30:31,860 --> 00:30:36,510
was simple so the you standard tool to

679
00:30:33,960 --> 00:30:38,490
set up intercepting we created our own a

680
00:30:36,510 --> 00:30:41,070
rough access point and associated device

681
00:30:38,490 --> 00:30:45,150
with this access point and it was easy

682
00:30:41,070 --> 00:30:47,159
to gain access to traffic which was sent

683
00:30:45,150 --> 00:30:48,990
between the device and the Internet

684
00:30:47,160 --> 00:30:52,890
it's a little bit more difficult with

685
00:30:48,990 --> 00:30:55,049
brutal because it was not using just

686
00:30:52,890 --> 00:30:58,140
normal private area network connectivity

687
00:30:55,049 --> 00:31:03,179
over Bluetooth but it first required to

688
00:30:58,140 --> 00:31:05,520
establish a hands-free protocol so it

689
00:31:03,179 --> 00:31:07,530
will try if he can do hands-free and

690
00:31:05,520 --> 00:31:09,510
only feet it is successful then it will

691
00:31:07,530 --> 00:31:12,090
initial networking so we needed to

692
00:31:09,510 --> 00:31:14,070
emulate this part because not to were

693
00:31:12,090 --> 00:31:17,220
supporting this to redevelop small

694
00:31:14,070 --> 00:31:19,290
Python tool that implemented this

695
00:31:17,220 --> 00:31:22,590
protocol of course we needed to

696
00:31:19,290 --> 00:31:24,299
implement only important parts important

697
00:31:22,590 --> 00:31:28,649
parts that were necessary for this

698
00:31:24,299 --> 00:31:30,900
device to operate and as a result we

699
00:31:28,650 --> 00:31:37,290
were able to emulate and capture traffic

700
00:31:30,900 --> 00:31:41,820
also we are we are Bluetooth so that's

701
00:31:37,290 --> 00:31:44,129
all for me though now to men so Ladon

702
00:31:41,820 --> 00:31:46,168
has been very quick on the bluetooth

703
00:31:44,130 --> 00:31:48,690
part but it was taking us a lot a lot of

704
00:31:46,169 --> 00:31:50,940
time to figure out why the device didn't

705
00:31:48,690 --> 00:31:53,010
want to communicate with the back-end

706
00:31:50,940 --> 00:31:56,130
system without the hands-free protocol

707
00:31:53,010 --> 00:31:59,940
so the unscrew protocol if I can go to

708
00:31:56,130 --> 00:32:01,890
the slide before is mainly relying on 80

709
00:31:59,940 --> 00:32:04,110
comments so if you have been playing

710
00:32:01,890 --> 00:32:06,120
with modems something like 20 years ago

711
00:32:04,110 --> 00:32:08,070
you've been using the 80 comments to

712
00:32:06,120 --> 00:32:09,600
configure your modem moves and the

713
00:32:08,070 --> 00:32:12,030
hands-free protocol is exactly the same

714
00:32:09,600 --> 00:32:14,790
it's built on top of 80 comments so it

715
00:32:12,030 --> 00:32:16,770
just saw online and comments exchange

716
00:32:14,790 --> 00:32:19,860
between the Bluetooth device on the

717
00:32:16,770 --> 00:32:22,440
phone so for example here you can see a

718
00:32:19,860 --> 00:32:26,040
screenshot just the device asking for

719
00:32:22,440 --> 00:32:28,960
the mobile carrier network name

720
00:32:26,040 --> 00:32:31,240
so now we are going to discuss about the

721
00:32:28,960 --> 00:32:34,660
existing attacks and why they don't work

722
00:32:31,240 --> 00:32:37,660
anymore on the devices we have tested a

723
00:32:34,660 --> 00:32:40,450
couple of years ago I think it's 2014 in

724
00:32:37,660 --> 00:32:43,090
blood cat and DEF CON there has been

725
00:32:40,450 --> 00:32:46,780
some talks regarding the jeep cars which

726
00:32:43,090 --> 00:32:48,399
were hacked remotely the jeep cars you

727
00:32:46,780 --> 00:32:51,190
remember of Laden told you that the

728
00:32:48,400 --> 00:32:54,100
devices were home devices the jeep cars

729
00:32:51,190 --> 00:32:56,200
use similar om devices when I say

730
00:32:54,100 --> 00:33:00,850
similar is the similar hardware and

731
00:32:56,200 --> 00:33:02,410
similar software the the Jeep were

732
00:33:00,850 --> 00:33:04,419
vulnerable because it was possible to

733
00:33:02,410 --> 00:33:07,300
get access to them remotely using telnet

734
00:33:04,420 --> 00:33:09,670
and when you sit on the device with

735
00:33:07,300 --> 00:33:12,760
talent you are able to jump on the D bus

736
00:33:09,670 --> 00:33:14,950
with TCP and then able to communicate

737
00:33:12,760 --> 00:33:17,230
with various services of the device and

738
00:33:14,950 --> 00:33:20,050
finally abuse the firmware upgrade

739
00:33:17,230 --> 00:33:23,200
process to to have permanent access to

740
00:33:20,050 --> 00:33:24,820
the device so in our case Vlad and told

741
00:33:23,200 --> 00:33:27,700
you that we could communicate with the

742
00:33:24,820 --> 00:33:29,770
device using both Wi-Fi and bluetooth so

743
00:33:27,700 --> 00:33:31,750
this is the very first step to

744
00:33:29,770 --> 00:33:34,560
compromise the device and fortunately

745
00:33:31,750 --> 00:33:38,260
for us all the other vulnerabilities

746
00:33:34,560 --> 00:33:40,149
have been fixed so debug TCP is not

747
00:33:38,260 --> 00:33:42,580
accessible anymore telnet is not

748
00:33:40,150 --> 00:33:44,560
accessible anymore and we couldn't have

749
00:33:42,580 --> 00:33:48,129
used the firmware upgrade procedure

750
00:33:44,560 --> 00:33:52,110
because they are not using a secure sign

751
00:33:48,130 --> 00:33:54,670
firmware validation so what could we do

752
00:33:52,110 --> 00:33:56,530
one of the attack angle we have choose

753
00:33:54,670 --> 00:33:58,750
is attacking the third-party

754
00:33:56,530 --> 00:34:03,190
applications the device we've been

755
00:33:58,750 --> 00:34:05,350
testing did support an app store to

756
00:34:03,190 --> 00:34:07,690
install third-party application so it

757
00:34:05,350 --> 00:34:09,668
can be like your phone you have the app

758
00:34:07,690 --> 00:34:12,879
store on iOS or Android is exactly the

759
00:34:09,668 --> 00:34:14,770
same accepting that there are much less

760
00:34:12,879 --> 00:34:17,168
application offered and all the

761
00:34:14,770 --> 00:34:20,139
application are controlled by the car

762
00:34:17,168 --> 00:34:22,299
manufacturer so you has a as a hacker

763
00:34:20,139 --> 00:34:24,550
you cannot get access to the software

764
00:34:22,300 --> 00:34:27,250
development kit and you cannot have your

765
00:34:24,550 --> 00:34:28,659
own application so the very first step

766
00:34:27,250 --> 00:34:30,909
was to intercept the communication

767
00:34:28,659 --> 00:34:32,550
between the app store application and

768
00:34:30,909 --> 00:34:35,520
the back-end systems

769
00:34:32,550 --> 00:34:38,730
we figure out that it was using HTTPS

770
00:34:35,520 --> 00:34:40,679
which which is good unfortunately we

771
00:34:38,730 --> 00:34:42,510
also discovered that the encryption is

772
00:34:40,679 --> 00:34:45,270
totally broken and if you try to

773
00:34:42,510 --> 00:34:46,800
intercept the HTTP communication and

774
00:34:45,270 --> 00:34:49,139
sign it with your own self signed

775
00:34:46,800 --> 00:34:51,090
certificate it will work and will not

776
00:34:49,139 --> 00:34:54,990
display any one into the end user which

777
00:34:51,090 --> 00:34:57,000
is a small problem the second thing we

778
00:34:54,989 --> 00:34:58,979
discover is the communication with the

779
00:34:57,000 --> 00:35:03,030
back-end system is done using XML

780
00:34:58,980 --> 00:35:05,700
messages so very similar to soap web

781
00:35:03,030 --> 00:35:08,340
services requests so it's using XML

782
00:35:05,700 --> 00:35:11,490
messages we've get and post or HTTP

783
00:35:08,340 --> 00:35:14,640
requests the first attack we conduct in

784
00:35:11,490 --> 00:35:17,279
is abusing the statuses of the

785
00:35:14,640 --> 00:35:18,868
application when the device the App

786
00:35:17,280 --> 00:35:21,030
Store has for the list of available

787
00:35:18,869 --> 00:35:23,040
application the list of application is

788
00:35:21,030 --> 00:35:25,920
returned with the statues which is

789
00:35:23,040 --> 00:35:28,110
either by install or installed which

790
00:35:25,920 --> 00:35:29,940
means if you have by the device will

791
00:35:28,110 --> 00:35:32,070
show by and you will have to pay for the

792
00:35:29,940 --> 00:35:33,690
application but if the status is just

793
00:35:32,070 --> 00:35:36,240
installed you can click on the install

794
00:35:33,690 --> 00:35:38,520
button and get the app for free so the

795
00:35:36,240 --> 00:35:40,830
logic control is done at the client side

796
00:35:38,520 --> 00:35:43,020
so in your car and not on the backend

797
00:35:40,830 --> 00:35:46,080
system in the server side so this is a

798
00:35:43,020 --> 00:35:49,380
major finding which reminds us to the

799
00:35:46,080 --> 00:35:53,759
first mobile applications 5 almost 10

800
00:35:49,380 --> 00:35:55,530
years ago now the second thing is so the

801
00:35:53,760 --> 00:36:00,210
first thing is we could get hot for free

802
00:35:55,530 --> 00:36:01,710
so what what next here you can see the

803
00:36:00,210 --> 00:36:04,290
XML document that we have just changed

804
00:36:01,710 --> 00:36:06,030
the by and replaced by install to be

805
00:36:04,290 --> 00:36:07,880
able to install pay application for

806
00:36:06,030 --> 00:36:10,460
frame

807
00:36:07,880 --> 00:36:13,160
so next we wanted to reverse the

808
00:36:10,460 --> 00:36:15,530
application that we found on the server

809
00:36:13,160 --> 00:36:17,240
so each application can be retrived

810
00:36:15,530 --> 00:36:18,710
because when you get the software

811
00:36:17,240 --> 00:36:21,560
catalog from the backend system it

812
00:36:18,710 --> 00:36:23,450
provides you with the URL and its system

813
00:36:21,560 --> 00:36:25,250
exposed on the internet it's not using a

814
00:36:23,450 --> 00:36:27,770
VPN there is no authentication nothing

815
00:36:25,250 --> 00:36:30,230
so if you have the URL you can download

816
00:36:27,770 --> 00:36:33,140
the mobile application packages each

817
00:36:30,230 --> 00:36:35,300
package is a zip archive so you download

818
00:36:33,140 --> 00:36:37,730
them and indeed the zip you will find

819
00:36:35,300 --> 00:36:42,140
two things so you will find a jean which

820
00:36:37,730 --> 00:36:44,570
is Java archive and signature file the

821
00:36:42,140 --> 00:36:47,180
signature file is a bit of problematic

822
00:36:44,570 --> 00:36:50,570
for us because it feels we figure out

823
00:36:47,180 --> 00:36:52,940
that is our sa signature so it is based

824
00:36:50,570 --> 00:36:54,980
on public and private key architecture

825
00:36:52,940 --> 00:36:57,320
and we could not break it which right to

826
00:36:54,980 --> 00:36:58,450
resign it with random keys and it didn't

827
00:36:57,320 --> 00:37:00,950
work

828
00:36:58,450 --> 00:37:04,520
fortunately the Java source code was not

829
00:37:00,950 --> 00:37:07,939
up who skated but the Java sauce the

830
00:37:04,520 --> 00:37:10,870
Java bytecode itself was signed so we

831
00:37:07,940 --> 00:37:15,050
here we are facing a double level of

832
00:37:10,870 --> 00:37:17,480
signature systems first of all a file

833
00:37:15,050 --> 00:37:20,750
signature and the second thing is code

834
00:37:17,480 --> 00:37:24,800
signature so does it mean it was game

835
00:37:20,750 --> 00:37:26,720
over and we couldn't hack here no so we

836
00:37:24,800 --> 00:37:28,460
started with D compiling the source code

837
00:37:26,720 --> 00:37:30,589
of the App Store itself because the App

838
00:37:28,460 --> 00:37:33,410
Store package was available as an update

839
00:37:30,590 --> 00:37:35,900
on the on the remote server the first

840
00:37:33,410 --> 00:37:39,170
thing which I mentioned is the source

841
00:37:35,900 --> 00:37:42,980
code was not obfuscated long story short

842
00:37:39,170 --> 00:37:46,400
here is the installation process so the

843
00:37:42,980 --> 00:37:48,500
device starts and checks if the status

844
00:37:46,400 --> 00:37:50,720
is install if the status is not

845
00:37:48,500 --> 00:37:53,390
installed it exists the second thing is

846
00:37:50,720 --> 00:37:56,330
it starts downloading the zip and then

847
00:37:53,390 --> 00:37:59,509
it try to extract the zip archive to a

848
00:37:56,330 --> 00:38:02,210
temporary area only after that it will

849
00:37:59,510 --> 00:38:05,900
check if the jar file is signed properly

850
00:38:02,210 --> 00:38:08,270
with the with the with the file hash

851
00:38:05,900 --> 00:38:10,010
signature and if the signature matches

852
00:38:08,270 --> 00:38:14,090
then it will install the application on

853
00:38:10,010 --> 00:38:16,010
device permanently so before checking

854
00:38:14,090 --> 00:38:18,620
the signature this is very important and

855
00:38:16,010 --> 00:38:20,630
a key here before doing the installation

856
00:38:18,620 --> 00:38:23,509
the device has to download the file

857
00:38:20,630 --> 00:38:25,160
extracts it to a temporary area even

858
00:38:23,510 --> 00:38:27,380
before checking the signature and this

859
00:38:25,160 --> 00:38:31,759
is one of the vulnerability we will

860
00:38:27,380 --> 00:38:35,480
exploit here so this is just two lines

861
00:38:31,760 --> 00:38:37,940
of the code we reversed and if you are

862
00:38:35,480 --> 00:38:40,850
good software hacker here you will

863
00:38:37,940 --> 00:38:43,070
figure out that there is a hard-coded

864
00:38:40,850 --> 00:38:45,770
temporary pass and then it is

865
00:38:43,070 --> 00:38:48,470
concatenating the what we call the zip

866
00:38:45,770 --> 00:38:52,880
entry so the file name here with a slash

867
00:38:48,470 --> 00:38:54,830
so what should come to your mind is file

868
00:38:52,880 --> 00:38:57,200
injection and directory traversal

869
00:38:54,830 --> 00:38:59,600
vulnerability so what happen if we

870
00:38:57,200 --> 00:39:01,460
manage by chance to change the name here

871
00:38:59,600 --> 00:39:03,110
by something like that dot slash that

872
00:39:01,460 --> 00:39:04,360
the slash that the slash something else

873
00:39:03,110 --> 00:39:07,730
[Music]

874
00:39:04,360 --> 00:39:10,580
so if you try to do this on your laptop

875
00:39:07,730 --> 00:39:12,380
and use unzip winzip of 7-zip it will

876
00:39:10,580 --> 00:39:15,440
not work it will write something like

877
00:39:12,380 --> 00:39:17,870
removing a leading trail or whatever

878
00:39:15,440 --> 00:39:21,140
message but what happens with this dirty

879
00:39:17,870 --> 00:39:24,850
Java code well guess what it works so

880
00:39:21,140 --> 00:39:28,609
what we did is with Python we created a

881
00:39:24,850 --> 00:39:31,069
crafted zip archive whoops a crafted zip

882
00:39:28,610 --> 00:39:32,660
archive which contains a lot of dot dot

883
00:39:31,070 --> 00:39:34,790
slash because we don't know where we are

884
00:39:32,660 --> 00:39:37,100
in the file system so we put a lot of

885
00:39:34,790 --> 00:39:39,680
them the number doesn't matter well it

886
00:39:37,100 --> 00:39:41,420
need to be sufficient and then because

887
00:39:39,680 --> 00:39:43,190
we don't have access to the device if we

888
00:39:41,420 --> 00:39:45,050
want to check if we are able to write

889
00:39:43,190 --> 00:39:46,940
something somewhere we need to write

890
00:39:45,050 --> 00:39:49,040
something in a place we can check so

891
00:39:46,940 --> 00:39:51,080
here the only thing we are is if we

892
00:39:49,040 --> 00:39:52,790
attach a USB key to the device and you

893
00:39:51,080 --> 00:39:54,860
can attach the USB key because you can

894
00:39:52,790 --> 00:39:57,860
use your USB key to play mp3 on the

895
00:39:54,860 --> 00:40:00,500
system so just put a USB key on cue

896
00:39:57,860 --> 00:40:06,020
annex the USB key are automatically

897
00:40:00,500 --> 00:40:08,990
mounted in /fs / USB 0 so here if this

898
00:40:06,020 --> 00:40:13,250
zip archive is accepted it will create

899
00:40:08,990 --> 00:40:15,439
an empty file on the USB stick so we did

900
00:40:13,250 --> 00:40:19,130
this we installed ur archive and it got

901
00:40:15,440 --> 00:40:24,350
installed so we could we could find our

902
00:40:19,130 --> 00:40:25,940
file here on the USB stick so what is

903
00:40:24,350 --> 00:40:29,330
the next thing to do we are able to

904
00:40:25,940 --> 00:40:31,730
write content somewhere but what we want

905
00:40:29,330 --> 00:40:33,940
to do is being able to execute content

906
00:40:31,730 --> 00:40:36,080
not to only copy

907
00:40:33,940 --> 00:40:38,780
wladim mentioned that a lot of fight

908
00:40:36,080 --> 00:40:40,940
systems are mounted as read-only this is

909
00:40:38,780 --> 00:40:44,810
because of embedded fight system and

910
00:40:40,940 --> 00:40:47,240
this is a very common finding in in in

911
00:40:44,810 --> 00:40:49,460
mobile environment so what we need to do

912
00:40:47,240 --> 00:40:52,040
is to find the location where we are

913
00:40:49,460 --> 00:40:53,630
able to write on the device we know that

914
00:40:52,040 --> 00:40:55,490
there is a place for sure which is

915
00:40:53,630 --> 00:40:57,080
writable it is the place where the

916
00:40:55,490 --> 00:40:58,160
third-party applications are stored

917
00:40:57,080 --> 00:41:00,080
because when you install the application

918
00:40:58,160 --> 00:41:01,819
the application gets stored on the

919
00:41:00,080 --> 00:41:04,100
device so we needed to found this

920
00:41:01,820 --> 00:41:06,380
location and be able to put something in

921
00:41:04,100 --> 00:41:10,279
this location then the next thing to do

922
00:41:06,380 --> 00:41:11,720
is to execute it so there are two

923
00:41:10,280 --> 00:41:14,000
problems here that we need to solve

924
00:41:11,720 --> 00:41:16,100
where how the apps installed on the

925
00:41:14,000 --> 00:41:18,140
filesystem and the second thing is how

926
00:41:16,100 --> 00:41:22,759
to recompile a java application without

927
00:41:18,140 --> 00:41:25,400
the correct SDK or API as I mentioned

928
00:41:22,760 --> 00:41:29,150
the application are using a custom SDK

929
00:41:25,400 --> 00:41:30,380
an application API sorry and we will not

930
00:41:29,150 --> 00:41:32,480
provide it with this and we couldn't

931
00:41:30,380 --> 00:41:34,430
find anything on the Internet so we

932
00:41:32,480 --> 00:41:37,820
needed to patch the java application to

933
00:41:34,430 --> 00:41:40,669
ASIC whatever content so what about Java

934
00:41:37,820 --> 00:41:42,920
backdooring most of you have probably

935
00:41:40,670 --> 00:41:45,830
been playing with the burger like

936
00:41:42,920 --> 00:41:47,900
community or Holi and I've been patching

937
00:41:45,830 --> 00:41:51,290
the software to execute malicious

938
00:41:47,900 --> 00:41:52,580
instruction or to backdoor them is it

939
00:41:51,290 --> 00:41:54,320
possible to do the same with Java

940
00:41:52,580 --> 00:41:57,890
applications the answer is yes

941
00:41:54,320 --> 00:42:00,500
definitely but very very little talks

942
00:41:57,890 --> 00:42:03,560
about that on the Internet so what is

943
00:42:00,500 --> 00:42:05,540
the Java bytecode Java bytecode is Java

944
00:42:03,560 --> 00:42:08,600
source code which has been compiled and

945
00:42:05,540 --> 00:42:10,850
which get executed by the GRE which is

946
00:42:08,600 --> 00:42:13,040
Java Runtime environment it is very

947
00:42:10,850 --> 00:42:15,350
similar to assembly code but working for

948
00:42:13,040 --> 00:42:18,170
a specific CPU which is the Java Virtual

949
00:42:15,350 --> 00:42:20,359
Machine the runtime environment so if we

950
00:42:18,170 --> 00:42:23,210
can backdoor a portable executable or

951
00:42:20,359 --> 00:42:27,560
e.l.f file it is possible to do the same

952
00:42:23,210 --> 00:42:29,780
with a Java bytecode remember here in

953
00:42:27,560 --> 00:42:32,600
our case we found that the jar file is

954
00:42:29,780 --> 00:42:33,140
signed which means that if we change the

955
00:42:32,600 --> 00:42:35,150
bytecode

956
00:42:33,140 --> 00:42:38,060
the signature of the source code will be

957
00:42:35,150 --> 00:42:40,130
different and normally the Java runtime

958
00:42:38,060 --> 00:42:42,619
environment should refuse to run our

959
00:42:40,130 --> 00:42:44,300
malicious code so if you are doing this

960
00:42:42,619 --> 00:42:46,230
on a PC you will get an error message

961
00:42:44,300 --> 00:42:48,480
like the signature is not good

962
00:42:46,230 --> 00:42:51,619
and the file will not be executed by the

963
00:42:48,480 --> 00:42:54,869
runtime environment so before starting

964
00:42:51,619 --> 00:42:57,210
to do complex stuff we decided just to

965
00:42:54,869 --> 00:43:00,900
change in the application package a PNG

966
00:42:57,210 --> 00:43:02,700
icon the PNG icon is signed like the

967
00:43:00,900 --> 00:43:04,710
rest of the content of the Java file so

968
00:43:02,700 --> 00:43:07,290
we changed the PNG icon of a software

969
00:43:04,710 --> 00:43:09,210
and with Y and we tried sorry to start

970
00:43:07,290 --> 00:43:12,420
the patched application which didn't

971
00:43:09,210 --> 00:43:14,460
work the John signature was rejected but

972
00:43:12,420 --> 00:43:18,540
the Java Virtual Machine so does it mean

973
00:43:14,460 --> 00:43:21,510
game over still not so how does it work

974
00:43:18,540 --> 00:43:26,579
Java signature of archives it's

975
00:43:21,510 --> 00:43:29,010
basically a key and then the the test of

976
00:43:26,579 --> 00:43:32,369
all the files contained in the archive

977
00:43:29,010 --> 00:43:35,250
but what happens if we just remove in

978
00:43:32,369 --> 00:43:38,700
the manifest the G test of files and the

979
00:43:35,250 --> 00:43:41,250
key here it works because there is a

980
00:43:38,700 --> 00:43:43,680
failure here here is what is implemented

981
00:43:41,250 --> 00:43:46,560
they consider that it will always be a

982
00:43:43,680 --> 00:43:48,990
signature in the archive so what they do

983
00:43:46,560 --> 00:43:51,270
is the check if the signature is good it

984
00:43:48,990 --> 00:43:53,040
rejects it sorry it except if it's not

985
00:43:51,270 --> 00:43:54,810
good it rejects but they have not

986
00:43:53,040 --> 00:43:55,740
considered the option of what happens if

987
00:43:54,810 --> 00:43:57,869
there is no signature

988
00:43:55,740 --> 00:44:01,618
so no signature no problem it runs

989
00:43:57,869 --> 00:44:05,369
without any warning so now we have to

990
00:44:01,619 --> 00:44:08,190
prep right to prepare sorry a payload so

991
00:44:05,369 --> 00:44:10,619
the step is to create a payload in Java

992
00:44:08,190 --> 00:44:12,810
so basically just executed process here

993
00:44:10,619 --> 00:44:16,109
we decided to execute the script that we

994
00:44:12,810 --> 00:44:19,200
all stood on our USB stick so at doing

995
00:44:16,109 --> 00:44:20,460
this preventers to every time because we

996
00:44:19,200 --> 00:44:23,310
are telling you the story in one hour

997
00:44:20,460 --> 00:44:25,050
but it took several weeks because it is

998
00:44:23,310 --> 00:44:26,910
blind attack so you don't have any error

999
00:44:25,050 --> 00:44:28,650
message not nothing so it takes your

1000
00:44:26,910 --> 00:44:30,660
time you'll compile recompile retest

1001
00:44:28,650 --> 00:44:32,790
reinstall and it's taking a lot of time

1002
00:44:30,660 --> 00:44:34,589
so what we decided here is just to

1003
00:44:32,790 --> 00:44:36,750
executor script on the USB key we can

1004
00:44:34,589 --> 00:44:38,640
easily change with the computer without

1005
00:44:36,750 --> 00:44:43,890
having to recompile and reinstall all

1006
00:44:38,640 --> 00:44:46,680
the time so we created this payload we

1007
00:44:43,890 --> 00:44:50,190
copy the compiled payload to the job

1008
00:44:46,680 --> 00:44:52,230
file and then we have to I Jack the

1009
00:44:50,190 --> 00:44:55,619
execution flow of the application to

1010
00:44:52,230 --> 00:44:57,720
redirect it to our payload what's

1011
00:44:55,619 --> 00:44:58,930
important to do here is to use the

1012
00:44:57,720 --> 00:45:01,359
correct compile

1013
00:44:58,930 --> 00:45:03,368
version when you are doing that because

1014
00:45:01,359 --> 00:45:06,520
if you compile it for example for Java

1015
00:45:03,369 --> 00:45:09,940
1.6 and the device is just uses 1.4 then

1016
00:45:06,520 --> 00:45:12,670
it will not work so modifying the

1017
00:45:09,940 --> 00:45:15,099
bytecode is as simple as adding three

1018
00:45:12,670 --> 00:45:17,800
instructions so what's the most

1019
00:45:15,099 --> 00:45:20,920
important the most important here is

1020
00:45:17,800 --> 00:45:22,809
invoke static with your payload so if

1021
00:45:20,920 --> 00:45:26,319
you put it in the start instruction of

1022
00:45:22,809 --> 00:45:29,410
the application your payload will be

1023
00:45:26,319 --> 00:45:32,800
executed before anything else and it

1024
00:45:29,410 --> 00:45:34,569
works so now every time we are starting

1025
00:45:32,800 --> 00:45:37,569
the application on the infotainment

1026
00:45:34,569 --> 00:45:42,790
system the script which is located on

1027
00:45:37,569 --> 00:45:44,770
the USB stick gets executed so what we

1028
00:45:42,790 --> 00:45:46,270
should do here the next thing is we

1029
00:45:44,770 --> 00:45:49,300
figure out we were able to execute

1030
00:45:46,270 --> 00:45:51,190
command so we were able for example to

1031
00:45:49,300 --> 00:45:53,530
copy files from the file system and do

1032
00:45:51,190 --> 00:45:55,540
offline reverse engineering but what we

1033
00:45:53,530 --> 00:45:57,309
wanted to do is to get interactive

1034
00:45:55,540 --> 00:45:58,180
access to the device so there was two

1035
00:45:57,309 --> 00:46:00,849
solution for that

1036
00:45:58,180 --> 00:46:04,299
you cannot assume as we mentioned you

1037
00:46:00,849 --> 00:46:07,089
cannot generate a metal pressure fork

1038
00:46:04,299 --> 00:46:08,770
unix because it's a specific cpu it's a

1039
00:46:07,089 --> 00:46:09,190
specific operating system so it will not

1040
00:46:08,770 --> 00:46:11,680
work

1041
00:46:09,190 --> 00:46:13,750
unfortunately so what we had to do is to

1042
00:46:11,680 --> 00:46:15,960
be able to stop telnet or to start

1043
00:46:13,750 --> 00:46:19,750
koukin koukin which is the cue annex

1044
00:46:15,960 --> 00:46:21,490
debugging daemon but chicken was not in

1045
00:46:19,750 --> 00:46:23,349
the building because following the

1046
00:46:21,490 --> 00:46:25,240
recommendation of to annex when you are

1047
00:46:23,349 --> 00:46:27,460
building your production image from

1048
00:46:25,240 --> 00:46:30,939
where you remove unnecessary daemon and

1049
00:46:27,460 --> 00:46:33,670
you remove tunics so what we did

1050
00:46:30,940 --> 00:46:36,220
basically is very stupid but we were

1051
00:46:33,670 --> 00:46:38,020
looking for some other UNIX images on

1052
00:46:36,220 --> 00:46:41,020
the web and when we figure out that the

1053
00:46:38,020 --> 00:46:44,170
CPU used here as the same instruction

1054
00:46:41,020 --> 00:46:46,960
set as a Raspberry Pi and we find out

1055
00:46:44,170 --> 00:46:50,410
that some people had compiled tunics for

1056
00:46:46,960 --> 00:46:52,690
support on Raspberry Pi so in a UNIX

1057
00:46:50,410 --> 00:46:56,379
image for Raspberry Pi we could find the

1058
00:46:52,690 --> 00:46:58,990
Q Khan daemon and we were very lucky

1059
00:46:56,380 --> 00:47:00,910
copying this demon to the system did

1060
00:46:58,990 --> 00:47:03,250
work and we were able to start queuing

1061
00:47:00,910 --> 00:47:08,379
and then gain permanent access to the

1062
00:47:03,250 --> 00:47:10,180
device so now maintaining access and

1063
00:47:08,380 --> 00:47:13,059
post exploitation

1064
00:47:10,180 --> 00:47:16,299
so maintaining access means that we have

1065
00:47:13,059 --> 00:47:18,099
our demons restarting automatically when

1066
00:47:16,299 --> 00:47:22,059
we are starting the device so it can be

1067
00:47:18,099 --> 00:47:24,180
telnet or Keuka so for the story we have

1068
00:47:22,059 --> 00:47:26,859
cracked the root password of the device

1069
00:47:24,180 --> 00:47:29,379
this password is generated on the build

1070
00:47:26,859 --> 00:47:31,450
so for every different build level there

1071
00:47:29,380 --> 00:47:33,910
are a different root password so it's

1072
00:47:31,450 --> 00:47:36,788
not using a car or automotive but it's

1073
00:47:33,910 --> 00:47:38,288
just a random one but luckily they are

1074
00:47:36,789 --> 00:47:41,140
using the script which means the

1075
00:47:38,289 --> 00:47:42,549
password can only be 8 characters so the

1076
00:47:41,140 --> 00:47:46,480
password could be cracked within few

1077
00:47:42,549 --> 00:47:48,099
hours and a powerful system with GPU we

1078
00:47:46,480 --> 00:47:50,200
were able to crack the root password to

1079
00:47:48,099 --> 00:47:53,710
get permanent access internet if we are

1080
00:47:50,200 --> 00:47:57,279
able to start telnet so we had to find a

1081
00:47:53,710 --> 00:47:59,740
script or an executable which resides on

1082
00:47:57,279 --> 00:48:02,230
partition we can write some mount it has

1083
00:47:59,740 --> 00:48:05,558
readwrite to be executed at the next

1084
00:48:02,230 --> 00:48:07,450
boot so we investigate and we finally

1085
00:48:05,559 --> 00:48:09,640
found one so we could I checked the boot

1086
00:48:07,450 --> 00:48:12,819
process of the device itself to start

1087
00:48:09,640 --> 00:48:14,770
our demons at the system restart here

1088
00:48:12,819 --> 00:48:17,319
you need to be very careful because

1089
00:48:14,770 --> 00:48:19,450
there is no reset to factory to restore

1090
00:48:17,319 --> 00:48:22,690
the file system so if you mess the boot

1091
00:48:19,450 --> 00:48:24,520
process of your device sorry you just

1092
00:48:22,690 --> 00:48:29,799
end up with a break

1093
00:48:24,520 --> 00:48:31,329
an expensive break but a break here the

1094
00:48:29,799 --> 00:48:32,799
post exploitation of the device because

1095
00:48:31,329 --> 00:48:34,599
now we have full control of the device

1096
00:48:32,799 --> 00:48:36,549
so we started to play with the device

1097
00:48:34,599 --> 00:48:39,970
itself and see what funny things we can

1098
00:48:36,549 --> 00:48:43,329
do what we find out is most user data

1099
00:48:39,970 --> 00:48:46,000
are stored in SQLite database like any

1100
00:48:43,329 --> 00:48:47,920
Android phone so if you imagine that you

1101
00:48:46,000 --> 00:48:50,770
can do the same attack on a rental car

1102
00:48:47,920 --> 00:48:53,319
you will be able to access all the data

1103
00:48:50,770 --> 00:48:55,240
are the phones of the previous drivers

1104
00:48:53,319 --> 00:48:57,849
of the car so you will get the phone

1105
00:48:55,240 --> 00:48:59,618
books and if the user is using an

1106
00:48:57,849 --> 00:49:03,579
Android phone you will find as well the

1107
00:48:59,619 --> 00:49:06,609
SMS messages which which can be fun

1108
00:49:03,579 --> 00:49:08,740
you can obviously found the API upon

1109
00:49:06,609 --> 00:49:10,630
endpoints re and keys for the remote

1110
00:49:08,740 --> 00:49:13,598
services so the device has for example

1111
00:49:10,630 --> 00:49:14,920
services for traffic informations you

1112
00:49:13,599 --> 00:49:17,410
can find the passwords and the

1113
00:49:14,920 --> 00:49:19,630
credentials to use those remote services

1114
00:49:17,410 --> 00:49:21,190
you can play with the graphics so you

1115
00:49:19,630 --> 00:49:22,329
can change the look and feel of your

1116
00:49:21,190 --> 00:49:24,939
device

1117
00:49:22,329 --> 00:49:27,819
and you can find various services which

1118
00:49:24,939 --> 00:49:30,249
are connecting to the D bus one of them

1119
00:49:27,819 --> 00:49:33,189
which is very funny is the TTS so if you

1120
00:49:30,249 --> 00:49:35,468
send a message to the TTS service the

1121
00:49:33,189 --> 00:49:38,229
car will start to be talking to the

1122
00:49:35,469 --> 00:49:40,209
driver who the speaker forms so it can

1123
00:49:38,229 --> 00:49:44,098
be very scary if you attack the car of

1124
00:49:40,209 --> 00:49:47,169
somebody and say hello a whole new car

1125
00:49:44,099 --> 00:49:48,999
so most of the actions so the services

1126
00:49:47,170 --> 00:49:52,420
which are connecting to the Devers are

1127
00:49:48,999 --> 00:49:54,819
scripted in lieu way so here they're

1128
00:49:52,420 --> 00:49:56,709
using compiled lu8 so you cannot have

1129
00:49:54,819 --> 00:49:58,929
direct access to the source code and

1130
00:49:56,709 --> 00:50:01,629
they are using non-traditional lu a

1131
00:49:58,929 --> 00:50:04,299
complete compiler so we couldn't

1132
00:50:01,630 --> 00:50:08,109
decompile immediately what we figure out

1133
00:50:04,299 --> 00:50:10,630
is if we reuse the compiler from github

1134
00:50:08,109 --> 00:50:12,910
and we patch it them to ignore the

1135
00:50:10,630 --> 00:50:17,170
checksum or the made the magic number

1136
00:50:12,910 --> 00:50:20,618
checking with a version 5.1 5.2 we were

1137
00:50:17,170 --> 00:50:23,789
able to decompile the lure and recover

1138
00:50:20,619 --> 00:50:27,130
the source code which was very fun and

1139
00:50:23,789 --> 00:50:29,019
then we finally really enable deepest of

1140
00:50:27,130 --> 00:50:32,559
a tcp which means that we can interact

1141
00:50:29,019 --> 00:50:34,808
with the d-bus remotely without being

1142
00:50:32,559 --> 00:50:36,579
sit on the car which is very fun because

1143
00:50:34,809 --> 00:50:38,920
as I mentioned you can play with some

1144
00:50:36,579 --> 00:50:42,279
services like text to speak or you can

1145
00:50:38,920 --> 00:50:44,380
change the location on the D bus so the

1146
00:50:42,279 --> 00:50:48,160
navigation system will not work it will

1147
00:50:44,380 --> 00:50:50,799
think it it is in another place so the

1148
00:50:48,160 --> 00:50:54,009
Grail the Grail is the Holy Grail is the

1149
00:50:50,799 --> 00:50:55,869
canvas because if you get access to the

1150
00:50:54,009 --> 00:50:58,569
canvas you get access to critical

1151
00:50:55,869 --> 00:51:02,199
systems of the car so the braking system

1152
00:50:58,569 --> 00:51:06,069
light management of the temperature

1153
00:51:02,199 --> 00:51:08,529
everything unfortunately for us and the

1154
00:51:06,069 --> 00:51:10,569
systems we have been testing were not

1155
00:51:08,529 --> 00:51:12,789
using the canvas although the canvas is

1156
00:51:10,569 --> 00:51:14,650
connecting to the device the system

1157
00:51:12,789 --> 00:51:16,929
could not choose the canvas because it

1158
00:51:14,650 --> 00:51:19,749
didn't have the required piece of so of

1159
00:51:16,929 --> 00:51:22,539
of code and the proper canvas

1160
00:51:19,749 --> 00:51:25,299
transceiver so instead of that because

1161
00:51:22,539 --> 00:51:29,679
the device was pretty crap it was using

1162
00:51:25,299 --> 00:51:30,969
a kind of converter and it was talking

1163
00:51:29,679 --> 00:51:33,530
with the converter but the converter

1164
00:51:30,969 --> 00:51:37,070
itself was talking with the canvas

1165
00:51:33,530 --> 00:51:39,320
so we could only recover a limited set

1166
00:51:37,070 --> 00:51:41,960
of information from this transceiver

1167
00:51:39,320 --> 00:51:43,970
such as the fuel consumption or whatever

1168
00:51:41,960 --> 00:51:48,890
but we could not get access to the food

1169
00:51:43,970 --> 00:51:52,759
canvas which was really frustrating so

1170
00:51:48,890 --> 00:51:54,140
the important part here is it was not a

1171
00:51:52,760 --> 00:51:58,930
security concern either

1172
00:51:54,140 --> 00:52:01,100
it was just a poor device design so

1173
00:51:58,930 --> 00:52:03,529
finally I'll go quickly because we don't

1174
00:52:01,100 --> 00:52:05,360
have a lot of time but the hardware

1175
00:52:03,530 --> 00:52:07,160
attack because we have been talking

1176
00:52:05,360 --> 00:52:11,480
about the software side but there is

1177
00:52:07,160 --> 00:52:13,460
also the hardware side so one of the

1178
00:52:11,480 --> 00:52:15,710
very interesting things we noticed on

1179
00:52:13,460 --> 00:52:18,590
the device board is this it looks like

1180
00:52:15,710 --> 00:52:22,460
debug ports so what we did is we had

1181
00:52:18,590 --> 00:52:26,990
attached our favorite clamps here and we

1182
00:52:22,460 --> 00:52:30,380
started to use the logic analyzer so we

1183
00:52:26,990 --> 00:52:32,569
were quickly able to identify a console

1184
00:52:30,380 --> 00:52:35,720
so here you have the full boot process

1185
00:52:32,570 --> 00:52:39,110
of the tunics but as we mentioned QX is

1186
00:52:35,720 --> 00:52:41,839
is not Linux so you cannot edit for

1187
00:52:39,110 --> 00:52:43,250
example the group the group sorry come

1188
00:52:41,840 --> 00:52:44,810
on line to be executive to boot in

1189
00:52:43,250 --> 00:52:46,850
single user mode so the device is

1190
00:52:44,810 --> 00:52:48,980
booting and when's prompting for a

1191
00:52:46,850 --> 00:52:51,950
password and as I mentioned the root

1192
00:52:48,980 --> 00:52:54,200
password is changed on every build so

1193
00:52:51,950 --> 00:52:58,870
you cannot find it unless you manage to

1194
00:52:54,200 --> 00:53:05,270
extract using the previous technique the

1195
00:52:58,870 --> 00:53:07,759
the shadow file so the serial console

1196
00:53:05,270 --> 00:53:10,370
requires authentication what we found

1197
00:53:07,760 --> 00:53:12,800
out however is there is a Ephrem so

1198
00:53:10,370 --> 00:53:16,250
Ephrem is a very small memory so in our

1199
00:53:12,800 --> 00:53:20,030
case it was 8 kilobytes and we figure

1200
00:53:16,250 --> 00:53:23,600
out that this chip was containing the

1201
00:53:20,030 --> 00:53:25,100
persistent information regarding this

1202
00:53:23,600 --> 00:53:27,520
device so for example the MAC address

1203
00:53:25,100 --> 00:53:30,140
the serial number and various settings

1204
00:53:27,520 --> 00:53:32,030
because when you are installing the

1205
00:53:30,140 --> 00:53:33,920
software on the device

1206
00:53:32,030 --> 00:53:36,290
the serial number cannot be the same on

1207
00:53:33,920 --> 00:53:38,510
every device so device specific

1208
00:53:36,290 --> 00:53:42,109
information are stored here in this

1209
00:53:38,510 --> 00:53:44,510
Ephrem another interesting thing is if

1210
00:53:42,109 --> 00:53:46,880
you remember of Latin has introduced the

1211
00:53:44,510 --> 00:53:49,099
boot process of tunics and the very very

1212
00:53:46,880 --> 00:53:52,040
first stage of the boot process is the

1213
00:53:49,099 --> 00:53:56,930
IPL initial program loader and the IPL

1214
00:53:52,040 --> 00:53:59,119
is in this small Ephrem chip why because

1215
00:53:56,930 --> 00:54:01,609
the device the sock is not able to

1216
00:53:59,119 --> 00:54:04,340
communicate with a large flash by itself

1217
00:54:01,609 --> 00:54:06,770
so it has to use a driver and this is

1218
00:54:04,340 --> 00:54:09,260
exactly what is doing the IPL it's just

1219
00:54:06,770 --> 00:54:11,630
loading the driver to be able to load

1220
00:54:09,260 --> 00:54:14,240
the rest of the file system from a large

1221
00:54:11,630 --> 00:54:16,550
memory chip so here the work is still in

1222
00:54:14,240 --> 00:54:20,290
progress but what we want to do is to I

1223
00:54:16,550 --> 00:54:24,650
Jack the IPL boot process to be able to

1224
00:54:20,290 --> 00:54:27,140
to to to get access and bypassing the

1225
00:54:24,650 --> 00:54:31,609
route logging and to be able to land in

1226
00:54:27,140 --> 00:54:34,009
a single user mode so what is the

1227
00:54:31,609 --> 00:54:36,230
takeaway of these conferences the main

1228
00:54:34,010 --> 00:54:38,810
message here what we want to say is if

1229
00:54:36,230 --> 00:54:41,450
you are a good software and system

1230
00:54:38,810 --> 00:54:44,029
hacker don't be afraid of trying to AK

1231
00:54:41,450 --> 00:54:45,740
the hardware because as we just

1232
00:54:44,030 --> 00:54:48,200
demonstrated here we managed to

1233
00:54:45,740 --> 00:54:51,950
compromise Hardware system using

1234
00:54:48,200 --> 00:54:54,200
software exploitation thank you for

1235
00:54:51,950 --> 00:54:56,589
attending our conference and if you have

1236
00:54:54,200 --> 00:54:56,589
questions

1237
00:55:03,510 --> 00:55:07,620
so any questions

1238
00:55:10,430 --> 00:55:18,370
I mentioned that just the beginning of

1239
00:55:13,790 --> 00:55:22,730
your presentation that EBD port right is

1240
00:55:18,370 --> 00:55:25,640
mandatory every day yes the opening why

1241
00:55:22,730 --> 00:55:29,120
do you think that's the case I mean it's

1242
00:55:25,640 --> 00:55:31,819
to access the components of the system

1243
00:55:29,120 --> 00:55:34,880
the car looks sounds to me like

1244
00:55:31,820 --> 00:55:38,050
something that's nice to have why is it

1245
00:55:34,880 --> 00:55:41,600
legally binding it is required by law so

1246
00:55:38,050 --> 00:55:43,790
first idea is to enable updating

1247
00:55:41,600 --> 00:55:45,049
software on computers second is to

1248
00:55:43,790 --> 00:55:48,259
control emissions

1249
00:55:45,050 --> 00:55:50,240
so there are aftermarket devices it

1250
00:55:48,260 --> 00:55:52,970
requires its axis and the most important

1251
00:55:50,240 --> 00:55:54,919
part is to enable Diagnostics so they

1252
00:55:52,970 --> 00:55:57,890
all be these diagnostic sports in theory

1253
00:55:54,920 --> 00:56:00,380
you shouldn't be able to run anything

1254
00:55:57,890 --> 00:56:03,109
they just because as I mentioned we have

1255
00:56:00,380 --> 00:56:04,220
multiple buses in the car and there

1256
00:56:03,110 --> 00:56:06,530
should be something that is called

1257
00:56:04,220 --> 00:56:08,930
gateway device which is acting as a

1258
00:56:06,530 --> 00:56:12,160
filter so when you connect to obd this

1259
00:56:08,930 --> 00:56:14,930
gateway device should filter the

1260
00:56:12,160 --> 00:56:17,930
requests that are coming from OBD port

1261
00:56:14,930 --> 00:56:20,089
into the other system so it should

1262
00:56:17,930 --> 00:56:22,370
prevent it like proxy that filtering

1263
00:56:20,090 --> 00:56:25,250
proxy it will filter some dangerous URL

1264
00:56:22,370 --> 00:56:27,799
in order to keep your data clean so idea

1265
00:56:25,250 --> 00:56:30,890
is that this OPD should not be the

1266
00:56:27,800 --> 00:56:33,080
interests and that this gateway device

1267
00:56:30,890 --> 00:56:34,549
should filter or dangerous requests but

1268
00:56:33,080 --> 00:56:36,350
what we saw in practice is that this

1269
00:56:34,550 --> 00:56:38,810
gateway sometimes are not done properly

1270
00:56:36,350 --> 00:56:40,850
and there are possibilities to bypass

1271
00:56:38,810 --> 00:56:44,150
them also there is a feature that

1272
00:56:40,850 --> 00:56:46,630
enables up the upgrading ECU software

1273
00:56:44,150 --> 00:56:49,160
and it is normally done by utilizing

1274
00:56:46,630 --> 00:56:51,770
challenge-response authentication but if

1275
00:56:49,160 --> 00:56:53,359
you are persistent enough you might be

1276
00:56:51,770 --> 00:56:54,650
able to crack this challenge respawn

1277
00:56:53,360 --> 00:56:57,490
process because as I mentioned

1278
00:56:54,650 --> 00:56:59,600
automotive manufacturers like to use

1279
00:56:57,490 --> 00:57:01,250
proprietary stuff that usually they

1280
00:56:59,600 --> 00:57:03,500
invent it which are not properly

1281
00:57:01,250 --> 00:57:05,570
designed properly tested and leaves a

1282
00:57:03,500 --> 00:57:08,000
lot to be desired from security

1283
00:57:05,570 --> 00:57:09,920
perspective so yes so buddy can be

1284
00:57:08,000 --> 00:57:13,960
dangerous it was not envisioned to be

1285
00:57:09,920 --> 00:57:13,960
dangerous yeah okay thank you

1286
00:57:14,650 --> 00:57:17,670
anybody else

1287
00:57:26,500 --> 00:57:31,000
hello thank you for this great

1288
00:57:28,540 --> 00:57:33,400
presentation I'm sorry I'm is the first

1289
00:57:31,000 --> 00:57:37,270
part so maybe you mentioned this I just

1290
00:57:33,400 --> 00:57:40,150
want to ask you how how much time did

1291
00:57:37,270 --> 00:57:42,280
this specific hack take you and how did

1292
00:57:40,150 --> 00:57:45,460
you find that time is it's your daily

1293
00:57:42,280 --> 00:57:48,910
job or whatever how did they die

1294
00:57:45,460 --> 00:57:51,130
it's part of our daily job so we are

1295
00:57:48,910 --> 00:57:53,770
exhausted we are IBM team of hackers so

1296
00:57:51,130 --> 00:57:55,540
we are doing this as a part of project a

1297
00:57:53,770 --> 00:57:57,460
research project but this is part of our

1298
00:57:55,540 --> 00:58:00,369
daily work and in these specific cases

1299
00:57:57,460 --> 00:58:03,369
we took about three months from

1300
00:58:00,369 --> 00:58:05,470
beginning to end so of the first phase

1301
00:58:03,369 --> 00:58:09,130
so we consider this to be work in

1302
00:58:05,470 --> 00:58:11,410
progress we work harder you always want

1303
00:58:09,130 --> 00:58:13,330
to do more and you have abilities to do

1304
00:58:11,410 --> 00:58:15,730
more so it's just question of having

1305
00:58:13,330 --> 00:58:18,759
enough time to do it how many of you are

1306
00:58:15,730 --> 00:58:20,680
in the team in our team is big but in

1307
00:58:18,760 --> 00:58:25,349
this specific case it was just two of us

1308
00:58:20,680 --> 00:58:25,348
just to deliver the work yeah thanks

1309
00:58:37,720 --> 00:58:42,279
hi thanks a lot for the brilliant

1310
00:58:40,240 --> 00:58:45,250
presentation everything you I know you

1311
00:58:42,280 --> 00:58:47,350
spoke about the the same chip being used

1312
00:58:45,250 --> 00:58:49,600
by multiple manufacturers and everything

1313
00:58:47,350 --> 00:58:54,580
but have you encountered in your

1314
00:58:49,600 --> 00:58:56,080
research that lets say car manufacturing

1315
00:58:54,580 --> 00:59:00,640
corporations for let's say for

1316
00:58:56,080 --> 00:59:04,240
Volkswagen Audi probation or GM do you

1317
00:59:00,640 --> 00:59:06,700
do you saw any identical let's say

1318
00:59:04,240 --> 00:59:11,470
circuits being used between let's say GM

1319
00:59:06,700 --> 00:59:13,569
and reg we've seen the same hardware but

1320
00:59:11,470 --> 00:59:15,609
more interesting in the firmware we

1321
00:59:13,570 --> 00:59:17,770
found different strings so there is a

1322
00:59:15,610 --> 00:59:20,470
setting like manufacturer number and

1323
00:59:17,770 --> 00:59:22,630
based on that it has different string

1324
00:59:20,470 --> 00:59:25,029
which with the name of the of them

1325
00:59:22,630 --> 00:59:27,130
identical hardware some pieces of

1326
00:59:25,030 --> 00:59:29,290
software are absolutely identical and

1327
00:59:27,130 --> 00:59:31,330
the hardware is definitely so they build

1328
00:59:29,290 --> 00:59:33,190
one hardware platform and then they

1329
00:59:31,330 --> 00:59:35,770
build the standard software part and

1330
00:59:33,190 --> 00:59:37,320
there is only a small user application

1331
00:59:35,770 --> 00:59:39,610
layer that is different between

1332
00:59:37,320 --> 00:59:41,440
different manufacturers let me put it

1333
00:59:39,610 --> 00:59:44,230
that way I would like to talk to you

1334
00:59:41,440 --> 00:59:46,270
about this layer sure we will be in

1335
00:59:44,230 --> 00:59:48,010
lounge so you not to waste any more and

1336
00:59:46,270 --> 00:59:51,220
less times anymore with beers we can

1337
00:59:48,010 --> 00:59:51,550
talk a lot more because more talk behind

1338
00:59:51,220 --> 00:59:56,470
you

1339
00:59:51,550 --> 00:59:59,020
I just short question you mentioned it

1340
00:59:56,470 --> 01:00:01,029
manufacturers did change something up to

1341
00:59:59,020 --> 01:00:03,490
your findings so I maybe missed what

1342
01:00:01,030 --> 01:00:05,470
what was change after your final we

1343
01:00:03,490 --> 01:00:08,140
still not know so we are waiting to do

1344
01:00:05,470 --> 01:00:10,450
the retest of new new version of devices

1345
01:00:08,140 --> 01:00:12,850
to see how this actually impacted but

1346
01:00:10,450 --> 01:00:15,220
during this we have been working with

1347
01:00:12,850 --> 01:00:17,319
car manufacturer a lot help them

1348
01:00:15,220 --> 01:00:19,480
understand security requirements help

1349
01:00:17,320 --> 01:00:21,730
them define security framework models

1350
01:00:19,480 --> 01:00:23,140
that they need to insist when they are

1351
01:00:21,730 --> 01:00:24,820
procuring this because they do not

1352
01:00:23,140 --> 01:00:26,370
manufacture these devices on their own

1353
01:00:24,820 --> 01:00:29,500
they're buying them from oil

1354
01:00:26,370 --> 01:00:31,690
manufacturers and we help them develop

1355
01:00:29,500 --> 01:00:34,420
this framework so then they can go out

1356
01:00:31,690 --> 01:00:36,310
we want to buy this kind of device from

1357
01:00:34,420 --> 01:00:38,890
you can you please implement these

1358
01:00:36,310 --> 01:00:40,390
security requirements yeah this is

1359
01:00:38,890 --> 01:00:42,370
something which is very interesting is

1360
01:00:40,390 --> 01:00:44,109
some car manufacturer

1361
01:00:42,370 --> 01:00:45,950
I cannot say all of them because I don't

1362
01:00:44,110 --> 01:00:48,560
know all of them but some of them don't

1363
01:00:45,950 --> 01:00:50,720
the development capability inside so

1364
01:00:48,560 --> 01:00:53,450
they just go to the OEM provider and say

1365
01:00:50,720 --> 01:00:55,040
okay I want this I want this there might

1366
01:00:53,450 --> 01:00:56,390
be a feature catalog and they might

1367
01:00:55,040 --> 01:00:57,980
cross some ticks like I want this

1368
01:00:56,390 --> 01:00:59,089
feature I want this feature we don't

1369
01:00:57,980 --> 01:01:03,079
know but they don't have the capability

1370
01:00:59,089 --> 01:01:04,910
to rebuild the firmware inside another

1371
01:01:03,079 --> 01:01:07,550
interesting thing is I figure out that

1372
01:01:04,910 --> 01:01:10,040
in a novel car it there was the same

1373
01:01:07,550 --> 01:01:12,260
hardware but the security that the

1374
01:01:10,040 --> 01:01:14,509
software security was much better and

1375
01:01:12,260 --> 01:01:17,540
the car was for example using an IP

1376
01:01:14,510 --> 01:01:19,690
sectional over the Wi-Fi or Bluetooth so

1377
01:01:17,540 --> 01:01:23,089
that you cannot intercept anything so

1378
01:01:19,690 --> 01:01:25,460
here it reveals that is also a matter of

1379
01:01:23,089 --> 01:01:28,060
willingness from the car manufacturer to

1380
01:01:25,460 --> 01:01:31,180
pay for the security features unlocks

1381
01:01:28,060 --> 01:01:31,180
thank you

1382
01:01:33,000 --> 01:01:38,990
anybody else we like to hear your voices

1383
01:01:35,210 --> 01:01:38,990
we talked to you for an hour

1384
01:01:40,770 --> 01:01:46,350
yeah sure thank you very much thank you

1385
01:02:10,860 --> 01:02:12,920
you

