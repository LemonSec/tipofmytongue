1
00:00:26,840 --> 00:00:30,920
okay next up the day I reversed in

2
00:00:29,000 --> 00:00:43,250
reverse engineered a Game Boy Advance

3
00:00:30,920 --> 00:00:46,760
game by maka bells and motels travel yes

4
00:00:43,250 --> 00:00:53,750
I'm at a and that's how the sermon got

5
00:00:46,760 --> 00:00:57,559
for you guys today we came a long way

6
00:00:53,750 --> 00:01:01,040
from Brazil so it's like this house

7
00:00:57,559 --> 00:01:05,360
right and you need to bring you soccer

8
00:01:01,040 --> 00:01:07,760
high premium and carnival not really but

9
00:01:05,360 --> 00:01:09,979
just this game which is very very funny

10
00:01:07,760 --> 00:01:11,360
one girl Brazil and when you see that

11
00:01:09,979 --> 00:01:13,280
things are getting a little bit boring

12
00:01:11,360 --> 00:01:14,870
because of the technical side of the

13
00:01:13,280 --> 00:01:16,190
talk we are probably going to use it

14
00:01:14,870 --> 00:01:18,740
anyway

15
00:01:16,190 --> 00:01:22,548
so yeah the day we hear first engineer

16
00:01:18,740 --> 00:01:25,610
Game Boy Advance game so it's a bit of a

17
00:01:22,549 --> 00:01:27,350
storytelling here so how it all started

18
00:01:25,610 --> 00:01:28,880
but I'd really like to know a little

19
00:01:27,350 --> 00:01:33,080
more about you guys so let's you to

20
00:01:28,880 --> 00:01:37,210
raise your hand saying so yeah who here

21
00:01:33,080 --> 00:01:37,210
has done some reverse engineer before I

22
00:01:37,660 --> 00:01:46,610
don't know half of you guys go and

23
00:01:40,600 --> 00:01:49,250
reverse engineering a game Oh like three

24
00:01:46,610 --> 00:01:51,050
of you out free or something oh and

25
00:01:49,250 --> 00:01:53,900
that's been at least who here has ever

26
00:01:51,050 --> 00:01:58,550
done some web development not that

27
00:01:53,900 --> 00:01:59,420
really cool coco really cool so stupid

28
00:01:58,550 --> 00:02:03,740
errands

29
00:01:59,420 --> 00:02:07,959
who knows the thing on the left yeah on

30
00:02:03,740 --> 00:02:10,280
the right it's called Kanoa and yeah

31
00:02:07,959 --> 00:02:12,230
many people don't know actually

32
00:02:10,280 --> 00:02:14,690
but you certainly know gameboy advance

33
00:02:12,230 --> 00:02:18,470
which was a very very popular game

34
00:02:14,690 --> 00:02:21,650
console back in the 2000 years and our

35
00:02:18,470 --> 00:02:25,220
story starts like this this is Michael

36
00:02:21,650 --> 00:02:26,300
Bell and this was me and this was us

37
00:02:25,220 --> 00:02:30,050
playing klonoa

38
00:02:26,300 --> 00:02:32,090
on our emulator and this was us board

39
00:02:30,050 --> 00:02:34,370
basically because he wanted more two

40
00:02:32,090 --> 00:02:35,470
levels to play with and I wanted

41
00:02:34,370 --> 00:02:39,880
different levels

42
00:02:35,470 --> 00:02:43,710
with so yeah some much nice going on

43
00:02:39,880 --> 00:02:46,359
here oh by the way this is Canova and

44
00:02:43,710 --> 00:02:49,780
for those who don't know klonoa it's a

45
00:02:46,360 --> 00:02:52,330
tile based puzzle game it's a nice one

46
00:02:49,780 --> 00:02:55,380
but it's also very very short you have

47
00:02:52,330 --> 00:02:58,690
basically three levels to play with and

48
00:02:55,380 --> 00:03:01,780
some people like most of it I can they

49
00:02:58,690 --> 00:03:03,940
just would love to play it more so we

50
00:03:01,780 --> 00:03:06,010
thought what if we could create our own

51
00:03:03,940 --> 00:03:07,780
levels or maybe water if we could make

52
00:03:06,010 --> 00:03:11,739
the ones that exist more interesting

53
00:03:07,780 --> 00:03:15,760
actually and as I told you Game Boy

54
00:03:11,740 --> 00:03:19,000
Advance was very very popular so many

55
00:03:15,760 --> 00:03:21,970
people wrote many manuals and tutorials

56
00:03:19,000 --> 00:03:24,880
and software's to study its architecture

57
00:03:21,970 --> 00:03:26,470
so it's very very well documented so it

58
00:03:24,880 --> 00:03:30,310
was a good way to start doing some

59
00:03:26,470 --> 00:03:34,420
reverse engineering so this has how

60
00:03:30,310 --> 00:03:36,910
cloudy phas was born and basically it's

61
00:03:34,420 --> 00:03:38,980
it's open source and github you can go

62
00:03:36,910 --> 00:03:42,700
to this link which you probably can't

63
00:03:38,980 --> 00:03:45,369
read but it's over there and it's a web

64
00:03:42,700 --> 00:03:48,250
app written in JavaScript and see where

65
00:03:45,370 --> 00:03:52,269
you can edit the levels that you have on

66
00:03:48,250 --> 00:03:55,900
conover but let's go for the challenge

67
00:03:52,269 --> 00:03:58,690
and it all started with a stretch and

68
00:03:55,900 --> 00:04:00,400
bridge because you know we had no

69
00:03:58,690 --> 00:04:03,340
previous experience in doing reverse

70
00:04:00,400 --> 00:04:06,340
engineering so gradient level editor

71
00:04:03,340 --> 00:04:09,370
just sounded like a very very abstract

72
00:04:06,340 --> 00:04:11,410
thing for us we had no certain paths to

73
00:04:09,370 --> 00:04:14,830
follow we had we didn't know where to

74
00:04:11,410 --> 00:04:17,140
begin so we fought and also in reverse

75
00:04:14,830 --> 00:04:19,359
engineering in general it's easier for

76
00:04:17,140 --> 00:04:22,000
you to just edit something that already

77
00:04:19,358 --> 00:04:23,859
exists then trying to create something

78
00:04:22,000 --> 00:04:26,830
from scratch or trying to delete some

79
00:04:23,860 --> 00:04:30,720
elements so we had a bridge in the first

80
00:04:26,830 --> 00:04:33,789
level when we wanted to stretch it and

81
00:04:30,720 --> 00:04:37,450
we had a heart sauce the first one is

82
00:04:33,790 --> 00:04:39,970
called no cash GPA and it's very useful

83
00:04:37,450 --> 00:04:43,810
for doing dynamic analysis which is

84
00:04:39,970 --> 00:04:45,610
basically analyzing the code as you are

85
00:04:43,810 --> 00:04:47,740
playing the game

86
00:04:45,610 --> 00:04:50,650
and the other tool was called either

87
00:04:47,740 --> 00:04:51,819
this one is more popular some of you

88
00:04:50,650 --> 00:04:55,239
probably heard of it

89
00:04:51,819 --> 00:04:57,699
and we enjoyed it because actually in

90
00:04:55,240 --> 00:05:00,729
the class DBA likes more powerful tools

91
00:04:57,699 --> 00:05:02,229
for doing static analysis and either

92
00:05:00,729 --> 00:05:04,378
brings tools like graphical

93
00:05:02,229 --> 00:05:07,360
visualization of the assembly code and

94
00:05:04,379 --> 00:05:09,969
also it allows you to stretch some part

95
00:05:07,360 --> 00:05:12,969
of memory to certain files and even

96
00:05:09,969 --> 00:05:15,819
basically stuff like command lines of

97
00:05:12,969 --> 00:05:19,120
code you can also do it either so this

98
00:05:15,819 --> 00:05:21,159
is how it looked like on the left side

99
00:05:19,120 --> 00:05:23,199
no Kashi BA and on the right side I'll

100
00:05:21,159 --> 00:05:27,520
explain some assembly code we are were

101
00:05:23,199 --> 00:05:30,520
running a virtualized Windows so let's

102
00:05:27,520 --> 00:05:32,770
just write the bridge here we are in the

103
00:05:30,520 --> 00:05:35,799
first level and this is the bridge that

104
00:05:32,770 --> 00:05:38,169
we want to stretch and this panel is

105
00:05:35,800 --> 00:05:40,629
actually a feature of no cache GBA and

106
00:05:38,169 --> 00:05:44,378
you can see many details of the tiles

107
00:05:40,629 --> 00:05:47,259
that you have on the screen and on this

108
00:05:44,379 --> 00:05:49,300
panel we can see the tile I G for this

109
00:05:47,259 --> 00:05:52,419
part of the bridge because on a child

110
00:05:49,300 --> 00:05:56,080
based game each part of the map is

111
00:05:52,419 --> 00:05:58,599
composed of of tiles in each tile each

112
00:05:56,080 --> 00:06:01,779
kind of tile has got a very unique ID to

113
00:05:58,599 --> 00:06:04,270
identify what is it basically and in the

114
00:06:01,779 --> 00:06:08,020
case of this part of the bridge the TIG

115
00:06:04,270 --> 00:06:10,479
is 9b and the part of the continuous

116
00:06:08,020 --> 00:06:12,520
part of the bridge is called 980 and

117
00:06:10,479 --> 00:06:15,580
there is another very important

118
00:06:12,520 --> 00:06:18,310
information the Spanish got which is the

119
00:06:15,580 --> 00:06:23,080
address in our case it sells that the

120
00:06:18,310 --> 00:06:27,699
address is for this tile is 0 6 0 0 F 1

121
00:06:23,080 --> 00:06:30,758
HD and actually it comes as no surprise

122
00:06:27,699 --> 00:06:33,879
that we have this address because as I

123
00:06:30,759 --> 00:06:36,520
told you guys there are some many

124
00:06:33,879 --> 00:06:39,639
documentation on gameboy advance and one

125
00:06:36,520 --> 00:06:42,279
of those documents is this manual which

126
00:06:39,639 --> 00:06:44,379
describes in deep details its

127
00:06:42,279 --> 00:06:47,379
architecture and there's a section on

128
00:06:44,379 --> 00:06:50,650
explaining how the memory works and the

129
00:06:47,379 --> 00:06:55,089
memory you have many regions each region

130
00:06:50,650 --> 00:06:56,979
has a very important purpose and very

131
00:06:55,089 --> 00:06:59,680
unique size

132
00:06:56,980 --> 00:07:02,080
and the address that we found is on a

133
00:06:59,680 --> 00:07:05,350
region called Viren which basically

134
00:07:02,080 --> 00:07:08,560
stands for video rain and the purpose of

135
00:07:05,350 --> 00:07:10,930
this region is to store the sprites and

136
00:07:08,560 --> 00:07:13,020
backgrounds and all those things so it

137
00:07:10,930 --> 00:07:16,240
was no surprise that we found this and

138
00:07:13,020 --> 00:07:21,330
if we try to visualize this is where our

139
00:07:16,240 --> 00:07:24,370
bridge starts so it looks like this and

140
00:07:21,330 --> 00:07:25,990
okay it was good because when you're

141
00:07:24,370 --> 00:07:28,540
doing reverse engineering every time

142
00:07:25,990 --> 00:07:33,250
some piece of information makes a little

143
00:07:28,540 --> 00:07:37,810
sense you get happy so then we grow it

144
00:07:33,250 --> 00:07:40,780
bigger and we run a frame it after we

145
00:07:37,810 --> 00:07:44,200
did it and we can see the new quad and

146
00:07:40,780 --> 00:07:47,500
this is exactly where our firsts what

147
00:07:44,200 --> 00:07:49,780
the moment happened because when

148
00:07:47,500 --> 00:07:54,330
you run a frame F 2d that you see that

149
00:07:49,780 --> 00:07:54,330
the new part is no longer there so

150
00:07:54,930 --> 00:07:58,510
understanding what's happening he calls

151
00:07:56,980 --> 00:08:01,480
us to understand a very important

152
00:07:58,510 --> 00:08:05,710
concept called GMA and I guess you can

153
00:08:01,480 --> 00:08:08,320
tell us a little more about that yes as

154
00:08:05,710 --> 00:08:10,479
much as this behaves makes sense and in

155
00:08:08,320 --> 00:08:14,409
order to understand why it's make sense

156
00:08:10,480 --> 00:08:16,660
we need to understand that GMA well

157
00:08:14,410 --> 00:08:19,000
moving on load to another place of the

158
00:08:16,660 --> 00:08:21,940
level we can see that the entire map

159
00:08:19,000 --> 00:08:25,030
chain changed on visual so we can note

160
00:08:21,940 --> 00:08:27,670
that issue own story wash the plane as

161
00:08:25,030 --> 00:08:30,789
you see from somewhere else that has the

162
00:08:27,670 --> 00:08:33,550
entire tile map but o is the entire time

163
00:08:30,790 --> 00:08:37,539
map storage in order to send the

164
00:08:33,549 --> 00:08:39,520
information visual for each frame there

165
00:08:37,539 --> 00:08:42,490
is a book that explains many details

166
00:08:39,520 --> 00:08:45,370
about the internals of GBA and in the

167
00:08:42,490 --> 00:08:50,530
tiles map shaft each contains any polish

168
00:08:45,370 --> 00:08:52,390
concept direct memory access the m/l is

169
00:08:50,530 --> 00:08:55,360
a feature of computer systems that

170
00:08:52,390 --> 00:08:58,410
allows SATA hardware to access main

171
00:08:55,360 --> 00:09:01,780
system memory where the list of the CPU

172
00:08:58,410 --> 00:09:03,969
use other words it provides a way to cop

173
00:09:01,780 --> 00:09:06,459
interface faster which makes sense

174
00:09:03,970 --> 00:09:08,490
because the visual is choose mode to

175
00:09:06,460 --> 00:09:10,830
install the entire time map

176
00:09:08,490 --> 00:09:13,230
there is necessary to restore the entire

177
00:09:10,830 --> 00:09:17,760
Tamil and one know the memory region and

178
00:09:13,230 --> 00:09:20,190
in a part of each to visual and no cash

179
00:09:17,760 --> 00:09:23,069
abate has a fee tree Nash a large tract

180
00:09:20,190 --> 00:09:25,320
the DMA communication were offering on

181
00:09:23,070 --> 00:09:28,080
the gaming we can see that each made for

182
00:09:25,320 --> 00:09:32,460
cops and all these results is the

183
00:09:28,080 --> 00:09:35,370
closest to the bash of the bridge and in

184
00:09:32,460 --> 00:09:38,970
this as ray of of the visual the sauce

185
00:09:35,370 --> 00:09:41,430
and it's the address of the visual under

186
00:09:38,970 --> 00:09:43,590
a sauce so Chile will place the visual

187
00:09:41,430 --> 00:09:46,020
of the data started from this batch

188
00:09:43,590 --> 00:09:49,170
which is locally in a region called

189
00:09:46,020 --> 00:09:50,850
fresh double this is large one so

190
00:09:49,170 --> 00:09:53,370
extensive to change the batch at a

191
00:09:50,850 --> 00:09:55,680
visual we need to change the bridge but

192
00:09:53,370 --> 00:09:59,100
at the flash double row let's go to

193
00:09:55,680 --> 00:09:59,819
address and our breath is touch healing

194
00:09:59,100 --> 00:10:03,600
nicely

195
00:09:59,820 --> 00:10:06,210
so let's switch it since Demi we send a

196
00:10:03,600 --> 00:10:09,570
pie map data to visual which frame each

197
00:10:06,210 --> 00:10:14,100
working out right so let's see now it's

198
00:10:09,570 --> 00:10:17,190
working but watch we can see the tiles

199
00:10:14,100 --> 00:10:20,030
they are on the screen but we can we can

200
00:10:17,190 --> 00:10:23,340
stand on them it's crazy what's happened

201
00:10:20,030 --> 00:10:25,800
doing a very simple - Waukesha a large

202
00:10:23,340 --> 00:10:28,860
part of the level we can stretch our

203
00:10:25,800 --> 00:10:31,380
astraios disappear when of the play

204
00:10:28,860 --> 00:10:33,780
visual range so there is unknown the

205
00:10:31,380 --> 00:10:35,970
place of the memory that really is

206
00:10:33,780 --> 00:10:37,890
toward the tile map and is the dearest

207
00:10:35,970 --> 00:10:42,690
source of the fresh double-row

208
00:10:37,890 --> 00:10:44,760
but what is it since I don't know I

209
00:10:42,690 --> 00:10:48,450
don't really know where the entire term

210
00:10:44,760 --> 00:10:50,819
LP need a burrito to find each chose to

211
00:10:48,450 --> 00:10:53,100
understand by how the physics works in

212
00:10:50,820 --> 00:10:55,650
the game if we understand how the

213
00:10:53,100 --> 00:10:59,060
physics works on the original tiles we

214
00:10:55,650 --> 00:11:02,400
can copy these behaviors to our styles

215
00:10:59,060 --> 00:11:04,650
before understanding what has taken laws

216
00:11:02,400 --> 00:11:08,850
on the floor we need to approach another

217
00:11:04,650 --> 00:11:12,660
pot feature of GBA they object at the

218
00:11:08,850 --> 00:11:16,920
bush memory the average is just all a em

219
00:11:12,660 --> 00:11:18,209
and I usage now flown since the GB is a

220
00:11:16,920 --> 00:11:19,529
Hydra to play games

221
00:11:18,210 --> 00:11:23,790
it has main

222
00:11:19,529 --> 00:11:27,600
well in four games all of this is OAM

223
00:11:23,790 --> 00:11:30,209
each objects um looks like a tunnel

224
00:11:27,600 --> 00:11:33,839
which you can move it the sprites

225
00:11:30,209 --> 00:11:36,420
science and use a tool from Norwich eBay

226
00:11:33,839 --> 00:11:39,930
we can see the areas in which flow is

227
00:11:36,420 --> 00:11:44,219
stored on the memory it's tall at this

228
00:11:39,930 --> 00:11:47,128
number R in agreement the GM a logs

229
00:11:44,220 --> 00:11:50,389
unlock a should be a we can see exactly

230
00:11:47,129 --> 00:11:53,279
the batch that arrives on colores object

231
00:11:50,389 --> 00:11:56,279
so the bunch from this address our cop

232
00:11:53,279 --> 00:11:58,949
and Shake close objects and the value on

233
00:11:56,279 --> 00:12:01,769
object that defines the Y position is

234
00:11:58,949 --> 00:12:07,229
the first so initial track the chains on

235
00:12:01,769 --> 00:12:09,449
these parts as 0 3 0 0 for H 0 0 a very

236
00:12:07,230 --> 00:12:12,949
steep and useful test that I made to

237
00:12:09,449 --> 00:12:16,050
check if I'm going to the correct way

238
00:12:12,949 --> 00:12:18,839
was changed this batch and draw a frame

239
00:12:16,050 --> 00:12:22,050
and do it we can know that it changed

240
00:12:18,839 --> 00:12:24,120
changes both for just one frame because

241
00:12:22,050 --> 00:12:26,639
of the next frame will continue to

242
00:12:24,120 --> 00:12:28,500
follow the previous position so you can

243
00:12:26,639 --> 00:12:31,649
know that we are going to the correct

244
00:12:28,500 --> 00:12:35,639
way but we need to find addresses of

245
00:12:31,649 --> 00:12:37,860
this batch so let system imposed

246
00:12:35,639 --> 00:12:41,250
assembly sanctions that change the value

247
00:12:37,860 --> 00:12:43,860
of this batch on the first pass we can

248
00:12:41,250 --> 00:12:46,800
system a same instructions written yummy

249
00:12:43,860 --> 00:12:49,139
and on the strategy patch we can see the

250
00:12:46,800 --> 00:12:52,620
memory the harlot batch is the Y

251
00:12:49,139 --> 00:12:55,139
position of renewals after this

252
00:12:52,620 --> 00:12:57,870
structures all all based on this

253
00:12:55,139 --> 00:13:01,350
memories are replaced by trash including

254
00:12:57,870 --> 00:13:03,899
the Y position and many songs after that

255
00:13:01,350 --> 00:13:07,079
the Y position is replaced by the new

256
00:13:03,899 --> 00:13:10,069
value but how did you work this will

257
00:13:07,079 --> 00:13:14,370
have we have just rest on the memory

258
00:13:10,069 --> 00:13:16,979
how did calculate the new Y position to

259
00:13:14,370 --> 00:13:19,829
understand it we made some crazy reverse

260
00:13:16,980 --> 00:13:22,800
engineer using both tools nor can she be

261
00:13:19,829 --> 00:13:25,679
and either we finished analysis I I

262
00:13:22,800 --> 00:13:28,740
found a new path GTO the bus - was

263
00:13:25,679 --> 00:13:30,620
falling I from object others are used so

264
00:13:28,740 --> 00:13:33,650
sell the Y position ed camera

265
00:13:30,620 --> 00:13:37,520
birthday bash on the left I use it to

266
00:13:33,650 --> 00:13:39,980
set a global why for example you can see

267
00:13:37,520 --> 00:13:43,100
veteran Louis is on the same height to

268
00:13:39,980 --> 00:13:46,970
the camera but so this VAR are the same

269
00:13:43,100 --> 00:13:50,060
but this is it's a higher position on

270
00:13:46,970 --> 00:13:53,120
the level this value is lower so we need

271
00:13:50,060 --> 00:13:57,140
to follow this path to understand it and

272
00:13:53,120 --> 00:13:57,860
how its operated a row I step-by-step

273
00:13:57,140 --> 00:14:00,470
the burger

274
00:13:57,860 --> 00:14:03,590
we found the moment is really value is

275
00:14:00,470 --> 00:14:06,920
updated it's happy on this assembly

276
00:14:03,590 --> 00:14:09,500
songs in this block and the decision of

277
00:14:06,920 --> 00:14:13,790
where it should open it or not is made

278
00:14:09,500 --> 00:14:16,550
in the open block them in this open

279
00:14:13,790 --> 00:14:18,890
block we can see how each decides what

280
00:14:16,550 --> 00:14:21,920
whether the web position should be

281
00:14:18,890 --> 00:14:24,740
operated or not and the systems use a

282
00:14:21,920 --> 00:14:28,819
time aji installed in another memory

283
00:14:24,740 --> 00:14:31,520
region they is law double run this

284
00:14:28,820 --> 00:14:33,800
another memory region is bigger than the

285
00:14:31,520 --> 00:14:36,699
fashionable row so the game can store

286
00:14:33,800 --> 00:14:39,109
the entire time map in the memory region

287
00:14:36,700 --> 00:14:42,590
so we should as ow

288
00:14:39,110 --> 00:14:44,780
our x 2.is load double row because it's

289
00:14:42,590 --> 00:14:50,570
the data source of fresh double row and

290
00:14:44,780 --> 00:14:53,449
visual and do it out I really works we

291
00:14:50,570 --> 00:14:55,760
we can we can stain it and out eyes

292
00:14:53,450 --> 00:14:58,520
don't disappears when they are outside

293
00:14:55,760 --> 00:15:01,760
the plate vision very nice it's working

294
00:14:58,520 --> 00:15:03,949
but ok when not that you can create real

295
00:15:01,760 --> 00:15:07,220
times on the game but we encourage

296
00:15:03,950 --> 00:15:09,530
animes leveraged on browser so we need

297
00:15:07,220 --> 00:15:12,200
to find the time map on the room to be

298
00:15:09,530 --> 00:15:15,470
able to extract each in deploy it on the

299
00:15:12,200 --> 00:15:17,900
browser it's one of the most important

300
00:15:15,470 --> 00:15:20,480
reason that that one should have its

301
00:15:17,900 --> 00:15:24,370
projects what information flow hashes

302
00:15:20,480 --> 00:15:28,910
away from the carriage to is laudable

303
00:15:24,370 --> 00:15:31,760
show to the fashionable to visual to

304
00:15:28,910 --> 00:15:34,969
display we are walking on the reverse

305
00:15:31,760 --> 00:15:37,580
way use the clothes that we are find on

306
00:15:34,970 --> 00:15:40,250
the path to walk front display to is low

307
00:15:37,580 --> 00:15:42,530
double row and because there is any

308
00:15:40,250 --> 00:15:43,930
memory region before is low double row

309
00:15:42,530 --> 00:15:45,939
we should use that

310
00:15:43,930 --> 00:15:49,870
to find us the time map on the test

311
00:15:45,940 --> 00:15:52,270
region so let's run the step by step of

312
00:15:49,870 --> 00:15:55,120
the burger to see the Eastern special

313
00:15:52,270 --> 00:15:58,060
artist on the time map is laudable and

314
00:15:55,120 --> 00:16:02,350
we find this is anxious as double I

315
00:15:58,060 --> 00:16:04,630
eleven eight but what a percocet so

316
00:16:02,350 --> 00:16:08,500
let's talk about as double is franc

317
00:16:04,630 --> 00:16:12,060
shows this software interrupting well

318
00:16:08,500 --> 00:16:15,550
some ago some guys call each BIOS cows

319
00:16:12,060 --> 00:16:17,290
well by the femur that's strange to

320
00:16:15,550 --> 00:16:20,500
initialize the physical components of

321
00:16:17,290 --> 00:16:24,069
the system in GPA is by exposed many

322
00:16:20,500 --> 00:16:27,160
functions of used in games including the

323
00:16:24,070 --> 00:16:29,530
air compression and decompression each

324
00:16:27,160 --> 00:16:32,380
function has an Associated numeric code

325
00:16:29,530 --> 00:16:36,579
which must be used experiment in the s

326
00:16:32,380 --> 00:16:39,070
double I statement for example there is

327
00:16:36,580 --> 00:16:42,460
a s double I could should use the divide

328
00:16:39,070 --> 00:16:45,100
operator took out it you just need to

329
00:16:42,460 --> 00:16:47,890
use the s double I with the number six

330
00:16:45,100 --> 00:16:51,970
and send the parameter to take arrested

331
00:16:47,890 --> 00:16:54,580
the F 0 is a numerator and Dominator and

332
00:16:51,970 --> 00:16:57,580
the output of the divisor will be saved

333
00:16:54,580 --> 00:17:00,460
on the arrested beside the divide

334
00:16:57,580 --> 00:17:03,340
operator we can ask our summer compress

335
00:17:00,460 --> 00:17:06,610
and uncompress operator use the s double

336
00:17:03,340 --> 00:17:09,280
is actions for example here the game is

337
00:17:06,609 --> 00:17:13,240
called Huffman and l6m self-awareness

338
00:17:09,280 --> 00:17:15,940
and the Hoffman and LCIF depth is the

339
00:17:13,240 --> 00:17:18,609
deflate algorithm so this game when

340
00:17:15,940 --> 00:17:21,130
slowed are a level are copies each using

341
00:17:18,609 --> 00:17:23,919
deflate agreed and save the research of

342
00:17:21,130 --> 00:17:26,500
is laudable ROM for the parameter with

343
00:17:23,920 --> 00:17:29,140
the address of the memory error we can

344
00:17:26,500 --> 00:17:32,380
see the con compress their of the level

345
00:17:29,140 --> 00:17:34,810
is so also that you just need to push

346
00:17:32,380 --> 00:17:38,680
the cursor at the address and we show

347
00:17:34,810 --> 00:17:41,200
the entire blob of the level and you can

348
00:17:38,680 --> 00:17:44,650
use a fit of either to expose this

349
00:17:41,200 --> 00:17:47,410
they're just separated file okay now we

350
00:17:44,650 --> 00:17:49,600
have a file with the compressed air of a

351
00:17:47,410 --> 00:17:53,410
level they finish to uncompress

352
00:17:49,600 --> 00:17:55,870
each use the same algorithm do remember

353
00:17:53,410 --> 00:17:57,340
that matches said that Gameboy address

354
00:17:55,870 --> 00:17:59,498
was a very popular course

355
00:17:57,340 --> 00:18:01,600
and many people miss Alison - she will

356
00:17:59,499 --> 00:18:05,110
keep it so a penstemon

357
00:18:01,600 --> 00:18:07,809
a few years ago episode two witnesses

358
00:18:05,110 --> 00:18:10,539
see with the same agreed and diplomatic

359
00:18:07,809 --> 00:18:13,870
of the compress compress a width of the

360
00:18:10,539 --> 00:18:16,960
GBA in order to use it we judge needs to

361
00:18:13,870 --> 00:18:20,498
send a file path to disorder they each

362
00:18:16,960 --> 00:18:24,570
evil octopus the file and use it we can

363
00:18:20,499 --> 00:18:29,759
note that this batch from catfish and

364
00:18:24,570 --> 00:18:36,240
from the uncompressed file are the same

365
00:18:29,759 --> 00:18:36,240
very nice just Princeton

366
00:18:43,310 --> 00:18:51,740
well okay now now we know where the pyro

367
00:18:48,140 --> 00:18:53,960
map is started and we and is we have a

368
00:18:51,740 --> 00:18:56,840
five this data we want to build a

369
00:18:53,960 --> 00:19:00,650
leverage talk so we need to paint this

370
00:18:56,840 --> 00:19:02,659
town map to be able to edit it but we

371
00:19:00,650 --> 00:19:05,570
have an additional challenge we have

372
00:19:02,660 --> 00:19:08,450
just effective this data and we need to

373
00:19:05,570 --> 00:19:11,360
plot it at a by dimensional array right

374
00:19:08,450 --> 00:19:14,390
for example other splash out of a veg

375
00:19:11,360 --> 00:19:17,209
but just walk off this are they used a

376
00:19:14,390 --> 00:19:19,660
on the game so we sulfide the correct to

377
00:19:17,210 --> 00:19:22,910
work where is the new line in the array

378
00:19:19,660 --> 00:19:25,730
and you have any polish clue to help us

379
00:19:22,910 --> 00:19:28,040
the size of the birthday and properly

380
00:19:25,730 --> 00:19:30,980
the height and the width and natural

381
00:19:28,040 --> 00:19:34,310
numbers because it's don't help those

382
00:19:30,980 --> 00:19:36,740
make sense our health tile so we just

383
00:19:34,310 --> 00:19:40,850
need to find the height of the leaf and

384
00:19:36,740 --> 00:19:44,060
we find out the variables think with me

385
00:19:40,850 --> 00:19:47,240
I am on the tile a and there is a tire

386
00:19:44,060 --> 00:19:50,480
be exactly built below eight from the

387
00:19:47,240 --> 00:19:53,510
type a should be the art 9 bytes top the

388
00:19:50,480 --> 00:19:56,240
art nine tires so the name of of the

389
00:19:53,510 --> 00:19:58,310
tire map is exactly nine we can

390
00:19:56,240 --> 00:20:01,700
reproduce the same energy on the game to

391
00:19:58,310 --> 00:20:04,490
find the length of the level firstly we

392
00:20:01,700 --> 00:20:06,230
need to get the address of a tire to get

393
00:20:04,490 --> 00:20:09,620
each week we need to set a breakpoint

394
00:20:06,230 --> 00:20:11,660
ages its function so we can see the

395
00:20:09,620 --> 00:20:14,750
address of the beach style on the

396
00:20:11,660 --> 00:20:18,020
arrested X 0 then we need to mark G

397
00:20:14,750 --> 00:20:22,100
style change it so it should change this

398
00:20:18,020 --> 00:20:22,850
bite Jesus out I owe a then we need to

399
00:20:22,100 --> 00:20:25,520
drop chrono

400
00:20:22,850 --> 00:20:28,250
one level below and suggest the address

401
00:20:25,520 --> 00:20:30,740
of the type of distribution level should

402
00:20:28,250 --> 00:20:34,640
do it with judgment to change the the

403
00:20:30,740 --> 00:20:37,040
type below him to 0 0 and kiss and we

404
00:20:34,640 --> 00:20:40,250
can see that chrono is already below now

405
00:20:37,040 --> 00:20:42,740
and as the last step which against the

406
00:20:40,250 --> 00:20:46,520
errors of the type B and we know that

407
00:20:42,740 --> 00:20:50,420
the tire B is near him when we can find

408
00:20:46,520 --> 00:20:53,090
this time change died around it because

409
00:20:50,420 --> 00:20:55,130
we get the average of the type a and B

410
00:20:53,090 --> 00:20:56,570
we can serve across because the length

411
00:20:55,130 --> 00:21:01,590
of the level there

412
00:20:56,570 --> 00:21:03,899
420 and divide it with if the entire

413
00:21:01,590 --> 00:21:06,240
start of the birthday we get the height

414
00:21:03,900 --> 00:21:11,010
of the level nice now we can plot it

415
00:21:06,240 --> 00:21:13,560
right but you know before developing the

416
00:21:11,010 --> 00:21:16,410
web app itself we sort of needed to do

417
00:21:13,560 --> 00:21:17,940
some proof of concept because we need to

418
00:21:16,410 --> 00:21:18,510
knew that we were going on the right

419
00:21:17,940 --> 00:21:22,500
path

420
00:21:18,510 --> 00:21:25,410
so we first started using this library

421
00:21:22,500 --> 00:21:28,500
called jump and you know because we are

422
00:21:25,410 --> 00:21:30,630
using javascript and our idea was just

423
00:21:28,500 --> 00:21:33,960
to pinch the tile map that we had in a

424
00:21:30,630 --> 00:21:38,820
simple bitmap image file to see what we

425
00:21:33,960 --> 00:21:40,590
got and basically this is how we in this

426
00:21:38,820 --> 00:21:43,470
code we just load the libraries and the

427
00:21:40,590 --> 00:21:45,300
tile map and part of the code is because

428
00:21:43,470 --> 00:21:47,370
we need to drop the freeze the first

429
00:21:45,300 --> 00:21:51,450
three bytes because they're just some

430
00:21:47,370 --> 00:21:54,030
useless header and then we paint

431
00:21:51,450 --> 00:21:56,670
basically with right if the code is zero

432
00:21:54,030 --> 00:22:00,300
zero and otherwise we painted with black

433
00:21:56,670 --> 00:22:02,280
and we also need to loop through each

434
00:22:00,300 --> 00:22:06,060
byte of the tile map to paint each

435
00:22:02,280 --> 00:22:08,370
picture in the BMP image but don't mind

436
00:22:06,060 --> 00:22:12,600
this code it's very cool one it was

437
00:22:08,370 --> 00:22:15,899
mostly for our proof of concept and with

438
00:22:12,600 --> 00:22:18,919
it we saw that it was working and this

439
00:22:15,900 --> 00:22:23,580
was what our first tile map looked like

440
00:22:18,920 --> 00:22:25,980
but this didn't fit our needs and by the

441
00:22:23,580 --> 00:22:26,550
way you can note this part here in the

442
00:22:25,980 --> 00:22:29,640
corner

443
00:22:26,550 --> 00:22:31,710
the there's a this is a scheme basically

444
00:22:29,640 --> 00:22:35,640
a pilot where for all the tiles that are

445
00:22:31,710 --> 00:22:37,230
available for this level just be sure

446
00:22:35,640 --> 00:22:39,210
that we were doing the right thing we

447
00:22:37,230 --> 00:22:42,570
tried the same thing for the next level

448
00:22:39,210 --> 00:22:45,390
and again it worked and our next step

449
00:22:42,570 --> 00:22:48,540
was to you know buy a very very boring

450
00:22:45,390 --> 00:22:50,250
process to map each time ID to a colors

451
00:22:48,540 --> 00:22:52,940
that the tile map that we had looked

452
00:22:50,250 --> 00:22:56,820
like what it looks like in the real game

453
00:22:52,940 --> 00:22:59,250
so then we started having pretty tile

454
00:22:56,820 --> 00:23:02,010
map and one gotcha

455
00:22:59,250 --> 00:23:04,410
is that each level has a different

456
00:23:02,010 --> 00:23:07,110
scheme so as you can see this level

457
00:23:04,410 --> 00:23:08,800
looks a bit weird because it's sort of

458
00:23:07,110 --> 00:23:11,639
half grass

459
00:23:08,800 --> 00:23:13,810
the upper side and when you should not

460
00:23:11,640 --> 00:23:16,060
basically this happens because we are

461
00:23:13,810 --> 00:23:18,790
paint channel for example level 2 with

462
00:23:16,060 --> 00:23:22,030
the color scheme of level 1 and it took

463
00:23:18,790 --> 00:23:23,950
us a little to figure out this but it

464
00:23:22,030 --> 00:23:25,899
makes sense because if all the levels

465
00:23:23,950 --> 00:23:29,280
had the same scheme the entire game

466
00:23:25,900 --> 00:23:32,080
could have only 255 different tiles and

467
00:23:29,280 --> 00:23:34,990
even Dhokla novus is very simple game

468
00:23:32,080 --> 00:23:38,530
250 55 is not enough

469
00:23:34,990 --> 00:23:40,780
so this was one gadget that we had been

470
00:23:38,530 --> 00:23:42,820
painting but by this time we could

471
00:23:40,780 --> 00:23:46,570
already painting the paint the town map

472
00:23:42,820 --> 00:23:48,790
with the data we extracted but then we

473
00:23:46,570 --> 00:23:53,500
need to find and paint objects other

474
00:23:48,790 --> 00:23:56,020
than simple tiles yes ok it's very nice

475
00:23:53,500 --> 00:23:58,330
that you can brush the Talmud but I love

476
00:23:56,020 --> 00:24:01,210
has more things that is just the Talmud

477
00:23:58,330 --> 00:24:03,970
each other's objects such as monsters

478
00:24:01,210 --> 00:24:06,550
die amount etcetera it should be it

479
00:24:03,970 --> 00:24:10,240
should be very much that you can scratch

480
00:24:06,550 --> 00:24:13,540
the itch out of concepts so let's do it

481
00:24:10,240 --> 00:24:15,760
so let's use again the time the to

482
00:24:13,540 --> 00:24:18,220
unlock a survey to understand understand

483
00:24:15,760 --> 00:24:21,700
how the game oopy this the exposition of

484
00:24:18,220 --> 00:24:24,400
the most any key notes that is most

485
00:24:21,700 --> 00:24:28,630
stored as the address there are seven

486
00:24:24,400 --> 00:24:30,700
zerls er8 it is a surprising because is

487
00:24:28,630 --> 00:24:33,580
that the circle objects that we have

488
00:24:30,700 --> 00:24:37,600
here chrono is the first and each

489
00:24:33,580 --> 00:24:40,780
objects domains eight bytes as we are

490
00:24:37,600 --> 00:24:43,899
right now that Damier operates the OAM

491
00:24:40,780 --> 00:24:47,080
of each frame so initial strategies

492
00:24:43,900 --> 00:24:49,390
valid Oberon since now we we need to

493
00:24:47,080 --> 00:24:54,220
track to the exposition of the circuit

494
00:24:49,390 --> 00:24:56,110
objects because the most and a detect

495
00:24:54,220 --> 00:24:58,240
exposition of the searchable objects

496
00:24:56,110 --> 00:25:01,659
because the most is walk horizontally

497
00:24:58,240 --> 00:25:04,840
and the batch as objects of exposes is

498
00:25:01,660 --> 00:25:10,270
the third and forty and we subtract this

499
00:25:04,840 --> 00:25:13,209
value this value now and we are in now

500
00:25:10,270 --> 00:25:15,700
that the OEM on viewer is open - folders

501
00:25:13,210 --> 00:25:18,400
structures so again the book is tab I

502
00:25:15,700 --> 00:25:22,230
start from here to find also possess the

503
00:25:18,400 --> 00:25:24,110
position of the most and we fit with

504
00:25:22,230 --> 00:25:27,240
find the assumptions that writes the

505
00:25:24,110 --> 00:25:29,428
exposition and read the assembly codes

506
00:25:27,240 --> 00:25:32,730
within those that each use and constants

507
00:25:29,429 --> 00:25:34,830
fairly zero three zero zero to nine to

508
00:25:32,730 --> 00:25:38,280
zero looks too good less conscious

509
00:25:34,830 --> 00:25:41,520
address hey this is electron lost

510
00:25:38,280 --> 00:25:44,280
objects each catch hours attention and

511
00:25:41,520 --> 00:25:46,889
it is not a constant looking for more

512
00:25:44,280 --> 00:25:49,530
attention to this but misbehaves we can

513
00:25:46,890 --> 00:25:51,650
know that we are we we are on memory

514
00:25:49,530 --> 00:25:54,990
sense that keeps the stage of our

515
00:25:51,650 --> 00:25:57,299
objects on the level including the

516
00:25:54,990 --> 00:25:59,640
objects that are altered of the plate

517
00:25:57,299 --> 00:26:01,620
vision we can check it surrounded the

518
00:25:59,640 --> 00:26:06,350
game and thus in event of the - with a

519
00:26:01,620 --> 00:26:09,719
consistent pattern as well as well as

520
00:26:06,350 --> 00:26:12,719
well as we can grab a motion and select

521
00:26:09,720 --> 00:26:15,299
the objects of its Exposition openness

522
00:26:12,720 --> 00:26:18,150
astronauts walking so there is a

523
00:26:15,299 --> 00:26:20,520
correlation and it's very amazing to

524
00:26:18,150 --> 00:26:23,910
understand the game let's start this

525
00:26:20,520 --> 00:26:25,918
memory sank as a global or am an athlete

526
00:26:23,910 --> 00:26:28,950
to play a little if this memory sanction

527
00:26:25,919 --> 00:26:32,910
changed eval and see what happens we can

528
00:26:28,950 --> 00:26:35,940
understand better how it works okay we

529
00:26:32,910 --> 00:26:39,299
find was the data source of OM that is

530
00:26:35,940 --> 00:26:41,790
global or am now let's wrote the book is

531
00:26:39,299 --> 00:26:44,490
step by step to find was there a source

532
00:26:41,790 --> 00:26:47,909
of the global all am used the same

533
00:26:44,490 --> 00:26:49,860
approach walk in two main assumptions we

534
00:26:47,910 --> 00:26:53,220
found this another memory sanction on

535
00:26:49,860 --> 00:26:56,639
wrong this only is the initial data are

536
00:26:53,220 --> 00:26:59,250
of the objects on level we think we can

537
00:26:56,640 --> 00:27:03,570
see each by not see similarities between

538
00:26:59,250 --> 00:27:07,320
each and global or a.m. and by change a

539
00:27:03,570 --> 00:27:11,490
bash and see what happens and let's

540
00:27:07,320 --> 00:27:15,210
count each s ro o am because it's the

541
00:27:11,490 --> 00:27:18,450
sketch of the OM one level stored on

542
00:27:15,210 --> 00:27:20,850
their own and something very funny

543
00:27:18,450 --> 00:27:23,640
is that that there is a badge to store

544
00:27:20,850 --> 00:27:27,149
the ID of the cache object and another

545
00:27:23,640 --> 00:27:29,760
batch to store the batch of these

546
00:27:27,150 --> 00:27:33,309
objects so you can use the batch of a

547
00:27:29,760 --> 00:27:37,360
most new key objects the very fun

548
00:27:33,309 --> 00:27:39,700
and another thing is that as well as use

549
00:27:37,360 --> 00:27:44,939
the expression of a heart or a monster

550
00:27:39,700 --> 00:27:48,159
it's another day little very fun to do

551
00:27:44,940 --> 00:27:53,649
this information from overall all am

552
00:27:48,159 --> 00:27:56,320
global code a.m. and all am and Romo

553
00:27:53,649 --> 00:27:59,498
a.m. keeps the information about our

554
00:27:56,320 --> 00:28:01,749
objects on our stage of a level for

555
00:27:59,499 --> 00:28:04,779
example the initial position on each

556
00:28:01,749 --> 00:28:08,499
stage that kind of these objects show

557
00:28:04,779 --> 00:28:10,809
metadata how how can we discover what

558
00:28:08,499 --> 00:28:12,820
watch this batch is just change the

559
00:28:10,809 --> 00:28:16,809
batch and see watch helps on the game

560
00:28:12,820 --> 00:28:19,119
it's very fun to do of course okay

561
00:28:16,809 --> 00:28:21,668
we found the row or any of the first

562
00:28:19,119 --> 00:28:25,299
level well it was the first secular book

563
00:28:21,669 --> 00:28:31,450
maybe below it we check and yeah it's

564
00:28:25,299 --> 00:28:34,509
it's here and the much is yeah and if

565
00:28:31,450 --> 00:28:38,289
you get to notice it's very different to

566
00:28:34,509 --> 00:28:40,299
read Oh a.m. and read a tile map while

567
00:28:38,289 --> 00:28:43,210
in the tile map all you have to do is

568
00:28:40,299 --> 00:28:46,629
look through a vector and get to paint

569
00:28:43,210 --> 00:28:49,240
the pixels when it comes to OAM you need

570
00:28:46,629 --> 00:28:53,289
to map different whites to age a

571
00:28:49,240 --> 00:28:56,409
javascript object in our case so to make

572
00:28:53,289 --> 00:28:57,970
those things easier we went on NPN

573
00:28:56,409 --> 00:29:00,129
because you know it's JavaScript so

574
00:28:57,970 --> 00:29:02,799
probably someone's written a library for

575
00:29:00,129 --> 00:29:06,129
it and gives what someone had written a

576
00:29:02,799 --> 00:29:09,129
library for it and it was called queue

577
00:29:06,129 --> 00:29:12,189
unpack because it was inspired by unpack

578
00:29:09,129 --> 00:29:15,639
from burrow and you know we did simple

579
00:29:12,190 --> 00:29:19,389
in the past so it was for it but it was

580
00:29:15,639 --> 00:29:21,279
not expressive because you know this

581
00:29:19,389 --> 00:29:24,820
code this code just sounded a little bit

582
00:29:21,279 --> 00:29:27,580
weird for anyone who hadn't memorized

583
00:29:24,820 --> 00:29:31,289
what the hell is for example vichu x4v

584
00:29:27,580 --> 00:29:35,830
qu x 42 it's for children so for someone

585
00:29:31,289 --> 00:29:39,070
so thanks god we are not doing some perm

586
00:29:35,830 --> 00:29:41,379
anymore so we went to find something

587
00:29:39,070 --> 00:29:43,330
that is more semantic in javascript and

588
00:29:41,379 --> 00:29:45,760
we found this another labor of library

589
00:29:43,330 --> 00:29:49,600
called binary biceps tax the

590
00:29:45,760 --> 00:29:51,520
same guy who wrote browserify and then

591
00:29:49,600 --> 00:29:55,240
we had a very very more way more

592
00:29:51,520 --> 00:29:57,639
expressive code using those this pipe

593
00:29:55,240 --> 00:30:01,750
bases api's where we could for example

594
00:29:57,640 --> 00:30:04,990
that skip and passing bytes and so on

595
00:30:01,750 --> 00:30:08,410
and using it

596
00:30:04,990 --> 00:30:11,860
yay sites plotting the time map we are

597
00:30:08,410 --> 00:30:14,560
now able to plot the objects in this

598
00:30:11,860 --> 00:30:19,209
level and now our proof of concept was

599
00:30:14,560 --> 00:30:20,200
sort of worthy and by now you guys must

600
00:30:19,210 --> 00:30:23,650
be asking ourselves

601
00:30:20,200 --> 00:30:28,620
ok that's worded all this research to

602
00:30:23,650 --> 00:30:28,620
queue so yeah

603
00:30:39,190 --> 00:30:51,430
this is what the why but looks like that

604
00:30:41,860 --> 00:31:01,209
me and basically you have to pick a game

605
00:30:51,430 --> 00:31:05,550
wrong and Kaduri spirited oh okay a

606
00:31:01,210 --> 00:31:05,550
better mirror my screen for doing this

607
00:31:10,830 --> 00:31:14,600
cool they better

608
00:31:20,170 --> 00:31:25,090
I can browse files and here I can get

609
00:31:23,500 --> 00:31:27,070
the original game around which can be

610
00:31:25,090 --> 00:31:31,810
downloaded in any forum or something

611
00:31:27,070 --> 00:31:34,030
like this and now the UI asks you to

612
00:31:31,810 --> 00:31:37,120
select your vision which is how the game

613
00:31:34,030 --> 00:31:39,129
calls levels and there are only three as

614
00:31:37,120 --> 00:31:42,340
I mentioned and then you have the trial

615
00:31:39,130 --> 00:31:44,650
map and we can start it you can you know

616
00:31:42,340 --> 00:31:47,080
you can zoom in and out the trial map

617
00:31:44,650 --> 00:31:50,430
and you have options like showing or

618
00:31:47,080 --> 00:31:53,260
hiding degrade the Porto's and the OEM

619
00:31:50,430 --> 00:31:56,800
but let's start with something simpler

620
00:31:53,260 --> 00:32:02,490
let's we have an enemy over here so

621
00:31:56,800 --> 00:32:08,850
that's just preventing it touching us

622
00:32:02,490 --> 00:32:08,850
and you can save the tile map and

623
00:32:11,460 --> 00:32:19,900
my new

624
00:32:14,270 --> 00:32:19,900
so Charles and I'll call it modified one

625
00:32:22,650 --> 00:32:28,620
you can run it basically in any gameboy

626
00:32:26,700 --> 00:32:30,600
advance emulator for example this

627
00:32:28,620 --> 00:32:33,750
Gameboy Gia's online

628
00:32:30,600 --> 00:32:38,189
I rather run it on em GBA which is one

629
00:32:33,750 --> 00:32:44,640
that runs on Mac OS and now load the m1

630
00:32:38,190 --> 00:32:48,270
the GBA file there are something there's

631
00:32:44,640 --> 00:32:51,440
some intro because I can hear again the

632
00:32:48,270 --> 00:32:51,440
K yes

633
00:32:57,740 --> 00:33:00,370
first

634
00:33:02,070 --> 00:33:15,300
and here we have our enemy and you no

635
00:33:08,820 --> 00:33:19,169
longer can affect us and you can really

636
00:33:15,300 --> 00:33:22,919
do something funnier with it for example

637
00:33:19,170 --> 00:33:25,670
I really like what I call mode 5 - let

638
00:33:22,920 --> 00:33:25,670
me show you nice

639
00:33:33,430 --> 00:33:38,040
oh this is a same intro thing

640
00:33:35,620 --> 00:33:40,669
[Music]

641
00:33:38,040 --> 00:33:40,670
okay

642
00:33:44,490 --> 00:33:57,889
this one is a special here you have ball

643
00:33:51,889 --> 00:33:57,889
c5 2019 and

644
00:34:06,590 --> 00:34:12,319
last aku's Raksha yeah sometimes I'm not

645
00:34:10,159 --> 00:34:13,970
that good at this game because I got

646
00:34:12,320 --> 00:34:20,690
chatting mirror and not really like it

647
00:34:13,969 --> 00:34:24,469
but yeah yeah about today but yeah you

648
00:34:20,690 --> 00:34:34,000
can do so many cool things using it and

649
00:34:24,469 --> 00:34:34,000
stop mirroring the Rangers oh yeah oh

650
00:34:39,840 --> 00:34:45,140
and let's get a little bit to the coding

651
00:34:42,659 --> 00:34:48,899
part I mean coding the web app itself so

652
00:34:45,139 --> 00:34:51,089
again this and the first thing and just

653
00:34:48,900 --> 00:34:54,030
mentioned is the stack toothpicks for

654
00:34:51,090 --> 00:34:57,420
the project so basically we have reacted

655
00:34:54,030 --> 00:34:59,550
yes because we saw each other it was the

656
00:34:57,420 --> 00:35:01,290
choices no because actually did you know

657
00:34:59,550 --> 00:35:02,910
that whole declarative way of doing

658
00:35:01,290 --> 00:35:05,279
things and the easy statement management

659
00:35:02,910 --> 00:35:08,100
and basically reacted as as what we do

660
00:35:05,280 --> 00:35:11,390
on a daily basis so what it was what we

661
00:35:08,100 --> 00:35:15,600
felt comfortable doing we have web back

662
00:35:11,390 --> 00:35:18,990
as a bundler and we also have run the J

663
00:35:15,600 --> 00:35:21,990
s as a function our utility belt because

664
00:35:18,990 --> 00:35:24,180
it's current just plays very well with

665
00:35:21,990 --> 00:35:26,310
the pipeline operator you can get if you

666
00:35:24,180 --> 00:35:26,879
use a bubble plugin I'll show you in a

667
00:35:26,310 --> 00:35:30,690
minute

668
00:35:26,880 --> 00:35:32,880
a little bit about the architecture so

669
00:35:30,690 --> 00:35:35,790
we are will really appreciate the idea

670
00:35:32,880 --> 00:35:39,750
behind mono repos and we applied this in

671
00:35:35,790 --> 00:35:43,080
cloud GBA so we have two projects which

672
00:35:39,750 --> 00:35:45,120
are brush and scissors and brush is

673
00:35:43,080 --> 00:35:48,060
responsible for the UI so basically

674
00:35:45,120 --> 00:35:49,440
brushes they react up that renders the

675
00:35:48,060 --> 00:35:51,570
tile map and all those things and

676
00:35:49,440 --> 00:35:54,420
scissors is the one responsible for

677
00:35:51,570 --> 00:35:56,610
handling the game wrong so this is one

678
00:35:54,420 --> 00:36:00,270
that distracts data from the run from

679
00:35:56,610 --> 00:36:02,880
the run and all of those and in Caesars

680
00:36:00,270 --> 00:36:06,390
is where we store the definitions for

681
00:36:02,880 --> 00:36:10,080
each level and they are all JSON like

682
00:36:06,390 --> 00:36:14,160
files which look like this you have the

683
00:36:10,080 --> 00:36:16,650
run objects which you have the a bunch

684
00:36:14,160 --> 00:36:19,319
of addresses for tile map OAM and

685
00:36:16,650 --> 00:36:22,080
portals and you have the tile map

686
00:36:19,320 --> 00:36:23,910
objects where you have amongst things

687
00:36:22,080 --> 00:36:25,980
like height and weather for the level

688
00:36:23,910 --> 00:36:30,359
it's scheme which is basically an array

689
00:36:25,980 --> 00:36:36,390
of the elements you have analyzer like

690
00:36:30,360 --> 00:36:38,910
grass rock rock woods and so on another

691
00:36:36,390 --> 00:36:41,160
cool thing to mention when it comes to

692
00:36:38,910 --> 00:36:43,950
coding the web app itself is the usage

693
00:36:41,160 --> 00:36:45,299
that we have of web assembly because the

694
00:36:43,950 --> 00:36:47,580
flow that marketers

695
00:36:45,300 --> 00:36:50,790
explained us that we had the tyoma

696
00:36:47,580 --> 00:36:52,110
compressed and we use that old C code to

697
00:36:50,790 --> 00:36:54,930
uncompress it and we get the

698
00:36:52,110 --> 00:36:57,150
decompressed tile map but there is no

699
00:36:54,930 --> 00:37:01,410
gotcha which is you can't run that C

700
00:36:57,150 --> 00:37:03,690
code in the browser so we could

701
00:37:01,410 --> 00:37:05,520
translate the C code into JavaScript or

702
00:37:03,690 --> 00:37:07,800
something but that would require a lot

703
00:37:05,520 --> 00:37:09,900
of extra work and this was not really

704
00:37:07,800 --> 00:37:13,530
our focus you know trying to translate

705
00:37:09,900 --> 00:37:18,300
this code into JavaScript so what we did

706
00:37:13,530 --> 00:37:21,840
is to use MS Krypton I don't know if

707
00:37:18,300 --> 00:37:24,960
you've heard fit but basically and

708
00:37:21,840 --> 00:37:27,690
scripting generates the was files and

709
00:37:24,960 --> 00:37:30,630
jeaious wrappers around it so that we

710
00:37:27,690 --> 00:37:35,700
can use those one files so what you used

711
00:37:30,630 --> 00:37:40,440
it for Huffman and for lz77 and this is

712
00:37:35,700 --> 00:37:42,390
part of our decoding code and this is

713
00:37:40,440 --> 00:37:44,370
another thing I'd like to highlight I

714
00:37:42,390 --> 00:37:48,359
don't think you can read it but

715
00:37:44,370 --> 00:37:50,759
basically we had a bunch of useless code

716
00:37:48,360 --> 00:37:53,840
in this C code because for examples got

717
00:37:50,760 --> 00:37:56,760
a main function it has a bunch of print

718
00:37:53,840 --> 00:37:58,980
comments and those prints were generally

719
00:37:56,760 --> 00:38:00,900
generating useless console logs on the

720
00:37:58,980 --> 00:38:04,080
browser and we didn't need them

721
00:38:00,900 --> 00:38:07,080
actually they were bothering us so we

722
00:38:04,080 --> 00:38:09,150
removed the main function but then the

723
00:38:07,080 --> 00:38:10,920
code was no longer running so we had to

724
00:38:09,150 --> 00:38:13,770
make this workaround which is setting

725
00:38:10,920 --> 00:38:14,490
dot on rent I'm initializing and not in

726
00:38:13,770 --> 00:38:18,150
assignee

727
00:38:14,490 --> 00:38:21,359
and empty our function to it and this is

728
00:38:18,150 --> 00:38:23,790
how we uncompressed things we have the

729
00:38:21,360 --> 00:38:26,340
compressed file and it then overrides

730
00:38:23,790 --> 00:38:28,350
the original the original file on

731
00:38:26,340 --> 00:38:30,540
compressing it and as you can see all

732
00:38:28,350 --> 00:38:33,569
the communications based on file system

733
00:38:30,540 --> 00:38:36,230
and we then move it move the buffer from

734
00:38:33,570 --> 00:38:39,960
the run to a file called file and

735
00:38:36,230 --> 00:38:41,700
recording a compressing function and one

736
00:38:39,960 --> 00:38:44,070
thing that is very personally the first

737
00:38:41,700 --> 00:38:45,899
sight is that how do how are we

738
00:38:44,070 --> 00:38:49,110
assessing the file system the browser

739
00:38:45,900 --> 00:38:51,210
this just doesn't feel safe and I admit

740
00:38:49,110 --> 00:38:54,570
I don't I got no idea why by M script

741
00:38:51,210 --> 00:38:57,210
and just simulates the but the file

742
00:38:54,570 --> 00:38:57,999
system a very efficient way so all of

743
00:38:57,210 --> 00:39:00,699
this

744
00:38:57,999 --> 00:39:02,859
thanks to em scripting other than that

745
00:39:00,699 --> 00:39:04,359
we had to build a small shell script you

746
00:39:02,859 --> 00:39:07,689
know just to make it easy to compile

747
00:39:04,359 --> 00:39:09,848
things using docker and the reason there

748
00:39:07,689 --> 00:39:12,759
is a docker image by the EM script

749
00:39:09,849 --> 00:39:15,189
community and all we had to do is just

750
00:39:12,759 --> 00:39:16,779
buy some additional configuration for

751
00:39:15,189 --> 00:39:19,749
example challenege include the file

752
00:39:16,779 --> 00:39:24,489
system and then we can talk around

753
00:39:19,749 --> 00:39:27,899
Huffman and dr. Rao's e77 and that the

754
00:39:24,489 --> 00:39:30,639
final result a free lines quote

755
00:39:27,899 --> 00:39:33,368
javascript code using the pipeline

756
00:39:30,639 --> 00:39:37,449
operator that reached the wrong and runs

757
00:39:33,369 --> 00:39:39,039
the 2-d compression algorithms and it

758
00:39:37,449 --> 00:39:42,879
felt very happy because this doesn't

759
00:39:39,039 --> 00:39:44,879
even look like JavaScript so thanks to

760
00:39:42,879 --> 00:39:49,899
parkland operator

761
00:39:44,879 --> 00:39:52,598
I feel note some performance we got the

762
00:39:49,899 --> 00:39:55,118
style map components as part of our

763
00:39:52,599 --> 00:39:57,579
react.js application and as you may

764
00:39:55,119 --> 00:39:59,469
wonder it's the most important component

765
00:39:57,579 --> 00:40:01,719
that we have because it's responsible

766
00:39:59,469 --> 00:40:05,139
for displaying the tiles and the OEM and

767
00:40:01,719 --> 00:40:07,659
allowing us to I did those and when we

768
00:40:05,139 --> 00:40:10,989
first built it we used conv which is a

769
00:40:07,659 --> 00:40:13,449
wrapper around the canvas api but then

770
00:40:10,989 --> 00:40:15,429
we were having some perf issues this is

771
00:40:13,449 --> 00:40:17,499
the issue that we v don't get hurt for

772
00:40:15,429 --> 00:40:19,479
it in because basically the first world

773
00:40:17,499 --> 00:40:22,118
was taking like 3 seconds and the other

774
00:40:19,479 --> 00:40:25,269
ones were taking 13 seconds and no one

775
00:40:22,119 --> 00:40:27,549
was going to use this then we did some

776
00:40:25,269 --> 00:40:29,738
performance welcome we're just removing

777
00:40:27,549 --> 00:40:34,889
wasted with renders and all those things

778
00:40:29,739 --> 00:40:37,719
and we went to 1.8 and 3.6 seconds and

779
00:40:34,889 --> 00:40:42,129
then our next step in optimization was

780
00:40:37,719 --> 00:40:45,359
moving from canvas WebGL and then we

781
00:40:42,129 --> 00:40:48,399
gained a few more seconds like 1.6 and

782
00:40:45,359 --> 00:40:50,889
2.8 and then we did some more

783
00:40:48,399 --> 00:40:56,199
optimizations on WebGL and we got both

784
00:40:50,889 --> 00:40:59,709
loads taking like 5 or 600 milliseconds

785
00:40:56,199 --> 00:41:03,819
so this is our prefer cap we went from 3

786
00:40:59,709 --> 00:41:06,399
and 13 to one point eighteen three point

787
00:41:03,819 --> 00:41:10,089
six to one point six and two point eight

788
00:41:06,399 --> 00:41:13,808
to zero point six and zero point five

789
00:41:10,089 --> 00:41:17,769
milliseconds and there is one less

790
00:41:13,809 --> 00:41:20,319
challenging thing that we can't that we

791
00:41:17,769 --> 00:41:23,078
have to highlight is they have the

792
00:41:20,319 --> 00:41:25,299
challenge that we have when saving the

793
00:41:23,079 --> 00:41:30,329
new tile map this was one of our most

794
00:41:25,299 --> 00:41:33,538
bordering puzzles challenges and

795
00:41:30,329 --> 00:41:36,009
basically you have the first level and

796
00:41:33,539 --> 00:41:37,899
the second level and so on and each

797
00:41:36,009 --> 00:41:42,399
level is storage continually in the

798
00:41:37,899 --> 00:41:45,459
memory and if you make changes to the

799
00:41:42,399 --> 00:41:48,219
first level then the customized first

800
00:41:45,459 --> 00:41:52,479
level was taking like what was

801
00:41:48,219 --> 00:41:56,889
overlapping the next levels so yeah this

802
00:41:52,479 --> 00:41:58,209
was a problem and we filed this decision

803
00:41:56,889 --> 00:42:00,459
because basically what is happening is

804
00:41:58,209 --> 00:42:04,388
that an entire vision creating was

805
00:42:00,459 --> 00:42:07,118
saving time was say overlapping the time

806
00:42:04,389 --> 00:42:12,789
with my poker face on analyst and minus

807
00:42:07,119 --> 00:42:14,589
one and yeah we got a feels like

808
00:42:12,789 --> 00:42:16,149
explaining all of the changes but I

809
00:42:14,589 --> 00:42:18,669
don't really think that you're gonna

810
00:42:16,149 --> 00:42:20,439
have time for it but if you guys are

811
00:42:18,669 --> 00:42:23,709
interested in this part of the challenge

812
00:42:20,439 --> 00:42:25,538
reaches out after this talk but there's

813
00:42:23,709 --> 00:42:27,339
a whole thing when it comes to

814
00:42:25,539 --> 00:42:29,169
understanding the two instruction

815
00:42:27,339 --> 00:42:32,379
different sets that you have an arm the

816
00:42:29,169 --> 00:42:36,459
chart table and arm itself that you have

817
00:42:32,379 --> 00:42:41,828
on arm d7 but I'll jump straight to the

818
00:42:36,459 --> 00:42:45,489
JavaScript code that does it basically

819
00:42:41,829 --> 00:42:49,719
what solution was to attach the Paget

820
00:42:45,489 --> 00:42:53,529
code to our custom loader and which act

821
00:42:49,719 --> 00:42:55,539
doesn't make much sense saying r0 but we

822
00:42:53,529 --> 00:42:58,179
checked this this register was on the

823
00:42:55,539 --> 00:43:00,339
table and if so we would load an

824
00:42:58,179 --> 00:43:02,799
associate value and then we would return

825
00:43:00,339 --> 00:43:05,859
to the original loader so basically what

826
00:43:02,799 --> 00:43:07,659
we did was using some assembly code and

827
00:43:05,859 --> 00:43:10,538
JavaScript code to change the assembly

828
00:43:07,659 --> 00:43:13,529
codes we patches the wrong loader with

829
00:43:10,539 --> 00:43:14,750
our vertical stone holder if necessary

830
00:43:13,529 --> 00:43:18,230
the

831
00:43:14,750 --> 00:43:20,210
the Catholic memory had so many empty

832
00:43:18,230 --> 00:43:23,150
spaces that we could use to store the

833
00:43:20,210 --> 00:43:26,090
bigger levels the modifier ones this is

834
00:43:23,150 --> 00:43:29,060
what the JavaScript code for doing it

835
00:43:26,090 --> 00:43:31,370
look like a few highlights is for

836
00:43:29,060 --> 00:43:35,440
example this is where we change the

837
00:43:31,370 --> 00:43:39,910
instructions form the game two hours and

838
00:43:35,440 --> 00:43:43,280
yeah and inside this for each we have

839
00:43:39,910 --> 00:43:45,920
basically an if with checks if there's a

840
00:43:43,280 --> 00:43:49,730
custom tile map or not endures if there

841
00:43:45,920 --> 00:43:51,650
is we had drive two hours loader and

842
00:43:49,730 --> 00:43:54,610
another thing to be noticed that

843
00:43:51,650 --> 00:43:57,410
sometimes you have that set as in a

844
00:43:54,610 --> 00:43:59,360
array of two elements and sometimes we

845
00:43:57,410 --> 00:44:02,060
have a dot Cyprus in an array of four

846
00:43:59,360 --> 00:44:05,060
elements and this basically happens

847
00:44:02,060 --> 00:44:08,029
because as I mentioned many games use

848
00:44:05,060 --> 00:44:10,549
both instruction sets so two arrays

849
00:44:08,030 --> 00:44:14,510
where the found instructions and for

850
00:44:10,550 --> 00:44:15,890
arrays were the arm structions but again

851
00:44:14,510 --> 00:44:19,040
if you want to know a little more about

852
00:44:15,890 --> 00:44:21,770
that you can search and go faster and a

853
00:44:19,040 --> 00:44:23,720
little more on the results not only the

854
00:44:21,770 --> 00:44:25,880
front the web app itself but the

855
00:44:23,720 --> 00:44:27,980
community results we started spreading

856
00:44:25,880 --> 00:44:30,530
the world on this card another thing

857
00:44:27,980 --> 00:44:32,840
another media on the social on the

858
00:44:30,530 --> 00:44:37,610
interrupts and people were asking

859
00:44:32,840 --> 00:44:41,720
questions and doing some good stuff like

860
00:44:37,610 --> 00:44:43,430
painting the Brazil effect and people

861
00:44:41,720 --> 00:44:46,399
wanted to contribute and they were

862
00:44:43,430 --> 00:44:49,009
making changes for example this guy he's

863
00:44:46,400 --> 00:44:50,930
a speech runner and he made a level

864
00:44:49,010 --> 00:44:53,210
where you are forced to use speech

865
00:44:50,930 --> 00:44:56,779
running techniques otherwise you can't

866
00:44:53,210 --> 00:44:59,810
go through the first level a little bit

867
00:44:56,780 --> 00:45:01,730
about the future basically we intend to

868
00:44:59,810 --> 00:45:04,460
no keep him faction and improving code

869
00:45:01,730 --> 00:45:06,770
adding some functionality and isolating

870
00:45:04,460 --> 00:45:08,600
parts of the code in into new libraries

871
00:45:06,770 --> 00:45:11,120
so for example we intend to have this

872
00:45:08,600 --> 00:45:14,569
what we call reacts which basically

873
00:45:11,120 --> 00:45:16,339
looks like hex actor new and the react

874
00:45:14,570 --> 00:45:19,880
Isle map which basically looks like

875
00:45:16,340 --> 00:45:24,849
child from RPG Maker if you ever play

876
00:45:19,880 --> 00:45:28,479
with it we are I mean he is Bruno

877
00:45:24,849 --> 00:45:31,329
Pachelbel's he's doing right now some

878
00:45:28,479 --> 00:45:32,649
full-stack stuff at Casa Ferry and he's

879
00:45:31,329 --> 00:45:34,569
the guy who's always having any of

880
00:45:32,650 --> 00:45:36,910
creating new projects and those crazy

881
00:45:34,569 --> 00:45:38,739
stuff I am Matthias right now I'm as

882
00:45:36,910 --> 00:45:41,920
front-end engineer at geography in

883
00:45:38,739 --> 00:45:44,259
Prague and I'm the one who's addicted to

884
00:45:41,920 --> 00:45:46,509
emotions memes and beers so reach me up

885
00:45:44,259 --> 00:45:50,140
for what is it called

886
00:45:46,509 --> 00:45:53,079
Hika there's yeah some beers a cough

887
00:45:50,140 --> 00:45:54,970
just ban Jamie who's over there and he

888
00:45:53,079 --> 00:45:57,819
helped with a lot translating posts and

889
00:45:54,970 --> 00:46:00,328
giving feedback on the talk and the rest

890
00:45:57,819 --> 00:46:03,579
whole who's the guy who made the logo

891
00:46:00,329 --> 00:46:06,009
this talk is available at this link on

892
00:46:03,579 --> 00:46:08,619
speaker dock again the project is

893
00:46:06,009 --> 00:46:10,440
available on github

894
00:46:08,619 --> 00:46:14,049
there are a bunch of blog posts

895
00:46:10,440 --> 00:46:15,789
explaining into the group details how we

896
00:46:14,049 --> 00:46:17,499
did that and there are written

897
00:46:15,789 --> 00:46:19,749
Portuguese but there is a translation

898
00:46:17,499 --> 00:46:22,180
going to English and Spanish so we have

899
00:46:19,749 --> 00:46:25,629
many posts in English so far last but

900
00:46:22,180 --> 00:46:29,489
not least we got stickers so and that's

901
00:46:25,630 --> 00:46:29,489
it guys thanks

902
00:46:35,590 --> 00:46:38,669
[Music]

903
00:46:53,790 --> 00:46:55,850
you

