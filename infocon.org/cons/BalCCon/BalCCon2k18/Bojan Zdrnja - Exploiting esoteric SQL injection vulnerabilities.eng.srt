1
00:00:00,000 --> 00:00:12,130
[Music]

2
00:00:11,270 --> 00:00:14,209
[Applause]

3
00:00:12,130 --> 00:00:15,929
[Music]

4
00:00:14,210 --> 00:00:18,960
hello everyone

5
00:00:15,929 --> 00:00:23,100
our next presenter<font color="#CCCCCC"> is Boyan and he will</font>

6
00:00:18,960 --> 00:00:31,309
be<font color="#E5E5E5"> presenting exploring esoteric SQL</font>

7
00:00:23,100 --> 00:00:34,649
injection vulnerabilities so welcome<font color="#CCCCCC"> so</font>

8
00:00:31,309 --> 00:00:37,969
thank<font color="#E5E5E5"> you and hello everyone my first</font>

9
00:00:34,649 --> 00:00:41,579
time here<font color="#E5E5E5"> in advance</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> know Assad</font>

10
00:00:37,969 --> 00:00:42,899
<font color="#E5E5E5">so very excited to be here so excited</font>

11
00:00:41,579 --> 00:00:45,239
that I actually have a<font color="#CCCCCC"> couple of live</font>

12
00:00:42,899 --> 00:00:48,480
demos<font color="#CCCCCC"> today and you know how it's always</font>

13
00:00:45,239 --> 00:00:51,390
<font color="#E5E5E5">difficult with live demos</font><font color="#CCCCCC"> so depending</font>

14
00:00:48,480 --> 00:00:53,819
on you<font color="#CCCCCC"> know if I prayed enough to the</font>

15
00:00:51,390 --> 00:00:55,860
demo gods<font color="#E5E5E5"> those live demos will work if</font>

16
00:00:53,820 --> 00:00:59,190
not<font color="#E5E5E5"> then we'll stick with the slides but</font>

17
00:00:55,860 --> 00:01:03,000
political<font color="#E5E5E5"> that it'll be</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so just a</font>

18
00:00:59,190 --> 00:01:05,700
<font color="#E5E5E5">little bit of agenda for today</font><font color="#CCCCCC"> I'll just</font>

19
00:01:03,000 --> 00:01:07,619
have one slide<font color="#CCCCCC"> about myself</font><font color="#E5E5E5"> and then</font>

20
00:01:05,700 --> 00:01:10,890
since there are<font color="#E5E5E5"> people with different</font>

21
00:01:07,619 --> 00:01:14,100
<font color="#E5E5E5">background here</font><font color="#CCCCCC"> I'll spend a couple</font><font color="#E5E5E5"> of</font>

22
00:01:10,890 --> 00:01:15,750
<font color="#E5E5E5">minutes on sequel injection 101 just to</font>

23
00:01:14,100 --> 00:01:18,509
make<font color="#CCCCCC"> sure that everyone will understand</font>

24
00:01:15,750 --> 00:01:20,189
what I'll be doing later<font color="#E5E5E5"> because the one</font>

25
00:01:18,509 --> 00:01:22,680
thing we don't want<font color="#E5E5E5"> to be</font><font color="#CCCCCC"> script kiddies</font>

26
00:01:20,189 --> 00:01:24,508
right we don't<font color="#CCCCCC"> want to</font><font color="#E5E5E5"> just far up</font>

27
00:01:22,680 --> 00:01:26,610
<font color="#E5E5E5">commands and then let them do something</font>

28
00:01:24,509 --> 00:01:29,579
<font color="#E5E5E5">we</font><font color="#CCCCCC"> actually want to understand what's</font>

29
00:01:26,610 --> 00:01:32,340
<font color="#CCCCCC">going on in the background I'll talk a</font>

30
00:01:29,579 --> 00:01:34,139
little<font color="#E5E5E5"> bit about in band or in line and</font>

31
00:01:32,340 --> 00:01:37,200
blind signal injection vulnerabilities

32
00:01:34,140 --> 00:01:42,000
and then I will hopefully successfully

33
00:01:37,200 --> 00:01:43,950
demo<font color="#CCCCCC"> two very</font><font color="#E5E5E5"> easy</font><font color="#CCCCCC"> Taric signal</font>

34
00:01:42,000 --> 00:01:46,920
injection vulnerabilities<font color="#CCCCCC"> that I</font>

35
00:01:43,950 --> 00:01:48,960
nevertheless found in the<font color="#CCCCCC"> wild so these</font>

36
00:01:46,920 --> 00:01:51,270
vulnerabilities<font color="#CCCCCC"> are from</font><font color="#E5E5E5"> real world</font>

37
00:01:48,960 --> 00:01:53,369
applications but obviously I will<font color="#E5E5E5"> be</font>

38
00:01:51,270 --> 00:01:56,100
running<font color="#E5E5E5"> them in my isolated</font><font color="#CCCCCC"> environment</font>

39
00:01:53,369 --> 00:01:58,159
here<font color="#E5E5E5"> the funny thing is that the</font><font color="#CCCCCC"> last</font>

40
00:01:56,100 --> 00:02:01,048
the last<font color="#CCCCCC"> one that</font><font color="#E5E5E5"> I will exploit</font>

41
00:01:58,159 --> 00:02:04,320
absolutely no tools that exist<font color="#CCCCCC"> today</font>

42
00:02:01,049 --> 00:02:04,950
<font color="#CCCCCC">will find those vulnerabilities</font><font color="#E5E5E5"> and they</font>

43
00:02:04,320 --> 00:02:07,048
still exist

44
00:02:04,950 --> 00:02:08,460
<font color="#CCCCCC">I can still exploit them and hopefully</font>

45
00:02:07,049 --> 00:02:10,980
<font color="#E5E5E5">we</font><font color="#CCCCCC"> will all do that</font>

46
00:02:08,460 --> 00:02:13,620
together<font color="#E5E5E5"> so just a little bit about</font>

47
00:02:10,979 --> 00:02:15,780
myself<font color="#CCCCCC"> my name is</font><font color="#E5E5E5"> Benina</font>

48
00:02:13,620 --> 00:02:17,760
and finally<font color="#E5E5E5"> I'm at a conference there I</font>

49
00:02:15,780 --> 00:02:20,190
don't<font color="#CCCCCC"> have to you</font><font color="#E5E5E5"> know repeat my surname</font>

50
00:02:17,760 --> 00:02:24,720
because all of<font color="#E5E5E5"> you can hopefully at</font>

51
00:02:20,190 --> 00:02:27,000
least local guys can read it<font color="#CCCCCC"> I work in a</font>

52
00:02:24,720 --> 00:02:29,330
Croatian security company<font color="#E5E5E5"> called in Figo</font>

53
00:02:27,000 --> 00:02:32,520
<font color="#CCCCCC">some of you guys know me from</font><font color="#E5E5E5"> before</font>

54
00:02:29,330 --> 00:02:34,320
<font color="#E5E5E5">I'm also one of the sense instructors so</font>

55
00:02:32,520 --> 00:02:36,450
I teach two courses<font color="#E5E5E5"> five</font><font color="#CCCCCC"> oh four</font><font color="#E5E5E5"> and</font>

56
00:02:34,320 --> 00:02:38,630
five<font color="#CCCCCC"> forty-five or two is a web</font>

57
00:02:36,450 --> 00:02:41,910
application<font color="#CCCCCC"> penetration testing course</font>

58
00:02:38,630 --> 00:02:44,250
<font color="#E5E5E5">which is something I draw all the ideas</font>

59
00:02:41,910 --> 00:02:47,130
<font color="#E5E5E5">from and if you want to know more about</font>

60
00:02:44,250 --> 00:02:49,470
sense<font color="#E5E5E5"> what we know unfortunately I'll</font>

61
00:02:47,130 --> 00:02:50,730
<font color="#CCCCCC">have to</font><font color="#E5E5E5"> leave today so you'll only have</font>

62
00:02:49,470 --> 00:02:53,640
maybe half an hour after<font color="#E5E5E5"> the</font>

63
00:02:50,730 --> 00:02:55,709
presentation to catch me<font color="#E5E5E5"> that Twitter is</font>

64
00:02:53,640 --> 00:02:57,720
here<font color="#E5E5E5"> emails are here so feel free to</font>

65
00:02:55,710 --> 00:03:01,290
give me after if you need anything

66
00:02:57,720 --> 00:03:04,530
so<font color="#CCCCCC"> why sequel injection I think</font><font color="#E5E5E5"> pretty</font>

67
00:03:01,290 --> 00:03:06,750
<font color="#CCCCCC">much obvious</font><font color="#E5E5E5"> right so with all the other</font>

68
00:03:04,530 --> 00:03:09,660
web application vulnerabilities

69
00:03:06,750 --> 00:03:12,450
<font color="#E5E5E5">you know signal injection is the sexiest</font>

70
00:03:09,660 --> 00:03:14,910
one<font color="#CCCCCC"> Tony we're over</font><font color="#E5E5E5"> there</font><font color="#CCCCCC"> we'll be</font>

71
00:03:12,450 --> 00:03:17,220
<font color="#E5E5E5">presenting</font><font color="#CCCCCC"> tomorrow</font><font color="#E5E5E5"> on some let's say</font>

72
00:03:14,910 --> 00:03:20,549
less exciting but still nevertheless

73
00:03:17,220 --> 00:03:22,020
very<font color="#E5E5E5"> interesting web application</font>

74
00:03:20,550 --> 00:03:24,210
vulnerabilities so if you're here

75
00:03:22,020 --> 00:03:26,220
tomorrow<font color="#CCCCCC"> I</font><font color="#E5E5E5"> definitely encourage</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> to</font>

76
00:03:24,210 --> 00:03:28,590
<font color="#E5E5E5">go and listen to him it's nothing</font><font color="#CCCCCC"> else</font>

77
00:03:26,220 --> 00:03:31,800
he's a funny presenter so I'm sure it'll

78
00:03:28,590 --> 00:03:33,540
<font color="#CCCCCC">be a good</font><font color="#E5E5E5"> presentation for me you know</font>

79
00:03:31,800 --> 00:03:35,250
signal injection<font color="#E5E5E5"> that's what I'll</font><font color="#CCCCCC"> be</font>

80
00:03:33,540 --> 00:03:39,030
<font color="#CCCCCC">talking about today</font>

81
00:03:35,250 --> 00:03:41,220
so what signal injection<font color="#E5E5E5"> well it's one</font>

82
00:03:39,030 --> 00:03:43,110
<font color="#E5E5E5">of the subcategories of injection</font>

83
00:03:41,220 --> 00:03:46,320
vulnerabilities and injection

84
00:03:43,110 --> 00:03:50,580
vulnerabilities are still so common in

85
00:03:46,320 --> 00:03:53,130
web applications<font color="#E5E5E5"> that since 2010</font><font color="#CCCCCC"> in the</font>

86
00:03:50,580 --> 00:03:55,470
<font color="#E5E5E5">August top</font><font color="#CCCCCC"> 10 vulnerabilities list</font>

87
00:03:53,130 --> 00:03:58,560
<font color="#E5E5E5">injection vulnerabilities are at the</font>

88
00:03:55,470 --> 00:04:00,900
number one spot<font color="#CCCCCC"> so they are very</font><font color="#E5E5E5"> very</font>

89
00:03:58,560 --> 00:04:02,640
prevalent<font color="#CCCCCC"> in here we have</font><font color="#E5E5E5"> all sorts</font><font color="#CCCCCC"> of</font>

90
00:04:00,900 --> 00:04:04,110
different injection vulnerabilities we

91
00:04:02,640 --> 00:04:05,970
can have signal injection

92
00:04:04,110 --> 00:04:08,520
vulnerabilities were<font color="#E5E5E5"> obviously we can</font>

93
00:04:05,970 --> 00:04:11,130
impact the<font color="#E5E5E5"> way</font><font color="#CCCCCC"> that the web application</font>

94
00:04:08,520 --> 00:04:14,100
sends the data to<font color="#CCCCCC"> the back-end database</font>

95
00:04:11,130 --> 00:04:16,918
<font color="#CCCCCC">and since we can control the parameters</font>

96
00:04:14,100 --> 00:04:17,858
<font color="#E5E5E5">as we will see</font><font color="#CCCCCC"> later</font><font color="#E5E5E5"> we can</font><font color="#CCCCCC"> actually</font>

97
00:04:16,918 --> 00:04:21,969
make

98
00:04:17,858 --> 00:04:24,310
the sequel database do something else<font color="#CCCCCC"> we</font>

99
00:04:21,970 --> 00:04:26,439
can also have like<font color="#E5E5E5"> OS or command</font>

100
00:04:24,310 --> 00:04:28,509
injection vulnerabilities when we can

101
00:04:26,439 --> 00:04:31,030
influence<font color="#E5E5E5"> some commands which are</font>

102
00:04:28,509 --> 00:04:33,550
executed<font color="#CCCCCC"> by the web application</font><font color="#E5E5E5"> at the</font>

103
00:04:31,030 --> 00:04:35,888
<font color="#E5E5E5">backend system</font><font color="#CCCCCC"> held</font><font color="#E5E5E5"> up injection</font>

104
00:04:33,550 --> 00:04:40,900
vulnerabilities<font color="#CCCCCC"> could be have no sequel</font>

105
00:04:35,889 --> 00:04:42,819
injection<font color="#E5E5E5"> but I think we can</font><font color="#CCCCCC"> well it's</font>

106
00:04:40,900 --> 00:04:45,609
maybe not as<font color="#CCCCCC"> powerful</font><font color="#E5E5E5"> a sequel injection</font>

107
00:04:42,819 --> 00:04:48,490
<font color="#CCCCCC">because</font><font color="#E5E5E5"> the no sequel databases are not</font>

108
00:04:45,610 --> 00:04:50,550
MongoDB for example they limit<font color="#E5E5E5"> us quite</font>

109
00:04:48,490 --> 00:04:52,449
a<font color="#E5E5E5"> bit in the queries that we can issue</font>

110
00:04:50,550 --> 00:04:55,389
<font color="#CCCCCC">sure sometimes you can execute</font>

111
00:04:52,449 --> 00:04:58,960
JavaScript on of no sequel database but

112
00:04:55,389 --> 00:05:00,490
in a typical<font color="#CCCCCC"> standard</font><font color="#E5E5E5"> web application we</font>

113
00:04:58,960 --> 00:05:03,068
can<font color="#E5E5E5"> still have no sequel injection</font>

114
00:05:00,490 --> 00:05:04,870
vulnerabilities as well so maybe topic

115
00:05:03,069 --> 00:05:07,509
for<font color="#E5E5E5"> next year's</font><font color="#CCCCCC"> balcan maybe for me</font>

116
00:05:04,870 --> 00:05:09,819
maybe for someone<font color="#E5E5E5"> else today I'll talk</font>

117
00:05:07,509 --> 00:05:12,340
about<font color="#E5E5E5"> plain normal sequel injection</font>

118
00:05:09,819 --> 00:05:14,409
vulnerabilities<font color="#E5E5E5"> but as I said there will</font>

119
00:05:12,340 --> 00:05:18,159
be a<font color="#E5E5E5"> little bit esoteric and not that</font>

120
00:05:14,409 --> 00:05:20,949
easy to<font color="#CCCCCC"> maybe detect</font><font color="#E5E5E5"> or exploit as we</font>

121
00:05:18,159 --> 00:05:22,810
will see so why do<font color="#E5E5E5"> we have sequel</font>

122
00:05:20,949 --> 00:05:25,360
injection vulnerabilities<font color="#E5E5E5"> this is the</font>

123
00:05:22,810 --> 00:05:27,699
part where I'll go through some<font color="#E5E5E5"> basics</font>

124
00:05:25,360 --> 00:05:30,370
so for some<font color="#E5E5E5"> of you who</font><font color="#CCCCCC"> maybe worked with</font>

125
00:05:27,699 --> 00:05:32,529
sequel injection<font color="#E5E5E5"> before</font><font color="#CCCCCC"> just hang with</font>

126
00:05:30,370 --> 00:05:34,120
<font color="#E5E5E5">me</font><font color="#CCCCCC"> for a couple of minutes</font><font color="#E5E5E5"> if you don't</font>

127
00:05:32,529 --> 00:05:36,250
know much<font color="#CCCCCC"> about</font><font color="#E5E5E5"> sequel injection</font><font color="#CCCCCC"> this</font>

128
00:05:34,120 --> 00:05:39,069
<font color="#E5E5E5">will be a good good couple of slides</font>

129
00:05:36,250 --> 00:05:40,990
just<font color="#E5E5E5"> to bring you up to speed</font><font color="#CCCCCC"> so signal</font>

130
00:05:39,069 --> 00:05:43,360
injection vulnerabilities and actually

131
00:05:40,990 --> 00:05:45,699
any injection vulnerabilities exist

132
00:05:43,360 --> 00:05:48,430
because<font color="#CCCCCC"> we have a need to</font><font color="#E5E5E5"> have</font>

133
00:05:45,699 --> 00:05:50,529
interaction<font color="#E5E5E5"> from our front end and that</font>

134
00:05:48,430 --> 00:05:52,839
front<font color="#E5E5E5"> end is typically a web</font><font color="#CCCCCC"> application</font>

135
00:05:50,529 --> 00:05:56,080
but<font color="#CCCCCC"> it can be anything with a back-end</font>

136
00:05:52,839 --> 00:05:59,110
<font color="#E5E5E5">database so virtually any web</font>

137
00:05:56,080 --> 00:06:01,628
application<font color="#E5E5E5"> today unless it's a static</font>

138
00:05:59,110 --> 00:06:03,969
and simple web application will have

139
00:06:01,629 --> 00:06:06,759
some kinds of<font color="#CCCCCC"> back-end database</font><font color="#E5E5E5"> it will</font>

140
00:06:03,969 --> 00:06:10,270
be my signal<font color="#E5E5E5"> Microsoft sequel server it</font>

141
00:06:06,759 --> 00:06:12,400
<font color="#E5E5E5">can be Oracle db2</font><font color="#CCCCCC"> informix</font><font color="#E5E5E5"> whatever you</font>

142
00:06:10,270 --> 00:06:15,279
want but typically we<font color="#E5E5E5"> have will have a</font>

143
00:06:12,400 --> 00:06:17,679
front-end web application may<font color="#E5E5E5"> be some</font>

144
00:06:15,279 --> 00:06:21,069
kind<font color="#E5E5E5"> of middle layer and then our</font>

145
00:06:17,680 --> 00:06:23,409
database<font color="#E5E5E5"> so the interaction with</font><font color="#CCCCCC"> the</font>

146
00:06:21,069 --> 00:06:26,930
database normally depends on user

147
00:06:23,409 --> 00:06:28,990
activities<font color="#E5E5E5"> when we click in our browser</font>

148
00:06:26,930 --> 00:06:31,370
window and<font color="#CCCCCC"> we want to sort something</font>

149
00:06:28,990 --> 00:06:33,259
normally what happens is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> either</font><font color="#CCCCCC"> the</font>

150
00:06:31,370 --> 00:06:35,840
application<font color="#CCCCCC"> already has the data and</font>

151
00:06:33,259 --> 00:06:39,139
sorts it for us or it will issue a

152
00:06:35,840 --> 00:06:41,000
signal<font color="#E5E5E5"> query to the database and</font><font color="#CCCCCC"> that</font>

153
00:06:39,139 --> 00:06:44,229
signal query will actually contain

154
00:06:41,000 --> 00:06:48,130
certain<font color="#E5E5E5"> input that is received from us</font>

155
00:06:44,229 --> 00:06:51,800
so indirectly<font color="#E5E5E5"> we</font><font color="#CCCCCC"> can actually modify the</font>

156
00:06:48,130 --> 00:06:54,259
signal query<font color="#E5E5E5"> that is being passed by our</font>

157
00:06:51,800 --> 00:06:57,889
<font color="#E5E5E5">web application front-end to the</font>

158
00:06:54,259 --> 00:07:01,729
database back-end<font color="#E5E5E5"> so this data since</font>

159
00:06:57,889 --> 00:07:04,130
<font color="#E5E5E5">it's sent to</font><font color="#CCCCCC"> the database it's parsed by</font>

160
00:07:01,729 --> 00:07:07,370
the interpreter<font color="#CCCCCC"> so it is a part of the</font>

161
00:07:04,130 --> 00:07:09,710
query<font color="#E5E5E5"> which will be passed by the web</font>

162
00:07:07,370 --> 00:07:14,060
application to<font color="#CCCCCC"> the database and it will</font>

163
00:07:09,710 --> 00:07:17,630
be<font color="#CCCCCC"> executed by the sequel interpreter so</font>

164
00:07:14,060 --> 00:07:20,750
normally virtually every web application

165
00:07:17,630 --> 00:07:21,770
<font color="#E5E5E5">today will use a single account to talk</font>

166
00:07:20,750 --> 00:07:24,110
to the database

167
00:07:21,770 --> 00:07:26,570
that's how web applications normally

168
00:07:24,110 --> 00:07:30,110
work because it makes<font color="#E5E5E5"> no</font><font color="#CCCCCC"> sense</font><font color="#E5E5E5"> for every</font>

169
00:07:26,570 --> 00:07:32,360
<font color="#E5E5E5">single</font><font color="#CCCCCC"> user</font><font color="#E5E5E5"> our front-end client user to</font>

170
00:07:30,110 --> 00:07:34,190
have<font color="#CCCCCC"> an account</font><font color="#E5E5E5"> on the database but</font>

171
00:07:32,360 --> 00:07:36,380
really wouldn't work<font color="#E5E5E5"> the performance</font>

172
00:07:34,190 --> 00:07:38,360
<font color="#E5E5E5">would suck so what happens is that the</font>

173
00:07:36,380 --> 00:07:40,699
web application normally uses a<font color="#E5E5E5"> single</font>

174
00:07:38,360 --> 00:07:43,220
account to talk to the<font color="#E5E5E5"> back-end</font><font color="#CCCCCC"> database</font>

175
00:07:40,699 --> 00:07:47,690
<font color="#CCCCCC">and this account normally can read</font>

176
00:07:43,220 --> 00:07:51,080
absolutely everything<font color="#CCCCCC"> so the developer</font>

177
00:07:47,690 --> 00:07:53,479
<font color="#CCCCCC">actually relies on his own application</font>

178
00:07:51,080 --> 00:07:55,880
<font color="#E5E5E5">to do proper authorization and</font>

179
00:07:53,479 --> 00:07:59,000
authentication of users<font color="#E5E5E5"> and then the web</font>

180
00:07:55,880 --> 00:08:01,759
application will decide<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> this user</font><font color="#CCCCCC"> can</font>

181
00:07:59,000 --> 00:08:05,120
read certain<font color="#E5E5E5"> tables or can retrieve the</font>

182
00:08:01,759 --> 00:08:08,150
data you can<font color="#CCCCCC"> see probably now where</font>

183
00:08:05,120 --> 00:08:10,789
sequel injection<font color="#CCCCCC"> comes into play here if</font>

184
00:08:08,150 --> 00:08:13,698
we can modify the query<font color="#E5E5E5"> that</font><font color="#CCCCCC"> is being</font>

185
00:08:10,789 --> 00:08:16,550
<font color="#E5E5E5">sent by the application to the</font><font color="#CCCCCC"> back-end</font>

186
00:08:13,699 --> 00:08:19,310
database since that one single<font color="#CCCCCC"> account</font>

187
00:08:16,550 --> 00:08:22,520
<font color="#E5E5E5">can read absolutely everything we can</font>

188
00:08:19,310 --> 00:08:25,190
get the<font color="#E5E5E5"> data out no matter if our if our</font>

189
00:08:22,520 --> 00:08:27,469
user is authorized to<font color="#E5E5E5"> do that or</font><font color="#CCCCCC"> not and</font>

190
00:08:25,190 --> 00:08:28,940
that's actually what we're gonna do with

191
00:08:27,470 --> 00:08:30,500
the demos<font color="#CCCCCC"> that I will show in a couple</font>

192
00:08:28,940 --> 00:08:33,330
<font color="#E5E5E5">of minutes</font>

193
00:08:30,500 --> 00:08:36,390
so before we start<font color="#CCCCCC"> a</font><font color="#E5E5E5"> little bit of</font>

194
00:08:33,330 --> 00:08:39,000
refresher as well<font color="#E5E5E5"> some important</font><font color="#CCCCCC"> simple</font>

195
00:08:36,390 --> 00:08:41,400
verbs<font color="#CCCCCC"> I'm sure that you you're aware at</font>

196
00:08:39,000 --> 00:08:43,950
least a couple<font color="#CCCCCC"> of them obviously</font><font color="#E5E5E5"> we'd</font>

197
00:08:41,400 --> 00:08:46,850
select<font color="#E5E5E5"> we want to retrieve</font><font color="#CCCCCC"> data from the</font>

198
00:08:43,950 --> 00:08:49,910
database<font color="#CCCCCC"> we read</font><font color="#E5E5E5"> something from a</font><font color="#CCCCCC"> table</font>

199
00:08:46,850 --> 00:08:53,490
<font color="#CCCCCC">between</font><font color="#E5E5E5"> certain update we can modify</font>

200
00:08:49,910 --> 00:08:56,310
<font color="#E5E5E5">data again depending on the way the web</font>

201
00:08:53,490 --> 00:08:58,680
front-end<font color="#E5E5E5"> is actually using</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> backend</font>

202
00:08:56,310 --> 00:09:02,280
database<font color="#CCCCCC"> we might be able</font><font color="#E5E5E5"> to modify the</font>

203
00:08:58,680 --> 00:09:04,770
data or<font color="#E5E5E5"> not in most of the databases</font><font color="#CCCCCC"> if</font>

204
00:09:02,280 --> 00:09:07,079
we have a select query<font color="#E5E5E5"> we won't be able</font>

205
00:09:04,770 --> 00:09:09,949
<font color="#E5E5E5">to modify</font><font color="#CCCCCC"> the data because selects</font><font color="#E5E5E5"> value</font>

206
00:09:07,080 --> 00:09:14,190
can<font color="#E5E5E5"> only read if we can insert or update</font>

207
00:09:09,950 --> 00:09:17,460
<font color="#E5E5E5">then it's basically game or</font><font color="#CCCCCC"> delete</font>

208
00:09:14,190 --> 00:09:18,870
<font color="#E5E5E5">hopefully account that we are using that</font>

209
00:09:17,460 --> 00:09:20,610
one single account<font color="#E5E5E5"> that the web</font>

210
00:09:18,870 --> 00:09:22,530
application is<font color="#E5E5E5"> using shouldn't have</font>

211
00:09:20,610 --> 00:09:26,400
delete privilege unless it really<font color="#E5E5E5"> has to</font>

212
00:09:22,530 --> 00:09:29,459
delete some rows if it can use<font color="#E5E5E5"> the</font>

213
00:09:26,400 --> 00:09:31,860
delete<font color="#CCCCCC"> keyword then it's</font><font color="#E5E5E5"> probably even</font>

214
00:09:29,460 --> 00:09:33,930
<font color="#E5E5E5">worse for the database and finally Union</font>

215
00:09:31,860 --> 00:09:35,640
combines the results of two selects we

216
00:09:33,930 --> 00:09:38,810
won't have to use Union in today's

217
00:09:35,640 --> 00:09:42,270
exploitation but it's good to<font color="#CCCCCC"> know</font>

218
00:09:38,810 --> 00:09:45,030
another important<font color="#CCCCCC"> thing our signal</font>

219
00:09:42,270 --> 00:09:47,870
modifiers so weak signal modifiers<font color="#E5E5E5"> we</font>

220
00:09:45,030 --> 00:09:50,819
can<font color="#CCCCCC"> actually extend the sequel query and</font>

221
00:09:47,870 --> 00:09:53,310
be very<font color="#E5E5E5"> specific on what we want to</font>

222
00:09:50,820 --> 00:09:56,460
retrieve<font color="#E5E5E5"> so our sequel query can be for</font>

223
00:09:53,310 --> 00:10:00,689
<font color="#CCCCCC">example select star from table</font><font color="#E5E5E5"> users</font>

224
00:09:56,460 --> 00:10:04,080
<font color="#CCCCCC">where ID equals one so</font><font color="#E5E5E5"> that's like a</font>

225
00:10:00,690 --> 00:10:05,970
very very<font color="#E5E5E5"> small easy</font><font color="#CCCCCC"> query</font><font color="#E5E5E5"> again if this</font>

226
00:10:04,080 --> 00:10:08,280
ID parameter is something that we can

227
00:10:05,970 --> 00:10:11,040
influence then we might<font color="#E5E5E5"> be able to</font>

228
00:10:08,280 --> 00:10:13,439
<font color="#E5E5E5">extend the signal query the</font><font color="#CCCCCC"> tend on or</font>

229
00:10:11,040 --> 00:10:18,390
we can narrow the sequel query in the

230
00:10:13,440 --> 00:10:20,910
<font color="#CCCCCC">ver modifier just</font><font color="#E5E5E5"> one more slide about</font>

231
00:10:18,390 --> 00:10:23,550
special characters<font color="#E5E5E5"> and these are the</font>

232
00:10:20,910 --> 00:10:25,860
ones<font color="#CCCCCC"> that you know make all the fun</font><font color="#E5E5E5"> for</font>

233
00:10:23,550 --> 00:10:27,800
<font color="#CCCCCC">us so obviously I'm sure that you all</font>

234
00:10:25,860 --> 00:10:30,090
<font color="#CCCCCC">know about single teat and</font><font color="#E5E5E5"> double quote</font>

235
00:10:27,800 --> 00:10:32,969
the one character<font color="#CCCCCC"> that</font><font color="#E5E5E5"> can break</font>

236
00:10:30,090 --> 00:10:35,660
<font color="#E5E5E5">absolutely every single signal query</font>

237
00:10:32,970 --> 00:10:38,670
unless it's properly<font color="#E5E5E5"> filtered or encoded</font>

238
00:10:35,660 --> 00:10:40,740
so yeah<font color="#E5E5E5"> typically every penetration</font>

239
00:10:38,670 --> 00:10:41,610
tester<font color="#E5E5E5"> every hacker first thing they do</font>

240
00:10:40,740 --> 00:10:43,440
in a field

241
00:10:41,610 --> 00:10:45,450
is put<font color="#E5E5E5"> single tick right just to see</font>

242
00:10:43,440 --> 00:10:47,480
what<font color="#E5E5E5"> happens</font><font color="#CCCCCC"> so yeah don't</font><font color="#E5E5E5"> do that</font><font color="#CCCCCC"> on</font>

243
00:10:45,450 --> 00:10:49,860
your bank because you'll probably<font color="#E5E5E5"> have</font>

244
00:10:47,480 --> 00:10:52,649
difficulties explaining<font color="#E5E5E5"> why you</font><font color="#CCCCCC"> entered</font>

245
00:10:49,860 --> 00:10:55,410
single tick<font color="#E5E5E5"> into</font><font color="#CCCCCC"> a numeric field like</font>

246
00:10:52,649 --> 00:10:57,029
yeah<font color="#E5E5E5"> I accidentally typed it it won't</font>

247
00:10:55,410 --> 00:10:59,040
really<font color="#E5E5E5"> work you know it's numeric field</font>

248
00:10:57,029 --> 00:11:01,950
<font color="#E5E5E5">than the</font><font color="#CCCCCC"> read</font><font color="#E5E5E5"> so do this only if you are</font>

249
00:10:59,040 --> 00:11:04,170
allowed to<font color="#CCCCCC"> do it</font><font color="#E5E5E5"> during</font><font color="#CCCCCC"> the limiters</font>

250
00:11:01,950 --> 00:11:06,899
important for us<font color="#E5E5E5"> so we can try</font><font color="#CCCCCC"> to break</font>

251
00:11:04,170 --> 00:11:09,899
out<font color="#CCCCCC"> of shrinks we can maybe even exploit</font>

252
00:11:06,899 --> 00:11:11,250
sequel injection vulnerabilities with

253
00:11:09,899 --> 00:11:12,720
<font color="#CCCCCC">these being filtered I'll have one</font>

254
00:11:11,250 --> 00:11:16,079
example with that

255
00:11:12,720 --> 00:11:19,290
<font color="#E5E5E5">comment the limiters - - hash character</font>

256
00:11:16,079 --> 00:11:22,050
<font color="#E5E5E5">or typical programming comments string</font>

257
00:11:19,290 --> 00:11:24,779
concatenation<font color="#E5E5E5"> and so on one thing</font><font color="#CCCCCC"> that</font>

258
00:11:22,050 --> 00:11:27,359
is important<font color="#E5E5E5"> calling functions so we can</font>

259
00:11:24,779 --> 00:11:30,420
have a<font color="#E5E5E5"> sub query in our query we can</font>

260
00:11:27,360 --> 00:11:33,180
inject a different query so the database

261
00:11:30,420 --> 00:11:35,910
<font color="#E5E5E5">will first run a sub query select one</font>

262
00:11:33,180 --> 00:11:38,279
<font color="#E5E5E5">two three and the result</font><font color="#CCCCCC"> one two three</font>

263
00:11:35,910 --> 00:11:40,620
<font color="#CCCCCC">will be returned back to</font><font color="#E5E5E5"> the outer query</font>

264
00:11:38,279 --> 00:11:43,620
we will<font color="#E5E5E5"> use this quite a bit when</font>

265
00:11:40,620 --> 00:11:46,050
<font color="#E5E5E5">exploiting</font><font color="#CCCCCC"> signal injection so let's see</font>

266
00:11:43,620 --> 00:11:49,800
a very very<font color="#CCCCCC"> basic example</font><font color="#E5E5E5"> so this is a</font>

267
00:11:46,050 --> 00:11:53,160
PHP<font color="#CCCCCC"> web application and this is our port</font>

268
00:11:49,800 --> 00:11:55,859
developer who made a very<font color="#CCCCCC"> very</font><font color="#E5E5E5"> basic and</font>

269
00:11:53,160 --> 00:11:59,279
typical signal injection vulnerability

270
00:11:55,860 --> 00:12:01,350
<font color="#CCCCCC">so what is the developer</font><font color="#E5E5E5"> doing here so</font>

271
00:11:59,279 --> 00:12:03,660
he's trying to retrieve all the

272
00:12:01,350 --> 00:12:06,000
<font color="#E5E5E5">transactions from a table called</font>

273
00:12:03,660 --> 00:12:08,790
transactions<font color="#CCCCCC"> as you can see here</font><font color="#E5E5E5"> select</font>

274
00:12:06,000 --> 00:12:12,600
<font color="#CCCCCC">star from transactions</font><font color="#E5E5E5"> where source</font><font color="#CCCCCC"> may</font>

275
00:12:08,790 --> 00:12:16,860
<font color="#CCCCCC">be source account equals some ID value</font>

276
00:12:12,600 --> 00:12:20,250
and this ID value is actually<font color="#E5E5E5"> receiving</font>

277
00:12:16,860 --> 00:12:22,829
from the user from<font color="#E5E5E5"> the web application</font>

278
00:12:20,250 --> 00:12:26,070
so in our application when<font color="#E5E5E5"> you click on</font>

279
00:12:22,829 --> 00:12:28,529
<font color="#CCCCCC">something the ID parameter</font><font color="#E5E5E5"> the value of</font>

280
00:12:26,070 --> 00:12:31,170
the ID parameter<font color="#E5E5E5"> is being sent to the</font>

281
00:12:28,529 --> 00:12:35,130
web server<font color="#E5E5E5"> and then subsequently passed</font>

282
00:12:31,170 --> 00:12:36,569
all the way<font color="#E5E5E5"> to the sequel database okay</font>

283
00:12:35,130 --> 00:12:39,990
<font color="#E5E5E5">I hope this makes sense</font><font color="#CCCCCC"> even if you</font><font color="#E5E5E5"> are</font>

284
00:12:36,570 --> 00:12:41,850
not familiar with<font color="#E5E5E5"> some signal engine</font><font color="#CCCCCC"> we</font>

285
00:12:39,990 --> 00:12:45,029
<font color="#E5E5E5">can simply see here that the ID</font>

286
00:12:41,850 --> 00:12:46,890
parameter is literally taken and put

287
00:12:45,029 --> 00:12:49,949
into<font color="#E5E5E5"> the signal query no matter what's</font>

288
00:12:46,890 --> 00:12:52,170
<font color="#E5E5E5">in this</font><font color="#CCCCCC"> parameter</font><font color="#E5E5E5"> so if we take</font><font color="#CCCCCC"> one of</font>

289
00:12:49,949 --> 00:12:56,359
<font color="#E5E5E5">the dangerous characters</font><font color="#CCCCCC"> see</font>

290
00:12:52,170 --> 00:13:00,569
<font color="#E5E5E5">pick and if we put</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> the ID parameter</font>

291
00:12:56,360 --> 00:13:03,570
<font color="#E5E5E5">single tick check what happens we</font>

292
00:13:00,570 --> 00:13:06,240
<font color="#E5E5E5">actually break signal query right</font>

293
00:13:03,570 --> 00:13:08,430
<font color="#E5E5E5">because the</font><font color="#CCCCCC"> original signal query</font>

294
00:13:06,240 --> 00:13:10,560
<font color="#E5E5E5">becomes invalid</font><font color="#CCCCCC"> since it should</font><font color="#E5E5E5"> be</font>

295
00:13:08,430 --> 00:13:13,229
select star from transactions<font color="#E5E5E5"> their</font>

296
00:13:10,560 --> 00:13:15,510
source equals single tick something

297
00:13:13,230 --> 00:13:22,440
single tick<font color="#E5E5E5"> that's what the developer</font>

298
00:13:15,510 --> 00:13:24,720
did here however when we put our single

299
00:13:22,440 --> 00:13:27,269
tick we<font color="#E5E5E5"> actually break it we now have an</font>

300
00:13:24,720 --> 00:13:29,670
uneven<font color="#E5E5E5"> number</font><font color="#CCCCCC"> of single ticks and this</font>

301
00:13:27,269 --> 00:13:32,670
simply breaks the signal to vary

302
00:13:29,670 --> 00:13:35,819
depending on the web application it

303
00:13:32,670 --> 00:13:38,969
might range from<font color="#E5E5E5"> those very very simple</font>

304
00:13:35,820 --> 00:13:40,620
easy to hack web<font color="#E5E5E5"> applications when when</font>

305
00:13:38,970 --> 00:13:43,290
we do this we<font color="#CCCCCC"> actually get an</font><font color="#E5E5E5"> error back</font>

306
00:13:40,620 --> 00:13:45,720
which is your signal queries<font color="#CCCCCC"> in correct</font>

307
00:13:43,290 --> 00:13:50,610
<font color="#E5E5E5">or we could have</font><font color="#CCCCCC"> applications that</font>

308
00:13:45,720 --> 00:13:52,470
gracefully<font color="#E5E5E5"> catch exceptions so up better</font>

309
00:13:50,610 --> 00:13:53,839
<font color="#E5E5E5">I won't say good because it has signal</font>

310
00:13:52,470 --> 00:13:56,339
injection but<font color="#CCCCCC"> a better application</font>

311
00:13:53,839 --> 00:13:59,070
<font color="#E5E5E5">should actually catch this error and</font>

312
00:13:56,339 --> 00:14:01,260
simply print<font color="#E5E5E5"> back and say an error has</font>

313
00:13:59,070 --> 00:14:03,360
happened so we<font color="#E5E5E5"> don't know what</font><font color="#CCCCCC"> actually</font>

314
00:14:01,260 --> 00:14:05,610
happen in the<font color="#E5E5E5"> back end we know there is</font>

315
00:14:03,360 --> 00:14:07,709
an error but<font color="#CCCCCC"> we</font><font color="#E5E5E5"> know exactly what and</font>

316
00:14:05,610 --> 00:14:09,140
this I<font color="#E5E5E5"> will exploit later these are</font>

317
00:14:07,709 --> 00:14:12,180
called blind signal injection

318
00:14:09,140 --> 00:14:14,910
vulnerabilities so how do we exploit

319
00:14:12,180 --> 00:14:17,609
this now remember since<font color="#CCCCCC"> we can inject</font>

320
00:14:14,910 --> 00:14:20,130
<font color="#E5E5E5">whatever we want into the query we can</font>

321
00:14:17,610 --> 00:14:24,329
<font color="#CCCCCC">actually extend</font><font color="#E5E5E5"> the query so if our</font>

322
00:14:20,130 --> 00:14:28,110
input becomes single tick or<font color="#CCCCCC"> one</font><font color="#E5E5E5"> equals</font>

323
00:14:24,329 --> 00:14:30,569
<font color="#CCCCCC">one</font><font color="#E5E5E5"> then check what the resulting</font><font color="#CCCCCC"> sequel</font>

324
00:14:28,110 --> 00:14:33,240
query will<font color="#CCCCCC"> be the resulting signal query</font>

325
00:14:30,570 --> 00:14:36,050
will say select star from transactions

326
00:14:33,240 --> 00:14:41,730
<font color="#CCCCCC">their ID equals single</font><font color="#E5E5E5"> tick single tick</font>

327
00:14:36,050 --> 00:14:46,109
nothing or one<font color="#E5E5E5"> equals one one equals one</font>

328
00:14:41,730 --> 00:14:49,980
<font color="#CCCCCC">is what is</font><font color="#E5E5E5"> true so this will</font><font color="#CCCCCC"> bring</font><font color="#E5E5E5"> back</font>

329
00:14:46,110 --> 00:14:52,380
<font color="#E5E5E5">what the whole table because every</font>

330
00:14:49,980 --> 00:14:55,620
<font color="#CCCCCC">single row will match right</font><font color="#E5E5E5"> ID equals</font>

331
00:14:52,380 --> 00:14:57,000
<font color="#CCCCCC">nothing</font><font color="#E5E5E5"> or true everything is true so we</font>

332
00:14:55,620 --> 00:14:59,550
get back<font color="#CCCCCC"> absolutely</font>

333
00:14:57,000 --> 00:15:01,560
the complete table<font color="#E5E5E5"> now this is a very</font>

334
00:14:59,550 --> 00:15:03,160
simple example<font color="#CCCCCC"> this is like signal</font>

335
00:15:01,560 --> 00:15:05,349
injection 101

336
00:15:03,160 --> 00:15:07,899
and typically when<font color="#CCCCCC"> you try to do this</font>

337
00:15:05,350 --> 00:15:10,180
<font color="#E5E5E5">even some like web application firewalls</font>

338
00:15:07,899 --> 00:15:13,120
intrusion prevention systems<font color="#E5E5E5"> they will</font>

339
00:15:10,180 --> 00:15:13,329
<font color="#E5E5E5">catch this they will check or one equals</font>

340
00:15:13,120 --> 00:15:16,300
one

341
00:15:13,329 --> 00:15:19,660
<font color="#CCCCCC">oh I know this is bad</font><font color="#E5E5E5"> does it need to</font><font color="#CCCCCC"> be</font>

342
00:15:16,300 --> 00:15:20,550
or one equals<font color="#CCCCCC"> one can it be all two</font>

343
00:15:19,660 --> 00:15:23,949
equals<font color="#CCCCCC"> two</font>

344
00:15:20,550 --> 00:15:26,889
sure it can<font color="#CCCCCC"> right all I need</font><font color="#E5E5E5"> to do is</font>

345
00:15:23,949 --> 00:15:29,469
have the<font color="#CCCCCC"> right-hand side become true</font><font color="#E5E5E5"> so</font>

346
00:15:26,889 --> 00:15:31,540
I can put<font color="#E5E5E5"> whatever I want</font><font color="#CCCCCC"> you will see</font>

347
00:15:29,470 --> 00:15:33,250
to the presentation<font color="#E5E5E5"> why it's</font>

348
00:15:31,540 --> 00:15:35,019
increasingly difficult<font color="#E5E5E5"> for web</font>

349
00:15:33,250 --> 00:15:37,750
application firewalls intrusion

350
00:15:35,019 --> 00:15:40,329
prevention systems<font color="#E5E5E5"> basically any system</font>

351
00:15:37,750 --> 00:15:42,160
<font color="#CCCCCC">that uses</font><font color="#E5E5E5"> only a</font><font color="#CCCCCC"> blacklisting approach</font>

352
00:15:40,329 --> 00:15:44,859
to<font color="#E5E5E5"> actually prevent us from exploiting</font>

353
00:15:42,160 --> 00:15:48,550
<font color="#E5E5E5">sequel injection we can always actually</font>

354
00:15:44,860 --> 00:15:51,639
do that<font color="#CCCCCC"> so before diving into</font><font color="#E5E5E5"> the demo</font>

355
00:15:48,550 --> 00:15:55,870
<font color="#E5E5E5">hopefully hopefully the demo will work</font>

356
00:15:51,639 --> 00:15:58,410
<font color="#E5E5E5">just</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> little bit more introduction</font><font color="#CCCCCC"> I</font>

357
00:15:55,870 --> 00:16:01,689
<font color="#E5E5E5">already mentioned the difference between</font>

358
00:15:58,410 --> 00:16:03,730
<font color="#E5E5E5">inline or visible and blind signal</font>

359
00:16:01,689 --> 00:16:06,160
injection vulnerabilities<font color="#E5E5E5"> so it's</font><font color="#CCCCCC"> inline</font>

360
00:16:03,730 --> 00:16:09,880
signal injection vulnerabilities<font color="#E5E5E5"> when I</font>

361
00:16:06,160 --> 00:16:12,730
do this I'll actually get some kind of

362
00:16:09,880 --> 00:16:15,089
an error<font color="#E5E5E5"> I get the results of that query</font>

363
00:16:12,730 --> 00:16:17,470
with blind signal injection

364
00:16:15,089 --> 00:16:20,319
vulnerabilities<font color="#CCCCCC"> I don't see the result</font>

365
00:16:17,470 --> 00:16:22,569
directly<font color="#E5E5E5"> so I know I messed up the</font>

366
00:16:20,319 --> 00:16:26,410
sequel query but<font color="#E5E5E5"> the application prints</font>

367
00:16:22,569 --> 00:16:29,979
<font color="#E5E5E5">back</font><font color="#CCCCCC"> and error has happened</font><font color="#E5E5E5"> so I need to</font>

368
00:16:26,410 --> 00:16:33,339
find a clever<font color="#E5E5E5"> way to</font><font color="#CCCCCC"> actually deduce</font><font color="#E5E5E5"> on</font>

369
00:16:29,980 --> 00:16:35,860
what's happening<font color="#E5E5E5"> in the</font><font color="#CCCCCC"> background</font><font color="#E5E5E5"> so</font>

370
00:16:33,339 --> 00:16:39,160
maybe I<font color="#E5E5E5"> can somehow modify the sequel</font>

371
00:16:35,860 --> 00:16:43,600
sequel query<font color="#E5E5E5"> to figure out if</font><font color="#CCCCCC"> my query</font>

372
00:16:39,160 --> 00:16:48,329
was executed correctly or<font color="#CCCCCC"> not with this</font>

373
00:16:43,600 --> 00:16:51,309
I will<font color="#E5E5E5"> get two cases true and</font><font color="#CCCCCC"> false</font>

374
00:16:48,329 --> 00:16:54,160
<font color="#E5E5E5">microwave executed correctly my query</font>

375
00:16:51,309 --> 00:16:56,500
failed<font color="#E5E5E5"> so by having</font><font color="#CCCCCC"> throw in false cases</font>

376
00:16:54,160 --> 00:16:59,920
<font color="#CCCCCC">I will be able</font><font color="#E5E5E5"> to deduce on what</font>

377
00:16:56,500 --> 00:17:02,800
actually<font color="#E5E5E5"> happened in the</font><font color="#CCCCCC"> background so</font>

378
00:16:59,920 --> 00:17:05,199
let's<font color="#E5E5E5"> see typically how we can exploit</font>

379
00:17:02,800 --> 00:17:07,299
this let's see the outcome of the

380
00:17:05,199 --> 00:17:09,579
following<font color="#E5E5E5"> requests so this is something</font>

381
00:17:07,299 --> 00:17:11,709
I just<font color="#CCCCCC"> do in in a browser to be honest</font><font color="#E5E5E5"> I</font>

382
00:17:09,579 --> 00:17:14,408
can<font color="#CCCCCC"> actually even exploit this sometimes</font>

383
00:17:11,709 --> 00:17:16,079
from a<font color="#E5E5E5"> browser it's not the most</font>

384
00:17:14,409 --> 00:17:17,699
convenient<font color="#E5E5E5"> way to do it but</font>

385
00:17:16,079 --> 00:17:19,438
I could do it<font color="#CCCCCC"> so</font><font color="#E5E5E5"> let's</font><font color="#CCCCCC"> see a</font><font color="#E5E5E5"> couple of</font>

386
00:17:17,699 --> 00:17:21,750
<font color="#E5E5E5">examples this is something I normally do</font>

387
00:17:19,439 --> 00:17:24,659
<font color="#E5E5E5">when I test for signal injection so the</font>

388
00:17:21,750 --> 00:17:28,860
first URL and our vulnerable parameter

389
00:17:24,659 --> 00:17:31,169
is release ID<font color="#E5E5E5"> so when I normally surf to</font>

390
00:17:28,860 --> 00:17:33,928
the web application<font color="#CCCCCC"> it has the value of</font>

391
00:17:31,169 --> 00:17:37,260
<font color="#CCCCCC">1 and</font><font color="#E5E5E5"> this works</font><font color="#CCCCCC"> I get a webpage back</font>

392
00:17:33,929 --> 00:17:39,090
<font color="#E5E5E5">and let's say this</font><font color="#CCCCCC"> is some kind of</font><font color="#E5E5E5"> media</font>

393
00:17:37,260 --> 00:17:41,158
website or whatever<font color="#E5E5E5"> so I get one page</font>

394
00:17:39,090 --> 00:17:44,070
back<font color="#CCCCCC"> I know exactly which one it says</font>

395
00:17:41,159 --> 00:17:47,880
<font color="#CCCCCC">balcan 2018</font><font color="#E5E5E5"> starts today</font>

396
00:17:44,070 --> 00:17:49,860
<font color="#CCCCCC">ok great then</font><font color="#E5E5E5"> I modified the release ID</font>

397
00:17:47,880 --> 00:17:53,490
parameter<font color="#E5E5E5"> and I put something like</font>

398
00:17:49,860 --> 00:17:58,260
character a and<font color="#CCCCCC"> I get</font><font color="#E5E5E5"> back a blank</font>

399
00:17:53,490 --> 00:18:00,330
screen<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> this could potentially be some</font>

400
00:17:58,260 --> 00:18:03,090
kind of an error<font color="#E5E5E5"> depending on the web</font>

401
00:18:00,330 --> 00:18:06,059
application<font color="#E5E5E5"> maybe the sequel query</font>

402
00:18:03,090 --> 00:18:08,309
itself had an error or simply there are

403
00:18:06,059 --> 00:18:10,769
no results from the simple query<font color="#E5E5E5"> because</font>

404
00:18:08,309 --> 00:18:12,928
there is no release ID article with

405
00:18:10,769 --> 00:18:17,220
value of a right it has<font color="#E5E5E5"> to be an</font>

406
00:18:12,929 --> 00:18:19,620
<font color="#CCCCCC">American</font><font color="#E5E5E5"> Eric well so it's - I try</font>

407
00:18:17,220 --> 00:18:22,320
<font color="#E5E5E5">number two it works</font><font color="#CCCCCC"> I get a different</font>

408
00:18:19,620 --> 00:18:25,799
<font color="#E5E5E5">web page so the first web page says</font>

409
00:18:22,320 --> 00:18:28,260
<font color="#CCCCCC">welcome 2018 starts today and the web</font>

410
00:18:25,799 --> 00:18:30,539
page<font color="#E5E5E5"> with release ID equals</font><font color="#CCCCCC"> to says</font>

411
00:18:28,260 --> 00:18:33,210
something<font color="#E5E5E5"> else about again</font><font color="#CCCCCC"> Vulcan being</font>

412
00:18:30,539 --> 00:18:36,629
in<font color="#E5E5E5"> the result I don't know notice what I</font>

413
00:18:33,210 --> 00:18:39,539
have here<font color="#E5E5E5"> I have two cases when the</font>

414
00:18:36,630 --> 00:18:41,639
value is<font color="#E5E5E5"> one</font><font color="#CCCCCC"> I get one page back when</font>

415
00:18:39,539 --> 00:18:45,299
the value is<font color="#E5E5E5"> 2</font><font color="#CCCCCC"> I get a different web</font>

416
00:18:41,639 --> 00:18:48,799
page back<font color="#E5E5E5"> when the value is a I get</font>

417
00:18:45,299 --> 00:18:53,970
blank screen so now<font color="#CCCCCC"> what I try to do is</font>

418
00:18:48,799 --> 00:18:58,279
the fourth case here<font color="#CCCCCC"> 2-1</font><font color="#E5E5E5"> and I get back</font>

419
00:18:53,970 --> 00:19:01,460
the first web page which is the<font color="#CCCCCC"> value 1</font>

420
00:18:58,279 --> 00:19:04,590
<font color="#E5E5E5">this means that something actually</font>

421
00:19:01,460 --> 00:19:09,360
<font color="#E5E5E5">performed this operation for</font><font color="#CCCCCC"> me 2 minus</font>

422
00:19:04,590 --> 00:19:09,870
<font color="#E5E5E5">1 equals 1 would a developer</font><font color="#CCCCCC"> do this not</font>

423
00:19:09,360 --> 00:19:11,908
really

424
00:19:09,870 --> 00:19:12,870
<font color="#E5E5E5">I've never seen them do this because it</font>

425
00:19:11,909 --> 00:19:14,460
makes<font color="#E5E5E5"> no</font><font color="#CCCCCC"> sense</font>

426
00:19:12,870 --> 00:19:16,529
he simply takes the<font color="#E5E5E5"> value of this</font>

427
00:19:14,460 --> 00:19:18,980
parameter and then passes it somewhere

428
00:19:16,529 --> 00:19:21,750
else<font color="#CCCCCC"> so what else could have done</font><font color="#E5E5E5"> this</font>

429
00:19:18,980 --> 00:19:24,570
operation performed it

430
00:19:21,750 --> 00:19:26,490
the<font color="#E5E5E5"> signal database so when I</font><font color="#CCCCCC"> passed</font>

431
00:19:24,570 --> 00:19:29,399
<font color="#E5E5E5">this to the sequel database</font><font color="#CCCCCC"> and when I</font>

432
00:19:26,490 --> 00:19:33,090
say select star from articles<font color="#CCCCCC"> their</font>

433
00:19:29,399 --> 00:19:35,879
release ID equals<font color="#E5E5E5"> to minus</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> the</font>

434
00:19:33,090 --> 00:19:37,350
sequel database will say oh wait<font color="#E5E5E5"> you</font>

435
00:19:35,879 --> 00:19:38,969
want me to actually perform<font color="#E5E5E5"> this</font>

436
00:19:37,350 --> 00:19:41,908
operation for<font color="#E5E5E5"> you so I'm going to do it</font>

437
00:19:38,970 --> 00:19:44,129
<font color="#CCCCCC">two minus</font><font color="#E5E5E5"> one equals one</font><font color="#CCCCCC"> and I</font><font color="#E5E5E5"> will</font>

438
00:19:41,909 --> 00:19:47,159
retrieve<font color="#E5E5E5"> back the article</font><font color="#CCCCCC"> one and show</font>

439
00:19:44,129 --> 00:19:50,279
<font color="#E5E5E5">that</font><font color="#CCCCCC"> to you so to test it I put 10 minus</font>

440
00:19:47,159 --> 00:19:52,590
9<font color="#CCCCCC"> again</font><font color="#E5E5E5"> I get the first</font><font color="#CCCCCC"> webpage back</font>

441
00:19:50,279 --> 00:19:54,419
which means that something is performing

442
00:19:52,590 --> 00:19:56,730
calculations for me<font color="#E5E5E5"> I can put something</font>

443
00:19:54,419 --> 00:20:01,230
<font color="#CCCCCC">more complex here and this is</font><font color="#E5E5E5"> actually</font>

444
00:19:56,730 --> 00:20:03,929
what I will base my exploitation on so

445
00:20:01,230 --> 00:20:07,019
now the<font color="#E5E5E5"> title if I can somehow influence</font>

446
00:20:03,929 --> 00:20:11,480
what the database<font color="#E5E5E5"> engine is</font><font color="#CCCCCC"> actually</font>

447
00:20:07,019 --> 00:20:14,940
doing<font color="#CCCCCC"> I can try to inject my own sequel</font>

448
00:20:11,480 --> 00:20:17,639
into this parameter remember from<font color="#CCCCCC"> couple</font>

449
00:20:14,940 --> 00:20:21,269
of slides ago<font color="#E5E5E5"> sub queries when I had</font>

450
00:20:17,639 --> 00:20:23,879
select 1 2 3 in<font color="#CCCCCC"> parentheses</font><font color="#E5E5E5"> what if I</font>

451
00:20:21,269 --> 00:20:27,629
actually try to<font color="#E5E5E5"> inject that I could</font>

452
00:20:23,879 --> 00:20:29,370
maybe arbitrarily<font color="#E5E5E5"> extend the sequel to</font>

453
00:20:27,629 --> 00:20:34,529
do something that I wanted<font color="#CCCCCC"> to do and</font>

454
00:20:29,370 --> 00:20:37,979
then that<font color="#CCCCCC"> sub query returns back</font><font color="#E5E5E5"> either</font>

455
00:20:34,529 --> 00:20:40,649
1 or 2 depending on what the sub query

456
00:20:37,980 --> 00:20:42,750
returned back to<font color="#E5E5E5"> the outer query I will</font>

457
00:20:40,649 --> 00:20:45,600
get either the first<font color="#E5E5E5"> web page or the</font>

458
00:20:42,750 --> 00:20:48,809
second web page there<font color="#E5E5E5"> maybe see where</font>

459
00:20:45,600 --> 00:20:52,559
I'm going I can try to extract one bit

460
00:20:48,809 --> 00:20:57,149
of information at a time is<font color="#E5E5E5"> the first</font>

461
00:20:52,559 --> 00:21:00,418
character in<font color="#CCCCCC"> the first</font><font color="#E5E5E5"> table a yes or no</font>

462
00:20:57,149 --> 00:21:03,479
<font color="#E5E5E5">if it's a then the result of</font><font color="#CCCCCC"> the</font>

463
00:21:00,419 --> 00:21:05,539
<font color="#E5E5E5">software can</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> one if it's not a the</font>

464
00:21:03,480 --> 00:21:07,919
result<font color="#E5E5E5"> bonus of the software can</font><font color="#CCCCCC"> be two</font>

465
00:21:05,539 --> 00:21:10,200
depending on the<font color="#E5E5E5"> web page I get back I</font>

466
00:21:07,919 --> 00:21:12,090
can<font color="#E5E5E5"> decide what was the result of the</font>

467
00:21:10,200 --> 00:21:14,190
sub query so these are the true and

468
00:21:12,090 --> 00:21:17,610
false<font color="#E5E5E5"> cases and this is</font><font color="#CCCCCC"> something that</font>

469
00:21:14,190 --> 00:21:21,000
<font color="#E5E5E5">we will exploit so let's see what we</font><font color="#CCCCCC"> can</font>

470
00:21:17,610 --> 00:21:22,709
do here<font color="#E5E5E5"> we have three cases two cases</font>

471
00:21:21,000 --> 00:21:25,200
sorry<font color="#CCCCCC"> the first one select star from</font>

472
00:21:22,710 --> 00:21:27,750
transactions<font color="#E5E5E5"> their ID equals something</font>

473
00:21:25,200 --> 00:21:30,149
<font color="#CCCCCC">remember</font><font color="#E5E5E5"> we can inject into the ID</font>

474
00:21:27,750 --> 00:21:32,549
parameter<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is the same example as I</font>

475
00:21:30,149 --> 00:21:34,820
had previously<font color="#E5E5E5"> so so let's start from</font>

476
00:21:32,549 --> 00:21:40,309
<font color="#E5E5E5">transactions</font><font color="#CCCCCC"> their</font><font color="#E5E5E5"> ID equals</font>

477
00:21:34,820 --> 00:21:43,129
<font color="#CCCCCC">thing and one equals one so this</font><font color="#E5E5E5"> is</font>

478
00:21:40,309 --> 00:21:45,980
<font color="#E5E5E5">something and true</font><font color="#CCCCCC"> I get one</font><font color="#E5E5E5"> webpage</font>

479
00:21:43,130 --> 00:21:47,630
back<font color="#E5E5E5"> because it was through select star</font>

480
00:21:45,980 --> 00:21:52,429
from the sections where<font color="#E5E5E5"> ID equals</font>

481
00:21:47,630 --> 00:21:54,830
<font color="#E5E5E5">nothing and</font><font color="#CCCCCC"> 1 equals 2</font><font color="#E5E5E5"> this is false</font><font color="#CCCCCC"> so</font>

482
00:21:52,429 --> 00:21:57,559
I get a different<font color="#CCCCCC"> web</font><font color="#E5E5E5"> page back so</font><font color="#CCCCCC"> I</font>

483
00:21:54,830 --> 00:22:01,399
decided<font color="#E5E5E5"> what what web page I got back I</font>

484
00:21:57,559 --> 00:22:03,379
know if it was true<font color="#CCCCCC"> or false</font><font color="#E5E5E5"> so let's</font>

485
00:22:01,399 --> 00:22:07,189
try together<font color="#E5E5E5"> to extend the right hand</font>

486
00:22:03,380 --> 00:22:10,480
side<font color="#E5E5E5"> check what I'm injecting here I'm</font>

487
00:22:07,190 --> 00:22:16,879
injecting a sub-query<font color="#E5E5E5"> which says select</font>

488
00:22:10,480 --> 00:22:20,419
<font color="#E5E5E5">lower substring user 1 1 anyone knows</font>

489
00:22:16,879 --> 00:22:23,418
what<font color="#E5E5E5"> this will do it will</font><font color="#CCCCCC"> take the</font><font color="#E5E5E5"> user</font>

490
00:22:20,419 --> 00:22:25,879
<font color="#E5E5E5">name that</font><font color="#CCCCCC"> the web application is using</font>

491
00:22:23,419 --> 00:22:30,320
<font color="#E5E5E5">to connect to the database</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> for</font>

492
00:22:25,879 --> 00:22:33,230
the function user does with substring<font color="#E5E5E5"> we</font>

493
00:22:30,320 --> 00:22:36,980
will take<font color="#CCCCCC"> 1</font><font color="#E5E5E5"> character first character</font>

494
00:22:33,230 --> 00:22:40,220
<font color="#CCCCCC">okay we will</font><font color="#E5E5E5"> convert it into lowercase</font>

495
00:22:36,980 --> 00:22:45,320
and<font color="#CCCCCC"> then we will</font><font color="#E5E5E5"> check if this character</font>

496
00:22:40,220 --> 00:22:49,159
<font color="#E5E5E5">is a if it is then all of this will</font>

497
00:22:45,320 --> 00:22:50,360
evaluate to<font color="#CCCCCC"> true</font><font color="#E5E5E5"> if it's not then it</font>

498
00:22:49,159 --> 00:22:53,690
<font color="#CCCCCC">will evaluate through false</font>

499
00:22:50,360 --> 00:22:56,678
see what I<font color="#E5E5E5"> have the first two cases so</font>

500
00:22:53,690 --> 00:23:00,409
if I guessed<font color="#E5E5E5"> the</font><font color="#CCCCCC"> first</font><font color="#E5E5E5"> character to</font><font color="#CCCCCC"> be a</font>

501
00:22:56,679 --> 00:23:02,600
then I get one<font color="#CCCCCC"> web page back if it's</font><font color="#E5E5E5"> not</font>

502
00:23:00,409 --> 00:23:05,840
a I get a different<font color="#E5E5E5"> web page back and</font>

503
00:23:02,600 --> 00:23:08,299
this way<font color="#E5E5E5"> I</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> guess</font><font color="#CCCCCC"> one character at a</font>

504
00:23:05,840 --> 00:23:11,689
time you'll be fast

505
00:23:08,299 --> 00:23:13,820
not really<font color="#CCCCCC"> right one character at a time</font>

506
00:23:11,690 --> 00:23:16,429
I can optimize this I can do a binary

507
00:23:13,820 --> 00:23:19,759
search here so I can say if the first

508
00:23:16,429 --> 00:23:21,259
character is greater than M<font color="#CCCCCC"> so if it is</font>

509
00:23:19,759 --> 00:23:23,120
if it's not<font color="#E5E5E5"> then I know it's lies the</font>

510
00:23:21,259 --> 00:23:24,919
name so I<font color="#E5E5E5"> can do a binary search</font><font color="#CCCCCC"> it'll</font>

511
00:23:23,120 --> 00:23:27,289
<font color="#CCCCCC">be a bit faster and there are ways to</font>

512
00:23:24,919 --> 00:23:30,529
<font color="#CCCCCC">optimize</font><font color="#E5E5E5"> this it's still relatively slow</font>

513
00:23:27,289 --> 00:23:35,450
<font color="#E5E5E5">but you can see how I can get one bit</font><font color="#CCCCCC"> of</font>

514
00:23:30,529 --> 00:23:38,450
data out<font color="#E5E5E5"> from</font><font color="#CCCCCC"> the database at a time so</font>

515
00:23:35,450 --> 00:23:40,940
enough<font color="#CCCCCC"> of slides</font><font color="#E5E5E5"> let's go to some real</font>

516
00:23:38,450 --> 00:23:43,070
<font color="#E5E5E5">world demos and again yeah demo gods</font>

517
00:23:40,940 --> 00:23:45,379
please make this work<font color="#E5E5E5"> but</font><font color="#CCCCCC"> you'll see</font><font color="#E5E5E5"> so</font>

518
00:23:43,070 --> 00:23:45,960
I'll have a<font color="#E5E5E5"> couple of examples</font><font color="#CCCCCC"> here I</font>

519
00:23:45,379 --> 00:23:48,240
will be

520
00:23:45,960 --> 00:23:49,919
using one of<font color="#E5E5E5"> the well-known</font><font color="#CCCCCC"> web</font>

521
00:23:48,240 --> 00:23:53,159
<font color="#E5E5E5">application penetration testing tools</font>

522
00:23:49,919 --> 00:23:56,700
called called<font color="#E5E5E5"> burp suite if you</font><font color="#CCCCCC"> do any</font>

523
00:23:53,159 --> 00:23:59,130
web application testing<font color="#E5E5E5"> this tool is the</font>

524
00:23:56,700 --> 00:24:01,320
tool<font color="#E5E5E5"> to have</font><font color="#CCCCCC"> I love it I use it all the</font>

525
00:23:59,130 --> 00:24:03,870
time<font color="#E5E5E5"> but you will see how it will fail</font>

526
00:24:01,320 --> 00:24:05,939
miserably<font color="#E5E5E5"> here so I'm not bashing the</font>

527
00:24:03,870 --> 00:24:08,070
<font color="#E5E5E5">authors I think they did a fantastic job</font>

528
00:24:05,940 --> 00:24:09,720
<font color="#CCCCCC">I will just show you</font><font color="#E5E5E5"> how you</font><font color="#CCCCCC"> can not</font>

529
00:24:08,070 --> 00:24:11,939
rely on a tool<font color="#E5E5E5"> because the tool will</font>

530
00:24:09,720 --> 00:24:14,730
actually miss the<font color="#E5E5E5"> vulnerabilities so</font>

531
00:24:11,940 --> 00:24:17,010
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> in the cases here the first sequel</font>

532
00:24:14,730 --> 00:24:19,620
injection<font color="#E5E5E5"> this is the simplest signal</font>

533
00:24:17,010 --> 00:24:25,020
ejection in the world<font color="#CCCCCC"> okay it cannot</font><font color="#E5E5E5"> get</font>

534
00:24:19,620 --> 00:24:27,330
simpler than this then case 1.1 again

535
00:24:25,020 --> 00:24:27,929
very very<font color="#E5E5E5"> simple</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> you see the</font>

536
00:24:27,330 --> 00:24:32,820
<font color="#E5E5E5">difference</font>

537
00:24:27,929 --> 00:24:34,919
check<font color="#E5E5E5"> the one here ID equals children</font>

538
00:24:32,820 --> 00:24:38,399
here ID equals<font color="#E5E5E5"> there are no single</font>

539
00:24:34,919 --> 00:24:40,770
quotes<font color="#CCCCCC"> okay I don't need them because</font><font color="#E5E5E5"> ID</font>

540
00:24:38,399 --> 00:24:42,570
is<font color="#E5E5E5"> numerical so I don't need single</font>

541
00:24:40,770 --> 00:24:45,149
quotes<font color="#CCCCCC"> I need them when I have strings</font>

542
00:24:42,570 --> 00:24:47,908
<font color="#E5E5E5">so for numerical parameters I don't need</font>

543
00:24:45,149 --> 00:24:51,270
them case<font color="#CCCCCC"> number two the developer just</font>

544
00:24:47,909 --> 00:24:52,590
decided to<font color="#E5E5E5"> add certain value</font><font color="#CCCCCC"> no skips or</font>

545
00:24:51,270 --> 00:24:54,570
case<font color="#CCCCCC"> number two because I won't</font><font color="#E5E5E5"> have</font>

546
00:24:52,590 --> 00:24:56,820
enough time to do everything<font color="#CCCCCC"> but the</font>

547
00:24:54,570 --> 00:24:58,379
application that<font color="#E5E5E5"> I'm hacking will be on</font>

548
00:24:56,820 --> 00:24:59,820
my github over the weekend so if you

549
00:24:58,380 --> 00:25:03,360
want to<font color="#E5E5E5"> play with it feel</font><font color="#CCCCCC"> free to</font>

550
00:24:59,820 --> 00:25:04,820
download it<font color="#E5E5E5"> okay so what</font><font color="#CCCCCC"> are they</font><font color="#E5E5E5"> what</font>

551
00:25:03,360 --> 00:25:08,729
do I have here

552
00:25:04,820 --> 00:25:10,770
this<font color="#E5E5E5"> is my server it's not interesting</font>

553
00:25:08,730 --> 00:25:13,049
to<font color="#CCCCCC"> us because all it's done all doing is</font>

554
00:25:10,770 --> 00:25:16,740
running them at the web application<font color="#E5E5E5"> and</font>

555
00:25:13,049 --> 00:25:20,629
the my sequel database and this<font color="#E5E5E5"> is my</font>

556
00:25:16,740 --> 00:25:23,159
checking Linux<font color="#E5E5E5"> that I'll use to for demo</font>

557
00:25:20,630 --> 00:25:25,049
<font color="#E5E5E5">black screen green yeah has to be like</font>

558
00:25:23,159 --> 00:25:27,990
that<font color="#CCCCCC"> okay if you don't</font><font color="#E5E5E5"> check like this</font>

559
00:25:25,049 --> 00:25:31,289
<font color="#E5E5E5">then I know go and watch the matrix or</font>

560
00:25:27,990 --> 00:25:33,149
something<font color="#CCCCCC"> because it's like so</font><font color="#E5E5E5"> what do</font>

561
00:25:31,289 --> 00:25:39,539
<font color="#CCCCCC">we</font><font color="#E5E5E5"> have here</font>

562
00:25:33,149 --> 00:25:42,770
I will go to this web page<font color="#CCCCCC"> I will</font>

563
00:25:39,539 --> 00:25:42,770
explain<font color="#CCCCCC"> later what I'm doing here</font>

564
00:25:45,029 --> 00:25:51,139
the second let me<font color="#E5E5E5"> see the IP address</font>

565
00:25:47,039 --> 00:25:51,139
here<font color="#E5E5E5"> because it probably changed</font>

566
00:25:54,679 --> 00:25:58,509
<font color="#E5E5E5">one three eight okay</font>

567
00:25:59,890 --> 00:26:02,820
<font color="#E5E5E5">black demos</font>

568
00:26:04,890 --> 00:26:12,840
of<font color="#E5E5E5"> course</font><font color="#CCCCCC"> alright</font><font color="#E5E5E5"> so here we have five</font>

569
00:26:10,380 --> 00:26:15,210
very very simple web pages<font color="#E5E5E5"> and they all</font>

570
00:26:12,840 --> 00:26:16,949
have sequel injection vulnerabilities so

571
00:26:15,210 --> 00:26:19,770
we will now exploit the first<font color="#E5E5E5"> two sequel</font>

572
00:26:16,950 --> 00:26:22,200
injection 101<font color="#CCCCCC"> those are the</font><font color="#E5E5E5"> ones from</font>

573
00:26:19,770 --> 00:26:23,879
<font color="#CCCCCC">the slide</font><font color="#E5E5E5"> I had previously the last two</font>

574
00:26:22,200 --> 00:26:25,890
we will<font color="#E5E5E5"> exploit as well but they are</font>

575
00:26:23,880 --> 00:26:28,740
very<font color="#E5E5E5"> very complicated</font><font color="#CCCCCC"> well</font><font color="#E5E5E5"> not very</font>

576
00:26:25,890 --> 00:26:30,480
<font color="#E5E5E5">complicated</font><font color="#CCCCCC"> but for the</font><font color="#E5E5E5"> last two</font>

577
00:26:28,740 --> 00:26:33,090
examples<font color="#CCCCCC"> as you can see there are some</font>

578
00:26:30,480 --> 00:26:35,549
<font color="#E5E5E5">filtered keyboards why do we have filter</font>

579
00:26:33,090 --> 00:26:37,320
keywords well quite often developers

580
00:26:35,549 --> 00:26:39,929
want to<font color="#E5E5E5"> prevent us from exploiting</font>

581
00:26:37,320 --> 00:26:42,000
<font color="#E5E5E5">sequel injection or they have a web</font>

582
00:26:39,929 --> 00:26:46,260
application<font color="#E5E5E5"> firewall which might be</font>

583
00:26:42,000 --> 00:26:49,470
blocking when it sees sleep in a query

584
00:26:46,260 --> 00:26:51,090
or benchmark<font color="#E5E5E5"> or Union these are the</font>

585
00:26:49,470 --> 00:26:54,030
<font color="#E5E5E5">keywords</font><font color="#CCCCCC"> that we normally use when</font>

586
00:26:51,090 --> 00:26:56,100
exploiting signal injection<font color="#E5E5E5"> so sometimes</font>

587
00:26:54,030 --> 00:26:59,220
web application firewalls<font color="#E5E5E5"> will drop that</font>

588
00:26:56,100 --> 00:27:00,990
sometimes developers will drop that but

589
00:26:59,220 --> 00:27:04,679
<font color="#CCCCCC">we'll see there</font><font color="#E5E5E5"> is a way to go</font><font color="#CCCCCC"> around</font><font color="#E5E5E5"> it</font>

590
00:27:00,990 --> 00:27:07,230
so it's<font color="#E5E5E5"> for first exploit first</font><font color="#CCCCCC"> two so</font>

591
00:27:04,679 --> 00:27:11,370
what I'm gonna do here<font color="#CCCCCC"> is I have</font><font color="#E5E5E5"> my</font>

592
00:27:07,230 --> 00:27:13,679
browser<font color="#E5E5E5"> and browser is actually sending</font>

593
00:27:11,370 --> 00:27:15,928
<font color="#E5E5E5">traffic through burp burp is the tool I</font>

594
00:27:13,679 --> 00:27:18,540
mentioned<font color="#CCCCCC"> previously this</font><font color="#E5E5E5"> is a proxy</font>

595
00:27:15,929 --> 00:27:20,220
that<font color="#E5E5E5"> you can run</font><font color="#CCCCCC"> on your own machine</font><font color="#E5E5E5"> so</font>

596
00:27:18,540 --> 00:27:22,049
you<font color="#E5E5E5"> can have your your own browser</font>

597
00:27:20,220 --> 00:27:24,440
<font color="#E5E5E5">actually sending traffic through the</font>

598
00:27:22,049 --> 00:27:27,418
proxy so I will see all<font color="#E5E5E5"> the requests and</font>

599
00:27:24,440 --> 00:27:30,390
responses that<font color="#CCCCCC"> my</font><font color="#E5E5E5"> browser is sending and</font>

600
00:27:27,419 --> 00:27:34,190
receiving back actually<font color="#CCCCCC"> in this tool</font><font color="#E5E5E5"> so</font>

601
00:27:30,390 --> 00:27:37,559
when I click here on<font color="#E5E5E5"> the first link</font><font color="#CCCCCC"> I</font>

602
00:27:34,190 --> 00:27:41,910
actually get some results<font color="#E5E5E5"> and in the URL</font>

603
00:27:37,559 --> 00:27:43,290
<font color="#E5E5E5">on the top is one big number the ID you</font>

604
00:27:41,910 --> 00:27:45,600
can't see it<font color="#E5E5E5"> now</font><font color="#CCCCCC"> because it's white and</font>

605
00:27:43,290 --> 00:27:50,700
white or<font color="#CCCCCC"> gray</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> white</font><font color="#E5E5E5"> but over here</font>

606
00:27:45,600 --> 00:27:53,340
when I go to burp<font color="#E5E5E5"> to history this was</font>

607
00:27:50,700 --> 00:27:56,490
the<font color="#E5E5E5"> request that my browser</font><font color="#CCCCCC"> actually</font>

608
00:27:53,340 --> 00:28:00,540
sent see the request<font color="#E5E5E5"> transactions</font><font color="#CCCCCC"> zero</font>

609
00:27:56,490 --> 00:28:02,549
dot PHP<font color="#E5E5E5"> and some big ID parameter so I</font>

610
00:28:00,540 --> 00:28:04,918
will use<font color="#CCCCCC"> burp burp is actually a web</font>

611
00:28:02,549 --> 00:28:07,290
<font color="#CCCCCC">application security scanner</font><font color="#E5E5E5"> it can find</font>

612
00:28:04,919 --> 00:28:09,690
vulnerabilities<font color="#CCCCCC"> I will use</font><font color="#E5E5E5"> burp to check</font>

613
00:28:07,290 --> 00:28:14,129
this<font color="#E5E5E5"> web page so what I'm going</font><font color="#CCCCCC"> to do is</font>

614
00:28:09,690 --> 00:28:19,080
right click here do an active scan

615
00:28:14,130 --> 00:28:21,870
yes and now here burp is actually

616
00:28:19,080 --> 00:28:26,520
<font color="#E5E5E5">scanning my web application</font><font color="#CCCCCC"> I will do</font>

617
00:28:21,870 --> 00:28:29,129
the same<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> in shell with a tool</font>

618
00:28:26,520 --> 00:28:32,039
called<font color="#CCCCCC"> cycle map</font><font color="#E5E5E5"> anyone use</font><font color="#CCCCCC"> sickle map</font>

619
00:28:29,130 --> 00:28:33,360
ever<font color="#E5E5E5"> okay cool so know about sickle map</font>

620
00:28:32,039 --> 00:28:35,340
<font color="#E5E5E5">you know that the guy from Zagreb</font>

621
00:28:33,360 --> 00:28:39,030
<font color="#E5E5E5">actually you know is the main developer</font>

622
00:28:35,340 --> 00:28:41,459
for this<font color="#E5E5E5"> I think he was maybe</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> Balkan</font>

623
00:28:39,030 --> 00:28:43,500
<font color="#E5E5E5">last year or maybe two</font><font color="#CCCCCC"> years ago</font><font color="#E5E5E5"> so this</font>

624
00:28:41,460 --> 00:28:46,049
<font color="#CCCCCC">is the latest</font><font color="#E5E5E5"> version of sickle map I</font>

625
00:28:43,500 --> 00:28:48,990
actually<font color="#E5E5E5"> downloaded this today</font><font color="#CCCCCC"> i cloned</font>

626
00:28:46,049 --> 00:28:52,879
<font color="#CCCCCC">clone it from gates</font><font color="#E5E5E5"> today so let's see</font>

627
00:28:48,990 --> 00:28:56,100
how sequel map will do oops

628
00:28:52,880 --> 00:29:00,289
so I need to give<font color="#E5E5E5"> you the URL let's go</font>

629
00:28:56,100 --> 00:29:00,289
back here copy URL

630
00:29:02,240 --> 00:29:07,370
so I know<font color="#E5E5E5"> that ID is the parameter which</font>

631
00:29:05,300 --> 00:29:09,620
<font color="#CCCCCC">has the vulnerability so to make it</font><font color="#E5E5E5"> easy</font>

632
00:29:07,370 --> 00:29:12,439
for sequel map I<font color="#CCCCCC"> will do I</font><font color="#E5E5E5"> will say - P</font>

633
00:29:09,620 --> 00:29:15,409
ID which tells sequel map<font color="#E5E5E5"> please try to</font>

634
00:29:12,440 --> 00:29:17,920
inject into this parameter so I press

635
00:29:15,410 --> 00:29:20,930
ENTER<font color="#E5E5E5"> it will start</font><font color="#CCCCCC"> doing something</font><font color="#E5E5E5"> and</font>

636
00:29:17,920 --> 00:29:22,730
it's very very<font color="#E5E5E5"> fast</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> already said oh</font>

637
00:29:20,930 --> 00:29:25,550
it looks<font color="#E5E5E5"> like</font><font color="#CCCCCC"> we have signal injection</font>

638
00:29:22,730 --> 00:29:28,010
in<font color="#E5E5E5"> the ID parameter</font><font color="#CCCCCC"> well da you know</font>

639
00:29:25,550 --> 00:29:30,950
<font color="#E5E5E5">this is really sequel injection 101 I</font>

640
00:29:28,010 --> 00:29:33,740
expected it to<font color="#CCCCCC"> work</font><font color="#E5E5E5"> this way so we can</font>

641
00:29:30,950 --> 00:29:35,960
actually let it<font color="#E5E5E5"> run it will now test</font>

642
00:29:33,740 --> 00:29:38,180
some time based exploitation so it's

643
00:29:35,960 --> 00:29:40,670
doing a<font color="#CCCCCC"> sleep on my server that's</font><font color="#E5E5E5"> why</font>

644
00:29:38,180 --> 00:29:42,860
this is taking so long<font color="#CCCCCC"> so let it run in</font>

645
00:29:40,670 --> 00:29:48,350
the<font color="#E5E5E5"> background</font><font color="#CCCCCC"> let's go</font><font color="#E5E5E5"> back to burp and</font>

646
00:29:42,860 --> 00:29:50,840
see if bird found something looks red

647
00:29:48,350 --> 00:29:54,050
<font color="#E5E5E5">yeah we</font><font color="#CCCCCC"> object</font><font color="#E5E5E5"> right when it's red it's</font>

648
00:29:50,840 --> 00:29:55,760
good<font color="#CCCCCC"> gene</font><font color="#E5E5E5"> not so good because we are</font>

649
00:29:54,050 --> 00:29:58,460
<font color="#E5E5E5">penetration testers we want on their</font>

650
00:29:55,760 --> 00:30:02,210
abilities so<font color="#CCCCCC"> it's let's see what is our</font>

651
00:29:58,460 --> 00:30:05,510
vulnerability here sequel injection<font color="#CCCCCC"> yay</font>

652
00:30:02,210 --> 00:30:07,550
so<font color="#E5E5E5"> burp definitely found the signal</font>

653
00:30:05,510 --> 00:30:10,010
injection vulnerability<font color="#CCCCCC"> Sekhmet</font><font color="#E5E5E5"> will</font>

654
00:30:07,550 --> 00:30:14,690
find it as well and<font color="#E5E5E5"> we</font><font color="#CCCCCC"> are all happy</font><font color="#E5E5E5"> and</font>

655
00:30:10,010 --> 00:30:19,129
good let's<font color="#E5E5E5"> go back to sequel map here we</font>

656
00:30:14,690 --> 00:30:22,130
go and now<font color="#CCCCCC"> if I want</font><font color="#E5E5E5"> to for example</font><font color="#CCCCCC"> list</font>

657
00:30:19,130 --> 00:30:26,510
the databases<font color="#E5E5E5"> this is - - DBS let me put</font>

658
00:30:22,130 --> 00:30:29,030
it<font color="#CCCCCC"> on</font><font color="#E5E5E5"> top for you - - DBS and</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> you</font>

659
00:30:26,510 --> 00:30:31,340
go<font color="#E5E5E5"> I have two databases</font><font color="#CCCCCC"> Acme sequel</font><font color="#E5E5E5"> and</font>

660
00:30:29,030 --> 00:30:33,379
information schema<font color="#E5E5E5"> in my my sequel</font>

661
00:30:31,340 --> 00:30:35,990
database so this all works good

662
00:30:33,380 --> 00:30:38,120
<font color="#E5E5E5">fantastic third</font><font color="#CCCCCC"> found</font><font color="#E5E5E5"> the same</font>

663
00:30:35,990 --> 00:30:41,030
<font color="#E5E5E5">vulnerability as well let's</font><font color="#CCCCCC"> try the</font>

664
00:30:38,120 --> 00:30:44,270
second example<font color="#E5E5E5"> so I'm going to go back</font>

665
00:30:41,030 --> 00:30:47,149
<font color="#CCCCCC">here and click on</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> where ID</font>

666
00:30:44,270 --> 00:30:50,780
equals the parameter we inject<font color="#E5E5E5"> but</font>

667
00:30:47,150 --> 00:30:53,840
without the clothes<font color="#E5E5E5"> so again I click on</font>

668
00:30:50,780 --> 00:30:58,490
it<font color="#E5E5E5"> the application works I'll go back to</font>

669
00:30:53,840 --> 00:31:01,040
burp find the request this<font color="#E5E5E5"> is my request</font>

670
00:30:58,490 --> 00:31:03,770
<font color="#CCCCCC">see the difference this is transactions</font>

671
00:31:01,040 --> 00:31:06,409
<font color="#E5E5E5">dot dot PHP and the one before</font><font color="#CCCCCC"> was for</font>

672
00:31:03,770 --> 00:31:07,940
section<font color="#CCCCCC"> 0 absolute the same code</font><font color="#E5E5E5"> the</font>

673
00:31:06,410 --> 00:31:10,340
<font color="#E5E5E5">only difference is</font><font color="#CCCCCC"> that in the sequel</font>

674
00:31:07,940 --> 00:31:13,370
injection<font color="#CCCCCC"> I don't have the single quotes</font>

675
00:31:10,340 --> 00:31:20,480
<font color="#E5E5E5">so again right</font><font color="#CCCCCC"> click</font>

676
00:31:13,370 --> 00:31:20,479
do an active scan<font color="#E5E5E5"> go back to scanner</font>

677
00:31:21,720 --> 00:31:26,670
it's actually a bit faster<font color="#E5E5E5"> than last</font>

678
00:31:23,550 --> 00:31:30,240
time<font color="#E5E5E5"> it's still doing something so let</font>

679
00:31:26,670 --> 00:31:33,630
me<font color="#CCCCCC"> let me let</font><font color="#E5E5E5"> it work and let's do the</font>

680
00:31:30,240 --> 00:31:35,310
<font color="#E5E5E5">same thing</font><font color="#CCCCCC"> with sequel map</font><font color="#E5E5E5"> so actually</font>

681
00:31:33,630 --> 00:31:37,790
now that<font color="#E5E5E5"> this is just translations dot</font>

682
00:31:35,310 --> 00:31:37,790
PHP

683
00:31:38,850 --> 00:31:45,389
yep fantastic<font color="#CCCCCC"> so</font><font color="#E5E5E5"> signal map again found</font>

684
00:31:42,509 --> 00:31:47,490
the vulnerability<font color="#E5E5E5"> same story tests for</font>

685
00:31:45,389 --> 00:31:53,399
<font color="#E5E5E5">all sorts of different injections let's</font>

686
00:31:47,490 --> 00:31:56,460
go back to burp how about burp says

687
00:31:53,399 --> 00:31:58,908
finished there<font color="#E5E5E5"> is no red color</font><font color="#CCCCCC"> I don't</font>

688
00:31:56,460 --> 00:31:58,909
<font color="#CCCCCC">like</font><font color="#E5E5E5"> it</font>

689
00:31:59,820 --> 00:32:05,340
no sequel injection so this is the tool

690
00:32:03,180 --> 00:32:07,680
<font color="#CCCCCC">that like virtually every</font><font color="#E5E5E5"> single web</font>

691
00:32:05,340 --> 00:32:10,439
application penetration tester uses<font color="#E5E5E5"> and</font>

692
00:32:07,680 --> 00:32:14,280
<font color="#E5E5E5">it's failed on finding like the most</font>

693
00:32:10,440 --> 00:32:16,230
simple<font color="#E5E5E5"> sequel injection there is so</font>

694
00:32:14,280 --> 00:32:19,560
lessons<font color="#CCCCCC"> learned from this</font><font color="#E5E5E5"> slide</font>

695
00:32:16,230 --> 00:32:21,450
don't rely on tools exclusively<font color="#E5E5E5"> sure we</font>

696
00:32:19,560 --> 00:32:23,429
have other<font color="#E5E5E5"> tools if possible always</font><font color="#CCCCCC"> use</font>

697
00:32:21,450 --> 00:32:25,440
more<font color="#E5E5E5"> of them as the</font><font color="#CCCCCC"> sole sequel map</font>

698
00:32:23,430 --> 00:32:28,950
<font color="#CCCCCC">actually found it</font><font color="#E5E5E5"> without any problems</font>

699
00:32:25,440 --> 00:32:31,500
but<font color="#CCCCCC"> derp the tool that</font><font color="#E5E5E5"> deal at</font><font color="#CCCCCC"> least</font><font color="#E5E5E5"> I</font>

700
00:32:28,950 --> 00:32:33,660
love and rely on<font color="#E5E5E5"> actually failed when I</font>

701
00:32:31,500 --> 00:32:35,820
saw this<font color="#E5E5E5"> first time I went</font><font color="#CCCCCC"> to guys in my</font>

702
00:32:33,660 --> 00:32:38,370
<font color="#CCCCCC">team and</font><font color="#E5E5E5"> said</font><font color="#CCCCCC"> okay for</font><font color="#E5E5E5"> every you know</font>

703
00:32:35,820 --> 00:32:40,379
<font color="#E5E5E5">test you're doing you can't rely on sit</font>

704
00:32:38,370 --> 00:32:42,870
on burp<font color="#E5E5E5"> anymore at least</font><font color="#CCCCCC"> for sequel</font>

705
00:32:40,380 --> 00:32:45,840
injection<font color="#E5E5E5"> for some other categories burp</font>

706
00:32:42,870 --> 00:32:52,229
is actually good<font color="#CCCCCC"> so let's go back to</font>

707
00:32:45,840 --> 00:32:56,790
signal map<font color="#E5E5E5"> this</font><font color="#CCCCCC"> all works VBS excellent</font>

708
00:32:52,230 --> 00:32:58,680
<font color="#CCCCCC">so this works now let's ramp up the game</font>

709
00:32:56,790 --> 00:33:01,800
a<font color="#E5E5E5"> little bit because these</font><font color="#CCCCCC"> are actually</font>

710
00:32:58,680 --> 00:33:05,190
<font color="#CCCCCC">very very</font><font color="#E5E5E5"> simple so</font><font color="#CCCCCC"> let's see</font><font color="#E5E5E5"> some</font><font color="#CCCCCC"> other</font>

711
00:33:01,800 --> 00:33:07,530
things<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we can do let's see some</font>

712
00:33:05,190 --> 00:33:10,020
more<font color="#E5E5E5"> complicated or</font><font color="#CCCCCC"> more complex signal</font>

713
00:33:07,530 --> 00:33:12,570
injection vulnerabilities now one of the

714
00:33:10,020 --> 00:33:14,820
things that we need<font color="#E5E5E5"> to do when testing</font>

715
00:33:12,570 --> 00:33:16,050
for such vulnerabilities is actually to

716
00:33:14,820 --> 00:33:20,220
fingerprint database

717
00:33:16,050 --> 00:33:24,180
so before<font color="#E5E5E5"> exploiting I want to know what</font>

718
00:33:20,220 --> 00:33:26,970
<font color="#E5E5E5">database directly use is it Oracle db2</font>

719
00:33:24,180 --> 00:33:29,670
is it Microsoft sequel<font color="#E5E5E5"> I don't my</font><font color="#CCCCCC"> sequel</font>

720
00:33:26,970 --> 00:33:31,080
something else<font color="#E5E5E5"> so depending on the web</font>

721
00:33:29,670 --> 00:33:34,650
application sometimes<font color="#E5E5E5"> you can actually</font>

722
00:33:31,080 --> 00:33:38,370
guess have you ever seen<font color="#CCCCCC"> microsoft</font>

723
00:33:34,650 --> 00:33:40,680
developer who uses asp.net<font color="#E5E5E5"> to use I</font>

724
00:33:38,370 --> 00:33:44,489
<font color="#CCCCCC">don't</font><font color="#E5E5E5"> know Postgres database in the</font>

725
00:33:40,680 --> 00:33:48,360
background<font color="#E5E5E5"> well it's it can happen yeah</font>

726
00:33:44,490 --> 00:33:50,510
you've seen<font color="#E5E5E5"> and by that man beer</font><font color="#CCCCCC"> I don't</font>

727
00:33:48,360 --> 00:33:53,129
do something<font color="#E5E5E5"> but you can rarely see that</font>

728
00:33:50,510 --> 00:33:55,530
typically<font color="#E5E5E5"> you know when it's dotnet</font>

729
00:33:53,130 --> 00:33:57,510
they'll have Microsoft sequel server

730
00:33:55,530 --> 00:34:00,030
<font color="#E5E5E5">sometimes Oracle if it's like a</font>

731
00:33:57,510 --> 00:34:04,890
corporate enterprise application if it's

732
00:34:00,030 --> 00:34:07,530
PHP anyone uses<font color="#CCCCCC"> PHP with IBM db2 now</font>

733
00:34:04,890 --> 00:34:09,270
<font color="#E5E5E5">because you do how much do you pay how</font>

734
00:34:07,530 --> 00:34:11,429
much<font color="#CCCCCC"> they'll pay to IBM for their how</font>

735
00:34:09,270 --> 00:34:14,389
much do you pay<font color="#CCCCCC"> to IBM for the license</font>

736
00:34:11,429 --> 00:34:16,950
<font color="#E5E5E5">it's a</font><font color="#CCCCCC"> free</font><font color="#E5E5E5"> month okay</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> enough</font>

737
00:34:14,389 --> 00:34:19,109
interesting case<font color="#CCCCCC"> obviously I</font><font color="#E5E5E5"> need to buy</font>

738
00:34:16,949 --> 00:34:20,908
<font color="#E5E5E5">you a beer later</font><font color="#CCCCCC"> for the session</font><font color="#E5E5E5"> but</font>

739
00:34:19,109 --> 00:34:23,509
cool<font color="#E5E5E5"> okay sometimes you do have such</font>

740
00:34:20,909 --> 00:34:25,859
cases but typically you know we have

741
00:34:23,510 --> 00:34:28,770
<font color="#E5E5E5">relationships between environments and</font>

742
00:34:25,859 --> 00:34:32,369
databases<font color="#E5E5E5"> even</font><font color="#CCCCCC"> if we don't luckily for</font>

743
00:34:28,770 --> 00:34:35,219
us<font color="#E5E5E5"> different databases support different</font>

744
00:34:32,369 --> 00:34:37,500
<font color="#E5E5E5">ways to perform certain queries</font><font color="#CCCCCC"> and</font>

745
00:34:35,219 --> 00:34:40,288
although the sequel<font color="#CCCCCC"> standard</font><font color="#E5E5E5"> actually</font>

746
00:34:37,500 --> 00:34:43,529
says<font color="#CCCCCC"> how they should behave</font><font color="#E5E5E5"> you know</font>

747
00:34:40,289 --> 00:34:45,000
these big<font color="#E5E5E5"> guys</font><font color="#CCCCCC"> oracle</font><font color="#E5E5E5"> they say you know</font>

748
00:34:43,529 --> 00:34:48,000
what<font color="#E5E5E5"> we don't care</font><font color="#CCCCCC"> about what the</font>

749
00:34:45,000 --> 00:34:50,219
standards say if we want<font color="#CCCCCC"> to have double</font>

750
00:34:48,000 --> 00:34:53,069
<font color="#E5E5E5">pipe for concatenation</font><font color="#CCCCCC"> that's the way</font>

751
00:34:50,219 --> 00:34:55,500
<font color="#E5E5E5">oracle will do which is cool for</font><font color="#CCCCCC"> us</font>

752
00:34:53,069 --> 00:34:57,630
because<font color="#E5E5E5"> if I have a string that I split</font>

753
00:34:55,500 --> 00:35:00,569
into two strings and<font color="#E5E5E5"> if I use double</font>

754
00:34:57,630 --> 00:35:03,500
pipe for for concatenation<font color="#CCCCCC"> and it works</font>

755
00:35:00,569 --> 00:35:06,450
<font color="#CCCCCC">I can actually be pretty sure</font><font color="#E5E5E5"> that it's</font>

756
00:35:03,500 --> 00:35:07,410
<font color="#E5E5E5">Oracle or db2 because the same</font><font color="#CCCCCC"> thing</font>

757
00:35:06,450 --> 00:35:10,140
<font color="#E5E5E5">works in db2</font>

758
00:35:07,410 --> 00:35:12,660
but I know for certain<font color="#E5E5E5"> that it's not</font>

759
00:35:10,140 --> 00:35:14,848
Microsoft signal because in Microsoft

760
00:35:12,660 --> 00:35:18,118
sequel database in order<font color="#CCCCCC"> to</font><font color="#E5E5E5"> concatenate</font>

761
00:35:14,849 --> 00:35:19,950
two strings<font color="#E5E5E5"> you have</font><font color="#CCCCCC"> to use plus in my</font>

762
00:35:18,119 --> 00:35:21,779
<font color="#E5E5E5">sequel you don't use anything you simply</font>

763
00:35:19,950 --> 00:35:24,270
put two strings<font color="#E5E5E5"> next</font><font color="#CCCCCC"> to each other</font><font color="#E5E5E5"> and</font>

764
00:35:21,779 --> 00:35:27,510
my signal will automatically concatenate

765
00:35:24,270 --> 00:35:29,579
them<font color="#E5E5E5"> so for the more complicated example</font>

766
00:35:27,510 --> 00:35:31,319
<font color="#E5E5E5">let's say that we've performed the</font>

767
00:35:29,579 --> 00:35:34,619
fingerprinting so we know<font color="#E5E5E5"> exactly which</font>

768
00:35:31,319 --> 00:35:37,109
database it is<font color="#E5E5E5"> we're</font><font color="#CCCCCC"> dealing with but in</font>

769
00:35:34,619 --> 00:35:38,940
the examples here as a<font color="#CCCCCC"> set we will</font><font color="#E5E5E5"> have</font>

770
00:35:37,109 --> 00:35:41,460
a developer or<font color="#E5E5E5"> a Web Application</font>

771
00:35:38,940 --> 00:35:44,190
<font color="#E5E5E5">Firewall that actually blacklisted</font>

772
00:35:41,460 --> 00:35:46,400
certain keywords<font color="#CCCCCC"> by blacklisting these</font>

773
00:35:44,190 --> 00:35:49,319
<font color="#E5E5E5">keywords we will make automatic</font>

774
00:35:46,400 --> 00:35:51,930
exploitation much more difficult for

775
00:35:49,319 --> 00:35:55,009
automated tools so<font color="#E5E5E5"> you will see that</font>

776
00:35:51,930 --> 00:35:58,200
<font color="#CCCCCC">even sequel map which is really the best</font>

777
00:35:55,010 --> 00:36:01,549
signal exploitation<font color="#E5E5E5"> tool there is will</font>

778
00:35:58,200 --> 00:36:04,259
fail<font color="#CCCCCC"> in</font><font color="#E5E5E5"> finding certain vulnerabilities</font>

779
00:36:01,549 --> 00:36:07,559
<font color="#E5E5E5">so let's see again what we can do here</font>

780
00:36:04,260 --> 00:36:10,289
<font color="#E5E5E5">this is our example very simple example</font>

781
00:36:07,559 --> 00:36:12,630
same query as before<font color="#E5E5E5"> but we are</font>

782
00:36:10,289 --> 00:36:14,970
<font color="#CCCCCC">blacklisting certain</font><font color="#E5E5E5"> keywords if we find</font>

783
00:36:12,630 --> 00:36:17,880
sleep<font color="#E5E5E5"> in the query</font><font color="#CCCCCC"> we drop it</font>

784
00:36:14,970 --> 00:36:18,339
if we find benchmark or<font color="#E5E5E5"> Union in the</font>

785
00:36:17,880 --> 00:36:21,760
query

786
00:36:18,340 --> 00:36:25,200
drop it so remember those operations

787
00:36:21,760 --> 00:36:28,810
<font color="#E5E5E5">that we did</font><font color="#CCCCCC"> 2-1 one thousand minus two</font>

788
00:36:25,200 --> 00:36:30,879
by very cleverly exploiting such

789
00:36:28,810 --> 00:36:33,460
operations we<font color="#CCCCCC"> can get our true and</font><font color="#E5E5E5"> false</font>

790
00:36:30,880 --> 00:36:35,650
cases<font color="#E5E5E5"> which makes that we can decide</font>

791
00:36:33,460 --> 00:36:37,630
<font color="#E5E5E5">what was the result of an</font><font color="#CCCCCC"> operation</font>

792
00:36:35,650 --> 00:36:40,990
which<font color="#CCCCCC"> sub-queries we will be</font><font color="#E5E5E5"> able to do</font>

793
00:36:37,630 --> 00:36:43,000
that<font color="#E5E5E5"> let's see some</font><font color="#CCCCCC"> examples so first we</font>

794
00:36:40,990 --> 00:36:45,939
need<font color="#E5E5E5"> to find the relic page in the</font>

795
00:36:43,000 --> 00:36:48,240
previous exploit my rails page is the

796
00:36:45,940 --> 00:36:50,710
<font color="#E5E5E5">one that returns the transactions to</font><font color="#CCCCCC"> me</font>

797
00:36:48,240 --> 00:36:53,350
if I<font color="#CCCCCC"> don't get</font><font color="#E5E5E5"> any transactions back</font>

798
00:36:50,710 --> 00:36:55,450
that's<font color="#E5E5E5"> not the valid page so I have true</font>

799
00:36:53,350 --> 00:36:58,290
and<font color="#E5E5E5"> false cases as you will see in a</font>

800
00:36:55,450 --> 00:37:00,580
second<font color="#CCCCCC"> and I will actually exploit it</font>

801
00:36:58,290 --> 00:37:03,790
so this is what I will actually what to

802
00:37:00,580 --> 00:37:06,940
<font color="#E5E5E5">want to inject remember my sub query</font>

803
00:37:03,790 --> 00:37:09,810
must return a number back to<font color="#CCCCCC"> the outer</font>

804
00:37:06,940 --> 00:37:14,890
query<font color="#E5E5E5"> so it must be either one or</font><font color="#CCCCCC"> two</font>

805
00:37:09,810 --> 00:37:19,440
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> or in this</font><font color="#E5E5E5"> case</font><font color="#CCCCCC"> 1000 my ID for this</font>

806
00:37:14,890 --> 00:37:23,049
example is<font color="#E5E5E5"> 1000</font><font color="#CCCCCC"> so with this sub query</font>

807
00:37:19,440 --> 00:37:27,040
what I'm actually doing<font color="#E5E5E5"> again I'm taking</font>

808
00:37:23,050 --> 00:37:29,020
<font color="#E5E5E5">with my mouse here the username that</font><font color="#CCCCCC"> the</font>

809
00:37:27,040 --> 00:37:32,920
application<font color="#E5E5E5"> is using to connect to the</font>

810
00:37:29,020 --> 00:37:37,300
database<font color="#E5E5E5"> with substring first character</font>

811
00:37:32,920 --> 00:37:41,040
<font color="#CCCCCC">1 character</font><font color="#E5E5E5"> then changing the case to</font>

812
00:37:37,300 --> 00:37:46,330
<font color="#E5E5E5">lower case and converting into s key and</font>

813
00:37:41,040 --> 00:37:48,160
now my operation will be<font color="#E5E5E5"> 1065 minus the</font>

814
00:37:46,330 --> 00:37:51,340
value the ASCII value<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the first</font>

815
00:37:48,160 --> 00:37:58,089
<font color="#E5E5E5">character of username if the first</font>

816
00:37:51,340 --> 00:38:00,520
character is a<font color="#E5E5E5"> what's a nasty 65 okay so</font>

817
00:37:58,090 --> 00:38:02,850
uppercase a<font color="#E5E5E5"> I did</font><font color="#CCCCCC"> lowercase</font><font color="#E5E5E5"> here so I</font>

818
00:38:00,520 --> 00:38:07,840
don't need<font color="#E5E5E5"> to test it but if the first</font>

819
00:38:02,850 --> 00:38:12,160
character was uppercase a it was 65<font color="#E5E5E5"> 1065</font>

820
00:38:07,840 --> 00:38:16,330
<font color="#E5E5E5">minus 65 is what 1000 I get back one</font>

821
00:38:12,160 --> 00:38:23,020
page if the first character is B this<font color="#E5E5E5"> is</font>

822
00:38:16,330 --> 00:38:26,069
what<font color="#E5E5E5"> 66 right 1065 minus 66 is what 99</font>

823
00:38:23,020 --> 00:38:29,440
I<font color="#CCCCCC"> can make a different page there we go</font>

824
00:38:26,070 --> 00:38:32,650
<font color="#E5E5E5">one bit of information at a time so I</font>

825
00:38:29,440 --> 00:38:36,610
can<font color="#CCCCCC"> actually exploit that</font><font color="#E5E5E5"> all right time</font>

826
00:38:32,650 --> 00:38:41,430
<font color="#CCCCCC">for the other two demos which are way</font>

827
00:38:36,610 --> 00:38:44,170
<font color="#CCCCCC">more complicated so again I go back</font><font color="#E5E5E5"> here</font>

828
00:38:41,430 --> 00:38:45,730
this is the one I'm gonna do<font color="#E5E5E5"> the fourth</font>

829
00:38:44,170 --> 00:38:48,700
one<font color="#E5E5E5"> the one with</font><font color="#CCCCCC"> tradition</font>

830
00:38:45,730 --> 00:38:51,130
burp again doesn't find it<font color="#E5E5E5"> so signal</font>

831
00:38:48,700 --> 00:38:52,990
injection with filtering so the<font color="#CCCCCC"> key</font>

832
00:38:51,130 --> 00:38:55,810
<font color="#CCCCCC">words that</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can see below</font><font color="#E5E5E5"> are</font>

833
00:38:52,990 --> 00:38:59,529
filtered sleep<font color="#E5E5E5"> benchmark Union case and</font>

834
00:38:55,810 --> 00:39:03,490
make<font color="#E5E5E5"> ELT and dash dash dash dash is</font>

835
00:38:59,530 --> 00:39:06,070
comment<font color="#CCCCCC"> I click on the webpage I get</font>

836
00:39:03,490 --> 00:39:08,259
some results<font color="#CCCCCC"> back let's try with sequel</font>

837
00:39:06,070 --> 00:39:08,860
map<font color="#CCCCCC"> I don't need to drive its burp</font>

838
00:39:08,260 --> 00:39:10,210
anymore

839
00:39:08,860 --> 00:39:12,130
burp will not find any<font color="#E5E5E5"> of these</font>

840
00:39:10,210 --> 00:39:13,810
<font color="#CCCCCC">vulnerabilities I mean it's failed on</font>

841
00:39:12,130 --> 00:39:18,340
the simplest<font color="#E5E5E5"> one right it will</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> find</font>

842
00:39:13,810 --> 00:39:21,930
this so let's<font color="#E5E5E5"> go to signal map</font><font color="#CCCCCC"> seeker</font>

843
00:39:18,340 --> 00:39:24,190
map<font color="#CCCCCC"> - ooh</font>

844
00:39:21,930 --> 00:39:27,160
again you know ID is the vulnerable

845
00:39:24,190 --> 00:39:30,760
parameter so let's see what signal map

846
00:39:27,160 --> 00:39:32,529
will do signal map will say that there

847
00:39:30,760 --> 00:39:35,620
is no signal injection vulnerability

848
00:39:32,530 --> 00:39:38,920
here because it's right with the default

849
00:39:35,620 --> 00:39:40,900
injections<font color="#E5E5E5"> and it</font><font color="#CCCCCC"> actually failed why</font>

850
00:39:38,920 --> 00:39:43,480
because the default injections<font color="#E5E5E5"> contain</font>

851
00:39:40,900 --> 00:39:46,000
sleep benchmark all those<font color="#CCCCCC"> key words that</font>

852
00:39:43,480 --> 00:39:49,120
the developer<font color="#CCCCCC"> has blacklisted now at the</font>

853
00:39:46,000 --> 00:39:51,520
bottom<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can see</font><font color="#E5E5E5"> that signal map</font>

854
00:39:49,120 --> 00:39:54,580
actually<font color="#E5E5E5"> says try to increase values for</font>

855
00:39:51,520 --> 00:39:59,530
<font color="#E5E5E5">their stash level and - - risk anyone</font>

856
00:39:54,580 --> 00:40:02,049
use<font color="#E5E5E5"> this ever</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> only</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> you see</font><font color="#CCCCCC"> lets</font>

857
00:39:59,530 --> 00:40:04,060
<font color="#E5E5E5">people actually use this then they use</font>

858
00:40:02,050 --> 00:40:06,850
signal map normally so what<font color="#E5E5E5"> I'm gonna do</font>

859
00:40:04,060 --> 00:40:10,509
<font color="#E5E5E5">here is I will increase level - - -</font>

860
00:40:06,850 --> 00:40:13,540
level<font color="#CCCCCC"> 5</font><font color="#E5E5E5"> what does this do this simply</font>

861
00:40:10,510 --> 00:40:16,630
tells<font color="#E5E5E5"> signal map use more injections</font>

862
00:40:13,540 --> 00:40:18,580
<font color="#E5E5E5">different injections in order to try to</font>

863
00:40:16,630 --> 00:40:19,960
actually<font color="#E5E5E5"> identify signal injection</font><font color="#CCCCCC"> I</font>

864
00:40:18,580 --> 00:40:23,049
could use this

865
00:40:19,960 --> 00:40:26,800
- risk as well if you do<font color="#E5E5E5"> decide to do</font>

866
00:40:23,050 --> 00:40:28,810
that be careful<font color="#E5E5E5"> with increasing risk you</font>

867
00:40:26,800 --> 00:40:30,180
actually add injections which<font color="#CCCCCC"> would</font>

868
00:40:28,810 --> 00:40:32,850
cause problems

869
00:40:30,180 --> 00:40:35,850
in the database<font color="#E5E5E5"> what kind of problems am</font>

870
00:40:32,850 --> 00:40:39,810
<font color="#E5E5E5">I talking</font><font color="#CCCCCC"> about benchmark</font><font color="#E5E5E5"> it will eat</font>

871
00:40:35,850 --> 00:40:41,819
<font color="#E5E5E5">CPU or</font><font color="#CCCCCC"> if we have an update statement</font>

872
00:40:39,810 --> 00:40:44,310
<font color="#E5E5E5">and if our signal injection the</font>

873
00:40:41,820 --> 00:40:45,980
injection is in update<font color="#CCCCCC"> in signal map ads</font>

874
00:40:44,310 --> 00:40:50,070
or<font color="#CCCCCC"> one</font><font color="#E5E5E5"> equals</font><font color="#CCCCCC"> one</font>

875
00:40:45,980 --> 00:40:52,260
what do<font color="#E5E5E5"> we do we update every single row</font>

876
00:40:50,070 --> 00:40:54,420
in the table<font color="#CCCCCC"> so we</font><font color="#E5E5E5"> mess up the</font>

877
00:40:52,260 --> 00:40:58,080
<font color="#CCCCCC">application completely</font><font color="#E5E5E5"> happen to me so</font>

878
00:40:54,420 --> 00:41:01,160
<font color="#E5E5E5">be careful so we - - level</font><font color="#CCCCCC"> five signal</font>

879
00:40:58,080 --> 00:41:05,790
map will actually<font color="#CCCCCC"> manage to find</font><font color="#E5E5E5"> this</font>

880
00:41:01,160 --> 00:41:07,710
and<font color="#E5E5E5"> the way to exploit</font><font color="#CCCCCC"> this is the same</font>

881
00:41:05,790 --> 00:41:13,020
as the one that<font color="#CCCCCC"> I showed</font><font color="#E5E5E5"> previously to</font>

882
00:41:07,710 --> 00:41:15,690
you so see okay see how many different

883
00:41:13,020 --> 00:41:19,920
<font color="#E5E5E5">injections is trying now way</font><font color="#CCCCCC"> more than</font>

884
00:41:15,690 --> 00:41:22,200
before and now if I<font color="#E5E5E5"> let it run</font><font color="#CCCCCC"> I can</font>

885
00:41:19,920 --> 00:41:25,110
actually try to retrieve some data from

886
00:41:22,200 --> 00:41:28,350
<font color="#E5E5E5">the database and this time I will not do</font>

887
00:41:25,110 --> 00:41:31,050
- - DBS<font color="#CCCCCC"> - it</font><font color="#E5E5E5"> sees the databases why I</font>

888
00:41:28,350 --> 00:41:33,390
want to<font color="#E5E5E5"> show to you</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> signal map is</font>

889
00:41:31,050 --> 00:41:37,950
using to retrieve the data<font color="#E5E5E5"> so I'm gonna</font>

890
00:41:33,390 --> 00:41:41,670
say here - - tables which says please

891
00:41:37,950 --> 00:41:44,220
please retrieve all<font color="#CCCCCC"> the table names from</font>

892
00:41:41,670 --> 00:41:46,980
all<font color="#E5E5E5"> the databases that</font><font color="#CCCCCC"> you have now</font>

893
00:41:44,220 --> 00:41:50,600
check this this like the matrix moment

894
00:41:46,980 --> 00:41:50,600
<font color="#E5E5E5">and you will see why in a second</font>

895
00:41:50,690 --> 00:41:54,230
best thing ever<font color="#E5E5E5"> right</font>

896
00:41:54,670 --> 00:42:00,789
so what is doing right<font color="#E5E5E5"> now is it's</font>

897
00:41:56,980 --> 00:42:03,519
<font color="#CCCCCC">actually trying</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> deduce</font><font color="#E5E5E5"> one character</font>

898
00:42:00,789 --> 00:42:06,339
<font color="#E5E5E5">actually one bit at a time and get all</font>

899
00:42:03,519 --> 00:42:08,319
the data out it is using some variations

900
00:42:06,339 --> 00:42:10,058
of sleep in the background<font color="#E5E5E5"> that's why</font>

901
00:42:08,319 --> 00:42:12,730
it's getting<font color="#E5E5E5"> you know one character out</font>

902
00:42:10,059 --> 00:42:15,309
at a<font color="#E5E5E5"> time and</font><font color="#CCCCCC"> this is actually bashing</font>

903
00:42:12,730 --> 00:42:17,470
on<font color="#E5E5E5"> my server</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> now if I was checking</font>

904
00:42:15,309 --> 00:42:20,380
the<font color="#E5E5E5"> logs I would see the logs go like</font>

905
00:42:17,470 --> 00:42:22,868
crazy<font color="#CCCCCC"> and</font><font color="#E5E5E5"> if I</font><font color="#CCCCCC"> let it</font><font color="#E5E5E5"> run it will do</font>

906
00:42:20,380 --> 00:42:24,640
<font color="#E5E5E5">this field until everything</font><font color="#CCCCCC"> is you know</font>

907
00:42:22,869 --> 00:42:25,630
retrieved from the database<font color="#E5E5E5"> but like</font>

908
00:42:24,640 --> 00:42:28,269
<font color="#E5E5E5">this is the best thing you know it's</font>

909
00:42:25,630 --> 00:42:31,779
<font color="#E5E5E5">like matrix</font><font color="#CCCCCC"> failing</font><font color="#E5E5E5"> so let's go for the</font>

910
00:42:28,269 --> 00:42:35,950
<font color="#CCCCCC">last</font><font color="#E5E5E5"> one I can let</font><font color="#CCCCCC"> it run</font><font color="#E5E5E5"> actually I'll</font>

911
00:42:31,779 --> 00:42:40,829
stop it so the last one<font color="#CCCCCC"> I</font><font color="#E5E5E5"> will have to</font>

912
00:42:35,950 --> 00:42:44,649
exploit manually<font color="#E5E5E5"> you will see why so I'm</font>

913
00:42:40,829 --> 00:42:47,260
<font color="#E5E5E5">filtering certain keywords but my sequel</font>

914
00:42:44,650 --> 00:42:49,660
query is a little bit different<font color="#E5E5E5"> so what</font>

915
00:42:47,260 --> 00:42:52,359
I'm<font color="#CCCCCC"> doing here is I'm retrieving data</font>

916
00:42:49,660 --> 00:42:57,819
from<font color="#CCCCCC"> the table transactions where source</font>

917
00:42:52,359 --> 00:43:02,549
equals something<font color="#E5E5E5"> number and mobile must</font>

918
00:42:57,819 --> 00:43:06,869
be either<font color="#CCCCCC"> literally</font><font color="#E5E5E5"> text true or false</font>

919
00:43:02,549 --> 00:43:11,200
<font color="#E5E5E5">so the first part ID is not injectable</font>

920
00:43:06,869 --> 00:43:14,079
so it's perfectly coded<font color="#E5E5E5"> we cannot inject</font>

921
00:43:11,200 --> 00:43:15,220
it the second part of the query must be

922
00:43:14,079 --> 00:43:19,119
true or false

923
00:43:15,220 --> 00:43:22,419
<font color="#E5E5E5">literally text true or literally text</font>

924
00:43:19,119 --> 00:43:25,119
false and it might seem<font color="#CCCCCC"> that it's very</font>

925
00:43:22,420 --> 00:43:27,700
<font color="#E5E5E5">very difficult to</font><font color="#CCCCCC"> exploit</font><font color="#E5E5E5"> but let me</font>

926
00:43:25,119 --> 00:43:31,269
show to<font color="#E5E5E5"> you in the slides first how we</font>

927
00:43:27,700 --> 00:43:32,589
can theoretically do it in order<font color="#E5E5E5"> to make</font>

928
00:43:31,269 --> 00:43:34,660
this a bit<font color="#CCCCCC"> more difficult</font>

929
00:43:32,589 --> 00:43:36,750
<font color="#CCCCCC">I also</font><font color="#E5E5E5"> modified the application a little</font>

930
00:43:34,660 --> 00:43:39,819
<font color="#CCCCCC">bit so it doesn't return</font><font color="#E5E5E5"> any</font>

931
00:43:36,750 --> 00:43:43,720
transactions back now so it's<font color="#E5E5E5"> like a</font>

932
00:43:39,819 --> 00:43:45,549
<font color="#E5E5E5">brand</font><font color="#CCCCCC"> new empty application right did</font>

933
00:43:43,720 --> 00:43:47,169
sometimes<font color="#CCCCCC"> I get for tests</font><font color="#E5E5E5"> people give a</font>

934
00:43:45,549 --> 00:43:49,240
brand new application<font color="#E5E5E5"> to me and say okay</font>

935
00:43:47,170 --> 00:43:51,190
can<font color="#CCCCCC"> you perform a</font><font color="#E5E5E5"> penetration test on</font>

936
00:43:49,240 --> 00:43:52,868
this application<font color="#CCCCCC"> so ask them till</font><font color="#E5E5E5"> you</font>

937
00:43:51,190 --> 00:43:55,900
please put some data into<font color="#E5E5E5"> the</font>

938
00:43:52,869 --> 00:43:57,609
application so<font color="#CCCCCC"> I</font><font color="#E5E5E5"> say why well you know I</font>

939
00:43:55,900 --> 00:43:59,549
want to<font color="#E5E5E5"> see something in the application</font>

940
00:43:57,609 --> 00:44:02,140
if every screen says no data found

941
00:43:59,549 --> 00:44:03,080
there's only<font color="#E5E5E5"> certain amount of tests I</font>

942
00:44:02,140 --> 00:44:04,730
can do

943
00:44:03,080 --> 00:44:07,610
and sometimes the answer<font color="#CCCCCC"> is like oh</font>

944
00:44:04,730 --> 00:44:09,560
you're a hater<font color="#E5E5E5"> go hack it okay you know</font>

945
00:44:07,610 --> 00:44:11,060
we can't do everything<font color="#CCCCCC"> so it's always</font>

946
00:44:09,560 --> 00:44:13,310
good<font color="#CCCCCC"> to</font><font color="#E5E5E5"> have certain data in the</font>

947
00:44:11,060 --> 00:44:17,090
database<font color="#CCCCCC"> but</font><font color="#E5E5E5"> even sometimes we can you</font>

948
00:44:13,310 --> 00:44:18,529
know go through<font color="#E5E5E5"> that so in this</font>

949
00:44:17,090 --> 00:44:20,050
application<font color="#E5E5E5"> there will</font><font color="#CCCCCC"> be no data</font>

950
00:44:18,530 --> 00:44:22,900
returned back<font color="#E5E5E5"> but there will be one</font>

951
00:44:20,050 --> 00:44:25,280
<font color="#E5E5E5">subtle difference in</font><font color="#CCCCCC"> the response</font>

952
00:44:22,900 --> 00:44:27,800
<font color="#E5E5E5">depending on what I</font><font color="#CCCCCC"> did read the</font><font color="#E5E5E5"> query</font>

953
00:44:25,280 --> 00:44:29,030
<font color="#E5E5E5">I'll show that in a second</font><font color="#CCCCCC"> so as I said</font>

954
00:44:27,800 --> 00:44:33,710
this<font color="#E5E5E5"> is our seemingly impossible</font>

955
00:44:29,030 --> 00:44:36,620
injection<font color="#CCCCCC"> the type sorry the ID is not</font>

956
00:44:33,710 --> 00:44:38,080
injectable type has<font color="#CCCCCC"> to be literally true</font>

957
00:44:36,620 --> 00:44:42,529
or false

958
00:44:38,080 --> 00:44:46,100
so the idea here<font color="#CCCCCC"> is since we get no data</font>

959
00:44:42,530 --> 00:44:48,500
back from<font color="#CCCCCC"> the application since</font>

960
00:44:46,100 --> 00:44:52,009
application is empty is there any way

961
00:44:48,500 --> 00:44:55,570
for<font color="#E5E5E5"> me</font><font color="#CCCCCC"> to cause an error in a signal</font>

962
00:44:52,010 --> 00:44:58,550
<font color="#E5E5E5">theory so how would I cause an error</font>

963
00:44:55,570 --> 00:45:01,340
this<font color="#E5E5E5"> how we do it typically divide</font>

964
00:44:58,550 --> 00:45:03,020
something by<font color="#CCCCCC"> zero</font><font color="#E5E5E5"> this will cause an</font>

965
00:45:01,340 --> 00:45:05,480
exception<font color="#E5E5E5"> because</font><font color="#CCCCCC"> we cannot divide</font>

966
00:45:03,020 --> 00:45:07,480
<font color="#E5E5E5">anything</font><font color="#CCCCCC"> by zero so if I do select one</font>

967
00:45:05,480 --> 00:45:09,950
<font color="#E5E5E5">by</font><font color="#CCCCCC"> zero that'll</font><font color="#E5E5E5"> be an exception</font>

968
00:45:07,480 --> 00:45:13,370
absolutely everywhere<font color="#E5E5E5"> unless</font><font color="#CCCCCC"> you're</font>

969
00:45:09,950 --> 00:45:16,580
running<font color="#E5E5E5"> freaking my sequel why because</font>

970
00:45:13,370 --> 00:45:19,190
some<font color="#E5E5E5"> genius that develops my sequel</font>

971
00:45:16,580 --> 00:45:23,270
decided that one divided by<font color="#E5E5E5"> zero</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> zero</font>

972
00:45:19,190 --> 00:45:25,370
<font color="#CCCCCC">so it doesn't work there is a</font>

973
00:45:23,270 --> 00:45:28,430
<font color="#E5E5E5">configuration setting that you can</font><font color="#CCCCCC"> go to</font>

974
00:45:25,370 --> 00:45:30,710
and change the default my signal

975
00:45:28,430 --> 00:45:32,990
behavior so<font color="#E5E5E5"> one divided by zero</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> an</font>

976
00:45:30,710 --> 00:45:34,220
extract exception or infinity<font color="#E5E5E5"> but in</font>

977
00:45:32,990 --> 00:45:36,649
<font color="#E5E5E5">order to do that you have to change</font>

978
00:45:34,220 --> 00:45:41,060
configuration the default<font color="#CCCCCC"> configuration</font>

979
00:45:36,650 --> 00:45:43,520
select<font color="#E5E5E5"> one divided by zero zero so this</font>

980
00:45:41,060 --> 00:45:45,770
took me literally<font color="#E5E5E5"> ages to figure out if</font>

981
00:45:43,520 --> 00:45:48,800
there is<font color="#CCCCCC"> a way</font><font color="#E5E5E5"> to exploit this and I</font>

982
00:45:45,770 --> 00:45:51,170
<font color="#E5E5E5">finally found a way to cause an error in</font>

983
00:45:48,800 --> 00:45:54,080
my<font color="#CCCCCC"> signal</font><font color="#E5E5E5"> because no matter what you do</font>

984
00:45:51,170 --> 00:45:56,930
there<font color="#E5E5E5"> are no errors in my signal so the</font>

985
00:45:54,080 --> 00:45:59,960
the in<font color="#E5E5E5"> order to cause the error</font><font color="#CCCCCC"> I create</font>

986
00:45:56,930 --> 00:46:01,640
a<font color="#E5E5E5"> sub query</font><font color="#CCCCCC"> okay remember</font><font color="#E5E5E5"> that select</font>

987
00:45:59,960 --> 00:46:05,200
one<font color="#E5E5E5"> two three data head is a sub query</font>

988
00:46:01,640 --> 00:46:08,779
sub query<font color="#E5E5E5"> always has to return one row</font>

989
00:46:05,200 --> 00:46:11,609
if<font color="#E5E5E5"> I</font><font color="#CCCCCC"> returned</font><font color="#E5E5E5"> more than</font><font color="#CCCCCC"> one row from sub</font>

990
00:46:08,780 --> 00:46:13,950
query<font color="#CCCCCC"> I caused an infection</font>

991
00:46:11,609 --> 00:46:16,078
which means that if I do a<font color="#E5E5E5"> sub-query</font>

992
00:46:13,950 --> 00:46:18,089
which simply<font color="#E5E5E5"> returns couple of rows I</font>

993
00:46:16,079 --> 00:46:21,829
cause an exception<font color="#E5E5E5"> and something happens</font>

994
00:46:18,089 --> 00:46:24,180
<font color="#E5E5E5">bed in my</font><font color="#CCCCCC"> Sigma</font><font color="#E5E5E5"> so this is what I need</font>

995
00:46:21,829 --> 00:46:26,549
select table name from information

996
00:46:24,180 --> 00:46:29,308
<font color="#E5E5E5">schema</font><font color="#CCCCCC"> dot tables this is a default</font>

997
00:46:26,549 --> 00:46:31,979
database that exists in<font color="#E5E5E5"> every single</font><font color="#CCCCCC"> my</font>

998
00:46:29,309 --> 00:46:34,170
<font color="#CCCCCC">sequel database which</font><font color="#E5E5E5"> always has more</font>

999
00:46:31,979 --> 00:46:38,308
than one<font color="#CCCCCC"> rows</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> if you have more</font>

1000
00:46:34,170 --> 00:46:42,119
than one table names<font color="#E5E5E5"> so this is my sub</font>

1001
00:46:38,309 --> 00:46:45,269
query<font color="#E5E5E5"> and with this I will</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> it for</font><font color="#CCCCCC"> my</font>

1002
00:46:42,119 --> 00:46:47,910
two cases for<font color="#E5E5E5"> the true case I will</font>

1003
00:46:45,269 --> 00:46:51,328
<font color="#CCCCCC">actually cause the error for</font><font color="#E5E5E5"> the false</font>

1004
00:46:47,910 --> 00:46:53,969
case my type parameter will hold the

1005
00:46:51,329 --> 00:46:56,430
string true if this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> confusing to you</font>

1006
00:46:53,969 --> 00:46:57,839
<font color="#E5E5E5">don't worry it's supposed to be but I'm</font>

1007
00:46:56,430 --> 00:47:00,680
sure there's a<font color="#E5E5E5"> couple of slides and in</font>

1008
00:46:57,839 --> 00:47:04,950
like them I'll explain why this works<font color="#CCCCCC"> so</font>

1009
00:47:00,680 --> 00:47:08,009
<font color="#CCCCCC">this</font><font color="#E5E5E5"> will be my injection remember my</font>

1010
00:47:04,950 --> 00:47:11,968
injected string has to be<font color="#E5E5E5"> literally true</font>

1011
00:47:08,009 --> 00:47:15,630
or false<font color="#E5E5E5"> so what I'm gonna do here is I</font>

1012
00:47:11,969 --> 00:47:19,380
will create<font color="#CCCCCC"> a sub query</font><font color="#E5E5E5"> see the sub</font>

1013
00:47:15,630 --> 00:47:21,269
query here let's let's<font color="#E5E5E5"> see from from the</font>

1014
00:47:19,380 --> 00:47:24,539
inner part<font color="#CCCCCC"> of the sub query what it does</font>

1015
00:47:21,269 --> 00:47:27,319
again<font color="#E5E5E5"> I'm taking the</font><font color="#CCCCCC"> user name first</font>

1016
00:47:24,539 --> 00:47:30,900
character<font color="#CCCCCC"> 1 character okay</font>

1017
00:47:27,319 --> 00:47:33,690
converting to<font color="#CCCCCC"> lower case converting nets</font>

1018
00:47:30,900 --> 00:47:38,609
to ASCII so since it's lower case it has

1019
00:47:33,690 --> 00:47:43,619
to<font color="#CCCCCC"> be from 97 to 120 to a to</font><font color="#E5E5E5"> Z okay</font><font color="#CCCCCC"> and</font>

1020
00:47:38,609 --> 00:47:46,558
then<font color="#E5E5E5"> my if here will say if the first</font>

1021
00:47:43,619 --> 00:47:54,410
character or the value of<font color="#CCCCCC"> the first</font>

1022
00:47:46,559 --> 00:48:00,410
character is 65 then do this sub query

1023
00:47:54,410 --> 00:48:05,759
if it's not 65<font color="#E5E5E5"> then return the letter U</font>

1024
00:48:00,410 --> 00:48:08,790
from the sub query see what we get

1025
00:48:05,760 --> 00:48:13,860
if the if the first character is not<font color="#E5E5E5"> 65</font>

1026
00:48:08,790 --> 00:48:17,480
<font color="#E5E5E5">we get TR u e true that will be a string</font>

1027
00:48:13,860 --> 00:48:20,640
<font color="#E5E5E5">if it is then we cause an exception</font><font color="#CCCCCC"> and</font>

1028
00:48:17,480 --> 00:48:24,780
by comparing those two cases<font color="#CCCCCC"> again we</font>

1029
00:48:20,640 --> 00:48:27,270
can deduce what this particular<font color="#E5E5E5"> what the</font>

1030
00:48:24,780 --> 00:48:31,320
result<font color="#E5E5E5"> of this particular query was let</font>

1031
00:48:27,270 --> 00:48:32,460
<font color="#CCCCCC">me demo that make more sense</font><font color="#E5E5E5"> and I will</font>

1032
00:48:31,320 --> 00:48:34,890
be<font color="#E5E5E5"> cheating a little bit because I</font>

1033
00:48:32,460 --> 00:48:38,190
<font color="#CCCCCC">prepared this here for</font><font color="#E5E5E5"> myself</font><font color="#CCCCCC"> so just I</font>

1034
00:48:34,890 --> 00:48:40,520
<font color="#CCCCCC">don't have to type it in so it's the</font>

1035
00:48:38,190 --> 00:48:43,770
<font color="#E5E5E5">last one</font><font color="#CCCCCC"> okay</font>

1036
00:48:40,520 --> 00:48:47,759
transactions<font color="#CCCCCC"> three sorry</font><font color="#E5E5E5"> show</font><font color="#CCCCCC"> you let me</font>

1037
00:48:43,770 --> 00:48:54,300
<font color="#CCCCCC">do this first so let</font><font color="#E5E5E5"> me drive it signal</font>

1038
00:48:47,760 --> 00:48:57,480
map<font color="#CCCCCC"> signal map the shoe so I know that</font>

1039
00:48:54,300 --> 00:49:00,360
<font color="#CCCCCC">the vulnerable parameter is type ID is</font>

1040
00:48:57,480 --> 00:49:03,420
not vulnerable<font color="#CCCCCC"> so I'll just tell signal</font>

1041
00:49:00,360 --> 00:49:08,670
map<font color="#CCCCCC"> Drive type again just not</font><font color="#E5E5E5"> to waste</font>

1042
00:49:03,420 --> 00:49:12,480
time<font color="#E5E5E5"> and I will increase level</font><font color="#CCCCCC"> five to</font>

1043
00:49:08,670 --> 00:49:15,270
see if this will<font color="#E5E5E5"> help unfortunately</font><font color="#CCCCCC"> I</font>

1044
00:49:12,480 --> 00:49:17,310
<font color="#CCCCCC">would</font><font color="#E5E5E5"> let it run cycle map will not find</font>

1045
00:49:15,270 --> 00:49:19,530
this<font color="#CCCCCC"> vulnerability because it's so</font>

1046
00:49:17,310 --> 00:49:21,299
subtle that there is no way first sequel

1047
00:49:19,530 --> 00:49:24,980
map to figure<font color="#CCCCCC"> out what's going on</font><font color="#E5E5E5"> here</font>

1048
00:49:21,300 --> 00:49:28,310
<font color="#E5E5E5">but let me show to you a difference so</font>

1049
00:49:24,980 --> 00:49:28,310
back in verb

1050
00:49:30,340 --> 00:49:35,900
this was my last<font color="#E5E5E5"> request</font><font color="#CCCCCC"> as you can see</font>

1051
00:49:33,140 --> 00:49:36,549
it here is this visible<font color="#CCCCCC"> forever yeah</font><font color="#E5E5E5"> I</font>

1052
00:49:35,900 --> 00:49:40,100
hope<font color="#CCCCCC"> so</font>

1053
00:49:36,550 --> 00:49:43,220
<font color="#E5E5E5">so I will send this</font><font color="#CCCCCC"> to a module in verb</font>

1054
00:49:40,100 --> 00:49:45,950
which is called repeater repeater here

1055
00:49:43,220 --> 00:49:48,350
simply allows me to<font color="#E5E5E5"> very easily modify</font>

1056
00:49:45,950 --> 00:49:51,020
the query<font color="#E5E5E5"> and send it again</font><font color="#CCCCCC"> I could do</font>

1057
00:49:48,350 --> 00:49:54,190
this<font color="#E5E5E5"> from a</font><font color="#CCCCCC"> browser but it's boring this</font>

1058
00:49:51,020 --> 00:49:56,560
<font color="#E5E5E5">is better so when I click</font><font color="#CCCCCC"> on go here</font>

1059
00:49:54,190 --> 00:50:02,090
this is the result I<font color="#CCCCCC"> get back</font>

1060
00:49:56,560 --> 00:50:04,850
see<font color="#CCCCCC"> that's the same screen</font><font color="#E5E5E5"> right but</font>

1061
00:50:02,090 --> 00:50:07,150
here I<font color="#E5E5E5"> have the</font><font color="#CCCCCC"> raw</font><font color="#E5E5E5"> response back if I</font>

1062
00:50:04,850 --> 00:50:09,650
click on render<font color="#CCCCCC"> I can actually see the</font>

1063
00:50:07,150 --> 00:50:12,950
verb trying to<font color="#E5E5E5"> render the same page as a</font>

1064
00:50:09,650 --> 00:50:15,109
browser<font color="#E5E5E5"> subtle check raw here so by</font>

1065
00:50:12,950 --> 00:50:16,850
testing<font color="#CCCCCC"> this remember when I</font><font color="#E5E5E5"> mentioned</font>

1066
00:50:15,109 --> 00:50:18,410
that single<font color="#CCCCCC"> tick character</font><font color="#E5E5E5"> that might be</font>

1067
00:50:16,850 --> 00:50:23,060
interesting so if I put it into true

1068
00:50:18,410 --> 00:50:26,950
here and if I click on go<font color="#CCCCCC"> I get the same</font>

1069
00:50:23,060 --> 00:50:26,950
<font color="#CCCCCC">web page no transactions found</font>

1070
00:50:27,599 --> 00:50:33,479
but there is something<font color="#E5E5E5"> different here</font>

1071
00:50:31,099 --> 00:50:35,940
<font color="#E5E5E5">can anyone</font><font color="#CCCCCC"> notice</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> i'm switching</font>

1072
00:50:33,479 --> 00:50:37,919
<font color="#E5E5E5">between last</font><font color="#CCCCCC"> two so take a</font><font color="#E5E5E5"> look at this</font>

1073
00:50:35,940 --> 00:50:44,029
on the<font color="#CCCCCC"> right side there is something</font>

1074
00:50:37,920 --> 00:50:44,029
<font color="#CCCCCC">different I don't see the difference</font>

1075
00:50:46,760 --> 00:50:49,720
<font color="#CCCCCC">series here</font>

1076
00:50:51,119 --> 00:50:59,430
so on a legitimate<font color="#E5E5E5"> request there is no</font>

1077
00:50:55,140 --> 00:51:02,038
break in HTML messed up<font color="#CCCCCC"> requests</font><font color="#E5E5E5"> with</font>

1078
00:50:59,430 --> 00:51:03,749
single<font color="#CCCCCC"> tick there is break here probably</font>

1079
00:51:02,039 --> 00:51:06,660
<font color="#CCCCCC">edit</font><font color="#E5E5E5"> my certain part of</font><font color="#CCCCCC"> the application</font>

1080
00:51:03,749 --> 00:51:10,019
<font color="#E5E5E5">that you know got into some weird states</font>

1081
00:51:06,660 --> 00:51:12,149
<font color="#E5E5E5">at one point in</font><font color="#CCCCCC"> time so that's all we</font>

1082
00:51:10,019 --> 00:51:14,368
need really<font color="#CCCCCC"> to exploit it</font><font color="#E5E5E5"> we have true</font>

1083
00:51:12,150 --> 00:51:16,680
<font color="#CCCCCC">and false cases</font><font color="#E5E5E5"> true will be</font><font color="#CCCCCC"> without</font>

1084
00:51:14,369 --> 00:51:19,109
this break<font color="#E5E5E5"> false with the</font><font color="#CCCCCC"> Builder break</font>

1085
00:51:16,680 --> 00:51:20,669
character<font color="#CCCCCC"> so what I'm</font><font color="#E5E5E5"> going to do here I</font>

1086
00:51:19,109 --> 00:51:26,150
want to inject into<font color="#E5E5E5"> the type parameter</font>

1087
00:51:20,670 --> 00:51:26,150
<font color="#CCCCCC">and I will take the query</font><font color="#E5E5E5"> I had</font><font color="#CCCCCC"> before</font>

1088
00:51:28,490 --> 00:51:37,640
so I will inject it here like<font color="#E5E5E5"> this now</font>

1089
00:51:34,430 --> 00:51:42,410
<font color="#E5E5E5">since this is URL I have to</font>

1090
00:51:37,640 --> 00:51:44,540
oops<font color="#CCCCCC"> I have</font><font color="#E5E5E5"> to properly encode it so for</font>

1091
00:51:42,410 --> 00:51:47,299
those of<font color="#E5E5E5"> you who work with</font><font color="#CCCCCC"> verb there is</font>

1092
00:51:44,540 --> 00:51:49,790
a nice shortcut control you which encode

1093
00:51:47,300 --> 00:51:54,520
this into URL<font color="#E5E5E5"> otherwise it to break the</font>

1094
00:51:49,790 --> 00:51:58,070
request and now I can try to<font color="#E5E5E5"> send this</font>

1095
00:51:54,520 --> 00:52:01,759
and<font color="#E5E5E5"> notice that there is no break</font><font color="#CCCCCC"> here</font>

1096
00:51:58,070 --> 00:52:02,450
<font color="#E5E5E5">which means that</font><font color="#CCCCCC"> this might have been</font>

1097
00:52:01,760 --> 00:52:05,000
correct

1098
00:52:02,450 --> 00:52:06,799
so let me cycle through all<font color="#E5E5E5"> the</font><font color="#CCCCCC"> values</font>

1099
00:52:05,000 --> 00:52:08,240
<font color="#CCCCCC">to see</font><font color="#E5E5E5"> what happens here again burp</font>

1100
00:52:06,800 --> 00:52:10,550
there is a really nice module called

1101
00:52:08,240 --> 00:52:13,459
<font color="#E5E5E5">intruder</font><font color="#CCCCCC"> I don't have to script</font><font color="#E5E5E5"> this I</font>

1102
00:52:10,550 --> 00:52:15,980
can use<font color="#CCCCCC"> burp to do this</font><font color="#E5E5E5"> so I will send</font>

1103
00:52:13,460 --> 00:52:17,830
<font color="#E5E5E5">this to intruder and if you have it use</font>

1104
00:52:15,980 --> 00:52:23,300
burp after<font color="#E5E5E5"> this you gotta love the tool</font>

1105
00:52:17,830 --> 00:52:27,950
so see my query<font color="#E5E5E5"> here remember from the</font>

1106
00:52:23,300 --> 00:52:34,010
slide<font color="#E5E5E5"> I want to cycle this 65 let me go</font>

1107
00:52:27,950 --> 00:52:37,580
<font color="#E5E5E5">back</font><font color="#CCCCCC"> to the slide see this I want to</font>

1108
00:52:34,010 --> 00:52:41,480
slide in<font color="#E5E5E5"> the earth sorry the number 65</font><font color="#CCCCCC"> I</font>

1109
00:52:37,580 --> 00:52:44,330
want to just simply change<font color="#E5E5E5"> it 65 to</font><font color="#CCCCCC"> 122</font>

1110
00:52:41,480 --> 00:52:48,580
<font color="#E5E5E5">try everything from the ASCII table so</font>

1111
00:52:44,330 --> 00:52:52,098
the burp you can do<font color="#E5E5E5"> that easily select</font>

1112
00:52:48,580 --> 00:52:55,310
head and now here in a<font color="#E5E5E5"> different screen</font>

1113
00:52:52,099 --> 00:52:58,900
payloads<font color="#CCCCCC"> I can actually</font><font color="#E5E5E5"> tell burp</font><font color="#CCCCCC"> pls</font>

1114
00:52:55,310 --> 00:52:58,900
cycle two numbers here

1115
00:52:59,180 --> 00:53:08,328
numbers from 65<font color="#CCCCCC"> to 120 to stay by</font><font color="#E5E5E5"> one</font>

1116
00:53:05,030 --> 00:53:11,059
and<font color="#E5E5E5"> click on start attack so what will</font>

1117
00:53:08,329 --> 00:53:12,829
burp do<font color="#E5E5E5"> it will simply take these</font>

1118
00:53:11,059 --> 00:53:14,510
requests<font color="#E5E5E5"> and it will just repeat and</font>

1119
00:53:12,829 --> 00:53:15,579
concert will be<font color="#E5E5E5"> two different</font><font color="#CCCCCC"> value ok</font>

1120
00:53:14,510 --> 00:53:19,180
make<font color="#E5E5E5"> sense yeah</font>

1121
00:53:15,579 --> 00:53:19,180
so start<font color="#CCCCCC"> attack</font>

1122
00:53:21,250 --> 00:53:29,710
and now I can<font color="#E5E5E5"> maybe sort by length and</font>

1123
00:53:25,140 --> 00:53:30,730
there is one request for<font color="#E5E5E5"> which the</font>

1124
00:53:29,710 --> 00:53:33,940
length was different

1125
00:53:30,730 --> 00:53:34,480
<font color="#E5E5E5">704 bytes</font><font color="#CCCCCC"> why we have that break HTML</font>

1126
00:53:33,940 --> 00:53:37,570
tag

1127
00:53:34,480 --> 00:53:41,530
<font color="#CCCCCC">I'm gonna</font><font color="#E5E5E5"> click on this one in the</font>

1128
00:53:37,570 --> 00:53:44,460
response<font color="#E5E5E5"> if I scroll down I can see my</font>

1129
00:53:41,530 --> 00:53:50,860
break here which means<font color="#CCCCCC"> that the query</font>

1130
00:53:44,460 --> 00:53:53,620
evaluated<font color="#CCCCCC"> to false</font><font color="#E5E5E5"> by because it had a</font>

1131
00:53:50,860 --> 00:53:57,070
terror<font color="#CCCCCC"> write exception which means that</font>

1132
00:53:53,620 --> 00:54:02,980
my<font color="#E5E5E5"> first character of the username</font><font color="#CCCCCC"> is 97</font>

1133
00:53:57,070 --> 00:54:04,330
97 is what<font color="#E5E5E5"> Emma knows come on you guys</font>

1134
00:54:02,980 --> 00:54:06,820
<font color="#CCCCCC">are at Balcombe</font><font color="#E5E5E5"> you should know ASCII</font>

1135
00:54:04,330 --> 00:54:09,670
table<font color="#CCCCCC"> on top</font><font color="#E5E5E5"> you can I said hey there</font>

1136
00:54:06,820 --> 00:54:11,350
<font color="#CCCCCC">don't it say</font><font color="#E5E5E5"> okay is it for me so what</font>

1137
00:54:09,670 --> 00:54:15,210
if you want<font color="#E5E5E5"> to get the second character</font>

1138
00:54:11,350 --> 00:54:15,210
out I simply go<font color="#CCCCCC"> here</font>

1139
00:54:17,230 --> 00:54:24,549
<font color="#CCCCCC">until the substring I want second</font>

1140
00:54:19,990 --> 00:54:25,149
character out start the<font color="#E5E5E5"> tech again sort</font>

1141
00:54:24,549 --> 00:54:34,390
by<font color="#E5E5E5"> length</font>

1142
00:54:25,150 --> 00:54:40,329
oh it's<font color="#E5E5E5"> 9999 is what so</font><font color="#CCCCCC"> d come on</font><font color="#E5E5E5"> 97 is</font>

1143
00:54:34,390 --> 00:54:42,640
a<font color="#E5E5E5"> 99 is what</font><font color="#CCCCCC"> C okay</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> there we go</font><font color="#E5E5E5"> game</font>

1144
00:54:40,329 --> 00:54:44,500
<font color="#CCCCCC">order for</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> application</font><font color="#E5E5E5"> we can exploit</font>

1145
00:54:42,640 --> 00:54:47,078
it<font color="#E5E5E5"> even though it was really really</font>

1146
00:54:44,500 --> 00:54:49,140
difficult<font color="#E5E5E5"> and all we need is to be able</font>

1147
00:54:47,079 --> 00:54:53,490
<font color="#CCCCCC">to get it one bit of information</font><font color="#E5E5E5"> out</font>

1148
00:54:49,140 --> 00:54:56,009
<font color="#E5E5E5">every time so just to finish with this</font>

1149
00:54:53,490 --> 00:55:00,129
<font color="#E5E5E5">the crucial one interesting example</font>

1150
00:54:56,010 --> 00:55:03,390
again<font color="#E5E5E5"> very simple query</font><font color="#CCCCCC"> same as this one</font>

1151
00:55:00,130 --> 00:55:07,720
<font color="#E5E5E5">we have two injection points ID and type</font>

1152
00:55:03,390 --> 00:55:10,720
but the single<font color="#CCCCCC"> T character is filtered</font>

1153
00:55:07,720 --> 00:55:12,160
out by the web application<font color="#E5E5E5"> fiber so</font>

1154
00:55:10,720 --> 00:55:16,348
there is one<font color="#CCCCCC"> character that</font><font color="#E5E5E5"> we can</font>

1155
00:55:12,160 --> 00:55:20,078
inject here to mess up this horribly

1156
00:55:16,349 --> 00:55:23,980
<font color="#E5E5E5">anyone with an idea what character would</font>

1157
00:55:20,079 --> 00:55:27,000
you<font color="#E5E5E5"> inject to mess up this query but you</font>

1158
00:55:23,980 --> 00:55:27,000
cannot inject single take

1159
00:55:29,060 --> 00:55:35,090
<font color="#E5E5E5">you can say ah</font><font color="#CCCCCC"> okay</font>

1160
00:55:33,140 --> 00:55:39,259
<font color="#E5E5E5">but you were cheating you saw this</font>

1161
00:55:35,090 --> 00:55:41,750
before<font color="#CCCCCC"> I'm sure somewhere but yeah okay</font>

1162
00:55:39,260 --> 00:55:43,550
<font color="#CCCCCC">not</font><font color="#E5E5E5"> only if it was someone else</font><font color="#CCCCCC"> I would</font>

1163
00:55:41,750 --> 00:55:46,460
say all<font color="#CCCCCC"> by beer but for</font><font color="#E5E5E5"> Tony</font><font color="#CCCCCC"> now you'll</font>

1164
00:55:43,550 --> 00:55:49,430
<font color="#E5E5E5">get beer anyway so with single bexlife</font>

1165
00:55:46,460 --> 00:55:54,400
sorry check what you can do if we<font color="#E5E5E5"> inject</font>

1166
00:55:49,430 --> 00:55:56,740
<font color="#E5E5E5">backslash into the first parameter ID</font>

1167
00:55:54,400 --> 00:56:01,880
<font color="#E5E5E5">check what will happen with the query</font>

1168
00:55:56,740 --> 00:56:06,589
<font color="#CCCCCC">since we escaped</font><font color="#E5E5E5"> the single</font><font color="#CCCCCC"> take this</font>

1169
00:56:01,880 --> 00:56:14,480
all becomes<font color="#E5E5E5"> ID and then actually what we</font>

1170
00:56:06,590 --> 00:56:16,340
inject here becomes our extension of the

1171
00:56:14,480 --> 00:56:19,010
signal<font color="#CCCCCC"> query so even though single tick</font>

1172
00:56:16,340 --> 00:56:22,870
is you know<font color="#CCCCCC"> like pant</font><font color="#E5E5E5"> we can still</font>

1173
00:56:19,010 --> 00:56:26,300
modify the query for the lessons learned

1174
00:56:22,870 --> 00:56:28,060
<font color="#CCCCCC">blacklisting doesn't work so there is no</font>

1175
00:56:26,300 --> 00:56:30,980
way for blacklisting to work ever

1176
00:56:28,060 --> 00:56:33,320
although maybe today<font color="#E5E5E5"> you can create a</font>

1177
00:56:30,980 --> 00:56:35,270
really good<font color="#CCCCCC"> blacklisting filter which</font>

1178
00:56:33,320 --> 00:56:37,670
you<font color="#CCCCCC"> maybe stop everything from being</font>

1179
00:56:35,270 --> 00:56:39,830
exploited today who knows what will

1180
00:56:37,670 --> 00:56:42,380
<font color="#CCCCCC">happen tomorrow tomorrow database</font>

1181
00:56:39,830 --> 00:56:45,080
engines might support<font color="#E5E5E5"> something new they</font>

1182
00:56:42,380 --> 00:56:47,420
might add new keywords<font color="#E5E5E5"> to be to the that</font>

1183
00:56:45,080 --> 00:56:49,549
are supported so<font color="#CCCCCC"> blacklisting is</font>

1184
00:56:47,420 --> 00:56:51,950
actually not the way<font color="#E5E5E5"> to prevent signal</font>

1185
00:56:49,550 --> 00:56:54,710
injection from being exploited for<font color="#E5E5E5"> any</font>

1186
00:56:51,950 --> 00:56:56,419
developer<font color="#E5E5E5"> that you ever work with or if</font>

1187
00:56:54,710 --> 00:56:59,270
you develop your<font color="#CCCCCC"> own</font><font color="#E5E5E5"> web applications</font>

1188
00:56:56,420 --> 00:57:01,490
the<font color="#E5E5E5"> only real way to get rid of signal</font>

1189
00:56:59,270 --> 00:57:05,030
injection is to use prepared statements

1190
00:57:01,490 --> 00:57:07,850
or<font color="#E5E5E5"> parameterize queries</font><font color="#CCCCCC"> which means that</font>

1191
00:57:05,030 --> 00:57:11,750
the signal engine will know<font color="#CCCCCC"> exactly</font><font color="#E5E5E5"> what</font>

1192
00:57:07,850 --> 00:57:13,819
is<font color="#E5E5E5"> the injected content and it will</font>

1193
00:57:11,750 --> 00:57:16,960
prevent that injected content from<font color="#E5E5E5"> being</font>

1194
00:57:13,820 --> 00:57:20,840
interpreted by the same signal injection

1195
00:57:16,960 --> 00:57:23,090
language<font color="#E5E5E5"> so any any user input must be</font>

1196
00:57:20,840 --> 00:57:27,910
properly encoded must be properly

1197
00:57:23,090 --> 00:57:30,050
filtered so that way we prevent any

1198
00:57:27,910 --> 00:57:31,910
exploitation such as the one that<font color="#E5E5E5"> I</font>

1199
00:57:30,050 --> 00:57:33,860
showed<font color="#E5E5E5"> to</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> and with this I</font><font color="#CCCCCC"> should be</font>

1200
00:57:31,910 --> 00:57:34,839
<font color="#E5E5E5">done right on time maybe even a little</font>

1201
00:57:33,860 --> 00:57:37,960
<font color="#E5E5E5">bit more</font>

1202
00:57:34,840 --> 00:57:41,580
I actually thought so if there are any

1203
00:57:37,960 --> 00:57:44,530
questions<font color="#E5E5E5"> please shoot right</font><font color="#CCCCCC"> now</font>

1204
00:57:41,580 --> 00:57:46,330
<font color="#CCCCCC">otherwise</font><font color="#E5E5E5"> let's go get some beer or</font>

1205
00:57:44,530 --> 00:57:49,390
<font color="#E5E5E5">whatever and I can answer questions</font>

1206
00:57:46,330 --> 00:57:52,060
<font color="#E5E5E5">later as well I hope you enjoy this the</font>

1207
00:57:49,390 --> 00:57:54,910
web<font color="#E5E5E5"> application will be on my github</font>

1208
00:57:52,060 --> 00:57:57,100
hopefully tomorrow<font color="#E5E5E5"> and I think slides</font>

1209
00:57:54,910 --> 00:57:58,000
will be sent by<font color="#E5E5E5"> the organizers or</font>

1210
00:57:57,100 --> 00:58:00,130
something like that

1211
00:57:58,000 --> 00:58:01,840
but if you want them<font color="#E5E5E5"> just let me know</font>

1212
00:58:00,130 --> 00:58:05,320
<font color="#E5E5E5">and I'll be more than happy to send the</font>

1213
00:58:01,840 --> 00:58:10,480
slide to you<font color="#E5E5E5"> so any questions yes</font><font color="#CCCCCC"> no</font>

1214
00:58:05,320 --> 00:58:12,810
<font color="#E5E5E5">beer yes no yes cool so thanks Aaron</font>

1215
00:58:10,480 --> 00:58:12,810
thank you again

1216
00:58:16,220 --> 00:58:28,290
[Music]

1217
00:58:27,430 --> 00:58:31,500
[Applause]

1218
00:58:28,290 --> 00:58:31,500
[Music]

