1
00:00:00,080 --> 00:00:12,710
[Music]

2
00:00:16,290 --> 00:00:18,680
[Music]

3
00:00:18,680 --> 00:00:21,520
thank you

4
00:00:21,520 --> 00:00:24,240
[Music]

5
00:00:24,240 --> 00:00:27,240
welcome back everyone and finally we

6
00:00:27,240 --> 00:00:29,160
have our talk on hacking the Xbox 360

7
00:00:29,160 --> 00:00:31,140
with the Raspberry Pi Pico please

8
00:00:31,140 --> 00:00:33,980
welcome the dealer

9
00:00:35,000 --> 00:00:38,100
hello thank you thank you very much

10
00:00:38,100 --> 00:00:40,440
welcome to my lecture

11
00:00:40,440 --> 00:00:42,980
so we will be talking about the Xbox

12
00:00:42,980 --> 00:00:46,140
360. it's a security

13
00:00:46,140 --> 00:00:48,660
the security flaws and ultimately how we

14
00:00:48,660 --> 00:00:51,600
can defeat it and run basically anything

15
00:00:51,600 --> 00:00:53,280
we want

16
00:00:53,280 --> 00:00:57,120
so first off I'm a web developer I'm a

17
00:00:57,120 --> 00:01:00,660
tinkerer a gamer and I've been modding

18
00:01:00,660 --> 00:01:03,059
consoles since I was 16. when I got my

19
00:01:03,059 --> 00:01:06,180
first Nintendo Wii and it was pretty

20
00:01:06,180 --> 00:01:09,180
boring I only got like two games

21
00:01:09,180 --> 00:01:11,700
and I wanted to do something more with

22
00:01:11,700 --> 00:01:14,520
it so I found out the the world of

23
00:01:14,520 --> 00:01:18,900
modding your console to run uh some

24
00:01:18,900 --> 00:01:21,900
Homebrew softwares some applications

25
00:01:21,900 --> 00:01:24,720
that are open source and basically

26
00:01:24,720 --> 00:01:28,020
anything you you yourself right or

27
00:01:28,020 --> 00:01:31,100
anyone else on the web

28
00:01:31,100 --> 00:01:34,680
so what's what's the deal what's the

29
00:01:34,680 --> 00:01:37,159
actual deal with uh hacking consoles so

30
00:01:37,159 --> 00:01:40,439
uh any console that uh that's been

31
00:01:40,439 --> 00:01:43,200
manufactured by let's say Nintendo or

32
00:01:43,200 --> 00:01:47,460
Microsoft uh it's got the the

33
00:01:47,460 --> 00:01:50,520
it uh it can only run the code that uh

34
00:01:50,520 --> 00:01:53,520
the the manufacturer have

35
00:01:53,520 --> 00:01:58,799
uh signed and so it can only run a legit

36
00:01:58,799 --> 00:01:59,640
code

37
00:01:59,640 --> 00:02:02,220
but it's my machine I should be able to

38
00:02:02,220 --> 00:02:04,939
run whatever I want

39
00:02:04,939 --> 00:02:08,038
so when you hack the console you have

40
00:02:08,038 --> 00:02:10,800
the freedom to run anything

41
00:02:10,800 --> 00:02:15,360
the only downsides to that you you will

42
00:02:15,360 --> 00:02:17,720
avoid your warranty

43
00:02:17,720 --> 00:02:21,000
if you if you are able to modify the

44
00:02:21,000 --> 00:02:23,160
games that you play you could have

45
00:02:23,160 --> 00:02:26,520
cheaters and of course it opens the door

46
00:02:26,520 --> 00:02:29,280
to piracy which is something that we

47
00:02:29,280 --> 00:02:32,340
don't actually want

48
00:02:32,340 --> 00:02:34,280
so a bit about the Xbox

49
00:02:34,280 --> 00:02:37,680
it was released in 2005 and it had

50
00:02:37,680 --> 00:02:41,879
pretty uh very powerful architecture

51
00:02:41,879 --> 00:02:45,239
and very powerful hardware for that uh

52
00:02:45,239 --> 00:02:46,980
period

53
00:02:46,980 --> 00:02:50,040
and about its security so it had an

54
00:02:50,040 --> 00:02:53,540
unencrypted ROM image

55
00:02:53,540 --> 00:02:55,500
that

56
00:02:55,500 --> 00:02:59,640
you can only run stuff that were checked

57
00:02:59,640 --> 00:03:01,379
by the hypervisor

58
00:03:01,379 --> 00:03:04,140
and it had effuses to prevent

59
00:03:04,140 --> 00:03:07,260
downgrading and running some potentially

60
00:03:07,260 --> 00:03:09,239
dangerous software

61
00:03:09,239 --> 00:03:12,500
so what actually is a hypervisor

62
00:03:12,500 --> 00:03:15,300
the whole operating system actually runs

63
00:03:15,300 --> 00:03:17,580
inside a virtual machine

64
00:03:17,580 --> 00:03:22,140
and the hypervisor is like the uh

65
00:03:22,140 --> 00:03:24,720
Observer that makes sure that everything

66
00:03:24,720 --> 00:03:27,000
that runs on it has been signed and

67
00:03:27,000 --> 00:03:28,379
checked

68
00:03:28,379 --> 00:03:31,019
and there's actually a piece of code in

69
00:03:31,019 --> 00:03:32,940
the CPU that makes it impossible to

70
00:03:32,940 --> 00:03:35,640
modify the hypervisor itself

71
00:03:35,640 --> 00:03:39,420
and so the developers and some hackers

72
00:03:39,420 --> 00:03:43,080
found out some pretty neat stuff

73
00:03:43,080 --> 00:03:45,540
how we can do how we can actually defeat

74
00:03:45,540 --> 00:03:47,280
the the hypervisor

75
00:03:47,280 --> 00:03:48,959
and the first one

76
00:03:48,959 --> 00:03:51,780
was called The King Kong Sader exploit

77
00:03:51,780 --> 00:03:53,879
it was discovered just one year after

78
00:03:53,879 --> 00:03:55,680
the console's launch

79
00:03:55,680 --> 00:03:58,319
it only worked on these two kernel

80
00:03:58,319 --> 00:03:59,340
versions

81
00:03:59,340 --> 00:04:02,459
and it required a modified game of King

82
00:04:02,459 --> 00:04:04,700
Kong

83
00:04:05,040 --> 00:04:06,720
and uh

84
00:04:06,720 --> 00:04:09,299
so uh you Pat essentially you patch the

85
00:04:09,299 --> 00:04:10,080
game

86
00:04:10,080 --> 00:04:13,379
to run some modified code instead of the

87
00:04:13,379 --> 00:04:16,320
Shader that is used for the first the

88
00:04:16,320 --> 00:04:18,600
first scene in the game

89
00:04:18,600 --> 00:04:22,320
it was reported to Microsoft before uh

90
00:04:22,320 --> 00:04:25,320
before actually showcasing it just to

91
00:04:25,320 --> 00:04:27,419
make sure that nobody else would that

92
00:04:27,419 --> 00:04:29,280
that Microsoft would have enough time to

93
00:04:29,280 --> 00:04:31,919
patch it before somebody breaks the

94
00:04:31,919 --> 00:04:33,540
system

95
00:04:33,540 --> 00:04:36,780
and also it required a modified

96
00:04:36,780 --> 00:04:39,600
DVD drive so you can burn the game in

97
00:04:39,600 --> 00:04:41,340
and run it from there

98
00:04:41,340 --> 00:04:43,800
and it's very outdated it only works for

99
00:04:43,800 --> 00:04:46,080
these two kernel versions and it's not

100
00:04:46,080 --> 00:04:49,320
very interesting to us but this is what

101
00:04:49,320 --> 00:04:52,919
it looks like so when the the game loads

102
00:04:52,919 --> 00:04:56,160
it says press start to continue and

103
00:04:56,160 --> 00:04:59,160
right after that you can run Linux or

104
00:04:59,160 --> 00:05:01,880
anything you want

105
00:05:01,880 --> 00:05:05,639
then few years after that the JTAG

106
00:05:05,639 --> 00:05:08,100
exploit was discovered

107
00:05:08,100 --> 00:05:11,400
so it essentially used the same flaw in

108
00:05:11,400 --> 00:05:15,479
the King Kong Shader exploit but the

109
00:05:15,479 --> 00:05:17,780
only difference was that it

110
00:05:17,780 --> 00:05:21,060
resided on the JTAG

111
00:05:21,060 --> 00:05:24,360
port and it loaded an image right out of

112
00:05:24,360 --> 00:05:27,479
the SMC chip

113
00:05:27,479 --> 00:05:30,120
so it injects the King Kong Shader

114
00:05:30,120 --> 00:05:32,220
exploit the payload

115
00:05:32,220 --> 00:05:35,759
and it basically runs any software it

116
00:05:35,759 --> 00:05:39,000
only works on a dashboard 7371 which is

117
00:05:39,000 --> 00:05:43,560
way way old it's outdated and it's not

118
00:05:43,560 --> 00:05:46,560
even possible to you to do that on on a

119
00:05:46,560 --> 00:05:48,000
slim console like this

120
00:05:48,000 --> 00:05:51,780
it was only present on the older

121
00:05:51,780 --> 00:05:54,720
consoles

122
00:05:54,720 --> 00:05:56,419
and then

123
00:05:56,419 --> 00:06:00,000
the next development

124
00:06:00,000 --> 00:06:02,280
is called the reset glitch hack so

125
00:06:02,280 --> 00:06:04,139
basically

126
00:06:04,139 --> 00:06:05,520
um

127
00:06:05,520 --> 00:06:10,860
when the the console is booting the

128
00:06:10,860 --> 00:06:14,720
the image that's on the the nand the ROM

129
00:06:14,720 --> 00:06:18,419
it gets checked against the hash unknown

130
00:06:18,419 --> 00:06:20,340
hash that's hard-coded inside the

131
00:06:20,340 --> 00:06:21,660
processor

132
00:06:21,660 --> 00:06:25,560
and so if we somebody found out if we

133
00:06:25,560 --> 00:06:27,840
listen to the postcodes

134
00:06:27,840 --> 00:06:29,940
when the machine is booting

135
00:06:29,940 --> 00:06:33,620
and we hear a specific postcode

136
00:06:33,620 --> 00:06:37,139
if we post the reset signal

137
00:06:37,139 --> 00:06:39,979
it will reset the

138
00:06:39,979 --> 00:06:44,419
registers that are responsible for

139
00:06:44,419 --> 00:06:47,220
telling us if the image is modified or

140
00:06:47,220 --> 00:06:48,419
not

141
00:06:48,419 --> 00:06:50,819
but it won't actually reset the the

142
00:06:50,819 --> 00:06:52,380
whole console

143
00:06:52,380 --> 00:06:55,740
so we can basically uh clear the error

144
00:06:55,740 --> 00:06:58,440
codes and continue to to boot the

145
00:06:58,440 --> 00:06:59,520
console

146
00:06:59,520 --> 00:07:02,060
so when the check

147
00:07:02,060 --> 00:07:05,580
passes it returns zero because it's been

148
00:07:05,580 --> 00:07:07,500
restarted

149
00:07:07,500 --> 00:07:11,240
and we can run anything we want

150
00:07:11,240 --> 00:07:14,580
it's actually unpatchable on

151
00:07:14,580 --> 00:07:17,220
Source because it's it bypasses

152
00:07:17,220 --> 00:07:20,720
everything that's that has been

153
00:07:20,720 --> 00:07:25,620
designed by Microsoft to to withstand

154
00:07:25,620 --> 00:07:28,620
and actually we needed an external

155
00:07:28,620 --> 00:07:30,599
glitch chip that would have all the

156
00:07:30,599 --> 00:07:32,699
logic for

157
00:07:32,699 --> 00:07:36,780
for listening to the postcodes and to

158
00:07:36,780 --> 00:07:40,139
slow down the processor and inject the

159
00:07:40,139 --> 00:07:43,860
the reset code so this is what the early

160
00:07:43,860 --> 00:07:44,400
[Music]

161
00:07:44,400 --> 00:07:45,120
um

162
00:07:45,120 --> 00:07:47,340
glitch tips looked like so you can see

163
00:07:47,340 --> 00:07:50,280
there's a bunch of wires one of them is

164
00:07:50,280 --> 00:07:52,860
going to the post output that is

165
00:07:52,860 --> 00:07:54,960
listening to the postcodes

166
00:07:54,960 --> 00:07:59,280
the other one is linked to the reset

167
00:07:59,280 --> 00:08:02,759
signal itself it's the one that that

168
00:08:02,759 --> 00:08:05,400
actually passes the reset signal

169
00:08:05,400 --> 00:08:09,560
and we have some other ones for example

170
00:08:11,160 --> 00:08:13,740
I'm not really sure just

171
00:08:13,740 --> 00:08:15,419
go on

172
00:08:15,419 --> 00:08:17,639
so

173
00:08:17,639 --> 00:08:18,720
um

174
00:08:18,720 --> 00:08:21,419
something that was discovered just a

175
00:08:21,419 --> 00:08:22,819
year ago

176
00:08:22,819 --> 00:08:25,500
we don't really need the glitch chip

177
00:08:25,500 --> 00:08:30,139
anymore so we can program the SMC itself

178
00:08:30,139 --> 00:08:32,099
to

179
00:08:32,099 --> 00:08:36,059
to listen to the postcodes and to do the

180
00:08:36,059 --> 00:08:39,779
actual the actual recent glitch

181
00:08:39,779 --> 00:08:41,880
so we don't need any external hardware

182
00:08:41,880 --> 00:08:44,099
we don't need to glue anything on the

183
00:08:44,099 --> 00:08:46,560
board we just need two small wires

184
00:08:46,560 --> 00:08:49,980
uh because the SMC doesn't see the the

185
00:08:49,980 --> 00:08:51,959
post output and it doesn't see the the

186
00:08:51,959 --> 00:08:54,120
reset uh

187
00:08:54,120 --> 00:08:56,160
the reset signal

188
00:08:56,160 --> 00:08:58,740
we just need to to solder two small

189
00:08:58,740 --> 00:09:01,320
wires from the

190
00:09:01,320 --> 00:09:05,360
from the SMC to the

191
00:09:05,640 --> 00:09:08,040
to the CPU itself it was discovered by

192
00:09:08,040 --> 00:09:10,140
the user

193
00:09:10,140 --> 00:09:12,600
15432

194
00:09:12,600 --> 00:09:15,959
and it looks something like this

195
00:09:15,959 --> 00:09:18,839
so you just take two wires and connect

196
00:09:18,839 --> 00:09:23,959
it as the picture shows

197
00:09:24,360 --> 00:09:27,779
this is the setup on the old the fat

198
00:09:27,779 --> 00:09:29,459
consoles

199
00:09:29,459 --> 00:09:31,200
and this is the setup for the sling

200
00:09:31,200 --> 00:09:34,760
pencils as we can see here

201
00:09:35,160 --> 00:09:38,220
so how do we do it we first need to

202
00:09:38,220 --> 00:09:41,160
apply the the mod wiring

203
00:09:41,160 --> 00:09:42,720
um

204
00:09:42,720 --> 00:09:47,180
we need to to read the ROM we need to

205
00:09:47,180 --> 00:09:52,140
make sure that we can boot Linux on it

206
00:09:52,140 --> 00:09:56,040
um so we can extract the CPU key decrypt

207
00:09:56,040 --> 00:09:59,580
the firstly red nand and then write our

208
00:09:59,580 --> 00:10:03,140
modified image on it

209
00:10:03,660 --> 00:10:06,240
so this is the software that is used for

210
00:10:06,240 --> 00:10:08,279
everything it is I like to call it the

211
00:10:08,279 --> 00:10:11,580
Swiss army knife for Xbox 360.

212
00:10:11,580 --> 00:10:16,100
and you can find the GitHub right here

213
00:10:16,620 --> 00:10:19,320
so in order to read an end you would

214
00:10:19,320 --> 00:10:21,300
actually need a

215
00:10:21,300 --> 00:10:24,660
a device that's able to connect to the

216
00:10:24,660 --> 00:10:26,100
uh

217
00:10:26,100 --> 00:10:29,940
to do SPI port on the on demand ROM

218
00:10:29,940 --> 00:10:32,420
itself

219
00:10:32,880 --> 00:10:37,820
but those are outdated because last year

220
00:10:37,820 --> 00:10:41,279
somebody got the genius idea of making

221
00:10:41,279 --> 00:10:44,279
one for of making a firmware for the

222
00:10:44,279 --> 00:10:47,000
Raspberry Pi Pico that essentially

223
00:10:47,000 --> 00:10:52,800
essentially it makes it a SPI flasher

224
00:10:52,800 --> 00:10:55,260
and you can download it so you can Flash

225
00:10:55,260 --> 00:10:58,079
it on your on your Raspberry Pi Pico and

226
00:10:58,079 --> 00:11:00,540
you can read your nand you can write it

227
00:11:00,540 --> 00:11:04,279
you can do anything you want

228
00:11:04,440 --> 00:11:08,040
so what do we do next after we

229
00:11:08,040 --> 00:11:11,120
read an end

230
00:11:14,579 --> 00:11:18,000
we can write a modified ECC image on it

231
00:11:18,000 --> 00:11:21,380
so ECC is essentially just first 50

232
00:11:21,380 --> 00:11:24,180
blocks of the nand it doesn't need to be

233
00:11:24,180 --> 00:11:25,680
encrypted

234
00:11:25,680 --> 00:11:30,060
uh but it can read a CPU key you can

235
00:11:30,060 --> 00:11:32,760
read all the encryption information that

236
00:11:32,760 --> 00:11:34,019
we need

237
00:11:34,019 --> 00:11:37,440
it runs this cell reloaded so it's a

238
00:11:37,440 --> 00:11:40,560
modified Linux image

239
00:11:40,560 --> 00:11:43,459
it starts the network so you can connect

240
00:11:43,459 --> 00:11:47,120
your previously mentioned uh

241
00:11:47,120 --> 00:11:49,920
jrunner software to it and as you can

242
00:11:49,920 --> 00:11:53,519
see right here you can see you guys yeah

243
00:11:53,519 --> 00:11:56,940
so this is the CPU key that is needed to

244
00:11:56,940 --> 00:12:00,060
decrypt the net

245
00:12:00,060 --> 00:12:02,339
and so while this Linux is running it's

246
00:12:02,339 --> 00:12:04,980
also uh listening to

247
00:12:04,980 --> 00:12:07,800
um update information

248
00:12:07,800 --> 00:12:10,560
so essentially you can even update your

249
00:12:10,560 --> 00:12:14,339
nand from the from the software you

250
00:12:14,339 --> 00:12:16,800
don't need to to hook it you don't need

251
00:12:16,800 --> 00:12:19,320
to to hook the Raspberry Pi again

252
00:12:19,320 --> 00:12:23,120
in order to to write the image

253
00:12:29,279 --> 00:12:33,660
after you get your CPU Keys you need to

254
00:12:33,660 --> 00:12:37,019
to input them into this program

255
00:12:37,019 --> 00:12:40,200
in order to decrypt the image in order

256
00:12:40,200 --> 00:12:42,480
to make the completely new modified

257
00:12:42,480 --> 00:12:45,800
image image that essentially can run

258
00:12:45,800 --> 00:12:48,979
unsigned code

259
00:12:49,800 --> 00:12:52,620
and yeah you just enjoy your modded

260
00:12:52,620 --> 00:12:53,760
headbox

261
00:12:53,760 --> 00:12:56,360
like this

262
00:13:18,240 --> 00:13:21,680
so this is a modified Xbox

263
00:13:22,560 --> 00:13:25,019
here I have an application that's called

264
00:13:25,019 --> 00:13:28,440
the XCX menu normally an unmodified

265
00:13:28,440 --> 00:13:30,420
console wouldn't be able to see this

266
00:13:30,420 --> 00:13:33,139
application it would just

267
00:13:33,139 --> 00:13:37,139
report some corrupted data or stuff that

268
00:13:37,139 --> 00:13:39,800
we can read

269
00:13:40,740 --> 00:13:42,300
when you open this

270
00:13:42,300 --> 00:13:45,380
you have a

271
00:13:46,680 --> 00:13:49,680
essentially a menu to run anything you

272
00:13:49,680 --> 00:13:51,600
want

273
00:13:51,600 --> 00:13:54,860
if I go to

274
00:14:08,100 --> 00:14:11,540
technical difficulties sorry

275
00:14:51,180 --> 00:14:53,940
okay so what you see here is an

276
00:14:53,940 --> 00:14:56,639
application called the dash launch

277
00:14:56,639 --> 00:14:59,639
uh essentially it's like a god mode

278
00:14:59,639 --> 00:15:01,760
application for your Xbox

279
00:15:01,760 --> 00:15:05,160
it can notify the

280
00:15:05,160 --> 00:15:09,680
the launch uh pads so anything that you

281
00:15:09,680 --> 00:15:13,019
you don't need to to boot inside the the

282
00:15:13,019 --> 00:15:15,720
Xbox dashboard you can boot to anything

283
00:15:15,720 --> 00:15:16,860
you want

284
00:15:16,860 --> 00:15:19,920
you can set your own

285
00:15:19,920 --> 00:15:22,620
application to run from it for example

286
00:15:22,620 --> 00:15:24,899
this is a modified dashboard that's

287
00:15:24,899 --> 00:15:26,639
called the Aurora

288
00:15:26,639 --> 00:15:32,399
it contains a modified dashboard with uh

289
00:15:32,399 --> 00:15:37,380
file manager with system settings

290
00:15:37,380 --> 00:15:39,899
essentially you can you have the control

291
00:15:39,899 --> 00:15:42,300
of of your whole system

292
00:15:42,300 --> 00:15:45,839
and just to demonstrate one also another

293
00:15:45,839 --> 00:15:49,279
neat thing that you can do

294
00:15:57,240 --> 00:15:59,399
you can't really hear it but I can

295
00:15:59,399 --> 00:16:02,040
override the fan speed and for example

296
00:16:02,040 --> 00:16:05,880
if my console is overheating I can just

297
00:16:05,880 --> 00:16:08,339
keep it cooler

298
00:16:08,339 --> 00:16:11,639
and from this menu I can also launch any

299
00:16:11,639 --> 00:16:14,579
other executable that I want

300
00:16:14,579 --> 00:16:17,459
so basically that's it for the

301
00:16:17,459 --> 00:16:20,300
modified system

302
00:16:21,240 --> 00:16:23,839
so

303
00:16:24,360 --> 00:16:26,220
what's what was the the point of all

304
00:16:26,220 --> 00:16:29,100
this so uh when you own a console you

305
00:16:29,100 --> 00:16:31,639
should be able to run anything you want

306
00:16:31,639 --> 00:16:34,740
that was the the whole point of of

307
00:16:34,740 --> 00:16:38,279
modifying the concepts so uh Microsoft

308
00:16:38,279 --> 00:16:41,639
they actually realized that if we give

309
00:16:41,639 --> 00:16:45,060
enough freedom to to developers to to

310
00:16:45,060 --> 00:16:47,540
run their own software we wouldn't have

311
00:16:47,540 --> 00:16:50,820
that many people trying to break it and

312
00:16:50,820 --> 00:16:53,699
and open the door to piracy and stuff

313
00:16:53,699 --> 00:16:56,339
like that so uh when they released the

314
00:16:56,339 --> 00:16:57,480
Xbox One

315
00:16:57,480 --> 00:17:02,420
and also the the newer Xbox series says

316
00:17:02,420 --> 00:17:05,760
they have uh developer mode

317
00:17:05,760 --> 00:17:08,839
uh it's like a one-time payment

318
00:17:08,839 --> 00:17:12,419
that enables you to uh to have a

319
00:17:12,419 --> 00:17:14,400
essentially a software development kit

320
00:17:14,400 --> 00:17:17,160
on your legit console

321
00:17:17,160 --> 00:17:20,160
so they

322
00:17:20,160 --> 00:17:24,000
and it it showed that it was actually a

323
00:17:24,000 --> 00:17:27,660
very smart idea because nobody then

324
00:17:27,660 --> 00:17:30,720
tried to to modify the the Xbox one

325
00:17:30,720 --> 00:17:34,380
because you essentially can you have the

326
00:17:34,380 --> 00:17:36,840
freedom to to run whatever you want

327
00:17:36,840 --> 00:17:40,980
and even for the Xbox 360 uh the newest

328
00:17:40,980 --> 00:17:43,260
revision of the motherboard so called

329
00:17:43,260 --> 00:17:46,280
Winchester uh it has

330
00:17:46,280 --> 00:17:49,799
it has a hardware patch for the reset

331
00:17:49,799 --> 00:17:51,980
glitch hack because you can't really

332
00:17:51,980 --> 00:17:54,480
pulse the reset

333
00:17:54,480 --> 00:17:58,200
uh it gets latched so it disables the

334
00:17:58,200 --> 00:18:01,740
whole hack so the latest version of of

335
00:18:01,740 --> 00:18:04,860
the Xbox 360 and the Xbox One are not

336
00:18:04,860 --> 00:18:07,799
vulnerable to this hack

337
00:18:07,799 --> 00:18:11,580
and so that would be it

338
00:18:11,580 --> 00:18:13,800
questions

339
00:18:13,800 --> 00:18:21,379
[Applause]

340
00:18:28,559 --> 00:18:31,820
thank you I have a question if I can

341
00:18:31,820 --> 00:18:36,780
have you tried overclocking your 360.

342
00:18:36,780 --> 00:18:39,780
I'm not sure it's possible I mean it can

343
00:18:39,780 --> 00:18:43,080
be but it's not really something that

344
00:18:43,080 --> 00:18:43,919
you

345
00:18:43,919 --> 00:18:45,360
it's not really something that that's

346
00:18:45,360 --> 00:18:46,820
useful because

347
00:18:46,820 --> 00:18:49,559
the the hardware itself is powerful

348
00:18:49,559 --> 00:18:51,539
enough to run everything that that has

349
00:18:51,539 --> 00:18:53,160
been written for it

350
00:18:53,160 --> 00:18:57,660
so maybe someone tried but I'm not sure

351
00:18:57,660 --> 00:19:00,320
thank you

352
00:19:01,320 --> 00:19:04,860
uh I've owned I actually own a mod at

353
00:19:04,860 --> 00:19:07,260
360 as well and I see a lot of same goes

354
00:19:07,260 --> 00:19:09,419
for the PS3 being used for emulation and

355
00:19:09,419 --> 00:19:11,580
stuff how do you look at it using for

356
00:19:11,580 --> 00:19:13,200
things like that in regards to power

357
00:19:13,200 --> 00:19:15,900
draw and efficiency towards a knock or

358
00:19:15,900 --> 00:19:17,940
something more modern which you can use

359
00:19:17,940 --> 00:19:19,080
for the same Purpose with a lower

360
00:19:19,080 --> 00:19:22,020
wattage do you still see a a business

361
00:19:22,020 --> 00:19:25,100
case for using a 360 for example

362
00:19:25,100 --> 00:19:29,760
well yes of course so you can when you

363
00:19:29,760 --> 00:19:32,039
have a modified system you can run you

364
00:19:32,039 --> 00:19:34,919
can emulate software like you said it

365
00:19:34,919 --> 00:19:37,140
doesn't really matter if if it's a

366
00:19:37,140 --> 00:19:40,200
PlayStation 3 if it's an Xbox 360. so

367
00:19:40,200 --> 00:19:42,360
your main concern is the power draw of

368
00:19:42,360 --> 00:19:44,280
the office yeah for example you could

369
00:19:44,280 --> 00:19:46,380
replace it with a more modern knock

370
00:19:46,380 --> 00:19:48,720
whatever and achieve the same result

371
00:19:48,720 --> 00:19:50,760
with more efficient Hardware in my

372
00:19:50,760 --> 00:19:52,919
opinion but I'm curious to how you look

373
00:19:52,919 --> 00:19:53,880
at it

374
00:19:53,880 --> 00:19:57,240
well but I can agree with with the with

375
00:19:57,240 --> 00:19:59,820
your point but for example if I only

376
00:19:59,820 --> 00:20:02,640
have an old Xbox that's lying around and

377
00:20:02,640 --> 00:20:04,679
it's not doing anything but collecting

378
00:20:04,679 --> 00:20:07,620
dust uh why not why not just modify it

379
00:20:07,620 --> 00:20:09,480
and be able to run whatever you want

380
00:20:09,480 --> 00:20:12,679
fair enough yeah

381
00:20:14,820 --> 00:20:17,720
any more questions

382
00:20:21,780 --> 00:20:24,620
thank you very much

383
00:20:27,710 --> 00:20:40,759
[Music]

384
00:20:43,930 --> 00:20:49,200
[Music]

385
00:20:49,200 --> 00:20:51,860
thank you

