1
00:00:00,080 --> 00:00:12,710
[Music]

2
00:00:16,290 --> 00:00:18,680
[Music]

3
00:00:18,680 --> 00:00:21,520
thank you

4
00:00:21,520 --> 00:00:24,019
[Music]

5
00:00:24,019 --> 00:00:26,460
all right welcome back sorry for the

6
00:00:26,460 --> 00:00:28,680
delay we'll now continue with go

7
00:00:28,680 --> 00:00:32,359
offensive building blocks by cost

8
00:00:33,660 --> 00:00:38,160
thanks uh I will talk about

9
00:00:38,160 --> 00:00:40,140
um offensive stuff

10
00:00:40,140 --> 00:00:43,260
how you can build your own let's say

11
00:00:43,260 --> 00:00:46,020
C2 or whatever you needed for offensive

12
00:00:46,020 --> 00:00:50,420
operations but in go language of course

13
00:00:51,000 --> 00:00:53,280
is there anybody here doing some

14
00:00:53,280 --> 00:00:55,440
offensive stuff I don't ask if it's

15
00:00:55,440 --> 00:00:56,940
legal or illegal

16
00:00:56,940 --> 00:00:59,280
only if it's offensive

17
00:00:59,280 --> 00:01:02,820
no one oh we have one okay so that's it

18
00:01:02,820 --> 00:01:05,339
two wow

19
00:01:05,339 --> 00:01:07,799
we have two okay I think we have more

20
00:01:07,799 --> 00:01:09,560
right

21
00:01:09,560 --> 00:01:13,560
so uh

22
00:01:13,680 --> 00:01:19,320
I guess you come to the mind when you

23
00:01:19,320 --> 00:01:21,540
want to you have to develop your own

24
00:01:21,540 --> 00:01:22,799
tool right

25
00:01:22,799 --> 00:01:25,920
either because of every elevation or you

26
00:01:25,920 --> 00:01:27,960
you need some specific feature or so on

27
00:01:27,960 --> 00:01:31,560
so this is more about how

28
00:01:31,560 --> 00:01:34,500
how uh usually

29
00:01:34,500 --> 00:01:36,720
I will develop

30
00:01:36,720 --> 00:01:40,680
and that's it a little bit about me

31
00:01:40,680 --> 00:01:43,259
um I'm vladko or people now means cost

32
00:01:43,259 --> 00:01:45,659
I'm CTO adiverter which is Information

33
00:01:45,659 --> 00:01:47,759
Security based company

34
00:01:47,759 --> 00:01:50,700
we have red and blue team and governance

35
00:01:50,700 --> 00:01:53,460
risk compliance and so on and so on I

36
00:01:53,460 --> 00:01:55,140
was leading with a team for quite some

37
00:01:55,140 --> 00:01:56,040
time

38
00:01:56,040 --> 00:01:59,100
but now have broader duties and I've

39
00:01:59,100 --> 00:02:01,079
been in security for more than 20 years

40
00:02:01,079 --> 00:02:02,520
right now

41
00:02:02,520 --> 00:02:06,540
and I've done a lot of Open Source tools

42
00:02:06,540 --> 00:02:09,959
and software I also as a contributor but

43
00:02:09,959 --> 00:02:12,360
also as an author so

44
00:02:12,360 --> 00:02:14,700
there was a lot of these things so for

45
00:02:14,700 --> 00:02:17,160
example if you've been using nmap NSC

46
00:02:17,160 --> 00:02:19,800
script to find log4j probably you used

47
00:02:19,800 --> 00:02:22,500
my script and of course during all these

48
00:02:22,500 --> 00:02:23,700
years I

49
00:02:23,700 --> 00:02:27,080
I don't know I gathered some of the uh

50
00:02:27,080 --> 00:02:30,780
certificates ranging from standard

51
00:02:30,780 --> 00:02:33,060
governance risk and compliance to of

52
00:02:33,060 --> 00:02:35,760
course some of the security ones

53
00:02:35,760 --> 00:02:38,280
of course I'm Enthusiast for martial

54
00:02:38,280 --> 00:02:39,840
arts so

55
00:02:39,840 --> 00:02:43,379
uh I try to also cover all aspects of

56
00:02:43,379 --> 00:02:45,560
security

57
00:02:45,720 --> 00:02:47,519
uh

58
00:02:47,519 --> 00:02:50,340
we will cover More Than This of course

59
00:02:50,340 --> 00:02:52,140
hopefully

60
00:02:52,140 --> 00:02:55,680
and I think we will enjoy of course

61
00:02:55,680 --> 00:02:57,840
please ask questions

62
00:02:57,840 --> 00:02:59,940
every time I always like coming here

63
00:02:59,940 --> 00:03:03,420
because I never missed actually neither

64
00:03:03,420 --> 00:03:06,480
one from the first one balcon and I

65
00:03:06,480 --> 00:03:08,160
always find some new interesting ideas

66
00:03:08,160 --> 00:03:11,220
one you ask something or help me with

67
00:03:11,220 --> 00:03:12,360
something so

68
00:03:12,360 --> 00:03:15,680
please continue to do so

69
00:03:15,780 --> 00:03:20,220
so uh let's say there's also one other

70
00:03:20,220 --> 00:03:22,620
part right the other part is actually to

71
00:03:22,620 --> 00:03:24,120
use some existing tools either open

72
00:03:24,120 --> 00:03:25,560
source or commercial

73
00:03:25,560 --> 00:03:28,680
uh if you see on the market or from the

74
00:03:28,680 --> 00:03:31,080
news even the criminals got lazy right

75
00:03:31,080 --> 00:03:33,120
they're not writing their own tool

76
00:03:33,120 --> 00:03:35,940
they're trying to buy one or steal one

77
00:03:35,940 --> 00:03:38,280
or use the Open Source One if they are

78
00:03:38,280 --> 00:03:40,200
poor one right or just starting or

79
00:03:40,200 --> 00:03:43,140
criminal startup right

80
00:03:43,140 --> 00:03:45,420
so I will talk more about that other

81
00:03:45,420 --> 00:03:47,879
part right where you actually

82
00:03:47,879 --> 00:03:51,120
try to write your own tool or C2 or

83
00:03:51,120 --> 00:03:54,620
whatever whatever you need for offensive

84
00:03:54,620 --> 00:03:57,840
and the other thing is uh yeah that

85
00:03:57,840 --> 00:03:59,340
existing ones

86
00:03:59,340 --> 00:04:01,260
if you're not so familiar with them and

87
00:04:01,260 --> 00:04:03,180
you just use the genetics most of these

88
00:04:03,180 --> 00:04:04,019
things

89
00:04:04,019 --> 00:04:06,420
can be easily fingerprinted and found

90
00:04:06,420 --> 00:04:07,500
right

91
00:04:07,500 --> 00:04:09,799
because most of them are actually

92
00:04:09,799 --> 00:04:12,860
worldwide known and globally known so

93
00:04:12,860 --> 00:04:15,480
uh this is one of the ways how to find

94
00:04:15,480 --> 00:04:17,519
it with a fingerprinting tool from the

95
00:04:17,519 --> 00:04:19,500
Salesforce jar right

96
00:04:19,500 --> 00:04:22,260
uh there are of of course the other ways

97
00:04:22,260 --> 00:04:25,800
and so on and so on uh I will not waste

98
00:04:25,800 --> 00:04:28,500
time on on this this ways how to detect

99
00:04:28,500 --> 00:04:29,220
them

100
00:04:29,220 --> 00:04:31,740
but actually I will spend more time

101
00:04:31,740 --> 00:04:34,800
about the goal uh anyone programming go

102
00:04:34,800 --> 00:04:36,780
right now

103
00:04:36,780 --> 00:04:40,380
okay we have a lot of people great but

104
00:04:40,380 --> 00:04:42,440
for the others which are not

105
00:04:42,440 --> 00:04:45,780
this is the reasons why the goal is good

106
00:04:45,780 --> 00:04:48,000
language actually to program something

107
00:04:48,000 --> 00:04:50,280
like that

108
00:04:50,280 --> 00:04:52,259
finger four is portable if I write

109
00:04:52,259 --> 00:04:54,720
something there probably I could compile

110
00:04:54,720 --> 00:04:58,080
it on most of the platforms the payload

111
00:04:58,080 --> 00:04:59,960
should be delivered right

112
00:04:59,960 --> 00:05:02,600
uh and the

113
00:05:02,600 --> 00:05:05,400
easiest thing is that it's at the same

114
00:05:05,400 --> 00:05:08,400
level uh you can write some high level

115
00:05:08,400 --> 00:05:10,800
language constructs and still use the

116
00:05:10,800 --> 00:05:12,660
low level things

117
00:05:12,660 --> 00:05:15,120
so that means even the C language

118
00:05:15,120 --> 00:05:17,759
and on the end you actually get in most

119
00:05:17,759 --> 00:05:19,740
of the cases static binary which you can

120
00:05:19,740 --> 00:05:21,840
run without any dependencies

121
00:05:21,840 --> 00:05:24,240
so you never know where the payload

122
00:05:24,240 --> 00:05:26,699
might end up so you don't know the

123
00:05:26,699 --> 00:05:28,320
environment so you should have

124
00:05:28,320 --> 00:05:29,759
everything with you and this is the

125
00:05:29,759 --> 00:05:31,919
perfect way for someone who is actually

126
00:05:31,919 --> 00:05:34,139
attacking the machine he doesn't have to

127
00:05:34,139 --> 00:05:36,660
have any prerequisites you can just lay

128
00:05:36,660 --> 00:05:40,259
down the tool where it is right

129
00:05:40,259 --> 00:05:43,320
and this is one of the examples how you

130
00:05:43,320 --> 00:05:45,479
can just easily write C right

131
00:05:45,479 --> 00:05:49,680
this is uh perfectly good in in golang

132
00:05:49,680 --> 00:05:51,600
where you can actually just write the C

133
00:05:51,600 --> 00:05:53,520
code inside the comments

134
00:05:53,520 --> 00:05:56,220
and you you can actually call it from

135
00:05:56,220 --> 00:05:57,000
the go

136
00:05:57,000 --> 00:06:00,240
and you can really write useful stuff

137
00:06:00,240 --> 00:06:02,639
here uh of course there are some

138
00:06:02,639 --> 00:06:04,919
downsides if you use this that means

139
00:06:04,919 --> 00:06:08,580
usually uh it depends on the C compiler

140
00:06:08,580 --> 00:06:10,500
or the platform if

141
00:06:10,500 --> 00:06:13,380
if if it will be supported so yeah it

142
00:06:13,380 --> 00:06:14,460
can be done

143
00:06:14,460 --> 00:06:18,060
but it's not supportable anymore right

144
00:06:18,060 --> 00:06:20,940
so at least I try to avoid it

145
00:06:20,940 --> 00:06:22,500
there are other ways how you can

146
00:06:22,500 --> 00:06:24,419
actually accomplish the same things

147
00:06:24,419 --> 00:06:26,759
uh you have like the Cisco library and

148
00:06:26,759 --> 00:06:28,319
so on and so on which you can actually

149
00:06:28,319 --> 00:06:29,639
use and

150
00:06:29,639 --> 00:06:32,039
call the ciscoll whatever it is right

151
00:06:32,039 --> 00:06:36,139
from from the same operating system

152
00:06:36,360 --> 00:06:37,500
so

153
00:06:37,500 --> 00:06:39,800
uh for those who are not familiar with

154
00:06:39,800 --> 00:06:42,139
all those

155
00:06:42,139 --> 00:06:45,539
uh let's say terminology

156
00:06:45,539 --> 00:06:49,080
uh I'll just have this brief picture and

157
00:06:49,080 --> 00:06:51,840
telling that I will focus mostly

158
00:06:51,840 --> 00:06:53,280
on

159
00:06:53,280 --> 00:06:56,280
let's say exploitation part and post

160
00:06:56,280 --> 00:06:58,259
exploitation and not on vulnerability

161
00:06:58,259 --> 00:07:00,620
and how to actually get the first

162
00:07:00,620 --> 00:07:03,900
footholder right so I'll spend more time

163
00:07:03,900 --> 00:07:08,699
on actually what what after that right

164
00:07:08,699 --> 00:07:11,580
and as you know

165
00:07:11,580 --> 00:07:14,220
we have vulnerability the vulnerability

166
00:07:14,220 --> 00:07:15,720
is exploited and then you have the

167
00:07:15,720 --> 00:07:18,000
payload right and this is actually that

168
00:07:18,000 --> 00:07:20,160
last step I'll make sure I will talk

169
00:07:20,160 --> 00:07:21,539
about

170
00:07:21,539 --> 00:07:23,580
so if we go

171
00:07:23,580 --> 00:07:26,340
from the start and from from the basic

172
00:07:26,340 --> 00:07:28,440
stuff so we are everybody on the same

173
00:07:28,440 --> 00:07:29,880
level

174
00:07:29,880 --> 00:07:32,880
and first times we had bind Shell Code

175
00:07:32,880 --> 00:07:35,880
right it was like uh 20 years ago even

176
00:07:35,880 --> 00:07:37,020
more right

177
00:07:37,020 --> 00:07:39,360
and everybody were running without

178
00:07:39,360 --> 00:07:41,819
firewall everybody was happy having

179
00:07:41,819 --> 00:07:45,020
shell everywhere and so on right

180
00:07:45,020 --> 00:07:48,000
this is actually the equivalent down

181
00:07:48,000 --> 00:07:50,039
there right with the netcat I guess you

182
00:07:50,039 --> 00:07:52,139
know already something like this

183
00:07:52,139 --> 00:07:53,520
and

184
00:07:53,520 --> 00:07:56,400
actually if you look at the Go

185
00:07:56,400 --> 00:07:58,500
programming language is actually the

186
00:07:58,500 --> 00:08:00,060
same it's quite easy to actually get

187
00:08:00,060 --> 00:08:03,720
some easy Shell Code on just using the

188
00:08:03,720 --> 00:08:04,620
pure

189
00:08:04,620 --> 00:08:07,199
go programming language

190
00:08:07,199 --> 00:08:09,960
so yeah it's the basic one you just set

191
00:08:09,960 --> 00:08:12,960
up one listener and then accept each

192
00:08:12,960 --> 00:08:15,780
connection and then redirect everything

193
00:08:15,780 --> 00:08:18,300
from the process to the connection you

194
00:08:18,300 --> 00:08:20,879
have it's quite easy and it doesn't have

195
00:08:20,879 --> 00:08:22,259
to be

196
00:08:22,259 --> 00:08:25,139
in in assembly right and now it is

197
00:08:25,139 --> 00:08:27,479
portable

198
00:08:27,479 --> 00:08:32,279
okay few years later everybody learned

199
00:08:32,279 --> 00:08:34,620
how to use firewall close the close the

200
00:08:34,620 --> 00:08:37,380
gaps close the ports right

201
00:08:37,380 --> 00:08:41,640
and you couldn't connect directly now to

202
00:08:41,640 --> 00:08:45,060
the victim or to the attacking side

203
00:08:45,060 --> 00:08:46,440
right

204
00:08:46,440 --> 00:08:47,640
so

205
00:08:47,640 --> 00:08:49,920
the other thing is you just use right

206
00:08:49,920 --> 00:08:51,480
reverse connection where you actually

207
00:08:51,480 --> 00:08:53,820
initiate the connection from the victim

208
00:08:53,820 --> 00:08:56,519
to yourself so that way is you're

209
00:08:56,519 --> 00:08:59,279
bypassing that first let's say Ingress

210
00:08:59,279 --> 00:09:01,760
firewall

211
00:09:02,160 --> 00:09:05,160
for some language purists would say that

212
00:09:05,160 --> 00:09:07,620
you can actually get this one even

213
00:09:07,620 --> 00:09:11,880
smaller anybody played battle golfing

214
00:09:11,880 --> 00:09:14,399
so it's it's the discipline where you

215
00:09:14,399 --> 00:09:16,140
actually try to write shorter code right

216
00:09:16,140 --> 00:09:17,760
and pearl you can really write the short

217
00:09:17,760 --> 00:09:18,899
code

218
00:09:18,899 --> 00:09:23,100
but in uh you can also right right

219
00:09:23,100 --> 00:09:25,560
so you can even write it in much less

220
00:09:25,560 --> 00:09:27,480
code it

221
00:09:27,480 --> 00:09:31,080
uh let's say further right everybody now

222
00:09:31,080 --> 00:09:33,060
learned okay

223
00:09:33,060 --> 00:09:34,320
uh

224
00:09:34,320 --> 00:09:37,680
we will close the address filtering as

225
00:09:37,680 --> 00:09:39,540
well right we will not

226
00:09:39,540 --> 00:09:42,480
allow anyone connecting from the server

227
00:09:42,480 --> 00:09:45,360
to anywhere outside of the world right

228
00:09:45,360 --> 00:09:47,700
so we will just allow from that part

229
00:09:47,700 --> 00:09:50,519
where our web server is listening right

230
00:09:50,519 --> 00:09:52,140
hopefully we are living in that world

231
00:09:52,140 --> 00:09:56,700
right now some areas somewhere now right

232
00:09:56,700 --> 00:09:58,800
and

233
00:09:58,800 --> 00:10:01,680
the solution here is actually to use

234
00:10:01,680 --> 00:10:04,800
some kind of

235
00:10:04,800 --> 00:10:07,560
uh injecting into web app right

236
00:10:07,560 --> 00:10:10,019
if it's PHP it's much much easier right

237
00:10:10,019 --> 00:10:13,380
you you can just put somewhere some PHP

238
00:10:13,380 --> 00:10:14,940
file which will actually download the

239
00:10:14,940 --> 00:10:17,640
connections and so on and so on this is

240
00:10:17,640 --> 00:10:20,519
something which is a standard like real

241
00:10:20,519 --> 00:10:23,880
George if you ever use that tool you can

242
00:10:23,880 --> 00:10:26,279
just put it somewhere where web app is

243
00:10:26,279 --> 00:10:29,100
sitting or recompile the app if if

244
00:10:29,100 --> 00:10:31,200
there's there and then just add one

245
00:10:31,200 --> 00:10:33,899
additional endpoint which will Point

246
00:10:33,899 --> 00:10:35,580
somewhere

247
00:10:35,580 --> 00:10:37,320
to the attacker so attacker can call

248
00:10:37,320 --> 00:10:40,380
actually the 10 point and then tunnel

249
00:10:40,380 --> 00:10:44,240
everything via sucks five right

250
00:10:44,420 --> 00:10:50,040
this is also one of the ways to get in

251
00:10:50,040 --> 00:10:53,220
actually together shell back and of

252
00:10:53,220 --> 00:10:56,579
course we have for example DNS tunneling

253
00:10:56,579 --> 00:11:00,079
which is usually used in

254
00:11:00,480 --> 00:11:02,720
scenarios where you actually

255
00:11:02,720 --> 00:11:05,100
do everything communication with the

256
00:11:05,100 --> 00:11:07,260
attacker with the DNS right

257
00:11:07,260 --> 00:11:09,000
there are downsides of this and

258
00:11:09,000 --> 00:11:11,339
advantages advantages you actually talk

259
00:11:11,339 --> 00:11:13,320
with with the DNS server

260
00:11:13,320 --> 00:11:15,740
of

261
00:11:15,740 --> 00:11:19,140
let's see so we're actually talking with

262
00:11:19,140 --> 00:11:21,360
the DNS server of the victim and the

263
00:11:21,360 --> 00:11:23,279
victim is actually talking to some DNS

264
00:11:23,279 --> 00:11:25,079
ever on the internet and then

265
00:11:25,079 --> 00:11:27,300
on the end up you actually talking with

266
00:11:27,300 --> 00:11:30,060
attackers so that means you don't know

267
00:11:30,060 --> 00:11:34,019
where that ends up on the end right

268
00:11:34,019 --> 00:11:35,760
and it can change

269
00:11:35,760 --> 00:11:38,579
this is something that

270
00:11:38,579 --> 00:11:40,800
you have different tools which probably

271
00:11:40,800 --> 00:11:42,839
may be used in the past like your Dean

272
00:11:42,839 --> 00:11:45,720
which is full TCP over DNS and so on and

273
00:11:45,720 --> 00:11:47,339
so on and this is how you can actually

274
00:11:47,339 --> 00:11:48,779
bypass

275
00:11:48,779 --> 00:11:51,060
a lot of this uh

276
00:11:51,060 --> 00:11:53,399
traffic filtering rules right you have

277
00:11:53,399 --> 00:11:55,800
to allow the DNS to go through

278
00:11:55,800 --> 00:11:58,019
and this is actually

279
00:11:58,019 --> 00:12:00,200
just pure example how you can actually

280
00:12:00,200 --> 00:12:03,300
easily write DNS tunneling using Google

281
00:12:03,300 --> 00:12:05,640
programming language you actually just

282
00:12:05,640 --> 00:12:08,100
found the shell right which one you are

283
00:12:08,100 --> 00:12:10,440
using and then

284
00:12:10,440 --> 00:12:12,660
you use one wonderful Library

285
00:12:12,660 --> 00:12:15,240
which is Joshua

286
00:12:15,240 --> 00:12:17,940
and you actually just redirect all the

287
00:12:17,940 --> 00:12:20,220
output there and that's it right

288
00:12:20,220 --> 00:12:23,820
it's like 10 lines

289
00:12:23,820 --> 00:12:26,880
uh yeah we can now go and talk about the

290
00:12:26,880 --> 00:12:29,339
other things like mtls and so on and so

291
00:12:29,339 --> 00:12:31,980
on but the theory behind all of this is

292
00:12:31,980 --> 00:12:33,680
actually the same

293
00:12:33,680 --> 00:12:36,660
we have the shell we we use some kind of

294
00:12:36,660 --> 00:12:38,459
a library for tunneling

295
00:12:38,459 --> 00:12:42,600
and we actually get the shell back

296
00:12:42,600 --> 00:12:47,639
so I don't want to waste more time there

297
00:12:47,639 --> 00:12:50,959
uh I guess

298
00:12:51,120 --> 00:12:52,800
you you know

299
00:12:52,800 --> 00:12:55,440
it's everything very similar but I hear

300
00:12:55,440 --> 00:12:57,420
you cry okay but what about already

301
00:12:57,420 --> 00:12:59,940
written Shell Code I want to run my own

302
00:12:59,940 --> 00:13:01,740
Shell Code I have already machine ready

303
00:13:01,740 --> 00:13:03,600
Shell Code

304
00:13:03,600 --> 00:13:05,700
I don't know generated from Metasploit

305
00:13:05,700 --> 00:13:08,220
to metabrator or I don't want to I want

306
00:13:08,220 --> 00:13:09,959
to run my cobblestrike I want to run

307
00:13:09,959 --> 00:13:11,820
whatever right

308
00:13:11,820 --> 00:13:14,399
or maybe any other toolkit what you what

309
00:13:14,399 --> 00:13:15,540
you have right

310
00:13:15,540 --> 00:13:19,079
even your own custom ones

311
00:13:19,079 --> 00:13:20,700
well

312
00:13:20,700 --> 00:13:23,300
it can be easier right

313
00:13:23,300 --> 00:13:26,459
uh of course the Shell Code must match

314
00:13:26,459 --> 00:13:29,279
architecture here you don't have you you

315
00:13:29,279 --> 00:13:31,200
cannot choose right multi-platform you

316
00:13:31,200 --> 00:13:33,060
have to write Shell Code for each

317
00:13:33,060 --> 00:13:34,560
platform

318
00:13:34,560 --> 00:13:36,480
but if you have the machine code ready

319
00:13:36,480 --> 00:13:39,360
one right then that's it right you you

320
00:13:39,360 --> 00:13:42,240
just uh include one Library say I want

321
00:13:42,240 --> 00:13:45,420
to run this Shell Code and here it goes

322
00:13:45,420 --> 00:13:47,579
so that means you can run it in on the

323
00:13:47,579 --> 00:13:51,720
byte array or as a base64 encoded

324
00:13:51,720 --> 00:13:54,139
payload

325
00:13:54,839 --> 00:13:56,760
yeah but I still want my interpreter

326
00:13:56,760 --> 00:13:59,040
right

327
00:13:59,040 --> 00:13:59,760
um

328
00:13:59,760 --> 00:14:02,639
this is actually funny thing is it

329
00:14:02,639 --> 00:14:05,100
actually antiviruses usually catch the

330
00:14:05,100 --> 00:14:07,620
first stage of tomato predator and this

331
00:14:07,620 --> 00:14:09,720
one actually if you write it in pure

332
00:14:09,720 --> 00:14:13,200
gold pure c i implemented one inch for

333
00:14:13,200 --> 00:14:15,139
example in pure C like called nanomet

334
00:14:15,139 --> 00:14:17,760
and you actually bypass a lot of those

335
00:14:17,760 --> 00:14:20,339
antiviruses and this one is just

336
00:14:20,339 --> 00:14:22,440
implementation droids purego

337
00:14:22,440 --> 00:14:25,500
implementation of first stage of

338
00:14:25,500 --> 00:14:27,540
metabrator and then we actually load the

339
00:14:27,540 --> 00:14:30,240
Shell Code whatever it is like DCP HTTP

340
00:14:30,240 --> 00:14:32,880
https and so on

341
00:14:32,880 --> 00:14:35,220
it's actually a lot of ways on Herschel

342
00:14:35,220 --> 00:14:37,139
from the sea stream

343
00:14:37,139 --> 00:14:39,420
of course there are a lot of other

344
00:14:39,420 --> 00:14:41,220
libraries which I found so you don't

345
00:14:41,220 --> 00:14:43,500
have to waste time I actually spent

346
00:14:43,500 --> 00:14:45,540
quite some time actually looking at the

347
00:14:45,540 --> 00:14:48,420
libraries at the first like uh three

348
00:14:48,420 --> 00:14:49,740
four years ago

349
00:14:49,740 --> 00:14:52,079
there weren't so many libraries there so

350
00:14:52,079 --> 00:14:55,440
we had to write our own but now it's the

351
00:14:55,440 --> 00:14:57,959
the situation quite changed you have

352
00:14:57,959 --> 00:15:00,600
from the C extension so this Brimstone

353
00:15:00,600 --> 00:15:02,760
for example Library actually they

354
00:15:02,760 --> 00:15:05,519
implemented that approach with using C

355
00:15:05,519 --> 00:15:08,220
extensions right so they actually call

356
00:15:08,220 --> 00:15:10,860
they actually call the Shell Code from

357
00:15:10,860 --> 00:15:12,120
the sea

358
00:15:12,120 --> 00:15:14,459
have its own advantages but on the other

359
00:15:14,459 --> 00:15:17,940
hand it's not supportable right they're

360
00:15:17,940 --> 00:15:21,620
also like a good Windows examples

361
00:15:22,440 --> 00:15:26,399
that gosh alcohol from neon dong dog

362
00:15:26,399 --> 00:15:29,459
uh it's actually quite good because here

363
00:15:29,459 --> 00:15:31,320
you have how to inject Shell Code on

364
00:15:31,320 --> 00:15:34,620
Windows using almost any technique known

365
00:15:34,620 --> 00:15:39,480
currently in in golang uh that means you

366
00:15:39,480 --> 00:15:41,519
can actually I know start from that

367
00:15:41,519 --> 00:15:43,500
basic once create remote red to process

368
00:15:43,500 --> 00:15:46,380
following yada yada and the other things

369
00:15:46,380 --> 00:15:48,600
it's quite quite good and it's actually

370
00:15:48,600 --> 00:15:50,820
quite good even for someone who is blue

371
00:15:50,820 --> 00:15:53,420
teamer right why because he can actually

372
00:15:53,420 --> 00:15:56,399
see what it can be detected and what's

373
00:15:56,399 --> 00:15:59,279
missing so this is really take away for

374
00:15:59,279 --> 00:16:03,600
both red and blue themes

375
00:16:03,600 --> 00:16:04,860
uh

376
00:16:04,860 --> 00:16:06,620
of course

377
00:16:06,620 --> 00:16:08,880
I like better approach where it is

378
00:16:08,880 --> 00:16:10,199
multi-platform and you are actually

379
00:16:10,199 --> 00:16:14,040
calling pure ciscals so these last two I

380
00:16:14,040 --> 00:16:17,339
actually get examples

381
00:16:17,339 --> 00:16:19,199
the other thing is actually how then

382
00:16:19,199 --> 00:16:21,720
include that Shell Code right

383
00:16:21,720 --> 00:16:23,579
first thing is actually you can embed

384
00:16:23,579 --> 00:16:26,399
strings and go right uh this is the

385
00:16:26,399 --> 00:16:28,440
thing where you actually you don't have

386
00:16:28,440 --> 00:16:30,120
to change

387
00:16:30,120 --> 00:16:32,519
the source code each time you add some

388
00:16:32,519 --> 00:16:34,560
new Shell Code okay this is varshell

389
00:16:34,560 --> 00:16:36,779
code and this is the Shell Code

390
00:16:36,779 --> 00:16:39,720
there is actually a way with LD Flex

391
00:16:39,720 --> 00:16:41,880
that you can actually once you're

392
00:16:41,880 --> 00:16:44,699
building go binary you can actually

393
00:16:44,699 --> 00:16:46,800
change some variable

394
00:16:46,800 --> 00:16:50,160
but it have to be the string type you

395
00:16:50,160 --> 00:16:52,320
cannot change Boolean in digits or

396
00:16:52,320 --> 00:16:54,180
whatever and this is actually the good

397
00:16:54,180 --> 00:16:57,540
way how to actually inject the byte code

398
00:16:57,540 --> 00:16:59,279
of course

399
00:16:59,279 --> 00:17:02,360
disadvantage here is that you still need

400
00:17:02,360 --> 00:17:06,380
to build the binary again

401
00:17:06,480 --> 00:17:11,040
of course if if it's something bigger

402
00:17:11,040 --> 00:17:13,500
there are things like go in bed which is

403
00:17:13,500 --> 00:17:16,439
now in in your Go version so you don't

404
00:17:16,439 --> 00:17:18,119
have to do any any of the other

405
00:17:18,119 --> 00:17:19,380
libraries

406
00:17:19,380 --> 00:17:21,419
but it's actually including in the

407
00:17:21,419 --> 00:17:22,980
source code

408
00:17:22,980 --> 00:17:25,619
and it's similar like like Goblin data

409
00:17:25,619 --> 00:17:27,480
where you create ghost structures

410
00:17:27,480 --> 00:17:29,160
from the files you actually get

411
00:17:29,160 --> 00:17:31,919
generated pure files and then you

412
00:17:31,919 --> 00:17:34,320
compile with them together and then you

413
00:17:34,320 --> 00:17:37,200
embed everything but the other approach

414
00:17:37,200 --> 00:17:38,940
is actually Staffing it's similar to

415
00:17:38,940 --> 00:17:40,500
Windows resources where you actually

416
00:17:40,500 --> 00:17:42,419
after the compilation you can add

417
00:17:42,419 --> 00:17:44,940
dynamically or remove some files from

418
00:17:44,940 --> 00:17:48,559
the from the executable

419
00:17:48,559 --> 00:17:51,840
and can be quite useful so you don't

420
00:17:51,840 --> 00:17:54,480
have to rebuild each time

421
00:17:54,480 --> 00:17:57,000
and this is the example how you can

422
00:17:57,000 --> 00:17:59,340
actually embed for example

423
00:17:59,340 --> 00:18:01,380
uh

424
00:18:01,380 --> 00:18:04,140
files there but this is for the build

425
00:18:04,140 --> 00:18:08,460
time in going bed right and

426
00:18:08,460 --> 00:18:10,679
the problem is you have to rebuild each

427
00:18:10,679 --> 00:18:12,919
time

428
00:18:13,380 --> 00:18:15,660
and let's go to the tunneling part right

429
00:18:15,660 --> 00:18:18,299
you have to communicate somehow

430
00:18:18,299 --> 00:18:21,020
I was quite happy with

431
00:18:21,020 --> 00:18:23,760
the amox library

432
00:18:23,760 --> 00:18:25,440
it's a pure like a connection

433
00:18:25,440 --> 00:18:27,120
multiplexer

434
00:18:27,120 --> 00:18:29,700
and if you need something like a river

435
00:18:29,700 --> 00:18:30,960
socks 5

436
00:18:30,960 --> 00:18:34,559
I had implemented reversox 5 in in in go

437
00:18:34,559 --> 00:18:38,220
so you can actually get the socks five

438
00:18:38,220 --> 00:18:41,400
so you can uh actually they connect to

439
00:18:41,400 --> 00:18:43,140
you and then you can actually connect to

440
00:18:43,140 --> 00:18:45,419
them and and uh do the pivoting stuff

441
00:18:45,419 --> 00:18:47,880
easily right

442
00:18:47,880 --> 00:18:50,760
and also like uh pivoting if you have to

443
00:18:50,760 --> 00:18:53,039
embed into the app

444
00:18:53,039 --> 00:18:55,140
and of course for the understanding I

445
00:18:55,140 --> 00:18:57,299
guess you already told you so why amps

446
00:18:57,299 --> 00:19:00,900
is good you can actually Multiplex a lot

447
00:19:00,900 --> 00:19:04,020
of connections inside one single

448
00:19:04,020 --> 00:19:06,419
connection so you don't have to

449
00:19:06,419 --> 00:19:08,160
uh

450
00:19:08,160 --> 00:19:10,799
I know handling of multiple connections

451
00:19:10,799 --> 00:19:12,780
maybe if one is file transfer the other

452
00:19:12,780 --> 00:19:17,360
one is let's say some kind of tunneling

453
00:19:17,360 --> 00:19:21,000
and you can actually bypass

454
00:19:21,000 --> 00:19:22,500
do not as well

455
00:19:22,500 --> 00:19:24,600
it's standard for of course not

456
00:19:24,600 --> 00:19:27,179
traversal

457
00:19:27,179 --> 00:19:29,460
and this is usually how it looks like

458
00:19:29,460 --> 00:19:30,780
right

459
00:19:30,780 --> 00:19:33,299
the only difference is that you have

460
00:19:33,299 --> 00:19:35,840
currently

461
00:19:36,059 --> 00:19:38,520
one which is attacker server which

462
00:19:38,520 --> 00:19:40,860
actually is now socks five

463
00:19:40,860 --> 00:19:43,500
and the victim is actually connecting to

464
00:19:43,500 --> 00:19:47,039
this server and then this pretends to be

465
00:19:47,039 --> 00:19:49,980
sucks 5 server for this attacker client

466
00:19:49,980 --> 00:19:53,820
so how it's run you actually run

467
00:19:53,820 --> 00:19:56,640
first the server with same binary it's

468
00:19:56,640 --> 00:19:58,860
everything is the same binary and then

469
00:19:58,860 --> 00:20:02,100
of course uh

470
00:20:02,100 --> 00:20:04,919
you listen for the connections from the

471
00:20:04,919 --> 00:20:06,419
outside

472
00:20:06,419 --> 00:20:08,520
and on the victim you just connect with

473
00:20:08,520 --> 00:20:11,160
the password so of course you are not

474
00:20:11,160 --> 00:20:14,340
sending any or getting some guests

475
00:20:14,340 --> 00:20:17,820
unwanted guests for tunneling

476
00:20:17,820 --> 00:20:21,960
maybe sometimes that's good approach

477
00:20:21,960 --> 00:20:23,820
and of course it's supporting like

478
00:20:23,820 --> 00:20:26,820
anti-element authentication proxy and so

479
00:20:26,820 --> 00:20:29,520
on and so on and of course you can set

480
00:20:29,520 --> 00:20:31,380
the user agent whatever you want so you

481
00:20:31,380 --> 00:20:33,120
don't raise any

482
00:20:33,120 --> 00:20:36,080
big alarms

483
00:20:36,539 --> 00:20:39,299
the other thing is

484
00:20:39,299 --> 00:20:41,280
DNS monitoring

485
00:20:41,280 --> 00:20:44,360
why it's important

486
00:20:44,419 --> 00:20:47,340
usually it's good practice

487
00:20:47,340 --> 00:20:50,580
to put some strange domains to even

488
00:20:50,580 --> 00:20:52,740
which you don't connect to inside the

489
00:20:52,740 --> 00:20:53,700
binary

490
00:20:53,700 --> 00:20:56,039
and monitor for those DNS connections

491
00:20:56,039 --> 00:21:01,020
why because if somebody tries to

492
00:21:01,020 --> 00:21:03,980
uh

493
00:21:04,220 --> 00:21:06,960
resolve your domain which is very

494
00:21:06,960 --> 00:21:08,940
strange and you just use it unique for

495
00:21:08,940 --> 00:21:10,500
that binary

496
00:21:10,500 --> 00:21:12,780
that means somebody is trying to analyze

497
00:21:12,780 --> 00:21:14,580
your binary that means

498
00:21:14,580 --> 00:21:16,260
probably it's time to change your

499
00:21:16,260 --> 00:21:19,860
payload right and use something else

500
00:21:19,860 --> 00:21:23,100
so it's typical blue team Cannery right

501
00:21:23,100 --> 00:21:25,980
you actually have a

502
00:21:25,980 --> 00:21:28,559
way except that your monitor hashes on

503
00:21:28,559 --> 00:21:31,860
mirostatal on such portals and so on

504
00:21:31,860 --> 00:21:33,840
the other thing is you just monitor for

505
00:21:33,840 --> 00:21:37,260
DNS requests and if you put some unique

506
00:21:37,260 --> 00:21:40,140
DNS per Target per payload and per

507
00:21:40,140 --> 00:21:42,960
machine you can actually get quite idea

508
00:21:42,960 --> 00:21:43,679
where

509
00:21:43,679 --> 00:21:46,020
it came from

510
00:21:46,020 --> 00:21:48,360
and you have the tool which actually

511
00:21:48,360 --> 00:21:50,820
monitors all these domains so you if

512
00:21:50,820 --> 00:21:54,419
anybody gets something like

513
00:21:54,419 --> 00:21:57,480
resolving of that domain that means it

514
00:21:57,480 --> 00:22:00,320
have to be changed

515
00:22:00,360 --> 00:22:04,260
and one of the examples I I can show

516
00:22:04,260 --> 00:22:06,240
because I spent quite some time doing

517
00:22:06,240 --> 00:22:08,039
different c2s

518
00:22:08,039 --> 00:22:11,240
is for example DTI to web which is

519
00:22:11,240 --> 00:22:14,940
accessible on my GitHub and it's

520
00:22:14,940 --> 00:22:18,059
actually based on Gotti and here you can

521
00:22:18,059 --> 00:22:19,860
actually expose any Unix command on the

522
00:22:19,860 --> 00:22:21,000
web

523
00:22:21,000 --> 00:22:23,159
and you have like full TTI supported

524
00:22:23,159 --> 00:22:26,159
colors so that means like uh

525
00:22:26,159 --> 00:22:29,840
uh you start the

526
00:22:30,240 --> 00:22:33,840
uh let's say TTI to web

527
00:22:33,840 --> 00:22:36,240
and if you connect with the browser you

528
00:22:36,240 --> 00:22:37,620
can actually get

529
00:22:37,620 --> 00:22:40,440
every everything like having on the

530
00:22:40,440 --> 00:22:42,299
console and you can type commands inside

531
00:22:42,299 --> 00:22:44,960
the browser

532
00:22:45,240 --> 00:22:47,880
of course uh the same thing is on the

533
00:22:47,880 --> 00:22:50,280
window so it's multi-platform so you can

534
00:22:50,280 --> 00:22:54,059
for example start Powershell

535
00:22:54,059 --> 00:22:57,780
and of course connect uh

536
00:22:57,780 --> 00:23:00,960
and and run the commands here it's a bit

537
00:23:00,960 --> 00:23:02,580
problematic because of PTI support

538
00:23:02,580 --> 00:23:03,720
because

539
00:23:03,720 --> 00:23:05,760
Windows 10 didn't have PTI support until

540
00:23:05,760 --> 00:23:09,120
we understand and it's an update so

541
00:23:09,120 --> 00:23:11,100
it took some quite time

542
00:23:11,100 --> 00:23:13,020
and

543
00:23:13,020 --> 00:23:16,020
what's Advantage right if you ever done

544
00:23:16,020 --> 00:23:17,580
some penetration testing and you had

545
00:23:17,580 --> 00:23:19,020
like a limited shell

546
00:23:19,020 --> 00:23:21,419
you know how how it is limited of course

547
00:23:21,419 --> 00:23:22,760
you can always

548
00:23:22,760 --> 00:23:26,760
run those commands for um

549
00:23:26,760 --> 00:23:30,480
improving to PTI mode of the shell right

550
00:23:30,480 --> 00:23:33,539
but here is you get for free and you

551
00:23:33,539 --> 00:23:36,480
actually get the shell inside the

552
00:23:36,480 --> 00:23:38,580
browser so you can actually work as a

553
00:23:38,580 --> 00:23:41,400
team because you can spawn more tabs and

554
00:23:41,400 --> 00:23:43,500
so on and so on and whole team can

555
00:23:43,500 --> 00:23:45,659
actually work on the problem for

556
00:23:45,659 --> 00:23:48,740
escalating further

557
00:23:50,039 --> 00:23:53,280
of course file transference and download

558
00:23:53,280 --> 00:23:55,559
is supported so you are not limited to

559
00:23:55,559 --> 00:23:59,960
only like having a single Channel shell

560
00:24:00,059 --> 00:24:02,880
and uh

561
00:24:02,880 --> 00:24:05,520
you have also reverse mode it's similar

562
00:24:05,520 --> 00:24:09,900
as a socks 5. so that means again

563
00:24:09,900 --> 00:24:12,600
the victim is connecting again to the

564
00:24:12,600 --> 00:24:14,940
attacker server and then attacker only

565
00:24:14,940 --> 00:24:16,740
with with the browser can connect to

566
00:24:16,740 --> 00:24:21,679
each shell and actually get a

567
00:24:22,320 --> 00:24:24,840
shell inside the browser

568
00:24:24,840 --> 00:24:25,860
so

569
00:24:25,860 --> 00:24:28,260
what what how it looks like you run the

570
00:24:28,260 --> 00:24:29,940
server right with the password very

571
00:24:29,940 --> 00:24:31,860
strong password of course

572
00:24:31,860 --> 00:24:36,059
and this is on the victim side and it

573
00:24:36,059 --> 00:24:38,400
gets the shell right and then you as an

574
00:24:38,400 --> 00:24:41,159
attacker run inside the browser the

575
00:24:41,159 --> 00:24:43,320
shell and you have the shell right

576
00:24:43,320 --> 00:24:45,179
so

577
00:24:45,179 --> 00:24:48,600
it's quite more user friendly than

578
00:24:48,600 --> 00:24:50,840
before

579
00:24:51,120 --> 00:24:53,700
what that means that means you can

580
00:24:53,700 --> 00:24:55,559
actually run for example midnight

581
00:24:55,559 --> 00:24:58,440
Commander or or any other command which

582
00:24:58,440 --> 00:25:00,960
have Interactive

583
00:25:00,960 --> 00:25:03,210
comments

584
00:25:03,210 --> 00:25:04,679
[Music]

585
00:25:04,679 --> 00:25:07,320
but we don't have to stop here right

586
00:25:07,320 --> 00:25:10,559
since it's HTTP we can amplify

587
00:25:10,559 --> 00:25:13,340
everything right

588
00:25:13,620 --> 00:25:17,820
it's time that such shells get a once

589
00:25:17,820 --> 00:25:20,780
beautiful API right so you can actually

590
00:25:20,780 --> 00:25:24,059
like run post requests to execute some

591
00:25:24,059 --> 00:25:26,100
command command there and so on and so

592
00:25:26,100 --> 00:25:28,320
on so it can be quite interesting to

593
00:25:28,320 --> 00:25:30,720
automatize every post exploitation

594
00:25:30,720 --> 00:25:34,080
action there also

595
00:25:34,080 --> 00:25:36,000
things like

596
00:25:36,000 --> 00:25:37,559
exfiltration

597
00:25:37,559 --> 00:25:38,940
can be done

598
00:25:38,940 --> 00:25:41,100
by compressing on one side and the

599
00:25:41,100 --> 00:25:42,620
compressing on the other side because

600
00:25:42,620 --> 00:25:45,240
actual this is not a reading whole

601
00:25:45,240 --> 00:25:48,000
request but streaming so for example the

602
00:25:48,000 --> 00:25:50,520
last request can actually you can run

603
00:25:50,520 --> 00:25:53,059
the command to zip everything on on the

604
00:25:53,059 --> 00:25:58,260
uh or zip on on that side and start one

605
00:25:58,260 --> 00:26:00,000
zip on the other side

606
00:26:00,000 --> 00:26:04,039
uh easily and automatically

607
00:26:04,080 --> 00:26:06,779
and the other thing is

608
00:26:06,779 --> 00:26:09,240
yeah you can run all those shelves which

609
00:26:09,240 --> 00:26:11,580
I showed you with everything so that

610
00:26:11,580 --> 00:26:12,919
means

611
00:26:12,919 --> 00:26:15,419
you can also get a meta pressure shell

612
00:26:15,419 --> 00:26:16,500
right

613
00:26:16,500 --> 00:26:21,240
you just send enable on the agent that

614
00:26:21,240 --> 00:26:22,700
you want the shell

615
00:26:22,700 --> 00:26:24,480
on what

616
00:26:24,480 --> 00:26:27,659
uh shell agents should connect to and

617
00:26:27,659 --> 00:26:29,580
you just send what type

618
00:26:29,580 --> 00:26:31,980
of the payload I just chose accept

619
00:26:31,980 --> 00:26:34,740
language because if it's some other ones

620
00:26:34,740 --> 00:26:37,799
right probably for some custom headers

621
00:26:37,799 --> 00:26:40,440
probably it will raise alarms so accept

622
00:26:40,440 --> 00:26:42,539
language looks quite good to actually

623
00:26:42,539 --> 00:26:45,539
say what kind of shell you want right

624
00:26:45,539 --> 00:26:48,539
and then of course you get a shell and

625
00:26:48,539 --> 00:26:52,279
rest I guess you know better than me

626
00:26:52,279 --> 00:26:56,400
the other example is of course

627
00:26:56,400 --> 00:26:57,900
uh

628
00:26:57,900 --> 00:26:59,520
uh you can run

629
00:26:59,520 --> 00:27:02,100
Json

630
00:27:02,100 --> 00:27:04,620
so you can actually say okay

631
00:27:04,620 --> 00:27:06,720
run this Shell Code with this Json

632
00:27:06,720 --> 00:27:10,919
base64 encoded and you get something

633
00:27:10,919 --> 00:27:11,940
like

634
00:27:11,940 --> 00:27:14,159
metoprator again because this is the

635
00:27:14,159 --> 00:27:16,799
same meter pressure payload just as a

636
00:27:16,799 --> 00:27:20,640
encoded base64.

637
00:27:20,640 --> 00:27:22,980
so yeah it's similar

638
00:27:22,980 --> 00:27:26,340
what I find it useful to actually in

639
00:27:26,340 --> 00:27:28,980
such shells to have a

640
00:27:28,980 --> 00:27:31,620
for testing for for the community to

641
00:27:31,620 --> 00:27:34,140
container payloads right like points and

642
00:27:34,140 --> 00:27:35,400
everything in for example inside the

643
00:27:35,400 --> 00:27:38,880
kubernetes let's see what this

644
00:27:38,880 --> 00:27:41,820
container can do to other environments

645
00:27:41,820 --> 00:27:44,700
right to other pods to to same container

646
00:27:44,700 --> 00:27:46,260
and so on so this is quite actually good

647
00:27:46,260 --> 00:27:48,299
for pivoting tests and segmentation

648
00:27:48,299 --> 00:27:50,159
tests because you can actually just add

649
00:27:50,159 --> 00:27:52,260
one single binary and have all these

650
00:27:52,260 --> 00:27:54,000
features and whistles

651
00:27:54,000 --> 00:27:56,940
and you actually

652
00:27:56,940 --> 00:27:59,820
don't have problems with

653
00:27:59,820 --> 00:28:01,260
uh

654
00:28:01,260 --> 00:28:04,020
proxy balancers https

655
00:28:04,020 --> 00:28:07,380
reverse and so on

656
00:28:07,380 --> 00:28:10,620
and of course I guess you listened I

657
00:28:10,620 --> 00:28:13,039
hope you listened like

658
00:28:13,039 --> 00:28:16,980
Sandra had a yesterday would talk about

659
00:28:16,980 --> 00:28:20,279
the incidents and the incidents there

660
00:28:20,279 --> 00:28:22,860
were a lot of files dropped last time

661
00:28:22,860 --> 00:28:25,080
right you heard like uh

662
00:28:25,080 --> 00:28:29,000
I I remember some

663
00:28:29,000 --> 00:28:32,059
proxy tool and so on and so on

664
00:28:32,059 --> 00:28:35,279
actually everything is now moving

665
00:28:35,279 --> 00:28:37,440
towards or actually moved everything now

666
00:28:37,440 --> 00:28:40,320
towards the memory right so you don't

667
00:28:40,320 --> 00:28:43,080
want to have everything dropped on the

668
00:28:43,080 --> 00:28:45,840
disk and so on so everything can be run

669
00:28:45,840 --> 00:28:48,600
actually from the memory the go binary

670
00:28:48,600 --> 00:28:50,880
and also the payload which go binary

671
00:28:50,880 --> 00:28:54,539
loads and this would actually would

672
00:28:54,539 --> 00:28:56,960
help a lot at Docker to actually hide

673
00:28:56,960 --> 00:29:00,600
its presence right and this is just one

674
00:29:00,600 --> 00:29:04,440
of the examples which are quite good in

675
00:29:04,440 --> 00:29:06,840
actually having that state

676
00:29:06,840 --> 00:29:08,120
so

677
00:29:08,120 --> 00:29:11,039
donut is let's stand up the project

678
00:29:11,039 --> 00:29:12,900
probably heard for it and this is

679
00:29:12,900 --> 00:29:16,020
actually implementation purgo

680
00:29:16,020 --> 00:29:18,840
and I actually it was quite some time

681
00:29:18,840 --> 00:29:19,799
ago

682
00:29:19,799 --> 00:29:22,620
uh works on a go memory module with

683
00:29:22,620 --> 00:29:25,919
virus and we actually had a quite good

684
00:29:25,919 --> 00:29:29,399
until donut appeared success with

685
00:29:29,399 --> 00:29:32,640
running file lists payloads

686
00:29:32,640 --> 00:29:34,679
and government exits is quite good to

687
00:29:34,679 --> 00:29:37,799
actually run code from memory on the

688
00:29:37,799 --> 00:29:39,299
your Nixon

689
00:29:39,299 --> 00:29:40,620
Linux

690
00:29:40,620 --> 00:29:43,158
site

691
00:29:43,520 --> 00:29:47,220
of course there's also problem

692
00:29:47,220 --> 00:29:49,260
how from the blue side you can actually

693
00:29:49,260 --> 00:29:50,940
reverse all the things and see what's

694
00:29:50,940 --> 00:29:52,200
happening right

695
00:29:52,200 --> 00:29:53,940
one of the good tips is that you

696
00:29:53,940 --> 00:29:56,960
actually have environment variables

697
00:29:56,960 --> 00:29:59,940
which you can actually turn on and see

698
00:29:59,940 --> 00:30:02,279
what's happening with the binary so if

699
00:30:02,279 --> 00:30:04,740
attacker forgot to actually

700
00:30:04,740 --> 00:30:07,320
remove such things you can actually get

701
00:30:07,320 --> 00:30:10,559
a lot of information inside

702
00:30:10,559 --> 00:30:13,440
so yeah and also if you are looking for

703
00:30:13,440 --> 00:30:17,039
a some kind of static analysis like Ida

704
00:30:17,039 --> 00:30:18,740
Pro from version

705
00:30:18,740 --> 00:30:20,659
7.6

706
00:30:20,659 --> 00:30:24,240
actually have good support for go

707
00:30:24,240 --> 00:30:26,640
and you have like a gidra tool to

708
00:30:26,640 --> 00:30:29,220
actually get a good grasp what's going

709
00:30:29,220 --> 00:30:30,980
on with the gobinder

710
00:30:30,980 --> 00:30:34,500
now it's a good time actually for

711
00:30:34,500 --> 00:30:37,140
reversing because earlier it was much

712
00:30:37,140 --> 00:30:39,860
harder for everyone to analyze

713
00:30:39,860 --> 00:30:42,600
of course it's not impossible

714
00:30:42,600 --> 00:30:45,779
but it was much harder

715
00:30:45,779 --> 00:30:47,820
and

716
00:30:47,820 --> 00:30:50,820
garble comes to the rescue in this stage

717
00:30:50,820 --> 00:30:52,919
because it can help to actually

718
00:30:52,919 --> 00:30:56,039
obfuscate all those things and it will

719
00:30:56,039 --> 00:30:59,700
make much harder for someone who is

720
00:30:59,700 --> 00:31:01,380
doing analysis

721
00:31:01,380 --> 00:31:04,200
uh this is just example work for example

722
00:31:04,200 --> 00:31:07,980
light and Tiny mode is doing

723
00:31:07,980 --> 00:31:10,799
it can actually remove a lot of those

724
00:31:10,799 --> 00:31:12,240
things which can be found in Google

725
00:31:12,240 --> 00:31:15,480
binary and internal debug by default and

726
00:31:15,480 --> 00:31:17,220
so on and so on

727
00:31:17,220 --> 00:31:21,000
and it's just like a install way you can

728
00:31:21,000 --> 00:31:23,700
actually install the tool and instead of

729
00:31:23,700 --> 00:31:25,679
running go build you just say garble

730
00:31:25,679 --> 00:31:28,440
build and everything is garbled so it

731
00:31:28,440 --> 00:31:30,059
will take much more time for someone who

732
00:31:30,059 --> 00:31:34,520
is doing analysis on such binary

733
00:31:34,559 --> 00:31:36,960
so yeah

734
00:31:36,960 --> 00:31:39,299
really looks good

735
00:31:39,299 --> 00:31:40,740
so

736
00:31:40,740 --> 00:31:43,020
in short

737
00:31:43,020 --> 00:31:45,240
I think I covered everything from the

738
00:31:45,240 --> 00:31:47,159
red team side

739
00:31:47,159 --> 00:31:48,600
so

740
00:31:48,600 --> 00:31:51,120
you you can actually get a grasp of

741
00:31:51,120 --> 00:31:53,159
basic blocks how to build it I spent

742
00:31:53,159 --> 00:31:55,799
quite some time on looking at all those

743
00:31:55,799 --> 00:31:58,740
things few years and

744
00:31:58,740 --> 00:32:01,200
I think you can get idea even if you

745
00:32:01,200 --> 00:32:02,760
want to develop something like this in

746
00:32:02,760 --> 00:32:06,299
in other language it's uh quite

747
00:32:06,299 --> 00:32:09,480
good and I just don't like spoon feeding

748
00:32:09,480 --> 00:32:11,100
so I guess this is just enough that you

749
00:32:11,100 --> 00:32:14,760
get pointers how you can get going very

750
00:32:14,760 --> 00:32:16,020
quick

751
00:32:16,020 --> 00:32:17,159
I guess

752
00:32:17,159 --> 00:32:20,640
even for the blue teamers you there's a

753
00:32:20,640 --> 00:32:22,740
lot of things which you can see which

754
00:32:22,740 --> 00:32:24,840
can be improved in detection from

755
00:32:24,840 --> 00:32:29,760
tunneling to those executions and so on

756
00:32:29,760 --> 00:32:31,260
so

757
00:32:31,260 --> 00:32:33,419
yeah and thanks of course to welcome

758
00:32:33,419 --> 00:32:36,240
team who invited me and developers of

759
00:32:36,240 --> 00:32:37,620
different go modules I didn't write

760
00:32:37,620 --> 00:32:40,620
everything like this oh sorry

761
00:32:40,620 --> 00:32:43,340
and uh

762
00:32:43,340 --> 00:32:47,460
uh I used what was missing I've written

763
00:32:47,460 --> 00:32:49,980
I modified a lot of those things

764
00:32:49,980 --> 00:32:52,320
so I try to put everywhere credit if I

765
00:32:52,320 --> 00:32:53,460
forgot sorry

766
00:32:53,460 --> 00:32:57,960
but uh I really tried to uh just quickly

767
00:32:57,960 --> 00:33:00,059
get dressed for everything and get it

768
00:33:00,059 --> 00:33:00,960
going

769
00:33:00,960 --> 00:33:03,059
there of course the virus who actually

770
00:33:03,059 --> 00:33:06,480
had a talk about gold as a fancy

771
00:33:06,480 --> 00:33:08,520
language few years back here in on

772
00:33:08,520 --> 00:33:10,940
balcon so yeah

773
00:33:10,940 --> 00:33:13,390
uh thank you voila

774
00:33:13,390 --> 00:33:20,519
[Applause]

775
00:33:20,519 --> 00:33:22,740
you can always ask me on the Twitter

776
00:33:22,740 --> 00:33:25,320
direct messages should be open or I can

777
00:33:25,320 --> 00:33:26,519
open it them

778
00:33:26,519 --> 00:33:30,500
so feel free to ask questions

779
00:33:32,279 --> 00:33:36,419
so one of those don't work if you have

780
00:33:36,419 --> 00:33:40,159
like aslr right or

781
00:33:40,159 --> 00:33:43,860
execute and so on what can we do as this

782
00:33:43,860 --> 00:33:48,500
segments to make your life miserable

783
00:33:48,960 --> 00:33:51,840
well uh this is this is the thing I

784
00:33:51,840 --> 00:33:53,700
actually mentioned

785
00:33:53,700 --> 00:33:56,640
the idea the question was what can one

786
00:33:56,640 --> 00:33:58,320
system illustrator can be done to

787
00:33:58,320 --> 00:34:00,600
actually make hard

788
00:34:00,600 --> 00:34:03,000
make life harder for someone who is

789
00:34:03,000 --> 00:34:05,100
attacking I guess you know that already

790
00:34:05,100 --> 00:34:07,220
update

791
00:34:07,220 --> 00:34:10,440
hardening mostly hardening and that

792
00:34:10,440 --> 00:34:12,179
means hardening on the network level but

793
00:34:12,179 --> 00:34:14,699
as well as on

794
00:34:14,699 --> 00:34:16,619
on the system level in an application

795
00:34:16,619 --> 00:34:18,060
Level

796
00:34:18,060 --> 00:34:21,060
that usually makes things harder because

797
00:34:21,060 --> 00:34:24,719
if I cannot call do some Cisco if you

798
00:34:24,719 --> 00:34:26,820
already prevent some Cisco for example

799
00:34:26,820 --> 00:34:29,159
in Docker container right you can use

800
00:34:29,159 --> 00:34:30,899
there was stock

801
00:34:30,899 --> 00:34:33,780
uh yesterday which talked a little bit

802
00:34:33,780 --> 00:34:36,659
about second profiles and so on you can

803
00:34:36,659 --> 00:34:40,859
actually really for example disable a

804
00:34:40,859 --> 00:34:42,719
lot of Cisco's which your application

805
00:34:42,719 --> 00:34:44,879
doesn't use and then you can make it

806
00:34:44,879 --> 00:34:48,119
harder I have to guess which these calls

807
00:34:48,119 --> 00:34:50,040
are not there and I have to write it

808
00:34:50,040 --> 00:34:52,260
differently right so

809
00:34:52,260 --> 00:34:55,560
uh hardening is is one of the best ways

810
00:34:55,560 --> 00:34:57,300
for most of these things of course there

811
00:34:57,300 --> 00:34:59,880
are other things which I didn't mention

812
00:34:59,880 --> 00:35:02,460
here for example like

813
00:35:02,460 --> 00:35:05,280
how to get initial foothold and so on I

814
00:35:05,280 --> 00:35:06,960
just I was just focusing on those

815
00:35:06,960 --> 00:35:09,000
running the Bellows and everything

816
00:35:09,000 --> 00:35:10,920
so

817
00:35:10,920 --> 00:35:13,619
you get uh like I don't know Sun's

818
00:35:13,619 --> 00:35:15,839
critical security controls like 26

819
00:35:15,839 --> 00:35:17,400
critical security controls and follow

820
00:35:17,400 --> 00:35:19,020
that things

821
00:35:19,020 --> 00:35:21,720
uh from the global point of view

822
00:35:21,720 --> 00:35:25,619
and from this side yeah

823
00:35:25,619 --> 00:35:27,720
a lot of

824
00:35:27,720 --> 00:35:29,000
things

825
00:35:29,000 --> 00:35:31,740
hard to mention everything that there is

826
00:35:31,740 --> 00:35:34,140
like a lot of like uh you have like a

827
00:35:34,140 --> 00:35:36,540
Linux security how to and so on and so

828
00:35:36,540 --> 00:35:37,740
on so

829
00:35:37,740 --> 00:35:39,300
it's

830
00:35:39,300 --> 00:35:43,280
from the very beginning

831
00:35:44,099 --> 00:35:46,400
from the system level

832
00:35:46,400 --> 00:35:48,300
header level

833
00:35:48,300 --> 00:35:51,119
Vlada mentioned it and from the

834
00:35:51,119 --> 00:35:53,099
application Level

835
00:35:53,099 --> 00:35:57,240
but you have to not you you cannot

836
00:35:57,240 --> 00:35:59,220
forget something because then again you

837
00:35:59,220 --> 00:36:01,020
have to problem right that's why it's

838
00:36:01,020 --> 00:36:03,060
easier for attacker than you don't want

839
00:36:03,060 --> 00:36:04,619
to find one so

840
00:36:04,619 --> 00:36:07,800
and the Defenders have to

841
00:36:07,800 --> 00:36:10,380
close everyone right every hole that you

842
00:36:10,380 --> 00:36:14,420
can find so it's not easy economics

843
00:36:15,180 --> 00:36:18,119
sorry it's hard to actually compress

844
00:36:18,119 --> 00:36:19,619
everything and

845
00:36:19,619 --> 00:36:22,640
what can be done

846
00:36:23,640 --> 00:36:26,640
any other questions so here

847
00:36:26,640 --> 00:36:29,880
all right yeah is it possible to include

848
00:36:29,880 --> 00:36:34,579
inline assembly into go

849
00:36:34,640 --> 00:36:37,619
uh yeah I was actually looking at such

850
00:36:37,619 --> 00:36:39,359
things

851
00:36:39,359 --> 00:36:41,160
and uh

852
00:36:41,160 --> 00:36:44,480
it was quite painful

853
00:36:44,780 --> 00:36:49,320
and mostly I I didn't want it to go that

854
00:36:49,320 --> 00:36:51,480
way because it's hard important it's not

855
00:36:51,480 --> 00:36:52,500
portable

856
00:36:52,500 --> 00:36:54,180
uh

857
00:36:54,180 --> 00:36:57,119
for example that's why I I wanted first

858
00:36:57,119 --> 00:36:59,040
to actually have like a support for

859
00:36:59,040 --> 00:37:01,380
alphanumatic Shell Code as well

860
00:37:01,380 --> 00:37:04,859
but in the end I had to like uh make a

861
00:37:04,859 --> 00:37:06,839
call like call aax

862
00:37:06,839 --> 00:37:09,119
and or any other register where I

863
00:37:09,119 --> 00:37:11,339
actually configure the Shell Code right

864
00:37:11,339 --> 00:37:13,680
but then I had to do like a lot of

865
00:37:13,680 --> 00:37:15,780
prerequisites and so on and I said okay

866
00:37:15,780 --> 00:37:18,240
I can just encode it with any other

867
00:37:18,240 --> 00:37:21,000
encoding which go support and often

868
00:37:21,000 --> 00:37:24,480
numeric Shell Code you get like a

869
00:37:24,480 --> 00:37:26,820
compression is not good right you get it

870
00:37:26,820 --> 00:37:28,560
first so

871
00:37:28,560 --> 00:37:31,460
it's not so

872
00:37:31,640 --> 00:37:36,240
you can but it's hard and I don't know

873
00:37:36,240 --> 00:37:38,099
if you want to go that way

874
00:37:38,099 --> 00:37:39,960
because most of the things you can

875
00:37:39,960 --> 00:37:43,740
really do uh with the syscalls and if

876
00:37:43,740 --> 00:37:45,359
not with the c

877
00:37:45,359 --> 00:37:48,500
so yeah

878
00:37:49,020 --> 00:37:51,720
of course there is other other way

879
00:37:51,720 --> 00:37:55,680
you can always like uh with seagull you

880
00:37:55,680 --> 00:37:59,160
can actually say and do like like

881
00:37:59,160 --> 00:38:00,960
standard linking stuff and you can

882
00:38:00,960 --> 00:38:03,180
specify your own options and so on and

883
00:38:03,180 --> 00:38:05,579
so on and then you can just include one

884
00:38:05,579 --> 00:38:07,020
of the object files and then you can

885
00:38:07,020 --> 00:38:08,880
actually do whatever you want so that's

886
00:38:08,880 --> 00:38:11,280
one of the ways to answer your question

887
00:38:11,280 --> 00:38:13,440
if you just really want it

888
00:38:13,440 --> 00:38:15,480
but it's really painful I wouldn't

889
00:38:15,480 --> 00:38:18,180
recommend it at all thanks any question

890
00:38:18,180 --> 00:38:21,078
anyone else

891
00:38:24,119 --> 00:38:27,119
okay I guess

892
00:38:27,119 --> 00:38:29,760
I managed to to make everyone understand

893
00:38:29,760 --> 00:38:32,160
or don't understand at all

894
00:38:32,160 --> 00:38:34,940
so thank you

895
00:38:36,359 --> 00:38:37,590
thank you

896
00:38:37,590 --> 00:39:02,440
[Music]

