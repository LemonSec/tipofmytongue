1
00:00:00,120 --> 00:00:03,729
cookie in PHP sessions kinda magic for
developers are just happens he

2
00:00:03,729 --> 00:00:07,140
keep make a couple function calls the
cookies are handled automatically

3
00:00:07,140 --> 00:00:10,969
it's really easy they don't it's good
for developers so

4
00:00:10,969 --> 00:00:15,530
the HT peak HTTP cookie will have a
session ID put into it

5
00:00:15,530 --> 00:00:20,050
set by the login code naturally if we
have users logging into a web

6
00:00:20,050 --> 00:00:22,260
application to access to members-only
area

7
00:00:22,260 --> 00:00:25,930
they also need to be if the lockout when
they feel like it on request

8
00:00:25,930 --> 00:00:29,620
so traditional you'd have something like
this URL

9
00:00:29,620 --> 00:00:32,879
bottom here a lockout dot PHP scripts

10
00:00:32,879 --> 00:00:35,949
and

11
00:00:35,949 --> 00:00:39,719
when that script gets accessed by get
requests on

12
00:00:39,719 --> 00:00:43,239
from an authenticated member will expire
the cookie

13
00:00:43,239 --> 00:00:46,699
and the session service I do whatever
cleanup you have to do in terms of

14
00:00:46,699 --> 00:00:50,449
marking down when the user last logged
and the duration of their login

15
00:00:50,449 --> 00:00:55,460
anything like that on so it's not
immediately apparent that there is

16
00:00:55,460 --> 00:00:59,539
any kind of a problem with this all
sounds like pretty typical stuff

17
00:00:59,539 --> 00:01:03,239
it's only when you start thinking about
users and

18
00:01:03,239 --> 00:01:07,780
malicious users that you start to see
the problem so it's kinda detail to use

19
00:01:07,780 --> 00:01:12,950
Alice send Mallory the malicious user so
now is gonna come under this community

20
00:01:12,950 --> 00:01:13,610
website

21
00:01:13,610 --> 00:01:16,729
maybe they can sign up for an account
themselves and they'll the going to

22
00:01:16,729 --> 00:01:18,390
party this members only section

23
00:01:18,390 --> 00:01:22,060
and no posts wanted these images down at
the bottom

24
00:01:22,060 --> 00:01:26,579
so if it's one of the sites thus
allowing rights denial access maybe the

25
00:01:26,579 --> 00:01:27,219
stick and

26
00:01:27,219 --> 00:01:31,710
at the ING tag there otherwise if it's
some kinda BB code mark-up

27
00:01:31,710 --> 00:01:35,310
you know they can do the same thing down
at the bottom the interesting thing to

28
00:01:35,310 --> 00:01:35,799
note

29
00:01:35,799 --> 00:01:39,909
is that the source up the image sharm
it's not a cheap a great gift for

30
00:01:39,909 --> 00:01:40,509
anything

31
00:01:40,509 --> 00:01:44,079
and you'd think that its kind of absurd
to be pointing an image

32
00:01:44,079 --> 00:01:48,520
at a PHP script but as far as the
browser is concerned if that PHP script

33
00:01:48,520 --> 00:01:49,380
generates

34
00:01:49,380 --> 00:01:53,880
a binary image that's that's totally
fine so it's really not strange

35
00:01:53,880 --> 00:02:00,640
just perhaps not where you use to you so
where does the trouble started an

36
00:02:00,640 --> 00:02:04,280
well when Alice then logs into the
community site

37
00:02:04,280 --> 00:02:08,378
you know the standard login procedure
happens she has our session ID stored in

38
00:02:08,378 --> 00:02:10,530
the cookie from community dot com she's
now

39
00:02:10,530 --> 00:02:15,290
login so maybe through some kind of
social engineering or just

40
00:02:15,290 --> 00:02:18,879
lock maybe that the title of the post
was especially intriguing

41
00:02:18,879 --> 00:02:22,870
Alice will browse to Mallory is crafted
post

42
00:02:22,870 --> 00:02:27,269
so that point the HDMI contents being
pulled down to Alice's browser

43
00:02:27,269 --> 00:02:31,360
the image tag starts the processed and
did the image has to be fetched

44
00:02:31,360 --> 00:02:35,459
so this get request is sent out to get
the source of the image

45
00:02:35,459 --> 00:02:38,659
in this case it's this lockout dot PHP
script

46
00:02:38,659 --> 00:02:43,890
so to acquire the image data houses
browser makes a GET request to log out

47
00:02:43,890 --> 00:02:45,129
dot PHP

48
00:02:45,129 --> 00:02:48,480
and the cookie that has the session ID
is

49
00:02:48,480 --> 00:02:51,690
sent along for the ride that's the
important bit and

50
00:02:51,690 --> 00:02:55,870
I mean why wouldn't it be you requesting
something from community dot com

51
00:02:55,870 --> 00:03:00,049
and that's what the session cookie was
set for all your request to community

52
00:03:00,049 --> 00:03:02,060
dot com will include this cookie

53
00:03:02,060 --> 00:03:05,500
so than the lockout script doing its job

54
00:03:05,500 --> 00:03:09,349
tickets the GET request from the logged
in user with a valid session ID

55
00:03:09,349 --> 00:03:15,129
and it dutifully gives Alice the who so

56
00:03:15,129 --> 00:03:19,399
being a developer myself kind abused the
sequence diagram here to kind of give an

57
00:03:19,400 --> 00:03:20,530
idea of what

58
00:03:20,530 --> 00:03:25,939
the counterflow going on here is so the
first part we've got this attacker

59
00:03:25,939 --> 00:03:30,019
logging into community dot com so they
post their login details they they

60
00:03:30,019 --> 00:03:33,110
succeed or fail you know they got a
valid account will soon they succeeded

61
00:03:33,110 --> 00:03:39,079
so neck still the post this much is
content following up

62
00:03:39,079 --> 00:03:42,590
the victim logs into the website posting
their login details

63
00:03:42,590 --> 00:03:47,900
getting a session cookie set: they fetch
the page content from the militias post

64
00:03:47,900 --> 00:03:53,000
the much sex now they're and then when
it gets processed you note this gonna be

65
00:03:53,000 --> 00:03:56,480
a whole bunch these get requests for all
the resources there on that page you

66
00:03:56,480 --> 00:03:56,920
know

67
00:03:56,920 --> 00:04:01,719
potentially a header Jay pag up likely
some current JavaScript include

68
00:04:01,719 --> 00:04:05,359
but the one that's important is that get
Lago dot PHP

69
00:04:05,360 --> 00:04:09,219
because when that happens you for French
essentially performed

70
00:04:09,219 --> 00:04:12,620
pretty brutal I'll service attack in the
sense that anybody that browsers to this

71
00:04:12,620 --> 00:04:14,799
one section of the community website

72
00:04:14,799 --> 00:04:17,970
is going mediately be kicked off in the
next request they make to the community

73
00:04:17,970 --> 00:04:20,269
web sites gonna tell them the log back
in

74
00:04:20,269 --> 00:04:25,150
mostly a nuisance but still has
implications

75
00:04:25,150 --> 00:04:29,388
so like I said it's mostly a nuisance
and this is kind of where most

76
00:04:29,389 --> 00:04:32,430
developers if they know about the surf
will probably stop

77
00:04:32,430 --> 00:04:36,830
with their understanding of it and its
kind of misleading because it's the

78
00:04:36,830 --> 00:04:37,900
purposely toy

79
00:04:37,900 --> 00:04:41,090
example the kind of lead into the
discussion

80
00:04:41,090 --> 00:04:44,900
I'm got the suffer my bad puns but it's
bad form

81
00:04:44,900 --> 00:04:48,440
to log out with the GET request if
you're a developer you should know this

82
00:04:48,440 --> 00:04:51,630
that by the HTTP specs get should be

83
00:04:51,630 --> 00:04:55,199
I'd important which means essentially
you shouldn't be performing any

84
00:04:55,199 --> 00:04:59,690
actions have side effects when you get a
GET request such as logging user help

85
00:04:59,690 --> 00:05:03,360
he should always be using POST request
for that otherwise it's its kinda bad

86
00:05:03,360 --> 00:05:06,039
form nothing explicitly illegal but

87
00:05:06,039 --> 00:05:10,190
it's recommended you shouldn't be doing
that so this example SCANA misleading

88
00:05:10,190 --> 00:05:14,449
because it might give you the impression
that see surf relies on not the ability

89
00:05:14,449 --> 00:05:18,470
to post content to target sites such as
in this case we log on to this community

90
00:05:18,470 --> 00:05:19,479
page

91
00:05:19,479 --> 00:05:23,580
and now I was able to post an image tag
that's not required

92
00:05:23,580 --> 00:05:27,669
it's not specific to image tax itself
like that bug track posting

93
00:05:27,669 --> 00:05:32,969
you can do it with a whole bunch of tags
really and it's also not specific to get

94
00:05:32,970 --> 00:05:36,080
based forms so even if you are following

95
00:05:36,080 --> 00:05:39,979
proper standard recommendations and not
performing

96
00:05:39,979 --> 00:05:43,159
I actions with side effects in your
forms you're still

97
00:05:43,160 --> 00:05:46,900
potentially vulnerable to this see
surfers hack

98
00:05:46,900 --> 00:05:50,289
so we going to that for a little bit
more detail on

99
00:05:50,289 --> 00:05:54,289
the content creation writes requirement
you don't need to be able to put any

100
00:05:54,289 --> 00:05:54,969
tags

101
00:05:54,970 --> 00:05:58,940
on the site that you're trying to attack
with the sea surf request

102
00:05:58,940 --> 00:06:03,110
that's where that cross eyed aspect
cross-site request forgery comes from

103
00:06:03,110 --> 00:06:03,970
really

104
00:06:03,970 --> 00:06:08,080
on again it's not particularly image
tags when you start thinking about all

105
00:06:08,080 --> 00:06:11,289
these resources that your browser has to
acquire from

106
00:06:11,289 --> 00:06:15,630
a website these are all invoking request
automatically you never have to sit

107
00:06:15,630 --> 00:06:16,840
there and approve

108
00:06:16,840 --> 00:06:21,099
have an image loaded it just happens
these request get fired off

109
00:06:21,099 --> 00:06:24,830
that's important to note that you can
really really easily

110
00:06:24,830 --> 00:06:29,960
cause request to happen with a specific
source destination

111
00:06:29,960 --> 00:06:33,490
and then again it's further not limited
to get method forms

112
00:06:33,490 --> 00:06:37,550
you can either social engineer form cost
you know boobs on the other side just

113
00:06:37,550 --> 00:06:38,880
click OK

114
00:06:38,880 --> 00:06:42,080
or you can use javascript to submit one
automatically and

115
00:06:42,080 --> 00:06:46,120
most people if not everyone really kinda
has JavaScript enabled automatically

116
00:06:46,120 --> 00:06:49,160
so if you submit the form through
JavaScript they've don't have much a

117
00:06:49,160 --> 00:06:54,870
chance to do anything about it

118
00:06:54,870 --> 00:06:58,949
so many such take those things into a
fact you can get more of a complex

119
00:06:58,949 --> 00:07:02,300
attack flow so now you can see we've got
on

120
00:07:02,300 --> 00:07:05,699
an attacker on the left but we also have
an attacker site all the way on the

121
00:07:05,699 --> 00:07:06,669
right

122
00:07:06,669 --> 00:07:09,930
so what happens is the ad

123
00:07:09,930 --> 00:07:13,569
once the victims logged in as before
center post details you're trying to

124
00:07:13,569 --> 00:07:16,490
time this year using it with an
authenticated user

125
00:07:16,490 --> 00:07:20,509
the attacker will send some kinda luring
link again trying to convince somebody

126
00:07:20,509 --> 00:07:23,430
to go somewhere so it's a little bit of
a social engineering

127
00:07:23,430 --> 00:07:26,660
point at this part have some this luring
link

128
00:07:26,660 --> 00:07:31,199
pointing back to their attacking site
saw you'll send some kind of a message

129
00:07:31,199 --> 00:07:33,949
to this user saying you know cool stuff
here just

130
00:07:33,949 --> 00:07:40,379
come check it out Sonnex this login
victim well out browse to this attack in

131
00:07:40,379 --> 00:07:41,550
sight that's been

132
00:07:41,550 --> 00:07:45,560
sent to them through this lure and out
their faction page content

133
00:07:45,560 --> 00:07:49,180
from the attacking sites so the target
site community dark armor whatever

134
00:07:49,180 --> 00:07:50,830
happens to be has

135
00:07:50,830 --> 00:07:55,930
had really no implications on this flow
so far

136
00:07:55,930 --> 00:07:59,270
so again we get down to the bottom here
and you can see the Aeros crossover

137
00:07:59,270 --> 00:08:00,710
target site for most them

138
00:08:00,710 --> 00:08:04,580
as the XHTML that the victim is pulled
down from

139
00:08:04,580 --> 00:08:08,698
the attacker site states to get
processed on UCO Bank to get requests

140
00:08:08,699 --> 00:08:11,490
again probably things that are on the
attacker site you know

141
00:08:11,490 --> 00:08:15,069
the Style Sheets the JavaScript includes

142
00:08:15,069 --> 00:08:18,629
but they will be one particular request
or several really

143
00:08:18,629 --> 00:08:22,810
that Tom are being sent to the target
site so again since you control the

144
00:08:22,810 --> 00:08:26,629
destination up some these resources in
requests and you can use JavaScript to

145
00:08:26,629 --> 00:08:28,340
post automatically

146
00:08:28,340 --> 00:08:31,629
the cookie that the user has gets sent
to the target site

147
00:08:31,629 --> 00:08:35,230
even though they're it's being forced
from content

148
00:08:35,230 --> 00:08:39,539
requested from the attacker site

149
00:08:39,539 --> 00:08:42,770
so I promised that we'd kinda learns
from these techniques through

150
00:08:42,770 --> 00:08:48,510
social network exploitation so we're
kinda talk about that now

151
00:08:48,510 --> 00:08:53,170
so what is vampire freaks cuz I i assume
most people probably haven't heard of it

152
00:08:53,170 --> 00:08:57,160
if I can summarize it in about one word
at Pride Park garth book

153
00:08:57,160 --> 00:09:01,750
I hey its kind of this bizarre
combination of MySpace and Facebook game

154
00:09:01,750 --> 00:09:02,140
that

155
00:09:02,140 --> 00:09:05,370
like the industrial got off kinda if

156
00:09:05,370 --> 00:09:08,450
underground culture so it's a little bit
smaller the vault

157
00:09:08,450 --> 00:09:12,090
compared to Facebook MySpace the lot
smaller but it's still a pretty sizable

158
00:09:12,090 --> 00:09:14,570
site we've got around a million members
in

159
00:09:14,570 --> 00:09:19,870
from 3000 on my at any given time social
networks in particular appealing because

160
00:09:19,870 --> 00:09:20,830
saddam

161
00:09:20,830 --> 00:09:24,110
just the nature of the makes the easy to
attack if

162
00:09:24,110 --> 00:09:28,290
you've got it designed to be easy to
embed content a specially I

163
00:09:28,290 --> 00:09:32,300
vampire freaks I recommend that if you
enjoy your eyesight for

164
00:09:32,300 --> 00:09:35,570
you know have standards about what
website should look like don't go there

165
00:09:35,570 --> 00:09:38,840
because it's similar to MySpace and that
you get all these like me defiles

166
00:09:38,840 --> 00:09:40,490
embedded in things in

167
00:09:40,490 --> 00:09:43,840
flashing under construction gifts it's
kind of like a time machine back to Geo

168
00:09:43,840 --> 00:09:45,220
cities really

169
00:09:45,220 --> 00:09:51,180
a so because he's going bad content that
that just works in our favor images CSS

170
00:09:51,180 --> 00:09:55,260
HTML them perfect in particular they
haven't done a whole lot other than

171
00:09:55,260 --> 00:09:59,110
blacklisting in terms of trying to limit
what kinda content you can post

172
00:09:59,110 --> 00:10:02,780
you have CSS control you can put tags
indirectly

173
00:10:02,780 --> 00:10:07,069
just see it its easy I'm social
engineering is easier on

174
00:10:07,070 --> 00:10:11,210
social networks I mean it it just makes
sense you're on the social network to be

175
00:10:11,210 --> 00:10:14,960
connecting to other people someone you
might know something we might not

176
00:10:14,960 --> 00:10:18,460
so there's already a lot of social
interaction going on in the sights

177
00:10:18,460 --> 00:10:21,560
on and then it's easy to spread things
because

178
00:10:21,560 --> 00:10:24,870
the design for sharing you should be
something like surrounds through your

179
00:10:24,870 --> 00:10:25,560
social

180
00:10:25,560 --> 00:10:31,210
your social groups so that works in our
favor to really

181
00:10:31,210 --> 00:10:34,980
so ever be always put on these in here
and I don't know if they're

182
00:10:34,980 --> 00:10:38,200
they actually useful but Tom the
vulnerability

183
00:10:38,200 --> 00:10:41,490
this is about a year ago that I worked
on this stuff you find these

184
00:10:41,490 --> 00:10:44,630
everywhere I've done it for work done it
for

185
00:10:44,630 --> 00:10:48,400
hobby things these see surf
vulnerabilities are easy to find

186
00:10:48,400 --> 00:10:51,690
so this one is mostly already patched
I'm not going to tell you which parts

187
00:10:51,690 --> 00:10:52,990
they messed up patching

188
00:10:52,990 --> 00:10:56,070
I it was this close responsibly so

189
00:10:56,070 --> 00:10:58,890
the admin knew about it I told them
there was going to be released soon out

190
00:10:58,890 --> 00:11:00,860
for five months after

191
00:11:00,860 --> 00:11:05,700
I all the attack I just did it with my
own accounts so it was never in the wild

192
00:11:05,700 --> 00:11:06,110
you know

193
00:11:06,110 --> 00:11:09,370
spreading out my space where I'm kinda
thing there's not ten thousand users

194
00:11:09,370 --> 00:11:11,600
that have me is the best friend

195
00:11:11,600 --> 00:11:15,130
I overall the admins were pretty pretty
good about it

196
00:11:15,130 --> 00:11:18,260
i find that's pretty common when he is
responsible disclosure

197
00:11:18,260 --> 00:11:21,500
but your actions are your own not mine
yada yada yada

198
00:11:21,500 --> 00:11:25,210
don't play me when you get arrested so

199
00:11:25,210 --> 00:11:28,930
this particular attack flow I
disconnects but looking at on

200
00:11:28,930 --> 00:11:32,080
my server so I'm the attacker website in
this case

201
00:11:32,080 --> 00:11:35,600
its post based on I do a little bit
tracking in

202
00:11:35,600 --> 00:11:40,150
with the tracking account so basically
when a user's hit with this exploited

203
00:11:40,150 --> 00:11:41,620
sons a tracking messaged

204
00:11:41,620 --> 00:11:45,240
to this particular account to skiing
give you a sense a metrics and since I

205
00:11:45,240 --> 00:11:47,120
was doing it with my own accounts

206
00:11:47,120 --> 00:11:50,730
I really wanted to make sure that you
know as soon as it got anywhere else I

207
00:11:50,730 --> 00:11:52,870
knew about Amy Lee psycho killer

208
00:11:52,870 --> 00:11:56,200
I the status updates them for Freese has
this

209
00:11:56,200 --> 00:11:59,220
similar service to Facebook where you
can you know

210
00:11:59,220 --> 00:12:02,650
post I'm eating a sandwich or whatever
and I get sent out all your friends and

211
00:12:02,650 --> 00:12:03,420
I guess

212
00:12:03,420 --> 00:12:06,920
they tell you about what sandwiches
they're eating in the like see get this

213
00:12:06,920 --> 00:12:07,420
kinda

214
00:12:07,420 --> 00:12:10,969
viral component built right in because
you're able to share

215
00:12:10,970 --> 00:12:14,460
little bits of information with
everybody really quickly

216
00:12:14,460 --> 00:12:18,900
so the social engineering involved is
luring people that are logged into

217
00:12:18,900 --> 00:12:19,870
vampire freaks

218
00:12:19,870 --> 00:12:26,870
to the specific attacks are rare the URL
located that I have control over

219
00:12:26,870 --> 00:12:30,460
so again the social engineering it's a
post best exploit so it makes it a

220
00:12:30,460 --> 00:12:34,000
little bit trickier than the get best
when I can't just take an image tag

221
00:12:34,000 --> 00:12:35,020
somewhere

222
00:12:35,020 --> 00:12:40,510
I'm you have to be using some kind
across a quest for injury are sorry I'm

223
00:12:40,510 --> 00:12:44,550
cross-site scripting to be at the four
so far post from inside a vampire freaks

224
00:12:44,550 --> 00:12:45,820
but

225
00:12:45,820 --> 00:12:48,950
I can do off site so you just have to
come to get them there

226
00:12:48,950 --> 00:12:52,800
at with this kind of thing again the
social network basis ovett it's really

227
00:12:52,800 --> 00:12:56,270
easy to alert people to wherever you
want to go you just post some comment I

228
00:12:56,270 --> 00:12:58,579
sing link in a forum poster out

229
00:12:58,580 --> 00:13:02,230
a personal message in this has the
benefit have that you they have to be

230
00:13:02,230 --> 00:13:05,480
login to be doing a personal message I
mean it only makes sense

231
00:13:05,480 --> 00:13:08,770
you can't see the personal messages for
your account until you're in

232
00:13:08,770 --> 00:13:13,030
your account so you send somebody a
foreigner a personal message was some

233
00:13:13,030 --> 00:13:14,250
kind of enticingly

234
00:13:14,250 --> 00:13:17,550
you know free software porn whatever it
has to be

235
00:13:17,550 --> 00:13:21,860
to lower than their I'm again you can I
get more mileage or the stuff when

236
00:13:21,860 --> 00:13:26,390
they don't know that they've been duped
so in this case there's a base64

237
00:13:26,390 --> 00:13:30,990
encoded URL parameter that top points to
some decoy content

238
00:13:30,990 --> 00:13:34,730
so when you make this personal message
to lure them to your site

239
00:13:34,730 --> 00:13:38,220
you can kind of pick the title the
message and then

240
00:13:38,220 --> 00:13:42,380
House and Cuddy quite content to BBC
News article something stupid

241
00:13:42,380 --> 00:13:46,300
and you just pay 64 encoded so they can
just look at the Lincoln C you know

242
00:13:46,300 --> 00:13:49,410
well not really going to BBC dot com

243
00:13:49,410 --> 00:13:53,150
and then the main page if the the
exploit will just decode this URL

244
00:13:53,150 --> 00:13:54,100
parameter

245
00:13:54,100 --> 00:13:58,190
and then iframe the content as big as it
can essentially to cover up

246
00:13:58,190 --> 00:14:01,900
everything else it just looks like
they've gone to whatever article it is

247
00:14:01,900 --> 00:14:02,680
besides you know

248
00:14:02,680 --> 00:14:06,290
the URL new URL bar but you cast
fisher's about that people don't really

249
00:14:06,290 --> 00:14:09,170
give a damn

250
00:14:09,170 --> 00:14:12,430
so the exploit code itself I

251
00:14:12,430 --> 00:14:16,510
it's pretty easy to follow through it's
crafted post requests sent to vampire

252
00:14:16,510 --> 00:14:17,600
freaks

253
00:14:17,600 --> 00:14:20,650
on the thing about something POST
request is that

254
00:14:20,650 --> 00:14:24,240
you're sending data you get a response
but you don't want the response because

255
00:14:24,240 --> 00:14:26,860
I've same origin policy can't be

256
00:14:26,860 --> 00:14:30,580
looking at the response you don't need
to but you also don't want the user to

257
00:14:30,580 --> 00:14:31,510
see all kinds a

258
00:14:31,510 --> 00:14:35,270
up response is saying you've sent a
personal message to this person are you

259
00:14:35,270 --> 00:14:39,699
change your status update to this so if
you put in an iframe and you there Sat

260
00:14:39,700 --> 00:14:42,730
the display properties to invisible with
CSS

261
00:14:42,730 --> 00:14:46,530
are you to suck size really got them
small than not you concealed the

262
00:14:46,530 --> 00:14:48,030
response you don't care about it

263
00:14:48,030 --> 00:14:52,880
they don't see it everybody's happy so
again these post requests are submitted

264
00:14:52,880 --> 00:14:53,910
automatically

265
00:14:53,910 --> 00:14:58,650
by JavaScript save yo gabba Script
enabled as soon as you visit this site

266
00:14:58,650 --> 00:15:03,090
the benign content gets I framed up the
little iframes also been automatically

267
00:15:03,090 --> 00:15:07,150
and there's really no chance to say
anything you know cancel request sir

268
00:15:07,150 --> 00:15:12,520
or do anything really so there's in this
case 3 post requests the first one

269
00:15:12,520 --> 00:15:17,350
well I change the registered email
address this becomes important later on

270
00:15:17,350 --> 00:15:21,190
at the second one will send that
tracking personal message

271
00:15:21,190 --> 00:15:24,770
and the third one is that the spread
essentially a little update the user

272
00:15:24,770 --> 00:15:25,790
status

273
00:15:25,790 --> 00:15:30,930
pointing back to where they were duped
into going

274
00:15:30,930 --> 00:15:34,610
so these are actually the end of the
form data at the time

275
00:15:34,610 --> 00:15:38,480
that the stuff works I'm basically when
you're doing this cover tackle you need

276
00:15:38,480 --> 00:15:42,170
to be able to do is locate the forms on
the actual website

277
00:15:42,170 --> 00:15:45,340
and up find the premise that you're
interested in on

278
00:15:45,340 --> 00:15:48,530
some other mandatory some of them aren't
so there's a little bit I guess work in

279
00:15:48,530 --> 00:15:51,569
terms of trying to minimize how much did
your posting you know maybe you don't

280
00:15:51,570 --> 00:15:52,740
need to

281
00:15:52,740 --> 00:15:55,990
have some other promise the ones that
were really concerned about

282
00:15:55,990 --> 00:15:59,900
in in like this case is the new email
and a

283
00:15:59,900 --> 00:16:02,760
you gotta make sure you get the form
action right South I don't have it in

284
00:16:02,760 --> 00:16:04,680
there but whatever paycheck grab this
offer

285
00:16:04,680 --> 00:16:09,260
that would be what you're pointing your
post to

286
00:16:09,260 --> 00:16:12,670
again that the tracking personal message
same kind idea I've kinda cut out some

287
00:16:12,670 --> 00:16:13,530
the crap here

288
00:16:13,530 --> 00:16:18,530
it's it's really gross is she now on you
looking at a couple parameters you know

289
00:16:18,530 --> 00:16:21,600
the hidden value of the user you're
sending the message to their particular

290
00:16:21,600 --> 00:16:23,540
user ID

291
00:16:23,540 --> 00:16:28,050
I the content out the message that's
already of

292
00:16:28,050 --> 00:16:31,120
and again you can kinda see the idea
this the status update

293
00:16:31,120 --> 00:16:34,490
how them perfect has a fantastic purple

294
00:16:34,490 --> 00:16:39,420
are default color scheme that is just of
a long-term the readability

295
00:16:39,420 --> 00:16:43,180
I'm so again you can get this this one
was a little bit trickier cuz there's a

296
00:16:43,180 --> 00:16:45,160
little bit of Ajax reader action but

297
00:16:45,160 --> 00:16:48,480
it's just a matter of kind of going on
the website with something like Firebug

298
00:16:48,480 --> 00:16:49,370
and

299
00:16:49,370 --> 00:16:52,810
Tracy through the flow of how your post
would normally go

300
00:16:52,810 --> 00:16:56,740
figuring out the the target of that post
in terms which script it's going to

301
00:16:56,740 --> 00:17:00,100
and then now which parameters are
mandatory what the value should be /c

302
00:17:00,100 --> 00:17:01,130
you can count if

303
00:17:01,130 --> 00:17:05,030
make a valid request your you're making
dollar quest you just controlling

304
00:17:05,030 --> 00:17:08,849
what they are and who sends them

305
00:17:08,849 --> 00:17:12,409
so the code sample on terms that far
what's on the server

306
00:17:12,410 --> 00:17:15,720
I'm gonna post the slides and links to
all this stuff later

307
00:17:15,720 --> 00:17:19,959
this sock cross-domain post function II
took from another website I have

308
00:17:19,959 --> 00:17:23,069
the resources in the and it's just an
easy way to you

309
00:17:23,069 --> 00:17:26,470
generate iframes and power form post

310
00:17:26,470 --> 00:17:31,010
really quickly since I'm doing 3 form
post is just kinda a generic function to

311
00:17:31,010 --> 00:17:32,010
create these

312
00:17:32,010 --> 00:17:35,360
this forum posts so it's doing is it's
taking

313
00:17:35,360 --> 00:17:39,030
promoters sending it to a script that
writes the form content

314
00:17:39,030 --> 00:17:42,410
out and then it puts that form content
into this iframe

315
00:17:42,410 --> 00:17:46,240
you can see the width and height are set
to once they're soup a little tiny

316
00:17:46,240 --> 00:17:50,010
you actually see what gets returned to
them and then it just kind of Japan's

317
00:17:50,010 --> 00:17:53,180
itself into the DOM

318
00:17:53,180 --> 00:17:57,940
so I've cut out the other two arm forum
posts but you can see one here still for

319
00:17:57,940 --> 00:17:58,290
the

320
00:17:58,290 --> 00:18:02,610
the status update it's just invoking
this cross domain post function

321
00:18:02,610 --> 00:18:06,740
to create on using this this form writer
script to create

322
00:18:06,740 --> 00:18:11,020
AR former quest to this Ajax controller
PHP script

323
00:18:11,020 --> 00:18:15,510
with thought the right action in terms
of our form parameter

324
00:18:15,510 --> 00:18:19,030
the the news link itself you can see is
just pulled from the document

325
00:18:19,030 --> 00:18:23,840
location so wherever they are that's
what their status gets updated to

326
00:18:23,840 --> 00:18:27,740
on and then at the bottom here you can
kinda see a

327
00:18:27,740 --> 00:18:30,770
if you know secure web development you
can immediately see that this is a self

328
00:18:30,770 --> 00:18:32,810
is vulnerable to cross site scripting
but

329
00:18:32,810 --> 00:18:36,480
it was kinda approval concepts of are it
pulls the

330
00:18:36,480 --> 00:18:40,040
the ID parameter from the URL that's
basically for encoded

331
00:18:40,040 --> 00:18:43,200
decode that and then creates the Gini
frame that has

332
00:18:43,200 --> 00:18:48,530
you know there the benign content in
there they've been tricked interviewing

333
00:18:48,530 --> 00:18:52,430
so this is what you end up getting you
pull up some website even checked

334
00:18:52,430 --> 00:18:53,510
interviewing

335
00:18:53,510 --> 00:18:56,950
and it's got this benign content loaded
and you can see the the ID parameter i

336
00:18:56,950 --> 00:18:58,550
mean it's pretty sketchy -looking

337
00:18:58,550 --> 00:19:01,850
but you definitely do work here if you
are real attacker in terms i picking a

338
00:19:01,850 --> 00:19:02,900
legitimate

339
00:19:02,900 --> 00:19:06,900
sorta base URL yr minimizing the idea
parameter things like that to make it

340
00:19:06,900 --> 00:19:08,300
look more

341
00:19:08,300 --> 00:19:12,159
you know more natural in this case and
it was never getting on the wild I don't

342
00:19:12,160 --> 00:19:12,560
have any

343
00:19:12,560 --> 00:19:15,700
malicious intent so I didn't spend a lot
of time trying to

344
00:19:15,700 --> 00:19:19,500
make it seem natural but a

345
00:19:19,500 --> 00:19:24,010
what appears benign is really kind of
wheels within wheels

346
00:19:24,010 --> 00:19:27,150
see can see here it's done a status
update again this is kinda where you

347
00:19:27,150 --> 00:19:28,780
want the smaller your alec is this

348
00:19:28,780 --> 00:19:32,950
the status updates pretty gross looking
but it points back to the website that

349
00:19:32,950 --> 00:19:34,880
actually perform the attack

350
00:19:34,880 --> 00:19:38,430
and then I it sent this tracking message
down at the bottom there just a simple

351
00:19:38,430 --> 00:19:41,290
hello in a timestamp

352
00:19:41,290 --> 00:19:45,730
so I have actually attacked my own
account can prolly not the wisest thing

353
00:19:45,730 --> 00:19:49,930
so what's interesting is it's kinda
becomes a death by a thousand cuts sort

354
00:19:49,930 --> 00:19:50,720
of deal

355
00:19:50,720 --> 00:19:53,770
and that's where most developers have
failed to realize the importance a

356
00:19:53,770 --> 00:19:55,620
cross-site request forgery is that

357
00:19:55,620 --> 00:20:00,260
anything your users can do you you can
do and little actions can build up to

358
00:20:00,260 --> 00:20:00,840
have

359
00:20:00,840 --> 00:20:05,129
you know incredible potential so with
the email account address changed in

360
00:20:05,130 --> 00:20:07,700
this is this is a really common paradigm

361
00:20:07,700 --> 00:20:11,840
I'm nike's the got my password feature
and guess where it's an

362
00:20:11,840 --> 00:20:15,159
it sent to whatever email address you
force them to change it to you

363
00:20:15,160 --> 00:20:19,330
so mine the interesting thing about
vampire freaks is they've done

364
00:20:19,330 --> 00:20:22,850
like the worst idea you possibly could
in terms of security and they've sent

365
00:20:22,850 --> 00:20:24,840
the original password back

366
00:20:24,840 --> 00:20:28,959
cleartext so they haven't hashed it and
there's a big database for everybody's

367
00:20:28,960 --> 00:20:30,020
passwords

368
00:20:30,020 --> 00:20:33,760
seek I have to think well what are the
chances that wanted these idiots on

369
00:20:33,760 --> 00:20:37,270
vampire freaks has used the same
password for

370
00:20:37,270 --> 00:20:41,020
the email the bank whatever you don't
people use the same password to get this

371
00:20:41,020 --> 00:20:43,190
kinda life password idea

372
00:20:43,190 --> 00:20:46,240
and now that life password has been sent
clear tax

373
00:20:46,240 --> 00:20:49,710
to you some guys email so

374
00:20:49,710 --> 00:20:53,170
and then there's the the tracking by the
eye and then at this kinda by DF

375
00:20:53,170 --> 00:20:54,750
propagation by

376
00:20:54,750 --> 00:20:58,070
sending the status update you know if
you're really trying to attack this he

377
00:20:58,070 --> 00:20:59,500
probably put some kind of

378
00:20:59,500 --> 00:21:03,270
during tax into the status update to you
like well check out this cool site I

379
00:21:03,270 --> 00:21:05,629
just found you guys should all come do
it

380
00:21:05,630 --> 00:21:09,180
and so it'll spread sort of you know
wayne's world style with all their

381
00:21:09,180 --> 00:21:12,460
friends telling their friends to tell
their friends and it just kinda grows

382
00:21:12,460 --> 00:21:14,750
from there

383
00:21:14,750 --> 00:21:19,000
so again it's just bad bad bad bad bad
don't ever do this

384
00:21:19,000 --> 00:21:24,130
I mean you have to be at least doing
some basic md5 hashing or something

385
00:21:24,130 --> 00:21:28,120
as you can see here username paradox
password snazzy pants

386
00:21:28,120 --> 00:21:32,590
so if I happen to be using not really
bad password for my email my backside

387
00:21:32,590 --> 00:21:33,790
anything

388
00:21:33,790 --> 00:21:38,200
whoever's attack me now has it

389
00:21:38,200 --> 00:21:41,910
so it's probably a good idea to start
talking about some protections against

390
00:21:41,910 --> 00:21:44,260
this kind of thing

391
00:21:44,260 --> 00:21:47,990
this generally to you really comin
protections against cross-site request

392
00:21:47,990 --> 00:21:50,920
forgery the first is this idea ever for
checking

393
00:21:50,920 --> 00:21:54,630
in the sense that all the actions on the
site should be passing along the pager

394
00:21:54,630 --> 00:21:56,850
for whatever cause the action sorry

395
00:21:56,850 --> 00:21:59,890
whichever page cause the action is there
for

396
00:21:59,890 --> 00:22:04,420
so the application can check that refer
and see if it makes sense if you're

397
00:22:04,420 --> 00:22:08,370
change email post request is coming from
binary paradox dotnet

398
00:22:08,370 --> 00:22:12,150
and you're changing a vampire fix
password does really make a lot of sense

399
00:22:12,150 --> 00:22:14,660
the app can prolly just discard that

400
00:22:14,660 --> 00:22:18,840
I'm in terms of being effective it's
strange because a lot of the research

401
00:22:18,840 --> 00:22:19,730
says that

402
00:22:19,730 --> 00:22:23,350
it's not effective because if things
like plugin vulnerabilities you can

403
00:22:23,350 --> 00:22:24,410
forge

404
00:22:24,410 --> 00:22:27,890
refer headers I mean obviously if you
load up your browser you can force the

405
00:22:27,890 --> 00:22:29,170
refer to be whatever you want

406
00:22:29,170 --> 00:22:32,960
really common if you can control the
request no problem but it's a lot harder

407
00:22:32,960 --> 00:22:34,410
to spoof this

408
00:22:34,410 --> 00:22:37,770
refer when you're doing it remotely
through across requests so

409
00:22:37,770 --> 00:22:41,210
is it effective possibly maybe not

410
00:22:41,210 --> 00:22:45,670
I again this cross site scripting paired
ceaser far

411
00:22:45,670 --> 00:22:48,640
well really doesn't matter cuz if you
got cross-site scripting problems in

412
00:22:48,640 --> 00:22:49,540
your application

413
00:22:49,540 --> 00:22:52,889
there's issues regardless so see serbs
probably

414
00:22:52,890 --> 00:22:55,910
less for concern

415
00:22:55,910 --> 00:23:00,120
the traditional method is this idea a
nonce and it's just a difficult to

416
00:23:00,120 --> 00:23:01,920
predict here secret

417
00:23:01,920 --> 00:23:05,450
that the application can generate per
request ideally

418
00:23:05,450 --> 00:23:09,290
and out stick it into the form so the
server comes up with some secret

419
00:23:09,290 --> 00:23:13,580
and it takes it into the the client
sessions that server side

420
00:23:13,580 --> 00:23:17,770
and then writes it out as a hidden form
parameter 2 all the forms that sends the

421
00:23:17,770 --> 00:23:18,750
user

422
00:23:18,750 --> 00:23:24,100
so when future requests come back yen if
they've come from the application itself

423
00:23:24,100 --> 00:23:27,180
that secret should match up with what I
was in the session

424
00:23:27,180 --> 00:23:31,650
and anybody outside if that current
scope more they can't know what that

425
00:23:31,650 --> 00:23:36,130
that nonce was because they they can't
see any of the content being sent from

426
00:23:36,130 --> 00:23:38,330
there because at this idea same origin

427
00:23:38,330 --> 00:23:41,389
kinda policy in the browser's on

428
00:23:41,390 --> 00:23:45,460
you can use its cross site scripting to
bypass this if you can access the DOM on

429
00:23:45,460 --> 00:23:47,220
the site somehow you can pull out

430
00:23:47,220 --> 00:23:51,559
the nonce and then generated a ganar do
all kinda trickery in that sense

431
00:23:51,559 --> 00:23:55,290
so Jack man now at the bottom there is
another web application

432
00:23:55,290 --> 00:23:58,399
researcher you can't put it nicely when
he said that

433
00:23:58,400 --> 00:24:01,800
ceaser prevention is not cross site
scripting prevention

434
00:24:01,800 --> 00:24:06,309
and cross it scripting kinda trumped
ceaser protection if your honor will the

435
00:24:06,309 --> 00:24:07,530
cross site scripting

436
00:24:07,530 --> 00:24:11,629
then you're vulnerable to see surf

437
00:24:11,630 --> 00:24:15,840
see can see that's what vampire feasted
in terms of their email changing script

438
00:24:15,840 --> 00:24:19,699
the interesting thing to note here is
that Tom this hidden for Amber validate

439
00:24:19,700 --> 00:24:20,780
that they've added

440
00:24:20,780 --> 00:24:24,270
I'm is not being generated per request
cell

441
00:24:24,270 --> 00:24:27,510
it's being generated per user account
which means

442
00:24:27,510 --> 00:24:31,170
by based on the look at it I like a
sha-1 hash or something they're hashing

443
00:24:31,170 --> 00:24:31,900
some

444
00:24:31,900 --> 00:24:36,660
detail related to your account and since
it's not being generated per request

445
00:24:36,660 --> 00:24:37,630
randomly

446
00:24:37,630 --> 00:24:40,480
if somebody then went and figured out
what they're hashing in what the

447
00:24:40,480 --> 00:24:41,410
relation is

448
00:24:41,410 --> 00:24:44,950
with your account if it's like your
first name your last name concatenated

449
00:24:44,950 --> 00:24:46,670
together and then hashed

450
00:24:46,670 --> 00:24:50,350
than the protections broken because the
attacker can just use the same scheme if

451
00:24:50,350 --> 00:24:52,100
they're targeting a specific user

452
00:24:52,100 --> 00:24:55,940
by hashing it ahead of time and I'm
including it in all their posts

453
00:24:55,940 --> 00:24:59,720
so it's always recommend that you be
generating is nonce is per request

454
00:24:59,720 --> 00:25:04,820
and ideally as randomly as possible

455
00:25:04,820 --> 00:25:08,250
so there are some other attacks and
benefits that aren't immediately

456
00:25:08,250 --> 00:25:10,660
apparent for this kind of thing and then
nom

457
00:25:10,660 --> 00:25:14,670
I mean related to some other attacks
that aren't sort of the typical

458
00:25:14,670 --> 00:25:18,190
cross-site request forgery but sure
enough properties that I think it's

459
00:25:18,190 --> 00:25:21,130
appropriate

460
00:25:21,130 --> 00:25:24,700
one of them then one my favorites i
think is it's called the cross protocol

461
00:25:24,700 --> 00:25:25,770
attack

462
00:25:25,770 --> 00:25:28,990
and is largely the same as the surf
except you're not

463
00:25:28,990 --> 00:25:32,020
really duping offended haitian this case
what you doing is

464
00:25:32,020 --> 00:25:35,980
inning the payload form data at a non
HTTP service

465
00:25:35,980 --> 00:25:39,740
which sounds crazy but when you start
using I'm the right kinda forming coding

466
00:25:39,740 --> 00:25:42,070
generally use for file uploads

467
00:25:42,070 --> 00:25:46,149
and your heart start having these non
HTTP services that are very generous in

468
00:25:46,150 --> 00:25:50,230
terms of what kind of junk data the let
you have before a valid request

469
00:25:50,230 --> 00:25:53,710
you can do all sorts of nasty things and
this again is a are another all their

470
00:25:53,710 --> 00:25:54,200
attack

471
00:25:54,200 --> 00:25:57,360
com I mean a butcher the name here
Johann talk

472
00:25:57,360 --> 00:26:02,790
probably he came up with this paper
called HTML form protocol attack in 2001

473
00:26:02,790 --> 00:26:06,180
and it was basically tricking browsers
into sending arbitrary date at two

474
00:26:06,180 --> 00:26:07,780
specified port

475
00:26:07,780 --> 00:26:10,809
FTP SMTP NNTP

476
00:26:10,809 --> 00:26:14,670
pop 3 I love these kind of traditional
all the protocols

477
00:26:14,670 --> 00:26:17,930
that are generous about you know
throwing out weird stuff that comes in

478
00:26:17,930 --> 00:26:21,030
in terms of HTTP headers before the
request

479
00:26:21,030 --> 00:26:25,290
and then because the form in coatings
been tricked you can really sorta layout

480
00:26:25,290 --> 00:26:28,680
your form data so that it forms a valid
request

481
00:26:28,680 --> 00:26:32,040
after all this junk data so if the junk
status discarded

482
00:26:32,040 --> 00:26:37,240
and you've got a valid request then you
know if using FTP SMTP you can start

483
00:26:37,240 --> 00:26:38,690
putting put commands in

484
00:26:38,690 --> 00:26:42,360
and things like that with arbitrary data
that gets forced

485
00:26:42,360 --> 00:26:46,680
so what happened was most the major
browsers the easiest fix they just are

486
00:26:46,680 --> 00:26:50,390
blocking ports by default that weren't
related to http

487
00:26:50,390 --> 00:26:54,130
so the ire seaport the FT arts are not
have to keep but come on

488
00:26:54,130 --> 00:26:58,270
SMTP ports that you should never really
be sending HTTP data to: they just

489
00:26:58,270 --> 00:26:59,600
blocked them

490
00:26:59,600 --> 00:27:03,130
on the fun part in what makes it
relevant to the stock is there in the

491
00:27:03,130 --> 00:27:04,390
past year

492
00:27:04,390 --> 00:27:08,020
crossed for a car tax account had a
resurgence thanks to you

493
00:27:08,020 --> 00:27:12,610
good see security and I blacklist
themselves that they're never perfect

494
00:27:12,610 --> 00:27:13,050
right

495
00:27:13,050 --> 00:27:17,020
you have to know all the bad ports an
all the services that could be on them

496
00:27:17,020 --> 00:27:19,100
and specifically blocked those ports

497
00:27:19,100 --> 00:27:21,980
and you have to be careful because you
know if you block the wrong ports may be

498
00:27:21,980 --> 00:27:23,100
a breaking some

499
00:27:23,100 --> 00:27:26,830
enterprise application you've got
developers and businesses breathing down

500
00:27:26,830 --> 00:27:27,919
your throat

501
00:27:27,920 --> 00:27:31,140
so what they did was they they are two
separate attacks the first was the

502
00:27:31,140 --> 00:27:32,059
Firefox

503
00:27:32,059 --> 00:27:35,970
XPS IRC attack in the second was a
safari version

504
00:27:35,970 --> 00:27:39,700
the first one the Firefox one what
happened was through this blacklisting

505
00:27:39,700 --> 00:27:44,490
process up Mozilla forgot to block the
default higher seaport

506
00:27:44,490 --> 00:27:47,860
and they were able to reflect IRC spam

507
00:27:47,860 --> 00:27:52,929
to specific IRC networks and what happen
is through that the process up this

508
00:27:52,929 --> 00:27:54,760
reflection in the cross-site

509
00:27:54,760 --> 00:27:59,929
kinda request forgery nature of it is
that the people spamming these channels

510
00:27:59,929 --> 00:28:03,940
weren't go to the security they were
whoever happened to browse the web site

511
00:28:03,940 --> 00:28:07,260
so they're getting K line of their own
channels if you can check developers

512
00:28:07,260 --> 00:28:09,590
from those channels are users are
anybody

513
00:28:09,590 --> 00:28:12,370
to view this webpage suddenly they're
spamming their own channels in the

514
00:28:12,370 --> 00:28:15,809
moderators kick in and start banning IP
is but some the moderators and then

515
00:28:15,809 --> 00:28:17,428
getting tricked into going to the
channel

516
00:28:17,429 --> 00:28:21,260
here that the exploits the banning
themselves and it was a mass

517
00:28:21,260 --> 00:28:25,570
on Safari that this one was interesting
because their block list was good

518
00:28:25,570 --> 00:28:28,830
but they had one of these old see
vulnerabilities in terms of the unsigned

519
00:28:28,830 --> 00:28:29,309
short

520
00:28:29,309 --> 00:28:32,910
overflow so if you added the right
amount

521
00:28:32,910 --> 00:28:37,150
it would overflow a block sport into our
a new number

522
00:28:37,150 --> 00:28:41,570
that wasn't locked but would be decoded
to the same wanted overflow

523
00:28:41,570 --> 00:28:46,950
so you like it says here you add 65536
to a block port

524
00:28:46,950 --> 00:28:53,940
you get a new number it's not blocked so
troll on

525
00:28:53,940 --> 00:28:56,690
the interesting thing about a lot of
these attacks is that when you think

526
00:28:56,690 --> 00:28:58,290
you're the expert flow

527
00:28:58,290 --> 00:29:01,309
you're obscuring the origin of the
attack really in the sense that it's

528
00:29:01,309 --> 00:29:04,010
very hard to connect it back to whoever

529
00:29:04,010 --> 00:29:08,100
set up the attack site the user request
bad content from somewhere

530
00:29:08,100 --> 00:29:11,740
and the bad content forces the user to
perform an action

531
00:29:11,740 --> 00:29:14,850
so much you can get access and term serv
file

532
00:29:14,850 --> 00:29:18,740
what sent the user there either browsing
logs or if you was posted to the website

533
00:29:18,740 --> 00:29:19,620
itself

534
00:29:19,620 --> 00:29:23,510
did that the learning URL then there's
really not a whole lot of ways to link

535
00:29:23,510 --> 00:29:25,970
the attack back to the attacker

536
00:29:25,970 --> 00:29:30,520
on the attack source is the user and
again but the user can access

537
00:29:30,520 --> 00:29:34,920
the exploit can this becomes interesting
when you start thinking about

538
00:29:34,920 --> 00:29:38,480
the general idea fire loss because
sought the attacker

539
00:29:38,480 --> 00:29:42,070
can be outside the firewall and the
victim inside

540
00:29:42,070 --> 00:29:45,710
and if you can send them a link when
they visit at the attack is coming from

541
00:29:45,710 --> 00:29:49,780
inside the firewall so they're able to
access internet resources

542
00:29:49,780 --> 00:29:53,020
networking equipment test servers
whatever you normally consider

543
00:29:53,020 --> 00:29:55,540
off-limits is suddenly

544
00:29:55,540 --> 00:29:58,210
available because it's the user
themselves that are performing the

545
00:29:58,210 --> 00:29:59,150
action

546
00:29:59,150 --> 00:30:02,790
are there's been interesting research in
terms about the small office/home office

547
00:30:02,790 --> 00:30:04,159
routers

548
00:30:04,160 --> 00:30:08,020
because if you can't require these users
to you view the content

549
00:30:08,020 --> 00:30:11,160
you can access the router from the user
fact

550
00:30:11,160 --> 00:30:15,700
sorry the user's perspective and do
things like be flashing the firmware

551
00:30:15,700 --> 00:30:19,480
changing the DNS server addresses really
anything you can do three most these

552
00:30:19,480 --> 00:30:20,720
control panels

553
00:30:20,720 --> 00:30:25,290
they weren't really hardened because
it's assumed you're accessing it from my

554
00:30:25,290 --> 00:30:28,420
19 2.1 68 at 1.1 or something

555
00:30:28,420 --> 00:30:32,080
you know the local map block so you
can't do

556
00:30:32,080 --> 00:30:35,850
a whole bunch about things like that so
kinda got this

557
00:30:35,850 --> 00:30:40,980
this picture of it here to just really
drive the point home

558
00:30:40,980 --> 00:30:44,410
see got the attacker sending this
lowering link through the firewall to

559
00:30:44,410 --> 00:30:46,780
the victim

560
00:30:46,780 --> 00:30:49,850
the victim then goes out access is this
attacker site

561
00:30:49,850 --> 00:30:54,340
and polls content back through standard
HTTP stuff through the firewall

562
00:30:54,340 --> 00:30:57,750
not gonna be blocked unless the attacker
site is already known as some kinda bad

563
00:30:57,750 --> 00:30:59,580
site

564
00:30:59,580 --> 00:31:02,919
and then from there you can fire off
request to you anything really

565
00:31:02,920 --> 00:31:06,830
and there's been work in terms of doing
seems strange to report scanning

566
00:31:06,830 --> 00:31:10,139
techniques by loading up images that
point to a whole bunch of stuff that you

567
00:31:10,140 --> 00:31:11,440
think might exist

568
00:31:11,440 --> 00:31:14,920
and then you can kind of time how long
it takes for the image to load or not

569
00:31:14,920 --> 00:31:15,460
load

570
00:31:15,460 --> 00:31:19,270
and you've been able to discover whether
there's boxes that certain addresses or

571
00:31:19,270 --> 00:31:24,460
services on certain ports so you can
actually use this kind idea to port scan

572
00:31:24,460 --> 00:31:28,260
things behind a firewall

573
00:31:28,260 --> 00:31:30,830
so i thought id throw the sanity and
here just because it's getting so much

574
00:31:30,830 --> 00:31:31,909
attention lately

575
00:31:31,910 --> 00:31:35,179
I this is attacked conserve cut
clickjacking

576
00:31:35,179 --> 00:31:38,490
come a terrible named by Tom everyone
school name for all their

577
00:31:38,490 --> 00:31:43,429
new stuff I it I consider almost never
lucien across that request forgery

578
00:31:43,429 --> 00:31:46,820
I there's probably a lot of people are
gonna disagree with me on that one

579
00:31:46,820 --> 00:31:50,100
but you're still forcing authenticate
the client actions you're just doing it

580
00:31:50,100 --> 00:31:53,230
and a different way what they do is some

581
00:31:53,230 --> 00:31:56,250
you sort of load the target website

582
00:31:56,250 --> 00:31:59,360
in an iframe again but you make that I
from invisible

583
00:31:59,360 --> 00:32:03,190
and then you figure out certain layouts
so that you can move

584
00:32:03,190 --> 00:32:06,760
this I attacking the site you're trying
to attack

585
00:32:06,760 --> 00:32:10,900
underneath the person's mouse cursor so
many put up some big button like you

586
00:32:10,900 --> 00:32:12,520
know click here for the porn

587
00:32:12,520 --> 00:32:16,320
and you lay it out such that when they
click that button to click passes

588
00:32:16,320 --> 00:32:17,549
through

589
00:32:17,549 --> 00:32:21,730
this fake button in his actually
clicking the form on the website to send

590
00:32:21,730 --> 00:32:22,940
a message in

591
00:32:22,940 --> 00:32:27,650
things like that so it uses the real
forms on the website rather than forcing

592
00:32:27,650 --> 00:32:29,429
some kinda fake request

593
00:32:29,429 --> 00:32:33,140
so bypasses this problem with the nonce
because the nonce is loaded right into

594
00:32:33,140 --> 00:32:33,920
the form

595
00:32:33,920 --> 00:32:36,990
their actually using the form they just
don't know they are

596
00:32:36,990 --> 00:32:40,330
and this has been a real problem for
Facebook lately all the peace out like

597
00:32:40,330 --> 00:32:43,678
exploits where people think they're
clicking the like something and then it

598
00:32:43,679 --> 00:32:45,890
gets sent out through all their friends

599
00:32:45,890 --> 00:32:49,820
this is all clickjacking so I thought
out in the end cuz it's basically the

600
00:32:49,820 --> 00:32:53,419
same idea you're just foresees a thing
to Caticlan actions

601
00:32:53,420 --> 00:32:57,160
on just now it's a little bit smarter
because its use in the whole page

602
00:32:57,160 --> 00:33:00,450
and they're getting better in the sense
that they even worry less about trying

603
00:33:00,450 --> 00:33:01,370
to lay

604
00:33:01,370 --> 00:33:05,059
the fake elements on top of the valid
elements because with JavaScript you can

605
00:33:05,059 --> 00:33:08,700
just have it all float around the mouse
if you move the mouse over here than the

606
00:33:08,700 --> 00:33:12,340
the page that's over here so there's
really no way to not click on it you

607
00:33:12,340 --> 00:33:14,630
know if you click somewhere outside this
fake button

608
00:33:14,630 --> 00:33:18,309
you're still clicking on the form if you
click anywhere inside the page

609
00:33:18,309 --> 00:33:21,760
you're clicking on this form so it's
been of own terms have

610
00:33:21,760 --> 00:33:27,710
trying to protect users from that you're
just hijacking user input

611
00:33:27,710 --> 00:33:33,320
its so that's in my presentation I got
about I'm here for questions if anybody

612
00:33:33,320 --> 00:33:34,010
is sir

613
00:33:34,010 --> 00:33:37,390
interest in grilling here I'm like a
solid developer I do this kinda stuff

614
00:33:37,390 --> 00:33:37,890
and

615
00:33:37,890 --> 00:33:43,559
hobby so if I said anything wrong feel
free cracked me

616
00:33:43,559 --> 00:33:47,670
yes

617
00:33:47,670 --> 00:33:50,670
however mediation for clickjacking yes I

618
00:33:50,670 --> 00:33:54,240
there's nothing great obviously can use
something like no script

619
00:33:54,240 --> 00:33:57,850
I turning off JavaScript but again you
can't recommend that to your grandma

620
00:33:57,850 --> 00:34:00,940
because either shell just stop using the
Internet where shiel

621
00:34:00,940 --> 00:34:06,340
allow anything anyway on one of the
newer techniques in terms of our fixing

622
00:34:06,340 --> 00:34:10,070
clickjacking is an extra X header that
you can put

623
00:34:10,070 --> 00:34:13,810
into your web sites that say I should
never be I framed

624
00:34:13,810 --> 00:34:17,649
if I'm being loaded in iframe just break
the problem with that is because it's

625
00:34:17,649 --> 00:34:18,049
when these

626
00:34:18,050 --> 00:34:21,450
axe hatter's saddam you need browser
support I think

627
00:34:21,449 --> 00:34:24,839
I E 8 hazard on the new Firefox has it
but

628
00:34:24,840 --> 00:34:29,609
website have to ops into it and dot your
user has to be using one right

629
00:34:29,609 --> 00:34:34,029
browsers for it on there's other kinds
of iframe protection techniques are a

630
00:34:34,030 --> 00:34:36,869
lot of web sites have hunks have
JavaScript up to the top

631
00:34:36,869 --> 00:34:40,970
that Dad try to detect when they're
being framed in a bust out a bit

632
00:34:40,970 --> 00:34:44,359
there's been a paper I think last year I
don't know if I have it in my resources

633
00:34:44,359 --> 00:34:45,009
and I

634
00:34:45,010 --> 00:34:48,159
can't remember the name but they they
surveyed a bunch these web sites with

635
00:34:48,159 --> 00:34:48,960
the

636
00:34:48,960 --> 00:34:52,690
the frame busting JavaScript and found
that most of them did it wrong and

637
00:34:52,690 --> 00:34:53,760
you're able to still

638
00:34:53,760 --> 00:34:56,990
iframe the pagers cell really the only
effective

639
00:34:56,990 --> 00:35:00,180
defense against clickjacking is this
extra header

640
00:35:00,180 --> 00:35:03,710
and I it's not really a pervasive yet

641
00:35:03,710 --> 00:35:10,710
so yeah

642
00:35:15,470 --> 00:35:19,290
I think you're right yes there's there's
saw no script in particular has extra

643
00:35:19,290 --> 00:35:20,110
across a

644
00:35:20,110 --> 00:35:23,570
a scripting protection and I think
you're right about it

645
00:35:23,570 --> 00:35:27,150
a special clickjacking prevent
protection so you're right it's probably

646
00:35:27,150 --> 00:35:29,120
better advice than admitting to you

647
00:35:29,120 --> 00:35:32,410
tell people use no script even if they
allow global scripts like you say I

648
00:35:32,410 --> 00:35:34,170
guess it'll still probably block these

649
00:35:34,170 --> 00:35:37,190
his quick jacking attacks sour

650
00:35:37,190 --> 00:35:41,620
any other questions party

651
00:35:41,620 --> 00:35:45,040
I like put that in there I i'm from
trial

652
00:35:45,040 --> 00:35:48,509
so we just survived the g20 stuff and
there's a lot of fun injustice still

653
00:35:48,510 --> 00:35:49,490
going on there

654
00:35:49,490 --> 00:35:53,280
byron in particular was a assist a
security professional

655
00:35:53,280 --> 00:35:58,000
who was doing on some questionable
things prije 22 kind eliminate this idea

656
00:35:58,000 --> 00:35:59,120
of security theater

657
00:35:59,120 --> 00:36:02,250
are taking pictures of the cameras in
the fences that were being installed

658
00:36:02,250 --> 00:36:05,780
are supposedly buying things that were
on

659
00:36:05,780 --> 00:36:09,130
here that would potentially get you
wanna watch list and

660
00:36:09,130 --> 00:36:12,520
they picked him up and he still being
held without bail aren't so this

661
00:36:12,520 --> 00:36:16,200
friends a buyer in wiki is being run by
that the trial how club

662
00:36:16,200 --> 00:36:20,140
he was affiliated with them so they're
trying to collect on you know sensible

663
00:36:20,140 --> 00:36:21,080
resources and

664
00:36:21,080 --> 00:36:26,990
try to raise awareness hi at the back
there Kevin 6-light

665
00:36:26,990 --> 00:36:33,990
right

666
00:36:39,040 --> 00:36:46,040
yep

667
00:36:48,240 --> 00:36:55,240
right

668
00:36:58,220 --> 00:37:02,650
right so his cum into the back there was
that done three for protection I mention

669
00:37:02,650 --> 00:37:03,340
being

670
00:37:03,340 --> 00:37:08,260
not all that great a lot of people our
turn off this idea of sending her first

671
00:37:08,260 --> 00:37:11,330
because they're worried about privacy
issues I know the door button plugin and

672
00:37:11,330 --> 00:37:14,130
a bunch of other things they all scrub
this refer data

673
00:37:14,130 --> 00:37:17,960
and as he mentioned if you're using this
refer data to

674
00:37:17,960 --> 00:37:21,119
kinda determine when the requests are
valid when they aren't

675
00:37:21,119 --> 00:37:25,320
if somebody is turned off sending refers
because it it something valid to do

676
00:37:25,320 --> 00:37:28,610
then now I love your forms will just
break for them because they look like a

677
00:37:28,610 --> 00:37:29,230
tax

678
00:37:29,230 --> 00:37:36,230
any other questions now they're back
there

679
00:37:46,360 --> 00:37:50,110
right yeah there's that there's a good
list the default passwords and then nom

680
00:37:50,110 --> 00:37:53,500
there's been lots a vulnerability is in
turn to these crappy d-link firmwares

681
00:37:53,500 --> 00:37:58,330
in Eve being a access admin some
sections without being logged in

682
00:37:58,330 --> 00:38:02,480
so normally that kinda vulnerabilities
not dat big a deal because you're not

683
00:38:02,480 --> 00:38:04,340
able to access the router but

684
00:38:04,340 --> 00:38:08,520
if you suddenly can through across a
request for you can compare it with that

685
00:38:08,520 --> 00:38:11,650
otherwise you're right I i suspect you
not gonna find a lot of people that

686
00:38:11,650 --> 00:38:14,650
leave themselves logged into the router
admin panel say your

687
00:38:14,650 --> 00:38:18,710
con relying on either I'm a default
admin password kinda deal

688
00:38:18,710 --> 00:38:23,620
or %ah or when it is other exploits that
you get to admin access kind of things

689
00:38:23,620 --> 00:38:25,589
without being logged in as administrator

690
00:38:25,590 --> 00:38:29,230
so that so I got resources at the end
here that the

691
00:38:29,230 --> 00:38:32,420
post up on my website at the bottom
there binary paradox dotnet

692
00:38:32,420 --> 00:38:35,460
and I believe those ones are all from

693
00:38:35,460 --> 00:38:39,740
about GN you citizen they do a lot of
web application stuff and they had like

694
00:38:39,740 --> 00:38:43,720
I think a whole month almost where they
were just hammering on specific router

695
00:38:43,720 --> 00:38:45,500
firmware is this beauty home

696
00:38:45,500 --> 00:38:51,380
hard but I think be teasin based on a
Briton somewhere any other questions

697
00:38:51,380 --> 00:38:55,780
so I am being blinded here no

698
00:38:55,780 --> 00:39:02,780
alright but thanks very much

699
00:39:14,990 --> 00:39:18,260
Angeles percentage thank you very much
you heard

700
00:39:18,260 --> 00:39:22,200
future

701
00:39:22,200 --> 00:39:25,670
thank you

702
00:39:25,670 --> 00:39:31,580
you

703
00:39:31,580 --> 00:39:38,580
act

704
00:39:42,330 --> 00:39:47,240
said

705
00:39:47,240 --> 00:39:51,760
something

706
00:39:51,760 --> 00:39:58,760
I'm not fully just answers

707
00:40:05,160 --> 00:40:12,160
you

708
00:40:12,240 --> 00:40:19,240
up

709
00:40:39,700 --> 00:40:43,010
sir truck

710
00:40:43,010 --> 00:40:48,480
Kenya

711
00:40:48,480 --> 00:40:51,910
relief thanks

712
00:40:51,910 --> 00:40:55,810
just

713
00:40:55,810 --> 00:40:56,060
up

