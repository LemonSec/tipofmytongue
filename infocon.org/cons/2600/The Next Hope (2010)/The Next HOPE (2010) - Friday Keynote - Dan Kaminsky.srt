1
00:00:01,969 --> 00:00:04,640
alright so you met go after a p.o.s shit
again

2
00:00:04,640 --> 00:00:08,769
alright sell a business park gonna be on
a DVD

3
00:00:08,769 --> 00:00:12,130
0 that's great what a phenomenal start

4
00:00:12,130 --> 00:00:19,029
and for this element has wanted to
attend a conference for many years so I

5
00:00:19,029 --> 00:00:20,320
can demand you have for

6
00:00:20,320 --> 00:00:23,900
try to work it out he's very excited to
be here is a well respected in the

7
00:00:23,900 --> 00:00:25,119
computer security world

8
00:00:25,119 --> 00:00:32,119
I Dan Kaminsky

9
00:00:37,329 --> 00:00:39,100
holy crap I finally made up hope

10
00:00:39,100 --> 00:00:42,460
took me long enough so

11
00:00:42,460 --> 00:00:46,129
hi I'm dare I had a company

12
00:00:46,129 --> 00:00:51,530
whatever on I wanna start this talk by

13
00:00:51,530 --> 00:00:55,129
a by telling a story who here

14
00:00:55,129 --> 00:01:00,110
was familiar is familiar with the that
he left renegotiation but found by

15
00:01:00,110 --> 00:01:01,470
Marjorie last year

16
00:01:01,470 --> 00:01:06,910
was that not like the most beautiful dog
that have come out

17
00:01:06,910 --> 00:01:10,320
games years this was 8-core

18
00:01:10,320 --> 00:01:14,390
crypto design flaw it had been there
since the beginning a veces el

19
00:01:14,390 --> 00:01:18,250
it was more the situations where two
pieces the protocol

20
00:01:18,250 --> 00:01:21,399
thought the same message made two
different things entirely

21
00:01:21,399 --> 00:01:26,070
beautiful so my shrines this bug

22
00:01:26,070 --> 00:01:30,600
both together a whole buncha people just
like I did for DNS

23
00:01:30,600 --> 00:01:34,869
any other best part up like they did
like months and months a secret work

24
00:01:34,869 --> 00:01:40,750
you know the best part is that was I had
nothing to do with its

25
00:01:40,750 --> 00:01:44,899
no idea what's going on I went to sleep
every night least

26
00:01:44,899 --> 00:01:50,789
billion aware on for so this was a very
big effort they spent thousands of hours

27
00:01:50,789 --> 00:01:53,420
coming up with a a very deep fix

28
00:01:53,420 --> 00:01:56,750
on the fix was almost perfect

29
00:01:56,750 --> 00:02:00,440
almost the fix it ended up coming up
with the

30
00:02:00,440 --> 00:02:04,929
ended up not working on a now 0.0 1.03
percent

31
00:02:04,929 --> 00:02:11,129
servers up you know it's pretty good
right ninety 9.7 percent compliance i

32
00:02:11,129 --> 00:02:15,420
mean that's totally good enough for
deployment right yeah

33
00:02:15,420 --> 00:02:18,640
so it's of a default everywhere in the
known universe

34
00:02:18,640 --> 00:02:22,230
crapper

35
00:02:22,230 --> 00:02:25,679
suits so this is interesting to me

36
00:02:25,680 --> 00:02:29,200
arm a huge amount of effort was spent

37
00:02:29,200 --> 00:02:33,330
a huge amount a code was written a lot
of political capital with exerted

38
00:02:33,330 --> 00:02:38,180
no benefit to my mom that's not cool

39
00:02:38,180 --> 00:02:41,640
I got some bad news I got some good news

40
00:02:41,640 --> 00:02:45,110
the bad news is as hackers we sometimes
give

41
00:02:45,110 --> 00:02:50,100
you're really bad advice sometimes will
tell people this is what you gonna do it

42
00:02:50,100 --> 00:02:53,070
it'll be secure thats all that matters
in the world

43
00:02:53,070 --> 00:02:56,820
I we in more technical terms only
consider

44
00:02:56,820 --> 00:03:01,440
our own engineering requirements which
is that if they get compromised

45
00:03:01,440 --> 00:03:04,730
on we assume that the environment is
static

46
00:03:04,730 --> 00:03:08,000
we assume that the tools are static if
things are going to be as they are

47
00:03:08,000 --> 00:03:11,280
and you know the only thing we care
about we give our bases

48
00:03:11,280 --> 00:03:15,890
well Lisa save and in the case that the
last bug

49
00:03:15,890 --> 00:03:21,410
release I can turn it on for myself
sister bad mix

50
00:03:21,410 --> 00:03:24,590
the good news is if things are

51
00:03:24,590 --> 00:03:27,590
ever actually to get better

52
00:03:27,590 --> 00:03:31,040
if we're ever actually to you see

53
00:03:31,040 --> 00:03:34,870
people having more secure systems I'm
gonna tell you something

54
00:03:34,870 --> 00:03:39,810
it ain't happenin without hackers people
who don't know how to break into things

55
00:03:39,810 --> 00:03:45,020
who really don't know how to fix them at
the end of the day the analogy I've been

56
00:03:45,020 --> 00:03:45,740
using is

57
00:03:45,740 --> 00:03:50,410
on it's kinda like turning off your cell
phone when you get onto the airplane

58
00:03:50,410 --> 00:03:54,310
whatever you have to do it it's got
nothing to do with safety

59
00:03:54,310 --> 00:03:58,520
how can a secret count 1 terms of their
fellow

60
00:03:58,520 --> 00:04:02,280
X so

61
00:04:02,280 --> 00:04:06,360
let's start by talking about something
that is really really broken

62
00:04:06,360 --> 00:04:10,080
which I hope through some work
eventually

63
00:04:10,080 --> 00:04:15,180
we can finally see get fixed what we
have here

64
00:04:15,180 --> 00:04:19,750
are two SSH sessions to two completely
different servers

65
00:04:19,750 --> 00:04:23,280
I broke into two boxes okay

66
00:04:23,280 --> 00:04:27,180
when I'm walking 22 SSH servers

67
00:04:27,180 --> 00:04:30,580
do I need to worry about what other
servers hacking the other

68
00:04:30,580 --> 00:04:34,830
new with I'll look into two different
web sites

69
00:04:34,830 --> 00:04:39,400
do I need to worry about what are those
web sites logging into the other

70
00:04:39,400 --> 00:04:43,370
yes why is this because session
management

71
00:04:43,370 --> 00:04:47,880
all the red is totally broke a in
session management and SH

72
00:04:47,880 --> 00:04:52,759
works pretty well the web was never
designed

73
00:04:52,759 --> 00:04:56,169
to host authenticated resources
authentication with

74
00:04:56,169 --> 00:04:59,248
basically bolted on I mean if you go to
the beginning

75
00:04:59,249 --> 00:05:03,659
once upon a time the web was just like
flat files in a directory

76
00:05:03,659 --> 00:05:07,479
and then people started saying hey wait
a second we can make money if we be a

77
00:05:07,479 --> 00:05:08,909
little dynamic here

78
00:05:08,909 --> 00:05:15,199
and that's where it all started going
downhill now

79
00:05:15,199 --> 00:05:19,990
the real world normal mechanism by which
credentials tend to be managed

80
00:05:19,990 --> 00:05:23,300
our cookies the idea is that you have
some form

81
00:05:23,300 --> 00:05:27,139
you type in the password is password all
we can finally make work after all these

82
00:05:27,139 --> 00:05:27,800
years

83
00:05:27,800 --> 00:05:32,050
and you don't want to have to type in
the password for every single web page

84
00:05:32,050 --> 00:05:33,069
you go to

85
00:05:33,069 --> 00:05:36,580
so we end up seeing is the first time
you enter password

86
00:05:36,580 --> 00:05:40,620
you get a cookie back a tiny little
opaque plot the now attached

87
00:05:40,620 --> 00:05:44,819
every single request to a site and now
you don't have to keep putting in your

88
00:05:44,819 --> 00:05:47,580
password over and over and over again

89
00:05:47,580 --> 00:05:52,099
seems pretty reasonable the thing is
cookies are attached to

90
00:05:52,099 --> 00:05:55,169
every single request to a site

91
00:05:55,169 --> 00:05:58,628
even if that request came from some
foreign domain

92
00:05:58,629 --> 00:06:03,870
see your login to your break and you're
also browsing some random bad website

93
00:06:03,870 --> 00:06:07,120
that read about website can mix his

94
00:06:07,120 --> 00:06:10,919
you are a request with your credentials

95
00:06:10,919 --> 00:06:14,938
at the end of the day this is why I
cross site scripting

96
00:06:14,939 --> 00:06:18,909
in cross-site request forgery is a big
deal

97
00:06:18,909 --> 00:06:23,150
it's because the actual credentials that
we use to login to web sites

98
00:06:23,150 --> 00:06:26,740
or really really leaky

99
00:06:26,740 --> 00:06:30,939
now what we tend to say as hackers as
Penn testers is

100
00:06:30,939 --> 00:06:34,039
well when you log into a website

101
00:06:34,039 --> 00:06:37,080
you should have a little extra blog
attached

102
00:06:37,080 --> 00:06:42,068
every single URL you might see this you
a little blah but noisy ok all token

103
00:06:42,069 --> 00:06:43,509
equals that some noise

104
00:06:43,509 --> 00:06:48,529
whenever you're browsing the
authenticator portions of the Site

105
00:06:48,529 --> 00:06:53,439
this works so that's right this is cool
works we got a solution we're done

106
00:06:53,439 --> 00:06:57,430
amazingly enough Daves kinda hate this
because cookies

107
00:06:57,430 --> 00:07:02,499
are automatic you flip the switch they
work the browser takes care for it done

108
00:07:02,499 --> 00:07:06,289
with this stuff you have to touch every
single

109
00:07:06,289 --> 00:07:10,520
URL in a web application see you know
what happens

110
00:07:10,520 --> 00:07:15,020
people don't do it and so we go ahead
with bicycle ya go through this open on

111
00:07:15,020 --> 00:07:18,438
and then they try and they realize it's
going to be more work to

112
00:07:18,439 --> 00:07:22,379
added this little token it was for them
to write the web application

113
00:07:22,379 --> 00:07:25,499
in the first place and so they go tell
you to pound saint

114
00:07:25,499 --> 00:07:28,490
then you come back six months later you
have the same finding in you keep doing

115
00:07:28,490 --> 00:07:32,909
this until the pen test budget exhausted

116
00:07:32,909 --> 00:07:38,139
so couldn't the tools be a little better

117
00:07:38,139 --> 00:07:41,800
every time I look at the web are web
seen I see people

118
00:07:41,800 --> 00:07:46,899
arguing about whether SVG files should
be able to an image

119
00:07:46,899 --> 00:07:51,960
that's nice that's cool could we maybe
have the ability to plug into a website

120
00:07:51,960 --> 00:07:54,069
securely

121
00:07:54,069 --> 00:07:58,680
maybe that's a little more important

122
00:07:58,680 --> 00:08:02,189
so I tried to build this I went ahead

123
00:08:02,189 --> 00:08:06,919
and I built work different systems that
tried to go ahead and make it to you

124
00:08:06,919 --> 00:08:07,808
knew

125
00:08:07,809 --> 00:08:11,439
when you are browsing the web site that
you were any request

126
00:08:11,439 --> 00:08:15,270
actually came from a the site at play

127
00:08:15,270 --> 00:08:18,539
in other words I want to be able to
differentiate where

128
00:08:18,539 --> 00:08:21,998
the site I'm logged in to sensory
somewhere verses where

129
00:08:21,999 --> 00:08:26,429
some other site does this the shooting
to be a complicated thing

130
00:08:26,429 --> 00:08:30,339
it's really hard so I came up with four
different mechanisms

131
00:08:30,339 --> 00:08:33,460
we don't need to go to the details I
just wanna say

132
00:08:33,460 --> 00:08:39,149
all got old thoroughly thank you see
stone crews at fifty-five me Klein Dave

133
00:08:39,149 --> 00:08:41,229
Ross a third are kept

134
00:08:41,229 --> 00:08:44,550
this is of the

135
00:08:44,550 --> 00:08:48,490
we have a bit of a problem in RC and
what are those problems is

136
00:08:48,490 --> 00:08:53,500
were really slow to get around actually
breaking stuff

137
00:08:53,500 --> 00:08:57,180
know if you've noticed up we don't break
things when they're actually being

138
00:08:57,180 --> 00:08:58,130
developed

139
00:08:58,130 --> 00:09:01,439
we don't break and when they're released
we don't even break it went early

140
00:09:01,440 --> 00:09:02,470
adopters

141
00:09:02,470 --> 00:09:06,230
or you think they're what happens is
something gets to a certain

142
00:09:06,230 --> 00:09:10,329
popularity level and you know it's
unlike oh wow

143
00:09:10,329 --> 00:09:17,329
some people are you this big let's find
out if it's crap

144
00:09:17,639 --> 00:09:21,220
little late

145
00:09:21,220 --> 00:09:24,690
we need to close this feedback we need
to get to the point where

146
00:09:24,690 --> 00:09:28,509
when major new technologies are looking
like they're going to get adopted

147
00:09:28,509 --> 00:09:31,670
we have a reason to believe that they
had been

148
00:09:31,670 --> 00:09:35,250
thoroughly and publicly and the route we

149
00:09:35,250 --> 00:09:39,509
audit so here's the deal

150
00:09:39,509 --> 00:09:43,209
whatever is going on with everyone else
defenses

151
00:09:43,209 --> 00:09:46,519
I want mine to get destroyed

152
00:09:46,519 --> 00:09:49,910
no question no delay because

153
00:09:49,910 --> 00:09:54,300
life East true short Tupac broken code

154
00:09:54,300 --> 00:09:58,259
what could possibly be worse and
spending years of your life in a defense

155
00:09:58,259 --> 00:10:01,730
and that one day finding out oh yeah
that doesn't work

156
00:10:01,730 --> 00:10:07,110
the session manager is gonna require
some pretty deep changes to the browser

157
00:10:07,110 --> 00:10:10,269
and if you're interested in it come up
walk up to me

158
00:10:10,269 --> 00:10:13,790
and we can talk about some other details
there is

159
00:10:13,790 --> 00:10:17,980
something else that might not require
nearly the sort love

160
00:10:17,980 --> 00:10:21,389
deep changes

161
00:10:21,389 --> 00:10:24,860
this is a really interesting I have
known for about 10 years

162
00:10:24,860 --> 00:10:29,040
Jeremiah Grossman he runs a company
called whitehat security

163
00:10:29,040 --> 00:10:33,269
white actors tremendous amounts the
website auditor

164
00:10:33,269 --> 00:10:39,120
and he has something that a lot of us
really should be looking at more

165
00:10:39,120 --> 00:10:42,790
which is data we we tend to run along on

166
00:10:42,790 --> 00:10:46,219
anecdote you know I heard theories

167
00:10:46,220 --> 00:10:49,370
power in actual concrete information
about

168
00:10:49,370 --> 00:10:52,870
how things fail what are the things that
Jeremiah

169
00:10:52,870 --> 00:10:56,550
out no just get a quote him in entirety
the bottom line

170
00:10:56,550 --> 00:11:00,360
is there just is not a measurable
difference in the security postures

171
00:11:00,360 --> 00:11:03,690
from language to language or framework
the framework

172
00:11:03,690 --> 00:11:07,009
specifically Microsoft ASP classic
dotnet

173
00:11:07,009 --> 00:11:10,079
Java ColdFusion PHP and Perl

174
00:11:10,079 --> 00:11:14,509
sure in theory one might be
significantly more secure than the

175
00:11:14,509 --> 00:11:15,129
others

176
00:11:15,129 --> 00:11:18,230
but when deployed on the web it's just

177
00:11:18,230 --> 00:11:21,839
not the cakes not gonna ask you to raise
your hands

178
00:11:21,839 --> 00:11:25,680
but I bet a lot of you in this room
absolutely assumed

179
00:11:25,680 --> 00:11:29,899
that mattered what language you use and
what framework you use

180
00:11:29,899 --> 00:11:33,339
but when you have a guy who's actually
going out there breaking web sites by

181
00:11:33,339 --> 00:11:34,620
the thousands

182
00:11:34,620 --> 00:11:38,620
okay 10 percent difference here twenty
percent difference there

183
00:11:38,620 --> 00:11:42,600
it's not a big difference what's going
on now

184
00:11:42,600 --> 00:11:46,759
I don't think even Jeremiah realize how
significant this finding is

185
00:11:46,759 --> 00:11:50,149
because you know we've got some
languages in here that are

186
00:11:50,149 --> 00:11:53,480
type stay it we've got languages in here
there are

187
00:11:53,480 --> 00:11:56,490
most assuredly not tight safe

188
00:11:56,490 --> 00:11:59,779
were spent all our money on this safety

189
00:11:59,779 --> 00:12:02,920
where's the safety

190
00:12:02,920 --> 00:12:07,969
this is a shoot and massive and like
order of magnitude expenditure we're

191
00:12:07,970 --> 00:12:08,620
making

192
00:12:08,620 --> 00:12:14,560
why aren't we getting the safety you're
paying for

193
00:12:14,560 --> 00:12:18,399
one thing to be clear about

194
00:12:18,399 --> 00:12:22,339
not really actually using tape safe
languages even when we think we are

195
00:12:22,339 --> 00:12:25,379
the reality a web development is

196
00:12:25,379 --> 00:12:28,920
we you sneeze you're in new programming
language

197
00:12:28,920 --> 00:12:33,110
get html you got JavaScript get the SS
global direct sales but in some sequel

198
00:12:33,110 --> 00:12:37,550
I was a PHP ok and I'll just in c-sharp
every time you move

199
00:12:37,550 --> 00:12:41,910
it's a new language all of these
languages need to communicate

200
00:12:41,910 --> 00:12:45,680
with one another and they all have their
own take systems they love their own

201
00:12:45,680 --> 00:12:46,829
internal things

202
00:12:46,829 --> 00:12:50,370
but wait you need to have cross language
communication

203
00:12:50,370 --> 00:12:55,620
from PHP to sequel from C sharp to HTML

204
00:12:55,620 --> 00:12:59,899
how does it end up working it works
three strings

205
00:12:59,899 --> 00:13:04,060
shust wrong text there's no tape safety
involved

206
00:13:04,060 --> 00:13:07,220
there's no context involved it's just

207
00:13:07,220 --> 00:13:11,829
behavior some programming

208
00:13:11,829 --> 00:13:16,000
so

209
00:13:16,000 --> 00:13:19,189
this time last year I woulda told the
type safety was useless

210
00:13:19,189 --> 00:13:23,310
turns out I was wrong mom happens quite
a bit actually

211
00:13:23,310 --> 00:13:27,040
%uh never by the way be afraid of being
wrong

212
00:13:27,040 --> 00:13:33,099
being wrong just means the world is more
interesting than you thought it was

213
00:13:33,100 --> 00:13:37,769
so on objections are actually type books
I have a straight-up sequel injections

214
00:13:37,769 --> 00:13:42,029
like count star from fukowoka exit polls
act for one equals 1

215
00:13:42,029 --> 00:13:45,529
and the injected string is X single
quote

216
00:13:45,529 --> 00:13:50,259
or single quote one single quote decal
single quote one

217
00:13:50,259 --> 00:13:55,540
when that goes out the seashore and PHP
or Java Ruby sender

218
00:13:55,540 --> 00:13:59,000
thinks this red area it's just a string

219
00:13:59,000 --> 00:14:03,449
that's just another thing you know
little Bobby table

220
00:14:03,449 --> 00:14:06,740
for

221
00:14:06,740 --> 00:14:10,540
but the receiver see something else
entirely receivers like oh there's a

222
00:14:10,540 --> 00:14:11,670
strain on the cake

223
00:14:11,670 --> 00:14:15,019
later another string to compare ordered
another string

224
00:14:15,019 --> 00:14:19,499
so what we have here is a a failure to
communicate

225
00:14:19,499 --> 00:14:22,970
we have difference yeah we have
different

226
00:14:22,970 --> 00:14:27,579
grammatical structures being seen from
the same strict

227
00:14:27,579 --> 00:14:31,999
so the challenge what I talk about take
safety what i'm saying is

228
00:14:31,999 --> 00:14:35,319
fears it grammar there's a overall

229
00:14:35,319 --> 00:14:39,899
nato understanding beyond just here's a
sequence of pics

230
00:14:39,899 --> 00:14:43,209
and what we want is we want that nato
understanding

231
00:14:43,209 --> 00:14:47,699
to be synchronized between the sender
and receiver

232
00:14:47,699 --> 00:14:52,860
thats ultimately our challenge now
people think this is a solved problem

233
00:14:52,860 --> 00:14:57,800
they say well we've got escapes we've
got forever as clear

234
00:14:57,800 --> 00:15:01,730
so what's the problem here clearly all
we had our

235
00:15:01,730 --> 00:15:06,279
developers that are lazy and stupid

236
00:15:06,279 --> 00:15:09,550
and this is great for us it's like
define exhaust

237
00:15:09,550 --> 00:15:13,100
as intelligent industrious

238
00:15:13,100 --> 00:15:20,100
wonderful for egos does nothing to
protect my mom firm insecure Co

239
00:15:20,949 --> 00:15:27,240
so why is this not a self problem

240
00:15:27,240 --> 00:15:31,060
escaping all rights i'm looking at some
PHP code

241
00:15:31,060 --> 00:15:36,110
and I C okay I got a connection object
queries like star from fukowoka

242
00:15:36,110 --> 00:15:39,430
exit with dollar sign for

243
00:15:39,430 --> 00:15:43,769
is that safe or is that vulnerable I
don't know

244
00:15:43,769 --> 00:15:47,720
I had a traceback you like 10 functions
to look to see

245
00:15:47,720 --> 00:15:51,620
it any other stem functions between went
up bites came in on the wire

246
00:15:51,620 --> 00:15:55,319
and this query is happening movie magic
bad characters

247
00:15:55,319 --> 00:15:58,589
escaped cuz they might appear they might

248
00:15:58,589 --> 00:16:01,910
not have been but I gotta sit there and
I gotta look

249
00:16:01,910 --> 00:16:04,920
any know what's worse than that

250
00:16:04,920 --> 00:16:09,059
I may find it that there's this keeper
that goes ahead takes any those bad

251
00:16:09,059 --> 00:16:10,610
characters or remove them

252
00:16:10,610 --> 00:16:14,350
there's a bad character this query is
gonna be vulnerable

253
00:16:14,350 --> 00:16:18,029
someone three months from now can remove

254
00:16:18,029 --> 00:16:22,110
the escape they can say you know what
something is going wrong there's a bug

255
00:16:22,110 --> 00:16:25,209
and what does every developer do
whenever there's a buck

256
00:16:25,209 --> 00:16:29,550
he turns of the security because it
might be the Securities fault

257
00:16:29,550 --> 00:16:33,199
added nobody does after he finds the
actual work

258
00:16:33,199 --> 00:16:37,110
that had nothing to do with security he
doesn't put the security

259
00:16:37,110 --> 00:16:40,649
back and does this cause a problem

260
00:16:40,649 --> 00:16:45,819
now could worst just my without that
escape its bare

261
00:16:45,819 --> 00:16:49,509
it up is there because there's not if
it's not the cold works anyway

262
00:16:49,509 --> 00:16:53,379
this is what's called failing open or
for short

263
00:16:53,379 --> 00:16:59,480
failing for

264
00:16:59,480 --> 00:17:03,529
here's another problem actually this is
the real problem with this gaping

265
00:17:03,529 --> 00:17:09,130
what does it mean to you escape well web
working evil characters

266
00:17:09,130 --> 00:17:12,620
once upon a time we had ASCII

267
00:17:12,620 --> 00:17:16,850
and we had like less than 256 characters

268
00:17:16,849 --> 00:17:20,719
and that was the school of things I
could possibly go wrong

269
00:17:20,720 --> 00:17:24,640
that was long in the distant past now we
got

270
00:17:24,640 --> 00:17:28,530
unique code in with unico gotten
millions of characters

271
00:17:28,530 --> 00:17:32,010
with at least a half-dozen to a dozen

272
00:17:32,010 --> 00:17:35,030
possible representations for those
characters

273
00:17:35,030 --> 00:17:38,440
and by the way they can mutate

274
00:17:38,440 --> 00:17:42,140
anyone here know what's called best fit
matching

275
00:17:42,140 --> 00:17:45,280
basic matching is totally obscure it's
great

276
00:17:45,280 --> 00:17:50,970
you got characters in other languages
that reveal really look like slash its

277
00:17:50,970 --> 00:17:54,360
and so you know what happens all this
offer says

278
00:17:54,360 --> 00:17:58,770
well looks like a flash I'm gonna treat
it like a flash

279
00:17:58,770 --> 00:18:02,400
this does real

280
00:18:02,400 --> 00:18:06,140
absolutely what would you like

281
00:18:06,140 --> 00:18:13,140
I for

282
00:18:18,250 --> 00:18:24,470
here right

283
00:18:24,470 --> 00:18:27,759
for what could possibly go wrong

284
00:18:27,759 --> 00:18:32,710
here II fiercely

285
00:18:32,710 --> 00:18:37,330
turn off their cellphones place okay

286
00:18:37,330 --> 00:18:41,119
no lover yes so

287
00:18:41,119 --> 00:18:45,499
the reality a view echoed is if you
think you can know in advance

288
00:18:45,499 --> 00:18:48,749
which characters are the dangerous ones
om

289
00:18:48,749 --> 00:18:52,239
I'm sorry you're just wrong it's not
like a bad thing I felt like you were

290
00:18:52,239 --> 00:18:52,809
lazy

291
00:18:52,809 --> 00:18:56,950
they've just overloaded what something
means to be a character

292
00:18:56,950 --> 00:19:00,220
we don't have characters anymore we have
code points and they do

293
00:19:00,220 --> 00:19:06,269
super weird 6 so the deal with this
keeping his ultimately it works

294
00:19:06,269 --> 00:19:10,899
by accident there's no established
contract basically arce

295
00:19:10,899 --> 00:19:14,659
here other side here's why think

296
00:19:14,659 --> 00:19:18,409
are going to be the dangerous characters
hopefully I got a more

297
00:19:18,409 --> 00:19:22,330
and down here's what actually happens

298
00:19:22,330 --> 00:19:25,340
we're in javascript today

299
00:19:25,340 --> 00:19:28,599
the escape function the escape three
function

300
00:19:28,599 --> 00:19:32,428
any escape early component function to
translate

301
00:19:32,429 --> 00:19:36,399
sp we screwed up function we screwed up
again function

302
00:19:36,399 --> 00:19:43,399
and the I hope I got it right this time
function escaping

303
00:19:44,639 --> 00:19:49,190
always looks like a good idea and never
actually its now what about

304
00:19:49,190 --> 00:19:53,499
parameter i squares imprimer risk
worries we follow the

305
00:19:53,499 --> 00:19:57,049
oil bottle that says that cool and
datasheet comin

306
00:19:57,049 --> 00:20:00,429
two completely different channels it so
you have like

307
00:20:00,429 --> 00:20:04,559
you're safe stuff and you have your
understate self and never heard the two

308
00:20:04,559 --> 00:20:05,460
should meet

309
00:20:05,460 --> 00:20:11,909
this a corset basic security peery and
makes us feel so warm and fuzzy inside

310
00:20:11,909 --> 00:20:15,149
you know it doesn't make me feel happy
the death

311
00:20:15,149 --> 00:20:18,609
that you to have your say well I have
this one line echoed

312
00:20:18,609 --> 00:20:22,428
text are from who were claiming that
they made on a Mac with only a magical

313
00:20:22,429 --> 00:20:23,809
that this is a typical city

314
00:20:23,809 --> 00:20:27,499
done move on with my life as one line I
could write

315
00:20:27,499 --> 00:20:30,659
one to 3 for

316
00:20:30,659 --> 00:20:36,419
5 six lines have coped oh yeah

317
00:20:36,419 --> 00:20:40,339
I want him to escape this dollar signs
he does not

318
00:20:40,339 --> 00:20:46,269
the reality is that no developers ever
written a frame a nice career without a

319
00:20:46,269 --> 00:20:47,139
gun to his head

320
00:20:47,139 --> 00:20:51,399
we should know we hold the gun your

321
00:20:51,399 --> 00:20:54,970
on way to dedicate this look

322
00:20:54,970 --> 00:20:59,649
position or anyone here ever do win32
coding

323
00:20:59,649 --> 00:21:03,450
okay position argument delivery

324
00:21:03,450 --> 00:21:08,749
does not scale on I way to look at it
example from Mike Samuel you set up

325
00:21:08,749 --> 00:21:12,239
really it engineer over a Google who's
been doing some some more work

326
00:21:12,239 --> 00:21:17,919
are very similar fact on and here's this
example I meant a question mark in the

327
00:21:17,919 --> 00:21:20,779
question mark with a question mark for
the question mark he said hello question

328
00:21:20,779 --> 00:21:21,940
mark how are you today

329
00:21:21,940 --> 00:21:26,249
it goes on like that and after all this
you have profession and landmark in

330
00:21:26,249 --> 00:21:29,749
container and species of monkey in a
proper name

331
00:21:29,749 --> 00:21:33,059
on this is

332
00:21:33,059 --> 00:21:37,089
actually as unknowing to write as it is
to

333
00:21:37,089 --> 00:21:42,109
audit let me trace out for you from a
user interface perspective

334
00:21:42,109 --> 00:21:46,289
what this line a code or what this kid
Batcave code means

335
00:21:46,289 --> 00:21:49,570
your online has to do facts

336
00:21:49,570 --> 00:21:52,609
and more importantly

337
00:21:52,609 --> 00:21:59,220
bases a problem nobody ever thinks but
user interfaces for developers nobody

338
00:21:59,220 --> 00:22:00,339
ever thinks about what is

339
00:22:00,339 --> 00:22:04,450
actually convenient for them because K

340
00:22:04,450 --> 00:22:07,099
or just gonna tell people what to do
with security is the only thing that

341
00:22:07,099 --> 00:22:07,710
matters

342
00:22:07,710 --> 00:22:10,809
and then we turn around a six-month we
don't have what we want and we're very

343
00:22:10,809 --> 00:22:11,779
confused

344
00:22:11,779 --> 00:22:16,529
on developers do not give a crap

345
00:22:16,529 --> 00:22:20,639
about this colgate a separation because
that's not how they're thinking

346
00:22:20,639 --> 00:22:25,450
it's not separated in their heads what
developers want to do

347
00:22:25,450 --> 00:22:30,559
is they want to say sexual stuff from
who were extinguished food just get food

348
00:22:30,559 --> 00:22:31,509
a quick beer

349
00:22:31,509 --> 00:22:34,940
rate in line and if they don't have it
in line

350
00:22:34,940 --> 00:22:38,329
what's called interpolation syntax in
the language

351
00:22:38,329 --> 00:22:42,509
they will do horrifying things with
what's called string concatenation

352
00:22:42,509 --> 00:22:47,759
sec how far from former ex equals
backslash double quote double Pro Plus

353
00:22:47,759 --> 00:22:50,820
dollar sign underscore get through plus
yet

354
00:22:50,820 --> 00:22:56,230
public very like it keep track of all
the spokes wishin somehow they're able

355
00:22:56,230 --> 00:22:56,629
to

356
00:22:56,629 --> 00:23:00,349
the reason the rate code this waste
because they're thinking

357
00:23:00,349 --> 00:23:03,619
in line and they want to be writing in
line

358
00:23:03,619 --> 00:23:06,829
there's a theory in the user interface
design called

359
00:23:06,829 --> 00:23:11,190
its law that says that your ability to
work with the computer system is related

360
00:23:11,190 --> 00:23:13,169
to the sizeof what you're using

361
00:23:13,169 --> 00:23:17,859
and the distance you have to move in
line operations minimize

362
00:23:17,859 --> 00:23:23,009
both ed that is why that is how they
want to work

363
00:23:23,009 --> 00:23:28,759
so here's my question is it possible to
let developers write inline code

364
00:23:28,759 --> 00:23:32,029
without exposing the resultant strings
to injections

365
00:23:32,029 --> 00:23:36,570
we know what they want to do we know
what we want is if possible for us both

366
00:23:36,570 --> 00:23:38,470
to get what we want

367
00:23:38,470 --> 00:23:43,919
and the answer is yes by making the
string interpolation smarter

368
00:23:43,919 --> 00:23:47,269
string interpolation is where you're in
the middle of writing some code

369
00:23:47,269 --> 00:23:50,299
and then you say oh wait now I wanna put
in

370
00:23:50,299 --> 00:23:53,509
be environment provided variable

371
00:23:53,509 --> 00:23:56,629
just in line it's just magic

372
00:23:56,629 --> 00:24:01,470
normally this is done by just taking the
string they came from

373
00:24:01,470 --> 00:24:05,279
the bad guy and just smashing it into

374
00:24:05,279 --> 00:24:09,609
the string that came from the programmer
and hoping for the best

375
00:24:09,609 --> 00:24:13,939
okay that's not work but what can work

376
00:24:13,940 --> 00:24:18,970
there's still a boundary the compilers
still concede

377
00:24:18,970 --> 00:24:23,169
this is what came from a programmer and
this is what came from the attacker

378
00:24:23,169 --> 00:24:27,409
take dat now injury exists it's not gone

379
00:24:27,409 --> 00:24:30,479
it can be gone if you just smash the
strings together

380
00:24:30,479 --> 00:24:33,539
but it doesn't have to be step

381
00:24:33,539 --> 00:24:37,700
morning is to retain the boundary as a
critical piece

382
00:24:37,700 --> 00:24:42,299
%uh meditator as the in fact important
rump it says

383
00:24:42,299 --> 00:24:46,539
here's code here's data the line is
still there

384
00:24:46,539 --> 00:24:50,129
there now that we have this little piece
of meta-data

385
00:24:50,129 --> 00:24:53,460
we can actually translate we can take

386
00:24:53,460 --> 00:24:57,279
the string that was provided by the
coder we can take the string

387
00:24:57,279 --> 00:25:01,419
that was provided by the environment a
that we can't do any

388
00:25:01,419 --> 00:25:04,720
intelligent dramatically aware

389
00:25:04,720 --> 00:25:09,389
transformation such that what is
actually one

390
00:25:09,389 --> 00:25:12,999
is ultimately what the compiler needed
to see in order to omit

391
00:25:12,999 --> 00:25:17,960
safe cooked this again doesn't overlap
with Mike Samuels were coaster secure

392
00:25:17,960 --> 00:25:19,549
string interpolation

393
00:25:19,549 --> 00:25:23,789
go google it it's a old wonderful piece
of descriptive writer

394
00:25:23,789 --> 00:25:27,158
and we're working together so

395
00:25:27,159 --> 00:25:30,519
let's talk about what this actually
looks like in the field

396
00:25:30,519 --> 00:25:35,779
the first father is a open source PSD
code out there for Interpol eek

397
00:25:35,779 --> 00:25:38,779
as a full demo you can break it

398
00:25:38,779 --> 00:25:42,029
that's the greatest thing in the world
for me

399
00:25:42,029 --> 00:25:45,849
so here we had a very simple form
implementation

400
00:25:45,849 --> 00:25:48,960
there's a author brew and there's a
description

401
00:25:48,960 --> 00:25:52,599
you know single-pole or one equals 1 a
semi for

402
00:25:52,599 --> 00:25:56,570
very very basic if there is a problem
this is getting checked this is little

403
00:25:56,570 --> 00:25:57,849
Bobby tapes

404
00:25:57,849 --> 00:26:01,509
for go ahead and post this you know what
nothing goes wrong

405
00:26:01,509 --> 00:26:04,909
that there's a data field near foo colon
their full

406
00:26:04,909 --> 00:26:07,970
fuqua or one equals 1

407
00:26:07,970 --> 00:26:11,109
no injections possible okay that's kinda

408
00:26:11,109 --> 00:26:15,059
what about the other direction we we
want to have postal reform we want to

409
00:26:15,059 --> 00:26:16,579
have a little bit HTML

410
00:26:16,579 --> 00:26:20,320
let's go ahead and throw image some
random I am Gurr

411
00:26:20,320 --> 00:26:25,039
Lake 8080 how about some cross site
scripting with that

412
00:26:25,039 --> 00:26:29,329
well we'll see the image actually does
get through

413
00:26:29,329 --> 00:26:34,389
but the script just knocked at a lower
one is now just stripped down to text

414
00:26:34,389 --> 00:26:39,269
so there are many ways up implementing
this they're kinda tricky

415
00:26:39,269 --> 00:26:42,509
you gotta do escaping you've got to be
aware of stuff

416
00:26:42,509 --> 00:26:46,249
are what if it didn't what if

417
00:26:46,249 --> 00:26:50,329
you as a developer could right that dumb
escort in the world

418
00:26:50,329 --> 00:26:53,579
and it was still sick what if you could
just say

419
00:26:53,579 --> 00:26:57,168
insert interpose values pay I want the
post

420
00:26:57,169 --> 00:27:00,409
that's the author know the post that's
the content I don't want to worry about

421
00:27:00,409 --> 00:27:02,659
escaping I don't worry about this stuff

422
00:27:02,659 --> 00:27:07,009
and sending stuff back to the browser
four th row in the database

423
00:27:07,009 --> 00:27:10,210
just go ahead and admit data give me the
author

424
00:27:10,210 --> 00:27:13,929
give me the content throw up BRB and
give me a new one

425
00:27:13,929 --> 00:27:18,230
done K let me tell you this is what the
dev wants to write

426
00:27:18,230 --> 00:27:21,429
he does not want to think about all the
things we tell them to do because

427
00:27:21,429 --> 00:27:27,289
their complicated let's be honest kinda
fragile

428
00:27:27,289 --> 00:27:31,349
so what's going on language interpolate
is applied they just pushed rings in

429
00:27:31,349 --> 00:27:32,439
districts

430
00:27:32,440 --> 00:27:36,429
we are being a little smarter

431
00:27:36,429 --> 00:27:40,599
the first former translation that we can
do and this is on the sequel injection

432
00:27:40,599 --> 00:27:41,589
site

433
00:27:41,589 --> 00:27:44,700
there is no reason once we have

434
00:27:44,700 --> 00:27:48,329
though dynamics trainer with the
barriers

435
00:27:48,329 --> 00:27:52,109
maintained retained that we can't expand

436
00:27:52,109 --> 00:27:56,359
from the string the programmer what's
right sex often tableware FA Mikel that

437
00:27:56,359 --> 00:27:58,799
name a country with country lexical
Zacks

438
00:27:58,799 --> 00:28:02,029
there is no reason we can't expand that
to

439
00:28:02,029 --> 00:28:05,299
statement equals a prepared statement
and dynamically

440
00:28:05,299 --> 00:28:09,089
why don't we bind def name: country next
to mine for

441
00:28:09,089 --> 00:28:12,139
works like a charm

442
00:28:12,139 --> 00:28:15,690
that's the first thing we can do the
second thing we could do

443
00:28:15,690 --> 00:28:19,329
okay we could automatically inject he
escapes

444
00:28:19,329 --> 00:28:23,849
I'm sorry I it's just not gonna work any
unical world you just don't know what

445
00:28:23,849 --> 00:28:24,678
characters

446
00:28:24,679 --> 00:28:28,940
RR Ballard it's not just Shabbat kept by
the way this had this problem with the

447
00:28:28,940 --> 00:28:29,629
scapes

448
00:28:29,629 --> 00:28:32,659
was my sick will have to escape strings
3

449
00:28:32,659 --> 00:28:38,749
maybe four yeah it forget it skips

450
00:28:38,749 --> 00:28:45,690
then there's the Koreas activities Bay
64

451
00:28:45,690 --> 00:28:49,379
you know you can actually go ahead

452
00:28:49,379 --> 00:28:52,929
this is going to the explanation here

453
00:28:52,929 --> 00:28:56,440
we go ahead actually so we go ahead and
we basically slake

454
00:28:56,440 --> 00:29:00,849
slick star from table were kept name
equals Bay 64 decode function

455
00:29:00,849 --> 00:29:04,460
big blob a 64 and country goals

456
00:29:04,460 --> 00:29:08,009
be 60/40 know the big bottle Bay 64

457
00:29:08,009 --> 00:29:11,279
why would you do this well for

458
00:29:11,279 --> 00:29:14,849
work type thief going to be 60/40

459
00:29:14,849 --> 00:29:18,928
you want a big batch obey 64's never
gonna be confused for

460
00:29:18,929 --> 00:29:22,539
let me tell your that a sequel that a
javascript

461
00:29:22,539 --> 00:29:26,839
that 82 HTML its crap

462
00:29:26,839 --> 00:29:31,599
calf here not only are we type safe
going into

463
00:29:31,599 --> 00:29:35,589
work tight see it coming out because
basic C-forty

464
00:29:35,589 --> 00:29:39,168
as a function is caps is returning

465
00:29:39,169 --> 00:29:42,349
03 it's not returning a subquery

466
00:29:42,349 --> 00:29:46,009
returning to compare order there's a
billion grammatical elements

467
00:29:46,009 --> 00:29:49,309
that would be returned this is the thing
that

468
00:29:49,309 --> 00:29:54,119
is being Ritter so

469
00:29:54,119 --> 00:29:57,389
this is actually kinda box this is tight
safety

470
00:29:57,389 --> 00:30:00,759
across link which boundaries

471
00:30:00,759 --> 00:30:04,749
there are two models in which this can
actually be implemented

472
00:30:04,749 --> 00:30:09,829
UK and as the for you can basically have
your web application

473
00:30:09,829 --> 00:30:13,509
and a everything is normal ended right

474
00:30:13,509 --> 00:30:17,179
at me say PHP to my sequel barrier

475
00:30:17,179 --> 00:30:22,399
wat their use a week I passing this
through like some simple parser

476
00:30:22,399 --> 00:30:26,509
let me go ahead and wrap things up and
this works great this is what's called

477
00:30:26,509 --> 00:30:28,169
late binding

478
00:30:28,169 --> 00:30:31,859
the other approach is early binding
where

479
00:30:31,859 --> 00:30:36,720
you pay 60 for the variable as soon as
it comes in from the HTTP request

480
00:30:36,720 --> 00:30:39,730
and a

481
00:30:39,730 --> 00:30:44,230
as it passes through all those functions
it remains Bay 64 code

482
00:30:44,230 --> 00:30:48,249
so it's a big pile of crap if any those
intermediate functions actually to work

483
00:30:48,249 --> 00:30:48,899
on it

484
00:30:48,899 --> 00:30:52,789
they need to decode they need to look
inside change what they do and then they

485
00:30:52,789 --> 00:30:54,559
need to re encode

486
00:30:54,559 --> 00:30:59,109
now here's what makes these approaches
interesting

487
00:30:59,109 --> 00:31:03,039
in the first quarter by the way did
mention this there's a new syntax is

488
00:31:03,039 --> 00:31:04,579
that a dollar sign foo

489
00:31:04,579 --> 00:31:08,928
you have carrot carrot for the reason
why it's dollar sign

490
00:31:08,929 --> 00:31:12,899
h3y scaricare food said a dollar sign
exclamation point food

491
00:31:12,899 --> 00:31:16,739
is it's just too easy to confuse dollar
sign through in dollar sign exhibition

492
00:31:16,739 --> 00:31:17,299
for

493
00:31:17,299 --> 00:31:21,539
so we're doing it I a new character here
on

494
00:31:21,539 --> 00:31:24,970
the reason this is interesting let's
look at this second

495
00:31:24,970 --> 00:31:29,499
option sex star from for work mexico's
be 60 40 for

496
00:31:29,499 --> 00:31:34,019
so you might look at this and say hey
you're using old interpolation syntax

497
00:31:34,019 --> 00:31:37,960
that foo could have some sick which
actions in there

498
00:31:37,960 --> 00:31:40,980
if it ever received anything that was
not itself

499
00:31:40,980 --> 00:31:45,289
already encoded already crap if I'd if
you will

500
00:31:45,289 --> 00:31:49,839
this is true but yours was awesome when
you remove

501
00:31:49,839 --> 00:31:54,129
the escape function nothing goes wrong

502
00:31:54,129 --> 00:31:58,190
if this sequel here ever receives data

503
00:31:58,190 --> 00:32:02,149
legitimately that is not base 64 encoded

504
00:32:02,149 --> 00:32:05,429
the world comes to an end for the web
app

505
00:32:05,429 --> 00:32:09,440
each fails close

506
00:32:09,440 --> 00:32:12,899
this is awesome so as a

507
00:32:12,899 --> 00:32:17,269
kinda concept here you know what better
than having a static analyzer that will

508
00:32:17,269 --> 00:32:20,019
tell you exactly what's happening to a
very blessed

509
00:32:20,019 --> 00:32:23,569
traverses through application not

510
00:32:23,569 --> 00:32:27,269
needing one if it works

511
00:32:27,269 --> 00:32:30,769
H working securely if it's not working

512
00:32:30,769 --> 00:32:35,509
venue still have work to do because it's
not working

513
00:32:35,509 --> 00:32:40,079
we have to make security and reliability
linked

514
00:32:40,079 --> 00:32:43,200
as tightly as possible

515
00:32:43,200 --> 00:32:46,690
it also turns out that this works ended
the other direction

516
00:32:46,690 --> 00:32:53,690
he was I gonna describing some water
here

517
00:32:54,220 --> 00:32:59,320
ire

518
00:32:59,320 --> 00:33:02,918
so you may have noticed

519
00:33:02,919 --> 00:33:07,100
getting developers to deal with cross
site scripting in a reasonable way is

520
00:33:07,100 --> 00:33:11,400
Opuntia work and the reason why is
because they just want to take their

521
00:33:11,400 --> 00:33:13,010
variables their application

522
00:33:13,010 --> 00:33:17,379
and you know vomit them into the browser
add-on with the problem with that

523
00:33:17,380 --> 00:33:20,940
one thing we can do is we can have

524
00:33:20,940 --> 00:33:24,940
the developer still just ahead as
caricare internal variable

525
00:33:24,940 --> 00:33:29,240
it just works but what is emitted into
the browser is something completely

526
00:33:29,240 --> 00:33:30,169
different

527
00:33:30,169 --> 00:33:35,140
we go ahead and we say oh i has a text
that needs to come from

528
00:33:35,140 --> 00:33:38,720
potentially attacker controlled tear got
a great despair

529
00:33:38,720 --> 00:33:43,100
get have an ID and its gonna have some
pay 64 coded text

530
00:33:43,100 --> 00:33:47,380
and then the first thing that's gonna
happen is I'm gonna call eight decode

531
00:33:47,380 --> 00:33:47,919
function

532
00:33:47,919 --> 00:33:53,630
on that ID and its gonna turn this bay
64 text into the tech into whatever

533
00:33:53,630 --> 00:33:54,480
supposed to be

534
00:33:54,480 --> 00:34:00,270
in that span this might seem a little
obtuse

535
00:34:00,270 --> 00:34:03,970
what it is is really freakin fast

536
00:34:03,970 --> 00:34:07,590
their people security thing performance
doesn't matter they're wrong

537
00:34:07,590 --> 00:34:11,139
if what you deploy is really really slow
people will shots

538
00:34:11,139 --> 00:34:15,859
not deploy what you have so what is
interesting about this particular

539
00:34:15,859 --> 00:34:16,869
construction is

540
00:34:16,869 --> 00:34:19,879
first it streams if you are

541
00:34:19,879 --> 00:34:24,060
streaming through web page in just going
from top to bottom in rendering as you

542
00:34:24,060 --> 00:34:24,619
can

543
00:34:24,619 --> 00:34:29,250
whenever you see the span immediately
after the Spanish parsed

544
00:34:29,250 --> 00:34:33,530
that thing shows up to decode the span
into whatever Texas supposed to be

545
00:34:33,530 --> 00:34:36,780
are it took actually some work to do
this on

546
00:34:36,780 --> 00:34:40,399
a CPA PC 949 actually came up with the
pics it was a

547
00:34:40,399 --> 00:34:43,589
its kinda beautiful so what do you do

548
00:34:43,589 --> 00:34:46,810
you already knew or sittin here you've
got

549
00:34:46,810 --> 00:34:52,389
the m9v that is supposed to be whatever
is supposed to be inside despair

550
00:34:52,389 --> 00:34:56,320
okay so what you did I'll tell you what
you don't do

551
00:34:56,320 --> 00:34:59,630
yet don't trust the browser's HTML
parser because that thing I don't know

552
00:34:59,630 --> 00:35:00,970
what the hell it's doing

553
00:35:00,970 --> 00:35:06,250
I care reason or analyze about the
behavior the browser's a shemale parser

554
00:35:06,250 --> 00:35:09,560
is designed to parse code that is crap

555
00:35:09,560 --> 00:35:12,710
that's okay that's why HTML walk

556
00:35:12,710 --> 00:35:17,790
people don't realize this but HTML was
the first programming language

557
00:35:17,790 --> 00:35:21,990
and it is a programming language that
you could have no idea

558
00:35:21,990 --> 00:35:25,109
what you were doing but it's still get
something

559
00:35:25,109 --> 00:35:29,279
this is wonderful

560
00:35:29,280 --> 00:35:35,170
nothing else works like this but HTML
did and that's why it one so

561
00:35:35,170 --> 00:35:39,650
that's great and wonderful for you know
the webber's learning HTML

562
00:35:39,650 --> 00:35:42,920
but if you wanna reason about the
security aspects of the system

563
00:35:42,920 --> 00:35:46,630
air good luck so we're going to bypass
that'll

564
00:35:46,630 --> 00:35:51,609
HTML parser think we're just gonna talk
to the browser document object model

565
00:35:51,609 --> 00:35:52,369
director

566
00:35:52,369 --> 00:35:55,440
the pros are basically build the tree it
says

567
00:35:55,440 --> 00:35:59,080
got same text over here I got some
images over here

568
00:35:59,080 --> 00:36:03,250
and when you a DHTML the a shemales
translated into the street

569
00:36:03,250 --> 00:36:06,839
and you can do that but another thing
you can do is you can say

570
00:36:06,839 --> 00:36:10,640
K tree I got some text for you each

571
00:36:10,640 --> 00:36:13,799
tax it's not a bitch it's not a script

572
00:36:13,800 --> 00:36:19,359
H taxed see how that plays into the
whole we've gotta keep the grammar

573
00:36:19,359 --> 00:36:20,069
straight

574
00:36:20,070 --> 00:36:24,210
if you want a browser to create a text
node tell it to create

575
00:36:24,210 --> 00:36:27,820
a text node and that works fine so

576
00:36:27,820 --> 00:36:31,060
one thing you can do is you just say ok
every element

577
00:36:31,060 --> 00:36:35,359
in the browser has was called the text
content field at least every span does

578
00:36:35,359 --> 00:36:38,359
we go ahead we take that Bay 64 blob

579
00:36:38,359 --> 00:36:41,740
week worship straight into the text
content to the spare

580
00:36:41,740 --> 00:36:44,940
being cross-site scripting yet

581
00:36:44,940 --> 00:36:49,589
happen we skipped the entire core base
that's trying to run script

582
00:36:49,589 --> 00:36:54,609
however it may very well be the case

583
00:36:54,609 --> 00:36:59,339
that you want to do a little more than
just pushed some text day

584
00:36:59,339 --> 00:37:02,849
maybe this is a forum that you want to
be able to push images

585
00:37:02,849 --> 00:37:09,400
can you do that well it turns out that
this one guy

586
00:37:09,400 --> 00:37:13,220
not his name on here it's really
embarrassing actually I am

587
00:37:13,220 --> 00:37:16,560
I don't members name of I did this one
guy wrote

588
00:37:16,560 --> 00:37:20,440
8 HTML parser 18 shop a script

589
00:37:20,440 --> 00:37:25,760
this is useful I may not be able to
trust

590
00:37:25,760 --> 00:37:30,290
the browser's HTML parser but Javascript
is a full programming language it's

591
00:37:30,290 --> 00:37:31,180
touring complete

592
00:37:31,180 --> 00:37:36,940
help for six I will look inside and see
okay there's some HTML fear

593
00:37:36,940 --> 00:37:40,440
this is a image tag cool I'll create

594
00:37:40,440 --> 00:37:43,980
image element this is a bold tag cool

595
00:37:43,980 --> 00:37:48,050
to create old element this is the lake
cool or create an acre but I want to

596
00:37:48,050 --> 00:37:50,910
make sure links can only go to certain
locations

597
00:37:50,910 --> 00:37:54,029
okay I control it every time

598
00:37:54,030 --> 00:37:57,660
I actually think say I'm seeing a source

599
00:37:57,660 --> 00:38:01,690
I'm gonna push it right into the source
element I'm going to

600
00:38:01,690 --> 00:38:06,150
manipulate the tree directly there's
HTML parsing

601
00:38:06,150 --> 00:38:09,869
but its my HTML parsing I control it

602
00:38:09,869 --> 00:38:13,690
I know what he's doing and so that
allowed me to do that then you start

603
00:38:13,690 --> 00:38:15,230
earlier where i could say

604
00:38:15,230 --> 00:38:18,280
image cool throw that it's prudent

605
00:38:18,280 --> 00:38:21,750
as a image I'm creating element and
putting it

606
00:38:21,750 --> 00:38:25,570
scripts now and descriptions I'll take
that tax but

607
00:38:25,570 --> 00:38:29,880
I don't do scripts there is a package
called blueprint that came out awhile

608
00:38:29,880 --> 00:38:30,960
ago

609
00:38:30,960 --> 00:38:34,160
it actually says you want to render a
web page there's

610
00:38:34,160 --> 00:38:38,259
no HTML parsing there's just JavaScript
and we're gonna push the int

611
00:38:38,260 --> 00:38:41,859
higher say through our age and

612
00:38:41,859 --> 00:38:46,109
it actually gets reasonable performance
now there's a note

613
00:38:46,109 --> 00:38:49,259
and the new is security is quantized

614
00:38:49,260 --> 00:38:52,839
there or tags: you can push into the
browser

615
00:38:52,839 --> 00:38:57,740
and know what they're gonna do yet can't
push a script tag into a browser

616
00:38:57,740 --> 00:39:02,580
and predict with the script is going to
do programming language surgery complete

617
00:39:02,580 --> 00:39:06,150
if you think your gonna know release
JavaScript is if you think you can

618
00:39:06,150 --> 00:39:08,950
predict in advance with javascript is
gonna do

619
00:39:08,950 --> 00:39:13,220
air you're wrong so

620
00:39:13,220 --> 00:39:17,200
how we're actually now want to switch to
how this is actually

621
00:39:17,200 --> 00:39:20,820
implemented and the reason why i wanna
talk about how simple it is

622
00:39:20,820 --> 00:39:24,839
ultimately I want people to try to find
bugs

623
00:39:24,839 --> 00:39:28,359
so I don't spend years talking about
this and find out where

624
00:39:28,359 --> 00:39:32,480
oh wait that didn't work so for

625
00:39:32,480 --> 00:39:36,730
right now the only way we can do this
stuff is through the mechanism of

626
00:39:36,730 --> 00:39:40,320
even evaluation even now

627
00:39:40,320 --> 00:39:43,810
takes a bunch code a just says okay

628
00:39:43,810 --> 00:39:49,910
I'm going to 18 I'm going to compile
this code and I'm going to execute it

629
00:39:49,910 --> 00:39:53,980
I it is a very common thing in scripting
languages to say

630
00:39:53,980 --> 00:39:57,060
so the idea is it be programmer rights

631
00:39:57,060 --> 00:40:00,560
flexed or from table wherever they may
cause F name a country with country

632
00:40:00,560 --> 00:40:03,369
mexico Zacks puzzle carrots

633
00:40:03,369 --> 00:40:08,109
what that is expanded into is a small
batch a code

634
00:40:08,109 --> 00:40:11,810
return it's like star from table where
name it was be 60/40

635
00:40:11,810 --> 00:40:15,020
and then the bay 64 coated version of
that name

636
00:40:15,020 --> 00:40:20,300
and country cosby 60/40 and then the bay
64 coated version of country and so on

637
00:40:20,300 --> 00:40:24,100
we take this batch echoed and we eat
value eight

638
00:40:24,100 --> 00:40:28,359
at that evaluation the output of this
dynamically generated

639
00:40:28,359 --> 00:40:35,359
small program is in fact us six are from
table with all the bay 64 encoded stuff

640
00:40:36,700 --> 00:40:40,020
there are languages that do not have
devel-

641
00:40:40,020 --> 00:40:43,930
and most notably that would be i Java in
c-sharp

642
00:40:43,930 --> 00:40:48,080
we actually can still do this sort of
stuff but we have to do it using

643
00:40:48,080 --> 00:40:51,598
string concatenation or various other
kinds of

644
00:40:51,599 --> 00:40:55,700
sorta in lights in taxes that art so
much interpolation

645
00:40:55,700 --> 00:41:01,060
actually let me clarify job in c-sharp
not only can not dynamically compile and

646
00:41:01,060 --> 00:41:02,230
execute code

647
00:41:02,230 --> 00:41:05,640
least not efficiently are they also
don't provide a way to

648
00:41:05,640 --> 00:41:10,270
easily in Lima for two variables they
really just want you can caffeinated

649
00:41:10,270 --> 00:41:13,410
they really want you to say this plus
that this

650
00:41:13,410 --> 00:41:16,589
plus that and so on so there are two
ways

651
00:41:16,589 --> 00:41:20,569
actually interfacing with these
languages

652
00:41:20,569 --> 00:41:24,460
beyond just concatenation the first way
is %uh

653
00:41:24,460 --> 00:41:28,580
as a pattern where use %uh variable
arguments and tax

654
00:41:28,580 --> 00:41:31,640
so you can rate the function in both
Java in c-sharp

655
00:41:31,640 --> 00:41:35,200
that takes a variable number of
arguments and what we do is we say

656
00:41:35,200 --> 00:41:39,770
well we have a here debbie does see and
then the safe stuff

657
00:41:39,770 --> 00:41:43,890
and the second argument is unsafe and
then the safe argument is that you seed

658
00:41:43,890 --> 00:41:48,480
and the second argument is unsafe the
reason you mark your say stuff

659
00:41:48,480 --> 00:41:51,780
rather than your unsafe stuff should be
obvious

660
00:41:51,780 --> 00:41:54,800
you want to make sure if someone Ford
gets

661
00:41:54,800 --> 00:41:59,410
to encode it breaks if you forget to
mark

662
00:41:59,410 --> 00:42:03,819
select star from food were ecstatic
walls it's just not going to run

663
00:42:03,819 --> 00:42:07,569
your prairie will fail and more
importantly it will fail

664
00:42:07,569 --> 00:42:10,990
very early in the development process

665
00:42:10,990 --> 00:42:14,550
another approach to take

666
00:42:14,550 --> 00:42:18,580
issues with called the bill for patter
where you say have a function say

667
00:42:18,580 --> 00:42:21,910
that w function and then you'd say code

668
00:42:21,910 --> 00:42:25,410
has been up Debbie dakotas this did not
date is that

669
00:42:25,410 --> 00:42:28,790
not code is this then that date is that

670
00:42:28,790 --> 00:42:32,190
many take the whole thing in the market
artistry

671
00:42:32,190 --> 00:42:36,770
there's a way of expressing queries that
this actually looks a lot like called

672
00:42:36,770 --> 00:42:41,150
link how many have you guys ever seen
link in your life

673
00:42:41,150 --> 00:42:44,380
link is basically a way up Orting

674
00:42:44,380 --> 00:42:47,589
database concepts to the grammar

675
00:42:47,589 --> 00:42:52,259
up fish are so you're basically rating
database queries

676
00:42:52,260 --> 00:42:57,670
as if you know you're doing a normal
sales si sharpish operation

677
00:42:57,670 --> 00:43:02,359
link is great link is a new ink which it
is very effective if you can use it is

678
00:43:02,359 --> 00:43:04,359
much more likely to be secure

679
00:43:04,359 --> 00:43:08,160
all the stuff that we've been dealing
with in terms the sequence action

680
00:43:08,160 --> 00:43:11,720
that being said sequels been around for
a long time

681
00:43:11,720 --> 00:43:14,810
and believe it or not is kinda

682
00:43:14,810 --> 00:43:20,609
awesome so there were a lot of people
have a lot of knowledge on how to do

683
00:43:20,609 --> 00:43:23,680
expressive intelligent things in sequel

684
00:43:23,680 --> 00:43:27,089
we want those expressive intelligent
things to be secure

685
00:43:27,089 --> 00:43:30,750
if I'm on a job but I advise the
somewhat you have a bunch a sequence

686
00:43:30,750 --> 00:43:31,250
actions

687
00:43:31,250 --> 00:43:35,109
why don't you rewrite your entire
application with Blake

688
00:43:35,109 --> 00:43:39,049
on I'm A getting fired so

689
00:43:39,049 --> 00:43:42,170
I gotta figure out a way to do sequel
this allows this stuff too

690
00:43:42,170 --> 00:43:46,339
stay sequel

691
00:43:46,339 --> 00:43:50,259
tiny little hope announcement I actually
have working implementations are both of

692
00:43:50,260 --> 00:43:51,569
these in Java so

693
00:43:51,569 --> 00:43:54,650
if you'd like to go out and play with
this let me know and I'll send you the

694
00:43:54,650 --> 00:43:56,819
code this as actually working as a VO

695
00:43:56,819 --> 00:44:00,810
week so

696
00:44:00,810 --> 00:44:04,580
status quo let's talk about what doesn't
work

697
00:44:04,580 --> 00:44:08,730
having a string yes it was like star
from for what mexico the escape

698
00:44:08,730 --> 00:44:12,440
value a bath if it worked we wouldn't
keep

699
00:44:12,440 --> 00:44:17,109
finding it won't hit killed so

700
00:44:17,109 --> 00:44:22,450
the reason why this actually doesn't
work is you can screw it up entirely

701
00:44:22,450 --> 00:44:26,060
and the code still functions we need to
have

702
00:44:26,060 --> 00:44:29,580
models where if you screwed up and
implement it wrong

703
00:44:29,580 --> 00:44:33,770
the fact that insecure also means that
is non-functional

704
00:44:33,770 --> 00:44:37,799
and the fact that dysfunctional means
that it's secure I apologize for harping

705
00:44:37,799 --> 00:44:40,530
on this but if there's one thing you
take away from this talk

706
00:44:40,530 --> 00:44:43,859
let's beat

707
00:44:43,859 --> 00:44:48,119
why is this such a pain in the ass to
implement

708
00:44:48,119 --> 00:44:51,359
and let me tell you it really it's the
programming languages

709
00:44:51,359 --> 00:44:54,359
do not what you doing that's

710
00:44:54,359 --> 00:44:57,740
it turns out there was a war in computer
science

711
00:44:57,740 --> 00:45:01,950
and not being an academic I had no idea
this war happened

712
00:45:01,950 --> 00:45:05,869
but apparently there there was a victor
and it has been

713
00:45:05,869 --> 00:45:09,910
defeat you wiping out the remnants over
the

714
00:45:09,910 --> 00:45:15,930
defeated one for ages the wars between
the concept of lexical scope

715
00:45:15,930 --> 00:45:20,040
and dynamics in lexical scope

716
00:45:20,040 --> 00:45:23,119
waited the function when a function is
compiled

717
00:45:23,119 --> 00:45:26,350
it knows all the possible variables

718
00:45:26,350 --> 00:45:29,420
the it is going to need to have access
to

719
00:45:29,420 --> 00:45:32,650
everything that it needs to know has
been pushed

720
00:45:32,650 --> 00:45:36,339
into it either as arguments or as

721
00:45:36,339 --> 00:45:39,490
a global or as whatever

722
00:45:39,490 --> 00:45:42,940
but everything is explicitly no

723
00:45:42,940 --> 00:45:46,930
there there's dynamics go any dynamic
scope

724
00:45:46,930 --> 00:45:49,970
he say well I'm runnin

725
00:45:49,970 --> 00:45:54,359
and I've been instantiated by some other
totally different PC ko

726
00:45:54,359 --> 00:45:57,690
I might need to ask that totally
different peace accord

727
00:45:57,690 --> 00:46:02,790
K what's your food variable I'm ready to
go back and look and find out I don't

728
00:46:02,790 --> 00:46:04,410
know

729
00:46:04,410 --> 00:46:08,930
there's been arguments for twenty years
about which is right

730
00:46:08,930 --> 00:46:11,970
lexical scope one

731
00:46:11,970 --> 00:46:18,970
and 1 to a degree that every language
that has come out

732
00:46:23,130 --> 00:46:30,130
do them

733
00:46:33,049 --> 00:46:36,350
product right so

734
00:46:36,350 --> 00:46:39,480
what's been happening over the last

735
00:46:39,480 --> 00:46:43,369
couple years has been a systematic
removal anything

736
00:46:43,369 --> 00:46:47,520
that could be hacked into making dynamic
scope of work

737
00:46:47,520 --> 00:46:51,210
you don't have macros and programming
languages meaning

738
00:46:51,210 --> 00:46:54,230
the ability to say I know why I wrote
this string

739
00:46:54,230 --> 00:46:58,440
but what I really meant was history
that's been removed

740
00:46:58,440 --> 00:47:02,980
the ability to even this is actually
kinda crazy

741
00:47:02,980 --> 00:47:06,540
they went ahead in the actual
implementations

742
00:47:06,540 --> 00:47:09,580
their like save job in c-sharp

743
00:47:09,580 --> 00:47:14,500
they were removed the names you in a
theoretical world could totally other

744
00:47:14,500 --> 00:47:17,530
hacked your way through the stack and
said okay

745
00:47:17,530 --> 00:47:20,830
that's created a go into this part over
the

746
00:47:20,830 --> 00:47:26,600
active one-time environment and get this
period there i kno cuz I tried to do it

747
00:47:26,600 --> 00:47:29,750
yeah they actually remove the day so
like

748
00:47:29,750 --> 00:47:33,430
I've got my third argument I've got my
838

749
00:47:33,430 --> 00:47:37,339
like so what's the name of it I'm not
telling

750
00:47:37,339 --> 00:47:41,930
bastards so

751
00:47:41,930 --> 00:47:46,080
this is kinda we're so OK

752
00:47:46,080 --> 00:47:50,180
yes there's risk to even I'm not saying
it's a great approach

753
00:47:50,180 --> 00:47:53,830
I am many many better ways that I'd like
to see doing it

754
00:47:53,830 --> 00:47:58,220
and yes in general lexical scope is
right

755
00:47:58,220 --> 00:48:01,600
but this is what it comes down to it

756
00:48:01,600 --> 00:48:05,900
every major programming language you to
develop web applications

757
00:48:05,900 --> 00:48:09,770
is exposing this same vol ability

758
00:48:09,770 --> 00:48:13,080
in the same weights there is something
there

759
00:48:13,080 --> 00:48:17,480
wrong with the way that programming
languages are being designed

760
00:48:17,480 --> 00:48:23,020
a two-week as the people actually raking
these languages consistently

761
00:48:23,020 --> 00:48:26,190
have to start being able to use our
knowledge

762
00:48:26,190 --> 00:48:29,369
and our experience with their failures

763
00:48:29,369 --> 00:48:32,920
to get those bill years remediate put
simply

764
00:48:32,920 --> 00:48:38,049
language design needs to be informed by
the findings a penetration testing

765
00:48:38,049 --> 00:48:41,049
it's certainly informed by performance

766
00:48:41,049 --> 00:48:44,150
it's certainly informed by usability

767
00:48:44,150 --> 00:48:47,680
memory safety we think it came from us
know

768
00:48:47,680 --> 00:48:50,899
memory safety came because the
reliability guys were like

769
00:48:50,900 --> 00:48:53,990
the code keeps crashing because dead

770
00:48:53,990 --> 00:48:58,220
can't handle Malik in free whether we
gonna do

771
00:48:58,220 --> 00:49:02,119
to fix that and that's how we got memory
safety we got

772
00:49:02,119 --> 00:49:06,540
it as a gift to on earth you know web
applications have a lot a canonical

773
00:49:06,540 --> 00:49:07,480
flaws

774
00:49:07,480 --> 00:49:11,730
but use after free tends not to be
wonderful

775
00:49:11,730 --> 00:49:14,740
%uh I think

776
00:49:14,740 --> 00:49:18,319
the experience all these injection flaws
has taught us

777
00:49:18,319 --> 00:49:22,290
language is needed the ability to a
great functions that run in the present

778
00:49:22,290 --> 00:49:22,940
scope

779
00:49:22,940 --> 00:49:27,020
not a child scope and if you're all
school

780
00:49:27,020 --> 00:49:30,799
programming guy you're gonna be
terrified by know my text slide

781
00:49:30,799 --> 00:49:35,299
it works just a little like list was
right

782
00:49:35,299 --> 00:49:41,790
for not about everything goes
parentheses over toward it

783
00:49:41,790 --> 00:49:48,450
deal here but yeah it actually turns out
that list had a point about a

784
00:49:48,450 --> 00:49:53,310
scope on I could have a theory about
JavaScript

785
00:49:53,310 --> 00:49:56,799
up because no one thought JavaScript
with a serious language

786
00:49:56,799 --> 00:50:01,950
they just let it had everything request
for the most a javascript existence

787
00:50:01,950 --> 00:50:05,460
this message JavaScript with the two
qualifying language

788
00:50:05,460 --> 00:50:09,529
and then over time people like second
this can do everything

789
00:50:09,529 --> 00:50:13,819
including really useful stuff and so
we've seen over the years all these

790
00:50:13,819 --> 00:50:15,580
dialects have JavaScript form

791
00:50:15,580 --> 00:50:19,450
or JavaScript gets to be you're really
really useful the you

792
00:50:19,450 --> 00:50:23,569
the JavaScript the good parts I kinda
expect to see this happen to have school

793
00:50:23,569 --> 00:50:26,170
at some point as well

794
00:50:26,170 --> 00:50:30,370
so let's talk about width and by risks I
mean

795
00:50:30,370 --> 00:50:35,250
if your gonna try to own this here are
my suggestions for what to look at

796
00:50:35,250 --> 00:50:40,330
there are three things that can go wrong
with any defensive technology

797
00:50:40,330 --> 00:50:43,609
first 8 my not work

798
00:50:43,609 --> 00:50:47,890
and under this really mouth well it
depends on your threat model and how

799
00:50:47,890 --> 00:50:50,060
smart you think the attacker is

800
00:50:50,060 --> 00:50:53,770
no thats bullshit either works or

801
00:50:53,770 --> 00:50:57,380
does it so first thing that might happen

802
00:50:57,380 --> 00:51:01,339
is DAX I me think that the browser

803
00:51:01,339 --> 00:51:04,450
has all these great restrictions on text
content but you know I'm

804
00:51:04,450 --> 00:51:07,859
all I might think the database doesn't
do things

805
00:51:07,859 --> 00:51:12,250
that it actually does so that's the
first class a failure

806
00:51:12,250 --> 00:51:15,359
it is not all the only clocks

807
00:51:15,359 --> 00:51:18,930
the second class a failure is it does it
work in the field

808
00:51:18,930 --> 00:51:23,150
meeting it's great Nick Fury but when
developers try to use it

809
00:51:23,150 --> 00:51:26,900
it's too hard too obtuse is to slow its
to whatever

810
00:51:26,900 --> 00:51:31,690
beef matters says the second thing they
can make a defensive technology

811
00:51:31,690 --> 00:51:34,810
not actually work the final thing

812
00:51:34,810 --> 00:51:38,220
that might mean that this defense a
technology is problematic

813
00:51:38,220 --> 00:51:43,290
is it has side effects meeting a pale
summer the other first-class engineer

814
00:51:43,290 --> 00:51:43,830
your spot

815
00:51:43,830 --> 00:51:46,920
requirements too slow or unstable are
deployed

816
00:51:46,920 --> 00:51:51,220
on action that might seem redundant let
me be very clear about the second class

817
00:51:51,220 --> 00:51:55,319
the second classes is that developers
are gonna try to write it

818
00:51:55,319 --> 00:51:58,750
but they're gonna screw something up
something in the syntax is too difficult

819
00:51:58,750 --> 00:52:00,529
it's too hard for them to

820
00:52:00,529 --> 00:52:04,480
Midgley wrap their minds around I'm
looking for analysis

821
00:52:04,480 --> 00:52:08,710
what Michael wrong on any of these three
classes

822
00:52:08,710 --> 00:52:12,750
so let's talk about what actually looks
how this is actually

823
00:52:12,750 --> 00:52:15,830
on survived our own attacks

824
00:52:15,830 --> 00:52:20,650
on there doesn't seem to be any way to
get sequence action to work to that be

825
00:52:20,650 --> 00:52:22,140
64 layer

826
00:52:22,140 --> 00:52:26,440
I love the performance seems okay but
more important

827
00:52:26,440 --> 00:52:30,310
yeah it really does look like you get
safe strings going into the function to

828
00:52:30,310 --> 00:52:32,890
get safe streets coming out

829
00:52:32,890 --> 00:52:36,700
there are no known flaws when putting
arbitrary text into a text content field

830
00:52:36,700 --> 00:52:37,630
for spare

831
00:52:37,630 --> 00:52:41,870
I've not found anyway to actually get
script execute

832
00:52:41,870 --> 00:52:46,290
and there are no known cause when
creating arbitrary HTML

833
00:52:46,290 --> 00:52:51,210
are as long as there's a safe subset of
things that you're checked in here

834
00:52:51,210 --> 00:52:56,040
meeting I don't care what kinda text
goes into the source element

835
00:52:56,040 --> 00:53:01,130
a van image it's not gonna run script

836
00:53:01,130 --> 00:53:04,779
up for Eve out even out absolutely

837
00:53:04,779 --> 00:53:08,440
had some risk there are people saying I
turn off

838
00:53:08,440 --> 00:53:11,440
Eve lol my server in order applied at
yeah

839
00:53:11,440 --> 00:53:14,950
DDS c'mon for PHP both up

840
00:53:14,950 --> 00:53:18,279
PHP is just not going to be a safe
programming language

841
00:53:18,279 --> 00:53:21,359
if an attacker can run arbitrary PHP
like

842
00:53:21,359 --> 00:53:25,020
it's just it's just not a memory safe
environment so

843
00:53:25,020 --> 00:53:28,319
on at the point where it akers any cold
running

844
00:53:28,319 --> 00:53:31,810
they don't need even now two outs
obfuscate stuff

845
00:53:31,810 --> 00:53:35,330
they can just smash the job they PHP
stacked thank you very much

846
00:53:35,330 --> 00:53:39,330
I'm sorry I was even trying at to crash
PHP

847
00:53:39,330 --> 00:53:43,109
okay leave it at that on

848
00:53:43,109 --> 00:53:47,859
what Israel though is that you now in
this context the mic program for errors

849
00:53:47,859 --> 00:53:49,710
a lot more severe

850
00:53:49,710 --> 00:53:53,460
so if the correct way to express

851
00:53:53,460 --> 00:53:57,529
AP a piece of secure code would be Eve
albee's text are for

852
00:53:57,529 --> 00:54:02,569
who were exit polls carrot carrot X if
the developer instead

853
00:54:02,569 --> 00:54:05,589
goes halfway they say email be

854
00:54:05,589 --> 00:54:09,540
6 are free from work exit polls dollar
sign X if they put in the

855
00:54:09,540 --> 00:54:12,950
native interpolator rather than my
interpolator

856
00:54:12,950 --> 00:54:17,690
only crap now not only do I have
sequence action against the backend

857
00:54:17,690 --> 00:54:21,549
I have code execution against the fraud
dept

858
00:54:21,549 --> 00:54:27,330
not good so that is it as a base
mitigation why I switched from

859
00:54:27,330 --> 00:54:30,790
dollar sign exclamation point foo to
carry cared for

860
00:54:30,790 --> 00:54:35,000
to you increase the difference this is
actually on my love

861
00:54:35,000 --> 00:54:40,790
fun toys are from THC he actually made
me realize now I i text

862
00:54:40,790 --> 00:54:44,980
managing the risk the either now we have
an expansion function that's this be

863
00:54:44,980 --> 00:54:46,210
function right here

864
00:54:46,210 --> 00:54:50,140
Eve albee this function is a position

865
00:54:50,140 --> 00:54:54,460
to see what it is expanded the first
thing you can do is they can actually

866
00:54:54,460 --> 00:54:56,330
look and say hey wait a second MRI

867
00:54:56,330 --> 00:54:59,480
expanding in a way that's going to lead
the code execution

868
00:54:59,480 --> 00:55:04,319
you can do that mom a Compuware sequel
grammar so we can say

869
00:55:04,319 --> 00:55:07,569
I am only going to omit an actual see

870
00:55:07,569 --> 00:55:11,770
sequel statement on and I'm gonna make
sure that anything that is the

871
00:55:11,770 --> 00:55:15,170
right hand comparison meaning X equals

872
00:55:15,170 --> 00:55:18,490
possible attacker supplied variable I V
to make sure

873
00:55:18,490 --> 00:55:23,359
that is always in code and if I ever get
its time works not encoded

874
00:55:23,359 --> 00:55:26,920
a better at least be in the psych safe
one function

875
00:55:26,920 --> 00:55:30,000
or I'm just going to return Blake

876
00:55:30,000 --> 00:55:33,350
on mayor david Paterson put together
some code called the schecter

877
00:55:33,350 --> 00:55:37,460
that actually does this sort of trip
before I send it to the database

878
00:55:37,460 --> 00:55:40,620
let's go ahead do a dramatic a parson
make certain it's something that we

879
00:55:40,620 --> 00:55:41,529
walked

880
00:55:41,529 --> 00:55:44,900
projector we're looking at actually
moving it into this what I call P

881
00:55:44,900 --> 00:55:46,470
function

882
00:55:46,470 --> 00:55:50,609
and finally it is got a DS

883
00:55:50,609 --> 00:55:55,180
okay I can't go back in the stack and
say hey I'm in the middle of you know

884
00:55:55,180 --> 00:55:58,259
function 1010 levels deep in PHP

885
00:55:58,259 --> 00:56:02,060
let's make sure I was called that what I
was called with actually had me

886
00:56:02,060 --> 00:56:06,390
ok correctly handling the interpolation

887
00:56:06,390 --> 00:56:09,830
I can't do that in the stack what I can
do is say

888
00:56:09,830 --> 00:56:15,009
what's the wine a cold they called me
and from what file

889
00:56:15,009 --> 00:56:21,120
for for it's a terrible idea don't do it

890
00:56:21,120 --> 00:56:24,819
just because it works doesn't make it a
good idea

891
00:56:24,819 --> 00:56:29,620
I'll with only for the works is that is
some languages

892
00:56:29,620 --> 00:56:33,130
single quotes turn of native
interpolation

893
00:56:33,130 --> 00:56:37,339
meeting dollar sign foo only works if
you have double quotes a single quotes

894
00:56:37,339 --> 00:56:38,799
means don't do it

895
00:56:38,799 --> 00:56:42,120
I just passed that down to the
underlying function

896
00:56:42,120 --> 00:56:45,270
I thinking is that you require Eve lb

897
00:56:45,270 --> 00:56:49,799
single point doubling dollar sign for
the problem is is

898
00:56:49,799 --> 00:56:53,370
single quotes look a lot like double
quotes

899
00:56:53,370 --> 00:56:56,640
%uh we have a policy here airtight here

900
00:56:56,640 --> 00:57:01,200
rag on policy for development shops
because at the end of the day

901
00:57:01,200 --> 00:57:04,859
the most up effective way that I've ever
seen Co get secure

902
00:57:04,859 --> 00:57:09,759
has been through compiler ember some
sort enforce policy

903
00:57:09,759 --> 00:57:14,560
you know the when you hear about saw
your secure development life cycles this

904
00:57:14,560 --> 00:57:16,080
dealer all those things

905
00:57:16,080 --> 00:57:19,730
what they're basically saying is yeah
there's a lot of crap good right

906
00:57:19,730 --> 00:57:23,810
here's what will actually let you check
your I will say I've seen that be really

907
00:57:23,810 --> 00:57:25,529
effective on Microsoft code

908
00:57:25,529 --> 00:57:30,910
Michael %uh absolutely the large shops
can do this I'm not going if they could

909
00:57:30,910 --> 00:57:32,049
ever make a small

910
00:57:32,049 --> 00:57:36,029
that you the dev ever implement this

911
00:57:36,029 --> 00:57:40,250
performance wise I even now is slower
than compiled code

912
00:57:40,250 --> 00:57:43,370
so it depends how much you're trying to
devalue it

913
00:57:43,370 --> 00:57:46,490
is it possible to catch these
transformations

914
00:57:46,490 --> 00:57:50,910
were the nice things about retaining the
boundary between coding data

915
00:57:50,910 --> 00:57:54,049
is all the sudden making a day to
nothing

916
00:57:54,049 --> 00:57:57,170
and Blake and just normalizing it all to

917
00:57:57,170 --> 00:58:00,390
here's the canonical wary whatever may
come a day

918
00:58:00,390 --> 00:58:04,960
cash this you can actually do that now
is actually much easier

919
00:58:04,960 --> 00:58:09,520
so if databases are already doing this
we can actually do that

920
00:58:09,520 --> 00:58:13,290
are it works the other way as well up

921
00:58:13,290 --> 00:58:16,730
it has become the situation where she
might say

922
00:58:16,730 --> 00:58:20,049
dan you know why is it that it's fast to
go through

923
00:58:20,049 --> 00:58:24,670
directly manipulating the JavaScript on
instead of writing HTML

924
00:58:24,670 --> 00:58:28,549
is it everything or only reading a
shemale so is it that the normal case

925
00:58:28,549 --> 00:58:32,470
well so we've got Facebook and Gmail
they've totally change the way the

926
00:58:32,470 --> 00:58:33,900
browser implemented

927
00:58:33,900 --> 00:58:38,150
so I E six was really slow if you try to
take the backdoor approach

928
00:58:38,150 --> 00:58:42,029
but everything else yeah are you just
get a blast things a

929
00:58:42,029 --> 00:58:46,430
it was kinda cool is is that you can say
here is an art object has

930
00:58:46,430 --> 00:58:50,020
all these possible fields that are gonna
be filled in you know so it image

931
00:58:50,020 --> 00:58:51,640
sources and this and that

932
00:58:51,640 --> 00:58:54,940
you can actually cash the secure object

933
00:58:54,940 --> 00:58:59,390
a still stuff it as needed are made it
works very well as how gmail on Facebook

934
00:58:59,390 --> 00:59:01,040
actually work

935
00:59:01,040 --> 00:59:04,250
so there's a big mouth ir

936
00:59:04,250 --> 00:59:07,950
I did everything I can do to make this
actually interesting we're still working

937
00:59:07,950 --> 00:59:10,049
on this project but there's more

938
00:59:10,049 --> 00:59:13,120
arm they're not too much like two weeks
actually

939
00:59:13,120 --> 00:59:16,700
on what we're doing now

940
00:59:16,700 --> 00:59:21,910
is not working and they say to get a
what we're doing now

941
00:59:21,910 --> 00:59:26,720
is not working code is getting a little
more secure

942
00:59:26,720 --> 00:59:31,620
but not not not not much and not enough

943
00:59:31,620 --> 00:59:35,640
we need to start having discussions on
how we're going to write SecureCode

944
00:59:35,640 --> 00:59:39,859
for the next decade what sort of advice
we're going to give

945
00:59:39,859 --> 00:59:43,380
the difference between 8 good have
between good advice

946
00:59:43,380 --> 00:59:47,710
and bad advice is does it work it can
people do it

947
00:59:47,710 --> 00:59:50,779
and I hope we as a community can give
good advice

948
00:59:50,779 --> 00:59:57,779
that's right up

949
01:00:03,560 --> 01:00:06,960
so I have no idea how much time I have
but I am open for questions if there's

950
01:00:06,960 --> 01:00:07,750
time for

951
01:00:07,750 --> 01:00:10,760
is there i at this time for questions

952
01:00:10,760 --> 01:00:16,640
for come on up and ask you something
okay

953
01:00:16,640 --> 01:00:21,129
question for you alright where are you I
can see mint mother you are okay

954
01:00:21,130 --> 01:00:25,170
am won the security situation so often
given as to 10 of JavaScript in your

955
01:00:25,170 --> 01:00:26,940
browser or use something like those
groups

956
01:00:26,940 --> 01:00:30,170
and what was suggesting requires jeff is
gonna be on

957
01:00:30,170 --> 01:00:33,990
will you get me a blank page am could
use a roof

958
01:00:33,990 --> 01:00:37,770
comment on the difference between zone
were lying to ourselves

959
01:00:37,770 --> 01:00:43,490
we do that a lot I am if you want to
browse the web for

960
01:00:43,490 --> 01:00:46,970
you're using javascript if the

961
01:00:46,970 --> 01:00:52,089
approach is well when you get to a site
that isn't working by JavaScript you

962
01:00:52,089 --> 01:00:52,740
have to click

963
01:00:52,740 --> 01:00:56,710
okay to the pop-up let me ask you
something why is it a problem when

964
01:00:56,710 --> 01:01:00,680
this to give you a popup and not a
problem when your browser gives you a

965
01:01:00,680 --> 01:01:01,369
popup

966
01:01:01,369 --> 01:01:04,800
we need to secure the web when
JavaScript is

967
01:01:04,800 --> 01:01:08,500
active because you know what users are
pros Inc the web

968
01:01:08,500 --> 01:01:11,890
with JavaScript active it's not a maybe

969
01:01:11,890 --> 01:01:15,150
it's not a kinder it's just the way it
is

970
01:01:15,150 --> 01:01:19,349
sure I and no it needs to be that way

971
01:01:19,349 --> 01:01:22,490
yes you kinda vanessa cage 22 situation
where

972
01:01:22,490 --> 01:01:26,190
if the website that you're browsing has
been secured in way you describe him

973
01:01:26,190 --> 01:01:29,270
10 JavaScript owns a good idea if it
hasn't

974
01:01:29,270 --> 01:01:33,490
I'm turning to have a script of is a
good idea in

975
01:01:33,490 --> 01:01:37,130
to hear from one to the other is a
problem says is a here's a funny thing

976
01:01:37,130 --> 01:01:40,500
actually see p from 949 pointed this out
as well

977
01:01:40,500 --> 01:01:44,869
on you may have someone come to your
site with javascript disabled

978
01:01:44,869 --> 01:01:49,290
and then them I got the site doesn't
work what turns out you can actually

979
01:01:49,290 --> 01:01:53,050
works javaScript is disabled it is
actually safe to handle

980
01:01:53,050 --> 01:01:56,579
all the stuff that would normally be
cross site scripting for cause

981
01:01:56,579 --> 01:01:58,869
javaScript is disabled for

982
01:01:58,869 --> 01:02:02,390
so you you can very easily dynamically
detect

983
01:02:02,390 --> 01:02:06,660
oh I'm using someone who I talking to
someone who has JS disabled

984
01:02:06,660 --> 01:02:11,060
let's give them the other version of
this page

985
01:02:11,060 --> 01:02:14,420
and you don't need to be was worried
about filtering because

986
01:02:14,420 --> 01:02:17,829
the user has taken the out filter this
for you approach

987
01:02:17,829 --> 01:02:22,500
credited next question

988
01:02:22,500 --> 01:02:26,670
I the so the said you suggesting I guess
has very obvious performance

989
01:02:26,670 --> 01:02:28,369
implications on JavaScript side

990
01:02:28,369 --> 01:02:31,950
like the valve and does all the p.m.

991
01:02:31,950 --> 01:02:36,630
sort of musicians and I guess second
part that is so we will hang on this

992
01:02:36,630 --> 01:02:37,609
only even now

993
01:02:37,609 --> 01:02:42,089
on the database I'd there's no way down
the in the in the JavaScript side

994
01:02:42,089 --> 01:02:45,560
what happens is the back into it maybe
even knowing

995
01:02:45,560 --> 01:02:49,180
but the Friday and is only seeing I got
a spare

996
01:02:49,180 --> 01:02:52,250
and now I got it the coldest span and
the two coal fines through

997
01:02:52,250 --> 01:02:55,390
a of the time look up and then

998
01:02:55,390 --> 01:02:59,118
that is actually been optimized by the
rust belt purse but wait a second

999
01:02:59,119 --> 01:03:02,450
if you were done by Ruby ami would
suffer the same like a performance

1000
01:03:02,450 --> 01:03:03,440
optimizations right

1001
01:03:03,440 --> 01:03:07,099
um defense what I'm sending back is

1002
01:03:07,099 --> 01:03:11,720
no because they would be a if I wanted I
could basically have my select

1003
01:03:11,720 --> 01:03:15,579
out at the database include a B 64 E
right so

1004
01:03:15,579 --> 01:03:19,339
but the the ideas like if it does

1005
01:03:19,339 --> 01:03:23,670
and most people are not writing ask you
anymore as truly more the reading

1006
01:03:23,670 --> 01:03:28,220
rails for Django whatever that using so
what do framework developers

1007
01:03:28,220 --> 01:03:32,190
do to address this big problem in a
generic way

1008
01:03:32,190 --> 01:03:35,329
that sort of does it make performs
decisions for all the application

1009
01:03:35,329 --> 01:03:35,960
developers

1010
01:03:35,960 --> 01:03:39,349
ok it's the first thing is if you have
dads

1011
01:03:39,349 --> 01:03:43,109
that are expressing their database
queries in the native programming

1012
01:03:43,109 --> 01:03:43,810
language

1013
01:03:43,810 --> 01:03:47,029
great I want to be clear

1014
01:03:47,030 --> 01:03:50,150
there's no don't really feel religion in
defects

1015
01:03:50,150 --> 01:03:54,900
like you just say you've gotta use you
this link which are that language or

1016
01:03:54,900 --> 01:03:55,670
whatever

1017
01:03:55,670 --> 01:03:58,760
if you've got people migrated wonder for

1018
01:03:58,760 --> 01:04:02,030
there was a whole bunch a sequel out
there still for

1019
01:04:02,030 --> 01:04:06,369
and there's also but if not sequel
there's still a whole

1020
01:04:06,369 --> 01:04:10,800
whole bunch a big shemale being omitted
without any kind of scene

1021
01:04:10,800 --> 01:04:15,520
0 way of separating what comes from the
framework and what comes from the

1022
01:04:15,520 --> 01:04:16,140
attacker

1023
01:04:16,140 --> 01:04:19,990
I'm more than happy to have this only
exist on the

1024
01:04:19,990 --> 01:04:23,690
how do we render a shemale safely side
but

1025
01:04:23,690 --> 01:04:27,819
for the people who are still actually
reading c4 and there are quite a few

1026
01:04:27,819 --> 01:04:34,150
let's give them a way to do it safely
yea you talk about wanting to be able to

1027
01:04:34,150 --> 01:04:38,030
execute functions in the local context
on I'm

1028
01:04:38,030 --> 01:04:42,670
previously thought at this bed using
macros

1029
01:04:42,670 --> 01:04:45,849
three something like CPP that gets

1030
01:04:45,849 --> 01:04:49,380
does a transforming occurred before the
interpreter compiler hits it why not do

1031
01:04:49,380 --> 01:04:50,099
that

1032
01:04:50,099 --> 01:04:53,210
because they remove macros from every
language that's come out since

1033
01:04:53,210 --> 01:04:56,270
CPP yet big you can you can

1034
01:04:56,270 --> 01:04:59,780
reimplemented without too much trouble
so so

1035
01:04:59,780 --> 01:05:03,380
the problem is is there to this is
actually come up

1036
01:05:03,380 --> 01:05:07,230
what if we made this stuff like idee
plugins what if we made the stuff you

1037
01:05:07,230 --> 01:05:09,380
know implement it in the build script

1038
01:05:09,380 --> 01:05:14,140
and the feeling is is that

1039
01:05:14,140 --> 01:05:17,578
you get into real maintainability
problems

1040
01:05:17,579 --> 01:05:22,010
if your code has to go through
transformation outside at the context of

1041
01:05:22,010 --> 01:05:23,640
the programming language

1042
01:05:23,640 --> 01:05:27,310
like you see these situations were
languages are chained on chains and

1043
01:05:27,310 --> 01:05:28,109
chains

1044
01:05:28,109 --> 01:05:31,119
and I tell you it's made so

1045
01:05:31,119 --> 01:05:34,599
for canoe automaker auto called

1046
01:05:34,599 --> 01:05:39,390
is kind of amazing like it works the
output of these things compiles all over

1047
01:05:39,390 --> 01:05:41,410
the place over a long period the time

1048
01:05:41,410 --> 01:05:44,420
but I don't think I've ever been on a
project where I haven't spent as

1049
01:05:44,420 --> 01:05:47,859
much time fighting with auto coffin
automake

1050
01:05:47,859 --> 01:05:52,400
as I have with the code itself so I'm a
little allergic to

1051
01:05:52,400 --> 01:05:55,799
hey why don't we do something outside
the language

1052
01:05:55,799 --> 01:05:58,829
I think the right thing to do is to have
the languages

1053
01:05:58,829 --> 01:06:02,650
give us a way to not all the time

1054
01:06:02,650 --> 01:06:05,890
but sometimes I need a way to say this
function has

1055
01:06:05,890 --> 01:06:10,740
access to the variables up its parent
make it work

1056
01:06:10,740 --> 01:06:14,599
thank you no worries

1057
01:06:14,599 --> 01:06:18,200
so you described I'd dynamic versus
static serving

1058
01:06:18,200 --> 01:06:21,329
as a war between factions I'm

1059
01:06:21,329 --> 01:06:24,339
that's actually not quite the right
history as far as I'm aware

1060
01:06:24,339 --> 01:06:28,560
tell me more so the list impromptu
originally list was the dynamically

1061
01:06:28,560 --> 01:06:29,549
Scott language

1062
01:06:29,549 --> 01:06:32,700
okay I that was actually an
implementation but

1063
01:06:32,700 --> 01:06:36,640
for it turns out a bug it's a feature
writer

1064
01:06:36,640 --> 01:06:40,000
turns out that it has some nice features
but the

1065
01:06:40,000 --> 01:06:43,069
the canonical way of doing dynamic
scoping

1066
01:06:43,069 --> 01:06:46,470
which is to say if you just follow what
list did so many years ago

1067
01:06:46,470 --> 01:06:50,310
actually has a number of reliability
problems because you can write code

1068
01:06:50,310 --> 01:06:53,060
where variables escape their closure

1069
01:06:53,060 --> 01:06:56,910
and the result is that is that your
program crashes by manipulating

1070
01:06:56,910 --> 01:07:00,940
stray pointers in a memory save language
right that's not something we like so

1071
01:07:00,940 --> 01:07:02,700
the war was won

1072
01:07:02,700 --> 01:07:05,990
mostly under the banner of reliability
I'm

1073
01:07:05,990 --> 01:07:10,250
how would you reconcile the fact that
dynamic scoping

1074
01:07:10,250 --> 01:07:13,290
decreases reliability with the fact that
you seem to be able to increase security

1075
01:07:13,290 --> 01:07:14,119
with

1076
01:07:14,119 --> 01:07:17,930
so for the idea is not

1077
01:07:17,930 --> 01:07:22,170
that you can do a that you can move in a
million directions

1078
01:07:22,170 --> 01:07:25,700
and that's a problem does not mean you
should move in 0 directions

1079
01:07:25,700 --> 01:07:29,520
because that also is a problem the ATA
is is that

1080
01:07:29,520 --> 01:07:33,660
I shouldn't have to use even now so I'm
here's what's going on

1081
01:07:33,660 --> 01:07:36,900
I get a variable in named

1082
01:07:36,900 --> 01:07:40,460
inside a mystery I'm don't know

1083
01:07:40,460 --> 01:07:44,710
in till that variable comes it what I
need to dereference

1084
01:07:44,710 --> 01:07:48,060
I need the ability to actually

1085
01:07:48,060 --> 01:07:52,869
dereference that value without having to
go ahead a head

1086
01:07:52,869 --> 01:07:58,210
force all values a its

1087
01:07:58,210 --> 01:08:01,310
its interesting question other how you
do

1088
01:08:01,310 --> 01:08:05,328
dania makes coping safely if for no
other reason that you can also get into

1089
01:08:05,329 --> 01:08:06,500
the situation where

1090
01:08:06,500 --> 01:08:09,930
the attacker can inject random other
variables as well for

1091
01:08:09,930 --> 01:08:13,369
on said here's the deal we want to make
sure

1092
01:08:13,369 --> 01:08:17,429
that the developer can write the string
that the reference is an arbitrary

1093
01:08:17,429 --> 01:08:18,589
Verrier

1094
01:08:18,589 --> 01:08:21,640
we also want to make sure that attacker
can not write this train

1095
01:08:21,640 --> 01:08:25,799
that the reference is an arbitrary
variable and we absolutely absolutely

1096
01:08:25,799 --> 01:08:30,100
want to avoid the list situation where
you're an employer's get over it

1097
01:08:30,100 --> 01:08:34,089
I think it's possible and more
importantly I think it's necessary

1098
01:08:34,089 --> 01:08:38,100
because for all these programming
languages are admitting it

1099
01:08:38,100 --> 01:08:41,450
the same failure clocks that sort of

1100
01:08:41,450 --> 01:08:45,149
absolute consistency means there is a
problem with the way we're writing

1101
01:08:45,149 --> 01:08:45,910
languages

1102
01:08:45,910 --> 01:08:49,339
in general for you

1103
01:08:49,339 --> 01:08:52,920
expression 8 say you

1104
01:08:52,920 --> 01:08:56,060
presented the two different wave writing
his new

1105
01:08:56,060 --> 01:09:00,489
query language the for Java you mean not
not not for does get the service I

1106
01:09:00,489 --> 01:09:03,750
the one using the valima chaining one
yeah why a

1107
01:09:03,750 --> 01:09:06,880
even bother with one using email from
seems to have a lotta

1108
01:09:06,880 --> 01:09:11,710
a few removing people don't like went in
one solves the problem of not being able

1109
01:09:11,710 --> 01:09:13,960
to access the variables in the parents
go

1110
01:09:13,960 --> 01:09:17,529
up the for

1111
01:09:17,529 --> 01:09:20,580
but the cold the Eve Ellis

1112
01:09:20,580 --> 01:09:23,818
more usable more likely to get adoption

1113
01:09:23,819 --> 01:09:27,589
okay see that matters right Lake 80

1114
01:09:27,589 --> 01:09:31,380
Devas prefer string interpolation to
string concatenation

1115
01:09:31,380 --> 01:09:34,609
if we can give them either in the
Safeway

1116
01:09:34,609 --> 01:09:39,730
great I've actually implemented both in
both languages so I have the PHP version

1117
01:09:39,730 --> 01:09:41,980
that is doing string concatenation as
well

1118
01:09:41,980 --> 01:09:45,529
but you know let me pull up here your

1119
01:09:45,529 --> 01:09:50,770
I can totally tell Dad said eww code in
your da code update and I code or data

1120
01:09:50,770 --> 01:09:54,760
I can also tell them to do this variable
argument I can do this

1121
01:09:54,760 --> 01:09:58,370
but you know it's a lot easier for me to
tell them to do this

1122
01:09:58,370 --> 01:10:02,750
ride it like you want to win the and
secure way and I'll deal with it

1123
01:10:02,750 --> 01:10:08,270
okay fair enough any other questions

1124
01:10:08,270 --> 01:10:15,270
call you guys have been great

1125
01:10:23,650 --> 01:10:30,650
on

1126
01:10:33,290 --> 01:10:34,140
well

