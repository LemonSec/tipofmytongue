1
00:00:00,199 --> 00:00:04,410
no service that's discoverable by in
math and this is precisely what for

2
00:00:04,410 --> 00:00:06,629
talking an SBA both are designed to

3
00:00:06,629 --> 00:00:09,920
to limit but they're not designed to do
that

4
00:00:09,920 --> 00:00:13,070
at the expense are or in a way that

5
00:00:13,070 --> 00:00:19,230
adds to in security are software so

6
00:00:19,230 --> 00:00:24,019
fundamentally I would say that both
strategies changed fundamentally change

7
00:00:24,019 --> 00:00:29,550
the service i text model the typical
workflow years

8
00:00:29,550 --> 00:00:33,950
usually people deploy this technology
for

9
00:00:33,950 --> 00:00:38,040
for the protection of SSH up but i've
seen deployed for all sorts of different

10
00:00:38,040 --> 00:00:38,809
services

11
00:00:38,809 --> 00:00:42,980
help the various isnt related services
top three in

12
00:00:42,980 --> 00:00:47,600
its I'm happy cetera on anything ever
relies on a relatively long running

13
00:00:47,600 --> 00:00:50,480
connection and this can even apply DHCP
these days is

14
00:00:50,480 --> 00:00:54,750
as they should be moves two more
persistent connections um

15
00:00:54,750 --> 00:00:58,649
with the typical workflow years they've
got the service they want to protect

16
00:00:58,649 --> 00:01:03,399
they have the ability to interact with a
firewall

17
00:01:03,399 --> 00:01:07,610
to maintain a default prop stance for
any connections to that service

18
00:01:07,610 --> 00:01:12,030
but they will also deploy this this for
knocking arrest be a mechanism

19
00:01:12,030 --> 00:01:15,460
in conjunction with the firewall to
passively monitor

20
00:01:15,460 --> 00:01:18,530
either for of sequences they come in

21
00:01:18,530 --> 00:01:21,830
or single pack an authorization packets
I'm

22
00:01:21,830 --> 00:01:25,360
and then once they validate that
incoming data stream

23
00:01:25,360 --> 00:01:28,710
they will then reconfigure the fire
offer temporary access

24
00:01:28,710 --> 00:01:32,119
neither port knocking

25
00:01:32,119 --> 00:01:35,540
nor SBA are designed to ever acknowledge

26
00:01:35,540 --> 00:01:39,700
anything so you as a user you send of
his packet into the

27
00:01:39,700 --> 00:01:44,009
into either essentially and if it is not
lost in a row

28
00:01:44,009 --> 00:01:47,540
if it's perceive minutes appropriately
constructed com

29
00:01:47,540 --> 00:01:51,869
and you will then be able to connect to

30
00:01:51,869 --> 00:01:56,280
sht but yet the original package that
you sent are never acknowledge

31
00:01:56,280 --> 00:01:59,570
so they're just silently dropped and

32
00:01:59,570 --> 00:02:02,710
no while most people use as to protect

33
00:02:02,710 --> 00:02:07,219
sht I do this myself you can certainly
think be honest safety there's no reason

34
00:02:07,219 --> 00:02:07,799
why

35
00:02:07,799 --> 00:02:13,629
that should be limited just this is
where the similarities between

36
00:02:13,629 --> 00:02:16,690
for talking in SBA systems essentially
hands

37
00:02:16,690 --> 00:02:21,310
so

38
00:02:21,310 --> 00:02:25,170
on there's a website for talking .org on

39
00:02:25,170 --> 00:02:30,629
that is cavett listing up the current up
for talkin SBA implementations

40
00:02:30,629 --> 00:02:34,700
I about forty them I would say in
various levels of support

41
00:02:34,700 --> 00:02:37,709
and his its it usually

42
00:02:37,709 --> 00:02:41,670
interesting just go through and see what
has been done in the past

43
00:02:41,670 --> 00:02:47,220
Worthing future so let's start at the
Minot specifically

44
00:02:47,220 --> 00:02:50,390
these are some the design goals

45
00:02:50,390 --> 00:02:54,390
that after being off his hat so the
first three the first to actually

46
00:02:54,390 --> 00:02:58,340
this is something that you would see
within for talking's

47
00:02:58,340 --> 00:03:01,580
systems as well at to be not decide

48
00:03:01,580 --> 00:03:05,420
one also supports both symmetric an
asymmetric ciphers

49
00:03:05,420 --> 00:03:10,080
so its forts rind all few shoes if you
like this after cycle route and also

50
00:03:10,080 --> 00:03:11,620
supports I G bgz

51
00:03:11,620 --> 00:03:16,239
at out signed cryptid GPG data that sent
across

52
00:03:16,239 --> 00:03:19,530
and you can take advantage of the
security properties a GPG versus

53
00:03:19,530 --> 00:03:25,230
don't you for that SBA packets are

54
00:03:25,230 --> 00:03:29,140
in cryptid and their non-replaceable and
so

55
00:03:29,140 --> 00:03:32,650
deny me play a full part is one of the
chief

56
00:03:32,650 --> 00:03:35,780
difficulties that port knocking those on

57
00:03:35,780 --> 00:03:39,640
its relatively difficult to make port
knocking sequences non-replaceable

58
00:03:39,640 --> 00:03:42,940
because you need some aspect poverty
Arctic to

59
00:03:42,940 --> 00:03:46,799
to to to get to that property and

60
00:03:46,799 --> 00:03:50,200
for docking by itself which typically
transmit stated within

61
00:03:50,200 --> 00:03:54,390
packet headers doesn't isn't usually
able to you

62
00:03:54,390 --> 00:03:57,530
hot to achieve that that property by

63
00:03:57,530 --> 00:04:01,620
all in addition I don't want anything
that trust

64
00:04:01,620 --> 00:04:04,860
an IP address within an IP header so

65
00:04:04,860 --> 00:04:09,819
you know if there's any if if the its
relative you would become relatively

66
00:04:09,819 --> 00:04:11,400
easy to manage middle

67
00:04:11,400 --> 00:04:14,739
I port knocking implementation just

68
00:04:14,739 --> 00:04:17,918
yeah I s if that implementation chooses
to trust

69
00:04:17,918 --> 00:04:22,130
the source IP up the sequence if you've
got demand out there that is parsing a

70
00:04:22,130 --> 00:04:23,080
firewall log

71
00:04:23,080 --> 00:04:26,109
and seeing this port knocking sequence
come across the wire

72
00:04:26,110 --> 00:04:29,970
and saying okay I saw the connection to
these following works therefore I know

73
00:04:29,970 --> 00:04:30,479
that that

74
00:04:30,479 --> 00:04:34,120
that person actually wants access to sht
well

75
00:04:34,120 --> 00:04:37,970
you know if you if that implementation
trust the IP address

76
00:04:37,970 --> 00:04:41,580
in the IP header there's that is totally
unauthenticated

77
00:04:41,580 --> 00:04:45,680
information could have been changed by
someone who has access to many middle

78
00:04:45,680 --> 00:04:51,449
incoming packets single pack an
authorization does not work that way

79
00:04:51,449 --> 00:04:54,990
it is designed to encrypt the IP address
along with the

80
00:04:54,990 --> 00:04:58,509
several other pieces of information with
an ace a payload

81
00:04:58,509 --> 00:05:01,550
and will only reconfigure the local
firewall

82
00:05:01,550 --> 00:05:04,820
not for the IP address is actually
included within that came up which means

83
00:05:04,820 --> 00:05:05,310
it

84
00:05:05,310 --> 00:05:08,729
it must be the crypt it properly in
order for

85
00:05:08,729 --> 00:05:13,030
whoever sent act actually gaining access

86
00:05:13,030 --> 00:05:16,720
I like the SP information to be portable

87
00:05:16,720 --> 00:05:20,169
to embedded devices so

88
00:05:20,169 --> 00:05:23,389
to me this means that guide I don't want

89
00:05:23,389 --> 00:05:26,710
heavyweight interpreted language and
many cases a lot of people if they're

90
00:05:26,710 --> 00:05:27,289
running a

91
00:05:27,289 --> 00:05:31,080
light with firewall gateway device
number according to networks they don't

92
00:05:31,080 --> 00:05:31,789
even want

93
00:05:31,789 --> 00:05:34,880
perl python installed at all so

94
00:05:34,880 --> 00:05:38,240
you know they will only deploy the
absolute minimum

95
00:05:38,240 --> 00:05:44,150
%uh system libraries userspace code and
cut down kernel configuration

96
00:05:44,150 --> 00:05:49,220
order to actually provide filtering for
those that works and nothing else

97
00:05:49,220 --> 00:05:53,220
so I would like the FW not project to be
able to follow them

98
00:05:53,220 --> 00:05:57,160
paradigm also

99
00:05:57,160 --> 00:06:00,280
it should be portable to various fire
alarm detectors

100
00:06:00,280 --> 00:06:05,139
an ACL which is so currently today after
being up 2.0 supports three different

101
00:06:05,139 --> 00:06:05,710
firewall

102
00:06:05,710 --> 00:06:11,008
sports I the tables on lanix IPFW on
FreeBSD Mac OS 10 systems

103
00:06:11,009 --> 00:06:16,449
and also the PFR all on OpenBSD

104
00:06:16,449 --> 00:06:20,120
the client should be really portable as
well there's no reason

105
00:06:20,120 --> 00:06:23,960
that it shouldn't be should be able to
be run on Cygwin on Windows

106
00:06:23,960 --> 00:06:27,419
you know you name the UNIX system it
should run there and also

107
00:06:27,419 --> 00:06:31,719
on you know Android and iPhone plants
which do exist by the way

108
00:06:31,720 --> 00:06:34,729
we're looking for some assistance for
people who are interested in this sort

109
00:06:34,729 --> 00:06:35,258
of fell

110
00:06:35,259 --> 00:06:38,970
to to maintain um and

111
00:06:38,970 --> 00:06:42,710
you know what are the consequences of
this too is we don't want to necessarily

112
00:06:42,710 --> 00:06:44,440
require someone do

113
00:06:44,440 --> 00:06:48,550
to have administrator level control
other local by started to send in a

114
00:06:48,550 --> 00:06:52,000
perfectly constructed SP a pack

115
00:06:52,000 --> 00:06:56,310
we don't want to require raw socket
manipulation a packet headers

116
00:06:56,310 --> 00:06:59,449
on your stuffing authentication
information with them

117
00:06:59,449 --> 00:07:02,940
safety Sabby options portion the TCP
header

118
00:07:02,940 --> 00:07:07,750
or that sort of thing there's lotsa
place we did stuff information

119
00:07:07,750 --> 00:07:12,770
but those kinds of activities should be
clear requirements for global controller

120
00:07:12,770 --> 00:07:13,419
device

121
00:07:13,419 --> 00:07:17,210
RT users don't have to and I'd like to
be able to have

122
00:07:17,210 --> 00:07:20,720
after being off on reach those users

123
00:07:20,720 --> 00:07:23,770
and also alive renomination so there is
a

124
00:07:23,770 --> 00:07:27,580
so both the after be our client and
server lake against a

125
00:07:27,580 --> 00:07:30,889
in library FKL that implements the

126
00:07:30,889 --> 00:07:34,509
the SBA protocol as envisioned by after
being up so

127
00:07:34,509 --> 00:07:37,729
this brings it into the realm of
third-party

128
00:07:37,729 --> 00:07:41,180
usage so there's all there are also a
problem python bindings that used at

129
00:07:41,180 --> 00:07:45,430
library

130
00:07:45,430 --> 00:07:52,430
so as I mentioned have any questions up
to now

131
00:07:52,460 --> 00:07:56,069
so on

132
00:07:56,069 --> 00:07:59,169
I've already mentioned most this on a
slight but the force that mode is

133
00:07:59,169 --> 00:08:02,690
probably notable so if anybody has been
running at the Pearl version

134
00:08:02,690 --> 00:08:06,860
up to now this is a new both doesn't
exist in echoed

135
00:08:06,860 --> 00:08:10,220
essentially the force that mode allows

136
00:08:10,220 --> 00:08:14,199
individual sp-a keys

137
00:08:14,199 --> 00:08:17,210
to be associated with automatically bill
now rules

138
00:08:17,210 --> 00:08:21,400
so you could have a you could have a
border filtering device running

139
00:08:21,400 --> 00:08:24,490
after the top team in and am

140
00:08:24,490 --> 00:08:28,720
he can construct NAT rule to allow
external system to reach

141
00:08:28,720 --> 00:08:32,560
internal devices transparently so they
would never even know that they're not

142
00:08:32,560 --> 00:08:36,169
actually reaching the firewall itself
they're being that all the way into an

143
00:08:36,169 --> 00:08:37,059
internal device

144
00:08:37,060 --> 00:08:40,419
of your choosing and there are

145
00:08:40,419 --> 00:08:43,458
iPhone Android clients and by the way
also I

146
00:08:43,459 --> 00:08:47,550
I switched to get and developers out
there

147
00:08:47,550 --> 00:08:50,880
I went forty a decade ago I guess it was

148
00:08:50,880 --> 00:08:54,910
you know mostly CVS and its or the
Subversion wave came along and then

149
00:08:54,910 --> 00:08:58,569
you haven't tried it yet highly
recommend it it is awesome

150
00:08:58,570 --> 00:09:02,440
you can clone the repository like

151
00:09:02,440 --> 00:09:07,120
so as I mentioned before now the after
we offers a C++ application

152
00:09:07,120 --> 00:09:10,370
there's a there's a a pretty high burden

153
00:09:10,370 --> 00:09:14,860
on trying to write SecureCode as much as
possible of course this is not an easy

154
00:09:14,860 --> 00:09:16,310
thing to do

155
00:09:16,310 --> 00:09:20,970
com I'm not claiming as to be not has 0
bugs no one can ever claim that

156
00:09:20,970 --> 00:09:24,800
com this is a listing I love

157
00:09:24,800 --> 00:09:29,620
the livor dependencies and the I in the
server-side implementation

158
00:09:29,620 --> 00:09:32,810
up the f2p not demand

159
00:09:32,810 --> 00:09:38,410
those and those are not involved comes
as C from Lipsy

160
00:09:38,410 --> 00:09:41,719
you can get pretty much those libraries
no matter what application right if

161
00:09:41,720 --> 00:09:44,899
something you're using gcc to compile
into

162
00:09:44,899 --> 00:09:48,430
to inexcusable on a Linux system on

163
00:09:48,430 --> 00:09:52,370
the libraries and boldest the best K no
one is that is the

164
00:09:52,370 --> 00:09:56,320
the first woman I mention this is one
that implements the SBA protocol

165
00:09:56,320 --> 00:09:59,600
it also uses live P cap more on this in
a moment

166
00:09:59,600 --> 00:10:03,519
and these two are optional uses live GPG
me

167
00:10:03,519 --> 00:10:06,680
for the on for the GPG portion

168
00:10:06,680 --> 00:10:13,680
of the SBA fermentation if you choose to
enable that is not mandatory

169
00:10:14,220 --> 00:10:17,240
but contrast this with

170
00:10:17,240 --> 00:10:21,480
the dependencies in the old berle
version this is world so I the link sis

171
00:10:21,480 --> 00:10:24,820
on I will insist I sure that

172
00:10:24,820 --> 00:10:29,560
54g a camera exact number it's one those
Linksys routers we can actually flash

173
00:10:29,560 --> 00:10:32,970
the memory and you can get open wrt
Deron

174
00:10:32,970 --> 00:10:37,290
I there's just no way in the such a
small form factor to get

175
00:10:37,290 --> 00:10:41,449
all those pearls dependencies to
actually run along with the Pearl demand

176
00:10:41,450 --> 00:10:45,680
in such a you know it's such a small
cyst early I say it's really difficult

177
00:10:45,680 --> 00:10:49,050
me if you do judge choose to get every
ultralogistik

178
00:10:49,050 --> 00:10:52,370
actually running and an excuse you're
not gonna have very much processing

179
00:10:52,370 --> 00:10:55,529
left or memory left for anything else so

180
00:10:55,529 --> 00:10:58,939
let alone of course am many of these
libraries

181
00:10:58,940 --> 00:11:04,649
are these pro models have seeker the
excess extensions the get compiled to

182
00:11:04,649 --> 00:11:08,610
so you know the auditing requirements
for such a heavy waco bases

183
00:11:08,610 --> 00:11:12,190
is pretty large this is one of the
reasons that

184
00:11:12,190 --> 00:11:15,490
we chose in the interview not project to
go with the C implementation

185
00:11:15,490 --> 00:11:18,820
where you don't have such a heavyweight
bird of Tom

186
00:11:18,820 --> 00:11:22,430
up %uh Marshall Co and that's those are
just the mod any also the pro

187
00:11:22,430 --> 00:11:24,029
interpreter itself

188
00:11:24,029 --> 00:11:27,800
so you know turbine languages while the
great I love perl python is also

189
00:11:27,800 --> 00:11:28,750
fantastic

190
00:11:28,750 --> 00:11:32,329
its its also a large code base to and

191
00:11:32,329 --> 00:11:39,329
that is not the friend %uh security

192
00:11:39,459 --> 00:11:43,829
so I mentioned that that after being up
uses sleepy

193
00:11:43,829 --> 00:11:47,720
Liberty Cap I'm some people

194
00:11:47,720 --> 00:11:50,920
automatically dismiss

195
00:11:50,920 --> 00:11:54,010
for talking or SBA be even just because
of that

196
00:11:54,010 --> 00:11:57,540
it is a C library that is relatively

197
00:11:57,540 --> 00:12:00,740
you know it's not a simple C++ library
um

198
00:12:00,740 --> 00:12:07,010
but im in defensive using live peek out

199
00:12:07,010 --> 00:12:11,450
so first time all let the cat usage
Olympic app allows a design goals I

200
00:12:11,450 --> 00:12:12,070
mention

201
00:12:12,070 --> 00:12:15,820
earlier on to be cheap and

202
00:12:15,820 --> 00:12:20,730
every for knocking or SBA system as a
bird in a park in some fashion

203
00:12:20,730 --> 00:12:24,360
and even those even log parser

204
00:12:24,360 --> 00:12:27,930
have had gone abilities from time to
time so

205
00:12:27,930 --> 00:12:32,910
you know it what this really is about is
reducing the attack service for

206
00:12:32,910 --> 00:12:37,120
I am you know for all sorts of server
software

207
00:12:37,120 --> 00:12:41,440
I am you know if if limbic at in itself

208
00:12:41,440 --> 00:12:45,070
were a huge problem then we should see
evidence

209
00:12:45,070 --> 00:12:48,290
are let's say exploit frameworks being
able to take advantage

210
00:12:48,290 --> 00:12:51,399
a flippy cafes offer an attack them to

211
00:12:51,399 --> 00:12:55,230
um you know usage in up for talking in
SBA

212
00:12:55,230 --> 00:13:01,019
is different it the exploit frameworks
don't expected they have to go to the

213
00:13:01,019 --> 00:13:02,380
level of

214
00:13:02,380 --> 00:13:06,170
actually circumventing or compromising a
sniffer

215
00:13:06,170 --> 00:13:09,850
order to gain access to something else
so

216
00:13:09,850 --> 00:13:13,620
different is good and secure usually um

217
00:13:13,620 --> 00:13:17,579
so but we can certainly ask the question
you know what what is messed point doing

218
00:13:17,579 --> 00:13:18,450
about

219
00:13:18,450 --> 00:13:23,630
about exporting lipke cafe software one
certainly does have some exploits for

220
00:13:23,630 --> 00:13:28,269
up snort there were there was it the
CrPC vulnerability for 2007 before that

221
00:13:28,269 --> 00:13:28,800
there was a

222
00:13:28,800 --> 00:13:33,350
a four billion the back or first
preprocessor the I long since been fixed

223
00:13:33,350 --> 00:13:36,610
um Wireshark there's you know several

224
00:13:36,610 --> 00:13:40,130
exploits for various decoders and

225
00:13:40,130 --> 00:13:46,579
in Wireshark generally however

226
00:13:46,579 --> 00:13:50,079
Metasploit is not exporting sleepy cat
itself

227
00:13:50,079 --> 00:13:53,139
its exploiting the code this layered on
top of that peak at

228
00:13:53,139 --> 00:13:56,339
and also if you search the National for
billy the vase

229
00:13:56,339 --> 00:14:00,180
there are some vulnerabilities and let
the cat that have been fixed over time

230
00:14:00,180 --> 00:14:06,149
but the vast majority of them are in the
complex offer the right on top

231
00:14:06,149 --> 00:14:09,209
so com

232
00:14:09,209 --> 00:14:12,550
so to me that indicates that there is
their lease

233
00:14:12,550 --> 00:14:15,680
is some room for usage it let P cap

234
00:14:15,680 --> 00:14:20,709
with a simplistic userspace
implementation on top of that

235
00:14:20,709 --> 00:14:27,709
and more about this

236
00:14:29,810 --> 00:14:36,810
so

237
00:14:37,580 --> 00:14:40,680
another thing about SBA is nothing's are

238
00:14:40,680 --> 00:14:45,970
really always as they seem so in this
it's it's ok consider for a moment that

239
00:14:45,970 --> 00:14:50,710
in single pack an authorization neither
the source IP

240
00:14:50,710 --> 00:14:54,070
nor the destination IP are actually
important

241
00:14:54,070 --> 00:14:57,460
so in this case what we have here years

242
00:14:57,460 --> 00:15:00,690
a user that's using SBA here down on
network a

243
00:15:00,690 --> 00:15:04,870
is trying to access a service that on
network be it's protected by

244
00:15:04,870 --> 00:15:08,250
this SBA implementation it's running
here on this for

245
00:15:08,250 --> 00:15:11,270
and thus never has has access to

246
00:15:11,270 --> 00:15:16,460
network traffic along a certain amount
an attacker who is in a really

247
00:15:16,460 --> 00:15:20,460
Clippers privileged position to be able
to also monitor network traffic that

248
00:15:20,460 --> 00:15:21,190
you're sending

249
00:15:21,190 --> 00:15:25,120
may also be able to see the SP packet as
a is sent from network

250
00:15:25,120 --> 00:15:29,360
a um but depending upon where the
attacker sniffer

251
00:15:29,360 --> 00:15:33,720
is located at may not actually do them
any good because you can spoof the idea

252
00:15:33,720 --> 00:15:34,430
just chosen

253
00:15:34,430 --> 00:15:38,110
Google here is the source IP in Yahoo as
a destination those are just

254
00:15:38,110 --> 00:15:42,280
randomly selected the point is that this

255
00:15:42,280 --> 00:15:46,420
sniffer only has to be able to see the
network traffic along the routing

256
00:15:46,420 --> 00:15:50,260
and neither the source IP in the in the
never clear header

257
00:15:50,260 --> 00:15:54,290
or the destination IP are significant
because it is only going to allow

258
00:15:54,290 --> 00:15:58,660
the IP address its been Inc it is it has
been included in the SBA payload

259
00:15:58,660 --> 00:16:00,910
actually gain access to this network be

260
00:16:00,910 --> 00:16:05,660
here the attacker may certainly see BSP
a packet coming from but you

261
00:16:05,660 --> 00:16:09,370
you cut it looks like it comes from
Google in this case and looks like it's

262
00:16:09,370 --> 00:16:10,620
destined for Yahoo

263
00:16:10,620 --> 00:16:14,610
and the attacker has no way to know that
along it's not

264
00:16:14,610 --> 00:16:18,970
the the Yahoo IP that's actually gonna
be running the SBA's different gaining

265
00:16:18,970 --> 00:16:21,010
at in granting access to anything is
this

266
00:16:21,010 --> 00:16:24,520
other system that was even before that
was on the rounding out the

267
00:16:24,520 --> 00:16:27,930
before the attacker had a chance to see
the SP back so

268
00:16:27,930 --> 00:16:31,650
you know with with SBA you can you can
leverage

269
00:16:31,650 --> 00:16:34,660
how networks work and

270
00:16:34,660 --> 00:16:37,730
you know IP spoofing in this case
becomes an advantage

271
00:16:37,730 --> 00:16:40,830
so attacker can all

272
00:16:40,830 --> 00:16:43,880
can't always assume that %uh that

273
00:16:43,880 --> 00:16:50,820
that the IP addresses in headers are
actually significant um

274
00:16:50,820 --> 00:16:56,790
the so I I haven't looked at the
spoofing code in a little while

275
00:16:56,790 --> 00:16:59,930
Compass Group Inc ok was built into the
Perl version and

276
00:16:59,930 --> 00:17:03,280
I'm I'm I'm getting to that for the sea
version but yes

277
00:17:03,280 --> 00:17:06,520
one note on that of course years that on

278
00:17:06,520 --> 00:17:10,310
it does require administrator level
access on your local machine cuz you're

279
00:17:10,310 --> 00:17:11,010
messing with it

280
00:17:11,010 --> 00:17:14,099
with a with a you know the destruction
the car mom

281
00:17:14,100 --> 00:17:18,459
normally bills for you so com but it
certainly if it doesn't now it certainly

282
00:17:18,459 --> 00:17:18,990
will

283
00:17:18,990 --> 00:17:22,349
alan is not not a hard thing to do I
think it does actually but I haven't

284
00:17:22,349 --> 00:17:23,290
tested in a while

285
00:17:23,290 --> 00:17:26,810
I'm have to step together

286
00:17:26,810 --> 00:17:30,480
teacher so com

287
00:17:30,480 --> 00:17:33,510
what other things

288
00:17:33,510 --> 00:17:36,580
are happening in the afternoon of
project to try to

289
00:17:36,580 --> 00:17:39,699
heightened security at its code I'm

290
00:17:39,700 --> 00:17:44,530
well quite quite a lot so we use

291
00:17:44,530 --> 00:17:48,879
valgrind quite extensively I'm excellent
project

292
00:17:48,880 --> 00:17:52,780
essentially a positive verify that there
are no I memory least you've introduced

293
00:17:52,780 --> 00:17:54,690
so all of your mouth likes our

294
00:17:54,690 --> 00:17:58,630
coupled with freezer not leaving any
dangling file handles or

295
00:17:58,630 --> 00:18:01,910
around urs there's all sorts of things
that it taxol have an example is in a

296
00:18:01,910 --> 00:18:02,420
little bit

297
00:18:02,420 --> 00:18:05,810
um static analyzers middle so

298
00:18:05,810 --> 00:18:09,100
I really wish I could get a copy of kobe
ready to

299
00:18:09,100 --> 00:18:12,340
to use against to be not but it's really
expensive

300
00:18:12,340 --> 00:18:17,290
I am

301
00:18:17,290 --> 00:18:20,450
I think it's it so Co varity

302
00:18:20,450 --> 00:18:23,590
nom so

303
00:18:23,590 --> 00:18:27,939
some other the bugs that are fixing the
Linux kernel have been found Michael

304
00:18:27,940 --> 00:18:28,560
varity

305
00:18:28,560 --> 00:18:32,580
up at least like I it's her loss the
loss is a look at that but Lee says

306
00:18:32,580 --> 00:18:35,250
about two years ago I'm not sure they're
still using it but

307
00:18:35,250 --> 00:18:38,880
you know to me that's really says
something that if you've got Tom

308
00:18:38,880 --> 00:18:42,500
if you've got the ability to you handle
karnal code which is

309
00:18:42,500 --> 00:18:46,280
not easy code come from a static
analysis perspective and

310
00:18:46,280 --> 00:18:50,280
find fine programming errors in box
that's that's pretty impressive

311
00:18:50,280 --> 00:18:54,149
but I talk to go very

312
00:18:54,150 --> 00:18:57,419
few weeks ago and I that have enough
watched his so

313
00:18:57,419 --> 00:19:01,230
tiny that they just don't have a user
license category that even

314
00:19:01,230 --> 00:19:04,370
debts things like fifteen thousand
dollars for the minimum

315
00:19:04,370 --> 00:19:07,560
I'll essay about at the top is free self

316
00:19:07,560 --> 00:19:14,560
anybody want to donate that'd be great
but I can't

317
00:19:14,630 --> 00:19:19,150
am there are quite a lot a compile-time
security options they can be enabled

318
00:19:19,150 --> 00:19:22,580
com and at W not checks for these

319
00:19:22,580 --> 00:19:26,320
and make sure that they make sure they
are enabled on your in your local

320
00:19:26,320 --> 00:19:29,960
installation automated testing is a

321
00:19:29,960 --> 00:19:33,300
is a big a big piece so

322
00:19:33,300 --> 00:19:38,418
get so I so in their original pro
version of Adobe not there was a test

323
00:19:38,419 --> 00:19:39,850
suite

324
00:19:39,850 --> 00:19:43,230
and I kinda got really interesting
writing test suite so I

325
00:19:43,230 --> 00:19:46,280
I ported over to the sea version but it
I'm

326
00:19:46,280 --> 00:19:50,050
trying to be a lot more ambitious what
it's checking so

327
00:19:50,050 --> 00:19:53,810
Tom automated function coverage support

328
00:19:53,810 --> 00:19:58,960
comic has been added that uses a mix
extensions the GCC provides

329
00:19:58,960 --> 00:20:03,310
on and also autumn you can also run
everything every test that the tests we

330
00:20:03,310 --> 00:20:05,770
execute can be run underneath our grind

331
00:20:05,770 --> 00:20:10,350
annex at its output collected in parched

332
00:20:10,350 --> 00:20:14,200
um SBA protocol review of a little bit
more on this in a moment

333
00:20:14,200 --> 00:20:18,240
buzzing haven't gotten to that yet
that's it an area that

334
00:20:18,240 --> 00:20:22,070
that I think needs not to be explored
with up to be not too

335
00:20:22,070 --> 00:20:26,720
there was a recent report a bomb there's
a there's a client out there call them

336
00:20:26,720 --> 00:20:27,000
or

337
00:20:27,000 --> 00:20:30,679
his client runs on front when does it
was it was built back

338
00:20:30,679 --> 00:20:34,390
when that the capsule per pro project

339
00:20:34,390 --> 00:20:38,010
and not it exposed because it was an
actual

340
00:20:38,010 --> 00:20:42,370
resolving an IP address properly I am
particular voted exposed

341
00:20:42,370 --> 00:20:46,540
a interesting sort of scenario on the FB
not demand side

342
00:20:46,540 --> 00:20:50,639
and that is where I think you know there
is some room for having fuzzing styles

343
00:20:50,640 --> 00:20:50,910
or

344
00:20:50,910 --> 00:20:54,870
operation against they have to be not
demand to

345
00:20:54,870 --> 00:20:58,360
and if there are things to be exploited
their

346
00:20:58,360 --> 00:21:01,800
no that would be a great way to help
find them

347
00:21:01,800 --> 00:21:06,919
so I should so all major SBA
functionality is test valid I should say

348
00:21:06,919 --> 00:21:12,050
with exceptional the IP spoofing thank
you I'll add a

349
00:21:12,050 --> 00:21:15,860
consolation warnings I so

350
00:21:15,860 --> 00:21:19,630
the Ubuntu security team has %ah a
really interesting web page that

351
00:21:19,630 --> 00:21:22,710
talks about all the security features
that are enabled

352
00:21:22,710 --> 00:21:26,460
on Ubuntu systems these days and it's
really quite complete

353
00:21:26,460 --> 00:21:30,870
complete thanks for everything from Carl
options that are set all the way through

354
00:21:30,870 --> 00:21:32,320
compiler options that you can

355
00:21:32,320 --> 00:21:36,950
pitch I'll cope with I and this
disheartening check script

356
00:21:36,950 --> 00:21:40,660
from I think it sees cook

357
00:21:40,660 --> 00:21:43,870
um helps too to verify it down

358
00:21:43,870 --> 00:21:48,470
dead upon to buy a reason how what the
security aspect built-in

359
00:21:48,470 --> 00:21:52,250
and I bundle that with the FAA project
to and run after the test suite

360
00:21:52,250 --> 00:21:56,390
to verify things I mention the valve
remote already

361
00:21:56,390 --> 00:22:01,900
I and also there's a diff load so
development that are not as changed from

362
00:22:01,900 --> 00:22:06,650
adding new features added new features
to add new features

363
00:22:06,650 --> 00:22:10,000
run it through run into the test suite
and then if the

364
00:22:10,000 --> 00:22:13,380
50 output underneath valgrind issue for
any new

365
00:22:13,380 --> 00:22:17,340
problems to come up with respect to him
memory

366
00:22:17,340 --> 00:22:21,560
so this an example um running that did
not test suite

367
00:22:21,560 --> 00:22:26,340
and you can see that that these
compilation auctions here

368
00:22:26,340 --> 00:22:30,139
everything from position independent
executed balls to yes that protected

369
00:22:30,140 --> 00:22:32,419
binary fortify source functions

370
00:22:32,419 --> 00:22:35,280
these are all things that are verified
by that heartening check script that I

371
00:22:35,280 --> 00:22:36,110
mentioned

372
00:22:36,110 --> 00:22:39,429
and are enabled with this GCC command
line these

373
00:22:39,429 --> 00:22:43,850
command line arguments here um so if
you're if you're writing C coding you

374
00:22:43,850 --> 00:22:45,980
want to take advantage of

375
00:22:45,980 --> 00:22:49,429
security mechanisms that the compiler
provides for you

376
00:22:49,429 --> 00:22:56,429
on thats a great way to to enable them

377
00:22:56,710 --> 00:23:01,130
the test suite a course runs both the
client-side and server-side

378
00:23:01,130 --> 00:23:04,650
in conjunction to make sure that things
are are working properly this is a

379
00:23:04,650 --> 00:23:07,220
sample of some of the output

380
00:23:07,220 --> 00:23:11,710
from won the rind all tests that shows

381
00:23:11,710 --> 00:23:14,750
shows the command execute against IP
tables

382
00:23:14,750 --> 00:23:20,440
out once a valid packages is is
monitored

383
00:23:20,440 --> 00:23:25,330
so no development becomes

384
00:23:25,330 --> 00:23:28,810
run the test returning valgrind make
sure there are no problems

385
00:23:28,810 --> 00:23:32,540
um instantly if yes you do this on a
Linux system with the current at the

386
00:23:32,540 --> 00:23:33,700
Minot code

387
00:23:33,700 --> 00:23:38,060
you will see certain certain things that
come up italian Prime flags

388
00:23:38,060 --> 00:23:42,220
up but they sometimes turn out to be
false positives in a sense like um

389
00:23:42,220 --> 00:23:45,419
there's a there's a/c user ID function
and Linzi

390
00:23:45,419 --> 00:23:49,090
returns a pointer to a statically
allocated up offer

391
00:23:49,090 --> 00:23:52,520
which is not a major gonna free but even
but but nevertheless it doesn't get

392
00:23:52,520 --> 00:23:53,290
freed

393
00:23:53,290 --> 00:23:56,830
you know when the process for the
process exit therefore about Brian

394
00:23:56,830 --> 00:23:59,980
com likes it is error but that's not a
problem with up

395
00:23:59,980 --> 00:24:04,080
that's not a problem with that would be
not that talent seasonable

396
00:24:04,080 --> 00:24:07,470
but still it's nice to see when those
things come up dog runs pretty

397
00:24:07,470 --> 00:24:11,050
pretty amazing project but

398
00:24:11,050 --> 00:24:15,520
and able to grind with the first test
run ads but bad a bunch of code

399
00:24:15,520 --> 00:24:18,590
before committing it you know running
against the test suite

400
00:24:18,590 --> 00:24:22,870
and if the results and if at any point
there's a problem that's been

401
00:24:22,870 --> 00:24:26,450
Flagler dog ran you'll see that come up
with a net yes and then

402
00:24:26,450 --> 00:24:30,780
that can be fixed before committing

403
00:24:30,780 --> 00:24:34,120
so here's an example com

404
00:24:34,120 --> 00:24:37,450
so after being up right now I'm I
mentioned

405
00:24:37,450 --> 00:24:41,470
uses either symmetric cipher right all
specifically

406
00:24:41,470 --> 00:24:46,169
or at any the sizes of ciphers offered
by CNU BG

407
00:24:46,169 --> 00:24:49,610
um this is going to be extended to
include

408
00:24:49,610 --> 00:24:53,450
I a a and H Mac of more on this in a
moment

409
00:24:53,450 --> 00:24:57,770
but in some others crypto works been has
been in this crypto update Bradford at

410
00:24:57,770 --> 00:24:58,550
which have emerged

411
00:24:58,550 --> 00:25:01,639
back to master yet I'm but

412
00:25:01,640 --> 00:25:06,020
in that in that branch you know this is
an example of

413
00:25:06,020 --> 00:25:10,320
number I had that does that work flow we
have run to the test suite

414
00:25:10,320 --> 00:25:14,540
at a bunch of code run it again and do
India here is someone that differs

415
00:25:14,540 --> 00:25:17,750
here's a differs of where I was going to
introduce a problem

416
00:25:17,750 --> 00:25:22,250
into after the top but the test suite
with our primary aim will be to find it

417
00:25:22,250 --> 00:25:24,790
before committing the code

418
00:25:24,790 --> 00:25:29,550
so once that ones that had been flagged
by valgrind

419
00:25:29,550 --> 00:25:33,120
ike was able to add this 6 before commit

420
00:25:33,120 --> 00:25:37,290
and therefore that was never introduced
into into the after being up code base

421
00:25:37,290 --> 00:25:39,340
is a problem

422
00:25:39,340 --> 00:25:44,110
so if you're writing security BS offer
highly recommend as a strategy for

423
00:25:44,110 --> 00:25:49,760
for detecting their profits coming up

424
00:25:49,760 --> 00:25:54,450
so one criticism up that w not currently

425
00:25:54,450 --> 00:25:57,590
is that it does not include H Mac so

426
00:25:57,590 --> 00:26:02,470
H Mac stands for hash now message
authentication code

427
00:26:02,470 --> 00:26:06,169
this is going to be releasing it to beat
up 2.2 which will come up in a couple of

428
00:26:06,169 --> 00:26:07,870
months probably

429
00:26:07,870 --> 00:26:11,550
other reason for doing this I'm years

430
00:26:11,550 --> 00:26:16,250
so there are down at the bottom of the
slide

431
00:26:16,250 --> 00:26:19,800
there are so three very well known
security project today

432
00:26:19,800 --> 00:26:23,250
SSH SSL and IPSec

433
00:26:23,250 --> 00:26:28,630
so day all offer message that message
message authentication

434
00:26:28,630 --> 00:26:32,780
as a part of their implementations that
script that is cryptographically strong

435
00:26:32,780 --> 00:26:37,070
message authentication but they don't
all do in the same way

436
00:26:37,070 --> 00:26:40,750
so you know there's a saying in the
crypto community whenever you think you

437
00:26:40,750 --> 00:26:42,570
need to write a new cryptographic
algorithm

438
00:26:42,570 --> 00:26:46,290
don't because somebody already has done
it in a peer-reviewed way

439
00:26:46,290 --> 00:26:50,460
its it will have less box probably what
you're going to introduce

440
00:26:50,460 --> 00:26:54,250
I think that's a at very important
principal certainly want to leverage

441
00:26:54,250 --> 00:26:56,620
could work that's been done before

442
00:26:56,620 --> 00:27:01,139
but there's no general did trip new to
cut the roll is huge

443
00:27:01,139 --> 00:27:04,520
so you still have as a designer

444
00:27:04,520 --> 00:27:08,310
%uh secure software you still have a
burden to select

445
00:27:08,310 --> 00:27:12,020
com different algorithms and putting
them together even though you're using a

446
00:27:12,020 --> 00:27:14,950
well-known implementation but putting
them together in a way

447
00:27:14,950 --> 00:27:19,090
that does result and certain security
properties being met

448
00:27:19,090 --> 00:27:22,929
so at the bottom there am IP sack

449
00:27:22,929 --> 00:27:26,899
getting used to really really nice
security properties so this

450
00:27:26,899 --> 00:27:30,700
hi integrity at the ciphertext and also

451
00:27:30,700 --> 00:27:34,290
cipher text indistinguishable the
underneath a an adaptive chosen

452
00:27:34,290 --> 00:27:36,470
ciphertext attack

453
00:27:36,470 --> 00:27:39,860
on IP set is provably

454
00:27:39,860 --> 00:27:43,220
provably achieves both of those both
those calls

455
00:27:43,220 --> 00:27:46,590
and has to be top will also senate-house
support for this

456
00:27:46,590 --> 00:27:50,070
age Mac not shot 256 I mention

457
00:27:50,070 --> 00:27:53,530
you know I'm SSH

458
00:27:53,530 --> 00:27:57,440
falls underneath the paradigm up encrypt
and Mac

459
00:27:57,440 --> 00:28:01,149
SSL is Mac then encrypt

460
00:28:01,149 --> 00:28:04,210
and IT sector is encryption Mac

461
00:28:04,210 --> 00:28:07,790
so each wannabes has important
implications with respect to

462
00:28:07,790 --> 00:28:11,190
these hotties cipher text are these
occur together properties that you want

463
00:28:11,190 --> 00:28:12,440
to achieve

464
00:28:12,440 --> 00:28:15,750
if you read Bruce Schneier Shire says
that the

465
00:28:15,750 --> 00:28:19,370
natural order is

466
00:28:19,370 --> 00:28:22,780
I is Mac than then encrypt

467
00:28:22,780 --> 00:28:26,129
um so that that does not

468
00:28:26,130 --> 00:28:29,169
invalidate the provably secure

469
00:28:29,169 --> 00:28:33,130
aspect %uh up the eyepiece at

470
00:28:33,130 --> 00:28:36,260
his point is this a little bit harder to
get

471
00:28:36,260 --> 00:28:39,810
the I be encrypted then Mac are

472
00:28:39,810 --> 00:28:44,030
order I or implementation are properly
done

473
00:28:44,030 --> 00:28:48,050
I'm so for any views are interested yes
be after being up implementation

474
00:28:48,050 --> 00:28:52,158
will include the initialization vector
as a part

475
00:28:52,159 --> 00:28:55,820
other data that is authenticated

476
00:28:55,820 --> 00:28:59,450
now see his criticism for wanted a
limitation other

477
00:28:59,450 --> 00:29:04,220
did you get a partly so

478
00:29:04,220 --> 00:29:07,909
it turned out that SSL as I mentioned
before

479
00:29:07,909 --> 00:29:11,060
uses this Mac encrypt com

480
00:29:11,060 --> 00:29:14,550
paradigm and there was a very very
well-known

481
00:29:14,550 --> 00:29:19,990
attack against that that that was
published I think in 2001

482
00:29:19,990 --> 00:29:23,290
I'm that showed a a essentially was a

483
00:29:23,290 --> 00:29:26,408
exploited a weakness with respect to
help adding

484
00:29:26,409 --> 00:29:29,800
years is added with an SL cryptic
messages

485
00:29:29,800 --> 00:29:34,090
and allowed essentially full description
our farm

486
00:29:34,090 --> 00:29:38,419
as a sock communications it wasn't user
measure a lot of data

487
00:29:38,419 --> 00:29:41,429
am in order to implement attack but it
was still

488
00:29:41,429 --> 00:29:45,110
you know it certainly wasn't a radical
things actual attack against

489
00:29:45,110 --> 00:29:48,560
a now well-known cryptographic protocol

490
00:29:48,560 --> 00:29:53,830
um but there's an additional reason I
adding an H Mac is important

491
00:29:53,830 --> 00:29:58,449
so you know with an H Mac

492
00:29:58,450 --> 00:30:02,010
we're running a very simplistic
relatively simplistic algorithm so

493
00:30:02,010 --> 00:30:05,330
computing shot 256 is a lot more
simplistic

494
00:30:05,330 --> 00:30:08,889
the next running and el-gamal a GPG

495
00:30:08,889 --> 00:30:13,370
I'd the crypt against a again against
they did this come in for example

496
00:30:13,370 --> 00:30:17,960
so no back in the were there earlier
slide image in the GPG

497
00:30:17,960 --> 00:30:21,210
me libraries are optional by

498
00:30:21,210 --> 00:30:25,510
even if speech if you choose to compile
a man use GPG is part you're after being

499
00:30:25,510 --> 00:30:27,110
up communications

500
00:30:27,110 --> 00:30:30,530
with %eh Mac support those
communications

501
00:30:30,530 --> 00:30:33,730
are essentially any the functions in GPG
me

502
00:30:33,730 --> 00:30:38,200
are going to be created by weather not
%eh Mac verifies first and that's a

503
00:30:38,200 --> 00:30:41,419
very simplistic operation compared to
TPG

504
00:30:41,419 --> 00:30:46,130
so out that you know not only to begin
this SP up for that which is not really

505
00:30:46,130 --> 00:30:49,260
me what you're concerned about it in
this case was mostly about you're

506
00:30:49,260 --> 00:30:50,669
producing your taxers

507
00:30:50,669 --> 00:30:55,909
even again I after being up to and at
any age Mac will help help to do that

508
00:30:55,909 --> 00:30:59,550
the link at the bottom has a really nice
summary of why

509
00:30:59,550 --> 00:31:02,649
com a the AppStore no why

510
00:31:02,649 --> 00:31:07,240
encrypt been authenticate is on

511
00:31:07,240 --> 00:31:10,800
is a good paradigm to to adhere to

512
00:31:10,800 --> 00:31:15,169
so I also mention that one thing that
that I like to do for after being up

513
00:31:15,169 --> 00:31:18,429
years tried it to on a PSP refer to call
itself

514
00:31:18,429 --> 00:31:21,470
and one way like to do that years

515
00:31:21,470 --> 00:31:24,570
by taking a look at the when I so cross

516
00:31:24,570 --> 00:31:27,570
packet cipher text entropy

517
00:31:27,570 --> 00:31:31,550
um so what what this does this actually
is

518
00:31:31,550 --> 00:31:35,408
the spot entropy dot PL script

519
00:31:35,409 --> 00:31:39,030
um it take it generates in this case it
out the bottom

520
00:31:39,030 --> 00:31:42,970
sly regenerating a thousand SBA packets
what we're doing is we're

521
00:31:42,970 --> 00:31:47,220
on a bike by basis so what's to like the
20th by

522
00:31:47,220 --> 00:31:51,240
and tell me across all those packets all
thousand those packets

523
00:31:51,240 --> 00:31:54,510
was there any very repetitive
information in

524
00:31:54,510 --> 00:31:58,280
that by so if the 2005 were always let's
say

525
00:31:58,280 --> 00:32:02,059
you know X 0c that's probably a bad
thing

526
00:32:02,059 --> 00:32:05,250
because that means that um that means
that

527
00:32:05,250 --> 00:32:08,669
the evil somewhere along the
implementation of the design

528
00:32:08,669 --> 00:32:11,770
we were able to achieve very good

529
00:32:11,770 --> 00:32:15,190
entropy levels in the encrypted data no

530
00:32:15,190 --> 00:32:18,190
incurred to date is supposed to be %uh

531
00:32:18,190 --> 00:32:21,470
you know %ah supposed to have a lot of
entropy because it's not supposed to be

532
00:32:21,470 --> 00:32:22,720
able to use to be able to do

533
00:32:22,720 --> 00:32:26,520
in for what his what the contents of
that data actually are

534
00:32:26,520 --> 00:32:29,929
if there's a lot of if he has a low
entropy information your pick to do that

535
00:32:29,929 --> 00:32:30,179
sir

536
00:32:30,169 --> 00:32:35,020
that's a really bad thing so

537
00:32:35,020 --> 00:32:38,139
with that script this years

538
00:32:38,140 --> 00:32:43,480
the entry-level for across every single
by 80 to 120

539
00:32:43,480 --> 00:32:47,970
in SBA package that are created by the
FAA our client

540
00:32:47,970 --> 00:32:52,120
notice that there are no peaks no
significant peaks no significant Ballys

541
00:32:52,120 --> 00:32:54,840
that means that on average

542
00:32:54,840 --> 00:32:58,090
know by within secret to payload is

543
00:32:58,090 --> 00:33:05,090
easier to predict than any other by that
is a good property to try to achieve

544
00:33:05,910 --> 00:33:11,450
this is what it looks like for GPG I
first saw this I was kind of shocked

545
00:33:11,450 --> 00:33:15,570
so you know starts off really low here

546
00:33:15,570 --> 00:33:18,649
near zero there's another did here in
another

547
00:33:18,650 --> 00:33:21,830
get here this is a cross is here at
eight hundred by CpG

548
00:33:21,830 --> 00:33:26,130
attack as a little bit bigger because ur
typically dealing with larger key sizes

549
00:33:26,130 --> 00:33:29,780
and you think ripped a single by GBG
you're not gonna get

550
00:33:29,780 --> 00:33:32,970
%ah is a likable excited block cipher
that gives you

551
00:33:32,970 --> 00:33:36,610
same hell a block size where the data
back

552
00:33:36,610 --> 00:33:40,910
so third like that pact to pick a larger
but

553
00:33:40,910 --> 00:33:44,470
I dot college had assumed that the the
entry level which would get

554
00:33:44,470 --> 00:33:48,190
across she was younger two packets will
also be some early hi

555
00:33:48,190 --> 00:33:52,020
as you what you get for for rind of but
it turns out that on

556
00:33:52,020 --> 00:33:56,410
this is not a weakness in GBG am you
turns out that they reside that there's

557
00:33:56,410 --> 00:33:58,860
a specific data format GPG adheres to

558
00:33:58,860 --> 00:34:01,970
reading close includes links at certain
points and

559
00:34:01,970 --> 00:34:05,650
in the data stream where necessary and
that's what you're seeing here

560
00:34:05,650 --> 00:34:08,760
is that these this dropping in true

561
00:34:08,760 --> 00:34:12,929
interview represents the regions in the
SBA packets that are associated with

562
00:34:12,929 --> 00:34:14,760
with these links bytes

563
00:34:14,760 --> 00:34:18,060
and therefore there somewhere because
all the SP packets have a relatively

564
00:34:18,060 --> 00:34:22,750
some early

565
00:34:22,750 --> 00:34:26,129
so if you notice back on

566
00:34:26,129 --> 00:34:29,449
these two slides the average for both of
them

567
00:34:29,449 --> 00:34:32,500
is pretty close to pre/post a

568
00:34:32,500 --> 00:34:36,879
not quite but close now pretty busty

569
00:34:36,879 --> 00:34:40,489
was that same well

570
00:34:40,490 --> 00:34:43,970
if you just the measuring the the actual

571
00:34:43,970 --> 00:34:47,929
the into resource on my Ubuntu system
itself

572
00:34:47,929 --> 00:34:51,100
comes up with with the and program shows
that

573
00:34:51,100 --> 00:34:56,589
you know the entries or scroll is pretty
good 7.99 965 bits per byte

574
00:34:56,589 --> 00:34:59,819
thats pretty girl into bebop but

575
00:34:59,819 --> 00:35:04,140
its I think it's it's worthy noting that
the the implementation of the encryption

576
00:35:04,140 --> 00:35:05,319
algorithms themselves

577
00:35:05,319 --> 00:35:08,370
are also getting very close to that to
that

578
00:35:08,370 --> 00:35:11,390
sorta ideal level not

579
00:35:11,390 --> 00:35:18,390
not quite there but I was a close enough
for a government work

580
00:35:18,440 --> 00:35:22,260
okay let's turn a little bit more of a
fine example

581
00:35:22,260 --> 00:35:26,069
any questions at this point

582
00:35:26,069 --> 00:35:29,570
yes

583
00:35:29,570 --> 00:35:32,100
so the question is how my cat LaDainian
to be for the graphs

584
00:35:32,100 --> 00:35:35,509
so a great question so I actually just

585
00:35:35,510 --> 00:35:39,020
this command line is illustrative lesser
degree here so this

586
00:35:39,020 --> 00:35:43,550
into program is generating this output
what I'm doing years

587
00:35:43,550 --> 00:35:47,780
I'm taking so imagine you've got to SBA
packets

588
00:35:47,780 --> 00:35:51,400
their 120 bytes long approximately I
take

589
00:35:51,400 --> 00:35:54,460
I cake yes I generate the packets at
intake

590
00:35:54,460 --> 00:35:57,960
a slice a beach by so it's

591
00:35:57,960 --> 00:36:01,080
to the first fight each packet I will
take that

592
00:36:01,080 --> 00:36:04,110
the bike from the first back in the
fight value for the second back

593
00:36:04,110 --> 00:36:07,360
the debt to the end program the in
program will will

594
00:36:07,360 --> 00:36:11,510
measure the amount of entropy that those
bites were able to produce

595
00:36:11,510 --> 00:36:14,619
across the that the sampling values so

596
00:36:14,619 --> 00:36:17,740
up you know just generator for that so

597
00:36:17,740 --> 00:36:20,910
thats that's why you see in these graphs

598
00:36:20,910 --> 00:36:25,339
that's why you see

599
00:36:25,340 --> 00:36:29,720
now bites 0 away 300 for the GPG ones

600
00:36:29,720 --> 00:36:32,950
each one of these dots represents the
amount

601
00:36:32,950 --> 00:36:36,190
enter be at attacked by position across
all thousand

602
00:36:36,190 --> 00:36:40,560
packets so so again if if there were a
problem

603
00:36:40,560 --> 00:36:44,470
or something that should be looked at
then you would expect that the injured

604
00:36:44,470 --> 00:36:46,390
be would be lower and I would show up as
a

605
00:36:46,390 --> 00:36:50,560
dip as you see here the CPG graph across
those thousand packets

606
00:36:50,560 --> 00:36:54,470
to instantly i mean that that technique
can probably a be applied to

607
00:36:54,470 --> 00:36:57,530
to to to other protocols to I am

608
00:36:57,530 --> 00:37:00,530
I'm not sure that's been done before and
others I think there's a

609
00:37:00,530 --> 00:37:04,800
there's a at technical call back lever
diversions and this might be variations

610
00:37:04,800 --> 00:37:11,800
but it that sounds cochlear

611
00:37:15,260 --> 00:37:22,260
okay so sing back in other Asian in in
the Amazon Cloud on

612
00:37:22,650 --> 00:37:26,599
Amazon Web Services really interesting I
think up yes

613
00:37:26,599 --> 00:37:31,010
essentially got paper they provide you
massive computing infrastructure for

614
00:37:31,010 --> 00:37:32,650
cheap on-demand costs

615
00:37:32,650 --> 00:37:37,579
I coupled notable usages are on the
Amazon Cloud

616
00:37:37,579 --> 00:37:42,710
so at when I first read this I thought
it was an April Fools article

617
00:37:42,710 --> 00:37:46,589
but I it wasn't published on April 1st
is published in December

618
00:37:46,589 --> 00:37:50,720
some assuming this is true I'll in los
pobres to Wired

619
00:37:50,720 --> 00:37:56,660
spree reputable source but the 42nd fast
this sick

620
00:37:56,660 --> 00:37:59,710
supercomputer in the world was
constructed on

621
00:37:59,710 --> 00:38:04,990
Amazon's cluster according to this
article that it to me

622
00:38:04,990 --> 00:38:08,079
is incredibly impressive that

623
00:38:08,079 --> 00:38:11,480
just shows that the amount of computing
resources that you have available

624
00:38:11,480 --> 00:38:14,619
at your fingertips is stack

625
00:38:14,619 --> 00:38:19,290
so if you have a really really
intractable problems ever-present lot of

626
00:38:19,290 --> 00:38:20,540
computing resources

627
00:38:20,540 --> 00:38:24,308
you know Amazon Cloud would probably be
a good place to look

628
00:38:24,309 --> 00:38:28,089
to get that cuz if you had to try to
build the world's

629
00:38:28,089 --> 00:38:31,869
forty second fastest supercomputer
Howard how would you do it well

630
00:38:31,869 --> 00:38:36,130
I don't know let's just say that
requires L thousands of CPU's

631
00:38:36,130 --> 00:38:39,220
you've got to have bottomed you know
data center spacing

632
00:38:39,220 --> 00:38:42,280
got lotsa power and cooling no yet we're
about

633
00:38:42,280 --> 00:38:45,799
any of that you just say Asad Amazon I
want the world's

634
00:38:45,799 --> 00:38:49,869
forty second fastest supercomputer right
now and he's actually happened that's

635
00:38:49,869 --> 00:38:53,329
to me is really amazing I don't work
grams of

636
00:38:53,329 --> 00:38:59,450
um so I think another thing that was
interesting is

637
00:38:59,450 --> 00:39:02,710
X at this conference in 2008 um

638
00:39:02,710 --> 00:39:07,400
if anybody remembers the the open at the
dead in open SSL key to bottle

639
00:39:07,400 --> 00:39:10,400
there was a there was a one-line change
made to

640
00:39:10,400 --> 00:39:16,109
how the be daddy in packaged version of
the open SSL library acquired

641
00:39:16,109 --> 00:39:19,460
on data from its entropy source

642
00:39:19,460 --> 00:39:23,180
it the change had the effect have
drastically reducing

643
00:39:23,180 --> 00:39:27,020
be about an interview that was used for
cryptographic key information

644
00:39:27,020 --> 00:39:31,549
and so what what the researchers did

645
00:39:31,549 --> 00:39:35,390
and this is a link to their presentation
is they they used the

646
00:39:35,390 --> 00:39:38,960
the the ec2 dams on easy to our cluster

647
00:39:38,960 --> 00:39:42,339
the go-ahead casually all possible

648
00:39:42,339 --> 00:39:46,200
he had a tad bit to get the basal all
the possible keys

649
00:39:46,200 --> 00:39:50,710
that could have been resolved from this
this lower entropy calculation from

650
00:39:50,710 --> 00:39:54,319
on daddy in systems and it cost them it
so the Jerry this

651
00:39:54,319 --> 00:39:58,099
just pretty massive database Picasa my
total like 8 box

652
00:39:58,099 --> 00:40:01,190
as just to me is really impressive so

653
00:40:01,190 --> 00:40:05,130
I think Amazon is just is interesting
computing resource so

654
00:40:05,130 --> 00:40:08,559
I wanted to try see it had to be not
could work in their environment

655
00:40:08,559 --> 00:40:12,049
so in this in this context we

656
00:40:12,049 --> 00:40:15,790
we deploy SBA on their ec2

657
00:40:15,790 --> 00:40:19,369
service along with their virtual a
private cloud

658
00:40:19,369 --> 00:40:23,480
BBC networks so

659
00:40:23,480 --> 00:40:26,640
%uh essentially you have high

660
00:40:26,640 --> 00:40:30,040
you have this this Amazon BBC virtual
private cloud

661
00:40:30,040 --> 00:40:33,690
where you provisions as many citizens as
you need to get whatever job done you

662
00:40:33,690 --> 00:40:38,369
want and you can access them over the
Internet through Amazon calls its

663
00:40:38,369 --> 00:40:40,780
elastic IP servicing you so she

664
00:40:40,780 --> 00:40:45,030
elastic I keys with I'm with internal
systems in this

665
00:40:45,030 --> 00:40:49,910
in this virtual minus BBC out clout so

666
00:40:49,910 --> 00:40:56,078
this to me was kinda for the perfect SBA
use cases

667
00:40:56,079 --> 00:40:59,660
earlier this year there was a a serious

668
00:40:59,660 --> 00:41:03,589
formally announced in Microsoft RTP hot
service

669
00:41:03,589 --> 00:41:09,279
and I this was a sign seaview 2012 user
to

670
00:41:09,280 --> 00:41:15,000
I sexually thanks essentially I for
remote code execution potential

671
00:41:15,000 --> 00:41:18,619
although currently um as far as I know a
mess but has a

672
00:41:18,619 --> 00:41:23,799
a the ability to executed dos against
RTP that is horrible but not get you

673
00:41:23,799 --> 00:41:25,569
actual for remote code execution

674
00:41:25,569 --> 00:41:28,839
but it certainly I'm sure exists so

675
00:41:28,839 --> 00:41:32,869
I wanted to see if there's a way to
protect RTP services behind

676
00:41:32,869 --> 00:41:36,359
I am behind the and s SBA

677
00:41:36,359 --> 00:41:39,490
demon members couple problems with that
first of all

678
00:41:39,490 --> 00:41:42,529
amazon has their own filtering devices
which are

679
00:41:42,529 --> 00:41:46,500
going to run yet to be not team and
secondly at the vet not does not support

680
00:41:46,500 --> 00:41:50,940
a Windows Firewall

681
00:41:50,940 --> 00:41:55,040
so there is a solution to that and
essentially

682
00:41:55,040 --> 00:41:59,490
on what what what you can do is you can
use

683
00:41:59,490 --> 00:42:02,510
and internal Ubuntu system as a

684
00:42:02,510 --> 00:42:06,510
chop host using that that capabilities
in FW naw

685
00:42:06,510 --> 00:42:09,970
to send connections from external system

686
00:42:09,970 --> 00:42:13,170
through that Ubuntu system to reach
internal

687
00:42:13,170 --> 00:42:16,720
other internal Windows machines or any
other machine that you like

688
00:42:16,720 --> 00:42:20,059
um and also changes than normal

689
00:42:20,059 --> 00:42:24,430
Amazon usage model for having
associating last guy pees with internal

690
00:42:24,430 --> 00:42:25,328
system you'll need

691
00:42:25,329 --> 00:42:28,970
i single elastic ipso she with the
internal

692
00:42:28,970 --> 00:42:33,220
a banking system and it functions
essentially as you internal gateway

693
00:42:33,220 --> 00:42:40,220
to augment the the that the net model
but Amazon provides

694
00:42:40,290 --> 00:42:43,750
so this probably not legible but this is
a screenshot what

695
00:42:43,750 --> 00:42:48,349
what essentially um you can do is use
actually have a a very permissive

696
00:42:48,349 --> 00:42:51,480
at BBC filtering policy that allows

697
00:42:51,480 --> 00:42:54,720
um allows I all sorts a connection

698
00:42:54,720 --> 00:42:59,700
SSH RTP whatever internet Ubuntu system
but remember that SBS owns it you're

699
00:42:59,700 --> 00:43:01,720
running in the fall dropped packet
filter

700
00:43:01,720 --> 00:43:04,990
so you're essentially telling Amazon you

701
00:43:04,990 --> 00:43:08,329
want to allow connections into to that
internal system

702
00:43:08,329 --> 00:43:11,970
%ah by you're also running like the
tables on that device to

703
00:43:11,970 --> 00:43:15,180
so there you're still you're still
filtering

704
00:43:15,180 --> 00:43:19,180
that traffic it's not just that you know
i cant integrated to be not in do this

705
00:43:19,180 --> 00:43:22,390
filtering a device

706
00:43:22,390 --> 00:43:25,420
so what you do from your home network
but say is you

707
00:43:25,420 --> 00:43:30,490
you generators SBA packet which is you
know according to Amazon's filter

708
00:43:30,490 --> 00:43:33,660
years allow through it

709
00:43:33,660 --> 00:43:39,040
hits the Ubuntu system and then the FAA
not demand running on that system

710
00:43:39,040 --> 00:43:42,460
allows a and RTT connection which lost

711
00:43:42,460 --> 00:43:46,190
initiated from the home network to be
netted through this in turn a Windows

712
00:43:46,190 --> 00:43:48,430
machine

713
00:43:48,430 --> 00:43:52,160
so this an example of the FAA outcome
and line that allows that to work

714
00:43:52,160 --> 00:43:57,730
just a couple things to note here

715
00:43:57,730 --> 00:44:03,940
this I P is the IP of the Windows
machine running RTP

716
00:44:03,940 --> 00:44:08,069
RTT runs on this port thirty 30 3389

717
00:44:08,069 --> 00:44:12,790
and telling that I'm telling after being
off to send in SB a packet over

718
00:44:12,790 --> 00:44:16,609
453 people like to just completely allow

719
00:44:16,609 --> 00:44:20,369
source and destination port 53 through
because they know that they don't want

720
00:44:20,369 --> 00:44:22,480
to mess with the an ass

721
00:44:22,480 --> 00:44:28,170
um and then what we're actually gonna
allow is now what looks to be a web

722
00:44:28,170 --> 00:44:29,260
connection

723
00:44:29,260 --> 00:44:32,299
hot through and

724
00:44:32,299 --> 00:44:35,890
once this SB impact has been sent and
and yet to be not

725
00:44:35,890 --> 00:44:40,308
monitors are then you can make and our
guest on this is from Ubuntu

726
00:44:40,309 --> 00:44:45,359
comin RDP connection to this is the
external elastic IP

727
00:44:45,359 --> 00:44:50,119
there was a socially with Ubuntu system
not make an RDP connection over Port 80

728
00:44:50,119 --> 00:44:50,849
which is now being

729
00:44:50,849 --> 00:44:57,420
nada through internally to port 3389 on
the Windows system

730
00:44:57,420 --> 00:45:01,720
up I'm gonna rush this little that com
there's a couple things to be configured

731
00:45:01,720 --> 00:45:02,720
on the A to B town of

732
00:45:02,720 --> 00:45:08,069
configuration but essentially this is a
screenshot shows it working

733
00:45:08,069 --> 00:45:12,079
sergeant demo this but Dom this is the
FAA not command

734
00:45:12,079 --> 00:45:15,349
online the client command window here
where an excuse in the

735
00:45:15,349 --> 00:45:18,520
the the client I provide

736
00:45:18,520 --> 00:45:22,440
the corruption %ah key SBA packet is
sent

737
00:45:22,440 --> 00:45:25,520
eisin get that launched the

738
00:45:25,520 --> 00:45:29,180
the artist Todd application for my
Ubuntu instance and now I have an RDP

739
00:45:29,180 --> 00:45:30,140
connection to that

740
00:45:30,140 --> 00:45:33,540
internal when this mission not

741
00:45:33,540 --> 00:45:40,540
through thanks through that will Singh
elastic IP instance on Amazon's network

742
00:45:41,029 --> 00:45:47,810
any question so far

743
00:45:47,810 --> 00:45:54,810
yes

744
00:45:55,910 --> 00:45:56,299
the

745
00:45:56,299 --> 00:46:02,490
so he's asking um Indian cricket payload
ESP a packet is it it in my telling it

746
00:46:02,490 --> 00:46:06,460
what service I want to allow the answer
to that is yes and I'm not actually

747
00:46:06,460 --> 00:46:10,010
sending it come and in the sense that
I'm not telling at the specific IP

748
00:46:10,010 --> 00:46:13,299
tables commander the specific ID FW
commands to execute

749
00:46:13,299 --> 00:46:17,140
he has a representation for what network
access

750
00:46:17,140 --> 00:46:20,660
I should be allowed to what IP address
should be allowed what

751
00:46:20,660 --> 00:46:24,390
forgot protocol and you can add multiple
these things up

752
00:46:24,390 --> 00:46:28,049
and in the S&P not even reconfigures the
firewall according to its understanding

753
00:46:28,049 --> 00:46:28,910
of the underlying

754
00:46:28,910 --> 00:46:32,129
filtering device up to allow that access

755
00:46:32,130 --> 00:46:39,130
to on

756
00:46:43,970 --> 00:46:47,049
I Mozilla plugin for generating SBA
packets

757
00:46:47,049 --> 00:46:52,038
I that's a great question I no one has
done a metal plug as far as I know

758
00:46:52,039 --> 00:46:53,599
they'll be a great thing to add

759
00:46:53,599 --> 00:46:58,009
someone has written a web proxy that
interfaces

760
00:46:58,009 --> 00:47:03,369
so city is a PHP SSL to encrypt it web
proxy so if you don't have

761
00:47:03,369 --> 00:47:07,970
if you don't have the FW not command
binary on your local system

762
00:47:07,970 --> 00:47:12,119
you can use a web browser this proxy at
generate an SBA back

763
00:47:12,119 --> 00:47:16,049
for you to whatever external system in a
course remember that the actual IP

764
00:47:16,049 --> 00:47:16,720
addresses are all

765
00:47:16,720 --> 00:47:21,029
in the I in the SP attack itself to you
tell what I P you want to allow

766
00:47:21,029 --> 00:47:28,029
and in the axle be will be allowed s up
like be great I mean at Mozilla

767
00:47:28,710 --> 00:47:32,529
apply a great up so I'm running out of
time here

768
00:47:32,529 --> 00:47:36,349
so maybe one more minute I the

769
00:47:36,349 --> 00:47:41,440
it hereafter a few things if you if you
have iPhone developer experience and you

770
00:47:41,440 --> 00:47:42,470
would like to get involved

771
00:47:42,470 --> 00:47:46,440
mean to be not project please let me
know are looking for a maintainer that

772
00:47:46,440 --> 00:47:50,829
um there are lots of things that you can
do

773
00:47:50,829 --> 00:47:55,619
I so 22 %uh to make yet to be not
protocol

774
00:47:55,619 --> 00:47:59,500
perhaps more efficient packed binary
protocol I'll be nice

775
00:47:59,500 --> 00:48:04,009
and also playing tricks with various
applications

776
00:48:04,009 --> 00:48:09,549
there's and single pack an authorization
kinda implies that you can't use TCP

777
00:48:09,549 --> 00:48:13,490
in a sense right you don't want to
require that you have to run a server in

778
00:48:13,490 --> 00:48:16,259
order to gain that's get this kind of
information across the wire

779
00:48:16,259 --> 00:48:20,069
having said that teen ass and

780
00:48:20,069 --> 00:48:23,930
and others you know you can still see I
think interesting

781
00:48:23,930 --> 00:48:29,190
applications up the principal art a
lightweight cryptographic player

782
00:48:29,190 --> 00:48:33,789
heartening other services that may have
a larger attack surface and that's the

783
00:48:33,789 --> 00:48:34,619
general point

784
00:48:34,619 --> 00:48:38,230
up both for talking an SBA so

785
00:48:38,230 --> 00:48:45,230
with that am thank you very much any
other question and I

786
00:48:51,500 --> 00:48:55,799
is an ex Peter here outbreak 0

787
00:48:55,799 --> 00:48:58,940
yes there you go

788
00:48:58,940 --> 00:49:02,049
so that's the please email me if you
have any

789
00:49:02,049 --> 00:49:02,529
questions

