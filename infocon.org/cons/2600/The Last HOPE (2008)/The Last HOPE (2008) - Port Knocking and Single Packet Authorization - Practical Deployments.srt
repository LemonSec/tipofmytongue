1
00:00:01,800 --> 00:00:03,219
yes

2
00:00:03,220 --> 00:00:09,490
enough

3
00:00:09,490 --> 00:00:10,459
good

4
00:00:10,459 --> 00:00:17,459
you

5
00:00:18,300 --> 00:00:19,619
its

6
00:00:19,619 --> 00:00:23,230
of

7
00:00:23,230 --> 00:00:30,230
service you know

8
00:00:32,000 --> 00:00:36,380
here it's not appropriate I

9
00:00:36,380 --> 00:00:37,370
for you

10
00:00:37,370 --> 00:00:44,370
I Mike credibly so

11
00:00:45,000 --> 00:00:52,000
friend his back

12
00:00:52,240 --> 00:00:55,250
for

13
00:00:55,250 --> 00:01:00,760
huge

14
00:01:00,760 --> 00:01:03,420
ago

15
00:01:03,420 --> 00:01:07,250
me

16
00:01:07,250 --> 00:01:09,540
ever

17
00:01:09,540 --> 00:01:16,540
I support

18
00:01:19,760 --> 00:01:26,760
0

19
00:01:31,960 --> 00:01:38,220
slow

20
00:01:38,220 --> 00:01:41,500
south

21
00:01:41,500 --> 00:01:42,380
services

22
00:01:42,380 --> 00:01:44,520
I think it was like that yes

23
00:01:44,520 --> 00:01:46,380
here

24
00:01:46,380 --> 00:01:53,289
I his

25
00:01:53,290 --> 00:01:56,299
first

26
00:01:56,299 --> 00:02:03,299
I

27
00:02:11,009 --> 00:02:18,010
yes his

28
00:02:20,270 --> 00:02:23,950
so it's so lawyer you

29
00:02:23,950 --> 00:02:27,580
its you Kors worse on

30
00:02:27,580 --> 00:02:33,829
today for yet

31
00:02:33,829 --> 00:02:37,650
its

32
00:02:37,650 --> 00:02:38,760
yeah

33
00:02:38,760 --> 00:02:42,629
pain thank you us yes

34
00:02:42,629 --> 00:02:48,480
route

35
00:02:48,480 --> 00:02:50,920
you

36
00:02:50,920 --> 00:02:55,930
so why is

37
00:02:55,930 --> 00:02:57,849
there's not believe very much

38
00:02:57,849 --> 00:02:59,899
its yen's you

39
00:02:59,900 --> 00:03:05,090
now Jesus useful

40
00:03:05,090 --> 00:03:07,790
frankness

41
00:03:07,790 --> 00:03:11,120
house over

42
00:03:11,120 --> 00:03:15,720
yes use my you on

43
00:03:15,720 --> 00:03:19,220
results security you see any

44
00:03:19,220 --> 00:03:23,060
he is of size use the

45
00:03:23,060 --> 00:03:26,060
he his STA

46
00:03:26,060 --> 00:03:30,260
over and characteristics

47
00:03:30,260 --> 00:03:36,090
if there is one

48
00:03:36,090 --> 00:03:39,320
the over for hoover's

49
00:03:39,320 --> 00:03:39,900
yes

50
00:03:39,900 --> 00:03:43,250
yes me it yeah less

51
00:03:43,250 --> 00:03:46,409
last this and because

52
00:03:46,409 --> 00:03:49,200
series three

53
00:03:49,200 --> 00:03:49,629
you

54
00:03:49,629 --> 00:03:53,890
graceful this life

55
00:03:53,890 --> 00:04:00,330
you know where you know is you really is

56
00:04:00,330 --> 00:04:03,000
also people's me free

57
00:04:03,000 --> 00:04:06,660
me or he's

58
00:04:06,660 --> 00:04:10,049
were and you

59
00:04:10,050 --> 00:04:13,130
also lawler his re

60
00:04:13,130 --> 00:04:16,750
users is is here

61
00:04:16,750 --> 00:04:20,180
great funny both all really

62
00:04:20,180 --> 00:04:23,230
respected forward use for

63
00:04:23,230 --> 00:04:27,510
STA and in this time police one

64
00:04:27,510 --> 00:04:32,030
points is website now in

65
00:04:32,030 --> 00:04:35,630
free is this fleece is possible rice
walls

66
00:04:35,630 --> 00:04:38,770
to on me the text

67
00:04:38,770 --> 00:04:42,010
its good re

68
00:04:42,010 --> 00:04:49,010
see one safe please was

69
00:04:51,490 --> 00:04:55,590
word plans areas for SC he

70
00:04:55,590 --> 00:04:58,930
and here

71
00:04:58,930 --> 00:05:02,240
please me

72
00:05:02,240 --> 00:05:05,800
so

73
00:05:05,800 --> 00:05:09,890
lead

74
00:05:09,890 --> 00:05:15,460
word your course for me

75
00:05:15,460 --> 00:05:18,530
me in prop

76
00:05:18,530 --> 00:05:22,610
hairs and Arsenal

77
00:05:22,610 --> 00:05:26,000
its a racism

78
00:05:26,000 --> 00:05:30,520
its the /url but you can also

79
00:05:30,520 --> 00:05:35,049
servers wise

80
00:05:35,050 --> 00:05:39,130
wire sir

81
00:05:39,130 --> 00:05:42,320
whose since word traditional sir

82
00:05:42,320 --> 00:05:46,590
would he said

83
00:05:46,590 --> 00:05:50,030
passes he is you combine

84
00:05:50,030 --> 00:05:53,050
have with head

85
00:05:53,050 --> 00:05:57,860
I'll all is

86
00:05:57,860 --> 00:06:01,350
see the yes for

87
00:06:01,350 --> 00:06:04,840
rock over the only

88
00:06:04,840 --> 00:06:07,870
he who St

89
00:06:07,870 --> 00:06:12,260
access is this is the third

90
00:06:12,260 --> 00:06:15,510
are those use points

91
00:06:15,510 --> 00:06:19,480
up those that can produce a

92
00:06:19,480 --> 00:06:22,650
if Alan port not for SPAC funds I should

93
00:06:22,650 --> 00:06:26,430
produc sequins or SBA packet SBA by
contrast transmits authentication

94
00:06:26,430 --> 00:06:27,530
information packet

95
00:06:27,530 --> 00:06:31,580
pillows and adjust the packet headers
and other

96
00:06:31,580 --> 00:06:34,659
the goal here forces to make in Matt
ineffective

97
00:06:34,660 --> 00:06:37,730
at detecting a service that's protected
in this way I think the security

98
00:06:37,730 --> 00:06:38,770
community

99
00:06:38,770 --> 00:06:42,900
probably would agree with me that
protecting a service with a kernel level

100
00:06:42,900 --> 00:06:46,540
filtering mechanisms such as IP tables
in the Linux kernel right the FW in the

101
00:06:46,540 --> 00:06:47,620
BST crawls

102
00:06:47,620 --> 00:06:52,290
rpf it sir I in OpenBSD as probably good
way to protect against

103
00:06:52,290 --> 00:06:55,290
any user space phone abilities that may
exist in

104
00:06:55,290 --> 00:06:59,910
users based application like sht that's
not to say the files themselves are

105
00:06:59,910 --> 00:07:03,450
perfect saw for this certainly not there
had been von abilities from time to time

106
00:07:03,450 --> 00:07:07,280
but at least we can minimize

107
00:07:07,280 --> 00:07:11,320
the on abilities that could potentially
be exploited by an arbitrary sources

108
00:07:11,320 --> 00:07:13,230
just happened happily scanning for

109
00:07:13,230 --> 00:07:18,050
SH that diets is a advertise to the
world via TCP socket

110
00:07:18,050 --> 00:07:21,760
so some people rely on

111
00:07:21,760 --> 00:07:25,400
saw for such as deny hosting fail to ban
to look for

112
00:07:25,400 --> 00:07:28,820
password guessing attempts and the SSH
logs a

113
00:07:28,820 --> 00:07:32,190
be a lot like via syslog that's a good
strategy

114
00:07:32,190 --> 00:07:35,510
and at least for trying to to convince
you that that

115
00:07:35,510 --> 00:07:39,230
having a good pass for is a good idea
but many attacks

116
00:07:39,230 --> 00:07:43,890
don't rely on x bird forcing a password
me the sales key energy overflow

117
00:07:43,890 --> 00:07:44,630
exploits

118
00:07:44,630 --> 00:07:48,620
the order exploits gets open SSH for
example are net

119
00:07:48,620 --> 00:07:51,870
there's no password in sight and yet
you're still able to compromise

120
00:07:51,870 --> 00:07:56,000
sshd the recent Debbie open SSL for
natalie was also

121
00:07:56,000 --> 00:07:59,810
a good example where password again
nowhere in sight you have

122
00:07:59,810 --> 00:08:04,100
reduced entropy in the generation of
keys not affected SSH as well

123
00:08:04,100 --> 00:08:08,030
so and there's also a the second will
appoint there's kind of an interesting

124
00:08:08,030 --> 00:08:10,020
article post post on the register

125
00:08:10,020 --> 00:08:13,169
that talked about a new strategy

126
00:08:13,170 --> 00:08:18,770
down for where a coordinated attack
against brute forcing passwords an SSH

127
00:08:18,770 --> 00:08:23,560
demands would be done via on distributed
systems that have all been compromised

128
00:08:23,560 --> 00:08:24,060
by

129
00:08:24,060 --> 00:08:28,050
and an attack or said attackers only 3 a
tense

130
00:08:28,050 --> 00:08:32,080
would come from individual system in
order to try to brute-force apart

131
00:08:32,080 --> 00:08:33,950
password and 138 since been made

132
00:08:33,950 --> 00:08:37,470
the next attempt to come from a
different IP address its order the same

133
00:08:37,470 --> 00:08:40,780
classic technique for you try to slip in
it beneath an IDS

134
00:08:40,780 --> 00:08:45,120
port scan special by producing number
forty scanner scanning over a longer

135
00:08:45,120 --> 00:08:46,010
period of time

136
00:08:46,010 --> 00:08:50,290
like anything so they now apply this is
well it s SSH password guessing a tense

137
00:08:50,290 --> 00:08:54,099
so that reduces the effectiveness of
trying to threshold

138
00:08:54,100 --> 00:09:00,100
does Phil login attempts so personal and
a lot more concerned about

139
00:09:00,100 --> 00:09:05,320
on much more damaging explaining n sht
and so I don't allow anyone to connect

140
00:09:05,320 --> 00:09:06,270
the SSH

141
00:09:06,270 --> 00:09:10,090
until they've generate a valid SBA
packet

142
00:09:10,090 --> 00:09:13,110
so is a useful

143
00:09:13,110 --> 00:09:16,500
I would see yes

144
00:09:16,500 --> 00:09:19,370
and we'll talk about some trends and
second there are many competing

145
00:09:19,370 --> 00:09:21,960
implementations if you look at for
knocking down or

146
00:09:21,960 --> 00:09:27,340
there's about 30 of them a total as
about 5 implementations that

147
00:09:27,340 --> 00:09:31,690
implement SP a style authentication
there's about any another 25 port

148
00:09:31,690 --> 00:09:32,960
knocking implementations

149
00:09:32,960 --> 00:09:36,810
those five SBA implementations do a
little bit differently from project to

150
00:09:36,810 --> 00:09:40,370
project the tumbler project uses a house
pillared for example whereas

151
00:09:40,370 --> 00:09:44,100
there's a there's a a net filter module
that

152
00:09:44,100 --> 00:09:47,460
that those sp-a specifically with air
particularly within the Linux kernel

153
00:09:47,460 --> 00:09:49,810
itself so there's no use when com-
ponent

154
00:09:49,810 --> 00:09:53,740
are running on the server side and I'm

155
00:09:53,740 --> 00:09:57,080
so list

156
00:09:57,080 --> 00:10:00,440
talk about some trans you know it's
kinda hard to quantify

157
00:10:00,440 --> 00:10:05,390
who is running for knocking or SBA I
can't go download in the App and

158
00:10:05,390 --> 00:10:09,110
scan for your port knocking instances me
is designed specifically to make that

159
00:10:09,110 --> 00:10:10,660
impossible

160
00:10:10,660 --> 00:10:15,990
so what can rely on why hasn't download
statistics from my webserver Seifert and

161
00:10:15,990 --> 00:10:19,730
outward

162
00:10:19,730 --> 00:10:24,980
in phnom 2006 got about nearly 3,000
hours 2007 that

163
00:10:24,980 --> 00:10:28,660
more than doubled and so far this year

164
00:10:28,660 --> 00:10:32,630
its nearly 10,000 in this year's only
about half over so I think the train is

165
00:10:32,630 --> 00:10:33,689
up

166
00:10:33,690 --> 00:10:37,170
and we can also look at for true trends
from search engines

167
00:10:37,170 --> 00:10:41,209
so last month I really sick pay to a
call to do trude

168
00:10:41,210 --> 00:10:45,650
you can of course Thomas download as the
link at the end of the slide

169
00:10:45,650 --> 00:10:49,360
which what does it once per day it's in
the senate search terms

170
00:10:49,360 --> 00:10:52,440
into Google and takes the number

171
00:10:52,440 --> 00:10:57,190
above hits in Google and in trans those
numbers over time

172
00:10:57,190 --> 00:11:00,270
and so generates agnew plot graphs

173
00:11:00,270 --> 00:11:04,540
have a that search the search results
data

174
00:11:04,540 --> 00:11:09,510
so I've I wrote the first version if you
truth about a year ago

175
00:11:09,510 --> 00:11:12,860
I didn't release it because I wanted to
collect some data and so

176
00:11:12,860 --> 00:11:16,530
and if i graph the term single pack an
authentication

177
00:11:16,530 --> 00:11:20,000
now authorization and authentication in
this case

178
00:11:20,000 --> 00:11:24,220
on starting from July of last year going
through July

179
00:11:24,220 --> 00:11:27,230
this year its gone from about 200

180
00:11:27,230 --> 00:11:34,110
I'm search result in Google up to over
1600

181
00:11:34,110 --> 00:11:38,360
single back authorization which is a
term that FW not use is specifically

182
00:11:38,360 --> 00:11:43,180
after being up does a of course both
authentication and authorization

183
00:11:43,180 --> 00:11:46,500
which are not the same thing

184
00:11:46,500 --> 00:11:49,860
and the trend back in July 07

185
00:11:49,860 --> 00:11:54,960
I'm maybe a thousand card even see the
red on aircraft but then

186
00:11:54,960 --> 00:11:58,840
you get this stranger loss elation in
fact coming from Google that's probably

187
00:11:58,840 --> 00:12:02,200
more are a faggot how Google built its
index verses

188
00:12:02,200 --> 00:12:06,390
you know say here in in late June a
spike up sixty thousand web sites

189
00:12:06,390 --> 00:12:10,080
referencing go back and authorization
roth and then on the next within the

190
00:12:10,080 --> 00:12:11,340
next two days

191
00:12:11,340 --> 00:12:15,220
all those you noted 50,000 this website
and a win away in Google's index right

192
00:12:15,220 --> 00:12:16,990
so

193
00:12:16,990 --> 00:12:20,490
kinda interesting how Google builders
index I wish I had had

194
00:12:20,490 --> 00:12:25,050
gertrude I when I first as really
stepped up you not but I didn't tell

195
00:12:25,050 --> 00:12:26,140
year ago

196
00:12:26,140 --> 00:12:30,580
but here's the graph what the S&P not
term looks like a course if you're

197
00:12:30,580 --> 00:12:33,810
involved in any open source projects are
thinking of starting one

198
00:12:33,810 --> 00:12:37,340
I it's good to take to you a unique
strains he can do this kind of analysis

199
00:12:37,340 --> 00:12:39,430
FEA search engines it's very

200
00:12:39,430 --> 00:12:43,280
you after being off is pretty unique so
it's easy to get a sense of what

201
00:12:43,280 --> 00:12:46,810
search engines really see it as
incentive having lotsa

202
00:12:46,810 --> 00:12:50,160
other overlapping data

203
00:12:50,160 --> 00:12:53,350
so I'd see SBA uses probably up

204
00:12:53,350 --> 00:12:57,560
but what long are widespread deployment
probably has a long way to go to

205
00:12:57,560 --> 00:13:01,100
on if in if you have some good
statistics re:

206
00:13:01,100 --> 00:13:07,170
that that you would like to discuss your
share with me every really interested

207
00:13:07,170 --> 00:13:12,220
on support within limits distributions
are other platforms

208
00:13:12,220 --> 00:13:15,370
is I think going to be a driver for this
technology

209
00:13:15,370 --> 00:13:19,600
ISA we now supports IP tables and IPFW
like you mentioned there's also a

210
00:13:19,600 --> 00:13:21,140
Windows client

211
00:13:21,140 --> 00:13:24,750
I and there are our plans integrated
with on things like

212
00:13:24,750 --> 00:13:28,580
the open the BRT Linux distribution by
rewriting after being up and see

213
00:13:28,580 --> 00:13:33,170
much more lightweight is currently in
Pearl

214
00:13:33,170 --> 00:13:36,910
on and there's an I think it really into
the open question which is

215
00:13:36,910 --> 00:13:41,650
you know to what extent are these
technologies used by the black community

216
00:13:41,650 --> 00:13:45,730
at Dubai its use them there's been some
anecdotal evidence that seem to indicate

217
00:13:45,730 --> 00:13:49,060
that for knocking is used for has been
used from time to time but

218
00:13:49,060 --> 00:13:52,660
its tennis kinda sketchy there's a lot
of lot of data there that does make a

219
00:13:52,660 --> 00:13:57,670
great topic for a research paper

220
00:13:57,670 --> 00:14:03,380
okay to switch gears a little bit any
question so far

221
00:14:03,380 --> 00:14:10,380
yes

222
00:14:12,440 --> 00:14:13,150
hey

223
00:14:13,150 --> 00:14:16,490
know is the question was any

224
00:14:16,490 --> 00:14:19,770
plans to integrate with packet for
bringing the PFR along the st.

225
00:14:19,770 --> 00:14:23,280
yes that's on the two specifically that
will be done on

226
00:14:23,280 --> 00:14:26,480
and and also it plans integrated within
the iPhone

227
00:14:26,480 --> 00:14:30,000
the question on I don't know much about
what on

228
00:14:30,000 --> 00:14:34,180
what capabilities the iPhone has for
packet children presumably it has IPFW

229
00:14:34,180 --> 00:14:34,990
in

230
00:14:34,990 --> 00:14:39,050
in the in the car all because is running
on Mac OS 10 but

231
00:14:39,050 --> 00:14:42,800
I I don't have one yet so if you'd like
to

232
00:14:42,800 --> 00:14:46,780
provider development from it love to
have contributed yeah

233
00:14:46,780 --> 00:14:51,800
I'm I was a client on

234
00:14:51,800 --> 00:14:55,290
yeah you it if anyone does anyone know
if pearl rounds on the iPhone

235
00:14:55,290 --> 00:14:59,730
okay well in that case it it probably
would work right now

236
00:14:59,730 --> 00:15:04,810
and that the everything up comes bundled
with all the necessary for pro models to

237
00:15:04,810 --> 00:15:07,200
get it to work there is a dependency on
not

238
00:15:07,200 --> 00:15:11,210
on that I said there's a lot more
depends on the server side they're on

239
00:15:11,210 --> 00:15:14,200
the client side side I would anticipate
that you could probably get that to work

240
00:15:14,200 --> 00:15:15,060
today

241
00:15:15,060 --> 00:15:18,550
I in fact if you if you would like to
try that and see me now love them

242
00:15:18,550 --> 00:15:21,520
you know make a blog post about it
reference your website or whatever that

243
00:15:21,520 --> 00:15:22,260
that's a great

244
00:15:22,260 --> 00:15:25,810
a great question night is have I've
don't have anyone tell me so far that it

245
00:15:25,810 --> 00:15:27,150
definitely does work but

246
00:15:27,150 --> 00:15:32,220
if you the first love to know about it
okay so

247
00:15:32,220 --> 00:15:36,120
listens to a little basic comparisons
here and try to highlight the

248
00:15:36,120 --> 00:15:39,270
the real differences between for talking
as PA

249
00:15:39,270 --> 00:15:42,920
on so let's take this

250
00:15:42,920 --> 00:15:46,240
the most simple possible porn oxy points

251
00:15:46,240 --> 00:15:49,300
that is run to say that if

252
00:15:49,300 --> 00:15:54,370
a TCP SYN packet is received on port one
two three four five demo grant access to

253
00:15:54,370 --> 00:15:58,220
let's just say SSH from the source IP
degenerated that packet

254
00:15:58,220 --> 00:16:01,420
this is a shared sequence between pic

255
00:16:01,420 --> 00:16:05,130
the server-side and client-side and has
a few advantages

256
00:16:05,130 --> 00:16:09,100
the first move the foremost being a dick
this can be implemented in the simplest

257
00:16:09,100 --> 00:16:10,410
possible way

258
00:16:10,410 --> 00:16:14,400
on the server side only 16 bits of
incoming information is really

259
00:16:14,400 --> 00:16:16,770
significant and has to be processed by
the server

260
00:16:16,770 --> 00:16:20,650
pretty hard to put in over for export in
16 bits of information probably

261
00:16:20,650 --> 00:16:25,569
um lift the cap is also of course not
required we can just park so far a log

262
00:16:25,570 --> 00:16:26,600
file that's not

263
00:16:26,600 --> 00:16:30,010
not typically a a dangers operation on

264
00:16:30,010 --> 00:16:34,130
and any web browser even could be your
poor talking climb you don't have to

265
00:16:34,130 --> 00:16:34,770
have a niece

266
00:16:34,770 --> 00:16:38,250
specific special saw from the plant site
generates a sequence

267
00:16:38,250 --> 00:16:41,430
on and also an attack and if

268
00:16:41,430 --> 00:16:45,260
pretty effective attack again sport not
secret is in general is the fact that

269
00:16:45,260 --> 00:16:49,030
since the sequence typically you if an
attacker

270
00:16:49,030 --> 00:16:53,100
can eavesdrop on your traffic they can
spoof a packet at 28

271
00:16:53,100 --> 00:16:56,900
to the last four digits on the sequence
and they can thereby convince the

272
00:16:56,900 --> 00:16:57,900
service I did they

273
00:16:57,900 --> 00:17:01,700
the client doesn't really know the
ballot sequins and therefore deny access

274
00:17:01,700 --> 00:17:06,579
to the real point can do that with only
a single packet is involved

275
00:17:06,579 --> 00:17:09,709
so disadvantages well

276
00:17:09,709 --> 00:17:15,070
in that now becomes Maya as an attacker
my airport not planned for us in that

277
00:17:15,069 --> 00:17:16,139
the target twice

278
00:17:16,140 --> 00:17:20,579
from the first if a person that doesn't
scan every single port by default but

279
00:17:20,579 --> 00:17:24,349
and I can certainly make you do that if
you like scan every port

280
00:17:24,349 --> 00:17:28,379
and then scan the target again and see
what's what server reports now open to

281
00:17:28,380 --> 00:17:28,750
me

282
00:17:28,750 --> 00:17:32,450
i really wanna make in that my aunt

283
00:17:32,450 --> 00:17:37,710
for a client so

284
00:17:37,710 --> 00:17:41,830
this still has some measure of security
of course I mean sir Alistair to running

285
00:17:41,830 --> 00:17:43,250
as a from a diff report

286
00:17:43,250 --> 00:17:47,110
on that kinda thing and if you've got
any sort of made attack out their organs

287
00:17:47,110 --> 00:17:48,750
SSH that doesn't

288
00:17:48,750 --> 00:17:51,910
combines such a port scan on this

289
00:17:51,910 --> 00:17:54,780
you know it's probably not going to pick
up to date has to scan this particular

290
00:17:54,780 --> 00:17:56,240
for before gaining access

291
00:17:56,240 --> 00:18:01,450
so step it up a little bit on the first
version about to begin up

292
00:18:01,450 --> 00:18:05,190
combined port knocking impassive OS
fingerprinting and I did this across IP

293
00:18:05,190 --> 00:18:06,560
tables log messages

294
00:18:06,560 --> 00:18:10,050
but the basic concept is to have

295
00:18:10,050 --> 00:18:13,820
multiple packets they can involve
multiple protocols

296
00:18:13,820 --> 00:18:16,899
and also fingerprint the

297
00:18:16,900 --> 00:18:20,060
packets to the same packets coming in
the same way that POF does

298
00:18:20,060 --> 00:18:24,120
not to only grant access to particular
networking stacks

299
00:18:24,120 --> 00:18:27,130
that have been fingerprints are like for
example the next 2.6

300
00:18:27,130 --> 00:18:32,710
from disadvantages

301
00:18:32,710 --> 00:18:36,639
well I'm sorry advantages breaking the
not you not sequence typically River

302
00:18:36,639 --> 00:18:40,600
requires eavesdropping you're probably
not going to get in now

303
00:18:40,600 --> 00:18:45,090
to generate this particular sequence UHV
are packets that even involve ICMP as

304
00:18:45,090 --> 00:18:45,699
well

305
00:18:45,700 --> 00:18:49,909
and let's say an orphan act packet in
this particular sequence that's a

306
00:18:49,909 --> 00:18:53,139
that's fairly unusual but I am

307
00:18:53,139 --> 00:18:57,080
I should know course and probably
everyone here does that die

308
00:18:57,080 --> 00:19:00,970
it's not a good idea to assume that
you're packets are not being

309
00:19:00,970 --> 00:19:03,970
martyred I always assume that

310
00:19:03,970 --> 00:19:07,539
try to even though I can always get
against everything am

311
00:19:07,539 --> 00:19:10,730
and this is an example here USA plus

312
00:19:10,730 --> 00:19:14,440
POF and if you look at the ideologue
message on here at the bottom of the

313
00:19:14,440 --> 00:19:15,110
screen

314
00:19:15,110 --> 00:19:19,549
the lot he said the options command line
argument I P tables will have it logged

315
00:19:19,549 --> 00:19:21,529
the options portion the PCB header

316
00:19:21,529 --> 00:19:24,710
and combine that with the fact that part
really only need a few things that

317
00:19:24,710 --> 00:19:27,309
include the TTL value in the city when
the size

318
00:19:27,309 --> 00:19:31,240
and the options fields you can now
completely do everything up of does

319
00:19:31,240 --> 00:19:35,679
on but just use IP tables logging
messages to do it its source of data is

320
00:19:35,679 --> 00:19:36,490
the same

321
00:19:36,490 --> 00:19:41,510
so

322
00:19:41,510 --> 00:19:45,149
well disadvantages in this applies all
stood also to encrypt it or not

323
00:19:45,149 --> 00:19:45,909
sequences

324
00:19:45,909 --> 00:19:50,000
on any sequence involves multiple
packets like this different ports

325
00:19:50,000 --> 00:19:53,730
looks like a common malicious activity
known as a port scan to

326
00:19:53,730 --> 00:19:57,380
Nena any intermediate ideas that may be
watching the packets from the client to

327
00:19:57,380 --> 00:19:57,929
the server

328
00:19:57,929 --> 00:20:01,149
and also sequence replay

329
00:20:01,149 --> 00:20:06,120
is trivially possible whenever you saw
pics involved other there there have

330
00:20:06,120 --> 00:20:08,220
been some strategies to try to mitigate

331
00:20:08,220 --> 00:20:12,120
on your make replay attacks across for
knocking the implementation to love it

332
00:20:12,120 --> 00:20:13,470
more difficult for example

333
00:20:13,470 --> 00:20:17,309
ask East Valley iteration hashing
function but

334
00:20:17,309 --> 00:20:21,330
they're not really that scaleable I'd
say and sorta difficult applied a lot to

335
00:20:21,330 --> 00:20:22,090
users

336
00:20:22,090 --> 00:20:26,350
on so I you know there it sits

337
00:20:26,350 --> 00:20:30,289
difficult it's too hard to get for not
seeing it is to not be formal to our

338
00:20:30,289 --> 00:20:35,970
to replay attacks and also this is
strictly a shared secrets across not

339
00:20:35,970 --> 00:20:36,570
talking about

340
00:20:36,570 --> 00:20:41,480
using encryption yet okay so next
iteration you can

341
00:20:41,480 --> 00:20:45,940
however Inc report not sequences and
combine those with off at the same time

342
00:20:45,940 --> 00:20:46,519
this is

343
00:20:46,519 --> 00:20:49,779
probably represents the the the the

344
00:20:49,779 --> 00:20:54,370
height up for knocking you've got
encrypt the data as well as

345
00:20:54,370 --> 00:21:00,389
on stack fingerprinting involved and

346
00:21:00,389 --> 00:21:04,230
again this can be implemented within
firewall logs so you're complexity is

347
00:21:04,230 --> 00:21:04,870
lower

348
00:21:04,870 --> 00:21:07,960
generally than something that must

349
00:21:07,960 --> 00:21:11,019
sniffing at work directly with Liberty
Cap for example

350
00:21:11,019 --> 00:21:15,940
on but block sizes and Ryan Dahl

351
00:21:15,940 --> 00:21:19,470
and things now require you to have a
certain minimal

352
00:21:19,470 --> 00:21:23,200
certain minimal lengthy apart not
sequence and

353
00:21:23,200 --> 00:21:26,980
that makes it really look like a port
scan tonight yes

354
00:21:26,980 --> 00:21:30,120
so I don't particularly like trying to
set off

355
00:21:30,120 --> 00:21:34,730
IDS alarm bells and I'm really only just
die trying to gain access

356
00:21:34,730 --> 00:21:38,710
the others passive mechanism on the
server side I personally know someone

357
00:21:38,710 --> 00:21:39,820
who was on

358
00:21:39,820 --> 00:21:43,610
working at a company I work for I once
upon a time in and

359
00:21:43,610 --> 00:21:47,600
he's liked it to scan his remote systems
from it from work

360
00:21:47,600 --> 00:21:51,940
I because you want to try to verify that
his Farrell was currently working in

361
00:21:51,940 --> 00:21:54,730
that the system wasn't responding to
reports that it

362
00:21:54,730 --> 00:21:58,899
shouldn't be and he was fired because
the local security policy at

363
00:21:58,899 --> 00:22:02,470
at my company unfortunately and

364
00:22:02,470 --> 00:22:05,610
the if you were using for knocking

365
00:22:05,610 --> 00:22:09,340
he wasn't me the the intended what he
was doing would not have even been to

366
00:22:09,340 --> 00:22:10,428
scan is system

367
00:22:10,429 --> 00:22:14,110
but it would look indistinguishable to
the security teen because it would

368
00:22:14,110 --> 00:22:15,940
really look like there's a difference
between

369
00:22:15,940 --> 00:22:19,980
for not sequence and this can it really
does look like a scam he would have had

370
00:22:19,980 --> 00:22:23,610
a hard time I think committing a serious
security team that's what he was really

371
00:22:23,610 --> 00:22:24,169
doing

372
00:22:24,169 --> 00:22:28,529
okay so

373
00:22:28,529 --> 00:22:31,539
single packet authorization

374
00:22:31,539 --> 00:22:35,120
in contrast it's fast

375
00:22:35,120 --> 00:22:38,490
you don't have to bill me in any time
delays between successive packets but

376
00:22:38,490 --> 00:22:40,149
there's only one packet involved

377
00:22:40,149 --> 00:22:45,070
it as a minimal network for footprint on
it doesn't look like a port scan

378
00:22:45,070 --> 00:22:49,939
and you have access to use a lot more
data

379
00:22:49,940 --> 00:22:53,330
I given in to use ice on network so

380
00:22:53,330 --> 00:22:56,529
you can encode a lot more information
including four commands it to be now

381
00:22:56,529 --> 00:22:57,379
supports that

382
00:22:57,379 --> 00:23:02,490
and and at this point you really really
require use dropping

383
00:23:02,490 --> 00:23:06,360
eavesdropping to in order to break ISPA
authentication

384
00:23:06,360 --> 00:23:09,200
right breaking in where you what I
really mean is that you had had the

385
00:23:09,200 --> 00:23:10,289
capability

386
00:23:10,289 --> 00:23:14,669
love crib analyzing II packets that are
greeted with Ryan doll

387
00:23:14,669 --> 00:23:17,700
or with I can you PG which is not an
easy thing to do

388
00:23:17,700 --> 00:23:20,779
course and no

389
00:23:20,779 --> 00:23:24,350
to SBA packets are the same replay
attacks are

390
00:23:24,350 --> 00:23:27,740
elegantly made infeasible

391
00:23:27,740 --> 00:23:34,730
SPAD implementations

392
00:23:34,730 --> 00:23:37,799
however the code complexity to
accomplish that

393
00:23:37,799 --> 00:23:43,179
is higher and therefore I think that
there is some room for port knocking

394
00:23:43,179 --> 00:23:44,080
implementations

395
00:23:44,080 --> 00:23:47,869
still it really depends on where you
draw the line

396
00:23:47,869 --> 00:23:50,990
to you you consider that that that

397
00:23:50,990 --> 00:23:54,600
passive sniffing is the most important
thing to be concerned about

398
00:23:54,600 --> 00:23:57,460
you consider the replay attacks are more
are the most important thing to be

399
00:23:57,460 --> 00:23:58,080
concerned about

400
00:23:58,080 --> 00:24:01,580
or not the and

401
00:24:01,580 --> 00:24:04,678
so even I should note however that that

402
00:24:04,679 --> 00:24:07,399
we're still talking about a passive
mechanism is not as though you can scan

403
00:24:07,399 --> 00:24:09,129
for your SP a server

404
00:24:09,129 --> 00:24:13,429
and indeed with the at one point 9.6
release it's even harder

405
00:24:13,429 --> 00:24:17,600
to even detect the SBA is actually in
use on a particular network even if

406
00:24:17,600 --> 00:24:18,159
you're

407
00:24:18,159 --> 00:24:21,200
even if the Montreal vidalia on traffic

408
00:24:21,200 --> 00:24:25,200
see them in and so

409
00:24:25,200 --> 00:24:28,559
with new PG we can even extend things
further

410
00:24:28,559 --> 00:24:33,629
typically I use a 2048 bit new PG key
from ISP a packet's

411
00:24:33,629 --> 00:24:37,080
on and you can use important a newbie PG
keys

412
00:24:37,080 --> 00:24:41,960
GPG keys and you this is used for mister
signing on the client side

413
00:24:41,960 --> 00:24:45,529
see you don't need to generate a new key
on the client side although you should

414
00:24:45,529 --> 00:24:46,110
generate

415
00:24:46,110 --> 00:24:50,490
a and unimportant server-side key for
this

416
00:24:50,490 --> 00:24:55,190
because it to be not need access to the
password so it can be crypt

417
00:24:55,190 --> 00:25:01,940
on the server side the incoming data

418
00:25:01,940 --> 00:25:05,220
in this one complex is probably the
highest

419
00:25:05,220 --> 00:25:08,559
we have in Pearl implementations are
Ryan Dahl

420
00:25:08,559 --> 00:25:12,149
on in the case that they do not bid
actually requires a functioning

421
00:25:12,149 --> 00:25:15,590
insulation in GBG on the server side if
you want to do

422
00:25:15,590 --> 00:25:21,220
on sp back as a critic with GPG

423
00:25:21,220 --> 00:25:24,460
so I kind of like to think about it like
this

424
00:25:24,460 --> 00:25:28,260
isn't exactly it scientific graph
whatever but

425
00:25:28,260 --> 00:25:32,220
I think if you think it protocol
imitations versus complexity

426
00:25:32,220 --> 00:25:35,720
I would say that that the SBA

427
00:25:35,720 --> 00:25:40,129
with new PG is probably the most complex
but also has the most benefits in terms

428
00:25:40,129 --> 00:25:42,440
of limiting the limitations and the
actual

429
00:25:42,440 --> 00:25:46,710
for parts of I'm and I like to draw the
Aero

430
00:25:46,710 --> 00:25:49,960
serve the lower left there really really
low on

431
00:25:49,960 --> 00:25:55,250
in the sense that I soon that that
packets are being stepped all the time

432
00:25:55,250 --> 00:25:59,269
and after the right hand side for the
limitations of the greatest as we've

433
00:25:59,269 --> 00:26:00,929
seen

434
00:26:00,929 --> 00:26:04,000
detection by IDS is ability just to toss
the

435
00:26:04,000 --> 00:26:07,710
day after we are the the Fort Totten
server on

436
00:26:07,710 --> 00:26:13,850
and replay attacks are are chief one's
probably

437
00:26:13,850 --> 00:26:20,850
so it any questions on that yes

438
00:26:48,820 --> 00:26:52,600
yes I think I think it its is she a
great

439
00:26:52,600 --> 00:26:56,650
and he's pointing out that down that
you've got a lot of information wanna

440
00:26:56,650 --> 00:27:00,179
it's not easy be held at you can play
with and I

441
00:27:00,179 --> 00:27:04,190
and you don't need given it all that
information is large VIP tables

442
00:27:04,190 --> 00:27:07,620
on he's pointing out that you did you
could probably use that as a covert

443
00:27:07,620 --> 00:27:08,230
channel

444
00:27:08,230 --> 00:27:12,020
and not therefore require some more
complex application layer information

445
00:27:12,020 --> 00:27:12,860
correct

446
00:27:12,860 --> 00:27:16,360
okay yet on that the the question
becomes

447
00:27:16,360 --> 00:27:20,800
though on what how many beds do you
really need in order to thwart a replay

448
00:27:20,800 --> 00:27:21,470
attack

449
00:27:21,470 --> 00:27:26,580
I would say and so it the the initial
implementations a better Bihar

450
00:27:26,580 --> 00:27:31,178
on included actually they aren't they
all include 16 bytes for the random

451
00:27:31,179 --> 00:27:31,990
information

452
00:27:31,990 --> 00:27:35,300
do I require 16 bytes to make everything
random no

453
00:27:35,300 --> 00:27:39,830
but as soon as I start things you know
fire crews reduce the number bits that

454
00:27:39,830 --> 00:27:43,590
that are that are necessary there I
start to the I started to make it

455
00:27:43,590 --> 00:27:47,590
little bit more he's a easily to easy to
conduct a replay attack although

456
00:27:47,590 --> 00:27:51,300
you know probably some experimental
verification we need to be made our

457
00:27:51,300 --> 00:27:54,690
theoretical argument will need to be
made it see how practical that really

458
00:27:54,690 --> 00:27:55,360
would be

459
00:27:55,360 --> 00:27:58,530
and I agree with you there's a lot but
lotsa bits information that that these

460
00:27:58,530 --> 00:27:59,559
be hatter's allow

461
00:27:59,559 --> 00:28:05,420
on so on the thing is you're you're also
started to

462
00:28:05,420 --> 00:28:09,790
to say well if I need to actually change
bits in the TCP header

463
00:28:09,790 --> 00:28:13,920
I'm probably not at that point gonna
just be able to use the keys

464
00:28:13,920 --> 00:28:18,020
stock at a local system so if I require
changing

465
00:28:18,020 --> 00:28:21,639
something in it in the options portion
of the header thats local stock doesn't

466
00:28:21,640 --> 00:28:25,870
allow me to change i cant use is a
simple user space

467
00:28:25,870 --> 00:28:29,309
have you know applications such as web
browser to construct that packet

468
00:28:29,309 --> 00:28:32,870
now probably need I probably ross soccer
with access to

469
00:28:32,870 --> 00:28:35,990
the options portion at a craft that
myself on

470
00:28:35,990 --> 00:28:39,080
as you have user access controls that
point to any router

471
00:28:39,080 --> 00:28:43,590
so that um I would say

472
00:28:43,590 --> 00:28:47,530
you can certainly come up with any
implementation that would conduct

473
00:28:47,530 --> 00:28:51,170
a covert channel over just raw TCP

474
00:28:51,170 --> 00:28:54,820
I TCP header information but how

475
00:28:54,820 --> 00:28:58,700
much information you gonna be able to
include in that and stop replay attacks

476
00:28:58,700 --> 00:29:02,070
and introducing preferred if you like
I'm I think

477
00:29:02,070 --> 00:29:05,928
you at that point you start you might
need to have more information about the

478
00:29:05,929 --> 00:29:07,179
TCP header laos

479
00:29:07,179 --> 00:29:10,640
that's my gut feeling

480
00:29:10,640 --> 00:29:14,230
okay so switch gears a little bit
detecting as PA traffic

481
00:29:14,230 --> 00:29:17,880
so

482
00:29:17,880 --> 00:29:20,980
FW not

483
00:29:20,980 --> 00:29:25,550
sins you TP packets buy to fall for SBA
Communications

484
00:29:25,550 --> 00:29:32,070
over reports 6'2 201 en españa packets
to Billy going to be at least 250 bytes

485
00:29:32,070 --> 00:29:32,629
long

486
00:29:32,630 --> 00:29:36,440
in its encrypt it basics for encoded
form so

487
00:29:36,440 --> 00:29:40,540
a store rules as you see the top here
looking for any you TP packed in

488
00:29:40,540 --> 00:29:43,889
a you'd be back at to destination port
6201

489
00:29:43,890 --> 00:29:47,140
at least 250 bytes long and

490
00:29:47,140 --> 00:29:51,510
contains the following PCR readers
looking for trailing equals characters

491
00:29:51,510 --> 00:29:52,800
at the into the packet

492
00:29:52,800 --> 00:29:56,390
those trailing equals characters are
produced

493
00:29:56,390 --> 00:30:00,110
as as an artifact base64 encoding so

494
00:30:00,110 --> 00:30:04,110
base64 encoding works by taking raw data

495
00:30:04,110 --> 00:30:07,410
including it into I plain ASCII

496
00:30:07,410 --> 00:30:12,050
said a plain ASCII characters any effect
if the resulting in coding is not a

497
00:30:12,050 --> 00:30:13,500
multiple of four bytes

498
00:30:13,500 --> 00:30:17,980
then your pad that data with equals
characters to make it multiple four

499
00:30:17,980 --> 00:30:18,559
bytes

500
00:30:18,559 --> 00:30:22,879
you can end up with anywhere from one to
three equal signs or zero

501
00:30:22,880 --> 00:30:27,040
if the included eight is already
multiple for whites so just shows into

502
00:30:27,040 --> 00:30:30,809
look for two Eagles characters at the
end above

503
00:30:30,809 --> 00:30:35,149
the this GDP packet incidently on you
might say well why

504
00:30:35,150 --> 00:30:38,440
why use a PC re for this piece here is
kinda expensive and that's of course

505
00:30:38,440 --> 00:30:39,070
true

506
00:30:39,070 --> 00:30:42,240
I'm but unfortunately by dumb jumpers

507
00:30:42,240 --> 00:30:45,790
not work at the transport layer headers
so I can't make it

508
00:30:45,790 --> 00:30:49,760
take the at Lingfield love you deeply
header and use that as an operator to

509
00:30:49,760 --> 00:30:51,050
get to the in the packet data

510
00:30:51,050 --> 00:30:55,240
so using this because this PCR each
expression with his dollar sign

511
00:30:55,240 --> 00:30:58,429
allows me to do the same thing but it's
a slightly more expensive operations

512
00:30:58,429 --> 00:31:00,880
because I have to appeal to the PCRE
library

513
00:31:00,880 --> 00:31:04,550
somebody knows how to get snort right
starting to look for the

514
00:31:04,550 --> 00:31:07,820
the last bite and test that fight for

515
00:31:07,820 --> 00:31:10,850
a particular value but not require
looking at the header

516
00:31:10,850 --> 00:31:15,030
Eve at the same time you know please let
me know his way to do it

517
00:31:15,030 --> 00:31:19,990
okay so that's the first thing so
basically for encoding is used by

518
00:31:19,990 --> 00:31:23,070
all after being up packets sent by the
client

519
00:31:23,070 --> 00:31:26,350
on but we can deliver better than that

520
00:31:26,350 --> 00:31:30,659
an artifact love the crib CBC module is
that

521
00:31:30,659 --> 00:31:34,740
it tries to maintain parity with the
open as how open SSL

522
00:31:34,740 --> 00:31:38,360
encrypts data so there's this static
string salted

523
00:31:38,360 --> 00:31:41,490
underscore underscore is typically used

524
00:31:41,490 --> 00:31:44,669
am I in the in the in cryptid

525
00:31:44,669 --> 00:31:50,409
data and when as base64 encoded it shows
up with this not as this nice 10

526
00:31:50,409 --> 00:31:53,550
character string you TFS the Sarah

527
00:31:53,550 --> 00:31:57,500
I'm and so as I was looking at a bunch
of st. a packet I so well this is sort

528
00:31:57,500 --> 00:32:00,600
of in very in section right at the
beginning you know what the heck is that

529
00:32:00,600 --> 00:32:03,900
I wasn't expecting that considering the
fact that every single SBA I could

530
00:32:03,900 --> 00:32:07,200
include 16 bytes a friend in beta right
at the beginning

531
00:32:07,200 --> 00:32:12,650
but that was being generated you know by
the encryption algorithm itself

532
00:32:12,650 --> 00:32:17,659
and so are looking for that for any pre
1.9 points 6 personal FW not you can

533
00:32:17,659 --> 00:32:18,940
write a star role that would

534
00:32:18,940 --> 00:32:24,380
have a good chance of detecting SBA
traffic this way

535
00:32:24,380 --> 00:32:27,770
so here's an example have the wrong
scripted and

536
00:32:27,770 --> 00:32:31,679
dealt with the wrong for today to for
SBA packing you can see that salted

537
00:32:31,679 --> 00:32:35,690
string right up there at the beginning

538
00:32:35,690 --> 00:32:39,750
and here's the bay 64 encoded version
that packet with that string

539
00:32:39,750 --> 00:32:43,520
in the Bay City koa basis for uncoated
for form a bit

540
00:32:43,520 --> 00:32:46,590
there's no it really was characters in
this particular case because the

541
00:32:46,590 --> 00:32:50,179
encoded information was exactly a
multiple of for

542
00:32:50,179 --> 00:32:54,150
so did needed

543
00:32:54,150 --> 00:32:58,010
so we can also do a similar technique
for a canoe PG encrypt the data if you

544
00:32:58,010 --> 00:33:00,490
look at the Magic database used by the

545
00:33:00,490 --> 00:33:03,640
defile command you'll see that yet

546
00:33:03,640 --> 00:33:06,950
I infers that he filed a kit that begins
with sex

547
00:33:06,950 --> 00:33:12,720
8502 is corresponds to date it's been
infected with the new PG and the basis

548
00:33:12,720 --> 00:33:13,960
for a good version of that

549
00:33:13,960 --> 00:33:18,840
is nice HQ string and also included the
size

550
00:33:18,840 --> 00:33:22,720
requirement a greater than a 1000 bytes
because once you start used the new PG

551
00:33:22,720 --> 00:33:26,390
he's on the the SBA packets

552
00:33:26,390 --> 00:33:29,840
I'm I typically are are free are a
little bit larger so

553
00:33:29,840 --> 00:33:34,650
they're usually over about 1000 by the
year 2040 keep myself

554
00:33:34,650 --> 00:33:38,750
endured years server really abbreviated
version I've

555
00:33:38,750 --> 00:33:42,610
what that pack it looks like it begins
with HQ and in this case

556
00:33:42,610 --> 00:33:46,580
ins also with the trailing people sign
because the original data

557
00:33:46,580 --> 00:33:51,380
was 1,043 bytes long but we had to make
it one thousand forty four bikes want to

558
00:33:51,380 --> 00:33:54,050
be more people for

559
00:33:54,050 --> 00:33:59,340
okay so turns out it's easy tess or to
stop this

560
00:33:59,340 --> 00:34:02,419
on over movies in various sections

561
00:34:02,419 --> 00:34:09,360
yes question

562
00:34:09,360 --> 00:34:13,159
as the question was arm would there be
any into you size problems with having

563
00:34:13,159 --> 00:34:14,060
such a large

564
00:34:14,060 --> 00:34:18,500
on application where he loade on I've

565
00:34:18,500 --> 00:34:23,469
done a lot of traveling and so far I
have yet to encounter network that

566
00:34:23,470 --> 00:34:26,590
dead dead does not handle that well

567
00:34:26,590 --> 00:34:29,970
I mean you're your typical into you size
an easy network is not gonna be a

568
00:34:29,970 --> 00:34:30,630
problem

569
00:34:30,630 --> 00:34:36,060
on you know there are other network
you're dealing here for a close to that

570
00:34:36,060 --> 00:34:37,330
they could become involved but

571
00:34:37,330 --> 00:34:41,159
I'd yet I have yet to see that become a
problem so

572
00:34:41,159 --> 00:34:47,840
typically no so

573
00:34:47,840 --> 00:34:52,060
the the one point 9.6 percent better be
not takes these Invariant Sections

574
00:34:52,060 --> 00:34:56,110
it strips them out completely before
seeing the packet data on the wire

575
00:34:56,110 --> 00:35:00,300
the server-side DN says okay I've got
this now

576
00:35:00,300 --> 00:35:04,310
totally random looking blob love love
hats error ASCII data

577
00:35:04,310 --> 00:35:10,120
and not yet rabin heads back it as
invariant Sections back and before

578
00:35:10,120 --> 00:35:11,830
attempting to do is basically Ford

579
00:35:11,830 --> 00:35:15,190
at decoding or the crypt in for rind all

580
00:35:15,190 --> 00:35:18,790
packets are or new PG packets am

581
00:35:18,790 --> 00:35:23,940
and on and therefore the store rules now
becoming ineffective against

582
00:35:23,940 --> 00:35:28,130
on this latest release a veteran of also

583
00:35:28,130 --> 00:35:33,300
there are sorta I would say
comprehensive for randomization features

584
00:35:33,300 --> 00:35:36,870
now with enough to be enough and this
applies both to the destination port

585
00:35:36,870 --> 00:35:39,990
I love yes the attack itself as well

586
00:35:39,990 --> 00:35:45,730
as the port you choose to make US each
connection over so if you want after the

587
00:35:45,730 --> 00:35:46,480
you not to

588
00:35:46,480 --> 00:35:52,090
create a randomly designated port its
port forwarded to your SSH server

589
00:35:52,090 --> 00:35:55,420
you can do that as well and that applies
both old to

590
00:35:55,420 --> 00:35:58,450
local connections the local local system
as well as

591
00:35:58,450 --> 00:36:01,580
forwarded connections to internal SSH
servers that are not otherwise

592
00:36:01,580 --> 00:36:02,600
accessible

593
00:36:02,600 --> 00:36:06,120
and if I can get the demo work should
show you an example that

594
00:36:06,120 --> 00:36:09,930
so just a is light on what I mean here

595
00:36:09,930 --> 00:36:13,790
this year the top command line if you do
so for

596
00:36:13,790 --> 00:36:18,050
with after being up I want access to my
lets him I'm on radical network

597
00:36:18,050 --> 00:36:18,530
somewhere

598
00:36:18,530 --> 00:36:22,260
i won access to this internal 192 168 n
da 22

599
00:36:22,260 --> 00:36:25,500
server in particular I want access to
ssh on that server

600
00:36:25,500 --> 00:36:28,960
but I'm going to randomize both the
destination for

601
00:36:28,960 --> 00:36:33,240
for the SBA package as well as report
that I want to connect

602
00:36:33,240 --> 00:36:36,270
to on to ssh over in this case

603
00:36:36,270 --> 00:36:40,800
at the pin-up assigns me 4339 for which
I will use on the S

604
00:36:40,800 --> 00:36:44,020
ssh command line to make the connection
so

605
00:36:44,020 --> 00:36:49,759
not the port randomization really makes
things difficult to analyze issues in

606
00:36:49,760 --> 00:36:50,660
addition all

607
00:36:50,660 --> 00:36:54,759
it's just it raises the bar just a
little bit more I can always assume

608
00:36:54,760 --> 00:36:57,830
that my connections are gonna go over

609
00:36:57,830 --> 00:37:01,580
TCP port 22 for SSH at that we not to
make that

610
00:37:01,580 --> 00:37:07,759
unpredictable okay so let's talk about
an attack

611
00:37:07,760 --> 00:37:10,820
instances SBA this one

612
00:37:10,820 --> 00:37:15,950
I think was particularly elegant came
out two years ago 2006 its featured in a

613
00:37:15,950 --> 00:37:19,310
master's degree written by Sebastian
John free am sorry if i'm mispronouncing

614
00:37:19,310 --> 00:37:20,210
your name

615
00:37:20,210 --> 00:37:23,580
arm and I'm basically

616
00:37:23,580 --> 00:37:27,259
the have to be not demand had no notion
maintaining a

617
00:37:27,260 --> 00:37:30,320
a time stamp on incoming as PA packets

618
00:37:30,320 --> 00:37:33,910
so attacker that possessed an inline
device

619
00:37:33,910 --> 00:37:38,200
to an SBA back packet could intercept
one store it off

620
00:37:38,200 --> 00:37:41,270
on disk some are not saying and after

621
00:37:41,270 --> 00:37:45,430
the the client-side well it said this
has the effect across the course

622
00:37:45,430 --> 00:37:49,569
SBA's never acknowledged so when the at
the following message connection was

623
00:37:49,570 --> 00:37:51,760
attended it wasn't allowed well

624
00:37:51,760 --> 00:37:55,000
the client probably just recognize
realized I will make my packing a la

625
00:37:55,000 --> 00:37:56,130
somewhere or

626
00:37:56,130 --> 00:37:59,350
or whatever so the client sends

627
00:37:59,350 --> 00:38:02,580
a new SP a packet which is not different
the attacker says

628
00:38:02,580 --> 00:38:07,170
and that's okay let the Sun through and
the then the service I would open up

629
00:38:07,170 --> 00:38:09,090
port 22 and the

630
00:38:09,090 --> 00:38:12,730
decline would have no way to know that
the that the original as the packet was

631
00:38:12,730 --> 00:38:13,280
seen

632
00:38:13,280 --> 00:38:18,190
was intercepted the the team inside its
have been out demons I was unable to see

633
00:38:18,190 --> 00:38:21,120
that original SBA I get so there's no
way it could do it

634
00:38:21,120 --> 00:38:26,430
a a shot 256 comparison against a new
SPL back in to detect a replay attack

635
00:38:26,430 --> 00:38:29,500
which means that if at the same time

636
00:38:29,500 --> 00:38:34,690
the client used dash ass on the command
line set to force the FW not demand

637
00:38:34,690 --> 00:38:38,290
not to use to trust the source IP on the

638
00:38:38,290 --> 00:38:41,940
I T in the IP header the attacker could
retransmitted

639
00:38:41,940 --> 00:38:45,520
that as PA packet payload from a
different source IP

640
00:38:45,520 --> 00:38:49,500
and gain the same level access as the
original a tent

641
00:38:49,500 --> 00:38:52,940
elegant attack at the office no longer
far more

642
00:38:52,940 --> 00:38:56,490
I it it died yet encodes the source I

643
00:38:56,490 --> 00:38:59,490
address that you want access to with
Indian cryptid

644
00:38:59,490 --> 00:39:02,550
date itself and it maintains a timestamp

645
00:39:02,550 --> 00:39:05,910
pass for all incoming as PA packets

646
00:39:05,910 --> 00:39:10,410
but if you know of another exploit
against as DSP architecture

647
00:39:10,410 --> 00:39:13,120
on yeah I'd love to have some feedback
from the community about the

648
00:39:13,120 --> 00:39:13,870
architecture

649
00:39:13,870 --> 00:39:18,640
so please let me know

650
00:39:18,640 --> 00:39:22,670
don't seem right for a time here on so
this is the 1.9 per tix release there

651
00:39:22,670 --> 00:39:23,840
are a few additional things

652
00:39:23,840 --> 00:39:28,260
on in the in trying to write both
client-side and server-side

653
00:39:28,260 --> 00:39:31,570
software like this ice I've come to
realize that

654
00:39:31,570 --> 00:39:35,690
are tests we is really really important
and

655
00:39:35,690 --> 00:39:39,820
it there's now test we support for port
knocking note as well as as p.m. out of

656
00:39:39,820 --> 00:39:40,640
course is about

657
00:39:40,640 --> 00:39:43,850
i think is about 180 test in there
something like that but anyway

658
00:39:43,850 --> 00:39:49,060
I'm was your question

659
00:39:49,060 --> 00:39:52,529
um upcoming developments

660
00:39:52,530 --> 00:39:56,130
I mention for it's being rewritten in C
arm

661
00:39:56,130 --> 00:39:58,460
I was over to try to get that done by
this conference but just couldn't quite

662
00:39:58,460 --> 00:40:00,000
finish its

663
00:40:00,000 --> 00:40:04,250
but died it will be ported to open wrt
as well as packet protector another

664
00:40:04,250 --> 00:40:05,680
embedded distributions

665
00:40:05,680 --> 00:40:09,620
arm we might have some additional US for
Java

666
00:40:09,620 --> 00:40:13,630
on this this next last one here is
getting kinda interesting now that we

667
00:40:13,630 --> 00:40:16,020
now supports the interface to

668
00:40:16,020 --> 00:40:19,210
T building port forwarding and now rules

669
00:40:19,210 --> 00:40:24,170
I'm also going to add support for SBA
proxying so you can essentially build up

670
00:40:24,170 --> 00:40:25,830
chains have nap rules through it

671
00:40:25,830 --> 00:40:28,930
to it deeply buried SSH server somewhere
on

672
00:40:28,930 --> 00:40:32,960
and you know what's with yet to be not
ins is at the top

673
00:40:32,960 --> 00:40:36,220
now and will build those rules
automatically is that you can access

674
00:40:36,220 --> 00:40:43,220
now from any radical network in all the
way down in that gets busted

675
00:40:48,319 --> 00:40:50,609
and

676
00:40:50,609 --> 00:40:53,920
yes the question is said

677
00:40:53,920 --> 00:40:57,539
in that new proxy mode support on is it

678
00:40:57,539 --> 00:41:01,180
is the information could relate but led
by Lakers are always the original

679
00:41:01,180 --> 00:41:03,470
packets and all the way through the
internal system

680
00:41:03,470 --> 00:41:06,930
yes so um I this is i'd

681
00:41:06,930 --> 00:41:10,299
I'm so little bit design phase for this
particular feature Tom

682
00:41:10,299 --> 00:41:13,369
but and I the couple things are clear

683
00:41:13,369 --> 00:41:17,319
each hop in the SBA past has to be able
to

684
00:41:17,319 --> 00:41:21,630
to to so if I if I send the original

685
00:41:21,630 --> 00:41:25,069
SBA packing all the way through that's
fine but each are

686
00:41:25,069 --> 00:41:28,710
also has to have unnecessary key
information to verify that its

687
00:41:28,710 --> 00:41:33,670
that it's a valid packet on me I at each
hop I could

688
00:41:33,670 --> 00:41:37,220
generating new SP a packet with the same
original information with the section

689
00:41:37,220 --> 00:41:37,930
what's a

690
00:41:37,930 --> 00:41:41,839
random number that's dense including the
any in a Dana and

691
00:41:41,839 --> 00:41:45,710
and that said it still being worked out
a little bit

692
00:41:45,710 --> 00:41:48,970
and there's there's an details there
that down to be top 10

693
00:41:48,970 --> 00:41:53,730
of fun if you like thanks for the
question okay

694
00:41:53,730 --> 00:41:57,099
from I'm okay demo time or

695
00:41:57,099 --> 00:42:00,789
keep going through some examples well
yes one

696
00:42:00,789 --> 00:42:07,789
demagogue a miss me to be a little bit
to set up here to someone to show some

697
00:42:08,130 --> 00:42:15,130
specific information

698
00:42:16,650 --> 00:42:23,650
its resolution

699
00:42:25,349 --> 00:42:27,940
other question was a lot of stuff won't
work for stateful firewall

700
00:42:27,940 --> 00:42:32,029
on actually depends down and Christabel
for hours is on

701
00:42:32,029 --> 00:42:35,990
is that the most serve nice where using
is because it keeps your connection

702
00:42:35,990 --> 00:42:40,150
live or were pressuring the original
except for all down out but you better

703
00:42:40,150 --> 00:42:42,289
be now supports clan drive timeouts

704
00:42:42,289 --> 00:42:45,369
so if you want on if if you

705
00:42:45,369 --> 00:42:49,900
if you want the final tour to accept
your message connection for five days

706
00:42:49,900 --> 00:42:56,900
you can do that I if you configure the
server to allow that

707
00:43:03,370 --> 00:43:06,970
yes the question was on it will work for
something i guess its core pics are you

708
00:43:06,970 --> 00:43:07,320
getting

709
00:43:07,320 --> 00:43:11,370
packets through on their the visa
requirement is that a UAV hack it

710
00:43:11,370 --> 00:43:15,580
add to it the whatever destination for
the clan designates

711
00:43:15,580 --> 00:43:19,750
is sent through at some point and
monitored by after being off instance

712
00:43:19,750 --> 00:43:23,870
so in you know there's some there's an
details there but it should work

713
00:43:23,870 --> 00:43:30,870
typically yes

714
00:43:34,030 --> 00:43:35,359
this

715
00:43:35,359 --> 00:43:41,140
room

716
00:43:41,140 --> 00:43:44,609
time was the sport in the antennae in
the new

717
00:43:44,610 --> 00:43:48,050
I do not one when I'm sponsors release
woods ended

718
00:43:48,050 --> 00:43:51,070
use a YouTube a hole punch method in
conjunction with

719
00:43:51,070 --> 00:43:54,710
TCP connections are and pritchard be

720
00:43:54,710 --> 00:43:58,090
yeah arm that beyond the access

721
00:43:58,090 --> 00:44:01,970
so so once you be back to send may have
to be top actually considered over TCP

722
00:44:01,970 --> 00:44:02,250
your

723
00:44:02,250 --> 00:44:06,180
ICB too but but if the packet St not

724
00:44:06,180 --> 00:44:10,290
demon monitors that I can be accessed
it's rigged it has requested

725
00:44:10,290 --> 00:44:14,250
whether that is a TCP for access or you
to be more taxes

726
00:44:14,250 --> 00:44:20,340
it doesn't its that encoded in the
packet itself by the client so

727
00:44:20,340 --> 00:44:27,340
I'm gonna try to are demo this

728
00:44:31,359 --> 00:44:33,410
what's that

729
00:44:33,410 --> 00:44:40,410
0 make this bigger okay actually here

730
00:44:41,350 --> 00:44:47,549
senator you see that

731
00:44:47,550 --> 00:44:50,700
okay so just a quick mission other the
architecture here

732
00:44:50,700 --> 00:44:56,940
on there are

733
00:44:56,940 --> 00:45:00,940
there are two systems involved here the
two separate systems down here and the

734
00:45:00,940 --> 00:45:01,620
presser

735
00:45:01,620 --> 00:45:04,810
down here this is a this is a FreeBSD
system running an errand underneath

736
00:45:04,810 --> 00:45:05,520
VMware

737
00:45:05,520 --> 00:45:09,790
as running after being up client I have
an Ubuntu Linux system that's running

738
00:45:09,790 --> 00:45:13,220
thats on these two winners appears from
the have definitely observer

739
00:45:13,220 --> 00:45:20,220
and

740
00:45:24,700 --> 00:45:31,700
keys

741
00:45:36,680 --> 00:45:43,680
it's just saying

742
00:45:46,440 --> 00:45:49,240
I don't think I'm going to be able to
you is this

743
00:45:49,240 --> 00:45:53,210
I'm hasn't for with a

744
00:45:53,210 --> 00:45:57,900
Mouser it is that just in the bottom 10
what I've shown here is is that I'm

745
00:45:57,900 --> 00:46:01,670
the IP tables filtering my incoming
interconnection 10 24 22 okay

746
00:46:01,670 --> 00:46:05,500
so the input chain is not allowing the
connection from the BST system to the

747
00:46:05,500 --> 00:46:06,690
Ubuntu One X system

748
00:46:06,690 --> 00:46:10,450
said to be of is running over here now
wanna do is

749
00:46:10,450 --> 00:46:15,490
I'm going to I'm going to use at the
Minot

750
00:46:15,490 --> 00:46:18,680
in INF in that mode here to create

751
00:46:18,680 --> 00:46:23,960
in I a dean at rule for randomly
assigned port over which essay to be

752
00:46:23,960 --> 00:46:24,760
accepted

753
00:46:24,760 --> 00:46:31,760
from there to be no client system the
FreeBSD system

754
00:46:32,990 --> 00:46:36,170
so as you can see down he is just a sign
me

755
00:46:36,170 --> 00:46:40,840
and a Newport so for 119 for

756
00:46:40,840 --> 00:46:44,430
shall in BR I singen

757
00:46:44,430 --> 00:46:49,330
and so now I can log n postname Isengard

758
00:46:49,330 --> 00:46:53,380
which is my Ubuntu One X system as you
can see over in this window

759
00:46:53,380 --> 00:46:57,120
these this is like message is output by
the FAA observer

760
00:46:57,120 --> 00:47:00,190
that you can see a dean at rule for

761
00:47:00,190 --> 00:47:04,050
this particular from one 194 TCP port

762
00:47:04,050 --> 00:47:08,020
to be matted locally to 422 for forty
seconds

763
00:47:08,020 --> 00:47:11,210
and also interfacing course with the I'm

764
00:47:11,210 --> 00:47:14,300
the ideal state tracking mechanism to
keep my connection open

765
00:47:14,300 --> 00:47:17,830
at forty seconds at the Minot D has
removed

766
00:47:17,830 --> 00:47:22,020
this thing input accept rule so now any
new connection that I attempt to make

767
00:47:22,020 --> 00:47:24,690
from the FreeBSD system will not be
allowed but

768
00:47:24,690 --> 00:47:27,820
as you can see here my my session is
still open

769
00:47:27,820 --> 00:47:31,040
that illustrates

770
00:47:31,040 --> 00:47:34,720
on the advantage to using a stateful
firewall for

771
00:47:34,720 --> 00:47:38,000
for doing this kind of thing Southlake
quit exit now

772
00:47:38,000 --> 00:47:42,010
and I just test without I have access to

773
00:47:42,010 --> 00:47:47,260
for 2004 sat down and

774
00:47:47,260 --> 00:47:54,260
in this one now you already see so

775
00:47:55,800 --> 00:48:01,830
this is this is the SBA back in as you
can see the destination port was

776
00:48:01,830 --> 00:48:03,450
randomized to this value

777
00:48:03,450 --> 00:48:06,750
if I were to dive into this fact that
you receive those in very in sections

778
00:48:06,750 --> 00:48:08,980
are also stripped out on the got time to
show that

779
00:48:08,980 --> 00:48:12,660
and then you can see the following
connection which is actually SSH

780
00:48:12,660 --> 00:48:16,790
but it's going over tease the board for
411

781
00:48:16,790 --> 00:48:20,259
94 so that's a demo and

782
00:48:20,260 --> 00:48:27,260
any questions yes

783
00:48:27,450 --> 00:48:29,990
is the first I could you repeat the mean
this form

784
00:48:29,990 --> 00:48:36,990
yes that is your TV as as i right

785
00:48:38,780 --> 00:48:41,340
the the for the SP a packet itself

786
00:48:41,340 --> 00:48:46,010
kid I is it's usually UNEP by default
but you can use command on a

787
00:48:46,010 --> 00:48:49,420
command line argument the sand even is
in SB attack ever to stab a TCP

788
00:48:49,420 --> 00:48:50,360
connection if you like

789
00:48:50,360 --> 00:48:54,980
that's required to get work effort or on
but you can also arise sleepy is not

790
00:48:54,980 --> 00:48:56,040
necessarily BDP

791
00:48:56,040 --> 00:49:01,730
say any other questions yes i'm Jack a

792
00:49:01,730 --> 00:49:06,090
have you and you departures but you're
using eyes question is how r did me the

793
00:49:06,090 --> 00:49:07,370
Parsis I'm using

794
00:49:07,370 --> 00:49:10,910
that's a that's a great question as you
probably afraid to

795
00:49:10,910 --> 00:49:15,049
net packet for example and the than the
net P cap extension

796
00:49:15,050 --> 00:49:18,370
in Pearl like I think on I've looked at
them a little bit

797
00:49:18,370 --> 00:49:21,940
at what I say that there's a cure I'd
say probably not I mean I

798
00:49:21,940 --> 00:49:25,320
I'd say that's an area where

799
00:49:25,320 --> 00:49:29,340
rewriting in CF think is important to
make sure that

800
00:49:29,340 --> 00:49:33,370
you know things are really well tested I
think using valgrind against this code

801
00:49:33,370 --> 00:49:35,359
is gonna be really important down

802
00:49:35,360 --> 00:49:38,980
so if not in the context of the open SSL
from

803
00:49:38,980 --> 00:49:42,290
anyway um that's a that's a great
question and that

804
00:49:42,290 --> 00:49:46,820
that is a chink in the armor there's
nothing to say that there is not a

805
00:49:46,820 --> 00:49:47,700
vulnerability

806
00:49:47,700 --> 00:49:51,000
in either at Liberty Cap itself or

807
00:49:51,000 --> 00:49:55,800
in the pressures that this code is using
the the main application is to make it

808
00:49:55,800 --> 00:49:59,370
make a target identification phase are
using in math make

809
00:49:59,370 --> 00:50:02,390
that piece hard as possible as hard as
possible

810
00:50:02,390 --> 00:50:06,330
on there could be an exploit waiting to
happen

811
00:50:06,330 --> 00:50:10,029
India to be not server side by virtue of
the fact that uses Pro models that are

812
00:50:10,030 --> 00:50:10,780
also helps

813
00:50:10,780 --> 00:50:14,870
see code in the back end its center
that's certainly possible yes

814
00:50:14,870 --> 00:50:21,870
you the questions yes

815
00:50:31,140 --> 00:50:34,410
on any solutions to chew on it a I

816
00:50:34,410 --> 00:50:38,149
ever virtual system for single backup
cinema quite is that

817
00:50:38,150 --> 00:50:44,080
question yeah um

818
00:50:44,080 --> 00:50:49,840
a said so there have been horrible isn't
in files from time to time

819
00:50:49,840 --> 00:50:54,250
arm you know them many there are
integration points that you could be

820
00:50:54,250 --> 00:50:57,600
you could use within within kernels that
are running in

821
00:50:57,600 --> 00:51:01,200
in a serving a virtual environment just
because you've got access to I V tables

822
00:51:01,200 --> 00:51:02,880
and I DFW things just like in

823
00:51:02,880 --> 00:51:07,950
in rare any VMware but down IFO-twenty
to take a question of why is my question

824
00:51:07,950 --> 00:51:09,810
I got but anyway i think im running
outta time

825
00:51:09,810 --> 00:51:16,810
but I thank you very much

826
00:51:32,260 --> 00:51:32,510
I

