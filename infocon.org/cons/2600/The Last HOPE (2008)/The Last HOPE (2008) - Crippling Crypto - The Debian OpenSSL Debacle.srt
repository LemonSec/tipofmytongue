1
00:00:00,249 --> 00:00:03,060
and we're here to talk about the maybe
an open SSL

2
00:00:03,060 --> 00:00:06,609
bout for you probably all heard about I
am

3
00:00:06,609 --> 00:00:10,510
beloved over curtain for you basically

4
00:00:10,510 --> 00:00:14,330
and may have 2006 there was a a

5
00:00:14,330 --> 00:00:18,060
hope for baby in developer trying to fix
some bugs and I'm

6
00:00:18,060 --> 00:00:22,770
in fixing a bug he actually introduced
probably the worst plugged in as ever

7
00:00:22,770 --> 00:00:23,160
seen

8
00:00:23,160 --> 00:00:24,760
and its

9
00:00:24,760 --> 00:00:28,670
pretty amazing what widespread facts
just a couple comments

10
00:00:28,670 --> 00:00:32,770
have created on answering to go into
detail about

11
00:00:32,770 --> 00:00:37,220
the actual bug and how the fuck can be
exploited in

12
00:00:37,220 --> 00:00:40,589
very certain ways different applications
that are affected and

13
00:00:40,590 --> 00:00:44,790
it'll be awfully interesting to you yeah

14
00:00:44,790 --> 00:00:47,830
add the the Debian bug is probably

15
00:00:47,830 --> 00:00:52,339
as take said the most widely spread
cryptographic vulnerability on internet

16
00:00:52,340 --> 00:00:53,200
at the moment

17
00:00:53,200 --> 00:00:56,300
and certainly has been much wider
spreads few weeks ago

18
00:00:56,300 --> 00:01:00,460
still and it really all boils down to

19
00:01:00,460 --> 00:01:04,460
to cryptographic keys and the entropy
cryptographic keys to use

20
00:01:04,460 --> 00:01:08,040
very likely to be secure systems

21
00:01:08,040 --> 00:01:11,490
to you I'm authenticate users to

22
00:01:11,490 --> 00:01:15,679
sign data and pretty much money as a
precondition was security

23
00:01:15,680 --> 00:01:18,690
issues so cryptographic keys are very
much

24
00:01:18,690 --> 00:01:23,289
at the foundation of of Internet
Security and cryptographic keys only

25
00:01:23,290 --> 00:01:27,409
goods if they're hard to guess much like
your password and

26
00:01:27,409 --> 00:01:31,850
at on your computer if it's easy to
guess then then it's no good if somebody

27
00:01:31,850 --> 00:01:32,979
can just try all

28
00:01:32,979 --> 00:01:36,579
likely passwords and find 21 you're
using

29
00:01:36,579 --> 00:01:40,740
so did the hotness of guessing the
password or cryptographic key is

30
00:01:40,740 --> 00:01:44,659
measured in entropy a distant the number
of bits at

31
00:01:44,659 --> 00:01:49,840
at least needed to describe it and so
was a passport for example the entropy

32
00:01:49,840 --> 00:01:53,340
grows as the password is longer but it
also grows

33
00:01:53,340 --> 00:01:56,600
as you use more different characters I'm

34
00:01:56,600 --> 00:02:02,030
when his passwords have been broken for
years since they've only thirty six bits

35
00:02:02,030 --> 00:02:03,630
of entropy so any

36
00:02:03,630 --> 00:02:06,829
rainbow table and use type of that

37
00:02:06,829 --> 00:02:10,990
I'm can break it will see that that to
Debian volatility

38
00:02:10,990 --> 00:02:14,590
decreases said to 15 pics so Wes Eddie
Betts

39
00:02:14,590 --> 00:02:17,670
is we've 15 bits missus not

40
00:02:17,670 --> 00:02:22,490
not any security at all and 24 for any
system to be secure you need about

41
00:02:22,490 --> 00:02:27,720
eighty at-bats of entropy now these
cryptographic keys in all the different

42
00:02:27,720 --> 00:02:30,859
applications that use that typically
generated from

43
00:02:30,860 --> 00:02:35,560
from one tactic to open SSL packet that
that was started to provide

44
00:02:35,560 --> 00:02:39,780
on secure communication on the internet
but now provides all these very useful

45
00:02:39,780 --> 00:02:41,780
tool set other programs used to

46
00:02:41,780 --> 00:02:46,569
to generate a cryptographic keys tall
for example to provide anonymity

47
00:02:46,569 --> 00:02:49,670
administrative utilities such as SSH

48
00:02:49,670 --> 00:02:53,560
but also all kinds of other applications
for cryptographic keys and use

49
00:02:53,560 --> 00:02:57,030
now to

50
00:02:57,030 --> 00:03:00,159
to generate cryptographic keys on a
computer

51
00:03:00,159 --> 00:03:04,120
to open SSL pick it has two

52
00:03:04,120 --> 00:03:08,840
to you could play a randomness basically
so imagine you have to come up with

53
00:03:08,840 --> 00:03:10,470
something random in a deterministic

54
00:03:10,470 --> 00:03:14,510
program that's kind of hot limits are
any UNIX system

55
00:03:14,510 --> 00:03:19,659
very much already dust to work for you
mostly by collecting random events such

56
00:03:19,659 --> 00:03:24,670
as user inputs and it's for example the
two speed at which you type data

57
00:03:24,670 --> 00:03:27,819
to exact pass through which you move
your mouse

58
00:03:27,819 --> 00:03:31,260
all those things are collected and
provided you random now

59
00:03:31,260 --> 00:03:36,399
open as his eldest did that doesn't
consider that sufficient

60
00:03:36,400 --> 00:03:41,720
and s a few other things on top of it
it's a process ID which also changes

61
00:03:41,720 --> 00:03:43,230
every time you call the program

62
00:03:43,230 --> 00:03:46,879
this key generation program and a few
other things and wanting it

63
00:03:46,879 --> 00:03:50,239
also does is it it uses

64
00:03:50,239 --> 00:03:54,920
to bootstrap its entropy memory that has
never been

65
00:03:54,920 --> 00:03:58,439
written to at least not from this
process to mention you you read some

66
00:03:58,439 --> 00:04:02,000
some memory cell that that you didn't
write it is basically brand and its

67
00:04:02,000 --> 00:04:03,950
content at least not very predictable

68
00:04:03,950 --> 00:04:08,349
house dental labs some Debbie and
development to

69
00:04:08,349 --> 00:04:11,879
22 think about why why somebody would
ever

70
00:04:11,879 --> 00:04:15,230
re from memory before writing and

71
00:04:15,230 --> 00:04:18,430
net space the irony of this
vulnerability is that %uh

72
00:04:18,430 --> 00:04:22,440
those um the source and entropy the
uninitialized memory

73
00:04:22,440 --> 00:04:26,050
is actually the weakest because it's not
like you're actually getting the memory

74
00:04:26,050 --> 00:04:26,880
from the chip

75
00:04:26,880 --> 00:04:29,870
it's the me from the address your
biscuits business has memory size

76
00:04:29,870 --> 00:04:30,490
basically

77
00:04:30,490 --> 00:04:34,090
just left over stuff from the stack and
service canine the program knowing the

78
00:04:34,090 --> 00:04:35,940
state young militants values are

79
00:04:35,940 --> 00:04:39,300
so does have a half-baked idea in the
beginning

80
00:04:39,300 --> 00:04:42,340
um and then Devin developers you know

81
00:04:42,340 --> 00:04:46,570
is looking to improve in software and
using suffer com valgrind

82
00:04:46,570 --> 00:04:50,080
and about nine does that looks for
memory leaks and looks for these cases

83
00:04:50,080 --> 00:04:50,710
reusing

84
00:04:50,710 --> 00:04:55,229
uninitialized memory and biscuit for
using a uninitialized memory before

85
00:04:55,229 --> 00:04:59,479
I am is initialized is actually also can
be security phone ability and a lot of

86
00:04:59,479 --> 00:05:03,300
cool bugs this way but in this case is
trying to get rid of his own abilities

87
00:05:03,300 --> 00:05:07,419
cycle program complains let's comment
this out we don't really need to use

88
00:05:07,419 --> 00:05:07,930
this

89
00:05:07,930 --> 00:05:11,100
uninitialized memory on just kinda
worthless

90
00:05:11,100 --> 00:05:15,380
an that's correct via a different

91
00:05:15,380 --> 00:05:18,400
and and actually to it's a good school
to Debbie

92
00:05:18,400 --> 00:05:22,509
to be fair there's also did determine
developer that did this

93
00:05:22,509 --> 00:05:26,120
apparently did not see the FAQ about the
valve repair

94
00:05:26,120 --> 00:05:29,240
on the open SSL website %ah

95
00:05:29,240 --> 00:05:32,930
there is pretty specific like children
has an hour in this

96
00:05:32,930 --> 00:05:35,949
just ignore it on I have

97
00:05:35,949 --> 00:05:40,520
but then there's also the fact that she
did ask on the Libyan developer did ask

98
00:05:40,520 --> 00:05:41,520
on the open SSL

99
00:05:41,520 --> 00:05:44,880
dev mailing list which is not the open
SSL team

100
00:05:44,880 --> 00:05:48,090
mailing list which means that anyone
could answer that

101
00:05:48,090 --> 00:05:51,990
and it's not an authoritative answer
even though an open a cell developer did

102
00:05:51,990 --> 00:05:53,690
say if you're trying to have some

103
00:05:53,690 --> 00:05:56,690
on like you're trying to solve some
problems with debugging

104
00:05:56,690 --> 00:05:59,610
you know if you wanna figure out what's
actually going on it might be useful to

105
00:05:59,610 --> 00:06:00,870
know

106
00:06:00,870 --> 00:06:03,880
get rid of those errors but did I don't
think that

107
00:06:03,880 --> 00:06:07,979
and and no one would say to the open SSL
team blast that passion said that was a

108
00:06:07,979 --> 00:06:09,050
good idea

109
00:06:09,050 --> 00:06:12,759
although by there's definitely some
dispute about whether or not the

110
00:06:12,759 --> 00:06:13,240
battered

111
00:06:13,240 --> 00:06:16,830
a reasonable thing that i'd open SSL
developer could reply on a dev mailing

112
00:06:16,830 --> 00:06:18,469
list saying that

113
00:06:18,470 --> 00:06:22,270
I am but it seems pretty clear that it
wasn't like Ben Laurie sign up on the

114
00:06:22,270 --> 00:06:23,289
passion integrated

115
00:06:23,289 --> 00:06:26,330
I and integrated upstream and open SSL
lol

116
00:06:26,330 --> 00:06:29,620
importantly the open SSL didn't
integrated upstream

117
00:06:29,620 --> 00:06:33,030
in this is basically a patch that kept
us that stayed in the distribution

118
00:06:33,030 --> 00:06:35,520
and one could say that basically the
only patches you should make the

119
00:06:35,520 --> 00:06:36,219
software ya

120
00:06:36,220 --> 00:06:39,530
in the distribution a special crypto is
bike

121
00:06:39,530 --> 00:06:43,310
where you're going and saw the files you
shouldn't change how it works and

122
00:06:43,310 --> 00:06:47,220
we did is the developer Scott
overzealous and I'm commented out

123
00:06:47,220 --> 00:06:51,539
originally commented out the Tom the
instance where the uninitialized memory

124
00:06:51,539 --> 00:06:52,909
was used

125
00:06:52,910 --> 00:06:55,919
and the when and comes out another
instance of it

126
00:06:55,919 --> 00:06:59,210
and not one was basically where the
first or the bench be

127
00:06:59,210 --> 00:07:03,380
give you random the real one hugged us
for that was seeded into the

128
00:07:03,380 --> 00:07:07,969
random number generator from an SSL so
277 did the bike was

129
00:07:07,970 --> 00:07:11,130
was patched in the worst possible way by
also

130
00:07:11,130 --> 00:07:14,979
removing a lot of other things that they
contributed randomness

131
00:07:14,979 --> 00:07:18,469
and one thing it's really beautiful
about the patch is it's deceptive and

132
00:07:18,470 --> 00:07:19,569
how simple it is

133
00:07:19,569 --> 00:07:23,050
it sounds it a multi-line comment so you
see

134
00:07:23,050 --> 00:07:26,889
two insertions you know slash star

135
00:07:26,889 --> 00:07:30,099
a comment you know stop making this
happen air and then then

136
00:07:30,099 --> 00:07:33,110
the line which has not changed would

137
00:07:33,110 --> 00:07:36,840
and yet we should look at this its its
beautiful because upon first looking at

138
00:07:36,840 --> 00:07:38,000
you

139
00:07:38,000 --> 00:07:42,440
in

140
00:07:42,440 --> 00:07:45,590
for you dreams

141
00:07:45,590 --> 00:07:49,020
mom yeah

142
00:07:49,020 --> 00:07:52,530
area various so if you if you notice I
am

143
00:07:52,530 --> 00:07:56,120
the MD update and the MD update are both
commented out but it is

144
00:07:56,120 --> 00:07:59,379
it it's kind of non obvious that it is

145
00:07:59,379 --> 00:08:03,319
that its commented out because he you
see it's not green it's not changed but

146
00:08:03,319 --> 00:08:04,400
in fact it's

147
00:08:04,400 --> 00:08:08,990
I'm yeah it's not in effect anymore so
just looking at the patch it looks like

148
00:08:08,990 --> 00:08:09,789
at just the

149
00:08:09,789 --> 00:08:13,389
quick glance that it's not really a big
deal I'm

150
00:08:13,389 --> 00:08:17,190
I I mean the first time someone recently
saw this page so i cud they just had a

151
00:08:17,190 --> 00:08:19,979
comment it's not a big deal but I
actually like what's that's the

152
00:08:19,979 --> 00:08:23,080
worse by Devins ever had haha

153
00:08:23,080 --> 00:08:27,030
and was was funny about this is you can
tell us again this page is very popular

154
00:08:27,030 --> 00:08:30,740
if you google open SSL SVN and trunk

155
00:08:30,740 --> 00:08:34,140
you get a link to that that def

156
00:08:34,140 --> 00:08:37,580
so that is the most popular search
result I

157
00:08:37,580 --> 00:08:41,270
and the problem is clearly not limited
to two a single version of Debian and

158
00:08:41,270 --> 00:08:41,939
has been in

159
00:08:41,940 --> 00:08:45,170
in the Debian stable for a year

160
00:08:45,170 --> 00:08:48,729
but it has from there been taken into as
a distribution said buildup on

161
00:08:48,730 --> 00:08:52,930
on Debian including for popular going to
which i think is the most popular

162
00:08:52,930 --> 00:08:53,470
desktop

163
00:08:53,470 --> 00:08:56,790
distribution so it it has spread very
widely

164
00:08:56,790 --> 00:09:00,810
into into many districts and has only
after you're in may have to see it been

165
00:09:00,810 --> 00:09:01,520
patched

166
00:09:01,520 --> 00:09:04,900
and and the interesting thing about the
patches in violation of the end zone

167
00:09:04,900 --> 00:09:05,709
policy

168
00:09:05,710 --> 00:09:09,570
on the issue at least from my reading on
it I'm they publicly patched

169
00:09:09,570 --> 00:09:13,370
this before the day disclose the book

170
00:09:13,370 --> 00:09:17,960
and the interesting thing if you any
viewer for mayor with the

171
00:09:17,960 --> 00:09:21,250
deny hosts package they have a nice
little graph

172
00:09:21,250 --> 00:09:24,360
and the graph showed and increase

173
00:09:24,360 --> 00:09:29,050
a brute-force attempts basically after
the patch but before disclosure

174
00:09:29,050 --> 00:09:32,120
like an incredible light several orders
of magnitude higher

175
00:09:32,120 --> 00:09:35,170
and their couple news articles written
about this unfortunately we couldn't get

176
00:09:35,170 --> 00:09:37,630
the graph because the tonight host's
website

177
00:09:37,630 --> 00:09:42,450
doesn't keep arm by aggregate stats that
you can get from a specific date

178
00:09:42,450 --> 00:09:45,800
would be kinda need to have that if
anyone has a

179
00:09:45,800 --> 00:09:52,800
confine it

180
00:09:55,090 --> 00:10:00,460
yes yeah its you for all security bugs
there's a lot of people watching

181
00:10:00,460 --> 00:10:04,790
every Linux kernel you know change
regardless with the comment says the

182
00:10:04,790 --> 00:10:06,800
check to see if it has secure
applications

183
00:10:06,800 --> 00:10:10,030
people are obviously reverse engineering
Microsoft patches

184
00:10:10,030 --> 00:10:13,880
there's no reason to believe that people
are doing the same for distribution

185
00:10:13,880 --> 00:10:14,640
updates as well

186
00:10:14,640 --> 00:10:17,870
now the people even look at binary
updates a lot

187
00:10:17,870 --> 00:10:22,020
with all Windows patches are reverse
engineer to see what fun abilities that

188
00:10:22,020 --> 00:10:22,660
patch so

189
00:10:22,660 --> 00:10:25,939
having a source code update is so much
easier to it

190
00:10:25,940 --> 00:10:30,550
have yet so it def different programs
affect it but it's pretty much

191
00:10:30,550 --> 00:10:33,680
any program that generates cryptographic
keys using

192
00:10:33,680 --> 00:10:37,850
open SSL ivory one of which being SSH
disused

193
00:10:37,850 --> 00:10:41,180
are as a secure looking to service its
its use by

194
00:10:41,180 --> 00:10:44,460
limited number of people pretty much
everybody in this room probably

195
00:10:44,460 --> 00:10:48,290
nada that fraction of the internet
population but it doesn't affect most

196
00:10:48,290 --> 00:10:49,510
systems sense

197
00:10:49,510 --> 00:10:53,200
that this system that you get your data
from that you trust

198
00:10:53,200 --> 00:10:56,710
might be affected by some at not having
a weeki and

199
00:10:56,710 --> 00:11:00,050
as is its use is a I a number of
different keys and all those

200
00:11:00,050 --> 00:11:03,150
and could be affected so they're def the
host keys

201
00:11:03,150 --> 00:11:08,270
that on first lookin you tell you as
shes you trust this post and

202
00:11:08,270 --> 00:11:11,910
every time you log into your computer
locally will check was a

203
00:11:11,910 --> 00:11:15,689
did dipping a print of that machine has
changed to prevent man in the middle

204
00:11:15,690 --> 00:11:16,320
attacks

205
00:11:16,320 --> 00:11:19,500
so now given that these keys can be

206
00:11:19,500 --> 00:11:23,520
can be broken on did to self that you
trust can be spoofed

207
00:11:23,520 --> 00:11:27,680
and as a key so used fall password let's
lock in

208
00:11:27,680 --> 00:11:32,120
so you tell the server to trust your key
and to let you lookin was out

209
00:11:32,120 --> 00:11:36,440
given any and has a credentials and does
too can be weak so

210
00:11:36,440 --> 00:11:40,030
if say to root account is a week
certificate

211
00:11:40,030 --> 00:11:43,400
dis can easily be brute force is only
32,000

212
00:11:43,400 --> 00:11:47,200
different ones on any given Architektur
15 but Sandra P

213
00:11:47,200 --> 00:11:50,840
and those can all be tried nice side
effect is that that

214
00:11:50,840 --> 00:11:55,530
does not leave a trace in the lock so if
you if you provide a wrong password

215
00:11:55,530 --> 00:11:59,430
it will it will create a line in the
lock if you provide a from certificates

216
00:11:59,430 --> 00:12:02,890
it will not in most cases now the last
keys and

217
00:12:02,890 --> 00:12:06,600
the ones that haven't gotten much
attention and

218
00:12:06,600 --> 00:12:09,660
was for got sued his bike I did the
session key so to

219
00:12:09,660 --> 00:12:12,689
to provide forward secrecy we'll get to
that in a minute and

220
00:12:12,690 --> 00:12:17,040
in initially to in each session a new
key is generated

221
00:12:17,040 --> 00:12:21,329
that pose by disagree on and then does
use ickies a host keys are used to to

222
00:12:21,330 --> 00:12:22,240
sign that key

223
00:12:22,240 --> 00:12:26,720
to make sure that that both spice agree
on that now it does session keys to can

224
00:12:26,720 --> 00:12:27,540
be vulnerable

225
00:12:27,540 --> 00:12:30,890
and that since the session keys are
generated I'm

226
00:12:30,890 --> 00:12:34,080
at it at the beginning of each session
and

227
00:12:34,080 --> 00:12:37,790
date can be viable if one of two
computers is found in both

228
00:12:37,790 --> 00:12:42,160
and not necessarily any key that you can
look at so all the tools that have

229
00:12:42,160 --> 00:12:47,219
come out to 22 fixed SSH program dates
such a new computer for

230
00:12:47,220 --> 00:12:50,420
for we keys if viewed though

231
00:12:50,420 --> 00:12:55,430
without having a weeki look into and as
a computer who doesn't have we keys eyes

232
00:12:55,430 --> 00:12:56,080
have it has

233
00:12:56,080 --> 00:13:00,300
a broken open SSL library still though
session keys are predictable

234
00:13:00,300 --> 00:13:04,510
right so basically vid

235
00:13:04,510 --> 00:13:07,689
the issue is that diff you coming to
change I'm

236
00:13:07,690 --> 00:13:11,220
and there's there's an interesting I
mean

237
00:13:11,220 --> 00:13:14,510
did this particular thing was something
that I had fathers

238
00:13:14,510 --> 00:13:17,580
theoretically possible and I was trying
to work on a tool

239
00:13:17,580 --> 00:13:21,730
and then in researching the tool I found
that somehow it's actually re-written to

240
00:13:21,730 --> 00:13:22,640
an early step

241
00:13:22,640 --> 00:13:25,980
I am so these guys are

242
00:13:25,980 --> 00:13:29,830
badass from what I can tell basically
they

243
00:13:29,830 --> 00:13:33,020
the road so-so the three tools that are
appear

244
00:13:33,020 --> 00:13:37,140
are pretty much self-explanatory arm but
basically it can

245
00:13:37,140 --> 00:13:41,080
Jenner the first key we haven't tested
this but it seems reasonable from

246
00:13:41,080 --> 00:13:41,620
reading

247
00:13:41,620 --> 00:13:45,020
the a message source and also from
understand a little bit about the

248
00:13:45,020 --> 00:13:46,150
protocol on discussing

249
00:13:46,150 --> 00:13:49,640
people under more knowledgeable about it
myself on

250
00:13:49,640 --> 00:13:53,560
you have a couple of things you can do
on even without

251
00:13:53,560 --> 00:13:57,900
the week sees the secrecy the open SSH
conversation relies on

252
00:13:57,900 --> 00:14:03,020
the diffie-hellman and if either above
the secrets chosen by either side

253
00:14:03,020 --> 00:14:06,240
I'm is weak band you are screwed

254
00:14:06,240 --> 00:14:09,550
and this to a well take a peek ap file

255
00:14:09,550 --> 00:14:13,540
and the crypto sessions and it'll also
extract the authentication keys

256
00:14:13,540 --> 00:14:18,199
from the conversations are basically a
password can be decoded

257
00:14:18,200 --> 00:14:21,560
through that if this server you looked
into uses a week

258
00:14:21,560 --> 00:14:26,330
open SSL rate and and so they also told
the FSH which

259
00:14:26,330 --> 00:14:29,950
is just over-the-top its liquor it's
ridiculous they didn't need to write

260
00:14:29,950 --> 00:14:32,490
this as hrt allows you to

261
00:14:32,490 --> 00:14:37,430
toss in a number of identities most
people have their server configured

262
00:14:37,430 --> 00:14:40,930
Mike must have been people have their
server configured on by default to allow

263
00:14:40,930 --> 00:14:44,670
on six different rice so that means you
can try six different identities

264
00:14:44,670 --> 00:14:49,630
on SSH just normal in a loop in like
bash you could call six keys at a time

265
00:14:49,630 --> 00:14:51,490
and try and login and

266
00:14:51,490 --> 00:14:54,830
if you have a success you can narrow it
down pretty easily but they disrupt its

267
00:14:54,830 --> 00:14:56,000
cool then tries everything

268
00:14:56,000 --> 00:15:00,070
and in 10 minutes they can get an entire
set of keys on a

269
00:15:00,070 --> 00:15:03,870
for forgiven architecture and get into
the machine if there's a leaky

270
00:15:03,870 --> 00:15:07,740
on and like I said the decoder is

271
00:15:07,740 --> 00:15:11,970
if if someone wants the demoss for the
attendance

272
00:15:11,970 --> 00:15:15,120
oh yeah cr0 yeah that's right

273
00:15:15,120 --> 00:15:19,160
thanks thanks I'm so I mean if someone
wants to try this out I'm sure that

274
00:15:19,160 --> 00:15:19,790
would work

275
00:15:19,790 --> 00:15:23,290
it makes perfect sense that would work
but we didn't have time to do this we

276
00:15:23,290 --> 00:15:24,530
found at the very last minute

277
00:15:24,530 --> 00:15:28,089
so and any questions on

278
00:15:28,089 --> 00:15:32,230
on their on SSH bikes before we move on
to some other indications one thing we

279
00:15:32,230 --> 00:15:34,230
should also point out about that is like
even if you're

280
00:15:34,230 --> 00:15:38,360
say running like Red Hat Enterprise
Linux I go this is an affect me like

281
00:15:38,360 --> 00:15:42,760
pay good money for it Enterprise Linux

282
00:15:42,760 --> 00:15:47,020
hum then you knows what if your users is
learning how to use Linux and they're

283
00:15:47,020 --> 00:15:47,839
like Allentown

284
00:15:47,839 --> 00:15:51,470
on when the next to me download Ubuntu
you know they forgot as well as a safe

285
00:15:51,470 --> 00:15:52,780
thing and upload their key

286
00:15:52,780 --> 00:15:56,060
so even though you think you not
affected if the user jim is their own

287
00:15:56,060 --> 00:15:58,900
key on a portable system in place is
that on your system

288
00:15:58,900 --> 00:16:02,650
your entire service open to attack and
it's not like there are no local

289
00:16:02,650 --> 00:16:07,040
kinda wanna million monks and then there
there's also some really beautiful

290
00:16:07,040 --> 00:16:11,140
Pam timing attacks in this age it's very
easy to find out if the user exists on a

291
00:16:11,140 --> 00:16:12,220
given system

292
00:16:12,220 --> 00:16:16,010
completely unrelated to this blog so if
you combine

293
00:16:16,010 --> 00:16:19,569
a couple of other open SSH issues
together you can

294
00:16:19,570 --> 00:16:22,570
probably you can probably get pretty far
and

295
00:16:22,570 --> 00:16:25,970
as you know is just mentioning the lace
gowns rock-solid

296
00:16:25,970 --> 00:16:31,200
no problems so GM in its own word yet
user looks like I'll be impossible for

297
00:16:31,200 --> 00:16:31,860
them to read

298
00:16:31,860 --> 00:16:38,860
obviously sarcasm said

299
00:16:42,990 --> 00:16:46,980
as the question is where it was a it was
as a UNIX flavors affected

300
00:16:46,980 --> 00:16:50,670
and they are affected if day dude talk
to

301
00:16:50,670 --> 00:16:53,709
a Debian system so somebody from Solaris
locks

302
00:16:53,709 --> 00:16:57,150
on to use Debian was ur was a week SSL

303
00:16:57,150 --> 00:17:01,390
and they affected too yes

304
00:17:01,390 --> 00:17:04,879
exactly all if Dickies work generated
locally which

305
00:17:04,880 --> 00:17:09,220
is often the case users you typically
keep did the private portion of two key

306
00:17:09,220 --> 00:17:10,199
on your home machine

307
00:17:10,199 --> 00:17:14,310
are on whatever machine that use to lock
in and so this is where the keys are

308
00:17:14,310 --> 00:17:15,109
generated

309
00:17:15,110 --> 00:17:18,790
and of that ministry does have no ideas
where the keys come from

310
00:17:18,790 --> 00:17:23,010
do in

311
00:17:23,010 --> 00:17:26,109
up we we will get to counter measures

312
00:17:26,110 --> 00:17:30,000
in in a minute between if you guys wanna
ask questions either use the microphone

313
00:17:30,000 --> 00:17:31,060
are

314
00:17:31,060 --> 00:17:34,070
are and line up am value

315
00:17:34,070 --> 00:17:37,280
to Mikes to my results than the nice

316
00:17:37,280 --> 00:17:42,090
and see if there's a lot of people at
home can follow along very

317
00:17:42,090 --> 00:17:45,600
yes ma'am presentation on

318
00:17:45,600 --> 00:17:49,960
the best cryptographic system the world
can be defeated by keylogger correct

319
00:17:49,960 --> 00:17:53,070
and unless you have a hundred percent
physical security

320
00:17:53,070 --> 00:17:56,570
it's very easy for a keylogger pick all
the stuff up and break it all

321
00:17:56,570 --> 00:17:59,629
do you have any thoughts about how you
can defeat keyloggers

322
00:17:59,630 --> 00:18:04,140
on and how you can get around that
vulnerability well so in this case a

323
00:18:04,140 --> 00:18:07,670
Keylogger is definitely different
problem

324
00:18:07,670 --> 00:18:12,860
I vid the thing here is that weekend
passively recorder traffic

325
00:18:12,860 --> 00:18:16,929
without access to either the system's
and at any point in the future depending

326
00:18:16,929 --> 00:18:18,310
on the details of the protocol

327
00:18:18,310 --> 00:18:21,860
decrepit so if you're using a Debian
system that's vulnerable to this

328
00:18:21,860 --> 00:18:24,929
basically all of the cryptographic
operations that you do

329
00:18:24,929 --> 00:18:28,230
are totally broken and you might as well
not even bother encrypting them

330
00:18:28,230 --> 00:18:31,409
so the keylogger portion is

331
00:18:31,409 --> 00:18:35,350
very different problem entirely but I
mean the real issue here is that

332
00:18:35,350 --> 00:18:40,429
random numbers can break even the
strongest cypress and the best protocols

333
00:18:40,429 --> 00:18:43,800
if they're poorly generated I didn't
mean to be off topic I didn't know if

334
00:18:43,800 --> 00:18:46,129
you have any thoughts speculators and
how to get around

335
00:18:46,130 --> 00:18:49,580
keyloggers can be defeated by
multi-factor authentication so be on

336
00:18:49,580 --> 00:18:52,830
something that you know you should have
something in your possession that proves

337
00:18:52,830 --> 00:18:53,889
that you are you

338
00:18:53,890 --> 00:18:57,750
and something that you can not to steal
by copying some data of

339
00:18:57,750 --> 00:19:01,909
thank you yes so move moving on to some
other applications that

340
00:19:01,909 --> 00:19:06,480
I just one quick question bsa say so
know it's ok you work that when this

341
00:19:06,480 --> 00:19:07,270
thing

342
00:19:07,270 --> 00:19:10,889
was made public is like all this is
Christmas for both the NSA

343
00:19:10,890 --> 00:19:15,190
and the bad guys because if they'd been
recording a whole once a traffic for the

344
00:19:15,190 --> 00:19:16,409
past year

345
00:19:16,409 --> 00:19:20,040
suddenly big at all you know what's the
difference

346
00:19:20,040 --> 00:19:23,280
almost so like this

347
00:19:23,280 --> 00:19:26,820
my question is a Hazare believe like

348
00:19:26,820 --> 00:19:30,810
implication her you know nah let's come
forward about you know

349
00:19:30,810 --> 00:19:34,030
anything bad that's happened because the
same I know

350
00:19:34,030 --> 00:19:37,730
we know that this is really bad but as
in the fall under aftermath

351
00:19:37,730 --> 00:19:41,300
I i mean I've had some dealings with the
DHS asked me to help them with things

352
00:19:41,300 --> 00:19:41,700
which

353
00:19:41,700 --> 00:19:45,429
I mentioned yesterday and my called to
talk and I'm

354
00:19:45,429 --> 00:19:49,890
I don't think you have a lot to worry
about from some wings in the Gulf

355
00:19:49,890 --> 00:19:53,169
I mean sorry I mean they're definitely

356
00:19:53,169 --> 00:19:56,640
I mean if the NSA wants to own your your
screwed I mean

357
00:19:56,640 --> 00:20:00,200
you can beat them but arm

358
00:20:00,200 --> 00:20:03,690
I think that this is unfortunately if if
you were being

359
00:20:03,690 --> 00:20:07,280
if you're using Debian and you're under
surveillance you're in deep shit

360
00:20:07,280 --> 00:20:10,940
there's no question I mean it all it
takes is

361
00:20:10,940 --> 00:20:14,070
and some time I mean that's the
interesting thing I mean security is

362
00:20:14,070 --> 00:20:15,399
useful for

363
00:20:15,400 --> 00:20:19,480
I mean you need to evaluate your wrists
and then determine what you actually

364
00:20:19,480 --> 00:20:23,030
have as a threshold because I'm

365
00:20:23,030 --> 00:20:27,040
in in this case something the a couple
days ago seems like it would be good for

366
00:20:27,040 --> 00:20:29,200
years and years and years turns out that
it's not

367
00:20:29,200 --> 00:20:32,600
so whatever you were doing if you're
trying to hide it you

368
00:20:32,600 --> 00:20:35,880
you're probably failed miserably and
it's all your fault and

369
00:20:35,880 --> 00:20:42,100
thats can a German against that's why
don't use computers

370
00:20:42,100 --> 00:20:45,740
and as hole in the forest pick up take
photographs

371
00:20:45,740 --> 00:20:48,800
my question is has this had any fallout

372
00:20:48,800 --> 00:20:54,480
or has has there been any change in that
the Debian procedures and protocols for

373
00:20:54,480 --> 00:20:59,460
who gets to work on the crypto packages
when their packaging from them for

374
00:20:59,460 --> 00:21:00,990
damian or

375
00:21:00,990 --> 00:21:04,179
you're basically is Debbie and put in
place any

376
00:21:04,179 --> 00:21:07,840
practices or procedures to make sure
this kinda thing doesn't happen

377
00:21:07,840 --> 00:21:12,459
don't let s go Mike Anderson is Devin
developer on the security team

378
00:21:12,460 --> 00:21:15,870
no excellent

379
00:21:15,870 --> 00:21:19,690
alright but good procedures when place
before that which is violated into

380
00:21:19,690 --> 00:21:21,050
places where debt

381
00:21:21,050 --> 00:21:24,720
that but the patch was not propagated up
probably and

382
00:21:24,720 --> 00:21:28,390
def patch was was issue before the
announcement

383
00:21:28,390 --> 00:21:32,630
suppose Ive which I think I just that's
not actually a policy

384
00:21:32,630 --> 00:21:36,980
mention your okay it should be one I
thought as a suggestion

385
00:21:36,980 --> 00:21:41,470
out there suggestion on a policy re: it
should probably be a policy

386
00:21:41,470 --> 00:21:45,210
29 publicly disclose the patches for
security

387
00:21:45,210 --> 00:21:49,200
releases I it is a policy for

388
00:21:49,200 --> 00:21:53,100
issues that are embargoed under
intersect

389
00:21:53,100 --> 00:21:57,000
if they are already publicly known on
the Internet there's no point

390
00:21:57,000 --> 00:22:00,310
hiding but I have the bike wasn't
publicly known on the Internet

391
00:22:00,310 --> 00:22:03,510
right it wasn't actually skewed ways

392
00:22:03,510 --> 00:22:07,370
the the patch was applied to servers in

393
00:22:07,370 --> 00:22:11,940
understand there is a icing right so
wasn't known as a security guard service

394
00:22:11,940 --> 00:22:12,860
Rd revealed

395
00:22:12,860 --> 00:22:16,370
internet was friend I make sense

396
00:22:16,370 --> 00:22:20,050
I guess my question was more along the
lines of

397
00:22:20,050 --> 00:22:24,070
who gets permission actually to to
submit a patch

398
00:22:24,070 --> 00:22:28,939
on on crypto code have if the you know
vetted the people who have

399
00:22:28,940 --> 00:22:33,230
the the commit privileges their at just
to talk to the vetting issue

400
00:22:33,230 --> 00:22:38,580
I one sat in a room with a bunch of farm
shud FBI tapes that Cisco and they were

401
00:22:38,580 --> 00:22:39,570
talking about how

402
00:22:39,570 --> 00:22:43,230
since everyone in the room was vetted I
they could talk freely

403
00:22:43,230 --> 00:22:46,480
about their plans to want to control the
Internet

404
00:22:46,480 --> 00:22:50,230
I'm and then they talked about a bunch
of other stuff that they shouldn't have

405
00:22:50,230 --> 00:22:52,560
talked about in front of me because I
have

406
00:22:52,560 --> 00:22:55,590
next and I respect for them and I'm

407
00:22:55,590 --> 00:22:59,750
basically I think the vetting process
just and sometimes can lead to something

408
00:22:59,750 --> 00:23:00,450
good by

409
00:23:00,450 --> 00:23:04,870
the Debian way of dealing with this
which may be my taken speech you is

410
00:23:04,870 --> 00:23:08,360
about as reasonable I think as any
vetting process can be

411
00:23:08,360 --> 00:23:11,510
which is well if you wanna

412
00:23:11,510 --> 00:23:15,610
mention how every demeaned or can upload
any package in the repository and things

413
00:23:15,610 --> 00:23:17,450
like that

414
00:23:17,450 --> 00:23:20,990
yeah I mean a as the question goes
further upstream

415
00:23:20,990 --> 00:23:24,770
me message development team as accessed

416
00:23:24,770 --> 00:23:28,090
things what's the vetting process there

417
00:23:28,090 --> 00:23:31,459
I mean you can keep going

418
00:23:31,460 --> 00:23:34,690
our state yes

419
00:23:34,690 --> 00:23:39,220
it's not how do you trust those people
it's like a a group of activists

420
00:23:39,220 --> 00:23:43,110
I and then once the GPG key sending
party refused to sign a key because I

421
00:23:43,110 --> 00:23:45,700
will provide government issued ID

422
00:23:45,700 --> 00:23:48,760
exactly I was like are you kidding me
trust them mean

423
00:23:48,760 --> 00:23:51,879
carry em this is me and you know you're
signing Mikey

424
00:23:51,880 --> 00:23:55,480
and that represents me well we need a
driver's license

425
00:23:55,480 --> 00:23:59,980
break or I know I don't want to talk to
you

426
00:23:59,980 --> 00:24:03,890
I'm so I was by no one thing that you're
mentioning earlier this year

427
00:24:03,890 --> 00:24:07,150
you're mentioning that if you

428
00:24:07,150 --> 00:24:10,190
had a similar spots for example and

429
00:24:10,190 --> 00:24:13,909
Devin or going to user I used as a stage

430
00:24:13,909 --> 00:24:17,549
keys you connected then you might have
an issue with this

431
00:24:17,549 --> 00:24:22,250
particular problem but I think it's
actually much larger problem

432
00:24:22,250 --> 00:24:28,130
than that because the possible keys that
could be generated for a host key or

433
00:24:28,130 --> 00:24:31,720
for an SSH authentication key are
limited set

434
00:24:31,720 --> 00:24:34,850
and less those keys are blacklisted

435
00:24:34,850 --> 00:24:38,350
so that your sole heiress box can
generate them

436
00:24:38,350 --> 00:24:42,960
there's a ceta something like thirty two
thousand keys that could potentially be

437
00:24:42,960 --> 00:24:43,659
generated

438
00:24:43,659 --> 00:24:47,440
anyone could use to log into your slurs
box whether or not you

439
00:24:47,440 --> 00:24:50,440
have a Devin or Ubuntu user

440
00:24:50,440 --> 00:24:53,710
you should have a

441
00:24:53,710 --> 00:24:56,870
blacklisted these keys otherwise your
its

442
00:24:56,870 --> 00:25:00,750
they will turn on said well so it's
complicated because you have

443
00:25:00,750 --> 00:25:06,299
basically a lot more than 2 215 $50,000
to 215 fifties per

444
00:25:06,299 --> 00:25:10,750
architecture and you have variable based
on

445
00:25:10,750 --> 00:25:14,260
algorithm and then you also have
something based on key size so like

446
00:25:14,260 --> 00:25:18,549
John Gilmore for example is a really
funny guy and I respect him a lot so I

447
00:25:18,549 --> 00:25:20,889
need when he when he generates as a
tease

448
00:25:20,890 --> 00:25:23,890
he picks a random number above arm

449
00:25:23,890 --> 00:25:27,539
life four thousand 98 or something like
this: am

450
00:25:27,539 --> 00:25:31,460
that somewhere between Matt and Mike
some ridiculously high number for

451
00:25:31,460 --> 00:25:32,770
czarist eighties so that

452
00:25:32,770 --> 00:25:38,020
if someone builds a free computer table
or 184 2048 4096 bikinis or whatever

453
00:25:38,020 --> 00:25:42,190
on he's not going to fall into that like
precomputed tables

454
00:25:42,190 --> 00:25:45,520
up by one because it's a you are off by
like a thousand

455
00:25:45,520 --> 00:25:49,360
on the so and that doesn't protect am
but it would protect them against the

456
00:25:49,360 --> 00:25:52,549
fact that everybody uses everybody uses
the default is the

457
00:25:52,549 --> 00:25:56,139
main personally targeted but it also
means generating a blacklist is really

458
00:25:56,140 --> 00:25:56,830
difficult

459
00:25:56,830 --> 00:26:00,168
because the blacklist is going to you

460
00:26:00,169 --> 00:26:04,760
potentially give false false negatives
because you could have a week he

461
00:26:04,760 --> 00:26:09,039
it doesn't fit into that nice neat black
list because it would take a long time

462
00:26:09,039 --> 00:26:09,740
to generate

463
00:26:09,740 --> 00:26:14,700
at even it with me to the 15th you would
still have a lot of

464
00:26:14,700 --> 00:26:18,200
I mean if you have a to 2080 you may
have to generate

465
00:26:18,200 --> 00:26:21,929
2 215 for those keys so it's there's a
lot there blacklisting it's very

466
00:26:21,929 --> 00:26:22,470
difficult

467
00:26:22,470 --> 00:26:25,590
I'm okay

468
00:26:25,590 --> 00:26:29,409
act so I'm also working on it or I'm and

469
00:26:29,409 --> 00:26:33,419
tore was affected by this I'm we got
away

470
00:26:33,419 --> 00:26:37,570
very likely this could have been a lot
worse basically

471
00:26:37,570 --> 00:26:41,120
and there's a about 15 1500 to 2000 tor
realize

472
00:26:41,120 --> 00:26:46,080
you shall run one I'm about 300 of them

473
00:26:46,080 --> 00:26:50,139
and many several number mine machines
actually which was very disappointing

474
00:26:50,140 --> 00:26:53,860
I'm they had wikis and

475
00:26:53,860 --> 00:26:57,980
any anyone there was using a circuit
that consisted entirely

476
00:26:57,980 --> 00:27:02,990
love those three hundred realize on
their traffic could potentially

477
00:27:02,990 --> 00:27:06,340
basically it somewhere at a tool please
don't read it all

478
00:27:06,340 --> 00:27:09,460
but if someone were to read a tool it's
the

479
00:27:09,460 --> 00:27:13,960
it would be possible to be cryptic I am
we

480
00:27:13,960 --> 00:27:17,980
detected all these machines basically
instantaneously

481
00:27:17,980 --> 00:27:21,230
when we when we learned about the
vulnerability we publish

482
00:27:21,230 --> 00:27:24,429
the blacklist in the directory
authorities so that clients

483
00:27:24,429 --> 00:27:27,820
they were using the door some the Tor
network

484
00:27:27,820 --> 00:27:32,309
would basically not select de 300
servers that had we keys so we protect

485
00:27:32,309 --> 00:27:35,330
our USERs right off the bat and those
three hundred service continue to run

486
00:27:35,330 --> 00:27:37,399
but no one was talking to them by using
them

487
00:27:37,399 --> 00:27:40,830
which was good its

488
00:27:40,830 --> 00:27:47,049
I am definitely bad to have a lot of
servers all on a single platform

489
00:27:47,049 --> 00:27:50,820
and that's right I this also affected
hidden services so if you've ever used

490
00:27:50,820 --> 00:27:52,240
the dot onion address

491
00:27:52,240 --> 00:27:55,380
and the identity keys for dominance I'm

492
00:27:55,380 --> 00:27:59,520
those hidden services were also
generated in the same way

493
00:27:59,520 --> 00:28:02,750
as any other key and as a result those

494
00:28:02,750 --> 00:28:05,870
could be spoofed and you could publish a
descriptor to the network

495
00:28:05,870 --> 00:28:09,770
and when the introduction to set up it
would be impossible to do an amendment

496
00:28:09,770 --> 00:28:10,020
on

497
00:28:10,020 --> 00:28:13,960
theory your the only thing stopping that
is the cryptographic key and it

498
00:28:13,960 --> 00:28:17,570
it was weak as well very bad

499
00:28:17,570 --> 00:28:22,230
things could have happened if four of
the six directory service had been

500
00:28:22,230 --> 00:28:22,860
honorable

501
00:28:22,860 --> 00:28:26,799
as I said we are really lucky I'm we
have so

502
00:28:26,799 --> 00:28:30,710
specifically the version 3 protocol

503
00:28:30,710 --> 00:28:35,039
am the directory authorities have to
build a majority consensus

504
00:28:35,039 --> 00:28:38,289
so three is bad by

505
00:28:38,289 --> 00:28:41,950
I'm for would have been a lot worse
three basically you could say like well

506
00:28:41,950 --> 00:28:45,929
on I'm in a spoof these specific
directory authorities

507
00:28:45,929 --> 00:28:49,409
and I'm going to have these great resort
is prefer these servers

508
00:28:49,409 --> 00:28:52,980
and suggest these recommended versions
and there's just

509
00:28:52,980 --> 00:28:56,760
things that you can do because the to
our client does take a cue from the

510
00:28:56,760 --> 00:28:57,750
directory is already

511
00:28:57,750 --> 00:29:01,190
and you can override it obviously in the
config file but many people

512
00:29:01,190 --> 00:29:04,220
don't am locally though

513
00:29:04,220 --> 00:29:08,120
there are only three so we we change
those keys immediately

514
00:29:08,120 --> 00:29:11,750
but we continue to sign the network
status with the old he's was the new

515
00:29:11,750 --> 00:29:12,919
keys Intel

516
00:29:12,919 --> 00:29:17,169
we then remove them I am this was

517
00:29:17,169 --> 00:29:20,250
pretty much the best case scenario it
could have been a lot worse

518
00:29:20,250 --> 00:29:23,340
and we're very lucky and as far as to
our users

519
00:29:23,340 --> 00:29:27,139
I am they were using Debian so previous
stuff to be for any

520
00:29:27,139 --> 00:29:31,929
platform between users they were using
Debian were affected by all the above

521
00:29:31,929 --> 00:29:36,340
new package replace the wheaties just
like move them out of the way

522
00:29:36,340 --> 00:29:39,840
but the worst thing is that it doesn't
matter what too early tutorial ways

523
00:29:39,840 --> 00:29:41,159
you're using

524
00:29:41,159 --> 00:29:45,549
because basically you have the
diffie-hellman problem you have

525
00:29:45,549 --> 00:29:49,330
all the other bikes on the injury issues
and every cryptographic operation you

526
00:29:49,330 --> 00:29:52,039
perform that uses random numbers is
pretty much broken

527
00:29:52,039 --> 00:29:55,669
so if you read Debbie in user using tor

528
00:29:55,669 --> 00:29:59,330
it was bad news for you I'm and so again

529
00:29:59,330 --> 00:30:02,360
please don't write that tool for to
curbing it wouldn't help anybody that

530
00:30:02,360 --> 00:30:07,809
you wanna help

531
00:30:07,809 --> 00:30:13,110
so this is where I talk about SSL so
what it means to be able to sniff SSL

532
00:30:13,110 --> 00:30:16,559
you can spoof web sites I'm on dues

533
00:30:16,559 --> 00:30:20,649
see the traffic can do this with DNS
spoofing or are spoofing

534
00:30:20,649 --> 00:30:23,710
so you can get the traffic going through
you see can sniff it or see Kim and

535
00:30:23,710 --> 00:30:24,600
middle it

536
00:30:24,600 --> 00:30:28,059
and once he made candy crypt SSL traffic
you get

537
00:30:28,059 --> 00:30:31,750
passwords credit card numbers and the
best part about it is is most like

538
00:30:31,750 --> 00:30:35,330
a great signal to noise ratio people
don't use SSL for things are not really

539
00:30:35,330 --> 00:30:38,780
want to keep secret service nefarious
SSL

540
00:30:38,780 --> 00:30:42,408
um get immersed in things on notable
example

541
00:30:42,409 --> 00:30:45,419
for this blesses cells also use for

542
00:30:45,419 --> 00:30:49,460
om just because it's a you know a good
protocol and it's pretty easy is to say

543
00:30:49,460 --> 00:30:54,059
well just rap ssl/tls around it and you
have a secure transport

544
00:30:54,059 --> 00:30:57,700
so use for various other things for
example the updates for German taxpaying

545
00:30:57,700 --> 00:30:58,399
software

546
00:30:58,399 --> 00:31:02,780
that that has starred in the same same
and under the same key as white house

547
00:31:02,780 --> 00:31:04,440
that cough

548
00:31:04,440 --> 00:31:07,669
yes forbes group I

549
00:31:07,669 --> 00:31:10,700
um all this is also used

550
00:31:10,700 --> 00:31:13,879
our was also use that we keys

551
00:31:13,879 --> 00:31:17,270
so little identity theft risk there

552
00:31:17,270 --> 00:31:20,860
back to you could push out updates to
get soft which is knowing a weeki

553
00:31:20,860 --> 00:31:23,899
and make to suffer update to what every
you

554
00:31:23,899 --> 00:31:27,169
wanted to run and so

555
00:31:27,169 --> 00:31:31,419
um we're looking at this you know
everyone is generating the blacklists

556
00:31:31,419 --> 00:31:34,720
and psalm HD Moore also created all the
keys for s

557
00:31:34,720 --> 00:31:39,659
for SSH um but we're we're looking more
at SSL because we thought that affected

558
00:31:39,659 --> 00:31:41,330
more people's day-to-day lives

559
00:31:41,330 --> 00:31:44,960
and so we need to generate our own keys
so how do we do this

560
00:31:44,960 --> 00:31:48,409
I'm we also need near obviously this is
for good and you know

561
00:31:48,409 --> 00:31:51,990
for I exploitation and defense you need
to know om

562
00:31:51,990 --> 00:31:55,760
what keyser weeks he can fix them a need
to be able to I am

563
00:31:55,760 --> 00:31:59,169
get the key if you want to read the
traffic and so we won't be as exhausted

564
00:31:59,169 --> 00:31:59,830
as possible

565
00:31:59,830 --> 00:32:03,408
so the full cases where base the
F-fifteen bits

566
00:32:03,409 --> 00:32:06,990
for the process identifiers 32,000
possible keys

567
00:32:06,990 --> 00:32:10,039
and then what we generate them for each
possible

568
00:32:10,039 --> 00:32:14,158
mom model a size so thousand 24 2048

569
00:32:14,159 --> 00:32:18,899
4,096 although in reality everyone
really just uses a thousand 24

570
00:32:18,899 --> 00:32:24,200
I am and what is it like 3 percent use
2048 bit keys sites on the internet

571
00:32:24,200 --> 00:32:27,330
yeah and if you really paranoid people
eight thousand pittsburgh there's really

572
00:32:27,330 --> 00:32:28,799
no point in that

573
00:32:28,799 --> 00:32:32,080
yet day as vulnerable it

574
00:32:32,080 --> 00:32:35,720
I'm and also there is like mention
before so the entropy was the

575
00:32:35,720 --> 00:32:39,010
the you know the little edge be there
remained I was based on the computing

576
00:32:39,010 --> 00:32:40,929
platform notably the endianness

577
00:32:40,929 --> 00:32:44,629
and the sizeof long mother was 32-bit or
64-bit

578
00:32:44,629 --> 00:32:49,290
processor om so difficult times in
rickys a friend since

579
00:32:49,290 --> 00:32:55,049
2048 key to 2048 bit key takes on
average 1.5 seconds to generate

580
00:32:55,049 --> 00:32:58,510
a thousand 24-bit is like point 15
seconds

581
00:32:58,510 --> 00:33:02,379
and we needed 100000 these keys and when
you can quickly

582
00:33:02,379 --> 00:33:07,030
um also cuz you know impatience and
they're waiting five days on a single

583
00:33:07,030 --> 00:33:07,629
machine

584
00:33:07,629 --> 00:33:10,740
kinda sucks well you know news is going
on and you want to find out things

585
00:33:10,740 --> 00:33:11,760
immediately

586
00:33:11,760 --> 00:33:16,899
army be nice to have a lot more machines

587
00:33:16,899 --> 00:33:20,290
so

588
00:33:20,290 --> 00:33:24,399
return to Amazon I Amazon Web Services

589
00:33:24,399 --> 00:33:27,460
revolutionize revenue revolutionizing um

590
00:33:27,460 --> 00:33:30,889
finished with it um cloud computing

591
00:33:30,889 --> 00:33:34,240
basically there's three your primary
services that's um

592
00:33:34,240 --> 00:33:37,690
we may do so it was qone called s3 this
is %ah

593
00:33:37,690 --> 00:33:41,330
simple scalable storage its Web web
addressable

594
00:33:41,330 --> 00:33:44,869
buckets of storage can store pseudo
files on there and miss you build the

595
00:33:44,869 --> 00:33:46,270
filesystem out a bit

596
00:33:46,270 --> 00:33:50,049
it's nice you basically build I'm for
how much sir ji use for how long

597
00:33:50,049 --> 00:33:53,119
so we're using a good mass storage for
not very long so it's actually really

598
00:33:53,119 --> 00:33:54,100
cheap

599
00:33:54,100 --> 00:33:57,980
I Elastic Compute Cloud this is the one
that i've been waiting for a good excuse

600
00:33:57,980 --> 00:33:58,700
to use

601
00:33:58,700 --> 00:34:01,760
and I saw this sounds like of totally
doing it

602
00:34:01,760 --> 00:34:04,899
um let this is lets you rents I have

603
00:34:04,899 --> 00:34:09,790
basically virtual machines on various
sizes and a 32 bit machine or 64 bit AMD

604
00:34:09,790 --> 00:34:10,759
server

605
00:34:10,760 --> 00:34:13,919
an depend on the number of cores on that
the server has

606
00:34:13,918 --> 00:34:17,279
you pay for different amounts I'm per
hour

607
00:34:17,280 --> 00:34:20,549
and see you base your bill by machine
our and so

608
00:34:20,549 --> 00:34:24,239
bomb whenever now using MPI getting
billed but first let's do is when you

609
00:34:24,240 --> 00:34:24,560
want

610
00:34:24,560 --> 00:34:29,029
a lot of computing fast I'm you can take
up to 20 instances

611
00:34:29,030 --> 00:34:32,270
and just start them running home

612
00:34:32,270 --> 00:34:36,730
and it's kind of Cornell this amazon has
a service call the same

613
00:34:36,730 --> 00:34:40,629
cue service and this is a simple web
service just you

614
00:34:40,629 --> 00:34:44,129
basically push attacks blob on to the Q

615
00:34:44,129 --> 00:34:47,770
Papa text blob of the queue any base to
build a protocol of a

616
00:34:47,770 --> 00:34:50,949
this

617
00:34:50,949 --> 00:34:54,100
I am and to generate the keys how I did
this

618
00:34:54,100 --> 00:34:57,220
is I am one I mean I could have used a

619
00:34:57,220 --> 00:35:01,299
a boot CD to the num to run Ubuntu and
get the formal code

620
00:35:01,299 --> 00:35:04,400
or reinstall on a she have mine but

621
00:35:04,400 --> 00:35:07,880
when Amazon provides pre built virtual
machines

622
00:35:07,880 --> 00:35:11,410
you can just use the vulnerable machines
if they don't pass the just

623
00:35:11,410 --> 00:35:15,109
great machine once and it's up to the
user to basically bring it up

624
00:35:15,109 --> 00:35:18,390
pass it as they need it and then use it
and so there's

625
00:35:18,390 --> 00:35:22,730
some pre-made for machines like it is
generally generate all the keys on

626
00:35:22,730 --> 00:35:27,190
am when I did is I made this up use a
simple queue service

627
00:35:27,190 --> 00:35:31,530
um and kinda generated text strings
representing units have work

628
00:35:31,530 --> 00:35:35,069
so Tom how to a

629
00:35:35,069 --> 00:35:38,109
yeah I with words for temperature on
time and that's fine

630
00:35:38,109 --> 00:35:42,900
basically here's how long it took
generated half-a-million keys

631
00:35:42,900 --> 00:35:48,400
um Ontario mister authors bit machines
talk for hours for eight bucks

632
00:35:48,400 --> 00:35:52,680
um hand then all the a city for Vince's
also look for hours

633
00:35:52,680 --> 00:35:55,799
for sixteen dollars self um

634
00:35:55,799 --> 00:36:00,540
your budget on-demand CPU time twenty
four dollars depicting SSL traffic

635
00:36:00,540 --> 00:36:05,480
priceless

636
00:36:05,480 --> 00:36:05,930
so well

637
00:36:05,930 --> 00:36:09,460
what we wanted to do is the skis as it
enters having them

638
00:36:09,460 --> 00:36:12,780
at finding on the web sites so did the
contested

639
00:36:12,780 --> 00:36:15,890
but its second party to that experiment
was

640
00:36:15,890 --> 00:36:19,140
fetching certificates from the internet
and

641
00:36:19,140 --> 00:36:23,020
seen whether they're vulnerable or not
and we did a quick scan

642
00:36:23,020 --> 00:36:26,350
when we first learned about this and on
lots and lots of

643
00:36:26,350 --> 00:36:29,819
a viable sites fortunately lots of them
got updated

644
00:36:29,820 --> 00:36:34,080
and if you browse today if you to scroll
for for certificates you'll see

645
00:36:34,080 --> 00:36:38,009
a lot of new certificates just generated
after May so that's a good indication

646
00:36:38,010 --> 00:36:39,070
that they were

647
00:36:39,070 --> 00:36:42,670
that they were patched recently but we
still even today

648
00:36:42,670 --> 00:36:45,860
crawling fun find thousands of above

649
00:36:45,860 --> 00:36:51,070
on of week sites even even big sites but
one of two major German bank sector

650
00:36:51,070 --> 00:36:55,110
HTTPS certificate viable for example
they were among the first to patch it

651
00:36:55,110 --> 00:36:55,500
though

652
00:36:55,500 --> 00:37:00,070
now if you wanna if you want it
large-scale fetch certificates that goes

653
00:37:00,070 --> 00:37:01,140
a little bit beyond

654
00:37:01,140 --> 00:37:05,690
as web crawling Synyster to open
addicted to key exchanges

655
00:37:05,690 --> 00:37:09,030
a little slow and you have to paralyze a
lot on

656
00:37:09,030 --> 00:37:12,110
we get some help on net from because
Quinn rights

657
00:37:12,110 --> 00:37:15,800
I'm who has basically a small

658
00:37:15,800 --> 00:37:18,900
Amazon card from what I understand just

659
00:37:18,900 --> 00:37:22,270
at home and a lot of banquets to so

660
00:37:22,270 --> 00:37:25,870
you get to get a couple of less self
popular

661
00:37:25,870 --> 00:37:29,500
web sites that could be security-related
such as

662
00:37:29,500 --> 00:37:33,370
all American Gangster that doesn't
association that

663
00:37:33,370 --> 00:37:37,049
checks thing's for certain features that
F on their web pages

664
00:37:37,050 --> 00:37:40,580
and they publish a list of all the bank
also started from for example the Open

665
00:37:40,580 --> 00:37:41,340
Directory

666
00:37:41,340 --> 00:37:44,580
and just crawled trying to find HTTPS
links

667
00:37:44,580 --> 00:37:49,150
and we we went through millions and
millions of web sites and

668
00:37:49,150 --> 00:37:52,760
phone although we keys and on does

669
00:37:52,760 --> 00:37:57,390
in theory stay valid until they expire
unless the client now

670
00:37:57,390 --> 00:38:00,750
checks for whether that we cannot
usually text by it was in the year

671
00:38:00,750 --> 00:38:03,990
signing certificates that once we really
want it

672
00:38:03,990 --> 00:38:07,780
they unfortunately on the X by after
like ten or twenty thirty years

673
00:38:07,780 --> 00:38:11,940
and don't does a deceptively kurds dead
you can use to create

674
00:38:11,940 --> 00:38:16,240
validus a very sign certificates seek it
spoof ferry sank given

675
00:38:16,240 --> 00:38:20,030
one of his key awesome though which
generated during to dot-com bubble

676
00:38:20,030 --> 00:38:23,540
and since they're valid for 10 20 years
stay haven't been

677
00:38:23,540 --> 00:38:26,570
replaced during during a time this was
on the book

678
00:38:26,570 --> 00:38:30,680
said supports it leader is the week
signing certificates

679
00:38:30,680 --> 00:38:34,560
that if you people have that we we
couldn't find it and you

680
00:38:34,560 --> 00:38:38,930
and

681
00:38:38,930 --> 00:38:42,819
so now we get to the putting together
our a list of

682
00:38:42,820 --> 00:38:46,220
up we keys and is it if it gets we have
we

683
00:38:46,220 --> 00:38:50,540
put together a little demo area little
time out in front of the lock at concern

684
00:38:50,540 --> 00:38:57,540
by any that meaning yes time

685
00:39:08,490 --> 00:39:10,800
do iraq okay so

686
00:39:10,800 --> 00:39:13,800
makeup I am

687
00:39:13,800 --> 00:39:17,490
here's a site that happens to not really
use SSL for anything

688
00:39:17,490 --> 00:39:21,740
but still vulnerable I'm so let's

689
00:39:21,740 --> 00:39:25,650
chechans check this out so too I
implement this attack

690
00:39:25,650 --> 00:39:28,940
II took tool called I SSL dump

691
00:39:28,940 --> 00:39:32,010
this keyboard it's like a packet sniffer

692
00:39:32,010 --> 00:39:36,569
and I'll show you that various stages
over the SSL protocol negotiation

693
00:39:36,569 --> 00:39:39,670
but obviously you can decreased the
traffic

694
00:39:39,670 --> 00:39:44,080
because it's SSL it's impossible mom

695
00:39:44,080 --> 00:39:47,060
however say you had I don't know

696
00:39:47,060 --> 00:39:50,740
a directory a

697
00:39:50,740 --> 00:39:53,940
Mike bickers

698
00:39:53,940 --> 00:39:57,240
I'm I it was a have like all these keys

699
00:39:57,240 --> 00:40:01,170
any you know a big database for hashes
so we can

700
00:40:01,170 --> 00:40:04,740
basically just we do is when

701
00:40:04,740 --> 00:40:08,140
just monitor the certificate going
across was a goes across

702
00:40:08,140 --> 00:40:12,350
check if it was generated using when the
week ease and if so the crib to traffic

703
00:40:12,350 --> 00:40:16,580
so I am comment tool too many secrets

704
00:40:16,580 --> 00:40:21,190
authors is run

705
00:40:21,190 --> 00:40:26,690
SSL dump sniffing for this host its

706
00:40:26,690 --> 00:40:29,790
and then and this window

707
00:40:29,790 --> 00:40:36,340
out orders to connect to it using the
open to sell command line

708
00:40:36,340 --> 00:40:41,430
rights let's connect

709
00:40:41,430 --> 00:40:45,390
I'm this really bad use transparent
terminals

710
00:40:45,390 --> 00:40:49,819
I'm basically it shows %um onto SSL pop
protocol gobbledygook

711
00:40:49,820 --> 00:40:53,280
saying it exchange certificates blah
blah blah

712
00:40:53,280 --> 00:40:56,720
now we're going to do a web requests

713
00:40:56,720 --> 00:41:01,710
I can't type today XO

714
00:41:01,710 --> 00:41:05,710
this in the open to sell window I am
obvious you can see that as we

715
00:41:05,710 --> 00:41:07,180
established this a cell connection

716
00:41:07,180 --> 00:41:11,549
however in the sniffing window we can
see that we have

717
00:41:11,550 --> 00:41:16,320
the traffic here as well and did this
because it just grab the key indicated

718
00:41:16,320 --> 00:41:16,950
on the fly

719
00:41:16,950 --> 00:41:21,400
and so I am with this tool basically
Monte network whether

720
00:41:21,400 --> 00:41:24,830
local or doing art school thing and
watching the you know ever on the

721
00:41:24,830 --> 00:41:25,299
network

722
00:41:25,300 --> 00:41:29,460
if they connect to any site that is
vulnerable you have their traffic

723
00:41:29,460 --> 00:41:33,540
and I'll be releasing this one site make
the code not

724
00:41:33,540 --> 00:41:40,540
horribly embarrassing expects

725
00:41:54,900 --> 00:41:57,680
now got getting back to the question of
what

726
00:41:57,680 --> 00:42:02,049
what can you do thi defend yourself are
you your users use systems

727
00:42:02,050 --> 00:42:05,820
against a threat well optimally SSL

728
00:42:05,820 --> 00:42:10,060
on the Internet would have been filled
stew foresee this case

729
00:42:10,060 --> 00:42:13,250
steps some certificates get volume get
get

730
00:42:13,250 --> 00:42:16,690
own and then dead-end you to be blocked
and

731
00:42:16,690 --> 00:42:21,250
Iraq on a measures in the standards such
as revocation lists

732
00:42:21,250 --> 00:42:24,870
to slot long lists of every every
certificate that has been on

733
00:42:24,870 --> 00:42:27,960
but they're not implemented properly so
I think

734
00:42:27,960 --> 00:42:31,100
Internet Explorer 7 but only on Vista

735
00:42:31,100 --> 00:42:34,100
is the only browser that has

736
00:42:34,100 --> 00:42:38,710
half-baked okay implementation of this
five folks any of those

737
00:42:38,710 --> 00:42:43,580
does not so Danny Firefox developers you
please fix that

738
00:42:43,580 --> 00:42:46,690
for foresee cryptographic keys

739
00:42:46,690 --> 00:42:51,230
maybe being vulnerable and getting on
and help us block tells

740
00:42:51,230 --> 00:42:54,330
now since the browsers themselves don't

741
00:42:54,330 --> 00:42:58,950
have defenses lot of people have after
is generated those blacklisted

742
00:42:58,950 --> 00:43:02,390
to we have generated on Amazon Cloud and

743
00:43:02,390 --> 00:43:06,319
published does for example as on a
Firefox pocket

744
00:43:06,320 --> 00:43:10,200
now Firefox's I don't know twenty
megabytes to black lace of

745
00:43:10,200 --> 00:43:13,610
that the list of all keys will be almost
500 megabytes so that would be

746
00:43:13,610 --> 00:43:17,010
and the painful update especially in
some

747
00:43:17,010 --> 00:43:20,280
someone better platforms is that
question every

748
00:43:20,280 --> 00:43:25,550
to take yes um from what I've heard
Firefox 3 will implement OCSP online

749
00:43:25,550 --> 00:43:27,360
certificate status protocol

750
00:43:27,360 --> 00:43:30,790
that not help with this issue that's an
interesting for a call

751
00:43:30,790 --> 00:43:34,550
in a bad way yeah I know nothing about
it

752
00:43:34,550 --> 00:43:41,410
ok

753
00:43:41,410 --> 00:43:44,730
yes a basically it has these interesting
privacy implications there

754
00:43:44,730 --> 00:43:48,720
if you want to find out whether or not
there's an issue with that certificates

755
00:43:48,720 --> 00:43:49,030
your

756
00:43:49,030 --> 00:43:53,210
going to have to report back that you're
busy now let's say I mean maybe if there

757
00:43:53,210 --> 00:43:54,310
is some sort of like

758
00:43:54,310 --> 00:43:57,799
decentralized and every network that you
can route through that might change that

759
00:43:57,800 --> 00:44:03,710
potentially but I mean it doesn't I mean
it seems like it's a good idea

760
00:44:03,710 --> 00:44:08,380
but I wonder what will happen to so when
you have this many

761
00:44:08,380 --> 00:44:11,720
problems but say I'm

762
00:44:11,720 --> 00:44:15,670
it seems like that's going to the asking
a lot of questions I have the servers

763
00:44:15,670 --> 00:44:17,300
can take their load I guess

764
00:44:17,300 --> 00:44:20,360
yeah I'm sure that that's designed well
suffered

765
00:44:20,360 --> 00:44:23,740
never has problems though well so

766
00:44:23,740 --> 00:44:28,240
well there are like Los fault for as as
a as itself like clothes on the internet

767
00:44:28,240 --> 00:44:28,570
now

768
00:44:28,570 --> 00:44:31,660
so the Firefox like close is condensed

769
00:44:31,660 --> 00:44:34,680
to I think about 30 megabyte so painful
update but

770
00:44:34,680 --> 00:44:38,180
definitely much better than getting anti
keyless there are

771
00:44:38,180 --> 00:44:42,290
packet step to prevent day SSH problems
to at least some of them

772
00:44:42,290 --> 00:44:45,620
and as in Debian where the first two to
provide pictures there

773
00:44:45,620 --> 00:44:49,390
so instead at least to conquer too late
on that on

774
00:44:49,390 --> 00:44:54,129
what what is what is patches do is such
a computer for week keys and then

775
00:44:54,130 --> 00:44:57,960
ask you to replace the week ease or even
do it automatically if it's to host key

776
00:44:57,960 --> 00:44:58,990
from what I understand

777
00:44:58,990 --> 00:45:02,410
now at this this solves problems using
keys and house keys

778
00:45:02,410 --> 00:45:05,750
but diffie-hellman might still be
vulnerable on the as a

779
00:45:05,750 --> 00:45:10,930
and so if you're a Debian use and you
patched everything you replaced all keys

780
00:45:10,930 --> 00:45:14,609
if you connect soon as a machine that s
affected

781
00:45:14,610 --> 00:45:18,510
that hasn't been patched it you have
those problems SSH decoder

782
00:45:18,510 --> 00:45:21,670
program will be able to reach a password
and read

783
00:45:21,670 --> 00:45:24,900
everything that goes through this stage
that problem

784
00:45:24,900 --> 00:45:28,740
is far from being fixed pitch it should
be possible for someone to write

785
00:45:28,740 --> 00:45:31,740
a tool I haven't seen anyone do this but
it should be possible for someone to

786
00:45:31,740 --> 00:45:32,360
read its cool

787
00:45:32,360 --> 00:45:36,740
that would connect to and a server and
dude if you home with that server

788
00:45:36,740 --> 00:45:40,040
and to do that thirty-two thousand times
sometime

789
00:45:40,040 --> 00:45:44,460
well before 32,000 I'm connections
because the birthday paradox you should

790
00:45:44,460 --> 00:45:47,160
see a collision in the diffie-hellman
parameters and then you would know that

791
00:45:47,160 --> 00:45:48,649
the remote live SSL

792
00:45:48,650 --> 00:45:52,390
has a problem it shouldn't be very
difficult to read that either because

793
00:45:52,390 --> 00:45:54,120
it's just like one or two steps in

794
00:45:54,120 --> 00:45:57,490
22 communication with the server I'm but

795
00:45:57,490 --> 00:46:01,460
no one has done that yet but that's
probably won the last outstanding real

796
00:46:01,460 --> 00:46:02,780
big problems here because

797
00:46:02,780 --> 00:46:05,810
and as promising as we said earlier I'm

798
00:46:05,810 --> 00:46:09,140
thats that's for the weakest link for
the whole protocol which

799
00:46:09,140 --> 00:46:12,319
to me was surprising when I started
learning a lot more about how

800
00:46:12,320 --> 00:46:15,670
the protocol work the idea that the
diffie-hellman could be so

801
00:46:15,670 --> 00:46:19,220
so so important when you have all the
rest to the key in play was

802
00:46:19,220 --> 00:46:22,970
kind of what's so

803
00:46:22,970 --> 00:46:26,800
yet to conclude I'm India

804
00:46:26,800 --> 00:46:31,330
grander scheme of things what we have
learned from his once again

805
00:46:31,330 --> 00:46:35,259
should say is that soft open source
software should be

806
00:46:35,260 --> 00:46:39,380
on not not be patched just before it
ships but should be patched

807
00:46:39,380 --> 00:46:43,460
wet weather it's developed and if you
find a bug anywhere please tell whoever

808
00:46:43,460 --> 00:46:44,340
wrote a program

809
00:46:44,340 --> 00:46:48,060
give them a chance to is affectionate
take your insides

810
00:46:48,060 --> 00:46:51,799
are tell you that you're wrong to please
not touch it and that is

811
00:46:51,800 --> 00:46:56,040
particularly true for crypto well not a
funny things go on who would ever

812
00:46:56,040 --> 00:46:59,520
read from a memory that you wouldn't at
that you didn't try to weld

813
00:46:59,520 --> 00:47:02,600
it makes good sense and in crypto

814
00:47:02,600 --> 00:47:05,600
and well taking that a little further so

815
00:47:05,600 --> 00:47:08,800
to understand how strong your system is
cryptographically

816
00:47:08,800 --> 00:47:12,840
it doesn't suffice to look at what
building block you use to to make it

817
00:47:12,840 --> 00:47:13,460
secure so

818
00:47:13,460 --> 00:47:17,250
Rs eight thousand beds can never be
cracked in anybody's life time

819
00:47:17,250 --> 00:47:20,730
but it is vulnerable to disease to just
I'm

820
00:47:20,730 --> 00:47:23,850
2 D's exploits that we have shown so

821
00:47:23,850 --> 00:47:28,870
at div distances security of
cryptographic system is really

822
00:47:28,870 --> 00:47:32,160
determined by the weakest link and
cryptographic keys are

823
00:47:32,160 --> 00:47:35,560
one of the most important building
blocks and now often forgotten

824
00:47:35,560 --> 00:47:39,990
I'm as I've said

825
00:47:39,990 --> 00:47:43,840
police implements revocation lists and
all that key management

826
00:47:43,840 --> 00:47:48,790
is two important often issue 2 to speak
not into always rely on

827
00:47:48,790 --> 00:47:52,590
debt I'm the perfect secrecy of
cryptographic keys keys get

828
00:47:52,590 --> 00:47:56,790
own beyond its just by people looking in
and stealing two private portion of some

829
00:47:56,790 --> 00:47:57,210
keys

830
00:47:57,210 --> 00:48:00,610
so please help mitigate these problems
by by

831
00:48:00,610 --> 00:48:04,320
implementing to revocation list at least
biases up now if

832
00:48:04,320 --> 00:48:07,790
if you do you if you do you have ideas
how to patch dead

833
00:48:07,790 --> 00:48:12,180
debt SSH problem that the problem first
if the Helmand into session keys please

834
00:48:12,180 --> 00:48:15,850
contribute that back to the community to
an and help catch that last

835
00:48:15,850 --> 00:48:20,230
opened big problem as well

836
00:48:20,230 --> 00:48:23,680
I'll was at thing they wanna thank you
for attention and we

837
00:48:23,680 --> 00:48:27,419
I think I have some ten minutes for
discussion

838
00:48:27,420 --> 00:48:34,420
its

839
00:48:39,800 --> 00:48:40,390
hi there

840
00:48:40,390 --> 00:48:43,730
at quick question I maybe a was missing
something but

841
00:48:43,730 --> 00:48:49,120
is is the blacklist only way

842
00:48:49,120 --> 00:48:53,480
is that the best way to determine I if
the host

843
00:48:53,480 --> 00:48:57,170
you know could be broken over over SSL
is in their way to you

844
00:48:57,170 --> 00:49:00,700
but they're the weights is to scan
yourself in your own computer before you

845
00:49:00,700 --> 00:49:01,460
initiate

846
00:49:01,460 --> 00:49:05,050
a connection you know you're trying to
connect to your online bank account or

847
00:49:05,050 --> 00:49:06,090
something like this:

848
00:49:06,090 --> 00:49:10,060
rather than referencing a blacklisted
used determine that yourself

849
00:49:10,060 --> 00:49:14,080
foreign policy you I'll tentatively
tube-like place you could have a very

850
00:49:14,080 --> 00:49:17,130
very long list of all hosted a known to
have

851
00:49:17,130 --> 00:49:23,900
week certificates but the black clothes
is probably smaller so it it is

852
00:49:23,900 --> 00:49:28,220
probably do only a workable solution
since keys are

853
00:49:28,220 --> 00:49:31,680
more less random said you can't compress
them any and you

854
00:49:31,680 --> 00:49:35,990
I've beyond what what the hatch is
already do to tell you give an idea

855
00:49:35,990 --> 00:49:39,090
all the uncompressed keyser 2.1
gigabytes

856
00:49:39,090 --> 00:49:42,410
the your blacklist the fight handful

857
00:49:42,410 --> 00:49:46,830
mags like nine mags yeah I think study
by now since they keep I think different

858
00:49:46,830 --> 00:49:47,650
flavors of

859
00:49:47,650 --> 00:49:50,690
of keys yeah and to understand with the
bike was actually is

860
00:49:50,690 --> 00:49:54,840
am think about it this way you have the
public component and it maps to procure

861
00:49:54,840 --> 00:49:55,890
like a rainbow table

862
00:49:55,890 --> 00:49:59,629
so you hatched the public component so
in some connects to you

863
00:49:59,630 --> 00:50:03,650
a server you can take the public key
transform and and then do a lookup

864
00:50:03,650 --> 00:50:07,180
and if you have a match then you know
that there's a seeker key they can be

865
00:50:07,180 --> 00:50:10,759
that can be derived by the processes we
describe here so

866
00:50:10,760 --> 00:50:13,970
the blacklist is basically a hasher the
public key fingerprints

867
00:50:13,970 --> 00:50:17,880
and I mean depending on implementation
but that's like this simplest way to do

868
00:50:17,880 --> 00:50:18,140
it

869
00:50:18,140 --> 00:50:21,370
so you can't really check your own
computer because the thing that you're

870
00:50:21,370 --> 00:50:22,299
looking for is

871
00:50:22,300 --> 00:50:26,070
the remote computer I guess that answer
questions biggest

872
00:50:26,070 --> 00:50:29,290
the process of generating the blacklist
why couldn't it be done

873
00:50:29,290 --> 00:50:32,470
I white with the reason is because on

874
00:50:32,470 --> 00:50:35,470
it is nontrivial to know exactly what

875
00:50:35,470 --> 00:50:39,440
P I D E what architecture know what an
DNS

876
00:50:39,440 --> 00:50:43,130
are the certificate was generated on and
you can't generate the certificate

877
00:50:43,130 --> 00:50:45,210
on-the-fly based on the public key
fingerprint

878
00:50:45,210 --> 00:50:48,940
but if you have a list serve the public
key fingerprints then what you can do is

879
00:50:48,940 --> 00:50:52,050
reference back to the seeker key by
doing a look at and you can also store

880
00:50:52,050 --> 00:50:54,700
the primal urge the generated that
secretly if you want

881
00:50:54,700 --> 00:50:58,480
and you could regenerate but it's not
possible to take the public key and then

882
00:50:58,480 --> 00:51:00,530
know the secret immediately that would
be

883
00:51:00,530 --> 00:51:05,800
different problem I'm could use the
microphones

884
00:51:05,800 --> 00:51:09,440
there's there's a microphone waters
we've got a bunch of people want so

885
00:51:09,440 --> 00:51:14,770
yeah I'll do you know if any resources
for tracking down

886
00:51:14,770 --> 00:51:18,210
what products have shipped with what
trusted om

887
00:51:18,210 --> 00:51:21,690
route certs so other been

888
00:51:21,690 --> 00:51:25,210
multiple mom root certificate
authorities that have gone out of

889
00:51:25,210 --> 00:51:25,920
business

890
00:51:25,920 --> 00:51:29,050
and their you wanna owner Richard if you
thirty well

891
00:51:29,050 --> 00:51:32,060
not necessarily when I mean just getting
to the point dad

892
00:51:32,060 --> 00:51:36,140
I love you too yeah every detail yeah
sold they're working on it

893
00:51:36,140 --> 00:51:40,640
okay they asked me like the properties
got sold off when the company's 1-under

894
00:51:40,640 --> 00:51:44,500
let me actually track like where those
keys went

895
00:51:44,500 --> 00:51:47,810
get a question hopefully that they got
deleted have you ever look to your

896
00:51:47,810 --> 00:51:49,140
certificate authority lists

897
00:51:49,140 --> 00:51:52,129
and that are my brothers that there's
crap in there that you would get you you

898
00:51:52,130 --> 00:51:52,880
don't trust them

899
00:51:52,880 --> 00:51:56,310
like you look at it and you know that
you don't trust them and I mean I'm

900
00:51:56,310 --> 00:51:58,220
certain that the easiest way to beat

901
00:51:58,220 --> 00:52:02,380
all the PK I've it's implemented and
with regards as his own web browsers

902
00:52:02,380 --> 00:52:03,700
just to go and buy

903
00:52:03,700 --> 00:52:07,100
and CA that's already in a web browser I
mean it's like

904
00:52:07,100 --> 00:52:10,980
it can't be that much money for the
amount of money the added you could get

905
00:52:10,980 --> 00:52:13,200
as a return on your investment if you're
really shady

906
00:52:13,200 --> 00:52:16,320
and I'm certain that someone else has
done that because it just makes sense

907
00:52:16,320 --> 00:52:19,800
it's a perfect attack vector the AZL
trust largest needs like

908
00:52:19,800 --> 00:52:23,770
you know revision because so all your
browser tells you is someone mike Easley

909
00:52:23,770 --> 00:52:25,250
tell you who it was really interested

910
00:52:25,250 --> 00:52:29,110
so on says its citibank is Citibank and
princes I'd like to know if one day

911
00:52:29,110 --> 00:52:33,040
Versailles missing Citibank Citibank and
the next day it's James bait and tackle

912
00:52:33,040 --> 00:52:34,250
and certificate authority

913
00:52:34,250 --> 00:52:37,340
yeah I i mean a

914
00:52:37,340 --> 00:52:40,780
and and an interesting also comes from
chaining

915
00:52:40,780 --> 00:52:43,780
as I'll chaining I mean you could

916
00:52:43,780 --> 00:52:47,440
do you do you remember the Microsoft
time constraints vulnerability there

917
00:52:47,440 --> 00:52:50,140
Mike Bennett am published some number of
years ago

918
00:52:50,140 --> 00:52:54,020
basically yeah you you do I'm glad to do

919
00:52:54,020 --> 00:52:57,640
that's great I essentially the issue is
that you could get a certificate issued

920
00:52:57,640 --> 00:52:59,370
to you and then you could sign it

921
00:52:59,370 --> 00:53:02,880
and even though you were really
authorized to sign in I Microsoft would

922
00:53:02,880 --> 00:53:04,070
follow the chain

923
00:53:04,070 --> 00:53:07,490
and say your authorized so Mike
published %ah

924
00:53:07,490 --> 00:53:10,990
a demo love I think was amazon dot com
you visited like

925
00:53:10,990 --> 00:53:15,120
I think thought crime .org and on a
certain port and it was

926
00:53:15,120 --> 00:53:20,630
amazon dot com because Microsoft's iron
Explorer just follow the chain it didn't

927
00:53:20,630 --> 00:53:22,360
care that that was an invalid chain

928
00:53:22,360 --> 00:53:26,080
thanks working one

929
00:53:26,080 --> 00:53:29,120
one more question much for fast

930
00:53:29,120 --> 00:53:33,609
are you aware of any disk encryption
applications that could be affected by

931
00:53:33,610 --> 00:53:34,190
this

932
00:53:34,190 --> 00:53:38,440
yes next question I

933
00:53:38,440 --> 00:53:42,260
seriously %uh I was wondering what the
distribution

934
00:53:42,260 --> 00:53:46,720
I'll the vulnerable interviews because
you're not really gonna have many PHD's

935
00:53:46,720 --> 00:53:50,440
at a high value was the problem actually
worse than you expect yes

936
00:53:50,440 --> 00:53:54,140
next question

937
00:53:54,140 --> 00:53:57,440
have you guys written on nice tutorial
article like this

938
00:53:57,440 --> 00:54:01,840
say in the wiki kinda thing where you
clerk if you don't know the stuff

939
00:54:01,840 --> 00:54:05,430
you want to learn it do you do when he
met you mention some term you link of

940
00:54:05,430 --> 00:54:07,040
two and i cant find out what that is

941
00:54:07,040 --> 00:54:11,200
et cetera do you Arts has someone else
done this so the damian Wiki Wiki to

942
00:54:11,200 --> 00:54:12,420
Debian .org slash

943
00:54:12,420 --> 00:54:16,740
SSL keys SSL k in upper case he

944
00:54:16,740 --> 00:54:20,440
why that very slowly free wakey

945
00:54:20,440 --> 00:54:23,930
got their VM .org

946
00:54:23,930 --> 00:54:27,340
slash uppercase s

947
00:54:27,340 --> 00:54:31,890
uppercase ass uppercase L uppercase K

948
00:54:31,890 --> 00:54:36,240
he line ass in our case

949
00:54:36,240 --> 00:54:39,810
k is uppercase yes that's correct

950
00:54:39,810 --> 00:54:43,110
I if you look at the deputy you'll see
that they are

951
00:54:43,110 --> 00:54:46,670
specifically addressed the other two
questions that I just whiz through their

952
00:54:46,670 --> 00:54:51,710
I'm it lists basically all the different
applications that they be in

953
00:54:51,710 --> 00:54:55,560
had issues with the Taconic filesystem
the type of password: saves

954
00:54:55,560 --> 00:54:58,990
they talk about all sorts of stuff so
basically I if you're curious about a

955
00:54:58,990 --> 00:55:00,080
specific application

956
00:55:00,080 --> 00:55:03,420
on Debian and you wonder how will behave
of a Debian

957
00:55:03,420 --> 00:55:08,150
I'm because there's possible things that
are similar to the way the SSH keys are

958
00:55:08,150 --> 00:55:10,680
used to know it's like it's possible
like

959
00:55:10,680 --> 00:55:14,450
there's a the devil's in the details
obviously source www

960
00:55:14,450 --> 00:55:18,250
Ricky Debian well W as Stevie

961
00:55:18,250 --> 00:55:23,780
FW St FL via search the fuckin where

962
00:55:23,780 --> 00:55:30,780
sorry gotta thanks its

963
00:55:33,420 --> 00:55:36,610
fell unexpected

964
00:55:36,610 --> 00:55:41,600
ask Texas years running

965
00:55:41,600 --> 00:55:44,600
I

966
00:55:44,600 --> 00:55:47,690
fear Candice hours you work with johnnie
weekend

967
00:55:47,690 --> 00:55:51,370
s'okay awesome you guys

968
00:55:51,370 --> 00:55:55,910
its his some reason I can't

969
00:55:55,910 --> 00:56:00,899
yes I

970
00:56:00,900 --> 00:56:02,790
also time yes

