1
00:00:57,680 --> 00:00:58,719
no

2
00:00:58,719 --> 00:01:01,680
now okay

3
00:01:06,000 --> 00:01:08,320
welcome again to a new hope

4
00:01:08,320 --> 00:01:09,920
as a reminder everyone in the room if

5
00:01:09,920 --> 00:01:11,760
you have any questions you can always

6
00:01:11,760 --> 00:01:14,320
check through the matrix chat to ask any

7
00:01:14,320 --> 00:01:15,680
questions same with our virtual

8
00:01:15,680 --> 00:01:17,360
attendees that is the only way that

9
00:01:17,360 --> 00:01:19,360
someone outside of the

10
00:01:19,360 --> 00:01:23,119
event will be able to ask any questions

11
00:01:23,119 --> 00:01:25,119
so let's allow me to introduce our next

12
00:01:25,119 --> 00:01:27,920
speaker with a simple question

13
00:01:27,920 --> 00:01:29,680
who here has not

14
00:01:29,680 --> 00:01:31,600
had some of their data

15
00:01:31,600 --> 00:01:34,798
found in some kind of a breach

16
00:01:35,920 --> 00:01:38,799
well i mean obviously the question is

17
00:01:38,799 --> 00:01:40,079
why isn't it simply

18
00:01:40,079 --> 00:01:42,560
encrypted however according to our next

19
00:01:42,560 --> 00:01:44,479
speaker philip allen baker that's the

20
00:01:44,479 --> 00:01:45,920
wrong question

21
00:01:45,920 --> 00:01:47,680
okay hello

22
00:01:47,680 --> 00:01:51,280
so today i'm going to be announcing

23
00:01:51,280 --> 00:01:52,479
three

24
00:01:52,479 --> 00:01:55,360
open infrastructures

25
00:01:55,360 --> 00:01:57,840
the first is a

26
00:01:57,840 --> 00:02:02,399
infrastructure that secures data at rest

27
00:02:02,399 --> 00:02:03,759
the second

28
00:02:03,759 --> 00:02:07,439
is an infrastructure that binds together

29
00:02:07,439 --> 00:02:10,318
a collection of devices

30
00:02:10,318 --> 00:02:12,560
and makes them function like they're a

31
00:02:12,560 --> 00:02:15,040
single device that belongs to you the

32
00:02:15,040 --> 00:02:16,959
owner

33
00:02:16,959 --> 00:02:18,400
and the third

34
00:02:18,400 --> 00:02:21,040
is a mechanism that allows us to take

35
00:02:21,040 --> 00:02:23,040
back control

36
00:02:23,040 --> 00:02:24,000
of

37
00:02:24,000 --> 00:02:27,360
internet services we depend on

38
00:02:27,360 --> 00:02:29,040
but of course these are not three

39
00:02:29,040 --> 00:02:30,480
separate

40
00:02:30,480 --> 00:02:31,840
services

41
00:02:31,840 --> 00:02:33,440
they're one and let's call the

42
00:02:33,440 --> 00:02:35,280
mathematical mesh

43
00:02:35,280 --> 00:02:38,800
now this is an open specification

44
00:02:38,800 --> 00:02:39,760
open

45
00:02:39,760 --> 00:02:41,519
reference code

46
00:02:41,519 --> 00:02:44,800
and open applications based on that code

47
00:02:44,800 --> 00:02:46,720
today i'm going to be showing you

48
00:02:46,720 --> 00:02:49,280
the line mode

49
00:02:49,280 --> 00:02:51,920
applications which are the ones that are

50
00:02:51,920 --> 00:02:52,959
finished

51
00:02:52,959 --> 00:02:55,920
but there are gui

52
00:02:56,879 --> 00:02:59,920
i'm going to explain

53
00:03:00,560 --> 00:03:02,959
as i'm going to explain the

54
00:03:02,959 --> 00:03:05,040
the applications are not really the

55
00:03:05,040 --> 00:03:07,920
point the point is this should be

56
00:03:07,920 --> 00:03:10,480
infrastructure and this should be part

57
00:03:10,480 --> 00:03:13,120
of all the applications we use

58
00:03:13,120 --> 00:03:15,200
in our everyday lives

59
00:03:15,200 --> 00:03:16,959
so let's start with the first of those

60
00:03:16,959 --> 00:03:19,360
problems securing data at rest

61
00:03:19,360 --> 00:03:20,959
and of course

62
00:03:20,959 --> 00:03:23,360
every time we have a breach and

63
00:03:23,360 --> 00:03:25,440
to to do this you know this is a billion

64
00:03:25,440 --> 00:03:27,200
dollars worth of breaches

65
00:03:27,200 --> 00:03:29,680
i just did the local the searched on

66
00:03:29,680 --> 00:03:32,720
breach for news and these were just the

67
00:03:32,720 --> 00:03:34,480
first five hits

68
00:03:34,480 --> 00:03:37,200
and it's basically been like that every

69
00:03:37,200 --> 00:03:40,640
day for the past 10 years and every time

70
00:03:40,640 --> 00:03:42,480
the question comes up

71
00:03:42,480 --> 00:03:45,599
why didn't they just encrypt

72
00:03:45,599 --> 00:03:47,360
you know encryption is easy i mean this

73
00:03:47,360 --> 00:03:49,519
is how we encrypt using the mathematical

74
00:03:49,519 --> 00:03:50,480
mesh

75
00:03:50,480 --> 00:03:52,480
alice creates an account

76
00:03:52,480 --> 00:03:54,080
so she's got an account alice at

77
00:03:54,080 --> 00:03:55,760
example.com

78
00:03:55,760 --> 00:03:57,200
she's going to

79
00:03:57,200 --> 00:04:01,120
she's got little diddly file here um

80
00:04:01,120 --> 00:04:02,959
just a text file in this case but of

81
00:04:02,959 --> 00:04:04,799
course it could be word it could be

82
00:04:04,799 --> 00:04:08,640
solidworks inventor powerpoint whatever

83
00:04:08,640 --> 00:04:10,720
and she's just going to encrypt it and

84
00:04:10,720 --> 00:04:12,480
then she's going to decrypt it and it's

85
00:04:12,480 --> 00:04:14,239
all going to work as you would expect so

86
00:04:14,239 --> 00:04:15,519
there's our

87
00:04:15,519 --> 00:04:18,478
encrypt file let's encrypt it

88
00:04:18,478 --> 00:04:20,000
and

89
00:04:20,000 --> 00:04:20,880
the

90
00:04:20,880 --> 00:04:23,280
encryption that you're going to see here

91
00:04:23,280 --> 00:04:26,160
it's uh all fairly straightforward stuff

92
00:04:26,160 --> 00:04:29,280
that we've been doing now for oh 25

93
00:04:29,280 --> 00:04:31,520
years

94
00:04:31,520 --> 00:04:33,919
this in this case it's all jason using

95
00:04:33,919 --> 00:04:36,720
the itf jose

96
00:04:36,720 --> 00:04:38,479
approach but you know really

97
00:04:38,479 --> 00:04:41,120
straightforward stuff have a bunch of

98
00:04:41,120 --> 00:04:43,840
recipients the actual encrypted payload

99
00:04:43,840 --> 00:04:45,520
is in the middle there

100
00:04:45,520 --> 00:04:47,440
and we have a signature at the end yeah

101
00:04:47,440 --> 00:04:49,360
yeah it's easy

102
00:04:49,360 --> 00:04:50,800
encryption

103
00:04:50,800 --> 00:04:51,840
easy

104
00:04:51,840 --> 00:04:54,560
so what's the problem

105
00:04:54,560 --> 00:04:57,280
well the problem is when you encrypt

106
00:04:57,280 --> 00:05:00,160
your data you can't get it back unless

107
00:05:00,160 --> 00:05:02,160
you can decrypt it

108
00:05:02,160 --> 00:05:04,800
and just being able to decrypt it on one

109
00:05:04,800 --> 00:05:06,240
machine

110
00:05:06,240 --> 00:05:07,759
doesn't cut it

111
00:05:07,759 --> 00:05:09,600
not if you're going to be able to use

112
00:05:09,600 --> 00:05:10,400
that

113
00:05:10,400 --> 00:05:11,600
data

114
00:05:11,600 --> 00:05:14,639
in an enterprise or to share it with

115
00:05:14,639 --> 00:05:15,600
your

116
00:05:15,600 --> 00:05:19,600
colleagues or even if you're going to

117
00:05:19,600 --> 00:05:22,160
just use it on your own

118
00:05:22,160 --> 00:05:25,280
encryption is easy it's the managing the

119
00:05:25,280 --> 00:05:28,880
decryption of the data that is hard

120
00:05:28,880 --> 00:05:32,560
and see here we just decrypted the data

121
00:05:32,560 --> 00:05:34,560
and we get the text back you know just

122
00:05:34,560 --> 00:05:37,280
like we've done so you know here the has

123
00:05:37,280 --> 00:05:39,759
uh rounded off a few of the rough

124
00:05:39,759 --> 00:05:40,880
corners

125
00:05:40,880 --> 00:05:44,000
that pgp and s mime exposed uh you

126
00:05:44,000 --> 00:05:46,080
notice you didn't need to do the usual

127
00:05:46,080 --> 00:05:48,000
musking around with keyrings it was done

128
00:05:48,000 --> 00:05:49,440
for you but

129
00:05:49,440 --> 00:05:52,800
yeah we've got to do better

130
00:05:52,800 --> 00:05:55,680
before i can encrypt by default

131
00:05:55,680 --> 00:05:59,199
i've got to be able to access my data on

132
00:05:59,199 --> 00:06:02,880
all my devices i might want to use it on

133
00:06:02,880 --> 00:06:05,759
and you know i have a lot of devices

134
00:06:05,759 --> 00:06:08,080
i've got to be able to

135
00:06:08,080 --> 00:06:11,360
share that data with all my colleagues

136
00:06:11,360 --> 00:06:14,479
past and future

137
00:06:14,479 --> 00:06:17,039
and also you know

138
00:06:17,039 --> 00:06:18,639
what happens if i have a disaster what

139
00:06:18,639 --> 00:06:20,880
happens if the house burns down

140
00:06:20,880 --> 00:06:22,479
now this is something i've not got time

141
00:06:22,479 --> 00:06:24,880
to go into uh here

142
00:06:24,880 --> 00:06:26,880
but you know i have been spent a lot of

143
00:06:26,880 --> 00:06:29,360
time thinking about how do you recover

144
00:06:29,360 --> 00:06:32,800
the keys if a personal disaster happens

145
00:06:32,800 --> 00:06:34,880
and also survivability

146
00:06:34,880 --> 00:06:37,680
what happens if you've died

147
00:06:37,680 --> 00:06:40,800
and all your data is encrypted and now

148
00:06:40,800 --> 00:06:43,039
the family is trying to get

149
00:06:43,039 --> 00:06:45,520
hold of your bank accounts

150
00:06:45,520 --> 00:06:48,720
okay so at this point um

151
00:06:48,720 --> 00:06:50,720
you know why am i wearing the steve jobs

152
00:06:50,720 --> 00:06:52,160
black sweater well there's actually two

153
00:06:52,160 --> 00:06:54,720
reasons here

154
00:06:54,720 --> 00:06:56,800
the first is

155
00:06:56,800 --> 00:06:58,479
if you have you know

156
00:06:58,479 --> 00:07:00,160
steve is showing a bunch of this is the

157
00:07:00,160 --> 00:07:02,560
iphone launch and steve is showing a

158
00:07:02,560 --> 00:07:04,560
bunch of the previous smartphones did

159
00:07:04,560 --> 00:07:08,240
anybody here use one of those

160
00:07:08,560 --> 00:07:10,639
they sucked didn't they

161
00:07:10,639 --> 00:07:14,639
they really really sucked

162
00:07:15,440 --> 00:07:19,199
iphone raised the bar

163
00:07:19,199 --> 00:07:20,560
and that's what we've got to do for

164
00:07:20,560 --> 00:07:22,080
cryptography

165
00:07:22,080 --> 00:07:25,120
the reason that people aren't using pgp

166
00:07:25,120 --> 00:07:27,759
and s mime and so on to secure their

167
00:07:27,759 --> 00:07:30,400
data at rest is that it is too

168
00:07:30,400 --> 00:07:32,800
damned difficult

169
00:07:32,800 --> 00:07:36,400
we've got to make it effortless

170
00:07:36,400 --> 00:07:38,880
zero click encryption

171
00:07:38,880 --> 00:07:41,360
zero click decryption

172
00:07:41,360 --> 00:07:43,680
and that's why in order for the mesh to

173
00:07:43,680 --> 00:07:45,199
really succeed

174
00:07:45,199 --> 00:07:47,840
it has to be integrated into all the

175
00:07:47,840 --> 00:07:51,120
applications we use on a daily basis

176
00:07:51,120 --> 00:07:53,199
yeah that's why it has to be an open

177
00:07:53,199 --> 00:07:55,120
standard

178
00:07:55,120 --> 00:07:57,360
because the only way that he can happen

179
00:07:57,360 --> 00:07:59,919
in a way that we can all make use of it

180
00:07:59,919 --> 00:08:01,280
without some

181
00:08:01,280 --> 00:08:03,759
god and awful you know

182
00:08:03,759 --> 00:08:06,800
wall garden situation

183
00:08:06,800 --> 00:08:09,199
is if there's an open standard that

184
00:08:09,199 --> 00:08:12,240
every vendor of application software

185
00:08:12,240 --> 00:08:14,160
every open source

186
00:08:14,160 --> 00:08:16,560
provider can implement and we can all

187
00:08:16,560 --> 00:08:17,599
use

188
00:08:17,599 --> 00:08:18,720
so yes

189
00:08:18,720 --> 00:08:22,319
the second reason is this woman

190
00:08:24,560 --> 00:08:28,240
trust nobody absolutely

191
00:08:28,240 --> 00:08:30,879
security is risk management it isn't

192
00:08:30,879 --> 00:08:32,958
risk elimination

193
00:08:32,958 --> 00:08:35,919
it isn't trust elimination forget the

194
00:08:35,919 --> 00:08:38,958
zero zero trust is a stupid slogan it's

195
00:08:38,958 --> 00:08:40,399
almost as stupid as deep

196
00:08:40,399 --> 00:08:43,440
perimeterization which is the last one

197
00:08:43,440 --> 00:08:46,399
you've got to trust somebody

198
00:08:46,399 --> 00:08:49,120
but the key thing is to control who you

199
00:08:49,120 --> 00:08:53,279
trust and to how what extent

200
00:08:53,279 --> 00:08:56,320
and one of the mistakes i made in the

201
00:08:56,320 --> 00:08:59,120
previous incarnations of pki

202
00:08:59,120 --> 00:09:01,040
that i had something to do with

203
00:09:01,040 --> 00:09:04,080
was we tended to concentrate

204
00:09:04,080 --> 00:09:06,800
trust too much in certain nodes and you

205
00:09:06,800 --> 00:09:10,480
all didn't like it you know cas

206
00:09:10,480 --> 00:09:14,480
the mesh is based on two principles

207
00:09:14,480 --> 00:09:16,240
least privilege

208
00:09:16,240 --> 00:09:19,519
and separation and of duties

209
00:09:19,519 --> 00:09:22,560
and it uses threshold cryptography

210
00:09:22,560 --> 00:09:24,560
to enable that to happen

211
00:09:24,560 --> 00:09:26,959
yeah even i don't trust me completely i

212
00:09:26,959 --> 00:09:28,640
mean like

213
00:09:28,640 --> 00:09:30,880
if you do crypto for a long for any

214
00:09:30,880 --> 00:09:32,720
length of time you spend your time

215
00:09:32,720 --> 00:09:33,920
wondering

216
00:09:33,920 --> 00:09:36,640
did i leave a test dub in

217
00:09:36,640 --> 00:09:38,959
did i miss out that signature validation

218
00:09:38,959 --> 00:09:42,160
you know it's it's really grilling stuff

219
00:09:42,160 --> 00:09:44,320
okay so let's go on to the first of

220
00:09:44,320 --> 00:09:45,440
those uh

221
00:09:45,440 --> 00:09:47,600
things that we have to meet in order to

222
00:09:47,600 --> 00:09:51,760
use this data on any of alice's devices

223
00:09:51,760 --> 00:09:53,920
she's got to glue them all together so

224
00:09:53,920 --> 00:09:55,680
they function as one and this is

225
00:09:55,680 --> 00:09:57,440
something that we need for applications

226
00:09:57,440 --> 00:09:58,640
as well i mean

227
00:09:58,640 --> 00:10:00,480
yeah

228
00:10:00,480 --> 00:10:03,360
you buy your first laptop you install a

229
00:10:03,360 --> 00:10:05,200
bunch of applications on it you know

230
00:10:05,200 --> 00:10:09,440
mail contacts twitter flying spaghetti

231
00:10:09,440 --> 00:10:10,800
yeah you've got all them running and

232
00:10:10,800 --> 00:10:13,200
then you buy your second one and then

233
00:10:13,200 --> 00:10:14,240
you spend

234
00:10:14,240 --> 00:10:16,399
you know half an hour installing the

235
00:10:16,399 --> 00:10:20,079
apps and then copying all the accounts

236
00:10:20,079 --> 00:10:22,640
from one to the other and yes apple

237
00:10:22,640 --> 00:10:25,120
promises to do that for you but only if

238
00:10:25,120 --> 00:10:28,320
you enter into club apple and give your

239
00:10:28,320 --> 00:10:30,640
uh application yeah so that never really

240
00:10:30,640 --> 00:10:32,560
worked and then you do the second and

241
00:10:32,560 --> 00:10:34,000
the third and so you end up with a bunch

242
00:10:34,000 --> 00:10:36,000
of devices

243
00:10:36,000 --> 00:10:38,399
and you don't know quite which of them

244
00:10:38,399 --> 00:10:42,160
you can use for which application

245
00:10:42,480 --> 00:10:43,519
so

246
00:10:43,519 --> 00:10:46,480
the solution that i want to have is i

247
00:10:46,480 --> 00:10:50,079
want to join all of my devices and all

248
00:10:50,079 --> 00:10:52,399
of the applications to what i'll call a

249
00:10:52,399 --> 00:10:54,000
mesh account

250
00:10:54,000 --> 00:10:56,320
and have that be something that belongs

251
00:10:56,320 --> 00:10:57,839
to me

252
00:10:57,839 --> 00:11:00,240
something that cannot be taken away from

253
00:11:00,240 --> 00:11:02,560
me something that i can move from one

254
00:11:02,560 --> 00:11:05,360
service provider to another so that i

255
00:11:05,360 --> 00:11:07,440
don't have to change this

256
00:11:07,440 --> 00:11:09,360
at any time in my life no matter how

257
00:11:09,360 --> 00:11:10,959
many laptops

258
00:11:10,959 --> 00:11:13,440
desktops and mobile phones i

259
00:11:13,440 --> 00:11:15,920
change between

260
00:11:15,920 --> 00:11:18,240
so let's just look at how we can join

261
00:11:18,240 --> 00:11:19,360
two

262
00:11:19,360 --> 00:11:21,519
devices together

263
00:11:21,519 --> 00:11:23,760
so what we're going to do here is oh

264
00:11:23,760 --> 00:11:27,319
thank you very much

265
00:11:29,839 --> 00:11:32,720
so i've got a second device here

266
00:11:32,720 --> 00:11:35,760
and it's going to get that file that we

267
00:11:35,760 --> 00:11:38,000
tried to decrypt earlier and we can't

268
00:11:38,000 --> 00:11:40,000
decrypt it of course because yes it

269
00:11:40,000 --> 00:11:42,240
belongs to me but i've not given it the

270
00:11:42,240 --> 00:11:45,360
decryption key yet

271
00:11:46,320 --> 00:11:47,839
so what i'm now going to do is to

272
00:11:47,839 --> 00:11:51,440
request a connection between this device

273
00:11:51,440 --> 00:11:54,160
and alice's mesh account

274
00:11:54,160 --> 00:11:56,639
so she just posts the request and you

275
00:11:56,639 --> 00:11:57,839
can see

276
00:11:57,839 --> 00:12:00,320
nothing uh hideously

277
00:12:00,320 --> 00:12:02,399
complicated there just

278
00:12:02,399 --> 00:12:05,519
request to alice at example.com and then

279
00:12:05,519 --> 00:12:07,600
the device in the background here is

280
00:12:07,600 --> 00:12:09,279
going away and

281
00:12:09,279 --> 00:12:11,360
generating a small pki just for this

282
00:12:11,360 --> 00:12:12,639
device

283
00:12:12,639 --> 00:12:14,959
uh there's a lot of crypto going on

284
00:12:14,959 --> 00:12:16,880
behind the scenes here

285
00:12:16,880 --> 00:12:19,040
much more crypto than used to happen

286
00:12:19,040 --> 00:12:21,680
with pgp or s mime or whatever

287
00:12:21,680 --> 00:12:24,800
and then on the uh original device which

288
00:12:24,800 --> 00:12:26,880
is alice's administrative device at the

289
00:12:26,880 --> 00:12:29,519
moment she checks for pending messages

290
00:12:29,519 --> 00:12:31,360
you see here that there was a witness

291
00:12:31,360 --> 00:12:33,680
value given out we're going to compare

292
00:12:33,680 --> 00:12:36,160
the two witness values to check that

293
00:12:36,160 --> 00:12:39,360
they are the same they are and that

294
00:12:39,360 --> 00:12:41,519
gives us a work factor of 2 to the power

295
00:12:41,519 --> 00:12:43,200
120

296
00:12:43,200 --> 00:12:45,519
that secures that connection between

297
00:12:45,519 --> 00:12:46,560
them

298
00:12:46,560 --> 00:12:49,600
first time we accept it doesn't work

299
00:12:49,600 --> 00:12:50,959
because and the reason for this is that

300
00:12:50,959 --> 00:12:53,440
this is a least privileged system

301
00:12:53,440 --> 00:12:55,680
i have i can't just say connect i've got

302
00:12:55,680 --> 00:12:58,160
to say what privileges are going to

303
00:12:58,160 --> 00:13:00,240
connect it to i'm connecting another

304
00:13:00,240 --> 00:13:01,680
laptop here

305
00:13:01,680 --> 00:13:04,399
if i was connecting a food blender

306
00:13:04,399 --> 00:13:06,160
i probably wouldn't want to allow it to

307
00:13:06,160 --> 00:13:08,000
have email

308
00:13:08,000 --> 00:13:10,160
and you're all probably asking who on

309
00:13:10,160 --> 00:13:12,560
earth has a internet connected food

310
00:13:12,560 --> 00:13:15,680
blender in the audience anybody

311
00:13:15,680 --> 00:13:18,000
i do

312
00:13:18,000 --> 00:13:18,959
yes

313
00:13:18,959 --> 00:13:22,000
stupidest idea ever i just had to buy it

314
00:13:22,000 --> 00:13:24,880
it was in costco internet connected so

315
00:13:24,880 --> 00:13:27,760
okay so we've accepted the um

316
00:13:27,760 --> 00:13:30,160
request and now we're just going to

317
00:13:30,160 --> 00:13:32,800
synchronize this laptop up to the

318
00:13:32,800 --> 00:13:34,639
original and again this is actually

319
00:13:34,639 --> 00:13:37,040
something that if we were in production

320
00:13:37,040 --> 00:13:40,000
code i probably will get rid of it uh so

321
00:13:40,000 --> 00:13:42,560
we device complete and now we can decode

322
00:13:42,560 --> 00:13:45,519
the file see just work this time and we

323
00:13:45,519 --> 00:13:48,720
can read that file back again so what

324
00:13:48,720 --> 00:13:51,680
we've solved here is we've solved the

325
00:13:51,680 --> 00:13:54,639
problem of encryption in decryption for

326
00:13:54,639 --> 00:13:55,680
alice

327
00:13:55,680 --> 00:13:59,920
she can encrypt her data on one device

328
00:13:59,920 --> 00:14:02,639
and use it on any of her connected

329
00:14:02,639 --> 00:14:05,199
devices

330
00:14:06,639 --> 00:14:08,320
now

331
00:14:08,320 --> 00:14:11,680
obviously this is not an ideal thing

332
00:14:11,680 --> 00:14:13,519
you know if we're talking about

333
00:14:13,519 --> 00:14:14,639
um

334
00:14:14,639 --> 00:14:17,760
your medium term yes the specifications

335
00:14:17,760 --> 00:14:19,760
but not the current code

336
00:14:19,760 --> 00:14:22,800
supports uh using qr code connections

337
00:14:22,800 --> 00:14:25,199
you can just scan a qr code and that

338
00:14:25,199 --> 00:14:27,279
does all the connection again

339
00:14:27,279 --> 00:14:29,680
uh the 120 bit

340
00:14:29,680 --> 00:14:31,839
connection key is

341
00:14:31,839 --> 00:14:34,090
hidden inside the qr code

342
00:14:34,090 --> 00:14:35,839
[Music]

343
00:14:35,839 --> 00:14:37,600
the reason that we've not done that yet

344
00:14:37,600 --> 00:14:38,800
is

345
00:14:38,800 --> 00:14:40,720
microsoft isn't delivering that code

346
00:14:40,720 --> 00:14:43,600
until august or whatever

347
00:14:43,600 --> 00:14:45,120
okay so what just happened behind the

348
00:14:45,120 --> 00:14:47,600
scenes there well

349
00:14:47,600 --> 00:14:49,519
the connecting device

350
00:14:49,519 --> 00:14:51,360
generated a

351
00:14:51,360 --> 00:14:53,360
public key pair this is elliptic curve

352
00:14:53,360 --> 00:14:54,720
cryptography

353
00:14:54,720 --> 00:14:58,160
uh the private key is a scalar and the

354
00:14:58,160 --> 00:15:00,320
public key is

355
00:15:00,320 --> 00:15:04,000
a point multiplied by that scalar

356
00:15:04,000 --> 00:15:06,800
and so we send the public key

357
00:15:06,800 --> 00:15:09,839
x dot p off to alice's mesh service

358
00:15:09,839 --> 00:15:11,279
provider

359
00:15:11,279 --> 00:15:14,000
and there it waits until it's picked up

360
00:15:14,000 --> 00:15:17,120
by the administration device and that

361
00:15:17,120 --> 00:15:19,120
generates a second

362
00:15:19,120 --> 00:15:23,680
public key pair in this case y y dot p

363
00:15:23,680 --> 00:15:25,040
and what we then

364
00:15:25,040 --> 00:15:27,440
she then the administration device then

365
00:15:27,440 --> 00:15:28,240
does

366
00:15:28,240 --> 00:15:32,079
is it adds the two public keys

367
00:15:32,079 --> 00:15:34,800
to get a new public key

368
00:15:34,800 --> 00:15:37,040
which i'm going to call a dot p where a

369
00:15:37,040 --> 00:15:38,880
equals x dot y

370
00:15:38,880 --> 00:15:41,199
and we create all the certificates all

371
00:15:41,199 --> 00:15:43,600
the credentials that we're going to need

372
00:15:43,600 --> 00:15:46,240
to make use of this device within the

373
00:15:46,240 --> 00:15:48,800
context of alice's mesh account

374
00:15:48,800 --> 00:15:51,600
on the administration device so

375
00:15:51,600 --> 00:15:54,000
the administration device can calculate

376
00:15:54,000 --> 00:15:55,519
the public key

377
00:15:55,519 --> 00:15:57,759
from knowledge of the public key shares

378
00:15:57,759 --> 00:15:59,920
but doesn't have any knowledge of the

379
00:15:59,920 --> 00:16:02,720
private key because it only knows why it

380
00:16:02,720 --> 00:16:04,320
doesn't know x

381
00:16:04,320 --> 00:16:06,480
so it then sends back y and the

382
00:16:06,480 --> 00:16:08,079
certificates

383
00:16:08,079 --> 00:16:10,480
back to the connecting device and the

384
00:16:10,480 --> 00:16:13,600
connecting device can then calculate a

385
00:16:13,600 --> 00:16:15,920
which equals x plus y which is the

386
00:16:15,920 --> 00:16:19,519
private key for the composite key

387
00:16:19,519 --> 00:16:22,240
so what we've just done here is we've

388
00:16:22,240 --> 00:16:24,480
onboarded this device

389
00:16:24,480 --> 00:16:27,279
and provisioned it with all the public

390
00:16:27,279 --> 00:16:29,839
and private key information it needs to

391
00:16:29,839 --> 00:16:35,480
act in the context of alice's account

392
00:16:37,120 --> 00:16:40,000
and yes i've lied a lot of details

393
00:16:40,000 --> 00:16:41,920
cryptographically but that's the

394
00:16:41,920 --> 00:16:43,120
principle

395
00:16:43,120 --> 00:16:44,880
okay so what we've been able to do here

396
00:16:44,880 --> 00:16:47,600
is to share the key generation role

397
00:16:47,600 --> 00:16:48,839
between the two

398
00:16:48,839 --> 00:16:51,040
devices and the reason that that's

399
00:16:51,040 --> 00:16:52,880
important is that

400
00:16:52,880 --> 00:16:55,759
if either of the devices

401
00:16:55,759 --> 00:16:58,639
does the key generation properly and

402
00:16:58,639 --> 00:17:02,839
securely the final key will be

403
00:17:02,839 --> 00:17:06,000
secure it requires both of them to mess

404
00:17:06,000 --> 00:17:09,679
up to uh have a problem and we can

405
00:17:09,679 --> 00:17:11,760
actually divide it further if we wanted

406
00:17:11,760 --> 00:17:15,679
to we can have as many shares as we like

407
00:17:16,240 --> 00:17:19,599
and we can also uh if we had

408
00:17:19,599 --> 00:17:21,919
cryptographic hardware that was built

409
00:17:21,919 --> 00:17:25,119
into a device during manufacture

410
00:17:25,119 --> 00:17:26,640
we can now make use of that

411
00:17:26,640 --> 00:17:29,440
cryptographic hardware even though we

412
00:17:29,440 --> 00:17:30,840
cannot trust the

413
00:17:30,840 --> 00:17:33,919
manufacturer private key yeah what you

414
00:17:33,919 --> 00:17:36,240
typically want to do with uh private

415
00:17:36,240 --> 00:17:39,280
keys is to device bind buying them you

416
00:17:39,280 --> 00:17:42,000
know i've got my phone i want to layer

417
00:17:42,000 --> 00:17:44,480
some keys onto that so that they can be

418
00:17:44,480 --> 00:17:48,559
used on this phone and no other device

419
00:17:48,559 --> 00:17:51,200
with threshold cryptography i can do

420
00:17:51,200 --> 00:17:54,559
that without ending up being reliant on

421
00:17:54,559 --> 00:17:57,120
a little black box that the manufacturer

422
00:17:57,120 --> 00:17:59,039
provided for me

423
00:17:59,039 --> 00:18:01,760
again the full protocol has more

424
00:18:01,760 --> 00:18:04,080
controls as possible

425
00:18:04,080 --> 00:18:06,080
okay so we've solved quite a few of the

426
00:18:06,080 --> 00:18:08,480
problems for alice using encryption and

427
00:18:08,480 --> 00:18:11,120
decryption for her own use

428
00:18:11,120 --> 00:18:13,200
one that i'm not going to deal with

429
00:18:13,200 --> 00:18:16,240
quite yet is what happens if she is

430
00:18:16,240 --> 00:18:18,640
passing through customs somewhere

431
00:18:18,640 --> 00:18:20,080
and her

432
00:18:20,080 --> 00:18:22,320
device might be subject to

433
00:18:22,320 --> 00:18:25,520
to seizure and we can actually

434
00:18:25,520 --> 00:18:28,799
provision a key share onto alice's

435
00:18:28,799 --> 00:18:30,080
device

436
00:18:30,080 --> 00:18:32,799
so that we can turn the

437
00:18:32,799 --> 00:18:36,080
decryption ability on or off

438
00:18:36,080 --> 00:18:39,120
at a sep as an external key server so

439
00:18:39,120 --> 00:18:39,919
that

440
00:18:39,919 --> 00:18:42,720
alice can use this device to do her work

441
00:18:42,720 --> 00:18:44,400
for the whole flight

442
00:18:44,400 --> 00:18:47,440
turn her decryption capability off when

443
00:18:47,440 --> 00:18:49,600
she's going through customs and only

444
00:18:49,600 --> 00:18:51,360
re-enable it when she gets to her

445
00:18:51,360 --> 00:18:54,080
destination

446
00:18:55,280 --> 00:18:58,799
i've not got time to go into how we

447
00:18:58,799 --> 00:19:01,440
connect up applications but we can do

448
00:19:01,440 --> 00:19:04,240
that as well the existing tools will

449
00:19:04,240 --> 00:19:06,160
automatically provision

450
00:19:06,160 --> 00:19:09,679
ssh pgp s mine keys

451
00:19:09,679 --> 00:19:13,360
to a device to to an account

452
00:19:13,360 --> 00:19:16,559
and so once we've got the keys uh

453
00:19:16,559 --> 00:19:18,480
provisioned to one device

454
00:19:18,480 --> 00:19:20,559
all the other key devices that are

455
00:19:20,559 --> 00:19:21,919
connected to that

456
00:19:21,919 --> 00:19:24,960
account with the relevant set of rights

457
00:19:24,960 --> 00:19:27,600
can now be automatic can now have access

458
00:19:27,600 --> 00:19:30,559
to those private keys and so you

459
00:19:30,559 --> 00:19:33,679
provision your ssh key to one device and

460
00:19:33,679 --> 00:19:35,919
now all of your devices

461
00:19:35,919 --> 00:19:38,720
that you might need to use ssh on can

462
00:19:38,720 --> 00:19:40,640
have access to that

463
00:19:40,640 --> 00:19:41,919
private key

464
00:19:41,919 --> 00:19:43,600
without you needing to go through the

465
00:19:43,600 --> 00:19:46,880
usual business of how you transfer

466
00:19:46,880 --> 00:19:51,640
key private keys across devices

467
00:19:52,960 --> 00:19:55,760
it also provides a set of end-to-end

468
00:19:55,760 --> 00:19:59,200
encrypted catalogs so bookmarks

469
00:19:59,200 --> 00:20:01,919
passwords network settings all the

470
00:20:01,919 --> 00:20:03,360
things that

471
00:20:03,360 --> 00:20:04,720
you really

472
00:20:04,720 --> 00:20:07,280
want to share across your web browsers

473
00:20:07,280 --> 00:20:09,520
but you don't want google

474
00:20:09,520 --> 00:20:12,000
rifling through

475
00:20:12,000 --> 00:20:14,640
all that can be stored in a mesh catalog

476
00:20:14,640 --> 00:20:17,039
and it is stored end to end so the

477
00:20:17,039 --> 00:20:20,159
service provider doesn't see it and the

478
00:20:20,159 --> 00:20:21,919
contacts catalog i'm going to be coming

479
00:20:21,919 --> 00:20:25,120
up to in the next piece

480
00:20:25,120 --> 00:20:27,840
mesh contact assertions overcome a

481
00:20:27,840 --> 00:20:30,159
mistake i think i made in

482
00:20:30,159 --> 00:20:32,320
first generation pki where we thought

483
00:20:32,320 --> 00:20:35,200
the idea of x509

484
00:20:35,200 --> 00:20:37,039
pki was we were going to provide a

485
00:20:37,039 --> 00:20:40,799
certificate that would be how you used

486
00:20:40,799 --> 00:20:44,320
uh email or how you used ssl

487
00:20:44,320 --> 00:20:47,360
and yes that kind of worked but it

488
00:20:47,360 --> 00:20:50,320
it wasn't a good solution

489
00:20:50,320 --> 00:20:53,520
what i now think we want to have is

490
00:20:53,520 --> 00:20:56,320
a contact assertion where we can provide

491
00:20:56,320 --> 00:20:58,720
all the information you need

492
00:20:58,720 --> 00:21:02,080
to contact a particular person via any

493
00:21:02,080 --> 00:21:04,720
of the modalities that that person has

494
00:21:04,720 --> 00:21:07,440
granted to you so you can have a contact

495
00:21:07,440 --> 00:21:09,600
assertion that says here's how you get

496
00:21:09,600 --> 00:21:11,360
hold of me through the mesh

497
00:21:11,360 --> 00:21:13,760
through skype through signal through

498
00:21:13,760 --> 00:21:16,960
whatsapp etc and you probably would end

499
00:21:16,960 --> 00:21:18,480
up having more than one of these

500
00:21:18,480 --> 00:21:21,360
contacts and hand out slightly different

501
00:21:21,360 --> 00:21:23,039
versions to your

502
00:21:23,039 --> 00:21:24,159
work

503
00:21:24,159 --> 00:21:26,720
colleagues to your friends to your

504
00:21:26,720 --> 00:21:29,120
families to your golf club members and

505
00:21:29,120 --> 00:21:30,400
so on

506
00:21:30,400 --> 00:21:31,520
and

507
00:21:31,520 --> 00:21:33,440
because we've got a

508
00:21:33,440 --> 00:21:36,159
full pki a full personal pki backing

509
00:21:36,159 --> 00:21:38,640
this whole system

510
00:21:38,640 --> 00:21:42,039
the contact assertion is signed and is

511
00:21:42,039 --> 00:21:44,159
authenticatable so once we've gone

512
00:21:44,159 --> 00:21:47,919
through an initial context exchange

513
00:21:47,919 --> 00:21:49,600
we've got the root of trust for the

514
00:21:49,600 --> 00:21:52,320
other person and we can validate any

515
00:21:52,320 --> 00:21:54,880
updates to that contact

516
00:21:54,880 --> 00:21:57,600
and so what this means is that once we

517
00:21:57,600 --> 00:21:59,840
meet somebody we bump phones we've

518
00:21:59,840 --> 00:22:01,520
exchanged contacts

519
00:22:01,520 --> 00:22:03,919
we've got a connection for life now

520
00:22:03,919 --> 00:22:05,919
because that connection is between the

521
00:22:05,919 --> 00:22:07,600
mesh accounts

522
00:22:07,600 --> 00:22:10,480
which persist

523
00:22:10,480 --> 00:22:12,720
rather than to the

524
00:22:12,720 --> 00:22:15,039
messaging provider or the telephone

525
00:22:15,039 --> 00:22:17,120
number or the address they might happen

526
00:22:17,120 --> 00:22:21,520
to be using at that particular time

527
00:22:21,600 --> 00:22:23,280
uh

528
00:22:23,280 --> 00:22:26,799
trust management um yeah i spent most of

529
00:22:26,799 --> 00:22:30,320
my career working on pki so

530
00:22:30,320 --> 00:22:32,240
i think that one of the mistakes that

531
00:22:32,240 --> 00:22:35,679
was made in peaks was

532
00:22:35,679 --> 00:22:38,559
we thought that the idea of pkix was you

533
00:22:38,559 --> 00:22:41,840
want to go to get a key you go to the ca

534
00:22:41,840 --> 00:22:44,320
every time and you see if that key is

535
00:22:44,320 --> 00:22:45,679
valid and

536
00:22:45,679 --> 00:22:47,840
that wasn't a good model

537
00:22:47,840 --> 00:22:49,600
the way that i think that we should be

538
00:22:49,600 --> 00:22:52,640
doing it is we divide the trust

539
00:22:52,640 --> 00:22:55,520
management problem up into two

540
00:22:55,520 --> 00:22:58,640
the hard part the part that cas and so

541
00:22:58,640 --> 00:23:01,679
on can contribute to is the problem of

542
00:23:01,679 --> 00:23:04,480
establishing trust relationships in the

543
00:23:04,480 --> 00:23:06,080
first place

544
00:23:06,080 --> 00:23:08,159
if i meet somebody in person we can bump

545
00:23:08,159 --> 00:23:10,880
phones uh i can read a qr code off a

546
00:23:10,880 --> 00:23:12,720
business card i can go through the

547
00:23:12,720 --> 00:23:13,679
remote

548
00:23:13,679 --> 00:23:15,520
request protocol looks a bit like the

549
00:23:15,520 --> 00:23:17,360
device request protocol

550
00:23:17,360 --> 00:23:19,280
uh or a trusted third party can give me

551
00:23:19,280 --> 00:23:20,320
that key

552
00:23:20,320 --> 00:23:21,840
if i'm talking about a bank or a

553
00:23:21,840 --> 00:23:23,360
business or whatever

554
00:23:23,360 --> 00:23:25,280
ca broker trust is probably the way to

555
00:23:25,280 --> 00:23:26,320
go

556
00:23:26,320 --> 00:23:29,520
but once alice has decided to trust a

557
00:23:29,520 --> 00:23:31,200
particular person

558
00:23:31,200 --> 00:23:34,240
what she's really interested in is not

559
00:23:34,240 --> 00:23:36,240
is this not going through that whole

560
00:23:36,240 --> 00:23:38,480
establishing trust every time she uses

561
00:23:38,480 --> 00:23:39,679
it

562
00:23:39,679 --> 00:23:42,400
she wants to see is this party the same

563
00:23:42,400 --> 00:23:45,200
party i dealt with last time

564
00:23:45,200 --> 00:23:46,640
and so what

565
00:23:46,640 --> 00:23:49,120
uh we need to do is for alice to be able

566
00:23:49,120 --> 00:23:52,159
to track her contacts herself in her own

567
00:23:52,159 --> 00:23:55,279
contact catalog and then she's got

568
00:23:55,279 --> 00:23:58,640
bob's public key she knows

569
00:23:58,640 --> 00:24:01,200
she's got bob's contact and she can use

570
00:24:01,200 --> 00:24:05,520
that to verify bob regardless of which

571
00:24:05,520 --> 00:24:07,679
service providers which protocols which

572
00:24:07,679 --> 00:24:10,240
addresses whatever happen in the first

573
00:24:10,240 --> 00:24:12,799
in the future

574
00:24:14,880 --> 00:24:17,440
okay so

575
00:24:17,440 --> 00:24:19,919
let's just see that happening so you

576
00:24:19,919 --> 00:24:20,880
know

577
00:24:20,880 --> 00:24:22,640
it's crypto we've got to do an alice and

578
00:24:22,640 --> 00:24:25,360
bob example i've already done the

579
00:24:25,360 --> 00:24:27,440
connection protocol it looks pretty much

580
00:24:27,440 --> 00:24:30,080
like the device one and again it's

581
00:24:30,080 --> 00:24:31,520
something that i want to get rid of and

582
00:24:31,520 --> 00:24:33,840
put qr codes around

583
00:24:33,840 --> 00:24:36,799
alice has encrypted a file and now bob

584
00:24:36,799 --> 00:24:38,960
is going to decrypt it

585
00:24:38,960 --> 00:24:40,559
um

586
00:24:40,559 --> 00:24:41,520
okay

587
00:24:41,520 --> 00:24:43,120
well that's just what we've been able to

588
00:24:43,120 --> 00:24:46,400
do with the pgp and s mine forever

589
00:24:46,400 --> 00:24:50,480
so you know nothing uh changed here yet

590
00:24:50,480 --> 00:24:52,400
the problem is

591
00:24:52,400 --> 00:24:55,200
decryption needs our dynamic

592
00:24:55,200 --> 00:24:56,720
and this is one of the things that got

593
00:24:56,720 --> 00:24:58,840
me you know when i was working for

594
00:24:58,840 --> 00:25:03,679
verisign and even in a company that is

595
00:25:03,679 --> 00:25:06,400
all about public key encryption

596
00:25:06,400 --> 00:25:08,159
we weren't encrypting files and the

597
00:25:08,159 --> 00:25:12,480
problem was that if i encrypted a file

598
00:25:12,480 --> 00:25:16,000
and somebody else joined the key team

599
00:25:16,000 --> 00:25:17,919
i would then have to add them to the

600
00:25:17,919 --> 00:25:20,720
distribution list of that file

601
00:25:20,720 --> 00:25:23,600
and if i didn't well that file has just

602
00:25:23,600 --> 00:25:26,640
disappeared as far as they're concerned

603
00:25:26,640 --> 00:25:27,679
and so

604
00:25:27,679 --> 00:25:30,080
if you're trying to use

605
00:25:30,080 --> 00:25:31,919
encrypted data

606
00:25:31,919 --> 00:25:34,480
in a work environment you need to be

607
00:25:34,480 --> 00:25:36,559
able to share it with all your

608
00:25:36,559 --> 00:25:38,000
colleagues

609
00:25:38,000 --> 00:25:39,840
including the colleagues that you

610
00:25:39,840 --> 00:25:42,720
haven't yet met and this is something

611
00:25:42,720 --> 00:25:45,039
that doesn't really work within the

612
00:25:45,039 --> 00:25:48,220
canon of public key cryptography

613
00:25:48,220 --> 00:25:49,840
[Music]

614
00:25:49,840 --> 00:25:52,720
that we started with in the early 90s

615
00:25:52,720 --> 00:25:55,279
so what i'm going to do here is alice

616
00:25:55,279 --> 00:25:58,320
here has created a

617
00:25:58,320 --> 00:26:01,200
encryption group it's group w at

618
00:26:01,200 --> 00:26:03,039
example.com

619
00:26:03,039 --> 00:26:05,760
and she's encrypted a file

620
00:26:05,760 --> 00:26:08,240
fudoktext again

621
00:26:08,240 --> 00:26:10,880
and encrypted it to that group

622
00:26:10,880 --> 00:26:13,679
group w at example.com

623
00:26:13,679 --> 00:26:14,640
and

624
00:26:14,640 --> 00:26:16,320
if you can see here

625
00:26:16,320 --> 00:26:18,640
alice has tried to decrypt it and it

626
00:26:18,640 --> 00:26:20,400
won't let it hurt

627
00:26:20,400 --> 00:26:22,320
and the reason for that is that even

628
00:26:22,320 --> 00:26:24,400
though alice is the administrator of the

629
00:26:24,400 --> 00:26:25,200
group

630
00:26:25,200 --> 00:26:28,080
she hasn't been added into the group yet

631
00:26:28,080 --> 00:26:29,760
she doesn't have the decryption

632
00:26:29,760 --> 00:26:32,559
capability yet

633
00:26:32,559 --> 00:26:34,799
since alice is the sole administrator of

634
00:26:34,799 --> 00:26:37,600
the group she can add herself to it

635
00:26:37,600 --> 00:26:39,039
but

636
00:26:39,039 --> 00:26:40,799
we could actually use threshold

637
00:26:40,799 --> 00:26:44,000
cryptography again to split the group

638
00:26:44,000 --> 00:26:47,120
administration process so it might take

639
00:26:47,120 --> 00:26:50,240
two administrators out of five

640
00:26:50,240 --> 00:26:52,880
to add somebody to the group uh the fact

641
00:26:52,880 --> 00:26:54,720
that alice is the administrator doesn't

642
00:26:54,720 --> 00:26:56,880
necessarily mean she is allowed to

643
00:26:56,880 --> 00:26:58,159
decrypt

644
00:26:58,159 --> 00:27:00,720
so let's just go through and show that

645
00:27:00,720 --> 00:27:05,320
uh we can decrypt that

646
00:27:06,480 --> 00:27:10,720
and so we've added bob to that group

647
00:27:10,720 --> 00:27:13,360
and now bob is going to synchronize his

648
00:27:13,360 --> 00:27:14,559
account

649
00:27:14,559 --> 00:27:16,960
and this time he can decrypt the

650
00:27:16,960 --> 00:27:19,279
document

651
00:27:19,279 --> 00:27:21,600
um

652
00:27:21,600 --> 00:27:22,880
yeah the uh

653
00:27:22,880 --> 00:27:26,480
the recordings on the uh

654
00:27:26,880 --> 00:27:30,000
okay and we've got the file back again

655
00:27:30,000 --> 00:27:31,200
so

656
00:27:31,200 --> 00:27:33,600
what we this is this is powerful

657
00:27:33,600 --> 00:27:36,720
we've got the ability to encrypt files

658
00:27:36,720 --> 00:27:39,919
and decide after we've encrypted them

659
00:27:39,919 --> 00:27:42,080
who we're going to share them with

660
00:27:42,080 --> 00:27:45,520
and we can also delete bob

661
00:27:45,520 --> 00:27:48,159
from that encryption group and now he

662
00:27:48,159 --> 00:27:51,440
can't decrypt or the key server could

663
00:27:51,440 --> 00:27:54,640
have logic built into it like okay if

664
00:27:54,640 --> 00:27:56,720
somebody tries to decrypt more than 20

665
00:27:56,720 --> 00:27:58,399
documents

666
00:27:58,399 --> 00:28:01,440
in an hour then call their supervisor

667
00:28:01,440 --> 00:28:05,360
because something bad might be happening

668
00:28:06,480 --> 00:28:09,039
okay so what just happened behind the

669
00:28:09,039 --> 00:28:10,399
scenes well

670
00:28:10,399 --> 00:28:11,840
the first thing that happened was that

671
00:28:11,840 --> 00:28:12,799
alice

672
00:28:12,799 --> 00:28:15,120
generated a standard public private key

673
00:28:15,120 --> 00:28:17,760
pair call it g this time

674
00:28:17,760 --> 00:28:20,559
and sent the contact which is the public

675
00:28:20,559 --> 00:28:21,360
key

676
00:28:21,360 --> 00:28:24,799
uh off to somebody who encrypted a file

677
00:28:24,799 --> 00:28:27,120
uh it's standard

678
00:28:27,120 --> 00:28:29,279
elgamal encryption

679
00:28:29,279 --> 00:28:32,080
the generate an ephemeral

680
00:28:32,080 --> 00:28:34,480
and multiply the ephemeral by the public

681
00:28:34,480 --> 00:28:36,880
key and

682
00:28:36,880 --> 00:28:40,000
so now bob wants to decrypt that file

683
00:28:40,000 --> 00:28:42,720
what he's got to do is that given

684
00:28:42,720 --> 00:28:43,919
the

685
00:28:43,919 --> 00:28:46,799
public ephemeral e dot p

686
00:28:46,799 --> 00:28:50,720
he's got to find the value g dot e dot p

687
00:28:50,720 --> 00:28:54,000
how do you go about it well

688
00:28:54,000 --> 00:28:56,880
first thing that happens is that alice

689
00:28:56,880 --> 00:28:59,200
is going to create a key share

690
00:28:59,200 --> 00:29:01,679
first part of that is the alice

691
00:29:01,679 --> 00:29:04,640
adsbot alice just creates a random

692
00:29:04,640 --> 00:29:05,679
number

693
00:29:05,679 --> 00:29:08,240
doesn't have anything to do with the

694
00:29:08,240 --> 00:29:10,559
private key of the group at all can be

695
00:29:10,559 --> 00:29:12,480
generated before the group's even been

696
00:29:12,480 --> 00:29:13,679
created

697
00:29:13,679 --> 00:29:15,520
and sends that off

698
00:29:15,520 --> 00:29:17,039
to her

699
00:29:17,039 --> 00:29:18,880
mesh service provider

700
00:29:18,880 --> 00:29:21,039
so now we've got the value

701
00:29:21,039 --> 00:29:23,440
scalar bob is

702
00:29:23,440 --> 00:29:25,039
is stored at that

703
00:29:25,039 --> 00:29:26,960
mesh service provider

704
00:29:26,960 --> 00:29:29,200
she then sends the difference between

705
00:29:29,200 --> 00:29:31,039
the group private key

706
00:29:31,039 --> 00:29:33,039
and the scaler for bob

707
00:29:33,039 --> 00:29:35,039
uh to bob

708
00:29:35,039 --> 00:29:37,679
and then when bob wants to decrypt

709
00:29:37,679 --> 00:29:39,600
what he does is sends an operating

710
00:29:39,600 --> 00:29:41,279
instruction off to the mesh service

711
00:29:41,279 --> 00:29:45,279
provider and it can perform one half

712
00:29:45,279 --> 00:29:48,159
of the key agreement process

713
00:29:48,159 --> 00:29:50,640
bob uses the value he was given to

714
00:29:50,640 --> 00:29:52,799
provide the other half

715
00:29:52,799 --> 00:29:54,640
add the two together

716
00:29:54,640 --> 00:29:57,679
and we get the key agreement value that

717
00:29:57,679 --> 00:30:01,600
we need to decrypt that document

718
00:30:02,080 --> 00:30:03,760
i'm taking this

719
00:30:03,760 --> 00:30:05,600
high speed

720
00:30:05,600 --> 00:30:07,919
there is a series of podcasts that go

721
00:30:07,919 --> 00:30:09,760
through it much slower

722
00:30:09,760 --> 00:30:11,679
the point out the key point at this

723
00:30:11,679 --> 00:30:14,080
point is we're sh

724
00:30:14,080 --> 00:30:17,279
we're separating out the role of

725
00:30:17,279 --> 00:30:19,600
decryption into two

726
00:30:19,600 --> 00:30:22,559
we've shared that role between alice's

727
00:30:22,559 --> 00:30:24,480
between bob's device

728
00:30:24,480 --> 00:30:26,320
and that key service

729
00:30:26,320 --> 00:30:29,279
the key service cannot be breached

730
00:30:29,279 --> 00:30:32,880
because all the key service has is a set

731
00:30:32,880 --> 00:30:35,279
of random numbers

732
00:30:35,279 --> 00:30:38,000
it can control the use of decryption but

733
00:30:38,000 --> 00:30:40,000
it cannot decrypt

734
00:30:40,000 --> 00:30:41,840
and as i said we can split the

735
00:30:41,840 --> 00:30:44,159
administration role and the full

736
00:30:44,159 --> 00:30:46,159
protocol does have more encryption going

737
00:30:46,159 --> 00:30:47,360
on

738
00:30:47,360 --> 00:30:48,799
okay

739
00:30:48,799 --> 00:30:49,679
so

740
00:30:49,679 --> 00:30:50,720
yes

741
00:30:50,720 --> 00:30:53,120
i'm saying this ease of use is critical

742
00:30:53,120 --> 00:30:53,919
here

743
00:30:53,919 --> 00:30:56,320
this is all better integrated into

744
00:30:56,320 --> 00:30:59,120
applications and ideally what i would

745
00:30:59,120 --> 00:31:01,360
like to be able to show you here

746
00:31:01,360 --> 00:31:04,720
is an edge or a chrome extension

747
00:31:04,720 --> 00:31:08,080
that would allow me to show you the

748
00:31:08,080 --> 00:31:09,039
mesh

749
00:31:09,039 --> 00:31:11,120
running in a web browser

750
00:31:11,120 --> 00:31:14,480
and i just didn't have time to do that

751
00:31:14,480 --> 00:31:18,279
so i wrote a web browser

752
00:31:19,600 --> 00:31:21,919
okay this is this is a serious web

753
00:31:21,919 --> 00:31:23,840
browser it's um

754
00:31:23,840 --> 00:31:27,600
basically it uses webview 2

755
00:31:27,600 --> 00:31:30,640
which is a layer a wrapper around chrome

756
00:31:30,640 --> 00:31:33,760
that microsoft is putting together

757
00:31:33,760 --> 00:31:36,559
and it basically allows us to take back

758
00:31:36,559 --> 00:31:38,960
control the browser and do all the

759
00:31:38,960 --> 00:31:41,760
things in the browser that

760
00:31:41,760 --> 00:31:43,760
certain companies are not letting us do

761
00:31:43,760 --> 00:31:45,440
of late

762
00:31:45,440 --> 00:31:47,760
so what i've done is i've already

763
00:31:47,760 --> 00:31:49,919
encrypted a file

764
00:31:49,919 --> 00:31:52,159
um

765
00:31:52,159 --> 00:31:54,640
and put it onto the server

766
00:31:54,640 --> 00:31:58,559
and i've added the uh browser account

767
00:31:58,559 --> 00:32:01,440
to um

768
00:32:01,440 --> 00:32:04,000
to the decryption group and so now let's

769
00:32:04,000 --> 00:32:06,240
just see what happens when we uh run the

770
00:32:06,240 --> 00:32:07,440
example

771
00:32:07,440 --> 00:32:10,480
and we can read the document

772
00:32:10,480 --> 00:32:14,880
okay now let's take the uh browser out

773
00:32:14,880 --> 00:32:18,399
nothing changes on the server

774
00:32:18,399 --> 00:32:21,200
and we can't read it

775
00:32:21,200 --> 00:32:23,120
so we can grant

776
00:32:23,120 --> 00:32:26,720
and remove the authorization

777
00:32:26,720 --> 00:32:29,760
to view documents at one website

778
00:32:29,760 --> 00:32:33,279
on a completely separate key service

779
00:32:33,279 --> 00:32:35,519
this is powerful and

780
00:32:35,519 --> 00:32:38,320
the full protocols allow us to go as far

781
00:32:38,320 --> 00:32:42,559
as end-to-end encrypted social media

782
00:32:42,559 --> 00:32:44,880
you could have twitter you could have

783
00:32:44,880 --> 00:32:46,399
facebook

784
00:32:46,399 --> 00:32:48,480
where all the data

785
00:32:48,480 --> 00:32:51,279
on the service is encrypted and the

786
00:32:51,279 --> 00:32:52,720
server

787
00:32:52,720 --> 00:32:55,679
and the service has no idea what the

788
00:32:55,679 --> 00:32:58,399
users are doing

789
00:32:58,399 --> 00:33:00,000
okay

790
00:33:00,000 --> 00:33:02,080
oh yes

791
00:33:02,080 --> 00:33:04,320
since i'm imitating steve i've got to do

792
00:33:04,320 --> 00:33:06,320
one more thing there's also a second

793
00:33:06,320 --> 00:33:11,158
factor authentication scheme built in

794
00:33:11,600 --> 00:33:15,918
but it's not like these stupid numbers

795
00:33:16,320 --> 00:33:18,720
you know if i'm going to do so you know

796
00:33:18,720 --> 00:33:19,840
i i

797
00:33:19,840 --> 00:33:21,039
well i think the second factor

798
00:33:21,039 --> 00:33:23,279
authentication is the wrong idea

799
00:33:23,279 --> 00:33:26,080
what i really want is a confirmation

800
00:33:26,080 --> 00:33:28,640
when i'm about to do something stupid

801
00:33:28,640 --> 00:33:30,399
you know

802
00:33:30,399 --> 00:33:32,799
i think i should be able to log onto my

803
00:33:32,799 --> 00:33:35,600
brokerage account with a password

804
00:33:35,600 --> 00:33:37,600
but i would like to have it come back

805
00:33:37,600 --> 00:33:39,679
and ask me for some

806
00:33:39,679 --> 00:33:43,039
confirmation before i say buy 2 000

807
00:33:43,039 --> 00:33:46,000
shares of ponzi

808
00:33:46,000 --> 00:33:48,000
so what i really want is a scheme like

809
00:33:48,000 --> 00:33:49,039
this

810
00:33:49,039 --> 00:33:51,360
i try to do that

811
00:33:51,360 --> 00:33:54,159
and back comes a message on my screen

812
00:33:54,159 --> 00:33:54,960
saying

813
00:33:54,960 --> 00:33:57,519
do you want to buy those 2 000 shares in

814
00:33:57,519 --> 00:33:58,720
ponzi

815
00:33:58,720 --> 00:34:01,840
and i accept it or i reject it

816
00:34:01,840 --> 00:34:02,960
and

817
00:34:02,960 --> 00:34:05,679
the acceptance or rejection

818
00:34:05,679 --> 00:34:08,000
is uh signed

819
00:34:08,000 --> 00:34:10,079
by the device goes back and we have a

820
00:34:10,079 --> 00:34:12,800
complete audit trail of phil was stupid

821
00:34:12,800 --> 00:34:15,679
enough to buy ponzi

822
00:34:15,679 --> 00:34:17,599
that's what i think second factor

823
00:34:17,599 --> 00:34:20,079
authentication should be

824
00:34:20,079 --> 00:34:21,359
okay

825
00:34:21,359 --> 00:34:22,159
so

826
00:34:22,159 --> 00:34:24,239
the reason i'm here at hope

827
00:34:24,239 --> 00:34:26,320
is that i need your help

828
00:34:26,320 --> 00:34:29,199
i've spent the past five years uh

829
00:34:29,199 --> 00:34:30,879
building this system

830
00:34:30,879 --> 00:34:35,440
uh i have no external funding um

831
00:34:35,440 --> 00:34:36,320
you know

832
00:34:36,320 --> 00:34:39,760
i was web one point not so

833
00:34:39,760 --> 00:34:41,918
i've been carrying this so far by myself

834
00:34:41,918 --> 00:34:42,639
but

835
00:34:42,639 --> 00:34:45,599
if we're going to make this work

836
00:34:45,599 --> 00:34:48,480
i need to have more people involved

837
00:34:48,480 --> 00:34:51,760
there's a ton of good stuff we can do

838
00:34:51,760 --> 00:34:53,839
with this technology

839
00:34:53,839 --> 00:34:56,239
and you know the possibility is

840
00:34:56,239 --> 00:34:59,599
limitless and i'm only just showing you

841
00:34:59,599 --> 00:35:03,040
the raw technology here

842
00:35:03,040 --> 00:35:07,200
what we can do applying this technology

843
00:35:07,200 --> 00:35:10,160
is far more important

844
00:35:10,160 --> 00:35:13,119
an end-to-end secure messaging system

845
00:35:13,119 --> 00:35:17,440
that isn't a walled garden yes i know

846
00:35:17,440 --> 00:35:20,320
signal is an open protocol

847
00:35:20,320 --> 00:35:22,880
but it is a walled garden

848
00:35:22,880 --> 00:35:25,760
as far as talking to users i can only

849
00:35:25,760 --> 00:35:27,359
connect to other

850
00:35:27,359 --> 00:35:29,599
signal users

851
00:35:29,599 --> 00:35:32,800
why don't we have an open

852
00:35:32,800 --> 00:35:34,000
mechanism

853
00:35:34,000 --> 00:35:36,800
for a messaging system where anybody can

854
00:35:36,800 --> 00:35:39,599
choose their service provider and talk

855
00:35:39,599 --> 00:35:42,160
to anybody else regardless

856
00:35:42,160 --> 00:35:45,680
of which service provider they use

857
00:35:45,680 --> 00:35:48,079
uh there's more work to be done on the

858
00:35:48,079 --> 00:35:51,040
browser hooking up the uh bookmarks the

859
00:35:51,040 --> 00:35:52,560
catalogs and so on

860
00:35:52,560 --> 00:35:54,560
anybody here used delicious back in the

861
00:35:54,560 --> 00:35:56,320
day

862
00:35:56,320 --> 00:35:59,440
wasn't it great and it was taken away

863
00:35:59,440 --> 00:36:01,200
from us

864
00:36:01,200 --> 00:36:02,480
why

865
00:36:02,480 --> 00:36:07,119
because we didn't control the service

866
00:36:07,119 --> 00:36:09,520
wouldn't it be nice if we had an open

867
00:36:09,520 --> 00:36:12,480
version of delicious where we could

868
00:36:12,480 --> 00:36:15,440
browse share our bookmarks with other

869
00:36:15,440 --> 00:36:16,640
users

870
00:36:16,640 --> 00:36:19,839
and collaborate with them

871
00:36:19,839 --> 00:36:22,800
end-to-end secure social media

872
00:36:22,800 --> 00:36:25,280
it's possible

873
00:36:25,280 --> 00:36:27,839
the dare formats are designed not just

874
00:36:27,839 --> 00:36:30,560
for incremental authentication like you

875
00:36:30,560 --> 00:36:34,640
get with a sock chain um

876
00:36:34,640 --> 00:36:38,800
it also provides incremental encryption

877
00:36:38,800 --> 00:36:40,800
and finally

878
00:36:40,800 --> 00:36:43,359
iot

879
00:36:43,359 --> 00:36:45,200
well

880
00:36:45,200 --> 00:36:48,720
this is the model that every iot

881
00:36:48,720 --> 00:36:51,920
user is trying to voiced on us

882
00:36:51,920 --> 00:36:55,280
it is called razer and blades we connect

883
00:36:55,280 --> 00:36:58,480
up all our devices to their service we

884
00:36:58,480 --> 00:37:00,720
pay for the service and then all our

885
00:37:00,720 --> 00:37:04,160
devices connect into our service

886
00:37:04,160 --> 00:37:05,599
and of course it doesn't even work

887
00:37:05,599 --> 00:37:08,320
because

888
00:37:08,320 --> 00:37:10,480
we don't buy from a single vendor the

889
00:37:10,480 --> 00:37:13,119
vendors squabble they you know some days

890
00:37:13,119 --> 00:37:15,520
you can connect to your nest thermostat

891
00:37:15,520 --> 00:37:17,520
with one stack and the other day you

892
00:37:17,520 --> 00:37:19,920
can't

893
00:37:20,720 --> 00:37:22,720
that is not a model that's working for

894
00:37:22,720 --> 00:37:24,240
me

895
00:37:24,240 --> 00:37:27,280
and anybody following adam savage's

896
00:37:27,280 --> 00:37:31,839
build of the ecto-1 ghostbusters mobile

897
00:37:31,839 --> 00:37:35,040
it was really great as long as it lasted

898
00:37:35,040 --> 00:37:38,160
i bought into it you know i i'm 70 parts

899
00:37:38,160 --> 00:37:40,480
into this 140 part thing

900
00:37:40,480 --> 00:37:43,680
almost a thousand dollars

901
00:37:43,680 --> 00:37:46,960
eaglemoss has gone bankrupt

902
00:37:46,960 --> 00:37:49,839
so i now have half the parts for a necto

903
00:37:49,839 --> 00:37:51,520
one

904
00:37:51,520 --> 00:37:52,960
and

905
00:37:52,960 --> 00:37:55,200
that reminds me of this

906
00:37:55,200 --> 00:37:58,320
i bought a revolve hub

907
00:37:58,320 --> 00:38:01,760
built my entire smart home around it

908
00:38:01,760 --> 00:38:06,000
google bought revolve and shut them down

909
00:38:06,000 --> 00:38:07,920
and now i have two and a half thousand

910
00:38:07,920 --> 00:38:10,880
dollars worth of redundant

911
00:38:10,880 --> 00:38:13,920
uh smart home equipment in my walls it

912
00:38:13,920 --> 00:38:15,680
was three years before there was another

913
00:38:15,680 --> 00:38:17,680
vendor that came up with a hub

914
00:38:17,680 --> 00:38:21,040
that replaced the revolve one completely

915
00:38:21,040 --> 00:38:23,359
that doesn't work

916
00:38:23,359 --> 00:38:24,640
and you know what

917
00:38:24,640 --> 00:38:27,440
if you start to read iot forums you will

918
00:38:27,440 --> 00:38:30,240
see that a lot of people are getting

919
00:38:30,240 --> 00:38:33,839
burned and getting fed up

920
00:38:34,000 --> 00:38:36,640
this is the model that i believe we need

921
00:38:36,640 --> 00:38:38,480
all the devices

922
00:38:38,480 --> 00:38:41,280
connect to the users mesh account which

923
00:38:41,280 --> 00:38:44,000
they control which they own and is

924
00:38:44,000 --> 00:38:46,800
theirs for life

925
00:38:46,800 --> 00:38:48,240
and

926
00:38:48,240 --> 00:38:51,520
no racism no ray no blades

927
00:38:51,520 --> 00:38:52,400
just

928
00:38:52,400 --> 00:38:56,119
stuff working

929
00:39:00,480 --> 00:39:03,839
when we built the net

930
00:39:03,839 --> 00:39:06,400
it was intended to be it was you know

931
00:39:06,400 --> 00:39:08,320
yes it was opportunity

932
00:39:08,320 --> 00:39:11,119
but the objective of vint cerf and co

933
00:39:11,119 --> 00:39:14,320
was to provide a communications resource

934
00:39:14,320 --> 00:39:15,920
for everyone

935
00:39:15,920 --> 00:39:18,880
something that everybody could use to

936
00:39:18,880 --> 00:39:21,680
communicate

937
00:39:22,079 --> 00:39:24,079
when i worked with tim berners-lee at

938
00:39:24,079 --> 00:39:26,960
cern on the web

939
00:39:26,960 --> 00:39:29,040
the web was a gift

940
00:39:29,040 --> 00:39:31,440
it was tim berner's glee's gift

941
00:39:31,440 --> 00:39:34,320
and it wasn't a gift to corporations to

942
00:39:34,320 --> 00:39:36,320
collect rents

943
00:39:36,320 --> 00:39:38,320
to sell our privacy

944
00:39:38,320 --> 00:39:41,119
it wasn't a gift to the ponzi token

945
00:39:41,119 --> 00:39:42,640
grifters

946
00:39:42,640 --> 00:39:44,560
and it certainly wasn't a gift to

947
00:39:44,560 --> 00:39:46,960
governments to help them control

948
00:39:46,960 --> 00:39:49,520
populations

949
00:39:49,520 --> 00:39:53,040
the gif the web was a gift to you

950
00:39:53,040 --> 00:39:55,839
a gift to all of us and i'm asking you

951
00:39:55,839 --> 00:39:59,520
today please help me to help you to take

952
00:39:59,520 --> 00:40:00,640
it back

953
00:40:00,640 --> 00:40:03,520
because you know what privacy matters

954
00:40:03,520 --> 00:40:07,599
the net matters and our freedom matters

955
00:40:07,599 --> 00:40:09,440
and i believe that

956
00:40:09,440 --> 00:40:11,200
making use of

957
00:40:11,200 --> 00:40:13,680
threshold cryptography is an important

958
00:40:13,680 --> 00:40:18,440
tool that can make that happen thank you

959
00:40:26,880 --> 00:40:28,960
okay i think that we do have time for

960
00:40:28,960 --> 00:40:32,920
some questions so

961
00:40:40,079 --> 00:40:44,000
yeah there's a microphone coming to

962
00:40:47,359 --> 00:40:49,839
the microphone

963
00:40:50,720 --> 00:40:51,599
hello

964
00:40:51,599 --> 00:40:53,599
hi i'm xander um i have so many

965
00:40:53,599 --> 00:40:55,200
questions i will probably have to talk

966
00:40:55,200 --> 00:40:56,880
to you afterwards but i could ask a few

967
00:40:56,880 --> 00:40:59,040
of them i'm curious what kind of

968
00:40:59,040 --> 00:41:01,440
threshold cryptography you're using

969
00:41:01,440 --> 00:41:04,800
threshold ecdsa threshold bls

970
00:41:04,800 --> 00:41:06,960
i'm curious if you could give an example

971
00:41:06,960 --> 00:41:08,960
a practical example

972
00:41:08,960 --> 00:41:11,760
of who the mesh providers would be and

973
00:41:11,760 --> 00:41:14,240
how we think about

974
00:41:14,240 --> 00:41:17,119
potential collusion between the mesh

975
00:41:17,119 --> 00:41:19,359
providers and i'm curious if you've

976
00:41:19,359 --> 00:41:22,000
given any thought to um

977
00:41:22,000 --> 00:41:25,040
proactive security of the private key

978
00:41:25,040 --> 00:41:27,680
shares if you have any anything in mind

979
00:41:27,680 --> 00:41:30,800
in terms of periodically re-sharing and

980
00:41:30,800 --> 00:41:33,280
do you maintain the same public key

981
00:41:33,280 --> 00:41:35,280
through that i'll limit myself to three

982
00:41:35,280 --> 00:41:36,400
thank you

983
00:41:36,400 --> 00:41:38,079
okay so

984
00:41:38,079 --> 00:41:39,920
i will be in the so towards the first

985
00:41:39,920 --> 00:41:41,680
part i'll be in the coffee shop most of

986
00:41:41,680 --> 00:41:45,359
the conference so just hit me up uh

987
00:41:45,359 --> 00:41:47,440
i'm here to make contacts

988
00:41:47,440 --> 00:41:50,960
uh in terms of um

989
00:41:50,960 --> 00:41:52,000
okay

990
00:41:52,000 --> 00:41:55,119
in terms of uh who can be a mesh service

991
00:41:55,119 --> 00:41:56,480
provider

992
00:41:56,480 --> 00:41:58,319
uh well i had to take it out because of

993
00:41:58,319 --> 00:41:59,760
time constraint

994
00:41:59,760 --> 00:42:01,200
you can be your own mesh service

995
00:42:01,200 --> 00:42:02,480
provider

996
00:42:02,480 --> 00:42:05,760
all you need is an external static ip

997
00:42:05,760 --> 00:42:06,960
address

998
00:42:06,960 --> 00:42:08,960
and a domain name

999
00:42:08,960 --> 00:42:11,119
now obviously at the moment that's ten

1000
00:42:11,119 --> 00:42:13,040
dollars a year for the domain name plus

1001
00:42:13,040 --> 00:42:15,200
five dollars a year for hosting

1002
00:42:15,200 --> 00:42:17,520
so you know that's like

1003
00:42:17,520 --> 00:42:21,520
70 a year that's probably more than uh

1004
00:42:21,520 --> 00:42:23,520
but

1005
00:42:23,520 --> 00:42:26,000
what i'm hoping for

1006
00:42:26,000 --> 00:42:28,240
is that in the you know

1007
00:42:28,240 --> 00:42:30,480
in the near term we will see some free

1008
00:42:30,480 --> 00:42:33,440
providers coming up to build the uh

1009
00:42:33,440 --> 00:42:35,119
community

1010
00:42:35,119 --> 00:42:36,880
and you know if you were doing this at

1011
00:42:36,880 --> 00:42:38,079
scale if you're

1012
00:42:38,079 --> 00:42:40,560
hosting a hundred or a thousand

1013
00:42:40,560 --> 00:42:41,839
you know

1014
00:42:41,839 --> 00:42:43,599
you're looking at a few pennies per

1015
00:42:43,599 --> 00:42:46,000
customer to support them

1016
00:42:46,000 --> 00:42:48,240
so i think that that will happen in the

1017
00:42:48,240 --> 00:42:49,440
short term but

1018
00:42:49,440 --> 00:42:51,520
longer term

1019
00:42:51,520 --> 00:42:53,760
most people have either

1020
00:42:53,760 --> 00:42:56,160
a cloud storage device

1021
00:42:56,160 --> 00:42:58,400
or an antivirus subscription

1022
00:42:58,400 --> 00:43:01,440
or an email subscription or whatever

1023
00:43:01,440 --> 00:43:02,560
and

1024
00:43:02,560 --> 00:43:04,400
looking at the additional effort that it

1025
00:43:04,400 --> 00:43:05,520
takes to

1026
00:43:05,520 --> 00:43:08,480
add the mesh as a mesh service provision

1027
00:43:08,480 --> 00:43:10,720
as a laid service

1028
00:43:10,720 --> 00:43:12,800
my hope would be to persuade the people

1029
00:43:12,800 --> 00:43:14,560
in that space

1030
00:43:14,560 --> 00:43:17,280
to step up and start offering it

1031
00:43:17,280 --> 00:43:19,520
and the uh the sector that's probably

1032
00:43:19,520 --> 00:43:21,440
the ripest for that is virtual private

1033
00:43:21,440 --> 00:43:23,280
network vendors

1034
00:43:23,280 --> 00:43:25,200
in that they're all about personal

1035
00:43:25,200 --> 00:43:27,520
privacy but you know

1036
00:43:27,520 --> 00:43:30,079
what does a secure pipe to their data

1037
00:43:30,079 --> 00:43:32,480
center really do for me not a great deal

1038
00:43:32,480 --> 00:43:35,839
i'm afraid but if i could have that plus

1039
00:43:35,839 --> 00:43:37,920
the mesh that would be starting to look

1040
00:43:37,920 --> 00:43:39,280
interesting

1041
00:43:39,280 --> 00:43:41,119
um

1042
00:43:41,119 --> 00:43:42,560
yeah

1043
00:43:42,560 --> 00:43:44,640
oh yes in terms of trusting the mesh

1044
00:43:44,640 --> 00:43:46,720
service provider

1045
00:43:46,720 --> 00:43:49,359
when i first designed the mesh i was

1046
00:43:49,359 --> 00:43:51,520
seeing seeing the mesh service provider

1047
00:43:51,520 --> 00:43:54,640
as being a zero trust service and i did

1048
00:43:54,640 --> 00:43:56,640
actually start using that term for a

1049
00:43:56,640 --> 00:43:58,960
while before it became popular

1050
00:43:58,960 --> 00:44:03,520
i don't use that term anymore

1051
00:44:03,760 --> 00:44:06,560
the mesh service provider never has

1052
00:44:06,560 --> 00:44:08,480
access to

1053
00:44:08,480 --> 00:44:10,079
any of the

1054
00:44:10,079 --> 00:44:12,000
encrypted data

1055
00:44:12,000 --> 00:44:14,240
of the user and all the you know all the

1056
00:44:14,240 --> 00:44:16,800
contact catalogs the bookmarks etc it's

1057
00:44:16,800 --> 00:44:18,960
all encrypted end to end

1058
00:44:18,960 --> 00:44:21,920
but it is trusted to withdraw the

1059
00:44:21,920 --> 00:44:24,319
ability to threshold decrypt so it's not

1060
00:44:24,319 --> 00:44:25,520
purely

1061
00:44:25,520 --> 00:44:27,040
zero trust and

1062
00:44:27,040 --> 00:44:29,119
yeah i mean this is where i started to

1063
00:44:29,119 --> 00:44:31,359
realize that zero trust is impossible

1064
00:44:31,359 --> 00:44:32,240
because

1065
00:44:32,240 --> 00:44:34,720
if you have a service out there

1066
00:44:34,720 --> 00:44:36,560
and you have threshold cryptography that

1067
00:44:36,560 --> 00:44:39,359
allows you to spread a roll between

1068
00:44:39,359 --> 00:44:41,440
multiple pieces you're going to start

1069
00:44:41,440 --> 00:44:42,480
giving

1070
00:44:42,480 --> 00:44:45,520
that service somewhere um something to

1071
00:44:45,520 --> 00:44:50,000
do so anyway so

1072
00:44:50,000 --> 00:44:51,200
so

1073
00:44:51,200 --> 00:44:53,359
first is a comment so you mentioned that

1074
00:44:53,359 --> 00:44:56,640
pki or public key encryption doesn't

1075
00:44:56,640 --> 00:44:58,079
allow for

1076
00:44:58,079 --> 00:44:59,839
the fact that if you want to decrypt

1077
00:44:59,839 --> 00:45:02,480
something and the user does not exist

1078
00:45:02,480 --> 00:45:03,280
yet

1079
00:45:03,280 --> 00:45:06,319
like you can't do that like you can't uh

1080
00:45:06,319 --> 00:45:08,319
encrypt something for future

1081
00:45:08,319 --> 00:45:09,920
uh purposes

1082
00:45:09,920 --> 00:45:10,800
um

1083
00:45:10,800 --> 00:45:11,760
but

1084
00:45:11,760 --> 00:45:13,839
if you think about like attribute based

1085
00:45:13,839 --> 00:45:15,599
encryption

1086
00:45:15,599 --> 00:45:17,520
in particular like cipher text based

1087
00:45:17,520 --> 00:45:19,920
attribute based encryption you can in

1088
00:45:19,920 --> 00:45:20,960
fact

1089
00:45:20,960 --> 00:45:23,599
encrypt things for like sets of users or

1090
00:45:23,599 --> 00:45:26,560
have like arbitrary policies

1091
00:45:26,560 --> 00:45:28,800
okay so when i was talking about public

1092
00:45:28,800 --> 00:45:30,640
key encryption i was talking about

1093
00:45:30,640 --> 00:45:33,040
the canon of cryptography was

1094
00:45:33,040 --> 00:45:36,000
established when openpgp launched

1095
00:45:36,000 --> 00:45:38,480
and one of the sad things is that it

1096
00:45:38,480 --> 00:45:39,839
closed

1097
00:45:39,839 --> 00:45:41,920
there's an incredible amount of stuff

1098
00:45:41,920 --> 00:45:44,839
like you know attribute-based encryption

1099
00:45:44,839 --> 00:45:46,560
um

1100
00:45:46,560 --> 00:45:48,800
you know um

1101
00:45:48,800 --> 00:45:50,480
recryption

1102
00:45:50,480 --> 00:45:53,200
uh threshold cryptography structured

1103
00:45:53,200 --> 00:45:54,560
cryptography well structured

1104
00:45:54,560 --> 00:45:56,079
cryptography we couldn't use because of

1105
00:45:56,079 --> 00:45:57,760
the patterns of course

1106
00:45:57,760 --> 00:45:59,760
and so you know what what i'm saying

1107
00:45:59,760 --> 00:46:02,480
yeah you need something else

1108
00:46:02,480 --> 00:46:06,960
beyond that original canon of open pgp

1109
00:46:06,960 --> 00:46:10,000
and wha and when you start to drill down

1110
00:46:10,000 --> 00:46:12,960
uh i mean originally uh when i presented

1111
00:46:12,960 --> 00:46:14,880
this the first time

1112
00:46:14,880 --> 00:46:17,839
i presented it as using uh proxy

1113
00:46:17,839 --> 00:46:19,760
re-encryption

1114
00:46:19,760 --> 00:46:22,319
i was only afterwards as i realized that

1115
00:46:22,319 --> 00:46:24,800
what i had actually done was to refactor

1116
00:46:24,800 --> 00:46:26,480
proxy re-encryption so it became a

1117
00:46:26,480 --> 00:46:28,560
threshold screen so actually when you

1118
00:46:28,560 --> 00:46:30,800
start to drill down

1119
00:46:30,800 --> 00:46:32,960
it all looks very much the same what is

1120
00:46:32,960 --> 00:46:35,520
important is the set of capabilities

1121
00:46:35,520 --> 00:46:36,670
and the reason that i'm

1122
00:46:36,670 --> 00:46:39,280
[Music]

1123
00:46:39,280 --> 00:46:41,200
focused on threshold

1124
00:46:41,200 --> 00:46:43,520
is that is a

1125
00:46:43,520 --> 00:46:47,119
we don't have a qualif uh uh

1126
00:46:47,119 --> 00:46:50,640
a standard yet quantum resistance

1127
00:46:50,640 --> 00:46:52,880
threshold scheme

1128
00:46:52,880 --> 00:46:54,880
but there are candidates that are

1129
00:46:54,880 --> 00:46:58,880
threshold capable that could be adapted

1130
00:46:58,880 --> 00:47:00,800
and so that's a route that i know that i

1131
00:47:00,800 --> 00:47:03,359
can go through to my quantum secure if i

1132
00:47:03,359 --> 00:47:04,560
need to

1133
00:47:04,560 --> 00:47:06,000
but

1134
00:47:06,000 --> 00:47:07,520
you know

1135
00:47:07,520 --> 00:47:08,960
there's a limited amount i can bring to

1136
00:47:08,960 --> 00:47:11,599
the table at once yeah and then uh

1137
00:47:11,599 --> 00:47:14,560
quickly the second question is if you

1138
00:47:14,560 --> 00:47:17,440
from like a business application uh

1139
00:47:17,440 --> 00:47:20,240
perspective would you say this is

1140
00:47:20,240 --> 00:47:22,880
similar to what octa does with like

1141
00:47:22,880 --> 00:47:24,800
single sign-on for like a variety of

1142
00:47:24,800 --> 00:47:27,599
resources

1143
00:47:28,079 --> 00:47:29,680
especially if you combine it with like

1144
00:47:29,680 --> 00:47:32,160
you know say like zero trust

1145
00:47:32,160 --> 00:47:34,480
quote unquote networks

1146
00:47:34,480 --> 00:47:38,480
uh i thought that octa's a saml vendor

1147
00:47:38,480 --> 00:47:39,599
are they

1148
00:47:39,599 --> 00:47:42,559
just from like an application layer not

1149
00:47:42,559 --> 00:47:45,680
like the internals

1150
00:47:45,750 --> 00:47:48,849
[Music]

1151
00:47:50,079 --> 00:47:50,839
i

1152
00:47:50,839 --> 00:47:52,800
think

1153
00:47:52,800 --> 00:47:54,880
yeah i i i don't know enough about their

1154
00:47:54,880 --> 00:47:57,119
product to comment uh

1155
00:47:57,119 --> 00:48:01,440
maybe we can take it offline cool thanks

1156
00:48:03,839 --> 00:48:06,079
is the code available today what is your

1157
00:48:06,079 --> 00:48:08,319
code available today oh yes absolutely

1158
00:48:08,319 --> 00:48:10,319
it's all up there on github

1159
00:48:10,319 --> 00:48:11,520
um

1160
00:48:11,520 --> 00:48:13,839
if you go to mathmesh.com you can

1161
00:48:13,839 --> 00:48:15,920
download um

1162
00:48:15,920 --> 00:48:18,160
the co the command line tools i've been

1163
00:48:18,160 --> 00:48:19,839
showing here

1164
00:48:19,839 --> 00:48:23,839
they run on windows mac and linux

1165
00:48:23,839 --> 00:48:26,800
all the code is in c sharp c sharp

1166
00:48:26,800 --> 00:48:28,319
itself is now

1167
00:48:28,319 --> 00:48:31,200
under an mit license or my code is under

1168
00:48:31,200 --> 00:48:33,200
an mit license

1169
00:48:33,200 --> 00:48:36,880
and the build tools that are used to

1170
00:48:36,880 --> 00:48:38,640
generate the code

1171
00:48:38,640 --> 00:48:40,800
are also on

1172
00:48:40,800 --> 00:48:43,839
on github and are also under an open

1173
00:48:43,839 --> 00:48:46,160
source license

1174
00:48:46,160 --> 00:48:49,399
thank you

1175
00:48:57,440 --> 00:48:59,119
reminders again please stay hydrated

1176
00:48:59,119 --> 00:49:01,200
today it is a scorcher out there also as

1177
00:49:01,200 --> 00:49:02,800
a friendly reminder

1178
00:49:02,800 --> 00:49:04,720
please remember that in indoor mask

1179
00:49:04,720 --> 00:49:07,119
space in indoor spaces at the conference

1180
00:49:07,119 --> 00:49:09,119
please wear your mask the only exception

1181
00:49:09,119 --> 00:49:10,800
is when people are at

1182
00:49:10,800 --> 00:49:12,960
a lectern or speaking like this thank

1183
00:49:12,960 --> 00:49:15,960
you

