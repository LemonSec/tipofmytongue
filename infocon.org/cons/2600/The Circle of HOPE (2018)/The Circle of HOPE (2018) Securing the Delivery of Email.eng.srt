1
00:00:00,000 --> 00:00:06,029
um hello there I'm Sydney Lee I am a

2
00:00:03,659 --> 00:00:08,879
staff technologist at the Electronic

3
00:00:06,029 --> 00:00:10,830
Frontier Foundation and I that means I

4
00:00:08,880 --> 00:00:13,650
primarily do work on our open source

5
00:00:10,830 --> 00:00:16,980
projects and technology initiatives such

6
00:00:13,650 --> 00:00:19,109
as this one I also happen to write and

7
00:00:16,980 --> 00:00:22,590
review sassy blog posts about the sad

8
00:00:19,109 --> 00:00:24,390
sad state of the internet and talk to

9
00:00:22,590 --> 00:00:26,939
our lawyers and policy activists

10
00:00:24,390 --> 00:00:30,660
sometimes about emergent emerging

11
00:00:26,939 --> 00:00:32,460
technologies it's a cool job yeah anyway

12
00:00:30,660 --> 00:00:34,770
so that's not that's not really what I'm

13
00:00:32,460 --> 00:00:37,380
here to talk to you about tape I'm here

14
00:00:34,770 --> 00:00:41,910
to talk about securing the delivery of

15
00:00:37,380 --> 00:00:44,610
email because it's 2018 and I'm gonna

16
00:00:41,910 --> 00:00:47,309
talk about how TLS for smtp is hardly

17
00:00:44,610 --> 00:00:49,559
broken and i'm going to talk about what

18
00:00:47,309 --> 00:00:51,899
we can do about it it's gonna be a

19
00:00:49,559 --> 00:00:53,519
pretty long ride and it's been a while

20
00:00:51,899 --> 00:00:56,670
so thank you for joining me today

21
00:00:53,520 --> 00:01:00,960
because you're in it with me now you

22
00:00:56,670 --> 00:01:03,899
can't you can't leave cool so you may

23
00:01:00,960 --> 00:01:06,390
have heard of EFS initiative to encrypt

24
00:01:03,899 --> 00:01:08,040
the web this phrase is plastered

25
00:01:06,390 --> 00:01:10,979
everywhere it's all over our website

26
00:01:08,040 --> 00:01:13,110
it's you know it's in our blog posts or

27
00:01:10,979 --> 00:01:14,789
you say it all the time it's like that's

28
00:01:13,110 --> 00:01:17,250
the sub header for all of our other like

29
00:01:14,790 --> 00:01:20,580
web you can have projects like let's

30
00:01:17,250 --> 00:01:23,070
encrypt or a certain bot and I'm gonna

31
00:01:20,580 --> 00:01:27,060
be kind of a nit picky here I really I'm

32
00:01:23,070 --> 00:01:29,279
not a huge fan of this phrase in a knit

33
00:01:27,060 --> 00:01:31,290
picot because I I don't think we should

34
00:01:29,280 --> 00:01:34,280
just encrypt the web we have to encrypt

35
00:01:31,290 --> 00:01:34,280
the entire Internet

36
00:01:34,330 --> 00:01:41,789
and whenever we use the word web but

37
00:01:37,480 --> 00:01:44,050
then we actually mean I'm sorry Thanks

38
00:01:41,790 --> 00:01:46,450
whenever we use the word web but we

39
00:01:44,050 --> 00:01:48,580
actually mean the entire internet and we

40
00:01:46,450 --> 00:01:51,520
forget about all of the TCP packets that

41
00:01:48,580 --> 00:01:54,460
are used to deliver application there

42
00:01:51,520 --> 00:01:56,619
are protocols that are not HTTP and I'm

43
00:01:54,460 --> 00:02:03,220
a strong believer in leaving no TCP

44
00:01:56,620 --> 00:02:05,680
packet behind so I'm gonna talk you do

45
00:02:03,220 --> 00:02:13,840
well you do Pete gets left behind even

46
00:02:05,680 --> 00:02:16,300
if you try so so I talked about TLS for

47
00:02:13,840 --> 00:02:19,420
an email in particular whose TCP packets

48
00:02:16,300 --> 00:02:21,280
have been particularly left behind and

49
00:02:19,420 --> 00:02:23,350
not not necessarily overlooked they've

50
00:02:21,280 --> 00:02:25,180
been looked at a lot but just left

51
00:02:23,350 --> 00:02:30,790
behind for several difficult technical

52
00:02:25,180 --> 00:02:32,560
political and social reasons and yeah so

53
00:02:30,790 --> 00:02:33,130
you've heard the phrase email is so

54
00:02:32,560 --> 00:02:35,890
broken

55
00:02:33,130 --> 00:02:39,400
let's just stop using it it's incredibly

56
00:02:35,890 --> 00:02:40,720
popular to hate on email and it's easy

57
00:02:39,400 --> 00:02:42,720
to do this because it's really

58
00:02:40,720 --> 00:02:47,260
complicated the ecosystem is

59
00:02:42,720 --> 00:02:51,670
decentralized it's hard to deal with but

60
00:02:47,260 --> 00:02:54,070
I'm I'm a staunch believer in email an

61
00:02:51,670 --> 00:02:55,690
email isn't that bad and there's no way

62
00:02:54,070 --> 00:02:58,090
I'm gonna use slack for all of my

63
00:02:55,690 --> 00:03:00,070
communications so even though the

64
00:02:58,090 --> 00:03:03,040
ecosystem has centralized significantly

65
00:03:00,070 --> 00:03:04,660
over the past few decades it's still one

66
00:03:03,040 --> 00:03:07,060
of the first federated a truly

67
00:03:04,660 --> 00:03:10,090
decentralized internet protocols that is

68
00:03:07,060 --> 00:03:11,980
interoperable you know slack hasn't

69
00:03:10,090 --> 00:03:14,470
solved in Turin is a ssin communication

70
00:03:11,980 --> 00:03:16,420
and it's like a centralized service it

71
00:03:14,470 --> 00:03:19,180
gatekeeping is what essentially services

72
00:03:16,420 --> 00:03:20,679
do and that's why they want to get

73
00:03:19,180 --> 00:03:23,800
everyone on the world on to their

74
00:03:20,680 --> 00:03:26,320
platform for money so email is through

75
00:03:23,800 --> 00:03:28,780
Italy hugely important but it's sad and

76
00:03:26,320 --> 00:03:32,380
it kind of makes me sad that it's so

77
00:03:28,780 --> 00:03:33,840
difficult to get right okay so so let's

78
00:03:32,380 --> 00:03:38,769
let's talk about securing email

79
00:03:33,840 --> 00:03:40,769
hopefully that was motivated enough but

80
00:03:38,769 --> 00:03:43,390
like what would that even look like

81
00:03:40,769 --> 00:03:45,690
because when I hear the phrase secure

82
00:03:43,390 --> 00:03:48,059
email I think of a mythical creature

83
00:03:45,690 --> 00:03:51,010
no one has really

84
00:03:48,060 --> 00:03:53,230
it doesn't really seem to exist it seems

85
00:03:51,010 --> 00:03:56,920
to be like this vague you know idea

86
00:03:53,230 --> 00:03:58,929
people have but it's hard to define so

87
00:03:56,920 --> 00:04:02,829
let's do that first let's set some

88
00:03:58,930 --> 00:04:05,290
ground rules and refresh our minds for

89
00:04:02,830 --> 00:04:09,730
those of you who may not have the joy of

90
00:04:05,290 --> 00:04:12,640
regularly managing an email server this

91
00:04:09,730 --> 00:04:14,640
is pretty much what email delivery looks

92
00:04:12,640 --> 00:04:16,899
like but with a lot more steps

93
00:04:14,640 --> 00:04:19,659
you know Bob submits may alter his mail

94
00:04:16,899 --> 00:04:21,849
server the mail servers perform some

95
00:04:19,660 --> 00:04:24,220
obscure ritual and the email is

96
00:04:21,850 --> 00:04:26,410
magically delivered to the receiving

97
00:04:24,220 --> 00:04:33,970
mail server and that mail is then

98
00:04:26,410 --> 00:04:35,620
delivered to my mailbox by yeah okay

99
00:04:33,970 --> 00:04:37,660
with that in mind the two models of a

100
00:04:35,620 --> 00:04:42,000
secure email that currently exists and

101
00:04:37,660 --> 00:04:46,630
are first we should secure each hop

102
00:04:42,000 --> 00:04:48,730
individually using a TLS well you know

103
00:04:46,630 --> 00:04:50,290
having only TLS it's not great because

104
00:04:48,730 --> 00:04:53,350
you know as you saw in that diagram and

105
00:04:50,290 --> 00:04:56,560
as you probably know email goes through

106
00:04:53,350 --> 00:04:59,230
several hops TLS only encrypts a

107
00:04:56,560 --> 00:05:00,610
communication over a single hop so that

108
00:04:59,230 --> 00:05:03,220
means all of the mail servers along the

109
00:05:00,610 --> 00:05:05,770
way have your email in plain text if you

110
00:05:03,220 --> 00:05:08,050
use a corporate mail provider which a

111
00:05:05,770 --> 00:05:09,820
massive majority of the world does then

112
00:05:08,050 --> 00:05:12,220
your mill provider could be subpoenaed

113
00:05:09,820 --> 00:05:16,349
or compromised and you know put at risk

114
00:05:12,220 --> 00:05:19,570
the contents of the details of your life

115
00:05:16,350 --> 00:05:23,050
using an encrypted email like PGP or

116
00:05:19,570 --> 00:05:25,690
s/mime it can fix that to an extent in

117
00:05:23,050 --> 00:05:29,410
particular they leak metadata subject

118
00:05:25,690 --> 00:05:31,480
lines are readable by default in both

119
00:05:29,410 --> 00:05:33,030
PGP and s/mime like I believe they're

120
00:05:31,480 --> 00:05:37,150
readable in protonmail

121
00:05:33,030 --> 00:05:39,309
which is crazy and the from into fields

122
00:05:37,150 --> 00:05:41,080
are also readable and that that last one

123
00:05:39,310 --> 00:05:43,090
although there's there are workarounds

124
00:05:41,080 --> 00:05:44,650
around the encrypting this subject line

125
00:05:43,090 --> 00:05:46,119
that last one is something that if we

126
00:05:44,650 --> 00:05:52,390
wanted to change it we would have to

127
00:05:46,120 --> 00:05:53,920
rewrite SMTP so using PGP without TLS

128
00:05:52,390 --> 00:05:56,409
thanks

129
00:05:53,920 --> 00:05:59,460
it gives networking a network each

130
00:05:56,410 --> 00:06:01,270
dropping dragonettes massive amounts of

131
00:05:59,460 --> 00:06:02,919
communication metadata

132
00:06:01,270 --> 00:06:04,000
and unless and to end encryption you

133
00:06:02,920 --> 00:06:07,030
know becomes the default there's also

134
00:06:04,000 --> 00:06:10,780
kind of signals to these network eat

135
00:06:07,030 --> 00:06:13,119
shoppers who exactly is listening or is

136
00:06:10,780 --> 00:06:14,890
interested in these technologies so in

137
00:06:13,120 --> 00:06:17,350
an ideal world we do want both we want

138
00:06:14,890 --> 00:06:21,219
TLS for to secure metadata from network

139
00:06:17,350 --> 00:06:23,260
passive network attackers and a PGP to

140
00:06:21,220 --> 00:06:26,380
secure our email contents from say a

141
00:06:23,260 --> 00:06:30,730
Gmail or prying eyes within Gmail

142
00:06:26,380 --> 00:06:33,640
Network so yeah in this talk we're just

143
00:06:30,730 --> 00:06:35,890
going to focus on TLS PGP and the entire

144
00:06:33,640 --> 00:06:37,930
anti encrypted emails this ecosystem has

145
00:06:35,890 --> 00:06:40,750
its own challenges and problems with

146
00:06:37,930 --> 00:06:43,930
regard to adoption and usability a

147
00:06:40,750 --> 00:06:46,960
decade Daniel Kahn Gilmore gave a great

148
00:06:43,930 --> 00:06:48,880
talk this morning about Auto crypt which

149
00:06:46,960 --> 00:06:50,830
is you know project to make it and

150
00:06:48,880 --> 00:06:51,969
during encryption a universal and I

151
00:06:50,830 --> 00:06:55,330
highly recommend checking out that

152
00:06:51,970 --> 00:06:58,600
project ok ok back to back to TLS for

153
00:06:55,330 --> 00:07:01,419
Imam to be a little bit Pinet pedantic

154
00:06:58,600 --> 00:07:03,130
we're going to focus on how to here it's

155
00:07:01,420 --> 00:07:05,710
the most problematic for many reasons

156
00:07:03,130 --> 00:07:07,030
and this will become imminently more

157
00:07:05,710 --> 00:07:09,729
clear if you're not familiar with email

158
00:07:07,030 --> 00:07:12,309
the other two you know when Bob submits

159
00:07:09,730 --> 00:07:15,940
email and email is delivered to my

160
00:07:12,310 --> 00:07:17,620
mailbox are relatively easier since the

161
00:07:15,940 --> 00:07:18,969
email user typically has some sort of

162
00:07:17,620 --> 00:07:21,130
trusted relationship with the email

163
00:07:18,970 --> 00:07:22,300
provider so you can you have leverage

164
00:07:21,130 --> 00:07:25,030
there you can just ask your email

165
00:07:22,300 --> 00:07:26,650
provider it's you only support TLS like

166
00:07:25,030 --> 00:07:28,869
hey I'm going to send and receive mail

167
00:07:26,650 --> 00:07:34,479
over a TLS connection only on these

168
00:07:28,870 --> 00:07:36,670
ports users have a way to know whether

169
00:07:34,480 --> 00:07:39,340
their mail server supports TLS there and

170
00:07:36,670 --> 00:07:44,110
this is not the case for the hop between

171
00:07:39,340 --> 00:07:50,820
two metal servers so yeah that's this is

172
00:07:44,110 --> 00:07:53,260
a start TLS protonmail asks nicely right

173
00:07:50,820 --> 00:07:56,440
the both mail servers have to discover

174
00:07:53,260 --> 00:07:58,650
that the other supports TLS and you know

175
00:07:56,440 --> 00:08:02,110
it if EF f responds positively

176
00:07:58,650 --> 00:08:04,690
protonmail sends the start TLS verb to

177
00:08:02,110 --> 00:08:06,400
initiate a TLS connection so let's just

178
00:08:04,690 --> 00:08:11,380
yet you know start TLS deploy everywhere

179
00:08:06,400 --> 00:08:13,370
right yeah it's it's a kangaroo cuz

180
00:08:11,380 --> 00:08:19,300
there it's a hopping

181
00:08:13,370 --> 00:08:21,979
sorry I am a fan of that that animal

182
00:08:19,300 --> 00:08:24,440
okay so like obviously we do want to

183
00:08:21,979 --> 00:08:26,320
push for a start Ellis adoption so mail

184
00:08:24,440 --> 00:08:29,419
servers can encrypt tomorrow often

185
00:08:26,320 --> 00:08:30,349
towards the end of 2013 and beginning of

186
00:08:29,419 --> 00:08:33,199
2014

187
00:08:30,350 --> 00:08:35,630
several organizations and research

188
00:08:33,200 --> 00:08:38,659
researchers started taking a closer look

189
00:08:35,630 --> 00:08:41,990
at basic start TLS adoption numbers and

190
00:08:38,659 --> 00:08:42,979
other things look pretty bad right this

191
00:08:41,990 --> 00:08:45,320
graph is from Google's transparency

192
00:08:42,979 --> 00:08:47,860
report which looks at the percentage of

193
00:08:45,320 --> 00:08:51,380
outbound emails or maybe inbound

194
00:08:47,860 --> 00:08:54,140
delivered via Gmail over or to Gmail

195
00:08:51,380 --> 00:08:57,230
over TLS researchers reported similar

196
00:08:54,140 --> 00:08:59,689
figures it looked pretty bad but today

197
00:08:57,230 --> 00:09:02,600
you know like it looks like 90% of

198
00:08:59,690 --> 00:09:05,150
outbound emails from Gmail use TLS which

199
00:09:02,600 --> 00:09:08,360
is great there this is probably the cent

200
00:09:05,150 --> 00:09:10,339
measure of how emails are encrypted in

201
00:09:08,360 --> 00:09:13,630
the real world given the unfortunate

202
00:09:10,339 --> 00:09:16,370
massive market share that Gmail holds

203
00:09:13,630 --> 00:09:19,839
but obviously we're not done because if

204
00:09:16,370 --> 00:09:23,150
this is not a ten minute presentation

205
00:09:19,839 --> 00:09:25,940
yeah so the TLS ecosystem is broken in

206
00:09:23,150 --> 00:09:28,040
two major ways and their major enough

207
00:09:25,940 --> 00:09:30,230
that if both of these flaws are not

208
00:09:28,040 --> 00:09:33,410
fixed together then kill us for email it

209
00:09:30,230 --> 00:09:39,080
cannot properly protect against in an

210
00:09:33,410 --> 00:09:41,779
active active adversary yeah first one

211
00:09:39,080 --> 00:09:43,880
you've probably heard of this one it's

212
00:09:41,779 --> 00:09:46,029
susceptible to the trivial downgrade

213
00:09:43,880 --> 00:09:46,029
attacks

214
00:09:46,060 --> 00:09:53,089
so the initial negotiation is over

215
00:09:49,459 --> 00:09:54,109
plaintext and any network adversary or

216
00:09:53,089 --> 00:09:56,930
you know machine on the route between

217
00:09:54,110 --> 00:09:59,480
these two servers can dress censor the

218
00:09:56,930 --> 00:10:02,540
start TLS advertisement since it's

219
00:09:59,480 --> 00:10:03,050
entirely unencrypted it's kind of

220
00:10:02,540 --> 00:10:08,180
tampering

221
00:10:03,050 --> 00:10:11,359
it was totally game and because email is

222
00:10:08,180 --> 00:10:16,000
email they automatically and by default

223
00:10:11,360 --> 00:10:19,940
just transmit the emails over plain text

224
00:10:16,000 --> 00:10:21,220
and it happens in the real world in late

225
00:10:19,940 --> 00:10:23,450
2014

226
00:10:21,220 --> 00:10:26,680
several ISPs across the world we're

227
00:10:23,450 --> 00:10:29,379
explicitly stripping the start TLS verb

228
00:10:26,680 --> 00:10:32,529
the star tails banner from SMTP

229
00:10:29,379 --> 00:10:33,999
connections and also the interesting

230
00:10:32,529 --> 00:10:36,610
thing is there's several ways of

231
00:10:33,999 --> 00:10:38,709
stripping start TLS because start TLS is

232
00:10:36,610 --> 00:10:40,149
so brittle and mail client or mail

233
00:10:38,709 --> 00:10:42,069
servers in general are extremely brittle

234
00:10:40,149 --> 00:10:44,170
you can modify the command or remove it

235
00:10:42,069 --> 00:10:46,509
entirely or just like override it with

236
00:10:44,170 --> 00:10:48,699
garbage and all of these are guaranteed

237
00:10:46,509 --> 00:10:51,929
to trip up clients to fall back to

238
00:10:48,699 --> 00:10:54,160
unencrypted connections the different

239
00:10:51,929 --> 00:10:55,929
techniques for a stripping start TLS

240
00:10:54,160 --> 00:10:58,420
actually provide a sort of fingerprint

241
00:10:55,929 --> 00:11:01,839
for who is doing it or what device

242
00:10:58,420 --> 00:11:03,639
manufacturer is doing it and in 2014 it

243
00:11:01,839 --> 00:11:06,819
was found that like a significant

244
00:11:03,639 --> 00:11:09,339
majority of the start TLS tripping was

245
00:11:06,819 --> 00:11:12,339
being done by a particular Cisco

246
00:11:09,339 --> 00:11:16,259
firewall device that offered email

247
00:11:12,339 --> 00:11:23,290
inspection as a spam prevention service

248
00:11:16,259 --> 00:11:26,290
which is absolutely insane yeah and in

249
00:11:23,290 --> 00:11:28,719
2014 researchers also did a survey of

250
00:11:26,290 --> 00:11:31,809
incoming mail that stripped a start TLS

251
00:11:28,720 --> 00:11:34,720
commands but per country which also

252
00:11:31,809 --> 00:11:38,079
yields absolutely absurd results the

253
00:11:34,720 --> 00:11:39,939
attack is so easy to pull off and these

254
00:11:38,079 --> 00:11:42,609
results actually did motivate a

255
00:11:39,939 --> 00:11:45,610
significant amount of work on the email

256
00:11:42,610 --> 00:11:49,959
ecosystem and that's why we have good

257
00:11:45,610 --> 00:11:54,699
start TLS numbers but obviously that's

258
00:11:49,959 --> 00:11:57,160
not enough and this downgrade attack

259
00:11:54,699 --> 00:11:57,758
isn't the only large problem in this

260
00:11:57,160 --> 00:12:01,240
ecosystem

261
00:11:57,759 --> 00:12:03,040
the second problem suppose downgrades

262
00:12:01,240 --> 00:12:05,230
were just solved by some miracle or

263
00:12:03,040 --> 00:12:09,099
force of sheer will or like maybe both

264
00:12:05,230 --> 00:12:10,660
and then some the so okay let's say

265
00:12:09,100 --> 00:12:13,509
there's only two mail servers that

266
00:12:10,660 --> 00:12:16,449
exists trivially and they both know that

267
00:12:13,509 --> 00:12:21,309
others supports TLS the problem is that

268
00:12:16,449 --> 00:12:24,549
nobody validates certificates so they're

269
00:12:21,309 --> 00:12:25,209
still vulnerable to SSL strip like now

270
00:12:24,549 --> 00:12:28,360
in the Middle's

271
00:12:25,209 --> 00:12:30,758
and to be honest it's hard to blame mail

272
00:12:28,360 --> 00:12:34,449
servers for this we're gonna take a

273
00:12:30,759 --> 00:12:36,579
closer look at SMTP again as a refresher

274
00:12:34,449 --> 00:12:39,878
for those who may not be familiar with

275
00:12:36,579 --> 00:12:40,479
how it works as an SMTP which is the

276
00:12:39,879 --> 00:12:42,490
mail delivered

277
00:12:40,480 --> 00:12:45,370
protocol there's this extra step which

278
00:12:42,490 --> 00:12:47,260
involves a DNS lookup email senders are

279
00:12:45,370 --> 00:12:49,389
expected to ask the NS for the host name

280
00:12:47,260 --> 00:12:53,470
of the server that they're supposed to

281
00:12:49,389 --> 00:12:56,709
connect to to talk about email and after

282
00:12:53,470 --> 00:12:59,350
this first lookup like yeah that's work

283
00:12:56,709 --> 00:13:03,989
the mail server proceeds to connect to

284
00:12:59,350 --> 00:13:07,180
that host name so here there's actually

285
00:13:03,990 --> 00:13:09,880
alright and assuming that you know they

286
00:13:07,180 --> 00:13:12,790
start TLS there's actually two names

287
00:13:09,880 --> 00:13:17,860
that this certificate MX TF at that org

288
00:13:12,790 --> 00:13:21,579
can provide a validation for there's MX

289
00:13:17,860 --> 00:13:24,790
AFF org and then e FF dot org itself and

290
00:13:21,579 --> 00:13:29,079
the problem is that both are kind of

291
00:13:24,790 --> 00:13:33,939
troublesome for instance using the

292
00:13:29,079 --> 00:13:35,138
server hostname to using the server

293
00:13:33,940 --> 00:13:39,699
hostname on this certificate

294
00:13:35,139 --> 00:13:43,540
leaves you susceptible to dns forgery in

295
00:13:39,699 --> 00:13:48,130
the absence of dns authentication so

296
00:13:43,540 --> 00:13:50,380
here this evil evil face has

297
00:13:48,130 --> 00:13:52,449
successfully spoofed a dns record or

298
00:13:50,380 --> 00:13:54,339
like man the middle did the announced

299
00:13:52,449 --> 00:13:58,329
connection and provides a bad host name

300
00:13:54,339 --> 00:14:00,430
for which like this guy can totally just

301
00:13:58,329 --> 00:14:05,439
provide a valid certificate for this bad

302
00:14:00,430 --> 00:14:07,300
host name so obtaining a certificate for

303
00:14:05,440 --> 00:14:11,079
the original email domain you have two

304
00:14:07,300 --> 00:14:13,089
org it's actually kind of safer there's

305
00:14:11,079 --> 00:14:15,279
a problem with this too which is that

306
00:14:13,089 --> 00:14:19,329
people in the real world used to hosting

307
00:14:15,279 --> 00:14:22,689
providers and you know even if I trust

308
00:14:19,329 --> 00:14:25,388
Google to host my email do you really

309
00:14:22,690 --> 00:14:30,370
trust them with your private key to

310
00:14:25,389 --> 00:14:33,430
publish for your domain as a result the

311
00:14:30,370 --> 00:14:35,290
ecosystem is really really stuck like

312
00:14:33,430 --> 00:14:36,910
kind of yeah we want we would like to

313
00:14:35,290 --> 00:14:39,579
validate certificates but there's all

314
00:14:36,910 --> 00:14:42,449
these things and it's hard to blame them

315
00:14:39,579 --> 00:14:45,279
so nobody validates certificates and

316
00:14:42,449 --> 00:14:49,180
email is vulnerable to a man in the

317
00:14:45,279 --> 00:14:50,820
Middle's I decided to add this laughs

318
00:14:49,180 --> 00:14:53,520
kind of

319
00:14:50,820 --> 00:14:55,800
half-point very last minute because I

320
00:14:53,520 --> 00:14:57,860
think it's a core cause of by the email

321
00:14:55,800 --> 00:15:01,439
ecosystem is so difficult to upgrade

322
00:14:57,860 --> 00:15:04,860
unlike on the web where a TLS or

323
00:15:01,440 --> 00:15:08,610
encryption or maybe availability errors

324
00:15:04,860 --> 00:15:10,740
all can be forwarded to the user an

325
00:15:08,610 --> 00:15:13,050
email you can't really do that users

326
00:15:10,740 --> 00:15:14,580
just kind of send off their email to the

327
00:15:13,050 --> 00:15:16,170
mail server and just hope for the best

328
00:15:14,580 --> 00:15:19,430
like maybe they'll get another email

329
00:15:16,170 --> 00:15:22,500
back that says hey your delivery failed

330
00:15:19,430 --> 00:15:25,560
but there's no way to kind of offload

331
00:15:22,500 --> 00:15:27,570
these really important security choices

332
00:15:25,560 --> 00:15:29,010
to the user which is what the web

333
00:15:27,570 --> 00:15:33,330
ecosystem does you click through that

334
00:15:29,010 --> 00:15:34,920
maze of error messages in if you want to

335
00:15:33,330 --> 00:15:37,830
prioritize connecting to the website

336
00:15:34,920 --> 00:15:41,969
over the security of that connection so

337
00:15:37,830 --> 00:15:44,880
in 2018 or as of 2018 users don't have a

338
00:15:41,970 --> 00:15:46,950
good way to tell them ur l service

339
00:15:44,880 --> 00:15:51,180
whether they want to prioritize the

340
00:15:46,950 --> 00:15:53,280
libera bility or a security and so as a

341
00:15:51,180 --> 00:15:56,420
result failures or deliverability

342
00:15:53,280 --> 00:15:59,400
failures in email are much higher risk

343
00:15:56,420 --> 00:16:01,620
and you know deliverability is just it

344
00:15:59,400 --> 00:16:06,630
prioritized over security or wherever

345
00:16:01,620 --> 00:16:08,070
possible so yeah there are all these

346
00:16:06,630 --> 00:16:09,710
problems and of course you know of

347
00:16:08,070 --> 00:16:11,610
course people are trying to fix it

348
00:16:09,710 --> 00:16:14,130
people have been trying to fix these

349
00:16:11,610 --> 00:16:16,500
problems for a really long time but why

350
00:16:14,130 --> 00:16:19,290
aren't they fixed yet what are people

351
00:16:16,500 --> 00:16:24,630
trying and I really I really like this

352
00:16:19,290 --> 00:16:25,740
xkcd comment a comic because it's kind

353
00:16:24,630 --> 00:16:27,630
of like the stay and you know there's a

354
00:16:25,740 --> 00:16:30,030
lot of different solutions or just a

355
00:16:27,630 --> 00:16:30,830
couple but each one has different threat

356
00:16:30,030 --> 00:16:33,930
models

357
00:16:30,830 --> 00:16:35,930
that's all slightly different problems

358
00:16:33,930 --> 00:16:39,449
and each have slightly different

359
00:16:35,930 --> 00:16:41,219
ecosystem assumptions and that that just

360
00:16:39,450 --> 00:16:44,460
is the state of the ecosystem right now

361
00:16:41,220 --> 00:16:47,970
although I hope it will converge soon

362
00:16:44,460 --> 00:16:49,470
maybe as if people stopped arguing but

363
00:16:47,970 --> 00:17:00,420
that that doesn't happen on the internet

364
00:16:49,470 --> 00:17:01,710
so yeah so let's let's take a look at

365
00:17:00,420 --> 00:17:03,219
the things we want when we were looking

366
00:17:01,710 --> 00:17:05,770
at these standards

367
00:17:03,220 --> 00:17:08,199
at least your problems right can we

368
00:17:05,770 --> 00:17:11,470
determine whether the recipient supports

369
00:17:08,199 --> 00:17:14,709
TLS or you know how do we validate the

370
00:17:11,470 --> 00:17:16,150
certificate of the recipient and the

371
00:17:14,709 --> 00:17:18,819
other really really important

372
00:17:16,150 --> 00:17:20,680
considerations that I think right now we

373
00:17:18,819 --> 00:17:24,459
have to really really think about are

374
00:17:20,680 --> 00:17:32,560
how easy is it to deploy and what is the

375
00:17:24,459 --> 00:17:36,790
risk of breaking things are you guys

376
00:17:32,560 --> 00:17:41,070
familiar with DNS SEC alright yeah I saw

377
00:17:36,790 --> 00:17:41,070
there was like a half-hearted grumble

378
00:17:41,190 --> 00:17:48,310
yeah so DNS SEC is a protocol for DNS to

379
00:17:45,940 --> 00:17:52,090
publish authenticated records you know

380
00:17:48,310 --> 00:17:55,690
for the DNS records for any given domain

381
00:17:52,090 --> 00:17:58,179
name a DNS SEC is basically a way to

382
00:17:55,690 --> 00:18:00,520
publish signatures for these sets of

383
00:17:58,180 --> 00:18:03,220
Records along with of course the key

384
00:18:00,520 --> 00:18:06,220
that is used to sign that record so

385
00:18:03,220 --> 00:18:09,390
they're the Reg Keith generates that

386
00:18:06,220 --> 00:18:12,070
check mark okay that's the signature

387
00:18:09,390 --> 00:18:13,570
it's the authenticity of each you know

388
00:18:12,070 --> 00:18:16,870
domain to key binding is then vouched

389
00:18:13,570 --> 00:18:19,120
for by the domains parent zone with yet

390
00:18:16,870 --> 00:18:20,260
another signature and it doesn't go all

391
00:18:19,120 --> 00:18:24,850
the way it's not Turtles all the way

392
00:18:20,260 --> 00:18:28,570
down it stops at the DNS root zone with

393
00:18:24,850 --> 00:18:31,060
their root key which is signed by one of

394
00:18:28,570 --> 00:18:33,610
the DNS root thora T's where they

395
00:18:31,060 --> 00:18:36,399
perform like these public key signing

396
00:18:33,610 --> 00:18:38,320
ceremonies that probably involves some

397
00:18:36,400 --> 00:18:39,970
amount of a cult worship and animal

398
00:18:38,320 --> 00:18:42,360
sacrifice I know I honestly I never

399
00:18:39,970 --> 00:18:44,530
participated in one so I don't know

400
00:18:42,360 --> 00:18:46,209
it's basically an alternate way to

401
00:18:44,530 --> 00:18:48,490
establish a chain of trust right a

402
00:18:46,210 --> 00:18:50,350
similar to how CEA's work except instead

403
00:18:48,490 --> 00:18:52,540
of there being a bajillion unaccountable

404
00:18:50,350 --> 00:18:55,389
CAS their trust is bootstrapped on to

405
00:18:52,540 --> 00:18:56,889
the domain registrar hierarchy since we

406
00:18:55,390 --> 00:18:59,310
already kind of trust them to issue

407
00:18:56,890 --> 00:19:02,350
names anyway

408
00:18:59,310 --> 00:19:06,090
you may have also heard of Dane da ne

409
00:19:02,350 --> 00:19:09,520
it's a protocol for domain owners to

410
00:19:06,090 --> 00:19:12,639
basically publish and sign their TLS

411
00:19:09,520 --> 00:19:15,730
public keys so when they make you know a

412
00:19:12,640 --> 00:19:17,060
TLS connection the other party kind of

413
00:19:15,730 --> 00:19:21,860
validate that key

414
00:19:17,060 --> 00:19:24,169
over DNS SEC as a mail server we could

415
00:19:21,860 --> 00:19:26,600
use Dane to publish the TLS key that a

416
00:19:24,170 --> 00:19:29,510
client should expect when making a

417
00:19:26,600 --> 00:19:32,510
connection to us and since a DNS SEC

418
00:19:29,510 --> 00:19:34,460
also provides a protocol to you know

419
00:19:32,510 --> 00:19:35,900
approve the non-existence of records

420
00:19:34,460 --> 00:19:38,060
which is kind of complicated and I won't

421
00:19:35,900 --> 00:19:42,110
get into here the presence of a Dane

422
00:19:38,060 --> 00:19:45,500
record indicates support for TLS the the

423
00:19:42,110 --> 00:19:48,020
only the problem here is that a day in

424
00:19:45,500 --> 00:19:52,880
deployment is entirely dependent on a

425
00:19:48,020 --> 00:19:55,760
DNS SEC adoption so this is a graph from

426
00:19:52,880 --> 00:19:59,690
like 2014 2016 of the percentage of das

427
00:19:55,760 --> 00:20:03,170
clients that exclusively deploy were

428
00:19:59,690 --> 00:20:05,810
like validate DNS set correctly it seems

429
00:20:03,170 --> 00:20:08,510
that a high number of these actually or

430
00:20:05,810 --> 00:20:12,050
a higher number of clients actually do

431
00:20:08,510 --> 00:20:14,300
request DNS sex credentials but a much

432
00:20:12,050 --> 00:20:16,040
lower percentage actually validate them

433
00:20:14,300 --> 00:20:17,330
it's been hovering between like ten and

434
00:20:16,040 --> 00:20:20,409
fifteen percent for the past five years

435
00:20:17,330 --> 00:20:22,310
and it's actually got gone down since

436
00:20:20,410 --> 00:20:25,580
then

437
00:20:22,310 --> 00:20:26,629
and for various reasons you know DNS SEC

438
00:20:25,580 --> 00:20:29,540
has had a lot of trouble getting

439
00:20:26,630 --> 00:20:33,410
deployed over the years um it's a lot

440
00:20:29,540 --> 00:20:35,960
it's very political it seems like first

441
00:20:33,410 --> 00:20:39,670
of all it's a really old proposal and

442
00:20:35,960 --> 00:20:41,600
the initial drafts didn't have as strong

443
00:20:39,670 --> 00:20:48,890
security over the years

444
00:20:41,600 --> 00:20:51,830
and similarly unlike TLS where you kind

445
00:20:48,890 --> 00:20:55,130
of just have to get your certificate

446
00:20:51,830 --> 00:20:57,710
signed by a public CA that pops up

447
00:20:55,130 --> 00:21:01,040
randomly for DNS SEC it's a top-down

448
00:20:57,710 --> 00:21:03,490
adoption right you can only sign or you

449
00:21:01,040 --> 00:21:06,649
can only publish DNS SEC records if your

450
00:21:03,490 --> 00:21:09,650
zone parent or a parent zone has done so

451
00:21:06,650 --> 00:21:12,200
already and again also like the momentum

452
00:21:09,650 --> 00:21:14,620
behind DNS SEC has stagnated somewhat

453
00:21:12,200 --> 00:21:17,660
since browsers decided to focus on

454
00:21:14,620 --> 00:21:21,040
providing authenticated encryption for

455
00:21:17,660 --> 00:21:24,920
the web over the CA authenticated

456
00:21:21,040 --> 00:21:27,920
ecosystem and you know for people who

457
00:21:24,920 --> 00:21:30,080
trust the CA hierarchy and DNS SEC

458
00:21:27,920 --> 00:21:32,210
hierarchy equally

459
00:21:30,080 --> 00:21:33,980
it's a different argument I don't really

460
00:21:32,210 --> 00:21:37,520
want to get into email security is

461
00:21:33,980 --> 00:21:41,270
really the golden use case for Dane it's

462
00:21:37,520 --> 00:21:44,120
been around for a long time and we

463
00:21:41,270 --> 00:21:48,680
didn't have a different way to secure it

464
00:21:44,120 --> 00:21:51,580
for that period of time so in the face

465
00:21:48,680 --> 00:21:53,780
of low adoption rates some folks over at

466
00:21:51,580 --> 00:21:57,020
IETF have been finishing up a new

467
00:21:53,780 --> 00:21:59,120
protocol MTA STS is the name of it if

468
00:21:57,020 --> 00:22:01,490
you've heard of HSTs for the web it

469
00:21:59,120 --> 00:22:04,879
tries to do a similar thing for mail

470
00:22:01,490 --> 00:22:08,120
servers but more with more steps it's

471
00:22:04,880 --> 00:22:10,550
more complicated way and yes ts works is

472
00:22:08,120 --> 00:22:12,979
that the mail server hosts this HTTP

473
00:22:10,550 --> 00:22:16,370
file that describes their TLS policy so

474
00:22:12,980 --> 00:22:17,750
it it has in it the host names that you

475
00:22:16,370 --> 00:22:20,179
should validate the certificate against

476
00:22:17,750 --> 00:22:23,030
and it also has this expiry time similar

477
00:22:20,180 --> 00:22:27,020
to each STS we're publishing a policy is

478
00:22:23,030 --> 00:22:29,500
publishing a commitment to retain that

479
00:22:27,020 --> 00:22:32,450
policy for a certain amount of time

480
00:22:29,500 --> 00:22:35,030
unlike HSTs however this protocol or

481
00:22:32,450 --> 00:22:38,090
lies on DNS to discover the policy in

482
00:22:35,030 --> 00:22:41,840
the first place for various reasons and

483
00:22:38,090 --> 00:22:43,040
this is a very complex right it suddenly

484
00:22:41,840 --> 00:22:49,189
it brings in all of these other

485
00:22:43,040 --> 00:22:50,659
protocols primarily HTTPS and the reason

486
00:22:49,190 --> 00:22:53,080
for this is that the primary driving

487
00:22:50,660 --> 00:22:57,370
force behind this draft is that

488
00:22:53,080 --> 00:23:00,710
incremental adoption should be easy and

489
00:22:57,370 --> 00:23:04,520
not necessarily depend directly on DNS

490
00:23:00,710 --> 00:23:07,490
SEC in order to realize these security

491
00:23:04,520 --> 00:23:10,580
gates and this provides that right like

492
00:23:07,490 --> 00:23:13,580
hosting a fire file over a port 443 is

493
00:23:10,580 --> 00:23:16,129
relatively easy now or has become easier

494
00:23:13,580 --> 00:23:17,780
over the years and hosting a txt role

495
00:23:16,130 --> 00:23:23,360
you already you're already hosting MX

496
00:23:17,780 --> 00:23:25,490
records but both of these or this build

497
00:23:23,360 --> 00:23:28,189
off of existing protocols that work

498
00:23:25,490 --> 00:23:31,910
really well and don't you don't need to

499
00:23:28,190 --> 00:23:34,520
define like an extension to SMTP to

500
00:23:31,910 --> 00:23:36,230
deploy it but of course it's still

501
00:23:34,520 --> 00:23:40,639
you've got your app tofu there right

502
00:23:36,230 --> 00:23:42,920
because that DNS SEC connection is not

503
00:23:40,640 --> 00:23:43,760
encrypted absence or sorry that DNS

504
00:23:42,920 --> 00:23:49,090
connection is not

505
00:23:43,760 --> 00:23:52,280
absence dns seconds and so to fix that

506
00:23:49,090 --> 00:23:55,520
we're doing a really simple and hacky

507
00:23:52,280 --> 00:23:57,680
thing to remove the tofu's we're

508
00:23:55,520 --> 00:23:59,750
starting to host basically just a static

509
00:23:57,680 --> 00:24:03,770
policy this file is literally just like

510
00:23:59,750 --> 00:24:06,140
giant JSON a blob that we expect people

511
00:24:03,770 --> 00:24:08,510
to cache aggressively but still check

512
00:24:06,140 --> 00:24:10,790
for update updates regularly so you can

513
00:24:08,510 --> 00:24:12,140
submit and pull policy information of

514
00:24:10,790 --> 00:24:16,879
all the mail servers who opted in to

515
00:24:12,140 --> 00:24:21,170
this list and if you're familiar with

516
00:24:16,880 --> 00:24:24,080
the web browsers everywhere still ship

517
00:24:21,170 --> 00:24:25,910
lists a giant lists of websites that

518
00:24:24,080 --> 00:24:28,970
support it just yet all right I support

519
00:24:25,910 --> 00:24:32,470
HTTPS and these are called HSTs payloads

520
00:24:28,970 --> 00:24:35,510
it's also a similar hacky thing the idea

521
00:24:32,470 --> 00:24:38,750
is pretty much the same but since the

522
00:24:35,510 --> 00:24:40,700
client ecosystem on email is much more

523
00:24:38,750 --> 00:24:42,910
decentralized like we don't have just

524
00:24:40,700 --> 00:24:47,060
three mta's like we do with browsers

525
00:24:42,910 --> 00:24:49,700
then the web there is some extra work on

526
00:24:47,060 --> 00:24:52,010
our part we have the right tooling that

527
00:24:49,700 --> 00:24:56,050
works well for generating useable and

528
00:24:52,010 --> 00:24:58,879
take configuration files from this list

529
00:24:56,050 --> 00:25:01,490
all right so as you can see each of

530
00:24:58,880 --> 00:25:04,450
these projects you know do different

531
00:25:01,490 --> 00:25:07,360
things and and none of them really

532
00:25:04,450 --> 00:25:09,380
directly supersedes or supplants the

533
00:25:07,360 --> 00:25:12,110
others and they all have different

534
00:25:09,380 --> 00:25:15,530
trade-offs and different trust and

535
00:25:12,110 --> 00:25:18,260
threat models so the last point I just

536
00:25:15,530 --> 00:25:21,830
wanted to reiterate what what about

537
00:25:18,260 --> 00:25:26,720
deliverability what is being done to

538
00:25:21,830 --> 00:25:28,250
mitigate deliverability issues and I

539
00:25:26,720 --> 00:25:30,350
think this is a point that none of these

540
00:25:28,250 --> 00:25:32,090
have really gotten right um Dane is

541
00:25:30,350 --> 00:25:34,330
essentially pinning public keys and we

542
00:25:32,090 --> 00:25:40,040
all know how well that went for the web

543
00:25:34,330 --> 00:25:41,990
with HP KP mtas is like HSTs but even

544
00:25:40,040 --> 00:25:44,210
more brittle because in it includes

545
00:25:41,990 --> 00:25:46,730
information about you know how to

546
00:25:44,210 --> 00:25:49,640
validate its certificate like what host

547
00:25:46,730 --> 00:25:52,130
names validate against HSTs on the web

548
00:25:49,640 --> 00:25:55,640
broke things all the time still also and

549
00:25:52,130 --> 00:25:57,440
all both of these are made more dramatic

550
00:25:55,640 --> 00:25:57,830
by the fact that you know migrating

551
00:25:57,440 --> 00:25:59,330
hosting

552
00:25:57,830 --> 00:26:04,010
providers is something that people do

553
00:25:59,330 --> 00:26:05,658
and it changes your policy though it

554
00:26:04,010 --> 00:26:07,789
happens infrequently we don't

555
00:26:05,659 --> 00:26:09,830
necessarily want people to be locked in

556
00:26:07,789 --> 00:26:11,809
you know to a single male provider while

557
00:26:09,830 --> 00:26:15,769
they wait first like some mix something

558
00:26:11,809 --> 00:26:19,070
to expire so what we need for all of

559
00:26:15,769 --> 00:26:21,490
these are integrations with you know

560
00:26:19,070 --> 00:26:25,850
existing monitoring monitoring tools

561
00:26:21,490 --> 00:26:28,549
like a way to report failures to email

562
00:26:25,850 --> 00:26:32,360
administrators and so one draft that I

563
00:26:28,549 --> 00:26:35,590
I'm a huge fan of its TLS RPT which is

564
00:26:32,360 --> 00:26:38,330
being developed in parallel with MTA STS

565
00:26:35,590 --> 00:26:40,309
it's trying to do exactly this it

566
00:26:38,330 --> 00:26:42,470
specifies a format for aggregating

567
00:26:40,309 --> 00:26:46,158
reports of TLS failures it's not a

568
00:26:42,470 --> 00:26:48,080
particularly like sexy RFC it's dead

569
00:26:46,159 --> 00:26:50,389
simple but something like this is sorely

570
00:26:48,080 --> 00:26:54,289
needed and the ecosystem and I'm really

571
00:26:50,389 --> 00:26:56,240
excited to see it happen yeah so what

572
00:26:54,289 --> 00:26:59,149
can we all do to dig ourselves out of

573
00:26:56,240 --> 00:27:03,049
this hole I'm going to like we should

574
00:26:59,149 --> 00:27:07,459
all keep following MTA STS and a TLS RPT

575
00:27:03,049 --> 00:27:09,860
a TLS or TLS report in particular since

576
00:27:07,460 --> 00:27:12,500
if people are too scared to break things

577
00:27:09,860 --> 00:27:14,059
if that barrier is too high then nobody

578
00:27:12,500 --> 00:27:16,429
nobody is going to upgrade their mail

579
00:27:14,059 --> 00:27:18,139
servers and a significant amount of

580
00:27:16,429 --> 00:27:21,710
development work is needed there's a

581
00:27:18,139 --> 00:27:23,840
lots of different MTA software out there

582
00:27:21,710 --> 00:27:26,450
and you know both of these IETF drafts

583
00:27:23,840 --> 00:27:29,090
are in last call so we're going to need

584
00:27:26,450 --> 00:27:31,519
to start implementing things soon and of

585
00:27:29,090 --> 00:27:34,970
course you know deploy and test these

586
00:27:31,519 --> 00:27:37,669
out on your own mail server and with a

587
00:27:34,970 --> 00:27:39,529
TLS report in particular you can do this

588
00:27:37,669 --> 00:27:41,450
without necessarily breaking things and

589
00:27:39,529 --> 00:27:44,649
just kind of like test it out and see if

590
00:27:41,450 --> 00:27:47,899
you get any reports without having the

591
00:27:44,649 --> 00:27:51,500
other party necessarily strictly enforce

592
00:27:47,899 --> 00:27:52,850
these policies and then once you're

593
00:27:51,500 --> 00:27:55,190
confident that nothing is severely

594
00:27:52,850 --> 00:27:57,860
broken you can flip the switch and

595
00:27:55,190 --> 00:28:02,600
actually have the other parties start

596
00:27:57,860 --> 00:28:04,039
enforcing these policies and as for like

597
00:28:02,600 --> 00:28:06,370
the policy file that we're hosting

598
00:28:04,039 --> 00:28:08,720
I know queue your domain for addition um

599
00:28:06,370 --> 00:28:09,799
so I colleagues I've worked on this

600
00:28:08,720 --> 00:28:11,860
awesome site

601
00:28:09,799 --> 00:28:14,360
secure domain to be added to this list

602
00:28:11,860 --> 00:28:16,610
unfortunately I've got a massive backlog

603
00:28:14,360 --> 00:28:19,129
actually of male domains to work through

604
00:28:16,610 --> 00:28:22,699
since so many people signed up going to

605
00:28:19,129 --> 00:28:24,259
be released the website the policy file

606
00:28:22,700 --> 00:28:25,940
release and validation process is still

607
00:28:24,259 --> 00:28:28,879
largely manual and I'm working to

608
00:28:25,940 --> 00:28:31,730
automate that right now and get through

609
00:28:28,879 --> 00:28:33,320
that queue and we need your help too as

610
00:28:31,730 --> 00:28:34,399
I mentioned earlier unlike the way I've

611
00:28:33,320 --> 00:28:37,158
you know where there's three web

612
00:28:34,399 --> 00:28:38,869
browsers the email world is happily

613
00:28:37,159 --> 00:28:43,070
littered with this beautiful diversity

614
00:28:38,869 --> 00:28:47,209
of server software we need easy ways to

615
00:28:43,070 --> 00:28:49,908
generate configuration files from for

616
00:28:47,210 --> 00:28:52,100
these MTA's and maybe once we've got

617
00:28:49,909 --> 00:28:54,649
some traction in this area we can start

618
00:28:52,100 --> 00:28:56,840
lobbying for a native MTI support and of

619
00:28:54,649 --> 00:29:01,820
course you know a test out the code on

620
00:28:56,840 --> 00:29:04,539
your own servers report bugs yeah happy

621
00:29:01,820 --> 00:29:04,539
hacking I guess

622
00:29:05,270 --> 00:29:21,129
[Applause]

623
00:29:12,820 --> 00:29:30,159
that's all I got so yeah you guys have

624
00:29:21,130 --> 00:29:32,950
questions thanks for your talk

625
00:29:30,160 --> 00:29:36,670
yeah um have you heard of significantly

626
00:29:32,950 --> 00:29:40,150
more hacky onion Amex by chance

627
00:29:36,670 --> 00:29:41,770
what is it called onion MX oh yeah yeah

628
00:29:40,150 --> 00:29:45,130
that's also a really cool project Oh

629
00:29:41,770 --> 00:29:47,830
what are you thought something I haven't

630
00:29:45,130 --> 00:29:49,300
looked too much into it but it's

631
00:29:47,830 --> 00:29:50,919
definitely something that we've wanted

632
00:29:49,300 --> 00:29:55,480
to take a look at and make sure that the

633
00:29:50,920 --> 00:29:58,650
policy list yeah like can integrate with

634
00:29:55,480 --> 00:30:01,710
it potentially in some way but yeah

635
00:29:58,650 --> 00:30:06,370
thanks for the shoutout

636
00:30:01,710 --> 00:30:08,290
Thanks hi so all these solutions sound

637
00:30:06,370 --> 00:30:10,000
great and please correct me if I'm wrong

638
00:30:08,290 --> 00:30:12,040
but it sounds like this is really

639
00:30:10,000 --> 00:30:13,450
focused on like the validation and

640
00:30:12,040 --> 00:30:15,610
ensuring that we have good develop

641
00:30:13,450 --> 00:30:17,500
deliver ability for the first hop but

642
00:30:15,610 --> 00:30:19,929
like suppose that first hop goes great

643
00:30:17,500 --> 00:30:22,090
what happens if like after that there is

644
00:30:19,930 --> 00:30:23,860
another hop that like we can't ensure

645
00:30:22,090 --> 00:30:26,230
security of because like I guess

646
00:30:23,860 --> 00:30:28,389
technically like we could potentially

647
00:30:26,230 --> 00:30:30,340
without all these extra specs ensure

648
00:30:28,390 --> 00:30:32,020
that we have like good TLS by for

649
00:30:30,340 --> 00:30:34,179
example like if I was on my own mail

650
00:30:32,020 --> 00:30:36,160
server I could set like you know

651
00:30:34,180 --> 00:30:38,800
validation of TLS strongly and I can

652
00:30:36,160 --> 00:30:41,260
also like set secured if I don't care

653
00:30:38,800 --> 00:30:43,840
about like requiring TLS if I don't care

654
00:30:41,260 --> 00:30:46,230
about deliverability how do we solve

655
00:30:43,840 --> 00:30:49,389
that problem so the delivery

656
00:30:46,230 --> 00:30:54,610
deliverability a concern actually spans

657
00:30:49,390 --> 00:30:56,410
the entire like I guess it's not end to

658
00:30:54,610 --> 00:30:58,389
end but it's from mail server to mail

659
00:30:56,410 --> 00:31:01,240
servers and doesn't necessarily only

660
00:30:58,390 --> 00:31:05,920
apply to the initial DNS lookup for like

661
00:31:01,240 --> 00:31:08,770
and ta ASDs so a TLS report aggregates

662
00:31:05,920 --> 00:31:11,860
all sorts of different errors including

663
00:31:08,770 --> 00:31:14,350
you know DNS miss configurations like

664
00:31:11,860 --> 00:31:17,679
your TLS versions are out of date

665
00:31:14,350 --> 00:31:18,980
somehow or even your host names are

666
00:31:17,680 --> 00:31:20,389
somehow wrong and I could

667
00:31:18,980 --> 00:31:23,149
you know I couldn't connect any of them

668
00:31:20,389 --> 00:31:25,129
cool so potentially if there were many

669
00:31:23,149 --> 00:31:26,629
hops like that could sort of like if

670
00:31:25,129 --> 00:31:28,998
there was some issue at some point with

671
00:31:26,629 --> 00:31:30,678
TLS that could like taint the email and

672
00:31:28,999 --> 00:31:32,299
send that report back to me is saying

673
00:31:30,679 --> 00:31:35,570
that there's a deliverability transport

674
00:31:32,299 --> 00:31:38,450
yeah so the idea is in order to achieve

675
00:31:35,570 --> 00:31:41,149
some sort of incremental rollout we can

676
00:31:38,450 --> 00:31:43,039
have like a testing mode for our policy

677
00:31:41,149 --> 00:31:45,168
for instance so like I'm in testing mode

678
00:31:43,039 --> 00:31:47,029
people are trying to connect to me and

679
00:31:45,169 --> 00:31:49,879
if they end up falling back to plain

680
00:31:47,029 --> 00:31:51,980
text send a report over this other

681
00:31:49,879 --> 00:31:53,779
channel that maybe unencrypted but it

682
00:31:51,980 --> 00:31:55,789
doesn't really matter that much because

683
00:31:53,779 --> 00:31:57,529
it's more about getting all of the

684
00:31:55,789 --> 00:31:59,690
testing worked out okay

685
00:31:57,529 --> 00:32:01,249
what if that was like a malicious actor

686
00:31:59,690 --> 00:32:03,499
for example they wouldn't be suing this

687
00:32:01,249 --> 00:32:05,600
report right so that's not the threat

688
00:32:03,499 --> 00:32:08,480
model necessarily like obviously like

689
00:32:05,600 --> 00:32:11,299
it's if it's unsecured you could get a

690
00:32:08,480 --> 00:32:14,559
bunch of bogus reports but then you can

691
00:32:11,299 --> 00:32:17,600
go check your configuration file and oh

692
00:32:14,559 --> 00:32:20,480
yeah that's not actually a problem so

693
00:32:17,600 --> 00:32:22,158
the model for that is just let's make

694
00:32:20,480 --> 00:32:23,720
sure everything works correctly and then

695
00:32:22,159 --> 00:32:26,299
you know let's start securing that

696
00:32:23,720 --> 00:32:33,139
connection great thank you so much and

697
00:32:26,299 --> 00:32:35,960
awesome talk Thanks hi two users one

698
00:32:33,139 --> 00:32:39,199
single individual you know your

699
00:32:35,960 --> 00:32:43,629
grandparent whomever who wants an email

700
00:32:39,200 --> 00:32:45,950
address somewhere second user and

701
00:32:43,629 --> 00:32:47,389
organizations such as for example the

702
00:32:45,950 --> 00:32:49,700
University of North Carolina

703
00:32:47,389 --> 00:32:52,070
you know maybe many users own domain

704
00:32:49,700 --> 00:32:55,600
name doesn't want to spend the time or

705
00:32:52,070 --> 00:32:58,970
resources managing its own email server

706
00:32:55,600 --> 00:33:02,209
both want somebody else to take care of

707
00:32:58,970 --> 00:33:07,609
all this for them who should they

708
00:33:02,210 --> 00:33:12,799
contract with I don't

709
00:33:07,609 --> 00:33:14,629
so a another I guess tenet of like start

710
00:33:12,799 --> 00:33:17,359
TLS everywhere or whatever you know that

711
00:33:14,629 --> 00:33:19,519
a nebulous name means now one of the

712
00:33:17,359 --> 00:33:21,230
original goals of the project was to

713
00:33:19,519 --> 00:33:23,779
make it easier for people to run their

714
00:33:21,230 --> 00:33:28,580
own mail servers this may seem like an

715
00:33:23,779 --> 00:33:30,880
impossible task but I think I think with

716
00:33:28,580 --> 00:33:34,720
the existing tooling we can

717
00:33:30,880 --> 00:33:37,389
potentially make it happen I'm not going

718
00:33:34,720 --> 00:33:40,240
to I don't necessarily want to recommend

719
00:33:37,389 --> 00:33:43,120
a hosting provider but I will say that

720
00:33:40,240 --> 00:33:45,039
the projects like a mill in a box which

721
00:33:43,120 --> 00:33:47,850
make it really easy to run your own mill

722
00:33:45,039 --> 00:33:58,059
a server make me slightly optimistic

723
00:33:47,850 --> 00:34:00,039
about that thank you so kind of long

724
00:33:58,059 --> 00:34:02,139
that that line there's mail or box we're

725
00:34:00,039 --> 00:34:03,908
all very happy with our little homegrown

726
00:34:02,139 --> 00:34:05,199
mail servers and if you've ever run your

727
00:34:03,909 --> 00:34:09,129
own mail server it's a terrible idea

728
00:34:05,200 --> 00:34:11,379
don't do it but what if we had Yahoo

729
00:34:09,129 --> 00:34:13,719
Microsoft and Google which already are

730
00:34:11,379 --> 00:34:15,969
supporting start TLS what percentage of

731
00:34:13,719 --> 00:34:18,279
email is that like are we with them

732
00:34:15,969 --> 00:34:20,649
doing it we showed like 90 percent yeah

733
00:34:18,280 --> 00:34:25,240
incoming for Google is that honestly

734
00:34:20,649 --> 00:34:26,859
yeah so so for a TLS right for TLS if we

735
00:34:25,239 --> 00:34:29,770
can get all of those you know if we can

736
00:34:26,859 --> 00:34:31,989
get all of these protections against

737
00:34:29,770 --> 00:34:34,540
downgrades and other active attacks in

738
00:34:31,989 --> 00:34:36,969
place and we get like the three top

739
00:34:34,540 --> 00:34:39,940
players email hosting providers to do it

740
00:34:36,969 --> 00:34:43,810
we're good on TLS but we still need an

741
00:34:39,940 --> 00:34:45,909
encrypted email I yeah I mention I gave

742
00:34:43,810 --> 00:34:49,119
a shout out to Auto crypt earlier I

743
00:34:45,909 --> 00:34:50,950
really think that's a project that's

744
00:34:49,119 --> 00:34:57,730
really thinking about how we can deploy

745
00:34:50,949 --> 00:35:00,040
and an encrypted email for everybody so

746
00:34:57,730 --> 00:35:01,900
we all we all know start TLS starts out

747
00:35:00,040 --> 00:35:04,240
with a plain text connection and that's

748
00:35:01,900 --> 00:35:09,099
that's kind of its Achilles heel but

749
00:35:04,240 --> 00:35:10,839
what about connecting via SSL wrapped

750
00:35:09,099 --> 00:35:15,430
SMTP I think there's even a port

751
00:35:10,839 --> 00:35:17,470
reserved for that yeah so we gave some

752
00:35:15,430 --> 00:35:21,220
thought about this actually when we were

753
00:35:17,470 --> 00:35:25,799
starting out the project I think so this

754
00:35:21,220 --> 00:35:29,348
goes down to the ease of deployment

755
00:35:25,800 --> 00:35:33,970
bullet point I think it would be much

756
00:35:29,349 --> 00:35:39,280
easier now if you know in the eighties

757
00:35:33,970 --> 00:35:43,959
we decided to allocate a port for rapid

758
00:35:39,280 --> 00:35:44,680
like SSL wrapped SMTP but unfortunately

759
00:35:43,960 --> 00:35:47,390
that

760
00:35:44,680 --> 00:35:50,330
that's not what's happening right now

761
00:35:47,390 --> 00:35:54,500
and getting all of the mail servers to

762
00:35:50,330 --> 00:35:57,560
switch to this TLS or this dedicated

763
00:35:54,500 --> 00:36:01,130
port for smtps or whatever

764
00:35:57,560 --> 00:36:03,980
rather than using start TLS is a really

765
00:36:01,130 --> 00:36:06,890
difficult to do and will take a really

766
00:36:03,980 --> 00:36:09,980
long time and we still won't have solved

767
00:36:06,890 --> 00:36:12,379
this signaling problem of oh do I know

768
00:36:09,980 --> 00:36:14,870
that person supports TLS or not this is

769
00:36:12,380 --> 00:36:18,430
like for HTTP and HTTPS we still have

770
00:36:14,870 --> 00:36:21,080
HSTs payload lists to solve this initial

771
00:36:18,430 --> 00:36:22,520
TLS discovery issue you would have to do

772
00:36:21,080 --> 00:36:23,810
the same thing with preload list right

773
00:36:22,520 --> 00:36:27,590
we would have to do the same thing

774
00:36:23,810 --> 00:36:29,930
channel yeah and that's what we're

775
00:36:27,590 --> 00:36:36,370
working on right now to get a secure

776
00:36:29,930 --> 00:36:36,370
email deployed as soon as possible yeah

777
00:36:36,640 --> 00:36:42,950
hi okay I understand the problem to

778
00:36:39,950 --> 00:36:44,600
describe this DNS SEC and but there are

779
00:36:42,950 --> 00:36:46,430
countries like Germany where standards

780
00:36:44,600 --> 00:36:49,100
exist for secure email which promotes

781
00:36:46,430 --> 00:36:51,770
DNS SEC and so my question is are there

782
00:36:49,100 --> 00:36:55,339
any fundamental technical reasons not to

783
00:36:51,770 --> 00:36:58,100
support both like empty ISPs and DNS SEC

784
00:36:55,340 --> 00:37:02,900
and vyas ji of F dot Arc not using DNS

785
00:36:58,100 --> 00:37:07,690
SEC at all for the yes at work not using

786
00:37:02,900 --> 00:37:10,340
a DNS SEC at all I can't speak to that I

787
00:37:07,690 --> 00:37:14,990
do represent the organization but not

788
00:37:10,340 --> 00:37:16,880
you know everybody this is not this is

789
00:37:14,990 --> 00:37:19,669
not to do it intentionally it's just not

790
00:37:16,880 --> 00:37:21,500
there um is there a technical reason why

791
00:37:19,670 --> 00:37:25,040
you wouldn't want to do it like your

792
00:37:21,500 --> 00:37:30,470
support system so this the the technical

793
00:37:25,040 --> 00:37:35,870
reason is the the trust model right so a

794
00:37:30,470 --> 00:37:38,029
lot of people a lot of people choose not

795
00:37:35,870 --> 00:37:40,339
to trust you know a CAS especially

796
00:37:38,030 --> 00:37:42,380
because you know that ecosystem is

797
00:37:40,340 --> 00:37:46,190
centralizing you know due to a let's

798
00:37:42,380 --> 00:37:50,180
encrypt and some people don't like the

799
00:37:46,190 --> 00:37:53,510
idea of DNS SEC I think we can get both

800
00:37:50,180 --> 00:37:55,370
deployed or sorry both MTA STS and DNS

801
00:37:53,510 --> 00:37:58,240
SEC deployed and I think that's a

802
00:37:55,370 --> 00:38:00,220
reasonable a solution the

803
00:37:58,240 --> 00:38:03,810
object that I'm proposing right now and

804
00:38:00,220 --> 00:38:07,600
that I'm working on actively is to

805
00:38:03,810 --> 00:38:10,990
secure email as we get DNS SEC further

806
00:38:07,600 --> 00:38:12,790
deployed okay so but you don't see any

807
00:38:10,990 --> 00:38:15,160
problem you don't lose anything if you

808
00:38:12,790 --> 00:38:18,160
deploy both EF F doesn't just do it

809
00:38:15,160 --> 00:38:19,839
currently okay that's not something I

810
00:38:18,160 --> 00:38:22,480
need so you could tell people do both

811
00:38:19,840 --> 00:38:24,520
right yeah deploy deploy both until you

812
00:38:22,480 --> 00:38:27,010
have compatibility this whoever uses one

813
00:38:24,520 --> 00:38:32,410
of them yeah it's easier to tell people

814
00:38:27,010 --> 00:38:41,020
to use the latter but I I agree I like I

815
00:38:32,410 --> 00:38:42,399
have no problem with DNS sec okay it's

816
00:38:41,020 --> 00:38:44,920
been probably a couple decades since

817
00:38:42,400 --> 00:38:47,830
I've been deep into SMTP implementations

818
00:38:44,920 --> 00:38:50,080
if we presume that DNS SEC maybe

819
00:38:47,830 --> 00:38:53,640
eventually succeeds in its deployment it

820
00:38:50,080 --> 00:38:56,560
seems like we could specify alternative

821
00:38:53,640 --> 00:39:00,430
behaviors for how clients interact with

822
00:38:56,560 --> 00:39:03,370
SMTP servers by defining your protocols

823
00:39:00,430 --> 00:39:04,870
that would use us our v records where

824
00:39:03,370 --> 00:39:07,710
you could signal kind of what

825
00:39:04,870 --> 00:39:10,180
alternatives like only connect with smtp

826
00:39:07,710 --> 00:39:12,160
over TLS or something

827
00:39:10,180 --> 00:39:14,740
when delivery mail of this domain yeah I

828
00:39:12,160 --> 00:39:16,359
mean once you solve this kind of so the

829
00:39:14,740 --> 00:39:18,640
root of trust problem is not solved for

830
00:39:16,360 --> 00:39:20,560
email is basically kind of what I'm

831
00:39:18,640 --> 00:39:22,330
getting at and once you've solved that

832
00:39:20,560 --> 00:39:25,540
like you could possibly do a lot of

833
00:39:22,330 --> 00:39:28,960
other cool upgrades and cool fancy

834
00:39:25,540 --> 00:39:31,840
things with the protocols maybe it

835
00:39:28,960 --> 00:39:33,430
sounds like it's just a way you've

836
00:39:31,840 --> 00:39:34,720
presented it on your website but I was

837
00:39:33,430 --> 00:39:36,960
looking at the website while you were

838
00:39:34,720 --> 00:39:38,980
talking it's not Tunis everywhere and

839
00:39:36,960 --> 00:39:40,210
you know you've got the list where

840
00:39:38,980 --> 00:39:41,770
you're doing your daily checks before

841
00:39:40,210 --> 00:39:43,960
you let somebody onto that list once

842
00:39:41,770 --> 00:39:46,270
they're on the list though it sounds

843
00:39:43,960 --> 00:39:48,790
like if the web's if the mail service

844
00:39:46,270 --> 00:39:50,080
starts to fail to meet the criteria and

845
00:39:48,790 --> 00:39:51,759
you would take them off the list is that

846
00:39:50,080 --> 00:39:52,090
right no we wouldn't take you off the

847
00:39:51,760 --> 00:39:54,460
list

848
00:39:52,090 --> 00:39:59,440
we explicitly specify that you should

849
00:39:54,460 --> 00:40:01,450
have a contact email where you can no no

850
00:39:59,440 --> 00:40:06,040
absolutely no that's a that's a very

851
00:40:01,450 --> 00:40:08,169
dangerous game I'm just want to ask you

852
00:40:06,040 --> 00:40:10,250
this much agenda to I guess have the

853
00:40:08,170 --> 00:40:12,440
enforcement on the male clients and the

854
00:40:10,250 --> 00:40:14,420
infrastructure I guess the president's

855
00:40:12,440 --> 00:40:17,840
there is how the browsers Microsoft

856
00:40:14,420 --> 00:40:19,280
Apple Mozilla Chrome enforced the cipher

857
00:40:17,840 --> 00:40:21,140
protocols that you use and the root

858
00:40:19,280 --> 00:40:25,400
stores that you trust yeah so by mail

859
00:40:21,140 --> 00:40:27,230
clients do mean MTA server MTA clients

860
00:40:25,400 --> 00:40:29,390
or do you mean like come on a

861
00:40:27,230 --> 00:40:30,800
Thunderbird that and the actual amount

862
00:40:29,390 --> 00:40:33,950
of cloud and sells it because it could

863
00:40:30,800 --> 00:40:37,400
be done on both the problem with doing

864
00:40:33,950 --> 00:40:42,759
it on both is that that would require a

865
00:40:37,400 --> 00:40:46,130
change to the SMTP protocol because so

866
00:40:42,760 --> 00:40:48,860
once you send off your your email it's

867
00:40:46,130 --> 00:40:51,380
kind of just gone forever

868
00:40:48,860 --> 00:40:55,880
and the mta's are the ones who actually

869
00:40:51,380 --> 00:40:59,360
performed the protocol I don't think you

870
00:40:55,880 --> 00:41:03,170
could enforce so there actually there is

871
00:40:59,360 --> 00:41:05,780
a draft at that on the IETF for a

872
00:41:03,170 --> 00:41:10,880
required TLS header I think which allows

873
00:41:05,780 --> 00:41:13,660
the mail clients to you know put a

874
00:41:10,880 --> 00:41:16,490
header that indicates that the user

875
00:41:13,660 --> 00:41:19,490
expects this to be delivered over TLS

876
00:41:16,490 --> 00:41:21,319
and if it doesn't do that just not to

877
00:41:19,490 --> 00:41:24,049
send it entirely so this allows clients

878
00:41:21,320 --> 00:41:25,820
to prioritize security over

879
00:41:24,050 --> 00:41:27,560
deliverability but this is a this

880
00:41:25,820 --> 00:41:30,440
requires protocol changes right you know

881
00:41:27,560 --> 00:41:32,210
it's a large protocol update upgrade so

882
00:41:30,440 --> 00:41:34,160
your mail server and the other mail

883
00:41:32,210 --> 00:41:37,040
server have to both support it as well

884
00:41:34,160 --> 00:41:39,020
yeah I guess with the MTA is rather than

885
00:41:37,040 --> 00:41:41,720
I guess just considering the fact don't

886
00:41:39,020 --> 00:41:44,150
allow renegotiation of the protocols to

887
00:41:41,720 --> 00:41:47,209
begin with in the same sense that the CA

888
00:41:44,150 --> 00:41:48,530
in the CA and be bored stiff acute

889
00:41:47,210 --> 00:41:50,720
Authority and browser boards do that

890
00:41:48,530 --> 00:41:55,250
already in the same sense of the NTS

891
00:41:50,720 --> 00:41:58,640
could do that to just what do you mean

892
00:41:55,250 --> 00:42:01,130
by negotiation as in like a negotiation

893
00:41:58,640 --> 00:42:03,290
or fail down to insecure just don't

894
00:42:01,130 --> 00:42:05,240
accept the connection if both parties

895
00:42:03,290 --> 00:42:07,520
don't agree in the same yeah you would

896
00:42:05,240 --> 00:42:10,069
have to you have to afford that

897
00:42:07,520 --> 00:42:12,259
information in the in like the you know

898
00:42:10,070 --> 00:42:15,080
that diagram you have to forward all of

899
00:42:12,260 --> 00:42:16,850
that information and hop one and the MTA

900
00:42:15,080 --> 00:42:18,440
has to support that and then when they

901
00:42:16,850 --> 00:42:20,589
make the connection they have to be able

902
00:42:18,440 --> 00:42:22,109
to enforce that rule that you've defined

903
00:42:20,590 --> 00:42:27,900
yeah yeah

904
00:42:22,109 --> 00:42:29,788
again I may be missing something but um

905
00:42:27,900 --> 00:42:33,960
I think the difference between the

906
00:42:29,789 --> 00:42:39,089
browser model when you connect to a

907
00:42:33,960 --> 00:42:42,480
secure site the decision to trust that

908
00:42:39,089 --> 00:42:44,910
site is laying with the within the

909
00:42:42,480 --> 00:42:47,940
client yes now when you send something

910
00:42:44,910 --> 00:42:50,720
out by email then basically you

911
00:42:47,940 --> 00:42:53,220
relinquish your you know trust to

912
00:42:50,720 --> 00:42:54,689
something yeah exactly you basically

913
00:42:53,220 --> 00:42:55,950
delegated your trust to the mail

914
00:42:54,690 --> 00:42:58,470
something right yeah

915
00:42:55,950 --> 00:43:01,828
do you provision anything to kind of

916
00:42:58,470 --> 00:43:04,769
control that trust when you send message

917
00:43:01,829 --> 00:43:07,319
like hey these are the I don't know

918
00:43:04,769 --> 00:43:09,598
hashes or certificate authorities that I

919
00:43:07,319 --> 00:43:11,579
recognize and if I see something else

920
00:43:09,599 --> 00:43:15,059
then I don't want that message to go

921
00:43:11,579 --> 00:43:18,989
through so now you're kind of getting to

922
00:43:15,059 --> 00:43:21,180
into end-to-end encryption where the

923
00:43:18,989 --> 00:43:24,299
client expresses like hey these are like

924
00:43:21,180 --> 00:43:28,140
my my public keys and I no no they just

925
00:43:24,299 --> 00:43:30,829
say say you said that the header in

926
00:43:28,140 --> 00:43:38,940
message may have hey these are the

927
00:43:30,829 --> 00:43:42,239
hashes of of CAS that if I if I apply

928
00:43:38,940 --> 00:43:44,430
message along the way meets some strange

929
00:43:42,239 --> 00:43:49,170
you know certificate authority I don't

930
00:43:44,430 --> 00:43:51,989
want that yeah so so like MT is yes for

931
00:43:49,170 --> 00:43:53,940
instance like one of the alternatives it

932
00:43:51,989 --> 00:43:56,789
is that was proposed is have some sort

933
00:43:53,940 --> 00:43:58,559
of in channel policy negotiation and the

934
00:43:56,789 --> 00:44:01,529
reason they decided to go with you know

935
00:43:58,559 --> 00:44:04,940
relying on this out-of-band HTTP call

936
00:44:01,529 --> 00:44:08,369
rather than an in band negotiation is

937
00:44:04,940 --> 00:44:10,920
again because of ease of deployment if

938
00:44:08,369 --> 00:44:12,900
you had the policy negotiation you would

939
00:44:10,920 --> 00:44:15,079
need all the mail servers to update at

940
00:44:12,900 --> 00:44:15,079
once

941
00:44:18,730 --> 00:44:23,560
do you know how big the JSON file is

942
00:44:21,579 --> 00:44:25,660
currently and is there a problem with it

943
00:44:23,560 --> 00:44:29,320
getting to be too big yeah so right now

944
00:44:25,660 --> 00:44:32,259
it's very small as I said before I have

945
00:44:29,320 --> 00:44:35,460
a very large back backlog of domain stad

946
00:44:32,260 --> 00:44:40,570
but eventually we'll a publish signed

947
00:44:35,460 --> 00:44:44,140
diffs for for the JSON file and then you

948
00:44:40,570 --> 00:44:46,450
can also verify the result with the

949
00:44:44,140 --> 00:44:50,279
offline like more secure offline

950
00:44:46,450 --> 00:44:50,279
signature if you so much wish yep

951
00:44:58,110 --> 00:45:05,809
[Applause]

