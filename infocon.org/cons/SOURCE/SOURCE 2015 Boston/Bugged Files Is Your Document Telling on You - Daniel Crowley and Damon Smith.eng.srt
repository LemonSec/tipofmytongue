1
00:00:00,060 --> 00:00:05,970
so are we so my name's Amy Smith I work

2
00:00:03,600 --> 00:00:09,030
as a security engineer with ISEC

3
00:00:05,970 --> 00:00:11,399
partners or NCC group my primary areas

4
00:00:09,030 --> 00:00:13,169
of focus are web app testing and

5
00:00:11,400 --> 00:00:15,839
embedded devices I recently started

6
00:00:13,170 --> 00:00:18,060
looking at hot formats with this guy and

7
00:00:15,839 --> 00:00:20,670
this guy had an incredibly I also worked

8
00:00:18,060 --> 00:00:23,430
for Isaac partners as a security engine

9
00:00:20,670 --> 00:00:25,350
and mostly I like web applications

10
00:00:23,430 --> 00:00:27,300
crypto and physical security but as a

11
00:00:25,350 --> 00:00:28,740
play that had an interest in looking

12
00:00:27,300 --> 00:00:32,340
into a different file formats and

13
00:00:28,740 --> 00:00:34,620
playing around them so so what's this

14
00:00:32,340 --> 00:00:37,140
talk about this talk is back files that

15
00:00:34,620 --> 00:00:39,839
trigger outbound traffic when they're

16
00:00:37,140 --> 00:00:42,270
open and there's a couple of

17
00:00:39,840 --> 00:00:45,840
restrictions on that obviously it's not

18
00:00:42,270 --> 00:00:48,539
terribly interesting if you take some

19
00:00:45,840 --> 00:00:50,070
executable format like PE and say oh hey

20
00:00:48,539 --> 00:00:54,149
I can make this make a friend request

21
00:00:50,070 --> 00:00:56,610
it's like well yes obviously so some of

22
00:00:54,149 --> 00:00:57,989
these formats are rather complex so if

23
00:00:56,610 --> 00:01:01,440
we talk about PDF for instance which is

24
00:00:57,989 --> 00:01:03,538
an intensely complex format but there

25
00:01:01,440 --> 00:01:05,128
are some very simple formats as well and

26
00:01:03,539 --> 00:01:07,170
we'll get into that a little bit later

27
00:01:05,129 --> 00:01:09,360
but the important thing is we're not

28
00:01:07,170 --> 00:01:11,729
using exploits these are all based on

29
00:01:09,360 --> 00:01:14,340
features these are all things based on

30
00:01:11,729 --> 00:01:17,390
how the file formats are structured how

31
00:01:14,340 --> 00:01:20,549
they actually work these are intended

32
00:01:17,390 --> 00:01:22,350
functionalities so why is this research

33
00:01:20,549 --> 00:01:24,600
matter um there's really three

34
00:01:22,350 --> 00:01:26,548
overarching themes as to what makes this

35
00:01:24,600 --> 00:01:29,280
so impactful the first and the most

36
00:01:26,549 --> 00:01:31,439
obvious that at first glance is privacy

37
00:01:29,280 --> 00:01:33,299
implications things like the Animas

38
00:01:31,439 --> 00:01:36,079
ation or with each one use with pesto

39
00:01:33,299 --> 00:01:36,079
together in the future

40
00:01:46,810 --> 00:01:49,810
hello

41
00:01:53,000 --> 00:02:02,060
I get us yell does that work just Center

42
00:01:59,270 --> 00:02:05,929
alright there we go and we can hear me

43
00:02:02,060 --> 00:02:07,430
excellent so come over some of the

44
00:02:05,930 --> 00:02:08,570
privacy implications and we're going to

45
00:02:07,430 --> 00:02:10,700
get into these a little bit more deeply

46
00:02:08,570 --> 00:02:12,620
further on in the park the next

47
00:02:10,699 --> 00:02:14,500
overarching themes why this is important

48
00:02:12,620 --> 00:02:16,220
are the security implications

49
00:02:14,500 --> 00:02:17,270
specifically some of these outline

50
00:02:16,220 --> 00:02:18,830
references can do things like

51
00:02:17,270 --> 00:02:21,890
automatically sending your credentials

52
00:02:18,830 --> 00:02:23,570
to be to the attacker so we're gonna go

53
00:02:21,890 --> 00:02:25,670
and demonstrate back here in just a

54
00:02:23,570 --> 00:02:28,010
little bit finally and in my mind most

55
00:02:25,670 --> 00:02:29,570
importantly none of these are bugs

56
00:02:28,010 --> 00:02:31,130
none of these are a mistake to the

57
00:02:29,570 --> 00:02:32,630
programmer made one who is writing a

58
00:02:31,130 --> 00:02:34,250
parser these are all things that were

59
00:02:32,630 --> 00:02:36,769
intentionally moved in the file format

60
00:02:34,250 --> 00:02:42,020
specification and intentionally included

61
00:02:36,770 --> 00:02:46,100
in the parsers so we're gonna do a quick

62
00:02:42,020 --> 00:02:50,860
demo with a couple of different formats

63
00:02:46,100 --> 00:02:50,859
here so we've got

64
00:03:02,890 --> 00:03:15,579
okay so let me get my capture started

65
00:03:10,540 --> 00:03:19,720
here so what I've got running here is an

66
00:03:15,580 --> 00:03:21,370
SMB capture through Metasploit so this

67
00:03:19,720 --> 00:03:22,750
is basically just going to receive this

68
00:03:21,370 --> 00:03:25,210
is basically just going to receive any

69
00:03:22,750 --> 00:03:30,520
SMB that time sedessa mean communication

70
00:03:25,210 --> 00:03:34,590
ask for ntlm mics ask credential end

71
00:03:30,520 --> 00:03:38,860
credits and then capture the resulting

72
00:03:34,590 --> 00:03:43,690
communication so the first thing i've

73
00:03:38,860 --> 00:03:46,800
got here is an RTF file so i'm gonna pop

74
00:03:43,690 --> 00:03:46,800
that sucker open and

75
00:03:50,680 --> 00:03:54,970
okay so we've got some sfe we've got

76
00:03:53,620 --> 00:03:57,159
some some entailing

77
00:03:54,970 --> 00:03:59,200
hashes coming in here I know that there

78
00:03:57,159 --> 00:04:00,578
was no user interaction so he go back to

79
00:03:59,200 --> 00:04:03,010
the file immediately sends on

80
00:04:00,579 --> 00:04:06,159
credentials right so this will this will

81
00:04:03,010 --> 00:04:08,620
try to connect for awhile and it's

82
00:04:06,159 --> 00:04:10,569
really funny after after a couple

83
00:04:08,620 --> 00:04:13,209
seconds of trying like a bunch of you

84
00:04:10,569 --> 00:04:15,458
know attempts to negotiate it gives up

85
00:04:13,209 --> 00:04:17,560
and says okay well clearly I'm I'm not

86
00:04:15,459 --> 00:04:19,389
able to negotiate and then it says you

87
00:04:17,560 --> 00:04:21,488
know like a warning this document

88
00:04:19,389 --> 00:04:23,410
contains links to other files do you

89
00:04:21,488 --> 00:04:26,799
want to like link to those or not like

90
00:04:23,410 --> 00:04:29,380
do you want us to get that it's kind of

91
00:04:26,800 --> 00:04:32,229
like hey mom can I have that candy that

92
00:04:29,380 --> 00:04:33,880
was on the table like no you can't oh

93
00:04:32,229 --> 00:04:36,190
well sorry

94
00:04:33,880 --> 00:04:40,419
you know because here are the hashes of

95
00:04:36,190 --> 00:04:41,260
the minute so this one is really really

96
00:04:40,419 --> 00:04:43,599
interesting

97
00:04:41,260 --> 00:04:45,760
so in just a moment I'm gonna show you

98
00:04:43,599 --> 00:04:47,889
like why the whole hash thing is

99
00:04:45,760 --> 00:04:50,469
important in case you're unaware but

100
00:04:47,889 --> 00:04:55,240
first I just want to show you a soothing

101
00:04:50,470 --> 00:05:01,060
video that's in no way harmful some very

102
00:04:55,240 --> 00:05:03,130
adorable animals so as it turns out well

103
00:05:01,060 --> 00:05:06,190
we'll explain why this works momentarily

104
00:05:03,130 --> 00:05:08,260
this is actually a two-stage thing here

105
00:05:06,190 --> 00:05:10,719
but again here we are getting hashes and

106
00:05:08,260 --> 00:05:12,729
as mentioned previously these are all

107
00:05:10,720 --> 00:05:15,820
based on file format features these are

108
00:05:12,729 --> 00:05:17,260
not bugs we're not exploiting well in a

109
00:05:15,820 --> 00:05:20,919
wiggler exploiting things but we're not

110
00:05:17,260 --> 00:05:25,979
exploiting any bugs right so now that we

111
00:05:20,919 --> 00:05:29,320
have all this wonderful stuff going on

112
00:05:25,979 --> 00:05:32,770
I'm going to take the captured hashes

113
00:05:29,320 --> 00:05:35,469
here and crack and I set it up with a

114
00:05:32,770 --> 00:05:39,159
really easy password but here I now have

115
00:05:35,470 --> 00:05:41,919
the plaintext credentials for the VM

116
00:05:39,159 --> 00:05:44,669
that opened these files so all this

117
00:05:41,919 --> 00:05:47,120
without any bugs right we didn't buzz

118
00:05:44,669 --> 00:05:50,510
anything so

119
00:05:47,120 --> 00:05:54,070
let me come back here and then we'll

120
00:05:50,510 --> 00:05:54,070
start to breakdown what happened

121
00:05:59,889 --> 00:06:06,849
so this is not like a super new thing

122
00:06:04,000 --> 00:06:07,810
right the whole end-to-end hash capture

123
00:06:06,849 --> 00:06:11,378
and crack

124
00:06:07,810 --> 00:06:13,389
it's not a fantastically new thing but

125
00:06:11,379 --> 00:06:15,789
it's a more widespread thing than I

126
00:06:13,389 --> 00:06:18,340
think people are aware of and there's

127
00:06:15,789 --> 00:06:21,340
also a privacy aspect to it that has not

128
00:06:18,340 --> 00:06:23,530
been discussed so there's already some

129
00:06:21,340 --> 00:06:25,650
things that are known to allow for this

130
00:06:23,530 --> 00:06:30,818
office formats

131
00:06:25,650 --> 00:06:31,659
pls format playlist files LNK files you

132
00:06:30,819 --> 00:06:34,719
know there are a bunch of different

133
00:06:31,659 --> 00:06:36,819
things this the sort of the state of the

134
00:06:34,719 --> 00:06:39,789
art tool and this sort of attack is

135
00:06:36,819 --> 00:06:42,550
called Zach attack which comes from Zach

136
00:06:39,789 --> 00:06:46,210
basil a former colleague of ours now

137
00:06:42,550 --> 00:06:48,699
it's very for baiting security but we

138
00:06:46,210 --> 00:06:49,930
also noticed from some other sources as

139
00:06:48,699 --> 00:06:52,210
we are sort of doing introductory

140
00:06:49,930 --> 00:06:55,810
research on this that if you just take

141
00:06:52,210 --> 00:06:58,508
like an image tag in HTML and do like

142
00:06:55,810 --> 00:07:00,849
source equals some SME URL it will

143
00:06:58,509 --> 00:07:02,409
trigger this interaction in IE so if

144
00:07:00,849 --> 00:07:04,270
you're using Internet Explorer even like

145
00:07:02,409 --> 00:07:05,860
the latest versions all it takes is

146
00:07:04,270 --> 00:07:08,289
visiting the web page to trigger this

147
00:07:05,860 --> 00:07:10,750
kind of interaction and similarly

148
00:07:08,289 --> 00:07:13,000
Outlook uses either the same parsing

149
00:07:10,750 --> 00:07:16,330
engine or one that that will respect the

150
00:07:13,000 --> 00:07:18,190
same image source equals five-o URI so

151
00:07:16,330 --> 00:07:19,990
you can get this to happen just by

152
00:07:18,190 --> 00:07:23,020
sending in an email to somebody using

153
00:07:19,990 --> 00:07:24,460
how so beginning our research there are

154
00:07:23,020 --> 00:07:26,500
a few areas that we wanted to focus on

155
00:07:24,460 --> 00:07:27,909
we wanted to develop some

156
00:07:26,500 --> 00:07:29,770
proof-of-concept files that would be

157
00:07:27,909 --> 00:07:32,169
immediately applicable to the average

158
00:07:29,770 --> 00:07:33,400
social engineer the idea being we wanted

159
00:07:32,169 --> 00:07:35,169
to focus on file formats that are

160
00:07:33,400 --> 00:07:36,339
commonly exchanged to be an email or

161
00:07:35,169 --> 00:07:38,830
downloaded from peer-to-peer

162
00:07:36,339 --> 00:07:41,430
file-sharing networks or downloaded from

163
00:07:38,830 --> 00:07:43,960
the web without much regard to security

164
00:07:41,430 --> 00:07:44,660
for instance document formats people in

165
00:07:43,960 --> 00:07:45,950
our enterprise

166
00:07:44,660 --> 00:07:47,360
setting you're used to tossing these

167
00:07:45,950 --> 00:07:48,800
things back and forth through email all

168
00:07:47,360 --> 00:07:51,590
day long you know you get a PDF when I

169
00:07:48,800 --> 00:07:53,510
coworker you know so much as security

170
00:07:51,590 --> 00:07:55,520
professionals were probably all acutely

171
00:07:53,510 --> 00:07:56,840
aware of the problems with the PDF

172
00:07:55,520 --> 00:08:01,310
formatted memory corruption and stuff

173
00:07:56,840 --> 00:08:02,690
but um this is you know the average user

174
00:08:01,310 --> 00:08:05,060
is not going to be aware of this

175
00:08:02,690 --> 00:08:06,170
especially considering that this is not

176
00:08:05,060 --> 00:08:08,000
going to be a thing that's caught by

177
00:08:06,170 --> 00:08:09,850
like antivirus or anything because these

178
00:08:08,000 --> 00:08:12,320
are memory corruption bugs

179
00:08:09,850 --> 00:08:14,870
additionally we focused on media formats

180
00:08:12,320 --> 00:08:16,760
like audio video and graphic formats

181
00:08:14,870 --> 00:08:19,820
these are kind of things that you could

182
00:08:16,760 --> 00:08:22,039
you can see being shopped around on

183
00:08:19,820 --> 00:08:25,099
peer-to-peer file-sharing or posted on

184
00:08:22,040 --> 00:08:26,510
on a wiki for instance finally we looked

185
00:08:25,100 --> 00:08:29,210
at route where related functionality

186
00:08:26,510 --> 00:08:33,260
like enterprise calendaring software and

187
00:08:29,210 --> 00:08:35,630
enterprise address book software so one

188
00:08:33,260 --> 00:08:37,968
of the media formats we tried to do some

189
00:08:35,630 --> 00:08:39,710
research around like you know googling

190
00:08:37,969 --> 00:08:41,510
for different file types to see like

191
00:08:39,710 --> 00:08:44,360
what's the largest number of pics we can

192
00:08:41,510 --> 00:08:47,210
find you know looking through our email

193
00:08:44,360 --> 00:08:49,730
backlogs to see like what what email

194
00:08:47,210 --> 00:08:52,610
what files have be a mailed and been

195
00:08:49,730 --> 00:08:54,290
emailed and most all that sort of thing

196
00:08:52,610 --> 00:08:56,000
and one of the ones that just kept

197
00:08:54,290 --> 00:08:58,010
popping up at the top of the list or

198
00:08:56,000 --> 00:08:59,420
like every single metric we used for

199
00:08:58,010 --> 00:09:02,080
like look file should we actually take a

200
00:08:59,420 --> 00:09:05,750
look at with PDF and we didn't see a

201
00:09:02,080 --> 00:09:07,370
public proof-of-concept for PDF but it's

202
00:09:05,750 --> 00:09:09,860
a very active format so we figured this

203
00:09:07,370 --> 00:09:11,570
has to have something that we can use

204
00:09:09,860 --> 00:09:14,210
and it as it turns out to have several

205
00:09:11,570 --> 00:09:16,340
guns so the first one you can embed a

206
00:09:14,210 --> 00:09:21,730
remote image when you specify an image

207
00:09:16,340 --> 00:09:24,339
in a PDF document it can link out to a

208
00:09:21,730 --> 00:09:26,889
mode image at some URL now this is only

209
00:09:24,339 --> 00:09:30,160
supported by Adobe Acrobat and other

210
00:09:26,889 --> 00:09:32,589
Adobe PDF parsers it seems to be in

211
00:09:30,160 --> 00:09:34,779
general that PDF functionality is a bit

212
00:09:32,589 --> 00:09:37,420
lacking in verses you know the

213
00:09:34,779 --> 00:09:40,209
specification with everything but Adobe

214
00:09:37,420 --> 00:09:44,019
products it makes a certain amount of

215
00:09:40,209 --> 00:09:46,869
sense because the PDF spec is huge so

216
00:09:44,019 --> 00:09:50,250
the problem with this at least from our

217
00:09:46,870 --> 00:09:55,149
perspective as you know you know

218
00:09:50,250 --> 00:09:57,160
attackers is the idea is is that you

219
00:09:55,149 --> 00:10:00,310
can't embed file URLs you can't embed

220
00:09:57,160 --> 00:10:04,199
UNC paths which you know just pointing

221
00:10:00,310 --> 00:10:08,319
to SMB shares so you can't do the ntlm

222
00:10:04,199 --> 00:10:11,670
capture or relay but you can track where

223
00:10:08,320 --> 00:10:14,920
a document that's been open so if I

224
00:10:11,670 --> 00:10:17,139
generate a version of let's say that I'm

225
00:10:14,920 --> 00:10:20,560
I'm doing like a limited press release

226
00:10:17,139 --> 00:10:23,440
or some sort of document sharing with

227
00:10:20,560 --> 00:10:25,449
business partners and I want to see if

228
00:10:23,440 --> 00:10:27,040
anybody's taking those documents and

229
00:10:25,449 --> 00:10:30,519
giving them out to somebody else you

230
00:10:27,040 --> 00:10:31,930
shouldn't have them I can take a PDF and

231
00:10:30,519 --> 00:10:35,620
make several different versions of it

232
00:10:31,930 --> 00:10:37,989
that had a different image from a server

233
00:10:35,620 --> 00:10:40,389
that I control and distribute them and

234
00:10:37,990 --> 00:10:42,519
then I can see where that's been shared

235
00:10:40,389 --> 00:10:45,639
but I can't grab hashes through this one

236
00:10:42,519 --> 00:10:48,100
there's also the ability to open a game

237
00:10:45,639 --> 00:10:52,690
player like a video player within a PDF

238
00:10:48,100 --> 00:10:55,510
weird right PDF this will trigger a

239
00:10:52,690 --> 00:10:57,399
warning that says hey and actually it

240
00:10:55,510 --> 00:10:58,949
will warn you before it reaches out from

241
00:10:57,399 --> 00:11:04,240
like

242
00:10:58,949 --> 00:11:06,040
so it was you and then tries and then if

243
00:11:04,240 --> 00:11:09,459
you say yeah this is fine it'll reach

244
00:11:06,040 --> 00:11:11,620
out and then also the get URL method

245
00:11:09,459 --> 00:11:15,219
which is just basically pops open a

246
00:11:11,620 --> 00:11:18,459
browser window with the URL can also be

247
00:11:15,220 --> 00:11:20,319
used to to get this to happen one

248
00:11:18,459 --> 00:11:22,839
interesting thing that Damon found was

249
00:11:20,319 --> 00:11:24,490
that if you use the long UNC form

250
00:11:22,839 --> 00:11:29,230
something very funny happens the way

251
00:11:24,490 --> 00:11:30,610
that adobe reader parses UNC paths is it

252
00:11:29,230 --> 00:11:32,709
says okay this starts with backslash

253
00:11:30,610 --> 00:11:34,389
backslash and then it's got the server

254
00:11:32,709 --> 00:11:36,518
name and then in the backslash in the

255
00:11:34,389 --> 00:11:40,029
path so this thing after the first two

256
00:11:36,519 --> 00:11:42,579
slashes and the third is is the domain

257
00:11:40,029 --> 00:11:44,589
name or the IP or whatever so it pops up

258
00:11:42,579 --> 00:11:47,290
with whatever that is now there's an

259
00:11:44,589 --> 00:11:49,240
alternative form of UNC called long UNC

260
00:11:47,290 --> 00:11:51,910
which begins with double backslash

261
00:11:49,240 --> 00:11:54,639
question mark backslash and then the

262
00:11:51,910 --> 00:11:57,600
domain name and so it's a little bit

263
00:11:54,639 --> 00:11:59,800
hard to see let me zoom in I think I can

264
00:11:57,600 --> 00:12:01,050
do that

265
00:11:59,800 --> 00:12:05,279
[Music]

266
00:12:01,050 --> 00:12:07,959
alright so that's a little bit tough but

267
00:12:05,279 --> 00:12:10,709
you can see it says this document is

268
00:12:07,959 --> 00:12:10,709
trying to connect you

269
00:12:13,300 --> 00:12:17,469
all right so the the next one the one

270
00:12:15,639 --> 00:12:18,790
that you are already seen demonstrated

271
00:12:17,470 --> 00:12:20,470
is hard to get and the fun thing about

272
00:12:18,790 --> 00:12:22,629
this proof of concept is that it applies

273
00:12:20,470 --> 00:12:24,310
not only to Microsoft Word but also to

274
00:12:22,629 --> 00:12:26,100
WordPad so this is gonna pop on any

275
00:12:24,310 --> 00:12:27,969
Windows installation out there

276
00:12:26,100 --> 00:12:30,040
specifically the technique for getting

277
00:12:27,970 --> 00:12:32,199
this one was a linked document it's

278
00:12:30,040 --> 00:12:34,449
possible to embed a link to a file and

279
00:12:32,199 --> 00:12:36,069
an RTF for instance if you want to

280
00:12:34,449 --> 00:12:37,839
include in a picture in your RTF file

281
00:12:36,069 --> 00:12:38,860
instead of actually including the

282
00:12:37,839 --> 00:12:40,300
contents of the picture you wanna

283
00:12:38,860 --> 00:12:42,189
include a link to it so that it's

284
00:12:40,300 --> 00:12:43,569
updated and every time someone opens the

285
00:12:42,189 --> 00:12:44,529
RTF they automatically get the latest

286
00:12:43,569 --> 00:12:46,599
version um

287
00:12:44,529 --> 00:12:48,699
this can obviously be abused and the way

288
00:12:46,600 --> 00:12:50,709
that we were able to achieve this is by

289
00:12:48,699 --> 00:12:54,069
linking to a word document that's both

290
00:12:50,709 --> 00:12:56,199
stone and remote unc path so every time

291
00:12:54,069 --> 00:12:58,060
they open that Archaea it goes up to

292
00:12:56,199 --> 00:13:01,060
that unc path and tries to download the

293
00:12:58,060 --> 00:13:02,649
latest version of the word this one as

294
00:13:01,060 --> 00:13:04,180
you already saw is pretty funny because

295
00:13:02,649 --> 00:13:06,430
wallet does issue a warning it's

296
00:13:04,180 --> 00:13:09,279
completely ignored are the warning is a

297
00:13:06,430 --> 00:13:10,839
bit too late right it's phone your input

298
00:13:09,279 --> 00:13:12,069
there's there's no way to stop this if

299
00:13:10,839 --> 00:13:16,180
you open this file you sent me your

300
00:13:12,069 --> 00:13:18,099
credentials in the story on the next

301
00:13:16,180 --> 00:13:19,719
thing that we got we we wanted to get

302
00:13:18,100 --> 00:13:21,370
some graphics format so I don't know if

303
00:13:19,720 --> 00:13:23,259
anyone's familiar with the SVG file

304
00:13:21,370 --> 00:13:25,689
format its stands for scalable vector

305
00:13:23,259 --> 00:13:27,189
graphics it's slightly different than

306
00:13:25,689 --> 00:13:29,079
the traditional graphics format in that

307
00:13:27,189 --> 00:13:31,149
it is a format for exchanging

308
00:13:29,079 --> 00:13:32,888
vector-based graphics instead of bitmap

309
00:13:31,149 --> 00:13:34,689
so in a traditional bitmap image you

310
00:13:32,889 --> 00:13:36,309
basically just have a bunch of bits that

311
00:13:34,689 --> 00:13:38,079
correspond to pixels and what color they

312
00:13:36,309 --> 00:13:39,910
are and it describes the image in a

313
00:13:38,079 --> 00:13:42,069
vector format you have mathematical

314
00:13:39,910 --> 00:13:43,509
equations that describe lines and you

315
00:13:42,069 --> 00:13:46,479
know the slope of the line and things

316
00:13:43,509 --> 00:13:48,160
like that in order to draw a picture the

317
00:13:46,480 --> 00:13:51,879
fun thing about SVG file is it's

318
00:13:48,160 --> 00:13:53,400
basically a subset of HTML it implements

319
00:13:51,879 --> 00:13:55,710
a lot of the same

320
00:13:53,400 --> 00:13:57,300
we can find it in HTML document for

321
00:13:55,710 --> 00:13:59,970
instance image source is totally valid

322
00:13:57,300 --> 00:14:01,530
even including JavaScript why would you

323
00:13:59,970 --> 00:14:03,360
want to include JavaScript in an image

324
00:14:01,530 --> 00:14:05,280
file I don't know but I didn't write the

325
00:14:03,360 --> 00:14:07,320
format so the way that we were able to

326
00:14:05,280 --> 00:14:10,740
get this one to new ntlm authentication

327
00:14:07,320 --> 00:14:12,240
was via remote style sheets just like

328
00:14:10,740 --> 00:14:15,030
you can in HTML you can specify the

329
00:14:12,240 --> 00:14:17,490
location of a style sheet or the SVG

330
00:14:15,030 --> 00:14:19,459
document you put that as a UNC path and

331
00:14:17,490 --> 00:14:22,260
bam

332
00:14:19,460 --> 00:14:24,300
and by default these are partial with

333
00:14:22,260 --> 00:14:27,840
Internet Explorer on Windows as well so

334
00:14:24,300 --> 00:14:30,359
that's also interesting so these were an

335
00:14:27,840 --> 00:14:34,320
easy win we knew that the pls format

336
00:14:30,360 --> 00:14:36,240
already was known to enable us to do

337
00:14:34,320 --> 00:14:38,760
this kind of attack so we took a look at

338
00:14:36,240 --> 00:14:41,760
some other formats the playlist formats

339
00:14:38,760 --> 00:14:44,310
and three you and ASX specifically so

340
00:14:41,760 --> 00:14:46,980
m3u is an incredibly simple format it's

341
00:14:44,310 --> 00:14:48,810
just a list of resource paths and those

342
00:14:46,980 --> 00:14:52,230
resource paths can be absolute path

343
00:14:48,810 --> 00:14:54,630
relative paths or a URL which is

344
00:14:52,230 --> 00:14:57,930
interesting in our case in the case of

345
00:14:54,630 --> 00:15:02,550
m3u pls and ASX all of these allow for

346
00:14:57,930 --> 00:15:05,339
on windows anyway allow for UNC paths so

347
00:15:02,550 --> 00:15:10,089
we can easily

348
00:15:05,340 --> 00:15:12,280
things triggered so np3 promising when

349
00:15:10,090 --> 00:15:14,230
we started looking into it mp3 by itself

350
00:15:12,280 --> 00:15:16,689
with a very simple format it's just

351
00:15:14,230 --> 00:15:21,190
something like 16 or 32 bytes of data

352
00:15:16,690 --> 00:15:24,100
about the met of metadata for the next

353
00:15:21,190 --> 00:15:27,100
16 invites which are just the raw raw

354
00:15:24,100 --> 00:15:28,840
audio data so it's just back and forth

355
00:15:27,100 --> 00:15:31,900
back and forth back and forth with these

356
00:15:28,840 --> 00:15:34,780
but it because it's such a primitive

357
00:15:31,900 --> 00:15:36,459
format that's focused entirely on the

358
00:15:34,780 --> 00:15:40,240
audio there's there's no room for

359
00:15:36,460 --> 00:15:41,590
anything now this you know might sound

360
00:15:40,240 --> 00:15:44,440
confusing because they're like what

361
00:15:41,590 --> 00:15:46,450
about id3 like well actually that's not

362
00:15:44,440 --> 00:15:48,640
a part of the mp3 format it's just

363
00:15:46,450 --> 00:15:50,080
something that media players all of a

364
00:15:48,640 --> 00:15:52,360
sudden decided like well this hat

365
00:15:50,080 --> 00:15:55,810
doesn't have any metadata whatsoever so

366
00:15:52,360 --> 00:15:59,080
let's start like just including this ID

367
00:15:55,810 --> 00:16:02,589
3 format at the top of it so I do three

368
00:15:59,080 --> 00:16:04,050
has a just a bunch of frames there's the

369
00:16:02,590 --> 00:16:06,300
link frame and

370
00:16:04,050 --> 00:16:07,709
a tech frame are the ones that we're

371
00:16:06,300 --> 00:16:09,540
interested in because the link frame

372
00:16:07,709 --> 00:16:11,550
basically says they're supposed to be a

373
00:16:09,540 --> 00:16:12,779
frame here but this isn't the frame

374
00:16:11,550 --> 00:16:14,689
they're looking for the frame you're

375
00:16:12,779 --> 00:16:17,250
looking for is in that castle over there

376
00:16:14,690 --> 00:16:19,920
in that castle is an attacker control

377
00:16:17,250 --> 00:16:22,320
server right when the ink pick frame is

378
00:16:19,920 --> 00:16:24,019
attached picture so you have some

379
00:16:22,320 --> 00:16:26,880
picture that represents a cover or

380
00:16:24,019 --> 00:16:28,410
albemarle or something like that

381
00:16:26,880 --> 00:16:31,320
and you can either have it embedded in

382
00:16:28,410 --> 00:16:34,439
the image or you can link off to some

383
00:16:31,320 --> 00:16:36,180
URL interestingly so you might be

384
00:16:34,440 --> 00:16:39,660
wondering why I have a brightly colored

385
00:16:36,180 --> 00:16:42,959
fish as a picture so as it turns out

386
00:16:39,660 --> 00:16:45,870
love getting the id3 expect one of the

387
00:16:42,959 --> 00:16:47,670
numerator one of the enum values or what

388
00:16:45,870 --> 00:16:51,029
type of picture it is because like let's

389
00:16:47,670 --> 00:16:53,610
say like 11 is the cover image

390
00:16:51,029 --> 00:16:59,899
I believe it's number 13 is a bright

391
00:16:53,610 --> 00:16:59,899
colored fish so thank you Little Snitch

392
00:17:00,829 --> 00:17:07,050
party great so anyway bright colored

393
00:17:04,619 --> 00:17:10,829
fish interestingly Primus is also

394
00:17:07,050 --> 00:17:14,250
integrated as a genre 93 which I mean

395
00:17:10,829 --> 00:17:15,809
I'm kind of in support of but anyway the

396
00:17:14,250 --> 00:17:19,260
unfortunate thing about this is that

397
00:17:15,809 --> 00:17:21,389
neither of these features of id3 tags ie

398
00:17:19,260 --> 00:17:24,270
3 tagging was supported on any major

399
00:17:21,390 --> 00:17:25,610
player we tested so this while it should

400
00:17:24,270 --> 00:17:27,929
work was kind of embossed

401
00:17:25,609 --> 00:17:30,178
all right so depending in the realm of

402
00:17:27,929 --> 00:17:31,110
multimedia formats the next one we found

403
00:17:30,179 --> 00:17:34,020
that we got

404
00:17:31,110 --> 00:17:35,669
the ASF family of formats this excludes

405
00:17:34,020 --> 00:17:37,620
Windows Media Audio and Windows Media

406
00:17:35,670 --> 00:17:38,940
video you saw this demonstrated just a

407
00:17:37,620 --> 00:17:42,120
little bit ago with a very innocent

408
00:17:38,940 --> 00:17:43,799
video of wildlife that pops open an

409
00:17:42,120 --> 00:17:45,719
Internet Explorer page and gets your

410
00:17:43,799 --> 00:17:47,670
Intel and credential sent to an attacker

411
00:17:45,720 --> 00:17:49,500
so the way that we achieved it in this

412
00:17:47,670 --> 00:17:52,049
proof of concept is what's called script

413
00:17:49,500 --> 00:17:53,970
commands it's possible to embed script

414
00:17:52,049 --> 00:17:56,670
commands in a Windows Media video or

415
00:17:53,970 --> 00:17:58,679
audio file that at a certain time in the

416
00:17:56,670 --> 00:18:00,270
video the player will execute these

417
00:17:58,679 --> 00:18:01,500
script commands there are variety of

418
00:18:00,270 --> 00:18:03,418
commands available but the most

419
00:18:01,500 --> 00:18:05,700
interesting one for our purposes was

420
00:18:03,419 --> 00:18:08,070
this one called URL and exit which means

421
00:18:05,700 --> 00:18:10,350
open this URL on parts of however

422
00:18:08,070 --> 00:18:12,540
however you would normally so if it's an

423
00:18:10,350 --> 00:18:14,879
HTTP URL to open it in your browser and

424
00:18:12,540 --> 00:18:15,960
it's not playing the video the

425
00:18:14,880 --> 00:18:18,360
implications of this one are fairly

426
00:18:15,960 --> 00:18:20,970
obvious as far as tracking goes you put

427
00:18:18,360 --> 00:18:23,129
this in a video file throw it out up

428
00:18:20,970 --> 00:18:26,160
here to peer network and bam anyone that

429
00:18:23,130 --> 00:18:27,690
opens this is now informing your server

430
00:18:26,160 --> 00:18:28,669
that they've opened this this video or

431
00:18:27,690 --> 00:18:31,620
audio file

432
00:18:28,669 --> 00:18:32,940
additionally the one of the limitations

433
00:18:31,620 --> 00:18:34,020
of URL and I took is that it's not

434
00:18:32,940 --> 00:18:36,299
completely transparent

435
00:18:34,020 --> 00:18:38,760
you saw the browser window open so

436
00:18:36,299 --> 00:18:40,470
you're gonna tip your hand do anyone

437
00:18:38,760 --> 00:18:44,040
that opens this video file that they are

438
00:18:40,470 --> 00:18:45,809
then tracked one area of future research

439
00:18:44,040 --> 00:18:48,690
that we're hoping to get to real soon is

440
00:18:45,809 --> 00:18:52,950
beer and functionality abuse the idea

441
00:18:48,690 --> 00:18:54,660
being it's possible to in apply DRM to

442
00:18:52,950 --> 00:18:56,640
the Windows Media video file which

443
00:18:54,660 --> 00:18:59,190
basically encrypt the entire contents of

444
00:18:56,640 --> 00:19:01,320
the video and specifies a URL where the

445
00:18:59,190 --> 00:19:03,720
player can go to get the decryption key

446
00:19:01,320 --> 00:19:05,970
that's how PRM is implemented at a high

447
00:19:03,720 --> 00:19:07,710
level in the ASF family in formats the

448
00:19:05,970 --> 00:19:09,990
obvious of use there is that we can

449
00:19:07,710 --> 00:19:12,419
specify our own URL and as soon as you

450
00:19:09,990 --> 00:19:14,700
start doing the video file completely

451
00:19:12,419 --> 00:19:15,960
transparent to the user it visits our

452
00:19:14,700 --> 00:19:18,029
server to

453
00:19:15,960 --> 00:19:20,369
download the decryption key and then

454
00:19:18,029 --> 00:19:21,869
we've trapped it finally there's one

455
00:19:20,369 --> 00:19:24,600
other interesting vector here and that's

456
00:19:21,869 --> 00:19:27,749
subtitles on subtitles in the ASF format

457
00:19:24,600 --> 00:19:31,110
are basically just raw HTML generally

458
00:19:27,749 --> 00:19:32,730
used for including text alternatively

459
00:19:31,110 --> 00:19:34,529
you can do things like change the color

460
00:19:32,730 --> 00:19:36,389
of the text for some reason you can

461
00:19:34,529 --> 00:19:38,610
actually embed an image so you can do

462
00:19:36,389 --> 00:19:40,469
image source equals in a subtitle and it

463
00:19:38,610 --> 00:19:41,850
will straight up go download the image

464
00:19:40,470 --> 00:19:43,440
and just play it at the bottom of the

465
00:19:41,850 --> 00:19:44,668
video like it was a subtitle that's

466
00:19:43,440 --> 00:19:46,409
completely insane and no one would ever

467
00:19:44,669 --> 00:19:48,240
have legitimate reason to use it that I

468
00:19:46,409 --> 00:19:50,009
can think of but it works and it allows

469
00:19:48,240 --> 00:19:51,899
us to get into Yale and credentials the

470
00:19:50,009 --> 00:19:53,850
caveat here is they have to explicitly

471
00:19:51,899 --> 00:19:56,189
say I want to see some pilots they're

472
00:19:53,850 --> 00:20:01,619
not enabled by default so maybe you just

473
00:19:56,190 --> 00:20:03,779
took it for a film so one interesting

474
00:20:01,619 --> 00:20:07,860
note about the URL and exit technique

475
00:20:03,779 --> 00:20:10,619
you can't actually give a file URL or a

476
00:20:07,860 --> 00:20:13,740
UNC path in the URL it will refuse to

477
00:20:10,619 --> 00:20:17,759
launch that however if you give it an

478
00:20:13,740 --> 00:20:20,850
HTTP URL and once it and it hits that so

479
00:20:17,759 --> 00:20:22,080
let me you know what I thought we

480
00:20:20,850 --> 00:20:25,139
haven't got blew that one at a time I

481
00:20:22,080 --> 00:20:30,480
don't show you but if if you redirect

482
00:20:25,139 --> 00:20:33,500
from that HTTP endpoint to a file URI

483
00:20:30,480 --> 00:20:37,160
it'll happily like bounce to that and

484
00:20:33,500 --> 00:20:41,680
provide Intel and negotiation but so you

485
00:20:37,160 --> 00:20:43,840
have to have that intermediary step so

486
00:20:41,680 --> 00:20:45,950
torrent was one we looked at

487
00:20:43,840 --> 00:20:48,919
unfortunately we couldn't find any

488
00:20:45,950 --> 00:20:52,160
purser that would accept file you are

489
00:20:48,920 --> 00:20:55,040
eyes or UNC paths for any of the things

490
00:20:52,160 --> 00:20:58,220
that we took a look at inside the

491
00:20:55,040 --> 00:21:00,440
torrent format so but what we did think

492
00:20:58,220 --> 00:21:02,540
about was well we can provide an

493
00:21:00,440 --> 00:21:04,790
arbitrary number of URLs in the

494
00:21:02,540 --> 00:21:09,230
announced list so it'll check out all

495
00:21:04,790 --> 00:21:11,960
these trackers and factors trackers

496
00:21:09,230 --> 00:21:13,970
it'll it'll hit all of these URLs as

497
00:21:11,960 --> 00:21:16,520
soon as you try to start torrenting

498
00:21:13,970 --> 00:21:20,600
whatever this torrent is supposedly for

499
00:21:16,520 --> 00:21:24,650
so we thought well why not do something

500
00:21:20,600 --> 00:21:27,320
else with this why not take all the the

501
00:21:24,650 --> 00:21:30,830
C surf flaws in home routers that we can

502
00:21:27,320 --> 00:21:33,409
find and just try mass exploitation of

503
00:21:30,830 --> 00:21:35,080
all these different flaws so you pop

504
00:21:33,410 --> 00:21:37,340
open this torrent and it tries to

505
00:21:35,080 --> 00:21:40,189
exploit your router in a number of

506
00:21:37,340 --> 00:21:42,530
different ways and then after all of

507
00:21:40,190 --> 00:21:44,930
that exploitation you know attempt

508
00:21:42,530 --> 00:21:46,730
effort every exploitation attempt has

509
00:21:44,930 --> 00:21:48,980
gone through it then finds the real

510
00:21:46,730 --> 00:21:50,570
trackers and starts downloading so it

511
00:21:48,980 --> 00:21:51,920
can be a completely functional torrent

512
00:21:50,570 --> 00:21:56,929
that just happens to own your home

513
00:21:51,920 --> 00:21:59,510
router sirs so alright so the next thing

514
00:21:56,930 --> 00:22:01,400
we got a quick one on was the virtual

515
00:21:59,510 --> 00:22:03,500
card format it's used for exchanging

516
00:22:01,400 --> 00:22:05,660
virtual business cards basically address

517
00:22:03,500 --> 00:22:06,890
book entries very common in an

518
00:22:05,660 --> 00:22:08,720
enterprise environment system these

519
00:22:06,890 --> 00:22:10,310
things around so this one is a little

520
00:22:08,720 --> 00:22:11,510
bit trickier there's some real caveats

521
00:22:10,310 --> 00:22:13,159
for this one that make it very difficult

522
00:22:11,510 --> 00:22:14,629
to exploit what it would require are

523
00:22:13,160 --> 00:22:17,810
some social engineering pretext going to

524
00:22:14,630 --> 00:22:19,340
get it done just right the be card

525
00:22:17,810 --> 00:22:20,690
format as one of the fields that are

526
00:22:19,340 --> 00:22:23,000
supports it supports what's called a

527
00:22:20,690 --> 00:22:24,950
pretty busy URL this is usually a web

528
00:22:23,000 --> 00:22:28,070
server that you are email client

529
00:22:24,950 --> 00:22:29,390
can ask what at what time is this person

530
00:22:28,070 --> 00:22:31,700
in my address book available for a

531
00:22:29,390 --> 00:22:33,860
meeting it's it's really handy feature

532
00:22:31,700 --> 00:22:35,090
for some reason we found out that it

533
00:22:33,860 --> 00:22:36,949
actually supports value our eyes

534
00:22:35,090 --> 00:22:38,570
obviously that doesn't really make any

535
00:22:36,950 --> 00:22:41,090
sense I can't understand why they would

536
00:22:38,570 --> 00:22:42,590
program it that way but whatever my

537
00:22:41,090 --> 00:22:44,419
preview is a URL if you want to know

538
00:22:42,590 --> 00:22:47,030
when I'm free for meeting is you know

539
00:22:44,420 --> 00:22:48,980
slash flash attacker comm and it'll send

540
00:22:47,030 --> 00:22:51,350
me your ntlm credits so the one caveat

541
00:22:48,980 --> 00:22:53,270
here is that I will have to get you to

542
00:22:51,350 --> 00:22:55,280
add me to your address book and then say

543
00:22:53,270 --> 00:22:57,410
hey let's schedule a meeting and then

544
00:22:55,280 --> 00:22:58,730
you'll you'll have the exploit delivered

545
00:22:57,410 --> 00:23:01,460
so it is a little bit of a caveat that

546
00:22:58,730 --> 00:23:02,930
it's so very interesting fine so on the

547
00:23:01,460 --> 00:23:06,140
topic of group we're stuff

548
00:23:02,930 --> 00:23:08,660
there's the icon under format or ICS so

549
00:23:06,140 --> 00:23:10,760
this is generally what you get when you

550
00:23:08,660 --> 00:23:12,800
send and receive a meeting and like this

551
00:23:10,760 --> 00:23:15,650
is the format that's being used most of

552
00:23:12,800 --> 00:23:17,090
the time so this is another one where we

553
00:23:15,650 --> 00:23:19,250
had high hopes for it when we were

554
00:23:17,090 --> 00:23:21,409
reading the specification but again file

555
00:23:19,250 --> 00:23:23,690
parser you know implementations of file

556
00:23:21,410 --> 00:23:25,400
parsers and the specification that says

557
00:23:23,690 --> 00:23:28,280
like here's what you should do

558
00:23:25,400 --> 00:23:30,200
there's some difference there and in

559
00:23:28,280 --> 00:23:32,360
this case it's actually really good and

560
00:23:30,200 --> 00:23:35,270
you'll understand why I say that 120

561
00:23:32,360 --> 00:23:38,090
when I describe this to you so there's

562
00:23:35,270 --> 00:23:40,100
the V alarm parameter which

563
00:23:38,090 --> 00:23:43,610
in third as a part of an ICS file which

564
00:23:40,100 --> 00:23:45,260
is actually an embedded reminder so when

565
00:23:43,610 --> 00:23:46,820
you send a meeting invite and you have

566
00:23:45,260 --> 00:23:49,790
some reminders that that's actually in

567
00:23:46,820 --> 00:23:52,460
the meeting insight so you know now you

568
00:23:49,790 --> 00:23:53,810
know why reminders that you didn't set

569
00:23:52,460 --> 00:23:56,300
show up it's because they're in the

570
00:23:53,810 --> 00:23:59,120
meeting invites the spec defines four

571
00:23:56,300 --> 00:24:01,850
different types the first is display to

572
00:23:59,120 --> 00:24:05,719
just pop up a pop-up the second is alarm

573
00:24:01,850 --> 00:24:08,709
which is like do some you know default

574
00:24:05,720 --> 00:24:12,890
sound the third is audio which is like

575
00:24:08,710 --> 00:24:15,530
play a sound from the machine or go

576
00:24:12,890 --> 00:24:17,660
fetch a sound at a particular URL and

577
00:24:15,530 --> 00:24:19,730
then play that and the fourth which is

578
00:24:17,660 --> 00:24:22,280
really funny is procedure which is the

579
00:24:19,730 --> 00:24:24,290
same thing as audio like but with

580
00:24:22,280 --> 00:24:26,720
running a program so it's like okay yeah

581
00:24:24,290 --> 00:24:29,360
go to this URL download this program and

582
00:24:26,720 --> 00:24:33,220
run it at a time when I specify in my

583
00:24:29,360 --> 00:24:36,909
meeting and I'd like what my commitment

584
00:24:33,220 --> 00:24:39,260
thankfully and sadly for our purposes

585
00:24:36,910 --> 00:24:42,530
this doesn't work in any calendar

586
00:24:39,260 --> 00:24:45,050
user-agent need tested even I can't even

587
00:24:42,530 --> 00:24:49,160
well calendar app which is the successor

588
00:24:45,050 --> 00:24:53,210
to I calendar which is great like you

589
00:24:49,160 --> 00:24:55,980
can make I could get into it but it

590
00:24:53,210 --> 00:25:01,260
doesn't even in the successor to do

591
00:24:55,980 --> 00:25:03,060
into a colander so that's fine so you

592
00:25:01,260 --> 00:25:06,060
might be thinking okay how can I apply

593
00:25:03,060 --> 00:25:07,649
this today the most obvious method is to

594
00:25:06,060 --> 00:25:09,840
use it in the social part of a social

595
00:25:07,650 --> 00:25:11,670
engineering engagement send it to

596
00:25:09,840 --> 00:25:13,500
someone over email have them open the

597
00:25:11,670 --> 00:25:16,070
file you've got to fill in credentials

598
00:25:13,500 --> 00:25:20,370
and you can just range shells down

599
00:25:16,070 --> 00:25:23,010
additionally just name it employee pay

600
00:25:20,370 --> 00:25:24,330
raises 2015 and fire it off of every

601
00:25:23,010 --> 00:25:26,040
little bit mile share you find on an

602
00:25:24,330 --> 00:25:27,540
internal network guarantee that people

603
00:25:26,040 --> 00:25:29,220
are going to be opening that file within

604
00:25:27,540 --> 00:25:42,210
like five minutes and you're gonna start

605
00:25:29,220 --> 00:25:44,040
getting some credits yes sure so I

606
00:25:42,210 --> 00:25:46,470
understand that that's a little bit

607
00:25:44,040 --> 00:25:48,090
confusing and the idea is basically it

608
00:25:46,470 --> 00:25:50,400
revolves around the file you're online

609
00:25:48,090 --> 00:25:52,949
and windows and how its parts if I send

610
00:25:50,400 --> 00:25:55,290
you a URI that says file colon slash

611
00:25:52,950 --> 00:25:58,110
slash and then an IP address or a

612
00:25:55,290 --> 00:25:59,970
hostname what your windows computer will

613
00:25:58,110 --> 00:26:02,159
automatically transparently to you what

614
00:25:59,970 --> 00:26:05,700
it will try to do is assume that that

615
00:26:02,160 --> 00:26:07,350
remote post is an SP or Windows File

616
00:26:05,700 --> 00:26:09,630
Sharing server and it will try to

617
00:26:07,350 --> 00:26:10,889
authenticate with that remote server so

618
00:26:09,630 --> 00:26:13,380
that it can download the file that you

619
00:26:10,890 --> 00:26:15,000
want unfortunately for you that neurone

620
00:26:13,380 --> 00:26:17,010
server happens to be my server and use

621
00:26:15,000 --> 00:26:18,810
some of your credentials or at least a

622
00:26:17,010 --> 00:26:22,730
hashed version of your password as you

623
00:26:18,810 --> 00:26:22,730
saw be practie very quickly earlier

624
00:26:22,960 --> 00:26:27,520
to negotiate to authenticate using your

625
00:26:25,870 --> 00:26:29,649
credentials

626
00:26:27,520 --> 00:26:31,600
that's the logged in user who said

627
00:26:29,649 --> 00:26:33,189
whatever user you're logged in to logged

628
00:26:31,600 --> 00:26:34,689
in as it's going to try to authenticate

629
00:26:33,190 --> 00:26:35,919
automatically so you don't have to put

630
00:26:34,690 --> 00:26:39,929
in your username and password again

631
00:26:35,919 --> 00:26:43,450
which is a very handy feature thank you

632
00:26:39,929 --> 00:26:45,250
yes yes all of the entailing credential

633
00:26:43,450 --> 00:26:46,779
capture attacks are window specific the

634
00:26:45,250 --> 00:26:48,730
tracking stuff can be used on any

635
00:26:46,779 --> 00:26:50,320
operating system but the authentication

636
00:26:48,730 --> 00:26:55,179
stealing stuff doesn't really window

637
00:26:50,320 --> 00:26:57,010
specific so back to delivery methods

638
00:26:55,179 --> 00:26:59,080
watering bowl attack you know you throw

639
00:26:57,010 --> 00:27:00,100
this on an internal like sharepoint or

640
00:26:59,080 --> 00:27:01,570
something and people will start

641
00:27:00,100 --> 00:27:03,279
downloading it and opening it

642
00:27:01,570 --> 00:27:05,500
um peer-to-peer distribution this one is

643
00:27:03,279 --> 00:27:07,840
very interesting I'm one of the possible

644
00:27:05,500 --> 00:27:09,820
I guess you could call it more ethical

645
00:27:07,840 --> 00:27:11,439
or more appropriate applications we

646
00:27:09,820 --> 00:27:12,490
thought up for this technique was doing

647
00:27:11,440 --> 00:27:14,919
something like caching child

648
00:27:12,490 --> 00:27:16,990
pornographers so you throw some you know

649
00:27:14,919 --> 00:27:19,120
smut video on a peer-to-peer path for

650
00:27:16,990 --> 00:27:21,880
any network and you have bed tracking

651
00:27:19,120 --> 00:27:23,139
code of it you know hopefully you'll be

652
00:27:21,880 --> 00:27:27,970
able to catch yourself some bad guys

653
00:27:23,140 --> 00:27:30,279
that way finally we considered using

654
00:27:27,970 --> 00:27:32,230
this as sort of a honeypot so you put

655
00:27:30,279 --> 00:27:33,669
this tracking code and all your internal

656
00:27:32,230 --> 00:27:36,309
documents that you want to keep a secret

657
00:27:33,669 --> 00:27:38,620
your corporate memos your financial

658
00:27:36,309 --> 00:27:39,700
stuff your HR stuff whatever and if this

659
00:27:38,620 --> 00:27:41,879
has ever opened outside of your

660
00:27:39,700 --> 00:27:45,190
organization you're immediately notified

661
00:27:41,880 --> 00:27:47,289
or just have one document that you know

662
00:27:45,190 --> 00:27:47,890
purports to have something juicy in it

663
00:27:47,289 --> 00:27:49,840
but

664
00:27:47,890 --> 00:27:52,180
doesn't actually contain anything it

665
00:27:49,840 --> 00:27:54,370
just contains like a bug that says hey

666
00:27:52,180 --> 00:27:56,350
I've been open so you know if that ever

667
00:27:54,370 --> 00:27:58,120
goes off you know rather than having

668
00:27:56,350 --> 00:27:59,679
this huge noise about like okay well

669
00:27:58,120 --> 00:28:01,510
this document was open and this document

670
00:27:59,680 --> 00:28:04,000
is open and this document was open you

671
00:28:01,510 --> 00:28:06,040
can have just one file that says hey I

672
00:28:04,000 --> 00:28:11,650
should never be open guess what I'm open

673
00:28:06,040 --> 00:28:13,050
you know look at who's opening me so one

674
00:28:11,650 --> 00:28:17,230
way that this could be used

675
00:28:13,050 --> 00:28:19,090
unfortunately to be for DRM so as as

676
00:28:17,230 --> 00:28:21,280
Damon mentioned you know the child

677
00:28:19,090 --> 00:28:23,860
pornography the law enforcement aspect

678
00:28:21,280 --> 00:28:26,080
of it this could this same sort of

679
00:28:23,860 --> 00:28:29,050
technique could also be used for let's

680
00:28:26,080 --> 00:28:33,570
say copyright in the music or movies so

681
00:28:29,050 --> 00:28:38,139
you distribute your your your

682
00:28:33,570 --> 00:28:41,679
copyrighted work in WMA format and every

683
00:28:38,140 --> 00:28:45,310
time it gets open somebody knows about

684
00:28:41,680 --> 00:28:47,200
it probably at the ri delay it might

685
00:28:45,310 --> 00:28:49,240
already do this in some cases as we

686
00:28:47,200 --> 00:28:52,300
mentioned there is DRM functionality in

687
00:28:49,240 --> 00:28:54,730
it does Windows Media format family

688
00:28:52,300 --> 00:28:57,790
which is it's probably by somebody out

689
00:28:54,730 --> 00:28:59,260
there already being used in this way and

690
00:28:57,790 --> 00:29:01,510
this goes beyond deterrence into

691
00:28:59,260 --> 00:29:03,430
identification because all of a sudden

692
00:29:01,510 --> 00:29:05,050
you have the IP addresses of the people

693
00:29:03,430 --> 00:29:07,570
you know and you can start identifying

694
00:29:05,050 --> 00:29:09,220
them even if they've not downloaded it

695
00:29:07,570 --> 00:29:12,090
from something you control or can you

696
00:29:09,220 --> 00:29:14,230
monitor like BitTorrent

697
00:29:12,090 --> 00:29:15,220
alright so the next application we were

698
00:29:14,230 --> 00:29:16,420
thinking of and I'm going to run through

699
00:29:15,220 --> 00:29:19,180
these pretty quick we're running out of

700
00:29:16,420 --> 00:29:20,800
time um a data loss prevention scheme so

701
00:29:19,180 --> 00:29:22,570
imagine being a whistleblower in a

702
00:29:20,800 --> 00:29:24,370
fascist country or a country the ditions

703
00:29:22,570 --> 00:29:25,960
isn't supportive of whistleblowers

704
00:29:24,370 --> 00:29:28,239
Armonk I maintain names so you

705
00:29:25,960 --> 00:29:30,780
exfiltrated document that exposes let's

706
00:29:28,240 --> 00:29:32,890
say military abuses of power

707
00:29:30,780 --> 00:29:35,350
unfortunately every time the document is

708
00:29:32,890 --> 00:29:36,820
opened it calls home so first it calls

709
00:29:35,350 --> 00:29:38,679
home from your computer that's expected

710
00:29:36,820 --> 00:29:40,750
nobody comes after you then it calls

711
00:29:38,680 --> 00:29:42,100
home from your home computer then it

712
00:29:40,750 --> 00:29:43,750
calls home from your friend's home

713
00:29:42,100 --> 00:29:45,340
computer and then your lawyers computer

714
00:29:43,750 --> 00:29:51,520
and then your journalists computer and

715
00:29:45,340 --> 00:29:53,919
then you all disappear so definitely an

716
00:29:51,520 --> 00:29:55,840
interesting thing to think about another

717
00:29:53,920 --> 00:29:58,810
interesting thing to think about if

718
00:29:55,840 --> 00:30:01,750
you've ever used poor browser and you've

719
00:29:58,810 --> 00:30:03,700
downloaded some file that can't open

720
00:30:01,750 --> 00:30:07,270
through tor browser itself you'll see a

721
00:30:03,700 --> 00:30:09,250
warning that says hey we can't proxy

722
00:30:07,270 --> 00:30:11,470
external applications if you open this

723
00:30:09,250 --> 00:30:12,070
from you know this in an external

724
00:30:11,470 --> 00:30:14,200
application

725
00:30:12,070 --> 00:30:16,030
it might unmask you well this is the

726
00:30:14,200 --> 00:30:20,890
kind of stuff that they're talking about

727
00:30:16,030 --> 00:30:22,750
being that warning so this this is

728
00:30:20,890 --> 00:30:24,850
exactly this is exactly that that

729
00:30:22,750 --> 00:30:30,130
warning is about so if you download

730
00:30:24,850 --> 00:30:32,159
let's say how to make a gas mask for the

731
00:30:30,130 --> 00:30:35,160
protest you're going to

732
00:30:32,160 --> 00:30:40,080
dot PDF and open that outside of tor

733
00:30:35,160 --> 00:30:44,580
browser it might unmask you hon not in

734
00:30:40,080 --> 00:30:47,780
tech so or or on the upon the flipside

735
00:30:44,580 --> 00:30:50,970
let's say that you want to identify

736
00:30:47,780 --> 00:30:52,770
internet jihad ease you might be able to

737
00:30:50,970 --> 00:30:56,280
upload like how to make a bomb in three

738
00:30:52,770 --> 00:31:01,590
easy steps PDF to jihad is great and

739
00:30:56,280 --> 00:31:03,210
it's cool and stuff calm and then you

740
00:31:01,590 --> 00:31:06,510
know identified who's looking to make a

741
00:31:03,210 --> 00:31:07,440
bomb in three easy steps alright so

742
00:31:06,510 --> 00:31:09,240
we've already demonstrated this

743
00:31:07,440 --> 00:31:11,070
technique and we've already gone over a

744
00:31:09,240 --> 00:31:14,520
bit of detail so I I'll go over this

745
00:31:11,070 --> 00:31:16,980
pretty quickly basically when you

746
00:31:14,520 --> 00:31:18,570
attempt to authenticate I'm sorry when

747
00:31:16,980 --> 00:31:19,860
you attempt to open a file on a UNC

748
00:31:18,570 --> 00:31:22,050
chair what doesn't automatically

749
00:31:19,860 --> 00:31:23,280
authenticated there's a lot of different

750
00:31:22,050 --> 00:31:24,360
things that the attacker can do upon

751
00:31:23,280 --> 00:31:26,280
receiving this authentication

752
00:31:24,360 --> 00:31:27,600
information one is just a straight-up

753
00:31:26,280 --> 00:31:29,730
racket like we did in our demonstration

754
00:31:27,600 --> 00:31:31,439
but another powerful method let's say

755
00:31:29,730 --> 00:31:32,280
you have a strong password that isn't

756
00:31:31,440 --> 00:31:34,380
easily cracked

757
00:31:32,280 --> 00:31:37,620
you're still not safe we can employ a

758
00:31:34,380 --> 00:31:39,120
technique called entail and relay to use

759
00:31:37,620 --> 00:31:40,679
your hash without actually knowing what

760
00:31:39,120 --> 00:31:42,000
the plaintext value of your password is

761
00:31:40,680 --> 00:31:45,990
and Dan's here to go over how this

762
00:31:42,000 --> 00:31:48,440
attack works so basically the normal at

763
00:31:45,990 --> 00:31:50,970
a very high level normal insulin

764
00:31:48,440 --> 00:31:53,430
negotiation works like this at least in

765
00:31:50,970 --> 00:31:55,920
version two plank says hey I want to I

766
00:31:53,430 --> 00:31:58,200
want to connect server says ok well you

767
00:31:55,920 --> 00:32:01,680
got to authenticate here's a number to

768
00:31:58,200 --> 00:32:03,870
mix in your hash so client mixes that in

769
00:32:01,680 --> 00:32:05,970
and sends that that information back to

770
00:32:03,870 --> 00:32:08,399
the server which verifies it and says

771
00:32:05,970 --> 00:32:11,070
yes or good or no access denied

772
00:32:08,400 --> 00:32:13,950
now let's say that we can get a client

773
00:32:11,070 --> 00:32:15,750
to attempt to authenticate to us there

774
00:32:13,950 --> 00:32:18,480
is no information in that exchange which

775
00:32:15,750 --> 00:32:20,309
ties it to that particular conversation

776
00:32:18,480 --> 00:32:22,650
well it ties it to that particular

777
00:32:20,309 --> 00:32:24,480
conversation but it doesn't tie up to

778
00:32:22,650 --> 00:32:27,570
that like a particular set of

779
00:32:24,480 --> 00:32:30,540
interacting posts so client negotiates

780
00:32:27,570 --> 00:32:32,040
to us we negotiate to the server the

781
00:32:30,540 --> 00:32:33,420
server gives us a challenge which we

782
00:32:32,040 --> 00:32:36,030
pass back to the client the client

783
00:32:33,420 --> 00:32:38,430
correctly mixes that challenge in with

784
00:32:36,030 --> 00:32:40,139
the appropriate hash and we can send

785
00:32:38,430 --> 00:32:42,330
that straight along to the server and

786
00:32:40,140 --> 00:32:43,860
then tell the client sorry that didn't

787
00:32:42,330 --> 00:32:46,710
work try again

788
00:32:43,860 --> 00:32:49,860
so as long as the client and as you saw

789
00:32:46,710 --> 00:32:51,929
in the in the listing of the the SME

790
00:32:49,860 --> 00:32:53,909
capture how many times had tried to

791
00:32:51,929 --> 00:32:55,440
authenticate for every time it tries to

792
00:32:53,910 --> 00:32:57,300
authenticate we can pass that

793
00:32:55,440 --> 00:32:59,700
authentication on to a different server

794
00:32:57,300 --> 00:33:02,399
by starting a new conversation with some

795
00:32:59,700 --> 00:33:06,540
other ntlm protected host doesn't matter

796
00:33:02,400 --> 00:33:09,809
if it's HTTP SMB whatever we can pass

797
00:33:06,540 --> 00:33:10,920
that along so it doesn't matter if your

798
00:33:09,809 --> 00:33:12,540
password is strong we don't actually

799
00:33:10,920 --> 00:33:15,210
have to crack it we can just pass it

800
00:33:12,540 --> 00:33:19,850
along to something else like I look like

801
00:33:15,210 --> 00:33:19,850
a live web access ER or some such thing

802
00:33:20,120 --> 00:33:24,659
so another potential attack scenario

803
00:33:23,010 --> 00:33:26,610
that we've investigated with this

804
00:33:24,660 --> 00:33:28,290
research is delivering cross-site

805
00:33:26,610 --> 00:33:29,610
request forgery payloads the most

806
00:33:28,290 --> 00:33:30,840
obvious one like we said is the one

807
00:33:29,610 --> 00:33:33,120
torrent file to rule them all

808
00:33:30,840 --> 00:33:35,550
you start downloading it it pops every

809
00:33:33,120 --> 00:33:37,050
known public exploit on routers and then

810
00:33:35,550 --> 00:33:38,370
finally downloads your torrent file but

811
00:33:37,050 --> 00:33:41,040
it's already completely under your

812
00:33:38,370 --> 00:33:42,059
router additionally to homing routers

813
00:33:41,040 --> 00:33:42,420
there are a lot of other things you can

814
00:33:42,059 --> 00:33:43,830
do

815
00:33:42,420 --> 00:33:46,260
generally the inside of the corporate

816
00:33:43,830 --> 00:33:47,550
network is a nice soft squishy target so

817
00:33:46,260 --> 00:33:49,379
if you can get someone to download your

818
00:33:47,550 --> 00:33:52,230
hostile torrent file or your Hospital

819
00:33:49,380 --> 00:33:53,850
PDF or whatever you can embed cross-site

820
00:33:52,230 --> 00:33:55,830
request forgery payloads in that

821
00:33:53,850 --> 00:33:56,929
document that as soon as it's open will

822
00:33:55,830 --> 00:34:01,639
deliver against the intern

823
00:33:56,930 --> 00:34:04,160
corporate network so we thought a little

824
00:34:01,640 --> 00:34:06,440
bit about possible mitigations and we

825
00:34:04,160 --> 00:34:08,150
haven't got anything that's a silver

826
00:34:06,440 --> 00:34:11,179
bullet against this but we've got some

827
00:34:08,150 --> 00:34:12,980
good ideas so we're gonna just briefly

828
00:34:11,179 --> 00:34:15,199
discuss like what we thought about and

829
00:34:12,980 --> 00:34:16,909
whether or not we think it's worth

830
00:34:15,199 --> 00:34:19,759
anything so ie

831
00:34:16,909 --> 00:34:21,230
probably not there's way too many file

832
00:34:19,760 --> 00:34:22,940
formats out there part of the point of

833
00:34:21,230 --> 00:34:24,980
this researcher is to show that that

834
00:34:22,940 --> 00:34:26,900
there's a wide range of different

835
00:34:24,980 --> 00:34:29,570
formats where this kind of attack can

836
00:34:26,900 --> 00:34:32,389
work there's also the possibility of

837
00:34:29,570 --> 00:34:33,890
false positives I mean there's these are

838
00:34:32,389 --> 00:34:35,750
all features like these are all things

839
00:34:33,889 --> 00:34:38,060
that people might use for legitimate

840
00:34:35,750 --> 00:34:40,010
purposes and so it would be hard to

841
00:34:38,060 --> 00:34:43,570
distinguish between a legitimate use of

842
00:34:40,010 --> 00:34:46,190
some feature and an illegitimate one

843
00:34:43,570 --> 00:34:47,840
changes to the format's there's too many

844
00:34:46,190 --> 00:34:49,700
of them out there and they're too well

845
00:34:47,840 --> 00:34:52,850
established in a lot of cases to go

846
00:34:49,699 --> 00:34:55,810
changing the format's now you know it's

847
00:34:52,850 --> 00:34:58,910
it's not really easy to make a change to

848
00:34:55,810 --> 00:35:01,370
programs that are being used in the wild

849
00:34:58,910 --> 00:35:03,620
it's even harder to make like structural

850
00:35:01,370 --> 00:35:06,500
level changes to formats that multiple

851
00:35:03,620 --> 00:35:08,810
different programs are using we took a

852
00:35:06,500 --> 00:35:11,420
look at application local file firewalls

853
00:35:08,810 --> 00:35:14,240
like zone alarm like Little Snitch or

854
00:35:11,420 --> 00:35:17,540
leopard flower these are all wonderful

855
00:35:14,240 --> 00:35:20,899
tools and they help a lot because if you

856
00:35:17,540 --> 00:35:22,660
think well I don't ever want my PDF to

857
00:35:20,900 --> 00:35:25,000
be reaching out to the end

858
00:35:22,660 --> 00:35:26,950
okay just easier application well the

859
00:35:25,000 --> 00:35:28,540
firewall to say Adobe Acrobat should

860
00:35:26,950 --> 00:35:31,540
never be able to connect to anything

861
00:35:28,540 --> 00:35:35,410
except like Adobe update comm or

862
00:35:31,540 --> 00:35:37,210
something like that so that's that's

863
00:35:35,410 --> 00:35:39,190
easy for something like a document

864
00:35:37,210 --> 00:35:41,080
format that should never ever you know

865
00:35:39,190 --> 00:35:42,820
for some use cases should never ever be

866
00:35:41,080 --> 00:35:45,480
communicating with the Internet

867
00:35:42,820 --> 00:35:47,920
it's harder for something like m3u where

868
00:35:45,480 --> 00:35:49,810
you know you download some playlists but

869
00:35:47,920 --> 00:35:52,060
maybe you listen to internet radio and

870
00:35:49,810 --> 00:35:53,710
you can't really make those arguments

871
00:35:52,060 --> 00:35:59,440
ask rules so you're gonna have to do it

872
00:35:53,710 --> 00:36:00,910
on a more granular basis so good a few

873
00:35:59,440 --> 00:36:02,050
other possible mitigations that we

874
00:36:00,910 --> 00:36:07,660
considered the most obvious ones

875
00:36:02,050 --> 00:36:10,990
warnings we already know we know that

876
00:36:07,660 --> 00:36:12,609
you deserve anyways we know that users

877
00:36:10,990 --> 00:36:14,439
are very bad about just clicking us on

878
00:36:12,610 --> 00:36:16,930
any warning dialog box or whatever gets

879
00:36:14,440 --> 00:36:19,600
into the content the fastest so warnings

880
00:36:16,930 --> 00:36:21,310
might help for a properly educated and

881
00:36:19,600 --> 00:36:24,790
trained user but they're not a general

882
00:36:21,310 --> 00:36:27,759
panacea solution finally we considered

883
00:36:24,790 --> 00:36:29,560
developing a tool that you can use it as

884
00:36:27,760 --> 00:36:31,840
sort of a network local sandbox for

885
00:36:29,560 --> 00:36:34,270
opening these files basically if you're

886
00:36:31,840 --> 00:36:35,500
familiar with how proxy chains works it

887
00:36:34,270 --> 00:36:37,000
basically looks the networking

888
00:36:35,500 --> 00:36:39,190
functionality for application and

889
00:36:37,000 --> 00:36:41,110
direction all through proxy we could do

890
00:36:39,190 --> 00:36:42,220
something similar to that by looking all

891
00:36:41,110 --> 00:36:44,050
of the network functionality for an

892
00:36:42,220 --> 00:36:46,299
application and just dropping it like

893
00:36:44,050 --> 00:36:47,650
PDF Reader you should probably not have

894
00:36:46,300 --> 00:36:49,090
network functionality for the vast

895
00:36:47,650 --> 00:36:51,640
majority of cases so we're just going to

896
00:36:49,090 --> 00:36:53,320
kill it in addition to stopping these

897
00:36:51,640 --> 00:36:55,960
tracking attacks it could also be used

898
00:36:53,320 --> 00:36:57,730
to notify you of bugs and files so you

899
00:36:55,960 --> 00:36:59,260
can do one set beyond and say oh wow

900
00:36:57,730 --> 00:37:00,580
this file has a bug in it I should

901
00:36:59,260 --> 00:37:03,430
probably tell everyone that might be

902
00:37:00,580 --> 00:37:05,290
interested in using this file um finally

903
00:37:03,430 --> 00:37:06,549
egress filtering um

904
00:37:05,290 --> 00:37:08,170
realistically your corporate network

905
00:37:06,550 --> 00:37:10,330
should already be doing this and you

906
00:37:08,170 --> 00:37:11,300
should not be allowing Intel and entrap

907
00:37:10,330 --> 00:37:13,370
pardon you should not be

908
00:37:11,300 --> 00:37:14,920
Espie traffic outbound right you should

909
00:37:13,370 --> 00:37:17,450
be blocking that at the perimeter

910
00:37:14,920 --> 00:37:19,130
unfortunately there are still some

911
00:37:17,450 --> 00:37:20,419
concerns around this it might stop some

912
00:37:19,130 --> 00:37:24,050
legitimate conventions there might be

913
00:37:20,420 --> 00:37:25,610
legitimate use cases for connecting SMB

914
00:37:24,050 --> 00:37:27,830
traffic outbound but in some enterprise

915
00:37:25,610 --> 00:37:29,240
scenarios additionally it's not going to

916
00:37:27,830 --> 00:37:30,380
stop if the attacker already has some

917
00:37:29,240 --> 00:37:32,299
sort of foothold on your internal

918
00:37:30,380 --> 00:37:33,530
network you know you can't just assume

919
00:37:32,300 --> 00:37:35,540
that they're not going to be inside your

920
00:37:33,530 --> 00:37:39,650
perimeter so you'll know this is a good

921
00:37:35,540 --> 00:37:41,900
mitigation but it's not an incident so I

922
00:37:39,650 --> 00:37:44,480
think we have about one minute two

923
00:37:41,900 --> 00:37:47,590
minutes may be left for questions do we

924
00:37:44,480 --> 00:37:47,590
have any questions in the audience

925
00:37:52,579 --> 00:37:57,429
and was like that you did a really good

926
00:37:54,380 --> 00:37:57,429
job a really bad job

927
00:38:05,400 --> 00:38:10,120
in other words you know

928
00:38:07,280 --> 00:38:10,120
my process

929
00:38:14,959 --> 00:38:21,479
so for some formats it's going to work

930
00:38:17,789 --> 00:38:23,400
the same everywhere so for instance m3u

931
00:38:21,479 --> 00:38:25,399
it's going to work because that's a

932
00:38:23,400 --> 00:38:27,509
necessary part of the file for not

933
00:38:25,400 --> 00:38:31,259
thinking through PDF good work as well

934
00:38:27,509 --> 00:38:34,009
yes you know as long as you're using a

935
00:38:31,259 --> 00:38:36,989
PDF reader that supports those features

936
00:38:34,009 --> 00:38:38,819
we found that the support for the remote

937
00:38:36,989 --> 00:38:43,440
image thing for instance is not very

938
00:38:38,819 --> 00:38:44,880
good the work with JavaScript is a

939
00:38:43,440 --> 00:38:50,160
little bit better that's still not

940
00:38:44,880 --> 00:38:52,769
wonderful mostly we tested windows-based

941
00:38:50,160 --> 00:38:53,940
file parsers just because the security

942
00:38:52,769 --> 00:38:57,118
applications were particularly

943
00:38:53,940 --> 00:39:01,019
interesting but I can tell you that a

944
00:38:57,119 --> 00:39:04,609
lot of these will work on Linux and OS X

945
00:39:01,019 --> 00:39:04,609
systems as well

946
00:39:04,800 --> 00:39:09,570
you guys try doing this like SMB

947
00:39:07,640 --> 00:39:12,390
stealing little separate on different

948
00:39:09,570 --> 00:39:14,460
ports or it's only work on 485 so that's

949
00:39:12,390 --> 00:39:16,430
actually very interesting and it's a

950
00:39:14,460 --> 00:39:19,080
narrative research that we didn't really

951
00:39:16,430 --> 00:39:21,149
we didn't get as far as I'd like to but

952
00:39:19,080 --> 00:39:22,920
basically there's an interesting sort of

953
00:39:21,150 --> 00:39:25,230
me wants to how windows negotiates these

954
00:39:22,920 --> 00:39:27,630
SMB functions and will try to connect

955
00:39:25,230 --> 00:39:30,690
over port on four or five I think first

956
00:39:27,630 --> 00:39:33,230
and if that fails after I think like 10

957
00:39:30,690 --> 00:39:35,850
seconds it will try to fall back to web

958
00:39:33,230 --> 00:39:36,660
assuming that the remote server OS I'm

959
00:39:35,850 --> 00:39:39,450
Annessa be server

960
00:39:36,660 --> 00:39:41,160
it must be a WebDAV server we haven't

961
00:39:39,450 --> 00:39:43,890
yet gotten a working person concept that

962
00:39:41,160 --> 00:39:46,440
will steal the authentication principles

963
00:39:43,890 --> 00:39:48,720
via web but if we can get that nailed

964
00:39:46,440 --> 00:39:50,910
down and I think we're probably gonna be

965
00:39:48,720 --> 00:39:52,890
taking another look at that back to the

966
00:39:50,910 --> 00:39:54,810
steps that could really expand the

967
00:39:52,890 --> 00:39:56,970
impact of this research because it's no

968
00:39:54,810 --> 00:39:59,130
longer a port 4 4 5 issue it's a port 80

969
00:39:56,970 --> 00:40:01,080
issue and if your egress firewall

970
00:39:59,130 --> 00:40:02,550
blocking port 80 then you're you know

971
00:40:01,080 --> 00:40:03,870
you're on a very secure network that

972
00:40:02,550 --> 00:40:11,640
you're probably not the subject at this

973
00:40:03,870 --> 00:40:16,259
attack anyway so one interesting one

974
00:40:11,640 --> 00:40:18,089
interesting thing you can so windows

975
00:40:16,260 --> 00:40:21,540
will automatically open gate for SMB

976
00:40:18,090 --> 00:40:24,270
just wherever it is right by default for

977
00:40:21,540 --> 00:40:28,390
web traffic if it requests sent a level

978
00:40:24,270 --> 00:40:31,569
authentication yeah and only

979
00:40:28,390 --> 00:40:33,308
does not have a dot in it or if it's an

980
00:40:31,569 --> 00:40:37,538
IP address if it's if it's not within

981
00:40:33,309 --> 00:40:41,170
the you know reserved private IP ranges

982
00:40:37,539 --> 00:40:43,000
it will if it's within like private IP

983
00:40:41,170 --> 00:40:44,590
ranges or you know on the local network

984
00:40:43,000 --> 00:40:46,960
by domain

985
00:40:44,590 --> 00:40:48,430
that doesn't have a dot in it it will

986
00:40:46,960 --> 00:40:53,050
automatically do that authentication

987
00:40:48,430 --> 00:40:54,879
even for what they've done but yeah

988
00:40:53,050 --> 00:40:58,240
you're right that new dress code that

989
00:40:54,880 --> 00:41:04,270
ingress firewalls usually prevent

990
00:40:58,240 --> 00:41:06,399
four-45 if they're in place so do me

991
00:41:04,270 --> 00:41:08,200
grace filtering whole new that run that

992
00:41:06,400 --> 00:41:11,610
birds please do it yes

993
00:41:08,200 --> 00:41:11,609
any other questions

994
00:41:14,510 --> 00:41:18,610
alright I think that's it thanks very

995
00:41:16,490 --> 00:41:18,609
much

