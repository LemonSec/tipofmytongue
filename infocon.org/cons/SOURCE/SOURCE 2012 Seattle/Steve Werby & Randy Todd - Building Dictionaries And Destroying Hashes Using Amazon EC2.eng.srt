1
00:00:06,580 --> 00:00:13,400
chorong on Steve were me and this is

2
00:00:08,809 --> 00:00:15,049
Randy Todd in the description for our

3
00:00:13,400 --> 00:00:17,180
presentation had said that I work for

4
00:00:15,049 --> 00:00:18,740
the University of Texas San Antonio I

5
00:00:17,180 --> 00:00:21,170
did at the time we submitted the

6
00:00:18,740 --> 00:00:24,290
presentation I'm now an independent

7
00:00:21,170 --> 00:00:25,160
consultant Randy still works for UTSA to

8
00:00:24,290 --> 00:00:27,380
give you a little bit about my

9
00:00:25,160 --> 00:00:28,340
background for the last six years I've

10
00:00:27,380 --> 00:00:29,950
been a chief information security

11
00:00:28,340 --> 00:00:32,418
officer at three different organizations

12
00:00:29,950 --> 00:00:37,219
before that my roles were hands-on

13
00:00:32,418 --> 00:00:40,038
technical I have a pretty extensive web

14
00:00:37,219 --> 00:00:41,600
development background I joined security

15
00:00:40,039 --> 00:00:44,899
a little over three years ago so

16
00:00:41,600 --> 00:00:46,729
enjoying being in security and we have a

17
00:00:44,899 --> 00:00:49,249
small group here today feel free to ask

18
00:00:46,729 --> 00:00:51,440
questions or contribute to the

19
00:00:49,249 --> 00:00:52,999
discussion we want to hear about your

20
00:00:51,440 --> 00:00:55,339
experience with password cracking and

21
00:00:52,999 --> 00:00:56,539
other topics we're going to discuss feel

22
00:00:55,339 --> 00:00:58,159
free to ask questions during the

23
00:00:56,539 --> 00:01:01,940
presentation we also allow for some time

24
00:00:58,159 --> 00:01:03,019
at the end there's a few things we're

25
00:01:01,940 --> 00:01:04,970
hoping you're going to take away from

26
00:01:03,019 --> 00:01:08,090
this presentation we're gonna be talking

27
00:01:04,970 --> 00:01:10,670
about Amazon's elastic computing cloud

28
00:01:08,090 --> 00:01:12,649
service and talk to you about what value

29
00:01:10,670 --> 00:01:14,210
provides can provide to you we're gonna

30
00:01:12,649 --> 00:01:16,670
discuss some methodologies for cracking

31
00:01:14,210 --> 00:01:18,469
passwords we're gonna give you some

32
00:01:16,670 --> 00:01:21,049
thought about different options in terms

33
00:01:18,469 --> 00:01:24,020
of building hardware and systems leasing

34
00:01:21,049 --> 00:01:25,969
it or buying systems and when those

35
00:01:24,020 --> 00:01:27,530
types of decisions need to be made and

36
00:01:25,969 --> 00:01:29,329
we're going to talk a little bit about

37
00:01:27,530 --> 00:01:31,729
the difference about between passwords

38
00:01:29,329 --> 00:01:33,589
and passphrases and how you can use

39
00:01:31,729 --> 00:01:36,579
dumps that are publicly available to

40
00:01:33,590 --> 00:01:38,869
benefit your organization's security

41
00:01:36,579 --> 00:01:40,639
we're gonna be looking at some password

42
00:01:38,869 --> 00:01:42,380
dumps by the way that involve record

43
00:01:40,640 --> 00:01:45,170
sets are in the hundreds of thousands

44
00:01:42,380 --> 00:01:46,640
and millions of Records does anyone here

45
00:01:45,170 --> 00:01:51,590
actually work for an organization that

46
00:01:46,640 --> 00:01:54,530
has a user base that's that big ok so

47
00:01:51,590 --> 00:01:55,609
more than a billion users ok about the

48
00:01:54,530 --> 00:01:59,140
rest of you how big your your

49
00:01:55,609 --> 00:01:59,140
organization's in terms of user base

50
00:02:00,950 --> 00:02:04,909
okay what gives us a good idea

51
00:02:06,600 --> 00:02:13,260
this is the agenda we're going to go

52
00:02:08,220 --> 00:02:16,560
through who doesn't know what hashes are

53
00:02:13,260 --> 00:02:18,690
does everyone know what a hash is okay

54
00:02:16,560 --> 00:02:21,420
we won't spend any time talking about

55
00:02:18,690 --> 00:02:23,190
this the password breaches that we're

56
00:02:21,420 --> 00:02:25,679
gonna be talking about all involved

57
00:02:23,190 --> 00:02:28,920
unsalted hashes which are much easier to

58
00:02:25,680 --> 00:02:31,650
crack and there's a number of hashing

59
00:02:28,920 --> 00:02:34,530
algorithms that are used by various

60
00:02:31,650 --> 00:02:35,700
organizations like md5 and sha-1 and if

61
00:02:34,530 --> 00:02:37,650
you have any questions about those we

62
00:02:35,700 --> 00:02:41,790
can talk about them but in general

63
00:02:37,650 --> 00:02:44,750
they're not very strong okay

64
00:02:41,790 --> 00:02:48,179
these are some of the leaks that that we

65
00:02:44,750 --> 00:02:51,120
analyzed if we're gonna be mainly

66
00:02:48,180 --> 00:02:52,500
looking at e harmony but I do want to

67
00:02:51,120 --> 00:02:55,020
point out and I think I talked about

68
00:02:52,500 --> 00:02:58,739
this later but a lot of times you can

69
00:02:55,020 --> 00:03:00,720
use previous leaks or passwords that

70
00:02:58,739 --> 00:03:03,709
you've cracked from previous leaks and

71
00:03:00,720 --> 00:03:07,500
in dictionary files for we're cracking

72
00:03:03,709 --> 00:03:10,830
leaks that come later on as you can see

73
00:03:07,500 --> 00:03:17,730
these are all unsalted the Army had the

74
00:03:10,830 --> 00:03:21,049
md5 linked in sha-1 we used rocky also

75
00:03:17,730 --> 00:03:25,010
as a dictionary it was a very extensive

76
00:03:21,049 --> 00:03:25,010
leak the largest one

77
00:03:30,890 --> 00:03:37,250
you can do online or offline cracking

78
00:03:33,610 --> 00:03:40,840
and then they told it we used is hash

79
00:03:37,250 --> 00:03:43,910
cat which provides for dictionary

80
00:03:40,840 --> 00:03:47,120
attacks brute force spring computation

81
00:03:43,910 --> 00:03:50,720
they also have permutation as well when

82
00:03:47,120 --> 00:03:53,769
you use or talk a little bit more later

83
00:03:50,720 --> 00:03:57,680
but when you use can use hash cat Plus

84
00:03:53,769 --> 00:03:59,930
which has the CUDA support so that that

85
00:03:57,680 --> 00:04:03,860
there's some other options that you get

86
00:03:59,930 --> 00:04:05,630
with the with that the big focus here is

87
00:04:03,860 --> 00:04:07,910
that we're only doing offline cracking

88
00:04:05,630 --> 00:04:10,609
so we're looking at hash files we're not

89
00:04:07,910 --> 00:04:14,630
performing any attacks against systems

90
00:04:10,610 --> 00:04:15,980
directly in terms of the speed of this

91
00:04:14,630 --> 00:04:17,659
various types of attacks that the

92
00:04:15,980 --> 00:04:20,539
slowest methodology is going to be using

93
00:04:17,660 --> 00:04:23,300
the CPU your processor within a computer

94
00:04:20,540 --> 00:04:25,880
server a GPU the graphical processing is

95
00:04:23,300 --> 00:04:27,470
the processing unit is optimized for the

96
00:04:25,880 --> 00:04:30,260
kind of calculations are done in

97
00:04:27,470 --> 00:04:32,419
password attacks and so it's much faster

98
00:04:30,260 --> 00:04:35,330
a rainbow table which is a

99
00:04:32,419 --> 00:04:38,150
pre-computation essentially a plain text

100
00:04:35,330 --> 00:04:41,359
file and a plaintext ring with its

101
00:04:38,150 --> 00:04:43,219
hashed output and a lookup is performed

102
00:04:41,360 --> 00:04:45,500
is much faster than any of these options

103
00:04:43,220 --> 00:04:48,169
however it becomes computationally

104
00:04:45,500 --> 00:04:50,690
infeasible based on the storage if the

105
00:04:48,169 --> 00:04:52,340
key space is extremely large or if

106
00:04:50,690 --> 00:04:53,900
solving is used so we're not going to

107
00:04:52,340 --> 00:04:55,400
focus at all on rainbow tables today

108
00:04:53,900 --> 00:04:57,760
there's lots of information on the

109
00:04:55,400 --> 00:05:00,380
internet about rainbows - rainbow tables

110
00:04:57,760 --> 00:05:02,690
so why should why should you care about

111
00:05:00,380 --> 00:05:04,400
this obviously it's interesting and fun

112
00:05:02,690 --> 00:05:05,990
to look at a password leak that's

113
00:05:04,400 --> 00:05:08,000
available on the Internet and see how

114
00:05:05,990 --> 00:05:09,530
many passwords you can crack that really

115
00:05:08,000 --> 00:05:11,120
doesn't benefit your organization a

116
00:05:09,530 --> 00:05:13,010
whole bunch but there is some benefit

117
00:05:11,120 --> 00:05:15,050
and Randi will talk about that but

118
00:05:13,010 --> 00:05:17,510
internally you can use these types of

119
00:05:15,050 --> 00:05:20,150
processes to form attacks against your

120
00:05:17,510 --> 00:05:21,500
own systems to be proactive in terms of

121
00:05:20,150 --> 00:05:23,419
the security so you can determine

122
00:05:21,500 --> 00:05:25,400
whether the passwords and using your

123
00:05:23,419 --> 00:05:26,990
organization's are strong what you

124
00:05:25,400 --> 00:05:29,179
believe that systems been compromised

125
00:05:26,990 --> 00:05:31,010
you can determine whether it's important

126
00:05:29,180 --> 00:05:33,200
notify internal users that they need to

127
00:05:31,010 --> 00:05:35,450
change their passwords you may have a

128
00:05:33,200 --> 00:05:37,300
situation as well where somebody has

129
00:05:35,450 --> 00:05:39,128
left your organization

130
00:05:37,300 --> 00:05:40,720
and when they do so if somebody leaves

131
00:05:39,129 --> 00:05:41,860
your organization you gain access to

132
00:05:40,720 --> 00:05:47,530
their account what are you going to do

133
00:05:41,860 --> 00:05:49,900
typically so somebody reports to you and

134
00:05:47,530 --> 00:05:51,460
they've left your organization you need

135
00:05:49,900 --> 00:05:53,409
to gain access to their account what

136
00:05:51,460 --> 00:05:56,049
would you typically do does anyone have

137
00:05:53,409 --> 00:05:58,360
any thoughts on that you'd reset their

138
00:05:56,050 --> 00:05:59,770
password but let's say that you believe

139
00:05:58,360 --> 00:06:01,479
they use the same password on a

140
00:05:59,770 --> 00:06:04,270
third-party site but you don't have

141
00:06:01,479 --> 00:06:06,430
access to you could crack the hash of

142
00:06:04,270 --> 00:06:07,690
their password which internally you

143
00:06:06,430 --> 00:06:09,099
wouldn't really care about because you

144
00:06:07,690 --> 00:06:10,509
could reset the password but now you

145
00:06:09,099 --> 00:06:12,699
would be able to acquire the password

146
00:06:10,509 --> 00:06:16,539
that they may use an external site like

147
00:06:12,699 --> 00:06:18,159
Facebook or Twitter or salesforce.com or

148
00:06:16,539 --> 00:06:20,740
somewhere else where you actually need

149
00:06:18,159 --> 00:06:21,729
to gain access so that that's one reason

150
00:06:20,740 --> 00:06:23,710
you might do that

151
00:06:21,729 --> 00:06:25,090
it's also good to be able to strengthen

152
00:06:23,710 --> 00:06:26,258
your arguments when you're talking to

153
00:06:25,090 --> 00:06:28,840
others there's a lot of folks

154
00:06:26,259 --> 00:06:30,819
potentially CIOs or people that are not

155
00:06:28,840 --> 00:06:33,219
as technical that believe it's extremely

156
00:06:30,819 --> 00:06:34,719
difficult to crack passwords using these

157
00:06:33,219 --> 00:06:37,300
tools you can demonstrate to them how

158
00:06:34,719 --> 00:06:39,310
easy and time efficient that it is to do

159
00:06:37,300 --> 00:06:41,440
that and you can leverage that to be

160
00:06:39,310 --> 00:06:43,750
able to pursue things like changing your

161
00:06:41,440 --> 00:06:46,900
password policies moving to different

162
00:06:43,750 --> 00:06:49,210
algorithms for example from md5 to be

163
00:06:46,900 --> 00:06:51,039
crimped or to pursue things like

164
00:06:49,210 --> 00:06:53,080
two-factor authentication which provides

165
00:06:51,039 --> 00:06:57,659
an additional layer of authentication

166
00:06:53,080 --> 00:06:57,659
control yes

167
00:06:58,990 --> 00:07:04,830
cracking someone's password and then use

168
00:07:01,240 --> 00:07:04,830
me to log into their Facebook

169
00:07:05,060 --> 00:07:09,560
well in my experience pretty much any

170
00:07:07,490 --> 00:07:11,120
time I talk to a lawyer that works at

171
00:07:09,560 --> 00:07:12,950
the same company as me their answer is

172
00:07:11,120 --> 00:07:15,140
no for pretty much anything I ask them

173
00:07:12,950 --> 00:07:17,030
no matter what it is so the trick is to

174
00:07:15,140 --> 00:07:18,409
word the question the opposite of the

175
00:07:17,030 --> 00:07:21,200
way you would normally ask it so when

176
00:07:18,410 --> 00:07:22,760
they say no they really mean yes I think

177
00:07:21,200 --> 00:07:24,530
it's really gonna come down to you in

178
00:07:22,760 --> 00:07:26,120
that case I talked to lawyers it's

179
00:07:24,530 --> 00:07:28,309
whether that account belongs to the

180
00:07:26,120 --> 00:07:30,860
organization or it actually belongs to

181
00:07:28,310 --> 00:07:33,530
the user yeah well we had a we had an

182
00:07:30,860 --> 00:07:36,320
instance where someone left our organ my

183
00:07:33,530 --> 00:07:37,909
organization now but uh and they they

184
00:07:36,320 --> 00:07:41,960
had an account that was set up to use

185
00:07:37,910 --> 00:07:43,760
for our organization and the the people

186
00:07:41,960 --> 00:07:45,590
that were there after he left you know

187
00:07:43,760 --> 00:07:46,849
they contacted us and said we can't get

188
00:07:45,590 --> 00:07:49,190
into this account we need to get you

189
00:07:46,850 --> 00:07:51,620
know it's our account so that that's a

190
00:07:49,190 --> 00:07:54,080
good example of where if the account

191
00:07:51,620 --> 00:07:56,960
really belongs to us not I mean it was

192
00:07:54,080 --> 00:07:58,190
named according to us I find this comes

193
00:07:56,960 --> 00:08:00,979
up a lot because it's one of those

194
00:07:58,190 --> 00:08:03,440
things as cloud and third-party services

195
00:08:00,980 --> 00:08:04,940
explode people organizations are not

196
00:08:03,440 --> 00:08:07,070
doing a good job looking at how they're

197
00:08:04,940 --> 00:08:09,200
gonna maintain accesses accounts that

198
00:08:07,070 --> 00:08:11,210
their users and employers are using on

199
00:08:09,200 --> 00:08:13,280
behalf of their organizations so I

200
00:08:11,210 --> 00:08:14,690
expect this people were comment I'm not

201
00:08:13,280 --> 00:08:16,340
suggesting that what you want to do is

202
00:08:14,690 --> 00:08:18,860
crack passwords the better way would be

203
00:08:16,340 --> 00:08:20,450
to escrow the passwords and have some

204
00:08:18,860 --> 00:08:22,730
legal protections so you can gain access

205
00:08:20,450 --> 00:08:24,409
to those systems when you need to and we

206
00:08:22,730 --> 00:08:26,390
didn't we didn't crack his password and

207
00:08:24,410 --> 00:08:31,420
use it everything but but it just

208
00:08:26,390 --> 00:08:34,280
brought up this idea okay with the

209
00:08:31,420 --> 00:08:37,150
actually this came up with the do name

210
00:08:34,280 --> 00:08:42,939
y'all remember there was a yahoo video

211
00:08:37,150 --> 00:08:46,250
leak that I actually got that leaked and

212
00:08:42,940 --> 00:08:49,310
used it to basically just go through and

213
00:08:46,250 --> 00:08:51,950
look for my users so this is kind of

214
00:08:49,310 --> 00:08:53,660
outside of cracking but I just thought

215
00:08:51,950 --> 00:08:55,640
it'd be good to mention that you might

216
00:08:53,660 --> 00:08:58,100
it might be a good idea to kind of keep

217
00:08:55,640 --> 00:09:00,560
an eye out for what leaks are out there

218
00:08:58,100 --> 00:09:01,520
and go through them and look for your

219
00:09:00,560 --> 00:09:03,589
users because they're obviously

220
00:09:01,520 --> 00:09:05,329
compromised there's the you know they

221
00:09:03,590 --> 00:09:07,340
need to change their passwords a lot

222
00:09:05,330 --> 00:09:09,800
like Steve said a lot of times people

223
00:09:07,340 --> 00:09:12,860
use the same passwords as they do on

224
00:09:09,800 --> 00:09:13,920
other places so I think it's just a good

225
00:09:12,860 --> 00:09:17,940
idea to

226
00:09:13,920 --> 00:09:23,160
inform your users of their accounts

227
00:09:17,940 --> 00:09:25,260
being exposed and Steve kind of talked

228
00:09:23,160 --> 00:09:26,910
about internal dumps you can dump your

229
00:09:25,260 --> 00:09:29,550
organization's hashes and do passwords

230
00:09:26,910 --> 00:09:30,990
audits on it and let me get a show of

231
00:09:29,550 --> 00:09:35,819
hands really quick or any of y'all in

232
00:09:30,990 --> 00:09:38,310
higher ed okay um you know corporate her

233
00:09:35,820 --> 00:09:40,620
government okay i just corporate law

234
00:09:38,310 --> 00:09:43,619
corporate okay we have some different

235
00:09:40,620 --> 00:09:46,170
challenges in higher ed so you know such

236
00:09:43,620 --> 00:09:48,000
as changing password policies and having

237
00:09:46,170 --> 00:09:50,849
like CIOs that don't understand how easy

238
00:09:48,000 --> 00:09:52,260
it is to crack passwords so just trying

239
00:09:50,850 --> 00:09:58,889
to get an idea of what what our audience

240
00:09:52,260 --> 00:10:01,920
is so what I did is with the Yahoo video

241
00:09:58,889 --> 00:10:06,060
I just went through and I sent an email

242
00:10:01,920 --> 00:10:09,779
and in in our organization we actually

243
00:10:06,060 --> 00:10:12,810
have 18 we're part of UT system and

244
00:10:09,779 --> 00:10:15,750
there's actually I'm not sure exactly

245
00:10:12,810 --> 00:10:17,579
what it is 16 or 17 different

246
00:10:15,750 --> 00:10:19,560
universities that are part or components

247
00:10:17,579 --> 00:10:20,939
that are part of the system so I

248
00:10:19,560 --> 00:10:23,849
actually went through and I looked for

249
00:10:20,940 --> 00:10:26,519
other other components as well kind of a

250
00:10:23,850 --> 00:10:28,980
just a good guy thing to do and I

251
00:10:26,519 --> 00:10:30,990
informed all of them as well and I

252
00:10:28,980 --> 00:10:35,010
included you know some information about

253
00:10:30,990 --> 00:10:37,949
the incident a brief very brief

254
00:10:35,010 --> 00:10:40,410
explanation of hash cracking and how to

255
00:10:37,949 --> 00:10:42,479
create complex passwords whether or not

256
00:10:40,410 --> 00:10:45,390
to include the password that's kind of

257
00:10:42,480 --> 00:10:48,720
up to you and it may be against policy

258
00:10:45,390 --> 00:10:52,380
to even send it through email or even

259
00:10:48,720 --> 00:10:54,240
provide it at all so just some things to

260
00:10:52,380 --> 00:10:56,689
think about is when you're informing

261
00:10:54,240 --> 00:10:56,690
your users

262
00:10:58,560 --> 00:11:12,329
and so a huge case for for cracking

263
00:11:04,410 --> 00:11:15,089
passwords as where you you you want to

264
00:11:12,330 --> 00:11:18,330
you want to crack them and and see like

265
00:11:15,090 --> 00:11:19,410
how how complex they are or what kind of

266
00:11:18,330 --> 00:11:22,890
passwords your users and your

267
00:11:19,410 --> 00:11:24,480
organization are using when you're when

268
00:11:22,890 --> 00:11:27,530
you're doing this you want to include

269
00:11:24,480 --> 00:11:29,820
the time to crack and then at the end

270
00:11:27,530 --> 00:11:32,670
and this is another kind of example

271
00:11:29,820 --> 00:11:34,650
where you would use the analysis of of

272
00:11:32,670 --> 00:11:35,329
the cracking that you did to provide to

273
00:11:34,650 --> 00:11:39,530
the CIO

274
00:11:35,330 --> 00:11:43,050
as far as what what the password makeup

275
00:11:39,530 --> 00:11:44,370
is so you'd want to end another thing

276
00:11:43,050 --> 00:11:47,310
you can do is save the data for future

277
00:11:44,370 --> 00:11:53,880
presentations there's a good pastor

278
00:11:47,310 --> 00:11:55,500
analysis tool called people that we we

279
00:11:53,880 --> 00:11:57,300
actually did use it but we didn't

280
00:11:55,500 --> 00:12:00,270
include it in here it's just kind of

281
00:11:57,300 --> 00:12:04,290
long but it's a really good analysis

282
00:12:00,270 --> 00:12:05,790
tool should you choose to do this you

283
00:12:04,290 --> 00:12:07,610
can also use like I said you can save

284
00:12:05,790 --> 00:12:10,020
the data for future presentations

285
00:12:07,610 --> 00:12:12,030
internal external awareness campaign

286
00:12:10,020 --> 00:12:15,990
campaigns like cybersecurity awareness

287
00:12:12,030 --> 00:12:17,510
month there any of y'all do that no that

288
00:12:15,990 --> 00:12:21,930
doesn't exist in the corporate world

289
00:12:17,510 --> 00:12:23,819
okay we do we try to and then as well

290
00:12:21,930 --> 00:12:26,670
you can create dictionaries from your

291
00:12:23,820 --> 00:12:30,120
previously crack passwords like I said

292
00:12:26,670 --> 00:12:32,339
Rock you a really really large one that

293
00:12:30,120 --> 00:12:34,350
was that has been really beneficial as

294
00:12:32,339 --> 00:12:36,100
far as being used as a dictionary later

295
00:12:34,350 --> 00:12:39,289
on

296
00:12:36,100 --> 00:12:39,289
[Music]

297
00:12:39,780 --> 00:12:43,860
so to create the dump of your password

298
00:12:41,730 --> 00:12:46,440
hashes you can use a tool like PW dump

299
00:12:43,860 --> 00:12:48,630
or FG dump you just want to make sure

300
00:12:46,440 --> 00:12:50,550
that you secure the dump store in

301
00:12:48,630 --> 00:12:53,760
encrypted drive behind line lock and key

302
00:12:50,550 --> 00:12:58,530
and when it's transmitted you know an

303
00:12:53,760 --> 00:13:01,980
internal system some cracking tools that

304
00:12:58,530 --> 00:13:05,850
you can use a loft crack that actually

305
00:13:01,980 --> 00:13:08,130
will do the pull the dump for you we

306
00:13:05,850 --> 00:13:09,920
didn't use that we we use hash Calix

307
00:13:08,130 --> 00:13:12,450
said some other tools John the Ripper

308
00:13:09,920 --> 00:13:16,140
how many of y'all have not used John the

309
00:13:12,450 --> 00:13:17,940
river actually I have okay great and

310
00:13:16,140 --> 00:13:19,560
then crypto phase multi for all that

311
00:13:17,940 --> 00:13:21,720
Steve talked about yeah so the three

312
00:13:19,560 --> 00:13:23,489
tools that we really worked with during

313
00:13:21,720 --> 00:13:26,760
our research were a hash cat hash cap

314
00:13:23,490 --> 00:13:29,370
plus and hash cat light hash cat is

315
00:13:26,760 --> 00:13:31,830
designed to run on a CPU Plus and light

316
00:13:29,370 --> 00:13:33,510
are designed to run on a GPU plus is

317
00:13:31,830 --> 00:13:36,120
designed to work with an input file

318
00:13:33,510 --> 00:13:37,980
consists of many hashes light is

319
00:13:36,120 --> 00:13:40,950
optimized to work with an input file

320
00:13:37,980 --> 00:13:43,980
consists of a single hash so it's much

321
00:13:40,950 --> 00:13:45,480
much faster but in most experience

322
00:13:43,980 --> 00:13:49,200
you're going to be running attacks

323
00:13:45,480 --> 00:13:50,850
against a multi hash password file who's

324
00:13:49,200 --> 00:13:54,540
actually used the plus and light

325
00:13:50,850 --> 00:13:56,160
versions that run on a GPU okay so a few

326
00:13:54,540 --> 00:13:58,790
of you have that's great does anyone use

327
00:13:56,160 --> 00:14:02,880
the crypto Hayes multi for sir

328
00:13:58,790 --> 00:14:05,040
okay good yeah so the crypto Hayes

329
00:14:02,880 --> 00:14:07,110
multi-force are also runs on a GPU and

330
00:14:05,040 --> 00:14:14,900
allows you to do distributed password

331
00:14:07,110 --> 00:14:19,029
cracking yes we are yeah great question

332
00:14:14,900 --> 00:14:22,160
okay so I mean you have some options

333
00:14:19,029 --> 00:14:23,960
brandy ransom these tools on a computer

334
00:14:22,160 --> 00:14:26,510
he had which doesn't have a GPU that can

335
00:14:23,960 --> 00:14:28,040
be utilized you can purchase your own

336
00:14:26,510 --> 00:14:30,350
hardware and build your own systems

337
00:14:28,040 --> 00:14:34,160
throw a bunch of GPUs in it and have a

338
00:14:30,350 --> 00:14:36,350
box is available 24/7 365 you can build

339
00:14:34,160 --> 00:14:39,020
some servers in the cloud using Amazon's

340
00:14:36,350 --> 00:14:41,600
ec2 service or other provider services

341
00:14:39,020 --> 00:14:42,560
can you think of the pros and cons that

342
00:14:41,600 --> 00:14:44,390
exists between those different

343
00:14:42,560 --> 00:14:47,209
alternatives does any of it don't have

344
00:14:44,390 --> 00:14:49,490
anything they want to throw out is

345
00:14:47,210 --> 00:14:52,540
anyone has anyone built their own box as

346
00:14:49,490 --> 00:14:52,540
multiple GPUs in it

347
00:15:04,240 --> 00:15:09,000
closet in your house you got a fan going

348
00:15:07,060 --> 00:15:11,099
on and when you're tired

349
00:15:09,000 --> 00:15:12,330
as good point so electric electrical

350
00:15:11,100 --> 00:15:15,770
cost and having an electrical

351
00:15:12,330 --> 00:15:15,770
infrastructure important yes

352
00:15:18,710 --> 00:15:25,430
okay you know that from an experience or

353
00:15:22,120 --> 00:15:27,080
okay okay some people some people feel

354
00:15:25,430 --> 00:15:28,370
that's not true we talk to a lot of

355
00:15:27,080 --> 00:15:31,220
people believe that it's a better

356
00:15:28,370 --> 00:15:33,920
solution to build your own box one of

357
00:15:31,220 --> 00:15:35,630
the disadvantages to that is in my

358
00:15:33,920 --> 00:15:37,760
opinion we've already talked about a few

359
00:15:35,630 --> 00:15:39,950
but unless you're going to utilize it on

360
00:15:37,760 --> 00:15:43,100
a regular basis it's not particularly

361
00:15:39,950 --> 00:15:44,870
economic the hardware may break the

362
00:15:43,100 --> 00:15:46,790
hardware may need to be replaced and

363
00:15:44,870 --> 00:15:54,170
you're responsible for all that and you

364
00:15:46,790 --> 00:15:57,069
void your warranty on something anyone

365
00:15:54,170 --> 00:15:57,069
know what this vehicle is

366
00:15:58,080 --> 00:16:03,330
very good so it's the the world's

367
00:15:59,910 --> 00:16:04,500
fastest production car wasn't sure if

368
00:16:03,330 --> 00:16:08,550
anyone would know that what that was

369
00:16:04,500 --> 00:16:09,990
it's a Bugatti ok so here's some of the

370
00:16:08,550 --> 00:16:12,449
reasons we talked about there's also a

371
00:16:09,990 --> 00:16:14,040
scalability factor we're talking on talk

372
00:16:12,450 --> 00:16:15,990
about different constraints later on in

373
00:16:14,040 --> 00:16:17,519
the presentation but these are some of

374
00:16:15,990 --> 00:16:20,010
the factors you run into when you're

375
00:16:17,519 --> 00:16:22,620
building your own system there's also a

376
00:16:20,010 --> 00:16:24,720
time component most people don't have

377
00:16:22,620 --> 00:16:27,180
Hardware laying around so that if they

378
00:16:24,720 --> 00:16:28,560
have a need to crack passwords that you

379
00:16:27,180 --> 00:16:30,630
can just immediately snap their fingers

380
00:16:28,560 --> 00:16:31,859
and have a system built have the

381
00:16:30,630 --> 00:16:34,320
electrical infrastructure and the

382
00:16:31,860 --> 00:16:36,329
heating and cooling that they need in

383
00:16:34,320 --> 00:16:39,410
place to make it work never mind the

384
00:16:36,329 --> 00:16:42,060
software that needs to be installed

385
00:16:39,410 --> 00:16:50,100
anyone know what anyone know what this

386
00:16:42,060 --> 00:16:53,399
is it's the Amazon okay so it's the

387
00:16:50,100 --> 00:16:55,079
Amazon so it's not the only provider

388
00:16:53,399 --> 00:16:56,690
there's other providers like Rackspace

389
00:16:55,079 --> 00:17:00,089
and SoftLayer that you can utilize

390
00:16:56,690 --> 00:17:02,730
Amazon is it's easy to use and that's

391
00:17:00,089 --> 00:17:04,370
what we chose to use for our research so

392
00:17:02,730 --> 00:17:07,339
that's what we're going to talk about

393
00:17:04,369 --> 00:17:11,698
who in here has set up in Amazon ec2

394
00:17:07,339 --> 00:17:12,869
server instance okay a few of you yet

395
00:17:11,699 --> 00:17:15,480
we're just gonna quickly walk through

396
00:17:12,869 --> 00:17:17,129
what's involved in doing that once you

397
00:17:15,480 --> 00:17:18,870
have an Amazon account set up it

398
00:17:17,130 --> 00:17:20,819
literally within two minutes you can

399
00:17:18,869 --> 00:17:22,979
have a server stood up that you're able

400
00:17:20,819 --> 00:17:25,230
to log into and setting up an account is

401
00:17:22,980 --> 00:17:26,610
really trivial you essentially need to

402
00:17:25,230 --> 00:17:28,650
create create an amazon web services

403
00:17:26,609 --> 00:17:31,439
account provide a credit card number

404
00:17:28,650 --> 00:17:34,050
provide a phone number it then sends you

405
00:17:31,440 --> 00:17:35,730
a code you enter the code in it verifies

406
00:17:34,050 --> 00:17:37,409
your account and then from there you can

407
00:17:35,730 --> 00:17:41,100
go to the ec2 console and build your

408
00:17:37,410 --> 00:17:42,900
server okay and I just mentioned here

409
00:17:41,100 --> 00:17:44,189
that in terms of accessing a server

410
00:17:42,900 --> 00:17:46,440
there's some other things that you may

411
00:17:44,190 --> 00:17:48,360
want to do like create a keep here so

412
00:17:46,440 --> 00:17:52,050
you can do authentication using a key

413
00:17:48,360 --> 00:17:53,820
instead of using a password and here's

414
00:17:52,050 --> 00:17:55,678
what the screens look like in terms of

415
00:17:53,820 --> 00:17:57,059
actually building an instance there's a

416
00:17:55,679 --> 00:17:59,940
button in the middle called launch

417
00:17:57,059 --> 00:18:02,309
instance you click it you go to this

418
00:17:59,940 --> 00:18:05,250
screen I've already pre-configured a key

419
00:18:02,309 --> 00:18:08,170
pair so I select it on the right hand

420
00:18:05,250 --> 00:18:10,880
side here is a list of

421
00:18:08,170 --> 00:18:13,520
Amazon machines that you can select from

422
00:18:10,880 --> 00:18:15,290
in terms of what operating system and

423
00:18:13,520 --> 00:18:17,720
other features you want to have in place

424
00:18:15,290 --> 00:18:20,990
in this particular instance I chose a

425
00:18:17,720 --> 00:18:22,430
version of Ubuntu there was 64-bit which

426
00:18:20,990 --> 00:18:26,120
is one of the systems we set up to do

427
00:18:22,430 --> 00:18:29,510
cracking on the next screen looks like

428
00:18:26,120 --> 00:18:31,399
this and it provides some options to you

429
00:18:29,510 --> 00:18:35,450
that you can fill out I selected a name

430
00:18:31,400 --> 00:18:38,240
of Yoda for the server chose a specific

431
00:18:35,450 --> 00:18:40,280
server type called m1 not large and

432
00:18:38,240 --> 00:18:42,680
explain in detail later what that

433
00:18:40,280 --> 00:18:45,260
consists of but it's a system that does

434
00:18:42,680 --> 00:18:47,540
not have a GPU if you're interested you

435
00:18:45,260 --> 00:18:50,150
can specify what zone you want that sort

436
00:18:47,540 --> 00:18:53,050
of be located in Amazon has data centers

437
00:18:50,150 --> 00:18:55,460
in the United States Europe Asia

438
00:18:53,050 --> 00:18:57,139
somewhere else I believe I can't think

439
00:18:55,460 --> 00:18:59,150
of what other location so you can

440
00:18:57,140 --> 00:19:01,790
specify where those are now some servers

441
00:18:59,150 --> 00:19:03,260
are not available in all areas and then

442
00:19:01,790 --> 00:19:05,629
there's some advanced details and you

443
00:19:03,260 --> 00:19:07,340
can do things there like after the

444
00:19:05,630 --> 00:19:09,020
server is automatically built if you

445
00:19:07,340 --> 00:19:10,790
want it to have it automatically run

446
00:19:09,020 --> 00:19:12,470
some scripts you could actually paste

447
00:19:10,790 --> 00:19:14,990
those scripts in and when the server is

448
00:19:12,470 --> 00:19:18,200
built it will run those so let's say you

449
00:19:14,990 --> 00:19:20,180
wanted to grab some password hashes you

450
00:19:18,200 --> 00:19:22,460
wanted to grab some software have it on

451
00:19:20,180 --> 00:19:23,810
tar it and install it you can paste that

452
00:19:22,460 --> 00:19:25,490
all in there and when it builds the

453
00:19:23,810 --> 00:19:31,970
server all it already everyone those

454
00:19:25,490 --> 00:19:33,560
particular commands ok and then once you

455
00:19:31,970 --> 00:19:37,580
get to this screen the server is being

456
00:19:33,560 --> 00:19:39,710
built if you click over to the console

457
00:19:37,580 --> 00:19:41,480
here's what the console looks like and

458
00:19:39,710 --> 00:19:44,120
this is what it looked like right after

459
00:19:41,480 --> 00:19:46,490
I set up the yota server you can see

460
00:19:44,120 --> 00:19:48,340
it's running you can do some additional

461
00:19:46,490 --> 00:19:50,780
things like set up a static IP address

462
00:19:48,340 --> 00:19:52,220
you don't have to you can see there's a

463
00:19:50,780 --> 00:19:54,770
host name here that's automatically

464
00:19:52,220 --> 00:19:57,110
assigned when you when you stop start

465
00:19:54,770 --> 00:19:59,210
and stop the server it's likely you will

466
00:19:57,110 --> 00:20:01,010
not get the same hostname so it can be

467
00:19:59,210 --> 00:20:03,290
advantageous to set up your own static

468
00:20:01,010 --> 00:20:05,270
IP and then if you want to set up a

469
00:20:03,290 --> 00:20:07,930
hostname through DNS but you don't

470
00:20:05,270 --> 00:20:09,850
really have to you unless you want to

471
00:20:07,930 --> 00:20:11,770
and this is just the bottom half of that

472
00:20:09,850 --> 00:20:13,719
same screen so it shows there's a

473
00:20:11,770 --> 00:20:19,260
private IP address you get a public IP

474
00:20:13,720 --> 00:20:19,260
address yes when you grab those

475
00:20:27,070 --> 00:20:30,860
those are the states of the particular

476
00:20:29,180 --> 00:20:33,590
servers that had configured for this

477
00:20:30,860 --> 00:20:37,189
account so the different states are

478
00:20:33,590 --> 00:20:39,020
start started well actually I don't

479
00:20:37,190 --> 00:20:40,790
think that's one so a server can be

480
00:20:39,020 --> 00:20:59,710
stopped it can be starting it can be

481
00:20:40,790 --> 00:21:03,080
running or it can be terminated it can

482
00:20:59,710 --> 00:21:04,850
in what we're talking about I haven't

483
00:21:03,080 --> 00:21:06,169
done it that way but using the two

484
00:21:04,850 --> 00:21:08,060
crypto haze tool

485
00:21:06,170 --> 00:21:10,100
you can't which is not the tool we're

486
00:21:08,060 --> 00:21:12,080
talking about it's a better tool for

487
00:21:10,100 --> 00:21:14,810
doing distributed password cracking

488
00:21:12,080 --> 00:21:17,720
because you can set up a master server

489
00:21:14,810 --> 00:21:20,149
and a bunch of child servers and have it

490
00:21:17,720 --> 00:21:22,820
all have the hashes distributed and have

491
00:21:20,150 --> 00:21:24,560
it report back in to the parents it is

492
00:21:22,820 --> 00:21:26,750
possible do that this way

493
00:21:24,560 --> 00:21:29,659
I did have startup scripts that install

494
00:21:26,750 --> 00:21:31,330
keys so that I can have transmission of

495
00:21:29,660 --> 00:21:34,070
the passwords from one server to another

496
00:21:31,330 --> 00:21:37,100
but you could also do it manually it's

497
00:21:34,070 --> 00:21:38,659
it's not a lot of work if I was gonna

498
00:21:37,100 --> 00:21:41,449
set up a hundred nodes to do it I would

499
00:21:38,660 --> 00:21:44,440
definitely automate it any other

500
00:21:41,450 --> 00:21:44,440
questions about this part of it

501
00:21:47,910 --> 00:21:54,400
you can also set up a electric elastic

502
00:21:52,360 --> 00:21:56,409
block storage devices were which are

503
00:21:54,400 --> 00:21:58,810
essentially separate hard drives I did

504
00:21:56,410 --> 00:22:01,720
that for the GPU box because I want the

505
00:21:58,810 --> 00:22:03,610
data to reside on a hard drive a virtual

506
00:22:01,720 --> 00:22:06,130
hard drive that I could reattach to

507
00:22:03,610 --> 00:22:07,899
other servers if I needed to when you

508
00:22:06,130 --> 00:22:10,630
set up a server you get a certain amount

509
00:22:07,900 --> 00:22:13,870
it's like 8 gigabytes of storage space

510
00:22:10,630 --> 00:22:15,340
within the actual server itself and then

511
00:22:13,870 --> 00:22:19,929
depending on the version of the server

512
00:22:15,340 --> 00:22:21,580
you get a ferial storage systems which

513
00:22:19,930 --> 00:22:22,900
essentially means that the storage is

514
00:22:21,580 --> 00:22:25,149
only available to you while the server

515
00:22:22,900 --> 00:22:26,590
is running so if you stop the server the

516
00:22:25,150 --> 00:22:28,690
data that resides on those storage

517
00:22:26,590 --> 00:22:30,939
devices will be gone so don't make that

518
00:22:28,690 --> 00:22:32,710
mistake don't do a lot of work store it

519
00:22:30,940 --> 00:22:33,670
on that mounted hard drive and then stop

520
00:22:32,710 --> 00:22:39,160
the server because you'll lose

521
00:22:33,670 --> 00:22:41,020
everything your dad ok the pricing

522
00:22:39,160 --> 00:22:42,460
system may seem somewhat complex for

523
00:22:41,020 --> 00:22:44,080
Amazon but it's really not that

524
00:22:42,460 --> 00:22:47,260
difficult there's really three types of

525
00:22:44,080 --> 00:22:49,389
servers on demand which is utility based

526
00:22:47,260 --> 00:22:52,330
pricing model you pay for what you use

527
00:22:49,390 --> 00:22:53,740
they charge you for each each hour if

528
00:22:52,330 --> 00:22:55,960
you go an hour in one minute they charge

529
00:22:53,740 --> 00:22:58,330
you for two hours you can get reserved

530
00:22:55,960 --> 00:23:01,180
pricing which allows you to pay first

531
00:22:58,330 --> 00:23:03,520
some amount upfront and get a discounted

532
00:23:01,180 --> 00:23:05,790
rate on an ongoing basis then spot

533
00:23:03,520 --> 00:23:08,530
pricing allows you to take advantage of

534
00:23:05,790 --> 00:23:10,930
excess space the Amazon may potentially

535
00:23:08,530 --> 00:23:13,780
have to get a much lower rate we'll talk

536
00:23:10,930 --> 00:23:17,890
about that later on in terms of the

537
00:23:13,780 --> 00:23:21,639
configuration if you purchase a system

538
00:23:17,890 --> 00:23:23,800
that has a slow processor and less RAM

539
00:23:21,640 --> 00:23:26,410
is going to cost you less money than if

540
00:23:23,800 --> 00:23:28,060
you purchase one that's beefier and so

541
00:23:26,410 --> 00:23:30,730
we set up a couple of different servers

542
00:23:28,060 --> 00:23:32,919
for testing purposes Linux cost less

543
00:23:30,730 --> 00:23:34,660
than Windows there's some variance in

544
00:23:32,920 --> 00:23:36,880
geographic regions and term apart in

545
00:23:34,660 --> 00:23:38,470
terms of pricing and the last few bullet

546
00:23:36,880 --> 00:23:40,290
points in terms of password cracking

547
00:23:38,470 --> 00:23:43,210
don't really make a lot of difference

548
00:23:40,290 --> 00:23:46,389
elastic IP addresses only cost you a few

549
00:23:43,210 --> 00:23:48,610
cents per month getting advanced metrics

550
00:23:46,390 --> 00:23:49,900
doesn't cost you that much and you're

551
00:23:48,610 --> 00:23:52,270
not really transferring a lot of data

552
00:23:49,900 --> 00:23:54,250
when you're you're pulling in password

553
00:23:52,270 --> 00:23:55,629
hash files and cracking them because

554
00:23:54,250 --> 00:23:57,610
you're not moving a lot of data around

555
00:23:55,630 --> 00:23:58,690
and you don't need a tremendous amount

556
00:23:57,610 --> 00:24:01,120
of storage space

557
00:23:58,690 --> 00:24:03,280
but all the information on pricing is

558
00:24:01,120 --> 00:24:06,580
available on the ec2 website you have

559
00:24:03,280 --> 00:24:08,260
anything you want to add on that this is

560
00:24:06,580 --> 00:24:10,240
just a partial screenshot of what some

561
00:24:08,260 --> 00:24:12,610
of the pricing looks like one of the

562
00:24:10,240 --> 00:24:14,800
server's we set up the yota server is

563
00:24:12,610 --> 00:24:16,959
using the large instance which is 32

564
00:24:14,800 --> 00:24:19,960
cents per hour you can see for Windows

565
00:24:16,960 --> 00:24:22,390
it's 46 we are running Ubuntu so we took

566
00:24:19,960 --> 00:24:24,490
advantage of the lower pricing and we

567
00:24:22,390 --> 00:24:26,740
set up a GPU server which costs two

568
00:24:24,490 --> 00:24:31,240
dollars and 10 cents per hour based on

569
00:24:26,740 --> 00:24:33,700
the on demand pricing model if you

570
00:24:31,240 --> 00:24:35,620
haven't used ec2 you may want to give it

571
00:24:33,700 --> 00:24:38,290
a try they have a free pricing model

572
00:24:35,620 --> 00:24:41,110
it's kind of like a gateway drug to

573
00:24:38,290 --> 00:24:43,659
their paid services it's free for a year

574
00:24:41,110 --> 00:24:46,510
and I don't work for Amazon I don't get

575
00:24:43,660 --> 00:24:48,870
anything from telling you this does that

576
00:24:46,510 --> 00:24:52,300
work here is anyone here work for Amazon

577
00:24:48,870 --> 00:24:55,030
okay and so you can get a free server

578
00:24:52,300 --> 00:24:58,090
750 hours a month on Linux plus seven or

579
00:24:55,030 --> 00:25:00,580
50 hours a month on Windows and you can

580
00:24:58,090 --> 00:25:01,720
get additional EBS storage and there's a

581
00:25:00,580 --> 00:25:04,060
number of other things you can get for

582
00:25:01,720 --> 00:25:06,160
free so you can always try that out it's

583
00:25:04,060 --> 00:25:07,990
not very very beefy virtual server that

584
00:25:06,160 --> 00:25:11,290
you get you can always upgrade it or

585
00:25:07,990 --> 00:25:13,330
move to a different pricing model okay

586
00:25:11,290 --> 00:25:15,639
so here's what we set up we set up a

587
00:25:13,330 --> 00:25:18,730
server that was running Ubuntu seven and

588
00:25:15,640 --> 00:25:21,550
a half gigs of RAM it utilized for EC to

589
00:25:18,730 --> 00:25:24,340
EC to compute units does anyone know

590
00:25:21,550 --> 00:25:25,899
what that means okay what will explain

591
00:25:24,340 --> 00:25:29,649
what that is essentially an ECT you

592
00:25:25,900 --> 00:25:32,050
compute unit is sort of a number that

593
00:25:29,650 --> 00:25:34,690
tells you on a relative basis how much

594
00:25:32,050 --> 00:25:39,550
processing power you get one ec2 unit is

595
00:25:34,690 --> 00:25:41,770
equivalent to a 1.2 gigahertz Opteron

596
00:25:39,550 --> 00:25:45,520
processor from 2007

597
00:25:41,770 --> 00:25:48,930
so for ec2 compute units is not a very

598
00:25:45,520 --> 00:25:51,220
beefy server the GPU node that we built

599
00:25:48,930 --> 00:25:54,880
there's only one option to select from

600
00:25:51,220 --> 00:25:56,740
it's 33 and a half ec2 compute units you

601
00:25:54,880 --> 00:25:59,830
see as more RAM it has a bigger hard

602
00:25:56,740 --> 00:26:03,280
drive and it has eight processors in it

603
00:25:59,830 --> 00:26:04,990
has two nvidia tesla cards which are

604
00:26:03,280 --> 00:26:07,330
fairly expensive

605
00:26:04,990 --> 00:26:09,400
video cards but they don't actually

606
00:26:07,330 --> 00:26:12,550
crack passwords any faster than a

607
00:26:09,400 --> 00:26:14,559
lower-end Nvidia card the service that

608
00:26:12,550 --> 00:26:16,440
amazon has is not really designed for

609
00:26:14,559 --> 00:26:18,850
password cracking is designed for

610
00:26:16,440 --> 00:26:21,010
analyzing data in the oilfield

611
00:26:18,850 --> 00:26:25,240
Boyle industry or the banking industry

612
00:26:21,010 --> 00:26:27,129
or in the sciences so for visualization

613
00:26:25,240 --> 00:26:29,590
and that kind of thing that's the kind

614
00:26:27,130 --> 00:26:31,420
of processor you want but we don't have

615
00:26:29,590 --> 00:26:32,530
the choice as an Amazon customer do with

616
00:26:31,420 --> 00:26:35,230
something else because that's what they

617
00:26:32,530 --> 00:26:37,240
offer have they offered something less

618
00:26:35,230 --> 00:26:38,770
expensive it would probably cost less

619
00:26:37,240 --> 00:26:41,230
than two to two dollars and ten cents

620
00:26:38,770 --> 00:26:43,830
per hour and any questions what the

621
00:26:41,230 --> 00:26:43,830
servers were built

622
00:26:50,430 --> 00:26:56,130
the GPU server yeah I haven't placed

623
00:26:53,970 --> 00:27:02,690
that out as anyone have a guess on what

624
00:26:56,130 --> 00:27:06,180
that would cost as we run into quad-core

625
00:27:02,690 --> 00:27:09,180
Intel processors the Nvidia cards I

626
00:27:06,180 --> 00:27:13,230
think run about $1,000 apiece that sound

627
00:27:09,180 --> 00:27:14,460
right down you yeah so I maybe $5,000 I

628
00:27:13,230 --> 00:27:20,520
would say somewhere in that ballpark

629
00:27:14,460 --> 00:27:22,440
plus or minus a thousand so I mean for

630
00:27:20,520 --> 00:27:23,970
us that wasn't really feasible we didn't

631
00:27:22,440 --> 00:27:26,970
have the budget to go build our own

632
00:27:23,970 --> 00:27:30,150
machine nor at the time of our research

633
00:27:26,970 --> 00:27:34,560
did we have any kind of need to do 24/7

634
00:27:30,150 --> 00:27:36,450
by 365 password cracking the last box we

635
00:27:34,560 --> 00:27:37,649
set up is one of Randy's laptops when

636
00:27:36,450 --> 00:27:40,560
you wanna tell us about your Dale this

637
00:27:37,650 --> 00:27:46,160
is my it's my secondary laptop I think

638
00:27:40,560 --> 00:27:49,050
we've got these about three years ago so

639
00:27:46,160 --> 00:27:52,620
yeah it had an Intel Core 2 Duo 2

640
00:27:49,050 --> 00:27:53,940
gigahertz 2 gigs of ram is an older

641
00:27:52,620 --> 00:27:56,459
machine we just kind of want to point it

642
00:27:53,940 --> 00:27:59,400
out or point out that you can if you

643
00:27:56,460 --> 00:28:04,020
know if you have to do this and you have

644
00:27:59,400 --> 00:28:07,260
an old machine kind of use this as an

645
00:28:04,020 --> 00:28:09,420
example against my secondary laptop it's

646
00:28:07,260 --> 00:28:12,020
also 32-bit and other machines we tested

647
00:28:09,420 --> 00:28:18,840
with 64-bit which makes a difference

648
00:28:12,020 --> 00:28:20,820
okay so here's the mission we did yeah

649
00:28:18,840 --> 00:28:22,709
we did so we compared all three

650
00:28:20,820 --> 00:28:24,230
scenarios and so we'll show you what the

651
00:28:22,710 --> 00:28:26,340
results of that are it's a pretty

652
00:28:24,230 --> 00:28:27,690
interesting but actually when we get

653
00:28:26,340 --> 00:28:29,970
close to that I'll ask what you think of

654
00:28:27,690 --> 00:28:31,440
the results would be so Zelda which was

655
00:28:29,970 --> 00:28:32,760
Randy's box essentially cost zero

656
00:28:31,440 --> 00:28:34,650
dollars per hour sure there's some

657
00:28:32,760 --> 00:28:37,590
electrical cost but it's pretty minor

658
00:28:34,650 --> 00:28:39,900
and Yodas 32 cents an hour and exhibit

659
00:28:37,590 --> 00:28:43,560
which is the GPU box is two dollars and

660
00:28:39,900 --> 00:28:45,420
ten cents per hour using the the on

661
00:28:43,560 --> 00:28:47,460
demand service will talk about the spot

662
00:28:45,420 --> 00:28:49,410
pricing later which can drive the cost

663
00:28:47,460 --> 00:28:52,040
down but may or may not work based on

664
00:28:49,410 --> 00:28:52,040
what your needs are

665
00:28:52,400 --> 00:28:58,430
what you want to talk about this some of

666
00:28:56,930 --> 00:29:02,390
the well these are the options basically

667
00:28:58,430 --> 00:29:04,700
available on hash cat you can provide

668
00:29:02,390 --> 00:29:06,980
dictionary files which will show kind of

669
00:29:04,700 --> 00:29:08,690
some of the ones that we did combination

670
00:29:06,980 --> 00:29:12,110
attack is is basically where it takes

671
00:29:08,690 --> 00:29:15,140
your dictionary files and mixes the

672
00:29:12,110 --> 00:29:17,750
words around in them basically it does

673
00:29:15,140 --> 00:29:20,240
take a lot longer to date a combination

674
00:29:17,750 --> 00:29:22,520
attack and then masking will show you an

675
00:29:20,240 --> 00:29:24,380
example of that but basically it's a an

676
00:29:22,520 --> 00:29:26,510
option for forcing where you tell it

677
00:29:24,380 --> 00:29:30,080
what what characters to look for in what

678
00:29:26,510 --> 00:29:33,230
places and and then rule it has a

679
00:29:30,080 --> 00:29:34,939
rule-based as well Randy how long would

680
00:29:33,230 --> 00:29:36,560
the combination and attack that you try

681
00:29:34,940 --> 00:29:41,180
to perform on your laptop if taken if

682
00:29:36,560 --> 00:29:41,510
you let it finish I let it go for nine

683
00:29:41,180 --> 00:29:42,700
days

684
00:29:41,510 --> 00:29:44,900
[Music]

685
00:29:42,700 --> 00:29:47,600
that's a good question really probably

686
00:29:44,900 --> 00:29:49,580
about three weeks I guess I'd guess

687
00:29:47,600 --> 00:29:51,260
about three weeks it all I was doing was

688
00:29:49,580 --> 00:29:53,149
taking dictionary words and combining

689
00:29:51,260 --> 00:29:55,250
them with each other and it wasn't gonna

690
00:29:53,150 --> 00:29:57,350
produce a very high number of acquired

691
00:29:55,250 --> 00:29:59,840
passwords and took her tremendous amount

692
00:29:57,350 --> 00:30:01,459
of time on his device with the rule base

693
00:29:59,840 --> 00:30:04,250
cracking is doing things like shifting

694
00:30:01,460 --> 00:30:06,110
characters substituting characters and

695
00:30:04,250 --> 00:30:07,700
doing that type of thing where we got

696
00:30:06,110 --> 00:30:09,879
the most benefit was with a masking

697
00:30:07,700 --> 00:30:11,750
attacks which is a more granular

698
00:30:09,880 --> 00:30:13,850
brute-force attack and we'll explain

699
00:30:11,750 --> 00:30:15,440
what that is what I was doing that kind

700
00:30:13,850 --> 00:30:19,520
of for fun so I had all the time in the

701
00:30:15,440 --> 00:30:21,230
world okay so the data set with that we

702
00:30:19,520 --> 00:30:23,480
primarily used was a one and a half

703
00:30:21,230 --> 00:30:25,160
million record eHarmony password

704
00:30:23,480 --> 00:30:27,080
database it's interesting because if you

705
00:30:25,160 --> 00:30:28,850
look at the web page it actually says

706
00:30:27,080 --> 00:30:30,740
the number one most trusted online

707
00:30:28,850 --> 00:30:32,300
dating site apparently it's not the

708
00:30:30,740 --> 00:30:34,130
number one most trusted in terms of

709
00:30:32,300 --> 00:30:36,950
protecting and securing your passwords

710
00:30:34,130 --> 00:30:38,480
so if they use unsalted mp5s and they

711
00:30:36,950 --> 00:30:40,190
were exposed and published on the

712
00:30:38,480 --> 00:30:41,870
internet and we're very easily grabbed

713
00:30:40,190 --> 00:30:46,150
here's what the passwords look like

714
00:30:41,870 --> 00:30:46,149
they're guest normal md5 without a salt

715
00:30:46,250 --> 00:30:52,680
that normal yeah the hash is not not the

716
00:30:49,380 --> 00:30:54,780
plaintext passwords and Randy's gonna

717
00:30:52,680 --> 00:30:56,640
tell you about the hash cat syntax which

718
00:30:54,780 --> 00:30:58,050
which differs a little bit based on

719
00:30:56,640 --> 00:31:00,810
which version the hash cat you're using

720
00:30:58,050 --> 00:31:03,240
I also want to say that haschke actually

721
00:31:00,810 --> 00:31:07,139
has a GUI also which I kind of started

722
00:31:03,240 --> 00:31:08,280
out using but just to talk about and I

723
00:31:07,140 --> 00:31:12,240
think do we have another slide that

724
00:31:08,280 --> 00:31:14,190
where I break down there okay I'll just

725
00:31:12,240 --> 00:31:16,590
talk about these real quick so this just

726
00:31:14,190 --> 00:31:20,550
launches hash cat this is our source

727
00:31:16,590 --> 00:31:23,280
file m0 is just for the algorithms used

728
00:31:20,550 --> 00:31:25,260
so 75 the output file that you want to

729
00:31:23,280 --> 00:31:27,060
send it to and then this we included one

730
00:31:25,260 --> 00:31:29,520
dictionary in here

731
00:31:27,060 --> 00:31:31,230
this one's md5 and then the attack is

732
00:31:29,520 --> 00:31:33,540
brute force so you specify which type of

733
00:31:31,230 --> 00:31:35,370
attack you want to use and then you can

734
00:31:33,540 --> 00:31:37,260
specify in the brute force with a brute

735
00:31:35,370 --> 00:31:41,250
force attack you can specify min and Max

736
00:31:37,260 --> 00:31:43,290
for the password and then remove options

737
00:31:41,250 --> 00:31:47,310
so it removes the hash from the list

738
00:31:43,290 --> 00:31:50,310
when it cracks it this is poor the mask

739
00:31:47,310 --> 00:31:51,990
I'm specifying that I only use uppercase

740
00:31:50,310 --> 00:31:53,669
characters I think we'll talk a little

741
00:31:51,990 --> 00:31:56,520
bit more about that but we found that

742
00:31:53,670 --> 00:31:58,200
that you harmony only used they they

743
00:31:56,520 --> 00:32:00,960
changed all their passwords into

744
00:31:58,200 --> 00:32:04,170
uppercase from lower to upper case so it

745
00:32:00,960 --> 00:32:07,470
made it a lot easier to crack and then

746
00:32:04,170 --> 00:32:09,300
this is per decimal the output file

747
00:32:07,470 --> 00:32:10,950
again and then here's our masks so we're

748
00:32:09,300 --> 00:32:14,909
specifying that and we want an uppercase

749
00:32:10,950 --> 00:32:16,770
character in the first four places and

750
00:32:14,910 --> 00:32:18,690
then a decimal so they look for four

751
00:32:16,770 --> 00:32:22,050
uppercase characters and four four

752
00:32:18,690 --> 00:32:23,820
numbers so the options you have you have

753
00:32:22,050 --> 00:32:26,010
lowercase letters uppercase letters

754
00:32:23,820 --> 00:32:27,929
numbers special characters and also some

755
00:32:26,010 --> 00:32:30,660
foreign language characters which we

756
00:32:27,930 --> 00:32:32,220
didn't utilize and so this is much more

757
00:32:30,660 --> 00:32:35,400
efficient than a normal brute-force

758
00:32:32,220 --> 00:32:38,970
attack so if for example you know that

759
00:32:35,400 --> 00:32:40,530
they don't use let's say that you assume

760
00:32:38,970 --> 00:32:42,360
that people are going to capitalize the

761
00:32:40,530 --> 00:32:44,430
first letter of the word you could

762
00:32:42,360 --> 00:32:47,310
specify only uppercase letters in the

763
00:32:44,430 --> 00:32:49,500
first position which reduces the key

764
00:32:47,310 --> 00:32:51,780
space in this particular case because as

765
00:32:49,500 --> 00:32:53,910
Randy mentioned er me you did something

766
00:32:51,780 --> 00:32:56,639
that most people will consider not very

767
00:32:53,910 --> 00:32:58,470
intelligent they actually convert

768
00:32:56,640 --> 00:33:00,750
all the lowercase letters the uppercase

769
00:32:58,470 --> 00:33:03,150
before they converted them the hashes

770
00:33:00,750 --> 00:33:05,640
which made it a lot easier for us to

771
00:33:03,150 --> 00:33:10,200
attack their data set once we discover

772
00:33:05,640 --> 00:33:12,060
that and in terms of the minimum or

773
00:33:10,200 --> 00:33:15,660
maximum we could have set this to for

774
00:33:12,060 --> 00:33:17,070
example five with a maximum eight and it

775
00:33:15,660 --> 00:33:18,900
wouldn't work actually for this data set

776
00:33:17,070 --> 00:33:21,270
but let's say you want to do all numeric

777
00:33:18,900 --> 00:33:23,130
you could have it run through all the

778
00:33:21,270 --> 00:33:25,440
numeric strings that are five characters

779
00:33:23,130 --> 00:33:27,330
long than six and seven and eight

780
00:33:25,440 --> 00:33:28,920
we found it was better to do that

781
00:33:27,330 --> 00:33:31,590
separately and store the output in

782
00:33:28,920 --> 00:33:33,860
separate output files because it allowed

783
00:33:31,590 --> 00:33:36,179
you to backup the hash file beforehand

784
00:33:33,860 --> 00:33:38,189
estimate how long the run would take

785
00:33:36,180 --> 00:33:40,110
because if one was going to take like

786
00:33:38,190 --> 00:33:42,420
weeks you might not actually want to

787
00:33:40,110 --> 00:33:44,929
complete it and allows you to separate

788
00:33:42,420 --> 00:33:53,410
the data out better

789
00:33:44,930 --> 00:33:53,410
[Music]

790
00:33:53,720 --> 00:34:02,250
right I even 920 that's correct and

791
00:34:00,480 --> 00:34:03,870
that's a very good point on the GPU

792
00:34:02,250 --> 00:34:07,049
version it doesn't actually lat doesn't

793
00:34:03,870 --> 00:34:08,399
even have those parameters so if you

794
00:34:07,049 --> 00:34:10,320
want to be consistent between the two

795
00:34:08,399 --> 00:34:12,719
versions you don't even bother with

796
00:34:10,320 --> 00:34:15,090
those and you just specify what the

797
00:34:12,719 --> 00:34:16,799
parameters are here so that's right it's

798
00:34:15,090 --> 00:34:19,080
in terms of constructing your rule sets

799
00:34:16,800 --> 00:34:20,520
on the GPU version you actually have to

800
00:34:19,080 --> 00:34:21,869
put more work into it because it doesn't

801
00:34:20,520 --> 00:34:24,270
allow you to specify the minimum and

802
00:34:21,869 --> 00:34:27,480
maximum but you can always put your

803
00:34:24,270 --> 00:34:29,070
rules into a text file and write a bash

804
00:34:27,480 --> 00:34:30,929
script or whatever your favorite

805
00:34:29,070 --> 00:34:35,399
programming language is and have it

806
00:34:30,929 --> 00:34:37,139
enumerate that those rule sets okay so

807
00:34:35,399 --> 00:34:38,850
we're gonna kind of move through some of

808
00:34:37,139 --> 00:34:40,919
this in terms of creating dictionaries

809
00:34:38,850 --> 00:34:42,418
there's password files out there that

810
00:34:40,918 --> 00:34:43,739
you use there's what you'd normally

811
00:34:42,418 --> 00:34:45,899
consider a dictionary like your

812
00:34:43,739 --> 00:34:47,699
Webster's dictionary but anything that

813
00:34:45,899 --> 00:34:49,739
has strings in it can be used as

814
00:34:47,699 --> 00:34:52,830
dictionary input could be the Klingon

815
00:34:49,739 --> 00:34:54,359
language it could be movie titles it

816
00:34:52,830 --> 00:34:57,259
could be pretty much anything popular

817
00:34:54,359 --> 00:34:59,670
locations first names last names and we

818
00:34:57,260 --> 00:35:01,109
created a combined dictionary which used

819
00:34:59,670 --> 00:35:03,720
dozens of those different types of

820
00:35:01,109 --> 00:35:06,480
dictionaries it did not work as well as

821
00:35:03,720 --> 00:35:08,790
using the masking attacks so I just want

822
00:35:06,480 --> 00:35:10,770
to add two big dictionary files that are

823
00:35:08,790 --> 00:35:12,869
relevant to whatever dump you're you're

824
00:35:10,770 --> 00:35:16,070
looking for so like eHarmony this

825
00:35:12,869 --> 00:35:18,060
singles org was a really good one

826
00:35:16,070 --> 00:35:19,290
myspace isn't you know something some of

827
00:35:18,060 --> 00:35:22,049
the other ones and you also want to put

828
00:35:19,290 --> 00:35:24,029
the the more relevant ones at the top of

829
00:35:22,050 --> 00:35:28,530
the list don't crack them first and get

830
00:35:24,030 --> 00:35:30,180
through good point this is probably a

831
00:35:28,530 --> 00:35:32,670
little hard to see but this was one of

832
00:35:30,180 --> 00:35:36,089
our test cases where we just ran masking

833
00:35:32,670 --> 00:35:38,880
attacks at the very top we started with

834
00:35:36,090 --> 00:35:40,260
all uppercase strings and the caught

835
00:35:38,880 --> 00:35:41,609
with the column show is the number of

836
00:35:40,260 --> 00:35:44,369
strings that were involved in those

837
00:35:41,609 --> 00:35:46,740
attacks the time in seconds it took to

838
00:35:44,369 --> 00:35:48,240
complete the attack the rate which was

839
00:35:46,740 --> 00:35:50,368
the number of strings divided by the

840
00:35:48,240 --> 00:35:52,890
time in seconds the number of crack

841
00:35:50,369 --> 00:35:54,630
passwords and then a second rate which

842
00:35:52,890 --> 00:35:57,480
was the number of crack passwords per

843
00:35:54,630 --> 00:35:59,460
second and so as we started to do this

844
00:35:57,480 --> 00:36:00,859
we noticed some things well first of all

845
00:35:59,460 --> 00:36:03,170
we don't show it but we noticed that

846
00:36:00,859 --> 00:36:06,828
lowercase passwords

847
00:36:03,170 --> 00:36:09,079
didn't exist so there was a advantage to

848
00:36:06,829 --> 00:36:11,270
us modifying the rest of our rule sets

849
00:36:09,079 --> 00:36:12,500
not to include lowercase letters because

850
00:36:11,270 --> 00:36:15,109
it'd be a waste of time

851
00:36:12,500 --> 00:36:17,299
if we looked at a six character string

852
00:36:15,109 --> 00:36:19,549
the fact that they eliminate the

853
00:36:17,299 --> 00:36:21,920
lowercase letters does anyone want to

854
00:36:19,549 --> 00:36:25,430
take a guess in terms of how much work

855
00:36:21,920 --> 00:36:29,140
that actually saved us did save us half

856
00:36:25,430 --> 00:36:29,140
the work or was it a lot more than that

857
00:36:30,309 --> 00:36:38,599
I'm sorry that's right it's it's it's a

858
00:36:35,750 --> 00:36:40,420
power factor right because for a one

859
00:36:38,599 --> 00:36:43,190
character string it's double quadruple

860
00:36:40,420 --> 00:36:44,809
times eight so it actually saves you

861
00:36:43,190 --> 00:36:47,780
quite a bit by being able to eliminate

862
00:36:44,809 --> 00:36:50,930
that part of the key space we also

863
00:36:47,780 --> 00:36:55,400
noticed some of these attacks that we

864
00:36:50,930 --> 00:36:56,899
ran cracked zero passwords so it's not

865
00:36:55,400 --> 00:36:59,599
really clear what the password policy

866
00:36:56,900 --> 00:37:02,359
was in place at some time on eHarmony

867
00:36:59,599 --> 00:37:04,579
but apparently you couldn't create a

868
00:37:02,359 --> 00:37:06,828
string consisting of all special

869
00:37:04,579 --> 00:37:09,619
characters you could create one of all

870
00:37:06,829 --> 00:37:12,230
numeric and so we're able to modify our

871
00:37:09,619 --> 00:37:14,119
attacks based on that one of the things

872
00:37:12,230 --> 00:37:16,309
that you can do is you can start off a

873
00:37:14,119 --> 00:37:18,980
masking attack with an individual letter

874
00:37:16,309 --> 00:37:21,290
or a string and so you can use an input

875
00:37:18,980 --> 00:37:24,079
file like the RockYou password list

876
00:37:21,290 --> 00:37:25,880
which is about 15 million passwords sort

877
00:37:24,079 --> 00:37:27,770
them by frequency strip off some and

878
00:37:25,880 --> 00:37:29,480
letters and see that people do things

879
00:37:27,770 --> 00:37:31,730
like create passwords that begin with I

880
00:37:29,480 --> 00:37:33,740
love right so you can use that

881
00:37:31,730 --> 00:37:35,450
intelligence to create masking attacks

882
00:37:33,740 --> 00:37:39,290
so we created one that used I love

883
00:37:35,450 --> 00:37:41,660
followed by six uppercase letters took

884
00:37:39,290 --> 00:37:43,730
57 seconds to run and this was this was

885
00:37:41,660 --> 00:37:47,118
on the yoda machines which was the cpu

886
00:37:43,730 --> 00:37:48,950
machine and it cracked 446 passwords and

887
00:37:47,119 --> 00:37:50,900
that was just with six uppercase letters

888
00:37:48,950 --> 00:37:53,328
falling if we changed in a five or seven

889
00:37:50,900 --> 00:37:54,770
it would have also found more running

890
00:37:53,329 --> 00:37:56,119
against seven would have been orders of

891
00:37:54,770 --> 00:37:59,799
magnitude in terms of the amount of time

892
00:37:56,119 --> 00:37:59,799
it took yes

893
00:38:01,830 --> 00:38:05,400
and that you can buy 30 minutes of CPU

894
00:38:04,750 --> 00:38:07,500
time

895
00:38:05,400 --> 00:38:09,480
for about five

896
00:38:07,500 --> 00:38:12,510
street value yours

897
00:38:09,480 --> 00:38:15,530
for optimizing rules like this versus

898
00:38:12,510 --> 00:38:15,530
just being dumb

899
00:38:15,890 --> 00:38:19,200
and that's where they get that good

900
00:38:17,790 --> 00:38:21,090
point I think that really depends on

901
00:38:19,200 --> 00:38:23,160
your situation if I'm working as a

902
00:38:21,090 --> 00:38:24,960
consultant and I'm getting paid by the

903
00:38:23,160 --> 00:38:27,390
now or there's an opportunity cost I

904
00:38:24,960 --> 00:38:29,280
could be using my time to get paid my

905
00:38:27,390 --> 00:38:30,690
time is worth a lot of money it's worth

906
00:38:29,280 --> 00:38:33,660
a whole lot more than two dollars and 10

907
00:38:30,690 --> 00:38:34,680
cents per hour right so that's an

908
00:38:33,660 --> 00:38:36,089
excellent point and that's one of the

909
00:38:34,680 --> 00:38:39,359
takeaways we want to leave you with is

910
00:38:36,090 --> 00:38:41,100
your time is worth something and so it's

911
00:38:39,360 --> 00:38:42,990
not really important a lot of cases that

912
00:38:41,100 --> 00:38:44,819
come up with the most optimal cracking

913
00:38:42,990 --> 00:38:46,410
rules especially if your goal is not to

914
00:38:44,820 --> 00:38:48,120
have a hundred percent of the passwords

915
00:38:46,410 --> 00:38:51,480
cracked if you're trying to make the

916
00:38:48,120 --> 00:38:53,520
case to a client that their password

917
00:38:51,480 --> 00:38:55,260
algorithm or policies week or they're

918
00:38:53,520 --> 00:38:56,610
hashing algorithms week you don't need

919
00:38:55,260 --> 00:38:59,400
to crack 100 percent of their passwords

920
00:38:56,610 --> 00:39:02,370
to prove that in this case we ran it for

921
00:38:59,400 --> 00:39:04,680
about a little over two hours and got

922
00:39:02,370 --> 00:39:06,540
four hundred thousand-plus of the one

923
00:39:04,680 --> 00:39:07,950
and a half million passwords we could

924
00:39:06,540 --> 00:39:11,550
have gotten more than million if we had

925
00:39:07,950 --> 00:39:13,379
crafted the rules differently or we had

926
00:39:11,550 --> 00:39:19,740
run it for longer or if we'd run it on

927
00:39:13,380 --> 00:39:21,150
the GPU node so let's move on and here's

928
00:39:19,740 --> 00:39:22,740
what the results look like it's an

929
00:39:21,150 --> 00:39:25,410
output file it shows the hashes and the

930
00:39:22,740 --> 00:39:27,529
plaintext passwords okay now now we get

931
00:39:25,410 --> 00:39:29,879
to the fun part which is the rate so

932
00:39:27,530 --> 00:39:32,220
zelda was the machine that was Randy's

933
00:39:29,880 --> 00:39:34,590
laptop and we ran consistent tasks

934
00:39:32,220 --> 00:39:37,080
across these three machines zelda

935
00:39:34,590 --> 00:39:39,690
cracked 14,000 passwords per second and

936
00:39:37,080 --> 00:39:41,520
this was using md5 hashes we were

937
00:39:39,690 --> 00:39:44,450
testing the same 1 and a half million

938
00:39:41,520 --> 00:39:44,450
record data set

939
00:39:45,080 --> 00:39:50,720
there was a crack in that that was what

940
00:39:47,840 --> 00:39:52,160
it was it was processing password

941
00:39:50,720 --> 00:39:53,390
attempts at that rate doesn't actually

942
00:39:52,160 --> 00:39:55,700
meet randa's right it doesn't actually

943
00:39:53,390 --> 00:39:56,750
mean it acquired 14,000 passwords per

944
00:39:55,700 --> 00:39:59,089
second

945
00:39:56,750 --> 00:40:01,280
Yoda which was the CPU box that cost us

946
00:39:59,090 --> 00:40:04,010
32 cents burn per hour

947
00:40:01,280 --> 00:40:06,380
cracked 6 million per second and exhibit

948
00:40:04,010 --> 00:40:08,810
was cracking 1.6 billion that was the

949
00:40:06,380 --> 00:40:11,510
GPU machine so you can see exhibit the

950
00:40:08,810 --> 00:40:13,460
GPU machine cracked at a rate of 114

951
00:40:11,510 --> 00:40:16,910
thousand times of what Randy's laptop

952
00:40:13,460 --> 00:40:19,130
did and 258 times what the CPU machine

953
00:40:16,910 --> 00:40:22,430
did so the real important number I think

954
00:40:19,130 --> 00:40:25,550
is the 258th because it cost about six

955
00:40:22,430 --> 00:40:27,830
times as much as this Amazon CPU machine

956
00:40:25,550 --> 00:40:31,880
to run the GPU machine but we were able

957
00:40:27,830 --> 00:40:34,009
crack at 258 times the rate so if money

958
00:40:31,880 --> 00:40:36,320
is an important factor to you and you

959
00:40:34,010 --> 00:40:38,330
have more than a budget of 32 cents it

960
00:40:36,320 --> 00:40:44,320
would almost always make sense to run it

961
00:40:38,330 --> 00:40:44,319
again on the GPU machine yes

962
00:40:45,650 --> 00:40:50,560
right

963
00:40:47,500 --> 00:40:55,800
and number and the idea would be

964
00:40:50,560 --> 00:40:55,799
occupied like so I am not really sure

965
00:40:56,200 --> 00:41:00,370
if this particular instance is that's

966
00:40:58,270 --> 00:41:02,770
you but if you try to save instance on

967
00:41:00,370 --> 00:41:04,868
lingual I would probably guess in a

968
00:41:02,770 --> 00:41:07,329
mother one being courted

969
00:41:04,869 --> 00:41:10,660
does allows all for sweets like all

970
00:41:07,329 --> 00:41:14,390
characteristics so that 2,095 so Frank

971
00:41:10,660 --> 00:41:19,069
you are not going to go and pull

972
00:41:14,390 --> 00:41:21,109
even though that's true that's true and

973
00:41:19,070 --> 00:41:23,630
so it really depends on what what your

974
00:41:21,110 --> 00:41:25,550
hash file looks like and the password

975
00:41:23,630 --> 00:41:27,860
policy and the Christian algorithm so I

976
00:41:25,550 --> 00:41:30,590
agree it really depends I found pretty

977
00:41:27,860 --> 00:41:33,260
much across my entire career though that

978
00:41:30,590 --> 00:41:34,640
most organizations even if they allow

979
00:41:33,260 --> 00:41:35,900
you to use special characters and do

980
00:41:34,640 --> 00:41:39,379
those kind of things people follow

981
00:41:35,900 --> 00:41:41,150
fairly predictable rules and but but it

982
00:41:39,380 --> 00:41:43,010
really depends it could be you work for

983
00:41:41,150 --> 00:41:45,080
an organization that requires you to

984
00:41:43,010 --> 00:41:46,760
generate a random password using special

985
00:41:45,080 --> 00:41:48,920
characters and store it in something

986
00:41:46,760 --> 00:41:51,110
like key pass or a key escrow and this

987
00:41:48,920 --> 00:41:53,870
may not work as well so that's a great

988
00:41:51,110 --> 00:41:56,120
point okay

989
00:41:53,870 --> 00:41:57,410
so I think we're gonna have to move

990
00:41:56,120 --> 00:41:59,390
through some of this so we can get to

991
00:41:57,410 --> 00:42:00,890
the passphrase piece because I think we

992
00:41:59,390 --> 00:42:05,299
only have about ten more minutes

993
00:42:00,890 --> 00:42:07,879
but what tools that you use and whether

994
00:42:05,300 --> 00:42:10,310
you decide to do it yourself or use a

995
00:42:07,880 --> 00:42:12,200
CPU or GPU really depends on what your

996
00:42:10,310 --> 00:42:17,540
constraints are if you're in a situation

997
00:42:12,200 --> 00:42:20,000
where your boss comes to you and says I

998
00:42:17,540 --> 00:42:22,340
need you to crack as many passwords as

999
00:42:20,000 --> 00:42:26,230
you can to demonstrate to the board of

1000
00:42:22,340 --> 00:42:29,360
directors by tomorrow that our password

1001
00:42:26,230 --> 00:42:32,180
policy is too weak to make a case for

1002
00:42:29,360 --> 00:42:33,860
two factor authentication you don't have

1003
00:42:32,180 --> 00:42:35,720
time to buy hardware and set up a

1004
00:42:33,860 --> 00:42:38,210
machine you would probably want to do

1005
00:42:35,720 --> 00:42:41,180
something like use GPU boxes on Amazon

1006
00:42:38,210 --> 00:42:42,920
ec2 I should mention per account you can

1007
00:42:41,180 --> 00:42:44,600
only set up two of those if you want

1008
00:42:42,920 --> 00:42:46,760
more than two you actually have to make

1009
00:42:44,600 --> 00:42:51,560
a special request to them it's not hard

1010
00:42:46,760 --> 00:42:53,210
to do though okay but you can actually

1011
00:42:51,560 --> 00:42:54,680
save money if time is not your

1012
00:42:53,210 --> 00:42:57,890
constraint you can use spot instances

1013
00:42:54,680 --> 00:42:59,960
and so Amazon may have available extra

1014
00:42:57,890 --> 00:43:01,339
capacity it's probably hard to tell on

1015
00:42:59,960 --> 00:43:03,220
the screen but the same machine that

1016
00:43:01,340 --> 00:43:05,600
cost us two dollars in 10 cents per hour

1017
00:43:03,220 --> 00:43:08,060
currently has a spot price of thirty

1018
00:43:05,600 --> 00:43:10,190
four and a half cents per hour you can

1019
00:43:08,060 --> 00:43:11,660
spit an amount you probably want to bend

1020
00:43:10,190 --> 00:43:13,130
them amount more than that specify the

1021
00:43:11,660 --> 00:43:15,950
total number of servers that you want

1022
00:43:13,130 --> 00:43:17,120
and if you don't mind maybe tomorrow not

1023
00:43:15,950 --> 00:43:18,980
getting any servers

1024
00:43:17,120 --> 00:43:21,259
the next day you get some you can

1025
00:43:18,980 --> 00:43:23,600
utilize this and you can automate it so

1026
00:43:21,260 --> 00:43:24,830
that you pass hashes and rule sets the

1027
00:43:23,600 --> 00:43:26,630
different machines

1028
00:43:24,830 --> 00:43:28,759
and then you have more nerves to perform

1029
00:43:26,630 --> 00:43:30,830
the attack against it saves you a lot of

1030
00:43:28,760 --> 00:43:32,090
money if you're able to do this it's not

1031
00:43:30,830 --> 00:43:33,500
going to work in every case it really

1032
00:43:32,090 --> 00:43:40,790
depends on what your needs are from a

1033
00:43:33,500 --> 00:43:42,200
business perspective in terms of

1034
00:43:40,790 --> 00:43:44,270
splitting the workload across the

1035
00:43:42,200 --> 00:43:45,589
server's the best way to do that that we

1036
00:43:44,270 --> 00:43:46,220
found and if anyone has a different

1037
00:43:45,590 --> 00:43:48,440
perspective

1038
00:43:46,220 --> 00:43:50,870
definitely chime in is to break it by

1039
00:43:48,440 --> 00:43:55,460
route down by rule set so for example if

1040
00:43:50,870 --> 00:43:57,710
you wanted to try every string that

1041
00:43:55,460 --> 00:44:00,500
began with an uppercase letter followed

1042
00:43:57,710 --> 00:44:02,480
by seven numerix you could send to one

1043
00:44:00,500 --> 00:44:05,060
server all the rule sets to begin with a

1044
00:44:02,480 --> 00:44:07,010
capital A another one all the rule sets

1045
00:44:05,060 --> 00:44:08,090
begin with a B you could have 20 it's

1046
00:44:07,010 --> 00:44:11,000
not the only way you can divide you

1047
00:44:08,090 --> 00:44:13,250
could have 26 machines dividing the work

1048
00:44:11,000 --> 00:44:16,760
and reporting into a central machine the

1049
00:44:13,250 --> 00:44:18,590
work will get done in 126 - the time if

1050
00:44:16,760 --> 00:44:20,690
you have it all being sent to a central

1051
00:44:18,590 --> 00:44:22,700
machine that keeps track of what hashes

1052
00:44:20,690 --> 00:44:24,800
have been cracked you can also reduce

1053
00:44:22,700 --> 00:44:27,319
the time load because you can tell those

1054
00:44:24,800 --> 00:44:29,210
child servers that they don't need to

1055
00:44:27,320 --> 00:44:32,470
continue to try to crack certain hashes

1056
00:44:29,210 --> 00:44:32,470
all being cracked by a different machine

1057
00:44:33,310 --> 00:44:39,500
okay you want don't you talk about this

1058
00:44:37,220 --> 00:44:41,149
attacker that he did and disciplining of

1059
00:44:39,500 --> 00:44:44,690
the actually these numbers aren't right

1060
00:44:41,150 --> 00:44:46,520
so never mind the gist of this is the

1061
00:44:44,690 --> 00:44:47,960
best way to split attack is not by

1062
00:44:46,520 --> 00:44:49,759
splitting up the hash file it's by

1063
00:44:47,960 --> 00:44:51,020
splitting up the rule sets does anyone I

1064
00:44:49,760 --> 00:44:53,930
found different results than that from

1065
00:44:51,020 --> 00:44:55,580
your password cracking okay ignore these

1066
00:44:53,930 --> 00:44:59,960
numbers these numbers are not right they

1067
00:44:55,580 --> 00:45:01,400
were placeholders okay so we talked a

1068
00:44:59,960 --> 00:45:03,500
little bit about building dictionaries

1069
00:45:01,400 --> 00:45:07,640
bigger dictionaries are not necessarily

1070
00:45:03,500 --> 00:45:09,260
better but what we have not found is

1071
00:45:07,640 --> 00:45:11,080
passphrase dictionaries anyone ever come

1072
00:45:09,260 --> 00:45:14,480
across a passphrase dictionary

1073
00:45:11,080 --> 00:45:16,430
okay so we did some work to see if we

1074
00:45:14,480 --> 00:45:20,000
could build a passphrase dictionary and

1075
00:45:16,430 --> 00:45:21,649
this is an xkcd cartoon the gist of it

1076
00:45:20,000 --> 00:45:23,750
is is they're saying it's harder to

1077
00:45:21,650 --> 00:45:26,970
crack a passphrase than it is a password

1078
00:45:23,750 --> 00:45:29,220
and it's easier to remember it's

1079
00:45:26,970 --> 00:45:30,419
I disagree with a little bit and panel

1080
00:45:29,220 --> 00:45:32,399
five because they're making an

1081
00:45:30,420 --> 00:45:34,530
assumption that the attacker doesn't

1082
00:45:32,400 --> 00:45:37,350
know that the user was using four words

1083
00:45:34,530 --> 00:45:38,880
if you know the Organization recommends

1084
00:45:37,350 --> 00:45:41,759
that their users construct pass phrases

1085
00:45:38,880 --> 00:45:43,800
consisting of four words it's a whole

1086
00:45:41,760 --> 00:45:46,470
lot easier because a combination

1087
00:45:43,800 --> 00:45:48,060
dictionary attack right I though there

1088
00:45:46,470 --> 00:45:50,430
are hundreds of thousands of words in

1089
00:45:48,060 --> 00:45:52,590
any given language the average person

1090
00:45:50,430 --> 00:45:54,240
has a vocabulary of say around ten

1091
00:45:52,590 --> 00:45:57,480
thousand base words so a base word might

1092
00:45:54,240 --> 00:46:00,390
be like run run running runs but they

1093
00:45:57,480 --> 00:46:01,980
don't use them every day so you don't

1094
00:46:00,390 --> 00:46:03,210
have a pool of ten thousand words you're

1095
00:46:01,980 --> 00:46:04,890
ahead generally if you're going to

1096
00:46:03,210 --> 00:46:06,660
create a passphrase that you utilize so

1097
00:46:04,890 --> 00:46:08,220
you can use that that information that

1098
00:46:06,660 --> 00:46:09,810
you know about human behavior that if

1099
00:46:08,220 --> 00:46:13,290
you wanted string words together it's

1100
00:46:09,810 --> 00:46:18,420
not as difficult as just brute force

1101
00:46:13,290 --> 00:46:20,640
attacking in twenty string phrase this

1102
00:46:18,420 --> 00:46:22,380
is information from the article that a

1103
00:46:20,640 --> 00:46:24,720
study that was done recently they

1104
00:46:22,380 --> 00:46:27,090
actually used Amazon's Mechanical Turk

1105
00:46:24,720 --> 00:46:30,089
that people create pass phrases and

1106
00:46:27,090 --> 00:46:32,490
measure which was more secure the 16

1107
00:46:30,090 --> 00:46:34,290
character long pass phrases or the

1108
00:46:32,490 --> 00:46:36,450
passwords if you want to read more about

1109
00:46:34,290 --> 00:46:38,090
it you can follow that bitly link if you

1110
00:46:36,450 --> 00:46:41,009
believe in following shortened URLs

1111
00:46:38,090 --> 00:46:43,860
which we switch to pass phrases to it

1112
00:46:41,010 --> 00:46:47,250
you just say yeah so for about a year

1113
00:46:43,860 --> 00:46:49,560
when I was at UTSA I was advocating

1114
00:46:47,250 --> 00:46:51,260
moving from an eight character complex

1115
00:46:49,560 --> 00:46:54,120
password that people were writing down

1116
00:46:51,260 --> 00:46:55,980
to a fifteen character string that had

1117
00:46:54,120 --> 00:46:57,480
less of a complexity requirement in fact

1118
00:46:55,980 --> 00:46:59,670
completely removed the complexity

1119
00:46:57,480 --> 00:47:03,090
requirement took a year to get by in and

1120
00:46:59,670 --> 00:47:06,630
we eventually moved to it and here's

1121
00:47:03,090 --> 00:47:08,580
some statistics from the historical

1122
00:47:06,630 --> 00:47:10,530
frequency by password length we didn't

1123
00:47:08,580 --> 00:47:12,840
reveal all the information say one want

1124
00:47:10,530 --> 00:47:15,060
to take a guess at what the longest

1125
00:47:12,840 --> 00:47:17,300
passphrase that somebody's using it UTSA

1126
00:47:15,060 --> 00:47:17,299
is

1127
00:47:18,470 --> 00:47:25,680
127 was the max as it was an AED

1128
00:47:20,790 --> 00:47:28,620
limitation their guesses so someone had

1129
00:47:25,680 --> 00:47:30,899
115 character passphrase and they're

1130
00:47:28,620 --> 00:47:32,670
about 15 that had passphrases over 50

1131
00:47:30,900 --> 00:47:36,870
character so it that includes students

1132
00:47:32,670 --> 00:47:39,720
faculty staff volunteers there was a guy

1133
00:47:36,870 --> 00:47:42,839
I saw a guy the other day had game I

1134
00:47:39,720 --> 00:47:45,450
think I was like 51 52 and he was typing

1135
00:47:42,840 --> 00:47:47,070
it in every time but we found that most

1136
00:47:45,450 --> 00:47:49,319
users were resistant when we told them

1137
00:47:47,070 --> 00:47:51,030
we were moving to 15 characters when we

1138
00:47:49,320 --> 00:47:54,510
explained how easy it was to create them

1139
00:47:51,030 --> 00:47:56,340
they actually embrace the idea okay so

1140
00:47:54,510 --> 00:47:58,340
past phrases are really sentences or

1141
00:47:56,340 --> 00:48:00,390
word combinations ooh down so it can be

1142
00:47:58,340 --> 00:48:02,630
acronyms like the first letter of each

1143
00:48:00,390 --> 00:48:05,250
word in a sentence

1144
00:48:02,630 --> 00:48:07,170
I'm gonna move through some of this so

1145
00:48:05,250 --> 00:48:08,550
but how do you get pass phrases I can

1146
00:48:07,170 --> 00:48:09,780
ask you what your passphrase is you

1147
00:48:08,550 --> 00:48:12,330
could tell me and I could build up a

1148
00:48:09,780 --> 00:48:14,430
list I could make some organizations to

1149
00:48:12,330 --> 00:48:16,200
share their pass phrases I know UTSA

1150
00:48:14,430 --> 00:48:17,879
that I no longer work for has the

1151
00:48:16,200 --> 00:48:20,700
passphrase database now so maybe Randy

1152
00:48:17,880 --> 00:48:22,680
can give me some passes for me to work

1153
00:48:20,700 --> 00:48:24,480
on but there's not really a lot of

1154
00:48:22,680 --> 00:48:27,029
passwords out there and even with the

1155
00:48:24,480 --> 00:48:28,770
leaked password files that I found there

1156
00:48:27,030 --> 00:48:30,600
just aren't a lot of pass phrases in

1157
00:48:28,770 --> 00:48:34,020
there so how do we go about building a

1158
00:48:30,600 --> 00:48:35,819
passphrase dictionary so what we

1159
00:48:34,020 --> 00:48:37,680
attempted to do is we looked at some

1160
00:48:35,820 --> 00:48:39,680
various sources like ebooks movie

1161
00:48:37,680 --> 00:48:42,600
scripts song lyrics tweets and

1162
00:48:39,680 --> 00:48:44,339
essentially look for sentences and look

1163
00:48:42,600 --> 00:48:46,950
for some commonality to build up some

1164
00:48:44,340 --> 00:48:50,070
pass phrases these are some of the

1165
00:48:46,950 --> 00:48:51,330
components of the software that I wrote

1166
00:48:50,070 --> 00:48:52,110
we don't really have time to go through

1167
00:48:51,330 --> 00:48:55,290
all the details

1168
00:48:52,110 --> 00:48:58,140
essentially the dictator tells the miner

1169
00:48:55,290 --> 00:49:00,840
what files to acquire a hash is created

1170
00:48:58,140 --> 00:49:02,370
to make sure that we're not pulling that

1171
00:49:00,840 --> 00:49:03,690
if you were making sure the files are

1172
00:49:02,370 --> 00:49:06,029
unique we don't want to process a file

1173
00:49:03,690 --> 00:49:08,340
we've already crossed processed the

1174
00:49:06,030 --> 00:49:09,420
Horner adds the files to the queue files

1175
00:49:08,340 --> 00:49:11,280
were pulled well the key you they're

1176
00:49:09,420 --> 00:49:13,050
converted to plaintext they're then

1177
00:49:11,280 --> 00:49:15,180
converted the lower case because you can

1178
00:49:13,050 --> 00:49:17,280
perform transformations using all these

1179
00:49:15,180 --> 00:49:18,660
tools later on so I we didn't really

1180
00:49:17,280 --> 00:49:20,910
care whether there are upper case

1181
00:49:18,660 --> 00:49:23,819
letters in there and then the splitter

1182
00:49:20,910 --> 00:49:25,750
splits the strings apart by sentence by

1183
00:49:23,820 --> 00:49:27,700
looking for punctuation

1184
00:49:25,750 --> 00:49:29,950
and records this information through a

1185
00:49:27,700 --> 00:49:31,660
database I don't have the schema here

1186
00:49:29,950 --> 00:49:34,390
but there's a couple of different ways

1187
00:49:31,660 --> 00:49:37,240
that that it's being looked at one is

1188
00:49:34,390 --> 00:49:39,009
kind of a easy method that's just

1189
00:49:37,240 --> 00:49:40,779
looking at each sentence another is

1190
00:49:39,010 --> 00:49:44,590
looking for adjacent words so if a

1191
00:49:40,780 --> 00:49:46,510
sentence is I love to eat apples the

1192
00:49:44,590 --> 00:49:48,280
easy way is just to use that as a string

1193
00:49:46,510 --> 00:49:53,770
and then also to convert that into an

1194
00:49:48,280 --> 00:49:55,810
acronym il TBA right but you could also

1195
00:49:53,770 --> 00:49:57,970
pull apart parts of that to create

1196
00:49:55,810 --> 00:50:00,130
phrases take the first two words take

1197
00:49:57,970 --> 00:50:01,750
the first three words and if you pull

1198
00:50:00,130 --> 00:50:05,800
from enough sources you start to notice

1199
00:50:01,750 --> 00:50:08,410
some commonality now that can be used to

1200
00:50:05,800 --> 00:50:10,240
build a passphrase dictionary and I

1201
00:50:08,410 --> 00:50:12,190
don't have one available to release yet

1202
00:50:10,240 --> 00:50:13,419
but sometime in the next few weeks we're

1203
00:50:12,190 --> 00:50:15,430
going to be releasing a passphrase

1204
00:50:13,420 --> 00:50:17,290
dictionary and making available the

1205
00:50:15,430 --> 00:50:19,359
front end part of the tools so people

1206
00:50:17,290 --> 00:50:20,920
can build their own the challenge with

1207
00:50:19,359 --> 00:50:23,440
this is is with building password

1208
00:50:20,920 --> 00:50:25,810
dictionaries it's easy to test them

1209
00:50:23,440 --> 00:50:27,640
against other data sets but we don't

1210
00:50:25,810 --> 00:50:30,460
have any good passphrase data sets to

1211
00:50:27,640 --> 00:50:32,440
test against so though we can find that

1212
00:50:30,460 --> 00:50:34,900
some pass phrases are fairly common

1213
00:50:32,440 --> 00:50:37,330
because they get tweeted a lot or used

1214
00:50:34,900 --> 00:50:38,950
in facebook status updates or their

1215
00:50:37,330 --> 00:50:41,770
phrases that are in the Bible that

1216
00:50:38,950 --> 00:50:43,118
people use all over the place we don't

1217
00:50:41,770 --> 00:50:45,400
know that they're actually being used

1218
00:50:43,119 --> 00:50:47,170
it's pass phrases and organizations

1219
00:50:45,400 --> 00:50:49,780
where people use those so any of you

1220
00:50:47,170 --> 00:50:51,849
happen to have any passphrase databases

1221
00:50:49,780 --> 00:50:53,650
or no organizations we could talk to

1222
00:50:51,849 --> 00:50:54,880
we'd love to collaborate with them to

1223
00:50:53,650 --> 00:50:59,349
figure out if this technique would

1224
00:50:54,880 --> 00:51:01,000
actually be valuable any any questions

1225
00:50:59,349 --> 00:51:02,410
about the password and I'm sorry we had

1226
00:51:01,000 --> 00:51:03,640
to kind of run through that pretty

1227
00:51:02,410 --> 00:51:07,440
quickly any questions about the

1228
00:51:03,640 --> 00:51:07,440
passphrase generation piece yes

1229
00:51:08,349 --> 00:51:13,680
they're just strength works they're not

1230
00:51:13,870 --> 00:51:19,000
so the methodology doesn't actually look

1231
00:51:16,120 --> 00:51:22,060
at that now down the road it would be

1232
00:51:19,000 --> 00:51:23,560
nice to look at the whether it's a verb

1233
00:51:22,060 --> 00:51:25,779
or a noun and kind of string it together

1234
00:51:23,560 --> 00:51:27,370
that way it doesn't care it's just

1235
00:51:25,780 --> 00:51:29,950
looking to see if there's punctuation

1236
00:51:27,370 --> 00:51:31,900
now you might encounter some data files

1237
00:51:29,950 --> 00:51:34,029
where there is no punctuation it could

1238
00:51:31,900 --> 00:51:36,370
be like a poem so you can also look at

1239
00:51:34,030 --> 00:51:38,680
splitting based on new lines but no so

1240
00:51:36,370 --> 00:51:40,870
if it's just a string that consists of

1241
00:51:38,680 --> 00:51:44,230
all nouns and it appears enough and

1242
00:51:40,870 --> 00:51:47,170
enough the data sources it counts how

1243
00:51:44,230 --> 00:51:48,850
many times that appears now it have to

1244
00:51:47,170 --> 00:51:50,860
be careful if it appears a lot of times

1245
00:51:48,850 --> 00:51:52,120
let's say in tweets that might be

1246
00:51:50,860 --> 00:51:53,950
something somebody might use as a

1247
00:51:52,120 --> 00:51:56,200
passphrase but if it appears a thousand

1248
00:51:53,950 --> 00:51:58,330
times on the same website it might just

1249
00:51:56,200 --> 00:52:00,549
be their disclaimer at the bottom of the

1250
00:51:58,330 --> 00:52:02,350
website so it really needs to be tweaked

1251
00:52:00,550 --> 00:52:04,810
to adjust for that and that hasn't been

1252
00:52:02,350 --> 00:52:06,400
done yet and that the coding that's

1253
00:52:04,810 --> 00:52:11,200
being used is not very efficient either

1254
00:52:06,400 --> 00:52:14,580
at this point okay any other questions

1255
00:52:11,200 --> 00:52:14,580
so we yes

1256
00:52:22,330 --> 00:52:28,130
the passwords on

1257
00:52:24,130 --> 00:52:31,110
or is it just sort of and

1258
00:52:28,130 --> 00:52:33,960
so some of them get posted to sites like

1259
00:52:31,110 --> 00:52:36,570
school security I monitor Twitter pretty

1260
00:52:33,960 --> 00:52:39,000
regularly and have some colleagues that

1261
00:52:36,570 --> 00:52:40,640
are building up databases Lee so I just

1262
00:52:39,000 --> 00:52:43,230
really worked my network to get those

1263
00:52:40,640 --> 00:52:48,120
there are people that are mining paceman

1264
00:52:43,230 --> 00:52:56,120
bird ops skål skål security I think it's

1265
00:52:48,120 --> 00:52:56,120
scull security org so don't worry yes

1266
00:52:58,370 --> 00:53:06,339
oh yeah it golden master or the B string

1267
00:53:02,510 --> 00:53:06,340
a little bit plain

1268
00:53:07,160 --> 00:53:09,819
to go in

1269
00:53:10,550 --> 00:53:16,450
you

1270
00:53:13,240 --> 00:53:18,529
usually for people to connect really it

1271
00:53:16,450 --> 00:53:20,819
has some inbuilt logic

1272
00:53:18,530 --> 00:53:23,460
falling dominoes

1273
00:53:20,820 --> 00:53:27,240
EEMA

1274
00:53:23,460 --> 00:53:29,220
let's go to now yeah a lot of the dumps

1275
00:53:27,240 --> 00:53:31,529
aren't paceman or sometimes very small

1276
00:53:29,220 --> 00:53:33,149
so they may not provide a lot value I've

1277
00:53:31,530 --> 00:53:35,940
also analyzed some of those and found

1278
00:53:33,150 --> 00:53:37,319
that it appears sometimes that there's

1279
00:53:35,940 --> 00:53:39,569
an administrator that's creating

1280
00:53:37,319 --> 00:53:41,609
passwords for their users so they may

1281
00:53:39,569 --> 00:53:43,200
all have the same password or that you

1282
00:53:41,609 --> 00:53:44,940
might actually learn a lot from them so

1283
00:53:43,200 --> 00:53:47,430
it really depends on what the use case

1284
00:53:44,940 --> 00:53:49,079
is they also it really can vary if it's

1285
00:53:47,430 --> 00:53:50,520
if it's a different country using a

1286
00:53:49,079 --> 00:53:52,440
different language and may or may not

1287
00:53:50,520 --> 00:53:55,280
provide you value to base based on what

1288
00:53:52,440 --> 00:53:55,280
your user said is

1289
00:53:56,960 --> 00:54:01,979
[Music]

1290
00:54:02,300 --> 00:54:07,570
reinforcements

1291
00:54:03,640 --> 00:54:09,910
I would recommend using passphrases now

1292
00:54:07,570 --> 00:54:12,640
one of the advantages is just by having

1293
00:54:09,910 --> 00:54:14,950
a long length most of the attacks that

1294
00:54:12,640 --> 00:54:17,080
your bad actors are going to perform are

1295
00:54:14,950 --> 00:54:18,520
going to involve shorter lengths so that

1296
00:54:17,080 --> 00:54:21,270
you may never actually test the key

1297
00:54:18,520 --> 00:54:23,710
space that you utilize also if you use

1298
00:54:21,270 --> 00:54:25,360
it's kind of a trade-off if you use

1299
00:54:23,710 --> 00:54:28,720
special characters that do not appear on

1300
00:54:25,360 --> 00:54:31,060
the keyboard if the character set allows

1301
00:54:28,720 --> 00:54:32,740
that it's unlikely they'll be guests the

1302
00:54:31,060 --> 00:54:35,200
downside is if you're entering it from

1303
00:54:32,740 --> 00:54:36,790
something like a smartphone you as a

1304
00:54:35,200 --> 00:54:38,710
user may not be able to actually enter

1305
00:54:36,790 --> 00:54:40,360
your password in easily so you won't

1306
00:54:38,710 --> 00:54:44,080
have any specific recommendations in

1307
00:54:40,360 --> 00:54:46,470
terms of password creation or you have a

1308
00:54:44,080 --> 00:54:46,470
question

1309
00:54:47,620 --> 00:54:50,799
[Music]

1310
00:54:54,840 --> 00:54:59,720
it generates long obviously

1311
00:55:03,440 --> 00:55:06,579
[Music]

1312
00:55:08,140 --> 00:55:13,140
right

1313
00:55:10,090 --> 00:55:13,140
I like to do

1314
00:55:14,720 --> 00:55:22,078
I knew the question yes

1315
00:55:17,859 --> 00:55:22,078
did you generate your own password

1316
00:55:24,349 --> 00:55:27,369
but better out the rulings

1317
00:55:28,710 --> 00:55:33,359
or measure the difference and we didn't

1318
00:55:31,650 --> 00:55:35,670
do that because that's actually pretty

1319
00:55:33,359 --> 00:55:38,220
readily available in terms of the speed

1320
00:55:35,670 --> 00:55:40,829
differences for those algorithms I mean

1321
00:55:38,220 --> 00:55:43,078
md5 and sha-1 OTT designed for passwords

1322
00:55:40,829 --> 00:55:45,950
they're pretty fast you want to use an

1323
00:55:43,079 --> 00:55:48,150
algorithm like bcrypt which is slower

1324
00:55:45,950 --> 00:55:50,578
because it makes it much more difficult

1325
00:55:48,150 --> 00:55:53,369
well using salting and an algorithm like

1326
00:55:50,579 --> 00:55:55,559
decrypt makes it much much much more

1327
00:55:53,369 --> 00:55:57,779
difficult for an attacker to acquire the

1328
00:55:55,559 --> 00:55:59,640
password so I thought that's what I'd

1329
00:55:57,779 --> 00:56:03,059
recommend and maybe these cases they're

1330
00:55:59,640 --> 00:56:05,098
just completely unsalted passwords and

1331
00:56:03,059 --> 00:56:06,809
another tool you can use is key path it

1332
00:56:05,099 --> 00:56:08,940
does something similar to what you're

1333
00:56:06,809 --> 00:56:10,020
talking about with Auto generation also

1334
00:56:08,940 --> 00:56:12,839
works on a lot of different platforms

1335
00:56:10,020 --> 00:56:15,599
like iOS and Android one of the one of

1336
00:56:12,839 --> 00:56:17,279
the caveats though is there are quite a

1337
00:56:15,599 --> 00:56:19,740
few websites that will allow you to

1338
00:56:17,279 --> 00:56:21,539
create a longer pass password or

1339
00:56:19,740 --> 00:56:24,118
passphrase then they will allow you to

1340
00:56:21,539 --> 00:56:26,069
log in with so if you create it using

1341
00:56:24,119 --> 00:56:28,559
one of those tools and paste in your

1342
00:56:26,069 --> 00:56:31,500
Hunger character password sometimes they

1343
00:56:28,559 --> 00:56:33,809
will allow that then the HTML input box

1344
00:56:31,500 --> 00:56:35,250
when you log in it will get truncated to

1345
00:56:33,809 --> 00:56:36,720
something shorter and you will not be

1346
00:56:35,250 --> 00:56:39,150
able to log in you won't know why

1347
00:56:36,720 --> 00:56:41,308
because you'll be seeing obfuscated

1348
00:56:39,150 --> 00:56:42,990
asterisks and you won't be able to tell

1349
00:56:41,309 --> 00:56:46,200
that your entire password wasn't passed

1350
00:56:42,990 --> 00:56:47,848
in so completely outside of what we were

1351
00:56:46,200 --> 00:56:48,990
talking about but a bit of a pet peeve

1352
00:56:47,849 --> 00:56:51,569
that would be nice of all organizations

1353
00:56:48,990 --> 00:56:53,098
would address if any of you have any

1354
00:56:51,569 --> 00:56:54,869
additional questions we'll be outside if

1355
00:56:53,099 --> 00:56:57,690
you have you want to track us down we

1356
00:56:54,869 --> 00:57:01,950
also don't mind if you contact us via

1357
00:56:57,690 --> 00:57:03,560
email or Twitter well thanks for your

1358
00:57:01,950 --> 00:57:06,710
time

1359
00:57:03,560 --> 00:57:06,710
[Applause]

