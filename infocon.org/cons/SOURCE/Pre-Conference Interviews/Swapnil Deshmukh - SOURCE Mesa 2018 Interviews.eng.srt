1
00:00:05,150 --> 00:00:10,490
[Music]

2
00:00:08,350 --> 00:00:12,440
hi this is rob machine with a source

3
00:00:10,490 --> 00:00:14,660
conference and today i'm here with

4
00:00:12,440 --> 00:00:15,830
Swapnil Deshmukh and we're gonna be

5
00:00:14,660 --> 00:00:18,230
talking about his talk that he's gonna

6
00:00:15,830 --> 00:00:22,240
be doing at the source Phoenix event on

7
00:00:18,230 --> 00:00:25,310
February 28th and March 1st so uh

8
00:00:22,240 --> 00:00:26,419
Swapnil your talk is pack your Android

9
00:00:25,310 --> 00:00:29,270
everything you needed to know about

10
00:00:26,420 --> 00:00:34,190
Android boxing so could you tell us a

11
00:00:29,270 --> 00:00:36,050
little about your talk sure so there is

12
00:00:34,190 --> 00:00:39,680
a very interesting trend as thousands in

13
00:00:36,050 --> 00:00:42,349
2017 where a lot of malware's were

14
00:00:39,680 --> 00:00:44,510
published in Google Play Store and went

15
00:00:42,350 --> 00:00:47,030
completely unnoticed for longest of the

16
00:00:44,510 --> 00:00:50,178
time in fact there was a report that

17
00:00:47,030 --> 00:00:52,159
came out that stated that one in three

18
00:00:50,179 --> 00:00:55,010
applications that were released in 2017

19
00:00:52,159 --> 00:00:56,929
had some of the other malicious content

20
00:00:55,010 --> 00:00:58,638
on the Android phone which was

21
00:00:56,929 --> 00:01:01,879
collecting a lot of user information

22
00:00:58,639 --> 00:01:03,949
itself without user knowing about it so

23
00:01:01,879 --> 00:01:06,350
that got me thinking about why exactly

24
00:01:03,949 --> 00:01:09,080
are we not able to identify those

25
00:01:06,350 --> 00:01:11,658
threads or the malware's before it's

26
00:01:09,080 --> 00:01:13,610
been released to Play Store and what I

27
00:01:11,659 --> 00:01:16,369
noticed was a lot of Android

28
00:01:13,610 --> 00:01:18,680
applications were packed what that means

29
00:01:16,369 --> 00:01:21,229
is that it's been hardened in some form

30
00:01:18,680 --> 00:01:25,579
either it's been also skated or it's

31
00:01:21,229 --> 00:01:27,079
been protected or it's been part so so

32
00:01:25,579 --> 00:01:29,630
when I started digging through this I

33
00:01:27,079 --> 00:01:31,699
noticed that there are lot many loops

34
00:01:29,630 --> 00:01:33,710
that you have to jump through in order

35
00:01:31,700 --> 00:01:35,859
to understand what that malicious

36
00:01:33,710 --> 00:01:38,178
content is trying to do they have

37
00:01:35,859 --> 00:01:39,919
various protections in place that will

38
00:01:38,179 --> 00:01:42,229
identify if it's running in an emulated

39
00:01:39,920 --> 00:01:44,329
environment or it's running in a rooted

40
00:01:42,229 --> 00:01:47,750
device itself which makes it a little

41
00:01:44,329 --> 00:01:50,658
harder for the Google Play stores or our

42
00:01:47,750 --> 00:01:55,159
trusted app stores itself to identify it

43
00:01:50,659 --> 00:01:58,130
early so I started a github project that

44
00:01:55,159 --> 00:01:59,689
would basically be an abstraction of all

45
00:01:58,130 --> 00:02:01,880
the different malicious contents that

46
00:01:59,689 --> 00:02:04,609
are already out there so it looks for

47
00:02:01,880 --> 00:02:06,740
the signatures of those and what it's

48
00:02:04,609 --> 00:02:08,299
trying to do is it's looking for the

49
00:02:06,740 --> 00:02:10,340
hardened application and trying to

50
00:02:08,300 --> 00:02:12,470
unhardened those applications first and

51
00:02:10,340 --> 00:02:16,580
then looking for a malicious payload

52
00:02:12,470 --> 00:02:18,770
itself so that that's where the talk

53
00:02:16,580 --> 00:02:21,370
comes in play the talk is going to be

54
00:02:18,770 --> 00:02:23,470
focused around how to

55
00:02:21,370 --> 00:02:25,780
identify the hardened application and

56
00:02:23,470 --> 00:02:28,030
what kind of a hardening mechanisms are

57
00:02:25,780 --> 00:02:30,310
they using at the first place and then

58
00:02:28,030 --> 00:02:35,349
once we understand that how can we use

59
00:02:30,310 --> 00:02:36,760
static code analysis to unhardened that

60
00:02:35,349 --> 00:02:39,399
application and understand what

61
00:02:36,760 --> 00:02:43,480
malicious payload is being injected as a

62
00:02:39,400 --> 00:02:48,730
given point so that's that's the gist of

63
00:02:43,480 --> 00:02:49,569
the entire talk oh so uh yeah it's

64
00:02:48,730 --> 00:02:51,790
interesting as I was reading through

65
00:02:49,569 --> 00:02:54,819
your abstract noticing all the different

66
00:02:51,790 --> 00:02:56,798
ways that they make it hard to detect

67
00:02:54,819 --> 00:02:59,708
what they're doing so they you know

68
00:02:56,799 --> 00:03:01,569
they'll obviously the data they pack

69
00:02:59,709 --> 00:03:02,829
everything up so basically the normal

70
00:03:01,569 --> 00:03:05,560
kinds of tools that you would use to

71
00:03:02,829 --> 00:03:08,519
find issues aren't going to work so your

72
00:03:05,560 --> 00:03:12,790
project then basically undoes that

73
00:03:08,519 --> 00:03:14,920
that's right and there are certainly

74
00:03:12,790 --> 00:03:18,370
some research work around this but they

75
00:03:14,920 --> 00:03:19,809
were in 2014 and 2015 so a lot of tools

76
00:03:18,370 --> 00:03:21,900
that they released along with that has

77
00:03:19,810 --> 00:03:24,730
been completely office catered oh sorry

78
00:03:21,900 --> 00:03:28,060
not office catered that's not being used

79
00:03:24,730 --> 00:03:29,590
anymore it's completely obsolete so as a

80
00:03:28,060 --> 00:03:31,599
result of that I'm creating a github

81
00:03:29,590 --> 00:03:35,169
project that would be a live document

82
00:03:31,599 --> 00:03:38,768
where everyone can contribute to it got

83
00:03:35,169 --> 00:03:41,139
it and the the things where you said

84
00:03:38,769 --> 00:03:43,150
it's it's detecting if you're running in

85
00:03:41,139 --> 00:03:44,829
an emulated environment or in a root

86
00:03:43,150 --> 00:03:47,019
environment how does it

87
00:03:44,829 --> 00:03:49,299
what by doing that how is that

88
00:03:47,019 --> 00:03:53,049
preventing the researcher from finding

89
00:03:49,299 --> 00:03:57,400
the issues so if you look at Google

90
00:03:53,049 --> 00:03:59,109
bouncer which is a app that has been

91
00:03:57,400 --> 00:04:01,780
used by Google Playstore itself to

92
00:03:59,109 --> 00:04:04,480
identify malicious content it runs in an

93
00:04:01,780 --> 00:04:06,340
emulated environment so as a malicious

94
00:04:04,480 --> 00:04:08,379
author itself what they try to do is

95
00:04:06,340 --> 00:04:11,049
identify it that's running in a in a

96
00:04:08,379 --> 00:04:13,929
emulated environment and then they will

97
00:04:11,049 --> 00:04:16,389
not inflate their malicious content on

98
00:04:13,930 --> 00:04:18,880
the emulated environment itself as a

99
00:04:16,389 --> 00:04:22,150
result of that when Google bouncer is

100
00:04:18,880 --> 00:04:24,039
evaluating the application or trying to

101
00:04:22,150 --> 00:04:27,370
run it in an emulator environment to see

102
00:04:24,039 --> 00:04:29,979
what the application actually does the

103
00:04:27,370 --> 00:04:33,039
malicious payload itself at no given

104
00:04:29,979 --> 00:04:35,460
point has been inflated which is not run

105
00:04:33,039 --> 00:04:37,680
on the device itself right

106
00:04:35,460 --> 00:04:38,909
so it actually runs so actually runs

107
00:04:37,680 --> 00:04:41,490
differently when they're testing at

108
00:04:38,909 --> 00:04:44,400
versus in the actual real environment

109
00:04:41,490 --> 00:04:47,129
then you got it huh that's really

110
00:04:44,400 --> 00:04:50,789
interesting yeah that makes it tough to

111
00:04:47,129 --> 00:04:54,539
find doesn't it it really does and there

112
00:04:50,789 --> 00:04:56,639
was an application called P Z that was

113
00:04:54,539 --> 00:05:00,599
detected recently in fact in November

114
00:04:56,639 --> 00:05:02,939
last week of November and it was there

115
00:05:00,599 --> 00:05:04,530
for like one and a half years on most of

116
00:05:02,939 --> 00:05:06,930
the trusted app stores that we have for

117
00:05:04,530 --> 00:05:08,698
Android and the reason why we were not

118
00:05:06,930 --> 00:05:10,770
able to detect it is because they were

119
00:05:08,699 --> 00:05:12,479
looking for if it's running in an

120
00:05:10,770 --> 00:05:16,799
emulated environment or is it running in

121
00:05:12,479 --> 00:05:18,120
a real devices it's off since there are

122
00:05:16,800 --> 00:05:20,310
challenges like those there are

123
00:05:18,120 --> 00:05:22,080
certainly ways that malicious authors

124
00:05:20,310 --> 00:05:25,080
have found ways of how they can

125
00:05:22,080 --> 00:05:27,240
circumvent from getting detected right

126
00:05:25,080 --> 00:05:30,270
and that's particularly scary since you

127
00:05:27,240 --> 00:05:32,400
have one in three issue apps that are

128
00:05:30,270 --> 00:05:34,409
malicious and then according to your

129
00:05:32,400 --> 00:05:37,560
abstract they can basically take photos

130
00:05:34,409 --> 00:05:41,009
record calls monitor info about the

131
00:05:37,560 --> 00:05:42,509
Wi-Fi access etc etc excited sounds like

132
00:05:41,009 --> 00:05:46,560
they can basically do all the things the

133
00:05:42,509 --> 00:05:49,379
phone can do you've got it and the scary

134
00:05:46,560 --> 00:05:52,259
part is ransomware is also been on a on

135
00:05:49,379 --> 00:05:53,849
a high this year so we have seen

136
00:05:52,259 --> 00:05:56,219
instances of where they're encrypting

137
00:05:53,849 --> 00:05:58,680
the entire SD card itself or they will

138
00:05:56,219 --> 00:06:01,949
encrypt or lock your device with their

139
00:05:58,680 --> 00:06:05,479
own pin and you ought to pay a certain

140
00:06:01,949 --> 00:06:11,150
bitcoins to them to get the unlock code

141
00:06:05,479 --> 00:06:12,870
so it becomes even more scarier I agree

142
00:06:11,150 --> 00:06:14,339
yeah cuz that's something you could

143
00:06:12,870 --> 00:06:16,169
distribute in mass and hit a lot of

144
00:06:14,339 --> 00:06:18,000
people at once that's crazy

145
00:06:16,169 --> 00:06:20,479
so for your talk who's the target

146
00:06:18,000 --> 00:06:22,529
audience so who would be the best to

147
00:06:20,479 --> 00:06:24,258
hear this information and do something

148
00:06:22,529 --> 00:06:27,870
useful with it

149
00:06:24,259 --> 00:06:30,060
so I'm looking at three different target

150
00:06:27,870 --> 00:06:32,939
audiences at this given point I'm

151
00:06:30,060 --> 00:06:36,449
looking at anyone in everyone who is

152
00:06:32,939 --> 00:06:38,909
using Android applications so I want to

153
00:06:36,449 --> 00:06:41,939
give them an arsenal a tool that they

154
00:06:38,909 --> 00:06:44,990
can scan the application or an apk that

155
00:06:41,939 --> 00:06:47,729
will state out what are the malicious

156
00:06:44,990 --> 00:06:49,409
content in that particular

157
00:06:47,729 --> 00:06:52,770
vacation itself so finding a way of

158
00:06:49,409 --> 00:06:54,990
detecting it and finding a way of how we

159
00:06:52,770 --> 00:06:58,229
can read it to make sure that we are

160
00:06:54,990 --> 00:07:02,249
protecting our devices the second that

161
00:06:58,229 --> 00:07:06,539
I'm looking at is a security personnel

162
00:07:02,249 --> 00:07:09,719
who is evaluating code or evaluating apk

163
00:07:06,539 --> 00:07:12,058
or the Android application itself by

164
00:07:09,719 --> 00:07:14,939
providing them a tool on how they can do

165
00:07:12,059 --> 00:07:17,249
it in the most efficient way so that

166
00:07:14,939 --> 00:07:20,370
says my second target audience and the

167
00:07:17,249 --> 00:07:23,779
third target audiences dev cyclopses

168
00:07:20,370 --> 00:07:27,629
sitting along as well right so any

169
00:07:23,779 --> 00:07:29,639
enthusiasts that we have for dev Cyclops

170
00:07:27,629 --> 00:07:32,129
excel I just want to find a way of how

171
00:07:29,639 --> 00:07:34,669
we can show them how the automated way

172
00:07:32,129 --> 00:07:40,889
of identifying malicious content and

173
00:07:34,669 --> 00:07:42,029
blocking them on the fly sounds good so

174
00:07:40,889 --> 00:07:44,909
is this something that the end-user

175
00:07:42,029 --> 00:07:50,099
could potentially use to define issues

176
00:07:44,909 --> 00:07:53,879
then - so we have a website that has the

177
00:07:50,099 --> 00:07:56,878
live instance of it anyone can upload an

178
00:07:53,879 --> 00:08:00,479
apk or an Android application and scan

179
00:07:56,879 --> 00:08:03,120
it on the fly itself and it will let you

180
00:08:00,479 --> 00:08:06,419
know what are the malicious content in

181
00:08:03,120 --> 00:08:11,069
there or is it harmful to install on

182
00:08:06,419 --> 00:08:12,870
your device at any given point all right

183
00:08:11,069 --> 00:08:15,060
I think that gives a pretty good

184
00:08:12,870 --> 00:08:16,889
overview I love when we have people who

185
00:08:15,060 --> 00:08:18,779
can come on and give to tool releases to

186
00:08:16,889 --> 00:08:20,789
you know solve real-world problems so

187
00:08:18,779 --> 00:08:23,430
this sounds like a good one so we

188
00:08:20,789 --> 00:08:25,709
looking forward to seeing your talk in

189
00:08:23,430 --> 00:08:29,189
Phoenix at our in Phoenix Mesa actually

190
00:08:25,709 --> 00:08:35,000
on at the conference on February 28th to

191
00:08:29,189 --> 00:08:37,649
March 1st I'm happy to be a part of it I

192
00:08:35,000 --> 00:08:41,880
it gives me the perfect platform to

193
00:08:37,649 --> 00:08:43,948
explore further on how we can expand the

194
00:08:41,880 --> 00:08:45,870
initiative that I started so thanks

195
00:08:43,948 --> 00:08:48,359
again for giving me an opportunity to

196
00:08:45,870 --> 00:08:51,720
talk at myself I thought you know it's

197
00:08:48,360 --> 00:08:53,550
huge - thanks thanks again Rob yeah

198
00:08:51,720 --> 00:08:56,790
great no problem looking forward to

199
00:08:53,550 --> 00:08:59,149
seeing you there not like wait okay

200
00:08:56,790 --> 00:08:59,149
thanks a lot

201
00:08:59,260 --> 00:09:01,740
thanks Rob

202
00:09:06,400 --> 00:09:08,459
you

