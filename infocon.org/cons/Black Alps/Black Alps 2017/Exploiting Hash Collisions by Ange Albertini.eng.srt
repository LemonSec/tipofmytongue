1
00:00:02,600 --> 00:00:06,899
welcome to my talk<font color="#CCCCCC"> I'm Marshall we are</font>

2
00:00:04,980 --> 00:00:08,820
<font color="#CCCCCC">te currently working at Google</font><font color="#E5E5E5"> and I</font>

3
00:00:06,899 --> 00:00:11,460
will talk about<font color="#E5E5E5"> exploiting identical</font>

4
00:00:08,820 --> 00:00:12,450
prefix hash collisions<font color="#CCCCCC"> this is not a</font>

5
00:00:11,460 --> 00:00:14,219
crypto talk

6
00:00:12,450 --> 00:00:15,959
it's about<font color="#CCCCCC"> exploiting the file format</font>

7
00:00:14,219 --> 00:00:18,720
tricks behind<font color="#E5E5E5"> of them which we use for</font>

8
00:00:15,960 --> 00:00:20,340
sorry<font color="#CCCCCC"> okay which we</font><font color="#E5E5E5"> use for</font><font color="#CCCCCC"> shuttered</font>

9
00:00:18,720 --> 00:00:23,160
and<font color="#E5E5E5"> other at</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> kind of the attacks</font><font color="#CCCCCC"> if</font>

10
00:00:20,340 --> 00:00:26,099
you want to go to to have<font color="#E5E5E5"> the crypto</font>

11
00:00:23,160 --> 00:00:28,050
perspective on the same attacks<font color="#E5E5E5"> then go</font>

12
00:00:26,099 --> 00:00:29,220
for<font color="#E5E5E5"> this talk but</font><font color="#CCCCCC"> to be honest if you</font>

13
00:00:28,050 --> 00:00:32,700
don't know what differential path

14
00:00:29,220 --> 00:00:35,190
boomerang beats and whatever<font color="#E5E5E5"> compression</font>

15
00:00:32,700 --> 00:00:37,800
function means then you<font color="#E5E5E5"> maybe not want</font>

16
00:00:35,190 --> 00:00:39,809
to watch it it's<font color="#E5E5E5"> just this is the real</font>

17
00:00:37,800 --> 00:00:42,030
<font color="#CCCCCC">thing</font><font color="#E5E5E5"> and this is here about my talk</font>

18
00:00:39,809 --> 00:00:44,070
here is about file format stuff<font color="#CCCCCC"> oh and</font>

19
00:00:42,030 --> 00:00:48,480
I'm not<font color="#CCCCCC"> here</font><font color="#E5E5E5"> to promote any brand or to</font>

20
00:00:44,070 --> 00:00:49,920
sell any product so in advance<font color="#CCCCCC"> nothing</font>

21
00:00:48,480 --> 00:00:51,269
groundbreaking no new<font color="#E5E5E5"> vulnerability</font>

22
00:00:49,920 --> 00:00:53,219
<font color="#E5E5E5">nothing like this just a look behind the</font>

23
00:00:51,270 --> 00:00:54,690
<font color="#E5E5E5">scenes</font><font color="#CCCCCC"> of the research file format wise</font>

24
00:00:53,219 --> 00:00:56,789
<font color="#E5E5E5">but on the other hand there are very few</font>

25
00:00:54,690 --> 00:00:59,250
talks on<font color="#E5E5E5"> this topic so I was like I</font>

26
00:00:56,789 --> 00:01:01,680
wanted<font color="#E5E5E5"> to give a a good idea of what the</font>

27
00:00:59,250 --> 00:01:03,989
word<font color="#E5E5E5"> it's a lack</font><font color="#CCCCCC"> of overall invitation</font>

28
00:01:01,680 --> 00:01:08,010
to the domain and there are very<font color="#E5E5E5"> few</font>

29
00:01:03,989 --> 00:01:10,920
talks on the<font color="#CCCCCC"> Indies so I was</font><font color="#E5E5E5"> involved in</font>

30
00:01:08,010 --> 00:01:13,860
a few<font color="#CCCCCC"> of these in</font><font color="#E5E5E5"> all these in in the</font>

31
00:01:10,920 --> 00:01:15,420
past so in 2014<font color="#CCCCCC"> I worked on malicious</font>

32
00:01:13,860 --> 00:01:19,020
<font color="#CCCCCC">Chawan with which I</font><font color="#E5E5E5"> will call mal</font>

33
00:01:15,420 --> 00:01:21,570
Chauhan<font color="#E5E5E5"> with jean-philippe on a song and</font>

34
00:01:19,020 --> 00:01:26,250
<font color="#CCCCCC">introduced me and then I work with Maria</font>

35
00:01:21,570 --> 00:01:27,809
from<font color="#CCCCCC"> two guards</font><font color="#E5E5E5"> then I worked on the</font>

36
00:01:26,250 --> 00:01:31,650
shattered attack so the actual first

37
00:01:27,810 --> 00:01:33,570
sha-1 collision and more recently<font color="#E5E5E5"> on one</font>

38
00:01:31,650 --> 00:01:36,210
issue of<font color="#E5E5E5"> Paco</font><font color="#CCCCCC"> GTFO where we also played</font>

39
00:01:33,570 --> 00:01:39,089
with<font color="#E5E5E5"> Hodge collisions and in all case we</font>

40
00:01:36,210 --> 00:01:40,679
work with modified sha-1 sha-1 and md5

41
00:01:39,090 --> 00:01:42,270
and the modified sha-1 was not reduced

42
00:01:40,680 --> 00:01:43,770
<font color="#CCCCCC">round it was just some constant were</font>

43
00:01:42,270 --> 00:01:46,740
changed to<font color="#CCCCCC"> different constants to</font>

44
00:01:43,770 --> 00:01:48,600
<font color="#CCCCCC">produce</font><font color="#E5E5E5"> coalition's but</font><font color="#CCCCCC"> it was not</font><font color="#E5E5E5"> that</font>

45
00:01:46,740 --> 00:01:50,640
<font color="#CCCCCC">weakened but</font><font color="#E5E5E5"> it was in</font><font color="#CCCCCC"> anyway</font><font color="#E5E5E5"> very</font>

46
00:01:48,600 --> 00:01:51,600
<font color="#CCCCCC">different from the collision prospectus</font>

47
00:01:50,640 --> 00:01:53,700
which will<font color="#E5E5E5"> you see later</font>

48
00:01:51,600 --> 00:01:56,729
so three projects and three different

49
00:01:53,700 --> 00:02:00,149
<font color="#CCCCCC">hashes but a bit the same</font><font color="#E5E5E5"> state of mind</font>

50
00:01:56,729 --> 00:02:02,520
<font color="#CCCCCC">and skill</font><font color="#E5E5E5"> set so the type of collisions</font>

51
00:02:00,149 --> 00:02:05,040
<font color="#E5E5E5">so the I will talk about identical</font>

52
00:02:02,520 --> 00:02:06,240
prefix<font color="#E5E5E5"> type collision where the two</font>

53
00:02:05,040 --> 00:02:08,399
files are starting with<font color="#E5E5E5"> the same data</font>

54
00:02:06,240 --> 00:02:11,190
<font color="#E5E5E5">there is some divergence</font><font color="#CCCCCC"> between</font><font color="#E5E5E5"> the two</font>

55
00:02:08,399 --> 00:02:13,470
files and then there is some recovery

56
00:02:11,190 --> 00:02:14,970
and then those<font color="#E5E5E5"> Negril the end</font>

57
00:02:13,470 --> 00:02:16,290
the file<font color="#E5E5E5"> has to be identical so</font><font color="#CCCCCC"> though</font>

58
00:02:14,970 --> 00:02:18,420
<font color="#E5E5E5">even though it's called collision it's</font>

59
00:02:16,290 --> 00:02:19,650
not like take two<font color="#E5E5E5"> different things and</font>

60
00:02:18,420 --> 00:02:21,690
make them collide<font color="#E5E5E5"> that's called</font>

61
00:02:19,650 --> 00:02:23,820
<font color="#CCCCCC">shortened prefix</font><font color="#E5E5E5"> and at this point the</font>

62
00:02:21,690 --> 00:02:25,950
hash is considered broken so for<font color="#E5E5E5"> example</font>

63
00:02:23,820 --> 00:02:31,230
sha-1 was considered broken in theory<font color="#E5E5E5"> in</font>

64
00:02:25,950 --> 00:02:32,790
2005<font color="#E5E5E5"> and so the identical perfect hash</font>

65
00:02:31,230 --> 00:02:36,000
collision is could<font color="#CCCCCC"> be seen as a</font>

66
00:02:32,790 --> 00:02:37,650
divergence and reparation fixing<font color="#E5E5E5"> rather</font>

67
00:02:36,000 --> 00:02:39,750
than total<font color="#CCCCCC"> collision from two different</font>

68
00:02:37,650 --> 00:02:41,730
points<font color="#E5E5E5"> and and then there is second</font>

69
00:02:39,750 --> 00:02:44,580
preimage attack where you find data<font color="#E5E5E5"> to</font>

70
00:02:41,730 --> 00:02:46,260
match another<font color="#E5E5E5"> data's hash and find data</font>

71
00:02:44,580 --> 00:02:49,050
to match a hash and these two don't

72
00:02:46,260 --> 00:02:53,000
exist<font color="#CCCCCC"> in practice</font><font color="#E5E5E5"> so usually the first</font>

73
00:02:49,050 --> 00:02:55,440
<font color="#E5E5E5">that comes in the history</font><font color="#CCCCCC"> of a hash is</font>

74
00:02:53,000 --> 00:02:56,880
identical<font color="#E5E5E5"> prefaced collision it's the</font>

75
00:02:55,440 --> 00:02:59,040
weakest and it's usually<font color="#E5E5E5"> overlooked</font>

76
00:02:56,880 --> 00:03:01,950
<font color="#CCCCCC">because it's not really considered that</font>

77
00:02:59,040 --> 00:03:03,690
broken and chosen prefix is the one<font color="#E5E5E5"> that</font>

78
00:03:01,950 --> 00:03:05,220
at that<font color="#E5E5E5"> point where you can craft a bad</font>

79
00:03:03,690 --> 00:03:07,410
certificate and a good certificate<font color="#E5E5E5"> and</font>

80
00:03:05,220 --> 00:03:10,650
at this<font color="#E5E5E5"> point the hash is really</font>

81
00:03:07,410 --> 00:03:12,990
considered broken in practice<font color="#E5E5E5"> but my</font>

82
00:03:10,650 --> 00:03:15,330
goal<font color="#CCCCCC"> is that because identical prefix is</font>

83
00:03:12,990 --> 00:03:17,280
usually overlooked<font color="#E5E5E5"> to make it having</font>

84
00:03:15,330 --> 00:03:19,140
more impact<font color="#CCCCCC"> so</font><font color="#E5E5E5"> and maybe explore the</font>

85
00:03:17,280 --> 00:03:22,350
possibilities that<font color="#E5E5E5"> it's actually not</font>

86
00:03:19,140 --> 00:03:24,329
that<font color="#E5E5E5"> weak</font><font color="#CCCCCC"> as an as an attack</font><font color="#E5E5E5"> and I will</font>

87
00:03:22,350 --> 00:03:26,250
also<font color="#E5E5E5"> mention</font><font color="#CCCCCC"> hash collisions as IPC</font>

88
00:03:24,330 --> 00:03:29,850
because of identical prefix collision in

89
00:03:26,250 --> 00:03:31,380
the in the rest of the talk<font color="#E5E5E5"> so well for</font>

90
00:03:29,850 --> 00:03:33,299
academics that's how we prevent<font color="#E5E5E5"> the</font>

91
00:03:31,380 --> 00:03:35,760
<font color="#CCCCCC">present hash collisions and if you just</font>

92
00:03:33,300 --> 00:03:37,800
show big blocks of hexadecimal and<font color="#CCCCCC"> there</font>

93
00:03:35,760 --> 00:03:40,109
<font color="#E5E5E5">is no visual</font><font color="#CCCCCC"> no there's no</font><font color="#E5E5E5"> impact so you</font>

94
00:03:37,800 --> 00:03:42,090
can hardly convince a<font color="#CCCCCC"> leanest or valt to</font>

95
00:03:40,110 --> 00:03:47,220
move away from the hash with this kind

96
00:03:42,090 --> 00:03:49,140
of text<font color="#E5E5E5"> my role in this is again I</font><font color="#CCCCCC"> don't</font>

97
00:03:47,220 --> 00:03:50,549
play any role on a big<font color="#E5E5E5"> computation part</font>

98
00:03:49,140 --> 00:03:52,350
especially<font color="#E5E5E5"> on shattered the show an</font>

99
00:03:50,549 --> 00:03:54,870
attack<font color="#E5E5E5"> where there was only a</font><font color="#CCCCCC"> huge</font>

100
00:03:52,350 --> 00:03:56,040
computation and<font color="#E5E5E5"> a fort I just play role</font>

101
00:03:54,870 --> 00:03:57,810
at this part determine the fine

102
00:03:56,040 --> 00:03:59,820
structure<font color="#E5E5E5"> then there is this big part</font>

103
00:03:57,810 --> 00:04:01,260
that<font color="#CCCCCC"> I that is unknown</font><font color="#E5E5E5"> that I don't play</font>

104
00:03:59,820 --> 00:04:02,700
<font color="#CCCCCC">a role in and then there are</font><font color="#E5E5E5"> collisions</font>

105
00:04:01,260 --> 00:04:04,260
block which are not determined because

106
00:04:02,700 --> 00:04:06,660
<font color="#E5E5E5">they are determined by the computation</font>

107
00:04:04,260 --> 00:04:08,820
<font color="#E5E5E5">and then the good the good thing is that</font>

108
00:04:06,660 --> 00:04:11,579
<font color="#E5E5E5">we have at the end to have two valid</font>

109
00:04:08,820 --> 00:04:13,650
files<font color="#E5E5E5"> no matter what happened here so</font>

110
00:04:11,580 --> 00:04:15,030
it's like<font color="#E5E5E5"> planning and then hoping to</font>

111
00:04:13,650 --> 00:04:19,260
land<font color="#E5E5E5"> recovery and there is a single</font>

112
00:04:15,030 --> 00:04:20,970
<font color="#CCCCCC">track so</font><font color="#E5E5E5"> the impact of this of my work</font>

113
00:04:19,260 --> 00:04:22,409
<font color="#E5E5E5">was indeed to two halves to get</font>

114
00:04:20,970 --> 00:04:24,780
something that is<font color="#E5E5E5"> better than random</font>

115
00:04:22,410 --> 00:04:26,580
<font color="#E5E5E5">looking blocks will it convince anyone</font>

116
00:04:24,780 --> 00:04:27,150
to duplicate something<font color="#CCCCCC"> and</font><font color="#E5E5E5"> just to give</font>

117
00:04:26,580 --> 00:04:29,820
<font color="#CCCCCC">you an idea</font>

118
00:04:27,150 --> 00:04:34,679
shattered<font color="#E5E5E5"> took Steve thousand-year CPU</font>

119
00:04:29,820 --> 00:04:36,330
and 110<font color="#E5E5E5"> GPU years of computation no</font>

120
00:04:34,680 --> 00:04:38,850
matter how<font color="#E5E5E5"> many GPUs it is it's a lot of</font>

121
00:04:36,330 --> 00:04:40,889
<font color="#E5E5E5">computing power</font><font color="#CCCCCC"> and at the end we would</font>

122
00:04:38,850 --> 00:04:43,020
like<font color="#E5E5E5"> something that is quite visual so</font>

123
00:04:40,889 --> 00:04:45,389
if it's<font color="#E5E5E5"> reusable and you can make a</font>

124
00:04:43,020 --> 00:04:47,099
infinite amount<font color="#E5E5E5"> of difference from the</font>

125
00:04:45,389 --> 00:04:49,440
same computation<font color="#CCCCCC"> it is better than</font><font color="#E5E5E5"> just</font>

126
00:04:47,100 --> 00:04:51,949
<font color="#CCCCCC">to</font><font color="#E5E5E5"> random looking blocks and these are</font>

127
00:04:49,440 --> 00:04:55,520
<font color="#CCCCCC">multi one that example</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> further</font><font color="#E5E5E5"> and</font>

128
00:04:51,949 --> 00:04:58,710
so they are actually<font color="#CCCCCC"> not so many papers</font>

129
00:04:55,520 --> 00:05:02,280
on<font color="#E5E5E5"> this the research on this kind of</font>

130
00:04:58,710 --> 00:05:04,138
<font color="#E5E5E5">research</font><font color="#CCCCCC"> I will cover most mostly this</font>

131
00:05:02,280 --> 00:05:06,388
<font color="#E5E5E5">first one in 2000 find the first one</font>

132
00:05:04,139 --> 00:05:09,510
<font color="#E5E5E5">with some kind of better attacks and</font>

133
00:05:06,389 --> 00:05:11,789
then the three ones I participated<font color="#E5E5E5"> so in</font>

134
00:05:09,510 --> 00:05:13,860
the schmaltzy one<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> a show feed upon</font>

135
00:05:11,789 --> 00:05:16,440
<font color="#CCCCCC">messin</font><font color="#E5E5E5"> in shattered is a libertine who</font>

136
00:05:13,860 --> 00:05:18,120
introduced<font color="#CCCCCC"> me to a cryptographer which I</font>

137
00:05:16,440 --> 00:05:20,100
<font color="#E5E5E5">worked so in this case for the matcha</font>

138
00:05:18,120 --> 00:05:21,870
when I<font color="#CCCCCC"> work with Maha</font><font color="#E5E5E5"> and in case of</font>

139
00:05:20,100 --> 00:05:25,500
<font color="#E5E5E5">shattered I worked with max events and</font>

140
00:05:21,870 --> 00:05:28,020
then we had fun with the<font color="#E5E5E5"> md5 for the</font>

141
00:05:25,500 --> 00:05:30,240
issue 14 of<font color="#CCCCCC"> poker GTFO</font><font color="#E5E5E5"> and militia</font>

142
00:05:28,020 --> 00:05:32,310
<font color="#E5E5E5">Elliott was the one in a starting the</font>

143
00:05:30,240 --> 00:05:35,460
idea that we could<font color="#E5E5E5"> do something for</font><font color="#CCCCCC"> that</font>

144
00:05:32,310 --> 00:05:37,380
<font color="#CCCCCC">as a challenge</font><font color="#E5E5E5"> so the important point is</font>

145
00:05:35,460 --> 00:05:39,570
<font color="#CCCCCC">that the constraint of hashes and format</font>

146
00:05:37,380 --> 00:05:41,520
<font color="#E5E5E5">of nothing in</font><font color="#CCCCCC"> commands</font><font color="#E5E5E5"> so in case of a</font>

147
00:05:39,570 --> 00:05:44,099
file<font color="#E5E5E5"> format you need specific bytes</font><font color="#CCCCCC"> a</font>

148
00:05:41,520 --> 00:05:46,560
specific<font color="#E5E5E5"> values any in the case of hash</font>

149
00:05:44,099 --> 00:05:49,469
<font color="#CCCCCC">collision so this is a</font><font color="#E5E5E5"> collision code</font>

150
00:05:46,560 --> 00:05:51,150
collision generation code<font color="#CCCCCC"> it's bits and</font>

151
00:05:49,470 --> 00:05:53,580
shifts and<font color="#CCCCCC"> whatever</font><font color="#E5E5E5"> and this is very</font>

152
00:05:51,150 --> 00:05:54,929
incompatible so in practice we'll just

153
00:05:53,580 --> 00:05:56,310
consider because the collisions block

154
00:05:54,930 --> 00:05:58,949
<font color="#E5E5E5">are very complex we'll just consider</font>

155
00:05:56,310 --> 00:06:00,930
<font color="#E5E5E5">them random but from one side to</font><font color="#CCCCCC"> the</font>

156
00:05:58,949 --> 00:06:02,160
other<font color="#CCCCCC"> we</font><font color="#E5E5E5"> all what we know is the</font>

157
00:06:00,930 --> 00:06:04,050
difference<font color="#CCCCCC"> between the two blocks</font><font color="#E5E5E5"> so you</font>

158
00:06:02,160 --> 00:06:06,479
could see<font color="#CCCCCC"> you consider them totally</font>

159
00:06:04,050 --> 00:06:08,310
random<font color="#E5E5E5"> and they only differ by a mask in</font>

160
00:06:06,479 --> 00:06:10,169
the case of sha-1 eats eggs or masks<font color="#CCCCCC"> in</font>

161
00:06:08,310 --> 00:06:14,539
the case<font color="#CCCCCC"> of</font><font color="#E5E5E5"> magnify they absorb and also</font>

162
00:06:10,169 --> 00:06:17,430
addition modulo<font color="#E5E5E5"> 32 to power of t2 but</font>

163
00:06:14,539 --> 00:06:19,710
the mask is more or<font color="#CCCCCC"> less known in</font>

164
00:06:17,430 --> 00:06:21,889
<font color="#CCCCCC">advance so that's what you</font><font color="#E5E5E5"> have to rely</font>

165
00:06:19,710 --> 00:06:24,599
on<font color="#E5E5E5"> even though it's made of randomness</font>

166
00:06:21,889 --> 00:06:26,460
in some case that<font color="#CCCCCC"> will</font><font color="#E5E5E5"> cover the</font>

167
00:06:24,599 --> 00:06:28,500
collision blocks may contain arbitrary

168
00:06:26,460 --> 00:06:30,750
values and if the<font color="#CCCCCC"> collision</font><font color="#E5E5E5"> is very fast</font>

169
00:06:28,500 --> 00:06:33,419
to compute then you can actually compute

170
00:06:30,750 --> 00:06:35,280
a lot<font color="#E5E5E5"> until you have a given value if</font>

171
00:06:33,419 --> 00:06:37,500
you if that's<font color="#E5E5E5"> what you want so basically</font>

172
00:06:35,280 --> 00:06:39,419
you craft your files with random blocks

173
00:06:37,500 --> 00:06:40,650
and you hope that<font color="#E5E5E5"> it will work and then</font>

174
00:06:39,419 --> 00:06:42,590
you apply the mask and

175
00:06:40,650 --> 00:06:45,659
<font color="#E5E5E5">again in the case of identical prefix</font>

176
00:06:42,590 --> 00:06:47,429
collision the two files start with the

177
00:06:45,660 --> 00:06:49,500
same<font color="#E5E5E5"> content then there are two blocks</font>

178
00:06:47,430 --> 00:06:50,850
made of random stuff<font color="#CCCCCC"> the creates they</font>

179
00:06:49,500 --> 00:06:53,270
are different on each other side the

180
00:06:50,850 --> 00:06:55,889
difference is specified by<font color="#E5E5E5"> this mask</font>

181
00:06:53,270 --> 00:06:57,599
<font color="#E5E5E5">this is different content but that</font><font color="#CCCCCC"> at</font>

182
00:06:55,889 --> 00:06:59,220
<font color="#E5E5E5">the end of these blocks the hash is back</font>

183
00:06:57,600 --> 00:07:01,289
to the same again so if you had<font color="#E5E5E5"> whatever</font>

184
00:06:59,220 --> 00:07:04,380
content here the<font color="#E5E5E5"> ident same identical</font>

185
00:07:01,289 --> 00:07:06,000
<font color="#E5E5E5">content the conserved but after this</font>

186
00:07:04,380 --> 00:07:07,979
<font color="#CCCCCC">computed the computation depends on the</font>

187
00:07:06,000 --> 00:07:09,810
prefix so you define the prefix<font color="#E5E5E5"> then</font>

188
00:07:07,979 --> 00:07:11,460
there is a computation that<font color="#E5E5E5"> generates</font>

189
00:07:09,810 --> 00:07:12,990
<font color="#E5E5E5">this block of randomness</font><font color="#CCCCCC"> and then you</font>

190
00:07:11,460 --> 00:07:15,030
can add whatever<font color="#E5E5E5"> you</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> but you hope</font>

191
00:07:12,990 --> 00:07:17,280
that<font color="#E5E5E5"> you have valid files that are</font>

192
00:07:15,030 --> 00:07:20,609
compatible everywhere and<font color="#E5E5E5"> that you can</font>

193
00:07:17,280 --> 00:07:22,229
<font color="#CCCCCC">reuse more</font><font color="#E5E5E5"> than once if if possible so</font>

194
00:07:20,610 --> 00:07:24,960
for example this<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> case</font><font color="#E5E5E5"> of the</font>

195
00:07:22,229 --> 00:07:26,729
<font color="#CCCCCC">shuttered example so the first sha-1</font>

196
00:07:24,960 --> 00:07:28,349
collision and<font color="#CCCCCC"> you see that these two</font>

197
00:07:26,729 --> 00:07:30,090
blocks are really made of<font color="#CCCCCC"> a lot of</font>

198
00:07:28,350 --> 00:07:32,460
randomness<font color="#E5E5E5"> and the differences are</font>

199
00:07:30,090 --> 00:07:34,969
specified<font color="#CCCCCC"> by these bizarre</font><font color="#E5E5E5"> masks so you</font>

200
00:07:32,460 --> 00:07:37,650
know if you just have one<font color="#E5E5E5"> file you can</font>

201
00:07:34,970 --> 00:07:39,449
<font color="#E5E5E5">immediately generate the other file and</font>

202
00:07:37,650 --> 00:07:41,460
indeed when the sha-1 collision was

203
00:07:39,449 --> 00:07:44,130
completed I was just given one file we

204
00:07:41,460 --> 00:07:45,870
<font color="#CCCCCC">computed it here's one file get generate</font>

205
00:07:44,130 --> 00:07:49,199
the<font color="#E5E5E5"> other yourself because at this point</font>

206
00:07:45,870 --> 00:07:52,830
it's trivial<font color="#E5E5E5"> the</font><font color="#CCCCCC"> XOR mask is constant so</font>

207
00:07:49,199 --> 00:07:54,560
not all attacks<font color="#E5E5E5"> use the same even though</font>

208
00:07:52,830 --> 00:07:58,289
<font color="#CCCCCC">shuttered took a lot of</font><font color="#E5E5E5"> computing power</font>

209
00:07:54,560 --> 00:07:59,820
<font color="#E5E5E5">not all attacks have are easy</font><font color="#CCCCCC"> or hard to</font>

210
00:07:58,289 --> 00:08:01,229
<font color="#E5E5E5">compute so in the case of</font><font color="#CCCCCC"> shattered what</font>

211
00:07:59,820 --> 00:08:03,960
is very interesting<font color="#CCCCCC"> is that the</font><font color="#E5E5E5"> first</font>

212
00:08:01,229 --> 00:08:06,750
<font color="#CCCCCC">byte</font><font color="#E5E5E5"> that has contains Arad is different</font>

213
00:08:03,960 --> 00:08:09,630
so<font color="#E5E5E5"> we basically we will exploit this</font><font color="#CCCCCC"> -</font>

214
00:08:06,750 --> 00:08:12,000
like I said with<font color="#E5E5E5"> a</font><font color="#CCCCCC"> ski-jump to</font><font color="#E5E5E5"> jump over</font>

215
00:08:09,630 --> 00:08:14,219
and to make the rest<font color="#E5E5E5"> of the randomness</font>

216
00:08:12,000 --> 00:08:15,750
ignore it<font color="#CCCCCC"> even though this was very long</font>

217
00:08:14,220 --> 00:08:18,240
in terms<font color="#E5E5E5"> of computation while a</font>

218
00:08:15,750 --> 00:08:20,820
collision of<font color="#E5E5E5"> md5 a fast</font><font color="#CCCCCC"> call collision</font>

219
00:08:18,240 --> 00:08:23,039
of md5<font color="#E5E5E5"> takes one second but the</font>

220
00:08:20,820 --> 00:08:25,620
randomness is in the middle<font color="#E5E5E5"> so basically</font>

221
00:08:23,039 --> 00:08:27,330
you cannot have any content that<font color="#E5E5E5"> you can</font>

222
00:08:25,620 --> 00:08:28,830
plan in advance<font color="#E5E5E5"> here so basically what</font>

223
00:08:27,330 --> 00:08:30,300
you can<font color="#E5E5E5"> do is the</font><font color="#CCCCCC"> only you</font><font color="#E5E5E5"> just brute</font>

224
00:08:28,830 --> 00:08:32,520
force until you have some bytes you can

225
00:08:30,300 --> 00:08:34,560
use<font color="#E5E5E5"> but here you only have</font><font color="#CCCCCC"> one single</font>

226
00:08:32,520 --> 00:08:36,569
byte<font color="#CCCCCC"> that's you don't</font><font color="#E5E5E5"> even know the</font>

227
00:08:34,559 --> 00:08:37,890
<font color="#CCCCCC">value but you know</font><font color="#E5E5E5"> there will be the</font>

228
00:08:36,570 --> 00:08:40,050
only difference on the file will<font color="#CCCCCC"> be</font>

229
00:08:37,890 --> 00:08:41,189
there<font color="#E5E5E5"> and in the case of</font><font color="#CCCCCC"> shatter you</font>

230
00:08:40,049 --> 00:08:43,620
know it's<font color="#E5E5E5"> already at the start and this</font>

231
00:08:41,190 --> 00:08:46,650
is what we<font color="#E5E5E5"> exploit it so depending on</font>

232
00:08:43,620 --> 00:08:48,510
the attack<font color="#CCCCCC"> it might be easy or not</font><font color="#E5E5E5"> and</font>

233
00:08:46,650 --> 00:08:51,390
it's not<font color="#CCCCCC"> relevant</font><font color="#E5E5E5"> to how complex the</font>

234
00:08:48,510 --> 00:08:54,150
computation is and again there<font color="#E5E5E5"> are</font>

235
00:08:51,390 --> 00:08:54,580
several<font color="#E5E5E5"> attacks</font><font color="#CCCCCC"> even from the same hash</font>

236
00:08:54,150 --> 00:08:57,220
<font color="#E5E5E5">it's</font>

237
00:08:54,580 --> 00:08:59,700
<font color="#E5E5E5">likely one attack gives you a special</font>

238
00:08:57,220 --> 00:09:02,680
mask<font color="#CCCCCC"> a special differential mask</font><font color="#E5E5E5"> and one</font>

239
00:08:59,700 --> 00:09:04,960
<font color="#E5E5E5">it's even if it's the same</font><font color="#CCCCCC"> hush</font><font color="#E5E5E5"> so this</font>

240
00:09:02,680 --> 00:09:08,770
is these are<font color="#E5E5E5"> two conditions</font><font color="#CCCCCC"> of hodge</font>

241
00:09:04,960 --> 00:09:10,210
clash<font color="#CCCCCC"> and</font><font color="#E5E5E5"> this is a very</font><font color="#CCCCCC"> recent</font>

242
00:09:08,770 --> 00:09:11,890
this is the kind<font color="#E5E5E5"> of collision</font><font color="#CCCCCC"> where you</font>

243
00:09:10,210 --> 00:09:13,840
can have<font color="#CCCCCC"> actually some arbitrary text</font><font color="#E5E5E5"> in</font>

244
00:09:11,890 --> 00:09:16,960
the collision blocks which I didn't<font color="#CCCCCC"> know</font>

245
00:09:13,840 --> 00:09:19,660
<font color="#E5E5E5">was possible and Mac Stevens push it to</font>

246
00:09:16,960 --> 00:09:21,910
github<font color="#E5E5E5"> on this Monday just told you</font><font color="#CCCCCC"> that</font>

247
00:09:19,660 --> 00:09:23,800
it was new for<font color="#CCCCCC"> me and even publicly</font><font color="#E5E5E5"> it</font>

248
00:09:21,910 --> 00:09:26,469
was obvious for a cryptographer but it

249
00:09:23,800 --> 00:09:27,910
was not so easily obtainable<font color="#E5E5E5"> so this is</font>

250
00:09:26,470 --> 00:09:31,300
a<font color="#CCCCCC"> leak</font><font color="#E5E5E5"> directly</font><font color="#CCCCCC"> to the</font><font color="#E5E5E5"> right script and</font>

251
00:09:27,910 --> 00:09:33,280
so this this tax takes a lot a bit more

252
00:09:31,300 --> 00:09:34,870
<font color="#E5E5E5">time because here an md5 a fast</font>

253
00:09:33,280 --> 00:09:37,120
collision takes<font color="#E5E5E5"> one second this one</font>

254
00:09:34,870 --> 00:09:39,850
takes two<font color="#CCCCCC"> minutes</font><font color="#E5E5E5"> but it's faster than</font>

255
00:09:37,120 --> 00:09:42,130
brute forcing just divides here<font color="#E5E5E5"> you know</font>

256
00:09:39,850 --> 00:09:45,220
<font color="#E5E5E5">and you can have some arbitrary content</font>

257
00:09:42,130 --> 00:09:47,920
in the in<font color="#E5E5E5"> within some rules inside the</font>

258
00:09:45,220 --> 00:09:50,500
collision block and<font color="#E5E5E5"> again this is</font><font color="#CCCCCC"> only</font>

259
00:09:47,920 --> 00:09:54,430
public this is only<font color="#E5E5E5"> easily generate</font><font color="#CCCCCC"> able</font>

260
00:09:50,500 --> 00:09:55,480
since Monday<font color="#E5E5E5"> so</font><font color="#CCCCCC"> well we with these</font>

261
00:09:54,430 --> 00:09:56,920
collision blocks and all<font color="#E5E5E5"> this</font>

262
00:09:55,480 --> 00:09:58,810
<font color="#E5E5E5">restriction on structure there are</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> few</font>

263
00:09:56,920 --> 00:10:01,660
strategies that you can<font color="#CCCCCC"> use so the</font>

264
00:09:58,810 --> 00:10:05,199
common one is that<font color="#E5E5E5"> you just use the</font>

265
00:10:01,660 --> 00:10:06,760
collision block as some data<font color="#E5E5E5"> that will</font>

266
00:10:05,200 --> 00:10:08,740
be<font color="#E5E5E5"> just used by some code</font><font color="#CCCCCC"> that comes</font>

267
00:10:06,760 --> 00:10:10,720
nectar later<font color="#CCCCCC"> so basically you just</font>

268
00:10:08,740 --> 00:10:12,430
<font color="#CCCCCC">comment out the collision block by amino</font>

269
00:10:10,720 --> 00:10:15,070
<font color="#E5E5E5">another like starting</font><font color="#CCCCCC"> with the hash</font><font color="#E5E5E5"> or a</font>

270
00:10:12,430 --> 00:10:17,560
comment and then<font color="#CCCCCC"> you add some</font><font color="#E5E5E5"> code that</font>

271
00:10:15,070 --> 00:10:22,630
will reuse this as pure data or maybe

272
00:10:17,560 --> 00:10:24,729
<font color="#E5E5E5">it's external executable like the income</font>

273
00:10:22,630 --> 00:10:27,160
<font color="#E5E5E5">is Kevin's key research that will use</font>

274
00:10:24,730 --> 00:10:28,870
these<font color="#E5E5E5"> blocks</font><font color="#CCCCCC"> as decryption key so one</font>

275
00:10:27,160 --> 00:10:30,850
block will be<font color="#E5E5E5"> the right decryption key</font>

276
00:10:28,870 --> 00:10:33,460
and one another block another version<font color="#E5E5E5"> of</font>

277
00:10:30,850 --> 00:10:34,720
the block will<font color="#CCCCCC"> be the wrong decryption</font>

278
00:10:33,460 --> 00:10:36,940
key<font color="#E5E5E5"> even though they have the same hash</font>

279
00:10:34,720 --> 00:10:38,230
the so in this case you just<font color="#E5E5E5"> use the</font>

280
00:10:36,940 --> 00:10:40,990
collision<font color="#CCCCCC"> blocks and some passive</font>

281
00:10:38,230 --> 00:10:43,680
passive data but in there is some code

282
00:10:40,990 --> 00:10:46,530
that will rely on this data<font color="#E5E5E5"> in a</font>

283
00:10:43,680 --> 00:10:49,599
comparison<font color="#E5E5E5"> or in a blind decryption way</font>

284
00:10:46,530 --> 00:10:52,540
<font color="#E5E5E5">now another way that we implemented is</font>

285
00:10:49,600 --> 00:10:53,920
just to you put<font color="#CCCCCC"> your either with if you</font>

286
00:10:52,540 --> 00:10:56,199
are<font color="#E5E5E5"> the prefix that</font><font color="#CCCCCC"> is before or you</font>

287
00:10:53,920 --> 00:10:59,680
just<font color="#CCCCCC"> brute force</font><font color="#E5E5E5"> to set some up codes so</font>

288
00:10:56,200 --> 00:11:01,990
the advantage is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> htc jump is</font><font color="#E5E5E5"> EB</font>

289
00:10:59,680 --> 00:11:04,359
and then something<font color="#E5E5E5"> so basically you can</font>

290
00:11:01,990 --> 00:11:06,220
you need only<font color="#E5E5E5"> one byte to be controlled</font>

291
00:11:04,360 --> 00:11:07,740
that it will be<font color="#E5E5E5"> jumped over to</font><font color="#CCCCCC"> a</font>

292
00:11:06,220 --> 00:11:10,410
specific address<font color="#E5E5E5"> and if</font>

293
00:11:07,740 --> 00:11:12,330
<font color="#CCCCCC">you have a difference</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> parameter</font>

294
00:11:10,410 --> 00:11:14,400
of<font color="#E5E5E5"> the jump then you can just have to</font>

295
00:11:12,330 --> 00:11:16,800
put two payloads at the right place<font color="#E5E5E5"> this</font>

296
00:11:14,400 --> 00:11:20,370
<font color="#E5E5E5">is easy but as far</font><font color="#CCCCCC"> as I know there's no</font>

297
00:11:16,800 --> 00:11:22,410
<font color="#CCCCCC">real life consequence now</font><font color="#E5E5E5"> much more</font>

298
00:11:20,370 --> 00:11:26,070
<font color="#E5E5E5">interesting and probably harder is a</font>

299
00:11:22,410 --> 00:11:28,199
format<font color="#E5E5E5"> for</font><font color="#CCCCCC"> a format so strategy where</font>

300
00:11:26,070 --> 00:11:30,000
you<font color="#CCCCCC"> will set up a header here</font><font color="#E5E5E5"> the prefix</font>

301
00:11:28,200 --> 00:11:32,460
or inside the<font color="#E5E5E5"> collision block like we</font>

302
00:11:30,000 --> 00:11:34,590
did<font color="#CCCCCC"> for mulch Awan and then you will</font>

303
00:11:32,460 --> 00:11:37,980
alter our<font color="#E5E5E5"> values so</font><font color="#CCCCCC"> that you reach</font><font color="#E5E5E5"> two</font>

304
00:11:34,590 --> 00:11:40,920
different<font color="#E5E5E5"> data depending on the which</font><font color="#CCCCCC"> of</font>

305
00:11:37,980 --> 00:11:43,050
the files<font color="#E5E5E5"> you're parsing and then if you</font>

306
00:11:40,920 --> 00:11:44,939
<font color="#CCCCCC">open with</font><font color="#E5E5E5"> the same software then it will</font>

307
00:11:43,050 --> 00:11:46,109
end<font color="#CCCCCC"> up</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> two different data</font><font color="#E5E5E5"> and it's</font>

308
00:11:44,940 --> 00:11:50,310
even<font color="#E5E5E5"> better of</font><font color="#CCCCCC"> course when</font><font color="#E5E5E5"> they are</font>

309
00:11:46,110 --> 00:11:52,380
arbitrary amount of data<font color="#E5E5E5"> so in there</font>

310
00:11:50,310 --> 00:11:54,810
<font color="#E5E5E5">exactly and then each file contains two</font>

311
00:11:52,380 --> 00:11:56,970
data<font color="#CCCCCC"> set like</font><font color="#E5E5E5"> two pictures but in one</font>

312
00:11:54,810 --> 00:11:59,640
case<font color="#E5E5E5"> the parser will be redirected to</font>

313
00:11:56,970 --> 00:12:02,010
one file<font color="#CCCCCC"> to one data and in</font><font color="#E5E5E5"> the other</font>

314
00:11:59,640 --> 00:12:04,949
file it will be<font color="#E5E5E5"> rejected directly to the</font>

315
00:12:02,010 --> 00:12:07,770
other<font color="#E5E5E5"> now another trick that we also use</font>

316
00:12:04,950 --> 00:12:10,410
<font color="#CCCCCC">is when you just use a file format</font><font color="#E5E5E5"> top</font>

317
00:12:07,770 --> 00:12:12,270
<font color="#E5E5E5">down the</font><font color="#CCCCCC"> like rawr or 7-zip and</font><font color="#E5E5E5"> you just</font>

318
00:12:10,410 --> 00:12:13,760
concatenate them and you just<font color="#E5E5E5"> make the</font>

319
00:12:12,270 --> 00:12:16,590
collision<font color="#E5E5E5"> block start with the magic</font>

320
00:12:13,760 --> 00:12:19,110
then<font color="#E5E5E5"> if there is a difference</font><font color="#CCCCCC"> there then</font>

321
00:12:16,590 --> 00:12:20,850
in one case it will disable<font color="#E5E5E5"> the magic of</font>

322
00:12:19,110 --> 00:12:22,860
the first file and therefore it will see

323
00:12:20,850 --> 00:12:24,750
<font color="#E5E5E5">the second file simple trick</font><font color="#CCCCCC"> but worth</font>

324
00:12:22,860 --> 00:12:27,540
mentioning<font color="#CCCCCC"> because it works in the</font><font color="#E5E5E5"> end</font>

325
00:12:24,750 --> 00:12:29,580
<font color="#E5E5E5">and in this case it you need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> have</font>

326
00:12:27,540 --> 00:12:31,439
some<font color="#E5E5E5"> control brute-forcing on the final</font>

327
00:12:29,580 --> 00:12:34,500
bite of the proof of the collision

328
00:12:31,440 --> 00:12:36,450
blocks so the goal of<font color="#CCCCCC"> all this is to</font>

329
00:12:34,500 --> 00:12:38,220
<font color="#E5E5E5">find a way to get to meaningful files</font>

330
00:12:36,450 --> 00:12:40,890
despite the randomness<font color="#E5E5E5"> so the strategy</font>

331
00:12:38,220 --> 00:12:43,560
<font color="#CCCCCC">is that</font><font color="#E5E5E5"> you write your prefix you then</font>

332
00:12:40,890 --> 00:12:46,890
you put some<font color="#E5E5E5"> totally random stuff then</font>

333
00:12:43,560 --> 00:12:48,689
you<font color="#E5E5E5"> apply the block the the mask to do</font>

334
00:12:46,890 --> 00:12:51,270
you to get the other<font color="#E5E5E5"> file and you just</font>

335
00:12:48,690 --> 00:12:53,460
hope<font color="#CCCCCC"> that they both</font><font color="#E5E5E5"> work reliably they</font>

336
00:12:51,270 --> 00:12:56,040
just show<font color="#E5E5E5"> differences and they don't</font>

337
00:12:53,460 --> 00:12:59,460
fail<font color="#E5E5E5"> any parsers and of course the more</font>

338
00:12:56,040 --> 00:13:02,130
compatibility the better so then which

339
00:12:59,460 --> 00:13:03,360
formats well you prefer you want to for

340
00:13:02,130 --> 00:13:05,220
more impact<font color="#E5E5E5"> you prefer to have</font><font color="#CCCCCC"> something</font>

341
00:13:03,360 --> 00:13:06,870
universally used preferably

342
00:13:05,220 --> 00:13:08,970
multi-platform so it's<font color="#E5E5E5"> already there are</font>

343
00:13:06,870 --> 00:13:11,460
not so many file formats<font color="#CCCCCC"> and of course</font>

344
00:13:08,970 --> 00:13:13,400
by end-users not an obscure totally

345
00:13:11,460 --> 00:13:16,350
useless<font color="#CCCCCC"> file</font><font color="#E5E5E5"> format if possible</font><font color="#CCCCCC"> an</font>

346
00:13:13,400 --> 00:13:18,390
option preferably something with crypto

347
00:13:16,350 --> 00:13:20,040
but certificates and crypto format<font color="#E5E5E5"> are</font>

348
00:13:18,390 --> 00:13:21,449
usually pretty restrictive so it's as

349
00:13:20,040 --> 00:13:23,099
<font color="#E5E5E5">not easy</font>

350
00:13:21,450 --> 00:13:25,080
<font color="#E5E5E5">are as far as I know not possible yet</font>

351
00:13:23,100 --> 00:13:27,270
with identical perfect<font color="#E5E5E5"> squares</font><font color="#CCCCCC"> and again</font>

352
00:13:25,080 --> 00:13:29,790
then you want really<font color="#CCCCCC"> a few</font><font color="#E5E5E5"> as few passes</font>

353
00:13:27,270 --> 00:13:31,380
as possible<font color="#E5E5E5"> because</font><font color="#CCCCCC"> if you have one file</font>

354
00:13:29,790 --> 00:13:32,250
format you knew how you have to test on

355
00:13:31,380 --> 00:13:35,250
<font color="#CCCCCC">all</font>

356
00:13:32,250 --> 00:13:37,080
I don't know JSON<font color="#CCCCCC"> parsers then it's</font>

357
00:13:35,250 --> 00:13:39,720
nightmare<font color="#CCCCCC"> and if you have just a</font><font color="#E5E5E5"> single</font>

358
00:13:37,080 --> 00:13:41,400
<font color="#E5E5E5">pass</font><font color="#CCCCCC"> right makes your whole Q&A much</font>

359
00:13:39,720 --> 00:13:43,590
easier<font color="#E5E5E5"> and of course you prefer you</font>

360
00:13:41,400 --> 00:13:45,090
might prefer something<font color="#E5E5E5"> very visual</font><font color="#CCCCCC"> so</font>

361
00:13:43,590 --> 00:13:47,760
that<font color="#E5E5E5"> the public understands rather than</font>

362
00:13:45,090 --> 00:13:48,870
oh this is the<font color="#E5E5E5"> auto</font><font color="#CCCCCC"> Dex a 3d file format</font>

363
00:13:47,760 --> 00:13:52,580
something<font color="#CCCCCC"> like</font><font color="#E5E5E5"> this you know</font>

364
00:13:48,870 --> 00:13:55,920
now you can pawn your favorite 3d<font color="#CCCCCC"> artist</font>

365
00:13:52,580 --> 00:13:58,440
<font color="#E5E5E5">and the challenge are of course valid eg</font>

366
00:13:55,920 --> 00:14:00,870
so the specs<font color="#E5E5E5"> the specs and again the</font>

367
00:13:58,440 --> 00:14:02,940
specs but also the compatibility<font color="#E5E5E5"> with</font>

368
00:14:00,870 --> 00:14:04,710
<font color="#CCCCCC">the actual file format so exploring all</font>

369
00:14:02,940 --> 00:14:07,230
the<font color="#E5E5E5"> corner case you want them not only</font>

370
00:14:04,710 --> 00:14:08,850
<font color="#E5E5E5">to look but</font><font color="#CCCCCC"> also to load normally and of</font>

371
00:14:07,230 --> 00:14:11,430
course you want<font color="#E5E5E5"> to make sure that they</font>

372
00:14:08,850 --> 00:14:13,320
will be reusable with all<font color="#E5E5E5"> sudden limits</font>

373
00:14:11,430 --> 00:14:15,479
of which files will work and<font color="#E5E5E5"> will</font><font color="#CCCCCC"> trial</font>

374
00:14:13,320 --> 00:14:17,340
<font color="#CCCCCC">will not so you explore</font><font color="#E5E5E5"> all the corner</font>

375
00:14:15,480 --> 00:14:19,260
all<font color="#CCCCCC"> the code paths</font><font color="#E5E5E5"> and all the header</font>

376
00:14:17,340 --> 00:14:21,120
values so you have to say could<font color="#CCCCCC"> it</font><font color="#E5E5E5"> be a</font>

377
00:14:19,260 --> 00:14:23,280
zero<font color="#CCCCCC"> could</font><font color="#E5E5E5"> it be an FF could it be</font>

378
00:14:21,120 --> 00:14:24,780
whatever<font color="#E5E5E5"> just to make sure and also I</font>

379
00:14:23,280 --> 00:14:27,900
looked really looked at the source to

380
00:14:24,780 --> 00:14:29,250
see<font color="#CCCCCC"> I</font><font color="#E5E5E5"> am sure that in all case the file</font>

381
00:14:27,900 --> 00:14:30,600
the<font color="#CCCCCC"> passer</font><font color="#E5E5E5"> will be okay so it's</font>

382
00:14:29,250 --> 00:14:32,970
<font color="#E5E5E5">exploitation but the other way around</font>

383
00:14:30,600 --> 00:14:34,560
<font color="#CCCCCC">you don't want to break the execution</font>

384
00:14:32,970 --> 00:14:37,560
<font color="#E5E5E5">you want to make sure</font><font color="#CCCCCC"> that in all case</font>

385
00:14:34,560 --> 00:14:40,040
with unknown data the execution will go

386
00:14:37,560 --> 00:14:43,770
fine<font color="#E5E5E5"> that's the</font><font color="#CCCCCC"> so it's kind of in</font>

387
00:14:40,040 --> 00:14:45,390
Reverse exploitation<font color="#E5E5E5"> you abuse the specs</font>

388
00:14:43,770 --> 00:14:47,460
<font color="#E5E5E5">and the file format to</font><font color="#CCCCCC"> make sure</font><font color="#E5E5E5"> that it</font>

389
00:14:45,390 --> 00:14:48,900
will<font color="#E5E5E5"> work</font><font color="#CCCCCC"> in all case you don't</font><font color="#E5E5E5"> you want</font>

390
00:14:47,460 --> 00:14:54,060
the user to think it's<font color="#E5E5E5"> just a</font><font color="#CCCCCC"> normal</font>

391
00:14:48,900 --> 00:14:56,069
file<font color="#E5E5E5"> so the paper in 2005 was the first</font>

392
00:14:54,060 --> 00:14:58,319
one with<font color="#CCCCCC"> if-then-else exploit so they</font>

393
00:14:56,070 --> 00:15:00,150
explored PostScript PDF TIFF and<font color="#E5E5E5"> words</font>

394
00:14:58,320 --> 00:15:02,040
97 so this is the kind<font color="#CCCCCC"> of macro</font><font color="#E5E5E5"> that</font>

395
00:15:00,150 --> 00:15:03,449
checks<font color="#E5E5E5"> the content of the value of the</font>

396
00:15:02,040 --> 00:15:05,839
block and then behaves differently

397
00:15:03,450 --> 00:15:08,670
depending<font color="#E5E5E5"> on the values so all of these</font>

398
00:15:05,840 --> 00:15:12,450
adult<font color="#E5E5E5"> display the examples in this paper</font>

399
00:15:08,670 --> 00:15:15,150
are<font color="#E5E5E5"> if-then-else so again not header or</font>

400
00:15:12,450 --> 00:15:17,070
<font color="#CCCCCC">these enough to file for matrix but</font>

401
00:15:15,150 --> 00:15:18,449
still it's<font color="#CCCCCC"> all there's already PDF</font><font color="#E5E5E5"> so</font>

402
00:15:17,070 --> 00:15:20,550
why not<font color="#E5E5E5"> using</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> one that was the</font>

403
00:15:18,450 --> 00:15:22,830
start of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> research for in</font><font color="#E5E5E5"> our case</font>

404
00:15:20,550 --> 00:15:24,449
for<font color="#CCCCCC"> shattered and so there's no</font>

405
00:15:22,830 --> 00:15:26,430
widespread scripting language in PDF

406
00:15:24,450 --> 00:15:27,990
<font color="#E5E5E5">there is only JavaScript and for</font>

407
00:15:26,430 --> 00:15:28,290
metallic but they only<font color="#E5E5E5"> exist in Adobe</font>

408
00:15:27,990 --> 00:15:30,210
<font color="#CCCCCC">Reader</font>

409
00:15:28,290 --> 00:15:32,790
<font color="#CCCCCC">so basically there</font><font color="#E5E5E5"> are six families of</font>

410
00:15:30,210 --> 00:15:34,590
PDF readers so basically if<font color="#E5E5E5"> you want</font>

411
00:15:32,790 --> 00:15:35,139
full compatibility you cannot use them

412
00:15:34,590 --> 00:15:38,319
then

413
00:15:35,139 --> 00:15:41,100
there is only one obscure way to put

414
00:15:38,319 --> 00:15:43,748
some<font color="#CCCCCC"> actual</font><font color="#E5E5E5"> computation testing it's</font>

415
00:15:41,100 --> 00:15:45,489
when you can calculate<font color="#E5E5E5"> a color space</font>

416
00:15:43,749 --> 00:15:47,589
<font color="#CCCCCC">with the PostScript mathematical</font>

417
00:15:45,489 --> 00:15:49,540
function<font color="#CCCCCC"> so basically you set a</font><font color="#E5E5E5"> color</font>

418
00:15:47,589 --> 00:15:51,339
space and the lookup buffer will point

419
00:15:49,540 --> 00:15:54,279
to the collision block<font color="#E5E5E5"> and then you say</font>

420
00:15:51,339 --> 00:15:55,749
<font color="#E5E5E5">you you you say to print something with</font>

421
00:15:54,279 --> 00:15:57,699
a graphical state and<font color="#E5E5E5"> this graphical</font>

422
00:15:55,749 --> 00:15:59,139
state points to a function that<font color="#E5E5E5"> here</font>

423
00:15:57,699 --> 00:16:00,998
contains some multiplication some

424
00:15:59,139 --> 00:16:03,220
mathematical operation in<font color="#CCCCCC"> PostScript to</font>

425
00:16:00,999 --> 00:16:05,799
<font color="#E5E5E5">say give me black or give me white and</font>

426
00:16:03,220 --> 00:16:07,629
<font color="#E5E5E5">then you have to</font><font color="#CCCCCC"> strip two images that</font>

427
00:16:05,799 --> 00:16:09,429
<font color="#CCCCCC">will display something</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> problem is</font>

428
00:16:07,629 --> 00:16:10,989
again<font color="#CCCCCC"> kampachi</font><font color="#E5E5E5"> which is not good it</font>

429
00:16:09,429 --> 00:16:12,549
works perfectly in Adobe Reader<font color="#E5E5E5"> but in</font>

430
00:16:10,989 --> 00:16:14,859
other readers it just doesn't work<font color="#CCCCCC"> and</font>

431
00:16:12,549 --> 00:16:17,049
on top of<font color="#E5E5E5"> that you cannot overlap you</font>

432
00:16:14,859 --> 00:16:19,119
<font color="#E5E5E5">and if you overlap some text so you</font>

433
00:16:17,049 --> 00:16:21,369
can't change some<font color="#CCCCCC"> stuff but you cannot</font>

434
00:16:19,119 --> 00:16:22,989
overlap<font color="#E5E5E5"> or value with another because in</font>

435
00:16:21,369 --> 00:16:26,220
<font color="#E5E5E5">this case</font><font color="#CCCCCC"> you have to text overlapping</font>

436
00:16:22,989 --> 00:16:29,769
so it's quite restrictive so it works

437
00:16:26,220 --> 00:16:33,220
but only<font color="#E5E5E5"> one reader and a lot</font><font color="#CCCCCC"> of</font>

438
00:16:29,769 --> 00:16:34,329
limitations so for Marwan<font color="#E5E5E5"> actually it</font>

439
00:16:33,220 --> 00:16:36,129
was very restrictive

440
00:16:34,329 --> 00:16:38,169
there was no<font color="#E5E5E5"> prefix</font><font color="#CCCCCC"> so it's like</font>

441
00:16:36,129 --> 00:16:39,579
directly<font color="#E5E5E5"> start with randomness and you</font>

442
00:16:38,169 --> 00:16:43,600
can<font color="#CCCCCC"> root first because it didn't take so</font>

443
00:16:39,579 --> 00:16:45,609
<font color="#CCCCCC">long to compute but we we couldn't</font><font color="#E5E5E5"> put</font>

444
00:16:43,600 --> 00:16:47,139
<font color="#E5E5E5">whatever value we wanted in the start so</font>

445
00:16:45,610 --> 00:16:49,269
first of all we<font color="#E5E5E5"> need a shell script</font>

446
00:16:47,139 --> 00:16:51,519
<font color="#CCCCCC">if-then-else so you have the collision</font>

447
00:16:49,269 --> 00:16:54,369
block and then<font color="#E5E5E5"> you have a comparison and</font>

448
00:16:51,519 --> 00:16:57,369
just to say good or bad<font color="#E5E5E5"> we also</font><font color="#CCCCCC"> did the</font>

449
00:16:54,369 --> 00:17:00,399
concatenation<font color="#E5E5E5"> so are in 7-zip</font><font color="#CCCCCC"> Master</font>

450
00:16:57,369 --> 00:17:02,980
<font color="#CCCCCC">Boot Record</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> JPEG that</font><font color="#E5E5E5"> will show</font>

451
00:17:00,399 --> 00:17:05,559
<font color="#E5E5E5">later and also all are in the same file</font>

452
00:17:02,980 --> 00:17:07,120
<font color="#E5E5E5">so the problem in multi one is that we</font>

453
00:17:05,559 --> 00:17:10,569
cannot control<font color="#CCCCCC"> four bytes in a row so</font>

454
00:17:07,119 --> 00:17:13,178
you cannot put<font color="#CCCCCC"> a magic</font><font color="#E5E5E5"> like most most</font>

455
00:17:10,569 --> 00:17:15,459
magic number like I don't know coffee

456
00:17:13,179 --> 00:17:17,470
babe or whatever you know<font color="#E5E5E5"> doc file so</font>

457
00:17:15,459 --> 00:17:19,089
Windows executable who looks<font color="#CCCCCC"> like a good</font>

458
00:17:17,470 --> 00:17:20,679
candidate<font color="#CCCCCC"> because at the start of the</font>

459
00:17:19,089 --> 00:17:22,720
<font color="#E5E5E5">Windows executable you only have a magic</font>

460
00:17:20,679 --> 00:17:25,779
of<font color="#E5E5E5"> two and then the only meaningful</font>

461
00:17:22,720 --> 00:17:27,549
value is<font color="#E5E5E5"> this the problem is that if you</font>

462
00:17:25,779 --> 00:17:29,740
<font color="#E5E5E5">will have totally random values</font><font color="#CCCCCC"> I</font>

463
00:17:27,549 --> 00:17:31,960
<font color="#CCCCCC">checked that</font><font color="#E5E5E5"> I created the Windows</font>

464
00:17:29,740 --> 00:17:34,000
executable of 150<font color="#CCCCCC"> megabyte and that was</font>

465
00:17:31,960 --> 00:17:35,409
the<font color="#E5E5E5"> maximum value</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> would run so if</font>

466
00:17:34,000 --> 00:17:40,179
you think<font color="#CCCCCC"> that this byte could be just</font>

467
00:17:35,409 --> 00:17:42,039
<font color="#E5E5E5">any value it doesn't work</font><font color="#CCCCCC"> so now</font><font color="#E5E5E5"> because</font>

468
00:17:40,179 --> 00:17:44,080
I<font color="#E5E5E5"> will talk a lot about</font><font color="#CCCCCC"> JPEG just a</font>

469
00:17:42,039 --> 00:17:46,600
primer on<font color="#E5E5E5"> JPEG from the file structure</font>

470
00:17:44,080 --> 00:17:48,279
so it starts<font color="#CCCCCC"> with a</font><font color="#E5E5E5"> very short magic FFT</font>

471
00:17:46,600 --> 00:17:48,899
<font color="#CCCCCC">AIT's</font><font color="#E5E5E5"> with only</font><font color="#CCCCCC"> two bytes</font><font color="#E5E5E5"> and then there</font>

472
00:17:48,279 --> 00:17:50,940
is<font color="#E5E5E5"> a the</font>

473
00:17:48,900 --> 00:17:52,800
there is<font color="#E5E5E5"> a structures made it's they're</font>

474
00:17:50,940 --> 00:17:56,100
called segments<font color="#E5E5E5"> and each</font><font color="#CCCCCC"> of them start</font>

475
00:17:52,800 --> 00:17:58,980
<font color="#E5E5E5">with</font><font color="#CCCCCC"> FF something and FF not 0</font><font color="#E5E5E5"> because</font>

476
00:17:56,100 --> 00:18:00,719
it is<font color="#E5E5E5"> FF 0 is special so it's always FF</font>

477
00:17:58,980 --> 00:18:02,640
and not something<font color="#CCCCCC"> 0</font><font color="#E5E5E5"> and actually it's a</font>

478
00:18:00,720 --> 00:18:03,660
recovery<font color="#CCCCCC"> mccann</font><font color="#E5E5E5"> is if you install some</font>

479
00:18:02,640 --> 00:18:05,910
complete garbage

480
00:18:03,660 --> 00:18:08,310
then the parser will<font color="#CCCCCC"> may be correct</font>

481
00:18:05,910 --> 00:18:10,620
<font color="#CCCCCC">during</font><font color="#E5E5E5"> match but it will just look for</font>

482
00:18:08,310 --> 00:18:12,090
the next<font color="#E5E5E5"> FF and not</font><font color="#CCCCCC"> 0 to say now what</font>

483
00:18:10,620 --> 00:18:15,120
structure do<font color="#E5E5E5"> I have so it's a very</font>

484
00:18:12,090 --> 00:18:17,699
tolerant mechanism and also<font color="#CCCCCC"> the</font><font color="#E5E5E5"> lengths</font>

485
00:18:15,120 --> 00:18:19,679
are<font color="#CCCCCC"> on 2 bytes</font><font color="#E5E5E5"> and there are big</font><font color="#CCCCCC"> endian</font>

486
00:18:17,700 --> 00:18:22,260
<font color="#E5E5E5">so</font><font color="#CCCCCC"> they are</font><font color="#E5E5E5"> very easy if you put a</font><font color="#CCCCCC"> 0 1</font>

487
00:18:19,680 --> 00:18:23,790
<font color="#E5E5E5">something it will</font><font color="#CCCCCC"> never too small so you</font>

488
00:18:22,260 --> 00:18:26,520
cannot learn back on the collision<font color="#E5E5E5"> block</font>

489
00:18:23,790 --> 00:18:29,070
and you will not like I will show<font color="#E5E5E5"> and</font>

490
00:18:26,520 --> 00:18:30,720
end up with a 4<font color="#CCCCCC"> gigabyte file</font><font color="#E5E5E5"> because</font>

491
00:18:29,070 --> 00:18:35,510
you know that there's only<font color="#CCCCCC"> one</font><font color="#E5E5E5"> byte that</font>

492
00:18:30,720 --> 00:18:39,510
<font color="#E5E5E5">will give you a range of difference of</font>

493
00:18:35,510 --> 00:18:42,660
<font color="#E5E5E5">255 on maximum so the strategy was</font><font color="#CCCCCC"> to</font>

494
00:18:39,510 --> 00:18:43,590
put to declare a<font color="#E5E5E5"> command and to have the</font>

495
00:18:42,660 --> 00:18:47,970
end of the length

496
00:18:43,590 --> 00:18:49,740
so again<font color="#CCCCCC"> 2 bytes and big-endian starting</font>

497
00:18:47,970 --> 00:18:54,240
a comment that would be<font color="#CCCCCC"> variable and</font><font color="#E5E5E5"> and</font>

498
00:18:49,740 --> 00:18:56,370
in this<font color="#E5E5E5"> case you will either there is</font>

499
00:18:54,240 --> 00:18:58,080
<font color="#E5E5E5">another</font><font color="#CCCCCC"> D</font><font color="#E5E5E5"> comment declaration and the</font>

500
00:18:56,370 --> 00:18:59,939
comment declaration will skip the<font color="#E5E5E5"> first</font>

501
00:18:58,080 --> 00:19:02,280
image will which<font color="#CCCCCC"> will learn to the</font>

502
00:18:59,940 --> 00:19:04,950
second<font color="#E5E5E5"> image or in the other case</font><font color="#CCCCCC"> this</font>

503
00:19:02,280 --> 00:19:07,379
length is actually longer<font color="#E5E5E5"> and in this</font>

504
00:19:04,950 --> 00:19:08,930
case you you put the another image

505
00:19:07,380 --> 00:19:12,390
<font color="#CCCCCC">details right at the first place</font><font color="#E5E5E5"> and</font>

506
00:19:08,930 --> 00:19:13,740
again with 0 1<font color="#CCCCCC"> X 6</font><font color="#E5E5E5"> you know you will not</font>

507
00:19:12,390 --> 00:19:16,230
jump back in the blocks because

508
00:19:13,740 --> 00:19:19,740
<font color="#CCCCCC">collision blocks are 64 or 128 bytes</font>

509
00:19:16,230 --> 00:19:22,560
<font color="#E5E5E5">depends but never very big and again</font>

510
00:19:19,740 --> 00:19:24,810
<font color="#E5E5E5">there will</font><font color="#CCCCCC"> not be huge either</font><font color="#E5E5E5"> so in</font>

511
00:19:22,560 --> 00:19:26,850
practice that gives you that<font color="#CCCCCC"> FF d8 and</font>

512
00:19:24,810 --> 00:19:29,100
then<font color="#CCCCCC"> ok the same thing with actual</font>

513
00:19:26,850 --> 00:19:31,740
structures and what do we did is<font color="#E5E5E5"> that</font>

514
00:19:29,100 --> 00:19:33,629
again<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is the start</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> file so</font>

515
00:19:31,740 --> 00:19:36,450
we'll really there<font color="#E5E5E5"> is a</font><font color="#CCCCCC"> lot of</font><font color="#E5E5E5"> garbage</font>

516
00:19:33,630 --> 00:19:39,840
<font color="#CCCCCC">so what we enforce it like an FF and</font><font color="#E5E5E5"> the</font>

517
00:19:36,450 --> 00:19:43,290
g8<font color="#CCCCCC"> to put magic signature then this</font>

518
00:19:39,840 --> 00:19:46,439
<font color="#E5E5E5">College these chunks FF e5 and e6 are</font>

519
00:19:43,290 --> 00:19:48,810
not very standard but it's fine

520
00:19:46,440 --> 00:19:50,640
<font color="#E5E5E5">because in the end it's they are ignored</font>

521
00:19:48,810 --> 00:19:52,800
and<font color="#E5E5E5"> they still the</font><font color="#CCCCCC"> paucity looks for a</font>

522
00:19:50,640 --> 00:19:54,780
length and in this<font color="#E5E5E5"> case you can you can</font>

523
00:19:52,800 --> 00:19:56,490
again we don't<font color="#E5E5E5"> control where the differ</font>

524
00:19:54,780 --> 00:19:58,980
or<font color="#CCCCCC"> everything like where the difference</font>

525
00:19:56,490 --> 00:20:01,920
will be so basically this will create

526
00:19:58,980 --> 00:20:02,310
two common blocks the to ignore blocks

527
00:20:01,920 --> 00:20:04,380
they are not

528
00:20:02,310 --> 00:20:05,760
officially<font color="#E5E5E5"> the comment</font><font color="#CCCCCC"> ones but it works</font>

529
00:20:04,380 --> 00:20:08,310
because<font color="#CCCCCC"> the parts</font><font color="#E5E5E5"> are still ignores them</font>

530
00:20:05,760 --> 00:20:10,080
and then we will<font color="#CCCCCC"> jump further</font><font color="#E5E5E5"> so even</font>

531
00:20:08,310 --> 00:20:12,030
though it's<font color="#CCCCCC"> their very little control</font><font color="#E5E5E5"> of</font>

532
00:20:10,080 --> 00:20:15,960
<font color="#E5E5E5">the whole overall data this is enough to</font>

533
00:20:12,030 --> 00:20:19,889
say this<font color="#E5E5E5"> is a JPEG and jump further at</font>

534
00:20:15,960 --> 00:20:21,900
different landing points we can<font color="#E5E5E5"> even do</font>

535
00:20:19,890 --> 00:20:24,630
them all<font color="#CCCCCC"> together in the same file form</font>

536
00:20:21,900 --> 00:20:27,240
our usability<font color="#E5E5E5"> the</font><font color="#CCCCCC"> just a thing we</font><font color="#E5E5E5"> cannot</font>

537
00:20:24,630 --> 00:20:30,930
combine<font color="#CCCCCC"> JPEG and must abort</font><font color="#E5E5E5"> record</font>

538
00:20:27,240 --> 00:20:35,580
because<font color="#CCCCCC"> FFT 8</font><font color="#E5E5E5"> is invalid x86 up code so</font>

539
00:20:30,930 --> 00:20:38,370
now that was modified<font color="#CCCCCC"> sha-1</font><font color="#E5E5E5"> in 2014 and</font>

540
00:20:35,580 --> 00:20:40,860
now<font color="#E5E5E5"> the start of the just the idea to</font>

541
00:20:38,370 --> 00:20:43,620
try<font color="#CCCCCC"> and do the</font><font color="#E5E5E5"> same with the actual</font>

542
00:20:40,860 --> 00:20:47,580
sha-1 and the attack for behind<font color="#E5E5E5"> the</font>

543
00:20:43,620 --> 00:20:50,159
<font color="#CCCCCC">shuttered attack the</font><font color="#E5E5E5"> the theory was</font>

544
00:20:47,580 --> 00:20:53,310
already published<font color="#E5E5E5"> in 2013 by Mac Stevens</font>

545
00:20:50,160 --> 00:20:55,260
and basically the<font color="#E5E5E5"> idea was you need an</font>

546
00:20:53,310 --> 00:20:57,000
attack<font color="#E5E5E5"> you need to the computing power</font>

547
00:20:55,260 --> 00:20:58,650
<font color="#E5E5E5">and to put it in practice and you also</font>

548
00:20:57,000 --> 00:21:01,170
need<font color="#CCCCCC"> a plan on</font><font color="#E5E5E5"> the file structure</font>

549
00:20:58,650 --> 00:21:04,290
because you have only<font color="#E5E5E5"> one try right so</font>

550
00:21:01,170 --> 00:21:06,210
again<font color="#CCCCCC"> I only worked on the researching</font>

551
00:21:04,290 --> 00:21:09,330
<font color="#CCCCCC">the fight trick so that was in 2015 and</font>

552
00:21:06,210 --> 00:21:10,890
then when once the attack<font color="#E5E5E5"> was computed</font>

553
00:21:09,330 --> 00:21:13,110
and there was actually<font color="#CCCCCC"> an actual</font>

554
00:21:10,890 --> 00:21:17,130
collision<font color="#CCCCCC"> crafted files</font><font color="#E5E5E5"> and make sure</font>

555
00:21:13,110 --> 00:21:17,939
they work so even though it<font color="#E5E5E5"> was huge in</font>

556
00:21:17,130 --> 00:21:20,310
computing power

557
00:21:17,940 --> 00:21:22,920
the attack was actually quite more

558
00:21:20,310 --> 00:21:25,050
flexible than<font color="#CCCCCC"> the modified sha-1</font><font color="#E5E5E5"> the</font>

559
00:21:22,920 --> 00:21:26,880
computation is very complex and it<font color="#CCCCCC"> was</font>

560
00:21:25,050 --> 00:21:29,040
never tried<font color="#CCCCCC"> before so we have one</font><font color="#E5E5E5"> signal</font>

561
00:21:26,880 --> 00:21:31,770
try and you cannot say hey can you

562
00:21:29,040 --> 00:21:33,300
change something now<font color="#E5E5E5"> so there was not we</font>

563
00:21:31,770 --> 00:21:37,830
didn't have this<font color="#E5E5E5"> freedom at all and</font>

564
00:21:33,300 --> 00:21:40,409
again<font color="#E5E5E5"> one single try then unlike mal</font>

565
00:21:37,830 --> 00:21:42,330
sha-1 there was a prefix<font color="#E5E5E5"> so we could put</font>

566
00:21:40,410 --> 00:21:45,150
a lot of stuff<font color="#E5E5E5"> we</font><font color="#CCCCCC"> have the Sun control</font>

567
00:21:42,330 --> 00:21:47,250
their blocks<font color="#E5E5E5"> there was no place for</font>

568
00:21:45,150 --> 00:21:49,890
brute forcing so the blocks were totally

569
00:21:47,250 --> 00:21:52,170
random<font color="#E5E5E5"> the mask</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> like much</font><font color="#CCCCCC"> Taiwan was</font>

570
00:21:49,890 --> 00:21:54,600
always constant so at least<font color="#E5E5E5"> it was more</font>

571
00:21:52,170 --> 00:21:56,340
predictable and the block start with the

572
00:21:54,600 --> 00:22:00,929
difference we<font color="#E5E5E5"> can which</font><font color="#CCCCCC"> can use as a</font>

573
00:21:56,340 --> 00:22:02,730
trampoline<font color="#CCCCCC"> to jump further so first we</font>

574
00:22:00,930 --> 00:22:04,710
okay I knew that the<font color="#E5E5E5"> matcha one trick</font>

575
00:22:02,730 --> 00:22:08,010
would work but we still wanted a new

576
00:22:04,710 --> 00:22:09,630
trick<font color="#CCCCCC"> and then again</font><font color="#E5E5E5"> PDF there was</font><font color="#CCCCCC"> a PDF</font>

577
00:22:08,010 --> 00:22:12,570
trick I mentioned earlier<font color="#E5E5E5"> but one reader</font>

578
00:22:09,630 --> 00:22:15,840
<font color="#E5E5E5">out of six so I really looked for a</font>

579
00:22:12,570 --> 00:22:18,418
different<font color="#E5E5E5"> kind of aspects in the PDF</font>

580
00:22:15,840 --> 00:22:19,649
but it never<font color="#CCCCCC"> works reliably and one</font>

581
00:22:18,419 --> 00:22:21,390
funny thing<font color="#CCCCCC"> is that</font><font color="#E5E5E5"> when you do this</font>

582
00:22:19,650 --> 00:22:22,860
research<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Chowan computation</font>

583
00:22:21,390 --> 00:22:24,120
coalition<font color="#E5E5E5"> doesn't exist yet</font><font color="#CCCCCC"> so you have</font>

584
00:22:22,860 --> 00:22:25,979
very<font color="#E5E5E5"> little traction if you and with</font>

585
00:22:24,120 --> 00:22:29,279
<font color="#E5E5E5">colleagues it's like I'm doing</font><font color="#CCCCCC"> research</font>

586
00:22:25,980 --> 00:22:30,750
on file formats for<font color="#CCCCCC"> a potential attack</font>

587
00:22:29,279 --> 00:22:34,799
that it doesn't<font color="#CCCCCC"> exist yet and people</font>

588
00:22:30,750 --> 00:22:38,039
<font color="#E5E5E5">like what did you smoke again</font><font color="#CCCCCC"> something</font>

589
00:22:34,799 --> 00:22:39,720
<font color="#E5E5E5">like this so it's it was actually like</font>

590
00:22:38,039 --> 00:22:40,950
yeah really you don't<font color="#E5E5E5"> get people</font>

591
00:22:39,720 --> 00:22:43,230
<font color="#E5E5E5">interested in it once it's completed</font>

592
00:22:40,950 --> 00:22:45,059
<font color="#E5E5E5">it's too late because then it should</font>

593
00:22:43,230 --> 00:22:46,549
<font color="#CCCCCC">work I mean it's too late for</font><font color="#E5E5E5"> my file</font>

594
00:22:45,059 --> 00:22:49,408
for my planning so you plan something

595
00:22:46,549 --> 00:22:53,100
you wait<font color="#E5E5E5"> and then it comes and then it's</font>

596
00:22:49,409 --> 00:22:54,960
too late<font color="#E5E5E5"> to</font><font color="#CCCCCC"> change any bit anywhere</font><font color="#E5E5E5"> so</font>

597
00:22:53,100 --> 00:22:57,480
if you're not familiar with PDF and with

598
00:22:54,960 --> 00:23:00,059
my vision<font color="#CCCCCC"> of PDF I will be</font><font color="#E5E5E5"> short so this</font>

599
00:22:57,480 --> 00:23:02,250
<font color="#CCCCCC">is a standard PDF</font><font color="#E5E5E5"> and here these are</font>

600
00:23:00,059 --> 00:23:04,440
<font color="#E5E5E5">PDFs have a lot of weird</font><font color="#CCCCCC"> stuff</font><font color="#E5E5E5"> if you</font>

601
00:23:02,250 --> 00:23:07,350
look at them in details<font color="#CCCCCC"> and by</font><font color="#E5E5E5"> all means</font>

602
00:23:04,440 --> 00:23:10,380
they should be invalid<font color="#E5E5E5"> but actually they</font>

603
00:23:07,350 --> 00:23:12,719
<font color="#CCCCCC">were just fine so basically every PDF</font>

604
00:23:10,380 --> 00:23:15,270
reader<font color="#E5E5E5"> and I know that pretty well have</font>

605
00:23:12,720 --> 00:23:17,250
<font color="#E5E5E5">its own query so compatibility with PDF</font>

606
00:23:15,270 --> 00:23:18,149
and when you want to<font color="#E5E5E5"> manipulate file</font>

607
00:23:17,250 --> 00:23:20,490
<font color="#CCCCCC">formats</font><font color="#E5E5E5"> is a nightmare</font>

608
00:23:18,149 --> 00:23:22,678
so I created extreme PDFs for each of

609
00:23:20,490 --> 00:23:24,809
these readers and they all work fine<font color="#E5E5E5"> and</font>

610
00:23:22,679 --> 00:23:26,549
they all Brock<font color="#E5E5E5"> they all break on the odd</font>

611
00:23:24,809 --> 00:23:28,799
<font color="#CCCCCC">all the other readers</font><font color="#E5E5E5"> on purpose because</font>

612
00:23:26,549 --> 00:23:31,049
<font color="#CCCCCC">I want</font><font color="#E5E5E5"> to extreme ways to make them as</font>

613
00:23:28,799 --> 00:23:32,879
crazy as<font color="#CCCCCC"> possible but still opening fine</font>

614
00:23:31,049 --> 00:23:35,010
on their respective reader and that's

615
00:23:32,880 --> 00:23:36,600
<font color="#E5E5E5">the landscape of the PDF right if you</font>

616
00:23:35,010 --> 00:23:38,100
want to<font color="#CCCCCC"> tell compatibility you</font><font color="#E5E5E5"> have to</font>

617
00:23:36,600 --> 00:23:40,439
deal with<font color="#E5E5E5"> that so it was just</font><font color="#CCCCCC"> so</font>

618
00:23:38,100 --> 00:23:42,299
<font color="#E5E5E5">parentage is to give you an idea of the</font>

619
00:23:40,440 --> 00:23:44,429
PDF<font color="#E5E5E5"> landscape is really not easy so</font>

620
00:23:42,299 --> 00:23:46,470
<font color="#E5E5E5">that's a problem does it</font><font color="#CCCCCC"> work but does</font>

621
00:23:44,429 --> 00:23:49,080
<font color="#E5E5E5">it even display or behave normally and</font>

622
00:23:46,470 --> 00:23:51,510
you<font color="#CCCCCC"> can get it one trick on a PDF</font><font color="#E5E5E5"> reader</font>

623
00:23:49,080 --> 00:23:54,059
is easy but getting<font color="#E5E5E5"> all a trick on all</font>

624
00:23:51,510 --> 00:23:55,799
of them is<font color="#CCCCCC"> very hard for example P</font>

625
00:23:54,059 --> 00:23:57,809
preview is more<font color="#E5E5E5"> strict with JPEG</font>

626
00:23:55,799 --> 00:24:01,080
structure<font color="#E5E5E5"> but it creates some here you</font>

627
00:23:57,809 --> 00:24:02,490
have a JPEG with the two<font color="#CCCCCC"> JPEG</font><font color="#E5E5E5"> displayed</font>

628
00:24:01,080 --> 00:24:04,110
transparently on top of each other and

629
00:24:02,490 --> 00:24:06,120
there's no<font color="#E5E5E5"> transparency in JPEG anyway</font>

630
00:24:04,110 --> 00:24:09,270
<font color="#E5E5E5">so that was a that was a first for</font>

631
00:24:06,120 --> 00:24:11,908
anyone or<font color="#E5E5E5"> okay if you put an unusual</font>

632
00:24:09,270 --> 00:24:13,950
JPEG in a PDF it can reboot<font color="#CCCCCC"> a</font><font color="#E5E5E5"> Kindle for</font>

633
00:24:11,909 --> 00:24:16,140
example<font color="#E5E5E5"> or take very long or</font><font color="#CCCCCC"> even some</font>

634
00:24:13,950 --> 00:24:18,659
<font color="#E5E5E5">if</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> have a very completely crazy JPEG</font>

635
00:24:16,140 --> 00:24:20,580
<font color="#CCCCCC">in a PDF then it displays</font><font color="#E5E5E5"> glitches only</font>

636
00:24:18,659 --> 00:24:23,309
in<font color="#E5E5E5"> Adobe because why not</font>

637
00:24:20,580 --> 00:24:27,199
or here there's ratio in preview Safari

638
00:24:23,309 --> 00:24:31,760
<font color="#E5E5E5">are different in suffer because PDF</font>

639
00:24:27,200 --> 00:24:33,710
so again<font color="#E5E5E5"> PDF is tricky</font><font color="#CCCCCC"> PDF trick with</font>

640
00:24:31,760 --> 00:24:35,480
<font color="#CCCCCC">total</font><font color="#E5E5E5"> combat you can</font><font color="#CCCCCC"> we will really</font><font color="#E5E5E5"> like</font>

641
00:24:33,710 --> 00:24:38,600
to have complete different documents

642
00:24:35,480 --> 00:24:41,120
it's not just a glitch that<font color="#CCCCCC"> oh look this</font>

643
00:24:38,600 --> 00:24:44,419
<font color="#E5E5E5">pixel is green or this</font><font color="#CCCCCC"> pizza is</font><font color="#E5E5E5"> red yeah</font>

644
00:24:41,120 --> 00:24:47,090
it's not<font color="#CCCCCC"> very we wanted something better</font>

645
00:24:44,420 --> 00:24:49,610
so eventually convincing that<font color="#CCCCCC"> JPEG mini</font>

646
00:24:47,090 --> 00:24:53,179
<font color="#E5E5E5">PDF would work because the PDF and</font>

647
00:24:49,610 --> 00:24:54,620
embeds entire JPEG files and the

648
00:24:53,180 --> 00:24:57,860
parameters of the<font color="#E5E5E5"> JPEG can be referenced</font>

649
00:24:54,620 --> 00:25:00,080
<font color="#CCCCCC">further so if we change a</font><font color="#E5E5E5"> JPEG then we</font>

650
00:24:57,860 --> 00:25:01,520
can<font color="#E5E5E5"> still the dimensions and</font><font color="#CCCCCC"> the color</font>

651
00:25:00,080 --> 00:25:03,649
space if they are grayscale<font color="#CCCCCC"> or anything</font>

652
00:25:01,520 --> 00:25:06,920
<font color="#E5E5E5">can be changed after the computation and</font>

653
00:25:03,650 --> 00:25:08,540
again unlike<font color="#E5E5E5"> PDF</font><font color="#CCCCCC"> they all use the same</font>

654
00:25:06,920 --> 00:25:10,880
JPEG<font color="#E5E5E5"> standard so basically if you</font>

655
00:25:08,540 --> 00:25:13,190
<font color="#CCCCCC">analyze leap</font><font color="#E5E5E5"> JPEG then you have</font>

656
00:25:10,880 --> 00:25:15,890
reliability<font color="#E5E5E5"> within the PDF world and</font>

657
00:25:13,190 --> 00:25:17,690
again<font color="#E5E5E5"> there's the proof of</font><font color="#CCCCCC"> concept</font><font color="#E5E5E5"> would</font>

658
00:25:15,890 --> 00:25:20,480
not<font color="#E5E5E5"> be for gigabyte we knew that</font><font color="#CCCCCC"> already</font>

659
00:25:17,690 --> 00:25:23,360
with<font color="#E5E5E5"> multi</font><font color="#CCCCCC"> Wan and they will work fairly</font>

660
00:25:20,480 --> 00:25:26,510
<font color="#E5E5E5">reliably and it will be reusable so like</font>

661
00:25:23,360 --> 00:25:28,219
<font color="#E5E5E5">infinite pair of colliding files so of</font>

662
00:25:26,510 --> 00:25:29,840
course then<font color="#E5E5E5"> we</font><font color="#CCCCCC"> where we already I</font>

663
00:25:28,220 --> 00:25:32,090
already<font color="#CCCCCC"> did some research on the</font><font color="#E5E5E5"> JPEG</font>

664
00:25:29,840 --> 00:25:33,860
part so I wanted<font color="#CCCCCC"> to see</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> we</font>

665
00:25:32,090 --> 00:25:35,990
<font color="#CCCCCC">wanted not</font><font color="#E5E5E5"> to just have</font><font color="#CCCCCC"> two pictures but</font>

666
00:25:33,860 --> 00:25:37,340
it worked because<font color="#E5E5E5"> it's PDF we wanted to</font>

667
00:25:35,990 --> 00:25:38,780
have<font color="#CCCCCC"> something that looks like fake</font>

668
00:25:37,340 --> 00:25:40,790
documents and you need a higher

669
00:25:38,780 --> 00:25:42,020
resolution<font color="#CCCCCC"> and we saw that there are</font>

670
00:25:40,790 --> 00:25:44,240
<font color="#E5E5E5">some</font><font color="#CCCCCC"> annotation that I wanted</font><font color="#E5E5E5"> to</font>

671
00:25:42,020 --> 00:25:46,310
overcome<font color="#CCCCCC"> and especially the</font><font color="#E5E5E5"> first image</font>

672
00:25:44,240 --> 00:25:50,000
has<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be jumped over and a jump</font><font color="#CCCCCC"> you</font>

673
00:25:46,310 --> 00:25:52,040
<font color="#CCCCCC">know so the jump can only be 64 K so</font>

674
00:25:50,000 --> 00:25:53,450
<font color="#CCCCCC">that is a lot of</font><font color="#E5E5E5"> limitation so for</font>

675
00:25:52,040 --> 00:25:56,000
<font color="#CCCCCC">example this is the example</font><font color="#E5E5E5"> I use for my</font>

676
00:25:53,450 --> 00:25:58,100
sha-1 it's already<font color="#E5E5E5"> quite low in</font><font color="#CCCCCC"> Kali</font>

677
00:25:56,000 --> 00:26:00,530
quality and it's<font color="#CCCCCC"> already--as near the</font>

678
00:25:58,100 --> 00:26:03,439
limit<font color="#CCCCCC"> of the length of a comment</font><font color="#E5E5E5"> so at</font>

679
00:26:00,530 --> 00:26:05,780
this stage<font color="#E5E5E5"> image size is</font><font color="#CCCCCC"> limited to 64</font>

680
00:26:03,440 --> 00:26:07,460
<font color="#E5E5E5">kilobyte good for a photo but</font><font color="#CCCCCC"> not for</font>

681
00:26:05,780 --> 00:26:10,280
documentation<font color="#CCCCCC"> now the trick is to</font>

682
00:26:07,460 --> 00:26:12,260
actually in the specs there should be

683
00:26:10,280 --> 00:26:14,060
only one<font color="#E5E5E5"> command pod</font><font color="#CCCCCC"> JPEG</font><font color="#E5E5E5"> in practice if</font>

684
00:26:12,260 --> 00:26:15,860
you look at<font color="#CCCCCC"> Lib</font><font color="#E5E5E5"> JPEG there can be any</font>

685
00:26:14,060 --> 00:26:18,620
comment will<font color="#CCCCCC"> be sparse so you can put as</font>

686
00:26:15,860 --> 00:26:20,270
many as you<font color="#CCCCCC"> want</font><font color="#E5E5E5"> so instead you put for</font>

687
00:26:18,620 --> 00:26:23,120
each segment of<font color="#CCCCCC"> the first image you put</font>

688
00:26:20,270 --> 00:26:24,830
two<font color="#CCCCCC"> commands</font><font color="#E5E5E5"> once more and that embeds a</font>

689
00:26:23,120 --> 00:26:26,810
trampoline the jumps<font color="#E5E5E5"> over it so it's</font>

690
00:26:24,830 --> 00:26:29,179
full of trampoline<font color="#E5E5E5"> between all the</font>

691
00:26:26,810 --> 00:26:31,280
segments so in one<font color="#CCCCCC"> case it</font><font color="#E5E5E5"> really jumps</font>

692
00:26:29,180 --> 00:26:33,230
<font color="#CCCCCC">over all the segments so in this case</font>

693
00:26:31,280 --> 00:26:35,540
<font color="#E5E5E5">the segments each of the segments is</font>

694
00:26:33,230 --> 00:26:39,230
limited to 64 kilobytes so already<font color="#CCCCCC"> you</font>

695
00:26:35,540 --> 00:26:40,879
can use<font color="#CCCCCC"> a bigger picture now the problem</font>

696
00:26:39,230 --> 00:26:41,390
is<font color="#E5E5E5"> that of course 2d</font><font color="#CCCCCC"> too</font><font color="#E5E5E5"> is if it would</font>

697
00:26:40,880 --> 00:26:43,940
be that

698
00:26:41,390 --> 00:26:45,950
predictable<font color="#CCCCCC"> the one that contains</font><font color="#E5E5E5"> all</font>

699
00:26:43,940 --> 00:26:48,650
the<font color="#CCCCCC"> data that is</font><font color="#E5E5E5"> compressed and coded</font>

700
00:26:45,950 --> 00:26:51,410
with mathematical<font color="#CCCCCC"> burden</font><font color="#E5E5E5"> and so on this</font>

701
00:26:48,650 --> 00:26:52,820
<font color="#E5E5E5">part this segment the scan segment the</font>

702
00:26:51,410 --> 00:26:55,340
length is only<font color="#CCCCCC"> the length of the header</font>

703
00:26:52,820 --> 00:26:56,450
<font color="#E5E5E5">and the rest of the data doesn't follow</font>

704
00:26:55,340 --> 00:27:00,139
any rule<font color="#CCCCCC"> of length</font>

705
00:26:56,450 --> 00:27:03,830
thank you so basically it can grow it

706
00:27:00,140 --> 00:27:05,780
will grow linearly with<font color="#E5E5E5"> the file so and</font>

707
00:27:03,830 --> 00:27:08,570
it will not<font color="#E5E5E5"> limit itself to 64 kilobytes</font>

708
00:27:05,780 --> 00:27:10,549
<font color="#CCCCCC">so it's</font><font color="#E5E5E5"> then of course that was too easy</font>

709
00:27:08,570 --> 00:27:12,559
<font color="#CCCCCC">and in the case</font><font color="#E5E5E5"> of the official example</font>

710
00:27:10,549 --> 00:27:14,629
of the official<font color="#E5E5E5"> proof of concept it's</font>

711
00:27:12,559 --> 00:27:17,360
228 kilobytes and the image<font color="#CCCCCC"> that was</font>

712
00:27:14,630 --> 00:27:19,309
given you have a single<font color="#E5E5E5"> scan of</font><font color="#CCCCCC"> 237</font><font color="#E5E5E5"> so</font>

713
00:27:17,360 --> 00:27:21,110
that will<font color="#CCCCCC"> not work it's already</font><font color="#E5E5E5"> you will</font>

714
00:27:19,309 --> 00:27:24,020
have to have<font color="#E5E5E5"> something that looks much</font>

715
00:27:21,110 --> 00:27:28,399
that is much smaller<font color="#E5E5E5"> or uglier so again</font>

716
00:27:24,020 --> 00:27:29,900
a primer<font color="#E5E5E5"> on PDF and JPEG in JPEG you</font>

717
00:27:28,400 --> 00:27:32,270
have components<font color="#E5E5E5"> so basically the</font>

718
00:27:29,900 --> 00:27:33,830
<font color="#E5E5E5">components is not in RGB but in</font>

719
00:27:32,270 --> 00:27:36,049
brightness<font color="#E5E5E5"> so basically grayscale and</font>

720
00:27:33,830 --> 00:27:38,030
<font color="#E5E5E5">how much there is of blue so the</font><font color="#CCCCCC"> Biggers</font>

721
00:27:36,049 --> 00:27:39,830
<font color="#CCCCCC">oh no</font><font color="#E5E5E5"> blue and how much air is of red so</font>

722
00:27:38,030 --> 00:27:44,000
you<font color="#E5E5E5"> can see the redness the glutinous</font>

723
00:27:39,830 --> 00:27:48,139
and the luma so first<font color="#CCCCCC"> images decompose</font>

724
00:27:44,000 --> 00:27:50,000
in components then each the scans<font color="#CCCCCC"> came</font>

725
00:27:48,140 --> 00:27:52,520
<font color="#E5E5E5">you know</font><font color="#CCCCCC"> when you have this blurry image</font>

726
00:27:50,000 --> 00:27:54,679
<font color="#CCCCCC">at loads you can have each scan</font>

727
00:27:52,520 --> 00:27:56,750
containing some value some definition

728
00:27:54,679 --> 00:27:58,610
and the each<font color="#CCCCCC"> of the scan improves the</font>

729
00:27:56,750 --> 00:28:00,650
quality of<font color="#E5E5E5"> the image</font><font color="#CCCCCC"> so basically you</font>

730
00:27:58,610 --> 00:28:02,809
split the data in this<font color="#CCCCCC"> case so you can</font>

731
00:28:00,650 --> 00:28:06,770
add either the colors<font color="#E5E5E5"> or you can even</font>

732
00:28:02,809 --> 00:28:09,200
<font color="#E5E5E5">have some definition so basically with</font>

733
00:28:06,770 --> 00:28:11,450
the progressive<font color="#E5E5E5"> image you have the same</font>

734
00:28:09,200 --> 00:28:14,720
file<font color="#CCCCCC"> but smaller scan so already we</font>

735
00:28:11,450 --> 00:28:17,570
<font color="#E5E5E5">overlooked this limitation in a small</font>

736
00:28:14,720 --> 00:28:19,549
way<font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> so basically for</font>

737
00:28:17,570 --> 00:28:21,139
<font color="#E5E5E5">this proof of concept just saving it as</font>

738
00:28:19,549 --> 00:28:23,480
progressive was good enough to<font color="#CCCCCC"> reduce</font>

739
00:28:21,140 --> 00:28:25,970
all the scans<font color="#E5E5E5"> below 64 kilobytes but</font>

740
00:28:23,480 --> 00:28:27,710
let's explore<font color="#E5E5E5"> further</font><font color="#CCCCCC"> because why not</font>

741
00:28:25,970 --> 00:28:30,020
so welcome<font color="#E5E5E5"> to the JPEG School of</font>

742
00:28:27,710 --> 00:28:32,290
wizardry<font color="#CCCCCC"> because if you look at the JPEG</font>

743
00:28:30,020 --> 00:28:34,610
<font color="#E5E5E5">from official tool there is a switch</font>

744
00:28:32,290 --> 00:28:36,559
<font color="#E5E5E5">switches for me defying switches for</font>

745
00:28:34,610 --> 00:28:38,449
<font color="#E5E5E5">advanced user and switch for wizards</font><font color="#CCCCCC"> and</font>

746
00:28:36,559 --> 00:28:40,370
there is a<font color="#CCCCCC"> very Wizard dock in the</font>

747
00:28:38,450 --> 00:28:43,309
official documentation and this is what

748
00:28:40,370 --> 00:28:45,379
we're gonna do so basically JPEG Tron

749
00:28:43,309 --> 00:28:47,928
you can<font color="#E5E5E5"> with JPEG Tron you can if you</font>

750
00:28:45,380 --> 00:28:50,450
<font color="#CCCCCC">are wanting to do wizardry you can</font>

751
00:28:47,929 --> 00:28:53,929
really specify by hand<font color="#CCCCCC"> each of the scan</font>

752
00:28:50,450 --> 00:28:54,740
and<font color="#E5E5E5"> then you can really customize to</font>

753
00:28:53,929 --> 00:28:57,170
make it<font color="#CCCCCC"> too</font>

754
00:28:54,740 --> 00:28:59,510
you can really say<font color="#E5E5E5"> one scan doesn't</font>

755
00:28:57,170 --> 00:29:02,510
contain the<font color="#CCCCCC"> whole information</font><font color="#E5E5E5"> 64 bytes</font>

756
00:28:59,510 --> 00:29:06,230
<font color="#E5E5E5">but maybe one bit and in this case</font><font color="#CCCCCC"> it</font>

757
00:29:02,510 --> 00:29:07,970
you you you can split<font color="#CCCCCC"> really you can</font>

758
00:29:06,230 --> 00:29:10,070
<font color="#E5E5E5">have a higher picture a bigger picture</font>

759
00:29:07,970 --> 00:29:12,679
<font color="#CCCCCC">and each</font><font color="#E5E5E5"> of this</font><font color="#CCCCCC"> scan will</font><font color="#E5E5E5"> be smaller</font>

760
00:29:10,070 --> 00:29:14,360
than 64<font color="#E5E5E5"> kilobyte the problem is that</font>

761
00:29:12,679 --> 00:29:16,160
<font color="#E5E5E5">JPEG turn is a bit inconsistent and the</font>

762
00:29:14,360 --> 00:29:18,050
actual documentation example is broken

763
00:29:16,160 --> 00:29:20,980
<font color="#CCCCCC">but you know wizardry you have to learn</font>

764
00:29:18,050 --> 00:29:24,169
it the<font color="#CCCCCC"> hard way</font><font color="#E5E5E5"> in practice this image</font>

765
00:29:20,980 --> 00:29:26,809
<font color="#E5E5E5">so it's high resolution</font><font color="#CCCCCC"> its quality 100%</font>

766
00:29:24,170 --> 00:29:29,090
and<font color="#E5E5E5"> it's 860 kilobytes and here are all</font>

767
00:29:26,809 --> 00:29:30,800
<font color="#E5E5E5">the definitions that we do with the that</font>

768
00:29:29,090 --> 00:29:33,500
I use for JPEG Tron

769
00:29:30,800 --> 00:29:34,879
so here the<font color="#E5E5E5"> 0 is the</font><font color="#CCCCCC"> grayness so there</font>

770
00:29:33,500 --> 00:29:36,350
<font color="#E5E5E5">are not so many colors if you look at</font>

771
00:29:34,880 --> 00:29:39,670
there's not so much red and so much blue

772
00:29:36,350 --> 00:29:42,230
<font color="#E5E5E5">so basically there</font><font color="#CCCCCC"> is more grayscale</font>

773
00:29:39,670 --> 00:29:46,400
information and blue and<font color="#E5E5E5"> red</font><font color="#CCCCCC"> and this</font>

774
00:29:42,230 --> 00:29:48,980
splits the<font color="#E5E5E5"> whole 0 to 63 spectrum too in</font>

775
00:29:46,400 --> 00:29:53,179
this<font color="#E5E5E5"> case</font><font color="#CCCCCC"> the several scans you see so</font>

776
00:29:48,980 --> 00:29:55,160
basically<font color="#E5E5E5"> with this you you can actually</font>

777
00:29:53,179 --> 00:29:57,200
<font color="#E5E5E5">have this image have even if it's quite</font>

778
00:29:55,160 --> 00:30:00,770
big<font color="#E5E5E5"> and high resolution</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> have it</font>

779
00:29:57,200 --> 00:30:02,240
keep all<font color="#CCCCCC"> it scans under 64 kilobyte</font><font color="#E5E5E5"> the</font>

780
00:30:00,770 --> 00:30:05,330
thing is you can<font color="#CCCCCC"> even do that more but</font>

781
00:30:02,240 --> 00:30:07,580
then I made<font color="#CCCCCC"> a completely</font><font color="#E5E5E5"> crazy JPEG and</font>

782
00:30:05,330 --> 00:30:09,710
it was still<font color="#E5E5E5"> in standard in resolution</font>

783
00:30:07,580 --> 00:30:13,040
<font color="#E5E5E5">which was taking</font><font color="#CCCCCC"> 7 minutes to</font><font color="#E5E5E5"> load on</font>

784
00:30:09,710 --> 00:30:14,929
Ubuntu<font color="#E5E5E5"> just for you while it was pretty</font>

785
00:30:13,040 --> 00:30:17,840
standard from the resolution and

786
00:30:14,929 --> 00:30:20,000
everything so now another trick<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that</font>

787
00:30:17,840 --> 00:30:21,740
<font color="#CCCCCC">Lib JPEG as a</font><font color="#E5E5E5"> theoretical limit a</font>

788
00:30:20,000 --> 00:30:23,120
<font color="#E5E5E5">hard-coded limit of hundreds can but</font>

789
00:30:21,740 --> 00:30:25,010
<font color="#CCCCCC">just on writing and if you just on</font>

790
00:30:23,120 --> 00:30:26,540
reading it doesn't care<font color="#CCCCCC"> so you can put I</font>

791
00:30:25,010 --> 00:30:28,220
think<font color="#CCCCCC"> I'd made one</font><font color="#E5E5E5"> with two thousand</font>

792
00:30:26,540 --> 00:30:30,770
scan and<font color="#E5E5E5"> that was breaking</font><font color="#CCCCCC"> Adobe</font><font color="#E5E5E5"> Reader</font>

793
00:30:28,220 --> 00:30:33,110
<font color="#CCCCCC">but at least we could</font><font color="#E5E5E5"> release a bitty</font>

794
00:30:30,770 --> 00:30:35,330
page doc but<font color="#E5E5E5"> it's giving mobiles</font><font color="#CCCCCC"> a hard</font>

795
00:30:33,110 --> 00:30:37,129
time so we there was not really<font color="#CCCCCC"> need but</font>

796
00:30:35,330 --> 00:30:40,189
at least now you know it's documented<font color="#E5E5E5"> in</font>

797
00:30:37,130 --> 00:30:42,980
case so basically<font color="#CCCCCC"> shutter</font><font color="#E5E5E5"> is a</font><font color="#CCCCCC"> JPEG in a</font>

798
00:30:40,190 --> 00:30:45,380
PDF<font color="#E5E5E5"> so far I was talking about</font><font color="#CCCCCC"> JPEG so</font>

799
00:30:42,980 --> 00:30:47,510
we still<font color="#CCCCCC"> want a PDF file so the PDF</font>

800
00:30:45,380 --> 00:30:49,370
prefix declares the header<font color="#CCCCCC"> declare</font><font color="#E5E5E5"> the</font>

801
00:30:47,510 --> 00:30:51,140
image<font color="#E5E5E5"> then reference all the image</font>

802
00:30:49,370 --> 00:30:52,699
parameter<font color="#CCCCCC"> later in the file so that</font><font color="#E5E5E5"> it</font>

803
00:30:51,140 --> 00:30:54,170
<font color="#E5E5E5">can be updated at once the computation</font>

804
00:30:52,700 --> 00:30:56,510
is<font color="#CCCCCC"> done then you put the to image</font>

805
00:30:54,170 --> 00:31:00,830
content<font color="#E5E5E5"> you split the top image with all</font>

806
00:30:56,510 --> 00:31:02,390
<font color="#CCCCCC">these scans trickery and one thing is</font>

807
00:31:00,830 --> 00:31:03,980
because<font color="#E5E5E5"> the</font><font color="#CCCCCC"> point to the same parameters</font>

808
00:31:02,390 --> 00:31:08,140
<font color="#CCCCCC">you have to have the same</font><font color="#E5E5E5"> dimensions</font><font color="#CCCCCC"> so</font>

809
00:31:03,980 --> 00:31:08,140
which we didn't need in<font color="#CCCCCC"> Marjah</font><font color="#E5E5E5"> one</font>

810
00:31:09,309 --> 00:31:16,070
<font color="#CCCCCC">haja</font><font color="#E5E5E5"> and then you you put the data you</font>

811
00:31:13,850 --> 00:31:18,199
put the values and<font color="#E5E5E5"> you finalize</font><font color="#CCCCCC"> a PDF</font>

812
00:31:16,070 --> 00:31:19,820
file<font color="#CCCCCC"> so basically this is what how it</font>

813
00:31:18,200 --> 00:31:21,320
looks like and this reference<font color="#CCCCCC"> the</font>

814
00:31:19,820 --> 00:31:23,269
properties<font color="#E5E5E5"> and the properties are behind</font>

815
00:31:21,320 --> 00:31:25,039
and then<font color="#E5E5E5"> you can put the PDF content and</font>

816
00:31:23,269 --> 00:31:26,899
you<font color="#E5E5E5"> can even put several pages we'll see</font>

817
00:31:25,039 --> 00:31:28,340
that later<font color="#E5E5E5"> and they will this is just a</font>

818
00:31:26,899 --> 00:31:32,029
<font color="#E5E5E5">single image</font><font color="#CCCCCC"> that contains on the</font><font color="#E5E5E5"> page</font>

819
00:31:28,340 --> 00:31:34,370
and<font color="#CCCCCC"> you can make</font><font color="#E5E5E5"> them point only show a</font>

820
00:31:32,029 --> 00:31:35,960
patch<font color="#E5E5E5"> a partial part of the image so</font>

821
00:31:34,370 --> 00:31:37,789
<font color="#E5E5E5">basically it looks like you're browsing</font>

822
00:31:35,960 --> 00:31:39,320
a normal document<font color="#E5E5E5"> we couldn't do</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> we</font>

823
00:31:37,789 --> 00:31:43,309
can actually do better<font color="#CCCCCC"> we'll see later</font>

824
00:31:39,320 --> 00:31:45,230
so now this was just<font color="#CCCCCC"> your</font><font color="#E5E5E5"> in 2015 I</font><font color="#CCCCCC"> I</font>

825
00:31:43,309 --> 00:31:47,600
tell<font color="#E5E5E5"> okay I'm done</font><font color="#CCCCCC"> now</font>

826
00:31:45,230 --> 00:31:51,080
<font color="#E5E5E5">it brain year 100 GPU year and sixty</font>

827
00:31:47,600 --> 00:31:53,570
thousand six thousand CPU<font color="#E5E5E5"> layer later</font>

828
00:31:51,080 --> 00:31:56,928
<font color="#CCCCCC">woohoo we have a collision</font><font color="#E5E5E5"> here is the</font>

829
00:31:53,570 --> 00:31:58,580
file<font color="#CCCCCC"> and so here comes</font><font color="#E5E5E5"> a random nest two</font>

830
00:31:56,929 --> 00:32:02,000
years<font color="#CCCCCC"> later the great wave of Steven's</font>

831
00:31:58,580 --> 00:32:04,399
13<font color="#E5E5E5"> and this happens hi</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> did what you</font>

832
00:32:02,000 --> 00:32:06,080
say the file did<font color="#E5E5E5"> not collide and I can</font>

833
00:32:04,399 --> 00:32:08,689
tell you I totally<font color="#CCCCCC"> lost</font><font color="#E5E5E5"> my I wasn't</font>

834
00:32:06,080 --> 00:32:10,699
<font color="#CCCCCC">I was not breathing anymore but what</font>

835
00:32:08,690 --> 00:32:13,279
happened<font color="#E5E5E5"> and there was a lot of first</font>

836
00:32:10,700 --> 00:32:15,289
the<font color="#E5E5E5"> the readers have been updated there</font>

837
00:32:13,279 --> 00:32:19,399
was some corner case I still didn't

838
00:32:15,289 --> 00:32:21,559
<font color="#CCCCCC">Explorer I</font><font color="#E5E5E5"> I lost a few years of my life</font>

839
00:32:19,399 --> 00:32:23,989
<font color="#E5E5E5">that</font><font color="#CCCCCC"> day but anyway after we celebrated</font>

840
00:32:21,559 --> 00:32:25,370
and so on<font color="#E5E5E5"> but lesson learned keeping</font>

841
00:32:23,990 --> 00:32:27,529
notes<font color="#CCCCCC"> especially</font><font color="#E5E5E5"> I didn't know there</font>

842
00:32:25,370 --> 00:32:29,449
would be two years of<font color="#CCCCCC"> SEP one year and a</font>

843
00:32:27,529 --> 00:32:31,429
half<font color="#CCCCCC"> of separation</font><font color="#E5E5E5"> between the two so</font>

844
00:32:29,450 --> 00:32:33,590
keep notes and proof of concept helps

845
00:32:31,429 --> 00:32:34,909
<font color="#E5E5E5">but also a diary</font><font color="#CCCCCC"> and sometimes even a</font>

846
00:32:33,590 --> 00:32:36,529
log of common lines because when<font color="#E5E5E5"> you</font>

847
00:32:34,909 --> 00:32:39,769
under<font color="#E5E5E5"> pressure</font><font color="#CCCCCC"> that's what you will</font>

848
00:32:36,529 --> 00:32:41,720
compute that for<font color="#CCCCCC"> he's on you then he it</font>

849
00:32:39,769 --> 00:32:43,190
really helps it way every<font color="#E5E5E5"> written things</font>

850
00:32:41,720 --> 00:32:46,250
help and again some bugs have been fixed

851
00:32:43,190 --> 00:32:47,870
in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> meantime so the the landscape has</font>

852
00:32:46,250 --> 00:32:49,429
evolved a bit and that<font color="#E5E5E5"> was</font><font color="#CCCCCC"> a lot of</font>

853
00:32:47,870 --> 00:32:52,459
<font color="#E5E5E5">pressure but at the end</font>

854
00:32:49,429 --> 00:32:53,990
shattered is real<font color="#E5E5E5"> and there was no zero</font>

855
00:32:52,460 --> 00:32:56,450
bug reported so the PDF were really

856
00:32:53,990 --> 00:32:59,440
compatible with everything<font color="#E5E5E5"> and it gave a</font>

857
00:32:56,450 --> 00:33:02,419
we got the best<font color="#CCCCCC"> kryptos</font><font color="#E5E5E5"> 17 paper word</font>

858
00:32:59,440 --> 00:33:05,210
pony<font color="#E5E5E5"> of the crypto attack</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> no</font><font color="#CCCCCC"> mini</font>

859
00:33:02,419 --> 00:33:09,409
<font color="#CCCCCC">did four petals</font><font color="#E5E5E5"> or what so academic info</font>

860
00:33:05,210 --> 00:33:11,809
<font color="#CCCCCC">second antivirus community if you want</font>

861
00:33:09,409 --> 00:33:13,789
<font color="#E5E5E5">details this is what the actual proof of</font>

862
00:33:11,809 --> 00:33:15,980
concept<font color="#E5E5E5"> look like and</font><font color="#CCCCCC"> i will</font><font color="#E5E5E5"> just add</font>

863
00:33:13,789 --> 00:33:19,100
some details<font color="#CCCCCC"> there is a hidden</font><font color="#E5E5E5"> test</font>

864
00:33:15,980 --> 00:33:20,190
there<font color="#CCCCCC"> is a very shy one is dead inside</font>

865
00:33:19,100 --> 00:33:22,559
<font color="#CCCCCC">but there is</font>

866
00:33:20,190 --> 00:33:24,480
this buffer<font color="#E5E5E5"> that doesn't look like it</font>

867
00:33:22,559 --> 00:33:26,850
<font color="#CCCCCC">has any</font><font color="#E5E5E5"> point and it was for production</font>

868
00:33:24,480 --> 00:33:28,980
purposes we<font color="#E5E5E5"> basically it was</font><font color="#CCCCCC"> to</font>

869
00:33:26,850 --> 00:33:32,039
<font color="#E5E5E5">randomize every computation so that</font>

870
00:33:28,980 --> 00:33:34,950
there we would the computation could say

871
00:33:32,039 --> 00:33:37,169
which it would not<font color="#CCCCCC"> work on the same file</font>

872
00:33:34,950 --> 00:33:39,330
so that<font color="#CCCCCC"> was kind of</font><font color="#E5E5E5"> anti-collision</font>

873
00:33:37,169 --> 00:33:43,019
mechanism<font color="#E5E5E5"> to for randomization of the</font>

874
00:33:39,330 --> 00:33:44,970
process<font color="#E5E5E5"> so just</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> could explain the</font>

875
00:33:43,019 --> 00:33:48,509
<font color="#E5E5E5">rest but that one was for production</font>

876
00:33:44,970 --> 00:33:50,220
purposes of the computation<font color="#E5E5E5"> so the</font>

877
00:33:48,509 --> 00:33:52,799
impact of<font color="#CCCCCC"> Chillon</font><font color="#E5E5E5"> is not</font>

878
00:33:50,220 --> 00:33:54,330
<font color="#CCCCCC">collision-resistant the</font><font color="#E5E5E5"> CV was they</font>

879
00:33:52,799 --> 00:33:55,740
<font color="#E5E5E5">didn't it blocks as subversion in</font>

880
00:33:54,330 --> 00:33:58,019
practice with<font color="#E5E5E5"> several subversion</font><font color="#CCCCCC"> was</font>

881
00:33:55,740 --> 00:34:00,570
<font color="#E5E5E5">using sha-1 for deduplication</font><font color="#CCCCCC"> do I</font>

882
00:33:58,019 --> 00:34:02,730
<font color="#E5E5E5">notice fine</font><font color="#CCCCCC"> already Oh same sha-1 okay a</font>

883
00:34:00,570 --> 00:34:04,889
<font color="#E5E5E5">wait is it</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> same file and it was</font>

884
00:34:02,730 --> 00:34:07,139
checking<font color="#E5E5E5"> empty md5 for integrity and</font>

885
00:34:04,889 --> 00:34:08,879
then it was breaking<font color="#CCCCCC"> it broke</font><font color="#E5E5E5"> instantly</font>

886
00:34:07,139 --> 00:34:11,339
subversion<font color="#CCCCCC"> there was also another</font>

887
00:34:08,879 --> 00:34:14,219
practice with BitTorrent because

888
00:34:11,339 --> 00:34:17,310
Victoria<font color="#E5E5E5"> used</font><font color="#CCCCCC"> shamans</font><font color="#E5E5E5"> to do the checks</font>

889
00:34:14,219 --> 00:34:19,489
amount of chunks<font color="#CCCCCC"> so internet does it</font>

890
00:34:17,310 --> 00:34:22,290
sing<font color="#CCCCCC"> within 5-year hours there</font><font color="#E5E5E5"> was a</font>

891
00:34:19,489 --> 00:34:24,750
generator<font color="#CCCCCC"> that was available someone did</font>

892
00:34:22,290 --> 00:34:27,389
the HTML<font color="#CCCCCC"> version of that and a CTF</font>

893
00:34:24,750 --> 00:34:29,760
Championship did<font color="#E5E5E5"> both there was a flag</font>

894
00:34:27,389 --> 00:34:33,119
and a big Bitcoin<font color="#E5E5E5"> bound</font><font color="#CCCCCC"> she claimed for</font>

895
00:34:29,760 --> 00:34:36,929
that so<font color="#CCCCCC"> Internet as usual</font><font color="#E5E5E5"> there was some</font>

896
00:34:33,119 --> 00:34:38,609
variant to just<font color="#E5E5E5"> feed back but we can do</font>

897
00:34:36,929 --> 00:34:42,750
more<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> not just about</font><font color="#CCCCCC"> full-page</font>

898
00:34:38,609 --> 00:34:44,759
<font color="#CCCCCC">picture it's about it's actually totally</font>

899
00:34:42,750 --> 00:34:47,460
<font color="#E5E5E5">standard PDF with the weird JPEG inside</font>

900
00:34:44,760 --> 00:34:49,260
<font color="#E5E5E5">any PDF</font><font color="#CCCCCC"> element can be part of the JPEG</font>

901
00:34:47,460 --> 00:34:51,949
and was so I'm running<font color="#CCCCCC"> out of time so</font>

902
00:34:49,260 --> 00:34:55,169
<font color="#CCCCCC">we'll</font><font color="#E5E5E5"> skip on the demos</font><font color="#CCCCCC"> I will</font><font color="#E5E5E5"> go faster</font>

903
00:34:51,949 --> 00:34:57,180
<font color="#CCCCCC">so basically it could</font><font color="#E5E5E5"> be a multi-page</font>

904
00:34:55,168 --> 00:34:57,839
document as we saw or a totally standard

905
00:34:57,180 --> 00:34:59,640
documentation

906
00:34:57,839 --> 00:35:01,950
<font color="#CCCCCC">we'd</font><font color="#E5E5E5"> only a few elements</font><font color="#CCCCCC"> replaced and</font>

907
00:34:59,640 --> 00:35:08,190
here is the official<font color="#E5E5E5"> shattered document</font>

908
00:35:01,950 --> 00:35:10,290
and it's well it's totally<font color="#E5E5E5"> the official</font>

909
00:35:08,190 --> 00:35:15,140
paper<font color="#E5E5E5"> but what I did is I replace two</font>

910
00:35:10,290 --> 00:35:20,550
elements<font color="#E5E5E5"> of the of the text so</font><font color="#CCCCCC"> we lost</font>

911
00:35:15,140 --> 00:35:22,290
someone<font color="#E5E5E5"> played a trick on me okay</font><font color="#CCCCCC"> it's</font>

912
00:35:20,550 --> 00:35:23,760
<font color="#CCCCCC">back so basically I replaced my name</font>

913
00:35:22,290 --> 00:35:25,680
here the<font color="#CCCCCC"> reference to my name with</font>

914
00:35:23,760 --> 00:35:27,810
another one<font color="#CCCCCC"> so here you</font><font color="#E5E5E5"> can see that my</font>

915
00:35:25,680 --> 00:35:29,339
<font color="#E5E5E5">name was replaced and the only picture</font>

916
00:35:27,810 --> 00:35:30,810
that<font color="#E5E5E5"> is in the</font><font color="#CCCCCC"> document was also</font>

917
00:35:29,339 --> 00:35:33,060
<font color="#E5E5E5">replaced with another</font><font color="#CCCCCC"> one so basically</font>

918
00:35:30,810 --> 00:35:34,460
<font color="#E5E5E5">it's a totally normal</font><font color="#CCCCCC"> document but here</font>

919
00:35:33,060 --> 00:35:37,160
there is<font color="#CCCCCC"> a use of the</font>

920
00:35:34,460 --> 00:35:39,410
and I'm just<font color="#CCCCCC"> using</font><font color="#E5E5E5"> clipping to only show</font>

921
00:35:37,160 --> 00:35:40,819
this part and then again I'm reusing

922
00:35:39,410 --> 00:35:43,160
this picture again<font color="#E5E5E5"> to change another</font>

923
00:35:40,820 --> 00:35:45,110
<font color="#E5E5E5">part of the</font><font color="#CCCCCC"> document so</font><font color="#E5E5E5"> 99% of the</font>

924
00:35:43,160 --> 00:35:47,180
document is totally standard<font color="#CCCCCC"> and it's</font>

925
00:35:45,110 --> 00:35:49,550
just<font color="#CCCCCC"> - a</font><font color="#E5E5E5"> few elements have been pointed</font>

926
00:35:47,180 --> 00:35:53,000
to that be polar<font color="#CCCCCC"> JPEG that colliding</font>

927
00:35:49,550 --> 00:35:55,490
<font color="#E5E5E5">JPEG so what's jpg JPEG is not strictly</font>

928
00:35:53,000 --> 00:35:57,020
<font color="#E5E5E5">a image format it's a lossy data storage</font>

929
00:35:55,490 --> 00:35:59,000
if you think<font color="#E5E5E5"> about it specialized for</font>

930
00:35:57,020 --> 00:36:01,130
photo and PDF takes it a<font color="#E5E5E5"> bit too</font>

931
00:35:59,000 --> 00:36:04,280
literally so three<font color="#E5E5E5"> out of six readers</font>

932
00:36:01,130 --> 00:36:06,410
<font color="#CCCCCC">except jpg store data for anything else</font>

933
00:36:04,280 --> 00:36:07,970
<font color="#E5E5E5">such</font><font color="#CCCCCC"> as page</font><font color="#E5E5E5"> content so this cross</font><font color="#CCCCCC"> this</font>

934
00:36:06,410 --> 00:36:11,089
<font color="#E5E5E5">is the code in the page content to</font>

935
00:36:07,970 --> 00:36:12,950
generate it the<font color="#CCCCCC"> browser's</font><font color="#E5E5E5"> don't do that</font>

936
00:36:11,090 --> 00:36:14,540
but<font color="#E5E5E5"> all the other readers do the</font>

937
00:36:12,950 --> 00:36:16,970
standard<font color="#CCCCCC"> Rize so the problem is</font><font color="#E5E5E5"> that</font>

938
00:36:14,540 --> 00:36:19,130
<font color="#E5E5E5">JPEG is in theory lossless so if you do</font>

939
00:36:16,970 --> 00:36:21,529
<font color="#E5E5E5">100%</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> greyscale you don't have</font>

940
00:36:19,130 --> 00:36:24,110
component mixing anymore and because

941
00:36:21,530 --> 00:36:26,600
JPEG is using blocks of 8x8 if you<font color="#CCCCCC"> if</font>

942
00:36:24,110 --> 00:36:29,690
you duplicate the data<font color="#CCCCCC"> eight times then</font>

943
00:36:26,600 --> 00:36:33,890
<font color="#CCCCCC">JPEG becomes not less</font><font color="#E5E5E5"> so you can reuse</font>

944
00:36:29,690 --> 00:36:37,010
<font color="#E5E5E5">it and you can say MPEG and encode this</font>

945
00:36:33,890 --> 00:36:39,109
data as<font color="#CCCCCC"> JPEG</font><font color="#E5E5E5"> use it as page content use</font>

946
00:36:37,010 --> 00:36:40,790
the sha-1 prefix<font color="#E5E5E5"> and now you have show</font>

947
00:36:39,110 --> 00:36:43,310
on collisions<font color="#E5E5E5"> working with something</font>

948
00:36:40,790 --> 00:36:46,730
else<font color="#E5E5E5"> so no not time to go</font><font color="#CCCCCC"> through the</font>

949
00:36:43,310 --> 00:36:49,400
demo<font color="#E5E5E5"> but anyway it's a fully vector</font><font color="#CCCCCC"> text</font>

950
00:36:46,730 --> 00:36:52,220
and it's actually<font color="#E5E5E5"> showing colliding with</font>

951
00:36:49,400 --> 00:36:55,550
a totally different vector drawing that

952
00:36:52,220 --> 00:36:57,770
I did<font color="#E5E5E5"> so again another kind of JPEG of</font>

953
00:36:55,550 --> 00:36:59,930
sha-1 colliding<font color="#CCCCCC"> proof of concept</font><font color="#E5E5E5"> using</font>

954
00:36:57,770 --> 00:37:01,790
the exact same prefix<font color="#CCCCCC"> and the fun part</font>

955
00:36:59,930 --> 00:37:03,859
is<font color="#E5E5E5"> that in the end it's a JPEG grayscale</font>

956
00:37:01,790 --> 00:37:06,800
<font color="#E5E5E5">JPEG and of course the text can declare</font>

957
00:37:03,860 --> 00:37:10,180
colors because in the JPEG<font color="#E5E5E5"> now we have</font>

958
00:37:06,800 --> 00:37:13,730
<font color="#E5E5E5">JPEG as image JPEG</font><font color="#CCCCCC"> as data</font><font color="#E5E5E5"> why not both</font>

959
00:37:10,180 --> 00:37:15,410
<font color="#CCCCCC">so you put the data</font><font color="#E5E5E5"> you want</font><font color="#CCCCCC"> to be</font>

960
00:37:13,730 --> 00:37:17,300
lossless you store it eight times<font color="#E5E5E5"> you</font>

961
00:37:15,410 --> 00:37:20,420
<font color="#E5E5E5">append the image and then the page</font>

962
00:37:17,300 --> 00:37:22,370
content can reference<font color="#E5E5E5"> itself the only</font>

963
00:37:20,420 --> 00:37:24,080
<font color="#CCCCCC">thing is that</font><font color="#E5E5E5"> there is no page content</font>

964
00:37:22,370 --> 00:37:26,960
<font color="#E5E5E5">terminator so it</font><font color="#CCCCCC"> could failure on the</font>

965
00:37:24,080 --> 00:37:28,880
<font color="#E5E5E5">ring but in the end you use a normal</font>

966
00:37:26,960 --> 00:37:30,320
<font color="#CCCCCC">image and then you put some code here</font>

967
00:37:28,880 --> 00:37:32,330
that<font color="#E5E5E5"> you duplicate eight times and this</font>

968
00:37:30,320 --> 00:37:34,580
<font color="#CCCCCC">will be lossless and that this code</font><font color="#E5E5E5"> is</font>

969
00:37:32,330 --> 00:37:36,080
<font color="#CCCCCC">actually referencing the image itself so</font>

970
00:37:34,580 --> 00:37:38,150
basically you can<font color="#E5E5E5"> have two colliding</font>

971
00:37:36,080 --> 00:37:39,890
files<font color="#E5E5E5"> and this is a JPEG that is</font>

972
00:37:38,150 --> 00:37:41,660
<font color="#E5E5E5">colliding with this one the code is</font>

973
00:37:39,890 --> 00:37:43,640
different<font color="#E5E5E5"> and it's referencing the image</font>

974
00:37:41,660 --> 00:37:47,480
<font color="#E5E5E5">again and these ones are also sha-1</font>

975
00:37:43,640 --> 00:37:49,279
colliding so again still the same

976
00:37:47,480 --> 00:37:51,230
computation but<font color="#E5E5E5"> you have different kind</font>

977
00:37:49,280 --> 00:37:53,570
of proof of concept that<font color="#CCCCCC"> could</font><font color="#E5E5E5"> be tricky</font>

978
00:37:51,230 --> 00:37:55,160
at<font color="#CCCCCC"> very levels and the thing is it's</font>

979
00:37:53,570 --> 00:37:56,570
trivial<font color="#CCCCCC"> to detect because you have the</font>

980
00:37:55,160 --> 00:37:59,660
<font color="#E5E5E5">shaman is dead at the start of the file</font>

981
00:37:56,570 --> 00:38:02,119
<font color="#E5E5E5">but now it's not so obvious that it's</font>

982
00:37:59,660 --> 00:38:03,220
just a different of JPEG<font color="#E5E5E5"> it could be</font>

983
00:38:02,119 --> 00:38:06,500
anywhere else

984
00:38:03,220 --> 00:38:08,540
md5 we also did some<font color="#CCCCCC"> work</font><font color="#E5E5E5"> on md5 md5 is</font>

985
00:38:06,500 --> 00:38:11,300
<font color="#E5E5E5">already broken so nothing to see right</font>

986
00:38:08,540 --> 00:38:13,220
<font color="#E5E5E5">you could think</font><font color="#CCCCCC"> that but</font><font color="#E5E5E5"> it's still why</font>

987
00:38:11,300 --> 00:38:15,890
create<font color="#E5E5E5"> only a pair of colliding files</font>

988
00:38:13,220 --> 00:38:19,459
when you<font color="#E5E5E5"> create 69 collision into</font><font color="#CCCCCC"> how to</font>

989
00:38:15,890 --> 00:38:22,490
<font color="#CCCCCC">^ sixty six hundred</font><font color="#E5E5E5"> and nine sorry 609</font>

990
00:38:19,460 --> 00:38:23,930
files different with the same hash so

991
00:38:22,490 --> 00:38:25,819
what's the collision in the end<font color="#CCCCCC"> yeah</font>

992
00:38:23,930 --> 00:38:27,200
usually<font color="#E5E5E5"> you want to good and evil</font>

993
00:38:25,820 --> 00:38:28,850
content you want<font color="#E5E5E5"> them to have the same</font>

994
00:38:27,200 --> 00:38:31,220
hash but the other way around<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> just</font>

995
00:38:28,850 --> 00:38:33,770
the content has<font color="#CCCCCC"> changed and the hash is</font>

996
00:38:31,220 --> 00:38:37,250
the same<font color="#E5E5E5"> so basically a</font><font color="#CCCCCC"> hush</font><font color="#E5E5E5"> coin is a</font>

997
00:38:33,770 --> 00:38:38,869
file<font color="#E5E5E5"> it shows</font><font color="#CCCCCC"> its own hush</font><font color="#E5E5E5"> so it's a</font>

998
00:38:37,250 --> 00:38:40,460
mental trick<font color="#E5E5E5"> because you think</font><font color="#CCCCCC"> usually</font>

999
00:38:38,869 --> 00:38:42,260
<font color="#CCCCCC">people think the other way it's</font><font color="#E5E5E5"> like how</font>

1000
00:38:40,460 --> 00:38:43,840
do you<font color="#E5E5E5"> know the hash in advance</font><font color="#CCCCCC"> and here</font>

1001
00:38:42,260 --> 00:38:46,010
it's<font color="#E5E5E5"> the other way around</font><font color="#CCCCCC"> we actually</font>

1002
00:38:43,840 --> 00:38:48,320
use some collisions so that you can

1003
00:38:46,010 --> 00:38:50,480
switch the display of the hash to adjust

1004
00:38:48,320 --> 00:38:54,380
the<font color="#E5E5E5"> the rendered value to the actual</font>

1005
00:38:50,480 --> 00:38:55,940
files hush<font color="#E5E5E5"> so a fake hash coin is just a</font>

1006
00:38:54,380 --> 00:38:57,859
script that<font color="#E5E5E5"> computes that was basically</font>

1007
00:38:55,940 --> 00:39:00,619
faking it and<font color="#CCCCCC"> always often comes with</font>

1008
00:38:57,859 --> 00:39:02,630
obfuscation<font color="#E5E5E5"> if you use a format</font>

1009
00:39:00,619 --> 00:39:04,550
<font color="#E5E5E5">touchpoint then basically a collision is</font>

1010
00:39:02,630 --> 00:39:06,080
like either take this file or text<font color="#CCCCCC"> the</font>

1011
00:39:04,550 --> 00:39:08,810
<font color="#CCCCCC">new</font><font color="#E5E5E5"> one the next one so basically</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> you</font>

1012
00:39:06,080 --> 00:39:11,779
add<font color="#CCCCCC"> X collisions you can have X plus 1</font>

1013
00:39:08,810 --> 00:39:13,460
version<font color="#CCCCCC"> of the same element</font><font color="#E5E5E5"> and then you</font>

1014
00:39:11,780 --> 00:39:15,020
change<font color="#E5E5E5"> the content so that the right</font>

1015
00:39:13,460 --> 00:39:18,200
element you<font color="#E5E5E5"> want it to</font><font color="#CCCCCC"> display is</font>

1016
00:39:15,020 --> 00:39:19,970
rendered<font color="#CCCCCC"> nega</font><font color="#E5E5E5"> data ash coin is you</font>

1017
00:39:18,200 --> 00:39:21,830
actually<font color="#CCCCCC"> have to alternate contents of</font>

1018
00:39:19,970 --> 00:39:23,600
the same thing<font color="#E5E5E5"> so basically you can</font><font color="#CCCCCC"> use</font>

1019
00:39:21,830 --> 00:39:25,100
this as one bit<font color="#CCCCCC"> of data</font><font color="#E5E5E5"> so then you can</font>

1020
00:39:23,600 --> 00:39:27,020
put some<font color="#E5E5E5"> code that will parse it and</font>

1021
00:39:25,100 --> 00:39:29,960
display<font color="#E5E5E5"> it's more efficient but it</font>

1022
00:39:27,020 --> 00:39:32,060
requires some code to<font color="#CCCCCC"> be executed</font><font color="#E5E5E5"> so in</font>

1023
00:39:29,960 --> 00:39:38,420
practice<font color="#CCCCCC"> I will still</font><font color="#E5E5E5"> I really want to</font>

1024
00:39:32,060 --> 00:39:41,840
show those so this is no sorry so this

1025
00:39:38,420 --> 00:39:45,290
shows the actual hash of the file<font color="#E5E5E5"> and</font>

1026
00:39:41,840 --> 00:39:49,100
this<font color="#E5E5E5"> one is even better</font><font color="#CCCCCC"> I think so it's</font>

1027
00:39:45,290 --> 00:39:51,230
the<font color="#CCCCCC"> hashes 8850</font><font color="#E5E5E5"> 95</font><font color="#CCCCCC"> so this is a file</font>

1028
00:39:49,100 --> 00:39:53,089
<font color="#CCCCCC">that shows its own hash in a very nice</font>

1029
00:39:51,230 --> 00:39:54,950
<font color="#CCCCCC">way I</font><font color="#E5E5E5"> think so</font>

1030
00:39:53,090 --> 00:39:56,180
we did a Greg did it for that for

1031
00:39:54,950 --> 00:40:00,020
<font color="#CCCCCC">PostScript that was the first hash</font>

1032
00:39:56,180 --> 00:40:03,799
<font color="#E5E5E5">whenever and then is a</font><font color="#CCCCCC"> spq deed</font><font color="#E5E5E5"> for give</font>

1033
00:40:00,020 --> 00:40:06,530
and Marco did<font color="#E5E5E5"> it for</font><font color="#CCCCCC"> PDF as image and</font>

1034
00:40:03,800 --> 00:40:08,750
<font color="#E5E5E5">PDF as</font><font color="#CCCCCC"> tag so</font><font color="#E5E5E5"> md5</font><font color="#CCCCCC"> 7 PDF to text give</font>

1035
00:40:06,530 --> 00:40:10,940
<font color="#E5E5E5">their same result that's pretty nice</font><font color="#CCCCCC"> and</font>

1036
00:40:08,750 --> 00:40:13,070
what kind is that<font color="#E5E5E5"> with jiff and with</font>

1037
00:40:10,940 --> 00:40:15,920
<font color="#E5E5E5">also with teeth and that was an example</font>

1038
00:40:13,070 --> 00:40:17,210
<font color="#E5E5E5">this</font><font color="#CCCCCC"> TIF is 4 gigabyte</font><font color="#E5E5E5"> because one</font>

1039
00:40:15,920 --> 00:40:19,280
pointer<font color="#CCCCCC"> will be</font><font color="#E5E5E5"> huge</font>

1040
00:40:17,210 --> 00:40:21,320
so<font color="#E5E5E5"> you know it's sometimes it's good</font>

1041
00:40:19,280 --> 00:40:22,760
that it's also good to<font color="#E5E5E5"> make practical</font>

1042
00:40:21,320 --> 00:40:25,160
proof of concept rather than<font color="#E5E5E5"> 4 gigabytes</font>

1043
00:40:22,760 --> 00:40:26,990
<font color="#CCCCCC">but</font><font color="#E5E5E5"> it's not</font><font color="#CCCCCC"> possible</font><font color="#E5E5E5"> and poker poker</font>

1044
00:40:25,160 --> 00:40:28,850
<font color="#CCCCCC">GTFO</font><font color="#E5E5E5"> is an issue that contains articles</font>

1045
00:40:26,990 --> 00:40:32,569
about hash coin which is<font color="#CCCCCC"> also a hash</font>

1046
00:40:28,850 --> 00:40:36,170
<font color="#E5E5E5">coin itself so it's not</font><font color="#CCCCCC"> exaggerated</font><font color="#E5E5E5"> it's</font>

1047
00:40:32,570 --> 00:40:38,270
showing<font color="#E5E5E5"> its own hash on the front it's</font>

1048
00:40:36,170 --> 00:40:40,610
also<font color="#E5E5E5"> an</font><font color="#CCCCCC"> ester</font><font color="#E5E5E5"> on polyglot so the same</font>

1049
00:40:38,270 --> 00:40:43,250
file is<font color="#CCCCCC"> on is a PDF and</font><font color="#E5E5E5"> an S ROM which</font>

1050
00:40:40,610 --> 00:40:45,440
is<font color="#E5E5E5"> also showing its own hash but this is</font>

1051
00:40:43,250 --> 00:40:49,450
a format hash coin and this<font color="#E5E5E5"> is a data</font>

1052
00:40:45,440 --> 00:40:51,860
hash<font color="#E5E5E5"> Quine so at this point</font><font color="#CCCCCC"> we're a 609</font>

1053
00:40:49,450 --> 00:40:53,390
<font color="#E5E5E5">collision and the last one is d because</font>

1054
00:40:51,860 --> 00:40:55,340
there is an alternate version<font color="#E5E5E5"> of the</font>

1055
00:40:53,390 --> 00:40:57,830
<font color="#E5E5E5">cover in the file and you</font><font color="#CCCCCC"> can swap them</font>

1056
00:40:55,340 --> 00:41:01,910
<font color="#E5E5E5">and still have the same hash so that's</font>

1057
00:40:57,830 --> 00:41:03,890
why we put<font color="#E5E5E5"> 609 collisions so now you</font>

1058
00:41:01,910 --> 00:41:05,629
know how a<font color="#E5E5E5"> cryptographic hash is really</font>

1059
00:41:03,890 --> 00:41:08,240
<font color="#E5E5E5">broken we just we were</font><font color="#CCCCCC"> really</font><font color="#E5E5E5"> playful</font>

1060
00:41:05,630 --> 00:41:10,250
with<font color="#E5E5E5"> md5 and you think security</font><font color="#CCCCCC"> ly</font>

1061
00:41:08,240 --> 00:41:12,470
<font color="#E5E5E5">relied in the past on this you know in</font>

1062
00:41:10,250 --> 00:41:15,850
the end we computed<font color="#E5E5E5"> almost 10,000</font>

1063
00:41:12,470 --> 00:41:18,049
collisions for fun so it's broken

1064
00:41:15,850 --> 00:41:21,410
<font color="#E5E5E5">officially broken now so thanks</font><font color="#CCCCCC"> Mark</font>

1065
00:41:18,050 --> 00:41:26,060
<font color="#E5E5E5">Stephens for the toys other formats just</font>

1066
00:41:21,410 --> 00:41:28,790
<font color="#E5E5E5">quickly certifcate it's difficult to</font>

1067
00:41:26,060 --> 00:41:32,060
exploit<font color="#E5E5E5"> as far as I know prove me wrong</font>

1068
00:41:28,790 --> 00:41:35,300
please<font color="#E5E5E5"> you'll be famous</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> would say PNG</font>

1069
00:41:32,060 --> 00:41:37,820
the<font color="#E5E5E5"> strength the signature is very long</font>

1070
00:41:35,300 --> 00:41:39,710
<font color="#E5E5E5">the chunk types is coming after the</font>

1071
00:41:37,820 --> 00:41:41,450
<font color="#E5E5E5">length you cannot really how you would</font>

1072
00:41:39,710 --> 00:41:42,830
have some brute forcing or something<font color="#E5E5E5"> the</font>

1073
00:41:41,450 --> 00:41:44,899
lengths are<font color="#E5E5E5"> on</font><font color="#CCCCCC"> 4 bytes</font><font color="#E5E5E5"> and there are</font>

1074
00:41:42,830 --> 00:41:47,090
<font color="#CCCCCC">little in</font><font color="#E5E5E5"> yen so they can be huge and</font>

1075
00:41:44,900 --> 00:41:49,640
<font color="#CCCCCC">they</font><font color="#E5E5E5"> are TRC's at the end of each chunk</font>

1076
00:41:47,090 --> 00:41:51,140
<font color="#E5E5E5">it's easy to make</font><font color="#CCCCCC"> chunks that</font><font color="#E5E5E5"> will be</font>

1077
00:41:49,640 --> 00:41:54,680
ignored<font color="#CCCCCC"> if you just</font><font color="#E5E5E5"> start with an</font>

1078
00:41:51,140 --> 00:41:57,350
uppercase and<font color="#CCCCCC"> the COCs</font><font color="#E5E5E5"> are usually</font>

1079
00:41:54,680 --> 00:41:59,210
ignore but<font color="#E5E5E5"> I you could easily end up</font>

1080
00:41:57,350 --> 00:42:01,580
with the foggy<font color="#E5E5E5"> a very with a huge</font>

1081
00:41:59,210 --> 00:42:05,770
colliding PNG so that's why we didn't go

1082
00:42:01,580 --> 00:42:08,900
that way and again it's not a hash and

1083
00:42:05,770 --> 00:42:11,140
<font color="#E5E5E5">one trick for ever it's not</font><font color="#CCCCCC"> a harsh but</font>

1084
00:42:08,900 --> 00:42:12,920
<font color="#E5E5E5">an attack for a hash</font><font color="#CCCCCC"> that gives you</font>

1085
00:42:11,140 --> 00:42:15,799
constraints

1086
00:42:12,920 --> 00:42:18,230
<font color="#E5E5E5">and these constraints may be</font><font color="#CCCCCC"> compatible</font>

1087
00:42:15,800 --> 00:42:19,850
<font color="#E5E5E5">or not with the file formats so the same</font>

1088
00:42:18,230 --> 00:42:21,890
attack can<font color="#CCCCCC"> be used with various file</font>

1089
00:42:19,850 --> 00:42:25,430
formats<font color="#E5E5E5"> or a file format as we saw could</font>

1090
00:42:21,890 --> 00:42:27,740
be used for<font color="#CCCCCC"> several attacks</font><font color="#E5E5E5"> even in the</font>

1091
00:42:25,430 --> 00:42:30,440
future<font color="#E5E5E5"> which I did the</font><font color="#CCCCCC"> mulcher one was</font>

1092
00:42:27,740 --> 00:42:33,020
reused later on the actual sha-1 so real

1093
00:42:30,440 --> 00:42:34,670
examples the trick of<font color="#CCCCCC"> macho macho one</font>

1094
00:42:33,020 --> 00:42:37,100
was then used it on sha-1 then<font color="#E5E5E5"> when we</font>

1095
00:42:34,670 --> 00:42:40,670
use it<font color="#CCCCCC"> for making</font><font color="#E5E5E5"> a hash bond and md5</font><font color="#CCCCCC"> or</font>

1096
00:42:37,100 --> 00:42:46,480
<font color="#E5E5E5">when I published the PDF the actual</font>

1097
00:42:40,670 --> 00:42:49,430
<font color="#E5E5E5">shutter</font><font color="#CCCCCC"> the prefix</font><font color="#E5E5E5"> then the then</font><font color="#CCCCCC"> the</font>

1098
00:42:46,480 --> 00:42:53,150
date was reused for HTML so another file

1099
00:42:49,430 --> 00:42:57,160
<font color="#E5E5E5">format</font><font color="#CCCCCC"> so basically if</font><font color="#E5E5E5"> you do a simple</font>

1100
00:42:53,150 --> 00:42:57,160
format trick with already<font color="#E5E5E5"> collided for a</font>

1101
00:42:57,190 --> 00:43:02,420
computed hush<font color="#CCCCCC"> then this could be</font><font color="#E5E5E5"> used</font>

1102
00:42:59,810 --> 00:43:04,040
<font color="#CCCCCC">for a two for</font><font color="#E5E5E5"> example this would this</font>

1103
00:43:02,420 --> 00:43:06,200
could help<font color="#E5E5E5"> already and if you find</font>

1104
00:43:04,040 --> 00:43:08,540
something<font color="#E5E5E5"> with certificates that might</font>

1105
00:43:06,200 --> 00:43:11,529
break a lot more in a few even in the

1106
00:43:08,540 --> 00:43:13,880
future so from the<font color="#CCCCCC"> five performer from a</font>

1107
00:43:11,530 --> 00:43:16,010
perspective<font color="#CCCCCC"> all this is just a bag of</font>

1108
00:43:13,880 --> 00:43:18,050
<font color="#E5E5E5">trick and crypto doesn't care about true</font>

1109
00:43:16,010 --> 00:43:20,420
for concepts because it was broken<font color="#E5E5E5"> in</font>

1110
00:43:18,050 --> 00:43:22,070
theory in 2005 but on the other hand

1111
00:43:20,420 --> 00:43:23,720
<font color="#E5E5E5">attacks rely on proof of concept and</font>

1112
00:43:22,070 --> 00:43:25,250
these are the attacks who people

1113
00:43:23,720 --> 00:43:27,470
<font color="#E5E5E5">convince people to duplicate and you</font>

1114
00:43:25,250 --> 00:43:30,290
don't get pwned by the papers<font color="#E5E5E5"> by by</font>

1115
00:43:27,470 --> 00:43:32,810
their<font color="#CCCCCC"> PCs so again</font><font color="#E5E5E5"> a new format trick</font>

1116
00:43:30,290 --> 00:43:35,690
<font color="#E5E5E5">could benefit the existing hashes or</font><font color="#CCCCCC"> a</font>

1117
00:43:32,810 --> 00:43:37,930
<font color="#E5E5E5">future attack on a given hash and again</font>

1118
00:43:35,690 --> 00:43:40,460
shattered<font color="#E5E5E5"> generate an infant in Finnick</font>

1119
00:43:37,930 --> 00:43:43,009
<font color="#CCCCCC">an affinity of colliding documents and</font>

1120
00:43:40,460 --> 00:43:44,630
it<font color="#E5E5E5"> broke subversion</font><font color="#CCCCCC"> in practice</font><font color="#E5E5E5"> I think</font>

1121
00:43:43,010 --> 00:43:46,640
that helped to convince<font color="#CCCCCC"> people to</font>

1122
00:43:44,630 --> 00:43:48,230
duplicate sha-1<font color="#E5E5E5"> because maybe</font><font color="#CCCCCC"> there was</font>

1123
00:43:46,640 --> 00:43:51,140
<font color="#E5E5E5">already some existing attacks like this</font>

1124
00:43:48,230 --> 00:43:55,070
in the<font color="#CCCCCC"> world</font><font color="#E5E5E5"> who knows so we still have</font>

1125
00:43:51,140 --> 00:43:56,690
a few<font color="#CCCCCC"> tricks up</font><font color="#E5E5E5"> our sleeves conclusion</font>

1126
00:43:55,070 --> 00:43:58,400
is<font color="#E5E5E5"> hash collisions exploitation is a</font>

1127
00:43:56,690 --> 00:44:00,080
very niche domain but it's so<font color="#E5E5E5"> weird you</font>

1128
00:43:58,400 --> 00:44:03,200
<font color="#CCCCCC">have to talk with the cryptographer and</font>

1129
00:44:00,080 --> 00:44:05,360
<font color="#E5E5E5">you have it's very unusual</font><font color="#CCCCCC"> but it's the</font>

1130
00:44:03,200 --> 00:44:07,040
rewards are also pretty<font color="#CCCCCC"> funny and again</font>

1131
00:44:05,360 --> 00:44:08,390
researching<font color="#E5E5E5"> a</font><font color="#CCCCCC"> file form and manipulation</font>

1132
00:44:07,040 --> 00:44:11,420
could benefit a future cryptographic

1133
00:44:08,390 --> 00:44:14,509
<font color="#E5E5E5">attack so and maybe those are</font><font color="#CCCCCC"> existed</font>

1134
00:44:11,420 --> 00:44:16,370
already<font color="#E5E5E5"> used in the</font><font color="#CCCCCC"> world</font><font color="#E5E5E5"> right just for</font>

1135
00:44:14,510 --> 00:44:18,680
<font color="#CCCCCC">your</font><font color="#E5E5E5"> information when I was asked for</font>

1136
00:44:16,370 --> 00:44:20,480
sure<font color="#E5E5E5"> much I won I saw no solution I gave</font>

1137
00:44:18,680 --> 00:44:22,129
<font color="#E5E5E5">a for a while but then I was challenged</font>

1138
00:44:20,480 --> 00:44:24,410
<font color="#E5E5E5">for something that made me improve on</font>

1139
00:44:22,130 --> 00:44:26,240
<font color="#E5E5E5">JPEG and even eventually with that</font>

1140
00:44:24,410 --> 00:44:28,069
knowledge<font color="#CCCCCC"> a succeed for Marwan</font>

1141
00:44:26,240 --> 00:44:32,240
and that knowledge was a starting point

1142
00:44:28,070 --> 00:44:35,060
for<font color="#E5E5E5"> chattered and so don't give up</font><font color="#CCCCCC"> I</font>

1143
00:44:32,240 --> 00:44:36,879
<font color="#E5E5E5">totally I mean</font><font color="#CCCCCC"> okay I</font><font color="#E5E5E5"> gave up but I kept</font>

1144
00:44:35,060 --> 00:44:39,110
that<font color="#CCCCCC"> fidget spinning in my head like</font>

1145
00:44:36,880 --> 00:44:41,869
learning more<font color="#CCCCCC"> you know side</font><font color="#E5E5E5"> quests in an</font>

1146
00:44:39,110 --> 00:44:44,270
<font color="#E5E5E5">RPG</font><font color="#CCCCCC"> that could help</font><font color="#E5E5E5"> you and also one</font>

1147
00:44:41,869 --> 00:44:45,830
thing<font color="#E5E5E5"> some</font><font color="#CCCCCC"> people say oh you what you do</font>

1148
00:44:44,270 --> 00:44:47,869
is really<font color="#E5E5E5"> great and I don't have all</font>

1149
00:44:45,830 --> 00:44:49,759
this discipline and something and<font color="#E5E5E5"> I also</font>

1150
00:44:47,869 --> 00:44:52,820
thought oh my god<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> super serious</font>

1151
00:44:49,760 --> 00:44:54,800
<font color="#E5E5E5">and everything but</font><font color="#CCCCCC"> just instead it's not</font>

1152
00:44:52,820 --> 00:44:57,110
when I<font color="#E5E5E5"> tried that it never worked for me</font>

1153
00:44:54,800 --> 00:44:59,720
<font color="#CCCCCC">I couldn't do something</font><font color="#E5E5E5"> that actually I</font>

1154
00:44:57,110 --> 00:45:00,619
hate it deep inside<font color="#CCCCCC"> I just just do what</font>

1155
00:44:59,720 --> 00:45:02,390
you make you giggle like<font color="#E5E5E5"> a</font>

1156
00:45:00,619 --> 00:45:04,070
three-year-old<font color="#E5E5E5"> because this is exactly</font>

1157
00:45:02,390 --> 00:45:06,020
what five formats and<font color="#CCCCCC"> hot collisions do</font>

1158
00:45:04,070 --> 00:45:08,630
for you and then if you<font color="#E5E5E5"> keep it doing</font>

1159
00:45:06,020 --> 00:45:10,100
that<font color="#E5E5E5"> well repeatedly having fun</font>

1160
00:45:08,630 --> 00:45:11,810
<font color="#CCCCCC">eventually you get</font><font color="#E5E5E5"> feedback and</font>

1161
00:45:10,100 --> 00:45:13,910
<font color="#E5E5E5">recognition and by then you'll have no</font>

1162
00:45:11,810 --> 00:45:15,619
reason<font color="#CCCCCC"> to stop and</font><font color="#E5E5E5"> you'll be disciplined</font>

1163
00:45:13,910 --> 00:45:16,790
<font color="#CCCCCC">because this is something you</font><font color="#E5E5E5"> love</font><font color="#CCCCCC"> and</font>

1164
00:45:15,619 --> 00:45:20,390
this<font color="#E5E5E5"> is something you're</font><font color="#CCCCCC"> acknowledged</font>

1165
00:45:16,790 --> 00:45:22,430
for so if<font color="#E5E5E5"> you if you think</font><font color="#CCCCCC"> oh I don't</font>

1166
00:45:20,390 --> 00:45:24,830
<font color="#E5E5E5">have the discipline first</font><font color="#CCCCCC"> think what</font>

1167
00:45:22,430 --> 00:45:26,720
gives me real fun inside like me and

1168
00:45:24,830 --> 00:45:27,259
playing with health collisions at 2:00

1169
00:45:26,720 --> 00:45:31,129
a.m.

1170
00:45:27,260 --> 00:45:36,110
whatever you know<font color="#E5E5E5"> thanks for</font><font color="#CCCCCC"> your</font>

1171
00:45:31,130 --> 00:45:45,939
<font color="#E5E5E5">attention and any questions</font>

1172
00:45:36,110 --> 00:45:45,939
[Applause]

1173
00:45:46,840 --> 00:45:56,030
meantime<font color="#E5E5E5"> so this totally standard file</font>

1174
00:45:52,310 --> 00:45:57,859
but this is an actually<font color="#CCCCCC"> in image then in</font>

1175
00:45:56,030 --> 00:46:02,410
the end<font color="#E5E5E5"> the only picture I replace</font><font color="#CCCCCC"> it</font>

1176
00:45:57,859 --> 00:46:02,410
with commit the the commit<font color="#E5E5E5"> strip comics</font>

1177
00:46:06,760 --> 00:46:10,130
will you crash<font color="#E5E5E5"> really question me it</font>

1178
00:46:09,560 --> 00:46:14,390
should work

1179
00:46:10,130 --> 00:46:16,490
<font color="#E5E5E5">hey oh yeah so this file is vector and</font>

1180
00:46:14,390 --> 00:46:18,740
this<font color="#E5E5E5"> is all social and colliding with</font>

1181
00:46:16,490 --> 00:46:21,200
you it's all vector so there's no JPEG

1182
00:46:18,740 --> 00:46:23,779
image here<font color="#E5E5E5"> I mean there's a JPEG image</font>

1183
00:46:21,200 --> 00:46:40,100
<font color="#CCCCCC">that</font><font color="#E5E5E5"> gives the data to render the</font>

1184
00:46:23,780 --> 00:46:41,630
<font color="#E5E5E5">content of the page the question because</font>

1185
00:46:40,100 --> 00:46:43,609
I still<font color="#CCCCCC"> don't understand what boomerang</font>

1186
00:46:41,630 --> 00:46:46,130
<font color="#E5E5E5">bits and differential path and the</font>

1187
00:46:43,609 --> 00:46:47,359
compression<font color="#CCCCCC"> function whatever</font><font color="#E5E5E5"> is no it's</font>

1188
00:46:46,130 --> 00:46:51,350
not<font color="#E5E5E5"> weird but it's really good because</font>

1189
00:46:47,359 --> 00:46:55,160
you<font color="#CCCCCC"> really have to find</font><font color="#E5E5E5"> a common ground</font>

1190
00:46:51,350 --> 00:46:57,920
<font color="#CCCCCC">to for understanding and it's a</font>

1191
00:46:55,160 --> 00:47:01,190
different world<font color="#CCCCCC"> so that's why you need</font>

1192
00:46:57,920 --> 00:47:03,050
<font color="#CCCCCC">to</font><font color="#E5E5E5"> translate basically I remember when</font>

1193
00:47:01,190 --> 00:47:05,060
<font color="#E5E5E5">your</font><font color="#CCCCCC"> Philippe where is he</font>

1194
00:47:03,050 --> 00:47:07,850
<font color="#E5E5E5">explain me some stuff and I'm</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> can</font>

1195
00:47:05,060 --> 00:47:10,460
<font color="#E5E5E5">you translate that in human words and</font>

1196
00:47:07,850 --> 00:47:12,080
then I okay I think I<font color="#CCCCCC"> get it but I'm a</font>

1197
00:47:10,460 --> 00:47:14,090
proof-of-concept person so then I do a

1198
00:47:12,080 --> 00:47:16,160
script that<font color="#CCCCCC"> does this and then I</font><font color="#E5E5E5"> say</font>

1199
00:47:14,090 --> 00:47:18,380
<font color="#E5E5E5">okay this is how</font><font color="#CCCCCC"> it works</font><font color="#E5E5E5"> and this</font><font color="#CCCCCC"> is</font>

1200
00:47:16,160 --> 00:47:20,750
when I would understand I need<font color="#CCCCCC"> a Python</font>

1201
00:47:18,380 --> 00:47:22,670
code to do that<font color="#CCCCCC"> so it's not particularly</font>

1202
00:47:20,750 --> 00:47:25,460
<font color="#E5E5E5">weird but it's challenging for</font><font color="#CCCCCC"> both</font>

1203
00:47:22,670 --> 00:47:27,530
sides<font color="#E5E5E5"> and it's very interesting</font><font color="#CCCCCC"> and one</font>

1204
00:47:25,460 --> 00:47:30,290
I'm<font color="#CCCCCC"> very proud that both</font><font color="#E5E5E5"> Maya and</font><font color="#CCCCCC"> Marc</font>

1205
00:47:27,530 --> 00:47:31,520
sometimes suggested stuff from the<font color="#CCCCCC"> PDF</font>

1206
00:47:30,290 --> 00:47:33,020
<font color="#CCCCCC">specs</font><font color="#E5E5E5"> la</font><font color="#CCCCCC"> woohoo</font>

1207
00:47:31,520 --> 00:47:35,240
and made a cryptographer look at the

1208
00:47:33,020 --> 00:47:44,090
<font color="#CCCCCC">speedier specs for</font><font color="#E5E5E5"> them but on the other</font>

1209
00:47:35,240 --> 00:47:46,279
<font color="#CCCCCC">hand is sweet revenge</font><font color="#E5E5E5"> just kidding by</font>

1210
00:47:44,090 --> 00:47:47,930
the time the microphone<font color="#E5E5E5"> reach away if</font>

1211
00:47:46,280 --> 00:47:50,420
you<font color="#E5E5E5"> want to grab</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> home a file format</font>

1212
00:47:47,930 --> 00:47:53,899
please help yourself<font color="#E5E5E5"> and if you use one</font>

1213
00:47:50,420 --> 00:47:55,430
of my posters in your<font color="#E5E5E5"> work feel free</font><font color="#CCCCCC"> to</font>

1214
00:47:53,900 --> 00:47:57,859
sign<font color="#E5E5E5"> my own</font>

1215
00:47:55,430 --> 00:48:02,089
copy of my Bible<font color="#CCCCCC"> to convince my wife</font><font color="#E5E5E5"> I'm</font>

1216
00:47:57,859 --> 00:48:04,130
not<font color="#E5E5E5"> doing that</font><font color="#CCCCCC"> for nothing kind of</font>

1217
00:48:02,089 --> 00:48:07,279
reverse autograph<font color="#E5E5E5"> this is not a question</font>

1218
00:48:04,130 --> 00:48:11,089
<font color="#E5E5E5">about I mean the exploit itself</font><font color="#CCCCCC"> it's</font>

1219
00:48:07,279 --> 00:48:16,210
<font color="#E5E5E5">about the the time between the tatical</font>

1220
00:48:11,089 --> 00:48:18,859
break of the hash and let's say the the

1221
00:48:16,210 --> 00:48:21,349
the<font color="#CCCCCC"> the fact that</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> was really</font>

1222
00:48:18,859 --> 00:48:23,630
considered<font color="#E5E5E5"> to be exploitable in</font><font color="#CCCCCC"> in</font>

1223
00:48:21,349 --> 00:48:28,730
practice<font color="#E5E5E5"> so it was a tiniest period yeah</font>

1224
00:48:23,630 --> 00:48:31,250
<font color="#E5E5E5">so</font><font color="#CCCCCC"> and you said ok the the iOS was</font>

1225
00:48:28,730 --> 00:48:33,410
<font color="#E5E5E5">broken in 2005 theory and that's what</font>

1226
00:48:31,250 --> 00:48:35,779
academics say yeah exactly

1227
00:48:33,410 --> 00:48:38,020
<font color="#E5E5E5">so but when it is really</font><font color="#CCCCCC"> considered</font>

1228
00:48:35,779 --> 00:48:42,349
broken it's<font color="#CCCCCC"> just when the theoretical</font><font color="#E5E5E5"> I</font>

1229
00:48:38,020 --> 00:48:51,980
don't know it's a<font color="#CCCCCC"> cryptic question 2005</font>

1230
00:48:42,349 --> 00:48:53,930
<font color="#E5E5E5">but why okay that's I don't</font><font color="#CCCCCC"> know for</font><font color="#E5E5E5"> me</font>

1231
00:48:51,980 --> 00:48:56,930
it's broken<font color="#E5E5E5"> when I have colliding files</font>

1232
00:48:53,930 --> 00:48:59,270
on my my<font color="#CCCCCC"> disk but that was the question</font>

1233
00:48:56,930 --> 00:49:03,230
<font color="#E5E5E5">is yeah</font><font color="#CCCCCC"> when it when</font><font color="#E5E5E5"> it is really broken</font>

1234
00:48:59,270 --> 00:49:06,170
<font color="#E5E5E5">when you can prove that the randomness</font>

1235
00:49:03,230 --> 00:49:10,520
is<font color="#E5E5E5"> not is less than what is the</font><font color="#CCCCCC"> title of</font>

1236
00:49:06,170 --> 00:49:13,520
theoretical one<font color="#E5E5E5"> when you find that the</font>

1237
00:49:10,520 --> 00:49:17,500
computational time<font color="#E5E5E5"> is practical and you</font>

1238
00:49:13,520 --> 00:49:20,180
can exploit it yeah when you really find

1239
00:49:17,500 --> 00:49:22,220
exactly it's<font color="#CCCCCC"> really different vision of</font>

1240
00:49:20,180 --> 00:49:26,868
<font color="#E5E5E5">the same thing right so when you when</font>

1241
00:49:22,220 --> 00:49:28,700
it's in fast enough<font color="#E5E5E5"> in theory when</font>

1242
00:49:26,869 --> 00:49:31,369
someone has enough computing power so

1243
00:49:28,700 --> 00:49:35,598
for example the 110 GPU<font color="#CCCCCC"> you took eight</font>

1244
00:49:31,369 --> 00:49:37,400
days in practice but or if you if you

1245
00:49:35,599 --> 00:49:38,480
want an attack<font color="#CCCCCC"> then it's when you have</font>

1246
00:49:37,400 --> 00:49:41,150
the files on your<font color="#CCCCCC"> day</font><font color="#E5E5E5"> so you're right</font>

1247
00:49:38,480 --> 00:49:45,230
ball all three are valid from different

1248
00:49:41,150 --> 00:49:48,250
points of view<font color="#CCCCCC"> so we are already</font><font color="#E5E5E5"> late so</font>

1249
00:49:45,230 --> 00:49:48,250
we'll take<font color="#E5E5E5"> one</font><font color="#CCCCCC"> last question</font>

1250
00:49:48,430 --> 00:49:52,848
<font color="#E5E5E5">and on the other side if you're</font>

1251
00:49:50,539 --> 00:49:55,549
designing a format or I<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> know like</font>

1252
00:49:52,849 --> 00:49:57,770
if you're collaborating with the team at

1253
00:49:55,549 --> 00:49:59,029
Google<font color="#CCCCCC"> that is making the web P format</font>

1254
00:49:57,770 --> 00:50:02,059
<font color="#CCCCCC">what would</font><font color="#E5E5E5"> be the good practice to</font>

1255
00:49:59,029 --> 00:50:03,680
protect against such attacks<font color="#E5E5E5"> yeah I</font><font color="#CCCCCC"> I</font>

1256
00:50:02,059 --> 00:50:04,880
don't<font color="#E5E5E5"> have a quick answer</font><font color="#CCCCCC"> for that but</font>

1257
00:50:03,680 --> 00:50:08,779
definitely<font color="#CCCCCC"> this is something I</font><font color="#E5E5E5"> should</font>

1258
00:50:04,880 --> 00:50:09,180
<font color="#E5E5E5">write so definitely</font><font color="#CCCCCC"> it's I never thought</font>

1259
00:50:08,779 --> 00:50:11,099
in

1260
00:50:09,180 --> 00:50:12,960
detail about this like what would<font color="#E5E5E5"> be the</font>

1261
00:50:11,099 --> 00:50:15,839
perfect rule but definitely<font color="#E5E5E5"> even</font>

1262
00:50:12,960 --> 00:50:17,520
something like<font color="#E5E5E5"> PNG has CRC's but most of</font>

1263
00:50:15,839 --> 00:50:22,140
<font color="#E5E5E5">the time they are ignored</font>

1264
00:50:17,520 --> 00:50:24,480
so<font color="#CCCCCC"> no also enforcing the specs putting</font>

1265
00:50:22,140 --> 00:50:27,569
some specs<font color="#E5E5E5"> I mean a lot of</font><font color="#CCCCCC"> stuff the</font>

1266
00:50:24,480 --> 00:50:29,309
JPEG I put<font color="#CCCCCC"> where not valid because the</font>

1267
00:50:27,569 --> 00:50:31,410
specification says that it should<font color="#E5E5E5"> start</font>

1268
00:50:29,309 --> 00:50:34,079
with<font color="#E5E5E5"> the actual header and me I started</font>

1269
00:50:31,410 --> 00:50:36,328
<font color="#E5E5E5">with something different but in practice</font>

1270
00:50:34,079 --> 00:50:39,539
in<font color="#E5E5E5"> leap JPEG the code of</font><font color="#CCCCCC"> Li JPEG doesn't</font>

1271
00:50:36,329 --> 00:50:41,250
care<font color="#CCCCCC"> so again</font><font color="#E5E5E5"> the specs are not even</font>

1272
00:50:39,539 --> 00:50:44,400
relevant here<font color="#E5E5E5"> I looked at the</font><font color="#CCCCCC"> actual</font>

1273
00:50:41,250 --> 00:50:46,890
code and then I tested on all devices

1274
00:50:44,400 --> 00:50:50,279
iOS Android and everything just to<font color="#CCCCCC"> make</font>

1275
00:50:46,890 --> 00:50:52,859
sure<font color="#E5E5E5"> so there's no first there's no</font>

1276
00:50:50,279 --> 00:50:54,420
quick<font color="#CCCCCC"> answer for that</font><font color="#E5E5E5"> and second is it</font>

1277
00:50:52,859 --> 00:50:58,770
even relevant<font color="#E5E5E5"> in the future</font><font color="#CCCCCC"> because it's</font>

1278
00:50:54,420 --> 00:51:01,589
<font color="#CCCCCC">never enforced funny</font><font color="#E5E5E5"> state of mind is</font>

1279
00:50:58,770 --> 00:51:04,170
once we had computed the collision I was

1280
00:51:01,589 --> 00:51:06,000
like how<font color="#E5E5E5"> lucky we</font><font color="#CCCCCC"> are that</font><font color="#E5E5E5"> the sha-1</font>

1281
00:51:04,170 --> 00:51:09,119
<font color="#E5E5E5">gives the result of all the</font><font color="#CCCCCC"> platforms</font>

1282
00:51:06,000 --> 00:51:10,710
for<font color="#CCCCCC"> the same content and it's right from</font>

1283
00:51:09,119 --> 00:51:12,420
<font color="#E5E5E5">the mathematical and crypto perfectly</font>

1284
00:51:10,710 --> 00:51:12,930
but from file formats it's absolutely

1285
00:51:12,420 --> 00:51:14,819
not right

1286
00:51:12,930 --> 00:51:17,190
so I<font color="#CCCCCC"> remember</font><font color="#E5E5E5"> thinking wow they are</font>

1287
00:51:14,819 --> 00:51:18,420
<font color="#E5E5E5"> lucky cryptographers but they</font>

1288
00:51:17,190 --> 00:51:20,819
are doing<font color="#E5E5E5"> things right</font><font color="#CCCCCC"> because specs</font>

1289
00:51:18,420 --> 00:51:23,369
test vectors and if you if<font color="#CCCCCC"> you show an</font>

1290
00:51:20,819 --> 00:51:25,619
implementation deviates in one<font color="#E5E5E5"> bit then</font>

1291
00:51:23,369 --> 00:51:31,910
you're<font color="#E5E5E5"> wrong feels like German well in</font>

1292
00:51:25,619 --> 00:51:31,910
the end it works thanks a<font color="#E5E5E5"> lot</font>

1293
00:51:33,990 --> 00:51:37,060
[Applause]

