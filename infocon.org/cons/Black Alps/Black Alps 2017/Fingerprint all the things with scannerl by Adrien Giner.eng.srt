1
00:00:02,840 --> 00:00:08,309
hello and welcome to<font color="#CCCCCC"> this talk</font><font color="#E5E5E5"> about</font>

2
00:00:06,629 --> 00:00:12,750
fingerprinting all the things with

3
00:00:08,309 --> 00:00:16,259
scanner<font color="#CCCCCC"> first a few</font><font color="#E5E5E5"> words about me so</font>

4
00:00:12,750 --> 00:00:19,020
I'm a security<font color="#E5E5E5"> researcher in the</font><font color="#CCCCCC"> Rd team</font>

5
00:00:16,260 --> 00:00:22,020
at Kooskia<font color="#E5E5E5"> security I focus mostly</font><font color="#CCCCCC"> on</font>

6
00:00:19,020 --> 00:00:24,600
<font color="#E5E5E5">network related security research some</font>

7
00:00:22,020 --> 00:00:27,539
say I do threat Intel but what I really

8
00:00:24,600 --> 00:00:31,349
do<font color="#E5E5E5"> is port scanning and fingerprinting</font><font color="#CCCCCC"> I</font>

9
00:00:27,539 --> 00:00:32,910
<font color="#E5E5E5">block</font><font color="#CCCCCC"> sometimes</font><font color="#E5E5E5"> cut a lot big fan of the</font>

10
00:00:31,349 --> 00:00:35,250
<font color="#E5E5E5">command line interface and open source</font>

11
00:00:32,910 --> 00:00:37,199
software<font color="#CCCCCC"> and here you can see like the</font>

12
00:00:35,250 --> 00:00:39,629
terminal this<font color="#E5E5E5"> is where I spend most of</font>

13
00:00:37,200 --> 00:00:42,239
my days I<font color="#E5E5E5"> wanted to have</font><font color="#CCCCCC"> the black</font>

14
00:00:39,629 --> 00:00:45,829
slides but it wouldn't<font color="#E5E5E5"> work out with the</font>

15
00:00:42,239 --> 00:00:49,649
black<font color="#E5E5E5"> terminal so I had the light slides</font>

16
00:00:45,829 --> 00:00:51,719
<font color="#CCCCCC">so</font><font color="#E5E5E5"> if you are here if</font><font color="#CCCCCC"> you can answer one</font>

17
00:00:49,649 --> 00:00:53,850
of those questions but yeah<font color="#CCCCCC"> by yes this</font>

18
00:00:51,719 --> 00:00:55,920
<font color="#E5E5E5">means</font><font color="#CCCCCC"> you're in the right talk</font><font color="#E5E5E5"> if no</font>

19
00:00:53,850 --> 00:00:58,320
then<font color="#CCCCCC"> stay</font><font color="#E5E5E5"> a little bit longer maybe</font>

20
00:00:55,920 --> 00:01:00,539
you'll like it<font color="#CCCCCC"> for</font><font color="#E5E5E5"> example</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> you</font>

21
00:00:58,320 --> 00:01:02,879
interested<font color="#E5E5E5"> to know all the versions of</font>

22
00:01:00,539 --> 00:01:07,049
<font color="#E5E5E5">the DNS</font><font color="#CCCCCC"> servers that are</font><font color="#E5E5E5"> reachable on</font>

23
00:01:02,879 --> 00:01:09,658
ipv4<font color="#E5E5E5"> or much a specific pattern on all</font>

24
00:01:07,049 --> 00:01:12,270
pages of<font color="#CCCCCC"> for example</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> alexa top 1</font>

25
00:01:09,659 --> 00:01:17,400
million<font color="#CCCCCC"> top-ranked websites for example</font>

26
00:01:12,270 --> 00:01:19,830
<font color="#E5E5E5">to identify specific CMS or a web server</font>

27
00:01:17,400 --> 00:01:22,770
<font color="#E5E5E5">being used or even do you want to know</font>

28
00:01:19,830 --> 00:01:25,229
the assertion<font color="#E5E5E5"> that is used on your</font>

29
00:01:22,770 --> 00:01:27,539
<font color="#CCCCCC">perimeter for</font><font color="#E5E5E5"> example so these are all</font>

30
00:01:25,229 --> 00:01:30,270
question that can be answered using

31
00:01:27,540 --> 00:01:32,100
<font color="#E5E5E5">scanners so hopefully on the end you'll</font>

32
00:01:30,270 --> 00:01:35,570
use it and you'll<font color="#E5E5E5"> be able to answer</font>

33
00:01:32,100 --> 00:01:38,130
<font color="#CCCCCC">those questions the agenda for today</font>

34
00:01:35,570 --> 00:01:40,350
<font color="#E5E5E5">first I'm going to go through a little</font>

35
00:01:38,130 --> 00:01:43,619
intro<font color="#E5E5E5"> to introduction on fingerprinting</font>

36
00:01:40,350 --> 00:01:46,530
<font color="#E5E5E5">what is it were the challenges</font><font color="#CCCCCC"> and so on</font>

37
00:01:43,619 --> 00:01:49,500
<font color="#CCCCCC">they're</font><font color="#E5E5E5"> the existing tools and what our</font>

38
00:01:46,530 --> 00:01:52,530
dog there are limitation

39
00:01:49,500 --> 00:01:54,780
why don't they scale<font color="#CCCCCC"> actually because</font>

40
00:01:52,530 --> 00:01:58,259
they scale vertically and why scaling

41
00:01:54,780 --> 00:02:00,570
horizontally is a better way<font color="#CCCCCC"> of doing it</font>

42
00:01:58,259 --> 00:02:05,850
and<font color="#CCCCCC"> then I</font><font color="#E5E5E5"> introduced kernel and do a</font>

43
00:02:00,570 --> 00:02:09,179
little summary yes<font color="#CCCCCC"> so first let's start</font>

44
00:02:05,850 --> 00:02:12,150
with with fingerprinting<font color="#CCCCCC"> but first</font><font color="#E5E5E5"> I</font>

45
00:02:09,179 --> 00:02:13,860
guess<font color="#E5E5E5"> you're not all aware of</font><font color="#CCCCCC"> the</font>

46
00:02:12,150 --> 00:02:15,570
difference between between<font color="#CCCCCC"> poor scanning</font>

47
00:02:13,860 --> 00:02:18,210
and<font color="#E5E5E5"> fingerprinting so I'll do a small</font>

48
00:02:15,570 --> 00:02:20,640
<font color="#CCCCCC">recap</font><font color="#E5E5E5"> port scanning is simply the</font>

49
00:02:18,210 --> 00:02:23,310
<font color="#E5E5E5">process of trying to identify the status</font>

50
00:02:20,640 --> 00:02:24,809
of a port<font color="#E5E5E5"> is it open is it closed so</font>

51
00:02:23,310 --> 00:02:27,720
<font color="#E5E5E5">usually you send a packet with a</font>

52
00:02:24,810 --> 00:02:30,090
specific flag here<font color="#E5E5E5"> sin and you you</font>

53
00:02:27,720 --> 00:02:32,220
monitor the<font color="#CCCCCC"> response if it's a cynic you</font>

54
00:02:30,090 --> 00:02:34,770
know it's<font color="#E5E5E5"> open if it's reset</font><font color="#CCCCCC"> ACK it's</font>

55
00:02:32,220 --> 00:02:35,760
closed<font color="#E5E5E5"> if you</font><font color="#CCCCCC"> get nothing then</font><font color="#E5E5E5"> either</font>

56
00:02:34,770 --> 00:02:40,410
<font color="#E5E5E5">you get lost</font>

57
00:02:35,760 --> 00:02:42,660
<font color="#E5E5E5">it's firewalls</font><font color="#CCCCCC"> or other reason so</font><font color="#E5E5E5"> port</font>

58
00:02:40,410 --> 00:02:45,990
scanning<font color="#E5E5E5"> is straightforward</font><font color="#CCCCCC"> pretty</font>

59
00:02:42,660 --> 00:02:49,109
linear<font color="#CCCCCC"> but</font><font color="#E5E5E5"> service printing in the</font><font color="#CCCCCC"> other</font>

60
00:02:45,990 --> 00:02:52,080
way it goes much beyond so instead<font color="#CCCCCC"> of</font>

61
00:02:49,110 --> 00:02:54,330
targeting<font color="#E5E5E5"> of wanting to</font><font color="#CCCCCC"> know the status</font>

62
00:02:52,080 --> 00:02:56,940
<font color="#CCCCCC">of a port you</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> to interact with the</font>

63
00:02:54,330 --> 00:02:58,980
server<font color="#CCCCCC"> so you want to interact</font><font color="#E5E5E5"> with the</font>

64
00:02:56,940 --> 00:03:03,030
service<font color="#E5E5E5"> that is running behind that port</font>

65
00:02:58,980 --> 00:03:04,859
so you<font color="#CCCCCC"> have to</font><font color="#E5E5E5"> do multiple exchanges to</font>

66
00:03:03,030 --> 00:03:07,380
do that on the<font color="#E5E5E5"> right side</font><font color="#CCCCCC"> I know it's</font>

67
00:03:04,860 --> 00:03:09,870
too small<font color="#E5E5E5"> that's the idea to read it but</font>

68
00:03:07,380 --> 00:03:13,709
this is<font color="#CCCCCC"> a ssh connection</font><font color="#E5E5E5"> establishment</font>

69
00:03:09,870 --> 00:03:17,880
so as you can<font color="#CCCCCC"> see</font><font color="#E5E5E5"> it's there's much much</font>

70
00:03:13,709 --> 00:03:21,540
more<font color="#E5E5E5"> efforts to communicate with the</font>

71
00:03:17,880 --> 00:03:23,730
<font color="#E5E5E5">servers the the green try rectangle</font>

72
00:03:21,540 --> 00:03:26,160
there is simply the part that is doing

73
00:03:23,730 --> 00:03:28,380
the port scanning<font color="#E5E5E5"> so fingerprinting goes</font>

74
00:03:26,160 --> 00:03:31,019
way beyond so you have to be able<font color="#CCCCCC"> to</font>

75
00:03:28,380 --> 00:03:33,540
understand the<font color="#E5E5E5"> protocol and and talk</font>

76
00:03:31,019 --> 00:03:35,160
with the service<font color="#E5E5E5"> in a way that that</font>

77
00:03:33,540 --> 00:03:41,130
provides you the information<font color="#CCCCCC"> you're</font>

78
00:03:35,160 --> 00:03:43,799
looking for<font color="#CCCCCC"> so like I said it's more</font>

79
00:03:41,130 --> 00:03:45,900
complex you have<font color="#E5E5E5"> to understand the</font>

80
00:03:43,799 --> 00:03:48,720
protocol it's a much longer process

81
00:03:45,900 --> 00:03:51,630
depending on the<font color="#E5E5E5"> service</font><font color="#CCCCCC"> that you were</font>

82
00:03:48,720 --> 00:03:54,120
targeting and in the end<font color="#E5E5E5"> you don't get</font>

83
00:03:51,630 --> 00:03:56,400
like<font color="#E5E5E5"> a status is it open is it closed</font>

84
00:03:54,120 --> 00:03:59,959
but<font color="#CCCCCC"> you</font><font color="#E5E5E5"> get the whole payload that</font><font color="#CCCCCC"> is</font>

85
00:03:56,400 --> 00:04:02,519
being sent by the remote service<font color="#E5E5E5"> and</font>

86
00:03:59,959 --> 00:04:05,160
<font color="#E5E5E5">since this is a payload</font><font color="#CCCCCC"> that you'll have</font>

87
00:04:02,519 --> 00:04:07,769
<font color="#CCCCCC">to parse you have to endure some</font>

88
00:04:05,160 --> 00:04:10,290
<font color="#E5E5E5">unexpected data because it won't be it</font>

89
00:04:07,769 --> 00:04:13,019
won't be a single packet with a flag

90
00:04:10,290 --> 00:04:18,149
being<font color="#E5E5E5"> okay this is open but it will be</font>

91
00:04:13,019 --> 00:04:19,918
the whole exchanges now even more if you

92
00:04:18,149 --> 00:04:23,370
consider running<font color="#CCCCCC"> it on millions of</font>

93
00:04:19,918 --> 00:04:25,080
<font color="#E5E5E5">targets</font><font color="#CCCCCC"> it will be a long very long</font>

94
00:04:23,370 --> 00:04:27,750
process

95
00:04:25,080 --> 00:04:31,680
it might also impact

96
00:04:27,750 --> 00:04:33,420
the network<font color="#E5E5E5"> as those</font><font color="#CCCCCC"> pro-gay is here and</font>

97
00:04:31,680 --> 00:04:35,730
you will have to answer question like

98
00:04:33,420 --> 00:04:38,460
how do I<font color="#E5E5E5"> enter the hole that I said in</font>

99
00:04:35,730 --> 00:04:41,400
the<font color="#E5E5E5"> end how do i parse</font><font color="#CCCCCC"> the data</font><font color="#E5E5E5"> how do I</font>

100
00:04:38,460 --> 00:04:43,260
store that<font color="#E5E5E5"> and and you have to be fast</font>

101
00:04:41,400 --> 00:04:46,109
and efficient<font color="#E5E5E5"> because if if he takes</font>

102
00:04:43,260 --> 00:04:48,690
like weeks to do<font color="#E5E5E5"> millions of targets</font>

103
00:04:46,110 --> 00:04:52,980
<font color="#E5E5E5">this this won't work as as we'll see we</font>

104
00:04:48,690 --> 00:04:55,280
will<font color="#CCCCCC"> see so a few words</font><font color="#E5E5E5"> on the different</font>

105
00:04:52,980 --> 00:04:58,950
tools<font color="#CCCCCC"> that exist</font><font color="#E5E5E5"> and and their</font>

106
00:04:55,280 --> 00:05:01,849
limitation<font color="#CCCCCC"> the first idea for</font>

107
00:04:58,950 --> 00:05:05,099
fingerprinting<font color="#E5E5E5"> is to do it by</font><font color="#CCCCCC"> scripting</font>

108
00:05:01,850 --> 00:05:09,630
<font color="#CCCCCC">there's exist</font><font color="#E5E5E5"> multiple tools for doing</font>

109
00:05:05,100 --> 00:05:12,060
<font color="#E5E5E5">that one of them is is</font><font color="#CCCCCC"> Cappy a Python</font>

110
00:05:09,630 --> 00:05:15,570
library that<font color="#E5E5E5"> allows you to forge packets</font>

111
00:05:12,060 --> 00:05:18,930
and in order<font color="#CCCCCC"> to produce an exchange with</font>

112
00:05:15,570 --> 00:05:21,840
a remote host<font color="#E5E5E5"> or also</font><font color="#CCCCCC"> H ping which</font><font color="#E5E5E5"> is a</font>

113
00:05:18,930 --> 00:05:24,450
UNIX tools that<font color="#E5E5E5"> also allows by providing</font>

114
00:05:21,840 --> 00:05:26,880
<font color="#E5E5E5">specific payloads to interact with your</font>

115
00:05:24,450 --> 00:05:30,000
the service you want<font color="#E5E5E5"> to to fingerprint</font>

116
00:05:26,880 --> 00:05:33,860
<font color="#E5E5E5">for the more most poor user there's</font>

117
00:05:30,000 --> 00:05:35,150
always<font color="#CCCCCC"> net cat but I guess it's</font><font color="#E5E5E5"> not very</font>

118
00:05:33,860 --> 00:05:38,460
efficient

119
00:05:35,150 --> 00:05:41,159
<font color="#E5E5E5">so all those tools are give you</font><font color="#CCCCCC"> a lot of</font>

120
00:05:38,460 --> 00:05:43,770
<font color="#E5E5E5">power but it's tedious and</font><font color="#CCCCCC"> very specific</font>

121
00:05:41,160 --> 00:05:47,400
<font color="#CCCCCC">if you've done the implementation for</font>

122
00:05:43,770 --> 00:05:49,620
specific service fingerprinting<font color="#E5E5E5"> which</font>

123
00:05:47,400 --> 00:05:53,250
<font color="#CCCCCC">Cappy for example you'll have to start</font>

124
00:05:49,620 --> 00:05:57,900
<font color="#CCCCCC">over again</font><font color="#E5E5E5"> for another one again and</font>

125
00:05:53,250 --> 00:05:59,880
<font color="#E5E5E5">again this is my</font><font color="#CCCCCC"> favorite slides I've</font>

126
00:05:57,900 --> 00:06:02,760
<font color="#CCCCCC">felt it here because</font><font color="#E5E5E5"> I found this is the</font>

127
00:05:59,880 --> 00:06:05,310
most elegant<font color="#E5E5E5"> way of doing</font><font color="#CCCCCC"> fingerprinting</font>

128
00:06:02,760 --> 00:06:08,969
<font color="#E5E5E5">I was looking to have some smile yeah</font>

129
00:06:05,310 --> 00:06:11,250
there since so I'll go through<font color="#CCCCCC"> it this</font>

130
00:06:08,970 --> 00:06:14,160
<font color="#CCCCCC">is just a geeky way of doing it</font>

131
00:06:11,250 --> 00:06:16,530
the<font color="#CCCCCC"> idea</font><font color="#E5E5E5"> is you declare your target so</font>

132
00:06:14,160 --> 00:06:18,930
the host and the poor there you open<font color="#CCCCCC"> a</font>

133
00:06:16,530 --> 00:06:21,510
socket with a specific<font color="#E5E5E5"> device on unique</font>

134
00:06:18,930 --> 00:06:24,150
file system and then<font color="#CCCCCC"> you use UNIX tools</font>

135
00:06:21,510 --> 00:06:27,169
like echo and cut in order<font color="#E5E5E5"> to send your</font>

136
00:06:24,150 --> 00:06:31,200
payload and<font color="#E5E5E5"> receive the response it's</font>

137
00:06:27,169 --> 00:06:34,320
pretty elegant<font color="#E5E5E5"> but of course this is not</font>

138
00:06:31,200 --> 00:06:37,449
<font color="#E5E5E5">very efficient but I had to put it</font>

139
00:06:34,320 --> 00:06:40,620
because<font color="#CCCCCC"> I really liked that</font><font color="#E5E5E5"> solution</font>

140
00:06:37,449 --> 00:06:43,210
so another<font color="#E5E5E5"> solution</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> to use tools</font>

141
00:06:40,620 --> 00:06:45,789
<font color="#CCCCCC">there's</font><font color="#E5E5E5"> plenty of existing tools for</font>

142
00:06:43,210 --> 00:06:48,520
<font color="#CCCCCC">doing that</font><font color="#E5E5E5"> one of them being</font><font color="#CCCCCC"> an map and</font>

143
00:06:45,789 --> 00:06:52,210
it's<font color="#E5E5E5"> NSC scripting engine that that</font>

144
00:06:48,520 --> 00:06:56,979
<font color="#CCCCCC">Hughes</font><font color="#E5E5E5"> uses Lua programming language in</font>

145
00:06:52,210 --> 00:06:59,138
the<font color="#CCCCCC"> backend and</font><font color="#E5E5E5"> it has a pool</font><font color="#CCCCCC"> of scripts</font>

146
00:06:56,979 --> 00:07:03,099
<font color="#E5E5E5">that are available to</font><font color="#CCCCCC"> fingerprint a</font><font color="#E5E5E5"> lot</font>

147
00:06:59,139 --> 00:07:06,030
<font color="#E5E5E5">of services</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> this is a very good</font><font color="#CCCCCC"> to Z</font>

148
00:07:03,099 --> 00:07:09,969
<font color="#CCCCCC">group on the other hand is made by the</font>

149
00:07:06,030 --> 00:07:13,030
<font color="#CCCCCC">zmapp team which is also</font><font color="#E5E5E5"> a tools it's</font>

150
00:07:09,969 --> 00:07:14,530
growing getting<font color="#E5E5E5"> more and</font><font color="#CCCCCC"> more service</font>

151
00:07:13,030 --> 00:07:18,280
available in it

152
00:07:14,530 --> 00:07:21,219
there's<font color="#CCCCCC"> SSH HTTP and all those</font><font color="#E5E5E5"> most used</font>

153
00:07:18,280 --> 00:07:23,859
services around so those tools<font color="#E5E5E5"> are</font>

154
00:07:21,219 --> 00:07:26,740
<font color="#E5E5E5">pretty flexible and very complete</font><font color="#CCCCCC"> but do</font>

155
00:07:23,860 --> 00:07:30,639
the scale and how fast are they so<font color="#E5E5E5"> I've</font>

156
00:07:26,740 --> 00:07:33,370
done a<font color="#E5E5E5"> small test on the Alexa</font><font color="#CCCCCC"> top 1</font>

157
00:07:30,639 --> 00:07:36,639
million<font color="#CCCCCC"> websites</font><font color="#E5E5E5"> so this is the 1</font>

158
00:07:33,370 --> 00:07:40,389
million<font color="#E5E5E5"> top-ranked websites on</font><font color="#CCCCCC"> internet</font>

159
00:07:36,639 --> 00:07:44,639
<font color="#CCCCCC">and I use a pretty decent machine so 24</font>

160
00:07:40,389 --> 00:07:48,130
cpus 190 gigs of ram and<font color="#E5E5E5"> one gig pipe i</font>

161
00:07:44,639 --> 00:07:50,139
had tweak the the server in<font color="#CCCCCC"> order to be</font>

162
00:07:48,130 --> 00:07:53,919
<font color="#CCCCCC">able to process that than many packets</font>

163
00:07:50,139 --> 00:07:56,400
so z grab the did it in like 48 minutes

164
00:07:53,919 --> 00:07:59,948
<font color="#CCCCCC">which is pretty</font><font color="#E5E5E5"> good</font><font color="#CCCCCC"> I would say</font>

165
00:07:56,400 --> 00:08:02,560
<font color="#CCCCCC">nmap to be honest</font><font color="#E5E5E5"> after 14 hours waiting</font>

166
00:07:59,949 --> 00:08:05,319
I<font color="#CCCCCC"> canceled it</font><font color="#E5E5E5"> it was only done at</font><font color="#CCCCCC"> 8</font>

167
00:08:02,560 --> 00:08:07,629
<font color="#CCCCCC">percent so yeah</font><font color="#E5E5E5"> not a great</font><font color="#CCCCCC"> success and</font>

168
00:08:05,319 --> 00:08:13,870
<font color="#E5E5E5">like the picture says</font><font color="#CCCCCC"> I'll almost die</font>

169
00:08:07,629 --> 00:08:16,659
waiting yeah<font color="#E5E5E5"> so yeah</font><font color="#CCCCCC"> just a few</font><font color="#E5E5E5"> words 40</font>

170
00:08:13,870 --> 00:08:19,180
48 minutes you could say<font color="#E5E5E5"> okay this is</font>

171
00:08:16,659 --> 00:08:21,669
<font color="#E5E5E5">pretty decent this is fast fast enough</font>

172
00:08:19,180 --> 00:08:24,669
for me<font color="#E5E5E5"> yeah but that's only 1 million</font><font color="#CCCCCC"> if</font>

173
00:08:21,669 --> 00:08:28,000
if I say that there's 80 millions opened

174
00:08:24,669 --> 00:08:30,878
HTTP<font color="#CCCCCC"> pour on internet doing that with</font><font color="#E5E5E5"> Z</font>

175
00:08:28,000 --> 00:08:34,510
<font color="#CCCCCC">grub will take you three days this</font><font color="#E5E5E5"> is</font>

176
00:08:30,879 --> 00:08:37,240
not<font color="#E5E5E5"> very efficient and there's</font><font color="#CCCCCC"> probably</font>

177
00:08:34,510 --> 00:08:44,620
<font color="#E5E5E5">other solutions to go much faster</font><font color="#CCCCCC"> than</font>

178
00:08:37,240 --> 00:08:46,390
<font color="#E5E5E5">that so how do those</font><font color="#CCCCCC"> tool scale the</font><font color="#E5E5E5"> only</font>

179
00:08:44,620 --> 00:08:48,790
<font color="#E5E5E5">solution is to scale vertically by</font>

180
00:08:46,390 --> 00:08:49,900
vertically that means you'll improve the

181
00:08:48,790 --> 00:08:53,439
other<font color="#CCCCCC"> where you will</font>

182
00:08:49,900 --> 00:08:55,750
<font color="#E5E5E5">better CPU you'll get more Rams</font><font color="#CCCCCC"> you had</font>

183
00:08:53,440 --> 00:08:57,339
<font color="#E5E5E5">a better</font><font color="#CCCCCC"> network</font><font color="#E5E5E5"> card and so on it all</font>

184
00:08:55,750 --> 00:08:59,650
depends on<font color="#E5E5E5"> the bottleneck that you</font>

185
00:08:57,339 --> 00:09:02,650
eating<font color="#E5E5E5"> if you're hitting a bottleneck on</font>

186
00:08:59,650 --> 00:09:05,110
<font color="#E5E5E5">the CPU then you improve</font><font color="#CCCCCC"> your CP</font><font color="#E5E5E5"> this is</font>

187
00:09:02,650 --> 00:09:07,180
all nice<font color="#CCCCCC"> but at some point you'll hit</font><font color="#E5E5E5"> a</font>

188
00:09:05,110 --> 00:09:11,670
<font color="#E5E5E5">limit you won't be able to scale</font>

189
00:09:07,180 --> 00:09:14,319
indefinitely<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the same machines also</font>

190
00:09:11,670 --> 00:09:16,510
<font color="#E5E5E5">scaling vertically so adding a better</font>

191
00:09:14,320 --> 00:09:21,550
<font color="#E5E5E5">hardware on the single machine has also</font>

192
00:09:16,510 --> 00:09:23,500
drawbacks<font color="#CCCCCC"> you'll be limited</font><font color="#E5E5E5"> by the the</font>

193
00:09:21,550 --> 00:09:25,719
routing devices on the path to<font color="#E5E5E5"> the</font>

194
00:09:23,500 --> 00:09:29,050
target<font color="#E5E5E5"> like those poor ships</font><font color="#CCCCCC"> there for</font>

195
00:09:25,720 --> 00:09:31,210
the<font color="#E5E5E5"> back</font><font color="#CCCCCC"> diseased ships</font><font color="#E5E5E5"> so the idea is</font>

196
00:09:29,050 --> 00:09:34,359
that you would<font color="#E5E5E5"> be</font><font color="#CCCCCC"> sending from</font><font color="#E5E5E5"> a single</font>

197
00:09:31,210 --> 00:09:36,580
host<font color="#E5E5E5"> all your packets so if if it passed</font>

198
00:09:34,360 --> 00:09:38,920
through<font color="#E5E5E5"> a device that has a smaller pipe</font>

199
00:09:36,580 --> 00:09:42,339
than yours then you'll be blocked there

200
00:09:38,920 --> 00:09:44,920
<font color="#E5E5E5">also</font><font color="#CCCCCC"> you're using a single IP so you</font>

201
00:09:42,339 --> 00:09:47,950
might get blacklisted<font color="#E5E5E5"> by your ISP</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> any</font>

202
00:09:44,920 --> 00:09:50,650
other instances out there that are<font color="#E5E5E5"> not</font>

203
00:09:47,950 --> 00:09:53,740
happy<font color="#CCCCCC"> with seeing all those packets</font>

204
00:09:50,650 --> 00:09:56,260
<font color="#E5E5E5">coming from from your single IP this is</font>

205
00:09:53,740 --> 00:09:59,860
<font color="#E5E5E5">also a single point of failure</font><font color="#CCCCCC"> if your</font>

206
00:09:56,260 --> 00:10:02,470
<font color="#CCCCCC">hosts crash then or get blocked</font><font color="#E5E5E5"> then you</font>

207
00:09:59,860 --> 00:10:05,620
lose all all your<font color="#E5E5E5"> results or part of it</font>

208
00:10:02,470 --> 00:10:09,430
<font color="#E5E5E5">and it's also expensive</font><font color="#CCCCCC"> having your</font>

209
00:10:05,620 --> 00:10:13,300
machines with 24 CPUs and and and that

210
00:10:09,430 --> 00:10:15,790
many<font color="#CCCCCC"> rams is a lot is a lot</font><font color="#E5E5E5"> but even</font>

211
00:10:13,300 --> 00:10:20,620
scaling<font color="#CCCCCC"> even more than that is also a</font>

212
00:10:15,790 --> 00:10:24,930
lot so now we get so why is scaling

213
00:10:20,620 --> 00:10:27,670
<font color="#E5E5E5">originally a better solution by scaling</font>

214
00:10:24,930 --> 00:10:30,870
horizontally this means simply getting

215
00:10:27,670 --> 00:10:33,370
<font color="#E5E5E5">your own army of minions</font><font color="#CCCCCC"> and</font>

216
00:10:30,870 --> 00:10:35,980
distributing all your little<font color="#E5E5E5"> tasks to</font>

217
00:10:33,370 --> 00:10:39,250
them so<font color="#CCCCCC"> that all those little</font><font color="#E5E5E5"> minions</font>

218
00:10:35,980 --> 00:10:43,060
will process your<font color="#CCCCCC"> tasks this uses the</font>

219
00:10:39,250 --> 00:10:45,820
<font color="#E5E5E5">cloud and</font><font color="#CCCCCC"> it's no other is pretty cheap</font>

220
00:10:43,060 --> 00:10:50,349
to have<font color="#E5E5E5"> VM so this looks like a pretty</font>

221
00:10:45,820 --> 00:10:54,430
<font color="#E5E5E5">good idea also</font><font color="#CCCCCC"> it has specific</font>

222
00:10:50,350 --> 00:10:56,170
<font color="#E5E5E5">advantages like</font><font color="#CCCCCC"> its stealthier since you</font>

223
00:10:54,430 --> 00:10:59,050
are<font color="#E5E5E5"> having multiple minions you</font><font color="#CCCCCC"> have</font>

224
00:10:56,170 --> 00:11:01,300
multiple IPS<font color="#CCCCCC"> you would all then less</font>

225
00:10:59,050 --> 00:11:03,400
likely to<font color="#E5E5E5"> be blacklisted since all your</font>

226
00:11:01,300 --> 00:11:06,069
packets will go from<font color="#E5E5E5"> different paths</font>

227
00:11:03,400 --> 00:11:07,630
it's also fair because<font color="#CCCCCC"> you won't hit the</font>

228
00:11:06,070 --> 00:11:10,570
same route<font color="#CCCCCC"> Iran</font><font color="#E5E5E5"> your path to your</font>

229
00:11:07,630 --> 00:11:13,480
targets but multiple<font color="#E5E5E5"> ones its resilient</font>

230
00:11:10,570 --> 00:11:15,970
<font color="#CCCCCC">one of your</font><font color="#E5E5E5"> minions die then you only</font>

231
00:11:13,480 --> 00:11:19,750
lose part of your<font color="#E5E5E5"> results but the rest</font>

232
00:11:15,970 --> 00:11:24,160
<font color="#E5E5E5">the rest keeps on doing and should be</font>

233
00:11:19,750 --> 00:11:27,550
faster<font color="#E5E5E5"> by adding</font><font color="#CCCCCC"> more minions</font><font color="#E5E5E5"> you use</font>

234
00:11:24,160 --> 00:11:33,329
you get faster and your scan takes less

235
00:11:27,550 --> 00:11:37,449
time<font color="#E5E5E5"> but distributing an application so</font>

236
00:11:33,330 --> 00:11:39,810
with<font color="#CCCCCC"> minions</font><font color="#E5E5E5"> with VMs brings also its</font>

237
00:11:37,450 --> 00:11:42,490
own issue if you've ever played<font color="#CCCCCC"> with</font>

238
00:11:39,810 --> 00:11:45,729
multi-threaded application and unlocks

239
00:11:42,490 --> 00:11:47,770
and mutex and<font color="#E5E5E5"> so on and you apply</font><font color="#CCCCCC"> that</font>

240
00:11:45,730 --> 00:11:50,370
<font color="#E5E5E5">to distributed application then</font><font color="#CCCCCC"> you know</font>

241
00:11:47,770 --> 00:11:53,380
it's it's a big<font color="#CCCCCC"> mess and a</font><font color="#E5E5E5"> nightmare</font>

242
00:11:50,370 --> 00:11:56,050
also how do you handle the<font color="#CCCCCC"> communication</font>

243
00:11:53,380 --> 00:11:58,750
<font color="#E5E5E5">between all those little minions you</font>

244
00:11:56,050 --> 00:12:01,329
<font color="#E5E5E5">have to answer a question</font><font color="#CCCCCC"> like how do i</font>

245
00:11:58,750 --> 00:12:03,490
distribute<font color="#E5E5E5"> the</font><font color="#CCCCCC"> tasks I'll do end all</font>

246
00:12:01,330 --> 00:12:06,279
failures<font color="#E5E5E5"> in case one of</font><font color="#CCCCCC"> you millions die</font>

247
00:12:03,490 --> 00:12:08,980
and and you have<font color="#E5E5E5"> to restart it or how do</font>

248
00:12:06,279 --> 00:12:11,740
you<font color="#E5E5E5"> do that and in the end you</font><font color="#CCCCCC"> will have</font>

249
00:12:08,980 --> 00:12:13,870
to<font color="#CCCCCC"> you'll have all those minions</font><font color="#E5E5E5"> with</font>

250
00:12:11,740 --> 00:12:16,420
the results<font color="#E5E5E5"> I'll do you a grenade</font><font color="#CCCCCC"> that</font>

251
00:12:13,870 --> 00:12:21,490
those<font color="#E5E5E5"> results at the same place</font><font color="#CCCCCC"> in the</font>

252
00:12:16,420 --> 00:12:22,870
<font color="#CCCCCC">end</font><font color="#E5E5E5"> system so that's where Erlang comes</font>

253
00:12:21,490 --> 00:12:24,760
to the rescue

254
00:12:22,870 --> 00:12:26,860
I don't know if anyone is<font color="#CCCCCC"> familiar with</font>

255
00:12:24,760 --> 00:12:29,410
<font color="#CCCCCC">erelong but it's a pretty</font><font color="#E5E5E5"> good</font>

256
00:12:26,860 --> 00:12:32,770
<font color="#E5E5E5">programming language it has currency</font>

257
00:12:29,410 --> 00:12:35,740
<font color="#CCCCCC">available out of the box it's Jewish it</font>

258
00:12:32,770 --> 00:12:38,140
provides distributed application<font color="#E5E5E5"> and it</font>

259
00:12:35,740 --> 00:12:40,330
uses<font color="#E5E5E5"> a nice mechanism which is message</font>

260
00:12:38,140 --> 00:12:44,230
passing for communication so instead of

261
00:12:40,330 --> 00:12:48,370
using<font color="#E5E5E5"> Lux for example it uses mailboxes</font>

262
00:12:44,230 --> 00:12:51,010
<font color="#CCCCCC">that the buffered message being sent so</font>

263
00:12:48,370 --> 00:12:53,020
you get the the<font color="#E5E5E5"> master node for example</font>

264
00:12:51,010 --> 00:12:55,060
<font color="#E5E5E5">that would send message to all the</font>

265
00:12:53,020 --> 00:12:57,610
minions<font color="#E5E5E5"> and those message get buffered</font>

266
00:12:55,060 --> 00:13:00,699
<font color="#E5E5E5">into the mailbox and each process</font><font color="#CCCCCC"> is</font>

267
00:12:57,610 --> 00:13:03,670
able<font color="#E5E5E5"> to just check when he wants or when</font>

268
00:13:00,700 --> 00:13:07,660
it is able<font color="#E5E5E5"> to get the message and</font>

269
00:13:03,670 --> 00:13:10,209
<font color="#E5E5E5">processes so this is a very good system</font>

270
00:13:07,660 --> 00:13:12,550
<font color="#CCCCCC">in order to avoid all those issues</font><font color="#E5E5E5"> with</font>

271
00:13:10,209 --> 00:13:16,449
distributed app<font color="#E5E5E5"> or so it uses</font><font color="#CCCCCC"> the</font>

272
00:13:12,550 --> 00:13:18,319
<font color="#CCCCCC">reactor model</font><font color="#E5E5E5"> I will go deeper in</font><font color="#CCCCCC"> that</font>

273
00:13:16,450 --> 00:13:20,780
in the next

274
00:13:18,320 --> 00:13:22,640
it's<font color="#E5E5E5"> resilient so the idea is you</font><font color="#CCCCCC"> know</font>

275
00:13:20,780 --> 00:13:26,930
one of your<font color="#E5E5E5"> minion might crash</font>

276
00:13:22,640 --> 00:13:29,870
so get<font color="#CCCCCC"> be prepare for that and and set</font>

277
00:13:26,930 --> 00:13:32,719
up<font color="#E5E5E5"> all the different stuff</font><font color="#CCCCCC"> that you need</font>

278
00:13:29,870 --> 00:13:34,700
in order<font color="#CCCCCC"> to keep on scanning and keep on</font>

279
00:13:32,720 --> 00:13:37,720
doing what<font color="#E5E5E5"> you need what you're doing</font>

280
00:13:34,700 --> 00:13:40,880
also scanner has<font color="#E5E5E5"> very small processes</font>

281
00:13:37,720 --> 00:13:43,330
<font color="#CCCCCC">it's not we</font><font color="#E5E5E5"> don't call them processes</font>

282
00:13:40,880 --> 00:13:46,850
more<font color="#CCCCCC"> erelong</font><font color="#E5E5E5"> processes but it's 300</font>

283
00:13:43,330 --> 00:13:48,440
words so that's<font color="#E5E5E5"> pretty small it means</font>

284
00:13:46,850 --> 00:13:51,550
<font color="#E5E5E5">that you can have more than one hundred</font>

285
00:13:48,440 --> 00:13:55,340
<font color="#CCCCCC">and thousand processes on a single host</font>

286
00:13:51,550 --> 00:13:59,589
<font color="#E5E5E5">so that sounds good</font><font color="#CCCCCC"> for fingerprinting</font>

287
00:13:55,340 --> 00:14:02,480
<font color="#E5E5E5">for example what is this</font><font color="#CCCCCC"> actor model so</font>

288
00:13:59,590 --> 00:14:05,210
like like in<font color="#E5E5E5"> object-oriented programming</font>

289
00:14:02,480 --> 00:14:07,040
where each object<font color="#CCCCCC"> each everything is an</font>

290
00:14:05,210 --> 00:14:11,600
object<font color="#E5E5E5"> here everything is an actor like</font>

291
00:14:07,040 --> 00:14:14,300
<font color="#E5E5E5">this nice guy here</font><font color="#CCCCCC"> so each process is</font>

292
00:14:11,600 --> 00:14:16,430
isolated<font color="#E5E5E5"> from the rest it has</font><font color="#CCCCCC"> its own</font>

293
00:14:14,300 --> 00:14:19,069
<font color="#CCCCCC">mailbox and receives all the misc</font>

294
00:14:16,430 --> 00:14:24,890
message thread and process the message

295
00:14:19,070 --> 00:14:27,350
<font color="#E5E5E5">as as long as</font><font color="#CCCCCC"> its</font><font color="#E5E5E5"> life and all all this</font>

296
00:14:24,890 --> 00:14:29,900
make it a very<font color="#E5E5E5"> good model so</font><font color="#CCCCCC"> our long is</font>

297
00:14:27,350 --> 00:14:33,770
based on that model<font color="#E5E5E5"> which makes this</font>

298
00:14:29,900 --> 00:14:37,579
<font color="#CCCCCC">make</font><font color="#E5E5E5"> makes it really good and powerful</font>

299
00:14:33,770 --> 00:14:40,550
programming language now how do we apply

300
00:14:37,580 --> 00:14:43,670
<font color="#E5E5E5">that to fingerprinting so let's say that</font>

301
00:14:40,550 --> 00:14:46,280
<font color="#CCCCCC">each target so in each for example of</font>

302
00:14:43,670 --> 00:14:49,099
those 1 million<font color="#E5E5E5"> top-ranked website is</font><font color="#CCCCCC"> is</font>

303
00:14:46,280 --> 00:14:51,589
<font color="#CCCCCC">a</font><font color="#E5E5E5"> minion</font><font color="#CCCCCC"> so is an actor you would spin a</font>

304
00:14:49,100 --> 00:14:55,390
new<font color="#CCCCCC"> Erlang</font><font color="#E5E5E5"> process for each</font><font color="#CCCCCC"> of the</font>

305
00:14:51,590 --> 00:14:58,180
target<font color="#E5E5E5"> each each process will</font>

306
00:14:55,390 --> 00:15:01,220
<font color="#E5E5E5">communicate with with the remote host so</font>

307
00:14:58,180 --> 00:15:03,589
establishing<font color="#E5E5E5"> the TCP connection sending</font>

308
00:15:01,220 --> 00:15:05,930
the payload receiving the payload and at

309
00:15:03,590 --> 00:15:08,530
the end<font color="#E5E5E5"> return the results and and</font><font color="#CCCCCC"> die</font>

310
00:15:05,930 --> 00:15:11,989
and another one will be<font color="#E5E5E5"> spin for the</font>

311
00:15:08,530 --> 00:15:14,980
<font color="#CCCCCC">next target so this sounds pretty</font><font color="#E5E5E5"> good</font>

312
00:15:11,990 --> 00:15:17,480
and<font color="#E5E5E5"> I</font><font color="#CCCCCC"> guess you see where I'm going so</font>

313
00:15:14,980 --> 00:15:19,400
<font color="#E5E5E5">this is where I'm gonna introduce</font>

314
00:15:17,480 --> 00:15:22,130
scanner which is<font color="#E5E5E5"> based on all those</font>

315
00:15:19,400 --> 00:15:24,740
little principle<font color="#E5E5E5"> so you still here guys</font>

316
00:15:22,130 --> 00:15:29,270
right that was the<font color="#E5E5E5"> boring part now comes</font>

317
00:15:24,740 --> 00:15:31,120
the fun part<font color="#CCCCCC"> so here is the</font><font color="#E5E5E5"> the design</font>

318
00:15:29,270 --> 00:15:34,760
of scanner

319
00:15:31,120 --> 00:15:37,430
so on the left side<font color="#E5E5E5"> here you get the the</font>

320
00:15:34,760 --> 00:15:39,709
<font color="#E5E5E5">master this is the part that is doing</font>

321
00:15:37,430 --> 00:15:43,250
all the<font color="#CCCCCC"> tedious task like parsing the</font>

322
00:15:39,709 --> 00:15:46,640
arguments getting the targets<font color="#E5E5E5"> starting</font>

323
00:15:43,250 --> 00:15:49,339
the different<font color="#CCCCCC"> nodes here</font><font color="#E5E5E5"> and so on all</font>

324
00:15:46,640 --> 00:15:51,470
those boring tasks the broker is<font color="#CCCCCC"> the</font>

325
00:15:49,339 --> 00:15:54,440
part<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is running on the VM</font><font color="#CCCCCC"> so this</font>

326
00:15:51,470 --> 00:15:56,959
is the the<font color="#CCCCCC"> the</font><font color="#E5E5E5"> part that receive a list</font>

327
00:15:54,440 --> 00:15:59,360
of targets<font color="#CCCCCC"> and we'll spin new processes</font>

328
00:15:56,959 --> 00:16:01,939
for each of those<font color="#E5E5E5"> targets and at the end</font>

329
00:15:59,360 --> 00:16:05,690
we<font color="#E5E5E5"> get those actors</font><font color="#CCCCCC"> that are actually</font>

330
00:16:01,940 --> 00:16:07,670
one actor per target<font color="#E5E5E5"> so that</font><font color="#CCCCCC"> means</font><font color="#E5E5E5"> that</font>

331
00:16:05,690 --> 00:16:11,779
the broker if it<font color="#E5E5E5"> received 1 million</font>

332
00:16:07,670 --> 00:16:14,209
<font color="#E5E5E5">target it will spin 1 million process</font><font color="#CCCCCC"> so</font>

333
00:16:11,779 --> 00:16:18,050
the design is is pretty good because<font color="#E5E5E5"> it</font>

334
00:16:14,209 --> 00:16:22,640
allows<font color="#CCCCCC"> to scale</font><font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> also all this</font>

335
00:16:18,050 --> 00:16:25,550
process of creating<font color="#CCCCCC"> the the broker</font><font color="#E5E5E5"> and</font>

336
00:16:22,640 --> 00:16:27,860
communicating communicating with it is

337
00:16:25,550 --> 00:16:29,870
all transparent<font color="#CCCCCC"> to the user so all you</font>

338
00:16:27,860 --> 00:16:33,500
have<font color="#E5E5E5"> is your</font><font color="#CCCCCC"> host with scanner</font><font color="#E5E5E5"> running</font>

339
00:16:29,870 --> 00:16:36,470
on it and<font color="#E5E5E5"> access to</font><font color="#CCCCCC"> some</font><font color="#E5E5E5"> VMs ten hundred</font>

340
00:16:33,500 --> 00:16:39,350
<font color="#E5E5E5">VMs and all the</font><font color="#CCCCCC"> the process of</font><font color="#E5E5E5"> creating</font>

341
00:16:36,470 --> 00:16:41,300
the the the brokers sending the the

342
00:16:39,350 --> 00:16:44,630
target<font color="#CCCCCC"> to them and then spinning</font><font color="#E5E5E5"> the</font>

343
00:16:41,300 --> 00:16:48,109
different actors<font color="#E5E5E5"> is all transparent</font><font color="#CCCCCC"> you</font>

344
00:16:44,630 --> 00:16:50,779
don't have to do anything<font color="#E5E5E5"> so of course</font>

345
00:16:48,110 --> 00:16:53,089
this this<font color="#CCCCCC"> allows for</font><font color="#E5E5E5"> infinite scaling</font>

346
00:16:50,779 --> 00:16:55,670
yeah that that's me being a little<font color="#CCCCCC"> bit</font>

347
00:16:53,089 --> 00:16:57,529
optimistic<font color="#E5E5E5"> but the idea is</font><font color="#CCCCCC"> that you are</font>

348
00:16:55,670 --> 00:17:00,170
able to decide the number<font color="#E5E5E5"> broker you</font>

349
00:16:57,529 --> 00:17:01,760
want so the number of<font color="#E5E5E5"> VMs you provide it</font>

350
00:17:00,170 --> 00:17:05,030
<font color="#CCCCCC">to scanner and then you decide the</font>

351
00:17:01,760 --> 00:17:07,359
number<font color="#E5E5E5"> of actors or</font><font color="#CCCCCC"> wrong processes you</font>

352
00:17:05,030 --> 00:17:09,920
want per broker and<font color="#CCCCCC"> you get the whole</font>

353
00:17:07,359 --> 00:17:15,290
<font color="#CCCCCC">process going and</font><font color="#E5E5E5"> you should be able to</font>

354
00:17:09,920 --> 00:17:18,400
<font color="#E5E5E5">scale indefinitely so this is all good</font>

355
00:17:15,290 --> 00:17:20,569
and<font color="#E5E5E5"> nice so the design looks good but</font>

356
00:17:18,400 --> 00:17:23,120
<font color="#CCCCCC">finger printing like I said at the</font>

357
00:17:20,569 --> 00:17:25,428
beginning<font color="#E5E5E5"> is specific to the protocol</font><font color="#CCCCCC"> to</font>

358
00:17:23,119 --> 00:17:28,550
the<font color="#E5E5E5"> service</font><font color="#CCCCCC"> that you want to access and</font>

359
00:17:25,429 --> 00:17:30,559
communicate with so the the core

360
00:17:28,550 --> 00:17:32,960
provides<font color="#E5E5E5"> all those basic blocks of</font>

361
00:17:30,559 --> 00:17:35,210
parsing starting the VM on the remote

362
00:17:32,960 --> 00:17:37,940
host and so on<font color="#E5E5E5"> and we've added</font><font color="#CCCCCC"> two</font>

363
00:17:35,210 --> 00:17:40,429
modular<font color="#CCCCCC"> elements the fingerprinting</font>

364
00:17:37,940 --> 00:17:43,100
module and the output modules that<font color="#E5E5E5"> are</font>

365
00:17:40,429 --> 00:17:44,840
easy<font color="#E5E5E5"> to integrate into</font><font color="#CCCCCC"> scanner</font><font color="#E5E5E5"> the</font>

366
00:17:43,100 --> 00:17:46,609
fingers fingerprinting much

367
00:17:44,840 --> 00:17:48,529
is the part that<font color="#E5E5E5"> is running on the actor</font>

368
00:17:46,609 --> 00:17:50,570
<font color="#CCCCCC">path so that's the little</font><font color="#E5E5E5"> minions</font><font color="#CCCCCC"> that</font>

369
00:17:48,529 --> 00:17:53,330
is communicating with the<font color="#E5E5E5"> servers and</font>

370
00:17:50,570 --> 00:17:56,210
<font color="#CCCCCC">the output modules</font><font color="#E5E5E5"> is the way you want</font>

371
00:17:53,330 --> 00:17:58,879
your results<font color="#E5E5E5"> to be filter or aggregate</font>

372
00:17:56,210 --> 00:18:03,679
or<font color="#E5E5E5"> pores before they get outputted to</font>

373
00:17:58,879 --> 00:18:06,889
any kind of of output so<font color="#E5E5E5"> I'll</font><font color="#CCCCCC"> got</font><font color="#E5E5E5"> a</font>

374
00:18:03,679 --> 00:18:08,899
little<font color="#E5E5E5"> bit deeper in those two modules</font>

375
00:18:06,889 --> 00:18:10,998
to give you an idea<font color="#CCCCCC"> who it is and it's</font>

376
00:18:08,899 --> 00:18:13,099
<font color="#CCCCCC">not that</font><font color="#E5E5E5"> difficult</font>

377
00:18:10,999 --> 00:18:16,940
so the fingerprinting modules<font color="#E5E5E5"> is</font>

378
00:18:13,099 --> 00:18:20,799
actually allows you to<font color="#E5E5E5"> to perform three</font>

379
00:18:16,940 --> 00:18:23,950
types of communication<font color="#CCCCCC"> TCP</font><font color="#E5E5E5"> UDP and SSL</font>

380
00:18:20,799 --> 00:18:26,859
<font color="#CCCCCC">sounds</font><font color="#E5E5E5"> pretty good</font><font color="#CCCCCC"> so far</font><font color="#E5E5E5"> and and</font>

381
00:18:23,950 --> 00:18:29,539
there's a mechanism<font color="#E5E5E5"> of callback so that</font>

382
00:18:26,859 --> 00:18:32,239
actually<font color="#CCCCCC"> the whole scanner process here</font>

383
00:18:29,539 --> 00:18:34,249
on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Left will be</font><font color="#E5E5E5"> handling all that is</font>

384
00:18:32,239 --> 00:18:37,789
the transport communication so

385
00:18:34,249 --> 00:18:40,309
establishing<font color="#E5E5E5"> the TCP connection or</font>

386
00:18:37,789 --> 00:18:42,799
sending some payload receiving some and

387
00:18:40,309 --> 00:18:45,470
your module<font color="#E5E5E5"> on the right side we</font><font color="#CCCCCC"> only</font>

388
00:18:42,799 --> 00:18:47,479
have to respond<font color="#CCCCCC"> what is the next</font><font color="#E5E5E5"> step</font><font color="#CCCCCC"> to</font>

389
00:18:45,470 --> 00:18:51,109
do so for<font color="#CCCCCC"> example after</font><font color="#E5E5E5"> the connection</font>

390
00:18:47,479 --> 00:18:53,330
<font color="#CCCCCC">is made</font><font color="#E5E5E5"> the the scanner will ask you</font>

391
00:18:51,109 --> 00:18:55,489
module so what I do next

392
00:18:53,330 --> 00:18:57,799
<font color="#E5E5E5">and you</font><font color="#CCCCCC"> will provide some payload that</font>

393
00:18:55,489 --> 00:18:59,869
<font color="#E5E5E5">will be sent to the remote host</font><font color="#CCCCCC"> and then</font>

394
00:18:57,799 --> 00:19:01,940
when the response come back you get<font color="#CCCCCC"> to</font>

395
00:18:59,869 --> 00:19:05,359
parsing and so on and so forth<font color="#CCCCCC"> until you</font>

396
00:19:01,940 --> 00:19:08,840
<font color="#E5E5E5">happy and you bring back</font><font color="#CCCCCC"> some results so</font>

397
00:19:05,359 --> 00:19:11,389
this allows for easily implement some

398
00:19:08,840 --> 00:19:15,228
some modules without<font color="#E5E5E5"> going into</font><font color="#CCCCCC"> whole</font>

399
00:19:11,389 --> 00:19:18,498
<font color="#E5E5E5">the network layer</font><font color="#CCCCCC"> stuff that is</font>

400
00:19:15,229 --> 00:19:20,389
<font color="#CCCCCC">sometimes a bit</font><font color="#E5E5E5"> more difficult so this</font>

401
00:19:18,499 --> 00:19:22,789
is how it looks<font color="#CCCCCC"> likes if you've never</font>

402
00:19:20,389 --> 00:19:23,478
seen<font color="#E5E5E5"> functional programming or or long</font>

403
00:19:22,789 --> 00:19:25,999
<font color="#CCCCCC">bare with me</font>

404
00:19:23,479 --> 00:19:28,279
<font color="#E5E5E5">I'll explain that it's it's</font><font color="#CCCCCC"> really</font><font color="#E5E5E5"> easy</font>

405
00:19:25,999 --> 00:19:31,309
<font color="#CCCCCC">so like I said</font><font color="#E5E5E5"> you have to</font><font color="#CCCCCC"> declare that</font>

406
00:19:28,279 --> 00:19:33,139
<font color="#E5E5E5">the type so the type you can change it</font>

407
00:19:31,309 --> 00:19:36,200
in one<font color="#E5E5E5"> line so for example if you I</font>

408
00:19:33,139 --> 00:19:38,988
<font color="#E5E5E5">implement a module</font><font color="#CCCCCC"> for for</font><font color="#E5E5E5"> TCP like for</font>

409
00:19:36,200 --> 00:19:42,229
HTTP for<font color="#E5E5E5"> example and you</font><font color="#CCCCCC"> want it</font><font color="#E5E5E5"> to be</font>

410
00:19:38,989 --> 00:19:45,529
applied<font color="#E5E5E5"> to</font><font color="#CCCCCC"> HTTPS</font><font color="#E5E5E5"> you will just change</font>

411
00:19:42,229 --> 00:19:49,429
<font color="#E5E5E5">the TCP in SSL so this is pretty</font>

412
00:19:45,529 --> 00:19:52,399
convenient<font color="#CCCCCC"> also as</font><font color="#E5E5E5"> it's it's functional</font>

413
00:19:49,429 --> 00:19:54,499
programming<font color="#E5E5E5"> the same function will be</font>

414
00:19:52,399 --> 00:19:57,918
entered depending on the<font color="#E5E5E5"> argument so</font>

415
00:19:54,499 --> 00:19:58,640
this is the same different steps we've

416
00:19:57,919 --> 00:20:01,310
seen in

417
00:19:58,640 --> 00:20:04,280
<font color="#E5E5E5">Graff before so the first function</font><font color="#CCCCCC"> here</font>

418
00:20:01,310 --> 00:20:06,350
we enter where we when we start so when

419
00:20:04,280 --> 00:20:09,320
the<font color="#E5E5E5"> connection has just been established</font>

420
00:20:06,350 --> 00:20:11,540
with<font color="#CCCCCC"> the remote host and here you'll</font>

421
00:20:09,320 --> 00:20:14,230
provide some payload in return so this

422
00:20:11,540 --> 00:20:17,930
is what will<font color="#E5E5E5"> be</font><font color="#CCCCCC"> send to the remote host</font>

423
00:20:14,230 --> 00:20:20,420
<font color="#E5E5E5">the second one enters if nothing's come</font>

424
00:20:17,930 --> 00:20:23,060
back for example<font color="#CCCCCC"> the the remote host</font><font color="#E5E5E5"> as</font>

425
00:20:20,420 --> 00:20:25,430
an answer or is not<font color="#CCCCCC"> running the the</font>

426
00:20:23,060 --> 00:20:27,889
service<font color="#E5E5E5"> we expect it to</font><font color="#CCCCCC"> be running</font><font color="#E5E5E5"> so</font>

427
00:20:25,430 --> 00:20:29,960
here you would answer you will return

428
00:20:27,890 --> 00:20:34,160
some some<font color="#E5E5E5"> kind of error like like a</font>

429
00:20:29,960 --> 00:20:37,910
<font color="#CCCCCC">timeout for example and and the last</font><font color="#E5E5E5"> the</font>

430
00:20:34,160 --> 00:20:39,710
<font color="#E5E5E5">last part is where the the interesting</font>

431
00:20:37,910 --> 00:20:42,020
stuff is going on<font color="#E5E5E5"> so this is where you</font>

432
00:20:39,710 --> 00:20:44,750
get<font color="#E5E5E5"> your response you get to parse that</font>

433
00:20:42,020 --> 00:20:46,639
and and and<font color="#E5E5E5"> format that in the way you</font>

434
00:20:44,750 --> 00:20:49,340
want<font color="#E5E5E5"> so depending on what you're looking</font>

435
00:20:46,640 --> 00:20:52,250
<font color="#E5E5E5">for and the results</font><font color="#CCCCCC"> that you put here</font>

436
00:20:49,340 --> 00:20:54,530
<font color="#E5E5E5">will be sent back up to the master node</font>

437
00:20:52,250 --> 00:20:56,750
which will<font color="#CCCCCC"> aggregate all those</font><font color="#E5E5E5"> results</font>

438
00:20:54,530 --> 00:20:59,060
<font color="#E5E5E5">so as you can see this is a simplified</font>

439
00:20:56,750 --> 00:21:03,110
<font color="#E5E5E5">example but it gives you an idea how</font>

440
00:20:59,060 --> 00:21:06,590
<font color="#CCCCCC">easy it is to</font><font color="#E5E5E5"> just implement a bear</font>

441
00:21:03,110 --> 00:21:11,419
module for fingerprinting<font color="#CCCCCC"> a specific</font>

442
00:21:06,590 --> 00:21:13,580
<font color="#E5E5E5">service for example the output module is</font>

443
00:21:11,420 --> 00:21:14,060
is based on the same ID with with a

444
00:21:13,580 --> 00:21:17,750
callback

445
00:21:14,060 --> 00:21:20,750
it has also some two functions<font color="#E5E5E5"> in E and</font>

446
00:21:17,750 --> 00:21:23,320
clean<font color="#CCCCCC"> in order</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> setup</font><font color="#E5E5E5"> and manage</font><font color="#CCCCCC"> the</font>

447
00:21:20,750 --> 00:21:26,660
output<font color="#E5E5E5"> let's say for example you want to</font>

448
00:21:23,320 --> 00:21:29,210
write to<font color="#CCCCCC"> a file in</font><font color="#E5E5E5"> the an e in</font><font color="#CCCCCC"> E you</font>

449
00:21:26,660 --> 00:21:32,000
will set<font color="#E5E5E5"> up your file descriptor</font><font color="#CCCCCC"> so that</font>

450
00:21:29,210 --> 00:21:33,410
it's<font color="#E5E5E5"> ready</font><font color="#CCCCCC"> to be processed and in the</font>

451
00:21:32,000 --> 00:21:36,220
clean you<font color="#CCCCCC"> will close the file descriptor</font>

452
00:21:33,410 --> 00:21:39,410
or flush the data to the<font color="#E5E5E5"> to the fire and</font>

453
00:21:36,220 --> 00:21:42,800
and this way of<font color="#CCCCCC"> doing allows to format</font>

454
00:21:39,410 --> 00:21:44,360
or even<font color="#E5E5E5"> filter or reformat the data the</font>

455
00:21:42,800 --> 00:21:47,990
way<font color="#E5E5E5"> you want it for</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> you could</font>

456
00:21:44,360 --> 00:21:49,850
you could want<font color="#E5E5E5"> to output</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> two to</font>

457
00:21:47,990 --> 00:21:53,210
standard out<font color="#E5E5E5"> like print that to the</font>

458
00:21:49,850 --> 00:21:55,879
console<font color="#CCCCCC"> some save to a file even</font><font color="#E5E5E5"> push to</font>

459
00:21:53,210 --> 00:21:57,920
a database or stream to another host<font color="#CCCCCC"> so</font>

460
00:21:55,880 --> 00:22:01,240
<font color="#E5E5E5">anything is possible here since you have</font>

461
00:21:57,920 --> 00:22:03,410
control<font color="#CCCCCC"> over all</font><font color="#E5E5E5"> results that are</font>

462
00:22:01,240 --> 00:22:07,070
<font color="#E5E5E5">provided provided back by the</font>

463
00:22:03,410 --> 00:22:11,800
fingerprinting<font color="#E5E5E5"> module this is how it</font>

464
00:22:07,070 --> 00:22:14,980
looks like<font color="#CCCCCC"> so in</font><font color="#E5E5E5"> E and clean this is</font>

465
00:22:11,800 --> 00:22:17,800
an example<font color="#E5E5E5"> is pretty straightforward but</font>

466
00:22:14,980 --> 00:22:20,440
the<font color="#CCCCCC"> output here</font><font color="#E5E5E5"> is where each results we</font>

467
00:22:17,800 --> 00:22:25,300
will go through<font color="#E5E5E5"> before getting input</font>

468
00:22:20,440 --> 00:22:27,970
<font color="#E5E5E5">output it so here it's simply writing to</font>

469
00:22:25,300 --> 00:22:31,270
standard out<font color="#E5E5E5"> but you could</font><font color="#CCCCCC"> think of for</font>

470
00:22:27,970 --> 00:22:33,600
example sending to some elasticsearch

471
00:22:31,270 --> 00:22:38,590
node for example<font color="#E5E5E5"> for</font><font color="#CCCCCC"> post-processing or</font>

472
00:22:33,600 --> 00:22:40,840
save<font color="#CCCCCC"> to a database sequel database or</font>

473
00:22:38,590 --> 00:22:45,040
<font color="#E5E5E5">whatever anything is possible and and</font>

474
00:22:40,840 --> 00:22:46,810
this freedom<font color="#E5E5E5"> allows to to pre-process so</font>

475
00:22:45,040 --> 00:22:49,770
to say the<font color="#CCCCCC"> results so that</font><font color="#E5E5E5"> they're</font>

476
00:22:46,810 --> 00:22:55,629
formatted the way<font color="#CCCCCC"> you want it in the end</font>

477
00:22:49,770 --> 00:22:58,180
<font color="#E5E5E5">so how does it</font><font color="#CCCCCC"> look in practice here</font>

478
00:22:55,630 --> 00:23:01,110
<font color="#E5E5E5">before I'm going into how fast is it</font>

479
00:22:58,180 --> 00:23:05,070
<font color="#CCCCCC">how good is it so a few lesson learned</font>

480
00:23:01,110 --> 00:23:07,000
about<font color="#E5E5E5"> using a scanner first</font>

481
00:23:05,070 --> 00:23:09,010
<font color="#E5E5E5">fingerprinting like we've seen at the</font>

482
00:23:07,000 --> 00:23:11,110
<font color="#E5E5E5">beginning will bring back a lot</font><font color="#CCCCCC"> of data</font>

483
00:23:09,010 --> 00:23:13,810
<font color="#E5E5E5">not</font><font color="#CCCCCC"> only the studies of app or like port</font>

484
00:23:11,110 --> 00:23:16,629
scanning but<font color="#E5E5E5"> the whole payload that that</font>

485
00:23:13,810 --> 00:23:18,280
you asking the remote host<font color="#E5E5E5"> so since our</font>

486
00:23:16,630 --> 00:23:20,590
long is<font color="#E5E5E5"> is running in the virtual</font>

487
00:23:18,280 --> 00:23:22,690
machines<font color="#CCCCCC"> you sometimes end up with</font><font color="#E5E5E5"> the</font>

488
00:23:20,590 --> 00:23:25,120
heap<font color="#E5E5E5"> overflow so you have to increase</font>

489
00:23:22,690 --> 00:23:26,860
<font color="#E5E5E5">the ramp</font><font color="#CCCCCC"> we've also added a few</font><font color="#E5E5E5"> option</font>

490
00:23:25,120 --> 00:23:28,389
in order<font color="#CCCCCC"> to control that but</font><font color="#E5E5E5"> you have</font><font color="#CCCCCC"> to</font>

491
00:23:26,860 --> 00:23:32,500
<font color="#CCCCCC">be aware that this is something that</font>

492
00:23:28,390 --> 00:23:35,620
<font color="#E5E5E5">could happen also</font><font color="#CCCCCC"> the bottleneck is not</font>

493
00:23:32,500 --> 00:23:38,410
<font color="#CCCCCC">we</font><font color="#E5E5E5"> would think in the actor side so the</font>

494
00:23:35,620 --> 00:23:40,870
side where we we connect to<font color="#E5E5E5"> the</font><font color="#CCCCCC"> remote</font>

495
00:23:38,410 --> 00:23:42,460
host<font color="#CCCCCC"> but more</font><font color="#E5E5E5"> on the saving process so</font>

496
00:23:40,870 --> 00:23:45,040
it means<font color="#E5E5E5"> that it's not always the</font>

497
00:23:42,460 --> 00:23:48,160
perfect<font color="#E5E5E5"> solution to have more minions to</font>

498
00:23:45,040 --> 00:23:51,040
to<font color="#E5E5E5"> process much more faster the targets</font>

499
00:23:48,160 --> 00:23:52,720
but more<font color="#E5E5E5"> how do you handle those results</font>

500
00:23:51,040 --> 00:23:55,120
<font color="#E5E5E5">how do you save those results for</font>

501
00:23:52,720 --> 00:23:57,190
example<font color="#CCCCCC"> to a fire</font><font color="#E5E5E5"> it's also pretty</font>

502
00:23:55,120 --> 00:23:59,139
difficult to debug<font color="#CCCCCC"> a distributed</font>

503
00:23:57,190 --> 00:24:02,860
<font color="#E5E5E5">application if you've done that</font><font color="#CCCCCC"> you know</font>

504
00:23:59,140 --> 00:24:05,830
what I mean internal communication will

505
00:24:02,860 --> 00:24:07,899
impact your network<font color="#CCCCCC"> too</font><font color="#E5E5E5"> so not only the</font>

506
00:24:05,830 --> 00:24:09,669
communication with<font color="#E5E5E5"> the remote host like</font>

507
00:24:07,900 --> 00:24:12,460
the the<font color="#E5E5E5"> service you're trying to</font>

508
00:24:09,670 --> 00:24:15,490
fingerprinting but all those<font color="#E5E5E5"> which</font>

509
00:24:12,460 --> 00:24:19,360
retrieving the the results back managing

510
00:24:15,490 --> 00:24:21,760
all your nodes<font color="#CCCCCC"> also on and like I</font><font color="#E5E5E5"> said</font>

511
00:24:19,360 --> 00:24:24,040
<font color="#E5E5E5">before it's everything is</font><font color="#CCCCCC"> transparent</font>

512
00:24:21,760 --> 00:24:25,660
but<font color="#CCCCCC"> you still have to provide</font><font color="#E5E5E5"> VMs for</font>

513
00:24:24,040 --> 00:24:28,180
<font color="#CCCCCC">Scannell to use so</font><font color="#E5E5E5"> you have</font>

514
00:24:25,660 --> 00:24:30,670
to set up<font color="#CCCCCC"> those VMs</font><font color="#E5E5E5"> the dependencies are</font>

515
00:24:28,180 --> 00:24:33,160
not<font color="#CCCCCC"> high</font><font color="#E5E5E5"> it's only setting up a few</font>

516
00:24:30,670 --> 00:24:35,620
option for<font color="#CCCCCC"> along and installing</font><font color="#E5E5E5"> Erlang</font>

517
00:24:33,160 --> 00:24:37,630
<font color="#CCCCCC">but</font><font color="#E5E5E5"> still</font><font color="#CCCCCC"> you'll have to set up</font><font color="#E5E5E5"> those</font>

518
00:24:35,620 --> 00:24:39,939
VMs you can use any deployment<font color="#E5E5E5"> tools</font>

519
00:24:37,630 --> 00:24:43,720
like<font color="#E5E5E5"> ansible for example to do that but</font>

520
00:24:39,940 --> 00:24:45,310
it has to<font color="#E5E5E5"> be done it in anywhere one</font>

521
00:24:43,720 --> 00:24:47,620
thing you<font color="#E5E5E5"> have to do when using</font><font color="#CCCCCC"> scanner</font>

522
00:24:45,310 --> 00:24:50,200
<font color="#CCCCCC">2 is to give a lot of</font><font color="#E5E5E5"> love</font><font color="#CCCCCC"> to you season</font>

523
00:24:47,620 --> 00:24:53,320
means because<font color="#E5E5E5"> using a tool like that</font>

524
00:24:50,200 --> 00:24:56,260
that scale<font color="#E5E5E5"> pretty large will impact your</font>

525
00:24:53,320 --> 00:24:58,510
network and will<font color="#CCCCCC"> mostly likely</font><font color="#E5E5E5"> break it</font>

526
00:24:56,260 --> 00:25:00,879
here we<font color="#E5E5E5"> can see a contract table on a</font>

527
00:24:58,510 --> 00:25:03,190
firewall being hit<font color="#CCCCCC"> so once the contract</font>

528
00:25:00,880 --> 00:25:06,430
contract table is hit and you don't have

529
00:25:03,190 --> 00:25:08,560
much more<font color="#E5E5E5"> going on right so I don't</font><font color="#CCCCCC"> know</font>

530
00:25:06,430 --> 00:25:11,680
if my season means<font color="#E5E5E5"> are here</font><font color="#CCCCCC"> but anyway</font>

531
00:25:08,560 --> 00:25:13,899
if they are thank<font color="#E5E5E5"> you guys because I</font>

532
00:25:11,680 --> 00:25:15,850
broke their<font color="#E5E5E5"> network a few times and</font>

533
00:25:13,900 --> 00:25:19,720
they've been really<font color="#E5E5E5"> nice so yeah you</font>

534
00:25:15,850 --> 00:25:22,209
have<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be aware of that it will create</font>

535
00:25:19,720 --> 00:25:27,550
<font color="#E5E5E5">a lot</font><font color="#CCCCCC"> of parallel connections and and</font>

536
00:25:22,210 --> 00:25:29,530
might or will break your network so now

537
00:25:27,550 --> 00:25:32,710
we get<font color="#E5E5E5"> the performances so I took the</font>

538
00:25:29,530 --> 00:25:35,170
same target as before<font color="#E5E5E5"> so Alex at top 1</font>

539
00:25:32,710 --> 00:25:36,970
million<font color="#E5E5E5"> top-ranked</font><font color="#CCCCCC"> websites I tried</font><font color="#E5E5E5"> to</font>

540
00:25:35,170 --> 00:25:38,770
be fair although the comparison is not

541
00:25:36,970 --> 00:25:40,150
<font color="#CCCCCC">very fair between</font><font color="#E5E5E5"> a distributed</font>

542
00:25:38,770 --> 00:25:43,000
<font color="#CCCCCC">application and still</font><font color="#E5E5E5"> a known</font>

543
00:25:40,150 --> 00:25:45,370
application<font color="#E5E5E5"> but still I use 20 VMs each</font>

544
00:25:43,000 --> 00:25:49,570
with one<font color="#E5E5E5"> V</font><font color="#CCCCCC"> CPU and tookies of ram</font>

545
00:25:45,370 --> 00:25:54,040
against those 24 CPUs and 190 gig of the

546
00:25:49,570 --> 00:25:56,919
<font color="#CCCCCC">rams</font><font color="#E5E5E5"> anyway so the grub donated in 48 8</font>

547
00:25:54,040 --> 00:25:59,740
minutes and<font color="#E5E5E5"> map wasn't</font><font color="#CCCCCC"> that and scanner</font>

548
00:25:56,920 --> 00:26:00,790
<font color="#E5E5E5">one was done in</font><font color="#CCCCCC"> four minutes so this</font><font color="#E5E5E5"> is</font>

549
00:25:59,740 --> 00:26:03,640
a<font color="#E5E5E5"> 10 factor</font>

550
00:26:00,790 --> 00:26:06,370
it's pretty<font color="#E5E5E5"> nice and we've only used 20</font>

551
00:26:03,640 --> 00:26:09,190
<font color="#CCCCCC">vm so what if you scale even</font><font color="#E5E5E5"> more so</font>

552
00:26:06,370 --> 00:26:12,370
I've tried<font color="#E5E5E5"> with 60 VMs and we come down</font>

553
00:26:09,190 --> 00:26:14,170
<font color="#E5E5E5">to</font><font color="#CCCCCC"> 1 minute and 30</font><font color="#E5E5E5"> seconds so this means</font>

554
00:26:12,370 --> 00:26:16,449
<font color="#CCCCCC">that here like I</font><font color="#E5E5E5"> said at the beginning</font>

555
00:26:14,170 --> 00:26:19,930
if you want to target<font color="#E5E5E5"> all those 18</font>

556
00:26:16,450 --> 00:26:22,060
<font color="#E5E5E5">million targets like Z</font><font color="#CCCCCC"> grab would take 3</font>

557
00:26:19,930 --> 00:26:24,820
<font color="#CCCCCC">days to</font><font color="#E5E5E5"> do that here with with a scanner</font>

558
00:26:22,060 --> 00:26:26,679
<font color="#E5E5E5">you do it in two</font><font color="#CCCCCC"> hours with 30 VMs</font><font color="#E5E5E5"> if</font>

559
00:26:24,820 --> 00:26:29,260
you double<font color="#CCCCCC"> the number of VMs then it</font>

560
00:26:26,680 --> 00:26:31,090
gets probably<font color="#E5E5E5"> down</font><font color="#CCCCCC"> to one hour</font><font color="#E5E5E5"> so this</font>

561
00:26:29,260 --> 00:26:34,000
is pretty<font color="#E5E5E5"> good</font><font color="#CCCCCC"> as you</font><font color="#E5E5E5"> can see we've</font>

562
00:26:31,090 --> 00:26:37,000
tried several<font color="#E5E5E5"> protocols</font><font color="#CCCCCC"> of course all</font>

563
00:26:34,000 --> 00:26:38,920
<font color="#E5E5E5">that is SSL related</font><font color="#CCCCCC"> world where you have</font>

564
00:26:37,000 --> 00:26:41,950
more overhead<font color="#E5E5E5"> of</font>

565
00:26:38,920 --> 00:26:44,710
due to the communication<font color="#E5E5E5"> it's a bit</font>

566
00:26:41,950 --> 00:26:47,950
longer but still<font color="#E5E5E5"> you can still you can</font>

567
00:26:44,710 --> 00:26:50,230
scale and and the<font color="#E5E5E5"> idea is</font><font color="#CCCCCC"> that you</font>

568
00:26:47,950 --> 00:26:53,200
should<font color="#CCCCCC"> be able to</font><font color="#E5E5E5"> add more</font><font color="#CCCCCC"> VMS in order</font>

569
00:26:50,230 --> 00:26:58,540
to be more more performant<font color="#E5E5E5"> so yeah</font>

570
00:26:53,200 --> 00:27:01,690
<font color="#E5E5E5">pretty good results so now you say</font><font color="#CCCCCC"> so</font>

571
00:26:58,540 --> 00:27:03,820
how<font color="#E5E5E5"> much does that cost</font><font color="#CCCCCC"> well it's it's</font>

572
00:27:01,690 --> 00:27:08,100
free<font color="#E5E5E5"> like</font><font color="#CCCCCC"> in free beer although it's a</font>

573
00:27:03,820 --> 00:27:12,189
<font color="#E5E5E5">bit early but it's open source on github</font>

574
00:27:08,100 --> 00:27:14,860
<font color="#E5E5E5">and and there's already a few modules</font><font color="#CCCCCC"> of</font>

575
00:27:12,190 --> 00:27:17,850
available there but we are<font color="#E5E5E5"> releasing</font>

576
00:27:14,860 --> 00:27:21,490
<font color="#CCCCCC">more</font><font color="#E5E5E5"> especially related to ICS and SCADA</font>

577
00:27:17,850 --> 00:27:23,980
<font color="#CCCCCC">so if you haven't</font><font color="#E5E5E5"> yet go have a look</font>

578
00:27:21,490 --> 00:27:26,470
clone<font color="#CCCCCC"> the repository try to play with</font>

579
00:27:23,980 --> 00:27:30,790
<font color="#E5E5E5">the tools and see how it works out with</font>

580
00:27:26,470 --> 00:27:32,919
you<font color="#E5E5E5"> for you and if there's anything not</font>

581
00:27:30,790 --> 00:27:35,799
working feel free to<font color="#CCCCCC"> open an issue or</font>

582
00:27:32,919 --> 00:27:38,260
come discuss with me<font color="#E5E5E5"> we are</font><font color="#CCCCCC"> happy if</font>

583
00:27:35,799 --> 00:27:42,700
<font color="#CCCCCC">people try using</font><font color="#E5E5E5"> it because I think it's</font>

584
00:27:38,260 --> 00:27:45,640
a great<font color="#CCCCCC"> tool so what are we gonna do</font>

585
00:27:42,700 --> 00:27:47,830
next<font color="#CCCCCC"> first idea is to package</font><font color="#E5E5E5"> for big</font>

586
00:27:45,640 --> 00:27:50,200
Linux this<font color="#E5E5E5"> distribution</font><font color="#CCCCCC"> like Kali for</font>

587
00:27:47,830 --> 00:27:52,540
example for<font color="#E5E5E5"> pen testing Ubuntu we've</font>

588
00:27:50,200 --> 00:27:54,460
seen it it's already a package for Arch

589
00:27:52,540 --> 00:27:56,110
Linux which<font color="#E5E5E5"> is pretty good I haven't</font>

590
00:27:54,460 --> 00:27:59,830
<font color="#E5E5E5">done it so I found out the other day</font><font color="#CCCCCC"> so</font>

591
00:27:56,110 --> 00:28:01,928
that's nice<font color="#CCCCCC"> we want to increase the pool</font>

592
00:27:59,830 --> 00:28:03,639
of available modules<font color="#CCCCCC"> by getting the</font>

593
00:28:01,929 --> 00:28:06,730
community involved

594
00:28:03,640 --> 00:28:10,210
the idea is<font color="#E5E5E5"> to yeah get get more of</font>

595
00:28:06,730 --> 00:28:12,040
those modules<font color="#E5E5E5"> being implemented I'll</font>

596
00:28:10,210 --> 00:28:14,140
have to improve the documentation<font color="#CCCCCC"> it's</font>

597
00:28:12,040 --> 00:28:16,090
not the perfect task and<font color="#CCCCCC"> the</font><font color="#E5E5E5"> most</font>

598
00:28:14,140 --> 00:28:18,760
<font color="#E5E5E5">interesting one but I have to do that</font>

599
00:28:16,090 --> 00:28:21,610
<font color="#CCCCCC">too one of my wish would be to</font><font color="#E5E5E5"> pour it</font>

600
00:28:18,760 --> 00:28:24,820
to ipv6<font color="#CCCCCC"> it's not</font><font color="#E5E5E5"> under plan and I</font><font color="#CCCCCC"> don't</font>

601
00:28:21,610 --> 00:28:26,740
know if we'll do it<font color="#E5E5E5"> but I think it will</font>

602
00:28:24,820 --> 00:28:29,320
be a great challenge<font color="#E5E5E5"> and especially</font>

603
00:28:26,740 --> 00:28:32,980
<font color="#E5E5E5">since everything is moving towards ipv6</font>

604
00:28:29,320 --> 00:28:35,799
today<font color="#E5E5E5"> this this is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> kind of tool by by</font>

605
00:28:32,980 --> 00:28:39,640
using scaling that<font color="#E5E5E5"> could</font><font color="#CCCCCC"> allowed to do</font>

606
00:28:35,799 --> 00:28:42,879
large research on ipv6<font color="#E5E5E5"> and of course get</font>

607
00:28:39,640 --> 00:28:44,530
a fancy<font color="#CCCCCC"> logo</font><font color="#E5E5E5"> so if you have any idea</font>

608
00:28:42,880 --> 00:28:46,600
come talk to<font color="#E5E5E5"> me</font><font color="#CCCCCC"> I was thinking of a</font>

609
00:28:44,530 --> 00:28:47,110
<font color="#CCCCCC">scale</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> something but I</font><font color="#E5E5E5"> guess marketing</font>

610
00:28:46,600 --> 00:28:50,270
won't agree

611
00:28:47,110 --> 00:28:55,550
<font color="#E5E5E5">so with</font>

612
00:28:50,270 --> 00:28:58,220
so a little<font color="#E5E5E5"> summary so scanner is fast</font>

613
00:28:55,550 --> 00:29:00,200
<font color="#E5E5E5">as I've shown because it's distributed</font>

614
00:28:58,220 --> 00:29:01,940
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> flexible</font><font color="#CCCCCC"> so you're able to</font>

615
00:29:00,200 --> 00:29:03,950
implement<font color="#E5E5E5"> your own</font><font color="#CCCCCC"> fingerprinting</font><font color="#E5E5E5"> module</font>

616
00:29:01,940 --> 00:29:06,679
and<font color="#CCCCCC"> your output</font><font color="#E5E5E5"> modules to handle the</font>

617
00:29:03,950 --> 00:29:09,080
<font color="#CCCCCC">the</font><font color="#E5E5E5"> results are you want it to be</font><font color="#CCCCCC"> it's</font>

618
00:29:06,679 --> 00:29:14,480
open source<font color="#E5E5E5"> so it's free</font><font color="#CCCCCC"> you can get it</font>

619
00:29:09,080 --> 00:29:17,540
as it is<font color="#CCCCCC"> it</font><font color="#E5E5E5"> enters TCP UDP and SSL</font><font color="#CCCCCC"> and</font>

620
00:29:14,480 --> 00:29:21,020
is<font color="#CCCCCC"> able to target</font><font color="#E5E5E5"> IPS or even domains so</font>

621
00:29:17,540 --> 00:29:23,120
independently of both and it has very

622
00:29:21,020 --> 00:29:28,100
few dependencies because<font color="#CCCCCC"> only along is</font>

623
00:29:23,120 --> 00:29:33,409
required to run it so<font color="#E5E5E5"> yeah so that's</font><font color="#CCCCCC"> it</font>

624
00:29:28,100 --> 00:29:36,169
for me<font color="#CCCCCC"> I was fast I think I've put the</font>

625
00:29:33,410 --> 00:29:39,170
<font color="#E5E5E5">link to to the to our</font><font color="#CCCCCC"> github if you want</font>

626
00:29:36,170 --> 00:29:41,330
to try the project and<font color="#CCCCCC"> to our blog where</font>

627
00:29:39,170 --> 00:29:44,300
<font color="#E5E5E5">we publish some of our results</font><font color="#CCCCCC"> if you</font>

628
00:29:41,330 --> 00:29:46,699
want to go have a look and yeah<font color="#E5E5E5"> thank</font>

629
00:29:44,300 --> 00:29:49,100
you<font color="#CCCCCC"> for</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> attention and don't ask</font>

630
00:29:46,700 --> 00:29:58,810
tough questions

631
00:29:49,100 --> 00:29:58,810
[Applause]

632
00:29:59,040 --> 00:30:11,230
any question did you try to run it in a

633
00:30:09,010 --> 00:30:13,870
<font color="#E5E5E5">cloud and you know some cloud providers</font>

634
00:30:11,230 --> 00:30:17,290
but allow you to spin up some<font color="#E5E5E5"> VMs and do</font>

635
00:30:13,870 --> 00:30:19,750
<font color="#E5E5E5">scanning yeah I tried</font><font color="#CCCCCC"> it wasn't very</font>

636
00:30:17,290 --> 00:30:23,920
successful<font color="#E5E5E5"> because I get</font><font color="#CCCCCC"> I got a lot of</font>

637
00:30:19,750 --> 00:30:26,650
abuse yeah usually cloud providers<font color="#CCCCCC"> don't</font>

638
00:30:23,920 --> 00:30:30,400
like all those activities of scanning

639
00:30:26,650 --> 00:30:32,890
and so on<font color="#E5E5E5"> so you</font><font color="#CCCCCC"> have to check all those</font>

640
00:30:30,400 --> 00:30:34,990
<font color="#E5E5E5">little</font><font color="#CCCCCC"> chars at the end of what you</font><font color="#E5E5E5"> sign</font>

641
00:30:32,890 --> 00:30:38,380
<font color="#CCCCCC">know what you register for before doing</font>

642
00:30:34,990 --> 00:30:40,840
so I tried<font color="#E5E5E5"> it wasn't a success success</font>

643
00:30:38,380 --> 00:30:47,950
because I got blocked<font color="#E5E5E5"> but</font><font color="#CCCCCC"> I got a nice</font>

644
00:30:40,840 --> 00:30:52,060
<font color="#E5E5E5">slide for that you you can okay I'm</font>

645
00:30:47,950 --> 00:30:55,360
sorry<font color="#E5E5E5"> I'm not</font><font color="#CCCCCC"> a Windows user okay I'll</font>

646
00:30:52,060 --> 00:30:59,169
go<font color="#CCCCCC"> first through that you can</font><font color="#E5E5E5"> build your</font>

647
00:30:55,360 --> 00:31:01,479
<font color="#CCCCCC">own cloud and that is by simply getting</font>

648
00:30:59,170 --> 00:31:04,990
raspberry<font color="#E5E5E5"> PI's</font><font color="#CCCCCC"> and you could</font><font color="#E5E5E5"> run</font>

649
00:31:01,480 --> 00:31:06,580
<font color="#E5E5E5">scanners on different raspberry PI's in</font>

650
00:31:04,990 --> 00:31:11,500
Iraq for<font color="#E5E5E5"> example and you get your</font><font color="#CCCCCC"> own</font>

651
00:31:06,580 --> 00:31:15,070
cloud right since since you<font color="#E5E5E5"> were able</font><font color="#CCCCCC"> to</font>

652
00:31:11,500 --> 00:31:22,180
control<font color="#E5E5E5"> the number</font><font color="#CCCCCC"> of process</font><font color="#E5E5E5"> yeah but</font>

653
00:31:15,070 --> 00:31:25,439
as proof<font color="#E5E5E5"> Austin yeah the thing all right</font>

654
00:31:22,180 --> 00:31:25,440
<font color="#CCCCCC">any other</font><font color="#E5E5E5"> question</font>

655
00:31:32,679 --> 00:31:39,950
<font color="#CCCCCC">you</font><font color="#E5E5E5"> you are talking about TCP pulling</font>

656
00:31:36,320 --> 00:31:44,389
are using anything<font color="#E5E5E5"> similar to cowboy or</font>

657
00:31:39,950 --> 00:31:47,330
something<font color="#CCCCCC"> like that</font><font color="#E5E5E5"> - well - cowboy took</font>

658
00:31:44,389 --> 00:31:53,449
<font color="#E5E5E5">over she's</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> one very</font><font color="#CCCCCC"> unknown I mean</font>

659
00:31:47,330 --> 00:31:55,999
<font color="#E5E5E5">TCP pulling tool for TCP</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> similar</font>

660
00:31:53,450 --> 00:32:01,429
also<font color="#E5E5E5"> to</font><font color="#CCCCCC"> Moshe</font><font color="#E5E5E5"> web something like that</font>

661
00:31:55,999 --> 00:32:02,600
yeah no no nothing<font color="#E5E5E5"> yeah it's well known</font>

662
00:32:01,429 --> 00:32:05,840
things<font color="#CCCCCC"> in Everland</font>

663
00:32:02,600 --> 00:32:08,240
<font color="#E5E5E5">so what is it the vulnerability scanner</font>

664
00:32:05,840 --> 00:32:12,199
<font color="#E5E5E5">no no no it's not the venerable I'm</font>

665
00:32:08,240 --> 00:32:14,899
talking<font color="#CCCCCC"> about just the the part of a</font><font color="#E5E5E5"> TCP</font>

666
00:32:12,200 --> 00:32:17,869
liar<font color="#E5E5E5"> why we have to build everything</font>

667
00:32:14,899 --> 00:32:20,989
<font color="#E5E5E5">because there is already things already</font>

668
00:32:17,869 --> 00:32:23,480
<font color="#E5E5E5">develop it so</font><font color="#CCCCCC"> in term of</font><font color="#E5E5E5"> air long there</font>

669
00:32:20,990 --> 00:32:26,960
is<font color="#CCCCCC"> a lot of things done in</font><font color="#E5E5E5"> terms of TCP</font>

670
00:32:23,480 --> 00:32:27,559
<font color="#CCCCCC">oh okay</font><font color="#E5E5E5"> yeah this is why I'm asking the</font>

671
00:32:26,960 --> 00:32:30,169
<font color="#E5E5E5">questions</font>

672
00:32:27,559 --> 00:32:32,720
it's for me it's<font color="#CCCCCC"> exactly</font><font color="#E5E5E5"> 100 it's</font>

673
00:32:30,169 --> 00:32:36,980
similar<font color="#E5E5E5"> in</font><font color="#CCCCCC"> there the back end like one</font>

674
00:32:32,720 --> 00:32:40,690
you are<font color="#CCCCCC"> for example using actors or you</font>

675
00:32:36,980 --> 00:32:43,610
are scanning to do for example<font color="#CCCCCC"> there the</font>

676
00:32:40,690 --> 00:32:47,539
HTTP connections like so this this

677
00:32:43,610 --> 00:32:49,969
abstraction<font color="#CCCCCC"> layer no I've never used</font><font color="#E5E5E5"> it</font>

678
00:32:47,539 --> 00:32:52,429
<font color="#CCCCCC">and</font><font color="#E5E5E5"> I didn't even know I'll give it a</font>

679
00:32:49,970 --> 00:33:05,450
look<font color="#E5E5E5"> thank you</font><font color="#CCCCCC"> for the pointer</font><font color="#E5E5E5"> go boy</font>

680
00:32:52,429 --> 00:33:11,539
it's<font color="#E5E5E5"> okay no demo I don't want to break</font>

681
00:33:05,450 --> 00:33:13,909
the<font color="#E5E5E5"> club right yeah in fact I have two</font>

682
00:33:11,539 --> 00:33:17,869
<font color="#CCCCCC">questions</font><font color="#E5E5E5"> first</font><font color="#CCCCCC"> question</font><font color="#E5E5E5"> is did you give</font>

683
00:33:13,909 --> 00:33:20,389
a try<font color="#E5E5E5"> to mask</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> just not for this test</font>

684
00:33:17,869 --> 00:33:23,600
<font color="#E5E5E5">I've tested</font><font color="#CCCCCC"> mask and in the in the past</font>

685
00:33:20,389 --> 00:33:25,850
<font color="#E5E5E5">not here but mask and as far as I know</font>

686
00:33:23,600 --> 00:33:27,649
you<font color="#CCCCCC"> can provide a payload for</font>

687
00:33:25,850 --> 00:33:29,240
fingerprinting it was mostly<font color="#E5E5E5"> for</font>

688
00:33:27,649 --> 00:33:32,959
<font color="#CCCCCC">challenge</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> question was to understand</font>

689
00:33:29,240 --> 00:33:34,460
yeah if you try and why you didn't reuse

690
00:33:32,960 --> 00:33:37,159
<font color="#CCCCCC">-</font><font color="#E5E5E5"> okay</font>

691
00:33:34,460 --> 00:33:38,869
the thing is<font color="#E5E5E5"> mask and for me is mostly</font>

692
00:33:37,159 --> 00:33:41,250
oriented<font color="#E5E5E5"> to port scanning and not</font>

693
00:33:38,869 --> 00:33:44,428
fingerprinting and

694
00:33:41,250 --> 00:33:47,039
so this is the whole idea<font color="#E5E5E5"> had with</font>

695
00:33:44,429 --> 00:33:50,730
scripting if you have to always<font color="#E5E5E5"> provide</font>

696
00:33:47,039 --> 00:33:52,530
<font color="#E5E5E5">the</font><font color="#CCCCCC"> whole payload and stuff and do some</font>

697
00:33:50,730 --> 00:33:56,370
geeky stuff around<font color="#E5E5E5"> that</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> scrape the</font>

698
00:33:52,530 --> 00:33:58,320
whole thing<font color="#E5E5E5"> then it's if even after that</font>

699
00:33:56,370 --> 00:34:00,059
<font color="#CCCCCC">you're</font><font color="#E5E5E5"> not able to scale what's the</font>

700
00:33:58,320 --> 00:34:02,309
point of that<font color="#E5E5E5"> so this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> the whole idea</font>

701
00:34:00,059 --> 00:34:04,950
<font color="#E5E5E5">of</font><font color="#CCCCCC"> Scannell is to try to scale</font>

702
00:34:02,309 --> 00:34:07,440
horizontally so distributed on on

703
00:34:04,950 --> 00:34:09,389
<font color="#E5E5E5">minions and in the cloud</font><font color="#CCCCCC"> and my last</font>

704
00:34:07,440 --> 00:34:12,149
question<font color="#E5E5E5"> it was just to be sure that I</font>

705
00:34:09,389 --> 00:34:15,240
understood when<font color="#E5E5E5"> you mentioned that you</font>

706
00:34:12,149 --> 00:34:18,989
<font color="#CCCCCC">launched an actor every time you have a</font>

707
00:34:15,239 --> 00:34:24,178
target<font color="#E5E5E5"> for example</font><font color="#CCCCCC"> if you want</font><font color="#E5E5E5"> to scan</font>

708
00:34:18,989 --> 00:34:27,689
<font color="#E5E5E5">like</font><font color="#CCCCCC"> 65</font><font color="#E5E5E5"> key ports are you able to launch</font>

709
00:34:24,179 --> 00:34:30,599
an actor for<font color="#E5E5E5"> each spot I'm asking this</font>

710
00:34:27,690 --> 00:34:32,369
<font color="#E5E5E5">because you mentioned</font><font color="#CCCCCC"> blacklisting and I</font>

711
00:34:30,599 --> 00:34:35,460
think it might be<font color="#E5E5E5"> interesting to have</font>

712
00:34:32,369 --> 00:34:37,950
many actors not in<font color="#E5E5E5"> order not to be</font>

713
00:34:35,460 --> 00:34:40,980
blacklisted<font color="#E5E5E5"> I don't know if you have</font>

714
00:34:37,949 --> 00:34:43,408
this granularity<font color="#E5E5E5"> yes yes so you can</font>

715
00:34:40,980 --> 00:34:46,560
choose<font color="#E5E5E5"> the number</font><font color="#CCCCCC"> of the words our slide</font>

716
00:34:43,409 --> 00:34:49,379
for that<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> choose the number of</font>

717
00:34:46,560 --> 00:34:52,020
brokers so that means the number<font color="#CCCCCC"> of</font><font color="#E5E5E5"> VMs</font>

718
00:34:49,379 --> 00:34:54,598
<font color="#CCCCCC">so you can think</font><font color="#E5E5E5"> of a broker like a</font>

719
00:34:52,020 --> 00:34:58,020
process<font color="#E5E5E5"> on a VM or you can even think</font>

720
00:34:54,599 --> 00:34:59,790
multiple broker on on single VM and then

721
00:34:58,020 --> 00:35:02,220
for each worker you can<font color="#E5E5E5"> choose the</font>

722
00:34:59,790 --> 00:35:04,020
number<font color="#CCCCCC"> of actors is spinning for example</font>

723
00:35:02,220 --> 00:35:05,910
if you say<font color="#E5E5E5"> okay I want just only</font><font color="#CCCCCC"> one</font>

724
00:35:04,020 --> 00:35:08,339
<font color="#CCCCCC">hundred</font><font color="#E5E5E5"> parallel processes or</font>

725
00:35:05,910 --> 00:35:10,200
<font color="#E5E5E5">fingerprinting processes running then</font>

726
00:35:08,339 --> 00:35:14,820
you can provide<font color="#CCCCCC"> that as an</font><font color="#E5E5E5"> option and</font>

727
00:35:10,200 --> 00:35:16,259
you<font color="#CCCCCC"> can also not limit it limit it</font><font color="#E5E5E5"> but</font>

728
00:35:14,820 --> 00:35:17,910
the thing<font color="#CCCCCC"> is then</font><font color="#E5E5E5"> you'll break some</font>

729
00:35:16,260 --> 00:35:20,190
networks like<font color="#E5E5E5"> I've shown before</font><font color="#CCCCCC"> but yeah</font>

730
00:35:17,910 --> 00:35:22,770
you have<font color="#CCCCCC"> that granularity</font><font color="#E5E5E5"> and that's all</font>

731
00:35:20,190 --> 00:35:23,599
options you have<font color="#E5E5E5"> when when launching the</font>

732
00:35:22,770 --> 00:35:30,380
<font color="#E5E5E5">tool</font>

733
00:35:23,599 --> 00:35:30,380
yep<font color="#CCCCCC"> okay any question left</font>

734
00:35:34,470 --> 00:35:46,060
there is one there<font color="#CCCCCC"> is one actually just</font>

735
00:35:44,410 --> 00:35:49,020
a little<font color="#CCCCCC"> question</font><font color="#E5E5E5"> so everyone is</font>

736
00:35:46,060 --> 00:35:51,310
laughing because<font color="#CCCCCC"> we are working together</font>

737
00:35:49,020 --> 00:35:55,840
<font color="#CCCCCC">just</font><font color="#E5E5E5"> a little question</font><font color="#CCCCCC"> did you try to</font>

738
00:35:51,310 --> 00:35:59,320
run it on<font color="#E5E5E5"> the big big ass machine to see</font>

739
00:35:55,840 --> 00:36:01,570
how<font color="#E5E5E5"> good</font><font color="#CCCCCC"> it compares</font><font color="#E5E5E5"> on on a single note</font>

740
00:35:59,320 --> 00:36:03,520
compared to the other tools<font color="#CCCCCC"> you comfort</font>

741
00:36:01,570 --> 00:36:06,700
<font color="#E5E5E5">that's a good question</font>

742
00:36:03,520 --> 00:36:09,240
so I haven't<font color="#E5E5E5"> directly on this machine</font>

743
00:36:06,700 --> 00:36:12,069
<font color="#CCCCCC">there</font><font color="#E5E5E5"> but the thing is I've done is</font><font color="#CCCCCC"> I</font>

744
00:36:09,240 --> 00:36:14,439
experiment that using multiple brokers

745
00:36:12,070 --> 00:36:17,290
on a single VM or single<font color="#CCCCCC"> machine is</font>

746
00:36:14,440 --> 00:36:19,390
usually not good for performance<font color="#CCCCCC"> it was</font>

747
00:36:17,290 --> 00:36:22,180
better to<font color="#CCCCCC"> have a single broker and and</font>

748
00:36:19,390 --> 00:36:25,450
and double the actor instead<font color="#CCCCCC"> of</font><font color="#E5E5E5"> doubling</font>

749
00:36:22,180 --> 00:36:28,810
the the broker<font color="#E5E5E5"> and having that separated</font>

750
00:36:25,450 --> 00:36:30,220
in the<font color="#E5E5E5"> to process so that's from my</font>

751
00:36:28,810 --> 00:36:32,259
experience I<font color="#E5E5E5"> haven't tested on that</font>

752
00:36:30,220 --> 00:36:40,709
machines but yeah<font color="#E5E5E5"> you should definitely</font>

753
00:36:32,260 --> 00:36:40,710
<font color="#CCCCCC">use one broker per VM okay last question</font>

754
00:36:49,650 --> 00:36:55,510
well actually there are like three

755
00:36:51,940 --> 00:36:57,570
<font color="#CCCCCC">questions</font><font color="#E5E5E5"> first there is a there is a do</font>

756
00:36:55,510 --> 00:37:00,310
you have<font color="#E5E5E5"> any result that you can show</font>

757
00:36:57,570 --> 00:37:03,550
about<font color="#CCCCCC"> the fingerprinting</font><font color="#E5E5E5"> that you have</font>

758
00:37:00,310 --> 00:37:08,259
done<font color="#CCCCCC"> the second one is</font><font color="#E5E5E5"> that have you</font>

759
00:37:03,550 --> 00:37:10,119
<font color="#E5E5E5">been detected as do s generator</font><font color="#CCCCCC"> and the</font>

760
00:37:08,260 --> 00:37:13,840
third one have you been<font color="#CCCCCC"> contacted by</font>

761
00:37:10,119 --> 00:37:16,720
soda or any<font color="#E5E5E5"> other fingerprinting</font>

762
00:37:13,840 --> 00:37:19,930
searcher or using your stuff

763
00:37:16,720 --> 00:37:23,890
okay so first<font color="#E5E5E5"> question yeah we provide</font>

764
00:37:19,930 --> 00:37:27,819
<font color="#E5E5E5">our results in this blood maybe it's too</font>

765
00:37:23,890 --> 00:37:31,210
low<font color="#E5E5E5"> I got like a full page here</font><font color="#CCCCCC"> so yeah</font>

766
00:37:27,820 --> 00:37:32,980
if we publish something<font color="#E5E5E5"> it's older go</font>

767
00:37:31,210 --> 00:37:37,000
have a look we publish<font color="#CCCCCC"> laughs a lot of</font>

768
00:37:32,980 --> 00:37:38,770
<font color="#CCCCCC">results that was for</font><font color="#E5E5E5"> the first question</font>

769
00:37:37,000 --> 00:37:41,440
second one yeah of course we<font color="#E5E5E5"> get abuse</font>

770
00:37:38,770 --> 00:37:44,200
letters<font color="#CCCCCC"> this is</font><font color="#E5E5E5"> something we're used to</font>

771
00:37:41,440 --> 00:37:46,750
<font color="#E5E5E5">because when you perform port scanning</font>

772
00:37:44,200 --> 00:37:49,810
or fingerprinting<font color="#E5E5E5"> people get</font><font color="#CCCCCC"> angry so</font>

773
00:37:46,750 --> 00:37:51,340
yeah we do that<font color="#E5E5E5"> and we</font><font color="#CCCCCC"> usually answer a</font>

774
00:37:49,810 --> 00:37:55,150
<font color="#E5E5E5">person</font><font color="#CCCCCC"> into each person</font><font color="#E5E5E5"> that has</font>

775
00:37:51,340 --> 00:37:57,760
requested us<font color="#CCCCCC"> to stop or</font><font color="#E5E5E5"> that is not</font>

776
00:37:55,150 --> 00:38:00,640
happy<font color="#E5E5E5"> with what we do and last</font><font color="#CCCCCC"> question</font>

777
00:37:57,760 --> 00:38:02,800
was<font color="#E5E5E5"> how should I know we haven't been</font>

778
00:38:00,640 --> 00:38:07,629
<font color="#CCCCCC">connect contacted by shodhan or any of</font>

779
00:38:02,800 --> 00:38:11,160
those scanning platforms okay

780
00:38:07,630 --> 00:38:11,160
Thank You<font color="#CCCCCC"> Adrian</font><font color="#E5E5E5"> thank you</font>

