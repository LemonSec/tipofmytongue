1
00:00:04,460 --> 00:00:07,080
thank you very much for coming for this

2
00:00:07,080 --> 00:00:08,360
last rate that we will try to

3
00:00:08,360 --> 00:00:11,340
finish if possible in style with

4
00:00:11,340 --> 00:00:13,980
something interesting I hope to

5
00:00:13,980 --> 00:00:15,560
see some so

6
00:00:15,560 --> 00:00:19,140
yes many have asked me was

7
00:00:19,140 --> 00:00:21,439
very taken aback by the title

8
00:00:21,439 --> 00:00:24,119
well in fact if you  go see you

9
00:00:24,119 --> 00:00:25,439
will probably continue to write

10
00:00:25,439 --> 00:00:27,720
Frida scripts because it's a very

11
00:00:27,720 --> 00:00:31,740
very good tool but I did it on purpose in

12
00:00:31,740 --> 00:00:33,660
fact precisely so that you could

13
00:00:33,660 --> 00:00:36,180
comehere

14
00:00:36,180 --> 00:00:37,460
so

15
00:00:37,460 --> 00:00:40,500
some information can be presented

16
00:00:40,500 --> 00:00:42,239
about me so I work at

17
00:00:42,239 --> 00:00:44,700
Fortinet I am an antivirus researcher

18
00:00:44,700 --> 00:00:48,059
at Fortinet where I specialize in

19
00:00:48,059 --> 00:00:50,879
viruses for mobile phones globally,

20
00:00:50,879 --> 00:00:54,600
especially Android or viruses that are

21
00:00:54,600 --> 00:00:56,660
on connected objects, so

22
00:00:56,660 --> 00:01:00,059
I am also the organizer of a CTF

23
00:01:00,059 --> 00:01:02,039
called phone which will be relatively

24
00:01:02,039 --> 00:01:04,080
soon so December 9 in  less

25
00:01:04,080 --> 00:01:08,159
than a month in Sophia Antipolis and it is

26
00:01:08,159 --> 00:01:09,840
specialized precisely it is a CTF which

27
00:01:09,840 --> 00:01:11,960
is specialized in connected objects

28
00:01:11,960 --> 00:01:16,140
so always the same the same field if

29
00:01:16,140 --> 00:01:17,159
you want more information

30
00:01:17,159 --> 00:01:19,740
do not hesitate to come and see me after the

31
00:01:19,740 --> 00:01:21,960
conference  of course you will be

32
00:01:21,960 --> 00:01:25,919
welcome to this association

33
00:01:26,040 --> 00:01:28,080
so today we are not going to talk about that we

34
00:01:28,080 --> 00:01:31,080
are going to talk globally about

35
00:01:31,080 --> 00:01:33,659
malware viruses for Android

36
00:01:33,659 --> 00:01:37,140
and what viruses do in

37
00:01:37,140 --> 00:01:39,540
general to protect themselves against

38
00:01:39,540 --> 00:01:41,759
antivirus engineers like me or  in

39
00:01:41,759 --> 00:01:43,340
any case the antivirus researchers

40
00:01:43,340 --> 00:01:46,619
they do things that are obvious the

41
00:01:46,619 --> 00:01:49,560
most cassion and the packing we are going to talk about

42
00:01:49,560 --> 00:01:51,479
the two and how to manage the two

43
00:01:51,479 --> 00:01:53,540
to still manage to

44
00:01:53,540 --> 00:01:56,939
understand the functioning of the virus and

45
00:01:56,939 --> 00:01:58,799
one of the tools that is practical for that

46
00:01:58,799 --> 00:02:01,259
many of you I think

47
00:02:01,259 --> 00:02:05,119
already know it's Frida

48
00:02:06,719 --> 00:02:10,079
so the option

49
00:02:10,160 --> 00:02:12,720
there are several kinds of frustration

50
00:02:12,720 --> 00:02:15,360
we find in any case me these three

51
00:02:15,360 --> 00:02:17,819
kinds there in the current viruses for

52
00:02:17,819 --> 00:02:21,000
Android the first quite simply here

53
00:02:21,000 --> 00:02:22,860
you have so we  see my

54
00:02:22,860 --> 00:02:24,500
mouse pointer it's good

55
00:02:24,500 --> 00:02:28,560
for example a call to absolute get of

56
00:02:28,560 --> 00:02:30,720
pass it doesn't matter but at least it's a

57
00:02:30,720 --> 00:02:32,340
function name which is

58
00:02:32,340 --> 00:02:34,220
understandable and

59
00:02:34,220 --> 00:02:35,959
the caller will purposely

60
00:02:35,959 --> 00:02:38,400
encapsulate that in another method

61
00:02:38,400 --> 00:02:41,700
whose name is unintelligible there are

62
00:02:41,700 --> 00:02:43,379
also many who play with the

63
00:02:43,379 --> 00:02:44,780
characters

64
00:02:44,780 --> 00:02:48,560
we will say exotic korean

65
00:02:48,560 --> 00:02:52,160
full of tf8 really a little bit

66
00:02:52,160 --> 00:02:55,140
weird which also make it difficult

67
00:02:55,140 --> 00:02:58,680
to park classes anyway

68
00:02:58,680 --> 00:03:01,980
on european systems

69
00:03:01,980 --> 00:03:03,540
another way  obviously also to do is to

70
00:03:03,540 --> 00:03:06,000
use encryption

71
00:03:06,000 --> 00:03:08,940
this time all the

72
00:03:08,940 --> 00:03:13,400
character strings will be encrypted and you

73
00:03:13,400 --> 00:03:16,560
have to decipher them to understand

74
00:03:16,560 --> 00:03:18,840
what we are talking about in fact it is

75
00:03:18,840 --> 00:03:20,519
still easier to understand scene  of

76
00:03:20,519 --> 00:03:22,800
SMS only to understand something like this

77
00:03:22,800 --> 00:03:25,080
there and moreover for a little reminder if

78
00:03:25,080 --> 00:03:27,659
you followed the first conference

79
00:03:27,659 --> 00:03:30,900
of the conference there the first toc

80
00:03:30,900 --> 00:03:32,879
sorry of the conference on the

81
00:03:32,879 --> 00:03:35,159
printers one of the first things which

82
00:03:35,159 --> 00:03:37,620
made in particular in the firmware

83
00:03:37,620 --> 00:03:40,819
c  is to rename all the functions

84
00:03:40,819 --> 00:03:43,440
that were called by the famous

85
00:03:43,440 --> 00:03:46,860
log function to identify the names and

86
00:03:46,860 --> 00:03:48,540
automatically give a more intelligible name

87
00:03:48,540 --> 00:03:50,540


88
00:03:50,540 --> 00:03:52,680
to the functions otherwise we cannot

89
00:03:52,680 --> 00:03:54,180
actually reverse engineer

90
00:03:54,180 --> 00:03:55,920
it is really difficult with  names

91
00:03:55,920 --> 00:03:58,200
that mean nothing and finally the

92
00:03:58,200 --> 00:03:59,819
third technique that we also see and

93
00:03:59,819 --> 00:04:02,720
that you will see later in code

94
00:04:02,720 --> 00:04:05,959
is quite simply to

95
00:04:05,959 --> 00:04:08,340
voluntarily put structures either

96
00:04:08,340 --> 00:04:10,620
mathematical or algorithmic which

97
00:04:10,620 --> 00:04:13,080
are complicated or even

98
00:04:13,080 --> 00:04:15,979
useless so that's  is the junk code

99
00:04:15,979 --> 00:04:18,959
in addition to the opuscation you have

100
00:04:18,959 --> 00:04:20,820
another technique which is practical and

101
00:04:20,820 --> 00:04:22,320
practical so I too am

102
00:04:22,320 --> 00:04:24,500
really a little bit at the base but

103
00:04:24,500 --> 00:04:27,780
it is to be sure that we are

104
00:04:27,780 --> 00:04:30,979
all talking about  the same thing the packing

105
00:04:30,979 --> 00:04:33,780
I compare that a lot I like as an

106
00:04:33,780 --> 00:04:36,120
analogy the Christmas gift okay a

107
00:04:36,120 --> 00:04:39,180
gift in general what is

108
00:04:39,180 --> 00:04:41,340
interesting overall is what is

109
00:04:41,340 --> 00:04:42,479
inside but we only see

110
00:04:42,479 --> 00:04:45,300
the  gift wrapping so there what's

111
00:04:45,300 --> 00:04:47,759
in this box there then the

112
00:04:47,759 --> 00:04:49,199
picot the crocodile there it's the

113
00:04:49,199 --> 00:04:50,280
little character that I draw

114
00:04:50,280 --> 00:04:52,500
everywhere well he looks super happy

115
00:04:52,500 --> 00:04:53,759
but is it  that he is right to be

116
00:04:53,759 --> 00:04:55,320
happy because there could very well

117
00:04:55,320 --> 00:04:57,840
be a virus in this box that's

118
00:04:57,840 --> 00:04:59,639
exactly the packing you will

119
00:04:59,639 --> 00:05:01,440
see the packer but you will not

120
00:05:01,440 --> 00:05:03,600
see the contents which could very well be

121
00:05:03,600 --> 00:05:06,139
malicious

122
00:05:06,680 --> 00:05:08,600
then  that's the diplomatic slide

123
00:05:08,600 --> 00:05:10,740
it's just to tell you that good

124
00:05:10,740 --> 00:05:13,199
use of oculation and using

125
00:05:13,199 --> 00:05:15,780
packing does not necessarily imply being

126
00:05:15,780 --> 00:05:17,520
malicious we can use them for

127
00:05:17,520 --> 00:05:21,000
legitimate purposes but in my

128
00:05:21,000 --> 00:05:23,039
presentation I do not  I'm going to talk to you about

129
00:05:23,039 --> 00:05:26,160
Android malware viruses that are

130
00:05:26,160 --> 00:05:29,280
offended and or packages okay so I

131
00:05:29,280 --> 00:05:32,340
'm going to do a little bit of a show 4 and

132
00:05:32,340 --> 00:05:35,220
tell you here it's malicious thing

133
00:05:35,220 --> 00:05:37,080
thing etc it wouldn't necessarily be

134
00:05:37,080 --> 00:05:41,240
completely the case normally

135
00:05:42,199 --> 00:05:45,539
how do you  so an

136
00:05:45,539 --> 00:05:47,759
Android application works it is in an

137
00:05:47,759 --> 00:05:50,580
apk undride package extension file

138
00:05:50,580 --> 00:05:53,039
and inside that there is an

139
00:05:53,039 --> 00:05:57,660
executable point of exaluto when

140
00:05:57,660 --> 00:06:00,780
the application is packaged this Dex there is

141
00:06:00,780 --> 00:06:03,720
that of the packer so it  is the

142
00:06:03,720 --> 00:06:05,280
wrapping paper so something

143
00:06:05,280 --> 00:06:07,680
overall that doesn't reveal in any

144
00:06:07,680 --> 00:06:10,440
case how the virus works

145
00:06:10,440 --> 00:06:12,960
the packer what does basically there

146
00:06:12,960 --> 00:06:14,580
it's going to depend on each packer but it

147
00:06:14,580 --> 00:06:16,560
's going to pick up pieces left to

148
00:06:16,560 --> 00:06:19,919
right  pass this through a grinder here

149
00:06:19,919 --> 00:06:23,340
whose objective is to reconstruct the

150
00:06:23,340 --> 00:06:25,020
payload

151
00:06:25,020 --> 00:06:28,979
which is the executable of the payload

152
00:06:28,979 --> 00:06:31,680
okay how it's done it will

153
00:06:31,680 --> 00:06:33,600
depend on each packer each packer

154
00:06:33,600 --> 00:06:37,740
has its own tricks for a little bit

155
00:06:37,740 --> 00:06:40,020
to make it a little more complex

156
00:06:40,020 --> 00:06:41,880
a certain person who can take it

157
00:06:41,880 --> 00:06:43,139
several times take pieces from

158
00:06:43,139 --> 00:06:45,720
several places of the PéKa

159
00:06:45,720 --> 00:06:47,580
others who are going to use something

160
00:06:47,580 --> 00:06:49,319
and which is encrypted at a

161
00:06:49,319 --> 00:06:51,240
specific place others who are going to use

162
00:06:51,240 --> 00:06:53,400
steganography there is a little there is

163
00:06:53,400 --> 00:06:55,860
a lot of a lot of creativity we will

164
00:06:55,860 --> 00:06:57,259
say in

165
00:06:57,259 --> 00:07:00,180
this place there so there you have in the

166
00:07:00,180 --> 00:07:01,919
end something that is

167
00:07:01,919 --> 00:07:03,539
potentially more interesting and

168
00:07:03,539 --> 00:07:05,360
closer to what the Dex malware does in any case

169
00:07:05,360 --> 00:07:09,300
dumb that's just

170
00:07:09,300 --> 00:07:10,500
a file you have to load it

171
00:07:10,500 --> 00:07:12,720
dynamically so that's the

172
00:07:12,720 --> 00:07:14,880
final step if you want to run it you

173
00:07:14,880 --> 00:07:16,380
're going to have to load dynamically for

174
00:07:16,380 --> 00:07:18,600
that on Android there are

175
00:07:18,600 --> 00:07:20,819
classes called dexclas  which will

176
00:07:20,819 --> 00:07:22,440
allow you to dynamically change

177
00:07:22,440 --> 00:07:26,240
this file

178
00:07:27,800 --> 00:07:32,039
it is in my opinion obvious but I

179
00:07:32,039 --> 00:07:34,160
specify to them I often see people who

180
00:07:34,160 --> 00:07:37,460
send viruses to

181
00:07:37,460 --> 00:07:40,740
automatic analysis tools such as badef

182
00:07:40,740 --> 00:07:42,020
or what

183
00:07:42,020 --> 00:07:45,060
and they send in fact a virus which is

184
00:07:45,060 --> 00:07:47,460
package it's absolutely useless

185
00:07:47,460 --> 00:07:49,080
except that probably they hadn't

186
00:07:49,080 --> 00:07:50,160
seen that it was package because you

187
00:07:50,160 --> 00:07:52,680
will only see the analysis of the packer and

188
00:07:52,680 --> 00:07:56,160
not the analysis of the malware it's a bit

189
00:07:56,160 --> 00:07:58,319
obvious but I don't know it  there are

190
00:07:58,319 --> 00:08:01,220
still people who continue to do so

191
00:08:01,340 --> 00:08:03,900
so the way to do when you have

192
00:08:03,900 --> 00:08:06,419
malware that is packaged is precisely

193
00:08:06,419 --> 00:08:08,340
to use the most classic in any case

194
00:08:08,340 --> 00:08:10,740
it is to use Frida because Frida

195
00:08:10,740 --> 00:08:12,840
is a  tool that allows you to do

196
00:08:12,840 --> 00:08:16,080
dynamic instrumentation for Android

197
00:08:16,080 --> 00:08:18,319
and for others on other platforms

198
00:08:18,319 --> 00:08:20,580
so what are we going to want to do

199
00:08:20,580 --> 00:08:22,440
in this case if we have something

200
00:08:22,440 --> 00:08:25,680
that is packaged we are going to want to put  a

201
00:08:25,680 --> 00:08:29,060
look at d'exclas

202
00:08:29,180 --> 00:08:32,099
we will look a little bit in the

203
00:08:32,099 --> 00:08:35,580
Android code if in the documentation we see

204
00:08:35,580 --> 00:08:38,039
in fact that the first

205
00:08:38,039 --> 00:08:40,380
constructor field of d'exclas is precisely

206
00:08:40,380 --> 00:08:44,760
the path to the Dex towards the finally the

207
00:08:44,760 --> 00:08:45,779
text that  we are in the process of loading

208
00:08:45,779 --> 00:08:47,820
dynamically so the pelo of the load the

209
00:08:47,820 --> 00:08:52,200
payload so an interesting Rook

210
00:08:52,200 --> 00:08:54,779
to do and relatively simple is

211
00:08:54,779 --> 00:08:57,120
simply to display one of the

212
00:08:57,120 --> 00:08:57,899
first things to do is

213
00:08:57,899 --> 00:09:01,080
to display this variable there this

214
00:09:01,080 --> 00:09:03,360
parameter  there and then once it's

215
00:09:03,360 --> 00:09:04,860
displayed it will tell us well here is the

216
00:09:04,860 --> 00:09:06,420
deck what we are loading it

217
00:09:06,420 --> 00:09:08,940
is in such a place and then there you just have to

218
00:09:08,940 --> 00:09:11,339
go and retrieve it on the

219
00:09:11,339 --> 00:09:13,920
Android phone retrieve it and  then

220
00:09:13,920 --> 00:09:16,399
analyze it and there we normally analyze

221
00:09:16,399 --> 00:09:19,920
the malware directly

222
00:09:19,920 --> 00:09:21,200
so that's

223
00:09:21,200 --> 00:09:24,660
the classic methodology to do I

224
00:09:24,660 --> 00:09:26,160
just specify that well there is not

225
00:09:26,160 --> 00:09:28,680
always it's not always exclas which

226
00:09:28,680 --> 00:09:30,060
is used to load dynamically

227
00:09:30,060 --> 00:09:31,740
in fact there  has all classes

228
00:09:31,740 --> 00:09:34,260
derived from class the smell so you

229
00:09:34,260 --> 00:09:36,180
can if it doesn't work

230
00:09:36,180 --> 00:09:37,860
possibly it's because it

231
00:09:37,860 --> 00:09:39,440
uses another style gold classification

232
00:09:39,440 --> 00:09:42,060
A memory of exclassoda because

233
00:09:42,060 --> 00:09:43,980
classroder etc so either you use

234
00:09:43,980 --> 00:09:45,839
the correct one if you  know which one it is either

235
00:09:45,839 --> 00:09:47,820
you have to do all the

236
00:09:47,820 --> 00:09:49,980
classes the smell a little possible and

237
00:09:49,980 --> 00:09:51,660
imaginable which can be a

238
00:09:51,660 --> 00:09:54,800
little a little longer

239
00:09:55,760 --> 00:09:58,980
afterwards it will be necessary so for Frida that

240
00:09:58,980 --> 00:10:00,899
was the principle in practice  you

241
00:10:00,899 --> 00:10:03,620
have to write a script that has JavaScript

242
00:10:03,620 --> 00:10:07,019
here's one that works it's it's

243
00:10:07,019 --> 00:10:08,300
complete

244
00:10:08,300 --> 00:10:11,459
it's not too complicated so here we

245
00:10:11,459 --> 00:10:14,220
say with the dollar init that we hook the

246
00:10:14,220 --> 00:10:16,260
constructor of the class of exclasse

247
00:10:16,260 --> 00:10:19,500
the smell and then  there I actually display the

248
00:10:19,500 --> 00:10:22,500
first parameter so the path to the

249
00:10:22,500 --> 00:10:24,300
Dax and then after I tell it to

250
00:10:24,300 --> 00:10:25,800
continue doing what normally except

251
00:10:25,800 --> 00:10:28,260
the smell should do

252
00:10:28,260 --> 00:10:31,800
and that's something that

253
00:10:31,800 --> 00:10:34,279
should work and after  the

254
00:10:34,279 --> 00:10:37,019
principle of Frida is client server

255
00:10:37,019 --> 00:10:40,140
on your laptop you have the client on

256
00:10:40,140 --> 00:10:42,180
the Android phone you have the

257
00:10:42,180 --> 00:10:45,000
server you will tell him to send him

258
00:10:45,000 --> 00:10:49,800
the script here Frida server created

259
00:10:49,800 --> 00:10:52,279
inside so a Fed

260
00:10:52,279 --> 00:10:56,100
Frida and will load wholesale  we simplify

261
00:10:56,100 --> 00:10:58,320
a little bit but will load the script

262
00:10:58,320 --> 00:11:01,700
which has been compiled a little we will say

263
00:11:01,700 --> 00:11:04,440
in this fact there to sketch the

264
00:11:04,440 --> 00:11:08,839
functions that you have specified

265
00:11:09,300 --> 00:11:11,880
at the level of the behavior in fact each

266
00:11:11,880 --> 00:11:14,779
time we in the

267
00:11:14,779 --> 00:11:19,260
in the mansion finally or in  the saint

268
00:11:19,260 --> 00:11:21,540
Paul we encounter for example d'exclas

269
00:11:21,540 --> 00:11:25,160
the smell each time it will in fact

270
00:11:25,160 --> 00:11:28,079
stop the course of d'exclasse

271
00:11:28,079 --> 00:11:30,420
the normal smell and the past on what

272
00:11:30,420 --> 00:11:31,800
was written in the script so in particular

273
00:11:31,800 --> 00:11:35,459
a in my case display of  the

274
00:11:35,459 --> 00:11:39,540
expas variable and then back to the

275
00:11:39,540 --> 00:11:41,180
normal course of

276
00:11:41,180 --> 00:11:43,440
d'exclasso d'or and so I'm going to see

277
00:11:43,440 --> 00:11:45,660
in the console here as soon as it's called

278
00:11:45,660 --> 00:11:49,440
I'm going to see the path to my to my

279
00:11:49,440 --> 00:11:52,940
executable a package

280
00:11:54,440 --> 00:11:57,480
we can improve  and do that

281
00:11:57,480 --> 00:11:59,760
automatically, that is to say without having

282
00:11:59,760 --> 00:12:01,440
to write the script using

283
00:12:01,440 --> 00:12:03,839
Excalibur in particular, then the

284
00:12:03,839 --> 00:12:05,519
Excalibur will in fact give you, let's

285
00:12:05,519 --> 00:12:08,579
say, a nice fronten compared to Frida,

286
00:12:08,579 --> 00:12:11,640
you will have a whole

287
00:12:11,640 --> 00:12:14,279
graphical interface that gives you  lets ok the

288
00:12:14,279 --> 00:12:15,720
methods and classes that

289
00:12:15,720 --> 00:12:17,940
interest you so there in this case we

290
00:12:17,940 --> 00:12:20,459
go so it's a bit small probably

291
00:12:20,459 --> 00:12:22,620
for you but here it's really a

292
00:12:22,620 --> 00:12:24,240
screenshot where we are looping

293
00:12:24,240 --> 00:12:26,820
directly as soon as class  the smell

294
00:12:26,820 --> 00:12:28,560
and you press the button in particular

295
00:12:28,560 --> 00:12:30,839
here proband to say bah here I want

296
00:12:30,839 --> 00:12:33,779
ok this class there and see what there will

297
00:12:33,779 --> 00:12:35,700
be in input is output of this

298
00:12:35,700 --> 00:12:39,500
class it generates it does the script

299
00:12:39,500 --> 00:12:42,180
automatically for the class and if

300
00:12:42,180 --> 00:12:43,320
you don't like what is generated you

301
00:12:43,320 --> 00:12:45,360
can also even modify the script

302
00:12:45,360 --> 00:12:48,480
so it's very customizable let's say

303
00:12:48,480 --> 00:12:50,279
and there it's an example for example of what

304
00:12:50,279 --> 00:12:52,620
Excalibur comes out so there it was on

305
00:12:52,620 --> 00:12:55,680
a malware from  a simple Android alien

306
00:12:55,680 --> 00:12:58,920
and we saw that here there was exclas

307
00:12:58,920 --> 00:13:01,519
which was called on

308
00:13:01,519 --> 00:13:05,160
a whole path and which goes to a file

309
00:13:05,160 --> 00:13:09,120
which is called sounds Jason so

310
00:13:09,120 --> 00:13:10,800
it was not Jason that it was just

311
00:13:10,800 --> 00:13:14,600
to deceive  we're going to say the enemy us

312
00:13:14,600 --> 00:13:17,339
but in fact it's indeed an index okay

313
00:13:17,339 --> 00:13:20,000


314
00:13:20,399 --> 00:13:22,500
so that it allows us to do the same the

315
00:13:22,500 --> 00:13:25,139
same thing to easily find the

316
00:13:25,139 --> 00:13:28,260
pelode but this time without having to

317
00:13:28,260 --> 00:13:31,920
write the script Frida us  -even here

318
00:13:31,920 --> 00:13:35,300
it was a little bit automated

319
00:13:35,579 --> 00:13:36,800
so

320
00:13:36,800 --> 00:13:39,720
it goes well in which general and

321
00:13:39,720 --> 00:13:41,639
in very simple cases there are times

322
00:13:41,639 --> 00:13:43,680
when it's obviously more complicated otherwise

323
00:13:43,680 --> 00:13:45,800
we wouldn't be talking

324
00:13:45,800 --> 00:13:52,220
so especially if the Dex and

325
00:13:52,220 --> 00:13:55,380
packages finally

326
00:13:55,380 --> 00:13:57,839
dynamically loaded but from memory

327
00:13:57,839 --> 00:14:01,139
and not from a file well, we

328
00:14:01,139 --> 00:14:03,300
won't be able to have a dump of the PAF since we

329
00:14:03,300 --> 00:14:05,100
have bytes okay that's

330
00:14:05,100 --> 00:14:07,260
a first thing finally there are also

331
00:14:07,260 --> 00:14:10,200
some Packers who go  delete the

332
00:14:10,200 --> 00:14:13,200
ex file that was created so if you

333
00:14:13,200 --> 00:14:14,940
arrive too late well it's a shame

334
00:14:14,940 --> 00:14:18,180
but it has already been deleted

335
00:14:18,180 --> 00:14:19,740
so to avoid that there are tools

336
00:14:19,740 --> 00:14:22,139
in particular Frida Dext Dom which allow you

337
00:14:22,139 --> 00:14:23,940
to dodge everything that is  in memory

338
00:14:23,940 --> 00:14:26,459
all the decks which in memory it works

339
00:14:26,459 --> 00:14:28,500
quite well except that you will

340
00:14:28,500 --> 00:14:29,820
find yourself with all the same a whole

341
00:14:29,820 --> 00:14:31,740
panoply generally of ex and which will

342
00:14:31,740 --> 00:14:34,320
have to go and look for them a little bit to look at them

343
00:14:34,320 --> 00:14:36,600
all to finally find

344
00:14:36,600 --> 00:14:38,700
the one  which probably corresponds to the

345
00:14:38,700 --> 00:14:41,519
driver of your malware it's

346
00:14:41,519 --> 00:14:43,860
a little bit tedious perhaps we

347
00:14:43,860 --> 00:14:45,240
say to ourselves I say to myself well well we can do

348
00:14:45,240 --> 00:14:47,040
better we will be able to improve our

349
00:14:47,040 --> 00:14:49,019
Frida script

350
00:14:49,019 --> 00:14:50,959
and instead of just

351
00:14:50,959 --> 00:14:54,480
displaying the name for example  of the file we could

352
00:14:54,480 --> 00:14:56,820
rewrite it elsewhere the dumper in

353
00:14:56,820 --> 00:14:58,860
another file to secure the fact that

354
00:14:58,860 --> 00:15:01,139
if it has been erased we have already copied it

355
00:15:01,139 --> 00:15:03,959
so that's good so that's a

356
00:15:03,959 --> 00:15:06,480
way of doing it in Javascript  I

357
00:15:06,480 --> 00:15:07,980
'm not very strong in Javascript but

358
00:15:07,980 --> 00:15:11,000
overall it's done using SS

359
00:15:11,000 --> 00:15:13,620
except that FS no luck it's not

360
00:15:13,620 --> 00:15:17,160
supported natively by Frida there I

361
00:15:17,160 --> 00:15:19,920
asked the question a little to this designer

362
00:15:19,920 --> 00:15:21,720
of Frida who said yes well then  we

363
00:15:21,720 --> 00:15:23,940
can get there but by using Frida

364
00:15:23,940 --> 00:15:25,199
compil and then we modify the script a little bit

365
00:15:25,199 --> 00:15:26,579
so that's the script for

366
00:15:26,579 --> 00:15:27,959
example which we could use

367
00:15:27,959 --> 00:15:30,000
instead if it's not that Frida compil

368
00:15:30,000 --> 00:15:31,740
used it's a little bit  more

369
00:15:31,740 --> 00:15:35,639
annoying than the beast Frida no more Frida

370
00:15:35,639 --> 00:15:37,680
Server so here it can work

371
00:15:37,680 --> 00:15:40,079
another alternative is not to

372
00:15:40,079 --> 00:15:42,540
use the FS but to use file there

373
00:15:42,540 --> 00:15:43,980
are other classes that

374
00:15:43,980 --> 00:15:46,199
also work and if we want to do  the copy of file file

375
00:15:46,199 --> 00:15:49,579
bah use

376
00:15:49,680 --> 00:15:51,720
so we can we can manage to do what we

377
00:15:51,720 --> 00:15:53,720
want

378
00:15:53,720 --> 00:15:56,399
if it is only that you see only for

379
00:15:56,399 --> 00:15:58,620
a stupid question of arrival at Dom

380
00:15:58,620 --> 00:16:00,240
perfiché there is nothing more we will say

381
00:16:00,240 --> 00:16:02,880
basic when  even in programming I

382
00:16:02,880 --> 00:16:05,360
asked myself a lot of questions

383
00:16:05,360 --> 00:16:07,980
for not much, let's say so

384
00:16:07,980 --> 00:16:10,019
it's a bit of a shame all that because

385
00:16:10,019 --> 00:16:11,779
there is no

386
00:16:11,779 --> 00:16:14,820
official documentation on writing scripts

387
00:16:14,820 --> 00:16:18,120
on Frida so most of the time it  you

388
00:16:18,120 --> 00:16:19,800
have to go fish out what someone

389
00:16:19,800 --> 00:16:21,360
else in another script and then

390
00:16:21,360 --> 00:16:23,820
sting pieces and then a piece

391
00:16:23,820 --> 00:16:25,500
here a piece by sticking it a bit

392
00:16:25,500 --> 00:16:27,320
all that hope it works

393
00:16:27,320 --> 00:16:29,880
I still found here this link there

394
00:16:29,880 --> 00:16:31,740
which  is a guide to writing scripts

395
00:16:31,740 --> 00:16:34,019
which is quite nice so I

396
00:16:34,019 --> 00:16:35,220
will invite you to look at it if you are

397
00:16:35,220 --> 00:16:36,899
interested

398
00:16:36,899 --> 00:16:38,519
and I personally always have

399
00:16:38,519 --> 00:16:40,019
difficulty writing certain scripts

400
00:16:40,019 --> 00:16:42,000
Frida good so already I don't like I do

401
00:16:42,000 --> 00:16:43,560
n't like Javascript that c  it's true that it

402
00:16:43,560 --> 00:16:45,959
's a problem after a while

403
00:16:45,959 --> 00:16:48,380
when I see too many parentheses and

404
00:16:48,380 --> 00:16:50,579
opening etc it gives me buttons we

405
00:16:50,579 --> 00:16:54,420
'll say here but besides that there is

406
00:16:54,420 --> 00:16:57,720
always the problem of on Android

407
00:16:57,720 --> 00:17:01,019
it's  Java and Javascript finally and

408
00:17:01,019 --> 00:17:02,940
Frida sorry it's javascript so there

409
00:17:02,940 --> 00:17:04,799
will be a mapping problem

410
00:17:04,799 --> 00:17:07,020
between the team you have on one side for

411
00:17:07,020 --> 00:17:09,900
example a byt buffer well on the other

412
00:17:09,900 --> 00:17:11,459
side what is it  that you put in

413
00:17:11,459 --> 00:17:13,799
Javascript good it's not here you

414
00:17:13,799 --> 00:17:15,959
always have to do this translation there and

415
00:17:15,959 --> 00:17:17,699
that poses a bit of a problem another

416
00:17:17,699 --> 00:17:20,400
classic problem for the moment in the in

417
00:17:20,400 --> 00:17:23,099
the misfortunes you have packs

418
00:17:23,099 --> 00:17:25,439
you have packages the thing you have

419
00:17:25,439 --> 00:17:28,199
the payload  but you cookies

420
00:17:28,199 --> 00:17:29,580
something inside this

421
00:17:29,580 --> 00:17:31,020
dynamically loaded code

422
00:17:31,020 --> 00:17:32,640
try to do it you'll see

423
00:17:32,640 --> 00:17:35,640
it's not easy at all OK in

424
00:17:35,640 --> 00:17:37,860
dynamically loaded code it's done I

425
00:17:37,860 --> 00:17:38,700
got there but then I'm fine  followed

426
00:17:38,700 --> 00:17:41,640
there it was complicated finally last

427
00:17:41,640 --> 00:17:44,700
problem is that in Java and in lots

428
00:17:44,700 --> 00:17:47,460
of things so we write on Android there

429
00:17:47,460 --> 00:17:49,020
are lots of different ways to do

430
00:17:49,020 --> 00:17:51,179
more or less the same thing so if you

431
00:17:51,179 --> 00:17:52,080
want to communicate on the Internet in

432
00:17:52,080 --> 00:17:53,940
particular you go  to be able to use the

433
00:17:53,940 --> 00:17:55,320
URL class you can use the

434
00:17:55,320 --> 00:17:58,020
HTTP connection class you can

435
00:17:58,020 --> 00:18:00,299
use packages like au caillou

436
00:18:00,299 --> 00:18:03,900
voile etc if you actually want to write

437
00:18:03,900 --> 00:18:06,240
a hook that will look a little bit at

438
00:18:06,240 --> 00:18:07,740
all the ways to go on the internet

439
00:18:07,740 --> 00:18:10,020
you have to be ok all  these put

440
00:18:10,020 --> 00:18:13,200
all this different method and good

441
00:18:13,200 --> 00:18:17,059
bah it's good here it's good to do

442
00:18:17,720 --> 00:18:21,179
so once you have clearly explained the

443
00:18:21,179 --> 00:18:23,039
problem precisely here it is I'm going to

444
00:18:23,039 --> 00:18:24,600
offer you two solutions to

445
00:18:24,600 --> 00:18:29,220
remedy this the first solution is

446
00:18:29,220 --> 00:18:31,559
indeed  we're going to do without Frida

447
00:18:31,559 --> 00:18:33,179
I'm going to talk about it a little bit it's to

448
00:18:33,179 --> 00:18:34,620
do static King impact

449
00:18:34,620 --> 00:18:37,400
completely we don't use Frida anymore

450
00:18:37,400 --> 00:18:39,480
it's not fashionable because people

451
00:18:39,480 --> 00:18:41,400
generally like to use

452
00:18:41,400 --> 00:18:45,000
dynamic compounds rather  but

453
00:18:45,000 --> 00:18:47,820
when you work on malware it

454
00:18:47,820 --> 00:18:48,900
still has an

455
00:18:48,900 --> 00:18:50,880
undeniable advantage, it's the fact that you do

456
00:18:50,880 --> 00:18:54,539
n't run the virus on the machine and

457
00:18:54,539 --> 00:18:57,900
that's still appreciable

458
00:18:57,900 --> 00:18:59,760
because you never really know what

459
00:18:59,760 --> 00:19:00,900
can happen anyway  especially at the start

460
00:19:00,900 --> 00:19:02,400
of an analysis if you don't know exactly

461
00:19:02,400 --> 00:19:04,500
what is going on or you put yourself in a

462
00:19:04,500 --> 00:19:06,660
restricted environment but even then there

463
00:19:06,660 --> 00:19:10,200
can be unpleasant surprises

464
00:19:10,200 --> 00:19:12,179
the second way is where I

465
00:19:12,179 --> 00:19:14,700
cheated a little bit on the  title is you

466
00:19:14,700 --> 00:19:17,340
continue to use Frida but in

467
00:19:17,340 --> 00:19:18,840
fact you have someone else write the scripts

468
00:19:18,840 --> 00:19:21,179
basically by the tool and

469
00:19:21,179 --> 00:19:22,320
there are tools that allow you

470
00:19:22,320 --> 00:19:23,820
to do that and the tool that I  going to

471
00:19:23,820 --> 00:19:25,440
talk to you a lot today it's Medusa

472
00:19:25,440 --> 00:19:26,880
because we're a new one that I

473
00:19:26,880 --> 00:19:27,780
discovered and that I found quite

474
00:19:27,780 --> 00:19:30,080
nice

475
00:19:31,919 --> 00:19:32,840
so

476
00:19:32,840 --> 00:19:35,340
a static packing so I talked a lot

477
00:19:35,340 --> 00:19:36,539
I'm going to give you at least one

478
00:19:36,539 --> 00:19:39,480
of the demonstrations of  'one of a

479
00:19:39,480 --> 00:19:41,460
static packer where did I put it oh

480
00:19:41,460 --> 00:19:43,260
yes there you go

481
00:19:43,260 --> 00:19:46,140
so this is a project I did with

482
00:19:46,140 --> 00:19:47,179
some students

483
00:19:47,179 --> 00:19:49,740
where I asked them give pack a

484
00:19:49,740 --> 00:19:51,900
packer I called Jason packer

485
00:19:51,900 --> 00:19:53,400
because he hadn't finally I'm not going to

486
00:19:53,400 --> 00:19:57,140
find a particular name and so

487
00:19:57,140 --> 00:20:00,120
I made a little a little shortcut a

488
00:20:00,120 --> 00:20:02,059
pack and then well there you have to give him

489
00:20:02,059 --> 00:20:03,919
something, in

490
00:20:03,919 --> 00:20:08,340
particular the file which is already packed

491
00:20:08,340 --> 00:20:11,580
this virus there then this  virus there it's an

492
00:20:11,580 --> 00:20:14,160
instance of Android dianian it's a

493
00:20:14,160 --> 00:20:18,500
banking botnet on Android

494
00:20:21,419 --> 00:20:24,000
and hop it's done it's still finally

495
00:20:24,000 --> 00:20:25,860
me I find it great there frankly

496
00:20:25,860 --> 00:20:28,799
I won basically I come if it's the

497
00:20:28,799 --> 00:20:30,179
beginning of an analysis I have just gained

498
00:20:30,179 --> 00:20:33,900
40 minutes in a small execution it is

499
00:20:33,900 --> 00:20:36,539
all the same very very appreciable we are

500
00:20:36,539 --> 00:20:38,640
just going to check that it has all the same

501
00:20:38,640 --> 00:20:41,299
output index

502
00:20:41,820 --> 00:20:44,280
and it is indeed the case it is indeed a

503
00:20:44,280 --> 00:20:46,260
file of  ex then there I will give you

504
00:20:46,260 --> 00:20:47,940
the details we will not go to look

505
00:20:47,940 --> 00:20:49,200
inside to check that it is

506
00:20:49,200 --> 00:20:50,400
the peloda but I assure you it is

507
00:20:50,400 --> 00:20:53,700
the peloda and it works on all

508
00:20:53,700 --> 00:20:55,620
those who are packaged with the Jason

509
00:20:55,620 --> 00:20:57,020
packer

510
00:20:57,020 --> 00:20:59,640
if I go here I still have quite a

511
00:20:59,640 --> 00:21:01,260
few they are not all rigorously

512
00:21:01,260 --> 00:21:04,200
packed with this packer there I can

513
00:21:04,200 --> 00:21:06,900
try maybe this one at random I

514
00:21:06,900 --> 00:21:08,760
'm not sure if it's going to work but it's

515
00:21:08,760 --> 00:21:11,179
worth it

516
00:21:15,020 --> 00:21:16,799
I'm a little  not very playful because

517
00:21:16,799 --> 00:21:20,299
I've never tried this part here

518
00:21:21,059 --> 00:21:22,380
we'll see if my students have

519
00:21:22,380 --> 00:21:24,419
worked well it's good it was good

520
00:21:24,419 --> 00:21:28,679
there you go so it's practical if you want to

521
00:21:28,679 --> 00:21:32,460
have a little logs but in fact

522
00:21:32,460 --> 00:21:34,620
behind it  it's really something they

523
00:21:34,620 --> 00:21:38,220
implemented in Java and it's done

524
00:21:38,220 --> 00:21:40,100
like that

525
00:21:40,100 --> 00:21:42,860
the file do

526
00:21:42,860 --> 00:21:44,940
I play I put

527
00:21:44,940 --> 00:21:47,159
another one let's try

528
00:21:47,159 --> 00:21:50,940
like this stand we'll go is that one and

529
00:21:50,940 --> 00:21:51,960
then I think it's the worst idea for

530
00:21:51,960 --> 00:21:53,580
debugging we'll see if it doesn't work

531
00:21:53,580 --> 00:21:55,679
at least we'll see where it crashes and it

532
00:21:55,679 --> 00:21:58,020
just means that it's good it

533
00:21:58,020 --> 00:21:59,179
just means that

534
00:21:59,179 --> 00:22:01,620
it was well packaged with this packer there  and

535
00:22:01,620 --> 00:22:03,980
suddenly there are packages and here

536
00:22:03,980 --> 00:22:06,960
and there as you can see they are

537
00:22:06,960 --> 00:22:08,940
not

538
00:22:08,940 --> 00:22:11,419
I already have about

539
00:22:11,419 --> 00:22:13,380
fifteen in any case which are not only

540
00:22:13,380 --> 00:22:15,000
with this one maybe not all

541
00:22:15,000 --> 00:22:16,799
rigorously but

542
00:22:16,799 --> 00:22:20,840
that's good  save time

543
00:22:21,000 --> 00:22:23,580
so

544
00:22:23,580 --> 00:22:26,039
how do I do that the first

545
00:22:26,039 --> 00:22:27,539
thing obviously is at least to

546
00:22:27,539 --> 00:22:30,620
know a package manually

547
00:22:30,620 --> 00:22:33,539
Jason packer okay without using

548
00:22:33,539 --> 00:22:36,419
Frida since it's static so that's

549
00:22:36,419 --> 00:22:38,280
a part where you're going  do a

550
00:22:38,280 --> 00:22:40,679
first reverse engineering study and

551
00:22:40,679 --> 00:22:42,419
then take a good look at

552
00:22:42,419 --> 00:22:44,940
how the packer works then the

553
00:22:44,940 --> 00:22:46,700
second step is automation

554
00:22:46,700 --> 00:22:50,539
so we will look in Jason packer

555
00:22:50,539 --> 00:22:54,240
the pelode in fact it is hidden here it

556
00:22:54,240 --> 00:22:57,240
is hidden in the assets  PK in

557
00:22:57,240 --> 00:23:01,280
a file called in this case

558
00:23:01,280 --> 00:23:04,440
kqwason it's always a

559
00:23:04,440 --> 00:23:06,299
relatively short and random name and

560
00:23:06,299 --> 00:23:09,240
always a Jason dot extension

561
00:23:09,240 --> 00:23:11,159
so that's already quite easy to

562
00:23:11,159 --> 00:23:13,620
script we go we go to the

563
00:23:13,620 --> 00:23:15,480
A7 directory  unfortunately there may be

564
00:23:15,480 --> 00:23:16,860
other Jason files but we can

565
00:23:16,860 --> 00:23:18,900
quite easily script something

566
00:23:18,900 --> 00:23:20,600
that is quite short

567
00:23:20,600 --> 00:23:23,159
a bit random only letters and

568
00:23:23,159 --> 00:23:25,880
find like that the pelo to encrypt

569
00:23:25,880 --> 00:23:28,980
now you have to decrypt it

570
00:23:28,980 --> 00:23:30,900
so you will leave this room

571
00:23:30,900 --> 00:23:32,480
as you  you will have deciphered it

572
00:23:32,480 --> 00:23:36,360
no in fact it really does not look

573
00:23:36,360 --> 00:23:38,460
nice but you will see it is not that

574
00:23:38,460 --> 00:23:41,340
terrible the first thing to

575
00:23:41,340 --> 00:23:43,620
do is always to locate the junk

576
00:23:43,620 --> 00:23:46,020
code which is everywhere as soon as

577
00:23:46,020 --> 00:23:46,760
you  see

578
00:23:46,760 --> 00:23:49,260
mathematical constructions that are useless you

579
00:23:49,260 --> 00:23:51,659
have to remove them and then if you have

580
00:23:51,659 --> 00:23:54,000
variables that are used just

581
00:23:54,000 --> 00:23:55,679
on one line but never again after the

582
00:23:55,679 --> 00:23:57,179
same thing it's just there to

583
00:23:57,179 --> 00:24:00,659
annoy you so you have to remove it

584
00:24:00,659 --> 00:24:02,460
there already  still, we removed quite a bit of it

585
00:24:02,460 --> 00:24:04,200
because there so that's the whole

586
00:24:04,200 --> 00:24:07,380
algorithm that makes it possible to decipher this

587
00:24:07,380 --> 00:24:09,419
point Jason

588
00:24:09,419 --> 00:24:12,860
well here's what remains okay

589
00:24:12,860 --> 00:24:16,020
I would say come between 15 and 20 lines of

590
00:24:16,020 --> 00:24:19,260
code and there I think that  honestly you

591
00:24:19,260 --> 00:24:20,940
are all capable of doing

592
00:24:20,940 --> 00:24:24,140
it's 15 lines of code like that you

593
00:24:24,140 --> 00:24:26,280
may have to look a little bit bit

594
00:24:26,280 --> 00:24:28,140
by bit but it's not it's not

595
00:24:28,140 --> 00:24:29,600
monstrously difficult

596
00:24:29,600 --> 00:24:33,059
here it's the code after cleanup

597
00:24:33,059 --> 00:24:34,980
so  you see it actually takes about

598
00:24:34,980 --> 00:24:37,500
ten lines it's not

599
00:24:37,500 --> 00:24:39,140
high cryptography

600
00:24:39,140 --> 00:24:41,760
it's really a home-made algorithm

601
00:24:41,760 --> 00:24:45,200
based on X-Or and

602
00:24:45,200 --> 00:24:48,840
there is a key there that is used this

603
00:24:48,840 --> 00:24:50,940
key there in fact it's  is a key derived

604
00:24:50,940 --> 00:24:52,140
from a constant that we find

605
00:24:52,140 --> 00:24:53,940
elsewhere in the code

606
00:24:53,940 --> 00:24:56,880
so that too again to make our a

607
00:24:56,880 --> 00:24:58,220
static packer we will have to

608
00:24:58,220 --> 00:25:01,620
automatically find where this key is

609
00:25:01,620 --> 00:25:03,419
that we go a little further in the code

610
00:25:03,419 --> 00:25:05,940
finally we look sorry we look where

611
00:25:05,940 --> 00:25:08,760
it is called and we look where this

612
00:25:08,760 --> 00:25:11,580
famous key is extended was derived and

613
00:25:11,580 --> 00:25:12,780
we find it in fact quite easily

614
00:25:12,780 --> 00:25:14,280
in the same file in fact in the

615
00:25:14,280 --> 00:25:17,220
same class in there I put in small

616
00:25:17,220 --> 00:25:18,840
but you  you will have the slides after if you

617
00:25:18,840 --> 00:25:22,520
want to do it yourself you have the

618
00:25:22,520 --> 00:25:27,000
H of the sample and the name of the function which

619
00:25:27,000 --> 00:25:29,279
is really long and not very beautiful but

620
00:25:29,279 --> 00:25:30,600
it will allow you if you want to

621
00:25:30,600 --> 00:25:32,100
do it yourself to find it in the

622
00:25:32,100 --> 00:25:34,219
code

623
00:25:34,500 --> 00:25:35,580
once you have that you have

624
00:25:35,580 --> 00:25:36,779
all the steps you just need to

625
00:25:36,779 --> 00:25:40,860
automate so there you go it's

626
00:25:40,860 --> 00:25:42,480
reggase shots to

627
00:25:42,480 --> 00:25:46,919
automatically find in the files the

628
00:25:46,919 --> 00:25:49,200
portions of code that interest us

629
00:25:49,200 --> 00:25:50,840
retrieve the key

630
00:25:50,840 --> 00:25:54,539
and then take finally do  run

631
00:25:54,539 --> 00:25:56,760
the decryption algorithm and presto

632
00:25:56,760 --> 00:25:58,940
it's done so

633
00:25:58,940 --> 00:26:01,980
it's true that it requires some

634
00:26:01,980 --> 00:26:06,480
investment to do that but if

635
00:26:06,480 --> 00:26:09,000
you have a lot of malware that are

636
00:26:09,000 --> 00:26:11,279
packaged with the same packer I think

637
00:26:11,279 --> 00:26:12,960
you will agree that it is worth when  even

638
00:26:12,960 --> 00:26:14,580
frankly the blow of spending

639
00:26:14,580 --> 00:26:16,679
half a day doing that and then after

640
00:26:16,679 --> 00:26:19,559
winning each time in fact 40 minutes

641
00:26:19,559 --> 00:26:22,860
of packing

642
00:26:22,860 --> 00:26:24,840
that's

643
00:26:24,840 --> 00:26:27,299
after there are cases I agree or

644
00:26:27,299 --> 00:26:29,700
well you're not going to have as many

645
00:26:29,700 --> 00:26:32,820
malware that uses this packer there or quite

646
00:26:32,820 --> 00:26:33,960
simply you really don't have the

647
00:26:33,960 --> 00:26:36,360
time or don't want to make this

648
00:26:36,360 --> 00:26:39,440
preliminary effort so here we are going to use

649
00:26:39,440 --> 00:26:42,900
Medusa which is going to dynamically make a package

650
00:26:42,900 --> 00:26:43,760
for us

651
00:26:43,760 --> 00:26:47,279
the symbol that we are in the process

652
00:26:47,279 --> 00:26:50,220
of  'study to study so I'm going to

653
00:26:50,220 --> 00:26:52,260
give you a demo on that one if

654
00:26:52,260 --> 00:26:53,360
you followed

655
00:26:53,360 --> 00:26:57,020
but peregrinations on Twitter or

656
00:26:57,020 --> 00:26:58,860
Mastodon it didn't work at all on

657
00:26:58,860 --> 00:27:01,020
Monday but I managed to find a

658
00:27:01,020 --> 00:27:02,400
walkeroun

659
00:27:02,400 --> 00:27:04,620
so

660
00:27:04,620 --> 00:27:07,158
that's where

661
00:27:07,200 --> 00:27:10,620
it is  here it's marked Medusa so

662
00:27:10,620 --> 00:27:13,880
it didn't work at all on Monday because

663
00:27:13,880 --> 00:27:16,380
Medusa doesn't work with Python

664
00:27:16,380 --> 00:27:19,500
3.10 you absolutely need Python 3 points

665
00:27:19,500 --> 00:27:21,840
8 and I had a little problem making

666
00:27:21,840 --> 00:27:24,779
the two coexist on my machine I

667
00:27:24,779 --> 00:27:27,120
ended up  find the solution not very

668
00:27:27,120 --> 00:27:30,840
light but to make to use in

669
00:27:30,840 --> 00:27:33,059
docker

670
00:27:33,059 --> 00:27:35,940
so there you have

671
00:27:35,940 --> 00:27:38,880
an Android emulator the mansion it is there it is

672
00:27:38,880 --> 00:27:40,500
this one

673
00:27:40,500 --> 00:27:42,360
this application there and so I will

674
00:27:42,360 --> 00:27:45,380
tell Medusa of

675
00:27:45,380 --> 00:27:49,500
this linkey with my my emulator so

676
00:27:49,500 --> 00:27:52,440
it  there are two here then it tells me bah here

677
00:27:52,440 --> 00:27:54,720
you have good a certain number

678
00:27:54,720 --> 00:27:56,520
of applications which are installed as

679
00:27:56,520 --> 00:27:59,100
it is an emulator I only have the virus which

680
00:27:59,100 --> 00:28:01,200
is installed it is him

681
00:28:01,200 --> 00:28:03,539
and then there in fact Medusa comes with a

682
00:28:03,539 --> 00:28:06,600
collection of Frida script chips that

683
00:28:06,600 --> 00:28:08,640
are already made and the goal of the game is

684
00:28:08,640 --> 00:28:10,380
just to go look in these

685
00:28:10,380 --> 00:28:12,419
collections there and choose the scripts

686
00:28:12,419 --> 00:28:14,340
that interest you so what do

687
00:28:14,340 --> 00:28:18,059
I want to do me already what I  want to

688
00:28:18,059 --> 00:28:19,620
do is that I want to know when there

689
00:28:19,620 --> 00:28:22,620
is someone who is

690
00:28:22,620 --> 00:28:26,460
loading code dynamically so there I

691
00:28:26,460 --> 00:28:28,880
will search among the collection of

692
00:28:28,880 --> 00:28:31,620
scripts something that relates

693
00:28:31,620 --> 00:28:35,700
to Loding code for example and then there

694
00:28:35,700 --> 00:28:37,320
you  can look at each of the scripts

695
00:28:37,320 --> 00:28:41,159
by doing for example help que or

696
00:28:41,159 --> 00:28:46,340
louding and for example du

697
00:28:46,740 --> 00:28:49,200
you see a small explanation on what

698
00:28:49,200 --> 00:28:50,760
this script does there or otherwise you

699
00:28:50,760 --> 00:28:53,100
can go read the Frida script but

700
00:28:53,100 --> 00:28:54,720
there I know for admo's needs that

701
00:28:54,720 --> 00:28:55,740
this is the one i'm going to take while

702
00:28:55,740 --> 00:28:58,640


703
00:29:00,980 --> 00:29:05,039
damn here it is a first point

704
00:29:05,039 --> 00:29:06,900
the other thing i want to do is i

705
00:29:06,900 --> 00:29:08,840
want to know whenever the malware

706
00:29:08,840 --> 00:29:11,700
is doing HTTP communication i want to

707
00:29:11,700 --> 00:29:16,500
know at which url  so it goes there HTTP and

708
00:29:16,500 --> 00:29:18,360
I'm going to do that one and I'm going to

709
00:29:18,360 --> 00:29:20,580
use that one

710
00:29:20,580 --> 00:29:22,020
URI lodge

711
00:29:22,020 --> 00:29:25,020
httpk

712
00:29:25,620 --> 00:29:27,620
and finally

713
00:29:27,620 --> 00:29:30,840
this simple there like a lot it uses

714
00:29:30,840 --> 00:29:33,240
opuscation and it uses

715
00:29:33,240 --> 00:29:35,340
encryption for that encryption of

716
00:29:35,340 --> 00:29:37,140
encryption so I'm also going to put a

717
00:29:37,140 --> 00:29:39,600
Rook  on all the

718
00:29:39,600 --> 00:29:41,039
Roman numeral encryption functions that

719
00:29:41,039 --> 00:29:44,600
can be found so that for example

720
00:29:44,600 --> 00:29:47,520
a creep

721
00:29:47,520 --> 00:29:49,080
then you can put search and then

722
00:29:49,080 --> 00:29:51,059
any which is Word in fact

723
00:29:51,059 --> 00:29:53,760
after any keyword and it

724
00:29:53,760 --> 00:29:56,720
works

725
00:29:58,039 --> 00:30:00,240
here we go  you already have three it's not too much

726
00:30:00,240 --> 00:30:01,799
trouble to put

727
00:30:01,799 --> 00:30:03,000
dozens of them either because you'll see afterwards

728
00:30:03,000 --> 00:30:06,360
otherwise you have a lot of log afterwards you

729
00:30:06,360 --> 00:30:09,480
have to compile that so to put

730
00:30:09,480 --> 00:30:12,620
all three of them and then you have to launch

731
00:30:12,620 --> 00:30:15,240
the application  so there we can Reister

732
00:30:15,240 --> 00:30:16,740
to find out which ones it is then we

733
00:30:16,740 --> 00:30:20,100
run - zen and the application number

734
00:30:20,100 --> 00:30:23,179
here zero

735
00:30:23,179 --> 00:30:25,140
we'll see if it works it seems to

736
00:30:25,140 --> 00:30:26,520
work so there we see in any case the

737
00:30:26,520 --> 00:30:28,679
malware that s  is launched which does a lot

738
00:30:28,679 --> 00:30:30,980
of stuff and then here on the Médusa side

739
00:30:30,980 --> 00:30:34,260
we had a lot of logs so we're going to look at them so

740
00:30:34,260 --> 00:30:36,500


741
00:30:36,899 --> 00:30:39,240


742
00:30:39,240 --> 00:30:41,100
this first deck is not interesting

743
00:30:41,100 --> 00:30:43,740
it's a deck based on

744
00:30:43,740 --> 00:30:45,659
audience measurements etc. it's not  something

745
00:30:45,659 --> 00:30:48,299
that interests us in terms of malware

746
00:30:48,299 --> 00:30:50,039
on the other hand we see here that we have

747
00:30:50,039 --> 00:30:52,820
decryption and that the decryption

748
00:30:52,820 --> 00:30:55,860
produces this string there which is an

749
00:30:55,860 --> 00:30:59,159
OK URL so frankly already an

750
00:30:59,159 --> 00:31:01,140
encrypted URL for me it triggers all the

751
00:31:01,140 --> 00:31:03,000
warnings there are  something suspicious is

752
00:31:03,000 --> 00:31:06,080
happening what here

753
00:31:06,679 --> 00:31:10,799
we see that we are going to this url there

754
00:31:10,799 --> 00:31:12,600
after there are a lot of things to go through

755
00:31:12,600 --> 00:31:14,700
because everything that is apploving etc

756
00:31:14,700 --> 00:31:18,960
if it is an advertising SDK if I am

757
00:31:18,960 --> 00:31:21,320
not mistaken

758
00:31:27,120 --> 00:31:29,460
here we still have decryption and we

759
00:31:29,460 --> 00:31:31,440
end up with the spring which is called get

760
00:31:31,440 --> 00:31:33,000
class Slugger so there it is clearly

761
00:31:33,000 --> 00:31:35,059
desobuse to hide who

762
00:31:35,059 --> 00:31:37,320
we are going to do something with that we

763
00:31:37,320 --> 00:31:41,100
also see that there is someone there  one who

764
00:31:41,100 --> 00:31:44,960
therefore called PAF the slowder so it's

765
00:31:44,960 --> 00:31:48,179
dynamic loading of code on this

766
00:31:48,179 --> 00:31:50,399
file there

767
00:31:50,399 --> 00:31:54,419
9 okay we tamed it in case it

768
00:31:54,419 --> 00:31:56,460
is erased afterwards we will find it

769
00:31:56,460 --> 00:31:59,279
on our phone finally on our

770
00:31:59,279 --> 00:32:02,760
emulator whose dump 2 we  continue

771
00:32:02,760 --> 00:32:05,580
a little further down there we see that we are

772
00:32:05,580 --> 00:32:07,260
deciphering something called

773
00:32:07,260 --> 00:32:11,100
the other class it promises something

774
00:32:11,100 --> 00:32:14,240
called sick

775
00:32:14,700 --> 00:32:16,740
something called melody here

776
00:32:16,740 --> 00:32:20,220
we are going to seduce there number you are going to see

777
00:32:20,220 --> 00:32:22,620
a little  after and then there we

778
00:32:22,620 --> 00:32:24,799
dynamically load a file called

779
00:32:24,799 --> 00:32:27,539
and we domf sorry we dynamically load

780
00:32:27,539 --> 00:32:30,179
so probably sorry we go to this

781
00:32:30,179 --> 00:32:33,120
url there and we dynamically dump it we

782
00:32:33,120 --> 00:32:35,279
dynamically search for the content that has

783
00:32:35,279 --> 00:32:37,320
been dumped in this file

784
00:32:37,320 --> 00:32:39,600
there we  save again then we see

785
00:32:39,600 --> 00:32:41,220
that there are still lots finally there are

786
00:32:41,220 --> 00:32:42,539
lots of dynamic loading of

787
00:32:42,539 --> 00:32:45,899
different Aix again this one there we

788
00:32:45,899 --> 00:32:48,659
go to another URL again we write that

789
00:32:48,659 --> 00:32:50,460
in a file called Yang and there

790
00:32:50,460 --> 00:32:52,760
we  to duplicate if ever it is erased

791
00:32:52,760 --> 00:32:54,960
I think that can be all we

792
00:32:54,960 --> 00:32:57,960
still go to a few other URLs

793
00:32:57,960 --> 00:33:01,320
so here we are only with Medusa we know

794
00:33:01,320 --> 00:33:03,299
that there have been

795
00:33:03,299 --> 00:33:04,620
several

796
00:33:04,620 --> 00:33:07,100
dynamic loadings of

797
00:33:07,100 --> 00:33:12,120
the Aix executable  poof

798
00:33:12,539 --> 00:33:15,179
here and we know how worn it is

799
00:33:15,179 --> 00:33:17,100
going so here we still

800
00:33:17,100 --> 00:33:20,000
saved a lot of time on the

801
00:33:20,000 --> 00:33:24,559
Rivers engineering of the simple

802
00:33:26,039 --> 00:33:27,899
so there we will see a little

803
00:33:27,899 --> 00:33:29,880
more clearly what happened

804
00:33:29,880 --> 00:33:31,860
what  'we saw precisely in the

805
00:33:31,860 --> 00:33:35,179
log lines of the application

806
00:33:35,179 --> 00:33:40,140
so the first packer contacted a

807
00:33:40,140 --> 00:33:42,899
server we saw this URL there which was

808
00:33:42,899 --> 00:33:47,880
decrypted opusqués of at startup it

809
00:33:47,880 --> 00:33:50,580
writes in a file called nine

810
00:33:50,580 --> 00:33:53,580
which is in fact not  index but a jars

811
00:33:53,580 --> 00:33:56,519
and there so it was not yesterday with the

812
00:33:56,519 --> 00:33:57,899
slodor it's an error in my slide

813
00:33:57,899 --> 00:33:59,760
it's not classy the smell that was

814
00:33:59,760 --> 00:34:02,519
used we loaded it dynamically and

815
00:34:02,519 --> 00:34:05,039
we called inside  this

816
00:34:05,039 --> 00:34:07,919
class there if who and melody

817
00:34:07,919 --> 00:34:10,739
that was the first pilot this first

818
00:34:10,739 --> 00:34:13,460
pelode he himself still makes

819
00:34:13,460 --> 00:34:16,739
a call to another server he

820
00:34:16,739 --> 00:34:19,500
calls it so call back cycle and then that

821
00:34:19,500 --> 00:34:21,000
too again there is a

822
00:34:21,000 --> 00:34:23,159
dynamic loading of cycle and  there we call

823
00:34:23,159 --> 00:34:24,719
another method to continue

824
00:34:24,719 --> 00:34:29,118
this is number 2

825
00:34:29,219 --> 00:34:31,739
they are having fun anyway here we

826
00:34:31,739 --> 00:34:34,020
do a third one we call

827
00:34:34,020 --> 00:34:35,099
on a third

828
00:34:35,099 --> 00:34:37,800
URL hop we give that in another

829
00:34:37,800 --> 00:34:39,960
file and it's still  not finished

830
00:34:39,960 --> 00:34:42,239
because it's bike 3 but there's

831
00:34:42,239 --> 00:34:44,879
still a fourth which still goes to

832
00:34:44,879 --> 00:34:46,918
another server it's still domping

833
00:34:46,918 --> 00:34:49,080
in a file we're still doing a little

834
00:34:49,080 --> 00:34:52,320
bit of dynamic loading there this one actually by the

835
00:34:52,320 --> 00:34:54,418
way  it calls

836
00:34:54,418 --> 00:34:56,879
Facebook functions it's not really that

837
00:34:56,879 --> 00:34:58,380
pelo from there it's not really malicious

838
00:34:58,380 --> 00:34:59,700
it's more a tool than anything else

839
00:34:59,700 --> 00:35:01,560
while pelude 1 2 and 3 are

840
00:35:01,560 --> 00:35:05,099
malicious here and in fact besides depending on

841
00:35:05,099 --> 00:35:07,140
the platform we recover

842
00:35:07,140 --> 00:35:10,079
either one type of pelod or another

843
00:35:10,079 --> 00:35:12,480
type of pelote so we have a pelo of 4A

844
00:35:12,480 --> 00:35:14,220
and a pelote 4B

845
00:35:14,220 --> 00:35:16,440
so there for this family of malware

846
00:35:16,440 --> 00:35:19,040
which is also extremely prolific

847
00:35:19,040 --> 00:35:22,500
we have four drivers nested

848
00:35:22,500 --> 00:35:25,740
in each other  others which are packages so that

849
00:35:25,740 --> 00:35:27,300
's what we commonly see

850
00:35:27,300 --> 00:35:31,820
unfortunately at the analysis

851
00:35:32,040 --> 00:35:34,640
at the level of the code itself

852
00:35:34,640 --> 00:35:37,079
I will not go completely into the details

853
00:35:37,079 --> 00:35:40,280
so as not to completely put you to sleep but

854
00:35:40,280 --> 00:35:43,800
in fact it is still readable  see

855
00:35:43,800 --> 00:35:46,619
here that it's the opusque string that

856
00:35:46,619 --> 00:35:49,560
corresponds to the URL the desubscription

857
00:35:49,560 --> 00:35:51,900
it's a little bass kick 64 then

858
00:35:51,900 --> 00:35:57,300
after that some PBE MD5 with des so there

859
00:35:57,300 --> 00:35:59,940
's both a key and a salt and

860
00:35:59,940 --> 00:36:01,800
once  that it's decrypted and well we

861
00:36:01,800 --> 00:36:02,720
download

862
00:36:02,720 --> 00:36:04,280
the application

863
00:36:04,280 --> 00:36:07,380
which point to this URL

864
00:36:07,380 --> 00:36:09,900
for dynamic loading

865
00:36:09,900 --> 00:36:12,480
that's fine it's not too complicated we

866
00:36:12,480 --> 00:36:15,240
recover a breakage the smell my moment

867
00:36:15,240 --> 00:36:18,060
once we have that there we  can

868
00:36:18,060 --> 00:36:20,220
load the class that interests us

869
00:36:20,220 --> 00:36:22,440
then the method that interests us and

870
00:36:22,440 --> 00:36:24,720
then that's

871
00:36:24,720 --> 00:36:27,780
classic reflexivity in Java we call the method

872
00:36:27,780 --> 00:36:31,560
of the class of the given class

873
00:36:31,560 --> 00:36:33,119
in the code it's slightly more

874
00:36:33,119 --> 00:36:35,579
complicated whatever that is  is code that

875
00:36:35,579 --> 00:36:36,780
I renamed because it was even

876
00:36:36,780 --> 00:36:39,480
less clear at startup but we can see

877
00:36:39,480 --> 00:36:43,140
here the famous opus string which is

878
00:36:43,140 --> 00:36:46,579
for gate class slugger there they do a little

879
00:36:46,579 --> 00:36:52,740
there here it is the call to get class

880
00:36:52,740 --> 00:36:56,520
Slugger  the invocation of the method

881
00:36:56,520 --> 00:37:00,000
after as we said we recover a

882
00:37:00,000 --> 00:37:02,220
break the smell and we leave your sign a

883
00:37:02,220 --> 00:37:05,339
little lower here there it's their brick

884
00:37:05,339 --> 00:37:07,680
a little lower it's basically it's for

885
00:37:07,680 --> 00:37:09,300
not  lose the pointers to the

886
00:37:09,300 --> 00:37:10,920
methods so they are made an array

887
00:37:10,920 --> 00:37:14,119
to retrieve them

888
00:37:14,520 --> 00:37:17,460
and then well we are going to load we are going to

889
00:37:17,460 --> 00:37:18,960
retrieve the method the other class we are

890
00:37:18,960 --> 00:37:22,020
going to retrieve the name of the class sick

891
00:37:22,020 --> 00:37:24,359
so that's this swing there that is

892
00:37:24,359 --> 00:37:26,760
opusquée and the name of the method is

893
00:37:26,760 --> 00:37:28,740
the one that is offended and then we

894
00:37:28,740 --> 00:37:31,680
call in the other so that's

895
00:37:31,680 --> 00:37:35,400
very illegible to read even if in

896
00:37:35,400 --> 00:37:37,500
fact algorithmically speaking it's

897
00:37:37,500 --> 00:37:38,839
quite quite

898
00:37:38,839 --> 00:37:42,680
well done step by step  so

899
00:37:42,680 --> 00:37:46,920
that's it was kind of the

900
00:37:46,920 --> 00:37:49,800
conclusion I would have to make is if

901
00:37:49,800 --> 00:37:51,119
you have the time and you have

902
00:37:51,119 --> 00:37:54,180
a lot of samples that use the same

903
00:37:54,180 --> 00:37:56,460
packer think above all about doing

904
00:37:56,460 --> 00:37:58,320
something static because you're going to

905
00:37:58,320 --> 00:38:00,480
save a lot of time afterwards if

906
00:38:00,480 --> 00:38:02,420
you don't have time to do that

907
00:38:02,420 --> 00:38:06,660
Medusa and frankly a tool that

908
00:38:06,660 --> 00:38:08,520
I found nice that allows you

909
00:38:08,520 --> 00:38:11,700
not to use not to write

910
00:38:11,700 --> 00:38:13,200
the scripts yourself and therefore to save

911
00:38:13,200 --> 00:38:16,320
this time but to move forward a little more

912
00:38:16,320 --> 00:38:18,200
quickly in your analysis

913
00:38:18,200 --> 00:38:21,540
knowing that well it saves us from

914
00:38:21,540 --> 00:38:24,359
wasting time this is a link to

915
00:38:24,359 --> 00:38:28,980
Medusa this is a link to a

916
00:38:28,980 --> 00:38:30,960
Python script that I write which  allow Anne

917
00:38:30,960 --> 00:38:33,660
package this famous Jason and packer then

918
00:38:33,660 --> 00:38:34,980
that's another article that I had

919
00:38:34,980 --> 00:38:36,420
written

920
00:38:36,420 --> 00:38:39,420
on the subject

921
00:38:39,420 --> 00:38:41,220
here so thank you in particular to my

922
00:38:41,220 --> 00:38:43,020
students to others and then especially to

923
00:38:43,020 --> 00:38:45,839
blackalps for inviting me to speak and

924
00:38:45,839 --> 00:38:48,240
here it is  that's all I don't know if we have

925
00:38:48,240 --> 00:38:50,779
time for questions

926
00:38:57,980 --> 00:39:00,000
thank you very much for this great

927
00:39:00,000 --> 00:39:02,579
presentation we have time for

928
00:39:02,579 --> 00:39:03,780
about 5 minutes of questions if ever

929
00:39:03,780 --> 00:39:05,460
are there any questions in the

930
00:39:05,460 --> 00:39:07,579
room

931
00:39:11,160 --> 00:39:13,500
thank you very much  for the presentation I

932
00:39:13,500 --> 00:39:15,119
just have a small question about the tool

933
00:39:15,119 --> 00:39:18,240
so on Medusa you show for example

934
00:39:18,240 --> 00:39:21,119
that there was a way to Hook all the

935
00:39:21,119 --> 00:39:22,920
calls all the calls from the RL so they

936
00:39:22,920 --> 00:39:25,619
present a lot of a lot of

937
00:39:25,619 --> 00:39:27,119
different modules  'there is a way to

938
00:39:27,119 --> 00:39:28,920
activate them all at once,

939
00:39:28,920 --> 00:39:29,940


940
00:39:29,940 --> 00:39:31,859
for example, is there one that is more global than the others?

941
00:39:31,859 --> 00:39:34,260


942
00:39:34,260 --> 00:39:35,900


943
00:39:35,900 --> 00:39:38,700
a lot at a time is there a

944
00:39:38,700 --> 00:39:40,380
way to

945
00:39:40,380 --> 00:39:43,079
finally or who is easily all

946
00:39:43,079 --> 00:39:45,960
calls to URLs or

947
00:39:45,960 --> 00:39:49,500
something at once without activating them all one

948
00:39:49,500 --> 00:39:51,859
by one

949
00:39:51,920 --> 00:39:55,560
there are several things  this is

950
00:39:55,560 --> 00:39:58,020
the name in quotes that is given to a

951
00:39:58,020 --> 00:40:00,960
Frida script so each Frida script

952
00:40:00,960 --> 00:40:02,400
can possibly bite into

953
00:40:02,400 --> 00:40:04,380
several things and

954
00:40:04,380 --> 00:40:07,680
therefore finally including more than several calls

955
00:40:07,680 --> 00:40:10,440
that allow you to go to various

956
00:40:10,440 --> 00:40:13,619
URLs so only one  could do anything

957
00:40:13,619 --> 00:40:16,020
you want in this way and

958
00:40:16,020 --> 00:40:17,339
in these cases for example there are

959
00:40:17,339 --> 00:40:19,940
some that can be redundant

960
00:40:19,940 --> 00:40:22,200
in there well there I think he left them

961
00:40:22,200 --> 00:40:25,320
otherwise I never tried and I do

962
00:40:25,320 --> 00:40:26,760
n't know if  it works for example to

963
00:40:26,760 --> 00:40:29,579
do that put a star no he does

964
00:40:29,579 --> 00:40:32,160
n't know so you will have to manually

965
00:40:32,160 --> 00:40:33,440
and

966
00:40:33,440 --> 00:40:36,440
specify each

967
00:40:36,440 --> 00:40:40,880
chapscript you want afterwards it's not

968
00:40:40,880 --> 00:40:45,839
it's not very very complicated to change that

969
00:40:45,839 --> 00:40:48,619
a little bit so it's in

970
00:40:48,619 --> 00:40:52,920
library I believe not

971
00:40:54,680 --> 00:40:57,420
in module here they are in fact

972
00:40:57,420 --> 00:41:00,500
classified in module so there it will be

973
00:41:00,500 --> 00:41:03,060
HTTP communication and they are all

974
00:41:03,060 --> 00:41:07,500
listed there and if we are going to see just one of them

975
00:41:07,500 --> 00:41:09,599
the beginning it is just really for

976
00:41:09,599 --> 00:41:11,339
the explanation of what does  the script

977
00:41:11,339 --> 00:41:13,260
and after it is the freeda script itself

978
00:41:13,260 --> 00:41:16,619
so you can take a piece of it

979
00:41:16,619 --> 00:41:18,720
from there a piece from the other create

980
00:41:18,720 --> 00:41:20,460
another file add it and you

981
00:41:20,460 --> 00:41:22,560
will see it appear in the list of

982
00:41:22,560 --> 00:41:24,839
Medusa scripts

983
00:41:24,839 --> 00:41:27,240
thank you very much we have

984
00:41:27,240 --> 00:41:28,380
had time for one last

985
00:41:28,380 --> 00:41:30,060
little question if anyone has a

986
00:41:30,060 --> 00:41:32,599
question there

987
00:41:38,240 --> 00:41:41,900
thank you very much for the Talk

988
00:41:41,900 --> 00:41:45,599
in case of a static packer do

989
00:41:45,599 --> 00:41:47,280
the Packers they leave a

990
00:41:47,280 --> 00:41:49,339
specific signature like you know

991
00:41:49,339 --> 00:41:52,339
what kind of packer 7 to

992
00:41:52,339 --> 00:41:55,260
develop  in the end the good

993
00:41:55,260 --> 00:41:56,460
static heart for example there you

994
00:41:56,460 --> 00:41:58,579
presented the Jason how you can

995
00:41:58,579 --> 00:42:03,300
be sure that an apk will finally contain

996
00:42:03,300 --> 00:42:05,460
the text will be contained with this

997
00:42:05,460 --> 00:42:08,400
specific packer yes then that's a good

998
00:42:08,400 --> 00:42:12,020
question there is there isn't really

999
00:42:12,020 --> 00:42:15,060
good there is no Magic as in a

1000
00:42:15,060 --> 00:42:18,599
thread to say this is index this is an

1001
00:42:18,599 --> 00:42:20,520
elf this etc there is not something

1002
00:42:20,520 --> 00:42:23,339
that will say this is packaged by Jason

1003
00:42:23,339 --> 00:42:26,720
packer there is possibly still

1004
00:42:26,720 --> 00:42:31,160
the tool that is  call apk id

1005
00:42:31,200 --> 00:42:33,140
it's the one

1006
00:42:33,140 --> 00:42:38,220
that lets you know which packer is

1007
00:42:38,220 --> 00:42:41,280
used but that too it's okay finally it's

1008
00:42:41,280 --> 00:42:42,420
not going to work wonders that is to say there will

1009
00:42:42,420 --> 00:42:44,280
be it's written with

1010
00:42:44,280 --> 00:42:47,640
Yara rules that will  detect well here I saw

1011
00:42:47,640 --> 00:42:51,300
a Jason in the assets I saw such and

1012
00:42:51,300 --> 00:42:53,280
such a Bike code in such and such a place

1013
00:42:53,280 --> 00:42:55,140
so I think it's packages with

1014
00:42:55,140 --> 00:42:59,040
Jason packer but it's not going to be 100%

1015
00:42:59,040 --> 00:43:01,079
it depends if the rule  is well done or

1016
00:43:01,079 --> 00:43:04,619
not so overall we can never be

1017
00:43:04,619 --> 00:43:07,140
completely sure that it will be done with

1018
00:43:07,140 --> 00:43:09,119
Jason Parker lonpacker static

1019
00:43:09,119 --> 00:43:12,240
clearly if it was not this packer there

1020
00:43:12,240 --> 00:43:14,579
we will not be able to obtain the deck at the

1021
00:43:14,579 --> 00:43:16,859
end so that we will know by mistake we

1022
00:43:16,859 --> 00:43:18,780
try in  having tried ah well it didn't

1023
00:43:18,780 --> 00:43:20,579
work it means that it was not the

1024
00:43:20,579 --> 00:43:22,140
right packer or that we had an error

1025
00:43:22,140 --> 00:43:24,300
in our packer a stage which of course

1026
00:43:24,300 --> 00:43:27,180
there is but there is no there is no

1027
00:43:27,180 --> 00:43:29,579
specific label for  spot them

1028
00:43:29,579 --> 00:43:31,760
the Packers it's dare

1029
00:43:31,760 --> 00:43:33,540
I say that a bit like

1030
00:43:33,540 --> 00:43:34,680
viruses it's a bit but a bit

1031
00:43:34,680 --> 00:43:37,500
mean but it's they do on purpose

1032
00:43:37,500 --> 00:43:38,880
not to be recognizable the same thing

1033
00:43:38,880 --> 00:43:41,420
finally

1034
00:43:44,460 --> 00:43:47,339
here I have not  no better solution than

1035
00:43:47,339 --> 00:43:49,380
that in any case

1036
00:43:49,380 --> 00:43:51,599
ok then we can applaud the speaker again

1037
00:43:51,599 --> 00:43:53,900


