1
00:00:04,580 --> 00:00:07,400
so hello everyone thank you for coming

2
00:00:07,400 --> 00:00:10,139
today I will be talking about the smart

3
00:00:10,139 --> 00:00:12,120
home I didn't ask for

4
00:00:12,120 --> 00:00:14,940
so first my name is Nils amye I'm a

5
00:00:14,940 --> 00:00:17,279
security researcher working at kodelski

6
00:00:17,279 --> 00:00:21,199
security and I focus on privacy about

7
00:00:21,199 --> 00:00:24,960
data processing at scale and I'm a huge

8
00:00:24,960 --> 00:00:26,699
Linux fan

9
00:00:26,699 --> 00:00:29,960
and I would like to thank my colleagues

10
00:00:29,960 --> 00:00:32,700
Nathan Silva

11
00:00:32,700 --> 00:00:35,120
John Nicola

12
00:00:35,120 --> 00:00:38,719
Karim teji and the others I may forget

13
00:00:38,719 --> 00:00:43,079
for their useful feedback IDs and for

14
00:00:43,079 --> 00:00:46,399
helping me with this project

15
00:00:46,399 --> 00:00:49,860
so what is this about so it's basically

16
00:00:49,860 --> 00:00:53,700
my story with a smart home

17
00:00:53,700 --> 00:00:56,219
and I will first talk about how I

18
00:00:56,219 --> 00:00:59,399
analyzed Network traffic on the on that

19
00:00:59,399 --> 00:01:03,180
system uh how and then how I analyzed a

20
00:01:03,180 --> 00:01:06,060
tablet device that was in the apartment

21
00:01:06,060 --> 00:01:09,960
the findings I discovered and then how I

22
00:01:09,960 --> 00:01:13,399
disclosed those findings

23
00:01:14,100 --> 00:01:17,220
so once upon a time I was looking for a

24
00:01:17,220 --> 00:01:20,460
new apartment for rent and I found one

25
00:01:20,460 --> 00:01:23,520
and decided to rent in to rent it and

26
00:01:23,520 --> 00:01:26,460
the day I moved in uh

27
00:01:26,460 --> 00:01:30,420
I found that this was on the wall by the

28
00:01:30,420 --> 00:01:32,580
entrance of the apartment

29
00:01:32,580 --> 00:01:37,320
so it's a wall mounted tablet that runs

30
00:01:37,320 --> 00:01:39,960
an app in Kiosk mode so there is no

31
00:01:39,960 --> 00:01:42,420
apparent way to escape the app

32
00:01:42,420 --> 00:01:46,020
and you can use the buttons on that app

33
00:01:46,020 --> 00:01:48,360
to control a few assets inside of the

34
00:01:48,360 --> 00:01:50,820
apartment so you can control the heating

35
00:01:50,820 --> 00:01:55,259
in the various rooms turning on on and

36
00:01:55,259 --> 00:01:58,320
off the lights uh control the

37
00:01:58,320 --> 00:02:02,159
the window blinds and also when someone

38
00:02:02,159 --> 00:02:05,100
rings from the outside at the main

39
00:02:05,100 --> 00:02:07,979
entrance Door there is an intercom and

40
00:02:07,979 --> 00:02:10,860
you can see the people who who ring

41
00:02:10,860 --> 00:02:13,280
there because there's a camera outside

42
00:02:13,280 --> 00:02:17,280
and you can also open the the main

43
00:02:17,280 --> 00:02:19,860
building building entrance Door through

44
00:02:19,860 --> 00:02:22,940
that tablet

45
00:02:24,800 --> 00:02:28,379
and more and more Apartments come

46
00:02:28,379 --> 00:02:31,980
pre-installed with such devices and if

47
00:02:31,980 --> 00:02:34,200
you rent it you just have to use it I

48
00:02:34,200 --> 00:02:36,540
mean it's there the the owner decided to

49
00:02:36,540 --> 00:02:40,080
install it and um actually this creates

50
00:02:40,080 --> 00:02:42,420
a dependence on the device and one

51
00:02:42,420 --> 00:02:45,540
example of that is let's say you have a

52
00:02:45,540 --> 00:02:49,140
balcony and you have window blinds on

53
00:02:49,140 --> 00:02:51,780
the outside of the windows and if the

54
00:02:51,780 --> 00:02:54,239
blinds are down even if you open the the

55
00:02:54,239 --> 00:02:56,819
windows there's no way for you to go out

56
00:02:56,819 --> 00:02:58,440
to the balcony because the blinds are

57
00:02:58,440 --> 00:03:01,080
down and the only way to raise those

58
00:03:01,080 --> 00:03:04,319
blinds is to use that tablet that system

59
00:03:04,319 --> 00:03:07,739
so if it doesn't work if it gets

60
00:03:07,739 --> 00:03:09,840
compromised whatever you you're

61
00:03:09,840 --> 00:03:12,180
basically locked out and uh so this

62
00:03:12,180 --> 00:03:14,040
that's why there's really a dependence

63
00:03:14,040 --> 00:03:17,299
on that on that device

64
00:03:17,760 --> 00:03:20,340
so you can use the tablet directly use

65
00:03:20,340 --> 00:03:23,640
the buttons but it has another feature

66
00:03:23,640 --> 00:03:26,760
where you can actually press a button on

67
00:03:26,760 --> 00:03:30,239
that interface and say that you want to

68
00:03:30,239 --> 00:03:34,680
pair a smartphone to the to the tablet

69
00:03:34,680 --> 00:03:37,500
and if you do that the tablet is going

70
00:03:37,500 --> 00:03:41,340
to generate a four digit PIN code which

71
00:03:41,340 --> 00:03:43,920
is valid for 60 seconds and you can

72
00:03:43,920 --> 00:03:47,099
install the corresponding mobile app on

73
00:03:47,099 --> 00:03:51,239
your smartphone open the app and if you

74
00:03:51,239 --> 00:03:53,819
enter the right four digit code on the

75
00:03:53,819 --> 00:03:57,360
app within the 60 seconds the smartphone

76
00:03:57,360 --> 00:04:00,299
gets paired to the tablet and then you

77
00:04:00,299 --> 00:04:03,000
can use this phone to remotely control

78
00:04:03,000 --> 00:04:06,420
assets inside of the apartment from

79
00:04:06,420 --> 00:04:08,760
anywhere on the internet

80
00:04:08,760 --> 00:04:12,060
so at that point I really started to

81
00:04:12,060 --> 00:04:13,980
wonder what the the security of the

82
00:04:13,980 --> 00:04:16,380
system was like

83
00:04:16,380 --> 00:04:18,720
so this brings us to the first chapter

84
00:04:18,720 --> 00:04:21,180
which is the analysis of the network

85
00:04:21,180 --> 00:04:23,540
traffic

86
00:04:23,600 --> 00:04:27,660
so the what I've analyzed is the Android

87
00:04:27,660 --> 00:04:30,540
application because this is what I had I

88
00:04:30,540 --> 00:04:32,780
had an Android phone at hand

89
00:04:32,780 --> 00:04:35,759
and it was a pixel 4 smartphone running

90
00:04:35,759 --> 00:04:39,240
Android 11 and I just tried to capture

91
00:04:39,240 --> 00:04:41,280
the traffic at first and I saw that most

92
00:04:41,280 --> 00:04:43,680
of the traffic was actually encrypted so

93
00:04:43,680 --> 00:04:45,780
we could maybe do a man in the middle

94
00:04:45,780 --> 00:04:47,880
attack if there's no other special

95
00:04:47,880 --> 00:04:49,919
protections and try to see the the clear

96
00:04:49,919 --> 00:04:51,600
text traffic there

97
00:04:51,600 --> 00:04:54,720
so what I did is I rooted the the phone

98
00:04:54,720 --> 00:04:56,400
with my disk

99
00:04:56,400 --> 00:04:58,860
and uh installed some custom

100
00:04:58,860 --> 00:05:02,040
certificates on the device and since

101
00:05:02,040 --> 00:05:06,900
Android 7 the OS won't trust the user

102
00:05:06,900 --> 00:05:09,479
certificates by default so this has to

103
00:05:09,479 --> 00:05:10,740
be

104
00:05:10,740 --> 00:05:13,440
stemwide certificates and you need some

105
00:05:13,440 --> 00:05:15,660
private edgers to do that but if you

106
00:05:15,660 --> 00:05:17,759
have a rooted phone with magisk there's

107
00:05:17,759 --> 00:05:20,580
a module that you can directly install

108
00:05:20,580 --> 00:05:23,340
from inside the images app called move

109
00:05:23,340 --> 00:05:25,860
certificates which does this for you so

110
00:05:25,860 --> 00:05:27,539
you first install the certificates as

111
00:05:27,539 --> 00:05:29,699
user search and then you can move them

112
00:05:29,699 --> 00:05:32,759
it will move them system wide so that

113
00:05:32,759 --> 00:05:34,979
your application costs these

114
00:05:34,979 --> 00:05:37,460
certificates

115
00:05:37,800 --> 00:05:40,560
so having a look at the traffic

116
00:05:40,560 --> 00:05:43,979
um we quickly see that the meat of the

117
00:05:43,979 --> 00:05:47,100
traffic is actually xmpp traffic which

118
00:05:47,100 --> 00:05:49,919
is a chat protocol but there is also

119
00:05:49,919 --> 00:05:53,940
some HTTP traffic uh and https actually

120
00:05:53,940 --> 00:05:55,740
traffic there

121
00:05:55,740 --> 00:05:59,580
so to to intercept the HTTP traffic I

122
00:05:59,580 --> 00:06:01,259
used something called midterm proxy but

123
00:06:01,259 --> 00:06:03,300
we could have used burp Suite or any

124
00:06:03,300 --> 00:06:06,539
other HTTP proxy there

125
00:06:06,539 --> 00:06:10,560
and for xmpp so at first the traffic was

126
00:06:10,560 --> 00:06:13,680
unencrypted but quickly after the

127
00:06:13,680 --> 00:06:16,259
initial connection is done started this

128
00:06:16,259 --> 00:06:18,960
message is sent and the rest of the

129
00:06:18,960 --> 00:06:21,300
communications are encrypted

130
00:06:21,300 --> 00:06:25,380
so that means we have xmpps so XMP over

131
00:06:25,380 --> 00:06:26,880
TLS traffic

132
00:06:26,880 --> 00:06:32,780
and most https proxy is only intercept

133
00:06:32,780 --> 00:06:36,539
HTTP and they won't do xmpp interception

134
00:06:36,539 --> 00:06:39,900
so I had to use something else here and

135
00:06:39,900 --> 00:06:42,120
one tool that worked for me is called

136
00:06:42,120 --> 00:06:45,960
xmpp meeting and this is what I used

137
00:06:45,960 --> 00:06:47,160
foreign

138
00:06:47,160 --> 00:06:51,180
so here we have the screenshot of a

139
00:06:51,180 --> 00:06:55,280
Wireshark and we see an xmpp packet

140
00:06:55,280 --> 00:06:58,580
which was inside of

141
00:06:58,580 --> 00:07:02,580
TLS encrypted session and we see the the

142
00:07:02,580 --> 00:07:05,400
clear text traffic and here it's just a

143
00:07:05,400 --> 00:07:07,460
packet that invites

144
00:07:07,460 --> 00:07:12,000
the the smartphone to an xmpp room we

145
00:07:12,000 --> 00:07:15,860
will see later what what that is

146
00:07:17,400 --> 00:07:20,639
so to set that up what I did is I set up

147
00:07:20,639 --> 00:07:24,120
a Wi-Fi access points on my laptop and

148
00:07:24,120 --> 00:07:26,220
use the smartphone to connect to that

149
00:07:26,220 --> 00:07:29,400
software AP and it created a new network

150
00:07:29,400 --> 00:07:31,979
interface on my laptop where I captured

151
00:07:31,979 --> 00:07:35,039
the graphic from the laptop

152
00:07:35,039 --> 00:07:39,840
and for https so I used Mitten proxy and

153
00:07:39,840 --> 00:07:43,560
you just need to instruct it to dump the

154
00:07:43,560 --> 00:07:45,000
TLs handshakes

155
00:07:45,000 --> 00:07:49,020
to an SSL key log file and then this

156
00:07:49,020 --> 00:07:52,919
file can be loaded from yshark to

157
00:07:52,919 --> 00:07:54,840
um so that Wireshark actually decrypts

158
00:07:54,840 --> 00:07:56,880
the traffic for you so you can see the

159
00:07:56,880 --> 00:07:58,319
the clear text traffic inside of

160
00:07:58,319 --> 00:08:02,419
Wireshark the the easy way

161
00:08:02,460 --> 00:08:05,400
for the xmpp proxy it's basically the

162
00:08:05,400 --> 00:08:09,000
same thing except for me the certificate

163
00:08:09,000 --> 00:08:11,160
I had did not work at first because

164
00:08:11,160 --> 00:08:15,120
apparently the smartphone app checks

165
00:08:15,120 --> 00:08:17,699
that the domain name for which this

166
00:08:17,699 --> 00:08:19,379
certificate is valid

167
00:08:19,379 --> 00:08:22,340
equals

168
00:08:22,340 --> 00:08:24,780
xmpp.mysmart.net so I had to generate

169
00:08:24,780 --> 00:08:28,620
another certificate with that that was

170
00:08:28,620 --> 00:08:30,960
valid for that domain name in Patty in

171
00:08:30,960 --> 00:08:34,520
particular and redo the thing where I

172
00:08:34,520 --> 00:08:38,039
pushed the certificate on the device and

173
00:08:38,039 --> 00:08:41,219
used the move certificates module to

174
00:08:41,219 --> 00:08:43,200
trust it

175
00:08:43,200 --> 00:08:46,200
and then we just run xmpp midterm same

176
00:08:46,200 --> 00:08:49,080
thing it clocks the handshake to an SSL

177
00:08:49,080 --> 00:08:51,120
key log file and we can also load that

178
00:08:51,120 --> 00:08:53,580
within Wireshark to see the the clear

179
00:08:53,580 --> 00:08:58,200
text graphic and lastly we need a bit of

180
00:08:58,200 --> 00:09:00,779
iptables commands to just redirect the

181
00:09:00,779 --> 00:09:05,120
traffic so that it all works together

182
00:09:06,120 --> 00:09:09,959
so we we were able to see the the clear

183
00:09:09,959 --> 00:09:11,279
text traffic

184
00:09:11,279 --> 00:09:13,620
which means there is no certificate

185
00:09:13,620 --> 00:09:17,459
pinning on the mobile application

186
00:09:17,459 --> 00:09:21,660
and inside of the xmpc messages we've

187
00:09:21,660 --> 00:09:25,620
seen that there are Json payloads that

188
00:09:25,620 --> 00:09:28,560
were sent and here there is an example

189
00:09:28,560 --> 00:09:31,680
of one of these so this is a payload

190
00:09:31,680 --> 00:09:36,300
that was sent when I used the smartphone

191
00:09:36,300 --> 00:09:39,600
application to turn on a light in the

192
00:09:39,600 --> 00:09:41,940
apartment and we see that in the body

193
00:09:41,940 --> 00:09:47,700
section it says on and turn on asset 13

194
00:09:47,700 --> 00:09:50,880
which was a light

195
00:09:50,880 --> 00:09:53,540
foreign

196
00:10:00,080 --> 00:10:02,899
obfuscated so I just

197
00:10:02,899 --> 00:10:07,500
got the APK file and tried to to unpack

198
00:10:07,500 --> 00:10:10,320
it and it was actually obfuscated so

199
00:10:10,320 --> 00:10:12,420
that gave us very limited understanding

200
00:10:12,420 --> 00:10:16,200
of what the app was uh was doing so we

201
00:10:16,200 --> 00:10:18,720
could have spent some time to reverse

202
00:10:18,720 --> 00:10:20,060
engineer it

203
00:10:20,060 --> 00:10:22,640
but this would have taken a long time

204
00:10:22,640 --> 00:10:26,040
and as one famous security researcher

205
00:10:26,040 --> 00:10:29,519
says if it's smart it's vulnerable so I

206
00:10:29,519 --> 00:10:32,040
decided to to move on

207
00:10:32,040 --> 00:10:33,300
all right

208
00:10:33,300 --> 00:10:35,820
so that brings us to the second chapter

209
00:10:35,820 --> 00:10:38,339
which is the analysis of the tablet

210
00:10:38,339 --> 00:10:40,940
itself

211
00:10:41,580 --> 00:10:44,459
so the goal here was to figure out how

212
00:10:44,459 --> 00:10:47,880
does the tablet work and uh first

213
00:10:47,880 --> 00:10:50,940
question I I asked myself is is there a

214
00:10:50,940 --> 00:10:55,740
way we can connect to to this tablet

215
00:10:55,740 --> 00:10:59,519
so on the this the front of the the

216
00:10:59,519 --> 00:11:01,680
tablet on the right side there is

217
00:11:01,680 --> 00:11:04,980
actually a plate that sticks because it

218
00:11:04,980 --> 00:11:07,440
there's just magnets below it so you can

219
00:11:07,440 --> 00:11:09,240
just remove that

220
00:11:09,240 --> 00:11:13,320
and below that it reveals that there is

221
00:11:13,320 --> 00:11:15,959
a micro USB cable that gets plugged into

222
00:11:15,959 --> 00:11:19,279
the the tablet

223
00:11:19,320 --> 00:11:21,839
so if you use a cable that fits in the

224
00:11:21,839 --> 00:11:24,060
plastic because I didn't want to destroy

225
00:11:24,060 --> 00:11:26,519
the whole thing since I'm not the the

226
00:11:26,519 --> 00:11:28,760
owner of the apartment

227
00:11:28,760 --> 00:11:31,560
you can actually plug have a cable

228
00:11:31,560 --> 00:11:34,680
between your laptop and the the tablet

229
00:11:34,680 --> 00:11:37,200
so maybe that's a start and maybe you

230
00:11:37,200 --> 00:11:39,959
can do something over USB

231
00:11:39,959 --> 00:11:43,440
and also if you unmount the tablet from

232
00:11:43,440 --> 00:11:46,320
the wall you see that behind it there is

233
00:11:46,320 --> 00:11:48,720
a hole in the in the wall and inside

234
00:11:48,720 --> 00:11:52,440
that wall there is actually a chip with

235
00:11:52,440 --> 00:11:55,019
two cables that go into the tablet and

236
00:11:55,019 --> 00:11:57,300
another one which is a an ethernet cable

237
00:11:57,300 --> 00:11:59,880
that and this is where the tablet gets

238
00:11:59,880 --> 00:12:03,800
its internet access from

239
00:12:05,640 --> 00:12:11,040
so I tried to see if maybe I try to see

240
00:12:11,040 --> 00:12:14,060
if maybe we could do something over USB

241
00:12:14,060 --> 00:12:17,279
and actually USB debugging was enabled

242
00:12:17,279 --> 00:12:20,360
by default so you can just use ADB and

243
00:12:20,360 --> 00:12:24,060
get a shell on the on the tablet and to

244
00:12:24,060 --> 00:12:26,880
my surprise when I got that shell I had

245
00:12:26,880 --> 00:12:28,980
know that special character that that

246
00:12:28,980 --> 00:12:30,959
means that you are root on the on the

247
00:12:30,959 --> 00:12:31,980
tablet

248
00:12:31,980 --> 00:12:34,980
so it looks like the tablet was actually

249
00:12:34,980 --> 00:12:38,279
delivered as rooted by by default

250
00:12:38,279 --> 00:12:42,660
and it also runs Android 4.4 Android

251
00:12:42,660 --> 00:12:45,480
KitKat which is um which was released in

252
00:12:45,480 --> 00:12:48,079
2013.

253
00:12:48,079 --> 00:12:52,019
so next thing I tried to do is try to

254
00:12:52,019 --> 00:12:54,899
enumerate the applications that were

255
00:12:54,899 --> 00:12:56,820
installed on the tablet

256
00:12:56,820 --> 00:13:01,440
and collect the APK files for these

257
00:13:01,440 --> 00:13:02,760
applications

258
00:13:02,760 --> 00:13:05,519
so with these commands you can see the

259
00:13:05,519 --> 00:13:07,860
list of applications installed see where

260
00:13:07,860 --> 00:13:11,040
these APK files are installed on the

261
00:13:11,040 --> 00:13:14,519
tablet and download the APK files from

262
00:13:14,519 --> 00:13:19,380
the tablet to the to the laptop over USB

263
00:13:19,380 --> 00:13:24,000
and doing that I found a few interesting

264
00:13:24,000 --> 00:13:25,220
targets

265
00:13:25,220 --> 00:13:28,019
mainly there were four applications

266
00:13:28,019 --> 00:13:31,740
installed on the tablet that had esmart

267
00:13:31,740 --> 00:13:33,660
in their name

268
00:13:33,660 --> 00:13:37,079
and there was a tablet app a manager app

269
00:13:37,079 --> 00:13:40,560
an OTA app and a launcher app

270
00:13:40,560 --> 00:13:42,120
and another thing that looked

271
00:13:42,120 --> 00:13:44,459
interesting there was an application

272
00:13:44,459 --> 00:13:47,880
called quick sshd which looked like an

273
00:13:47,880 --> 00:13:50,459
SSH server that was installed on the

274
00:13:50,459 --> 00:13:52,139
tablet

275
00:13:52,139 --> 00:13:55,860
so what I did next is I used jadex to

276
00:13:55,860 --> 00:13:59,880
unpack and decompile the APK files

277
00:13:59,880 --> 00:14:03,000
so that's a free tool that's that's what

278
00:14:03,000 --> 00:14:05,220
I use that that's what worked for me it

279
00:14:05,220 --> 00:14:07,560
was good enough sometimes it could not

280
00:14:07,560 --> 00:14:10,740
decompile all of the code but it was

281
00:14:10,740 --> 00:14:14,040
good enough to to see what happened

282
00:14:14,040 --> 00:14:16,560
and we could have used something else

283
00:14:16,560 --> 00:14:19,200
like maybe convert the APK file to a jar

284
00:14:19,200 --> 00:14:22,339
file and then use a more traditional

285
00:14:22,339 --> 00:14:24,779
decompiler maybe the one that's included

286
00:14:24,779 --> 00:14:26,760
in IntelliJ IDE or something like that

287
00:14:26,760 --> 00:14:29,519
or use commercial products but for me

288
00:14:29,519 --> 00:14:31,980
jedx worked

289
00:14:31,980 --> 00:14:34,920
so looking at the source code that was

290
00:14:34,920 --> 00:14:37,339
unpacked and decompiled

291
00:14:37,339 --> 00:14:40,800
it was actually not obfuscated

292
00:14:40,800 --> 00:14:43,440
so it was easy to understand what

293
00:14:43,440 --> 00:14:47,639
happened and what these apps were doing

294
00:14:47,639 --> 00:14:50,760
so here there's a screenshot of one of

295
00:14:50,760 --> 00:14:52,620
the so that was in the tablet app

296
00:14:52,620 --> 00:14:55,139
actually and it's one part of the code

297
00:14:55,139 --> 00:14:56,699
where

298
00:14:56,699 --> 00:14:57,720
um

299
00:14:57,720 --> 00:15:01,620
actually we have the URL

300
00:15:01,620 --> 00:15:04,560
um on that we have to send a request to

301
00:15:04,560 --> 00:15:07,260
to open the main entrance door of the

302
00:15:07,260 --> 00:15:08,399
building

303
00:15:08,399 --> 00:15:10,500
so we can see the the code like that

304
00:15:10,500 --> 00:15:13,440
it's it's not obfuscated

305
00:15:13,440 --> 00:15:16,139
another thing that was mentioned in the

306
00:15:16,139 --> 00:15:18,860
code is that there was multiple

307
00:15:18,860 --> 00:15:22,560
different Hardwares for the the tablet

308
00:15:22,560 --> 00:15:24,240
so it looks like the vendor has

309
00:15:24,240 --> 00:15:27,120
different versions of the tablet and the

310
00:15:27,120 --> 00:15:31,440
one I had was called arcade 3188 looks

311
00:15:31,440 --> 00:15:33,260
like it's a rock chip

312
00:15:33,260 --> 00:15:36,540
rk3188 but the code mentioned at least

313
00:15:36,540 --> 00:15:41,519
three other models c91 c93 and Finch but

314
00:15:41,519 --> 00:15:44,279
I haven't looked into that

315
00:15:44,279 --> 00:15:45,380
foreign

316
00:15:45,380 --> 00:15:47,100
next

317
00:15:47,100 --> 00:15:50,760
um I try I copied all the files that

318
00:15:50,760 --> 00:15:53,220
were in these locations on the tablet so

319
00:15:53,220 --> 00:15:57,560
data data and the SD card directories

320
00:15:57,560 --> 00:16:01,440
and there was in data data

321
00:16:01,440 --> 00:16:03,779
under the the folder for the tablet app

322
00:16:03,779 --> 00:16:07,260
there was one file that contained the IP

323
00:16:07,260 --> 00:16:09,899
address of the building's main entrance

324
00:16:09,899 --> 00:16:13,860
door so for me it was 100 500.

325
00:16:13,860 --> 00:16:17,220
and looking at the the code that we had

326
00:16:17,220 --> 00:16:20,220
previously in the screenshot we quickly

327
00:16:20,220 --> 00:16:24,600
understand that the URL that you have on

328
00:16:24,600 --> 00:16:26,519
which you have to make an HTTP get

329
00:16:26,519 --> 00:16:29,100
request to open the door is the the one

330
00:16:29,100 --> 00:16:32,120
on that slide

331
00:16:32,120 --> 00:16:33,660
so

332
00:16:33,660 --> 00:16:35,040
um

333
00:16:35,040 --> 00:16:38,180
what I did

334
00:16:40,860 --> 00:16:43,019
is

335
00:16:43,019 --> 00:16:47,880
so first I had to be connected on my

336
00:16:47,880 --> 00:16:48,720
um

337
00:16:48,720 --> 00:16:51,180
on the the local network where the

338
00:16:51,180 --> 00:16:53,579
tablet was so what I did is I had my

339
00:16:53,579 --> 00:16:57,300
laptop plugged into the the tablet so

340
00:16:57,300 --> 00:16:59,820
that I could send the request on that

341
00:16:59,820 --> 00:17:02,820
internal Network and I had an SSH server

342
00:17:02,820 --> 00:17:05,939
running on the on the laptop and from

343
00:17:05,939 --> 00:17:09,179
the outside of the building I used my

344
00:17:09,179 --> 00:17:13,020
smartphone to SSH into my laptop and I

345
00:17:13,020 --> 00:17:15,839
just used it to send the HTTP request

346
00:17:15,839 --> 00:17:17,400
because it was easier to have a

347
00:17:17,400 --> 00:17:19,439
smartphone in the hand rather than a

348
00:17:19,439 --> 00:17:20,699
laptop

349
00:17:20,699 --> 00:17:22,380
foreign

350
00:17:22,380 --> 00:17:25,619
so we just sent the the HTTP request

351
00:17:25,619 --> 00:17:27,979
there

352
00:17:32,020 --> 00:17:36,480
[Music]

353
00:17:36,480 --> 00:17:40,340
and that's it you enter the building

354
00:17:44,700 --> 00:17:46,160
so

355
00:17:46,160 --> 00:17:49,820
in my specific case

356
00:17:49,820 --> 00:17:52,679
the way it was deployed was the

357
00:17:52,679 --> 00:17:56,220
following so there are six buildings in

358
00:17:56,220 --> 00:17:57,740
that neighborhood

359
00:17:57,740 --> 00:18:00,539
and each building has eight apartments

360
00:18:00,539 --> 00:18:02,520
and there is one tablet in each

361
00:18:02,520 --> 00:18:04,020
apartment

362
00:18:04,020 --> 00:18:06,419
and each of these tablets are connected

363
00:18:06,419 --> 00:18:08,880
to a switch in that building and there

364
00:18:08,880 --> 00:18:11,760
is one building entrance door for the

365
00:18:11,760 --> 00:18:14,280
the building and each apartment also has

366
00:18:14,280 --> 00:18:17,039
a door apartment but these doors are not

367
00:18:17,039 --> 00:18:20,039
connected thankfully you still need a

368
00:18:20,039 --> 00:18:22,860
physical key to open those doors and

369
00:18:22,860 --> 00:18:24,900
then the switches are all interconnected

370
00:18:24,900 --> 00:18:28,039
so all the six buildings are connected

371
00:18:28,039 --> 00:18:31,640
to the same network

372
00:18:32,660 --> 00:18:36,679
so what I try to do next is

373
00:18:36,679 --> 00:18:39,660
try to see what these IP addresses were

374
00:18:39,660 --> 00:18:41,400
and it looked like that actually there

375
00:18:41,400 --> 00:18:43,500
was a logic in the way that the IP

376
00:18:43,500 --> 00:18:45,960
addresses were assigned to the tablets

377
00:18:45,960 --> 00:18:48,780
and the doors so all the doors end with

378
00:18:48,780 --> 00:18:49,799
100

379
00:18:49,799 --> 00:18:51,600
and for example if you are inside

380
00:18:51,600 --> 00:18:55,940
Building B Apartment 5 the IP was

381
00:18:55,940 --> 00:18:59,700
10025 so basically you can know exactly

382
00:18:59,700 --> 00:19:01,980
which device you Target because it's the

383
00:19:01,980 --> 00:19:06,120
the IP addresses are logically assigned

384
00:19:06,120 --> 00:19:10,200
and I tried to Ping other tablets in my

385
00:19:10,200 --> 00:19:12,059
building so and that worked and then I

386
00:19:12,059 --> 00:19:14,660
tried to see if it was possible to Ping

387
00:19:14,660 --> 00:19:17,760
tablets and doors from other buildings

388
00:19:17,760 --> 00:19:20,360
in the neighborhood and that also worked

389
00:19:20,360 --> 00:19:22,860
so looks like

390
00:19:22,860 --> 00:19:26,220
you could potentially open the door of

391
00:19:26,220 --> 00:19:29,720
other buildings in the neighborhood

392
00:19:29,720 --> 00:19:33,000
but for legal reasons I did not try this

393
00:19:33,000 --> 00:19:35,340
but when I reported it to the vendor

394
00:19:35,340 --> 00:19:38,400
they did not deny so looks like that

395
00:19:38,400 --> 00:19:42,660
that would be possible foreign

396
00:19:42,660 --> 00:19:44,760
so that brings us to the third chapter

397
00:19:44,760 --> 00:19:47,760
findings

398
00:19:48,299 --> 00:19:51,299
so putting all of that together

399
00:19:51,299 --> 00:19:52,320
um

400
00:19:52,320 --> 00:19:54,419
this is what I think the the whole

401
00:19:54,419 --> 00:19:56,880
system how the whole system works after

402
00:19:56,880 --> 00:19:58,740
reading the source code having a look at

403
00:19:58,740 --> 00:20:00,419
the traffic and the everything I've

404
00:20:00,419 --> 00:20:03,960
learned so far so it looks like we have

405
00:20:03,960 --> 00:20:06,240
on the smartphone we have the smart Live

406
00:20:06,240 --> 00:20:08,039
app which runs

407
00:20:08,039 --> 00:20:10,679
and on the tablet we have multiple apps

408
00:20:10,679 --> 00:20:13,400
we have the tablet app and we also have

409
00:20:13,400 --> 00:20:16,440
the manager app and the other apps as

410
00:20:16,440 --> 00:20:17,880
well but these are the the most

411
00:20:17,880 --> 00:20:20,160
important ones and we also have an SSH

412
00:20:20,160 --> 00:20:24,179
server that runs on the on the tablet

413
00:20:24,179 --> 00:20:26,940
and the tablet when it boots it's going

414
00:20:26,940 --> 00:20:30,120
to connect to an xmpp server which is

415
00:20:30,120 --> 00:20:33,419
hosted somewhere in the cloud and it

416
00:20:33,419 --> 00:20:36,720
joins a public room on that XMP server

417
00:20:36,720 --> 00:20:40,559
and same thing with the the smartphone

418
00:20:40,559 --> 00:20:42,900
app it's going also to connect to the

419
00:20:42,900 --> 00:20:45,299
xmpp server and join that same public

420
00:20:45,299 --> 00:20:48,179
room so basically all devices join that

421
00:20:48,179 --> 00:20:49,799
public room

422
00:20:49,799 --> 00:20:53,580
and when you pair a smartphone with the

423
00:20:53,580 --> 00:20:56,280
tablet the tablet is going to create a

424
00:20:56,280 --> 00:20:57,960
private room

425
00:20:57,960 --> 00:21:01,799
join that private room and invite the

426
00:21:01,799 --> 00:21:05,100
smartphone inside of that private room

427
00:21:05,100 --> 00:21:07,980
and once you are inside of that private

428
00:21:07,980 --> 00:21:10,919
room these Json payloads are sent

429
00:21:10,919 --> 00:21:14,340
through xmpp messages and the tablet is

430
00:21:14,340 --> 00:21:17,460
going to interpret these payloads and do

431
00:21:17,460 --> 00:21:20,280
actions inside of the apartment so this

432
00:21:20,280 --> 00:21:23,280
is how the you send commands and say I

433
00:21:23,280 --> 00:21:25,860
want to turn on a light I want to change

434
00:21:25,860 --> 00:21:28,140
the heating and so on the tablet is

435
00:21:28,140 --> 00:21:31,700
going to execute that for you

436
00:21:32,400 --> 00:21:35,159
um there was another component called

437
00:21:35,159 --> 00:21:37,640
the web platform

438
00:21:37,640 --> 00:21:41,100
and apparently this is a web server that

439
00:21:41,100 --> 00:21:44,640
runs also somewhere in the cloud and the

440
00:21:44,640 --> 00:21:46,740
manager app on the tablet is going to

441
00:21:46,740 --> 00:21:48,720
periodically check if there are any

442
00:21:48,720 --> 00:21:51,600
commands sent by the web platform that

443
00:21:51,600 --> 00:21:54,120
should be executed and we will talk

444
00:21:54,120 --> 00:21:56,880
about that next as well

445
00:21:56,880 --> 00:22:00,539
and there is also another component that

446
00:22:00,539 --> 00:22:03,360
was referenced in the code which is a

447
00:22:03,360 --> 00:22:04,860
tunnel server

448
00:22:04,860 --> 00:22:08,520
and one of the commands that can be sent

449
00:22:08,520 --> 00:22:10,980
by the web platform to the tablet is to

450
00:22:10,980 --> 00:22:12,059
instruct

451
00:22:12,059 --> 00:22:16,500
the tablet to do a reverse port

452
00:22:16,500 --> 00:22:19,140
forwarding through SSH on that tunnel

453
00:22:19,140 --> 00:22:22,320
server so that the port is open from the

454
00:22:22,320 --> 00:22:26,280
outside and then an employee working for

455
00:22:26,280 --> 00:22:28,500
the vendor can

456
00:22:28,500 --> 00:22:30,299
connect to the tunnel server because

457
00:22:30,299 --> 00:22:34,080
they have access to that and since the

458
00:22:34,080 --> 00:22:35,880
port is open and the tablets they can

459
00:22:35,880 --> 00:22:38,280
use that tunnel server to connect back

460
00:22:38,280 --> 00:22:41,360
into the tablet and use that for remote

461
00:22:41,360 --> 00:22:43,980
troubleshooting of issues someone may

462
00:22:43,980 --> 00:22:46,520
have at home

463
00:22:46,620 --> 00:22:48,799
foreign

464
00:22:49,679 --> 00:22:51,900
so I mentioned both tablet and

465
00:22:51,900 --> 00:22:54,059
smartphones connect to the xmpp server

466
00:22:54,059 --> 00:22:58,080
and on that xmtp server there is

467
00:22:58,080 --> 00:23:01,260
username and password authentication the

468
00:23:01,260 --> 00:23:05,580
username is a jabber ID or jid that's

469
00:23:05,580 --> 00:23:09,120
part of the XMP protocol and that value

470
00:23:09,120 --> 00:23:13,460
is derived from the device's MAC address

471
00:23:13,460 --> 00:23:16,559
concatenated to some random value

472
00:23:16,559 --> 00:23:21,000
and the password is a hash of that jid

473
00:23:21,000 --> 00:23:23,700
plus another random value

474
00:23:23,700 --> 00:23:27,539
and by default when it's the first time

475
00:23:27,539 --> 00:23:30,659
that the tablet boots up it's going to

476
00:23:30,659 --> 00:23:33,720
try to connect to that xmpp server and

477
00:23:33,720 --> 00:23:37,020
if it fails it's going to generate these

478
00:23:37,020 --> 00:23:41,640
random credentials and register on the

479
00:23:41,640 --> 00:23:43,320
xmpp server so it looks like

480
00:23:43,320 --> 00:23:46,020
registration is actually open so you

481
00:23:46,020 --> 00:23:48,559
could register on that xmpp server and

482
00:23:48,559 --> 00:23:52,440
potentially enumerate the devices that

483
00:23:52,440 --> 00:23:54,539
are connected on the the public room for

484
00:23:54,539 --> 00:23:57,480
example for example

485
00:23:57,480 --> 00:24:00,960
another thing I noticed is that these

486
00:24:00,960 --> 00:24:03,000
private rooms that the tablet and

487
00:24:03,000 --> 00:24:05,039
smartphone use for

488
00:24:05,039 --> 00:24:07,460
interpreting the comments

489
00:24:07,460 --> 00:24:10,500
the names of the private rooms are

490
00:24:10,500 --> 00:24:12,500
actually the jid of the tablet

491
00:24:12,500 --> 00:24:15,059
concatenated to some hard-coded value

492
00:24:15,059 --> 00:24:18,960
add conference.mysmarts.net

493
00:24:20,220 --> 00:24:21,360
um

494
00:24:21,360 --> 00:24:25,399
and I mentioned the rest already

495
00:24:25,919 --> 00:24:30,860
so potentially we could connect to this

496
00:24:30,860 --> 00:24:35,900
herbicroom may be enumerate the the the

497
00:24:35,900 --> 00:24:38,640
name of the devices that are connected

498
00:24:38,640 --> 00:24:39,840
and

499
00:24:39,840 --> 00:24:42,840
maybe there could be a way that we could

500
00:24:42,840 --> 00:24:47,159
guess the name of the private rooms so I

501
00:24:47,159 --> 00:24:49,440
wondered could we

502
00:24:49,440 --> 00:24:50,159
um

503
00:24:50,159 --> 00:24:52,940
actually try to connect to one of these

504
00:24:52,940 --> 00:24:55,440
Join one of these private rooms if we

505
00:24:55,440 --> 00:24:58,080
know its name and when I reported that

506
00:24:58,080 --> 00:25:00,480
to the vendor they said that someone had

507
00:25:00,480 --> 00:25:03,059
already reported that problem and it was

508
00:25:03,059 --> 00:25:06,480
it had already been patched early last

509
00:25:06,480 --> 00:25:07,380
year

510
00:25:07,380 --> 00:25:09,720
so this was an actual issue in the past

511
00:25:09,720 --> 00:25:11,880
but now the rooms are really invite only

512
00:25:11,880 --> 00:25:14,400
and even if you guess the name you

513
00:25:14,400 --> 00:25:18,080
cannot join unless you are invited

514
00:25:19,320 --> 00:25:22,200
so I mentioned that web platform so when

515
00:25:22,200 --> 00:25:23,779
you go to web

516
00:25:23,779 --> 00:25:26,580
platform.mysmart.net there is a login

517
00:25:26,580 --> 00:25:31,020
form and uh I did not try to really

518
00:25:31,020 --> 00:25:33,480
Analyze That platform but it looks like

519
00:25:33,480 --> 00:25:36,960
this is a platform that is used by

520
00:25:36,960 --> 00:25:37,880
um

521
00:25:37,880 --> 00:25:40,799
real estate agencies that own the

522
00:25:40,799 --> 00:25:44,039
buildings for example to send messages

523
00:25:44,039 --> 00:25:46,620
to all the tablets within a neighborhood

524
00:25:46,620 --> 00:25:49,380
maybe to notify the people about some

525
00:25:49,380 --> 00:25:52,080
events that happens or some problems in

526
00:25:52,080 --> 00:25:54,000
the in the neighborhood

527
00:25:54,000 --> 00:25:56,820
and this can also be used probably by

528
00:25:56,820 --> 00:25:59,760
the vendor to collect some information

529
00:25:59,760 --> 00:26:02,900
about the tablets

530
00:26:04,940 --> 00:26:07,799
also we talked about this SSH Channel

531
00:26:07,799 --> 00:26:08,880
server

532
00:26:08,880 --> 00:26:10,799
so

533
00:26:10,799 --> 00:26:14,520
um I mentioned that the the vendor can

534
00:26:14,520 --> 00:26:17,039
use this to remotely troubleshoot issues

535
00:26:17,039 --> 00:26:19,039
if the port is

536
00:26:19,039 --> 00:26:24,120
opened through that web platform command

537
00:26:24,120 --> 00:26:27,659
and I checked like how does that quick

538
00:26:27,659 --> 00:26:30,799
SSH server actually worked and how

539
00:26:30,799 --> 00:26:34,440
authentication worked and it uses a

540
00:26:34,440 --> 00:26:36,840
password authentication and the password

541
00:26:36,840 --> 00:26:39,860
was actually stored

542
00:26:39,860 --> 00:26:43,980
as its md5 hash inside of a file on the

543
00:26:43,980 --> 00:26:44,940
tablet

544
00:26:44,940 --> 00:26:48,059
so when someone tries to log in the the

545
00:26:48,059 --> 00:26:50,460
password is going to be hashed and that

546
00:26:50,460 --> 00:26:52,679
hash is going to be checked against the

547
00:26:52,679 --> 00:26:54,779
the harsh Stone in that file

548
00:26:54,779 --> 00:26:57,779
and I tried to brute force that hash but

549
00:26:57,779 --> 00:26:59,940
I could not brute force it apparently

550
00:26:59,940 --> 00:27:02,179
it's uh it's too long

551
00:27:02,179 --> 00:27:04,679
but there is another way we could

552
00:27:04,679 --> 00:27:07,919
actually go around this so

553
00:27:07,919 --> 00:27:08,580
um

554
00:27:08,580 --> 00:27:11,400
since we actually have physical access

555
00:27:11,400 --> 00:27:13,200
to the tablet

556
00:27:13,200 --> 00:27:17,520
and we have a USB debugging enabled on

557
00:27:17,520 --> 00:27:19,980
the tablet we are root on the tablet

558
00:27:19,980 --> 00:27:23,279
that means we control the SSH server so

559
00:27:23,279 --> 00:27:26,400
we could replace the SSH server and

560
00:27:26,400 --> 00:27:28,799
modify it so that whenever there is a

561
00:27:28,799 --> 00:27:30,080
login attempt

562
00:27:30,080 --> 00:27:32,940
the username and password that is used

563
00:27:32,940 --> 00:27:36,360
is done to a file so then you could pick

564
00:27:36,360 --> 00:27:38,820
up the phone call the vendor and say

565
00:27:38,820 --> 00:27:41,460
hello I have a problem with my tablet at

566
00:27:41,460 --> 00:27:42,659
home could you please remotely

567
00:27:42,659 --> 00:27:45,120
troubleshoot it and they would send the

568
00:27:45,120 --> 00:27:47,580
commands to open the port have someone

569
00:27:47,580 --> 00:27:50,520
try to log in the credentials would be

570
00:27:50,520 --> 00:27:52,440
stored in that file so you and you would

571
00:27:52,440 --> 00:27:55,200
just collect the the password from that

572
00:27:55,200 --> 00:27:56,960
log file

573
00:27:56,960 --> 00:27:58,820
and

574
00:27:58,820 --> 00:28:02,700
the where this gets critical is because

575
00:28:02,700 --> 00:28:06,120
um actually all the tablets in the same

576
00:28:06,120 --> 00:28:09,720
neighborhood share the same password for

577
00:28:09,720 --> 00:28:11,299
that SSH

578
00:28:11,299 --> 00:28:14,580
server and since they are all connected

579
00:28:14,580 --> 00:28:16,620
to the same network

580
00:28:16,620 --> 00:28:19,260
if you were to get that password using

581
00:28:19,260 --> 00:28:21,179
that social engineering attack

582
00:28:21,179 --> 00:28:23,779
you could actually

583
00:28:23,779 --> 00:28:27,779
connect to the other tablets in the

584
00:28:27,779 --> 00:28:28,799
neighborhood

585
00:28:28,799 --> 00:28:31,320
over SSH since they all have the SSH

586
00:28:31,320 --> 00:28:34,620
server running and since you are root on

587
00:28:34,620 --> 00:28:36,600
these tablets it's basically game over

588
00:28:36,600 --> 00:28:39,000
because you could control everything in

589
00:28:39,000 --> 00:28:40,679
the apartment from there

590
00:28:40,679 --> 00:28:43,919
and also these tablets they have a

591
00:28:43,919 --> 00:28:46,020
microphone and a camera so you could

592
00:28:46,020 --> 00:28:48,179
potentially spy on neighbors or

593
00:28:48,179 --> 00:28:50,100
neighbors could have been spying on me

594
00:28:50,100 --> 00:28:50,880
maybe

595
00:28:50,880 --> 00:28:55,520
so this is a real privacy issue

596
00:28:57,299 --> 00:29:00,600
so the way we could remediate that

597
00:29:00,600 --> 00:29:04,100
problem uh is actually quite simple so

598
00:29:04,100 --> 00:29:07,919
instead of using passwords for SSH

599
00:29:07,919 --> 00:29:10,799
authentication we could use public and

600
00:29:10,799 --> 00:29:13,200
private Keys instead so even if the the

601
00:29:13,200 --> 00:29:14,880
private key is used for authentication

602
00:29:14,880 --> 00:29:17,779
there would be no way to actually

603
00:29:17,779 --> 00:29:20,520
obtain it by dumping it on the server

604
00:29:20,520 --> 00:29:23,880
side and the other thing that we could

605
00:29:23,880 --> 00:29:26,220
do to fix it is there is actually no

606
00:29:26,220 --> 00:29:28,860
need for this SSH server to run at all

607
00:29:28,860 --> 00:29:30,960
times on these tablets so we could just

608
00:29:30,960 --> 00:29:33,960
shut it down and only start the server

609
00:29:33,960 --> 00:29:36,059
when it's needed like when the person

610
00:29:36,059 --> 00:29:38,159
sends the command through the web

611
00:29:38,159 --> 00:29:40,580
platform

612
00:29:41,159 --> 00:29:42,980
okay

613
00:29:42,980 --> 00:29:46,919
just a few other findings so

614
00:29:46,919 --> 00:29:47,700
um

615
00:29:47,700 --> 00:29:49,799
it's actually the owner of the building

616
00:29:49,799 --> 00:29:52,860
who pays for the internet access that is

617
00:29:52,860 --> 00:29:54,299
used by the tablet

618
00:29:54,299 --> 00:29:55,679
so

619
00:29:55,679 --> 00:29:58,020
if we have root access on the tablet we

620
00:29:58,020 --> 00:30:00,659
could set up a Wi-Fi hotspot on the

621
00:30:00,659 --> 00:30:03,120
tablet and use that connection for for

622
00:30:03,120 --> 00:30:04,980
free basically so no need to pay for

623
00:30:04,980 --> 00:30:06,360
internet anymore

624
00:30:06,360 --> 00:30:08,480
and the other thing

625
00:30:08,480 --> 00:30:13,460
is that these four digit PIN codes

626
00:30:13,460 --> 00:30:16,559
basically when you pair you start

627
00:30:16,559 --> 00:30:19,380
pairing the the tablet is going to

628
00:30:19,380 --> 00:30:22,980
listen on the xmpp public room for

629
00:30:22,980 --> 00:30:25,919
messages containing uh these four digit

630
00:30:25,919 --> 00:30:28,980
PIN codes and if such a message comes in

631
00:30:28,980 --> 00:30:30,960
it checks if the PIN code is the right

632
00:30:30,960 --> 00:30:33,179
one that it expects and if it is the

633
00:30:33,179 --> 00:30:37,020
right one then it pairs it accepts the

634
00:30:37,020 --> 00:30:40,140
pairing basically so you could send all

635
00:30:40,140 --> 00:30:42,500
the possible combinations and just Spam

636
00:30:42,500 --> 00:30:45,720
uh pin code messages there's just four

637
00:30:45,720 --> 00:30:48,419
digits so and you could just wait until

638
00:30:48,419 --> 00:30:50,760
someone tries to pair a smartphone and

639
00:30:50,760 --> 00:30:52,799
hope that you do it first and you would

640
00:30:52,799 --> 00:30:55,440
get paired to a random tablet at

641
00:30:55,440 --> 00:30:56,779
someone's house

642
00:30:56,779 --> 00:31:00,779
uh so it would probably work but it you

643
00:31:00,779 --> 00:31:02,760
would also probably get detected pretty

644
00:31:02,760 --> 00:31:04,380
quickly because you would be spamming

645
00:31:04,380 --> 00:31:07,340
these uh these messages

646
00:31:08,460 --> 00:31:11,399
so that brings us to the last chapter uh

647
00:31:11,399 --> 00:31:14,279
disclosure so first just a quick summary

648
00:31:14,279 --> 00:31:16,860
so these are the the findings that I

649
00:31:16,860 --> 00:31:18,779
have reported to the to the vendor so

650
00:31:18,779 --> 00:31:21,720
USB debugging was enabled by default the

651
00:31:21,720 --> 00:31:23,520
the tablet is rooted

652
00:31:23,520 --> 00:31:26,700
we can open the building main entrance

653
00:31:26,700 --> 00:31:30,299
door if we are on the same network

654
00:31:30,299 --> 00:31:32,940
um the tablet runs Android 4.4 which

655
00:31:32,940 --> 00:31:34,940
does not get security patches anymore

656
00:31:34,940 --> 00:31:38,940
the tablet apps are not obfuscated there

657
00:31:38,940 --> 00:31:41,159
is no certificate pinning on the Android

658
00:31:41,159 --> 00:31:43,200
smartphone app because we were able to

659
00:31:43,200 --> 00:31:45,240
see the clear text traffic

660
00:31:45,240 --> 00:31:49,260
and the SSH server is always running and

661
00:31:49,260 --> 00:31:51,179
there's password authentication so we

662
00:31:51,179 --> 00:31:52,799
could do that social engineering attack

663
00:31:52,799 --> 00:31:55,799
to retrieve the the password and there

664
00:31:55,799 --> 00:31:59,640
is no rate limiting for a PIN codes when

665
00:31:59,640 --> 00:32:02,100
you do pairing foreign

666
00:32:02,100 --> 00:32:04,740
so in December last year I disclosed

667
00:32:04,740 --> 00:32:08,100
these issues to the vendor by email the

668
00:32:08,100 --> 00:32:11,039
next week they acknowledge receipts and

669
00:32:11,039 --> 00:32:13,080
the day after that I received the

670
00:32:13,080 --> 00:32:16,200
response from them and it looks like

671
00:32:16,200 --> 00:32:17,580
there may have been some

672
00:32:17,580 --> 00:32:20,279
misunderstanding of the impacts of the

673
00:32:20,279 --> 00:32:23,340
the the the findings are reported

674
00:32:23,340 --> 00:32:26,520
so I offered them to discuss and clarify

675
00:32:26,520 --> 00:32:29,220
these findings in person

676
00:32:29,220 --> 00:32:31,679
and it was almost the holiday so we

677
00:32:31,679 --> 00:32:34,260
actually did that after the holidays and

678
00:32:34,260 --> 00:32:37,740
finally we met in mid-February

679
00:32:37,740 --> 00:32:40,260
and we discussed these I explained the

680
00:32:40,260 --> 00:32:44,460
the impacts and we agreed that they

681
00:32:44,460 --> 00:32:48,120
would work on a fix for

682
00:32:48,120 --> 00:32:50,520
um and at first for the most critical

683
00:32:50,520 --> 00:32:52,919
things that I had reported

684
00:32:52,919 --> 00:32:57,899
and uh in May I contacted them again and

685
00:32:57,899 --> 00:32:59,820
told them that I was about to talk about

686
00:32:59,820 --> 00:33:01,620
this publicly and wanted to get an

687
00:33:01,620 --> 00:33:04,380
update if they had the time to fix these

688
00:33:04,380 --> 00:33:06,960
uh these issues and I got a response

689
00:33:06,960 --> 00:33:10,020
saying that the fix was in progress and

690
00:33:10,020 --> 00:33:12,779
that it would be deployed if the the

691
00:33:12,779 --> 00:33:14,399
tests were successful by the end of the

692
00:33:14,399 --> 00:33:15,240
month

693
00:33:15,240 --> 00:33:18,659
and in July I was able to confirm that

694
00:33:18,659 --> 00:33:21,960
USB debugging has been disabled on the

695
00:33:21,960 --> 00:33:25,799
tablet and the SSH server was completely

696
00:33:25,799 --> 00:33:27,840
uninstalled from the tablet

697
00:33:27,840 --> 00:33:31,440
so in my book The this fixes the most

698
00:33:31,440 --> 00:33:34,019
critical issues and they have done their

699
00:33:34,019 --> 00:33:37,740
job and fixed the most critical problems

700
00:33:37,740 --> 00:33:40,740
here and in October this year they also

701
00:33:40,740 --> 00:33:44,340
rolled out a new GUI to all the tablets

702
00:33:44,340 --> 00:33:46,620
so now it looks a bit different it looks

703
00:33:46,620 --> 00:33:47,640
like this

704
00:33:47,640 --> 00:33:49,320
so it looks like they're still working

705
00:33:49,320 --> 00:33:52,519
uh working on it

706
00:33:53,940 --> 00:33:57,059
so in conclusion the vendor fixed the

707
00:33:57,059 --> 00:33:59,179
most critical issues

708
00:33:59,179 --> 00:34:02,340
these smart devices are deeply

709
00:34:02,340 --> 00:34:07,019
integrated into homes and we should

710
00:34:07,019 --> 00:34:09,659
think about security from the start when

711
00:34:09,659 --> 00:34:12,139
we work with such devices

712
00:34:12,139 --> 00:34:17,280
and yeah there could be like real issues

713
00:34:17,280 --> 00:34:20,639
like the not being able to go out on the

714
00:34:20,639 --> 00:34:21,980
balcony because

715
00:34:21,980 --> 00:34:25,379
you cannot use anything else than the

716
00:34:25,379 --> 00:34:27,119
tablet so this is really like critical

717
00:34:27,119 --> 00:34:28,980
systems

718
00:34:28,980 --> 00:34:30,960
um yeah and if you want more cool

719
00:34:30,960 --> 00:34:33,899
research just put a smart device in a

720
00:34:33,899 --> 00:34:36,060
security researchers home

721
00:34:36,060 --> 00:34:37,739
so thank you and do you have any

722
00:34:37,739 --> 00:34:40,040
questions

723
00:34:46,620 --> 00:34:49,719
[Applause]

724
00:34:55,460 --> 00:34:58,599
[Music]

725
00:35:01,280 --> 00:35:04,080
one question about the recommendation of

726
00:35:04,080 --> 00:35:06,200
being a certificate

727
00:35:06,200 --> 00:35:09,060
wouldn't that have just slow you down if

728
00:35:09,060 --> 00:35:12,480
certificate had been pinned and is it

729
00:35:12,480 --> 00:35:14,880
really a good security practice to win

730
00:35:14,880 --> 00:35:18,060
certificate on the on the app Force

731
00:35:18,060 --> 00:35:21,359
yes certificate pinning can be

732
00:35:21,359 --> 00:35:25,079
considered like security theater so it's

733
00:35:25,079 --> 00:35:27,180
not something that's going to prevent an

734
00:35:27,180 --> 00:35:30,599
attacker from actually getting into the

735
00:35:30,599 --> 00:35:34,200
system however however it's going to

736
00:35:34,200 --> 00:35:36,680
um try to

737
00:35:36,680 --> 00:35:40,260
make it much more difficult for an

738
00:35:40,260 --> 00:35:43,079
attacker to actually uh

739
00:35:43,079 --> 00:35:44,700
get some results

740
00:35:44,700 --> 00:35:48,619
so this has an effect where uh

741
00:35:48,619 --> 00:35:53,099
you may like the attacker may think this

742
00:35:53,099 --> 00:35:56,339
is too much effort to get some results

743
00:35:56,339 --> 00:36:00,259
so this is where it would be effective

744
00:36:00,780 --> 00:36:03,440
thank you

745
00:36:04,079 --> 00:36:06,300
yes hello thank you very much for the

746
00:36:06,300 --> 00:36:07,140
talk

747
00:36:07,140 --> 00:36:10,500
um with regards to uh your research you

748
00:36:10,500 --> 00:36:12,060
mentioned that you connected your

749
00:36:12,060 --> 00:36:14,220
computer to the network where the tablet

750
00:36:14,220 --> 00:36:16,680
was and you then ssh in it with your

751
00:36:16,680 --> 00:36:18,060
phone to send a command to open the

752
00:36:18,060 --> 00:36:20,520
doors and you mentioned that every door

753
00:36:20,520 --> 00:36:21,960
could be open in every building as long

754
00:36:21,960 --> 00:36:23,400
as you are in the same ring Network for

755
00:36:23,400 --> 00:36:24,720
a neighborhood

756
00:36:24,720 --> 00:36:26,280
none of the remediation you mentioned

757
00:36:26,280 --> 00:36:28,320
about could prevent that because it

758
00:36:28,320 --> 00:36:29,640
looks like there was no kind of network

759
00:36:29,640 --> 00:36:31,619
security to prevent someone just

760
00:36:31,619 --> 00:36:33,119
plugging his computer on the network and

761
00:36:33,119 --> 00:36:35,760
just spamming all IP addresses with that

762
00:36:35,760 --> 00:36:38,579
URL and hoping to get it through

763
00:36:38,579 --> 00:36:41,760
yeah that's correct so that is one issue

764
00:36:41,760 --> 00:36:45,000
that I have not checked again if that

765
00:36:45,000 --> 00:36:47,880
has been fixed but

766
00:36:47,880 --> 00:36:49,260
um

767
00:36:49,260 --> 00:36:51,119
right we would have to get an update

768
00:36:51,119 --> 00:36:53,400
from the vendor but I did not get any

769
00:36:53,400 --> 00:36:55,980
update from them about this so right now

770
00:36:55,980 --> 00:36:57,960
it's unclear whether this one has been

771
00:36:57,960 --> 00:36:59,400
patched or not

772
00:36:59,400 --> 00:37:01,980
but so it does confirm also that there

773
00:37:01,980 --> 00:37:04,500
is no whatsoever network security in

774
00:37:04,500 --> 00:37:06,540
place to prevent you to like nmap

775
00:37:06,540 --> 00:37:09,060
scanning brute forcing all kind of

776
00:37:09,060 --> 00:37:10,800
things you could imagine on the open

777
00:37:10,800 --> 00:37:11,760
cable

778
00:37:11,760 --> 00:37:14,880
yeah yeah that's true yeah okay so yeah

779
00:37:14,880 --> 00:37:17,280
very bad smart house I'll go for cabling

780
00:37:17,280 --> 00:37:20,660
stuff thank you

781
00:37:31,680 --> 00:37:34,578
thank you

782
00:37:36,320 --> 00:37:38,940
did you measure the speed of your free

783
00:37:38,940 --> 00:37:41,180
internet access

784
00:37:41,180 --> 00:37:43,980
that's a good question I did not measure

785
00:37:43,980 --> 00:37:46,140
it when but when I talked to the vendor

786
00:37:46,140 --> 00:37:48,480
they said that it was a pretty slow

787
00:37:48,480 --> 00:37:50,400
connection I'm not sure exactly the

788
00:37:50,400 --> 00:37:52,740
numbers but it may have been like 10

789
00:37:52,740 --> 00:37:54,660
megabits per second something like this

790
00:37:54,660 --> 00:37:56,520
so

791
00:37:56,520 --> 00:37:58,380
you could still stream from Netflix

792
00:37:58,380 --> 00:38:00,900
using it I guess

793
00:38:00,900 --> 00:38:03,500
indeed

794
00:38:09,839 --> 00:38:12,500
that's right

795
00:38:16,500 --> 00:38:19,700
it's a screenshot of the updated UE

796
00:38:19,700 --> 00:38:23,220
you shortly flashed has also temperature

797
00:38:23,220 --> 00:38:24,780
controls in it

798
00:38:24,780 --> 00:38:26,880
have you looked how the tablet connects

799
00:38:26,880 --> 00:38:28,680
to the heating

800
00:38:28,680 --> 00:38:31,020
sorry I didn't get what was the last

801
00:38:31,020 --> 00:38:33,119
part of that did you check how the

802
00:38:33,119 --> 00:38:35,040
tablet communicates with the heating and

803
00:38:35,040 --> 00:38:37,859
cooling system of the house yes that's a

804
00:38:37,859 --> 00:38:40,200
good question uh I have not checked

805
00:38:40,200 --> 00:38:42,599
exactly how it works behind the tablet

806
00:38:42,599 --> 00:38:45,480
so there was this chip behind the tablet

807
00:38:45,480 --> 00:38:48,660
but apparently from the documentation I

808
00:38:48,660 --> 00:38:51,839
found on the vendor's website they put

809
00:38:51,839 --> 00:38:54,960
basically a chip behind all of the the

810
00:38:54,960 --> 00:38:57,720
different assets that you can control so

811
00:38:57,720 --> 00:39:00,420
for example for the lights behind the

812
00:39:00,420 --> 00:39:03,119
the switches there's also one of these

813
00:39:03,119 --> 00:39:05,760
chips behind each switch for the lights

814
00:39:05,760 --> 00:39:09,300
but specifically for the heating or how

815
00:39:09,300 --> 00:39:12,359
that works I haven't looked into it

816
00:39:12,359 --> 00:39:15,359
foreign

