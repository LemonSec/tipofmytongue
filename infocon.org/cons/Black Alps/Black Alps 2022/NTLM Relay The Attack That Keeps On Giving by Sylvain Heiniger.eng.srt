1
00:00:04,640 --> 00:00:07,080
thank you very much

2
00:00:07,080 --> 00:00:07,799
um

3
00:00:07,799 --> 00:00:09,720
so my name is Silva Henninger I'm glad

4
00:00:09,720 --> 00:00:11,760
to be here because I'm used to be in

5
00:00:11,760 --> 00:00:13,740
places where people can speak my last

6
00:00:13,740 --> 00:00:16,020
name not my first name here it's the

7
00:00:16,020 --> 00:00:17,340
other way around so it's uh it's nice

8
00:00:17,340 --> 00:00:20,160
for a change and I'm gonna talk to you

9
00:00:20,160 --> 00:00:22,859
today about NCM relay it's a topic I've

10
00:00:22,859 --> 00:00:24,720
been studying a bit in the last three

11
00:00:24,720 --> 00:00:26,220
years and I didn't have the chance to

12
00:00:26,220 --> 00:00:28,740
present it up to this day so

13
00:00:28,740 --> 00:00:31,698
um it's good to be here

14
00:00:31,980 --> 00:00:34,559
um who am I so I'm a security Analyst at

15
00:00:34,559 --> 00:00:36,480
Compass security I do pen testing and

16
00:00:36,480 --> 00:00:39,239
some other stuff and by chance I started

17
00:00:39,239 --> 00:00:41,460
working on Windows a few years ago and I

18
00:00:41,460 --> 00:00:43,800
got interested into this because uh it's

19
00:00:43,800 --> 00:00:46,140
usually misconfigured and it leads to

20
00:00:46,140 --> 00:00:47,579
usually

21
00:00:47,579 --> 00:00:50,039
um quite bad situations

22
00:00:50,039 --> 00:00:52,200
next to that I also do some research at

23
00:00:52,200 --> 00:00:54,480
Compass so I get to see lots of the new

24
00:00:54,480 --> 00:00:56,160
stuff that that's published in the

25
00:00:56,160 --> 00:00:59,460
internet and I sometimes also do red

26
00:00:59,460 --> 00:01:02,280
teaming or application testing

27
00:01:02,280 --> 00:01:04,379
in my free time I like to be outside I

28
00:01:04,379 --> 00:01:06,240
like to not look at screen I like to be

29
00:01:06,240 --> 00:01:08,700
in the forest I like mushrooms and all

30
00:01:08,700 --> 00:01:12,560
kind of nice things you can find outside

31
00:01:13,320 --> 00:01:15,659
if you want to contact me you can send

32
00:01:15,659 --> 00:01:17,460
me on Twitter if Twitter's still exists

33
00:01:17,460 --> 00:01:21,600
tomorrow this is my username

34
00:01:21,600 --> 00:01:23,400
So today we're gonna have a quick

35
00:01:23,400 --> 00:01:26,159
overview of what is MTM relay I'm gonna

36
00:01:26,159 --> 00:01:28,860
um go about the basics Maybe by a quick

37
00:01:28,860 --> 00:01:30,299
show of hands

38
00:01:30,299 --> 00:01:32,939
um who of you is familiar with answering

39
00:01:32,939 --> 00:01:35,460
melee attacks

40
00:01:35,460 --> 00:01:38,159
so a good half of you know what it is

41
00:01:38,159 --> 00:01:40,140
that's good to know

42
00:01:40,140 --> 00:01:41,820
um after talking about the basics we'll

43
00:01:41,820 --> 00:01:43,700
go into the subject of Interest here

44
00:01:43,700 --> 00:01:47,100
relating to RPC so to the Microsoft RPC

45
00:01:47,100 --> 00:01:50,100
protocols and finally I will try to tell

46
00:01:50,100 --> 00:01:52,500
you what you can do after this talk

47
00:01:52,500 --> 00:01:54,180
whether you are a blue team or a red

48
00:01:54,180 --> 00:01:56,399
team here or um

49
00:01:56,399 --> 00:02:00,140
responsible for infrastructure

50
00:02:00,600 --> 00:02:02,880
great so we'll start about the basics

51
00:02:02,880 --> 00:02:05,579
what is ntlm what is internal relay how

52
00:02:05,579 --> 00:02:06,979
does um

53
00:02:06,979 --> 00:02:10,679
authentication work in ad and

54
00:02:10,679 --> 00:02:12,599
um when I Was preparing preparing this

55
00:02:12,599 --> 00:02:14,879
presentation I just typed the title of

56
00:02:14,879 --> 00:02:16,680
this slide and PowerPoint suggests Mrs

57
00:02:16,680 --> 00:02:20,000
nice gif and I thought it's just perfect

58
00:02:20,000 --> 00:02:22,319
now it has nothing to do with what I

59
00:02:22,319 --> 00:02:25,440
want to talk about so let's uh move to a

60
00:02:25,440 --> 00:02:27,720
much more boring slide

61
00:02:27,720 --> 00:02:30,900
um so the active directory is a place in

62
00:02:30,900 --> 00:02:32,580
a Windows environment where you have all

63
00:02:32,580 --> 00:02:34,020
the information stored that everybody

64
00:02:34,020 --> 00:02:36,660
can access and it's used for multiple

65
00:02:36,660 --> 00:02:38,459
things but among other things it's used

66
00:02:38,459 --> 00:02:40,860
so that you don't have to log into every

67
00:02:40,860 --> 00:02:43,680
single service again and again be the

68
00:02:43,680 --> 00:02:45,840
website file share or any other kind of

69
00:02:45,840 --> 00:02:46,920
Windows service

70
00:02:46,920 --> 00:02:49,379
and for this we have two main protocols

71
00:02:49,379 --> 00:02:51,840
and the one on the top is a Kerberos

72
00:02:51,840 --> 00:02:54,300
it's a quite secure protocol I think

73
00:02:54,300 --> 00:02:55,860
it's been developed at MIT it's very

74
00:02:55,860 --> 00:02:57,000
good

75
00:02:57,000 --> 00:02:58,620
um it's represented with the

76
00:02:58,620 --> 00:03:00,060
three-headed dogs which means it's

77
00:03:00,060 --> 00:03:02,160
probably secure right and the one below

78
00:03:02,160 --> 00:03:05,580
is a bit less scary it's called nclm

79
00:03:05,580 --> 00:03:07,379
which stands for new technology land

80
00:03:07,379 --> 00:03:10,440
manager quite ironic it's not so new um

81
00:03:10,440 --> 00:03:12,420
it's actually should not be used since

82
00:03:12,420 --> 00:03:16,319
the 2000 years but uh because

83
00:03:16,319 --> 00:03:19,200
um Microsoft tends to focus on on

84
00:03:19,200 --> 00:03:21,000
backward compatibility and not on

85
00:03:21,000 --> 00:03:25,340
security we still have it to this day

86
00:03:27,000 --> 00:03:28,440
um how does authentication work with

87
00:03:28,440 --> 00:03:31,680
ntlm so you're a user behind this client

88
00:03:31,680 --> 00:03:32,700
you want to connect to a service

89
00:03:32,700 --> 00:03:34,980
anti-server so you tell the server hey I

90
00:03:34,980 --> 00:03:37,200
want to log in the server generates a

91
00:03:37,200 --> 00:03:39,480
challenge and then it asks you to sign

92
00:03:39,480 --> 00:03:40,920
the challenge then you do that you sign

93
00:03:40,920 --> 00:03:43,440
this challenge you send it back and now

94
00:03:43,440 --> 00:03:45,360
this here has to verify if you are you

95
00:03:45,360 --> 00:03:48,060
if your login is correct so

96
00:03:48,060 --> 00:03:49,140
um the server doesn't know your

97
00:03:49,140 --> 00:03:50,819
credentials so he has to ask the domain

98
00:03:50,819 --> 00:03:52,920
controller the domain controller is the

99
00:03:52,920 --> 00:03:55,200
system in uh active directory

100
00:03:55,200 --> 00:03:56,519
environment which has all this

101
00:03:56,519 --> 00:03:58,140
information

102
00:03:58,140 --> 00:04:01,260
so it does exactly that the server after

103
00:04:01,260 --> 00:04:04,140
the the DC if um the sign challenge is

104
00:04:04,140 --> 00:04:06,480
correct and if this is the case and then

105
00:04:06,480 --> 00:04:08,519
it will return it's all good and you'll

106
00:04:08,519 --> 00:04:10,799
be able to use the the service

107
00:04:10,799 --> 00:04:14,220
and um up to this point the the TCP

108
00:04:14,220 --> 00:04:15,720
session basically will be authenticated

109
00:04:15,720 --> 00:04:17,339
and you can do whatever you want with

110
00:04:17,339 --> 00:04:19,380
this service some Services Implement

111
00:04:19,380 --> 00:04:21,779
some further access control but

112
00:04:21,779 --> 00:04:24,060
basically your authenticated up at this

113
00:04:24,060 --> 00:04:26,240
point

114
00:04:26,940 --> 00:04:29,759
um this was the layman terms slide and

115
00:04:29,759 --> 00:04:32,100
and if you look at the on the specs this

116
00:04:32,100 --> 00:04:33,960
is actually how it's called so there are

117
00:04:33,960 --> 00:04:35,759
this three-way hand check as a three

118
00:04:35,759 --> 00:04:37,380
message name negotiate challenge

119
00:04:37,380 --> 00:04:39,960
authenticate and um

120
00:04:39,960 --> 00:04:42,300
sorry the part on the right it's

121
00:04:42,300 --> 00:04:44,639
actually over the net login protocol and

122
00:04:44,639 --> 00:04:46,620
this function is called net error log on

123
00:04:46,620 --> 00:04:50,120
some Logan X how nice

124
00:04:52,139 --> 00:04:54,240
so what can you do over ntlm or which

125
00:04:54,240 --> 00:04:56,520
Protocols are supported it turns on

126
00:04:56,520 --> 00:04:58,320
quite a lot actually again for backward

127
00:04:58,320 --> 00:05:01,199
compatibility so you can visit websites

128
00:05:01,199 --> 00:05:04,139
you can browse shares Etc you can also

129
00:05:04,139 --> 00:05:06,300
browse the active directory itself who

130
00:05:06,300 --> 00:05:09,000
is ldap but also maybe a lesser known

131
00:05:09,000 --> 00:05:12,060
you can also connect to mail server with

132
00:05:12,060 --> 00:05:15,900
IMAP or SMTP to database with Ms SQL or

133
00:05:15,900 --> 00:05:17,580
to our PC and probably there are a lot

134
00:05:17,580 --> 00:05:19,259
more of protocols that I don't know or

135
00:05:19,259 --> 00:05:21,240
maybe you don't know and probably there

136
00:05:21,240 --> 00:05:22,919
are also quite a lot of proprietary

137
00:05:22,919 --> 00:05:25,620
protocol that none of us know and this

138
00:05:25,620 --> 00:05:29,340
is a bit the black box of this uh the

139
00:05:29,340 --> 00:05:31,560
the the Shadow and I would also be

140
00:05:31,560 --> 00:05:33,300
interesting in knowing these protocols

141
00:05:33,300 --> 00:05:36,419
so if you know any more um please get in

142
00:05:36,419 --> 00:05:38,900
touch with me

143
00:05:39,660 --> 00:05:42,000
so let's have a basic example we're

144
00:05:42,000 --> 00:05:44,220
going to talk about SMB so the file

145
00:05:44,220 --> 00:05:45,840
sharing protocol because it's the most

146
00:05:45,840 --> 00:05:48,360
common let's say in the windows World

147
00:05:48,360 --> 00:05:49,740
um and by default as I told you

148
00:05:49,740 --> 00:05:52,639
Microsoft usually go for not security

149
00:05:52,639 --> 00:05:55,199
and so the default setting in Microsoft

150
00:05:55,199 --> 00:05:56,820
is that

151
00:05:56,820 --> 00:05:59,039
um digitally signing communication is

152
00:05:59,039 --> 00:06:01,199
disabled for clients it's only enabled

153
00:06:01,199 --> 00:06:03,360
if the server agrees and for Server it's

154
00:06:03,360 --> 00:06:06,120
enabled only for domain controllers

155
00:06:06,120 --> 00:06:08,460
so basically if a client starts talking

156
00:06:08,460 --> 00:06:10,139
to a server and wants to access a file

157
00:06:10,139 --> 00:06:11,580
share it's not going to have signing by

158
00:06:11,580 --> 00:06:12,479
default

159
00:06:12,479 --> 00:06:14,659
foreign

160
00:06:15,860 --> 00:06:18,720
tester while we are in an internal

161
00:06:18,720 --> 00:06:20,580
Network and we find a server we can

162
00:06:20,580 --> 00:06:22,800
quickly check if this server is or not

163
00:06:22,800 --> 00:06:25,440
vulnerable to this or has a message

164
00:06:25,440 --> 00:06:27,900
signing enabled and if it doesn't

165
00:06:27,900 --> 00:06:30,360
um we'll see what we can do

166
00:06:30,360 --> 00:06:31,860
and what we can do is enter them

167
00:06:31,860 --> 00:06:34,440
relaying or what the surprise

168
00:06:34,440 --> 00:06:37,139
um in ntlm relaying the attacker always

169
00:06:37,139 --> 00:06:38,880
stands in the middle between the client

170
00:06:38,880 --> 00:06:41,220
and the server and how this is done is

171
00:06:41,220 --> 00:06:43,080
actually not the subject of this talk

172
00:06:43,080 --> 00:06:45,360
but it's quite well documented online

173
00:06:45,360 --> 00:06:48,240
and I'm going to quickly mention the

174
00:06:48,240 --> 00:06:51,720
newest stuff is to coerce a client to

175
00:06:51,720 --> 00:06:53,160
authenticate to yourself so there are

176
00:06:53,160 --> 00:06:57,600
quite a lot of tools done to that but

177
00:06:57,600 --> 00:07:00,120
you can actually use any other means

178
00:07:00,120 --> 00:07:02,280
that we know like ARP spoofing any other

179
00:07:02,280 --> 00:07:05,280
classical man in the middle Etc

180
00:07:05,280 --> 00:07:06,960
so let's assume we can be in the middle

181
00:07:06,960 --> 00:07:08,819
and the client tries to authenticate to

182
00:07:08,819 --> 00:07:11,819
us instead of a server uh sends the

183
00:07:11,819 --> 00:07:13,560
first message what we do

184
00:07:13,560 --> 00:07:16,259
surprise again we relay so we just sent

185
00:07:16,259 --> 00:07:19,139
this message further to a server of our

186
00:07:19,139 --> 00:07:20,580
choice

187
00:07:20,580 --> 00:07:23,280
and uh the server does its job it sends

188
00:07:23,280 --> 00:07:25,139
the challenge back we send it back Etc

189
00:07:25,139 --> 00:07:28,380
it gets encrypted and the third message

190
00:07:28,380 --> 00:07:30,960
gets relayed again

191
00:07:30,960 --> 00:07:33,539
you get what happens at this point the

192
00:07:33,539 --> 00:07:35,160
server tells us okay your access is

193
00:07:35,160 --> 00:07:37,680
granted and what do we do as an attacker

194
00:07:37,680 --> 00:07:39,120
we in the middle

195
00:07:39,120 --> 00:07:40,680
um we have now this session with the

196
00:07:40,680 --> 00:07:42,599
server which is authenticated and what

197
00:07:42,599 --> 00:07:44,639
we do we tell the client sorry it didn't

198
00:07:44,639 --> 00:07:48,360
work so that it stops bothering us

199
00:07:48,360 --> 00:07:51,780
and as I mentioned up to this point we

200
00:07:51,780 --> 00:07:53,280
can abuse the connection so we have a

201
00:07:53,280 --> 00:07:55,139
session with this server over whichever

202
00:07:55,139 --> 00:07:57,960
protocol in this case SMB we exploited

203
00:07:57,960 --> 00:08:00,180
and we can do everything uh in the name

204
00:08:00,180 --> 00:08:01,860
of the client

205
00:08:01,860 --> 00:08:03,539
so if it's a simple user maybe we'll

206
00:08:03,539 --> 00:08:05,520
only be able to see some file uh if

207
00:08:05,520 --> 00:08:07,860
there is a file share but if it has some

208
00:08:07,860 --> 00:08:10,860
more privilege we might be able to edit

209
00:08:10,860 --> 00:08:15,500
configuration execute code etc etc

210
00:08:17,039 --> 00:08:19,020
uh what about session signing so I told

211
00:08:19,020 --> 00:08:20,520
you by default there is no session

212
00:08:20,520 --> 00:08:22,259
signing in SMB but you can activate it

213
00:08:22,259 --> 00:08:23,699
that's a great feature you should do it

214
00:08:23,699 --> 00:08:25,800
and what happens if there is session

215
00:08:25,800 --> 00:08:27,599
signing the client send the same message

216
00:08:27,599 --> 00:08:29,460
the server generates the same challenge

217
00:08:29,460 --> 00:08:32,700
up to this point the same but

218
00:08:32,700 --> 00:08:34,620
um when the client received the

219
00:08:34,620 --> 00:08:37,020
challenge on top of signing this

220
00:08:37,020 --> 00:08:39,120
challenge it generates a session key and

221
00:08:39,120 --> 00:08:40,500
the session key is based on the

222
00:08:40,500 --> 00:08:43,740
challenge and on the client's Secret

223
00:08:43,740 --> 00:08:45,600
so the basically the password of the

224
00:08:45,600 --> 00:08:47,160
user

225
00:08:47,160 --> 00:08:49,920
and this point it sends the the third

226
00:08:49,920 --> 00:08:52,740
message normally and the server asks for

227
00:08:52,740 --> 00:08:54,480
the uh ask the domain controller again

228
00:08:54,480 --> 00:08:57,480
for the um validity of the logon and

229
00:08:57,480 --> 00:08:58,740
here the domain controller can do

230
00:08:58,740 --> 00:09:00,240
exactly the same thing because the

231
00:09:00,240 --> 00:09:02,399
server tells him what's the challenge

232
00:09:02,399 --> 00:09:05,160
and the DC has the credential of the

233
00:09:05,160 --> 00:09:07,260
user so that's easy it generates the

234
00:09:07,260 --> 00:09:09,240
same session key sends it back to the

235
00:09:09,240 --> 00:09:11,459
server and from this point on the client

236
00:09:11,459 --> 00:09:13,560
and the server share a key

237
00:09:13,560 --> 00:09:15,360
this is only going to be used for

238
00:09:15,360 --> 00:09:17,339
signing but it's enough to prevent a

239
00:09:17,339 --> 00:09:18,600
relay attack

240
00:09:18,600 --> 00:09:21,540
so as of at this point the client is

241
00:09:21,540 --> 00:09:22,860
going to sign the further packet with

242
00:09:22,860 --> 00:09:25,500
this session key which allows him to

243
00:09:25,500 --> 00:09:27,440
access the service and allows to

244
00:09:27,440 --> 00:09:30,740
authenticate the message

245
00:09:31,800 --> 00:09:34,140
so what happened if we try to do a enter

246
00:09:34,140 --> 00:09:36,899
emerging attack with session signing

247
00:09:36,899 --> 00:09:38,700
um let's keep about the thing we know

248
00:09:38,700 --> 00:09:40,260
about

249
00:09:40,260 --> 00:09:42,540
everything work up to this point and now

250
00:09:42,540 --> 00:09:44,459
we are at this point where we have this

251
00:09:44,459 --> 00:09:47,279
authenticated session and the client and

252
00:09:47,279 --> 00:09:49,200
the server share this secret but we as

253
00:09:49,200 --> 00:09:50,580
an attacker don't have it because we

254
00:09:50,580 --> 00:09:52,440
don't know we know the challenge but we

255
00:09:52,440 --> 00:09:53,940
don't know the use password

256
00:09:53,940 --> 00:09:55,680
so when we try to update the connection

257
00:09:55,680 --> 00:09:57,240
here it's not going to work because we

258
00:09:57,240 --> 00:09:59,399
can assign the message the server is

259
00:09:59,399 --> 00:10:01,680
going to check the signature and it's

260
00:10:01,680 --> 00:10:03,899
going to answer hey sorry uh you're not

261
00:10:03,899 --> 00:10:05,760
who you're supposed to be

262
00:10:05,760 --> 00:10:07,920
so that's a great feature it works um

263
00:10:07,920 --> 00:10:10,440
and you should enable it

264
00:10:10,440 --> 00:10:12,240
so this is how you do it these are the

265
00:10:12,240 --> 00:10:15,120
four gpos in Windows how you can enable

266
00:10:15,120 --> 00:10:16,860
this and

267
00:10:16,860 --> 00:10:19,380
um this is a good idea to do but

268
00:10:19,380 --> 00:10:20,040
um

269
00:10:20,040 --> 00:10:22,080
we as an attacker are looking to wait to

270
00:10:22,080 --> 00:10:24,779
bypass that so what do we do if in an

271
00:10:24,779 --> 00:10:26,339
infrastructure we find servers where

272
00:10:26,339 --> 00:10:28,860
signing is enabled everywhere

273
00:10:28,860 --> 00:10:31,560
well solution is easy we try to relate

274
00:10:31,560 --> 00:10:33,000
to other protocols which don't have

275
00:10:33,000 --> 00:10:34,920
signing

276
00:10:34,920 --> 00:10:36,899
I already mentioned some other protocols

277
00:10:36,899 --> 00:10:38,160
before

278
00:10:38,160 --> 00:10:40,440
um some of them don't support signing

279
00:10:40,440 --> 00:10:43,399
some of them do

280
00:10:45,779 --> 00:10:47,760
so let's start with ldap and ldap S

281
00:10:47,760 --> 00:10:49,380
because this is the one that supports

282
00:10:49,380 --> 00:10:51,120
signing and has a settings that you can

283
00:10:51,120 --> 00:10:52,500
set for it so you should also do that

284
00:10:52,500 --> 00:10:54,899
and this is easy and then it's done and

285
00:10:54,899 --> 00:10:57,720
then we have have HTTP and https HTTP

286
00:10:57,720 --> 00:11:00,779
does not support signing and cannot

287
00:11:00,779 --> 00:11:02,940
so this is this will always be a target

288
00:11:02,940 --> 00:11:04,740
of choice for us

289
00:11:04,740 --> 00:11:06,300
um https is a bit of special case

290
00:11:06,300 --> 00:11:07,920
because there is

291
00:11:07,920 --> 00:11:09,959
um a protection called EPA extend and

292
00:11:09,959 --> 00:11:12,480
protected the extended protected

293
00:11:12,480 --> 00:11:14,100
authentication or something like that

294
00:11:14,100 --> 00:11:18,000
it's also called Channel binding

295
00:11:18,000 --> 00:11:19,320
um and then we have all the other one

296
00:11:19,320 --> 00:11:22,019
which actually either they don't have a

297
00:11:22,019 --> 00:11:24,180
signing or only in some cases or it's

298
00:11:24,180 --> 00:11:26,760
not well documented Etc

299
00:11:26,760 --> 00:11:29,399
and one of these is Ms RPC and I got

300
00:11:29,399 --> 00:11:31,200
interested into that because

301
00:11:31,200 --> 00:11:32,940
um we were talking with colleagues

302
00:11:32,940 --> 00:11:35,040
during a break and we're seeing quite a

303
00:11:35,040 --> 00:11:37,500
lot of connection uh to our computers in

304
00:11:37,500 --> 00:11:40,200
a in a client environment from a

305
00:11:40,200 --> 00:11:42,899
monitoring solution over RPC and so we

306
00:11:42,899 --> 00:11:44,399
got to wonder

307
00:11:44,399 --> 00:11:46,560
um is it possible to relay this can we

308
00:11:46,560 --> 00:11:49,019
um use this RPC connection to connect to

309
00:11:49,019 --> 00:11:51,000
other people

310
00:11:51,000 --> 00:11:54,360
and as you can guess the answer is yes

311
00:11:54,360 --> 00:11:56,579
you can do it this way but you can also

312
00:11:56,579 --> 00:11:58,260
um relay any kind of connection you

313
00:11:58,260 --> 00:12:02,880
receive be it SMB or HTTP Etc to RPC and

314
00:12:02,880 --> 00:12:05,279
this is what I'm gonna talk about right

315
00:12:05,279 --> 00:12:07,459
now

316
00:12:08,100 --> 00:12:09,600
so I'm gonna first give you a quick

317
00:12:09,600 --> 00:12:12,899
intro to what is um RPC and then I'm

318
00:12:12,899 --> 00:12:14,940
going to talk about two cve

319
00:12:14,940 --> 00:12:19,320
um in 2020 and 2221 and finally some new

320
00:12:19,320 --> 00:12:21,600
attack paths that I discovered in the

321
00:12:21,600 --> 00:12:24,320
last past weeks

322
00:12:24,320 --> 00:12:27,300
so msrpc this is the slide I have with

323
00:12:27,300 --> 00:12:28,920
most tech story

324
00:12:28,920 --> 00:12:30,240
um it's just definition it's not very

325
00:12:30,240 --> 00:12:32,120
exciting but basically it's about

326
00:12:32,120 --> 00:12:34,320
executing code on the not the machine

327
00:12:34,320 --> 00:12:36,120
that's not yours

328
00:12:36,120 --> 00:12:37,860
um we need a solution for that so there

329
00:12:37,860 --> 00:12:40,200
is some standards the one that we are

330
00:12:40,200 --> 00:12:43,560
interested in here is dce RPC which is

331
00:12:43,560 --> 00:12:45,779
actually Modified by Microsoft in the

332
00:12:45,779 --> 00:12:48,180
msrpc protocol

333
00:12:48,180 --> 00:12:50,579
how does this work on the network layer

334
00:12:50,579 --> 00:12:53,459
in Windows there is a port 135 that's

335
00:12:53,459 --> 00:12:54,720
used for that

336
00:12:54,720 --> 00:12:57,360
um but RPC can also be called over SMB

337
00:12:57,360 --> 00:13:00,860
so you can also talk to RPC interfaces

338
00:13:00,860 --> 00:13:04,740
via SMB over name types

339
00:13:04,740 --> 00:13:08,339
and if you connect to the port 135 it's

340
00:13:08,339 --> 00:13:10,680
uh it's not actually you're not going to

341
00:13:10,680 --> 00:13:11,880
be able to directly talk to the

342
00:13:11,880 --> 00:13:13,920
interfaces you're interested in but you

343
00:13:13,920 --> 00:13:17,100
have to ask first nicely to RPC

344
00:13:17,100 --> 00:13:18,959
um where you can connect to the

345
00:13:18,959 --> 00:13:20,100
interface

346
00:13:20,100 --> 00:13:21,779
so I'm talking about interfaces what are

347
00:13:21,779 --> 00:13:24,180
interfaces are these are basically all

348
00:13:24,180 --> 00:13:27,120
the possible rpcs functionalities that

349
00:13:27,120 --> 00:13:29,519
are offered by the server and you can

350
00:13:29,519 --> 00:13:31,800
register it as many as you want on the

351
00:13:31,800 --> 00:13:34,680
server and of course Windows has some

352
00:13:34,680 --> 00:13:36,120
typical ones which are going to be

353
00:13:36,120 --> 00:13:38,519
available on servers

354
00:13:38,519 --> 00:13:40,440
okay

355
00:13:40,440 --> 00:13:43,440
then about security of msrpc

356
00:13:43,440 --> 00:13:45,300
um msrpc is a standard Windows protocol

357
00:13:45,300 --> 00:13:47,760
so it supports the Standard Security

358
00:13:47,760 --> 00:13:50,459
providers what is of interest of us of

359
00:13:50,459 --> 00:13:53,339
course is that RPC supports ntlm so we

360
00:13:53,339 --> 00:13:54,839
are happy

361
00:13:54,839 --> 00:13:56,760
and then we have some authentication

362
00:13:56,760 --> 00:13:59,399
level as they are called in RPC and you

363
00:13:59,399 --> 00:14:00,600
see that there are quite a lot of them

364
00:14:00,600 --> 00:14:03,120
but basically what interest what

365
00:14:03,120 --> 00:14:05,579
interests us is that there is

366
00:14:05,579 --> 00:14:07,320
it's not here

367
00:14:07,320 --> 00:14:10,440
um there is one that's called connect

368
00:14:10,440 --> 00:14:12,060
this one is connect

369
00:14:12,060 --> 00:14:13,920
which is basically only authentication

370
00:14:13,920 --> 00:14:17,339
and no form of no form of relay

371
00:14:17,339 --> 00:14:19,740
protection and then starting with packet

372
00:14:19,740 --> 00:14:21,779
which is actually a synonym for coal we

373
00:14:21,779 --> 00:14:24,240
have a prevention for Relay attack so

374
00:14:24,240 --> 00:14:27,060
it's going to be secured against inter

375
00:14:27,060 --> 00:14:29,599
milane

376
00:14:30,360 --> 00:14:32,040
so let's summarize we have a protocol

377
00:14:32,040 --> 00:14:34,920
which supports ntlm we have no

378
00:14:34,920 --> 00:14:36,720
authentication level globally and forced

379
00:14:36,720 --> 00:14:38,579
because each interface can actually

380
00:14:38,579 --> 00:14:40,560
choose if it wants to have this

381
00:14:40,560 --> 00:14:42,240
authentication level or data connection

382
00:14:42,240 --> 00:14:45,899
level and we have some interesting use

383
00:14:45,899 --> 00:14:50,519
case maybe so we have to look into this

384
00:14:50,519 --> 00:14:52,920
different interfaces to find if they

385
00:14:52,920 --> 00:14:54,899
enforce or not signing and if we can

386
00:14:54,899 --> 00:14:58,500
exploit them in until I'm relay attack

387
00:14:58,500 --> 00:14:59,940
so what did I do

388
00:14:59,940 --> 00:15:01,740
um I thought okay I want to read it to

389
00:15:01,740 --> 00:15:03,240
RPC

390
00:15:03,240 --> 00:15:04,500
um where do I start there are quite a

391
00:15:04,500 --> 00:15:07,260
lot of interfaces supported by Microsoft

392
00:15:07,260 --> 00:15:10,019
and um but what I wanted to do or what I

393
00:15:10,019 --> 00:15:11,699
want to do as an attacker is have the

394
00:15:11,699 --> 00:15:13,139
most impact so I looked at the stuff

395
00:15:13,139 --> 00:15:16,440
that um that makes damage I started with

396
00:15:16,440 --> 00:15:20,339
Sam R which is the remote some protocol

397
00:15:20,339 --> 00:15:22,500
Security account manager this allows you

398
00:15:22,500 --> 00:15:24,180
to access credentials on a remote

399
00:15:24,180 --> 00:15:27,360
machine or create new accounts Etc so

400
00:15:27,360 --> 00:15:28,560
this is what's used when you do a

401
00:15:28,560 --> 00:15:30,959
nets.xa on a Windows machine

402
00:15:30,959 --> 00:15:33,839
and um basically I went through the

403
00:15:33,839 --> 00:15:35,459
windows documentation which is a bit

404
00:15:35,459 --> 00:15:38,220
painful but actually not so bad and if

405
00:15:38,220 --> 00:15:39,660
you go to the documentation you found

406
00:15:39,660 --> 00:15:40,860
out that

407
00:15:40,860 --> 00:15:43,139
um the server should reject call that do

408
00:15:43,139 --> 00:15:44,820
not use an authentication level of

409
00:15:44,820 --> 00:15:48,420
either none or a packet privacy

410
00:15:48,420 --> 00:15:50,220
and here you might think hey none is

411
00:15:50,220 --> 00:15:52,019
interesting no but it's actually not

412
00:15:52,019 --> 00:15:55,019
none is only going to be used if it's

413
00:15:55,019 --> 00:15:57,420
over SMB name type and we don't want to

414
00:15:57,420 --> 00:16:00,060
relate to SMB we want to relay over RPC

415
00:16:00,060 --> 00:16:02,820
so this is of no interest to us and

416
00:16:02,820 --> 00:16:06,000
packet privacy as you can remember this

417
00:16:06,000 --> 00:16:08,480
is one of the authentication level which

418
00:16:08,480 --> 00:16:11,639
provides replay protection so it's

419
00:16:11,639 --> 00:16:13,740
actually not interesting for us

420
00:16:13,740 --> 00:16:15,540
so bad luck this is not exploitable

421
00:16:15,540 --> 00:16:18,180
inner until I'm relay attack and we are

422
00:16:18,180 --> 00:16:19,920
gonna have to look further

423
00:16:19,920 --> 00:16:22,139
another one that might be interesting is

424
00:16:22,139 --> 00:16:24,420
the directory replication service

425
00:16:24,420 --> 00:16:27,240
protocol so this one is used for domain

426
00:16:27,240 --> 00:16:29,880
controllers to synchronize it's also

427
00:16:29,880 --> 00:16:32,699
known as a decision attack so if we

428
00:16:32,699 --> 00:16:35,399
could exploit that then we could if we

429
00:16:35,399 --> 00:16:37,079
could relay the authentication of a

430
00:16:37,079 --> 00:16:38,339
domain controller then we can have

431
00:16:38,339 --> 00:16:40,620
access to all the credentials of the

432
00:16:40,620 --> 00:16:42,600
domain this would be awesome

433
00:16:42,600 --> 00:16:45,120
so we look at the documentation again it

434
00:16:45,120 --> 00:16:47,160
says DC client must request integrity

435
00:16:47,160 --> 00:16:49,399
and encryption that sounds quite bad

436
00:16:49,399 --> 00:16:51,660
apparently they thought about that and

437
00:16:51,660 --> 00:16:54,240
and the request here um the highest

438
00:16:54,240 --> 00:16:56,459
authentication level

439
00:16:56,459 --> 00:16:58,500
so this doesn't work I looked at a few

440
00:16:58,500 --> 00:17:00,060
other one but I'm gonna spare you all

441
00:17:00,060 --> 00:17:01,980
the documentation

442
00:17:01,980 --> 00:17:04,679
um all the way to the com protocol

443
00:17:04,679 --> 00:17:06,299
this was interesting to me because it's

444
00:17:06,299 --> 00:17:07,500
used for

445
00:17:07,500 --> 00:17:10,740
um uh for remote Administration so if

446
00:17:10,740 --> 00:17:13,199
you open a nmc console for example on

447
00:17:13,199 --> 00:17:14,579
Windows and you connect to a remote

448
00:17:14,579 --> 00:17:16,319
server then it's going to use the common

449
00:17:16,319 --> 00:17:19,319
protocol or the dcom protocol

450
00:17:19,319 --> 00:17:21,540
um so maybe if we can relate to that we

451
00:17:21,540 --> 00:17:23,099
can also do some bad stuff on a remote

452
00:17:23,099 --> 00:17:24,240
computer

453
00:17:24,240 --> 00:17:25,500
and here

454
00:17:25,500 --> 00:17:27,900
it's not so clear as the two previous

455
00:17:27,900 --> 00:17:29,820
examples we don't have anything in the

456
00:17:29,820 --> 00:17:32,280
documentation that allows you to to know

457
00:17:32,280 --> 00:17:36,360
if it's or not requiring uh

458
00:17:36,360 --> 00:17:37,140
um

459
00:17:37,140 --> 00:17:39,539
a secure authentication level

460
00:17:39,539 --> 00:17:42,900
so maybe and I try to write a book for

461
00:17:42,900 --> 00:17:44,940
that but it was a bit complicated

462
00:17:44,940 --> 00:17:46,260
because um

463
00:17:46,260 --> 00:17:48,840
to be able to use the the com interfaces

464
00:17:48,840 --> 00:17:50,460
you need to use a protocol overcome

465
00:17:50,460 --> 00:17:53,100
afterwards and this means in our RPC you

466
00:17:53,100 --> 00:17:55,380
have to re-authenticate and so I had to

467
00:17:55,380 --> 00:17:57,360
relay twice to the same interface with

468
00:17:57,360 --> 00:17:59,520
the same user it was complicated back in

469
00:17:59,520 --> 00:18:00,360
days

470
00:18:00,360 --> 00:18:03,360
um but you'll see that this gets easier

471
00:18:03,360 --> 00:18:06,059
after a year

472
00:18:06,059 --> 00:18:07,740
so I went further because this was a bit

473
00:18:07,740 --> 00:18:09,600
too complicated for me I'm also not a

474
00:18:09,600 --> 00:18:12,120
developer so I'm really bad I'm at

475
00:18:12,120 --> 00:18:14,220
writing code so my code was so buggy I

476
00:18:14,220 --> 00:18:17,580
stopped but I stumbled upon the task

477
00:18:17,580 --> 00:18:19,740
scheduler service and the remoting

478
00:18:19,740 --> 00:18:20,700
protocol

479
00:18:20,700 --> 00:18:22,740
this allows you to schedule tasks

480
00:18:22,740 --> 00:18:24,419
remotely on the Windows machine so this

481
00:18:24,419 --> 00:18:26,100
sounds pretty promising if you can

482
00:18:26,100 --> 00:18:27,720
relate to that and you have the right

483
00:18:27,720 --> 00:18:29,760
privileges you can execute code on the

484
00:18:29,760 --> 00:18:31,080
remote machine

485
00:18:31,080 --> 00:18:34,140
and here the documentation says the

486
00:18:34,140 --> 00:18:36,419
client must use a notification level of

487
00:18:36,419 --> 00:18:39,120
packet privacy so that's bad right

488
00:18:39,120 --> 00:18:40,380
but

489
00:18:40,380 --> 00:18:42,480
um it's only the client that must use to

490
00:18:42,480 --> 00:18:45,179
the server doesn't have any requirement

491
00:18:45,179 --> 00:18:48,179
maybe it's still interesting

492
00:18:48,179 --> 00:18:49,919
so it turns out

493
00:18:49,919 --> 00:18:51,720
otherwise I won't be here I wouldn't be

494
00:18:51,720 --> 00:18:54,539
here and this is exploitable and the

495
00:18:54,539 --> 00:18:56,340
server doesn't have or didn't have back

496
00:18:56,340 --> 00:18:58,200
in the days uh minimum multiplication

497
00:18:58,200 --> 00:19:01,080
level requirement

498
00:19:01,080 --> 00:19:04,140
so how did that went down uh this was

499
00:19:04,140 --> 00:19:06,179
back in 2020 but as I said I didn't have

500
00:19:06,179 --> 00:19:08,460
a chance to present until now I found

501
00:19:08,460 --> 00:19:10,440
that in January I made a small Puck

502
00:19:10,440 --> 00:19:13,140
using um impacket

503
00:19:13,140 --> 00:19:15,780
I submitted the bug to Microsoft they

504
00:19:15,780 --> 00:19:17,580
were quite quick in reacting and told me

505
00:19:17,580 --> 00:19:19,740
they could report this and this would be

506
00:19:19,740 --> 00:19:20,940
fixed

507
00:19:20,940 --> 00:19:23,100
and a few weeks after I got a nice mail

508
00:19:23,100 --> 00:19:25,200
that said I I would be awarded the

509
00:19:25,200 --> 00:19:27,620
bounty

510
00:19:27,840 --> 00:19:29,580
um see if you could assigned and he got

511
00:19:29,580 --> 00:19:31,080
patched after a few months though and

512
00:19:31,080 --> 00:19:33,900
this went pretty smoothly and

513
00:19:33,900 --> 00:19:36,299
um starting uh in May it's not possible

514
00:19:36,299 --> 00:19:39,059
to exploit this anymore

515
00:19:39,059 --> 00:19:42,059
so this is pretty good they fixed this

516
00:19:42,059 --> 00:19:44,760
but I also told them in the in the in

517
00:19:44,760 --> 00:19:47,460
the boundary in the bug report that

518
00:19:47,460 --> 00:19:49,260
um actually there is no Global

519
00:19:49,260 --> 00:19:52,559
requirement for authentication level so

520
00:19:52,559 --> 00:19:54,480
um this is a puck for the task scheduler

521
00:19:54,480 --> 00:19:55,919
service but probably there are more

522
00:19:55,919 --> 00:19:57,600
interfaces which are available to that

523
00:19:57,600 --> 00:20:01,260
and as you can see or as what they did

524
00:20:01,260 --> 00:20:02,700
in the fix they just fixed the task

525
00:20:02,700 --> 00:20:05,280
calendar thing so like maybe this would

526
00:20:05,280 --> 00:20:08,160
still be interesting to look into

527
00:20:08,160 --> 00:20:10,260
and actually I also wrote that in a blog

528
00:20:10,260 --> 00:20:12,840
post on our blog so it was also public

529
00:20:12,840 --> 00:20:14,160
for everyone

530
00:20:14,160 --> 00:20:16,080
and um

531
00:20:16,080 --> 00:20:18,299
so one year one year later I still I I

532
00:20:18,299 --> 00:20:21,179
had some more time to do research and I

533
00:20:21,179 --> 00:20:24,000
looked into this com protocol that gave

534
00:20:24,000 --> 00:20:25,980
me a headache a year before and I

535
00:20:25,980 --> 00:20:27,240
thought hey maybe I can do the same

536
00:20:27,240 --> 00:20:29,419
again

537
00:20:30,179 --> 00:20:30,720
um

538
00:20:30,720 --> 00:20:33,539
turned out it was a bit easier than the

539
00:20:33,539 --> 00:20:35,520
year before because in between there was

540
00:20:35,520 --> 00:20:37,500
they had some there had been some

541
00:20:37,500 --> 00:20:39,660
changes in impact and somebody very

542
00:20:39,660 --> 00:20:41,640
clever implemented

543
00:20:41,640 --> 00:20:43,500
um

544
00:20:43,500 --> 00:20:46,020
um some kind of functionality to be able

545
00:20:46,020 --> 00:20:47,520
to relay multiple times the same

546
00:20:47,520 --> 00:20:49,260
authentication from a client so

547
00:20:49,260 --> 00:20:51,600
basically at the end of the

548
00:20:51,600 --> 00:20:53,940
three-way handshake instead of telling

549
00:20:53,940 --> 00:20:55,860
the client hey sorry access denied you

550
00:20:55,860 --> 00:20:57,480
would tell him please re-authenticate

551
00:20:57,480 --> 00:20:59,340
and there is a special message in SMB

552
00:20:59,340 --> 00:21:01,260
for that and the client would actually

553
00:21:01,260 --> 00:21:03,539
do that so this is cool because it

554
00:21:03,539 --> 00:21:06,059
allows you in a Anthem relay attack to

555
00:21:06,059 --> 00:21:07,620
not only target one server with one

556
00:21:07,620 --> 00:21:09,660
authentication but multiple server or

557
00:21:09,660 --> 00:21:11,520
multiple protocol over the same server

558
00:21:11,520 --> 00:21:12,720
etc etc

559
00:21:12,720 --> 00:21:14,640
in my case it was interesting because I

560
00:21:14,640 --> 00:21:17,039
had to re-authenticate twice for this

561
00:21:17,039 --> 00:21:19,260
so I could actually use that

562
00:21:19,260 --> 00:21:21,960
and you can do actually the same with

563
00:21:21,960 --> 00:21:23,580
the HTTP protocol at the end of the

564
00:21:23,580 --> 00:21:26,280
login phase you can send a redirect to

565
00:21:26,280 --> 00:21:28,200
the user and this will lead to a second

566
00:21:28,200 --> 00:21:30,419
execution

567
00:21:30,419 --> 00:21:32,960
so this led to a second CV

568
00:21:32,960 --> 00:21:36,059
but you will see this is not mine so I

569
00:21:36,059 --> 00:21:38,760
found that in June in 2021 I wrote a

570
00:21:38,760 --> 00:21:39,780
park

571
00:21:39,780 --> 00:21:42,900
it worked and then I tested it on the

572
00:21:42,900 --> 00:21:44,940
Azure lab because I thought it better if

573
00:21:44,940 --> 00:21:47,159
I test it on an up-to-date machine and

574
00:21:47,159 --> 00:21:48,840
it didn't work anymore

575
00:21:48,840 --> 00:21:51,240
so I spent some time looking to this I

576
00:21:51,240 --> 00:21:52,740
looked at all the config that could have

577
00:21:52,740 --> 00:21:53,940
done wrong and that I could have done

578
00:21:53,940 --> 00:21:56,159
wrong but it was really not possible to

579
00:21:56,159 --> 00:21:58,679
exploit that so um it turned out it had

580
00:21:58,679 --> 00:21:59,820
been fixed

581
00:21:59,820 --> 00:22:02,159
and indeed there was a CV in the

582
00:22:02,159 --> 00:22:04,620
beginning of June it was fixed fixed on

583
00:22:04,620 --> 00:22:05,940
a patch Tuesday

584
00:22:05,940 --> 00:22:08,340
but the hardening was disabled by

585
00:22:08,340 --> 00:22:10,799
default so it was fixed but still not

586
00:22:10,799 --> 00:22:13,140
not fixed for everyone

587
00:22:13,140 --> 00:22:15,000
it was fixed for me on Azure because the

588
00:22:15,000 --> 00:22:17,580
Azure VM are hardened by default so it

589
00:22:17,580 --> 00:22:18,720
was a

590
00:22:18,720 --> 00:22:20,820
I was lucky to be to be able to find

591
00:22:20,820 --> 00:22:23,159
that on Azure lab otherwise I would have

592
00:22:23,159 --> 00:22:24,960
to do I would have had to do a bug

593
00:22:24,960 --> 00:22:27,600
report for nothing

594
00:22:27,600 --> 00:22:29,460
um but yeah up to this point it was

595
00:22:29,460 --> 00:22:31,860
somehow fixed and then the patch

596
00:22:31,860 --> 00:22:33,539
timeline that that they decided to go

597
00:22:33,539 --> 00:22:35,159
for is that

598
00:22:35,159 --> 00:22:37,140
um during one year the hardening would

599
00:22:37,140 --> 00:22:38,940
be disabled by default

600
00:22:38,940 --> 00:22:41,100
um in June this year the hardening was

601
00:22:41,100 --> 00:22:43,020
enabled by default so if you have an

602
00:22:43,020 --> 00:22:45,299
up-to-date Windows Server now

603
00:22:45,299 --> 00:22:47,580
um it should not be able uh possible to

604
00:22:47,580 --> 00:22:49,620
relate to Decon

605
00:22:49,620 --> 00:22:50,760
um anymore

606
00:22:50,760 --> 00:22:52,799
but there is still a registered key to

607
00:22:52,799 --> 00:22:54,960
disable it so all the software vendors

608
00:22:54,960 --> 00:22:56,940
which did not have time to update their

609
00:22:56,940 --> 00:22:59,100
software yet uh still have a chance to

610
00:22:59,100 --> 00:23:01,980
do that and this is the case in until

611
00:23:01,980 --> 00:23:05,179
March next year

612
00:23:06,480 --> 00:23:09,299
um I also contacted the the author of

613
00:23:09,299 --> 00:23:12,299
this CV and um he did a Defcon talk

614
00:23:12,299 --> 00:23:14,520
about this so if this is of interest to

615
00:23:14,520 --> 00:23:17,520
you you can also go and uh look into

616
00:23:17,520 --> 00:23:19,700
that

617
00:23:20,520 --> 00:23:25,559
so what happens before March 23 well if

618
00:23:25,559 --> 00:23:27,659
you have a default Windows

619
00:23:27,659 --> 00:23:30,240
I did a small script to be able to check

620
00:23:30,240 --> 00:23:32,340
if this integrity was present or not so

621
00:23:32,340 --> 00:23:34,980
it's called decom Integrity check it

622
00:23:34,980 --> 00:23:37,799
will just try to authenticate using the

623
00:23:37,799 --> 00:23:40,260
packet Integrity uh authentication level

624
00:23:40,260 --> 00:23:41,400
and then using the connect

625
00:23:41,400 --> 00:23:43,679
authentication level and in a default

626
00:23:43,679 --> 00:23:45,419
setup you will have this message which

627
00:23:45,419 --> 00:23:47,640
says seems like it's configured

628
00:23:47,640 --> 00:23:48,600
correctly

629
00:23:48,600 --> 00:23:52,020
if you set this bypass key to zero then

630
00:23:52,020 --> 00:23:55,440
you will be able to connect with the

631
00:23:55,440 --> 00:23:57,419
authentication level connect and this

632
00:23:57,419 --> 00:23:58,860
means it might be possible to really

633
00:23:58,860 --> 00:24:03,780
over g-com until March 2023

634
00:24:03,780 --> 00:24:07,500
this small script is on my uh in on my

635
00:24:07,500 --> 00:24:10,020
GitHub it's a small gist also I

636
00:24:10,020 --> 00:24:11,580
encourage you to

637
00:24:11,580 --> 00:24:14,940
modify impact in packet is so this is

638
00:24:14,940 --> 00:24:17,580
based on the impact and it's really easy

639
00:24:17,580 --> 00:24:20,159
to modify and easy to make such a small

640
00:24:20,159 --> 00:24:22,260
Scripts

641
00:24:22,260 --> 00:24:24,360
now we're going to come to the newest

642
00:24:24,360 --> 00:24:25,919
things which is a bit more uh

643
00:24:25,919 --> 00:24:27,840
interesting maybe

644
00:24:27,840 --> 00:24:30,120
um and this is the icert passage remote

645
00:24:30,120 --> 00:24:32,159
protocol so probably lots of you have

646
00:24:32,159 --> 00:24:34,380
heard of the research from the Specter

647
00:24:34,380 --> 00:24:36,120
Ops on active directory certificate

648
00:24:36,120 --> 00:24:38,100
services and this made it quite a lot of

649
00:24:38,100 --> 00:24:40,860
noise and we actually use that almost

650
00:24:40,860 --> 00:24:43,860
weekly to compromise our clients

651
00:24:43,860 --> 00:24:45,960
to help them get better

652
00:24:45,960 --> 00:24:46,880
um

653
00:24:46,880 --> 00:24:49,440
so this is quite interesting and it is

654
00:24:49,440 --> 00:24:52,020
usually to a quick pre-ask because if

655
00:24:52,020 --> 00:24:54,780
you can forge certificates then you can

656
00:24:54,780 --> 00:24:57,720
quickly impersonate other users

657
00:24:57,720 --> 00:25:00,059
so I looked into the I3 passage protocol

658
00:25:00,059 --> 00:25:02,880
which is basically the protocol which is

659
00:25:02,880 --> 00:25:06,240
used by machines and users to request a

660
00:25:06,240 --> 00:25:08,940
new certificate over RPC

661
00:25:08,940 --> 00:25:10,919
and again I had to dig into the

662
00:25:10,919 --> 00:25:12,659
documentation but if you look in there

663
00:25:12,659 --> 00:25:15,240
you see that there is a flag it's called

664
00:25:15,240 --> 00:25:17,880
enforce encrypt I search request

665
00:25:17,880 --> 00:25:21,059
and if this flag is set and packet

666
00:25:21,059 --> 00:25:23,640
privacy authentication level is not

667
00:25:23,640 --> 00:25:26,039
specified it's really perfect wording in

668
00:25:26,039 --> 00:25:28,799
this Con documentation then this year

669
00:25:28,799 --> 00:25:30,659
you must refuse so if you take all the

670
00:25:30,659 --> 00:25:33,059
navigation into account this means

671
00:25:33,059 --> 00:25:35,760
uh it's exploitable for us we can do

672
00:25:35,760 --> 00:25:38,820
antelope relay if the enforce encrypt I

673
00:25:38,820 --> 00:25:42,539
search request flag is not set

674
00:25:42,539 --> 00:25:45,299
so that's quite cool and uh what can we

675
00:25:45,299 --> 00:25:47,520
do if we relate to this protocol well we

676
00:25:47,520 --> 00:25:50,100
can basically request a certificate

677
00:25:50,100 --> 00:25:52,500
um for the user we relay and this allows

678
00:25:52,500 --> 00:25:56,279
us to further use his identity to do bad

679
00:25:56,279 --> 00:25:58,440
stuff

680
00:25:58,440 --> 00:26:00,840
now does this happen in practice that

681
00:26:00,840 --> 00:26:03,720
this flag is not set well sadly it's set

682
00:26:03,720 --> 00:26:06,539
by default or fortunately for you it's

683
00:26:06,539 --> 00:26:08,940
set by default since Windows Server 2012

684
00:26:08,940 --> 00:26:10,919
so this is one of the few cases where

685
00:26:10,919 --> 00:26:13,320
Windows is secure by default that's

686
00:26:13,320 --> 00:26:14,760
great

687
00:26:14,760 --> 00:26:17,400
um but there is always a but it prevents

688
00:26:17,400 --> 00:26:19,260
Windows XP machines from requesting

689
00:26:19,260 --> 00:26:21,059
certificates because it's not Backward

690
00:26:21,059 --> 00:26:22,440
Compatible

691
00:26:22,440 --> 00:26:24,600
and maybe you're going to tell me there

692
00:26:24,600 --> 00:26:26,640
is not any Windows XP machines anymore

693
00:26:26,640 --> 00:26:28,620
out there

694
00:26:28,620 --> 00:26:31,919
but I guess some of you know there are

695
00:26:31,919 --> 00:26:34,440
still Windows XP machines out there and

696
00:26:34,440 --> 00:26:36,720
probably they do also need certificates

697
00:26:36,720 --> 00:26:39,059
so we actually saw this setting at

698
00:26:39,059 --> 00:26:41,760
clients where this flag was not set

699
00:26:41,760 --> 00:26:43,980
probably for compatibility reasons or

700
00:26:43,980 --> 00:26:47,220
maybe because the ca server was upgraded

701
00:26:47,220 --> 00:26:50,960
for from a previous windows version

702
00:26:51,200 --> 00:26:53,520
so this is actually this attack is quite

703
00:26:53,520 --> 00:26:55,440
similar to the one that Spectra device

704
00:26:55,440 --> 00:26:57,679
one of their escalation of spiritual

705
00:26:57,679 --> 00:27:00,840
attacks it's called S8

706
00:27:00,840 --> 00:27:02,820
um when you can enter them relate to an

707
00:27:02,820 --> 00:27:04,440
active directory certificate Services

708
00:27:04,440 --> 00:27:07,559
HTTP endpoint as I mentioned in in the

709
00:27:07,559 --> 00:27:10,320
beginning HTTP does not support

710
00:27:10,320 --> 00:27:12,659
um session signing so you can do that

711
00:27:12,659 --> 00:27:15,360
and if you can do that it's the same use

712
00:27:15,360 --> 00:27:17,640
case you can afford the certificate or

713
00:27:17,640 --> 00:27:20,820
get a certificate for the user and my

714
00:27:20,820 --> 00:27:23,400
proposal is to divide this new attack

715
00:27:23,400 --> 00:27:26,400
S11 because there has been a S9 and 10

716
00:27:26,400 --> 00:27:27,960
in the middle

717
00:27:27,960 --> 00:27:28,620
um

718
00:27:28,620 --> 00:27:33,678
so NCM related to adcs icpr endpoint

719
00:27:34,260 --> 00:27:35,880
um how can you know if this is a

720
00:27:35,880 --> 00:27:38,700
vulnerable at your company or if you do

721
00:27:38,700 --> 00:27:40,980
pen tests like I do well you can use

722
00:27:40,980 --> 00:27:43,080
search Pi I did a small Fork of 30 Pi

723
00:27:43,080 --> 00:27:44,760
which calls fetch this flag and tells

724
00:27:44,760 --> 00:27:47,340
you if it's set or not

725
00:27:47,340 --> 00:27:49,860
um this is a great tool by uh Olivier

726
00:27:49,860 --> 00:27:52,440
Oliver liak which allows you to to dump

727
00:27:52,440 --> 00:27:55,320
the the rdcs configuration so it will

728
00:27:55,320 --> 00:27:58,620
use a another protocol over our RPC CSRA

729
00:27:58,620 --> 00:28:02,400
and to do that or the remote registry

730
00:28:02,400 --> 00:28:04,679
protocol if it cannot over CSRA but this

731
00:28:04,679 --> 00:28:07,380
is not so important and it will tell you

732
00:28:07,380 --> 00:28:09,960
if the enforce encryption for request is

733
00:28:09,960 --> 00:28:12,240
enabled or disabled if it's disabled

734
00:28:12,240 --> 00:28:13,980
it's gonna also tell you hey there is an

735
00:28:13,980 --> 00:28:16,260
ASC 11 vulnerability

736
00:28:16,260 --> 00:28:18,480
and this means you can relate to

737
00:28:18,480 --> 00:28:19,380
um

738
00:28:19,380 --> 00:28:22,980
the ca server over RPC

739
00:28:22,980 --> 00:28:24,900
how would you do that

740
00:28:24,900 --> 00:28:27,480
um I also made a fork off and telemly X

741
00:28:27,480 --> 00:28:30,059
of impact to be able to do that so you

742
00:28:30,059 --> 00:28:33,720
can now specify your RPC mode icpr and

743
00:28:33,720 --> 00:28:35,520
you have to specify here the name of the

744
00:28:35,520 --> 00:28:38,400
ca but this allows you to relay any

745
00:28:38,400 --> 00:28:40,340
authentication to

746
00:28:40,340 --> 00:28:43,140
icpr over RPC

747
00:28:43,140 --> 00:28:44,820
so basically this is a standard

748
00:28:44,820 --> 00:28:46,919
anti-memory attack so you wait you start

749
00:28:46,919 --> 00:28:48,360
to your server and you wait until a

750
00:28:48,360 --> 00:28:50,340
client connects to you and as soon as

751
00:28:50,340 --> 00:28:52,140
the client connects to you

752
00:28:52,140 --> 00:28:53,940
uh you will try to authenticate to the

753
00:28:53,940 --> 00:28:57,000
ca or RPC if you're lucky this works and

754
00:28:57,000 --> 00:28:58,980
then you will get a certificate for this

755
00:28:58,980 --> 00:28:59,880
user

756
00:28:59,880 --> 00:29:02,039
I didn't do any Fancy videos because I

757
00:29:02,039 --> 00:29:04,500
I'm afraid of this stuff but this is the

758
00:29:04,500 --> 00:29:06,360
best I can do

759
00:29:06,360 --> 00:29:07,440
so at this point you have the

760
00:29:07,440 --> 00:29:09,360
certificate for the user and you can use

761
00:29:09,360 --> 00:29:11,820
that to connect to all kinds of

762
00:29:11,820 --> 00:29:15,360
protocols on Windows or to get his ntlm

763
00:29:15,360 --> 00:29:17,658
hash

764
00:29:18,240 --> 00:29:20,880
if you're interested in using this tool

765
00:29:20,880 --> 00:29:23,520
they are also on my GitHub and I also

766
00:29:23,520 --> 00:29:25,440
published a blog post today about this

767
00:29:25,440 --> 00:29:26,880
so you can also get all the information

768
00:29:26,880 --> 00:29:30,179
there and I will do a pull request for

769
00:29:30,179 --> 00:29:31,559
both of these tools I didn't get to it

770
00:29:31,559 --> 00:29:34,320
yet but I will do that as soon as I get

771
00:29:34,320 --> 00:29:37,220
back to the office

772
00:29:38,340 --> 00:29:39,960
so this was

773
00:29:39,960 --> 00:29:42,600
um basically it about this new attack

774
00:29:42,600 --> 00:29:45,720
over RPC now um what can you do so I'm

775
00:29:45,720 --> 00:29:47,159
gonna quickly talk about what you can do

776
00:29:47,159 --> 00:29:49,380
if you're uh if you're a bad guy and you

777
00:29:49,380 --> 00:29:51,059
want to really enter them what you can

778
00:29:51,059 --> 00:29:52,559
do if you want to mitigate this or if

779
00:29:52,559 --> 00:29:54,539
you want to detect this

780
00:29:54,539 --> 00:29:56,640
so if you're a bad guy and I talked

781
00:29:56,640 --> 00:29:58,320
today about these three protocols in red

782
00:29:58,320 --> 00:29:59,880
that you can probably not read but that

783
00:29:59,880 --> 00:30:01,080
doesn't matter

784
00:30:01,080 --> 00:30:02,580
um I also mentioned the few ones in

785
00:30:02,580 --> 00:30:04,320
green that you maybe you can also not

786
00:30:04,320 --> 00:30:06,059
read but that doesn't matter but there

787
00:30:06,059 --> 00:30:08,159
are quite a lot of protocols in Windows

788
00:30:08,159 --> 00:30:10,320
not all of them are over RPC but maybe

789
00:30:10,320 --> 00:30:12,899
some of them are subject to enter memory

790
00:30:12,899 --> 00:30:15,480
so I really encourage you to go out

791
00:30:15,480 --> 00:30:18,059
there and try some protocols modify in

792
00:30:18,059 --> 00:30:19,799
packets it's fun

793
00:30:19,799 --> 00:30:22,440
um and maybe you find something fun

794
00:30:22,440 --> 00:30:24,240
otherwise if you want to stay to the

795
00:30:24,240 --> 00:30:27,960
classical anterior I find this diagram

796
00:30:27,960 --> 00:30:31,860
from shutdown repo to be the the best

797
00:30:31,860 --> 00:30:33,840
um it clearly says how you can coerce

798
00:30:33,840 --> 00:30:36,899
ntlm what you can do depending on on

799
00:30:36,899 --> 00:30:38,820
what settings you have to what you can

800
00:30:38,820 --> 00:30:40,260
relay Etc

801
00:30:40,260 --> 00:30:43,080
and my plan would be to add oops sorry

802
00:30:43,080 --> 00:30:45,059
to add the protocols that are missing

803
00:30:45,059 --> 00:30:47,039
here but I also didn't get the chance to

804
00:30:47,039 --> 00:30:49,919
do that yet so um if I find the time I

805
00:30:49,919 --> 00:30:51,059
would add here

806
00:30:51,059 --> 00:30:54,299
um RPC but also Ms SQL which I find is

807
00:30:54,299 --> 00:30:56,399
also an interesting Target in enter

808
00:30:56,399 --> 00:30:58,760
memory

809
00:30:59,340 --> 00:31:01,080
mitigation this is going to be boring

810
00:31:01,080 --> 00:31:03,600
but I'm obliged to do that you have to

811
00:31:03,600 --> 00:31:06,419
patch your windows it's not a very new

812
00:31:06,419 --> 00:31:08,520
but you should do it then you should

813
00:31:08,520 --> 00:31:10,799
enforce bucket signing so for SMB ldap

814
00:31:10,799 --> 00:31:13,559
and channel binding there are some GPS

815
00:31:13,559 --> 00:31:16,559
you can deploy it's not so uh

816
00:31:16,559 --> 00:31:18,419
it's not so difficult although there

817
00:31:18,419 --> 00:31:21,539
might be side effects of course then two

818
00:31:21,539 --> 00:31:23,460
kind of best practice could help a least

819
00:31:23,460 --> 00:31:25,140
privileged Network segmentation we had

820
00:31:25,140 --> 00:31:27,299
some case in pen test where everything

821
00:31:27,299 --> 00:31:28,980
was vulnerable but because of

822
00:31:28,980 --> 00:31:30,840
segmentation it did not work so this

823
00:31:30,840 --> 00:31:32,700
could save your ass

824
00:31:32,700 --> 00:31:35,159
and finally my last but maybe not the

825
00:31:35,159 --> 00:31:37,559
least recommendation stop using ntlm so

826
00:31:37,559 --> 00:31:40,020
this is an old protocol I told you it

827
00:31:40,020 --> 00:31:42,000
should be out out of the window since

828
00:31:42,000 --> 00:31:44,820
2000 but it's still used

829
00:31:44,820 --> 00:31:46,500
um there are good guys online how you

830
00:31:46,500 --> 00:31:49,860
can slowly decrease your dependency to

831
00:31:49,860 --> 00:31:52,500
this and possibly stop using it all

832
00:31:52,500 --> 00:31:54,679
together

833
00:31:55,200 --> 00:31:57,659
if you're in a blue team you might want

834
00:31:57,659 --> 00:31:59,760
to detect some of these things so the

835
00:31:59,760 --> 00:32:01,200
dcom relay

836
00:32:01,200 --> 00:32:03,659
um Microsoft make a new event for that

837
00:32:03,659 --> 00:32:06,960
so if somebody tries to relate to gcom

838
00:32:06,960 --> 00:32:09,419
and doesn't have the RPC awesome level

839
00:32:09,419 --> 00:32:11,399
packet Integrity

840
00:32:11,399 --> 00:32:12,899
um authentication level then it's going

841
00:32:12,899 --> 00:32:15,179
to raise an alert so if you ever see

842
00:32:15,179 --> 00:32:16,620
that it means either you have an

843
00:32:16,620 --> 00:32:18,659
application which doesn't support

844
00:32:18,659 --> 00:32:19,260
um

845
00:32:19,260 --> 00:32:21,000
the newer authentication level or

846
00:32:21,000 --> 00:32:23,880
somebody is gonna is trying to to mess

847
00:32:23,880 --> 00:32:26,299
with you

848
00:32:26,700 --> 00:32:29,340
detecting the active directory privilege

849
00:32:29,340 --> 00:32:31,679
escalation is already quite well

850
00:32:31,679 --> 00:32:33,600
documented but here just as a reminder

851
00:32:33,600 --> 00:32:37,320
you can audit Certificate request and

852
00:32:37,320 --> 00:32:39,779
probably you should and so if you see a

853
00:32:39,779 --> 00:32:42,179
request for a domain admin for a new

854
00:32:42,179 --> 00:32:43,740
certificate maybe you should raise an

855
00:32:43,740 --> 00:32:45,720
alert especially if you can create this

856
00:32:45,720 --> 00:32:47,880
with the logon and the logon is from

857
00:32:47,880 --> 00:32:50,220
another workstation that you don't know

858
00:32:50,220 --> 00:32:52,380
then it should raise all kind of red

859
00:32:52,380 --> 00:32:54,860
flags

860
00:32:55,820 --> 00:32:59,100
relay is also it's also able to to

861
00:32:59,100 --> 00:33:02,480
detect that so in the Windows login

862
00:33:02,480 --> 00:33:06,299
audit you find always the name of the

863
00:33:06,299 --> 00:33:09,120
workstation from we from other

864
00:33:09,120 --> 00:33:09,679
um

865
00:33:09,679 --> 00:33:12,059
the logon came and also the source

866
00:33:12,059 --> 00:33:13,919
Network address so if they if these two

867
00:33:13,919 --> 00:33:17,100
mismatch this is a good indicator that

868
00:33:17,100 --> 00:33:19,080
somebody is trying to do antelam relay

869
00:33:19,080 --> 00:33:21,419
or something else in your network is

870
00:33:21,419 --> 00:33:22,559
strange

871
00:33:22,559 --> 00:33:24,000
but basically

872
00:33:24,000 --> 00:33:26,940
um I'm an advocate for disabled ntlms so

873
00:33:26,940 --> 00:33:30,019
you don't have to worry about that

874
00:33:30,840 --> 00:33:32,940
last but not least I want to thank

875
00:33:32,940 --> 00:33:35,279
everybody that helped in this research

876
00:33:35,279 --> 00:33:37,679
so my colleague at Compass security

877
00:33:37,679 --> 00:33:39,299
um the nice developers of impact and

878
00:33:39,299 --> 00:33:41,820
certify on which I could

879
00:33:41,820 --> 00:33:43,980
um on which shoulder I could stand

880
00:33:43,980 --> 00:33:47,179
everybody that did research in this area

881
00:33:47,179 --> 00:33:50,100
so I put a few names here but of course

882
00:33:50,100 --> 00:33:52,080
some are missing so sorry if I missed

883
00:33:52,080 --> 00:33:53,279
you

884
00:33:53,279 --> 00:33:54,720
um thanks for the nice conference and

885
00:33:54,720 --> 00:33:56,880
thank you for your attention

886
00:33:56,880 --> 00:33:58,740
if you have some questions I would be

887
00:33:58,740 --> 00:34:00,470
happy to answer them

888
00:34:00,470 --> 00:34:03,769
[Applause]

889
00:34:07,410 --> 00:34:11,150
[Applause]

890
00:34:12,980 --> 00:34:15,179
but if you want to go eat I also

891
00:34:15,179 --> 00:34:17,839
understand it's okay

892
00:34:20,699 --> 00:34:23,178
awesome

893
00:34:28,440 --> 00:34:31,800
good to then enjoy your lunch

894
00:34:31,800 --> 00:34:34,500
oh there is a question

895
00:34:34,500 --> 00:34:36,780
sorry you have to wait a minute

896
00:34:36,780 --> 00:34:39,000
um what's the relation between Microsoft

897
00:34:39,000 --> 00:34:41,219
RPC and Vin RM

898
00:34:41,219 --> 00:34:44,820
we know Windows Remote Management

899
00:34:44,820 --> 00:34:45,780
um

900
00:34:45,780 --> 00:34:48,599
if I'm remembering correctly windrm is

901
00:34:48,599 --> 00:34:51,899
working over HTTP so it's actually not

902
00:34:51,899 --> 00:34:55,399
using RPC at all

903
00:34:56,460 --> 00:34:58,619
or https

904
00:34:58,619 --> 00:35:02,000
if it's well configured

905
00:35:11,220 --> 00:35:13,260
hey thank you

906
00:35:13,260 --> 00:35:15,420
um one question I have you uh in the

907
00:35:15,420 --> 00:35:17,460
introduction you noticed you also do red

908
00:35:17,460 --> 00:35:19,859
teaming how much success do you have

909
00:35:19,859 --> 00:35:24,540
with ntlm over C2 channels I know there

910
00:35:24,540 --> 00:35:26,400
are some methods with

911
00:35:26,400 --> 00:35:29,040
Ford forwarding and import Pender and

912
00:35:29,040 --> 00:35:31,800
such but maybe you can add something

913
00:35:31,800 --> 00:35:34,619
here thank you

914
00:35:34,619 --> 00:35:37,200
um also until today I didn't have to

915
00:35:37,200 --> 00:35:40,079
resort to that so if I can try to avoid

916
00:35:40,079 --> 00:35:41,940
doing all kind of weird thing opening

917
00:35:41,940 --> 00:35:44,640
ports and forwarding them I will do and

918
00:35:44,640 --> 00:35:46,500
usually I go for the low hanging fruits

919
00:35:46,500 --> 00:35:50,160
and there are quite a lot of them so I

920
00:35:50,160 --> 00:35:52,859
never had to do that I've I know it's

921
00:35:52,859 --> 00:35:54,900
possible some some in some cases usually

922
00:35:54,900 --> 00:35:56,460
you have to if you want to do and

923
00:35:56,460 --> 00:35:58,079
terminally from a Windows workstation

924
00:35:58,079 --> 00:35:59,700
you have to be admin on there to be able

925
00:35:59,700 --> 00:36:03,900
to bend the ports and do the relaying so

926
00:36:03,900 --> 00:36:05,940
um I never really

927
00:36:05,940 --> 00:36:08,099
went through all the trouble to do that

928
00:36:08,099 --> 00:36:09,900
but uh yeah it's possible so there is

929
00:36:09,900 --> 00:36:13,579
also uh stuff to do there

930
00:36:17,880 --> 00:36:20,460
small question here

931
00:36:20,460 --> 00:36:23,520
there was no logo no name no website for

932
00:36:23,520 --> 00:36:25,320
those vulnerabilities

933
00:36:25,320 --> 00:36:27,240
is this how you do disclosure in 20

934
00:36:27,240 --> 00:36:30,500
times 22.

935
00:36:30,780 --> 00:36:32,940
so the question is if I have a logo and

936
00:36:32,940 --> 00:36:34,640
a website for the vulnerability

937
00:36:34,640 --> 00:36:37,200
so I did a nice blog post on our blog

938
00:36:37,200 --> 00:36:39,540
this is all I'm gonna do

939
00:36:39,540 --> 00:36:41,220
but I'm gonna think about it if you have

940
00:36:41,220 --> 00:36:45,140
logo ideas just send them to me

941
00:36:46,680 --> 00:36:48,839
we read read sometimes about the future

942
00:36:48,839 --> 00:36:50,520
for quick do you think that's going to

943
00:36:50,520 --> 00:36:51,839
be your new

944
00:36:51,839 --> 00:36:54,359
um attack service

945
00:36:54,359 --> 00:36:57,300
that's a very outside of my uh comfort

946
00:36:57,300 --> 00:36:59,460
zone I'm not even sure if you can do

947
00:36:59,460 --> 00:37:01,740
antenna real quick I hope not as I

948
00:37:01,740 --> 00:37:03,359
mentioned and tell them is all then

949
00:37:03,359 --> 00:37:07,339
quick is new so you should not mix that

950
00:37:13,320 --> 00:37:15,619
foreign

