1
00:00:00,000 --> 00:00:08,540
<font color="#E5E5E5">all set</font><font color="#CCCCCC"> alright alright welcome everyone</font>

2
00:00:09,080 --> 00:00:14,610
to the Sunday morning talks

3
00:00:11,370 --> 00:00:17,850
sure you're all<font color="#E5E5E5"> alert no</font><font color="#CCCCCC"> wake off the</font>

4
00:00:14,610 --> 00:00:22,230
<font color="#E5E5E5">coffee good so this talk is called</font>

5
00:00:17,850 --> 00:00:24,869
beyond off<font color="#E5E5E5"> top</font><font color="#CCCCCC"> ten before I discuss what</font>

6
00:00:22,230 --> 00:00:25,590
it's a boat<font color="#CCCCCC"> I'll get into</font><font color="#E5E5E5"> Who I am</font><font color="#CCCCCC"> cause</font>

7
00:00:24,869 --> 00:00:27,900
<font color="#CCCCCC">of me</font>

8
00:00:25,590 --> 00:00:29,759
my name<font color="#E5E5E5"> is</font><font color="#CCCCCC"> Erin nattu</font><font color="#E5E5E5"> you can reach out</font>

9
00:00:27,900 --> 00:00:33,360
to<font color="#E5E5E5"> me on Twitter</font><font color="#CCCCCC"> it's at inspector with</font>

10
00:00:29,760 --> 00:00:35,070
a<font color="#E5E5E5"> three and an re previously right now I</font>

11
00:00:33,360 --> 00:00:38,129
am a senior<font color="#E5E5E5"> security</font><font color="#CCCCCC"> researcher at</font>

12
00:00:35,070 --> 00:00:40,770
security compass<font color="#CCCCCC"> before that I've been</font>

13
00:00:38,129 --> 00:00:44,760
in a number<font color="#CCCCCC"> of roles across security and</font>

14
00:00:40,770 --> 00:00:46,620
IT<font color="#CCCCCC"> I am a software developer now I do a</font>

15
00:00:44,760 --> 00:00:49,710
lot of<font color="#CCCCCC"> open-source security reviews as</font>

16
00:00:46,620 --> 00:00:52,530
well<font color="#CCCCCC"> right some security tools</font><font color="#E5E5E5"> I was a</font>

17
00:00:49,710 --> 00:00:56,100
<font color="#E5E5E5">security consultant system administrator</font>

18
00:00:52,530 --> 00:00:59,070
network engineer developer<font color="#CCCCCC"> college</font>

19
00:00:56,100 --> 00:01:01,140
professor the professor<font color="#E5E5E5"> part kind</font><font color="#CCCCCC"> of</font>

20
00:00:59,070 --> 00:01:03,899
comes into<font color="#E5E5E5"> play</font><font color="#CCCCCC"> here because Musil</font>

21
00:01:01,140 --> 00:01:07,110
<font color="#E5E5E5">putting together classes for</font><font color="#CCCCCC"> three hours</font>

22
00:01:03,899 --> 00:01:09,240
and trying to condense that down to 50

23
00:01:07,110 --> 00:01:11,880
<font color="#CCCCCC">minutes is kind of difficult so if i go</font>

24
00:01:09,240 --> 00:01:13,110
quickly<font color="#CCCCCC"> I apologize in advance but we're</font>

25
00:01:11,880 --> 00:01:15,210
recording it<font color="#E5E5E5"> so if you need</font><font color="#CCCCCC"> to go out</font>

26
00:01:13,110 --> 00:01:17,820
later<font color="#E5E5E5"> that's fine and after the talk</font><font color="#CCCCCC"> if</font>

27
00:01:15,210 --> 00:01:19,320
<font color="#CCCCCC">you need if you want</font><font color="#E5E5E5"> slides if you want</font>

28
00:01:17,820 --> 00:01:21,089
some some<font color="#E5E5E5"> more detailed</font><font color="#CCCCCC"> information</font>

29
00:01:19,320 --> 00:01:23,039
<font color="#E5E5E5">please</font><font color="#CCCCCC"> come</font><font color="#E5E5E5"> up to me you can always</font>

30
00:01:21,090 --> 00:01:24,750
reach out<font color="#E5E5E5"> to me on</font><font color="#CCCCCC"> Twitter I</font><font color="#E5E5E5"> don't</font>

31
00:01:23,040 --> 00:01:26,729
answer the<font color="#E5E5E5"> taco give you my my contact</font>

32
00:01:24,750 --> 00:01:29,130
info<font color="#CCCCCC"> too</font><font color="#E5E5E5"> so you can review it</font><font color="#CCCCCC"> a little</font>

33
00:01:26,729 --> 00:01:32,340
bit<font color="#E5E5E5"> more so let's start what</font><font color="#CCCCCC"> is this</font>

34
00:01:29,130 --> 00:01:35,039
talk actually<font color="#E5E5E5"> a vote this talk is about</font>

35
00:01:32,340 --> 00:01:36,600
<font color="#CCCCCC">Oh often more specifically OAuth top ten</font>

36
00:01:35,040 --> 00:01:38,400
for those of you that aren't familiar

37
00:01:36,600 --> 00:01:39,240
with<font color="#CCCCCC"> it the top ten it's kind of the de</font>

38
00:01:38,400 --> 00:01:40,860
facto

39
00:01:39,240 --> 00:01:42,539
reference<font color="#E5E5E5"> that we give to developers</font>

40
00:01:40,860 --> 00:01:44,310
usually<font color="#E5E5E5"> or we use ourselves weren't</font>

41
00:01:42,540 --> 00:01:46,950
discussing<font color="#E5E5E5"> web application</font>

42
00:01:44,310 --> 00:01:49,049
vulnerabilities typically<font color="#E5E5E5"> what it is is</font>

43
00:01:46,950 --> 00:01:50,820
<font color="#CCCCCC">basically the top ten most common web</font>

44
00:01:49,049 --> 00:01:52,979
security<font color="#E5E5E5"> vulnerabilities are security</font>

45
00:01:50,820 --> 00:01:56,008
vulnerabilities<font color="#E5E5E5"> and web application</font><font color="#CCCCCC"> it</font>

46
00:01:52,979 --> 00:01:57,810
was the last full release was in 2013

47
00:01:56,009 --> 00:01:59,460
<font color="#E5E5E5">there's a release</font><font color="#CCCCCC"> candidates come out</font>

48
00:01:57,810 --> 00:02:06,540
this year<font color="#E5E5E5"> but I'll get more into</font><font color="#CCCCCC"> that</font>

49
00:01:59,460 --> 00:02:08,369
<font color="#E5E5E5">later so I'll go</font><font color="#CCCCCC"> over</font><font color="#E5E5E5"> the top ten but</font>

50
00:02:06,540 --> 00:02:12,110
you'll see it's used it's basically a

51
00:02:08,369 --> 00:02:13,250
categories of web vulnerabilities and

52
00:02:12,110 --> 00:02:14,660
typically<font color="#E5E5E5"> what happens is not only is it</font>

53
00:02:13,250 --> 00:02:17,240
<font color="#E5E5E5">a reference for developers but it's a</font>

54
00:02:14,660 --> 00:02:18,500
<font color="#E5E5E5">reference for us for pen testers and and</font>

55
00:02:17,240 --> 00:02:19,970
when we're<font color="#CCCCCC"> when we're trying</font><font color="#E5E5E5"> to help</font>

56
00:02:18,500 --> 00:02:21,950
developers<font color="#E5E5E5"> is we categorize a lot of</font>

57
00:02:19,970 --> 00:02:24,050
vulnerabilities through these things and

58
00:02:21,950 --> 00:02:25,609
and what<font color="#E5E5E5"> the talk kind of goes over is</font>

59
00:02:24,050 --> 00:02:30,140
is three different<font color="#CCCCCC"> vulnerabilities that</font>

60
00:02:25,610 --> 00:02:32,270
<font color="#E5E5E5">don't fit within those categories</font><font color="#CCCCCC"> so it</font>

61
00:02:30,140 --> 00:02:33,589
to show<font color="#E5E5E5"> that there's more than</font><font color="#CCCCCC"> just the</font>

62
00:02:32,270 --> 00:02:35,570
top<font color="#CCCCCC"> pen so I'm going to go over</font><font color="#E5E5E5"> first</font>

63
00:02:33,590 --> 00:02:37,190
the top<font color="#CCCCCC"> ten briefly for those of you</font>

64
00:02:35,570 --> 00:02:38,540
<font color="#E5E5E5">that have not seen it before</font><font color="#CCCCCC"> first</font><font color="#E5E5E5"> one's</font>

65
00:02:37,190 --> 00:02:40,520
<font color="#CCCCCC">injection</font><font color="#E5E5E5"> so think like sequel injection</font>

66
00:02:38,540 --> 00:02:44,480
where you can inject code and it gets

67
00:02:40,520 --> 00:02:45,740
executed<font color="#E5E5E5"> really</font><font color="#CCCCCC"> behind the</font><font color="#E5E5E5"> scenes broken</font>

68
00:02:44,480 --> 00:02:48,079
authentication and session management<font color="#E5E5E5"> if</font>

69
00:02:45,740 --> 00:02:49,610
you<font color="#E5E5E5"> can take</font><font color="#CCCCCC"> over</font><font color="#E5E5E5"> a session and</font>

70
00:02:48,080 --> 00:02:50,420
authentication doesn't work it falls

71
00:02:49,610 --> 00:02:52,340
under<font color="#E5E5E5"> this</font><font color="#CCCCCC"> category</font>

72
00:02:50,420 --> 00:02:54,079
<font color="#E5E5E5">third one is cross-site scripting pretty</font>

73
00:02:52,340 --> 00:02:55,940
pretty familiar<font color="#CCCCCC"> to bless you I'm sure</font>

74
00:02:54,080 --> 00:02:57,620
<font color="#CCCCCC">but it's basically allowing you to as an</font>

75
00:02:55,940 --> 00:03:00,500
attacker<font color="#E5E5E5"> can execute malicious scripts</font>

76
00:02:57,620 --> 00:03:03,530
<font color="#CCCCCC">javascript usually in a</font><font color="#E5E5E5"> client in a</font>

77
00:03:00,500 --> 00:03:05,150
user's browser or insecure<font color="#E5E5E5"> directory</font>

78
00:03:03,530 --> 00:03:07,310
object reference this<font color="#E5E5E5"> basically means if</font>

79
00:03:05,150 --> 00:03:08,930
<font color="#E5E5E5">you can if you</font><font color="#CCCCCC"> see if</font><font color="#E5E5E5"> you can</font><font color="#CCCCCC"> reference</font>

80
00:03:07,310 --> 00:03:11,150
object you're not supposed to access

81
00:03:08,930 --> 00:03:13,790
just<font color="#CCCCCC"> by its identifier with their name</font>

82
00:03:11,150 --> 00:03:16,190
<font color="#E5E5E5">any kind of other acts of controls</font><font color="#CCCCCC"> to</font>

83
00:03:13,790 --> 00:03:17,660
<font color="#CCCCCC">its that's known as an ID or</font><font color="#E5E5E5"> and then</font>

84
00:03:16,190 --> 00:03:19,340
the security<font color="#E5E5E5"> misconfigurations number</font>

85
00:03:17,660 --> 00:03:21,320
five this<font color="#E5E5E5"> is pretty broad catch-all</font><font color="#CCCCCC"> it</font>

86
00:03:19,340 --> 00:03:24,049
means you're<font color="#CCCCCC"> not using whatever systems</font>

87
00:03:21,320 --> 00:03:27,200
in place properly<font color="#CCCCCC"> so an example</font><font color="#E5E5E5"> of that</font>

88
00:03:24,049 --> 00:03:29,030
is is like<font color="#E5E5E5"> MongoDB by default we there</font>

89
00:03:27,200 --> 00:03:32,119
is<font color="#E5E5E5"> no password on MongoDB so if you open</font>

90
00:03:29,030 --> 00:03:35,060
it<font color="#E5E5E5"> up to the</font><font color="#CCCCCC"> web then your MongoDB your</font>

91
00:03:32,120 --> 00:03:36,890
database is<font color="#CCCCCC"> giving it owned the last</font>

92
00:03:35,060 --> 00:03:40,100
five sensitive data exposure<font color="#E5E5E5"> you're not</font>

93
00:03:36,890 --> 00:03:41,899
encrypting at rest or<font color="#E5E5E5"> in transit</font><font color="#CCCCCC"> missing</font>

94
00:03:40,100 --> 00:03:43,310
function level access control<font color="#E5E5E5"> so if you</font>

95
00:03:41,900 --> 00:03:45,320
don't have<font color="#E5E5E5"> proper</font><font color="#CCCCCC"> access control to</font>

96
00:03:43,310 --> 00:03:47,600
execute a<font color="#CCCCCC"> particular function</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> just</font>

97
00:03:45,320 --> 00:03:49,250
like get<font color="#CCCCCC"> it to a place</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> to perform</font>

98
00:03:47,600 --> 00:03:52,370
<font color="#CCCCCC">like an admin function for example</font><font color="#E5E5E5"> that</font>

99
00:03:49,250 --> 00:03:53,980
<font color="#E5E5E5">would</font><font color="#CCCCCC"> be classified with this there's</font>

100
00:03:52,370 --> 00:03:56,840
also the cross-site request forgery

101
00:03:53,980 --> 00:03:59,840
<font color="#E5E5E5">which is a another example</font><font color="#CCCCCC"> of an attack</font>

102
00:03:56,840 --> 00:04:01,970
where you can force a<font color="#CCCCCC"> client's</font><font color="#E5E5E5"> browser</font>

103
00:03:59,840 --> 00:04:04,880
to make or client to<font color="#E5E5E5"> make a request to</font>

104
00:04:01,970 --> 00:04:07,850
<font color="#E5E5E5">an endpoint and by default browsers will</font>

105
00:04:04,880 --> 00:04:09,470
send the session<font color="#CCCCCC"> code here the</font><font color="#E5E5E5"> send the</font>

106
00:04:07,850 --> 00:04:11,269
cookies with that request so it can

107
00:04:09,470 --> 00:04:13,420
force a user to<font color="#CCCCCC"> excuse</font><font color="#E5E5E5"> something they</font>

108
00:04:11,269 --> 00:04:15,110
didn't<font color="#E5E5E5"> want to execute</font>

109
00:04:13,420 --> 00:04:17,029
using<font color="#CCCCCC"> a bonus with no enrollment</font>

110
00:04:15,110 --> 00:04:19,010
<font color="#E5E5E5">abilities basically just patch to your</font>

111
00:04:17,029 --> 00:04:21,048
stuff<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> this one</font><font color="#CCCCCC"> categorized</font>

112
00:04:19,010 --> 00:04:24,560
<font color="#E5E5E5">says and unvalidated redirected</font><font color="#CCCCCC"> forwards</font>

113
00:04:21,048 --> 00:04:25,130
<font color="#E5E5E5">means your</font><font color="#CCCCCC"> application can be</font><font color="#E5E5E5"> used to</font>

114
00:04:24,560 --> 00:04:28,910
send

115
00:04:25,130 --> 00:04:30,440
user to a<font color="#E5E5E5"> malicious website through that</font>

116
00:04:28,910 --> 00:04:33,440
through<font color="#E5E5E5"> that legitimate domain that they</font>

117
00:04:30,440 --> 00:04:35,420
trust<font color="#E5E5E5"> okay so that's the top</font><font color="#CCCCCC"> ten</font><font color="#E5E5E5"> there's</font>

118
00:04:33,440 --> 00:04:36,530
a lot<font color="#E5E5E5"> in there there's obviously you can</font>

119
00:04:35,420 --> 00:04:38,600
look<font color="#E5E5E5"> a lot more into this there's</font>

120
00:04:36,530 --> 00:04:40,369
there's way more to<font color="#E5E5E5"> the top ten there's</font>

121
00:04:38,600 --> 00:04:42,620
more details but this is the

122
00:04:40,370 --> 00:04:44,060
<font color="#CCCCCC">categorizing categorization structure</font>

123
00:04:42,620 --> 00:04:46,520
that we typically use<font color="#CCCCCC"> when we're looking</font>

124
00:04:44,060 --> 00:04:49,820
<font color="#E5E5E5">at web application vulnerabilities so</font>

125
00:04:46,520 --> 00:04:55,510
let's get into what<font color="#CCCCCC"> goes beyond the top</font>

126
00:04:49,820 --> 00:04:58,340
<font color="#E5E5E5">ten first up we got race conditions</font>

127
00:04:55,510 --> 00:04:59,480
<font color="#CCCCCC">otherwise known as</font><font color="#E5E5E5"> CW 362 race</font>

128
00:04:58,340 --> 00:05:00,710
conditions is something that's been

129
00:04:59,480 --> 00:05:02,270
<font color="#E5E5E5">around since the beginning of</font>

130
00:05:00,710 --> 00:05:04,330
asynchronous computing since

131
00:05:02,270 --> 00:05:08,719
multi-threaded environments have existed

132
00:05:04,330 --> 00:05:10,219
it's it's something<font color="#E5E5E5"> that is has been</font>

133
00:05:08,720 --> 00:05:13,720
classically just been known as a bug<font color="#E5E5E5"> but</font>

134
00:05:10,220 --> 00:05:16,370
<font color="#CCCCCC">it can be leveraged to actually be a</font>

135
00:05:13,720 --> 00:05:19,130
security vulnerability<font color="#E5E5E5"> if it's done in</font>

136
00:05:16,370 --> 00:05:20,660
the<font color="#CCCCCC"> right way</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> it's when you win the</font>

137
00:05:19,130 --> 00:05:22,250
timing<font color="#E5E5E5"> of certain actions in an</font>

138
00:05:20,660 --> 00:05:25,840
<font color="#E5E5E5">asynchronous environment</font><font color="#CCCCCC"> actually affect</font>

139
00:05:22,250 --> 00:05:27,890
the<font color="#E5E5E5"> actions of the other environment</font>

140
00:05:25,840 --> 00:05:29,810
guys I'm<font color="#E5E5E5"> just going to ask if you're if</font>

141
00:05:27,890 --> 00:05:31,430
<font color="#CCCCCC">you're talking I'd really appreciate it</font>

142
00:05:29,810 --> 00:05:33,800
you<font color="#E5E5E5"> don't do that while I'm talking</font>

143
00:05:31,430 --> 00:05:35,900
<font color="#CCCCCC">thank you</font><font color="#E5E5E5"> very much so</font>

144
00:05:33,800 --> 00:05:37,640
the race conditions<font color="#E5E5E5"> getting back to this</font>

145
00:05:35,900 --> 00:05:38,780
if you<font color="#CCCCCC"> have an asynchronous environment</font>

146
00:05:37,640 --> 00:05:40,300
where there's<font color="#E5E5E5"> our multi-threaded</font>

147
00:05:38,780 --> 00:05:42,409
environment and two<font color="#E5E5E5"> different things</font>

148
00:05:40,300 --> 00:05:44,930
should be<font color="#E5E5E5"> happening synchronously but</font>

149
00:05:42,410 --> 00:05:47,720
they don't<font color="#E5E5E5"> if the timing of that can</font>

150
00:05:44,930 --> 00:05:49,250
<font color="#CCCCCC">catch off if it goes off</font><font color="#E5E5E5"> and something</font>

151
00:05:47,720 --> 00:05:50,450
<font color="#E5E5E5">happens out of order it could become a</font>

152
00:05:49,250 --> 00:05:52,820
<font color="#E5E5E5">security vulnerability</font><font color="#CCCCCC"> I'll give some</font>

153
00:05:50,450 --> 00:05:54,380
<font color="#CCCCCC">examples</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> what that actually is so</font>

154
00:05:52,820 --> 00:05:54,950
some actual exploits that<font color="#E5E5E5"> have</font><font color="#CCCCCC"> happened</font>

155
00:05:54,380 --> 00:05:56,900
because<font color="#E5E5E5"> of this</font>

156
00:05:54,950 --> 00:05:59,360
<font color="#CCCCCC">but first let's kind of give a visual</font>

157
00:05:56,900 --> 00:06:00,440
picture<font color="#E5E5E5"> of what</font><font color="#CCCCCC"> that looks like so it's</font>

158
00:05:59,360 --> 00:06:02,870
when you're making an assumption about

159
00:06:00,440 --> 00:06:04,280
<font color="#E5E5E5">the order of operations so let's say the</font>

160
00:06:02,870 --> 00:06:07,250
assumption is that<font color="#E5E5E5"> we have process acts</font>

161
00:06:04,280 --> 00:06:09,830
and process<font color="#CCCCCC"> Y process Y has two basic</font>

162
00:06:07,250 --> 00:06:12,050
steps process<font color="#E5E5E5"> access for in an</font>

163
00:06:09,830 --> 00:06:14,479
asynchronous<font color="#CCCCCC"> environment where the</font>

164
00:06:12,050 --> 00:06:16,130
assumption<font color="#E5E5E5"> is that because this one only</font>

165
00:06:14,480 --> 00:06:20,570
has<font color="#CCCCCC"> two process-wise</font><font color="#E5E5E5"> to the</font><font color="#CCCCCC"> unknown is</font>

166
00:06:16,130 --> 00:06:21,530
for process<font color="#CCCCCC"> Y we'll finish</font><font color="#E5E5E5"> first</font><font color="#CCCCCC"> the way</font>

167
00:06:20,570 --> 00:06:22,760
that it<font color="#E5E5E5"> really works in asynchronous</font>

168
00:06:21,530 --> 00:06:24,919
environments is this could<font color="#E5E5E5"> actually</font>

169
00:06:22,760 --> 00:06:28,010
<font color="#E5E5E5">happen for a process X finished first</font>

170
00:06:24,920 --> 00:06:30,020
<font color="#E5E5E5">because a synchronous environment don't</font>

171
00:06:28,010 --> 00:06:31,370
<font color="#E5E5E5">actually doesn't mean that two</font><font color="#CCCCCC"> different</font>

172
00:06:30,020 --> 00:06:33,500
things happen to the exact same time

173
00:06:31,370 --> 00:06:36,650
<font color="#E5E5E5">what it really means is that you</font><font color="#CCCCCC"> have</font>

174
00:06:33,500 --> 00:06:37,610
two things happening<font color="#CCCCCC"> one at a time very</font>

175
00:06:36,650 --> 00:06:40,400
<font color="#E5E5E5">quickly</font>

176
00:06:37,610 --> 00:06:43,509
so when you're<font color="#E5E5E5"> looking at how a CPU will</font>

177
00:06:40,400 --> 00:06:46,099
actually<font color="#E5E5E5"> hand off the processes</font>

178
00:06:43,509 --> 00:06:48,319
sometimes<font color="#CCCCCC"> if</font><font color="#E5E5E5"> something like process-wise</font>

179
00:06:46,099 --> 00:06:49,460
starts but<font color="#E5E5E5"> it gets blocked or it does</font>

180
00:06:48,319 --> 00:06:50,780
<font color="#E5E5E5">something that needs to</font><font color="#CCCCCC"> kind of process</font>

181
00:06:49,460 --> 00:06:52,340
<font color="#CCCCCC">a little</font><font color="#E5E5E5"> bit longer it'll jump over to</font>

182
00:06:50,780 --> 00:06:53,330
process X and then if it goes<font color="#E5E5E5"> really</font>

183
00:06:52,340 --> 00:06:55,340
quickly it'll just go through<font color="#E5E5E5"> all the</font>

184
00:06:53,330 --> 00:06:57,530
process X and then we go<font color="#E5E5E5"> back to cross Y</font>

185
00:06:55,340 --> 00:06:59,448
so<font color="#E5E5E5"> this can</font><font color="#CCCCCC"> happen</font><font color="#E5E5E5"> and this</font><font color="#CCCCCC"> is very</font>

186
00:06:57,530 --> 00:07:00,859
common<font color="#CCCCCC"> in</font><font color="#E5E5E5"> web applications because by</font>

187
00:06:59,449 --> 00:07:03,889
<font color="#CCCCCC">nature by their very nature they're</font>

188
00:07:00,860 --> 00:07:05,719
asynchronous<font color="#E5E5E5"> because you have you can</font>

189
00:07:03,889 --> 00:07:07,129
have<font color="#E5E5E5"> hundreds of thousands of concurrent</font>

190
00:07:05,719 --> 00:07:09,860
connections<font color="#E5E5E5"> doing the same thing at the</font>

191
00:07:07,129 --> 00:07:11,810
<font color="#E5E5E5">same time so it's actually more common</font>

192
00:07:09,860 --> 00:07:14,270
in web<font color="#CCCCCC"> all web applications than people</font>

193
00:07:11,810 --> 00:07:16,460
realize<font color="#E5E5E5"> so what is an actual exploit</font>

194
00:07:14,270 --> 00:07:19,430
look like<font color="#E5E5E5"> when you're dealing with race</font>

195
00:07:16,460 --> 00:07:22,340
conditions<font color="#E5E5E5"> well one thing happened when</font>

196
00:07:19,430 --> 00:07:24,889
a researcher took a look at Starbucks

197
00:07:22,340 --> 00:07:27,650
gift cards<font color="#E5E5E5"> because these served a</font>

198
00:07:24,889 --> 00:07:29,090
Starbucks<font color="#CCCCCC"> gift cards</font><font color="#E5E5E5"> allowed you to hold</font>

199
00:07:27,650 --> 00:07:31,008
account balances on<font color="#CCCCCC"> the two gift cards</font>

200
00:07:29,090 --> 00:07:33,830
<font color="#CCCCCC">and you</font><font color="#E5E5E5"> can transfer the balance between</font>

201
00:07:31,009 --> 00:07:36,199
gift cards<font color="#E5E5E5"> so</font><font color="#CCCCCC"> what this</font><font color="#E5E5E5"> researcher</font><font color="#CCCCCC"> found</font>

202
00:07:33,830 --> 00:07:38,930
was that if you were to transfer<font color="#E5E5E5"> the</font>

203
00:07:36,199 --> 00:07:41,180
<font color="#CCCCCC">money account balance between</font><font color="#E5E5E5"> one card</font>

204
00:07:38,930 --> 00:07:43,099
<font color="#E5E5E5">and another one really really</font><font color="#CCCCCC"> quickly do</font>

205
00:07:41,180 --> 00:07:44,509
<font color="#E5E5E5">it a whole bunch</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> times at once you</font>

206
00:07:43,099 --> 00:07:45,830
end up with more<font color="#CCCCCC"> money on the second</font>

207
00:07:44,509 --> 00:07:47,270
<font color="#E5E5E5">gift card than you actually</font><font color="#CCCCCC"> had on the</font>

208
00:07:45,830 --> 00:07:49,370
first<font color="#E5E5E5"> gift card so how does that</font>

209
00:07:47,270 --> 00:07:50,779
<font color="#E5E5E5">actually happen</font><font color="#CCCCCC"> so it sounds really cool</font>

210
00:07:49,370 --> 00:07:52,699
<font color="#CCCCCC">but the way that</font><font color="#E5E5E5"> it works is</font><font color="#CCCCCC"> actually</font>

211
00:07:50,779 --> 00:07:56,210
quite simple<font color="#CCCCCC"> if you look at the logic</font>

212
00:07:52,699 --> 00:07:58,039
behind the transferring of funds<font color="#E5E5E5"> the way</font>

213
00:07:56,210 --> 00:07:59,690
that it works is the first<font color="#E5E5E5"> step it does</font>

214
00:07:58,039 --> 00:08:04,128
is it basically checks to see if<font color="#E5E5E5"> there's</font>

215
00:07:59,690 --> 00:08:05,719
<font color="#E5E5E5">enough funds in in the card a if there's</font>

216
00:08:04,129 --> 00:08:08,150
enough funds in card<font color="#E5E5E5"> a the second step</font>

217
00:08:05,719 --> 00:08:10,279
is it will update the funds<font color="#CCCCCC"> in card B it</font>

218
00:08:08,150 --> 00:08:12,770
will basically<font color="#E5E5E5"> add funds to card B step</font>

219
00:08:10,279 --> 00:08:14,449
3 would<font color="#E5E5E5"> be updating the funds in card a</font>

220
00:08:12,770 --> 00:08:19,310
saying<font color="#E5E5E5"> ok now there's less funds in card</font>

221
00:08:14,449 --> 00:08:21,259
a so what happens if step<font color="#CCCCCC"> 1 happens</font><font color="#E5E5E5"> but</font>

222
00:08:19,310 --> 00:08:23,419
then if someone executes a whole bunch

223
00:08:21,259 --> 00:08:26,240
of requests at<font color="#E5E5E5"> one step</font><font color="#CCCCCC"> one and</font><font color="#E5E5E5"> to</font>

224
00:08:23,419 --> 00:08:28,639
<font color="#E5E5E5">happen more time before it gets to step</font>

225
00:08:26,240 --> 00:08:30,860
<font color="#E5E5E5">3 so you then incremental</font>

226
00:08:28,639 --> 00:08:33,709
<font color="#CCCCCC">the value of the</font><font color="#E5E5E5"> gift card and card to</font>

227
00:08:30,860 --> 00:08:35,180
card B before it decrements the value in

228
00:08:33,708 --> 00:08:37,968
card a so that check to<font color="#CCCCCC"> see if there's</font>

229
00:08:35,179 --> 00:08:41,539
enough enough money in card<font color="#E5E5E5"> a actually</font>

230
00:08:37,969 --> 00:08:44,329
doesn't happen until until it's<font color="#E5E5E5"> already</font>

231
00:08:41,539 --> 00:08:48,399
<font color="#E5E5E5">I lost all its money so so card a could</font>

232
00:08:44,329 --> 00:08:50,420
have<font color="#E5E5E5"> lost like let's say</font><font color="#CCCCCC"> ten dollars and</font>

233
00:08:48,399 --> 00:08:51,440
before it actually<font color="#CCCCCC"> does that check to</font>

234
00:08:50,420 --> 00:08:52,910
<font color="#E5E5E5">see if it has it anything</font>

235
00:08:51,440 --> 00:08:54,230
in that<font color="#E5E5E5"> account so if it started off</font>

236
00:08:52,910 --> 00:08:56,449
<font color="#CCCCCC">with five it could have already</font><font color="#E5E5E5"> lost</font><font color="#CCCCCC"> ten</font>

237
00:08:54,230 --> 00:08:58,220
<font color="#E5E5E5">before it actually incremented</font><font color="#CCCCCC"> the value</font>

238
00:08:56,450 --> 00:09:00,110
so this<font color="#E5E5E5"> Reacher researcher found</font><font color="#CCCCCC"> it</font>

239
00:08:58,220 --> 00:09:02,750
reported it and<font color="#E5E5E5"> they ended up</font><font color="#CCCCCC"> getting a</font>

240
00:09:00,110 --> 00:09:04,340
bug bounty for<font color="#E5E5E5"> it</font><font color="#CCCCCC"> so I'll give</font><font color="#E5E5E5"> you</font>

241
00:09:02,750 --> 00:09:06,680
<font color="#E5E5E5">another example of how this works</font><font color="#CCCCCC"> and</font>

242
00:09:04,340 --> 00:09:08,420
it's you'll you'll see a trend<font color="#CCCCCC"> to to</font>

243
00:09:06,680 --> 00:09:10,130
testing for<font color="#CCCCCC"> ease rates conditions</font>

244
00:09:08,420 --> 00:09:13,250
because a lot of<font color="#CCCCCC"> the time it looked</font><font color="#E5E5E5"> kind</font>

245
00:09:10,130 --> 00:09:15,170
<font color="#CCCCCC">of similar so a researcher</font><font color="#E5E5E5"> actually</font>

246
00:09:13,250 --> 00:09:16,760
found that<font color="#CCCCCC"> the again they submitted</font><font color="#E5E5E5"> a</font>

247
00:09:15,170 --> 00:09:20,300
bug bounty and they actually<font color="#E5E5E5"> on I think</font>

248
00:09:16,760 --> 00:09:23,050
it's on<font color="#E5E5E5"> a cobalt you could get paid in</font>

249
00:09:20,300 --> 00:09:26,240
Bitcoin so<font color="#E5E5E5"> they submitted a bug bounty</font>

250
00:09:23,050 --> 00:09:28,069
<font color="#CCCCCC">it was valid they got a reward</font><font color="#E5E5E5"> for it so</font>

251
00:09:26,240 --> 00:09:30,380
they<font color="#E5E5E5"> got a URL</font><font color="#CCCCCC"> to allow them to withdraw</font>

252
00:09:28,070 --> 00:09:36,290
<font color="#E5E5E5">a certain amount of bitcoins for that</font>

253
00:09:30,380 --> 00:09:37,880
<font color="#E5E5E5">reward but</font><font color="#CCCCCC"> what they did was they they</font>

254
00:09:36,290 --> 00:09:39,140
got<font color="#E5E5E5"> the reward so they look that they</font>

255
00:09:37,880 --> 00:09:40,550
got<font color="#E5E5E5"> the reward</font><font color="#CCCCCC"> and before they actually</font>

256
00:09:39,140 --> 00:09:42,949
submitted that they took that<font color="#E5E5E5"> URL and</font>

257
00:09:40,550 --> 00:09:45,050
<font color="#CCCCCC">they basically requested it a ton of</font>

258
00:09:42,950 --> 00:09:47,830
<font color="#E5E5E5">times at the</font><font color="#CCCCCC"> same time so</font><font color="#E5E5E5"> again this is</font>

259
00:09:45,050 --> 00:09:50,150
a web server<font color="#CCCCCC"> process ISM this request</font>

260
00:09:47,830 --> 00:09:52,370
<font color="#E5E5E5">potentially hundreds if not thousands if</font>

261
00:09:50,150 --> 00:09:56,870
<font color="#E5E5E5">they're got a really big pipe of times</font>

262
00:09:52,370 --> 00:09:58,640
at the same<font color="#CCCCCC"> time</font><font color="#E5E5E5"> so by doing that they</font>

263
00:09:56,870 --> 00:10:00,440
ended up<font color="#E5E5E5"> with way more bitcoins than</font>

264
00:09:58,640 --> 00:10:02,240
they were supposed<font color="#CCCCCC"> to actually get the</font>

265
00:10:00,440 --> 00:10:04,700
problem isn't with<font color="#E5E5E5"> Bitcoin the problem</font>

266
00:10:02,240 --> 00:10:07,130
is<font color="#CCCCCC"> actually with the way</font><font color="#E5E5E5"> that the logic</font>

267
00:10:04,700 --> 00:10:09,260
worked for withdrawing the Bitcoin so

268
00:10:07,130 --> 00:10:11,900
the way the logic worked was first check

269
00:10:09,260 --> 00:10:15,319
<font color="#CCCCCC">if the URL is</font><font color="#E5E5E5"> valid second if</font><font color="#CCCCCC"> the URL</font>

270
00:10:11,900 --> 00:10:17,449
has not been used<font color="#E5E5E5"> yet then send the</font>

271
00:10:15,320 --> 00:10:20,180
money<font color="#CCCCCC"> to</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> endpoint steps to that</font>

272
00:10:17,450 --> 00:10:23,060
researcher and third mark that URL is

273
00:10:20,180 --> 00:10:26,089
invalid but if you get to step one<font color="#E5E5E5"> and</font>

274
00:10:23,060 --> 00:10:27,199
<font color="#CCCCCC">to hundreds or many</font><font color="#E5E5E5"> many times before it</font>

275
00:10:26,090 --> 00:10:30,560
actually<font color="#E5E5E5"> hits step three and marks</font><font color="#CCCCCC"> it</font>

276
00:10:27,200 --> 00:10:33,020
invalid<font color="#E5E5E5"> you then being able to</font><font color="#CCCCCC"> withdraw</font>

277
00:10:30,560 --> 00:10:34,189
a whole bunch more<font color="#E5E5E5"> Bitcoin then you were</font>

278
00:10:33,020 --> 00:10:36,949
<font color="#E5E5E5">supposed to have gotten this is what he</font>

279
00:10:34,190 --> 00:10:40,880
did<font color="#E5E5E5"> and then from there got another but</font>

280
00:10:36,950 --> 00:10:42,020
money reward<font color="#E5E5E5"> because they reported it so</font>

281
00:10:40,880 --> 00:10:44,300
how do you actually test for<font color="#E5E5E5"> race</font>

282
00:10:42,020 --> 00:10:46,069
conditions<font color="#E5E5E5"> so if you go out and you want</font>

283
00:10:44,300 --> 00:10:47,030
to actually<font color="#CCCCCC"> looked at the where are</font>

284
00:10:46,070 --> 00:10:48,140
these<font color="#CCCCCC"> race conditions where these</font>

285
00:10:47,030 --> 00:10:49,520
vulnerabilities present in my code

286
00:10:48,140 --> 00:10:52,130
especially web applications how do you

287
00:10:49,520 --> 00:10:53,870
do<font color="#E5E5E5"> it well you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> do it through the</font>

288
00:10:52,130 --> 00:10:55,220
best method and the easiest method

289
00:10:53,870 --> 00:10:56,600
method to find<font color="#E5E5E5"> is</font><font color="#CCCCCC"> through white box</font>

290
00:10:55,220 --> 00:10:59,300
testing which means you have access<font color="#CCCCCC"> to</font>

291
00:10:56,600 --> 00:11:02,210
<font color="#E5E5E5">the source code</font><font color="#CCCCCC"> so I'm going to</font><font color="#E5E5E5"> go</font>

292
00:10:59,300 --> 00:11:04,430
through these<font color="#CCCCCC"> four basically what it</font>

293
00:11:02,210 --> 00:11:05,000
means<font color="#E5E5E5"> shared resources are usually where</font>

294
00:11:04,430 --> 00:11:07,040
you're going to

295
00:11:05,000 --> 00:11:08,840
these things because you<font color="#CCCCCC"> can do a</font><font color="#E5E5E5"> whole</font>

296
00:11:07,040 --> 00:11:10,099
<font color="#CCCCCC">bunch of</font><font color="#E5E5E5"> things at once</font><font color="#CCCCCC"> in other</font><font color="#E5E5E5"> places</font>

297
00:11:08,840 --> 00:11:12,340
<font color="#E5E5E5">in</font><font color="#CCCCCC"> an application it usually won't</font><font color="#E5E5E5"> do</font>

298
00:11:10,100 --> 00:11:14,660
anything<font color="#E5E5E5"> but if you're</font><font color="#CCCCCC"> doing a lot of</font>

299
00:11:12,340 --> 00:11:17,120
functions at the<font color="#E5E5E5"> same time to a single</font>

300
00:11:14,660 --> 00:11:19,280
<font color="#CCCCCC">object</font><font color="#E5E5E5"> then that can result in</font>

301
00:11:17,120 --> 00:11:20,870
corruption it can result in bringing a

302
00:11:19,280 --> 00:11:23,360
system<font color="#E5E5E5"> down things can happen</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> don't</font>

303
00:11:20,870 --> 00:11:24,950
want to happen<font color="#CCCCCC"> so if you look for places</font>

304
00:11:23,360 --> 00:11:27,050
<font color="#CCCCCC">in a input</font><font color="#E5E5E5"> source code where you have</font>

305
00:11:24,950 --> 00:11:30,920
shared data so in the example<font color="#E5E5E5"> of the</font>

306
00:11:27,050 --> 00:11:33,109
Starbucks gift card<font color="#CCCCCC"> that account</font><font color="#E5E5E5"> was a</font>

307
00:11:30,920 --> 00:11:35,449
shared resource<font color="#E5E5E5"> in the database so it</font>

308
00:11:33,110 --> 00:11:37,130
was a value for this account in the

309
00:11:35,450 --> 00:11:39,350
database that<font color="#CCCCCC"> can</font><font color="#E5E5E5"> be accessed many many</font>

310
00:11:37,130 --> 00:11:42,470
times at once<font color="#E5E5E5"> that is a shared shared</font>

311
00:11:39,350 --> 00:11:43,610
value identify<font color="#E5E5E5"> that and then see where</font>

312
00:11:42,470 --> 00:11:46,520
<font color="#CCCCCC">can actually be accessed across the</font>

313
00:11:43,610 --> 00:11:48,050
number of<font color="#E5E5E5"> systems</font><font color="#CCCCCC"> and then if it's not</font>

314
00:11:46,520 --> 00:11:50,030
synchronized and<font color="#E5E5E5"> I'll get to</font><font color="#CCCCCC"> how to</font>

315
00:11:48,050 --> 00:11:51,770
synchronize<font color="#CCCCCC"> it in a minute</font><font color="#E5E5E5"> if it's not</font>

316
00:11:50,030 --> 00:11:53,870
synchronized<font color="#E5E5E5"> then you will then go</font><font color="#CCCCCC"> and</font>

317
00:11:51,770 --> 00:11:56,930
<font color="#CCCCCC">make a ton</font><font color="#E5E5E5"> of requests to</font><font color="#CCCCCC"> that resource</font>

318
00:11:53,870 --> 00:11:58,190
<font color="#CCCCCC">see what happens</font><font color="#E5E5E5"> so that's the white box</font>

319
00:11:56,930 --> 00:11:59,750
method<font color="#CCCCCC"> so if you have source code you</font>

320
00:11:58,190 --> 00:12:01,580
can<font color="#E5E5E5"> easily identify where these spots</font>

321
00:11:59,750 --> 00:12:03,080
<font color="#E5E5E5">are but if you don't</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> the source</font>

322
00:12:01,580 --> 00:12:05,720
<font color="#CCCCCC">code it's often more difficult to</font><font color="#E5E5E5"> test</font>

323
00:12:03,080 --> 00:12:07,190
the<font color="#CCCCCC"> bees</font><font color="#E5E5E5"> thing so that's where we get</font><font color="#CCCCCC"> to</font>

324
00:12:05,720 --> 00:12:08,330
black box that's the black box<font color="#CCCCCC"> testing</font>

325
00:12:07,190 --> 00:12:09,770
means<font color="#E5E5E5"> you don't have</font><font color="#CCCCCC"> a source code and</font>

326
00:12:08,330 --> 00:12:13,790
you're basically coming<font color="#E5E5E5"> at it</font><font color="#CCCCCC"> from an</font>

327
00:12:09,770 --> 00:12:15,319
external<font color="#CCCCCC"> attackers perspective race</font><font color="#E5E5E5"> the</font>

328
00:12:13,790 --> 00:12:16,969
web is a tool<font color="#CCCCCC"> that I actually wrote</font>

329
00:12:15,320 --> 00:12:19,670
myself<font color="#E5E5E5"> because there was a lack</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> tool</font>

330
00:12:16,970 --> 00:12:21,410
to<font color="#E5E5E5"> test for race conditions</font><font color="#CCCCCC"> this allows</font>

331
00:12:19,670 --> 00:12:23,949
you<font color="#CCCCCC"> to do this black box testing</font><font color="#E5E5E5"> against</font>

332
00:12:21,410 --> 00:12:27,050
resources so it's free<font color="#CCCCCC"> open source</font>

333
00:12:23,950 --> 00:12:29,900
<font color="#CCCCCC">specifically made for testing in for</font><font color="#E5E5E5"> it</font>

334
00:12:27,050 --> 00:12:31,280
conditions web applications and and

335
00:12:29,900 --> 00:12:32,689
<font color="#E5E5E5">before I get to the accompanying</font>

336
00:12:31,280 --> 00:12:35,449
application what it does is it<font color="#CCCCCC"> basically</font>

337
00:12:32,690 --> 00:12:37,130
allows<font color="#E5E5E5"> you</font><font color="#CCCCCC"> to choose a request</font><font color="#E5E5E5"> you can</font>

338
00:12:35,450 --> 00:12:38,480
<font color="#CCCCCC">even submit cookie values with it so</font>

339
00:12:37,130 --> 00:12:39,560
like your<font color="#CCCCCC"> section</font><font color="#E5E5E5"> value if you want if</font>

340
00:12:38,480 --> 00:12:42,020
it needs<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be not sending you</font><font color="#CCCCCC"> two</font>

341
00:12:39,560 --> 00:12:43,400
<font color="#CCCCCC">requests</font><font color="#E5E5E5"> and then select how many</font>

342
00:12:42,020 --> 00:12:45,110
<font color="#E5E5E5">requests concurrently you want to make</font>

343
00:12:43,400 --> 00:12:46,550
<font color="#E5E5E5">to not</font><font color="#CCCCCC"> only one resource that you</font><font color="#E5E5E5"> can</font>

344
00:12:45,110 --> 00:12:48,530
submit you<font color="#CCCCCC"> can set up</font><font color="#E5E5E5"> to like four or</font>

345
00:12:46,550 --> 00:12:50,060
<font color="#CCCCCC">five different resources</font><font color="#E5E5E5"> so if it's</font>

346
00:12:48,530 --> 00:12:52,100
<font color="#E5E5E5">about it's a matter of transferring</font>

347
00:12:50,060 --> 00:12:53,689
funds between<font color="#E5E5E5"> an account and you need to</font>

348
00:12:52,100 --> 00:12:55,339
do two<font color="#CCCCCC"> different</font><font color="#E5E5E5"> things at</font><font color="#CCCCCC"> once</font><font color="#E5E5E5"> you can</font>

349
00:12:53,690 --> 00:12:57,140
do<font color="#E5E5E5"> that and then what it really does</font>

350
00:12:55,339 --> 00:12:58,339
<font color="#E5E5E5">differently and what kind differentiates</font>

351
00:12:57,140 --> 00:13:01,040
it from a lot<font color="#E5E5E5"> of other tools is it will</font>

352
00:12:58,339 --> 00:13:02,270
actually<font color="#E5E5E5"> do a response comparison so it</font>

353
00:13:01,040 --> 00:13:04,880
<font color="#E5E5E5">will actually compare the responses you</font>

354
00:13:02,270 --> 00:13:06,020
<font color="#E5E5E5">get back and look for anomalies because</font>

355
00:13:04,880 --> 00:13:08,420
that's how you can<font color="#CCCCCC"> actually tell when</font>

356
00:13:06,020 --> 00:13:10,180
something has<font color="#E5E5E5"> gone off</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> different from</font>

357
00:13:08,420 --> 00:13:13,219
<font color="#E5E5E5">the baseline if it's a different result</font>

358
00:13:10,180 --> 00:13:14,959
<font color="#E5E5E5">then by</font><font color="#CCCCCC"> doing that then you know</font><font color="#E5E5E5"> that</font>

359
00:13:13,220 --> 00:13:16,970
there's something wrong I also built a

360
00:13:14,959 --> 00:13:18,260
<font color="#E5E5E5">company deliberately vulnerable web</font>

361
00:13:16,970 --> 00:13:20,960
application

362
00:13:18,260 --> 00:13:22,610
or race conditions is<font color="#CCCCCC"> its it's set up to</font>

363
00:13:20,960 --> 00:13:25,550
<font color="#CCCCCC">be like a bank</font><font color="#E5E5E5"> you have</font><font color="#CCCCCC"> a bank account</font>

364
00:13:22,610 --> 00:13:28,190
<font color="#E5E5E5">and you</font><font color="#CCCCCC"> can then</font><font color="#E5E5E5"> use the</font><font color="#CCCCCC"> trace the web</font>

365
00:13:25,550 --> 00:13:29,510
tool to actually<font color="#E5E5E5"> submit a bunch of</font>

366
00:13:28,190 --> 00:13:31,430
requests<font color="#E5E5E5"> to the send point and it tells</font>

367
00:13:29,510 --> 00:13:33,230
<font color="#E5E5E5">you you'll find out</font><font color="#CCCCCC"> that you get more</font>

368
00:13:31,430 --> 00:13:34,400
<font color="#E5E5E5">money back than it actually shows in</font>

369
00:13:33,230 --> 00:13:35,750
<font color="#E5E5E5">your</font><font color="#CCCCCC"> compound so let's say you get</font><font color="#E5E5E5"> like</font>

370
00:13:34,400 --> 00:13:37,160
<font color="#CCCCCC">a hundred dollars back</font><font color="#E5E5E5"> but your account</font>

371
00:13:35,750 --> 00:13:39,350
<font color="#E5E5E5">pals might be crewmen by two dollars</font>

372
00:13:37,160 --> 00:13:40,459
<font color="#E5E5E5">it's just an example</font><font color="#CCCCCC"> of doing that</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> if</font>

373
00:13:39,350 --> 00:13:42,110
you<font color="#E5E5E5"> want to see what it looks like to</font>

374
00:13:40,460 --> 00:13:44,120
see an<font color="#CCCCCC"> actual race condition in a web</font>

375
00:13:42,110 --> 00:13:46,550
application<font color="#CCCCCC"> I'd</font><font color="#E5E5E5"> recommend checking that</font>

376
00:13:44,120 --> 00:13:48,830
<font color="#E5E5E5">out it it's it made specifically for</font>

377
00:13:46,550 --> 00:13:50,540
<font color="#E5E5E5">this if you have Berkeley Berkeley</font>

378
00:13:48,830 --> 00:13:53,240
intruder recently added in the function

379
00:13:50,540 --> 00:13:55,069
that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can check compare response it</font>

380
00:13:53,240 --> 00:13:55,940
actually has a response comparison of

381
00:13:55,070 --> 00:13:59,750
sorts

382
00:13:55,940 --> 00:14:01,670
so you can if you can<font color="#CCCCCC"> use</font><font color="#E5E5E5"> sweet intruder</font>

383
00:13:59,750 --> 00:14:03,050
as well if you would like<font color="#E5E5E5"> it's not as</font>

384
00:14:01,670 --> 00:14:04,219
fast but it's still<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> people here</font>

385
00:14:03,050 --> 00:14:06,829
have<font color="#E5E5E5"> ferb so it's a really good resource</font>

386
00:14:04,220 --> 00:14:08,780
as well<font color="#E5E5E5"> to use that but one thing to be</font>

387
00:14:06,830 --> 00:14:09,950
<font color="#CCCCCC">aware of is be very</font><font color="#E5E5E5"> careful</font><font color="#CCCCCC"> when you're</font>

388
00:14:08,780 --> 00:14:11,660
testing<font color="#CCCCCC"> for race conditions especially</font>

389
00:14:09,950 --> 00:14:12,830
<font color="#E5E5E5">when you're using it in like a bug</font>

390
00:14:11,660 --> 00:14:15,740
bounty or against someone<font color="#E5E5E5"> else's</font>

391
00:14:12,830 --> 00:14:18,380
application<font color="#E5E5E5"> because the testing is</font>

392
00:14:15,740 --> 00:14:19,340
inherently<font color="#E5E5E5"> a form of denial of service</font>

393
00:14:18,380 --> 00:14:21,590
attack because you're sending<font color="#CCCCCC"> a whole</font>

394
00:14:19,340 --> 00:14:24,560
lot<font color="#CCCCCC"> of traffic</font><font color="#E5E5E5"> to one endpoint</font><font color="#CCCCCC"> at the</font>

395
00:14:21,590 --> 00:14:26,180
same time so but certain bug bounties

396
00:14:24,560 --> 00:14:28,160
have wording like<font color="#E5E5E5"> this where they say</font>

397
00:14:26,180 --> 00:14:30,140
not<font color="#CCCCCC"> to do that kind of</font><font color="#E5E5E5"> testing so just</font>

398
00:14:28,160 --> 00:14:31,370
read<font color="#CCCCCC"> the</font><font color="#E5E5E5"> Scopes very carefully when</font>

399
00:14:30,140 --> 00:14:32,689
you're doing this<font color="#E5E5E5"> obviously if you're</font>

400
00:14:31,370 --> 00:14:35,180
testing your<font color="#CCCCCC"> own application</font><font color="#E5E5E5"> you're good</font>

401
00:14:32,690 --> 00:14:37,660
to<font color="#CCCCCC"> go</font><font color="#E5E5E5"> but just be careful</font><font color="#CCCCCC"> because</font><font color="#E5E5E5"> you</font>

402
00:14:35,180 --> 00:14:39,650
could overwhelm some<font color="#E5E5E5"> resources as well</font>

403
00:14:37,660 --> 00:14:42,610
so how do you defend against<font color="#CCCCCC"> rate</font>

404
00:14:39,650 --> 00:14:45,530
<font color="#E5E5E5">conditions first off</font>

405
00:14:42,610 --> 00:14:46,430
locks<font color="#E5E5E5"> this is this is really</font><font color="#CCCCCC"> the if</font>

406
00:14:45,530 --> 00:14:48,800
you're going<font color="#E5E5E5"> to defending these race</font>

407
00:14:46,430 --> 00:14:51,579
conditions if<font color="#E5E5E5"> you want one solution</font><font color="#CCCCCC"> lock</font>

408
00:14:48,800 --> 00:14:54,319
<font color="#E5E5E5">is the solution they are literally built</font>

409
00:14:51,580 --> 00:14:56,300
just for synchronization<font color="#CCCCCC"> issues</font><font color="#E5E5E5"> which is</font>

410
00:14:54,320 --> 00:14:58,280
what<font color="#CCCCCC"> rates conditions are so just use</font>

411
00:14:56,300 --> 00:15:00,319
locks<font color="#E5E5E5"> there's you can use in your</font>

412
00:14:58,280 --> 00:15:02,240
<font color="#CCCCCC">database you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> use it in your RM your</font>

413
00:15:00,320 --> 00:15:03,470
object relational mapper most

414
00:15:02,240 --> 00:15:06,980
programming languages<font color="#CCCCCC"> have</font><font color="#E5E5E5"> locks</font>

415
00:15:03,470 --> 00:15:08,120
<font color="#CCCCCC">built-in file locks</font><font color="#E5E5E5"> exist as well going</font>

416
00:15:06,980 --> 00:15:11,270
back<font color="#E5E5E5"> to programming languages having</font>

417
00:15:08,120 --> 00:15:15,350
locks<font color="#E5E5E5"> built in another reason</font><font color="#CCCCCC"> not to use</font>

418
00:15:11,270 --> 00:15:16,880
PHP PHP was not built to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> a it's not</font>

419
00:15:15,350 --> 00:15:19,220
an asynchronous<font color="#E5E5E5"> app but it's not a</font>

420
00:15:16,880 --> 00:15:21,410
<font color="#E5E5E5">multi-threaded programming language it's</font>

421
00:15:19,220 --> 00:15:24,620
not PHP is not multi-threaded<font color="#E5E5E5"> or</font>

422
00:15:21,410 --> 00:15:25,699
asynchronous but Apache and nginx are so

423
00:15:24,620 --> 00:15:28,580
it relies on the underlying

424
00:15:25,700 --> 00:15:30,470
<font color="#E5E5E5">server to do the multi-threaded</font>

425
00:15:28,580 --> 00:15:30,980
environment to have multiple requests

426
00:15:30,470 --> 00:15:32,750
<font color="#E5E5E5">coming at once</font>

427
00:15:30,980 --> 00:15:34,370
so it wasn't<font color="#CCCCCC"> really built</font><font color="#E5E5E5"> you can you</font>

428
00:15:32,750 --> 00:15:37,220
can do something called a semaphore

429
00:15:34,370 --> 00:15:38,990
which sort of does<font color="#CCCCCC"> it but if you</font><font color="#E5E5E5"> if</font>

430
00:15:37,220 --> 00:15:40,579
you're<font color="#CCCCCC"> doing it</font><font color="#E5E5E5"> across multiple servers</font>

431
00:15:38,990 --> 00:15:44,540
it doesn't sync up so it's very

432
00:15:40,579 --> 00:15:46,040
<font color="#E5E5E5">difficult</font><font color="#CCCCCC"> in PHP to do that so just keep</font>

433
00:15:44,540 --> 00:15:47,810
that<font color="#E5E5E5"> in mind</font><font color="#CCCCCC"> so you this</font><font color="#E5E5E5"> is where you</font>

434
00:15:46,040 --> 00:15:49,189
would<font color="#CCCCCC"> go to like your database the</font>

435
00:15:47,810 --> 00:15:50,810
database<font color="#E5E5E5"> level to do locking as well</font>

436
00:15:49,190 --> 00:15:52,459
<font color="#E5E5E5">this file locks if you're looking at</font><font color="#CCCCCC"> it</font>

437
00:15:50,810 --> 00:15:53,689
<font color="#E5E5E5">like a local system</font><font color="#CCCCCC"> so if you look</font><font color="#E5E5E5"> at</font>

438
00:15:52,459 --> 00:15:55,670
<font color="#E5E5E5">Microsoft Word and you have the dollar</font>

439
00:15:53,690 --> 00:15:57,350
sign squiggly<font color="#E5E5E5"> files</font>

440
00:15:55,670 --> 00:15:58,729
that's Microsoft Word saying this file

441
00:15:57,350 --> 00:16:01,279
is<font color="#E5E5E5"> locked because it's</font><font color="#CCCCCC"> currently in use</font>

442
00:15:58,730 --> 00:16:03,740
and so that it's<font color="#CCCCCC"> it's syntax to know</font>

443
00:16:01,279 --> 00:16:07,339
that not<font color="#CCCCCC"> to modify it</font><font color="#E5E5E5"> from other sources</font>

444
00:16:03,740 --> 00:16:09,139
as well so some other mitigations these

445
00:16:07,339 --> 00:16:10,339
these things are<font color="#CCCCCC"> really they're not</font>

446
00:16:09,139 --> 00:16:11,449
<font color="#E5E5E5">going to solve the problem they're just</font>

447
00:16:10,339 --> 00:16:13,399
going<font color="#E5E5E5"> to merge the symptoms they're</font>

448
00:16:11,449 --> 00:16:15,109
going to make it less likely<font color="#CCCCCC"> to have a</font>

449
00:16:13,399 --> 00:16:16,430
race<font color="#CCCCCC"> condition come up so</font><font color="#E5E5E5"> seats or</font>

450
00:16:15,110 --> 00:16:19,550
tokens just makes it<font color="#E5E5E5"> more difficult to</font>

451
00:16:16,430 --> 00:16:21,829
automate attacks<font color="#CCCCCC"> a fast database makes</font>

452
00:16:19,550 --> 00:16:22,790
it less likely<font color="#CCCCCC"> that multiple requests to</font>

453
00:16:21,829 --> 00:16:23,660
a database are going to<font color="#E5E5E5"> happen at the</font>

454
00:16:22,790 --> 00:16:26,060
same<font color="#CCCCCC"> time</font><font color="#E5E5E5"> because they're going to get</font>

455
00:16:23,660 --> 00:16:27,469
<font color="#CCCCCC">so</font><font color="#E5E5E5"> filled</font><font color="#CCCCCC"> out much faster so it just</font>

456
00:16:26,060 --> 00:16:30,050
makes<font color="#CCCCCC"> it a little bit less likely</font><font color="#E5E5E5"> and</font>

457
00:16:27,470 --> 00:16:33,320
inserts are a little<font color="#E5E5E5"> they've a little</font>

458
00:16:30,050 --> 00:16:34,969
bit more protection<font color="#CCCCCC"> against against for</font>

459
00:16:33,320 --> 00:16:36,769
integrity reasons<font color="#E5E5E5"> and against the</font>

460
00:16:34,970 --> 00:16:38,810
effects of accessing resources of

461
00:16:36,769 --> 00:16:40,370
resources at the same time<font color="#CCCCCC"> instead of</font>

462
00:16:38,810 --> 00:16:41,810
using updates<font color="#E5E5E5"> so if you're using a</font>

463
00:16:40,370 --> 00:16:43,579
database<font color="#CCCCCC"> application you're concerned</font>

464
00:16:41,810 --> 00:16:47,000
about<font color="#CCCCCC"> this I'd</font><font color="#E5E5E5"> recommend using</font><font color="#CCCCCC"> inserts</font>

465
00:16:43,579 --> 00:16:49,430
<font color="#E5E5E5">over</font><font color="#CCCCCC"> updates as</font><font color="#E5E5E5"> well so I do the talk on</font>

466
00:16:47,000 --> 00:16:51,860
<font color="#CCCCCC">this actually last year I accessed so if</font>

467
00:16:49,430 --> 00:16:54,260
you want some<font color="#E5E5E5"> more detail I've got like</font>

468
00:16:51,860 --> 00:16:57,230
a lot more detail about<font color="#CCCCCC"> rate conditions</font>

469
00:16:54,260 --> 00:16:59,720
and about<font color="#CCCCCC"> about how</font><font color="#E5E5E5"> to defend against</font>

470
00:16:57,230 --> 00:17:02,180
them technically<font color="#E5E5E5"> I check</font><font color="#CCCCCC"> out</font><font color="#E5E5E5"> that talk</font>

471
00:16:59,720 --> 00:17:03,769
if you want<font color="#E5E5E5"> and</font><font color="#CCCCCC"> reach out to me if you</font>

472
00:17:02,180 --> 00:17:06,079
<font color="#E5E5E5">want slides as well I'd be happy to help</font>

473
00:17:03,769 --> 00:17:08,150
<font color="#E5E5E5">with that but</font><font color="#CCCCCC"> again</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> purpose</font><font color="#E5E5E5"> of this</font>

474
00:17:06,079 --> 00:17:10,399
talk isn't necessarily to go into bodies

475
00:17:08,150 --> 00:17:11,929
as much<font color="#E5E5E5"> detail like to go into these</font>

476
00:17:10,400 --> 00:17:14,449
kind of vulnerabilities it's more to

477
00:17:11,929 --> 00:17:16,669
show what<font color="#E5E5E5"> kind of vulnerabilities exist</font>

478
00:17:14,449 --> 00:17:18,470
<font color="#E5E5E5">that don't really fall within the asylum</font>

479
00:17:16,669 --> 00:17:19,449
<font color="#CCCCCC">so you can check that</font><font color="#E5E5E5"> out</font><font color="#CCCCCC"> for some</font><font color="#E5E5E5"> more</font>

480
00:17:18,470 --> 00:17:22,130
information

481
00:17:19,449 --> 00:17:24,799
next up<font color="#E5E5E5"> HTTP parameter pollution</font>

482
00:17:22,130 --> 00:17:27,500
otherwise known<font color="#CCCCCC"> as</font><font color="#E5E5E5"> HPP</font><font color="#CCCCCC"> this is a</font>

483
00:17:24,799 --> 00:17:31,700
vulnerability that<font color="#CCCCCC"> is one of those</font>

484
00:17:27,500 --> 00:17:32,809
things that if you don't<font color="#E5E5E5"> know</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> prepare</font>

485
00:17:31,700 --> 00:17:35,840
for<font color="#E5E5E5"> it as a developer if you don't know</font>

486
00:17:32,809 --> 00:17:37,129
to look for it<font color="#E5E5E5"> then it</font><font color="#CCCCCC"> might not show up</font>

487
00:17:35,840 --> 00:17:39,918
in<font color="#E5E5E5"> your code it might not show</font><font color="#CCCCCC"> up as a</font>

488
00:17:37,130 --> 00:17:42,290
vulnerability<font color="#E5E5E5"> but sooner</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> later it's</font>

489
00:17:39,919 --> 00:17:43,880
going<font color="#E5E5E5"> to hit you because the way that it</font>

490
00:17:42,290 --> 00:17:44,840
works is<font color="#E5E5E5"> when you're looking</font><font color="#CCCCCC"> at a web</font>

491
00:17:43,880 --> 00:17:46,850
<font color="#CCCCCC">application</font>

492
00:17:44,840 --> 00:17:48,110
and you send a request<font color="#CCCCCC"> to</font><font color="#E5E5E5"> of application</font>

493
00:17:46,850 --> 00:17:49,789
you're<font color="#CCCCCC"> going to see there's parameters</font>

494
00:17:48,110 --> 00:17:52,010
so when you want<font color="#CCCCCC"> to send a value to</font><font color="#E5E5E5"> web</font>

495
00:17:49,789 --> 00:17:54,110
<font color="#E5E5E5">application you'll send a parameter like</font>

496
00:17:52,010 --> 00:17:56,030
a equal to so<font color="#E5E5E5"> if you look at like</font>

497
00:17:54,110 --> 00:17:59,780
<font color="#CCCCCC">example comm and you see question mark</font><font color="#E5E5E5"> a</font>

498
00:17:56,030 --> 00:18:02,270
equals<font color="#CCCCCC"> two that's passing the value of</font>

499
00:17:59,780 --> 00:18:07,549
<font color="#E5E5E5">two with the parameter named a to that</font>

500
00:18:02,270 --> 00:18:09,168
<font color="#E5E5E5">application but sometimes if you see an</font>

501
00:18:07,549 --> 00:18:11,750
application<font color="#E5E5E5"> sometimes if you send an</font>

502
00:18:09,169 --> 00:18:14,179
<font color="#CCCCCC">application that same parameter name of</font>

503
00:18:11,750 --> 00:18:15,950
a but you send so it's<font color="#E5E5E5"> already got a</font>

504
00:18:14,179 --> 00:18:18,559
equals<font color="#CCCCCC"> two but you pass in an additional</font>

505
00:18:15,950 --> 00:18:21,039
parameter<font color="#CCCCCC"> with a equals a equals</font><font color="#E5E5E5"> three</font>

506
00:18:18,559 --> 00:18:23,690
or another value how does it<font color="#CCCCCC"> handle that</font>

507
00:18:21,039 --> 00:18:26,320
<font color="#E5E5E5">the answer is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> different application</font>

508
00:18:23,690 --> 00:18:29,059
technologies handle that differently

509
00:18:26,320 --> 00:18:31,580
<font color="#CCCCCC">so here's an example of what it looks</font>

510
00:18:29,059 --> 00:18:32,720
<font color="#CCCCCC">like</font><font color="#E5E5E5"> so this is just an</font><font color="#CCCCCC"> example of some</font>

511
00:18:31,580 --> 00:18:35,110
some ways that some<font color="#E5E5E5"> application</font>

512
00:18:32,720 --> 00:18:37,820
technologies handle it so for example

513
00:18:35,110 --> 00:18:41,360
<font color="#E5E5E5">asp.net concatenates them with a comma</font>

514
00:18:37,820 --> 00:18:42,200
in between<font color="#E5E5E5"> them</font><font color="#CCCCCC"> python handles them as a</font>

515
00:18:41,360 --> 00:18:47,928
array

516
00:18:42,200 --> 00:18:50,030
<font color="#E5E5E5">I believe</font><font color="#CCCCCC"> PHP takes the last one</font><font color="#E5E5E5"> and</font>

517
00:18:47,929 --> 00:18:51,460
there's there's<font color="#CCCCCC"> dildo cycle between</font><font color="#E5E5E5"> like</font>

518
00:18:50,030 --> 00:18:53,330
first occurrence last occurrence

519
00:18:51,460 --> 00:18:55,010
<font color="#CCCCCC">concatenated them creating an array</font>

520
00:18:53,330 --> 00:18:56,689
things like that so each application

521
00:18:55,010 --> 00:18:58,429
<font color="#E5E5E5">technology</font><font color="#CCCCCC"> handles</font><font color="#E5E5E5"> parameters</font>

522
00:18:56,690 --> 00:19:01,039
differently<font color="#E5E5E5"> so if you are looking for a</font>

523
00:18:58,429 --> 00:19:03,130
parameter<font color="#E5E5E5"> parameter value in your in</font>

524
00:19:01,039 --> 00:19:05,950
<font color="#CCCCCC">your programming code and the logic and</font>

525
00:19:03,130 --> 00:19:08,360
<font color="#E5E5E5">you're looking in</font><font color="#CCCCCC"> the wrong spot</font>

526
00:19:05,950 --> 00:19:10,039
something could go wrong<font color="#E5E5E5"> especially</font><font color="#CCCCCC"> for</font>

527
00:19:08,360 --> 00:19:14,629
<font color="#CCCCCC">doing input validation or you have a web</font>

528
00:19:10,039 --> 00:19:18,158
application<font color="#CCCCCC"> firewall so basically it</font>

529
00:19:14,630 --> 00:19:21,890
results in<font color="#E5E5E5"> confusion in the application</font>

530
00:19:18,159 --> 00:19:24,830
so here's an<font color="#CCCCCC"> example of an exploit using</font>

531
00:19:21,890 --> 00:19:26,960
<font color="#E5E5E5">this is you can</font><font color="#CCCCCC"> actually leverage</font><font color="#E5E5E5"> how</font><font color="#CCCCCC"> to</font>

532
00:19:24,830 --> 00:19:28,639
<font color="#E5E5E5">HTTP parameter pollution to get sequel</font>

533
00:19:26,960 --> 00:19:30,080
injections so if you have something<font color="#E5E5E5"> like</font>

534
00:19:28,640 --> 00:19:31,490
<font color="#E5E5E5">a web</font><font color="#CCCCCC"> application firewall or input</font>

535
00:19:30,080 --> 00:19:34,520
validation<font color="#E5E5E5"> that's looking for sequel</font>

536
00:19:31,490 --> 00:19:36,740
statements in the query<font color="#E5E5E5"> if you split it</font>

537
00:19:34,520 --> 00:19:39,139
up so<font color="#CCCCCC"> in for</font><font color="#E5E5E5"> example in asp.net</font><font color="#CCCCCC"> what</font>

538
00:19:36,740 --> 00:19:40,909
would happen<font color="#E5E5E5"> here</font><font color="#CCCCCC"> if you split this up</font>

539
00:19:39,140 --> 00:19:42,860
<font color="#E5E5E5">through different so you look at the Q</font>

540
00:19:40,909 --> 00:19:45,080
parameter here<font color="#CCCCCC"> Hugh happens a bunch of</font>

541
00:19:42,860 --> 00:19:47,780
times<font color="#CCCCCC"> cubicle select slash star Q equals</font>

542
00:19:45,080 --> 00:19:50,299
star slash<font color="#E5E5E5"> name and so on so forth so</font>

543
00:19:47,780 --> 00:19:51,590
<font color="#CCCCCC">this is a really</font><font color="#E5E5E5"> if you use asp.net</font>

544
00:19:50,299 --> 00:19:53,658
because it can catenate

545
00:19:51,590 --> 00:19:56,620
and with concatenates all the values

546
00:19:53,659 --> 00:19:58,390
with commas this is what it ends up with

547
00:19:56,620 --> 00:20:00,850
so if you<font color="#E5E5E5"> take a look at this all the</font>

548
00:19:58,390 --> 00:20:03,400
comments are actually commented out<font color="#CCCCCC"> a</font>

549
00:20:00,850 --> 00:20:06,730
<font color="#CCCCCC">Web Application Firewall I mean now they</font>

550
00:20:03,400 --> 00:20:08,679
might but some web application<font color="#E5E5E5"> powers</font>

551
00:20:06,730 --> 00:20:10,690
<font color="#E5E5E5">and some input validation might not</font>

552
00:20:08,679 --> 00:20:12,220
actually see<font color="#CCCCCC"> this as a sequel injection</font>

553
00:20:10,690 --> 00:20:14,770
<font color="#CCCCCC">they might</font><font color="#E5E5E5"> just see it as a bunch of</font>

554
00:20:12,220 --> 00:20:16,480
<font color="#E5E5E5">just random characters that looks valid</font>

555
00:20:14,770 --> 00:20:18,190
they didn't<font color="#E5E5E5"> check for</font><font color="#CCCCCC"> it so must be</font>

556
00:20:16,480 --> 00:20:19,570
<font color="#E5E5E5">valid and then that's a good sequel</font>

557
00:20:18,190 --> 00:20:22,390
objection so this is one way<font color="#CCCCCC"> of</font>

558
00:20:19,570 --> 00:20:23,830
leveraging<font color="#CCCCCC"> HTTP parameter pollution to</font>

559
00:20:22,390 --> 00:20:27,070
get something else<font color="#E5E5E5"> another more</font>

560
00:20:23,830 --> 00:20:28,990
dangerous devastating attack<font color="#CCCCCC"> as I</font>

561
00:20:27,070 --> 00:20:32,230
mentioned<font color="#E5E5E5"> before you</font><font color="#CCCCCC"> can also block with</font>

562
00:20:28,990 --> 00:20:34,840
<font color="#E5E5E5">a lot of web application firewalls</font><font color="#CCCCCC"> so in</font>

563
00:20:32,230 --> 00:20:37,299
this case it's a way of similarly<font color="#E5E5E5"> to how</font>

564
00:20:34,840 --> 00:20:39,129
we did<font color="#E5E5E5"> it with sequel injection if a</font>

565
00:20:37,299 --> 00:20:42,460
firewall is looking for the script tags

566
00:20:39,130 --> 00:20:44,590
in a query then if you split it up

567
00:20:42,460 --> 00:20:46,480
through<font color="#CCCCCC"> CDA parameters here</font><font color="#E5E5E5"> multiple</font>

568
00:20:44,590 --> 00:20:48,279
<font color="#CCCCCC">times</font><font color="#E5E5E5"> if you split it up like</font><font color="#CCCCCC"> that and</font>

569
00:20:46,480 --> 00:20:49,120
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> another way of</font><font color="#CCCCCC"> getting the script</font>

570
00:20:48,279 --> 00:20:50,770
tag in there

571
00:20:49,120 --> 00:20:53,049
this works less and less now with web

572
00:20:50,770 --> 00:20:54,639
application firewalls<font color="#E5E5E5"> however you can be</font>

573
00:20:53,049 --> 00:20:55,690
really<font color="#CCCCCC"> creative</font><font color="#E5E5E5"> with this because as</font>

574
00:20:54,640 --> 00:20:57,070
I'll get<font color="#E5E5E5"> into a</font><font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit there's</font>

575
00:20:55,690 --> 00:21:01,929
multiple<font color="#E5E5E5"> places to pass in a parameter</font>

576
00:20:57,070 --> 00:21:03,399
and not just in one<font color="#CCCCCC"> spot</font><font color="#E5E5E5"> so another way</font>

577
00:21:01,929 --> 00:21:06,429
is to bypass<font color="#E5E5E5"> input validation and so</font>

578
00:21:03,399 --> 00:21:08,799
here's<font color="#E5E5E5"> what I mean when I say you</font><font color="#CCCCCC"> can</font>

579
00:21:06,429 --> 00:21:11,830
pass it in multiple spot you<font color="#E5E5E5"> can pass it</font>

580
00:21:08,799 --> 00:21:13,840
in through the<font color="#E5E5E5"> URL parameters you can</font>

581
00:21:11,830 --> 00:21:15,490
pass it<font color="#CCCCCC"> in to the</font><font color="#E5E5E5"> cookie and you</font><font color="#CCCCCC"> can</font>

582
00:21:13,840 --> 00:21:16,959
pass it<font color="#CCCCCC"> into a post body so if you look</font>

583
00:21:15,490 --> 00:21:21,130
<font color="#E5E5E5">at this if this request in this request</font>

584
00:21:16,960 --> 00:21:23,770
<font color="#E5E5E5">in asp.net this would result in a equals</font>

585
00:21:21,130 --> 00:21:26,950
1 comma 2 comma<font color="#CCCCCC"> 3 comma 4 comma 5 comma</font>

586
00:21:23,770 --> 00:21:29,408
6 because yes<font color="#CCCCCC"> you can pass it in those</font>

587
00:21:26,950 --> 00:21:31,960
<font color="#E5E5E5">three different spots but the way that</font>

588
00:21:29,409 --> 00:21:33,039
<font color="#CCCCCC">it interprets the order of them</font><font color="#E5E5E5"> also</font>

589
00:21:31,960 --> 00:21:34,690
matters so if you're trying<font color="#CCCCCC"> to pass them</font>

590
00:21:33,039 --> 00:21:36,190
<font color="#CCCCCC">through a script</font><font color="#E5E5E5"> tag or a sequel</font>

591
00:21:34,690 --> 00:21:38,590
injection<font color="#E5E5E5"> it's going to matter the order</font>

592
00:21:36,190 --> 00:21:40,240
<font color="#E5E5E5">but you want to</font><font color="#CCCCCC"> be reassembled</font><font color="#E5E5E5"> so the</font>

593
00:21:38,590 --> 00:21:42,039
way asp.net handles it<font color="#E5E5E5"> I believe a lot</font>

594
00:21:40,240 --> 00:21:43,690
of<font color="#E5E5E5"> them handle it is the first thought</font>

595
00:21:42,039 --> 00:21:46,299
it<font color="#E5E5E5"> will look is in the URL parameters</font>

596
00:21:43,690 --> 00:21:49,600
<font color="#E5E5E5">second is going to</font><font color="#CCCCCC"> be in the</font><font color="#E5E5E5"> post body</font>

597
00:21:46,299 --> 00:21:51,820
<font color="#E5E5E5">and the third is in cookie values so</font>

598
00:21:49,600 --> 00:21:54,760
this could be<font color="#CCCCCC"> just if you use this</font><font color="#E5E5E5"> this</font>

599
00:21:51,820 --> 00:21:55,149
could<font color="#E5E5E5"> really help bypass web application</font>

600
00:21:54,760 --> 00:21:57,250
<font color="#CCCCCC">parts</font>

601
00:21:55,149 --> 00:21:59,168
<font color="#E5E5E5">firewalls input input filtering and</font>

602
00:21:57,250 --> 00:22:01,000
input validation<font color="#E5E5E5"> to get that</font>

603
00:21:59,169 --> 00:22:03,789
<font color="#CCCCCC">vulnerability where you may have been</font>

604
00:22:01,000 --> 00:22:06,700
stuck before<font color="#CCCCCC"> and then another example</font><font color="#E5E5E5"> is</font>

605
00:22:03,789 --> 00:22:08,169
through<font color="#CCCCCC"> I it just</font><font color="#E5E5E5"> makes URLs a little</font>

606
00:22:06,700 --> 00:22:09,909
more difficult to parse<font color="#E5E5E5"> so in like</font>

607
00:22:08,169 --> 00:22:10,240
phishing campaigns<font color="#CCCCCC"> Hayden was doing a</font>

608
00:22:09,909 --> 00:22:12,700
talk

609
00:22:10,240 --> 00:22:15,130
fishing yesterday<font color="#E5E5E5"> if you if you try to</font>

610
00:22:12,700 --> 00:22:17,320
fool user to click<font color="#E5E5E5"> your link or with</font>

611
00:22:15,130 --> 00:22:21,010
like cross-site scripting<font color="#CCCCCC"> it just acts</font>

612
00:22:17,320 --> 00:22:23,139
to further obfuscate<font color="#CCCCCC"> the URL that</font><font color="#E5E5E5"> you're</font>

613
00:22:21,010 --> 00:22:25,870
<font color="#E5E5E5">passing</font><font color="#CCCCCC"> them</font><font color="#E5E5E5"> so in this case it looks</font>

614
00:22:23,140 --> 00:22:28,179
<font color="#CCCCCC">like they're</font><font color="#E5E5E5"> doing a post action but</font>

615
00:22:25,870 --> 00:22:30,580
really it's<font color="#E5E5E5"> hidden through your URL</font>

616
00:22:28,179 --> 00:22:34,030
<font color="#E5E5E5">encoding encoded characters the action</font>

617
00:22:30,580 --> 00:22:34,830
on this<font color="#E5E5E5"> URL is to delete so let me give</font>

618
00:22:34,030 --> 00:22:37,389
you an<font color="#CCCCCC"> example of an actual</font>

619
00:22:34,830 --> 00:22:40,270
vulnerability where this happened<font color="#E5E5E5"> on</font>

620
00:22:37,390 --> 00:22:41,559
<font color="#E5E5E5">Twitter so with OAuth for those of you</font>

621
00:22:40,270 --> 00:22:45,129
that aren't familiar<font color="#CCCCCC"> what basically</font>

622
00:22:41,559 --> 00:22:47,590
allows a service to you to authorize not

623
00:22:45,130 --> 00:22:49,840
authenticate but authorize a service to

624
00:22:47,590 --> 00:22:52,300
do something on your behalf<font color="#CCCCCC"> so with</font>

625
00:22:49,840 --> 00:22:54,370
Twitter<font color="#E5E5E5"> it'll allow a service to read</font>

626
00:22:52,300 --> 00:22:57,399
your timeline to<font color="#E5E5E5"> write to your Timeline</font>

627
00:22:54,370 --> 00:23:01,020
things like that<font color="#E5E5E5"> so what this researcher</font>

628
00:22:57,400 --> 00:23:04,090
<font color="#E5E5E5">found was that I it was authorizing</font>

629
00:23:01,020 --> 00:23:07,059
<font color="#E5E5E5">Twitter to access or sort of periscope</font>

630
00:23:04,090 --> 00:23:08,620
TV to access their Twitter timeline<font color="#E5E5E5"> if</font>

631
00:23:07,059 --> 00:23:10,030
you look at<font color="#CCCCCC"> B I'm not sure how well you</font>

632
00:23:08,620 --> 00:23:13,330
<font color="#E5E5E5">can read this but if you look at the</font>

633
00:23:10,030 --> 00:23:15,340
host<font color="#E5E5E5"> parameter value on the first on the</font>

634
00:23:13,330 --> 00:23:18,370
second last<font color="#E5E5E5"> line the host value is</font>

635
00:23:15,340 --> 00:23:20,409
periscope TV<font color="#E5E5E5"> so it's saying periscope TV</font>

636
00:23:18,370 --> 00:23:22,178
is the one<font color="#E5E5E5"> that we want</font><font color="#CCCCCC"> to authorize</font><font color="#E5E5E5"> but</font>

637
00:23:20,410 --> 00:23:24,850
you see the additional parameter for

638
00:23:22,179 --> 00:23:27,910
host is attacker<font color="#E5E5E5"> comm what Twitter was</font>

639
00:23:24,850 --> 00:23:31,389
doing was it was<font color="#E5E5E5"> actually using</font><font color="#CCCCCC"> the</font>

640
00:23:27,910 --> 00:23:32,950
first value<font color="#E5E5E5"> for the</font><font color="#CCCCCC"> whitelist so it's</font>

641
00:23:31,390 --> 00:23:35,230
<font color="#CCCCCC">just to check</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> make sure this thing is</font>

642
00:23:32,950 --> 00:23:37,540
a valid applet host that it's<font color="#E5E5E5"> going to</font>

643
00:23:35,230 --> 00:23:38,980
<font color="#E5E5E5">use and then the second one was</font><font color="#CCCCCC"> the one</font>

644
00:23:37,540 --> 00:23:40,629
that was actually<font color="#E5E5E5"> authorized so user</font>

645
00:23:38,980 --> 00:23:42,730
receive this<font color="#E5E5E5"> to be like oh I'm you know</font>

646
00:23:40,630 --> 00:23:44,080
I'm authorizing periscope TV but really

647
00:23:42,730 --> 00:23:46,510
what happened by passing in that<font color="#E5E5E5"> extra</font>

648
00:23:44,080 --> 00:23:49,059
parameter is you're authorizing<font color="#E5E5E5"> attacker</font>

649
00:23:46,510 --> 00:23:51,160
<font color="#E5E5E5">comm to access your Twitter timeline so</font>

650
00:23:49,059 --> 00:23:53,080
it granted the OAuth token<font color="#CCCCCC"> to attacker</font>

651
00:23:51,160 --> 00:23:54,790
<font color="#CCCCCC">comm to be able</font><font color="#E5E5E5"> to access the Twitter</font>

652
00:23:53,080 --> 00:23:57,730
timeline when the user thought it was

653
00:23:54,790 --> 00:24:01,110
actually periscope TV<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is an example</font>

654
00:23:57,730 --> 00:24:04,150
of using a parameter pollution to to

655
00:24:01,110 --> 00:24:05,770
trick users and to<font color="#E5E5E5"> really in this case</font>

656
00:24:04,150 --> 00:24:07,630
gave them complete access<font color="#CCCCCC"> to their</font>

657
00:24:05,770 --> 00:24:09,210
Twitter profile so how do you actually

658
00:24:07,630 --> 00:24:12,040
test<font color="#E5E5E5"> for header parameter pollution</font>

659
00:24:09,210 --> 00:24:14,260
realistically the<font color="#CCCCCC"> only way you can</font><font color="#E5E5E5"> test</font>

660
00:24:12,040 --> 00:24:15,760
for<font color="#CCCCCC"> this</font><font color="#E5E5E5"> or the best way to test</font><font color="#CCCCCC"> for</font>

661
00:24:14,260 --> 00:24:17,260
this<font color="#E5E5E5"> is just</font><font color="#CCCCCC"> try it to see what</font><font color="#E5E5E5"> happens</font>

662
00:24:15,760 --> 00:24:18,910
<font color="#E5E5E5">to be passed multiple parameters with</font>

663
00:24:17,260 --> 00:24:21,790
different<font color="#E5E5E5"> values so</font><font color="#CCCCCC"> the same parameter</font>

664
00:24:18,910 --> 00:24:23,710
name<font color="#E5E5E5"> different value in this</font><font color="#CCCCCC"> bc bc</font>

665
00:24:21,790 --> 00:24:24,120
<font color="#E5E5E5">parameter try passing</font><font color="#CCCCCC"> in a different</font>

666
00:24:23,710 --> 00:24:26,040
value

667
00:24:24,120 --> 00:24:29,040
shows up see which one shows<font color="#CCCCCC"> up</font><font color="#E5E5E5"> how does</font>

668
00:24:26,040 --> 00:24:30,659
it respond you<font color="#E5E5E5"> can automate this burp</font>

669
00:24:29,040 --> 00:24:32,190
suite<font color="#CCCCCC"> this is</font><font color="#E5E5E5"> actually a fairly recent</font>

670
00:24:30,660 --> 00:24:33,600
addition they've made before you

671
00:24:32,190 --> 00:24:35,670
<font color="#E5E5E5">actually had to be a little trickier</font>

672
00:24:33,600 --> 00:24:37,379
with like looking for post<font color="#E5E5E5"> requests that</font>

673
00:24:35,670 --> 00:24:39,120
<font color="#E5E5E5">how to body things like that but now you</font>

674
00:24:37,380 --> 00:24:41,100
can<font color="#E5E5E5"> actually just look for requests</font><font color="#CCCCCC"> that</font>

675
00:24:39,120 --> 00:24:43,560
have parameters in them<font color="#E5E5E5"> so it's a really</font>

676
00:24:41,100 --> 00:24:45,209
<font color="#CCCCCC">easy</font><font color="#E5E5E5"> way to see and</font><font color="#CCCCCC"> if you scope it to</font>

677
00:24:43,560 --> 00:24:48,270
your own application<font color="#E5E5E5"> it's way better so</font>

678
00:24:45,210 --> 00:24:49,860
you can<font color="#E5E5E5"> see what exactly</font><font color="#CCCCCC"> what requests</font>

679
00:24:48,270 --> 00:24:52,139
have parameters in them first<font color="#CCCCCC"> sweet</font>

680
00:24:49,860 --> 00:24:53,820
intruder you can use to automate testing

681
00:24:52,140 --> 00:24:55,440
<font color="#E5E5E5">a bunch of results</font><font color="#CCCCCC"> you can pass in like</font>

682
00:24:53,820 --> 00:24:56,700
a fuzzing list you can pass in sequel

683
00:24:55,440 --> 00:24:57,930
injection things like that through<font color="#E5E5E5"> the</font>

684
00:24:56,700 --> 00:25:02,760
second parameter and see where it shows

685
00:24:57,930 --> 00:25:04,830
<font color="#CCCCCC">up you</font><font color="#E5E5E5"> can look in I'll get to</font><font color="#CCCCCC"> later on</font>

686
00:25:02,760 --> 00:25:06,360
defenses<font color="#E5E5E5"> but basically you can</font><font color="#CCCCCC"> look</font><font color="#E5E5E5"> in</font>

687
00:25:04,830 --> 00:25:08,250
your source<font color="#E5E5E5"> code for instances where</font>

688
00:25:06,360 --> 00:25:10,889
there are<font color="#E5E5E5"> parameters</font><font color="#CCCCCC"> that are passed in</font>

689
00:25:08,250 --> 00:25:13,080
and see how you handle<font color="#E5E5E5"> it I'll get into</font>

690
00:25:10,890 --> 00:25:14,760
<font color="#E5E5E5">more detail later so the sources for</font>

691
00:25:13,080 --> 00:25:16,500
parameters I mean this is<font color="#E5E5E5"> pretty</font>

692
00:25:14,760 --> 00:25:18,330
<font color="#E5E5E5">straightforward but</font><font color="#CCCCCC"> you look in form</font>

693
00:25:16,500 --> 00:25:20,030
<font color="#E5E5E5">field pagination so like</font><font color="#CCCCCC"> and page equals</font>

694
00:25:18,330 --> 00:25:24,870
<font color="#E5E5E5">one pages</font><font color="#CCCCCC"> will see things like that</font>

695
00:25:20,030 --> 00:25:27,899
<font color="#E5E5E5">admin page identifiers so if the admin</font>

696
00:25:24,870 --> 00:25:28,770
page is one but you pass in a second

697
00:25:27,900 --> 00:25:32,040
parameter<font color="#E5E5E5"> with one two three or four</font>

698
00:25:28,770 --> 00:25:33,450
five the authentication or your access

699
00:25:32,040 --> 00:25:35,820
control might actually be looking<font color="#E5E5E5"> at the</font>

700
00:25:33,450 --> 00:25:38,490
<font color="#E5E5E5">last instant</font><font color="#CCCCCC"> but the application</font>

701
00:25:35,820 --> 00:25:40,590
underneath might be actually<font color="#E5E5E5"> request</font>

702
00:25:38,490 --> 00:25:42,330
<font color="#E5E5E5">they're using the first instance so your</font>

703
00:25:40,590 --> 00:25:44,040
firewall might see oh yeah

704
00:25:42,330 --> 00:25:46,649
it's they're looking for page<font color="#E5E5E5"> 1 2 3 4</font><font color="#CCCCCC"> 5</font>

705
00:25:44,040 --> 00:25:48,720
that's authorized for anyone but the

706
00:25:46,650 --> 00:25:50,790
source code the application<font color="#CCCCCC"> itself might</font>

707
00:25:48,720 --> 00:25:53,250
redirect<font color="#CCCCCC"> you to page</font><font color="#E5E5E5"> 1 and then give you</font>

708
00:25:50,790 --> 00:25:54,990
admin page so look for admin page

709
00:25:53,250 --> 00:25:56,070
identifiers as well because if you can

710
00:25:54,990 --> 00:25:58,770
reference those<font color="#E5E5E5"> by</font><font color="#CCCCCC"> passing another</font>

711
00:25:56,070 --> 00:26:00,750
parameter that's way<font color="#CCCCCC"> bypassing that and</font>

712
00:25:58,770 --> 00:26:03,330
again like I said<font color="#CCCCCC"> just try intercepting</font>

713
00:26:00,750 --> 00:26:05,760
all the requests with parameters so how

714
00:26:03,330 --> 00:26:08,550
do you defend against HTTP parameter

715
00:26:05,760 --> 00:26:11,040
pollution well first and foremost<font color="#E5E5E5"> is</font>

716
00:26:08,550 --> 00:26:12,990
testing so just test to see how this

717
00:26:11,040 --> 00:26:15,090
<font color="#E5E5E5">works in your application and see</font><font color="#CCCCCC"> how it</font>

718
00:26:12,990 --> 00:26:17,610
responds<font color="#E5E5E5"> when you pass in multiple</font>

719
00:26:15,090 --> 00:26:19,379
parameters again like I<font color="#CCCCCC"> mentioned before</font>

720
00:26:17,610 --> 00:26:20,850
look in the source<font color="#E5E5E5"> code</font><font color="#CCCCCC"> see if you're</font>

721
00:26:19,380 --> 00:26:23,460
explicitly checking the first of the

722
00:26:20,850 --> 00:26:25,500
<font color="#CCCCCC">last one</font><font color="#E5E5E5"> but most in most cases you're</font>

723
00:26:23,460 --> 00:26:27,420
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> see that the source</font><font color="#CCCCCC"> code</font><font color="#E5E5E5"> is the</font>

724
00:26:25,500 --> 00:26:28,890
applications just taking a parameter

725
00:26:27,420 --> 00:26:29,880
it's not taking the first<font color="#CCCCCC"> primer it's</font>

726
00:26:28,890 --> 00:26:32,250
not taking the<font color="#E5E5E5"> last parameter is just</font>

727
00:26:29,880 --> 00:26:34,500
<font color="#E5E5E5">taking a parameter if you reference back</font>

728
00:26:32,250 --> 00:26:36,090
to<font color="#E5E5E5"> that the list that I provided before</font>

729
00:26:34,500 --> 00:26:37,260
up<font color="#CCCCCC"> to</font><font color="#E5E5E5"> different technologies</font><font color="#CCCCCC"> and which</font>

730
00:26:36,090 --> 00:26:39,270
ones they take

731
00:26:37,260 --> 00:26:41,100
see what yours is using and see if yours

732
00:26:39,270 --> 00:26:44,129
is coded explicitly that way or if it's

733
00:26:41,100 --> 00:26:45,659
expecting something<font color="#E5E5E5"> else ideally you're</font>

734
00:26:44,130 --> 00:26:47,010
going<font color="#CCCCCC"> to want to be explicit</font><font color="#E5E5E5"> as possible</font>

735
00:26:45,660 --> 00:26:49,049
and try to<font color="#CCCCCC"> strip other duplicate</font>

736
00:26:47,010 --> 00:26:50,340
parameters out<font color="#E5E5E5"> again this is just</font><font color="#CCCCCC"> more</font>

737
00:26:49,049 --> 00:26:51,929
<font color="#CCCCCC">of a</font><font color="#E5E5E5"> sandy D check to make sure you're</font>

738
00:26:50,340 --> 00:26:53,820
explicitly checking the right parameter

739
00:26:51,929 --> 00:26:56,070
<font color="#E5E5E5">and check to see</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> for your web</font>

740
00:26:53,820 --> 00:26:59,730
application firewall<font color="#CCCCCC"> is doing</font><font color="#E5E5E5"> the same</font>

741
00:26:56,070 --> 00:27:02,309
<font color="#CCCCCC">thing</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> your if you're trusting</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> -</font>

742
00:26:59,730 --> 00:27:04,410
to prevent<font color="#E5E5E5"> attacks</font><font color="#CCCCCC"> you're going to want</font>

743
00:27:02,309 --> 00:27:06,270
to<font color="#E5E5E5"> make</font><font color="#CCCCCC"> sure that it's</font><font color="#E5E5E5"> actually doing</font>

744
00:27:04,410 --> 00:27:08,190
its job the right way<font color="#CCCCCC"> and output</font>

745
00:27:06,270 --> 00:27:10,110
<font color="#CCCCCC">encoding</font><font color="#E5E5E5"> means that this is just a good</font>

746
00:27:08,190 --> 00:27:13,290
<font color="#E5E5E5">practice</font><font color="#CCCCCC"> for general defensive</font>

747
00:27:10,110 --> 00:27:15,000
programming<font color="#CCCCCC"> but when you're going to be</font>

748
00:27:13,290 --> 00:27:17,520
taking parameters<font color="#E5E5E5"> and about an input</font>

749
00:27:15,000 --> 00:27:19,950
from a user<font color="#E5E5E5"> always assume it's malicious</font>

750
00:27:17,520 --> 00:27:22,918
<font color="#E5E5E5">so when it comes back out on the other</font>

751
00:27:19,950 --> 00:27:24,000
<font color="#E5E5E5">side if you encode it let's say let's</font>

752
00:27:22,919 --> 00:27:25,530
say<font color="#E5E5E5"> someone passed in the sequel</font>

753
00:27:24,000 --> 00:27:27,360
injection string that bypassed your

754
00:27:25,530 --> 00:27:30,030
firewall<font color="#E5E5E5"> bypass</font><font color="#CCCCCC"> bypassed your input</font>

755
00:27:27,360 --> 00:27:31,740
validation<font color="#E5E5E5"> and then it goes through your</font>

756
00:27:30,030 --> 00:27:34,020
to your sequel database if you were to

757
00:27:31,740 --> 00:27:37,400
do output encoding first<font color="#E5E5E5"> it will come up</font>

758
00:27:34,020 --> 00:27:39,240
<font color="#CCCCCC">with</font><font color="#E5E5E5"> an error because you all the</font>

759
00:27:37,400 --> 00:27:41,760
<font color="#CCCCCC">special characters and things that you</font>

760
00:27:39,240 --> 00:27:43,590
pass in are<font color="#E5E5E5"> really going to be encoded</font>

761
00:27:41,760 --> 00:27:45,750
<font color="#E5E5E5">and so it's not going to be interpreted</font>

762
00:27:43,590 --> 00:27:47,520
properly<font color="#CCCCCC"> by the database</font><font color="#E5E5E5"> I'm sitting</font>

763
00:27:45,750 --> 00:27:48,780
with<font color="#CCCCCC"> the script</font><font color="#E5E5E5"> tags when you pass them</font>

764
00:27:47,520 --> 00:27:51,090
<font color="#CCCCCC">in when you saw the cross-site scripting</font>

765
00:27:48,780 --> 00:27:53,250
earlier if you encode that before it

766
00:27:51,090 --> 00:27:55,080
comes<font color="#E5E5E5"> back in the application it won't</font>

767
00:27:53,250 --> 00:27:56,340
execute<font color="#E5E5E5"> a script tags and that negates</font>

768
00:27:55,080 --> 00:27:58,830
any<font color="#E5E5E5"> attacks so it's</font><font color="#CCCCCC"> just a further</font>

769
00:27:56,340 --> 00:28:01,260
mitigation to use there's a lot of

770
00:27:58,830 --> 00:28:04,049
resources on HTTP parameter pollution so

771
00:28:01,260 --> 00:28:05,280
this is a big list of them<font color="#CCCCCC"> again</font><font color="#E5E5E5"> reach</font>

772
00:28:04,049 --> 00:28:06,600
<font color="#E5E5E5">out to me afterwards</font><font color="#CCCCCC"> and I'd be</font><font color="#E5E5E5"> happy to</font>

773
00:28:05,280 --> 00:28:08,850
share this slide<font color="#E5E5E5"> back with you but</font>

774
00:28:06,600 --> 00:28:10,049
there's a lot on there<font color="#E5E5E5"> and it</font><font color="#CCCCCC"> actually</font>

775
00:28:08,850 --> 00:28:12,240
it's cool because a lot of<font color="#CCCCCC"> these provide</font>

776
00:28:10,049 --> 00:28:14,400
some some other<font color="#E5E5E5"> attack scenarios to show</font>

777
00:28:12,240 --> 00:28:18,510
you like<font color="#E5E5E5"> exactly what's been done with</font>

778
00:28:14,400 --> 00:28:20,910
<font color="#E5E5E5">this attack so last but not least server</font>

779
00:28:18,510 --> 00:28:24,030
<font color="#E5E5E5">side request forgery this</font><font color="#CCCCCC"> was actually</font>

780
00:28:20,910 --> 00:28:25,620
<font color="#CCCCCC">pretty fun and</font><font color="#E5E5E5"> it came</font><font color="#CCCCCC"> up in a in an</font>

781
00:28:24,030 --> 00:28:26,668
open sort I did was doing a security

782
00:28:25,620 --> 00:28:30,120
<font color="#CCCCCC">review of an open source</font><font color="#E5E5E5"> application</font>

783
00:28:26,669 --> 00:28:33,270
recently<font color="#E5E5E5"> and this actual attack came up</font>

784
00:28:30,120 --> 00:28:35,610
and we had to<font color="#E5E5E5"> put</font><font color="#CCCCCC"> a lot in place to</font>

785
00:28:33,270 --> 00:28:37,980
mitigate<font color="#E5E5E5"> it but what it basically means</font>

786
00:28:35,610 --> 00:28:40,559
<font color="#E5E5E5">is if an attacker can use your server</font>

787
00:28:37,980 --> 00:28:42,929
your system to<font color="#E5E5E5"> make requests out on</font>

788
00:28:40,559 --> 00:28:45,389
their<font color="#E5E5E5"> behalf that server side row</font><font color="#CCCCCC"> craft</font>

789
00:28:42,929 --> 00:28:47,340
forgery<font color="#E5E5E5"> so it essentially makes your</font>

790
00:28:45,390 --> 00:28:50,370
server into a<font color="#E5E5E5"> proxy for</font><font color="#CCCCCC"> the attacker</font>

791
00:28:47,340 --> 00:28:52,990
<font color="#E5E5E5">I'll give you some more</font><font color="#CCCCCC"> details</font>

792
00:28:50,370 --> 00:28:54,639
so what<font color="#CCCCCC"> can it be used for it can</font><font color="#E5E5E5"> be</font>

793
00:28:52,990 --> 00:28:56,590
used to<font color="#E5E5E5"> bypass firewall so if an</font>

794
00:28:54,640 --> 00:28:59,590
attacker can use<font color="#E5E5E5"> your system</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> make</font>

795
00:28:56,590 --> 00:29:01,149
requests out if<font color="#E5E5E5"> your if that attackers</font>

796
00:28:59,590 --> 00:29:02,679
IP is blocked or they're not on some

797
00:29:01,150 --> 00:29:05,380
kind of<font color="#E5E5E5"> whitelist but that system that</font>

798
00:29:02,680 --> 00:29:06,850
<font color="#CCCCCC">they're making request</font><font color="#E5E5E5"> through is then</font>

799
00:29:05,380 --> 00:29:10,240
it's allowed<font color="#E5E5E5"> it's trusted and it'll get</font>

800
00:29:06,850 --> 00:29:13,719
<font color="#CCCCCC">passed firewall</font><font color="#E5E5E5"> similarly this is really</font>

801
00:29:10,240 --> 00:29:15,610
interesting<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of systems</font><font color="#E5E5E5"> a lot of</font>

802
00:29:13,720 --> 00:29:18,430
web<font color="#E5E5E5"> servers don't just have an external</font>

803
00:29:15,610 --> 00:29:19,959
facing<font color="#CCCCCC"> eye interface a lot of them also</font>

804
00:29:18,430 --> 00:29:23,290
have an internal facing interface as

805
00:29:19,960 --> 00:29:25,210
well<font color="#CCCCCC"> so if an attacker can make a</font><font color="#E5E5E5"> system</font>

806
00:29:23,290 --> 00:29:27,730
or a server make requests out for them

807
00:29:25,210 --> 00:29:28,960
they can<font color="#E5E5E5"> see what's on that internal</font>

808
00:29:27,730 --> 00:29:30,100
network as well<font color="#E5E5E5"> they can not</font><font color="#CCCCCC"> only make</font>

809
00:29:28,960 --> 00:29:31,480
requests<font color="#CCCCCC"> out to the Internet they can</font>

810
00:29:30,100 --> 00:29:33,129
make requests out to the internal access

811
00:29:31,480 --> 00:29:35,170
<font color="#E5E5E5">in the internal network which is</font>

812
00:29:33,130 --> 00:29:36,970
normally not<font color="#CCCCCC"> accessible to anyone on the</font>

813
00:29:35,170 --> 00:29:38,170
<font color="#CCCCCC">outside so there's another really really</font>

814
00:29:36,970 --> 00:29:39,520
<font color="#E5E5E5">interesting way</font><font color="#CCCCCC"> to leverage</font><font color="#E5E5E5"> it and I'll</font>

815
00:29:38,170 --> 00:29:43,660
give you an<font color="#CCCCCC"> example</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> that actually</font>

816
00:29:39,520 --> 00:29:46,780
<font color="#CCCCCC">being</font><font color="#E5E5E5"> done later on so a lot</font><font color="#CCCCCC"> of us come</font>

817
00:29:43,660 --> 00:29:49,210
<font color="#CCCCCC">in to security and we like to do network</font>

818
00:29:46,780 --> 00:29:52,149
security or infrastructure<font color="#CCCCCC"> security or</font>

819
00:29:49,210 --> 00:29:53,440
application security<font color="#CCCCCC"> this is a really</font>

820
00:29:52,150 --> 00:29:55,870
interesting way through this particular

821
00:29:53,440 --> 00:29:57,310
<font color="#CCCCCC">attack to transition from application</font>

822
00:29:55,870 --> 00:29:59,169
security<font color="#CCCCCC"> over</font><font color="#E5E5E5"> to network security so you</font>

823
00:29:57,310 --> 00:30:02,830
got a you get to<font color="#E5E5E5"> kind of use both and</font>

824
00:29:59,170 --> 00:30:04,690
from a defensive point of view you<font color="#E5E5E5"> have</font>

825
00:30:02,830 --> 00:30:07,720
<font color="#E5E5E5">to know both sides to really understand</font>

826
00:30:04,690 --> 00:30:09,100
<font color="#E5E5E5">the effects of this so coming in a lot</font>

827
00:30:07,720 --> 00:30:10,390
<font color="#CCCCCC">of these are exposed</font><font color="#E5E5E5"> through application</font>

828
00:30:09,100 --> 00:30:13,240
attacks so the application will

829
00:30:10,390 --> 00:30:14,890
essentially result in this allowing the

830
00:30:13,240 --> 00:30:16,840
attackers<font color="#E5E5E5"> to use the system</font><font color="#CCCCCC"> to make</font>

831
00:30:14,890 --> 00:30:18,520
<font color="#E5E5E5">requests out but then those requests out</font>

832
00:30:16,840 --> 00:30:20,470
what do you do with those requests<font color="#E5E5E5"> out</font>

833
00:30:18,520 --> 00:30:23,020
to other systems<font color="#E5E5E5"> that becomes more of a</font>

834
00:30:20,470 --> 00:30:24,780
<font color="#CCCCCC">network problem I'll show you again</font>

835
00:30:23,020 --> 00:30:27,040
later<font color="#E5E5E5"> on what that kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> means</font><font color="#CCCCCC"> and</font>

836
00:30:24,780 --> 00:30:29,470
it's<font color="#CCCCCC"> useful for</font><font color="#E5E5E5"> a numeration and</font>

837
00:30:27,040 --> 00:30:31,540
reconnaissance<font color="#CCCCCC"> see the reason is because</font>

838
00:30:29,470 --> 00:30:33,610
<font color="#E5E5E5">it essentially turns that server that</font>

839
00:30:31,540 --> 00:30:38,430
the vulnerable<font color="#E5E5E5"> server into a port</font>

840
00:30:33,610 --> 00:30:41,889
scanning tool for the attacker<font color="#E5E5E5"> and</font>

841
00:30:38,430 --> 00:30:43,330
because the requests<font color="#E5E5E5"> coming out to the</font>

842
00:30:41,890 --> 00:30:45,910
other systems<font color="#E5E5E5"> look like they're</font><font color="#CCCCCC"> coming</font>

843
00:30:43,330 --> 00:30:47,470
from<font color="#E5E5E5"> that vulnerable server you can't</font>

844
00:30:45,910 --> 00:30:49,030
see what the attackers IP is unless

845
00:30:47,470 --> 00:30:51,220
you're on<font color="#E5E5E5"> that vulnerable server so</font>

846
00:30:49,030 --> 00:30:53,680
anything so attackers love this<font color="#CCCCCC"> because</font>

847
00:30:51,220 --> 00:30:55,510
it basically<font color="#E5E5E5"> gives them a bot to then</font>

848
00:30:53,680 --> 00:30:57,250
make requests out and ports<font color="#E5E5E5"> and other</font>

849
00:30:55,510 --> 00:30:59,590
<font color="#E5E5E5">things and for scam an internal network</font>

850
00:30:57,250 --> 00:31:01,540
on their behalf<font color="#E5E5E5"> and no one knows what</font>

851
00:30:59,590 --> 00:31:03,120
their actual IP is so it could<font color="#E5E5E5"> also</font>

852
00:31:01,540 --> 00:31:04,290
result in that vulnerable<font color="#CCCCCC"> server</font>

853
00:31:03,120 --> 00:31:08,340
getting blocked<font color="#CCCCCC"> and put on a list</font><font color="#E5E5E5"> that</font>

854
00:31:04,290 --> 00:31:10,020
<font color="#CCCCCC">doesn't</font><font color="#E5E5E5"> want to be put up and sometimes</font>

855
00:31:08,340 --> 00:31:11,909
when you make<font color="#E5E5E5"> requests out if you can</font>

856
00:31:10,020 --> 00:31:14,160
force it to<font color="#E5E5E5"> make a request</font><font color="#CCCCCC"> out to</font><font color="#E5E5E5"> your</font>

857
00:31:11,910 --> 00:31:16,770
<font color="#E5E5E5">own server</font><font color="#CCCCCC"> and it</font><font color="#E5E5E5"> returns the response</font>

858
00:31:14,160 --> 00:31:19,170
back in the page then you can<font color="#CCCCCC"> return</font><font color="#E5E5E5"> it</font>

859
00:31:16,770 --> 00:31:23,730
for turn back a page that has cross-site

860
00:31:19,170 --> 00:31:25,170
scripting on<font color="#E5E5E5"> it and this is so the way</font>

861
00:31:23,730 --> 00:31:26,430
<font color="#CCCCCC">that it's introduced is often by</font>

862
00:31:25,170 --> 00:31:29,670
developers trying to<font color="#CCCCCC"> bypass the same</font>

863
00:31:26,430 --> 00:31:31,380
<font color="#E5E5E5">origin policy basically I'm going to</font>

864
00:31:29,670 --> 00:31:33,720
<font color="#E5E5E5">talk about</font><font color="#CCCCCC"> a little</font><font color="#E5E5E5"> bit later in defense</font>

865
00:31:31,380 --> 00:31:36,179
as well<font color="#E5E5E5"> but same origin policy prevents</font>

866
00:31:33,720 --> 00:31:38,250
<font color="#E5E5E5">a bra it's a browser protection that</font>

867
00:31:36,179 --> 00:31:40,470
prevents a<font color="#CCCCCC"> website a domain from</font><font color="#E5E5E5"> making</font>

868
00:31:38,250 --> 00:31:43,559
a<font color="#E5E5E5"> request out to</font><font color="#CCCCCC"> any</font><font color="#E5E5E5"> other domain that's</font>

869
00:31:40,470 --> 00:31:45,360
<font color="#E5E5E5">not its own</font><font color="#CCCCCC"> there's a way to obviously</font>

870
00:31:43,559 --> 00:31:46,559
<font color="#E5E5E5">allow this through</font><font color="#CCCCCC"> cross-origin request</font>

871
00:31:45,360 --> 00:31:48,709
sharing which I'll get<font color="#E5E5E5"> to</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> later but</font>

872
00:31:46,559 --> 00:31:51,510
<font color="#E5E5E5">basically understand same origin policy</font>

873
00:31:48,710 --> 00:31:54,630
<font color="#CCCCCC">one domain domain</font><font color="#E5E5E5"> a cannot make a</font>

874
00:31:51,510 --> 00:31:56,730
request<font color="#CCCCCC"> to domain B if it's unless</font><font color="#E5E5E5"> it's</font>

875
00:31:54,630 --> 00:31:59,059
explicitly allowed so if you want<font color="#E5E5E5"> to</font>

876
00:31:56,730 --> 00:32:01,500
request<font color="#CCCCCC"> resources on that other domain</font>

877
00:31:59,059 --> 00:32:05,309
<font color="#E5E5E5">then it will be blocked by your browser</font>

878
00:32:01,500 --> 00:32:06,960
<font color="#CCCCCC">there's there's</font><font color="#E5E5E5"> exceptions to this and</font>

879
00:32:05,309 --> 00:32:09,059
there's exceptions<font color="#E5E5E5"> through like loading</font>

880
00:32:06,960 --> 00:32:10,920
in a another script from<font color="#E5E5E5"> another</font>

881
00:32:09,059 --> 00:32:12,420
resource<font color="#CCCCCC"> but for the</font><font color="#E5E5E5"> most part if you</font>

882
00:32:10,920 --> 00:32:13,920
want<font color="#E5E5E5"> to go and make a request it</font><font color="#CCCCCC"> to</font>

883
00:32:12,420 --> 00:32:15,179
<font color="#CCCCCC">another page and return</font><font color="#E5E5E5"> back like</font><font color="#CCCCCC"> Oh</font>

884
00:32:13,920 --> 00:32:17,100
what does<font color="#E5E5E5"> this page look like return it</font>

885
00:32:15,179 --> 00:32:18,840
back<font color="#CCCCCC"> it's not allowed so developers to</font>

886
00:32:17,100 --> 00:32:21,570
get around this what they'll do is they

887
00:32:18,840 --> 00:32:23,428
will they will<font color="#E5E5E5"> make the request not on</font>

888
00:32:21,570 --> 00:32:25,139
the<font color="#E5E5E5"> client side through the browser but</font>

889
00:32:23,429 --> 00:32:27,990
they'll take<font color="#E5E5E5"> the request do it on the</font>

890
00:32:25,140 --> 00:32:30,900
server<font color="#E5E5E5"> return it back and then put it</font>

891
00:32:27,990 --> 00:32:33,720
into<font color="#E5E5E5"> the page</font><font color="#CCCCCC"> there's a</font><font color="#E5E5E5"> reason</font><font color="#CCCCCC"> same</font>

892
00:32:30,900 --> 00:32:35,100
<font color="#CCCCCC">origin policies there</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> it's developers</font>

893
00:32:33,720 --> 00:32:38,700
<font color="#CCCCCC">implement this</font><font color="#E5E5E5"> it's not a bug</font><font color="#CCCCCC"> it's a</font>

894
00:32:35,100 --> 00:32:40,770
feature but really it's a bug so let's

895
00:32:38,700 --> 00:32:43,110
take a look<font color="#E5E5E5"> at what some exploits are</font>

896
00:32:40,770 --> 00:32:46,470
for this so how<font color="#CCCCCC"> has it been</font><font color="#E5E5E5"> actually</font>

897
00:32:43,110 --> 00:32:49,409
used<font color="#E5E5E5"> to to attack certain applications</font>

898
00:32:46,470 --> 00:32:51,690
<font color="#E5E5E5">so first off querying AWS metadata</font>

899
00:32:49,410 --> 00:32:53,790
through<font color="#CCCCCC"> SS our</font><font color="#E5E5E5"> app I had a discussion</font>

900
00:32:51,690 --> 00:32:57,660
with I think<font color="#E5E5E5"> Dave about this the other</font>

901
00:32:53,790 --> 00:32:59,309
<font color="#CCCCCC">night but I'll get</font><font color="#E5E5E5"> to what this means</font>

902
00:32:57,660 --> 00:33:02,100
soup but this is what happened an

903
00:32:59,309 --> 00:33:04,290
attacker found a<font color="#E5E5E5"> endpoint and take a</font>

904
00:33:02,100 --> 00:33:06,030
look at that<font color="#CCCCCC"> endpoint URL</font><font color="#E5E5E5"> there's at the</font>

905
00:33:04,290 --> 00:33:08,820
end there's media preview dot<font color="#E5E5E5"> PHP and</font>

906
00:33:06,030 --> 00:33:12,360
<font color="#CCCCCC">then the parameter is URL equals</font><font color="#E5E5E5"> when</font>

907
00:33:08,820 --> 00:33:13,770
you find URL equals<font color="#E5E5E5"> in a URL</font><font color="#CCCCCC"> you're</font>

908
00:33:12,360 --> 00:33:16,260
<font color="#CCCCCC">laughing as an attacker it's great</font>

909
00:33:13,770 --> 00:33:16,840
because<font color="#E5E5E5"> oftentimes that will result in</font>

910
00:33:16,260 --> 00:33:18,789
an open

911
00:33:16,840 --> 00:33:20,408
redirect so you can just put anything in

912
00:33:18,789 --> 00:33:23,169
<font color="#E5E5E5">that URL and</font><font color="#CCCCCC"> then something else either</font>

913
00:33:20,409 --> 00:33:26,140
<font color="#CCCCCC">the user will be</font><font color="#E5E5E5"> redirected or what</font>

914
00:33:23,169 --> 00:33:29,140
happened in this case<font color="#CCCCCC"> is it allows you</font>

915
00:33:26,140 --> 00:33:32,049
to<font color="#E5E5E5"> load</font><font color="#CCCCCC"> content to the page so in this</font>

916
00:33:29,140 --> 00:33:34,659
case it only<font color="#E5E5E5"> loaded images but the way</font>

917
00:33:32,049 --> 00:33:36,309
that<font color="#E5E5E5"> it was checking for images was just</font>

918
00:33:34,659 --> 00:33:40,090
looking<font color="#CCCCCC"> for</font><font color="#E5E5E5"> the instance of dot PNG or</font>

919
00:33:36,309 --> 00:33:42,070
<font color="#E5E5E5">JPEG so by passing in this is the attack</font>

920
00:33:40,090 --> 00:33:45,370
<font color="#E5E5E5">this is the researchers domain so I left</font>

921
00:33:42,070 --> 00:33:47,470
<font color="#E5E5E5">it in there but passing in question mark</font>

922
00:33:45,370 --> 00:33:49,449
dot PNG at the end was enough to pass

923
00:33:47,470 --> 00:33:50,649
the validation<font color="#CCCCCC"> so they could basically</font>

924
00:33:49,450 --> 00:33:54,250
<font color="#E5E5E5">load it</font><font color="#CCCCCC"> loaded in</font>

925
00:33:50,649 --> 00:33:56,110
<font color="#CCCCCC">Ziya org</font><font color="#E5E5E5"> into the page and</font><font color="#CCCCCC"> then just</font>

926
00:33:54,250 --> 00:33:57,970
<font color="#E5E5E5">passed as a parameter with dot PNG which</font>

927
00:33:56,110 --> 00:34:02,889
does nothing anyways but if<font color="#E5E5E5"> I pass the</font>

928
00:33:57,970 --> 00:34:04,270
validation<font color="#CCCCCC"> so what they did then is like</font>

929
00:34:02,890 --> 00:34:06,039
I<font color="#E5E5E5"> mentioned before</font><font color="#CCCCCC"> they just created</font><font color="#E5E5E5"> a</font>

930
00:34:04,270 --> 00:34:07,658
page called<font color="#CCCCCC"> XSS dot HTML which hide</font>

931
00:34:06,039 --> 00:34:10,629
cross-site scripting on<font color="#E5E5E5"> it and then boom</font>

932
00:34:07,659 --> 00:34:12,580
that page loaded in the browser<font color="#E5E5E5"> through</font>

933
00:34:10,629 --> 00:34:13,899
this<font color="#E5E5E5"> server-side request forgery so it</font>

934
00:34:12,580 --> 00:34:16,330
allowed them<font color="#CCCCCC"> to</font><font color="#E5E5E5"> make this request out</font>

935
00:34:13,899 --> 00:34:19,509
bring back a page from another<font color="#E5E5E5"> domain</font>

936
00:34:16,330 --> 00:34:21,549
and load it in<font color="#CCCCCC"> the page itself</font><font color="#E5E5E5"> and there</font>

937
00:34:19,510 --> 00:34:24,250
they had prostate scripting<font color="#E5E5E5"> but that's</font>

938
00:34:21,550 --> 00:34:27,159
not all so they got cross-site scripting

939
00:34:24,250 --> 00:34:29,230
and then from there so overly permissive

940
00:34:27,159 --> 00:34:31,210
<font color="#E5E5E5">regex is another vulnerability that</font><font color="#CCCCCC"> i</font>

941
00:34:29,230 --> 00:34:33,070
would like<font color="#E5E5E5"> to briefly cover but</font>

942
00:34:31,210 --> 00:34:35,290
basically make<font color="#CCCCCC"> sure</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> irregular</font>

943
00:34:33,070 --> 00:34:39,790
expressions are done right<font color="#E5E5E5"> so I'll say</font>

944
00:34:35,290 --> 00:34:43,000
right<font color="#CCCCCC"> now so that wasn't</font><font color="#E5E5E5"> all did you</font>

945
00:34:39,790 --> 00:34:45,190
know that you can query this IP<font color="#E5E5E5"> if you</font>

946
00:34:43,000 --> 00:34:48,460
have an AWS instance<font color="#CCCCCC"> and it will</font><font color="#E5E5E5"> return</font>

947
00:34:45,190 --> 00:34:52,750
AWS instance metadata<font color="#E5E5E5"> so what they did</font>

948
00:34:48,460 --> 00:34:55,869
<font color="#CCCCCC">was</font><font color="#E5E5E5"> they queried they were queried that</font>

949
00:34:52,750 --> 00:34:58,359
<font color="#CCCCCC">you're that IP</font><font color="#E5E5E5"> with latest metadata</font><font color="#CCCCCC"> by</font>

950
00:34:55,869 --> 00:35:00,520
<font color="#CCCCCC">path V input</font><font color="#E5E5E5"> validation</font><font color="#CCCCCC"> and it returned</font>

951
00:34:58,359 --> 00:35:02,529
back all the instance metadata for that

952
00:35:00,520 --> 00:35:03,880
AWS instance<font color="#CCCCCC"> so they don't only</font><font color="#E5E5E5"> had a</font>

953
00:35:02,530 --> 00:35:05,710
cross-site scripting they said no<font color="#E5E5E5"> that's</font>

954
00:35:03,880 --> 00:35:07,510
<font color="#E5E5E5">not enough they went further</font><font color="#CCCCCC"> and they</font>

955
00:35:05,710 --> 00:35:08,859
got all the<font color="#CCCCCC"> information</font><font color="#E5E5E5"> about that AWS</font>

956
00:35:07,510 --> 00:35:10,270
instance and then they went<font color="#E5E5E5"> on and they</font>

957
00:35:08,859 --> 00:35:13,270
<font color="#CCCCCC">just took over</font><font color="#E5E5E5"> the whole AWS instance</font>

958
00:35:10,270 --> 00:35:15,310
<font color="#E5E5E5">because that request was coming from not</font>

959
00:35:13,270 --> 00:35:16,810
from<font color="#E5E5E5"> the attackers IP the request is</font>

960
00:35:15,310 --> 00:35:20,230
<font color="#E5E5E5">coming from a trusted IP which is the</font>

961
00:35:16,810 --> 00:35:22,150
AWS instance itself so this is the

962
00:35:20,230 --> 00:35:23,859
danger of<font color="#CCCCCC"> getting soft server side</font>

963
00:35:22,150 --> 00:35:25,720
request forgery is it's a trusted source

964
00:35:23,859 --> 00:35:28,359
you can<font color="#E5E5E5"> make the</font><font color="#CCCCCC"> request out</font><font color="#E5E5E5"> on behalf</font>

965
00:35:25,720 --> 00:35:29,830
of that trusted source so I really think

966
00:35:28,359 --> 00:35:30,620
it's important for<font color="#E5E5E5"> you to check out that</font>

967
00:35:29,830 --> 00:35:31,790
guide again

968
00:35:30,620 --> 00:35:34,520
I can send you<font color="#CCCCCC"> these slides</font><font color="#E5E5E5"> afterwards</font>

969
00:35:31,790 --> 00:35:37,580
I'd be happy to<font color="#E5E5E5"> there's a guy</font><font color="#CCCCCC"> on a</font><font color="#E5E5E5"> table</font>

970
00:35:34,520 --> 00:35:38,509
<font color="#E5E5E5">us about instance metadata an example of</font>

971
00:35:37,580 --> 00:35:41,240
some things<font color="#CCCCCC"> you can get</font><font color="#E5E5E5"> from the</font>

972
00:35:38,510 --> 00:35:42,890
metadata<font color="#E5E5E5"> am i ID reservation ID</font><font color="#CCCCCC"> local</font>

973
00:35:41,240 --> 00:35:45,410
<font color="#E5E5E5">host name public host name public keys</font>

974
00:35:42,890 --> 00:35:47,420
<font color="#CCCCCC">open SSH key security credentials for</font><font color="#E5E5E5"> a</font>

975
00:35:45,410 --> 00:35:50,779
<font color="#CCCCCC">specific role security</font><font color="#E5E5E5"> grooves user data</font>

976
00:35:47,420 --> 00:35:54,340
there's a lot<font color="#E5E5E5"> so if you're</font><font color="#CCCCCC"> running an</font>

977
00:35:50,780 --> 00:35:58,900
AWS instance<font color="#CCCCCC"> be aware of</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> there's the</font>

978
00:35:54,340 --> 00:36:01,090
there's<font color="#E5E5E5"> the URL for</font><font color="#CCCCCC"> the actual</font><font color="#E5E5E5"> issue</font>

979
00:35:58,900 --> 00:36:04,970
<font color="#E5E5E5">sorry that doesn't show up very well</font>

980
00:36:01,090 --> 00:36:06,980
there check out that<font color="#CCCCCC"> guide so next up</font>

981
00:36:04,970 --> 00:36:10,970
I'm going<font color="#E5E5E5"> to talk about another exploit</font>

982
00:36:06,980 --> 00:36:12,170
for<font color="#E5E5E5"> server side request forgery and the</font>

983
00:36:10,970 --> 00:36:14,109
way<font color="#E5E5E5"> this one works what Google actually</font>

984
00:36:12,170 --> 00:36:16,700
had a page called

985
00:36:14,110 --> 00:36:18,140
their<font color="#CCCCCC"> page</font><font color="#E5E5E5"> was essentially a on the</font>

986
00:36:16,700 --> 00:36:20,330
<font color="#E5E5E5">Google</font><font color="#CCCCCC"> toolbox allow</font><font color="#E5E5E5"> you to do a bunch</font>

987
00:36:18,140 --> 00:36:21,830
<font color="#CCCCCC">of different web stuff</font><font color="#E5E5E5"> one of</font><font color="#CCCCCC"> these</font>

988
00:36:20,330 --> 00:36:23,600
things with<font color="#E5E5E5"> Digg so for those of you</font>

989
00:36:21,830 --> 00:36:24,770
that are<font color="#E5E5E5"> not</font><font color="#CCCCCC"> familiar with a dig tool it</font>

990
00:36:23,600 --> 00:36:26,930
<font color="#E5E5E5">essentially allows you to just</font><font color="#CCCCCC"> make a</font>

991
00:36:24,770 --> 00:36:28,370
query out to a DNS<font color="#E5E5E5"> server and return</font>

992
00:36:26,930 --> 00:36:31,879
back to the<font color="#E5E5E5"> enough</font><font color="#CCCCCC"> information</font><font color="#E5E5E5"> on a</font>

993
00:36:28,370 --> 00:36:33,859
<font color="#CCCCCC">specific domain so here's what the</font>

994
00:36:31,880 --> 00:36:35,090
interface<font color="#E5E5E5"> looks like you can make a</font>

995
00:36:33,860 --> 00:36:36,710
request<font color="#CCCCCC"> I'm not sure how well you</font><font color="#E5E5E5"> can</font>

996
00:36:35,090 --> 00:36:38,690
<font color="#E5E5E5">see this but the</font><font color="#CCCCCC"> Nate you can pass in a</font>

997
00:36:36,710 --> 00:36:40,520
domain name<font color="#E5E5E5"> and pass in a name server to</font>

998
00:36:38,690 --> 00:36:43,040
use and<font color="#E5E5E5"> return back</font><font color="#CCCCCC"> to DNS information</font>

999
00:36:40,520 --> 00:36:48,410
for<font color="#CCCCCC"> that but if you take a look</font><font color="#E5E5E5"> at the</font>

1000
00:36:43,040 --> 00:36:49,580
request the request<font color="#E5E5E5"> I'm not sure how</font>

1001
00:36:48,410 --> 00:36:50,690
well you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> see this but</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> see</font>

1002
00:36:49,580 --> 00:36:53,540
that there's a<font color="#CCCCCC"> parameter called nain</font>

1003
00:36:50,690 --> 00:36:55,970
server<font color="#E5E5E5"> equals and if you go back to the</font>

1004
00:36:53,540 --> 00:36:58,580
last page it was<font color="#CCCCCC"> 888 was the one</font><font color="#E5E5E5"> that</font>

1005
00:36:55,970 --> 00:37:01,459
was used but if you just intercept it

1006
00:36:58,580 --> 00:37:03,590
<font color="#E5E5E5">and change it you can modify it what the</font>

1007
00:37:01,460 --> 00:37:05,570
attacker did was they just<font color="#E5E5E5"> changed that</font>

1008
00:37:03,590 --> 00:37:08,000
<font color="#E5E5E5">name server to one two seven zero zero</font>

1009
00:37:05,570 --> 00:37:12,320
<font color="#E5E5E5">one those</font><font color="#CCCCCC"> views I</font><font color="#E5E5E5"> don't know that's the</font>

1010
00:37:08,000 --> 00:37:14,210
loopback interface<font color="#E5E5E5"> so the Google the</font>

1011
00:37:12,320 --> 00:37:16,850
<font color="#CCCCCC">Google application was then making a dns</font>

1012
00:37:14,210 --> 00:37:19,880
request<font color="#E5E5E5"> a secret quest to itself and it</font>

1013
00:37:16,850 --> 00:37:22,460
was<font color="#E5E5E5"> running a DNS</font><font color="#CCCCCC"> server</font><font color="#E5E5E5"> on it and then</font>

1014
00:37:19,880 --> 00:37:23,440
from there<font color="#E5E5E5"> it allowed to return back to</font>

1015
00:37:22,460 --> 00:37:25,780
<font color="#CCCCCC">the attacker</font>

1016
00:37:23,440 --> 00:37:28,040
<font color="#E5E5E5">albey DNS information</font><font color="#CCCCCC"> that it had</font>

1017
00:37:25,780 --> 00:37:30,170
through enumeration<font color="#E5E5E5"> all the DNS</font>

1018
00:37:28,040 --> 00:37:32,990
<font color="#E5E5E5">information it had for the internal</font>

1019
00:37:30,170 --> 00:37:36,050
Google<font color="#CCCCCC"> Network</font><font color="#E5E5E5"> because it had that</font>

1020
00:37:32,990 --> 00:37:37,939
internal interface as<font color="#CCCCCC"> well so the</font>

1021
00:37:36,050 --> 00:37:39,260
attacker did that they<font color="#E5E5E5"> basically</font><font color="#CCCCCC"> just</font>

1022
00:37:37,940 --> 00:37:40,730
ran through they<font color="#CCCCCC"> just guessed a</font><font color="#E5E5E5"> whole</font>

1023
00:37:39,260 --> 00:37:43,410
bunch of<font color="#E5E5E5"> domains and the internal</font><font color="#CCCCCC"> Google</font>

1024
00:37:40,730 --> 00:37:45,809
domain the Google<font color="#E5E5E5"> DNS</font>

1025
00:37:43,410 --> 00:37:47,160
server and they<font color="#E5E5E5"> found the basically</font><font color="#CCCCCC"> just</font>

1026
00:37:45,809 --> 00:37:48,420
enumerated<font color="#E5E5E5"> the whole Google</font><font color="#CCCCCC"> namespace so</font>

1027
00:37:47,160 --> 00:37:50,578
they<font color="#E5E5E5"> found it a bunch of stuff</font><font color="#CCCCCC"> about</font>

1028
00:37:48,420 --> 00:37:51,809
internal<font color="#CCCCCC"> Google Network</font><font color="#E5E5E5"> fun fact Google</font>

1029
00:37:50,579 --> 00:37:55,319
<font color="#CCCCCC">is</font><font color="#E5E5E5"> actually running a minecraft server</font>

1030
00:37:51,809 --> 00:37:56,789
<font color="#E5E5E5">at minecraft Corp google.com so they</font>

1031
00:37:55,319 --> 00:37:58,529
reported this<font color="#E5E5E5"> to Google Google fixed it</font>

1032
00:37:56,789 --> 00:38:00,809
they gave<font color="#E5E5E5"> them a reward as well for it</font>

1033
00:37:58,529 --> 00:38:04,319
so this<font color="#E5E5E5"> is another instance of having an</font>

1034
00:38:00,809 --> 00:38:05,700
internal interface and allowing when you

1035
00:38:04,319 --> 00:38:07,160
get<font color="#E5E5E5"> this vulnerability</font><font color="#CCCCCC"> the server side</font>

1036
00:38:05,700 --> 00:38:09,359
request for jury making a request

1037
00:38:07,160 --> 00:38:11,069
<font color="#E5E5E5">allowing it into the internal network in</font>

1038
00:38:09,359 --> 00:38:13,288
a way<font color="#E5E5E5"> that that would never have been</font>

1039
00:38:11,069 --> 00:38:17,029
exposed before<font color="#E5E5E5"> so it can be particularly</font>

1040
00:38:13,289 --> 00:38:20,970
dangerous how do you test for<font color="#E5E5E5"> it so</font>

1041
00:38:17,029 --> 00:38:22,230
realistically if you're looking for<font color="#E5E5E5"> a if</font>

1042
00:38:20,970 --> 00:38:25,529
<font color="#E5E5E5">you're doing requests</font><font color="#CCCCCC"> you're going to</font>

1043
00:38:22,230 --> 00:38:26,759
see a<font color="#E5E5E5"> URL</font><font color="#CCCCCC"> if you see a URL</font><font color="#E5E5E5"> anywhere any</font>

1044
00:38:25,529 --> 00:38:27,960
<font color="#CCCCCC">requests</font><font color="#E5E5E5"> there's a lot of time things</font>

1045
00:38:26,759 --> 00:38:30,869
you can do with it<font color="#CCCCCC"> but for this</font>

1046
00:38:27,960 --> 00:38:32,609
<font color="#E5E5E5">particular instance try changing it to</font>

1047
00:38:30,869 --> 00:38:35,190
<font color="#E5E5E5">some other things</font><font color="#CCCCCC"> so change it</font><font color="#E5E5E5"> to</font>

1048
00:38:32,609 --> 00:38:36,569
another remote host so see if you<font color="#CCCCCC"> can</font>

1049
00:38:35,190 --> 00:38:38,819
<font color="#CCCCCC">actually reach it to another</font><font color="#E5E5E5"> host on the</font>

1050
00:38:36,569 --> 00:38:40,500
<font color="#CCCCCC">internet if you can maybe you can reach</font>

1051
00:38:38,819 --> 00:38:41,849
<font color="#CCCCCC">it to</font><font color="#E5E5E5"> your own host and return back</font>

1052
00:38:40,500 --> 00:38:43,289
cross<font color="#CCCCCC"> side</font><font color="#E5E5E5"> scripting or return back</font>

1053
00:38:41,849 --> 00:38:45,059
<font color="#E5E5E5">something else play around with it see</font>

1054
00:38:43,289 --> 00:38:47,339
what<font color="#CCCCCC"> you can reach try</font><font color="#E5E5E5"> the loopback</font>

1055
00:38:45,059 --> 00:38:49,109
interface right<font color="#E5E5E5"> in case of Google it</font>

1056
00:38:47,339 --> 00:38:51,750
allowed<font color="#E5E5E5"> them to query itself and then</font>

1057
00:38:49,109 --> 00:38:53,160
return back<font color="#CCCCCC"> trust the data</font><font color="#E5E5E5"> there may</font>

1058
00:38:51,750 --> 00:38:56,700
also be<font color="#CCCCCC"> other things running</font><font color="#E5E5E5"> on that</font>

1059
00:38:53,160 --> 00:38:59,308
<font color="#CCCCCC">localhost too it's not it</font><font color="#E5E5E5"> very well</font><font color="#CCCCCC"> it</font>

1060
00:38:56,700 --> 00:39:00,750
very<font color="#E5E5E5"> well might be that the web server</font>

1061
00:38:59,309 --> 00:39:02,009
<font color="#CCCCCC">is</font><font color="#E5E5E5"> not the only thing on there it could</font>

1062
00:39:00,750 --> 00:39:03,450
<font color="#E5E5E5">be running an SSH server could be</font>

1063
00:39:02,009 --> 00:39:04,769
<font color="#E5E5E5">running you know another web server on</font>

1064
00:39:03,450 --> 00:39:05,939
<font color="#CCCCCC">8080 it could be running</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> hold of ton</font>

1065
00:39:04,769 --> 00:39:06,899
of<font color="#E5E5E5"> things a</font><font color="#CCCCCC"> lot of</font><font color="#E5E5E5"> people are cheap they</font>

1066
00:39:05,940 --> 00:39:09,509
just want to<font color="#E5E5E5"> use one server</font>

1067
00:39:06,900 --> 00:39:12,839
it's very common<font color="#E5E5E5"> try checking</font><font color="#CCCCCC"> that local</font>

1068
00:39:09,509 --> 00:39:14,700
interface try the local local<font color="#E5E5E5"> IPS for</font>

1069
00:39:12,839 --> 00:39:17,190
that<font color="#E5E5E5"> local network see what you can see</font>

1070
00:39:14,700 --> 00:39:18,598
<font color="#CCCCCC">behind</font><font color="#E5E5E5"> that server because you can't</font>

1071
00:39:17,190 --> 00:39:20,009
reach that<font color="#E5E5E5"> from the</font><font color="#CCCCCC"> internet but you can</font>

1072
00:39:18,599 --> 00:39:22,349
reach it from<font color="#E5E5E5"> that server if you can do</font>

1073
00:39:20,009 --> 00:39:23,759
that that mess<font color="#E5E5E5"> for dangerous try</font>

1074
00:39:22,349 --> 00:39:25,289
different<font color="#CCCCCC"> protocol so I'm going</font><font color="#E5E5E5"> to cover</font>

1075
00:39:23,759 --> 00:39:26,670
what that means a little<font color="#CCCCCC"> bit I'm going</font>

1076
00:39:25,289 --> 00:39:29,490
<font color="#E5E5E5">to give you some examples of more of</font>

1077
00:39:26,670 --> 00:39:31,920
these later<font color="#E5E5E5"> but HTTP if you go into your</font>

1078
00:39:29,490 --> 00:39:34,049
browser<font color="#CCCCCC"> each HTTP colon slash slash</font><font color="#E5E5E5"> is</font>

1079
00:39:31,920 --> 00:39:36,359
not the<font color="#E5E5E5"> only thing</font><font color="#CCCCCC"> that you can</font><font color="#E5E5E5"> use to</font>

1080
00:39:34,049 --> 00:39:38,038
query<font color="#E5E5E5"> a resource you</font><font color="#CCCCCC"> can actually use</font>

1081
00:39:36,359 --> 00:39:39,269
other things<font color="#CCCCCC"> like</font><font color="#E5E5E5"> file so if you go</font><font color="#CCCCCC"> on</font>

1082
00:39:38,039 --> 00:39:42,420
<font color="#E5E5E5">your browser you look at file colon</font>

1083
00:39:39,269 --> 00:39:45,959
slash slash<font color="#E5E5E5"> you actually reference a an</font>

1084
00:39:42,420 --> 00:39:47,700
actual<font color="#E5E5E5"> directory location if most</font>

1085
00:39:45,960 --> 00:39:48,839
browsers will<font color="#E5E5E5"> return back your local</font>

1086
00:39:47,700 --> 00:39:50,819
directory instance<font color="#CCCCCC"> they</font><font color="#E5E5E5"> will show you</font>

1087
00:39:48,839 --> 00:39:52,349
the<font color="#E5E5E5"> information I believe</font><font color="#CCCCCC"> Firefox is it</font>

1088
00:39:50,819 --> 00:39:55,579
says it a lot

1089
00:39:52,349 --> 00:39:58,680
but using<font color="#E5E5E5"> file if you can do this to a</font>

1090
00:39:55,579 --> 00:40:03,539
another server<font color="#CCCCCC"> and you use the file in</font>

1091
00:39:58,680 --> 00:40:06,089
the file URL wrapper if it has the

1092
00:40:03,539 --> 00:40:08,430
proper permissions<font color="#E5E5E5"> you might be able to</font>

1093
00:40:06,089 --> 00:40:10,920
query<font color="#E5E5E5"> some sensitive data so if you have</font>

1094
00:40:08,430 --> 00:40:12,899
a URL<font color="#E5E5E5"> in a browser sorry in a in a</font>

1095
00:40:10,920 --> 00:40:16,529
vulnerable application you see<font color="#E5E5E5"> URL in a</font>

1096
00:40:12,900 --> 00:40:21,299
request<font color="#E5E5E5"> try changing that to file colon</font>

1097
00:40:16,529 --> 00:40:22,079
slash slash slash<font color="#CCCCCC"> et Cie</font><font color="#E5E5E5"> /pa sswd</font><font color="#CCCCCC"> CSE</font>

1098
00:40:21,299 --> 00:40:24,059
password file

1099
00:40:22,079 --> 00:40:25,529
it's a<font color="#CCCCCC"> linux</font><font color="#E5E5E5"> server that basically gives</font>

1100
00:40:24,059 --> 00:40:26,759
you the<font color="#CCCCCC"> password file you can</font><font color="#E5E5E5"> then crack</font>

1101
00:40:25,529 --> 00:40:28,680
and it gives you all the passwords<font color="#E5E5E5"> on</font>

1102
00:40:26,759 --> 00:40:29,789
that instance<font color="#CCCCCC"> so there's a lot of other</font>

1103
00:40:28,680 --> 00:40:30,779
sensitive files people that are in

1104
00:40:29,789 --> 00:40:32,489
forensics especially you're going to

1105
00:40:30,779 --> 00:40:33,900
really<font color="#E5E5E5"> be good with this</font><font color="#CCCCCC"> thing because</font>

1106
00:40:32,489 --> 00:40:36,390
they know a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the sensitive</font>

1107
00:40:33,900 --> 00:40:38,819
locations on a local web<font color="#CCCCCC"> server or</font><font color="#E5E5E5"> any</font>

1108
00:40:36,390 --> 00:40:42,058
server<font color="#E5E5E5"> so talk to your local forensics</font>

1109
00:40:38,819 --> 00:40:44,579
<font color="#E5E5E5">guy</font><font color="#CCCCCC"> I if you</font><font color="#E5E5E5"> want to understand what you</font>

1110
00:40:42,059 --> 00:40:46,229
<font color="#CCCCCC">can look for there's also SSH SBP</font>

1111
00:40:44,579 --> 00:40:48,180
there's a ton of other<font color="#E5E5E5"> one but there's</font>

1112
00:40:46,229 --> 00:40:49,919
other protocols you can check for and it

1113
00:40:48,180 --> 00:40:52,319
will<font color="#E5E5E5"> return</font><font color="#CCCCCC"> back</font><font color="#E5E5E5"> data through that</font>

1114
00:40:49,920 --> 00:40:54,539
protocol so you're not<font color="#E5E5E5"> trying</font><font color="#CCCCCC"> to query</font>

1115
00:40:52,319 --> 00:40:57,538
an<font color="#E5E5E5"> SSH server over HTTP that won't work</font>

1116
00:40:54,539 --> 00:40:59,039
<font color="#E5E5E5">but if you</font><font color="#CCCCCC"> used over ssh protocol then</font>

1117
00:40:57,539 --> 00:41:02,430
that will work<font color="#E5E5E5"> and you can get back data</font>

1118
00:40:59,039 --> 00:41:04,349
from that server try<font color="#CCCCCC"> different port</font><font color="#E5E5E5"> so</font>

1119
00:41:02,430 --> 00:41:05,910
as<font color="#CCCCCC"> i mentioned before a</font><font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of web</font>

1120
00:41:04,349 --> 00:41:07,710
servers<font color="#E5E5E5"> not only run on</font><font color="#CCCCCC"> 80</font><font color="#E5E5E5"> but you can</font>

1121
00:41:05,910 --> 00:41:11,940
try you know<font color="#CCCCCC"> four or three obviously for</font>

1122
00:41:07,710 --> 00:41:14,099
<font color="#E5E5E5">HTTP try 8080</font><font color="#CCCCCC"> very common or 8000 a lot</font>

1123
00:41:11,940 --> 00:41:15,930
of developers either test on that or

1124
00:41:14,099 --> 00:41:17,279
they have other<font color="#E5E5E5"> services that are</font>

1125
00:41:15,930 --> 00:41:19,379
<font color="#E5E5E5">running on those that are web services</font>

1126
00:41:17,279 --> 00:41:22,499
but they may not be<font color="#E5E5E5"> publicly exposed so</font>

1127
00:41:19,380 --> 00:41:24,930
try<font color="#CCCCCC"> using</font><font color="#E5E5E5"> that as well firstly intruder</font>

1128
00:41:22,499 --> 00:41:26,279
is good for automating it it just<font color="#E5E5E5"> allows</font>

1129
00:41:24,930 --> 00:41:27,450
you<font color="#E5E5E5"> to just iterate through a whole</font>

1130
00:41:26,279 --> 00:41:29,039
bunch<font color="#CCCCCC"> of</font><font color="#E5E5E5"> these</font><font color="#CCCCCC"> things so like all</font><font color="#E5E5E5"> the</font>

1131
00:41:27,450 --> 00:41:30,718
<font color="#CCCCCC">things</font><font color="#E5E5E5"> that I've</font><font color="#CCCCCC"> mentioned to change the</font>

1132
00:41:29,039 --> 00:41:32,940
<font color="#E5E5E5">URL to you can just automate it through</font>

1133
00:41:30,719 --> 00:41:34,079
a word list<font color="#CCCCCC"> burp suite</font><font color="#E5E5E5"> intruder and then</font>

1134
00:41:32,940 --> 00:41:35,249
sort by response size because the

1135
00:41:34,079 --> 00:41:39,239
smaller ones are usually<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to be</font>

1136
00:41:35,249 --> 00:41:42,839
like<font color="#CCCCCC"> the no response back so moving</font>

1137
00:41:39,239 --> 00:41:45,420
forward<font color="#E5E5E5"> when I mentioned looking for</font>

1138
00:41:42,839 --> 00:41:47,069
<font color="#E5E5E5">seeing what you</font><font color="#CCCCCC"> can reach trying to ping</font>

1139
00:41:45,420 --> 00:41:48,569
out to<font color="#E5E5E5"> external services if you</font><font color="#CCCCCC"> don't</font>

1140
00:41:47,069 --> 00:41:50,190
have your own server<font color="#CCCCCC"> setup that you</font><font color="#E5E5E5"> want</font>

1141
00:41:48,569 --> 00:41:52,380
to ping<font color="#E5E5E5"> when you pass</font><font color="#CCCCCC"> in like an</font>

1142
00:41:50,190 --> 00:41:54,390
<font color="#E5E5E5">external domain</font><font color="#CCCCCC"> first-week collaborator</font>

1143
00:41:52,380 --> 00:41:56,700
is is a fairly<font color="#E5E5E5"> new</font><font color="#CCCCCC"> thing</font><font color="#E5E5E5"> in burp suite</font>

1144
00:41:54,390 --> 00:41:59,098
that allows<font color="#CCCCCC"> you</font><font color="#E5E5E5"> to they give you a</font>

1145
00:41:56,700 --> 00:42:01,348
unique URL and every time it<font color="#E5E5E5"> gets a</font>

1146
00:41:59,099 --> 00:42:03,299
requested<font color="#E5E5E5"> that URL it will</font><font color="#CCCCCC"> show up</font><font color="#E5E5E5"> in</font>

1147
00:42:01,349 --> 00:42:06,230
your<font color="#E5E5E5"> burp in burp suite it will show up</font>

1148
00:42:03,299 --> 00:42:07,520
<font color="#E5E5E5">as a potential vulnerability yet</font>

1149
00:42:06,230 --> 00:42:10,700
so if you don't<font color="#CCCCCC"> want to spend</font><font color="#E5E5E5"> like five</font>

1150
00:42:07,520 --> 00:42:11,990
<font color="#E5E5E5">dollars</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> digital</font><font color="#E5E5E5"> ocean server like</font>

1151
00:42:10,700 --> 00:42:14,240
five<font color="#CCCCCC"> dollars a</font><font color="#E5E5E5"> month then you</font><font color="#CCCCCC"> can just</font>

1152
00:42:11,990 --> 00:42:16,399
<font color="#CCCCCC">use Berkeley collaborator</font><font color="#E5E5E5"> and that helps</font>

1153
00:42:14,240 --> 00:42:18,830
as well<font color="#E5E5E5"> so what do you do to defend</font>

1154
00:42:16,400 --> 00:42:21,170
against<font color="#E5E5E5"> this as I mentioned</font><font color="#CCCCCC"> before</font><font color="#E5E5E5"> same</font>

1155
00:42:18,830 --> 00:42:23,450
origin policy exists for a<font color="#CCCCCC"> reason</font>

1156
00:42:21,170 --> 00:42:25,040
so there's developers will look for

1157
00:42:23,450 --> 00:42:27,439
workarounds like<font color="#E5E5E5"> JSON P which is JSON</font>

1158
00:42:25,040 --> 00:42:28,820
with padding or they'll do<font color="#E5E5E5"> something</font>

1159
00:42:27,440 --> 00:42:31,850
like doing it on the server side<font color="#CCCCCC"> and</font>

1160
00:42:28,820 --> 00:42:34,730
<font color="#E5E5E5">then we're turning it back don't do</font><font color="#CCCCCC"> this</font>

1161
00:42:31,850 --> 00:42:37,339
<font color="#CCCCCC">as much</font><font color="#E5E5E5"> as possible avoid</font><font color="#CCCCCC"> doing</font><font color="#E5E5E5"> this and</font>

1162
00:42:34,730 --> 00:42:39,290
use<font color="#CCCCCC"> chords so</font><font color="#E5E5E5"> cross-origin</font><font color="#CCCCCC"> request</font>

1163
00:42:37,340 --> 00:42:41,690
sharing basically allows you to<font color="#CCCCCC"> set</font><font color="#E5E5E5"> up</font>

1164
00:42:39,290 --> 00:42:43,340
on a server that<font color="#E5E5E5"> you own it set it up as</font>

1165
00:42:41,690 --> 00:42:46,460
a rule it<font color="#E5E5E5"> will return it in the header</font>

1166
00:42:43,340 --> 00:42:48,560
and it<font color="#E5E5E5"> will say this particular domain</font>

1167
00:42:46,460 --> 00:42:50,570
or any domain really you can say<font color="#E5E5E5"> this</font>

1168
00:42:48,560 --> 00:42:52,670
domain or any domain<font color="#E5E5E5"> can access script</font>

1169
00:42:50,570 --> 00:42:54,680
resources<font color="#E5E5E5"> or access resources on this</font>

1170
00:42:52,670 --> 00:42:55,940
server<font color="#CCCCCC"> there's a lot</font><font color="#E5E5E5"> more to cross</font>

1171
00:42:54,680 --> 00:42:58,160
origin request sharing but it is

1172
00:42:55,940 --> 00:43:01,220
basically<font color="#E5E5E5"> it has been made to help you</font>

1173
00:42:58,160 --> 00:43:03,230
bypass<font color="#E5E5E5"> same origin policy explicitly so</font>

1174
00:43:01,220 --> 00:43:04,580
as a<font color="#E5E5E5"> developer look for that instead of</font>

1175
00:43:03,230 --> 00:43:07,190
<font color="#E5E5E5">trying</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> use some</font><font color="#CCCCCC"> other work around</font>

1176
00:43:04,580 --> 00:43:12,319
like JSON<font color="#E5E5E5"> PE or giving it on the server</font>

1177
00:43:07,190 --> 00:43:13,700
side so just<font color="#CCCCCC"> as the best practice a lot</font>

1178
00:43:12,320 --> 00:43:16,250
of us know this already but<font color="#E5E5E5"> try to</font>

1179
00:43:13,700 --> 00:43:17,750
whitelist<font color="#E5E5E5"> suppose the</font><font color="#CCCCCC"> black list</font><font color="#E5E5E5"> but in</font>

1180
00:43:16,250 --> 00:43:20,120
the case of<font color="#CCCCCC"> service ID request forgery</font>

1181
00:43:17,750 --> 00:43:21,500
you want to explicitly<font color="#E5E5E5"> say if you have</font>

1182
00:43:20,120 --> 00:43:23,779
<font color="#E5E5E5">to so if you actually have to do things</font>

1183
00:43:21,500 --> 00:43:24,560
on the server<font color="#E5E5E5"> side which it happens you</font>

1184
00:43:23,780 --> 00:43:26,420
know like<font color="#E5E5E5"> everyone has different</font>

1185
00:43:24,560 --> 00:43:27,470
business cases<font color="#E5E5E5"> applications developer</font>

1186
00:43:26,420 --> 00:43:29,120
different reasons I'm not<font color="#E5E5E5"> going to say</font>

1187
00:43:27,470 --> 00:43:30,230
that<font color="#E5E5E5"> it's never going to come up</font><font color="#CCCCCC"> you</font>

1188
00:43:29,120 --> 00:43:33,710
have<font color="#CCCCCC"> to do</font><font color="#E5E5E5"> something like this on the</font>

1189
00:43:30,230 --> 00:43:35,630
server<font color="#E5E5E5"> side if you need</font><font color="#CCCCCC"> to do that as</font>

1190
00:43:33,710 --> 00:43:37,730
much<font color="#CCCCCC"> as possible whitelist specific</font>

1191
00:43:35,630 --> 00:43:39,080
<font color="#E5E5E5">domain so you want to only make requests</font>

1192
00:43:37,730 --> 00:43:40,640
out to this domain so an attacker can't

1193
00:43:39,080 --> 00:43:43,900
make it a request<font color="#E5E5E5"> to their own domain or</font>

1194
00:43:40,640 --> 00:43:46,339
to the internal AWS instance metadata

1195
00:43:43,900 --> 00:43:48,830
explicitly allow only certain domains

1196
00:43:46,340 --> 00:43:53,270
and IPS<font color="#E5E5E5"> but not only that explicitly</font>

1197
00:43:48,830 --> 00:43:54,710
allow certain protocol<font color="#CCCCCC"> so the HTTP colon</font>

1198
00:43:53,270 --> 00:43:56,740
slash slash part remember<font color="#CCCCCC"> how I said you</font>

1199
00:43:54,710 --> 00:44:00,410
<font color="#E5E5E5">can also use file SSH things like that</font>

1200
00:43:56,740 --> 00:44:01,819
explicitly only allow HTTP or HTTPS<font color="#E5E5E5"> so</font>

1201
00:44:00,410 --> 00:44:03,980
the more explicit you are with this the

1202
00:44:01,820 --> 00:44:06,020
better and the less<font color="#E5E5E5"> likely this any kind</font>

1203
00:44:03,980 --> 00:44:09,410
of<font color="#CCCCCC"> som request is</font><font color="#E5E5E5"> going to turn into a</font>

1204
00:44:06,020 --> 00:44:12,110
vulnerability<font color="#CCCCCC"> and then just as</font><font color="#E5E5E5"> good</font>

1205
00:44:09,410 --> 00:44:14,390
practice either don't<font color="#CCCCCC"> have an internal</font>

1206
00:44:12,110 --> 00:44:16,160
interface on<font color="#CCCCCC"> your web server</font><font color="#E5E5E5"> or put up</font>

1207
00:44:14,390 --> 00:44:17,629
some<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of access control</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> IV</font>

1208
00:44:16,160 --> 00:44:19,000
<font color="#E5E5E5">tables to tell to traffic or have a</font>

1209
00:44:17,630 --> 00:44:21,760
firewall in between it

1210
00:44:19,000 --> 00:44:25,270
or some<font color="#E5E5E5"> other way of trying to disallow</font>

1211
00:44:21,760 --> 00:44:26,650
that<font color="#E5E5E5"> server and remove it from</font><font color="#CCCCCC"> that</font>

1212
00:44:25,270 --> 00:44:29,320
internal network as<font color="#CCCCCC"> much as possible</font>

1213
00:44:26,650 --> 00:44:30,640
<font color="#CCCCCC">will reduce the effects</font><font color="#E5E5E5"> of this owner</font>

1214
00:44:29,320 --> 00:44:32,020
ability if it actually<font color="#CCCCCC"> comes in place in</font>

1215
00:44:30,640 --> 00:44:33,190
<font color="#E5E5E5">your application</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> more</font><font color="#E5E5E5"> of a</font>

1216
00:44:32,020 --> 00:44:36,310
<font color="#CCCCCC">preventative measure but it's also a</font>

1217
00:44:33,190 --> 00:44:37,330
<font color="#E5E5E5">good</font><font color="#CCCCCC"> practice and why would you</font><font color="#E5E5E5"> want a</font>

1218
00:44:36,310 --> 00:44:38,860
whitelist protocol well here's an

1219
00:44:37,330 --> 00:44:41,290
example of the default ones that PHP

1220
00:44:38,860 --> 00:44:43,780
comes with and I'm<font color="#E5E5E5"> picking</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> PHP a lot</font>

1221
00:44:41,290 --> 00:44:45,310
but it's really<font color="#CCCCCC"> easy here's some</font><font color="#E5E5E5"> of the</font>

1222
00:44:43,780 --> 00:44:46,720
domains that<font color="#E5E5E5"> is the protocol your</font>

1223
00:44:45,310 --> 00:44:47,950
<font color="#E5E5E5">wrappers that</font><font color="#CCCCCC"> it comes</font><font color="#E5E5E5"> with so as you</font>

1224
00:44:46,720 --> 00:44:49,959
can tell<font color="#E5E5E5"> there's there's someone here</font>

1225
00:44:47,950 --> 00:44:52,419
<font color="#CCCCCC">that can</font><font color="#E5E5E5"> be you wouldn't expect at all</font>

1226
00:44:49,960 --> 00:44:55,780
<font color="#E5E5E5">but it returns data through that</font>

1227
00:44:52,420 --> 00:44:58,470
protocol<font color="#E5E5E5"> so there's there's more there's</font>

1228
00:44:55,780 --> 00:45:00,280
a few more take a look at<font color="#E5E5E5"> that URL but</font>

1229
00:44:58,470 --> 00:45:01,419
essentially you're<font color="#CCCCCC"> going to want to</font><font color="#E5E5E5"> make</font>

1230
00:45:00,280 --> 00:45:03,910
sure<font color="#CCCCCC"> you white list this as much as</font>

1231
00:45:01,420 --> 00:45:05,920
<font color="#CCCCCC">possible so let's review</font>

1232
00:45:03,910 --> 00:45:07,299
<font color="#CCCCCC">ooofff top</font><font color="#E5E5E5"> 10 I'm not going to go</font>

1233
00:45:05,920 --> 00:45:10,380
<font color="#E5E5E5">through them</font><font color="#CCCCCC"> again but</font><font color="#E5E5E5"> you take a look</font>

1234
00:45:07,300 --> 00:45:15,160
<font color="#E5E5E5">here these</font><font color="#CCCCCC"> are top 5 this is</font><font color="#E5E5E5"> another</font><font color="#CCCCCC"> 5</font>

1235
00:45:10,380 --> 00:45:17,860
the top 10 none<font color="#E5E5E5"> of these actually fit</font>

1236
00:45:15,160 --> 00:45:20,020
within those top 10 so if we're giving

1237
00:45:17,860 --> 00:45:22,450
developers<font color="#CCCCCC"> this top 10 list or if we're</font>

1238
00:45:20,020 --> 00:45:23,920
even as the keyboard pen tester if we're

1239
00:45:22,450 --> 00:45:25,870
we're giving it to<font color="#CCCCCC"> attackers or we're</font>

1240
00:45:23,920 --> 00:45:27,940
testing<font color="#E5E5E5"> their own applications and we're</font>

1241
00:45:25,870 --> 00:45:30,430
trying to<font color="#E5E5E5"> use this list as be de facto</font>

1242
00:45:27,940 --> 00:45:32,110
<font color="#CCCCCC">lists for reference</font><font color="#E5E5E5"> to try to attack</font>

1243
00:45:30,430 --> 00:45:34,149
<font color="#E5E5E5">these applications it's not enough</font>

1244
00:45:32,110 --> 00:45:35,170
<font color="#CCCCCC">there's so much more</font><font color="#E5E5E5"> beyond it so these</font>

1245
00:45:34,150 --> 00:45:38,440
<font color="#E5E5E5">three that we talked about race</font>

1246
00:45:35,170 --> 00:45:40,690
conditions<font color="#E5E5E5"> HTTP parameter pollution and</font>

1247
00:45:38,440 --> 00:45:41,950
<font color="#E5E5E5">server side request forgery</font><font color="#CCCCCC"> none of</font>

1248
00:45:40,690 --> 00:45:44,320
those three fit<font color="#E5E5E5"> within any of those</font>

1249
00:45:41,950 --> 00:45:45,759
<font color="#CCCCCC">categories neatly lately it's become a</font>

1250
00:45:44,320 --> 00:45:47,200
<font color="#E5E5E5">little more broad in</font><font color="#CCCCCC"> the release</font>

1251
00:45:45,760 --> 00:45:50,470
candidate<font color="#E5E5E5"> which I'll get to in a second</font>

1252
00:45:47,200 --> 00:45:52,060
but they still don't fit<font color="#CCCCCC"> so</font><font color="#E5E5E5"> you have to</font>

1253
00:45:50,470 --> 00:45:53,799
understand as the developers of<font color="#CCCCCC"> test as</font>

1254
00:45:52,060 --> 00:45:56,259
a pen tester as an attacker as a

1255
00:45:53,800 --> 00:45:58,150
security<font color="#E5E5E5"> professional that there's more</font>

1256
00:45:56,260 --> 00:45:59,350
<font color="#E5E5E5">than just this top 10 list</font><font color="#CCCCCC"> that you need</font>

1257
00:45:58,150 --> 00:46:02,440
to know when you're<font color="#CCCCCC"> looking a web</font>

1258
00:45:59,350 --> 00:46:05,589
<font color="#CCCCCC">application so briefly I will discuss</font>

1259
00:46:02,440 --> 00:46:07,000
the top<font color="#CCCCCC"> 10</font><font color="#E5E5E5"> 2017 release candidate so</font>

1260
00:46:05,590 --> 00:46:08,950
this came<font color="#E5E5E5"> out recently this</font><font color="#CCCCCC"> is the new</font>

1261
00:46:07,000 --> 00:46:10,960
one<font color="#CCCCCC"> the one before</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> 2013 so it's</font>

1262
00:46:08,950 --> 00:46:12,700
been time<font color="#CCCCCC"> for an</font><font color="#E5E5E5"> update for</font><font color="#CCCCCC"> a while</font>

1263
00:46:10,960 --> 00:46:15,730
<font color="#E5E5E5">right now it's in release candidate</font>

1264
00:46:12,700 --> 00:46:17,680
phase until public comments<font color="#CCCCCC"> closed on</font>

1265
00:46:15,730 --> 00:46:18,700
June 30th<font color="#CCCCCC"> so in July or</font><font color="#E5E5E5"> August you'll</font>

1266
00:46:17,680 --> 00:46:20,799
see like<font color="#E5E5E5"> the full version it might</font>

1267
00:46:18,700 --> 00:46:21,759
change<font color="#CCCCCC"> it is subject to change</font><font color="#E5E5E5"> now but</font>

1268
00:46:20,800 --> 00:46:24,640
right<font color="#E5E5E5"> now</font><font color="#CCCCCC"> that's what it looks like</font>

1269
00:46:21,760 --> 00:46:26,200
here's the changes<font color="#E5E5E5"> first off it's a</font><font color="#CCCCCC"> four</font>

1270
00:46:24,640 --> 00:46:28,089
is broken access control basically<font color="#CCCCCC"> merge</font>

1271
00:46:26,200 --> 00:46:29,950
<font color="#E5E5E5">two of them together so any time an</font>

1272
00:46:28,090 --> 00:46:31,510
attacker can bypass<font color="#E5E5E5"> authentication or</font>

1273
00:46:29,950 --> 00:46:32,799
authorization<font color="#CCCCCC"> it falls</font><font color="#E5E5E5"> under that</font>

1274
00:46:31,510 --> 00:46:35,650
<font color="#E5E5E5">category</font>

1275
00:46:32,800 --> 00:46:37,180
insufficient attack protection this

1276
00:46:35,650 --> 00:46:40,030
one's controversial so if you look up

1277
00:46:37,180 --> 00:46:42,399
<font color="#CCCCCC">like 8th a loss</font><font color="#E5E5E5"> top 10 8 7 controversy</font>

1278
00:46:40,030 --> 00:46:44,770
you can find it more I'm not<font color="#E5E5E5"> going to go</font>

1279
00:46:42,400 --> 00:46:46,570
into the<font color="#E5E5E5"> drama around it but basically a</font>

1280
00:46:44,770 --> 00:46:48,820
<font color="#E5E5E5">lot of people</font><font color="#CCCCCC"> disagreed</font><font color="#E5E5E5"> with it what it</font>

1281
00:46:46,570 --> 00:46:50,190
means<font color="#E5E5E5"> is that this what this category</font>

1282
00:46:48,820 --> 00:46:52,480
<font color="#E5E5E5">means with developers should implement</font>

1283
00:46:50,190 --> 00:46:54,460
logging detection capabilities for

1284
00:46:52,480 --> 00:46:58,390
automatic prevention<font color="#CCCCCC"> capabilities for</font>

1285
00:46:54,460 --> 00:46:59,950
<font color="#E5E5E5">exploit so you can look into it</font><font color="#CCCCCC"> later</font>

1286
00:46:58,390 --> 00:47:02,740
but<font color="#E5E5E5"> that's basically what the category</font>

1287
00:46:59,950 --> 00:47:04,960
<font color="#E5E5E5">news</font><font color="#CCCCCC"> 810 is</font><font color="#E5E5E5"> the last new one</font>

1288
00:47:02,740 --> 00:47:06,430
<font color="#CCCCCC">under-protected</font><font color="#E5E5E5"> api's it's very broad it</font>

1289
00:47:04,960 --> 00:47:09,160
basically<font color="#E5E5E5"> means like it's covering api's</font>

1290
00:47:06,430 --> 00:47:11,080
things like soap rest RPC<font color="#E5E5E5"> stuff like</font>

1291
00:47:09,160 --> 00:47:13,660
that which is<font color="#E5E5E5"> weird because in the past</font>

1292
00:47:11,080 --> 00:47:15,790
<font color="#E5E5E5">the OAuth 10 in my mind at least into a</font>

1293
00:47:13,660 --> 00:47:17,230
lot<font color="#E5E5E5"> of people</font><font color="#CCCCCC"> referred to</font><font color="#E5E5E5"> not only web</font>

1294
00:47:15,790 --> 00:47:19,150
applications but<font color="#CCCCCC"> API is because they</font>

1295
00:47:17,230 --> 00:47:20,770
were web services<font color="#CCCCCC"> so it's weird that</font>

1296
00:47:19,150 --> 00:47:24,040
they added<font color="#CCCCCC"> another category</font><font color="#E5E5E5"> for it but</font>

1297
00:47:20,770 --> 00:47:26,470
regardless<font color="#CCCCCC"> they've done</font><font color="#E5E5E5"> that so the</font>

1298
00:47:24,040 --> 00:47:27,970
thing is<font color="#E5E5E5"> it still applies</font><font color="#CCCCCC"> all of</font><font color="#E5E5E5"> these</font>

1299
00:47:26,470 --> 00:47:30,730
<font color="#E5E5E5">three vulnerabilities</font><font color="#CCCCCC"> that I mentioned</font>

1300
00:47:27,970 --> 00:47:32,529
don't fit within those top<font color="#CCCCCC"> ten</font>

1301
00:47:30,730 --> 00:47:35,170
categories so if I was going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> leave</font>

1302
00:47:32,530 --> 00:47:36,760
you with<font color="#CCCCCC"> one final message</font><font color="#E5E5E5"> beyond the</font>

1303
00:47:35,170 --> 00:47:38,890
<font color="#E5E5E5">fact you now know if you didn't before</font>

1304
00:47:36,760 --> 00:47:40,330
<font color="#CCCCCC">three new attacks</font><font color="#E5E5E5"> you can use three new</font>

1305
00:47:38,890 --> 00:47:42,790
things<font color="#CCCCCC"> you can defend against</font><font color="#E5E5E5"> as a</font>

1306
00:47:40,330 --> 00:47:44,680
developer you now know more about<font color="#E5E5E5"> these</font>

1307
00:47:42,790 --> 00:47:45,759
<font color="#E5E5E5">things but if I was going to leave you</font>

1308
00:47:44,680 --> 00:47:47,080
<font color="#CCCCCC">with one thing</font><font color="#E5E5E5"> if you were to remember</font>

1309
00:47:45,760 --> 00:47:50,320
one<font color="#CCCCCC"> thing from</font><font color="#E5E5E5"> this presentation it's</font>

1310
00:47:47,080 --> 00:47:51,850
<font color="#E5E5E5">that the off top</font><font color="#CCCCCC"> ten is a great starting</font>

1311
00:47:50,320 --> 00:47:53,950
point<font color="#E5E5E5"> don't get me wrong it</font><font color="#CCCCCC"> has its</font>

1312
00:47:51,850 --> 00:47:55,089
place<font color="#CCCCCC"> but it's</font><font color="#E5E5E5"> not all that</font><font color="#CCCCCC"> there is</font>

1313
00:47:53,950 --> 00:47:58,509
when<font color="#CCCCCC"> it</font><font color="#E5E5E5"> comes to web application</font>

1314
00:47:55,090 --> 00:47:59,920
security so don't when you're when

1315
00:47:58,510 --> 00:48:01,750
you're referencing this<font color="#E5E5E5"> and giving it to</font>

1316
00:47:59,920 --> 00:48:05,200
<font color="#E5E5E5">developers say here's a great place</font><font color="#CCCCCC"> to</font>

1317
00:48:01,750 --> 00:48:06,250
start but there's more<font color="#E5E5E5"> but if you</font><font color="#CCCCCC"> get</font>

1318
00:48:05,200 --> 00:48:08,470
these things<font color="#CCCCCC"> then you're in a pretty</font>

1319
00:48:06,250 --> 00:48:10,150
good<font color="#E5E5E5"> spot</font><font color="#CCCCCC"> just keep learning</font><font color="#E5E5E5"> the key is</font>

1320
00:48:08,470 --> 00:48:11,589
to<font color="#E5E5E5"> keep learning</font><font color="#CCCCCC"> and I</font><font color="#E5E5E5"> think that's why</font>

1321
00:48:10,150 --> 00:48:12,610
we're all<font color="#CCCCCC"> here at</font><font color="#E5E5E5"> this conference I</font>

1322
00:48:11,590 --> 00:48:14,740
think<font color="#E5E5E5"> that's why we're all in this</font>

1323
00:48:12,610 --> 00:48:16,000
industry<font color="#E5E5E5"> it's because we we know that</font>

1324
00:48:14,740 --> 00:48:17,709
it's always<font color="#E5E5E5"> changing</font><font color="#CCCCCC"> if you don't keep</font>

1325
00:48:16,000 --> 00:48:19,150
<font color="#E5E5E5">up then you're not going to be able to</font>

1326
00:48:17,710 --> 00:48:20,920
<font color="#E5E5E5">continue in this industry you're not</font>

1327
00:48:19,150 --> 00:48:22,540
going to do well because it's changing

1328
00:48:20,920 --> 00:48:23,980
at<font color="#CCCCCC"> the speed of light so you need to</font>

1329
00:48:22,540 --> 00:48:25,240
keep up with<font color="#E5E5E5"> this as much</font><font color="#CCCCCC"> as possible</font>

1330
00:48:23,980 --> 00:48:26,710
<font color="#E5E5E5">because there's always new</font>

1331
00:48:25,240 --> 00:48:29,410
vulnerabilities coming out always<font color="#CCCCCC"> new</font>

1332
00:48:26,710 --> 00:48:31,990
categories the off<font color="#E5E5E5"> top</font><font color="#CCCCCC"> ten covers a lot</font>

1333
00:48:29,410 --> 00:48:34,480
of<font color="#CCCCCC"> them but yeah attackers are smart</font>

1334
00:48:31,990 --> 00:48:36,700
there's new ways every day so how do you

1335
00:48:34,480 --> 00:48:39,490
<font color="#CCCCCC">actually keep learning</font><font color="#E5E5E5"> so I'm going to</font>

1336
00:48:36,700 --> 00:48:41,680
give you a few resources<font color="#E5E5E5"> to follow up on</font>

1337
00:48:39,490 --> 00:48:43,209
so that you can stay in<font color="#CCCCCC"> the know</font><font color="#E5E5E5"> so you</font>

1338
00:48:41,680 --> 00:48:44,640
can understand some of the nuances in

1339
00:48:43,210 --> 00:48:46,320
the changing<font color="#CCCCCC"> landscape</font>

1340
00:48:44,640 --> 00:48:49,049
of especially<font color="#E5E5E5"> web application</font><font color="#CCCCCC"> security</font>

1341
00:48:46,320 --> 00:48:50,490
it's always<font color="#E5E5E5"> evolving first one is the</font>

1342
00:48:49,050 --> 00:48:52,590
hacker one I know we had<font color="#E5E5E5"> bugcrowd as a</font>

1343
00:48:50,490 --> 00:48:53,790
sponsor<font color="#CCCCCC"> but they also do bug bounties</font>

1344
00:48:52,590 --> 00:48:55,920
<font color="#CCCCCC">and I believe they have some</font><font color="#E5E5E5"> public</font>

1345
00:48:53,790 --> 00:48:56,850
disclosures that<font color="#CCCCCC"> they do so hacker one's</font>

1346
00:48:55,920 --> 00:48:58,980
really<font color="#E5E5E5"> good but it's because they</font>

1347
00:48:56,850 --> 00:49:01,620
aggregate this<font color="#E5E5E5"> on one place called the</font>

1348
00:48:58,980 --> 00:49:03,750
Activity<font color="#CCCCCC"> Feed where it's disclosed bug</font>

1349
00:49:01,620 --> 00:49:05,819
bounties<font color="#E5E5E5"> if you'll see reports from</font>

1350
00:49:03,750 --> 00:49:07,320
these researchers<font color="#E5E5E5"> that</font><font color="#CCCCCC"> are finding</font><font color="#E5E5E5"> these</font>

1351
00:49:05,820 --> 00:49:08,940
vulnerabilities<font color="#E5E5E5"> in these</font><font color="#CCCCCC"> applications</font>

1352
00:49:07,320 --> 00:49:11,630
<font color="#E5E5E5">and submitting them and it's</font><font color="#CCCCCC"> updated</font>

1353
00:49:08,940 --> 00:49:14,940
very very regularly like usually daily

1354
00:49:11,630 --> 00:49:17,430
<font color="#E5E5E5">Twitter is probably the like go-to place</font>

1355
00:49:14,940 --> 00:49:19,320
<font color="#CCCCCC">for a lot of us</font><font color="#E5E5E5"> the problem is that if</font>

1356
00:49:17,430 --> 00:49:20,669
you're not<font color="#E5E5E5"> following the right people</font>

1357
00:49:19,320 --> 00:49:22,560
and<font color="#E5E5E5"> you're not gonna get</font><font color="#CCCCCC"> the message</font><font color="#E5E5E5"> so</font>

1358
00:49:20,670 --> 00:49:24,960
it takes a<font color="#E5E5E5"> while</font><font color="#CCCCCC"> to get to</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> point</font>

1359
00:49:22,560 --> 00:49:26,310
but what I would<font color="#CCCCCC"> recommend is start by</font>

1360
00:49:24,960 --> 00:49:27,480
following<font color="#E5E5E5"> some</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> speakers</font><font color="#E5E5E5"> here if</font>

1361
00:49:26,310 --> 00:49:29,340
you really<font color="#CCCCCC"> liked one</font><font color="#E5E5E5"> of these</font><font color="#CCCCCC"> talks of</font>

1362
00:49:27,480 --> 00:49:30,660
<font color="#E5E5E5">this subject</font><font color="#CCCCCC"> that one of the speakers</font><font color="#E5E5E5"> is</font>

1363
00:49:29,340 --> 00:49:32,990
talking<font color="#E5E5E5"> on is really interesting to you</font>

1364
00:49:30,660 --> 00:49:35,160
it's<font color="#E5E5E5"> very likely that they're on Twitter</font>

1365
00:49:32,990 --> 00:49:37,319
<font color="#CCCCCC">follow them</font><font color="#E5E5E5"> and then see who they follow</font>

1366
00:49:35,160 --> 00:49:40,230
see what they tweet see what they they

1367
00:49:37,320 --> 00:49:41,400
retweet in what they like<font color="#CCCCCC"> start with</font>

1368
00:49:40,230 --> 00:49:42,990
that and<font color="#E5E5E5"> then build it from there but</font>

1369
00:49:41,400 --> 00:49:45,000
<font color="#E5E5E5">realistically for me when I'm looking</font>

1370
00:49:42,990 --> 00:49:46,589
<font color="#E5E5E5">for</font><font color="#CCCCCC"> what I'm trying to understand that</font>

1371
00:49:45,000 --> 00:49:48,390
I'm hearing<font color="#E5E5E5"> about the latest application</font>

1372
00:49:46,590 --> 00:49:50,430
<font color="#E5E5E5">attacks</font><font color="#CCCCCC"> Twitter</font><font color="#E5E5E5"> is usually the first</font>

1373
00:49:48,390 --> 00:49:51,990
<font color="#E5E5E5">place</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> I hear it from there's also</font>

1374
00:49:50,430 --> 00:49:54,240
<font color="#E5E5E5">reddit has a subreddit called</font><font color="#CCCCCC"> our net</font>

1375
00:49:51,990 --> 00:49:56,310
<font color="#E5E5E5">sec</font><font color="#CCCCCC"> it's a good spot</font><font color="#E5E5E5"> I don't really use</font>

1376
00:49:54,240 --> 00:49:58,140
<font color="#CCCCCC">it anymore but</font><font color="#E5E5E5"> I know a lot</font><font color="#CCCCCC"> of people do</font>

1377
00:49:56,310 --> 00:50:00,029
<font color="#E5E5E5">so there's another another resource</font><font color="#CCCCCC"> for</font>

1378
00:49:58,140 --> 00:50:01,770
<font color="#E5E5E5">you</font><font color="#CCCCCC"> and something actually found</font>

1379
00:50:00,030 --> 00:50:03,030
recently<font color="#E5E5E5"> that</font><font color="#CCCCCC"> I put</font><font color="#E5E5E5"> on here was there's</font>

1380
00:50:01,770 --> 00:50:05,009
something called<font color="#E5E5E5"> the zero daily</font>

1381
00:50:03,030 --> 00:50:06,780
newsletter again by hacker one where it

1382
00:50:05,010 --> 00:50:07,980
comes out daily but it's a small<font color="#CCCCCC"> little</font>

1383
00:50:06,780 --> 00:50:09,540
<font color="#CCCCCC">newsletter</font><font color="#E5E5E5"> that gives you some of the</font>

1384
00:50:07,980 --> 00:50:12,060
<font color="#E5E5E5">latest bug bounty reports gives you</font>

1385
00:50:09,540 --> 00:50:13,710
latest like some tweets and gives you

1386
00:50:12,060 --> 00:50:15,060
some some write-ups that have been come

1387
00:50:13,710 --> 00:50:16,260
out<font color="#E5E5E5"> about different application security</font>

1388
00:50:15,060 --> 00:50:18,060
<font color="#E5E5E5">attacks and I've actually found it to be</font>

1389
00:50:16,260 --> 00:50:20,700
<font color="#CCCCCC">pretty good quality</font><font color="#E5E5E5"> so it's</font><font color="#CCCCCC"> everyday</font>

1390
00:50:18,060 --> 00:50:22,860
it's small easy to keep<font color="#E5E5E5"> up with it's a</font>

1391
00:50:20,700 --> 00:50:24,270
really good<font color="#E5E5E5"> place to start so with all</font>

1392
00:50:22,860 --> 00:50:26,160
of that<font color="#CCCCCC"> I want to say thank you very</font>

1393
00:50:24,270 --> 00:50:28,140
much for coming<font color="#E5E5E5"> if you have any</font>

1394
00:50:26,160 --> 00:50:30,690
questions or you want to reach out if

1395
00:50:28,140 --> 00:50:32,069
<font color="#E5E5E5">you would like to slide</font><font color="#CCCCCC"> please come</font><font color="#E5E5E5"> up</font>

1396
00:50:30,690 --> 00:50:33,000
to<font color="#E5E5E5"> me and ask me after for those</font><font color="#CCCCCC"> that</font>

1397
00:50:32,070 --> 00:50:35,100
are<font color="#E5E5E5"> going to be watching on the video</font>

1398
00:50:33,000 --> 00:50:36,480
<font color="#E5E5E5">just reach out on Twitter my DMS are</font>

1399
00:50:35,100 --> 00:50:38,730
open that<font color="#E5E5E5"> hasn't blown up</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> my face yet</font>

1400
00:50:36,480 --> 00:50:40,500
<font color="#E5E5E5">so reach out</font><font color="#CCCCCC"> to me any</font><font color="#E5E5E5"> time and I'm</font>

1401
00:50:38,730 --> 00:50:43,070
really<font color="#E5E5E5"> happy to answer any question so</font>

1402
00:50:40,500 --> 00:50:43,070
thank<font color="#E5E5E5"> you very much</font>

1403
00:50:44,620 --> 00:50:49,240
<font color="#CCCCCC">I don't</font><font color="#E5E5E5"> think we have any time for</font>

1404
00:50:47,500 --> 00:50:51,400
<font color="#CCCCCC">questions but if you</font><font color="#E5E5E5"> have any questions</font>

1405
00:50:49,240 --> 00:50:52,629
for me<font color="#CCCCCC"> I would really be I'd be</font><font color="#E5E5E5"> happy</font><font color="#CCCCCC"> to</font>

1406
00:50:51,400 --> 00:50:54,250
answer them<font color="#E5E5E5"> any time so</font><font color="#CCCCCC"> please come up</font>

1407
00:50:52,630 --> 00:50:56,850
to<font color="#CCCCCC"> me I'm trying</font><font color="#E5E5E5"> to be as friendly as I</font>

1408
00:50:54,250 --> 00:50:56,850
can<font color="#E5E5E5"> Thanks</font>

