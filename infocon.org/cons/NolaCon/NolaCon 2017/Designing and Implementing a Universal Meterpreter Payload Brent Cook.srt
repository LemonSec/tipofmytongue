1
00:00:00,030 --> 00:00:07,109
yeah sounds<font color="#CCCCCC"> great like I'm summative</font><font color="#E5E5E5"> hmm</font>

2
00:00:03,560 --> 00:00:09,900
<font color="#E5E5E5">just</font><font color="#CCCCCC"> say</font><font color="#E5E5E5"> let's get this thing</font><font color="#CCCCCC"> going</font>

3
00:00:07,109 --> 00:00:12,240
hi everybody thanks for picture staying

4
00:00:09,900 --> 00:00:16,320
awake<font color="#CCCCCC"> for my talk</font><font color="#E5E5E5"> and it's a little</font>

5
00:00:12,240 --> 00:00:18,750
scream they'll do it<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> and bigan</font>

6
00:00:16,320 --> 00:00:21,359
<font color="#CCCCCC">is it but what are my limits before I go</font>

7
00:00:18,750 --> 00:00:27,650
off<font color="#CCCCCC"> the thing there we go</font>

8
00:00:21,359 --> 00:00:30,990
that's good yeah that's right all right

9
00:00:27,650 --> 00:00:31,890
all right<font color="#E5E5E5"> well thanks everyone for</font>

10
00:00:30,990 --> 00:00:35,219
<font color="#E5E5E5">coming today</font>

11
00:00:31,890 --> 00:00:37,559
my name is Brent cook I am<font color="#CCCCCC"> I work of</font>

12
00:00:35,219 --> 00:00:38,270
rapid7<font color="#CCCCCC"> I'm the manager for the</font>

13
00:00:37,559 --> 00:00:40,349
<font color="#E5E5E5">Metasploit</font>

14
00:00:38,270 --> 00:00:41,760
<font color="#CCCCCC">but what does a metaphore manager do</font>

15
00:00:40,350 --> 00:00:44,579
<font color="#E5E5E5">well it does a</font><font color="#CCCCCC"> little bit</font><font color="#E5E5E5"> of everything</font>

16
00:00:41,760 --> 00:00:46,980
but<font color="#E5E5E5"> I actually get the code as well so</font>

17
00:00:44,579 --> 00:00:48,239
it's kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> a new thing and today I'm</font>

18
00:00:46,980 --> 00:00:50,180
going to talk<font color="#CCCCCC"> about some code that I</font>

19
00:00:48,239 --> 00:00:52,739
<font color="#CCCCCC">wrote with some other</font><font color="#E5E5E5"> people as well and</font>

20
00:00:50,180 --> 00:00:55,260
basically<font color="#CCCCCC"> that</font><font color="#E5E5E5"> ideas talk is it's about</font>

21
00:00:52,739 --> 00:00:56,879
building<font color="#E5E5E5"> a universal meterpreter payload</font>

22
00:00:55,260 --> 00:00:58,530
and we're gonna<font color="#E5E5E5"> be talking</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> a</font>

23
00:00:56,879 --> 00:01:00,750
little<font color="#CCCCCC"> bit</font><font color="#E5E5E5"> about the</font><font color="#CCCCCC"> how the</font><font color="#E5E5E5"> wise to</font>

24
00:00:58,530 --> 00:01:03,120
what what we basically did to make

25
00:01:00,750 --> 00:01:04,920
something that would run anywhere<font color="#E5E5E5"> work</font>

26
00:01:03,120 --> 00:01:08,340
anywhere<font color="#E5E5E5"> I'm a lot of people to exploit</font>

27
00:01:04,920 --> 00:01:10,380
things anywhere they<font color="#E5E5E5"> are so for this</font>

28
00:01:08,340 --> 00:01:12,840
talk I'm going<font color="#CCCCCC"> to make a little bit of</font>

29
00:01:10,380 --> 00:01:14,789
assumptions<font color="#CCCCCC"> I gave a talk on</font><font color="#E5E5E5"> on C</font>

30
00:01:12,840 --> 00:01:17,759
programming not too long ago<font color="#CCCCCC"> at Austin</font><font color="#E5E5E5"> V</font>

31
00:01:14,790 --> 00:01:20,310
sides and and I probably make this super

32
00:01:17,759 --> 00:01:21,360
clear but<font color="#CCCCCC"> maybe no see that's actually a</font>

33
00:01:20,310 --> 00:01:23,280
really<font color="#CCCCCC"> great thing because I'm gonna</font><font color="#E5E5E5"> be</font>

34
00:01:21,360 --> 00:01:24,780
showing<font color="#E5E5E5"> some C code if you don't I will</font>

35
00:01:23,280 --> 00:01:26,070
definitely<font color="#E5E5E5"> be explaining it and sort of</font>

36
00:01:24,780 --> 00:01:27,659
<font color="#E5E5E5">you know going through like</font><font color="#CCCCCC"> what we're</font>

37
00:01:26,070 --> 00:01:28,770
doing<font color="#E5E5E5"> here it's been a little bit of</font>

38
00:01:27,659 --> 00:01:30,810
Ruby because<font color="#E5E5E5"> we talked a little bit</font>

39
00:01:28,770 --> 00:01:31,890
<font color="#E5E5E5">about</font><font color="#CCCCCC"> Metasploit it's okay you</font><font color="#E5E5E5"> don't</font>

40
00:01:30,810 --> 00:01:33,240
<font color="#E5E5E5">have to</font><font color="#CCCCCC"> know a whole</font><font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of Ruby for</font>

41
00:01:31,890 --> 00:01:35,130
this<font color="#E5E5E5"> because</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> little bit about make</font>

42
00:01:33,240 --> 00:01:36,780
files and<font color="#E5E5E5"> things like that</font><font color="#CCCCCC"> stood dust-up</font>

43
00:01:35,130 --> 00:01:38,729
<font color="#E5E5E5">too and that's very exciting</font><font color="#CCCCCC"> so I think</font>

44
00:01:36,780 --> 00:01:40,229
they're built in kind<font color="#E5E5E5"> of software you</font>

45
00:01:38,729 --> 00:01:41,310
might have used to<font color="#E5E5E5"> make file before</font><font color="#CCCCCC"> if</font>

46
00:01:40,229 --> 00:01:42,929
you know a little<font color="#E5E5E5"> bit about an operating</font>

47
00:01:41,310 --> 00:01:44,640
<font color="#CCCCCC">system</font><font color="#E5E5E5"> it's also really</font><font color="#CCCCCC"> nice to kind of</font>

48
00:01:42,930 --> 00:01:46,170
know<font color="#CCCCCC"> about like what system call is what</font>

49
00:01:44,640 --> 00:01:47,490
a library is<font color="#CCCCCC"> that sort of thing and</font>

50
00:01:46,170 --> 00:01:49,049
we'll talk a little<font color="#E5E5E5"> bit about</font>

51
00:01:47,490 --> 00:01:50,309
exploitation<font color="#E5E5E5"> but not a whole lot</font>

52
00:01:49,049 --> 00:01:55,710
those are going<font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> about software</font>

53
00:01:50,310 --> 00:01:58,500
<font color="#E5E5E5">engineering</font><font color="#CCCCCC"> and fun see</font><font color="#E5E5E5"> that way so just</font>

54
00:01:55,710 --> 00:02:00,059
a little<font color="#E5E5E5"> bit about myself</font><font color="#CCCCCC"> I am not</font>

55
00:01:58,500 --> 00:02:02,399
traditionally an offensive security<font color="#E5E5E5"> guy</font>

56
00:02:00,060 --> 00:02:04,170
<font color="#CCCCCC">I worked in embedded systems for a long</font>

57
00:02:02,399 --> 00:02:04,900
time worked on networking stacks<font color="#E5E5E5"> worked</font>

58
00:02:04,170 --> 00:02:06,940
on

59
00:02:04,900 --> 00:02:09,100
you know<font color="#CCCCCC"> firmware you Luke porting</font><font color="#E5E5E5"> Linux</font>

60
00:02:06,940 --> 00:02:10,869
kernel drivers all that sort of thing<font color="#CCCCCC"> in</font>

61
00:02:09,100 --> 00:02:12,760
fact that's where<font color="#E5E5E5"> I first got exposed to</font>

62
00:02:10,869 --> 00:02:14,770
<font color="#CCCCCC">Metasploit I worked at at breaking point</font>

63
00:02:12,760 --> 00:02:16,120
systems and I<font color="#CCCCCC"> worked with HP more</font><font color="#E5E5E5"> we</font>

64
00:02:14,770 --> 00:02:17,740
were the<font color="#E5E5E5"> first two employees at</font><font color="#CCCCCC"> that</font>

65
00:02:16,120 --> 00:02:20,170
<font color="#E5E5E5">company</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> he worked on security</font><font color="#CCCCCC"> sighs</font>

66
00:02:17,740 --> 00:02:22,990
and I worked on custom hardware to make

67
00:02:20,170 --> 00:02:24,429
security<font color="#E5E5E5"> go faster</font><font color="#CCCCCC"> so we kind of we're a</font>

68
00:02:22,990 --> 00:02:25,300
team I didn't know much about<font color="#CCCCCC"> Mehta</font>

69
00:02:24,430 --> 00:02:28,060
<font color="#E5E5E5">school I remember</font><font color="#CCCCCC"> when I first</font><font color="#E5E5E5"> got</font>

70
00:02:25,300 --> 00:02:30,910
<font color="#E5E5E5">introduced HP is like</font><font color="#CCCCCC"> hey Seymour I was</font>

71
00:02:28,060 --> 00:02:33,460
<font color="#E5E5E5">like hi all right cool</font>

72
00:02:30,910 --> 00:02:37,180
so it's kind of<font color="#E5E5E5"> interesting everyone was</font>

73
00:02:33,460 --> 00:02:40,150
kind of like<font color="#E5E5E5"> a</font><font color="#CCCCCC"> god</font><font color="#E5E5E5"> look all right</font><font color="#CCCCCC"> so</font>

74
00:02:37,180 --> 00:02:41,980
<font color="#CCCCCC">anyway so</font><font color="#E5E5E5"> about ten years later HD</font>

75
00:02:40,150 --> 00:02:45,250
actually convinced me to come to<font color="#E5E5E5"> rapid7</font>

76
00:02:41,980 --> 00:02:47,560
<font color="#CCCCCC">and</font><font color="#E5E5E5"> and you know I did my first</font>

77
00:02:45,250 --> 00:02:51,070
<font color="#CCCCCC">Metasploit pull request</font><font color="#E5E5E5"> oh I know what's</font>

78
00:02:47,560 --> 00:02:54,400
wrong<font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> chaining the microphone see I</font>

79
00:02:51,070 --> 00:02:55,750
can avoid that<font color="#CCCCCC"> there we go and then a</font>

80
00:02:54,400 --> 00:02:57,100
month<font color="#E5E5E5"> later after I start working about</font>

81
00:02:55,750 --> 00:02:59,410
<font color="#E5E5E5">stem</font><font color="#CCCCCC"> I broke the whole Metasploit tree</font>

82
00:02:57,100 --> 00:03:01,480
<font color="#CCCCCC">but</font><font color="#E5E5E5"> hey you let you learn through</font>

83
00:02:59,410 --> 00:03:03,220
<font color="#E5E5E5">experience right</font><font color="#CCCCCC"> I also work on libres</font>

84
00:03:01,480 --> 00:03:04,989
<font color="#CCCCCC">assault on</font><font color="#E5E5E5"> an open V speak emitter as</font>

85
00:03:03,220 --> 00:03:07,390
well so a<font color="#E5E5E5"> lot of different</font><font color="#CCCCCC"> open-source</font>

86
00:03:04,990 --> 00:03:08,800
projects and a lot of<font color="#E5E5E5"> different things</font>

87
00:03:07,390 --> 00:03:10,390
<font color="#CCCCCC">I'll</font><font color="#E5E5E5"> talk</font><font color="#CCCCCC"> a little bit about how that</font>

88
00:03:08,800 --> 00:03:12,010
<font color="#E5E5E5">kind of has shaped some of the things</font>

89
00:03:10,390 --> 00:03:14,950
<font color="#E5E5E5">that had done as far as work from</font>

90
00:03:12,010 --> 00:03:16,510
<font color="#CCCCCC">Metasploit</font><font color="#E5E5E5"> as</font><font color="#CCCCCC"> well main motivation</font>

91
00:03:14,950 --> 00:03:18,700
actually<font color="#CCCCCC"> this is the main reason why I</font>

92
00:03:16,510 --> 00:03:21,250
<font color="#CCCCCC">even came to rapid7 Todd Beardsley</font><font color="#E5E5E5"> who</font>

93
00:03:18,700 --> 00:03:23,260
<font color="#E5E5E5">was heading up the threat the</font><font color="#CCCCCC"> metaphor</font>

94
00:03:21,250 --> 00:03:25,390
team at the time basically wanted to<font color="#E5E5E5"> run</font>

95
00:03:23,260 --> 00:03:27,100
meterpreter on everything<font color="#E5E5E5"> you know we're</font>

96
00:03:25,390 --> 00:03:28,750
looking<font color="#E5E5E5"> at IOT</font><font color="#CCCCCC"> both knit routers looking</font>

97
00:03:27,100 --> 00:03:32,109
at phones looking at switches all this

98
00:03:28,750 --> 00:03:33,670
kind of stuff you<font color="#CCCCCC"> know that was suddenly</font>

99
00:03:32,110 --> 00:03:35,020
<font color="#E5E5E5">had an IP address you want to be</font><font color="#CCCCCC"> able to</font>

100
00:03:33,670 --> 00:03:36,640
run interpreter on it it's<font color="#CCCCCC"> your reverse</font>

101
00:03:35,020 --> 00:03:38,080
<font color="#E5E5E5">shell is fun but you</font><font color="#CCCCCC"> know you can only</font>

102
00:03:36,640 --> 00:03:40,570
<font color="#E5E5E5">get so</font><font color="#CCCCCC"> far a</font><font color="#E5E5E5"> lot of times with</font><font color="#CCCCCC"> busybox</font>

103
00:03:38,080 --> 00:03:43,150
and you know it's nice to be able<font color="#E5E5E5"> to</font>

104
00:03:40,570 --> 00:03:44,440
have<font color="#CCCCCC"> bill to</font><font color="#E5E5E5"> do pivoting and take</font>

105
00:03:43,150 --> 00:03:46,209
pictures<font color="#CCCCCC"> and do all kinds of</font><font color="#E5E5E5"> different</font>

106
00:03:44,440 --> 00:03:47,500
interesting stuff so<font color="#CCCCCC"> that's basically</font>

107
00:03:46,209 --> 00:03:51,100
<font color="#E5E5E5">the idea here</font><font color="#CCCCCC"> is if we</font><font color="#E5E5E5"> want to run</font>

108
00:03:47,500 --> 00:03:53,080
<font color="#CCCCCC">interpreter on all things of</font><font color="#E5E5E5"> course you</font>

109
00:03:51,100 --> 00:03:54,250
know if you you know write exploits it's

110
00:03:53,080 --> 00:03:58,030
not that much<font color="#E5E5E5"> fun if all you get is a</font>

111
00:03:54,250 --> 00:03:59,769
reverse shell<font color="#CCCCCC"> there</font><font color="#E5E5E5"> when we started</font>

112
00:03:58,030 --> 00:04:01,870
<font color="#E5E5E5">looking more closely into sort of the</font>

113
00:03:59,769 --> 00:04:03,190
world of embedded exploitation and sort

114
00:04:01,870 --> 00:04:06,250
of exporting<font color="#CCCCCC"> things beyond just</font><font color="#E5E5E5"> the</font>

115
00:04:03,190 --> 00:04:07,540
standard<font color="#E5E5E5"> windows boxes you know it found</font>

116
00:04:06,250 --> 00:04:08,850
<font color="#CCCCCC">that</font><font color="#E5E5E5"> there are a lot of interesting sort</font>

117
00:04:07,540 --> 00:04:11,500
<font color="#CCCCCC">of things to overcome</font>

118
00:04:08,850 --> 00:04:12,700
<font color="#E5E5E5">sandboxing is a real thing SC Linux does</font>

119
00:04:11,500 --> 00:04:15,430
a pretty good job of restricting what

120
00:04:12,700 --> 00:04:18,170
<font color="#E5E5E5">you can do other other systems like</font>

121
00:04:15,430 --> 00:04:20,240
Android and iOS they do a lot to prevent

122
00:04:18,170 --> 00:04:23,390
malicious processes from<font color="#E5E5E5"> doing weird</font>

123
00:04:20,240 --> 00:04:25,040
things<font color="#CCCCCC"> like sparklers you can't fork if</font>

124
00:04:23,390 --> 00:04:26,210
you're in iOS<font color="#E5E5E5"> there's a lot of</font>

125
00:04:25,040 --> 00:04:28,490
<font color="#E5E5E5">interesting stuff</font><font color="#CCCCCC"> that you have to work</font>

126
00:04:26,210 --> 00:04:30,140
around<font color="#E5E5E5"> of course</font><font color="#CCCCCC"> there's also a memory</font>

127
00:04:28,490 --> 00:04:31,340
<font color="#E5E5E5">and disk and CPU constraints as well</font>

128
00:04:30,140 --> 00:04:33,979
<font color="#E5E5E5">when you want to write a payload that</font>

129
00:04:31,340 --> 00:04:36,349
<font color="#E5E5E5">runs on like say a you know an X scale</font>

130
00:04:33,980 --> 00:04:38,030
processor<font color="#E5E5E5"> from 2004 because you want to</font>

131
00:04:36,350 --> 00:04:39,230
pop a router<font color="#E5E5E5"> or something like that it's</font>

132
00:04:38,030 --> 00:04:41,059
<font color="#E5E5E5">very useful</font><font color="#CCCCCC"> to be</font><font color="#E5E5E5"> able to be a</font>

133
00:04:39,230 --> 00:04:42,890
lightweight<font color="#CCCCCC"> you</font><font color="#E5E5E5"> know if you want to</font>

134
00:04:41,060 --> 00:04:45,230
<font color="#E5E5E5">inject into a switch you know things as</font>

135
00:04:42,890 --> 00:04:47,180
things are tuned<font color="#CCCCCC"> to run</font><font color="#E5E5E5"> exactly the</font>

136
00:04:45,230 --> 00:04:48,440
<font color="#E5E5E5">payload or the exact load that they're</font>

137
00:04:47,180 --> 00:04:49,970
designed for<font color="#E5E5E5"> so you don't necessarily</font>

138
00:04:48,440 --> 00:04:52,460
knock over<font color="#E5E5E5"> something switch just because</font>

139
00:04:49,970 --> 00:04:54,230
you injected interpreter into it<font color="#CCCCCC"> another</font>

140
00:04:52,460 --> 00:04:56,270
<font color="#E5E5E5">reason why we you know basic want to</font>

141
00:04:54,230 --> 00:04:57,650
tick<font color="#E5E5E5"> under this project is traditionally</font>

142
00:04:56,270 --> 00:04:59,120
a<font color="#E5E5E5"> lot of them</font><font color="#CCCCCC"> particular</font><font color="#E5E5E5"> payloads for</font>

143
00:04:57,650 --> 00:05:01,099
non<font color="#E5E5E5"> Windows systems have been ported</font>

144
00:04:59,120 --> 00:05:03,530
straight from<font color="#CCCCCC"> Windows</font><font color="#E5E5E5"> and what kind of</font>

145
00:05:01,100 --> 00:05:06,980
found was<font color="#CCCCCC"> that it's very difficult</font>

146
00:05:03,530 --> 00:05:08,570
actually to<font color="#E5E5E5"> get a curve a sane API when</font>

147
00:05:06,980 --> 00:05:10,010
you port for<font color="#E5E5E5"> Windows to other systems</font>

148
00:05:08,570 --> 00:05:11,480
versus<font color="#CCCCCC"> going</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> other system to</font>

149
00:05:10,010 --> 00:05:12,710
Windows<font color="#CCCCCC"> I give you get some examples of</font>

150
00:05:11,480 --> 00:05:16,910
some<font color="#E5E5E5"> interesting things are granted to</font>

151
00:05:12,710 --> 00:05:18,469
with the other model so how do you start

152
00:05:16,910 --> 00:05:20,360
a project like<font color="#E5E5E5"> this</font><font color="#CCCCCC"> I want to</font><font color="#E5E5E5"> write a</font>

153
00:05:18,470 --> 00:05:21,650
meterpreter<font color="#E5E5E5"> it runs everywhere I want</font><font color="#CCCCCC"> to</font>

154
00:05:20,360 --> 00:05:23,120
talk a<font color="#E5E5E5"> little bit</font><font color="#CCCCCC"> about another</font><font color="#E5E5E5"> project</font>

155
00:05:21,650 --> 00:05:25,010
that<font color="#E5E5E5"> you should certainly</font><font color="#CCCCCC"> check out if</font>

156
00:05:23,120 --> 00:05:26,780
you watch<font color="#E5E5E5"> YouTube there's a great</font>

157
00:05:25,010 --> 00:05:29,120
project<font color="#E5E5E5"> called</font><font color="#CCCCCC"> the giant</font><font color="#E5E5E5"> robot spider</font>

158
00:05:26,780 --> 00:05:31,520
project and<font color="#E5E5E5"> basically the</font><font color="#CCCCCC"> idea behind</font>

159
00:05:29,120 --> 00:05:33,500
<font color="#E5E5E5">this project was the</font><font color="#CCCCCC"> guy inventor wanted</font>

160
00:05:31,520 --> 00:05:37,250
<font color="#E5E5E5">to basically build a giant robot spider</font>

161
00:05:33,500 --> 00:05:38,330
<font color="#E5E5E5">that you could ride</font><font color="#CCCCCC"> and obviously what</font>

162
00:05:37,250 --> 00:05:39,590
you guys think<font color="#E5E5E5"> you should do when you</font>

163
00:05:38,330 --> 00:05:44,060
want to build<font color="#CCCCCC"> a big project</font><font color="#E5E5E5"> like this</font>

164
00:05:39,590 --> 00:05:46,039
<font color="#CCCCCC">what's with the first</font><font color="#E5E5E5"> step obviously</font><font color="#CCCCCC"> you</font>

165
00:05:44,060 --> 00:05:47,720
<font color="#E5E5E5">need</font><font color="#CCCCCC"> to cut down trees build a sawmill</font>

166
00:05:46,040 --> 00:05:49,400
and use the lumber from<font color="#E5E5E5"> the sawmill to</font>

167
00:05:47,720 --> 00:05:52,620
build a workshop<font color="#CCCCCC"> because obviously you</font>

168
00:05:49,400 --> 00:05:55,469
<font color="#E5E5E5">can't build a robot spider if you</font>

169
00:05:52,620 --> 00:05:56,430
don't have a workshop<font color="#E5E5E5"> so actually the</font>

170
00:05:55,470 --> 00:05:59,010
guy goes through<font color="#CCCCCC"> a hundred different</font>

171
00:05:56,430 --> 00:06:00,120
videos<font color="#E5E5E5"> and the first thing he does is</font>

172
00:05:59,010 --> 00:06:02,460
actually<font color="#E5E5E5"> he's building all the</font>

173
00:06:00,120 --> 00:06:04,260
infrastructure he needs in<font color="#E5E5E5"> order to you</font>

174
00:06:02,460 --> 00:06:05,520
know<font color="#CCCCCC"> build the raw materials that he</font>

175
00:06:04,260 --> 00:06:06,750
didn't<font color="#CCCCCC"> use it to build</font><font color="#E5E5E5"> a robot</font><font color="#CCCCCC"> spider</font>

176
00:06:05,520 --> 00:06:08,820
eventually gets to<font color="#E5E5E5"> the point where he</font>

177
00:06:06,750 --> 00:06:11,430
built<font color="#E5E5E5"> throughout spider then the process</font>

178
00:06:08,820 --> 00:06:12,659
the x-rays<font color="#E5E5E5"> of the whole family it's a</font>

179
00:06:11,430 --> 00:06:14,790
whole bunch<font color="#CCCCCC"> of other things happen to</font>

180
00:06:12,660 --> 00:06:17,490
them<font color="#CCCCCC"> and it's</font><font color="#E5E5E5"> kind of an adventure until</font>

181
00:06:14,790 --> 00:06:20,220
itself<font color="#CCCCCC"> obviously if you want to</font><font color="#E5E5E5"> actually</font>

182
00:06:17,490 --> 00:06:22,080
ship a software<font color="#E5E5E5"> that may not</font><font color="#CCCCCC"> be the best</font>

183
00:06:20,220 --> 00:06:23,820
way to go<font color="#E5E5E5"> I'm starting from the</font><font color="#CCCCCC"> very</font>

184
00:06:22,080 --> 00:06:27,120
beginning<font color="#E5E5E5"> although it's sure to be</font><font color="#CCCCCC"> very</font>

185
00:06:23,820 --> 00:06:29,010
fun and entertaining<font color="#E5E5E5"> but certainly</font>

186
00:06:27,120 --> 00:06:30,870
<font color="#CCCCCC">definitely a Jamie Menzel</font><font color="#E5E5E5"> as the guys</font>

187
00:06:29,010 --> 00:06:32,880
name<font color="#CCCCCC"> it come</font><font color="#E5E5E5"> on check them out it's a</font>

188
00:06:30,870 --> 00:06:35,430
very<font color="#E5E5E5"> cool project and there's some good</font>

189
00:06:32,880 --> 00:06:37,260
summary videos too<font color="#CCCCCC"> but let's</font><font color="#E5E5E5"> take it</font>

190
00:06:35,430 --> 00:06:38,940
sort of an inventory of<font color="#E5E5E5"> what we have</font>

191
00:06:37,260 --> 00:06:42,840
here<font color="#CCCCCC"> to actually build</font><font color="#E5E5E5"> this Universal</font>

192
00:06:38,940 --> 00:06:45,150
<font color="#CCCCCC">interpreter so</font><font color="#E5E5E5"> it's guys guys</font><font color="#CCCCCC"> Metasploit</font>

193
00:06:42,840 --> 00:06:46,619
users have you ever used<font color="#E5E5E5"> Metasploit got</font>

194
00:06:45,150 --> 00:06:48,810
a few<font color="#E5E5E5"> guys</font><font color="#CCCCCC"> out there</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> so you guys use</font>

195
00:06:46,620 --> 00:06:50,100
an<font color="#CCCCCC"> interpreter and</font><font color="#E5E5E5"> it and have any guys</font>

196
00:06:48,810 --> 00:06:52,320
like looked<font color="#E5E5E5"> at how it actually works</font>

197
00:06:50,100 --> 00:06:54,510
<font color="#E5E5E5">like under the covers or just what kind</font>

198
00:06:52,320 --> 00:06:56,130
<font color="#E5E5E5">of inject all right got one in the back</font>

199
00:06:54,510 --> 00:06:59,430
<font color="#CCCCCC">alright so this will be totally</font><font color="#E5E5E5"> boring I</font>

200
00:06:56,130 --> 00:07:02,340
apologize<font color="#CCCCCC"> or</font><font color="#E5E5E5"> basically I did the time</font>

201
00:06:59,430 --> 00:07:06,030
interpreter is it is sort of a way to

202
00:07:02,340 --> 00:07:08,760
<font color="#E5E5E5">abstract the OS from an exploiters point</font>

203
00:07:06,030 --> 00:07:10,049
of view<font color="#E5E5E5"> meterpreter provides a lot of</font>

204
00:07:08,760 --> 00:07:12,750
<font color="#E5E5E5">interesting</font><font color="#CCCCCC"> things one is of course</font>

205
00:07:10,050 --> 00:07:15,360
provide sort of<font color="#CCCCCC"> a stable</font><font color="#E5E5E5"> base core set</font>

206
00:07:12,750 --> 00:07:16,950
<font color="#CCCCCC">of API</font><font color="#E5E5E5"> is called the core API this</font>

207
00:07:15,360 --> 00:07:19,350
<font color="#E5E5E5">basically doesn't do a whole lot all it</font>

208
00:07:16,950 --> 00:07:20,940
does is connect<font color="#E5E5E5"> to</font><font color="#CCCCCC"> Metasploit and says</font>

209
00:07:19,350 --> 00:07:23,220
<font color="#E5E5E5">I'm here and here's what I know how to</font>

210
00:07:20,940 --> 00:07:24,539
do<font color="#E5E5E5"> it's kind of like in a language be</font>

211
00:07:23,220 --> 00:07:25,620
able to do<font color="#CCCCCC"> our reflection where you can</font>

212
00:07:24,539 --> 00:07:28,020
sort<font color="#CCCCCC"> of</font><font color="#E5E5E5"> basically ask like what's</font>

213
00:07:25,620 --> 00:07:30,120
available what can you actually do that

214
00:07:28,020 --> 00:07:32,700
that I could use as part<font color="#E5E5E5"> of an exploit</font>

215
00:07:30,120 --> 00:07:33,419
or a post exploitation scenario of

216
00:07:32,700 --> 00:07:35,400
<font color="#E5E5E5">course we have a whole</font><font color="#CCCCCC"> lots</font><font color="#E5E5E5"> of</font>

217
00:07:33,419 --> 00:07:37,229
extensions<font color="#E5E5E5"> as</font><font color="#CCCCCC"> well so if for</font><font color="#E5E5E5"> instance to</font>

218
00:07:35,400 --> 00:07:40,650
do anything<font color="#E5E5E5"> interesting like open a file</font>

219
00:07:37,229 --> 00:07:42,180
or you know do something<font color="#E5E5E5"> on the network</font>

220
00:07:40,650 --> 00:07:44,340
<font color="#CCCCCC">open up a</font><font color="#E5E5E5"> tunnel</font>

221
00:07:42,180 --> 00:07:45,990
this is<font color="#E5E5E5"> required extensions and so we</font>

222
00:07:44,340 --> 00:07:48,388
have two tips like standard<font color="#E5E5E5"> API which is</font>

223
00:07:45,990 --> 00:07:51,240
all<font color="#CCCCCC"> set every meterpreter sports</font><font color="#E5E5E5"> there's</font>

224
00:07:48,389 --> 00:07:53,039
like the extra fee I or X<font color="#E5E5E5"> API which does</font>

225
00:07:51,240 --> 00:07:54,900
things like<font color="#CCCCCC"> privilege raising and other</font>

226
00:07:53,039 --> 00:07:55,950
stuff<font color="#E5E5E5"> like that changes all system</font>

227
00:07:54,900 --> 00:07:58,260
parameters and there's a whole<font color="#E5E5E5"> bunch of</font>

228
00:07:55,950 --> 00:08:00,060
other api's and extensions built<font color="#E5E5E5"> in top</font>

229
00:07:58,260 --> 00:08:01,620
<font color="#CCCCCC">of that that you can add for specific</font>

230
00:08:00,060 --> 00:08:03,720
purposes like<font color="#CCCCCC"> for instance</font><font color="#E5E5E5"> on Android</font>

231
00:08:01,620 --> 00:08:05,340
<font color="#E5E5E5">phones we</font><font color="#CCCCCC"> have a specific</font><font color="#E5E5E5"> Android API</font>

232
00:08:03,720 --> 00:08:06,960
that allows you to<font color="#E5E5E5"> do</font><font color="#CCCCCC"> Andrew</font>

233
00:08:05,340 --> 00:08:08,789
things like<font color="#E5E5E5"> you know tracking GPS and</font>

234
00:08:06,960 --> 00:08:10,890
that sort of thing<font color="#CCCCCC"> we also have</font>

235
00:08:08,790 --> 00:08:13,610
<font color="#CCCCCC">transport</font><font color="#E5E5E5"> which is basically how does</font>

236
00:08:10,890 --> 00:08:16,140
the interpreter talk back to<font color="#CCCCCC"> Metasploit</font>

237
00:08:13,610 --> 00:08:17,880
<font color="#CCCCCC">this can you</font><font color="#E5E5E5"> know the outer transport is</font>

238
00:08:16,140 --> 00:08:19,440
designed to<font color="#E5E5E5"> look up obfuscated so you</font>

239
00:08:17,880 --> 00:08:22,170
can't<font color="#E5E5E5"> really</font><font color="#CCCCCC"> tell what</font><font color="#E5E5E5"> the traffic is</font>

240
00:08:19,440 --> 00:08:24,000
like<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> HP you</font><font color="#CCCCCC"> can you</font><font color="#E5E5E5"> can directly</font>

241
00:08:22,170 --> 00:08:26,130
embed it into<font color="#E5E5E5"> any other kind of</font><font color="#CCCCCC"> Network</font>

242
00:08:24,000 --> 00:08:27,510
protocol as<font color="#E5E5E5"> well and</font><font color="#CCCCCC"> difficut sometime</font>

243
00:08:26,130 --> 00:08:29,610
we'll talk a little<font color="#CCCCCC"> bit about that</font><font color="#E5E5E5"> and</font>

244
00:08:27,510 --> 00:08:31,710
<font color="#CCCCCC">then under the covers there's a protocol</font>

245
00:08:29,610 --> 00:08:33,750
<font color="#CCCCCC">called the the creatively named</font><font color="#E5E5E5"> TLD</font>

246
00:08:31,710 --> 00:08:38,640
protocol<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> it's not TLV it's</font>

247
00:08:33,750 --> 00:08:40,590
actually the<font color="#E5E5E5"> TL it basically it's it's</font>

248
00:08:38,640 --> 00:08:43,740
where you encode<font color="#E5E5E5"> the links and type in</font>

249
00:08:40,590 --> 00:08:45,870
the<font color="#E5E5E5"> value of a of a of a command into a</font>

250
00:08:43,740 --> 00:08:47,340
packet and<font color="#E5E5E5"> that base</font><font color="#CCCCCC"> was a low-level</font>

251
00:08:45,870 --> 00:08:49,910
<font color="#E5E5E5">primitive that everything interpreters</font>

252
00:08:47,340 --> 00:08:52,380
<font color="#E5E5E5">uses and of course we also have modules</font>

253
00:08:49,910 --> 00:08:53,939
<font color="#CCCCCC">that run on Metasploit itself and these</font>

254
00:08:52,380 --> 00:08:55,200
basically tell interpreter what to do is

255
00:08:53,940 --> 00:08:57,810
sort<font color="#CCCCCC"> of a list of instructions and</font>

256
00:08:55,200 --> 00:08:59,250
<font color="#E5E5E5">column responses so we've got this sort</font>

257
00:08:57,810 --> 00:09:00,390
of infrastructure<font color="#CCCCCC"> and with</font><font color="#E5E5E5"> this</font>

258
00:08:59,250 --> 00:09:02,640
infrastructure<font color="#E5E5E5"> we</font><font color="#CCCCCC"> can build a</font>

259
00:09:00,390 --> 00:09:04,140
<font color="#E5E5E5">meterpreter that you know works like</font>

260
00:09:02,640 --> 00:09:06,390
<font color="#CCCCCC">Windows interpreter it basically follows</font>

261
00:09:04,140 --> 00:09:08,220
<font color="#E5E5E5">the API so what kind of interpreters do</font>

262
00:09:06,390 --> 00:09:09,870
we have<font color="#E5E5E5"> well when I first started</font><font color="#CCCCCC"> we've</font>

263
00:09:08,220 --> 00:09:10,920
<font color="#E5E5E5">had seven interpreters did you guys know</font>

264
00:09:09,870 --> 00:09:12,750
<font color="#CCCCCC">that there were seven</font><font color="#E5E5E5"> of interpreters</font>

265
00:09:10,920 --> 00:09:14,250
not only<font color="#E5E5E5"> seven interpreters we have</font><font color="#CCCCCC"> to</font>

266
00:09:12,750 --> 00:09:15,960
<font color="#CCCCCC">four separate code bases that all</font>

267
00:09:14,250 --> 00:09:18,480
implement basically the interpreter spec

268
00:09:15,960 --> 00:09:21,630
we had three that were windows-based<font color="#CCCCCC"> or</font>

269
00:09:18,480 --> 00:09:24,270
32-bit<font color="#E5E5E5"> 64-bit and a Linux</font><font color="#CCCCCC"> 32-bit one it</font>

270
00:09:21,630 --> 00:09:26,970
kind<font color="#E5E5E5"> of works but not really</font><font color="#CCCCCC"> we have</font>

271
00:09:24,270 --> 00:09:28,890
Android and Java which job<font color="#CCCCCC"> with p4 on</font>

272
00:09:26,970 --> 00:09:29,640
you know<font color="#E5E5E5"> Java apps</font><font color="#CCCCCC"> there was a desktop</font>

273
00:09:28,890 --> 00:09:32,730
<font color="#CCCCCC">that sort of thing</font>

274
00:09:29,640 --> 00:09:34,319
Python and PHP now Python PHP are very

275
00:09:32,730 --> 00:09:35,550
interesting in<font color="#CCCCCC"> that might last well if</font>

276
00:09:34,320 --> 00:09:37,830
you have native ones why do you need

277
00:09:35,550 --> 00:09:39,420
ones<font color="#E5E5E5"> written in Python and PHP it really</font>

278
00:09:37,830 --> 00:09:41,940
depends<font color="#E5E5E5"> on this exploitation scenario</font>

279
00:09:39,420 --> 00:09:44,010
for instance<font color="#E5E5E5"> you may be on a system</font>

280
00:09:41,940 --> 00:09:45,270
where you<font color="#CCCCCC"> don't have</font><font color="#E5E5E5"> sews</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> matches the</font>

281
00:09:44,010 --> 00:09:47,939
underlying architecture maybe<font color="#E5E5E5"> it's arm</font>

282
00:09:45,270 --> 00:09:49,020
<font color="#E5E5E5">maybe it's something else you can</font><font color="#CCCCCC"> coerce</font>

283
00:09:47,940 --> 00:09:51,300
<font color="#CCCCCC">to also have apps</font><font color="#E5E5E5"> that are</font>

284
00:09:49,020 --> 00:09:52,890
cross-platform<font color="#CCCCCC"> so you could have an</font><font color="#E5E5E5"> app</font>

285
00:09:51,300 --> 00:09:55,050
that<font color="#E5E5E5"> can run</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> Windows</font><font color="#CCCCCC"> can run a Linux</font>

286
00:09:52,890 --> 00:09:56,340
OSX<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you want to be able</font><font color="#E5E5E5"> to exploit</font>

287
00:09:55,050 --> 00:09:58,349
it in basically the same<font color="#CCCCCC"> way</font><font color="#E5E5E5"> across all</font>

288
00:09:56,340 --> 00:10:01,710
<font color="#CCCCCC">the different</font><font color="#E5E5E5"> environments</font><font color="#CCCCCC"> also a lot</font><font color="#E5E5E5"> of</font>

289
00:09:58,350 --> 00:10:03,900
times the method by which you inject the

290
00:10:01,710 --> 00:10:06,180
payload<font color="#E5E5E5"> can change which payload to use</font>

291
00:10:03,900 --> 00:10:10,020
for instance let's say you<font color="#CCCCCC"> had some sort</font>

292
00:10:06,180 --> 00:10:12,120
<font color="#CCCCCC">of a PHP deserialization</font><font color="#E5E5E5"> bug in a web</font>

293
00:10:10,020 --> 00:10:13,530
application<font color="#CCCCCC"> you</font><font color="#E5E5E5"> might want to inject PHP</font>

294
00:10:12,120 --> 00:10:14,730
interpreter because<font color="#E5E5E5"> on you can easily</font>

295
00:10:13,530 --> 00:10:16,319
<font color="#CCCCCC">just</font><font color="#E5E5E5"> encode it straight in and</font>

296
00:10:14,730 --> 00:10:17,470
deserialize it into an object<font color="#E5E5E5"> can you</font>

297
00:10:16,320 --> 00:10:19,510
get<font color="#E5E5E5"> mo</font><font color="#CCCCCC"> critics</font>

298
00:10:17,470 --> 00:10:22,060
so there's a lot<font color="#CCCCCC"> of reasons why</font><font color="#E5E5E5"> you have</font>

299
00:10:19,510 --> 00:10:23,410
<font color="#E5E5E5">these different interpreters</font><font color="#CCCCCC"> what I</font>

300
00:10:22,060 --> 00:10:26,079
<font color="#E5E5E5">basically wanted to do let's get rid of</font>

301
00:10:23,410 --> 00:10:27,819
this guy here<font color="#E5E5E5"> when I speak to</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> sorta</font>

302
00:10:26,079 --> 00:10:31,449
and<font color="#E5E5E5"> make it something that was really</font>

303
00:10:27,820 --> 00:10:32,769
good<font color="#E5E5E5"> and</font><font color="#CCCCCC"> well</font><font color="#E5E5E5"> supported also while we're</font>

304
00:10:31,450 --> 00:10:39,100
<font color="#CCCCCC">looking to inventory how many</font><font color="#E5E5E5"> lines of</font>

305
00:10:32,769 --> 00:10:41,860
code do we have a lot a<font color="#E5E5E5"> lot 677 thousand</font>

306
00:10:39,100 --> 00:10:45,010
lines of C code<font color="#E5E5E5"> in</font><font color="#CCCCCC"> Windows interpreter</font>

307
00:10:41,860 --> 00:10:46,660
so that's a lot to maintain<font color="#E5E5E5"> and a lot of</font>

308
00:10:45,010 --> 00:10:48,490
<font color="#E5E5E5">it comes</font><font color="#CCCCCC"> from just kind of reinventing</font>

309
00:10:46,660 --> 00:10:49,870
the wheel a lot of places some kind<font color="#CCCCCC"> of</font>

310
00:10:48,490 --> 00:10:52,570
<font color="#CCCCCC">everything written</font><font color="#E5E5E5"> from scratch</font>

311
00:10:49,870 --> 00:10:54,730
little old<font color="#CCCCCC"> a</font><font color="#E5E5E5"> little you know a little</font>

312
00:10:52,570 --> 00:10:57,310
<font color="#CCCCCC">bit</font><font color="#E5E5E5"> of history</font><font color="#CCCCCC"> likes you there</font><font color="#E5E5E5"> how can</font>

313
00:10:54,730 --> 00:10:58,540
we improve<font color="#E5E5E5"> that I can reduce amount of</font>

314
00:10:57,310 --> 00:11:02,250
code that<font color="#E5E5E5"> we have to maintain here to</font>

315
00:10:58,540 --> 00:11:02,250
support things<font color="#E5E5E5"> to new operating system</font>

316
00:11:02,730 --> 00:11:06,940
<font color="#E5E5E5">all right what are some other things</font>

317
00:11:04,660 --> 00:11:08,680
that<font color="#E5E5E5"> we have let's talk a little</font><font color="#CCCCCC"> bit</font>

318
00:11:06,940 --> 00:11:10,269
about what the<font color="#E5E5E5"> code looked like within</font>

319
00:11:08,680 --> 00:11:12,180
Windows interpreter and when I was

320
00:11:10,269 --> 00:11:15,250
<font color="#E5E5E5">talking earlier I was talking</font><font color="#CCCCCC"> about</font>

321
00:11:12,180 --> 00:11:17,620
<font color="#E5E5E5">Windows porting from Windows to</font><font color="#CCCCCC"> Linux is</font>

322
00:11:15,250 --> 00:11:19,000
a lot harder<font color="#CCCCCC"> than going</font><font color="#E5E5E5"> from Linux to</font>

323
00:11:17,620 --> 00:11:20,769
Windows and<font color="#E5E5E5"> the reason why that is</font>

324
00:11:19,000 --> 00:11:23,140
<font color="#E5E5E5">because there are a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> interesting</font>

325
00:11:20,769 --> 00:11:24,970
structures within<font color="#CCCCCC"> Windows that just</font>

326
00:11:23,140 --> 00:11:26,140
don't<font color="#E5E5E5"> have Linux equivalents like for</font>

327
00:11:24,970 --> 00:11:28,660
<font color="#E5E5E5">instance there's not really a such thing</font>

328
00:11:26,140 --> 00:11:30,970
as an event handle or even a handle in

329
00:11:28,660 --> 00:11:34,180
the first place<font color="#E5E5E5"> B word doesn't quite</font>

330
00:11:30,970 --> 00:11:35,649
make a lot of<font color="#E5E5E5"> sense</font><font color="#CCCCCC"> in Linux</font><font color="#E5E5E5"> and so you</font>

331
00:11:34,180 --> 00:11:38,349
end up<font color="#E5E5E5"> with all these sort of if not def</font>

332
00:11:35,649 --> 00:11:40,810
win32<font color="#E5E5E5"> where you sort</font><font color="#CCCCCC"> of jack</font><font color="#E5E5E5"> and jam and</font>

333
00:11:38,350 --> 00:11:43,149
a lot of<font color="#E5E5E5"> different constructs that allow</font>

334
00:11:40,810 --> 00:11:44,459
you to<font color="#E5E5E5"> work</font><font color="#CCCCCC"> within</font><font color="#E5E5E5"> Linux this kind of</font>

335
00:11:43,149 --> 00:11:46,420
works but there are some cases<font color="#E5E5E5"> where</font><font color="#CCCCCC"> you</font>

336
00:11:44,459 --> 00:11:49,119
<font color="#CCCCCC">end</font><font color="#E5E5E5"> up with things that just don't match</font>

337
00:11:46,420 --> 00:11:51,910
very well<font color="#E5E5E5"> like for instance on Windows a</font>

338
00:11:49,120 --> 00:11:54,790
socket<font color="#E5E5E5"> and a handle are the same size on</font>

339
00:11:51,910 --> 00:11:57,160
Linux<font color="#E5E5E5"> they're different</font><font color="#CCCCCC"> sizes so</font>

340
00:11:54,790 --> 00:11:59,170
obviously you can't say an integer<font color="#CCCCCC"> works</font>

341
00:11:57,160 --> 00:12:00,610
for both<font color="#E5E5E5"> of them and in fact that was</font>

342
00:11:59,170 --> 00:12:02,290
<font color="#CCCCCC">one of</font><font color="#E5E5E5"> the reasons why we were able to</font>

343
00:12:00,610 --> 00:12:04,180
get 64 bits running on Linux<font color="#E5E5E5"> for a long</font>

344
00:12:02,290 --> 00:12:05,550
time<font color="#E5E5E5"> was</font><font color="#CCCCCC"> because we basically had</font><font color="#E5E5E5"> this</font>

345
00:12:04,180 --> 00:12:08,500
<font color="#E5E5E5">sort of fundamental</font><font color="#CCCCCC"> type mismatch</font>

346
00:12:05,550 --> 00:12:09,880
<font color="#E5E5E5">throughout the entire system obviously</font>

347
00:12:08,500 --> 00:12:11,589
you lose a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> other data to where</font>

348
00:12:09,880 --> 00:12:14,620
you sort of try<font color="#E5E5E5"> to pretend that yeah</font>

349
00:12:11,589 --> 00:12:16,120
<font color="#CCCCCC">Ian valve which is a POSIX</font><font color="#E5E5E5"> error code</font>

350
00:12:14,620 --> 00:12:18,130
matches<font color="#E5E5E5"> all these different windows</font>

351
00:12:16,120 --> 00:12:19,630
<font color="#E5E5E5">error codes</font><font color="#CCCCCC"> so we want</font><font color="#E5E5E5"> to come with</font>

352
00:12:18,130 --> 00:12:21,699
<font color="#CCCCCC">something that would work more natively</font>

353
00:12:19,630 --> 00:12:24,490
<font color="#CCCCCC">and then thus be more portable</font><font color="#E5E5E5"> to a lot</font>

354
00:12:21,699 --> 00:12:26,349
<font color="#E5E5E5">of different systems to</font><font color="#CCCCCC"> sort of</font><font color="#E5E5E5"> give you</font>

355
00:12:24,490 --> 00:12:28,240
<font color="#CCCCCC">kind of</font><font color="#E5E5E5"> an idea</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> how sort of this</font>

356
00:12:26,350 --> 00:12:30,370
<font color="#CCCCCC">sort of macro cheating can can be</font><font color="#E5E5E5"> used</font>

357
00:12:28,240 --> 00:12:33,430
in really weird ways

358
00:12:30,370 --> 00:12:35,980
<font color="#CCCCCC">a picture of a</font><font color="#E5E5E5"> bourne shell code because</font>

359
00:12:33,430 --> 00:12:37,540
it were used like<font color="#CCCCCC"> a shell before</font><font color="#E5E5E5"> this is</font>

360
00:12:35,980 --> 00:12:39,130
<font color="#E5E5E5">how the original Bourne shell worked</font>

361
00:12:37,540 --> 00:12:42,010
<font color="#CCCCCC">we're</font><font color="#E5E5E5"> basically the author didn't want</font>

362
00:12:39,130 --> 00:12:43,779
to port it from<font color="#CCCCCC"> a pl instead you</font>

363
00:12:42,010 --> 00:12:46,689
basically<font color="#E5E5E5"> wrote</font><font color="#CCCCCC"> your macros and this is</font>

364
00:12:43,779 --> 00:12:48,490
actually C code<font color="#E5E5E5"> you</font><font color="#CCCCCC"> think C Co before</font>

365
00:12:46,690 --> 00:12:50,350
you know<font color="#E5E5E5"> that this is a rather</font><font color="#CCCCCC"> odd that</font>

366
00:12:48,490 --> 00:12:53,440
you have like a rep and<font color="#E5E5E5"> a per statement</font>

367
00:12:50,350 --> 00:12:55,480
and you have this and<font color="#CCCCCC"> fie and that's</font>

368
00:12:53,440 --> 00:12:57,430
just<font color="#CCCCCC"> because you know macros is really</font>

369
00:12:55,480 --> 00:13:00,220
aren't a great<font color="#E5E5E5"> way to</font><font color="#CCCCCC"> you know write</font>

370
00:12:57,430 --> 00:13:02,589
understandable goat<font color="#CCCCCC"> so the obvious</font>

371
00:13:00,220 --> 00:13:03,640
conclusion<font color="#E5E5E5"> is well not we have seven</font>

372
00:13:02,589 --> 00:13:07,230
meterpreter so let's create an<font color="#E5E5E5"> eighth</font>

373
00:13:03,640 --> 00:13:09,819
one so you reach that conclusion right

374
00:13:07,230 --> 00:13:11,020
<font color="#CCCCCC">but obviously we should never do this</font>

375
00:13:09,820 --> 00:13:13,420
<font color="#CCCCCC">this is</font><font color="#E5E5E5"> awful</font>

376
00:13:11,020 --> 00:13:15,370
this is an article<font color="#E5E5E5"> from 2000 actually</font>

377
00:13:13,420 --> 00:13:16,839
the year 2000<font color="#E5E5E5"> from Joel and software now</font>

378
00:13:15,370 --> 00:13:18,670
since then<font color="#E5E5E5"> people kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> you know</font>

379
00:13:16,839 --> 00:13:19,839
<font color="#E5E5E5">soften on the stance and thought well</font>

380
00:13:18,670 --> 00:13:21,729
you know maybe<font color="#CCCCCC"> we should</font><font color="#E5E5E5"> rewrite</font>

381
00:13:19,839 --> 00:13:24,160
software but basically I didn't want to

382
00:13:21,730 --> 00:13:26,320
create<font color="#E5E5E5"> another Netscape 6 that</font><font color="#CCCCCC"> oh and</font>

383
00:13:24,160 --> 00:13:28,569
basically work on<font color="#E5E5E5"> this forever and never</font>

384
00:13:26,320 --> 00:13:30,130
actually<font color="#E5E5E5"> ship because again six hundred</font>

385
00:13:28,570 --> 00:13:31,990
thousand lines of code<font color="#CCCCCC"> how</font><font color="#E5E5E5"> it can ever</font>

386
00:13:30,130 --> 00:13:34,480
catch up with that<font color="#CCCCCC"> that's kind of crazy</font>

387
00:13:31,990 --> 00:13:36,070
<font color="#CCCCCC">so as Joel would say this can be the</font>

388
00:13:34,480 --> 00:13:38,260
single<font color="#E5E5E5"> worst strategic mistake any</font>

389
00:13:36,070 --> 00:13:40,420
software company can make well not

390
00:13:38,260 --> 00:13:42,279
<font color="#CCCCCC">necessarily</font><font color="#E5E5E5"> a you know particularly</font><font color="#CCCCCC"> top</font>

391
00:13:40,420 --> 00:13:45,880
<font color="#E5E5E5">a company but hey if you just do it for</font>

392
00:13:42,279 --> 00:13:48,220
<font color="#E5E5E5">fun can it</font><font color="#CCCCCC"> really be a mistake alright</font>

393
00:13:45,880 --> 00:13:50,020
<font color="#E5E5E5">so why would we want enough interpreter</font>

394
00:13:48,220 --> 00:13:51,430
<font color="#E5E5E5">other than just like</font><font color="#CCCCCC"> the code alright we</font>

395
00:13:50,020 --> 00:13:53,230
wanted to be smaller<font color="#CCCCCC"> one to be more</font>

396
00:13:51,430 --> 00:13:55,180
portable once the more stable<font color="#CCCCCC"> which is a</font>

397
00:13:53,230 --> 00:13:56,890
big problem<font color="#CCCCCC"> if you sold 32-bit Linux</font>

398
00:13:55,180 --> 00:13:58,750
interpreter you<font color="#E5E5E5"> call</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> notice that</font>

399
00:13:56,890 --> 00:14:01,209
crashes illegally<font color="#E5E5E5"> we wanted to be</font>

400
00:13:58,750 --> 00:14:05,890
maintainable<font color="#E5E5E5"> but does anyone really need</font>

401
00:14:01,209 --> 00:14:07,779
it<font color="#E5E5E5"> and here's what basically allowed us</font>

402
00:14:05,890 --> 00:14:09,580
to<font color="#E5E5E5"> find that need why did someone</font>

403
00:14:07,779 --> 00:14:12,270
actually need it I started<font color="#E5E5E5"> working with</font>

404
00:14:09,580 --> 00:14:14,950
Joshua Drake<font color="#E5E5E5"> last year around this</font><font color="#CCCCCC"> time</font>

405
00:14:12,270 --> 00:14:17,890
and he came up<font color="#CCCCCC"> to me and said hey</font><font color="#E5E5E5"> you</font>

406
00:14:14,950 --> 00:14:18,970
know I you know someone for<font color="#CCCCCC"> stage fright</font>

407
00:14:17,890 --> 00:14:20,199
was<font color="#CCCCCC"> a big thing everyone was worried</font>

408
00:14:18,970 --> 00:14:21,700
about you know all I<font color="#CCCCCC"> just sent a text</font>

409
00:14:20,200 --> 00:14:24,100
<font color="#CCCCCC">message I get</font><font color="#E5E5E5"> full</font><font color="#CCCCCC"> control of</font><font color="#E5E5E5"> your</font>

410
00:14:21,700 --> 00:14:26,440
Android device<font color="#CCCCCC"> and</font><font color="#E5E5E5"> that was a great</font>

411
00:14:24,100 --> 00:14:29,860
story<font color="#E5E5E5"> but the</font><font color="#CCCCCC"> role</font>

412
00:14:26,440 --> 00:14:32,860
real reality<font color="#CCCCCC"> behind it was Android X had</font>

413
00:14:29,860 --> 00:14:34,930
some pretty good<font color="#E5E5E5"> navigations even though</font>

414
00:14:32,860 --> 00:14:38,080
you could run code directly within the

415
00:14:34,930 --> 00:14:40,199
the media server process<font color="#CCCCCC"> it was</font><font color="#E5E5E5"> actually</font>

416
00:14:38,080 --> 00:14:43,200
pretty locked down in a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> scenarios</font>

417
00:14:40,200 --> 00:14:45,120
was turned on<font color="#E5E5E5"> you couldn't do a fork you</font>

418
00:14:43,200 --> 00:14:46,380
couldn't do an exit<font color="#CCCCCC"> you can't do a</font><font color="#E5E5E5"> whole</font>

419
00:14:45,120 --> 00:14:47,580
<font color="#E5E5E5">lot</font><font color="#CCCCCC"> of things that you do with just your</font>

420
00:14:46,380 --> 00:14:49,920
normal little<font color="#E5E5E5"> bits of shelf</font><font color="#CCCCCC"> up or</font>

421
00:14:47,580 --> 00:14:51,420
basically<font color="#E5E5E5"> you</font><font color="#CCCCCC"> spawn</font><font color="#E5E5E5"> reverse</font><font color="#CCCCCC"> shell and</font>

422
00:14:49,920 --> 00:14:54,300
<font color="#CCCCCC">you get a reverse prompt and you know</font>

423
00:14:51,420 --> 00:14:56,520
you can do whatever<font color="#E5E5E5"> so so basically you</font>

424
00:14:54,300 --> 00:14:58,560
know<font color="#CCCCCC"> Josh said you know I had to do like</font>

425
00:14:56,520 --> 00:15:00,420
<font color="#CCCCCC">Colonel</font><font color="#E5E5E5"> exploits on top of this in order</font>

426
00:14:58,560 --> 00:15:02,489
<font color="#CCCCCC">to get past se 1x</font><font color="#E5E5E5"> and then it you know</font>

427
00:15:00,420 --> 00:15:03,750
it's<font color="#E5E5E5"> not reliable and I've got all this</font>

428
00:15:02,490 --> 00:15:05,130
<font color="#E5E5E5">extra sort of who plot to go through I</font>

429
00:15:03,750 --> 00:15:06,540
just<font color="#CCCCCC"> want to build exploit stage fright</font>

430
00:15:05,130 --> 00:15:08,730
and<font color="#CCCCCC"> how</font><font color="#E5E5E5"> how</font><font color="#CCCCCC"> can I do it how</font><font color="#E5E5E5"> can you help</font>

431
00:15:06,540 --> 00:15:10,530
<font color="#E5E5E5">me and so what we</font><font color="#CCCCCC"> basically came</font><font color="#E5E5E5"> up was</font>

432
00:15:08,730 --> 00:15:12,210
is like how can<font color="#CCCCCC"> we</font><font color="#E5E5E5"> actually inject</font>

433
00:15:10,530 --> 00:15:14,220
meterpreter straight into the<font color="#E5E5E5"> video</font>

434
00:15:12,210 --> 00:15:15,420
<font color="#CCCCCC">server process and do it in</font><font color="#E5E5E5"> such a way</font>

435
00:15:14,220 --> 00:15:16,830
<font color="#CCCCCC">that we</font><font color="#E5E5E5"> never have to actually fork</font>

436
00:15:15,420 --> 00:15:19,050
anything<font color="#E5E5E5"> we never</font><font color="#CCCCCC"> have to write it from</font>

437
00:15:16,830 --> 00:15:20,310
the<font color="#E5E5E5"> disk and we never have to you know</font>

438
00:15:19,050 --> 00:15:22,290
basically<font color="#E5E5E5"> do all the things that</font><font color="#CCCCCC"> SELinux</font>

439
00:15:20,310 --> 00:15:25,439
is looking for so basically how do we

440
00:15:22,290 --> 00:15:27,199
fly under the<font color="#E5E5E5"> under</font><font color="#CCCCCC"> the radar and</font><font color="#E5E5E5"> of</font>

441
00:15:25,440 --> 00:15:29,280
course it's going<font color="#E5E5E5"> to be easy right</font>

442
00:15:27,200 --> 00:15:31,650
<font color="#CCCCCC">luckily I've got some really smart</font>

443
00:15:29,280 --> 00:15:34,589
people<font color="#CCCCCC"> that work with me</font><font color="#E5E5E5"> here and and</font>

444
00:15:31,650 --> 00:15:35,730
obviously<font color="#E5E5E5"> you know porting software to a</font>

445
00:15:34,590 --> 00:15:37,980
lot of<font color="#E5E5E5"> different</font><font color="#CCCCCC"> systems is really easy</font>

446
00:15:35,730 --> 00:15:39,810
as<font color="#E5E5E5"> well</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> fact this is actually a few</font>

447
00:15:37,980 --> 00:15:40,860
things that you know I poured<font color="#E5E5E5"> it</font>

448
00:15:39,810 --> 00:15:43,319
software to in the past

449
00:15:40,860 --> 00:15:44,790
now<font color="#CCCCCC"> of course past</font><font color="#E5E5E5"> isn't</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> you're</font>

450
00:15:43,320 --> 00:15:47,010
<font color="#E5E5E5">going to indicate what the future</font><font color="#CCCCCC"> will</font>

451
00:15:44,790 --> 00:15:49,520
be like but it's<font color="#CCCCCC"> feeling</font><font color="#E5E5E5"> kind of cocky</font>

452
00:15:47,010 --> 00:15:51,840
and<font color="#CCCCCC"> you feel like a this will be easy</font>

453
00:15:49,520 --> 00:15:53,670
<font color="#CCCCCC">talked a little</font><font color="#E5E5E5"> bit</font><font color="#CCCCCC"> about kind of my</font>

454
00:15:51,840 --> 00:15:55,980
<font color="#E5E5E5">first efforts at building something</font><font color="#CCCCCC"> like</font>

455
00:15:53,670 --> 00:15:57,540
this when I worked<font color="#CCCCCC"> at breaking point yet</font>

456
00:15:55,980 --> 00:15:59,910
again<font color="#CCCCCC"> talking with HD and working with</font>

457
00:15:57,540 --> 00:16:01,290
<font color="#CCCCCC">Metasploit I worked at you know we</font>

458
00:15:59,910 --> 00:16:02,699
basically<font color="#E5E5E5"> build our own custom hardware</font>

459
00:16:01,290 --> 00:16:05,370
and it's sexy<font color="#E5E5E5"> what the thing looked</font><font color="#CCCCCC"> like</font>

460
00:16:02,700 --> 00:16:07,050
<font color="#E5E5E5">it's pretty pretty cool designed to sort</font>

461
00:16:05,370 --> 00:16:09,060
<font color="#CCCCCC">of you</font><font color="#E5E5E5"> know at least people take notice</font>

462
00:16:07,050 --> 00:16:13,140
of<font color="#E5E5E5"> it in the data center but it had</font>

463
00:16:09,060 --> 00:16:16,890
PowerPC<font color="#CCCCCC"> head arm and had x86</font><font color="#E5E5E5"> at FPGA</font>

464
00:16:13,140 --> 00:16:19,760
<font color="#E5E5E5">that have weird micro</font><font color="#CCCCCC"> coated CPUs</font><font color="#E5E5E5"> and we</font>

465
00:16:16,890 --> 00:16:21,930
got all to run under<font color="#CCCCCC"> a single</font><font color="#E5E5E5"> tool chain</font>

466
00:16:19,760 --> 00:16:24,060
right I don't<font color="#E5E5E5"> know if you guys have ever</font>

467
00:16:21,930 --> 00:16:25,770
built<font color="#E5E5E5"> a full chain before but it can be</font>

468
00:16:24,060 --> 00:16:27,719
really tricky<font color="#E5E5E5"> and back in those</font><font color="#CCCCCC"> days you</font>

469
00:16:25,770 --> 00:16:30,180
<font color="#CCCCCC">had to</font><font color="#E5E5E5"> patch the heck out of GCC and</font><font color="#CCCCCC"> Lib</font>

470
00:16:27,720 --> 00:16:32,130
<font color="#E5E5E5">CD and everything else and so</font><font color="#CCCCCC"> you know</font>

471
00:16:30,180 --> 00:16:39,359
kind of a good experience<font color="#E5E5E5"> and then</font>

472
00:16:32,130 --> 00:16:41,130
moving on to stop that<font color="#CCCCCC"> you know the</font>

473
00:16:39,360 --> 00:16:43,320
<font color="#E5E5E5">modern world</font><font color="#CCCCCC"> you know 2005</font><font color="#E5E5E5"> was a long</font>

474
00:16:41,130 --> 00:16:45,150
time<font color="#E5E5E5"> ago everything sort of moved on</font><font color="#CCCCCC"> but</font>

475
00:16:43,320 --> 00:16:46,260
hey look<font color="#CCCCCC"> there's this</font><font color="#E5E5E5"> great tool</font><font color="#CCCCCC"> chain</font>

476
00:16:45,150 --> 00:16:47,189
out there called the embedded<font color="#CCCCCC"> pilot</font>

477
00:16:46,260 --> 00:16:49,860
collection it<font color="#E5E5E5"> could build for Windows</font>

478
00:16:47,190 --> 00:16:51,480
<font color="#E5E5E5">for</font><font color="#CCCCCC"> Mac's for Linux everything it'll</font>

479
00:16:49,860 --> 00:16:52,600
<font color="#CCCCCC">work perfectly</font><font color="#E5E5E5"> let's try for stage</font>

480
00:16:51,480 --> 00:16:56,889
fright and it

481
00:16:52,600 --> 00:16:58,389
work<font color="#E5E5E5"> why because to do exploitation you</font>

482
00:16:56,889 --> 00:17:01,060
have to do even<font color="#CCCCCC"> more than just getting</font>

483
00:16:58,389 --> 00:17:02,740
<font color="#E5E5E5">it to build what do you need to actually</font>

484
00:17:01,060 --> 00:17:05,230
<font color="#E5E5E5">build a payload that can</font><font color="#CCCCCC"> actually use</font>

485
00:17:02,740 --> 00:17:06,370
<font color="#E5E5E5">their exploitation</font><font color="#CCCCCC"> and it's not just a</font>

486
00:17:05,230 --> 00:17:08,169
<font color="#E5E5E5">matter of functionality it's a matter of</font>

487
00:17:06,369 --> 00:17:10,989
some other<font color="#E5E5E5"> things one it has to be</font>

488
00:17:08,169 --> 00:17:12,250
relocatable<font color="#E5E5E5"> meaning</font><font color="#CCCCCC"> that the code</font><font color="#E5E5E5"> has to</font>

489
00:17:10,990 --> 00:17:14,410
<font color="#E5E5E5">be able to run anywhere within memory</font>

490
00:17:12,250 --> 00:17:15,640
<font color="#CCCCCC">you can't rely on the operating</font><font color="#E5E5E5"> system</font>

491
00:17:14,410 --> 00:17:16,809
<font color="#E5E5E5">putting it in right place because you're</font>

492
00:17:15,640 --> 00:17:18,400
basically<font color="#E5E5E5"> subverting the operating</font>

493
00:17:16,809 --> 00:17:19,510
system<font color="#E5E5E5"> you don't really know where</font>

494
00:17:18,400 --> 00:17:20,980
you're going to be you know<font color="#E5E5E5"> when you're</font>

495
00:17:19,510 --> 00:17:21,699
going<font color="#CCCCCC"> to be it needs to be</font>

496
00:17:20,980 --> 00:17:23,620
<font color="#E5E5E5">self-contained</font>

497
00:17:21,699 --> 00:17:26,260
<font color="#E5E5E5">we want to make sure</font><font color="#CCCCCC"> it can work on an</font>

498
00:17:23,619 --> 00:17:27,908
old you know<font color="#E5E5E5"> device from 10 years ago</font>

499
00:17:26,260 --> 00:17:30,129
make sure it can work on modern things

500
00:17:27,909 --> 00:17:31,720
you've ever<font color="#CCCCCC"> built like some code for for</font>

501
00:17:30,130 --> 00:17:33,429
<font color="#E5E5E5">Linux you know that you know if you</font>

502
00:17:31,720 --> 00:17:35,409
<font color="#E5E5E5">build something</font><font color="#CCCCCC"> onto a bunch of 16:04 it</font>

503
00:17:33,429 --> 00:17:38,280
doesn't work<font color="#E5E5E5"> on a bunch of 1404</font><font color="#CCCCCC"> that's</font>

504
00:17:35,409 --> 00:17:38,280
because it builds<font color="#E5E5E5"> in</font>

505
00:17:40,150 --> 00:17:43,690
see library and other things<font color="#E5E5E5"> needs to</font>

506
00:17:42,610 --> 00:17:44,949
work<font color="#CCCCCC"> on a</font><font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> different architectures</font>

507
00:17:43,690 --> 00:17:46,540
need to work on a<font color="#CCCCCC"> lot different kernels</font>

508
00:17:44,950 --> 00:17:48,700
<font color="#CCCCCC">you want to write an Android</font><font color="#E5E5E5"> exploit</font>

509
00:17:46,540 --> 00:17:50,620
every Android device<font color="#E5E5E5"> is sort of</font><font color="#CCCCCC"> being a</font>

510
00:17:48,700 --> 00:17:52,210
corn because you know every<font color="#CCCCCC"> vendors got</font>

511
00:17:50,620 --> 00:17:53,649
a slightly different kernel<font color="#E5E5E5"> everyone's</font>

512
00:17:52,210 --> 00:17:54,880
got a slightly different<font color="#E5E5E5"> environment</font><font color="#CCCCCC"> how</font>

513
00:17:53,650 --> 00:17:58,810
to make something that's<font color="#CCCCCC"> universal that</font>

514
00:17:54,880 --> 00:17:59,860
works in all<font color="#E5E5E5"> these environments well</font>

515
00:17:58,810 --> 00:18:01,480
let's talk a<font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit about how we</font>

516
00:17:59,860 --> 00:18:02,919
<font color="#E5E5E5">solve that same kind of problem when it</font>

517
00:18:01,480 --> 00:18:04,900
comes<font color="#CCCCCC"> to just shell code</font><font color="#E5E5E5"> what I mean by</font>

518
00:18:02,920 --> 00:18:07,150
shell code would be oftentimes people

519
00:18:04,900 --> 00:18:09,040
<font color="#CCCCCC">write assembly language code that just</font>

520
00:18:07,150 --> 00:18:10,780
<font color="#E5E5E5">does a few simple</font><font color="#CCCCCC"> things like</font><font color="#E5E5E5"> you know</font>

521
00:18:09,040 --> 00:18:13,240
allocating<font color="#E5E5E5"> some memory writing some code</font>

522
00:18:10,780 --> 00:18:16,090
<font color="#E5E5E5">into it</font><font color="#CCCCCC"> you're</font><font color="#E5E5E5"> jumping to that</font><font color="#CCCCCC"> memory</font>

523
00:18:13,240 --> 00:18:18,310
you're going forward<font color="#CCCCCC"> or maybe starting a</font>

524
00:18:16,090 --> 00:18:20,590
socket<font color="#E5E5E5"> running Michelle doing some pipe</font>

525
00:18:18,310 --> 00:18:23,980
redirection and<font color="#E5E5E5"> then you know connecting</font>

526
00:18:20,590 --> 00:18:24,939
things<font color="#E5E5E5"> together</font><font color="#CCCCCC"> what you normally</font><font color="#E5E5E5"> do in</font>

527
00:18:23,980 --> 00:18:26,500
<font color="#CCCCCC">a</font><font color="#E5E5E5"> right shell</font><font color="#CCCCCC"> because you want to</font><font color="#E5E5E5"> also</font>

528
00:18:24,940 --> 00:18:27,460
<font color="#CCCCCC">write</font><font color="#E5E5E5"> in a</font><font color="#CCCCCC"> position independent</font><font color="#E5E5E5"> way</font>

529
00:18:26,500 --> 00:18:29,440
because you<font color="#CCCCCC"> don't know where it's</font><font color="#E5E5E5"> going</font>

530
00:18:27,460 --> 00:18:31,420
to<font color="#E5E5E5"> be injected you might have some sort</font>

531
00:18:29,440 --> 00:18:32,710
of<font color="#CCCCCC"> Knox LED that sort</font><font color="#E5E5E5"> of runs into it it</font>

532
00:18:31,420 --> 00:18:34,090
could be anywhere with the memory so<font color="#E5E5E5"> you</font>

533
00:18:32,710 --> 00:18:36,280
want to make sure<font color="#E5E5E5"> it works in all</font>

534
00:18:34,090 --> 00:18:37,629
different<font color="#E5E5E5"> kinds of scenarios but we</font>

535
00:18:36,280 --> 00:18:39,879
don't want to<font color="#E5E5E5"> write an</font><font color="#CCCCCC"> interpreter in</font>

536
00:18:37,630 --> 00:18:41,320
hand generated assembly code<font color="#CCCCCC"> obviously</font>

537
00:18:39,880 --> 00:18:43,630
<font color="#CCCCCC">that's not going to work so this</font>

538
00:18:41,320 --> 00:18:46,270
solution here was<font color="#E5E5E5"> position independent</font>

539
00:18:43,630 --> 00:18:48,040
executable now typically<font color="#CCCCCC"> positioned in</font>

540
00:18:46,270 --> 00:18:51,870
<font color="#CCCCCC">two executables have the opposite</font>

541
00:18:48,040 --> 00:18:54,790
<font color="#E5E5E5">problems they're not self-contained they</font>

542
00:18:51,870 --> 00:18:56,949
they basically<font color="#E5E5E5"> if</font><font color="#CCCCCC"> you'd ever</font><font color="#E5E5E5"> built like</font>

543
00:18:54,790 --> 00:18:58,840
a shared shared library program<font color="#E5E5E5"> you know</font>

544
00:18:56,950 --> 00:19:01,210
factor that's position<font color="#CCCCCC"> independent so if</font>

545
00:18:58,840 --> 00:19:03,820
you've<font color="#E5E5E5"> ever seen</font><font color="#CCCCCC"> address space layout</font>

546
00:19:01,210 --> 00:19:06,520
randomization<font color="#CCCCCC"> that's due to the</font><font color="#E5E5E5"> fact</font>

547
00:19:03,820 --> 00:19:07,929
<font color="#CCCCCC">that you have position</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> executable</font><font color="#E5E5E5"> how</font>

548
00:19:06,520 --> 00:19:10,150
can we<font color="#E5E5E5"> combine that with what's called</font>

549
00:19:07,930 --> 00:19:11,260
static building which<font color="#CCCCCC"> is</font><font color="#E5E5E5"> where you sort</font>

550
00:19:10,150 --> 00:19:13,090
of glue everything together you have all

551
00:19:11,260 --> 00:19:15,190
the<font color="#CCCCCC"> spin seats built</font><font color="#E5E5E5"> in it turns out</font>

552
00:19:13,090 --> 00:19:16,540
there<font color="#E5E5E5"> was a solution but before I get</font>

553
00:19:15,190 --> 00:19:18,940
<font color="#E5E5E5">into the real solution we'll talk about</font>

554
00:19:16,540 --> 00:19:19,810
some of<font color="#E5E5E5"> the prior art so Windows</font>

555
00:19:18,940 --> 00:19:21,910
<font color="#CCCCCC">interpreter has something called</font>

556
00:19:19,810 --> 00:19:23,169
reflective DLL injection<font color="#CCCCCC"> this is</font>

557
00:19:21,910 --> 00:19:27,250
something pioneered by<font color="#CCCCCC"> Steven fewer</font>

558
00:19:23,170 --> 00:19:28,660
about seven years ago<font color="#CCCCCC"> and basically idea</font>

559
00:19:27,250 --> 00:19:30,580
here is<font color="#CCCCCC"> that you have a little loader</font>

560
00:19:28,660 --> 00:19:33,190
<font color="#CCCCCC">that loads and it can actually sort</font><font color="#E5E5E5"> of</font>

561
00:19:30,580 --> 00:19:34,840
identify all the dependencies<font color="#E5E5E5"> of a</font><font color="#CCCCCC"> dll</font>

562
00:19:33,190 --> 00:19:36,820
and reflectively load all the

563
00:19:34,840 --> 00:19:38,199
dependencies<font color="#E5E5E5"> into a target image so</font>

564
00:19:36,820 --> 00:19:40,600
basically doing all the things the OS

565
00:19:38,200 --> 00:19:43,870
does we do this<font color="#E5E5E5"> directly inside the</font>

566
00:19:40,600 --> 00:19:44,919
<font color="#E5E5E5">program during exploitation</font><font color="#CCCCCC"> limiter also</font>

567
00:19:43,870 --> 00:19:46,750
<font color="#CCCCCC">had</font><font color="#E5E5E5"> something really</font><font color="#CCCCCC"> interesting</font><font color="#E5E5E5"> and</font>

568
00:19:44,920 --> 00:19:49,900
that<font color="#E5E5E5"> it actually</font><font color="#CCCCCC"> embedded a copy of the</font>

569
00:19:46,750 --> 00:19:53,149
<font color="#E5E5E5">Android</font><font color="#CCCCCC"> C library into itself</font><font color="#E5E5E5"> and then</font>

570
00:19:49,900 --> 00:19:55,339
zipped up libraries and then<font color="#CCCCCC"> lengthen</font>

571
00:19:53,149 --> 00:19:58,908
the fly into the memory<font color="#E5E5E5"> image pretty</font>

572
00:19:55,339 --> 00:20:02,359
cool but very limited<font color="#E5E5E5"> to you know just</font>

573
00:19:58,909 --> 00:20:03,950
the architectures you may work on what

574
00:20:02,359 --> 00:20:05,418
did we do to<font color="#E5E5E5"> actually solve this problem</font>

575
00:20:03,950 --> 00:20:07,989
<font color="#CCCCCC">we actually found</font><font color="#E5E5E5"> that someone had</font>

576
00:20:05,419 --> 00:20:10,460
<font color="#CCCCCC">already solved</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> for us but not</font><font color="#E5E5E5"> because</font>

577
00:20:07,989 --> 00:20:12,229
it was something<font color="#CCCCCC"> that they</font><font color="#E5E5E5"> wanted to do</font>

578
00:20:10,460 --> 00:20:18,019
for<font color="#CCCCCC"> exploitation</font><font color="#E5E5E5"> it was because</font>

579
00:20:12,229 --> 00:20:20,029
something<font color="#CCCCCC"> that allowed basically images</font>

580
00:20:18,019 --> 00:20:22,009
to<font color="#CCCCCC"> be built in a more secure fashion</font><font color="#E5E5E5"> so</font>

581
00:20:20,029 --> 00:20:23,869
the idea normally with<font color="#E5E5E5"> the static images</font>

582
00:20:22,009 --> 00:20:24,950
is that<font color="#CCCCCC"> you had</font><font color="#E5E5E5"> just have all your</font>

583
00:20:23,869 --> 00:20:27,408
dependencies<font color="#CCCCCC"> aliy together in their own</font>

584
00:20:24,950 --> 00:20:30,830
fixed fixed offsets<font color="#E5E5E5"> what if we were to</font>

585
00:20:27,409 --> 00:20:33,349
take the shared loader<font color="#E5E5E5"> append it to a</font>

586
00:20:30,830 --> 00:20:34,999
bunch<font color="#E5E5E5"> of shared libraries and sort of</font>

587
00:20:33,349 --> 00:20:36,859
glue<font color="#E5E5E5"> that all together</font><font color="#CCCCCC"> into sort</font><font color="#E5E5E5"> of</font>

588
00:20:34,999 --> 00:20:39,529
something<font color="#E5E5E5"> that looks like</font><font color="#CCCCCC"> to the kernel</font>

589
00:20:36,859 --> 00:20:41,629
<font color="#E5E5E5">like it's a static image</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> you really</font>

590
00:20:39,529 --> 00:20:43,519
have it sort of<font color="#E5E5E5"> relocated itself in</font>

591
00:20:41,629 --> 00:20:45,080
memory<font color="#E5E5E5"> that's basically the</font><font color="#CCCCCC"> way to solve</font>

592
00:20:43,519 --> 00:20:47,149
the problem and<font color="#E5E5E5"> we actually</font><font color="#CCCCCC"> have a</font>

593
00:20:45,080 --> 00:20:48,949
magical tool chain that<font color="#E5E5E5"> solves that does</font>

594
00:20:47,149 --> 00:20:51,199
this<font color="#E5E5E5"> off for us but that's not quite</font>

595
00:20:48,950 --> 00:20:53,690
<font color="#CCCCCC">enough if</font><font color="#E5E5E5"> we want to use some of this</font>

596
00:20:51,200 --> 00:20:55,820
off the<font color="#E5E5E5"> shelf</font><font color="#CCCCCC"> it assumes that if</font>

597
00:20:53,690 --> 00:20:57,409
<font color="#E5E5E5">everyone from the kernel so basically</font>

598
00:20:55,820 --> 00:21:00,619
the Linux kernel actually<font color="#E5E5E5"> did all</font><font color="#CCCCCC"> the</font>

599
00:20:57,409 --> 00:21:02,330
<font color="#CCCCCC">setup to to get the payload</font><font color="#E5E5E5"> running how</font>

600
00:21:00,619 --> 00:21:04,339
do we pretend that<font color="#E5E5E5"> the Linux</font><font color="#CCCCCC"> kernel is</font>

601
00:21:02,330 --> 00:21:07,519
doing that<font color="#E5E5E5"> without writing our own</font>

602
00:21:04,339 --> 00:21:08,418
loader from scratch<font color="#E5E5E5"> the answer is and</font>

603
00:21:07,519 --> 00:21:13,849
I'm<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> treat you guys can actually</font>

604
00:21:08,419 --> 00:21:15,559
<font color="#CCCCCC">see this</font><font color="#E5E5E5"> they did super tiny</font><font color="#CCCCCC"> ok yeah</font><font color="#E5E5E5"> so</font>

605
00:21:13,849 --> 00:21:17,269
the answer<font color="#CCCCCC"> here is uh you guys</font><font color="#E5E5E5"> know</font><font color="#CCCCCC"> that</font>

606
00:21:15,559 --> 00:21:21,229
much about<font color="#E5E5E5"> how the one external loads of</font>

607
00:21:17,269 --> 00:21:24,049
process<font color="#CCCCCC"> alright so the</font><font color="#E5E5E5"> idea</font><font color="#CCCCCC"> here is</font><font color="#E5E5E5"> that</font>

608
00:21:21,229 --> 00:21:28,279
the Porter Linux kernel<font color="#CCCCCC"> sets when</font>

609
00:21:24,049 --> 00:21:29,859
setting up a process<font color="#E5E5E5"> to run basically it</font>

610
00:21:28,279 --> 00:21:32,269
sets up what we call<font color="#E5E5E5"> the initial stack</font>

611
00:21:29,859 --> 00:21:34,218
that<font color="#E5E5E5"> stack contains all the stuff</font><font color="#CCCCCC"> that</font>

612
00:21:32,269 --> 00:21:35,330
the program needs<font color="#E5E5E5"> to know how to run in</font>

613
00:21:34,219 --> 00:21:37,369
its environment<font color="#E5E5E5"> like for instance you</font>

614
00:21:35,330 --> 00:21:39,199
<font color="#E5E5E5">type any command line arguments to a</font>

615
00:21:37,369 --> 00:21:40,908
program<font color="#E5E5E5"> those will all be pushed onto</font>

616
00:21:39,200 --> 00:21:42,979
<font color="#E5E5E5">the stack</font><font color="#CCCCCC"> so the stack will have how</font>

617
00:21:40,909 --> 00:21:45,229
<font color="#CCCCCC">many arguments there are</font><font color="#E5E5E5"> it'll have a</font>

618
00:21:42,979 --> 00:21:48,440
bunch of strings that<font color="#E5E5E5"> point to each of</font>

619
00:21:45,229 --> 00:21:50,529
the arguments<font color="#CCCCCC"> it'll also have a bunch of</font>

620
00:21:48,440 --> 00:21:53,119
other<font color="#CCCCCC"> things called</font><font color="#E5E5E5"> the auxiliary vector</font>

621
00:21:50,529 --> 00:21:54,469
and of course the<font color="#E5E5E5"> environment as</font><font color="#CCCCCC"> well a</font>

622
00:21:53,119 --> 00:21:56,089
lot of<font color="#CCCCCC"> different stuff gets pushed into</font>

623
00:21:54,469 --> 00:21:57,739
the<font color="#E5E5E5"> stack</font><font color="#CCCCCC"> so the auxiliary</font><font color="#E5E5E5"> vector is</font>

624
00:21:56,089 --> 00:22:00,918
interesting in that it<font color="#CCCCCC"> contains things</font>

625
00:21:57,739 --> 00:22:02,509
<font color="#CCCCCC">like where you should load what it also</font>

626
00:22:00,919 --> 00:22:03,179
<font color="#E5E5E5">same things like random number</font>

627
00:22:02,509 --> 00:22:05,129
generators

628
00:22:03,179 --> 00:22:07,139
and other stuff<font color="#CCCCCC"> like</font><font color="#E5E5E5"> that it's basically</font>

629
00:22:05,129 --> 00:22:10,439
extra information<font color="#E5E5E5"> my</font><font color="#CCCCCC"> webmaster</font><font color="#E5E5E5"> program</font>

630
00:22:07,139 --> 00:22:12,718
report runs<font color="#E5E5E5"> what we do basically</font><font color="#CCCCCC"> is we</font>

631
00:22:10,440 --> 00:22:14,700
pretend that<font color="#E5E5E5"> we</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> the likes</font><font color="#CCCCCC"> colonel in</font>

632
00:22:12,719 --> 00:22:16,440
our<font color="#CCCCCC"> shellcode</font><font color="#E5E5E5"> and we basically set up</font>

633
00:22:14,700 --> 00:22:18,809
<font color="#E5E5E5">the stack exactly how the lines</font><font color="#CCCCCC"> Colonel</font>

634
00:22:16,440 --> 00:22:21,570
<font color="#E5E5E5">would do it and by</font><font color="#CCCCCC"> doing that we're able</font>

635
00:22:18,809 --> 00:22:24,509
to<font color="#E5E5E5"> basically leverage existing you know</font>

636
00:22:21,570 --> 00:22:27,299
compiler and loader infrastructure in a

637
00:22:24,509 --> 00:22:30,450
<font color="#CCCCCC">way that is now offensive rather than</font>

638
00:22:27,299 --> 00:22:32,009
defensive<font color="#E5E5E5"> so it's pretty nifty</font><font color="#CCCCCC"> if you</font>

639
00:22:30,450 --> 00:22:33,149
guys want to you know<font color="#CCCCCC"> afterwards I can</font>

640
00:22:32,009 --> 00:22:35,369
<font color="#E5E5E5">show you some of the code in the</font>

641
00:22:33,149 --> 00:22:37,678
<font color="#CCCCCC">definite</font><font color="#E5E5E5"> how it works</font><font color="#CCCCCC"> the other</font><font color="#E5E5E5"> cool</font>

642
00:22:35,369 --> 00:22:40,529
thing about<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> that a lot of</font><font color="#E5E5E5"> OS is</font>

643
00:22:37,679 --> 00:22:44,779
use this exact same mechanism<font color="#CCCCCC"> Linux</font>

644
00:22:40,529 --> 00:22:47,999
<font color="#E5E5E5">every single BSD OpenBSD FreeBSD NetBSD</font>

645
00:22:44,779 --> 00:22:49,169
<font color="#CCCCCC">ax</font><font color="#E5E5E5"> hqx</font><font color="#CCCCCC"> Solaris they all use basically</font>

646
00:22:47,999 --> 00:22:51,239
<font color="#CCCCCC">the exact same</font><font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of stacked</font>

647
00:22:49,169 --> 00:22:52,739
infrastructure now every one requires a

648
00:22:51,239 --> 00:22:54,719
little<font color="#CCCCCC"> bit of variation</font>

649
00:22:52,739 --> 00:22:56,219
like for instance<font color="#CCCCCC"> mips on linux requires</font>

650
00:22:54,719 --> 00:22:58,169
some extra<font color="#CCCCCC"> things</font><font color="#E5E5E5"> push them to the stack</font>

651
00:22:56,219 --> 00:22:59,129
but it's kind of a<font color="#E5E5E5"> little bit of trial</font>

652
00:22:58,169 --> 00:23:01,109
<font color="#E5E5E5">and error</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can sort</font><font color="#CCCCCC"> of figure out</font>

653
00:22:59,129 --> 00:23:03,449
exactly what<font color="#E5E5E5"> everything needs to work</font>

654
00:23:01,109 --> 00:23:04,830
and suddenly<font color="#CCCCCC"> you have</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> universal loader</font>

655
00:23:03,450 --> 00:23:08,059
<font color="#CCCCCC">that works on every linux and</font>

656
00:23:04,830 --> 00:23:13,619
potentially every other OS as well

657
00:23:08,059 --> 00:23:15,749
<font color="#E5E5E5">sumikko again like I</font><font color="#CCCCCC"> said a lot of</font>

658
00:23:13,619 --> 00:23:17,609
<font color="#E5E5E5">people use elf as a base format which</font>

659
00:23:15,749 --> 00:23:20,759
means<font color="#CCCCCC"> if we target</font><font color="#E5E5E5"> elf we get a lot</font><font color="#CCCCCC"> of</font>

660
00:23:17,609 --> 00:23:22,649
bang for the buck<font color="#CCCCCC"> in addition that this</font>

661
00:23:20,759 --> 00:23:25,229
sort<font color="#E5E5E5"> of static</font><font color="#CCCCCC"> PI</font><font color="#E5E5E5"> stack position an</font>

662
00:23:22,649 --> 00:23:27,178
executable mechanism<font color="#CCCCCC"> it's X has been</font>

663
00:23:25,229 --> 00:23:29,099
<font color="#E5E5E5">open BC since five to seven so it's a</font>

664
00:23:27,179 --> 00:23:30,479
great way to<font color="#E5E5E5"> actually package portable</font>

665
00:23:29,099 --> 00:23:33,299
<font color="#E5E5E5">shell code if you can</font><font color="#CCCCCC"> actually exploit</font>

666
00:23:30,479 --> 00:23:34,950
it into open<font color="#CCCCCC"> BSD if you really want to a</font>

667
00:23:33,299 --> 00:23:36,869
few other Linux distributions like

668
00:23:34,950 --> 00:23:40,919
<font color="#CCCCCC">alpine Linux our</font><font color="#E5E5E5"> face completely around</font>

669
00:23:36,869 --> 00:23:43,080
<font color="#CCCCCC">this concept solaris doesn't</font><font color="#E5E5E5"> even have</font>

670
00:23:40,919 --> 00:23:44,879
static<font color="#E5E5E5"> linking</font><font color="#CCCCCC"> so you can actually build</font>

671
00:23:43,080 --> 00:23:46,320
<font color="#E5E5E5">a just a normal</font><font color="#CCCCCC"> program and it</font><font color="#E5E5E5"> just</font>

672
00:23:44,879 --> 00:23:50,369
works everywhere<font color="#E5E5E5"> on solaris it's really</font>

673
00:23:46,320 --> 00:23:54,479
great<font color="#CCCCCC"> and when it</font><font color="#E5E5E5"> comes to like sort of</font>

674
00:23:50,369 --> 00:23:55,559
the more obscure systems<font color="#E5E5E5"> sometimes we</font>

675
00:23:54,479 --> 00:23:57,989
can load<font color="#CCCCCC"> them to</font><font color="#E5E5E5"> memory sometimes we</font>

676
00:23:55,559 --> 00:23:59,039
can't<font color="#E5E5E5"> but in a lot of cases it's one of</font>

677
00:23:57,989 --> 00:24:00,690
those cases where you just don't<font color="#E5E5E5"> care</font>

678
00:23:59,039 --> 00:24:02,249
<font color="#CCCCCC">because no one's really</font><font color="#E5E5E5"> monitoring the</font>

679
00:24:00,690 --> 00:24:04,169
file systems on like some embedded<font color="#CCCCCC"> iron</font>

680
00:24:02,249 --> 00:24:06,089
<font color="#CCCCCC">systems that's</font><font color="#E5E5E5"> just kind of the fact of</font>

681
00:24:04,169 --> 00:24:07,259
the matter what are some other<font color="#E5E5E5"> ways we</font>

682
00:24:06,089 --> 00:24:08,369
can<font color="#E5E5E5"> load things into memory and this is</font>

683
00:24:07,259 --> 00:24:10,979
stuff<font color="#CCCCCC"> that we're working on as well to</font>

684
00:24:08,369 --> 00:24:14,309
<font color="#CCCCCC">make these people</font><font color="#E5E5E5"> build inject very</font>

685
00:24:10,979 --> 00:24:15,130
pretty much anywhere<font color="#CCCCCC"> mac</font><font color="#E5E5E5"> OS</font><font color="#CCCCCC"> x is it kind</font>

686
00:24:14,309 --> 00:24:16,720
of interesting

687
00:24:15,130 --> 00:24:18,040
<font color="#CCCCCC">beasts</font><font color="#E5E5E5"> there's a lot of stuff</font><font color="#CCCCCC"> you have</font>

688
00:24:16,720 --> 00:24:20,020
<font color="#CCCCCC">to do sort</font><font color="#E5E5E5"> of build your own loader and</font>

689
00:24:18,040 --> 00:24:21,610
linker but actually due to<font color="#E5E5E5"> some</font>

690
00:24:20,020 --> 00:24:25,389
innovations that have happened<font color="#E5E5E5"> lately</font>

691
00:24:21,610 --> 00:24:27,820
<font color="#CCCCCC">with OSX is actually getting easier to</font>

692
00:24:25,390 --> 00:24:30,280
load things<font color="#E5E5E5"> dynamically into into memory</font>

693
00:24:27,820 --> 00:24:32,679
<font color="#E5E5E5">in fact there's some great research from</font>

694
00:24:30,280 --> 00:24:34,180
<font color="#CCCCCC">steppin Archibald from silence that</font>

695
00:24:32,680 --> 00:24:35,740
basically goes<font color="#E5E5E5"> through how you would do</font>

696
00:24:34,180 --> 00:24:37,360
<font color="#E5E5E5">this and we were actually in the</font><font color="#CCCCCC"> process</font>

697
00:24:35,740 --> 00:24:40,600
of incorporating this into the payload

698
00:24:37,360 --> 00:24:42,699
as well<font color="#CCCCCC"> what about 400 bucks cuticles</font>

699
00:24:40,600 --> 00:24:45,100
windows oh god there's so many ways<font color="#E5E5E5"> to</font>

700
00:24:42,700 --> 00:24:46,660
<font color="#CCCCCC">inject these and</font><font color="#E5E5E5"> actually it's really</font>

701
00:24:45,100 --> 00:24:48,730
<font color="#E5E5E5">easy it basically can create a DLL that</font>

702
00:24:46,660 --> 00:24:50,770
<font color="#E5E5E5">contains your shellcode or contains your</font>

703
00:24:48,730 --> 00:24:52,060
interpreter you can<font color="#CCCCCC"> basically inject</font><font color="#E5E5E5"> it</font>

704
00:24:50,770 --> 00:24:53,290
in so many<font color="#E5E5E5"> different ways</font><font color="#CCCCCC"> and they've</font>

705
00:24:52,060 --> 00:24:54,639
<font color="#E5E5E5">Kennedy went through a few of those</font><font color="#CCCCCC"> but</font>

706
00:24:53,290 --> 00:24:58,090
I'm talking about unicorn and then the

707
00:24:54,640 --> 00:24:59,770
different ways of doing encoding<font color="#E5E5E5"> so yeah</font>

708
00:24:58,090 --> 00:25:01,929
it's<font color="#E5E5E5"> kind of a rich tapestry I just did</font>

709
00:24:59,770 --> 00:25:03,040
like a search of methods for<font color="#E5E5E5"> injecting</font>

710
00:25:01,930 --> 00:25:05,740
<font color="#CCCCCC">shellcode the windows</font><font color="#E5E5E5"> and these are all</font>

711
00:25:03,040 --> 00:25:07,930
screenshots that<font color="#CCCCCC"> I found out so you know</font>

712
00:25:05,740 --> 00:25:08,620
we got<font color="#E5E5E5"> to cover there what about</font><font color="#CCCCCC"> the</font>

713
00:25:07,930 --> 00:25:11,200
<font color="#E5E5E5">rest of payload</font>

714
00:25:08,620 --> 00:25:13,449
well<font color="#E5E5E5"> obviously don't write write payload</font>

715
00:25:11,200 --> 00:25:15,460
in sort<font color="#CCCCCC"> of a complex you know</font><font color="#E5E5E5"> stack</font>

716
00:25:13,450 --> 00:25:17,110
oriented<font color="#E5E5E5"> you know simply</font><font color="#CCCCCC"> weighing what</font>

717
00:25:15,460 --> 00:25:18,610
else do<font color="#E5E5E5"> you do</font><font color="#CCCCCC"> to make it</font><font color="#E5E5E5"> easy</font><font color="#CCCCCC"> to target</font>

718
00:25:17,110 --> 00:25:21,219
<font color="#E5E5E5">to a lot of different</font><font color="#CCCCCC"> environments a lot</font>

719
00:25:18,610 --> 00:25:24,490
of different<font color="#E5E5E5"> operating systems well one</font>

720
00:25:21,220 --> 00:25:26,440
thing is to use boring libraries don't

721
00:25:24,490 --> 00:25:27,730
don't write things<font color="#E5E5E5"> yourself</font><font color="#CCCCCC"> if you can</font>

722
00:25:26,440 --> 00:25:29,470
find<font color="#E5E5E5"> something</font><font color="#CCCCCC"> out self it</font><font color="#E5E5E5"> just works</font>

723
00:25:27,730 --> 00:25:31,930
<font color="#E5E5E5">just use it the great thing about that</font>

724
00:25:29,470 --> 00:25:33,850
<font color="#E5E5E5">too</font><font color="#CCCCCC"> is that it becomes less signature</font>

725
00:25:31,930 --> 00:25:35,890
bolt<font color="#E5E5E5"> less fingerprint</font><font color="#CCCCCC"> Bowl</font><font color="#E5E5E5"> if you're</font>

726
00:25:33,850 --> 00:25:37,750
<font color="#E5E5E5">just using curl</font><font color="#CCCCCC"> versus</font><font color="#E5E5E5"> like some custom</font>

727
00:25:35,890 --> 00:25:39,490
<font color="#CCCCCC">HP client used it's just going</font><font color="#E5E5E5"> to look</font>

728
00:25:37,750 --> 00:25:41,770
<font color="#E5E5E5">like curl on the wire it just don't look</font>

729
00:25:39,490 --> 00:25:42,970
<font color="#CCCCCC">like curl on</font><font color="#E5E5E5"> your process image silence</font>

730
00:25:41,770 --> 00:25:43,600
is<font color="#E5E5E5"> going to say hey it's curl it's</font>

731
00:25:42,970 --> 00:25:45,520
<font color="#CCCCCC">whitelisted</font>

732
00:25:43,600 --> 00:25:48,010
so there's a lot of benefits just<font color="#E5E5E5"> using</font>

733
00:25:45,520 --> 00:25:50,740
normal<font color="#CCCCCC"> boring stuff also we use auto</font>

734
00:25:48,010 --> 00:25:52,750
make and auto tools<font color="#CCCCCC"> I don't know if you</font>

735
00:25:50,740 --> 00:25:55,450
guys have ever used<font color="#CCCCCC"> Auto make or other</font>

736
00:25:52,750 --> 00:25:57,040
tools<font color="#E5E5E5"> are a little</font><font color="#CCCCCC"> tool</font><font color="#E5E5E5"> in here</font><font color="#CCCCCC"> no have</font>

737
00:25:55,450 --> 00:25:58,420
<font color="#CCCCCC">you ever</font><font color="#E5E5E5"> done dot slash configure you've</font>

738
00:25:57,040 --> 00:25:59,920
used it<font color="#CCCCCC"> alright maybe you</font><font color="#E5E5E5"> don't</font><font color="#CCCCCC"> have to</font>

739
00:25:58,420 --> 00:26:01,900
write anything for again writing<font color="#E5E5E5"> in for</font>

740
00:25:59,920 --> 00:26:02,500
scripts<font color="#E5E5E5"> and then I saw someone shoot</font>

741
00:26:01,900 --> 00:26:05,410
himself in the head

742
00:26:02,500 --> 00:26:08,340
that's perfectly warranted<font color="#E5E5E5"> but</font><font color="#CCCCCC"> I have to</font>

743
00:26:05,410 --> 00:26:10,660
admit<font color="#CCCCCC"> I actually like</font><font color="#E5E5E5"> Auto</font><font color="#CCCCCC"> Tools</font>

744
00:26:08,340 --> 00:26:11,439
mostly because<font color="#E5E5E5"> it just makes that if</font>

745
00:26:10,660 --> 00:26:13,600
you've ever tried to<font color="#CCCCCC"> do cross</font>

746
00:26:11,440 --> 00:26:15,280
compilation with anything<font color="#E5E5E5"> else it's</font>

747
00:26:13,600 --> 00:26:19,139
<font color="#E5E5E5">still pain in the ass so it's it's the</font>

748
00:26:15,280 --> 00:26:19,139
least worst thing that<font color="#E5E5E5"> we have today</font>

749
00:26:19,470 --> 00:26:23,380
talking about some<font color="#E5E5E5"> libraries and things</font>

750
00:26:21,580 --> 00:26:25,090
<font color="#CCCCCC">that we used to</font><font color="#E5E5E5"> actually build the sort</font>

751
00:26:23,380 --> 00:26:27,560
<font color="#E5E5E5">of Universal payload one of the most</font>

752
00:26:25,090 --> 00:26:29,179
<font color="#E5E5E5">Libby V Libby I Oh</font>

753
00:26:27,560 --> 00:26:30,409
so to make<font color="#CCCCCC"> it so</font><font color="#E5E5E5"> they're looking scale</font>

754
00:26:29,180 --> 00:26:32,740
<font color="#E5E5E5">and have a lot</font><font color="#CCCCCC"> of different</font>

755
00:26:30,410 --> 00:26:34,640
functionality inside<font color="#CCCCCC"> of a single payload</font>

756
00:26:32,740 --> 00:26:36,080
<font color="#CCCCCC">we want to make sure</font><font color="#E5E5E5"> that you know</font>

757
00:26:34,640 --> 00:26:37,420
basically<font color="#E5E5E5"> all the</font><font color="#CCCCCC"> different pieces of it</font>

758
00:26:36,080 --> 00:26:39,470
<font color="#E5E5E5">don't step on each other's toes</font>

759
00:26:37,420 --> 00:26:40,760
<font color="#CCCCCC">potentially you know the wave</font>

760
00:26:39,470 --> 00:26:43,070
interpreter works is you<font color="#E5E5E5"> can actually</font>

761
00:26:40,760 --> 00:26:44,450
<font color="#E5E5E5">have you know a lot of</font><font color="#CCCCCC"> different things</font>

762
00:26:43,070 --> 00:26:45,740
going<font color="#E5E5E5"> on simultaneously you might have</font>

763
00:26:44,450 --> 00:26:47,690
like a<font color="#E5E5E5"> dozen different tunnels going</font>

764
00:26:45,740 --> 00:26:49,580
<font color="#E5E5E5">through at once you might have commands</font>

765
00:26:47,690 --> 00:26:51,350
coming from<font color="#E5E5E5"> actually multiple</font><font color="#CCCCCC"> Metasploit</font>

766
00:26:49,580 --> 00:26:53,000
frameworks<font color="#CCCCCC"> I don't know if you guys knew</font>

767
00:26:51,350 --> 00:26:54,110
this but<font color="#E5E5E5"> actually I'm single motor Kirk</font>

768
00:26:53,000 --> 00:26:55,880
<font color="#E5E5E5">actually talked to</font><font color="#CCCCCC"> multiple frameworks</font>

769
00:26:54,110 --> 00:26:57,679
simultaneously<font color="#E5E5E5"> something we've</font><font color="#CCCCCC"> really</font>

770
00:26:55,880 --> 00:26:59,060
ever exposed<font color="#E5E5E5"> but something we use during</font>

771
00:26:57,680 --> 00:27:02,060
<font color="#E5E5E5">development here just to make</font><font color="#CCCCCC"> sure</font><font color="#E5E5E5"> we</font>

772
00:26:59,060 --> 00:27:03,649
<font color="#E5E5E5">build scale properly</font><font color="#CCCCCC"> we evaluate a few</font>

773
00:27:02,060 --> 00:27:05,690
different event libraries that<font color="#E5E5E5"> allow us</font>

774
00:27:03,650 --> 00:27:07,880
to basically<font color="#E5E5E5"> do this kind of scaling we</font>

775
00:27:05,690 --> 00:27:10,460
chose Libby<font color="#E5E5E5"> B not because it was our</font>

776
00:27:07,880 --> 00:27:12,200
<font color="#CCCCCC">first choice we basically built some</font>

777
00:27:10,460 --> 00:27:14,120
code around live event<font color="#E5E5E5"> and found that it</font>

778
00:27:12,200 --> 00:27:15,620
<font color="#CCCCCC">was too big so kind</font><font color="#E5E5E5"> of like this would</font>

779
00:27:14,120 --> 00:27:17,659
be<font color="#CCCCCC"> a list of</font><font color="#E5E5E5"> a three</font><font color="#CCCCCC"> bare sort of</font>

780
00:27:15,620 --> 00:27:19,219
scenario<font color="#E5E5E5"> we built some cut around libuv</font>

781
00:27:17,660 --> 00:27:20,780
<font color="#E5E5E5">and found that</font><font color="#CCCCCC"> anytime</font><font color="#E5E5E5"> you built on a</font>

782
00:27:19,220 --> 00:27:22,280
grant on a<font color="#CCCCCC"> kernel</font><font color="#E5E5E5"> didn't have every</font>

783
00:27:20,780 --> 00:27:23,389
feature it needed<font color="#E5E5E5"> it would blow up in</font>

784
00:27:22,280 --> 00:27:26,360
<font color="#E5E5E5">seg</font><font color="#CCCCCC"> ball</font>

785
00:27:23,390 --> 00:27:29,390
so Libby<font color="#CCCCCC"> beast of the basis of nodejs</font>

786
00:27:26,360 --> 00:27:32,270
live event is all over<font color="#E5E5E5"> the place Libby</font>

787
00:27:29,390 --> 00:27:33,710
<font color="#CCCCCC">Vee is basically kind of a little</font><font color="#E5E5E5"> bit of</font>

788
00:27:32,270 --> 00:27:36,020
<font color="#E5E5E5">an underdog you</font><font color="#CCCCCC"> actually have to</font>

789
00:27:33,710 --> 00:27:38,030
<font color="#E5E5E5">download it over CDF to get</font><font color="#CCCCCC"> a hold of</font><font color="#E5E5E5"> it</font>

790
00:27:36,020 --> 00:27:39,680
<font color="#E5E5E5">but it actually it turns out it's really</font>

791
00:27:38,030 --> 00:27:41,930
really good<font color="#E5E5E5"> it's very small very</font>

792
00:27:39,680 --> 00:27:44,720
compatible<font color="#E5E5E5"> and it runs on Windows OSX</font>

793
00:27:41,930 --> 00:27:48,080
<font color="#CCCCCC">Solaris hp-ux eirick pretty much</font>

794
00:27:44,720 --> 00:27:48,790
everything<font color="#CCCCCC"> you want</font><font color="#E5E5E5"> and it's</font><font color="#CCCCCC"> just pretty</font>

795
00:27:48,080 --> 00:27:51,830
<font color="#CCCCCC">awesome</font>

796
00:27:48,790 --> 00:27:53,240
now to make<font color="#CCCCCC"> it</font><font color="#E5E5E5"> easier for you</font><font color="#CCCCCC"> guys if</font>

797
00:27:51,830 --> 00:27:55,250
you<font color="#CCCCCC"> ever want to</font><font color="#E5E5E5"> use with</font><font color="#CCCCCC"> VB or Libby</font><font color="#E5E5E5"> IO</font>

798
00:27:53,240 --> 00:27:58,520
and your own programs<font color="#CCCCCC"> I actually have</font><font color="#E5E5E5"> it</font>

799
00:27:55,250 --> 00:27:59,540
forked<font color="#E5E5E5"> onto github as well so there you</font>

800
00:27:58,520 --> 00:28:02,300
go

801
00:27:59,540 --> 00:28:04,450
<font color="#CCCCCC">Libby net</font><font color="#E5E5E5"> this is sort of the something</font>

802
00:28:02,300 --> 00:28:07,580
I carry with my with me everywhere I go

803
00:28:04,450 --> 00:28:11,000
<font color="#CCCCCC">Doug's song wrote it probably</font><font color="#E5E5E5"> about 2004</font>

804
00:28:07,580 --> 00:28:12,169
<font color="#CCCCCC">with a last update</font><font color="#E5E5E5"> but actually a lot of</font>

805
00:28:11,000 --> 00:28:13,580
<font color="#E5E5E5">projects use it if you have</font><font color="#CCCCCC"> looked</font>

806
00:28:12,170 --> 00:28:15,770
inside<font color="#E5E5E5"> the source</font><font color="#CCCCCC"> code</font><font color="#E5E5E5"> have been that it</font>

807
00:28:13,580 --> 00:28:17,030
actually has a embedded copy of<font color="#E5E5E5"> Libya</font>

808
00:28:15,770 --> 00:28:18,710
<font color="#E5E5E5">and let me know basically to do all</font>

809
00:28:17,030 --> 00:28:21,080
<font color="#E5E5E5">kinds of interesting networking stuff</font>

810
00:28:18,710 --> 00:28:25,130
<font color="#E5E5E5">from very small library maybe like 50</font>

811
00:28:21,080 --> 00:28:27,620
<font color="#CCCCCC">Tia code 50</font><font color="#E5E5E5"> K bytes of code and so you</font>

812
00:28:25,130 --> 00:28:30,410
can do things like packet captures you

813
00:28:27,620 --> 00:28:32,179
can do routing<font color="#E5E5E5"> you can do art being you</font>

814
00:28:30,410 --> 00:28:33,620
can do all sorts<font color="#CCCCCC"> of</font><font color="#E5E5E5"> cool stuff and</font><font color="#CCCCCC"> so</font>

815
00:28:32,180 --> 00:28:35,270
again I've got<font color="#E5E5E5"> a fork of it if you guys</font>

816
00:28:33,620 --> 00:28:38,060
are interested in using<font color="#E5E5E5"> the more</font>

817
00:28:35,270 --> 00:28:40,879
up-to-date<font color="#E5E5E5"> version of do not</font>

818
00:28:38,060 --> 00:28:42,260
cigar is a really cool tool as well one

819
00:28:40,880 --> 00:28:43,490
of neat<font color="#E5E5E5"> things about it is it lets you</font>

820
00:28:42,260 --> 00:28:45,620
<font color="#CCCCCC">basically do all</font><font color="#E5E5E5"> kinds of interrogation</font>

821
00:28:43,490 --> 00:28:46,940
<font color="#E5E5E5">at the operating system yet it's</font><font color="#CCCCCC"> still</font>

822
00:28:45,620 --> 00:28:48,979
completely<font color="#E5E5E5"> white listed in a lot of</font>

823
00:28:46,940 --> 00:28:50,750
<font color="#CCCCCC">scenarios so the reason why is because</font>

824
00:28:48,980 --> 00:28:53,300
it's<font color="#CCCCCC"> actually built</font><font color="#E5E5E5"> into a lot of</font>

825
00:28:50,750 --> 00:28:54,620
<font color="#E5E5E5">commercial monitoring agents this is</font>

826
00:28:53,300 --> 00:28:56,300
sort of everyone's got their own<font color="#CCCCCC"> Fork</font>

827
00:28:54,620 --> 00:28:59,719
but they all basically work the same<font color="#CCCCCC"> way</font>

828
00:28:56,300 --> 00:29:01,909
so so the usage<font color="#CCCCCC"> patterns were the way it</font>

829
00:28:59,720 --> 00:29:03,020
looks for things<font color="#E5E5E5"> that</font><font color="#CCCCCC"> way determines if</font>

830
00:29:01,910 --> 00:29:04,340
you're in a sandbox the way it

831
00:29:03,020 --> 00:29:06,110
determines if you're inside a container

832
00:29:04,340 --> 00:29:08,389
the way it checks what what Linux

833
00:29:06,110 --> 00:29:11,240
version you're on<font color="#CCCCCC"> it looks just like the</font>

834
00:29:08,390 --> 00:29:12,410
<font color="#CCCCCC">New Relic</font><font color="#E5E5E5"> agent so if you use cigar</font><font color="#CCCCCC"> you</font>

835
00:29:11,240 --> 00:29:14,330
not<font color="#E5E5E5"> only save or something to write a</font>

836
00:29:12,410 --> 00:29:16,430
lot of code<font color="#E5E5E5"> for introspecting systems</font>

837
00:29:14,330 --> 00:29:19,490
<font color="#E5E5E5">but it also basically makes it look</font>

838
00:29:16,430 --> 00:29:21,440
<font color="#CCCCCC">completely legitimate so actually I've</font>

839
00:29:19,490 --> 00:29:23,720
worked with<font color="#E5E5E5"> developers at BMC that use</font>

840
00:29:21,440 --> 00:29:24,800
it in<font color="#E5E5E5"> their own agent and again I've got</font>

841
00:29:23,720 --> 00:29:26,390
<font color="#E5E5E5">a fourth</font><font color="#CCCCCC"> gear with some extra</font>

842
00:29:24,800 --> 00:29:28,700
improvements for metal built on top<font color="#E5E5E5"> of</font>

843
00:29:26,390 --> 00:29:29,870
<font color="#CCCCCC">it you know make</font><font color="#E5E5E5"> it work on Windows more</font>

844
00:29:28,700 --> 00:29:32,780
easily<font color="#E5E5E5"> on that sort of thing but on</font>

845
00:29:29,870 --> 00:29:34,760
again using boring tools<font color="#E5E5E5"> not</font><font color="#CCCCCC"> only save</font>

846
00:29:32,780 --> 00:29:39,520
<font color="#CCCCCC">you time but also makes</font><font color="#E5E5E5"> your your</font>

847
00:29:34,760 --> 00:29:42,020
payload just look very<font color="#CCCCCC"> normal for</font><font color="#E5E5E5"> SSL</font>

848
00:29:39,520 --> 00:29:44,570
<font color="#CCCCCC">windows meterpreter links</font><font color="#E5E5E5"> reproduce open</font>

849
00:29:42,020 --> 00:29:46,460
<font color="#E5E5E5">SSL and I know you guys love with an SSL</font>

850
00:29:44,570 --> 00:29:49,879
right I can see a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> open Isis cell</font>

851
00:29:46,460 --> 00:29:52,100
phones out here in the audience<font color="#CCCCCC"> but</font><font color="#E5E5E5"> you</font>

852
00:29:49,880 --> 00:29:54,470
know of<font color="#E5E5E5"> course</font><font color="#CCCCCC"> I'd from you know the</font>

853
00:29:52,100 --> 00:29:56,959
<font color="#CCCCCC">painted is to build open</font><font color="#E5E5E5"> SSL it's very</font>

854
00:29:54,470 --> 00:29:59,240
very big<font color="#CCCCCC"> in fact</font><font color="#E5E5E5"> if you were to look at</font>

855
00:29:56,960 --> 00:30:01,220
meterpreter today and you see it loving

856
00:29:59,240 --> 00:30:04,250
<font color="#CCCCCC">that initial like</font><font color="#E5E5E5"> 900</font><font color="#CCCCCC"> K you</font><font color="#E5E5E5"> know first</font>

857
00:30:01,220 --> 00:30:06,230
stage 700<font color="#CCCCCC"> cave</font><font color="#E5E5E5"> it is</font><font color="#CCCCCC"> openness himself</font>

858
00:30:04,250 --> 00:30:08,660
<font color="#CCCCCC">we're hoping to get rid of</font><font color="#E5E5E5"> at some</font><font color="#CCCCCC"> point</font>

859
00:30:06,230 --> 00:30:11,420
<font color="#E5E5E5">but at the</font><font color="#CCCCCC"> moment</font><font color="#E5E5E5"> that's where it is but</font>

860
00:30:08,660 --> 00:30:13,790
<font color="#E5E5E5">for this new payload we use in bed TLS</font>

861
00:30:11,420 --> 00:30:16,040
which<font color="#E5E5E5"> is from arm they luckily open</font>

862
00:30:13,790 --> 00:30:18,230
sourced it<font color="#E5E5E5"> under I believe</font><font color="#CCCCCC"> a apache</font>

863
00:30:16,040 --> 00:30:20,750
license after<font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of you know GPL</font>

864
00:30:18,230 --> 00:30:22,280
commercial sort<font color="#E5E5E5"> of weirdness and</font><font color="#CCCCCC"> it's</font>

865
00:30:20,750 --> 00:30:24,050
pretty<font color="#E5E5E5"> awesome</font><font color="#CCCCCC"> you can get basically a</font>

866
00:30:22,280 --> 00:30:28,250
<font color="#E5E5E5">full TLS stack and about a hundred</font>

867
00:30:24,050 --> 00:30:30,139
kilobytes<font color="#CCCCCC"> and of course</font><font color="#E5E5E5"> curl</font><font color="#CCCCCC"> i like curl</font>

868
00:30:28,250 --> 00:30:31,670
curl gets a lot of hate because<font color="#E5E5E5"> you know</font>

869
00:30:30,140 --> 00:30:33,950
hey it's written<font color="#E5E5E5"> in</font><font color="#CCCCCC"> c and that sort of</font>

870
00:30:31,670 --> 00:30:36,200
thing<font color="#E5E5E5"> but it supports all so much stuff</font>

871
00:30:33,950 --> 00:30:38,240
<font color="#E5E5E5">and it's you know been through</font><font color="#CCCCCC"> a lot of</font>

872
00:30:36,200 --> 00:30:39,020
<font color="#CCCCCC">helm back and it works</font><font color="#E5E5E5"> with all the</font>

873
00:30:38,240 --> 00:30:42,539
<font color="#E5E5E5">weird</font><font color="#CCCCCC"> things</font>

874
00:30:39,020 --> 00:30:45,059
<font color="#E5E5E5">chunking encryption verification version</font>

875
00:30:42,539 --> 00:30:47,399
negotiation mime types proxies<font color="#CCCCCC"> all this</font>

876
00:30:45,059 --> 00:30:50,219
stuff you get for free<font color="#E5E5E5"> don't write it on</font>

877
00:30:47,399 --> 00:30:52,468
an HP client just use curl<font color="#CCCCCC"> it's easy</font><font color="#E5E5E5"> and</font>

878
00:30:50,219 --> 00:30:53,820
other great thing about<font color="#E5E5E5"> curls</font><font color="#CCCCCC"> and love</font>

879
00:30:52,469 --> 00:30:55,619
people<font color="#E5E5E5"> don't realize it actually has a</font>

880
00:30:53,820 --> 00:30:59,629
ridiculous<font color="#E5E5E5"> number of other protocol</font>

881
00:30:55,619 --> 00:31:03,928
supports you can use<font color="#CCCCCC"> gopher</font><font color="#E5E5E5"> FTP or IMAP</font>

882
00:30:59,629 --> 00:31:06,809
<font color="#CCCCCC">TFTP can do</font><font color="#E5E5E5"> SSH</font><font color="#CCCCCC"> over curl</font><font color="#E5E5E5"> you can do</font>

883
00:31:03,929 --> 00:31:08,039
telnet you can do<font color="#E5E5E5"> SMB / curl it's pretty</font>

884
00:31:06,809 --> 00:31:10,168
ridiculous the amount<font color="#E5E5E5"> of stuff</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can</font>

885
00:31:08,039 --> 00:31:13,259
do<font color="#CCCCCC"> / curl</font><font color="#E5E5E5"> and we actually have it all</font>

886
00:31:10,169 --> 00:31:15,749
turned off<font color="#E5E5E5"> right now but soon it's going</font>

887
00:31:13,259 --> 00:31:16,769
<font color="#CCCCCC">to</font><font color="#E5E5E5"> be turned on and we'll be able to do</font>

888
00:31:15,749 --> 00:31:20,369
<font color="#E5E5E5">lots of</font><font color="#CCCCCC"> interesting stuff</font><font color="#E5E5E5"> with</font>

889
00:31:16,769 --> 00:31:21,389
meterpreter<font color="#CCCCCC"> the payload itself how do</font><font color="#E5E5E5"> we</font>

890
00:31:20,369 --> 00:31:24,238
sort<font color="#E5E5E5"> of build it</font><font color="#CCCCCC"> like I said we use</font>

891
00:31:21,389 --> 00:31:26,069
automate<font color="#CCCCCC"> it's kind</font><font color="#E5E5E5"> of a little bit of</font>

892
00:31:24,239 --> 00:31:27,839
learning curve<font color="#CCCCCC"> maybe a lot of a</font><font color="#E5E5E5"> learning</font>

893
00:31:26,069 --> 00:31:28,918
curve<font color="#CCCCCC"> but definitely worth it if</font><font color="#E5E5E5"> you're</font>

894
00:31:27,839 --> 00:31:31,079
cross compiling things you have<font color="#E5E5E5"> to work</font>

895
00:31:28,919 --> 00:31:33,179
everywhere<font color="#E5E5E5"> that's basically kind</font><font color="#CCCCCC"> of nuts</font>

896
00:31:31,079 --> 00:31:35,309
<font color="#E5E5E5">and bolts of it</font><font color="#CCCCCC"> I used a lot of labor</font><font color="#E5E5E5"> to</font>

897
00:31:33,179 --> 00:31:37,679
sell<font color="#CCCCCC"> and OpenBSD code in it as well and</font>

898
00:31:35,309 --> 00:31:39,479
so this<font color="#E5E5E5"> is what our system detection</font>

899
00:31:37,679 --> 00:31:41,459
code looks like<font color="#E5E5E5"> so</font><font color="#CCCCCC"> basically everything</font>

900
00:31:39,479 --> 00:31:43,019
can automatically fall back to built-in

901
00:31:41,459 --> 00:31:45,119
internal defaults<font color="#E5E5E5"> so like if you</font><font color="#CCCCCC"> don't</font>

902
00:31:43,019 --> 00:31:46,289
<font color="#E5E5E5">have a prettier string mechanism where</font>

903
00:31:45,119 --> 00:31:48,299
you<font color="#E5E5E5"> don't have a particular</font><font color="#CCCCCC"> C library</font>

904
00:31:46,289 --> 00:31:50,629
function it automatically detects

905
00:31:48,299 --> 00:31:52,619
everything and substitutes in the right

906
00:31:50,629 --> 00:31:54,869
compatibility layers as needed

907
00:31:52,619 --> 00:31:58,049
again just took<font color="#E5E5E5"> three oddly</font><font color="#CCCCCC"> versatile</font>

908
00:31:54,869 --> 00:32:00,689
jammed it in here<font color="#CCCCCC"> I know there were some</font>

909
00:31:58,049 --> 00:32:01,679
C coders<font color="#CCCCCC"> in the house I want</font><font color="#E5E5E5"> to show you</font>

910
00:32:00,690 --> 00:32:03,779
a little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> of something interesting</font>

911
00:32:01,679 --> 00:32:08,489
here's how<font color="#E5E5E5"> you can write basically</font><font color="#CCCCCC"> write</font>

912
00:32:03,779 --> 00:32:09,989
portable<font color="#E5E5E5"> C code that basically papers</font>

913
00:32:08,489 --> 00:32:12,659
<font color="#E5E5E5">over the weirdness between different</font>

914
00:32:09,989 --> 00:32:15,779
operating systems<font color="#CCCCCC"> in this</font><font color="#E5E5E5"> particular</font>

915
00:32:12,659 --> 00:32:17,879
case we have<font color="#CCCCCC"> a file called</font><font color="#E5E5E5"> limit H limit</font>

916
00:32:15,779 --> 00:32:22,019
<font color="#CCCCCC">the H usually contains things like what</font>

917
00:32:17,879 --> 00:32:24,389
<font color="#E5E5E5">you know what your max path is or you</font>

918
00:32:22,019 --> 00:32:26,879
know how much how big<font color="#CCCCCC"> of page size is</font>

919
00:32:24,389 --> 00:32:27,869
something<font color="#CCCCCC"> like that so how</font><font color="#E5E5E5"> to use</font><font color="#CCCCCC"> limit</font>

920
00:32:26,879 --> 00:32:29,998
<font color="#CCCCCC">sportively</font><font color="#E5E5E5"> across lots of different</font>

921
00:32:27,869 --> 00:32:31,649
operating systems<font color="#E5E5E5"> well one day one way</font>

922
00:32:29,999 --> 00:32:33,239
of course will<font color="#E5E5E5"> be</font><font color="#CCCCCC"> that in your C code</font>

923
00:32:31,649 --> 00:32:34,468
you can<font color="#E5E5E5"> just you know have a bunch of</font>

924
00:32:33,239 --> 00:32:36,959
<font color="#CCCCCC">different kind</font><font color="#E5E5E5"> of includes for different</font>

925
00:32:34,469 --> 00:32:39,299
<font color="#E5E5E5">operating systems or you can</font><font color="#CCCCCC"> insert a</font>

926
00:32:36,959 --> 00:32:42,269
shim header<font color="#E5E5E5"> the basically intercepts</font><font color="#CCCCCC"> all</font>

927
00:32:39,299 --> 00:32:44,789
your<font color="#E5E5E5"> other header includes and and</font>

928
00:32:42,269 --> 00:32:46,529
replaces them<font color="#CCCCCC"> with its own so here's a</font>

929
00:32:44,789 --> 00:32:48,690
<font color="#CCCCCC">little</font><font color="#E5E5E5"> bit cheap trick down here you</font><font color="#CCCCCC"> see</font>

930
00:32:46,529 --> 00:32:50,759
this include next<font color="#E5E5E5"> now this is going to</font>

931
00:32:48,690 --> 00:32:52,589
<font color="#E5E5E5">get highlighted by them but it turns out</font>

932
00:32:50,759 --> 00:32:56,820
it's<font color="#CCCCCC"> actually implanted</font><font color="#E5E5E5"> in almost every</font>

933
00:32:52,589 --> 00:32:58,230
C compiler except for<font color="#E5E5E5"> Visual Studio</font>

934
00:32:56,820 --> 00:33:00,029
<font color="#E5E5E5">what it basically does is it looks for</font>

935
00:32:58,230 --> 00:33:02,070
the next path in the<font color="#E5E5E5"> search</font><font color="#CCCCCC"> search</font>

936
00:33:00,029 --> 00:33:04,019
environment<font color="#E5E5E5"> and it includes the next</font>

937
00:33:02,070 --> 00:33:05,428
place<font color="#CCCCCC"> with my final limits</font><font color="#E5E5E5"> to H so you</font>

938
00:33:04,019 --> 00:33:07,409
basically<font color="#E5E5E5"> put this magical</font><font color="#CCCCCC"> limits to</font><font color="#E5E5E5"> H</font>

939
00:33:05,429 --> 00:33:08,809
early in your<font color="#E5E5E5"> search path and they will</font>

940
00:33:07,409 --> 00:33:11,039
automatically<font color="#E5E5E5"> include the second one</font>

941
00:33:08,809 --> 00:33:13,019
<font color="#CCCCCC">there's a there's a crazy trick you can</font>

942
00:33:11,039 --> 00:33:15,419
<font color="#E5E5E5">do inside</font><font color="#CCCCCC"> of Visual Studio as well where</font>

943
00:33:13,019 --> 00:33:18,210
<font color="#E5E5E5">you basically add a a relative path jump</font>

944
00:33:15,419 --> 00:33:20,190
<font color="#E5E5E5">and this will cause it to basically do</font>

945
00:33:18,210 --> 00:33:21,389
the exact<font color="#CCCCCC"> same thing</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> looks</font>

946
00:33:20,190 --> 00:33:22,409
like<font color="#CCCCCC"> a</font><font color="#E5E5E5"> different file even though it's</font>

947
00:33:21,389 --> 00:33:24,000
literally the<font color="#E5E5E5"> same file</font>

948
00:33:22,409 --> 00:33:25,950
so you're basically tricking into

949
00:33:24,000 --> 00:33:27,210
thinking that<font color="#E5E5E5"> it should</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> look</font>

950
00:33:25,950 --> 00:33:29,309
for<font color="#E5E5E5"> this other file to include I'm</font>

951
00:33:27,210 --> 00:33:32,220
virtually kind of annoyingly between

952
00:33:29,309 --> 00:33:33,899
Visual Studio 2013 and 2015<font color="#E5E5E5"> Microsoft</font>

953
00:33:32,220 --> 00:33:35,039
<font color="#E5E5E5">decided</font><font color="#CCCCCC"> that rather</font><font color="#E5E5E5"> than putting the</font>

954
00:33:33,899 --> 00:33:37,739
include files in a directory called

955
00:33:35,039 --> 00:33:39,389
<font color="#E5E5E5">include they changed it to you CRT so</font>

956
00:33:37,740 --> 00:33:41,309
you have to have<font color="#E5E5E5"> this one little tweak</font>

957
00:33:39,389 --> 00:33:42,899
<font color="#CCCCCC">to make it work</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> the nice thing about</font>

958
00:33:41,309 --> 00:33:45,059
this now<font color="#E5E5E5"> is once you have</font><font color="#CCCCCC"> this set of</font>

959
00:33:42,899 --> 00:33:47,908
headers built<font color="#E5E5E5"> you can basically write</font>

960
00:33:45,059 --> 00:33:50,158
code<font color="#E5E5E5"> just that assumes that everything</font>

961
00:33:47,909 --> 00:33:56,220
<font color="#E5E5E5">is normal and it gets</font><font color="#CCCCCC"> basically a normal</font>

962
00:33:50,159 --> 00:33:58,980
<font color="#CCCCCC">environment built around it something</font>

963
00:33:56,220 --> 00:34:01,980
else<font color="#E5E5E5"> we do to make things easy to extend</font>

964
00:33:58,980 --> 00:34:03,149
<font color="#E5E5E5">it easy to support to</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> different</font>

965
00:34:01,980 --> 00:34:04,830
operating<font color="#E5E5E5"> system will work on a lot of</font>

966
00:34:03,149 --> 00:34:06,989
<font color="#E5E5E5">different operating systems as we use</font>

967
00:34:04,830 --> 00:34:08,279
conditional compilation<font color="#E5E5E5"> so rather than</font>

968
00:34:06,990 --> 00:34:10,319
using a lot of<font color="#CCCCCC"> steps</font><font color="#E5E5E5"> and a lot of</font><font color="#CCCCCC"> you</font>

969
00:34:08,280 --> 00:34:11,760
<font color="#CCCCCC">know if it's Windows do this it's</font><font color="#E5E5E5"> not do</font>

970
00:34:10,319 --> 00:34:13,349
<font color="#E5E5E5">that we're actually inside the build</font>

971
00:34:11,760 --> 00:34:15,810
system automatically choose which

972
00:34:13,349 --> 00:34:17,940
sources want to build automatically<font color="#CCCCCC"> so</font>

973
00:34:15,810 --> 00:34:21,270
we can see here<font color="#E5E5E5"> for</font><font color="#CCCCCC"> OSX we are</font><font color="#E5E5E5"> going to</font>

974
00:34:17,940 --> 00:34:22,800
be pulling<font color="#E5E5E5"> the OSX clipboard stuff if</font>

975
00:34:21,270 --> 00:34:23,969
it's any kind<font color="#E5E5E5"> of Apple device we pull in</font>

976
00:34:22,800 --> 00:34:26,310
the webcam so that means we can also

977
00:34:23,969 --> 00:34:28,678
grab the<font color="#E5E5E5"> webcam from a Mac or an</font><font color="#CCCCCC"> iOS</font>

978
00:34:26,310 --> 00:34:30,599
device<font color="#CCCCCC"> at this</font><font color="#E5E5E5"> Linux the problem length</font>

979
00:34:28,679 --> 00:34:32,250
<font color="#CCCCCC">webcam version there's Windows</font>

980
00:34:30,599 --> 00:34:34,079
variations that sort of thing<font color="#E5E5E5"> this makes</font>

981
00:34:32,250 --> 00:34:37,260
it really easy to<font color="#CCCCCC"> just add</font><font color="#E5E5E5"> functionality</font>

982
00:34:34,079 --> 00:34:38,490
without<font color="#E5E5E5"> having to do a lot</font><font color="#CCCCCC"> of sort of</font>

983
00:34:37,260 --> 00:34:41,490
twisty<font color="#CCCCCC"> whine decode like I showed</font>

984
00:34:38,489 --> 00:34:43,168
earlier<font color="#E5E5E5"> with all the abducts another way</font>

985
00:34:41,489 --> 00:34:45,899
we keep code saying is we<font color="#E5E5E5"> actually write</font>

986
00:34:43,168 --> 00:34:48,149
object-oriented<font color="#CCCCCC"> C I know</font>

987
00:34:45,899 --> 00:34:50,190
well C doesn't<font color="#E5E5E5"> really have optics but</font>

988
00:34:48,149 --> 00:34:52,770
what you can do is<font color="#CCCCCC"> basically you want to</font>

989
00:34:50,190 --> 00:34:54,210
hide everything<font color="#E5E5E5"> from everything else so</font>

990
00:34:52,770 --> 00:34:56,040
if you<font color="#E5E5E5"> create these opaque structures</font>

991
00:34:54,210 --> 00:34:57,960
and<font color="#E5E5E5"> you never actually tell anyone</font>

992
00:34:56,040 --> 00:34:59,609
what's inside them<font color="#E5E5E5"> you can you can</font>

993
00:34:57,960 --> 00:35:02,190
effectively create<font color="#E5E5E5"> every function and</font>

994
00:34:59,609 --> 00:35:03,480
treat it<font color="#E5E5E5"> like a method instead in that</font>

995
00:35:02,190 --> 00:35:05,010
allows you to<font color="#CCCCCC"> basically hide internal</font>

996
00:35:03,480 --> 00:35:06,070
implementation<font color="#CCCCCC"> details and then reuse</font>

997
00:35:05,010 --> 00:35:08,360
<font color="#E5E5E5">code across the</font>

998
00:35:06,070 --> 00:35:10,670
boundaries<font color="#E5E5E5"> and you don't have all this</font>

999
00:35:08,360 --> 00:35:14,390
sort<font color="#E5E5E5"> of kind of spaghetti</font><font color="#CCCCCC"> message C</font>

1000
00:35:10,670 --> 00:35:15,890
programs<font color="#E5E5E5"> trying to Hugh's kind of some</font>

1001
00:35:14,390 --> 00:35:17,569
<font color="#E5E5E5">examples</font><font color="#CCCCCC"> about how easy it</font><font color="#E5E5E5"> is sort of</font>

1002
00:35:15,890 --> 00:35:18,379
the to add functionality<font color="#CCCCCC"> that</font><font color="#E5E5E5"> works</font>

1003
00:35:17,570 --> 00:35:20,990
across all the different platforms

1004
00:35:18,380 --> 00:35:22,250
<font color="#CCCCCC">here's what the code that gets the</font>

1005
00:35:20,990 --> 00:35:25,879
current working directory looks like

1006
00:35:22,250 --> 00:35:27,830
inside of<font color="#CCCCCC"> this new payload meterpreter</font>

1007
00:35:25,880 --> 00:35:29,390
payload and pretty much<font color="#CCCCCC"> I</font><font color="#E5E5E5"> guess do is</font>

1008
00:35:27,830 --> 00:35:31,880
register a function pointer<font color="#E5E5E5"> forget the</font>

1009
00:35:29,390 --> 00:35:33,080
working directory<font color="#CCCCCC"> you say what it should</font>

1010
00:35:31,880 --> 00:35:37,070
be<font color="#E5E5E5"> looking</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> inside the incoming</font>

1011
00:35:33,080 --> 00:35:40,130
<font color="#CCCCCC">method</font><font color="#E5E5E5"> stream and then the system will</font>

1012
00:35:37,070 --> 00:35:43,220
automatically dispatch<font color="#E5E5E5"> a context to</font><font color="#CCCCCC"> that</font>

1013
00:35:40,130 --> 00:35:44,930
<font color="#E5E5E5">handler you do whatever it</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> you get</font>

1014
00:35:43,220 --> 00:35:47,029
<font color="#E5E5E5">the path of the file or whatever just</font>

1015
00:35:44,930 --> 00:35:50,600
<font color="#E5E5E5">you need to do you create a response and</font>

1016
00:35:47,030 --> 00:35:53,120
return it system is pretty<font color="#E5E5E5"> nice and that</font>

1017
00:35:50,600 --> 00:35:55,819
there<font color="#E5E5E5"> are other ways you can return as</font>

1018
00:35:53,120 --> 00:35:58,370
well<font color="#E5E5E5"> this</font><font color="#CCCCCC"> scenario works really well for</font>

1019
00:35:55,820 --> 00:35:59,540
cases where you<font color="#E5E5E5"> want to return right</font>

1020
00:35:58,370 --> 00:36:01,339
<font color="#E5E5E5">away</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> you don't</font><font color="#CCCCCC"> think it'll actually</font>

1021
00:35:59,540 --> 00:36:03,020
take<font color="#E5E5E5"> any time to</font><font color="#CCCCCC"> return because there's</font>

1022
00:36:01,340 --> 00:36:05,750
actually<font color="#CCCCCC"> an</font><font color="#E5E5E5"> event loop that's handling</font>

1023
00:36:03,020 --> 00:36:07,130
all this that way if you have some that

1024
00:36:05,750 --> 00:36:07,580
might<font color="#E5E5E5"> take a long time like for instance</font>

1025
00:36:07,130 --> 00:36:09,410
<font color="#E5E5E5">here</font>

1026
00:36:07,580 --> 00:36:11,900
here's code that calculates the sha-1 of

1027
00:36:09,410 --> 00:36:15,649
a file<font color="#E5E5E5"> system of a file you can actually</font>

1028
00:36:11,900 --> 00:36:17,120
create a custom<font color="#E5E5E5"> event handler that that</font>

1029
00:36:15,650 --> 00:36:18,590
basically<font color="#E5E5E5"> runs in the background</font><font color="#CCCCCC"> there's</font>

1030
00:36:17,120 --> 00:36:21,350
a magical thread pool<font color="#E5E5E5"> that automatically</font>

1031
00:36:18,590 --> 00:36:23,540
<font color="#E5E5E5">gets instantiated for every OS and can</font>

1032
00:36:21,350 --> 00:36:26,089
deal with managing each each

1033
00:36:23,540 --> 00:36:27,259
<font color="#E5E5E5">asynchronous operation as</font><font color="#CCCCCC"> it as it runs</font>

1034
00:36:26,090 --> 00:36:28,700
and it'll<font color="#E5E5E5"> actually keep you from doing</font>

1035
00:36:27,260 --> 00:36:30,770
<font color="#E5E5E5">too many simultaneously so you don't you</font>

1036
00:36:28,700 --> 00:36:31,730
<font color="#CCCCCC">just want to resources there's a lot of</font>

1037
00:36:30,770 --> 00:36:34,160
<font color="#E5E5E5">really cool stuff going underneath</font>

1038
00:36:31,730 --> 00:36:36,530
covers and then you pod can't see this

1039
00:36:34,160 --> 00:36:40,069
but<font color="#E5E5E5"> effectively inside</font><font color="#CCCCCC"> their</font><font color="#E5E5E5"> callback</font>

1040
00:36:36,530 --> 00:36:41,360
<font color="#E5E5E5">you can then generate the same</font><font color="#CCCCCC"> kind of</font>

1041
00:36:40,070 --> 00:36:43,190
response and then return<font color="#E5E5E5"> it</font>

1042
00:36:41,360 --> 00:36:44,360
asynchronously<font color="#E5E5E5"> and</font><font color="#CCCCCC"> if you guys want to</font>

1043
00:36:43,190 --> 00:36:47,200
<font color="#E5E5E5">go into</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> a little bit</font><font color="#CCCCCC"> more detail I</font>

1044
00:36:44,360 --> 00:36:47,200
can<font color="#CCCCCC"> definitely do that</font>

1045
00:36:48,970 --> 00:36:54,890
now<font color="#E5E5E5"> not</font><font color="#CCCCCC"> everything's</font><font color="#E5E5E5"> sort of a you know</font>

1046
00:36:51,940 --> 00:36:57,500
<font color="#CCCCCC">joined roses what comes</font><font color="#E5E5E5"> down to testing</font>

1047
00:36:54,890 --> 00:36:59,420
and inputting<font color="#E5E5E5"> these sort of things a lot</font>

1048
00:36:57,500 --> 00:37:01,040
<font color="#CCCCCC">of</font><font color="#E5E5E5"> things you run into weird stuff stuff</font>

1049
00:36:59,420 --> 00:37:03,320
<font color="#CCCCCC">that you've never expected I actually</font>

1050
00:37:01,040 --> 00:37:05,720
had this bug reported on Twitter<font color="#E5E5E5"> which</font>

1051
00:37:03,320 --> 00:37:08,450
was everything works fine<font color="#CCCCCC"> except on</font>

1052
00:37:05,720 --> 00:37:12,279
<font color="#CCCCCC">armed b5</font><font color="#E5E5E5"> like an actual arm v5 box so</font>

1053
00:37:08,450 --> 00:37:12,279
actually let's see

1054
00:37:13,749 --> 00:37:19,640
the problem<font color="#E5E5E5"> of course</font><font color="#CCCCCC"> was I didn't have</font>

1055
00:37:16,009 --> 00:37:23,269
<font color="#E5E5E5">one so I got this little</font><font color="#CCCCCC"> Zipit device</font>

1056
00:37:19,640 --> 00:37:26,029
from 2004<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> a little text messenger</font>

1057
00:37:23,269 --> 00:37:28,879
from<font color="#CCCCCC"> for kids you know they</font><font color="#E5E5E5"> can</font>

1058
00:37:26,029 --> 00:37:30,169
basically text their friends<font color="#CCCCCC"> it turns</font>

1059
00:37:28,880 --> 00:37:31,849
out it runs Linux<font color="#E5E5E5"> you can just pop a</font>

1060
00:37:30,169 --> 00:37:33,589
<font color="#E5E5E5">little SD card in here</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> replace the</font>

1061
00:37:31,849 --> 00:37:36,259
whole<font color="#CCCCCC"> OS with your own so I put Debian</font>

1062
00:37:33,589 --> 00:37:38,119
on it<font color="#E5E5E5"> and managed to</font><font color="#CCCCCC"> reproduce the bug</font>

1063
00:37:36,259 --> 00:37:39,999
the question is do you see what the bug

1064
00:37:38,119 --> 00:37:43,039
here would be that<font color="#E5E5E5"> would only affect one</font>

1065
00:37:39,999 --> 00:37:45,140
<font color="#E5E5E5">OS architecture and not any others the</font>

1066
00:37:43,039 --> 00:37:46,579
basic<font color="#E5E5E5"> problem here was that every time</font>

1067
00:37:45,140 --> 00:37:48,078
<font color="#E5E5E5">it would run</font><font color="#CCCCCC"> through this</font><font color="#E5E5E5"> loop it would</font>

1068
00:37:46,579 --> 00:37:49,640
say<font color="#E5E5E5"> that the packet was bad and would</font>

1069
00:37:48,079 --> 00:37:51,559
<font color="#CCCCCC">return would free the packet</font><font color="#E5E5E5"> and</font>

1070
00:37:49,640 --> 00:37:54,828
<font color="#CCCCCC">returned all you get to</font><font color="#E5E5E5"> see where the</font>

1071
00:37:51,559 --> 00:37:57,979
bug might be I know it's kind of quick

1072
00:37:54,829 --> 00:38:00,739
to take<font color="#CCCCCC"> a look at it so it turns out</font>

1073
00:37:57,979 --> 00:38:05,178
<font color="#CCCCCC">that</font><font color="#E5E5E5"> some CPUs if you just point</font><font color="#CCCCCC"> a</font>

1074
00:38:00,739 --> 00:38:08,809
structure<font color="#CCCCCC"> to arbitrary memory offset</font><font color="#E5E5E5"> it</font>

1075
00:38:05,179 --> 00:38:11,209
ignores that<font color="#E5E5E5"> address and just choose</font><font color="#CCCCCC"> for</font>

1076
00:38:08,809 --> 00:38:12,409
byte alignment instead so effectively it

1077
00:38:11,209 --> 00:38:14,629
was ignoring<font color="#E5E5E5"> the pointers that were</font>

1078
00:38:12,409 --> 00:38:16,729
giving it and instead<font color="#CCCCCC"> just using</font>

1079
00:38:14,630 --> 00:38:18,259
whatever<font color="#E5E5E5"> it decided and that's actually</font>

1080
00:38:16,729 --> 00:38:20,658
<font color="#E5E5E5">a pretty common</font><font color="#CCCCCC"> problem when you you</font>

1081
00:38:18,259 --> 00:38:22,999
know develop<font color="#E5E5E5"> for kind of older CPUs</font><font color="#CCCCCC"> that</font>

1082
00:38:20,659 --> 00:38:24,380
don't support byte alignment<font color="#E5E5E5"> so of</font>

1083
00:38:22,999 --> 00:38:26,238
course you<font color="#E5E5E5"> have to do things</font><font color="#CCCCCC"> like adding</font>

1084
00:38:24,380 --> 00:38:28,759
<font color="#CCCCCC">pack that reach and that sort of thing</font>

1085
00:38:26,239 --> 00:38:29,839
but all in all there's not really a

1086
00:38:28,759 --> 00:38:31,849
whole<font color="#CCCCCC"> lot that</font><font color="#E5E5E5"> we've had to do other</font>

1087
00:38:29,839 --> 00:38:34,788
<font color="#E5E5E5">than sort of some little odd tweaks on</font>

1088
00:38:31,849 --> 00:38:36,829
the side<font color="#E5E5E5"> that make this work pretty much</font>

1089
00:38:34,789 --> 00:38:38,959
<font color="#E5E5E5">everywhere pulling all together</font>

1090
00:38:36,829 --> 00:38:40,669
<font color="#CCCCCC">other sort of</font><font color="#E5E5E5"> important pieces</font><font color="#CCCCCC"> to</font>

1091
00:38:38,959 --> 00:38:42,828
building<font color="#E5E5E5"> sort of Universal payload one</font>

1092
00:38:40,669 --> 00:38:44,598
is make<font color="#E5E5E5"> files if you guys like Microsoft</font>

1093
00:38:42,829 --> 00:38:47,359
feel you<font color="#E5E5E5"> love this make</font><font color="#CCCCCC"> I'll so the best</font>

1094
00:38:44,599 --> 00:38:48,709
<font color="#E5E5E5">make files but in order</font><font color="#CCCCCC"> to keep it kind</font>

1095
00:38:47,359 --> 00:38:50,058
<font color="#E5E5E5">of manageable we made it a make</font>

1096
00:38:48,709 --> 00:38:51,198
different a file for<font color="#E5E5E5"> every subsystem</font>

1097
00:38:50,059 --> 00:38:53,269
that<font color="#E5E5E5"> we have so can be built</font>

1098
00:38:51,199 --> 00:38:55,069
independently tested<font color="#CCCCCC"> apparently and more</font>

1099
00:38:53,269 --> 00:38:56,479
importantly it's<font color="#E5E5E5"> not a thousand line</font>

1100
00:38:55,069 --> 00:38:59,058
<font color="#E5E5E5">nest and said everything just to make</font><font color="#CCCCCC"> a</font>

1101
00:38:56,479 --> 00:39:02,239
<font color="#E5E5E5">couple dozen lines another cool thing we</font>

1102
00:38:59,059 --> 00:39:03,889
have is automated taste testing so here

1103
00:39:02,239 --> 00:39:05,299
we<font color="#CCCCCC"> actually have a lab full of routers</font>

1104
00:39:03,889 --> 00:39:07,099
and<font color="#CCCCCC"> someday we</font><font color="#E5E5E5"> should actually show some</font>

1105
00:39:05,299 --> 00:39:08,719
<font color="#E5E5E5">pictures</font><font color="#CCCCCC"> of what our</font><font color="#E5E5E5"> big lab full of</font>

1106
00:39:07,099 --> 00:39:11,479
routers<font color="#E5E5E5"> and different devices looks like</font>

1107
00:39:08,719 --> 00:39:13,309
<font color="#E5E5E5">but effectively we can</font><font color="#CCCCCC"> now run automatic</font>

1108
00:39:11,479 --> 00:39:15,229
exploit testing<font color="#E5E5E5"> and make sure that we</font>

1109
00:39:13,309 --> 00:39:16,639
can inject payloads<font color="#E5E5E5"> into them and make</font>

1110
00:39:15,229 --> 00:39:18,618
sure<font color="#E5E5E5"> they always consistently work so</font>

1111
00:39:16,639 --> 00:39:20,389
let's<font color="#CCCCCC"> tweak the payloads</font><font color="#E5E5E5"> and the</font>

1112
00:39:18,619 --> 00:39:22,279
<font color="#E5E5E5">exploits and make sure that we're</font><font color="#CCCCCC"> not</font>

1113
00:39:20,389 --> 00:39:23,390
breaking everything unlike my first

1114
00:39:22,279 --> 00:39:25,069
month<font color="#E5E5E5"> at rapid</font>

1115
00:39:23,390 --> 00:39:26,839
I broke the all three<font color="#E5E5E5"> so here you can</font>

1116
00:39:25,069 --> 00:39:28,279
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> see a road running an exploit</font>

1117
00:39:26,839 --> 00:39:30,799
called the moon which<font color="#CCCCCC"> is they say a</font>

1118
00:39:28,279 --> 00:39:33,230
command<font color="#E5E5E5"> our Texas</font><font color="#CCCCCC"> buffalo flow</font><font color="#E5E5E5"> but it's</font>

1119
00:39:30,799 --> 00:39:34,400
<font color="#E5E5E5">very reliable</font><font color="#CCCCCC"> and running on a couple</font>

1120
00:39:33,230 --> 00:39:41,210
different Linksys routers and in

1121
00:39:34,400 --> 00:39:43,640
<font color="#E5E5E5">verifying that it works and of course</font>

1122
00:39:41,210 --> 00:39:45,019
the final project<font color="#E5E5E5"> is that</font><font color="#CCCCCC"> anytime we do</font>

1123
00:39:43,640 --> 00:39:48,799
a build<font color="#E5E5E5"> we can</font><font color="#CCCCCC"> actually automatically</font>

1124
00:39:45,019 --> 00:39:52,299
publish all the<font color="#E5E5E5"> payloads</font><font color="#CCCCCC"> out to rubygems</font>

1125
00:39:48,799 --> 00:39:55,880
<font color="#E5E5E5">and in incorporating</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> Metasploit</font>

1126
00:39:52,299 --> 00:39:59,420
<font color="#E5E5E5">today the the</font><font color="#CCCCCC"> project actually</font><font color="#E5E5E5"> supports</font>

1127
00:39:55,880 --> 00:40:00,740
<font color="#CCCCCC">I think 11 different CPU architectures</font>

1128
00:39:59,420 --> 00:40:03,440
at least<font color="#CCCCCC"> four</font><font color="#E5E5E5"> different operating</font>

1129
00:40:00,740 --> 00:40:05,868
systems<font color="#CCCCCC"> and we're</font><font color="#E5E5E5"> looking</font><font color="#CCCCCC"> to support</font>

1130
00:40:03,440 --> 00:40:07,609
more directly<font color="#E5E5E5"> another kind of neat sort</font>

1131
00:40:05,869 --> 00:40:08,930
of bit of<font color="#E5E5E5"> catharsis</font><font color="#CCCCCC"> that came from this</font>

1132
00:40:07,609 --> 00:40:10,788
<font color="#CCCCCC">project was getting</font><font color="#E5E5E5"> to delete the old</font>

1133
00:40:08,930 --> 00:40:11,990
code remember I showed<font color="#E5E5E5"> it that there</font>

1134
00:40:10,789 --> 00:40:14,119
were six hundred<font color="#E5E5E5"> thousand lines of code</font>

1135
00:40:11,990 --> 00:40:17,359
<font color="#E5E5E5">in Windows interpreter</font><font color="#CCCCCC"> we were</font><font color="#E5E5E5"> able to</font>

1136
00:40:14,119 --> 00:40:19,460
delete<font color="#CCCCCC"> 234 thousand lines of</font><font color="#E5E5E5"> code</font><font color="#CCCCCC"> just</font>

1137
00:40:17,359 --> 00:40:22,700
<font color="#CCCCCC">last</font><font color="#E5E5E5"> week as a result of pushing in this</font>

1138
00:40:19,460 --> 00:40:24,650
<font color="#E5E5E5">new</font><font color="#CCCCCC"> it's new implementation so sometimes</font>

1139
00:40:22,700 --> 00:40:26,750
<font color="#E5E5E5">even though you add more you actually</font>

1140
00:40:24,650 --> 00:40:28,220
end up with less this<font color="#E5E5E5"> gives you kind of</font>

1141
00:40:26,750 --> 00:40:29,450
an idea<font color="#CCCCCC"> of all the different object</font>

1142
00:40:28,220 --> 00:40:31,129
<font color="#E5E5E5">architectures</font><font color="#CCCCCC"> that we're actually</font>

1143
00:40:29,450 --> 00:40:32,868
<font color="#E5E5E5">targeting right now if you run</font>

1144
00:40:31,130 --> 00:40:37,029
<font color="#CCCCCC">Metasploit today yeah and you'll see</font><font color="#E5E5E5"> arm</font>

1145
00:40:32,869 --> 00:40:39,410
64<font color="#CCCCCC"> big a little endian arm nips 64 bit</font>

1146
00:40:37,029 --> 00:40:41,990
different<font color="#E5E5E5"> 32 bit variations a lot of</font>

1147
00:40:39,410 --> 00:40:44,930
different PowerPC<font color="#CCCCCC"> and yes even the arch</font>

1148
00:40:41,990 --> 00:40:47,720
the arch is basically<font color="#E5E5E5"> the</font><font color="#CCCCCC"> O</font><font color="#E5E5E5"> of the CPU</font>

1149
00:40:44,930 --> 00:40:52,399
that<font color="#E5E5E5"> IBM mainframes are based on so you</font>

1150
00:40:47,720 --> 00:40:53,899
can run meterpreter<font color="#E5E5E5"> on a mainframe</font><font color="#CCCCCC"> other</font>

1151
00:40:52,400 --> 00:40:56,150
things that here's actually<font color="#E5E5E5"> running on</font>

1152
00:40:53,900 --> 00:40:57,700
Windows<font color="#CCCCCC"> it</font><font color="#E5E5E5"> actually has some</font><font color="#CCCCCC"> pretty cool</font>

1153
00:40:56,150 --> 00:41:02,599
<font color="#CCCCCC">stuff where when you generate</font><font color="#E5E5E5"> a binary</font>

1154
00:40:57,700 --> 00:41:04,519
<font color="#E5E5E5">it can be reconfigured</font><font color="#CCCCCC"> on-the-fly</font><font color="#E5E5E5"> so for</font>

1155
00:41:02,599 --> 00:41:06,559
<font color="#E5E5E5">instance here I had generated a metal</font>

1156
00:41:04,519 --> 00:41:08,180
payload<font color="#E5E5E5"> or I'm sorry</font><font color="#CCCCCC"> I should've</font>

1157
00:41:06,559 --> 00:41:11,180
<font color="#E5E5E5">mentioned this</font><font color="#CCCCCC"> before but</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> Universal</font>

1158
00:41:08,180 --> 00:41:13,129
payload is<font color="#E5E5E5"> codenamed metal you know for</font>

1159
00:41:11,180 --> 00:41:17,240
like you<font color="#E5E5E5"> know it's got a lot of metal a</font>

1160
00:41:13,130 --> 00:41:18,799
lot of moxie<font color="#CCCCCC"> and</font><font color="#E5E5E5"> so here for</font><font color="#CCCCCC"> instance is</font>

1161
00:41:17,240 --> 00:41:19,758
running<font color="#CCCCCC"> as a background</font><font color="#E5E5E5"> process</font><font color="#CCCCCC"> in Linux</font>

1162
00:41:18,799 --> 00:41:22,369
and<font color="#CCCCCC"> windows</font>

1163
00:41:19,759 --> 00:41:24,890
here's another instance of it<font color="#E5E5E5"> running as</font>

1164
00:41:22,369 --> 00:41:27,349
an iOS application<font color="#CCCCCC"> may</font><font color="#E5E5E5"> can run both</font><font color="#CCCCCC"> of</font>

1165
00:41:24,890 --> 00:41:28,879
the library and as a<font color="#CCCCCC"> stimuli executable</font>

1166
00:41:27,349 --> 00:41:31,069
<font color="#E5E5E5">so if you want to actually embed it into</font>

1167
00:41:28,880 --> 00:41:33,259
a project<font color="#CCCCCC"> you can easily do that and</font>

1168
00:41:31,069 --> 00:41:35,410
basically work on<font color="#E5E5E5"> it</font><font color="#CCCCCC"> just like it's sort</font>

1169
00:41:33,259 --> 00:41:40,869
of an<font color="#CCCCCC"> object-oriented</font>

1170
00:41:35,410 --> 00:41:43,240
piece of<font color="#E5E5E5"> code</font><font color="#CCCCCC"> what's</font><font color="#E5E5E5"> next well one thing</font>

1171
00:41:40,869 --> 00:41:45,250
<font color="#CCCCCC">that we're working on</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> I've been had</font>

1172
00:41:43,240 --> 00:41:47,560
a lot<font color="#CCCCCC"> of interested from from various</font>

1173
00:41:45,250 --> 00:41:49,180
<font color="#E5E5E5">people is how do we get payloads that</font>

1174
00:41:47,560 --> 00:41:50,859
<font color="#E5E5E5">can jump between windows subsystem for</font>

1175
00:41:49,180 --> 00:41:52,779
<font color="#E5E5E5">lights and windows so a lot of</font>

1176
00:41:50,859 --> 00:41:54,098
<font color="#E5E5E5">interesting sort of escapes to go back</font>

1177
00:41:52,780 --> 00:41:55,839
and<font color="#E5E5E5"> forth</font><font color="#CCCCCC"> between</font><font color="#E5E5E5"> the environments</font><font color="#CCCCCC"> but</font>

1178
00:41:54,099 --> 00:41:57,520
we're experimenting with<font color="#E5E5E5"> using windows</font>

1179
00:41:55,839 --> 00:41:59,200
subsystem<font color="#E5E5E5"> for legs as a way to basically</font>

1180
00:41:57,520 --> 00:42:02,800
<font color="#E5E5E5">hide a payload within a Windows</font>

1181
00:41:59,200 --> 00:42:04,180
environment<font color="#CCCCCC"> and so basically when you</font>

1182
00:42:02,800 --> 00:42:06,180
look<font color="#E5E5E5"> at processes you won't see it in</font>

1183
00:42:04,180 --> 00:42:07,930
<font color="#E5E5E5">the normal way there's a Windows process</font>

1184
00:42:06,180 --> 00:42:09,879
there's some<font color="#CCCCCC"> interesting stuff there</font>

1185
00:42:07,930 --> 00:42:12,240
<font color="#E5E5E5">where windows subsystem for</font><font color="#CCCCCC"> Linux is</font>

1186
00:42:09,880 --> 00:42:14,230
actually more strict<font color="#E5E5E5"> than Linux itself</font>

1187
00:42:12,240 --> 00:42:15,879
<font color="#E5E5E5">one of</font><font color="#CCCCCC"> the entry things we found her</font>

1188
00:42:14,230 --> 00:42:18,640
<font color="#E5E5E5">immediately was that</font><font color="#CCCCCC"> the in map command</font>

1189
00:42:15,880 --> 00:42:22,359
in when the subsystem for<font color="#E5E5E5"> likes</font><font color="#CCCCCC"> can't</font>

1190
00:42:18,640 --> 00:42:23,319
deal with<font color="#E5E5E5"> invalid</font><font color="#CCCCCC"> Flags</font><font color="#E5E5E5"> and Linux</font>

1191
00:42:22,359 --> 00:42:24,130
technically<font color="#E5E5E5"> shouldn't either but of</font>

1192
00:42:23,320 --> 00:42:25,930
course they<font color="#E5E5E5"> always want to make sure</font>

1193
00:42:24,130 --> 00:42:27,790
<font color="#E5E5E5">that they</font><font color="#CCCCCC"> never</font><font color="#E5E5E5"> break their ABI so</font>

1194
00:42:25,930 --> 00:42:30,279
there's probably<font color="#E5E5E5"> some interesting</font>

1195
00:42:27,790 --> 00:42:31,450
opportunity<font color="#CCCCCC"> for fuzzing</font><font color="#E5E5E5"> other things</font>

1196
00:42:30,280 --> 00:42:32,890
that we're<font color="#CCCCCC"> looking at I've been working</font>

1197
00:42:31,450 --> 00:42:35,169
a little bit with<font color="#CCCCCC"> beginning and smalls</font>

1198
00:42:32,890 --> 00:42:37,480
<font color="#CCCCCC">on how to get</font><font color="#E5E5E5"> this working on the POSIX</font>

1199
00:42:35,170 --> 00:42:39,099
subsystem<font color="#CCCCCC"> for z/os right now when we</font>

1200
00:42:37,480 --> 00:42:40,900
target mainframes we target the<font color="#CCCCCC"> Linux</font>

1201
00:42:39,099 --> 00:42:43,510
partitions but we can actually

1202
00:42:40,900 --> 00:42:46,240
<font color="#E5E5E5">particularly run this on native z/os as</font>

1203
00:42:43,510 --> 00:42:47,500
well which would<font color="#E5E5E5"> be pretty cool</font><font color="#CCCCCC"> we're</font>

1204
00:42:46,240 --> 00:42:49,118
also looking at basically<font color="#E5E5E5"> taking the</font>

1205
00:42:47,500 --> 00:42:50,770
same magical<font color="#E5E5E5"> tool</font><font color="#CCCCCC"> team</font><font color="#E5E5E5"> that we have that</font>

1206
00:42:49,119 --> 00:42:53,560
<font color="#E5E5E5">we use for injecting the payload</font><font color="#CCCCCC"> and</font>

1207
00:42:50,770 --> 00:42:55,000
using it<font color="#CCCCCC"> to do all the interesting local</font>

1208
00:42:53,560 --> 00:42:57,040
<font color="#E5E5E5">privilege escalations that come out for</font>

1209
00:42:55,000 --> 00:42:59,470
<font color="#E5E5E5">lengths</font><font color="#CCCCCC"> kernel over the past you know</font>

1210
00:42:57,040 --> 00:43:01,150
<font color="#CCCCCC">decades one of the biggest problem we</font>

1211
00:42:59,470 --> 00:43:02,950
have with<font color="#E5E5E5"> Linux local printers</font>

1212
00:43:01,150 --> 00:43:04,630
escalations is targeting all these

1213
00:43:02,950 --> 00:43:06,848
different architectures and operating

1214
00:43:04,630 --> 00:43:08,440
systems and<font color="#CCCCCC"> C libraries in fact if you</font>

1215
00:43:06,849 --> 00:43:10,869
use<font color="#CCCCCC"> Metasploit and try to use</font><font color="#E5E5E5"> any of the</font>

1216
00:43:08,440 --> 00:43:12,339
<font color="#CCCCCC">privilege escalations for linux a lot of</font>

1217
00:43:10,869 --> 00:43:14,050
<font color="#CCCCCC">times actually try</font><font color="#E5E5E5"> to build code using</font>

1218
00:43:12,339 --> 00:43:15,970
<font color="#CCCCCC">the system compiler obviously not a</font>

1219
00:43:14,050 --> 00:43:17,619
really great<font color="#E5E5E5"> scenario so we're looking</font>

1220
00:43:15,970 --> 00:43:19,270
at<font color="#E5E5E5"> basically</font><font color="#CCCCCC"> B so we can have Universal</font>

1221
00:43:17,619 --> 00:43:21,970
<font color="#CCCCCC">binaries being</font><font color="#E5E5E5"> injected everywhere for</font>

1222
00:43:19,270 --> 00:43:24,160
<font color="#E5E5E5">primitive escalation</font><font color="#CCCCCC"> course file lists</font>

1223
00:43:21,970 --> 00:43:26,589
<font color="#E5E5E5">Mac OS injection is really nice because</font>

1224
00:43:24,160 --> 00:43:28,240
<font color="#CCCCCC">the payload sonu nothing will</font><font color="#E5E5E5"> be</font>

1225
00:43:26,589 --> 00:43:31,029
<font color="#E5E5E5">detected anyway but it's always nice to</font>

1226
00:43:28,240 --> 00:43:32,529
<font color="#E5E5E5">have that sort</font><font color="#CCCCCC"> of scenario something</font>

1227
00:43:31,030 --> 00:43:34,270
<font color="#E5E5E5">else that we built into the payload from</font>

1228
00:43:32,530 --> 00:43:36,730
the beginning was we didn't always

1229
00:43:34,270 --> 00:43:37,599
<font color="#E5E5E5">intend</font><font color="#CCCCCC"> for it to</font><font color="#E5E5E5"> just be</font><font color="#CCCCCC"> meterpreter</font><font color="#E5E5E5"> we</font>

1230
00:43:36,730 --> 00:43:39,750
can actually<font color="#E5E5E5"> give different</font>

1231
00:43:37,599 --> 00:43:41,890
personalities<font color="#E5E5E5"> and have it talk different</font>

1232
00:43:39,750 --> 00:43:43,300
different languages<font color="#E5E5E5"> out different</font>

1233
00:43:41,890 --> 00:43:44,589
protocols<font color="#E5E5E5"> out so we're actually working</font>

1234
00:43:43,300 --> 00:43:46,540
<font color="#E5E5E5">with the router split project to</font>

1235
00:43:44,589 --> 00:43:47,390
incorporate it there as well<font color="#E5E5E5"> so this</font>

1236
00:43:46,540 --> 00:43:49,009
<font color="#E5E5E5">would not</font><font color="#CCCCCC"> only</font><font color="#E5E5E5"> be</font>

1237
00:43:47,390 --> 00:43:50,509
interpreter<font color="#E5E5E5"> but I guess</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> could run</font>

1238
00:43:49,010 --> 00:43:51,950
against<font color="#CCCCCC"> routers Floyd and give you</font>

1239
00:43:50,510 --> 00:43:55,339
<font color="#CCCCCC">different kinds of shelves in that sort</font>

1240
00:43:51,950 --> 00:43:57,618
<font color="#CCCCCC">of scenario so most as we learned from</font>

1241
00:43:55,339 --> 00:43:59,808
building this one you have to have<font color="#CCCCCC"> a</font>

1242
00:43:57,619 --> 00:44:01,640
need<font color="#E5E5E5"> I worked on this for probably a</font>

1243
00:43:59,809 --> 00:44:04,760
year<font color="#E5E5E5"> and</font><font color="#CCCCCC"> a half</font><font color="#E5E5E5"> without really knowing</font>

1244
00:44:01,640 --> 00:44:06,470
why<font color="#E5E5E5"> I needed it and when it came down</font><font color="#CCCCCC"> to</font>

1245
00:44:04,760 --> 00:44:08,930
<font color="#E5E5E5">like well actually we needed for this</font>

1246
00:44:06,470 --> 00:44:11,480
kind<font color="#CCCCCC"> of exploitation as useful here and</font>

1247
00:44:08,930 --> 00:44:12,558
there<font color="#CCCCCC"> then</font><font color="#E5E5E5"> suddenly the project we took</font>

1248
00:44:11,480 --> 00:44:14,269
<font color="#E5E5E5">off when we actually made</font><font color="#CCCCCC"> some</font><font color="#E5E5E5"> real</font>

1249
00:44:12,559 --> 00:44:15,349
<font color="#CCCCCC">progress on</font><font color="#E5E5E5"> it but you</font><font color="#CCCCCC"> really had to</font>

1250
00:44:14,269 --> 00:44:17,479
<font color="#E5E5E5">have a need to</font><font color="#CCCCCC"> sort of build</font><font color="#E5E5E5"> these sort</font>

1251
00:44:15,349 --> 00:44:19,849
of things<font color="#CCCCCC"> obviously</font><font color="#E5E5E5"> not reinventing the</font>

1252
00:44:17,480 --> 00:44:21,440
<font color="#E5E5E5">wheel generally good advice but in the</font>

1253
00:44:19,849 --> 00:44:24,160
case<font color="#E5E5E5"> of building exploitation</font>

1254
00:44:21,440 --> 00:44:26,960
you know tools it's even better because

1255
00:44:24,160 --> 00:44:28,788
<font color="#E5E5E5">it makes your tools look more normal</font><font color="#CCCCCC"> and</font>

1256
00:44:26,960 --> 00:44:31,579
basically work more normally<font color="#E5E5E5"> you save a</font>

1257
00:44:28,789 --> 00:44:34,000
<font color="#E5E5E5">lot</font><font color="#CCCCCC"> of time as well we</font><font color="#E5E5E5"> spent a lot of</font>

1258
00:44:31,579 --> 00:44:37,220
time<font color="#E5E5E5"> fixing existing stuff but sometimes</font>

1259
00:44:34,000 --> 00:44:40,220
<font color="#CCCCCC">just</font><font color="#E5E5E5"> making things new</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> the best way</font>

1260
00:44:37,220 --> 00:44:44,000
to go<font color="#E5E5E5"> and of course like I said normal</font>

1261
00:44:40,220 --> 00:44:50,029
better than clever<font color="#E5E5E5"> any day now for demos</font>

1262
00:44:44,000 --> 00:44:51,950
<font color="#CCCCCC">I sort of broke all my demos</font><font color="#E5E5E5"> here I do</font>

1263
00:44:50,029 --> 00:44:53,900
have<font color="#CCCCCC"> a whole bunch of</font><font color="#E5E5E5"> cool gear but I</font>

1264
00:44:51,950 --> 00:44:56,000
had some networking issues at the last

1265
00:44:53,900 --> 00:44:57,079
minute as you<font color="#E5E5E5"> might expect</font><font color="#CCCCCC"> I can</font>

1266
00:44:56,000 --> 00:44:59,839
actually show<font color="#CCCCCC"> you guys</font><font color="#E5E5E5"> what it looks</font>

1267
00:44:57,079 --> 00:45:01,910
<font color="#E5E5E5">like to sort of develop a load but</font>

1268
00:44:59,839 --> 00:45:12,519
before that<font color="#E5E5E5"> maybe I could take some</font>

1269
00:45:01,910 --> 00:45:12,519
questions<font color="#E5E5E5"> get heading all right yeah</font>

1270
00:45:17,829 --> 00:45:22,400
amount of<font color="#CCCCCC"> pearl</font>

1271
00:45:19,990 --> 00:45:23,209
yeah well that<font color="#CCCCCC"> actually allowed it comes</font>

1272
00:45:22,400 --> 00:45:26,599
from the<font color="#E5E5E5"> auto comp</font>

1273
00:45:23,210 --> 00:45:28,579
build system so yeah it's pretty funny

1274
00:45:26,599 --> 00:45:31,269
yeah it<font color="#CCCCCC"> Metasploit was originally</font>

1275
00:45:28,579 --> 00:45:33,200
written in Perl<font color="#CCCCCC"> as you remember and</font><font color="#E5E5E5"> so I</font>

1276
00:45:31,269 --> 00:45:34,819
don't<font color="#E5E5E5"> think any that's actually from</font>

1277
00:45:33,200 --> 00:45:36,230
<font color="#E5E5E5">that original bit of code but but yeah</font>

1278
00:45:34,819 --> 00:45:38,299
<font color="#E5E5E5">there's actually</font><font color="#CCCCCC"> not a</font><font color="#E5E5E5"> lot of Ruby in it</font>

1279
00:45:36,230 --> 00:45:40,000
either surprisingly<font color="#E5E5E5"> enough that's mostly</font>

1280
00:45:38,299 --> 00:45:42,619
<font color="#E5E5E5">just the library code that's required to</font>

1281
00:45:40,000 --> 00:45:44,359
to just you<font color="#E5E5E5"> know link it</font><font color="#CCCCCC"> into Metasploit</font>

1282
00:45:42,619 --> 00:45:46,460
it has a bunch<font color="#E5E5E5"> of basically just of a</font>

1283
00:45:44,359 --> 00:45:47,690
binary generator at that point so it

1284
00:45:46,460 --> 00:45:54,040
<font color="#E5E5E5">doesn't take</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> whole lot</font><font color="#CCCCCC"> of code to do</font>

1285
00:45:47,690 --> 00:45:56,650
<font color="#CCCCCC">that all right</font><font color="#E5E5E5"> well if</font><font color="#CCCCCC"> you guys</font>

1286
00:45:54,040 --> 00:45:58,840
<font color="#CCCCCC">want to ever get</font><font color="#E5E5E5"> into developing for</font>

1287
00:45:56,650 --> 00:46:01,900
this<font color="#E5E5E5"> you can actually check it out from</font>

1288
00:45:58,840 --> 00:46:02,830
github<font color="#E5E5E5"> rapid steps and</font><font color="#CCCCCC"> splash</font><font color="#E5E5E5"> metal and</font>

1289
00:46:01,900 --> 00:46:04,300
<font color="#E5E5E5">I'll show you a little bit</font><font color="#CCCCCC"> about what</font>

1290
00:46:02,830 --> 00:46:06,670
<font color="#CCCCCC">it's like to basically</font><font color="#E5E5E5"> to build it and</font>

1291
00:46:04,300 --> 00:46:08,590
install<font color="#CCCCCC"> it and</font><font color="#E5E5E5"> test it</font><font color="#CCCCCC"> so the first</font>

1292
00:46:06,670 --> 00:46:10,990
thing you want to do<font color="#E5E5E5"> when you when you</font>

1293
00:46:08,590 --> 00:46:12,700
check<font color="#E5E5E5"> out the source code is not a lot</font>

1294
00:46:10,990 --> 00:46:14,259
<font color="#CCCCCC">pretty</font><font color="#E5E5E5"> much all you have to do is check</font>

1295
00:46:12,700 --> 00:46:15,339
it out<font color="#CCCCCC"> in fact make you of course want</font>

1296
00:46:14,260 --> 00:46:16,480
<font color="#CCCCCC">to make sure you have a C compiler</font>

1297
00:46:15,340 --> 00:46:18,160
something like that installed but even

1298
00:46:16,480 --> 00:46:21,040
if you don't<font color="#E5E5E5"> I can actually show</font><font color="#CCCCCC"> you the</font>

1299
00:46:18,160 --> 00:46:23,170
read me file real quick<font color="#CCCCCC"> we have a lot of</font>

1300
00:46:21,040 --> 00:46:25,779
targets sort of<font color="#E5E5E5"> built in by default</font><font color="#CCCCCC"> that</font>

1301
00:46:23,170 --> 00:46:27,280
make it<font color="#E5E5E5"> really easy to get</font><font color="#CCCCCC"> started for</font>

1302
00:46:25,780 --> 00:46:29,620
instance all these targets up here are

1303
00:46:27,280 --> 00:46:31,300
built in<font color="#E5E5E5"> Linux targets the system will</font>

1304
00:46:29,620 --> 00:46:31,930
automatically download cross compilers

1305
00:46:31,300 --> 00:46:34,360
for<font color="#CCCCCC"> you</font>

1306
00:46:31,930 --> 00:46:37,149
we bootstrapped them<font color="#CCCCCC"> already</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> OS X</font>

1307
00:46:34,360 --> 00:46:39,400
<font color="#CCCCCC">for Linux we have a universal Linux</font><font color="#E5E5E5"> tool</font>

1308
00:46:37,150 --> 00:46:42,040
<font color="#E5E5E5">chain and for Windows</font><font color="#CCCCCC"> so you have to</font>

1309
00:46:39,400 --> 00:46:43,930
target<font color="#E5E5E5"> Linux from Windows you can build</font>

1310
00:46:42,040 --> 00:46:46,150
<font color="#E5E5E5">these payloads on</font><font color="#CCCCCC"> Windows</font><font color="#E5E5E5"> I like to</font>

1311
00:46:43,930 --> 00:46:48,940
<font color="#E5E5E5">build on OSX just because hey I've got a</font>

1312
00:46:46,150 --> 00:46:51,670
Mac right here<font color="#CCCCCC"> other things</font><font color="#E5E5E5"> to kind of</font>

1313
00:46:48,940 --> 00:46:53,640
note is that you can also target<font color="#CCCCCC"> windows</font>

1314
00:46:51,670 --> 00:46:56,290
will<font color="#E5E5E5"> easily using the mingw tool chain</font>

1315
00:46:53,640 --> 00:46:58,240
<font color="#CCCCCC">it's very</font><font color="#E5E5E5"> easy to</font><font color="#CCCCCC"> install on most Linux</font>

1316
00:46:56,290 --> 00:47:00,430
systems and I<font color="#E5E5E5"> bet also there on my Mac 2</font>

1317
00:46:58,240 --> 00:47:03,669
to the Mac homebrew<font color="#CCCCCC"> if you want to</font>

1318
00:47:00,430 --> 00:47:07,060
<font color="#E5E5E5">target iOS or or any of the other kind</font>

1319
00:47:03,670 --> 00:47:08,950
<font color="#E5E5E5">of systems Android can also be targeted</font>

1320
00:47:07,060 --> 00:47:10,690
<font color="#E5E5E5">natively</font><font color="#CCCCCC"> basically all you</font><font color="#E5E5E5"> have to do is</font>

1321
00:47:08,950 --> 00:47:12,460
figure out what<font color="#CCCCCC"> your host 2</font><font color="#E5E5E5"> plus and it</font>

1322
00:47:10,690 --> 00:47:14,680
will design<font color="#CCCCCC"> mclee build it so</font><font color="#E5E5E5"> I'm going</font>

1323
00:47:12,460 --> 00:47:20,770
<font color="#E5E5E5">to give you guys</font><font color="#CCCCCC"> a demonstration</font><font color="#E5E5E5"> of what</font>

1324
00:47:14,680 --> 00:47:22,149
the<font color="#E5E5E5"> build process looks like all the</font>

1325
00:47:20,770 --> 00:47:24,220
build files<font color="#CCCCCC"> actually get built</font><font color="#E5E5E5"> into</font><font color="#CCCCCC"> a</font>

1326
00:47:22,150 --> 00:47:25,660
build directory<font color="#E5E5E5"> so if you want to clean</font>

1327
00:47:24,220 --> 00:47:26,770
up<font color="#CCCCCC"> your project all you have to do is to</font>

1328
00:47:25,660 --> 00:47:29,379
salute the directory there's really

1329
00:47:26,770 --> 00:47:31,600
nothing else<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have to do and then I</font>

1330
00:47:29,380 --> 00:47:33,220
<font color="#E5E5E5">get</font><font color="#CCCCCC"> suicide make it also build</font>

1331
00:47:31,600 --> 00:47:35,200
everything from scratch

1332
00:47:33,220 --> 00:47:37,660
of course there's maybe a few warnings

1333
00:47:35,200 --> 00:47:40,210
here and there<font color="#CCCCCC"> push for OSX</font><font color="#E5E5E5"> but it</font>

1334
00:47:37,660 --> 00:47:41,470
builds really really<font color="#E5E5E5"> quickly</font><font color="#CCCCCC"> now go</font>

1335
00:47:40,210 --> 00:47:46,090
<font color="#CCCCCC">ahead and start</font><font color="#E5E5E5"> another terminal up here</font>

1336
00:47:41,470 --> 00:47:51,000
real quick give you an<font color="#CCCCCC"> idea how to test</font>

1337
00:47:46,090 --> 00:47:53,080
it<font color="#CCCCCC"> so</font><font color="#E5E5E5"> you see it's building curl it</font>

1338
00:47:51,000 --> 00:47:56,010
curls the longest part to<font color="#E5E5E5"> build as a</font>

1339
00:47:53,080 --> 00:47:56,009
whole process

1340
00:48:16,160 --> 00:48:22,500
basically<font color="#CCCCCC"> what's doing under the covers</font>

1341
00:48:18,059 --> 00:48:24,599
here<font color="#CCCCCC"> in case you</font><font color="#E5E5E5"> want to see is it's</font>

1342
00:48:22,500 --> 00:48:27,450
actually<font color="#E5E5E5"> writing stuff to the log mostly</font>

1343
00:48:24,599 --> 00:48:32,210
all the<font color="#E5E5E5"> boring stuff just gets</font><font color="#CCCCCC"> piped</font>

1344
00:48:27,450 --> 00:48:32,210
away so you don't<font color="#CCCCCC"> have to watch it</font><font color="#E5E5E5"> to</font>

1345
00:48:35,839 --> 00:48:39,589
<font color="#CCCCCC">build that log files so if you want</font>

1346
00:48:37,920 --> 00:48:41,730
something<font color="#E5E5E5"> to watch</font><font color="#CCCCCC"> ball</font><font color="#E5E5E5"> while you're</font>

1347
00:48:39,589 --> 00:48:43,650
you're waiting you can<font color="#CCCCCC"> definitely just</font>

1348
00:48:41,730 --> 00:48:45,539
<font color="#CCCCCC">tale the build file you get</font><font color="#E5E5E5"> to build all</font>

1349
00:48:43,650 --> 00:48:47,339
<font color="#CCCCCC">your architecture simultaneously</font><font color="#E5E5E5"> so if</font>

1350
00:48:45,539 --> 00:48:49,470
you like to use<font color="#E5E5E5"> a ball your battery or</font>

1351
00:48:47,339 --> 00:48:51,538
<font color="#E5E5E5">you know</font><font color="#CCCCCC"> roll your</font><font color="#E5E5E5"> fan spinning you can</font>

1352
00:48:49,470 --> 00:48:55,640
<font color="#CCCCCC">build</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> twenty different</font><font color="#E5E5E5"> architectures</font>

1353
00:48:51,539 --> 00:48:55,640
all at the same<font color="#E5E5E5"> time</font><font color="#CCCCCC"> and it'll just work</font>

1354
00:48:55,910 --> 00:49:07,740
well that's going I'll go ahead and get

1355
00:48:58,799 --> 00:49:09,720
<font color="#CCCCCC">Metasploit going we have something</font>

1356
00:49:07,740 --> 00:49:12,660
<font color="#CCCCCC">really cool and Metasploit called the</font>

1357
00:49:09,720 --> 00:49:13,950
the multi payload and actually I'll<font color="#E5E5E5"> just</font>

1358
00:49:12,660 --> 00:49:22,109
get started<font color="#CCCCCC"> I'll show you what</font><font color="#E5E5E5"> this what</font>

1359
00:49:13,950 --> 00:49:24,328
this<font color="#E5E5E5"> does so for the purpose of testing</font>

1360
00:49:22,109 --> 00:49:25,619
and evaluating a lot of times you have

1361
00:49:24,329 --> 00:49:27,119
<font color="#E5E5E5">to get the right architecture the right</font>

1362
00:49:25,619 --> 00:49:29,369
operating system<font color="#CCCCCC"> or</font><font color="#E5E5E5"> thing for an</font>

1363
00:49:27,119 --> 00:49:32,130
interpreter<font color="#E5E5E5"> but we have we</font><font color="#CCCCCC"> added</font><font color="#E5E5E5"> last</font>

1364
00:49:29,369 --> 00:49:38,490
<font color="#E5E5E5">year a special payload called multi</font><font color="#CCCCCC"> Halo</font>

1365
00:49:32,130 --> 00:49:41,099
multi interpreter reverse<font color="#CCCCCC"> HTTP</font><font color="#E5E5E5"> and what</font>

1366
00:49:38,490 --> 00:49:51,508
this<font color="#E5E5E5"> guy does this is pretty cool let's</font>

1367
00:49:41,099 --> 00:49:54,569
see<font color="#E5E5E5"> that type of</font><font color="#CCCCCC"> clone there you go I'm</font>

1368
00:49:51,509 --> 00:49:56,490
sure how I<font color="#E5E5E5"> type it differently</font><font color="#CCCCCC"> basically</font>

1369
00:49:54,569 --> 00:49:58,680
what this is it's kind of a cool magical

1370
00:49:56,490 --> 00:50:00,538
payload that<font color="#E5E5E5"> automatically does the</font>

1371
00:49:58,680 --> 00:50:05,910
right thing<font color="#CCCCCC"> for any particular incoming</font>

1372
00:50:00,539 --> 00:50:11,599
connection so get that guy<font color="#CCCCCC"> and if I were</font>

1373
00:50:05,910 --> 00:50:11,598
<font color="#E5E5E5">to set my host</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> I don't know move back</font>

1374
00:50:17,150 --> 00:50:26,539
we've got a handler listening we're just

1375
00:50:19,670 --> 00:50:30,740
<font color="#E5E5E5">about done building</font><font color="#CCCCCC"> alright</font><font color="#E5E5E5"> we're done</font>

1376
00:50:26,539 --> 00:50:32,900
<font color="#CCCCCC">still</font><font color="#E5E5E5"> Darwin bin metal it actually has a</font>

1377
00:50:30,740 --> 00:50:34,308
friendly help screen so you<font color="#E5E5E5"> can actually</font>

1378
00:50:32,900 --> 00:50:35,599
reconfigure it on the fly without and go

1379
00:50:34,309 --> 00:50:38,059
through<font color="#E5E5E5"> myself in them</font><font color="#CCCCCC"> which</font><font color="#E5E5E5"> saves a lot</font>

1380
00:50:35,599 --> 00:50:41,749
of time for debug you turn on debug and

1381
00:50:38,059 --> 00:50:42,650
sets a debug level maybe<font color="#E5E5E5"> to</font><font color="#CCCCCC"> excel your</font>

1382
00:50:41,749 --> 00:50:49,879
eye<font color="#E5E5E5"> as well</font>

1383
00:50:42,650 --> 00:50:51,289
let's do HTTP<font color="#CCCCCC"> page score for</font><font color="#E5E5E5"> three you</font>

1384
00:50:49,880 --> 00:50:52,549
can write<font color="#CCCCCC"> right to all the output to a</font>

1385
00:50:51,289 --> 00:50:54,529
file you can<font color="#CCCCCC"> run in the background you</font>

1386
00:50:52,549 --> 00:50:58,099
can automate the install<font color="#E5E5E5"> for systems as</font>

1387
00:50:54,529 --> 00:51:03,079
well<font color="#CCCCCC"> lots of uses</font><font color="#E5E5E5"> up so here we go</font>

1388
00:50:58,099 --> 00:51:23,420
Bruce<font color="#E5E5E5"> develop level arm let's see this</font>

1389
00:51:03,079 --> 00:51:46,029
<font color="#CCCCCC">switch</font><font color="#E5E5E5"> this real quick oh shoot I know I</font>

1390
00:51:23,420 --> 00:51:49,130
did wrong<font color="#E5E5E5"> for a second</font><font color="#CCCCCC"> there you go</font>

1391
00:51:46,029 --> 00:51:50,660
<font color="#E5E5E5">alright</font><font color="#CCCCCC"> so anyway that was just</font><font color="#E5E5E5"> a quick</font>

1392
00:51:49,130 --> 00:51:52,460
demonstration of getting the payload up

1393
00:51:50,660 --> 00:51:54,410
and running for debug purposes over<font color="#E5E5E5"> here</font>

1394
00:51:52,460 --> 00:51:55,700
you can see it actually kind of<font color="#CCCCCC"> merely</font>

1395
00:51:54,410 --> 00:51:58,519
<font color="#E5E5E5">spitting out all kinds of different</font>

1396
00:51:55,700 --> 00:52:01,489
output over<font color="#E5E5E5"> here and then here we've got</font>

1397
00:51:58,519 --> 00:52:11,379
a shell<font color="#E5E5E5"> on a low sex box</font>

1398
00:52:01,489 --> 00:52:19,369
<font color="#E5E5E5">here's PS</font><font color="#CCCCCC"> here is LS on</font><font color="#E5E5E5"> C webcam lists</font>

1399
00:52:11,380 --> 00:52:21,789
snapshot<font color="#CCCCCC"> I</font><font color="#E5E5E5"> go so</font><font color="#CCCCCC"> alright that's it</font>

1400
00:52:19,369 --> 00:52:21,789
<font color="#E5E5E5">thanks guys</font>

1401
00:52:22,490 --> 00:52:24,549
you

