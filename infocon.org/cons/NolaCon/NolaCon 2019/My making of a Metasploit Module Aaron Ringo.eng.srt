1
00:00:00,000 --> 00:00:04,500
I'm making of a Metasploit module do we

2
00:00:02,669 --> 00:00:09,719
have any developers out there full-time

3
00:00:04,500 --> 00:00:15,240
developers raise a hand no good do we

4
00:00:09,719 --> 00:00:16,529
have any rapid7 guys also good do you

5
00:00:15,240 --> 00:00:20,160
have anyone who's made a Metasploit

6
00:00:16,529 --> 00:00:20,580
module one guy all right it's my kind of

7
00:00:20,160 --> 00:00:25,500
crowd

8
00:00:20,580 --> 00:00:27,589
I made a Metasploit module and when I

9
00:00:25,500 --> 00:00:30,390
was telling people at me admissible they

10
00:00:27,590 --> 00:00:32,850
were like how how do I make a Metasploit

11
00:00:30,390 --> 00:00:35,820
module and I don't have a blog or any

12
00:00:32,850 --> 00:00:37,920
really anything at all so I thought I

13
00:00:35,820 --> 00:00:43,800
would do a talk on it in the process

14
00:00:37,920 --> 00:00:46,860
that I took who I am NOT I am NOT rapid7

15
00:00:43,800 --> 00:00:48,629
I talked to two rapid7 people to tell

16
00:00:46,860 --> 00:00:51,120
him I was gonna do this and I got some

17
00:00:48,629 --> 00:00:56,449
stickers and some socks and I'm wearing

18
00:00:51,120 --> 00:00:59,489
the socks I'm not a paid developer so

19
00:00:56,449 --> 00:01:02,550
definitely not paid by them my name is

20
00:00:59,489 --> 00:01:05,429
Ringo and this is my Twitter my LinkedIn

21
00:01:02,550 --> 00:01:08,908
I'm in the Air Force at keys ler where

22
00:01:05,430 --> 00:01:11,760
we have a kind of intro to cyber school

23
00:01:08,909 --> 00:01:13,380
where we teach people who don't come

24
00:01:11,760 --> 00:01:14,790
from a cyber background the basic so we

25
00:01:13,380 --> 00:01:17,548
can get them going doing offensive and

26
00:01:14,790 --> 00:01:19,740
defensive cyber operations that's the

27
00:01:17,549 --> 00:01:21,270
angle but we're just the beginning and I

28
00:01:19,740 --> 00:01:25,830
don't bug bounty much but when i do i

29
00:01:21,270 --> 00:01:28,229
Cenac this project was my first time

30
00:01:25,830 --> 00:01:31,048
using it for more than just pulling

31
00:01:28,229 --> 00:01:33,840
stuff down it's made for collaboration

32
00:01:31,049 --> 00:01:36,150
and I did not use it like that before I

33
00:01:33,840 --> 00:01:37,560
would just clone stuff maybe back up my

34
00:01:36,150 --> 00:01:41,280
own stuff it was like a free backup

35
00:01:37,560 --> 00:01:43,259
service and saying that I know there

36
00:01:41,280 --> 00:01:47,340
might be a better way to do some of this

37
00:01:43,259 --> 00:01:49,159
stuff it's just how I did it what I'll

38
00:01:47,340 --> 00:01:51,299
cover a quick overview of the framework

39
00:01:49,159 --> 00:01:54,119
why you might want to contribute to the

40
00:01:51,299 --> 00:01:56,310
framework my module in particular the

41
00:01:54,119 --> 00:01:58,549
dev environment setup needed just enough

42
00:01:56,310 --> 00:02:01,020
get to get through it pun intended

43
00:01:58,549 --> 00:02:02,750
module testing and putting in a pull

44
00:02:01,020 --> 00:02:05,460
request

45
00:02:02,750 --> 00:02:08,639
what's Metasploit does anyone here not

46
00:02:05,460 --> 00:02:09,449
know what Metasploit is and that's one

47
00:02:08,639 --> 00:02:10,348
of the reason you might want to

48
00:02:09,449 --> 00:02:12,359
contribute right there

49
00:02:10,348 --> 00:02:13,530
no hands went up either cuz you're shy

50
00:02:12,360 --> 00:02:15,600
or whatever but

51
00:02:13,530 --> 00:02:17,550
boy is what we start our guys out with

52
00:02:15,600 --> 00:02:19,859
when we want them to be introduced to an

53
00:02:17,550 --> 00:02:22,650
offensive framework it is what most pen

54
00:02:19,860 --> 00:02:24,450
testers it's the first tool they usually

55
00:02:22,650 --> 00:02:27,110
use and it might be the last tool they

56
00:02:24,450 --> 00:02:29,100
use because you can do a lot with it

57
00:02:27,110 --> 00:02:31,380
there's some other reasons you might

58
00:02:29,100 --> 00:02:32,880
want to contribute when you make a

59
00:02:31,380 --> 00:02:34,140
module when you start putting stuff out

60
00:02:32,880 --> 00:02:36,650
there and even if you don't just make a

61
00:02:34,140 --> 00:02:39,238
module just making things making a blog

62
00:02:36,650 --> 00:02:41,790
doing a talk and you don't know where

63
00:02:39,239 --> 00:02:43,110
it's gonna lead because you make it and

64
00:02:41,790 --> 00:02:44,880
the good thing about a module is you

65
00:02:43,110 --> 00:02:46,290
make it and you're done it's not some

66
00:02:44,880 --> 00:02:48,840
project that you have to keep

67
00:02:46,290 --> 00:02:51,390
maintaining I did my module it's done

68
00:02:48,840 --> 00:02:52,620
now a future employer anyone can go look

69
00:02:51,390 --> 00:02:53,579
at it and it's going to be there and

70
00:02:52,620 --> 00:02:56,040
they're like oh this guy has some

71
00:02:53,580 --> 00:02:57,959
experience making things and as I said

72
00:02:56,040 --> 00:03:00,090
you don't know what's going to lead mine

73
00:02:57,959 --> 00:03:04,860
I got a talk out of it and that's pretty

74
00:03:00,090 --> 00:03:07,560
cool a free training I know buddy said

75
00:03:04,860 --> 00:03:13,410
they were a paid developer how much

76
00:03:07,560 --> 00:03:15,600
would it cost to get core people from

77
00:03:13,410 --> 00:03:19,070
the Metasploit framework to give you

78
00:03:15,600 --> 00:03:22,739
training on the framework probably a lot

79
00:03:19,070 --> 00:03:24,359
this is free you just start working with

80
00:03:22,739 --> 00:03:27,180
them and they will help you out and

81
00:03:24,360 --> 00:03:31,049
that's awesome you learn how the sausage

82
00:03:27,180 --> 00:03:34,950
is made by making it you if you're an

83
00:03:31,049 --> 00:03:36,360
SEO guy and maybe say they there's a new

84
00:03:34,950 --> 00:03:38,458
version of software out there but the

85
00:03:36,360 --> 00:03:40,350
module that's that is in the framework

86
00:03:38,459 --> 00:03:42,959
is not it does not work with that

87
00:03:40,350 --> 00:03:44,730
software if you know how it works you

88
00:03:42,959 --> 00:03:46,170
can get in there you can change it and

89
00:03:44,730 --> 00:03:47,910
maybe you can get on that target that

90
00:03:46,170 --> 00:03:49,708
you wouldn't been able to do before

91
00:03:47,910 --> 00:03:52,650
there's a lot of reasons to want to know

92
00:03:49,709 --> 00:03:54,450
how the framework works more reasons to

93
00:03:52,650 --> 00:03:57,180
contribute low barrier to entry

94
00:03:54,450 --> 00:03:59,250
this is modular code it's very easy to

95
00:03:57,180 --> 00:04:01,920
use and there's lots of example code out

96
00:03:59,250 --> 00:04:04,560
there it's a double-edged sword because

97
00:04:01,920 --> 00:04:07,470
it's been around for a while in 2007

98
00:04:04,560 --> 00:04:09,989
they redid it with Ruby and you might

99
00:04:07,470 --> 00:04:11,640
want to steal from the the newer stuff

100
00:04:09,989 --> 00:04:13,049
is what I'm trying to say there's a

101
00:04:11,640 --> 00:04:15,779
place for you it's a very large project

102
00:04:13,049 --> 00:04:18,539
they have things that they'll tag newbie

103
00:04:15,780 --> 00:04:20,010
friendly so just starting out and even

104
00:04:18,539 --> 00:04:22,530
documentation stuff like that like if

105
00:04:20,010 --> 00:04:24,630
you read a module and it does not have

106
00:04:22,530 --> 00:04:26,250
all right this didn't work in this

107
00:04:24,630 --> 00:04:27,450
situation you can update that once you

108
00:04:26,250 --> 00:04:31,800
know the process of get

109
00:04:27,450 --> 00:04:34,560
all that and Metasploit sup for it this

110
00:04:31,800 --> 00:04:36,410
was oh gee who's awesome complaining

111
00:04:34,560 --> 00:04:39,630
about people complaining about

112
00:04:36,410 --> 00:04:41,070
Metasploit people would say this doesn't

113
00:04:39,630 --> 00:04:44,100
work or this isn't good enough or what

114
00:04:41,070 --> 00:04:46,560
it is open source you can make it the

115
00:04:44,100 --> 00:04:51,720
framework you want it to be it's really

116
00:04:46,560 --> 00:04:54,000
up to you ask questions there is the

117
00:04:51,720 --> 00:04:56,400
slack channel that you can go to and ask

118
00:04:54,000 --> 00:05:00,390
questions of the developers but you want

119
00:04:56,400 --> 00:05:01,830
to be in the contributor Channel and the

120
00:05:00,390 --> 00:05:03,690
general Channel what you're gonna get is

121
00:05:01,830 --> 00:05:05,940
you're gonna get guys saying hey I

122
00:05:03,690 --> 00:05:08,670
install it and I installed Metasploit on

123
00:05:05,940 --> 00:05:10,170
my windows box and I'm generating the

124
00:05:08,670 --> 00:05:12,360
payloads and windows of defenders eating

125
00:05:10,170 --> 00:05:13,740
it can you help me out and unless you

126
00:05:12,360 --> 00:05:18,980
want to provide support for that I would

127
00:05:13,740 --> 00:05:18,980
stick to the contributor channel the IRC

128
00:05:19,280 --> 00:05:30,000
whose HD more so pretty famous I think

129
00:05:28,170 --> 00:05:34,380
he's on the top 10 most well-known

130
00:05:30,000 --> 00:05:38,850
hackers they have an IRC chat I went

131
00:05:34,380 --> 00:05:40,620
into the IRC chat and for my code

132
00:05:38,850 --> 00:05:44,760
someone had posted under it they put

133
00:05:40,620 --> 00:05:47,130
Jenkins test this please and I googled

134
00:05:44,760 --> 00:05:48,990
it what the hell is a Jenkins test how

135
00:05:47,130 --> 00:05:52,860
do I do this Jenkins test that this

136
00:05:48,990 --> 00:05:55,530
guy's asking for and I could not find a

137
00:05:52,860 --> 00:05:56,790
solution and I went into IRC and I'm

138
00:05:55,530 --> 00:05:59,760
like yo

139
00:05:56,790 --> 00:06:03,600
someone said Jenkins test the code how

140
00:05:59,760 --> 00:06:05,730
do I do that what is that an HD more is

141
00:06:03,600 --> 00:06:06,990
the one that replied and said oh man

142
00:06:05,730 --> 00:06:08,640
that's just like running some checks

143
00:06:06,990 --> 00:06:11,040
it's automatic like they just type that

144
00:06:08,640 --> 00:06:12,450
under the code and then github will

145
00:06:11,040 --> 00:06:14,520
automatically test it to make sure it

146
00:06:12,450 --> 00:06:17,460
doesn't break the framework that's like

147
00:06:14,520 --> 00:06:19,500
asking like a celebrity where the

148
00:06:17,460 --> 00:06:24,359
bathroom is to me so that was that was

149
00:06:19,500 --> 00:06:26,490
my brush with greatness so you don't

150
00:06:24,360 --> 00:06:27,690
know what you're gonna get the IRC isn't

151
00:06:26,490 --> 00:06:29,100
as active though because it's a lot of

152
00:06:27,690 --> 00:06:30,600
people with like their BOTS listening

153
00:06:29,100 --> 00:06:34,380
and it just seems to pipe up now and

154
00:06:30,600 --> 00:06:36,330
then Metasploit directories if you

155
00:06:34,380 --> 00:06:38,760
haven't looked at them right if you have

156
00:06:36,330 --> 00:06:41,370
here's a refresher the Lib is where the

157
00:06:38,760 --> 00:06:42,719
libraries are that's where the

158
00:06:41,370 --> 00:06:44,250
magic kind of happens because you can

159
00:06:42,720 --> 00:06:46,560
import these things and bring them into

160
00:06:44,250 --> 00:06:49,020
your code and it will do what you need

161
00:06:46,560 --> 00:06:50,250
to do like if you want to put a file on

162
00:06:49,020 --> 00:06:51,780
a system there's something called file

163
00:06:50,250 --> 00:06:53,340
dropper and you just make sure that's

164
00:06:51,780 --> 00:06:55,948
there and then you can drop files on a

165
00:06:53,340 --> 00:06:58,710
system module so this is where all your

166
00:06:55,949 --> 00:07:00,930
codes gonna actually go encoders and ops

167
00:06:58,710 --> 00:07:02,250
payloads post auxilary exploits that's

168
00:07:00,930 --> 00:07:04,500
where it goes along with the

169
00:07:02,250 --> 00:07:07,320
documentation and stuff tools that's

170
00:07:04,500 --> 00:07:08,550
more for exploit development like buffer

171
00:07:07,320 --> 00:07:09,570
overflows and stuff like that but

172
00:07:08,550 --> 00:07:10,169
there's some other stuff in there that

173
00:07:09,570 --> 00:07:12,810
can help you

174
00:07:10,169 --> 00:07:14,789
I kind of didn't mess with that much now

175
00:07:12,810 --> 00:07:17,070
plugins this is where the stuff is that

176
00:07:14,789 --> 00:07:18,449
extends the Metasploit framework so as

177
00:07:17,070 --> 00:07:20,430
an example if you wanted to work with

178
00:07:18,449 --> 00:07:22,820
necess or something like that that's

179
00:07:20,430 --> 00:07:27,389
where you'd put the the plug-in scripts

180
00:07:22,820 --> 00:07:29,580
this is where the old stuff was if the

181
00:07:27,389 --> 00:07:33,690
the good reason about to know this one

182
00:07:29,580 --> 00:07:36,030
is that the code that is there it's the

183
00:07:33,690 --> 00:07:39,210
original the original module so to speak

184
00:07:36,030 --> 00:07:41,820
so a lot of the popular stuff is is in

185
00:07:39,210 --> 00:07:43,888
that scripts folder but it's like super

186
00:07:41,820 --> 00:07:45,300
old code you do not want to be stealing

187
00:07:43,889 --> 00:07:46,530
from there and they don't let you

188
00:07:45,300 --> 00:07:49,349
contribute to the scripts folder anymore

189
00:07:46,530 --> 00:07:51,210
everything's at modules but that's where

190
00:07:49,349 --> 00:07:53,099
it is so something's broken and it's old

191
00:07:51,210 --> 00:07:58,109
it might be in that folders what I'm

192
00:07:53,099 --> 00:08:03,450
trying to say my first module xorg Prive

193
00:07:58,110 --> 00:08:07,410
esque X org is a set UID program and the

194
00:08:03,450 --> 00:08:10,020
previs was where you start X org which

195
00:08:07,410 --> 00:08:13,320
will give you a desktop to look at and

196
00:08:10,020 --> 00:08:17,539
you could pick where the log file was

197
00:08:13,320 --> 00:08:20,190
going to go and the thing about that is

198
00:08:17,539 --> 00:08:21,750
since it's su it's running as root you

199
00:08:20,190 --> 00:08:25,440
can overwrite other files on the system

200
00:08:21,750 --> 00:08:27,930
and you can tell it something that's

201
00:08:25,440 --> 00:08:30,990
incorrect it's displaying something you

202
00:08:27,930 --> 00:08:34,919
could say I want to display the frame

203
00:08:30,990 --> 00:08:36,959
size of my exploit code and it will

204
00:08:34,919 --> 00:08:39,689
write your exploit code to the log

205
00:08:36,958 --> 00:08:41,369
because that is not a valid frame size

206
00:08:39,690 --> 00:08:43,020
or whatever it is so that is how you get

207
00:08:41,370 --> 00:08:45,209
your code into the file that it's

208
00:08:43,020 --> 00:08:47,040
overwriting and there's a couple ways

209
00:08:45,209 --> 00:08:48,599
that people were exploiting this they

210
00:08:47,040 --> 00:08:50,430
were overriding password which is super

211
00:08:48,600 --> 00:08:53,860
sketch and then I saw that some

212
00:08:50,430 --> 00:08:55,660
gentleman had overwritten in the crontab

213
00:08:53,860 --> 00:08:58,750
and that seemed to work it didn't really

214
00:08:55,660 --> 00:08:59,829
crash anything and so I was like I like

215
00:08:58,750 --> 00:09:01,990
that one but I want to see what

216
00:08:59,830 --> 00:09:06,310
Metasploit using I went to the github

217
00:09:01,990 --> 00:09:08,170
hey I didn't see any anything is this

218
00:09:06,310 --> 00:09:10,180
crickets for the the code I looked in

219
00:09:08,170 --> 00:09:11,589
the PRS the pull request that's where

220
00:09:10,180 --> 00:09:13,120
you the people put the code that they

221
00:09:11,590 --> 00:09:17,200
want to integrate into Metasploit

222
00:09:13,120 --> 00:09:20,410
nothing and I thought to myself well I

223
00:09:17,200 --> 00:09:22,120
should make it and I did I spent about

224
00:09:20,410 --> 00:09:24,280
four hours making and testing a module

225
00:09:22,120 --> 00:09:26,710
now that's from setting up the dev

226
00:09:24,280 --> 00:09:30,069
environment to building a test box

227
00:09:26,710 --> 00:09:32,980
that's how quick it was the sad thing

228
00:09:30,070 --> 00:09:34,780
about it is I tried to I was like oh so

229
00:09:32,980 --> 00:09:35,920
now I have it I'm trying to put it in

230
00:09:34,780 --> 00:09:38,589
the project because that'd be cool

231
00:09:35,920 --> 00:09:40,390
because I'm an instructor and I could

232
00:09:38,590 --> 00:09:42,250
tell the students like oh type my name

233
00:09:40,390 --> 00:09:43,750
you're gonna come up with a module how

234
00:09:42,250 --> 00:09:47,890
cool is that

235
00:09:43,750 --> 00:09:50,950
but when I first failed at putting it on

236
00:09:47,890 --> 00:09:54,610
github which was great it's okay to fail

237
00:09:50,950 --> 00:09:56,610
I learned a lot and I finally got it up

238
00:09:54,610 --> 00:09:58,780
there and then I had a hundred comments

239
00:09:56,610 --> 00:10:00,340
but they weren't like good comments

240
00:09:58,780 --> 00:10:01,720
they're like you could totally do this

241
00:10:00,340 --> 00:10:03,730
better if you did this they're

242
00:10:01,720 --> 00:10:06,400
constructive but there's a lot of them

243
00:10:03,730 --> 00:10:08,620
is just a barrage of comments and I I

244
00:10:06,400 --> 00:10:11,800
learned a lot there they're pretty

245
00:10:08,620 --> 00:10:14,170
helpful I'm looking at a module they

246
00:10:11,800 --> 00:10:15,550
have a simple layout copying will bring

247
00:10:14,170 --> 00:10:18,010
your work down this is how kinda I was

248
00:10:15,550 --> 00:10:20,050
able to do this whole thing in four

249
00:10:18,010 --> 00:10:21,580
hours now notice I didn't say that that

250
00:10:20,050 --> 00:10:22,959
was the completed module that was my

251
00:10:21,580 --> 00:10:26,290
initial submission it took a lot longer

252
00:10:22,960 --> 00:10:27,940
to get a completed module but you can

253
00:10:26,290 --> 00:10:29,140
copy you can just look for something

254
00:10:27,940 --> 00:10:31,450
that is similar to the code that you

255
00:10:29,140 --> 00:10:33,400
want to do I wanted to do a premise so I

256
00:10:31,450 --> 00:10:35,980
looked at other professed codes copied

257
00:10:33,400 --> 00:10:39,160
over one of those renamed it mine I

258
00:10:35,980 --> 00:10:39,820
liked that that comic this is mine so

259
00:10:39,160 --> 00:10:42,550
that's what I did

260
00:10:39,820 --> 00:10:44,200
Ruby I told people I made a Metasploit

261
00:10:42,550 --> 00:10:46,990
module and they're like oh you must be

262
00:10:44,200 --> 00:10:50,080
awesome with Ruby I do not know Ruby I

263
00:10:46,990 --> 00:10:52,000
know Python so when I looked at the Ruby

264
00:10:50,080 --> 00:10:54,190
code I was like well this kind of like

265
00:10:52,000 --> 00:10:58,780
Python and then I kind of just stole the

266
00:10:54,190 --> 00:11:03,220
rest I don't know you can do external

267
00:10:58,780 --> 00:11:05,890
modules in Python and didn't go but that

268
00:11:03,220 --> 00:11:07,420
is restrained because there's less

269
00:11:05,890 --> 00:11:09,640
examples and

270
00:11:07,420 --> 00:11:13,900
you cannot do all of the module types

271
00:11:09,640 --> 00:11:16,840
with those my approach was the grep and

272
00:11:13,900 --> 00:11:19,600
steel approach for most of it I would

273
00:11:16,840 --> 00:11:21,370
know kind of what I wanted to do and I

274
00:11:19,600 --> 00:11:23,260
would just grep across all of the stuff

275
00:11:21,370 --> 00:11:24,700
for code that did something like that

276
00:11:23,260 --> 00:11:28,750
and then I would just integrate it into

277
00:11:24,700 --> 00:11:30,880
my module but that came with its own

278
00:11:28,750 --> 00:11:34,480
little challenges and also a kind of

279
00:11:30,880 --> 00:11:38,080
kind of funny story there's a something

280
00:11:34,480 --> 00:11:41,140
you can do called wfs delay and what

281
00:11:38,080 --> 00:11:45,120
that does is it will make your listener

282
00:11:41,140 --> 00:11:45,120
start after a certain amount of time and

283
00:11:45,360 --> 00:11:50,440
be Cole's who is the gentleman at rapid7

284
00:11:48,100 --> 00:11:53,230
who helped me make this module he

285
00:11:50,440 --> 00:11:55,600
mentored me he said oh you're gonna want

286
00:11:53,230 --> 00:11:57,220
to use that and so I went to my grandpa

287
00:11:55,600 --> 00:12:00,190
proach I wanted to see well how has

288
00:11:57,220 --> 00:12:03,670
someone else used this and I gripped but

289
00:12:00,190 --> 00:12:06,730
instead of wfs delay I type wsf delay

290
00:12:03,670 --> 00:12:09,729
and I hit enter guess what two hits

291
00:12:06,730 --> 00:12:12,520
which is really low for something that

292
00:12:09,730 --> 00:12:14,230
you'd think be popular and I started

293
00:12:12,520 --> 00:12:16,630
reading through the code to see how they

294
00:12:14,230 --> 00:12:19,300
had used it and there was a comment and

295
00:12:16,630 --> 00:12:21,910
the comment said this sleep thing don't

296
00:12:19,300 --> 00:12:24,040
work or something like that because they

297
00:12:21,910 --> 00:12:26,459
had typed it wrong when they made the

298
00:12:24,040 --> 00:12:28,870
module and somehow that module got past

299
00:12:26,460 --> 00:12:31,720
everything and was in the framework so

300
00:12:28,870 --> 00:12:34,510
by just looking I was able to help find

301
00:12:31,720 --> 00:12:36,430
and fix another module because I type

302
00:12:34,510 --> 00:12:41,920
out something that's kind of interesting

303
00:12:36,430 --> 00:12:43,870
a basic module structure you're gonna

304
00:12:41,920 --> 00:12:45,370
have whatever libraries you're importing

305
00:12:43,870 --> 00:12:47,680
at the top and then you're gonna have

306
00:12:45,370 --> 00:12:48,820
the information about the module you can

307
00:12:47,680 --> 00:12:49,959
just pull them up and look at them

308
00:12:48,820 --> 00:12:52,210
they're they're pretty easy to

309
00:12:49,960 --> 00:12:54,100
understand what's going on most of the

310
00:12:52,210 --> 00:12:57,940
module is just that top information part

311
00:12:54,100 --> 00:13:02,530
that's like putting what it does your

312
00:12:57,940 --> 00:13:03,730
name CDE and it's all mostly boilerplate

313
00:13:02,530 --> 00:13:05,230
so when you steal from something else

314
00:13:03,730 --> 00:13:07,390
you just copy it over make a little

315
00:13:05,230 --> 00:13:09,490
skeleton fill in your information that

316
00:13:07,390 --> 00:13:11,380
is most of the modules when you look at

317
00:13:09,490 --> 00:13:13,150
the modules there's not much code under

318
00:13:11,380 --> 00:13:15,250
them it's almost all just that what is

319
00:13:13,150 --> 00:13:16,689
this and what does it do because they're

320
00:13:15,250 --> 00:13:18,940
modular they're importing a lot of that

321
00:13:16,690 --> 00:13:21,260
other code from other other places in

322
00:13:18,940 --> 00:13:23,810
some of it there's a Czech section

323
00:13:21,260 --> 00:13:26,390
that's for to make sure that that host

324
00:13:23,810 --> 00:13:27,949
or whatever you're throwing it at is

325
00:13:26,390 --> 00:13:30,770
vulnerable but that's not in everything

326
00:13:27,950 --> 00:13:32,030
there's also an exploit run section and

327
00:13:30,770 --> 00:13:36,110
that's that's where the meat and

328
00:13:32,030 --> 00:13:39,530
potatoes is of your code now I said I

329
00:13:36,110 --> 00:13:41,740
did not know Ruby I picked some stuff up

330
00:13:39,530 --> 00:13:44,180
I mean I had to to get it to work I

331
00:13:41,740 --> 00:13:46,220
learned what a data store is so when you

332
00:13:44,180 --> 00:13:49,069
as an example you might define something

333
00:13:46,220 --> 00:13:51,260
up at the top a writable directory I

334
00:13:49,070 --> 00:13:53,090
could do a writable directory of my data

335
00:13:51,260 --> 00:13:54,290
store and then someone would come into

336
00:13:53,090 --> 00:13:57,470
the module and they would set that

337
00:13:54,290 --> 00:13:59,719
writable directory and I could access it

338
00:13:57,470 --> 00:14:02,030
through this data store part so I could

339
00:13:59,720 --> 00:14:03,590
make a variable equals data store and

340
00:14:02,030 --> 00:14:05,810
then whatever that option was that I

341
00:14:03,590 --> 00:14:07,580
defined above so this would be data

342
00:14:05,810 --> 00:14:09,260
store writable directory maybe I'd

343
00:14:07,580 --> 00:14:12,470
assign it to a variable called writable

344
00:14:09,260 --> 00:14:15,560
directory then I learned about string

345
00:14:12,470 --> 00:14:17,360
interpolation in Ruby which is similar

346
00:14:15,560 --> 00:14:19,459
to pythons F strings because like I said

347
00:14:17,360 --> 00:14:22,940
I know Python so that's kind of how I

348
00:14:19,460 --> 00:14:24,860
did that and you just it needs double

349
00:14:22,940 --> 00:14:26,930
quotes so you just need double quotes

350
00:14:24,860 --> 00:14:28,850
and then you put a hash and braces and

351
00:14:26,930 --> 00:14:30,910
then your variable name and you can fill

352
00:14:28,850 --> 00:14:34,280
out whatever you want to put there and

353
00:14:30,910 --> 00:14:35,689
then instance variables if you want to

354
00:14:34,280 --> 00:14:37,760
pass a variable between different

355
00:14:35,690 --> 00:14:39,830
methods you can put the @ sign on it and

356
00:14:37,760 --> 00:14:41,390
then you can just pass it around the

357
00:14:39,830 --> 00:14:43,460
thing that you see with the Ruby code is

358
00:14:41,390 --> 00:14:44,569
there's a lot of ends it's like wow

359
00:14:43,460 --> 00:14:47,410
there's a lot of ends in this code

360
00:14:44,570 --> 00:14:51,230
because you end all your blocks with end

361
00:14:47,410 --> 00:14:54,230
and command exec was actually a bulk of

362
00:14:51,230 --> 00:14:56,930
what you can what I needed to do this is

363
00:14:54,230 --> 00:14:58,820
just running code on the system any kind

364
00:14:56,930 --> 00:15:01,130
of code you wanted like you can make a

365
00:14:58,820 --> 00:15:02,090
basic module that just ran whatever code

366
00:15:01,130 --> 00:15:04,850
you wanted on the system which is

367
00:15:02,090 --> 00:15:06,890
command exec so fill in the top part I

368
00:15:04,850 --> 00:15:12,410
want to run this code command exec this

369
00:15:06,890 --> 00:15:12,910
code that's pretty much a module going

370
00:15:12,410 --> 00:15:15,189
over the

371
00:15:12,910 --> 00:15:18,480
have setup they have this very well

372
00:15:15,190 --> 00:15:21,160
documented at this short link I

373
00:15:18,480 --> 00:15:23,200
recommend using the bun - you can try

374
00:15:21,160 --> 00:15:25,270
Khali I had GM issues with Kali and I

375
00:15:23,200 --> 00:15:27,400
don't want to get into that but a bun -

376
00:15:25,270 --> 00:15:28,720
is very nice its straightforward and

377
00:15:27,400 --> 00:15:31,750
that's what they use in the example so I

378
00:15:28,720 --> 00:15:34,270
would recommend that and the good thing

379
00:15:31,750 --> 00:15:38,290
about just I when you start working with

380
00:15:34,270 --> 00:15:40,060
the github source and you can you get

381
00:15:38,290 --> 00:15:41,290
right access to those exploits and stuff

382
00:15:40,060 --> 00:15:43,270
that people are using right now so it's

383
00:15:41,290 --> 00:15:45,010
kind of nice just to have that does you

384
00:15:43,270 --> 00:15:47,290
don't have to wait for the next Kali

385
00:15:45,010 --> 00:15:49,450
update because Kali manages the updates

386
00:15:47,290 --> 00:15:50,860
for the Metasploit framework if you're

387
00:15:49,450 --> 00:15:53,530
doing it straight from github you get

388
00:15:50,860 --> 00:15:54,700
the the hottest hotness and then what

389
00:15:53,530 --> 00:15:57,280
you want to do is you're gonna want to

390
00:15:54,700 --> 00:16:00,250
go ahead and fork the code which is

391
00:15:57,280 --> 00:16:05,020
gonna copy the Metasploit code to your

392
00:16:00,250 --> 00:16:09,880
code on github or your repository this

393
00:16:05,020 --> 00:16:11,380
is a reminder I creeped a lot on there

394
00:16:09,880 --> 00:16:12,760
you know on there PRS and stuff like

395
00:16:11,380 --> 00:16:15,100
that and I saw common issues that people

396
00:16:12,760 --> 00:16:17,290
would have and I actually did this once

397
00:16:15,100 --> 00:16:20,950
- I've done more than one module since

398
00:16:17,290 --> 00:16:22,870
this MSF Tidy is a tool that you can run

399
00:16:20,950 --> 00:16:24,820
on your code and it goes through and it

400
00:16:22,870 --> 00:16:27,280
checks for extra spaces and stuff like

401
00:16:24,820 --> 00:16:29,500
that and in the instructions it says to

402
00:16:27,280 --> 00:16:31,360
set up something called a git hook a get

403
00:16:29,500 --> 00:16:34,000
hook is whenever you run your git commit

404
00:16:31,360 --> 00:16:37,360
or whatever it will run the code that is

405
00:16:34,000 --> 00:16:39,340
in that get hook and MSF Tidy will run

406
00:16:37,360 --> 00:16:42,250
by default so when you put the code up

407
00:16:39,340 --> 00:16:44,200
on github you're you're automatically

408
00:16:42,250 --> 00:16:45,850
checking it and what people will do is

409
00:16:44,200 --> 00:16:46,990
they'll just forget to do that and then

410
00:16:45,850 --> 00:16:50,440
they'll put up code with a lot of

411
00:16:46,990 --> 00:16:52,570
extraneous spaces and just common errors

412
00:16:50,440 --> 00:16:54,400
with it and the first thing the

413
00:16:52,570 --> 00:16:55,930
Metasploit people do when they look at

414
00:16:54,400 --> 00:16:58,120
your code is its gonna get ran through

415
00:16:55,930 --> 00:17:00,010
MSF tightly they're gonna be like hey

416
00:16:58,120 --> 00:17:01,750
bro you didn't run out of stuff tidy you

417
00:17:00,010 --> 00:17:05,680
don't want to be that guy so let's make

418
00:17:01,750 --> 00:17:07,839
sure you get this part right space of

419
00:17:05,680 --> 00:17:09,400
git commands and get cloned this is the

420
00:17:07,839 --> 00:17:11,349
one I was familiar with this is where

421
00:17:09,400 --> 00:17:13,660
you just copy down all this stuff get

422
00:17:11,349 --> 00:17:16,199
checkout with the tech B and a branch

423
00:17:13,660 --> 00:17:19,240
name so there's the master and I have a

424
00:17:16,200 --> 00:17:20,560
visual diagram kind of of this process

425
00:17:19,240 --> 00:17:22,540
next so don't don't get too worried if

426
00:17:20,560 --> 00:17:25,089
you haven't really messed with this get

427
00:17:22,540 --> 00:17:26,310
checkout with a tech B will create a

428
00:17:25,089 --> 00:17:29,280
branch under the map

429
00:17:26,310 --> 00:17:31,169
sister you don't want to work in master

430
00:17:29,280 --> 00:17:33,210
that's the main code everything you're

431
00:17:31,170 --> 00:17:37,410
doing is going to be in a branch get

432
00:17:33,210 --> 00:17:39,300
status is going to show you the branch

433
00:17:37,410 --> 00:17:41,040
that you are currently in along with any

434
00:17:39,300 --> 00:17:45,720
files that you've modified and that will

435
00:17:41,040 --> 00:17:47,520
be saved get add is going to add stuff

436
00:17:45,720 --> 00:17:50,130
to being tracked and you'll see that in

437
00:17:47,520 --> 00:17:52,500
your get status and get commit is like

438
00:17:50,130 --> 00:17:55,140
saving its equivalent of saving and the

439
00:17:52,500 --> 00:17:59,940
M is the message like I added this and

440
00:17:55,140 --> 00:18:02,430
that's gonna be saved I put this one in

441
00:17:59,940 --> 00:18:04,980
here I I don't know if I'd recommend it

442
00:18:02,430 --> 00:18:07,170
I got a warning sign but man I used it a

443
00:18:04,980 --> 00:18:09,360
couple of times so this this comes with

444
00:18:07,170 --> 00:18:10,890
a caveat you can be careful you can do

445
00:18:09,360 --> 00:18:13,250
something called a rebase if you'd like

446
00:18:10,890 --> 00:18:16,140
to save a lot like maybe I added period

447
00:18:13,250 --> 00:18:17,460
added : like every time you save it and

448
00:18:16,140 --> 00:18:20,280
you don't want to have that big mess of

449
00:18:17,460 --> 00:18:22,080
saves you can do a rebase which takes

450
00:18:20,280 --> 00:18:24,240
all your saves and it puts them into one

451
00:18:22,080 --> 00:18:25,949
big save so you're kind of overwriting

452
00:18:24,240 --> 00:18:28,050
history and it's kind of dangerous if

453
00:18:25,950 --> 00:18:29,280
you go back too far because then you

454
00:18:28,050 --> 00:18:31,530
start getting into other people's code

455
00:18:29,280 --> 00:18:33,149
so make sure you have the right number

456
00:18:31,530 --> 00:18:36,510
there if you want to do that and then

457
00:18:33,150 --> 00:18:39,960
the git push is how you put your code

458
00:18:36,510 --> 00:18:41,190
onto your repository code and I have the

459
00:18:39,960 --> 00:18:42,470
branch name so there's going to be get

460
00:18:41,190 --> 00:18:44,880
push origin which would be your

461
00:18:42,470 --> 00:18:46,590
repository that's gonna it's just gonna

462
00:18:44,880 --> 00:18:49,880
be the origin and then the branch name

463
00:18:46,590 --> 00:18:54,270
is going to be whatever your branches

464
00:18:49,880 --> 00:18:56,310
okay here's my my visualization mostly

465
00:18:54,270 --> 00:18:57,840
you're gonna be over on the right where

466
00:18:56,310 --> 00:18:59,370
you're gonna have it's just your local

467
00:18:57,840 --> 00:19:00,600
dev box and then you want github and

468
00:18:59,370 --> 00:19:03,330
you're just going back and forth and

469
00:19:00,600 --> 00:19:04,830
then you're gonna get to a point we're

470
00:19:03,330 --> 00:19:05,699
going to do your pull request which is

471
00:19:04,830 --> 00:19:08,550
where you're going to try to integrate

472
00:19:05,700 --> 00:19:15,200
your code into rapid sevens code and

473
00:19:08,550 --> 00:19:15,200
hopefully that works out for you but yep

474
00:19:15,710 --> 00:19:20,400
and I'll put these up somewhere probably

475
00:19:18,480 --> 00:19:21,540
on get because I can use get now so I'll

476
00:19:20,400 --> 00:19:24,000
probably put these slides up there so if

477
00:19:21,540 --> 00:19:25,409
you're in the back you can't see but

478
00:19:24,000 --> 00:19:28,050
once you've done that you're gonna want

479
00:19:25,410 --> 00:19:31,260
to test test and test your module

480
00:19:28,050 --> 00:19:33,419
because how embarrassing would it be to

481
00:19:31,260 --> 00:19:36,360
put that code up and then it doesn't

482
00:19:33,420 --> 00:19:38,580
work figure to make sure that you at

483
00:19:36,360 --> 00:19:40,290
least contribute code that's working so

484
00:19:38,580 --> 00:19:41,340
I don't I don't know how much I would

485
00:19:40,290 --> 00:19:45,000
want to help someone if they contribute

486
00:19:41,340 --> 00:19:46,970
the code and didn't even work at all but

487
00:19:45,000 --> 00:19:50,550
here's some of the things that I did I

488
00:19:46,970 --> 00:19:53,520
use reload a lot if you're an MSF

489
00:19:50,550 --> 00:19:55,020
console you can type reload and then

490
00:19:53,520 --> 00:19:57,330
whatever the module is you're working on

491
00:19:55,020 --> 00:19:59,400
and it will reread in the code from that

492
00:19:57,330 --> 00:20:03,060
module so what you can have is you can

493
00:19:59,400 --> 00:20:04,650
have a window with MSF console and then

494
00:20:03,060 --> 00:20:06,929
you can have another window with vs code

495
00:20:04,650 --> 00:20:09,060
or the editor of your choice you save

496
00:20:06,930 --> 00:20:12,330
the code you reload the module you test

497
00:20:09,060 --> 00:20:13,980
it make some change in your code reload

498
00:20:12,330 --> 00:20:15,030
the module and test it otherwise it's

499
00:20:13,980 --> 00:20:17,250
not going to be automatically updated

500
00:20:15,030 --> 00:20:19,889
because when MSF console starts that's

501
00:20:17,250 --> 00:20:21,390
when it reads in the code if you're

502
00:20:19,890 --> 00:20:23,550
changing multiple modules you can do

503
00:20:21,390 --> 00:20:25,260
something called reload all and this

504
00:20:23,550 --> 00:20:27,180
just this also goes if you were to go on

505
00:20:25,260 --> 00:20:28,860
github and pull in a module like if you

506
00:20:27,180 --> 00:20:33,480
just wanted to use that module you can

507
00:20:28,860 --> 00:20:35,129
reload it I set up a grouping for my VMs

508
00:20:33,480 --> 00:20:37,260
because I tested on multiple operating

509
00:20:35,130 --> 00:20:39,720
systems this made it easy for me to

510
00:20:37,260 --> 00:20:40,920
start and stop all of them you could do

511
00:20:39,720 --> 00:20:42,450
some cool things like maybe have a

512
00:20:40,920 --> 00:20:44,550
listener already going on all of them

513
00:20:42,450 --> 00:20:48,360
but I didn't I like to freshly exploit

514
00:20:44,550 --> 00:20:51,180
them and I use RC scripts to do that an

515
00:20:48,360 --> 00:20:55,169
RC script is a way that you can automate

516
00:20:51,180 --> 00:20:58,880
that MSF console and I have an example

517
00:20:55,170 --> 00:21:02,070
of one of my RC scripts that I would use

518
00:20:58,880 --> 00:21:05,400
as example I would go it would start the

519
00:21:02,070 --> 00:21:08,970
SSH login I would set the L host the our

520
00:21:05,400 --> 00:21:11,100
host and these are static IPS and the

521
00:21:08,970 --> 00:21:11,520
username creds whatever exploit I would

522
00:21:11,100 --> 00:21:13,110
get it

523
00:21:11,520 --> 00:21:14,910
I would have a session it'd be session

524
00:21:13,110 --> 00:21:16,949
one because I just restarted the box and

525
00:21:14,910 --> 00:21:19,170
then I would set robusta true because I

526
00:21:16,950 --> 00:21:21,510
need to see them errors and there will

527
00:21:19,170 --> 00:21:25,440
be with me they'll be heirs initially

528
00:21:21,510 --> 00:21:28,230
and then I'll get fired out and then to

529
00:21:25,440 --> 00:21:30,480
start the MSF console and run all these

530
00:21:28,230 --> 00:21:33,270
commands it was MSF console tech R and

531
00:21:30,480 --> 00:21:35,310
then I had a RC for each one of those

532
00:21:33,270 --> 00:21:38,790
boxes so I'm like oh I want to test on

533
00:21:35,310 --> 00:21:40,679
mice nos box tech R sin OS all of a

534
00:21:38,790 --> 00:21:42,540
sudden I have my session I'm right there

535
00:21:40,680 --> 00:21:47,900
and I can just hit enter exploit them

536
00:21:42,540 --> 00:21:50,760
I'm good this is pretty cool right here

537
00:21:47,900 --> 00:21:53,790
there's a built-in debugger did you guys

538
00:21:50,760 --> 00:21:57,930
know this pretty neat

539
00:21:53,790 --> 00:22:02,399
I use this because while verbose airs is

540
00:21:57,930 --> 00:22:04,620
is nice I was able to type PR why it

541
00:22:02,400 --> 00:22:06,390
took me into the debugger and I was able

542
00:22:04,620 --> 00:22:08,399
to see the exact line where the air was

543
00:22:06,390 --> 00:22:10,560
which I wasn't able to see through the

544
00:22:08,400 --> 00:22:16,140
normal process so this this helped me

545
00:22:10,560 --> 00:22:19,220
really narrow down my bugs okay now

546
00:22:16,140 --> 00:22:21,570
we're getting the pull request you go to

547
00:22:19,220 --> 00:22:23,820
Robyn seven you go to the pull request

548
00:22:21,570 --> 00:22:27,570
tab you click it and then you have to

549
00:22:23,820 --> 00:22:33,210
compare and you Cho you choose your

550
00:22:27,570 --> 00:22:34,500
repository and your branch you're gonna

551
00:22:33,210 --> 00:22:37,980
want to make sure when you put in that

552
00:22:34,500 --> 00:22:41,370
pull request that you have everything in

553
00:22:37,980 --> 00:22:43,080
there that you need as an example I see

554
00:22:41,370 --> 00:22:45,090
a lot of people miss the documentation

555
00:22:43,080 --> 00:22:46,949
because you should document kind of what

556
00:22:45,090 --> 00:22:48,750
your stuff does so go ahead and put it

557
00:22:46,950 --> 00:22:51,450
in there make sure it's in the branch so

558
00:22:48,750 --> 00:22:53,010
that when they get it they don't have to

559
00:22:51,450 --> 00:22:54,840
ask for it because they'll tag it needs

560
00:22:53,010 --> 00:22:57,120
Docs you know you don't wanna get tagged

561
00:22:54,840 --> 00:22:58,139
you just want to kind of fly through so

562
00:22:57,120 --> 00:23:02,010
go ahead and make sure everything's in

563
00:22:58,140 --> 00:23:04,560
there and then the last part is waiting

564
00:23:02,010 --> 00:23:07,740
for feedback this is probably the

565
00:23:04,560 --> 00:23:11,760
hardest part for a lot of people because

566
00:23:07,740 --> 00:23:14,760
you put your heart and four hours into

567
00:23:11,760 --> 00:23:18,930
an X an exploit module and then you put

568
00:23:14,760 --> 00:23:21,600
it up there and you wait because they're

569
00:23:18,930 --> 00:23:24,210
a small dev team they're not huge and if

570
00:23:21,600 --> 00:23:26,490
you pick an exploit that is saved to a

571
00:23:24,210 --> 00:23:29,490
mainframe or something that isn't in

572
00:23:26,490 --> 00:23:31,650
everyone's VM stash they're gonna have

573
00:23:29,490 --> 00:23:34,980
to build that box oh I made this exploit

574
00:23:31,650 --> 00:23:36,900
for an active directory 2008 like they

575
00:23:34,980 --> 00:23:41,790
don't have that if you want them to be

576
00:23:36,900 --> 00:23:43,320
able to test it be prepared to wait or

577
00:23:41,790 --> 00:23:46,460
maybe provide the environment I don't

578
00:23:43,320 --> 00:23:48,480
know but that's kind of what happens but

579
00:23:46,460 --> 00:23:49,860
document how to test it so make sure you

580
00:23:48,480 --> 00:23:51,660
have everything that they need to do to

581
00:23:49,860 --> 00:23:53,550
make sure that they know that your stuff

582
00:23:51,660 --> 00:23:57,900
is working correctly and then keep the

583
00:23:53,550 --> 00:24:00,899
faith you just kind of wait and that's

584
00:23:57,900 --> 00:24:03,120
pretty much it for the most part rapid7

585
00:24:00,900 --> 00:24:06,270
especially be Cole's helped me a lot in

586
00:24:03,120 --> 00:24:06,750
making the module and no lacan for

587
00:24:06,270 --> 00:24:07,309
having me

588
00:24:06,750 --> 00:24:14,350
pretty

589
00:24:07,309 --> 00:24:14,350
any questions really no cool thank you

590
00:24:16,200 --> 00:24:19,190
[Applause]

