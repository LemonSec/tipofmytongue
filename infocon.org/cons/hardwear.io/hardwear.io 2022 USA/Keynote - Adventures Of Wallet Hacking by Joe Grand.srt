1
00:00:04,000 --> 00:00:06,960
actually i'm gonna move these

2
00:00:07,839 --> 00:00:09,679
i realize i should move the chairs

3
00:00:09,679 --> 00:00:12,000
because i walk around a lot and camera

4
00:00:12,000 --> 00:00:13,840
people never like it but

5
00:00:13,840 --> 00:00:16,480
that way i can see everybody let's see

6
00:00:16,480 --> 00:00:19,199
let's turn this off

7
00:00:19,199 --> 00:00:21,119
there cool thank you everybody for

8
00:00:21,119 --> 00:00:22,519
coming thank you

9
00:00:22,519 --> 00:00:24,160
hardware.io

10
00:00:24,160 --> 00:00:25,199
um

11
00:00:25,199 --> 00:00:26,800
if you've ever run a conference before

12
00:00:26,800 --> 00:00:28,400
you know how hard it is to actually run

13
00:00:28,400 --> 00:00:30,640
one uh i do not envy what they have to

14
00:00:30,640 --> 00:00:32,399
go through to put this stuff on so it's

15
00:00:32,399 --> 00:00:35,040
really nice to be back in person with

16
00:00:35,040 --> 00:00:35,920
people

17
00:00:35,920 --> 00:00:37,760
uh and yeah although all the work that

18
00:00:37,760 --> 00:00:40,079
entrex is doing all the team behind it

19
00:00:40,079 --> 00:00:42,800
uh it's it takes a lot of effort to make

20
00:00:42,800 --> 00:00:44,559
this happen right so it's it's really

21
00:00:44,559 --> 00:00:46,399
cool that they did it and that we're all

22
00:00:46,399 --> 00:00:48,559
back together and it's especially nice

23
00:00:48,559 --> 00:00:49,440
to be

24
00:00:49,440 --> 00:00:51,360
at a hardware specific conference

25
00:00:51,360 --> 00:00:53,280
because it's kind of like

26
00:00:53,280 --> 00:00:55,280
our own type of people right it's not

27
00:00:55,280 --> 00:00:57,440
like you have 30 000 people that are all

28
00:00:57,440 --> 00:00:59,120
doing different things like this is

29
00:00:59,120 --> 00:01:01,600
really nice to be able to see

30
00:01:01,600 --> 00:01:03,359
a lot of familiar faces a lot of new

31
00:01:03,359 --> 00:01:04,799
faces that are all interested in

32
00:01:04,799 --> 00:01:06,400
hardware um

33
00:01:06,400 --> 00:01:08,640
especially for me being up here seeing a

34
00:01:08,640 --> 00:01:10,720
lot of people i know makes the talk even

35
00:01:10,720 --> 00:01:12,479
even harder for me but this is this is

36
00:01:12,479 --> 00:01:13,920
cool um

37
00:01:13,920 --> 00:01:15,520
i know it's gonna be scrutinized a lot

38
00:01:15,520 --> 00:01:18,560
more okay so yeah my name is joe grand

39
00:01:18,560 --> 00:01:19,759
and um

40
00:01:19,759 --> 00:01:21,600
i hack hardware

41
00:01:21,600 --> 00:01:22,560
this

42
00:01:22,560 --> 00:01:25,200
presentation kind of came together i i

43
00:01:25,200 --> 00:01:27,600
wanted to just have some like fun

44
00:01:27,600 --> 00:01:29,520
pictures of some of my experiences

45
00:01:29,520 --> 00:01:30,880
recently hacking different types of

46
00:01:30,880 --> 00:01:33,520
hardware uh just to kind of get us

47
00:01:33,520 --> 00:01:35,439
warmed up for the for the event because

48
00:01:35,439 --> 00:01:37,360
there's so many amazing talks and i

49
00:01:37,360 --> 00:01:38,880
figured like well let's just show some

50
00:01:38,880 --> 00:01:39,759
pictures right it's like a little

51
00:01:39,759 --> 00:01:42,000
picture show um

52
00:01:42,000 --> 00:01:43,840
i know there's a lot of different ranges

53
00:01:43,840 --> 00:01:45,920
of skill levels at the conference as

54
00:01:45,920 --> 00:01:47,840
well so some of you will have seen this

55
00:01:47,840 --> 00:01:49,439
stuff and been like that's not very

56
00:01:49,439 --> 00:01:50,880
groundbreaking and then some of you will

57
00:01:50,880 --> 00:01:52,640
see this and be like oh that's crazy i

58
00:01:52,640 --> 00:01:54,560
want to learn about that and this is the

59
00:01:54,560 --> 00:01:56,479
perfect place to do it

60
00:01:56,479 --> 00:01:59,119
so it really shows like the the reality

61
00:01:59,119 --> 00:02:01,119
of when you're hacking on hardware

62
00:02:01,119 --> 00:02:03,439
sometimes it's hard sometimes it's not

63
00:02:03,439 --> 00:02:05,360
sometimes you use simple methods

64
00:02:05,360 --> 00:02:08,080
sometimes you don't uh and it's just

65
00:02:08,080 --> 00:02:10,479
this whole range of experiences and

66
00:02:10,479 --> 00:02:11,920
that's what makes

67
00:02:11,920 --> 00:02:15,280
hardware hacking so fun

68
00:02:15,280 --> 00:02:16,879
um let's see okay which button am i

69
00:02:16,879 --> 00:02:18,560
pressing all right

70
00:02:18,560 --> 00:02:20,800
so

71
00:02:21,120 --> 00:02:24,000
i was never into cryptocurrency

72
00:02:24,000 --> 00:02:25,920
i hadn't really paid attention to it at

73
00:02:25,920 --> 00:02:26,640
all

74
00:02:26,640 --> 00:02:28,879
uh until i got an email

75
00:02:28,879 --> 00:02:31,040
last year i think it was

76
00:02:31,040 --> 00:02:33,920
was now 2022 so i think february 2021 i

77
00:02:33,920 --> 00:02:35,280
got an email from somebody that was like

78
00:02:35,280 --> 00:02:36,640
hey i have

79
00:02:36,640 --> 00:02:39,040
some money two million two million

80
00:02:39,040 --> 00:02:42,480
dollars locked on uh a trezor hardware

81
00:02:42,480 --> 00:02:44,720
wallet can you can you break it and get

82
00:02:44,720 --> 00:02:46,800
my money back i can't remember the pin

83
00:02:46,800 --> 00:02:49,040
and it was a well-written enough email

84
00:02:49,040 --> 00:02:51,760
that i didn't just ignore it because

85
00:02:51,760 --> 00:02:54,400
i get a lot of email and this one was

86
00:02:54,400 --> 00:02:57,280
you know seemed like it was decent and

87
00:02:57,280 --> 00:02:59,120
did not seem like a scam or anything

88
00:02:59,120 --> 00:03:01,680
like that so i ended up talking uh with

89
00:03:01,680 --> 00:03:03,680
the guy whose name was dan and got his

90
00:03:03,680 --> 00:03:05,200
whole backstory and realized yeah like

91
00:03:05,200 --> 00:03:06,879
he was an early adopter in this stuff

92
00:03:06,879 --> 00:03:09,680
and invested some money and um just

93
00:03:09,680 --> 00:03:11,680
threw away his recovery seed by accident

94
00:03:11,680 --> 00:03:13,120
forgot his pin

95
00:03:13,120 --> 00:03:15,040
and really needed help so that's what

96
00:03:15,040 --> 00:03:17,360
kind of brought me into things so

97
00:03:17,360 --> 00:03:18,720
i know some of you are probably sick of

98
00:03:18,720 --> 00:03:20,159
hearing about the trezor it's been

99
00:03:20,159 --> 00:03:22,640
hacked a lot and

100
00:03:22,640 --> 00:03:24,080
the reason one of the main reasons i

101
00:03:24,080 --> 00:03:25,519
took this on well it was still during

102
00:03:25,519 --> 00:03:27,120
kovid and i wasn't really traveling and

103
00:03:27,120 --> 00:03:28,720
doing anything else it was like okay my

104
00:03:28,720 --> 00:03:30,799
wife was like why you just do it. um but

105
00:03:30,799 --> 00:03:32,239
the other reason is there had been a lot

106
00:03:32,239 --> 00:03:34,959
of work already about hacking trezor

107
00:03:34,959 --> 00:03:37,200
devices in various ways with different

108
00:03:37,200 --> 00:03:39,440
different types of firmware um kraken

109
00:03:39,440 --> 00:03:41,120
had some work out while it dot fail had

110
00:03:41,120 --> 00:03:43,519
some work out um ledger had released

111
00:03:43,519 --> 00:03:46,159
some stuff about it also so i was like i

112
00:03:46,159 --> 00:03:47,840
could just replicate this work like it

113
00:03:47,840 --> 00:03:49,280
shouldn't be that bad right how hard is

114
00:03:49,280 --> 00:03:51,120
it to replicate work and that turned

115
00:03:51,120 --> 00:03:53,519
into like three months of of trying to

116
00:03:53,519 --> 00:03:55,760
figure out everything and piece together

117
00:03:55,760 --> 00:03:58,159
what was publicly available versus

118
00:03:58,159 --> 00:04:00,080
uh kind of the reality of doing it on a

119
00:04:00,080 --> 00:04:03,040
device that i couldn't mess up on right

120
00:04:03,040 --> 00:04:05,519
you really only had one chance to do it

121
00:04:05,519 --> 00:04:07,120
uh but it was a great learning

122
00:04:07,120 --> 00:04:10,000
experience uh which is really ultimately

123
00:04:10,000 --> 00:04:11,680
the the goal right it's like to do this

124
00:04:11,680 --> 00:04:13,680
stuff to be able to hack and use your

125
00:04:13,680 --> 00:04:15,439
skills to help people but learning along

126
00:04:15,439 --> 00:04:17,120
the way like if i wasn't learning

127
00:04:17,120 --> 00:04:18,639
something new every time i was hacking

128
00:04:18,639 --> 00:04:20,000
something i wouldn't do it because i

129
00:04:20,000 --> 00:04:21,358
think it would just end up being boring

130
00:04:21,358 --> 00:04:22,720
doing the same stuff over and over again

131
00:04:22,720 --> 00:04:24,639
so that's what keeps me going

132
00:04:24,639 --> 00:04:26,560
um here's the setup for it

133
00:04:26,560 --> 00:04:28,400
and uh there's a couple different pieces

134
00:04:28,400 --> 00:04:31,040
for this particular attack um

135
00:04:31,040 --> 00:04:32,560
one of the main things about fault

136
00:04:32,560 --> 00:04:33,840
injection and that's what we used for

137
00:04:33,840 --> 00:04:37,360
this the stm32 that's on the trezor

138
00:04:37,360 --> 00:04:39,759
uh has a couple different security

139
00:04:39,759 --> 00:04:40,880
uh

140
00:04:40,880 --> 00:04:44,160
states there's rdp2 which is the maximum

141
00:04:44,160 --> 00:04:45,600
security no

142
00:04:45,600 --> 00:04:47,680
debug interface is supposed to be

143
00:04:47,680 --> 00:04:50,000
available uh the the data sheet even

144
00:04:50,000 --> 00:04:52,479
says like irreversible if you said rdp2

145
00:04:52,479 --> 00:04:53,919
you're never going to get access to the

146
00:04:53,919 --> 00:04:57,120
chip uh which obviously is wrong um

147
00:04:57,120 --> 00:04:59,759
there's rdp one which gives you debug

148
00:04:59,759 --> 00:05:01,440
access but

149
00:05:01,440 --> 00:05:03,840
only lets you read the contents of ram

150
00:05:03,840 --> 00:05:05,759
of like the volatile memory area not the

151
00:05:05,759 --> 00:05:07,360
flash where normally we want to go after

152
00:05:07,360 --> 00:05:09,039
flash if we're getting firmware or some

153
00:05:09,039 --> 00:05:10,880
sort of persistent storage like recovery

154
00:05:10,880 --> 00:05:12,720
key and some stuff like that

155
00:05:12,720 --> 00:05:14,320
but it was still a you know a downgrade

156
00:05:14,320 --> 00:05:15,680
that could potentially be useful and

157
00:05:15,680 --> 00:05:17,759
then there's rdp 0.

158
00:05:17,759 --> 00:05:20,000
to downgrade from rdp2 to rdp one

159
00:05:20,000 --> 00:05:22,240
requires a fault injection of basically

160
00:05:22,240 --> 00:05:23,680
at the right point in time while the

161
00:05:23,680 --> 00:05:26,240
chip is uh executing its boot rom to

162
00:05:26,240 --> 00:05:28,160
kind of set the state of the chip

163
00:05:28,160 --> 00:05:29,120
you can

164
00:05:29,120 --> 00:05:30,160
glitch it

165
00:05:30,160 --> 00:05:33,680
downgrade it and then in this case uh

166
00:05:33,680 --> 00:05:35,280
this particular version of firmware was

167
00:05:35,280 --> 00:05:37,919
loading the recovery key that i needed

168
00:05:37,919 --> 00:05:40,080
from flash into ram and because now i

169
00:05:40,080 --> 00:05:42,400
had access to ram through rdp one i

170
00:05:42,400 --> 00:05:44,080
could read the contents so it was pretty

171
00:05:44,080 --> 00:05:44,880
cool

172
00:05:44,880 --> 00:05:47,199
um so i used the five whisperer as part

173
00:05:47,199 --> 00:05:49,280
of the process the chip is only checking

174
00:05:49,280 --> 00:05:50,400
the state of security when it's

175
00:05:50,400 --> 00:05:52,560
resetting its boot rom and executing its

176
00:05:52,560 --> 00:05:54,400
boot rom so i'm using the five whisper

177
00:05:54,400 --> 00:05:56,400
which is a really cool like usb protocol

178
00:05:56,400 --> 00:05:58,800
analyzer tool uh where you can monitor

179
00:05:58,800 --> 00:06:01,039
usb traffic and even like set a trigger

180
00:06:01,039 --> 00:06:03,440
when certain data comes across but i was

181
00:06:03,440 --> 00:06:05,680
just using it to power cycle the board

182
00:06:05,680 --> 00:06:07,039
i do have references by the way to all

183
00:06:07,039 --> 00:06:08,400
the hardware stuff i have links at the

184
00:06:08,400 --> 00:06:10,400
end and i'll put a i'll put the slides

185
00:06:10,400 --> 00:06:11,600
up on my website so you can actually

186
00:06:11,600 --> 00:06:13,440
click on the links um

187
00:06:13,440 --> 00:06:15,360
but this is just a really cool tool and

188
00:06:15,360 --> 00:06:16,720
i'm just using it to power cycle the

189
00:06:16,720 --> 00:06:18,319
device in an easy way because i can

190
00:06:18,319 --> 00:06:20,240
control it through python and just power

191
00:06:20,240 --> 00:06:22,240
cycle and then try to do my fault

192
00:06:22,240 --> 00:06:23,440
injection which is done with the chip

193
00:06:23,440 --> 00:06:24,800
whisperer

194
00:06:24,800 --> 00:06:25,840
if you haven't gotten into fault

195
00:06:25,840 --> 00:06:27,680
injection before it's sort of like once

196
00:06:27,680 --> 00:06:29,680
you learn how to do it you want to just

197
00:06:29,680 --> 00:06:31,199
inject faults and everything you want to

198
00:06:31,199 --> 00:06:32,880
glitch everything it's like a hammer

199
00:06:32,880 --> 00:06:34,240
right you have a hammer and you you want

200
00:06:34,240 --> 00:06:36,160
to either like bash a lot of things or

201
00:06:36,160 --> 00:06:37,360
you want to like build a lot of things

202
00:06:37,360 --> 00:06:38,400
with it

203
00:06:38,400 --> 00:06:40,800
once you know how to do fault injection

204
00:06:40,800 --> 00:06:42,560
which you might be able to do some

205
00:06:42,560 --> 00:06:44,240
exercises in the other room i'm not sure

206
00:06:44,240 --> 00:06:46,800
but there definitely talks about it uh

207
00:06:46,800 --> 00:06:49,199
over the next two days it's just

208
00:06:49,199 --> 00:06:52,160
a really really cool way to cause system

209
00:06:52,160 --> 00:06:54,319
to misbehave in a way that you can take

210
00:06:54,319 --> 00:06:55,599
advantage of very very cool and

211
00:06:55,599 --> 00:06:57,039
sometimes you can't take advantage of it

212
00:06:57,039 --> 00:06:59,280
you just cause the system to fail um but

213
00:06:59,280 --> 00:07:00,800
really cool so i'm using the chip

214
00:07:00,800 --> 00:07:03,280
whisperer there are other devices as

215
00:07:03,280 --> 00:07:05,840
well that are available um there's uh

216
00:07:05,840 --> 00:07:08,240
from thomas roth uh also known as stack

217
00:07:08,240 --> 00:07:11,039
smashing there's the pico debugging dump

218
00:07:11,039 --> 00:07:13,520
which is like an easier kind of simpler

219
00:07:13,520 --> 00:07:15,759
lower cost open source method of doing

220
00:07:15,759 --> 00:07:18,800
glitching um there's some other

221
00:07:18,800 --> 00:07:20,400
lower end versions of the chip whisperer

222
00:07:20,400 --> 00:07:22,319
tool there's a lot of other ones as well

223
00:07:22,319 --> 00:07:24,160
so if you don't want to go you know full

224
00:07:24,160 --> 00:07:25,680
on commercial you can still kind of get

225
00:07:25,680 --> 00:07:28,000
into it

226
00:07:28,800 --> 00:07:30,800
and then i have the segger j-link which

227
00:07:30,800 --> 00:07:32,800
is my hardware interface that connects

228
00:07:32,800 --> 00:07:35,360
to the swd interface the serial wire

229
00:07:35,360 --> 00:07:37,280
debug interface of the

230
00:07:37,280 --> 00:07:38,240
um

231
00:07:38,240 --> 00:07:40,720
of the trezor of the stm32 which in

232
00:07:40,720 --> 00:07:42,240
theory isn't supposed to be accessible

233
00:07:42,240 --> 00:07:43,120
at all

234
00:07:43,120 --> 00:07:45,280
but when you downgrade and you properly

235
00:07:45,280 --> 00:07:48,400
inject faults then that's how it works

236
00:07:48,400 --> 00:07:50,720
so i'm not going into full on details

237
00:07:50,720 --> 00:07:52,560
but just you know to kind of see the

238
00:07:52,560 --> 00:07:54,080
different tactics that are needed to

239
00:07:54,080 --> 00:07:55,919
break stuff

240
00:07:55,919 --> 00:07:57,120
when you're doing fault injection

241
00:07:57,120 --> 00:07:59,360
especially voltage fault injection where

242
00:07:59,360 --> 00:08:02,240
you're basically taking the core cpu

243
00:08:02,240 --> 00:08:03,759
voltage or some other voltage on the

244
00:08:03,759 --> 00:08:06,319
chip where you want to affect operation

245
00:08:06,319 --> 00:08:08,800
you usually need to modify the target in

246
00:08:08,800 --> 00:08:10,639
some way to make it more susceptible to

247
00:08:10,639 --> 00:08:12,639
fault injection most embedded systems

248
00:08:12,639 --> 00:08:14,000
most electronic devices are going to

249
00:08:14,000 --> 00:08:16,800
have bypass capacitors on all of their

250
00:08:16,800 --> 00:08:19,280
power rails to kind of smooth out the

251
00:08:19,280 --> 00:08:21,919
power so if there is noise uh in the

252
00:08:21,919 --> 00:08:23,440
system or a dirty power supply or

253
00:08:23,440 --> 00:08:24,879
something that the chips are still going

254
00:08:24,879 --> 00:08:26,879
to operate properly

255
00:08:26,879 --> 00:08:28,879
so we want to remove those capacitors

256
00:08:28,879 --> 00:08:31,360
from the system so when we do our fault

257
00:08:31,360 --> 00:08:33,360
injection the capacitors don't smooth

258
00:08:33,360 --> 00:08:35,200
out those very minut

259
00:08:35,200 --> 00:08:36,799
signals the very minute glitches that

260
00:08:36,799 --> 00:08:38,559
we're doing

261
00:08:38,559 --> 00:08:40,240
so here's a picture of the of the trezor

262
00:08:40,240 --> 00:08:42,559
one uh and kind of showing some of my

263
00:08:42,559 --> 00:08:44,000
notes of where things connect so like

264
00:08:44,000 --> 00:08:45,519
the five whispers going to the usb

265
00:08:45,519 --> 00:08:48,240
connection for the power cycling

266
00:08:48,240 --> 00:08:49,760
because the trezor's open source it

267
00:08:49,760 --> 00:08:51,680
makes it a lot easier to kind of just

268
00:08:51,680 --> 00:08:53,440
grab their schematic and see okay where

269
00:08:53,440 --> 00:08:55,760
do i need to modify things if a device

270
00:08:55,760 --> 00:08:58,320
is not open source

271
00:08:58,320 --> 00:08:59,519
it's just part of the reverse

272
00:08:59,519 --> 00:09:01,600
engineering process to figure out how

273
00:09:01,600 --> 00:09:03,680
the board was designed how the

274
00:09:03,680 --> 00:09:06,320
traces connect to different signals

275
00:09:06,320 --> 00:09:08,000
there's a saying like every piece of

276
00:09:08,000 --> 00:09:09,360
hardware is open source if you have

277
00:09:09,360 --> 00:09:11,279
physical access to it

278
00:09:11,279 --> 00:09:13,120
right because you can figure this out

279
00:09:13,120 --> 00:09:14,880
but being open source just makes it a

280
00:09:14,880 --> 00:09:15,920
little bit easier because i'll just go

281
00:09:15,920 --> 00:09:17,839
to github and grab the schematic um so

282
00:09:17,839 --> 00:09:18,880
yeah

283
00:09:18,880 --> 00:09:20,640
the jlink interface for the serial wire

284
00:09:20,640 --> 00:09:22,399
debug and then

285
00:09:22,399 --> 00:09:25,279
since i knew that i wanted to target

286
00:09:25,279 --> 00:09:28,959
the core voltage lines of the stm32

287
00:09:28,959 --> 00:09:30,320
that's where i started looking for the

288
00:09:30,320 --> 00:09:32,480
capacitors to figure out okay which ones

289
00:09:32,480 --> 00:09:35,120
do i need to remove to give me access

290
00:09:35,120 --> 00:09:37,279
to that core voltage and and have it not

291
00:09:37,279 --> 00:09:39,120
filter my glitches

292
00:09:39,120 --> 00:09:40,560
so there's just two capacitors i had to

293
00:09:40,560 --> 00:09:41,600
remove because there's two different

294
00:09:41,600 --> 00:09:43,120
core voltage lines

295
00:09:43,120 --> 00:09:45,600
i also removed the one from the reset

296
00:09:45,600 --> 00:09:48,240
line because the reset is what we use as

297
00:09:48,240 --> 00:09:50,240
as the trigger to know when the chip

298
00:09:50,240 --> 00:09:53,440
starts executing its internal boot rom

299
00:09:53,440 --> 00:09:54,880
and there's a capacitor on there which

300
00:09:54,880 --> 00:09:56,399
kind of slows that down so i just took

301
00:09:56,399 --> 00:09:57,920
that off so it's a much sharper edge

302
00:09:57,920 --> 00:09:59,680
that we can use to start our timing for

303
00:09:59,680 --> 00:10:02,240
fault injection we're really even even

304
00:10:02,240 --> 00:10:03,920
without that like you still have to run

305
00:10:03,920 --> 00:10:05,440
a range of different kind of glitch

306
00:10:05,440 --> 00:10:07,519
attempts within an area to try to hit it

307
00:10:07,519 --> 00:10:09,440
because it's never going to be the same

308
00:10:09,440 --> 00:10:10,720
exact spot

309
00:10:10,720 --> 00:10:12,240
it might be within a within a range and

310
00:10:12,240 --> 00:10:14,320
you can do that very quickly

311
00:10:14,320 --> 00:10:15,440
but there's all sorts of you know

312
00:10:15,440 --> 00:10:16,880
silicon variances with with

313
00:10:16,880 --> 00:10:18,640
manufacturing processes and ambient

314
00:10:18,640 --> 00:10:19,839
temperature and things that are going to

315
00:10:19,839 --> 00:10:21,600
kind of change change stuff but anyway

316
00:10:21,600 --> 00:10:23,839
yeah so like prepping the board with uh

317
00:10:23,839 --> 00:10:25,760
removing those capacitors put my sma

318
00:10:25,760 --> 00:10:27,519
connector that then connects up to my

319
00:10:27,519 --> 00:10:29,120
glitcher

320
00:10:29,120 --> 00:10:30,640
so if you want to try to replicate some

321
00:10:30,640 --> 00:10:32,399
of this work this is all you have to do

322
00:10:32,399 --> 00:10:34,880
to prep the the trezor and then you'll

323
00:10:34,880 --> 00:10:36,959
need some code to actually go and cycle

324
00:10:36,959 --> 00:10:39,440
through you know delay after the

325
00:10:39,440 --> 00:10:41,920
reset line goes high and then start

326
00:10:41,920 --> 00:10:43,120
doing your glitching and see what

327
00:10:43,120 --> 00:10:44,399
happens but this is kind of the starting

328
00:10:44,399 --> 00:10:47,800
point for the hardware

329
00:10:48,160 --> 00:10:50,000
so this is a

330
00:10:50,000 --> 00:10:51,760
it looks so angled from here i guess

331
00:10:51,760 --> 00:10:54,160
that's on purpose this is a screenshot

332
00:10:54,160 --> 00:10:56,000
of my oscilloscope when i was doing the

333
00:10:56,000 --> 00:10:57,920
fault injection on this original trezor

334
00:10:57,920 --> 00:11:00,399
so this was this was last summer

335
00:11:00,399 --> 00:11:02,320
um and we can see the glitch this is on

336
00:11:02,320 --> 00:11:04,240
the core voltage line of the of the

337
00:11:04,240 --> 00:11:07,200
trezor that's going to the stm32 and at

338
00:11:07,200 --> 00:11:09,320
some point after reset i think it's like

339
00:11:09,320 --> 00:11:12,240
150 160 microseconds or something like

340
00:11:12,240 --> 00:11:14,880
that is when i do my glitch and uh that

341
00:11:14,880 --> 00:11:17,040
causes the system to basically

342
00:11:17,040 --> 00:11:17,430
um

343
00:11:17,430 --> 00:11:18,720
[Music]

344
00:11:18,720 --> 00:11:20,959
either skip over or just downgrade

345
00:11:20,959 --> 00:11:23,680
basically have the have the stm32 say

346
00:11:23,680 --> 00:11:25,360
wait i guess i'm reading a value that

347
00:11:25,360 --> 00:11:29,440
means i should be in rdp-1 not rdp2

348
00:11:29,440 --> 00:11:31,200
um and and here's a little video of it

349
00:11:31,200 --> 00:11:33,200
so we can kind of see

350
00:11:33,200 --> 00:11:34,800
my original implementation was pretty

351
00:11:34,800 --> 00:11:38,079
slow it was like one a second maybe

352
00:11:38,079 --> 00:11:40,000
uh and then since then i've hacked a

353
00:11:40,000 --> 00:11:41,440
bunch of other trezors and i've just

354
00:11:41,440 --> 00:11:42,399
sort of

355
00:11:42,399 --> 00:11:44,720
enhanced this a little bit and

356
00:11:44,720 --> 00:11:47,040
and can run it a lot faster so it makes

357
00:11:47,040 --> 00:11:48,720
it a lot easier to figure out like where

358
00:11:48,720 --> 00:11:51,760
do i need to glitch and then um

359
00:11:51,760 --> 00:11:54,480
uh do the glitch faster because it

360
00:11:54,480 --> 00:11:56,399
this took me like probably three or four

361
00:11:56,399 --> 00:11:57,920
hours of sitting there waiting for this

362
00:11:57,920 --> 00:11:59,200
thing to hit and now i can do it in a

363
00:11:59,200 --> 00:12:00,720
couple of minutes and basically what i

364
00:12:00,720 --> 00:12:02,399
did is the original version i'm using

365
00:12:02,399 --> 00:12:05,680
the segger j-link command to query the

366
00:12:05,680 --> 00:12:07,839
stm32 and try to connect to it which is

367
00:12:07,839 --> 00:12:10,480
like a very verbose long process and i

368
00:12:10,480 --> 00:12:12,079
realized that i can use the segger j

369
00:12:12,079 --> 00:12:12,880
link

370
00:12:12,880 --> 00:12:15,120
in a lower level mode to do like a low

371
00:12:15,120 --> 00:12:17,760
level jtag id code attempt of just

372
00:12:17,760 --> 00:12:19,600
connecting to the jtag

373
00:12:19,600 --> 00:12:21,040
directly

374
00:12:21,040 --> 00:12:22,639
shifting data out of the data register

375
00:12:22,639 --> 00:12:24,480
and reading if there's an id code or not

376
00:12:24,480 --> 00:12:26,720
and by doing that you can very quickly

377
00:12:26,720 --> 00:12:27,600
uh

378
00:12:27,600 --> 00:12:29,680
detect if a debug interface is available

379
00:12:29,680 --> 00:12:31,120
or not without going through like this

380
00:12:31,120 --> 00:12:33,839
whole long process

381
00:12:33,839 --> 00:12:36,000
um

382
00:12:36,000 --> 00:12:38,480
when i started doing the work

383
00:12:38,480 --> 00:12:40,160
my wife was like you need to be filming

384
00:12:40,160 --> 00:12:42,000
this because a lot of the videos that i

385
00:12:42,000 --> 00:12:43,920
make if you've seen them before are

386
00:12:43,920 --> 00:12:46,240
pretty pretty bad like i hold my phone

387
00:12:46,240 --> 00:12:47,600
and i'm like hey it's joe grant here's a

388
00:12:47,600 --> 00:12:49,200
thing and it's very engineering focus

389
00:12:49,200 --> 00:12:52,160
and you know talking to my friends about

390
00:12:52,160 --> 00:12:54,000
what i'm working on or some tips or

391
00:12:54,000 --> 00:12:54,959
whatever

392
00:12:54,959 --> 00:12:56,000
um

393
00:12:56,000 --> 00:12:58,240
and then the professionally produced

394
00:12:58,240 --> 00:13:00,079
videos i've done are all engineering

395
00:13:00,079 --> 00:13:01,519
related so not hacking related but

396
00:13:01,519 --> 00:13:02,800
building related she's like you should

397
00:13:02,800 --> 00:13:04,800
film it um so i ended up calling a

398
00:13:04,800 --> 00:13:05,760
friend of mine who's a professional

399
00:13:05,760 --> 00:13:07,120
cameraman who had filmed some of my

400
00:13:07,120 --> 00:13:09,519
engineering work and he came by and

401
00:13:09,519 --> 00:13:11,360
actually filmed the real process when

402
00:13:11,360 --> 00:13:12,880
dan the customer flew all the way from

403
00:13:12,880 --> 00:13:14,480
new jersey to my house

404
00:13:14,480 --> 00:13:16,800
and uh so we did like a professionally

405
00:13:16,800 --> 00:13:18,079
produced

406
00:13:18,079 --> 00:13:21,120
video about it uh and then i had a

407
00:13:21,120 --> 00:13:23,200
friend of mine an old client of mine uh

408
00:13:23,200 --> 00:13:24,800
who's now a business partner in our

409
00:13:24,800 --> 00:13:27,519
wallet hacking journey uh do directing

410
00:13:27,519 --> 00:13:29,760
of the video remotely so he was on you

411
00:13:29,760 --> 00:13:32,079
know on on facetime kind of set up the

412
00:13:32,079 --> 00:13:34,399
shot here ask these questions but we

413
00:13:34,399 --> 00:13:36,560
film the real hack in real time and the

414
00:13:36,560 --> 00:13:39,040
video is up on youtube it was released

415
00:13:39,040 --> 00:13:40,480
in january

416
00:13:40,480 --> 00:13:42,560
so if you haven't seen it it's really

417
00:13:42,560 --> 00:13:44,000
fun to watch

418
00:13:44,000 --> 00:13:46,639
but it shows a lot of the kind of real

419
00:13:46,639 --> 00:13:48,800
drama of when you're doing this and

420
00:13:48,800 --> 00:13:51,440
there's nothing fake about it so there's

421
00:13:51,440 --> 00:13:53,040
comments on on youtube i don't read the

422
00:13:53,040 --> 00:13:54,560
comments but people have told me there

423
00:13:54,560 --> 00:13:57,040
are comments of like people think we're

424
00:13:57,040 --> 00:13:59,199
people that's a good if you take nothing

425
00:13:59,199 --> 00:14:00,880
else from this presentation don't read

426
00:14:00,880 --> 00:14:03,199
the comments

427
00:14:03,199 --> 00:14:04,639
it will just be so much better for your

428
00:14:04,639 --> 00:14:06,639
mental health um

429
00:14:06,639 --> 00:14:08,240
but yeah people are like oh they totally

430
00:14:08,240 --> 00:14:09,680
faked it because they're smiling you

431
00:14:09,680 --> 00:14:11,279
know right before they did the glitch

432
00:14:11,279 --> 00:14:12,480
and it's like

433
00:14:12,480 --> 00:14:14,480
no we were watching simpsons cartoons

434
00:14:14,480 --> 00:14:15,680
and we just couldn't show that in the

435
00:14:15,680 --> 00:14:17,680
video but it was real right because we

436
00:14:17,680 --> 00:14:20,160
wanted to show the reality of of this

437
00:14:20,160 --> 00:14:21,600
and it was a lot of fun so yeah check

438
00:14:21,600 --> 00:14:23,760
that out

439
00:14:23,760 --> 00:14:26,079
in parallel to doing the voltage fault

440
00:14:26,079 --> 00:14:27,920
injection i was kind of exploring a lot

441
00:14:27,920 --> 00:14:29,600
of different options because i wanted to

442
00:14:29,600 --> 00:14:31,040
make sure i had backup plans and

443
00:14:31,040 --> 00:14:32,959
continue contingency plans for different

444
00:14:32,959 --> 00:14:34,320
types of stuff

445
00:14:34,320 --> 00:14:35,199
so

446
00:14:35,199 --> 00:14:37,680
i started also working with emfi

447
00:14:37,680 --> 00:14:40,480
electromagnetic fault injection

448
00:14:40,480 --> 00:14:42,560
using the chip shouter which is one

449
00:14:42,560 --> 00:14:45,279
method of doing uh

450
00:14:45,279 --> 00:14:46,160
oh

451
00:14:46,160 --> 00:14:47,920
it's over there chip shadow's over here

452
00:14:47,920 --> 00:14:49,600
yeah so one method of doing fault

453
00:14:49,600 --> 00:14:51,600
injection basically generating electro

454
00:14:51,600 --> 00:14:53,199
electromagnetic fields in a coil and

455
00:14:53,199 --> 00:14:55,440
kind of passively injecting those onto

456
00:14:55,440 --> 00:14:57,760
the device which will induce voltages or

457
00:14:57,760 --> 00:14:59,839
currents on the on the die

458
00:14:59,839 --> 00:15:03,360
so a non-uh destructive technique where

459
00:15:03,360 --> 00:15:04,639
you don't have to

460
00:15:04,639 --> 00:15:05,680
usually

461
00:15:05,680 --> 00:15:07,440
modify the target at all but you can

462
00:15:07,440 --> 00:15:10,160
still affect some sort of uh

463
00:15:10,160 --> 00:15:11,600
problem or misbehavior that you can take

464
00:15:11,600 --> 00:15:13,760
advantage of colin o'flynn had done some

465
00:15:13,760 --> 00:15:15,279
work about

466
00:15:15,279 --> 00:15:19,600
using emfi with trezor devices

467
00:15:19,600 --> 00:15:21,040
um

468
00:15:21,040 --> 00:15:22,680
up to version

469
00:15:22,680 --> 00:15:25,360
1.7.3 i believe which was a win usb

470
00:15:25,360 --> 00:15:28,399
driver and basically he was using

471
00:15:28,399 --> 00:15:31,120
the phi whisperer device to monitor the

472
00:15:31,120 --> 00:15:33,600
usb basically the enumeration process

473
00:15:33,600 --> 00:15:34,959
when you plug in the device to the

474
00:15:34,959 --> 00:15:37,360
computer the computer says uh you know

475
00:15:37,360 --> 00:15:39,199
send me your

476
00:15:39,199 --> 00:15:41,279
uh what is it some descriptor i can't

477
00:15:41,279 --> 00:15:44,160
remember which one and the usb device

478
00:15:44,160 --> 00:15:46,560
will send back some packet

479
00:15:46,560 --> 00:15:48,720
so if you glitch it just the right time

480
00:15:48,720 --> 00:15:51,199
the device instead of sending its normal

481
00:15:51,199 --> 00:15:54,160
packet of whatever x bytes you glitch it

482
00:15:54,160 --> 00:15:55,440
when it's reading the length that it

483
00:15:55,440 --> 00:15:58,079
should be sending and you can actually

484
00:15:58,079 --> 00:16:00,800
send like 32 kilobytes or 64 kilobytes

485
00:16:00,800 --> 00:16:02,079
so basically it sends its report

486
00:16:02,079 --> 00:16:03,360
descriptor and then it just keeps

487
00:16:03,360 --> 00:16:05,360
dumping data from ram or sorry from

488
00:16:05,360 --> 00:16:06,399
flash

489
00:16:06,399 --> 00:16:08,720
so colin realized that he could monitor

490
00:16:08,720 --> 00:16:10,959
the usb communication

491
00:16:10,959 --> 00:16:13,120
right when that report request was

492
00:16:13,120 --> 00:16:14,399
happening

493
00:16:14,399 --> 00:16:16,240
this would trigger

494
00:16:16,240 --> 00:16:17,360
the

495
00:16:17,360 --> 00:16:18,959
chip shouter and then that would do the

496
00:16:18,959 --> 00:16:20,720
em glitch

497
00:16:20,720 --> 00:16:22,480
over this device and then if you get it

498
00:16:22,480 --> 00:16:24,480
right the device dumps its entire flash

499
00:16:24,480 --> 00:16:26,480
or enough of the flash that contains the

500
00:16:26,480 --> 00:16:28,079
metadata which is the recovery seed and

501
00:16:28,079 --> 00:16:29,360
some other things

502
00:16:29,360 --> 00:16:31,600
um so very very cool

503
00:16:31,600 --> 00:16:33,279
and uh he had helped me out with this he

504
00:16:33,279 --> 00:16:34,959
had actually sent me a chip shouter i

505
00:16:34,959 --> 00:16:36,720
went to a surplus store in my area up in

506
00:16:36,720 --> 00:16:39,199
portland and found this like xy i think

507
00:16:39,199 --> 00:16:41,279
it was like a microscope or like a lab

508
00:16:41,279 --> 00:16:44,160
xy table so you can move stuff very very

509
00:16:44,160 --> 00:16:46,480
very finely and there's like little

510
00:16:46,480 --> 00:16:48,639
knobs to kind of adjust stuff

511
00:16:48,639 --> 00:16:51,839
so part of em glitching is

512
00:16:51,839 --> 00:16:53,440
besides trying to get the right

513
00:16:53,440 --> 00:16:55,279
characteristics of when to glitch and

514
00:16:55,279 --> 00:16:56,639
the strength of the glitch all those

515
00:16:56,639 --> 00:16:58,160
things you also have the physical

516
00:16:58,160 --> 00:17:00,480
element of your xy coordinates and your

517
00:17:00,480 --> 00:17:02,399
z coordinates and which coil do you want

518
00:17:02,399 --> 00:17:04,160
to use to generate you know which way

519
00:17:04,160 --> 00:17:06,240
does the magnetic field want to go

520
00:17:06,240 --> 00:17:08,400
so a lot of like physical phenomenon

521
00:17:08,400 --> 00:17:10,640
stuff to mess with also

522
00:17:10,640 --> 00:17:12,079
really really fun

523
00:17:12,079 --> 00:17:14,799
and so i built this platform

524
00:17:14,799 --> 00:17:17,359
had the trezor on there and um just

525
00:17:17,359 --> 00:17:19,839
basically moved the move the the device

526
00:17:19,839 --> 00:17:21,760
around until i could find some

527
00:17:21,760 --> 00:17:23,520
interesting behavior and i was able to

528
00:17:23,520 --> 00:17:25,199
replicate his stuff but it turns out

529
00:17:25,199 --> 00:17:27,599
that the the trezor that i was hacking

530
00:17:27,599 --> 00:17:29,120
was an earlier version of firmware that

531
00:17:29,120 --> 00:17:32,480
wasn't susceptible to this uh so it was

532
00:17:32,480 --> 00:17:35,840
still fun to to learn this and

533
00:17:35,840 --> 00:17:38,400
em fault injection is yeah very exciting

534
00:17:38,400 --> 00:17:41,679
also colin made a device called the

535
00:17:41,679 --> 00:17:42,679
pico

536
00:17:42,679 --> 00:17:44,640
emp

537
00:17:44,640 --> 00:17:47,039
yeah pico emp so it's a kit that you can

538
00:17:47,039 --> 00:17:50,240
build to do very basic electric magnetic

539
00:17:50,240 --> 00:17:51,600
fault injection so if you want to get

540
00:17:51,600 --> 00:17:53,039
into this stuff but don't want to again

541
00:17:53,039 --> 00:17:54,720
don't want to go commercial you can

542
00:17:54,720 --> 00:17:56,480
build your own kind of hold it over

543
00:17:56,480 --> 00:17:58,160
devices and see what happens and you can

544
00:17:58,160 --> 00:17:59,200
do it

545
00:17:59,200 --> 00:18:00,400
above the case

546
00:18:00,400 --> 00:18:01,919
you can sometimes you have to open the

547
00:18:01,919 --> 00:18:03,440
device and do it to the case it just

548
00:18:03,440 --> 00:18:05,520
depends on the device

549
00:18:05,520 --> 00:18:07,600
um but here we can kind of see some fun

550
00:18:07,600 --> 00:18:10,559
results of attacks that didn't work you

551
00:18:10,559 --> 00:18:12,000
know a lot of times you just don't know

552
00:18:12,000 --> 00:18:13,760
what's going to happen

553
00:18:13,760 --> 00:18:15,600
so this there's like all sorts of crazy

554
00:18:15,600 --> 00:18:17,440
stuff on the screen so i don't know what

555
00:18:17,440 --> 00:18:19,280
it affected during the program flow but

556
00:18:19,280 --> 00:18:21,280
it was like drew something to the screen

557
00:18:21,280 --> 00:18:22,720
and then drew a bunch of other stuff to

558
00:18:22,720 --> 00:18:24,880
the screen so it's like like a bunch of

559
00:18:24,880 --> 00:18:27,200
error messages and stuff in there

560
00:18:27,200 --> 00:18:29,520
this one says please unplug the device

561
00:18:29,520 --> 00:18:31,120
detected

562
00:18:31,120 --> 00:18:33,679
which was like huh and then there's

563
00:18:33,679 --> 00:18:35,200
just a bunch of weird characters so you

564
00:18:35,200 --> 00:18:37,520
get a lot of those responses uh which

565
00:18:37,520 --> 00:18:39,440
are just kind of entertaining and then

566
00:18:39,440 --> 00:18:41,120
it's like figuring out

567
00:18:41,120 --> 00:18:43,120
how to properly do it and get the right

568
00:18:43,120 --> 00:18:45,039
timing where like sometimes it just

569
00:18:45,039 --> 00:18:46,799
works and even if you have the right

570
00:18:46,799 --> 00:18:49,919
position you know 99.9

571
00:18:49,919 --> 00:18:51,120
of the time

572
00:18:51,120 --> 00:18:52,640
you're still not going to successfully

573
00:18:52,640 --> 00:18:54,880
hit it it's just kind of luck with all

574
00:18:54,880 --> 00:18:56,240
of your other reverse engineering and

575
00:18:56,240 --> 00:18:58,320
combinations of stuff to get it

576
00:18:58,320 --> 00:19:00,000
but yeah a lot of fun so i did that kind

577
00:19:00,000 --> 00:19:02,400
of in parallel

578
00:19:02,400 --> 00:19:03,440
and then

579
00:19:03,440 --> 00:19:06,720
another option for the stm32 which is

580
00:19:06,720 --> 00:19:08,080
really funny because

581
00:19:08,080 --> 00:19:10,640
the device is known to be vulnerable and

582
00:19:10,640 --> 00:19:13,679
um st microelectronics knows about it

583
00:19:13,679 --> 00:19:15,440
and there's billions of devices not just

584
00:19:15,440 --> 00:19:17,600
hardware wallets that use it um but they

585
00:19:17,600 --> 00:19:19,200
haven't fixed the problem and i'm

586
00:19:19,200 --> 00:19:20,559
assuming that they haven't because they

587
00:19:20,559 --> 00:19:23,280
want to force people or or guide people

588
00:19:23,280 --> 00:19:25,120
to use more secure devices or better

589
00:19:25,120 --> 00:19:27,280
devices maybe that are not susceptible

590
00:19:27,280 --> 00:19:30,000
to fault injection the problem is not

591
00:19:30,000 --> 00:19:31,600
everybody uses the latest and greatest

592
00:19:31,600 --> 00:19:33,280
stuff and especially with the with the

593
00:19:33,280 --> 00:19:34,960
way that the semiconductor industry is

594
00:19:34,960 --> 00:19:36,960
going and the chip shortages

595
00:19:36,960 --> 00:19:38,480
we might not be able to use the latest

596
00:19:38,480 --> 00:19:39,840
and greatest stuff we might have to use

597
00:19:39,840 --> 00:19:41,520
what's available on the market which are

598
00:19:41,520 --> 00:19:43,600
going to be robust devices that have

599
00:19:43,600 --> 00:19:45,840
been existing for a long time so any

600
00:19:45,840 --> 00:19:47,200
device that's out there is going to be

601
00:19:47,200 --> 00:19:49,840
susceptible which is kind of cool right

602
00:19:49,840 --> 00:19:52,000
it's like yes some people like hacking

603
00:19:52,000 --> 00:19:53,520
the latest things

604
00:19:53,520 --> 00:19:55,200
but there are lots of vulnerable things

605
00:19:55,200 --> 00:19:57,120
that are still

606
00:19:57,120 --> 00:19:59,760
out there just like you know some some

607
00:19:59,760 --> 00:20:01,520
people patch their computers

608
00:20:01,520 --> 00:20:03,360
but most people don't and that's how we

609
00:20:03,360 --> 00:20:05,440
get all of these ridiculous you know

610
00:20:05,440 --> 00:20:07,120
software vulnerabilities and malware and

611
00:20:07,120 --> 00:20:08,400
ransomware and all this stuff because

612
00:20:08,400 --> 00:20:10,080
people are not upgrading same thing with

613
00:20:10,080 --> 00:20:11,360
hardware and it's a lot harder to

614
00:20:11,360 --> 00:20:12,720
upgrade hardware right it's like

615
00:20:12,720 --> 00:20:15,440
re-spinning silicon is not an easy task

616
00:20:15,440 --> 00:20:18,000
to fix a problem which then somebody

617
00:20:18,000 --> 00:20:19,600
could still figure out some new attack

618
00:20:19,600 --> 00:20:22,000
against it so it's definitely a cost you

619
00:20:22,000 --> 00:20:24,400
know versus security trade-off anyway so

620
00:20:24,400 --> 00:20:26,799
another method i was looking at

621
00:20:26,799 --> 00:20:28,400
is a lower level

622
00:20:28,400 --> 00:20:29,520
than

623
00:20:29,520 --> 00:20:31,600
looking at the user firmware this is

624
00:20:31,600 --> 00:20:33,440
taking advantage of the actual boot rom

625
00:20:33,440 --> 00:20:34,880
and the boot loader that's built into

626
00:20:34,880 --> 00:20:37,600
the stm32 so regardless of what version

627
00:20:37,600 --> 00:20:39,840
of firmware something is running

628
00:20:39,840 --> 00:20:41,679
this attack will still let me get the

629
00:20:41,679 --> 00:20:44,400
entire flash memory contents

630
00:20:44,400 --> 00:20:46,159
so some mitigations that trezler has

631
00:20:46,159 --> 00:20:48,559
done since since the since my attack and

632
00:20:48,559 --> 00:20:50,480
and was based on you know the earlier

633
00:20:50,480 --> 00:20:52,240
attacks they've added encryption and

634
00:20:52,240 --> 00:20:53,280
other things

635
00:20:53,280 --> 00:20:55,039
um but ultimately it doesn't matter

636
00:20:55,039 --> 00:20:56,559
what's at the high level if you're if

637
00:20:56,559 --> 00:20:58,640
your base is not secure

638
00:20:58,640 --> 00:21:00,240
right it's just like the internet it was

639
00:21:00,240 --> 00:21:02,000
never designed to be secure but we're

640
00:21:02,000 --> 00:21:03,600
trying to patch it and make it secure

641
00:21:03,600 --> 00:21:04,799
because now we're all using it for

642
00:21:04,799 --> 00:21:06,640
secure things um same thing with

643
00:21:06,640 --> 00:21:07,919
hardware so

644
00:21:07,919 --> 00:21:09,600
they try to do things and mitigate

645
00:21:09,600 --> 00:21:12,400
things in software in firmware but at

646
00:21:12,400 --> 00:21:13,840
the lowest level

647
00:21:13,840 --> 00:21:15,840
we can still exploit the chip itself to

648
00:21:15,840 --> 00:21:17,600
get all the firmware off and there's

649
00:21:17,600 --> 00:21:19,039
been some work about this published

650
00:21:19,039 --> 00:21:22,720
through also through kraken um

651
00:21:22,720 --> 00:21:24,480
and uh

652
00:21:24,480 --> 00:21:26,559
they're using the serial bootloader so

653
00:21:26,559 --> 00:21:28,320
using a uart interface to communicate

654
00:21:28,320 --> 00:21:29,840
and there's like a read memory command

655
00:21:29,840 --> 00:21:33,120
so you basically downgrade to from rdp2

656
00:21:33,120 --> 00:21:35,120
to rdp1 which enables the serial

657
00:21:35,120 --> 00:21:36,480
bootloader which is different from the

658
00:21:36,480 --> 00:21:38,480
debug interface and then there's a read

659
00:21:38,480 --> 00:21:39,919
memory command that you can send and

660
00:21:39,919 --> 00:21:42,000
read memory and and you have to also do

661
00:21:42,000 --> 00:21:43,360
a fault injection on that so it's like a

662
00:21:43,360 --> 00:21:45,360
double fault injection and each time you

663
00:21:45,360 --> 00:21:48,240
do a read memory command it's 256 bytes

664
00:21:48,240 --> 00:21:49,679
so you kind of have to get a lot of it

665
00:21:49,679 --> 00:21:50,960
if you're going to you know grab the

666
00:21:50,960 --> 00:21:53,280
whole the whole image

667
00:21:53,280 --> 00:21:55,280
this also requires physically taking the

668
00:21:55,280 --> 00:21:58,240
chip off of a board and putting it into

669
00:21:58,240 --> 00:22:00,240
the socket which is not really a big

670
00:22:00,240 --> 00:22:02,720
deal it's just an extra step

671
00:22:02,720 --> 00:22:04,000
so there's some other work i'm doing on

672
00:22:04,000 --> 00:22:05,280
this as well that hopefully i'll be able

673
00:22:05,280 --> 00:22:07,360
to release at some point and of course

674
00:22:07,360 --> 00:22:09,520
doing glitching using my chip whisperer

675
00:22:09,520 --> 00:22:11,520
uh to do my serial interfacing i'm using

676
00:22:11,520 --> 00:22:13,120
a usb to serial adapter so i can

677
00:22:13,120 --> 00:22:15,039
communicate from my computer write the

678
00:22:15,039 --> 00:22:17,039
code i need to to communicate to the

679
00:22:17,039 --> 00:22:19,039
target and i'm using a device called the

680
00:22:19,039 --> 00:22:20,880
uh the mu art

681
00:22:20,880 --> 00:22:22,720
i kind of call it i call it micro uart

682
00:22:22,720 --> 00:22:25,200
but it's basically a nice usb to serial

683
00:22:25,200 --> 00:22:28,480
adapter that um has some voltage level

684
00:22:28,480 --> 00:22:31,440
shifters in there and some isolation so

685
00:22:31,440 --> 00:22:34,000
you're not directly loading the pins and

686
00:22:34,000 --> 00:22:34,960
things so it's kind of handy you got

687
00:22:34,960 --> 00:22:37,840
that on crowd supply

688
00:22:37,840 --> 00:22:39,200
and yeah so here's a picture of like

689
00:22:39,200 --> 00:22:41,120
inside you take the chip out you put it

690
00:22:41,120 --> 00:22:42,880
in the socket and now it actually breaks

691
00:22:42,880 --> 00:22:44,400
out all of the connections for you and

692
00:22:44,400 --> 00:22:47,760
then you can connect up what you need

693
00:22:48,000 --> 00:22:50,799
so one one one problem with the serial

694
00:22:50,799 --> 00:22:51,919
boot loader

695
00:22:51,919 --> 00:22:52,960
is

696
00:22:52,960 --> 00:22:54,559
because it's using

697
00:22:54,559 --> 00:22:56,559
an asynchronous serial

698
00:22:56,559 --> 00:22:57,840
interface

699
00:22:57,840 --> 00:22:59,360
it's not

700
00:22:59,360 --> 00:23:01,679
synchronized to the clock

701
00:23:01,679 --> 00:23:03,679
or or i guess more specifically the

702
00:23:03,679 --> 00:23:05,360
target who's communicating to it which

703
00:23:05,360 --> 00:23:09,840
is me is not synchronized to the chip

704
00:23:09,840 --> 00:23:12,240
so when i send my command to read the

705
00:23:12,240 --> 00:23:14,480
data

706
00:23:14,480 --> 00:23:16,400
the chip might have to do something else

707
00:23:16,400 --> 00:23:17,919
first before it actually responds to

708
00:23:17,919 --> 00:23:19,360
that because we're not synchronized at

709
00:23:19,360 --> 00:23:21,360
the same time so we can see there's a

710
00:23:21,360 --> 00:23:23,120
lot of jitteriness when i'm sending my

711
00:23:23,120 --> 00:23:24,960
command and i'm doing a glitch my fault

712
00:23:24,960 --> 00:23:26,080
injection

713
00:23:26,080 --> 00:23:28,000
somewhere between sending the read

714
00:23:28,000 --> 00:23:29,600
command and getting the response back

715
00:23:29,600 --> 00:23:32,159
from the stm32 is when is when the the

716
00:23:32,159 --> 00:23:34,640
check is happening uh you know is the

717
00:23:34,640 --> 00:23:36,960
user allowed to read memory

718
00:23:36,960 --> 00:23:39,760
and there's like a 10 microsecond jitter

719
00:23:39,760 --> 00:23:41,679
uh which is pretty significant

720
00:23:41,679 --> 00:23:43,919
and it means that while sometimes you

721
00:23:43,919 --> 00:23:45,679
get lucky and you can read the contents

722
00:23:45,679 --> 00:23:47,279
other times you get unlucky and you

723
00:23:47,279 --> 00:23:50,720
completely erase the the flash

724
00:23:50,720 --> 00:23:52,400
because there's another command in the

725
00:23:52,400 --> 00:23:53,679
list you know there's read memory

726
00:23:53,679 --> 00:23:55,279
there's right memory there's erase

727
00:23:55,279 --> 00:23:57,120
entire memory and when you're when

728
00:23:57,120 --> 00:23:58,240
you're glitching you don't really know

729
00:23:58,240 --> 00:23:59,840
what you're hitting and when there's

730
00:23:59,840 --> 00:24:01,360
jitter you really don't know what you're

731
00:24:01,360 --> 00:24:04,480
hitting so here's what it looks like

732
00:24:04,480 --> 00:24:07,440
you know it's it's significant um so i

733
00:24:07,440 --> 00:24:09,279
do have some ideas of ways to mitigate

734
00:24:09,279 --> 00:24:10,559
that and reduce that and that's

735
00:24:10,559 --> 00:24:11,919
something that if you're doing this on a

736
00:24:11,919 --> 00:24:13,200
real device

737
00:24:13,200 --> 00:24:15,039
you know it would be nice to have things

738
00:24:15,039 --> 00:24:17,200
a little more stable because sometimes

739
00:24:17,200 --> 00:24:18,720
it works you get all the all the data

740
00:24:18,720 --> 00:24:20,240
sometimes it doesn't

741
00:24:20,240 --> 00:24:21,840
uh which is great if you're just

742
00:24:21,840 --> 00:24:23,520
releasing information and telling people

743
00:24:23,520 --> 00:24:25,360
about it but if you want to do it on a

744
00:24:25,360 --> 00:24:27,279
customer that maybe has a lot of money

745
00:24:27,279 --> 00:24:29,520
on it uh that could change their life

746
00:24:29,520 --> 00:24:30,320
and

747
00:24:30,320 --> 00:24:32,080
you mess it up that's kind of

748
00:24:32,080 --> 00:24:34,240
problematic

749
00:24:34,240 --> 00:24:36,480
so yeah definitely some fun things to to

750
00:24:36,480 --> 00:24:38,720
do

751
00:24:38,799 --> 00:24:41,120
i promised i would put um some work on

752
00:24:41,120 --> 00:24:42,400
the ledger

753
00:24:42,400 --> 00:24:45,120
in here as well to be uh to be an equal

754
00:24:45,120 --> 00:24:47,760
opportunity hacker and um this is some

755
00:24:47,760 --> 00:24:51,200
work on a ledger nano s

756
00:24:51,200 --> 00:24:52,960
and uh

757
00:24:52,960 --> 00:24:55,919
all these cameras are coming out

758
00:24:55,919 --> 00:24:57,760
i'll just i'm just gonna relish in this

759
00:24:57,760 --> 00:25:00,000
moment while you take pictures of it um

760
00:25:00,000 --> 00:25:01,600
yeah so so somebody contacted me and

761
00:25:01,600 --> 00:25:04,400
said hey i have a ledger um

762
00:25:04,400 --> 00:25:06,640
one of the buttons is broken

763
00:25:06,640 --> 00:25:08,240
and i can't

764
00:25:08,240 --> 00:25:10,960
touch press the button to do what i need

765
00:25:10,960 --> 00:25:12,559
to do because the ledger has two buttons

766
00:25:12,559 --> 00:25:13,760
left and right and you have to press

767
00:25:13,760 --> 00:25:15,600
both of them to enter things

768
00:25:15,600 --> 00:25:17,520
uh and he didn't know what to do he's

769
00:25:17,520 --> 00:25:19,679
like i i can't i know my pin but i can't

770
00:25:19,679 --> 00:25:20,640
enter it

771
00:25:20,640 --> 00:25:23,120
the ledger is not responding

772
00:25:23,120 --> 00:25:24,880
so this is one i said okay if it's a

773
00:25:24,880 --> 00:25:27,760
mechanical failure of the of the switch

774
00:25:27,760 --> 00:25:30,240
it shouldn't be too hard to fix

775
00:25:30,240 --> 00:25:32,640
um so this one i was watching a tear

776
00:25:32,640 --> 00:25:35,279
down that um uh dave jones did the who

777
00:25:35,279 --> 00:25:37,760
runs the eev blog who had taken one of

778
00:25:37,760 --> 00:25:39,760
these things apart so i was able to look

779
00:25:39,760 --> 00:25:41,279
at this before i even

780
00:25:41,279 --> 00:25:43,200
bought a ledger to look at and before

781
00:25:43,200 --> 00:25:44,960
the guy even sent me his ledger i had

782
00:25:44,960 --> 00:25:47,039
already done my my information gathering

783
00:25:47,039 --> 00:25:48,640
and kind of my research to know what i

784
00:25:48,640 --> 00:25:49,919
was getting into

785
00:25:49,919 --> 00:25:51,279
and i could see you know the switches

786
00:25:51,279 --> 00:25:53,520
were exposed here's the the kind of

787
00:25:53,520 --> 00:25:55,360
general purpose microcontroller to do

788
00:25:55,360 --> 00:25:57,360
the ui front-facing stuff which is where

789
00:25:57,360 --> 00:25:59,120
the switches are connected to and then

790
00:25:59,120 --> 00:26:01,360
there's the secure element uh next to it

791
00:26:01,360 --> 00:26:03,679
which is storing the uh

792
00:26:03,679 --> 00:26:05,200
critical information

793
00:26:05,200 --> 00:26:06,400
but i didn't care about this right

794
00:26:06,400 --> 00:26:08,000
because we knew the pin i just had to

795
00:26:08,000 --> 00:26:09,279
deal with that

796
00:26:09,279 --> 00:26:12,159
so i knew where the switches were i did

797
00:26:12,159 --> 00:26:14,159
a very quick reverse engineering once i

798
00:26:14,159 --> 00:26:16,320
bought one um to do my continuity

799
00:26:16,320 --> 00:26:17,840
testing and figure out where the switch

800
00:26:17,840 --> 00:26:20,159
went directly to the i o pins of the

801
00:26:20,159 --> 00:26:21,679
microcontroller

802
00:26:21,679 --> 00:26:23,440
and then verified when when the guy sent

803
00:26:23,440 --> 00:26:25,440
me his that his his switch just wasn't

804
00:26:25,440 --> 00:26:26,320
working

805
00:26:26,320 --> 00:26:28,240
there is just a mechanical failure in it

806
00:26:28,240 --> 00:26:29,840
which is pretty amazing because these

807
00:26:29,840 --> 00:26:31,279
you know these types of devices are

808
00:26:31,279 --> 00:26:32,480
designed to

809
00:26:32,480 --> 00:26:34,240
to withstand hundreds of thousands or

810
00:26:34,240 --> 00:26:36,159
millions of presses and it just failed

811
00:26:36,159 --> 00:26:37,600
which is fine

812
00:26:37,600 --> 00:26:40,158
um so

813
00:26:40,240 --> 00:26:42,240
what i ended up doing is the

814
00:26:42,240 --> 00:26:45,039
ugliest one of the ugliest hacks um but

815
00:26:45,039 --> 00:26:47,679
also one of the the totally effective of

816
00:26:47,679 --> 00:26:49,679
basically bypassing the switch and just

817
00:26:49,679 --> 00:26:53,200
soldering on my own uh my own button to

818
00:26:53,200 --> 00:26:56,320
it bypassing the one on the device and

819
00:26:56,320 --> 00:26:58,240
then

820
00:26:58,240 --> 00:27:00,559
called up the customer and said okay the

821
00:27:00,559 --> 00:27:02,640
buttons work and he told me his pin and

822
00:27:02,640 --> 00:27:04,000
i just entered you know left and right

823
00:27:04,000 --> 00:27:05,600
left and right and entered things and

824
00:27:05,600 --> 00:27:08,240
this is showing the uh about to be the

825
00:27:08,240 --> 00:27:10,240
confirmation screen to to actually free

826
00:27:10,240 --> 00:27:13,919
his money from the device

827
00:27:14,000 --> 00:27:15,520
and i think that's kind of cool some of

828
00:27:15,520 --> 00:27:16,880
you might be thinking well that's not

829
00:27:16,880 --> 00:27:19,120
really a hack that's kind of lame it's

830
00:27:19,120 --> 00:27:22,080
just a button um but it shows that you

831
00:27:22,080 --> 00:27:24,320
know hacking really to me is just like

832
00:27:24,320 --> 00:27:26,240
using the minimal amount of effort to

833
00:27:26,240 --> 00:27:28,720
get the job done uh

834
00:27:28,720 --> 00:27:30,880
maybe there was a a different way right

835
00:27:30,880 --> 00:27:32,960
a more advanced way to get the contents

836
00:27:32,960 --> 00:27:35,279
out to free his funds

837
00:27:35,279 --> 00:27:36,000
but

838
00:27:36,000 --> 00:27:37,919
this is really the hacker way right it's

839
00:27:37,919 --> 00:27:40,080
like looking for that simplest way to

840
00:27:40,080 --> 00:27:42,240
defeat the device to to achieve the goal

841
00:27:42,240 --> 00:27:43,679
which was to get the money off it

842
00:27:43,679 --> 00:27:46,000
doesn't have to be a high profile attack

843
00:27:46,000 --> 00:27:47,120
every time

844
00:27:47,120 --> 00:27:49,200
which i thought was kind of cool and and

845
00:27:49,200 --> 00:27:51,440
this didn't have nearly as much money as

846
00:27:51,440 --> 00:27:53,679
the the trezor

847
00:27:53,679 --> 00:27:56,159
but it's equally as important and it was

848
00:27:56,159 --> 00:27:58,640
equally as satisfying possibly even more

849
00:27:58,640 --> 00:28:01,120
satisfying because he he was like this

850
00:28:01,120 --> 00:28:03,039
is amazing i didn't think i'd ever see

851
00:28:03,039 --> 00:28:04,640
the money i'm you know very thankful of

852
00:28:04,640 --> 00:28:07,520
this with a super easy hack

853
00:28:07,520 --> 00:28:09,279
right so you can kind of see the variety

854
00:28:09,279 --> 00:28:11,039
this was like 20 minutes versus three

855
00:28:11,039 --> 00:28:13,360
months

856
00:28:14,799 --> 00:28:17,520
here's another one um this was

857
00:28:17,520 --> 00:28:19,760
hacking a phone

858
00:28:19,760 --> 00:28:22,640
because uh the customer had a samsung

859
00:28:22,640 --> 00:28:24,320
galaxy phone and he had forgotten his

860
00:28:24,320 --> 00:28:26,080
swipe password there's a whole story

861
00:28:26,080 --> 00:28:28,000
behind it but he basically bought

862
00:28:28,000 --> 00:28:30,799
bitcoin a long time ago

863
00:28:30,799 --> 00:28:32,960
uh ended up having a daughter and kind

864
00:28:32,960 --> 00:28:34,880
of got distracted through his phone in a

865
00:28:34,880 --> 00:28:37,360
box and forgot about it completely until

866
00:28:37,360 --> 00:28:39,279
bitcoin started going way up and he's

867
00:28:39,279 --> 00:28:41,520
like wait i i think i bought bitcoin and

868
00:28:41,520 --> 00:28:42,720
he ended up finding the phone but

869
00:28:42,720 --> 00:28:44,399
couldn't remember his password

870
00:28:44,399 --> 00:28:47,279
uh and this was one where he had thought

871
00:28:47,279 --> 00:28:50,880
that there would be maybe like multi

872
00:28:50,880 --> 00:28:52,399
millions of dollars

873
00:28:52,399 --> 00:28:54,799
so it was kind of exciting um i also

874
00:28:54,799 --> 00:28:56,840
liked it because it was using different

875
00:28:56,840 --> 00:28:59,520
techniques and even though i've used the

876
00:28:59,520 --> 00:29:01,760
techniques a lot of times it's still fun

877
00:29:01,760 --> 00:29:02,799
to do it

878
00:29:02,799 --> 00:29:04,480
on a different platform

879
00:29:04,480 --> 00:29:06,399
so this one was yeah these were just

880
00:29:06,399 --> 00:29:08,559
showing my examples my devices that i

881
00:29:08,559 --> 00:29:11,039
bought on ebay to kind of mimic his but

882
00:29:11,039 --> 00:29:12,480
it's the you know the swipe password

883
00:29:12,480 --> 00:29:13,760
that you kind of draw with your finger

884
00:29:13,760 --> 00:29:16,799
on an android device

885
00:29:16,880 --> 00:29:18,960
uh it turns out that this version this

886
00:29:18,960 --> 00:29:21,279
is a samsung galaxy s3 so an older

887
00:29:21,279 --> 00:29:23,600
version but again the age doesn't really

888
00:29:23,600 --> 00:29:25,520
matter because older devices are still

889
00:29:25,520 --> 00:29:27,279
out there and they're still vulnerable

890
00:29:27,279 --> 00:29:28,720
this one

891
00:29:28,720 --> 00:29:30,240
was kind of cool because it actually had

892
00:29:30,240 --> 00:29:33,520
a tiny little jtag connector exposed

893
00:29:33,520 --> 00:29:34,960
right when you pop the cover off you

894
00:29:34,960 --> 00:29:36,880
just have to unscrew a couple screws and

895
00:29:36,880 --> 00:29:38,320
there's a little jtag connector right

896
00:29:38,320 --> 00:29:40,000
here which is an industry standard debug

897
00:29:40,000 --> 00:29:42,000
interface that if you get access to it

898
00:29:42,000 --> 00:29:43,760
and it's not locked

899
00:29:43,760 --> 00:29:45,840
that's the that's kind of your that's

900
00:29:45,840 --> 00:29:47,039
your win

901
00:29:47,039 --> 00:29:48,399
just like with the trezor you know

902
00:29:48,399 --> 00:29:51,039
getting access to swd is a is is an arm

903
00:29:51,039 --> 00:29:53,440
specific debug interface but jtag we see

904
00:29:53,440 --> 00:29:54,640
everywhere

905
00:29:54,640 --> 00:29:57,039
nowadays it's more often locked than not

906
00:29:57,039 --> 00:29:58,559
so you have to do fault injection or

907
00:29:58,559 --> 00:30:00,159
something else to enable it but in this

908
00:30:00,159 --> 00:30:02,080
case it was totally wide open

909
00:30:02,080 --> 00:30:03,760
only for the first like half a second

910
00:30:03,760 --> 00:30:05,279
when the phone booted so you had to at

911
00:30:05,279 --> 00:30:07,600
least do that you know try to connect to

912
00:30:07,600 --> 00:30:09,360
it and halt the device before it kept

913
00:30:09,360 --> 00:30:11,520
executing

914
00:30:11,520 --> 00:30:12,960
because this was an older device i

915
00:30:12,960 --> 00:30:14,799
actually found this cable that i could

916
00:30:14,799 --> 00:30:17,120
use that attached to that tiny little

917
00:30:17,120 --> 00:30:18,640
connector

918
00:30:18,640 --> 00:30:20,799
and then it connected up to my jtag

919
00:30:20,799 --> 00:30:23,039
interface hardware so in theory i should

920
00:30:23,039 --> 00:30:25,200
have been able to just plug this in run

921
00:30:25,200 --> 00:30:27,840
some software dump all the code and then

922
00:30:27,840 --> 00:30:32,159
once i had his his uh all of his data

923
00:30:32,159 --> 00:30:34,399
the way that android works is it's very

924
00:30:34,399 --> 00:30:35,679
you know it's a linux based system and

925
00:30:35,679 --> 00:30:37,440
it has different partitions so i could

926
00:30:37,440 --> 00:30:39,200
find the user partition i could find

927
00:30:39,200 --> 00:30:41,840
where his gesture swipe password was

928
00:30:41,840 --> 00:30:43,760
stored and then compare that because

929
00:30:43,760 --> 00:30:45,279
that's a sha one hash i could compare

930
00:30:45,279 --> 00:30:47,520
that with a list of like a lookup table

931
00:30:47,520 --> 00:30:49,360
of all of the possible combinations and

932
00:30:49,360 --> 00:30:51,440
their sha-1 hashes and compare

933
00:30:51,440 --> 00:30:52,640
so in theory it should have been really

934
00:30:52,640 --> 00:30:55,440
easy but like with every project except

935
00:30:55,440 --> 00:30:57,440
for the button um you know things that

936
00:30:57,440 --> 00:30:58,720
appear easy

937
00:30:58,720 --> 00:31:00,720
usually spiral out of control very

938
00:31:00,720 --> 00:31:02,320
quickly

939
00:31:02,320 --> 00:31:03,600
so this wasn't working i was getting

940
00:31:03,600 --> 00:31:05,120
some errors and i thought maybe it was

941
00:31:05,120 --> 00:31:06,640
some a wiring error or something

942
00:31:06,640 --> 00:31:08,799
communication error i don't really know

943
00:31:08,799 --> 00:31:10,559
so i was like okay maybe the cable is

944
00:31:10,559 --> 00:31:12,880
the problem and i did continuity testing

945
00:31:12,880 --> 00:31:14,640
and everything and it seemed okay

946
00:31:14,640 --> 00:31:16,320
turns out that i made a mistake with

947
00:31:16,320 --> 00:31:17,279
that but

948
00:31:17,279 --> 00:31:18,720
we'll get to that later

949
00:31:18,720 --> 00:31:20,559
so i wanted to hard wire

950
00:31:20,559 --> 00:31:22,480
i'm going to bypass that flexible cable

951
00:31:22,480 --> 00:31:24,399
altogether and i'm going to do tiny

952
00:31:24,399 --> 00:31:27,360
micro soldering from that connector to

953
00:31:27,360 --> 00:31:28,559
an adapter

954
00:31:28,559 --> 00:31:30,960
to see if i can actually detect jtag at

955
00:31:30,960 --> 00:31:34,240
all because all of the forums are saying

956
00:31:34,240 --> 00:31:37,440
jtag is there but i couldn't see it yet

957
00:31:37,440 --> 00:31:38,960
so i did this kind of hard wiring

958
00:31:38,960 --> 00:31:40,720
experiment my first time really doing

959
00:31:40,720 --> 00:31:42,480
micro soldering this is

960
00:31:42,480 --> 00:31:45,360
0.1 millimeter

961
00:31:45,360 --> 00:31:46,480
diameter

962
00:31:46,480 --> 00:31:48,720
like a magnet wire

963
00:31:48,720 --> 00:31:51,039
and had my microscope and doing it

964
00:31:51,039 --> 00:31:52,480
brought it out to an adapter and then i

965
00:31:52,480 --> 00:31:54,399
used the jtagulator which is a tool that

966
00:31:54,399 --> 00:31:57,840
i designed back in 2013 that i had no no

967
00:31:57,840 --> 00:31:59,440
expectation of having it still being

968
00:31:59,440 --> 00:32:01,760
manufactured and used today uh which is

969
00:32:01,760 --> 00:32:03,200
very cool but it's a device that

970
00:32:03,200 --> 00:32:05,679
basically will query any unknown pins

971
00:32:05,679 --> 00:32:07,360
that you connect to it and emulate

972
00:32:07,360 --> 00:32:09,760
enough of the jtag communication to see

973
00:32:09,760 --> 00:32:11,519
if there's a jtag interface there and

974
00:32:11,519 --> 00:32:13,120
then tell you which pins are the right

975
00:32:13,120 --> 00:32:15,360
ones

976
00:32:15,360 --> 00:32:17,360
because i can rely on this tool and i

977
00:32:17,360 --> 00:32:19,519
didn't know about this i wired it up ran

978
00:32:19,519 --> 00:32:21,120
the ran the tool and i could actually

979
00:32:21,120 --> 00:32:23,360
verify like yes there is a jtag

980
00:32:23,360 --> 00:32:24,559
interface there

981
00:32:24,559 --> 00:32:26,240
so then i said okay cool now that i know

982
00:32:26,240 --> 00:32:28,960
that the hard wiring works

983
00:32:28,960 --> 00:32:31,360
i can then hook it up to

984
00:32:31,360 --> 00:32:33,679
a different debug interface there's a

985
00:32:33,679 --> 00:32:35,760
lot of a lot of interesting like mobile

986
00:32:35,760 --> 00:32:37,440
phone hacking tools that are out there

987
00:32:37,440 --> 00:32:40,080
the first one i used was the rift box

988
00:32:40,080 --> 00:32:42,640
second one i used was the octoplus pro

989
00:32:42,640 --> 00:32:44,080
and they all have these weird like

990
00:32:44,080 --> 00:32:46,240
licensing requirements or you buy

991
00:32:46,240 --> 00:32:48,399
credits from them on these like shady

992
00:32:48,399 --> 00:32:50,480
websites it's really amazing that

993
00:32:50,480 --> 00:32:53,120
anything actually works uh and that more

994
00:32:53,120 --> 00:32:54,640
people don't get ripped off

995
00:32:54,640 --> 00:32:56,640
but the box software that i had my

996
00:32:56,640 --> 00:32:58,480
license expired

997
00:32:58,480 --> 00:32:59,840
so it's like all right so i wanted to

998
00:32:59,840 --> 00:33:01,120
find something that seemed maybe a

999
00:33:01,120 --> 00:33:03,120
little newer and more supported so i got

1000
00:33:03,120 --> 00:33:05,600
the octopus and uh

1001
00:33:05,600 --> 00:33:08,320
wired it all up this says brick because

1002
00:33:08,320 --> 00:33:09,679
during some of my other experiments

1003
00:33:09,679 --> 00:33:11,279
through the usb interface i was running

1004
00:33:11,279 --> 00:33:12,720
some samsung tools and just like

1005
00:33:12,720 --> 00:33:14,399
completely screwed everything up but it

1006
00:33:14,399 --> 00:33:16,559
turns out i only wiped the

1007
00:33:16,559 --> 00:33:18,559
operating system partitions not the user

1008
00:33:18,559 --> 00:33:20,640
data so i was still able to properly

1009
00:33:20,640 --> 00:33:22,080
test so that i could decode the you know

1010
00:33:22,080 --> 00:33:23,279
figure out what the swipe password was

1011
00:33:23,279 --> 00:33:24,880
which is kind of fun

1012
00:33:24,880 --> 00:33:26,320
and here's like you know one of the

1013
00:33:26,320 --> 00:33:27,760
screens

1014
00:33:27,760 --> 00:33:29,760
showing that i could actually

1015
00:33:29,760 --> 00:33:32,320
detect the two devices in that jtag

1016
00:33:32,320 --> 00:33:34,399
chain so i can see that they're there

1017
00:33:34,399 --> 00:33:36,960
uh it's qualcomm part and msn896 there's

1018
00:33:36,960 --> 00:33:38,480
not a lot of information about these

1019
00:33:38,480 --> 00:33:40,799
kind of mobile system on a chip devices

1020
00:33:40,799 --> 00:33:42,240
but these groups that are creating these

1021
00:33:42,240 --> 00:33:43,519
tools or doing enough reverse

1022
00:33:43,519 --> 00:33:45,039
engineering and somehow getting enough

1023
00:33:45,039 --> 00:33:47,360
documentation to know how to communicate

1024
00:33:47,360 --> 00:33:50,320
to the chip and then how to communicate

1025
00:33:50,320 --> 00:33:52,640
from the chip over jtag to deal with the

1026
00:33:52,640 --> 00:33:54,640
external memory device and in this case

1027
00:33:54,640 --> 00:33:56,480
uh we had the the system on a chip but

1028
00:33:56,480 --> 00:33:59,039
then it's external emmc

1029
00:33:59,039 --> 00:34:00,720
which is really nice because dealing

1030
00:34:00,720 --> 00:34:03,519
with emmc devices it's a managed type of

1031
00:34:03,519 --> 00:34:06,000
flash memory device uh so very simple

1032
00:34:06,000 --> 00:34:07,039
interface

1033
00:34:07,039 --> 00:34:08,960
and it appears

1034
00:34:08,960 --> 00:34:11,119
as like a block disk or a block device

1035
00:34:11,119 --> 00:34:12,560
on your computer so if you're able to

1036
00:34:12,560 --> 00:34:14,000
get access to it you can then kind of

1037
00:34:14,000 --> 00:34:15,440
mount it and look around which is really

1038
00:34:15,440 --> 00:34:16,239
cool

1039
00:34:16,239 --> 00:34:18,480
um anyway so yeah it finally came up and

1040
00:34:18,480 --> 00:34:20,560
i started doing my in my extraction it's

1041
00:34:20,560 --> 00:34:22,320
very very slow

1042
00:34:22,320 --> 00:34:24,320
like

1043
00:34:24,320 --> 00:34:27,839
up to 24 hours or so for like a 16 gig

1044
00:34:27,839 --> 00:34:29,918
uh memory but

1045
00:34:29,918 --> 00:34:31,918
hacking isn't always about speed either

1046
00:34:31,918 --> 00:34:33,599
right this is in my lab there was no

1047
00:34:33,599 --> 00:34:34,960
rush to

1048
00:34:34,960 --> 00:34:36,879
try to do it faster i would rather do it

1049
00:34:36,879 --> 00:34:38,960
slower and safer and make sure that it

1050
00:34:38,960 --> 00:34:40,639
was going to work

1051
00:34:40,639 --> 00:34:42,560
so i proved that this option worked over

1052
00:34:42,560 --> 00:34:44,879
jtag that was kind of cool

1053
00:34:44,879 --> 00:34:46,480
but because this was a real project i

1054
00:34:46,480 --> 00:34:48,480
wanted to have a backup plan what if

1055
00:34:48,480 --> 00:34:50,000
what if that didn't work on on the

1056
00:34:50,000 --> 00:34:51,599
customer's phone that i was doing this

1057
00:34:51,599 --> 00:34:54,159
on uh so i wanted to have another option

1058
00:34:54,159 --> 00:34:56,399
and the other option is going directly

1059
00:34:56,399 --> 00:34:58,720
to the emmc and just reading the memory

1060
00:34:58,720 --> 00:35:00,240
device in circuit

1061
00:35:00,240 --> 00:35:02,160
and then manipulating the memory as i as

1062
00:35:02,160 --> 00:35:03,520
i need to

1063
00:35:03,520 --> 00:35:04,880
so this is a picture from a digital

1064
00:35:04,880 --> 00:35:06,480
camera i picked up on ebay the link is

1065
00:35:06,480 --> 00:35:09,200
at the end uh which is pretty nice

1066
00:35:09,200 --> 00:35:10,640
and

1067
00:35:10,640 --> 00:35:12,960
using that octoplus tool they have an

1068
00:35:12,960 --> 00:35:15,440
option for dealing with emmc and will

1069
00:35:15,440 --> 00:35:17,040
even show you the the pin outs where you

1070
00:35:17,040 --> 00:35:19,040
need to connect to a lot of times what

1071
00:35:19,040 --> 00:35:20,960
people will do if they're in a desperate

1072
00:35:20,960 --> 00:35:22,960
situation is just take the memory off of

1073
00:35:22,960 --> 00:35:24,880
the board put it into a socket and then

1074
00:35:24,880 --> 00:35:27,520
they can read the pins a lot of emmc

1075
00:35:27,520 --> 00:35:29,599
devices have the same pin out which is

1076
00:35:29,599 --> 00:35:30,640
cool

1077
00:35:30,640 --> 00:35:31,839
but if you

1078
00:35:31,839 --> 00:35:34,079
can not do that that's better right we

1079
00:35:34,079 --> 00:35:35,680
want to use that minimum

1080
00:35:35,680 --> 00:35:36,800
possible

1081
00:35:36,800 --> 00:35:39,359
attack to be successful taking the chip

1082
00:35:39,359 --> 00:35:41,680
off is a huge risk and in our case we

1083
00:35:41,680 --> 00:35:43,200
needed to just figure out the swipe

1084
00:35:43,200 --> 00:35:45,599
password but then he still had to log

1085
00:35:45,599 --> 00:35:48,160
into his phone and get to the wallet so

1086
00:35:48,160 --> 00:35:49,440
taking this off just would have been a

1087
00:35:49,440 --> 00:35:50,880
hassle so

1088
00:35:50,880 --> 00:35:53,119
um this group had actually figured out

1089
00:35:53,119 --> 00:35:55,440
which pins you need or where the pins

1090
00:35:55,440 --> 00:35:57,440
are and where the test points are to get

1091
00:35:57,440 --> 00:35:59,839
to the connections of that emmc because

1092
00:35:59,839 --> 00:36:01,599
these chips are ball grid array all of

1093
00:36:01,599 --> 00:36:03,599
the connections are balls of solder

1094
00:36:03,599 --> 00:36:05,280
underneath the part which makes hacking

1095
00:36:05,280 --> 00:36:07,599
them like super annoying

1096
00:36:07,599 --> 00:36:09,839
so we had basically for emmc you just

1097
00:36:09,839 --> 00:36:14,079
need a command line a clock line

1098
00:36:14,079 --> 00:36:16,640
and a single data line and there's you

1099
00:36:16,640 --> 00:36:18,160
can have more data lines if you want to

1100
00:36:18,160 --> 00:36:20,000
read faster in parallel but that's the

1101
00:36:20,000 --> 00:36:22,320
cool thing about emmc you'll need ground

1102
00:36:22,320 --> 00:36:25,200
as well uh but you can power the target

1103
00:36:25,200 --> 00:36:28,320
on its own connect up your command clock

1104
00:36:28,320 --> 00:36:30,480
data send the right signals to the chip

1105
00:36:30,480 --> 00:36:32,160
and as long as the chip isn't being used

1106
00:36:32,160 --> 00:36:34,400
by anything else at that time

1107
00:36:34,400 --> 00:36:36,560
it's just going to willingly just dump

1108
00:36:36,560 --> 00:36:37,920
everything for you

1109
00:36:37,920 --> 00:36:39,760
because chips are very trusting unless

1110
00:36:39,760 --> 00:36:42,160
there's like authentication or something

1111
00:36:42,160 --> 00:36:44,079
uh there's also the power two power

1112
00:36:44,079 --> 00:36:45,839
lines which it turns out i didn't need

1113
00:36:45,839 --> 00:36:48,240
but you have two different uh voltage

1114
00:36:48,240 --> 00:36:51,280
rails for uh emmc you have your like i o

1115
00:36:51,280 --> 00:36:52,480
voltages and then you have your your

1116
00:36:52,480 --> 00:36:55,720
core voltage

1117
00:36:56,240 --> 00:36:58,480
so again i did some micro soldering i'm

1118
00:36:58,480 --> 00:37:00,079
all about like you know permanent

1119
00:37:00,079 --> 00:37:01,760
connections if

1120
00:37:01,760 --> 00:37:04,079
if you can because then it seems a

1121
00:37:04,079 --> 00:37:05,200
little safer

1122
00:37:05,200 --> 00:37:06,400
if you're moving stuff around but i'll

1123
00:37:06,400 --> 00:37:08,320
show you a non-permanent option also so

1124
00:37:08,320 --> 00:37:09,680
yeah i did some more micro soldering on

1125
00:37:09,680 --> 00:37:11,040
a different device

1126
00:37:11,040 --> 00:37:12,160
and

1127
00:37:12,160 --> 00:37:14,320
soldered my tiny little wires up to a

1128
00:37:14,320 --> 00:37:15,680
different you know different pin out on

1129
00:37:15,680 --> 00:37:17,599
the adapter

1130
00:37:17,599 --> 00:37:19,119
and then was able to communicate

1131
00:37:19,119 --> 00:37:21,760
directly to the emmc using the same tool

1132
00:37:21,760 --> 00:37:23,839
which was nice uh and then i can

1133
00:37:23,839 --> 00:37:24,800
actually see all the different

1134
00:37:24,800 --> 00:37:27,599
partitions the user data partition is

1135
00:37:27,599 --> 00:37:29,200
like a little over 12 gigs and that's

1136
00:37:29,200 --> 00:37:31,040
where the swipe password is

1137
00:37:31,040 --> 00:37:32,400
and then i could extract everything that

1138
00:37:32,400 --> 00:37:33,520
way

1139
00:37:33,520 --> 00:37:36,000
so once i knew i had two options then i

1140
00:37:36,000 --> 00:37:37,359
was ready to go and deal with the

1141
00:37:37,359 --> 00:37:38,480
customer

1142
00:37:38,480 --> 00:37:39,599
which i'll show you what that looks like

1143
00:37:39,599 --> 00:37:41,520
in a second

1144
00:37:41,520 --> 00:37:42,960
but here is the

1145
00:37:42,960 --> 00:37:46,240
solderless way of accessing test points

1146
00:37:46,240 --> 00:37:49,119
or components on a board and this is a

1147
00:37:49,119 --> 00:37:51,760
device called the vr table um we call it

1148
00:37:51,760 --> 00:37:53,200
the spider table because it looks like a

1149
00:37:53,200 --> 00:37:55,119
spider and there's these arms that you

1150
00:37:55,119 --> 00:37:57,200
can adjust and you put these tiny

1151
00:37:57,200 --> 00:38:00,240
spring-loaded pogo pins into the arms

1152
00:38:00,240 --> 00:38:02,240
and you move them around and place them

1153
00:38:02,240 --> 00:38:03,599
down on where they need to be on the

1154
00:38:03,599 --> 00:38:04,720
board

1155
00:38:04,720 --> 00:38:07,200
super super tiny uh and then we have

1156
00:38:07,200 --> 00:38:09,440
those wired up to the octoplus so this

1157
00:38:09,440 --> 00:38:11,280
was really the third option right if i

1158
00:38:11,280 --> 00:38:13,040
if i couldn't do hard wiring for some

1159
00:38:13,040 --> 00:38:14,480
reason on the customers board we had

1160
00:38:14,480 --> 00:38:16,240
this option to do it and here's part of

1161
00:38:16,240 --> 00:38:19,839
the camera looking down

1162
00:38:20,320 --> 00:38:23,040
so ultimately we got everything ready

1163
00:38:23,040 --> 00:38:26,480
and uh the customer did not want to

1164
00:38:26,480 --> 00:38:29,119
leave his phone with me

1165
00:38:29,119 --> 00:38:30,800
because he was worried right millions of

1166
00:38:30,800 --> 00:38:32,560
dollars and when with dan's we knew it

1167
00:38:32,560 --> 00:38:34,160
was going to be a you know

1168
00:38:34,160 --> 00:38:35,599
we hoped it was going to be like a very

1169
00:38:35,599 --> 00:38:37,359
quick kind of you know multi-hour but a

1170
00:38:37,359 --> 00:38:39,280
single day attack so he flew in and we

1171
00:38:39,280 --> 00:38:41,280
did it this one because if we ended up

1172
00:38:41,280 --> 00:38:43,200
using jta or yeah jtag it would have

1173
00:38:43,200 --> 00:38:45,200
taken a lot of hours

1174
00:38:45,200 --> 00:38:47,599
so he just didn't want to come down and

1175
00:38:47,599 --> 00:38:48,960
hang out for that long which i don't

1176
00:38:48,960 --> 00:38:50,160
really blame him

1177
00:38:50,160 --> 00:38:52,480
so we decided to go up to seattle where

1178
00:38:52,480 --> 00:38:54,800
he lived and set up a mobile hardware

1179
00:38:54,800 --> 00:38:57,119
hacking lab in a hotel room

1180
00:38:57,119 --> 00:38:58,960
so that's what this is i brought all of

1181
00:38:58,960 --> 00:39:01,200
the stuff that i'm used to using

1182
00:39:01,200 --> 00:39:02,800
hoped that i wouldn't have to use any of

1183
00:39:02,800 --> 00:39:03,680
it

1184
00:39:03,680 --> 00:39:05,920
um and then this is a picture of of like

1185
00:39:05,920 --> 00:39:07,520
just using the camera you can just see

1186
00:39:07,520 --> 00:39:09,200
the the awesome resolution and it turns

1187
00:39:09,200 --> 00:39:11,040
out there was a tv in the bedroom so i'm

1188
00:39:11,040 --> 00:39:12,640
just hooking that up directly so it was

1189
00:39:12,640 --> 00:39:15,280
like a nice ambiance uh

1190
00:39:15,280 --> 00:39:16,960
at the beginning

1191
00:39:16,960 --> 00:39:19,200
but it turned into quite an adventure

1192
00:39:19,200 --> 00:39:21,200
and i'm not going to tell you the result

1193
00:39:21,200 --> 00:39:23,520
because this video is going to come out

1194
00:39:23,520 --> 00:39:25,119
in the next couple weeks

1195
00:39:25,119 --> 00:39:27,440
and it's very exciting so i highly

1196
00:39:27,440 --> 00:39:29,839
recommend that you watch it

1197
00:39:29,839 --> 00:39:31,440
uh so yeah so these are some of the

1198
00:39:31,440 --> 00:39:32,960
resources of things that i've used just

1199
00:39:32,960 --> 00:39:34,800
for these projects and it's like once

1200
00:39:34,800 --> 00:39:36,640
you get these and mess around

1201
00:39:36,640 --> 00:39:38,480
you you really do start looking at

1202
00:39:38,480 --> 00:39:40,160
everything and it's like can i can i

1203
00:39:40,160 --> 00:39:41,760
glitch that is there some other

1204
00:39:41,760 --> 00:39:43,760
interface i can use like

1205
00:39:43,760 --> 00:39:45,680
is there some uart i can connect to like

1206
00:39:45,680 --> 00:39:47,920
there's so many fun things to do with

1207
00:39:47,920 --> 00:39:49,760
hardware and that's what keeps it

1208
00:39:49,760 --> 00:39:51,680
exciting

1209
00:39:51,680 --> 00:39:53,760
uh yeah so i will also i'll post these

1210
00:39:53,760 --> 00:39:55,240
on my website which is grand

1211
00:39:55,240 --> 00:39:56,800
ideastudio.com

1212
00:39:56,800 --> 00:39:59,119
uh

1213
00:39:59,119 --> 00:40:00,320
i'll probably i'll just put on the main

1214
00:40:00,320 --> 00:40:01,520
page or something so it'll be easy to

1215
00:40:01,520 --> 00:40:03,759
find

1216
00:40:04,480 --> 00:40:08,000
and yeah so that's it um basically like

1217
00:40:08,000 --> 00:40:09,520
with all of this you know hacking is

1218
00:40:09,520 --> 00:40:10,480
something

1219
00:40:10,480 --> 00:40:11,280
that

1220
00:40:11,280 --> 00:40:13,599
i think almost more often than not

1221
00:40:13,599 --> 00:40:15,359
requires a lot of patience a lot of

1222
00:40:15,359 --> 00:40:16,880
persistence you need to really be

1223
00:40:16,880 --> 00:40:18,880
passionate about it whether it's a

1224
00:40:18,880 --> 00:40:21,280
simple attack or not a simple attack you

1225
00:40:21,280 --> 00:40:23,520
know there's some like amazing talks

1226
00:40:23,520 --> 00:40:25,599
over the next two days that are like

1227
00:40:25,599 --> 00:40:28,319
mind-blowing types of stuff and those

1228
00:40:28,319 --> 00:40:30,319
didn't happen overnight right it was

1229
00:40:30,319 --> 00:40:32,560
like a very determined

1230
00:40:32,560 --> 00:40:34,400
person or group of people doing this

1231
00:40:34,400 --> 00:40:35,359
stuff

1232
00:40:35,359 --> 00:40:37,200
but if you love it

1233
00:40:37,200 --> 00:40:38,720
that's the best part right to be able to

1234
00:40:38,720 --> 00:40:40,640
do this stuff as a living

1235
00:40:40,640 --> 00:40:43,440
hacking on hardware is great so uh with

1236
00:40:43,440 --> 00:40:45,839
that i would say enjoy the conference

1237
00:40:45,839 --> 00:40:48,079
have fun talk to each other learn from

1238
00:40:48,079 --> 00:40:50,800
each other share with each other and uh

1239
00:40:50,800 --> 00:40:53,040
yeah keep on hacking

1240
00:40:53,040 --> 00:40:56,040
so thank you enjoy the show

1241
00:40:56,040 --> 00:40:59,760
[Applause]

1242
00:40:59,760 --> 00:41:00,960
you wanna

1243
00:41:00,960 --> 00:41:03,839
thank you uh jewel oh do we have quest

1244
00:41:03,839 --> 00:41:05,359
time for questions

1245
00:41:05,359 --> 00:41:08,000
we can take one okay

1246
00:41:08,000 --> 00:41:10,640
we have okay okay thank you very much

1247
00:41:10,640 --> 00:41:11,760
for your presentation it's very

1248
00:41:11,760 --> 00:41:14,079
interesting my name is kareem and i come

1249
00:41:14,079 --> 00:41:17,359
from ledger yes okay uh

1250
00:41:17,359 --> 00:41:19,280
i just have a question for for treasure

1251
00:41:19,280 --> 00:41:22,240
attack uh did you

1252
00:41:22,240 --> 00:41:24,400
did you perform any work on trezor tea

1253
00:41:24,400 --> 00:41:25,280
or

1254
00:41:25,280 --> 00:41:27,680
did i perform any entrees or team oh in

1255
00:41:27,680 --> 00:41:29,280
the model t no so i haven't looked at

1256
00:41:29,280 --> 00:41:31,440
the model t yet the trezor the model one

1257
00:41:31,440 --> 00:41:32,359
is the

1258
00:41:32,359 --> 00:41:35,680
stm32f2 and then the model t is a 32 f4

1259
00:41:35,680 --> 00:41:38,640
f4 um i know they both have serial boot

1260
00:41:38,640 --> 00:41:40,720
loader capabilities so i have a feeling

1261
00:41:40,720 --> 00:41:42,000
that is going to be glitchable in that

1262
00:41:42,000 --> 00:41:43,520
way in that second method but i haven't

1263
00:41:43,520 --> 00:41:46,079
looked at it i will if somebody comes to

1264
00:41:46,079 --> 00:41:48,480
me and says hey there's money on this to

1265
00:41:48,480 --> 00:41:51,359
make it worthwhile um but it's hard to

1266
00:41:51,359 --> 00:41:54,240
it's hard to give in my schedule to look

1267
00:41:54,240 --> 00:41:56,319
at it to justify looking at otherwise

1268
00:41:56,319 --> 00:41:58,560
but i will and it's kind of on my list

1269
00:41:58,560 --> 00:41:59,839
i'm ready

1270
00:41:59,839 --> 00:42:02,319
when there's a motivating factor i have

1271
00:42:02,319 --> 00:42:04,000
another question i can ask

1272
00:42:04,000 --> 00:42:06,560
okay uh you said that you already raised

1273
00:42:06,560 --> 00:42:08,880
the memory while you are performing rdb2

1274
00:42:08,880 --> 00:42:12,000
or db1 to dump the flash uh what did you

1275
00:42:12,000 --> 00:42:14,720
do to make the attack with zero risk for

1276
00:42:14,720 --> 00:42:16,720
exam for the for the first one for the

1277
00:42:16,720 --> 00:42:18,400
first one no for the second one oh the

1278
00:42:18,400 --> 00:42:19,920
first one i i know

1279
00:42:19,920 --> 00:42:21,680
it's a very old firmware yeah yeah it's

1280
00:42:21,680 --> 00:42:24,160
like a rdb2 on z right so for the for

1281
00:42:24,160 --> 00:42:25,760
the bootloader what did i do to reduce

1282
00:42:25,760 --> 00:42:28,160
the risk um

1283
00:42:28,160 --> 00:42:30,640
i'm not sure i can tell you that yet

1284
00:42:30,640 --> 00:42:33,520
but it's basically

1285
00:42:34,640 --> 00:42:37,040
trying to get better synchronization

1286
00:42:37,040 --> 00:42:38,480
between the

1287
00:42:38,480 --> 00:42:39,599
commands

1288
00:42:39,599 --> 00:42:40,880
and the device right so if i can

1289
00:42:40,880 --> 00:42:42,480
synchronize me to the target it's going

1290
00:42:42,480 --> 00:42:44,319
to be a lot easier to control when i'm

1291
00:42:44,319 --> 00:42:45,760
doing the glitch that's the plan and i

1292
00:42:45,760 --> 00:42:47,520
have some other attacks that are not

1293
00:42:47,520 --> 00:42:49,200
boot loader related but more memory

1294
00:42:49,200 --> 00:42:50,800
transfer related that may or may not

1295
00:42:50,800 --> 00:42:52,800
work depending on how st has implemented

1296
00:42:52,800 --> 00:42:54,319
some stuff so there's some ideas that i

1297
00:42:54,319 --> 00:42:56,560
want to try okay so we have well you do

1298
00:42:56,560 --> 00:42:59,440
it i don't normally i i did a giveaway

1299
00:42:59,440 --> 00:43:01,440
on a live stream to have somebody come

1300
00:43:01,440 --> 00:43:02,880
to the class which was which was

1301
00:43:02,880 --> 00:43:04,400
hilariously awesome and it worked and

1302
00:43:04,400 --> 00:43:06,640
alex is here i think hey he came all the

1303
00:43:06,640 --> 00:43:09,359
way from france um but doing a giveaway

1304
00:43:09,359 --> 00:43:11,520
was it was really funny because

1305
00:43:11,520 --> 00:43:12,880
people were like yeah i can come and

1306
00:43:12,880 --> 00:43:14,319
then you know we chose their name and

1307
00:43:14,319 --> 00:43:15,920
they're like oh i can't come so you can

1308
00:43:15,920 --> 00:43:17,119
do it how you can give those away

1309
00:43:17,119 --> 00:43:18,880
however you want but we have some books

1310
00:43:18,880 --> 00:43:19,839
um

1311
00:43:19,839 --> 00:43:23,119
some really really good books

1312
00:43:23,760 --> 00:43:27,119
does that mean you get both

1313
00:43:27,119 --> 00:43:28,880
which one would you like

1314
00:43:28,880 --> 00:43:31,280
okay i think we are we are above time so

1315
00:43:31,280 --> 00:43:33,359
you can hang out in the uh kind of ctf

1316
00:43:33,359 --> 00:43:34,319
yeah yeah

1317
00:43:34,319 --> 00:43:36,240
one more question okay

1318
00:43:36,240 --> 00:43:38,160
okay this one's for the hardware hacker

1319
00:43:38,160 --> 00:43:41,839
hacking handbook by colin and jasper

1320
00:43:42,240 --> 00:43:43,359
this is probably a bit of a stupid

1321
00:43:43,359 --> 00:43:45,440
question but um when you do the micro

1322
00:43:45,440 --> 00:43:47,280
soldering for the wires

1323
00:43:47,280 --> 00:43:49,200
um how do you make sure that there's no

1324
00:43:49,200 --> 00:43:50,560
short on any of those wires are they

1325
00:43:50,560 --> 00:43:52,000
yeah do they connect or are they is

1326
00:43:52,000 --> 00:43:53,280
there a way that they don't short out

1327
00:43:53,280 --> 00:43:55,119
yeah definitely not a stupid question so

1328
00:43:55,119 --> 00:43:57,520
that that magnet wire has a thin coating

1329
00:43:57,520 --> 00:43:58,240
of

1330
00:43:58,240 --> 00:44:00,960
enamel around it so they look like

1331
00:44:00,960 --> 00:44:02,720
they're conductive but they're not so

1332
00:44:02,720 --> 00:44:04,160
what you do is basically you stick the

1333
00:44:04,160 --> 00:44:06,000
end of the wire onto onto your soldering

1334
00:44:06,000 --> 00:44:08,640
iron with some solder on it um and

1335
00:44:08,640 --> 00:44:10,400
either the flux or the solder like burns

1336
00:44:10,400 --> 00:44:12,480
away a little bit and then you can touch

1337
00:44:12,480 --> 00:44:13,599
that down

1338
00:44:13,599 --> 00:44:16,319
but it's so easy to at the ends i mean

1339
00:44:16,319 --> 00:44:18,640
the stuff is so tiny that i was using

1340
00:44:18,640 --> 00:44:20,079
the camera

1341
00:44:20,079 --> 00:44:21,680
and then looking up at the screen to do

1342
00:44:21,680 --> 00:44:23,280
some soldering and i had my microscope

1343
00:44:23,280 --> 00:44:25,359
really really hard but your hands do

1344
00:44:25,359 --> 00:44:27,359
have a lot better resolution than

1345
00:44:27,359 --> 00:44:28,400
than you think when they're under

1346
00:44:28,400 --> 00:44:30,400
magnifying so you can do it but yeah

1347
00:44:30,400 --> 00:44:32,079
that that was that was always my

1348
00:44:32,079 --> 00:44:33,520
question too if like how is how are

1349
00:44:33,520 --> 00:44:34,560
these things not shorting but it's

1350
00:44:34,560 --> 00:44:36,720
enamel around it

1351
00:44:36,720 --> 00:44:38,720
in it it just looks like a rat's nest

1352
00:44:38,720 --> 00:44:42,800
but it you know seems to work usually

1353
00:44:42,800 --> 00:44:45,540
all right thank you yeah thank you again

1354
00:44:45,540 --> 00:44:49,270
[Applause]

