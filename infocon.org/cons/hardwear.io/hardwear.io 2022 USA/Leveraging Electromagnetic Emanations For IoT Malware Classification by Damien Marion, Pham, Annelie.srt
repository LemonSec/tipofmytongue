1
00:00:03,600 --> 00:00:06,000
so i will speak about malware and

2
00:00:06,000 --> 00:00:08,400
electromagnetic elimination

3
00:00:08,400 --> 00:00:09,679
why

4
00:00:09,679 --> 00:00:12,080
and but first i would like to introduce

5
00:00:12,080 --> 00:00:14,960
the context so this work i've been

6
00:00:14,960 --> 00:00:17,600
funding by the french agency for the

7
00:00:17,600 --> 00:00:18,880
research

8
00:00:18,880 --> 00:00:21,039
he is the main coordinator is annelie

9
00:00:21,039 --> 00:00:23,760
issa my responsible as a postdoc

10
00:00:23,760 --> 00:00:26,240
and the main contributors that

11
00:00:26,240 --> 00:00:28,880
could not come today due to visa problem

12
00:00:28,880 --> 00:00:32,000
is that is finishing his phd and

13
00:00:32,000 --> 00:00:34,800
the postdoc matthew starts also before

14
00:00:34,800 --> 00:00:37,840
me and i follow them

15
00:00:37,840 --> 00:00:39,920
and we are part of the capsule team in

16
00:00:39,920 --> 00:00:41,200
irisa

17
00:00:41,200 --> 00:00:42,399
so

18
00:00:42,399 --> 00:00:45,039
why side channel why em

19
00:00:45,039 --> 00:00:49,360
and why iot and malwares so first

20
00:00:49,360 --> 00:00:51,280
what we did it's we

21
00:00:51,280 --> 00:00:53,840
tried and we

22
00:00:53,840 --> 00:00:56,079
we did

23
00:00:56,079 --> 00:00:57,199
we

24
00:00:57,199 --> 00:00:58,719
can

25
00:00:58,719 --> 00:01:01,520
determine a malware that is executing an

26
00:01:01,520 --> 00:01:05,438
iot device using em emanations

27
00:01:05,438 --> 00:01:07,760
why we did this because there is

28
00:01:07,760 --> 00:01:10,320
an explosion of the iot as everybody

29
00:01:10,320 --> 00:01:13,360
knows now and also the malware's

30
00:01:13,360 --> 00:01:15,840
exploiting this against these targets

31
00:01:15,840 --> 00:01:18,000
but the challenge where

32
00:01:18,000 --> 00:01:20,320
the all these all the evaluation

33
00:01:20,320 --> 00:01:22,560
techniques that i guess that are well

34
00:01:22,560 --> 00:01:24,400
known in the

35
00:01:24,400 --> 00:01:27,200
computer science community

36
00:01:27,200 --> 00:01:28,960
and also others

37
00:01:28,960 --> 00:01:31,600
specific problems due to the uncomplex

38
00:01:31,600 --> 00:01:34,640
environment sometimes on iot devices

39
00:01:34,640 --> 00:01:36,479
limited resources and

40
00:01:36,479 --> 00:01:40,200
diversity of the architectures

41
00:01:40,560 --> 00:01:42,960
first this work has been published last

42
00:01:42,960 --> 00:01:44,799
year at aksak

43
00:01:44,799 --> 00:01:47,040
yeah it's a next kind of extension and

44
00:01:47,040 --> 00:01:50,079
also a poster had been published we are

45
00:01:50,079 --> 00:01:52,479
not used to in the academic community to

46
00:01:52,479 --> 00:01:53,360
be

47
00:01:53,360 --> 00:01:55,439
to get some fame because we get some

48
00:01:55,439 --> 00:01:58,320
article after we publish papers

49
00:01:58,320 --> 00:02:00,880
so it was kind of funny because it

50
00:02:00,880 --> 00:02:03,200
really never happened in the

51
00:02:03,200 --> 00:02:06,960
oh i never heard about this in the

52
00:02:06,960 --> 00:02:09,440
in the academic community so it was

53
00:02:09,440 --> 00:02:11,680
really funny only one contact us to get

54
00:02:11,680 --> 00:02:15,120
informations and the bad thing it's a

55
00:02:15,120 --> 00:02:16,480
lot of

56
00:02:16,480 --> 00:02:19,200
months take the papers write the text

57
00:02:19,200 --> 00:02:21,520
but did not read the papers because some

58
00:02:21,520 --> 00:02:23,599
of them say that we were using a

59
00:02:23,599 --> 00:02:24,959
raspberry

60
00:02:24,959 --> 00:02:27,520
to detect malware on your own computer

61
00:02:27,520 --> 00:02:30,000
we do not do that at all

62
00:02:30,000 --> 00:02:32,080
please read the paper or read the

63
00:02:32,080 --> 00:02:35,120
article yeah not all the paper not all

64
00:02:35,120 --> 00:02:36,400
the websites that

65
00:02:36,400 --> 00:02:38,560
saying that you are doing

66
00:02:38,560 --> 00:02:41,920
detections on computers using raspberry

67
00:02:41,920 --> 00:02:44,239
not at all

68
00:02:44,239 --> 00:02:46,400
yeah it's what we did

69
00:02:46,400 --> 00:02:47,760
concretely

70
00:02:47,760 --> 00:02:50,400
everything is open source the data and

71
00:02:50,400 --> 00:02:51,920
the codes

72
00:02:51,920 --> 00:02:54,879
so first we did an acquisition we take

73
00:02:54,879 --> 00:02:57,280
samples malware samples

74
00:02:57,280 --> 00:02:58,080
we

75
00:02:58,080 --> 00:03:00,319
did some reverse engineering

76
00:03:00,319 --> 00:03:03,840
this is i've been down by like

77
00:03:03,840 --> 00:03:05,840
because it was

78
00:03:05,840 --> 00:03:10,159
malware analyst before starting his phd

79
00:03:10,159 --> 00:03:11,040
then

80
00:03:11,040 --> 00:03:14,400
we put on a raspberry we put an antenna

81
00:03:14,400 --> 00:03:16,480
we execute the malware we record the

82
00:03:16,480 --> 00:03:17,440
data

83
00:03:17,440 --> 00:03:20,879
we do some pre-processing i will explain

84
00:03:20,879 --> 00:03:21,680
and

85
00:03:21,680 --> 00:03:24,480
go deeper in the pre-processing and

86
00:03:24,480 --> 00:03:26,239
after we use some well-known

87
00:03:26,239 --> 00:03:28,879
classification algorithm to see if the

88
00:03:28,879 --> 00:03:29,760
em

89
00:03:29,760 --> 00:03:31,040
emanation

90
00:03:31,040 --> 00:03:33,920
can help us to determine which malware

91
00:03:33,920 --> 00:03:36,640
is executing on the target

92
00:03:36,640 --> 00:03:41,279
it's classification not detection yet

93
00:03:41,519 --> 00:03:43,760
and going to the data set so which

94
00:03:43,760 --> 00:03:45,680
malware did we use

95
00:03:45,680 --> 00:03:47,120
we tried to

96
00:03:47,120 --> 00:03:49,360
take like the more

97
00:03:49,360 --> 00:03:53,920
we took realize the real word malwares

98
00:03:53,920 --> 00:03:55,920
fook did some review

99
00:03:55,920 --> 00:03:57,920
of the codes to understand what were

100
00:03:57,920 --> 00:04:00,959
going on on the malware so here it's all

101
00:04:00,959 --> 00:04:03,840
the malware we use mirai by schleit for

102
00:04:03,840 --> 00:04:06,000
the ddos the ransomware which is gonna

103
00:04:06,000 --> 00:04:09,360
cry and two rootkits with a key sniffer

104
00:04:09,360 --> 00:04:12,319
kiss me that now is named spy and make

105
00:04:12,319 --> 00:04:13,599
it

106
00:04:13,599 --> 00:04:15,360
so for the ddos

107
00:04:15,360 --> 00:04:17,440
the reverse revealed that there is cnc

108
00:04:17,440 --> 00:04:19,120
communication

109
00:04:19,120 --> 00:04:22,880
tcp udp floating and particular and

110
00:04:22,880 --> 00:04:24,960
efficient techniques

111
00:04:24,960 --> 00:04:26,560
for gonna cry

112
00:04:26,560 --> 00:04:30,880
there is p2 and c versions and it will

113
00:04:30,880 --> 00:04:33,680
target some valid extension and home

114
00:04:33,680 --> 00:04:34,960
folders

115
00:04:34,960 --> 00:04:37,360
and also some variants because gonna cry

116
00:04:37,360 --> 00:04:39,600
usually the first version was using

117
00:04:39,600 --> 00:04:43,759
blowfish to encrypt and we took also aes

118
00:04:43,759 --> 00:04:45,199
and des

119
00:04:45,199 --> 00:04:48,560
for the users and the two rootkit it's a

120
00:04:48,560 --> 00:04:52,320
keylogger and also backdoor process id

121
00:04:52,320 --> 00:04:54,880
will make it

122
00:04:54,880 --> 00:04:57,600
and you

123
00:04:57,600 --> 00:05:00,080
additionally to these malwares to these

124
00:05:00,080 --> 00:05:02,960
samples we applied for apply some

125
00:05:02,960 --> 00:05:07,440
obfuscation techniques that um

126
00:05:08,240 --> 00:05:10,880
making the work of analysis even harder

127
00:05:10,880 --> 00:05:13,280
because he sometimes he even can't

128
00:05:13,280 --> 00:05:15,840
analyze malware due to

129
00:05:15,840 --> 00:05:18,080
some buggers control flow of pack

130
00:05:18,080 --> 00:05:19,600
predicates

131
00:05:19,600 --> 00:05:22,960
flattening or packers or virtualization

132
00:05:22,960 --> 00:05:25,680
we use this on the malwares

133
00:05:25,680 --> 00:05:28,720
and we also put it in our data set so

134
00:05:28,720 --> 00:05:31,759
for each samples we applied some of this

135
00:05:31,759 --> 00:05:33,039
obfuscation

136
00:05:33,039 --> 00:05:35,360
and so it's a new binary that we have at

137
00:05:35,360 --> 00:05:39,199
the end and we execute this here it's

138
00:05:39,199 --> 00:05:42,000
the wall data set we have it's like

139
00:05:42,000 --> 00:05:43,039
30

140
00:05:43,039 --> 00:05:45,680
35 distinct binaries that we will

141
00:05:45,680 --> 00:05:48,720
execute we have the b9 to get like some

142
00:05:48,720 --> 00:05:52,240
reference it's 30 we have as a b9 we

143
00:05:52,240 --> 00:05:57,919
have 34 distinct random executions of

144
00:05:57,919 --> 00:05:59,759
usual

145
00:05:59,759 --> 00:06:01,360
um

146
00:06:01,360 --> 00:06:03,600
linux binaries

147
00:06:03,600 --> 00:06:04,840
also we

148
00:06:04,840 --> 00:06:08,000
plug a camera to take pictures and cut

149
00:06:08,000 --> 00:06:11,120
video and play audio for mirai we have

150
00:06:11,120 --> 00:06:13,440
eight distinct ver

151
00:06:13,440 --> 00:06:15,759
variations of the malware so at the back

152
00:06:15,759 --> 00:06:17,520
there's a light flattening

153
00:06:17,520 --> 00:06:21,600
pc f c flatten etc for gonna cry we have

154
00:06:21,600 --> 00:06:24,080
all this distinct variation

155
00:06:24,080 --> 00:06:27,199
and for all these distinct cryptographic

156
00:06:27,199 --> 00:06:30,160
algorithms that are used so aes desk and

157
00:06:30,160 --> 00:06:33,280
when it's not specified it's blowfish

158
00:06:33,280 --> 00:06:35,759
then we have the root kits

159
00:06:35,759 --> 00:06:38,880
and the bash light with also distinct

160
00:06:38,880 --> 00:06:42,000
obfuscation techniques

161
00:06:42,240 --> 00:06:46,240
here it the two distinct targets we used

162
00:06:46,240 --> 00:06:48,960
in the paper there is only the raspberry

163
00:06:48,960 --> 00:06:51,280
here and after we extend to

164
00:06:51,280 --> 00:06:53,919
the mips in order to see if it works as

165
00:06:53,919 --> 00:06:56,800
well or not on the mips

166
00:06:56,800 --> 00:06:58,479
and also

167
00:06:58,479 --> 00:07:01,039
since we want to do some proof of

168
00:07:01,039 --> 00:07:04,240
concept we have some

169
00:07:04,240 --> 00:07:05,440
demo

170
00:07:05,440 --> 00:07:08,479
so first i'm running a camera because i

171
00:07:08,479 --> 00:07:11,120
we initially plan to bring the things

172
00:07:11,120 --> 00:07:12,080
but

173
00:07:12,080 --> 00:07:14,240
since i'm alone today it was a bit odd

174
00:07:14,240 --> 00:07:15,039
to

175
00:07:15,039 --> 00:07:16,720
bring everything and to be sure that it

176
00:07:16,720 --> 00:07:19,280
would work so we just plug a camera in

177
00:07:19,280 --> 00:07:22,720
our lap and i will try to stream

178
00:07:22,720 --> 00:07:24,800
and also i will

179
00:07:24,800 --> 00:07:27,199
connect

180
00:07:27,440 --> 00:07:28,880
to

181
00:07:28,880 --> 00:07:31,039
the computer

182
00:07:31,039 --> 00:07:33,199
oh

183
00:07:35,840 --> 00:07:38,319
better with a good

184
00:07:38,319 --> 00:07:41,039
and then

185
00:07:43,360 --> 00:07:45,440
to the targets

186
00:07:45,440 --> 00:07:48,800
i'm still waiting for the

187
00:07:48,800 --> 00:07:50,800
camera that is still running and still

188
00:07:50,800 --> 00:07:52,240
trying to run

189
00:07:52,240 --> 00:07:55,599
yeah i'm on the ci-20 so if we take the

190
00:07:55,599 --> 00:07:59,280
picture oh sorry on the on the right

191
00:07:59,280 --> 00:08:01,199
i'm connecting i'm directly connecting

192
00:08:01,199 --> 00:08:03,680
on it yeah

193
00:08:03,680 --> 00:08:06,560
and the example that we take it i will

194
00:08:06,560 --> 00:08:08,960
just execute two distinct variations two

195
00:08:08,960 --> 00:08:11,599
distinct binaries gonna cry and the

196
00:08:11,599 --> 00:08:14,000
packed version of gonna cry for the aes

197
00:08:14,000 --> 00:08:15,039
version

198
00:08:15,039 --> 00:08:17,440
oh it will appear

199
00:08:17,440 --> 00:08:18,560
so

200
00:08:18,560 --> 00:08:20,000
first

201
00:08:20,000 --> 00:08:23,120
i will try to

202
00:08:23,840 --> 00:08:24,800
oh

203
00:08:24,800 --> 00:08:26,800
no i will

204
00:08:26,800 --> 00:08:29,120
do another connection

205
00:08:29,120 --> 00:08:30,720
so yeah

206
00:08:30,720 --> 00:08:34,320
first i'm connecting to the

207
00:08:34,640 --> 00:08:36,958
yeah i will just in it in order to get

208
00:08:36,958 --> 00:08:39,200
like the data in the ohm

209
00:08:39,200 --> 00:08:42,959
that they are not encrypted at all

210
00:08:44,000 --> 00:08:45,440
is doing it

211
00:08:45,440 --> 00:08:47,839
i the only thing we will see on the left

212
00:08:47,839 --> 00:08:51,200
is the blinking of the

213
00:08:51,200 --> 00:08:54,000
of the light on the on the target and

214
00:08:54,000 --> 00:08:56,959
just also to explain the

215
00:08:56,959 --> 00:08:58,880
setup we have so the target in the

216
00:08:58,880 --> 00:09:01,760
center the the mips ci-20

217
00:09:01,760 --> 00:09:04,800
and the picoscope that is a kind of it's

218
00:09:04,800 --> 00:09:07,760
an oscilloscope but without any screen

219
00:09:07,760 --> 00:09:10,240
and also an amplifier on

220
00:09:10,240 --> 00:09:13,440
plug to the picoscope and the em antenna

221
00:09:13,440 --> 00:09:15,519
above the

222
00:09:15,519 --> 00:09:18,160
above the cpu that we are targeting

223
00:09:18,160 --> 00:09:22,120
so yeah now

224
00:09:22,480 --> 00:09:23,839
let's

225
00:09:23,839 --> 00:09:26,560
execute the gonna cry

226
00:09:26,560 --> 00:09:27,360
oh

227
00:09:27,360 --> 00:09:31,760
i forgot to show you that is

228
00:09:34,839 --> 00:09:38,399
where so now if i go to the target of

229
00:09:38,399 --> 00:09:40,080
gonna cry

230
00:09:40,080 --> 00:09:42,320
we will see that it's

231
00:09:42,320 --> 00:09:44,000
encrypted

232
00:09:44,000 --> 00:09:45,760
some valid

233
00:09:45,760 --> 00:09:48,319
extension

234
00:09:48,880 --> 00:09:50,800
i wanted initially to show that it were

235
00:09:50,800 --> 00:09:52,640
not encrypted at the beginning but i can

236
00:09:52,640 --> 00:09:55,199
do it just

237
00:09:55,320 --> 00:09:58,160
re-initiate it

238
00:09:58,160 --> 00:09:59,839
the thing and we will see that the

239
00:09:59,839 --> 00:10:01,279
target

240
00:10:01,279 --> 00:10:05,480
there is no encryption at all

241
00:10:06,800 --> 00:10:09,839
in the ls now there is no encrypted

242
00:10:09,839 --> 00:10:12,720
files anymore

243
00:10:12,720 --> 00:10:16,279
so now

244
00:10:24,480 --> 00:10:27,440
let's try to do an acquisition so i say

245
00:10:27,440 --> 00:10:29,600
that i will run the acquisitions on

246
00:10:29,600 --> 00:10:32,920
gonna cry

247
00:10:35,120 --> 00:10:38,160
and here it's what i will do

248
00:10:38,160 --> 00:10:40,079
with this comment

249
00:10:40,079 --> 00:10:42,240
i will not say too much about the

250
00:10:42,240 --> 00:10:44,079
command i'm running

251
00:10:44,079 --> 00:10:45,839
because it will take time too much time

252
00:10:45,839 --> 00:10:48,480
to explain each step but

253
00:10:48,480 --> 00:10:50,640
most of the thing oh it should be at the

254
00:10:50,640 --> 00:10:51,839
top but

255
00:10:51,839 --> 00:10:55,360
we run our scripts i say how many traces

256
00:10:55,360 --> 00:10:57,440
i'm trying to get 10

257
00:10:57,440 --> 00:11:01,120
traces of each of them so the files here

258
00:11:01,120 --> 00:11:03,760
it's saying which files we are doing so

259
00:11:03,760 --> 00:11:05,839
it's going to cry with a yes and gonna

260
00:11:05,839 --> 00:11:09,279
cries with a s and upx so the packing

261
00:11:09,279 --> 00:11:12,000
version of gonna cry

262
00:11:12,000 --> 00:11:13,680
let's run

263
00:11:13,680 --> 00:11:15,760
and hope it will work

264
00:11:15,760 --> 00:11:18,880
so we will see the blinking

265
00:11:18,880 --> 00:11:20,720
i hope on the left

266
00:11:20,720 --> 00:11:22,800
that's saying that we are recording the

267
00:11:22,800 --> 00:11:23,920
thing

268
00:11:23,920 --> 00:11:26,959
the em traces

269
00:11:27,680 --> 00:11:30,079
it should take a bit of time but i will

270
00:11:30,079 --> 00:11:32,560
not wait all the time

271
00:11:32,560 --> 00:11:34,560
just one that at least one trace come

272
00:11:34,560 --> 00:11:36,320
yeah one trace

273
00:11:36,320 --> 00:11:39,120
and it should bling at some point if

274
00:11:39,120 --> 00:11:40,399
yeah

275
00:11:40,399 --> 00:11:41,440
nice

276
00:11:41,440 --> 00:11:43,360
it works

277
00:11:43,360 --> 00:11:45,839
i will not wait the 20 traces come

278
00:11:45,839 --> 00:11:47,760
because it's three minutes we'll we'll

279
00:11:47,760 --> 00:11:49,680
come back later

280
00:11:49,680 --> 00:11:52,880
so we are recording

281
00:11:52,880 --> 00:11:55,040
yeah it's not in live and what we are

282
00:11:55,040 --> 00:11:57,839
recording so we have road traces i will

283
00:11:57,839 --> 00:11:59,920
show when the

284
00:11:59,920 --> 00:12:01,839
the generation will be done i will

285
00:12:01,839 --> 00:12:04,160
download it on my own computer and show

286
00:12:04,160 --> 00:12:06,720
you what is the road races but here it's

287
00:12:06,720 --> 00:12:09,680
the main thing we did so we are clear

288
00:12:09,680 --> 00:12:12,880
traces it's a pretty huge data set more

289
00:12:12,880 --> 00:12:14,639
than two terabyte

290
00:12:14,639 --> 00:12:18,959
it's 2.5 seconds of recording for each

291
00:12:18,959 --> 00:12:20,800
executed binaries

292
00:12:20,800 --> 00:12:22,720
but at the beginning when we try with

293
00:12:22,720 --> 00:12:24,959
the raw traces directly putting in any

294
00:12:24,959 --> 00:12:27,600
classification algorithm we get no

295
00:12:27,600 --> 00:12:30,320
results so we investigate a bit

296
00:12:30,320 --> 00:12:34,079
the the data we get and we went

297
00:12:34,079 --> 00:12:36,560
to the time frequency representation to

298
00:12:36,560 --> 00:12:39,360
see if there is something happen

299
00:12:39,360 --> 00:12:40,800
and

300
00:12:40,800 --> 00:12:42,480
since uh

301
00:12:42,480 --> 00:12:44,320
we are targeting kind of complex

302
00:12:44,320 --> 00:12:46,079
environment because on the two targets

303
00:12:46,079 --> 00:12:48,320
it's a full linux distribution that is

304
00:12:48,320 --> 00:12:49,760
running

305
00:12:49,760 --> 00:12:52,399
it's an ubuntu i don't remember the

306
00:12:52,399 --> 00:12:55,040
version but a full complex and very full

307
00:12:55,040 --> 00:12:57,040
complex os that is running

308
00:12:57,040 --> 00:12:58,560
and

309
00:12:58,560 --> 00:13:01,279
so the accuracy when we execute the the

310
00:13:01,279 --> 00:13:04,320
malware it's not so

311
00:13:04,880 --> 00:13:08,000
so yeah we do not have any real accurate

312
00:13:08,000 --> 00:13:10,079
accuracy even with

313
00:13:10,079 --> 00:13:13,200
a good trigger it's not really accurate

314
00:13:13,200 --> 00:13:17,600
so what we did we made uh an stft to get

315
00:13:17,600 --> 00:13:19,920
the spectrogram on the right where we

316
00:13:19,920 --> 00:13:21,440
have the time

317
00:13:21,440 --> 00:13:24,160
and on the frequency that the values are

318
00:13:24,160 --> 00:13:26,320
wrong sorry for the two it's not the

319
00:13:26,320 --> 00:13:28,880
right value for the frequency but it's

320
00:13:28,880 --> 00:13:30,639
in earth

321
00:13:30,639 --> 00:13:32,079
and each dot

322
00:13:32,079 --> 00:13:35,760
gave the amplitude of the signal for

323
00:13:35,760 --> 00:13:36,959
for

324
00:13:36,959 --> 00:13:39,920
each frequency of the time

325
00:13:39,920 --> 00:13:42,560
we have a pretty huge window and also

326
00:13:42,560 --> 00:13:45,600
pretty huge overlap this is due to get

327
00:13:45,600 --> 00:13:46,800
like

328
00:13:46,800 --> 00:13:49,070
it was motivated initially to

329
00:13:49,070 --> 00:13:51,040
[Applause]

330
00:13:51,040 --> 00:13:52,079
um

331
00:13:52,079 --> 00:13:53,920
by the by the

332
00:13:53,920 --> 00:13:55,440
non-accurate

333
00:13:55,440 --> 00:13:57,519
trigger we had or

334
00:13:57,519 --> 00:13:59,760
the complex environment we had

335
00:13:59,760 --> 00:14:01,920
in order to compress the information and

336
00:14:01,920 --> 00:14:04,240
after the the

337
00:14:04,240 --> 00:14:08,240
classification algorithm can

338
00:14:08,240 --> 00:14:11,040
classify the information we want it

339
00:14:11,040 --> 00:14:13,199
let's go back to

340
00:14:13,199 --> 00:14:17,040
the oh it's not finished yet

341
00:14:17,040 --> 00:14:19,920
but it will finish

342
00:14:20,639 --> 00:14:21,680
i will

343
00:14:21,680 --> 00:14:26,199
i will download what we have so far

344
00:14:35,519 --> 00:14:38,079
so here i will just download on my own

345
00:14:38,079 --> 00:14:41,040
computer the data we just oh just

346
00:14:41,040 --> 00:14:44,639
finished so i will download

347
00:14:44,639 --> 00:14:47,199
the data

348
00:14:49,600 --> 00:14:51,360
it may take times

349
00:14:51,360 --> 00:14:53,199
but i can at least when the first one

350
00:14:53,199 --> 00:14:55,600
will be download i can display it

351
00:14:55,600 --> 00:14:58,240
oh i did not expect it so much time

352
00:14:58,240 --> 00:15:00,320
hopefully i already have data on my own

353
00:15:00,320 --> 00:15:02,000
computer

354
00:15:02,000 --> 00:15:05,519
so let's display a first race

355
00:15:05,519 --> 00:15:08,079
yeah i will just display the trace one

356
00:15:08,079 --> 00:15:10,000
trace we

357
00:15:10,000 --> 00:15:11,279
download it

358
00:15:11,279 --> 00:15:14,560
i did it this morning

359
00:15:16,160 --> 00:15:17,839
and

360
00:15:17,839 --> 00:15:21,519
without python it will not works

361
00:15:22,720 --> 00:15:26,240
and here it's a raw data we recorded so

362
00:15:26,240 --> 00:15:28,959
the 2.5 second

363
00:15:28,959 --> 00:15:30,959
and the amplitude of the signal we

364
00:15:30,959 --> 00:15:33,600
recorded but using this we did not

365
00:15:33,600 --> 00:15:36,560
manage to do any classification

366
00:15:36,560 --> 00:15:40,399
that's why we moved

367
00:15:40,399 --> 00:15:43,600
to the stft

368
00:15:43,920 --> 00:15:47,680
here is the sdft of the

369
00:15:47,680 --> 00:15:50,079
of the trace i just showed before

370
00:15:50,079 --> 00:15:51,759
so on the right

371
00:15:51,759 --> 00:15:53,600
is just the

372
00:15:53,600 --> 00:15:56,800
metric i will use after it's just the

373
00:15:56,800 --> 00:15:59,440
mean the max and

374
00:15:59,440 --> 00:16:00,399
the

375
00:16:00,399 --> 00:16:02,000
no the average

376
00:16:02,000 --> 00:16:04,639
the standard deviation and the max

377
00:16:04,639 --> 00:16:06,240
the max in blue

378
00:16:06,240 --> 00:16:09,519
the standard deviation

379
00:16:09,519 --> 00:16:10,480
in

380
00:16:10,480 --> 00:16:14,160
green and in around it's the

381
00:16:14,160 --> 00:16:15,759
the mean

382
00:16:15,759 --> 00:16:19,040
and same for above but over the time

383
00:16:19,040 --> 00:16:21,680
so here i do over the time and on the

384
00:16:21,680 --> 00:16:24,880
top of the frequency

385
00:16:30,079 --> 00:16:30,880
but

386
00:16:30,880 --> 00:16:32,639
due to the size of this

387
00:16:32,639 --> 00:16:34,560
you the size of the windows the time of

388
00:16:34,560 --> 00:16:36,880
the recording the data were pretty huge

389
00:16:36,880 --> 00:16:38,880
so it does not fit well in

390
00:16:38,880 --> 00:16:41,600
classification algorithm so the second

391
00:16:41,600 --> 00:16:44,720
step it's something that we are used to

392
00:16:44,720 --> 00:16:46,880
in site channel community it's feature

393
00:16:46,880 --> 00:16:49,279
extractions to and to find

394
00:16:49,279 --> 00:16:53,199
which bandwidths or channels are

395
00:16:53,199 --> 00:16:54,720
leaking more

396
00:16:54,720 --> 00:16:56,720
because due to the

397
00:16:56,720 --> 00:17:00,240
once again due to the trigger we focused

398
00:17:00,240 --> 00:17:03,120
we extracted some entire bandwidths and

399
00:17:03,120 --> 00:17:06,319
not just some time part of the signal

400
00:17:06,319 --> 00:17:09,760
and for this we used an nicv

401
00:17:09,760 --> 00:17:11,760
that is known in our

402
00:17:11,760 --> 00:17:15,520
in the side channel community uh

403
00:17:15,520 --> 00:17:18,640
feature selections techniques based on

404
00:17:18,640 --> 00:17:21,119
the mean and the variations of the

405
00:17:21,119 --> 00:17:23,760
the groups we have so the groups could

406
00:17:23,760 --> 00:17:24,720
be

407
00:17:24,720 --> 00:17:27,119
the type of the malware or

408
00:17:27,119 --> 00:17:29,840
the malware itself the binary or the

409
00:17:29,840 --> 00:17:32,720
family i will explain what i what i call

410
00:17:32,720 --> 00:17:35,280
family type of thing after

411
00:17:35,280 --> 00:17:38,480
but the idea is if we go there it's to

412
00:17:38,480 --> 00:17:39,600
find

413
00:17:39,600 --> 00:17:42,480
a number uh

414
00:17:43,919 --> 00:17:46,240
some bandwidth that can leak and extract

415
00:17:46,240 --> 00:17:48,720
it and after just do the classification

416
00:17:48,720 --> 00:17:50,880
on this

417
00:17:50,880 --> 00:17:53,200
using the nicv

418
00:17:53,200 --> 00:17:55,360
and here it's what we have when we apply

419
00:17:55,360 --> 00:17:59,120
the nicv on the right here is the nicv

420
00:17:59,120 --> 00:18:00,960
so we can find that there is some

421
00:18:00,960 --> 00:18:03,360
bandwidth that are leaking more than the

422
00:18:03,360 --> 00:18:06,000
other seems to leak more than the others

423
00:18:06,000 --> 00:18:08,880
and if we looked at the time

424
00:18:08,880 --> 00:18:11,120
we have a really huge one at the

425
00:18:11,120 --> 00:18:13,919
beginning at around one second

426
00:18:13,919 --> 00:18:16,320
the because mirai is sleeping one second

427
00:18:16,320 --> 00:18:19,439
before his execution

428
00:18:22,720 --> 00:18:23,520
then

429
00:18:23,520 --> 00:18:25,280
when we have this data

430
00:18:25,280 --> 00:18:28,520
we applied

431
00:18:28,799 --> 00:18:30,240
we applied the

432
00:18:30,240 --> 00:18:32,640
two distinct classification algorithm to

433
00:18:32,640 --> 00:18:35,200
deep learning algorithm and the paper we

434
00:18:35,200 --> 00:18:38,400
also use more

435
00:18:39,600 --> 00:18:41,520
machine learning techniques so svm and

436
00:18:41,520 --> 00:18:43,679
naive bayesian but i will not show any

437
00:18:43,679 --> 00:18:46,080
result about this today i will just

438
00:18:46,080 --> 00:18:50,240
focus on mlp and cnn on the two targets

439
00:18:50,240 --> 00:18:53,200
so the first scenario we did it's

440
00:18:53,200 --> 00:18:54,080
type

441
00:18:54,080 --> 00:18:57,280
the type of the malware so here it's the

442
00:18:57,280 --> 00:19:00,720
compositions of what we try to identify

443
00:19:00,720 --> 00:19:02,559
in this scenario

444
00:19:02,559 --> 00:19:04,480
the

445
00:19:04,480 --> 00:19:07,520
the algorithm already seen the samples

446
00:19:07,520 --> 00:19:08,640
you will

447
00:19:08,640 --> 00:19:11,679
have in the testing obviously we do not

448
00:19:11,679 --> 00:19:12,799
learn

449
00:19:12,799 --> 00:19:15,840
on the testing data we split everything

450
00:19:15,840 --> 00:19:17,919
but the samples that are composed the

451
00:19:17,919 --> 00:19:22,240
data are the same and here it's what

452
00:19:22,240 --> 00:19:24,799
and how the data has composed for the

453
00:19:24,799 --> 00:19:26,880
learning and the testing

454
00:19:26,880 --> 00:19:30,160
so we have all the b9 the ddos

455
00:19:30,160 --> 00:19:31,919
the ransomware on the roadkit for the

456
00:19:31,919 --> 00:19:34,000
ddos there is bachelorette on mirai for

457
00:19:34,000 --> 00:19:36,000
ransomware all the version

458
00:19:36,000 --> 00:19:38,480
of the

459
00:19:38,480 --> 00:19:40,240
i've gonna cry and the two root kit

460
00:19:40,240 --> 00:19:41,840
forward kit

461
00:19:41,840 --> 00:19:44,880
and we can see that the cnn

462
00:19:44,880 --> 00:19:48,440
get the best accuracy with 99 and

463
00:19:48,440 --> 00:19:50,840
99.95 for the

464
00:19:50,840 --> 00:19:52,559
ci-20

465
00:19:52,559 --> 00:19:53,280
and

466
00:19:53,280 --> 00:19:54,960
between brackets

467
00:19:54,960 --> 00:19:58,080
it's the numbers of bandwidths that we

468
00:19:58,080 --> 00:20:00,960
used to get this information

469
00:20:00,960 --> 00:20:03,440
because we did some

470
00:20:03,440 --> 00:20:04,640
experiments

471
00:20:04,640 --> 00:20:07,280
initially just trying one bandwidth

472
00:20:07,280 --> 00:20:09,919
another one another one sorted by the

473
00:20:09,919 --> 00:20:11,600
nicv values

474
00:20:11,600 --> 00:20:13,760
and after we move to an ill climbing

475
00:20:13,760 --> 00:20:16,480
algorithm like we take the best

476
00:20:16,480 --> 00:20:17,600
bandwidths

477
00:20:17,600 --> 00:20:20,559
or channels with the highest nic value

478
00:20:20,559 --> 00:20:22,400
we try to classify

479
00:20:22,400 --> 00:20:23,679
we add one

480
00:20:23,679 --> 00:20:25,840
we try to classify if we get a better

481
00:20:25,840 --> 00:20:28,000
score we could we continue with these

482
00:20:28,000 --> 00:20:31,039
two bandwidth and etc

483
00:20:31,039 --> 00:20:32,000
and

484
00:20:32,000 --> 00:20:34,320
therefore it's the number of distinct

485
00:20:34,320 --> 00:20:37,120
level we can have

486
00:20:37,120 --> 00:20:39,360
in order to compare with the random

487
00:20:39,360 --> 00:20:41,360
classification here we are far from

488
00:20:41,360 --> 00:20:43,280
random classification

489
00:20:43,280 --> 00:20:46,480
then the second is with family can we

490
00:20:46,480 --> 00:20:48,640
say when a malware is executing on our

491
00:20:48,640 --> 00:20:50,960
target which family

492
00:20:50,960 --> 00:20:53,440
this malware belonged to

493
00:20:53,440 --> 00:20:55,679
and here we still have

494
00:20:55,679 --> 00:20:58,159
benign mirai gonna cry

495
00:20:58,159 --> 00:21:01,039
make it in here it split it make it and

496
00:21:01,039 --> 00:21:03,440
pi are not in the same level

497
00:21:03,440 --> 00:21:04,880
and bash light

498
00:21:04,880 --> 00:21:07,919
so here we have the six distinct

499
00:21:07,919 --> 00:21:10,240
ladders and we can reach pretty high

500
00:21:10,240 --> 00:21:11,520
score

501
00:21:11,520 --> 00:21:14,960
you can see that the cnn the for ci-20

502
00:21:14,960 --> 00:21:16,400
is decreasing

503
00:21:16,400 --> 00:21:18,559
so we are better we

504
00:21:18,559 --> 00:21:20,880
can classify

505
00:21:20,880 --> 00:21:23,760
better with flexification is better down

506
00:21:23,760 --> 00:21:27,280
with the on the raspberry than on the ci

507
00:21:27,280 --> 00:21:30,240
20.

508
00:21:30,240 --> 00:21:31,600
then

509
00:21:31,600 --> 00:21:33,120
because here we are doing only

510
00:21:33,120 --> 00:21:34,480
classification

511
00:21:34,480 --> 00:21:37,840
but what happened if the our models that

512
00:21:37,840 --> 00:21:39,760
we computed

513
00:21:39,760 --> 00:21:41,360
for the testing see

514
00:21:41,360 --> 00:21:43,679
one sample that they never see before

515
00:21:43,679 --> 00:21:46,159
during the learning

516
00:21:46,159 --> 00:21:48,799
it's what we did it here it's the

517
00:21:48,799 --> 00:21:50,960
compositions of the

518
00:21:50,960 --> 00:21:52,960
learning data set and here the

519
00:21:52,960 --> 00:21:56,320
compositions of the testing data sets

520
00:21:56,320 --> 00:21:59,440
so for b9 both are the same

521
00:21:59,440 --> 00:22:01,760
but for mirai we have distinct

522
00:22:01,760 --> 00:22:04,720
variations so we have the mirror in the

523
00:22:04,720 --> 00:22:08,320
usual mirai three distinct variations

524
00:22:08,320 --> 00:22:11,039
and for the testing we add other four

525
00:22:11,039 --> 00:22:12,640
distinct variation

526
00:22:12,640 --> 00:22:14,400
same for gonna cry

527
00:22:14,400 --> 00:22:17,440
for rootkit in one hand we put in the

528
00:22:17,440 --> 00:22:19,200
learning we would make it

529
00:22:19,200 --> 00:22:22,320
and on the testing we put disney

530
00:22:22,320 --> 00:22:24,320
and for batch light there is two just

531
00:22:24,320 --> 00:22:26,159
two variations that are not in the

532
00:22:26,159 --> 00:22:27,520
learning

533
00:22:27,520 --> 00:22:29,280
and here we can reach

534
00:22:29,280 --> 00:22:30,799
i

535
00:22:30,799 --> 00:22:32,480
pretty high

536
00:22:32,480 --> 00:22:36,559
accuracy so 99 and the mlp

537
00:22:36,559 --> 00:22:40,480
get better score than cnn for raspberry

538
00:22:40,480 --> 00:22:44,000
and we use only 11

539
00:22:44,000 --> 00:22:45,679
bandwidths

540
00:22:45,679 --> 00:22:48,799
11 bandwidth for the raspberry and 25

541
00:22:48,799 --> 00:22:51,200
for the

542
00:22:51,600 --> 00:22:54,559
for the cnn it's kind of um

543
00:22:54,559 --> 00:22:57,360
optimal selection of the bandwidth for

544
00:22:57,360 --> 00:23:00,639
to get the results we have

545
00:23:01,280 --> 00:23:04,000
then for virtualization

546
00:23:04,000 --> 00:23:07,360
that the our algorithm can does can we

547
00:23:07,360 --> 00:23:11,039
say if uh malware is virtualized or not

548
00:23:11,039 --> 00:23:13,679
during his execu the

549
00:23:13,679 --> 00:23:14,799
the

550
00:23:14,799 --> 00:23:16,880
the the malware that we are executing is

551
00:23:16,880 --> 00:23:19,200
virtualized or not so

552
00:23:19,200 --> 00:23:21,440
we have the mirai connor cry and bash

553
00:23:21,440 --> 00:23:23,520
light without any virtualization and the

554
00:23:23,520 --> 00:23:25,840
virtualized version on the right so the

555
00:23:25,840 --> 00:23:28,159
two distance level

556
00:23:28,159 --> 00:23:30,559
it works for the raspberry and it does

557
00:23:30,559 --> 00:23:34,240
not work for or pre almost does not work

558
00:23:34,240 --> 00:23:36,640
for the ci-20 because

559
00:23:36,640 --> 00:23:40,080
the random classification it's

560
00:23:40,080 --> 00:23:43,679
one over two and here it's only

561
00:23:43,679 --> 00:23:46,720
59 percent of accuracy so we are

562
00:23:46,720 --> 00:23:48,240
pretty near from the random

563
00:23:48,240 --> 00:23:50,480
classification

564
00:23:50,480 --> 00:23:53,039
then with packer same as virtualization

565
00:23:53,039 --> 00:23:54,640
but with packer

566
00:23:54,640 --> 00:23:57,440
so the pack version and the not packet

567
00:23:57,440 --> 00:23:59,200
version and the pack version for the two

568
00:23:59,200 --> 00:24:00,880
labels

569
00:24:00,880 --> 00:24:04,240
only two class and here it works pretty

570
00:24:04,240 --> 00:24:05,279
well

571
00:24:05,279 --> 00:24:07,919
with mlp but the cnn can't converge at

572
00:24:07,919 --> 00:24:08,640
all

573
00:24:08,640 --> 00:24:10,720
so the tnn can

574
00:24:10,720 --> 00:24:14,159
cannot converge for this classification

575
00:24:14,159 --> 00:24:16,640
on the ci-20 but for the raspberry we

576
00:24:16,640 --> 00:24:17,760
can have

577
00:24:17,760 --> 00:24:22,480
pretty high accuracies at 92 percent

578
00:24:23,120 --> 00:24:25,679
with obfuscation

579
00:24:25,679 --> 00:24:26,640
uh

580
00:24:26,640 --> 00:24:28,799
here the two lines does not mean that we

581
00:24:28,799 --> 00:24:30,640
have distinct

582
00:24:30,640 --> 00:24:32,240
distribution between the learning and

583
00:24:32,240 --> 00:24:33,919
the testing it just because it does not

584
00:24:33,919 --> 00:24:36,159
fit on one line

585
00:24:36,159 --> 00:24:38,159
so we have the distinct

586
00:24:38,159 --> 00:24:41,600
obfuscation techniques we use during the

587
00:24:41,600 --> 00:24:44,240
to to create our new

588
00:24:44,240 --> 00:24:46,720
malwares so we have seven distinct

589
00:24:46,720 --> 00:24:48,080
classes

590
00:24:48,080 --> 00:24:50,000
with the flattened utilize that pack c

591
00:24:50,000 --> 00:24:54,000
flat and epx soup and pcf

592
00:24:54,000 --> 00:24:58,400
on cnn it works pretty well and

593
00:24:58,400 --> 00:25:00,400
raspberry it works pretty well

594
00:25:00,400 --> 00:25:03,120
but on the ci-20 we can't converge at

595
00:25:03,120 --> 00:25:04,799
all once again

596
00:25:04,799 --> 00:25:07,039
so

597
00:25:07,520 --> 00:25:10,559
it seems that it's ordered on ci-20 to

598
00:25:10,559 --> 00:25:12,559
converge to determine

599
00:25:12,559 --> 00:25:14,640
which obfuscation

600
00:25:14,640 --> 00:25:16,960
have been applied

601
00:25:16,960 --> 00:25:19,120
and the last

602
00:25:19,120 --> 00:25:21,520
classification we tried it's okay we

603
00:25:21,520 --> 00:25:25,440
have three 34 distinct binaries

604
00:25:25,440 --> 00:25:28,000
can we determine which binary is exactly

605
00:25:28,000 --> 00:25:29,840
executed

606
00:25:29,840 --> 00:25:31,600
we have a pretty high score with the

607
00:25:31,600 --> 00:25:35,200
raspberry 77 for 30

608
00:25:35,200 --> 00:25:37,919
35 distinct classes so it's far from the

609
00:25:37,919 --> 00:25:40,159
random selection

610
00:25:40,159 --> 00:25:41,440
it's a bit

611
00:25:41,440 --> 00:25:45,919
it's much less for cia20

612
00:25:45,919 --> 00:25:47,919
even it's not

613
00:25:47,919 --> 00:25:51,760
the random classification here at all

614
00:25:51,760 --> 00:25:53,600
and to the

615
00:25:53,600 --> 00:25:56,640
full result or here

616
00:25:56,640 --> 00:25:59,440
so it's the resume of all the results we

617
00:25:59,440 --> 00:26:02,080
have so far

618
00:26:02,080 --> 00:26:02,960
and

619
00:26:02,960 --> 00:26:06,080
can we classify the data we just

620
00:26:06,080 --> 00:26:08,320
downloaded if the download have been

621
00:26:08,320 --> 00:26:11,320
down

622
00:26:12,640 --> 00:26:16,159
it seems down

623
00:26:17,600 --> 00:26:18,480
i

624
00:26:18,480 --> 00:26:22,120
don't want to do this

625
00:26:26,640 --> 00:26:28,799
and now but since it have been

626
00:26:28,799 --> 00:26:32,320
downloaded it's row traces so first i

627
00:26:32,320 --> 00:26:34,640
need to extract the data so the

628
00:26:34,640 --> 00:26:36,559
bandwidth we want to extract i need to

629
00:26:36,559 --> 00:26:38,720
extract the bandwidth

630
00:26:38,720 --> 00:26:39,440
so

631
00:26:39,440 --> 00:26:42,400
i need to

632
00:26:42,480 --> 00:26:46,840
find the right codes for this

633
00:26:54,720 --> 00:26:57,600
okay here what i will do is just giving

634
00:26:57,600 --> 00:27:00,640
the directory where the raw data are

635
00:27:00,640 --> 00:27:02,080
and

636
00:27:02,080 --> 00:27:04,240
convert it in

637
00:27:04,240 --> 00:27:07,840
extracted bandwidth

638
00:27:09,760 --> 00:27:12,320
it was pretty quick so now

639
00:27:12,320 --> 00:27:14,960
if we go

640
00:27:14,960 --> 00:27:18,279
to the directory

641
00:27:20,480 --> 00:27:22,960
oh it's not the 20s that we are where

642
00:27:22,960 --> 00:27:24,559
expected

643
00:27:24,559 --> 00:27:27,960
what does happen

644
00:27:34,080 --> 00:27:37,279
something wrong happens

645
00:27:38,559 --> 00:27:41,960
that's it

646
00:27:51,600 --> 00:27:54,240
yeah the downloading have not been done

647
00:27:54,240 --> 00:27:57,520
well so we just have three traces

648
00:27:57,520 --> 00:28:02,120
but can we classify these three traces

649
00:28:13,679 --> 00:28:16,080
it's what we will draw here so with this

650
00:28:16,080 --> 00:28:17,120
command

651
00:28:17,120 --> 00:28:20,640
i just go to the

652
00:28:20,640 --> 00:28:26,240
mlp so giving the mlp model we computed

653
00:28:26,240 --> 00:28:27,919
the

654
00:28:27,919 --> 00:28:29,600
and others

655
00:28:29,600 --> 00:28:31,840
the the model and the list of the trades

656
00:28:31,840 --> 00:28:33,760
that i just

657
00:28:33,760 --> 00:28:36,159
downloaded because when i extract it i

658
00:28:36,159 --> 00:28:38,640
create a list that will be given to the

659
00:28:38,640 --> 00:28:41,039
classification algorithm

660
00:28:41,039 --> 00:28:46,158
and yes i need to python again

661
00:28:51,440 --> 00:28:53,679
so just running the

662
00:28:53,679 --> 00:28:54,500
classification

663
00:28:54,500 --> 00:28:56,240
[Music]

664
00:28:56,240 --> 00:29:00,480
and it if we go to the commands

665
00:29:00,480 --> 00:29:04,080
we gave a log file so if i go to this

666
00:29:04,080 --> 00:29:07,399
log file

667
00:29:15,120 --> 00:29:17,840
it's empty

668
00:29:21,840 --> 00:29:23,279
i don't know

669
00:29:23,279 --> 00:29:27,320
if we didn't take a mistake

670
00:29:27,919 --> 00:29:30,960
and here what we can see we get we have

671
00:29:30,960 --> 00:29:32,480
two traces

672
00:29:32,480 --> 00:29:35,120
and the accuracy it was one so the three

673
00:29:35,120 --> 00:29:37,679
traces we downloaded so two

674
00:29:37,679 --> 00:29:39,760
packed and one unpacked

675
00:29:39,760 --> 00:29:42,399
have been well classified

676
00:29:42,399 --> 00:29:44,640
it's not right and packed and unpacked

677
00:29:44,640 --> 00:29:46,159
but

678
00:29:46,159 --> 00:29:48,559
since we know that it will only one

679
00:29:48,559 --> 00:29:51,840
unpack and one not packed in one pack

680
00:29:51,840 --> 00:29:52,960
we

681
00:29:52,960 --> 00:29:56,880
can say that it was well classified so

682
00:29:56,880 --> 00:30:00,159
executing a malware just that i did two

683
00:30:00,159 --> 00:30:02,559
distinct malware and recording the data

684
00:30:02,559 --> 00:30:05,840
we were able to classify

685
00:30:05,840 --> 00:30:08,240
and to say which version of this malware

686
00:30:08,240 --> 00:30:09,360
have been done

687
00:30:09,360 --> 00:30:11,679
it was a toy example because we get only

688
00:30:11,679 --> 00:30:14,159
two malware only for the learning

689
00:30:14,159 --> 00:30:16,640
and also for the testing so it was a

690
00:30:16,640 --> 00:30:18,960
simple example but the results i showed

691
00:30:18,960 --> 00:30:22,480
before were on much more complex um data

692
00:30:22,480 --> 00:30:25,760
sets so with the 35 distinct algorithm

693
00:30:25,760 --> 00:30:29,760
or for distinct labels also

694
00:30:29,760 --> 00:30:31,679
if we go back to the

695
00:30:31,679 --> 00:30:34,080
presentation if we conclude

696
00:30:34,080 --> 00:30:36,960
so this work has been published at axac

697
00:30:36,960 --> 00:30:39,039
everything is open source the code for

698
00:30:39,039 --> 00:30:40,399
the acquisition

699
00:30:40,399 --> 00:30:43,039
for the classification

700
00:30:43,039 --> 00:30:46,000
everything it's in python the data also

701
00:30:46,000 --> 00:30:47,840
is available only the extracted

702
00:30:47,840 --> 00:30:49,039
bandwidth

703
00:30:49,039 --> 00:30:51,679
but we plan to publish everything and

704
00:30:51,679 --> 00:30:54,159
only for the arm version for the mips we

705
00:30:54,159 --> 00:30:56,640
did not finished yet so we did not put

706
00:30:56,640 --> 00:30:57,440
on

707
00:30:57,440 --> 00:30:59,760
on internet yet but it's planned to do

708
00:30:59,760 --> 00:31:01,039
to be done

709
00:31:01,039 --> 00:31:01,919
and

710
00:31:01,919 --> 00:31:03,760
for future work

711
00:31:03,760 --> 00:31:06,720
i would say that it's not only future

712
00:31:06,720 --> 00:31:09,360
work because we are waiting for

713
00:31:09,360 --> 00:31:12,480
the review the paper have been published

714
00:31:12,480 --> 00:31:13,440
and

715
00:31:13,440 --> 00:31:16,320
what we wanted to do and what we did it

716
00:31:16,320 --> 00:31:20,000
we moved to software define radio to get

717
00:31:20,000 --> 00:31:22,399
like less expensive

718
00:31:22,399 --> 00:31:24,880
material than a picoscope even if

719
00:31:24,880 --> 00:31:27,120
picoscope it's not so expensive

720
00:31:27,120 --> 00:31:28,720
it's still

721
00:31:28,720 --> 00:31:32,000
10k or something so

722
00:31:32,000 --> 00:31:34,320
not easy to do at home

723
00:31:34,320 --> 00:31:37,360
extend to rootkit detections and not

724
00:31:37,360 --> 00:31:39,679
not classification anymore so we found a

725
00:31:39,679 --> 00:31:42,240
way to do detection

726
00:31:42,240 --> 00:31:43,600
and

727
00:31:43,600 --> 00:31:44,840
it

728
00:31:44,840 --> 00:31:47,679
works i hope in few weeks you will have

729
00:31:47,679 --> 00:31:49,760
the proof with the paper

730
00:31:49,760 --> 00:31:52,960
but we can trust me it works well

731
00:31:52,960 --> 00:31:54,480
and moving

732
00:31:54,480 --> 00:31:56,640
moving from classification to detection

733
00:31:56,640 --> 00:31:59,200
and the last point that is not

734
00:31:59,200 --> 00:32:00,880
pointing here and it's something i

735
00:32:00,880 --> 00:32:02,799
really want to do

736
00:32:02,799 --> 00:32:04,960
man due to my side channel background

737
00:32:04,960 --> 00:32:07,760
it's understanding

738
00:32:07,760 --> 00:32:10,799
why and how we can why we can classify

739
00:32:10,799 --> 00:32:13,679
this and which which features it works

740
00:32:13,679 --> 00:32:14,480
but

741
00:32:14,480 --> 00:32:15,440
with

742
00:32:15,440 --> 00:32:17,840
what we have here it's pretty hard

743
00:32:17,840 --> 00:32:19,360
because the resolution of the

744
00:32:19,360 --> 00:32:21,200
acquisition we have is really low

745
00:32:21,200 --> 00:32:23,760
regarding the the speed of the cpu

746
00:32:23,760 --> 00:32:26,880
and also due to

747
00:32:26,880 --> 00:32:27,760
the

748
00:32:27,760 --> 00:32:30,480
sdft techniques that we have to use

749
00:32:30,480 --> 00:32:32,480
that everything is compressed so it's

750
00:32:32,480 --> 00:32:34,320
really hard to reverse and go back to

751
00:32:34,320 --> 00:32:37,360
the first race and say where and why it

752
00:32:37,360 --> 00:32:39,840
leaking

753
00:32:40,480 --> 00:32:43,840
thanks for your attention

