1
00:00:03,199 --> 00:00:05,359
uh yes today i'm going to present a

2
00:00:05,359 --> 00:00:08,080
bodybuilding injection attack on

3
00:00:08,080 --> 00:00:09,760
on a recent soc

4
00:00:09,760 --> 00:00:10,480
and

5
00:00:10,480 --> 00:00:12,320
the main idea is to attack the hardware

6
00:00:12,320 --> 00:00:14,400
es accelerator of this attribute using

7
00:00:14,400 --> 00:00:17,920
body biasing injection

8
00:00:18,640 --> 00:00:20,640
so the motivation behind this this

9
00:00:20,640 --> 00:00:22,480
presentation actually uh i'm going to

10
00:00:22,480 --> 00:00:24,960
ask you a question if anyone here is

11
00:00:24,960 --> 00:00:26,560
familiar with electromagnetic fault

12
00:00:26,560 --> 00:00:28,560
injection

13
00:00:28,560 --> 00:00:30,800
okay this is cool anyone here is

14
00:00:30,800 --> 00:00:32,399
familiar with bodybuising faulty

15
00:00:32,399 --> 00:00:34,559
injection

16
00:00:34,559 --> 00:00:37,120
only three okay so this is my motivation

17
00:00:37,120 --> 00:00:39,440
actually but the biasing injection is is

18
00:00:39,440 --> 00:00:40,399
a

19
00:00:40,399 --> 00:00:42,879
is a certain of of a recent photo

20
00:00:42,879 --> 00:00:44,399
injection attack it's not very well

21
00:00:44,399 --> 00:00:46,879
studied in the literature i think there

22
00:00:46,879 --> 00:00:48,640
are only two or three papers that

23
00:00:48,640 --> 00:00:50,640
describe this kind of attacks

24
00:00:50,640 --> 00:00:52,800
so this is why actually i'm trying to

25
00:00:52,800 --> 00:00:54,559
investigate this attack

26
00:00:54,559 --> 00:00:56,640
and recently i have seen a lot of

27
00:00:56,640 --> 00:00:58,640
devices that have been deployed in the

28
00:00:58,640 --> 00:01:00,399
market such as hardware wallets for

29
00:01:00,399 --> 00:01:03,280
example and my role is to evaluate this

30
00:01:03,280 --> 00:01:04,959
kind of wallets against fault injection

31
00:01:04,959 --> 00:01:07,360
and side children attacks

32
00:01:07,360 --> 00:01:09,600
this is why investigating new attacks is

33
00:01:09,600 --> 00:01:12,720
very important for me

34
00:01:12,720 --> 00:01:15,040
so i'm going to to talk a little bit

35
00:01:15,040 --> 00:01:17,600
about fault and text

36
00:01:17,600 --> 00:01:20,000
uh why we need faults

37
00:01:20,000 --> 00:01:22,640
why why we perform faults actually so

38
00:01:22,640 --> 00:01:26,320
the main idea of injecting faults is to

39
00:01:26,320 --> 00:01:29,039
to perform

40
00:01:29,520 --> 00:01:31,280
to perform a perturbation during the

41
00:01:31,280 --> 00:01:33,680
execution of sensitive operations for

42
00:01:33,680 --> 00:01:35,680
example if you are performing secure

43
00:01:35,680 --> 00:01:37,439
boot and you are injecting faults during

44
00:01:37,439 --> 00:01:39,200
the secure boots

45
00:01:39,200 --> 00:01:41,200
there is a possibility of bypassing the

46
00:01:41,200 --> 00:01:43,520
signature verification for example

47
00:01:43,520 --> 00:01:45,439
the same if you are performing crypto

48
00:01:45,439 --> 00:01:48,399
operations like es for example you can

49
00:01:48,399 --> 00:01:49,840
inject during

50
00:01:49,840 --> 00:01:51,520
certain rounds of the es in order to

51
00:01:51,520 --> 00:01:53,520
extract the key using differential fault

52
00:01:53,520 --> 00:01:54,399
analysis

53
00:01:54,399 --> 00:01:56,479
uh so you can find here a very

54
00:01:56,479 --> 00:01:58,320
interesting paper about a guy who

55
00:01:58,320 --> 00:02:00,240
already attacked the say yes of

56
00:02:00,240 --> 00:02:01,920
playstation using differential fault

57
00:02:01,920 --> 00:02:03,600
analysis i don't know if you if you know

58
00:02:03,600 --> 00:02:05,200
this paper or not but it was very

59
00:02:05,200 --> 00:02:06,799
interesting actually to show a practical

60
00:02:06,799 --> 00:02:08,419
attack

61
00:02:08,419 --> 00:02:09,919
[Applause]

62
00:02:09,919 --> 00:02:11,680
for glitches part which is considered

63
00:02:11,680 --> 00:02:13,040
one of the fault injection attack

64
00:02:13,040 --> 00:02:14,080
techniques

65
00:02:14,080 --> 00:02:16,160
it's a very low cost technique you can

66
00:02:16,160 --> 00:02:18,959
implement it using a mosfet for example

67
00:02:18,959 --> 00:02:20,800
the main idea is to drop the voltage

68
00:02:20,800 --> 00:02:23,040
level of the chip to

69
00:02:23,040 --> 00:02:26,000
to a very low level

70
00:02:26,000 --> 00:02:28,080
uh however there are some challenges

71
00:02:28,080 --> 00:02:30,480
while you are performing uh

72
00:02:30,480 --> 00:02:33,120
uh power glitch attacks the main idea of

73
00:02:33,120 --> 00:02:35,360
the of the first challenge actually is

74
00:02:35,360 --> 00:02:37,360
that the effect of the glitch is very

75
00:02:37,360 --> 00:02:39,680
general on the chip itself

76
00:02:39,680 --> 00:02:41,040
for example if you are attacking a

77
00:02:41,040 --> 00:02:43,519
complex soc and you would like to target

78
00:02:43,519 --> 00:02:45,200
the crypto core of the chip it's very

79
00:02:45,200 --> 00:02:48,160
difficult you'll find a lot of pins for

80
00:02:48,160 --> 00:02:50,000
different vdd and you don't know exactly

81
00:02:50,000 --> 00:02:52,080
which one you have to glitch even if you

82
00:02:52,080 --> 00:02:54,160
are glitching the correct one you you

83
00:02:54,160 --> 00:02:57,359
won't be more precise

84
00:02:57,920 --> 00:02:59,360
the second the second one is

85
00:02:59,360 --> 00:03:01,280
electromagnetic fault injection and the

86
00:03:01,280 --> 00:03:02,720
main idea is that you have a very high

87
00:03:02,720 --> 00:03:04,959
voltage you are going to apply is a high

88
00:03:04,959 --> 00:03:06,959
voltage into a coil

89
00:03:06,959 --> 00:03:09,280
trying to generate electromagnetic and

90
00:03:09,280 --> 00:03:11,599
this electromagnetic when you touch

91
00:03:11,599 --> 00:03:13,360
the problems electromagnetic problem

92
00:03:13,360 --> 00:03:15,120
with the chip itself you're going to

93
00:03:15,120 --> 00:03:17,040
create perturbation

94
00:03:17,040 --> 00:03:19,599
uh well if i'm go i've if i'm talking

95
00:03:19,599 --> 00:03:21,760
about the mfi it has a

96
00:03:21,760 --> 00:03:24,239
this to build a setup it's a medium

97
00:03:24,239 --> 00:03:26,640
coast if you compare it for example with

98
00:03:26,640 --> 00:03:29,599
glitches it's not low cost compared to

99
00:03:29,599 --> 00:03:32,000
bar glitches but it's a it's cause it's

100
00:03:32,000 --> 00:03:34,799
it's between actually the laser and more

101
00:03:34,799 --> 00:03:36,000
glitches

102
00:03:36,000 --> 00:03:39,680
the third one is laser attacks so

103
00:03:39,680 --> 00:03:42,080
uh it's very expensive if you would like

104
00:03:42,080 --> 00:03:44,720
to do it you you need to decap the chip

105
00:03:44,720 --> 00:03:47,200
uh in order to to find the substrate you

106
00:03:47,200 --> 00:03:48,959
you can decap the chip using the front

107
00:03:48,959 --> 00:03:50,879
side or back side

108
00:03:50,879 --> 00:03:52,400
uh the main idea is that you hit the

109
00:03:52,400 --> 00:03:54,319
surface of the chip using a laser beam

110
00:03:54,319 --> 00:03:56,319
and the laser is going to induce current

111
00:03:56,319 --> 00:03:57,680
and the current is going to change the

112
00:03:57,680 --> 00:03:59,680
state of the transistors from one to

113
00:03:59,680 --> 00:04:01,519
zero trying to

114
00:04:01,519 --> 00:04:03,439
create errors

115
00:04:03,439 --> 00:04:05,360
as i said here it's you need to decap

116
00:04:05,360 --> 00:04:07,360
the chip it's expensive it needs more

117
00:04:07,360 --> 00:04:10,080
experience as well

118
00:04:10,080 --> 00:04:11,840
now let me discover bodybuising

119
00:04:11,840 --> 00:04:13,680
injection with you

120
00:04:13,680 --> 00:04:15,840
so the main idea of bodybuilding

121
00:04:15,840 --> 00:04:18,079
injection is to

122
00:04:18,079 --> 00:04:19,839
is to apply a high voltage into the

123
00:04:19,839 --> 00:04:22,400
surface of the chip using a needle so

124
00:04:22,400 --> 00:04:23,759
the main idea is that the needle is

125
00:04:23,759 --> 00:04:26,000
going to bypass a current to the surface

126
00:04:26,000 --> 00:04:27,759
of the chip

127
00:04:27,759 --> 00:04:29,919
trying to create errors

128
00:04:29,919 --> 00:04:32,160
it was proposed by philippe morin in

129
00:04:32,160 --> 00:04:34,800
2012

130
00:04:36,400 --> 00:04:38,240
and this kind of fault injection

131
00:04:38,240 --> 00:04:39,680
techniques you need to decap the trip

132
00:04:39,680 --> 00:04:40,639
itself

133
00:04:40,639 --> 00:04:41,600
so

134
00:04:41,600 --> 00:04:43,120
almost it needs the same preparation

135
00:04:43,120 --> 00:04:45,600
like laser attacks

136
00:04:45,600 --> 00:04:48,720
and the effect of the bbi

137
00:04:48,720 --> 00:04:50,720
i can say it's like a

138
00:04:50,720 --> 00:04:52,800
localized ground glitching

139
00:04:52,800 --> 00:04:55,360
why it's a localized ground glitching so

140
00:04:55,360 --> 00:04:58,000
if i'm

141
00:04:58,560 --> 00:05:01,919
if i'm going to describe actually the

142
00:05:01,919 --> 00:05:03,840
the

143
00:05:03,840 --> 00:05:05,759
silicon model which was proposed by

144
00:05:05,759 --> 00:05:07,440
philippe morin

145
00:05:07,440 --> 00:05:10,919
you can see here

146
00:05:10,960 --> 00:05:12,400
you can see here for example if you are

147
00:05:12,400 --> 00:05:14,560
going to inject a voltage

148
00:05:14,560 --> 00:05:16,720
a high voltage here into the substrate

149
00:05:16,720 --> 00:05:18,800
the main idea is that the ground of the

150
00:05:18,800 --> 00:05:21,280
cmos is going to change as well

151
00:05:21,280 --> 00:05:23,840
the same for the vdd of the cmos and if

152
00:05:23,840 --> 00:05:25,280
you will find the difference between

153
00:05:25,280 --> 00:05:27,840
them is like a glitch however it's a

154
00:05:27,840 --> 00:05:30,080
localized glitch why because

155
00:05:30,080 --> 00:05:31,199
the

156
00:05:31,199 --> 00:05:33,520
the r of the substrate is changing from

157
00:05:33,520 --> 00:05:36,080
from one point to another

158
00:05:36,080 --> 00:05:38,560
well in car this 2020 actually

159
00:05:38,560 --> 00:05:40,560
there was a very nice setup which was

160
00:05:40,560 --> 00:05:42,639
presented by colin

161
00:05:42,639 --> 00:05:45,919
uh it was a very very local setup

162
00:05:45,919 --> 00:05:48,639
the main idea is that you have a

163
00:05:48,639 --> 00:05:51,120
a very small voltage which is

164
00:05:51,120 --> 00:05:53,440
is used to charge some capacitors

165
00:05:53,440 --> 00:05:55,360
and during the injection times this

166
00:05:55,360 --> 00:05:57,600
voltage is going to be increased

167
00:05:57,600 --> 00:05:59,440
using a transformer

168
00:05:59,440 --> 00:06:01,280
and after that you are going to touch

169
00:06:01,280 --> 00:06:02,880
the the surface of the chip using a

170
00:06:02,880 --> 00:06:04,080
needle which is connected to the

171
00:06:04,080 --> 00:06:06,400
transformer itself so it's a very very

172
00:06:06,400 --> 00:06:09,280
low cost setup it's very interesting so

173
00:06:09,280 --> 00:06:11,280
i started to

174
00:06:11,280 --> 00:06:12,800
to think about this uh

175
00:06:12,800 --> 00:06:14,880
to think about this setup and to build

176
00:06:14,880 --> 00:06:17,190
it in in our lab

177
00:06:17,190 --> 00:06:20,269
[Music]

178
00:06:20,639 --> 00:06:22,240
it's very interesting while you are

179
00:06:22,240 --> 00:06:24,240
performing faulty injection to to have

180
00:06:24,240 --> 00:06:25,039
the

181
00:06:25,039 --> 00:06:26,720
double polarity

182
00:06:26,720 --> 00:06:28,080
i mean

183
00:06:28,080 --> 00:06:29,919
you it's very important to have a

184
00:06:29,919 --> 00:06:32,160
positive pulse and negative pulse why

185
00:06:32,160 --> 00:06:33,600
because if you are

186
00:06:33,600 --> 00:06:35,360
injecting a back side you may need the

187
00:06:35,360 --> 00:06:37,840
positive balls but if you are injecting

188
00:06:37,840 --> 00:06:39,759
on the front side you you need the

189
00:06:39,759 --> 00:06:42,479
reverse polarity and also you can find

190
00:06:42,479 --> 00:06:43,600
some

191
00:06:43,600 --> 00:06:45,360
points on the surface of the chip which

192
00:06:45,360 --> 00:06:46,800
are vulnerable to

193
00:06:46,800 --> 00:06:49,680
the positive pulse and also other points

194
00:06:49,680 --> 00:06:51,680
which are vulnerable to the negative

195
00:06:51,680 --> 00:06:53,599
pulse

196
00:06:53,599 --> 00:06:55,120
so i'm going to solve this problem in

197
00:06:55,120 --> 00:06:57,680
the design of colin because it doesn't

198
00:06:57,680 --> 00:06:59,440
support this

199
00:06:59,440 --> 00:07:02,000
this flexibility and also there is a

200
00:07:02,000 --> 00:07:03,840
external power supply that i'm going to

201
00:07:03,840 --> 00:07:06,960
add to to make the system more portable

202
00:07:06,960 --> 00:07:09,120
just plug it to to the usb itself and

203
00:07:09,120 --> 00:07:11,840
you don't need external power supply

204
00:07:11,840 --> 00:07:14,319
so this is my design

205
00:07:14,319 --> 00:07:17,840
the main idea is that you have

206
00:07:18,240 --> 00:07:20,240
yes so when i did that

207
00:07:20,240 --> 00:07:22,240
this is a design of colleen which is in

208
00:07:22,240 --> 00:07:23,280
red

209
00:07:23,280 --> 00:07:26,080
i just added an onboard vcc

210
00:07:26,080 --> 00:07:28,639
that may come from an iot chip or an mcu

211
00:07:28,639 --> 00:07:30,960
for example and after that i added a

212
00:07:30,960 --> 00:07:33,759
charge circuit in order to

213
00:07:33,759 --> 00:07:36,639
to charge this vcc on a controlled value

214
00:07:36,639 --> 00:07:39,680
so you could have the say the ability to

215
00:07:39,680 --> 00:07:41,599
have a flexible voltage so you can

216
00:07:41,599 --> 00:07:43,840
change it if you want and also a

217
00:07:43,840 --> 00:07:46,800
discharge circuit in order to uh switch

218
00:07:46,800 --> 00:07:49,840
off the injector if you would like

219
00:07:49,840 --> 00:07:51,599
and also in terms of the polarity you

220
00:07:51,599 --> 00:07:55,440
can see that i take the the

221
00:07:55,520 --> 00:07:58,160
one point from the secondary of the

222
00:07:58,160 --> 00:07:59,919
transformer and connected it to the

223
00:07:59,919 --> 00:08:02,160
positive and also the negative is

224
00:08:02,160 --> 00:08:03,919
connected to 0.2

225
00:08:03,919 --> 00:08:05,599
and if you would like for example to

226
00:08:05,599 --> 00:08:07,360
inject a positive pulse you can inject

227
00:08:07,360 --> 00:08:09,280
this point to the needle and the

228
00:08:09,280 --> 00:08:11,440
negative pulse to the ground of the chip

229
00:08:11,440 --> 00:08:12,800
and if you would like to reverse it will

230
00:08:12,800 --> 00:08:14,960
be more flexible

231
00:08:14,960 --> 00:08:17,120
so

232
00:08:18,400 --> 00:08:21,120
so this is a final pcb that i already

233
00:08:21,120 --> 00:08:23,759
i already did you can find that here i

234
00:08:23,759 --> 00:08:26,560
use a sid wino shell which is an mcu

235
00:08:26,560 --> 00:08:28,879
that you can use to control

236
00:08:28,879 --> 00:08:30,879
the charge and discharge

237
00:08:30,879 --> 00:08:32,799
and also it can feed the the circuit

238
00:08:32,799 --> 00:08:36,240
with the vdd with 5 volt maximum

239
00:08:36,240 --> 00:08:37,919
here there is an sma connector for

240
00:08:37,919 --> 00:08:39,440
triggering the

241
00:08:39,440 --> 00:08:40,479
the voltage

242
00:08:40,479 --> 00:08:42,399
for triggering the uh the fault

243
00:08:42,399 --> 00:08:44,720
injection and here for example there is

244
00:08:44,720 --> 00:08:46,640
a needle it's connected to the positive

245
00:08:46,640 --> 00:08:48,240
and the negative here is going to

246
00:08:48,240 --> 00:08:50,080
connect to the ground but if you would

247
00:08:50,080 --> 00:08:51,760
like it to reverse the polarity of the

248
00:08:51,760 --> 00:08:53,600
of the voltage policy you can connect it

249
00:08:53,600 --> 00:08:55,680
to the negative and this positive is

250
00:08:55,680 --> 00:08:56,800
going to

251
00:08:56,800 --> 00:08:59,120
be connected to the to the ground of the

252
00:08:59,120 --> 00:09:01,519
device itself so you can see that i have

253
00:09:01,519 --> 00:09:03,839
an mcu that can deliver five voltage the

254
00:09:03,839 --> 00:09:07,680
terminus ratio here is is 500 so sorry

255
00:09:07,680 --> 00:09:09,839
it's 50. so we can obtain a programmable

256
00:09:09,839 --> 00:09:14,080
voltage to until 250 volt

257
00:09:14,080 --> 00:09:16,000
i already obtained the polar uh dual

258
00:09:16,000 --> 00:09:18,000
polarity so we can inject positive and

259
00:09:18,000 --> 00:09:20,160
negative pulses so i would like to thank

260
00:09:20,160 --> 00:09:24,080
my my teammate olivier for supporting

261
00:09:24,080 --> 00:09:26,000
soldiering the small components here

262
00:09:26,000 --> 00:09:28,080
because i'm not very good at soldering

263
00:09:28,080 --> 00:09:31,120
electronic components

264
00:09:31,120 --> 00:09:34,640
so you can find here that i already

265
00:09:34,640 --> 00:09:38,880
proved that i have a flexible uh

266
00:09:38,880 --> 00:09:41,200
flexible voltage that i can change it

267
00:09:41,200 --> 00:09:44,240
very very easy so if i'm going to here

268
00:09:44,240 --> 00:09:45,360
on the

269
00:09:45,360 --> 00:09:47,279
on the x axis this is number of pulses

270
00:09:47,279 --> 00:09:49,360
so if you increase the number of pulses

271
00:09:49,360 --> 00:09:51,279
to charge the capacitor so i have a

272
00:09:51,279 --> 00:09:53,519
programmable voltage from that can start

273
00:09:53,519 --> 00:09:56,640
from lower than two one until five so if

274
00:09:56,640 --> 00:09:58,720
you come if you multiply it by 50 you

275
00:09:58,720 --> 00:10:00,399
will you will obtain a programmable

276
00:10:00,399 --> 00:10:03,959
voltage until 250.

277
00:10:05,519 --> 00:10:08,160
so i need now to verify and validate

278
00:10:08,160 --> 00:10:09,440
exactly

279
00:10:09,440 --> 00:10:10,240
say

280
00:10:10,240 --> 00:10:12,560
if my injector is is able to inject

281
00:10:12,560 --> 00:10:15,279
errors or not so this is why i'm using

282
00:10:15,279 --> 00:10:16,560
to

283
00:10:16,560 --> 00:10:18,320
a device under test but i don't like to

284
00:10:18,320 --> 00:10:20,240
to talk about the name of the vendor for

285
00:10:20,240 --> 00:10:22,640
the moment so i'm using a low ghost and

286
00:10:22,640 --> 00:10:24,640
low power soc

287
00:10:24,640 --> 00:10:26,640
it contains a wi-fi and bluetooth

288
00:10:26,640 --> 00:10:28,880
interfaces it's fabricated on a 40

289
00:10:28,880 --> 00:10:31,279
nanometer technology and recently it has

290
00:10:31,279 --> 00:10:33,120
been deployed in hardware wallet this is

291
00:10:33,120 --> 00:10:36,959
why i'm interested in this chip

292
00:10:37,360 --> 00:10:39,120
so the first thing to validate the

293
00:10:39,120 --> 00:10:41,519
design is the design of the

294
00:10:41,519 --> 00:10:44,000
of the injector is that i did already a

295
00:10:44,000 --> 00:10:46,880
glitchable application so just to to see

296
00:10:46,880 --> 00:10:48,800
if i'm going to modify the value of this

297
00:10:48,800 --> 00:10:51,360
counter during

298
00:10:51,360 --> 00:10:53,120
counting so i'm going to inject the

299
00:10:53,120 --> 00:10:55,360
fault here

300
00:10:55,360 --> 00:10:57,040
so the main idea is to scan the surface

301
00:10:57,040 --> 00:11:00,880
of the chip here from the x and y

302
00:11:00,880 --> 00:11:03,519
and trying to inject faults during the

303
00:11:03,519 --> 00:11:05,680
execution of this code and especially

304
00:11:05,680 --> 00:11:06,560
the

305
00:11:06,560 --> 00:11:08,560
the counter uh

306
00:11:08,560 --> 00:11:10,480
the counterpart so i'm going to run the

307
00:11:10,480 --> 00:11:12,160
glitchable applications and scan the

308
00:11:12,160 --> 00:11:13,440
overall

309
00:11:13,440 --> 00:11:15,200
surface and i am going to try to dual

310
00:11:15,200 --> 00:11:16,880
polarity

311
00:11:16,880 --> 00:11:20,000
of the of the voltage

312
00:11:20,160 --> 00:11:21,440
my setup

313
00:11:21,440 --> 00:11:23,360
if you can see it so

314
00:11:23,360 --> 00:11:24,800
you can see on the right here this is

315
00:11:24,800 --> 00:11:27,200
the injector it's on the top of the of

316
00:11:27,200 --> 00:11:28,880
the chip the chip is decapped of course

317
00:11:28,880 --> 00:11:30,480
you can see it here

318
00:11:30,480 --> 00:11:33,120
and i have a table a very cheap table to

319
00:11:33,120 --> 00:11:35,360
to move the prop xy

320
00:11:35,360 --> 00:11:38,079
and i have an oscilloscope uh

321
00:11:38,079 --> 00:11:39,839
in order to reduce the support traces

322
00:11:39,839 --> 00:11:41,519
and to see exactly what happens while

323
00:11:41,519 --> 00:11:43,200
i'm injecting false

324
00:11:43,200 --> 00:11:45,519
uh sometimes i have external power

325
00:11:45,519 --> 00:11:46,959
supply here

326
00:11:46,959 --> 00:11:49,440
for there are some chips that maybe 250

327
00:11:49,440 --> 00:11:51,680
voltage is not sufficient for faulting

328
00:11:51,680 --> 00:11:53,519
so maybe i will need the help of the

329
00:11:53,519 --> 00:11:54,480
external

330
00:11:54,480 --> 00:11:57,519
power supply

331
00:11:57,519 --> 00:11:58,320
so

332
00:11:58,320 --> 00:12:00,480
i already obtained successful faults

333
00:12:00,480 --> 00:12:02,399
when i have a positive pulse so i obtain

334
00:12:02,399 --> 00:12:03,839
the zoom

335
00:12:03,839 --> 00:12:06,480
that i already was able to

336
00:12:06,480 --> 00:12:08,480
to skip from from the loop to modify the

337
00:12:08,480 --> 00:12:10,560
value of the counter however for

338
00:12:10,560 --> 00:12:12,639
negative pulse i obtain some false for

339
00:12:12,639 --> 00:12:14,480
example in this zone and also some

340
00:12:14,480 --> 00:12:16,560
separate points here

341
00:12:16,560 --> 00:12:19,360
you can see that there are some

342
00:12:19,360 --> 00:12:21,760
physical locations on the chip which is

343
00:12:21,760 --> 00:12:23,600
vulnerable to positive pulses and also

344
00:12:23,600 --> 00:12:25,440
negative also this is very important

345
00:12:25,440 --> 00:12:26,800
while you are doing a fault injection

346
00:12:26,800 --> 00:12:28,560
evaluation especially if you are

347
00:12:28,560 --> 00:12:30,720
targeting uh

348
00:12:30,720 --> 00:12:32,160
maybe if you start

349
00:12:32,160 --> 00:12:33,839
you start the evaluation you inject a

350
00:12:33,839 --> 00:12:35,279
positive pulse you are targeting for

351
00:12:35,279 --> 00:12:36,959
example the cryptocor it doesn't doesn't

352
00:12:36,959 --> 00:12:38,639
work the attack so you have to change

353
00:12:38,639 --> 00:12:40,639
the polarity of the

354
00:12:40,639 --> 00:12:43,360
of the voltage

355
00:12:44,000 --> 00:12:46,639
uh as i said i use a i use the

356
00:12:46,639 --> 00:12:48,240
oscilloscope in order to register the

357
00:12:48,240 --> 00:12:49,519
power traces

358
00:12:49,519 --> 00:12:51,279
so here this is my code without

359
00:12:51,279 --> 00:12:54,480
injecting any fault there is a loop here

360
00:12:54,480 --> 00:12:56,160
so the chip here is doing nothing

361
00:12:56,160 --> 00:12:58,560
exactly just counting so after that

362
00:12:58,560 --> 00:12:59,920
there is a communication to send the

363
00:12:59,920 --> 00:13:02,880
value of the counter that was counted

364
00:13:02,880 --> 00:13:04,720
so i'm going to inject here a positive

365
00:13:04,720 --> 00:13:06,800
pulse you can see it

366
00:13:06,800 --> 00:13:09,120
that it's negative it's like it looks

367
00:13:09,120 --> 00:13:10,639
like a negative glitch

368
00:13:10,639 --> 00:13:12,880
and after that the chip goes for the

369
00:13:12,880 --> 00:13:15,120
same activity like here but in this case

370
00:13:15,120 --> 00:13:16,720
i already modified the value of the

371
00:13:16,720 --> 00:13:17,760
count

372
00:13:17,760 --> 00:13:20,160
if you if you inject a negative pulse

373
00:13:20,160 --> 00:13:22,320
the effect will be positive here and

374
00:13:22,320 --> 00:13:24,079
will be and the

375
00:13:24,079 --> 00:13:25,519
and the power trace you can see that

376
00:13:25,519 --> 00:13:26,560
it's cut

377
00:13:26,560 --> 00:13:27,360
uh

378
00:13:27,360 --> 00:13:29,600
in in a very short time compared to this

379
00:13:29,600 --> 00:13:32,160
one but i already modified also the the

380
00:13:32,160 --> 00:13:35,560
value of the counter

381
00:13:35,600 --> 00:13:37,360
let me talk about the hardware aes

382
00:13:37,360 --> 00:13:40,959
accelerator this is chip actually

383
00:13:40,959 --> 00:13:43,040
uh contains a crypto cryptographic

384
00:13:43,040 --> 00:13:46,240
hardware accelerator such as es sha rsa

385
00:13:46,240 --> 00:13:49,360
elliptic curve random number generation

386
00:13:49,360 --> 00:13:51,839
and also it contains a

387
00:13:51,839 --> 00:13:54,800
es 128 actually the es accelerator you

388
00:13:54,800 --> 00:13:56,320
can configure it from

389
00:13:56,320 --> 00:14:00,480
128 to 156. so this is the main target

390
00:14:00,480 --> 00:14:03,120
is to break the ces using advising

391
00:14:03,120 --> 00:14:05,519
injection

392
00:14:05,519 --> 00:14:07,199
i started to measure power consumption

393
00:14:07,199 --> 00:14:10,480
during the execution of of the es so i'm

394
00:14:10,480 --> 00:14:12,320
very sorry i won't be able actually to

395
00:14:12,320 --> 00:14:14,160
to show the firmware that i called the

396
00:14:14,160 --> 00:14:17,760
es because it as the name of the vendor

397
00:14:17,760 --> 00:14:19,680
you can you can you can you can use the

398
00:14:19,680 --> 00:14:21,120
name of the vendor from the firmware

399
00:14:21,120 --> 00:14:24,399
itself so here is the es

400
00:14:24,399 --> 00:14:25,920
which is uh

401
00:14:25,920 --> 00:14:28,240
which is executed so in my firmware

402
00:14:28,240 --> 00:14:30,720
simply just erase the trigger

403
00:14:30,720 --> 00:14:34,320
and then i call the es and then i i

404
00:14:34,320 --> 00:14:35,920
the trigger value will be low so i will

405
00:14:35,920 --> 00:14:38,240
be able to to know exactly where the aes

406
00:14:38,240 --> 00:14:41,279
execu is executed but here in this trace

407
00:14:41,279 --> 00:14:44,000
it's it's very difficult to

408
00:14:44,000 --> 00:14:46,880
to identify exactly where the ies is as

409
00:14:46,880 --> 00:14:49,519
executed so this is why i i performed

410
00:14:49,519 --> 00:14:50,720
something called

411
00:14:50,720 --> 00:14:52,480
leakage detection using a signal to

412
00:14:52,480 --> 00:14:55,120
noise ratio

413
00:14:56,240 --> 00:14:58,480
for example here this is a scenario on

414
00:14:58,480 --> 00:15:00,800
the keys so you can find here the keys

415
00:15:00,800 --> 00:15:02,639
are loaded

416
00:15:02,639 --> 00:15:04,639
and here is the plain text

417
00:15:04,639 --> 00:15:07,680
and on white the ciphertext is loaded so

418
00:15:07,680 --> 00:15:10,079
in between between of course between the

419
00:15:10,079 --> 00:15:11,519
the loading of the plain text and the

420
00:15:11,519 --> 00:15:13,199
ciphertext say yes is

421
00:15:13,199 --> 00:15:15,519
executed so now i know very well that

422
00:15:15,519 --> 00:15:19,360
the es is during this time period so

423
00:15:19,360 --> 00:15:22,000
i have a very a very short timing window

424
00:15:22,000 --> 00:15:23,279
for injecting

425
00:15:23,279 --> 00:15:25,760
false otherwise i'm going the experiment

426
00:15:25,760 --> 00:15:27,839
will take a lot of time so now i already

427
00:15:27,839 --> 00:15:29,839
reduced the one fault parameter which is

428
00:15:29,839 --> 00:15:32,560
a the offset that may uh increase the

429
00:15:32,560 --> 00:15:34,959
time of evaluation

430
00:15:34,959 --> 00:15:37,199
uh the main idea that i would like to

431
00:15:37,199 --> 00:15:39,120
perform a differential fault analysis

432
00:15:39,120 --> 00:15:41,120
there there was a very interesting paper

433
00:15:41,120 --> 00:15:43,279
published in

434
00:15:43,279 --> 00:15:44,800
2003

435
00:15:44,800 --> 00:15:47,040
uh the main idea is that if you can

436
00:15:47,040 --> 00:15:48,800
inject a fault for example this is the

437
00:15:48,800 --> 00:15:51,279
es this is round nine and this is round

438
00:15:51,279 --> 00:15:53,519
ten but if you are able to inject a

439
00:15:53,519 --> 00:15:54,480
fault

440
00:15:54,480 --> 00:15:56,800
before the mexican of round nine so the

441
00:15:56,800 --> 00:15:59,279
fault is will be propagated in the

442
00:15:59,279 --> 00:16:02,240
overall colon after the mixed colon and

443
00:16:02,240 --> 00:16:03,839
by the end it will be

444
00:16:03,839 --> 00:16:06,639
propagated using uh using this figure

445
00:16:06,639 --> 00:16:08,639
actually you will find that the first

446
00:16:08,639 --> 00:16:11,680
byte is modified and after that you will

447
00:16:11,680 --> 00:16:13,040
you will find that it will be like

448
00:16:13,040 --> 00:16:14,880
diagonal uh

449
00:16:14,880 --> 00:16:16,959
modification uh

450
00:16:16,959 --> 00:16:19,519
to perform this kind of of attacks using

451
00:16:19,519 --> 00:16:20,880
dfa

452
00:16:20,880 --> 00:16:22,639
if you if you are able of course to

453
00:16:22,639 --> 00:16:25,920
inject a fault in only one byte uh on

454
00:16:25,920 --> 00:16:28,480
the on the before the mixer colon what

455
00:16:28,480 --> 00:16:31,199
you needed just for to attack one colon

456
00:16:31,199 --> 00:16:34,160
key you need two volts uh

457
00:16:34,160 --> 00:16:37,440
two folds for per colon here

458
00:16:37,440 --> 00:16:39,360
that that will help you to attack the

459
00:16:39,360 --> 00:16:42,560
overall key of the es

460
00:16:43,199 --> 00:16:44,160
well

461
00:16:44,160 --> 00:16:45,600
so i started to repeat the same

462
00:16:45,600 --> 00:16:47,040
experiment i have the yes which is

463
00:16:47,040 --> 00:16:48,959
running i already know where the es is

464
00:16:48,959 --> 00:16:52,079
executed and i started to scan the tube

465
00:16:52,079 --> 00:16:55,279
so you'll find here i obtained some

466
00:16:55,279 --> 00:16:56,720
faults the

467
00:16:56,720 --> 00:16:59,120
using the the maximum voltage of the

468
00:16:59,120 --> 00:17:02,560
injector which is which is 250 volt so

469
00:17:02,560 --> 00:17:04,640
here i obtained some faults but

470
00:17:04,640 --> 00:17:06,079
unfortunately

471
00:17:06,079 --> 00:17:08,079
the fault is that i obtained it's uh

472
00:17:08,079 --> 00:17:10,480
it's like only uh on the ciphertext

473
00:17:10,480 --> 00:17:12,000
itself so

474
00:17:12,000 --> 00:17:14,720
the output is like uh

475
00:17:14,720 --> 00:17:16,720
the ciphertext and i already modified

476
00:17:16,720 --> 00:17:20,160
some ciphertext values while it's zeros

477
00:17:20,160 --> 00:17:23,839
or one okay so on only four bytes of the

478
00:17:23,839 --> 00:17:26,559
ciphertext so it seems that it seems to

479
00:17:26,559 --> 00:17:28,319
be like the communication of the

480
00:17:28,319 --> 00:17:31,200
ciphertext so it's it's the mcu i think

481
00:17:31,200 --> 00:17:33,520
the mcu uh

482
00:17:33,520 --> 00:17:35,280
i already defaulted the mcu in this case

483
00:17:35,280 --> 00:17:37,679
because it's used for loading

484
00:17:37,679 --> 00:17:40,320
a value into the register however

485
00:17:40,320 --> 00:17:42,080
after that i started to think that the

486
00:17:42,080 --> 00:17:44,320
250 volt

487
00:17:44,320 --> 00:17:46,799
is not able to fault say

488
00:17:46,799 --> 00:17:47,919
the es

489
00:17:47,919 --> 00:17:50,320
crypto uh on the chip itself so i

490
00:17:50,320 --> 00:17:51,919
started to think about increasing a

491
00:17:51,919 --> 00:17:54,080
little bit the voltage so i this is why

492
00:17:54,080 --> 00:17:56,320
i use external power supply so you can

493
00:17:56,320 --> 00:17:59,440
see that okay with 250 i was able to to

494
00:17:59,440 --> 00:18:02,000
fault a cpu application for this chip

495
00:18:02,000 --> 00:18:05,039
but after that i used

496
00:18:05,039 --> 00:18:07,039
an external power supply to give me 10

497
00:18:07,039 --> 00:18:10,000
volt and now i have like 500 voltage

498
00:18:10,000 --> 00:18:12,160
that i can inject into into the circuit

499
00:18:12,160 --> 00:18:16,160
itself uh i spent some time to

500
00:18:16,160 --> 00:18:19,200
to optimize the faults uh in order to

501
00:18:19,200 --> 00:18:21,919
inject only faults for the aes and

502
00:18:21,919 --> 00:18:24,400
and only in round nine so i found a very

503
00:18:24,400 --> 00:18:26,880
interesting spot here that i obtained

504
00:18:26,880 --> 00:18:28,640
already a success rate like 60

505
00:18:28,640 --> 00:18:31,280
percentage that i'm able to uh to fall

506
00:18:31,280 --> 00:18:34,080
to the aes itself so this means that the

507
00:18:34,080 --> 00:18:36,880
the escript core is here

508
00:18:36,880 --> 00:18:38,080
but it needs

509
00:18:38,080 --> 00:18:42,120
more voltage okay

510
00:18:42,400 --> 00:18:44,640
so you can see here

511
00:18:44,640 --> 00:18:47,120
uh i already registered a bar

512
00:18:47,120 --> 00:18:49,200
consumption trace during the successful

513
00:18:49,200 --> 00:18:51,919
fourth of the years so here is the

514
00:18:51,919 --> 00:18:53,840
effect of the body biasing injection

515
00:18:53,840 --> 00:18:54,720
actually

516
00:18:54,720 --> 00:18:55,760
however

517
00:18:55,760 --> 00:18:58,640
this point is saturated because uh

518
00:18:58,640 --> 00:19:00,480
is a vertical resolution of the

519
00:19:00,480 --> 00:19:01,760
oscilloscope

520
00:19:01,760 --> 00:19:03,760
was was like above the maximum so this

521
00:19:03,760 --> 00:19:05,919
is why you can find this value is cut

522
00:19:05,919 --> 00:19:07,520
and flat

523
00:19:07,520 --> 00:19:08,720
uh

524
00:19:08,720 --> 00:19:10,559
you can see here on the right

525
00:19:10,559 --> 00:19:11,360
uh

526
00:19:11,360 --> 00:19:13,600
here's there is a map that shows that

527
00:19:13,600 --> 00:19:14,720
how many

528
00:19:14,720 --> 00:19:17,600
how many times i folded single byte for

529
00:19:17,600 --> 00:19:19,679
every column you can see that i'm

530
00:19:19,679 --> 00:19:20,559
already

531
00:19:20,559 --> 00:19:23,520
above to 80 percentage

532
00:19:23,520 --> 00:19:25,600
80 faulty

533
00:19:25,600 --> 00:19:27,840
cases per column

534
00:19:27,840 --> 00:19:30,880
so i have a lot of interesting faults to

535
00:19:30,880 --> 00:19:32,880
to perform the attack the differential

536
00:19:32,880 --> 00:19:35,120
fault analysis so i was able actually to

537
00:19:35,120 --> 00:19:37,520
attack the overall key of the es using

538
00:19:37,520 --> 00:19:40,160
this result

539
00:19:41,280 --> 00:19:43,440
i have some notes during the this

540
00:19:43,440 --> 00:19:45,679
experiment

541
00:19:45,679 --> 00:19:47,200
if you are going to try this kind of

542
00:19:47,200 --> 00:19:48,799
attacks you have to

543
00:19:48,799 --> 00:19:50,799
have to be careful if you are injecting

544
00:19:50,799 --> 00:19:53,440
a high voltage into the substrate itself

545
00:19:53,440 --> 00:19:55,120
you are going to damage the strip i

546
00:19:55,120 --> 00:19:58,000
already damaged three chips

547
00:19:58,000 --> 00:20:00,000
uh

548
00:20:00,000 --> 00:20:01,600
and also it's very important while you

549
00:20:01,600 --> 00:20:03,360
are doing

550
00:20:03,360 --> 00:20:05,039
decapping the chip you have to be

551
00:20:05,039 --> 00:20:06,480
careful also

552
00:20:06,480 --> 00:20:07,520
because you may

553
00:20:07,520 --> 00:20:09,520
damage the chip itself

554
00:20:09,520 --> 00:20:11,440
and also you have to avoid moving the

555
00:20:11,440 --> 00:20:14,720
needle on the x and y while you are not

556
00:20:14,720 --> 00:20:16,240
while you are in touch with the chip

557
00:20:16,240 --> 00:20:19,280
because also you are going to damage the

558
00:20:19,280 --> 00:20:21,840
uh the chip so it's better to if you

559
00:20:21,840 --> 00:20:23,679
would like to move while x and y to you

560
00:20:23,679 --> 00:20:25,600
have to move up a little bit the needle

561
00:20:25,600 --> 00:20:28,240
and then move move it while x and y and

562
00:20:28,240 --> 00:20:31,520
then make it down again

563
00:20:31,760 --> 00:20:32,840
so the

564
00:20:32,840 --> 00:20:34,720
conclusion

565
00:20:34,720 --> 00:20:36,880
so i i already built a chip and the

566
00:20:36,880 --> 00:20:39,280
compact setup for bbi

567
00:20:39,280 --> 00:20:40,880
i use this uh

568
00:20:40,880 --> 00:20:43,039
it's a homemade injector to

569
00:20:43,039 --> 00:20:44,880
to bring the hardware as accelerator or

570
00:20:44,880 --> 00:20:46,960
fluorescent soc

571
00:20:46,960 --> 00:20:50,159
i just need only 10k trials to to dump

572
00:20:50,159 --> 00:20:52,240
the overall key of the es

573
00:20:52,240 --> 00:20:53,280
uh

574
00:20:53,280 --> 00:20:54,880
the silicon baguette which is my

575
00:20:54,880 --> 00:20:57,760
injector will be i'm going to to release

576
00:20:57,760 --> 00:21:01,360
it on feed days on on the github

577
00:21:01,360 --> 00:21:03,280
uh regarding the future work actually

578
00:21:03,280 --> 00:21:04,880
i'm going to evaluate more resources

579
00:21:04,880 --> 00:21:06,400
using this technique

580
00:21:06,400 --> 00:21:08,000
and also i'm going to study the effect

581
00:21:08,000 --> 00:21:10,720
of this voltage injection

582
00:21:10,720 --> 00:21:12,880
of this injection technique on

583
00:21:12,880 --> 00:21:15,679
uh unsecured elements whereas you can

584
00:21:15,679 --> 00:21:18,159
find some glitch detectors and try to to

585
00:21:18,159 --> 00:21:21,440
see exactly what happened

586
00:21:21,520 --> 00:21:24,639
yeah thank you very much

587
00:21:25,120 --> 00:21:28,720
[Applause]

588
00:21:28,720 --> 00:21:32,000
i don't know if you have any questions

589
00:21:32,000 --> 00:21:33,840
yeah

590
00:21:33,840 --> 00:21:36,400
uh what was your uh reference signal for

591
00:21:36,400 --> 00:21:39,039
your trigger

592
00:21:39,280 --> 00:21:41,919
don't aren't your your your your uh i

593
00:21:41,919 --> 00:21:43,760
can control firing at a specific time

594
00:21:43,760 --> 00:21:45,760
relative to something else i can i can

595
00:21:45,760 --> 00:21:47,280
control the trigger from the firmware

596
00:21:47,280 --> 00:21:49,678
itself

597
00:21:50,640 --> 00:21:53,520
oh so oh so you've modified the firmware

598
00:21:53,520 --> 00:21:55,919
uh yes custom firmware yeah the hardware

599
00:21:55,919 --> 00:21:57,520
accelerator you can call it from a

600
00:21:57,520 --> 00:21:59,200
firmware use

601
00:21:59,200 --> 00:22:01,919
from from the firmware yes but after

602
00:22:01,919 --> 00:22:04,159
that you can easily add a trigger before

603
00:22:04,159 --> 00:22:05,440
and after the

604
00:22:05,440 --> 00:22:06,559
launch of the

605
00:22:06,559 --> 00:22:08,320
start of the es yeah

606
00:22:08,320 --> 00:22:10,559
yeah how reliable is this like if you

607
00:22:10,559 --> 00:22:12,880
were to you know tear apart the setup

608
00:22:12,880 --> 00:22:14,400
and then try and go back and find that

609
00:22:14,400 --> 00:22:16,880
spot again i can reproduce attack very

610
00:22:16,880 --> 00:22:18,000
easily

611
00:22:18,000 --> 00:22:20,960
if you can find here

612
00:22:21,370 --> 00:22:22,799
[Music]

613
00:22:22,799 --> 00:22:24,559
this is my the chip after the the

614
00:22:24,559 --> 00:22:27,120
experiment here you can find that

615
00:22:27,120 --> 00:22:28,799
the i injected a lot of faults here

616
00:22:28,799 --> 00:22:32,000
because uh this is a the fault where i i

617
00:22:32,000 --> 00:22:33,520
already obtained for faulting the

618
00:22:33,520 --> 00:22:35,520
communication of the ciphertext

619
00:22:35,520 --> 00:22:37,679
but here there is a yes and this point

620
00:22:37,679 --> 00:22:38,880
is a

621
00:22:38,880 --> 00:22:41,600
as a whereas the crypto core is uh

622
00:22:41,600 --> 00:22:43,840
is on the trip itself

623
00:22:43,840 --> 00:22:46,000
yeah

624
00:22:46,000 --> 00:22:49,200
do we have any questions

625
00:22:50,500 --> 00:22:52,480
[Music]

626
00:22:52,480 --> 00:22:54,640
a very interesting talk thank you um so

627
00:22:54,640 --> 00:22:56,320
from this picture it's it's a little

628
00:22:56,320 --> 00:22:57,840
hard to tell

629
00:22:57,840 --> 00:22:59,760
if this is the back side of the chip or

630
00:22:59,760 --> 00:23:01,760
the top side i'm assuming this is the

631
00:23:01,760 --> 00:23:03,760
back side of the tube okay and was it

632
00:23:03,760 --> 00:23:06,080
bga so you went through the pcb and then

633
00:23:06,080 --> 00:23:09,120
into the lead frame sorry uh

634
00:23:09,120 --> 00:23:10,480
so are we looking at the back side of

635
00:23:10,480 --> 00:23:12,320
the pcb and you've gone through the pcb

636
00:23:12,320 --> 00:23:14,320
through the lead frame

637
00:23:14,320 --> 00:23:16,480
i didn't hear you very well

638
00:23:16,480 --> 00:23:18,480
um

639
00:23:18,480 --> 00:23:20,159
i'm just wondering what we're looking at

640
00:23:20,159 --> 00:23:21,679
if this is the back side of the chip

641
00:23:21,679 --> 00:23:24,080
yeah shouldn't there be bga or is this

642
00:23:24,080 --> 00:23:25,840
it's an soc it's a mic uh it's a

643
00:23:25,840 --> 00:23:28,559
microcontroller it's not it's not it's a

644
00:23:28,559 --> 00:23:31,120
it's an soc for low power which is used

645
00:23:31,120 --> 00:23:33,120
for low power applications

646
00:23:33,120 --> 00:23:36,640
uh but it's not an fpga no no i mean um

647
00:23:36,640 --> 00:23:38,880
so you've gone through the pcb and i was

648
00:23:38,880 --> 00:23:40,480
wondering if there's metal contacts in

649
00:23:40,480 --> 00:23:41,360
there and then it looks like we're

650
00:23:41,360 --> 00:23:42,640
looking at the lead frame that the chip

651
00:23:42,640 --> 00:23:44,080
is mounted on

652
00:23:44,080 --> 00:23:46,559
ah yes yes the chip uh yeah the chip

653
00:23:46,559 --> 00:23:48,000
actually is

654
00:23:48,000 --> 00:23:51,360
soldered on the back side of the pcb

655
00:23:51,360 --> 00:23:53,840
itself okay okay yeah then there's

656
00:23:53,840 --> 00:23:55,360
nothing yeah you're not interfering with

657
00:23:55,360 --> 00:23:57,919
any signals okay maybe i didn't like to

658
00:23:57,919 --> 00:24:02,400
show the overall setup of the of the uh

659
00:24:02,400 --> 00:24:04,320
of the pcb because we have a i took a

660
00:24:04,320 --> 00:24:06,559
black hat so we will show that there so

661
00:24:06,559 --> 00:24:09,200
okay that that makes sense and i

662
00:24:09,200 --> 00:24:10,799
if i'm understanding correctly did you

663
00:24:10,799 --> 00:24:12,720
say that you can also do body biasing

664
00:24:12,720 --> 00:24:14,880
through the top side of the chip yes the

665
00:24:14,880 --> 00:24:16,880
front side yeah but decaping the chip

666
00:24:16,880 --> 00:24:18,640
from the front side is very challenging

667
00:24:18,640 --> 00:24:21,279
because the bounding wire it needs some

668
00:24:21,279 --> 00:24:23,919
some preparation and in the lab we don't

669
00:24:23,919 --> 00:24:25,360
have this tool for the moment this is

670
00:24:25,360 --> 00:24:27,520
why we use a backside yeah and do you

671
00:24:27,520 --> 00:24:29,840
have to remove the passivation oxide or

672
00:24:29,840 --> 00:24:31,840
sorry usually there's a passivation

673
00:24:31,840 --> 00:24:34,559
oxide that's deposited on on top yeah

674
00:24:34,559 --> 00:24:37,039
i mean you have to be careful because

675
00:24:37,039 --> 00:24:39,440
you have you shouldn't remove the

676
00:24:39,440 --> 00:24:41,840
well if you are performing a front side

677
00:24:41,840 --> 00:24:44,400
the decapping you have to

678
00:24:44,400 --> 00:24:46,400
be careful actually because the bounding

679
00:24:46,400 --> 00:24:49,120
wiring if you cut one wire it's okay

680
00:24:49,120 --> 00:24:51,279
it's done the trip too

681
00:24:51,279 --> 00:24:53,200
so

682
00:24:53,200 --> 00:24:55,520
i haven't done before a front side

683
00:24:55,520 --> 00:24:56,799
decapping

684
00:24:56,799 --> 00:24:58,400
maybe you'll leave it to my ease here

685
00:24:58,400 --> 00:25:00,559
you can

686
00:25:00,559 --> 00:25:03,840
yeah i can do it here

687
00:25:05,520 --> 00:25:09,039
any other questions yeah

688
00:25:10,720 --> 00:25:11,919
no more

689
00:25:11,919 --> 00:25:13,120
then please another round of applause

690
00:25:13,120 --> 00:25:17,719
for cream okay thank you very much

