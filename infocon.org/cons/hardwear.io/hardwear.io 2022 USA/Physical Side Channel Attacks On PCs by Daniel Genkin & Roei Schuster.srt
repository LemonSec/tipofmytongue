1
00:00:04,480 --> 00:00:06,560
okay uh hi thanks for the introduction

2
00:00:06,560 --> 00:00:08,639
i'm i'm daniel genkin and this is roy

3
00:00:08,639 --> 00:00:09,679
schuster

4
00:00:09,679 --> 00:00:11,759
and the title of our talk is physical

5
00:00:11,759 --> 00:00:13,840
side channel attacks on pcs okay and

6
00:00:13,840 --> 00:00:15,839
this will basically describe our journey

7
00:00:15,839 --> 00:00:18,080
at hacking laptop computers

8
00:00:18,080 --> 00:00:20,960
as opposed to embedded the devices

9
00:00:20,960 --> 00:00:23,039
so when it comes to doing side channels

10
00:00:23,039 --> 00:00:25,359
on pc computers there are broadly two

11
00:00:25,359 --> 00:00:28,480
type of categories right one is software

12
00:00:28,480 --> 00:00:30,080
side channels where we have some like

13
00:00:30,080 --> 00:00:31,920
architectural resource for example this

14
00:00:31,920 --> 00:00:34,079
blue gear inside this processor and an

15
00:00:34,079 --> 00:00:36,000
attacker and victim causing contention

16
00:00:36,000 --> 00:00:37,760
on this microarchitecture shared

17
00:00:37,760 --> 00:00:39,600
resource and therefore an attacker can

18
00:00:39,600 --> 00:00:41,120
deduce something that the victim is

19
00:00:41,120 --> 00:00:42,000
doing

20
00:00:42,000 --> 00:00:44,079
and microarchitecture and shared

21
00:00:44,079 --> 00:00:46,239
resources often cause microarchitectural

22
00:00:46,239 --> 00:00:48,399
side channels but it's more than just

23
00:00:48,399 --> 00:00:50,879
the processor components it's also

24
00:00:50,879 --> 00:00:53,120
timing channels over the network

25
00:00:53,120 --> 00:00:54,480
okay

26
00:00:54,480 --> 00:00:56,719
now that's one category of side channels

27
00:00:56,719 --> 00:00:58,160
and we usually call them software side

28
00:00:58,160 --> 00:00:59,840
channels why because you can exploit

29
00:00:59,840 --> 00:01:01,680
them through software

30
00:01:01,680 --> 00:01:03,600
the other one is physical side channels

31
00:01:03,600 --> 00:01:05,360
the things that this crowd likes more

32
00:01:05,360 --> 00:01:06,960
which is like you know let's do power

33
00:01:06,960 --> 00:01:08,400
analysis on something let's glitch

34
00:01:08,400 --> 00:01:10,960
something let's let's shoot em into it

35
00:01:10,960 --> 00:01:13,600
or monitor em from it

36
00:01:13,600 --> 00:01:15,759
and what i'm gonna show you today is

37
00:01:15,759 --> 00:01:17,680
that when it comes to laptop computers

38
00:01:17,680 --> 00:01:20,799
at least or desktops there is another

39
00:01:20,799 --> 00:01:22,320
channel which is the acoustic channel

40
00:01:22,320 --> 00:01:24,840
which is noise emitted by these

41
00:01:24,840 --> 00:01:27,840
devices and what we're going to do today

42
00:01:27,840 --> 00:01:29,520
is i'm going to focus actually on the

43
00:01:29,520 --> 00:01:31,040
acoustic channel and show you that you

44
00:01:31,040 --> 00:01:33,920
can actually get information from the

45
00:01:33,920 --> 00:01:37,439
from the laptop devices using sound

46
00:01:37,439 --> 00:01:39,360
and not only that but then we'll top it

47
00:01:39,360 --> 00:01:41,759
by showing you a new category of attacks

48
00:01:41,759 --> 00:01:43,840
which kind of straddles between these

49
00:01:43,840 --> 00:01:45,840
two okay and i'm gonna not spoil the

50
00:01:45,840 --> 00:01:47,119
surprise and i'm gonna let roy talk

51
00:01:47,119 --> 00:01:48,159
about that

52
00:01:48,159 --> 00:01:49,600
and before i get this chair out of the

53
00:01:49,600 --> 00:01:52,720
way because otherwise it will get me

54
00:01:52,720 --> 00:01:55,200
let's start with acoustic emissions

55
00:01:55,200 --> 00:01:56,640
so here's a

56
00:01:56,640 --> 00:01:59,040
relatively modern old computer

57
00:01:59,040 --> 00:02:01,920
and this relatively modern old computer

58
00:02:01,920 --> 00:02:04,079
has still has some electromechanical

59
00:02:04,079 --> 00:02:06,159
components okay it has a cd-rom drive

60
00:02:06,159 --> 00:02:08,080
because we all love cd-rom drives it has

61
00:02:08,080 --> 00:02:09,679
a hard drive which is of course a

62
00:02:09,679 --> 00:02:10,959
mechanical hard drive so it needs to

63
00:02:10,959 --> 00:02:13,360
spin also has a fan and when all these

64
00:02:13,360 --> 00:02:15,200
devices spin they make friction and

65
00:02:15,200 --> 00:02:17,760
therefore they make noise okay

66
00:02:17,760 --> 00:02:19,599
and honestly i couldn't care less this

67
00:02:19,599 --> 00:02:22,319
is not the noise we're looking for on

68
00:02:22,319 --> 00:02:23,599
that motherboard there are also

69
00:02:23,599 --> 00:02:27,040
capacitors and voltage regulators which

70
00:02:27,040 --> 00:02:29,680
is the thing we're interested in because

71
00:02:29,680 --> 00:02:32,239
these are part of the voltage regulatory

72
00:02:32,239 --> 00:02:34,239
circuit on the motherboard and it's

73
00:02:34,239 --> 00:02:36,400
trying to provide stable voltage under

74
00:02:36,400 --> 00:02:38,560
ever-changing current well these devices

75
00:02:38,560 --> 00:02:40,160
physically move

76
00:02:40,160 --> 00:02:43,519
and as they move they create noise

77
00:02:43,519 --> 00:02:44,560
okay

78
00:02:44,560 --> 00:02:47,519
so what do we need to measure that noise

79
00:02:47,519 --> 00:02:48,640
well

80
00:02:48,640 --> 00:02:50,239
i have everything laid out in front of

81
00:02:50,239 --> 00:02:52,080
me but this turned out to be a reds nest

82
00:02:52,080 --> 00:02:54,800
of wires so and the room is not standard

83
00:02:54,800 --> 00:02:56,480
so everything that is here trust me it's

84
00:02:56,480 --> 00:02:58,080
also represented here in some shape or

85
00:02:58,080 --> 00:03:00,560
form okay so we have a target laptop we

86
00:03:00,560 --> 00:03:02,640
have a microphone the microphone is in

87
00:03:02,640 --> 00:03:04,720
fact this silver thing at the end the

88
00:03:04,720 --> 00:03:06,480
rest is just a handle

89
00:03:06,480 --> 00:03:07,760
where is my microphone here's my

90
00:03:07,760 --> 00:03:09,200
microphone and the microphone is this

91
00:03:09,200 --> 00:03:11,200
silver thing at the tip okay there

92
00:03:11,200 --> 00:03:12,720
there's just a handle for me to grab it

93
00:03:12,720 --> 00:03:15,040
easier okay i need a microphone power

94
00:03:15,040 --> 00:03:17,200
supply because i have a good microphone

95
00:03:17,200 --> 00:03:20,400
that that can go really high up in

96
00:03:20,400 --> 00:03:22,319
frequency and sensitivity and then i

97
00:03:22,319 --> 00:03:24,080
need some sort of a digitizer which is a

98
00:03:24,080 --> 00:03:26,159
fancy name for a sound card and some

99
00:03:26,159 --> 00:03:28,480
reds nest of wires to hook all this up

100
00:03:28,480 --> 00:03:29,440
okay

101
00:03:29,440 --> 00:03:30,959
so that's what that's what i have here

102
00:03:30,959 --> 00:03:33,760
okay so let's see if we can what can we

103
00:03:33,760 --> 00:03:36,159
learn if if we were to try to do it on

104
00:03:36,159 --> 00:03:39,040
on on a computer

105
00:03:39,440 --> 00:03:43,200
and may the demo gods be with me because

106
00:03:43,200 --> 00:03:46,879
because this is as flaky as it gets in

107
00:03:46,879 --> 00:03:49,599
in fact let me try stabilizing the av

108
00:03:49,599 --> 00:03:52,560
here this works better okay so this

109
00:03:52,560 --> 00:03:54,239
diagram is called a spectrogram or a

110
00:03:54,239 --> 00:03:56,000
waterfall display okay it's a sequence

111
00:03:56,000 --> 00:03:58,879
of ffts the vertical axis is the time

112
00:03:58,879 --> 00:04:00,480
axis that you've all picked out the

113
00:04:00,480 --> 00:04:02,879
horizontal axis is the frequency axis so

114
00:04:02,879 --> 00:04:05,760
if i whistle

115
00:04:06,400 --> 00:04:08,239
you can see my whistle at one kilohertz

116
00:04:08,239 --> 00:04:10,080
okay and the more yellow something is

117
00:04:10,080 --> 00:04:11,680
the more there is

118
00:04:11,680 --> 00:04:13,439
the more there is a given signal at a

119
00:04:13,439 --> 00:04:15,280
given frequency at the given time so

120
00:04:15,280 --> 00:04:18,639
intensity or strength is yellow okay

121
00:04:18,639 --> 00:04:21,519
and now i'm going to take

122
00:04:21,519 --> 00:04:23,759
my trusty old

123
00:04:23,759 --> 00:04:26,080
laptop here this is a thinkpad t23 for

124
00:04:26,080 --> 00:04:28,080
those of you that know what that is okay

125
00:04:28,080 --> 00:04:30,000
and i'm gonna aim a microphone to it and

126
00:04:30,000 --> 00:04:31,520
i'm gonna ask this laptop to do some

127
00:04:31,520 --> 00:04:33,600
instructions for us okay wrong software

128
00:04:33,600 --> 00:04:36,160
don't do that

129
00:04:36,720 --> 00:04:39,360
let's try that

130
00:04:41,199 --> 00:04:43,199
and as soon as i did that well the

131
00:04:43,199 --> 00:04:44,800
screen changed so first of all you know

132
00:04:44,800 --> 00:04:46,880
i'm doing this live and not lying to you

133
00:04:46,880 --> 00:04:48,400
but let me pause the recording for a

134
00:04:48,400 --> 00:04:50,719
minute

135
00:04:52,720 --> 00:04:55,440
and we can see patterns here okay

136
00:04:55,440 --> 00:04:57,759
so first of all we have these strict

137
00:04:57,759 --> 00:04:59,040
lines

138
00:04:59,040 --> 00:05:01,039
these zebra patterns that show up

139
00:05:01,039 --> 00:05:03,360
because they look like a crosswalk okay

140
00:05:03,360 --> 00:05:05,199
well what this computer is actually

141
00:05:05,199 --> 00:05:07,039
doing right now it's doing one second

142
00:05:07,039 --> 00:05:09,440
loop of halt operations

143
00:05:09,440 --> 00:05:11,520
and between them there is one second

144
00:05:11,520 --> 00:05:13,440
loop of memory operations and one second

145
00:05:13,440 --> 00:05:16,000
loop of multiplications

146
00:05:16,000 --> 00:05:18,160
the healths are typically the noisy part

147
00:05:18,160 --> 00:05:19,520
so as soon as we have something like

148
00:05:19,520 --> 00:05:22,800
this this is usually a hot

149
00:05:22,800 --> 00:05:25,039
between health we have

150
00:05:25,039 --> 00:05:26,240
memory

151
00:05:26,240 --> 00:05:27,759
and multiplication

152
00:05:27,759 --> 00:05:29,600
and we can distinguish them why because

153
00:05:29,600 --> 00:05:30,880
this line

154
00:05:30,880 --> 00:05:34,240
sometimes appears and sometimes doesn't

155
00:05:34,240 --> 00:05:35,199
okay

156
00:05:35,199 --> 00:05:37,440
so we can tell when this poor machine is

157
00:05:37,440 --> 00:05:39,199
doing memory operations and when it's

158
00:05:39,199 --> 00:05:41,280
doing multiplications of course we don't

159
00:05:41,280 --> 00:05:42,639
know which is which

160
00:05:42,639 --> 00:05:44,000
because we're not looking at the screen

161
00:05:44,000 --> 00:05:46,000
relative to the spectrogram but the

162
00:05:46,000 --> 00:05:47,520
point is we can distinguish between the

163
00:05:47,520 --> 00:05:48,720
two

164
00:05:48,720 --> 00:05:49,840
okay

165
00:05:49,840 --> 00:05:51,600
now not only can we distinguish between

166
00:05:51,600 --> 00:05:53,680
the two

167
00:05:53,680 --> 00:05:57,120
this goes even deeper

168
00:05:59,600 --> 00:06:01,199
because

169
00:06:01,199 --> 00:06:03,120
we if we take it into a more controlled

170
00:06:03,120 --> 00:06:04,400
environment with an even better

171
00:06:04,400 --> 00:06:06,560
microphone we can distinguish between

172
00:06:06,560 --> 00:06:08,400
hearts multiplications floating point

173
00:06:08,400 --> 00:06:11,039
multiplications additions memories knobs

174
00:06:11,039 --> 00:06:12,720
and the entire thing repeats

175
00:06:12,720 --> 00:06:13,919
now you're wondering where is this

176
00:06:13,919 --> 00:06:16,000
leaving well audible ends at about here

177
00:06:16,000 --> 00:06:18,080
this is about 50 kilohertz this is all

178
00:06:18,080 --> 00:06:20,639
the way to 280 kilohertz okay that's a

179
00:06:20,639 --> 00:06:22,560
very good microphone and again these are

180
00:06:22,560 --> 00:06:24,000
one second

181
00:06:24,000 --> 00:06:26,240
intervals of the same op code over and

182
00:06:26,240 --> 00:06:29,680
over again okay so it's there

183
00:06:29,680 --> 00:06:32,319
but well of course the next question is

184
00:06:32,319 --> 00:06:33,919
well it can be there that's that's

185
00:06:33,919 --> 00:06:36,639
that's that's that's nice and fine right

186
00:06:36,639 --> 00:06:37,840
but

187
00:06:37,840 --> 00:06:40,240
what do we do with it okay well i don't

188
00:06:40,240 --> 00:06:42,080
want that i want to hack something right

189
00:06:42,080 --> 00:06:44,240
let's get a key out of something so

190
00:06:44,240 --> 00:06:46,160
being a cryptographer the natural way

191
00:06:46,160 --> 00:06:47,919
for me to to attack something is rs

192
00:06:47,919 --> 00:06:49,120
encryption so now i'm going to throw a

193
00:06:49,120 --> 00:06:50,800
bunch of math at you because i'm like

194
00:06:50,800 --> 00:06:53,280
good at this okay so what's our say i'm

195
00:06:53,280 --> 00:06:55,440
going to whip it out well rsa has two

196
00:06:55,440 --> 00:06:57,280
random primes p and q it's a public key

197
00:06:57,280 --> 00:06:59,039
crypto system the key is p and q and a

198
00:06:59,039 --> 00:07:01,440
private exponent d the public key is n

199
00:07:01,440 --> 00:07:03,680
equals p q and a public exponent e

200
00:07:03,680 --> 00:07:05,840
encryption is m to the e mode n you get

201
00:07:05,840 --> 00:07:07,919
back the cipher text c and rsa

202
00:07:07,919 --> 00:07:09,360
decryption which is the interesting part

203
00:07:09,360 --> 00:07:11,440
where the secret key happens is c to the

204
00:07:11,440 --> 00:07:13,840
d mode n and you get back the message m

205
00:07:13,840 --> 00:07:16,240
if you didn't get all this math well

206
00:07:16,240 --> 00:07:17,919
doesn't really matter all you need to

207
00:07:17,919 --> 00:07:19,599
know is that we take something raise it

208
00:07:19,599 --> 00:07:21,680
to the power of something else more than

209
00:07:21,680 --> 00:07:24,240
and we want the keys that live in this

210
00:07:24,240 --> 00:07:27,039
okay of course nobody quite does it like

211
00:07:27,039 --> 00:07:27,919
that

212
00:07:27,919 --> 00:07:29,680
instead what people do is that they do

213
00:07:29,680 --> 00:07:32,400
two exponentiations modulo p and q

214
00:07:32,400 --> 00:07:35,120
instead of one exponentiation modulo n

215
00:07:35,120 --> 00:07:37,280
because p and q are smaller numbers and

216
00:07:37,280 --> 00:07:38,639
you can use a math trick to speed

217
00:07:38,639 --> 00:07:40,880
everything up okay but again all you

218
00:07:40,880 --> 00:07:43,280
need to know the two operations c to the

219
00:07:43,280 --> 00:07:46,160
d mod p c to the d mode q and we want d

220
00:07:46,160 --> 00:07:47,759
p or q

221
00:07:47,759 --> 00:07:49,520
okay that's what we would really like

222
00:07:49,520 --> 00:07:50,800
i'm seeing the pain and suffering on

223
00:07:50,800 --> 00:07:52,560
somebody's on some people's faces here

224
00:07:52,560 --> 00:07:54,560
because of the math i am sorry i am an

225
00:07:54,560 --> 00:07:56,840
academic math we like

226
00:07:56,840 --> 00:07:59,520
okay so well what happens if we're

227
00:07:59,520 --> 00:08:02,240
trying to run uh if we're trying to run

228
00:08:02,240 --> 00:08:05,280
rsa and as we're running rsa we are

229
00:08:05,280 --> 00:08:08,160
monitoring the uh sound emissions from

230
00:08:08,160 --> 00:08:11,599
from our devices well it this project is

231
00:08:11,599 --> 00:08:14,240
kind of crappy so it ate it but you kind

232
00:08:14,240 --> 00:08:15,840
of see here

233
00:08:15,840 --> 00:08:17,680
that there is a line that breaks in the

234
00:08:17,680 --> 00:08:19,199
middle and then continues another

235
00:08:19,199 --> 00:08:20,479
frequency

236
00:08:20,479 --> 00:08:21,280
okay

237
00:08:21,280 --> 00:08:22,960
and this is the transition between p and

238
00:08:22,960 --> 00:08:24,319
q

239
00:08:24,319 --> 00:08:25,360
okay

240
00:08:25,360 --> 00:08:28,479
and not only that we have five keys here

241
00:08:28,479 --> 00:08:30,639
five decryptions of the same message

242
00:08:30,639 --> 00:08:32,640
using different keys let me say that

243
00:08:32,640 --> 00:08:35,360
again five decryptions uh

244
00:08:35,360 --> 00:08:37,120
using the same message and different

245
00:08:37,120 --> 00:08:38,559
keys

246
00:08:38,559 --> 00:08:41,039
so what we're seeing is that well first

247
00:08:41,039 --> 00:08:42,719
of all we can see every key

248
00:08:42,719 --> 00:08:44,159
but also every key kind of looks

249
00:08:44,159 --> 00:08:46,240
different because the distance here

250
00:08:46,240 --> 00:08:48,480
between these two lines is wider here

251
00:08:48,480 --> 00:08:50,320
even wider here and here the second one

252
00:08:50,320 --> 00:08:52,320
even when completely awol

253
00:08:52,320 --> 00:08:56,560
okay so every key has its own signature

254
00:08:56,560 --> 00:08:58,160
and not only that it has on its own

255
00:08:58,160 --> 00:09:00,640
spectral signature we can try listening

256
00:09:00,640 --> 00:09:02,160
to it

257
00:09:02,160 --> 00:09:04,399
the problem is that while audible

258
00:09:04,399 --> 00:09:07,040
arrange ends here we need a dog to do

259
00:09:07,040 --> 00:09:10,000
that and in an absence of a dog what

260
00:09:10,000 --> 00:09:11,440
we're gonna do instead is that we're

261
00:09:11,440 --> 00:09:14,000
gonna down mix all these signals down in

262
00:09:14,000 --> 00:09:15,360
frequency

263
00:09:15,360 --> 00:09:18,240
okay a bit too much thank you powerpoint

264
00:09:18,240 --> 00:09:23,160
okay but let's at least try playing it

265
00:09:26,480 --> 00:09:27,920
and looks like it doesn't want to play

266
00:09:27,920 --> 00:09:30,000
either because it's detected hdmi all

267
00:09:30,000 --> 00:09:32,000
right good start for them so you're not

268
00:09:32,000 --> 00:09:33,760
going to hear it i'm sorry

269
00:09:33,760 --> 00:09:34,640
but

270
00:09:34,640 --> 00:09:36,080
let's say that we want to extract the

271
00:09:36,080 --> 00:09:37,920
keys out of it

272
00:09:37,920 --> 00:09:39,040
okay

273
00:09:39,040 --> 00:09:41,600
that's really the problem

274
00:09:41,600 --> 00:09:44,880
and the problem is that we have a 50

275
00:09:44,880 --> 00:09:47,519
kilohertz signal that's what acoustics

276
00:09:47,519 --> 00:09:49,360
is it's between 0 and 50 kilos and i'm

277
00:09:49,360 --> 00:09:51,360
being generous here because audible

278
00:09:51,360 --> 00:09:53,760
range ends at around 16.

279
00:09:53,760 --> 00:09:56,640
and we still have a 2 gigahertz computer

280
00:09:56,640 --> 00:09:59,920
okay so how do we bridge these two gaps

281
00:09:59,920 --> 00:10:01,760
we have three orders of six orders of

282
00:10:01,760 --> 00:10:04,240
magnitude slower in our signals than a

283
00:10:04,240 --> 00:10:06,160
2-gigahertz computer

284
00:10:06,160 --> 00:10:07,600
so the trick is to do some crypto

285
00:10:07,600 --> 00:10:09,600
analysis and the idea is what's called

286
00:10:09,600 --> 00:10:11,760
leak itself amplification we're going to

287
00:10:11,760 --> 00:10:13,600
shoot bad inputs

288
00:10:13,600 --> 00:10:15,279
into the algorithm

289
00:10:15,279 --> 00:10:17,519
in a way that amplifies that algorithm's

290
00:10:17,519 --> 00:10:19,519
leakage to a point where can we can

291
00:10:19,519 --> 00:10:21,839
detect it even if we don't really have

292
00:10:21,839 --> 00:10:23,760
the means to see the signals we're

293
00:10:23,760 --> 00:10:25,120
trying to see

294
00:10:25,120 --> 00:10:26,959
so what do i mean by that

295
00:10:26,959 --> 00:10:28,000
okay

296
00:10:28,000 --> 00:10:30,240
so again i'm an academic and academics

297
00:10:30,240 --> 00:10:32,000
well what we like we like boxes we like

298
00:10:32,000 --> 00:10:33,519
boxes with round corners and

299
00:10:33,519 --> 00:10:35,279
obstructions right so so here's my

300
00:10:35,279 --> 00:10:37,360
obstruction on things i'm going to call

301
00:10:37,360 --> 00:10:39,519
it the bit distinguishing work okay what

302
00:10:39,519 --> 00:10:42,560
does this weird box does well it takes

303
00:10:42,560 --> 00:10:44,079
in a cipher text with a specific

304
00:10:44,079 --> 00:10:45,120
condition

305
00:10:45,120 --> 00:10:48,320
where it must end with once

306
00:10:48,320 --> 00:10:50,800
okay runs it to decryption analyzes the

307
00:10:50,800 --> 00:10:51,760
signal

308
00:10:51,760 --> 00:10:54,079
and spits out if the cipher text is

309
00:10:54,079 --> 00:10:56,000
larger than q we get a zero if the

310
00:10:56,000 --> 00:10:57,760
cipher text is smaller than q is greater

311
00:10:57,760 --> 00:10:58,720
one

312
00:10:58,720 --> 00:11:00,160
and the purpose in these two slides

313
00:11:00,160 --> 00:11:02,160
besides inducing pain and suffering on

314
00:11:02,160 --> 00:11:03,920
the non-academic audience

315
00:11:03,920 --> 00:11:05,120
is first of all i'm going to show you

316
00:11:05,120 --> 00:11:07,200
that if i were to have this box

317
00:11:07,200 --> 00:11:09,200
i'm able to extract the key

318
00:11:09,200 --> 00:11:11,040
and second slide i'm going to build that

319
00:11:11,040 --> 00:11:12,160
box with you

320
00:11:12,160 --> 00:11:14,480
okay so bear with me

321
00:11:14,480 --> 00:11:15,600
so

322
00:11:15,600 --> 00:11:17,519
first argument is that if i have this

323
00:11:17,519 --> 00:11:19,200
magical box i can extract the key this

324
00:11:19,200 --> 00:11:21,200
is a sufficient primitive why is that

325
00:11:21,200 --> 00:11:23,839
well let's do a binary search on queue

326
00:11:23,839 --> 00:11:26,480
thank you it's a random prime the bits

327
00:11:26,480 --> 00:11:28,320
of which we do not know except the top

328
00:11:28,320 --> 00:11:30,240
bit which is set to one why they're

329
00:11:30,240 --> 00:11:32,560
chosen that way okay

330
00:11:32,560 --> 00:11:34,160
take the bits that you know copy them

331
00:11:34,160 --> 00:11:37,200
over put zero in the bit you don't know

332
00:11:37,200 --> 00:11:39,519
fill the remaining with ones

333
00:11:39,519 --> 00:11:42,880
and set it to decryption

334
00:11:42,880 --> 00:11:44,640
as we send it to decryption

335
00:11:44,640 --> 00:11:46,720
well let's say that this thing analyzed

336
00:11:46,720 --> 00:11:49,600
the signal and spat out a one what does

337
00:11:49,600 --> 00:11:51,600
one mean one means that c is smaller

338
00:11:51,600 --> 00:11:52,880
than q

339
00:11:52,880 --> 00:11:53,760
okay

340
00:11:53,760 --> 00:11:56,639
how can c be smaller than q well the

341
00:11:56,639 --> 00:11:58,320
only way that this c

342
00:11:58,320 --> 00:12:00,320
can be smaller than this q and this c is

343
00:12:00,320 --> 00:12:01,920
filled with ones here it's as big as it

344
00:12:01,920 --> 00:12:04,639
can get and if it's still too small that

345
00:12:04,639 --> 00:12:07,040
means that this zero is actually a one

346
00:12:07,040 --> 00:12:08,639
okay that's the only condition that that

347
00:12:08,639 --> 00:12:10,880
can happen so we know that the key

348
00:12:10,880 --> 00:12:13,279
leaves in the space we learned a bit

349
00:12:13,279 --> 00:12:14,720
let's try this again

350
00:12:14,720 --> 00:12:16,639
copy the bits that you know put zero in

351
00:12:16,639 --> 00:12:18,160
the place you don't know fill the

352
00:12:18,160 --> 00:12:19,600
remainings with one

353
00:12:19,600 --> 00:12:21,839
send it fire it over

354
00:12:21,839 --> 00:12:23,360
run it again and this time this thing

355
00:12:23,360 --> 00:12:25,120
spread out to zero

356
00:12:25,120 --> 00:12:27,440
and what does this mean well it means

357
00:12:27,440 --> 00:12:28,320
that

358
00:12:28,320 --> 00:12:30,560
if this is a zero then c smaller than c

359
00:12:30,560 --> 00:12:32,399
is larger than q the only way for c to

360
00:12:32,399 --> 00:12:34,000
be larger than q

361
00:12:34,000 --> 00:12:37,360
is that this c

362
00:12:37,440 --> 00:12:38,959
is

363
00:12:38,959 --> 00:12:40,480
even though it's full of ones it's still

364
00:12:40,480 --> 00:12:41,200
too

365
00:12:41,200 --> 00:12:43,360
a bit on the small side right so this

366
00:12:43,360 --> 00:12:44,399
bit

367
00:12:44,399 --> 00:12:45,680
in a

368
00:12:45,680 --> 00:12:47,040
sorry

369
00:12:47,040 --> 00:12:48,639
for the only way for c to be larger than

370
00:12:48,639 --> 00:12:49,519
q

371
00:12:49,519 --> 00:12:52,399
is that this bit has to be one

372
00:12:52,399 --> 00:12:53,200
okay

373
00:12:53,200 --> 00:12:54,160
so

374
00:12:54,160 --> 00:12:56,720
sorry this bit has to be zero here we go

375
00:12:56,720 --> 00:12:59,360
okay and the main point here is that you

376
00:12:59,360 --> 00:13:01,600
can do this one bit at a time

377
00:13:01,600 --> 00:13:04,800
and you will get the entire key

378
00:13:05,600 --> 00:13:06,880
so

379
00:13:06,880 --> 00:13:08,800
that's our primitive

380
00:13:08,800 --> 00:13:10,160
next question is

381
00:13:10,160 --> 00:13:11,839
how can we build one

382
00:13:11,839 --> 00:13:13,760
well i must inflict some more pain and

383
00:13:13,760 --> 00:13:16,399
suffering because if we were to build

384
00:13:16,399 --> 00:13:18,160
this primitive we need to do some crypto

385
00:13:18,160 --> 00:13:20,560
analysis and figure out why why would

386
00:13:20,560 --> 00:13:23,200
this ever work well remember we're

387
00:13:23,200 --> 00:13:25,440
trying to raise c to the d mode q that's

388
00:13:25,440 --> 00:13:27,120
the decryption procedure

389
00:13:27,120 --> 00:13:28,959
and because these are big numbers these

390
00:13:28,959 --> 00:13:32,160
are 40 000 2048 bit numbers we cannot do

391
00:13:32,160 --> 00:13:33,839
it in hardware instead we do it in

392
00:13:33,839 --> 00:13:35,200
software

393
00:13:35,200 --> 00:13:36,880
okay so now there is a there is an

394
00:13:36,880 --> 00:13:39,600
exponentiation algorithm to compute c to

395
00:13:39,600 --> 00:13:41,360
the d mode q

396
00:13:41,360 --> 00:13:43,600
well the problem is that to do

397
00:13:43,600 --> 00:13:45,600
exponentiations you need to do a whole

398
00:13:45,600 --> 00:13:48,000
pile of mathematical multiplications so

399
00:13:48,000 --> 00:13:50,000
now we get really really deep into how

400
00:13:50,000 --> 00:13:51,680
do you multiply two numbers on a

401
00:13:51,680 --> 00:13:54,160
computer and there is again in software

402
00:13:54,160 --> 00:13:55,920
because the numbers are large

403
00:13:55,920 --> 00:13:57,839
and there is a way to do it it's called

404
00:13:57,839 --> 00:14:00,240
karatsu uh super multiplication after

405
00:14:00,240 --> 00:14:03,120
alexey alekseyev kawatsuba boring as

406
00:14:03,120 --> 00:14:04,399
hell

407
00:14:04,399 --> 00:14:06,560
okay and if this wasn't boring enough

408
00:14:06,560 --> 00:14:07,839
i'm not going to inflict you with more

409
00:14:07,839 --> 00:14:10,240
boring details okay all you need to know

410
00:14:10,240 --> 00:14:11,839
about that algorithm is that it is

411
00:14:11,839 --> 00:14:13,120
recursive

412
00:14:13,120 --> 00:14:14,959
okay like any good recursion it has a

413
00:14:14,959 --> 00:14:16,480
base case

414
00:14:16,480 --> 00:14:18,480
and in that base case well how do you

415
00:14:18,480 --> 00:14:21,279
multiply two numbers naive okay well

416
00:14:21,279 --> 00:14:24,959
take x and y chop y into 32-bit words

417
00:14:24,959 --> 00:14:27,040
and for every word of y multiply it by

418
00:14:27,040 --> 00:14:29,760
over fix sum it up just like a screw

419
00:14:29,760 --> 00:14:32,000
multiplication and be happy about it

420
00:14:32,000 --> 00:14:35,040
okay except some smart programmer

421
00:14:35,040 --> 00:14:36,639
figured at some point that we can

422
00:14:36,639 --> 00:14:38,560
improve performance by figuring out some

423
00:14:38,560 --> 00:14:40,639
corner cases and one of them is that if

424
00:14:40,639 --> 00:14:42,800
the current word is zero there is no

425
00:14:42,800 --> 00:14:45,120
point in doing the multiplication

426
00:14:45,120 --> 00:14:47,040
okay the output is going to be zero

427
00:14:47,040 --> 00:14:50,560
anyway who cares right keep going

428
00:14:50,560 --> 00:14:52,880
well this is my one and only warning to

429
00:14:52,880 --> 00:14:54,720
all of you if you have something like

430
00:14:54,720 --> 00:14:56,160
this in your code for all of you that

431
00:14:56,160 --> 00:14:58,160
are writing security code well i'm

432
00:14:58,160 --> 00:14:59,519
coming after you because i'm a

433
00:14:59,519 --> 00:15:01,760
cryptographer and trust me i know how to

434
00:15:01,760 --> 00:15:04,160
play with math to hit this if

435
00:15:04,160 --> 00:15:04,959
okay

436
00:15:04,959 --> 00:15:07,440
so just to set up some numbers this

437
00:15:07,440 --> 00:15:09,920
blue code is gonna run seven times

438
00:15:09,920 --> 00:15:11,920
the purple code is gonna run nine times

439
00:15:11,920 --> 00:15:15,279
and the yellow code runs 2048 times once

440
00:15:15,279 --> 00:15:18,320
for every bit of d and if these numbers

441
00:15:18,320 --> 00:15:20,560
look scary well they add up pretty

442
00:15:20,560 --> 00:15:21,519
quickly

443
00:15:21,519 --> 00:15:26,320
this if gets hit 129 000 times okay

444
00:15:26,320 --> 00:15:28,240
during the run of the algorithm which

445
00:15:28,240 --> 00:15:30,959
means half a second of measurement

446
00:15:30,959 --> 00:15:33,440
of on that if okay that's the

447
00:15:33,440 --> 00:15:35,120
amplification component

448
00:15:35,120 --> 00:15:37,199
so now again being a board academic that

449
00:15:37,199 --> 00:15:40,160
is good at math my job is to craft

450
00:15:40,160 --> 00:15:42,560
suitable inputs that have the following

451
00:15:42,560 --> 00:15:44,560
property if the bit i want to extract is

452
00:15:44,560 --> 00:15:46,800
one which i don't know ahead of time but

453
00:15:46,800 --> 00:15:49,680
if it is one then all of this y would be

454
00:15:49,680 --> 00:15:52,959
full of zeros and therefore a will

455
00:15:52,959 --> 00:15:55,759
always be taken and if the bit is 0 then

456
00:15:55,759 --> 00:15:57,920
this y would be full of non-zeros and

457
00:15:57,920 --> 00:15:59,839
therefore the if would be almost never

458
00:15:59,839 --> 00:16:02,720
taken i can craft you in an input c a

459
00:16:02,720 --> 00:16:04,880
ciphertext c that looks just like that

460
00:16:04,880 --> 00:16:07,519
because i'm good at math okay and once i

461
00:16:07,519 --> 00:16:09,279
fit this cipher text into this entire

462
00:16:09,279 --> 00:16:12,399
shebang guess what i will be getting

463
00:16:12,399 --> 00:16:14,560
my favorite blue box out there and this

464
00:16:14,560 --> 00:16:17,360
is why this needs to end with once

465
00:16:17,360 --> 00:16:18,399
okay

466
00:16:18,399 --> 00:16:19,360
and now

467
00:16:19,360 --> 00:16:21,360
just to show you that this actually

468
00:16:21,360 --> 00:16:22,560
works

469
00:16:22,560 --> 00:16:24,639
okay and not a theoretical threat let's

470
00:16:24,639 --> 00:16:27,360
try doing this live and again may the

471
00:16:27,360 --> 00:16:29,680
demo gods be with me you're gonna see a

472
00:16:29,680 --> 00:16:31,199
series of lines

473
00:16:31,199 --> 00:16:33,199
when these lines come close together the

474
00:16:33,199 --> 00:16:35,360
bit is zero when these lines go further

475
00:16:35,360 --> 00:16:37,600
apart the bit is one okay and we're

476
00:16:37,600 --> 00:16:39,600
going to extract the the key one bit at

477
00:16:39,600 --> 00:16:41,839
a time

478
00:16:42,399 --> 00:16:44,639
okay still stable still alive that's

479
00:16:44,639 --> 00:16:48,199
that's always good

480
00:16:53,199 --> 00:16:54,800
so

481
00:16:54,800 --> 00:16:58,800
one one one zero zero zero one zero zero

482
00:16:58,800 --> 00:17:01,920
zero one one zero anybody writing this

483
00:17:01,920 --> 00:17:03,360
down there's gonna be a pop quiz at the

484
00:17:03,360 --> 00:17:04,480
end

485
00:17:04,480 --> 00:17:07,039
there's a pop quiz at the end of this

486
00:17:07,039 --> 00:17:08,880
okay your next coffee is contingent on

487
00:17:08,880 --> 00:17:10,160
recovering the key

488
00:17:10,160 --> 00:17:11,359
okay

489
00:17:11,359 --> 00:17:13,119
but we can clearly see the key coming

490
00:17:13,119 --> 00:17:16,959
out okay everybody seeing that

491
00:17:16,959 --> 00:17:19,280
now there is another way to run these

492
00:17:19,280 --> 00:17:20,319
attacks

493
00:17:20,319 --> 00:17:22,079
if you think that sticking microphones

494
00:17:22,079 --> 00:17:25,039
new computers is not ridiculous enough

495
00:17:25,039 --> 00:17:26,799
for the next trick i need a volunteer

496
00:17:26,799 --> 00:17:28,880
from the audience

497
00:17:28,880 --> 00:17:30,720
anybody willing to

498
00:17:30,720 --> 00:17:33,840
give up the body for science

499
00:17:36,400 --> 00:17:39,120
this won't hurt much

500
00:17:39,120 --> 00:17:41,600
okay no no go there okay

501
00:17:41,600 --> 00:17:44,480
so i need you to hold this cable with

502
00:17:44,480 --> 00:17:48,559
one hand while

503
00:17:51,520 --> 00:17:54,320
while touching this laptop on with your

504
00:17:54,320 --> 00:17:56,720
other hand

505
00:17:57,600 --> 00:18:01,360
no grab it come on

506
00:18:01,360 --> 00:18:02,080
good

507
00:18:02,080 --> 00:18:04,000
and now what's your name ken and now we

508
00:18:04,000 --> 00:18:05,039
have ken

509
00:18:05,039 --> 00:18:07,600
grab the thing

510
00:18:07,600 --> 00:18:09,679
and now we have ken sacrificing his body

511
00:18:09,679 --> 00:18:12,160
to science acting as an antenna

512
00:18:12,160 --> 00:18:14,960
and we can get the key through cat okay

513
00:18:14,960 --> 00:18:16,880
why because you're a good conductor and

514
00:18:16,880 --> 00:18:18,559
you see the signal is there it's

515
00:18:18,559 --> 00:18:20,640
actually quite clear and while ken is

516
00:18:20,640 --> 00:18:22,799
being slowly electrocuted here

517
00:18:22,799 --> 00:18:25,520
okay this actually does work right so

518
00:18:25,520 --> 00:18:27,360
when putting microphones near computers

519
00:18:27,360 --> 00:18:28,559
is not good enough just reach out and

520
00:18:28,559 --> 00:18:30,240
touch somebody i heard that this is now

521
00:18:30,240 --> 00:18:31,760
appropriate because we are no longer

522
00:18:31,760 --> 00:18:33,120
social distancing

523
00:18:33,120 --> 00:18:35,679
okay right thank you ken

524
00:18:35,679 --> 00:18:39,240
hope it didn't hurt

525
00:18:39,360 --> 00:18:42,080
[Applause]

526
00:18:42,080 --> 00:18:44,640
so this is how you have fun with other

527
00:18:44,640 --> 00:18:46,720
people's laptops you can do it from one

528
00:18:46,720 --> 00:18:50,160
meter away using a regular microphone or

529
00:18:50,160 --> 00:18:52,320
you can do it from 10 meter away using a

530
00:18:52,320 --> 00:18:53,840
parabolic reflector if you stick your

531
00:18:53,840 --> 00:18:55,840
microphone inside a parabolic reflector

532
00:18:55,840 --> 00:18:57,919
i highly recommend you do that

533
00:18:57,919 --> 00:19:00,480
it works works actually pretty nice but

534
00:19:00,480 --> 00:19:02,480
if you try traveling with something like

535
00:19:02,480 --> 00:19:04,720
that to an airport well guess what

536
00:19:04,720 --> 00:19:07,120
you're going to meet some friends

537
00:19:07,120 --> 00:19:10,000
okay and after doing that a few times

538
00:19:10,000 --> 00:19:12,160
there is also a mobile app version of

539
00:19:12,160 --> 00:19:13,039
this

540
00:19:13,039 --> 00:19:15,120
with just a commodity lab

541
00:19:15,120 --> 00:19:16,880
crappy phone microphone that can get it

542
00:19:16,880 --> 00:19:19,440
from 30 meters 30 centimeters away and

543
00:19:19,440 --> 00:19:20,240
no

544
00:19:20,240 --> 00:19:22,400
friendly pet downs

545
00:19:22,400 --> 00:19:24,720
by these people okay

546
00:19:24,720 --> 00:19:26,160
or you can just reach out and touch

547
00:19:26,160 --> 00:19:27,919
somebody and and and make the world a

548
00:19:27,919 --> 00:19:29,679
better place all right so that's what i

549
00:19:29,679 --> 00:19:31,039
have now i'm going to transfer over to

550
00:19:31,039 --> 00:19:32,640
roy who is going to show you how to do

551
00:19:32,640 --> 00:19:34,960
all these attacks across the internet in

552
00:19:34,960 --> 00:19:37,200
this in a socially distant appropriate

553
00:19:37,200 --> 00:19:38,400
environment

554
00:19:38,400 --> 00:19:39,679
okay

555
00:19:39,679 --> 00:19:41,600
so that's yours you also need to hold

556
00:19:41,600 --> 00:19:43,840
that

557
00:19:43,919 --> 00:19:46,240
okay is this working good

558
00:19:46,240 --> 00:19:47,679
um

559
00:19:47,679 --> 00:19:48,880
great

560
00:19:48,880 --> 00:19:52,640
so physical side channels as uh daniel

561
00:19:52,640 --> 00:19:54,559
was talking about are really great

562
00:19:54,559 --> 00:19:56,320
because they don't need you don't need

563
00:19:56,320 --> 00:19:57,840
to execute any code on the target all

564
00:19:57,840 --> 00:19:59,520
you need to do is measure it from a

565
00:19:59,520 --> 00:20:01,120
distance or even you know touch the

566
00:20:01,120 --> 00:20:02,080
machine

567
00:20:02,080 --> 00:20:04,960
and uh and then you extract traces and

568
00:20:04,960 --> 00:20:06,960
extract keys which is awesome

569
00:20:06,960 --> 00:20:09,039
uh but uh

570
00:20:09,039 --> 00:20:11,120
well they do require you to actually be

571
00:20:11,120 --> 00:20:13,120
somewhat close to the target even if you

572
00:20:13,120 --> 00:20:14,960
have this parabolic this fancy parabolic

573
00:20:14,960 --> 00:20:16,480
dish you still have to be like 20 meters

574
00:20:16,480 --> 00:20:20,000
away which is a major limitation as we

575
00:20:20,000 --> 00:20:21,919
have perceived physical side channels so

576
00:20:21,919 --> 00:20:25,200
far um and this this work that we're uh

577
00:20:25,200 --> 00:20:27,039
presenting now is going to challenge

578
00:20:27,039 --> 00:20:28,480
that assumption

579
00:20:28,480 --> 00:20:30,240
uh and basically we're going to show you

580
00:20:30,240 --> 00:20:32,320
today physical side channels that can be

581
00:20:32,320 --> 00:20:34,559
conducted completely remotely from

582
00:20:34,559 --> 00:20:36,880
across the ocean or across the world or

583
00:20:36,880 --> 00:20:38,400
whatever you want

584
00:20:38,400 --> 00:20:40,559
how are we going to do that so we can

585
00:20:40,559 --> 00:20:42,799
leverage the fact that um

586
00:20:42,799 --> 00:20:45,360
modern laptops come with this very very

587
00:20:45,360 --> 00:20:48,320
familiar microphone well familiar to all

588
00:20:48,320 --> 00:20:49,840
of you i hope

589
00:20:49,840 --> 00:20:51,200
by now

590
00:20:51,200 --> 00:20:54,400
and uh this microphone is under the hood

591
00:20:54,400 --> 00:20:56,400
connected to a sound card

592
00:20:56,400 --> 00:20:58,159
and uh

593
00:20:58,159 --> 00:21:00,559
the it's connected to a sound card over

594
00:21:00,559 --> 00:21:04,159
a motherboard that also contains the cpu

595
00:21:04,159 --> 00:21:05,840
uh and

596
00:21:05,840 --> 00:21:08,559
this picture this cartoon is kind of

597
00:21:08,559 --> 00:21:11,679
reminiscent of uh one of the setups that

598
00:21:11,679 --> 00:21:13,600
danielle had a picture of in one of the

599
00:21:13,600 --> 00:21:15,280
first slides and that's not a

600
00:21:15,280 --> 00:21:16,480
coincidence

601
00:21:16,480 --> 00:21:18,240
because actually this microphone can be

602
00:21:18,240 --> 00:21:20,880
used as a great em probe

603
00:21:20,880 --> 00:21:24,640
and it can uh well we hope we'll see but

604
00:21:24,640 --> 00:21:27,600
we hope that it can also measure um uh

605
00:21:27,600 --> 00:21:32,320
emanations from your cpu um and

606
00:21:32,320 --> 00:21:33,919
basically whatever whenever the sound

607
00:21:33,919 --> 00:21:36,240
card is on then maybe you are recording

608
00:21:36,240 --> 00:21:37,360
um

609
00:21:37,360 --> 00:21:40,159
your cpus operation as well as whatever

610
00:21:40,159 --> 00:21:42,400
audio you are actually like your speech

611
00:21:42,400 --> 00:21:43,520
or whatever

612
00:21:43,520 --> 00:21:44,799
um

613
00:21:44,799 --> 00:21:45,679
yes

614
00:21:45,679 --> 00:21:46,559
uh

615
00:21:46,559 --> 00:21:47,679
and

616
00:21:47,679 --> 00:21:50,880
uh more than that uh we've all become

617
00:21:50,880 --> 00:21:53,760
pretty acquainted with uh uh voice over

618
00:21:53,760 --> 00:21:55,840
ip applications where we're conversing

619
00:21:55,840 --> 00:21:57,600
with our colleagues and friends and

620
00:21:57,600 --> 00:22:00,080
whenever we're doing that then we're

621
00:22:00,080 --> 00:22:02,559
voluntarily transmitting this audio uh

622
00:22:02,559 --> 00:22:04,480
this signal picked up by the sound card

623
00:22:04,480 --> 00:22:08,240
that might contain uh leakage from cpus

624
00:22:08,240 --> 00:22:11,039
uh to the whatever remote parties where

625
00:22:11,039 --> 00:22:12,480
were online with

626
00:22:12,480 --> 00:22:14,880
uh right

627
00:22:14,880 --> 00:22:17,039
and uh okay now i'm gonna show you a

628
00:22:17,039 --> 00:22:19,120
quick demo

629
00:22:19,120 --> 00:22:20,159
uh

630
00:22:20,159 --> 00:22:21,090
daniel where's the

631
00:22:21,090 --> 00:22:24,189
[Music]

632
00:22:24,720 --> 00:22:28,159
kvm thing oh okay

633
00:22:28,720 --> 00:22:31,520
okay so this is going to be very similar

634
00:22:31,520 --> 00:22:32,559
to

635
00:22:32,559 --> 00:22:35,760
uh the uh spectrogram that daniel showed

636
00:22:35,760 --> 00:22:36,880
you

637
00:22:36,880 --> 00:22:38,880
except the one difference is that these

638
00:22:38,880 --> 00:22:41,120
two computers this one and this one are

639
00:22:41,120 --> 00:22:43,520
just uh connected over a voiceover ip

640
00:22:43,520 --> 00:22:45,360
software called mumble

641
00:22:45,360 --> 00:22:47,679
and uh i'm gonna i'm running on this

642
00:22:47,679 --> 00:22:50,240
machine i'm running the the program that

643
00:22:50,240 --> 00:22:51,360
does some

644
00:22:51,360 --> 00:22:52,080
uh

645
00:22:52,080 --> 00:22:53,440
cycles of

646
00:22:53,440 --> 00:22:54,960
uh

647
00:22:54,960 --> 00:22:56,960
cpu heavy activity then memory heavy

648
00:22:56,960 --> 00:22:58,559
activity than sleeping and you can see

649
00:22:58,559 --> 00:23:01,200
these cycles in the in the spectrogram

650
00:23:01,200 --> 00:23:03,360
uh signal picked up on the other end of

651
00:23:03,360 --> 00:23:06,000
the uh voiceover ip call

652
00:23:06,000 --> 00:23:06,880
um

653
00:23:06,880 --> 00:23:09,840
and i'm gonna go back

654
00:23:11,120 --> 00:23:13,439
okay

655
00:23:15,280 --> 00:23:16,720
so

656
00:23:16,720 --> 00:23:18,480
that was

657
00:23:18,480 --> 00:23:22,000
this demo now we experimented on various

658
00:23:22,000 --> 00:23:24,880
machines this happens all across any

659
00:23:24,880 --> 00:23:27,679
laptop we've ever uh tried to

660
00:23:27,679 --> 00:23:28,880
to measure

661
00:23:28,880 --> 00:23:30,159
um

662
00:23:30,159 --> 00:23:31,919
and uh and

663
00:23:31,919 --> 00:23:35,360
we saw that this leakage from the cpu of

664
00:23:35,360 --> 00:23:37,520
the remote computer over a voice over rp

665
00:23:37,520 --> 00:23:40,880
call happens across any common voice

666
00:23:40,880 --> 00:23:42,480
over epi software you're going to use so

667
00:23:42,480 --> 00:23:43,440
the

668
00:23:43,440 --> 00:23:45,760
codecs that are usually lossy that these

669
00:23:45,760 --> 00:23:48,240
softwares employ don't eliminate this

670
00:23:48,240 --> 00:23:49,360
leakage

671
00:23:49,360 --> 00:23:51,679
uh fortunately for us

672
00:23:51,679 --> 00:23:53,919
and now we're going to use this to

673
00:23:53,919 --> 00:23:56,159
actually do something we're going to use

674
00:23:56,159 --> 00:23:58,960
this to actually identify a website

675
00:23:58,960 --> 00:24:01,760
but for that i will need a second to

676
00:24:01,760 --> 00:24:05,640
start another demo

677
00:24:10,400 --> 00:24:12,559
and this is the last demo

678
00:24:12,559 --> 00:24:14,240
for today so

679
00:24:14,240 --> 00:24:18,600
hopefully it works um

680
00:24:20,159 --> 00:24:22,000
okay i started it it's going to take a

681
00:24:22,000 --> 00:24:23,520
few seconds to run while it's running

682
00:24:23,520 --> 00:24:25,279
i'm going to explain what's happening

683
00:24:25,279 --> 00:24:26,559
so um

684
00:24:26,559 --> 00:24:28,080
this computer

685
00:24:28,080 --> 00:24:30,480
is going to visit a couple of websites

686
00:24:30,480 --> 00:24:32,400
google and youtube

687
00:24:32,400 --> 00:24:35,120
while it is again on a voiceover call

688
00:24:35,120 --> 00:24:37,279
with this computer

689
00:24:37,279 --> 00:24:38,320
and

690
00:24:38,320 --> 00:24:40,480
this this attacker computer is going to

691
00:24:40,480 --> 00:24:41,760
measure it

692
00:24:41,760 --> 00:24:43,840
so this is what's happening

693
00:24:43,840 --> 00:24:45,039
and then

694
00:24:45,039 --> 00:24:47,440
in our paper we show that the attacker

695
00:24:47,440 --> 00:24:49,520
can use like fancy neural networks to

696
00:24:49,520 --> 00:24:52,400
infer which uh which um

697
00:24:52,400 --> 00:24:54,640
website the victim computer is visiting

698
00:24:54,640 --> 00:24:56,559
but here we're only going to visit two

699
00:24:56,559 --> 00:24:59,279
websites and we're going to show the the

700
00:24:59,279 --> 00:25:01,760
some visual differences between them uh

701
00:25:01,760 --> 00:25:04,320
that are uh that are just you you can

702
00:25:04,320 --> 00:25:06,000
just see them on the

703
00:25:06,000 --> 00:25:08,240
uh attacker's computer

704
00:25:08,240 --> 00:25:09,039
um

705
00:25:09,039 --> 00:25:10,480
again using convolutional neural

706
00:25:10,480 --> 00:25:13,200
networks we were able to achieve uh 94

707
00:25:13,200 --> 00:25:15,600
accuracy for 14 way classification there

708
00:25:15,600 --> 00:25:17,279
is some deeper characterization of this

709
00:25:17,279 --> 00:25:18,880
number in our paper

710
00:25:18,880 --> 00:25:19,760
um

711
00:25:19,760 --> 00:25:22,320
but yeah it's it's pretty nice

712
00:25:22,320 --> 00:25:23,279
and

713
00:25:23,279 --> 00:25:27,799
this is still not done i think

714
00:25:33,440 --> 00:25:35,360
okay right in time

715
00:25:35,360 --> 00:25:37,360
so these are the signals you can see

716
00:25:37,360 --> 00:25:39,600
that there are differences what you

717
00:25:39,600 --> 00:25:41,600
can't see here is that well they were

718
00:25:41,600 --> 00:25:43,279
treated the same way but they look

719
00:25:43,279 --> 00:25:45,520
different uh what you uh what you can

720
00:25:45,520 --> 00:25:47,440
see here is that if i did this multiple

721
00:25:47,440 --> 00:25:50,720
times then the this the trace that was

722
00:25:50,720 --> 00:25:52,640
recorded while the victim was visiting

723
00:25:52,640 --> 00:25:54,240
google is

724
00:25:54,240 --> 00:25:56,960
going to be similar to across multiple

725
00:25:56,960 --> 00:25:58,080
runs

726
00:25:58,080 --> 00:26:00,000
whereas it's going to be different from

727
00:26:00,000 --> 00:26:02,159
the trace that is recorded while the

728
00:26:02,159 --> 00:26:04,400
victim is visiting youtube so that is

729
00:26:04,400 --> 00:26:06,000
what we can use to distinguish between

730
00:26:06,000 --> 00:26:08,159
the two

731
00:26:08,159 --> 00:26:10,640
and sometimes it won't be visually

732
00:26:10,640 --> 00:26:12,640
different but the neural network can

733
00:26:12,640 --> 00:26:15,520
also can can overcome that or it can

734
00:26:15,520 --> 00:26:17,840
detect differences that we can't

735
00:26:17,840 --> 00:26:19,120
with our eyes

736
00:26:19,120 --> 00:26:20,159
um

737
00:26:20,159 --> 00:26:21,440
and now i'm going to talk about key

738
00:26:21,440 --> 00:26:24,400
extraction because that is even uh even

739
00:26:24,400 --> 00:26:26,880
more dangerous right so here again we

740
00:26:26,880 --> 00:26:28,320
have the same setup where there's a

741
00:26:28,320 --> 00:26:29,840
victim and there's an attacker the

742
00:26:29,840 --> 00:26:31,840
victim is talking to an attacker over

743
00:26:31,840 --> 00:26:34,240
some voiceover software um and the

744
00:26:34,240 --> 00:26:35,520
attacker is going to use some fancy

745
00:26:35,520 --> 00:26:37,600
machinery and the victim is also signing

746
00:26:37,600 --> 00:26:39,039
uh uh

747
00:26:39,039 --> 00:26:40,400
signing cryptographically signing

748
00:26:40,400 --> 00:26:43,679
messages while they are um on the chat

749
00:26:43,679 --> 00:26:45,200
with the attacker and that the attacker

750
00:26:45,200 --> 00:26:46,720
is going to use some fancy machinery to

751
00:26:46,720 --> 00:26:48,080
extract the key

752
00:26:48,080 --> 00:26:50,159
here we're going to strike the ecd seiki

753
00:26:50,159 --> 00:26:52,320
ecdsa has a key generation signing

754
00:26:52,320 --> 00:26:55,039
operation and verification

755
00:26:55,039 --> 00:26:58,400
and uh the signing has this uh

756
00:26:58,400 --> 00:27:00,880
interesting part where there is a scalar

757
00:27:00,880 --> 00:27:02,720
by point multiplication

758
00:27:02,720 --> 00:27:03,600
um

759
00:27:03,600 --> 00:27:06,400
where the scalar is a random nonce

760
00:27:06,400 --> 00:27:07,840
that's supposed to be secret it's

761
00:27:07,840 --> 00:27:09,679
supposed to be kept secret so since it's

762
00:27:09,679 --> 00:27:11,039
supposed to be kept secret it has a

763
00:27:11,039 --> 00:27:13,120
constant time um

764
00:27:13,120 --> 00:27:16,000
the implementation however

765
00:27:16,000 --> 00:27:21,840
um as the i think the minerva people

766
00:27:21,919 --> 00:27:23,039
exposed

767
00:27:23,039 --> 00:27:25,440
uh in 2020

768
00:27:25,440 --> 00:27:26,880
this constant time implementation

769
00:27:26,880 --> 00:27:29,840
actually has a bug what does this bug do

770
00:27:29,840 --> 00:27:31,200
internally

771
00:27:31,200 --> 00:27:32,640
the it's just

772
00:27:32,640 --> 00:27:34,240
the multiplication is implemented with

773
00:27:34,240 --> 00:27:37,120
some sort of loop and the loop skips any

774
00:27:37,120 --> 00:27:40,080
leading zeros in the random nouns since

775
00:27:40,080 --> 00:27:42,240
there is a since it skips leading zeros

776
00:27:42,240 --> 00:27:44,080
we have a linear correspondence between

777
00:27:44,080 --> 00:27:46,640
the number of leading zeros and the time

778
00:27:46,640 --> 00:27:48,880
that the algorithm takes to run

779
00:27:48,880 --> 00:27:50,880
um because every other iteration is of

780
00:27:50,880 --> 00:27:52,640
course constant time

781
00:27:52,640 --> 00:27:53,440
um

782
00:27:53,440 --> 00:27:54,960
and now we're going to do some signal

783
00:27:54,960 --> 00:27:56,960
processing um

784
00:27:56,960 --> 00:27:58,240
so

785
00:27:58,240 --> 00:28:01,440
the our attacker can extract the trace

786
00:28:01,440 --> 00:28:03,679
transform it to the time domain then

787
00:28:03,679 --> 00:28:05,520
run a band pass in amd modulation and

788
00:28:05,520 --> 00:28:07,279
then we get this valley

789
00:28:07,279 --> 00:28:08,559
in the signal

790
00:28:08,559 --> 00:28:10,480
where

791
00:28:10,480 --> 00:28:12,720
where the duration of the valley

792
00:28:12,720 --> 00:28:15,440
corresponds roughly and noisily very

793
00:28:15,440 --> 00:28:18,320
nicely to uh the time that it takes to

794
00:28:18,320 --> 00:28:20,640
sign to sorry to the time that it takes

795
00:28:20,640 --> 00:28:22,880
to do the multiplication

796
00:28:22,880 --> 00:28:26,080
and now uh how can we use this so

797
00:28:26,080 --> 00:28:28,320
um

798
00:28:28,320 --> 00:28:32,320
we are going to use uh rfc 6979 version

799
00:28:32,320 --> 00:28:35,360
of ecdsa where um

800
00:28:35,360 --> 00:28:36,240
where

801
00:28:36,240 --> 00:28:38,240
nonces are derived deterministically

802
00:28:38,240 --> 00:28:40,080
from a key and a message

803
00:28:40,080 --> 00:28:42,320
and

804
00:28:42,320 --> 00:28:44,640
this is going to allow us to

805
00:28:44,640 --> 00:28:46,480
basically if we group traces by message

806
00:28:46,480 --> 00:28:49,440
and then uh we can

807
00:28:49,440 --> 00:28:51,440
run the same sign the same message

808
00:28:51,440 --> 00:28:52,799
multiple times

809
00:28:52,799 --> 00:28:56,080
um we will get the same nonce and we

810
00:28:56,080 --> 00:28:58,320
will be able to average out the noise

811
00:28:58,320 --> 00:29:00,720
and reject some outliers and get pretty

812
00:29:00,720 --> 00:29:01,600
good

813
00:29:01,600 --> 00:29:04,159
indication of whether or not of the

814
00:29:04,159 --> 00:29:06,799
number of leading zeros in the nonce

815
00:29:06,799 --> 00:29:09,520
that corresponds to this message

816
00:29:09,520 --> 00:29:11,120
and

817
00:29:11,120 --> 00:29:13,600
then what we're really looking for here

818
00:29:13,600 --> 00:29:16,320
is we're looking to get enough

819
00:29:16,320 --> 00:29:18,480
uh enough

820
00:29:18,480 --> 00:29:19,520
messages

821
00:29:19,520 --> 00:29:20,880
signed messages

822
00:29:20,880 --> 00:29:21,679
with

823
00:29:21,679 --> 00:29:25,200
um that we know that have sufficiently

824
00:29:25,200 --> 00:29:26,960
um

825
00:29:26,960 --> 00:29:27,919
few

826
00:29:27,919 --> 00:29:30,320
sorry sufficiently many leading zeros

827
00:29:30,320 --> 00:29:32,240
once we have that we have enough uh

828
00:29:32,240 --> 00:29:34,559
nonces or enough side messages with

829
00:29:34,559 --> 00:29:36,559
nonsense that we have enough bits that

830
00:29:36,559 --> 00:29:37,760
we know

831
00:29:37,760 --> 00:29:39,520
and that is sufficient to run the

832
00:29:39,520 --> 00:29:41,279
lattice attack which is the fancy

833
00:29:41,279 --> 00:29:42,880
machinery i'm not going to talk about of

834
00:29:42,880 --> 00:29:44,799
albrecht and henninger

835
00:29:44,799 --> 00:29:47,919
and we were able to extract the key from

836
00:29:47,919 --> 00:29:50,240
traces of 20 000 signed messages each

837
00:29:50,240 --> 00:29:52,320
repeated 91 times so

838
00:29:52,320 --> 00:29:54,159
the key extraction itself takes about 20

839
00:29:54,159 --> 00:29:55,760
minutes but of course signing this these

840
00:29:55,760 --> 00:29:58,000
messages and recording them takes uh

841
00:29:58,000 --> 00:30:00,159
longer than that um

842
00:30:00,159 --> 00:30:02,240
and now the for the last thing i'm going

843
00:30:02,240 --> 00:30:04,320
to show you uh our killer app so to

844
00:30:04,320 --> 00:30:06,960
speak um it's so it's an attack on

845
00:30:06,960 --> 00:30:09,039
counter-strike which

846
00:30:09,039 --> 00:30:11,360
is a game which arguably uh people are

847
00:30:11,360 --> 00:30:14,320
very motivated to to cheat in because uh

848
00:30:14,320 --> 00:30:16,000
it could be considered a textbook

849
00:30:16,000 --> 00:30:17,679
example of an esport

850
00:30:17,679 --> 00:30:19,440
uh where it's pretty played in

851
00:30:19,440 --> 00:30:21,360
orchestrated leagues and there's like

852
00:30:21,360 --> 00:30:23,679
large prizes and people some people take

853
00:30:23,679 --> 00:30:24,960
it take counter strike very very

854
00:30:24,960 --> 00:30:28,640
seriously um and uh uh in counter-strike

855
00:30:28,640 --> 00:30:30,320
again we have the setup where we have a

856
00:30:30,320 --> 00:30:32,159
victim and they're on a voiceover ep

857
00:30:32,159 --> 00:30:33,840
call with the attacker

858
00:30:33,840 --> 00:30:35,919
uh they're playing against each other

859
00:30:35,919 --> 00:30:37,279
and this is actually reasonable if

860
00:30:37,279 --> 00:30:38,720
you're playing a one-on-one game that

861
00:30:38,720 --> 00:30:41,200
you would have a a chat with your with

862
00:30:41,200 --> 00:30:44,799
your opponent um and uh what's happening

863
00:30:44,799 --> 00:30:46,880
in counter-strike is that it's a sort of

864
00:30:46,880 --> 00:30:48,960
a game this this is a little too dark

865
00:30:48,960 --> 00:30:52,399
but uh for this projector but um there

866
00:30:52,399 --> 00:30:54,320
are this is a truck and this is like an

867
00:30:54,320 --> 00:30:56,640
attacker and a victim and so it's a game

868
00:30:56,640 --> 00:30:58,480
where there's multiple objects and

869
00:30:58,480 --> 00:31:00,559
things you can hide behind and the

870
00:31:00,559 --> 00:31:02,480
it's a first person shooter game where

871
00:31:02,480 --> 00:31:03,760
the goal is to

872
00:31:03,760 --> 00:31:05,679
find and kill your opponent

873
00:31:05,679 --> 00:31:08,640
um so our attacker will want to know

874
00:31:08,640 --> 00:31:10,559
where the opponent is and how can they

875
00:31:10,559 --> 00:31:11,679
do that

876
00:31:11,679 --> 00:31:12,640
uh

877
00:31:12,640 --> 00:31:14,880
well apparently

878
00:31:14,880 --> 00:31:16,480
for because of the way counter-strike is

879
00:31:16,480 --> 00:31:17,919
implemented

880
00:31:17,919 --> 00:31:20,640
whenever the attacker is close to the

881
00:31:20,640 --> 00:31:22,960
victim for some definition of the word

882
00:31:22,960 --> 00:31:24,960
close

883
00:31:24,960 --> 00:31:27,360
the victim's machine is actually

884
00:31:27,360 --> 00:31:30,320
rendering the attacker's avatar

885
00:31:30,320 --> 00:31:32,240
and the attacker can pick up on that

886
00:31:32,240 --> 00:31:34,320
because they are on a voice over epic

887
00:31:34,320 --> 00:31:36,320
call with them and there is this leakage

888
00:31:36,320 --> 00:31:37,679
from the cpu

889
00:31:37,679 --> 00:31:38,880
so

890
00:31:38,880 --> 00:31:40,720
uh what the attacker is gonna do is

891
00:31:40,720 --> 00:31:42,640
there we're gonna see it in this not

892
00:31:42,640 --> 00:31:44,640
demo with video

893
00:31:44,640 --> 00:31:46,559
so if the attacker is in this sort of a

894
00:31:46,559 --> 00:31:47,440
truck

895
00:31:47,440 --> 00:31:50,080
and whenever they're gonna move from

896
00:31:50,080 --> 00:31:52,559
right to left inside the truck

897
00:31:52,559 --> 00:31:54,399
whenever they're moving right they see

898
00:31:54,399 --> 00:31:56,000
this zebra pattern

899
00:31:56,000 --> 00:31:58,640
uh on the on in their signal which

900
00:31:58,640 --> 00:32:00,960
corresponds to the victim rendering the

901
00:32:00,960 --> 00:32:03,600
the attacker's avatar so by just moving

902
00:32:03,600 --> 00:32:05,039
closer to the victim the attacker can

903
00:32:05,039 --> 00:32:05,919
see

904
00:32:05,919 --> 00:32:07,760
where the victim is

905
00:32:07,760 --> 00:32:09,279
and uh

906
00:32:09,279 --> 00:32:10,559
even though the victim is hiding the

907
00:32:10,559 --> 00:32:12,159
attacker now knows that the victim is on

908
00:32:12,159 --> 00:32:13,679
the right hand side of the truck and

909
00:32:13,679 --> 00:32:15,360
they're going to exit the truck and

910
00:32:15,360 --> 00:32:18,399
flank them and destroy them

911
00:32:18,399 --> 00:32:20,159
and

912
00:32:20,159 --> 00:32:21,200
yeah

913
00:32:21,200 --> 00:32:22,960
with this we're going to conclude our

914
00:32:22,960 --> 00:32:24,720
talk

915
00:32:24,720 --> 00:32:27,279
and i highly encourage you to check out

916
00:32:27,279 --> 00:32:30,410
our paper and we'll take questions now

917
00:32:30,410 --> 00:32:37,120
[Applause]

918
00:32:37,120 --> 00:32:39,760
questions ok

919
00:32:39,760 --> 00:32:42,760
ok

920
00:32:44,080 --> 00:32:47,760
uh so first off this is insanely cool i

921
00:32:47,760 --> 00:32:49,679
i can't even express how cool this is

922
00:32:49,679 --> 00:32:50,640
but

923
00:32:50,640 --> 00:32:52,480
as we look at you know modern computing

924
00:32:52,480 --> 00:32:54,080
and where we're going in the future i

925
00:32:54,080 --> 00:32:57,039
mean noise is just part of daily life i

926
00:32:57,039 --> 00:32:57,679
mean

927
00:32:57,679 --> 00:33:00,399
how would somebody defend or or a

928
00:33:00,399 --> 00:33:03,039
manufacturer defend against this

929
00:33:03,039 --> 00:33:05,039
type of attack

930
00:33:05,039 --> 00:33:08,000
so depends on on on set modeling right

931
00:33:08,000 --> 00:33:09,279
if

932
00:33:09,279 --> 00:33:12,320
if if the threat model is over

933
00:33:12,320 --> 00:33:14,720
over the internet to internal coupling

934
00:33:14,720 --> 00:33:16,720
then goddammit isolate your analog

935
00:33:16,720 --> 00:33:18,720
sensors from the processor right common

936
00:33:18,720 --> 00:33:21,279
mode rejection is the thing test for it

937
00:33:21,279 --> 00:33:22,159
okay

938
00:33:22,159 --> 00:33:25,760
if the threat is from the outside well

939
00:33:25,760 --> 00:33:27,760
guards and windows and and then bark

940
00:33:27,760 --> 00:33:29,760
dogs and then everything you need to get

941
00:33:29,760 --> 00:33:31,679
to to put range

942
00:33:31,679 --> 00:33:34,799
between you and the in your attacker

943
00:33:34,799 --> 00:33:35,840
but

944
00:33:35,840 --> 00:33:37,600
although these two sound natural like

945
00:33:37,600 --> 00:33:39,200
it's no it's

946
00:33:39,200 --> 00:33:41,360
i would argue it's not the way to go the

947
00:33:41,360 --> 00:33:43,519
way to go is make sure that your

948
00:33:43,519 --> 00:33:45,440
instructions are constant time constant

949
00:33:45,440 --> 00:33:48,559
em constant cash constant everything

950
00:33:48,559 --> 00:33:50,320
highly regular

951
00:33:50,320 --> 00:33:52,960
and it's it's very hard to do but the

952
00:33:52,960 --> 00:33:54,960
side channels on computing becomes

953
00:33:54,960 --> 00:33:57,279
slowly a thing and the two

954
00:33:57,279 --> 00:33:59,360
then we need to start fighting back

955
00:33:59,360 --> 00:34:00,960
and we already have some constantine

956
00:34:00,960 --> 00:34:03,200
foundations we have

957
00:34:03,200 --> 00:34:05,919
em masking we have tools in the embedded

958
00:34:05,919 --> 00:34:07,760
industry to fight this none of them is

959
00:34:07,760 --> 00:34:08,719
applied

960
00:34:08,719 --> 00:34:10,800
it's it's there are no countermeasures

961
00:34:10,800 --> 00:34:12,879
to these things right now and that that

962
00:34:12,879 --> 00:34:16,719
would i where i would start thank you

963
00:34:17,918 --> 00:34:21,839
did you look into um

964
00:34:21,918 --> 00:34:23,760
i guess sample devices with different

965
00:34:23,760 --> 00:34:25,760
clock speeds or even other architectures

966
00:34:25,760 --> 00:34:27,679
to see if there's a significant

967
00:34:27,679 --> 00:34:30,239
variation

968
00:34:30,239 --> 00:34:31,918
uh well we had that slide where we

969
00:34:31,918 --> 00:34:33,199
showed that that

970
00:34:33,199 --> 00:34:37,280
various laptops leak uh right

971
00:34:37,280 --> 00:34:38,239
but

972
00:34:38,239 --> 00:34:40,000
like if you're trying to extract a key

973
00:34:40,000 --> 00:34:42,000
and you had you know two laptops running

974
00:34:42,000 --> 00:34:43,679
at you know pretty different clock

975
00:34:43,679 --> 00:34:45,199
speeds do you have to account for that

976
00:34:45,199 --> 00:34:47,280
in your software yes you you would have

977
00:34:47,280 --> 00:34:50,000
to well the setup is is specific for the

978
00:34:50,000 --> 00:34:52,960
laptop that we extracted the key from um

979
00:34:52,960 --> 00:34:55,599
we show that for example uh if you wanna

980
00:34:55,599 --> 00:34:57,920
well we have

981
00:34:57,920 --> 00:35:00,240
this is this is this is a this comes up

982
00:35:00,240 --> 00:35:01,920
every time we do a side channel like

983
00:35:01,920 --> 00:35:03,359
because it's always specific to the

984
00:35:03,359 --> 00:35:06,640
machine and then but we do uh have ample

985
00:35:06,640 --> 00:35:08,480
work showing that you can actually learn

986
00:35:08,480 --> 00:35:11,200
from many machines and then generalize

987
00:35:11,200 --> 00:35:13,440
to other machines you haven't seen okay

988
00:35:13,440 --> 00:35:15,920
so but it's expensive to do that because

989
00:35:15,920 --> 00:35:17,440
you actually need to experiment with a

990
00:35:17,440 --> 00:35:19,280
bunch of machines a bunch of click clock

991
00:35:19,280 --> 00:35:22,240
um uh speeds etc and have you tried on

992
00:35:22,240 --> 00:35:23,359
arm

993
00:35:23,359 --> 00:35:25,040
we have not tried that uh i haven't it

994
00:35:25,040 --> 00:35:27,440
so it depends what again right uh

995
00:35:27,440 --> 00:35:28,400
these

996
00:35:28,400 --> 00:35:30,880
so these specific two attacks works work

997
00:35:30,880 --> 00:35:33,680
well on high energy devices okay like

998
00:35:33,680 --> 00:35:36,320
think about this hundred watt cpu

999
00:35:36,320 --> 00:35:38,880
that that that has a lot of power and

1000
00:35:38,880 --> 00:35:41,119
therefore fluctuates everything okay arm

1001
00:35:41,119 --> 00:35:42,640
is not like that at least not probably

1002
00:35:42,640 --> 00:35:43,760
the arm you're thinking i don't think

1003
00:35:43,760 --> 00:35:44,880
you're talking about the server arm

1004
00:35:44,880 --> 00:35:46,400
you're talking about the phone right

1005
00:35:46,400 --> 00:35:48,640
it's designed not to be like that

1006
00:35:48,640 --> 00:35:50,000
okay so

1007
00:35:50,000 --> 00:35:52,160
those are not a good examples but em on

1008
00:35:52,160 --> 00:35:54,000
arm

1009
00:35:54,000 --> 00:35:56,240
good odm works beautifully because it's

1010
00:35:56,240 --> 00:35:58,400
also less shielded so the trade-off is a

1011
00:35:58,400 --> 00:36:00,800
bit differently okay now to

1012
00:36:00,800 --> 00:36:02,240
emphasize on roy's point and

1013
00:36:02,240 --> 00:36:03,520
generalization

1014
00:36:03,520 --> 00:36:06,240
the signals kill the random selection of

1015
00:36:06,240 --> 00:36:08,720
crap we had lying around okay and they

1016
00:36:08,720 --> 00:36:10,720
all look the same it's up to stretching

1017
00:36:10,720 --> 00:36:13,520
operations like this and like that and

1018
00:36:13,520 --> 00:36:15,040
writing algorithms that are general

1019
00:36:15,040 --> 00:36:16,800
enough to deal with any sort of

1020
00:36:16,800 --> 00:36:18,320
stretching but that's where the

1021
00:36:18,320 --> 00:36:19,520
challenge is but that's also where the

1022
00:36:19,520 --> 00:36:20,960
challenge stops

1023
00:36:20,960 --> 00:36:22,720
it's all there

1024
00:36:22,720 --> 00:36:27,078
for the picking right thank you

1025
00:36:28,320 --> 00:36:30,240
i think my question is very close to the

1026
00:36:30,240 --> 00:36:32,079
last one uh i don't know if you tried

1027
00:36:32,079 --> 00:36:34,160
several pcs to to find if they are

1028
00:36:34,160 --> 00:36:36,320
leaking in the same way or not here they

1029
00:36:36,320 --> 00:36:38,400
are

1030
00:36:38,720 --> 00:36:40,640
six pieces six random selections of

1031
00:36:40,640 --> 00:36:42,640
pieces

1032
00:36:42,640 --> 00:36:44,960
um

1033
00:36:46,480 --> 00:36:48,880
sorry

1034
00:36:50,160 --> 00:36:52,400
uh no there is no apple here we will we

1035
00:36:52,400 --> 00:36:54,880
like lenovo because the no okay

1036
00:36:54,880 --> 00:36:56,800
this this question always kind of comes

1037
00:36:56,800 --> 00:36:58,160
up we should have a slide with that we

1038
00:36:58,160 --> 00:36:59,599
should have a slide with apple yes we

1039
00:36:59,599 --> 00:37:00,800
should we should run it on an app and

1040
00:37:00,800 --> 00:37:03,200
see what else

1041
00:37:03,440 --> 00:37:06,160
um so does this attack work in

1042
00:37:06,160 --> 00:37:07,440
environments where like let's say you

1043
00:37:07,440 --> 00:37:09,680
have a processor running multiple

1044
00:37:09,680 --> 00:37:12,240
different processes on different threads

1045
00:37:12,240 --> 00:37:14,160
how would you distinguish instructions

1046
00:37:14,160 --> 00:37:16,000
if there's several different processes

1047
00:37:16,000 --> 00:37:17,680
running instructions so everything you

1048
00:37:17,680 --> 00:37:18,960
saw here today

1049
00:37:18,960 --> 00:37:22,240
these computers run linux okay some of

1050
00:37:22,240 --> 00:37:24,400
them run or the networking stack because

1051
00:37:24,400 --> 00:37:26,000
some of the demos run over the internet

1052
00:37:26,000 --> 00:37:27,920
right there is hundreds of processors

1053
00:37:27,920 --> 00:37:29,920
running processes running here just

1054
00:37:29,920 --> 00:37:31,920
because i said linux right and here it

1055
00:37:31,920 --> 00:37:34,400
still works once you do leak itself

1056
00:37:34,400 --> 00:37:36,560
amplification

1057
00:37:36,560 --> 00:37:38,560
it's there it's there and it's more

1058
00:37:38,560 --> 00:37:41,920
powerful than anything

1059
00:37:41,920 --> 00:37:44,079
than anything you have lying around

1060
00:37:44,079 --> 00:37:46,480
which is not amplified the algorithmic

1061
00:37:46,480 --> 00:37:48,480
way of amplifying something by sending

1062
00:37:48,480 --> 00:37:50,400
it inputs that trigger

1063
00:37:50,400 --> 00:37:53,760
evil things wins over any other system

1064
00:37:53,760 --> 00:37:54,720
noise

1065
00:37:54,720 --> 00:37:56,160
and measurement noise that you might

1066
00:37:56,160 --> 00:37:58,160
have okay so what's happening is

1067
00:37:58,160 --> 00:37:59,920
basically you're triggering the

1068
00:37:59,920 --> 00:38:02,079
operations using your your input and

1069
00:38:02,079 --> 00:38:04,640
that creates a sufficient amount of

1070
00:38:04,640 --> 00:38:06,000
and that's how you win the game and

1071
00:38:06,000 --> 00:38:07,680
that's how you win the game we should

1072
00:38:07,680 --> 00:38:10,079
also say that the the website attack for

1073
00:38:10,079 --> 00:38:12,160
example we intentionally mounted it

1074
00:38:12,160 --> 00:38:13,040
while

1075
00:38:13,040 --> 00:38:15,040
running a bunch of other processes that

1076
00:38:15,040 --> 00:38:17,920
are like cpu hungry in the background to

1077
00:38:17,920 --> 00:38:19,599
see that there's still noticeable

1078
00:38:19,599 --> 00:38:23,119
differences between different websites

1079
00:38:23,599 --> 00:38:27,119
okay any other questions

1080
00:38:27,200 --> 00:38:29,040
all right just one more question we can

1081
00:38:29,040 --> 00:38:32,279
take them

1082
00:38:33,440 --> 00:38:34,800
thanks so

1083
00:38:34,800 --> 00:38:36,000
the the first

1084
00:38:36,000 --> 00:38:37,760
uh the first tacky show is a chosen

1085
00:38:37,760 --> 00:38:40,160
ciphertext attack yes right

1086
00:38:40,160 --> 00:38:41,920
most people don't run hsms on their

1087
00:38:41,920 --> 00:38:45,280
laptop what would be a use case of

1088
00:38:45,280 --> 00:38:47,040
where you could use a chosen ciphertext

1089
00:38:47,040 --> 00:38:50,560
attack against a laptop so

1090
00:38:50,560 --> 00:38:53,680
the the the bunch and my favorite one

1091
00:38:53,680 --> 00:38:55,680
used to be encrypted email right because

1092
00:38:55,680 --> 00:38:57,359
i'm going to send you emails of cats

1093
00:38:57,359 --> 00:38:59,200
with pixels arranged so that they are

1094
00:38:59,200 --> 00:39:02,240
mod so that the negative one modulo p

1095
00:39:02,240 --> 00:39:03,040
and

1096
00:39:03,040 --> 00:39:04,800
when you interpret them as bits and

1097
00:39:04,800 --> 00:39:06,000
therefore

1098
00:39:06,000 --> 00:39:08,720
you will decrypt my cat picture and okay

1099
00:39:08,720 --> 00:39:10,880
and i'll get your key there's just one

1100
00:39:10,880 --> 00:39:12,320
example there are a bunch of signing

1101
00:39:12,320 --> 00:39:15,119
operations done through our protocols

1102
00:39:15,119 --> 00:39:17,200
which would be the my favorite other

1103
00:39:17,200 --> 00:39:19,200
example

1104
00:39:19,200 --> 00:39:20,000
okay

1105
00:39:20,000 --> 00:39:21,200
thank you

1106
00:39:21,200 --> 00:39:23,280
so daniel uh for our friend who gave his

1107
00:39:23,280 --> 00:39:25,520
body for science we have a giveaway

1108
00:39:25,520 --> 00:39:28,690
[Laughter]

1109
00:39:37,839 --> 00:39:41,799
and thank you again for volunteering

