1
00:00:00,930 --> 00:00:07,180
[Music]

2
00:00:08,179 --> 00:00:12,120
hi everyone welcome to hardware iua

3
00:00:12,120 --> 00:00:15,540
webinar today we'll talk about the

4
00:00:15,540 --> 00:00:17,760
reverse engineering embedded systems so

5
00:00:17,760 --> 00:00:19,619
embedded systems are growing

6
00:00:19,619 --> 00:00:21,900
increasingly complex and connected and

7
00:00:21,900 --> 00:00:24,029
worse engineering the PCBs

8
00:00:24,029 --> 00:00:26,939
it's a components and their connections

9
00:00:26,939 --> 00:00:29,369
are the essential first step in

10
00:00:29,369 --> 00:00:31,529
analyzing the security of a system and

11
00:00:31,529 --> 00:00:34,050
this talk highlights what piece of

12
00:00:34,050 --> 00:00:36,510
information we can get and how we can

13
00:00:36,510 --> 00:00:37,410
out mate

14
00:00:37,410 --> 00:00:39,600
dealing with that information to assess

15
00:00:39,600 --> 00:00:41,820
the security of embedded systems quickly

16
00:00:41,820 --> 00:00:46,649
and today Ferdinand will present his

17
00:00:46,649 --> 00:00:48,960
talk on this topic he has been very

18
00:00:48,960 --> 00:00:50,730
passionate about information security

19
00:00:50,730 --> 00:00:53,399
ever since he was young and hardware

20
00:00:53,399 --> 00:00:56,340
security is a big field of interest for

21
00:00:56,340 --> 00:00:59,100
him in the past he was he has been

22
00:00:59,100 --> 00:01:02,640
working with Xavier in numerous embedded

23
00:01:02,640 --> 00:01:04,769
security projects and together they

24
00:01:04,769 --> 00:01:07,439
presented their can badger noble

25
00:01:07,439 --> 00:01:10,200
automative automotive hacking tool at

26
00:01:10,200 --> 00:01:13,380
the racket in the Afghan 2016 and also

27
00:01:13,380 --> 00:01:16,170
he and Xavier has been in conducting and

28
00:01:16,170 --> 00:01:18,210
low-level Hardware reversing training at

29
00:01:18,210 --> 00:01:21,180
hardware IO for the cup for the past

30
00:01:21,180 --> 00:01:24,750
couple of years so firstly welcome back

31
00:01:24,750 --> 00:01:26,549
to hardware I really nice to have you

32
00:01:26,549 --> 00:01:29,520
back with us and the presentation will

33
00:01:29,520 --> 00:01:32,939
take around 30 to 40 minutes and then it

34
00:01:32,939 --> 00:01:35,070
will be followed by a live Q&A session

35
00:01:35,070 --> 00:01:37,560
for around 10 minutes so if you have any

36
00:01:37,560 --> 00:01:40,470
questions you can send them in chat you

37
00:01:40,470 --> 00:01:42,450
can send them either publicly or

38
00:01:42,450 --> 00:01:44,430
directly to Ferdie in the chat and then

39
00:01:44,430 --> 00:01:46,350
after his presentation he will answer

40
00:01:46,350 --> 00:01:49,320
them so now if I did now it's stage is

41
00:01:49,320 --> 00:01:49,680
yours

42
00:01:49,680 --> 00:01:52,439
please you can start presentation hi

43
00:01:52,439 --> 00:01:56,100
everyone my name is Henrik Sedin inertia

44
00:01:56,100 --> 00:01:58,439
and thank you you DIA for this great

45
00:01:58,439 --> 00:02:01,320
introduction arm it's good to be here

46
00:02:01,320 --> 00:02:04,850
today and thank you everyone for joining

47
00:02:04,850 --> 00:02:09,419
we're here today to talk about to talk

48
00:02:09,419 --> 00:02:13,790
about analyzing systems the smart way

49
00:02:13,830 --> 00:02:18,370
first off a few words about myself I'm a

50
00:02:18,370 --> 00:02:19,960
security expert and I have been doing

51
00:02:19,960 --> 00:02:23,200
embedded securities basically since 2014

52
00:02:23,200 --> 00:02:27,640
I mostly work on you know low level

53
00:02:27,640 --> 00:02:29,560
systems reversing a bit of thermo

54
00:02:29,560 --> 00:02:32,400
engineering and many automotive projects

55
00:02:32,400 --> 00:02:35,440
I currently work at nurture consulting

56
00:02:35,440 --> 00:02:37,750
in Bihar and we are based in oil in

57
00:02:37,750 --> 00:02:39,940
Germany and we focus on the most

58
00:02:39,940 --> 00:02:43,110
challenging aspects of embedded security

59
00:02:43,110 --> 00:02:49,030
now in this talk basically it's it's

60
00:02:49,030 --> 00:02:52,150
I've always found it hard to find common

61
00:02:52,150 --> 00:02:54,070
denominators between embedded systems

62
00:02:54,070 --> 00:02:56,860
because if if you work on a lot of

63
00:02:56,860 --> 00:02:58,900
penetration testing for embedded systems

64
00:02:58,900 --> 00:03:01,240
for example then you will agree that

65
00:03:01,240 --> 00:03:04,180
there's many components and many

66
00:03:04,180 --> 00:03:06,220
different types of IT textures and

67
00:03:06,220 --> 00:03:08,470
basically for every systems there's

68
00:03:08,470 --> 00:03:10,660
millions of other ways on how to design

69
00:03:10,660 --> 00:03:13,570
a system and that doesn't necessarily

70
00:03:13,570 --> 00:03:17,470
make it easy for us as analysts or as a

71
00:03:17,470 --> 00:03:22,660
checkers now what does boils down to is

72
00:03:22,660 --> 00:03:24,250
that when you get a product that you

73
00:03:24,250 --> 00:03:27,820
want to test you you will first off take

74
00:03:27,820 --> 00:03:31,360
it down get excited you remove all the

75
00:03:31,360 --> 00:03:35,920
screws you take it apart and expose the

76
00:03:35,920 --> 00:03:38,890
PCBs or multiple PCBs that make up the

77
00:03:38,890 --> 00:03:42,459
system and we'll focus on these PCBs

78
00:03:42,459 --> 00:03:46,120
because I think I haven't seen an

79
00:03:46,120 --> 00:03:47,920
embedded system that's not using some

80
00:03:47,920 --> 00:03:51,970
kind of circuit board yet so but this is

81
00:03:51,970 --> 00:03:53,470
what the first thing that you'll be

82
00:03:53,470 --> 00:03:57,100
looking at when you test the system of

83
00:03:57,100 --> 00:03:59,140
course you clean it up you disconnect

84
00:03:59,140 --> 00:04:01,780
everything you maybe take some pictures

85
00:04:01,780 --> 00:04:05,620
in the process already and you see how

86
00:04:05,620 --> 00:04:07,420
is the system built right because that's

87
00:04:07,420 --> 00:04:08,760
the question that we want to answer

88
00:04:08,760 --> 00:04:12,280
before we can draw any conclusions on

89
00:04:12,280 --> 00:04:16,209
how the system is vulnerable or can be

90
00:04:16,209 --> 00:04:18,608
tested we need to sort of understand how

91
00:04:18,608 --> 00:04:20,969
it works

92
00:04:21,990 --> 00:04:25,060
so after looking and tearing down all

93
00:04:25,060 --> 00:04:27,819
all the pieces of the system you would

94
00:04:27,819 --> 00:04:30,729
identify components on the PCB now this

95
00:04:30,729 --> 00:04:34,419
is really nice because in almost all

96
00:04:34,419 --> 00:04:37,960
cases PCB components are mounted on the

97
00:04:37,960 --> 00:04:41,889
back or the front side of the PCB so

98
00:04:41,889 --> 00:04:45,430
there you'll find your chips and if

99
00:04:45,430 --> 00:04:47,080
you're like me and you're excited to

100
00:04:47,080 --> 00:04:49,419
move you know note down any part numbers

101
00:04:49,419 --> 00:04:51,669
and start googling them try to look for

102
00:04:51,669 --> 00:04:56,139
information and note it down also what's

103
00:04:56,139 --> 00:04:59,590
important is that I think everyone

104
00:04:59,590 --> 00:05:03,009
already sort of has a gut feeling on

105
00:05:03,009 --> 00:05:08,500
which components are important so for us

106
00:05:08,500 --> 00:05:11,020
as an attacker it's not really of

107
00:05:11,020 --> 00:05:14,409
interest to see how did they design a

108
00:05:14,409 --> 00:05:18,219
partial right that's most likely to be

109
00:05:18,219 --> 00:05:19,659
uninteresting that's something we can

110
00:05:19,659 --> 00:05:21,969
ignore we care about the components that

111
00:05:21,969 --> 00:05:25,930
run code or store data and then this is

112
00:05:25,930 --> 00:05:27,219
what you'll be looking at first you'll

113
00:05:27,219 --> 00:05:30,279
immediately decide what components you

114
00:05:30,279 --> 00:05:33,370
can deploy now once you've done that you

115
00:05:33,370 --> 00:05:34,990
would gather information again you

116
00:05:34,990 --> 00:05:37,210
google the part numbers you download

117
00:05:37,210 --> 00:05:40,870
anything and find them basically you

118
00:05:40,870 --> 00:05:44,949
still try to figure out what are the

119
00:05:44,949 --> 00:05:46,389
crucial components that make up the

120
00:05:46,389 --> 00:05:49,539
system and when I talk about components

121
00:05:49,539 --> 00:05:51,779
I talk about the integrated circuits

122
00:05:51,779 --> 00:05:55,060
that are soldered on the circuit board

123
00:05:55,060 --> 00:05:58,150
and basically what you do in this step

124
00:05:58,150 --> 00:06:00,669
you you map functions to individual

125
00:06:00,669 --> 00:06:02,110
components saying like this is a

126
00:06:02,110 --> 00:06:04,090
processor this will be executing code

127
00:06:04,090 --> 00:06:06,669
and interfacing with other components by

128
00:06:06,669 --> 00:06:11,190
and then you can sort of think about how

129
00:06:11,190 --> 00:06:15,490
the designers of that system achieve the

130
00:06:15,490 --> 00:06:18,759
systems function and once you did that

131
00:06:18,759 --> 00:06:21,069
of course this is where the fun part

132
00:06:21,069 --> 00:06:24,849
begins dump reverse exploit and you know

133
00:06:24,849 --> 00:06:26,469
how this goes there is many other charts

134
00:06:26,469 --> 00:06:28,180
about this but in this presentation

135
00:06:28,180 --> 00:06:30,820
we'll be covering step two and three so

136
00:06:30,820 --> 00:06:33,130
we will have a thorough look at what

137
00:06:33,130 --> 00:06:36,060
information do we have they

138
00:06:36,060 --> 00:06:38,770
where some of the challenges that we

139
00:06:38,770 --> 00:06:40,330
have during this step and how can we

140
00:06:40,330 --> 00:06:42,370
structure this a little bit more so that

141
00:06:42,370 --> 00:06:46,570
we spend less time in these steps and be

142
00:06:46,570 --> 00:06:47,500
more thorough

143
00:06:47,500 --> 00:06:51,760
so a lot of this might you know and then

144
00:06:51,760 --> 00:06:53,920
we'll be using you know automated

145
00:06:53,920 --> 00:06:56,680
techniques to for example search for

146
00:06:56,680 --> 00:06:58,960
data sheets and all that it's not it's

147
00:06:58,960 --> 00:07:00,280
gonna save you some time if you're

148
00:07:00,280 --> 00:07:02,020
dealing with existence but even if

149
00:07:02,020 --> 00:07:05,500
you're dealing with small systems maybe

150
00:07:05,500 --> 00:07:08,040
just like three or four X components

151
00:07:08,040 --> 00:07:10,270
this can be very useful because it

152
00:07:10,270 --> 00:07:12,940
enhances the quality of your tested

153
00:07:12,940 --> 00:07:15,910
basically we don't like guessing things

154
00:07:15,910 --> 00:07:18,370
we want to know things right so having

155
00:07:18,370 --> 00:07:21,600
more information is always good

156
00:07:21,600 --> 00:07:24,070
yeah and often in during these phases

157
00:07:24,070 --> 00:07:25,930
you overlook some things like when I was

158
00:07:25,930 --> 00:07:28,900
working and tearing down and an

159
00:07:28,900 --> 00:07:32,140
automotive product a couple of years ago

160
00:07:32,140 --> 00:07:34,840
I mean spotted the microcontroller that

161
00:07:34,840 --> 00:07:37,570
try to look for debugging parts and all

162
00:07:37,570 --> 00:07:41,560
that but what I and I spent weeks right

163
00:07:41,560 --> 00:07:43,210
trying to openly do a plugin for it

164
00:07:43,210 --> 00:07:45,400
because it's secured blah blah blah it

165
00:07:45,400 --> 00:07:47,470
can be painful but then what I didn't

166
00:07:47,470 --> 00:07:49,120
notice was that there's this teeny tiny

167
00:07:49,120 --> 00:07:53,680
from on the other side of the PCB and if

168
00:07:53,680 --> 00:07:57,880
I had you know done my you know my step

169
00:07:57,880 --> 00:08:00,970
two and three correctly then I could

170
00:08:00,970 --> 00:08:02,680
have spotted it thumb tip and actually

171
00:08:02,680 --> 00:08:04,540
there was a flag that would enable some

172
00:08:04,540 --> 00:08:06,040
debugging functions anything it's

173
00:08:06,040 --> 00:08:08,350
perfect saved a lot of time so it

174
00:08:08,350 --> 00:08:10,210
doesn't have to be like that always of

175
00:08:10,210 --> 00:08:14,680
course but we we basically also wanted

176
00:08:14,680 --> 00:08:16,030
to avoid switching back and forth

177
00:08:16,030 --> 00:08:18,220
because once you maybe dump some foam

178
00:08:18,220 --> 00:08:19,960
where you want to see oh okay there

179
00:08:19,960 --> 00:08:21,700
seems to be any problem let's look where

180
00:08:21,700 --> 00:08:23,650
it is and then you have to trace which

181
00:08:23,650 --> 00:08:25,720
components but it in the PCB you have to

182
00:08:25,720 --> 00:08:28,440
go back and forth between your lab

183
00:08:28,440 --> 00:08:31,570
managing your computer and that is also

184
00:08:31,570 --> 00:08:37,990
something that I don't like much so yeah

185
00:08:37,990 --> 00:08:39,640
of course when you have big projects

186
00:08:39,640 --> 00:08:41,679
with more than 20 components this can

187
00:08:41,679 --> 00:08:44,500
also be very time-consuming so all over

188
00:08:44,500 --> 00:08:46,150
all it would be nice if we could

189
00:08:46,150 --> 00:08:47,779
automate some steps of this

190
00:08:47,779 --> 00:08:50,930
and solve some challenges all as well

191
00:08:50,930 --> 00:08:53,810
because if you did this couple of time

192
00:08:53,810 --> 00:08:56,660
you know that whatever it says on the

193
00:08:56,660 --> 00:08:59,689
chip doesn't necessarily mean or

194
00:08:59,689 --> 00:09:02,300
represent a part number that is actually

195
00:09:02,300 --> 00:09:05,540
an or durable partner many times they

196
00:09:05,540 --> 00:09:07,279
use some kind of scheme to label their

197
00:09:07,279 --> 00:09:10,309
components and it's not always that

198
00:09:10,309 --> 00:09:16,129
obvious on what that match - yeah and of

199
00:09:16,129 --> 00:09:18,259
course it's boring right we want to have

200
00:09:18,259 --> 00:09:19,939
shelves we want a dumb things we want

201
00:09:19,939 --> 00:09:22,370
soldered we don't wanna try and read

202
00:09:22,370 --> 00:09:28,370
part numbers now remember our goal is to

203
00:09:28,370 --> 00:09:31,069
have fun we want to dump temper extract

204
00:09:31,069 --> 00:09:35,660
we want to find bugs because of that we

205
00:09:35,660 --> 00:09:37,309
care about the active components when I

206
00:09:37,309 --> 00:09:39,350
say active components I mean everything

207
00:09:39,350 --> 00:09:41,449
that is able to change its digital state

208
00:09:41,449 --> 00:09:43,129
actively you know of something that

209
00:09:43,129 --> 00:09:45,220
processes signals or generate signals

210
00:09:45,220 --> 00:09:47,540
passes would be resistors capacitors

211
00:09:47,540 --> 00:09:49,610
like usually those are not that

212
00:09:49,610 --> 00:09:52,329
important at least in this initial State

213
00:09:52,329 --> 00:09:54,649
and then that's also something we can't

214
00:09:54,649 --> 00:09:56,480
ignore it's more distracted by it's

215
00:09:56,480 --> 00:10:00,800
useful and as I said we want to get as

216
00:10:00,800 --> 00:10:03,439
much information as possible not only

217
00:10:03,439 --> 00:10:06,259
for component identification or to know

218
00:10:06,259 --> 00:10:07,879
what we're dealing with but also for

219
00:10:07,879 --> 00:10:09,529
later on when we were first film where

220
00:10:09,529 --> 00:10:13,459
we want to have memory maps we want you

221
00:10:13,459 --> 00:10:18,250
know when I maybe have a compiler to

222
00:10:18,250 --> 00:10:23,779
generate to generate function signatures

223
00:10:23,779 --> 00:10:29,290
and all that so how do we actually do it

224
00:10:29,290 --> 00:10:32,569
well yeah and it's important to note we

225
00:10:32,569 --> 00:10:35,149
don't care about the physical layout we

226
00:10:35,149 --> 00:10:38,029
first off the schematic is fun when we

227
00:10:38,029 --> 00:10:39,980
construct the schematic and see what

228
00:10:39,980 --> 00:10:41,990
component talks to which other component

229
00:10:41,990 --> 00:10:44,809
and that way we figure out how the

230
00:10:44,809 --> 00:10:49,249
system works our approach and which has

231
00:10:49,249 --> 00:10:52,850
been published in the different format a

232
00:10:52,850 --> 00:10:55,399
couple of years ago and which ever since

233
00:10:55,399 --> 00:10:58,360
we find it in at been working up

234
00:10:58,360 --> 00:11:00,740
basically our process is that we take

235
00:11:00,740 --> 00:11:01,529
high resolution

236
00:11:01,529 --> 00:11:03,720
images of the front and back of the PCB

237
00:11:03,720 --> 00:11:06,629
and using these images we start

238
00:11:06,629 --> 00:11:12,060
detecting components then once we detect

239
00:11:12,060 --> 00:11:13,949
components we try to read the part

240
00:11:13,949 --> 00:11:17,069
numbers and then in an automated way

241
00:11:17,069 --> 00:11:19,620
look up any kind of information that we

242
00:11:19,620 --> 00:11:24,209
get so for every component you would run

243
00:11:24,209 --> 00:11:26,970
on some kind of pipeline that guess the

244
00:11:26,970 --> 00:11:29,999
part number and search for documentation

245
00:11:29,999 --> 00:11:34,470
for tools etc and in the end you end up

246
00:11:34,470 --> 00:11:36,720
having this what I call schematic

247
00:11:36,720 --> 00:11:39,509
reconstruction of course it's not the

248
00:11:39,509 --> 00:11:42,300
full schematic but I think this is fine

249
00:11:42,300 --> 00:11:43,920
for a thousand attacker because once we

250
00:11:43,920 --> 00:11:45,899
know that you know maybe this

251
00:11:45,899 --> 00:11:48,300
microcontroller talks to this radio or

252
00:11:48,300 --> 00:11:48,899
SPI

253
00:11:48,899 --> 00:11:53,069
that's that's the protocol or a signal

254
00:11:53,069 --> 00:11:54,959
that we can improve it that we can

255
00:11:54,959 --> 00:11:57,480
demand in the middle you know or talks

256
00:11:57,480 --> 00:11:59,370
to a flash and then we know okay we need

257
00:11:59,370 --> 00:12:00,689
to dump this flash and see what it

258
00:12:00,689 --> 00:12:03,600
stores and it gives us a lot of options

259
00:12:03,600 --> 00:12:07,050
and especially in the first couple days

260
00:12:07,050 --> 00:12:08,910
I think that this is what we worked with

261
00:12:08,910 --> 00:12:10,860
the most and having confidence in this

262
00:12:10,860 --> 00:12:14,699
is essential for keeping the poverty and

263
00:12:14,699 --> 00:12:20,939
and also the motivation of so how you

264
00:12:20,939 --> 00:12:23,610
actually take pictures of PCBs I think

265
00:12:23,610 --> 00:12:26,550
this is an important step and remember

266
00:12:26,550 --> 00:12:29,550
when you write in reports or maybe an

267
00:12:29,550 --> 00:12:31,050
internal report or whatever it's always

268
00:12:31,050 --> 00:12:32,579
good to include pictures and this to

269
00:12:32,579 --> 00:12:34,860
come and practice but many people

270
00:12:34,860 --> 00:12:36,120
actually don't know how to take proper

271
00:12:36,120 --> 00:12:40,019
pictures of PCBs and if we want to do

272
00:12:40,019 --> 00:12:42,059
anything in an automated way they need

273
00:12:42,059 --> 00:12:46,019
to be they need to be spot-on do

274
00:12:46,019 --> 00:12:47,970
yourself yourself you save yourself a

275
00:12:47,970 --> 00:12:49,620
lot of time if your pictures are good so

276
00:12:49,620 --> 00:12:52,829
this is a bad example here it's not

277
00:12:52,829 --> 00:12:54,750
fully disassembled you still have

278
00:12:54,750 --> 00:12:59,730
subsystems attached there's bad lighting

279
00:12:59,730 --> 00:13:01,769
conditions the background is a bit you

280
00:13:01,769 --> 00:13:04,860
know I wouldn't use it especially you

281
00:13:04,860 --> 00:13:08,160
can see this gradient of light yellowish

282
00:13:08,160 --> 00:13:11,550
light here and shadows over here that's

283
00:13:11,550 --> 00:13:14,639
not too optimal and the things I'm going

284
00:13:14,639 --> 00:13:15,360
to mention here

285
00:13:15,360 --> 00:13:18,180
on how to improve this how would you

286
00:13:18,180 --> 00:13:20,790
actually take proper pictures you really

287
00:13:20,790 --> 00:13:22,680
don't need expensive equipment like all

288
00:13:22,680 --> 00:13:24,899
of this can be done pretty much for free

289
00:13:24,899 --> 00:13:26,940
even smartphones now they said very good

290
00:13:26,940 --> 00:13:32,310
cameras so in order to take the PCB

291
00:13:32,310 --> 00:13:35,070
picture like this one you would properly

292
00:13:35,070 --> 00:13:37,670
clean a piece of meat you can use

293
00:13:37,670 --> 00:13:41,490
alcohol or even brake cleaner stuff

294
00:13:41,490 --> 00:13:42,560
works as well

295
00:13:42,560 --> 00:13:46,260
pressured air I mean you want to remove

296
00:13:46,260 --> 00:13:48,690
anything that could cover up the part

297
00:13:48,690 --> 00:13:50,600
numbers that's what we're interested in

298
00:13:50,600 --> 00:13:54,089
any dust could interfere with you know

299
00:13:54,089 --> 00:13:56,880
whatever we do later and of course you

300
00:13:56,880 --> 00:14:00,060
need to remove stickers as well you

301
00:14:00,060 --> 00:14:03,560
should use a long exposure time simply

302
00:14:03,560 --> 00:14:06,120
you know because of two reasons you

303
00:14:06,120 --> 00:14:08,130
should set the ISO really low so that we

304
00:14:08,130 --> 00:14:10,410
have little sensor noise that we can

305
00:14:10,410 --> 00:14:12,779
zoom in very wide have smooth surfaces

306
00:14:12,779 --> 00:14:16,290
one-step smooth image and because of

307
00:14:16,290 --> 00:14:17,880
that you have to use a long exposure

308
00:14:17,880 --> 00:14:19,769
time but also the long exposure time

309
00:14:19,769 --> 00:14:22,920
helps you to get the lightening just

310
00:14:22,920 --> 00:14:25,079
right so that we get rid of some of the

311
00:14:25,079 --> 00:14:28,410
shadows that that there are and of

312
00:14:28,410 --> 00:14:29,880
course you don't want to waste the

313
00:14:29,880 --> 00:14:31,649
resolution of your camera you want to

314
00:14:31,649 --> 00:14:33,199
have the PCB as close as possible

315
00:14:33,199 --> 00:14:35,640
covering as much of the image that you

316
00:14:35,640 --> 00:14:38,660
take because if you have white

317
00:14:38,660 --> 00:14:42,209
background on the sides then that that's

318
00:14:42,209 --> 00:14:45,329
waste we have high resolution camera so

319
00:14:45,329 --> 00:14:53,070
usable now our idea on how to identify

320
00:14:53,070 --> 00:14:57,540
chips on TCP was actually very central

321
00:14:57,540 --> 00:15:00,089
chips are rectangular continuous regions

322
00:15:00,089 --> 00:15:02,610
in the image and they're always similar

323
00:15:02,610 --> 00:15:05,670
in that way so how do we actually tell a

324
00:15:05,670 --> 00:15:08,220
computer in to look for you know

325
00:15:08,220 --> 00:15:11,279
rectangular continues regions in the

326
00:15:11,279 --> 00:15:13,800
image there are a couple ways to do this

327
00:15:13,800 --> 00:15:17,670
but the way we did it was that we use a

328
00:15:17,670 --> 00:15:19,440
color based segmentation approach

329
00:15:19,440 --> 00:15:21,750
segmentations means that we assign

330
00:15:21,750 --> 00:15:26,550
regions to the image and in the end the

331
00:15:26,550 --> 00:15:29,640
idea is to have regions that to have

332
00:15:29,640 --> 00:15:31,140
to remove as much information as

333
00:15:31,140 --> 00:15:33,090
possible from the image so that only the

334
00:15:33,090 --> 00:15:36,360
chips remain right so first we do a bit

335
00:15:36,360 --> 00:15:39,360
of pre-processing we blur a bit we

336
00:15:39,360 --> 00:15:43,290
remove five frequency image detailed ISO

337
00:15:43,290 --> 00:15:45,630
if you if you start with an image like

338
00:15:45,630 --> 00:15:47,550
it is this would be a hard drive

339
00:15:47,550 --> 00:15:54,330
controller then you would start removing

340
00:15:54,330 --> 00:15:57,510
in the mewling image and then afterwards

341
00:15:57,510 --> 00:15:58,800
it would look like this and you can see

342
00:15:58,800 --> 00:16:00,450
that already the chips make a big

343
00:16:00,450 --> 00:16:04,560
purchase of the image finally and this

344
00:16:04,560 --> 00:16:06,150
is the most crucial step you remove

345
00:16:06,150 --> 00:16:08,010
anything that basically doesn't look

346
00:16:08,010 --> 00:16:10,230
like a chip so in this case we have a

347
00:16:10,230 --> 00:16:12,510
green solder mask you just get rid of

348
00:16:12,510 --> 00:16:16,320
that and you filter every pixel by 12

349
00:16:16,320 --> 00:16:19,170
value this is very efficient which it's

350
00:16:19,170 --> 00:16:20,880
a one-step procedure and you end up with

351
00:16:20,880 --> 00:16:23,720
an image that looks somewhat like this

352
00:16:23,720 --> 00:16:26,970
you can see that the that the areas of

353
00:16:26,970 --> 00:16:29,040
the chip stick out so the only remaining

354
00:16:29,040 --> 00:16:31,520
step is to fit rectangles over these

355
00:16:31,520 --> 00:16:35,310
chip regions you have to filter these

356
00:16:35,310 --> 00:16:37,980
piles by size and there's more details

357
00:16:37,980 --> 00:16:40,280
on how this is implemented as well but

358
00:16:40,280 --> 00:16:41,820
you get the idea

359
00:16:41,820 --> 00:16:44,130
we we look for rectangles on the PCB and

360
00:16:44,130 --> 00:16:47,820
we end up filing chips regions which are

361
00:16:47,820 --> 00:16:49,770
the balloon rectangles here on that

362
00:16:49,770 --> 00:16:55,020
image now this works we have evaluated

363
00:16:55,020 --> 00:16:57,210
that and we find it over the years and

364
00:16:57,210 --> 00:17:03,060
this works really well in here there it

365
00:17:03,060 --> 00:17:04,829
will miss a few components but even with

366
00:17:04,829 --> 00:17:06,869
black solder mask or anything that's

367
00:17:06,869 --> 00:17:09,720
fine and and it works well because it's

368
00:17:09,720 --> 00:17:11,369
not only very debuggable you know you

369
00:17:11,369 --> 00:17:13,290
know exactly what what it's doing it's

370
00:17:13,290 --> 00:17:18,030
very visual but also it assumes that you

371
00:17:18,030 --> 00:17:20,220
have good conditions of the in footage I

372
00:17:20,220 --> 00:17:22,619
think that's the most crucial thing is

373
00:17:22,619 --> 00:17:25,079
that your lightening in every project is

374
00:17:25,079 --> 00:17:30,390
somewhat similar now once we've

375
00:17:30,390 --> 00:17:31,980
identified components we might have

376
00:17:31,980 --> 00:17:33,720
missed something or we actually do one

377
00:17:33,720 --> 00:17:35,880
to care about the passives and there's a

378
00:17:35,880 --> 00:17:38,100
second approach that we do in order to

379
00:17:38,100 --> 00:17:40,560
solve that which is template mention so

380
00:17:40,560 --> 00:17:42,430
once we've identified

381
00:17:42,430 --> 00:17:45,130
for me like this little consider here in

382
00:17:45,130 --> 00:17:48,880
marked in red we we crop out that region

383
00:17:48,880 --> 00:17:50,770
I'd use it as a template to look for

384
00:17:50,770 --> 00:17:52,990
other instances of that component on

385
00:17:52,990 --> 00:17:54,360
ethnicity

386
00:17:54,360 --> 00:17:56,590
basically you compare that little

387
00:17:56,590 --> 00:17:59,380
template you slide it over the image and

388
00:17:59,380 --> 00:18:01,270
then calculate a similarity metric with

389
00:18:01,270 --> 00:18:03,310
the template and if it exceeds the

390
00:18:03,310 --> 00:18:07,360
threshold you market as a hit and this

391
00:18:07,360 --> 00:18:10,180
works extremely well and here indicated

392
00:18:10,180 --> 00:18:11,020
by the arrow

393
00:18:11,020 --> 00:18:13,540
it's a also invariant to rotation

394
00:18:13,540 --> 00:18:17,040
meaning that with a horizontal

395
00:18:17,040 --> 00:18:19,300
horizontally right align component we

396
00:18:19,300 --> 00:18:21,970
can also detect biosensors that are

397
00:18:21,970 --> 00:18:26,280
rotated in this case verdict to you lie

398
00:18:26,289 --> 00:18:28,539
as last step we would have to remove

399
00:18:28,539 --> 00:18:32,440
some duplicates and overlaps basically

400
00:18:32,440 --> 00:18:34,869
you need to there is a very simple way

401
00:18:34,869 --> 00:18:36,369
and I'll do the secret product for

402
00:18:36,369 --> 00:18:38,409
example always keep the first match

403
00:18:38,409 --> 00:18:41,879
which which is if you're gonna do fine

404
00:18:41,879 --> 00:18:44,409
it doesn't need to be perfectly aligned

405
00:18:44,409 --> 00:18:47,799
with the component we don't really care

406
00:18:47,799 --> 00:18:48,879
about it that much

407
00:18:48,879 --> 00:18:50,769
because remember in the end we want to

408
00:18:50,769 --> 00:18:52,509
wait quite language so as long as the

409
00:18:52,509 --> 00:18:55,419
part numbers are there we can you know

410
00:18:55,419 --> 00:19:01,149
the computer into its job now having

411
00:19:01,149 --> 00:19:04,269
these regions we crack them out and we

412
00:19:04,269 --> 00:19:06,729
perform kind of some kind of optical

413
00:19:06,729 --> 00:19:08,320
character recognition to get the part

414
00:19:08,320 --> 00:19:12,429
number again there's there's a couple of

415
00:19:12,429 --> 00:19:14,649
sources rules to do it usually they

416
00:19:14,649 --> 00:19:17,019
don't work that well and unless you

417
00:19:17,019 --> 00:19:19,029
modify them a bit we usually recommend

418
00:19:19,029 --> 00:19:22,029
using cloud service for that and that's

419
00:19:22,029 --> 00:19:23,649
been detailed as well and some of the

420
00:19:23,649 --> 00:19:27,129
documentation however the bigger

421
00:19:27,129 --> 00:19:30,820
challenge and you know the bigger

422
00:19:30,820 --> 00:19:32,710
challenge here is to know what actually

423
00:19:32,710 --> 00:19:36,099
is the part number because it doesn't

424
00:19:36,099 --> 00:19:39,129
always or it rarely every case that you

425
00:19:39,129 --> 00:19:40,690
have a continuous string with non-life

426
00:19:40,690 --> 00:19:43,229
written on the component then that's

427
00:19:43,229 --> 00:19:46,629
that's the partner so we have something

428
00:19:46,629 --> 00:19:51,820
like Aaron beam or EOC are algorithms

429
00:19:51,820 --> 00:19:53,799
out there there will give you a lot of

430
00:19:53,799 --> 00:19:56,409
matches basically like this so now you

431
00:19:56,409 --> 00:19:59,289
have to kind of decide what is the

432
00:19:59,289 --> 00:20:04,659
actual component name and that is solved

433
00:20:04,659 --> 00:20:09,940
by basically two approaches so you would

434
00:20:09,940 --> 00:20:11,799
have a minimum character count to get

435
00:20:11,799 --> 00:20:15,009
rid of like Lois like dots for example

436
00:20:15,009 --> 00:20:17,590
will always get detected by easily

437
00:20:17,590 --> 00:20:19,450
buddies around but then you would have

438
00:20:19,450 --> 00:20:23,279
some kind of database with part number

439
00:20:23,279 --> 00:20:26,679
matches or you know known part numbers

440
00:20:26,679 --> 00:20:29,349
from online catalogs of Church or a

441
00:20:29,349 --> 00:20:31,450
manufacturer naming patterns like the

442
00:20:31,450 --> 00:20:34,029
phone for example the stm32 has a ton of

443
00:20:34,029 --> 00:20:36,489
the Ryans which are all as game free to

444
00:20:36,489 --> 00:20:39,150
have something something's up

445
00:20:39,150 --> 00:20:44,020
then again you don't need you don't need

446
00:20:44,020 --> 00:20:46,840
a PhD to solve this problem it's it's

447
00:20:46,840 --> 00:20:49,710
very straightforward

448
00:20:49,710 --> 00:20:53,110
well now what you would say ferry this

449
00:20:53,110 --> 00:20:55,090
is nice but how do you actually deal

450
00:20:55,090 --> 00:21:00,330
with components that aren't labeled well

451
00:21:00,330 --> 00:21:03,090
we've been starting with that and

452
00:21:03,090 --> 00:21:05,320
there's a couple of solutions to this

453
00:21:05,320 --> 00:21:06,970
with which I would like to share with

454
00:21:06,970 --> 00:21:08,650
you and I think are very interesting

455
00:21:08,650 --> 00:21:10,480
even if you don't have you know an

456
00:21:10,480 --> 00:21:14,280
automated system that processes images

457
00:21:14,280 --> 00:21:18,220
so in many cases remember making a chip

458
00:21:18,220 --> 00:21:21,580
is expensive so in many cases OAM to go

459
00:21:21,580 --> 00:21:23,350
to the chip manufacturers and say look I

460
00:21:23,350 --> 00:21:25,630
need this part but I need it in I don't

461
00:21:25,630 --> 00:21:29,640
know some new temperature range and

462
00:21:29,640 --> 00:21:33,250
maybe you know maybe with parts

463
00:21:33,250 --> 00:21:35,260
availability guaranteed for 10 years and

464
00:21:35,260 --> 00:21:38,080
then they make a custom chip for that or

465
00:21:38,080 --> 00:21:40,000
over some other features which might not

466
00:21:40,000 --> 00:21:44,380
actually be related to the silicon

467
00:21:44,380 --> 00:21:46,720
itself now for silicon features they do

468
00:21:46,720 --> 00:21:49,410
the same usually it's a reuse design

469
00:21:49,410 --> 00:21:51,850
that they customize a little bit and

470
00:21:51,850 --> 00:21:53,559
then their packaging process

471
00:21:53,559 --> 00:21:55,059
manufacturing process for the chip is

472
00:21:55,059 --> 00:21:57,370
essentially the same now these are the

473
00:21:57,370 --> 00:21:59,799
two first options right

474
00:21:59,799 --> 00:22:03,970
another option is it's it's just a

475
00:22:03,970 --> 00:22:05,860
standard chip where they scraped off the

476
00:22:05,860 --> 00:22:07,210
label because they don't want you to

477
00:22:07,210 --> 00:22:10,990
know what it is and then there's the

478
00:22:10,990 --> 00:22:12,640
third case which is that the chip is

479
00:22:12,640 --> 00:22:15,850
entirely custom but for the first two

480
00:22:15,850 --> 00:22:17,530
cases which I think make up the big

481
00:22:17,530 --> 00:22:18,970
share of what you'll actually see in

482
00:22:18,970 --> 00:22:22,900
systems we're dealing with reused design

483
00:22:22,900 --> 00:22:25,750
so how can we spot these reuse designs

484
00:22:25,750 --> 00:22:31,049
or these free branded chips we could and

485
00:22:31,049 --> 00:22:33,370
this is again where the automation comes

486
00:22:33,370 --> 00:22:36,669
in we did look at the chip dimensions

487
00:22:36,669 --> 00:22:40,390
how big is the package and also what's

488
00:22:40,390 --> 00:22:42,010
very easy to figure out for you as an

489
00:22:42,010 --> 00:22:45,549
analyst is seeing the supply that's fine

490
00:22:45,549 --> 00:22:47,590
it's very easy to spot the ground and

491
00:22:47,590 --> 00:22:49,350
once you know where they are

492
00:22:49,350 --> 00:22:53,440
no more package the chip is

493
00:22:53,440 --> 00:22:57,679
you could again you look up and it's

494
00:22:57,679 --> 00:23:02,389
some kind of database what matches

495
00:23:02,389 --> 00:23:04,519
closely means characteristics of chip

496
00:23:04,519 --> 00:23:06,709
dimensions and supply pets and this

497
00:23:06,709 --> 00:23:13,909
works surprisingly well now what

498
00:23:13,909 --> 00:23:15,619
actually are the sources of information

499
00:23:15,619 --> 00:23:18,349
that we can get when we're testing

500
00:23:18,349 --> 00:23:21,830
systems the very first thing that you

501
00:23:21,830 --> 00:23:23,089
want to look at of course is the

502
00:23:23,089 --> 00:23:25,849
datasheet I am yes our office is quite

503
00:23:25,849 --> 00:23:27,440
obvious and I don't need to go into

504
00:23:27,440 --> 00:23:30,349
detail but basically we want to answer a

505
00:23:30,349 --> 00:23:32,029
couple questions meaning what does this

506
00:23:32,029 --> 00:23:36,229
component to what what do the individual

507
00:23:36,229 --> 00:23:40,999
things doing other any debugging parts

508
00:23:40,999 --> 00:23:43,129
you know if it's if it's a

509
00:23:43,129 --> 00:23:44,629
microcontroller we want to look straight

510
00:23:44,629 --> 00:23:46,849
for debugging interfaces or for what

511
00:23:46,849 --> 00:23:50,539
architecture this product is in and I

512
00:23:50,539 --> 00:23:53,809
don't love these down so this is also a

513
00:23:53,809 --> 00:23:56,149
little bit about figuring out which

514
00:23:56,149 --> 00:23:58,940
information we can apply white because

515
00:23:58,940 --> 00:24:01,599
you wouldn't necessarily care about how

516
00:24:01,599 --> 00:24:04,219
how many timers does this it should have

517
00:24:04,219 --> 00:24:07,729
four or how much current does it draw

518
00:24:07,729 --> 00:24:09,709
you know as an attacker we want to know

519
00:24:09,709 --> 00:24:17,719
where the sequence and well to know

520
00:24:17,719 --> 00:24:19,279
where the signals are you would look at

521
00:24:19,279 --> 00:24:21,019
pinot diagrams like this which basically

522
00:24:21,019 --> 00:24:25,219
mapped in names to two pin locations and

523
00:24:25,219 --> 00:24:28,249
in this case this is a supply pin in one

524
00:24:28,249 --> 00:24:30,469
and but you'll also notice that these

525
00:24:30,469 --> 00:24:32,299
pin names are more like aliases they

526
00:24:32,299 --> 00:24:33,259
don't mean anything

527
00:24:33,259 --> 00:24:35,329
well the exception being the supply

528
00:24:35,329 --> 00:24:37,820
things and maybe this research but PC

529
00:24:37,820 --> 00:24:39,499
Sphero we have no idea what it means so

530
00:24:39,499 --> 00:24:42,709
we need to take another step and match

531
00:24:42,709 --> 00:24:46,729
listening to something like this usually

532
00:24:46,729 --> 00:24:49,729
they have tables for this or so some

533
00:24:49,729 --> 00:24:51,079
kind of software that lets you configure

534
00:24:51,079 --> 00:24:55,059
the individual pinging functions and

535
00:24:55,059 --> 00:24:58,009
only there you can see which functions

536
00:24:58,009 --> 00:24:59,629
true this pin have like for example

537
00:24:59,629 --> 00:25:04,520
tv-10 would be your three transmit and

538
00:25:04,520 --> 00:25:05,900
this says I'm gonna take her of course

539
00:25:05,900 --> 00:25:07,790
is something that you always do so we

540
00:25:07,790 --> 00:25:09,230
want to make this as painless as

541
00:25:09,230 --> 00:25:11,320
possible

542
00:25:11,710 --> 00:25:14,270
another thing is that if you're handing

543
00:25:14,270 --> 00:25:17,720
EGA parts usually you have your image on

544
00:25:17,720 --> 00:25:21,830
the left and you remove the PDA part so

545
00:25:21,830 --> 00:25:26,150
you can probe the pads right and it can

546
00:25:26,150 --> 00:25:29,510
be a bit challenging to visually know

547
00:25:29,510 --> 00:25:33,770
where what is in fact many of the

548
00:25:33,770 --> 00:25:35,929
package diagrams like you see here on

549
00:25:35,929 --> 00:25:38,990
the left are in some kind of table

550
00:25:38,990 --> 00:25:41,210
format England up here so we can treat

551
00:25:41,210 --> 00:25:44,679
it as an image and extract that table so

552
00:25:44,679 --> 00:25:47,240
we get this nice list and this is very

553
00:25:47,240 --> 00:25:48,980
easy for us to deal with we don't want

554
00:25:48,980 --> 00:25:50,390
to deal with images we want to deal with

555
00:25:50,390 --> 00:25:52,100
structured information that this is what

556
00:25:52,100 --> 00:25:54,950
we just need you know so then you can

557
00:25:54,950 --> 00:25:57,980
overlay that on on your PC beating each

558
00:25:57,980 --> 00:25:58,370
other

559
00:25:58,370 --> 00:26:03,770
fire away now other sources of

560
00:26:03,770 --> 00:26:05,360
information of course I was checking for

561
00:26:05,360 --> 00:26:07,429
reference manuals and ID's I mean I'm

562
00:26:07,429 --> 00:26:09,920
calling these out in particular because

563
00:26:09,920 --> 00:26:12,200
when we dump firmware later on we want

564
00:26:12,200 --> 00:26:14,380
to have is we want to have signatures

565
00:26:14,380 --> 00:26:17,780
function signatures we want to have

566
00:26:17,780 --> 00:26:20,300
definitions of you know types strikes

567
00:26:20,300 --> 00:26:25,790
all of that and someone who's designing

568
00:26:25,790 --> 00:26:27,200
the system needs to have that

569
00:26:27,200 --> 00:26:29,090
information so it must be someone of

570
00:26:29,090 --> 00:26:30,890
course some of this can be covered by a

571
00:26:30,890 --> 00:26:34,040
TA or a very very proprietary but at

572
00:26:34,040 --> 00:26:35,570
least we can get some hints or anyway

573
00:26:35,570 --> 00:26:38,600
just automatically just scraping all of

574
00:26:38,600 --> 00:26:43,190
that and most importantly matching the

575
00:26:43,190 --> 00:26:45,070
part number to tools that you can use

576
00:26:45,070 --> 00:26:47,240
debuggers as well what debugger do I

577
00:26:47,240 --> 00:26:49,190
need to dump it on work you know these

578
00:26:49,190 --> 00:26:50,540
are questions that you can answer

579
00:26:50,540 --> 00:26:56,570
automatically now there's some

580
00:26:56,570 --> 00:27:00,530
challenges with this of course we have

581
00:27:00,530 --> 00:27:01,850
four part numbers we know where the

582
00:27:01,850 --> 00:27:05,809
chips are this is all very nice but what

583
00:27:05,809 --> 00:27:11,000
we get is a bunch of clips and then many

584
00:27:11,000 --> 00:27:12,830
people say that you have to treat PDFs

585
00:27:12,830 --> 00:27:17,440
as images but I think

586
00:27:17,440 --> 00:27:20,529
you know you can you can do a lot of

587
00:27:20,529 --> 00:27:24,580
simple things that simplify your life a

588
00:27:24,580 --> 00:27:26,769
bit already just by using the structured

589
00:27:26,769 --> 00:27:28,690
information that's in the PDF and by

590
00:27:28,690 --> 00:27:31,840
using open source tools so you would

591
00:27:31,840 --> 00:27:33,970
convert it to come to a couple formats

592
00:27:33,970 --> 00:27:35,830
you would convert the PDF to images to

593
00:27:35,830 --> 00:27:37,600
text to HTML and that's something

594
00:27:37,600 --> 00:27:40,720
possible so then you can go on and

595
00:27:40,720 --> 00:27:43,029
define reg X entries for table of

596
00:27:43,029 --> 00:27:45,279
contents items and this is something

597
00:27:45,279 --> 00:27:49,389
that we're doing and then that you can

598
00:27:49,389 --> 00:27:54,700
see in the tool and the approach that we

599
00:27:54,700 --> 00:27:58,210
have we simply define a list of keywords

600
00:27:58,210 --> 00:28:00,519
that you want to know and really as an

601
00:28:00,519 --> 00:28:02,110
analyst this is what you do anyway you

602
00:28:02,110 --> 00:28:04,720
open up the PDF you control have jtech

603
00:28:04,720 --> 00:28:06,850
and then look for the information before

604
00:28:06,850 --> 00:28:08,919
so again this is about getting rid of

605
00:28:08,919 --> 00:28:11,200
the unnecessary information and focusing

606
00:28:11,200 --> 00:28:13,690
on what care about so this way already

607
00:28:13,690 --> 00:28:16,120
you can identify chapters and the tears

608
00:28:16,120 --> 00:28:18,279
that are relevant and put them folders

609
00:28:18,279 --> 00:28:20,409
we extract these chapters so you don't

610
00:28:20,409 --> 00:28:22,240
have to scroll through a document that

611
00:28:22,240 --> 00:28:25,000
already save some time again we want to

612
00:28:25,000 --> 00:28:27,970
keep it simple and and builds will have

613
00:28:27,970 --> 00:28:31,450
some kind of knowledge base and some

614
00:28:31,450 --> 00:28:34,509
framework in which we can repeat and

615
00:28:34,509 --> 00:28:37,710
refine our analysis

616
00:28:38,400 --> 00:28:39,900
first there's issues you need to be very

617
00:28:39,900 --> 00:28:42,000
defensive in your column you need to

618
00:28:42,000 --> 00:28:45,240
assume that pdfs can be very different

619
00:28:45,240 --> 00:28:46,860
they can contain scanned images they

620
00:28:46,860 --> 00:28:49,320
contain basically anything and they can

621
00:28:49,320 --> 00:28:51,450
also be very huge so the tooling for

622
00:28:51,450 --> 00:28:54,000
this unfortunately using isn't all that

623
00:28:54,000 --> 00:28:59,400
great again it's about getting started

624
00:28:59,400 --> 00:29:02,760
you start scraping data sheets put it in

625
00:29:02,760 --> 00:29:06,150
a folder or whatever and then you match

626
00:29:06,150 --> 00:29:10,650
attax of tables content means to extract

627
00:29:10,650 --> 00:29:12,510
some information that from there and

628
00:29:12,510 --> 00:29:13,260
you'll be fine

629
00:29:13,260 --> 00:29:18,780
this is one of an iterative process now

630
00:29:18,780 --> 00:29:22,820
let's talk about the other approaches

631
00:29:22,820 --> 00:29:26,700
you can combine it everything I talked

632
00:29:26,700 --> 00:29:29,670
about until now it was more about things

633
00:29:29,670 --> 00:29:31,350
you can do essentially for free because

634
00:29:31,350 --> 00:29:32,970
taking images doesn't really take much

635
00:29:32,970 --> 00:29:35,220
time and pricing sometimes doesn't

636
00:29:35,220 --> 00:29:38,490
either but if you do have to have a

637
00:29:38,490 --> 00:29:40,230
higher level of teacher of course you

638
00:29:40,230 --> 00:29:41,940
will combine this with techniques such

639
00:29:41,940 --> 00:29:47,160
as Denari and in delivering you would

640
00:29:47,160 --> 00:29:49,410
first have remove all the components on

641
00:29:49,410 --> 00:29:54,300
a PCB and and then what you're basically

642
00:29:54,300 --> 00:29:56,070
interested in is the necklace like which

643
00:29:56,070 --> 00:29:58,860
pad connects to which other blackboard

644
00:29:58,860 --> 00:30:01,590
which line of copper represent which net

645
00:30:01,590 --> 00:30:04,050
like what is connected and from there on

646
00:30:04,050 --> 00:30:06,480
you can have strength higher and say

647
00:30:06,480 --> 00:30:08,610
okay this connected this component is

648
00:30:08,610 --> 00:30:10,440
mounted on this path and because of that

649
00:30:10,440 --> 00:30:14,940
that's connected to this network if you

650
00:30:14,940 --> 00:30:19,080
cut a PCB and look at it from the side

651
00:30:19,080 --> 00:30:20,880
it would look like this you have your

652
00:30:20,880 --> 00:30:22,860
own solder mask and green in this case

653
00:30:22,860 --> 00:30:25,770
and you have exposed parents like this

654
00:30:25,770 --> 00:30:28,470
and you have drills which are connected

655
00:30:28,470 --> 00:30:30,840
through like this this is a four layer

656
00:30:30,840 --> 00:30:34,050
stack up and we're interested in the

657
00:30:34,050 --> 00:30:36,000
copper layers because that's nets were

658
00:30:36,000 --> 00:30:38,250
conducting in a pipe that's it's all the

659
00:30:38,250 --> 00:30:40,080
traces of forming connections between

660
00:30:40,080 --> 00:30:42,180
your components so what you would do is

661
00:30:42,180 --> 00:30:45,480
you would you would remove first solder

662
00:30:45,480 --> 00:30:47,310
mask and any components there on the top

663
00:30:47,310 --> 00:30:49,200
and you take an image

664
00:30:49,200 --> 00:30:53,850
in the next step you remove this plus

665
00:30:53,850 --> 00:30:56,430
the substrate that separates the copper

666
00:30:56,430 --> 00:30:58,320
layer from the other and take another

667
00:30:58,320 --> 00:30:59,940
image and you repeat this process until

668
00:30:59,940 --> 00:31:05,700
there are no in normal layers left this

669
00:31:05,700 --> 00:31:07,880
is something that I would consider

670
00:31:07,880 --> 00:31:11,970
doable but again in our opinion you

671
00:31:11,970 --> 00:31:15,120
don't need it as much because many

672
00:31:15,120 --> 00:31:16,950
projects are simple and you care more

673
00:31:16,950 --> 00:31:20,790
about having you know you need to

674
00:31:20,790 --> 00:31:23,280
download a anyway located but if

675
00:31:23,280 --> 00:31:25,530
you have very complex ports or very

676
00:31:25,530 --> 00:31:27,690
small parts that are hard to handle this

677
00:31:27,690 --> 00:31:31,980
can be extremely distal another thing

678
00:31:31,980 --> 00:31:35,790
you can do is x-ray of course which if

679
00:31:35,790 --> 00:31:38,610
you have an x-ray machine can be very

680
00:31:38,610 --> 00:31:41,250
nice if you don't have an explanation of

681
00:31:41,250 --> 00:31:43,590
course this this is just not doable

682
00:31:43,590 --> 00:31:46,050
while delayering you can use tools you

683
00:31:46,050 --> 00:31:48,420
can use fiberglass brushes you know you

684
00:31:48,420 --> 00:31:51,030
can sort of homebrew that but for an

685
00:31:51,030 --> 00:31:53,310
x-ray it is fine if you either have an

686
00:31:53,310 --> 00:31:56,310
x-ray machine but if you have one of

687
00:31:56,310 --> 00:31:58,560
course especially tool airports are very

688
00:31:58,560 --> 00:32:00,570
easy to reverse and with this you can

689
00:32:00,570 --> 00:32:02,640
also get a full necklace now we have

690
00:32:02,640 --> 00:32:05,490
experiencing in delayering and with

691
00:32:05,490 --> 00:32:09,570
x-ray and usually we don't end up using

692
00:32:09,570 --> 00:32:12,450
it much but just so you know it's there

693
00:32:12,450 --> 00:32:14,160
and there's also very very uh

694
00:32:14,160 --> 00:32:17,130
sophisticated x-ray technologies with

695
00:32:17,130 --> 00:32:19,740
are not only two-dimensional but freedom

696
00:32:19,740 --> 00:32:21,810
dimensional but again the goal for these

697
00:32:21,810 --> 00:32:23,520
two methods is to get the Netflix like

698
00:32:23,520 --> 00:32:25,590
it won't it won't tear apart numbers

699
00:32:25,590 --> 00:32:30,870
right so it's it's a bit different yeah

700
00:32:30,870 --> 00:32:32,730
and then also what some people do is

701
00:32:32,730 --> 00:32:35,100
when they x-ray chips you can see the

702
00:32:35,100 --> 00:32:37,950
silicon sticking out a bit here and you

703
00:32:37,950 --> 00:32:39,780
can see where it is how it is bonded to

704
00:32:39,780 --> 00:32:41,940
the pins through the wires and that's

705
00:32:41,940 --> 00:32:44,160
also a way of how we could deal with a

706
00:32:44,160 --> 00:32:47,760
custom chip but again your mileage may

707
00:32:47,760 --> 00:32:50,720
vary and this is a whole

708
00:32:50,730 --> 00:32:55,320
um also there's flying protests I know

709
00:32:55,320 --> 00:32:57,350
that some people are looking into this

710
00:32:57,350 --> 00:33:01,260
basically any manufacturer for PCBs has

711
00:33:01,260 --> 00:33:03,060
one of these machines that just has

712
00:33:03,060 --> 00:33:06,120
these needles that there are position on

713
00:33:06,120 --> 00:33:09,150
the tap on the pads and ahs connectivity

714
00:33:09,150 --> 00:33:12,030
between one head and the other so in a

715
00:33:12,030 --> 00:33:16,740
way this is like a multimeter on

716
00:33:16,740 --> 00:33:18,690
steroids because we you know they can

717
00:33:18,690 --> 00:33:20,220
measure component values as well but

718
00:33:20,220 --> 00:33:21,870
it's arcing so you don't have to do it

719
00:33:21,870 --> 00:33:22,490
like that

720
00:33:22,490 --> 00:33:24,810
this is really nice but again you need

721
00:33:24,810 --> 00:33:28,700
to have some kind of equipment like this

722
00:33:28,760 --> 00:33:33,330
now your question is probably where do I

723
00:33:33,330 --> 00:33:35,910
actually start and we can tell to say

724
00:33:35,910 --> 00:33:37,880
that we will open source some of this

725
00:33:37,880 --> 00:33:39,900
basically we have tools for chip

726
00:33:39,900 --> 00:33:41,940
detection chip identification and

727
00:33:41,940 --> 00:33:46,190
docking document handling or gathering

728
00:33:46,190 --> 00:33:48,510
anyway the very first step is always

729
00:33:48,510 --> 00:33:50,730
getting your piece of the stage setup

730
00:33:50,730 --> 00:33:53,400
just make some room then and put some

731
00:33:53,400 --> 00:33:56,250
nice light you know whatever and started

732
00:33:56,250 --> 00:33:58,980
picking pick taking pages of PCB because

733
00:33:58,980 --> 00:34:01,320
in the end you will take the pictures

734
00:34:01,320 --> 00:34:04,340
anyway so why not make them look nice

735
00:34:04,340 --> 00:34:06,900
you know you have to take them anyway

736
00:34:06,900 --> 00:34:10,050
for writing a writ for memorizing if you

737
00:34:10,050 --> 00:34:11,520
if you take a vacation then you come

738
00:34:11,520 --> 00:34:13,170
back so it's always good to have a kind

739
00:34:13,170 --> 00:34:16,830
of that notation you can send me a

740
00:34:16,830 --> 00:34:18,270
message if you're interested in hearing

741
00:34:18,270 --> 00:34:20,070
about these tools we follow all the

742
00:34:20,070 --> 00:34:22,260
philosophy that one tool to do should do

743
00:34:22,260 --> 00:34:25,350
one job you know just very well so

744
00:34:25,350 --> 00:34:27,179
there's going to be many small tools

745
00:34:27,179 --> 00:34:28,770
that take care of the individual steps

746
00:34:28,770 --> 00:34:32,580
that I mentioned but also based on this

747
00:34:32,580 --> 00:34:34,650
and also the paper that we published

748
00:34:34,650 --> 00:34:38,280
about this you could also start into

749
00:34:38,280 --> 00:34:40,770
your own and I'd love to hear about your

750
00:34:40,770 --> 00:34:42,960
experiences if any of you have maybe

751
00:34:42,960 --> 00:34:44,909
done this already I'd be quite

752
00:34:44,909 --> 00:34:50,460
interested to in touch now this was my

753
00:34:50,460 --> 00:34:53,610
presentation on reversing PCBs and you

754
00:34:53,610 --> 00:34:55,949
can follow me here on the socials and I

755
00:34:55,949 --> 00:34:57,540
think this is the time where we take

756
00:34:57,540 --> 00:35:01,290
questions now thank you thank you very

757
00:35:01,290 --> 00:35:04,110
much for your presentation and now it's

758
00:35:04,110 --> 00:35:04,830
time for

759
00:35:04,830 --> 00:35:09,000
Q&A so please send any questions that

760
00:35:09,000 --> 00:35:11,970
you have in the chat and Freddie will

761
00:35:11,970 --> 00:35:14,400
answer them right now let's give people

762
00:35:14,400 --> 00:35:17,070
a few minutes to type the question in

763
00:35:17,070 --> 00:35:20,460
and you can open the chat and see if

764
00:35:20,460 --> 00:35:22,260
there is any questions that were sent to

765
00:35:22,260 --> 00:35:23,070
you privately

766
00:35:23,070 --> 00:35:29,940
you can check as well and yeah is it

767
00:35:29,940 --> 00:35:32,369
fine if I we good question yeah please

768
00:35:32,369 --> 00:35:34,560
read the question and one question from

769
00:35:34,560 --> 00:35:38,220
the group check was if you can create a

770
00:35:38,220 --> 00:35:40,920
net list this way without delay and the

771
00:35:40,920 --> 00:35:42,589
answer is yes

772
00:35:42,589 --> 00:35:48,990
in that case you can even okay there's

773
00:35:48,990 --> 00:35:50,339
basically two ways you can do it you can

774
00:35:50,339 --> 00:35:52,470
probe every connection by hands or using

775
00:35:52,470 --> 00:35:54,839
a fine proposition and then you know

776
00:35:54,839 --> 00:35:56,369
which pads connects because they always

777
00:35:56,369 --> 00:35:59,010
have to be on two sides of no matter how

778
00:35:59,010 --> 00:36:01,770
many layers the PCB has they'll always

779
00:36:01,770 --> 00:36:03,960
terminate on the front or the back so

780
00:36:03,960 --> 00:36:05,369
that way you can test and then where you

781
00:36:05,369 --> 00:36:07,680
get a method and the other approach is

782
00:36:07,680 --> 00:36:11,339
to remove all the components and to look

783
00:36:11,339 --> 00:36:15,900
at the traces themselves this is this is

784
00:36:15,900 --> 00:36:17,099
something we've looked at as well as

785
00:36:17,099 --> 00:36:21,540
ports for two layer boards right and yes

786
00:36:21,540 --> 00:36:24,089
oh so those are two very cheap ways you

787
00:36:24,089 --> 00:36:26,130
can get about this even though again

788
00:36:26,130 --> 00:36:30,780
many times you don't need pockets okay

789
00:36:30,780 --> 00:36:33,930
there there is another question from

790
00:36:33,930 --> 00:36:36,900
Bowman is there an actual database where

791
00:36:36,900 --> 00:36:41,240
you can fetch many data sheets at once

792
00:36:42,260 --> 00:36:44,430
this is tough

793
00:36:44,430 --> 00:36:47,040
there are databases which index with the

794
00:36:47,040 --> 00:36:48,990
issues and I'm sure that you know them

795
00:36:48,990 --> 00:36:53,730
already I think a problem like this and

796
00:36:53,730 --> 00:36:57,060
also for us academically or commercially

797
00:36:57,060 --> 00:36:59,099
or as a community it's hard to share

798
00:36:59,099 --> 00:37:01,589
data sheets because there's some IT

799
00:37:01,589 --> 00:37:04,680
involved and I think no one really wants

800
00:37:04,680 --> 00:37:07,710
to take the risk in and publish

801
00:37:07,710 --> 00:37:08,760
something that they're not a lot

802
00:37:08,760 --> 00:37:11,660
published I think this is a big issue

803
00:37:11,660 --> 00:37:14,730
even though that other types of

804
00:37:14,730 --> 00:37:17,670
information are aggregated IDs for

805
00:37:17,670 --> 00:37:18,420
itself

806
00:37:18,420 --> 00:37:21,000
they just given but unfortunately I

807
00:37:21,000 --> 00:37:25,770
myself haven't found this one this one

808
00:37:25,770 --> 00:37:27,660
site or company that keeps it just

809
00:37:27,660 --> 00:37:32,059
everything let me know if you do them

810
00:37:32,059 --> 00:37:38,069
cannibal okay

811
00:37:38,069 --> 00:37:41,780
seems like we got all the questions I

812
00:37:41,780 --> 00:37:44,460
guess your presentation was already a

813
00:37:44,460 --> 00:37:47,460
really detailed so you answered all

814
00:37:47,460 --> 00:37:49,260
possible questions in your presentation

815
00:37:49,260 --> 00:37:51,450
so thank you again for joining us for

816
00:37:51,450 --> 00:37:54,630
this webinar and we hope to see you

817
00:37:54,630 --> 00:37:57,730
again at the hard drive soon

818
00:37:57,730 --> 00:38:03,980
[Music]

