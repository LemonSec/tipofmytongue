1
00:00:03,280 --> 00:00:05,839
thank you hello everyone

2
00:00:05,839 --> 00:00:07,839
some senior research associate from the

3
00:00:07,839 --> 00:00:09,280
university of cambridge and i do

4
00:00:09,280 --> 00:00:11,120
hardware security research for quite

5
00:00:11,120 --> 00:00:13,280
some time test microcontrollers smart

6
00:00:13,280 --> 00:00:14,639
cards fpga

7
00:00:14,639 --> 00:00:16,560
system on chips and i have brought

8
00:00:16,560 --> 00:00:18,800
knowledge to various background from

9
00:00:18,800 --> 00:00:21,119
chemistry to computer science

10
00:00:21,119 --> 00:00:24,160
and my research interest is

11
00:00:24,160 --> 00:00:25,760
trying to finding

12
00:00:25,760 --> 00:00:27,680
real solutions to impossible problems

13
00:00:27,680 --> 00:00:29,359
developing new attack technologies and

14
00:00:29,359 --> 00:00:31,920
testing challenging hardware devices

15
00:00:31,920 --> 00:00:34,640
so in the past i've found lots of

16
00:00:34,640 --> 00:00:36,719
problems or sometimes even creative

17
00:00:36,719 --> 00:00:39,040
problems for industry the first one was

18
00:00:39,040 --> 00:00:41,680
the optical fault injection attacks that

19
00:00:41,680 --> 00:00:44,719
still um

20
00:00:44,719 --> 00:00:47,120
many manufacturers are trying to defeat

21
00:00:47,120 --> 00:00:50,000
and approve data remnants not only

22
00:00:50,000 --> 00:00:52,559
uh exist in sram but also in e from a

23
00:00:52,559 --> 00:00:55,199
flash demonstrated that combines attacks

24
00:00:55,199 --> 00:00:57,280
are more powerful and then

25
00:00:57,280 --> 00:00:59,520
managed to extract the esk from using

26
00:00:59,520 --> 00:01:01,520
weapon attacks and

27
00:01:01,520 --> 00:01:04,239
found backdoor in in military fpga and

28
00:01:04,239 --> 00:01:07,040
proofed fpdi fbi run with impossible

29
00:01:07,040 --> 00:01:09,920
nand miriam on iphone and

30
00:01:09,920 --> 00:01:11,600
demonstrated that evrom eproman flash

31
00:01:11,600 --> 00:01:13,600
could be read on the electron microscope

32
00:01:13,600 --> 00:01:15,040
and

33
00:01:15,040 --> 00:01:16,400
my uh

34
00:01:16,400 --> 00:01:18,640
latest presentation on

35
00:01:18,640 --> 00:01:20,240
how we i o

36
00:01:20,240 --> 00:01:22,320
that was virtual was about

37
00:01:22,320 --> 00:01:24,400
uh finding a

38
00:01:24,400 --> 00:01:26,640
backdoor through nvm vulnerability in

39
00:01:26,640 --> 00:01:29,680
ecc authentication device

40
00:01:29,680 --> 00:01:32,400
so why i present iron key today is

41
00:01:32,400 --> 00:01:34,240
because when you look at the package of

42
00:01:34,240 --> 00:01:37,439
the iron key device it says it's volts

43
00:01:37,439 --> 00:01:39,680
volt small secure flash drive

44
00:01:39,680 --> 00:01:41,920
and it's fib certified that means it can

45
00:01:41,920 --> 00:01:44,960
be sold to military and government users

46
00:01:44,960 --> 00:01:45,840
and

47
00:01:45,840 --> 00:01:47,840
it would also be a good candidate for

48
00:01:47,840 --> 00:01:49,920
our student hardware security practical

49
00:01:49,920 --> 00:01:52,240
because the the last device that

50
00:01:52,240 --> 00:01:54,560
we used was completely broken and that i

51
00:01:54,560 --> 00:01:57,200
presented last time at harvey iowa

52
00:01:57,200 --> 00:01:59,680
and also that was recently in use when a

53
00:01:59,680 --> 00:02:02,960
legitimate user was unable to find uh

54
00:02:02,960 --> 00:02:05,200
to remember the password and get access

55
00:02:05,200 --> 00:02:08,959
to cryptocurrency assets and

56
00:02:08,959 --> 00:02:10,800
there do exist public evaluations of

57
00:02:10,800 --> 00:02:13,200
various encrypted usb drives but not on

58
00:02:13,200 --> 00:02:14,400
iron key

59
00:02:14,400 --> 00:02:16,239
so it would be good to compare iron keys

60
00:02:16,239 --> 00:02:19,920
of our secure usb drives

61
00:02:19,920 --> 00:02:22,000
and also the results could help in

62
00:02:22,000 --> 00:02:24,000
mitigating the data leakages in the

63
00:02:24,000 --> 00:02:25,200
future

64
00:02:25,200 --> 00:02:27,840
and also if there are any secure chips

65
00:02:27,840 --> 00:02:30,480
inside that would be evaluated as well

66
00:02:30,480 --> 00:02:33,120
and so it would be a good target for to

67
00:02:33,120 --> 00:02:35,360
be curious what is inside because it's

68
00:02:35,360 --> 00:02:38,319
not easy to to get to the pcb inside

69
00:02:38,319 --> 00:02:39,840
those devices

70
00:02:39,840 --> 00:02:41,440
so that that's why i do reverse

71
00:02:41,440 --> 00:02:45,599
engineering or someone call it teardown

72
00:02:46,400 --> 00:02:49,040
so in encrypted usb flash drives

73
00:02:49,040 --> 00:02:51,120
evaluated as i mentioned there are some

74
00:02:51,120 --> 00:02:52,959
master thesis and presentation from

75
00:02:52,959 --> 00:02:55,810
google researchers but not on iron key

76
00:02:55,810 --> 00:02:57,360
[Music]

77
00:02:57,360 --> 00:02:59,519
and so i started

78
00:02:59,519 --> 00:03:01,680
testing iron key devices from one that

79
00:03:01,680 --> 00:03:04,319
was in my desk for quite some time

80
00:03:04,319 --> 00:03:05,440
because

81
00:03:05,440 --> 00:03:07,840
those devices are not very user friendly

82
00:03:07,840 --> 00:03:09,760
you have to fiddle around they're not

83
00:03:09,760 --> 00:03:10,640
working

84
00:03:10,640 --> 00:03:13,440
all operating systems and then i ordered

85
00:03:13,440 --> 00:03:15,680
few more devices on ebay and ordered

86
00:03:15,680 --> 00:03:18,080
some latest models and then i started

87
00:03:18,080 --> 00:03:20,159
looking at the encrypted drives from

88
00:03:20,159 --> 00:03:21,920
other manufacturers

89
00:03:21,920 --> 00:03:22,879
and

90
00:03:22,879 --> 00:03:24,400
i ended up

91
00:03:24,400 --> 00:03:26,799
actually looking at 26 different devices

92
00:03:26,799 --> 00:03:29,519
nine families of iron keys 15

93
00:03:29,519 --> 00:03:32,480
usb drives from other manufacturers and

94
00:03:32,480 --> 00:03:34,879
also i looked at

95
00:03:34,879 --> 00:03:37,840
cryptowarded devices and i tested usb

96
00:03:37,840 --> 00:03:41,840
controllers and secure chips inside

97
00:03:42,480 --> 00:03:44,480
so usb flash drives appeared on the

98
00:03:44,480 --> 00:03:46,560
market in the early 2000s

99
00:03:46,560 --> 00:03:49,680
and they were compact devices if decent

100
00:03:49,680 --> 00:03:50,959
storage

101
00:03:50,959 --> 00:03:53,439
but if you lose those devices anyone can

102
00:03:53,439 --> 00:03:55,280
access the data

103
00:03:55,280 --> 00:03:57,519
so that was the idea about

104
00:03:57,519 --> 00:04:00,159
behind i iron key corporation was

105
00:04:00,159 --> 00:04:01,920
developed in iron key

106
00:04:01,920 --> 00:04:03,040
and they

107
00:04:03,040 --> 00:04:05,439
released it in 2007

108
00:04:05,439 --> 00:04:08,239
so user data was always encrypted with

109
00:04:08,239 --> 00:04:13,680
asp 56 in cbc or xtc xts mode and ies

110
00:04:13,680 --> 00:04:15,439
itself was encrypted with the user

111
00:04:15,439 --> 00:04:17,839
password and never leaves the device and

112
00:04:17,839 --> 00:04:20,079
they limited the number of uh incorrect

113
00:04:20,079 --> 00:04:21,680
password attempts

114
00:04:21,680 --> 00:04:24,160
and also the user application that was

115
00:04:24,160 --> 00:04:26,560
communicated with the device was stored

116
00:04:26,560 --> 00:04:28,320
on a separate partition that appeared as

117
00:04:28,320 --> 00:04:31,840
cd-rom drive so it cannot be modified

118
00:04:31,840 --> 00:04:34,320
and also the communication between

119
00:04:34,320 --> 00:04:35,520
the

120
00:04:35,520 --> 00:04:38,880
software and the usb drive was encrypted

121
00:04:38,880 --> 00:04:41,199
it has lots of hardware features it has

122
00:04:41,199 --> 00:04:43,440
robust metal case

123
00:04:43,440 --> 00:04:45,759
which was tamper-proof and waterproof

124
00:04:45,759 --> 00:04:47,360
and the inner part of the case was

125
00:04:47,360 --> 00:04:50,320
ported to epoxy to prevent easy access

126
00:04:50,320 --> 00:04:53,040
to the pcb and they use specialized usb

127
00:04:53,040 --> 00:04:54,639
controller

128
00:04:54,639 --> 00:04:57,360
the hardware he has encryption

129
00:04:57,360 --> 00:04:59,280
and for

130
00:04:59,280 --> 00:05:01,759
secure storage of aes key and password

131
00:05:01,759 --> 00:05:04,000
verification is used specialized

132
00:05:04,000 --> 00:05:05,280
security

133
00:05:05,280 --> 00:05:09,199
and also reliable flash memory storage

134
00:05:09,199 --> 00:05:10,400
so a few

135
00:05:10,400 --> 00:05:12,479
what's about the iron key history so it

136
00:05:12,479 --> 00:05:14,560
was the internet security and privacy

137
00:05:14,560 --> 00:05:15,520
company

138
00:05:15,520 --> 00:05:17,120
from late 90s

139
00:05:17,120 --> 00:05:20,000
it developed a iron key device between

140
00:05:20,000 --> 00:05:23,280
2005 2007 and for that they attracted

141
00:05:23,280 --> 00:05:25,280
quite a lot of funds from us government

142
00:05:25,280 --> 00:05:26,400
and

143
00:05:26,400 --> 00:05:28,639
private investors

144
00:05:28,639 --> 00:05:30,400
they aimed at military government and

145
00:05:30,400 --> 00:05:32,479
corporate users and that's why they

146
00:05:32,479 --> 00:05:34,960
certified their devices the fibs to

147
00:05:34,960 --> 00:05:38,960
level three it has a robust case and

148
00:05:38,960 --> 00:05:40,960
is relied on the security for aes

149
00:05:40,960 --> 00:05:42,240
encryption

150
00:05:42,240 --> 00:05:44,960
first device was released in 2007

151
00:05:44,960 --> 00:05:47,039
however it was only certified to level

152
00:05:47,039 --> 00:05:48,000
two

153
00:05:48,000 --> 00:05:50,560
and the next revision was in 2008 the

154
00:05:50,560 --> 00:05:53,440
morobus case modified hardware

155
00:05:53,440 --> 00:05:56,319
then the improved version was

156
00:05:56,319 --> 00:05:59,120
released next year the three new devices

157
00:05:59,120 --> 00:06:01,120
and those devices were finally certified

158
00:06:01,120 --> 00:06:02,639
to level three

159
00:06:02,639 --> 00:06:05,440
however in 2011 image corporation board

160
00:06:05,440 --> 00:06:07,199
the iron key business

161
00:06:07,199 --> 00:06:10,240
and since that that time it was sold at

162
00:06:10,240 --> 00:06:13,680
a condemnation name

163
00:06:14,319 --> 00:06:16,080
so emission preparation was already a

164
00:06:16,080 --> 00:06:18,639
storage device manufacturer and right

165
00:06:18,639 --> 00:06:20,880
before buying the iron key they acquired

166
00:06:20,880 --> 00:06:22,720
in another

167
00:06:22,720 --> 00:06:24,160
um

168
00:06:24,160 --> 00:06:27,120
company mxi security and

169
00:06:27,120 --> 00:06:28,880
that

170
00:06:28,880 --> 00:06:29,600
had

171
00:06:29,600 --> 00:06:31,280
some secure devices

172
00:06:31,280 --> 00:06:33,520
already on the market and those devices

173
00:06:33,520 --> 00:06:38,000
were sold as um defender f-100 and f-150

174
00:06:38,000 --> 00:06:40,319
so invasion didn't invent anything new

175
00:06:40,319 --> 00:06:42,479
they just renamed those devices to iron

176
00:06:42,479 --> 00:06:45,919
key f-100 and 150 and they were already

177
00:06:45,919 --> 00:06:48,800
certified to level three and then they

178
00:06:48,800 --> 00:06:52,400
later they came up with f200 with a

179
00:06:52,400 --> 00:06:53,520
biometric

180
00:06:53,520 --> 00:06:55,120
identification

181
00:06:55,120 --> 00:06:58,319
and in 2013 they um

182
00:06:58,319 --> 00:07:00,160
brought two new devices with improved

183
00:07:00,160 --> 00:07:02,400
characteristics and also certified to

184
00:07:02,400 --> 00:07:04,000
level three

185
00:07:04,000 --> 00:07:05,280
however

186
00:07:05,280 --> 00:07:07,440
a year later they decided to bring a

187
00:07:07,440 --> 00:07:09,520
budgetary version of iron key device to

188
00:07:09,520 --> 00:07:11,919
the market and surprisingly that one had

189
00:07:11,919 --> 00:07:14,160
a plastic case and no certification at

190
00:07:14,160 --> 00:07:15,120
all

191
00:07:15,120 --> 00:07:17,599
and then in 2015 they finally brought

192
00:07:17,599 --> 00:07:20,960
usb 3 device that was quite rate well

193
00:07:20,960 --> 00:07:22,880
late for the market because by that time

194
00:07:22,880 --> 00:07:24,960
for several years

195
00:07:24,960 --> 00:07:27,120
other competitors were already selling

196
00:07:27,120 --> 00:07:31,280
usb 3 devices to normal storage so

197
00:07:31,280 --> 00:07:33,759
in that respect iron key was quite slow

198
00:07:33,759 --> 00:07:34,880
devices

199
00:07:34,880 --> 00:07:36,880
and this particular device

200
00:07:36,880 --> 00:07:38,800
was the fastest usb

201
00:07:38,800 --> 00:07:41,360
encrypted device on the market

202
00:07:41,360 --> 00:07:44,560
however still in 2016 they decided to

203
00:07:44,560 --> 00:07:46,800
sell iron key business

204
00:07:46,800 --> 00:07:47,680
and

205
00:07:47,680 --> 00:07:49,599
and that was split between data locker

206
00:07:49,599 --> 00:07:52,080
and kingston

207
00:07:52,080 --> 00:07:55,039
so kingston digital was the manufacturer

208
00:07:55,039 --> 00:07:56,800
and distributor of memory products and

209
00:07:56,800 --> 00:07:58,960
part of instant technology

210
00:07:58,960 --> 00:07:59,680
and

211
00:07:59,680 --> 00:08:02,240
by the time they acquired iron key

212
00:08:02,240 --> 00:08:04,879
business they already had their own line

213
00:08:04,879 --> 00:08:07,440
of encrypted usb flash drives so they

214
00:08:07,440 --> 00:08:10,319
started selling them from 2010

215
00:08:10,319 --> 00:08:11,039
the

216
00:08:11,039 --> 00:08:13,599
various devices called the data tracker

217
00:08:13,599 --> 00:08:16,160
the data traveler locker all privacy

218
00:08:16,160 --> 00:08:17,440
4000

219
00:08:17,440 --> 00:08:18,240
and

220
00:08:18,240 --> 00:08:22,240
only this one was certified to level two

221
00:08:22,240 --> 00:08:24,879
and then in 2015 they even brought the

222
00:08:24,879 --> 00:08:28,160
usb 3 devices to the market

223
00:08:28,160 --> 00:08:32,240
one certified to phipps 197 and another

224
00:08:32,240 --> 00:08:34,159
one to level three

225
00:08:34,159 --> 00:08:36,958
so that was directly competing with um

226
00:08:36,958 --> 00:08:38,880
iron key device

227
00:08:38,880 --> 00:08:41,679
and then after acquisition of iron key

228
00:08:41,679 --> 00:08:43,360
they

229
00:08:43,360 --> 00:08:45,760
they renamed this device to iron key

230
00:08:45,760 --> 00:08:47,440
d300

231
00:08:47,440 --> 00:08:48,240
and

232
00:08:48,240 --> 00:08:49,200
that

233
00:08:49,200 --> 00:08:51,680
already had the level 3 certification

234
00:08:51,680 --> 00:08:54,160
and was already approved by nato that

235
00:08:54,160 --> 00:08:55,680
means they can sell it to military

236
00:08:55,680 --> 00:08:57,200
people

237
00:08:57,200 --> 00:08:59,600
and from that time they started selling

238
00:08:59,600 --> 00:09:02,880
uh iron key devices under kingston name

239
00:09:02,880 --> 00:09:05,360
and in 2018 the latest model of iron key

240
00:09:05,360 --> 00:09:08,800
device t300s was brought to the market

241
00:09:08,800 --> 00:09:11,200
with improved security features and

242
00:09:11,200 --> 00:09:12,959
certified

243
00:09:12,959 --> 00:09:14,480
so at the moment there are only two

244
00:09:14,480 --> 00:09:16,560
devices

245
00:09:16,560 --> 00:09:22,040
installed on the market s1000 and d300s

246
00:09:22,240 --> 00:09:23,680
there are other manufacturers of

247
00:09:23,680 --> 00:09:24,800
encrypted

248
00:09:24,800 --> 00:09:27,519
usb flash drives data locker have their

249
00:09:27,519 --> 00:09:30,560
devices and some even certified to fix

250
00:09:30,560 --> 00:09:31,760
level three

251
00:09:31,760 --> 00:09:34,880
integral have certified devices mxi

252
00:09:34,880 --> 00:09:37,040
security was selling devices until they

253
00:09:37,040 --> 00:09:40,240
were acquired by emotion safe access

254
00:09:40,240 --> 00:09:42,480
high storage have devices with numerical

255
00:09:42,480 --> 00:09:45,200
keypad and weathering and also certified

256
00:09:45,200 --> 00:09:47,120
to fits and there are other

257
00:09:47,120 --> 00:09:49,920
manufacturers

258
00:09:56,240 --> 00:09:58,720
if we try to compare this

259
00:09:58,720 --> 00:10:01,120
certification levels of those devices

260
00:10:01,120 --> 00:10:02,320
there are two

261
00:10:02,320 --> 00:10:05,200
approaches for uh certified hardware the

262
00:10:05,200 --> 00:10:07,279
one is the fifth

263
00:10:07,279 --> 00:10:10,959
certification and that has uh two widely

264
00:10:10,959 --> 00:10:13,760
used standards phipps 197 is only about

265
00:10:13,760 --> 00:10:16,839
the encryption used and

266
00:10:16,839 --> 00:10:19,200
140-2 is

267
00:10:19,200 --> 00:10:21,920
looking at the physical protection level

268
00:10:21,920 --> 00:10:24,079
on top of the encryption and there are

269
00:10:24,079 --> 00:10:26,880
common criteria assurance levels but

270
00:10:26,880 --> 00:10:30,320
those are mainly applied to the

271
00:10:30,320 --> 00:10:33,600
secure hardware for example um

272
00:10:33,600 --> 00:10:36,320
protection chips the semiconductor chips

273
00:10:36,320 --> 00:10:37,360
that

274
00:10:37,360 --> 00:10:39,839
store secret or smart cards and they

275
00:10:39,839 --> 00:10:42,320
have different levels so the higher the

276
00:10:42,320 --> 00:10:44,800
level the better the protection so if we

277
00:10:44,800 --> 00:10:46,800
compare those devices

278
00:10:46,800 --> 00:10:47,680
so

279
00:10:47,680 --> 00:10:50,320
from the beginning they both had a high

280
00:10:50,320 --> 00:10:51,760
level of um

281
00:10:51,760 --> 00:10:54,480
certification but then the

282
00:10:54,480 --> 00:10:56,720
fib certification went up for most of

283
00:10:56,720 --> 00:11:00,399
the devices but for some devices there

284
00:11:00,399 --> 00:11:02,959
were no secure chips used so the the

285
00:11:02,959 --> 00:11:05,200
protection level in terms of secure

286
00:11:05,200 --> 00:11:07,760
hardware drop down and if you look at

287
00:11:07,760 --> 00:11:10,720
the two latest devices that are sold on

288
00:11:10,720 --> 00:11:12,079
the market

289
00:11:12,079 --> 00:11:14,800
so the one does have the

290
00:11:14,800 --> 00:11:17,040
cpu chip and

291
00:11:17,040 --> 00:11:19,360
certification but another one does not

292
00:11:19,360 --> 00:11:21,920
have any security so it might be easier

293
00:11:21,920 --> 00:11:25,040
to to break it

294
00:11:25,040 --> 00:11:27,600
so as i mentioned uh iron key devices

295
00:11:27,600 --> 00:11:30,399
are not easy to

296
00:11:30,399 --> 00:11:32,560
to start tearing down because first you

297
00:11:32,560 --> 00:11:34,320
have to

298
00:11:34,320 --> 00:11:36,720
bypass the robust metal case and usually

299
00:11:36,720 --> 00:11:37,680
for that

300
00:11:37,680 --> 00:11:39,519
you would have to cut it with mechanical

301
00:11:39,519 --> 00:11:41,360
tools

302
00:11:41,360 --> 00:11:43,120
and that of course will leave temp

303
00:11:43,120 --> 00:11:46,720
evidence but then you end up facing the

304
00:11:46,720 --> 00:11:49,680
whole pcp quantity into epoxy

305
00:11:49,680 --> 00:11:51,519
compound

306
00:11:51,519 --> 00:11:53,839
so you have to somehow remove it you can

307
00:11:53,839 --> 00:11:56,560
try mechanical methods of

308
00:11:56,560 --> 00:11:58,880
applying forces but very likely you will

309
00:11:58,880 --> 00:12:01,600
end up damaging the pcb and this is

310
00:12:01,600 --> 00:12:04,560
because the epoxy will stick to the

311
00:12:04,560 --> 00:12:06,800
components and integrated circuits

312
00:12:06,800 --> 00:12:10,000
better than to the pcb so even the

313
00:12:10,000 --> 00:12:12,320
components themselves will be

314
00:12:12,320 --> 00:12:14,240
tiered apart so for example the bga

315
00:12:14,240 --> 00:12:17,360
package will be broken at the share line

316
00:12:17,360 --> 00:12:19,920
between the package and the substrate

317
00:12:19,920 --> 00:12:22,399
pcb

318
00:12:22,639 --> 00:12:25,200
so what works bad is thermal methods

319
00:12:25,200 --> 00:12:27,519
because epoxy loses strength at about

320
00:12:27,519 --> 00:12:32,240
150 degrees if some compo

321
00:12:34,240 --> 00:12:35,360
epoxy

322
00:12:35,360 --> 00:12:37,839
compounds become soft like rubber and

323
00:12:37,839 --> 00:12:40,160
some becomes brittle and could be broken

324
00:12:40,160 --> 00:12:42,959
different knife needs a lot of tweezers

325
00:12:42,959 --> 00:12:44,560
but of course there's a danger of

326
00:12:44,560 --> 00:12:47,279
breaking off the pcb components on the

327
00:12:47,279 --> 00:12:49,680
solder them so you have to carefully

328
00:12:49,680 --> 00:12:51,279
remove it and for that for example you

329
00:12:51,279 --> 00:12:53,120
can use an uh

330
00:12:53,120 --> 00:12:55,519
soldering iron

331
00:12:55,519 --> 00:12:59,040
tip to carefully uh poke uh the epoxy

332
00:12:59,040 --> 00:13:00,480
for

333
00:13:00,480 --> 00:13:03,440
for for quite some time so that's a long

334
00:13:03,440 --> 00:13:05,200
and tedious process but in the end you

335
00:13:05,200 --> 00:13:07,839
will get the full access to the pcb

336
00:13:07,839 --> 00:13:10,160
components and if you do it carefully

337
00:13:10,160 --> 00:13:12,000
the device will still be fully

338
00:13:12,000 --> 00:13:14,240
operational but of course that would

339
00:13:14,240 --> 00:13:16,959
take a long time and some people are

340
00:13:16,959 --> 00:13:18,720
quite lazy so they would

341
00:13:18,720 --> 00:13:21,120
prefer much more efficient ways that we

342
00:13:21,120 --> 00:13:21,920
can

343
00:13:21,920 --> 00:13:23,839
for example throw the device

344
00:13:23,839 --> 00:13:25,760
into something and then come later and

345
00:13:25,760 --> 00:13:26,959
it will be

346
00:13:26,959 --> 00:13:29,600
fully cleared up and there do exist some

347
00:13:29,600 --> 00:13:31,200
methods to do it

348
00:13:31,200 --> 00:13:33,279
you can use chemical methods so because

349
00:13:33,279 --> 00:13:35,600
epoxy is not good for harsh environment

350
00:13:35,600 --> 00:13:38,160
it's corroded by acids alkalines organic

351
00:13:38,160 --> 00:13:41,040
solvents and even hot water

352
00:13:41,040 --> 00:13:43,440
and if you combine methods that could

353
00:13:43,440 --> 00:13:45,760
bring better results so what you do is

354
00:13:45,760 --> 00:13:46,839
you throw

355
00:13:46,839 --> 00:13:50,720
the device in into certain chemicals and

356
00:13:50,720 --> 00:13:53,920
after 24 hours the half of the epoxy

357
00:13:53,920 --> 00:13:56,560
will be removed and after 48 hours you

358
00:13:56,560 --> 00:13:59,360
will end up with lots of mess and a

359
00:13:59,360 --> 00:14:01,600
completely clear device that is fully

360
00:14:01,600 --> 00:14:03,199
functional

361
00:14:03,199 --> 00:14:05,120
but you have to be careful because the

362
00:14:05,120 --> 00:14:07,839
ic packages and also the pcb

363
00:14:07,839 --> 00:14:10,000
also contain epoxy itself

364
00:14:10,000 --> 00:14:12,079
part of the fabrication so they could be

365
00:14:12,079 --> 00:14:15,719
affected as well

366
00:14:16,079 --> 00:14:17,760
so there do exist other methods of

367
00:14:17,760 --> 00:14:20,079
removing the epoxy like laser ablation

368
00:14:20,079 --> 00:14:22,639
because the laser cut is used to mark

369
00:14:22,639 --> 00:14:24,160
the components

370
00:14:24,160 --> 00:14:26,320
plasma methods could be used and uh

371
00:14:26,320 --> 00:14:29,040
widely used in fatal analysis to

372
00:14:29,040 --> 00:14:30,800
remove

373
00:14:30,800 --> 00:14:32,880
epoxy material and you can combine

374
00:14:32,880 --> 00:14:36,160
methods for better results

375
00:14:36,160 --> 00:14:38,480
so the first iron key was relatively

376
00:14:38,480 --> 00:14:41,199
easy to open because uh for some reason

377
00:14:41,199 --> 00:14:42,639
they had a

378
00:14:42,639 --> 00:14:44,639
metal case consisting of two parts so

379
00:14:44,639 --> 00:14:49,360
you can see the lid on top it's easy to

380
00:14:50,079 --> 00:14:52,800
use a knife to lift it up and then the

381
00:14:52,800 --> 00:14:54,639
you can use pliers to

382
00:14:54,639 --> 00:14:57,839
move the internal part outside and then

383
00:14:57,839 --> 00:14:59,519
using thermal methods you remove the

384
00:14:59,519 --> 00:15:02,160
epoxy and get access to the components

385
00:15:02,160 --> 00:15:04,000
so on the pcb

386
00:15:04,000 --> 00:15:05,760
there is an um

387
00:15:05,760 --> 00:15:08,639
custom mark device called iron key the

388
00:15:08,639 --> 00:15:11,519
standard nut flash and an admiral um

389
00:15:11,519 --> 00:15:14,639
secure authentication device

390
00:15:14,639 --> 00:15:17,199
so this iron key device

391
00:15:17,199 --> 00:15:19,920
turned out when you look at the die he

392
00:15:19,920 --> 00:15:21,600
has that had nothing to do with this

393
00:15:21,600 --> 00:15:24,079
iron key it was manufactured but one

394
00:15:24,079 --> 00:15:26,399
spec in corporation and that device did

395
00:15:26,399 --> 00:15:29,040
not have any

396
00:15:29,040 --> 00:15:31,360
non-volatile storage so it only had mass

397
00:15:31,360 --> 00:15:34,240
chrome and sram and the atmel is the

398
00:15:34,240 --> 00:15:36,800
standard authentication device

399
00:15:36,800 --> 00:15:40,639
that is atmel cqsp and that device is

400
00:15:40,639 --> 00:15:44,079
certified to al5 plus so this was

401
00:15:44,079 --> 00:15:46,399
quite a good uh solution from the iron

402
00:15:46,399 --> 00:15:48,399
key to make the

403
00:15:48,399 --> 00:15:51,199
key secure

404
00:15:51,279 --> 00:15:54,880
so then the next version of the device

405
00:15:54,880 --> 00:15:57,839
had its metal case fixed so you had to

406
00:15:57,839 --> 00:15:58,959
use

407
00:15:58,959 --> 00:16:02,000
cutting tools to open it up and then

408
00:16:02,000 --> 00:16:04,800
i used chemicals to remove the epoxy

409
00:16:04,800 --> 00:16:06,399
it uses the same

410
00:16:06,399 --> 00:16:10,079
secure chip for encryption a standard

411
00:16:10,079 --> 00:16:12,560
non-flash and in a

412
00:16:12,560 --> 00:16:14,639
slightly different authentication device

413
00:16:14,639 --> 00:16:16,800
from atmel and the reason for that it

414
00:16:16,800 --> 00:16:19,040
was this device is much cheaper than the

415
00:16:19,040 --> 00:16:21,199
previous one so they probably tried to

416
00:16:21,199 --> 00:16:23,759
optimize the cost

417
00:16:23,759 --> 00:16:27,199
if you look at this device it

418
00:16:28,160 --> 00:16:29,839
had some um

419
00:16:29,839 --> 00:16:32,160
marking on on the surface and that i

420
00:16:32,160 --> 00:16:34,320
will come back late in the talk but what

421
00:16:34,320 --> 00:16:37,040
it actually means but the device was

422
00:16:37,040 --> 00:16:40,560
also certified to the low level of

423
00:16:40,560 --> 00:16:42,079
protection

424
00:16:42,079 --> 00:16:44,399
so not only they reduced the cost but

425
00:16:44,399 --> 00:16:46,480
also they reduced the security level of

426
00:16:46,480 --> 00:16:48,560
the iron key

427
00:16:48,560 --> 00:16:50,720
the next iron key device again had the

428
00:16:50,720 --> 00:16:52,720
same metal case

429
00:16:52,720 --> 00:16:54,399
and the epoxy was

430
00:16:54,399 --> 00:16:57,519
removed this thermal methods and they

431
00:16:57,519 --> 00:17:00,959
in this device they changed the um

432
00:17:00,959 --> 00:17:03,519
the main encryption chip

433
00:17:03,519 --> 00:17:06,240
but use the same atmel

434
00:17:06,240 --> 00:17:08,079
security chip

435
00:17:08,079 --> 00:17:10,559
so that that encryption chip was now

436
00:17:10,559 --> 00:17:12,720
manufactured by atmel but looks like a

437
00:17:12,720 --> 00:17:15,599
custom device the only mask from an sram

438
00:17:15,599 --> 00:17:17,359
so that's why they use the

439
00:17:17,359 --> 00:17:21,359
security to store the key and passwords

440
00:17:21,359 --> 00:17:22,799
and the next

441
00:17:22,799 --> 00:17:26,319
chip was the emotion iron key f-150

442
00:17:26,319 --> 00:17:29,120
and they surprisingly it had no metal

443
00:17:29,120 --> 00:17:31,760
case and no epoxy

444
00:17:31,760 --> 00:17:33,039
porting

445
00:17:33,039 --> 00:17:37,200
so and also the security they use

446
00:17:37,200 --> 00:17:39,679
look like a different bug on it

447
00:17:39,679 --> 00:17:42,000
so it was a

448
00:17:42,000 --> 00:17:44,720
blue fly processor and there are some

449
00:17:44,720 --> 00:17:46,480
documentation on this chip and the

450
00:17:46,480 --> 00:17:49,360
process itself is fib certified

451
00:17:49,360 --> 00:17:50,480
um

452
00:17:50,480 --> 00:17:51,520
but

453
00:17:51,520 --> 00:17:54,799
it had no um non-volatile storage so

454
00:17:54,799 --> 00:17:57,039
that there would be only two places

455
00:17:57,039 --> 00:17:59,679
where the um encryption key and password

456
00:17:59,679 --> 00:18:01,679
attempts could be stored so it could be

457
00:18:01,679 --> 00:18:04,000
either this um

458
00:18:04,000 --> 00:18:05,120
serial

459
00:18:05,120 --> 00:18:08,720
flash chip sst or it could be micro sd

460
00:18:08,720 --> 00:18:10,720
cards which

461
00:18:10,720 --> 00:18:12,880
relatively easy to remove from the

462
00:18:12,880 --> 00:18:14,880
device because they they were in in the

463
00:18:14,880 --> 00:18:17,360
sockets

464
00:18:17,520 --> 00:18:21,120
the next iron key device has a proper

465
00:18:21,120 --> 00:18:24,000
metal case and uh

466
00:18:24,000 --> 00:18:26,640
epoxy compound and this time it was

467
00:18:26,640 --> 00:18:30,320
based on on encryption chip from fisson

468
00:18:30,320 --> 00:18:32,400
very large manufacturer of

469
00:18:32,400 --> 00:18:34,240
such chips so the

470
00:18:34,240 --> 00:18:38,080
many in encrypted usb flash drives use

471
00:18:38,080 --> 00:18:40,240
products from fisson

472
00:18:40,240 --> 00:18:43,360
standard cloud flash and also the

473
00:18:43,360 --> 00:18:45,840
security chip that was marked as iron

474
00:18:45,840 --> 00:18:47,039
key

475
00:18:47,039 --> 00:18:49,919
but again it turned out that it's not

476
00:18:49,919 --> 00:18:52,080
the iron key device is just the marking

477
00:18:52,080 --> 00:18:54,160
on the chip surface and the marking

478
00:18:54,160 --> 00:18:55,760
looks of

479
00:18:55,760 --> 00:18:58,000
relatively familiar with what the atmel

480
00:18:58,000 --> 00:19:00,880
devices market look like and later we'll

481
00:19:00,880 --> 00:19:04,400
identify what this device is

482
00:19:04,400 --> 00:19:06,720
the next was the budgetary version of

483
00:19:06,720 --> 00:19:09,600
the rnk device the plastic package but

484
00:19:09,600 --> 00:19:12,000
because it was spotted with epoxy

485
00:19:12,000 --> 00:19:13,919
i had to cut it with

486
00:19:13,919 --> 00:19:16,240
mechanical tools and then the epoxy was

487
00:19:16,240 --> 00:19:18,880
removed with chemical methods and inside

488
00:19:18,880 --> 00:19:21,520
there's another fisson chip with similar

489
00:19:21,520 --> 00:19:23,600
characteristics and the standard nun

490
00:19:23,600 --> 00:19:24,559
flash

491
00:19:24,559 --> 00:19:26,720
and because the fissile chip does not

492
00:19:26,720 --> 00:19:29,760
have any non-volatile storage obviously

493
00:19:29,760 --> 00:19:32,400
this is the likely candidate for

494
00:19:32,400 --> 00:19:34,640
the non-mirroring attacks that will be

495
00:19:34,640 --> 00:19:36,640
tested later

496
00:19:36,640 --> 00:19:40,000
and the latest uh emission device was

497
00:19:40,000 --> 00:19:41,919
s1000

498
00:19:41,919 --> 00:19:44,240
the proper metal case

499
00:19:44,240 --> 00:19:47,200
and quite strong epoxy so that i had a

500
00:19:47,200 --> 00:19:49,200
hard time removing that epoxy and as you

501
00:19:49,200 --> 00:19:53,120
can see some components were damaged and

502
00:19:53,120 --> 00:19:57,439
but the non-storage chip was uh

503
00:19:57,840 --> 00:20:00,080
removed without damaging it

504
00:20:00,080 --> 00:20:03,200
and this was usb3 device and they had a

505
00:20:03,200 --> 00:20:05,440
quite interesting approach for building

506
00:20:05,440 --> 00:20:08,799
this device so in order to improve the

507
00:20:08,799 --> 00:20:10,480
the speed of the communication through

508
00:20:10,480 --> 00:20:12,159
the usb blast they

509
00:20:12,159 --> 00:20:15,679
uh did not use any standard of

510
00:20:15,679 --> 00:20:17,760
non-flash chips but instead used in

511
00:20:17,760 --> 00:20:20,559
microssd drive from phison and that

512
00:20:20,559 --> 00:20:22,400
drive had the starter three interface

513
00:20:22,400 --> 00:20:25,120
the fastest or from all the compact

514
00:20:25,120 --> 00:20:27,280
storage the six gigabit per second

515
00:20:27,280 --> 00:20:29,440
interface but in order to communicate

516
00:20:29,440 --> 00:20:32,080
this with this chip they had to use the

517
00:20:32,080 --> 00:20:34,559
sata3 bridge and not the normal bridge

518
00:20:34,559 --> 00:20:36,760
but the bridge that is capable of doing

519
00:20:36,760 --> 00:20:39,520
as-256 encryption on the fly and the

520
00:20:39,520 --> 00:20:41,520
only chip that can do this was from

521
00:20:41,520 --> 00:20:43,280
renisos

522
00:20:43,280 --> 00:20:44,880
and there's not much documentation on

523
00:20:44,880 --> 00:20:46,480
this chip

524
00:20:46,480 --> 00:20:49,120
from renaissance but it does not have

525
00:20:49,120 --> 00:20:49,919
any

526
00:20:49,919 --> 00:20:51,200
um

527
00:20:51,200 --> 00:20:53,200
volatile storage on it that's why they

528
00:20:53,200 --> 00:20:56,880
use the same iron key secure chip inside

529
00:20:56,880 --> 00:21:00,159
that in fact is that mailchimp

530
00:21:00,159 --> 00:21:03,520
and the latest iron key devices are d300

531
00:21:03,520 --> 00:21:04,480
series

532
00:21:04,480 --> 00:21:07,120
again with the similar metal package

533
00:21:07,120 --> 00:21:08,720
and um

534
00:21:08,720 --> 00:21:11,520
inside they have a fisson

535
00:21:11,520 --> 00:21:14,000
they're 15 cheap and

536
00:21:14,000 --> 00:21:17,280
because those usb 3 devices they started

537
00:21:17,280 --> 00:21:19,600
using emmc memory for

538
00:21:19,600 --> 00:21:21,360
uh storage

539
00:21:21,360 --> 00:21:24,320
and this device was exactly this had

540
00:21:24,320 --> 00:21:26,400
exactly the same pcb in exactly the same

541
00:21:26,400 --> 00:21:28,400
components as the latest

542
00:21:28,400 --> 00:21:29,520
kingston

543
00:21:29,520 --> 00:21:32,880
dt 4000 g2 device and that device was

544
00:21:32,880 --> 00:21:34,400
much easier to

545
00:21:34,400 --> 00:21:37,280
to open because it had plastic package

546
00:21:37,280 --> 00:21:38,880
and a

547
00:21:38,880 --> 00:21:40,799
the epoxy is easier to remove the

548
00:21:40,799 --> 00:21:44,240
thermal methods and inside this the same

549
00:21:44,240 --> 00:21:45,600
fission

550
00:21:45,600 --> 00:21:48,000
encryption chip and the kingston emmc

551
00:21:48,000 --> 00:21:50,240
flash

552
00:21:50,240 --> 00:21:52,000
so instead of

553
00:21:52,000 --> 00:21:53,200
testing the

554
00:21:53,200 --> 00:21:55,440
these devices i tested this

555
00:21:55,440 --> 00:21:58,080
kingston device and also if you look at

556
00:21:58,080 --> 00:21:59,760
the

557
00:21:59,760 --> 00:22:02,000
fib certification documents for those

558
00:22:02,000 --> 00:22:04,799
devices you and compared these

559
00:22:04,799 --> 00:22:08,480
certification from kingston dt 4004

560
00:22:08,480 --> 00:22:11,280
iron key d300 then you won't see much

561
00:22:11,280 --> 00:22:13,200
difference apart from the text they

562
00:22:13,200 --> 00:22:16,080
changed in the document so they just

563
00:22:16,080 --> 00:22:18,000
copy-pasted it and they didn't even

564
00:22:18,000 --> 00:22:19,760
bother to change the picture of the

565
00:22:19,760 --> 00:22:22,400
device in the certification department

566
00:22:22,400 --> 00:22:24,480
despite the fact that certification of

567
00:22:24,480 --> 00:22:27,039
d300 was 4004

568
00:22:27,039 --> 00:22:28,880
years later

569
00:22:28,880 --> 00:22:31,600
so those devices have exactly the same

570
00:22:31,600 --> 00:22:34,159
pcb revision exactly the same components

571
00:22:34,159 --> 00:22:38,000
even the firmware version is the same

572
00:22:38,880 --> 00:22:42,000
so other kingston devices diffuse b3

573
00:22:42,000 --> 00:22:45,320
interfaces are data travel um

574
00:22:45,320 --> 00:22:48,159
vpn30 and

575
00:22:48,159 --> 00:22:51,600
local plus g3 and inside they have very

576
00:22:51,600 --> 00:22:53,679
similar hardware slightly different

577
00:22:53,679 --> 00:22:56,720
fission microcontroller 13 instead of

578
00:22:56,720 --> 00:23:01,679
dash 15 and the same emc kingston memory

579
00:23:01,679 --> 00:23:03,600
and if you compare those two

580
00:23:03,600 --> 00:23:06,400
microcontrollers to see

581
00:23:06,400 --> 00:23:08,400
if there's much difference between them

582
00:23:08,400 --> 00:23:09,360
you will

583
00:23:09,360 --> 00:23:11,039
find out that this

584
00:23:11,039 --> 00:23:13,280
these are absolutely the same devices

585
00:23:13,280 --> 00:23:15,440
the same hardware the same marking on

586
00:23:15,440 --> 00:23:18,559
the silicon die and they do not have any

587
00:23:18,559 --> 00:23:20,400
non-volatile storage just mass chrome

588
00:23:20,400 --> 00:23:23,120
and sram and that means that whatever

589
00:23:23,120 --> 00:23:26,240
security is used in those devices must

590
00:23:26,240 --> 00:23:30,320
be associated with emmc memory

591
00:23:30,320 --> 00:23:32,720
uh other kingston devices are data

592
00:23:32,720 --> 00:23:36,640
travel 4000 and data traveler

593
00:23:36,640 --> 00:23:38,799
vp that they

594
00:23:38,799 --> 00:23:41,279
also use fission controllers that's like

595
00:23:41,279 --> 00:23:45,120
usb 2 all the devices so instead of emc

596
00:23:45,120 --> 00:23:50,039
memory they use standard nand memory

597
00:23:50,159 --> 00:23:52,159
and the interesting device is data

598
00:23:52,159 --> 00:23:54,080
travel of 2000

599
00:23:54,080 --> 00:23:55,919
because it has a

600
00:23:55,919 --> 00:23:56,960
numeric

601
00:23:56,960 --> 00:23:59,279
keypad where you enter the password and

602
00:23:59,279 --> 00:24:01,440
then you plug the device and it appears

603
00:24:01,440 --> 00:24:04,320
like a normal usb drive so inside they

604
00:24:04,320 --> 00:24:06,480
have a battery because you enter the

605
00:24:06,480 --> 00:24:09,360
password before plugging the device

606
00:24:09,360 --> 00:24:10,240
and

607
00:24:10,240 --> 00:24:12,159
inside they have the same

608
00:24:12,159 --> 00:24:15,360
fission there's 13 microcontroller emmc

609
00:24:15,360 --> 00:24:17,520
memory but in order to

610
00:24:17,520 --> 00:24:19,520
manage the passwords and and control the

611
00:24:19,520 --> 00:24:22,159
keyboard they have the stm32

612
00:24:22,159 --> 00:24:24,960
microcontroller

613
00:24:24,960 --> 00:24:25,919
but

614
00:24:25,919 --> 00:24:28,320
in those devices if you unplug the

615
00:24:28,320 --> 00:24:30,000
battery and

616
00:24:30,000 --> 00:24:32,320
connect it again it doesn't affect the

617
00:24:32,320 --> 00:24:34,640
uh the user password so it it is not

618
00:24:34,640 --> 00:24:35,919
stored in in

619
00:24:35,919 --> 00:24:38,640
sram memory so it's still stored in uh

620
00:24:38,640 --> 00:24:39,840
emmc

621
00:24:39,840 --> 00:24:42,320
uh chip or in peak microcontroller or

622
00:24:42,320 --> 00:24:44,159
stm microcontroller

623
00:24:44,159 --> 00:24:45,840
so the similar device is from eye

624
00:24:45,840 --> 00:24:47,120
storage

625
00:24:47,120 --> 00:24:49,360
called data sure pro

626
00:24:49,360 --> 00:24:51,760
and very similar structures slightly

627
00:24:51,760 --> 00:24:54,320
different microcontroller use but pretty

628
00:24:54,320 --> 00:24:56,640
much the same components

629
00:24:56,640 --> 00:24:59,679
and probably the most secure device in

630
00:24:59,679 --> 00:25:01,760
this range is the

631
00:25:01,760 --> 00:25:03,919
data sure pro 2

632
00:25:03,919 --> 00:25:06,799
because not only it has two pcbs in

633
00:25:06,799 --> 00:25:09,520
inside the

634
00:25:10,640 --> 00:25:12,240
slightly different

635
00:25:12,240 --> 00:25:14,640
encryption controller but also they have

636
00:25:14,640 --> 00:25:17,120
a secure chip

637
00:25:17,120 --> 00:25:18,400
that

638
00:25:18,400 --> 00:25:20,640
helps in improving the security

639
00:25:20,640 --> 00:25:23,919
and that security again looks

640
00:25:23,919 --> 00:25:27,840
very familiar marking from admiral for

641
00:25:27,840 --> 00:25:30,159
hotmail devices so it's not an

642
00:25:30,159 --> 00:25:32,720
eye storage devices it's just a remarked

643
00:25:32,720 --> 00:25:34,880
admiral device and that will be

644
00:25:34,880 --> 00:25:37,919
identified later in the talk

645
00:25:37,919 --> 00:25:40,000
and the

646
00:25:40,000 --> 00:25:42,799
older eye storage devices the data sure

647
00:25:42,799 --> 00:25:45,919
we again lift the battery and

648
00:25:45,919 --> 00:25:48,240
different usb 2 microcontroller standard

649
00:25:48,240 --> 00:25:50,320
non-flash and the peak microcontroller

650
00:25:50,320 --> 00:25:52,080
for

651
00:25:52,080 --> 00:25:54,000
controlling the keyboard and storing the

652
00:25:54,000 --> 00:25:57,120
password attempts

653
00:25:57,120 --> 00:26:01,039
from other manufacturers uh the devices

654
00:26:01,039 --> 00:26:02,320
you use

655
00:26:02,320 --> 00:26:05,039
very similar hardware either this one

656
00:26:05,039 --> 00:26:08,159
dash 15 or 13 micro controller for

657
00:26:08,159 --> 00:26:12,320
usb 3 devices with emmc

658
00:26:12,320 --> 00:26:14,720
memory storage but some devices

659
00:26:14,720 --> 00:26:17,200
surprisingly have space for security so

660
00:26:17,200 --> 00:26:20,240
you can see this um

661
00:26:20,480 --> 00:26:22,240
unused space where the

662
00:26:22,240 --> 00:26:24,640
gfn 16 chip could be placed so they

663
00:26:24,640 --> 00:26:26,720
probably thought about improving the

664
00:26:26,720 --> 00:26:29,440
hardware security of those devices but i

665
00:26:29,440 --> 00:26:31,919
i never came across the actual use of

666
00:26:31,919 --> 00:26:33,840
this

667
00:26:33,840 --> 00:26:36,320
and data locker have

668
00:26:36,320 --> 00:26:39,279
their own range and some devices are

669
00:26:39,279 --> 00:26:40,880
watered with um

670
00:26:40,880 --> 00:26:43,520
in this case a fake epoxy because they

671
00:26:43,520 --> 00:26:45,679
it looks like put it into epoxy but in

672
00:26:45,679 --> 00:26:47,440
fact it's just a black paint which is

673
00:26:47,440 --> 00:26:49,679
easy to to remove the

674
00:26:49,679 --> 00:26:51,360
paint remover

675
00:26:51,360 --> 00:26:53,600
and again they either use the the

676
00:26:53,600 --> 00:26:56,400
standard fissile microcontroller of the

677
00:26:56,400 --> 00:26:59,039
slightly older emmc memory

678
00:26:59,039 --> 00:27:02,559
still have a place for secure chip and

679
00:27:02,559 --> 00:27:05,760
another device use block master

680
00:27:05,760 --> 00:27:08,640
cheap and that block master chip

681
00:27:08,640 --> 00:27:10,880
again doesn't have any non-volatile

682
00:27:10,880 --> 00:27:14,159
storage it's just a musk room

683
00:27:14,159 --> 00:27:17,279
small area and the large area is

684
00:27:17,279 --> 00:27:18,840
the

685
00:27:18,840 --> 00:27:22,159
sram and the the last device i looked at

686
00:27:22,159 --> 00:27:24,960
was the safe access and

687
00:27:24,960 --> 00:27:27,679
again that had the

688
00:27:27,679 --> 00:27:30,799
already familiar feats on micro uh

689
00:27:30,799 --> 00:27:33,600
usb chip and emmc flash and the space

690
00:27:33,600 --> 00:27:34,880
for

691
00:27:34,880 --> 00:27:36,480
security

692
00:27:36,480 --> 00:27:37,840
and oh

693
00:27:37,840 --> 00:27:38,799
um

694
00:27:38,799 --> 00:27:42,480
so i i tried to mount the non-mirroring

695
00:27:42,480 --> 00:27:43,600
attacks to

696
00:27:43,600 --> 00:27:45,520
reinstate the number of

697
00:27:45,520 --> 00:27:47,279
password attempts on those chips so i

698
00:27:47,279 --> 00:27:48,399
started the

699
00:27:48,399 --> 00:27:51,600
the simplest device the iron key f150

700
00:27:51,600 --> 00:27:52,640
because it

701
00:27:52,640 --> 00:27:55,120
was easy to access the memory it was in

702
00:27:55,120 --> 00:27:57,279
the

703
00:27:58,399 --> 00:28:01,760
microsd card um

704
00:28:02,480 --> 00:28:06,880
uh connectors and and uh also this

705
00:28:06,880 --> 00:28:10,159
device had two storages i it's got

706
00:28:10,159 --> 00:28:13,200
serial flash that i tested by soldering

707
00:28:13,200 --> 00:28:15,200
the um

708
00:28:15,200 --> 00:28:18,640
adapter and then uh uh reading the flash

709
00:28:18,640 --> 00:28:20,159
in the standard

710
00:28:20,159 --> 00:28:21,760
universal program

711
00:28:21,760 --> 00:28:23,760
but it turned out that this

712
00:28:23,760 --> 00:28:26,559
serial flash is not used for uh storing

713
00:28:26,559 --> 00:28:28,159
anything associated the password

714
00:28:28,159 --> 00:28:30,960
attempts so i ended up building an

715
00:28:30,960 --> 00:28:33,840
adapter and plugging the um

716
00:28:33,840 --> 00:28:36,559
micro sd card into the

717
00:28:36,559 --> 00:28:39,120
easy jtag plus tool which is very useful

718
00:28:39,120 --> 00:28:41,919
for reading out the raw images of of the

719
00:28:41,919 --> 00:28:44,559
memory chips because all those chips

720
00:28:44,559 --> 00:28:47,039
that are used in iron key devices they

721
00:28:47,039 --> 00:28:49,520
do not have proper partitioning so they

722
00:28:49,520 --> 00:28:52,159
just use those devices as a raw memory

723
00:28:52,159 --> 00:28:54,640
storage so it's if you plug this tubing

724
00:28:54,640 --> 00:28:57,039
into normal compute it will tell you

725
00:28:57,039 --> 00:28:59,279
that the device is not formatted and you

726
00:28:59,279 --> 00:29:01,279
won't be able to read out and copy the

727
00:29:01,279 --> 00:29:02,240
data

728
00:29:02,240 --> 00:29:03,520
but uh

729
00:29:03,520 --> 00:29:04,880
by

730
00:29:04,880 --> 00:29:06,960
storing the image and then restoring it

731
00:29:06,960 --> 00:29:09,360
after exhausting the password

732
00:29:09,360 --> 00:29:12,000
retry attempts i was able to reinstate

733
00:29:12,000 --> 00:29:14,240
it back to the 10 attempts and try as

734
00:29:14,240 --> 00:29:16,720
many times as i like so that means the

735
00:29:16,720 --> 00:29:19,200
iron key f-150 was the first device

736
00:29:19,200 --> 00:29:22,240
vulnerable to non-mirroring attacks

737
00:29:22,240 --> 00:29:24,480
the next device i looked at was iron kit

738
00:29:24,480 --> 00:29:25,440
80

739
00:29:25,440 --> 00:29:27,840
and it was much easier to work with

740
00:29:27,840 --> 00:29:30,000
because it has a standard flash memory

741
00:29:30,000 --> 00:29:31,039
storage

742
00:29:31,039 --> 00:29:33,600
and that that could be rather i think in

743
00:29:33,600 --> 00:29:35,919
this device it could be written as the

744
00:29:35,919 --> 00:29:37,679
universal programmer

745
00:29:37,679 --> 00:29:40,240
and again by restoring the image of the

746
00:29:40,240 --> 00:29:42,880
memory chip after exhausting

747
00:29:42,880 --> 00:29:45,679
password attempts it was possible to

748
00:29:45,679 --> 00:29:47,679
bring it back to 10 attempts and so on

749
00:29:47,679 --> 00:29:50,320
so iron ki d80 is another device

750
00:29:50,320 --> 00:29:53,279
vulnerable to non-mirroring attacks

751
00:29:53,279 --> 00:29:55,679
so now a few what's about the mmc memory

752
00:29:55,679 --> 00:29:59,360
so actually mmc memory is a

753
00:29:59,360 --> 00:30:01,120
device that consists of two parts so

754
00:30:01,120 --> 00:30:03,120
they have a specialized controller and

755
00:30:03,120 --> 00:30:05,760
the standard nand chip inside the vga

756
00:30:05,760 --> 00:30:09,120
package so the controller communication

757
00:30:09,120 --> 00:30:11,760
is standardized by eardex so we can read

758
00:30:11,760 --> 00:30:14,000
out the specification and talk to the

759
00:30:14,000 --> 00:30:15,200
controller

760
00:30:15,200 --> 00:30:17,600
and the purpose of it is to perform

761
00:30:17,600 --> 00:30:19,840
error correction and wear leveling so

762
00:30:19,840 --> 00:30:22,399
the device looks like a normal

763
00:30:22,399 --> 00:30:24,559
hard drive storage to the operating

764
00:30:24,559 --> 00:30:26,159
system

765
00:30:26,159 --> 00:30:28,399
and also it manages low level

766
00:30:28,399 --> 00:30:30,480
partitioning into multiple storage

767
00:30:30,480 --> 00:30:32,399
devices so for example you can split it

768
00:30:32,399 --> 00:30:34,000
into the

769
00:30:34,000 --> 00:30:38,240
cd-rom and the standard storage tool

770
00:30:38,240 --> 00:30:40,720
for the uh

771
00:30:40,720 --> 00:30:42,480
from the point of view of the operating

772
00:30:42,480 --> 00:30:45,200
system so that's why when you plug your

773
00:30:45,200 --> 00:30:47,919
secure usb device like iron key it

774
00:30:47,919 --> 00:30:50,399
pretends to be the cd-rom for storing

775
00:30:50,399 --> 00:30:51,360
the

776
00:30:51,360 --> 00:30:54,080
critical applications and as a normal

777
00:30:54,080 --> 00:30:56,399
hard drive for user files

778
00:30:56,399 --> 00:30:58,559
but emanci also has some security

779
00:30:58,559 --> 00:31:00,159
features in particular password

780
00:31:00,159 --> 00:31:02,399
protection and replay protected memory

781
00:31:02,399 --> 00:31:06,000
block partition and that partition has a

782
00:31:06,000 --> 00:31:07,519
one-time programmable symmetric

783
00:31:07,519 --> 00:31:09,600
authentication key

784
00:31:09,600 --> 00:31:12,000
and which is also randomized change

785
00:31:12,000 --> 00:31:13,679
response protocol

786
00:31:13,679 --> 00:31:16,000
also any right access to that partition

787
00:31:16,000 --> 00:31:18,480
increments dedicated right counter to

788
00:31:18,480 --> 00:31:21,279
prevent unauthorized overwriting

789
00:31:21,279 --> 00:31:23,279
but inside the device this this

790
00:31:23,279 --> 00:31:25,600
controller has no non-volatile storage

791
00:31:25,600 --> 00:31:28,240
so it relies storing any data inside

792
00:31:28,240 --> 00:31:30,640
this uh standard nut

793
00:31:30,640 --> 00:31:34,159
flash chip so if someone manages to get

794
00:31:34,159 --> 00:31:36,159
access to this um

795
00:31:36,159 --> 00:31:38,559
standard non-flash chip he can reinstate

796
00:31:38,559 --> 00:31:42,080
all the settings and and uh

797
00:31:42,080 --> 00:31:43,919
for example password

798
00:31:43,919 --> 00:31:47,760
attempts or an encryption key

799
00:31:47,760 --> 00:31:49,840
so that's why i looked at the at the

800
00:31:49,840 --> 00:31:52,080
device how easy would it be to access

801
00:31:52,080 --> 00:31:53,440
that uh

802
00:31:53,440 --> 00:31:54,720
non-flash

803
00:31:54,720 --> 00:31:56,000
storage chip

804
00:31:56,000 --> 00:31:58,240
so the if you look at the device from

805
00:31:58,240 --> 00:32:01,600
the back side so it has the uh the balls

806
00:32:01,600 --> 00:32:03,120
for the standard

807
00:32:03,120 --> 00:32:04,559
the emmc

808
00:32:04,559 --> 00:32:08,480
connections but also it has some extra

809
00:32:08,480 --> 00:32:11,279
test parts on the device and i was

810
00:32:11,279 --> 00:32:13,919
curious where these test parts go to so

811
00:32:13,919 --> 00:32:17,679
for that i polish the chip from

812
00:32:17,679 --> 00:32:20,720
from the shoulder side to

813
00:32:20,720 --> 00:32:22,080
down to the

814
00:32:22,080 --> 00:32:24,799
silicon dies to see

815
00:32:24,799 --> 00:32:26,720
where they are connected and if you

816
00:32:26,720 --> 00:32:28,640
follow those traces you will

817
00:32:28,640 --> 00:32:30,480
realize that all the connections between

818
00:32:30,480 --> 00:32:32,960
the controller chip and the memory chip

819
00:32:32,960 --> 00:32:34,960
actually brought to the surface to to

820
00:32:34,960 --> 00:32:37,760
those parts so it's much easier to get

821
00:32:37,760 --> 00:32:41,120
access to the non-flash than

822
00:32:41,120 --> 00:32:43,039
you thought so you don't have to to do

823
00:32:43,039 --> 00:32:45,360
any

824
00:32:47,440 --> 00:32:49,200
wire bonding or

825
00:32:49,200 --> 00:32:50,159
uh

826
00:32:50,159 --> 00:32:53,039
microprobing to access the chip

827
00:32:53,039 --> 00:32:54,960
and also the controller has the the

828
00:32:54,960 --> 00:32:57,519
reset pin so you can easily disable the

829
00:32:57,519 --> 00:32:59,760
controller and then directly communicate

830
00:32:59,760 --> 00:33:01,919
with the flash memory chip and

831
00:33:01,919 --> 00:33:05,519
create the the image of it but in fact

832
00:33:05,519 --> 00:33:07,600
for iron key devices it was not

833
00:33:07,600 --> 00:33:09,120
necessary

834
00:33:09,120 --> 00:33:11,279
because uh when i

835
00:33:11,279 --> 00:33:14,240
uh dissolved the chip and plugged it in

836
00:33:14,240 --> 00:33:15,919
into um

837
00:33:15,919 --> 00:33:16,960
this

838
00:33:16,960 --> 00:33:19,840
easy jtag blue program it gives you the

839
00:33:19,840 --> 00:33:21,919
print out of the configuration of the

840
00:33:21,919 --> 00:33:24,159
chip and it immediately tells you that

841
00:33:24,159 --> 00:33:27,120
the password was not used that the rpmv

842
00:33:27,120 --> 00:33:29,519
partition was not activated

843
00:33:29,519 --> 00:33:32,640
so obviously they used this uh emmc chip

844
00:33:32,640 --> 00:33:34,799
just as a memory storage

845
00:33:34,799 --> 00:33:38,519
and i had a

846
00:33:38,960 --> 00:33:41,919
a bit of a time to learn how to rebound

847
00:33:41,919 --> 00:33:44,080
rebuild the chip and sold it back

848
00:33:44,080 --> 00:33:46,240
because every time i had to

849
00:33:46,240 --> 00:33:48,799
uh read out the um the contents of the

850
00:33:48,799 --> 00:33:50,399
memory and ride it back i had to

851
00:33:50,399 --> 00:33:53,039
dissolve the chip and then

852
00:33:53,039 --> 00:33:54,880
put the balls back on on the chip and

853
00:33:54,880 --> 00:33:57,120
sold it back to the device to

854
00:33:57,120 --> 00:33:59,200
to plug into a computer and to check the

855
00:33:59,200 --> 00:34:01,840
number of password attempts

856
00:34:01,840 --> 00:34:04,640
but in the end i succeeded so i managed

857
00:34:04,640 --> 00:34:08,239
to restore the image of the emmc chip

858
00:34:08,239 --> 00:34:09,440
back and

859
00:34:09,440 --> 00:34:11,280
reinstate the number of attempts so that

860
00:34:11,280 --> 00:34:13,440
means that the latest

861
00:34:13,440 --> 00:34:15,918
iron key device d300 is vulnerable to

862
00:34:15,918 --> 00:34:18,800
non-mirroring attacks

863
00:34:18,800 --> 00:34:21,119
so now a few what's about atmel secure

864
00:34:21,119 --> 00:34:25,119
chips so the marking on this um 1898

865
00:34:25,119 --> 00:34:27,839
authentication chip matches the same on

866
00:34:27,839 --> 00:34:28,879
the

867
00:34:28,879 --> 00:34:32,960
another atmel a secure device 1890 sc

868
00:34:32,960 --> 00:34:35,199
144 144

869
00:34:35,199 --> 00:34:36,639
and also

870
00:34:36,639 --> 00:34:38,399
if you look on those devices they are

871
00:34:38,399 --> 00:34:40,560
exactly the same and

872
00:34:40,560 --> 00:34:43,520
1898 sc all 16

873
00:34:43,520 --> 00:34:46,399
tube matches the same marking of another

874
00:34:46,399 --> 00:34:47,520
atmel

875
00:34:47,520 --> 00:34:48,399
standard

876
00:34:48,399 --> 00:34:50,079
not standard secure microcontroller

877
00:34:50,079 --> 00:34:51,599
device

878
00:34:51,599 --> 00:34:55,199
so they actually those 98 sc

879
00:34:55,199 --> 00:34:57,680
authentication devices is just the

880
00:34:57,680 --> 00:34:59,839
firmware revision of standard atmel

881
00:34:59,839 --> 00:35:02,160
devices

882
00:35:02,160 --> 00:35:04,400
and then the secure chip that was marked

883
00:35:04,400 --> 00:35:07,760
as is iron key indeed 250 and s1000

884
00:35:07,760 --> 00:35:10,640
turned out to be another atmel secure

885
00:35:10,640 --> 00:35:13,320
microcontroller so this one

886
00:35:13,320 --> 00:35:14,960
2872

887
00:35:14,960 --> 00:35:18,000
and security storage device in data sure

888
00:35:18,000 --> 00:35:22,720
pro turned out to be 1890 so 128

889
00:35:22,720 --> 00:35:26,640
and also i found that all 8090 sc secure

890
00:35:26,640 --> 00:35:29,440
chips in iron key in ira storage devices

891
00:35:29,440 --> 00:35:32,320
they had a quite noticeable feature on

892
00:35:32,320 --> 00:35:35,599
the die so they have 27 wires that go

893
00:35:35,599 --> 00:35:38,079
from the

894
00:35:38,320 --> 00:35:41,280
cheap area outside of of the die

895
00:35:41,280 --> 00:35:43,119
and those are

896
00:35:43,119 --> 00:35:45,280
likely to be used for factory debugging

897
00:35:45,280 --> 00:35:47,920
and could represent a backdoor access to

898
00:35:47,920 --> 00:35:50,240
to the chip so you can for example

899
00:35:50,240 --> 00:35:52,960
either directly access all the internal

900
00:35:52,960 --> 00:35:54,320
uh

901
00:35:54,320 --> 00:35:56,000
resources of the chip or you can force

902
00:35:56,000 --> 00:35:59,359
the chip in into the factory test mode

903
00:35:59,359 --> 00:36:00,960
and exploit some

904
00:36:00,960 --> 00:36:03,040
pre-programmed test features that are

905
00:36:03,040 --> 00:36:06,079
present in in mask chrome

906
00:36:06,079 --> 00:36:08,960
so mask chrome is in many 1990 sc

907
00:36:08,960 --> 00:36:11,280
devices visible after under optical

908
00:36:11,280 --> 00:36:14,000
microscope so you can see this uh

909
00:36:14,000 --> 00:36:17,200
pattern on the chip and

910
00:36:17,200 --> 00:36:19,599
also eeprom can be extracted using

911
00:36:19,599 --> 00:36:21,440
electron microscopy method so you can

912
00:36:21,440 --> 00:36:23,119
see that there's a

913
00:36:23,119 --> 00:36:25,119
difference between the bright and dark

914
00:36:25,119 --> 00:36:28,079
spots that represent zeros and and ones

915
00:36:28,079 --> 00:36:31,359
but any uh probing access to the

916
00:36:31,359 --> 00:36:34,640
um hotmail chips will require uh a lot

917
00:36:34,640 --> 00:36:37,920
of challenges because these uh

918
00:36:37,920 --> 00:36:39,760
they have a sensor measurement that

919
00:36:39,760 --> 00:36:41,839
covers the the surface of the chip and

920
00:36:41,839 --> 00:36:43,280
very likely they have multiple

921
00:36:43,280 --> 00:36:46,079
connections for for those wires so you

922
00:36:46,079 --> 00:36:48,079
will have to trace the

923
00:36:48,079 --> 00:36:50,079
all the wires that cover the area of

924
00:36:50,079 --> 00:36:52,720
interest and then either disable them or

925
00:36:52,720 --> 00:36:55,839
re-route them using the fib

926
00:36:55,839 --> 00:36:59,040
i also looked at some cryptocurrency

927
00:36:59,040 --> 00:37:01,920
wallet devices to see how the security

928
00:37:01,920 --> 00:37:04,000
level matches with the

929
00:37:04,000 --> 00:37:06,640
iron key and other encrypted usb drives

930
00:37:06,640 --> 00:37:10,320
so for example legend nano s device on

931
00:37:10,320 --> 00:37:13,359
the pcb they have a secure chip and that

932
00:37:13,359 --> 00:37:17,599
is uh sd micro electronics st31 series

933
00:37:17,599 --> 00:37:21,200
and that was produced in 2014 so it's

934
00:37:21,200 --> 00:37:22,960
about eight

935
00:37:22,960 --> 00:37:25,760
years later than the iron key uh secure

936
00:37:25,760 --> 00:37:27,520
chips

937
00:37:27,520 --> 00:37:31,119
and also the uh the larger device nana x

938
00:37:31,119 --> 00:37:34,480
uses uh st33 microcontroller uh

939
00:37:34,480 --> 00:37:37,359
producing 2015 so

940
00:37:37,359 --> 00:37:40,400
those uh chips have more

941
00:37:40,400 --> 00:37:42,320
much more advanced fabrication process

942
00:37:42,320 --> 00:37:43,839
that they are

943
00:37:43,839 --> 00:37:46,400
much harder to break into so they

944
00:37:46,400 --> 00:37:49,040
obviously the security level of

945
00:37:49,040 --> 00:37:52,160
devices used in crypto wallets uh

946
00:37:52,160 --> 00:37:54,079
probably an order of magnitude better

947
00:37:54,079 --> 00:37:56,640
than those used in iron key devices

948
00:37:56,640 --> 00:37:58,079
despite to the fact that iron key

949
00:37:58,079 --> 00:38:00,640
devices are aimed at the military and

950
00:38:00,640 --> 00:38:03,119
government applications

951
00:38:03,119 --> 00:38:06,000
so for future works uh first

952
00:38:06,000 --> 00:38:08,320
you can find all the details about this

953
00:38:08,320 --> 00:38:09,119
uh

954
00:38:09,119 --> 00:38:12,640
presentation in in my paper that was uh

955
00:38:12,640 --> 00:38:14,400
in archive.org

956
00:38:14,400 --> 00:38:16,960
of all the images and comparison table

957
00:38:16,960 --> 00:38:19,760
of encrypted usb flash drives

958
00:38:19,760 --> 00:38:21,680
obviously more research needs to be done

959
00:38:21,680 --> 00:38:23,680
for offline password brute force and

960
00:38:23,680 --> 00:38:27,680
because so far i had to manually uh

961
00:38:27,680 --> 00:38:29,680
solder back the chip and and try the

962
00:38:29,680 --> 00:38:30,800
passwords

963
00:38:30,800 --> 00:38:33,359
but if that could be uh automated if

964
00:38:33,359 --> 00:38:35,200
offline brute force and that would be

965
00:38:35,200 --> 00:38:37,680
much more efficient it's not possible to

966
00:38:37,680 --> 00:38:40,400
extract the encryption key without

967
00:38:40,400 --> 00:38:41,760
um

968
00:38:41,760 --> 00:38:43,760
knowing the and trying the user key

969
00:38:43,760 --> 00:38:46,000
because it's always encrypted with the

970
00:38:46,000 --> 00:38:48,640
user password

971
00:38:48,640 --> 00:38:51,599
and uh if you for example emulate

972
00:38:51,599 --> 00:38:53,359
non-emc

973
00:38:53,359 --> 00:38:55,760
interface you can speed up the process

974
00:38:55,760 --> 00:38:56,800
of the

975
00:38:56,800 --> 00:38:58,640
hardware brute forcing

976
00:38:58,640 --> 00:39:01,359
and also if the secure element is used

977
00:39:01,359 --> 00:39:03,520
for password and e is key protection

978
00:39:03,520 --> 00:39:05,839
then you can try to attack from that

979
00:39:05,839 --> 00:39:08,160
side by extracting the mask from the

980
00:39:08,160 --> 00:39:09,680
scrambling it

981
00:39:09,680 --> 00:39:11,440
extracting the eeprom and again

982
00:39:11,440 --> 00:39:13,760
describing it and decompiling and decode

983
00:39:13,760 --> 00:39:14,880
and

984
00:39:14,880 --> 00:39:17,520
also analyzing the backdoor interface in

985
00:39:17,520 --> 00:39:20,000
1890sc devices and

986
00:39:20,000 --> 00:39:23,119
reform virus attacks on those devices

987
00:39:23,119 --> 00:39:24,640
so to conclude

988
00:39:24,640 --> 00:39:27,599
i'll tear down nine generations of iron

989
00:39:27,599 --> 00:39:30,320
key devices most devices have robust

990
00:39:30,320 --> 00:39:32,800
metal cases filled with epoxy compounds

991
00:39:32,800 --> 00:39:34,000
they have

992
00:39:34,000 --> 00:39:37,119
secure chips used in all devices

993
00:39:37,119 --> 00:39:39,760
however latest models use emmc flash

994
00:39:39,760 --> 00:39:42,000
storage and three devices were found to

995
00:39:42,000 --> 00:39:45,119
be vulnerable to non-mirroring attacks

996
00:39:45,119 --> 00:39:47,520
and as to the other encrypted usb flash

997
00:39:47,520 --> 00:39:49,440
drives

998
00:39:49,440 --> 00:39:51,359
out of 15

999
00:39:51,359 --> 00:39:54,160
devices and analyzed seven had the pcb

1000
00:39:54,160 --> 00:39:57,359
epoxy feeling and

1001
00:39:57,359 --> 00:40:00,480
only one device had a secure tube inside

1002
00:40:00,480 --> 00:40:03,359
for esp storage and password protection

1003
00:40:03,359 --> 00:40:05,599
and some devices have battery but they

1004
00:40:05,599 --> 00:40:08,079
do not benefit from extra security for

1005
00:40:08,079 --> 00:40:10,800
for example battery backed sram

1006
00:40:10,800 --> 00:40:13,200
and all what's more important is that

1007
00:40:13,200 --> 00:40:15,520
the fips certification level does not

1008
00:40:15,520 --> 00:40:17,440
guarantee the hardware security so the

1009
00:40:17,440 --> 00:40:19,920
device could be certified with a high

1010
00:40:19,920 --> 00:40:21,440
fips level but

1011
00:40:21,440 --> 00:40:25,599
not having any secure element inside

1012
00:40:25,599 --> 00:40:27,520
and surprisingly none of the devices

1013
00:40:27,520 --> 00:40:30,000
used inherited security features of elmc

1014
00:40:30,000 --> 00:40:32,319
flash because they do have this

1015
00:40:32,319 --> 00:40:34,400
authenticated partition that can store

1016
00:40:34,400 --> 00:40:36,400
some secret data

1017
00:40:36,400 --> 00:40:37,440
and

1018
00:40:37,440 --> 00:40:41,280
also i found that 1898 sc families

1019
00:40:41,280 --> 00:40:44,800
actually a firmware programmed 1990 sc

1020
00:40:44,800 --> 00:40:45,760
chips

1021
00:40:45,760 --> 00:40:48,079
and those chips are likely to have some

1022
00:40:48,079 --> 00:40:49,760
backdoor because they have a factory

1023
00:40:49,760 --> 00:40:51,280
debug interface

1024
00:40:51,280 --> 00:40:53,200
connected to the die

1025
00:40:53,200 --> 00:40:55,119
and as i mentioned crypto pilots are

1026
00:40:55,119 --> 00:40:57,280
likely to have better hardware security

1027
00:40:57,280 --> 00:40:59,839
protection than iron key

1028
00:40:59,839 --> 00:41:02,880
so thank you for your attention

1029
00:41:02,880 --> 00:41:06,119
thank you

1030
00:41:06,960 --> 00:41:08,240
excellent

1031
00:41:08,240 --> 00:41:11,839
any questions yeah we have

1032
00:41:16,319 --> 00:41:18,640
thank you for the very informative talk

1033
00:41:18,640 --> 00:41:20,560
i was wondering if the usb

1034
00:41:20,560 --> 00:41:22,480
microcontrollers that are involved on

1035
00:41:22,480 --> 00:41:23,839
these devices

1036
00:41:23,839 --> 00:41:25,839
can they be reprogrammed for an evil

1037
00:41:25,839 --> 00:41:28,640
made attack so that they store the

1038
00:41:28,640 --> 00:41:32,319
let's say user pin or passphrase

1039
00:41:32,640 --> 00:41:35,599
those devices that rely on fission

1040
00:41:35,599 --> 00:41:37,760
controllers they uh actually this one

1041
00:41:37,760 --> 00:41:40,400
have um dedicated um

1042
00:41:40,400 --> 00:41:42,240
but proprietary tool i think it's called

1043
00:41:42,240 --> 00:41:45,680
mpal that you can find on on some

1044
00:41:45,680 --> 00:41:48,400
hacking websites that are dealing with

1045
00:41:48,400 --> 00:41:50,240
usb drives uh

1046
00:41:50,240 --> 00:41:51,599
recovery

1047
00:41:51,599 --> 00:41:53,760
so that tool allows you to con to

1048
00:41:53,760 --> 00:41:56,319
configure the uh

1049
00:41:56,319 --> 00:41:58,319
the low level partitioning to configure

1050
00:41:58,319 --> 00:42:00,560
the encryption they use to

1051
00:42:00,560 --> 00:42:02,640
uh to configure other areas so if you've

1052
00:42:02,640 --> 00:42:05,280
managed to get hold of that software yes

1053
00:42:05,280 --> 00:42:07,040
you can reprogram these on devices

1054
00:42:07,040 --> 00:42:08,319
because they

1055
00:42:08,319 --> 00:42:10,400
they have some part of the film where on

1056
00:42:10,400 --> 00:42:13,440
the mask rom but they they can be

1057
00:42:13,440 --> 00:42:15,520
reprogrammed to you to upload the

1058
00:42:15,520 --> 00:42:18,000
firmware from external storage in this

1059
00:42:18,000 --> 00:42:20,400
case from from nand memory or from emmc

1060
00:42:20,400 --> 00:42:21,839
memory so you can

1061
00:42:21,839 --> 00:42:24,560
upgrade the firmware

1062
00:42:24,560 --> 00:42:28,079
and then you can force these devices to

1063
00:42:28,079 --> 00:42:30,800
to change the functionality

1064
00:42:30,800 --> 00:42:33,200
thank you

1065
00:42:34,280 --> 00:42:36,960
[Music]

1066
00:42:36,960 --> 00:42:38,720
i have two questions

1067
00:42:38,720 --> 00:42:40,240
first i thought tips level three

1068
00:42:40,240 --> 00:42:42,319
required some sort of active counter

1069
00:42:42,319 --> 00:42:45,200
measures to detect intrusion and attempt

1070
00:42:45,200 --> 00:42:46,720
to zeroize keys

1071
00:42:46,720 --> 00:42:48,640
did you find any sort of

1072
00:42:48,640 --> 00:42:51,359
measures like that

1073
00:42:51,359 --> 00:42:54,000
well they do not have any measures at

1074
00:42:54,000 --> 00:42:56,880
the physical level so if you manage to

1075
00:42:56,880 --> 00:42:58,880
to go through the epoxy that it won't be

1076
00:42:58,880 --> 00:43:00,240
detected

1077
00:43:00,240 --> 00:43:01,599
so the

1078
00:43:01,599 --> 00:43:03,839
the best protection they they have is to

1079
00:43:03,839 --> 00:43:06,240
to rely on the secure elements of the

1080
00:43:06,240 --> 00:43:08,880
atmel secure microcontrollers because

1081
00:43:08,880 --> 00:43:11,520
those devices will store the encrypted

1082
00:43:11,520 --> 00:43:13,680
key and those devices will

1083
00:43:13,680 --> 00:43:16,079
check that key against the the user

1084
00:43:16,079 --> 00:43:19,680
password and then it also will implement

1085
00:43:19,680 --> 00:43:21,839
the limiting number of password attempts

1086
00:43:21,839 --> 00:43:23,440
so that that's the best protection they

1087
00:43:23,440 --> 00:43:24,800
have

1088
00:43:24,800 --> 00:43:27,200
and then my second question is did you

1089
00:43:27,200 --> 00:43:29,839
look at the nand contents and

1090
00:43:29,839 --> 00:43:32,720
uh did any of the vendors um

1091
00:43:32,720 --> 00:43:35,520
uh do like samsung did where they were

1092
00:43:35,520 --> 00:43:37,520
only password protecting but not

1093
00:43:37,520 --> 00:43:40,560
actually encrypted the contents

1094
00:43:40,560 --> 00:43:43,119
yeah for all the devices the

1095
00:43:43,119 --> 00:43:45,520
uh the contents was encrypted

1096
00:43:45,520 --> 00:43:47,760
even the contents they store for the

1097
00:43:47,760 --> 00:43:50,800
cd-rom uh image for that they

1098
00:43:50,800 --> 00:43:52,720
later represented as the

1099
00:43:52,720 --> 00:43:54,480
fully accessible

1100
00:43:54,480 --> 00:43:56,000
area but also

1101
00:43:56,000 --> 00:43:59,359
if you compare the images

1102
00:43:59,359 --> 00:44:01,760
after each password

1103
00:44:01,760 --> 00:44:04,640
incorrectly try attempt then they store

1104
00:44:04,640 --> 00:44:07,359
some data but those data look look as a

1105
00:44:07,359 --> 00:44:10,720
random and encrypted so they

1106
00:44:10,720 --> 00:44:12,720
they don't store any information in

1107
00:44:12,720 --> 00:44:14,800
plain text so it's it's very difficult

1108
00:44:14,800 --> 00:44:16,720
to figure out what they actually store

1109
00:44:16,720 --> 00:44:19,280
but for for the purpose of

1110
00:44:19,280 --> 00:44:21,040
reinstating the number of password

1111
00:44:21,040 --> 00:44:23,280
attempts you don't care just restore all

1112
00:44:23,280 --> 00:44:26,720
the changed locations

1113
00:44:28,079 --> 00:44:31,560
any other questions

1114
00:44:36,880 --> 00:44:38,160
thank you

1115
00:44:38,160 --> 00:44:41,599
on the devices using secure chips

1116
00:44:41,599 --> 00:44:43,119
is the communication between the

1117
00:44:43,119 --> 00:44:45,200
microcontroller and the secure element

1118
00:44:45,200 --> 00:44:49,040
encrypted or not

1119
00:44:49,440 --> 00:44:51,280
i i didn't check the communication but

1120
00:44:51,280 --> 00:44:52,960
if you look at the

1121
00:44:52,960 --> 00:44:54,000
um

1122
00:44:54,000 --> 00:44:56,560
those fifth certification documents that

1123
00:44:56,560 --> 00:44:59,839
uh they they have for for those devices

1124
00:44:59,839 --> 00:45:00,880
they

1125
00:45:00,880 --> 00:45:02,640
they claim that the communication

1126
00:45:02,640 --> 00:45:04,640
through through the usb

1127
00:45:04,640 --> 00:45:06,480
bus is encrypted and also all the

1128
00:45:06,480 --> 00:45:08,880
communication related with the key

1129
00:45:08,880 --> 00:45:10,880
transfer is also encrypted so the

1130
00:45:10,880 --> 00:45:12,800
because that's the the major

1131
00:45:12,800 --> 00:45:14,079
requirements from the fifth

1132
00:45:14,079 --> 00:45:16,400
certification that the the encryption

1133
00:45:16,400 --> 00:45:19,680
key never exposed in plain text so they

1134
00:45:19,680 --> 00:45:21,920
it must always be encrypted between the

1135
00:45:21,920 --> 00:45:24,240
secure microcontroller and the

1136
00:45:24,240 --> 00:45:27,040
the main es encryption

1137
00:45:27,040 --> 00:45:28,880
hardware device

1138
00:45:28,880 --> 00:45:32,920
otherwise they won't get certification

1139
00:45:34,160 --> 00:45:35,760
i have a question

1140
00:45:35,760 --> 00:45:37,440
i know there's a few people here

1141
00:45:37,440 --> 00:45:39,040
interested in

1142
00:45:39,040 --> 00:45:41,200
masked rom extraction

1143
00:45:41,200 --> 00:45:43,599
are you gonna publish good enough images

1144
00:45:43,599 --> 00:45:44,800
that we could

1145
00:45:44,800 --> 00:45:47,119
look at extracting and

1146
00:45:47,119 --> 00:45:51,359
decompiling or disassembling the code

1147
00:45:51,359 --> 00:45:54,240
well i i don't have the image of the the

1148
00:45:54,240 --> 00:45:57,119
whole mask chrome but that can be

1149
00:45:57,119 --> 00:46:00,800
produced the only concern is that those

1150
00:46:00,800 --> 00:46:03,119
the storage is easily scrambled because

1151
00:46:03,119 --> 00:46:04,079
if you

1152
00:46:04,079 --> 00:46:05,280
um

1153
00:46:05,280 --> 00:46:07,440
if you look at the um

1154
00:46:07,440 --> 00:46:09,839
this image you can see

1155
00:46:09,839 --> 00:46:13,920
um so those patterns they come from the

1156
00:46:13,920 --> 00:46:16,000
um

1157
00:46:16,000 --> 00:46:18,000
function that they they apply to the

1158
00:46:18,000 --> 00:46:21,040
data it's a it's a sore function derived

1159
00:46:21,040 --> 00:46:22,960
from the address so that that's why they

1160
00:46:22,960 --> 00:46:25,359
end up for the empty areas they end up

1161
00:46:25,359 --> 00:46:27,599
with the patterns because the the xor

1162
00:46:27,599 --> 00:46:28,400
value

1163
00:46:28,400 --> 00:46:31,760
depends on the address and and that

1164
00:46:31,760 --> 00:46:33,200
as an array

1165
00:46:33,200 --> 00:46:36,000
you see it uh under the microscope will

1166
00:46:36,000 --> 00:46:37,920
represent the different address lines

1167
00:46:37,920 --> 00:46:40,240
and that will be decodative different

1168
00:46:40,240 --> 00:46:42,160
values and you end up with funny

1169
00:46:42,160 --> 00:46:44,240
patterns on the surface but you will

1170
00:46:44,240 --> 00:46:46,720
have to somehow predict those

1171
00:46:46,720 --> 00:46:49,680
values and and uh discramble it

1172
00:46:49,680 --> 00:46:52,000
unless you can reverse engineer the

1173
00:46:52,000 --> 00:46:55,280
uh the logic and find out how the the

1174
00:46:55,280 --> 00:46:56,880
scrambling function

1175
00:46:56,880 --> 00:46:59,760
works but it's not straightforward to to

1176
00:46:59,760 --> 00:47:01,040
go from the

1177
00:47:01,040 --> 00:47:04,480
mask from image to um to to the code to

1178
00:47:04,480 --> 00:47:05,839
disassemble

1179
00:47:05,839 --> 00:47:07,760
okay interesting we should talk offline

1180
00:47:07,760 --> 00:47:09,599
because there are tools for for doing

1181
00:47:09,599 --> 00:47:11,680
the extraction and it will be easy to

1182
00:47:11,680 --> 00:47:13,920
add the stages afterwards

1183
00:47:13,920 --> 00:47:15,920
um to try different things to do

1184
00:47:15,920 --> 00:47:17,440
scramble so

1185
00:47:17,440 --> 00:47:19,760
if we can get it the binary out then we

1186
00:47:19,760 --> 00:47:23,040
can start playing with the data so

1187
00:47:23,040 --> 00:47:25,359
anyway we talk offline about it

1188
00:47:25,359 --> 00:47:28,160
any other questions

1189
00:47:28,640 --> 00:47:32,839
excellent well thank you very much

