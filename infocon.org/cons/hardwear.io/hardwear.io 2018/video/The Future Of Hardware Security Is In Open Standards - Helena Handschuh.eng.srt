1
00:00:02,179 --> 00:00:07,770
this is looking<font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> thank you very</font><font color="#E5E5E5"> much</font>

2
00:00:05,580 --> 00:00:11,099
thank you<font color="#CCCCCC"> for inviting</font><font color="#E5E5E5"> me</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> a</font>

3
00:00:07,770 --> 00:00:12,660
pleasure to<font color="#E5E5E5"> speak here today I'm not</font>

4
00:00:11,099 --> 00:00:16,198
<font color="#E5E5E5">gonna speak about post quantum at all</font>

5
00:00:12,660 --> 00:00:18,900
but two completely different topics in

6
00:00:16,199 --> 00:00:20,939
my presentation<font color="#CCCCCC"> the title of this</font>

7
00:00:18,900 --> 00:00:23,549
presentation is<font color="#CCCCCC"> the future of</font><font color="#E5E5E5"> hardware</font>

8
00:00:20,939 --> 00:00:26,609
<font color="#CCCCCC">security is an</font><font color="#E5E5E5"> open</font><font color="#CCCCCC"> standards</font><font color="#E5E5E5"> and I</font>

9
00:00:23,550 --> 00:00:30,449
picked two examples of<font color="#CCCCCC"> work that we've</font>

10
00:00:26,609 --> 00:00:32,850
been<font color="#E5E5E5"> doing at rhombus</font><font color="#CCCCCC"> but that also led</font>

11
00:00:30,449 --> 00:00:34,980
into<font color="#CCCCCC"> standardisation work which</font>

12
00:00:32,850 --> 00:00:37,380
hopefully will convince you<font color="#E5E5E5"> that</font><font color="#CCCCCC"> there's</font>

13
00:00:34,980 --> 00:00:39,779
<font color="#CCCCCC">something good</font><font color="#E5E5E5"> about open</font><font color="#CCCCCC"> standards and</font>

14
00:00:37,380 --> 00:00:40,140
<font color="#CCCCCC">thus</font><font color="#E5E5E5"> this should be the way</font><font color="#CCCCCC"> to go in the</font>

15
00:00:39,780 --> 00:00:46,320
future

16
00:00:40,140 --> 00:00:48,840
um<font color="#E5E5E5"> okay so let's see if I know her</font><font color="#CCCCCC"> okay</font>

17
00:00:46,320 --> 00:00:51,809
so part one is about differential power

18
00:00:48,840 --> 00:00:55,110
analysis and the<font color="#CCCCCC"> so-called test</font><font color="#E5E5E5"> vector</font>

19
00:00:51,809 --> 00:00:56,879
leakage assessment methodology if you've

20
00:00:55,110 --> 00:00:58,469
been here for the trainings I believe

21
00:00:56,879 --> 00:01:00,899
<font color="#CCCCCC">Leila</font><font color="#E5E5E5"> Bettina gave an intro to</font>

22
00:00:58,469 --> 00:01:03,059
<font color="#CCCCCC">side-channel attacks which was probably</font>

23
00:01:00,899 --> 00:01:06,360
<font color="#E5E5E5">way deeper than this</font><font color="#CCCCCC"> so this will be</font>

24
00:01:03,059 --> 00:01:08,189
very<font color="#CCCCCC"> high-level but my goal</font><font color="#E5E5E5"> is to talk a</font>

25
00:01:06,360 --> 00:01:11,460
little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> about standards as compared</font>

26
00:01:08,189 --> 00:01:13,529
to<font color="#E5E5E5"> I guess her technical intro so all</font>

27
00:01:11,460 --> 00:01:16,679
right side channel analysis what<font color="#CCCCCC"> is it</font>

28
00:01:13,530 --> 00:01:18,570
well it was discovered<font color="#E5E5E5"> at CRI CRI is the</font>

29
00:01:16,680 --> 00:01:20,520
former<font color="#E5E5E5"> name of</font><font color="#CCCCCC"> Rambis or should i say</font>

30
00:01:18,570 --> 00:01:24,389
<font color="#E5E5E5">around the spots your eyes so it's now</font>

31
00:01:20,520 --> 00:01:27,810
the same company<font color="#CCCCCC"> in the</font><font color="#E5E5E5"> mid 90s</font><font color="#CCCCCC"> by a</font><font color="#E5E5E5"> pal</font>

32
00:01:24,390 --> 00:01:30,060
culture um it's a very<font color="#CCCCCC"> low-cost</font>

33
00:01:27,810 --> 00:01:31,829
<font color="#CCCCCC">non-invasive attack on crypto</font><font color="#E5E5E5"> hardware</font>

34
00:01:30,060 --> 00:01:33,930
<font color="#E5E5E5">so it allows you to do different</font><font color="#CCCCCC"> things</font>

35
00:01:31,829 --> 00:01:36,210
amongst others the<font color="#CCCCCC"> most fun part is key</font>

36
00:01:33,930 --> 00:01:38,579
extraction obviously but it can also

37
00:01:36,210 --> 00:01:40,860
<font color="#E5E5E5">allow you</font><font color="#CCCCCC"> to do reverse</font><font color="#E5E5E5"> engineering fine</font>

38
00:01:38,579 --> 00:01:43,229
for example what secret<font color="#CCCCCC"> s boxes are out</font>

39
00:01:40,860 --> 00:01:45,960
<font color="#CCCCCC">of specific algorithms</font><font color="#E5E5E5"> all sorts of fun</font>

40
00:01:43,229 --> 00:01:49,408
like that<font color="#CCCCCC"> pretty much all cryptographic</font>

41
00:01:45,960 --> 00:01:51,570
algorithms are vulnerable<font color="#E5E5E5"> mostly the the</font>

42
00:01:49,409 --> 00:01:55,100
<font color="#E5E5E5">easiest ones are</font><font color="#CCCCCC"> actually the public key</font>

43
00:01:51,570 --> 00:01:58,648
algorithms RSA diffie-hellman and so on

44
00:01:55,100 --> 00:02:00,419
<font color="#E5E5E5">but also the symmetric key crypto you</font>

45
00:01:58,649 --> 00:02:02,189
can break it with differential power

46
00:02:00,420 --> 00:02:03,570
analysis as compared to simple power

47
00:02:02,189 --> 00:02:07,529
analysis and I'll explain<font color="#E5E5E5"> the difference</font>

48
00:02:03,570 --> 00:02:09,720
<font color="#CCCCCC">between</font><font color="#E5E5E5"> the two</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> also then the</font><font color="#CCCCCC"> Mack</font>

49
00:02:07,530 --> 00:02:11,730
algorithm such as<font color="#E5E5E5"> H</font><font color="#CCCCCC"> Mack you can also</font>

50
00:02:09,720 --> 00:02:13,770
extract<font color="#E5E5E5"> keys but it does get more and</font>

51
00:02:11,730 --> 00:02:15,880
more<font color="#CCCCCC"> complicated as you as you move</font>

52
00:02:13,770 --> 00:02:18,580
<font color="#CCCCCC">all types</font><font color="#E5E5E5"> of hardware and software</font>

53
00:02:15,880 --> 00:02:22,299
affected all types<font color="#E5E5E5"> of implementations</font>

54
00:02:18,580 --> 00:02:24,550
<font color="#E5E5E5">even if you have a lot</font><font color="#CCCCCC"> of noise it will</font>

55
00:02:22,300 --> 00:02:26,640
still<font color="#CCCCCC"> work you need more</font><font color="#E5E5E5"> power traces to</font>

56
00:02:24,550 --> 00:02:31,060
be able<font color="#CCCCCC"> to do it but it still works</font><font color="#E5E5E5"> and</font>

57
00:02:26,640 --> 00:02:33,489
you can<font color="#CCCCCC"> do same similar techniques</font><font color="#E5E5E5"> with</font>

58
00:02:31,060 --> 00:02:35,640
<font color="#E5E5E5">different signal sources</font><font color="#CCCCCC"> so you can use</font>

59
00:02:33,490 --> 00:02:38,620
power measurements but you can also use

60
00:02:35,640 --> 00:02:39,160
<font color="#E5E5E5">electromagnetic measurements</font><font color="#CCCCCC"> it still</font>

61
00:02:38,620 --> 00:02:41,440
works

62
00:02:39,160 --> 00:02:43,770
<font color="#CCCCCC">ok so a little</font><font color="#E5E5E5"> bit of intro this is</font>

63
00:02:41,440 --> 00:02:46,720
supposed to<font color="#E5E5E5"> be very simple</font>

64
00:02:43,770 --> 00:02:49,060
<font color="#CCCCCC">so</font><font color="#E5E5E5"> simple power analysis how does this</font>

65
00:02:46,720 --> 00:02:51,760
work well imagine you're<font color="#E5E5E5"> doing an RSA</font>

66
00:02:49,060 --> 00:02:54,400
computation<font color="#E5E5E5"> RSA typically when you</font>

67
00:02:51,760 --> 00:02:57,299
implement<font color="#E5E5E5"> it it will be implemented as a</font>

68
00:02:54,400 --> 00:02:59,590
very<font color="#E5E5E5"> straightforward exponentiation</font>

69
00:02:57,300 --> 00:03:03,760
algorithm so there's something<font color="#CCCCCC"> called a</font>

70
00:02:59,590 --> 00:03:06,250
square and multiply algorithm and since

71
00:03:03,760 --> 00:03:07,959
this is a<font color="#E5E5E5"> modular exponentiation you</font>

72
00:03:06,250 --> 00:03:09,970
need to know<font color="#E5E5E5"> that the secret is the</font>

73
00:03:07,960 --> 00:03:11,590
actual exponent and this<font color="#E5E5E5"> exponent has</font>

74
00:03:09,970 --> 00:03:14,440
some bits<font color="#CCCCCC"> and you want to find</font><font color="#E5E5E5"> out what</font>

75
00:03:11,590 --> 00:03:16,630
these<font color="#CCCCCC"> are so your Square and</font><font color="#E5E5E5"> multiply</font>

76
00:03:14,440 --> 00:03:19,150
algorithm<font color="#E5E5E5"> will perform very easily it</font>

77
00:03:16,630 --> 00:03:21,670
will say if you<font color="#CCCCCC"> know the bit of your</font>

78
00:03:19,150 --> 00:03:25,420
secret exponent<font color="#E5E5E5"> you're currently working</font>

79
00:03:21,670 --> 00:03:27,700
<font color="#E5E5E5">on is equal to</font><font color="#CCCCCC"> 1 you perform an extra</font>

80
00:03:25,420 --> 00:03:29,859
multiply on top of a square<font color="#E5E5E5"> every time</font>

81
00:03:27,700 --> 00:03:32,019
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> super simple so what that means</font>

82
00:03:29,860 --> 00:03:35,040
though<font color="#CCCCCC"> is that you can very</font><font color="#E5E5E5"> simply read</font>

83
00:03:32,020 --> 00:03:37,600
from a<font color="#E5E5E5"> proud trace of your execution</font>

84
00:03:35,040 --> 00:03:39,609
<font color="#CCCCCC">what the secret bits are so you can see</font>

85
00:03:37,600 --> 00:03:41,470
in the picture here<font color="#CCCCCC"> there's you know</font>

86
00:03:39,610 --> 00:03:42,670
small<font color="#CCCCCC"> Peaks and high peaks whenever</font>

87
00:03:41,470 --> 00:03:45,820
there's a high peak which looks

88
00:03:42,670 --> 00:03:47,320
different<font color="#E5E5E5"> this is most</font><font color="#CCCCCC"> likely a</font><font color="#E5E5E5"> multiply</font>

89
00:03:45,820 --> 00:03:49,810
it's a little bit different<font color="#CCCCCC"> from a</font>

90
00:03:47,320 --> 00:03:51,250
squaring and so the smaller<font color="#CCCCCC"> Peaks are</font>

91
00:03:49,810 --> 00:03:52,930
all squares and every time you have a

92
00:03:51,250 --> 00:03:55,150
square followed by a multiply now

93
00:03:52,930 --> 00:03:57,160
suddenly<font color="#E5E5E5"> you know the bit</font><font color="#CCCCCC"> as one so look</font>

94
00:03:55,150 --> 00:04:01,650
at the trace<font color="#E5E5E5"> and just read out the</font>

95
00:03:57,160 --> 00:04:01,650
secret<font color="#E5E5E5"> at exponent all right pretty cool</font>

96
00:04:02,490 --> 00:04:08,020
sorry<font color="#CCCCCC"> ok so that was simple power</font>

97
00:04:06,130 --> 00:04:10,810
analysis that<font color="#E5E5E5"> means you need one trace</font>

98
00:04:08,020 --> 00:04:12,700
essentially look at<font color="#E5E5E5"> the trace find the</font>

99
00:04:10,810 --> 00:04:14,500
secret exponent of your algorithm<font color="#CCCCCC"> and</font>

100
00:04:12,700 --> 00:04:15,850
you're all done<font color="#CCCCCC"> with symmetric</font>

101
00:04:14,500 --> 00:04:18,070
algorithms it's a little bit more

102
00:04:15,850 --> 00:04:19,870
complicated<font color="#E5E5E5"> it's a differential style</font>

103
00:04:18,070 --> 00:04:21,430
attack which<font color="#CCCCCC"> means that you need more</font>

104
00:04:19,870 --> 00:04:23,890
<font color="#E5E5E5">than one trace you have to combine</font>

105
00:04:21,430 --> 00:04:25,990
traces statistically<font color="#E5E5E5"> and try to figure</font>

106
00:04:23,890 --> 00:04:27,880
<font color="#E5E5E5">out the secret information from that</font>

107
00:04:25,990 --> 00:04:29,830
<font color="#E5E5E5">all right so look at it let's look at</font>

108
00:04:27,880 --> 00:04:31,479
what this what<font color="#E5E5E5"> this works if you look at</font>

109
00:04:29,830 --> 00:04:34,180
one power trace here let's say it's an

110
00:04:31,479 --> 00:04:36,639
<font color="#CCCCCC">Aes for</font><font color="#E5E5E5"> example</font><font color="#CCCCCC"> a yes execution</font><font color="#E5E5E5"> one</font>

111
00:04:34,180 --> 00:04:38,349
power trace the<font color="#E5E5E5"> signal-to-noise ratio</font>

112
00:04:36,639 --> 00:04:42,819
may be very<font color="#E5E5E5"> small</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> you don't actually</font>

113
00:04:38,349 --> 00:04:44,979
see much<font color="#CCCCCC"> but</font><font color="#E5E5E5"> statistically there's</font>

114
00:04:42,819 --> 00:04:47,289
influence in what<font color="#E5E5E5"> is is going on so</font>

115
00:04:44,979 --> 00:04:52,330
let's say for<font color="#CCCCCC"> example you look at a</font>

116
00:04:47,289 --> 00:04:54,699
<font color="#E5E5E5">specific bit in a</font><font color="#CCCCCC"> specific register it</font>

117
00:04:52,330 --> 00:04:57,068
happens to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> that whenever this bit is</font>

118
00:04:54,699 --> 00:04:59,259
either<font color="#E5E5E5"> 0</font><font color="#CCCCCC"> 1 the power consumption what's</font>

119
00:04:57,069 --> 00:05:01,360
happening will be slightly<font color="#CCCCCC"> different</font><font color="#E5E5E5"> so</font>

120
00:04:59,259 --> 00:05:03,849
if you look<font color="#E5E5E5"> at it straight</font><font color="#CCCCCC"> like that you</font>

121
00:05:01,360 --> 00:05:06,539
don't<font color="#E5E5E5"> see it but if you now</font><font color="#CCCCCC"> take a lot</font>

122
00:05:03,849 --> 00:05:08,590
of<font color="#E5E5E5"> different</font><font color="#CCCCCC"> traces and combine them</font>

123
00:05:06,539 --> 00:05:12,068
<font color="#E5E5E5">statistically you will see a difference</font>

124
00:05:08,590 --> 00:05:14,020
in where the<font color="#CCCCCC"> centre of</font><font color="#E5E5E5"> the signal</font>

125
00:05:12,069 --> 00:05:16,870
amplitude<font color="#CCCCCC"> is located so in this graph</font>

126
00:05:14,020 --> 00:05:19,330
<font color="#CCCCCC">here the red the red</font><font color="#E5E5E5"> the pink graph</font>

127
00:05:16,870 --> 00:05:22,090
shows you what<font color="#E5E5E5"> happens when the bit is</font><font color="#CCCCCC"> 1</font>

128
00:05:19,330 --> 00:05:24,550
and the blue<font color="#CCCCCC"> one kind of represents what</font>

129
00:05:22,090 --> 00:05:26,770
happens when the bit is<font color="#E5E5E5"> 0</font><font color="#CCCCCC"> I think it's</font>

130
00:05:24,550 --> 00:05:29,050
the opposite<font color="#E5E5E5"> sorry anyway there's a</font>

131
00:05:26,770 --> 00:05:33,190
difference<font color="#CCCCCC"> and if you have enough traces</font>

132
00:05:29,050 --> 00:05:35,740
you will see the difference<font color="#CCCCCC"> okay so now</font>

133
00:05:33,190 --> 00:05:37,599
how does<font color="#CCCCCC"> DPA differential power analysis</font>

134
00:05:35,740 --> 00:05:39,780
actually<font color="#E5E5E5"> work while you use statistical</font>

135
00:05:37,599 --> 00:05:42,940
methods to<font color="#CCCCCC"> analyze those difference and</font>

136
00:05:39,780 --> 00:05:46,900
then<font color="#E5E5E5"> you can extract keys and data out</font>

137
00:05:42,940 --> 00:05:49,690
<font color="#CCCCCC">of that you can do the same thing with</font>

138
00:05:46,900 --> 00:05:52,659
electromagnetic measurements it will

139
00:05:49,690 --> 00:05:55,240
work just<font color="#E5E5E5"> the same way so different</font>

140
00:05:52,659 --> 00:05:57,580
sources<font color="#E5E5E5"> are possible</font><font color="#CCCCCC"> and now we can</font><font color="#E5E5E5"> have</font>

141
00:05:55,240 --> 00:06:05,080
a<font color="#E5E5E5"> look at how this how</font><font color="#CCCCCC"> this actually</font>

142
00:05:57,580 --> 00:06:07,000
works<font color="#CCCCCC"> so still very simple examples ok</font>

143
00:06:05,080 --> 00:06:10,719
so let's walk<font color="#E5E5E5"> through an</font><font color="#CCCCCC"> example here</font>

144
00:06:07,000 --> 00:06:12,610
let's say you have an<font color="#CCCCCC"> AES</font><font color="#E5E5E5"> implementation</font>

145
00:06:10,719 --> 00:06:15,669
<font color="#E5E5E5">the first part of the</font><font color="#CCCCCC"> implementation is</font>

146
00:06:12,610 --> 00:06:17,889
<font color="#CCCCCC">typically you take</font><font color="#E5E5E5"> a key you XOR it with</font>

147
00:06:15,669 --> 00:06:21,460
your<font color="#CCCCCC"> input data</font><font color="#E5E5E5"> and then you run through</font>

148
00:06:17,889 --> 00:06:23,289
<font color="#E5E5E5">a bunch of</font><font color="#CCCCCC"> S</font><font color="#E5E5E5"> boxes</font><font color="#CCCCCC"> now if we take we</font>

149
00:06:21,460 --> 00:06:25,210
look at that key we take the first<font color="#CCCCCC"> eight</font>

150
00:06:23,289 --> 00:06:28,419
<font color="#CCCCCC">bits</font><font color="#E5E5E5"> that will go through</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> first</font><font color="#CCCCCC"> S</font>

151
00:06:25,210 --> 00:06:30,008
box<font color="#CCCCCC"> when you</font><font color="#E5E5E5"> exit through the with the</font>

152
00:06:28,419 --> 00:06:31,960
key and run through<font color="#CCCCCC"> the S box you're</font>

153
00:06:30,009 --> 00:06:34,479
applying a nonlinear operation and we're

154
00:06:31,960 --> 00:06:37,448
trying to find<font color="#CCCCCC"> out what's happening at</font>

155
00:06:34,479 --> 00:06:38,919
the output<font color="#CCCCCC"> of that first s box</font><font color="#E5E5E5"> so we're</font>

156
00:06:37,449 --> 00:06:39,639
going to<font color="#E5E5E5"> look at a selection</font><font color="#CCCCCC"> function</font>

157
00:06:38,919 --> 00:06:41,830
<font color="#E5E5E5">for exam</font>

158
00:06:39,639 --> 00:06:43,120
the least significant bit<font color="#CCCCCC"> of that output</font>

159
00:06:41,830 --> 00:06:47,498
<font color="#E5E5E5">and try to figure out what's happening</font>

160
00:06:43,120 --> 00:06:50,169
<font color="#CCCCCC">there</font><font color="#E5E5E5"> so the principle is that you're</font>

161
00:06:47,499 --> 00:06:52,029
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> try to guess what the</font><font color="#CCCCCC"> first</font>

162
00:06:50,169 --> 00:06:53,789
<font color="#E5E5E5">byte of</font><font color="#CCCCCC"> that key might be and then</font>

163
00:06:52,029 --> 00:06:56,710
you're going<font color="#E5E5E5"> to try to do some</font>

164
00:06:53,789 --> 00:06:58,870
statistical analysis on<font color="#E5E5E5"> the power traces</font>

165
00:06:56,710 --> 00:07:00,729
<font color="#E5E5E5">that you're collecting to figure out</font>

166
00:06:58,870 --> 00:07:04,719
which one is your right guess and which

167
00:07:00,729 --> 00:07:08,020
ones are wrong<font color="#E5E5E5"> one out of 256 will be</font>

168
00:07:04,719 --> 00:07:10,419
correct and one the other 255 ones will

169
00:07:08,020 --> 00:07:14,378
be wrong<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so how do you tell</font><font color="#E5E5E5"> the</font>

170
00:07:10,419 --> 00:07:16,120
<font color="#E5E5E5">difference</font><font color="#CCCCCC"> well</font><font color="#E5E5E5"> very simple let's say</font>

171
00:07:14,379 --> 00:07:19,210
you have a key hypothesis of<font color="#CCCCCC"> eight bits</font>

172
00:07:16,120 --> 00:07:20,979
<font color="#E5E5E5">here so the you know</font><font color="#CCCCCC"> the possible value</font>

173
00:07:19,210 --> 00:07:22,568
is presented in green because<font color="#CCCCCC"> we happen</font>

174
00:07:20,979 --> 00:07:25,688
to<font color="#E5E5E5"> know it's the right guess so you can</font>

175
00:07:22,569 --> 00:07:28,150
see what it looks<font color="#E5E5E5"> like</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> that key</font>

176
00:07:25,689 --> 00:07:31,300
<font color="#CCCCCC">value you can add it to the input data</font>

177
00:07:28,150 --> 00:07:34,150
<font color="#E5E5E5">that you chose</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> you can predict what</font>

178
00:07:31,300 --> 00:07:36,639
<font color="#CCCCCC">the value will be at the output of the S</font>

179
00:07:34,150 --> 00:07:38,409
box<font color="#CCCCCC"> so</font><font color="#E5E5E5"> you can you</font><font color="#CCCCCC"> know exactly what the</font>

180
00:07:36,639 --> 00:07:41,620
output<font color="#E5E5E5"> will be once you've guessed the</font>

181
00:07:38,409 --> 00:07:43,900
key let's say so what you can now do is

182
00:07:41,620 --> 00:07:46,810
you can take all<font color="#CCCCCC"> your power traces</font><font color="#E5E5E5"> from</font>

183
00:07:43,900 --> 00:07:49,448
different input<font color="#E5E5E5"> data sets and you can</font>

184
00:07:46,810 --> 00:07:51,879
sort<font color="#E5E5E5"> them according to whether that</font>

185
00:07:49,449 --> 00:07:56,860
predicted output<font color="#E5E5E5"> bit of the first</font><font color="#CCCCCC"> S box</font>

186
00:07:51,879 --> 00:07:58,479
<font color="#E5E5E5">is 0 or</font><font color="#CCCCCC"> 1 ok so you sort them put it put</font>

187
00:07:56,860 --> 00:08:00,729
them in two buckets the<font color="#E5E5E5"> left-hand</font>

188
00:07:58,479 --> 00:08:03,789
buckets is traces with a predicted least

189
00:08:00,729 --> 00:08:06,870
significant bit<font color="#CCCCCC"> of</font><font color="#E5E5E5"> one and the right</font>

190
00:08:03,789 --> 00:08:11,169
side here is traces with predictably

191
00:08:06,870 --> 00:08:13,270
significant bit equals to<font color="#CCCCCC"> zero ok so now</font>

192
00:08:11,169 --> 00:08:16,779
you<font color="#E5E5E5"> have a bunch of traces in in each</font>

193
00:08:13,270 --> 00:08:19,270
bucket<font color="#E5E5E5"> you take all of these traces in</font>

194
00:08:16,779 --> 00:08:20,860
each bucket<font color="#E5E5E5"> you</font><font color="#CCCCCC"> averaged them so that</font>

195
00:08:19,270 --> 00:08:23,139
you have<font color="#E5E5E5"> kind of one global</font>

196
00:08:20,860 --> 00:08:25,899
<font color="#E5E5E5">representative trace and then you</font>

197
00:08:23,139 --> 00:08:28,930
subtract those two averages<font color="#E5E5E5"> now what's</font>

198
00:08:25,899 --> 00:08:30,509
going to<font color="#CCCCCC"> happen is if your key guess is</font>

199
00:08:28,930 --> 00:08:33,010
correct

200
00:08:30,509 --> 00:08:35,079
typically you<font color="#E5E5E5"> will be right about</font><font color="#CCCCCC"> all</font>

201
00:08:33,010 --> 00:08:37,208
the ones<font color="#E5E5E5"> being processed in that one</font>

202
00:08:35,078 --> 00:08:40,120
bucket and all the zeros being processed

203
00:08:37,208 --> 00:08:42,218
in the other bucket<font color="#E5E5E5"> so you should see</font>

204
00:08:40,120 --> 00:08:45,519
some statistical difference in the means

205
00:08:42,219 --> 00:08:47,529
in the averages<font color="#E5E5E5"> of these</font><font color="#CCCCCC"> traces and so</font>

206
00:08:45,519 --> 00:08:49,990
in<font color="#E5E5E5"> case of</font><font color="#CCCCCC"> a correct key what happens is</font>

207
00:08:47,529 --> 00:08:52,990
this kind of power trace as a result you

208
00:08:49,990 --> 00:08:53,480
<font color="#CCCCCC">have a bunch of you know</font><font color="#E5E5E5"> noise and then</font>

209
00:08:52,990 --> 00:08:55,279
<font color="#E5E5E5">suddenly</font>

210
00:08:53,480 --> 00:08:58,670
you have some<font color="#E5E5E5"> peaks in there this means</font>

211
00:08:55,279 --> 00:09:00,829
okay<font color="#E5E5E5"> in this particular place my guess</font>

212
00:08:58,670 --> 00:09:03,349
was correct<font color="#CCCCCC"> and so I have a chance that</font>

213
00:09:00,829 --> 00:09:13,969
my teeth bite that I've been guessing

214
00:09:03,350 --> 00:09:15,949
<font color="#E5E5E5">was correct -</font><font color="#CCCCCC"> no I'm good thank you okay</font>

215
00:09:13,970 --> 00:09:17,810
so let's see what happens if the key

216
00:09:15,949 --> 00:09:19,910
guess is incorrect<font color="#E5E5E5"> because it's too easy</font>

217
00:09:17,810 --> 00:09:21,529
<font color="#CCCCCC">to just say okay if I guess correctly I</font>

218
00:09:19,910 --> 00:09:24,350
will<font color="#E5E5E5"> see it but there has to be a</font>

219
00:09:21,529 --> 00:09:26,480
difference<font color="#E5E5E5"> with when I guess incorrectly</font>

220
00:09:24,350 --> 00:09:28,490
otherwise I don't<font color="#CCCCCC"> see anything all</font><font color="#E5E5E5"> right</font>

221
00:09:26,480 --> 00:09:30,620
<font color="#CCCCCC">so when I do guess incorrectly</font><font color="#E5E5E5"> what</font>

222
00:09:28,490 --> 00:09:32,750
happens well essentially<font color="#E5E5E5"> what</font><font color="#CCCCCC"> I'm doing</font>

223
00:09:30,620 --> 00:09:35,000
is completely<font color="#E5E5E5"> random predictions right</font>

224
00:09:32,750 --> 00:09:37,630
<font color="#E5E5E5">I'm sorting trying to sort</font><font color="#CCCCCC"> races into</font>

225
00:09:35,000 --> 00:09:40,579
<font color="#E5E5E5">two buckets</font><font color="#CCCCCC"> according to a wrong</font>

226
00:09:37,630 --> 00:09:42,560
hypothesis and so eventually<font color="#E5E5E5"> I'll have</font>

227
00:09:40,579 --> 00:09:44,839
<font color="#E5E5E5">about half the traces in one bucket</font>

228
00:09:42,560 --> 00:09:47,589
<font color="#E5E5E5">represent the one the other half is</font><font color="#CCCCCC"> zero</font>

229
00:09:44,839 --> 00:09:49,940
and<font color="#E5E5E5"> same in the other bucket</font><font color="#CCCCCC"> and</font>

230
00:09:47,589 --> 00:09:54,970
therefore if I do the<font color="#E5E5E5"> same exercise</font>

231
00:09:49,940 --> 00:09:58,910
again average the traces in both buckets

232
00:09:54,970 --> 00:10:00,949
<font color="#E5E5E5">subtract well</font><font color="#CCCCCC"> I end up seeing nothing</font>

233
00:09:58,910 --> 00:10:03,110
because now I'm just randomly<font color="#CCCCCC"> sorting</font>

234
00:10:00,949 --> 00:10:05,779
stuff<font color="#E5E5E5"> and and they all look alike on</font>

235
00:10:03,110 --> 00:10:07,850
average<font color="#CCCCCC"> and so the difference between</font>

236
00:10:05,779 --> 00:10:09,620
<font color="#E5E5E5">the correct case and the incorrect guess</font>

237
00:10:07,850 --> 00:10:11,810
is<font color="#E5E5E5"> very easy to see because the correct</font>

238
00:10:09,620 --> 00:10:13,579
guess there's not really a lot<font color="#CCCCCC"> of</font>

239
00:10:11,810 --> 00:10:15,709
<font color="#E5E5E5">mathematics involved you just</font><font color="#CCCCCC"> have to</font>

240
00:10:13,579 --> 00:10:17,870
look at the power trace average subtract

241
00:10:15,709 --> 00:10:20,420
<font color="#E5E5E5">look at the power trace if you see Peaks</font>

242
00:10:17,870 --> 00:10:22,519
<font color="#E5E5E5">your guess</font><font color="#CCCCCC"> is correct</font><font color="#E5E5E5"> if you don't see</font>

243
00:10:20,420 --> 00:10:24,439
Peaks your<font color="#E5E5E5"> guess is not correct so you</font>

244
00:10:22,519 --> 00:10:25,880
can filter out all of the incorrect ones

245
00:10:24,440 --> 00:10:28,579
and figure out<font color="#E5E5E5"> the</font><font color="#CCCCCC"> one-bite</font><font color="#E5E5E5"> that you</font>

246
00:10:25,880 --> 00:10:31,790
were looking<font color="#CCCCCC"> for okay</font><font color="#E5E5E5"> then since this is</font>

247
00:10:28,579 --> 00:10:34,910
a yes<font color="#CCCCCC"> 1s box</font><font color="#E5E5E5"> with it keep its now you</font>

248
00:10:31,790 --> 00:10:38,060
iterate through the<font color="#CCCCCC"> 16s</font><font color="#E5E5E5"> boxes do the</font>

249
00:10:34,910 --> 00:10:42,800
exercise again<font color="#E5E5E5"> and recover this 16 bytes</font>

250
00:10:38,060 --> 00:10:44,750
of the key<font color="#E5E5E5"> super simple okay this is</font>

251
00:10:42,800 --> 00:10:48,170
<font color="#E5E5E5">very high level but</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> so everybody</font>

252
00:10:44,750 --> 00:10:51,110
can<font color="#E5E5E5"> understand how this works all right</font>

253
00:10:48,170 --> 00:10:55,610
<font color="#E5E5E5">so now what do we do to try</font><font color="#CCCCCC"> to protect</font>

254
00:10:51,110 --> 00:10:58,370
against<font color="#E5E5E5"> this</font><font color="#CCCCCC"> well so in typical Parden</font>

255
00:10:55,610 --> 00:11:00,529
Alice's countermeasure<font color="#E5E5E5"> world you have a</font>

256
00:10:58,370 --> 00:11:02,959
different<font color="#E5E5E5"> number of things that</font><font color="#CCCCCC"> you can</font>

257
00:11:00,529 --> 00:11:04,819
do you can try<font color="#E5E5E5"> to for example obfuscate</font>

258
00:11:02,959 --> 00:11:06,680
a little bit what<font color="#E5E5E5"> you're doing you</font><font color="#CCCCCC"> can</font>

259
00:11:04,819 --> 00:11:07,279
try to<font color="#E5E5E5"> reduce how</font><font color="#CCCCCC"> much the</font><font color="#E5E5E5"> hardware</font>

260
00:11:06,680 --> 00:11:10,579
<font color="#E5E5E5">actually</font>

261
00:11:07,279 --> 00:11:13,100
<font color="#CCCCCC">Leakes you can implement so-called</font>

262
00:11:10,579 --> 00:11:14,660
<font color="#E5E5E5">balanced hardware software and dynamic</font>

263
00:11:13,100 --> 00:11:17,540
differential logic so you have

264
00:11:14,660 --> 00:11:19,129
essentially<font color="#E5E5E5"> let's say two rails that</font>

265
00:11:17,540 --> 00:11:21,709
will do the opposite to<font color="#CCCCCC"> each</font><font color="#E5E5E5"> other so</font>

266
00:11:19,129 --> 00:11:24,559
that<font color="#E5E5E5"> it compensates every time you send</font>

267
00:11:21,709 --> 00:11:26,508
a signal through them and<font color="#E5E5E5"> then so that's</font>

268
00:11:24,559 --> 00:11:30,490
kind of at the design<font color="#CCCCCC"> level on the left</font>

269
00:11:26,509 --> 00:11:33,019
<font color="#E5E5E5">hand left hand side and then on the</font>

270
00:11:30,490 --> 00:11:36,829
right<font color="#E5E5E5"> hand side what you see</font><font color="#CCCCCC"> is when you</font>

271
00:11:33,019 --> 00:11:38,389
try to add noise or make things<font color="#E5E5E5"> look</font>

272
00:11:36,829 --> 00:11:43,209
<font color="#CCCCCC">more random so that you can't tell</font>

273
00:11:38,389 --> 00:11:45,649
<font color="#E5E5E5">statistically anymore so you can add</font>

274
00:11:43,209 --> 00:11:48,589
amplitude and temporal noise for example

275
00:11:45,649 --> 00:11:50,509
so you try to shift<font color="#E5E5E5"> things in time to</font>

276
00:11:48,589 --> 00:11:52,220
make sure<font color="#CCCCCC"> that the attacker can't align</font>

277
00:11:50,509 --> 00:11:54,819
the traces correctly<font color="#E5E5E5"> because then again</font>

278
00:11:52,220 --> 00:11:57,589
<font color="#CCCCCC">you're sorting completely random stuff</font>

279
00:11:54,819 --> 00:12:00,709
you can try to try<font color="#E5E5E5"> to add amplitude</font>

280
00:11:57,589 --> 00:12:03,230
noise<font color="#CCCCCC"> you can try to</font><font color="#E5E5E5"> use dummy</font>

281
00:12:00,709 --> 00:12:06,699
operations for example<font color="#CCCCCC"> for time</font><font color="#E5E5E5"> timing</font>

282
00:12:03,230 --> 00:12:09,470
<font color="#E5E5E5">shift time shifting</font><font color="#CCCCCC"> and then the more</font>

283
00:12:06,699 --> 00:12:12,079
theoretical<font color="#E5E5E5"> mathematical ways of doing</font>

284
00:12:09,470 --> 00:12:14,660
it is<font color="#E5E5E5"> to incorporate randomness so</font><font color="#CCCCCC"> now</font>

285
00:12:12,079 --> 00:12:17,479
what you're doing<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that you're taking</font>

286
00:12:14,660 --> 00:12:19,040
<font color="#CCCCCC">your original data</font><font color="#E5E5E5"> you're masking it</font>

287
00:12:17,480 --> 00:12:21,199
with<font color="#CCCCCC"> a random value so that it has</font>

288
00:12:19,040 --> 00:12:23,300
nothing<font color="#CCCCCC"> to do with the data</font><font color="#E5E5E5"> anymore</font><font color="#CCCCCC"> that</font>

289
00:12:21,199 --> 00:12:25,370
<font color="#CCCCCC">you were supposed to be processing</font><font color="#E5E5E5"> you</font>

290
00:12:23,300 --> 00:12:29,540
run through<font color="#E5E5E5"> the algorithm to them some</font>

291
00:12:25,370 --> 00:12:31,009
tricks<font color="#E5E5E5"> to</font><font color="#CCCCCC"> reline in the end unmask in</font>

292
00:12:29,540 --> 00:12:33,349
the end<font color="#E5E5E5"> and provide the output but</font>

293
00:12:31,009 --> 00:12:35,809
throughout the computation<font color="#E5E5E5"> whatever you</font>

294
00:12:33,350 --> 00:12:37,970
were supposed to be<font color="#E5E5E5"> doing is now looking</font>

295
00:12:35,809 --> 00:12:39,529
<font color="#CCCCCC">completely random and so it's way more</font>

296
00:12:37,970 --> 00:12:41,240
difficult<font color="#E5E5E5"> to try to sort then you have</font>

297
00:12:39,529 --> 00:12:43,370
to go to second orders<font color="#E5E5E5"> through it orders</font>

298
00:12:41,240 --> 00:12:46,610
higher orders<font color="#CCCCCC"> in order to be able to</font>

299
00:12:43,370 --> 00:12:49,220
attack this<font color="#E5E5E5"> I'm asking for a symmetric</font>

300
00:12:46,610 --> 00:12:52,040
<font color="#CCCCCC">key crypto it's called blinding for</font>

301
00:12:49,220 --> 00:12:54,339
<font color="#E5E5E5">asymmetric key crypto</font><font color="#CCCCCC"> you can use</font>

302
00:12:52,040 --> 00:12:56,300
<font color="#CCCCCC">something more evolved such as threshold</font>

303
00:12:54,339 --> 00:12:59,449
implementations where<font color="#E5E5E5"> you start sharing</font>

304
00:12:56,300 --> 00:13:02,420
<font color="#E5E5E5">each</font><font color="#CCCCCC"> value and variable you're dealing</font>

305
00:12:59,449 --> 00:13:05,089
with into several<font color="#E5E5E5"> parts not just</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> for</font>

306
00:13:02,420 --> 00:13:07,099
first second order protection<font color="#E5E5E5"> but many</font>

307
00:13:05,089 --> 00:13:09,499
<font color="#E5E5E5">more you can have n shares and then you</font>

308
00:13:07,100 --> 00:13:12,019
know<font color="#E5E5E5"> that whenever you try to run</font>

309
00:13:09,499 --> 00:13:15,199
<font color="#CCCCCC">statistics on n minus</font><font color="#E5E5E5"> 1 shares you can</font>

310
00:13:12,019 --> 00:13:18,529
still not see anything<font color="#E5E5E5"> that's provably</font>

311
00:13:15,199 --> 00:13:20,649
<font color="#E5E5E5">to okay</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then there's one other</font>

312
00:13:18,529 --> 00:13:22,499
<font color="#E5E5E5">technique which is called</font><font color="#CCCCCC"> for</font>

313
00:13:20,649 --> 00:13:27,189
call<font color="#CCCCCC"> 'evil</font><font color="#E5E5E5"> countermeasures which</font><font color="#CCCCCC"> i can</font>

314
00:13:22,499 --> 00:13:29,709
explain a<font color="#E5E5E5"> little bit which</font><font color="#CCCCCC"> is in a</font>

315
00:13:27,189 --> 00:13:31,449
setting where<font color="#CCCCCC"> you're deciding you can't</font>

316
00:13:29,709 --> 00:13:33,459
really<font color="#CCCCCC"> change the</font><font color="#E5E5E5"> hardware too much</font>

317
00:13:31,449 --> 00:13:36,248
everything I talked<font color="#CCCCCC"> about</font><font color="#E5E5E5"> previously is</font>

318
00:13:33,459 --> 00:13:37,989
either<font color="#CCCCCC"> a hardware change or a software</font>

319
00:13:36,249 --> 00:13:40,959
<font color="#E5E5E5">change but an implementation change</font>

320
00:13:37,990 --> 00:13:42,999
sometimes you're in a<font color="#E5E5E5"> setting a</font>

321
00:13:40,959 --> 00:13:45,219
configuration where<font color="#CCCCCC"> you cannot actually</font>

322
00:13:42,999 --> 00:13:46,749
change the implementation<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then you</font>

323
00:13:45,220 --> 00:13:49,660
have to come up<font color="#CCCCCC"> with</font><font color="#E5E5E5"> something that will</font>

324
00:13:46,749 --> 00:13:52,389
allow<font color="#CCCCCC"> you to provably show that there is</font>

325
00:13:49,660 --> 00:13:54,490
<font color="#E5E5E5">not enough information in what you're</font>

326
00:13:52,389 --> 00:13:57,579
<font color="#CCCCCC">doing and in</font><font color="#E5E5E5"> the number of times you</font>

327
00:13:54,490 --> 00:13:59,619
call the you use the<font color="#E5E5E5"> correct key</font><font color="#CCCCCC"> that</font>

328
00:13:57,579 --> 00:14:02,859
you could do statistical analysis on<font color="#E5E5E5"> it</font>

329
00:13:59,619 --> 00:14:06,670
so<font color="#E5E5E5"> for example one way of doing</font><font color="#CCCCCC"> this is</font>

330
00:14:02,860 --> 00:14:08,949
<font color="#E5E5E5">to</font><font color="#CCCCCC"> use a tree of keys</font><font color="#E5E5E5"> instead of using</font>

331
00:14:06,670 --> 00:14:11,469
always the same key you can derive keys

332
00:14:08,949 --> 00:14:14,079
different keys from your first key and

333
00:14:11,470 --> 00:14:15,790
walk down<font color="#CCCCCC"> a tree</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> make</font><font color="#E5E5E5"> sure that each</font>

334
00:14:14,079 --> 00:14:18,670
<font color="#CCCCCC">one of those keys</font><font color="#E5E5E5"> that you're using in</font>

335
00:14:15,790 --> 00:14:21,189
the tree only<font color="#E5E5E5"> gets used a few times</font><font color="#CCCCCC"> and</font>

336
00:14:18,670 --> 00:14:23,410
<font color="#E5E5E5">not enough for an attacker to run</font>

337
00:14:21,189 --> 00:14:26,319
<font color="#CCCCCC">statistics and statistical analysis on</font>

338
00:14:23,410 --> 00:14:29,350
on the traces so for example in a

339
00:14:26,319 --> 00:14:31,719
challenge<font color="#E5E5E5"> response mechanism what you</font>

340
00:14:29,350 --> 00:14:35,290
would do is use the challenge bits one

341
00:14:31,720 --> 00:14:37,870
by one to<font color="#E5E5E5"> run down your tree together</font>

342
00:14:35,290 --> 00:14:40,809
<font color="#E5E5E5">and</font><font color="#CCCCCC"> two in</font><font color="#E5E5E5"> order to go from your root</font>

343
00:14:37,870 --> 00:14:42,910
<font color="#E5E5E5">key to all of the</font><font color="#CCCCCC"> leaf</font><font color="#E5E5E5"> keys what you do</font>

344
00:14:40,809 --> 00:14:45,040
is you<font color="#CCCCCC"> apply a</font><font color="#E5E5E5"> one-way hash function so</font>

345
00:14:42,910 --> 00:14:47,769
you run forward with<font color="#E5E5E5"> your key by one</font>

346
00:14:45,040 --> 00:14:50,620
step for each<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> of the challenge that</font>

347
00:14:47,769 --> 00:14:53,559
gives you one of<font color="#CCCCCC"> two keys so for example</font>

348
00:14:50,620 --> 00:14:56,410
the red the red<font color="#E5E5E5"> part here will show you</font>

349
00:14:53,559 --> 00:14:58,300
the<font color="#CCCCCC"> paths that</font><font color="#E5E5E5"> you will be using for</font><font color="#CCCCCC"> a</font>

350
00:14:56,410 --> 00:15:01,689
specific<font color="#E5E5E5"> challenge</font><font color="#CCCCCC"> following the bits</font>

351
00:14:58,300 --> 00:15:03,459
and<font color="#E5E5E5"> so what you can prove in this case</font>

352
00:15:01,689 --> 00:15:05,860
if you can't change the implementations

353
00:15:03,459 --> 00:15:07,748
and<font color="#E5E5E5"> do anything</font><font color="#CCCCCC"> on that side</font><font color="#E5E5E5"> what you</font>

354
00:15:05,860 --> 00:15:09,399
can still prove though is<font color="#CCCCCC"> that each one</font>

355
00:15:07,749 --> 00:15:12,759
<font color="#CCCCCC">of the keys that</font><font color="#E5E5E5"> you're going to use in</font>

356
00:15:09,399 --> 00:15:15,610
<font color="#CCCCCC">your protocol</font><font color="#E5E5E5"> only</font><font color="#CCCCCC"> gets applied to three</font>

357
00:15:12,759 --> 00:15:18,279
<font color="#CCCCCC">different values</font><font color="#E5E5E5"> at the maximum there's</font>

358
00:15:15,610 --> 00:15:20,740
one value that<font color="#E5E5E5"> leads from the root</font><font color="#CCCCCC"> to</font>

359
00:15:18,279 --> 00:15:23,350
that<font color="#E5E5E5"> key</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then from that key</font><font color="#CCCCCC"> on you</font>

360
00:15:20,740 --> 00:15:26,559
can go one<font color="#E5E5E5"> of two</font><font color="#CCCCCC"> ways depending</font><font color="#E5E5E5"> if the</font>

361
00:15:23,350 --> 00:15:29,319
bit is<font color="#CCCCCC"> 0 or 1 but each one</font><font color="#E5E5E5"> of those keys</font>

362
00:15:26,559 --> 00:15:31,540
<font color="#CCCCCC">will only be used for 3 different</font><font color="#E5E5E5"> inputs</font>

363
00:15:29,319 --> 00:15:34,029
and you can show that<font color="#E5E5E5"> for</font><font color="#CCCCCC"> 3 different</font>

364
00:15:31,540 --> 00:15:34,490
<font color="#E5E5E5">inputs is not enough to run statistical</font>

365
00:15:34,029 --> 00:15:38,830
and now

366
00:15:34,490 --> 00:15:38,830
<font color="#E5E5E5">on anything so your keys are safe</font><font color="#CCCCCC"> okay</font>

367
00:15:41,470 --> 00:15:46,610
<font color="#E5E5E5">so this is another way of doing</font><font color="#CCCCCC"> DPA</font>

368
00:15:44,840 --> 00:15:48,320
<font color="#E5E5E5">countermeasures so now you have kind</font><font color="#CCCCCC"> of</font>

369
00:15:46,610 --> 00:15:53,410
a little bit<font color="#CCCCCC"> of a global overview</font><font color="#E5E5E5"> of how</font>

370
00:15:48,320 --> 00:15:56,270
to do this<font color="#CCCCCC"> great we're almost done um</font>

371
00:15:53,410 --> 00:16:00,439
one thing<font color="#CCCCCC"> remains though</font><font color="#E5E5E5"> how do you</font>

372
00:15:56,270 --> 00:16:03,020
prove<font color="#CCCCCC"> that any of this works</font><font color="#E5E5E5"> okay so</font>

373
00:16:00,440 --> 00:16:08,150
this is the part where I'm tying it<font color="#CCCCCC"> in</font>

374
00:16:03,020 --> 00:16:09,800
<font color="#CCCCCC">to standards since the late 90s</font><font color="#E5E5E5"> side</font>

375
00:16:08,150 --> 00:16:11,720
channel analysis has<font color="#CCCCCC"> been studied</font>

376
00:16:09,800 --> 00:16:15,920
<font color="#E5E5E5">extensively and many people have written</font>

377
00:16:11,720 --> 00:16:18,020
papers and attacks<font color="#E5E5E5"> corrected them added</font>

378
00:16:15,920 --> 00:16:20,449
countermeasures<font color="#CCCCCC"> Riya</font><font color="#E5E5E5"> tack them and so on</font>

379
00:16:18,020 --> 00:16:22,460
<font color="#CCCCCC">a lot of</font><font color="#E5E5E5"> research has been</font><font color="#CCCCCC"> done</font><font color="#E5E5E5"> but how</font>

380
00:16:20,450 --> 00:16:24,440
do you<font color="#E5E5E5"> test this implementation how do</font>

381
00:16:22,460 --> 00:16:28,940
you do as a certification lab for

382
00:16:24,440 --> 00:16:30,590
<font color="#CCCCCC">example as a</font><font color="#E5E5E5"> authority that decides</font>

383
00:16:28,940 --> 00:16:32,840
whether<font color="#CCCCCC"> your implementation is good</font>

384
00:16:30,590 --> 00:16:34,760
enough or<font color="#CCCCCC"> not how do you do that</font>

385
00:16:32,840 --> 00:16:36,560
so what we're lacking<font color="#CCCCCC"> or have been</font>

386
00:16:34,760 --> 00:16:38,450
lacking<font color="#E5E5E5"> for a long time is formal</font>

387
00:16:36,560 --> 00:16:42,640
testing standards and formal testing

388
00:16:38,450 --> 00:16:45,380
criteria<font color="#CCCCCC"> in common criteria for example</font>

389
00:16:42,640 --> 00:16:47,630
<font color="#E5E5E5">most of the</font><font color="#CCCCCC"> cases you rely on the</font>

390
00:16:45,380 --> 00:16:49,520
expertise<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the testing lab so the</font>

391
00:16:47,630 --> 00:16:52,430
testing lab will<font color="#CCCCCC"> have experts you give</font>

392
00:16:49,520 --> 00:16:54,350
them your chip design you give<font color="#CCCCCC"> you them</font>

393
00:16:52,430 --> 00:16:56,959
your implementation and they will spend

394
00:16:54,350 --> 00:17:00,680
a month or two<font color="#CCCCCC"> or</font><font color="#E5E5E5"> some amount of time</font>

395
00:16:56,960 --> 00:17:03,800
trying to break<font color="#E5E5E5"> it in the</font><font color="#CCCCCC"> US for</font><font color="#E5E5E5"> example</font>

396
00:17:00,680 --> 00:17:06,050
<font color="#CCCCCC">it's very different labs don't typically</font>

397
00:17:03,800 --> 00:17:08,930
have<font color="#E5E5E5"> all of that</font><font color="#CCCCCC"> kind of expertise and</font>

398
00:17:06,050 --> 00:17:11,240
don't necessarily<font color="#CCCCCC"> want to</font><font color="#E5E5E5"> build it up at</font>

399
00:17:08,930 --> 00:17:14,420
the start so what they're looking for<font color="#CCCCCC"> is</font>

400
00:17:11,240 --> 00:17:16,959
a way which<font color="#E5E5E5"> is more of a</font><font color="#CCCCCC"> check box like</font>

401
00:17:14,420 --> 00:17:20,240
testing so it means<font color="#CCCCCC"> okay run these tests</font>

402
00:17:16,959 --> 00:17:22,190
<font color="#CCCCCC">if they all pass like you know the</font><font color="#E5E5E5"> FIPS</font>

403
00:17:20,240 --> 00:17:24,410
random number generator test for<font color="#CCCCCC"> example</font>

404
00:17:22,190 --> 00:17:26,089
<font color="#E5E5E5">if all of that passes and with these</font>

405
00:17:24,410 --> 00:17:28,880
specific<font color="#E5E5E5"> test vectors then your</font>

406
00:17:26,089 --> 00:17:30,710
implementation is secure how do you do

407
00:17:28,880 --> 00:17:32,780
<font color="#E5E5E5">that for side channel analysis that's a</font>

408
00:17:30,710 --> 00:17:33,550
very tough question<font color="#CCCCCC"> it's not easy to do</font>

409
00:17:32,780 --> 00:17:36,770
<font color="#CCCCCC">it all</font>

410
00:17:33,550 --> 00:17:40,370
so for longest<font color="#E5E5E5"> time this this has been a</font>

411
00:17:36,770 --> 00:17:42,470
problem<font color="#E5E5E5"> an issue because we didn't have</font>

412
00:17:40,370 --> 00:17:44,330
good side channel protection

413
00:17:42,470 --> 00:17:46,730
requirements in the standards it didn't

414
00:17:44,330 --> 00:17:48,270
say you have to do ABCDE<font color="#E5E5E5"> you're good</font>

415
00:17:46,730 --> 00:17:50,970
<font color="#E5E5E5">right</font><font color="#CCCCCC"> because it's hard</font><font color="#E5E5E5"> to do</font>

416
00:17:48,270 --> 00:17:52,710
so there was then waivers for everybody

417
00:17:50,970 --> 00:17:54,150
to say<font color="#E5E5E5"> okay we know it's a problem we</font>

418
00:17:52,710 --> 00:17:55,980
know it's an attack but we'll<font color="#E5E5E5"> wave</font>

419
00:17:54,150 --> 00:17:57,750
everybody<font color="#E5E5E5"> from having to deal</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> it</font>

420
00:17:55,980 --> 00:18:02,160
because<font color="#E5E5E5"> nobody knows how to test it</font>

421
00:17:57,750 --> 00:18:04,110
really in a<font color="#CCCCCC"> checkbox</font><font color="#E5E5E5"> manner so what you</font>

422
00:18:02,160 --> 00:18:08,010
do is you end<font color="#E5E5E5"> up having a</font>

423
00:18:04,110 --> 00:18:09,570
<font color="#CCCCCC">chicken-and-egg problem</font><font color="#E5E5E5"> here because you</font>

424
00:18:08,010 --> 00:18:11,040
can't write<font color="#CCCCCC"> requirements because you</font>

425
00:18:09,570 --> 00:18:13,169
don't know what they are<font color="#CCCCCC"> supposed to</font><font color="#E5E5E5"> be</font>

426
00:18:11,040 --> 00:18:14,909
and then the labs don't want to deal

427
00:18:13,170 --> 00:18:18,330
with<font color="#E5E5E5"> it because they don't know how to</font>

428
00:18:14,910 --> 00:18:19,830
test it so they won't move<font color="#E5E5E5"> until they</font>

429
00:18:18,330 --> 00:18:21,659
have requirements<font color="#E5E5E5"> and you can't do</font>

430
00:18:19,830 --> 00:18:25,678
requirements until<font color="#CCCCCC"> you have a testing</font>

431
00:18:21,660 --> 00:18:28,280
methodology<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right so what you need</font>

432
00:18:25,679 --> 00:18:30,750
is some<font color="#E5E5E5"> kind of objective measurable</font>

433
00:18:28,280 --> 00:18:34,139
reproducible<font color="#E5E5E5"> tests for each algorithm</font>

434
00:18:30,750 --> 00:18:36,210
<font color="#CCCCCC">because every algorithm</font><font color="#E5E5E5"> is different you</font>

435
00:18:34,140 --> 00:18:39,420
<font color="#E5E5E5">need them the</font><font color="#CCCCCC"> test to be</font><font color="#E5E5E5"> efficient and</font>

436
00:18:36,210 --> 00:18:41,490
<font color="#E5E5E5">low cost they should not require</font>

437
00:18:39,420 --> 00:18:43,590
exceptionally skilled testers<font color="#CCCCCC"> so it's</font>

438
00:18:41,490 --> 00:18:44,790
not<font color="#E5E5E5"> about the capabilities of the</font>

439
00:18:43,590 --> 00:18:47,820
experts in the labs

440
00:18:44,790 --> 00:18:49,889
it's about tests that you<font color="#CCCCCC"> can apply</font>

441
00:18:47,820 --> 00:18:50,610
automatically<font color="#E5E5E5"> that's the question how do</font>

442
00:18:49,890 --> 00:18:52,890
you<font color="#E5E5E5"> do that</font>

443
00:18:50,610 --> 00:18:54,689
so you could perform in them at the

444
00:18:52,890 --> 00:18:56,820
designer level<font color="#E5E5E5"> which means that you can</font>

445
00:18:54,690 --> 00:19:00,900
know<font color="#E5E5E5"> up front that your implementation</font>

446
00:18:56,820 --> 00:19:03,500
<font color="#CCCCCC">is hopefully secure you should have</font>

447
00:19:00,900 --> 00:19:06,360
tests with good coverage<font color="#CCCCCC"> and</font><font color="#E5E5E5"> results</font>

448
00:19:03,500 --> 00:19:09,000
<font color="#E5E5E5">that</font><font color="#CCCCCC"> indicate to</font><font color="#E5E5E5"> you that you've</font>

449
00:19:06,360 --> 00:19:11,399
achieved a good<font color="#E5E5E5"> level of resistance you</font>

450
00:19:09,000 --> 00:19:13,590
<font color="#CCCCCC">should also have</font><font color="#E5E5E5"> tests that could tell</font>

451
00:19:11,400 --> 00:19:18,210
you when you<font color="#E5E5E5"> don't pass what went wrong</font>

452
00:19:13,590 --> 00:19:19,830
<font color="#CCCCCC">what exactly</font><font color="#E5E5E5"> is the problem</font><font color="#CCCCCC"> and then</font>

453
00:19:18,210 --> 00:19:21,090
what you want to do is that you<font color="#CCCCCC"> want</font><font color="#E5E5E5"> to</font>

454
00:19:19,830 --> 00:19:24,360
make sure<font color="#E5E5E5"> you document everything</font>

455
00:19:21,090 --> 00:19:26,939
correctly so<font color="#CCCCCC"> that</font><font color="#E5E5E5"> both the designers and</font>

456
00:19:24,360 --> 00:19:33,409
<font color="#E5E5E5">the labs will know what the problem was</font>

457
00:19:26,940 --> 00:19:37,320
and what the result means<font color="#E5E5E5"> okay sorry</font><font color="#CCCCCC"> I</font>

458
00:19:33,410 --> 00:19:39,510
hope you're<font color="#CCCCCC"> all awake</font><font color="#E5E5E5"> now</font><font color="#CCCCCC"> okay so the</font>

459
00:19:37,320 --> 00:19:42,330
focus<font color="#E5E5E5"> is</font><font color="#CCCCCC"> on information leakage and not</font>

460
00:19:39,510 --> 00:19:44,580
on key extraction so what we've come up

461
00:19:42,330 --> 00:19:48,720
with in the in the past years is

462
00:19:44,580 --> 00:19:50,970
something<font color="#E5E5E5"> that is called</font><font color="#CCCCCC"> the test</font><font color="#E5E5E5"> vector</font>

463
00:19:48,720 --> 00:19:53,850
leakage assessment methodology so you

464
00:19:50,970 --> 00:19:57,360
idea here is to<font color="#CCCCCC"> use a specific</font><font color="#E5E5E5"> statistic</font>

465
00:19:53,850 --> 00:19:59,879
in a Welch's t-test<font color="#CCCCCC"> to perform</font><font color="#E5E5E5"> a</font>

466
00:19:57,360 --> 00:20:01,820
difference of means significance tests

467
00:19:59,880 --> 00:20:06,090
<font color="#E5E5E5">so we</font><font color="#CCCCCC"> want to make sure we</font>

468
00:20:01,820 --> 00:20:08,070
we try a statistical analysis<font color="#E5E5E5"> on one set</font>

469
00:20:06,090 --> 00:20:10,649
of<font color="#E5E5E5"> data and then we compare it to</font>

470
00:20:08,070 --> 00:20:13,639
<font color="#CCCCCC">another set of</font><font color="#E5E5E5"> data and this allows you</font>

471
00:20:10,650 --> 00:20:15,720
to this allows us<font color="#CCCCCC"> to say whether</font><font color="#E5E5E5"> your</font>

472
00:20:13,640 --> 00:20:17,730
distributions and whether the<font color="#CCCCCC"> behavior</font>

473
00:20:15,720 --> 00:20:20,430
of the set<font color="#E5E5E5"> that you're looking at looks</font>

474
00:20:17,730 --> 00:20:25,340
<font color="#E5E5E5">random or</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> so you compare two sets of</font>

475
00:20:20,430 --> 00:20:28,530
traces<font color="#CCCCCC"> usually one with a fixed input</font>

476
00:20:25,340 --> 00:20:32,970
value<font color="#CCCCCC"> and one with random input values</font>

477
00:20:28,530 --> 00:20:34,830
and if those sets<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> look too</font>

478
00:20:32,970 --> 00:20:36,780
different<font color="#CCCCCC"> you know that you're pretty</font>

479
00:20:34,830 --> 00:20:39,419
close<font color="#E5E5E5"> to random behavior</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of in a</font>

480
00:20:36,780 --> 00:20:42,360
<font color="#CCCCCC">nutshell so this is what we've been</font>

481
00:20:39,420 --> 00:20:44,490
<font color="#CCCCCC">working</font><font color="#E5E5E5"> on you need to make sure that</font>

482
00:20:42,360 --> 00:20:46,229
you target<font color="#E5E5E5"> very specific sensitive</font>

483
00:20:44,490 --> 00:20:50,850
<font color="#CCCCCC">intermediates so that the result of your</font>

484
00:20:46,230 --> 00:20:52,830
tests mean something<font color="#CCCCCC"> and so you can show</font>

485
00:20:50,850 --> 00:20:56,370
running<font color="#E5E5E5"> these tests that if you don't</font>

486
00:20:52,830 --> 00:20:59,220
have any statistical significant

487
00:20:56,370 --> 00:21:01,760
difference<font color="#E5E5E5"> that what's happening</font><font color="#CCCCCC"> inside</font>

488
00:20:59,220 --> 00:21:05,010
of your execution in your implementation

489
00:21:01,760 --> 00:21:06,900
<font color="#CCCCCC">should not leak okay so you perform</font>

490
00:21:05,010 --> 00:21:08,850
<font color="#E5E5E5">tests on twice on two independent data</font>

491
00:21:06,900 --> 00:21:11,760
sets and<font color="#E5E5E5"> that gives you a very high</font>

492
00:21:08,850 --> 00:21:13,649
confidence of succeeding<font color="#E5E5E5"> all right so I</font>

493
00:21:11,760 --> 00:21:17,040
<font color="#CCCCCC">just</font><font color="#E5E5E5"> mentioned it before</font><font color="#CCCCCC"> this method is</font>

494
00:21:13,650 --> 00:21:20,100
called test vector leakage assessment it

495
00:21:17,040 --> 00:21:22,740
doesn't have a pass/fail criteria<font color="#CCCCCC"> so the</font>

496
00:21:20,100 --> 00:21:26,100
device fails if your<font color="#E5E5E5"> teeth your watch</font><font color="#CCCCCC"> T</font>

497
00:21:22,740 --> 00:21:29,610
<font color="#E5E5E5">statistic exceeds</font><font color="#CCCCCC"> 4.5</font><font color="#E5E5E5"> Sigma for two</font>

498
00:21:26,100 --> 00:21:31,709
<font color="#E5E5E5">independent data sets</font><font color="#CCCCCC"> for a large set</font><font color="#E5E5E5"> a</font>

499
00:21:29,610 --> 00:21:36,419
single excursion also implies<font color="#CCCCCC"> 5/9</font>

500
00:21:31,710 --> 00:21:38,220
confidence so 99.999% confidence<font color="#E5E5E5"> when</font>

501
00:21:36,420 --> 00:21:40,950
the test is<font color="#CCCCCC"> repeated the probability of</font>

502
00:21:38,220 --> 00:21:43,500
excursion occurring randomly at the same

503
00:21:40,950 --> 00:21:47,730
point<font color="#E5E5E5"> in</font><font color="#CCCCCC"> time is also</font><font color="#E5E5E5"> negligible so this</font>

504
00:21:43,500 --> 00:21:49,530
is when<font color="#E5E5E5"> you repeat it</font><font color="#CCCCCC"> twice but</font><font color="#E5E5E5"> also if</font>

505
00:21:47,730 --> 00:21:53,370
<font color="#CCCCCC">you</font><font color="#E5E5E5"> have very large data sets you can</font>

506
00:21:49,530 --> 00:21:55,440
<font color="#CCCCCC">actually avoid repeating it twice it</font>

507
00:21:53,370 --> 00:21:57,689
compensates<font color="#E5E5E5"> for large</font><font color="#CCCCCC"> trays sizes and</font>

508
00:21:55,440 --> 00:22:00,030
large number<font color="#CCCCCC"> of tests</font><font color="#E5E5E5"> okay so now what</font>

509
00:21:57,690 --> 00:22:02,520
happened<font color="#E5E5E5"> with this now we have</font><font color="#CCCCCC"> defined a</font>

510
00:22:00,030 --> 00:22:04,170
testing methodology we think we know how

511
00:22:02,520 --> 00:22:07,080
<font color="#CCCCCC">to build can't measure</font><font color="#E5E5E5"> as we know what</font>

512
00:22:04,170 --> 00:22:13,830
the problem is<font color="#E5E5E5"> how do we go about</font>

513
00:22:07,080 --> 00:22:15,500
standardizing all this all<font color="#E5E5E5"> right so this</font>

514
00:22:13,830 --> 00:22:18,100
<font color="#CCCCCC">has started a few years ago</font>

515
00:22:15,500 --> 00:22:20,090
um there's a<font color="#E5E5E5"> few different</font><font color="#CCCCCC"> ISO</font>

516
00:22:18,100 --> 00:22:24,709
specifications that start dealing<font color="#E5E5E5"> with</font>

517
00:22:20,090 --> 00:22:26,389
this<font color="#CCCCCC"> the first relevant one is</font><font color="#E5E5E5"> 197 9-0</font>

518
00:22:24,710 --> 00:22:27,890
about<font color="#CCCCCC"> Geographic modules and how to</font>

519
00:22:26,390 --> 00:22:29,270
<font color="#E5E5E5">protect them and then there's a few</font>

520
00:22:27,890 --> 00:22:34,280
others and now go into<font color="#E5E5E5"> a little bit of</font>

521
00:22:29,270 --> 00:22:36,290
detail in the<font color="#E5E5E5"> next few slides</font><font color="#CCCCCC"> the the</font>

522
00:22:34,280 --> 00:22:38,330
<font color="#E5E5E5">question is how do you make</font><font color="#CCCCCC"> sure to</font>

523
00:22:36,290 --> 00:22:41,330
<font color="#E5E5E5">write</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> those documents and to</font>

524
00:22:38,330 --> 00:22:43,610
standardize a way of testing<font color="#CCCCCC"> that and</font>

525
00:22:41,330 --> 00:22:48,350
everybody could use so this is what

526
00:22:43,610 --> 00:22:53,030
we're trying<font color="#E5E5E5"> to answer here</font><font color="#CCCCCC"> so the first</font>

527
00:22:48,350 --> 00:22:55,820
<font color="#E5E5E5">one I</font><font color="#CCCCCC"> saw 1</font><font color="#E5E5E5"> 9 7 9 0 2012</font><font color="#CCCCCC"> I don't believe</font>

528
00:22:53,030 --> 00:22:57,649
it husband<font color="#CCCCCC"> it has been reviewed again</font>

529
00:22:55,820 --> 00:23:01,419
this year<font color="#E5E5E5"> but I don't believe the text</font>

530
00:22:57,650 --> 00:23:04,160
has<font color="#CCCCCC"> changed much</font><font color="#E5E5E5"> so it has the following</font>

531
00:23:01,420 --> 00:23:05,840
content it is<font color="#E5E5E5"> about security</font>

532
00:23:04,160 --> 00:23:08,930
requirements<font color="#E5E5E5"> for cryptographic modules</font>

533
00:23:05,840 --> 00:23:11,300
and it defines<font color="#CCCCCC"> four security levels in</font>

534
00:23:08,930 --> 00:23:13,280
one section<font color="#E5E5E5"> it talks about non-invasive</font>

535
00:23:11,300 --> 00:23:17,330
security so we're getting<font color="#CCCCCC"> closer</font><font color="#E5E5E5"> to site</font>

536
00:23:13,280 --> 00:23:20,030
<font color="#E5E5E5">channel so this is SP AEDPA timing</font>

537
00:23:17,330 --> 00:23:22,429
attacks and all of these things and it

538
00:23:20,030 --> 00:23:23,840
<font color="#CCCCCC">specifies modules may implement</font><font color="#E5E5E5"> various</font>

539
00:23:22,430 --> 00:23:26,420
techniques to<font color="#CCCCCC"> mitigate against these</font>

540
00:23:23,840 --> 00:23:28,840
<font color="#E5E5E5">attacks</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then in terms of non</font>

541
00:23:26,420 --> 00:23:31,700
<font color="#E5E5E5">invasive attack</font><font color="#CCCCCC"> mitigation techniques</font>

542
00:23:28,840 --> 00:23:34,070
it says the ones that are<font color="#E5E5E5"> not referenced</font>

543
00:23:31,700 --> 00:23:35,870
in annex F will be<font color="#E5E5E5"> validated when</font>

544
00:23:34,070 --> 00:23:38,060
requirements and associated tests are

545
00:23:35,870 --> 00:23:39,439
developed the ones that are<font color="#CCCCCC"> referenced</font>

546
00:23:38,060 --> 00:23:40,730
<font color="#E5E5E5">non-exempt shall meet the following</font>

547
00:23:39,440 --> 00:23:43,130
requirements and then there's

548
00:23:40,730 --> 00:23:46,580
requirements for level<font color="#CCCCCC"> 3 strong and for</font>

549
00:23:43,130 --> 00:23:48,650
stronger<font color="#CCCCCC"> and it says</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> shall be</font><font color="#E5E5E5"> tested</font>

550
00:23:46,580 --> 00:23:50,990
to<font color="#E5E5E5"> meet the approved</font><font color="#CCCCCC"> non invasive attack</font>

551
00:23:48,650 --> 00:23:55,840
mitigation test metrics<font color="#CCCCCC"> references and</font>

552
00:23:50,990 --> 00:23:59,120
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> F now</font><font color="#E5E5E5"> annex F is not all</font><font color="#CCCCCC"> that</font>

553
00:23:55,840 --> 00:24:01,939
filled in<font color="#E5E5E5"> yet it's still</font><font color="#CCCCCC"> a bit sparse so</font>

554
00:23:59,120 --> 00:24:04,100
the link is kind<font color="#E5E5E5"> of so missing a bit but</font>

555
00:24:01,940 --> 00:24:06,710
we're getting there<font color="#E5E5E5"> so pieces of the</font>

556
00:24:04,100 --> 00:24:08,270
puzzle are<font color="#CCCCCC"> starting to fall in</font><font color="#E5E5E5"> place you</font>

557
00:24:06,710 --> 00:24:10,340
have all the requirements all the shells

558
00:24:08,270 --> 00:24:14,600
<font color="#E5E5E5">and</font><font color="#CCCCCC"> everything there's</font><font color="#E5E5E5"> just one little</font>

559
00:24:10,340 --> 00:24:20,840
link<font color="#CCCCCC"> missing but we're very hopeful okay</font>

560
00:24:14,600 --> 00:24:22,490
the<font color="#E5E5E5"> next one</font><font color="#CCCCCC"> 1 7 8</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> 5</font><font color="#E5E5E5"> from 2016 so</font>

561
00:24:20,840 --> 00:24:24,860
this one does<font color="#CCCCCC"> actually talk about</font>

562
00:24:22,490 --> 00:24:26,390
testing methods for mitigation of non

563
00:24:24,860 --> 00:24:28,399
invasive<font color="#E5E5E5"> attack classes reach</font>

564
00:24:26,390 --> 00:24:30,470
side-channel attacks

565
00:24:28,400 --> 00:24:32,299
<font color="#CCCCCC">non-invasive</font><font color="#E5E5E5"> attack medication test</font>

566
00:24:30,470 --> 00:24:34,820
metrics for<font color="#E5E5E5"> levels</font><font color="#CCCCCC"> three</font><font color="#E5E5E5"> and levels</font>

567
00:24:32,299 --> 00:24:38,090
<font color="#CCCCCC">fourth</font><font color="#E5E5E5"> remember three is strong and four</font>

568
00:24:34,820 --> 00:24:40,580
is stronger<font color="#CCCCCC"> it talks about side channels</font>

569
00:24:38,090 --> 00:24:43,159
such<font color="#CCCCCC"> as power electromagnetic timing</font>

570
00:24:40,580 --> 00:24:45,710
attacks in the future<font color="#E5E5E5"> that might be room</font>

571
00:24:43,160 --> 00:24:48,919
for photon emissions acoustic attacks

572
00:24:45,710 --> 00:24:50,630
and things<font color="#CCCCCC"> like that and it tells it</font>

573
00:24:48,919 --> 00:24:51,620
talks about<font color="#E5E5E5"> the two following things so</font>

574
00:24:50,630 --> 00:24:53,980
you want to collect and<font color="#E5E5E5"> analyze</font>

575
00:24:51,620 --> 00:24:56,959
measurements<font color="#E5E5E5"> and it gives you certain</font>

576
00:24:53,980 --> 00:24:59,690
<font color="#CCCCCC">test limitations and typically the</font><font color="#E5E5E5"> test</font>

577
00:24:56,960 --> 00:25:02,750
limitations are defined<font color="#E5E5E5"> in terms of how</font>

578
00:24:59,690 --> 00:25:04,820
<font color="#CCCCCC">long the test</font><font color="#E5E5E5"> might take and how many</font>

579
00:25:02,750 --> 00:25:07,549
waveforms you are allowed<font color="#CCCCCC"> to use</font><font color="#E5E5E5"> so</font>

580
00:25:04,820 --> 00:25:10,760
level<font color="#E5E5E5"> three which is strong has six</font>

581
00:25:07,549 --> 00:25:13,250
hours maximum<font color="#CCCCCC"> protest 72</font><font color="#E5E5E5"> hours max total</font>

582
00:25:10,760 --> 00:25:16,400
acquisition time and<font color="#E5E5E5"> 10,000 waveforms</font>

583
00:25:13,250 --> 00:25:20,419
<font color="#E5E5E5">and stronger you</font><font color="#CCCCCC"> have to</font><font color="#E5E5E5"> resist to 24</font>

584
00:25:16,400 --> 00:25:23,390
hours max<font color="#E5E5E5"> test time 288 max total time</font>

585
00:25:20,419 --> 00:25:25,130
and hundred thousand waveforms<font color="#E5E5E5"> so now</font>

586
00:25:23,390 --> 00:25:26,960
you can see how the<font color="#E5E5E5"> pieces of the puzzle</font>

587
00:25:25,130 --> 00:25:31,280
start falling<font color="#E5E5E5"> into place</font>

588
00:25:26,960 --> 00:25:35,659
you just have to<font color="#E5E5E5"> link this</font><font color="#CCCCCC"> 1 1 9 7 9 0</font>

589
00:25:31,280 --> 00:25:39,168
to this one so bear with me<font color="#E5E5E5"> soon</font>

590
00:25:35,659 --> 00:25:43,360
all<font color="#CCCCCC"> right two more</font><font color="#E5E5E5"> these still under</font>

591
00:25:39,169 --> 00:25:45,590
development<font color="#E5E5E5"> how do you now define</font>

592
00:25:43,360 --> 00:25:47,389
<font color="#E5E5E5">requirements for your test tools because</font>

593
00:25:45,590 --> 00:25:49,039
you have to measure<font color="#E5E5E5"> things</font><font color="#CCCCCC"> someway and</font>

594
00:25:47,390 --> 00:25:50,690
<font color="#CCCCCC">you also need to define</font><font color="#E5E5E5"> test tool</font>

595
00:25:49,039 --> 00:25:52,940
calibration methods how do you calibrate

596
00:25:50,690 --> 00:25:55,130
<font color="#E5E5E5">all these things such that they will</font>

597
00:25:52,940 --> 00:25:58,520
allow<font color="#CCCCCC"> you to run the test</font><font color="#E5E5E5"> that will show</font>

598
00:25:55,130 --> 00:26:01,700
that your implementation<font color="#CCCCCC"> is secure still</font>

599
00:25:58,520 --> 00:26:04,100
being<font color="#E5E5E5"> worked on</font><font color="#CCCCCC"> 2 0 0</font><font color="#E5E5E5"> 8 5 part 1 and</font>

600
00:26:01,700 --> 00:26:06,260
part 2<font color="#E5E5E5"> test tools and techniques</font><font color="#CCCCCC"> for</font>

601
00:26:04,100 --> 00:26:09,379
part 1 and calibration<font color="#E5E5E5"> methods for part</font>

602
00:26:06,260 --> 00:26:11,210
2 under development<font color="#E5E5E5"> but all of the</font>

603
00:26:09,380 --> 00:26:15,320
pieces<font color="#E5E5E5"> are there we just</font><font color="#CCCCCC"> need a little</font>

604
00:26:11,210 --> 00:26:18,049
bit more work<font color="#E5E5E5"> okay so there's a couple</font>

605
00:26:15,320 --> 00:26:20,059
<font color="#CCCCCC">of other</font><font color="#E5E5E5"> areas where</font><font color="#CCCCCC"> such tests and</font>

606
00:26:18,049 --> 00:26:22,100
<font color="#E5E5E5">touched such requirements start getting</font>

607
00:26:20,059 --> 00:26:25,760
<font color="#E5E5E5">mentioned for</font><font color="#CCCCCC"> example in the content</font>

608
00:26:22,100 --> 00:26:28,750
protection<font color="#E5E5E5"> area</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> organization</font><font color="#CCCCCC"> called</font>

609
00:26:25,760 --> 00:26:32,629
movie<font color="#E5E5E5"> labs has put out new</font>

610
00:26:28,750 --> 00:26:38,450
specifications<font color="#E5E5E5"> to protect enhanced and</font>

611
00:26:32,630 --> 00:26:39,890
well 4k and above HDR style movies and

612
00:26:38,450 --> 00:26:41,630
things<font color="#E5E5E5"> like</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> so the high</font><font color="#CCCCCC"> value</font>

613
00:26:39,890 --> 00:26:43,790
content that

614
00:26:41,630 --> 00:26:46,250
<font color="#CCCCCC">Jews put out</font><font color="#E5E5E5"> and they</font><font color="#CCCCCC"> also list</font><font color="#E5E5E5"> a</font>

615
00:26:43,790 --> 00:26:48,290
requirement<font color="#CCCCCC"> to say the resistance shall</font>

616
00:26:46,250 --> 00:26:50,630
be established<font color="#CCCCCC"> to testing through</font>

617
00:26:48,290 --> 00:26:52,370
statistical analysis<font color="#CCCCCC"> of test signals for</font>

618
00:26:50,630 --> 00:26:56,570
leakage it's not very precise but it's

619
00:26:52,370 --> 00:26:58,459
getting there<font color="#CCCCCC"> all right so in terms of</font>

620
00:26:56,570 --> 00:27:01,639
side channel<font color="#E5E5E5"> attacks and testing and</font>

621
00:26:58,460 --> 00:27:05,900
standards<font color="#CCCCCC"> what we're trying to</font><font color="#E5E5E5"> do and</font>

622
00:27:01,640 --> 00:27:07,610
hopefully<font color="#CCCCCC"> getting closer</font><font color="#E5E5E5"> is to find a</font>

623
00:27:05,900 --> 00:27:10,670
<font color="#CCCCCC">high-quality</font><font color="#E5E5E5"> efficient and</font>

624
00:27:07,610 --> 00:27:13,639
<font color="#CCCCCC">cost-effective testing methodology</font><font color="#E5E5E5"> where</font>

625
00:27:10,670 --> 00:27:17,180
operators need<font color="#E5E5E5"> modest skills in the area</font>

626
00:27:13,640 --> 00:27:19,100
so you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> go check box like testing can</font>

627
00:27:17,180 --> 00:27:22,460
be performed by designers<font color="#CCCCCC"> you can get</font>

628
00:27:19,100 --> 00:27:24,379
quick feedback<font color="#E5E5E5"> from it and therefore</font>

629
00:27:22,460 --> 00:27:26,240
what we recommend<font color="#E5E5E5"> and what</font><font color="#CCCCCC"> I think the</font>

630
00:27:24,380 --> 00:27:29,240
<font color="#E5E5E5">world is starting to move towards is</font><font color="#CCCCCC"> the</font>

631
00:27:26,240 --> 00:27:31,010
<font color="#E5E5E5">TV la methodology</font><font color="#CCCCCC"> test vectors are</font>

632
00:27:29,240 --> 00:27:32,930
designed by side<font color="#E5E5E5"> channel experts so you</font>

633
00:27:31,010 --> 00:27:35,210
can know<font color="#CCCCCC"> how</font><font color="#E5E5E5"> to focus on the exact</font>

634
00:27:32,930 --> 00:27:37,910
internal sensitive areas<font color="#E5E5E5"> that you</font><font color="#CCCCCC"> should</font>

635
00:27:35,210 --> 00:27:40,070
be looking<font color="#CCCCCC"> at</font><font color="#E5E5E5"> you focus on measuring</font>

636
00:27:37,910 --> 00:27:43,280
leakage<font color="#E5E5E5"> instead of trying to break the</font>

637
00:27:40,070 --> 00:27:46,159
key out<font color="#CCCCCC"> because</font><font color="#E5E5E5"> if it doesn't leak it</font>

638
00:27:43,280 --> 00:27:49,520
sounds better as an analysis than being

639
00:27:46,160 --> 00:27:51,530
able to just break a key out<font color="#CCCCCC"> of one</font>

640
00:27:49,520 --> 00:27:53,150
<font color="#CCCCCC">implementation so to speak if you're on</font>

641
00:27:51,530 --> 00:27:55,520
a boat you'd rather be on<font color="#CCCCCC"> a boat that's</font>

642
00:27:53,150 --> 00:27:58,310
<font color="#E5E5E5">not leaking for sure right and then one</font>

643
00:27:55,520 --> 00:28:00,020
that you will see sink<font color="#E5E5E5"> at times right</font>

644
00:27:58,310 --> 00:28:02,379
I'd rather though<font color="#E5E5E5"> that it doesn't leak</font>

645
00:28:00,020 --> 00:28:08,320
so I know I'm not gonna sink<font color="#E5E5E5"> kind of</font>

646
00:28:02,380 --> 00:28:10,940
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> don't quote me on that one sorry</font>

647
00:28:08,320 --> 00:28:12,679
<font color="#E5E5E5">okay and then standardized statistical</font>

648
00:28:10,940 --> 00:28:13,220
scoring with objective pass/fail

649
00:28:12,680 --> 00:28:15,070
criteria

650
00:28:13,220 --> 00:28:17,150
<font color="#CCCCCC">all</font><font color="#E5E5E5"> right so ongoing next steps</font>

651
00:28:15,070 --> 00:28:18,919
<font color="#E5E5E5">standardization efforts are</font><font color="#CCCCCC"> continuing</font>

652
00:28:17,150 --> 00:28:22,190
those ISO specs are getting to a close

653
00:28:18,920 --> 00:28:25,400
that's perfect great<font color="#CCCCCC"> and on the fifth</font>

654
00:28:22,190 --> 00:28:28,010
side of the world<font color="#CCCCCC"> the</font><font color="#E5E5E5"> 140 - 3 which is</font>

655
00:28:25,400 --> 00:28:30,500
<font color="#E5E5E5">currently still unpublished</font><font color="#CCCCCC"> is most</font>

656
00:28:28,010 --> 00:28:32,690
likely<font color="#E5E5E5"> coming</font><font color="#CCCCCC"> out soon and</font><font color="#E5E5E5"> is most</font>

657
00:28:30,500 --> 00:28:34,250
<font color="#CCCCCC">likely going to align with</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> ISOs back</font>

658
00:28:32,690 --> 00:28:36,950
that's why I'm talking<font color="#E5E5E5"> about it</font><font color="#CCCCCC"> as well</font>

659
00:28:34,250 --> 00:28:40,720
<font color="#E5E5E5">we've been waiting for FIPS 140 -</font><font color="#CCCCCC"> me for</font>

660
00:28:36,950 --> 00:28:46,490
quite<font color="#CCCCCC"> a while and it should normally</font>

661
00:28:40,720 --> 00:28:49,130
<font color="#E5E5E5">converge with</font><font color="#CCCCCC"> ISO 1 9 7 9</font><font color="#E5E5E5"> zero</font><font color="#CCCCCC"> alright</font>

662
00:28:46,490 --> 00:28:51,680
so far<font color="#E5E5E5"> so</font><font color="#CCCCCC"> good this</font><font color="#E5E5E5"> is all about side</font>

663
00:28:49,130 --> 00:28:54,560
<font color="#E5E5E5">channel attacks standardization efforts</font>

664
00:28:51,680 --> 00:28:55,200
<font color="#CCCCCC">I hope I convinced you somewhat that</font>

665
00:28:54,560 --> 00:28:57,090
it's great

666
00:28:55,200 --> 00:28:59,660
open standards that can help you test

667
00:28:57,090 --> 00:29:03,240
your implementations and be secure<font color="#CCCCCC"> so</font>

668
00:28:59,660 --> 00:29:08,600
<font color="#CCCCCC">let me</font><font color="#E5E5E5"> maybe in the second half of this</font>

669
00:29:03,240 --> 00:29:08,600
hour<font color="#CCCCCC"> move to a slightly different</font><font color="#E5E5E5"> topic</font>

670
00:29:11,270 --> 00:29:14,369
[Music]

671
00:29:18,650 --> 00:29:22,110
okay

672
00:29:19,770 --> 00:29:24,090
part<font color="#E5E5E5"> two a completely different topic</font>

673
00:29:22,110 --> 00:29:27,810
someone related<font color="#E5E5E5"> to side channels as well</font>

674
00:29:24,090 --> 00:29:30,600
<font color="#E5E5E5">but different risk five based hardware</font>

675
00:29:27,810 --> 00:29:34,080
<font color="#E5E5E5">root of trust</font><font color="#CCCCCC"> again I'm going to</font><font color="#E5E5E5"> try to</font>

676
00:29:30,600 --> 00:29:37,560
show<font color="#CCCCCC"> some work that we've done at</font>

677
00:29:34,080 --> 00:29:40,379
<font color="#E5E5E5">rhombus</font><font color="#CCCCCC"> to try</font><font color="#E5E5E5"> to implement a secure</font>

678
00:29:37,560 --> 00:29:42,510
<font color="#E5E5E5">hardware</font><font color="#CCCCCC"> root of trust</font><font color="#E5E5E5"> and then tie it</font>

679
00:29:40,380 --> 00:29:44,340
to<font color="#E5E5E5"> open standards in the form of a</font>

680
00:29:42,510 --> 00:29:46,080
discussion<font color="#E5E5E5"> on risk</font><font color="#CCCCCC"> five and why that's</font>

681
00:29:44,340 --> 00:29:48,959
<font color="#E5E5E5">good for everybody to try to implement</font>

682
00:29:46,080 --> 00:29:54,300
<font color="#E5E5E5">around</font><font color="#CCCCCC"> open-source processors</font><font color="#E5E5E5"> open so</font>

683
00:29:48,960 --> 00:29:56,850
specifications<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so we've seen in</font>

684
00:29:54,300 --> 00:29:59,100
them this<font color="#CCCCCC"> is a link into side channels a</font>

685
00:29:56,850 --> 00:30:00,719
little bit if you<font color="#E5E5E5"> want</font><font color="#CCCCCC"> but we've seen in</font>

686
00:29:59,100 --> 00:30:03,750
the beginning<font color="#CCCCCC"> of this</font><font color="#E5E5E5"> year some</font>

687
00:30:00,720 --> 00:30:06,420
<font color="#E5E5E5">publications on attacks new attacks on</font>

688
00:30:03,750 --> 00:30:08,400
processors called<font color="#CCCCCC"> specter meltdown and</font>

689
00:30:06,420 --> 00:30:13,020
more recently in<font color="#E5E5E5"> August</font><font color="#CCCCCC"> called</font>

690
00:30:08,400 --> 00:30:15,600
<font color="#CCCCCC">foreshadow what this shows it's that</font>

691
00:30:13,020 --> 00:30:17,430
there<font color="#E5E5E5"> are vulnerabilities in all the</font>

692
00:30:15,600 --> 00:30:22,379
major processors<font color="#E5E5E5"> out</font><font color="#CCCCCC"> there including</font>

693
00:30:17,430 --> 00:30:26,040
<font color="#E5E5E5">from Intel AMD some arm CPUs</font><font color="#CCCCCC"> and that</font>

694
00:30:22,380 --> 00:30:29,340
there is room<font color="#CCCCCC"> for</font><font color="#E5E5E5"> more attacks on these</font>

695
00:30:26,040 --> 00:30:31,080
objects<font color="#CCCCCC"> and room for</font><font color="#E5E5E5"> way more results</font>

696
00:30:29,340 --> 00:30:35,120
coming<font color="#E5E5E5"> out in the next few months and</font>

697
00:30:31,080 --> 00:30:37,830
<font color="#CCCCCC">years people</font><font color="#E5E5E5"> didn't typically look at</font>

698
00:30:35,120 --> 00:30:41,129
processors in that way before<font color="#CCCCCC"> but it</font>

699
00:30:37,830 --> 00:30:44,040
turns out<font color="#CCCCCC"> that when you</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> to optimize</font>

700
00:30:41,130 --> 00:30:46,290
<font color="#CCCCCC">for performance</font><font color="#E5E5E5"> if you</font><font color="#CCCCCC"> want to go really</font>

701
00:30:44,040 --> 00:30:48,030
<font color="#E5E5E5">fast you do a lot of things that you</font>

702
00:30:46,290 --> 00:30:49,920
shouldn't<font color="#CCCCCC"> be</font><font color="#E5E5E5"> doing from</font><font color="#CCCCCC"> a security</font>

703
00:30:48,030 --> 00:30:52,139
perspective<font color="#E5E5E5"> meaning you speculate</font><font color="#CCCCCC"> on</font>

704
00:30:49,920 --> 00:30:53,640
what<font color="#E5E5E5"> the results</font><font color="#CCCCCC"> might be you take</font>

705
00:30:52,140 --> 00:30:55,470
different branches you shouldn't be

706
00:30:53,640 --> 00:30:58,950
<font color="#E5E5E5">taking you come back with</font><font color="#CCCCCC"> results that</font>

707
00:30:55,470 --> 00:31:02,870
you should not<font color="#CCCCCC"> be leaking to anyone you</font>

708
00:30:58,950 --> 00:31:05,550
know just for performance<font color="#E5E5E5"> reasons</font><font color="#CCCCCC"> so um</font>

709
00:31:02,870 --> 00:31:07,110
<font color="#E5E5E5">how you deal with this is really a big</font>

710
00:31:05,550 --> 00:31:09,090
open<font color="#CCCCCC"> question</font>

711
00:31:07,110 --> 00:31:11,070
there's some patches<font color="#CCCCCC"> around there's some</font>

712
00:31:09,090 --> 00:31:13,259
things that<font color="#CCCCCC"> can be done</font><font color="#E5E5E5"> to mitigate</font>

713
00:31:11,070 --> 00:31:14,879
meltdown for example but<font color="#E5E5E5"> the other two</font>

714
00:31:13,259 --> 00:31:18,119
<font color="#CCCCCC">Spectre and four shadow look a little</font>

715
00:31:14,879 --> 00:31:21,509
<font color="#E5E5E5">more tricky and there's no complete path</font>

716
00:31:18,119 --> 00:31:23,519
to a solution<font color="#CCCCCC"> right now</font><font color="#E5E5E5"> so this is also</font>

717
00:31:21,509 --> 00:31:26,809
a call for the community<font color="#CCCCCC"> to think</font><font color="#E5E5E5"> and</font>

718
00:31:23,519 --> 00:31:26,809
try to come up<font color="#CCCCCC"> with creative solutions</font>

719
00:31:27,049 --> 00:31:31,408
<font color="#CCCCCC">okay so</font><font color="#E5E5E5"> all three of</font><font color="#CCCCCC"> these</font>

720
00:31:29,100 --> 00:31:34,199
vulnerabilities<font color="#E5E5E5"> take advantage of CPU</font>

721
00:31:31,409 --> 00:31:36,600
performance<font color="#CCCCCC"> and tone-tone's</font><font color="#E5E5E5"> speculative</font>

722
00:31:34,200 --> 00:31:39,029
is one out<font color="#E5E5E5"> of order is the other one no</font>

723
00:31:36,600 --> 00:31:41,039
matter how you do<font color="#E5E5E5"> it if you work with</font>

724
00:31:39,029 --> 00:31:42,330
data that<font color="#E5E5E5"> you're not supposed to look at</font>

725
00:31:41,039 --> 00:31:43,980
you're<font color="#E5E5E5"> not supposed to see and you're</font>

726
00:31:42,330 --> 00:31:47,539
not<font color="#E5E5E5"> supposed to bring</font><font color="#CCCCCC"> back to the</font><font color="#E5E5E5"> cache</font>

727
00:31:43,980 --> 00:31:52,019
<font color="#CCCCCC">you're leaking information at some point</font>

728
00:31:47,539 --> 00:31:53,850
all<font color="#E5E5E5"> right so citation from Mike Hamburg</font>

729
00:31:52,019 --> 00:31:55,619
<font color="#E5E5E5">this</font><font color="#CCCCCC"> designer approach will go a long</font>

730
00:31:53,850 --> 00:31:57,330
way in<font color="#E5E5E5"> helping to prevent</font>

731
00:31:55,619 --> 00:32:00,238
vulnerabilities if you can make a

732
00:31:57,330 --> 00:32:03,029
separate design<font color="#E5E5E5"> between your sensitive</font>

733
00:32:00,239 --> 00:32:05,039
operations and everything else you're

734
00:32:03,029 --> 00:32:07,080
trying<font color="#CCCCCC"> to</font><font color="#E5E5E5"> do at a super high performance</font>

735
00:32:05,039 --> 00:32:09,359
keep things separate<font color="#E5E5E5"> is kind of the</font>

736
00:32:07,080 --> 00:32:12,059
message<font color="#CCCCCC"> if you</font><font color="#E5E5E5"> keep it simple</font>

737
00:32:09,359 --> 00:32:14,899
put your<font color="#E5E5E5"> sensitive stuff in one slightly</font>

738
00:32:12,059 --> 00:32:17,070
more secure place<font color="#CCCCCC"> then you might</font><font color="#E5E5E5"> be fine</font>

739
00:32:14,899 --> 00:32:23,879
<font color="#E5E5E5">okay so let</font><font color="#CCCCCC"> me</font><font color="#E5E5E5"> tell you a little</font><font color="#CCCCCC"> bit</font>

740
00:32:17,070 --> 00:32:25,320
about the trial implementation year

741
00:32:23,879 --> 00:32:27,119
whether the work that we've<font color="#CCCCCC"> been</font>

742
00:32:25,320 --> 00:32:29,460
<font color="#E5E5E5">performing at the company to</font><font color="#CCCCCC"> build</font>

743
00:32:27,119 --> 00:32:32,129
<font color="#CCCCCC">something like that a small</font><font color="#E5E5E5"> secure</font>

744
00:32:29,460 --> 00:32:34,950
processor<font color="#E5E5E5"> that will hopefully allow to</font>

745
00:32:32,129 --> 00:32:37,949
run sensitive operations including

746
00:32:34,950 --> 00:32:40,049
crypto operations including<font color="#E5E5E5"> keeping your</font>

747
00:32:37,950 --> 00:32:42,989
keys safe and all of<font color="#CCCCCC"> that on a</font><font color="#E5E5E5"> slightly</font>

748
00:32:40,049 --> 00:32:46,309
separate processor so you<font color="#E5E5E5"> have your</font>

749
00:32:42,989 --> 00:32:49,559
general processor processing going<font color="#E5E5E5"> on on</font>

750
00:32:46,309 --> 00:32:52,769
one side and you have<font color="#E5E5E5"> secure processing</font>

751
00:32:49,559 --> 00:32:57,779
kept to a smaller<font color="#E5E5E5"> boundaries smaller</font>

752
00:32:52,769 --> 00:32:59,519
security boundary<font color="#E5E5E5"> okay so what do you</font>

753
00:32:57,779 --> 00:33:01,259
have in there you have a few<font color="#E5E5E5"> things in</font>

754
00:32:59,519 --> 00:33:03,749
there<font color="#CCCCCC"> you have inside</font><font color="#E5E5E5"> your secure</font>

755
00:33:01,259 --> 00:33:05,759
boundary you have<font color="#CCCCCC"> a custom risk five CPU</font>

756
00:33:03,749 --> 00:33:07,169
that's why I'm mentioning<font color="#CCCCCC"> this</font><font color="#E5E5E5"> so I'll</font>

757
00:33:05,759 --> 00:33:10,409
come<font color="#CCCCCC"> back</font><font color="#E5E5E5"> to risk five a little bit</font>

758
00:33:07,169 --> 00:33:12,809
later<font color="#E5E5E5"> you have a part of secure memory</font>

759
00:33:10,409 --> 00:33:14,999
<font color="#E5E5E5">which means</font><font color="#CCCCCC"> you have your own restaurant</font>

760
00:33:12,809 --> 00:33:17,999
<font color="#E5E5E5">to compute in you have your own</font>

761
00:33:14,999 --> 00:33:20,410
dedicated non-volatile and OTP<font color="#E5E5E5"> and you</font>

762
00:33:17,999 --> 00:33:22,840
have<font color="#CCCCCC"> crypt</font><font color="#E5E5E5"> crypto acceleration AES</font>

763
00:33:20,410 --> 00:33:26,680
<font color="#CCCCCC">Shaw public-key acceleration engines and</font>

764
00:33:22,840 --> 00:33:28,360
so on so what you use this for<font color="#CCCCCC"> is the</font>

765
00:33:26,680 --> 00:33:30,850
secure functionality you want<font color="#CCCCCC"> to get out</font>

766
00:33:28,360 --> 00:33:34,139
<font color="#E5E5E5">of it is for secure boot remote</font>

767
00:33:30,850 --> 00:33:37,030
<font color="#CCCCCC">attestation such as 40 pians for example</font>

768
00:33:34,140 --> 00:33:38,710
authentication runtime integrity and you

769
00:33:37,030 --> 00:33:40,750
can run<font color="#E5E5E5"> many different security</font>

770
00:33:38,710 --> 00:33:43,480
applications inside this smaller

771
00:33:40,750 --> 00:33:44,740
boundary<font color="#E5E5E5"> and keep all the rest of your</font>

772
00:33:43,480 --> 00:33:46,030
<font color="#E5E5E5">stuff</font><font color="#CCCCCC"> that you're doing for</font><font color="#E5E5E5"> high</font>

773
00:33:44,740 --> 00:33:48,190
<font color="#E5E5E5">performance that doesn't require</font>

774
00:33:46,030 --> 00:33:52,450
<font color="#E5E5E5">security on the general process inside</font>

775
00:33:48,190 --> 00:33:54,760
of the<font color="#E5E5E5"> wolf</font><font color="#CCCCCC"> ok so a few</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> cases here</font>

776
00:33:52,450 --> 00:33:58,420
<font color="#E5E5E5">what you</font><font color="#CCCCCC"> can support with this you can</font>

777
00:33:54,760 --> 00:33:59,950
<font color="#E5E5E5">put your data in a safe place because</font>

778
00:33:58,420 --> 00:34:02,080
<font color="#CCCCCC">you have</font><font color="#E5E5E5"> keys and</font><font color="#CCCCCC"> everything available</font>

779
00:33:59,950 --> 00:34:04,990
to<font color="#E5E5E5"> encrypt it and then to put it in a</font>

780
00:34:02,080 --> 00:34:07,290
bigger area<font color="#CCCCCC"> where it's not at risk</font>

781
00:34:04,990 --> 00:34:10,918
<font color="#CCCCCC">because it can't be decrypt or</font><font color="#E5E5E5"> anything</font>

782
00:34:07,290 --> 00:34:13,870
<font color="#E5E5E5">you have secure key storage</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can use</font>

783
00:34:10,918 --> 00:34:15,879
<font color="#CCCCCC">you can</font><font color="#E5E5E5"> personalize</font><font color="#CCCCCC"> your device to</font><font color="#E5E5E5"> make</font>

784
00:34:13,870 --> 00:34:18,819
sure you can trace who is authorized<font color="#E5E5E5"> to</font>

785
00:34:15,880 --> 00:34:20,950
<font color="#CCCCCC">use it who does it belong to</font><font color="#E5E5E5"> who's the</font>

786
00:34:18,820 --> 00:34:22,540
owner<font color="#E5E5E5"> when does it go from one owner to</font>

787
00:34:20,949 --> 00:34:25,629
the<font color="#E5E5E5"> next owner how do you transfer</font>

788
00:34:22,540 --> 00:34:28,480
rights you can do key and data

789
00:34:25,630 --> 00:34:30,820
provisioning use it for<font color="#E5E5E5"> authentication</font>

790
00:34:28,480 --> 00:34:32,139
and that's a station and<font color="#E5E5E5"> you can see on</font>

791
00:34:30,820 --> 00:34:34,150
the right hand<font color="#E5E5E5"> side there's a whole</font>

792
00:34:32,139 --> 00:34:37,540
column of other things you can do with

793
00:34:34,150 --> 00:34:40,090
it<font color="#CCCCCC"> you can securely update firmware you</font>

794
00:34:37,540 --> 00:34:44,080
can load applications into it for

795
00:34:40,090 --> 00:34:45,880
running securely<font color="#E5E5E5"> you have specific</font>

796
00:34:44,080 --> 00:34:48,790
<font color="#E5E5E5">features in there so</font><font color="#CCCCCC"> that your debug</font>

797
00:34:45,880 --> 00:34:53,440
functions are secure as well<font color="#CCCCCC"> and you</font><font color="#E5E5E5"> can</font>

798
00:34:48,790 --> 00:34:57,370
<font color="#E5E5E5">use it for configuration</font><font color="#CCCCCC"> management this</font>

799
00:34:53,440 --> 00:34:59,800
list is too long<font color="#E5E5E5"> ok so a little bit of</font>

800
00:34:57,370 --> 00:35:05,109
<font color="#E5E5E5">terminology before we dive into some</font><font color="#CCCCCC"> of</font>

801
00:34:59,800 --> 00:35:07,600
the details<font color="#CCCCCC"> we have</font><font color="#E5E5E5"> two things in there</font>

802
00:35:05,110 --> 00:35:09,520
that<font color="#E5E5E5"> we for some reason called routes</font>

803
00:35:07,600 --> 00:35:12,009
and containers and in other<font color="#E5E5E5"> walls this</font>

804
00:35:09,520 --> 00:35:15,220
means something<font color="#CCCCCC"> completely different but</font>

805
00:35:12,010 --> 00:35:17,650
<font color="#E5E5E5">in our world</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> means a route is an</font>

806
00:35:15,220 --> 00:35:20,430
<font color="#E5E5E5">entity that's composed of an ID and a</font>

807
00:35:17,650 --> 00:35:23,140
specific<font color="#E5E5E5"> permission set for access to to</font>

808
00:35:20,430 --> 00:35:25,120
the root of trust assets<font color="#E5E5E5"> so you have</font>

809
00:35:23,140 --> 00:35:28,810
assets<font color="#E5E5E5"> in there you have permissions on</font>

810
00:35:25,120 --> 00:35:30,549
who can<font color="#E5E5E5"> access</font><font color="#CCCCCC"> what and how and why</font><font color="#E5E5E5"> and</font>

811
00:35:28,810 --> 00:35:32,470
the route defines<font color="#CCCCCC"> it's kind</font><font color="#E5E5E5"> of the</font>

812
00:35:30,550 --> 00:35:33,730
origin<font color="#E5E5E5"> of everything and it defines the</font>

813
00:35:32,470 --> 00:35:36,189
security context and we

814
00:35:33,730 --> 00:35:39,910
user applications can execute<font color="#CCCCCC"> so when</font>

815
00:35:36,190 --> 00:35:42,070
you try<font color="#CCCCCC"> to load an application the route</font>

816
00:35:39,910 --> 00:35:44,470
will be<font color="#E5E5E5"> there to tell you</font><font color="#CCCCCC"> oh</font><font color="#E5E5E5"> okay</font>

817
00:35:42,070 --> 00:35:47,619
<font color="#CCCCCC">you're this</font><font color="#E5E5E5"> your you've been authorized</font>

818
00:35:44,470 --> 00:35:49,629
by<font color="#CCCCCC"> this route and</font><font color="#E5E5E5"> so you have access</font><font color="#CCCCCC"> to</font>

819
00:35:47,619 --> 00:35:51,310
<font color="#E5E5E5">these specific</font><font color="#CCCCCC"> assets</font><font color="#E5E5E5"> and you have these</font>

820
00:35:49,630 --> 00:35:53,700
specific permissions and you can do

821
00:35:51,310 --> 00:35:57,340
these specific<font color="#CCCCCC"> things and</font><font color="#E5E5E5"> nothing</font><font color="#CCCCCC"> else</font>

822
00:35:53,700 --> 00:35:59,830
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> and a container</font><font color="#E5E5E5"> is the software</font>

823
00:35:57,340 --> 00:36:02,740
firmware<font color="#CCCCCC"> well software</font><font color="#E5E5E5"> that you load</font>

824
00:35:59,830 --> 00:36:05,980
application that you load into<font color="#CCCCCC"> this</font>

825
00:36:02,740 --> 00:36:09,729
<font color="#E5E5E5">secure boundary secure execution</font>

826
00:36:05,980 --> 00:36:11,619
environment if<font color="#E5E5E5"> you want</font><font color="#CCCCCC"> user privilege</font>

827
00:36:09,730 --> 00:36:13,840
applications that run<font color="#E5E5E5"> with specific</font>

828
00:36:11,619 --> 00:36:17,260
<font color="#E5E5E5">rights specific access to specific</font>

829
00:36:13,840 --> 00:36:17,920
<font color="#CCCCCC">assets</font><font color="#E5E5E5"> and controlled by</font><font color="#CCCCCC"> route</font><font color="#E5E5E5"> as</font>

830
00:36:17,260 --> 00:36:21,970
defined above

831
00:36:17,920 --> 00:36:23,410
okay so<font color="#CCCCCC"> route and containers</font><font color="#E5E5E5"> somebody's</font>

832
00:36:21,970 --> 00:36:25,240
from the software<font color="#E5E5E5"> well there's</font>

833
00:36:23,410 --> 00:36:27,819
completely different definitions<font color="#E5E5E5"> for</font>

834
00:36:25,240 --> 00:36:33,660
that so keep those<font color="#E5E5E5"> in mind just for this</font>

835
00:36:27,820 --> 00:36:36,460
talk<font color="#CCCCCC"> alright so how does this work</font><font color="#E5E5E5"> um</font>

836
00:36:33,660 --> 00:36:38,649
you<font color="#E5E5E5"> have a CPU</font><font color="#CCCCCC"> you have a memory</font>

837
00:36:36,460 --> 00:36:43,869
protection unit and<font color="#CCCCCC"> a central processing</font>

838
00:36:38,650 --> 00:36:46,090
unit<font color="#CCCCCC"> we took the approach</font><font color="#E5E5E5"> to base it on</font>

839
00:36:43,869 --> 00:36:48,450
<font color="#E5E5E5">risk</font><font color="#CCCCCC"> five because</font><font color="#E5E5E5"> risk</font><font color="#CCCCCC"> five is an open</font>

840
00:36:46,090 --> 00:36:51,550
instruction set architecture<font color="#E5E5E5"> it's</font>

841
00:36:48,450 --> 00:36:53,500
published<font color="#E5E5E5"> openly you can download the</font>

842
00:36:51,550 --> 00:36:55,750
specs from the foundation's website and

843
00:36:53,500 --> 00:36:57,720
if<font color="#E5E5E5"> you implement this instructions that</font>

844
00:36:55,750 --> 00:36:59,440
you're actually compliant with other

845
00:36:57,720 --> 00:37:00,790
implementations out<font color="#CCCCCC"> there that are</font>

846
00:36:59,440 --> 00:37:03,130
<font color="#E5E5E5">trying</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> work off</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the same</font>

847
00:37:00,790 --> 00:37:08,590
instruction set and so this<font color="#E5E5E5"> gives you an</font>

848
00:37:03,130 --> 00:37:10,840
ecosystem in which<font color="#E5E5E5"> you can play</font><font color="#CCCCCC"> it does</font>

849
00:37:08,590 --> 00:37:13,570
<font color="#CCCCCC">support</font><font color="#E5E5E5"> three privilege levels you have</font>

850
00:37:10,840 --> 00:37:15,220
machine mode supervisor and user mode so

851
00:37:13,570 --> 00:37:17,369
all these three different privilege

852
00:37:15,220 --> 00:37:19,509
levels have different<font color="#E5E5E5"> privileges</font>

853
00:37:17,369 --> 00:37:21,570
<font color="#E5E5E5">obviously machine mode being the most</font>

854
00:37:19,510 --> 00:37:24,340
secure part down at the<font color="#E5E5E5"> hardware</font>

855
00:37:21,570 --> 00:37:26,400
supervisor more above and the user mode

856
00:37:24,340 --> 00:37:29,320
is applications that you can<font color="#CCCCCC"> load on top</font>

857
00:37:26,400 --> 00:37:31,420
and then the<font color="#CCCCCC"> MPU sets regions of memory</font>

858
00:37:29,320 --> 00:37:35,109
<font color="#CCCCCC">for access by one or more</font><font color="#E5E5E5"> of these</font>

859
00:37:31,420 --> 00:37:37,180
privileged modes and the access type

860
00:37:35,109 --> 00:37:40,119
that goes with<font color="#CCCCCC"> it and</font><font color="#E5E5E5"> you can lock these</font>

861
00:37:37,180 --> 00:37:42,460
registers until the<font color="#E5E5E5"> next reset so</font>

862
00:37:40,119 --> 00:37:45,550
whenever you're running<font color="#E5E5E5"> those privileges</font>

863
00:37:42,460 --> 00:37:50,280
and<font color="#CCCCCC"> access rights are defined and set</font>

864
00:37:45,550 --> 00:37:52,660
and for the time in between<font color="#E5E5E5"> two</font><font color="#CCCCCC"> reasons</font>

865
00:37:50,280 --> 00:37:54,880
okay then what<font color="#E5E5E5"> else do we have in here</font>

866
00:37:52,660 --> 00:37:59,500
<font color="#CCCCCC">we</font><font color="#E5E5E5"> have some OTP so one-time</font>

867
00:37:54,880 --> 00:38:01,540
programmable<font color="#E5E5E5"> programmable memory which</font>

868
00:37:59,500 --> 00:38:04,060
is non-volatile<font color="#E5E5E5"> and this can store</font>

869
00:38:01,540 --> 00:38:06,310
<font color="#CCCCCC">different things</font><font color="#E5E5E5"> amongst others what we</font>

870
00:38:04,060 --> 00:38:08,529
<font color="#E5E5E5">store in here is the device ID so that</font>

871
00:38:06,310 --> 00:38:10,660
every device is clearly<font color="#CCCCCC"> identified you</font>

872
00:38:08,530 --> 00:38:13,720
know<font color="#E5E5E5"> which one it is</font>

873
00:38:10,660 --> 00:38:15,819
it has<font color="#CCCCCC"> lifecycle</font><font color="#E5E5E5"> state bits so it tells</font>

874
00:38:13,720 --> 00:38:17,709
<font color="#E5E5E5">you which that part of the</font><font color="#CCCCCC"> lifecycle in</font>

875
00:38:15,820 --> 00:38:20,440
my<font color="#CCCCCC"> in a mine just</font><font color="#E5E5E5"> being manufactured</font>

876
00:38:17,710 --> 00:38:22,810
have<font color="#CCCCCC"> I been configured with a</font><font color="#E5E5E5"> root</font><font color="#CCCCCC"> have</font>

877
00:38:20,440 --> 00:38:25,180
I been passed on<font color="#E5E5E5"> to the next owner</font><font color="#CCCCCC"> after</font>

878
00:38:22,810 --> 00:38:27,100
the<font color="#E5E5E5"> root where am I at I'm at the end of</font>

879
00:38:25,180 --> 00:38:30,669
<font color="#E5E5E5">my life cycle and am i coming back to</font>

880
00:38:27,100 --> 00:38:32,710
<font color="#CCCCCC">the</font><font color="#E5E5E5"> factory for debug for analysis so</font>

881
00:38:30,670 --> 00:38:35,680
<font color="#E5E5E5">you can configure all these</font><font color="#CCCCCC"> lifecycle</font>

882
00:38:32,710 --> 00:38:38,080
bits<font color="#E5E5E5"> and it also has a device unique key</font>

883
00:38:35,680 --> 00:38:40,089
<font color="#E5E5E5">so this is kind of a little key that</font><font color="#CCCCCC"> you</font>

884
00:38:38,080 --> 00:38:43,569
start off<font color="#CCCCCC"> from and derive all the other</font>

885
00:38:40,090 --> 00:38:45,580
keys from it has a<font color="#E5E5E5"> table of</font><font color="#CCCCCC"> route</font><font color="#E5E5E5"> IDs</font>

886
00:38:43,570 --> 00:38:48,430
and permissions<font color="#CCCCCC"> so that's the part</font>

887
00:38:45,580 --> 00:38:50,619
that's stored in OTP<font color="#E5E5E5"> so each route has a</font>

888
00:38:48,430 --> 00:38:54,700
set<font color="#E5E5E5"> of</font><font color="#CCCCCC"> specific permissions associated</font>

889
00:38:50,619 --> 00:38:57,430
to it<font color="#E5E5E5"> it's a multi route device and all</font>

890
00:38:54,700 --> 00:38:59,109
of the permissions<font color="#E5E5E5"> are usually at the</font>

891
00:38:57,430 --> 00:39:01,000
highest level<font color="#E5E5E5"> and then you downgrade</font>

892
00:38:59,109 --> 00:39:02,950
after that so the route has the highest

893
00:39:01,000 --> 00:39:04,810
privileges<font color="#E5E5E5"> and then whenever you</font>

894
00:39:02,950 --> 00:39:07,450
delegate permissions to someone else

895
00:39:04,810 --> 00:39:10,180
after route<font color="#E5E5E5"> those the permissions have</font>

896
00:39:07,450 --> 00:39:12,520
to be a subset that<font color="#E5E5E5"> is smaller equal or</font>

897
00:39:10,180 --> 00:39:16,480
smaller to the<font color="#E5E5E5"> ones that the route had</font>

898
00:39:12,520 --> 00:39:18,970
originally it has<font color="#E5E5E5"> general-purpose nvm so</font>

899
00:39:16,480 --> 00:39:22,140
you can add<font color="#E5E5E5"> more</font><font color="#CCCCCC"> information to OTP</font>

900
00:39:18,970 --> 00:39:24,790
afterwards<font color="#CCCCCC"> that will allow you to</font>

901
00:39:22,140 --> 00:39:27,670
restrict those permissions for different

902
00:39:24,790 --> 00:39:30,609
user applications and different<font color="#E5E5E5"> users</font>

903
00:39:27,670 --> 00:39:32,770
that come<font color="#E5E5E5"> up to the root and the OTP</font>

904
00:39:30,609 --> 00:39:36,069
permissions are enforced in<font color="#E5E5E5"> hardware by</font>

905
00:39:32,770 --> 00:39:38,320
the OTP management course all right so

906
00:39:36,070 --> 00:39:43,740
that's<font color="#E5E5E5"> the OTP we've seen the CPU the</font>

907
00:39:38,320 --> 00:39:46,480
<font color="#CCCCCC">MPU the OTP</font><font color="#E5E5E5"> next one is crypto cores</font>

908
00:39:43,740 --> 00:39:50,229
<font color="#E5E5E5">alright so for every</font><font color="#CCCCCC"> hardware</font><font color="#E5E5E5"> root of</font>

909
00:39:46,480 --> 00:39:52,119
trust<font color="#E5E5E5"> style of device obviously</font><font color="#CCCCCC"> you need</font>

910
00:39:50,230 --> 00:39:55,780
some crypto to be able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> enforce things</font>

911
00:39:52,119 --> 00:39:57,730
but also<font color="#E5E5E5"> to run specific functionality</font>

912
00:39:55,780 --> 00:39:58,930
if<font color="#CCCCCC"> you if you're talking secure boot if</font>

913
00:39:57,730 --> 00:40:00,579
you're<font color="#E5E5E5"> talking authenticate</font>

914
00:39:58,930 --> 00:40:04,450
you're talking encryption all of that

915
00:40:00,579 --> 00:40:06,309
<font color="#CCCCCC">unique crypto engines so we have a</font>

916
00:40:04,450 --> 00:40:08,859
number<font color="#CCCCCC"> of</font><font color="#E5E5E5"> different chords in here we</font>

917
00:40:06,309 --> 00:40:11,500
have obviously<font color="#CCCCCC"> in AES engine a hash core</font>

918
00:40:08,859 --> 00:40:15,069
<font color="#E5E5E5">a public key engine so you can run</font>

919
00:40:11,500 --> 00:40:18,099
public<font color="#E5E5E5"> key cryptography accelerate your</font>

920
00:40:15,069 --> 00:40:21,520
math operations in a large integer world

921
00:40:18,099 --> 00:40:24,730
<font color="#E5E5E5">and all of that so you can read here</font><font color="#CCCCCC"> on</font>

922
00:40:21,520 --> 00:40:28,170
this<font color="#CCCCCC"> line</font><font color="#E5E5E5"> kind of which subset of crypto</font>

923
00:40:24,730 --> 00:40:30,790
we've thrown in here so that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can do</font>

924
00:40:28,170 --> 00:40:35,670
<font color="#E5E5E5">everything that's required but by but</font>

925
00:40:30,790 --> 00:40:40,029
not overloading the entire design<font color="#E5E5E5"> okay</font>

926
00:40:35,670 --> 00:40:42,280
we have a key derivation core<font color="#CCCCCC"> what</font><font color="#E5E5E5"> this</font>

927
00:40:40,030 --> 00:40:45,369
one does is<font color="#E5E5E5"> remember you have a device</font>

928
00:40:42,280 --> 00:40:48,190
unique key in the in the device to start

929
00:40:45,369 --> 00:40:51,700
with and then from there<font color="#E5E5E5"> essentially for</font>

930
00:40:48,190 --> 00:40:53,800
sound key separation purposes you want

931
00:40:51,700 --> 00:40:55,868
to not be using a key for two different

932
00:40:53,800 --> 00:40:58,450
<font color="#CCCCCC">purposes so you will be</font><font color="#E5E5E5"> able to derive</font>

933
00:40:55,869 --> 00:41:01,630
new<font color="#CCCCCC"> keys with</font><font color="#E5E5E5"> one-way hash functions</font>

934
00:40:58,450 --> 00:41:05,259
<font color="#E5E5E5">going forward</font><font color="#CCCCCC"> in an is compliant way for</font>

935
00:41:01,630 --> 00:41:07,450
every<font color="#CCCCCC"> single different</font><font color="#E5E5E5"> reason you might</font>

936
00:41:05,260 --> 00:41:09,730
<font color="#E5E5E5">want to use a key for and so never use</font>

937
00:41:07,450 --> 00:41:12,129
keys for twice<font color="#E5E5E5"> twice for two different</font>

938
00:41:09,730 --> 00:41:14,859
<font color="#CCCCCC">reasons</font><font color="#E5E5E5"> always try to derive a new key</font>

939
00:41:12,130 --> 00:41:18,359
that will allow you<font color="#CCCCCC"> to</font><font color="#E5E5E5"> use for</font><font color="#CCCCCC"> different</font>

940
00:41:14,859 --> 00:41:21,790
<font color="#E5E5E5">purpose so if that one by some kind of</font>

941
00:41:18,359 --> 00:41:23,440
issue gets hacked maybe you can't go

942
00:41:21,790 --> 00:41:27,099
back to<font color="#CCCCCC"> the original keys and every</font>

943
00:41:23,440 --> 00:41:31,210
<font color="#E5E5E5">different application or reason</font><font color="#CCCCCC"> for</font>

944
00:41:27,099 --> 00:41:32,440
using will have its own specific<font color="#CCCCCC"> key the</font>

945
00:41:31,210 --> 00:41:34,599
key to<font color="#CCCCCC"> raishin core operates</font>

946
00:41:32,440 --> 00:41:37,270
independently of<font color="#CCCCCC"> the CPU so this is</font>

947
00:41:34,599 --> 00:41:39,700
completely<font color="#E5E5E5"> done in hardware</font><font color="#CCCCCC"> and can</font>

948
00:41:37,270 --> 00:41:42,040
<font color="#E5E5E5">deliver also deliver keys</font><font color="#CCCCCC"> outside the</font>

949
00:41:39,700 --> 00:41:44,140
hardware core if you want to do so<font color="#E5E5E5"> you</font>

950
00:41:42,040 --> 00:41:46,210
plug<font color="#CCCCCC"> that directly into Hardware and</font>

951
00:41:44,140 --> 00:41:48,328
then you can deliver keys elsewhere if

952
00:41:46,210 --> 00:41:51,579
needed

953
00:41:48,329 --> 00:41:53,470
<font color="#E5E5E5">okay other important cores in here the</font>

954
00:41:51,579 --> 00:41:56,230
key transport core<font color="#E5E5E5"> I just mentioned it</font>

955
00:41:53,470 --> 00:41:58,149
you can<font color="#CCCCCC"> output keys on certain outputs</font>

956
00:41:56,230 --> 00:42:00,220
<font color="#E5E5E5">if you so wish but you have to be very</font>

957
00:41:58,150 --> 00:42:01,839
careful about how<font color="#CCCCCC"> you do that and</font><font color="#E5E5E5"> you</font>

958
00:42:00,220 --> 00:42:04,180
<font color="#E5E5E5">have to connect it directly and hard way</font>

959
00:42:01,839 --> 00:42:07,720
to other<font color="#E5E5E5"> portions that you're sure you</font>

960
00:42:04,180 --> 00:42:09,160
want those keys to be able<font color="#E5E5E5"> to go to and</font>

961
00:42:07,720 --> 00:42:11,730
this compliant<font color="#E5E5E5"> trng</font>

962
00:42:09,160 --> 00:42:16,790
and a drbg as well

963
00:42:11,730 --> 00:42:19,829
and<font color="#CCCCCC"> a DMA for faster memory movements</font>

964
00:42:16,790 --> 00:42:23,070
<font color="#CCCCCC">alright</font><font color="#E5E5E5"> this was kind of the hardware</font>

965
00:42:19,829 --> 00:42:25,829
part<font color="#CCCCCC"> of the architecture now what comes</font>

966
00:42:23,070 --> 00:42:27,329
<font color="#E5E5E5">on top of that</font><font color="#CCCCCC"> is a software stack</font><font color="#E5E5E5"> that</font>

967
00:42:25,829 --> 00:42:30,000
allows you<font color="#CCCCCC"> to do</font><font color="#E5E5E5"> many different things</font>

968
00:42:27,329 --> 00:42:31,650
including<font color="#E5E5E5"> being divided into three</font>

969
00:42:30,000 --> 00:42:34,470
<font color="#CCCCCC">privileged levels so this</font><font color="#E5E5E5"> is where we</font>

970
00:42:31,650 --> 00:42:36,270
tie back<font color="#CCCCCC"> into</font><font color="#E5E5E5"> risk</font><font color="#CCCCCC"> five as well</font><font color="#E5E5E5"> so at</font>

971
00:42:34,470 --> 00:42:38,368
the lowest<font color="#E5E5E5"> level at the hardware level</font>

972
00:42:36,270 --> 00:42:40,980
down there is the<font color="#E5E5E5"> machine mode which</font>

973
00:42:38,369 --> 00:42:43,849
which runs all<font color="#CCCCCC"> the security sensitive</font>

974
00:42:40,980 --> 00:42:46,680
code<font color="#E5E5E5"> internal secure boot for example</font>

975
00:42:43,849 --> 00:42:48,359
one level<font color="#E5E5E5"> above is the supervisor mode</font>

976
00:42:46,680 --> 00:42:52,200
so here we're talking<font color="#E5E5E5"> about operating</font>

977
00:42:48,359 --> 00:42:54,210
system<font color="#CCCCCC"> zephyr for instance and some</font>

978
00:42:52,200 --> 00:42:56,129
hardware drivers and yet one level above

979
00:42:54,210 --> 00:42:57,810
<font color="#CCCCCC">that is the container level</font><font color="#E5E5E5"> so at the</font>

980
00:42:56,130 --> 00:42:59,369
user level<font color="#E5E5E5"> if you want to write an</font>

981
00:42:57,810 --> 00:43:06,390
<font color="#E5E5E5">application this is where you will be</font>

982
00:42:59,369 --> 00:43:09,839
located<font color="#E5E5E5"> okay so bottom level first stage</font>

983
00:43:06,390 --> 00:43:11,520
<font color="#CCCCCC">bootloader comes out of rom</font><font color="#E5E5E5"> it begins</font>

984
00:43:09,839 --> 00:43:13,500
the secure boot for<font color="#CCCCCC"> the root of trust</font>

985
00:43:11,520 --> 00:43:16,319
<font color="#CCCCCC">it's a chain of trust with signature</font>

986
00:43:13,500 --> 00:43:18,569
verification built from<font color="#E5E5E5"> ROM</font><font color="#CCCCCC"> to images</font>

987
00:43:16,319 --> 00:43:22,200
<font color="#CCCCCC">and OTP in flash so what you do is you</font>

988
00:43:18,569 --> 00:43:25,589
come out of<font color="#CCCCCC"> ROM you specifically</font>

989
00:43:22,200 --> 00:43:29,069
configure things specific to<font color="#E5E5E5"> this device</font>

990
00:43:25,589 --> 00:43:31,589
in the OTP<font color="#CCCCCC"> and then all the signature</font>

991
00:43:29,069 --> 00:43:34,890
verification is<font color="#CCCCCC"> done on the flash parts</font>

992
00:43:31,589 --> 00:43:39,240
once you start<font color="#E5E5E5"> loading code out</font><font color="#CCCCCC"> of flash</font>

993
00:43:34,890 --> 00:43:40,828
to<font color="#E5E5E5"> continue booting up</font><font color="#CCCCCC"> there's a subset</font>

994
00:43:39,240 --> 00:43:43,848
<font color="#CCCCCC">of device drivers</font><font color="#E5E5E5"> included with the</font>

995
00:43:40,829 --> 00:43:47,670
<font color="#E5E5E5">bootloader as well</font><font color="#CCCCCC"> its platform specific</font>

996
00:43:43,849 --> 00:43:50,339
<font color="#E5E5E5">so the</font><font color="#CCCCCC"> ROM sorry is device and chip</font>

997
00:43:47,670 --> 00:43:52,050
style specific but the<font color="#E5E5E5"> platform specific</font>

998
00:43:50,339 --> 00:43:54,630
behavior is the part that<font color="#CCCCCC"> you program</font>

999
00:43:52,050 --> 00:43:57,930
<font color="#CCCCCC">into OTP</font><font color="#E5E5E5"> so permissions and things like</font>

1000
00:43:54,630 --> 00:43:59,880
<font color="#CCCCCC">that is where the</font><font color="#E5E5E5"> difference will</font><font color="#CCCCCC"> be and</font>

1001
00:43:57,930 --> 00:44:01,799
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> all programmed into OTP so that</font>

1002
00:43:59,880 --> 00:44:04,680
it's manageable from<font color="#E5E5E5"> a manufacturing</font>

1003
00:44:01,800 --> 00:44:09,000
standpoint<font color="#CCCCCC"> and then</font><font color="#E5E5E5"> you load sign OS and</font>

1004
00:44:04,680 --> 00:44:12,270
kernel<font color="#E5E5E5"> from flash</font><font color="#CCCCCC"> the security monitor</font>

1005
00:44:09,000 --> 00:44:14,730
has<font color="#CCCCCC"> also don't at the Machine level so</font>

1006
00:44:12,270 --> 00:44:18,569
the most security sensitive code is

1007
00:44:14,730 --> 00:44:22,770
<font color="#E5E5E5">stored in trusted flash</font><font color="#CCCCCC"> it's gets loaded</font>

1008
00:44:18,569 --> 00:44:25,000
into the secure boundary at boot process

1009
00:44:22,770 --> 00:44:27,160
<font color="#CCCCCC">and then</font><font color="#E5E5E5"> you can move on</font><font color="#CCCCCC"> from there</font>

1010
00:44:25,000 --> 00:44:29,020
so when a<font color="#E5E5E5"> container which is</font><font color="#CCCCCC"> up there</font><font color="#E5E5E5"> at</font>

1011
00:44:27,160 --> 00:44:31,569
<font color="#E5E5E5">the user level is loaded the security</font>

1012
00:44:29,020 --> 00:44:34,359
monitor is gonna verify<font color="#E5E5E5"> who owns this</font>

1013
00:44:31,570 --> 00:44:35,770
it's kind<font color="#E5E5E5"> of fair verify if the digital</font>

1014
00:44:34,359 --> 00:44:38,830
signature has been computed<font color="#CCCCCC"> correctly</font>

1015
00:44:35,770 --> 00:44:40,900
<font color="#E5E5E5">and you're allowed to run it's going to</font>

1016
00:44:38,830 --> 00:44:43,660
verify what permissions<font color="#E5E5E5"> are associated</font>

1017
00:44:40,900 --> 00:44:47,050
<font color="#CCCCCC">to the container</font><font color="#E5E5E5"> and then restrict the</font>

1018
00:44:43,660 --> 00:44:48,940
<font color="#E5E5E5">access to specific</font><font color="#CCCCCC"> assets by assets you</font>

1019
00:44:47,050 --> 00:44:50,650
mean<font color="#E5E5E5"> keys you mean specific memory</font>

1020
00:44:48,940 --> 00:44:53,080
regions you mean things like<font color="#E5E5E5"> that</font>

1021
00:44:50,650 --> 00:44:56,650
so every time<font color="#E5E5E5"> you</font><font color="#CCCCCC"> load an application</font>

1022
00:44:53,080 --> 00:44:58,450
you load a container<font color="#CCCCCC"> you end up running</font>

1023
00:44:56,650 --> 00:45:00,220
in an environment<font color="#E5E5E5"> which allows you to do</font>

1024
00:44:58,450 --> 00:45:03,970
exactly<font color="#E5E5E5"> what you should be</font><font color="#CCCCCC"> doing and</font>

1025
00:45:00,220 --> 00:45:05,680
<font color="#E5E5E5">nothing more and this is applied at the</font>

1026
00:45:03,970 --> 00:45:10,598
<font color="#E5E5E5">hardware level so hardware permissions</font>

1027
00:45:05,680 --> 00:45:14,859
are applied at that level<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> one level</font>

1028
00:45:10,599 --> 00:45:17,380
up<font color="#E5E5E5"> supervisor</font><font color="#CCCCCC"> OS kernel mode we took a</font>

1029
00:45:14,859 --> 00:45:19,480
version of<font color="#E5E5E5"> Zephyr and we modified it a</font>

1030
00:45:17,380 --> 00:45:22,359
<font color="#CCCCCC">little bit so that</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> supports</font>

1031
00:45:19,480 --> 00:45:24,609
<font color="#E5E5E5">application loading</font><font color="#CCCCCC"> kernel user memory</font>

1032
00:45:22,359 --> 00:45:26,490
separation so that<font color="#E5E5E5"> everybody</font><font color="#CCCCCC"> knows where</font>

1033
00:45:24,609 --> 00:45:31,869
they're running<font color="#E5E5E5"> and where they can't run</font>

1034
00:45:26,490 --> 00:45:33,879
<font color="#CCCCCC">and so on</font><font color="#E5E5E5"> it does provide container</font>

1035
00:45:31,869 --> 00:45:35,470
access to the<font color="#E5E5E5"> hardware course</font><font color="#CCCCCC"> so you can</font>

1036
00:45:33,880 --> 00:45:37,270
run at<font color="#E5E5E5"> that level have access to</font>

1037
00:45:35,470 --> 00:45:39,848
<font color="#E5E5E5">specific course on there but under</font><font color="#CCCCCC"> very</font>

1038
00:45:37,270 --> 00:45:43,420
restricted settings and under<font color="#CCCCCC"> certain</font>

1039
00:45:39,849 --> 00:45:45,520
configurations only<font color="#E5E5E5"> and it does provide</font>

1040
00:45:43,420 --> 00:45:47,859
a first line of permission enforcement's

1041
00:45:45,520 --> 00:45:51,400
including some software only permissions

1042
00:45:47,859 --> 00:45:53,470
<font color="#E5E5E5">and finally the containers at the</font>

1043
00:45:51,400 --> 00:45:55,330
highest level<font color="#E5E5E5"> so these are you user</font>

1044
00:45:53,470 --> 00:45:57,459
level developed applications<font color="#E5E5E5"> each</font>

1045
00:45:55,330 --> 00:45:59,410
container<font color="#E5E5E5"> is signed as we</font><font color="#CCCCCC"> said with a</font>

1046
00:45:57,460 --> 00:46:01,450
specific private key that's<font color="#CCCCCC"> associated</font>

1047
00:45:59,410 --> 00:46:03,819
to<font color="#E5E5E5"> the</font><font color="#CCCCCC"> root that's in the device</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> you</font>

1048
00:46:01,450 --> 00:46:06,490
can load<font color="#CCCCCC"> it very verify the signature</font>

1049
00:46:03,820 --> 00:46:08,589
and have the container execute each

1050
00:46:06,490 --> 00:46:11,189
container has permissions that control

1051
00:46:08,589 --> 00:46:13,900
<font color="#CCCCCC">access</font><font color="#E5E5E5"> to keys and hardware resources</font>

1052
00:46:11,190 --> 00:46:15,940
<font color="#E5E5E5">the permissions are limited by those</font>

1053
00:46:13,900 --> 00:46:18,730
that the<font color="#E5E5E5"> root had in the first place so</font>

1054
00:46:15,940 --> 00:46:20,950
a container as I said can only have same

1055
00:46:18,730 --> 00:46:25,089
<font color="#E5E5E5">or less permissions than the root that</font>

1056
00:46:20,950 --> 00:46:28,089
<font color="#CCCCCC">it's associated to sorry</font>

1057
00:46:25,089 --> 00:46:30,099
and if<font color="#CCCCCC"> shield is sitting in the audience</font>

1058
00:46:28,089 --> 00:46:32,230
<font color="#CCCCCC">he will be happy to know that</font><font color="#E5E5E5"> the</font>

1059
00:46:30,099 --> 00:46:36,270
libraries included<font color="#E5E5E5"> C runtime and global</font>

1060
00:46:32,230 --> 00:46:36,270
<font color="#E5E5E5">CloudFront EE compliant crypto library</font>

1061
00:46:37,549 --> 00:46:44,538
<font color="#CCCCCC">okay let</font><font color="#E5E5E5"> me see quick time Chuck</font><font color="#CCCCCC"> 51</font>

1062
00:46:40,929 --> 00:46:46,969
<font color="#CCCCCC">maybe I'll let me skip</font><font color="#E5E5E5"> over the building</font>

1063
00:46:44,539 --> 00:46:50,630
and executing containers essentially in

1064
00:46:46,969 --> 00:46:52,849
a<font color="#CCCCCC"> nutshell</font><font color="#E5E5E5"> the containers get signed</font>

1065
00:46:50,630 --> 00:46:54,859
with<font color="#CCCCCC"> keys stored</font><font color="#E5E5E5"> in an HSM and then that</font>

1066
00:46:52,849 --> 00:46:58,130
file gets loaded<font color="#E5E5E5"> and the signature</font>

1067
00:46:54,859 --> 00:47:00,439
verified and then you can run okay so

1068
00:46:58,130 --> 00:47:02,809
let me<font color="#CCCCCC"> now tie this back</font><font color="#E5E5E5"> in to standards</font>

1069
00:47:00,439 --> 00:47:05,749
in my last few<font color="#E5E5E5"> minutes</font>

1070
00:47:02,809 --> 00:47:07,849
why<font color="#E5E5E5"> Zephyr</font><font color="#CCCCCC"> well Zephyr is an existing</font>

1071
00:47:05,749 --> 00:47:10,788
risk<font color="#CCCCCC"> five port</font><font color="#E5E5E5"> it's a Linux Foundation</font>

1072
00:47:07,849 --> 00:47:12,709
<font color="#E5E5E5">project which means</font><font color="#CCCCCC"> that it's open you</font>

1073
00:47:10,789 --> 00:47:14,959
can everybody can have access<font color="#E5E5E5"> to</font>

1074
00:47:12,709 --> 00:47:18,319
everybody can see it<font color="#E5E5E5"> look at</font><font color="#CCCCCC"> it review</font>

1075
00:47:14,959 --> 00:47:21,109
it<font color="#CCCCCC"> and have its own</font><font color="#E5E5E5"> implementation of it</font>

1076
00:47:18,319 --> 00:47:23,029
it's a large ecosystem<font color="#CCCCCC"> there's a</font><font color="#E5E5E5"> number</font>

1077
00:47:21,109 --> 00:47:26,749
<font color="#E5E5E5">of contributors</font><font color="#CCCCCC"> it has everything you</font>

1078
00:47:23,029 --> 00:47:28,009
<font color="#E5E5E5">need to develop and to you know make</font>

1079
00:47:26,749 --> 00:47:31,098
sure<font color="#E5E5E5"> that</font><font color="#CCCCCC"> whatever</font><font color="#E5E5E5"> you're developing</font>

1080
00:47:28,009 --> 00:47:34,369
runs correctly<font color="#E5E5E5"> and so on Community</font>

1081
00:47:31,099 --> 00:47:36,679
<font color="#E5E5E5">Guidelines contribution reviews so we</font>

1082
00:47:34,369 --> 00:47:38,299
thought this<font color="#CCCCCC"> is a</font><font color="#E5E5E5"> really nice operating</font>

1083
00:47:36,679 --> 00:47:40,429
system that<font color="#E5E5E5"> we could be using we'll</font>

1084
00:47:38,299 --> 00:47:43,880
transform it a little bit so it does fit

1085
00:47:40,429 --> 00:47:45,709
our specific route of<font color="#CCCCCC"> trust needs but</font>

1086
00:47:43,880 --> 00:47:48,919
since<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> open</font><font color="#E5E5E5"> it will fit</font><font color="#CCCCCC"> perfectly</font>

1087
00:47:45,709 --> 00:47:50,808
<font color="#E5E5E5">and we can also provide back some</font>

1088
00:47:48,919 --> 00:47:56,689
information<font color="#CCCCCC"> on how it</font><font color="#E5E5E5"> was useful</font><font color="#CCCCCC"> to us</font>

1089
00:47:50,809 --> 00:47:58,639
and how<font color="#CCCCCC"> it could evolve so all the root</font>

1090
00:47:56,689 --> 00:48:01,699
of trust<font color="#E5E5E5"> software is built using Zephyr</font>

1091
00:47:58,639 --> 00:48:03,380
build systems<font color="#E5E5E5"> bootloaders QT monitors OS</font>

1092
00:48:01,699 --> 00:48:06,979
kernel and containers that these are all

1093
00:48:03,380 --> 00:48:09,049
very<font color="#CCCCCC"> well known principles in</font><font color="#E5E5E5"> there and</font>

1094
00:48:06,979 --> 00:48:10,939
this<font color="#E5E5E5"> is why we picked</font><font color="#CCCCCC"> Deford there's a</font>

1095
00:48:09,049 --> 00:48:14,229
few others around<font color="#CCCCCC"> but this was the one</font>

1096
00:48:10,939 --> 00:48:16,549
that fits our purpose the best<font color="#E5E5E5"> and</font>

1097
00:48:14,229 --> 00:48:19,279
finally let me<font color="#E5E5E5"> tie this back to another</font>

1098
00:48:16,549 --> 00:48:22,639
open standard which is risk<font color="#CCCCCC"> five a risk</font>

1099
00:48:19,279 --> 00:48:27,049
five why risk by<font color="#E5E5E5"> well you may have noted</font>

1100
00:48:22,639 --> 00:48:29,779
<font color="#CCCCCC">that all of the different</font><font color="#E5E5E5"> recent more</font>

1101
00:48:27,049 --> 00:48:32,179
recent so I'm gonna say<font color="#E5E5E5"> so-called tight</font>

1102
00:48:29,779 --> 00:48:34,759
<font color="#CCCCCC">side-channel attacks Spectre meltdown</font>

1103
00:48:32,179 --> 00:48:37,669
and<font color="#CCCCCC"> foreshadow</font><font color="#E5E5E5"> and so on</font><font color="#CCCCCC"> I'll apply</font>

1104
00:48:34,759 --> 00:48:40,189
mostly on proprietary<font color="#E5E5E5"> designs</font><font color="#CCCCCC"> so people</font>

1105
00:48:37,669 --> 00:48:42,499
don't publish their designs<font color="#CCCCCC"> you go for</font>

1106
00:48:40,189 --> 00:48:44,479
performance<font color="#E5E5E5"> and in the end you you you</font>

1107
00:48:42,499 --> 00:48:46,819
end up<font color="#E5E5E5"> being in trouble because there's</font>

1108
00:48:44,479 --> 00:48:49,279
so much leakage in your implementation

1109
00:48:46,819 --> 00:48:50,599
<font color="#E5E5E5">so many security issues that</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> don't</font>

1110
00:48:49,279 --> 00:48:53,479
<font color="#E5E5E5">even know where to start hard</font>

1111
00:48:50,599 --> 00:48:57,499
<font color="#CCCCCC">to fix it</font><font color="#E5E5E5"> so we made a different choice</font>

1112
00:48:53,479 --> 00:49:01,009
we said<font color="#E5E5E5"> okay let's use a open spec an</font>

1113
00:48:57,499 --> 00:49:02,868
open standard<font color="#CCCCCC"> let's use</font><font color="#E5E5E5"> risk</font><font color="#CCCCCC"> five the</font>

1114
00:49:01,009 --> 00:49:04,729
instruction set is published<font color="#E5E5E5"> everybody</font>

1115
00:49:02,869 --> 00:49:07,220
can<font color="#E5E5E5"> see</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> everybody can download and</font>

1116
00:49:04,729 --> 00:49:08,660
implement it<font color="#CCCCCC"> there is extensions to it</font>

1117
00:49:07,220 --> 00:49:10,879
that you can<font color="#E5E5E5"> come up</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> so it's</font>

1118
00:49:08,660 --> 00:49:13,009
<font color="#E5E5E5">flexible enough</font><font color="#CCCCCC"> for you to add what you</font>

1119
00:49:10,880 --> 00:49:18,589
<font color="#E5E5E5">need into the design</font><font color="#CCCCCC"> so why</font><font color="#E5E5E5"> don't you</font>

1120
00:49:13,009 --> 00:49:21,229
<font color="#E5E5E5">don't we pick that one</font><font color="#CCCCCC"> okay so let me</font>

1121
00:49:18,589 --> 00:49:24,650
<font color="#CCCCCC">then for a minute or two do a</font><font color="#E5E5E5"> little bit</font>

1122
00:49:21,229 --> 00:49:27,499
<font color="#E5E5E5">of publicity around risk 5 here risk 5</font>

1123
00:49:24,650 --> 00:49:30,130
is a foundation that's controlled by<font color="#E5E5E5"> its</font>

1124
00:49:27,499 --> 00:49:32,269
members<font color="#E5E5E5"> it has a lot of members already</font>

1125
00:49:30,130 --> 00:49:34,460
and what they want to<font color="#E5E5E5"> do in this</font>

1126
00:49:32,269 --> 00:49:36,410
<font color="#CCCCCC">foundation is to drive forward the</font>

1127
00:49:34,460 --> 00:49:38,239
<font color="#E5E5E5">adoption and implementation of the free</font>

1128
00:49:36,410 --> 00:49:40,729
and open risk 5 instruction set

1129
00:49:38,239 --> 00:49:45,880
architecture<font color="#E5E5E5"> notice the words free and</font>

1130
00:49:40,729 --> 00:49:48,410
open<font color="#E5E5E5"> okay it was authored by</font><font color="#CCCCCC"> one of the</font>

1131
00:49:45,880 --> 00:49:52,599
2017<font color="#CCCCCC"> Turing Award winners David</font>

1132
00:49:48,410 --> 00:49:56,359
<font color="#E5E5E5">Patterson</font><font color="#CCCCCC"> he and John Hennessy have been</font>

1133
00:49:52,599 --> 00:49:58,640
working on computer architecture for

1134
00:49:56,359 --> 00:50:01,009
probably<font color="#E5E5E5"> more than 30</font><font color="#CCCCCC"> years</font><font color="#E5E5E5"> and they</font>

1135
00:49:58,640 --> 00:50:02,808
<font color="#E5E5E5">finally decided ok David said I'm</font><font color="#CCCCCC"> gonna</font>

1136
00:50:01,009 --> 00:50:05,509
<font color="#CCCCCC">write this up and I'm gonna publish</font><font color="#E5E5E5"> this</font>

1137
00:50:02,809 --> 00:50:07,999
spec and this is<font color="#E5E5E5"> going to be great</font>

1138
00:50:05,509 --> 00:50:10,099
so they published an instruction set

1139
00:50:07,999 --> 00:50:12,200
architecture and a draft<font color="#E5E5E5"> privilege spec</font>

1140
00:50:10,099 --> 00:50:13,789
<font color="#CCCCCC">privileged specs in terms of machine</font>

1141
00:50:12,200 --> 00:50:19,368
<font color="#CCCCCC">mode supervising modes and</font><font color="#E5E5E5"> all of</font><font color="#CCCCCC"> that</font>

1142
00:50:13,789 --> 00:50:21,109
and they have<font color="#CCCCCC"> now realized since January</font>

1143
00:50:19,369 --> 00:50:24,049
that it might be a good<font color="#CCCCCC"> idea to have a</font>

1144
00:50:21,109 --> 00:50:25,940
little<font color="#CCCCCC"> bit of security a community</font>

1145
00:50:24,049 --> 00:50:27,999
having<font color="#E5E5E5"> a look at that because</font><font color="#CCCCCC"> of all</font><font color="#E5E5E5"> the</font>

1146
00:50:25,940 --> 00:50:30,319
<font color="#E5E5E5">problems with</font><font color="#CCCCCC"> side-channel attacks</font><font color="#E5E5E5"> so I</font>

1147
00:50:27,999 --> 00:50:33,049
have the<font color="#CCCCCC"> pleasure of tearing</font><font color="#E5E5E5"> their very</font>

1148
00:50:30,319 --> 00:50:35,329
new security standing committee which

1149
00:50:33,049 --> 00:50:38,359
<font color="#CCCCCC">has already about</font><font color="#E5E5E5"> 30 members</font><font color="#CCCCCC"> so what</font>

1150
00:50:35,329 --> 00:50:40,190
we're<font color="#E5E5E5"> trying to do is a little bit like</font>

1151
00:50:38,359 --> 00:50:42,558
we<font color="#CCCCCC"> did in our own designs within</font><font color="#E5E5E5"> the</font>

1152
00:50:40,190 --> 00:50:44,479
company is come up with<font color="#E5E5E5"> ideas of what</font>

1153
00:50:42,559 --> 00:50:46,729
would be the<font color="#CCCCCC"> best</font><font color="#E5E5E5"> way to try to mitigate</font>

1154
00:50:44,479 --> 00:50:50,089
all these<font color="#E5E5E5"> sites on these new style of</font>

1155
00:50:46,729 --> 00:50:52,578
<font color="#CCCCCC">side-channel attacks now obviously this</font>

1156
00:50:50,089 --> 00:50:55,038
is<font color="#CCCCCC"> a very complicated task and it's not</font>

1157
00:50:52,579 --> 00:50:57,769
going to be solved<font color="#E5E5E5"> overnight but the</font>

1158
00:50:55,039 --> 00:51:00,619
question is really<font color="#E5E5E5"> what can we build</font>

1159
00:50:57,769 --> 00:51:04,490
into<font color="#E5E5E5"> the specification</font><font color="#CCCCCC"> at the</font>

1160
00:51:00,619 --> 00:51:06,770
specification level<font color="#CCCCCC"> not one level</font><font color="#E5E5E5"> down</font>

1161
00:51:04,490 --> 00:51:08,229
that's<font color="#E5E5E5"> usually you know companies do</font>

1162
00:51:06,770 --> 00:51:12,350
whatever they want<font color="#CCCCCC"> at the implementation</font>

1163
00:51:08,230 --> 00:51:14,570
<font color="#E5E5E5">level but at the spec level what can we</font>

1164
00:51:12,350 --> 00:51:17,029
<font color="#E5E5E5">build in what hooks can we add what are</font>

1165
00:51:14,570 --> 00:51:18,650
<font color="#CCCCCC">the things that</font><font color="#E5E5E5"> we can do so that all of</font>

1166
00:51:17,030 --> 00:51:21,830
these new york-style<font color="#E5E5E5"> side-channel</font>

1167
00:51:18,650 --> 00:51:24,619
attacks could<font color="#E5E5E5"> be mitigated</font><font color="#CCCCCC"> very big open</font>

1168
00:51:21,830 --> 00:51:27,710
<font color="#CCCCCC">question but we're just starting</font><font color="#E5E5E5"> with</font>

1169
00:51:24,619 --> 00:51:29,990
<font color="#E5E5E5">this so what we've done so far is that</font>

1170
00:51:27,710 --> 00:51:31,670
<font color="#E5E5E5">we've created two</font><font color="#CCCCCC"> sub groups one</font><font color="#E5E5E5"> for</font>

1171
00:51:29,990 --> 00:51:34,100
cryptographic extensions for those in

1172
00:51:31,670 --> 00:51:35,780
truck instruction set architecture<font color="#E5E5E5"> being</font>

1173
00:51:34,100 --> 00:51:39,529
<font color="#E5E5E5">worked on</font><font color="#CCCCCC"> right now so we're dealing</font>

1174
00:51:35,780 --> 00:51:42,140
with<font color="#CCCCCC"> how do we do perform</font><font color="#E5E5E5"> efficient AES</font>

1175
00:51:39,530 --> 00:51:45,170
RSA<font color="#E5E5E5"> Sean on all of that</font><font color="#CCCCCC"> by adding</font>

1176
00:51:42,140 --> 00:51:46,700
instructions in there that help<font color="#CCCCCC"> and</font>

1177
00:51:45,170 --> 00:51:48,560
there's also a proposed<font color="#CCCCCC"> approach to</font>

1178
00:51:46,700 --> 00:51:50,540
trusted<font color="#CCCCCC"> execution</font><font color="#E5E5E5"> environments so what</font>

1179
00:51:48,560 --> 00:51:52,759
do<font color="#E5E5E5"> we need to add at the spec level to</font>

1180
00:51:50,540 --> 00:51:55,180
make sure<font color="#CCCCCC"> that we can build up these</font>

1181
00:51:52,760 --> 00:51:57,680
types of trusted<font color="#E5E5E5"> execution environments</font>

1182
00:51:55,180 --> 00:51:59,660
there's ongoing collaborative<font color="#E5E5E5"> work with</font>

1183
00:51:57,680 --> 00:52:02,390
the risk<font color="#E5E5E5"> I've privileged</font><font color="#CCCCCC"> architectures</font>

1184
00:51:59,660 --> 00:52:04,609
so we can try to<font color="#CCCCCC"> influence that part of</font>

1185
00:52:02,390 --> 00:52:07,368
the spec to add<font color="#E5E5E5"> more features into there</font>

1186
00:52:04,610 --> 00:52:09,820
as well and look at what vector

1187
00:52:07,369 --> 00:52:12,200
extensions<font color="#E5E5E5"> we could be coming up with</font>

1188
00:52:09,820 --> 00:52:16,340
all right<font color="#E5E5E5"> so what I'm trying to say here</font>

1189
00:52:12,200 --> 00:52:19,129
<font color="#CCCCCC">on top of presenting our kind</font><font color="#E5E5E5"> of own</font>

1190
00:52:16,340 --> 00:52:20,600
<font color="#E5E5E5">approach in the company to build a</font>

1191
00:52:19,130 --> 00:52:23,570
secure<font color="#CCCCCC"> Hardware</font><font color="#E5E5E5"> root of trust is that</font>

1192
00:52:20,600 --> 00:52:25,520
<font color="#E5E5E5">this is the right time</font><font color="#CCCCCC"> for the security</font>

1193
00:52:23,570 --> 00:52:27,650
<font color="#CCCCCC">community to come together with the</font>

1194
00:52:25,520 --> 00:52:29,390
processor community<font color="#E5E5E5"> look at what the</font>

1195
00:52:27,650 --> 00:52:32,480
problems are look at<font color="#CCCCCC"> how we can try</font><font color="#E5E5E5"> to</font>

1196
00:52:29,390 --> 00:52:34,220
fix them<font color="#CCCCCC"> and build something into</font><font color="#E5E5E5"> the</font>

1197
00:52:32,480 --> 00:52:38,869
spec so that we can solve<font color="#E5E5E5"> these things</font>

1198
00:52:34,220 --> 00:52:40,580
<font color="#CCCCCC">at a more general level</font><font color="#E5E5E5"> okay so if you</font>

1199
00:52:38,869 --> 00:52:42,230
have time<font color="#CCCCCC"> you don't know</font><font color="#E5E5E5"> what to do of</font>

1200
00:52:40,580 --> 00:52:44,930
your days then please<font color="#E5E5E5"> join</font><font color="#CCCCCC"> us in the</font>

1201
00:52:42,230 --> 00:52:46,880
<font color="#E5E5E5">foundation there's a lot of work to do</font>

1202
00:52:44,930 --> 00:52:48,379
I'm<font color="#E5E5E5"> not saying I have any I do have any</font>

1203
00:52:46,880 --> 00:52:51,740
of the<font color="#E5E5E5"> answers I</font><font color="#CCCCCC"> have a lot of questions</font>

1204
00:52:48,380 --> 00:52:55,640
<font color="#CCCCCC">myself</font><font color="#E5E5E5"> but hey this is where we</font><font color="#CCCCCC"> start</font>

1205
00:52:51,740 --> 00:52:58,160
right<font color="#E5E5E5"> okay and you can read all of the</font>

1206
00:52:55,640 --> 00:52:59,720
press releases and stuff about risk<font color="#E5E5E5"> 5 on</font>

1207
00:52:58,160 --> 00:53:02,569
the<font color="#E5E5E5"> Internet</font>

1208
00:52:59,720 --> 00:53:04,580
please join us<font color="#E5E5E5"> please come help and this</font>

1209
00:53:02,570 --> 00:53:06,500
is the end<font color="#E5E5E5"> of my second part of the talk</font>

1210
00:53:04,580 --> 00:53:08,119
I hope you enjoyed<font color="#E5E5E5"> it</font><font color="#CCCCCC"> I've walked</font>

1211
00:53:06,500 --> 00:53:09,800
<font color="#E5E5E5">through</font><font color="#CCCCCC"> a different number of topics</font>

1212
00:53:08,119 --> 00:53:12,020
trying to relate them<font color="#CCCCCC"> to standards</font>

1213
00:53:09,800 --> 00:53:15,740
trying to convince you that standards

1214
00:53:12,020 --> 00:53:17,270
open standards is<font color="#E5E5E5"> a way to go and if you</font>

1215
00:53:15,740 --> 00:53:17,930
have any questions I'd be<font color="#CCCCCC"> happy to</font>

1216
00:53:17,270 --> 00:53:30,619
<font color="#E5E5E5">answer them</font>

1217
00:53:17,930 --> 00:53:34,250
thank you hi<font color="#E5E5E5"> thanks for your talk</font><font color="#CCCCCC"> very</font>

1218
00:53:30,619 --> 00:53:36,589
<font color="#E5E5E5">informative</font><font color="#CCCCCC"> regarding the</font><font color="#E5E5E5"> first part</font>

1219
00:53:34,250 --> 00:53:40,040
with the<font color="#E5E5E5"> standard</font><font color="#CCCCCC"> radiations so I like</font>

1220
00:53:36,589 --> 00:53:42,200
<font color="#E5E5E5">the idea</font><font color="#CCCCCC"> of open standards but as a</font>

1221
00:53:40,040 --> 00:53:45,770
practitioner<font color="#CCCCCC"> in a certification</font>

1222
00:53:42,200 --> 00:53:48,049
laboratory<font color="#CCCCCC"> I have a fear that</font><font color="#E5E5E5"> once the</font>

1223
00:53:45,770 --> 00:53:50,920
<font color="#E5E5E5">the standards are published and done</font>

1224
00:53:48,050 --> 00:53:54,319
they already will<font color="#CCCCCC"> be outdated because</font>

1225
00:53:50,920 --> 00:53:58,130
your shout out set<font color="#E5E5E5"> some specifics about</font>

1226
00:53:54,319 --> 00:54:02,089
<font color="#E5E5E5">like your</font><font color="#CCCCCC"> 100,000 traces isn't this many</font>

1227
00:53:58,130 --> 00:54:03,829
<font color="#CCCCCC">hours of testing and in</font><font color="#E5E5E5"> the spec this</font>

1228
00:54:02,089 --> 00:54:07,069
was<font color="#E5E5E5"> already the highest level if I</font>

1229
00:54:03,829 --> 00:54:10,250
understood correctly<font color="#CCCCCC"> well from our daily</font>

1230
00:54:07,069 --> 00:54:13,069
work<font color="#E5E5E5"> I can say that this is our low this</font>

1231
00:54:10,250 --> 00:54:15,500
is where we start so I fear that the

1232
00:54:13,069 --> 00:54:18,259
<font color="#E5E5E5">standards will be outdated</font><font color="#CCCCCC"> very fast so</font>

1233
00:54:15,500 --> 00:54:21,290
how fast can such a standard be updated

1234
00:54:18,260 --> 00:54:23,030
<font color="#E5E5E5">so</font><font color="#CCCCCC"> that's that's</font><font color="#E5E5E5"> a very</font><font color="#CCCCCC"> good question</font>

1235
00:54:21,290 --> 00:54:24,290
let me<font color="#E5E5E5"> try to answer in two different</font>

1236
00:54:23,030 --> 00:54:26,480
ways

1237
00:54:24,290 --> 00:54:29,058
<font color="#E5E5E5">the first thing I</font><font color="#CCCCCC"> think you have to make</font>

1238
00:54:26,480 --> 00:54:31,730
a difference between the number of

1239
00:54:29,059 --> 00:54:33,470
waveforms called in in the standard is

1240
00:54:31,730 --> 00:54:36,109
really for making sure there is no

1241
00:54:33,470 --> 00:54:39,500
<font color="#CCCCCC">leakage at that amount</font><font color="#E5E5E5"> of waveforms so</font>

1242
00:54:36,109 --> 00:54:42,470
you can easily<font color="#E5E5E5"> add a factor</font><font color="#CCCCCC"> I'd say</font><font color="#E5E5E5"> 10</font>

1243
00:54:39,500 --> 00:54:44,569
at least<font color="#CCCCCC"> before you</font><font color="#E5E5E5"> start talking about</font>

1244
00:54:42,470 --> 00:54:47,270
<font color="#E5E5E5">key extraction so when you start seeing</font>

1245
00:54:44,569 --> 00:54:48,799
leakage there's still a margin before

1246
00:54:47,270 --> 00:54:51,589
you can<font color="#CCCCCC"> actually do something</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> it so</font>

1247
00:54:48,799 --> 00:54:55,089
<font color="#CCCCCC">something that might</font><font color="#E5E5E5"> pass 100,000</font>

1248
00:54:51,589 --> 00:54:58,308
waveforms<font color="#CCCCCC"> will also pass your 1</font><font color="#E5E5E5"> million</font>

1249
00:54:55,089 --> 00:54:59,900
waveform test<font color="#CCCCCC"> because at</font><font color="#E5E5E5"> that point you</font>

1250
00:54:58,309 --> 00:55:01,460
still can't extract keys<font color="#CCCCCC"> so it would</font>

1251
00:54:59,900 --> 00:55:03,890
still<font color="#CCCCCC"> pass so there's there's an order</font>

1252
00:55:01,460 --> 00:55:05,900
of<font color="#CCCCCC"> magnitude difference</font><font color="#E5E5E5"> that's the</font>

1253
00:55:03,890 --> 00:55:08,270
<font color="#E5E5E5">difference</font><font color="#CCCCCC"> between you know a non</font>

1254
00:55:05,900 --> 00:55:10,130
leaking boat versus a boat that you can

1255
00:55:08,270 --> 00:55:12,589
start seeing<font color="#E5E5E5"> sinking there's there is</font><font color="#CCCCCC"> a</font>

1256
00:55:10,130 --> 00:55:14,030
gap between<font color="#E5E5E5"> the</font><font color="#CCCCCC"> two and you want to be</font>

1257
00:55:12,589 --> 00:55:17,119
on the safer<font color="#E5E5E5"> side so that's why I</font>

1258
00:55:14,030 --> 00:55:18,770
believe<font color="#E5E5E5"> they have in that specific spec</font>

1259
00:55:17,119 --> 00:55:20,480
<font color="#E5E5E5">kind of tuned down the number of</font>

1260
00:55:18,770 --> 00:55:23,210
<font color="#E5E5E5">waveforms but you're right this</font><font color="#CCCCCC"> thing's</font>

1261
00:55:20,480 --> 00:55:25,160
<font color="#CCCCCC">evolved and</font><font color="#E5E5E5"> every day you can find new</font>

1262
00:55:23,210 --> 00:55:30,020
ways<font color="#CCCCCC"> of being smarter and</font><font color="#E5E5E5"> and getting</font>

1263
00:55:25,160 --> 00:55:31,549
<font color="#CCCCCC">there faster so what you should do and I</font>

1264
00:55:30,020 --> 00:55:33,860
don't<font color="#E5E5E5"> have the answer</font>

1265
00:55:31,550 --> 00:55:35,600
as to how fast it might<font color="#E5E5E5"> be</font><font color="#CCCCCC"> to add</font><font color="#E5E5E5"> levels</font>

1266
00:55:33,860 --> 00:55:37,460
but<font color="#E5E5E5"> you should be adding levels as</font><font color="#CCCCCC"> you</font>

1267
00:55:35,600 --> 00:55:40,100
go right or you should be<font color="#E5E5E5"> revising the</font>

1268
00:55:37,460 --> 00:55:42,020
specs as you go have revisions to<font color="#CCCCCC"> it and</font>

1269
00:55:40,100 --> 00:55:44,420
then say<font color="#E5E5E5"> okay ten thousand</font><font color="#CCCCCC"> hundred</font>

1270
00:55:42,020 --> 00:55:46,640
thousand was true yesterday<font color="#CCCCCC"> next year we</font>

1271
00:55:44,420 --> 00:55:48,230
should<font color="#E5E5E5"> move in two years or five</font><font color="#CCCCCC"> years</font>

1272
00:55:46,640 --> 00:55:50,000
we should<font color="#E5E5E5"> move</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> hundred thousand and</font>

1273
00:55:48,230 --> 00:55:53,360
a<font color="#E5E5E5"> million maybe you should be</font><font color="#CCCCCC"> able to</font>

1274
00:55:50,000 --> 00:55:56,780
add levels<font color="#E5E5E5"> so that each you know sector</font>

1275
00:55:53,360 --> 00:55:59,060
and application area can decide the

1276
00:55:56,780 --> 00:56:03,040
<font color="#E5E5E5">level that's good for me is this one and</font>

1277
00:55:59,060 --> 00:56:03,040
<font color="#E5E5E5">there should</font><font color="#CCCCCC"> be tests associated to that</font>

1278
00:56:04,750 --> 00:56:11,210
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> in the first part</font><font color="#E5E5E5"> you talked about</font>

1279
00:56:07,700 --> 00:56:13,430
side channel analysis<font color="#E5E5E5"> and then in the</font>

1280
00:56:11,210 --> 00:56:15,650
second<font color="#E5E5E5"> part</font><font color="#CCCCCC"> you showed a secured</font>

1281
00:56:13,430 --> 00:56:18,940
<font color="#E5E5E5">processor that looks like it's going</font><font color="#CCCCCC"> to</font>

1282
00:56:15,650 --> 00:56:20,990
<font color="#E5E5E5">be very prone to side channel analysis</font>

1283
00:56:18,940 --> 00:56:24,080
<font color="#CCCCCC">would you like to comment on this</font>

1284
00:56:20,990 --> 00:56:25,819
seeming opposition at<font color="#CCCCCC"> the two parts that</font>

1285
00:56:24,080 --> 00:56:29,900
you talked about<font color="#CCCCCC"> yeah absolutely</font>

1286
00:56:25,820 --> 00:56:33,560
<font color="#E5E5E5">so the design I showed has pluggable</font>

1287
00:56:29,900 --> 00:56:35,780
crypto cores<font color="#CCCCCC"> and so you can decide as a</font>

1288
00:56:33,560 --> 00:56:38,750
user if you would like<font color="#E5E5E5"> to be resistant</font>

1289
00:56:35,780 --> 00:56:41,210
to for<font color="#E5E5E5"> example</font><font color="#CCCCCC"> DPA style</font><font color="#E5E5E5"> side channel</font>

1290
00:56:38,750 --> 00:56:43,790
<font color="#E5E5E5">attacks and so you can choose to</font><font color="#CCCCCC"> plug in</font>

1291
00:56:41,210 --> 00:56:46,520
<font color="#E5E5E5">DPA resistant cores if you would so wish</font>

1292
00:56:43,790 --> 00:56:49,160
so that addresses that<font color="#E5E5E5"> part the other</font>

1293
00:56:46,520 --> 00:56:51,680
<font color="#CCCCCC">part there's more inspector and meltdown</font>

1294
00:56:49,160 --> 00:56:53,690
and<font color="#E5E5E5"> all of that</font><font color="#CCCCCC"> oriented side channels</font>

1295
00:56:51,680 --> 00:56:56,509
are very different<font color="#E5E5E5"> styles of side</font>

1296
00:56:53,690 --> 00:57:01,700
channels and then in<font color="#CCCCCC"> this</font><font color="#E5E5E5"> case it's more</font>

1297
00:56:56,510 --> 00:57:03,080
about<font color="#CCCCCC"> trying to subvert</font><font color="#E5E5E5"> things that you</font>

1298
00:57:01,700 --> 00:57:04,580
shouldn't<font color="#E5E5E5"> be doing</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> your execution</font>

1299
00:57:03,080 --> 00:57:07,279
<font color="#CCCCCC">even though you are doing them for</font>

1300
00:57:04,580 --> 00:57:09,680
<font color="#E5E5E5">faster performance right so speculative</font>

1301
00:57:07,280 --> 00:57:11,390
execution<font color="#CCCCCC"> out of order execution just</font>

1302
00:57:09,680 --> 00:57:13,190
<font color="#E5E5E5">trying to go faster and predict what's</font>

1303
00:57:11,390 --> 00:57:14,930
going to<font color="#CCCCCC"> happen so you can go faster in</font>

1304
00:57:13,190 --> 00:57:17,600
the design I've showed weren't doing

1305
00:57:14,930 --> 00:57:21,310
none of<font color="#E5E5E5"> that we don't have speculative</font>

1306
00:57:17,600 --> 00:57:21,310
execution we are very you know

1307
00:57:21,610 --> 00:57:26,330
sequentially oriented people<font color="#E5E5E5"> trying to</font>

1308
00:57:24,410 --> 00:57:28,430
not speculate at all trying<font color="#CCCCCC"> to keep it</font>

1309
00:57:26,330 --> 00:57:30,680
safe which is why this<font color="#E5E5E5"> is a smaller</font>

1310
00:57:28,430 --> 00:57:37,430
security boundary<font color="#E5E5E5"> you don't want to be</font>

1311
00:57:30,680 --> 00:57:38,779
doing<font color="#E5E5E5"> you know 4k HDR content decryption</font>

1312
00:57:37,430 --> 00:57:40,678
in there and this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> probably not gonna</font>

1313
00:57:38,780 --> 00:57:44,319
<font color="#E5E5E5">fly</font>

1314
00:57:40,679 --> 00:57:46,269
but so it is<font color="#CCCCCC"> it</font><font color="#E5E5E5"> is restricted on that</font>

1315
00:57:44,319 --> 00:57:48,369
side you can't do a speculative

1316
00:57:46,269 --> 00:57:50,529
execution there's no out of<font color="#E5E5E5"> order</font><font color="#CCCCCC"> there</font>

1317
00:57:48,369 --> 00:57:52,419
<font color="#E5E5E5">are no caches in there either</font><font color="#CCCCCC"> so all</font><font color="#E5E5E5"> of</font>

1318
00:57:50,529 --> 00:57:54,369
<font color="#E5E5E5">these things are also addressed in</font><font color="#CCCCCC"> that</font>

1319
00:57:52,419 --> 00:57:56,769
way but<font color="#E5E5E5"> these are two different reasons</font>

1320
00:57:54,369 --> 00:58:03,880
<font color="#E5E5E5">why one and the other will</font><font color="#CCCCCC"> not be a</font>

1321
00:57:56,769 --> 00:58:06,339
problem<font color="#CCCCCC"> here hi this is</font><font color="#E5E5E5"> regarding</font><font color="#CCCCCC"> the</font>

1322
00:58:03,880 --> 00:58:11,079
crypto modules<font color="#E5E5E5"> so for every crypto</font>

1323
00:58:06,339 --> 00:58:15,089
models the first<font color="#CCCCCC"> ensured certified</font><font color="#E5E5E5"> yeah</font>

1324
00:58:11,079 --> 00:58:18,549
so from module

1325
00:58:15,089 --> 00:58:20,169
so basically<font color="#CCCCCC"> Phipps means everyone will</font>

1326
00:58:18,549 --> 00:58:22,029
<font color="#CCCCCC">be looking</font><font color="#E5E5E5"> at a level 3 as it was</font>

1327
00:58:20,169 --> 00:58:25,269
<font color="#CCCCCC">suggesting it's a strong and level</font><font color="#E5E5E5"> 4 is</font>

1328
00:58:22,029 --> 00:58:27,429
a stronger<font color="#E5E5E5"> so TPM from an best known</font>

1329
00:58:25,269 --> 00:58:29,258
famous automotive supplier<font color="#E5E5E5"> currently</font>

1330
00:58:27,429 --> 00:58:32,589
<font color="#CCCCCC">their physical security is level 3</font>

1331
00:58:29,259 --> 00:58:37,689
EMI<font color="#CCCCCC"> mcs also level 3 but overall they</font>

1332
00:58:32,589 --> 00:58:38,739
claim it's a<font color="#E5E5E5"> level to certify</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> it's so</font>

1333
00:58:37,689 --> 00:58:41,379
what's the question

1334
00:58:38,739 --> 00:58:46,179
yeah<font color="#E5E5E5"> so that level 2 certified is also</font>

1335
00:58:41,380 --> 00:58:49,749
secured enough<font color="#E5E5E5"> I'm not sure I understand</font>

1336
00:58:46,179 --> 00:58:53,979
<font color="#E5E5E5">the</font><font color="#CCCCCC"> question actually oh</font><font color="#E5E5E5"> when you</font>

1337
00:58:49,749 --> 00:58:55,390
consider<font color="#E5E5E5"> a TPM yeah the security the</font>

1338
00:58:53,979 --> 00:58:59,019
whatever<font color="#E5E5E5"> you</font><font color="#CCCCCC"> call a physical security</font>

1339
00:58:55,390 --> 00:59:01,868
it's a level<font color="#E5E5E5"> 3 certified yeah EMI EMC is</font>

1340
00:58:59,019 --> 00:59:05,038
also a<font color="#E5E5E5"> level 3 certified</font><font color="#CCCCCC"> ok but the</font>

1341
00:59:01,869 --> 00:59:08,319
overall the<font color="#CCCCCC"> level 34 it's a level 2</font><font color="#E5E5E5"> ah</font>

1342
00:59:05,039 --> 00:59:10,989
<font color="#CCCCCC">ok so the design I've shown here for</font>

1343
00:59:08,319 --> 00:59:13,119
<font color="#E5E5E5">example this is IP this is not a chip we</font>

1344
00:59:10,989 --> 00:59:15,640
don't build chips<font color="#E5E5E5"> so if you want to go</font>

1345
00:59:13,119 --> 00:59:17,619
for the<font color="#CCCCCC"> highest security level for the</font>

1346
00:59:15,640 --> 00:59:19,299
<font color="#E5E5E5">cryptographic module then what I've</font>

1347
00:59:17,619 --> 00:59:21,759
shown here<font color="#CCCCCC"> for example</font><font color="#E5E5E5"> it might not be</font>

1348
00:59:19,299 --> 00:59:23,499
enough and<font color="#E5E5E5"> the FIP certifications for</font>

1349
00:59:21,759 --> 00:59:25,209
crypto for<font color="#E5E5E5"> example will</font><font color="#CCCCCC"> not be enough</font>

1350
00:59:23,499 --> 00:59:26,319
you have<font color="#CCCCCC"> to go one level</font><font color="#E5E5E5"> further and</font>

1351
00:59:25,209 --> 00:59:28,928
make sure<font color="#E5E5E5"> that you have temper</font>

1352
00:59:26,319 --> 00:59:30,489
resistance on top so the the aspects of

1353
00:59:28,929 --> 00:59:32,559
adding maybe some sensors into the

1354
00:59:30,489 --> 00:59:34,150
<font color="#CCCCCC">design making</font><font color="#E5E5E5"> sure that their fault</font>

1355
00:59:32,559 --> 00:59:36,219
resistant you<font color="#CCCCCC"> can detect</font><font color="#E5E5E5"> you know</font>

1356
00:59:34,150 --> 00:59:39,189
somebody opening the chips decapping and

1357
00:59:36,219 --> 00:59:42,219
all of<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you have</font><font color="#CCCCCC"> to think about that</font>

1358
00:59:39,189 --> 00:59:43,928
when you build<font color="#E5E5E5"> your chip yeah so it's</font>

1359
00:59:42,219 --> 00:59:47,099
<font color="#E5E5E5">the basis that</font><font color="#CCCCCC"> you need to think</font><font color="#E5E5E5"> through</font>

1360
00:59:43,929 --> 00:59:49,900
<font color="#CCCCCC">your design and build it incorrectly</font><font color="#E5E5E5"> I</font>

1361
00:59:47,099 --> 00:59:52,180
think it out<font color="#E5E5E5"> of time for</font><font color="#CCCCCC"> questions okay</font>

1362
00:59:49,900 --> 00:59:52,470
well thank<font color="#CCCCCC"> you very much thank you</font>

1363
00:59:52,180 --> 00:59:55,629
<font color="#E5E5E5">you</font>

1364
00:59:52,470 --> 00:59:55,629
[Applause]

