1
00:00:03,020 --> 00:00:09,960
hi everyone<font color="#CCCCCC"> today we</font><font color="#E5E5E5"> will tell you about</font>

2
00:00:06,240 --> 00:00:12,240
<font color="#E5E5E5">the black box attack why it was dead and</font>

3
00:00:09,960 --> 00:00:15,540
why it<font color="#E5E5E5"> is life now</font><font color="#CCCCCC"> we'll tell you about</font>

4
00:00:12,240 --> 00:00:19,170
our ATM research related to<font color="#E5E5E5"> the cash</font>

5
00:00:15,540 --> 00:00:22,169
dispenser<font color="#CCCCCC"> that is one of the main engine</font>

6
00:00:19,170 --> 00:00:24,900
parts<font color="#E5E5E5"> also will describe its work is</font>

7
00:00:22,170 --> 00:00:28,380
hardware<font color="#CCCCCC"> security how to get the money</font>

8
00:00:24,900 --> 00:00:29,429
<font color="#E5E5E5">from an</font><font color="#CCCCCC"> ATM</font><font color="#E5E5E5"> and how successful</font><font color="#CCCCCC"> tasks can</font>

9
00:00:28,380 --> 00:00:35,760
be<font color="#E5E5E5"> performed</font>

10
00:00:29,429 --> 00:00:38,099
so let us<font color="#E5E5E5"> introduce ourselves so who we</font>

11
00:00:35,760 --> 00:00:42,269
are my name is Lada<font color="#E5E5E5"> Mir I am a reverse</font>

12
00:00:38,100 --> 00:00:46,410
engineer and<font color="#E5E5E5"> it is also my hobby</font><font color="#CCCCCC"> I</font>

13
00:00:42,270 --> 00:00:49,320
started traversing in 2008 and now<font color="#CCCCCC"> I</font>

14
00:00:46,410 --> 00:00:55,260
<font color="#E5E5E5">work</font><font color="#CCCCCC"> in positive technologies</font><font color="#E5E5E5"> research</font>

15
00:00:49,320 --> 00:00:59,280
team<font color="#E5E5E5"> when I started it where many crack</font>

16
00:00:55,260 --> 00:01:04,259
<font color="#E5E5E5">knees again miss and so on and also I am</font>

17
00:00:59,280 --> 00:01:07,740
an active<font color="#E5E5E5"> second mega drive/genesis from</font>

18
00:01:04,260 --> 00:01:12,150
<font color="#E5E5E5">cracking community member I help others</font>

19
00:01:07,740 --> 00:01:16,490
in modifying TV<font color="#E5E5E5"> all school TV games</font>

20
00:01:12,150 --> 00:01:21,330
<font color="#E5E5E5">it's about recompressing resources</font>

21
00:01:16,490 --> 00:01:26,759
graphics text<font color="#E5E5E5"> and so on</font><font color="#CCCCCC"> and also</font><font color="#E5E5E5"> I have</font>

22
00:01:21,330 --> 00:01:31,170
I help others<font color="#E5E5E5"> in translating games into</font>

23
00:01:26,759 --> 00:01:33,090
different languages<font color="#CCCCCC"> I'll say</font><font color="#E5E5E5"> hello my</font>

24
00:01:31,170 --> 00:01:35,610
name is<font color="#CCCCCC"> Alex in my previous job in my</font>

25
00:01:33,090 --> 00:01:38,220
hobby we were hardware engineering and

26
00:01:35,610 --> 00:01:40,650
evidence<font color="#E5E5E5"> of software development</font>

27
00:01:38,220 --> 00:01:42,840
including in that<font color="#CCCCCC"> cell control systems</font><font color="#E5E5E5"> I</font>

28
00:01:40,650 --> 00:01:45,180
am also interested in hardware<font color="#E5E5E5"> and</font>

29
00:01:42,840 --> 00:01:47,340
<font color="#E5E5E5">software reverse engineering now I</font><font color="#CCCCCC"> am</font>

30
00:01:45,180 --> 00:01:49,860
<font color="#CCCCCC">work in positive technologies industrial</font>

31
00:01:47,340 --> 00:01:52,619
control systems security<font color="#E5E5E5"> research team</font>

32
00:01:49,860 --> 00:01:55,500
<font color="#E5E5E5">and perform some work on our ATM</font>

33
00:01:52,619 --> 00:01:57,930
projects so what is the ATM area

34
00:01:55,500 --> 00:02:00,270
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> it's very</font><font color="#E5E5E5"> closed area and it's</font>

35
00:01:57,930 --> 00:02:02,520
difficult<font color="#CCCCCC"> to</font><font color="#E5E5E5"> get into it</font><font color="#CCCCCC"> it happens</font>

36
00:02:00,270 --> 00:02:05,009
because the vendors my idea is<font color="#CCCCCC"> to</font><font color="#E5E5E5"> make</font>

37
00:02:02,520 --> 00:02:09,209
secure just<font color="#CCCCCC"> robbed</font><font color="#E5E5E5"> curity actually you</font>

38
00:02:05,009 --> 00:02:12,400
can<font color="#E5E5E5"> find any is</font><font color="#CCCCCC"> sdk software samples and</font>

39
00:02:09,209 --> 00:02:14,890
also<font color="#CCCCCC"> TM software and firmware in public</font>

40
00:02:12,400 --> 00:02:17,620
but<font color="#E5E5E5"> in a</font><font color="#CCCCCC"> real idiom is</font><font color="#E5E5E5"> always the same</font>

41
00:02:14,890 --> 00:02:21,309
<font color="#E5E5E5">as you can see in the picture it's also</font>

42
00:02:17,620 --> 00:02:23,769
hard<font color="#CCCCCC"> to take an ATM for research</font><font color="#E5E5E5"> what</font>

43
00:02:21,310 --> 00:02:26,110
you can find<font color="#CCCCCC"> inside an ATM</font><font color="#E5E5E5"> mr. wall is</font>

44
00:02:23,769 --> 00:02:28,840
divided<font color="#E5E5E5"> in the two main areas</font><font color="#CCCCCC"> the upper</font>

45
00:02:26,110 --> 00:02:30,310
cabinet end is safe<font color="#E5E5E5"> when the cabinet is</font>

46
00:02:28,840 --> 00:02:32,829
open<font color="#CCCCCC"> to you we'll</font><font color="#E5E5E5"> get into the service</font>

47
00:02:30,310 --> 00:02:35,640
area<font color="#CCCCCC"> the</font><font color="#E5E5E5"> following</font><font color="#CCCCCC"> 8 a.m. parts like it</font>

48
00:02:32,829 --> 00:02:38,799
<font color="#CCCCCC">here</font><font color="#E5E5E5"> PC monotone encrypting PIN pad</font>

49
00:02:35,640 --> 00:02:41,379
printers and<font color="#E5E5E5"> other devices although SS</font>

50
00:02:38,799 --> 00:02:44,470
devices are<font color="#E5E5E5"> connected to the PC are just</font>

51
00:02:41,379 --> 00:02:46,239
like usual peripherals usually logical

52
00:02:44,470 --> 00:02:47,980
attacks can be<font color="#E5E5E5"> done of this zone because</font>

53
00:02:46,239 --> 00:02:50,590
most of the<font color="#E5E5E5"> locks in the cabinet are</font>

54
00:02:47,980 --> 00:02:52,780
<font color="#CCCCCC">primitive</font><font color="#E5E5E5"> the most interesting device is</font>

55
00:02:50,590 --> 00:02:55,359
dispenser<font color="#CCCCCC"> its</font><font color="#E5E5E5"> purpose is to store and</font>

56
00:02:52,780 --> 00:02:57,400
issue cash<font color="#E5E5E5"> before it stays in the safe</font>

57
00:02:55,359 --> 00:02:59,620
the only things of dispenser<font color="#CCCCCC"> can be</font>

58
00:02:57,400 --> 00:03:02,109
accessed<font color="#E5E5E5"> from the service area power</font>

59
00:02:59,620 --> 00:03:05,560
wires<font color="#E5E5E5"> and data bus which are connected</font>

60
00:03:02,109 --> 00:03:08,590
to<font color="#CCCCCC"> a PC let's look at the data flow</font>

61
00:03:05,560 --> 00:03:10,569
<font color="#CCCCCC">opening of an ATM</font><font color="#E5E5E5"> it's not complex</font>

62
00:03:08,590 --> 00:03:12,450
external communication of an ATM is

63
00:03:10,569 --> 00:03:14,619
<font color="#CCCCCC">communications with processing</font><font color="#E5E5E5"> center</font>

64
00:03:12,450 --> 00:03:17,260
represents eccentric communication is

65
00:03:14,620 --> 00:03:19,989
realized using VPN TLS<font color="#CCCCCC"> MHz and it's</font>

66
00:03:17,260 --> 00:03:21,069
<font color="#E5E5E5">secure in most cases the next level of</font>

67
00:03:19,989 --> 00:03:23,950
communication<font color="#CCCCCC"> is windows-based</font>

68
00:03:21,069 --> 00:03:26,560
application it communicates with<font color="#CCCCCC"> XFS</font>

69
00:03:23,950 --> 00:03:28,869
services layer by an<font color="#CCCCCC"> API</font><font color="#E5E5E5"> it's middleware</font>

70
00:03:26,560 --> 00:03:31,720
<font color="#CCCCCC">which implements</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> unified device device</font>

71
00:03:28,870 --> 00:03:33,190
access service provider is a bottom

72
00:03:31,720 --> 00:03:35,709
layer solution for<font color="#E5E5E5"> interaction with</font>

73
00:03:33,190 --> 00:03:36,849
device drivers the lowest level<font color="#E5E5E5"> of</font>

74
00:03:35,709 --> 00:03:39,790
communication<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the data transmission</font>

75
00:03:36,849 --> 00:03:42,040
<font color="#CCCCCC">over hardware buses to devices</font><font color="#E5E5E5"> we were</font>

76
00:03:39,790 --> 00:03:44,858
interested interested exactly in this

77
00:03:42,040 --> 00:03:47,108
issue some people want to<font color="#E5E5E5"> take money</font>

78
00:03:44,859 --> 00:03:49,660
from an ATM because<font color="#E5E5E5"> it's just a box of</font>

79
00:03:47,109 --> 00:03:51,699
<font color="#E5E5E5">metal and plastic the main ATM security</font>

80
00:03:49,660 --> 00:03:53,489
<font color="#CCCCCC">of</font><font color="#E5E5E5"> threads are for</font><font color="#CCCCCC"> brute-force attacks</font>

81
00:03:51,699 --> 00:03:55,690
malware and<font color="#E5E5E5"> hardware attacks</font>

82
00:03:53,489 --> 00:03:58,120
Ethan<font color="#E5E5E5"> connections can be divided</font>

83
00:03:55,690 --> 00:04:00,579
<font color="#E5E5E5">according to</font><font color="#CCCCCC"> the method</font><font color="#E5E5E5"> of access into</font>

84
00:03:58,120 --> 00:04:03,129
two main<font color="#CCCCCC"> parts</font><font color="#E5E5E5"> physical attacks and</font>

85
00:04:00,579 --> 00:04:05,319
logical attacks<font color="#E5E5E5"> let's look at each</font><font color="#CCCCCC"> of</font>

86
00:04:03,129 --> 00:04:08,138
them<font color="#E5E5E5"> physical attacks can be fraud based</font>

87
00:04:05,319 --> 00:04:10,000
or brute force as<font color="#E5E5E5"> you could hear</font><font color="#CCCCCC"> from</font>

88
00:04:08,139 --> 00:04:11,730
the news<font color="#CCCCCC"> this</font><font color="#E5E5E5"> kind of attack is well</font>

89
00:04:10,000 --> 00:04:14,440
they used most popular and happens

90
00:04:11,730 --> 00:04:17,199
everywhere in the<font color="#CCCCCC"> world every day</font>

91
00:04:14,440 --> 00:04:19,449
it used<font color="#CCCCCC"> Tyrael techniques like schemers</font>

92
00:04:17,199 --> 00:04:22,539
of different complexity<font color="#E5E5E5"> traits that</font><font color="#CCCCCC"> host</font>

93
00:04:19,449 --> 00:04:24,419
<font color="#E5E5E5">card inside an ATM cameras and some</font>

94
00:04:22,539 --> 00:04:26,229
transaction reversal techniques

95
00:04:24,419 --> 00:04:28,900
another type of<font color="#E5E5E5"> physic</font>

96
00:04:26,230 --> 00:04:30,670
<font color="#E5E5E5">taxes brute-force attacks an example an</font>

97
00:04:28,900 --> 00:04:32,710
intruder can blow explosive gas into the

98
00:04:30,670 --> 00:04:35,110
<font color="#E5E5E5">safe and then</font><font color="#CCCCCC"> detonate it</font>

99
00:04:32,710 --> 00:04:36,940
so<font color="#CCCCCC"> the safe door</font><font color="#E5E5E5"> will be</font><font color="#CCCCCC"> turned out and</font>

100
00:04:35,110 --> 00:04:41,110
<font color="#E5E5E5">stored cash will</font><font color="#CCCCCC"> be scattered on the</font>

101
00:04:36,940 --> 00:04:44,130
floor<font color="#E5E5E5"> another example example is written</font>

102
00:04:41,110 --> 00:04:48,000
<font color="#CCCCCC">an</font><font color="#E5E5E5"> entire ATM from the wall by a track</font>

103
00:04:44,130 --> 00:04:51,070
the<font color="#CCCCCC"> results you can see on the pictures</font>

104
00:04:48,000 --> 00:04:53,380
now let's look at logical attacks<font color="#CCCCCC"> the</font>

105
00:04:51,070 --> 00:04:55,900
<font color="#E5E5E5">the most common type is malware based</font>

106
00:04:53,380 --> 00:04:58,420
attack<font color="#E5E5E5"> there are many examples of ATM</font>

107
00:04:55,900 --> 00:04:59,919
targeted malware<font color="#E5E5E5"> but they all uses XFS</font>

108
00:04:58,420 --> 00:05:02,440
<font color="#CCCCCC">Services layer to interact</font><font color="#E5E5E5"> these</font>

109
00:04:59,920 --> 00:05:05,200
<font color="#CCCCCC">Hardware</font><font color="#E5E5E5"> parts basically</font><font color="#CCCCCC"> with dispenser</font>

110
00:05:02,440 --> 00:05:07,840
<font color="#E5E5E5">and</font><font color="#CCCCCC"> PIN</font><font color="#E5E5E5"> pad if you are interested in ATM</font>

111
00:05:05,200 --> 00:05:09,670
<font color="#CCCCCC">security you may</font><font color="#E5E5E5"> hear of the</font><font color="#CCCCCC"> cut would</font>

112
00:05:07,840 --> 00:05:12,280
make a plot<font color="#CCCCCC"> to screen dispenser and</font>

113
00:05:09,670 --> 00:05:15,700
other malware<font color="#E5E5E5"> there are few distribution</font>

114
00:05:12,280 --> 00:05:18,489
ways of size<font color="#CCCCCC"> Muller</font><font color="#E5E5E5"> remotely from ATM</font>

115
00:05:15,700 --> 00:05:22,060
processing center of locally from USB

116
00:05:18,490 --> 00:05:23,950
device for example<font color="#E5E5E5"> and now let's look at</font>

117
00:05:22,060 --> 00:05:26,380
another<font color="#E5E5E5"> type</font><font color="#CCCCCC"> of logical attacks</font><font color="#E5E5E5"> that</font>

118
00:05:23,950 --> 00:05:29,190
called blackbox<font color="#E5E5E5"> it's one of the most</font>

119
00:05:26,380 --> 00:05:32,909
complex and technically difficult<font color="#E5E5E5"> attack</font>

120
00:05:29,190 --> 00:05:35,410
and it's also<font color="#E5E5E5"> have many specifics</font>

121
00:05:32,910 --> 00:05:37,660
blackbox attacks are the<font color="#E5E5E5"> attacks with</font>

122
00:05:35,410 --> 00:05:40,540
<font color="#CCCCCC">usage of some extra hardware device is</font>

123
00:05:37,660 --> 00:05:42,700
<font color="#CCCCCC">connected to</font><font color="#E5E5E5"> hardware buses this device</font>

124
00:05:40,540 --> 00:05:45,460
<font color="#E5E5E5">called black boxes you can see an</font>

125
00:05:42,700 --> 00:05:47,320
example<font color="#E5E5E5"> of such devices in the photo</font><font color="#CCCCCC"> so</font>

126
00:05:45,460 --> 00:05:49,570
the casual<font color="#CCCCCC"> observer it looks like</font>

127
00:05:47,320 --> 00:05:51,580
opening<font color="#E5E5E5"> service area connecting some</font>

128
00:05:49,570 --> 00:05:54,219
device or laptop<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the dispenser bus</font>

129
00:05:51,580 --> 00:05:56,169
<font color="#E5E5E5">and cash withdrawal does this type of</font>

130
00:05:54,220 --> 00:05:58,530
<font color="#E5E5E5">attack</font><font color="#CCCCCC"> requires good</font><font color="#E5E5E5"> knowledge of</font>

131
00:05:56,170 --> 00:06:01,150
<font color="#E5E5E5">low-level protocols and ATM hardware</font>

132
00:05:58,530 --> 00:06:04,679
such attacks do not<font color="#E5E5E5"> depend on processing</font>

133
00:06:01,150 --> 00:06:07,120
center operating system and ATM software

134
00:06:04,680 --> 00:06:09,550
<font color="#CCCCCC">let's</font><font color="#E5E5E5"> try to figure out how to connect</font>

135
00:06:07,120 --> 00:06:12,160
<font color="#E5E5E5">the dispenser</font><font color="#CCCCCC"> to the PC generally is</font>

136
00:06:09,550 --> 00:06:15,160
connected by rs-232 SDC or USB

137
00:06:12,160 --> 00:06:18,160
<font color="#E5E5E5">interfaces also</font><font color="#CCCCCC"> in some sources</font><font color="#E5E5E5"> there</font>

138
00:06:15,160 --> 00:06:20,050
are references to<font color="#CCCCCC"> cane bus usage but</font><font color="#E5E5E5"> we</font>

139
00:06:18,160 --> 00:06:22,120
<font color="#E5E5E5">haven't</font><font color="#CCCCCC"> seen it</font><font color="#E5E5E5"> alive</font>

140
00:06:20,050 --> 00:06:25,120
let's take more detailed look at these

141
00:06:22,120 --> 00:06:28,300
devices the first<font color="#CCCCCC"> and oldest interface</font>

142
00:06:25,120 --> 00:06:30,010
is rs-232 as well as the<font color="#CCCCCC"> comm port the</font>

143
00:06:28,300 --> 00:06:32,050
specificity of<font color="#E5E5E5"> this connection is usage</font>

144
00:06:30,010 --> 00:06:34,510
of multiplexer to<font color="#E5E5E5"> expand the number</font><font color="#CCCCCC"> of</font>

145
00:06:32,050 --> 00:06:36,940
words as they<font color="#E5E5E5"> are usually not enough in</font>

146
00:06:34,510 --> 00:06:37,300
<font color="#E5E5E5">PC an example of multiplexers in the</font>

147
00:06:36,940 --> 00:06:40,219
<font color="#CCCCCC">FATA</font>

148
00:06:37,300 --> 00:06:43,310
<font color="#E5E5E5">you only need a laptop and cheap USB</font><font color="#CCCCCC"> to</font>

149
00:06:40,220 --> 00:06:46,070
adapted to perform this attack<font color="#CCCCCC"> unusual</font>

150
00:06:43,310 --> 00:06:48,380
data<font color="#E5E5E5"> is transmitted in unprotected way</font>

151
00:06:46,070 --> 00:06:52,010
and firmware encryption patches are very

152
00:06:48,380 --> 00:06:53,750
limited<font color="#E5E5E5"> in their resources in number of</font>

153
00:06:52,010 --> 00:06:56,510
<font color="#E5E5E5">cases the comments are human readable</font>

154
00:06:53,750 --> 00:06:58,520
<font color="#E5E5E5">and it's enough to look into the traffic</font>

155
00:06:56,510 --> 00:07:01,550
<font color="#E5E5E5">in order to understand and reproduce</font>

156
00:06:58,520 --> 00:07:05,299
them<font color="#CCCCCC"> this is too primitive and so let's</font>

157
00:07:01,550 --> 00:07:06,230
move<font color="#E5E5E5"> to the</font><font color="#CCCCCC"> next interface this</font><font color="#E5E5E5"> is the</font>

158
00:07:05,300 --> 00:07:09,520
SDC bus

159
00:07:06,230 --> 00:07:11,260
<font color="#CCCCCC">it's proprietary for NCR ATMs</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> fact is</font>

160
00:07:09,520 --> 00:07:15,260
it is

161
00:07:11,260 --> 00:07:18,080
<font color="#E5E5E5">rs-485 is</font><font color="#CCCCCC"> a multi drop comport vendor</font>

162
00:07:15,260 --> 00:07:20,810
uses unusual bitrate and<font color="#CCCCCC"> byte size here</font>

163
00:07:18,080 --> 00:07:24,710
an encryption is trivial XOR operation

164
00:07:20,810 --> 00:07:27,170
<font color="#E5E5E5">the interaction is built of principle on</font>

165
00:07:24,710 --> 00:07:29,030
<font color="#CCCCCC">matter several</font><font color="#E5E5E5"> slaves and the slave</font>

166
00:07:27,170 --> 00:07:32,990
devices are connected<font color="#E5E5E5"> to the same wires</font>

167
00:07:29,030 --> 00:07:36,140
on the bus<font color="#CCCCCC"> in parallel a popular</font><font color="#E5E5E5"> attack</font>

168
00:07:32,990 --> 00:07:39,350
is<font color="#E5E5E5"> called drill box an attacker cuts a</font>

169
00:07:36,140 --> 00:07:42,320
hole in the<font color="#CCCCCC"> ATM face and next to the</font><font color="#E5E5E5"> pin</font>

170
00:07:39,350 --> 00:07:45,110
pad then attacker turns off pin patterns

171
00:07:42,320 --> 00:07:47,840
on his device and connect connect to the

172
00:07:45,110 --> 00:07:50,060
<font color="#E5E5E5">SDC bus which also got to the safe to</font>

173
00:07:47,840 --> 00:07:52,460
further dispenser further<font color="#E5E5E5"> you only need</font>

174
00:07:50,060 --> 00:07:54,770
to send<font color="#E5E5E5"> a data protocol sequences for</font>

175
00:07:52,460 --> 00:07:57,049
<font color="#E5E5E5">cache action issue usually special</font>

176
00:07:54,770 --> 00:08:00,049
interface cut<font color="#CCCCCC"> is installed</font><font color="#E5E5E5"> into PC for</font>

177
00:07:57,050 --> 00:08:01,430
communication<font color="#CCCCCC"> via SD</font><font color="#E5E5E5"> scene</font><font color="#CCCCCC"> and finally</font>

178
00:08:00,050 --> 00:08:04,220
what most interesting and complex

179
00:08:01,430 --> 00:08:06,380
logical<font color="#E5E5E5"> buses USB just roll you'll need</font>

180
00:08:04,220 --> 00:08:08,540
to understand<font color="#E5E5E5"> offered terminology and</font>

181
00:08:06,380 --> 00:08:11,409
abstractions<font color="#E5E5E5"> for example in</font><font color="#CCCCCC"> port</font>

182
00:08:08,540 --> 00:08:14,030
descriptors interfaces<font color="#E5E5E5"> and their types</font>

183
00:08:11,410 --> 00:08:16,160
typically dispensers identified as human

184
00:08:14,030 --> 00:08:18,679
<font color="#E5E5E5">interface devices or composite devices</font>

185
00:08:16,160 --> 00:08:21,530
however<font color="#CCCCCC"> to see the data</font><font color="#E5E5E5"> at low level you</font>

186
00:08:18,680 --> 00:08:23,330
need<font color="#E5E5E5"> a hardware sniffer absolutely</font>

187
00:08:21,530 --> 00:08:25,969
dispensable usually have inherent

188
00:08:23,330 --> 00:08:28,159
protocols from comport devices with the

189
00:08:25,970 --> 00:08:30,650
same<font color="#CCCCCC"> drawbacks</font><font color="#E5E5E5"> but we will not consider</font>

190
00:08:28,160 --> 00:08:32,479
<font color="#E5E5E5">them</font><font color="#CCCCCC"> let's</font><font color="#E5E5E5"> look at examples of</font><font color="#CCCCCC"> real</font>

191
00:08:30,650 --> 00:08:37,130
attacks on<font color="#CCCCCC"> most sophisticated</font><font color="#E5E5E5"> to use be</font>

192
00:08:32,479 --> 00:08:39,650
dispensers in 2014 one of<font color="#CCCCCC"> the findings</font>

193
00:08:37,130 --> 00:08:41,900
<font color="#E5E5E5">of positive technologies research team</font>

194
00:08:39,650 --> 00:08:44,480
in<font color="#E5E5E5"> devices of this type was incorrect</font>

195
00:08:41,900 --> 00:08:47,120
<font color="#CCCCCC">installation of random faction so the</font>

196
00:08:44,480 --> 00:08:49,160
initial key was predictable<font color="#CCCCCC"> in this</font>

197
00:08:47,120 --> 00:08:51,080
<font color="#E5E5E5">regard currently implemented encrypted</font>

198
00:08:49,160 --> 00:08:54,110
protocol appeared<font color="#E5E5E5"> to be vulnerable</font>

199
00:08:51,080 --> 00:08:56,600
these are allowed to iterate the session

200
00:08:54,110 --> 00:08:59,630
<font color="#E5E5E5">kifo finite time and then to send</font>

201
00:08:56,600 --> 00:09:01,490
<font color="#CCCCCC">comment to cash fiction cash issue</font><font color="#E5E5E5"> this</font>

202
00:08:59,630 --> 00:09:03,769
vulnerability<font color="#CCCCCC"> was exploited in real</font>

203
00:09:01,490 --> 00:09:07,550
attacks and has been already<font color="#E5E5E5"> fixed by</font>

204
00:09:03,769 --> 00:09:09,980
the vendor the most recent attack is

205
00:09:07,550 --> 00:09:13,219
related to attack of this type<font color="#E5E5E5"> was made</font>

206
00:09:09,980 --> 00:09:14,660
in 2017<font color="#E5E5E5"> and the scope was used in</font>

207
00:09:13,220 --> 00:09:17,480
addition<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the laptop with some</font>

208
00:09:14,660 --> 00:09:20,569
<font color="#E5E5E5">engineering software and then laptop was</font>

209
00:09:17,480 --> 00:09:22,130
connected to dispenser<font color="#CCCCCC"> when this court</font>

210
00:09:20,570 --> 00:09:25,430
<font color="#E5E5E5">laid down into the safe</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> whole</font>

211
00:09:22,130 --> 00:09:27,290
<font color="#CCCCCC">after the</font><font color="#E5E5E5"> shutter was broken the end of</font>

212
00:09:25,430 --> 00:09:29,569
<font color="#E5E5E5">the</font><font color="#CCCCCC"> Scopes which the sensor</font><font color="#E5E5E5"> simulating</font>

213
00:09:27,290 --> 00:09:31,519
<font color="#E5E5E5">engineers altercation during the</font>

214
00:09:29,570 --> 00:09:34,430
dispenser maintenance<font color="#E5E5E5"> after the other</font>

215
00:09:31,519 --> 00:09:37,910
<font color="#E5E5E5">firmware cache issue test function was</font>

216
00:09:34,430 --> 00:09:40,880
unlocked<font color="#E5E5E5"> and it was used by attacker at</font>

217
00:09:37,910 --> 00:09:43,790
this point you could have seemed the

218
00:09:40,880 --> 00:09:46,339
black box attack things of the past<font color="#CCCCCC"> and</font>

219
00:09:43,790 --> 00:09:48,170
the head of the<font color="#E5E5E5"> class since the last</font>

220
00:09:46,339 --> 00:09:50,570
<font color="#CCCCCC">attack</font><font color="#E5E5E5"> might be</font><font color="#CCCCCC"> classified as a physical</font>

221
00:09:48,170 --> 00:09:52,579
attack and windows<font color="#CCCCCC"> have implemented</font>

222
00:09:50,570 --> 00:09:56,060
encryption everywhere

223
00:09:52,579 --> 00:09:58,430
however we proceed to<font color="#CCCCCC"> our case so to</font>

224
00:09:56,060 --> 00:10:00,619
research an ATM<font color="#CCCCCC"> hardware we need to</font>

225
00:09:58,430 --> 00:10:03,319
determine<font color="#CCCCCC"> the</font><font color="#E5E5E5"> manufacturer and</font><font color="#CCCCCC"> East</font>

226
00:10:00,620 --> 00:10:05,899
<font color="#CCCCCC">Hardware in our case the choice</font><font color="#E5E5E5"> was</font>

227
00:10:03,320 --> 00:10:07,990
quite simple since NCR is one of the

228
00:10:05,899 --> 00:10:11,060
largest<font color="#E5E5E5"> manufacturers of ATM and</font>

229
00:10:07,990 --> 00:10:13,880
<font color="#CCCCCC">software for them</font><font color="#E5E5E5"> it's also very common</font>

230
00:10:11,060 --> 00:10:15,699
<font color="#E5E5E5">on our live projects do you</font><font color="#CCCCCC"> a team</font>

231
00:10:13,880 --> 00:10:17,570
<font color="#E5E5E5">consider it one of the most secure</font><font color="#CCCCCC"> and</font>

232
00:10:15,699 --> 00:10:21,170
communication with dispenser is

233
00:10:17,570 --> 00:10:24,410
encrypted<font color="#CCCCCC"> so our choice</font><font color="#E5E5E5"> is NCR is one</font>

234
00:10:21,170 --> 00:10:26,719
dispenser usually<font color="#CCCCCC"> catches pencils</font><font color="#E5E5E5"> is</font>

235
00:10:24,410 --> 00:10:28,939
<font color="#CCCCCC">very complex device mechanics of</font>

236
00:10:26,720 --> 00:10:31,670
dispenser performance<font color="#CCCCCC"> can store in</font><font color="#E5E5E5"> peak</font>

237
00:10:28,940 --> 00:10:33,860
<font color="#CCCCCC">invalidation</font><font color="#E5E5E5"> transportation every</font>

238
00:10:31,670 --> 00:10:36,019
movement is<font color="#E5E5E5"> be fooled by drive units and</font>

239
00:10:33,860 --> 00:10:38,839
controlled by sensors<font color="#E5E5E5"> the brain of a</font>

240
00:10:36,019 --> 00:10:42,410
dispenser is it control electronics it's

241
00:10:38,839 --> 00:10:44,209
usually called dispenser controller<font color="#E5E5E5"> all</font>

242
00:10:42,410 --> 00:10:47,089
mechanical<font color="#E5E5E5"> parts of dispenser have their</font>

243
00:10:44,209 --> 00:10:48,890
specific names<font color="#E5E5E5"> the dispensers are built</font>

244
00:10:47,089 --> 00:10:52,160
with two three<font color="#E5E5E5"> or</font><font color="#CCCCCC"> four Pig modules</font>

245
00:10:48,890 --> 00:10:55,069
<font color="#E5E5E5">placed below</font><font color="#CCCCCC"> that present a model</font><font color="#E5E5E5"> blue</font>

246
00:10:52,160 --> 00:10:56,959
the storage in cases also<font color="#E5E5E5"> the dispenser</font>

247
00:10:55,070 --> 00:10:58,910
have<font color="#CCCCCC"> dedicated to reject I said for</font>

248
00:10:56,959 --> 00:11:01,040
<font color="#CCCCCC">jumped or wrong picked banknotes</font>

249
00:10:58,910 --> 00:11:02,750
<font color="#E5E5E5">bills are transported</font><font color="#CCCCCC"> from the</font><font color="#E5E5E5"> peak</font>

250
00:11:01,040 --> 00:11:05,240
mechanism to<font color="#E5E5E5"> build where data and the</font>

251
00:11:02,750 --> 00:11:07,390
enter presenter in case no errors has a

252
00:11:05,240 --> 00:11:10,959
have occurred

253
00:11:07,390 --> 00:11:13,329
no<font color="#E5E5E5"> sigh issued</font><font color="#CCCCCC"> to the chaton</font><font color="#E5E5E5"> dispenser</font>

254
00:11:10,959 --> 00:11:14,949
controller is<font color="#CCCCCC"> the control board that</font>

255
00:11:13,329 --> 00:11:17,229
controls the operation of currency

256
00:11:14,950 --> 00:11:19,600
dispenser<font color="#CCCCCC"> it's called fire processor</font>

257
00:11:17,230 --> 00:11:23,170
<font color="#CCCCCC">baseboard it is possible for collecting</font>

258
00:11:19,600 --> 00:11:24,880
<font color="#E5E5E5">all sensor information</font><font color="#CCCCCC"> in operation the</font>

259
00:11:23,170 --> 00:11:27,990
mechanics<font color="#E5E5E5"> and also communication</font>

260
00:11:24,880 --> 00:11:30,519
comments in<font color="#E5E5E5"> sending responses to the ATM</font>

261
00:11:27,990 --> 00:11:32,470
the control board is mixed technology

262
00:11:30,519 --> 00:11:34,300
PCB<font color="#CCCCCC"> employing both surface mount</font>

263
00:11:32,470 --> 00:11:41,019
technology as related<font color="#E5E5E5"> to the whole</font>

264
00:11:34,300 --> 00:11:43,209
components<font color="#CCCCCC"> you want to protect the</font>

265
00:11:41,019 --> 00:11:46,240
<font color="#CCCCCC">future</font><font color="#E5E5E5"> you want to find and report some</font>

266
00:11:43,209 --> 00:11:49,359
vulnerabilities to NCR<font color="#E5E5E5"> but you don't</font>

267
00:11:46,240 --> 00:11:52,810
have an<font color="#E5E5E5"> ATM and you also have don't have</font>

268
00:11:49,360 --> 00:11:54,970
firmware binary<font color="#CCCCCC"> what you can do</font>

269
00:11:52,810 --> 00:11:58,000
well<font color="#E5E5E5"> unfortunately for</font><font color="#CCCCCC"> the vendor</font>

270
00:11:54,970 --> 00:12:02,589
unfortunately for you it is<font color="#E5E5E5"> possible</font>

271
00:11:58,000 --> 00:12:07,240
because<font color="#E5E5E5"> you can buy control the bots</font>

272
00:12:02,589 --> 00:12:11,019
that<font color="#E5E5E5"> eBay for</font><font color="#CCCCCC"> example white is why it</font>

273
00:12:07,240 --> 00:12:13,660
happens because when the dispenser

274
00:12:11,019 --> 00:12:17,279
becomes broken<font color="#E5E5E5"> the service center</font>

275
00:12:13,660 --> 00:12:22,589
usually replaces<font color="#CCCCCC"> a</font><font color="#E5E5E5"> whole device and</font>

276
00:12:17,279 --> 00:12:26,860
parts of<font color="#E5E5E5"> the dispenser</font><font color="#CCCCCC"> may be a sell by</font>

277
00:12:22,589 --> 00:12:29,290
<font color="#CCCCCC">parts so after you have bought the</font>

278
00:12:26,860 --> 00:12:33,940
dispenser controller<font color="#E5E5E5"> you need to get</font><font color="#CCCCCC"> its</font>

279
00:12:29,290 --> 00:12:37,779
from where it is much<font color="#CCCCCC"> harder</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> you can</font>

280
00:12:33,940 --> 00:12:43,649
ask your friend that works in service

281
00:12:37,779 --> 00:12:51,459
center and maybe he will give you<font color="#E5E5E5"> an</font>

282
00:12:43,649 --> 00:12:54,089
this<font color="#E5E5E5"> binary so for most of our</font><font color="#CCCCCC"> tests we</font>

283
00:12:51,459 --> 00:12:57,399
don't need<font color="#CCCCCC"> the full dispenser assembly</font>

284
00:12:54,089 --> 00:13:01,500
when you want<font color="#CCCCCC"> to play with</font><font color="#E5E5E5"> protocol and</font>

285
00:12:57,399 --> 00:13:06,940
other logical<font color="#CCCCCC"> things so we need is</font>

286
00:13:01,500 --> 00:13:12,430
<font color="#CCCCCC">controller</font><font color="#E5E5E5"> board itself USB cable laptop</font>

287
00:13:06,940 --> 00:13:14,680
or PC and<font color="#E5E5E5"> power supply so this slide</font>

288
00:13:12,430 --> 00:13:16,589
show us brief information<font color="#CCCCCC"> about the</font>

289
00:13:14,680 --> 00:13:19,469
front where binary

290
00:13:16,590 --> 00:13:25,320
first of<font color="#E5E5E5"> all it</font><font color="#CCCCCC"> is not encrypted</font>

291
00:13:19,470 --> 00:13:26,570
<font color="#E5E5E5">it is waxworks based and also it has</font><font color="#CCCCCC"> on</font>

292
00:13:25,320 --> 00:13:33,450
<font color="#CCCCCC">strip symbols</font>

293
00:13:26,570 --> 00:13:36,510
it makes our analysis less difficult to

294
00:13:33,450 --> 00:13:39,930
start with we must understand that in

295
00:13:36,510 --> 00:13:44,870
our case the dispenser<font color="#E5E5E5"> controller bot is</font>

296
00:13:39,930 --> 00:13:49,189
a USB<font color="#CCCCCC"> device</font><font color="#E5E5E5"> so there is some code that</font>

297
00:13:44,870 --> 00:13:55,760
receives commands distributes them to

298
00:13:49,190 --> 00:14:00,000
<font color="#E5E5E5">lower levels and send some responses to</font>

299
00:13:55,760 --> 00:14:03,660
<font color="#CCCCCC">to these</font><font color="#E5E5E5"> commands</font><font color="#CCCCCC"> and to find this code</font>

300
00:14:00,000 --> 00:14:07,620
<font color="#E5E5E5">we must identify the CPU name on this</font>

301
00:14:03,660 --> 00:14:11,850
chip<font color="#E5E5E5"> and then we must find datasheet</font>

302
00:14:07,620 --> 00:14:15,120
document and find some control register

303
00:14:11,850 --> 00:14:18,990
and data register<font color="#E5E5E5"> constants in it then</font>

304
00:14:15,120 --> 00:14:26,490
<font color="#E5E5E5">we will need we will use these constants</font>

305
00:14:18,990 --> 00:14:30,920
<font color="#E5E5E5">to find the code so here are some of</font>

306
00:14:26,490 --> 00:14:35,310
search results as you<font color="#E5E5E5"> can see they are</font>

307
00:14:30,920 --> 00:14:38,969
here they're right packet function and a

308
00:14:35,310 --> 00:14:42,589
red packet function that are very

309
00:14:38,970 --> 00:14:46,910
interesting<font color="#CCCCCC"> for us</font><font color="#E5E5E5"> but their names</font>

310
00:14:42,590 --> 00:14:52,910
<font color="#E5E5E5">mangled it is not a problem</font>

311
00:14:46,910 --> 00:14:57,630
so first problems that you<font color="#E5E5E5"> will face is</font>

312
00:14:52,910 --> 00:15:00,750
absence of<font color="#E5E5E5"> metrology compilers</font><font color="#CCCCCC"> also</font>

313
00:14:57,630 --> 00:15:04,939
there<font color="#CCCCCC"> are many C++ virtual function</font>

314
00:15:00,750 --> 00:15:11,670
tables and<font color="#E5E5E5"> will show calls that was</font>

315
00:15:04,940 --> 00:15:15,300
<font color="#E5E5E5">difficult</font><font color="#CCCCCC"> to analyze in x86 2 if you</font>

316
00:15:11,670 --> 00:15:17,790
<font color="#E5E5E5">divide the code</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> main components you</font>

317
00:15:15,300 --> 00:15:20,339
will get the<font color="#CCCCCC"> following scheme the first</font>

318
00:15:17,790 --> 00:15:23,010
level is the<font color="#CCCCCC"> thread</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> responsible for</font>

319
00:15:20,340 --> 00:15:27,060
receiving and distributing USB packets

320
00:15:23,010 --> 00:15:29,220
between<font color="#E5E5E5"> services level to our services</font>

321
00:15:27,060 --> 00:15:32,758
<font color="#CCCCCC">basic execution units</font>

322
00:15:29,220 --> 00:15:36,600
each of them has its<font color="#CCCCCC"> own role and its</font>

323
00:15:32,759 --> 00:15:39,750
own tasks also<font color="#E5E5E5"> called classes</font><font color="#CCCCCC"> they're</font>

324
00:15:36,600 --> 00:15:42,540
all three<font color="#E5E5E5"> classes here there are tasks</font>

325
00:15:39,750 --> 00:15:46,100
that executable<font color="#E5E5E5"> by different services</font>

326
00:15:42,540 --> 00:15:49,469
using<font color="#CCCCCC"> such things as their controllers</font>

327
00:15:46,100 --> 00:15:53,569
and<font color="#E5E5E5"> the</font><font color="#CCCCCC"> last level controllers they are</font>

328
00:15:49,470 --> 00:15:56,430
<font color="#E5E5E5">logical in fact</font><font color="#CCCCCC"> they are</font><font color="#E5E5E5"> workers that</font>

329
00:15:53,569 --> 00:16:01,949
perform commands validation execution

330
00:15:56,430 --> 00:16:04,229
and answer forming to execute an exact

331
00:16:01,949 --> 00:16:07,170
command you<font color="#E5E5E5"> must specify the service the</font>

332
00:16:04,230 --> 00:16:10,769
class and logical controller indices

333
00:16:07,170 --> 00:16:13,349
before that command will be executed by

334
00:16:10,769 --> 00:16:16,709
<font color="#E5E5E5">the execute function it will be checked</font>

335
00:16:13,350 --> 00:16:20,069
with a validate command function and

336
00:16:16,709 --> 00:16:25,008
format<font color="#E5E5E5"> response function forms the</font>

337
00:16:20,069 --> 00:16:25,009
response packet with execution results

338
00:16:25,339 --> 00:16:30,060
dispensable transactions<font color="#E5E5E5"> transaction</font>

339
00:16:28,199 --> 00:16:32,878
service is the<font color="#E5E5E5"> most interesting</font><font color="#CCCCCC"> service</font>

340
00:16:30,060 --> 00:16:36,180
for us it works with banknote<font color="#CCCCCC"> withdrawal</font>

341
00:16:32,879 --> 00:16:38,730
commands<font color="#E5E5E5"> and their encryption this</font>

342
00:16:36,180 --> 00:16:42,329
service<font color="#E5E5E5"> has three classes but only two</font>

343
00:16:38,730 --> 00:16:45,180
<font color="#E5E5E5">of them are</font><font color="#CCCCCC"> the most</font><font color="#E5E5E5"> interesting</font><font color="#CCCCCC"> class</font>

344
00:16:42,329 --> 00:16:48,209
<font color="#E5E5E5">one works with the secure messages and</font>

345
00:16:45,180 --> 00:16:50,790
the second one was works with most

346
00:16:48,209 --> 00:16:53,309
secure messages<font color="#E5E5E5"> because</font><font color="#CCCCCC"> they are</font>

347
00:16:50,790 --> 00:16:58,050
encrypted<font color="#E5E5E5"> the only difference is that</font>

348
00:16:53,309 --> 00:17:02,329
<font color="#E5E5E5">the class one skips there's this</font><font color="#CCCCCC"> more</font>

349
00:16:58,050 --> 00:17:06,359
<font color="#CCCCCC">secure messages using the reject tray</font>

350
00:17:02,329 --> 00:17:09,688
that contains command indices

351
00:17:06,359 --> 00:17:13,708
<font color="#E5E5E5">my guess is previously there was only</font>

352
00:17:09,689 --> 00:17:19,069
one class in this code<font color="#E5E5E5"> and it looks like</font>

353
00:17:13,709 --> 00:17:22,110
<font color="#E5E5E5">a fast fix rather than a good approach</font>

354
00:17:19,069 --> 00:17:25,260
so in this slide you<font color="#CCCCCC"> see</font><font color="#E5E5E5"> the sequence of</font>

355
00:17:22,109 --> 00:17:30,418
<font color="#E5E5E5">actions</font><font color="#CCCCCC"> that must be taken to generate</font>

356
00:17:25,260 --> 00:17:32,400
the initial<font color="#E5E5E5"> key in civilization the</font>

357
00:17:30,419 --> 00:17:34,620
first action<font color="#E5E5E5"> is to select the encryption</font>

358
00:17:32,400 --> 00:17:37,610
in<font color="#CCCCCC"> Civilization command on the service</font>

359
00:17:34,620 --> 00:17:39,928
<font color="#CCCCCC">separator screen you will see it later</font>

360
00:17:37,610 --> 00:17:41,668
<font color="#E5E5E5">then we need to toggle the bottom</font>

361
00:17:39,929 --> 00:17:42,960
cassette<font color="#E5E5E5"> in the safe or to perform</font>

362
00:17:41,669 --> 00:17:44,700
<font color="#E5E5E5">switching of</font>

363
00:17:42,960 --> 00:17:49,529
a special<font color="#CCCCCC"> tumbler</font><font color="#E5E5E5"> on the controller</font>

364
00:17:44,700 --> 00:17:53,070
<font color="#E5E5E5">board all within one</font><font color="#CCCCCC"> minute after that</font>

365
00:17:49,529 --> 00:17:56,159
<font color="#E5E5E5">the dispenser will send you the initial</font>

366
00:17:53,070 --> 00:17:59,908
key encryption keys<font color="#E5E5E5"> have the rolling</font>

367
00:17:56,159 --> 00:18:02,130
type<font color="#E5E5E5"> it means that every key for every</font>

368
00:17:59,909 --> 00:18:04,590
message will<font color="#E5E5E5"> be different because of the</font>

369
00:18:02,130 --> 00:18:08,850
rolling component like a<font color="#E5E5E5"> session number</font>

370
00:18:04,590 --> 00:18:11,879
<font color="#CCCCCC">a message number ok now you think that</font>

371
00:18:08,850 --> 00:18:15,000
<font color="#E5E5E5">it is possible to intercept the packet</font>

372
00:18:11,880 --> 00:18:19,980
with<font color="#CCCCCC"> the initial key and use it then now</font>

373
00:18:15,000 --> 00:18:23,070
it is<font color="#E5E5E5"> not possible because in the in the</font>

374
00:18:19,980 --> 00:18:25,830
handling<font color="#E5E5E5"> sheet key exchange command the</font>

375
00:18:23,070 --> 00:18:27,990
<font color="#E5E5E5">PC also sends the public key which will</font>

376
00:18:25,830 --> 00:18:31,860
be used for<font color="#E5E5E5"> the encrypting the initial</font>

377
00:18:27,990 --> 00:18:36,480
key and another part of command is a

378
00:18:31,860 --> 00:18:42,469
<font color="#E5E5E5">hardware ID which might be must be equal</font>

379
00:18:36,480 --> 00:18:47,570
to<font color="#E5E5E5"> the real one just here</font><font color="#CCCCCC"> that makes</font>

380
00:18:42,470 --> 00:18:47,570
<font color="#CCCCCC">brute-forcing of this command</font><font color="#E5E5E5"> impossible</font>

381
00:18:47,870 --> 00:18:53,100
unfortunately we don't have<font color="#E5E5E5"> physical</font>

382
00:18:49,860 --> 00:18:55,559
<font color="#CCCCCC">access to the safe</font><font color="#E5E5E5"> where the dispenser</font>

383
00:18:53,100 --> 00:18:58,649
controller is located so we cannot

384
00:18:55,559 --> 00:19:00,889
perform<font color="#E5E5E5"> the initial key exchange it is</font>

385
00:18:58,649 --> 00:19:05,570
only possible if the<font color="#E5E5E5"> protection level</font>

386
00:19:00,890 --> 00:19:08,850
<font color="#E5E5E5">was set to the</font><font color="#CCCCCC"> USB or to the logical</font><font color="#E5E5E5"> one</font>

387
00:19:05,570 --> 00:19:12,059
<font color="#E5E5E5">to</font><font color="#CCCCCC"> downgrade the protection level from</font>

388
00:19:08,850 --> 00:19:16,590
the physical one<font color="#CCCCCC"> you will also need</font><font color="#E5E5E5"> to</font>

389
00:19:12,059 --> 00:19:18,980
<font color="#CCCCCC">have the</font><font color="#E5E5E5"> physical access to the safe so</font>

390
00:19:16,590 --> 00:19:22,649
what should we<font color="#E5E5E5"> do</font>

391
00:19:18,980 --> 00:19:25,830
surely there is some way how the PC

392
00:19:22,649 --> 00:19:31,139
<font color="#CCCCCC">download the firmware into the dispenser</font>

393
00:19:25,830 --> 00:19:36,360
and such<font color="#CCCCCC"> teemed can be called bootloader</font>

394
00:19:31,140 --> 00:19:38,610
<font color="#CCCCCC">and we must</font><font color="#E5E5E5"> find it</font><font color="#CCCCCC"> sometime later I</font>

395
00:19:36,360 --> 00:19:41,639
<font color="#E5E5E5">found the service that was responsible</font>

396
00:19:38,610 --> 00:19:45,689
for<font color="#E5E5E5"> switching to bootloader and its name</font>

397
00:19:41,640 --> 00:19:48,029
is<font color="#CCCCCC"> used bidden Lord service the</font><font color="#E5E5E5"> only</font>

398
00:19:45,690 --> 00:19:50,520
things that<font color="#E5E5E5"> it does are switching into</font>

399
00:19:48,029 --> 00:19:53,580
bootloader<font color="#E5E5E5"> and</font><font color="#CCCCCC"> sending a USB device</font>

400
00:19:50,520 --> 00:19:57,330
<font color="#E5E5E5">information like VAD PID</font>

401
00:19:53,580 --> 00:20:02,250
and packet size<font color="#CCCCCC"> the most interesting</font>

402
00:19:57,330 --> 00:20:06,990
fact is that these commands<font color="#CCCCCC"> don't</font>

403
00:20:02,250 --> 00:20:09,060
require to be encrypted<font color="#CCCCCC"> so the</font>

404
00:20:06,990 --> 00:20:12,960
bootloader itself has been hiding<font color="#E5E5E5"> from</font>

405
00:20:09,060 --> 00:20:16,110
me<font color="#CCCCCC"> for a</font><font color="#E5E5E5"> long time</font><font color="#CCCCCC"> it's code</font><font color="#E5E5E5"> couldn't be</font>

406
00:20:12,960 --> 00:20:19,830
just<font color="#E5E5E5"> found by stream search</font><font color="#CCCCCC"> or function</font>

407
00:20:16,110 --> 00:20:22,129
name search<font color="#CCCCCC"> I have found it in the data</font>

408
00:20:19,830 --> 00:20:26,850
section in the form of the<font color="#E5E5E5"> glib stream</font>

409
00:20:22,130 --> 00:20:29,160
<font color="#E5E5E5">that actually the secure</font><font color="#CCCCCC"> what in its in</font>

410
00:20:26,850 --> 00:20:32,550
its name is a fake<font color="#CCCCCC"> because there is no</font>

411
00:20:29,160 --> 00:20:34,320
any<font color="#CCCCCC"> security</font><font color="#E5E5E5"> in it this part of the</font>

412
00:20:32,550 --> 00:20:37,710
research was<font color="#CCCCCC"> the most difficult</font>

413
00:20:34,320 --> 00:20:38,669
we have reprogrammed<font color="#CCCCCC"> in the RAM chip a</font>

414
00:20:37,710 --> 00:20:42,330
lot of times

415
00:20:38,670 --> 00:20:44,430
thanks to<font color="#E5E5E5"> Alexei</font><font color="#CCCCCC"> so if you still decide</font>

416
00:20:42,330 --> 00:20:46,770
to make a firmware<font color="#E5E5E5"> download research you</font>

417
00:20:44,430 --> 00:20:49,410
<font color="#CCCCCC">must understand that without in</font><font color="#E5E5E5"> the</font>

418
00:20:46,770 --> 00:20:53,820
<font color="#CCCCCC">rhombic app you</font><font color="#E5E5E5"> have many chances to</font>

419
00:20:49,410 --> 00:20:56,130
break your dispenser so what you need<font color="#E5E5E5"> to</font>

420
00:20:53,820 --> 00:20:59,850
do is to fix your from where<font color="#CCCCCC"> according</font>

421
00:20:56,130 --> 00:21:02,970
<font color="#CCCCCC">to your</font><font color="#E5E5E5"> intents our intent was research</font>

422
00:20:59,850 --> 00:21:05,280
surely the<font color="#CCCCCC"> first action is to switch</font>

423
00:21:02,970 --> 00:21:08,340
into<font color="#E5E5E5"> the bootloader</font><font color="#CCCCCC"> at this step the</font>

424
00:21:05,280 --> 00:21:10,800
special flag<font color="#E5E5E5"> will be setting in the</font><font color="#CCCCCC"> nvm</font>

425
00:21:08,340 --> 00:21:13,830
and it will be checked<font color="#E5E5E5"> later at the</font>

426
00:21:10,800 --> 00:21:16,409
front where boot this flag was<font color="#CCCCCC"> the</font><font color="#E5E5E5"> cause</font>

427
00:21:13,830 --> 00:21:19,860
of unbootable from where<font color="#E5E5E5"> during our</font>

428
00:21:16,410 --> 00:21:23,340
<font color="#CCCCCC">attempt the second action is</font><font color="#E5E5E5"> to generate</font>

429
00:21:19,860 --> 00:21:26,850
<font color="#E5E5E5">the key pair for signature</font><font color="#CCCCCC"> checks that</font>

430
00:21:23,340 --> 00:21:30,360
<font color="#E5E5E5">will be performed later</font><font color="#CCCCCC"> self</font><font color="#E5E5E5"> signed</font>

431
00:21:26,850 --> 00:21:33,899
firmware is a popular<font color="#CCCCCC"> phenomenon</font><font color="#E5E5E5"> but it</font>

432
00:21:30,360 --> 00:21:35,580
is fully useless in our case because<font color="#E5E5E5"> it</font>

433
00:21:33,900 --> 00:21:39,770
won't help you<font color="#CCCCCC"> to protect the firmware</font>

434
00:21:35,580 --> 00:21:43,649
if you are<font color="#CCCCCC"> able to</font><font color="#E5E5E5"> change the public key</font>

435
00:21:39,770 --> 00:21:46,440
so also<font color="#E5E5E5"> you may specify the controller</font>

436
00:21:43,650 --> 00:21:50,160
serial number and the<font color="#E5E5E5"> version of their</font>

437
00:21:46,440 --> 00:21:52,770
firmware<font color="#CCCCCC"> and the third</font><font color="#E5E5E5"> step we need</font><font color="#CCCCCC"> to</font>

438
00:21:50,160 --> 00:21:58,170
send their boot command the dispenser

439
00:21:52,770 --> 00:22:00,480
bootloader will be booted<font color="#E5E5E5"> again</font><font color="#CCCCCC"> the next</font>

440
00:21:58,170 --> 00:22:02,880
<font color="#CCCCCC">action that we need to perform</font><font color="#E5E5E5"> is there</font>

441
00:22:00,480 --> 00:22:05,370
is to send the<font color="#E5E5E5"> data and text section</font>

442
00:22:02,880 --> 00:22:07,680
sequentially specifying physical

443
00:22:05,370 --> 00:22:11,159
addresses and sizes<font color="#E5E5E5"> for every blow</font>

444
00:22:07,680 --> 00:22:14,460
in the packet header<font color="#E5E5E5"> there are some</font>

445
00:22:11,160 --> 00:22:16,800
<font color="#CCCCCC">mother problems</font><font color="#E5E5E5"> too</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> adjust</font><font color="#CCCCCC"> right</font>

446
00:22:14,460 --> 00:22:19,320
<font color="#E5E5E5">a change block</font><font color="#CCCCCC"> you must try the</font><font color="#E5E5E5"> hole</font>

447
00:22:16,800 --> 00:22:22,620
from where sequentially also<font color="#E5E5E5"> again</font>

448
00:22:19,320 --> 00:22:24,649
<font color="#E5E5E5">specify virtual addresses here you have</font>

449
00:22:22,620 --> 00:22:30,270
to specify the physical ones

450
00:22:24,650 --> 00:22:32,730
<font color="#CCCCCC">let's one at this</font><font color="#E5E5E5"> moment we must already</font>

451
00:22:30,270 --> 00:22:35,160
have<font color="#E5E5E5"> the sha-1 calculated for the</font>

452
00:22:32,730 --> 00:22:37,650
uploaded bytes and encrypted with a

453
00:22:35,160 --> 00:22:41,730
private key<font color="#CCCCCC"> of the key pair</font><font color="#E5E5E5"> that was</font>

454
00:22:37,650 --> 00:22:44,250
generated at previous steps also we need

455
00:22:41,730 --> 00:22:47,940
to<font color="#E5E5E5"> calculate the sum of the written</font><font color="#CCCCCC"> half</font>

456
00:22:44,250 --> 00:22:50,640
words of the firmware<font color="#E5E5E5"> at the fifth step</font>

457
00:22:47,940 --> 00:22:53,130
we<font color="#E5E5E5"> must send the signed hash so the boot</font>

458
00:22:50,640 --> 00:22:56,100
<font color="#CCCCCC">loader will check the data that was sent</font>

459
00:22:53,130 --> 00:22:59,070
before<font color="#E5E5E5"> if the if signature validation</font>

460
00:22:56,100 --> 00:23:01,260
fails you will<font color="#CCCCCC"> get brick again and you</font>

461
00:22:59,070 --> 00:23:04,110
cannot<font color="#E5E5E5"> just handle</font><font color="#CCCCCC"> bytes again at</font><font color="#E5E5E5"> this</font>

462
00:23:01,260 --> 00:23:07,410
moment<font color="#CCCCCC"> because the last</font><font color="#E5E5E5"> written address</font>

463
00:23:04,110 --> 00:23:11,250
variable along with<font color="#E5E5E5"> a written</font><font color="#CCCCCC"> word</font>

464
00:23:07,410 --> 00:23:14,070
checksum<font color="#CCCCCC"> were changed the sixth step</font>

465
00:23:11,250 --> 00:23:16,050
requires and in a calculated<font color="#E5E5E5"> checksum</font>

466
00:23:14,070 --> 00:23:19,560
<font color="#CCCCCC">and the physical address were the</font>

467
00:23:16,050 --> 00:23:21,270
firmware bytes were downloaded there

468
00:23:19,560 --> 00:23:23,909
were problems again

469
00:23:21,270 --> 00:23:26,160
<font color="#CCCCCC">because I couldn't</font><font color="#E5E5E5"> find each check for</font>

470
00:23:23,910 --> 00:23:30,330
the physical address field and this led

471
00:23:26,160 --> 00:23:32,970
into the bricked device again<font color="#E5E5E5"> only</font><font color="#CCCCCC"> after</font>

472
00:23:30,330 --> 00:23:35,550
<font color="#CCCCCC">we have captured the packet with this</font>

473
00:23:32,970 --> 00:23:37,560
command<font color="#E5E5E5"> I understood that this field</font>

474
00:23:35,550 --> 00:23:42,870
must contain<font color="#CCCCCC"> the start</font><font color="#E5E5E5"> physical address</font>

475
00:23:37,560 --> 00:23:44,820
<font color="#E5E5E5">and we made the second attempt finally</font>

476
00:23:42,870 --> 00:23:48,659
the current<font color="#E5E5E5"> firmware was successfully</font>

477
00:23:44,820 --> 00:23:51,139
downloaded we were happy sure but could

478
00:23:48,660 --> 00:23:53,670
<font color="#CCCCCC">I download some old firmware with all</font>

479
00:23:51,140 --> 00:23:57,840
vulnerabilities<font color="#E5E5E5"> that were successfully</font>

480
00:23:53,670 --> 00:24:02,250
used in<font color="#E5E5E5"> some attacks before</font><font color="#CCCCCC"> a little bit</font>

481
00:23:57,840 --> 00:24:06,419
later<font color="#CCCCCC"> I tried</font><font color="#E5E5E5"> I tried to do that then I</font>

482
00:24:02,250 --> 00:24:08,850
<font color="#E5E5E5">period some more problems first was the</font>

483
00:24:06,420 --> 00:24:10,800
bootloader checks that downloadable

484
00:24:08,850 --> 00:24:13,139
firmware would have the same<font color="#E5E5E5"> a greater</font>

485
00:24:10,800 --> 00:24:16,530
version number than in the<font color="#CCCCCC"> current</font>

486
00:24:13,140 --> 00:24:19,560
firmware<font color="#E5E5E5"> this check can</font><font color="#CCCCCC"> be skipped if</font>

487
00:24:16,530 --> 00:24:20,250
<font color="#E5E5E5">now physical access is</font><font color="#CCCCCC"> set but</font><font color="#E5E5E5"> it is not</font>

488
00:24:19,560 --> 00:24:23,429
possible

489
00:24:20,250 --> 00:24:25,950
for us but like<font color="#CCCCCC"> levander added the</font>

490
00:24:23,430 --> 00:24:29,580
availability to upload any firmware

491
00:24:25,950 --> 00:24:33,080
binary if<font color="#E5E5E5"> it's version is equal to F F F</font>

492
00:24:29,580 --> 00:24:35,429
F<font color="#E5E5E5"> money withdrawal was still a problem</font>

493
00:24:33,080 --> 00:24:38,429
<font color="#E5E5E5">encryption function was professionally</font>

494
00:24:35,430 --> 00:24:41,160
implemented<font color="#E5E5E5"> so I decided to fix the</font>

495
00:24:38,430 --> 00:24:44,340
secure command function so that<font color="#CCCCCC"> it</font><font color="#E5E5E5"> could</font>

496
00:24:41,160 --> 00:24:48,030
allow<font color="#E5E5E5"> it to execute any secure command</font>

497
00:24:44,340 --> 00:24:53,520
without any encryption<font color="#E5E5E5"> to do that you</font>

498
00:24:48,030 --> 00:24:57,950
just<font color="#CCCCCC"> need to make instruction with move</font>

499
00:24:53,520 --> 00:25:02,450
0 to<font color="#E5E5E5"> D 0 register and then return</font>

500
00:24:57,950 --> 00:25:05,280
instruction to sum up<font color="#E5E5E5"> we have an ability</font>

501
00:25:02,450 --> 00:25:08,760
not<font color="#CCCCCC"> to use the cassette or</font><font color="#E5E5E5"> tumblr</font>

502
00:25:05,280 --> 00:25:11,010
switching we can patch every byte in<font color="#CCCCCC"> the</font>

503
00:25:08,760 --> 00:25:14,070
firmware<font color="#E5E5E5"> and now the protection</font><font color="#CCCCCC"> level is</font>

504
00:25:11,010 --> 00:25:17,100
not a problem<font color="#CCCCCC"> on the slide</font><font color="#E5E5E5"> you can see</font>

505
00:25:14,070 --> 00:25:19,320
<font color="#CCCCCC">the</font><font color="#E5E5E5"> message change toggle switch a</font>

506
00:25:17,100 --> 00:25:23,189
bottom<font color="#E5E5E5"> cassette state within</font><font color="#CCCCCC"> 1 minute</font>

507
00:25:19,320 --> 00:25:28,770
left and right a dispenser protection

508
00:25:23,190 --> 00:25:32,010
configuration is physical so<font color="#E5E5E5"> there from</font>

509
00:25:28,770 --> 00:25:33,770
where was downloaded but it is<font color="#E5E5E5"> not as</font>

510
00:25:32,010 --> 00:25:36,270
<font color="#E5E5E5">interesting as money withdrawal</font>

511
00:25:33,770 --> 00:25:39,180
unfortunately it is<font color="#CCCCCC"> also a difficult</font>

512
00:25:36,270 --> 00:25:41,160
task<font color="#E5E5E5"> just look at the graph of the</font>

513
00:25:39,180 --> 00:25:45,300
function<font color="#E5E5E5"> that checks the withdrawal</font>

514
00:25:41,160 --> 00:25:49,140
packets validity is it<font color="#E5E5E5"> surely</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> the</font>

515
00:25:45,300 --> 00:25:51,930
compiler<font color="#CCCCCC"> it would have been easier as</font>

516
00:25:49,140 --> 00:25:54,870
the controller is<font color="#E5E5E5"> a part of the code</font>

517
00:25:51,930 --> 00:25:57,750
which makes bundles of banknotes<font color="#CCCCCC"> check</font>

518
00:25:54,870 --> 00:26:01,199
the hardware<font color="#E5E5E5"> and many are</font><font color="#CCCCCC"> the mechanisms</font>

519
00:25:57,750 --> 00:26:05,400
that can get<font color="#E5E5E5"> stuck it also checks</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> the</font>

520
00:26:01,200 --> 00:26:07,410
ATM<font color="#E5E5E5"> is tempered it was difficult to</font>

521
00:26:05,400 --> 00:26:10,470
<font color="#E5E5E5">analyze the</font><font color="#CCCCCC"> stack controller without</font><font color="#E5E5E5"> any</font>

522
00:26:07,410 --> 00:26:14,070
peripherals<font color="#E5E5E5"> in fact I didn't want to</font>

523
00:26:10,470 --> 00:26:17,220
<font color="#E5E5E5">analyze the controller at all one look</font>

524
00:26:14,070 --> 00:26:19,350
at this<font color="#E5E5E5"> function was enough to close</font>

525
00:26:17,220 --> 00:26:23,490
it's called in return to it again

526
00:26:19,350 --> 00:26:27,209
but after<font color="#CCCCCC"> analyzed</font><font color="#E5E5E5"> all other needed</font>

527
00:26:23,490 --> 00:26:30,120
functions<font color="#CCCCCC"> I had to return to the</font>

528
00:26:27,210 --> 00:26:32,760
controller<font color="#E5E5E5"> again the problem was not</font>

529
00:26:30,120 --> 00:26:33,879
only in its code size the<font color="#CCCCCC"> captured</font>

530
00:26:32,760 --> 00:26:39,760
traffic that can

531
00:26:33,880 --> 00:26:41,380
this command was<font color="#CCCCCC"> encrypted here</font><font color="#E5E5E5"> I want</font>

532
00:26:39,760 --> 00:26:44,169
to<font color="#E5E5E5"> say a few words</font><font color="#CCCCCC"> about this to</font>

533
00:26:41,380 --> 00:26:47,860
controller command itself<font color="#E5E5E5"> the first</font>

534
00:26:44,169 --> 00:26:50,679
thing you must specify<font color="#E5E5E5"> is</font><font color="#CCCCCC"> cassette</font>

535
00:26:47,860 --> 00:26:51,129
numbers<font color="#E5E5E5"> in which the banknotes are</font>

536
00:26:50,679 --> 00:26:53,710
stored

537
00:26:51,130 --> 00:26:57,539
<font color="#E5E5E5">cassette numbers have virtual ones and</font>

538
00:26:53,710 --> 00:27:00,820
they can be reassigned<font color="#E5E5E5"> by other command</font>

539
00:26:57,539 --> 00:27:03,450
but in our<font color="#E5E5E5"> case there are numbers were</font>

540
00:27:00,820 --> 00:27:08,950
equal<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the real cassettes location</font>

541
00:27:03,450 --> 00:27:10,929
<font color="#CCCCCC">first</font><font color="#E5E5E5"> second</font><font color="#CCCCCC"> third and</font><font color="#E5E5E5"> fourth in the</font>

542
00:27:08,950 --> 00:27:13,840
slide<font color="#CCCCCC"> you see that I asked the</font><font color="#E5E5E5"> first</font>

543
00:27:10,929 --> 00:27:15,789
cassette to give us five five<font color="#CCCCCC"> banknotes</font>

544
00:27:13,840 --> 00:27:18,639
if the cassette doesn't have the

545
00:27:15,789 --> 00:27:23,620
<font color="#CCCCCC">requirement amount of</font><font color="#E5E5E5"> banknotes the</font>

546
00:27:18,640 --> 00:27:25,600
dispenser will send you an error after<font color="#CCCCCC"> I</font>

547
00:27:23,620 --> 00:27:27,879
worked out how the stack controller

548
00:27:25,600 --> 00:27:30,789
works<font color="#CCCCCC"> I decided to perform the first</font>

549
00:27:27,880 --> 00:27:33,070
real withdrawal<font color="#CCCCCC"> I assembled the firmware</font>

550
00:27:30,789 --> 00:27:36,309
with the fixed secure command<font color="#E5E5E5"> function</font>

551
00:27:33,070 --> 00:27:37,870
which I have mentioned<font color="#CCCCCC"> before and</font>

552
00:27:36,309 --> 00:27:40,059
downloaded<font color="#CCCCCC"> the firmware into the</font>

553
00:27:37,870 --> 00:27:43,120
dispenser<font color="#E5E5E5"> and send the state controllers</font>

554
00:27:40,059 --> 00:27:47,379
<font color="#CCCCCC">withdraw command in response I received</font>

555
00:27:43,120 --> 00:27:49,299
message about<font color="#E5E5E5"> a hardware error there</font>

556
00:27:47,380 --> 00:27:52,059
were many versions of why that could

557
00:27:49,299 --> 00:27:56,230
happen<font color="#E5E5E5"> ranging from a malfunction of the</font>

558
00:27:52,059 --> 00:28:00,399
<font color="#E5E5E5">ATM to additional checks which I have</font>

559
00:27:56,230 --> 00:28:00,970
not found<font color="#CCCCCC"> that day we didn't get any</font>

560
00:28:00,400 --> 00:28:04,480
<font color="#E5E5E5">money</font>

561
00:28:00,970 --> 00:28:08,650
I was afraid also<font color="#E5E5E5"> that dispenser was</font>

562
00:28:04,480 --> 00:28:10,570
completely broken by me so a bit later I

563
00:28:08,650 --> 00:28:14,470
found<font color="#E5E5E5"> the clear main transport command</font>

564
00:28:10,570 --> 00:28:18,189
<font color="#E5E5E5">and I decided to use it</font><font color="#CCCCCC"> and just</font><font color="#E5E5E5"> because</font>

565
00:28:14,470 --> 00:28:19,960
<font color="#CCCCCC">its name looked interesting this command</font>

566
00:28:18,190 --> 00:28:24,190
<font color="#E5E5E5">is necessary for the money withdrawal</font>

567
00:28:19,960 --> 00:28:27,090
<font color="#CCCCCC">process to clean clear and</font><font color="#E5E5E5"> initialize</font>

568
00:28:24,190 --> 00:28:29,260
some<font color="#E5E5E5"> related things</font>

569
00:28:27,090 --> 00:28:33,520
unfortunately no real packet was

570
00:28:29,260 --> 00:28:38,110
captured so the only<font color="#CCCCCC"> Python hex dump</font><font color="#E5E5E5"> in</font>

571
00:28:33,520 --> 00:28:41,530
this<font color="#E5E5E5"> slide is presented after we made</font>

572
00:28:38,110 --> 00:28:43,600
the second withdrawal<font color="#CCCCCC"> trying using the</font>

573
00:28:41,530 --> 00:28:47,230
clear main transport<font color="#E5E5E5"> command we got the</font>

574
00:28:43,600 --> 00:28:47,779
money<font color="#E5E5E5"> after a long and painful sir shaft</font>

575
00:28:47,230 --> 00:28:49,759
and<font color="#CCCCCC"> doesn't</font>

576
00:28:47,779 --> 00:28:52,909
time's breaking controllers we managed

577
00:28:49,759 --> 00:28:55,070
<font color="#CCCCCC">to</font><font color="#E5E5E5"> make a withdrawal</font><font color="#CCCCCC"> as a result we have</font>

578
00:28:52,909 --> 00:28:57,409
<font color="#E5E5E5">succeeded to execute our code</font><font color="#CCCCCC"> bypassing</font>

579
00:28:55,070 --> 00:28:59,749
the encryption<font color="#E5E5E5"> worked out that</font>

580
00:28:57,409 --> 00:29:03,739
controller principles to understand how

581
00:28:59,749 --> 00:29:06,200
the ATM cash withdrawal cars and have

582
00:29:03,739 --> 00:29:10,749
also<font color="#E5E5E5"> learned how to initialize all</font><font color="#CCCCCC"> the</font>

583
00:29:06,200 --> 00:29:10,749
<font color="#E5E5E5">mechanics correctly</font><font color="#CCCCCC"> let's use the demo</font>

584
00:29:29,320 --> 00:29:36,968
it's not me it's some<font color="#CCCCCC"> kind</font><font color="#E5E5E5"> person</font><font color="#CCCCCC"> yeah</font>

585
00:29:39,460 --> 00:29:56,950
so that message<font color="#E5E5E5"> about</font><font color="#CCCCCC"> doubles the</font>

586
00:29:43,279 --> 00:30:04,099
cassette sorry for no sound it's<font color="#E5E5E5"> not</font>

587
00:29:56,950 --> 00:30:10,759
very important as you can see there is

588
00:30:04,099 --> 00:30:15,830
no<font color="#E5E5E5"> plastic plate place there because we</font>

589
00:30:10,759 --> 00:30:21,320
have taken<font color="#CCCCCC"> it for our tests</font><font color="#E5E5E5"> but in real</font>

590
00:30:15,830 --> 00:30:31,339
situation you have<font color="#CCCCCC"> to do some</font><font color="#E5E5E5"> drilled</font>

591
00:30:21,320 --> 00:30:34,218
box is<font color="#CCCCCC"> Alex I told</font><font color="#E5E5E5"> before so protection</font>

592
00:30:31,339 --> 00:30:40,908
level<font color="#CCCCCC"> it's physical and let's start who</font>

593
00:30:34,219 --> 00:30:43,340
<font color="#CCCCCC">are ready to hack it we take</font>

594
00:30:40,909 --> 00:30:53,929
cable from dispenser and connected<font color="#CCCCCC"> to</font>

595
00:30:43,340 --> 00:30:56,859
our laptop<font color="#E5E5E5"> we are going to the flower</font>

596
00:30:53,929 --> 00:30:56,859
Mart yeah

597
00:30:59,649 --> 00:31:05,469
and you can see in in bottom of this

598
00:31:04,309 --> 00:31:16,549
video

599
00:31:05,470 --> 00:31:21,619
timing for this attack at<font color="#E5E5E5"> this moment we</font>

600
00:31:16,549 --> 00:31:28,090
do a little bit increased to waiting a

601
00:31:21,619 --> 00:31:28,090
<font color="#E5E5E5">little</font><font color="#CCCCCC"> bit but timer is real</font>

602
00:31:29,529 --> 00:31:37,119
so<font color="#E5E5E5"> for where was uploaded now download</font>

603
00:31:34,879 --> 00:31:37,119
it

604
00:31:54,430 --> 00:32:07,240
so now it's<font color="#CCCCCC"> boots</font><font color="#E5E5E5"> from where - our new</font>

605
00:31:59,980 --> 00:32:11,650
<font color="#CCCCCC">firmware</font><font color="#E5E5E5"> fixed now I sent a clear mind</font>

606
00:32:07,240 --> 00:32:21,850
transfer command it<font color="#E5E5E5"> usually performs</font>

607
00:32:11,650 --> 00:32:27,570
<font color="#E5E5E5">only once at the start of</font><font color="#CCCCCC"> ATM so it</font>

608
00:32:21,850 --> 00:32:27,570
takes<font color="#E5E5E5"> the time to be finished</font>

609
00:32:41,950 --> 00:32:51,790
and now cash withdrawal<font color="#E5E5E5"> shuttle was</font>

610
00:32:47,890 --> 00:32:54,340
closed and then money was<font color="#E5E5E5"> taken five</font>

611
00:32:51,790 --> 00:33:00,550
banknotes<font color="#E5E5E5"> they are no real</font>

612
00:32:54,340 --> 00:33:01,209
it's a<font color="#E5E5E5"> NCR's and filthiest banknotes</font>

613
00:33:00,550 --> 00:33:13,260
<font color="#E5E5E5">yeah</font>

614
00:33:01,210 --> 00:33:13,260
and little promotion<font color="#E5E5E5"> time was 343 yeah</font>

615
00:33:15,810 --> 00:33:29,139
sorry so after we assured ourselves that

616
00:33:24,520 --> 00:33:31,690
vulnerability<font color="#E5E5E5"> is really dangerous</font><font color="#CCCCCC"> and</font>

617
00:33:29,140 --> 00:33:35,860
they tell<font color="#CCCCCC"> us to execute</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> bit</font><font color="#E5E5E5"> record and</font>

618
00:33:31,690 --> 00:33:39,450
to issue money<font color="#E5E5E5"> where the report was</font><font color="#CCCCCC"> sent</font>

619
00:33:35,860 --> 00:33:42,639
to NCR last year in<font color="#CCCCCC"> December and</font>

620
00:33:39,450 --> 00:33:45,370
research was done on<font color="#E5E5E5"> the basis of</font><font color="#CCCCCC"> s1</font>

621
00:33:42,640 --> 00:33:50,140
<font color="#E5E5E5">dispenser controller</font><font color="#CCCCCC"> but later it was</font>

622
00:33:45,370 --> 00:33:52,600
<font color="#CCCCCC">confirmed</font><font color="#E5E5E5"> for us to dispenser also the</font>

623
00:33:50,140 --> 00:33:56,020
presence of vulnerabilities was

624
00:33:52,600 --> 00:33:59,560
confirmed and they were fixed in the in

625
00:33:56,020 --> 00:34:02,200
the<font color="#E5E5E5"> February security fixes</font><font color="#CCCCCC"> as you see</font>

626
00:33:59,560 --> 00:34:08,620
there<font color="#CCCCCC"> are</font><font color="#E5E5E5"> two</font><font color="#CCCCCC"> CVE</font><font color="#E5E5E5"> numbers for these</font>

627
00:34:02,200 --> 00:34:12,220
vulnerabilities and yeah<font color="#E5E5E5"> also NCR issued</font>

628
00:34:08,620 --> 00:34:17,409
the white paper<font color="#CCCCCC"> related to this with</font>

629
00:34:12,219 --> 00:34:20,500
recommendations for<font color="#E5E5E5"> updating so these</font>

630
00:34:17,409 --> 00:34:25,299
are<font color="#CCCCCC"> our contacts</font><font color="#E5E5E5"> email feel free to send</font>

631
00:34:20,500 --> 00:34:28,120
us any<font color="#E5E5E5"> questions thank you for listening</font>

632
00:34:25,300 --> 00:34:29,639
<font color="#E5E5E5">and watching now we are ready to</font><font color="#CCCCCC"> answer</font>

633
00:34:28,120 --> 00:34:30,819
<font color="#CCCCCC">your questions</font>

634
00:34:29,639 --> 00:34:33,170
[Applause]

635
00:34:30,820 --> 00:34:35,550
[Music]

636
00:34:33,170 --> 00:34:45,820
[Applause]

637
00:34:35,550 --> 00:34:49,060
questions anyone hi<font color="#E5E5E5"> I were they happy to</font>

638
00:34:45,820 --> 00:34:53,860
hear<font color="#CCCCCC"> about this form from</font><font color="#E5E5E5"> NCR's</font>

639
00:34:49,060 --> 00:34:55,540
<font color="#CCCCCC">protected I'm sorry</font><font color="#E5E5E5"> please lipid</font><font color="#CCCCCC"> please</font>

640
00:34:53,860 --> 00:34:58,720
repeat<font color="#E5E5E5"> were they happy to hear about</font>

641
00:34:55,540 --> 00:35:03,460
<font color="#E5E5E5">this problem over there like</font><font color="#CCCCCC"> oh this</font><font color="#E5E5E5"> is</font>

642
00:34:58,720 --> 00:35:09,069
a bad<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> it's really wet ink but we</font>

643
00:35:03,460 --> 00:35:12,910
will wait wait for half year<font color="#E5E5E5"> two banks</font>

644
00:35:09,070 --> 00:35:14,620
<font color="#E5E5E5">with their updates and then we are able</font>

645
00:35:12,910 --> 00:35:22,089
<font color="#E5E5E5">to speak about it in public</font>

646
00:35:14,620 --> 00:35:28,390
yeah<font color="#E5E5E5"> okay thanks anyone else</font><font color="#CCCCCC"> with a</font>

647
00:35:22,090 --> 00:35:30,810
<font color="#E5E5E5">question well I guess this is it thank</font>

648
00:35:28,390 --> 00:35:35,089
you<font color="#CCCCCC"> very</font><font color="#E5E5E5"> much thank you</font>

649
00:35:30,810 --> 00:35:35,090
[Applause]

