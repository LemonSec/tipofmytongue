1
00:00:02,689 --> 00:00:09,600
okay good good morning everyone so and

2
00:00:06,779 --> 00:00:13,830
thank you very much for the Ferdie

3
00:00:09,600 --> 00:00:15,930
welcome we are to italian stefano so as

4
00:00:13,830 --> 00:00:18,839
you know all Italians are named Stefano

5
00:00:15,930 --> 00:00:20,730
and that's a very known fact and in fact

6
00:00:18,839 --> 00:00:22,619
Christopher o'mooney with another

7
00:00:20,730 --> 00:00:25,249
speaker and trainer here is not a real

8
00:00:22,619 --> 00:00:29,070
Italian because it's not called Stefan

9
00:00:25,249 --> 00:00:31,019
this is the two of us we try to fill in

10
00:00:29,070 --> 00:00:34,410
the blanks in stiffeners biography with

11
00:00:31,019 --> 00:00:37,589
a PhD comics comic about this

12
00:00:34,410 --> 00:00:40,349
Stefano is my PhD student at Politecnico

13
00:00:37,590 --> 00:00:42,150
and is the actual expert on what we are

14
00:00:40,350 --> 00:00:45,720
going to talk about I'm just pretending

15
00:00:42,150 --> 00:00:48,150
as all professors do so we are going to

16
00:00:45,720 --> 00:00:49,589
talk about Ken being this an outdoor

17
00:00:48,150 --> 00:00:52,739
conference we don't really need a lot of

18
00:00:49,590 --> 00:00:57,750
introduction but just as a way to get us

19
00:00:52,740 --> 00:01:00,360
started ken is the most used standard in

20
00:00:57,750 --> 00:01:03,510
the automotive world for own vehicle

21
00:01:00,360 --> 00:01:05,820
networks connecting all of the critical

22
00:01:03,510 --> 00:01:07,890
components on the vehicle and also most

23
00:01:05,820 --> 00:01:10,919
of the non so critical components which

24
00:01:07,890 --> 00:01:12,359
is part of the problem now of course if

25
00:01:10,920 --> 00:01:14,880
you are here there's an entire

26
00:01:12,359 --> 00:01:18,509
automotive village outside you know

27
00:01:14,880 --> 00:01:20,939
about the attacks and out on a vehicles

28
00:01:18,509 --> 00:01:23,819
here I have just put on two of the most

29
00:01:20,939 --> 00:01:25,318
famous but then you have tens and tens

30
00:01:23,819 --> 00:01:27,630
of colleagues that have worked on that

31
00:01:25,319 --> 00:01:31,409
just wanted to acknowledge mark Rogers

32
00:01:27,630 --> 00:01:33,979
work on Tesla and of course Charlie and

33
00:01:31,409 --> 00:01:40,590
Chris work on trying to kill journalists

34
00:01:33,979 --> 00:01:44,908
so the the question is however how is

35
00:01:40,590 --> 00:01:47,850
the CANbus connected to this type of

36
00:01:44,909 --> 00:01:51,139
attack and the reality is it is

37
00:01:47,850 --> 00:01:54,719
connected and it is not at the same time

38
00:01:51,139 --> 00:01:58,318
because basically what happens is not

39
00:01:54,719 --> 00:02:00,779
that can per se is attacked but that

40
00:01:58,319 --> 00:02:03,240
some of the characteristics of can that

41
00:02:00,779 --> 00:02:05,548
follow from the fact that it is meant to

42
00:02:03,240 --> 00:02:08,160
be on a trusted network and not

43
00:02:05,549 --> 00:02:12,230
connected to the outside world are used

44
00:02:08,160 --> 00:02:14,910
by colleagues in their attacks to

45
00:02:12,230 --> 00:02:17,060
perform attacks on the vehicle it

46
00:02:14,910 --> 00:02:19,680
so the fact that you can for instance

47
00:02:17,060 --> 00:02:22,170
transmit frames without being

48
00:02:19,680 --> 00:02:24,570
authenticated or the fact that you can

49
00:02:22,170 --> 00:02:27,570
broadcast messages on can and have them

50
00:02:24,570 --> 00:02:30,690
earned by all the connected devices of

51
00:02:27,570 --> 00:02:33,420
multi connected is use is used to

52
00:02:30,690 --> 00:02:35,970
perform an attack this research is not

53
00:02:33,420 --> 00:02:40,410
about that this research is about a

54
00:02:35,970 --> 00:02:45,900
weakness in can itself which is which is

55
00:02:40,410 --> 00:02:48,420
kind of a different angle to that there

56
00:02:45,900 --> 00:02:51,030
is an interesting part in this research

57
00:02:48,420 --> 00:02:53,700
so if you have seen the title the title

58
00:02:51,030 --> 00:02:56,640
is it's easier to break them to patch

59
00:02:53,700 --> 00:02:58,890
and patching this type of attacks is

60
00:02:56,640 --> 00:03:01,410
actually pretty difficult because at the

61
00:02:58,890 --> 00:03:05,130
moment what happens is that either you

62
00:03:01,410 --> 00:03:07,230
go the long route of trying to develop

63
00:03:05,130 --> 00:03:09,269
secure software for each of those issues

64
00:03:07,230 --> 00:03:12,929
and then trying to figure out a way

65
00:03:09,270 --> 00:03:16,530
around the lack of authentication and

66
00:03:12,930 --> 00:03:19,080
the lack of integrity of Ken aura you

67
00:03:16,530 --> 00:03:22,250
try to detect attacks and there's a

68
00:03:19,080 --> 00:03:24,810
number of startups and I also

69
00:03:22,250 --> 00:03:26,519
established automotive suppliers that

70
00:03:24,810 --> 00:03:29,160
have come up with different intrusion

71
00:03:26,519 --> 00:03:31,110
detection system we are not singling out

72
00:03:29,160 --> 00:03:34,590
these ones we just took a couple of

73
00:03:31,110 --> 00:03:38,910
images from famous from websites of

74
00:03:34,590 --> 00:03:41,550
famous vendors of ideas for automotive

75
00:03:38,910 --> 00:03:43,350
now intrusion detection is actually a

76
00:03:41,550 --> 00:03:46,470
type of technology that we know very

77
00:03:43,350 --> 00:03:48,480
well from the computer science and

78
00:03:46,470 --> 00:03:51,420
computer engineering word more than from

79
00:03:48,480 --> 00:03:53,820
the vehicle world it has been tried for

80
00:03:51,420 --> 00:03:56,820
a number of years actually when I was a

81
00:03:53,820 --> 00:03:58,410
Stefano's aged my PhD thesis was on

82
00:03:56,820 --> 00:04:00,480
machine learning for intrusion detection

83
00:03:58,410 --> 00:04:02,310
and guess what it didn't work back then

84
00:04:00,480 --> 00:04:05,488
but they didn't realize and they gave me

85
00:04:02,310 --> 00:04:08,730
my PhD are the same it doesn't work

86
00:04:05,489 --> 00:04:14,450
still now it's a very hard thing to do

87
00:04:08,730 --> 00:04:16,738
so in reality IDs for for automotive are

88
00:04:14,450 --> 00:04:18,750
basically an industrial secret so we

89
00:04:16,738 --> 00:04:21,298
don't know how these different companies

90
00:04:18,750 --> 00:04:24,000
approach it but if you think about it

91
00:04:21,298 --> 00:04:27,700
there's basically two or three ways to

92
00:04:24,000 --> 00:04:29,770
go about one way is to

93
00:04:27,700 --> 00:04:32,800
try to perform some sort of frequency

94
00:04:29,770 --> 00:04:34,810
based analysis can as some specific

95
00:04:32,800 --> 00:04:36,550
frequencies so you think that an

96
00:04:34,810 --> 00:04:40,450
attacker for instance if they are trying

97
00:04:36,550 --> 00:04:42,640
to flood the bus is going to perform

98
00:04:40,450 --> 00:04:44,530
some type of a some type of different

99
00:04:42,640 --> 00:04:48,640
frequency in the transmission of

100
00:04:44,530 --> 00:04:50,650
messages a second way which is very

101
00:04:48,640 --> 00:04:53,580
typical of intrusion detection systems

102
00:04:50,650 --> 00:04:56,049
in general not just on can easy-to-use

103
00:04:53,580 --> 00:04:58,570
specifications there is a set of rules

104
00:04:56,050 --> 00:05:00,850
that apply to data messages you try to

105
00:04:58,570 --> 00:05:03,490
define them as strictly as possible for

106
00:05:00,850 --> 00:05:05,950
the specific vehicle the idiot the IDS

107
00:05:03,490 --> 00:05:08,770
or IPS is supposed to work on entry try

108
00:05:05,950 --> 00:05:12,190
to enforce those rules in practice you

109
00:05:08,770 --> 00:05:15,039
try to build the protocol specifications

110
00:05:12,190 --> 00:05:19,330
on top of ten which only has transport

111
00:05:15,040 --> 00:05:21,640
specifications this is a potentially

112
00:05:19,330 --> 00:05:23,200
dynamic because potentially these things

113
00:05:21,640 --> 00:05:25,120
depend on the previous message history

114
00:05:23,200 --> 00:05:27,670
depends on the on which state the

115
00:05:25,120 --> 00:05:30,970
vehicle is in so you can build this as

116
00:05:27,670 --> 00:05:33,940
complex as you want and make it fail as

117
00:05:30,970 --> 00:05:36,640
bad as badly as you want basically but

118
00:05:33,940 --> 00:05:38,830
this is one approach the final approach

119
00:05:36,640 --> 00:05:40,390
that you can find mostly I think in

120
00:05:38,830 --> 00:05:42,940
academia I don't really think that

121
00:05:40,390 --> 00:05:45,640
there's much application of these in the

122
00:05:42,940 --> 00:05:47,080
real world of automotive intrusion

123
00:05:45,640 --> 00:05:48,520
detection but I would be personally

124
00:05:47,080 --> 00:05:50,620
interested because machine learning for

125
00:05:48,520 --> 00:05:54,729
intrusion detection has long been one of

126
00:05:50,620 --> 00:06:00,040
the things that I do machine learning is

127
00:05:54,730 --> 00:06:01,390
by all means very similar to this with

128
00:06:00,040 --> 00:06:02,920
the difference that you are trying to

129
00:06:01,390 --> 00:06:05,080
have the machine build it for you

130
00:06:02,920 --> 00:06:09,520
that's that's the difference but from

131
00:06:05,080 --> 00:06:11,800
the point of view of the concept most of

132
00:06:09,520 --> 00:06:17,109
what you can do is either frequency

133
00:06:11,800 --> 00:06:22,600
based or based on specifications now how

134
00:06:17,110 --> 00:06:25,180
do we evade such a thing now if we have

135
00:06:22,600 --> 00:06:27,280
a specification based the ideas the

136
00:06:25,180 --> 00:06:30,670
general way to evade that is to try to

137
00:06:27,280 --> 00:06:34,030
comply with the rules you try to create

138
00:06:30,670 --> 00:06:36,910
messages that after all are realistic

139
00:06:34,030 --> 00:06:40,030
messages this is not hard to do since

140
00:06:36,910 --> 00:06:41,090
you can pretend to be another issue of

141
00:06:40,030 --> 00:06:43,729
the vehicle

142
00:06:41,090 --> 00:06:46,130
you can generally create messages that

143
00:06:43,730 --> 00:06:48,260
can at the same time wreak havoc on the

144
00:06:46,130 --> 00:06:50,300
vehicle and be perfectly valuable of

145
00:06:48,260 --> 00:06:52,250
course this requires the attacker to

146
00:06:50,300 --> 00:06:55,550
have a deeper understanding of the

147
00:06:52,250 --> 00:06:57,980
vehicle so putting an IDs like this

148
00:06:55,550 --> 00:07:00,880
inside the vehicle kind of raises the

149
00:06:57,980 --> 00:07:03,860
bar but not really that much

150
00:07:00,880 --> 00:07:06,800
frequency-based is can be a little bit

151
00:07:03,860 --> 00:07:09,590
trickier because some attacks really

152
00:07:06,800 --> 00:07:11,840
require the attacker to change or to

153
00:07:09,590 --> 00:07:14,479
send more frequent messages than you

154
00:07:11,840 --> 00:07:16,729
would think but you can think of a

155
00:07:14,479 --> 00:07:19,909
number of attacks that can comply with

156
00:07:16,729 --> 00:07:22,789
standard frequencies in the case of

157
00:07:19,910 --> 00:07:25,550
machine learning there is an entire set

158
00:07:22,790 --> 00:07:27,680
of machine learning research dedicated

159
00:07:25,550 --> 00:07:29,960
to support mimicry attacks attacks where

160
00:07:27,680 --> 00:07:33,080
you try to generate an attack that is

161
00:07:29,960 --> 00:07:35,630
sufficiently similar to normal behavior

162
00:07:33,080 --> 00:07:37,729
of the system so that it can trick a

163
00:07:35,630 --> 00:07:39,290
machine learning intrusion detector this

164
00:07:37,729 --> 00:07:42,530
is not something new it's something that

165
00:07:39,290 --> 00:07:47,630
we've known since the eighties so it's

166
00:07:42,530 --> 00:07:50,780
basically as old as me the perfect way

167
00:07:47,630 --> 00:07:52,760
to do this though is to actually go and

168
00:07:50,780 --> 00:07:54,909
manipulate one of the frames that has

169
00:07:52,760 --> 00:07:58,270
been actually generated by an ECU

170
00:07:54,910 --> 00:08:01,850
because if you can do this you are

171
00:07:58,270 --> 00:08:06,469
automatically matching all of these all

172
00:08:01,850 --> 00:08:08,990
of these possibilities for evading and

173
00:08:06,470 --> 00:08:11,990
ideas if you can just manipulate frames

174
00:08:08,990 --> 00:08:14,450
on the bus and you do so without

175
00:08:11,990 --> 00:08:17,570
egregiously violating specifications of

176
00:08:14,450 --> 00:08:20,450
course you can basically fly below the

177
00:08:17,570 --> 00:08:24,289
radar of most approaches to intrusion

178
00:08:20,450 --> 00:08:27,580
detection so we started thinking about

179
00:08:24,289 --> 00:08:32,809
this and we started thinking about how

180
00:08:27,580 --> 00:08:34,458
the can bus works so I of course I would

181
00:08:32,809 --> 00:08:37,369
say that probably many of the people

182
00:08:34,458 --> 00:08:43,010
here already know but just as a recall

183
00:08:37,370 --> 00:08:46,250
for the few that may not know you have

184
00:08:43,010 --> 00:08:49,819
inside each ECU the controller that has

185
00:08:46,250 --> 00:08:51,650
to send some data they can controller

186
00:08:49,820 --> 00:08:53,420
that implements the kind specification

187
00:08:51,650 --> 00:08:55,040
and endles the errors on the canvas is

188
00:08:53,420 --> 00:08:57,890
critical to our attack

189
00:08:55,040 --> 00:09:00,680
and then the transceiver just translates

190
00:08:57,890 --> 00:09:02,990
whatever needs to be sent into the

191
00:09:00,680 --> 00:09:05,270
electrical signal to send on the can now

192
00:09:02,990 --> 00:09:07,970
the data frames on the cane are

193
00:09:05,270 --> 00:09:09,980
something like this will not dive in

194
00:09:07,970 --> 00:09:11,690
depth also because a stiffener will

195
00:09:09,980 --> 00:09:14,480
tease you with the meaning of each of

196
00:09:11,690 --> 00:09:16,490
the single fields the things that are

197
00:09:14,480 --> 00:09:19,160
important for me at the moment are the

198
00:09:16,490 --> 00:09:22,220
existence of the arbitration field here

199
00:09:19,160 --> 00:09:24,770
at the beginning of the message and the

200
00:09:22,220 --> 00:09:31,990
data field here is just one bite but the

201
00:09:24,770 --> 00:09:35,810
can is actually 64 64 bits 8 bytes the

202
00:09:31,990 --> 00:09:40,760
the bus of the can is created with

203
00:09:35,810 --> 00:09:43,849
virtual lines and transmits bytes by PI

204
00:09:40,760 --> 00:09:50,360
power difference so basically when you

205
00:09:43,850 --> 00:09:52,400
send a 0 this 0 creates a power

206
00:09:50,360 --> 00:09:54,200
difference between the 2 lines of the

207
00:09:52,400 --> 00:09:56,569
Ken when you send the one to send a 1

208
00:09:54,200 --> 00:10:00,560
the two lines of the can have the same

209
00:09:56,570 --> 00:10:03,710
voltage this means two things the first

210
00:10:00,560 --> 00:10:06,520
thing is that one of the bits is

211
00:10:03,710 --> 00:10:10,540
dominant and the other is recessive and

212
00:10:06,520 --> 00:10:14,329
so one of the bits overrides the other

213
00:10:10,540 --> 00:10:18,280
the other thing is that basically since

214
00:10:14,330 --> 00:10:24,650
all the issues are sending their

215
00:10:18,280 --> 00:10:28,699
identifiers as arbitration field any if

216
00:10:24,650 --> 00:10:30,740
you that finds that it's reading on the

217
00:10:28,700 --> 00:10:34,010
bus something different than what is

218
00:10:30,740 --> 00:10:36,800
transmitting figures out that it has

219
00:10:34,010 --> 00:10:42,040
lost arbitration it has lost the right

220
00:10:36,800 --> 00:10:46,339
to systems this mechanism works

221
00:10:42,040 --> 00:10:50,930
generally well however of course errors

222
00:10:46,340 --> 00:10:52,700
can occur sometimes an ECU can read the

223
00:10:50,930 --> 00:10:55,310
something that is different at what it

224
00:10:52,700 --> 00:10:57,790
has written on the bus for some other

225
00:10:55,310 --> 00:11:00,500
reason usually the reasons are

226
00:10:57,790 --> 00:11:02,540
transceiver failure or there has been

227
00:11:00,500 --> 00:11:03,770
some channel noise because of course

228
00:11:02,540 --> 00:11:05,060
it's a vehicle it's running around

229
00:11:03,770 --> 00:11:08,279
others

230
00:11:05,060 --> 00:11:10,560
the power is not necessarily as stable

231
00:11:08,279 --> 00:11:12,480
we would want it to be there can be

232
00:11:10,560 --> 00:11:14,399
another faulty device that is doing

233
00:11:12,480 --> 00:11:17,610
something weird there's a number of

234
00:11:14,399 --> 00:11:20,129
reasons for that and in this cases what

235
00:11:17,610 --> 00:11:22,680
happens is that the device that is

236
00:11:20,129 --> 00:11:25,079
transmitting says hey this is this is

237
00:11:22,680 --> 00:11:28,319
not correct there's something wrong by

238
00:11:25,079 --> 00:11:34,559
sending six zeros which is an error

239
00:11:28,319 --> 00:11:36,660
frame so what happens is that if you are

240
00:11:34,559 --> 00:11:38,670
designing a device or if you are

241
00:11:36,660 --> 00:11:41,189
designing the protocol really you need

242
00:11:38,670 --> 00:11:42,990
to figure out a way so that because if a

243
00:11:41,189 --> 00:11:46,189
device has received a fault and this

244
00:11:42,990 --> 00:11:48,809
fault is just transient it will want to

245
00:11:46,189 --> 00:11:51,180
but the transceiver of the device could

246
00:11:48,809 --> 00:11:53,579
be broken if the transceiver of the

247
00:11:51,180 --> 00:11:56,758
device is broken for some reason or the

248
00:11:53,579 --> 00:12:00,029
devices some other fault you don't want

249
00:11:56,759 --> 00:12:03,420
it to keep trying to talk on the bus

250
00:12:00,029 --> 00:12:06,230
which is shared every single time so you

251
00:12:03,420 --> 00:12:10,800
have an error management mechanism and

252
00:12:06,230 --> 00:12:13,439
basically every time that the ECU find

253
00:12:10,800 --> 00:12:16,889
that it has sent something in error we

254
00:12:13,439 --> 00:12:19,709
said it sends the six zeros as an error

255
00:12:16,889 --> 00:12:24,509
code now it doesn't do this

256
00:12:19,709 --> 00:12:27,628
indefinitely the ECU has a counter this

257
00:12:24,509 --> 00:12:30,689
counter is increased by eight every time

258
00:12:27,629 --> 00:12:33,870
there is an error decreased by one every

259
00:12:30,689 --> 00:12:41,399
time a transmission is successful if the

260
00:12:33,870 --> 00:12:44,759
counter exceeds 127 the issue changes it

261
00:12:41,399 --> 00:12:48,269
changes its behavior becoming error

262
00:12:44,759 --> 00:12:52,679
passive because it's basically in a

263
00:12:48,269 --> 00:12:57,269
state where it's starting to think this

264
00:12:52,679 --> 00:13:02,059
is probably this is useful if the

265
00:12:57,269 --> 00:13:06,629
counter exceeds 255 so if this issue

266
00:13:02,059 --> 00:13:10,259
exceeds 255 it actually shuts itself of

267
00:13:06,629 --> 00:13:13,139
the bus and this means that it doesn't

268
00:13:10,259 --> 00:13:15,929
talk anymore until it's either receptor

269
00:13:13,139 --> 00:13:20,459
turn it off and on again and computer

270
00:13:15,929 --> 00:13:22,079
scientists world aura it detects the 11

271
00:13:20,459 --> 00:13:24,630
sequential ones which

272
00:13:22,080 --> 00:13:30,110
means that the bus is transmitting free

273
00:13:24,630 --> 00:13:33,240
basically 128 times for the bit time so

274
00:13:30,110 --> 00:13:39,590
evidently there's not so much noise it

275
00:13:33,240 --> 00:13:42,630
can think to start talking again now

276
00:13:39,590 --> 00:13:44,580
once they have said all this which is

277
00:13:42,630 --> 00:13:45,330
all the theory which professors are good

278
00:13:44,580 --> 00:13:48,420
at

279
00:13:45,330 --> 00:13:51,360
let's see what we can do to try to

280
00:13:48,420 --> 00:13:53,880
exploit this behavior and that makes

281
00:13:51,360 --> 00:13:58,200
something bad happen how do we know okay

282
00:13:53,880 --> 00:14:01,020
so at this point we have a way to shut

283
00:13:58,200 --> 00:14:02,700
the target issue of the network and I

284
00:14:01,020 --> 00:14:04,579
did and after it's shutting the issue of

285
00:14:02,700 --> 00:14:07,860
the network we would be able to actually

286
00:14:04,580 --> 00:14:10,230
spoof there its messages without having

287
00:14:07,860 --> 00:14:11,640
that is you writing something different

288
00:14:10,230 --> 00:14:14,700
than what we want to at the same time

289
00:14:11,640 --> 00:14:17,490
right to do this specifically we're

290
00:14:14,700 --> 00:14:19,380
going to abuse the both the error

291
00:14:17,490 --> 00:14:23,070
handling both the full confinement rules

292
00:14:19,380 --> 00:14:26,010
so while this you is writing its message

293
00:14:23,070 --> 00:14:28,320
we can actually so this you well it's

294
00:14:26,010 --> 00:14:32,040
writing its message is assuming that she

295
00:14:28,320 --> 00:14:34,350
heat is the only one that can ride on

296
00:14:32,040 --> 00:14:38,400
the bus right so if there's an error

297
00:14:34,350 --> 00:14:40,410
it's done by itself but actually the

298
00:14:38,400 --> 00:14:41,790
issue is not the only thing that can

299
00:14:40,410 --> 00:14:43,650
write on the bus we're on a shared bus

300
00:14:41,790 --> 00:14:45,750
we can do whatever we want all the

301
00:14:43,650 --> 00:14:47,250
others all the compliant issues are not

302
00:14:45,750 --> 00:14:49,440
going to write because they know they

303
00:14:47,250 --> 00:14:51,540
lost arbitration but if we are a

304
00:14:49,440 --> 00:14:54,300
malicious I'm sorry I'm an issues

305
00:14:51,540 --> 00:14:56,490
attacker what we can do is just wait for

306
00:14:54,300 --> 00:14:58,770
these huge us and it's our attrition

307
00:14:56,490 --> 00:15:03,240
field wait for this you to win there

308
00:14:58,770 --> 00:15:05,970
betrayin and then during the sending of

309
00:15:03,240 --> 00:15:07,860
the data for example find the one we

310
00:15:05,970 --> 00:15:09,660
know that we can overwrite once with 0s

311
00:15:07,860 --> 00:15:12,570
on the bus so find the one and at this

312
00:15:09,660 --> 00:15:15,240
point we can be the ones flipping that

313
00:15:12,570 --> 00:15:19,260
bit to or from a 1 to a 0 in this way

314
00:15:15,240 --> 00:15:24,120
this you will think that itself was the

315
00:15:19,260 --> 00:15:26,220
cause of the error right and will start

316
00:15:24,120 --> 00:15:28,920
fail and will start sending ever metal

317
00:15:26,220 --> 00:15:32,610
messages so the whole complete attack is

318
00:15:28,920 --> 00:15:34,740
pretty easy we can think of defeating

319
00:15:32,610 --> 00:15:35,820
dividing it in five ways the first thing

320
00:15:34,740 --> 00:15:37,740
is we have to discover

321
00:15:35,820 --> 00:15:39,480
ladies of the issue that we want to

322
00:15:37,740 --> 00:15:41,310
attack and this can be done by reverse

323
00:15:39,480 --> 00:15:43,410
engineering for example I wish I'm sure

324
00:15:41,310 --> 00:15:45,750
that the car hacking village here

325
00:15:43,410 --> 00:15:47,610
somehow teaches you I've never been

326
00:15:45,750 --> 00:15:49,440
there yet but I assume that this may be

327
00:15:47,610 --> 00:15:51,870
something that you can do trying to

328
00:15:49,440 --> 00:15:54,180
understand how an ID is related to an

329
00:15:51,870 --> 00:15:56,670
issue or not now that you know that the

330
00:15:54,180 --> 00:15:59,540
idea which what ID you are searching for

331
00:15:56,670 --> 00:16:02,310
you have to wait for the ad on the bus

332
00:15:59,540 --> 00:16:04,770
so you just wait for it and search for

333
00:16:02,310 --> 00:16:08,099
the ID to come up and once the issue

334
00:16:04,770 --> 00:16:10,470
wins the arbitration at this point you

335
00:16:08,100 --> 00:16:12,630
have to find the recessive bit in the

336
00:16:10,470 --> 00:16:15,900
packet you can use whatever recessive

337
00:16:12,630 --> 00:16:17,790
bitch you wanders a lot of them and can

338
00:16:15,900 --> 00:16:21,209
implements a bit stuffing so after five

339
00:16:17,790 --> 00:16:22,410
bits of a polarity you will always have

340
00:16:21,210 --> 00:16:25,080
one of the other way or the other

341
00:16:22,410 --> 00:16:28,890
polarity so you're sure you can find a

342
00:16:25,080 --> 00:16:32,010
one for comfort we use this year see the

343
00:16:28,890 --> 00:16:35,010
limiter which is by definition one so we

344
00:16:32,010 --> 00:16:37,410
wait for that and we flip that bit we

345
00:16:35,010 --> 00:16:39,390
change it with a zero and at this point

346
00:16:37,410 --> 00:16:41,579
which we go yellow now this specific

347
00:16:39,390 --> 00:16:43,350
level has definite spin before it

348
00:16:41,580 --> 00:16:46,290
increases the counter and this specific

349
00:16:43,350 --> 00:16:49,560
level increases the counter of eight so

350
00:16:46,290 --> 00:16:52,890
if we do this for 32 times these you is

351
00:16:49,560 --> 00:16:55,170
off the network sounds pretty easy it is

352
00:16:52,890 --> 00:16:57,689
pretty easy we try to implement it both

353
00:16:55,170 --> 00:17:00,180
on our test bed in lab so we have a

354
00:16:57,690 --> 00:17:02,790
contact which is USB to can interface

355
00:17:00,180 --> 00:17:05,780
which is our victim the campus is that

356
00:17:02,790 --> 00:17:08,730
beautiful bluish thing on the breadboard

357
00:17:05,780 --> 00:17:10,589
then we have a scan to which we just

358
00:17:08,730 --> 00:17:13,589
used to detect that this you actually

359
00:17:10,589 --> 00:17:16,319
dialed and then there's the attacker the

360
00:17:13,589 --> 00:17:18,839
attacker is just a simple Arduino with

361
00:17:16,319 --> 00:17:20,250
not a traditional controller so you can

362
00:17:18,839 --> 00:17:22,530
bike and controllers further we know

363
00:17:20,250 --> 00:17:25,829
they're kinda cheap they cost like nine

364
00:17:22,530 --> 00:17:29,520
euros but you can choose that because

365
00:17:25,829 --> 00:17:32,100
you don't want the controller to handle

366
00:17:29,520 --> 00:17:35,810
arrows so you have to buy a 10

367
00:17:32,100 --> 00:17:38,520
transceiver which is that thing there

368
00:17:35,810 --> 00:17:41,250
which is a few small and the only thing

369
00:17:38,520 --> 00:17:44,040
it does is translating the bits into

370
00:17:41,250 --> 00:17:46,500
electric electric signals all the can

371
00:17:44,040 --> 00:17:49,770
controller is done inside yet we know

372
00:17:46,500 --> 00:17:51,750
via software we

373
00:17:49,770 --> 00:17:53,430
a couple of experiments on this we

374
00:17:51,750 --> 00:17:56,040
wanted to be sure we were able to read

375
00:17:53,430 --> 00:17:59,910
everything on the bus without losing

376
00:17:56,040 --> 00:18:02,879
bits so we started for 24 hour for 24 24

377
00:17:59,910 --> 00:18:05,790
hours sorry and we sent about 9 million

378
00:18:02,880 --> 00:18:07,020
frames the accuracy was definitely high

379
00:18:05,790 --> 00:18:08,790
so we were sure we were able to

380
00:18:07,020 --> 00:18:11,490
understand what was actually what was

381
00:18:08,790 --> 00:18:11,940
happening on the but on the bus bit by

382
00:18:11,490 --> 00:18:14,400
bit

383
00:18:11,940 --> 00:18:16,040
but then obviously it's not funny to

384
00:18:14,400 --> 00:18:18,780
implement the actual attack on the

385
00:18:16,040 --> 00:18:22,470
testbed so we did it on a 1 an Alfa

386
00:18:18,780 --> 00:18:24,030
Giulietta the whole thing was first

387
00:18:22,470 --> 00:18:25,620
decide which for what we want to attack

388
00:18:24,030 --> 00:18:28,020
and we decided to tie the parking sensor

389
00:18:25,620 --> 00:18:29,489
module because the arpeggiator was ours

390
00:18:28,020 --> 00:18:31,020
so we wanted to be sure we didn't break

391
00:18:29,490 --> 00:18:33,680
anything that was disruptive for the

392
00:18:31,020 --> 00:18:36,150
driving or you had to explain to the

393
00:18:33,680 --> 00:18:37,650
instrument insurance why you know you

394
00:18:36,150 --> 00:18:39,780
break something

395
00:18:37,650 --> 00:18:42,120
anyway we choose the parking sensor

396
00:18:39,780 --> 00:18:45,600
module which is not disruptive and at

397
00:18:42,120 --> 00:18:48,689
this point we connected the I can't act

398
00:18:45,600 --> 00:18:51,800
in a computer to the obd2 port and we

399
00:18:48,690 --> 00:18:54,180
started dumping data searching for dat

400
00:18:51,800 --> 00:18:56,220
to search for data what we did was just

401
00:18:54,180 --> 00:18:58,470
getting closer and further away from the

402
00:18:56,220 --> 00:19:00,450
car from the sensors of the car up until

403
00:18:58,470 --> 00:19:03,450
we saw the data changing of a specific

404
00:19:00,450 --> 00:19:06,090
ID and we found it so this ID at this

405
00:19:03,450 --> 00:19:09,720
point we can implement the attack the

406
00:19:06,090 --> 00:19:12,659
attack is again pretty easy this is just

407
00:19:09,720 --> 00:19:15,710
a demo video I hope it starts if it

408
00:19:12,660 --> 00:19:15,710
doesn't I have it somewhere else

409
00:19:17,690 --> 00:19:22,980
so basically you just we just wanted to

410
00:19:20,790 --> 00:19:26,460
make sure that the parking search for

411
00:19:22,980 --> 00:19:32,820
module was working before the attack

412
00:19:26,460 --> 00:19:35,580
started and it does because if we get to

413
00:19:32,820 --> 00:19:36,990
the reverse gear D parking sensor module

414
00:19:35,580 --> 00:19:40,379
starts beeping and telling us that

415
00:19:36,990 --> 00:19:47,600
there's a problem now if we just connect

416
00:19:40,380 --> 00:19:47,600
the Arduino to the 2d bus

417
00:19:51,150 --> 00:19:55,710
I could have made it like Cooper but

418
00:19:53,880 --> 00:19:58,050
yeah the point is that in the second we

419
00:19:55,710 --> 00:20:04,320
connect the Arduino to the bus the

420
00:19:58,050 --> 00:20:06,659
parking sensor module dies and it stops

421
00:20:04,320 --> 00:20:08,220
working even if we try to move it and up

422
00:20:06,660 --> 00:20:10,230
until the Arduino is there it won't

423
00:20:08,220 --> 00:20:12,000
start again we won't be able to use it

424
00:20:10,230 --> 00:20:15,300
now obviously the parking sensor module

425
00:20:12,000 --> 00:20:16,830
is not a big trap but you can imagine

426
00:20:15,300 --> 00:20:19,290
that this thing in the same as that way

427
00:20:16,830 --> 00:20:24,720
works for every single this you on the

428
00:20:19,290 --> 00:20:26,760
bus ok now in just as just as a side

429
00:20:24,720 --> 00:20:29,250
note this is implemented with the

430
00:20:26,760 --> 00:20:31,350
arduino from the outside just to show it

431
00:20:29,250 --> 00:20:33,300
but of course it could be implemented

432
00:20:31,350 --> 00:20:35,129
with the transceiver of another ECU yeah

433
00:20:33,300 --> 00:20:38,610
what control what we wanted to do was

434
00:20:35,130 --> 00:20:40,760
prove that a cheap device can be used to

435
00:20:38,610 --> 00:20:43,199
but that it can be attacked to the bus

436
00:20:40,760 --> 00:20:45,420
and you don't even need a lot of money

437
00:20:43,200 --> 00:20:47,520
or a really complicated thing that reads

438
00:20:45,420 --> 00:20:49,530
bit by bit it's it's the the can

439
00:20:47,520 --> 00:20:51,870
controller issues sorry the can

440
00:20:49,530 --> 00:20:54,240
frequency is low enough that you don't

441
00:20:51,870 --> 00:21:00,178
really need that much power now at this

442
00:20:54,240 --> 00:21:03,179
point okay at this point the real

443
00:21:00,179 --> 00:21:05,309
question here is is it preventable

444
00:21:03,179 --> 00:21:07,290
because we the attack has been proven

445
00:21:05,309 --> 00:21:10,230
possible we want to know if we find a

446
00:21:07,290 --> 00:21:12,240
way to detect it specifically we would

447
00:21:10,230 --> 00:21:14,820
like to prevent it and the answer is no

448
00:21:12,240 --> 00:21:16,470
we cannot prevent it sadly which is the

449
00:21:14,820 --> 00:21:18,000
reason for the beginning of the talk the

450
00:21:16,470 --> 00:21:19,980
name of the talk which is it's easier to

451
00:21:18,000 --> 00:21:21,570
breathe in the patch you can truly patch

452
00:21:19,980 --> 00:21:24,900
everything and the reason for this in

453
00:21:21,570 --> 00:21:27,149
this specific case is that the attack is

454
00:21:24,900 --> 00:21:28,860
based on the protocol specifications so

455
00:21:27,150 --> 00:21:31,110
we can't really distinguish between an

456
00:21:28,860 --> 00:21:34,139
actual ECU failure or the attack because

457
00:21:31,110 --> 00:21:35,699
they behave in the same exact way we

458
00:21:34,140 --> 00:21:38,880
also thought about trying to like

459
00:21:35,700 --> 00:21:40,500
retrieve logs to distinguish between

460
00:21:38,880 --> 00:21:42,990
like to make a machine learning

461
00:21:40,500 --> 00:21:46,260
algorithm distinguish between an actual

462
00:21:42,990 --> 00:21:48,420
ever or the attack but apparently these

463
00:21:46,260 --> 00:21:51,150
logs that do not exist and I won't be

464
00:21:48,420 --> 00:21:52,559
able to take an issue connected to a bus

465
00:21:51,150 --> 00:21:55,410
and wait for the 5 year for it to

466
00:21:52,559 --> 00:21:58,080
failure to fail like and then a certain

467
00:21:55,410 --> 00:22:00,510
point have unavailable log so we weren't

468
00:21:58,080 --> 00:22:03,928
able to use anything but the good thing

469
00:22:00,510 --> 00:22:04,950
about this is that a simple begging as a

470
00:22:03,929 --> 00:22:07,800
stable explainer to begin

471
00:22:04,950 --> 00:22:11,840
we have two different scenarios for this

472
00:22:07,800 --> 00:22:14,129
stuff no into that this the first one is

473
00:22:11,840 --> 00:22:16,260
making this attack for the sake of

474
00:22:14,130 --> 00:22:17,550
fusing it like the goal of the attack is

475
00:22:16,260 --> 00:22:19,440
is implementing the attack for example

476
00:22:17,550 --> 00:22:21,780
in a ransomware and I read somewhere you

477
00:22:19,440 --> 00:22:23,340
can imagine you have hacked into the

478
00:22:21,780 --> 00:22:25,379
infotainment system of the car you say

479
00:22:23,340 --> 00:22:27,179
hey pay up and at the same time you

480
00:22:25,380 --> 00:22:30,300
connect to the can't go to the chem bus

481
00:22:27,180 --> 00:22:32,670
and you delete the messages from the key

482
00:22:30,300 --> 00:22:35,040
fob for example to the engine so the car

483
00:22:32,670 --> 00:22:37,110
cannot start so this we can't avoid it

484
00:22:35,040 --> 00:22:39,030
it's impossible at least not on the can

485
00:22:37,110 --> 00:22:41,370
level obviously you will we hope you're

486
00:22:39,030 --> 00:22:43,860
able to avoid this by not implementing

487
00:22:41,370 --> 00:22:46,649
something broken on the infotainment

488
00:22:43,860 --> 00:22:48,120
system but this said the second attack

489
00:22:46,650 --> 00:22:50,940
scenario it's more interesting for us

490
00:22:48,120 --> 00:22:54,659
which is what if the attacker wants to

491
00:22:50,940 --> 00:22:56,220
use in this attack to dodge the

492
00:22:54,660 --> 00:22:59,420
intrusion detection systems that

493
00:22:56,220 --> 00:23:03,180
represented before frequency and and

494
00:22:59,420 --> 00:23:05,520
payloads are both easier to a boil as an

495
00:23:03,180 --> 00:23:07,380
intrusion detection system if we can

496
00:23:05,520 --> 00:23:12,930
shut down the issue that is talking and

497
00:23:07,380 --> 00:23:15,390
just be as ndon on the bus right so this

498
00:23:12,930 --> 00:23:17,220
is preventable this is detectable at

499
00:23:15,390 --> 00:23:19,650
least and what we might managed to do

500
00:23:17,220 --> 00:23:21,390
was create a device which connects to

501
00:23:19,650 --> 00:23:23,640
the bot to divert to the bus without

502
00:23:21,390 --> 00:23:26,760
having to modify anything else but the

503
00:23:23,640 --> 00:23:29,520
device and read the data that are

504
00:23:26,760 --> 00:23:31,890
passing on the bus and try to understand

505
00:23:29,520 --> 00:23:34,290
how the counters of each ECU are

506
00:23:31,890 --> 00:23:36,840
increasing due to what is passing on the

507
00:23:34,290 --> 00:23:39,510
bus doing this we are able to know when

508
00:23:36,840 --> 00:23:41,669
this Hugo's bus off and hence in the

509
00:23:39,510 --> 00:23:43,530
moment disused bus off fries and someone

510
00:23:41,670 --> 00:23:45,360
tries to spoof the message of this you

511
00:23:43,530 --> 00:23:48,870
we will know that that message was not

512
00:23:45,360 --> 00:23:51,179
sent by the issue itself the annoying

513
00:23:48,870 --> 00:23:53,489
part of this is these are the rules of

514
00:23:51,180 --> 00:23:55,530
can but we had to try to understand is

515
00:23:53,490 --> 00:23:58,650
that the 12 rules that explain how the

516
00:23:55,530 --> 00:24:00,420
counters increase obviously we are not

517
00:23:58,650 --> 00:24:02,940
going to explain them all just a part of

518
00:24:00,420 --> 00:24:04,380
them but this is the core of the thing

519
00:24:02,940 --> 00:24:07,620
we want you to understand if these rules

520
00:24:04,380 --> 00:24:09,150
are visible from the bus itself and the

521
00:24:07,620 --> 00:24:12,899
ones that we're interested about are

522
00:24:09,150 --> 00:24:14,520
this ones the number tree I will read

523
00:24:12,900 --> 00:24:17,940
them for you because I assume you cannot

524
00:24:14,520 --> 00:24:19,860
read from the bag but the idea is

525
00:24:17,940 --> 00:24:21,420
runa mitrice says when a transmitter

526
00:24:19,860 --> 00:24:23,189
sends a level flag the tremors the

527
00:24:21,420 --> 00:24:25,200
transmittable account which is the one

528
00:24:23,190 --> 00:24:26,580
that we care about not the receiving our

529
00:24:25,200 --> 00:24:28,650
account the transmit our account which

530
00:24:26,580 --> 00:24:30,629
is the one that can keep this you of the

531
00:24:28,650 --> 00:24:32,130
network so when a transmitter sends I

532
00:24:30,630 --> 00:24:33,780
never fly the transmitter account is

533
00:24:32,130 --> 00:24:35,370
increased by eight which is what

534
00:24:33,780 --> 00:24:37,620
happened at the beginning with our

535
00:24:35,370 --> 00:24:39,419
attack right so this is easy to see

536
00:24:37,620 --> 00:24:42,629
because we can just look for the idea of

537
00:24:39,420 --> 00:24:45,890
an issue and if we see an error on the

538
00:24:42,630 --> 00:24:49,560
payload of that object message that ID

539
00:24:45,890 --> 00:24:52,650
sorry D issue which has that ID will

540
00:24:49,560 --> 00:24:55,100
have his tach increased by eight there

541
00:24:52,650 --> 00:24:56,850
are two exceptions to this which are

542
00:24:55,100 --> 00:24:58,500
finally as soon as easy to implement

543
00:24:56,850 --> 00:25:00,600
because to implement them we just have

544
00:24:58,500 --> 00:25:02,040
to do nothing because there are few

545
00:25:00,600 --> 00:25:03,840
exceptions but the point is they are not

546
00:25:02,040 --> 00:25:05,190
visible so we wouldn't be able to detect

547
00:25:03,840 --> 00:25:06,240
them but we don't have to because they

548
00:25:05,190 --> 00:25:11,040
don't increase the transmitter or

549
00:25:06,240 --> 00:25:12,750
counter the most annoying rule is new

550
00:25:11,040 --> 00:25:14,190
rule number four which says that if a

551
00:25:12,750 --> 00:25:15,990
transmitter detects a bit error was

552
00:25:14,190 --> 00:25:17,520
sending an active level flag the

553
00:25:15,990 --> 00:25:19,980
transmitter or counts is increased now

554
00:25:17,520 --> 00:25:22,560
the problem is that in this case the

555
00:25:19,980 --> 00:25:24,450
issue is sending an error while

556
00:25:22,560 --> 00:25:26,790
detecting an apple and it won't send

557
00:25:24,450 --> 00:25:30,660
another one to tell us that it made an

558
00:25:26,790 --> 00:25:32,430
apple which makes makes means that we

559
00:25:30,660 --> 00:25:34,920
are not able to see this at all we

560
00:25:32,430 --> 00:25:36,390
cannot detect this on the bus the good

561
00:25:34,920 --> 00:25:39,840
thing about this though is that since

562
00:25:36,390 --> 00:25:41,520
these Hugh is sending zeroes the

563
00:25:39,840 --> 00:25:43,590
attacker cannot abuse of this in any way

564
00:25:41,520 --> 00:25:45,270
because the technically not override a

565
00:25:43,590 --> 00:25:46,800
zero with a one it can't only do the

566
00:25:45,270 --> 00:25:49,470
opposite it cannot overwrite a one with

567
00:25:46,800 --> 00:25:51,950
a zero so we can detect it but at least

568
00:25:49,470 --> 00:25:54,960
the attacker cannot expose exploit it

569
00:25:51,950 --> 00:25:56,880
rule number six has a whole slide for it

570
00:25:54,960 --> 00:25:59,460
because it's complicated rule number

571
00:25:56,880 --> 00:26:01,650
seven just says that well as Stephanie

572
00:25:59,460 --> 00:26:04,200
said if I'm sending correct messages my

573
00:26:01,650 --> 00:26:05,970
counter decreases again extremely easy

574
00:26:04,200 --> 00:26:08,130
to detect on the bus we just see if the

575
00:26:05,970 --> 00:26:10,710
message passes and if the message passes

576
00:26:08,130 --> 00:26:14,070
the counter is decreased rule number ten

577
00:26:10,710 --> 00:26:15,990
the rule number ten says that when the

578
00:26:14,070 --> 00:26:18,780
counter reaches 256

579
00:26:15,990 --> 00:26:21,030
these use of the bus and again this is

580
00:26:18,780 --> 00:26:22,860
extremely easy to detect lastly I

581
00:26:21,030 --> 00:26:26,820
finished off the distance sorry

582
00:26:22,860 --> 00:26:29,820
rule number 12 says that if the ECU is

583
00:26:26,820 --> 00:26:30,830
of the bus and detects 128 times 11

584
00:26:29,820 --> 00:26:32,720
consecutive ones

585
00:26:30,830 --> 00:26:35,360
then it is on the bus again and we can

586
00:26:32,720 --> 00:26:36,950
detect this too just by counting the

587
00:26:35,360 --> 00:26:42,320
number of eleven consecutive ones that

588
00:26:36,950 --> 00:26:44,930
we see rule six is the most complicated

589
00:26:42,320 --> 00:26:46,760
one and the one that had that created as

590
00:26:44,930 --> 00:26:49,250
more issues in understanding whether it

591
00:26:46,760 --> 00:26:51,560
was possible to detect a total or it was

592
00:26:49,250 --> 00:26:53,330
a big problem and it says I don't want

593
00:26:51,560 --> 00:26:55,429
to explain it all I just want to get to

594
00:26:53,330 --> 00:26:57,560
the first point and he node tolerates up

595
00:26:55,430 --> 00:26:59,390
to seven consecutive dominum bits after

596
00:26:57,560 --> 00:27:01,429
sending an active arrow flag and the

597
00:26:59,390 --> 00:27:04,850
reason for this is that the active arrow

598
00:27:01,430 --> 00:27:06,410
flag is composed of six zeros which is

599
00:27:04,850 --> 00:27:08,750
by definition an arrow ring can be

600
00:27:06,410 --> 00:27:12,410
couldn't because can accept a maximum of

601
00:27:08,750 --> 00:27:14,330
five consecutive identical bits so when

602
00:27:12,410 --> 00:27:16,160
you send six zeros what you're doing is

603
00:27:14,330 --> 00:27:17,240
literally making an obvious error so

604
00:27:16,160 --> 00:27:20,420
that everyone knows that you made a

605
00:27:17,240 --> 00:27:22,100
level okay so everyone else will react

606
00:27:20,420 --> 00:27:25,180
by telling you that you made an arrow

607
00:27:22,100 --> 00:27:29,090
sending other six zeros and we have 12

608
00:27:25,180 --> 00:27:31,820
did the 13th one is Chester we assume

609
00:27:29,090 --> 00:27:35,090
for potential delays in of one bit time

610
00:27:31,820 --> 00:27:37,159
in the reaction of some issues but forth

611
00:27:35,090 --> 00:27:39,110
into it so the eight after the first

612
00:27:37,160 --> 00:27:41,630
error flag will definitely be a problem

613
00:27:39,110 --> 00:27:43,850
because it means that something is wrong

614
00:27:41,630 --> 00:27:46,550
and someone is sending zeros on the bus

615
00:27:43,850 --> 00:27:48,169
which is potentially the D writer

616
00:27:46,550 --> 00:27:52,010
because it's the one that usually has

617
00:27:48,170 --> 00:27:54,890
the bus now this is detectable the

618
00:27:52,010 --> 00:27:56,840
problem is this so Kate we have two

619
00:27:54,890 --> 00:28:00,560
cases in the first case the victim wants

620
00:27:56,840 --> 00:28:02,449
to send a one and another one and the

621
00:28:00,560 --> 00:28:04,909
attacker lets the victims and the first

622
00:28:02,450 --> 00:28:07,130
one but it covers the second and starts

623
00:28:04,910 --> 00:28:10,850
rewriting everything with zeros in this

624
00:28:07,130 --> 00:28:13,820
case after six bits we will have the

625
00:28:10,850 --> 00:28:15,469
seven counts and after 14 the 14th bit

626
00:28:13,820 --> 00:28:18,620
was going to be the one that counts plus

627
00:28:15,470 --> 00:28:21,170
eight second case the victim sends the

628
00:28:18,620 --> 00:28:24,560
one then five zeros then another one and

629
00:28:21,170 --> 00:28:26,420
this second one is overwritten again the

630
00:28:24,560 --> 00:28:29,330
VD the victim is going to start counting

631
00:28:26,420 --> 00:28:31,160
from this bit but as you can see if we

632
00:28:29,330 --> 00:28:33,919
see on the bus what we're seeing is the

633
00:28:31,160 --> 00:28:35,630
same exact thing so we cannot detect the

634
00:28:33,920 --> 00:28:37,040
difference between these two the good

635
00:28:35,630 --> 00:28:38,930
thing of the bad thing about this is

636
00:28:37,040 --> 00:28:40,310
that again we are not completely sure

637
00:28:38,930 --> 00:28:43,520
what is happening but the good thing is

638
00:28:40,310 --> 00:28:44,960
that the case of victim two if we decide

639
00:28:43,520 --> 00:28:48,139
to implement case

640
00:28:44,960 --> 00:28:49,879
so wait for the maximum time before

641
00:28:48,139 --> 00:28:52,090
account implies aid the attacker would

642
00:28:49,879 --> 00:28:55,519
be able to implement case one and just

643
00:28:52,090 --> 00:28:57,439
avoid intrusion detection system if we

644
00:28:55,519 --> 00:28:59,619
do the opposite though the attacker has

645
00:28:57,440 --> 00:29:03,049
no way of detecting the problem of

646
00:28:59,619 --> 00:29:05,178
exploiting the problem the counter the

647
00:29:03,049 --> 00:29:09,408
problem of this is that obviously it

648
00:29:05,179 --> 00:29:12,619
creates a slight slight chance of having

649
00:29:09,409 --> 00:29:14,239
a false positive which means there is a

650
00:29:12,619 --> 00:29:18,978
really small chat really really small

651
00:29:14,239 --> 00:29:22,639
chance of an ECU not not malicious being

652
00:29:18,979 --> 00:29:24,789
considered as so anyway at this point we

653
00:29:22,639 --> 00:29:27,379
have considered all the twelve rules and

654
00:29:24,789 --> 00:29:29,210
we found a way to it we implemented them

655
00:29:27,379 --> 00:29:31,399
in a finite state machine to read the

656
00:29:29,210 --> 00:29:32,509
bus and attacked every one of the things

657
00:29:31,399 --> 00:29:35,178
that we wanted to end it I just

658
00:29:32,509 --> 00:29:37,159
explained and this is the result the

659
00:29:35,179 --> 00:29:39,109
idea is we're not using the traditional

660
00:29:37,159 --> 00:29:41,570
Kent controller of can we completely

661
00:29:39,109 --> 00:29:45,199
rewrite it and we just read the bit one

662
00:29:41,570 --> 00:29:48,259
by one and try to count alongside all

663
00:29:45,200 --> 00:29:50,509
these use their their transmitter or

664
00:29:48,259 --> 00:29:52,879
counter in this way we know when the

665
00:29:50,509 --> 00:29:54,919
issue is worse off and this implements

666
00:29:52,879 --> 00:29:57,289
the whole thing topic and we gave the

667
00:29:54,919 --> 00:29:58,609
name of the thing we gave a name to the

668
00:29:57,289 --> 00:30:02,059
interest detection system which is copy

669
00:29:58,609 --> 00:30:04,879
kin and the idea is we have to first

670
00:30:02,059 --> 00:30:06,320
decide which IDs to defend after we know

671
00:30:04,879 --> 00:30:07,879
which IDs to defend we start monitoring

672
00:30:06,320 --> 00:30:08,869
the bus from the beginning of

673
00:30:07,879 --> 00:30:11,509
communication to the end of

674
00:30:08,869 --> 00:30:13,899
communication we count the transmittable

675
00:30:11,509 --> 00:30:16,580
counter of each ECU while doing this and

676
00:30:13,899 --> 00:30:19,488
detect when an issue goes bus off if it

677
00:30:16,580 --> 00:30:20,059
does up until now we can tell if there's

678
00:30:19,489 --> 00:30:22,220
an attack

679
00:30:20,059 --> 00:30:23,840
we only know which we shoes are up and

680
00:30:22,220 --> 00:30:24,409
which are not but the problem is that

681
00:30:23,840 --> 00:30:26,840
again

682
00:30:24,409 --> 00:30:29,239
if at this moment the attacker starts

683
00:30:26,840 --> 00:30:29,928
writing again on the bus on behalf of

684
00:30:29,239 --> 00:30:32,239
this you

685
00:30:29,929 --> 00:30:35,599
we know that issue is not the one

686
00:30:32,239 --> 00:30:39,200
sending messages so we can flag this as

687
00:30:35,599 --> 00:30:42,379
an attack now a brief excursus on

688
00:30:39,200 --> 00:30:43,789
reactions because it is interesting to

689
00:30:42,379 --> 00:30:47,748
this to understand what you can do in

690
00:30:43,789 --> 00:30:50,179
these cases so you can't really just say

691
00:30:47,749 --> 00:30:52,700
to the driver hey there is a virus or

692
00:30:50,179 --> 00:30:54,470
hey there's a problem right because what

693
00:30:52,700 --> 00:30:56,450
is it going to do we were discussing

694
00:30:54,470 --> 00:30:58,010
this a long time ago you can just make

695
00:30:56,450 --> 00:31:00,559
appear like as more

696
00:30:58,010 --> 00:31:02,090
hacker on the on the dashboard telling

697
00:31:00,559 --> 00:31:03,649
hey there's an Acura in your car you

698
00:31:02,090 --> 00:31:05,360
won't be able to do it and even if you

699
00:31:03,649 --> 00:31:06,739
do what's the point of it what's the

700
00:31:05,360 --> 00:31:08,779
solution if the attacker wants to do

701
00:31:06,740 --> 00:31:10,700
something he has already done it

702
00:31:08,779 --> 00:31:14,480
who lawyers lowly and called the cyber

703
00:31:10,700 --> 00:31:17,389
police so one of the idea that has been

704
00:31:14,480 --> 00:31:20,299
proposed during the last years is that

705
00:31:17,389 --> 00:31:22,309
of moving to a degraded mode so shutting

706
00:31:20,299 --> 00:31:25,490
out the electronics from the car and

707
00:31:22,309 --> 00:31:28,700
just manage you to get to the first

708
00:31:25,490 --> 00:31:32,720
mechanic by driving almost just in the

709
00:31:28,700 --> 00:31:36,500
old way and at this point hoping that

710
00:31:32,720 --> 00:31:37,820
your mechanic is able to reflash the ECU

711
00:31:36,500 --> 00:31:38,149
that has been attacked or something like

712
00:31:37,820 --> 00:31:40,039
that

713
00:31:38,149 --> 00:31:44,000
the problem about this is that the more

714
00:31:40,039 --> 00:31:47,299
we get we get to electronic and electric

715
00:31:44,000 --> 00:31:48,789
cars and super connected cars we won't

716
00:31:47,299 --> 00:31:50,960
be able to do this because we can't

717
00:31:48,789 --> 00:31:52,669
bypass the electronics to control the

718
00:31:50,960 --> 00:31:54,620
car and the second problem is that it is

719
00:31:52,669 --> 00:31:56,840
expensive for the manufacturer to force

720
00:31:54,620 --> 00:31:59,178
you to go to the con to the mechanic

721
00:31:56,840 --> 00:32:00,500
every time the second case is what they

722
00:31:59,179 --> 00:32:01,850
actually do right now the intrusion

723
00:32:00,500 --> 00:32:04,399
detection systems that we present at the

724
00:32:01,850 --> 00:32:06,139
beginning they don't do nothing but they

725
00:32:04,399 --> 00:32:09,469
save all the logs and they send them to

726
00:32:06,139 --> 00:32:10,939
the manufacturer in this way you at

727
00:32:09,470 --> 00:32:12,649
least know what happened and how it

728
00:32:10,940 --> 00:32:14,450
happened so that you can avoid it for

729
00:32:12,649 --> 00:32:17,330
the next time and again and you can add

730
00:32:14,450 --> 00:32:19,820
more rules for example to avoid the

731
00:32:17,330 --> 00:32:21,289
attacks in an in the future which is

732
00:32:19,820 --> 00:32:23,779
actually functioning but it's not

733
00:32:21,289 --> 00:32:25,669
solving the problem right now the last

734
00:32:23,779 --> 00:32:28,789
case is we can attack the attacker

735
00:32:25,669 --> 00:32:30,529
because our kink controller is identical

736
00:32:28,789 --> 00:32:32,000
to the one of the attacker so we can

737
00:32:30,529 --> 00:32:34,130
actually implement the same attacked it

738
00:32:32,000 --> 00:32:36,380
represented before on the intrusion

739
00:32:34,130 --> 00:32:39,230
detection system and attack everyone

740
00:32:36,380 --> 00:32:41,809
that tries to spoof messages the really

741
00:32:39,230 --> 00:32:44,179
good thing is that in this way no one is

742
00:32:41,809 --> 00:32:46,158
able to convince anyone else of

743
00:32:44,179 --> 00:32:47,779
something on the bus you can spoof

744
00:32:46,159 --> 00:32:49,909
messages because I will always delete

745
00:32:47,779 --> 00:32:52,220
them and tell everyone that your

746
00:32:49,909 --> 00:32:54,260
messages are wrong even if you keep on

747
00:32:52,220 --> 00:32:56,360
doing it even if you are not compliant

748
00:32:54,260 --> 00:32:59,090
with the can full confinement so you

749
00:32:56,360 --> 00:33:01,158
won't shut down I will I will keep on

750
00:32:59,090 --> 00:33:03,470
telling you telling everyone that your

751
00:33:01,159 --> 00:33:07,639
messages are false the best thing is

752
00:33:03,470 --> 00:33:09,559
that since rule 6 is extremely annoying

753
00:33:07,639 --> 00:33:11,149
there's a really slight chance that we

754
00:33:09,559 --> 00:33:12,589
killed ECU

755
00:33:11,149 --> 00:33:15,439
even if the issue has not been attacked

756
00:33:12,589 --> 00:33:17,299
now thanks to rule 12 which was the one

757
00:33:15,440 --> 00:33:19,700
that said you can come back on the bus

758
00:33:17,299 --> 00:33:22,070
technically this problem out of solves

759
00:33:19,700 --> 00:33:24,289
itself after a short while because this

760
00:33:22,070 --> 00:33:26,658
you which is not broken will come back

761
00:33:24,289 --> 00:33:29,359
on the bus and will not be considered

762
00:33:26,659 --> 00:33:32,649
wrong but still this is an issue because

763
00:33:29,359 --> 00:33:35,629
we have post positives finally nothing

764
00:33:32,649 --> 00:33:37,998
so we try to understand whether this

765
00:33:35,629 --> 00:33:40,189
word we knew it word waiting on Tyrion

766
00:33:37,999 --> 00:33:41,330
we knew we were already able to read the

767
00:33:40,190 --> 00:33:43,099
bus

768
00:33:41,330 --> 00:33:45,168
bit by bit because we did the test for

769
00:33:43,099 --> 00:33:47,269
the attack what we really wanted to

770
00:33:45,169 --> 00:33:49,070
understand was how often this these

771
00:33:47,269 --> 00:33:50,899
rules number four number six

772
00:33:49,070 --> 00:33:53,389
specifically which are the ones that we

773
00:33:50,899 --> 00:33:54,859
cannot attack create issues in the in

774
00:33:53,389 --> 00:33:56,839
understanding whether there was an

775
00:33:54,859 --> 00:33:58,549
attack or not so if you implement this

776
00:33:56,839 --> 00:34:00,019
we had the attacker which is not we know

777
00:33:58,549 --> 00:34:01,580
no and the copy can on the other side

778
00:34:00,019 --> 00:34:04,489
which standard which is another algorri

779
00:34:01,580 --> 00:34:08,210
no no and to context connected to the

780
00:34:04,489 --> 00:34:10,190
campus the to context had are on one

781
00:34:08,210 --> 00:34:11,990
side one is acting as a traffic

782
00:34:10,190 --> 00:34:14,029
generator it just sends data on the bus

783
00:34:11,989 --> 00:34:16,428
and yeah at the end the other one is the

784
00:34:14,029 --> 00:34:18,289
protected issue the idea is we let them

785
00:34:16,429 --> 00:34:21,049
talk for a while and we let them collide

786
00:34:18,289 --> 00:34:22,460
for a while hoping that if they have to

787
00:34:21,049 --> 00:34:23,719
trigger ever us they are going to

788
00:34:22,460 --> 00:34:25,549
trigger a verse one with the other

789
00:34:23,719 --> 00:34:30,918
because we are talking one on top of the

790
00:34:25,549 --> 00:34:32,929
other if they don't there's a lower

791
00:34:30,918 --> 00:34:34,759
chance at least that true four and six

792
00:34:32,929 --> 00:34:37,220
are generally happening often in the

793
00:34:34,760 --> 00:34:40,369
wild and to do this we did the same test

794
00:34:37,219 --> 00:34:42,379
for fifty times we send 15,000 frames

795
00:34:40,369 --> 00:34:44,869
and after fifteen thousand frames we

796
00:34:42,379 --> 00:34:47,828
turned on the attacker and all fifty

797
00:34:44,869 --> 00:34:49,970
thousand sorry all 50 times the

798
00:34:47,829 --> 00:34:52,279
intrusion detection system were

799
00:34:49,969 --> 00:34:55,069
perfectly odd were on time in detecting

800
00:34:52,279 --> 00:34:59,660
that the issue was being attacked and

801
00:34:55,069 --> 00:35:02,210
and and shut off the network okay so in

802
00:34:59,660 --> 00:35:03,649
conclusion those freaking is not

803
00:35:02,210 --> 00:35:05,329
preventable it's easier to break them to

804
00:35:03,650 --> 00:35:07,970
patch so we can't really prevent the

805
00:35:05,329 --> 00:35:10,640
denial of service itself but we do have

806
00:35:07,970 --> 00:35:13,930
a solution for the ghost of the attacker

807
00:35:10,640 --> 00:35:13,930
for one of the ghosts who the attacker

808
00:35:14,920 --> 00:35:18,770
yeah I have finished if you have any

809
00:35:17,569 --> 00:35:21,380
question I hope I've been clear enough

810
00:35:18,770 --> 00:35:22,640
in explaining what is happening if you

811
00:35:21,380 --> 00:35:24,260
have any question I'm more than happy to

812
00:35:22,640 --> 00:35:27,960
answer although I don't know what time

813
00:35:24,260 --> 00:35:32,790
no yeah we have time so if you have any

814
00:35:27,960 --> 00:35:35,610
questions so I'm not a card security

815
00:35:32,790 --> 00:35:39,180
expert but speaking of solutions do you

816
00:35:35,610 --> 00:35:41,490
think signing or encrypting kind

817
00:35:39,180 --> 00:35:43,500
messages would prevent a lot of similar

818
00:35:41,490 --> 00:35:47,390
attacks this is actually a smart

819
00:35:43,500 --> 00:35:49,650
question the brief answer is yes no

820
00:35:47,390 --> 00:35:53,160
because the problem of encryption is

821
00:35:49,650 --> 00:35:55,440
that it creates computation problems on

822
00:35:53,160 --> 00:35:58,980
automotive environments you don't have

823
00:35:55,440 --> 00:36:00,390
high-end higher-end computers you have

824
00:35:58,980 --> 00:36:03,060
really small devices they're really

825
00:36:00,390 --> 00:36:05,250
cheap and you want real-time for many of

826
00:36:03,060 --> 00:36:07,080
these messages so if you encrypt and

827
00:36:05,250 --> 00:36:10,110
decrypt the message you are requesting

828
00:36:07,080 --> 00:36:13,049
for both the sender and receiver to have

829
00:36:10,110 --> 00:36:15,570
either higher computation power or have

830
00:36:13,050 --> 00:36:17,940
more time to translate a matter to us or

831
00:36:15,570 --> 00:36:20,100
it yet we do decode the message it has

832
00:36:17,940 --> 00:36:22,440
been proved sorry it has been proposed

833
00:36:20,100 --> 00:36:26,520
it is I don't know if it is done in the

834
00:36:22,440 --> 00:36:27,930
FM market because again my was named Mac

835
00:36:26,520 --> 00:36:30,450
a secret okay

836
00:36:27,930 --> 00:36:33,509
but in general it is a really known

837
00:36:30,450 --> 00:36:36,390
potential possibility but usually the

838
00:36:33,510 --> 00:36:38,340
idea is if you have two high end issues

839
00:36:36,390 --> 00:36:40,560
you can protect them and you do it maybe

840
00:36:38,340 --> 00:36:42,690
but you can protect the whole network

841
00:36:40,560 --> 00:36:45,720
because some are not going to be able to

842
00:36:42,690 --> 00:36:48,210
keep up with the translation add a

843
00:36:45,720 --> 00:36:49,770
couple of things the first is he was

844
00:36:48,210 --> 00:36:51,120
like this also as a student you asked

845
00:36:49,770 --> 00:36:52,920
him a simple question and he gave you

846
00:36:51,120 --> 00:36:58,500
over a really complicated answer the

847
00:36:52,920 --> 00:37:01,560
second is besides that there is however

848
00:36:58,500 --> 00:37:03,510
a general trend in the automotive

849
00:37:01,560 --> 00:37:06,930
industry to try to think about

850
00:37:03,510 --> 00:37:09,630
alternatives to can so probably it's

851
00:37:06,930 --> 00:37:11,850
going to happen easier that the

852
00:37:09,630 --> 00:37:13,890
automotive industry just moves on to

853
00:37:11,850 --> 00:37:17,700
automotive Ethernet or and understand

854
00:37:13,890 --> 00:37:21,240
then this specific difference between

855
00:37:17,700 --> 00:37:23,189
because this would deny our work we were

856
00:37:21,240 --> 00:37:25,649
saying yet can doesn't work anymore

857
00:37:23,190 --> 00:37:27,300
the difference is that our the idea of

858
00:37:25,650 --> 00:37:30,930
our device is that you can just connect

859
00:37:27,300 --> 00:37:33,300
it and invoice implementing

860
00:37:30,930 --> 00:37:36,720
authentication on a huge means really

861
00:37:33,300 --> 00:37:37,800
redesigning the ECU which probably won't

862
00:37:36,720 --> 00:37:39,600
be done for a can

863
00:37:37,800 --> 00:37:41,060
for a long time at a certain point it

864
00:37:39,600 --> 00:37:47,839
will try to move towards other

865
00:37:41,060 --> 00:37:47,840
techniques and busses other questions I

866
00:37:49,860 --> 00:37:52,949
[Music]

867
00:37:53,240 --> 00:37:57,839
was wondering you had to write a

868
00:37:55,760 --> 00:38:00,210
software can controller to make this

869
00:37:57,840 --> 00:38:02,850
attack work I was wondering too most can

870
00:38:00,210 --> 00:38:04,590
devices that are on a car can bus have

871
00:38:02,850 --> 00:38:07,410
programmable controllers or they

872
00:38:04,590 --> 00:38:12,000
actually hurts much question again some

873
00:38:07,410 --> 00:38:16,920
are some are not Spencer we the conflict

874
00:38:12,000 --> 00:38:18,630
sensor so there are many that I has that

875
00:38:16,920 --> 00:38:20,280
have hardware can't control it you can

876
00:38:18,630 --> 00:38:21,660
modify and you can't implement the

877
00:38:20,280 --> 00:38:23,970
attack in that way there's another

878
00:38:21,660 --> 00:38:25,799
attack though that you can implement in

879
00:38:23,970 --> 00:38:29,129
that case which is less probable to work

880
00:38:25,800 --> 00:38:31,410
but does the same exact thing and if

881
00:38:29,130 --> 00:38:33,780
you're interested I should try to find

882
00:38:31,410 --> 00:38:38,910
it but I died and I can tell you later

883
00:38:33,780 --> 00:38:40,680
so the idea is yes there's not all tank

884
00:38:38,910 --> 00:38:43,080
controllers are we programmable forget

885
00:38:40,680 --> 00:38:45,210
by the attacker some are but even if

886
00:38:43,080 --> 00:38:47,340
they weren't there's still another way

887
00:38:45,210 --> 00:38:49,470
of doing a similar thing

888
00:38:47,340 --> 00:38:52,110
so the interrelation system makes sense

889
00:38:49,470 --> 00:38:54,299
we don't consider the track model where

890
00:38:52,110 --> 00:38:55,620
the attacker is already inside the car

891
00:38:54,300 --> 00:38:58,140
we considered that the thread model

892
00:38:55,620 --> 00:39:01,609
where the attacker is outside which I

893
00:38:58,140 --> 00:39:01,609
assume was at the point of the question

894
00:39:08,990 --> 00:39:15,899
would it be possible to create a kind of

895
00:39:11,550 --> 00:39:19,290
a can up that every single can device

896
00:39:15,900 --> 00:39:23,850
connects to that filters message what

897
00:39:19,290 --> 00:39:27,029
did you miss so that as soon as it

898
00:39:23,850 --> 00:39:29,100
detects that one device is transmitting

899
00:39:27,030 --> 00:39:31,920
the same ID is another device it would

900
00:39:29,100 --> 00:39:33,690
say well that's our that's not what I'm

901
00:39:31,920 --> 00:39:36,720
so I did you switch it and then you can

902
00:39:33,690 --> 00:39:38,220
kill it but if you want how to use a hub

903
00:39:36,720 --> 00:39:41,850
you can just do the same thing which can

904
00:39:38,220 --> 00:39:45,270
general bus because it's low enough for

905
00:39:41,850 --> 00:39:47,460
you to literally override the things

906
00:39:45,270 --> 00:39:48,810
that are passing while you're passing so

907
00:39:47,460 --> 00:39:50,310
you can change a bit after you would

908
00:39:48,810 --> 00:39:51,660
understand what the bit is I know I

909
00:39:50,310 --> 00:39:53,490
think that the question was

910
00:39:51,660 --> 00:39:55,200
if I understood it correctly if you

911
00:39:53,490 --> 00:39:58,288
could change the general way the

912
00:39:55,200 --> 00:40:02,089
architectural vehicles must are instead

913
00:39:58,289 --> 00:40:05,670
of a instead of a yeah if you go for

914
00:40:02,089 --> 00:40:08,910
switch devices yes but again you are

915
00:40:05,670 --> 00:40:11,220
adding delays which is the main reason

916
00:40:08,910 --> 00:40:15,058
for which you go for a can I

917
00:40:11,220 --> 00:40:17,578
I would say that if you add a hub or you

918
00:40:15,059 --> 00:40:22,079
just use the bus the big there's no big

919
00:40:17,579 --> 00:40:23,160
differences in the both in the delays

920
00:40:22,079 --> 00:40:25,740
but was in the attacks and defenses

921
00:40:23,160 --> 00:40:28,649
because the hub shouldn't be intelligent

922
00:40:25,740 --> 00:40:30,779
I would call it but generally speaking

923
00:40:28,650 --> 00:40:32,369
yeah the most biggest problem is that

924
00:40:30,780 --> 00:40:35,339
you want to be fast you want to be

925
00:40:32,369 --> 00:40:36,510
real-time so the shorter the cable and

926
00:40:35,339 --> 00:40:39,180
the shorter connection you have to do

927
00:40:36,510 --> 00:40:42,780
the better but you're moving to that in

928
00:40:39,180 --> 00:40:44,549
in automotive Internet is always its Oh

929
00:40:42,780 --> 00:40:53,220
everything is switched in automotive

930
00:40:44,549 --> 00:40:55,230
attorney technically I think that's

931
00:40:53,220 --> 00:40:58,009
about it thank you thank you very much

932
00:40:55,230 --> 00:40:58,010
thank you very much

