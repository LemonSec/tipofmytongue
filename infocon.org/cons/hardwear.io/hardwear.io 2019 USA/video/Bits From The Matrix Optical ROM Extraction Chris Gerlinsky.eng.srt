1
00:00:02,540 --> 00:00:09,849
hi everybody I'm on the second of the

2
00:00:05,779 --> 00:00:09,849
three Chris's and this morning I guess

3
00:00:11,110 --> 00:00:18,169
so yeah just before you started a little

4
00:00:13,430 --> 00:00:21,698
bit about me I'm a hacker from Vancouver

5
00:00:18,170 --> 00:00:23,840
Island in Canada my background is in

6
00:00:21,699 --> 00:00:27,980
adversarial attacks against embedded

7
00:00:23,840 --> 00:00:29,960
security my background my original entry

8
00:00:27,980 --> 00:00:32,058
into reverse engineering was in pay TV

9
00:00:29,960 --> 00:00:33,680
hacking and I've done some work since

10
00:00:32,058 --> 00:00:35,300
then and bypassing microcontroller

11
00:00:33,680 --> 00:00:37,609
Reaper tection and and this kind of

12
00:00:35,300 --> 00:00:38,989
things usually I'm working from an

13
00:00:37,609 --> 00:00:41,989
attackers perspective more than a

14
00:00:38,989 --> 00:00:44,748
defenders perspective one of the past

15
00:00:41,989 --> 00:00:46,550
projects that I worked on was called how

16
00:00:44,749 --> 00:00:49,030
do i crack satellite and cable pay-tv

17
00:00:46,550 --> 00:00:51,229
and i reverse-engineered the motorola

18
00:00:49,030 --> 00:00:53,239
set-top boxes that are used for a cable

19
00:00:51,229 --> 00:00:55,609
and they're also used for satellite in

20
00:00:53,239 --> 00:00:57,379
canada and that project did include

21
00:00:55,609 --> 00:00:59,539
optical wrong extraction and then

22
00:00:57,379 --> 00:01:02,178
disassembly an analysis and finding a

23
00:00:59,539 --> 00:01:04,400
glitch to be able to extract the keys so

24
00:01:02,179 --> 00:01:11,360
today I'm going to talk about the wrong

25
00:01:04,400 --> 00:01:14,030
extraction process so why do we want the

26
00:01:11,360 --> 00:01:16,580
wrong Kristopher nafse key mentioned

27
00:01:14,030 --> 00:01:18,650
some of this in his talk the the chips

28
00:01:16,580 --> 00:01:21,590
will start up off of the boot rom

29
00:01:18,650 --> 00:01:23,720
typically so if we can extract the boot

30
00:01:21,590 --> 00:01:26,390
ROM and analyze that code if we find any

31
00:01:23,720 --> 00:01:27,860
bugs in the boot ROM then potentially we

32
00:01:26,390 --> 00:01:32,990
can take over control of the chip before

33
00:01:27,860 --> 00:01:35,539
any user code even runs so the the ROM

34
00:01:32,990 --> 00:01:37,699
is is permanent non-volatile data that's

35
00:01:35,540 --> 00:01:38,960
on the chip and it's actually built into

36
00:01:37,700 --> 00:01:42,380
the chip as part of the manufacturing

37
00:01:38,960 --> 00:01:44,600
process so no power is required for it

38
00:01:42,380 --> 00:01:46,190
to remain stored and this is physically

39
00:01:44,600 --> 00:01:51,050
coded into the silicon or the metal

40
00:01:46,190 --> 00:01:52,700
interconnect layers the ROM doesn't

41
00:01:51,050 --> 00:01:55,190
require any programming by the user this

42
00:01:52,700 --> 00:01:57,620
is done during manufacturing at the fab

43
00:01:55,190 --> 00:01:59,120
so as soon as the chip is out of

44
00:01:57,620 --> 00:02:02,030
manufacturing you boot it up and it will

45
00:01:59,120 --> 00:02:04,010
start to run this ROM code and again the

46
00:02:02,030 --> 00:02:07,340
boot ROM is a really typical use of ROM

47
00:02:04,010 --> 00:02:08,780
inside of of chips sometimes even if the

48
00:02:07,340 --> 00:02:10,789
chip doesn't mention that it's running a

49
00:02:08,780 --> 00:02:12,530
boot ROM there will be a small boot ROM

50
00:02:10,788 --> 00:02:13,819
that executes before it passes on

51
00:02:12,530 --> 00:02:15,750
control to your code to do some setup

52
00:02:13,819 --> 00:02:17,489
and this kind of a thing

53
00:02:15,750 --> 00:02:20,870
so the the roms and especially the boot

54
00:02:17,490 --> 00:02:23,070
roms are very interesting to look at

55
00:02:20,870 --> 00:02:24,600
who's interested in reading the ROM

56
00:02:23,070 --> 00:02:26,480
there's been quite a few people who've

57
00:02:24,600 --> 00:02:30,090
been doing this for a lot of years now

58
00:02:26,480 --> 00:02:32,190
including pirates from pay TV and video

59
00:02:30,090 --> 00:02:34,260
games and counterfeiting in general

60
00:02:32,190 --> 00:02:35,579
knocking off electronics with an

61
00:02:34,260 --> 00:02:37,590
industry it's done for competitive

62
00:02:35,580 --> 00:02:40,050
analysis of competitors products and to

63
00:02:37,590 --> 00:02:42,210
stay on top of the technology I mean in

64
00:02:40,050 --> 00:02:46,380
general researchers doing academic

65
00:02:42,210 --> 00:02:48,900
research into security and ICS and also

66
00:02:46,380 --> 00:02:50,630
we've seen ROM being extracted several

67
00:02:48,900 --> 00:02:53,040
times by a video gaming computer

68
00:02:50,630 --> 00:02:54,630
archivists like for the main project and

69
00:02:53,040 --> 00:02:59,850
this kind of this kind of thing

70
00:02:54,630 --> 00:03:02,160
archiving the old video games so what

71
00:02:59,850 --> 00:03:05,040
does the ROM look like it can be

72
00:03:02,160 --> 00:03:06,750
organized in in different ways in

73
00:03:05,040 --> 00:03:08,640
general it's a lot of bits and they're

74
00:03:06,750 --> 00:03:09,740
organized in this kind of a matrix of

75
00:03:08,640 --> 00:03:13,230
rows and columns

76
00:03:09,740 --> 00:03:16,140
this chip right here is an st 16 chip

77
00:03:13,230 --> 00:03:18,600
from a pay TV card from about 20 years

78
00:03:16,140 --> 00:03:20,790
ago this chip was delayed using

79
00:03:18,600 --> 00:03:22,230
hydrofluoric acid and that removed the

80
00:03:20,790 --> 00:03:24,780
metal entry connection layers from the

81
00:03:22,230 --> 00:03:26,519
top so that we actually have the the

82
00:03:24,780 --> 00:03:29,430
bits pattern visible you can see there's

83
00:03:26,520 --> 00:03:30,900
a difference whether there's a whether

84
00:03:29,430 --> 00:03:35,700
you have your lines connecting here or

85
00:03:30,900 --> 00:03:38,280
will you be out of space oh yeah this is

86
00:03:35,700 --> 00:03:42,060
a another type of ROM this is from an SD

87
00:03:38,280 --> 00:03:43,770
19 another pay-tv card actually so this

88
00:03:42,060 --> 00:03:46,170
chip was delayed also using hydrofluoric

89
00:03:43,770 --> 00:03:49,860
acid and then after that it was etched

90
00:03:46,170 --> 00:03:51,059
using a dash edge which is a type of an

91
00:03:49,860 --> 00:03:53,220
etch that will attack

92
00:03:51,060 --> 00:03:58,200
more specifically the doped regions of

93
00:03:53,220 --> 00:04:00,690
the chip this is another type of haraam

94
00:03:58,200 --> 00:04:03,510
from this is actually inside of an old

95
00:04:00,690 --> 00:04:05,160
XM radio and the picture on this one

96
00:04:03,510 --> 00:04:07,290
isn't so great but we can see that it's

97
00:04:05,160 --> 00:04:08,520
this is a one of the metal layers again

98
00:04:07,290 --> 00:04:10,769
the top layers have been removed with

99
00:04:08,520 --> 00:04:12,660
hydrofluoric acid and then we can see

100
00:04:10,770 --> 00:04:14,010
the the difference in the metal whether

101
00:04:12,660 --> 00:04:18,358
it's connected or not encodes whether

102
00:04:14,010 --> 00:04:20,548
the bits or one or zero so how does the

103
00:04:18,358 --> 00:04:24,359
wrong work there's different types of

104
00:04:20,548 --> 00:04:27,359
ROM Norn and whether it's implant or the

105
00:04:24,360 --> 00:04:29,220
the wire connections for the purposes of

106
00:04:27,360 --> 00:04:31,050
extracting the binary data for

107
00:04:29,220 --> 00:04:33,300
focus of this talk we don't need to

108
00:04:31,050 --> 00:04:34,830
understand the details the whole point

109
00:04:33,300 --> 00:04:36,500
is that we can see the difference

110
00:04:34,830 --> 00:04:40,140
between a choose the two states

111
00:04:36,500 --> 00:04:42,150
representing one or zero for just

112
00:04:40,140 --> 00:04:44,520
extracting the binary data typically I

113
00:04:42,150 --> 00:04:46,260
don't really care specifically how the

114
00:04:44,520 --> 00:04:50,219
ROM works I just want to get the binary

115
00:04:46,260 --> 00:04:51,210
data out so if we want to look at the

116
00:04:50,220 --> 00:04:55,140
ROM how can we see it

117
00:04:51,210 --> 00:04:56,580
we need a microscope we need acid for D

118
00:04:55,140 --> 00:04:58,620
calculation because the chip is always

119
00:04:56,580 --> 00:05:00,570
inside of some sort of a plastic package

120
00:04:58,620 --> 00:05:03,480
of some type so we use fuming nitric

121
00:05:00,570 --> 00:05:07,349
acid to clean off all the plastic off of

122
00:05:03,480 --> 00:05:09,350
the chip by in in some cases the ROM

123
00:05:07,350 --> 00:05:12,510
will be visible just looking at the chip

124
00:05:09,350 --> 00:05:14,220
typically the ROM is encoded on a lower

125
00:05:12,510 --> 00:05:15,390
layer of the chip and especially modern

126
00:05:14,220 --> 00:05:18,750
ships have many different layers of

127
00:05:15,390 --> 00:05:20,849
metal on top so we have to Delayer it so

128
00:05:18,750 --> 00:05:22,920
we can use it on acid like hydrofluoric

129
00:05:20,850 --> 00:05:25,260
acid will remove the oxide this is

130
00:05:22,920 --> 00:05:26,580
called wet etching or another option for

131
00:05:25,260 --> 00:05:28,860
D layering is chemical mechanical

132
00:05:26,580 --> 00:05:31,260
polishing which Chris also mentioned in

133
00:05:28,860 --> 00:05:35,040
his talk for preparing samples for use

134
00:05:31,260 --> 00:05:36,240
in the in the FIB for analysis and that

135
00:05:35,040 --> 00:05:37,980
can be used sometimes it's used

136
00:05:36,240 --> 00:05:41,580
alongside the wet etching or sometimes

137
00:05:37,980 --> 00:05:43,290
it's used totally independently so for D

138
00:05:41,580 --> 00:05:47,280
capsulated chips we use a fuming nitric

139
00:05:43,290 --> 00:05:50,270
acid it's fairly aggressive and it does

140
00:05:47,280 --> 00:05:54,989
fume as you can see in the picture there

141
00:05:50,270 --> 00:05:57,510
so I'm going to try to explain how easy

142
00:05:54,990 --> 00:05:59,100
some of these techniques are but keep in

143
00:05:57,510 --> 00:06:03,960
mind I'm not really going to go into the

144
00:05:59,100 --> 00:06:05,310
safety of all of it I'm not I'm not

145
00:06:03,960 --> 00:06:08,130
equipped to give anybody else safety

146
00:06:05,310 --> 00:06:09,720
advice or anything as a bare minimum for

147
00:06:08,130 --> 00:06:11,070
these kinds of chemicals you need to do

148
00:06:09,720 --> 00:06:12,630
this inside of a fume hood where there's

149
00:06:11,070 --> 00:06:15,169
good the extraction of the air so you're

150
00:06:12,630 --> 00:06:17,190
not breathing any in any of these fumes

151
00:06:15,169 --> 00:06:19,020
I'd be very aware of the different

152
00:06:17,190 --> 00:06:20,880
chemicals that you work with so keep in

153
00:06:19,020 --> 00:06:24,510
mind the focus here isn't safety it's

154
00:06:20,880 --> 00:06:26,580
just getting the data out and the nitric

155
00:06:24,510 --> 00:06:27,960
acid it really does fume as soon as you

156
00:06:26,580 --> 00:06:29,789
open the bottle you'll see some fuming

157
00:06:27,960 --> 00:06:31,409
come out once you heat it up or

158
00:06:29,790 --> 00:06:33,390
especially once it's working on a chip

159
00:06:31,410 --> 00:06:36,140
reacting you get a lot of really dense

160
00:06:33,390 --> 00:06:36,140
fumes out of there

161
00:06:37,139 --> 00:06:41,739
using the nitric acid to be capsulate

162
00:06:39,639 --> 00:06:44,080
the chip after it comes out of this acid

163
00:06:41,739 --> 00:06:45,698
it will be clean and actually a still

164
00:06:44,080 --> 00:06:48,698
working chip the acid doesn't destroy

165
00:06:45,699 --> 00:06:50,979
the chip itself for the purpose of the

166
00:06:48,699 --> 00:06:52,209
optical wrong--but extraction we don't

167
00:06:50,979 --> 00:06:54,159
really need the chip to actually be

168
00:06:52,209 --> 00:06:56,459
working the most important part is that

169
00:06:54,159 --> 00:06:58,569
it's clean and we can get pictures of it

170
00:06:56,459 --> 00:07:00,610
so there could be some alternatives

171
00:06:58,569 --> 00:07:02,439
other than fuming nitric acid that might

172
00:07:00,610 --> 00:07:04,419
actually be usable if you're on more of

173
00:07:02,439 --> 00:07:06,550
a budget but generally speaking the

174
00:07:04,419 --> 00:07:08,409
fuming nitric acid is is the best way to

175
00:07:06,550 --> 00:07:11,949
clean the chip to get a perfectly clean

176
00:07:08,409 --> 00:07:13,089
and working chip this is what a chip

177
00:07:11,949 --> 00:07:15,969
looks like after it's gone through the

178
00:07:13,089 --> 00:07:19,059
nitric acid they come out super nice and

179
00:07:15,969 --> 00:07:20,409
clean you can see there's the gold bond

180
00:07:19,059 --> 00:07:22,419
wires on these chips are still attached

181
00:07:20,409 --> 00:07:24,009
the package has all been removed so the

182
00:07:22,419 --> 00:07:25,990
wires are just kind of floating in the

183
00:07:24,009 --> 00:07:29,019
air but they are still attached to the

184
00:07:25,990 --> 00:07:31,689
chip itself so not only has the chip

185
00:07:29,019 --> 00:07:34,089
Mandi capsulated and not damaged but

186
00:07:31,689 --> 00:07:35,619
there's still wires attached this is

187
00:07:34,089 --> 00:07:38,559
still fully functional so if you have a

188
00:07:35,619 --> 00:07:40,419
way to attach these bond wires or a wire

189
00:07:38,559 --> 00:07:44,319
bonding machine yourself then you could

190
00:07:40,419 --> 00:07:47,740
still run these chips actually so for

191
00:07:44,319 --> 00:07:49,269
delayering chips as I mentioned often

192
00:07:47,740 --> 00:07:50,589
the wrong bits aren't directly visible

193
00:07:49,269 --> 00:07:53,919
from the top of the chip so you need to

194
00:07:50,589 --> 00:07:55,719
strip some layers off so a technique for

195
00:07:53,919 --> 00:07:58,719
the layering is to do wet edging wet

196
00:07:55,719 --> 00:08:01,029
etching with hydrofluoric acid and a

197
00:07:58,719 --> 00:08:03,129
little budget lab tip here wink rust

198
00:08:01,029 --> 00:08:05,789
stain remover is dilute hydrofluoric

199
00:08:03,129 --> 00:08:08,019
acid it works really well

200
00:08:05,789 --> 00:08:10,748
Christoph's you can also vote for this

201
00:08:08,019 --> 00:08:13,029
this is a great trick that you can find

202
00:08:10,749 --> 00:08:17,319
off on the shelf from the hardware store

203
00:08:13,029 --> 00:08:19,539
it works great in the lab I use this in

204
00:08:17,319 --> 00:08:22,119
my own lab it works great one of the

205
00:08:19,539 --> 00:08:23,229
other nice features of the wink rust

206
00:08:22,119 --> 00:08:25,389
stain remover is that it's already

207
00:08:23,229 --> 00:08:26,979
dilute so you're not keeping a bottle of

208
00:08:25,389 --> 00:08:28,899
very strong hydrofluoric acid in your

209
00:08:26,979 --> 00:08:31,929
lab that to use you have to dilute

210
00:08:28,899 --> 00:08:33,880
anyways just a nice little nice little

211
00:08:31,929 --> 00:08:35,919
bottle of wink and it does a great job

212
00:08:33,880 --> 00:08:38,198
on these chips so the hydrofluoric acid

213
00:08:35,919 --> 00:08:39,728
inside the wink will etch away the

214
00:08:38,198 --> 00:08:41,289
passivation layer that covers the chip

215
00:08:39,729 --> 00:08:43,630
as well as all the oxide layers that

216
00:08:41,289 --> 00:08:47,829
insulate the different metal internic

217
00:08:43,630 --> 00:08:49,930
action layers and another method free

218
00:08:47,829 --> 00:08:54,550
layering is chemical mechanical

219
00:08:49,930 --> 00:08:56,529
CMP polishing Chris also mentioned this

220
00:08:54,550 --> 00:08:59,319
in his talk that he does some of his

221
00:08:56,529 --> 00:09:01,450
preparation for the images that he gets

222
00:08:59,320 --> 00:09:04,240
in the in the Sam so this is one example

223
00:09:01,450 --> 00:09:07,900
of a basic CMP machine for polishing

224
00:09:04,240 --> 00:09:10,930
chips the round plate rotates like a

225
00:09:07,900 --> 00:09:12,939
turntable on the surface of the plate is

226
00:09:10,930 --> 00:09:15,489
uh as a disc coated with abrasive

227
00:09:12,940 --> 00:09:18,130
material or a cloth pad that's used

228
00:09:15,490 --> 00:09:21,700
along with a clothe collodial silica

229
00:09:18,130 --> 00:09:23,890
slurry as an abrasive have a blue bottle

230
00:09:21,700 --> 00:09:27,850
in the back there is the colloidal

231
00:09:23,890 --> 00:09:30,670
silica slurry then a chip is mounted to

232
00:09:27,850 --> 00:09:32,560
a jig that holds it flat and it will

233
00:09:30,670 --> 00:09:35,920
apply pressure while it sits on the

234
00:09:32,560 --> 00:09:37,719
abrasive disc as it spins so both the

235
00:09:35,920 --> 00:09:41,079
technique of polishing and wet etching

236
00:09:37,720 --> 00:09:43,060
with a hydrofluoric acid these actually

237
00:09:41,080 --> 00:09:44,770
come from failure analysis and even the

238
00:09:43,060 --> 00:09:46,329
manufacturing process for these chips so

239
00:09:44,770 --> 00:09:48,189
we borrow some techniques from failure

240
00:09:46,330 --> 00:09:50,320
analysis especially in manufacturing in

241
00:09:48,190 --> 00:09:51,820
general and we sort of downscale this to

242
00:09:50,320 --> 00:09:57,580
be able to do it in a smaller scale lab

243
00:09:51,820 --> 00:09:58,480
for reverse engineering so for taking

244
00:09:57,580 --> 00:10:02,740
pictures of chips

245
00:09:58,480 --> 00:10:04,209
we need a microscope ideally you have a

246
00:10:02,740 --> 00:10:06,040
microscope designed for way for

247
00:10:04,209 --> 00:10:07,449
inspection there's several different

248
00:10:06,040 --> 00:10:10,480
companies that make them you can find

249
00:10:07,450 --> 00:10:13,810
the on eBay or a surplus for a decent

250
00:10:10,480 --> 00:10:14,529
trap decent price you'll want to have a

251
00:10:13,810 --> 00:10:16,239
motorized

252
00:10:14,529 --> 00:10:19,870
XY stage for automating the

253
00:10:16,240 --> 00:10:23,650
picture-taking because it's a real pain

254
00:10:19,870 --> 00:10:25,360
to have to go and manually adjust the

255
00:10:23,650 --> 00:10:27,040
stage to each position when you're

256
00:10:25,360 --> 00:10:28,390
taking pictures if you're taking

257
00:10:27,040 --> 00:10:30,610
pictures of a whole chip it could be

258
00:10:28,390 --> 00:10:33,010
hundreds of tiles or more to take the

259
00:10:30,610 --> 00:10:35,050
whole chip so you'll want the motorized

260
00:10:33,010 --> 00:10:36,370
stage for that and you need a camera

261
00:10:35,050 --> 00:10:37,660
mounted to the microscope and you'll

262
00:10:36,370 --> 00:10:39,930
want very low district a little

263
00:10:37,660 --> 00:10:41,920
distortion across the entire image

264
00:10:39,930 --> 00:10:43,989
especially if you're stitching tiles

265
00:10:41,920 --> 00:10:47,349
together then that distortion and images

266
00:10:43,990 --> 00:10:48,790
really messes up the the end result so

267
00:10:47,350 --> 00:10:50,230
this is the setup that I use in my lab

268
00:10:48,790 --> 00:10:54,310
for microscopes there's two microscopes

269
00:10:50,230 --> 00:10:57,490
here on the left is a meter toyo probing

270
00:10:54,310 --> 00:11:00,040
station on the right is an axial on

271
00:10:57,490 --> 00:11:01,570
inspection microscope the little shelf

272
00:11:00,040 --> 00:11:04,060
has all the controllers and light

273
00:11:01,570 --> 00:11:06,490
sources and whatnot for these

274
00:11:04,060 --> 00:11:10,329
both of these pieces of equipment I

275
00:11:06,490 --> 00:11:12,250
bought on the used market I've been

276
00:11:10,330 --> 00:11:13,840
building up my my lab for quite some

277
00:11:12,250 --> 00:11:16,510
time so I have a little bit invested in

278
00:11:13,840 --> 00:11:21,670
this to get into this kind of equipment

279
00:11:16,510 --> 00:11:23,170
I mean in this picture here I have you

280
00:11:21,670 --> 00:11:24,550
know probably 10 or 20 thousand dollars

281
00:11:23,170 --> 00:11:26,949
invested into each of these microscopes

282
00:11:24,550 --> 00:11:28,300
but your your entry-level equipment you

283
00:11:26,950 --> 00:11:33,010
can get in at even a lower level than

284
00:11:28,300 --> 00:11:34,959
this it there is a tendency that once

285
00:11:33,010 --> 00:11:37,240
you start to buy microscope equipment so

286
00:11:34,960 --> 00:11:40,630
you'll need something more and bigger

287
00:11:37,240 --> 00:11:41,980
and these days I'm really feeling the

288
00:11:40,630 --> 00:11:47,350
need to have a stand beside these and I

289
00:11:41,980 --> 00:11:49,000
don't have one yet so when you're taking

290
00:11:47,350 --> 00:11:51,010
the pictures of the tilt of your trip is

291
00:11:49,000 --> 00:11:52,300
very important when you're moving the

292
00:11:51,010 --> 00:11:54,100
microscope from one side of the chip to

293
00:11:52,300 --> 00:11:56,459
the other your focus is going to change

294
00:11:54,100 --> 00:11:58,630
if the chip isn't perfectly level and

295
00:11:56,460 --> 00:12:00,400
even within a single image that you're

296
00:11:58,630 --> 00:12:02,470
taking with a microscope there's going

297
00:12:00,400 --> 00:12:03,850
to be a bit of a difference on one side

298
00:12:02,470 --> 00:12:05,230
of the image to the other side if the

299
00:12:03,850 --> 00:12:07,990
chip is tilted one part is going to be a

300
00:12:05,230 --> 00:12:10,930
better focus than the other and with

301
00:12:07,990 --> 00:12:12,580
these kinds of problems sometimes you

302
00:12:10,930 --> 00:12:14,530
can look at it and by eye you won't

303
00:12:12,580 --> 00:12:17,560
necessarily see the sort of distortion

304
00:12:14,530 --> 00:12:20,079
but if you try and tile all your images

305
00:12:17,560 --> 00:12:23,050
together to make one larger image then

306
00:12:20,080 --> 00:12:24,220
these focus problems will will generate

307
00:12:23,050 --> 00:12:25,719
repeating patterns the side of your

308
00:12:24,220 --> 00:12:27,940
image so it's very important that you

309
00:12:25,720 --> 00:12:28,870
have a perfectly flat chip when you're

310
00:12:27,940 --> 00:12:31,210
taking these pictures

311
00:12:28,870 --> 00:12:33,130
you're definitely microscope at the high

312
00:12:31,210 --> 00:12:36,310
magnification is very very small like

313
00:12:33,130 --> 00:12:38,230
one micron and so if your chip is tilted

314
00:12:36,310 --> 00:12:43,689
by more than one micron then you're

315
00:12:38,230 --> 00:12:46,839
gonna be able to focus at some point you

316
00:12:43,690 --> 00:12:49,089
need to be able to keep things clean as

317
00:12:46,839 --> 00:12:50,470
you work with decap chips you start to

318
00:12:49,089 --> 00:12:52,450
realize that everything everywhere is

319
00:12:50,470 --> 00:12:54,130
dirty and this dirt is really trying to

320
00:12:52,450 --> 00:12:57,130
get between your beautifully clean chip

321
00:12:54,130 --> 00:12:59,680
and the microscope objective so you're

322
00:12:57,130 --> 00:13:01,960
gonna wear gloves if your hands are very

323
00:12:59,680 --> 00:13:02,949
greasy you don't know that once you

324
00:13:01,960 --> 00:13:05,010
start working with microscopes you

325
00:13:02,950 --> 00:13:08,650
realize just how greasy you really are

326
00:13:05,010 --> 00:13:11,589
you need to keep the dust down a proper

327
00:13:08,650 --> 00:13:14,079
cleanroom is really ideal but honestly

328
00:13:11,589 --> 00:13:15,370
if we take some care that we can

329
00:13:14,080 --> 00:13:17,200
actually use excessively work with chips

330
00:13:15,370 --> 00:13:19,959
in a much more relaxed environment

331
00:13:17,200 --> 00:13:21,519
we're not producing wafers where we

332
00:13:19,959 --> 00:13:24,489
expect a very high yield we have a

333
00:13:21,519 --> 00:13:25,660
little bit more room to to breathe so

334
00:13:24,490 --> 00:13:27,279
speaking of that definitely don't

335
00:13:25,660 --> 00:13:32,050
breathe exhaling on a chip we'll leave a

336
00:13:27,279 --> 00:13:33,730
lot on the surface so yeah you just sort

337
00:13:32,050 --> 00:13:35,319
of develop some habits to to try to

338
00:13:33,730 --> 00:13:37,240
achieve keep the chips as clean as

339
00:13:35,320 --> 00:13:38,889
possible and again we're not going for

340
00:13:37,240 --> 00:13:40,870
high-yield here we're working on single

341
00:13:38,889 --> 00:13:42,250
chips at a time so if there's a little

342
00:13:40,870 --> 00:13:48,100
bit of dust and the chip gets dirty then

343
00:13:42,250 --> 00:14:08,709
you go through a cleaning process Oh see

344
00:13:48,100 --> 00:14:11,050
if I can load up this video here now so

345
00:14:08,709 --> 00:14:13,388
this is just a video showing the the

346
00:14:11,050 --> 00:14:15,729
process of my software that runs on the

347
00:14:13,389 --> 00:14:19,060
microscope its stitching tiles together

348
00:14:15,730 --> 00:14:21,820
of the chip after having taken all of

349
00:14:19,060 --> 00:14:25,119
the photos as it's stitching each one of

350
00:14:21,820 --> 00:14:27,519
these images is 5 megapixels so you end

351
00:14:25,120 --> 00:14:29,260
up with quite a large image though even

352
00:14:27,519 --> 00:14:32,050
this one this is only using the 10 times

353
00:14:29,260 --> 00:14:37,199
objective on my optical microscope so

354
00:14:32,050 --> 00:14:39,010
this is not very high magnification and

355
00:14:37,199 --> 00:14:43,719
still you end up with quite a large

356
00:14:39,010 --> 00:14:46,029
image not on the scale of gigabytes at

357
00:14:43,720 --> 00:14:49,890
this point but hundreds of megabytes

358
00:14:46,029 --> 00:14:49,890
even just for for an image like this

359
00:14:57,089 --> 00:15:18,040
yeah how do I get my other window back

360
00:15:04,480 --> 00:15:22,240
now exit full-screen there we go okay

361
00:15:18,040 --> 00:15:24,310
now how do we know what to look for when

362
00:15:22,240 --> 00:15:26,199
we're trying to find their own so to

363
00:15:24,310 --> 00:15:28,089
start with we try and identify the area

364
00:15:26,199 --> 00:15:29,529
of the chip that holds the ROM this is

365
00:15:28,089 --> 00:15:30,950
typically the most dense memory

366
00:15:29,529 --> 00:15:33,740
structure that exists on the

367
00:15:30,950 --> 00:15:34,940
the chip and also the overall size of

368
00:15:33,740 --> 00:15:37,790
this area the number of rows and columns

369
00:15:34,940 --> 00:15:39,680
should give us a clue often we have some

370
00:15:37,790 --> 00:15:41,620
idea of what what size of ROM we're

371
00:15:39,680 --> 00:15:43,579
looking for in the number of bytes and

372
00:15:41,620 --> 00:15:46,850
we're looking for indications of binary

373
00:15:43,580 --> 00:15:48,320
States so most the time I I don't need

374
00:15:46,850 --> 00:15:49,250
to understand actually how it works I

375
00:15:48,320 --> 00:15:51,170
just want to see a difference between

376
00:15:49,250 --> 00:15:55,580
two states and i can assume one is one

377
00:15:51,170 --> 00:15:58,219
and the other is a 0 so decaf the chip

378
00:15:55,580 --> 00:15:59,870
do you layer it take pictures I'll

379
00:15:58,220 --> 00:16:01,970
repeat this process and until I can see

380
00:15:59,870 --> 00:16:04,940
he that bits are visible as I go down

381
00:16:01,970 --> 00:16:06,350
through the different layers now if I go

382
00:16:04,940 --> 00:16:08,270
through this process and I never see any

383
00:16:06,350 --> 00:16:09,830
bits I get right down to the silicon

384
00:16:08,270 --> 00:16:12,439
after stripping off all the upper layers

385
00:16:09,830 --> 00:16:14,690
then that could be a sign that it's an

386
00:16:12,440 --> 00:16:16,990
implant ROM which you don't normally see

387
00:16:14,690 --> 00:16:22,490
optical the difference is in the

388
00:16:16,990 --> 00:16:24,530
transistors actually in the silicon so

389
00:16:22,490 --> 00:16:27,560
for implant ROM there are techniques for

390
00:16:24,530 --> 00:16:28,810
this to know if it is an implant ROM

391
00:16:27,560 --> 00:16:30,920
[Music]

392
00:16:28,810 --> 00:16:33,319
then the difference between ones and

393
00:16:30,920 --> 00:16:35,209
zeros aren't aren't visible just after

394
00:16:33,320 --> 00:16:37,070
Deal IRA but there is something called a

395
00:16:35,210 --> 00:16:38,530
dash edge which will create a visible

396
00:16:37,070 --> 00:16:41,360
difference between the transistors

397
00:16:38,530 --> 00:16:43,699
there's a few links here of references

398
00:16:41,360 --> 00:16:46,370
for papers and web sites that have

399
00:16:43,700 --> 00:16:49,310
mentioned using the stash edge the dash

400
00:16:46,370 --> 00:16:52,630
edge is hydrofluoric acid and nitric

401
00:16:49,310 --> 00:16:55,819
acid and that's diluted with acetic acid

402
00:16:52,630 --> 00:16:57,650
so again as a budget solution for it

403
00:16:55,820 --> 00:17:00,580
this technique also does work with the

404
00:16:57,650 --> 00:17:04,190
wink rust stain remover and nitric acid

405
00:17:00,580 --> 00:17:05,660
III did one last week using even a weak

406
00:17:04,190 --> 00:17:08,630
nitric acid not using the fuming nitric

407
00:17:05,660 --> 00:17:10,760
acid so the 69 percent nitric is very

408
00:17:08,630 --> 00:17:12,199
easy to get you don't have to jump

409
00:17:10,760 --> 00:17:14,540
through any hoops like you might have to

410
00:17:12,199 --> 00:17:17,470
for the fuming nitric and a little bit

411
00:17:14,540 --> 00:17:22,129
of the wink rust stain remover and then

412
00:17:17,470 --> 00:17:24,620
that can take it from from this so this

413
00:17:22,130 --> 00:17:26,089
is a 50 times magnification and we'll

414
00:17:24,619 --> 00:17:28,010
zoom a little bit further the pictures a

415
00:17:26,089 --> 00:17:29,659
little bit blurry but the point is we

416
00:17:28,010 --> 00:17:34,430
don't see any contrast between the bits

417
00:17:29,660 --> 00:17:37,870
here we just see the white squares see

418
00:17:34,430 --> 00:17:37,870
if it makes the videos work again

419
00:17:43,880 --> 00:17:52,590
so what I've done here is I have a

420
00:17:47,790 --> 00:17:54,720
beaker of the - acient so that's I've

421
00:17:52,590 --> 00:17:56,850
got 15 milliliters of the wink rust

422
00:17:54,720 --> 00:17:59,490
stain remover hydrofluoric acid and I

423
00:17:56,850 --> 00:18:02,189
added some nitric acid to it I have it

424
00:17:59,490 --> 00:18:03,420
heated on the hot plates and then what

425
00:18:02,190 --> 00:18:05,130
I'm going to do here is I'm going to

426
00:18:03,420 --> 00:18:07,620
take this chip and I'm going to do just

427
00:18:05,130 --> 00:18:09,090
a very quick dip inside of the solution

428
00:18:07,620 --> 00:18:14,340
this one is going to be time for 10

429
00:18:09,090 --> 00:18:16,860
seconds and agitate it in the solution a

430
00:18:14,340 --> 00:18:19,290
little bit to get good coverage and try

431
00:18:16,860 --> 00:18:21,840
and access the whole chip accidentally

432
00:18:19,290 --> 00:18:24,450
drop it and have to take it out of the

433
00:18:21,840 --> 00:18:26,870
beaker and it's about 10 seconds so

434
00:18:24,450 --> 00:18:26,870
that's alright

435
00:18:35,570 --> 00:18:41,580
and then

436
00:18:38,880 --> 00:18:44,550
ten-second - edge I saw no change at all

437
00:18:41,580 --> 00:18:48,330
in this case so that that one wasn't so

438
00:18:44,550 --> 00:18:50,490
successful but that's alright because I

439
00:18:48,330 --> 00:18:52,470
can try again so I prepared the solution

440
00:18:50,490 --> 00:18:54,270
on the hot plate again and I put it in a

441
00:18:52,470 --> 00:18:56,220
little bit longer and after putting it

442
00:18:54,270 --> 00:18:58,200
in longer there starts to be some subtle

443
00:18:56,220 --> 00:18:59,970
changes it's it's a little bit difficult

444
00:18:58,200 --> 00:19:01,710
to see in this image because the

445
00:18:59,970 --> 00:19:03,360
contrast is is so great where we can

446
00:19:01,710 --> 00:19:06,090
start to see that there's some dark

447
00:19:03,360 --> 00:19:07,439
squares and some light squares so if we

448
00:19:06,090 --> 00:19:09,649
play with the contrast a little bit it

449
00:19:07,440 --> 00:19:12,420
shows up a little bit more clearly and

450
00:19:09,650 --> 00:19:14,370
this this is still not a super clean

451
00:19:12,420 --> 00:19:15,450
image but it's enough that we can start

452
00:19:14,370 --> 00:19:16,800
to see the bit so I can give us a

453
00:19:15,450 --> 00:19:19,830
feeling that we're gonna be able to

454
00:19:16,800 --> 00:19:21,810
extract the data out of this if if we

455
00:19:19,830 --> 00:19:23,370
try hard enough if we're focused enough

456
00:19:21,810 --> 00:19:26,240
on it in which we clean it up and we

457
00:19:23,370 --> 00:19:28,290
spend some time analyzing these bits

458
00:19:26,240 --> 00:19:29,520
another photo of another trip that's

459
00:19:28,290 --> 00:19:32,820
been cleaned up a little bit better and

460
00:19:29,520 --> 00:19:35,879
image a bit better and yeah we had quite

461
00:19:32,820 --> 00:19:39,620
good contrast here and and this is just

462
00:19:35,880 --> 00:19:39,620
chip is now possible to read these bits

463
00:19:39,920 --> 00:19:44,550
after some more adjustments and tiling

464
00:19:42,600 --> 00:19:47,310
some together I mean we can see on the

465
00:19:44,550 --> 00:19:50,340
larger image here especially with the

466
00:19:47,310 --> 00:19:52,110
black and white contrast like this it's

467
00:19:50,340 --> 00:19:53,939
quite easy to to go through this at this

468
00:19:52,110 --> 00:19:58,740
point and be able to see all of our ones

469
00:19:53,940 --> 00:20:00,990
and zeros as well this the scale of

470
00:19:58,740 --> 00:20:02,250
chips is shrinking and optical

471
00:20:00,990 --> 00:20:03,960
microscopes are limited in magnification

472
00:20:02,250 --> 00:20:05,430
there's only so high you can magnify

473
00:20:03,960 --> 00:20:07,230
before we're getting below the

474
00:20:05,430 --> 00:20:09,360
wavelength of light and optical doesn't

475
00:20:07,230 --> 00:20:11,100
do anything for us so at that point we

476
00:20:09,360 --> 00:20:12,300
need to start using scanning scanning

477
00:20:11,100 --> 00:20:14,189
electron microscopes

478
00:20:12,300 --> 00:20:16,110
I'm also related to that as a focused

479
00:20:14,190 --> 00:20:17,550
ion beam which which works in a similar

480
00:20:16,110 --> 00:20:19,830
way gives you the same source of black

481
00:20:17,550 --> 00:20:21,720
and white images now if you're using a

482
00:20:19,830 --> 00:20:22,889
similar fib now there might be some

483
00:20:21,720 --> 00:20:24,480
additional sample preparation

484
00:20:22,890 --> 00:20:26,660
requirements you might have to use some

485
00:20:24,480 --> 00:20:30,600
coding of the chip or or otherwise

486
00:20:26,660 --> 00:20:31,920
because in the salmon the FIB whether

487
00:20:30,600 --> 00:20:33,240
the material is conductive or not

488
00:20:31,920 --> 00:20:34,860
determines whether you're going to get a

489
00:20:33,240 --> 00:20:38,550
good damage out of it so it adds a

490
00:20:34,860 --> 00:20:39,959
little bit more in the preparation but

491
00:20:38,550 --> 00:20:42,000
the magnification and the quality you

492
00:20:39,960 --> 00:20:44,670
can get is absolutely incredible so this

493
00:20:42,000 --> 00:20:46,740
is an image from the SEM which I I think

494
00:20:44,670 --> 00:20:48,540
I got from Chris actually I should have

495
00:20:46,740 --> 00:20:49,800
put credit on there if you see some

496
00:20:48,540 --> 00:20:51,470
images and here they're from Christophe

497
00:20:49,800 --> 00:20:53,930
ski

498
00:20:51,470 --> 00:20:57,890
but we can see here the the bits great

499
00:20:53,930 --> 00:21:01,250
contrast on them the the black and white

500
00:20:57,890 --> 00:21:04,040
I mean it's it's practically digital

501
00:21:01,250 --> 00:21:05,990
already right a good quality SEM image

502
00:21:04,040 --> 00:21:07,760
like this it feels like the bits almost

503
00:21:05,990 --> 00:21:13,280
extract themselves the the contrast is

504
00:21:07,760 --> 00:21:14,720
really so great now this is a part of a

505
00:21:13,280 --> 00:21:16,820
ROM that was full that was imaged using

506
00:21:14,720 --> 00:21:19,010
the focused ion beam also by Christopher

507
00:21:16,820 --> 00:21:21,050
an auskey so we can see here the the

508
00:21:19,010 --> 00:21:23,420
shape where it's in and kind of a plus

509
00:21:21,050 --> 00:21:25,460
sign here this is because all of the

510
00:21:23,420 --> 00:21:28,850
black areas are the oxide layers that

511
00:21:25,460 --> 00:21:30,950
aren't image with the fib so the gray

512
00:21:28,850 --> 00:21:33,230
areas that we can see are where Chris

513
00:21:30,950 --> 00:21:35,510
has gone over with the fib and deposited

514
00:21:33,230 --> 00:21:38,390
platinum on top of the chip so that the

515
00:21:35,510 --> 00:21:40,580
the platinum will will let the focus

516
00:21:38,390 --> 00:21:42,260
iron beam be able to see the the contour

517
00:21:40,580 --> 00:21:46,220
on top of the chip it was give us a bit

518
00:21:42,260 --> 00:21:47,510
of contrast on it so we can see the the

519
00:21:46,220 --> 00:21:51,560
outputs from the ROM or near the bottom

520
00:21:47,510 --> 00:21:53,660
there and as the top part of the the

521
00:21:51,560 --> 00:21:57,950
plus sign there we can see some little

522
00:21:53,660 --> 00:21:59,690
white circles inside of our inside of

523
00:21:57,950 --> 00:22:01,910
our structure here and those white

524
00:21:59,690 --> 00:22:05,060
circles are indicating whether the bit

525
00:22:01,910 --> 00:22:07,030
is a 1 or a 0 so this contrast isn't

526
00:22:05,060 --> 00:22:09,980
quite as nice as the previous SEM image

527
00:22:07,030 --> 00:22:11,330
but on here also I mean we can we can

528
00:22:09,980 --> 00:22:16,400
discern the difference so we're going to

529
00:22:11,330 --> 00:22:18,679
be able extract the digital data for the

530
00:22:16,400 --> 00:22:20,030
bit extraction process what we're going

531
00:22:18,680 --> 00:22:21,410
to do is we're going to take the bits

532
00:22:20,030 --> 00:22:24,410
from the image and we're going to create

533
00:22:21,410 --> 00:22:26,840
a file of ones and zeros the FIR in the

534
00:22:24,410 --> 00:22:30,100
first step we're just going to extract

535
00:22:26,840 --> 00:22:34,129
the data into a matrix of ones and zeros

536
00:22:30,100 --> 00:22:37,490
not organizing into bytes yet this part

537
00:22:34,130 --> 00:22:39,290
can be done manually and crowd-sourced

538
00:22:37,490 --> 00:22:43,880
like the main prop main project is done

539
00:22:39,290 --> 00:22:46,580
this a few times the the trick with this

540
00:22:43,880 --> 00:22:48,380
doing it manually is that there's a lot

541
00:22:46,580 --> 00:22:50,840
of bits inside of a ROM if you have a

542
00:22:48,380 --> 00:22:53,540
ROM that's 32 kilobytes you're looking

543
00:22:50,840 --> 00:22:56,060
at 260 thousand bits so that that's

544
00:22:53,540 --> 00:22:59,300
quite a lot to do manually crowdsourced

545
00:22:56,060 --> 00:23:01,190
can make it practical or another option

546
00:22:59,300 --> 00:23:03,590
is to use an automated bit extraction

547
00:23:01,190 --> 00:23:04,700
software so there's an open source bit

548
00:23:03,590 --> 00:23:10,010
extraction software

549
00:23:04,700 --> 00:23:11,840
romper there's not a lot out there is as

550
00:23:10,010 --> 00:23:13,580
far as open tools so this is very cool

551
00:23:11,840 --> 00:23:17,780
that that's something like ROM party

552
00:23:13,580 --> 00:23:20,899
exists for my own project here I've made

553
00:23:17,780 --> 00:23:25,070
my own kind of primitive tools that fit

554
00:23:20,900 --> 00:23:29,200
my own workflow so this is a screenshot

555
00:23:25,070 --> 00:23:31,460
of the extraction tool that that I use

556
00:23:29,200 --> 00:23:33,200
so the large window on the right is

557
00:23:31,460 --> 00:23:35,300
showing a photo of the ROM it has a

558
00:23:33,200 --> 00:23:36,920
graphic overlay just playing which bits

559
00:23:35,300 --> 00:23:39,710
have been identified as 1 or 0 by the

560
00:23:36,920 --> 00:23:42,380
software the window at the top left is

561
00:23:39,710 --> 00:23:43,940
where I put status messages and I sort

562
00:23:42,380 --> 00:23:45,320
of keep some very brief instructions

563
00:23:43,940 --> 00:23:48,560
there so that I can walk myself through

564
00:23:45,320 --> 00:23:50,270
the process the middle window has the

565
00:23:48,560 --> 00:23:54,470
different settings that that the bit

566
00:23:50,270 --> 00:23:58,010
analyzer is using the the basic process

567
00:23:54,470 --> 00:24:00,380
that I'm using here is I look on a grid

568
00:23:58,010 --> 00:24:03,410
all the bits are organized into a grid

569
00:24:00,380 --> 00:24:06,220
so I look on a grid and I'm checking for

570
00:24:03,410 --> 00:24:08,570
light spots or dark spots the the

571
00:24:06,220 --> 00:24:10,040
threshold of the brightness is the the

572
00:24:08,570 --> 00:24:12,560
main feature that I used to look at I

573
00:24:10,040 --> 00:24:14,300
have a couple other analysis options but

574
00:24:12,560 --> 00:24:15,200
generally speaking you're going to end

575
00:24:14,300 --> 00:24:16,669
up with something where you're going to

576
00:24:15,200 --> 00:24:19,610
have a light spot or a dark spot and

577
00:24:16,670 --> 00:24:21,460
code a 1 or a 0 and then the bottom

578
00:24:19,610 --> 00:24:25,550
window is just an image histogram for

579
00:24:21,460 --> 00:24:30,020
helping to see that your pixel values in

580
00:24:25,550 --> 00:24:31,460
your your-your-your different processing

581
00:24:30,020 --> 00:24:35,000
that you can do to the image is giving

582
00:24:31,460 --> 00:24:37,760
you an optimal image to work with so

583
00:24:35,000 --> 00:24:39,440
sometimes the software isn't successful

584
00:24:37,760 --> 00:24:44,030
at identifying whether a bit is a 1 or a

585
00:24:39,440 --> 00:24:46,790
0 so what I do is I have a threshold set

586
00:24:44,030 --> 00:24:49,700
so if it's certain it's a 1 it will mark

587
00:24:46,790 --> 00:24:52,610
it in a yellow color with for the light

588
00:24:49,700 --> 00:24:53,990
boxes or if it's certain it's a 0 or a

589
00:24:52,610 --> 00:24:56,419
dark one it'll mark it with a blue box

590
00:24:53,990 --> 00:24:57,710
and if it's something in the middle then

591
00:24:56,420 --> 00:25:01,070
it'll mark it with a red box so that I

592
00:24:57,710 --> 00:25:04,190
can manually go back and and determine

593
00:25:01,070 --> 00:25:08,120
how it should be actually sad so I can

594
00:25:04,190 --> 00:25:10,130
also adjust the the transparency of this

595
00:25:08,120 --> 00:25:11,330
overlay when I make it more transparent

596
00:25:10,130 --> 00:25:13,670
you can see in the background a little

597
00:25:11,330 --> 00:25:17,750
bit more so we can see at the left side

598
00:25:13,670 --> 00:25:19,580
of that ROM photo there's one red

599
00:25:17,750 --> 00:25:21,170
so inside of a software I can just move

600
00:25:19,580 --> 00:25:23,570
the mouse overtop of that box then I can

601
00:25:21,170 --> 00:25:26,840
press 1 or 0 and I can set that bit to

602
00:25:23,570 --> 00:25:29,659
the specific value having the overlay

603
00:25:26,840 --> 00:25:32,929
like this also lets me get a visual idea

604
00:25:29,660 --> 00:25:35,810
of how the bit extraction process is

605
00:25:32,930 --> 00:25:37,220
working and fine tune of the the

606
00:25:35,810 --> 00:25:41,200
settings sort of in real time as I'm

607
00:25:37,220 --> 00:25:43,280
going through the images after

608
00:25:41,200 --> 00:25:49,280
extracting the bits then we're going to

609
00:25:43,280 --> 00:25:51,860
need to decode them into bytes so I made

610
00:25:49,280 --> 00:25:55,850
another primitive software tool to aid

611
00:25:51,860 --> 00:25:58,490
in this each of the bits is organized in

612
00:25:55,850 --> 00:26:04,399
columns like your your your bits 0

613
00:25:58,490 --> 00:26:05,540
through 7 you'll have 8 columns and each

614
00:26:04,400 --> 00:26:07,940
one of those will have its own output

615
00:26:05,540 --> 00:26:09,440
right because all we're always reading

616
00:26:07,940 --> 00:26:10,640
in in parallel we're not reading one bit

617
00:26:09,440 --> 00:26:15,950
at a time we're reading one byte at a

618
00:26:10,640 --> 00:26:19,070
time so generally we can see how many

619
00:26:15,950 --> 00:26:20,540
bits the ROM is outputting sometimes

620
00:26:19,070 --> 00:26:22,669
there can be two sides interleave

621
00:26:20,540 --> 00:26:24,020
sometimes they'll have to have smeared

622
00:26:22,670 --> 00:26:25,700
you know there there's some different

623
00:26:24,020 --> 00:26:30,440
ways that they can manufacture and then

624
00:26:25,700 --> 00:26:32,990
do the layout the address thing is

625
00:26:30,440 --> 00:26:36,380
typically incremental meaning that the

626
00:26:32,990 --> 00:26:37,910
your low address bits that they're

627
00:26:36,380 --> 00:26:40,850
either organized running from left to

628
00:26:37,910 --> 00:26:42,650
right or right to left and the high

629
00:26:40,850 --> 00:26:45,189
address bits are generally going on

630
00:26:42,650 --> 00:26:48,380
either top to bottom or bottom to top

631
00:26:45,190 --> 00:26:54,350
typically a wrong is organized in a very

632
00:26:48,380 --> 00:26:55,520
straightforward manner actually so how

633
00:26:54,350 --> 00:26:57,320
do we know when we do get the bits

634
00:26:55,520 --> 00:26:59,750
ordered correctly lots of time in Iran

635
00:26:57,320 --> 00:27:01,159
there's ASCII text so if we start to see

636
00:26:59,750 --> 00:27:02,480
ASCII text and we can read it then this

637
00:27:01,160 --> 00:27:03,830
is a pretty good sign that we have the

638
00:27:02,480 --> 00:27:05,120
bits organized into bytes correctly

639
00:27:03,830 --> 00:27:07,460
because it you know it's making sensible

640
00:27:05,120 --> 00:27:08,989
data we might also see some patterns and

641
00:27:07,460 --> 00:27:11,840
in data tables or there might be some

642
00:27:08,990 --> 00:27:13,820
known constants and then the third

643
00:27:11,840 --> 00:27:15,679
method is to actually try disassembling

644
00:27:13,820 --> 00:27:17,470
it and if you can disassemble the code

645
00:27:15,680 --> 00:27:19,790
and it comes up to something sensible

646
00:27:17,470 --> 00:27:23,360
then you can have the bits in the right

647
00:27:19,790 --> 00:27:25,310
order and that's good so here's a

648
00:27:23,360 --> 00:27:27,070
screenshot of the the software that I

649
00:27:25,310 --> 00:27:30,100
use for decoding the the binary data

650
00:27:27,070 --> 00:27:33,250
into bytes

651
00:27:30,100 --> 00:27:35,649
at the bottom is a labelled image of ROM

652
00:27:33,250 --> 00:27:38,740
this is another SEM photo from Cristian

653
00:27:35,650 --> 00:27:41,680
offski so on this example this is a

654
00:27:38,740 --> 00:27:43,930
32-bit chip the bits are organized in a

655
00:27:41,680 --> 00:27:48,490
sequential order bit 31 is on the left

656
00:27:43,930 --> 00:27:50,440
bit zero is on the right also we can see

657
00:27:48,490 --> 00:27:52,660
in this picture at the bottom there's a

658
00:27:50,440 --> 00:27:53,890
large area where all the bits are set in

659
00:27:52,660 --> 00:27:55,660
one direction there's a large area

660
00:27:53,890 --> 00:27:58,120
that's it's all going to be FF four zero

661
00:27:55,660 --> 00:27:59,800
zero at the bottom of the wrong so when

662
00:27:58,120 --> 00:28:01,510
we see these solid patterns like this

663
00:27:59,800 --> 00:28:03,250
this is a pretty good indication that

664
00:28:01,510 --> 00:28:05,140
this ROM probably isn't encrypted

665
00:28:03,250 --> 00:28:06,940
because if it's encrypted you'll see

666
00:28:05,140 --> 00:28:08,740
some other kind of pattern or more

667
00:28:06,940 --> 00:28:11,410
randomness when you when you see these

668
00:28:08,740 --> 00:28:12,700
large clean blocks probably you're

669
00:28:11,410 --> 00:28:13,750
working with wrong that's not encrypted

670
00:28:12,700 --> 00:28:17,920
and once you get the bits in the right

671
00:28:13,750 --> 00:28:20,080
order you're gonna have a good binary in

672
00:28:17,920 --> 00:28:21,580
this case once we organize the bits and

673
00:28:20,080 --> 00:28:23,980
two bytes there was a string of ASCII

674
00:28:21,580 --> 00:28:25,270
text with the manufacturer's name that

675
00:28:23,980 --> 00:28:26,890
was the only ASCII text we found in the

676
00:28:25,270 --> 00:28:28,600
wrong so thanks for putting that in

677
00:28:26,890 --> 00:28:30,010
that's that's not the first time other

678
00:28:28,600 --> 00:28:33,159
tips that I've looked at the only ASCII

679
00:28:30,010 --> 00:28:46,510
text you find is a copyright notice keep

680
00:28:33,160 --> 00:28:50,920
putting those in that's great so this is

681
00:28:46,510 --> 00:29:03,879
a this is a video of the the bit viewer

682
00:28:50,920 --> 00:29:05,370
program maybe what's going on oh here we

683
00:29:03,880 --> 00:29:09,640
go

684
00:29:05,370 --> 00:29:12,010
okay so I've loaded in the the file that

685
00:29:09,640 --> 00:29:15,310
I've made of ones and zeros extracted

686
00:29:12,010 --> 00:29:18,010
from the photo and now we can we can see

687
00:29:15,310 --> 00:29:21,669
them just as a you know graphic image

688
00:29:18,010 --> 00:29:23,800
here white squares or black squares so

689
00:29:21,670 --> 00:29:25,150
inside the software I have some

690
00:29:23,800 --> 00:29:27,610
different options for how its its

691
00:29:25,150 --> 00:29:29,140
exported for the the bit order and this

692
00:29:27,610 --> 00:29:32,580
kind of thing and then there's also a

693
00:29:29,140 --> 00:29:32,580
window I can bring up that shows the

694
00:29:33,210 --> 00:29:40,360
shows the hex values of all the bytes

695
00:29:36,490 --> 00:29:41,560
inside of there so as I change options

696
00:29:40,360 --> 00:29:42,580
inside of the software I get a live

697
00:29:41,560 --> 00:29:45,010
update of my hex

698
00:29:42,580 --> 00:29:46,389
you so I can look at the bits I can try

699
00:29:45,010 --> 00:29:48,760
and organize them in different ways and

700
00:29:46,390 --> 00:29:51,159
I can very quickly see inside of the hex

701
00:29:48,760 --> 00:29:53,379
view if I start to see all codes that I

702
00:29:51,159 --> 00:29:54,640
recognize or ASCII text or anything like

703
00:29:53,380 --> 00:29:57,549
this

704
00:29:54,640 --> 00:29:58,899
also within the software I have some

705
00:29:57,549 --> 00:30:02,470
different options like I can click this

706
00:29:58,899 --> 00:30:04,090
set bit here and I'll adjust the window

707
00:30:02,470 --> 00:30:08,649
just so that we can see both of these at

708
00:30:04,090 --> 00:30:11,709
the same time and now if I click on some

709
00:30:08,649 --> 00:30:13,418
of the bits within the matrix of bits we

710
00:30:11,710 --> 00:30:15,070
can see in the output values change like

711
00:30:13,419 --> 00:30:17,110
right now the byte 0 is changing the

712
00:30:15,070 --> 00:30:18,908
byte 1 is changing or just flipping one

713
00:30:17,110 --> 00:30:20,559
bit at a time so as we flip bits in the

714
00:30:18,909 --> 00:30:25,389
image we can see where that corresponds

715
00:30:20,559 --> 00:30:29,168
to actually on the on the binary hex

716
00:30:25,389 --> 00:30:31,029
view itself this is also nice if you

717
00:30:29,169 --> 00:30:33,639
have dirt on the chip or you know that

718
00:30:31,029 --> 00:30:36,309
your extraction wasn't perfect then you

719
00:30:33,639 --> 00:30:39,039
can get an idea of actually which part

720
00:30:36,309 --> 00:30:41,080
of your which part of your data is

721
00:30:39,039 --> 00:30:42,490
likely to be correct or incorrect and as

722
00:30:41,080 --> 00:30:44,019
we click in different areas you can see

723
00:30:42,490 --> 00:30:53,889
different bytes of that hex you start to

724
00:30:44,019 --> 00:30:55,899
change so an example of doing the the

725
00:30:53,889 --> 00:30:58,090
processing for extracting the ROM this

726
00:30:55,899 --> 00:31:01,059
is an SD 19 smart card this is a k7

727
00:30:58,090 --> 00:31:03,189
series card this is the a cost 5 smart

728
00:31:01,059 --> 00:31:04,840
card you can buy them to load your own

729
00:31:03,190 --> 00:31:07,630
programs in this kind of thing find them

730
00:31:04,840 --> 00:31:09,399
on eBay the same series of chips is used

731
00:31:07,630 --> 00:31:12,490
for other secure applications including

732
00:31:09,399 --> 00:31:14,320
HEV banking this kind of thing so the

733
00:31:12,490 --> 00:31:16,570
chip will be the CT calculated using

734
00:31:14,320 --> 00:31:19,000
fuming nitric acid and then de layer

735
00:31:16,570 --> 00:31:20,950
using hydrofluoric acid and I did the

736
00:31:19,000 --> 00:31:23,490
imaging with my eyes ice Accutron height

737
00:31:20,950 --> 00:31:25,750
optical microscope that I showed earlier

738
00:31:23,490 --> 00:31:28,480
so this is the chip just after D

739
00:31:25,750 --> 00:31:29,980
calculation there's not much that's

740
00:31:28,480 --> 00:31:31,769
actually visible because this chip has a

741
00:31:29,980 --> 00:31:34,179
shield layer on the very top

742
00:31:31,769 --> 00:31:37,059
this shield layer when we zoom right in

743
00:31:34,179 --> 00:31:38,860
looks like this so there's a metal line

744
00:31:37,059 --> 00:31:41,649
that snakes around these other lines

745
00:31:38,860 --> 00:31:43,899
that carry ground on them and if you

746
00:31:41,649 --> 00:31:47,979
disturb this and the chip will stop

747
00:31:43,899 --> 00:31:49,389
running for the wrong extraction I don't

748
00:31:47,980 --> 00:31:50,529
care if the chip is running but I want

749
00:31:49,389 --> 00:31:55,360
to be able to see below and this is

750
00:31:50,529 --> 00:31:56,530
blocking the view so then we actually in

751
00:31:55,360 --> 00:31:58,060
in wink I'm going to

752
00:31:56,530 --> 00:32:00,040
to skip this video it's basically the

753
00:31:58,060 --> 00:32:02,919
same as the dash H we saw it's a beaker

754
00:32:00,040 --> 00:32:05,770
on hot plate you put the chip in one

755
00:32:02,920 --> 00:32:09,550
detail about the etching in the the

756
00:32:05,770 --> 00:32:11,860
hydrofluoric acid is that as its edging

757
00:32:09,550 --> 00:32:13,780
away the material on the chip it will

758
00:32:11,860 --> 00:32:15,550
first be removing the passivation from

759
00:32:13,780 --> 00:32:17,260
the top of the chip and then at some

760
00:32:15,550 --> 00:32:19,480
point it's going to expose the aluminum

761
00:32:17,260 --> 00:32:21,190
metal and once that hydrofluoric acid

762
00:32:19,480 --> 00:32:22,990
hits the aluminum metal then it starts

763
00:32:21,190 --> 00:32:24,220
to react more vigorously and you'll

764
00:32:22,990 --> 00:32:25,630
actually see a lot of bubbles come off

765
00:32:24,220 --> 00:32:27,940
the surface in the chip so as you're

766
00:32:25,630 --> 00:32:30,460
sitting in in front of the hot plate

767
00:32:27,940 --> 00:32:32,250
with a chip watching it being etched you

768
00:32:30,460 --> 00:32:34,270
can get a pretty good visual idea of

769
00:32:32,250 --> 00:32:35,800
whether you've actually etched to the

770
00:32:34,270 --> 00:32:37,060
next layer of the chip or not just based

771
00:32:35,800 --> 00:32:39,190
on did you see this big stream of

772
00:32:37,060 --> 00:32:41,110
bubbles coming off so this is the decap

773
00:32:39,190 --> 00:32:42,580
chip and then after dipping in

774
00:32:41,110 --> 00:32:44,949
hydrofluoric acid this is the view that

775
00:32:42,580 --> 00:32:46,720
we get so there's a couple spots with a

776
00:32:44,950 --> 00:32:48,430
little bit of dirt on this one but

777
00:32:46,720 --> 00:32:51,100
generally the shield came off fairly

778
00:32:48,430 --> 00:32:53,230
well so we can start to see a little bit

779
00:32:51,100 --> 00:32:54,699
of what's below at this point it's still

780
00:32:53,230 --> 00:32:57,220
not very clear our image isn't very

781
00:32:54,700 --> 00:32:59,800
great and that's because I stopped the

782
00:32:57,220 --> 00:33:01,870
etch immediately after removing the

783
00:32:59,800 --> 00:33:05,230
metal shield layer so there's still a

784
00:33:01,870 --> 00:33:07,689
layer of oxide below the shield above

785
00:33:05,230 --> 00:33:10,420
the rest of the chip if we zoom in on

786
00:33:07,690 --> 00:33:11,740
that then we can see if a pattern that

787
00:33:10,420 --> 00:33:13,600
we see here isn't actually the metal

788
00:33:11,740 --> 00:33:16,000
lines the pattern that we see here is

789
00:33:13,600 --> 00:33:18,189
the traces of the metal lines left in

790
00:33:16,000 --> 00:33:20,290
the oxide where we're seeing the the

791
00:33:18,190 --> 00:33:23,560
contours left over from the metal lines

792
00:33:20,290 --> 00:33:25,570
in the oxide so in some cases this can

793
00:33:23,560 --> 00:33:28,000
be interesting for for other attacks

794
00:33:25,570 --> 00:33:29,350
against the chip because now we can see

795
00:33:28,000 --> 00:33:30,940
below but we also have the reference

796
00:33:29,350 --> 00:33:32,709
from the top of the chip so we could see

797
00:33:30,940 --> 00:33:36,220
exactly what areas the shield lines

798
00:33:32,710 --> 00:33:37,810
cross for the wrong extraction we just

799
00:33:36,220 --> 00:33:39,400
want to go from this to get something

800
00:33:37,810 --> 00:33:41,169
that looks a little bit a little bit

801
00:33:39,400 --> 00:33:43,240
better so after putting it back in the

802
00:33:41,170 --> 00:33:45,550
hydrofluoric acid to remove some oxide

803
00:33:43,240 --> 00:33:49,450
it comes out looking like this so this

804
00:33:45,550 --> 00:33:51,550
is a lot nicer much more contrast one

805
00:33:49,450 --> 00:33:53,220
note you can see a little circle on the

806
00:33:51,550 --> 00:33:56,110
bottom there that bottom rectangle

807
00:33:53,220 --> 00:33:58,980
bottom right that is the ROM of this

808
00:33:56,110 --> 00:34:01,540
chip and that circle isn't actually

809
00:33:58,980 --> 00:34:03,400
damage to the chip that's just a little

810
00:34:01,540 --> 00:34:06,310
bit of residue from after cleaning the

811
00:34:03,400 --> 00:34:08,200
chip and so I after dipping in

812
00:34:06,310 --> 00:34:08,860
hydrofluoric acid I clean the trip and

813
00:34:08,199 --> 00:34:10,540
isopropanol

814
00:34:08,860 --> 00:34:11,590
and let it dry

815
00:34:10,540 --> 00:34:14,350
and that's just a little bit of residue

816
00:34:11,590 --> 00:34:15,880
from it drying so before I chew it again

817
00:34:14,350 --> 00:34:17,949
I'll clean it and that will be removed

818
00:34:15,880 --> 00:34:19,780
so it won't actually cause any permanent

819
00:34:17,949 --> 00:34:24,250
damage other than just you know a little

820
00:34:19,780 --> 00:34:25,929
showing up a little bit in the photo so

821
00:34:24,250 --> 00:34:27,580
after this I'll put the chip back in HF

822
00:34:25,929 --> 00:34:29,770
I mean we can't see any bits or anything

823
00:34:27,580 --> 00:34:31,290
yet they're still down lower so a couple

824
00:34:29,770 --> 00:34:33,270
more minutes in the hydrofluoric acid

825
00:34:31,290 --> 00:34:36,130
we've stripped away another layer

826
00:34:33,270 --> 00:34:39,009
there's still there's still more metal

827
00:34:36,130 --> 00:34:41,350
layers that we can see inside of the ROM

828
00:34:39,010 --> 00:34:43,270
you can see a few little spots there

829
00:34:41,350 --> 00:34:44,918
those are areas where the acid has

830
00:34:43,270 --> 00:34:46,929
pooled and etched a little bit deep so I

831
00:34:44,918 --> 00:34:49,120
don't have a perfectly clean D layering

832
00:34:46,929 --> 00:34:50,679
at this point the deeper that you go

833
00:34:49,120 --> 00:34:53,500
with the wet etching the more difficult

834
00:34:50,679 --> 00:34:55,149
it is to keep it perfectly level so one

835
00:34:53,500 --> 00:34:57,490
solution for that is to do a combination

836
00:34:55,149 --> 00:34:59,740
of wet etching and polishing to keep it

837
00:34:57,490 --> 00:35:03,189
planar in this case I'm just doing the

838
00:34:59,740 --> 00:35:04,990
wet etching so this is a close-up of one

839
00:35:03,190 --> 00:35:07,330
of those holes but we can see where it's

840
00:35:04,990 --> 00:35:09,279
etched deeper but where it's etched

841
00:35:07,330 --> 00:35:10,600
deeper into the next layer we can start

842
00:35:09,280 --> 00:35:13,720
to see some of the bits these are the

843
00:35:10,600 --> 00:35:15,130
bits encoded on the next metal layer so

844
00:35:13,720 --> 00:35:17,350
it's a shame that it's not going to come

845
00:35:15,130 --> 00:35:18,430
out perfectly even but this is a good

846
00:35:17,350 --> 00:35:21,370
sign that we're going to be able to see

847
00:35:18,430 --> 00:35:23,020
the bits we can see it already so after

848
00:35:21,370 --> 00:35:26,080
this I'll do another dip in the

849
00:35:23,020 --> 00:35:28,480
hydrofluoric acid to remove the rest of

850
00:35:26,080 --> 00:35:30,910
the remaining layer and then that will

851
00:35:28,480 --> 00:35:32,590
expose all of the bits so this is the

852
00:35:30,910 --> 00:35:35,710
full raw area of the chip that's been

853
00:35:32,590 --> 00:35:37,600
imaged the differences in in color are

854
00:35:35,710 --> 00:35:38,770
just from stopping and starting the

855
00:35:37,600 --> 00:35:39,910
process of taking pictures with a

856
00:35:38,770 --> 00:35:44,170
microscope and some differences in

857
00:35:39,910 --> 00:35:47,109
lighting we can see the holes have

858
00:35:44,170 --> 00:35:48,700
gotten a little bit larger but there's

859
00:35:47,110 --> 00:35:50,620
still a relatively small area of the of

860
00:35:48,700 --> 00:35:54,220
the wrong so there's a couple ways we

861
00:35:50,620 --> 00:35:55,450
can deal with this the first is there's

862
00:35:54,220 --> 00:35:56,680
a lot of problem there and maybe the

863
00:35:55,450 --> 00:35:58,450
holes aren't even in an area that's

864
00:35:56,680 --> 00:36:00,430
important so we might be able to just

865
00:35:58,450 --> 00:36:03,520
say well we're gonna ignore that or

866
00:36:00,430 --> 00:36:05,230
another option is that we'll do this

867
00:36:03,520 --> 00:36:06,940
process on the first chip and we'll

868
00:36:05,230 --> 00:36:10,720
repeat the same process on a second chip

869
00:36:06,940 --> 00:36:11,980
and neither they both may come out with

870
00:36:10,720 --> 00:36:13,000
holes in them but they're probably gonna

871
00:36:11,980 --> 00:36:14,430
be in different spots so you can

872
00:36:13,000 --> 00:36:18,460
actually piece it together and get a

873
00:36:14,430 --> 00:36:20,980
perfectly clean image like that so if we

874
00:36:18,460 --> 00:36:23,800
start to zoom in on the wrong as we zoom

875
00:36:20,980 --> 00:36:24,490
in more we start to see more detail with

876
00:36:23,800 --> 00:36:26,500
it

877
00:36:24,490 --> 00:36:30,009
I'll just keep zooming in further and

878
00:36:26,500 --> 00:36:31,450
further we can we can see if the bits

879
00:36:30,010 --> 00:36:33,990
are encoded for whether there's these

880
00:36:31,450 --> 00:36:37,210
little metal shortcuts here or not and

881
00:36:33,990 --> 00:36:39,189
as we get zoomed right in it's a little

882
00:36:37,210 --> 00:36:42,010
bit blurry because of the zoom level and

883
00:36:39,190 --> 00:36:43,450
the microscope photos but it's plenty

884
00:36:42,010 --> 00:36:44,800
good enough that we can see the contrast

885
00:36:43,450 --> 00:36:49,710
to see whether there's actually a bit

886
00:36:44,800 --> 00:36:53,860
there or not so another example this is

887
00:36:49,710 --> 00:36:55,930
XC 4200 6-1 this is from a previous

888
00:36:53,860 --> 00:36:58,780
project that I did on tracking the

889
00:36:55,930 --> 00:37:01,120
satellite and cable TV boxes so I went

890
00:36:58,780 --> 00:37:02,590
through the same process with this this

891
00:37:01,120 --> 00:37:06,460
is the D capsulated chip showing the top

892
00:37:02,590 --> 00:37:08,260
metal layer after going through the

893
00:37:06,460 --> 00:37:10,330
hydrofluoric acid it's removed that top

894
00:37:08,260 --> 00:37:11,920
metal layer the bits still weren't

895
00:37:10,330 --> 00:37:15,910
visible at this point so I'm going to

896
00:37:11,920 --> 00:37:17,590
just continue with it after another dip

897
00:37:15,910 --> 00:37:21,490
in the hydrofluoric acid that's removing

898
00:37:17,590 --> 00:37:23,290
even more metal at this point I still

899
00:37:21,490 --> 00:37:25,629
wasn't seeing any bits so back in the

900
00:37:23,290 --> 00:37:27,940
hydrofluoric acid keep going and then at

901
00:37:25,630 --> 00:37:30,130
this point the etching is getting a

902
00:37:27,940 --> 00:37:32,740
little bit more uneven but I started to

903
00:37:30,130 --> 00:37:36,490
see some wrong bits and then in this

904
00:37:32,740 --> 00:37:37,750
case also I was lucky that the way the

905
00:37:36,490 --> 00:37:39,279
chip is manufactured the wrong bits

906
00:37:37,750 --> 00:37:41,260
these ones aren't encoded on a metal

907
00:37:39,280 --> 00:37:45,220
layer so even though the etching was

908
00:37:41,260 --> 00:37:47,260
uneven I was able to I was able to

909
00:37:45,220 --> 00:37:50,709
extract the full ROM because I could

910
00:37:47,260 --> 00:37:52,240
strip off the entire metal layers so

911
00:37:50,710 --> 00:37:55,150
this is the image that I got off of this

912
00:37:52,240 --> 00:37:57,609
chip for the ROM the bits are encoded

913
00:37:55,150 --> 00:37:59,410
whether there's a black dot or not the

914
00:37:57,610 --> 00:38:01,420
pictures came out really nice and nice

915
00:37:59,410 --> 00:38:04,629
and clean so it was very easy to extract

916
00:38:01,420 --> 00:38:05,980
the data from this if we look at the end

917
00:38:04,630 --> 00:38:06,910
of the ROM area we can see that

918
00:38:05,980 --> 00:38:08,680
everything's in a repeating pattern

919
00:38:06,910 --> 00:38:10,210
that's because they had more ROM

920
00:38:08,680 --> 00:38:12,490
capacity than they used for the code on

921
00:38:10,210 --> 00:38:14,050
this chip so they filled the last area

922
00:38:12,490 --> 00:38:15,700
of wrong in this case they filled it

923
00:38:14,050 --> 00:38:18,070
with a two by top coat an infinite loop

924
00:38:15,700 --> 00:38:21,040
pop code so it's a repeating pattern all

925
00:38:18,070 --> 00:38:22,540
the way through it's the the pattern is

926
00:38:21,040 --> 00:38:24,550
because we have a two bytes repeating

927
00:38:22,540 --> 00:38:26,320
over and over but at the very end of the

928
00:38:24,550 --> 00:38:28,060
ROM the pattern breaks and that's

929
00:38:26,320 --> 00:38:29,680
because this chip has your reset and

930
00:38:28,060 --> 00:38:31,660
interrupt vector addresses right at the

931
00:38:29,680 --> 00:38:33,940
very end of ROM so we can actually see

932
00:38:31,660 --> 00:38:35,290
at the very bottom row there where the

933
00:38:33,940 --> 00:38:36,780
black dots are in a different pattern

934
00:38:35,290 --> 00:38:38,310
from the rest that's

935
00:38:36,780 --> 00:38:42,870
the actual interrupt vectors being

936
00:38:38,310 --> 00:38:44,430
encoded on this show so we're gonna get

937
00:38:42,870 --> 00:38:45,660
bit errors when we do this right it's

938
00:38:44,430 --> 00:38:48,470
not a perfect process looking at the

939
00:38:45,660 --> 00:38:50,730
pictures and extracting the data but

940
00:38:48,470 --> 00:38:53,850
lots of time that that's alright it's

941
00:38:50,730 --> 00:38:56,190
good enough there's a some ways to solve

942
00:38:53,850 --> 00:38:59,880
it like if we have the time we repeat

943
00:38:56,190 --> 00:39:01,350
the process on multiple chips and that

944
00:38:59,880 --> 00:39:03,450
allows us to you know correlate the

945
00:39:01,350 --> 00:39:07,770
different results and and get a good a

946
00:39:03,450 --> 00:39:10,140
good final binary there's a balance of

947
00:39:07,770 --> 00:39:13,230
your time and money spent versus the the

948
00:39:10,140 --> 00:39:14,730
results but a lot of the time even with

949
00:39:13,230 --> 00:39:16,560
the bit errors it's still enough that

950
00:39:14,730 --> 00:39:20,310
you're able to properly analyze the

951
00:39:16,560 --> 00:39:21,750
software and then through the analysis

952
00:39:20,310 --> 00:39:23,549
of your software that has some errors in

953
00:39:21,750 --> 00:39:25,530
it maybe you're gonna be able to find a

954
00:39:23,550 --> 00:39:28,290
way to extract a better copy of the ROM

955
00:39:25,530 --> 00:39:29,880
through through digital method also for

956
00:39:28,290 --> 00:39:31,320
the bit errors some of the errors are

957
00:39:29,880 --> 00:39:33,300
really obvious when you're analyzing the

958
00:39:31,320 --> 00:39:34,260
software so some of the errors aren't

959
00:39:33,300 --> 00:39:35,610
really a problem because you'll be

960
00:39:34,260 --> 00:39:37,710
looking through Danae disassembler and

961
00:39:35,610 --> 00:39:39,090
you'll see that this instruction doesn't

962
00:39:37,710 --> 00:39:40,710
make sense but if i flip one bit it

963
00:39:39,090 --> 00:39:44,520
makes perfect sense so that was probably

964
00:39:40,710 --> 00:39:47,760
going to be a bit error so this is the

965
00:39:44,520 --> 00:39:50,640
results from the the digit cipher chip i

966
00:39:47,760 --> 00:39:53,160
did the optical extraction of the rom i

967
00:39:50,640 --> 00:39:54,900
analyzed the rom using that i was able

968
00:39:53,160 --> 00:39:57,330
to find a technique that I could glitch

969
00:39:54,900 --> 00:40:00,570
into the chip and get code execution on

970
00:39:57,330 --> 00:40:02,610
the chip and then I had the chip jump

971
00:40:00,570 --> 00:40:04,860
out its memory so then I was able to

972
00:40:02,610 --> 00:40:07,260
compare the exact ROM contents with the

973
00:40:04,860 --> 00:40:09,030
optically extracted ROM contents and in

974
00:40:07,260 --> 00:40:12,570
the picture I've marked with red squares

975
00:40:09,030 --> 00:40:14,130
every bit that I had an error on so out

976
00:40:12,570 --> 00:40:17,580
of two hundred and sixty thousand bits

977
00:40:14,130 --> 00:40:20,070
there were 105 errors only one byte had

978
00:40:17,580 --> 00:40:21,480
more than one bit flipped in it so

979
00:40:20,070 --> 00:40:25,860
usually when you have an air it's going

980
00:40:21,480 --> 00:40:27,390
to be a one bit error the error rate was

981
00:40:25,860 --> 00:40:28,650
quite good you can see some of the years

982
00:40:27,390 --> 00:40:31,470
are clustered you know because of

983
00:40:28,650 --> 00:40:32,700
dirtiness or whatever but yeah it was it

984
00:40:31,470 --> 00:40:35,609
was perfectly fine for being able to

985
00:40:32,700 --> 00:40:36,000
analyze and and proceed with the rest of

986
00:40:35,610 --> 00:40:38,370
the work

987
00:40:36,000 --> 00:40:40,320
so my advice when you're trying to do

988
00:40:38,370 --> 00:40:42,420
the ROM extraction it's good if you're

989
00:40:40,320 --> 00:40:43,710
doing the whole process yourself because

990
00:40:42,420 --> 00:40:45,270
there is a balance between how good

991
00:40:43,710 --> 00:40:46,680
you're imaging and delayering of the

992
00:40:45,270 --> 00:40:48,540
chip is and how easily the bits can be

993
00:40:46,680 --> 00:40:50,490
extracted so if you have different

994
00:40:48,540 --> 00:40:52,950
people doing the lab work or

995
00:40:50,490 --> 00:40:56,040
the analysis work the people doing the

996
00:40:52,950 --> 00:40:57,330
lab work are going to see some sort of

997
00:40:56,040 --> 00:40:58,740
contrast in the bits and they're going

998
00:40:57,330 --> 00:41:00,330
to say it's good enough and the people

999
00:40:58,740 --> 00:41:02,939
doing the analysis are going to say it's

1000
00:41:00,330 --> 00:41:04,319
not 100% perfect go back and do it again

1001
00:41:02,940 --> 00:41:05,820
but when you're doing it yourself you

1002
00:41:04,320 --> 00:41:07,890
really get a feel for the trade-off or

1003
00:41:05,820 --> 00:41:09,390
do I want to spend another day working

1004
00:41:07,890 --> 00:41:11,549
on trying to get better images of this

1005
00:41:09,390 --> 00:41:15,420
chip or do I spend a few hours instead

1006
00:41:11,550 --> 00:41:17,220
I'm just trying to extract the bits so

1007
00:41:15,420 --> 00:41:19,430
inside of the lab what do we need we

1008
00:41:17,220 --> 00:41:22,700
need the chemicals for the decapsulation

1009
00:41:19,430 --> 00:41:27,149
the microscope and camera as I mentioned

1010
00:41:22,700 --> 00:41:29,368
for delayering more acids possibly a CMP

1011
00:41:27,150 --> 00:41:31,350
polisher and other delayering technique

1012
00:41:29,369 --> 00:41:33,270
that can be used as the reactive ion

1013
00:41:31,350 --> 00:41:35,730
etching I didn't get into that here

1014
00:41:33,270 --> 00:41:37,410
really but depending on the scale what

1015
00:41:35,730 --> 00:41:40,020
you're doing and your ambition this can

1016
00:41:37,410 --> 00:41:44,118
be done in garage like my my home lab is

1017
00:41:40,020 --> 00:41:46,650
is in my my shop on my property at home

1018
00:41:44,119 --> 00:41:48,660
the difficulties in and trying to do the

1019
00:41:46,650 --> 00:41:50,520
extraction process the the D layering is

1020
00:41:48,660 --> 00:41:52,200
tricky you you don't necessarily have a

1021
00:41:50,520 --> 00:41:53,430
lot of precise control for how much

1022
00:41:52,200 --> 00:41:55,560
material removing from the chip

1023
00:41:53,430 --> 00:41:57,118
especially when you're wet etching so

1024
00:41:55,560 --> 00:41:59,160
there's a little bit of an art to trying

1025
00:41:57,119 --> 00:42:04,080
to get your temperature and your timing

1026
00:41:59,160 --> 00:42:06,000
and everything exactly right also if

1027
00:42:04,080 --> 00:42:07,319
you're working with an implant ROM now

1028
00:42:06,000 --> 00:42:08,820
you have to do another set of edging

1029
00:42:07,320 --> 00:42:10,740
after you've done the D layering so that

1030
00:42:08,820 --> 00:42:12,900
adds another place where where you might

1031
00:42:10,740 --> 00:42:14,759
have to tweak it a little bit and then

1032
00:42:12,900 --> 00:42:16,619
the biggest difficulty that I run into

1033
00:42:14,760 --> 00:42:18,390
now is the feature science because the

1034
00:42:16,619 --> 00:42:20,640
technology is just so small that in my

1035
00:42:18,390 --> 00:42:22,890
lab with optical microscopes I'm not

1036
00:42:20,640 --> 00:42:24,930
able anymore to see the feature size of

1037
00:42:22,890 --> 00:42:26,250
some of the the smallest chips so that

1038
00:42:24,930 --> 00:42:28,080
means you have to process the chip and

1039
00:42:26,250 --> 00:42:31,470
they get it imaged on an honest AM or a

1040
00:42:28,080 --> 00:42:33,270
fib or something like that wrong might

1041
00:42:31,470 --> 00:42:37,379
be encrypted also so that can be an

1042
00:42:33,270 --> 00:42:39,030
issue depending on the ROM it could be a

1043
00:42:37,380 --> 00:42:40,650
problem lot lots of the ROM encryption

1044
00:42:39,030 --> 00:42:43,560
isn't very strong so lots of time that's

1045
00:42:40,650 --> 00:42:45,630
not a real huge issue so here's an

1046
00:42:43,560 --> 00:42:47,970
example of a chip that I has a couple of

1047
00:42:45,630 --> 00:42:49,500
issues so one of the first issues that I

1048
00:42:47,970 --> 00:42:51,810
was delaying using a hydrofluoric acid

1049
00:42:49,500 --> 00:42:54,359
and came over uneven and the second

1050
00:42:51,810 --> 00:42:55,980
issue is that the the size of it is so

1051
00:42:54,359 --> 00:42:58,230
small that this is the best photo that I

1052
00:42:55,980 --> 00:42:59,850
could get with a microscope and we can

1053
00:42:58,230 --> 00:43:01,590
sort of see some patterns that let us

1054
00:42:59,850 --> 00:43:02,520
know that there are bits there but we're

1055
00:43:01,590 --> 00:43:03,790
not going to be able to see it well

1056
00:43:02,520 --> 00:43:05,800
enough here to actually be able

1057
00:43:03,790 --> 00:43:09,700
tract the bits so this would have to get

1058
00:43:05,800 --> 00:43:12,100
be layered again and done in a sound so

1059
00:43:09,700 --> 00:43:14,109
yeah again the ROM encryption it's a

1060
00:43:12,100 --> 00:43:15,670
thing but it might be a problem where it

1061
00:43:14,110 --> 00:43:18,430
might not lots of the ROM encryption is

1062
00:43:15,670 --> 00:43:19,510
really terrible you'll be able to

1063
00:43:18,430 --> 00:43:20,919
download these slides if you want links

1064
00:43:19,510 --> 00:43:22,810
to any of these so I've got some links

1065
00:43:20,920 --> 00:43:26,140
for some extra resources about this sort

1066
00:43:22,810 --> 00:43:30,090
of both the sort of work rom par is

1067
00:43:26,140 --> 00:43:30,089
another interesting tool to check into

1068
00:43:30,150 --> 00:43:34,210
some different examples of optical rom

1069
00:43:32,770 --> 00:43:36,270
extractor you can find online some of

1070
00:43:34,210 --> 00:43:38,860
these blog posts are really quite nice

1071
00:43:36,270 --> 00:43:43,660
great descriptions of how they they did

1072
00:43:38,860 --> 00:43:45,790
everything and yeah other other place we

1073
00:43:43,660 --> 00:43:48,009
might see bits this is an image of a CD

1074
00:43:45,790 --> 00:43:49,870
so you're probably not going to want to

1075
00:43:48,010 --> 00:43:51,490
listen to your music like this it'll

1076
00:43:49,870 --> 00:43:53,109
take awhile to extract the bits but we

1077
00:43:51,490 --> 00:43:54,549
you know it's essentially the same

1078
00:43:53,110 --> 00:43:57,580
process is reading are all I'm really we

1079
00:43:54,550 --> 00:43:59,770
we can see the the lands of the pits or

1080
00:43:57,580 --> 00:44:02,770
you can also get a scarf from Knick

1081
00:43:59,770 --> 00:44:05,950
Knack and they actually knit the the

1082
00:44:02,770 --> 00:44:07,930
binary pattern into the scarf so you can

1083
00:44:05,950 --> 00:44:10,509
download the the binary file for this

1084
00:44:07,930 --> 00:44:11,830
wrong and you can actually go 1 0 1 0

1085
00:44:10,510 --> 00:44:16,000
and you can see that it does match the

1086
00:44:11,830 --> 00:44:17,830
actual pattern on the scarf so yeah if

1087
00:44:16,000 --> 00:44:19,000
you want to download the the slides but

1088
00:44:17,830 --> 00:44:20,410
this I had to go through it fairly quick

1089
00:44:19,000 --> 00:44:23,830
there's a link to download the slides

1090
00:44:20,410 --> 00:44:26,589
also I've put the the tools that I use

1091
00:44:23,830 --> 00:44:30,460
for the bit extraction and the decoding

1092
00:44:26,590 --> 00:44:32,470
online there is source code it's written

1093
00:44:30,460 --> 00:44:34,960
in C++ builder 6 so probably nobody

1094
00:44:32,470 --> 00:44:36,640
really wants to work with that today but

1095
00:44:34,960 --> 00:44:39,100
it is there if you want to play with it

1096
00:44:36,640 --> 00:44:40,839
or or check it out with tor or whatever

1097
00:44:39,100 --> 00:44:45,330
I'd be interested in any feedback on

1098
00:44:40,840 --> 00:44:45,330
that and I think that's my time

