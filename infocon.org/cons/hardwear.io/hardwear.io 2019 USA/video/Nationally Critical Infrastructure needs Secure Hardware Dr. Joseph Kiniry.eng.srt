1
00:00:02,570 --> 00:00:07,068
about that yeah but today so well what

2
00:00:05,450 --> 00:00:10,540
do you alright thanks

3
00:00:07,069 --> 00:00:14,059
yeah so I'm Joe I'm down from Portland

4
00:00:10,540 --> 00:00:17,060
up there I work at a company called

5
00:00:14,059 --> 00:00:19,009
Galois Galois is named after the French

6
00:00:17,060 --> 00:00:21,918
mathematician it's not going well like

7
00:00:19,009 --> 00:00:24,829
the cigarette skala got a lot like every

8
00:00:21,919 --> 00:00:27,770
scale WA and Galois has been around for

9
00:00:24,829 --> 00:00:29,300
20 years and we do basically R&D for

10
00:00:27,770 --> 00:00:31,669
national security

11
00:00:29,300 --> 00:00:34,010
Galois gives birth to a new company

12
00:00:31,669 --> 00:00:35,060
about every year commercializing work

13
00:00:34,010 --> 00:00:37,780
that we've mainly done for the

14
00:00:35,060 --> 00:00:40,280
government and the most recent company

15
00:00:37,780 --> 00:00:41,690
that's or one of the most recent

16
00:00:40,280 --> 00:00:44,000
companies that it's given birth to is

17
00:00:41,690 --> 00:00:45,980
called free and fair and I run free and

18
00:00:44,000 --> 00:00:48,530
fair and free and fair focus is on

19
00:00:45,980 --> 00:00:51,199
helping make democracies more

20
00:00:48,530 --> 00:00:52,790
trustworthy so today I'm going to talk

21
00:00:51,200 --> 00:00:55,010
about naturally critical infrastructure

22
00:00:52,790 --> 00:00:57,950
needs secure hardware I come at this

23
00:00:55,010 --> 00:01:01,309
from the perspective of first as a as an

24
00:00:57,950 --> 00:01:03,110
old academic I used to be a professor of

25
00:01:01,310 --> 00:01:07,729
computer science in Europe for many

26
00:01:03,110 --> 00:01:11,780
years including in in the Netherlands in

27
00:01:07,729 --> 00:01:14,479
Nijmegen and and in that role I was

28
00:01:11,780 --> 00:01:16,580
often asked to advise governments about

29
00:01:14,479 --> 00:01:18,350
matters of information security and

30
00:01:16,580 --> 00:01:20,630
cyber security particularly in countries

31
00:01:18,350 --> 00:01:22,759
like the Netherlands or in Denmark where

32
00:01:20,630 --> 00:01:26,179
you have things like nationalized health

33
00:01:22,760 --> 00:01:27,979
care and integrated government services

34
00:01:26,180 --> 00:01:30,080
and the government would give you

35
00:01:27,979 --> 00:01:32,330
something like a smart card to access

36
00:01:30,080 --> 00:01:34,039
your services and so if you're an

37
00:01:32,330 --> 00:01:36,380
information security professional and

38
00:01:34,040 --> 00:01:38,030
you're a public employee you often get

39
00:01:36,380 --> 00:01:41,119
called up by ministers and they ask you

40
00:01:38,030 --> 00:01:43,610
to look into things and then when I came

41
00:01:41,119 --> 00:01:48,080
back to the USA about six years ago and

42
00:01:43,610 --> 00:01:50,450
joined Galois I I began to work more for

43
00:01:48,080 --> 00:01:53,960
our government here in the USA

44
00:01:50,450 --> 00:01:55,760
and in particular I work a lot for the

45
00:01:53,960 --> 00:01:58,039
intelligence community and for the

46
00:01:55,760 --> 00:02:00,710
Department of Defense and so nothing I'm

47
00:01:58,040 --> 00:02:02,420
saying today is is fishy or secret or

48
00:02:00,710 --> 00:02:03,979
anything like this in fact I'm not going

49
00:02:02,420 --> 00:02:05,299
to touch up on anything it gets even

50
00:02:03,979 --> 00:02:07,580
close to that but I will tell some

51
00:02:05,299 --> 00:02:09,470
stories that relate upon that and and

52
00:02:07,580 --> 00:02:11,989
fundamentally what this is about is is

53
00:02:09,470 --> 00:02:14,540
me sort of as an academic I always

54
00:02:11,989 --> 00:02:16,069
thought that folks in government and

55
00:02:14,540 --> 00:02:18,620
folks building big

56
00:02:16,069 --> 00:02:20,738
very very expensive military systems and

57
00:02:18,620 --> 00:02:23,060
things that go into space and all that

58
00:02:20,739 --> 00:02:24,709
would be doing a really good job and

59
00:02:23,060 --> 00:02:28,249
their systems would be really secure and

60
00:02:24,709 --> 00:02:30,859
what I found is that's very not true it

61
00:02:28,249 --> 00:02:33,319
is remarkable how we can spend enormous

62
00:02:30,859 --> 00:02:34,879
amounts of money and defense contractors

63
00:02:33,319 --> 00:02:38,599
whom I really don't like working with

64
00:02:34,879 --> 00:02:40,399
too much can build the massive military

65
00:02:38,599 --> 00:02:41,899
systems which we don't work on we don't

66
00:02:40,400 --> 00:02:45,290
like any of that stuff we do only

67
00:02:41,900 --> 00:02:47,180
defensive work can spend an enormous

68
00:02:45,290 --> 00:02:49,608
amount of money building a system and

69
00:02:47,180 --> 00:02:52,219
then never pay attention to

70
00:02:49,609 --> 00:02:55,489
cybersecurity aspects of it like it's

71
00:02:52,219 --> 00:02:57,290
quite remarkable you know we have folks

72
00:02:55,489 --> 00:02:59,180
in the field and things like things that

73
00:02:57,290 --> 00:03:01,010
fly and things that move and they have

74
00:02:59,180 --> 00:03:03,379
computers all over them and yet their

75
00:03:01,010 --> 00:03:06,019
attack services are gigantic and there's

76
00:03:03,379 --> 00:03:07,909
not a cryptographer on staff so some of

77
00:03:06,019 --> 00:03:09,439
this talk is reflections upon that how

78
00:03:07,909 --> 00:03:11,388
it connects to the matters of hardware

79
00:03:09,439 --> 00:03:14,030
security in particular so first let's

80
00:03:11,389 --> 00:03:16,189
start with a back story which is about

81
00:03:14,030 --> 00:03:17,569
cybersecurity of national and critical

82
00:03:16,189 --> 00:03:19,668
infrastructure that I've worked on in

83
00:03:17,569 --> 00:03:22,040
the past where that colleagues of mine

84
00:03:19,669 --> 00:03:24,199
have worked on a Galois and the idea

85
00:03:22,040 --> 00:03:25,790
here is that we have assurance cases of

86
00:03:24,199 --> 00:03:27,319
these systems that is to say you're

87
00:03:25,790 --> 00:03:29,750
giving evidence that the system is

88
00:03:27,319 --> 00:03:31,909
correct and secure and unfortunately

89
00:03:29,750 --> 00:03:34,689
those assurance cases are more like

90
00:03:31,909 --> 00:03:37,879
assurance castles that are built on sand

91
00:03:34,689 --> 00:03:39,650
sand here is not just a metaphor for

92
00:03:37,879 --> 00:03:42,828
sand castle which I'll show a picture of

93
00:03:39,650 --> 00:03:45,799
but also riffs on matters of silicon so

94
00:03:42,829 --> 00:03:49,549
if we look at a typical application

95
00:03:45,799 --> 00:03:51,500
stack it has some it has an app it has

96
00:03:49,549 --> 00:03:53,180
some software there's some firmware in

97
00:03:51,500 --> 00:03:54,939
there there's some hardware in there and

98
00:03:53,180 --> 00:03:58,430
you ask yourself where's the security

99
00:03:54,939 --> 00:03:59,719
all right every day like just today in

100
00:03:58,430 --> 00:04:01,939
the news and my Twitter for you there's

101
00:03:59,719 --> 00:04:04,819
two massive new security things going on

102
00:04:01,939 --> 00:04:07,668
and you look at it you say gosh you know

103
00:04:04,819 --> 00:04:10,548
where are things going wrong why are we

104
00:04:07,669 --> 00:04:13,699
playing whack-a-mole with security

105
00:04:10,549 --> 00:04:15,949
vulnerabilities all the time and the the

106
00:04:13,699 --> 00:04:17,509
problem here is that let me show you

107
00:04:15,949 --> 00:04:20,630
until you by virtue of a case study

108
00:04:17,509 --> 00:04:23,360
here's a case study this is a gate

109
00:04:20,630 --> 00:04:25,699
leaving a building that visited that

110
00:04:23,360 --> 00:04:28,410
happens to be somewhere in the Northeast

111
00:04:25,699 --> 00:04:30,750
United States and as you can see

112
00:04:28,410 --> 00:04:32,730
it's meant to have people move through

113
00:04:30,750 --> 00:04:34,620
that gate and check out and check into

114
00:04:32,730 --> 00:04:36,600
the installation but of course people

115
00:04:34,620 --> 00:04:37,860
have just you know when it snows you can

116
00:04:36,600 --> 00:04:38,340
see that people just drive through the

117
00:04:37,860 --> 00:04:41,810
field

118
00:04:38,340 --> 00:04:45,090
it's a it's an example of a security

119
00:04:41,810 --> 00:04:48,150
idea that was put in place with a

120
00:04:45,090 --> 00:04:50,909
certain framing and of course everyone

121
00:04:48,150 --> 00:04:54,510
around that system whether adversarial

122
00:04:50,910 --> 00:04:58,140
or not find ways to to bypass the

123
00:04:54,510 --> 00:04:59,670
security this is a physical metaphor for

124
00:04:58,140 --> 00:05:01,710
something called a reference monitor

125
00:04:59,670 --> 00:05:04,350
which is a kind of digital security

126
00:05:01,710 --> 00:05:06,810
system that you use in the military to

127
00:05:04,350 --> 00:05:09,330
sort of keep secrets secret okay

128
00:05:06,810 --> 00:05:10,590
so a good reference monitor is not this

129
00:05:09,330 --> 00:05:13,830
right it's not the kind of thing that

130
00:05:10,590 --> 00:05:15,900
you can drive around in in in fact it's

131
00:05:13,830 --> 00:05:18,120
something that's non by passable so if

132
00:05:15,900 --> 00:05:20,429
you don't have the right you shouldn't

133
00:05:18,120 --> 00:05:21,750
be able to get the wrong data you can

134
00:05:20,430 --> 00:05:24,270
actually make sure that it behaves

135
00:05:21,750 --> 00:05:27,930
properly so it's a value it's a value it

136
00:05:24,270 --> 00:05:29,219
available it's always invoked that is to

137
00:05:27,930 --> 00:05:30,690
say it always it provides a barrier

138
00:05:29,220 --> 00:05:32,310
between you and the data you're

139
00:05:30,690 --> 00:05:34,860
interested in and it can't be tampered

140
00:05:32,310 --> 00:05:37,470
with now one of the case studies I did

141
00:05:34,860 --> 00:05:39,450
in this or my colleagues did in this is

142
00:05:37,470 --> 00:05:41,400
to build one of these kinds of systems

143
00:05:39,450 --> 00:05:43,140
for the intelligence community because

144
00:05:41,400 --> 00:05:46,969
it's called the Galois trusted services

145
00:05:43,140 --> 00:05:50,400
engine this is maybe 12 years ago or so

146
00:05:46,970 --> 00:05:53,370
this is a this is a high assurance Mills

147
00:05:50,400 --> 00:05:56,669
system that's going to basically permit

148
00:05:53,370 --> 00:05:59,100
you to have top-secret data and normal

149
00:05:56,669 --> 00:06:01,080
data on the same device that's the key

150
00:05:59,100 --> 00:06:03,840
idea you see people carry around two

151
00:06:01,080 --> 00:06:06,419
phones you know a phone for business and

152
00:06:03,840 --> 00:06:08,489
a phone for pleasure so to speak more

153
00:06:06,419 --> 00:06:10,289
and more especially in government

154
00:06:08,490 --> 00:06:13,050
settings when you have people dealing

155
00:06:10,290 --> 00:06:14,760
with matters of Secrets they don't like

156
00:06:13,050 --> 00:06:16,860
carrying around their two three and four

157
00:06:14,760 --> 00:06:19,110
devices they would like to have one

158
00:06:16,860 --> 00:06:21,240
device that they can do all their stuff

159
00:06:19,110 --> 00:06:22,830
on all their magic stuff on and the

160
00:06:21,240 --> 00:06:24,630
secret stay secret and everything else

161
00:06:22,830 --> 00:06:27,210
is okay so that's what this is meant to

162
00:06:24,630 --> 00:06:28,830
bill but every time they have one of

163
00:06:27,210 --> 00:06:30,299
these bills it's basically a bunch of

164
00:06:28,830 --> 00:06:32,219
guys you know in a military industrial

165
00:06:30,300 --> 00:06:34,470
defense contractor get together and

166
00:06:32,220 --> 00:06:37,560
write some undocumented C code and it

167
00:06:34,470 --> 00:06:38,760
doesn't work and so they hired us to do

168
00:06:37,560 --> 00:06:41,110
it right now

169
00:06:38,760 --> 00:06:44,110
the the means by which you do it right

170
00:06:41,110 --> 00:06:45,580
in this setting is quite out there it's

171
00:06:44,110 --> 00:06:47,199
the kind of thing we normally do at

172
00:06:45,580 --> 00:06:49,780
Galois but most of the world doesn't do

173
00:06:47,199 --> 00:06:51,819
which involves things like writing a

174
00:06:49,780 --> 00:06:54,520
high-level model of the system in

175
00:06:51,819 --> 00:06:56,520
mathematics in logic in higher order

176
00:06:54,520 --> 00:07:00,120
logic talking about the system's

177
00:06:56,520 --> 00:07:02,469
behavioral aspects how does it operate

178
00:07:00,120 --> 00:07:05,139
talking about its security properties

179
00:07:02,469 --> 00:07:07,300
and reasoning about that particular

180
00:07:05,139 --> 00:07:10,060
model and then you refine that and turn

181
00:07:07,300 --> 00:07:11,889
it into a more precise model that gets

182
00:07:10,060 --> 00:07:13,509
lower and lower down towards something

183
00:07:11,889 --> 00:07:16,120
that you could implement and you do

184
00:07:13,509 --> 00:07:18,370
mathematics to prove that every time you

185
00:07:16,120 --> 00:07:20,889
add more details about the system you

186
00:07:18,370 --> 00:07:22,270
never break your original claims that

187
00:07:20,889 --> 00:07:25,120
you made about the system in particular

188
00:07:22,270 --> 00:07:27,580
security claims but then in the end you

189
00:07:25,120 --> 00:07:29,710
write some code to implement the thing

190
00:07:27,580 --> 00:07:31,330
and back in those days the code would be

191
00:07:29,710 --> 00:07:33,190
very small and you'd stare at the code

192
00:07:31,330 --> 00:07:35,560
and you'd stare at the mathematics and

193
00:07:33,190 --> 00:07:38,590
you'd say those look the same now that

194
00:07:35,560 --> 00:07:41,229
was dissatisfactory and in fact this gap

195
00:07:38,590 --> 00:07:43,239
this human review gap is what has

196
00:07:41,229 --> 00:07:45,460
subsequently funded over ten years of

197
00:07:43,240 --> 00:07:47,590
work at Galois in being able to do this

198
00:07:45,460 --> 00:07:49,060
automatically so we have tools that are

199
00:07:47,590 --> 00:07:51,099
available some of which are open source

200
00:07:49,060 --> 00:07:53,340
that you can download right now that

201
00:07:51,099 --> 00:07:55,539
lets you for example consume C code and

202
00:07:53,340 --> 00:07:57,460
reason about its correctness with

203
00:07:55,539 --> 00:07:59,680
regards to mathematical models or other

204
00:07:57,460 --> 00:08:02,109
pieces of C code we use that regularly

205
00:07:59,680 --> 00:08:04,839
on crypto and all kinds of other stuff

206
00:08:02,110 --> 00:08:06,580
but the problem with this process at

207
00:08:04,839 --> 00:08:08,409
least in the in the in the framing of

208
00:08:06,580 --> 00:08:10,839
software universe even when you do

209
00:08:08,409 --> 00:08:13,089
something this complicated is that if

210
00:08:10,839 --> 00:08:15,129
you just test the system in the end then

211
00:08:13,089 --> 00:08:17,050
you you know your worry is have you

212
00:08:15,129 --> 00:08:19,150
tested enough and if you do all this

213
00:08:17,050 --> 00:08:22,240
math you're worried about does a math

214
00:08:19,150 --> 00:08:23,739
accurately reflect the world so this is

215
00:08:22,240 --> 00:08:26,889
like best in the world

216
00:08:23,740 --> 00:08:29,199
circa 12 years ago and yet we still have

217
00:08:26,889 --> 00:08:31,659
concerns about it but a fundamental

218
00:08:29,199 --> 00:08:36,010
concern about it is the fact that this

219
00:08:31,659 --> 00:08:39,279
code runs on a CPU and we have to make

220
00:08:36,010 --> 00:08:41,708
assumptions about what that CPU does in

221
00:08:39,279 --> 00:08:44,620
order to have any claims about how the

222
00:08:41,708 --> 00:08:46,449
code behaves you know all of us you know

223
00:08:44,620 --> 00:08:48,190
if when I whenever I look at a random

224
00:08:46,449 --> 00:08:50,649
piece of C code on github

225
00:08:48,190 --> 00:08:52,390
I often kind of throw up a little bit in

226
00:08:50,649 --> 00:08:53,870
my mouth because you know C is bad

227
00:08:52,390 --> 00:08:55,160
enough to start with

228
00:08:53,870 --> 00:08:56,930
and then people think they understand

229
00:08:55,160 --> 00:08:59,060
see and all its undefined behaviors and

230
00:08:56,930 --> 00:09:01,189
then you're running it on a CPU that you

231
00:08:59,060 --> 00:09:03,529
don't even trust so let's see where we

232
00:09:01,190 --> 00:09:06,020
can go from here the code has to run in

233
00:09:03,529 --> 00:09:07,910
general in most settings on an OS so

234
00:09:06,020 --> 00:09:10,760
what kinds of OS can we trust I'm

235
00:09:07,910 --> 00:09:13,010
building up my stack of assurance here

236
00:09:10,760 --> 00:09:15,550
I'm showing you all the assumptions we

237
00:09:13,010 --> 00:09:18,680
have to make even on the ultra high-end

238
00:09:15,550 --> 00:09:20,689
building systems for certain pieces in

239
00:09:18,680 --> 00:09:23,449
government we're secrets really matter

240
00:09:20,690 --> 00:09:26,240
for example well you have all kinds of

241
00:09:23,450 --> 00:09:28,070
odd Lois's out there monolithic crappy

242
00:09:26,240 --> 00:09:29,810
OS is like we mostly live with today

243
00:09:28,070 --> 00:09:31,279
live on the left side of the charts

244
00:09:29,810 --> 00:09:33,380
wherein if you start with your

245
00:09:31,279 --> 00:09:35,450
application and you're eventually doing

246
00:09:33,380 --> 00:09:37,850
something down here to compute in your

247
00:09:35,450 --> 00:09:39,860
application about secrets and stuff is

248
00:09:37,850 --> 00:09:41,960
flying over a network basically you're

249
00:09:39,860 --> 00:09:43,940
going through millions and millions of

250
00:09:41,960 --> 00:09:46,400
lines of code that nobody understands

251
00:09:43,940 --> 00:09:48,770
and nobody trusts in a secure domain

252
00:09:46,400 --> 00:09:50,930
system where you're gonna deal with an

253
00:09:48,770 --> 00:09:53,569
OS that you understand a lot better you

254
00:09:50,930 --> 00:09:55,910
get a nice clean architecture you don't

255
00:09:53,570 --> 00:09:58,580
have this kind of craziness it's a much

256
00:09:55,910 --> 00:10:00,290
smaller system it doesn't have to run on

257
00:09:58,580 --> 00:10:02,779
all kinds of crazy devices in the

258
00:10:00,290 --> 00:10:04,310
universe and you end up with something

259
00:10:02,779 --> 00:10:05,540
that's much more reasonable this is

260
00:10:04,310 --> 00:10:08,420
called the mills based approach to

261
00:10:05,540 --> 00:10:10,939
operating systems so you know you got

262
00:10:08,420 --> 00:10:12,380
crappy stuff we use all the time stuff

263
00:10:10,940 --> 00:10:15,080
that you could build for really secret

264
00:10:12,380 --> 00:10:16,580
cases and a whole bunch of operating

265
00:10:15,080 --> 00:10:17,690
systems out there in the world that sort

266
00:10:16,580 --> 00:10:19,760
of give you different levels of

267
00:10:17,690 --> 00:10:22,760
assurance with different amounts of

268
00:10:19,760 --> 00:10:24,620
effort right so like Linux or even

269
00:10:22,760 --> 00:10:26,810
SELinux is down here in the lower

270
00:10:24,620 --> 00:10:28,700
left-hand corner it's sort of better

271
00:10:26,810 --> 00:10:30,650
than Linux but only barely gives you

272
00:10:28,700 --> 00:10:32,240
some extra access control and then you

273
00:10:30,650 --> 00:10:33,800
go up through these stairs of stuff that

274
00:10:32,240 --> 00:10:35,620
most people have never heard of like

275
00:10:33,800 --> 00:10:38,240
green hills and Wind River and Lynx

276
00:10:35,620 --> 00:10:40,070
where you get operating systems that

277
00:10:38,240 --> 00:10:41,750
give you greater and greater assurance

278
00:10:40,070 --> 00:10:43,820
about the world but in some sense

279
00:10:41,750 --> 00:10:45,290
they're less and less capable of doing

280
00:10:43,820 --> 00:10:49,970
anything and in the upper right hand

281
00:10:45,290 --> 00:10:52,310
corner or things like SEL for so even if

282
00:10:49,970 --> 00:10:54,350
I crawl all the way up here and I have a

283
00:10:52,310 --> 00:10:56,719
formally designed and formally assured

284
00:10:54,350 --> 00:10:58,310
operating system the formal assurance

285
00:10:56,720 --> 00:11:00,860
that operating system gives me is

286
00:10:58,310 --> 00:11:03,109
basically things like virtual memory

287
00:11:00,860 --> 00:11:04,559
works correctly and I guarantee I never

288
00:11:03,110 --> 00:11:08,219
will crash

289
00:11:04,559 --> 00:11:11,399
it doesn't actually say I'm an operating

290
00:11:08,219 --> 00:11:14,039
system it says I don't crash that's the

291
00:11:11,399 --> 00:11:15,749
best we can do in the setting so now

292
00:11:14,039 --> 00:11:17,249
I've built an application using all

293
00:11:15,749 --> 00:11:19,769
these fancy techniques that's meant to

294
00:11:17,249 --> 00:11:21,329
keep secrets I rendered on an operating

295
00:11:19,769 --> 00:11:23,279
system that's the best we can do in the

296
00:11:21,329 --> 00:11:25,289
world and all I can do is say I don't

297
00:11:23,279 --> 00:11:28,289
crash and then I'm running it on

298
00:11:25,289 --> 00:11:31,649
hardware so where is the hardware we can

299
00:11:28,289 --> 00:11:35,279
trust where do we build all this on top

300
00:11:31,649 --> 00:11:37,979
of something that executes because

301
00:11:35,279 --> 00:11:39,689
system assurance of that whole stack is

302
00:11:37,979 --> 00:11:41,999
about the assurance we have of the

303
00:11:39,689 --> 00:11:43,919
hardware and the firmware and the

304
00:11:41,999 --> 00:11:45,809
software and I gotta say as I move back

305
00:11:43,919 --> 00:11:47,459
into Hardware over the past six years

306
00:11:45,809 --> 00:11:49,139
and learn more and more about modern

307
00:11:47,459 --> 00:11:49,378
hardware because I got out of it for 20

308
00:11:49,139 --> 00:11:52,289
years

309
00:11:49,379 --> 00:11:54,539
it's a miracle anything works once you

310
00:11:52,289 --> 00:11:56,909
dig into it from this point of view so

311
00:11:54,539 --> 00:11:59,399
what we find is you know if you look at

312
00:11:56,909 --> 00:12:02,309
the stack of hardware that's out there

313
00:11:59,399 --> 00:12:04,589
macro scale and micro scale and the

314
00:12:02,309 --> 00:12:06,779
operating systems and applications we

315
00:12:04,589 --> 00:12:10,349
use every day I find it it's a miracle

316
00:12:06,779 --> 00:12:12,029
that it works and in particular when it

317
00:12:10,349 --> 00:12:13,739
comes to having any assurance about the

318
00:12:12,029 --> 00:12:17,129
system in other words me being able to

319
00:12:13,739 --> 00:12:19,979
say I guarantee that the secret data

320
00:12:17,129 --> 00:12:21,779
that this general has on this phone will

321
00:12:19,979 --> 00:12:24,959
remain secret forever I guarantee you

322
00:12:21,779 --> 00:12:26,999
you know my firstborn child I can't say

323
00:12:24,959 --> 00:12:29,939
that I mean I like my firstborn child

324
00:12:26,999 --> 00:12:31,709
and all that I love her but I can't say

325
00:12:29,939 --> 00:12:33,539
that it's not because I didn't do a good

326
00:12:31,709 --> 00:12:35,819
job with a heart this software in the

327
00:12:33,539 --> 00:12:38,879
firmware it's because the hardware

328
00:12:35,819 --> 00:12:41,159
doesn't make any promises at all me if

329
00:12:38,879 --> 00:12:43,470
you look at a typical hardware vendor

330
00:12:41,159 --> 00:12:47,220
spec sheet it says something like it

331
00:12:43,470 --> 00:12:50,339
sort of does about like this we think at

332
00:12:47,220 --> 00:12:52,679
one point in time in the past and you

333
00:12:50,339 --> 00:12:54,749
look at firmware spec sheets if you can

334
00:12:52,679 --> 00:12:56,279
ever get him and it basically says you

335
00:12:54,749 --> 00:12:58,859
will never learn anything about this

336
00:12:56,279 --> 00:13:00,689
firmware even if you licensed it and pay

337
00:12:58,859 --> 00:13:03,719
them to a giant pile of money and then

338
00:13:00,689 --> 00:13:06,059
of course software vendors say as is so

339
00:13:03,719 --> 00:13:07,649
I'm trying to build systems for really

340
00:13:06,059 --> 00:13:09,659
important clients that are really

341
00:13:07,649 --> 00:13:12,119
worried about losing money or lives and

342
00:13:09,659 --> 00:13:14,459
this is what I had to work with even in

343
00:13:12,119 --> 00:13:15,839
my setting tries me crazy I would use

344
00:13:14,459 --> 00:13:18,180
the f-word right now but someone's

345
00:13:15,839 --> 00:13:20,730
live-streaming me so

346
00:13:18,180 --> 00:13:22,949
basically system assurance is about the

347
00:13:20,730 --> 00:13:25,770
assurance of all that stack and all it's

348
00:13:22,950 --> 00:13:29,310
all faith-based right now we're so hosed

349
00:13:25,770 --> 00:13:32,010
like spectre and meltdown you're gonna

350
00:13:29,310 --> 00:13:34,589
get new side channels every ten days for

351
00:13:32,010 --> 00:13:38,040
the next ten years it is just a thing it

352
00:13:34,589 --> 00:13:42,480
is just awful so I gave a talk like this

353
00:13:38,040 --> 00:13:44,370
and you know concluded with assurance

354
00:13:42,480 --> 00:13:46,830
cases depend on evidence and right now

355
00:13:44,370 --> 00:13:48,270
the evidence is we suck right the

356
00:13:46,830 --> 00:13:49,470
software's terrible the firmware is

357
00:13:48,270 --> 00:13:51,930
terrible and the hardware doesn't make

358
00:13:49,470 --> 00:13:53,459
any promises even when we're doing all

359
00:13:51,930 --> 00:13:57,599
these high-end techniques we can build

360
00:13:53,459 --> 00:13:59,369
beautiful artifice --is that run and do

361
00:13:57,600 --> 00:14:01,410
is they promise and are based on math

362
00:13:59,370 --> 00:14:04,350
blah blah blah blah blah but then I run

363
00:14:01,410 --> 00:14:05,670
it on a gray market CPU that nobody

364
00:14:04,350 --> 00:14:08,279
understands how it operates

365
00:14:05,670 --> 00:14:10,529
so our assurance cases really are built

366
00:14:08,279 --> 00:14:13,050
on sand in the setting now the

367
00:14:10,529 --> 00:14:15,029
government and even private industry has

368
00:14:13,050 --> 00:14:19,740
cared about this for a number of years

369
00:14:15,029 --> 00:14:22,860
but for about 15 years the government

370
00:14:19,740 --> 00:14:26,370
has not funded hardly any considerable

371
00:14:22,860 --> 00:14:29,100
rd in hardware and in particular and

372
00:14:26,370 --> 00:14:31,800
hardware security there is a burst there

373
00:14:29,100 --> 00:14:35,970
was a huge burst of funding back in the

374
00:14:31,800 --> 00:14:36,959
mid 80s to the early 90s when the USA

375
00:14:35,970 --> 00:14:40,020
thought they were going to get their

376
00:14:36,959 --> 00:14:42,900
asses kicked by Japan and then basically

377
00:14:40,020 --> 00:14:44,339
we got out of the game didn't tell was

378
00:14:42,900 --> 00:14:46,020
doing their thing and turning they're

379
00:14:44,339 --> 00:14:48,209
cranking Moore's Law was working for

380
00:14:46,020 --> 00:14:49,770
everybody and nobody wanted to pay for

381
00:14:48,209 --> 00:14:51,420
security in the future so we build

382
00:14:49,770 --> 00:14:53,339
faster and faster processors

383
00:14:51,420 --> 00:14:57,209
occasionally throwing in some new CPUs

384
00:14:53,339 --> 00:14:57,620
and new hearts and we get what we have

385
00:14:57,209 --> 00:15:03,060
today

386
00:14:57,620 --> 00:15:05,400
which makes me sad so a reason behind

387
00:15:03,060 --> 00:15:07,650
this a reason that things are so bad

388
00:15:05,400 --> 00:15:10,400
today is that we have this broken

389
00:15:07,650 --> 00:15:13,819
bridges between worlds I mean for one

390
00:15:10,400 --> 00:15:16,770
you know as mentioned earlier today

391
00:15:13,820 --> 00:15:19,290
software engineers think in terms of

392
00:15:16,770 --> 00:15:21,420
software and hardware engineers think in

393
00:15:19,290 --> 00:15:22,920
terms of hardware and neither of them

394
00:15:21,420 --> 00:15:24,420
learn from each other and talk to each

395
00:15:22,920 --> 00:15:25,290
other even though they're doing the same

396
00:15:24,420 --> 00:15:29,250
kinds of things

397
00:15:25,290 --> 00:15:31,620
that's element 1 and element 2 is as you

398
00:15:29,250 --> 00:15:34,170
design a new piece of hardware

399
00:15:31,620 --> 00:15:38,130
openes like intel will publish these two

400
00:15:34,170 --> 00:15:41,520
volumes of 1,100 pages to describe the

401
00:15:38,130 --> 00:15:44,670
x86 system but it's in bad english

402
00:15:41,520 --> 00:15:45,900
it's not even self consistent and nobody

403
00:15:44,670 --> 00:15:50,310
can reason about it

404
00:15:45,900 --> 00:15:54,000
so some poor graduate student will be

405
00:15:50,310 --> 00:15:55,829
put on translating this 2,000 pages into

406
00:15:54,000 --> 00:15:57,810
mathematics so that someone can write a

407
00:15:55,830 --> 00:16:00,300
tool the reason about code on these

408
00:15:57,810 --> 00:16:02,520
architectures that literally happens

409
00:16:00,300 --> 00:16:07,069
this is one of these several theses on

410
00:16:02,520 --> 00:16:11,400
that particular topic so this is awful

411
00:16:07,070 --> 00:16:13,020
so the proposed solution about five

412
00:16:11,400 --> 00:16:15,540
years ago from some of us in the

413
00:16:13,020 --> 00:16:15,990
community was let's not do it this way

414
00:16:15,540 --> 00:16:19,410
anymore

415
00:16:15,990 --> 00:16:21,750
let's not write descriptions of

416
00:16:19,410 --> 00:16:25,170
processors in English and in word

417
00:16:21,750 --> 00:16:28,560
documents that have 4,000 requirements

418
00:16:25,170 --> 00:16:30,300
and build our CPUs out of a bunch of IP

419
00:16:28,560 --> 00:16:32,339
we threw together where the original

420
00:16:30,300 --> 00:16:34,849
designers no longer around and nobody

421
00:16:32,339 --> 00:16:40,290
understands it so please don't touch it

422
00:16:34,850 --> 00:16:42,839
instead let's start a fresh let's write

423
00:16:40,290 --> 00:16:45,930
down what our CPUs are meaning to do

424
00:16:42,839 --> 00:16:48,209
precisely to begin with and then let's

425
00:16:45,930 --> 00:16:50,729
build a new generation of design

426
00:16:48,209 --> 00:16:54,719
automation tools that understands the

427
00:16:50,730 --> 00:16:57,200
math and understand security and then

428
00:16:54,720 --> 00:17:00,810
turn the crank on a new generation of

429
00:16:57,200 --> 00:17:03,770
secure hardware so let's stop doing that

430
00:17:00,810 --> 00:17:06,149
and let's do something more intelligent

431
00:17:03,770 --> 00:17:08,670
we'll have a formal model that describes

432
00:17:06,150 --> 00:17:11,189
the particular processor that we're

433
00:17:08,670 --> 00:17:13,500
interested in in this case the ia-32 and

434
00:17:11,189 --> 00:17:15,449
we'll have a description of its behavior

435
00:17:13,500 --> 00:17:19,020
and of the claims you make around its

436
00:17:15,449 --> 00:17:22,770
security and then you can augment

437
00:17:19,020 --> 00:17:28,230
existing tooling so that in building a

438
00:17:22,770 --> 00:17:29,970
new chip you're not faced with like

439
00:17:28,230 --> 00:17:32,090
hardware does I'm gonna say things that

440
00:17:29,970 --> 00:17:35,790
are cheeky hardware design these days

441
00:17:32,090 --> 00:17:38,250
from me like the means by which they do

442
00:17:35,790 --> 00:17:41,730
what they call verification of CPUs

443
00:17:38,250 --> 00:17:43,830
these days tastes a lot like what we did

444
00:17:41,730 --> 00:17:49,049
in open source software

445
00:17:43,830 --> 00:17:51,539
testing in about 93 it's quite

446
00:17:49,049 --> 00:17:53,340
remarkable when you go in you see how

447
00:17:51,539 --> 00:17:55,230
hardware engineers puff out their chests

448
00:17:53,340 --> 00:17:57,360
and say I do formal kind of I do formal

449
00:17:55,230 --> 00:17:58,740
verification in my processor and then

450
00:17:57,360 --> 00:18:02,158
you go and you look and they're doing

451
00:17:58,740 --> 00:18:05,190
shitty unit testing it's just awful so

452
00:18:02,159 --> 00:18:07,500
the proposal is let's admit the set of

453
00:18:05,190 --> 00:18:08,850
tools which are quite fine and help you

454
00:18:07,500 --> 00:18:11,580
build things that are quite marvelous

455
00:18:08,850 --> 00:18:14,100
new processors but actually generate

456
00:18:11,580 --> 00:18:18,418
evidence that the processor is in fact

457
00:18:14,100 --> 00:18:20,490
what you think it is and has security so

458
00:18:18,419 --> 00:18:22,200
the implications of this would be you

459
00:18:20,490 --> 00:18:24,720
know we'd have a lot of decrease in

460
00:18:22,200 --> 00:18:27,269
waste and all this effort of translating

461
00:18:24,720 --> 00:18:29,100
English into something more formal and

462
00:18:27,269 --> 00:18:30,779
people trying to reverse engineer and

463
00:18:29,100 --> 00:18:32,428
understand how processors work and find

464
00:18:30,779 --> 00:18:34,260
hidden roms and everything else we'd

465
00:18:32,429 --> 00:18:35,909
have a more intelligent cost-effective

466
00:18:34,260 --> 00:18:37,980
co.design method so that you could

467
00:18:35,909 --> 00:18:40,830
actually have assurance with your thing

468
00:18:37,980 --> 00:18:43,889
as you build it and maybe if you made

469
00:18:40,830 --> 00:18:46,230
claims about the quality of your product

470
00:18:43,889 --> 00:18:49,260
that was measurable you could open up

471
00:18:46,230 --> 00:18:50,909
new markets and so like even these EDA

472
00:18:49,260 --> 00:18:53,340
tool vendors you know who sell these

473
00:18:50,909 --> 00:18:55,710
tools whose licenses go for hundreds of

474
00:18:53,340 --> 00:18:57,720
thousands of dollars per seat per year

475
00:18:55,710 --> 00:19:00,809
would be able to literally sell new

476
00:18:57,720 --> 00:19:03,929
versions and you know with proofs we

477
00:19:00,809 --> 00:19:05,940
guarantee it and be able to upsell so I

478
00:19:03,929 --> 00:19:07,620
you know we gave talks about this to

479
00:19:05,940 --> 00:19:09,149
places in government and alike and they

480
00:19:07,620 --> 00:19:10,168
look you know most people in the room

481
00:19:09,149 --> 00:19:12,090
said we were crazy

482
00:19:10,169 --> 00:19:13,169
there were F words thrown around it was

483
00:19:12,090 --> 00:19:15,389
a dumbass idea

484
00:19:13,169 --> 00:19:17,399
nobody would ever do it but certain

485
00:19:15,389 --> 00:19:19,168
people listened and some miracles

486
00:19:17,399 --> 00:19:22,529
happened so I'm gonna tell you about

487
00:19:19,169 --> 00:19:24,570
those miracles next so this was a 2014

488
00:19:22,529 --> 00:19:26,940
call to action let's do it this way

489
00:19:24,570 --> 00:19:29,340
let's get some more intelligence into

490
00:19:26,940 --> 00:19:32,070
how we build systems and so what

491
00:19:29,340 --> 00:19:34,049
happened is a program was created inside

492
00:19:32,070 --> 00:19:37,260
a DARPA which is the advanced research

493
00:19:34,049 --> 00:19:40,559
side of the DoD called SIF it's called

494
00:19:37,260 --> 00:19:43,320
SIF you notice I pronounced it'll sift

495
00:19:40,559 --> 00:19:47,820
with an extra s because the program

496
00:19:43,320 --> 00:19:49,710
manager is a Star Wars geek SIF stands

497
00:19:47,820 --> 00:19:52,860
for system security integrated through

498
00:19:49,710 --> 00:19:55,929
Hardware he he and others around him

499
00:19:52,860 --> 00:19:57,879
listened to those of us causing a fuss

500
00:19:55,929 --> 00:19:59,470
said maybe they have something to it

501
00:19:57,879 --> 00:20:02,408
because if you're gonna be able to build

502
00:19:59,470 --> 00:20:04,960
as we can today we can build formally

503
00:20:02,409 --> 00:20:06,639
assured software we can build formally

504
00:20:04,960 --> 00:20:08,440
assured for Hardware when I mean formal

505
00:20:06,639 --> 00:20:10,449
a shirt I mean I will bet a million

506
00:20:08,440 --> 00:20:12,460
dollars that the thing I just designed

507
00:20:10,450 --> 00:20:14,799
and built for you does exactly what I

508
00:20:12,460 --> 00:20:16,269
promised no more no less and doesn't

509
00:20:14,799 --> 00:20:18,580
have the following security flaws we can

510
00:20:16,269 --> 00:20:21,090
do that we have good people good tooling

511
00:20:18,580 --> 00:20:23,470
not many people can do it we can do it

512
00:20:21,090 --> 00:20:25,209
let's turn our attention to Hardware in

513
00:20:23,470 --> 00:20:26,710
the same way and so that's what SIF is

514
00:20:25,210 --> 00:20:28,360
about so let me tell you about sis is

515
00:20:26,710 --> 00:20:31,720
about how that changes the world with

516
00:20:28,360 --> 00:20:34,600
regards to secure Hardware SIF is

517
00:20:31,720 --> 00:20:37,899
basically security secure hardware for

518
00:20:34,600 --> 00:20:40,869
the win that's the core idea here the

519
00:20:37,899 --> 00:20:43,299
goal is to recognize the fact that

520
00:20:40,869 --> 00:20:45,939
software it's always going to suck if

521
00:20:43,299 --> 00:20:47,710
software is always going to suck we have

522
00:20:45,940 --> 00:20:49,950
to presume that it's chock-full of

523
00:20:47,710 --> 00:20:52,570
vulnerabilities you pick an average

524
00:20:49,950 --> 00:20:55,480
thousand line program it will have 50

525
00:20:52,570 --> 00:20:58,629
vulnerabilities ish so let's just assume

526
00:20:55,480 --> 00:21:01,029
that how do we fix that how do we build

527
00:20:58,629 --> 00:21:02,709
a system that can actually have greater

528
00:21:01,029 --> 00:21:04,840
assurance even the presence of crappy

529
00:21:02,710 --> 00:21:06,490
hardware well the only way I'm a crappy

530
00:21:04,840 --> 00:21:08,408
software the only way to do that is to

531
00:21:06,490 --> 00:21:10,210
go down to the hardware and build

532
00:21:08,409 --> 00:21:13,480
mechanisms in the hardware that can deal

533
00:21:10,210 --> 00:21:16,480
with the suck and that's what's it is so

534
00:21:13,480 --> 00:21:18,460
the idea is pick a bunch of

535
00:21:16,480 --> 00:21:20,110
vulnerability classes that we all make

536
00:21:18,460 --> 00:21:24,580
money off of but we're miserable about

537
00:21:20,110 --> 00:21:27,549
and challenge people who do hardware

538
00:21:24,580 --> 00:21:30,580
design and security to work together to

539
00:21:27,549 --> 00:21:32,230
build a new generation of CPUs that will

540
00:21:30,580 --> 00:21:35,730
make those vulnerabilities disappear

541
00:21:32,230 --> 00:21:40,539
and do it all open source open hardware

542
00:21:35,730 --> 00:21:42,610
so SIF focuses on doing that it focuses

543
00:21:40,539 --> 00:21:44,440
on in particular doing this on top of

544
00:21:42,610 --> 00:21:46,629
risk 5 which I'll tell you a little bit

545
00:21:44,440 --> 00:21:50,080
about the new kind of risk that's open

546
00:21:46,629 --> 00:21:52,509
and it's demonstrating all these CPUs on

547
00:21:50,080 --> 00:21:54,999
high-end FPGAs so these are all soft

548
00:21:52,509 --> 00:21:58,960
cores in this program we're not yet

549
00:21:54,999 --> 00:22:00,399
fabbing any CPUs there are now six teams

550
00:21:58,960 --> 00:22:02,590
that have been working on this for a

551
00:22:00,399 --> 00:22:06,489
year and a half and they're developing a

552
00:22:02,590 --> 00:22:09,580
total of eighteen CPUs essentially each

553
00:22:06,490 --> 00:22:12,309
team takes a baseline CPU

554
00:22:09,580 --> 00:22:15,070
which is either a microcontroller what's

555
00:22:12,309 --> 00:22:17,230
akin to a desktop processor and a server

556
00:22:15,070 --> 00:22:20,889
class processor which happened to be

557
00:22:17,230 --> 00:22:22,929
developed by my team and they augment

558
00:22:20,889 --> 00:22:25,570
them with their special magic pixie dust

559
00:22:22,929 --> 00:22:29,559
security each of which is using a very

560
00:22:25,570 --> 00:22:31,960
different technique and and we have to

561
00:22:29,559 --> 00:22:34,690
assess whether or not these secure CPUs

562
00:22:31,960 --> 00:22:37,119
are actually secure so again it's one

563
00:22:34,690 --> 00:22:40,869
32-bit microcontroller and then to

564
00:22:37,119 --> 00:22:45,100
64-bit CPUs one five-stage inorder CPU

565
00:22:40,869 --> 00:22:48,129
and one v stage out of five or six stage

566
00:22:45,100 --> 00:22:49,959
out of order CPU the security approach

567
00:22:48,129 --> 00:22:51,639
is being used here all over the map and

568
00:22:49,960 --> 00:22:54,759
many of them you would think are

569
00:22:51,639 --> 00:22:56,918
crazytown like and like all the CPUs

570
00:22:54,759 --> 00:22:59,039
have tagging tagging basically means you

571
00:22:56,919 --> 00:23:02,350
can associate with every word of memory

572
00:22:59,039 --> 00:23:05,019
metadata which is understandable by the

573
00:23:02,350 --> 00:23:08,049
hardware programmable in the hardware

574
00:23:05,019 --> 00:23:10,720
and lets you make decisions about access

575
00:23:08,049 --> 00:23:12,668
to an interpretation of that memory

576
00:23:10,720 --> 00:23:15,100
throughout the entire microarchitecture

577
00:23:12,669 --> 00:23:16,809
so for example if a piece of memory is

578
00:23:15,100 --> 00:23:19,149
tagged that it's owned by a certain

579
00:23:16,809 --> 00:23:20,908
process or a certain thread it can only

580
00:23:19,149 --> 00:23:25,149
be accessed in the following way as that

581
00:23:20,909 --> 00:23:29,080
data read from the memory flows through

582
00:23:25,149 --> 00:23:29,738
fetch and decode and cache the tag goes

583
00:23:29,080 --> 00:23:31,859
with it

584
00:23:29,739 --> 00:23:34,179
so this weaves through your entire

585
00:23:31,859 --> 00:23:36,730
microarchitecture these access control

586
00:23:34,179 --> 00:23:38,769
rules and policies we have new

587
00:23:36,730 --> 00:23:41,619
generations of enclaves how do you build

588
00:23:38,769 --> 00:23:44,499
a hardware Enclave that leverages

589
00:23:41,619 --> 00:23:46,570
firmware such that you can publish the

590
00:23:44,499 --> 00:23:49,570
entire design of the Enclave and yet it

591
00:23:46,570 --> 00:23:51,970
still works and I mean that way beyond

592
00:23:49,570 --> 00:23:53,908
anything we see out of somebody like arm

593
00:23:51,970 --> 00:23:57,340
or SGX

594
00:23:53,909 --> 00:24:00,609
insecure and then there's all kinds of

595
00:23:57,340 --> 00:24:02,738
crazy AI which I'm not fans of but

596
00:24:00,609 --> 00:24:04,989
there's a thing and there's novel crypto

597
00:24:02,739 --> 00:24:08,700
for example one team has decided to

598
00:24:04,989 --> 00:24:12,399
weave into the CPU lightweight crypto

599
00:24:08,700 --> 00:24:15,999
everywhere when I say everywhere I mean

600
00:24:12,399 --> 00:24:22,418
for example your instruction set

601
00:24:15,999 --> 00:24:23,410
encoding is encrypted and on the fly

602
00:24:22,419 --> 00:24:28,410
every

603
00:24:23,410 --> 00:24:28,410
ten milliseconds you change your keys

604
00:24:28,830 --> 00:24:34,389
and I said everywhere so that's not just

605
00:24:31,390 --> 00:24:38,220
there like your entire virtual memory

606
00:24:34,390 --> 00:24:42,010
map is Rhian coded every 10 milliseconds

607
00:24:38,220 --> 00:24:44,410
the data you hold in RAM is encrypted as

608
00:24:42,010 --> 00:24:46,510
well so it's just like it's like this

609
00:24:44,410 --> 00:24:48,220
cryptographic sledgehammer slammed all

610
00:24:46,510 --> 00:24:49,450
over the microarchitecture you think God

611
00:24:48,220 --> 00:24:52,210
that'll never work how you going to

612
00:24:49,450 --> 00:24:55,720
debug that and yet they haven't running

613
00:24:52,210 --> 00:24:58,360
it's a freaking miracle so that's it in

614
00:24:55,720 --> 00:25:01,090
a nutshell right now that sounds cool

615
00:24:58,360 --> 00:25:02,469
and here's the impact right so these see

616
00:25:01,090 --> 00:25:04,720
it's it's CPUs have to be backwards

617
00:25:02,470 --> 00:25:07,720
compatible literally we run Linux on

618
00:25:04,720 --> 00:25:10,270
them and if you've got an existing

619
00:25:07,720 --> 00:25:13,510
binary that has a vulnerability in it

620
00:25:10,270 --> 00:25:15,040
and you essentially you have configured

621
00:25:13,510 --> 00:25:17,890
the CPU to deal with that particular

622
00:25:15,040 --> 00:25:20,830
vulnerability then as soon as you run

623
00:25:17,890 --> 00:25:23,310
that code on this particular CPU that

624
00:25:20,830 --> 00:25:26,020
entire vulnerability class disappears

625
00:25:23,310 --> 00:25:29,050
now if a vulnerability in that

626
00:25:26,020 --> 00:25:31,720
particular code is attempt to be

627
00:25:29,050 --> 00:25:33,550
leveraged on the CPU each of the CPUs

628
00:25:31,720 --> 00:25:36,010
behaves in a different way some of them

629
00:25:33,550 --> 00:25:37,810
you know trap and respond some of them

630
00:25:36,010 --> 00:25:39,879
do mitigation there's all kinds of

631
00:25:37,810 --> 00:25:42,490
different techniques teams are using but

632
00:25:39,880 --> 00:25:45,040
in the main it means that if you do a

633
00:25:42,490 --> 00:25:47,680
buffer overflow it should never cause

634
00:25:45,040 --> 00:25:50,379
harm that's the very first set of

635
00:25:47,680 --> 00:25:52,180
vulnerability classes they tackle and in

636
00:25:50,380 --> 00:25:54,280
particular they're focusing on seven

637
00:25:52,180 --> 00:25:56,770
different vulnerability classes over the

638
00:25:54,280 --> 00:25:58,480
span of the around four year program the

639
00:25:56,770 --> 00:26:00,790
first two that they've tackled that

640
00:25:58,480 --> 00:26:02,860
we'll be demonstrating this year is all

641
00:26:00,790 --> 00:26:07,000
forms of memory errors and buffer errors

642
00:26:02,860 --> 00:26:10,959
should go away and all forms of digital

643
00:26:07,000 --> 00:26:15,580
and timing information leakage so no

644
00:26:10,960 --> 00:26:17,320
more timing attacks period questions are

645
00:26:15,580 --> 00:26:22,720
always welcome or you can throw things

646
00:26:17,320 --> 00:26:26,080
at me yes sir in the back these are

647
00:26:22,720 --> 00:26:31,180
being demonstrated on a Xilinx VCU 118

648
00:26:26,080 --> 00:26:33,189
it's a mid range fpga that has no arm

649
00:26:31,180 --> 00:26:36,250
processor on it so that we can do full

650
00:26:33,190 --> 00:26:37,179
custom Hardware on everything we have IP

651
00:26:36,250 --> 00:26:39,759
blocks

652
00:26:37,179 --> 00:26:42,219
added to the CPU so that it can do

653
00:26:39,759 --> 00:26:44,409
things like serial and Ethernet and a

654
00:26:42,219 --> 00:26:46,479
bit more I'll tell you a little bit more

655
00:26:44,409 --> 00:26:50,019
about it later the main problem with the

656
00:26:46,479 --> 00:26:53,619
vc 118 118 is it comes from Xilinx 1

657
00:26:50,019 --> 00:26:57,279
it's a problem and I just think yeah

658
00:26:53,619 --> 00:26:59,109
some products aren't very good and and -

659
00:26:57,279 --> 00:27:01,839
it's it's around 9000 dollars a pop

660
00:26:59,109 --> 00:27:03,189
which is not very democratic like if we

661
00:27:01,839 --> 00:27:05,739
all want to play with it right I mean

662
00:27:03,190 --> 00:27:07,200
you want a nice cool secure risk 5 on

663
00:27:05,739 --> 00:27:09,759
your desk at home to play with well

664
00:27:07,200 --> 00:27:11,019
$9,000 later you can have one I don't

665
00:27:09,759 --> 00:27:12,969
think that's very cool so we have a

666
00:27:11,019 --> 00:27:15,190
solution for that but that's what we're

667
00:27:12,969 --> 00:27:17,639
using at the moment I think I have

668
00:27:15,190 --> 00:27:20,739
pictures of them a little bit later

669
00:27:17,639 --> 00:27:23,379
now the security-related R&D that's

670
00:27:20,739 --> 00:27:25,239
going on in this frame is vast it's not

671
00:27:23,379 --> 00:27:27,428
just a little topics I mentioned before

672
00:27:25,239 --> 00:27:32,049
but some really weird techniques are

673
00:27:27,429 --> 00:27:34,719
being used so for example people one of

674
00:27:32,049 --> 00:27:37,629
the teams is at MIT another team is SSRI

675
00:27:34,719 --> 00:27:40,239
and Cambridge working together those two

676
00:27:37,629 --> 00:27:42,658
teams plus us plus plus folks like

677
00:27:40,239 --> 00:27:44,919
symbiotic are doing formal

678
00:27:42,659 --> 00:27:48,009
specifications of the entire core and

679
00:27:44,919 --> 00:27:50,769
because we're using risk 5 we're able to

680
00:27:48,009 --> 00:27:53,409
write a description of all of this risk

681
00:27:50,769 --> 00:27:55,839
instruction set and prove that the

682
00:27:53,409 --> 00:27:58,179
entire CPU does exactly those

683
00:27:55,839 --> 00:27:59,619
instructions no more and no less this

684
00:27:58,179 --> 00:28:02,019
kind of thing that we've never been able

685
00:27:59,619 --> 00:28:04,019
to do before because the complexity of

686
00:28:02,019 --> 00:28:08,679
the instruction sets in history of

687
00:28:04,019 --> 00:28:10,419
entities like Intel and arm each of

688
00:28:08,679 --> 00:28:11,950
those companies has done formal

689
00:28:10,419 --> 00:28:14,169
verification of little pieces of their

690
00:28:11,950 --> 00:28:15,849
systems right I mean Intel got into

691
00:28:14,169 --> 00:28:18,369
formal verification because they got bit

692
00:28:15,849 --> 00:28:20,349
by a floating-point bug when you know

693
00:28:18,369 --> 00:28:23,468
when I was younger and some of you were

694
00:28:20,349 --> 00:28:25,529
kids but you know that the techniques

695
00:28:23,469 --> 00:28:28,839
that we're seeing here are crazy like

696
00:28:25,529 --> 00:28:31,649
like some of the some of the stuff

697
00:28:28,839 --> 00:28:33,999
that's been going on in this area is

698
00:28:31,649 --> 00:28:36,998
people are adding crypto to these chips

699
00:28:33,999 --> 00:28:39,429
and working with us and instead of hand

700
00:28:36,999 --> 00:28:42,159
writing the crypto instead they take a

701
00:28:39,429 --> 00:28:44,019
mathematical model of the crypto and we

702
00:28:42,159 --> 00:28:46,149
generate the implementation

703
00:28:44,019 --> 00:28:47,979
automatically and the implementation we

704
00:28:46,149 --> 00:28:52,349
generate automatically is formally

705
00:28:47,979 --> 00:28:52,349
verified so this is a level up yes sir

706
00:28:53,730 --> 00:29:07,179
yes so it's an excellent point it's an

707
00:29:03,760 --> 00:29:10,750
excellent point in impact in fact my my

708
00:29:07,179 --> 00:29:12,040
gal was role in the program originally

709
00:29:10,750 --> 00:29:14,140
so I thought originally I was going to

710
00:29:12,040 --> 00:29:16,899
be working with friends making a new

711
00:29:14,140 --> 00:29:17,980
secure CPU I've done that a little bit

712
00:29:16,900 --> 00:29:20,080
in the past I thought this is going to

713
00:29:17,980 --> 00:29:22,059
be great opportunity to do more but then

714
00:29:20,080 --> 00:29:23,649
the ARPA came to me and said we don't

715
00:29:22,059 --> 00:29:25,809
want you to do that we need someone to

716
00:29:23,650 --> 00:29:27,220
do all the fancy formal methods so that

717
00:29:25,809 --> 00:29:29,918
we can have some assurance around these

718
00:29:27,220 --> 00:29:31,299
18 chips and so they had me do something

719
00:29:29,919 --> 00:29:33,580
different the thing that they've had me

720
00:29:31,299 --> 00:29:36,940
do different is I have to build or we

721
00:29:33,580 --> 00:29:40,799
have built a new generation of EDA tools

722
00:29:36,940 --> 00:29:43,390
that helps you take a design for a CPU

723
00:29:40,799 --> 00:29:45,070
automatically figure out all the

724
00:29:43,390 --> 00:29:47,410
different products you could derive from

725
00:29:45,070 --> 00:29:49,030
that design so which kind of chips could

726
00:29:47,410 --> 00:29:52,830
come out of that parameterised design

727
00:29:49,030 --> 00:29:56,410
and evaluate them all for power

728
00:29:52,830 --> 00:29:58,449
performance area and security and then

729
00:29:56,410 --> 00:30:01,360
give designers tools so they could

730
00:29:58,450 --> 00:30:03,460
choose which decisions to make and

731
00:30:01,360 --> 00:30:05,649
design to get to the right outcome

732
00:30:03,460 --> 00:30:09,040
because DARPA said I want higher

733
00:30:05,650 --> 00:30:10,030
security but I want no impact on

734
00:30:09,040 --> 00:30:14,110
performance

735
00:30:10,030 --> 00:30:17,139
I want no impact on power but I'm happy

736
00:30:14,110 --> 00:30:19,330
to give you lots of area right but you

737
00:30:17,140 --> 00:30:21,700
know if you work at Intel it's going to

738
00:30:19,330 --> 00:30:22,389
be a different equation so the tooling

739
00:30:21,700 --> 00:30:24,100
we've built

740
00:30:22,390 --> 00:30:26,620
helps you stipulate your own equation

741
00:30:24,100 --> 00:30:28,510
and make that trade-off like maybe you

742
00:30:26,620 --> 00:30:31,030
don't want security like the DoD you

743
00:30:28,510 --> 00:30:32,140
maybe you want security like Apple where

744
00:30:31,030 --> 00:30:33,460
are you gonna pay for it because you're

745
00:30:32,140 --> 00:30:37,299
gonna pay for it somewhere it's an

746
00:30:33,460 --> 00:30:39,250
excellent point the DoD is happy to pay

747
00:30:37,299 --> 00:30:41,740
for it in area but other companies will

748
00:30:39,250 --> 00:30:43,510
pay for it other ways so in any case

749
00:30:41,740 --> 00:30:48,280
there's lots of interesting stuff going

750
00:30:43,510 --> 00:30:50,080
on in these security relator R&D in this

751
00:30:48,280 --> 00:30:52,480
space like for example we've built a

752
00:30:50,080 --> 00:30:54,520
secure boot for risk 5 that's formerly

753
00:30:52,480 --> 00:30:56,740
assured so we've proven the correctness

754
00:30:54,520 --> 00:30:58,780
of our hardware security module and the

755
00:30:56,740 --> 00:31:02,080
firmware that's used to do the measured

756
00:30:58,780 --> 00:31:03,790
boot and these SIF teams are creating

757
00:31:02,080 --> 00:31:05,060
all kinds of different socks that have

758
00:31:03,790 --> 00:31:06,830
different security feature

759
00:31:05,060 --> 00:31:08,659
and then there's other programs funded

760
00:31:06,830 --> 00:31:11,480
by DARPA that complement this one

761
00:31:08,660 --> 00:31:14,330
because like even if you design new

762
00:31:11,480 --> 00:31:17,410
super secure CPU well then you go and

763
00:31:14,330 --> 00:31:20,899
fab it and Taiwan and you can't trust

764
00:31:17,410 --> 00:31:23,540
anybody in that supply chain so how do

765
00:31:20,900 --> 00:31:24,860
you deal with that and so I work on a

766
00:31:23,540 --> 00:31:26,270
little bit of that I'll mention that in

767
00:31:24,860 --> 00:31:28,010
a minute so there's all kinds of

768
00:31:26,270 --> 00:31:30,020
interesting stuff going on here like MIT

769
00:31:28,010 --> 00:31:31,250
this stuff is really cool you know that

770
00:31:30,020 --> 00:31:33,560
thing I mentioned earlier where we use

771
00:31:31,250 --> 00:31:36,710
fancy logic to describe the behavior of

772
00:31:33,560 --> 00:31:38,510
that one particular application and then

773
00:31:36,710 --> 00:31:42,530
did all that hard work to develop some C

774
00:31:38,510 --> 00:31:45,320
code they formally specified in that

775
00:31:42,530 --> 00:31:48,170
same high order logic the entirety of

776
00:31:45,320 --> 00:31:51,770
the RISC instruction set the entirety of

777
00:31:48,170 --> 00:31:55,160
Vera log and they've built a automatic

778
00:31:51,770 --> 00:31:57,440
synthesizer that can compile a CPU so it

779
00:31:55,160 --> 00:32:00,950
takes math describing a CPU and creates

780
00:31:57,440 --> 00:32:04,310
a CPU with formless shirts that runs its

781
00:32:00,950 --> 00:32:07,940
crazytown smart people awesome smart

782
00:32:04,310 --> 00:32:09,560
people so one of the programs I have we

783
00:32:07,940 --> 00:32:11,690
have worked on that's that I'll mention

784
00:32:09,560 --> 00:32:13,490
a little bit later is shield it's one of

785
00:32:11,690 --> 00:32:15,800
the programs that's funding secure

786
00:32:13,490 --> 00:32:19,460
hardware development in the DoD shield

787
00:32:15,800 --> 00:32:21,440
is about how do we mitigate sighs how do

788
00:32:19,460 --> 00:32:24,020
we mitigate adversaries in our supply

789
00:32:21,440 --> 00:32:25,700
chain so if you're gonna fab a chip and

790
00:32:24,020 --> 00:32:27,260
you really really care that the thing

791
00:32:25,700 --> 00:32:29,480
you get back is the thing that you send

792
00:32:27,260 --> 00:32:33,110
how do you deal with that the idea of

793
00:32:29,480 --> 00:32:36,290
shield is to Jenner is to create the

794
00:32:33,110 --> 00:32:38,330
world's smallest integrated circuit it

795
00:32:36,290 --> 00:32:40,730
has been done this is a picture of it so

796
00:32:38,330 --> 00:32:42,560
that's a penny that's Lincoln on the

797
00:32:40,730 --> 00:32:49,460
back of the penny that's a shield eyelet

798
00:32:42,560 --> 00:32:53,659
in Lincoln's head it is small as you can

799
00:32:49,460 --> 00:32:55,700
see and what it does for you the idea is

800
00:32:53,660 --> 00:32:57,650
you want to embed these in your

801
00:32:55,700 --> 00:33:00,260
manufacturing process so you put those

802
00:32:57,650 --> 00:33:04,070
like in your mask and perhaps in your

803
00:33:00,260 --> 00:33:06,350
package and inside of there is an

804
00:33:04,070 --> 00:33:08,510
antenna so you can enter so that you can

805
00:33:06,350 --> 00:33:12,139
think of it as the world's smallest RF

806
00:33:08,510 --> 00:33:14,840
ID card that can blow itself you can

807
00:33:12,140 --> 00:33:16,520
interact with it through RF but has to

808
00:33:14,840 --> 00:33:18,000
be very very close because it's a very

809
00:33:16,520 --> 00:33:20,940
small antenna

810
00:33:18,000 --> 00:33:24,419
it can perform crypto that you would

811
00:33:20,940 --> 00:33:29,340
expect that's the part my company worked

812
00:33:24,419 --> 00:33:31,860
on and it has baked into it mitigations

813
00:33:29,340 --> 00:33:35,340
for adversarial observations so for

814
00:33:31,860 --> 00:33:37,918
example if you stick it under a electron

815
00:33:35,340 --> 00:33:41,009
microscope it knows it and it blows

816
00:33:37,919 --> 00:33:44,070
itself if you stick it under a laser it

817
00:33:41,009 --> 00:33:47,940
knows it it blows itself if you vibrate

818
00:33:44,070 --> 00:33:50,939
it like we talked about grinding earlier

819
00:33:47,940 --> 00:33:53,490
it detects it and it blows itself either

820
00:33:50,940 --> 00:33:54,990
blows itself or logs that information so

821
00:33:53,490 --> 00:33:56,820
that's the idea behind shield and

822
00:33:54,990 --> 00:33:59,549
they're asking me to use shield in some

823
00:33:56,820 --> 00:34:00,720
novel ways these days so that's the kind

824
00:33:59,549 --> 00:34:04,168
of crazy stuff that's going on with

825
00:34:00,720 --> 00:34:05,850
secure hardware in the DoD now let's do

826
00:34:04,169 --> 00:34:08,339
it a little aside I've mentioned risk 5

827
00:34:05,850 --> 00:34:09,690
how many of you have have played with

828
00:34:08,339 --> 00:34:11,699
risk 5 so far

829
00:34:09,690 --> 00:34:13,409
I want to advocate for it a little bit

830
00:34:11,699 --> 00:34:15,989
alright so there's three or four hands

831
00:34:13,409 --> 00:34:17,579
in the inner room so the idea here is

832
00:34:15,989 --> 00:34:19,229
that you we care about hardware security

833
00:34:17,579 --> 00:34:21,510
here and some of the hardware security

834
00:34:19,230 --> 00:34:24,210
we do is things like you know attacking

835
00:34:21,510 --> 00:34:25,619
things the better you are at attacking

836
00:34:24,210 --> 00:34:28,079
things and breaking things whether it's

837
00:34:25,619 --> 00:34:30,270
via software or via hardware to acts

838
00:34:28,079 --> 00:34:31,470
like glitch or power or like the more

839
00:34:30,270 --> 00:34:33,300
you learn about that the more you learn

840
00:34:31,469 --> 00:34:35,969
about how to build things right right I

841
00:34:33,300 --> 00:34:38,310
like doing both and so I like to

842
00:34:35,969 --> 00:34:40,980
advocate the risk fives a great platform

843
00:34:38,310 --> 00:34:43,560
for building things that could be secure

844
00:34:40,980 --> 00:34:46,079
based upon what we learn as adversaries

845
00:34:43,560 --> 00:34:47,578
with whatever color hat we're wearing a

846
00:34:46,079 --> 00:34:51,419
little background here

847
00:34:47,579 --> 00:34:54,179
so risk 5 it's not risk V is the fifth

848
00:34:51,418 --> 00:34:57,390
version of risk it mainly comes out of

849
00:34:54,179 --> 00:34:59,310
Berkeley and the idea is learn all the

850
00:34:57,390 --> 00:35:01,799
lessons of the past with regards to the

851
00:34:59,310 --> 00:35:02,940
microprocessor design not just risk line

852
00:35:01,800 --> 00:35:06,619
but others as well

853
00:35:02,940 --> 00:35:08,660
and design a new generation of

854
00:35:06,619 --> 00:35:11,069
microprocessor that is high quality

855
00:35:08,660 --> 00:35:12,569
license free and royalty-free so that

856
00:35:11,069 --> 00:35:16,410
anyone in the world can use it and make

857
00:35:12,569 --> 00:35:21,000
it for free harm is nervous shall we say

858
00:35:16,410 --> 00:35:22,890
and it's the the design of the ISA is

859
00:35:21,000 --> 00:35:24,450
parameterised so that you can use it

860
00:35:22,890 --> 00:35:26,730
sort of in small versions or large

861
00:35:24,450 --> 00:35:28,770
versions and it's composable so you can

862
00:35:26,730 --> 00:35:30,510
actually pick different parts of the

863
00:35:28,770 --> 00:35:31,680
instructions that you want and compose

864
00:35:30,510 --> 00:35:34,260
them all into the one that you

865
00:35:31,680 --> 00:35:36,930
need so it's it's being used for

866
00:35:34,260 --> 00:35:40,319
everything from low low power and energy

867
00:35:36,930 --> 00:35:44,399
microcontrollers up to multi-core AI

868
00:35:40,319 --> 00:35:45,569
things it started in summer 2010 the

869
00:35:44,400 --> 00:35:47,160
early workshops were a bunch of

870
00:35:45,569 --> 00:35:49,259
basically a bunch of graduate students

871
00:35:47,160 --> 00:35:51,779
that got together at either MIT or

872
00:35:49,260 --> 00:35:54,089
Berkeley and the latest risk five

873
00:35:51,780 --> 00:35:55,890
summits but actually it's not the latest

874
00:35:54,089 --> 00:35:58,170
one because there's a risk 5 event in

875
00:35:55,890 --> 00:36:00,690
Zurich this week but the the latest big

876
00:35:58,170 --> 00:36:02,940
risk 5 summit had over a thousand people

877
00:36:00,690 --> 00:36:06,900
and 200 companies that's how much it's

878
00:36:02,940 --> 00:36:08,099
exploded so and a number of large firms

879
00:36:06,900 --> 00:36:10,980
have announced that they've moved to

880
00:36:08,099 --> 00:36:13,260
risk 5 for example a Western Digital it

881
00:36:10,980 --> 00:36:17,790
hat is moving all their devices to risk

882
00:36:13,260 --> 00:36:19,890
5 Nvidia is moving their entire line to

883
00:36:17,790 --> 00:36:21,300
risk 5 for their embedded controller so

884
00:36:19,890 --> 00:36:24,000
let's add anybody in the world basically

885
00:36:21,300 --> 00:36:27,359
do open hardware Rd and in particular

886
00:36:24,000 --> 00:36:28,890
secure hardware rnd it's really cool and

887
00:36:27,359 --> 00:36:30,598
interesting also if you're like a

888
00:36:28,890 --> 00:36:32,700
computer architecture geek or a computer

889
00:36:30,599 --> 00:36:34,770
scientists because it's simple it's

890
00:36:32,700 --> 00:36:36,750
clean slight design every design

891
00:36:34,770 --> 00:36:38,940
decision is documented why they did it

892
00:36:36,750 --> 00:36:41,130
the way they did it it's modular as I

893
00:36:38,940 --> 00:36:42,599
mentioned before and design for

894
00:36:41,130 --> 00:36:44,910
extension so you can design your own

895
00:36:42,599 --> 00:36:46,950
extensions to the instruction set in a

896
00:36:44,910 --> 00:36:48,569
way that plays well with others and it's

897
00:36:46,950 --> 00:36:50,790
nice and stable there's a foundation

898
00:36:48,569 --> 00:36:53,099
behind it that ratify standards and the

899
00:36:50,790 --> 00:36:54,750
like and we have formal specifications

900
00:36:53,099 --> 00:36:56,790
for the entire essay in fact we have

901
00:36:54,750 --> 00:36:58,589
several of them and so there's a bunch

902
00:36:56,790 --> 00:36:59,790
of folks working on this and you're

903
00:36:58,589 --> 00:37:01,770
welcome to get in touch with me if you

904
00:36:59,790 --> 00:37:03,299
want to learn more there's a security

905
00:37:01,770 --> 00:37:05,369
standing committee that sort of sits

906
00:37:03,299 --> 00:37:08,009
over all the security work in the RISC

907
00:37:05,369 --> 00:37:09,150
vibe universe and I'm involved there and

908
00:37:08,010 --> 00:37:10,530
then there's a couple of very active

909
00:37:09,150 --> 00:37:13,200
task groups right now it's doing

910
00:37:10,530 --> 00:37:15,089
cryptographic extensions where my

911
00:37:13,200 --> 00:37:17,308
colleague Dan Zimmerman is involved and

912
00:37:15,089 --> 00:37:19,230
a whole trusted execution environment so

913
00:37:17,309 --> 00:37:21,540
how do you build from scratch a clean

914
00:37:19,230 --> 00:37:23,670
Enclave that actually works and works

915
00:37:21,540 --> 00:37:26,308
for the world and in videos pushing that

916
00:37:23,670 --> 00:37:28,200
because they use that Enclave inside of

917
00:37:26,309 --> 00:37:30,450
their GPUs you know why there's an

918
00:37:28,200 --> 00:37:35,970
enclave in a GPU I didn't know this

919
00:37:30,450 --> 00:37:38,430
until I heard from Joe GPUs use a lot of

920
00:37:35,970 --> 00:37:41,069
power and they get hot they those Big

921
00:37:38,430 --> 00:37:45,118
Ass Fans on them what happens if you put

922
00:37:41,069 --> 00:37:48,359
malware on a GPU and you're able to

923
00:37:45,119 --> 00:37:49,619
say push it hard and this eat and did

924
00:37:48,359 --> 00:37:55,259
you know you can make a desktop machine

925
00:37:49,619 --> 00:38:00,509
burst into flames from a GPU so no

926
00:37:55,259 --> 00:38:02,279
comment so it's so it's a thing yeah

927
00:38:00,509 --> 00:38:04,079
it's not just Tesla's that blow up if

928
00:38:02,279 --> 00:38:06,420
you know what you're doing on security

929
00:38:04,079 --> 00:38:10,109
hacking if you want to know more about

930
00:38:06,420 --> 00:38:11,519
that you can google me so that's my

931
00:38:10,109 --> 00:38:13,140
aside are miss five so I encourage you

932
00:38:11,519 --> 00:38:14,819
to look into risk five if you want to do

933
00:38:13,140 --> 00:38:17,038
constructive work in the world of open

934
00:38:14,819 --> 00:38:19,079
hardware now let's turn our attention

935
00:38:17,039 --> 00:38:23,579
now to the lot the last part of my talk

936
00:38:19,079 --> 00:38:25,410
and and it is this this subtext

937
00:38:23,579 --> 00:38:26,789
democracy is a critical system so

938
00:38:25,410 --> 00:38:29,399
there's a there's a little leak of

939
00:38:26,789 --> 00:38:30,869
information earlier about that topic and

940
00:38:29,400 --> 00:38:32,460
I want to tell you a little bit about

941
00:38:30,869 --> 00:38:34,680
this and how it connects to what I just

942
00:38:32,460 --> 00:38:36,599
talked about so one of the things I've

943
00:38:34,680 --> 00:38:39,930
done for the past nineteen and a half

944
00:38:36,599 --> 00:38:42,359
years is elections I got involved with

945
00:38:39,930 --> 00:38:45,328
elections because I grew up in Florida I

946
00:38:42,359 --> 00:38:48,089
am Florida man I went to high school

947
00:38:45,329 --> 00:38:54,359
there and I went to college at Florida

948
00:38:48,089 --> 00:38:56,308
State Seminoles and and the 2000

949
00:38:54,359 --> 00:38:58,259
election happened I wasn't in Florida at

950
00:38:56,309 --> 00:39:00,210
the time as in California but you know

951
00:38:58,259 --> 00:39:02,880
that was Gorby Bush it all came down to

952
00:39:00,210 --> 00:39:04,680
one County in Florida and then the

953
00:39:02,880 --> 00:39:06,720
Supreme Court deciding that we don't get

954
00:39:04,680 --> 00:39:08,489
to do a recount and that just pissed me

955
00:39:06,720 --> 00:39:11,730
off you know because I'm a West Coast er

956
00:39:08,489 --> 00:39:13,980
now and I thought wow computers could be

957
00:39:11,730 --> 00:39:16,890
really useful in elections this is in

958
00:39:13,980 --> 00:39:17,940
2000 and I looked into it I found yes

959
00:39:16,890 --> 00:39:20,098
that's true

960
00:39:17,940 --> 00:39:22,489
but it's hard and in particular

961
00:39:20,099 --> 00:39:25,079
elections and democracy have all these

962
00:39:22,489 --> 00:39:27,660
interesting requirements that conflict

963
00:39:25,079 --> 00:39:29,220
with each other about like you know you

964
00:39:27,660 --> 00:39:31,739
have to be able to vote and you have to

965
00:39:29,220 --> 00:39:34,140
be able to identify who you are maybe

966
00:39:31,739 --> 00:39:36,630
with a voter idea or not but then your

967
00:39:34,140 --> 00:39:38,970
ballot has to be delinked from you and

968
00:39:36,630 --> 00:39:41,609
you can't prove that anyone in the world

969
00:39:38,970 --> 00:39:43,859
how you voted and yet there has to be a

970
00:39:41,609 --> 00:39:46,380
secure chain of trust around this

971
00:39:43,859 --> 00:39:48,660
artifact which has this weird secrecy

972
00:39:46,380 --> 00:39:50,759
and non secrecy properties which have to

973
00:39:48,660 --> 00:39:52,558
be tabulated and added together and

974
00:39:50,759 --> 00:39:55,470
announced to the public in a trustworthy

975
00:39:52,559 --> 00:39:57,780
way and in America we use the dumb the

976
00:39:55,470 --> 00:39:59,819
dumbest voting system in the world

977
00:39:57,780 --> 00:40:02,610
this first-past-the-post plurality which

978
00:39:59,820 --> 00:40:03,930
creates power versus these that fight

979
00:40:02,610 --> 00:40:06,540
each other but the rest of the world

980
00:40:03,930 --> 00:40:09,569
uses other interesting things like rank

981
00:40:06,540 --> 00:40:15,060
choice voting and I RV and like I'm in

982
00:40:09,570 --> 00:40:16,890
Harlem Evelyn's I built a a formally

983
00:40:15,060 --> 00:40:18,450
verified tally system which is used to

984
00:40:16,890 --> 00:40:19,650
this day for European elections because

985
00:40:18,450 --> 00:40:22,200
they have an interesting list based

986
00:40:19,650 --> 00:40:24,180
scheme other places use proportional

987
00:40:22,200 --> 00:40:25,500
representation and other places you know

988
00:40:24,180 --> 00:40:27,540
so there's all sorts of interesting math

989
00:40:25,500 --> 00:40:30,480
so I was like okay this is cool I'm

990
00:40:27,540 --> 00:40:32,370
gonna get into this and in what I

991
00:40:30,480 --> 00:40:34,020
learned then and which has only gotten

992
00:40:32,370 --> 00:40:36,150
worse over the last 20 years is the

993
00:40:34,020 --> 00:40:37,740
state of voting system security is worse

994
00:40:36,150 --> 00:40:40,110
than anything I've even described to you

995
00:40:37,740 --> 00:40:42,089
thus far in the US we have a handful of

996
00:40:40,110 --> 00:40:44,040
vendors the main ones are listed here

997
00:40:42,090 --> 00:40:46,680
and they're all not very good at what

998
00:40:44,040 --> 00:40:48,420
they do or more properly they're

999
00:40:46,680 --> 00:40:50,640
excellent doing what they do because

1000
00:40:48,420 --> 00:40:54,080
they create stuff that they can sell and

1001
00:40:50,640 --> 00:40:56,430
their customers buy it right but like

1002
00:40:54,080 --> 00:40:57,810
most of the systems is deployed in the

1003
00:40:56,430 --> 00:41:00,600
world today that run elections in

1004
00:40:57,810 --> 00:41:04,200
America were designed in the late 80s

1005
00:41:00,600 --> 00:41:07,500
and early 90s and were sold in a glut of

1006
00:41:04,200 --> 00:41:10,109
money when hava came out in 2003 and

1007
00:41:07,500 --> 00:41:12,240
2004 three billion dollars were spent on

1008
00:41:10,110 --> 00:41:15,540
voting machines and there were no

1009
00:41:12,240 --> 00:41:17,160
certification standards in practice so

1010
00:41:15,540 --> 00:41:19,230
the machines were just bought rapidly

1011
00:41:17,160 --> 00:41:21,899
from vendors that said I promise it

1012
00:41:19,230 --> 00:41:24,090
works right and we are dealing with it

1013
00:41:21,900 --> 00:41:25,950
today internationally there's two other

1014
00:41:24,090 --> 00:41:28,860
vendors SCYTL out of Barcelona and

1015
00:41:25,950 --> 00:41:31,830
Smartmatic out of who knows where it's a

1016
00:41:28,860 --> 00:41:33,120
mystery I get I go to WikiLeaks and

1017
00:41:31,830 --> 00:41:35,640
search for Smartmatic it's very

1018
00:41:33,120 --> 00:41:38,040
interesting and so we've got these

1019
00:41:35,640 --> 00:41:40,529
vendors that are developing interesting

1020
00:41:38,040 --> 00:41:42,120
systems and the average voting system

1021
00:41:40,530 --> 00:41:44,550
which I'll show you some pictures of and

1022
00:41:42,120 --> 00:41:45,839
tell you about is either a cot system

1023
00:41:44,550 --> 00:41:48,540
running Windows or Linux that's

1024
00:41:45,840 --> 00:41:49,830
unpatched forever because if you patch

1025
00:41:48,540 --> 00:41:51,660
it you have to recertify it and

1026
00:41:49,830 --> 00:41:54,360
recertifying it costs hundreds of

1027
00:41:51,660 --> 00:41:56,160
thousands of dollars or is custom

1028
00:41:54,360 --> 00:41:59,000
hardware designed and manufactured in

1029
00:41:56,160 --> 00:42:02,850
the 90s before security was a thing

1030
00:41:59,000 --> 00:42:04,860
here's here's some flavours of that for

1031
00:42:02,850 --> 00:42:06,960
example and systems that i've looked at

1032
00:42:04,860 --> 00:42:09,690
is for example the system used and in

1033
00:42:06,960 --> 00:42:11,190
holland up until myself and some

1034
00:42:09,690 --> 00:42:13,590
colleagues got it

1035
00:42:11,190 --> 00:42:15,720
from a company called NetApp there's

1036
00:42:13,590 --> 00:42:17,370
India that has a lot of big company

1037
00:42:15,720 --> 00:42:20,069
countries have their own voting systems

1038
00:42:17,370 --> 00:42:22,109
they developed as an internal project

1039
00:42:20,070 --> 00:42:23,610
and they you know like India says our

1040
00:42:22,110 --> 00:42:25,620
voting system is the best of the world

1041
00:42:23,610 --> 00:42:29,610
it's super secure and it's very far from

1042
00:42:25,620 --> 00:42:31,380
that you have opposites op optical mark

1043
00:42:29,610 --> 00:42:33,420
sense voting systems this is like your

1044
00:42:31,380 --> 00:42:36,510
SAT tests back in the 80s you know

1045
00:42:33,420 --> 00:42:38,250
pencils and little holes and scratch you

1046
00:42:36,510 --> 00:42:39,690
have DRM systems where you're voting and

1047
00:42:38,250 --> 00:42:41,190
there's no paper involved at all those

1048
00:42:39,690 --> 00:42:44,610
are the things that computer scientists

1049
00:42:41,190 --> 00:42:45,930
don't like paper is critical and then of

1050
00:42:44,610 --> 00:42:47,520
course these days there's people trying

1051
00:42:45,930 --> 00:42:49,770
to sell things like internet voting

1052
00:42:47,520 --> 00:42:51,570
systems I love internet voting you know

1053
00:42:49,770 --> 00:42:53,580
it's like okay I'm gonna vote I'm gonna

1054
00:42:51,570 --> 00:42:55,830
authenticate okay give me your hundred

1055
00:42:53,580 --> 00:42:57,540
dollars here's a phone just like people

1056
00:42:55,830 --> 00:42:59,940
don't think of the easiest attacks and

1057
00:42:57,540 --> 00:43:01,740
then you have new systems that use

1058
00:42:59,940 --> 00:43:03,810
crypto and novel ways these are called

1059
00:43:01,740 --> 00:43:05,520
the Indian verifiable voting systems of

1060
00:43:03,810 --> 00:43:07,890
which there's been several over the

1061
00:43:05,520 --> 00:43:09,600
years that are academic and the new

1062
00:43:07,890 --> 00:43:11,370
thing in that space that's being

1063
00:43:09,600 --> 00:43:13,020
developed which I won't talk about today

1064
00:43:11,370 --> 00:43:15,390
because it's not about secure hardware

1065
00:43:13,020 --> 00:43:18,600
it's called the election guard election

1066
00:43:15,390 --> 00:43:21,420
guard is from Microsoft and it is a

1067
00:43:18,600 --> 00:43:23,580
Indian verifiable cryptographic system

1068
00:43:21,420 --> 00:43:25,880
that even these vendors I just showed

1069
00:43:23,580 --> 00:43:28,740
you can use and it's meant to

1070
00:43:25,880 --> 00:43:32,070
dynamically interestingly change the way

1071
00:43:28,740 --> 00:43:34,740
we vote in the USA in the world and my

1072
00:43:32,070 --> 00:43:35,700
team is creating that with Microsoft so

1073
00:43:34,740 --> 00:43:39,479
if you want to learn more about that

1074
00:43:35,700 --> 00:43:40,980
Google election guard here are some of

1075
00:43:39,480 --> 00:43:42,450
the examples of these systems and then

1076
00:43:40,980 --> 00:43:44,910
we'll turn to how secure Hardware

1077
00:43:42,450 --> 00:43:46,710
intersects with this so some of them are

1078
00:43:44,910 --> 00:43:48,990
bespoke systems and as I mentioned most

1079
00:43:46,710 --> 00:43:51,960
of these are built in the 80s so

1080
00:43:48,990 --> 00:43:54,259
literally they have 80 80s inside of

1081
00:43:51,960 --> 00:43:55,950
them they have old-school 8-bit

1082
00:43:54,260 --> 00:43:57,270
microcontrollers that you haven't seen

1083
00:43:55,950 --> 00:44:00,330
it forever that happened to be on a

1084
00:43:57,270 --> 00:44:02,790
Sound Blaster they're really simple they

1085
00:44:00,330 --> 00:44:05,340
have minimal RAM minimal store custom

1086
00:44:02,790 --> 00:44:07,529
PCBs no us at all it's all bare metal

1087
00:44:05,340 --> 00:44:09,270
programming and so oftentimes they'll

1088
00:44:07,530 --> 00:44:11,220
create these like this net app system

1089
00:44:09,270 --> 00:44:12,990
here and they'll say it's obviously

1090
00:44:11,220 --> 00:44:15,419
secure we don't have an operating system

1091
00:44:12,990 --> 00:44:18,060
right it's designed as a voting system

1092
00:44:15,420 --> 00:44:19,410
it can only vote that's the only thing

1093
00:44:18,060 --> 00:44:21,160
you can ever do and then one of my

1094
00:44:19,410 --> 00:44:24,118
graduate students says

1095
00:44:21,160 --> 00:44:28,299
Yeah right and they make it play chess

1096
00:44:24,119 --> 00:44:30,609
literally that's what happened so these

1097
00:44:28,299 --> 00:44:32,319
are easily hacked right easily

1098
00:44:30,609 --> 00:44:33,940
reverse-engineered because they are so

1099
00:44:32,319 --> 00:44:38,770
simple and they have no security baked

1100
00:44:33,940 --> 00:44:42,640
into them at all here's my here's my

1101
00:44:38,770 --> 00:44:44,890
friends Rob and Alex and a Hari who

1102
00:44:42,640 --> 00:44:47,890
hacked the India voting machine they got

1103
00:44:44,890 --> 00:44:51,339
kicked out of the country for it it's a

1104
00:44:47,890 --> 00:44:54,190
thing you can goggle it it's also an

1105
00:44:51,339 --> 00:44:56,140
8-bit old-school voting system with no

1106
00:44:54,190 --> 00:44:57,609
security at all and then we have lever

1107
00:44:56,140 --> 00:44:59,680
machines so there's a whole generation

1108
00:44:57,609 --> 00:45:01,328
of folks maybe some of you have voted on

1109
00:44:59,680 --> 00:45:03,730
a lever machine these are full

1110
00:45:01,329 --> 00:45:05,710
mechanical voting machines like the old

1111
00:45:03,730 --> 00:45:07,599
electromechanical pinball machines you

1112
00:45:05,710 --> 00:45:10,270
know the really loud ones that are full

1113
00:45:07,599 --> 00:45:13,089
of gears and levers and the like so this

1114
00:45:10,270 --> 00:45:15,819
is a voting machine that uses physical

1115
00:45:13,089 --> 00:45:17,529
mechanisms in order to capture vote

1116
00:45:15,819 --> 00:45:19,690
tallies so there is no paper ballot

1117
00:45:17,530 --> 00:45:22,450
record there's no way to audit it and in

1118
00:45:19,690 --> 00:45:24,010
fact it something goes wrong in here you

1119
00:45:22,450 --> 00:45:26,288
know it's very difficult to debug shall

1120
00:45:24,010 --> 00:45:28,420
we say in a modern area like literally a

1121
00:45:26,289 --> 00:45:29,849
mouse can die in there and the voting

1122
00:45:28,420 --> 00:45:33,160
machine doesn't work anymore

1123
00:45:29,849 --> 00:45:35,109
you flip levers on the front to indicate

1124
00:45:33,160 --> 00:45:36,970
your vote and then you pull this giant

1125
00:45:35,109 --> 00:45:38,770
lever which actuates the entire

1126
00:45:36,970 --> 00:45:40,839
mechanics inside makes this wonderful

1127
00:45:38,770 --> 00:45:42,819
curd chunk sound and then you know you

1128
00:45:40,839 --> 00:45:44,950
voted and the moment you do that you let

1129
00:45:42,819 --> 00:45:48,130
go the curtain opens it's all quite a

1130
00:45:44,950 --> 00:45:49,839
marvelous interaction and then you have

1131
00:45:48,130 --> 00:45:52,559
off scan systems where you fill in the

1132
00:45:49,839 --> 00:45:56,980
bullets the the bubbles and this

1133
00:45:52,559 --> 00:45:59,920
historically was done with no digital

1134
00:45:56,980 --> 00:46:02,049
techniques were used you're instead

1135
00:45:59,920 --> 00:46:03,789
using just a single light sensor and

1136
00:46:02,049 --> 00:46:05,829
you're seeing dark versus light areas

1137
00:46:03,789 --> 00:46:08,380
and it's lined up with hash marks on the

1138
00:46:05,829 --> 00:46:09,910
side of your ballot these days modern

1139
00:46:08,380 --> 00:46:12,549
systems are starting to use things like

1140
00:46:09,910 --> 00:46:14,680
normal scanners so you turn this into a

1141
00:46:12,549 --> 00:46:18,609
JPEG image and then you'd use digital

1142
00:46:14,680 --> 00:46:22,450
you know normal processing video

1143
00:46:18,609 --> 00:46:24,220
processing in order to to interpret the

1144
00:46:22,450 --> 00:46:26,078
marks of course that has this

1145
00:46:24,220 --> 00:46:27,730
interesting set of challenges given the

1146
00:46:26,079 --> 00:46:29,740
firmware that's in scanners these days

1147
00:46:27,730 --> 00:46:31,089
and how the bits that come out of the

1148
00:46:29,740 --> 00:46:34,390
scanner aren't the bits that you think

1149
00:46:31,089 --> 00:46:35,049
you sent in there here's an example of

1150
00:46:34,390 --> 00:46:37,420
an OPS

1151
00:46:35,050 --> 00:46:39,250
this is an old Diebold system Diebold no

1152
00:46:37,420 --> 00:46:40,840
longer exists most people here you know

1153
00:46:39,250 --> 00:46:43,119
voting machine and they think Diebold

1154
00:46:40,840 --> 00:46:45,580
Diebold tried to rebrand themselves as

1155
00:46:43,119 --> 00:46:47,410
Sequoia and then got bought by

1156
00:46:45,580 --> 00:46:48,940
Smartmatic that mysterious company I

1157
00:46:47,410 --> 00:46:50,500
mentioned earlier and then the

1158
00:46:48,940 --> 00:46:52,600
government said ok Smartmatic you have

1159
00:46:50,500 --> 00:46:54,760
to reveal your ownership structure and

1160
00:46:52,600 --> 00:46:59,080
where your company is and rather than do

1161
00:46:54,760 --> 00:47:00,520
so they sold Sequoia to ES and s so

1162
00:46:59,080 --> 00:47:03,340
that's the history of Diebold

1163
00:47:00,520 --> 00:47:05,950
and there's an example of using one

1164
00:47:03,340 --> 00:47:08,430
these days and then you have dr es with

1165
00:47:05,950 --> 00:47:11,290
v sometimes with VV pat here's a Diebold

1166
00:47:08,430 --> 00:47:13,720
touchscreen this is old-school mem

1167
00:47:11,290 --> 00:47:15,460
resistor touchscreen you vote the

1168
00:47:13,720 --> 00:47:17,890
machine says I promise I recorded your

1169
00:47:15,460 --> 00:47:21,160
vote accurately and then you walk away

1170
00:47:17,890 --> 00:47:24,640
but if you plug in a keyboard into the

1171
00:47:21,160 --> 00:47:27,700
expose USB port and they hit alt tab it

1172
00:47:24,640 --> 00:47:30,009
does what you think it does really

1173
00:47:27,700 --> 00:47:31,960
really awful security on these guys and

1174
00:47:30,010 --> 00:47:36,610
I love the foot this photo with the old

1175
00:47:31,960 --> 00:47:38,110
person giving us the finger so so this

1176
00:47:36,610 --> 00:47:39,730
is this this is the state-of-the-art

1177
00:47:38,110 --> 00:47:41,710
though I mean these are the systems that

1178
00:47:39,730 --> 00:47:42,850
are now slowly being replaced with the

1179
00:47:41,710 --> 00:47:44,650
new half of money that was just

1180
00:47:42,850 --> 00:47:47,290
appropriated over the past few months so

1181
00:47:44,650 --> 00:47:49,240
these are terribly built they run

1182
00:47:47,290 --> 00:47:51,490
Windows for the most part no paper

1183
00:47:49,240 --> 00:47:51,970
ballots are really awful you gotta be

1184
00:47:51,490 --> 00:47:53,259
kidding me

1185
00:47:51,970 --> 00:47:55,839
this is this is the stuff that's very

1186
00:47:53,260 --> 00:47:58,359
easily hacked and so basically this is

1187
00:47:55,840 --> 00:48:00,460
the state of the art we've personally

1188
00:47:58,359 --> 00:48:03,640
assessed many of these things there's no

1189
00:48:00,460 --> 00:48:06,130
rigor certification is sketchy poor

1190
00:48:03,640 --> 00:48:08,230
quality so how do we make it better

1191
00:48:06,130 --> 00:48:11,020
oh wait of course people now Tao

1192
00:48:08,230 --> 00:48:12,640
internet voting and Estonia is voting on

1193
00:48:11,020 --> 00:48:14,350
the internet so we all should and

1194
00:48:12,640 --> 00:48:15,819
Australia and Switzerland and blockchain

1195
00:48:14,350 --> 00:48:18,910
solves everything you guys know that

1196
00:48:15,820 --> 00:48:21,070
blockchain solves everything that's not

1197
00:48:18,910 --> 00:48:25,118
true you know there's this nice little

1198
00:48:21,070 --> 00:48:27,270
xkcd about trying to do computer science

1199
00:48:25,119 --> 00:48:29,470
with voting and basically it ends with

1200
00:48:27,270 --> 00:48:33,130
they say they fixed it with something

1201
00:48:29,470 --> 00:48:36,069
called blockchain ah run away not a

1202
00:48:33,130 --> 00:48:38,859
thing and here's some sample code from

1203
00:48:36,070 --> 00:48:40,720
Estonia's voting system this is the

1204
00:48:38,859 --> 00:48:42,880
function that's called to make sure that

1205
00:48:40,720 --> 00:48:44,770
a encrypted ballot that was just

1206
00:48:42,880 --> 00:48:48,010
submitted is in fact a legitimate ballot

1207
00:48:44,770 --> 00:48:49,140
for the election literally that's the

1208
00:48:48,010 --> 00:48:51,730
code

1209
00:48:49,140 --> 00:48:57,069
so what do we do instead here's a

1210
00:48:51,730 --> 00:48:58,600
picture of Joe so a few years ago the

1211
00:48:57,070 --> 00:49:00,370
community decided to start something

1212
00:48:58,600 --> 00:49:02,290
called the DEF CON voting village to

1213
00:49:00,370 --> 00:49:04,089
teach the world about these situations

1214
00:49:02,290 --> 00:49:07,360
and examine these machines this is from

1215
00:49:04,090 --> 00:49:09,250
the very first Def Con where Joe Joe had

1216
00:49:07,360 --> 00:49:11,170
his photo taken is now reused over and

1217
00:49:09,250 --> 00:49:15,070
over in the world all over the place and

1218
00:49:11,170 --> 00:49:18,190
basically you know on average in under 4

1219
00:49:15,070 --> 00:49:19,960
hours every machine is compromised such

1220
00:49:18,190 --> 00:49:22,180
that an adversary can change the outcome

1221
00:49:19,960 --> 00:49:24,460
of election that's just the that's how

1222
00:49:22,180 --> 00:49:26,560
it's worked every year this last year I

1223
00:49:24,460 --> 00:49:29,410
brought this machine this is an e SNS

1224
00:49:26,560 --> 00:49:33,340
650 central count scanner

1225
00:49:29,410 --> 00:49:35,680
I had a 17 year old intern at my company

1226
00:49:33,340 --> 00:49:36,790
who didn't know any computer science at

1227
00:49:35,680 --> 00:49:38,350
all and he said I want to learn about

1228
00:49:36,790 --> 00:49:41,110
computer science or reverse engineering

1229
00:49:38,350 --> 00:49:43,299
I said here's a voting system here's a

1230
00:49:41,110 --> 00:49:44,800
book go learn and every time you got

1231
00:49:43,300 --> 00:49:47,170
stuck come ask me a question but I

1232
00:49:44,800 --> 00:49:49,270
promise I will do no hacking so by the

1233
00:49:47,170 --> 00:49:50,950
time he took it to DEFCON he had reverse

1234
00:49:49,270 --> 00:49:55,120
engineered the whole thing and hacked it

1235
00:49:50,950 --> 00:49:58,180
and people care I mean here's a Wall

1236
00:49:55,120 --> 00:50:00,819
Street Journal that week reporting on my

1237
00:49:58,180 --> 00:50:03,270
my poor students tack on that particular

1238
00:50:00,820 --> 00:50:06,310
system so this is the state of affairs

1239
00:50:03,270 --> 00:50:08,259
so what has happened is a miracle and

1240
00:50:06,310 --> 00:50:09,700
this is where I conclude this is where

1241
00:50:08,260 --> 00:50:11,920
I'm going to encourage you to come Las

1242
00:50:09,700 --> 00:50:13,569
Vegas election technology is on

1243
00:50:11,920 --> 00:50:15,190
everybody's minds it's a piece of

1244
00:50:13,570 --> 00:50:17,520
national critical infrastructure it's

1245
00:50:15,190 --> 00:50:20,200
notorious for its security flaws and

1246
00:50:17,520 --> 00:50:22,690
strangely enough a modern voting system

1247
00:50:20,200 --> 00:50:25,720
needs a microcontroller and a desktop

1248
00:50:22,690 --> 00:50:27,760
CPU and a superscalar CPU and many

1249
00:50:25,720 --> 00:50:29,560
people in the field advocate if we need

1250
00:50:27,760 --> 00:50:30,670
a new generation of voting systems for

1251
00:50:29,560 --> 00:50:33,190
nationally critical infrastructure

1252
00:50:30,670 --> 00:50:36,100
should be open source and open hardware

1253
00:50:33,190 --> 00:50:38,860
and have an assurance case and due to

1254
00:50:36,100 --> 00:50:40,299
some miracle DARPA decided that that was

1255
00:50:38,860 --> 00:50:42,820
in fact true and they should do

1256
00:50:40,300 --> 00:50:47,020
something about it so the demonstrator

1257
00:50:42,820 --> 00:50:50,260
system for SIF to show off these secure

1258
00:50:47,020 --> 00:50:53,410
CPUs they decided is a voting system and

1259
00:50:50,260 --> 00:50:56,740
they hired my company to build it this

1260
00:50:53,410 --> 00:50:59,200
is our ballot market our Smart ballot

1261
00:50:56,740 --> 00:50:59,580
box that's working in my office right

1262
00:50:59,200 --> 00:51:02,319
now

1263
00:50:59,580 --> 00:51:04,989
open hardware open-source software

1264
00:51:02,319 --> 00:51:09,279
the entire thing runs on this embedded

1265
00:51:04,989 --> 00:51:11,319
microcontroller in fact our mechanism is

1266
00:51:09,279 --> 00:51:13,749
just an Epson printer that we tore apart

1267
00:51:11,319 --> 00:51:17,199
and reuse pieces of and reverse-engineer

1268
00:51:13,749 --> 00:51:20,558
to make it low-cost all the hardware is

1269
00:51:17,199 --> 00:51:22,689
opened so that you can get the CAD you

1270
00:51:20,559 --> 00:51:25,419
once it once it goes public in a few

1271
00:51:22,689 --> 00:51:27,489
weeks the the CAD files are open the PCB

1272
00:51:25,419 --> 00:51:29,549
designs we've done are all open and the

1273
00:51:27,489 --> 00:51:33,539
entire thing runs a formally assured

1274
00:51:29,549 --> 00:51:36,999
like national security formally assured

1275
00:51:33,539 --> 00:51:38,949
implementation of this voting system so

1276
00:51:36,999 --> 00:51:40,899
this is like these are the ballots that

1277
00:51:38,949 --> 00:51:42,400
come out of the voting system when you

1278
00:51:40,900 --> 00:51:45,579
vote on the touchscreen which is just

1279
00:51:42,400 --> 00:51:47,709
open source software running on cots got

1280
00:51:45,579 --> 00:51:50,049
nice usability accessibility folks

1281
00:51:47,709 --> 00:51:53,499
involved disabled folks can vote with it

1282
00:51:50,049 --> 00:51:54,819
here's our reverse engineered paper

1283
00:51:53,499 --> 00:51:56,229
feeder because we didn't want to spend

1284
00:51:54,819 --> 00:51:58,359
lots of government money on just

1285
00:51:56,229 --> 00:52:02,618
building a new damned paper feeder so we

1286
00:51:58,359 --> 00:52:04,749
just do that here's a here's examples of

1287
00:52:02,619 --> 00:52:06,519
building our rigs and in particular the

1288
00:52:04,749 --> 00:52:08,348
software written we've written will run

1289
00:52:06,519 --> 00:52:10,209
on a normal microcontroller just fine

1290
00:52:08,349 --> 00:52:11,890
but when you put it on the secure

1291
00:52:10,209 --> 00:52:15,098
Hardware it runs even better shall we

1292
00:52:11,890 --> 00:52:18,308
say and then we're also been tasked with

1293
00:52:15,099 --> 00:52:20,159
building a full open hardware design as

1294
00:52:18,309 --> 00:52:22,359
well so that you don't have to go by

1295
00:52:20,159 --> 00:52:25,319
either an Epson printer and tear it

1296
00:52:22,359 --> 00:52:28,359
apart yourself or any $9,000 FPGA

1297
00:52:25,319 --> 00:52:31,150
instead what they tasked me to do is to

1298
00:52:28,359 --> 00:52:33,578
design a open hardware stack with a

1299
00:52:31,150 --> 00:52:35,829
low-cost fpga that should cost under 100

1300
00:52:33,579 --> 00:52:39,039
bucks on which you can run a secure

1301
00:52:35,829 --> 00:52:42,549
microcontroller and along with that you

1302
00:52:39,039 --> 00:52:44,289
can order an actual smart ballot box for

1303
00:52:42,549 --> 00:52:47,049
under 100 bucks so we've been doing

1304
00:52:44,289 --> 00:52:50,140
design on that so far and that's what it

1305
00:52:47,049 --> 00:52:51,640
looks like in in real life as it were so

1306
00:52:50,140 --> 00:52:53,408
that's what we're up to and the way to

1307
00:52:51,640 --> 00:52:55,299
demonstrate this all and how I conclude

1308
00:52:53,409 --> 00:52:57,579
is if you're gonna make something that

1309
00:52:55,299 --> 00:52:59,799
you claim is secure how do you show that

1310
00:52:57,579 --> 00:53:02,169
now we built formal tools that will let

1311
00:52:59,799 --> 00:53:03,159
us measure security and etc etc but the

1312
00:53:02,169 --> 00:53:05,499
government's not going to let me open

1313
00:53:03,159 --> 00:53:07,689
sourced some of those so we need another

1314
00:53:05,499 --> 00:53:10,808
means by which to democratize secure

1315
00:53:07,689 --> 00:53:12,999
Hardware so what DARPA has decided to do

1316
00:53:10,809 --> 00:53:16,060
and I have to admit I had a little hand

1317
00:53:12,999 --> 00:53:18,189
in this decision is they're publishing

1318
00:53:16,060 --> 00:53:19,750
all the source all the firmware and all

1319
00:53:18,190 --> 00:53:23,500
the hardware designs all the way down to

1320
00:53:19,750 --> 00:53:25,510
the RTL every design dock every peer

1321
00:53:23,500 --> 00:53:27,700
review paper every technical report

1322
00:53:25,510 --> 00:53:29,560
every assumption about the security of

1323
00:53:27,700 --> 00:53:32,799
the system every claim about the system

1324
00:53:29,560 --> 00:53:36,549
every proof make it all available to the

1325
00:53:32,800 --> 00:53:38,350
public and then red teaming and when I

1326
00:53:36,550 --> 00:53:39,850
say red teaming I mean not only to get

1327
00:53:38,350 --> 00:53:42,339
do you get to attack it through its

1328
00:53:39,850 --> 00:53:44,980
interfaces a serial port and Ethernet

1329
00:53:42,340 --> 00:53:47,230
you get to load any malware you want on

1330
00:53:44,980 --> 00:53:49,750
the device along with a voting system

1331
00:53:47,230 --> 00:53:52,000
and the claim is even if you're on the

1332
00:53:49,750 --> 00:53:53,740
inside and you can write your own

1333
00:53:52,000 --> 00:53:55,860
malware and load it yourself

1334
00:53:53,740 --> 00:53:58,799
the system will still operate properly

1335
00:53:55,860 --> 00:54:02,080
it's as far as I know the most ambitious

1336
00:53:58,800 --> 00:54:04,570
open end to end red team exercise ever

1337
00:54:02,080 --> 00:54:06,220
done in the history of man and the first

1338
00:54:04,570 --> 00:54:07,990
version of it will happen in a few weeks

1339
00:54:06,220 --> 00:54:10,870
in Las Vegas at Def Con at the voting

1340
00:54:07,990 --> 00:54:14,259
village they've funded me to do this for

1341
00:54:10,870 --> 00:54:16,509
next year - a 2020 at which time we will

1342
00:54:14,260 --> 00:54:18,370
have a bigger more complete voting

1343
00:54:16,510 --> 00:54:20,830
system that has all three kinds of CPUs

1344
00:54:18,370 --> 00:54:22,660
in it which will be running not just

1345
00:54:20,830 --> 00:54:25,450
free artists on the microcontroller but

1346
00:54:22,660 --> 00:54:27,730
also Linux and FreeBSD with basically

1347
00:54:25,450 --> 00:54:30,310
all the same capabilities so load your

1348
00:54:27,730 --> 00:54:32,230
own malware that you want onto these

1349
00:54:30,310 --> 00:54:34,960
more modern operating systems as opposed

1350
00:54:32,230 --> 00:54:36,340
to just free artists so that is the

1351
00:54:34,960 --> 00:54:39,190
public demonstration of secure hardware

1352
00:54:36,340 --> 00:54:41,410
if you can affect a software attack

1353
00:54:39,190 --> 00:54:42,730
through that stack even if it have been

1354
00:54:41,410 --> 00:54:45,520
given the fact that you can put your own

1355
00:54:42,730 --> 00:54:47,260
malware on the device and you can show

1356
00:54:45,520 --> 00:54:49,300
of owner ability then you have defeated

1357
00:54:47,260 --> 00:54:51,580
the secure hardware that's the core idea

1358
00:54:49,300 --> 00:54:53,530
here and it's not just happening at Def

1359
00:54:51,580 --> 00:54:56,110
Con this Red Team exercise starts at Def

1360
00:54:53,530 --> 00:54:58,300
Con and runs continuously henceforth

1361
00:54:56,110 --> 00:55:00,100
some of these systems will be on the

1362
00:54:58,300 --> 00:55:02,530
internet and you can literally attack

1363
00:55:00,100 --> 00:55:04,900
them and load malware over the internet

1364
00:55:02,530 --> 00:55:08,680
on the to the device to try to show the

1365
00:55:04,900 --> 00:55:10,930
secure hardware is not secure so for

1366
00:55:08,680 --> 00:55:13,509
more information that's where you can

1367
00:55:10,930 --> 00:55:15,310
find us we're Galvan free and fair in

1368
00:55:13,510 --> 00:55:16,950
Portland risk 5 you can find out about

1369
00:55:15,310 --> 00:55:19,150
from the reefs mr5 foundation

1370
00:55:16,950 --> 00:55:21,669
announcements about this project go out

1371
00:55:19,150 --> 00:55:24,220
on our Twitter feeds and I promise

1372
00:55:21,670 --> 00:55:25,390
there's no malware in the QR code and

1373
00:55:24,220 --> 00:55:27,480
thanks for your attention I'll take

1374
00:55:25,390 --> 00:55:27,480
questions

1375
00:55:30,080 --> 00:55:42,840
[Applause]

1376
00:55:31,560 --> 00:55:44,890
you come into DEFCON Joe yes and a

1377
00:55:42,840 --> 00:55:46,720
facilitated mechanism by which to load

1378
00:55:44,890 --> 00:55:50,710
your own malware and that's that over

1379
00:55:46,720 --> 00:55:52,270
Ethernet it's over Ethernet no physical

1380
00:55:50,710 --> 00:55:55,090
access so the pro this particular

1381
00:55:52,270 --> 00:55:56,650
program is not about physical hardware

1382
00:55:55,090 --> 00:55:58,810
attacks because that would be trivial on

1383
00:55:56,650 --> 00:56:00,730
an FPGA in particular it's only about

1384
00:55:58,810 --> 00:56:02,620
software enabled vulnerabilities there

1385
00:56:00,730 --> 00:56:04,930
are other programs working on that and

1386
00:56:02,620 --> 00:56:06,850
if this turns out well then I would

1387
00:56:04,930 --> 00:56:08,859
imagine there's gonna be Hardware coming

1388
00:56:06,850 --> 00:56:14,080
- hardware conferences where and you can

1389
00:56:08,860 --> 00:56:16,480
do what you do more yeah nobody asked me

1390
00:56:14,080 --> 00:56:23,470
where shield was being used those little

1391
00:56:16,480 --> 00:56:27,640
dilates yes it's much smaller you're

1392
00:56:23,470 --> 00:56:30,609
very funny shield is not being used in

1393
00:56:27,640 --> 00:56:32,770
the hardware DARPA said we're looking

1394
00:56:30,610 --> 00:56:38,290
for interesting ways to use the small s

1395
00:56:32,770 --> 00:56:41,140
I see in the world ever why don't we

1396
00:56:38,290 --> 00:56:44,740
give you a bunch and you put it in the

1397
00:56:41,140 --> 00:56:48,069
paper ballots so imagine having a piece

1398
00:56:44,740 --> 00:56:52,479
of paper that is capable of performing

1399
00:56:48,070 --> 00:56:54,550
crypto and detecting tampering put it in

1400
00:56:52,480 --> 00:56:57,100
the pulp it's so small you can just put

1401
00:56:54,550 --> 00:57:00,160
it in the pulp that's what they've

1402
00:56:57,100 --> 00:57:01,750
tasked me with doing and I was like when

1403
00:57:00,160 --> 00:57:02,950
they said that to me and then I went and

1404
00:57:01,750 --> 00:57:04,750
thought about it and figured out ways

1405
00:57:02,950 --> 00:57:08,230
that it could actually possibly work and

1406
00:57:04,750 --> 00:57:10,900
so we will demonstrate paper crypto

1407
00:57:08,230 --> 00:57:12,790
paper this year not in the voting system

1408
00:57:10,900 --> 00:57:13,900
just a little separate demo because it's

1409
00:57:12,790 --> 00:57:16,960
really freaking hard

1410
00:57:13,900 --> 00:57:18,730
and then in 2020 I'm gonna show how this

1411
00:57:16,960 --> 00:57:20,580
might work and they're playing with

1412
00:57:18,730 --> 00:57:23,380
other ideas like you know imagine your

1413
00:57:20,580 --> 00:57:23,710
$100 bill had crypto in it that kind of

1414
00:57:23,380 --> 00:57:33,540
thing

1415
00:57:23,710 --> 00:57:33,540
question yes question right on all right

1416
00:57:33,990 --> 00:57:38,970
which one's the dial it's

1417
00:57:39,559 --> 00:57:48,780
ya know that's a sensitive topic the

1418
00:57:45,690 --> 00:57:50,760
they are being used by some companies

1419
00:57:48,780 --> 00:57:53,460
now so this licensing going out and out

1420
00:57:50,760 --> 00:57:56,660
of SR I in particular so I know somebody

1421
00:57:53,460 --> 00:57:59,040
has done has started down a path of as

1422
00:57:56,660 --> 00:58:01,618
dumb as it is something about a hardware

1423
00:57:59,040 --> 00:58:02,460
wallet with dial it's dumb like

1424
00:58:01,619 --> 00:58:04,770
that

1425
00:58:02,460 --> 00:58:07,829
you're not going to see them broadly

1426
00:58:04,770 --> 00:58:10,980
available anytime soon but I will have a

1427
00:58:07,829 --> 00:58:12,329
few hundred of them at Def Con and I

1428
00:58:10,980 --> 00:58:15,390
think they're gonna make me keep them

1429
00:58:12,329 --> 00:58:17,069
all but we'll say in volume they're only

1430
00:58:15,390 --> 00:58:19,379
supposed to cost a tenth of a penny each

1431
00:58:17,069 --> 00:58:21,119
if you have any concerns around costs

1432
00:58:19,380 --> 00:58:24,720
you can make you can put a lot of them

1433
00:58:21,119 --> 00:58:30,299
on one wafer but it's really tough to to

1434
00:58:24,720 --> 00:58:37,589
cut them shall we say yes Joe on these

1435
00:58:30,299 --> 00:58:39,599
particular systems yes that would be a a

1436
00:58:37,589 --> 00:58:42,599
thing that they're interested in and not

1437
00:58:39,599 --> 00:58:43,770
my area of expertise yeah I would

1438
00:58:42,599 --> 00:58:46,380
imagine that you could blow them all

1439
00:58:43,770 --> 00:58:48,329
with one well tuned frequency though

1440
00:58:46,380 --> 00:58:52,020
because you're going to be manipulating

1441
00:58:48,329 --> 00:58:54,620
the MEMS yeah they're alright thanks for

1442
00:58:52,020 --> 00:58:58,400
your questions and interest I appreciate

1443
00:58:54,620 --> 00:58:58,400
[Applause]

