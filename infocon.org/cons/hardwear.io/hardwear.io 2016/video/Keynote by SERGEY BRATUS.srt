1
00:00:03,200 --> 00:00:08,929
it's great to be<font color="#CCCCCC"> here</font><font color="#E5E5E5"> thank you for</font>

2
00:00:05,700 --> 00:00:11,519
having<font color="#E5E5E5"> me at this early in</font><font color="#CCCCCC"> the morning I</font>

3
00:00:08,929 --> 00:00:15,360
when I saw the time when I<font color="#E5E5E5"> was supposed</font>

4
00:00:11,519 --> 00:00:18,390
<font color="#E5E5E5">to speak and realize this is the time I</font>

5
00:00:15,360 --> 00:00:21,800
only vaguely heard of but yet here we

6
00:00:18,390 --> 00:00:24,779
are so I'm going<font color="#CCCCCC"> to talk to</font><font color="#E5E5E5"> you about</font>

7
00:00:21,800 --> 00:00:27,779
rights principle which I want to be more

8
00:00:24,779 --> 00:00:30,960
<font color="#CCCCCC">of a thing and we'll get to what what it</font>

9
00:00:27,779 --> 00:00:33,420
is and why it should indeed be a guiding

10
00:00:30,960 --> 00:00:36,570
light for the hardware security but

11
00:00:33,420 --> 00:00:41,969
<font color="#E5E5E5">before we do today is actually</font><font color="#CCCCCC"> the</font>

12
00:00:36,570 --> 00:00:45,539
hobbit day if you didn't know this is

13
00:00:41,969 --> 00:00:51,960
the day of Frodo and Bilbo Baggins had

14
00:00:45,539 --> 00:00:55,949
their birthday<font color="#E5E5E5"> and of course you know my</font>

15
00:00:51,960 --> 00:01:00,559
best impression of<font color="#E5E5E5"> a hobbit right what</font>

16
00:00:55,949 --> 00:01:03,239
do<font color="#E5E5E5"> we want for our birthday my</font><font color="#CCCCCC"> precious</font>

17
00:01:00,559 --> 00:01:07,770
and of course<font color="#CCCCCC"> it's the ring of raw</font>

18
00:01:03,239 --> 00:01:10,399
injection right or and you know maybe

19
00:01:07,770 --> 00:01:13,048
the<font color="#E5E5E5"> Ring of Power is not the best</font>

20
00:01:10,400 --> 00:01:16,860
metaphor here but<font color="#E5E5E5"> perhaps the three</font>

21
00:01:13,049 --> 00:01:19,439
elven rings are so we want the ring to

22
00:01:16,860 --> 00:01:22,289
control the state we want the ring to

23
00:01:19,439 --> 00:01:24,929
control the Phi and the ring to control

24
00:01:22,290 --> 00:01:26,880
the frames and of course as it turned

25
00:01:24,930 --> 00:01:29,610
out there was another layer that was

26
00:01:26,880 --> 00:01:31,710
overlooked by<font color="#CCCCCC"> the original</font><font color="#E5E5E5"> designers as</font>

27
00:01:29,610 --> 00:01:34,020
it often happens in hardware security

28
00:01:31,710 --> 00:01:42,979
and that happened to be the Ring of

29
00:01:34,020 --> 00:01:45,869
Power but here<font color="#CCCCCC"> is what a Joshua right</font>

30
00:01:42,979 --> 00:01:47,759
said during his presentation when he

31
00:01:45,869 --> 00:01:54,479
introduced the killer<font color="#E5E5E5"> bee the</font><font color="#CCCCCC"> zigbee</font>

32
00:01:47,759 --> 00:01:57,000
security suite editing tool security

33
00:01:54,479 --> 00:01:58,920
does not improve until practical tools

34
00:01:57,000 --> 00:02:02,610
for exploration of<font color="#CCCCCC"> the attack surface</font>

35
00:01:58,920 --> 00:02:06,780
are made available and when I heard that

36
00:02:02,610 --> 00:02:10,919
I said this<font color="#CCCCCC"> has to be a thing it even</font>

37
00:02:06,780 --> 00:02:12,660
made Wikipedia until somebody of the

38
00:02:10,919 --> 00:02:18,030
<font color="#CCCCCC">Wikipedian deliciousness crowd</font>

39
00:02:12,660 --> 00:02:20,190
to clear eraser to it and but this<font color="#E5E5E5"> is</font>

40
00:02:18,030 --> 00:02:22,140
<font color="#E5E5E5">literally</font><font color="#CCCCCC"> true and we're going to</font><font color="#E5E5E5"> go</font>

41
00:02:20,190 --> 00:02:25,980
<font color="#CCCCCC">through my favorite examples of how this</font>

42
00:02:22,140 --> 00:02:30,720
is<font color="#E5E5E5"> literally true I propose an extension</font>

43
00:02:25,980 --> 00:02:34,500
of this principle and this extension is

44
00:02:30,720 --> 00:02:36,930
a bus or component or a Phi that does

45
00:02:34,500 --> 00:02:41,340
not come with<font color="#E5E5E5"> two so practical injection</font>

46
00:02:36,930 --> 00:02:43,890
of both crafted inputs and<font color="#CCCCCC"> states should</font>

47
00:02:41,340 --> 00:02:46,110
be considered insecure the longer<font color="#CCCCCC"> it</font>

48
00:02:43,890 --> 00:02:47,910
mrs. such tools the more<font color="#E5E5E5"> its build up</font>

49
00:02:46,110 --> 00:02:51,060
the more insecure it should be

50
00:02:47,910 --> 00:02:54,210
considered so when you're given if I or

51
00:02:51,060 --> 00:02:56,820
a bus as a part of your bailiwick of

52
00:02:54,210 --> 00:03:01,320
security<font color="#E5E5E5"> responsibilities these are the</font>

53
00:02:56,820 --> 00:03:07,260
three cya questions right can you<font color="#E5E5E5"> spell</font>

54
00:03:01,320 --> 00:03:11,430
she<font color="#E5E5E5"> why s can you sniff gyi can you</font>

55
00:03:07,260 --> 00:03:14,370
inject cyc can you craft the packets and

56
00:03:11,430 --> 00:03:16,950
the payloads and if<font color="#CCCCCC"> you're</font><font color="#E5E5E5"> not a native</font>

57
00:03:14,370 --> 00:03:20,250
speaker on the<font color="#E5E5E5"> bus then</font><font color="#CCCCCC"> somebody else</font>

58
00:03:16,950 --> 00:03:22,500
somebody else will be and if you don't

59
00:03:20,250 --> 00:03:25,170
have<font color="#E5E5E5"> that capability on the bus you're</font>

60
00:03:22,500 --> 00:03:29,190
seeding it you're receiving that control

61
00:03:25,170 --> 00:03:33,089
to the attacker so tools do make a

62
00:03:29,190 --> 00:03:37,079
difference we're<font color="#E5E5E5"> going to go through</font>

63
00:03:33,090 --> 00:03:40,520
<font color="#CCCCCC">these examples one by one but</font><font color="#E5E5E5"> remember</font>

64
00:03:37,080 --> 00:03:43,980
the<font color="#CCCCCC"> internet of the ping of death in</font>

65
00:03:40,520 --> 00:03:48,870
1990s remember the time when you

66
00:03:43,980 --> 00:03:51,329
couldn't open your machine at a at the

67
00:03:48,870 --> 00:03:54,840
<font color="#CCCCCC">hacker convention without having it blue</font>

68
00:03:51,330 --> 00:03:59,820
screen because of a wireless driver bug

69
00:03:54,840 --> 00:04:02,340
ah well<font color="#CCCCCC"> Pakatan packet is something that</font>

70
00:03:59,820 --> 00:04:04,920
Travis good speed and my students did

71
00:04:02,340 --> 00:04:08,520
and I wasn't<font color="#E5E5E5"> it interesting that you</font>

72
00:04:04,920 --> 00:04:13,859
could actually emit raw<font color="#CCCCCC"> zigbee packets</font>

73
00:04:08,520 --> 00:04:17,609
without ever owning a radio USB has

74
00:04:13,860 --> 00:04:20,760
become a thing and again we had

75
00:04:17,608 --> 00:04:23,190
something<font color="#E5E5E5"> to contribute to that the</font>

76
00:04:20,760 --> 00:04:26,280
revelations that your<font color="#CCCCCC"> disks were likely</font>

77
00:04:23,190 --> 00:04:29,520
<font color="#E5E5E5">to run a unix that could be back</font>

78
00:04:26,280 --> 00:04:32,549
<font color="#CCCCCC">word on the firmware level and so it</font>

79
00:04:29,520 --> 00:04:35,820
just ask yourself why weren't these

80
00:04:32,550 --> 00:04:39,450
things obvious until they became obvious

81
00:04:35,820 --> 00:04:42,960
and until they exploded<font color="#E5E5E5"> and the answer</font>

82
00:04:39,450 --> 00:04:44,700
is the tools were not there the tools

83
00:04:42,960 --> 00:04:47,969
with a practical exploration of the

84
00:04:44,700 --> 00:04:50,219
<font color="#E5E5E5">attack surface</font><font color="#CCCCCC"> were not</font><font color="#E5E5E5"> there and people</font>

85
00:04:47,970 --> 00:04:54,389
have built up trust schemes that turned

86
00:04:50,220 --> 00:04:56,070
out<font color="#CCCCCC"> to be</font><font color="#E5E5E5"> based on sand so the first and</font>

87
00:04:54,389 --> 00:05:00,960
the<font color="#CCCCCC"> most important</font><font color="#E5E5E5"> of one of those</font>

88
00:04:56,070 --> 00:05:02,640
things was of course tcp/ip the idea

89
00:05:00,960 --> 00:05:05,099
that the internet was this friendly

90
00:05:02,640 --> 00:05:08,099
environment where<font color="#CCCCCC"> you had to</font><font color="#E5E5E5"> be liberal</font>

91
00:05:05,100 --> 00:05:10,200
about<font color="#E5E5E5"> what you accepted and everyone</font>

92
00:05:08,100 --> 00:05:12,750
could be dependent to be conservative

93
00:05:10,200 --> 00:05:15,599
about what they sent and of<font color="#CCCCCC"> course there</font>

94
00:05:12,750 --> 00:05:18,180
would be no bad packets right and then

95
00:05:15,600 --> 00:05:22,580
<font color="#E5E5E5">suddenly a ping of death just an</font>

96
00:05:18,180 --> 00:05:25,889
overlong ping or a packet with the same

97
00:05:22,580 --> 00:05:28,139
destination and source IP or one of

98
00:05:25,889 --> 00:05:31,530
those<font color="#E5E5E5"> things and if you think</font><font color="#CCCCCC"> this time</font>

99
00:05:28,139 --> 00:05:36,300
<font color="#CCCCCC">is dunno is over and done with look up</font>

100
00:05:31,530 --> 00:05:42,090
<font color="#E5E5E5">Darwin nuke an IP options packet that oh</font>

101
00:05:36,300 --> 00:05:46,950
look at that crashed<font color="#CCCCCC"> Mac OS Darwin of</font>

102
00:05:42,090 --> 00:05:49,770
not so recent versions so but what made

103
00:05:46,950 --> 00:05:53,870
the difference why is<font color="#E5E5E5"> it the Darwin nuke</font>

104
00:05:49,770 --> 00:06:00,870
is a big deal and<font color="#E5E5E5"> not just one</font><font color="#CCCCCC"> of those</font>

105
00:05:53,870 --> 00:06:03,930
pings of deaths from<font color="#CCCCCC"> before well raw</font>

106
00:06:00,870 --> 00:06:07,410
sockets raw sockets and the<font color="#E5E5E5"> Berkeley</font>

107
00:06:03,930 --> 00:06:09,780
packet filter were really the savior of

108
00:06:07,410 --> 00:06:12,600
the<font color="#CCCCCC"> internets because now you could</font>

109
00:06:09,780 --> 00:06:15,000
hammer on those stacks and then people

110
00:06:12,600 --> 00:06:18,900
<font color="#E5E5E5">wrote libraries that allow them to craft</font>

111
00:06:15,000 --> 00:06:22,320
packets with yeast<font color="#CCCCCC"> labor live net liebe</font>

112
00:06:18,900 --> 00:06:25,530
dich net net filter made it possible to

113
00:06:22,320 --> 00:06:28,229
filter them so nicely steal them into

114
00:06:25,530 --> 00:06:34,770
userland mingle it there this is still

115
00:06:28,229 --> 00:06:37,949
<font color="#E5E5E5">the foundation of every testing tool for</font>

116
00:06:34,770 --> 00:06:40,530
your new<font color="#E5E5E5"> internet protocols and of</font>

117
00:06:37,949 --> 00:06:42,330
course you had to<font color="#E5E5E5"> write this in Python</font>

118
00:06:40,530 --> 00:06:45,030
because who wants to write see if you

119
00:06:42,330 --> 00:06:48,690
can<font color="#E5E5E5"> write in a scripting language uh and</font>

120
00:06:45,030 --> 00:06:50,849
we beat down on the internets until the

121
00:06:48,690 --> 00:06:53,729
Internet's the tcp/ip sticks were

122
00:06:50,849 --> 00:06:56,639
reasonably secured and the only thing

123
00:06:53,729 --> 00:07:00,508
that was crash<font color="#CCCCCC"> Apple that remain</font>

124
00:06:56,639 --> 00:07:04,259
crushable was SCADA now this is good

125
00:07:00,509 --> 00:07:10,080
news right SCADA systems are still in

126
00:07:04,259 --> 00:07:12,949
the 1990s state they still are likely to

127
00:07:10,080 --> 00:07:16,229
have their respective<font color="#CCCCCC"> pings of death and</font>

128
00:07:12,949 --> 00:07:18,590
how<font color="#CCCCCC"> did that come about well you can't</font>

129
00:07:16,229 --> 00:07:23,849
you couldn't beat up<font color="#E5E5E5"> on them until</font>

130
00:07:18,590 --> 00:07:27,810
recently as you beat up on<font color="#E5E5E5"> the regular</font>

131
00:07:23,849 --> 00:07:30,539
tcp/ip stacks and unless people are

132
00:07:27,810 --> 00:07:34,159
given the means to beat up on those

133
00:07:30,539 --> 00:07:37,110
scalar stacks things will not be nice

134
00:07:34,159 --> 00:07:41,550
because<font color="#CCCCCC"> people out there are not</font>

135
00:07:37,110 --> 00:07:42,900
necessarily nice to your SCADA system of

136
00:07:41,550 --> 00:07:46,409
course you know we're talking about

137
00:07:42,900 --> 00:07:49,349
million-dollar pieces of equipment

138
00:07:46,409 --> 00:07:54,319
rather than a thousand dollar ones but

139
00:07:49,349 --> 00:07:57,599
this has<font color="#CCCCCC"> to happen but raw sockets are</font>

140
00:07:54,319 --> 00:08:02,400
basically brought the internet the

141
00:07:57,599 --> 00:08:05,190
tcp/ip sticks with compliance to the

142
00:08:02,400 --> 00:08:07,440
<font color="#E5E5E5">rights principle on the lever layer 2</font>

143
00:08:05,190 --> 00:08:10,409
and up and that's why<font color="#CCCCCC"> we have a</font>

144
00:08:07,440 --> 00:08:16,770
reasonable set of state with our tcp/ip

145
00:08:10,409 --> 00:08:19,080
sticks so is that the<font color="#E5E5E5"> case with most</font>

146
00:08:16,770 --> 00:08:22,109
operating systems with most other parts

147
00:08:19,080 --> 00:08:24,750
of the operating systems tcp/ip stacks

148
00:08:22,110 --> 00:08:30,509
have been improved did anything else not

149
00:08:24,750 --> 00:08:31,949
really and I am going<font color="#E5E5E5"> to throw out this</font>

150
00:08:30,509 --> 00:08:33,899
intuition because one of the

151
00:08:31,949 --> 00:08:38,880
prerogatives of the<font color="#E5E5E5"> keynote is that you</font>

152
00:08:33,899 --> 00:08:42,078
can you get to say<font color="#CCCCCC"> things and then maybe</font>

153
00:08:38,880 --> 00:08:42,078
people will prove them true

154
00:08:42,120 --> 00:08:49,110
it's not<font color="#CCCCCC"> just that all layers of parsers</font>

155
00:08:45,800 --> 00:08:53,400
it's not<font color="#E5E5E5"> just</font><font color="#CCCCCC"> that parsers are crashing</font>

156
00:08:49,110 --> 00:08:57,750
we know that what will no less of is

157
00:08:53,400 --> 00:09:02,130
that parsers have dialects parsers that

158
00:08:57,750 --> 00:09:05,580
do not necessarily need to<font color="#E5E5E5"> crash to do</font>

159
00:09:02,130 --> 00:09:08,130
bad things to your system they just need

160
00:09:05,580 --> 00:09:10,110
<font color="#CCCCCC">to understand things differently between</font>

161
00:09:08,130 --> 00:09:15,240
two different components of<font color="#E5E5E5"> the system</font>

162
00:09:10,110 --> 00:09:19,230
this starts at the phy layer and this

163
00:09:15,240 --> 00:09:22,140
has<font color="#CCCCCC"> been an unexplored land and it</font>

164
00:09:19,230 --> 00:09:24,930
should not remain unexplored if we<font color="#E5E5E5"> are</font>

165
00:09:22,140 --> 00:09:28,110
to depend on<font color="#E5E5E5"> those wireless</font>

166
00:09:24,930 --> 00:09:30,329
communications for or those other fight

167
00:09:28,110 --> 00:09:33,110
communications or those other bus

168
00:09:30,330 --> 00:09:36,660
communications for things such as skate

169
00:09:33,110 --> 00:09:39,750
that's<font color="#E5E5E5"> a one thing that dialects are</font>

170
00:09:36,660 --> 00:09:43,850
underappreciated we only look for

171
00:09:39,750 --> 00:09:46,279
crashes we don't look<font color="#E5E5E5"> for</font>

172
00:09:43,850 --> 00:09:49,560
misinterpretations or<font color="#E5E5E5"> non-equivalent</font>

173
00:09:46,279 --> 00:09:53,220
interpretations our fathers are machines

174
00:09:49,560 --> 00:09:55,619
for finding crashes not double readings

175
00:09:53,220 --> 00:09:58,050
not double meanings not ambiguities

176
00:09:55,620 --> 00:10:01,440
that's one thing and then the other

177
00:09:58,050 --> 00:10:04,620
<font color="#CCCCCC">thing is that we built our operating</font>

178
00:10:01,440 --> 00:10:07,860
systems in such a way that the upper

179
00:10:04,620 --> 00:10:10,980
layers trust the lower layers state to

180
00:10:07,860 --> 00:10:14,550
be valid<font color="#E5E5E5"> and they trust it to not to not</font>

181
00:10:10,980 --> 00:10:16,709
change from under them if you think

182
00:10:14,550 --> 00:10:18,599
about how<font color="#E5E5E5"> your unix is built if you</font>

183
00:10:16,709 --> 00:10:20,969
think about how<font color="#E5E5E5"> your any major operating</font>

184
00:10:18,600 --> 00:10:23,640
system is built this is pretty<font color="#E5E5E5"> much it</font>

185
00:10:20,970 --> 00:10:26,459
you build layers of abstractions then

186
00:10:23,640 --> 00:10:29,990
each layer abstraction trusts the lower

187
00:10:26,459 --> 00:10:33,630
layers that the state is what it was

188
00:10:29,990 --> 00:10:37,050
that the abstraction is is<font color="#E5E5E5"> wrapping and</font>

189
00:10:33,630 --> 00:10:39,120
that need not a<font color="#CCCCCC"> poll be the case</font><font color="#E5E5E5"> so</font>

190
00:10:37,050 --> 00:10:41,729
let's talk through these two things<font color="#E5E5E5"> and</font>

191
00:10:39,120 --> 00:10:44,190
I predict<font color="#E5E5E5"> that these two things are</font>

192
00:10:41,730 --> 00:10:47,010
<font color="#E5E5E5">going to be where interesting</font>

193
00:10:44,190 --> 00:10:49,020
vulnerability action will occur in the

194
00:10:47,010 --> 00:10:53,189
next few years so let's talk about

195
00:10:49,020 --> 00:10:55,590
dialects you have this problem that you

196
00:10:53,190 --> 00:10:57,360
want to design a protocol a

197
00:10:55,590 --> 00:10:59,700
and you've got a couple of fields and

198
00:10:57,360 --> 00:11:02,210
then you need you add a couple more and

199
00:10:59,700 --> 00:11:06,420
they're<font color="#E5E5E5"> just not enough feels right</font>

200
00:11:02,210 --> 00:11:09,480
think of our Wi-Fi think of 802 11 right

201
00:11:06,420 --> 00:11:16,349
how many fields in a beacon can you

202
00:11:09,480 --> 00:11:19,410
count oh you know 2050 did you count the

203
00:11:16,350 --> 00:11:22,850
proprietary information elements in the

204
00:11:19,410 --> 00:11:26,010
<font color="#CCCCCC">vegan oh well okay not enough fields and</font>

205
00:11:22,850 --> 00:11:28,950
parsing is magic and of<font color="#CCCCCC"> course parsers</font>

206
00:11:26,010 --> 00:11:30,450
can crash but we know this ah something

207
00:11:28,950 --> 00:11:32,760
really interesting else really

208
00:11:30,450 --> 00:11:37,160
interesting is going on when you have in

209
00:11:32,760 --> 00:11:39,960
fields with M values each that's an

210
00:11:37,160 --> 00:11:43,439
exponential growth that you've got<font color="#E5E5E5"> there</font>

211
00:11:39,960 --> 00:11:46,380
it's M to the N combinations of fields

212
00:11:43,440 --> 00:11:51,480
that you're looking<font color="#E5E5E5"> at now do all of</font>

213
00:11:46,380 --> 00:11:54,930
them make sense does the firmware check

214
00:11:51,480 --> 00:11:59,790
all of them does the firmware check all

215
00:11:54,930 --> 00:12:02,520
<font color="#CCCCCC">of those M R to the power n our parts if</font>

216
00:11:59,790 --> 00:12:06,650
not then your hardware then your

217
00:12:02,520 --> 00:12:09,750
firmware has dialects in which it will

218
00:12:06,650 --> 00:12:12,990
interpret some things as true when they

219
00:12:09,750 --> 00:12:14,910
are not and perhaps some things<font color="#E5E5E5"> as valid</font>

220
00:12:12,990 --> 00:12:17,700
when they are not and perhaps<font color="#E5E5E5"> some</font>

221
00:12:14,910 --> 00:12:23,730
things<font color="#E5E5E5"> and invalid when they might be</font>

222
00:12:17,700 --> 00:12:27,720
valid<font color="#E5E5E5"> and so the attitude 11 was a prime</font>

223
00:12:23,730 --> 00:12:31,020
example of that we only started seeing

224
00:12:27,720 --> 00:12:36,240
that of course you know behold the glory

225
00:12:31,020 --> 00:12:43,050
of the<font color="#E5E5E5"> 802 11 beacon right it can be as</font>

226
00:12:36,240 --> 00:12:49,800
long as 200 bites it has a multiple

227
00:12:43,050 --> 00:12:53,250
variable length<font color="#CCCCCC"> F fields it has sub</font>

228
00:12:49,800 --> 00:12:56,490
languages for those fields we each with

229
00:12:53,250 --> 00:12:58,320
its own parser and all of<font color="#E5E5E5"> this used to</font>

230
00:12:56,490 --> 00:13:01,410
happen in your driver or in your

231
00:12:58,320 --> 00:13:03,450
firmware in your firmware with the

232
00:13:01,410 --> 00:13:05,160
original cards because only firmware was

233
00:13:03,450 --> 00:13:08,140
fast enough to deal with<font color="#CCCCCC"> the</font>

234
00:13:05,160 --> 00:13:13,750
microseconds timings and yeah prison too

235
00:13:08,140 --> 00:13:17,620
<font color="#CCCCCC">orinoco was the first card to allow</font>

236
00:13:13,750 --> 00:13:19,990
Wi-Fi injection and it was not<font color="#E5E5E5"> even as</font>

237
00:13:17,620 --> 00:13:23,530
far as I'm aware of and it wasn't<font color="#E5E5E5"> even</font>

238
00:13:19,990 --> 00:13:27,100
that easy<font color="#E5E5E5"> because it was heavily</font>

239
00:13:23,530 --> 00:13:31,480
dependent<font color="#E5E5E5"> on the firmware the firmware</font>

240
00:13:27,100 --> 00:13:35,290
would even if you give your card a raw

241
00:13:31,480 --> 00:13:39,460
buffer it would corrupt it well it is<font color="#CCCCCC"> it</font>

242
00:13:35,290 --> 00:13:41,290
would rewrite it it would correct it but

243
00:13:39,460 --> 00:13:43,960
of course<font color="#CCCCCC"> what you wanted to send was</font>

244
00:13:41,290 --> 00:13:47,439
the crafted frame and you<font color="#CCCCCC"> had to</font>

245
00:13:43,960 --> 00:13:49,660
actually erase it in the debug mode with

246
00:13:47,440 --> 00:13:52,210
a writing back the changes that you

247
00:13:49,660 --> 00:13:55,900
wanted<font color="#CCCCCC"> to take place in the frame and</font>

248
00:13:52,210 --> 00:13:58,630
then half the<font color="#E5E5E5"> time you won the race and</font>

249
00:13:55,900 --> 00:14:01,000
that's<font color="#E5E5E5"> how you inject a row</font><font color="#CCCCCC"> Wi-Fi frames</font>

250
00:13:58,630 --> 00:14:04,630
and then of course a thurs came along

251
00:14:01,000 --> 00:14:08,740
and showing raw buffers out of your

252
00:14:04,630 --> 00:14:10,480
Wi-Fi interface got easier and the way

253
00:14:08,740 --> 00:14:13,900
we knew this was this little talk called

254
00:14:10,480 --> 00:14:17,260
hijacking a macbook in 60 seconds you

255
00:14:13,900 --> 00:14:21,760
opened up that's black<font color="#CCCCCC"> hat 2006 you open</font>

256
00:14:17,260 --> 00:14:28,180
up your macbook it starts pulling in

257
00:14:21,760 --> 00:14:34,120
that<font color="#CCCCCC"> your 8211 beacons and probe</font>

258
00:14:28,180 --> 00:14:37,599
responses and boom you have<font color="#E5E5E5"> ring 0a a</font>

259
00:14:34,120 --> 00:14:40,060
parser bug turned out that all those

260
00:14:37,600 --> 00:14:44,680
parsers were buggy but the reason we

261
00:14:40,060 --> 00:14:48,400
found this out was that raw injection

262
00:14:44,680 --> 00:14:50,530
finally became available as a commodity

263
00:14:48,400 --> 00:14:52,930
you could do<font color="#CCCCCC"> that</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> your</font>

264
00:14:50,530 --> 00:14:56,740
<font color="#E5E5E5">hundred-dollar card you didn't need</font><font color="#CCCCCC"> to</font>

265
00:14:52,930 --> 00:14:59,349
have a<font color="#E5E5E5"> special equipment and security</font>

266
00:14:56,740 --> 00:15:02,200
just took a plunge and then got a lot

267
00:14:59,350 --> 00:15:03,580
better because tools for the practical

268
00:15:02,200 --> 00:15:06,310
exploration of<font color="#CCCCCC"> that attack surface</font>

269
00:15:03,580 --> 00:15:09,730
became available and<font color="#E5E5E5"> then if you want</font>

270
00:15:06,310 --> 00:15:13,839
more history<font color="#E5E5E5"> of this the uninformed 62</font>

271
00:15:09,730 --> 00:15:15,880
has this wonderful article about setting

272
00:15:13,840 --> 00:15:18,800
up for the exploration of this attack

273
00:15:15,880 --> 00:15:23,370
surface and I could not<font color="#CCCCCC"> resist</font>

274
00:15:18,800 --> 00:15:25,589
pasting the bugs of the month of<font color="#CCCCCC"> Colonel</font>

275
00:15:23,370 --> 00:15:31,110
bugs november two thousand six that were

276
00:15:25,589 --> 00:15:36,630
discovered in Wi-Fi within one month so

277
00:15:31,110 --> 00:15:40,740
that that those<font color="#CCCCCC"> are parser</font><font color="#E5E5E5"> bucks but</font>

278
00:15:36,630 --> 00:15:44,490
what about<font color="#E5E5E5"> dialects well let's look so</font>

279
00:15:40,740 --> 00:15:46,350
here is<font color="#E5E5E5"> a bite full of flags so you've</font>

280
00:15:44,490 --> 00:15:50,220
got two hundred fifty sixty to the

281
00:15:46,350 --> 00:15:56,790
eighth combinations are all those

282
00:15:50,220 --> 00:16:00,270
combinations valid surely not i am not

283
00:15:56,790 --> 00:16:02,939
going to dwell too much on 8211 but you

284
00:16:00,270 --> 00:16:08,279
know you've got<font color="#E5E5E5"> three types and subtypes</font>

285
00:16:02,940 --> 00:16:10,380
that you use and flags such as oh this

286
00:16:08,279 --> 00:16:12,150
comes from<font color="#E5E5E5"> the wired side which can know</font>

287
00:16:10,380 --> 00:16:15,630
what happen for a management frame or a

288
00:16:12,150 --> 00:16:20,850
control frame so most<font color="#E5E5E5"> of that space of</font>

289
00:16:15,630 --> 00:16:24,560
the values<font color="#CCCCCC"> of these flags is invalid so</font>

290
00:16:20,850 --> 00:16:30,050
here is an old exploration of hours

291
00:16:24,560 --> 00:16:34,859
which lobbed random values or exhaustive

292
00:16:30,050 --> 00:16:38,910
256 values of those flags at various

293
00:16:34,860 --> 00:16:41,940
chipsets and drivers and so how many of

294
00:16:38,910 --> 00:16:45,209
those they responded to how<font color="#E5E5E5"> many of</font>

295
00:16:41,940 --> 00:16:47,430
those they saw as valid even though the

296
00:16:45,209 --> 00:16:49,469
combinations of legs were nonsensical

297
00:16:47,430 --> 00:16:53,160
<font color="#E5E5E5">and you can sort of see the binary tree</font>

298
00:16:49,470 --> 00:16:55,650
linksys<font color="#CCCCCC"> are would respond to just about</font>

299
00:16:53,160 --> 00:16:58,079
any combination of flags yeah we don't

300
00:16:55,650 --> 00:17:05,180
<font color="#CCCCCC">care it looks like a valid</font><font color="#E5E5E5"> probe to me</font>

301
00:16:58,080 --> 00:17:05,180
here is your<font color="#CCCCCC"> answer various other</font>

302
00:17:05,839 --> 00:17:13,500
vendors were a bit<font color="#E5E5E5"> more selective about</font>

303
00:17:11,400 --> 00:17:15,900
<font color="#E5E5E5">what they responded but they still</font>

304
00:17:13,500 --> 00:17:19,790
responded to a whole bunch<font color="#CCCCCC"> of uh</font>

305
00:17:15,900 --> 00:17:22,459
nonsensical frames and the same for<font color="#CCCCCC"> our</font>

306
00:17:19,790 --> 00:17:27,869
other<font color="#CCCCCC"> tests when this were</font>

307
00:17:22,459 --> 00:17:32,140
authentication requests and responses so

308
00:17:27,869 --> 00:17:35,760
you see if you imagine this firmware

309
00:17:32,140 --> 00:17:40,680
as this collection of basic blocks and

310
00:17:35,760 --> 00:17:44,230
your packet picking a path through them

311
00:17:40,680 --> 00:17:46,330
it turns out that however you connect

312
00:17:44,230 --> 00:17:49,290
those little checks and you will not

313
00:17:46,330 --> 00:17:51,970
have all<font color="#CCCCCC"> of them that makes your dialect</font>

314
00:17:49,290 --> 00:17:55,440
so what<font color="#CCCCCC"> that what that what that means</font>

315
00:17:51,970 --> 00:17:58,540
is that you can talk<font color="#CCCCCC"> to a particular</font>

316
00:17:55,440 --> 00:18:04,240
device a particular make of a device

317
00:17:58,540 --> 00:18:05,980
with everyone else not hearing even

318
00:18:04,240 --> 00:18:09,700
though they're listening<font color="#E5E5E5"> even though</font>

319
00:18:05,980 --> 00:18:12,610
your way loud even<font color="#CCCCCC"> though there</font><font color="#E5E5E5"> is no</font>

320
00:18:09,700 --> 00:18:16,690
noise it's<font color="#E5E5E5"> just because this device</font>

321
00:18:12,610 --> 00:18:19,120
believes that this nonsensical

322
00:18:16,690 --> 00:18:21,820
combination is actually valid cannot

323
00:18:19,120 --> 00:18:27,580
possibly test all<font color="#CCCCCC"> of</font><font color="#E5E5E5"> them and others</font>

324
00:18:21,820 --> 00:18:31,300
just discard them so<font color="#E5E5E5"> zigbee so</font><font color="#CCCCCC"> zigbee</font>

325
00:18:27,580 --> 00:18:34,389
was supposed to be a simplified and then

326
00:18:31,300 --> 00:18:39,460
developed and then it developed some

327
00:18:34,390 --> 00:18:42,310
more and<font color="#CCCCCC"> then it ended up being no</font>

328
00:18:39,460 --> 00:18:45,580
simplify at all and so<font color="#CCCCCC"> our next</font>

329
00:18:42,310 --> 00:18:48,490
exploration of this thing was well let's

330
00:18:45,580 --> 00:18:51,429
see if we can do to that what we could

331
00:18:48,490 --> 00:18:54,340
do to a 2 to 11 but with 8211 if you

332
00:18:51,430 --> 00:18:57,370
know just we were at layer 2 with this

333
00:18:54,340 --> 00:19:02,679
one thanks to the miracle chip the chip

334
00:18:57,370 --> 00:19:06,030
con<font color="#CCCCCC"> 2420 we could be at layer 1 and of</font>

335
00:19:02,680 --> 00:19:09,250
course<font color="#CCCCCC"> the layer 1 is</font><font color="#E5E5E5"> not just a</font>

336
00:19:06,030 --> 00:19:12,100
monolithic layer it contains of many it

337
00:19:09,250 --> 00:19:18,420
consists<font color="#CCCCCC"> of many sub layers this chip</font>

338
00:19:12,100 --> 00:19:25,419
allowed us to control<font color="#E5E5E5"> the single symbols</font>

339
00:19:18,420 --> 00:19:29,260
that we sent on the air and Travis and

340
00:19:25,420 --> 00:19:32,410
my students built this device which is

341
00:19:29,260 --> 00:19:34,480
kind<font color="#E5E5E5"> of like a good fit those of you are</font>

342
00:19:32,410 --> 00:19:38,830
probably familiar with that who have

343
00:19:34,480 --> 00:19:41,110
done this are probably familiar with

344
00:19:38,830 --> 00:19:45,649
this architecture there is an msp430

345
00:19:41,110 --> 00:19:47,899
processor in the middle it plays

346
00:19:45,650 --> 00:19:51,620
the<font color="#CCCCCC"> middleman</font><font color="#E5E5E5"> between your ftdi chip</font>

347
00:19:47,900 --> 00:19:53,390
that gives you a serial<font color="#E5E5E5"> over USB this is</font>

348
00:19:51,620 --> 00:19:56,169
how you get<font color="#E5E5E5"> your Python made packets</font>

349
00:19:53,390 --> 00:19:59,750
into this thing and then the chip

350
00:19:56,170 --> 00:20:03,940
connected over<font color="#E5E5E5"> SPI just sends them out</font>

351
00:19:59,750 --> 00:20:06,920
the antenna part was actually<font color="#CCCCCC"> the most</font>

352
00:20:03,940 --> 00:20:10,450
tricky<font color="#E5E5E5"> part and this is where most of</font>

353
00:20:06,920 --> 00:20:15,680
<font color="#E5E5E5">the time was spent but look at this as a</font>

354
00:20:10,450 --> 00:20:19,250
raw sockets for<font color="#CCCCCC"> zigbee as a card as an</font>

355
00:20:15,680 --> 00:20:23,000
<font color="#E5E5E5">interface that would send any frame that</font>

356
00:20:19,250 --> 00:20:25,520
<font color="#CCCCCC">you care to Sam and we were</font><font color="#E5E5E5"> looking for</font>

357
00:20:23,000 --> 00:20:28,340
dialects<font color="#CCCCCC"> but of course</font><font color="#E5E5E5"> we found the</font>

358
00:20:25,520 --> 00:20:32,570
packet<font color="#CCCCCC"> in packet first for those of you</font>

359
00:20:28,340 --> 00:20:36,290
<font color="#E5E5E5">who have somehow missed it it turns out</font>

360
00:20:32,570 --> 00:20:40,280
that since the<font color="#E5E5E5"> modulation of the</font>

361
00:20:36,290 --> 00:20:42,680
preamble and the start<font color="#CCCCCC"> to frame</font>

362
00:20:40,280 --> 00:20:47,389
delimiter is exactly the same<font color="#CCCCCC"> as that of</font>

363
00:20:42,680 --> 00:20:50,120
the<font color="#E5E5E5"> payload you can send a packet that</font>

364
00:20:47,390 --> 00:20:53,170
contains the payload in the application

365
00:20:50,120 --> 00:20:57,469
layer that is<font color="#CCCCCC"> a valid frame and</font>

366
00:20:53,170 --> 00:21:00,320
occasionally you will hear<font color="#CCCCCC"> that valid</font>

367
00:20:57,470 --> 00:21:04,580
frame as if it were transmitted in<font color="#CCCCCC"> the</font>

368
00:21:00,320 --> 00:21:06,860
raw so just being able to<font color="#E5E5E5"> control the</font>

369
00:21:04,580 --> 00:21:08,929
application layer on an unencrypted

370
00:21:06,860 --> 00:21:12,969
<font color="#E5E5E5">network encryption would throw a monkey</font>

371
00:21:08,930 --> 00:21:15,890
wrench into this you could have the

372
00:21:12,970 --> 00:21:19,970
transmission of a row frame without an

373
00:21:15,890 --> 00:21:22,340
actual radio that's interesting<font color="#E5E5E5"> and why</font>

374
00:21:19,970 --> 00:21:24,020
could you do this well because the

375
00:21:22,340 --> 00:21:26,899
actual start<font color="#E5E5E5"> the frame delimiter would</font>

376
00:21:24,020 --> 00:21:30,350
be lost to noise and for all the card

377
00:21:26,900 --> 00:21:32,420
knew this was the preamble and this was

378
00:21:30,350 --> 00:21:36,649
the start<font color="#E5E5E5"> of frame delimiter and it</font>

379
00:21:32,420 --> 00:21:39,020
happily received that frame and if

380
00:21:36,650 --> 00:21:45,310
<font color="#E5E5E5">you're interested in that we have a site</font>

381
00:21:39,020 --> 00:21:48,920
called demystify Phi spelled as Phi and

382
00:21:45,310 --> 00:21:51,830
there were a lot more tricks that came

383
00:21:48,920 --> 00:21:54,950
from<font color="#CCCCCC"> that but what</font><font color="#E5E5E5"> about the dialects it</font>

384
00:21:51,830 --> 00:21:59,520
turned out that<font color="#CCCCCC"> zigbee has dialects on</font>

385
00:21:54,950 --> 00:22:03,360
the a fine layer

386
00:21:59,520 --> 00:22:06,950
you<font color="#E5E5E5"> vary the linker that preamble half</font>

387
00:22:03,360 --> 00:22:11,939
of your chips would not hear the packet

388
00:22:06,950 --> 00:22:17,190
others will hear them just fine you are

389
00:22:11,940 --> 00:22:19,320
so we<font color="#E5E5E5"> tested three dominant vendors you</font>

390
00:22:17,190 --> 00:22:22,670
throw garbage between the preamble and

391
00:22:19,320 --> 00:22:29,070
the start of frame delimiter same thing

392
00:22:22,670 --> 00:22:32,430
so you can shout past your<font color="#E5E5E5"> ideas if you</font>

393
00:22:29,070 --> 00:22:38,760
pick your malformation of the preamble

394
00:22:32,430 --> 00:22:41,130
just right and it will not here now can

395
00:22:38,760 --> 00:22:44,610
this be the case<font color="#E5E5E5"> on other buses and</font>

396
00:22:41,130 --> 00:22:48,810
other files sure Andrea Barry signing

397
00:22:44,610 --> 00:22:53,189
found this<font color="#E5E5E5"> in Ethernet of course they</font>

398
00:22:48,810 --> 00:22:55,620
had to<font color="#E5E5E5"> build a quite a device to inject</font>

399
00:22:53,190 --> 00:22:59,340
our packets there were no ready-made

400
00:22:55,620 --> 00:23:03,360
parts as for our mode<font color="#E5E5E5"> that we built for</font>

401
00:22:59,340 --> 00:23:06,679
<font color="#E5E5E5">zigbee but are we seeing that sort of</font>

402
00:23:03,360 --> 00:23:10,320
thing built for other bosses we're not

403
00:23:06,680 --> 00:23:13,260
are we seeing tools for finding

404
00:23:10,320 --> 00:23:15,840
divergences rather than crashes and you

405
00:23:13,260 --> 00:23:19,110
think of<font color="#E5E5E5"> it everyone has habituated</font>

406
00:23:15,840 --> 00:23:22,139
themselves to fuzzy but fuzzing is

407
00:23:19,110 --> 00:23:25,110
something that generally finds you a

408
00:23:22,140 --> 00:23:27,840
crash a corruption this is how it's

409
00:23:25,110 --> 00:23:30,959
evidenced does it find you divergencies

410
00:23:27,840 --> 00:23:33,449
and of<font color="#CCCCCC"> course your system Macon's</font>

411
00:23:30,960 --> 00:23:36,270
<font color="#CCCCCC">consists</font><font color="#E5E5E5"> of several components not one</font>

412
00:23:33,450 --> 00:23:38,370
if they disagree about what is being

413
00:23:36,270 --> 00:23:40,470
<font color="#E5E5E5">sent what does</font><font color="#CCCCCC"> it mean for the security</font>

414
00:23:38,370 --> 00:23:49,040
of your system<font color="#E5E5E5"> I feel that</font><font color="#CCCCCC"> this is</font>

415
00:23:40,470 --> 00:23:51,510
seriously under explored so so<font color="#E5E5E5"> let's</font>

416
00:23:49,040 --> 00:23:55,649
this is the kind of a birthday<font color="#E5E5E5"> present</font>

417
00:23:51,510 --> 00:23:59,670
<font color="#E5E5E5">that we security hobbits are missing</font>

418
00:23:55,650 --> 00:24:03,090
<font color="#CCCCCC">from our</font><font color="#E5E5E5"> hardware people let's talk</font>

419
00:23:59,670 --> 00:24:07,110
about stage in the<font color="#E5E5E5"> US so the</font><font color="#CCCCCC"> u.s. is</font>

420
00:24:03,090 --> 00:24:11,370
this layer cake and who knows<font color="#CCCCCC"> this layer</font>

421
00:24:07,110 --> 00:24:15,059
cake best route get authors

422
00:24:11,370 --> 00:24:18,360
because they instrumented in the most

423
00:24:15,059 --> 00:24:21,030
reliable<font color="#E5E5E5"> ways and reliability is their</font>

424
00:24:18,360 --> 00:24:28,409
game a rootkit that crashes is a very

425
00:24:21,030 --> 00:24:31,920
crappy rootkit but if you start<font color="#CCCCCC"> looking</font>

426
00:24:28,410 --> 00:24:36,600
at this one thing strikes you is that

427
00:24:31,920 --> 00:24:39,300
the upper layer thinks it's the boss<font color="#E5E5E5"> the</font>

428
00:24:36,600 --> 00:24:44,070
upper layer depends on the lower layers

429
00:24:39,300 --> 00:24:47,970
to stand still and if you control the

430
00:24:44,070 --> 00:24:51,480
bus over which your USB hard drive sets

431
00:24:47,970 --> 00:24:53,880
or your normal hard drive seats that is

432
00:24:51,480 --> 00:24:58,350
an entirely falsified assumption right

433
00:24:53,880 --> 00:25:00,030
there so what if<font color="#CCCCCC"> you're cool back that</font>

434
00:24:58,350 --> 00:25:02,370
<font color="#E5E5E5">is supposed to notified you of the</font>

435
00:25:00,030 --> 00:25:06,210
change is not cold you know what then

436
00:25:02,370 --> 00:25:09,389
what good is your abstraction um we're

437
00:25:06,210 --> 00:25:11,370
seeing those kinds of oh let's pull the

438
00:25:09,390 --> 00:25:13,410
rug from the higher level of

439
00:25:11,370 --> 00:25:17,790
abstractions and the security schemes

440
00:25:13,410 --> 00:25:21,630
based on that in<font color="#CCCCCC"> octo so here is a fun</font>

441
00:25:17,790 --> 00:25:25,260
paper by<font color="#E5E5E5"> Colin mulliner and others at</font>

442
00:25:21,630 --> 00:25:31,170
<font color="#CCCCCC">wood 2012 it's called read it twice it's</font>

443
00:25:25,260 --> 00:25:33,750
a hack of a smart TV and the idea<font color="#CCCCCC"> of</font>

444
00:25:31,170 --> 00:25:36,179
<font color="#E5E5E5">that hack is okay here's a security</font>

445
00:25:33,750 --> 00:25:39,000
scheme that doesn't allow you to load

446
00:25:36,179 --> 00:25:45,179
libraries but<font color="#E5E5E5"> it does allow you to load</font>

447
00:25:39,000 --> 00:25:49,350
<font color="#E5E5E5">assigned flash files so if you actually</font>

448
00:25:45,179 --> 00:25:53,280
stick a gum stick in there instead<font color="#CCCCCC"> of</font>

449
00:25:49,350 --> 00:25:56,520
<font color="#E5E5E5">the hard drive and control what that</font>

450
00:25:53,280 --> 00:25:58,830
thing gives the file system drivers the

451
00:25:56,520 --> 00:26:01,679
file system driver will happily verify

452
00:25:58,830 --> 00:26:04,290
the file and then you switch the file

453
00:26:01,679 --> 00:26:10,850
system on it and then it happily loads

454
00:26:04,290 --> 00:26:13,800
the verified file now<font color="#CCCCCC"> you slipped into a</font>

455
00:26:10,850 --> 00:26:16,439
lower layer and you made that lower

456
00:26:13,800 --> 00:26:20,879
layer run<font color="#CCCCCC"> away from</font><font color="#E5E5E5"> the higher layer</font>

457
00:26:16,440 --> 00:26:23,370
this is how we asses are designed the

458
00:26:20,880 --> 00:26:24,780
they are<font color="#E5E5E5"> not designed</font><font color="#CCCCCC"> to do anything</font>

459
00:26:23,370 --> 00:26:29,510
<font color="#E5E5E5">else they're not designed</font>

460
00:26:24,780 --> 00:26:32,910
um<font color="#E5E5E5"> question what comes from lower layers</font>

461
00:26:29,510 --> 00:26:36,450
<font color="#CCCCCC">or</font><font color="#E5E5E5"> you might say this is just a taco I</font>

462
00:26:32,910 --> 00:26:39,620
mean and you<font color="#CCCCCC"> know we note octos so let's</font>

463
00:26:36,450 --> 00:26:45,540
try<font color="#E5E5E5"> to unpin</font><font color="#CCCCCC"> whole what the taco is</font>

464
00:26:39,620 --> 00:26:51,149
right ah this a very name of the taco I

465
00:26:45,540 --> 00:26:55,530
say is highly misleading unless your<font color="#E5E5E5"> CPU</font>

466
00:26:51,150 --> 00:26:59,370
is somehow a magic atomic<font color="#E5E5E5"> CPU you always</font>

467
00:26:55,530 --> 00:27:01,620
check before you use right you always

468
00:26:59,370 --> 00:27:04,860
separate the times of check and the time

469
00:27:01,620 --> 00:27:07,500
of use you can't freeze the state I mean

470
00:27:04,860 --> 00:27:12,300
it can freeze your entire system before

471
00:27:07,500 --> 00:27:15,210
that so at octo is really the state can

472
00:27:12,300 --> 00:27:18,330
change without you knowing and of course

473
00:27:15,210 --> 00:27:22,410
<font color="#E5E5E5">you have all kinds of schemes to combat</font>

474
00:27:18,330 --> 00:27:27,810
that trusted computing introduced a

475
00:27:22,410 --> 00:27:31,080
bunch and it's just one of those but how

476
00:27:27,810 --> 00:27:36,090
<font color="#E5E5E5">much OS code is written to explicitly</font>

477
00:27:31,080 --> 00:27:40,740
distrust the lower layer very very few

478
00:27:36,090 --> 00:27:44,970
and so we find ourselves in a situation

479
00:27:40,740 --> 00:27:50,070
when a<font color="#E5E5E5"> lying device can do absolutely</font>

480
00:27:44,970 --> 00:27:54,720
anything<font color="#CCCCCC"> to the rest of the system so I</font>

481
00:27:50,070 --> 00:27:58,100
psgroove was on PlayStation 3 the

482
00:27:54,720 --> 00:28:04,500
jailbreak but was one example<font color="#E5E5E5"> of that</font>

483
00:27:58,100 --> 00:28:07,860
you set up this system<font color="#CCCCCC"> to expect one</font>

484
00:28:04,500 --> 00:28:10,620
thing you give it another you create a

485
00:28:07,860 --> 00:28:13,110
vulnerable configuration and then you

486
00:28:10,620 --> 00:28:15,239
<font color="#E5E5E5">exploit the most interesting part is</font>

487
00:28:13,110 --> 00:28:17,969
that you create this vulnerable

488
00:28:15,240 --> 00:28:21,660
configuration yourself and then of

489
00:28:17,970 --> 00:28:26,270
course this is<font color="#CCCCCC"> the problem that people</font>

490
00:28:21,660 --> 00:28:29,870
have encountered as early as 1960s 1970s

491
00:28:26,270 --> 00:28:32,760
james morris jr when he wrote his

492
00:28:29,870 --> 00:28:34,500
fundamental paper on types wrote that oh

493
00:28:32,760 --> 00:28:36,039
the programmer could begin every

494
00:28:34,500 --> 00:28:38,440
operation with evolved form

495
00:28:36,039 --> 00:28:43,559
this check but then you know there would

496
00:28:38,440 --> 00:28:47,470
be no program no useful programming left

497
00:28:43,559 --> 00:28:50,889
how many os's are built around types

498
00:28:47,470 --> 00:28:53,350
types are the solution for this types

499
00:28:50,889 --> 00:28:58,090
were the thing that allowed you to be

500
00:28:53,350 --> 00:29:01,238
reasonably clear about what kind of a

501
00:28:58,090 --> 00:29:06,399
data structure you trusted how many OSS

502
00:29:01,239 --> 00:29:09,039
<font color="#E5E5E5">are typesafe it is a hard problem it is</font>

503
00:29:06,399 --> 00:29:12,879
<font color="#CCCCCC">going to be a harder problem if</font><font color="#E5E5E5"> we keep</font>

504
00:29:09,039 --> 00:29:18,700
the buses unexplored my favorite<font color="#CCCCCC"> thing</font>

505
00:29:12,879 --> 00:29:22,689
are weird machines all<font color="#E5E5E5"> the data is byte</font>

506
00:29:18,700 --> 00:29:25,389
code if<font color="#E5E5E5"> you can manipulate a complex</font>

507
00:29:22,690 --> 00:29:28,570
enough data structure then you can

508
00:29:25,389 --> 00:29:30,998
probably<font color="#E5E5E5"> get the parser for that data</font>

509
00:29:28,570 --> 00:29:33,460
structure to do just about anything for

510
00:29:30,999 --> 00:29:35,679
you and we've done it with elf we've

511
00:29:33,460 --> 00:29:38,679
done it with dwarf we've done it with

512
00:29:35,679 --> 00:29:42,279
x86 descriptor tables can we do<font color="#CCCCCC"> that</font>

513
00:29:38,679 --> 00:29:45,820
with device metadata if you switch the

514
00:29:42,279 --> 00:29:48,909
device metadata from under the driver

515
00:29:45,820 --> 00:29:52,899
and change that metadata what will

516
00:29:48,909 --> 00:29:55,119
happen<font color="#E5E5E5"> so we explored it for USB we</font>

517
00:29:52,899 --> 00:29:58,090
built<font color="#E5E5E5"> this little rowing injection</font>

518
00:29:55,119 --> 00:30:00,699
device called the phase dancer and again

519
00:29:58,090 --> 00:30:03,189
it's<font color="#CCCCCC"> very much like any other row</font>

520
00:30:00,700 --> 00:30:05,710
injection device you<font color="#E5E5E5"> depend on a magic</font>

521
00:30:03,190 --> 00:30:09,419
chip in this particular case the magic

522
00:30:05,710 --> 00:30:13,299
chip was the max 5420 controller and

523
00:30:09,419 --> 00:30:24,039
that thing basically can speak USB out

524
00:30:13,299 --> 00:30:26,440
to this USB Jack called victim and once

525
00:30:24,039 --> 00:30:29,859
you can do that electrically then you

526
00:30:26,440 --> 00:30:33,009
just need to build up<font color="#CCCCCC"> the payloads and</font>

527
00:30:29,859 --> 00:30:37,029
you do that in<font color="#E5E5E5"> Python and you show them</font>

528
00:30:33,009 --> 00:30:42,849
from the host through the<font color="#CCCCCC"> FTDI chip on</font>

529
00:30:37,029 --> 00:30:47,919
the on the right on the left my other

530
00:30:42,849 --> 00:30:49,620
right and that's easy enough because of

531
00:30:47,919 --> 00:30:53,280
course a USB

532
00:30:49,620 --> 00:30:55,709
is nothing but a network and it's got

533
00:30:53,280 --> 00:30:58,530
nothing but tackles and if you can write

534
00:30:55,710 --> 00:31:01,140
a web server then you can write<font color="#E5E5E5"> the USB</font>

535
00:30:58,530 --> 00:31:03,680
disk but the most interesting part about

536
00:31:01,140 --> 00:31:06,300
this is not triggering buffer overflows

537
00:31:03,680 --> 00:31:09,020
even though there are plenty<font color="#E5E5E5"> of buffer</font>

538
00:31:06,300 --> 00:31:12,780
overflows the most interesting thing is

539
00:31:09,020 --> 00:31:16,320
setting up the transaction to be to

540
00:31:12,780 --> 00:31:19,620
expect one thing and then feeding it

541
00:31:16,320 --> 00:31:22,290
another does it need to be a memory

542
00:31:19,620 --> 00:31:26,489
corruption not necessarily it could<font color="#E5E5E5"> be a</font>

543
00:31:22,290 --> 00:31:30,990
weird machine instead so people<font color="#CCCCCC"> had fun</font>

544
00:31:26,490 --> 00:31:33,990
with this and you map<font color="#CCCCCC"> to will be</font>

545
00:31:30,990 --> 00:31:35,610
<font color="#CCCCCC">released at this workshop I understand</font>

546
00:31:33,990 --> 00:31:37,920
and I'm very<font color="#E5E5E5"> much looking forward to</font>

547
00:31:35,610 --> 00:31:42,629
<font color="#E5E5E5">this and people have started looking at</font>

548
00:31:37,920 --> 00:31:44,580
working at USB firewalls and at stealing

549
00:31:42,630 --> 00:31:48,000
USB packets from the colonel and

550
00:31:44,580 --> 00:31:50,340
rewriting them we had one project like

551
00:31:48,000 --> 00:31:52,740
that ourselves<font color="#CCCCCC"> and then there there was</font>

552
00:31:50,340 --> 00:31:55,020
another academic paper at usenix which

553
00:31:52,740 --> 00:31:57,990
interestingly did not quote hours or the

554
00:31:55,020 --> 00:32:02,090
phase dancer you know maybe they do<font color="#E5E5E5"> see</font>

555
00:31:57,990 --> 00:32:05,880
they use some other magic but again

556
00:32:02,090 --> 00:32:08,040
things are improving because tools for

557
00:32:05,880 --> 00:32:12,660
the practical exploration of the<font color="#E5E5E5"> attack</font>

558
00:32:08,040 --> 00:32:16,290
surface became available now you might

559
00:32:12,660 --> 00:32:18,090
<font color="#CCCCCC">think that devices are simple I went</font><font color="#E5E5E5"> to</font>

560
00:32:16,290 --> 00:32:19,740
a hardware security workshop where

561
00:32:18,090 --> 00:32:22,169
people thought<font color="#CCCCCC"> that well hardware is</font>

562
00:32:19,740 --> 00:32:27,120
simple enough you can check it through

563
00:32:22,170 --> 00:32:29,520
like<font color="#CCCCCC"> oh gosh no no no no you</font><font color="#E5E5E5"> don't</font>

564
00:32:27,120 --> 00:32:33,899
understand what your disk is doing

565
00:32:29,520 --> 00:32:36,270
unless<font color="#CCCCCC"> you actually see what your disk</font>

566
00:32:33,900 --> 00:32:40,260
is asking what your disk driver is

567
00:32:36,270 --> 00:32:42,360
asking over your<font color="#E5E5E5"> disk in the blocks I'll</font>

568
00:32:40,260 --> 00:32:44,690
bet you<font color="#CCCCCC"> anything that</font><font color="#E5E5E5"> you will</font><font color="#CCCCCC"> be</font>

569
00:32:42,360 --> 00:32:47,580
surprised when you<font color="#E5E5E5"> actually see that ah</font>

570
00:32:44,690 --> 00:32:50,070
how do you<font color="#E5E5E5"> know that Windows is booting</font>

571
00:32:47,580 --> 00:32:53,909
off of your drive it reads the boot

572
00:32:50,070 --> 00:32:56,189
sector nine times it's<font color="#E5E5E5"> just what it does</font>

573
00:32:53,910 --> 00:32:58,140
for some reason how do you know a

574
00:32:56,190 --> 00:33:01,020
forensic pieces a piece of forensic

575
00:32:58,140 --> 00:33:02,860
software is imaging your drive well it's

576
00:33:01,020 --> 00:33:07,559
not reading<font color="#CCCCCC"> your up</font>

577
00:33:02,860 --> 00:33:13,120
sector nine times instead it reads every

578
00:33:07,559 --> 00:33:15,428
sector in every block in order if you

579
00:33:13,120 --> 00:33:17,678
want to give<font color="#E5E5E5"> it something other than</font>

580
00:33:15,429 --> 00:33:22,600
what it is<font color="#E5E5E5"> it's expecting just look for</font>

581
00:33:17,679 --> 00:33:24,730
this pattern<font color="#E5E5E5"> Travis wrote this</font><font color="#CCCCCC"> a piece</font>

582
00:33:22,600 --> 00:33:28,510
of<font color="#E5E5E5"> software for rick rolling forensics</font>

583
00:33:24,730 --> 00:33:31,960
of an ipod<font color="#E5E5E5"> which just notices this</font>

584
00:33:28,510 --> 00:33:35,260
pattern and returns a bunch of blocks

585
00:33:31,960 --> 00:33:40,090
with never give you up never lets you

586
00:33:35,260 --> 00:33:42,790
down ah but this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a toy it has to</font>

587
00:33:40,090 --> 00:33:48,010
develop into<font color="#CCCCCC"> something bigger because</font>

588
00:33:42,790 --> 00:33:51,549
the fallacy that you understand what

589
00:33:48,010 --> 00:33:55,210
your<font color="#E5E5E5"> disk is receiving in the way of</font>

590
00:33:51,549 --> 00:33:57,370
commands from your driver just<font color="#CCCCCC"> imagine</font>

591
00:33:55,210 --> 00:34:01,919
this tight coupling between your

592
00:33:57,370 --> 00:34:06,159
controller your driver in your<font color="#E5E5E5"> disk ah</font>

593
00:34:01,919 --> 00:34:10,830
just how easy it is to topple it if you

594
00:34:06,160 --> 00:34:13,840
actually start injecting into this bus

595
00:34:10,830 --> 00:34:16,090
this should<font color="#CCCCCC"> be done and of course</font><font color="#E5E5E5"> our</font>

596
00:34:13,840 --> 00:34:20,200
hard driver hard drives can be back

597
00:34:16,090 --> 00:34:23,859
doored and in fact that begged or can be

598
00:34:20,199 --> 00:34:26,020
woken up by a pattern of accesses by a

599
00:34:23,859 --> 00:34:27,960
remote attacker you know through your

600
00:34:26,020 --> 00:34:31,290
web server through your web application

601
00:34:27,960 --> 00:34:35,679
through all the other defenses because

602
00:34:31,290 --> 00:34:39,279
causing a particular<font color="#E5E5E5"> pattern of reads of</font>

603
00:34:35,679 --> 00:34:44,350
blocks is not that hard and not that

604
00:34:39,280 --> 00:34:49,090
noisy and it's a reasonable channel so

605
00:34:44,350 --> 00:34:52,989
we want to<font color="#E5E5E5"> be PF and skype if I all the</font>

606
00:34:49,090 --> 00:34:56,740
buses<font color="#E5E5E5"> and we want to be PF and skype if</font>

607
00:34:52,989 --> 00:34:59,529
I all the pieces<font color="#E5E5E5"> of the OS if you see a</font>

608
00:34:56,739 --> 00:35:02,410
coupling there you have<font color="#E5E5E5"> to be in on it</font>

609
00:34:59,530 --> 00:35:06,810
you have to be<font color="#CCCCCC"> a native speaker on that</font>

610
00:35:02,410 --> 00:35:10,629
bus otherwise someone else will be an

611
00:35:06,810 --> 00:35:15,160
otherwise you will miss an explosion of

612
00:35:10,630 --> 00:35:16,400
vons when that happens and then you will

613
00:35:15,160 --> 00:35:19,399
come to<font color="#E5E5E5"> black head to</font>

614
00:35:16,400 --> 00:35:25,970
learn that<font color="#E5E5E5"> your infrastructure is ah</font>

615
00:35:19,400 --> 00:35:27,740
well not yours anymore maybe so one

616
00:35:25,970 --> 00:35:31,490
project<font color="#CCCCCC"> that we're looking at and that</font>

617
00:35:27,740 --> 00:35:34,308
we hope to inspire others to join is a

618
00:35:31,490 --> 00:35:37,660
raw sockets for sake<font color="#E5E5E5"> no you could call</font>

619
00:35:34,309 --> 00:35:40,789
the device we would call the tool Satan

620
00:35:37,660 --> 00:35:43,819
accept such a tool already<font color="#CCCCCC"> exist if you</font>

621
00:35:40,789 --> 00:35:46,760
remember it was one<font color="#E5E5E5"> of the first</font><font color="#CCCCCC"> n map</font>

622
00:35:43,819 --> 00:35:49,308
like scanners for the internets and of

623
00:35:46,760 --> 00:35:51,230
course<font color="#E5E5E5"> you could rename it Santa if you</font>

624
00:35:49,309 --> 00:35:58,069
objected it came<font color="#CCCCCC"> with the script for</font>

625
00:35:51,230 --> 00:36:03,039
that so disks are trusted disks are very

626
00:35:58,069 --> 00:36:06,740
special<font color="#CCCCCC"> in our trust a colonel logic</font>

627
00:36:03,039 --> 00:36:10,520
Colonel coupling with those is very

628
00:36:06,740 --> 00:36:13,640
tight the attack models on the OS code

629
00:36:10,520 --> 00:36:17,869
when data change from under that code

630
00:36:13,640 --> 00:36:22,660
have not been explored and the right

631
00:36:17,869 --> 00:36:26,869
place as<font color="#CCCCCC"> always to be is is the Phi and</font>

632
00:36:22,660 --> 00:36:29,240
so we can follow that we can follow that

633
00:36:26,869 --> 00:36:32,930
packet through the colonel we can follow

634
00:36:29,240 --> 00:36:36,339
that USB packet these days we can't

635
00:36:32,930 --> 00:36:43,940
follow that block this has<font color="#E5E5E5"> to change and</font>

636
00:36:36,339 --> 00:36:48,859
so I pause it that if it ain't right it

637
00:36:43,940 --> 00:36:54,020
ain't right security will not get better

638
00:36:48,859 --> 00:36:56,900
<font color="#E5E5E5">until we redo until until we change the</font>

639
00:36:54,020 --> 00:37:01,579
way we look at the basic OS components

640
00:36:56,900 --> 00:37:04,900
and finally speaking of rings of power

641
00:37:01,579 --> 00:37:08,960
and evil overlords and things like that

642
00:37:04,900 --> 00:37:11,630
<font color="#E5E5E5">I understand</font><font color="#CCCCCC"> that all of this may</font>

643
00:37:08,960 --> 00:37:14,270
actually become illegal in the near

644
00:37:11,630 --> 00:37:17,930
future because these are specially

645
00:37:14,270 --> 00:37:19,970
created devices that could be controlled

646
00:37:17,930 --> 00:37:23,359
<font color="#E5E5E5">as a part of the controls on the</font>

647
00:37:19,970 --> 00:37:26,660
<font color="#E5E5E5">so-called intrusion software and if your</font>

648
00:37:23,359 --> 00:37:28,460
organization has not yet gotten involved

649
00:37:26,660 --> 00:37:33,069
in

650
00:37:28,460 --> 00:37:38,990
lessen our negotiations or rather

651
00:37:33,070 --> 00:37:41,660
renegotiations it should be because how

652
00:37:38,990 --> 00:37:48,740
many lawyers can a<font color="#E5E5E5"> security researcher</font>

653
00:37:41,660 --> 00:37:51,799
carry to work to be<font color="#E5E5E5"> safe how many you</font>

654
00:37:48,740 --> 00:37:54,348
know at which point the basic tools<font color="#E5E5E5"> of</font>

655
00:37:51,800 --> 00:37:56,480
our trust will not be available to us

656
00:37:54,349 --> 00:37:59,300
anymore because we'll need to get an

657
00:37:56,480 --> 00:38:00,830
export license and by<font color="#E5E5E5"> the way you need</font>

658
00:37:59,300 --> 00:38:05,619
<font color="#CCCCCC">to</font><font color="#E5E5E5"> get an export license to talk to a</font>

659
00:38:00,830 --> 00:38:12,920
foreigner because what you talk about is

660
00:38:05,619 --> 00:38:15,980
an export in many regimes maybe you know

661
00:38:12,920 --> 00:38:18,609
not yours but it certainly will be in

662
00:38:15,980 --> 00:38:26,510
theirs so how<font color="#CCCCCC"> much of this</font><font color="#E5E5E5"> chilling on</font>

663
00:38:18,609 --> 00:38:32,750
the devices<font color="#E5E5E5"> that inject that change the</font>

664
00:38:26,510 --> 00:38:35,920
standard execution path of a device you

665
00:38:32,750 --> 00:38:38,780
know in order to introduce new

666
00:38:35,920 --> 00:38:40,880
instructions external instructions did<font color="#E5E5E5"> I</font>

667
00:38:38,780 --> 00:38:44,240
just<font color="#E5E5E5"> described a debugger a hypervisor</font>

668
00:38:40,880 --> 00:38:47,390
any kind of<font color="#E5E5E5"> a virtual machine well yes I</font>

669
00:38:44,240 --> 00:38:50,089
did yes there<font color="#E5E5E5"> is a carve-out in the</font>

670
00:38:47,390 --> 00:38:52,160
regulation for those now you will<font color="#CCCCCC"> have</font>

671
00:38:50,089 --> 00:38:56,570
<font color="#E5E5E5">to prove</font><font color="#CCCCCC"> that your security device such</font>

672
00:38:52,160 --> 00:39:01,520
as a<font color="#CCCCCC"> phased answer were aceite men</font><font color="#E5E5E5"> in</font>

673
00:38:56,570 --> 00:39:07,550
the<font color="#E5E5E5"> middle is a debugger good luck with</font>

674
00:39:01,520 --> 00:39:11,210
that so with that and on that sort of<font color="#E5E5E5"> a</font>

675
00:39:07,550 --> 00:39:15,790
the darkness is coming note I will leave

676
00:39:11,210 --> 00:39:15,790
you thank

677
00:39:20,420 --> 00:39:27,300
Thank<font color="#E5E5E5"> You professor when I decided to</font>

678
00:39:23,910 --> 00:39:29,250
introduce the hobbit day my introduction

679
00:39:27,300 --> 00:39:32,040
I had no clue it's going to be part of

680
00:39:29,250 --> 00:39:34,200
your talk well<font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> more</font><font color="#CCCCCC"> put out of my</font>

681
00:39:32,040 --> 00:39:38,250
research yeah you will notice there<font color="#E5E5E5"> were</font>

682
00:39:34,200 --> 00:39:41,520
no cat pictures<font color="#CCCCCC"> The Hobbit t theme is</font>

683
00:39:38,250 --> 00:39:44,040
more<font color="#E5E5E5"> powerful at least for today thank</font>

684
00:39:41,520 --> 00:39:56,520
<font color="#E5E5E5">you for that diva does anyone have</font><font color="#CCCCCC"> any</font>

685
00:39:44,040 --> 00:40:00,150
questions it will<font color="#E5E5E5"> not solve everything</font>

686
00:39:56,520 --> 00:40:04,710
you were posing here but I know that

687
00:40:00,150 --> 00:40:07,530
<font color="#E5E5E5">there are at least research is going on</font>

688
00:40:04,710 --> 00:40:10,320
on actually doing a full separation of

689
00:40:07,530 --> 00:40:13,440
data and instruction sets even on the

690
00:40:10,320 --> 00:40:16,260
hardware layer do we have anything to

691
00:40:13,440 --> 00:40:23,700
<font color="#E5E5E5">say about that</font><font color="#CCCCCC"> oh yes in fact I do</font><font color="#E5E5E5"> quite</font>

692
00:40:16,260 --> 00:40:29,040
a bit so I mean<font color="#E5E5E5"> having a Harvard</font>

693
00:40:23,700 --> 00:40:32,069
architecture is nice isolation has been

694
00:40:29,040 --> 00:40:35,880
the most useful primitive that we've had

695
00:40:32,070 --> 00:40:41,490
to date however what is data and what is

696
00:40:35,880 --> 00:40:44,850
code right even the code<font color="#E5E5E5"> that we think</font>

697
00:40:41,490 --> 00:40:47,390
of as such for say x86 it's just

698
00:40:44,850 --> 00:40:52,860
basically data for the microcode

699
00:40:47,390 --> 00:40:56,580
interpreter yeah now the example with

700
00:40:52,860 --> 00:41:01,260
elf that<font color="#E5E5E5"> i glossed over right you're a</font>

701
00:40:56,580 --> 00:41:07,770
typical binary of loading path right in

702
00:41:01,260 --> 00:41:11,780
those relocation<font color="#CCCCCC"> you are your data your</font>

703
00:41:07,770 --> 00:41:15,710
allocation tables guides the relocator

704
00:41:11,780 --> 00:41:20,460
so what you think of as a table<font color="#CCCCCC"> is</font>

705
00:41:15,710 --> 00:41:23,370
actually code for a limited execution

706
00:41:20,460 --> 00:41:27,600
model except it turns out it's<font color="#E5E5E5"> not so</font>

707
00:41:23,370 --> 00:41:32,650
limited same deal with any complex

708
00:41:27,600 --> 00:41:36,038
format what you believe<font color="#CCCCCC"> is tables descry</font>

709
00:41:32,650 --> 00:41:43,210
iving some data structures they actually

710
00:41:36,039 --> 00:41:46,930
described behavior because they drive

711
00:41:43,210 --> 00:41:53,079
some code now<font color="#CCCCCC"> Candace code be turned</font>

712
00:41:46,930 --> 00:41:55,390
into a generic automaton to carry out

713
00:41:53,079 --> 00:42:01,059
more than its intended function most

714
00:41:55,390 --> 00:42:03,640
likely yes so it's not<font color="#CCCCCC"> just separating</font>

715
00:42:01,059 --> 00:42:07,690
data from code it's<font color="#E5E5E5"> making sure that</font>

716
00:42:03,640 --> 00:42:12,150
this data conforms to the types that can

717
00:42:07,690 --> 00:42:17,619
induce only this much computation and

718
00:42:12,150 --> 00:42:21,250
provably so say if you<font color="#E5E5E5"> have a finite</font>

719
00:42:17,619 --> 00:42:24,670
automaton then you can<font color="#E5E5E5"> prove that as it</font>

720
00:42:21,250 --> 00:42:27,789
consumes inputs it switches only between

721
00:42:24,670 --> 00:42:31,240
the states that<font color="#CCCCCC"> it is meant</font><font color="#E5E5E5"> to be in and</font>

722
00:42:27,789 --> 00:42:33,609
not in any other approving this for

723
00:42:31,240 --> 00:42:36,160
something that's an equivalent of a

724
00:42:33,609 --> 00:42:39,578
Turing machine or even a

725
00:42:36,160 --> 00:42:42,220
non-deterministic pushdown<font color="#E5E5E5"> it is quite</font>

726
00:42:39,579 --> 00:42:45,220
<font color="#CCCCCC">hard or impossible under the</font>

727
00:42:42,220 --> 00:42:47,618
circumstances<font color="#CCCCCC"> so it's</font><font color="#E5E5E5"> not just contain</font>

728
00:42:45,220 --> 00:42:51,058
it's not<font color="#E5E5E5"> just isolation it has to be</font>

729
00:42:47,619 --> 00:42:54,520
containing computing power it has to be

730
00:42:51,059 --> 00:43:00,069
I mean<font color="#CCCCCC"> an type theory could be one</font>

731
00:42:54,520 --> 00:43:03,130
method I know<font color="#E5E5E5"> of one yes that is fully</font>

732
00:43:00,069 --> 00:43:07,270
typed unfortunately what it doesn't do

733
00:43:03,130 --> 00:43:11,049
is seek<font color="#E5E5E5"> on streams because that's that's</font>

734
00:43:07,270 --> 00:43:16,809
a tough operation to type it's called

735
00:43:11,049 --> 00:43:19,630
ethos well I can<font color="#E5E5E5"> I can share the links</font>

736
00:43:16,809 --> 00:43:22,119
of line but this I mean this<font color="#CCCCCC"> is a really</font>

737
00:43:19,630 --> 00:43:27,279
good question<font color="#CCCCCC"> at which point does data</font>

738
00:43:22,119 --> 00:43:30,520
become<font color="#E5E5E5"> byte code and we need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> build</font>

739
00:43:27,279 --> 00:43:33,849
systems so that every layer could not be

740
00:43:30,520 --> 00:43:36,609
hijacked could not be could not have<font color="#CCCCCC"> its</font>

741
00:43:33,849 --> 00:43:39,430
<font color="#E5E5E5">computation run away with that byte code</font>

742
00:43:36,609 --> 00:43:43,000
becoming an emergent<font color="#E5E5E5"> and unexpected</font>

743
00:43:39,430 --> 00:43:45,598
virtual machine so probably<font color="#E5E5E5"> a longer</font>

744
00:43:43,000 --> 00:43:45,599
answer then

745
00:43:48,690 --> 00:44:01,019
any more questions well then thank<font color="#E5E5E5"> you</font>

746
00:43:58,809 --> 00:44:01,019
so much

