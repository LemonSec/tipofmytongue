1
00:02:41,160 --> 00:02:44,160
foreign

2
00:02:47,940 --> 00:02:49,560
so it's only been two and a half years

3
00:02:49,560 --> 00:02:51,360
we all know how to

4
00:02:51,360 --> 00:02:55,319
video conference uh we'll just re-record

5
00:02:55,319 --> 00:02:59,940
that uh okay so uh what it means is we

6
00:02:59,940 --> 00:03:02,160
only guarantee logical security claims

7
00:03:02,160 --> 00:03:04,379
relating to implementation or physical

8
00:03:04,379 --> 00:03:07,019
security uh implementation correctness

9
00:03:07,019 --> 00:03:09,420
or physical security we rely on the same

10
00:03:09,420 --> 00:03:11,760
set of certifications that any secure

11
00:03:11,760 --> 00:03:13,700
element vendor would be familiar with

12
00:03:13,700 --> 00:03:15,900
I'm not going to talk about that in here

13
00:03:15,900 --> 00:03:17,340
I'm going to try and keep it to the

14
00:03:17,340 --> 00:03:19,560
interesting stuff but I'm happy to talk

15
00:03:19,560 --> 00:03:22,200
about that with anyone afterwards so by

16
00:03:22,200 --> 00:03:24,900
analogy the Linux kernel does not make a

17
00:03:24,900 --> 00:03:26,940
full operating system you have to wrap a

18
00:03:26,940 --> 00:03:28,819
lot of additional stuff around it

19
00:03:28,819 --> 00:03:32,159
similarly we provide a core open source

20
00:03:32,159 --> 00:03:33,120
project

21
00:03:33,120 --> 00:03:35,340
and then you need to add a lot of

22
00:03:35,340 --> 00:03:38,159
additional proprietary uh stuff that we

23
00:03:38,159 --> 00:03:40,500
kind of call out here on the right in

24
00:03:40,500 --> 00:03:41,819
order to make that into an actual

25
00:03:41,819 --> 00:03:43,260
salable chip

26
00:03:43,260 --> 00:03:44,519
so

27
00:03:44,519 --> 00:03:46,920
we do besides the project have this

28
00:03:46,920 --> 00:03:49,220
concrete notion of a silicon product

29
00:03:49,220 --> 00:03:52,319
that has all the necessary analog bits

30
00:03:52,319 --> 00:03:53,640
clock physical countermeasures

31
00:03:53,640 --> 00:03:55,799
everything that's absolutely necessary

32
00:03:55,799 --> 00:03:58,560
in order to create a real a real design

33
00:03:58,560 --> 00:04:02,099
and this works because this project is

34
00:04:02,099 --> 00:04:03,180
something that we're coordinating

35
00:04:03,180 --> 00:04:05,700
closely with our back end partners and

36
00:04:05,700 --> 00:04:07,040
project numbers

37
00:04:07,040 --> 00:04:10,560
to actually create this first discrete

38
00:04:10,560 --> 00:04:13,799
silicon device this root of trust chip

39
00:04:13,799 --> 00:04:16,019
um and that's gonna we're gonna have the

40
00:04:16,019 --> 00:04:17,579
first one our first engineering samples

41
00:04:17,579 --> 00:04:19,918
uh next year I'm gonna be vague on

42
00:04:19,918 --> 00:04:22,260
timelines because I don't want anyone to

43
00:04:22,260 --> 00:04:24,000
hold me to them

44
00:04:24,000 --> 00:04:27,479
um so today we have silicon software and

45
00:04:27,479 --> 00:04:30,180
security working groups and they are

46
00:04:30,180 --> 00:04:32,699
really focused on this design uh if you

47
00:04:32,699 --> 00:04:34,560
want a real close analogy you can think

48
00:04:34,560 --> 00:04:36,840
about it as basically equivalent to a

49
00:04:36,840 --> 00:04:40,680
TPM but without the prescriptive API

50
00:04:40,680 --> 00:04:41,880
um and we've actually also just

51
00:04:41,880 --> 00:04:44,000
chartered and begun work on our

52
00:04:44,000 --> 00:04:46,919
integrated as in like large-scale SOC

53
00:04:46,919 --> 00:04:50,220
root of trust uh family of designs we're

54
00:04:50,220 --> 00:04:51,600
going to be expanding in something we

55
00:04:51,600 --> 00:04:53,759
call multi-top which is this notion of

56
00:04:53,759 --> 00:04:56,639
having multiple although finite number

57
00:04:56,639 --> 00:04:59,699
of uh trademark compliant designs that

58
00:04:59,699 --> 00:05:01,919
are really just suitable for you know

59
00:05:01,919 --> 00:05:04,919
plopping into a larger design or hitting

60
00:05:04,919 --> 00:05:06,540
different price or performance points

61
00:05:06,540 --> 00:05:08,580
while still providing the same set of

62
00:05:08,580 --> 00:05:10,860
foundational security guarantees that we

63
00:05:10,860 --> 00:05:13,340
care about

64
00:05:13,500 --> 00:05:16,500
um and then fundamentally you know we

65
00:05:16,500 --> 00:05:17,940
believe that if something can be open

66
00:05:17,940 --> 00:05:20,280
source in this domain we will make it

67
00:05:20,280 --> 00:05:22,199
open source but we do have to actually

68
00:05:22,199 --> 00:05:24,000
produce a chip and so not everything can

69
00:05:24,000 --> 00:05:26,780
be open source

70
00:05:30,660 --> 00:05:33,620
fix one thing broke another

71
00:05:33,620 --> 00:05:35,699
[Music]

72
00:05:35,699 --> 00:05:39,539
there we go okay uh so it just as an

73
00:05:39,539 --> 00:05:41,220
aside I want to be really clear about

74
00:05:41,220 --> 00:05:43,979
this that when we say open we mean open

75
00:05:43,979 --> 00:05:47,100
you know that second uh that second link

76
00:05:47,100 --> 00:05:49,320
is a GitHub link it is open today in

77
00:05:49,320 --> 00:05:51,840
both implementation and process not

78
00:05:51,840 --> 00:05:53,340
eventually you know not when we get

79
00:05:53,340 --> 00:05:54,720
around to it not when it's quote unquote

80
00:05:54,720 --> 00:05:57,240
done or finished it never is uh it's a

81
00:05:57,240 --> 00:05:59,580
reality right now it's not it's also not

82
00:05:59,580 --> 00:06:00,840
an open standard it's an open

83
00:06:00,840 --> 00:06:04,199
implementation because standards

84
00:06:04,199 --> 00:06:05,940
are not standard when they get

85
00:06:05,940 --> 00:06:08,280
implemented and it's really important to

86
00:06:08,280 --> 00:06:10,320
get this right and it's also not

87
00:06:10,320 --> 00:06:12,360
developed in some kind of a proprietary

88
00:06:12,360 --> 00:06:13,919
method and then kicked over the wall

89
00:06:13,919 --> 00:06:16,680
without support or without say design

90
00:06:16,680 --> 00:06:19,320
verification it is a complete silicon

91
00:06:19,320 --> 00:06:20,820
design

92
00:06:20,820 --> 00:06:23,699
um down to the boot ROM reference OS all

93
00:06:23,699 --> 00:06:25,199
of the infrastructure that goes in to

94
00:06:25,199 --> 00:06:27,060
actively maintaining something like this

95
00:06:27,060 --> 00:06:30,720
so this isn't open washing it's it's as

96
00:06:30,720 --> 00:06:33,660
it's open as far as we can go

97
00:06:33,660 --> 00:06:36,840
today where we are after four and a half

98
00:06:36,840 --> 00:06:39,020
years of work two of them fairly quiet

99
00:06:39,020 --> 00:06:42,660
uh and this all includes the Ibex core

100
00:06:42,660 --> 00:06:45,720
this risk 5 32-bit core that is also

101
00:06:45,720 --> 00:06:48,240
supported by open Titan

102
00:06:48,240 --> 00:06:50,660
um you know we've got this

103
00:06:50,660 --> 00:06:54,300
nice kind of uh linear graph right but

104
00:06:54,300 --> 00:06:56,160
that's not really enough this doesn't

105
00:06:56,160 --> 00:06:57,960
really speak to the success of the

106
00:06:57,960 --> 00:07:02,160
ecosystem uh this is something that

107
00:07:02,160 --> 00:07:05,220
this is all hosted by the low-risk

108
00:07:05,220 --> 00:07:07,259
community interest Corporation this

109
00:07:07,259 --> 00:07:08,699
independent nonprofit so they're

110
00:07:08,699 --> 00:07:10,199
responsible for maintaining all this

111
00:07:10,199 --> 00:07:12,180
other stuff that's more than just the

112
00:07:12,180 --> 00:07:14,400
commits which I'm going to go into later

113
00:07:14,400 --> 00:07:17,160
but we call that kind of set of all the

114
00:07:17,160 --> 00:07:18,960
the collateral that enables our

115
00:07:18,960 --> 00:07:21,120
collaborative Engineering Process the

116
00:07:21,120 --> 00:07:23,160
Silicon Commons it's it's this notion of

117
00:07:23,160 --> 00:07:25,500
having an open uh well-supported

118
00:07:25,500 --> 00:07:27,020
collaborative space

119
00:07:27,020 --> 00:07:29,460
so really open source development is

120
00:07:29,460 --> 00:07:30,960
more about Community it's about

121
00:07:30,960 --> 00:07:33,060
maintaining other people's code and them

122
00:07:33,060 --> 00:07:36,300
in turn maintaining your code for you so

123
00:07:36,300 --> 00:07:37,680
let's talk about what a healthy

124
00:07:37,680 --> 00:07:41,099
Community looks like it is a lot of

125
00:07:41,099 --> 00:07:44,099
diverse skills diverse Partners uh

126
00:07:44,099 --> 00:07:46,500
working towards common goals so these

127
00:07:46,500 --> 00:07:48,960
Partners all actually supports the

128
00:07:48,960 --> 00:07:50,699
low-risk organization both in an

129
00:07:50,699 --> 00:07:52,380
engineering sense but also financially

130
00:07:52,380 --> 00:07:56,160
because open source is not free

131
00:07:56,160 --> 00:07:57,900
um it's not free to develop it's not

132
00:07:57,900 --> 00:08:01,979
free to use it is uh it takes quite a

133
00:08:01,979 --> 00:08:04,880
bit of effort actually so

134
00:08:04,880 --> 00:08:07,740
this partner Coalition they really rely

135
00:08:07,740 --> 00:08:09,840
on having this silicon Commons

136
00:08:09,840 --> 00:08:11,580
maintained by an independent third party

137
00:08:11,580 --> 00:08:15,360
to keep the code base green to do

138
00:08:15,360 --> 00:08:17,699
regression triage to coordinate the

139
00:08:17,699 --> 00:08:20,220
various working groups to you know make

140
00:08:20,220 --> 00:08:22,440
sure that everything is held to a high

141
00:08:22,440 --> 00:08:25,259
consistent standard one that is suitable

142
00:08:25,259 --> 00:08:27,199
and credible for a commercial tape out

143
00:08:27,199 --> 00:08:30,180
so all all in all all these Partners

144
00:08:30,180 --> 00:08:33,659
together provide us the rich diverse set

145
00:08:33,659 --> 00:08:35,760
of talent necessary to successfully

146
00:08:35,760 --> 00:08:38,339
build a silicon root of trust in the

147
00:08:38,339 --> 00:08:41,000
open source

148
00:08:41,339 --> 00:08:43,679
it's not just the partners uh you know

149
00:08:43,679 --> 00:08:45,240
the page full of logos is always nice

150
00:08:45,240 --> 00:08:47,040
when you're talking about fundraising

151
00:08:47,040 --> 00:08:49,320
because everyone wants to be uh part of

152
00:08:49,320 --> 00:08:51,300
the club but a healthy open source

153
00:08:51,300 --> 00:08:54,540
project also has a significant ongoing

154
00:08:54,540 --> 00:08:56,399
engagement from people actually doing

155
00:08:56,399 --> 00:09:00,000
the work so this is a a graph

156
00:09:00,000 --> 00:09:02,339
conveniently provided by GitHub over a

157
00:09:02,339 --> 00:09:04,740
month period it really demonstrates that

158
00:09:04,740 --> 00:09:07,380
this is a live active Dynamic project we

159
00:09:07,380 --> 00:09:10,320
we sometimes think about open source

160
00:09:10,320 --> 00:09:12,420
projects when they're kind of up and

161
00:09:12,420 --> 00:09:14,160
going and successful as being a open

162
00:09:14,160 --> 00:09:15,959
source flywheel something where you kind

163
00:09:15,959 --> 00:09:17,519
of hit a critical mass and it sort of

164
00:09:17,519 --> 00:09:20,100
takes itself forward based on whatever

165
00:09:20,100 --> 00:09:22,860
structure you put in place so for us

166
00:09:22,860 --> 00:09:24,839
it's really not just about creating

167
00:09:24,839 --> 00:09:27,000
these common silicon designs and

168
00:09:27,000 --> 00:09:29,700
flateral it's actually about creating

169
00:09:29,700 --> 00:09:31,980
and maintaining the shared environment

170
00:09:31,980 --> 00:09:33,420
that supports this collaborative

171
00:09:33,420 --> 00:09:35,459
development that is where a significant

172
00:09:35,459 --> 00:09:38,700
amount of our time in communication go

173
00:09:38,700 --> 00:09:41,040
towards and it's not it's not just code

174
00:09:41,040 --> 00:09:43,080
right it's the

175
00:09:43,080 --> 00:09:45,660
um it's the comments on excuse me the

176
00:09:45,660 --> 00:09:47,580
comments on the poll requests it's the

177
00:09:47,580 --> 00:09:50,040
handling of issues it's the making sure

178
00:09:50,040 --> 00:09:51,540
everything is categorized making sure

179
00:09:51,540 --> 00:09:52,980
we're burning down towards specific

180
00:09:52,980 --> 00:09:55,320
Milestones that have to do with getting

181
00:09:55,320 --> 00:09:57,540
the tape out and just kind of keeping

182
00:09:57,540 --> 00:10:01,320
that going over a long period of time

183
00:10:01,320 --> 00:10:03,860
excuse me

184
00:10:04,800 --> 00:10:07,680
so there also has to be some structure

185
00:10:07,680 --> 00:10:08,880
you know you have to have some

186
00:10:08,880 --> 00:10:11,820
coordination to keep things moving

187
00:10:11,820 --> 00:10:15,360
forward in a in a consistent fashion

188
00:10:15,360 --> 00:10:18,360
um the way we we feel like we've gotten

189
00:10:18,360 --> 00:10:20,760
this right is when we bring folks who

190
00:10:20,760 --> 00:10:22,980
have open source software experience

191
00:10:22,980 --> 00:10:25,920
onto the project they say this is nuts

192
00:10:25,920 --> 00:10:27,060
you know you guys are way too

193
00:10:27,060 --> 00:10:28,740
controlling it's way too structured like

194
00:10:28,740 --> 00:10:30,779
I just want to hack and then when we

195
00:10:30,779 --> 00:10:33,779
bring proprietary or kind of silicon

196
00:10:33,779 --> 00:10:35,459
folks who have deep experience in their

197
00:10:35,459 --> 00:10:37,800
domain onto the project they say well

198
00:10:37,800 --> 00:10:39,480
this is chaos you're never going to be

199
00:10:39,480 --> 00:10:41,399
able to produce a chip so everyone is

200
00:10:41,399 --> 00:10:43,740
fairly equally uncomfortable

201
00:10:43,740 --> 00:10:45,540
um so we've kind of struck a balance

202
00:10:45,540 --> 00:10:48,180
between kind of giving folks the freedom

203
00:10:48,180 --> 00:10:51,540
to contribute where where uh they want

204
00:10:51,540 --> 00:10:53,339
to where they're able to but also making

205
00:10:53,339 --> 00:10:55,140
sure that those contributions are

206
00:10:55,140 --> 00:10:57,779
building towards something larger

207
00:10:57,779 --> 00:11:00,060
um that is coordinated because a real

208
00:11:00,060 --> 00:11:01,860
silicon design is quite large it

209
00:11:01,860 --> 00:11:04,320
requires tens of people sometimes over

210
00:11:04,320 --> 00:11:06,660
multiple years usually over multiple

211
00:11:06,660 --> 00:11:08,459
years and we built everything from

212
00:11:08,459 --> 00:11:10,920
scratch right because this is an open

213
00:11:10,920 --> 00:11:13,140
source design we don't have a

214
00:11:13,140 --> 00:11:15,000
proprietary core in there we don't use

215
00:11:15,000 --> 00:11:19,620
proprietary dvip it is all all from

216
00:11:19,620 --> 00:11:20,779
scratch

217
00:11:20,779 --> 00:11:24,120
so how do we create this alignment in a

218
00:11:24,120 --> 00:11:27,260
way that's palatable to all parties uh

219
00:11:27,260 --> 00:11:30,540
we borrow extensively from open source

220
00:11:30,540 --> 00:11:31,820
software development practices

221
00:11:31,820 --> 00:11:34,680
constrained by the requirements of

222
00:11:34,680 --> 00:11:37,380
producing silicon we also start with a

223
00:11:37,380 --> 00:11:40,320
vanilla Apache License because we don't

224
00:11:40,320 --> 00:11:42,720
really want to spend more time with

225
00:11:42,720 --> 00:11:45,240
lawyers than is necessary although I do

226
00:11:45,240 --> 00:11:46,860
spend quite a bit of time with lawyers

227
00:11:46,860 --> 00:11:48,079
regardless

228
00:11:48,079 --> 00:11:50,399
there is a project director which is

229
00:11:50,399 --> 00:11:52,800
myself who's responsible for setting the

230
00:11:52,800 --> 00:11:54,720
overall direction proposing the yearly

231
00:11:54,720 --> 00:11:56,760
roadmap which is voted on by the

232
00:11:56,760 --> 00:11:58,740
technical committee or sorry the

233
00:11:58,740 --> 00:12:00,000
steering committee that steering

234
00:12:00,000 --> 00:12:02,279
committee is composed of the people who

235
00:12:02,279 --> 00:12:03,779
are contributing financially to the

236
00:12:03,779 --> 00:12:05,940
project because they should have a say

237
00:12:05,940 --> 00:12:08,040
in the direction of the project

238
00:12:08,040 --> 00:12:10,380
um they

239
00:12:10,380 --> 00:12:12,779
provide feedback on the roadmap approve

240
00:12:12,779 --> 00:12:15,060
or reject it they also are responsible

241
00:12:15,060 --> 00:12:17,100
for evaluating new technical committee

242
00:12:17,100 --> 00:12:19,380
members who are typically composed of

243
00:12:19,380 --> 00:12:23,100
people uh very engaged technical

244
00:12:23,100 --> 00:12:24,779
individuals very engaged in the

245
00:12:24,779 --> 00:12:27,660
day-to-day operation of the project

246
00:12:27,660 --> 00:12:28,920
so

247
00:12:28,920 --> 00:12:32,519
they provide direct feedback on you know

248
00:12:32,519 --> 00:12:34,260
what actually defines something that's

249
00:12:34,260 --> 00:12:36,959
open Titan TM they're also responsible

250
00:12:36,959 --> 00:12:39,480
the technical committee for approving

251
00:12:39,480 --> 00:12:41,880
new committers it is a reasonably High

252
00:12:41,880 --> 00:12:43,700
bar not just anyone can be a committer

253
00:12:43,700 --> 00:12:48,079
so we do take that quite seriously

254
00:12:48,079 --> 00:12:51,060
and then finally there are the people

255
00:12:51,060 --> 00:12:53,160
who are really making it happen who are

256
00:12:53,160 --> 00:12:55,860
doing all the work and these all tend to

257
00:12:55,860 --> 00:12:57,360
overlap with the previously mentioned

258
00:12:57,360 --> 00:12:58,639
roles

259
00:12:58,639 --> 00:13:01,680
myself excluded I mostly send emails

260
00:13:01,680 --> 00:13:03,120
these days

261
00:13:03,120 --> 00:13:05,940
um but there are a fair number of people

262
00:13:05,940 --> 00:13:07,980
who are really doing the engineering

263
00:13:07,980 --> 00:13:10,680
input necessary to make this happen and

264
00:13:10,680 --> 00:13:13,380
those are the the contributors and we

265
00:13:13,380 --> 00:13:15,480
owe the success of this project to to

266
00:13:15,480 --> 00:13:18,240
them in their dedication

267
00:13:18,240 --> 00:13:20,040
all right for the next section I'm going

268
00:13:20,040 --> 00:13:22,440
to talk quickly about our technology and

269
00:13:22,440 --> 00:13:24,420
kind of three different views first

270
00:13:24,420 --> 00:13:26,459
architecturally kind of a top level view

271
00:13:26,459 --> 00:13:29,279
as well as some key aspects of the

272
00:13:29,279 --> 00:13:32,220
security architecture uh then diving in

273
00:13:32,220 --> 00:13:34,560
deeper on a few of the individual blocks

274
00:13:34,560 --> 00:13:37,139
especially focused on key logical

275
00:13:37,139 --> 00:13:39,899
operations of identity and ownership

276
00:13:39,899 --> 00:13:43,980
transfer that is identity comma and

277
00:13:43,980 --> 00:13:46,380
ownership transfer and then finally a

278
00:13:46,380 --> 00:13:49,139
peek at the system level our generic

279
00:13:49,139 --> 00:13:50,579
countermeasure is how we handle security

280
00:13:50,579 --> 00:13:53,399
kind of at the very top level of the

281
00:13:53,399 --> 00:13:54,680
chip

282
00:13:54,680 --> 00:13:58,260
this is by necessity going to be a

283
00:13:58,260 --> 00:13:59,880
relatively incomplete view of the design

284
00:13:59,880 --> 00:14:01,980
but

285
00:14:01,980 --> 00:14:03,779
um as the project is very large not

286
00:14:03,779 --> 00:14:06,360
enough time to cover everything it's all

287
00:14:06,360 --> 00:14:09,120
documented on the web you can you can

288
00:14:09,120 --> 00:14:10,740
see you know a lot of these slides are

289
00:14:10,740 --> 00:14:12,899
actually pulled directly from there

290
00:14:12,899 --> 00:14:14,940
um I do apologize for the organization

291
00:14:14,940 --> 00:14:17,519
we are getting to it

292
00:14:17,519 --> 00:14:20,160
um but it is all there and it's all

293
00:14:20,160 --> 00:14:21,600
there right now

294
00:14:21,600 --> 00:14:24,959
so this is the top level of the chip

295
00:14:24,959 --> 00:14:27,000
this is the primary discrete design that

296
00:14:27,000 --> 00:14:30,060
we are all working on today uh it's a

297
00:14:30,060 --> 00:14:31,800
root of trust it looks like a lot of

298
00:14:31,800 --> 00:14:33,240
other routes of trust it looks like a

299
00:14:33,240 --> 00:14:35,579
secure element it looks like a TPM you

300
00:14:35,579 --> 00:14:37,079
know if you squint these things all kind

301
00:14:37,079 --> 00:14:38,940
of belong in a family of devices you see

302
00:14:38,940 --> 00:14:41,459
the same IP blocks popping up over and

303
00:14:41,459 --> 00:14:43,260
over and over again

304
00:14:43,260 --> 00:14:45,720
um really it's possibly better to think

305
00:14:45,720 --> 00:14:48,600
of this as just one instance of a secure

306
00:14:48,600 --> 00:14:51,779
microcontroller kind of built from this

307
00:14:51,779 --> 00:14:54,240
family of Highly compatible IP that we

308
00:14:54,240 --> 00:14:57,120
have developed this is It's called Earl

309
00:14:57,120 --> 00:14:58,440
Gray that's the name for this particular

310
00:14:58,440 --> 00:15:01,100
top level which is the the chip itself

311
00:15:01,100 --> 00:15:04,260
and it has all of the things listed

312
00:15:04,260 --> 00:15:06,439
there

313
00:15:07,019 --> 00:15:11,820
going in a bit deeper so I am going to

314
00:15:11,820 --> 00:15:14,519
vastly oversimplify what a root of trust

315
00:15:14,519 --> 00:15:17,639
does and state that it has to do two

316
00:15:17,639 --> 00:15:18,899
things

317
00:15:18,899 --> 00:15:21,540
um one is a test to the authenticity of

318
00:15:21,540 --> 00:15:24,360
the silicon and two to be able to attest

319
00:15:24,360 --> 00:15:25,920
to the authenticity of the firmware

320
00:15:25,920 --> 00:15:28,139
running on that silicon both of these

321
00:15:28,139 --> 00:15:30,839
these things are rooted in identity

322
00:15:30,839 --> 00:15:33,720
um doing those two things well is quite

323
00:15:33,720 --> 00:15:36,720
difficult requires a lot of work

324
00:15:36,720 --> 00:15:37,320
um

325
00:15:37,320 --> 00:15:40,800
but a lot of you you kind of squint that

326
00:15:40,800 --> 00:15:42,839
really is what it has to do

327
00:15:42,839 --> 00:15:44,040
um and then you can build a lot of trust

328
00:15:44,040 --> 00:15:45,360
on top of that

329
00:15:45,360 --> 00:15:48,660
so if folks are familiar uh we do try to

330
00:15:48,660 --> 00:15:51,240
be as compliant to well-accepted

331
00:15:51,240 --> 00:15:53,639
standards as possible so our identity

332
00:15:53,639 --> 00:15:55,260
scheme is compliant with something

333
00:15:55,260 --> 00:15:58,260
called the dice open profile which is

334
00:15:58,260 --> 00:16:00,600
slightly different than dice it is I'd

335
00:16:00,600 --> 00:16:03,240
say a super set of dice so it is both

336
00:16:03,240 --> 00:16:05,040
compliant with dice and the dice open

337
00:16:05,040 --> 00:16:08,639
profile we also have a distinct notion

338
00:16:08,639 --> 00:16:11,820
of the device Creator and the device

339
00:16:11,820 --> 00:16:16,500
owner identities and those are both

340
00:16:16,500 --> 00:16:19,100
really meant to be typically coalitions

341
00:16:19,100 --> 00:16:21,660
more often the owner would be a single

342
00:16:21,660 --> 00:16:23,820
entity but the Creator is definitely

343
00:16:23,820 --> 00:16:25,760
meant to be a coalition

344
00:16:25,760 --> 00:16:28,440
the top two blocks of the identity

345
00:16:28,440 --> 00:16:31,860
derivation scheme are basically Creator

346
00:16:31,860 --> 00:16:34,920
identity derivations and they must be

347
00:16:34,920 --> 00:16:37,440
and are implemented as open source this

348
00:16:37,440 --> 00:16:40,740
goes to our trust model not our security

349
00:16:40,740 --> 00:16:42,480
model nor our threat model but our trust

350
00:16:42,480 --> 00:16:43,699
model

351
00:16:43,699 --> 00:16:46,680
those must be open Source it is it is a

352
00:16:46,680 --> 00:16:48,440
non-negotiable point

353
00:16:48,440 --> 00:16:51,120
below that or above that depending on

354
00:16:51,120 --> 00:16:52,980
which direction you're coming from the

355
00:16:52,980 --> 00:16:54,959
owner can choose to either have an open

356
00:16:54,959 --> 00:16:58,680
or proprietary payload there is a it's

357
00:16:58,680 --> 00:17:00,120
an ownership transfer mechanism that

358
00:17:00,120 --> 00:17:03,060
I'll touch on uh that really enables

359
00:17:03,060 --> 00:17:04,140
that

360
00:17:04,140 --> 00:17:06,780
the identity root secrets and the

361
00:17:06,780 --> 00:17:08,520
internal key manager State that's all

362
00:17:08,520 --> 00:17:10,679
hidden from software including the ROM

363
00:17:10,679 --> 00:17:13,500
that all happens off on the side really

364
00:17:13,500 --> 00:17:15,299
allowing us to simplify the software

365
00:17:15,299 --> 00:17:16,679
hardening

366
00:17:16,679 --> 00:17:18,059
um

367
00:17:18,059 --> 00:17:21,599
and then the key manager which I'll

368
00:17:21,599 --> 00:17:24,780
touch on again later uh supports two

369
00:17:24,780 --> 00:17:26,760
primary key derivation chains one is

370
00:17:26,760 --> 00:17:29,160
this dice compliant chain

371
00:17:29,160 --> 00:17:31,140
um and then the other is a ceiling chain

372
00:17:31,140 --> 00:17:34,200
which we can use to implement a more uh

373
00:17:34,200 --> 00:17:38,880
stable key derivation uh scheme

374
00:17:38,880 --> 00:17:41,820
so ownership transfer and I appear to

375
00:17:41,820 --> 00:17:43,200
have clipped the title off of this but

376
00:17:43,200 --> 00:17:46,200
this is the ownership transfer slide uh

377
00:17:46,200 --> 00:17:48,539
this is the means by which an owner

378
00:17:48,539 --> 00:17:51,539
again this is a logical entity can take

379
00:17:51,539 --> 00:17:54,720
possession of the Silicon so

380
00:17:54,720 --> 00:17:58,080
no one really in my view or certainly in

381
00:17:58,080 --> 00:18:00,059
the domain I work in wants to have to

382
00:18:00,059 --> 00:18:01,980
ask permission to run code on Hardware

383
00:18:01,980 --> 00:18:04,140
that they have purchased

384
00:18:04,140 --> 00:18:05,820
um you paid money for it you own it

385
00:18:05,820 --> 00:18:08,640
should be able to run code on it uh so

386
00:18:08,640 --> 00:18:11,220
we don't do dual signing or anything

387
00:18:11,220 --> 00:18:13,140
like that you don't have to go to the

388
00:18:13,140 --> 00:18:15,240
SOC vendor and ask them to sign your

389
00:18:15,240 --> 00:18:16,919
payload that you've already we don't do

390
00:18:16,919 --> 00:18:18,840
that right it's a it's a in-field

391
00:18:18,840 --> 00:18:21,419
ownership transfer mechanism

392
00:18:21,419 --> 00:18:24,059
um so in practice this is a two-part

393
00:18:24,059 --> 00:18:26,039
trust model like I mentioned every

394
00:18:26,039 --> 00:18:27,900
measurement of an immutable component

395
00:18:27,900 --> 00:18:29,960
that can all be constructed out of band

396
00:18:29,960 --> 00:18:33,059
so basically everything that is fixed at

397
00:18:33,059 --> 00:18:35,400
manufacturing time is open source by

398
00:18:35,400 --> 00:18:37,679
necessity and then all of the mutable

399
00:18:37,679 --> 00:18:39,720
components like the flash can actually

400
00:18:39,720 --> 00:18:43,260
be mutated via the ownership transfer so

401
00:18:43,260 --> 00:18:47,760
you can in a sense switch pkis

402
00:18:47,760 --> 00:18:52,500
um in uh post Manufacturing

403
00:18:52,500 --> 00:18:54,120
so

404
00:18:54,120 --> 00:18:56,520
this is pretty important right this is

405
00:18:56,520 --> 00:18:58,380
kind of one of the things we think is

406
00:18:58,380 --> 00:19:00,419
really useful about this design it

407
00:19:00,419 --> 00:19:02,880
allows us to do kind of a lot of late

408
00:19:02,880 --> 00:19:05,220
binding Integrations or payload

409
00:19:05,220 --> 00:19:07,200
Integrations and it also is something

410
00:19:07,200 --> 00:19:09,660
that makes the design uh much more

411
00:19:09,660 --> 00:19:12,120
palatable to a number of our partners to

412
00:19:12,120 --> 00:19:15,179
a number of the corporations that we do

413
00:19:15,179 --> 00:19:16,620
work with and who are going to end up

414
00:19:16,620 --> 00:19:17,820
buying these things at the end of the

415
00:19:17,820 --> 00:19:20,460
day it also fundamentally respects the

416
00:19:20,460 --> 00:19:23,340
user of the device more

417
00:19:23,340 --> 00:19:25,500
so

418
00:19:25,500 --> 00:19:27,419
there are three steps in an ownership

419
00:19:27,419 --> 00:19:30,419
transfer and I apologize that that text

420
00:19:30,419 --> 00:19:32,940
is so small but

421
00:19:32,940 --> 00:19:36,840
oops uh so uh if you're going to do an

422
00:19:36,840 --> 00:19:38,520
ownership transfer operation a new owner

423
00:19:38,520 --> 00:19:40,080
would verify that the device is

424
00:19:40,080 --> 00:19:42,240
authentic by checking the device access

425
00:19:42,240 --> 00:19:45,539
station the the Creator certificate

426
00:19:45,539 --> 00:19:47,460
um then the new owner would take

427
00:19:47,460 --> 00:19:50,820
ownership of the device by loading a

428
00:19:50,820 --> 00:19:52,679
code signing verification keys and sign

429
00:19:52,679 --> 00:19:54,960
software uh boot into the new owner sign

430
00:19:54,960 --> 00:19:57,179
code and then the owner can attest that

431
00:19:57,179 --> 00:19:58,260
the new hardware and software

432
00:19:58,260 --> 00:20:00,419
configuration and use that to verify the

433
00:20:00,419 --> 00:20:02,100
Integrity of the device and then they

434
00:20:02,100 --> 00:20:05,160
can inject or generate their own Secrets

435
00:20:05,160 --> 00:20:07,320
or application specific secrets so that

436
00:20:07,320 --> 00:20:09,000
would be uh like an in-field owner

437
00:20:09,000 --> 00:20:11,160
provisioning operation and then once the

438
00:20:11,160 --> 00:20:12,840
owner is ready to relinquish ownership

439
00:20:12,840 --> 00:20:15,660
of the device they clear secrets and

440
00:20:15,660 --> 00:20:17,340
then they transition that device into a

441
00:20:17,340 --> 00:20:19,620
state in which it can be disposed of or

442
00:20:19,620 --> 00:20:21,720
assigned to the next owner so this would

443
00:20:21,720 --> 00:20:24,539
be like a device unlock State not

444
00:20:24,539 --> 00:20:27,000
necessary to endorse the next owner Keys

445
00:20:27,000 --> 00:20:28,799
uh Creator or manufacturer can actually

446
00:20:28,799 --> 00:20:30,660
opt to lead the device in an unlocked

447
00:20:30,660 --> 00:20:32,640
State this is our strong preference so

448
00:20:32,640 --> 00:20:35,940
that anyone can execute that initial uh

449
00:20:35,940 --> 00:20:38,160
ownership transfer without assigned

450
00:20:38,160 --> 00:20:39,320
payload

451
00:20:39,320 --> 00:20:40,559
[Music]

452
00:20:40,559 --> 00:20:43,080
um right now a lot of this relies on

453
00:20:43,080 --> 00:20:45,299
having a discrete design with embedded

454
00:20:45,299 --> 00:20:48,960
flash we are we've got a couple of

455
00:20:48,960 --> 00:20:50,640
different architectures to support this

456
00:20:50,640 --> 00:20:52,380
for the integrated route of trust as

457
00:20:52,380 --> 00:20:53,940
well but this notion of ownership

458
00:20:53,940 --> 00:20:56,059
transfer while it makes certification

459
00:20:56,059 --> 00:21:01,380
more interesting is really important for

460
00:21:01,380 --> 00:21:04,320
this project to be able to support

461
00:21:04,320 --> 00:21:07,020
so again this ownership transfer

462
00:21:07,020 --> 00:21:10,559
mechanism guarantees that the chip works

463
00:21:10,559 --> 00:21:14,780
for the person who owns the chip

464
00:21:14,940 --> 00:21:17,039
all right so identity and ownership

465
00:21:17,039 --> 00:21:18,539
transfer we consider those crucial

466
00:21:18,539 --> 00:21:21,419
features they're pretty important uh

467
00:21:21,419 --> 00:21:23,280
their implementation is the is at the

468
00:21:23,280 --> 00:21:25,679
heart of our trust and security model so

469
00:21:25,679 --> 00:21:28,740
talking a little bit about the hardware

470
00:21:28,740 --> 00:21:30,960
and software that implements that

471
00:21:30,960 --> 00:21:33,000
lifecycle controller

472
00:21:33,000 --> 00:21:34,020
um

473
00:21:34,020 --> 00:21:37,559
so new device identities not owner but

474
00:21:37,559 --> 00:21:40,080
device identities or Creator identities

475
00:21:40,080 --> 00:21:42,659
can only be minted at manufacturing and

476
00:21:42,659 --> 00:21:46,200
that pathway is irrevocably closed after

477
00:21:46,200 --> 00:21:51,179
it is used once so this is kind of

478
00:21:51,179 --> 00:21:52,620
you know it

479
00:21:52,620 --> 00:21:55,020
touches on

480
00:21:55,020 --> 00:21:57,000
um it touches every individual design

481
00:21:57,000 --> 00:22:00,659
digital block IP block that has

482
00:22:00,659 --> 00:22:02,820
different configuration settings based

483
00:22:02,820 --> 00:22:04,740
on the life cycle of the device right so

484
00:22:04,740 --> 00:22:06,659
if you go into RMA you can't then go and

485
00:22:06,659 --> 00:22:09,720
read Secrets out so uh really really

486
00:22:09,720 --> 00:22:13,200
important functionality for both uh

487
00:22:13,200 --> 00:22:15,480
provisioning the device in at the

488
00:22:15,480 --> 00:22:17,340
manufacturer or the osat wherever it is

489
00:22:17,340 --> 00:22:20,940
but also in terms of you know

490
00:22:20,940 --> 00:22:22,919
building debug versions of the devices

491
00:22:22,919 --> 00:22:25,020
or production versions of the devices

492
00:22:25,020 --> 00:22:26,820
lifecycle controller touches everything

493
00:22:26,820 --> 00:22:29,280
and then there's the key manager which

494
00:22:29,280 --> 00:22:31,740
isolates all of the key state from the

495
00:22:31,740 --> 00:22:35,039
main processor key manager generates

496
00:22:35,039 --> 00:22:37,679
keys for software consumption but for

497
00:22:37,679 --> 00:22:41,580
certain blocks AES kmac and what we call

498
00:22:41,580 --> 00:22:44,039
otbn open Titan big num engine big

499
00:22:44,039 --> 00:22:45,140
multiplier

500
00:22:45,140 --> 00:22:47,640
it has side load capabilities so we can

501
00:22:47,640 --> 00:22:50,280
keep that key material from going

502
00:22:50,280 --> 00:22:52,980
through the main processor pathway

503
00:22:52,980 --> 00:22:55,260
these all have countermeasures

504
00:22:55,260 --> 00:22:57,419
um which I believe are all upstreamed at

505
00:22:57,419 --> 00:23:00,120
this point uh State's critical control

506
00:23:00,120 --> 00:23:02,940
signals DFT jteg things like that they

507
00:23:02,940 --> 00:23:05,820
get redundantly encoded to help deal

508
00:23:05,820 --> 00:23:08,820
with fault injection uh fsms are

509
00:23:08,820 --> 00:23:10,440
sparsely encoded to help deal with

510
00:23:10,440 --> 00:23:12,960
control flow Integrity

511
00:23:12,960 --> 00:23:17,460
um and the for instance the RMA has a

512
00:23:17,460 --> 00:23:21,260
difficult to brute force uh test unlock

513
00:23:21,260 --> 00:23:24,679
there are just a number of

514
00:23:24,679 --> 00:23:26,580
countermeasures scattered throughout

515
00:23:26,580 --> 00:23:28,919
these designs

516
00:23:28,919 --> 00:23:31,140
um because that's what's necessary to

517
00:23:31,140 --> 00:23:32,820
get something in the open source

518
00:23:32,820 --> 00:23:34,799
certified you got to kind of over build

519
00:23:34,799 --> 00:23:36,600
it

520
00:23:36,600 --> 00:23:39,299
a couple other blocks that are you know

521
00:23:39,299 --> 00:23:41,220
of Interest came back in particular the

522
00:23:41,220 --> 00:23:43,740
AES is the AES

523
00:23:43,740 --> 00:23:46,020
we do Implement first order domain

524
00:23:46,020 --> 00:23:47,580
oriented masking

525
00:23:47,580 --> 00:23:49,140
um and we did some formal verification

526
00:23:49,140 --> 00:23:53,340
work on AES and I believe kmac using uh

527
00:23:53,340 --> 00:23:56,100
Rebecca and then we also have a set of

528
00:23:56,100 --> 00:23:57,600
what we call primitive countermeasures

529
00:23:57,600 --> 00:24:00,780
and these are countermeasures that often

530
00:24:00,780 --> 00:24:02,640
have a very stylized form of

531
00:24:02,640 --> 00:24:05,100
verification attached to them that we

532
00:24:05,100 --> 00:24:07,620
sprinkle throughout the design multi

533
00:24:07,620 --> 00:24:09,299
like multi-bidden coatings on signals

534
00:24:09,299 --> 00:24:10,860
things like that

535
00:24:10,860 --> 00:24:11,520
um

536
00:24:11,520 --> 00:24:14,039
I it's not up here but again it's on the

537
00:24:14,039 --> 00:24:15,600
website but I do want to mention it is

538
00:24:15,600 --> 00:24:18,419
this uh big num engine our wide

539
00:24:18,419 --> 00:24:20,820
multiplier again primarily developed by

540
00:24:20,820 --> 00:24:23,299
low risk um very cool little machine

541
00:24:23,299 --> 00:24:25,860
32-bit instruction path heavily

542
00:24:25,860 --> 00:24:28,860
influenced by risk five and uh 256-bit

543
00:24:28,860 --> 00:24:31,919
data path uh one of the most interesting

544
00:24:31,919 --> 00:24:33,900
things about this is that we actually

545
00:24:33,900 --> 00:24:36,360
worked with Brian parno's group at CMU

546
00:24:36,360 --> 00:24:42,780
to formally verify our modex for uh RSA

547
00:24:42,780 --> 00:24:46,260
with Daphne and Veil so that is formally

548
00:24:46,260 --> 00:24:48,120
verified code using those formal

549
00:24:48,120 --> 00:24:50,580
verification Frameworks that we are

550
00:24:50,580 --> 00:24:52,440
actually preferentially going to be

551
00:24:52,440 --> 00:24:54,659
executing in production we also have a

552
00:24:54,659 --> 00:24:56,100
software implementation because we don't

553
00:24:56,100 --> 00:24:58,980
want a dead chip but for the stuff that

554
00:24:58,980 --> 00:25:01,440
we expect to be using most of the time

555
00:25:01,440 --> 00:25:04,679
for a speedy boot uh that is actually

556
00:25:04,679 --> 00:25:06,659
formally verified at least the core

557
00:25:06,659 --> 00:25:09,740
routines are formally verified

558
00:25:09,960 --> 00:25:12,480
so moving on to kind of the system level

559
00:25:12,480 --> 00:25:16,620
uh technical features we

560
00:25:16,620 --> 00:25:18,179
we're also I'm almost going to touch on

561
00:25:18,179 --> 00:25:20,700
how our our primary core is uh is

562
00:25:20,700 --> 00:25:22,679
integrated we have like I said these

563
00:25:22,679 --> 00:25:24,900
generic counter measures the sparse fsms

564
00:25:24,900 --> 00:25:27,240
redundant counters lfsrs all that kind

565
00:25:27,240 --> 00:25:29,279
of stuff where we have a very

566
00:25:29,279 --> 00:25:31,559
specialized DV methodology so we can

567
00:25:31,559 --> 00:25:36,120
rapidly add those to whatever FSM or

568
00:25:36,120 --> 00:25:38,120
signals that that's useful for

569
00:25:38,120 --> 00:25:41,039
and not have to go and redo all the

570
00:25:41,039 --> 00:25:43,380
design verification because at the end

571
00:25:43,380 --> 00:25:44,820
of the day design verification is always

572
00:25:44,820 --> 00:25:47,159
the long pull so anything that we can do

573
00:25:47,159 --> 00:25:50,159
to kind of abstract that or leverage

574
00:25:50,159 --> 00:25:51,659
work that we've done previously we

575
00:25:51,659 --> 00:25:53,820
absolutely do do

576
00:25:53,820 --> 00:25:54,360
um

577
00:25:54,360 --> 00:25:55,679
and then of course we have all these

578
00:25:55,679 --> 00:25:58,140
other you know miscellaneous

579
00:25:58,140 --> 00:26:01,500
countermeasures that we use to uh get

580
00:26:01,500 --> 00:26:03,360
the design ready for actual tape out and

581
00:26:03,360 --> 00:26:06,799
valuation in a lab setting

582
00:26:06,840 --> 00:26:09,600
so really quickly on Ibex

583
00:26:09,600 --> 00:26:10,620
um

584
00:26:10,620 --> 00:26:12,900
while we do isolate a lot of the secrets

585
00:26:12,900 --> 00:26:14,880
and critical assets away from the

586
00:26:14,880 --> 00:26:18,059
processor core cores in our case uh it

587
00:26:18,059 --> 00:26:19,440
wouldn't be a very useful device without

588
00:26:19,440 --> 00:26:22,559
a microcontroller core and a boot ROM so

589
00:26:22,559 --> 00:26:25,140
we use Ibex uh if you're familiar with

590
00:26:25,140 --> 00:26:28,500
risk five 32-bit imcb where the B is I

591
00:26:28,500 --> 00:26:30,600
believe a subset of the bitmenip

592
00:26:30,600 --> 00:26:33,480
instructions this used to be eth Xerox

593
00:26:33,480 --> 00:26:35,460
zero risky core from lukubanini's Lab

594
00:26:35,460 --> 00:26:38,240
but it is now hosted developed

595
00:26:38,240 --> 00:26:42,120
maintained by low risk as a component IP

596
00:26:42,120 --> 00:26:44,400
but again you know it's best to think of

597
00:26:44,400 --> 00:26:46,620
this as one component and a larger

598
00:26:46,620 --> 00:26:49,500
ecosystem of high quality open source

599
00:26:49,500 --> 00:26:53,760
silicon design uh design IP uh one

600
00:26:53,760 --> 00:26:54,960
interesting thing about this is we

601
00:26:54,960 --> 00:26:57,240
actually implement it as a dual lockstep

602
00:26:57,240 --> 00:26:59,700
configuration to prevent it you know to

603
00:26:59,700 --> 00:27:02,460
help address fault injection attacks the

604
00:27:02,460 --> 00:27:06,600
boot ROM as I mentioned primarily we

605
00:27:06,600 --> 00:27:09,000
expect to use otbn's implementation we

606
00:27:09,000 --> 00:27:10,559
do have a software implementation

607
00:27:10,559 --> 00:27:13,559
because again we cannot have dead

608
00:27:13,559 --> 00:27:15,900
silicon coming off the line and if you

609
00:27:15,900 --> 00:27:17,460
can't make it past your verified boot

610
00:27:17,460 --> 00:27:19,620
then you're you're host

611
00:27:19,620 --> 00:27:23,600
um we only support RSA 3K and only uh

612
00:27:23,600 --> 00:27:26,400
65537 for the exponent

613
00:27:26,400 --> 00:27:29,159
um we I believe had like

614
00:27:29,159 --> 00:27:31,260
uh we had us we had one of the small

615
00:27:31,260 --> 00:27:33,779
ones we had the small one as well we

616
00:27:33,779 --> 00:27:35,340
evaluated it it turned out we didn't get

617
00:27:35,340 --> 00:27:37,200
much of a speed Advantage because of the

618
00:27:37,200 --> 00:27:38,940
acceleration so we just went with the

619
00:27:38,940 --> 00:27:43,260
one that is easy to get through fips

620
00:27:43,260 --> 00:27:45,000
because having gone through trips a

621
00:27:45,000 --> 00:27:47,460
couple of times I will take any shortcut

622
00:27:47,460 --> 00:27:48,720
there that I can

623
00:27:48,720 --> 00:27:53,640
so system level security uh this is it's

624
00:27:53,640 --> 00:27:55,260
important to realize when you build one

625
00:27:55,260 --> 00:27:57,600
of these secure devices it's more than

626
00:27:57,600 --> 00:27:59,159
just the individual cryptography blocks

627
00:27:59,159 --> 00:28:02,580
it's the whole system so we have an

628
00:28:02,580 --> 00:28:04,380
alert Handler responsible for

629
00:28:04,380 --> 00:28:06,840
aggregating and responding in a

630
00:28:06,840 --> 00:28:09,240
programmatic fashion to these

631
00:28:09,240 --> 00:28:11,580
out-of-band Hardware alerts many of the

632
00:28:11,580 --> 00:28:13,380
cryptographic blocks have Hardware alert

633
00:28:13,380 --> 00:28:14,820
lines

634
00:28:14,820 --> 00:28:15,480
um

635
00:28:15,480 --> 00:28:17,700
some obviously all the sensors have

636
00:28:17,700 --> 00:28:20,760
Hardware alert lines we do have physical

637
00:28:20,760 --> 00:28:22,500
sensors in there those are by necessity

638
00:28:22,500 --> 00:28:25,679
not open source but we do have this

639
00:28:25,679 --> 00:28:29,100
scatter shot kind of analog set of light

640
00:28:29,100 --> 00:28:32,220
and glitch and you know clock drift and

641
00:28:32,220 --> 00:28:33,900
all the kind of standard stuff that you

642
00:28:33,900 --> 00:28:35,700
would put in one of these devices then

643
00:28:35,700 --> 00:28:38,460
we also protect the kind of system bus

644
00:28:38,460 --> 00:28:42,419
and the various memories with

645
00:28:42,419 --> 00:28:44,940
um Xiao encoding and the appropriate

646
00:28:44,940 --> 00:28:46,440
I don't know what I'll call them ciphers

647
00:28:46,440 --> 00:28:50,340
but scrambling Primitives as well

648
00:28:50,340 --> 00:28:51,779
and it's worth pointing out if people

649
00:28:51,779 --> 00:28:53,700
have questions about this stuff a lot of

650
00:28:53,700 --> 00:28:55,740
the folks who are responsible for it uh

651
00:28:55,740 --> 00:28:58,200
are actually here today you'll see them

652
00:28:58,200 --> 00:29:01,440
by their lovely royal purple hoodies uh

653
00:29:01,440 --> 00:29:03,840
with our awesome open silicon logo on it

654
00:29:03,840 --> 00:29:05,279
so feel free to ask them and they'll

655
00:29:05,279 --> 00:29:07,260
either tell you themselves because they

656
00:29:07,260 --> 00:29:08,760
probably committed quite a bit of this

657
00:29:08,760 --> 00:29:10,620
code or they will direct you to the

658
00:29:10,620 --> 00:29:12,960
right person so

659
00:29:12,960 --> 00:29:15,000
quickly you know some of the challenges

660
00:29:15,000 --> 00:29:17,400
and our solutions to those challenges

661
00:29:17,400 --> 00:29:19,080
um open silicon to the best of my

662
00:29:19,080 --> 00:29:20,640
knowledge has not been done at this

663
00:29:20,640 --> 00:29:22,860
scale before has certainly been done

664
00:29:22,860 --> 00:29:26,120
before I have spent many evening

665
00:29:26,120 --> 00:29:28,740
lamenting the quality of things on I

666
00:29:28,740 --> 00:29:31,200
can't remember the name of the site now

667
00:29:31,200 --> 00:29:32,159
um

668
00:29:32,159 --> 00:29:34,620
but there are some real challenges in

669
00:29:34,620 --> 00:29:37,380
doing this and doing it at scale so the

670
00:29:37,380 --> 00:29:39,179
technology the IP we develop that's

671
00:29:39,179 --> 00:29:42,360
important but it's only one component so

672
00:29:42,360 --> 00:29:44,880
kind of two facts in opposition the

673
00:29:44,880 --> 00:29:47,580
first is that we have a highly

674
00:29:47,580 --> 00:29:49,620
distributed team uh physically

675
00:29:49,620 --> 00:29:53,279
organizationally culturally in a

676
00:29:53,279 --> 00:29:55,860
traditionally proprietary space silicon

677
00:29:55,860 --> 00:29:58,440
and then again working in a specialized

678
00:29:58,440 --> 00:30:00,840
domain silicon security

679
00:30:00,840 --> 00:30:02,940
second fact is that commercial silicon

680
00:30:02,940 --> 00:30:04,260
is usually the result of a pretty

681
00:30:04,260 --> 00:30:06,779
cohesive team that's highly coordinated

682
00:30:06,779 --> 00:30:09,059
and very resource intensive effort over

683
00:30:09,059 --> 00:30:11,820
a long period of time so we have to take

684
00:30:11,820 --> 00:30:15,840
those two very difficult facts and fit

685
00:30:15,840 --> 00:30:17,520
them together such that we're able to

686
00:30:17,520 --> 00:30:20,100
effectively coordinate across vast

687
00:30:20,100 --> 00:30:22,559
distances of all kinds on this unified

688
00:30:22,559 --> 00:30:25,799
design and you don't do that by accident

689
00:30:25,799 --> 00:30:29,640
it takes a lot of intent and effort it's

690
00:30:29,640 --> 00:30:31,440
taken us four years four and a half

691
00:30:31,440 --> 00:30:33,480
years to get to where we are today but

692
00:30:33,480 --> 00:30:36,000
where we are today is in a pretty good

693
00:30:36,000 --> 00:30:39,299
spot so our solution maybe the solution

694
00:30:39,299 --> 00:30:43,140
is to create this silicon Commons that

695
00:30:43,140 --> 00:30:46,140
is maintained by a third party that

696
00:30:46,140 --> 00:30:48,059
really works for the benefit of all of

697
00:30:48,059 --> 00:30:49,980
the participants and in an active way

698
00:30:49,980 --> 00:30:53,100
this is not a passive project so this

699
00:30:53,100 --> 00:30:55,080
silicon Commons is really the difference

700
00:30:55,080 --> 00:30:58,440
between a kind of scare quotes open

701
00:30:58,440 --> 00:31:00,299
source project like throw it over the

702
00:31:00,299 --> 00:31:03,179
wall and this open Titan effort which is

703
00:31:03,179 --> 00:31:05,880
an actively maintained ecosystem of

704
00:31:05,880 --> 00:31:08,460
inherently compatible uh security Focus

705
00:31:08,460 --> 00:31:10,620
but not just security silicon open

706
00:31:10,620 --> 00:31:13,500
source silicon IP so it's kind of

707
00:31:13,500 --> 00:31:15,659
composed of a set of policies

708
00:31:15,659 --> 00:31:18,059
Technologies and processes to support

709
00:31:18,059 --> 00:31:19,799
collaborative engineering across all

710
00:31:19,799 --> 00:31:21,899
these different groups but there's also

711
00:31:21,899 --> 00:31:25,080
a very large educational component that

712
00:31:25,080 --> 00:31:27,899
helps bring people along who might not

713
00:31:27,899 --> 00:31:30,059
have open source experience or might not

714
00:31:30,059 --> 00:31:32,399
have silicon experience and understand

715
00:31:32,399 --> 00:31:35,220
why your DV team is so angry at you all

716
00:31:35,220 --> 00:31:36,260
the time

717
00:31:36,260 --> 00:31:38,940
so there's a lot of

718
00:31:38,940 --> 00:31:41,100
kind of bringing people to the same

719
00:31:41,100 --> 00:31:42,779
level so that we're all speaking the

720
00:31:42,779 --> 00:31:44,460
same language

721
00:31:44,460 --> 00:31:46,919
again open source isn't free it requires

722
00:31:46,919 --> 00:31:49,799
funding participation and a strong uh

723
00:31:49,799 --> 00:31:52,080
ethos of collaboration to keep something

724
00:31:52,080 --> 00:31:53,760
maintained and relevant especially in

725
00:31:53,760 --> 00:31:57,779
the long term and uh the the reason why

726
00:31:57,779 --> 00:31:59,399
open source is valuable one of the

727
00:31:59,399 --> 00:32:00,720
reasons why open source is valuable it's

728
00:32:00,720 --> 00:32:02,460
almost never because it displaces

729
00:32:02,460 --> 00:32:03,539
something that you're paying too much

730
00:32:03,539 --> 00:32:05,940
money for typically the things that are

731
00:32:05,940 --> 00:32:07,620
kind of Open Source amenable are already

732
00:32:07,620 --> 00:32:10,260
being commoditized and it's just kind of

733
00:32:10,260 --> 00:32:12,720
reaching a logical conclusion so what it

734
00:32:12,720 --> 00:32:14,399
really is the value it has is in

735
00:32:14,399 --> 00:32:16,980
creating a common commoditized artifact

736
00:32:16,980 --> 00:32:19,080
that addresses the needs of all of these

737
00:32:19,080 --> 00:32:21,260
parties who are investing together

738
00:32:21,260 --> 00:32:24,000
without putting the burden unduly on any

739
00:32:24,000 --> 00:32:25,140
one of them

740
00:32:25,140 --> 00:32:27,720
so this this is the structure that we've

741
00:32:27,720 --> 00:32:30,539
built these last four years so the goal

742
00:32:30,539 --> 00:32:32,220
has been to prevent the engineering

743
00:32:32,220 --> 00:32:34,740
Commons from becoming a tragedy by

744
00:32:34,740 --> 00:32:37,080
providing uh this kind of framework for

745
00:32:37,080 --> 00:32:39,840
everyone to work well together

746
00:32:39,840 --> 00:32:42,779
an example uh let's take a policy our

747
00:32:42,779 --> 00:32:44,580
contribution workflow this is very

748
00:32:44,580 --> 00:32:47,039
strict we have had people come and say

749
00:32:47,039 --> 00:32:49,279
well I am not going to respond to your

750
00:32:49,279 --> 00:32:52,799
uh your approvers comments on my PR and

751
00:32:52,799 --> 00:32:53,760
we say well

752
00:32:53,760 --> 00:32:55,320
they are the approver and it doesn't

753
00:32:55,320 --> 00:32:58,500
really work that way so uh you know our

754
00:32:58,500 --> 00:33:00,600
hands are kind of tied

755
00:33:00,600 --> 00:33:02,640
um not just anyone can commit code and

756
00:33:02,640 --> 00:33:04,559
not just any one person can commit code

757
00:33:04,559 --> 00:33:07,919
we have a two-party rule because that's

758
00:33:07,919 --> 00:33:09,659
a good Rule and it increases the

759
00:33:09,659 --> 00:33:12,059
visibility on anything that's committed

760
00:33:12,059 --> 00:33:14,519
the bar to become a committer is quite

761
00:33:14,519 --> 00:33:16,760
high this is a perennial

762
00:33:16,760 --> 00:33:19,679
perennial topic of discussion within the

763
00:33:19,679 --> 00:33:24,120
TC we don't have fixed metrics but we do

764
00:33:24,120 --> 00:33:26,039
kind of have

765
00:33:26,039 --> 00:33:28,559
um a lot of insight into what people are

766
00:33:28,559 --> 00:33:31,080
contributing to the project so we can

767
00:33:31,080 --> 00:33:33,299
make pretty good judgments about you

768
00:33:33,299 --> 00:33:34,740
know who should get commit rights and

769
00:33:34,740 --> 00:33:36,960
and who shouldn't and it's it's almost

770
00:33:36,960 --> 00:33:38,279
never the case where we say oh no that

771
00:33:38,279 --> 00:33:39,480
person shouldn't get commit rights we

772
00:33:39,480 --> 00:33:41,580
say well you know we'd really like to

773
00:33:41,580 --> 00:33:43,679
see more contributions in this domain

774
00:33:43,679 --> 00:33:45,360
because they're definitely on the right

775
00:33:45,360 --> 00:33:46,980
path

776
00:33:46,980 --> 00:33:49,200
um we do actively prune that committer

777
00:33:49,200 --> 00:33:51,840
list it does not just grow upwards

778
00:33:51,840 --> 00:33:53,820
monotonically we make sure that it's

779
00:33:53,820 --> 00:33:55,980
active people who are actively working

780
00:33:55,980 --> 00:33:57,539
on the project so that we don't just

781
00:33:57,539 --> 00:34:00,720
have have additional privileges floating

782
00:34:00,720 --> 00:34:03,840
around there uh willy-nilly

783
00:34:03,840 --> 00:34:06,000
so you would think that this kind of

784
00:34:06,000 --> 00:34:09,359
process is familiar to most people it

785
00:34:09,359 --> 00:34:11,580
turns out it's really uncommon in the

786
00:34:11,580 --> 00:34:13,020
Silicon world for things to work this

787
00:34:13,020 --> 00:34:13,859
way

788
00:34:13,859 --> 00:34:15,899
and that's that's for very reasonable

789
00:34:15,899 --> 00:34:17,520
reasons different incentive structures

790
00:34:17,520 --> 00:34:20,580
lead to different uh sort of design

791
00:34:20,580 --> 00:34:22,918
methodologies but it's important that we

792
00:34:22,918 --> 00:34:24,418
get everyone working on the same design

793
00:34:24,418 --> 00:34:28,080
methodology so for us one of the things

794
00:34:28,080 --> 00:34:30,540
that's really really Paramount is a high

795
00:34:30,540 --> 00:34:33,179
quality a high quality design because

796
00:34:33,179 --> 00:34:36,300
that provides a lot of value which

797
00:34:36,300 --> 00:34:38,159
incentivizes adoption and so we don't

798
00:34:38,159 --> 00:34:40,739
measure our success by necessarily the

799
00:34:40,739 --> 00:34:42,540
first chip or the second chip we measure

800
00:34:42,540 --> 00:34:45,179
it by what is the uptake right what is

801
00:34:45,179 --> 00:34:47,099
the influence that we are able to have

802
00:34:47,099 --> 00:34:51,440
on other designs going forward

803
00:34:51,599 --> 00:34:53,159
and it's also worth mentioning we do

804
00:34:53,159 --> 00:34:55,739
have escalation processes in case things

805
00:34:55,739 --> 00:34:57,780
get wedged because you kind of you you

806
00:34:57,780 --> 00:34:59,460
get two kind of failure modes in these

807
00:34:59,460 --> 00:35:01,200
open source projects one is people

808
00:35:01,200 --> 00:35:02,339
putting stuff in there that they

809
00:35:02,339 --> 00:35:04,440
shouldn't which this process prevents

810
00:35:04,440 --> 00:35:06,720
and one is people sort of preventing

811
00:35:06,720 --> 00:35:08,280
progress from happening which the

812
00:35:08,280 --> 00:35:11,880
escalation uh process uh helps prevent

813
00:35:11,880 --> 00:35:13,800
and the escalation process is usually to

814
00:35:13,800 --> 00:35:15,900
email though

815
00:35:15,900 --> 00:35:18,480
so what about the technology component

816
00:35:18,480 --> 00:35:21,780
uh continuous integration uh this is a

817
00:35:21,780 --> 00:35:23,220
really good example of the kind of

818
00:35:23,220 --> 00:35:24,780
infrastructure that we've had to develop

819
00:35:24,780 --> 00:35:26,760
over the last four years uh this

820
00:35:26,760 --> 00:35:31,140
infrastructure uh you know we're making

821
00:35:31,140 --> 00:35:33,780
some Cloud company a reasonable amount

822
00:35:33,780 --> 00:35:36,119
of money as our design scales up and we

823
00:35:36,119 --> 00:35:38,540
have to run more and more Integrations

824
00:35:38,540 --> 00:35:40,740
it's really important to test changes

825
00:35:40,740 --> 00:35:42,060
it's really important to keep the code

826
00:35:42,060 --> 00:35:44,700
base as green as possible as much as

827
00:35:44,700 --> 00:35:47,160
possible and so this is a way for us to

828
00:35:47,160 --> 00:35:49,020
get automated feedback which the

829
00:35:49,020 --> 00:35:50,460
committer is then responsible for

830
00:35:50,460 --> 00:35:52,320
addressing before we can actually uh

831
00:35:52,320 --> 00:35:53,940
will allow a merge

832
00:35:53,940 --> 00:35:57,440
another big goal of the CI

833
00:35:57,440 --> 00:36:00,839
workflow is we wanted not to see our

834
00:36:00,839 --> 00:36:02,900
workflow in general is to have small

835
00:36:02,900 --> 00:36:06,119
contained uh changes being merged often

836
00:36:06,119 --> 00:36:08,880
incremental change is much much easier

837
00:36:08,880 --> 00:36:11,940
to handle review uh integrate into the

838
00:36:11,940 --> 00:36:15,060
project than someone chunking in a 5000

839
00:36:15,060 --> 00:36:18,180
Line Design those basically get rejected

840
00:36:18,180 --> 00:36:20,579
out of hand because it it just doesn't

841
00:36:20,579 --> 00:36:23,040
work you have definitely learned it just

842
00:36:23,040 --> 00:36:25,579
doesn't work so open Titan moves quickly

843
00:36:25,579 --> 00:36:29,160
so quickly that things break it's just

844
00:36:29,160 --> 00:36:32,220
normal it's natural uh so what we've

845
00:36:32,220 --> 00:36:33,839
done one of the things we've done on the

846
00:36:33,839 --> 00:36:36,480
process side is we have established a

847
00:36:36,480 --> 00:36:39,180
weekly rotating two-person on-call team

848
00:36:39,180 --> 00:36:41,760
so this is typically a digital designer

849
00:36:41,760 --> 00:36:44,220
and a design verification engineer who

850
00:36:44,220 --> 00:36:46,859
are responsible for issue triage they

851
00:36:46,859 --> 00:36:48,180
don't have to solve everyone everything

852
00:36:48,180 --> 00:36:52,560
themselves uh what they do have to do is

853
00:36:52,560 --> 00:36:55,020
you know commit up to 80 of that time

854
00:36:55,020 --> 00:36:57,720
that week that they are on call to

855
00:36:57,720 --> 00:37:01,020
handling uh issue triage solving issues

856
00:37:01,020 --> 00:37:02,520
themselves if possible and when I say

857
00:37:02,520 --> 00:37:04,320
issue I mean like literally like GitHub

858
00:37:04,320 --> 00:37:07,940
issues like an artifact

859
00:37:09,000 --> 00:37:10,500
so

860
00:37:10,500 --> 00:37:12,480
uh the other thing that the on-callers

861
00:37:12,480 --> 00:37:15,119
can do sometimes things go down in a big

862
00:37:15,119 --> 00:37:17,460
way and then the on-callers are very

863
00:37:17,460 --> 00:37:19,680
empowered to engage other people on the

864
00:37:19,680 --> 00:37:22,980
team to come in and fix whatever's

865
00:37:22,980 --> 00:37:24,480
broken in the infrastructure or whatever

866
00:37:24,480 --> 00:37:26,880
thing got overloaded whatever thing fell

867
00:37:26,880 --> 00:37:29,520
down and the reason that this is such an

868
00:37:29,520 --> 00:37:31,680
important role and why it's worth making

869
00:37:31,680 --> 00:37:35,359
a couple people's uh you know work

870
00:37:35,359 --> 00:37:37,560
fairly annoying for a short period of

871
00:37:37,560 --> 00:37:39,480
time is because when there are

872
00:37:39,480 --> 00:37:43,859
system-wide issues when there are uh too

873
00:37:43,859 --> 00:37:46,020
many failing tests that becomes a

874
00:37:46,020 --> 00:37:48,420
significant negative impact across the

875
00:37:48,420 --> 00:37:50,160
project and it slows everyone's work

876
00:37:50,160 --> 00:37:53,160
done so this is a necessary role that

877
00:37:53,160 --> 00:37:55,500
helps everyone reduce the amount of toil

878
00:37:55,500 --> 00:37:57,119
that they individually have to deal with

879
00:37:57,119 --> 00:37:59,040
and we do rotate this we make sure it's

880
00:37:59,040 --> 00:38:01,500
not always falling on the same people uh

881
00:38:01,500 --> 00:38:03,900
that's not fair but also more important

882
00:38:03,900 --> 00:38:06,000
than that it's important that everyone

883
00:38:06,000 --> 00:38:08,220
get experience with dealing with these

884
00:38:08,220 --> 00:38:10,200
breakages because it makes you think

885
00:38:10,200 --> 00:38:12,900
twice before you uh throw that random

886
00:38:12,900 --> 00:38:15,020
commit over the wall

887
00:38:15,020 --> 00:38:19,400
another big process that we follow is

888
00:38:19,400 --> 00:38:22,500
this this way in which we take a piece

889
00:38:22,500 --> 00:38:24,660
of Ip from concept to actual tape out

890
00:38:24,660 --> 00:38:26,700
Readiness you know where we take it from

891
00:38:26,700 --> 00:38:28,440
hey that's a cool design and a cool

892
00:38:28,440 --> 00:38:30,599
implementation to all right I'm willing

893
00:38:30,599 --> 00:38:33,119
to drop seven figures to make that show

894
00:38:33,119 --> 00:38:35,099
up in reality

895
00:38:35,099 --> 00:38:35,820
um

896
00:38:35,820 --> 00:38:38,099
so we break it down into design

897
00:38:38,099 --> 00:38:41,579
verification and software sort of tracks

898
00:38:41,579 --> 00:38:43,560
and then there's this meta track of the

899
00:38:43,560 --> 00:38:47,040
actual life cycle stages the uh called

900
00:38:47,040 --> 00:38:50,820
dvns these tracks are transitions

901
00:38:50,820 --> 00:38:53,520
between them are signed off by

902
00:38:53,520 --> 00:38:55,460
committers just like everything else

903
00:38:55,460 --> 00:38:58,320
there is a review meeting scheduled when

904
00:38:58,320 --> 00:38:59,880
someone thinks something is ready for

905
00:38:59,880 --> 00:39:02,700
transition and then feedback's provided

906
00:39:02,700 --> 00:39:04,440
feedback is addressed

907
00:39:04,440 --> 00:39:06,780
device moves from one stage to the next

908
00:39:06,780 --> 00:39:09,839
uh these are not linear stages you know

909
00:39:09,839 --> 00:39:13,619
to go from V1 to V2 uh V2 complete you

910
00:39:13,619 --> 00:39:15,900
have to have 90 functional coverage 90

911
00:39:15,900 --> 00:39:18,540
percent uh code coverage so these are

912
00:39:18,540 --> 00:39:22,500
Big these are big they can be big jumps

913
00:39:22,500 --> 00:39:24,960
um and when you get all three like say

914
00:39:24,960 --> 00:39:28,320
you get to D2 V2 and S2 then you can uh

915
00:39:28,320 --> 00:39:30,900
talk about moving starting to move

916
00:39:30,900 --> 00:39:32,940
through a life cycle uh stage actually I

917
00:39:32,940 --> 00:39:35,220
guess it would be D2 to D3

918
00:39:35,220 --> 00:39:37,859
across the board so when things are at

919
00:39:37,859 --> 00:39:40,140
the kind of sign off stage the the tape

920
00:39:40,140 --> 00:39:42,060
out Readiness sign off it's basically

921
00:39:42,060 --> 00:39:44,099
like uh incrementing like an Epoch

922
00:39:44,099 --> 00:39:46,079
number something along those lines that

923
00:39:46,079 --> 00:39:47,579
actually goes to the technical committee

924
00:39:47,579 --> 00:39:50,220
so that it gets a broader uh visibility

925
00:39:50,220 --> 00:39:52,619
so that we're all kind of agree yes we'd

926
00:39:52,619 --> 00:39:55,020
be comfortable taping this out uh

927
00:39:55,020 --> 00:39:57,839
ideally in a production design

928
00:39:57,839 --> 00:39:59,339
so

929
00:39:59,339 --> 00:40:02,160
it's not just you know challenges and

930
00:40:02,160 --> 00:40:05,520
stuff we did to fix them it's not just

931
00:40:05,520 --> 00:40:07,320
um you know individual IP blocks or the

932
00:40:07,320 --> 00:40:09,619
design that we've developed there are

933
00:40:09,619 --> 00:40:13,260
opportunities unique to doing this

934
00:40:13,260 --> 00:40:16,740
design in the open uh drawbacks yes it

935
00:40:16,740 --> 00:40:18,720
takes longer but also some really

936
00:40:18,720 --> 00:40:21,660
significant advantages uh it's not just

937
00:40:21,660 --> 00:40:23,400
about these challenges that keep me and

938
00:40:23,400 --> 00:40:25,260
my team employed as much as we enjoy

939
00:40:25,260 --> 00:40:27,119
that facet

940
00:40:27,119 --> 00:40:28,800
um it is about enabling an open

941
00:40:28,800 --> 00:40:31,140
ecosystem not just a single device it's

942
00:40:31,140 --> 00:40:33,300
about serving as a platform for research

943
00:40:33,300 --> 00:40:35,160
but also for commercial Innova

944
00:40:35,160 --> 00:40:37,920
Innovation and impact it's about having

945
00:40:37,920 --> 00:40:40,859
a place to concentrate what is very

946
00:40:40,859 --> 00:40:44,420
specialized skills on a single design

947
00:40:44,420 --> 00:40:47,760
and you know really bring that one

948
00:40:47,760 --> 00:40:50,880
design to the absolute peak of security

949
00:40:50,880 --> 00:40:54,180
it's hard enough to get it right uh once

950
00:40:54,180 --> 00:40:56,339
we are not sure that it's a great idea

951
00:40:56,339 --> 00:40:57,900
to be trying to get it right multiple

952
00:40:57,900 --> 00:41:00,359
multiple times and then this kind of

953
00:41:00,359 --> 00:41:02,220
foundational thing which is really

954
00:41:02,220 --> 00:41:05,040
reducing the leap of faith we have to

955
00:41:05,040 --> 00:41:06,599
take for some of our most foundational

956
00:41:06,599 --> 00:41:09,359
uh security guarantees whether people

957
00:41:09,359 --> 00:41:10,619
realize it or not you know they're

958
00:41:10,619 --> 00:41:12,540
carrying around probably six or seven

959
00:41:12,540 --> 00:41:14,160
roots of trust depending on how many

960
00:41:14,160 --> 00:41:16,440
credit cards you have in your wallet uh

961
00:41:16,440 --> 00:41:18,780
at any given time I've heard of some

962
00:41:18,780 --> 00:41:21,720
phones have up to three four secure

963
00:41:21,720 --> 00:41:22,800
elements I mean these things are

964
00:41:22,800 --> 00:41:24,720
absolutely everywhere

965
00:41:24,720 --> 00:41:27,900
so uh first thing is about enabling an

966
00:41:27,900 --> 00:41:30,180
ecosystem we have a concept we call

967
00:41:30,180 --> 00:41:33,119
comportability that all IP has to adhere

968
00:41:33,119 --> 00:41:36,599
to and what comfortability is is how we

969
00:41:36,599 --> 00:41:38,760
really make our blocks interoperate

970
00:41:38,760 --> 00:41:42,540
smoothly with each other and also how we

971
00:41:42,540 --> 00:41:46,280
maintain a consistent and correct

972
00:41:46,280 --> 00:41:49,260
accounting between the device the block

973
00:41:49,260 --> 00:41:51,660
description and the documentation that

974
00:41:51,660 --> 00:41:53,280
the software Engineers use to actually

975
00:41:53,280 --> 00:41:54,720
interface with it so that's all

976
00:41:54,720 --> 00:41:56,520
programmatically generated from a

977
00:41:56,520 --> 00:41:59,099
configuration file uh learn from past

978
00:41:59,099 --> 00:42:00,540
experience this is something we put a

979
00:42:00,540 --> 00:42:02,880
lot of work in early on because it's

980
00:42:02,880 --> 00:42:04,859
really hard to get this right after the

981
00:42:04,859 --> 00:42:06,180
fact and the last thing you want to do

982
00:42:06,180 --> 00:42:08,940
is be changing or chasing differences

983
00:42:08,940 --> 00:42:10,680
between what you wrote in the

984
00:42:10,680 --> 00:42:12,060
documentation and what you actually

985
00:42:12,060 --> 00:42:14,579
implemented in the system verilog that

986
00:42:14,579 --> 00:42:18,660
leads to uncomfortable conversations one

987
00:42:18,660 --> 00:42:19,740
interesting thing about this

988
00:42:19,740 --> 00:42:22,200
comportability and this strong

989
00:42:22,200 --> 00:42:25,320
enablement of reuse is that when we

990
00:42:25,320 --> 00:42:27,060
started the integrated root of trust

991
00:42:27,060 --> 00:42:28,619
working group we kind of went through

992
00:42:28,619 --> 00:42:30,240
looked at the architectures did an

993
00:42:30,240 --> 00:42:32,700
inventory and what it really looks like

994
00:42:32,700 --> 00:42:33,900
is

995
00:42:33,900 --> 00:42:38,220
we're basically 60 70 I'd say 70 75

996
00:42:38,220 --> 00:42:41,099
percent of the way from the discrete

997
00:42:41,099 --> 00:42:44,579
design to having a integrated design

998
00:42:44,579 --> 00:42:47,460
complete big difference obviously the

999
00:42:47,460 --> 00:42:51,180
lack of non-volatile no e-flash in the

1000
00:42:51,180 --> 00:42:53,400
the really really small nodes but

1001
00:42:53,400 --> 00:42:55,920
they're pretty canonical ways of solving

1002
00:42:55,920 --> 00:42:58,200
that problem

1003
00:42:58,200 --> 00:43:01,260
all right so another cool thing and this

1004
00:43:01,260 --> 00:43:04,380
is something that I had uh predicted

1005
00:43:04,380 --> 00:43:06,660
would happen uh or maybe I should say I

1006
00:43:06,660 --> 00:43:08,700
hoped what happened and I said it and I

1007
00:43:08,700 --> 00:43:10,859
was really really happy to see when it

1008
00:43:10,859 --> 00:43:14,520
did happen but the notion that if we go

1009
00:43:14,520 --> 00:43:18,839
and we build a kind of cohesive high

1010
00:43:18,839 --> 00:43:21,480
quality platform unquestionably you know

1011
00:43:21,480 --> 00:43:24,000
commercial quality then other people

1012
00:43:24,000 --> 00:43:27,720
will leverage that to do research on top

1013
00:43:27,720 --> 00:43:30,180
of to build on top of because it's out

1014
00:43:30,180 --> 00:43:33,480
there it's open why not uh hilariously

1015
00:43:33,480 --> 00:43:35,220
the first time this happened without any

1016
00:43:35,220 --> 00:43:37,020
coordination from us is I got an email

1017
00:43:37,020 --> 00:43:39,000
from Christoph Parr out of the blue who

1018
00:43:39,000 --> 00:43:41,520
was like oh I took your design and I ran

1019
00:43:41,520 --> 00:43:42,780
all the stuff on it and I'm publishing

1020
00:43:42,780 --> 00:43:44,579
it and it's like well that's

1021
00:43:44,579 --> 00:43:46,440
kind of wish you'd reached out we could

1022
00:43:46,440 --> 00:43:47,760
have we could have helped like we would

1023
00:43:47,760 --> 00:43:49,440
have happily helped but there have been

1024
00:43:49,440 --> 00:43:50,640
a number of people who have gone and

1025
00:43:50,640 --> 00:43:52,200
done this and then kind of reached out

1026
00:43:52,200 --> 00:43:54,420
after the fact so the fact that it's

1027
00:43:54,420 --> 00:43:57,180
kind of bubbling up from the bottom like

1028
00:43:57,180 --> 00:43:58,800
that tells me that this is fairly

1029
00:43:58,800 --> 00:44:00,540
successful

1030
00:44:00,540 --> 00:44:03,119
um and I hope this doesn't count as an

1031
00:44:03,119 --> 00:44:05,280
advertisement but one of the papers here

1032
00:44:05,280 --> 00:44:07,200
is actually being presented I think

1033
00:44:07,200 --> 00:44:10,440
tomorrow uh sinfai uh by I believe uh

1034
00:44:10,440 --> 00:44:12,119
Pascal is probably presenting that so

1035
00:44:12,119 --> 00:44:14,760
it's not just prior stuff it's happening

1036
00:44:14,760 --> 00:44:16,200
like right now people are leveraging

1037
00:44:16,200 --> 00:44:17,819
this design they're building on top of

1038
00:44:17,819 --> 00:44:18,960
it

1039
00:44:18,960 --> 00:44:21,240
um they're doing cool stuff with it

1040
00:44:21,240 --> 00:44:24,119
today and Publishing the results

1041
00:44:24,119 --> 00:44:26,400
another cool thing uh it's not just

1042
00:44:26,400 --> 00:44:27,960
research at impact it's commercial

1043
00:44:27,960 --> 00:44:31,980
impact as well uh we nubaton obviously

1044
00:44:31,980 --> 00:44:33,180
they're building our first chip we're

1045
00:44:33,180 --> 00:44:34,980
working closely with them uh they're

1046
00:44:34,980 --> 00:44:36,660
using the entire design to make this

1047
00:44:36,660 --> 00:44:38,040
commercially available secure element

1048
00:44:38,040 --> 00:44:40,920
but also a couple weeks ago we found out

1049
00:44:40,920 --> 00:44:43,680
that Microsoft had taken open Titan's

1050
00:44:43,680 --> 00:44:46,200
Ibex processor and extended it with

1051
00:44:46,200 --> 00:44:48,720
cherry style tags now that is something

1052
00:44:48,720 --> 00:44:50,520
that I had really wanted to do for a

1053
00:44:50,520 --> 00:44:53,640
long time but resources are limited and

1054
00:44:53,640 --> 00:44:56,460
turns out if you make it open enough and

1055
00:44:56,460 --> 00:44:58,200
high quality enough and you wait long

1056
00:44:58,200 --> 00:45:00,300
enough someone else will get to it for

1057
00:45:00,300 --> 00:45:02,220
you so I'm really looking forward to

1058
00:45:02,220 --> 00:45:06,180
seeing that get upstreamed as a Ibex

1059
00:45:06,180 --> 00:45:07,980
variant so that'll be something fun to

1060
00:45:07,980 --> 00:45:10,920
play with another interesting thing is

1061
00:45:10,920 --> 00:45:13,619
this open platform we were able to work

1062
00:45:13,619 --> 00:45:16,260
really closely with Colin and Hillary at

1063
00:45:16,260 --> 00:45:17,819
new IE

1064
00:45:17,819 --> 00:45:20,339
um and leverage a lot of their work to

1065
00:45:20,339 --> 00:45:22,020
basically it's our it's our development

1066
00:45:22,020 --> 00:45:23,280
infrastructure it's our emulation

1067
00:45:23,280 --> 00:45:24,900
platform it it's our side Channel

1068
00:45:24,900 --> 00:45:27,660
analysis platform the only constraint I

1069
00:45:27,660 --> 00:45:29,520
put on them is that Colin has to keep

1070
00:45:29,520 --> 00:45:31,319
naming these boards after his dogs it's

1071
00:45:31,319 --> 00:45:34,020
very very important to me so I think

1072
00:45:34,020 --> 00:45:35,760
he's going to have to start getting more

1073
00:45:35,760 --> 00:45:38,579
dogs now but we'll see how that works

1074
00:45:38,579 --> 00:45:39,839
out

1075
00:45:39,839 --> 00:45:42,240
um but what was nice is that gave us

1076
00:45:42,240 --> 00:45:43,440
something where we were able to work

1077
00:45:43,440 --> 00:45:45,420
really closely with them and really

1078
00:45:45,420 --> 00:45:48,300
understand the kind of uh value that

1079
00:45:48,300 --> 00:45:49,800
they brought to this whole secure

1080
00:45:49,800 --> 00:45:52,680
silicon ecosystem and then that ended

1081
00:45:52,680 --> 00:45:55,079
ended up culminating in a low risk

1082
00:45:55,079 --> 00:45:58,140
actually uh purchasing uh new AE and

1083
00:45:58,140 --> 00:45:59,520
we're now working even closer together

1084
00:45:59,520 --> 00:46:01,500
which is fantastic

1085
00:46:01,500 --> 00:46:05,520
so I'm going to close now on a on a

1086
00:46:05,520 --> 00:46:08,099
final note and I will

1087
00:46:08,099 --> 00:46:10,020
acknowledge or say you know you might

1088
00:46:10,020 --> 00:46:11,819
reasonably ask and I have been asked

1089
00:46:11,819 --> 00:46:13,319
both of these questions a number of

1090
00:46:13,319 --> 00:46:16,859
times two questions about this project

1091
00:46:16,859 --> 00:46:19,260
why are we doing this and to what end

1092
00:46:19,260 --> 00:46:21,000
how do we want to see the world change

1093
00:46:21,000 --> 00:46:25,020
as a result so why a few reasons one

1094
00:46:25,020 --> 00:46:27,960
it's there it's challenging we can uh

1095
00:46:27,960 --> 00:46:29,640
it's also very motivating to be told all

1096
00:46:29,640 --> 00:46:31,380
of that will never work it's like well

1097
00:46:31,380 --> 00:46:34,500
be sure because we made it work

1098
00:46:34,500 --> 00:46:36,839
um second it's the right thing to do uh

1099
00:46:36,839 --> 00:46:38,160
it's great if people trust the design

1100
00:46:38,160 --> 00:46:41,220
they really shouldn't have to this type

1101
00:46:41,220 --> 00:46:43,440
of security is not a differentiator it

1102
00:46:43,440 --> 00:46:46,740
should be an expectation an open source

1103
00:46:46,740 --> 00:46:48,960
Solutions are fundamentally more

1104
00:46:48,960 --> 00:46:52,079
palatable to users to Partners than

1105
00:46:52,079 --> 00:46:54,540
anything proprietary can ever really be

1106
00:46:54,540 --> 00:46:59,400
and then one final reason why is it's my

1107
00:46:59,400 --> 00:47:00,839
belief it's the belief of some other

1108
00:47:00,839 --> 00:47:03,359
folks that this domain these these kind

1109
00:47:03,359 --> 00:47:04,859
of specialized domains like Silicon

1110
00:47:04,859 --> 00:47:07,380
security and I've had more than one very

1111
00:47:07,380 --> 00:47:08,880
competent cryptographer tell me they

1112
00:47:08,880 --> 00:47:10,319
would really rather just focus on one

1113
00:47:10,319 --> 00:47:11,480
Library

1114
00:47:11,480 --> 00:47:15,240
they are very specialized the pool is

1115
00:47:15,240 --> 00:47:16,619
relatively limited that we're pulling

1116
00:47:16,619 --> 00:47:19,740
from there is probably in this room a

1117
00:47:19,740 --> 00:47:22,380
significant double-digit percentage of

1118
00:47:22,380 --> 00:47:24,660
people who are experts in Silicon

1119
00:47:24,660 --> 00:47:27,359
security of the world uh that's a little

1120
00:47:27,359 --> 00:47:30,720
concerning but that is what it is and so

1121
00:47:30,720 --> 00:47:32,400
you know there's this notion that it's

1122
00:47:32,400 --> 00:47:35,160
hard enough to get this right once it's

1123
00:47:35,160 --> 00:47:38,579
not clear that we really move security

1124
00:47:38,579 --> 00:47:40,380
forward by splitting our effort and

1125
00:47:40,380 --> 00:47:43,859
doing it uh in more than one place

1126
00:47:43,859 --> 00:47:47,520
um okay so next reasonable question to

1127
00:47:47,520 --> 00:47:49,619
what end you know how is the world going

1128
00:47:49,619 --> 00:47:51,000
to change how would we want to see the

1129
00:47:51,000 --> 00:47:53,400
world change as a result of this when

1130
00:47:53,400 --> 00:47:55,140
it's successful and I'm going to define

1131
00:47:55,140 --> 00:47:58,380
success because it is silicon it's not

1132
00:47:58,380 --> 00:47:59,640
successful until you have silicon in

1133
00:47:59,640 --> 00:48:01,920
hand so I'm going to define success as

1134
00:48:01,920 --> 00:48:04,740
silicon commercially relevant silicon in

1135
00:48:04,740 --> 00:48:07,319
hand incontrovertible proof that open

1136
00:48:07,319 --> 00:48:10,619
silicon can be successful so I'm also

1137
00:48:10,619 --> 00:48:12,900
going to say we're real close months not

1138
00:48:12,900 --> 00:48:15,420
years and I've got a very talented

1139
00:48:15,420 --> 00:48:17,400
committed team and partner owners that

1140
00:48:17,400 --> 00:48:19,020
say we're going to get there it's

1141
00:48:19,020 --> 00:48:20,119
actually

1142
00:48:20,119 --> 00:48:22,500
flying back from meeting our partners in

1143
00:48:22,500 --> 00:48:24,359
Israel is why I

1144
00:48:24,359 --> 00:48:25,980
had to stay overnight in Munich last

1145
00:48:25,980 --> 00:48:29,099
night so uh Fair sites and it was worth

1146
00:48:29,099 --> 00:48:30,480
it in the end

1147
00:48:30,480 --> 00:48:33,060
so here's here's my kind of spicy

1148
00:48:33,060 --> 00:48:34,440
closing statement

1149
00:48:34,440 --> 00:48:37,260
um once this is successful the question

1150
00:48:37,260 --> 00:48:40,020
will not be why should we use open

1151
00:48:40,020 --> 00:48:42,240
silicon it's going to be why aren't you

1152
00:48:42,240 --> 00:48:44,760
using open silicon especially for

1153
00:48:44,760 --> 00:48:47,579
something as critical to all of our

1154
00:48:47,579 --> 00:48:49,980
security like the Silicon root of trust

1155
00:48:49,980 --> 00:48:52,280
these ubiquitous little secure devices

1156
00:48:52,280 --> 00:48:55,079
that are everywhere today so with that

1157
00:48:55,079 --> 00:48:57,780
thank you all for having me

1158
00:48:57,780 --> 00:49:00,000
um a little bit over apologize but I am

1159
00:49:00,000 --> 00:49:02,760
happy to take questions now and for the

1160
00:49:02,760 --> 00:49:05,420
rest of the conference

1161
00:49:08,220 --> 00:49:11,220
foreign

1162
00:49:21,180 --> 00:49:29,469
[Music]

1163
00:49:31,680 --> 00:49:34,910
[Music]

1164
00:49:35,780 --> 00:49:37,800
Titan fitting into the current uh

1165
00:49:37,800 --> 00:49:38,940
certification schemes we have in

1166
00:49:38,940 --> 00:49:40,200
security

1167
00:49:40,200 --> 00:49:42,660
I'm gonna guess you mean common criteria

1168
00:49:42,660 --> 00:49:45,380
nailed it uh

1169
00:49:45,380 --> 00:49:49,200
so uh I'm actually giving a talk at some

1170
00:49:49,200 --> 00:49:51,480
conference in Spain and I think in like

1171
00:49:51,480 --> 00:49:52,859
two months where I'm going to cover all

1172
00:49:52,859 --> 00:49:56,700
of that in uh detail but it is a

1173
00:49:56,700 --> 00:50:00,060
requirement that uh open Titan designed

1174
00:50:00,060 --> 00:50:03,180
blocks uh be

1175
00:50:03,180 --> 00:50:06,720
um compatible with both fips and uh

1176
00:50:06,720 --> 00:50:10,700
common criteria pp84 but also now pp117

1177
00:50:10,700 --> 00:50:14,339
for the integrated designs it is not

1178
00:50:14,339 --> 00:50:16,920
trivial to do that we do have uh we've

1179
00:50:16,920 --> 00:50:18,180
had a security Target for like three

1180
00:50:18,180 --> 00:50:21,119
years now it's quite extensive so we've

1181
00:50:21,119 --> 00:50:22,859
got both the technical collateral to do

1182
00:50:22,859 --> 00:50:24,420
it as well as the organizational

1183
00:50:24,420 --> 00:50:26,880
collateral to do it we have been engaged

1184
00:50:26,880 --> 00:50:29,880
with more than one lab from the start we

1185
00:50:29,880 --> 00:50:32,280
also work closely with folks I mean gnd

1186
00:50:32,280 --> 00:50:35,400
was our first partner they do seem to

1187
00:50:35,400 --> 00:50:38,520
know what they're doing uh quite well

1188
00:50:38,520 --> 00:50:41,760
um and it's something that while there's

1189
00:50:41,760 --> 00:50:44,579
this this this like Canard that you

1190
00:50:44,579 --> 00:50:47,780
can't certify an open design uh it's not

1191
00:50:47,780 --> 00:50:51,119
exactly true we have asked about this

1192
00:50:51,119 --> 00:50:53,099
and gotten some quite a bit of feedback

1193
00:50:53,099 --> 00:50:55,079
on it I wouldn't say it's easy to

1194
00:50:55,079 --> 00:50:57,059
certify an open design and what it

1195
00:50:57,059 --> 00:50:58,619
actually ends up doing is it ends up

1196
00:50:58,619 --> 00:51:02,339
pushing the implementation the security

1197
00:51:02,339 --> 00:51:04,140
invitation that we have to do

1198
00:51:04,140 --> 00:51:07,559
up a fair amount because lots of belts

1199
00:51:07,559 --> 00:51:09,599
lots of suspenders that which leads to

1200
00:51:09,599 --> 00:51:12,300
some very testy conversations with the

1201
00:51:12,300 --> 00:51:13,559
partners who really just want to reduce

1202
00:51:13,559 --> 00:51:16,859
area but the thing is is we have to over

1203
00:51:16,859 --> 00:51:20,460
Build It For the First Time evaluate it

1204
00:51:20,460 --> 00:51:23,460
build the lab right or sorry evaluate it

1205
00:51:23,460 --> 00:51:26,280
in the lab both our own and other

1206
00:51:26,280 --> 00:51:29,460
external Labs so we can see where if we

1207
00:51:29,460 --> 00:51:32,520
can cut we can cut right so it's

1208
00:51:32,520 --> 00:51:34,140
foundational it's something we consider

1209
00:51:34,140 --> 00:51:36,420
from the very very beginning so and you

1210
00:51:36,420 --> 00:51:38,819
know what we might it might fail the

1211
00:51:38,819 --> 00:51:41,280
first time won't fail a second time

1212
00:51:41,280 --> 00:51:42,480
so

1213
00:51:42,480 --> 00:51:45,140
yep

1214
00:51:46,980 --> 00:51:49,800
other further questions

1215
00:51:49,800 --> 00:51:51,240
actually

1216
00:51:51,240 --> 00:51:54,740
Maybe you first

1217
00:52:00,400 --> 00:52:03,820
[Music]

1218
00:52:11,880 --> 00:52:14,880
foreign

1219
00:52:39,059 --> 00:52:41,280
okay so uh I'm sorry I have a little

1220
00:52:41,280 --> 00:52:42,660
trouble hearing so I think I heard two

1221
00:52:42,660 --> 00:52:45,300
questions one was how do we enforce that

1222
00:52:45,300 --> 00:52:47,040
the stuff that has to be open source is

1223
00:52:47,040 --> 00:52:50,940
open source and the second one was our

1224
00:52:50,940 --> 00:52:52,740
Trojan Harvard Trojans part of our

1225
00:52:52,740 --> 00:52:55,740
threat model is that am I close

1226
00:52:55,740 --> 00:52:58,859
okay uh how do we enforce that something

1227
00:52:58,859 --> 00:53:00,720
that must be open source is open source

1228
00:53:00,720 --> 00:53:03,660
uh it's going to be really obvious uh if

1229
00:53:03,660 --> 00:53:05,099
they change it because it's going to

1230
00:53:05,099 --> 00:53:08,940
change what comes out of the uh the

1231
00:53:08,940 --> 00:53:13,500
the key derivation engine uh but also uh

1232
00:53:13,500 --> 00:53:16,079
by contract uh we have it we have a

1233
00:53:16,079 --> 00:53:17,520
trademark you don't get the trademark if

1234
00:53:17,520 --> 00:53:20,160
you you could look to be clear this is a

1235
00:53:20,160 --> 00:53:21,720
permissively licensed open source design

1236
00:53:21,720 --> 00:53:23,400
you can take it you do whatever you want

1237
00:53:23,400 --> 00:53:26,760
to it right you then cannot also

1238
00:53:26,760 --> 00:53:29,339
necessarily call it open Titan that's

1239
00:53:29,339 --> 00:53:32,040
not okay right that trademark is pretty

1240
00:53:32,040 --> 00:53:35,579
strictly controlled and there is uh

1241
00:53:35,579 --> 00:53:37,319
going to be an evaluation right now the

1242
00:53:37,319 --> 00:53:38,880
evaluation process is what we're only

1243
00:53:38,880 --> 00:53:40,319
working with one back-end vendor right

1244
00:53:40,319 --> 00:53:41,880
we're only building one of these devices

1245
00:53:41,880 --> 00:53:43,500
we know very well what's going into that

1246
00:53:43,500 --> 00:53:47,220
device uh in the future it will scale in

1247
00:53:47,220 --> 00:53:49,980
a different way uh but really you know

1248
00:53:49,980 --> 00:53:54,180
we will be irritated if someone abuses

1249
00:53:54,180 --> 00:53:56,579
the trademark and there are actual teeth

1250
00:53:56,579 --> 00:54:01,559
on that uh the second one uh

1251
00:54:01,980 --> 00:54:04,740
I don't want to say Hardware Trojans are

1252
00:54:04,740 --> 00:54:07,319
not part of the threat model but we are

1253
00:54:07,319 --> 00:54:09,540
certainly not claiming that we are

1254
00:54:09,540 --> 00:54:12,720
solving that problem although it's my

1255
00:54:12,720 --> 00:54:16,980
belief that we are doing better

1256
00:54:16,980 --> 00:54:19,020
we will do better tomorrow with that

1257
00:54:19,020 --> 00:54:20,760
problem with this design than we have

1258
00:54:20,760 --> 00:54:23,040
done in the past because if you have a

1259
00:54:23,040 --> 00:54:25,200
priority knowledge of the full design

1260
00:54:25,200 --> 00:54:27,540
you at least have a chance through

1261
00:54:27,540 --> 00:54:29,400
I don't know Metrology reverse

1262
00:54:29,400 --> 00:54:33,000
engineering whatever of uh being able to

1263
00:54:33,000 --> 00:54:35,400
validate that what came out of the Fab

1264
00:54:35,400 --> 00:54:37,200
is what you put into the Fab but I would

1265
00:54:37,200 --> 00:54:39,599
never claim they like can't solve

1266
00:54:39,599 --> 00:54:41,819
Hardware Trojan sets

1267
00:54:41,819 --> 00:54:43,859
good luck

1268
00:54:43,859 --> 00:54:46,140
ask for ask for money from from the

1269
00:54:46,140 --> 00:54:48,259
government

1270
00:54:49,800 --> 00:54:52,559
sorry yeah I think we stopped over there

1271
00:54:52,559 --> 00:54:54,960
um and take you after that and then it's

1272
00:54:54,960 --> 00:54:58,040
your turn and

1273
00:55:10,500 --> 00:55:12,500
um

1274
00:55:17,579 --> 00:55:20,579
foreign

1275
00:55:25,740 --> 00:55:28,079
okay so that was about what what and I'd

1276
00:55:28,079 --> 00:55:30,180
ask people to like I know my ears stick

1277
00:55:30,180 --> 00:55:31,980
out but it's less functional than you

1278
00:55:31,980 --> 00:55:33,119
might think so I'm having a little bit

1279
00:55:33,119 --> 00:55:34,559
of trouble hearing folks so just speak

1280
00:55:34,559 --> 00:55:36,839
up uh please so I think what I heard was

1281
00:55:36,839 --> 00:55:40,079
what is our uh how do we handle

1282
00:55:40,079 --> 00:55:42,720
vulnerability disclosures yeah so uh

1283
00:55:42,720 --> 00:55:44,220
there is a vulnerability disclosure

1284
00:55:44,220 --> 00:55:47,280
process which uh

1285
00:55:47,280 --> 00:55:49,859
my right hand Miguel who I'm looking in

1286
00:55:49,859 --> 00:55:51,540
his general direction assures me has

1287
00:55:51,540 --> 00:55:53,760
been documented and we will be reviewing

1288
00:55:53,760 --> 00:55:56,099
it shortly but basically we're adhering

1289
00:55:56,099 --> 00:56:00,480
uh at a minimum to the uh vulnerability

1290
00:56:00,480 --> 00:56:03,240
disclosure requirements that uh CC the

1291
00:56:03,240 --> 00:56:05,220
appropriate CC mandates so we're at

1292
00:56:05,220 --> 00:56:07,859
least doing that well and then I suspect

1293
00:56:07,859 --> 00:56:10,079
it'll because of the cycle times of

1294
00:56:10,079 --> 00:56:11,760
silicon you know it won't be three

1295
00:56:11,760 --> 00:56:13,380
months it'll be six months or something

1296
00:56:13,380 --> 00:56:15,180
so there'll be some variation there but

1297
00:56:15,180 --> 00:56:16,800
yes there is it is something that we

1298
00:56:16,800 --> 00:56:19,020
have started working on uh or that we

1299
00:56:19,020 --> 00:56:21,059
have a draft of and then is starting to

1300
00:56:21,059 --> 00:56:23,160
go through a review process oh no I see

1301
00:56:23,160 --> 00:56:25,339
you

1302
00:56:26,520 --> 00:56:29,040
anyway so yeah we're well aware that

1303
00:56:29,040 --> 00:56:31,200
that's an issue

1304
00:56:31,200 --> 00:56:32,280
thank you

1305
00:56:32,280 --> 00:56:35,420
so thanks

1306
00:56:40,020 --> 00:56:42,020
um

1307
00:56:49,910 --> 00:57:09,119
[Music]

1308
00:57:09,119 --> 00:57:09,640
um

1309
00:57:09,640 --> 00:57:17,959
[Music]

1310
00:57:24,960 --> 00:57:27,960
foreign

1311
00:57:28,840 --> 00:57:31,740
[Music]

1312
00:57:31,740 --> 00:57:34,740
businesses

1313
00:57:37,300 --> 00:57:40,639
[Music]

1314
00:57:43,740 --> 00:57:53,738
[Music]

1315
00:57:57,540 --> 00:57:59,040
[Music]

1316
00:57:59,040 --> 00:58:01,040
um

1317
00:58:05,579 --> 00:58:08,099
so if I hear you correctly you're asking

1318
00:58:08,099 --> 00:58:12,720
how do we handle uh the

1319
00:58:12,720 --> 00:58:14,280
different process nodes different

1320
00:58:14,280 --> 00:58:16,500
applications actually require uh

1321
00:58:16,500 --> 00:58:18,359
different configurations of roots of

1322
00:58:18,359 --> 00:58:19,740
trust they can be a little different

1323
00:58:19,740 --> 00:58:21,240
they can be a lot different how do we

1324
00:58:21,240 --> 00:58:23,940
actually handle that right yeah so I

1325
00:58:23,940 --> 00:58:25,260
alluded to a little bit this thing

1326
00:58:25,260 --> 00:58:26,760
called multi-top where we're actually

1327
00:58:26,760 --> 00:58:28,260
handling multiple top level

1328
00:58:28,260 --> 00:58:31,140
configurations and keeping that code

1329
00:58:31,140 --> 00:58:33,540
base consistent in green we've put a

1330
00:58:33,540 --> 00:58:35,880
bunch of work into repo engineering to

1331
00:58:35,880 --> 00:58:38,460
get this done this is about it's going

1332
00:58:38,460 --> 00:58:40,319
for discussion at one of the main

1333
00:58:40,319 --> 00:58:41,760
working groups relatively soon though

1334
00:58:41,760 --> 00:58:44,280
now it's actually the integrated working

1335
00:58:44,280 --> 00:58:47,220
group is basically forcing us to address

1336
00:58:47,220 --> 00:58:50,040
this problem in a scalable way what our

1337
00:58:50,040 --> 00:58:53,280
goal is is to have we call them

1338
00:58:53,280 --> 00:58:55,260
complexes probably should have called

1339
00:58:55,260 --> 00:58:57,420
them configurations but you know I made

1340
00:58:57,420 --> 00:58:58,740
my bed so I'm going to lie in it so we

1341
00:58:58,740 --> 00:59:01,020
call them complexes

1342
00:59:01,020 --> 00:59:02,839
um multiple

1343
00:59:02,839 --> 00:59:05,460
multiple admissible architectures but a

1344
00:59:05,460 --> 00:59:08,040
finite number right we don't want this

1345
00:59:08,040 --> 00:59:09,780
to grow without bound although again

1346
00:59:09,780 --> 00:59:12,359
again again this is a permissively

1347
00:59:12,359 --> 00:59:14,400
licensed open source project if you were

1348
00:59:14,400 --> 00:59:15,720
like you know what

1349
00:59:15,720 --> 00:59:18,240
your big no mentioned it just doesn't

1350
00:59:18,240 --> 00:59:20,700
work for me or your boot ROM we don't

1351
00:59:20,700 --> 00:59:22,079
like it

1352
00:59:22,079 --> 00:59:23,700
um it's fine you can change it you can

1353
00:59:23,700 --> 00:59:24,960
implement it

1354
00:59:24,960 --> 00:59:26,880
just don't call it open Titan right it's

1355
00:59:26,880 --> 00:59:29,160
absolutely fine because the thing is is

1356
00:59:29,160 --> 00:59:31,740
that for us you know for a lot of the

1357
00:59:31,740 --> 00:59:33,359
partners the reason why they support

1358
00:59:33,359 --> 00:59:36,380
this project is that fundamental

1359
00:59:36,380 --> 00:59:39,000
transparency guarantee right the ability

1360
00:59:39,000 --> 00:59:41,000
to get a

1361
00:59:41,000 --> 00:59:44,460
roughly equivalent uh you know modulo

1362
00:59:44,460 --> 00:59:47,220
some important things

1363
00:59:47,220 --> 00:59:50,460
um level of transparency from a design

1364
00:59:50,460 --> 00:59:52,440
as if they had made it themselves right

1365
00:59:52,440 --> 00:59:56,099
so it can't grow without bound there

1366
00:59:56,099 --> 00:59:57,660
should be kind of Baseline admissible

1367
00:59:57,660 --> 00:59:59,520
architectures for a number of number of

1368
00:59:59,520 --> 01:00:01,079
different points

1369
01:00:01,079 --> 01:00:02,280
um and that's something that's under

1370
01:00:02,280 --> 01:00:04,140
development like right now but to be

1371
01:00:04,140 --> 01:00:07,380
clear our our Focus today is not on

1372
01:00:07,380 --> 01:00:09,180
we've already got our we've already got

1373
01:00:09,180 --> 01:00:10,799
our customers we've already got our tape

1374
01:00:10,799 --> 01:00:12,900
out partner like we're we got a mission

1375
01:00:12,900 --> 01:00:14,700
right so we're executing on that mission

1376
01:00:14,700 --> 01:00:18,119
and then we're going to keep working on

1377
01:00:18,119 --> 01:00:21,180
the scaling of that to more and more uh

1378
01:00:21,180 --> 01:00:23,960
designs over time

1379
01:00:25,500 --> 01:00:27,420
um thank you yeah sorry I think we'll

1380
01:00:27,420 --> 01:00:28,680
close the

1381
01:00:28,680 --> 01:00:30,900
um question session now

1382
01:00:30,900 --> 01:00:33,119
um the last question we'll take offline

1383
01:00:33,119 --> 01:00:34,799
if that's okay because we want to

1384
01:00:34,799 --> 01:00:36,960
continue at some point so um thank you

1385
01:00:36,960 --> 01:00:38,819
very much again for giving us these

1386
01:00:38,819 --> 01:00:42,020
insights and coming over

1387
01:00:50,940 --> 01:00:53,160
so we have a track switch break now

1388
01:00:53,160 --> 01:00:54,540
that's a really difficult word to save

1389
01:00:54,540 --> 01:00:58,319
you save like track switch okay so

1390
01:00:58,319 --> 01:01:00,420
um it's supposed to be 10 minutes if you

1391
01:01:00,420 --> 01:01:01,799
can make it in seven minutes would be

1392
01:01:01,799 --> 01:01:04,500
great thank you

1393
01:01:04,500 --> 01:01:08,660
take a nice thought thanks appreciate it

1394
01:01:10,260 --> 01:01:13,220
I'm going to stop

1395
01:01:15,500 --> 01:01:18,619
no no

1396
01:01:19,260 --> 01:01:21,260
um

