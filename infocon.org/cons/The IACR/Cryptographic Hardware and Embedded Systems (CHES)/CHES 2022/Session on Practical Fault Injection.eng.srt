1
00:00:01,800 --> 00:00:04,800
foreign

2
00:00:13,500 --> 00:00:17,279
excuse me it doesn't work

3
00:00:17,279 --> 00:00:20,240
that's why that's right

4
00:00:24,180 --> 00:00:27,180
thanks

5
00:00:27,180 --> 00:00:30,180
okay

6
00:00:32,759 --> 00:00:35,239
okay

7
00:00:35,340 --> 00:00:36,860
51.

8
00:00:36,860 --> 00:00:40,559
just let me know when I should start

9
00:00:40,559 --> 00:00:43,099
listening

10
00:00:55,260 --> 00:00:58,260
wow

11
00:01:07,280 --> 00:01:11,600
okay morning everyone

12
00:01:14,820 --> 00:01:17,360
sure

13
00:01:28,220 --> 00:01:32,360
okay so

14
00:01:34,520 --> 00:01:37,200
uh once again morning everyone welcome

15
00:01:37,200 --> 00:01:39,360
to the first session of the day the

16
00:01:39,360 --> 00:01:41,220
title of the session is practical fault

17
00:01:41,220 --> 00:01:43,799
injection and we start with the paper

18
00:01:43,799 --> 00:01:45,900
practical multiple persistent fault

19
00:01:45,900 --> 00:01:48,540
analysis and the speaker is Hussein

20
00:01:48,540 --> 00:01:49,799
khadipur

21
00:01:49,799 --> 00:01:52,320
thanks for introduction good morning

22
00:01:52,320 --> 00:01:54,720
everyone and I'm very pleased to present

23
00:01:54,720 --> 00:01:57,180
our work entitled practical multiple

24
00:01:57,180 --> 00:01:59,040
persistent quality analysis which is a

25
00:01:59,040 --> 00:02:02,700
Chinese work with hydrocellaneously

26
00:02:04,619 --> 00:02:06,780
by practical I mean an attack which can

27
00:02:06,780 --> 00:02:09,060
be performed on a regular laptop in a

28
00:02:09,060 --> 00:02:10,318
few seconds

29
00:02:10,318 --> 00:02:12,480
this is the already of my talk

30
00:02:12,480 --> 00:02:16,200
I was supposed to give and leave a PFA

31
00:02:16,200 --> 00:02:17,700
font attack

32
00:02:17,700 --> 00:02:19,800
and point to the research Gap in this

33
00:02:19,800 --> 00:02:21,959
direction that we filled in this work

34
00:02:21,959 --> 00:02:24,060
and next Island trainers are need for

35
00:02:24,060 --> 00:02:26,640
OverWatch for PSA with multiple faults

36
00:02:26,640 --> 00:02:29,280
and introduce a generic key recovery

37
00:02:29,280 --> 00:02:31,140
framework which goes deep into the

38
00:02:31,140 --> 00:02:33,000
decryption and explore the following to

39
00:02:33,000 --> 00:02:34,739
enter the first round of decryption to

40
00:02:34,739 --> 00:02:37,560
retrieve the master key and finally

41
00:02:37,560 --> 00:02:39,180
conclude the exactly summarizing our

42
00:02:39,180 --> 00:02:41,459
main contributions in this work so let's

43
00:02:41,459 --> 00:02:43,379
start by the introduction and the

44
00:02:43,379 --> 00:02:44,879
research Gap

45
00:02:44,879 --> 00:02:47,360
all that was introduced in Euros about

46
00:02:47,360 --> 00:02:51,180
1997 and has two steps the case step is

47
00:02:51,180 --> 00:02:53,940
for the injection in which we injects

48
00:02:53,940 --> 00:02:55,739
fault into the cryptographic device to

49
00:02:55,739 --> 00:02:58,440
disturb the cryptographic operation

50
00:02:58,440 --> 00:03:02,220
next we observe the report disciple

51
00:03:02,220 --> 00:03:04,800
taste and analyze them to receive the

52
00:03:04,800 --> 00:03:07,200
secret information

53
00:03:07,200 --> 00:03:10,560
in just 2018 uh a new type of water

54
00:03:10,560 --> 00:03:12,780
attack was introduced which is

55
00:03:12,780 --> 00:03:14,819
persistent on attack

56
00:03:14,819 --> 00:03:17,099
on the transient ports which remains

57
00:03:17,099 --> 00:03:20,640
only for a few click Cycles persistent

58
00:03:20,640 --> 00:03:21,720
fault

59
00:03:21,720 --> 00:03:24,239
is remains until the result of the big

60
00:03:24,239 --> 00:03:25,620
wise

61
00:03:25,620 --> 00:03:29,340
for example the injector forms in PFA

62
00:03:29,340 --> 00:03:32,459
typically the change of the test

63
00:03:32,459 --> 00:03:34,500
algorithm constants it can be for

64
00:03:34,500 --> 00:03:37,440
example a liquid table of an Sparks if

65
00:03:37,440 --> 00:03:40,319
the implementation is uh employs a table

66
00:03:40,319 --> 00:03:44,060
based implementation of a Sparks

67
00:03:44,060 --> 00:03:46,680
it is a song that we can inject the

68
00:03:46,680 --> 00:03:49,080
fault before the encryption for example

69
00:03:49,080 --> 00:03:51,959
when the silica table is loaded from

70
00:03:51,959 --> 00:03:55,140
flash to SRAM so we inject fault to

71
00:03:55,140 --> 00:03:57,480
distort one of the for example layer

72
00:03:57,480 --> 00:04:00,480
instructions and after that all of the

73
00:04:00,480 --> 00:04:03,780
encryption uh employees defaultier

74
00:04:03,780 --> 00:04:05,400
spikes

75
00:04:05,400 --> 00:04:07,799
another assumption that we have is uh

76
00:04:07,799 --> 00:04:10,140
that we can collect multiple faulty

77
00:04:10,140 --> 00:04:12,980
cyber tests

78
00:04:13,140 --> 00:04:15,780
so let's see the quantity of PFA the

79
00:04:15,780 --> 00:04:18,358
quality of PFA is quite simple

80
00:04:18,358 --> 00:04:20,639
for example take this uh forget this box

81
00:04:20,639 --> 00:04:22,620
anyway as an example and this very

82
00:04:22,620 --> 00:04:24,800
simple toy side on the right hand side

83
00:04:24,800 --> 00:04:27,840
we have informative Sparks and we mix

84
00:04:27,840 --> 00:04:29,639
the key after that

85
00:04:29,639 --> 00:04:33,240
so if we inject the fault and alter once

86
00:04:33,240 --> 00:04:34,800
the entry using this lookup table for

87
00:04:34,800 --> 00:04:37,380
example e here change it to anything

88
00:04:37,380 --> 00:04:39,060
else

89
00:04:39,060 --> 00:04:42,840
we can see that e will not appear in the

90
00:04:42,840 --> 00:04:46,380
algorithms box right so we can use this

91
00:04:46,380 --> 00:04:49,500
as an instincture to filter the one case

92
00:04:49,500 --> 00:04:52,680
because we know it as it is assumed that

93
00:04:52,680 --> 00:04:55,620
we know that e is also appeared in the

94
00:04:55,620 --> 00:04:58,500
output of a box so we can try different

95
00:04:58,500 --> 00:05:00,960
uh for example cyber base for the Cyber

96
00:05:00,960 --> 00:05:04,860
taste and exclude the wrong Keys okay by

97
00:05:04,860 --> 00:05:06,660
observing the first first cyber text for

98
00:05:06,660 --> 00:05:09,540
example we can conclude one key and if

99
00:05:09,540 --> 00:05:11,220
we have sufficiently large number of

100
00:05:11,220 --> 00:05:14,699
ciphertext and only single fault we can

101
00:05:14,699 --> 00:05:17,160
uniquely retrieve the key by excluding

102
00:05:17,160 --> 00:05:19,560
all of the Roman keys

103
00:05:19,560 --> 00:05:22,620
the searching space is just one byte

104
00:05:22,620 --> 00:05:25,139
because we can do the attack white by

105
00:05:25,139 --> 00:05:27,360
white we can receive the key right by

106
00:05:27,360 --> 00:05:28,860
bites for example

107
00:05:28,860 --> 00:05:31,139
this shape represents the last round of

108
00:05:31,139 --> 00:05:32,699
areas so you can skip the shooter

109
00:05:32,699 --> 00:05:35,460
because uh it doesn't change

110
00:05:35,460 --> 00:05:38,280
it doesn't be stuck uh bytes you can

111
00:05:38,280 --> 00:05:41,220
attack white robots and retrieve the

112
00:05:41,220 --> 00:05:43,860
last one key by 12 bytes it's quite

113
00:05:43,860 --> 00:05:45,840
simple just excluding the line key

114
00:05:45,840 --> 00:05:49,560
according to the Cyber text you have

115
00:05:49,560 --> 00:05:51,900
but uh let's see what is the limitations

116
00:05:51,900 --> 00:05:54,919
of pfy this figure

117
00:05:54,919 --> 00:05:57,060
represents one of the basic limitations

118
00:05:57,060 --> 00:05:58,800
very well

119
00:05:58,800 --> 00:06:01,919
but horizontal axis of this figure

120
00:06:01,919 --> 00:06:03,900
represents the number of therapists over

121
00:06:03,900 --> 00:06:06,120
days that we have as an attacker

122
00:06:06,120 --> 00:06:09,120
and vertical axis represents the entropy

123
00:06:09,120 --> 00:06:12,120
of the key after fault analysis

124
00:06:12,120 --> 00:06:15,419
then there is only one single part along

125
00:06:15,419 --> 00:06:18,780
the airplane is the number of faults

126
00:06:18,780 --> 00:06:21,600
when the number of false is one you can

127
00:06:21,600 --> 00:06:24,120
see that we can uniquely insert the key

128
00:06:24,120 --> 00:06:26,580
if we have sufficient number of soft

129
00:06:26,580 --> 00:06:28,740
vertex for example more than 2 000

130
00:06:28,740 --> 00:06:31,860
faulty cyberjects but the problem is for

131
00:06:31,860 --> 00:06:33,000
multiple parts

132
00:06:33,000 --> 00:06:36,300
when we have multiple cells

133
00:06:36,300 --> 00:06:38,520
for example uh

134
00:06:38,520 --> 00:06:42,360
the entropy of the key from protocols is

135
00:06:42,360 --> 00:06:44,160
57

136
00:06:44,160 --> 00:06:46,560
it means that after false enhances you

137
00:06:46,560 --> 00:06:49,560
are left with two to the 57 key

138
00:06:49,560 --> 00:06:53,280
candidates for the last one key

139
00:06:53,280 --> 00:06:56,759
you know that uh the killings of this is

140
00:06:56,759 --> 00:07:00,120
56 right so receiving the current key

141
00:07:00,120 --> 00:07:02,100
even if you have access to a correct

142
00:07:02,100 --> 00:07:03,780
printed cyber text

143
00:07:03,780 --> 00:07:06,780
is uh even harder than the roots we're

144
00:07:06,780 --> 00:07:09,680
seeing the Keen space of bes

145
00:07:09,680 --> 00:07:13,440
Ides I told you we want to achieve a

146
00:07:13,440 --> 00:07:15,120
practical attack which can be performed

147
00:07:15,120 --> 00:07:16,919
on a regular laptop in a few seconds but

148
00:07:16,919 --> 00:07:19,620
it's not spectacle so let me since the

149
00:07:19,620 --> 00:07:20,880
research Gap

150
00:07:20,880 --> 00:07:23,099
Let's uh let me summarize the main

151
00:07:23,099 --> 00:07:26,160
limitations of PFA best of all in PFI

152
00:07:26,160 --> 00:07:28,560
there is a basic assumption

153
00:07:28,560 --> 00:07:31,259
which is annoying the location of the

154
00:07:31,259 --> 00:07:33,840
falls for example in business works we

155
00:07:33,840 --> 00:07:36,479
assume that we know fault is injected on

156
00:07:36,479 --> 00:07:39,720
E and it is excluded e what

157
00:07:39,720 --> 00:07:41,699
it's just an assumption it's not

158
00:07:41,699 --> 00:07:45,660
necessarily hold the impact as

159
00:07:45,660 --> 00:07:48,599
well for multiple organization uh

160
00:07:48,599 --> 00:07:51,060
we are left with multiple key candidates

161
00:07:51,060 --> 00:07:53,280
after the false analysis right

162
00:07:53,280 --> 00:07:55,560
if the number of phones is more than one

163
00:07:55,560 --> 00:07:58,199
so the question is that

164
00:07:58,199 --> 00:08:00,960
what if we don't have access to a

165
00:08:00,960 --> 00:08:02,759
plantation is corresponding currents

166
00:08:02,759 --> 00:08:05,039
creates hypothetics because we uh it is

167
00:08:05,039 --> 00:08:07,080
assumed that we have access only to the

168
00:08:07,080 --> 00:08:09,240
point disciple text how we can retrieve

169
00:08:09,240 --> 00:08:11,099
the master key

170
00:08:11,099 --> 00:08:14,419
we have a reference

171
00:08:14,599 --> 00:08:16,919
another limitation is that people they

172
00:08:16,919 --> 00:08:18,840
only exports the fourth leakage in the

173
00:08:18,840 --> 00:08:20,280
last round

174
00:08:20,280 --> 00:08:22,979
doesn't go into the decryption and

175
00:08:22,979 --> 00:08:25,620
explode of all leakage because if the uh

176
00:08:25,620 --> 00:08:27,240
the implementation in the table based

177
00:08:27,240 --> 00:08:28,979
implementation and if you inject the

178
00:08:28,979 --> 00:08:31,500
false into the lookup table all of the

179
00:08:31,500 --> 00:08:33,059
encryption rounds

180
00:08:33,059 --> 00:08:36,299
employ the fontius box but we are only

181
00:08:36,299 --> 00:08:38,520
exploiting the last round the false

182
00:08:38,520 --> 00:08:40,200
injection in the last round it is

183
00:08:40,200 --> 00:08:42,599
another limitation

184
00:08:42,599 --> 00:08:46,380
I should mention that uh in 2021 an

185
00:08:46,380 --> 00:08:49,320
enhanced version of PFA which is epfa

186
00:08:49,320 --> 00:08:52,560
was proposed to result one of one of

187
00:08:52,560 --> 00:08:54,120
these limitations which is exploiting

188
00:08:54,120 --> 00:08:55,500
for example the fourth of the king which

189
00:08:55,500 --> 00:08:57,240
in multiple rounds

190
00:08:57,240 --> 00:09:01,440
but npf is not clear about uh exploiting

191
00:09:01,440 --> 00:09:05,100
multiple faults in deeper rounds

192
00:09:05,100 --> 00:09:07,380
in addition if your face relies on the

193
00:09:07,380 --> 00:09:09,899
assumption that we are aware of the

194
00:09:09,899 --> 00:09:12,120
location of the faults

195
00:09:12,120 --> 00:09:14,040
uh

196
00:09:14,040 --> 00:09:15,360
so

197
00:09:15,360 --> 00:09:17,459
with this introduction let me introduce

198
00:09:17,459 --> 00:09:21,120
our newborn work which remove

199
00:09:21,120 --> 00:09:25,339
uh almost all of these limitations

200
00:09:26,300 --> 00:09:29,279
quite simple let's represent the

201
00:09:29,279 --> 00:09:31,500
impossible values in the airplane Sparks

202
00:09:31,500 --> 00:09:34,019
by V when inject false you are actually

203
00:09:34,019 --> 00:09:36,480
excluding multiple values from the

204
00:09:36,480 --> 00:09:39,660
output of this box right in this attack

205
00:09:39,660 --> 00:09:42,600
so let's represent it with z

206
00:09:42,600 --> 00:09:44,459
and this represents the impossible

207
00:09:44,459 --> 00:09:46,140
values at the position of PSI vertex

208
00:09:46,140 --> 00:09:47,700
with d

209
00:09:47,700 --> 00:09:51,240
so if we do the attack might byte for

210
00:09:51,240 --> 00:09:53,339
example bi represents the

211
00:09:53,339 --> 00:09:55,800
impossible values in the eyes right of

212
00:09:55,800 --> 00:10:00,000
ciphertext and as an attacker you can uh

213
00:10:00,000 --> 00:10:03,720
retrieve or drive B very easy because

214
00:10:03,720 --> 00:10:06,120
you just observe the output side

215
00:10:06,120 --> 00:10:10,200
protects and drive the impossible values

216
00:10:10,200 --> 00:10:13,980
so another simple relation

217
00:10:13,980 --> 00:10:17,519
is the relation between B and V you can

218
00:10:17,519 --> 00:10:21,660
see that b is equal to V plus k i

219
00:10:21,660 --> 00:10:23,700
and

220
00:10:23,700 --> 00:10:26,160
require balance the V is equal to K zero

221
00:10:26,160 --> 00:10:28,800
for example plus d0 if you combine these

222
00:10:28,800 --> 00:10:32,160
two simple relations you have these uh

223
00:10:32,160 --> 00:10:35,040
relation which is the actuality help us

224
00:10:35,040 --> 00:10:36,720
to

225
00:10:36,720 --> 00:10:39,899
transform the difference between these

226
00:10:39,899 --> 00:10:43,200
sets to difference between Keys key

227
00:10:43,200 --> 00:10:44,220
bytes

228
00:10:44,220 --> 00:10:47,220
and as you can see Delta for example

229
00:10:47,220 --> 00:10:49,380
represents the difference between k0 and

230
00:10:49,380 --> 00:10:51,959
Ki Delta I represents the difference

231
00:10:51,959 --> 00:10:54,480
between k0 and Ki and at the same time

232
00:10:54,480 --> 00:10:56,640
Delta I is the difference between D 0

233
00:10:56,640 --> 00:10:59,160
and d i is in Factor you have access to

234
00:10:59,160 --> 00:11:02,160
d0 and Di you can efficiently Drive

235
00:11:02,160 --> 00:11:03,779
Delta I

236
00:11:03,779 --> 00:11:07,019
and then you transform this relation to

237
00:11:07,019 --> 00:11:10,320
the difference between key bytes

238
00:11:10,320 --> 00:11:12,120
for example

239
00:11:12,120 --> 00:11:16,560
by observing d0 and D1 you drive Delta

240
00:11:16,560 --> 00:11:18,899
one you have one linear relation between

241
00:11:18,899 --> 00:11:21,660
k0 and K1 you know the left hand side of

242
00:11:21,660 --> 00:11:24,300
this relation you can do the same for

243
00:11:24,300 --> 00:11:28,500
k0 and K2 so on so forth

244
00:11:28,500 --> 00:11:32,459
so you have 15 linear relations between

245
00:11:32,459 --> 00:11:36,180
these six 16 bytes of restaurant Key

246
00:11:36,180 --> 00:11:40,680
just guess k0 and uniquely determine the

247
00:11:40,680 --> 00:11:42,180
other bytes

248
00:11:42,180 --> 00:11:47,040
the size of k0 in Alias is one byte so

249
00:11:47,040 --> 00:11:49,680
just uh the entropy is just eight bit

250
00:11:49,680 --> 00:11:52,200
because uh there are only two to the

251
00:11:52,200 --> 00:11:54,360
eight possible cases for k0 and if you

252
00:11:54,360 --> 00:11:56,220
just k0 you can uniquely determine the

253
00:11:56,220 --> 00:11:59,820
other bytes right easy just compare it

254
00:11:59,820 --> 00:12:03,360
with the 2 to the 57 in the original PFA

255
00:12:03,360 --> 00:12:05,700
with a simple idea you can reduce the

256
00:12:05,700 --> 00:12:09,899
key space the entropy to eight bits

257
00:12:09,899 --> 00:12:11,700
but

258
00:12:11,700 --> 00:12:13,500
after all we have several candidates

259
00:12:13,500 --> 00:12:14,940
right

260
00:12:14,940 --> 00:12:17,940
we should be able to uniquely determine

261
00:12:17,940 --> 00:12:19,260
the master key

262
00:12:19,260 --> 00:12:22,200
another thing that I should mention is

263
00:12:22,200 --> 00:12:24,480
that as long as the last round key

264
00:12:24,480 --> 00:12:26,640
uniquely determines the master key we

265
00:12:26,640 --> 00:12:27,600
are happy

266
00:12:27,600 --> 00:12:30,600
it is the case for at least 128. if you

267
00:12:30,600 --> 00:12:31,980
determine the last ranking you can

268
00:12:31,980 --> 00:12:34,320
uniquely determine all the round Keys as

269
00:12:34,320 --> 00:12:36,720
well as the master key

270
00:12:36,720 --> 00:12:39,200
so

271
00:12:39,300 --> 00:12:41,519
we are left with multiple candidates and

272
00:12:41,519 --> 00:12:43,620
I want to introduce our general key

273
00:12:43,620 --> 00:12:45,680
recovery framework

274
00:12:45,680 --> 00:12:49,680
you always into the diffusion rounds

275
00:12:49,680 --> 00:12:52,740
and uniquely uh

276
00:12:52,740 --> 00:12:54,899
received the master key from these

277
00:12:54,899 --> 00:12:56,579
remaining candidates

278
00:12:56,579 --> 00:12:58,860
the idea of our generic key recovery

279
00:12:58,860 --> 00:13:02,000
framework is again very easy

280
00:13:02,000 --> 00:13:06,779
let me show you a simple notation uh for

281
00:13:06,779 --> 00:13:08,700
each key candidate

282
00:13:08,700 --> 00:13:11,399
we fix the key less the last one key and

283
00:13:11,399 --> 00:13:13,320
we drive the impossible values in the

284
00:13:13,320 --> 00:13:15,899
output of s marks which is represented

285
00:13:15,899 --> 00:13:19,800
by V okay or each key we have a

286
00:13:19,800 --> 00:13:21,600
corresponding UV

287
00:13:21,600 --> 00:13:24,540
then we go deeper into the decryption

288
00:13:24,540 --> 00:13:28,079
grounds to filter more around keys but

289
00:13:28,079 --> 00:13:30,120
the problem is that the spots defaultier

290
00:13:30,120 --> 00:13:32,760
swaps is not by objective

291
00:13:32,760 --> 00:13:34,920
that's not invertible we cannot see the

292
00:13:34,920 --> 00:13:37,200
encryption right it's cheating

293
00:13:37,200 --> 00:13:39,660
but so

294
00:13:39,660 --> 00:13:42,180
we do the cheating we use the current

295
00:13:42,180 --> 00:13:45,360
spots for decryption and we consider the

296
00:13:45,360 --> 00:13:47,459
ranky Assumption by run to assumption I

297
00:13:47,459 --> 00:13:49,320
mean if we assume that if you put the

298
00:13:49,320 --> 00:13:51,779
wrong key in our for example generic key

299
00:13:51,779 --> 00:13:54,000
recovery framework all of the

300
00:13:54,000 --> 00:13:56,760
intermediate values are uniformly random

301
00:13:56,760 --> 00:13:58,800
variables

302
00:13:58,800 --> 00:14:02,040
this should occurred briefly describes

303
00:14:02,040 --> 00:14:04,380
our key recovery Network it's quite easy

304
00:14:04,380 --> 00:14:07,680
for example for each key candidates

305
00:14:07,680 --> 00:14:11,220
we drive a visit then we initialize a

306
00:14:11,220 --> 00:14:13,019
counter for the corresponding key with

307
00:14:13,019 --> 00:14:14,040
zero

308
00:14:14,040 --> 00:14:16,380
and for each side protects that we have

309
00:14:16,380 --> 00:14:19,079
we start to do the decryption until the

310
00:14:19,079 --> 00:14:23,100
first round and check one thing

311
00:14:23,100 --> 00:14:27,779
we check the output of s-vox in each

312
00:14:27,779 --> 00:14:29,160
round

313
00:14:29,160 --> 00:14:30,740
and

314
00:14:30,740 --> 00:14:35,720
if even one of the outputs is in V

315
00:14:35,720 --> 00:14:38,820
we don't increase the counter

316
00:14:38,820 --> 00:14:41,579
and we try another side vertex otherwise

317
00:14:41,579 --> 00:14:43,680
we increase the counter because the

318
00:14:43,680 --> 00:14:45,660
corresponding key is likely the correct

319
00:14:45,660 --> 00:14:47,639
key

320
00:14:47,639 --> 00:14:49,500
probability of satisfying discarnation

321
00:14:49,500 --> 00:14:51,480
over equivalent probability of

322
00:14:51,480 --> 00:14:53,220
increasing the counter for the

323
00:14:53,220 --> 00:14:55,500
corresponding key

324
00:14:55,500 --> 00:14:59,220
can be uh drive very easy because uh you

325
00:14:59,220 --> 00:15:01,199
can see that it's uh equal to one minus

326
00:15:01,199 --> 00:15:03,540
the size of V over 256 to the power of

327
00:15:03,540 --> 00:15:06,720
16 because we are checking 16 cells or

328
00:15:06,720 --> 00:15:09,000
16 bytes in each round

329
00:15:09,000 --> 00:15:10,860
and we are just checking the membership

330
00:15:10,860 --> 00:15:13,320
in this way you can see that the

331
00:15:13,320 --> 00:15:16,320
probability of the 70s uh

332
00:15:16,320 --> 00:15:18,959
derived from this relation and Analysis

333
00:15:18,959 --> 00:15:21,300
this algorithm is quite simple

334
00:15:21,300 --> 00:15:23,459
let's see what is the expected value for

335
00:15:23,459 --> 00:15:25,740
the counter for a wrong key if you put

336
00:15:25,740 --> 00:15:27,420
the wrong key here

337
00:15:27,420 --> 00:15:30,120
the expected value for the counter is

338
00:15:30,120 --> 00:15:32,699
right from this formula because uh if

339
00:15:32,699 --> 00:15:34,500
you start with the proof of any faulty

340
00:15:34,500 --> 00:15:36,540
cyber okay so you can see that as the

341
00:15:36,540 --> 00:15:39,540
one run decryption you are left with e

342
00:15:39,540 --> 00:15:42,720
times n 40 PSI overtakes and again and

343
00:15:42,720 --> 00:15:45,860
again until the first round

344
00:15:45,860 --> 00:15:48,660
and the counter for the express value

345
00:15:48,660 --> 00:15:51,320
for the counter of price key

346
00:15:51,320 --> 00:15:55,079
can be calculated very easy again we

347
00:15:55,079 --> 00:15:56,579
increase the counter for the quality

348
00:15:56,579 --> 00:15:59,220
under two conditions the first condition

349
00:15:59,220 --> 00:16:02,660
which is represented in the green pass

350
00:16:02,660 --> 00:16:04,440
is that

351
00:16:04,440 --> 00:16:08,220
um none of the intermediate values is

352
00:16:08,220 --> 00:16:11,639
impacted or by default in this case the

353
00:16:11,639 --> 00:16:13,620
current test box that we use and the

354
00:16:13,620 --> 00:16:18,000
faultiest Box are the same right because

355
00:16:18,000 --> 00:16:19,860
um the intermediate values corresponding

356
00:16:19,860 --> 00:16:21,060
to the ciphertrase that you are

357
00:16:21,060 --> 00:16:23,399
decrypting is not affected by default

358
00:16:23,399 --> 00:16:25,380
and we can compute the quality of these

359
00:16:25,380 --> 00:16:27,660
events because it's quite easy because

360
00:16:27,660 --> 00:16:30,060
of the Simplicity of our generic care

361
00:16:30,060 --> 00:16:33,180
framework another condition that you

362
00:16:33,180 --> 00:16:35,160
underreach you increase the cancer

363
00:16:35,160 --> 00:16:36,660
productivity

364
00:16:36,660 --> 00:16:40,139
in that the intermediate values is

365
00:16:40,139 --> 00:16:43,740
infected by the poles but again it

366
00:16:43,740 --> 00:16:46,259
satisfy this condition it is possible

367
00:16:46,259 --> 00:16:49,199
right and we can compute its probability

368
00:16:49,199 --> 00:16:52,399
plenty that even one of the outs will

369
00:16:52,399 --> 00:16:56,360
rise in each round

370
00:16:56,360 --> 00:17:00,360
is infected by default is 1 minus p

371
00:17:00,360 --> 00:17:01,920
and the port you're satisfying this

372
00:17:01,920 --> 00:17:04,980
condition in line seven to nine is p

373
00:17:04,980 --> 00:17:07,439
and we can see that for example

374
00:17:07,439 --> 00:17:09,900
the probability of happening to the two

375
00:17:09,900 --> 00:17:12,839
the second second condition is one one

376
00:17:12,839 --> 00:17:15,599
minus P times p as all

377
00:17:15,599 --> 00:17:17,339
uh I don't want to go to the detail

378
00:17:17,339 --> 00:17:19,380
further I will just I would just make

379
00:17:19,380 --> 00:17:22,799
two mention that you see that there is a

380
00:17:22,799 --> 00:17:25,140
huge gap between the counter of the

381
00:17:25,140 --> 00:17:27,059
crate key and the counter of the wrong

382
00:17:27,059 --> 00:17:29,400
key and it gives you a powerful

383
00:17:29,400 --> 00:17:31,500
distinguisher to distinguish the correct

384
00:17:31,500 --> 00:17:34,080
key just let's see an example we

385
00:17:34,080 --> 00:17:36,539
experimentally verified our Frameworks

386
00:17:36,539 --> 00:17:39,419
our key recovery framework our our PSA

387
00:17:39,419 --> 00:17:40,620
framework

388
00:17:40,620 --> 00:17:43,140
if you have this attack on two

389
00:17:43,140 --> 00:17:45,480
implementations uh under a tiny

390
00:17:45,480 --> 00:17:47,220
implementation of AES tiny yes the

391
00:17:47,220 --> 00:17:48,660
so-called timing yes which is a simple

392
00:17:48,660 --> 00:17:51,539
round based implementation of abs and

393
00:17:51,539 --> 00:17:53,400
ld64

394
00:17:53,400 --> 00:17:55,559
interestingly we observe that having

395
00:17:55,559 --> 00:17:58,320
multiple balls is more likely than

396
00:17:58,320 --> 00:18:00,720
having single thoughts

397
00:18:00,720 --> 00:18:03,299
and when we have multiple spots for

398
00:18:03,299 --> 00:18:05,580
example in the case of AES having six

399
00:18:05,580 --> 00:18:08,340
faults is again more likely than having

400
00:18:08,340 --> 00:18:12,080
better number of faults

401
00:18:12,360 --> 00:18:15,419
in case of having six faults

402
00:18:15,419 --> 00:18:18,720
if we have for example 1526 40 cycle

403
00:18:18,720 --> 00:18:20,460
text

404
00:18:20,460 --> 00:18:24,179
we are left with only 256 key candidates

405
00:18:24,179 --> 00:18:27,240
after fault analysis and if we

406
00:18:27,240 --> 00:18:29,580
try to receive the master key with our

407
00:18:29,580 --> 00:18:33,320
general key framework

408
00:18:33,360 --> 00:18:35,580
you can see that the counter for the

409
00:18:35,580 --> 00:18:37,860
correct key is about is around six

410
00:18:37,860 --> 00:18:39,900
thousands and the counter of the rank is

411
00:18:39,900 --> 00:18:42,419
around three thousands we're going to be

412
00:18:42,419 --> 00:18:45,960
Computing it uh using uh simulation and

413
00:18:45,960 --> 00:18:48,360
using our theoretical formula and you

414
00:18:48,360 --> 00:18:51,059
see that that's uh they are almost the

415
00:18:51,059 --> 00:18:54,480
same particularly for the wrong key so

416
00:18:54,480 --> 00:18:56,820
detecting the correct key is quite easy

417
00:18:56,820 --> 00:18:58,919
because there is a huge gap between the

418
00:18:58,919 --> 00:19:01,500
counter of Frankie and the counter of

419
00:19:01,500 --> 00:19:03,059
correct key

420
00:19:03,059 --> 00:19:04,980
so we come to the end of this talk where

421
00:19:04,980 --> 00:19:06,360
I'm going to summarize our main

422
00:19:06,360 --> 00:19:08,700
contributions first of all we removed

423
00:19:08,700 --> 00:19:10,260
the Assumption of knowing default

424
00:19:10,260 --> 00:19:12,179
location it doesn't matter where the

425
00:19:12,179 --> 00:19:14,520
fault is injected you just apply the

426
00:19:14,520 --> 00:19:16,919
false and again it doesn't matter how

427
00:19:16,919 --> 00:19:18,900
many policies uh how many faults are

428
00:19:18,900 --> 00:19:21,240
injected you just observe the multicipal

429
00:19:21,240 --> 00:19:23,820
taste and determine the number of faults

430
00:19:23,820 --> 00:19:27,299
and then uh the rest of

431
00:19:27,299 --> 00:19:29,340
uh procedure

432
00:19:29,340 --> 00:19:32,400
another contribution is that our new

433
00:19:32,400 --> 00:19:34,080
technique decrease the number of key

434
00:19:34,080 --> 00:19:36,120
candidates in The Fault analysis

435
00:19:36,120 --> 00:19:39,120
significantly for example you saw that

436
00:19:39,120 --> 00:19:42,000
uh we reduce it from 2 to the 57 to the

437
00:19:42,000 --> 00:19:43,260
to the eight

438
00:19:43,260 --> 00:19:45,660
it's an improvement by factor of about 2

439
00:19:45,660 --> 00:19:48,179
to the 50 and we can do this I can a

440
00:19:48,179 --> 00:19:50,700
regular laptop in a few seconds we also

441
00:19:50,700 --> 00:19:52,640
exploited the fourth leakage

442
00:19:52,640 --> 00:19:55,380
uh in different deeper rounds of

443
00:19:55,380 --> 00:19:59,100
decryption not only in the last round

444
00:19:59,100 --> 00:20:01,799
we also if you refer to the to our paper

445
00:20:01,799 --> 00:20:04,200
and uh

446
00:20:04,200 --> 00:20:06,660
uh see the monitors you could see that

447
00:20:06,660 --> 00:20:09,419
uh our technique also reduce the number

448
00:20:09,419 --> 00:20:13,080
of required for this cyber text thanks

449
00:20:13,080 --> 00:20:15,600
for introduction and all of the source

450
00:20:15,600 --> 00:20:18,059
code of our simulations are available in

451
00:20:18,059 --> 00:20:19,679
this guitar Repository

452
00:20:19,679 --> 00:20:22,440
yeah I will be happy if you have any

453
00:20:22,440 --> 00:20:24,740
questions

454
00:20:30,600 --> 00:20:34,440
thank you so we have time for for short

455
00:20:34,440 --> 00:20:38,220
questions uh anyone

456
00:20:38,220 --> 00:20:42,080
yes Parish there

457
00:20:48,120 --> 00:20:50,120
um

458
00:20:50,810 --> 00:21:05,600
[Music]

459
00:21:05,600 --> 00:21:08,780
you mean

460
00:21:09,360 --> 00:21:10,559
um

461
00:21:10,559 --> 00:21:12,720
for example you see that there are

462
00:21:12,720 --> 00:21:14,280
counter values derived from the

463
00:21:14,280 --> 00:21:16,559
simulations for one key for example is

464
00:21:16,559 --> 00:21:19,559
37197

465
00:21:19,620 --> 00:21:22,140
and the

466
00:21:22,140 --> 00:21:23,880
uh

467
00:21:23,880 --> 00:21:25,740
counter value from our theoretical

468
00:21:25,740 --> 00:21:29,100
formula is 3717 but as long as you can

469
00:21:29,100 --> 00:21:31,500
do the simulations because uh it's quite

470
00:21:31,500 --> 00:21:33,900
easy you even go through a theoretical

471
00:21:33,900 --> 00:21:35,940
formula because you have a huge gap

472
00:21:35,940 --> 00:21:38,760
between the counter of karate and the

473
00:21:38,760 --> 00:21:40,260
wrong key and you can uniquely determine

474
00:21:40,260 --> 00:21:42,720
the correct key imagine that so you have

475
00:21:42,720 --> 00:21:45,360
left with 256 candidates right you just

476
00:21:45,360 --> 00:21:48,000
put these 256 candidates into the Q

477
00:21:48,000 --> 00:21:50,280
recovery framework and try them one by

478
00:21:50,280 --> 00:21:55,320
one and and uh compute the counters

479
00:21:55,320 --> 00:21:58,320
foreign

480
00:22:20,360 --> 00:22:24,559
cyber texts from for example

481
00:22:24,559 --> 00:22:30,320
uh the implementation and then uh

482
00:22:31,340 --> 00:22:34,140
you can see that by just analyzing the

483
00:22:34,140 --> 00:22:35,640
sniperton so you can drive the

484
00:22:35,640 --> 00:22:37,200
impressive values at the position of

485
00:22:37,200 --> 00:22:40,140
cybertex and then you can drive the

486
00:22:40,140 --> 00:22:42,179
difference between the impossible sets

487
00:22:42,179 --> 00:22:45,559
and so on so forth

488
00:22:50,760 --> 00:22:53,059
sorry

489
00:22:59,580 --> 00:23:04,260
in uh in in the original PFA as you can

490
00:23:04,260 --> 00:23:08,280
see in this slide or in BF yeah you

491
00:23:08,280 --> 00:23:11,100
require less for this advertise

492
00:23:11,100 --> 00:23:13,440
but it's uh in the original in the

493
00:23:13,440 --> 00:23:16,679
original force model of PFA which was

494
00:23:16,679 --> 00:23:19,020
introduced in 2018

495
00:23:19,020 --> 00:23:21,480
just let me switch to the test line yeah

496
00:23:21,480 --> 00:23:23,039
it is assumed that we have access to

497
00:23:23,039 --> 00:23:24,600
multiple cyber attacks something around

498
00:23:24,600 --> 00:23:27,000
2000s

499
00:23:27,000 --> 00:23:29,220
yeah it's the fault model you require

500
00:23:29,220 --> 00:23:31,559
multiple cyber tests compared to your

501
00:23:31,559 --> 00:23:33,720
DFA

502
00:23:33,720 --> 00:23:35,640
I hope I answered your question I'm not

503
00:23:35,640 --> 00:23:37,080
sure

504
00:23:37,080 --> 00:23:39,299
thanks for your question

505
00:23:39,299 --> 00:23:42,240
very short question from the uh from

506
00:23:42,240 --> 00:23:46,080
chat did you test on Mouse data no it's

507
00:23:46,080 --> 00:23:48,720
just implementation on a simple round

508
00:23:48,720 --> 00:23:52,700
base of areas okay thank you thank you

509
00:23:52,700 --> 00:23:55,679
let's do this offline because we are

510
00:23:55,679 --> 00:23:58,100
already late

511
00:24:13,919 --> 00:24:17,039
okay so let's just see the time now all

512
00:24:17,039 --> 00:24:19,158
right

513
00:24:20,760 --> 00:24:23,480
thank you

514
00:24:26,700 --> 00:24:28,400
okay

515
00:24:28,400 --> 00:24:31,620
second thought is beware of insufficient

516
00:24:31,620 --> 00:24:33,780
redundancy experimental evaluation of

517
00:24:33,780 --> 00:24:35,100
code-based fault injection

518
00:24:35,100 --> 00:24:38,280
countermeasures and the speaker is Sven

519
00:24:38,280 --> 00:24:40,919
Bettendorf if hello everyone my name is

520
00:24:40,919 --> 00:24:43,320
Sven and thank you for introduction

521
00:24:43,320 --> 00:24:46,500
and I'm I'm going to present the work be

522
00:24:46,500 --> 00:24:49,140
aware of insufficient redundancy and

523
00:24:49,140 --> 00:24:51,059
this was the collaboration work with uh

524
00:24:51,059 --> 00:24:54,960
Timo Tom Falk and myself

525
00:24:54,960 --> 00:24:57,000
um so let's get started so

526
00:24:57,000 --> 00:24:57,780
um

527
00:24:57,780 --> 00:25:00,900
four injections are a crucial three

528
00:25:00,900 --> 00:25:02,460
threat to

529
00:25:02,460 --> 00:25:03,480
um

530
00:25:03,480 --> 00:25:08,820
to uh to to something sorry because of

531
00:25:08,820 --> 00:25:11,520
the riding amount of internet of things

532
00:25:11,520 --> 00:25:12,600
devices

533
00:25:12,600 --> 00:25:13,799
um

534
00:25:13,799 --> 00:25:17,240
uh sorry

535
00:25:17,340 --> 00:25:20,039
so let me start again so because of the

536
00:25:20,039 --> 00:25:21,960
increasing amount of internet

537
00:25:21,960 --> 00:25:22,559
um

538
00:25:22,559 --> 00:25:25,200
in Little Things devices the forward

539
00:25:25,200 --> 00:25:27,720
ejection is a serious threat because the

540
00:25:27,720 --> 00:25:30,120
access to um cheap but security relevant

541
00:25:30,120 --> 00:25:31,860
Hardware is increasing

542
00:25:31,860 --> 00:25:34,620
and um right now there are different

543
00:25:34,620 --> 00:25:37,200
attacks already published like

544
00:25:37,200 --> 00:25:39,240
differential fault analysis or statistic

545
00:25:39,240 --> 00:25:41,520
fault analysis

546
00:25:41,520 --> 00:25:43,799
and right now the common counter mirrors

547
00:25:43,799 --> 00:25:47,220
are sensors and some kind of duplication

548
00:25:47,220 --> 00:25:49,460
so nothing too special

549
00:25:49,460 --> 00:25:52,740
next up we looked at the at the newer

550
00:25:52,740 --> 00:25:54,539
counter measure it's called impeccable

551
00:25:54,539 --> 00:25:57,059
circuits and this is based on error

552
00:25:57,059 --> 00:25:59,520
detection codes

553
00:25:59,520 --> 00:26:02,340
um and this is um this is offering um

554
00:26:02,340 --> 00:26:03,659
protection against different fault

555
00:26:03,659 --> 00:26:05,400
analysis

556
00:26:05,400 --> 00:26:07,320
and during our work they are published

557
00:26:07,320 --> 00:26:10,080
in add-on to their work and where they

558
00:26:10,080 --> 00:26:12,659
also claim security against

559
00:26:12,659 --> 00:26:14,100
um sci-fi

560
00:26:14,100 --> 00:26:17,159
so this is based on um concurrent error

561
00:26:17,159 --> 00:26:18,360
detection

562
00:26:18,360 --> 00:26:21,480
this means every um for this recognized

563
00:26:21,480 --> 00:26:24,059
on the Fly and the special part about it

564
00:26:24,059 --> 00:26:27,179
is that default propagation is also

565
00:26:27,179 --> 00:26:29,880
also taken into account when building

566
00:26:29,880 --> 00:26:32,779
the countermeasures

567
00:26:32,880 --> 00:26:34,919
um and as always the security on the

568
00:26:34,919 --> 00:26:36,480
countermeasure is relying on the

569
00:26:36,480 --> 00:26:40,260
underlying advisory model

570
00:26:40,260 --> 00:26:41,640
um and as stated in the paper it

571
00:26:41,640 --> 00:26:43,440
guarantees the detection of any fault in

572
00:26:43,440 --> 00:26:44,520
the circuit

573
00:26:44,520 --> 00:26:47,159
if it's covered by the EDC so our

574
00:26:47,159 --> 00:26:49,559
question was how hard it is to overcome

575
00:26:49,559 --> 00:26:51,480
these assumptions

576
00:26:51,480 --> 00:26:54,059
and to introduce faults a bit early to

577
00:26:54,059 --> 00:26:56,880
an faulty output

578
00:26:56,880 --> 00:26:58,980
so in the in the paper they introduced

579
00:26:58,980 --> 00:27:00,840
three different variants and the red one

580
00:27:00,840 --> 00:27:03,600
red three and red four

581
00:27:03,600 --> 00:27:05,400
um and the red one is like a simple

582
00:27:05,400 --> 00:27:08,220
parity bit those is a one bit security

583
00:27:08,220 --> 00:27:10,919
dependable and this guarantees every

584
00:27:10,919 --> 00:27:13,980
that every one bit fault is detected the

585
00:27:13,980 --> 00:27:15,960
red 3 variant is the hemming code this

586
00:27:15,960 --> 00:27:18,179
is a three bit redundancy pendable and

587
00:27:18,179 --> 00:27:21,059
the red Force the extended Heming code

588
00:27:21,059 --> 00:27:23,460
so the the best one is the red 4 variant

589
00:27:23,460 --> 00:27:24,900
we're guaranteed

590
00:27:24,900 --> 00:27:28,020
that every three bit fold is detected

591
00:27:28,020 --> 00:27:29,700
and they also

592
00:27:29,700 --> 00:27:31,380
um added an add-on that is the

593
00:27:31,380 --> 00:27:34,080
multivariate adversary model

594
00:27:34,080 --> 00:27:37,559
um in this model every fourth so there

595
00:27:37,559 --> 00:27:40,140
are this is possible that they inject

596
00:27:40,140 --> 00:27:42,419
false at multiple clock Cycles so and

597
00:27:42,419 --> 00:27:44,520
without the multivariate

598
00:27:44,520 --> 00:27:47,460
and only one for injection at one

599
00:27:47,460 --> 00:27:49,440
special clock cyclist possible and with

600
00:27:49,440 --> 00:27:51,840
the multivariate model

601
00:27:51,840 --> 00:27:54,299
um there is every fault at every

602
00:27:54,299 --> 00:27:56,640
possible clock cycle is detected so in

603
00:27:56,640 --> 00:27:58,980
the example of red four

604
00:27:58,980 --> 00:28:01,799
um three bit faults are detected even if

605
00:28:01,799 --> 00:28:03,960
you hit on two different

606
00:28:03,960 --> 00:28:06,960
clock circuits so now a little overview

607
00:28:06,960 --> 00:28:08,700
was a schematic

608
00:28:08,700 --> 00:28:10,559
um here is the schematic for the red one

609
00:28:10,559 --> 00:28:12,179
and red 3 variant

610
00:28:12,179 --> 00:28:15,179
we are running on the left side is the

611
00:28:15,179 --> 00:28:15,960
normal

612
00:28:15,960 --> 00:28:18,360
um skinny algorithm so we used skinny in

613
00:28:18,360 --> 00:28:21,419
in our experiment and on the right side

614
00:28:21,419 --> 00:28:24,600
there is the the Redundant part

615
00:28:24,600 --> 00:28:27,600
and the s-box error not the Xbox the

616
00:28:27,600 --> 00:28:31,400
function s on top is transforming the 64

617
00:28:31,400 --> 00:28:35,820
input into the to the code domain

618
00:28:35,820 --> 00:28:37,880
and for the red one this would be 16 bit

619
00:28:37,880 --> 00:28:40,980
and for a red threes this would be 48

620
00:28:40,980 --> 00:28:41,940
bit

621
00:28:41,940 --> 00:28:43,559
and as you can see

622
00:28:43,559 --> 00:28:44,220
um

623
00:28:44,220 --> 00:28:46,440
there is a checkpoint um in every round

624
00:28:46,440 --> 00:28:51,360
of the before applying the the subsets

625
00:28:51,360 --> 00:28:53,880
um but because the sub cells is not

626
00:28:53,880 --> 00:28:55,740
possible on the code itself there needs

627
00:28:55,740 --> 00:28:58,740
to be a data transfer a transfer just

628
00:28:58,740 --> 00:29:01,679
before applying the Xbox so here on the

629
00:29:01,679 --> 00:29:03,840
red line you can see the data is

630
00:29:03,840 --> 00:29:06,480
transferred from the skinny algorithm to

631
00:29:06,480 --> 00:29:09,320
the Redundant part

632
00:29:09,539 --> 00:29:11,100
um and next up we have the red four

633
00:29:11,100 --> 00:29:13,559
variant there we have no transfer

634
00:29:13,559 --> 00:29:16,200
between the um

635
00:29:16,200 --> 00:29:18,179
between the skinny algorithm and the

636
00:29:18,179 --> 00:29:20,340
Redundant part

637
00:29:20,340 --> 00:29:22,559
and this would be similar to the normal

638
00:29:22,559 --> 00:29:24,419
duplication

639
00:29:24,419 --> 00:29:27,419
um but here the S function is again

640
00:29:27,419 --> 00:29:29,340
transforming the input into the code

641
00:29:29,340 --> 00:29:32,460
domain um and for the normal duplication

642
00:29:32,460 --> 00:29:34,140
there wouldn't be a need for a function

643
00:29:34,140 --> 00:29:35,760
it would be just the same on the left

644
00:29:35,760 --> 00:29:37,380
the same input on the left and on the

645
00:29:37,380 --> 00:29:38,580
right side

646
00:29:38,580 --> 00:29:42,419
so a little short overview about the um

647
00:29:42,419 --> 00:29:44,940
implementation details

648
00:29:44,940 --> 00:29:46,880
and of course the unprotected version

649
00:29:46,880 --> 00:29:50,399
uses the least amount of area

650
00:29:50,399 --> 00:29:53,880
and it's the fastest and the low the

651
00:29:53,880 --> 00:29:55,799
lowest power consumption

652
00:29:55,799 --> 00:29:58,380
um but is also offering the lowest

653
00:29:58,380 --> 00:30:00,899
amount of security and then we have the

654
00:30:00,899 --> 00:30:04,080
duplication with um

655
00:30:04,080 --> 00:30:05,880
a little bit more area and then we have

656
00:30:05,880 --> 00:30:07,919
the different red variants and as you

657
00:30:07,919 --> 00:30:10,260
can see the red variants without the

658
00:30:10,260 --> 00:30:12,480
multivariate are

659
00:30:12,480 --> 00:30:15,120
um faster than the duplication

660
00:30:15,120 --> 00:30:17,760
and everything above red one is taking

661
00:30:17,760 --> 00:30:20,340
more space in the duplication

662
00:30:20,340 --> 00:30:24,419
so um with uh with this in mind we try

663
00:30:24,419 --> 00:30:26,279
to to answer the question are the

664
00:30:26,279 --> 00:30:29,520
assumptions reasonable so are they even

665
00:30:29,520 --> 00:30:31,860
as secure as they think they are

666
00:30:31,860 --> 00:30:33,840
so what we did we did an experimental

667
00:30:33,840 --> 00:30:35,220
proof of the

668
00:30:35,220 --> 00:30:36,179
um

669
00:30:36,179 --> 00:30:38,399
of the assumptions and we did it within

670
00:30:38,399 --> 00:30:41,100
laser fault injection from the back side

671
00:30:41,100 --> 00:30:43,440
and we got the

672
00:30:43,440 --> 00:30:45,600
um the countermeasures taped on on an

673
00:30:45,600 --> 00:30:48,000
Asic with a 40 nanometer low power CMOS

674
00:30:48,000 --> 00:30:49,020
technology

675
00:30:49,020 --> 00:30:52,080
and we used a neodyag laser and two

676
00:30:52,080 --> 00:30:53,700
different spot sizes so these are quite

677
00:30:53,700 --> 00:30:56,460
large it's 5.6 micrometers and 28

678
00:30:56,460 --> 00:30:58,799
micrometers and all the counter measures

679
00:30:58,799 --> 00:31:00,600
are based on the detect and suppress

680
00:31:00,600 --> 00:31:02,700
principle that means that if they detect

681
00:31:02,700 --> 00:31:05,760
the fault the output is muted and we

682
00:31:05,760 --> 00:31:08,640
only receive zeros so we never receive a

683
00:31:08,640 --> 00:31:11,399
40 Cipher text if the fault is detected

684
00:31:11,399 --> 00:31:14,340
so what we did we first opened up the

685
00:31:14,340 --> 00:31:18,120
the Asic from the back side so we

686
00:31:18,120 --> 00:31:20,340
Digger Holland and managed to reach the

687
00:31:20,340 --> 00:31:22,140
back side of the ship and then we

688
00:31:22,140 --> 00:31:24,960
thinned the Silicon so we have um

689
00:31:24,960 --> 00:31:27,120
better result at the end because we can

690
00:31:27,120 --> 00:31:30,539
better focus on the on the um

691
00:31:30,539 --> 00:31:34,140
on the on the course and then we

692
00:31:34,140 --> 00:31:35,940
polished the A6 so we have no

693
00:31:35,940 --> 00:31:37,980
Reflections so this will offer better

694
00:31:37,980 --> 00:31:39,179
results

695
00:31:39,179 --> 00:31:41,880
and last but not least we then um

696
00:31:41,880 --> 00:31:45,179
we did the laser attack so on the left

697
00:31:45,179 --> 00:31:47,940
corner you see a layout of um on the

698
00:31:47,940 --> 00:31:49,799
left from the designer so there they

699
00:31:49,799 --> 00:31:51,840
marked as the um

700
00:31:51,840 --> 00:31:53,520
the position of in this case the

701
00:31:53,520 --> 00:31:55,679
duplication core and on the right

702
00:31:55,679 --> 00:31:57,539
you'll see our results from the from

703
00:31:57,539 --> 00:32:00,240
from the laser test so as you can see we

704
00:32:00,240 --> 00:32:03,120
have um the areas are kinda identical so

705
00:32:03,120 --> 00:32:04,140
we

706
00:32:04,140 --> 00:32:06,059
so we um

707
00:32:06,059 --> 00:32:07,799
so we see we we are on the right track

708
00:32:07,799 --> 00:32:09,840
so we actually focus on the era that

709
00:32:09,840 --> 00:32:11,399
matched the layout

710
00:32:11,399 --> 00:32:14,220
so next up are the results

711
00:32:14,220 --> 00:32:15,899
um and what we managed to do with the

712
00:32:15,899 --> 00:32:17,760
unprotected implementation as expected

713
00:32:17,760 --> 00:32:19,620
we managed to fold

714
00:32:19,620 --> 00:32:21,899
um the calculation in about 60 of our

715
00:32:21,899 --> 00:32:23,279
items

716
00:32:23,279 --> 00:32:27,419
so um we receive faulty outputs and with

717
00:32:27,419 --> 00:32:29,880
defaulty outputs we can then calculate

718
00:32:29,880 --> 00:32:31,860
uh the key with the with the

719
00:32:31,860 --> 00:32:34,080
differential fault analysis and for the

720
00:32:34,080 --> 00:32:35,520
duplication

721
00:32:35,520 --> 00:32:37,860
also as expected

722
00:32:37,860 --> 00:32:40,260
we did not receive any faulty ciphertext

723
00:32:40,260 --> 00:32:42,419
so every fault we injected was detected

724
00:32:42,419 --> 00:32:44,460
and the output was suppressed so there

725
00:32:44,460 --> 00:32:47,460
we were not able to calculate the um

726
00:32:47,460 --> 00:32:49,440
used key

727
00:32:49,440 --> 00:32:52,919
then next the red versions for the red

728
00:32:52,919 --> 00:32:53,940
one

729
00:32:53,940 --> 00:32:55,740
we managed to inject faults and one

730
00:32:55,740 --> 00:32:57,360
percent of the a little bit less than

731
00:32:57,360 --> 00:32:59,100
one percent of the attempts

732
00:32:59,100 --> 00:33:01,080
and we managed to

733
00:33:01,080 --> 00:33:04,500
um also calculate the key and for the

734
00:33:04,500 --> 00:33:06,659
red three variant we

735
00:33:06,659 --> 00:33:09,840
we have a long percentage of successful

736
00:33:09,840 --> 00:33:12,720
attempts but also enough for a

737
00:33:12,720 --> 00:33:14,640
successful DFA

738
00:33:14,640 --> 00:33:17,880
and only for the red 4 variant

739
00:33:17,880 --> 00:33:20,100
we did not receive any faulty Cipher

740
00:33:20,100 --> 00:33:21,240
texts

741
00:33:21,240 --> 00:33:22,740
um these are

742
00:33:22,740 --> 00:33:23,279
um

743
00:33:23,279 --> 00:33:26,159
these results are for the normal

744
00:33:26,159 --> 00:33:29,700
versions and the multivariate versions

745
00:33:29,700 --> 00:33:31,559
so overall we can say that we

746
00:33:31,559 --> 00:33:34,140
successfully faulted the red one with

747
00:33:34,140 --> 00:33:36,019
and read three versions

748
00:33:36,019 --> 00:33:39,200
we expect or we know that we

749
00:33:39,200 --> 00:33:41,940
implement we injected more faults and

750
00:33:41,940 --> 00:33:46,500
these ECC is covering so um

751
00:33:46,500 --> 00:33:49,440
we can say that the Assumption um

752
00:33:49,440 --> 00:33:51,419
with a little bit less than the full

753
00:33:51,419 --> 00:33:55,019
redundancy is not sufficient because in

754
00:33:55,019 --> 00:33:57,840
Practical experiments we inject more

755
00:33:57,840 --> 00:33:59,880
faults than than

756
00:33:59,880 --> 00:34:01,980
um expected

757
00:34:01,980 --> 00:34:04,380
so is the duplication sufficient to

758
00:34:04,380 --> 00:34:05,159
cover

759
00:34:05,159 --> 00:34:07,080
um attacks

760
00:34:07,080 --> 00:34:07,740
um

761
00:34:07,740 --> 00:34:09,719
I just they know because

762
00:34:09,719 --> 00:34:11,940
um of the adversary model and there are

763
00:34:11,940 --> 00:34:13,980
different already published attacks that

764
00:34:13,980 --> 00:34:15,659
are possible for example the simplest

765
00:34:15,659 --> 00:34:16,980
one would be a double laser injection

766
00:34:16,980 --> 00:34:19,440
where you hit the Bose course with the

767
00:34:19,440 --> 00:34:20,580
same fault and you receive the

768
00:34:20,580 --> 00:34:22,139
ciphertext

769
00:34:22,139 --> 00:34:25,679
or one of the um most famous attacks in

770
00:34:25,679 --> 00:34:27,659
the last year where the statistical

771
00:34:27,659 --> 00:34:29,639
ineffective heart attacks that would

772
00:34:29,639 --> 00:34:32,040
break any um

773
00:34:32,040 --> 00:34:35,159
detect and suppress principle so this is

774
00:34:35,159 --> 00:34:39,239
also what we what we did so we um

775
00:34:39,239 --> 00:34:41,940
We performed the Sci-Fi a CFA attack on

776
00:34:41,940 --> 00:34:45,599
the duplication part for the parameter

777
00:34:45,599 --> 00:34:48,000
optimization we use the unprotected

778
00:34:48,000 --> 00:34:50,040
version so we managed to

779
00:34:50,040 --> 00:34:50,699
um

780
00:34:50,699 --> 00:34:54,119
to optimize the the use delay for the

781
00:34:54,119 --> 00:34:56,159
laser and the energy so there we could

782
00:34:56,159 --> 00:35:00,420
then only step over the whole area and

783
00:35:00,420 --> 00:35:02,220
look for a spot where the ship answered

784
00:35:02,220 --> 00:35:03,720
in half the times correct and half the

785
00:35:03,720 --> 00:35:06,359
times incorrect so we kind of have a I

786
00:35:06,359 --> 00:35:08,880
have a bias in the in the cipher text

787
00:35:08,880 --> 00:35:12,359
and the correct keynibal was the um what

788
00:35:12,359 --> 00:35:15,599
the what the um three so our c for

789
00:35:15,599 --> 00:35:17,460
analysis also showed that

790
00:35:17,460 --> 00:35:19,440
um three was the correct by it so we had

791
00:35:19,440 --> 00:35:21,480
a success attacking the first key nibble

792
00:35:21,480 --> 00:35:24,060
with sci-fi

793
00:35:24,060 --> 00:35:27,780
so next is the conclusion

794
00:35:27,780 --> 00:35:29,940
um what we can say is that one bit and

795
00:35:29,940 --> 00:35:31,980
one in three bit redundancy is not

796
00:35:31,980 --> 00:35:33,900
enough Dependable because

797
00:35:33,900 --> 00:35:34,980
um

798
00:35:34,980 --> 00:35:37,440
in the real world experiment we always

799
00:35:37,440 --> 00:35:40,740
inject more folds than less faults so

800
00:35:40,740 --> 00:35:42,540
it's much easier to inject

801
00:35:42,540 --> 00:35:46,440
um ultimate folder than single Folds

802
00:35:46,440 --> 00:35:49,980
and the simple redundancy offered more

803
00:35:49,980 --> 00:35:52,260
or better results or more security than

804
00:35:52,260 --> 00:35:55,520
the simple duplication

805
00:35:55,560 --> 00:35:56,339
um

806
00:35:56,339 --> 00:35:59,400
right so this one the the that are

807
00:35:59,400 --> 00:36:00,839
showed again at the beginning of the

808
00:36:00,839 --> 00:36:02,040
schematics

809
00:36:02,040 --> 00:36:04,440
is not correct it's not good because

810
00:36:04,440 --> 00:36:06,960
here the transfer is not sufficient to

811
00:36:06,960 --> 00:36:09,599
cover all the security requirements for

812
00:36:09,599 --> 00:36:11,040
a reward attack

813
00:36:11,040 --> 00:36:12,780
and last but not least

814
00:36:12,780 --> 00:36:13,680
um

815
00:36:13,680 --> 00:36:16,260
the the assumptions from the paper were

816
00:36:16,260 --> 00:36:18,119
only realistic for the red fever red

817
00:36:18,119 --> 00:36:19,320
four variant

818
00:36:19,320 --> 00:36:21,060
um and this is also offered more

819
00:36:21,060 --> 00:36:22,740
security than a simple redundancy

820
00:36:22,740 --> 00:36:25,200
because like I already mentioned the

821
00:36:25,200 --> 00:36:27,240
double laser attack

822
00:36:27,240 --> 00:36:28,920
um would be

823
00:36:28,920 --> 00:36:30,599
um easier on the novel duplication

824
00:36:30,599 --> 00:36:32,520
because you have inject you you need to

825
00:36:32,520 --> 00:36:34,440
inject the same fault on both um

826
00:36:34,440 --> 00:36:36,540
variants on the normal skinny algorithm

827
00:36:36,540 --> 00:36:40,200
and the Redundant part and for the red 4

828
00:36:40,200 --> 00:36:41,579
you need to inject different faults

829
00:36:41,579 --> 00:36:43,079
because the code is

830
00:36:43,079 --> 00:36:43,740
um

831
00:36:43,740 --> 00:36:45,660
the court needs another fault than the

832
00:36:45,660 --> 00:36:47,460
the original

833
00:36:47,460 --> 00:36:48,720
um algorithm

834
00:36:48,720 --> 00:36:51,480
I'm also um the red Forest offering this

835
00:36:51,480 --> 00:36:53,820
a little bit more security but um of

836
00:36:53,820 --> 00:36:57,000
course is way more expensive in the area

837
00:36:57,000 --> 00:36:58,980
um so what I would like you to to take

838
00:36:58,980 --> 00:37:02,760
away from this presentation is that

839
00:37:02,760 --> 00:37:04,440
um the importance of verify for

840
00:37:04,440 --> 00:37:07,500
verifying the Assumption hypothesis

841
00:37:07,500 --> 00:37:10,320
um are very important to

842
00:37:10,320 --> 00:37:12,720
to verify in the real world scenario

843
00:37:12,720 --> 00:37:13,740
because

844
00:37:13,740 --> 00:37:14,460
um

845
00:37:14,460 --> 00:37:16,520
a lot of

846
00:37:16,520 --> 00:37:20,339
security proofs are only theoretically

847
00:37:20,339 --> 00:37:23,040
and then can be broken in a real world

848
00:37:23,040 --> 00:37:24,420
experiment

849
00:37:24,420 --> 00:37:26,099
so thank you very much for your

850
00:37:26,099 --> 00:37:27,480
attention and if you have any questions

851
00:37:27,480 --> 00:37:30,800
I'm welcome to answer them

852
00:37:39,859 --> 00:37:42,900
a lot of time for questions

853
00:37:42,900 --> 00:37:44,160
so

854
00:37:44,160 --> 00:37:46,819
yes

855
00:37:55,079 --> 00:37:57,800
hello

856
00:38:10,200 --> 00:38:13,700
sorry I don't get it

857
00:38:15,240 --> 00:38:17,240
yes

858
00:38:17,240 --> 00:38:19,920
thank you

859
00:38:19,920 --> 00:38:22,020
we use two different sites one time the

860
00:38:22,020 --> 00:38:24,660
5.6 micrometers on the other side the 28

861
00:38:24,660 --> 00:38:27,060
micrometers so in the overview you see

862
00:38:27,060 --> 00:38:31,220
the results for both laser spot sizes

863
00:38:33,300 --> 00:38:36,960
larger ones or smaller ones um we did

864
00:38:36,960 --> 00:38:38,700
not try because

865
00:38:38,700 --> 00:38:41,579
um we already had success and we we met

866
00:38:41,579 --> 00:38:44,160
we so we tried one smaller size

867
00:38:44,160 --> 00:38:46,380
um where the results are similar so we

868
00:38:46,380 --> 00:38:48,300
just stick with them but probably with

869
00:38:48,300 --> 00:38:50,220
the larger spot size we we would inject

870
00:38:50,220 --> 00:38:51,720
even more faults

871
00:38:51,720 --> 00:38:54,259
because

872
00:38:56,820 --> 00:38:59,359
yes

873
00:39:00,839 --> 00:39:03,540
yeah but it's four point penables so we

874
00:39:03,540 --> 00:39:05,880
have to to fold multiple of four so four

875
00:39:05,880 --> 00:39:08,400
eight as well every bit in between will

876
00:39:08,400 --> 00:39:10,940
be detected

877
00:39:11,099 --> 00:39:13,579
thanks

878
00:39:13,960 --> 00:39:17,329
[Music]

879
00:39:25,200 --> 00:39:29,180
sorry the first part I didn't get uh

880
00:39:35,180 --> 00:39:38,419
per cost

881
00:39:41,520 --> 00:39:43,520
um

882
00:39:47,280 --> 00:39:49,260
probably is because with smaller

883
00:39:49,260 --> 00:39:51,540
technology we hit more parts so we flip

884
00:39:51,540 --> 00:39:54,800
more bits so probably yes

885
00:39:56,099 --> 00:39:57,960
here

886
00:39:57,960 --> 00:39:59,880
hello

887
00:39:59,880 --> 00:40:00,940
um

888
00:40:00,940 --> 00:40:07,769
[Music]

889
00:40:11,640 --> 00:40:15,570
our children in the foreign

890
00:40:15,570 --> 00:40:18,659
[Music]

891
00:40:27,980 --> 00:40:31,019
[Music]

892
00:40:36,440 --> 00:40:39,060
gets smaller we have the same results so

893
00:40:39,060 --> 00:40:40,560
we just go down with the spot size and

894
00:40:40,560 --> 00:40:43,560
hit the same amount of of Gates Again

895
00:40:43,560 --> 00:40:46,040
three

896
00:40:46,040 --> 00:40:51,619
more questions audience in person

897
00:40:52,020 --> 00:40:56,400
online I see nothing okay let's thank

898
00:40:56,400 --> 00:40:59,119
the speaker again

899
00:41:19,740 --> 00:41:22,619
Okay the third speaker of the session is

900
00:41:22,619 --> 00:41:25,440
here on delwa he will present work

901
00:41:25,440 --> 00:41:27,420
called roulette diverse family of

902
00:41:27,420 --> 00:41:31,380
feasible fault attacks on musk Kuiper we

903
00:41:31,380 --> 00:41:33,800
will start

904
00:41:35,099 --> 00:41:37,099
um

905
00:41:41,180 --> 00:41:44,600
[Music]

906
00:41:46,880 --> 00:41:50,130
[Music]

907
00:41:59,060 --> 00:42:02,339
thank you for the introduction our

908
00:42:02,339 --> 00:42:06,020
Target is Skype

909
00:42:07,360 --> 00:42:10,449
[Music]

910
00:42:18,240 --> 00:42:21,020
thank you

911
00:42:21,500 --> 00:42:23,460
which is a post content security

912
00:42:23,460 --> 00:42:25,680
encapsulation mechanism

913
00:42:25,680 --> 00:42:27,780
based on the learning with errors

914
00:42:27,780 --> 00:42:30,359
problem and which will be standardized

915
00:42:30,359 --> 00:42:32,220
by nist

916
00:42:32,220 --> 00:42:35,220
the goal is to transfer a symmetric key

917
00:42:35,220 --> 00:42:37,140
between two parties using asymmetric

918
00:42:37,140 --> 00:42:40,560
crypto the party on the left performs

919
00:42:40,560 --> 00:42:42,240
the encapsulation

920
00:42:42,240 --> 00:42:45,680
and will generate a random message

921
00:42:45,680 --> 00:42:49,020
that using a kdf is transformed into a

922
00:42:49,020 --> 00:42:51,480
symmetric key this message is also

923
00:42:51,480 --> 00:42:53,760
encrypted into a ciphertext using the

924
00:42:53,760 --> 00:42:55,500
public key and sent to the second party

925
00:42:55,500 --> 00:42:57,119
on the right

926
00:42:57,119 --> 00:43:00,560
and which performs the decapsulation

927
00:43:00,560 --> 00:43:03,480
by decrypting the message using the

928
00:43:03,480 --> 00:43:06,359
private key and then from the recovered

929
00:43:06,359 --> 00:43:08,099
message you can again derive the

930
00:43:08,099 --> 00:43:10,440
symmetric key using the kdf

931
00:43:10,440 --> 00:43:13,800
uh however to resist chosen ciphertext

932
00:43:13,800 --> 00:43:15,900
attacks some additional logic is needed

933
00:43:15,900 --> 00:43:18,540
in particular the recovered message

934
00:43:18,540 --> 00:43:21,119
needs to be re-encrypted and the

935
00:43:21,119 --> 00:43:23,280
ciphertext has come out isn't compared

936
00:43:23,280 --> 00:43:25,380
to the input Cipher text

937
00:43:25,380 --> 00:43:27,599
and if they don't match then there is a

938
00:43:27,599 --> 00:43:30,540
rejection by not feeding the message but

939
00:43:30,540 --> 00:43:33,980
the constant into the kdf

940
00:43:34,079 --> 00:43:36,420
the starting point from this work is a

941
00:43:36,420 --> 00:43:39,140
photo tag on the diabetic Absolution

942
00:43:39,140 --> 00:43:42,000
presented at encrypt 2021

943
00:43:42,000 --> 00:43:43,859
here's the same diagram of the

944
00:43:43,859 --> 00:43:46,560
decapsulation with some more detail

945
00:43:46,560 --> 00:43:48,900
um so the part of the server text you

946
00:43:48,900 --> 00:43:50,579
are interested in

947
00:43:50,579 --> 00:43:54,960
is a polynomial V with 256 coefficients

948
00:43:54,960 --> 00:43:58,079
and its coefficient has four bits

949
00:43:58,079 --> 00:44:01,440
and the method is 256 bits in a way that

950
00:44:01,440 --> 00:44:04,079
each bit of the message corresponds to

951
00:44:04,079 --> 00:44:07,260
exactly one coefficient of V so m0 only

952
00:44:07,260 --> 00:44:09,720
depends on V 0 and 1 only depends on V1

953
00:44:09,720 --> 00:44:11,819
and so on

954
00:44:11,819 --> 00:44:14,579
now the attacker manipulates one

955
00:44:14,579 --> 00:44:17,339
coefficient of the polynomial V it

956
00:44:17,339 --> 00:44:19,980
doesn't matter which one so let's say V1

957
00:44:19,980 --> 00:44:23,460
and the manipulation is a bit flip uh in

958
00:44:23,460 --> 00:44:26,520
really that the voltage the manipulated

959
00:44:26,520 --> 00:44:29,460
value better is original one plus four

960
00:44:29,460 --> 00:44:32,480
minus 16.

961
00:44:32,760 --> 00:44:35,220
and for this particular manipulation it

962
00:44:35,220 --> 00:44:37,920
turns out that the recovered message

963
00:44:37,920 --> 00:44:40,500
which I'm on Prime is either correct to

964
00:44:40,500 --> 00:44:43,619
run with around 50 50 probability and

965
00:44:43,619 --> 00:44:45,839
the correctness entirely depends on the

966
00:44:45,839 --> 00:44:48,119
private key

967
00:44:48,119 --> 00:44:51,060
uh there's the encryption done will

968
00:44:51,060 --> 00:44:54,000
provide an avalanche-like effect so if

969
00:44:54,000 --> 00:44:56,819
m1 Prime happens to be wrong then uh

970
00:44:56,819 --> 00:44:58,200
pretty much a whole ciphertax is

971
00:44:58,200 --> 00:44:59,280
corrupted

972
00:44:59,280 --> 00:45:03,540
if m1 Prime is correct then it is it is

973
00:45:03,540 --> 00:45:06,420
possible to pass the ciphertext

974
00:45:06,420 --> 00:45:10,980
comparison using a fault in particular a

975
00:45:10,980 --> 00:45:13,440
bit flip in either input operand of the

976
00:45:13,440 --> 00:45:17,420
comparison using a laser

977
00:45:19,940 --> 00:45:22,140
provides one bit of information so the

978
00:45:22,140 --> 00:45:23,520
object can derive

979
00:45:23,520 --> 00:45:24,740
um

980
00:45:24,740 --> 00:45:26,760
is correct

981
00:45:26,760 --> 00:45:30,180
and this provides one linear inequality

982
00:45:30,180 --> 00:45:33,300
over the private key and fewer than 10

983
00:45:33,300 --> 00:45:35,220
000 inequalities files to recover the

984
00:45:35,220 --> 00:45:38,760
key to get a solvable system

985
00:45:38,760 --> 00:45:40,380
this will actually facilitate and

986
00:45:40,380 --> 00:45:42,000
reversify the attack

987
00:45:42,000 --> 00:45:44,579
firstly we extend the attack surface in

988
00:45:44,579 --> 00:45:47,040
the inequal paper the attack surface is

989
00:45:47,040 --> 00:45:49,440
the two input appearance of the cephalex

990
00:45:49,440 --> 00:45:51,060
comparison which also leads to a new

991
00:45:51,060 --> 00:45:52,500
country measure where these two parents

992
00:45:52,500 --> 00:45:55,740
are protected in this work we showed

993
00:45:55,740 --> 00:45:57,420
that several balloon blocks of the

994
00:45:57,420 --> 00:46:00,900
re-encryption are vulnerable as well and

995
00:46:00,900 --> 00:46:03,060
this way we can broadcast the control

996
00:46:03,060 --> 00:46:04,619
measure that is proposing the inequate

997
00:46:04,619 --> 00:46:05,880
paper

998
00:46:05,880 --> 00:46:09,060
secondly we relax the first model uh

999
00:46:09,060 --> 00:46:10,680
originally default model is single bit

1000
00:46:10,680 --> 00:46:13,800
flips using laser we support various

1001
00:46:13,800 --> 00:46:15,720
equipments through various salt Metals

1002
00:46:15,720 --> 00:46:17,819
so we can have random false set of zero

1003
00:46:17,819 --> 00:46:18,960
volts to one false instruction

1004
00:46:18,960 --> 00:46:20,640
collection instruction skips and

1005
00:46:20,640 --> 00:46:23,520
arbitrary bit flip patterns

1006
00:46:23,520 --> 00:46:26,520
thirdly masking is regarded as a counter

1007
00:46:26,520 --> 00:46:29,339
measure in the original work of the best

1008
00:46:29,339 --> 00:46:30,660
used in combination with other

1009
00:46:30,660 --> 00:46:33,900
countermeasures in this work masking

1010
00:46:33,900 --> 00:46:36,560
directly helps the attack

1011
00:46:36,560 --> 00:46:38,880
so there is another positive effect

1012
00:46:38,880 --> 00:46:40,500
which is not to be confused with

1013
00:46:40,500 --> 00:46:43,619
indifference or zero effects

1014
00:46:43,619 --> 00:46:46,200
lastly for solving inequalities in the

1015
00:46:46,200 --> 00:46:49,680
original paper and a single threat of

1016
00:46:49,680 --> 00:46:53,280
say a modern computer it takes 100

1017
00:46:53,280 --> 00:46:55,980
minutes to solve a reference system of

1018
00:46:55,980 --> 00:46:58,740
equations and the inequality is better

1019
00:46:58,740 --> 00:46:59,339
um

1020
00:46:59,339 --> 00:47:03,060
and up to that point it is only known

1021
00:47:03,060 --> 00:47:04,859
that you can have a one percent error

1022
00:47:04,859 --> 00:47:06,060
rate so at least one percent of the

1023
00:47:06,060 --> 00:47:07,560
inequalities can be incorrect so still

1024
00:47:07,560 --> 00:47:09,060
solve the system

1025
00:47:09,060 --> 00:47:12,240
this work we provide an acceleration so

1026
00:47:12,240 --> 00:47:14,819
now it takes less than one minute on a

1027
00:47:14,819 --> 00:47:17,160
similar under similar conditions to

1028
00:47:17,160 --> 00:47:19,260
solve the system and also we can go up

1029
00:47:19,260 --> 00:47:22,800
to 25 percent errors

1030
00:47:22,800 --> 00:47:25,200
uh because of these sort of tenses we

1031
00:47:25,200 --> 00:47:26,579
can provide a proof of concept of the

1032
00:47:26,579 --> 00:47:29,940
attack using a CP sprayer board while in

1033
00:47:29,940 --> 00:47:31,740
the original work the attack is

1034
00:47:31,740 --> 00:47:35,939
simulated in software exclusively

1035
00:47:36,420 --> 00:47:38,579
despise these benefits that I refer to

1036
00:47:38,579 --> 00:47:41,460
this larger attack surface support from

1037
00:47:41,460 --> 00:47:44,160
modern's masking as a facilitator and

1038
00:47:44,160 --> 00:47:47,880
also the ability to use cheaper more

1039
00:47:47,880 --> 00:47:50,819
diverse equipment the one minus here is

1040
00:47:50,819 --> 00:47:52,920
that you need to inject more faults in

1041
00:47:52,920 --> 00:47:54,900
order to get the key the number for this

1042
00:47:54,900 --> 00:47:57,660
unit is multiplied by a fracture summary

1043
00:47:57,660 --> 00:48:00,859
between 10 and 100.

1044
00:48:00,960 --> 00:48:02,520
um so that means that the actually

1045
00:48:02,520 --> 00:48:03,960
because in time the attack will be

1046
00:48:03,960 --> 00:48:05,579
higher

1047
00:48:05,579 --> 00:48:07,680
um however the execution time is still a

1048
00:48:07,680 --> 00:48:09,480
few days or if you have a very well

1049
00:48:09,480 --> 00:48:11,099
optimized implementation of Skype

1050
00:48:11,099 --> 00:48:13,500
possibly less than one day so this

1051
00:48:13,500 --> 00:48:15,480
remains a feasible attack

1052
00:48:15,480 --> 00:48:17,599
uh also to put this similar into context

1053
00:48:17,599 --> 00:48:19,980
execution time is not all what matters

1054
00:48:19,980 --> 00:48:23,220
so here we have the total time to mount

1055
00:48:23,220 --> 00:48:24,660
the photo Tech and split it into five

1056
00:48:24,660 --> 00:48:27,359
components 31 is a training time to get

1057
00:48:27,359 --> 00:48:28,800
agreement with the full transaction

1058
00:48:28,800 --> 00:48:31,980
equipment and with a direct device T2 is

1059
00:48:31,980 --> 00:48:33,300
Target preparation which is

1060
00:48:33,300 --> 00:48:36,119
decapsulating the chip soldering D3 is

1061
00:48:36,119 --> 00:48:38,339
building setup so this includes writing

1062
00:48:38,339 --> 00:48:40,859
python skips to control the phone

1063
00:48:40,859 --> 00:48:42,119
injection equipment

1064
00:48:42,119 --> 00:48:44,940
and the device itself T4 is calibration

1065
00:48:44,940 --> 00:48:47,160
that's uh you can see that as a testing

1066
00:48:47,160 --> 00:48:49,160
phase where you see how the device

1067
00:48:49,160 --> 00:48:52,260
responds to faults and in fact the

1068
00:48:52,260 --> 00:48:54,900
actual execution of the attack not only

1069
00:48:54,900 --> 00:49:00,480
um D5 is uh higher uh you know iteration

1070
00:49:00,480 --> 00:49:02,400
of the attack

1071
00:49:02,400 --> 00:49:04,740
um and this is also something that again

1072
00:49:04,740 --> 00:49:06,660
that can happen over matter during the

1073
00:49:06,660 --> 00:49:08,579
weekend so it doesn't require any active

1074
00:49:08,579 --> 00:49:11,460
input of the attacker which is not the

1075
00:49:11,460 --> 00:49:13,740
case of some of the earlier components

1076
00:49:13,740 --> 00:49:16,560
and because we can use not only cheaper

1077
00:49:16,560 --> 00:49:19,740
but various other equipment analyzer

1078
00:49:19,740 --> 00:49:21,839
um there is some potential to to lower

1079
00:49:21,839 --> 00:49:26,060
the sum of T1 until T4

1080
00:49:26,760 --> 00:49:29,040
then the launcher back surface in the

1081
00:49:29,040 --> 00:49:31,140
Immokalee paper the attack surface is to

1082
00:49:31,140 --> 00:49:33,060
input operands of the ciphertext

1083
00:49:33,060 --> 00:49:35,220
comparison

1084
00:49:35,220 --> 00:49:36,480
um

1085
00:49:36,480 --> 00:49:39,000
to practice operands they provide a

1086
00:49:39,000 --> 00:49:41,520
countermeasure where this uh where the

1087
00:49:41,520 --> 00:49:43,680
ciphertext is not simply stored in ROM

1088
00:49:43,680 --> 00:49:45,839
but stored together with a hash value of

1089
00:49:45,839 --> 00:49:47,220
the ciphertext

1090
00:49:47,220 --> 00:49:49,680
uh and then also compare this way

1091
00:49:49,680 --> 00:49:52,140
however this countermeasure is imperfect

1092
00:49:52,140 --> 00:49:54,119
because if you inject the fault before

1093
00:49:54,119 --> 00:49:56,760
the hash value is taken you can bypass

1094
00:49:56,760 --> 00:49:59,160
it and that's exactly what we do

1095
00:49:59,160 --> 00:50:01,800
we look at all the components that lead

1096
00:50:01,800 --> 00:50:05,040
up to this uh ciphertext coefficient

1097
00:50:05,040 --> 00:50:07,079
that is a compression that is a Biore

1098
00:50:07,079 --> 00:50:08,339
reduction that is an addition that is

1099
00:50:08,339 --> 00:50:10,800
decompression that is uh error sampling

1100
00:50:10,800 --> 00:50:13,260
from Central binomial distribution and

1101
00:50:13,260 --> 00:50:15,119
that are also butterflies in the last

1102
00:50:15,119 --> 00:50:17,940
layer of inverse multi-atic transform

1103
00:50:17,940 --> 00:50:20,400
so we can inject a fault early on in any

1104
00:50:20,400 --> 00:50:22,319
of these building blocks so here we

1105
00:50:22,319 --> 00:50:24,960
assume it is a decompression

1106
00:50:24,960 --> 00:50:28,260
and if this fault is uh if the voltage

1107
00:50:28,260 --> 00:50:30,599
value is somewhat uniformly distributed

1108
00:50:30,599 --> 00:50:33,060
on the parent field then because of the

1109
00:50:33,060 --> 00:50:35,359
propagation properties of the algorithm

1110
00:50:35,359 --> 00:50:38,760
the ciphertext coefficients will also be

1111
00:50:38,760 --> 00:50:41,400
somewhat uniformly distributed on 0 to

1112
00:50:41,400 --> 00:50:42,900
15.

1113
00:50:42,900 --> 00:50:45,000
and because there are only 16 possible

1114
00:50:45,000 --> 00:50:46,500
values it's not going to take very long

1115
00:50:46,500 --> 00:50:48,780
until eventually you will hit the same

1116
00:50:48,780 --> 00:50:50,220
value as on the left on the slide for

1117
00:50:50,220 --> 00:50:52,260
the integral paper

1118
00:50:52,260 --> 00:50:54,180
um say if you do 20 attempts there is

1119
00:50:54,180 --> 00:50:56,880
already a good chance that you have it

1120
00:50:56,880 --> 00:50:59,220
and this way we can bypass the

1121
00:50:59,220 --> 00:51:01,559
countermeasure the analysis we make in

1122
00:51:01,559 --> 00:51:04,740
the paper that is also um from the data

1123
00:51:04,740 --> 00:51:06,480
results derived this is relative field

1124
00:51:06,480 --> 00:51:08,700
so we have relatively 16 beans and with

1125
00:51:08,700 --> 00:51:10,680
every Force you will spin the wheel

1126
00:51:10,680 --> 00:51:14,579
and eventually by pure a lot you will

1127
00:51:14,579 --> 00:51:18,440
um hit the one value that you want

1128
00:51:19,920 --> 00:51:22,020
then the relaxed fault model and why

1129
00:51:22,020 --> 00:51:24,300
masking is a facilitator in the

1130
00:51:24,300 --> 00:51:25,859
immigrate paper the fault model is

1131
00:51:25,859 --> 00:51:28,380
single bit flips using laser in this

1132
00:51:28,380 --> 00:51:31,440
vehicle support various models the first

1133
00:51:31,440 --> 00:51:34,260
example which is a trivial example is

1134
00:51:34,260 --> 00:51:36,540
the Roman fault which is a

1135
00:51:36,540 --> 00:51:39,119
well-established model in the literature

1136
00:51:39,119 --> 00:51:41,520
secondly we have Mass hardware and

1137
00:51:41,520 --> 00:51:43,079
suppose we have a function app that is

1138
00:51:43,079 --> 00:51:46,319
split into a numerous shares here we

1139
00:51:46,319 --> 00:51:47,760
have two chairs but this can be more

1140
00:51:47,760 --> 00:51:48,960
also

1141
00:51:48,960 --> 00:51:51,059
um well if you can set one of these

1142
00:51:51,059 --> 00:51:52,559
output shares

1143
00:51:52,559 --> 00:51:55,559
from to zero or to one or to any

1144
00:51:55,559 --> 00:51:57,720
constant then it can easily be seen at

1145
00:51:57,720 --> 00:51:59,400
the inverse value Y is uniformly

1146
00:51:59,400 --> 00:52:01,559
distributed which is exactly what you

1147
00:52:01,559 --> 00:52:02,760
want

1148
00:52:02,760 --> 00:52:05,520
a third example is mass software again

1149
00:52:05,520 --> 00:52:06,960
we have a function app that is split

1150
00:52:06,960 --> 00:52:10,319
into chairs uh even one of the share

1151
00:52:10,319 --> 00:52:13,380
functions say F1 we can corrupt an

1152
00:52:13,380 --> 00:52:15,720
instruction or Skip One

1153
00:52:15,720 --> 00:52:18,599
in a way that the folded output is

1154
00:52:18,599 --> 00:52:22,520
independent of the original one

1155
00:52:22,559 --> 00:52:25,140
um but then again it can be seen that

1156
00:52:25,140 --> 00:52:27,960
the invisible UI is uniform

1157
00:52:27,960 --> 00:52:30,059
in the paper there are there are more

1158
00:52:30,059 --> 00:52:32,099
examples using bit flips uh not here

1159
00:52:32,099 --> 00:52:33,900
because of time

1160
00:52:33,900 --> 00:52:36,059
and the main message is that because we

1161
00:52:36,059 --> 00:52:37,380
have more fault moves we can also use

1162
00:52:37,380 --> 00:52:39,660
some more equipment we can do things

1163
00:52:39,660 --> 00:52:41,819
like Cloud glitching photos glitching

1164
00:52:41,819 --> 00:52:44,220
electromagnetic field injection besides

1165
00:52:44,220 --> 00:52:46,740
using a laser we can still do that

1166
00:52:46,740 --> 00:52:48,540
than solving the system of female

1167
00:52:48,540 --> 00:52:50,540
inequalities

1168
00:52:50,540 --> 00:52:54,359
which may look which may look like this

1169
00:52:54,359 --> 00:52:57,079
at least for one version of kyber

1170
00:52:57,079 --> 00:53:00,000
so the number of we have system ax plus

1171
00:53:00,000 --> 00:53:04,099
b uh actually unknowns and there are

1172
00:53:04,099 --> 00:53:07,559
1536 unknowns those are all integers

1173
00:53:07,559 --> 00:53:10,260
between minus two and two and then we

1174
00:53:10,260 --> 00:53:11,099
have seven thousand terminal

1175
00:53:11,099 --> 00:53:14,819
inequalities and for each or inequality

1176
00:53:14,819 --> 00:53:16,800
we know the sign we know it is greater

1177
00:53:16,800 --> 00:53:18,119
than or equal to zero if you have a

1178
00:53:18,119 --> 00:53:19,680
decapsulation failure and with this

1179
00:53:19,680 --> 00:53:20,640
smaller than zero if you have

1180
00:53:20,640 --> 00:53:23,059
decapsulation success

1181
00:53:23,059 --> 00:53:25,680
and in previous paper this always using

1182
00:53:25,680 --> 00:53:27,059
belief propagation which is an iterative

1183
00:53:27,059 --> 00:53:30,559
algorithm so for each

1184
00:53:30,559 --> 00:53:34,200
variable for each unknown

1185
00:53:34,200 --> 00:53:36,300
um we maintain a probability Mass

1186
00:53:36,300 --> 00:53:40,079
Junction a pmf so we have one for X1 and

1187
00:53:40,079 --> 00:53:44,099
all the way until X 1536

1188
00:53:44,280 --> 00:53:46,200
um initially these PMS are equal to the

1189
00:53:46,200 --> 00:53:48,599
central binomial distribution because

1190
00:53:48,599 --> 00:53:50,640
um that's our distribution for me these

1191
00:53:50,640 --> 00:53:53,480
variables are drawn

1192
00:53:54,310 --> 00:53:57,020
[Music]

1193
00:53:57,020 --> 00:54:00,420
these Mass functions are updated and

1194
00:54:00,420 --> 00:54:02,040
eventually they will start to look like

1195
00:54:02,040 --> 00:54:03,960
Point distributions that hopefully point

1196
00:54:03,960 --> 00:54:06,119
out what exactly the

1197
00:54:06,119 --> 00:54:08,040
and the secret is

1198
00:54:08,040 --> 00:54:11,400
we make two improvements to this

1199
00:54:11,400 --> 00:54:13,380
algorithm first Improvement is to reduce

1200
00:54:13,380 --> 00:54:14,940
the computation time

1201
00:54:14,940 --> 00:54:18,540
the computation time is stronger because

1202
00:54:18,540 --> 00:54:20,099
in each iteration there is a need to

1203
00:54:20,099 --> 00:54:22,319
compute the distribution of more than 10

1204
00:54:22,319 --> 00:54:25,260
million random variables that are linear

1205
00:54:25,260 --> 00:54:28,559
combinations of the unknowns

1206
00:54:28,559 --> 00:54:30,780
in the in the grid paper they do this

1207
00:54:30,780 --> 00:54:31,920
exactly

1208
00:54:31,920 --> 00:54:34,440
which is similar convolution but even if

1209
00:54:34,440 --> 00:54:36,420
you do this in the frequency domain

1210
00:54:36,420 --> 00:54:38,700
where you have unlocked and complexity

1211
00:54:38,700 --> 00:54:41,460
so using the fft and even if you

1212
00:54:41,460 --> 00:54:44,700
implement binary trees to optimize the

1213
00:54:44,700 --> 00:54:47,339
ReUse of intermediate variables even

1214
00:54:47,339 --> 00:54:49,559
then it remains a heavy computation and

1215
00:54:49,559 --> 00:54:53,640
they have 15 minutes per iteration on a

1216
00:54:53,640 --> 00:54:56,760
single threat of a typical computer

1217
00:54:56,760 --> 00:54:59,099
in this work we'll be using

1218
00:54:59,099 --> 00:55:00,540
approximation instead so we will

1219
00:55:00,540 --> 00:55:02,480
approximate these certain variables

1220
00:55:02,480 --> 00:55:05,940
using normal distribution and according

1221
00:55:05,940 --> 00:55:07,319
to Central limit theorem we can do this

1222
00:55:07,319 --> 00:55:08,720
because this

1223
00:55:08,720 --> 00:55:11,579
variables depends on many other

1224
00:55:11,579 --> 00:55:14,760
variables and then we end up with uh

1225
00:55:14,760 --> 00:55:19,200
less than five seconds per iteration

1226
00:55:19,200 --> 00:55:20,760
the secondary profit will make is to

1227
00:55:20,760 --> 00:55:22,680
have a higher Arrow tolerance

1228
00:55:22,680 --> 00:55:26,059
um so during the iterations we need to

1229
00:55:26,059 --> 00:55:28,619
compute the probability that an

1230
00:55:28,619 --> 00:55:31,559
inequality is satisfies given some info

1231
00:55:31,559 --> 00:55:35,059
about the mass function of the animal X

1232
00:55:35,059 --> 00:55:39,420
and while we incorporate our correction

1233
00:55:39,420 --> 00:55:41,480
here where we take into account that

1234
00:55:41,480 --> 00:55:43,440
inequalities are only correct or

1235
00:55:43,440 --> 00:55:45,660
incorrect up to certain probability and

1236
00:55:45,660 --> 00:55:47,579
this probability can be estimated based

1237
00:55:47,579 --> 00:55:49,200
on the total number of decapitation

1238
00:55:49,200 --> 00:55:51,900
successes and failure that is observed

1239
00:55:51,900 --> 00:55:54,240
so normally it should be 50 50 but if

1240
00:55:54,240 --> 00:55:56,339
you see something else if you see like

1241
00:55:56,339 --> 00:55:58,619
um 70 30 or 80 20 then you know that

1242
00:55:58,619 --> 00:56:00,059
there is a certain error reader and you

1243
00:56:00,059 --> 00:56:01,500
can estimate this error rate based on

1244
00:56:01,500 --> 00:56:04,079
the numbers you have

1245
00:56:04,079 --> 00:56:07,140
uh here's a plot for uh this for uh

1246
00:56:07,140 --> 00:56:09,540
false simulated in software so we can

1247
00:56:09,540 --> 00:56:10,680
exactly

1248
00:56:10,680 --> 00:56:14,220
um have the exact area that we want

1249
00:56:14,220 --> 00:56:16,079
um on the horizontal axis we have the

1250
00:56:16,079 --> 00:56:18,660
number of inequalities and vertically we

1251
00:56:18,660 --> 00:56:20,460
have the success probability for

1252
00:56:20,460 --> 00:56:24,559
correctly guessing uh noon

1253
00:56:25,280 --> 00:56:27,599
uh oh sorry

1254
00:56:27,599 --> 00:56:28,740
um

1255
00:56:28,740 --> 00:56:30,599
yeah so here's the book now um

1256
00:56:30,599 --> 00:56:32,099
horizontally we have the number of

1257
00:56:32,099 --> 00:56:33,420
inequalities vertically we have the

1258
00:56:33,420 --> 00:56:36,240
access probability that uh normally is

1259
00:56:36,240 --> 00:56:38,760
correctly guessed

1260
00:56:38,760 --> 00:56:40,020
um

1261
00:56:40,020 --> 00:56:42,300
yeah so we need to get to one to get

1262
00:56:42,300 --> 00:56:45,839
full key recovery the leftmost curves

1263
00:56:45,839 --> 00:56:48,180
the one blue uh that is with the zero

1264
00:56:48,180 --> 00:56:49,500
percent error rate so there will meet

1265
00:56:49,500 --> 00:56:52,260
less than 10 000 inequalities to get a

1266
00:56:52,260 --> 00:56:54,720
key which is in line with previous work

1267
00:56:54,720 --> 00:56:57,720
and if you have 25 array that is a curve

1268
00:56:57,720 --> 00:56:59,400
in green then we can still solve the

1269
00:56:59,400 --> 00:57:03,540
system using 30 000 inequalities

1270
00:57:03,540 --> 00:57:05,880
so the benefit of supporting a higher

1271
00:57:05,880 --> 00:57:07,319
average is that your fault injection

1272
00:57:07,319 --> 00:57:11,460
setup it does not need to be uh perfect

1273
00:57:11,460 --> 00:57:13,260
um so you you're like the requirements

1274
00:57:13,260 --> 00:57:15,900
in there and also uh you need more

1275
00:57:15,900 --> 00:57:17,099
inequalities if you have higher

1276
00:57:17,099 --> 00:57:19,260
Arrowhead so that means that previous

1277
00:57:19,260 --> 00:57:20,940
acceleration technique using the central

1278
00:57:20,940 --> 00:57:23,520
limit here and will pay off

1279
00:57:23,520 --> 00:57:26,099
our solver is typically available on

1280
00:57:26,099 --> 00:57:29,640
GitHub and also as such as artifact

1281
00:57:29,640 --> 00:57:32,400
when a CPUs player experiments

1282
00:57:32,400 --> 00:57:34,680
so the both on the left is used to

1283
00:57:34,680 --> 00:57:36,660
generate a 24 megahertz clock and this

1284
00:57:36,660 --> 00:57:40,020
clock is glitched by extorting it with a

1285
00:57:40,020 --> 00:57:42,119
small pulse and on that you have Sky

1286
00:57:42,119 --> 00:57:45,480
versioning a mass implementation taken

1287
00:57:45,480 --> 00:57:49,619
from Italian and this particular

1288
00:57:49,619 --> 00:57:51,240
implementation is not presented in the

1289
00:57:51,240 --> 00:57:53,640
session parallel to this one

1290
00:57:53,640 --> 00:57:56,220
um and it runs on an uncortex and 4 of

1291
00:57:56,220 --> 00:57:58,380
an stm32 chip and because of the

1292
00:57:58,380 --> 00:58:00,180
glitching there is an instruction

1293
00:58:00,180 --> 00:58:02,220
corruption or instruction skip in the

1294
00:58:02,220 --> 00:58:05,480
last layer of the inverse in return

1295
00:58:05,760 --> 00:58:08,819
function use implementation is optimized

1296
00:58:08,819 --> 00:58:11,000
um firstly because it is

1297
00:58:11,000 --> 00:58:13,980
possible C code that means that the

1298
00:58:13,980 --> 00:58:17,339
numerator technical form is not written

1299
00:58:17,339 --> 00:58:20,819
in assembly in like some other recent

1300
00:58:20,819 --> 00:58:23,160
implementations uh so we will have a

1301
00:58:23,160 --> 00:58:25,859
performance hit from that and also we

1302
00:58:25,859 --> 00:58:27,540
are clocking at the at a lower frequency

1303
00:58:27,540 --> 00:58:29,460
only 24 measures while the device is

1304
00:58:29,460 --> 00:58:31,980
actually capable of going up to 168

1305
00:58:31,980 --> 00:58:33,180
megahertz

1306
00:58:33,180 --> 00:58:35,400
so because of that

1307
00:58:35,400 --> 00:58:37,440
um it will actually take five days here

1308
00:58:37,440 --> 00:58:40,260
to get removed in ecologies to look over

1309
00:58:40,260 --> 00:58:42,540
the key uh which is still a feasible

1310
00:58:42,540 --> 00:58:45,119
attack uh but it was very convenient

1311
00:58:45,119 --> 00:58:47,520
um for Gathering data to write a paper

1312
00:58:47,520 --> 00:58:49,319
where you want to experience in Bullock

1313
00:58:49,319 --> 00:58:51,359
so what we do instead is we assess the

1314
00:58:51,359 --> 00:58:52,920
correctness of the inequalities because

1315
00:58:52,920 --> 00:58:54,960
we know that we can only solve them not

1316
00:58:54,960 --> 00:58:56,520
only from this paper from but from

1317
00:58:56,520 --> 00:58:58,200
previous works also

1318
00:58:58,200 --> 00:59:00,420
under support here on the horizontal

1319
00:59:00,420 --> 00:59:02,059
axis we have the

1320
00:59:02,059 --> 00:59:06,119
number of fault injections but

1321
00:59:06,119 --> 00:59:07,859
oh okay sorry again

1322
00:59:07,859 --> 00:59:10,319
um we have the number of fault

1323
00:59:10,319 --> 00:59:12,420
injections

1324
00:59:12,420 --> 00:59:13,079
um

1325
00:59:13,079 --> 00:59:16,559
from the inequality and vertically we

1326
00:59:16,559 --> 00:59:19,079
have the number of dams is that and and

1327
00:59:19,079 --> 00:59:20,760
vertically we have the inequality around

1328
00:59:20,760 --> 00:59:23,640
it so what we need is we need to get

1329
00:59:23,640 --> 00:59:26,400
below uh 25 because I thought this that

1330
00:59:26,400 --> 00:59:28,440
is what we can solve and we see that

1331
00:59:28,440 --> 00:59:30,180
with 20 or more attempts we can get

1332
00:59:30,180 --> 00:59:31,559
there

1333
00:59:31,559 --> 00:59:33,359
to conclude our contributions to open

1334
00:59:33,359 --> 00:59:34,980
patterns for the attacker so we can use

1335
00:59:34,980 --> 00:59:37,079
more building blocks to attack using

1336
00:59:37,079 --> 00:59:39,180
more models with higher to loans and

1337
00:59:39,180 --> 00:59:41,280
using masking as a facilitator and

1338
00:59:41,280 --> 00:59:43,319
because of that we can have a moreover

1339
00:59:43,319 --> 00:59:46,799
cheaper and less reliable equipment for

1340
00:59:46,799 --> 00:59:49,680
further research we can do experience on

1341
00:59:49,680 --> 00:59:53,339
optimized targets to see how how fast I

1342
00:59:53,339 --> 00:59:54,720
can go uh we can access the

1343
00:59:54,720 --> 00:59:56,339
vulnerability of other post Quantum

1344
00:59:56,339 --> 00:59:58,020
algorithms besides kyber

1345
00:59:58,020 --> 01:00:00,660
and also design of new counter measures

1346
01:00:00,660 --> 01:00:03,020
thank you

1347
01:00:08,880 --> 01:00:11,540
questions

1348
01:00:16,339 --> 01:00:20,339
let me also check chat

1349
01:00:20,339 --> 01:00:23,099
okay so let let me ask uh first question

1350
01:00:23,099 --> 01:00:26,280
so um uh when you say

1351
01:00:26,280 --> 01:00:29,099
for future research uh vulnerability of

1352
01:00:29,099 --> 01:00:31,940
other algorithms do you have any

1353
01:00:31,940 --> 01:00:35,099
suggestions where to start I mean are

1354
01:00:35,099 --> 01:00:37,260
there algorithms that would

1355
01:00:37,260 --> 01:00:41,059
be better fit for this attack or

1356
01:00:41,059 --> 01:00:44,700
the the most likely candidate that was

1357
01:00:44,700 --> 01:00:47,040
uh saber

1358
01:00:47,040 --> 01:00:48,780
but considering that saber has not

1359
01:00:48,780 --> 01:00:51,240
selected uh for summarization and also

1360
01:00:51,240 --> 01:00:52,079
not

1361
01:00:52,079 --> 01:00:54,540
um passed to the fourth round maybe the

1362
01:00:54,540 --> 01:00:57,000
interest is a bit lower to do that and

1363
01:00:57,000 --> 01:00:59,540
for other algorithms

1364
01:00:59,540 --> 01:01:03,660
I didn't look into it so I have no ID

1365
01:01:03,660 --> 01:01:04,740
okay

1366
01:01:04,740 --> 01:01:07,640
thank you

1367
01:01:10,140 --> 01:01:12,900
okay let me ask them one more uh I keep

1368
01:01:12,900 --> 01:01:14,880
not really interested so basically you

1369
01:01:14,880 --> 01:01:18,240
set the the paper from endocrypt so the

1370
01:01:18,240 --> 01:01:19,859
the countermeasure they suggested

1371
01:01:19,859 --> 01:01:22,440
actually does not help

1372
01:01:22,440 --> 01:01:25,920
the defense but even the attack do you

1373
01:01:25,920 --> 01:01:28,559
have any suggestions in what direction

1374
01:01:28,559 --> 01:01:33,299
to build countermeasures that would help

1375
01:01:33,299 --> 01:01:36,059
um well um briefly after this paper

1376
01:01:36,059 --> 01:01:39,420
appeared on eprints uh there was another

1377
01:01:39,420 --> 01:01:41,520
paper by Raffi where they already

1378
01:01:41,520 --> 01:01:43,799
proposed one

1379
01:01:43,799 --> 01:01:47,480
um so what they do in that paper is

1380
01:01:47,480 --> 01:01:51,480
this attack or this contrary purpose is

1381
01:01:51,480 --> 01:01:53,400
not only against the new attack but also

1382
01:01:53,400 --> 01:01:55,020
against the original in a crypto Tech

1383
01:01:55,020 --> 01:01:58,280
what they do is um

1384
01:01:58,319 --> 01:02:00,180
well well for the attack we need a

1385
01:02:00,180 --> 01:02:02,660
particular manipulation where we have a

1386
01:02:02,660 --> 01:02:05,700
converter rotation so we do plus four

1387
01:02:05,700 --> 01:02:07,940
model 16 as a quarter rotation and the

1388
01:02:07,940 --> 01:02:11,400
uh detect exactly that uh

1389
01:02:11,400 --> 01:02:14,460
okay and that would that would work also

1390
01:02:14,460 --> 01:02:15,720
for

1391
01:02:15,720 --> 01:02:21,059
um I I hope yeah okay thank you last

1392
01:02:21,059 --> 01:02:24,119
chance audience questions

1393
01:02:24,119 --> 01:02:26,890
okay then let's thank the speaker

1394
01:02:26,890 --> 01:02:30,000
[Applause]

1395
01:02:32,960 --> 01:02:36,059
and we are now

1396
01:02:36,059 --> 01:02:39,780
the last Talk of the yes you will okay

1397
01:02:39,780 --> 01:02:42,960
because I saw two yeah maximum okay so

1398
01:02:42,960 --> 01:02:47,280
this is double uh double uh uh talk so

1399
01:02:47,280 --> 01:02:50,819
both body and Maximilian will uh will

1400
01:02:50,819 --> 01:02:53,220
present in in some way or other let's

1401
01:02:53,220 --> 01:02:57,599
see and the title of the work is on the

1402
01:02:57,599 --> 01:02:59,400
application of two foot and absorption

1403
01:02:59,400 --> 01:03:03,740
for laser fault injection attacks

1404
01:03:05,540 --> 01:03:09,119
so maybe I want to use that microphone

1405
01:03:09,119 --> 01:03:11,220
and then you just the other one to to

1406
01:03:11,220 --> 01:03:14,660
make it more efficient

1407
01:03:14,880 --> 01:03:17,420
just

1408
01:03:27,480 --> 01:03:29,480
ice

1409
01:03:47,099 --> 01:03:51,720
okay I think I can be heard yeah um I

1410
01:03:51,720 --> 01:03:53,579
will give this talk together with my

1411
01:03:53,579 --> 01:03:56,880
colleague Maximilian um from the tomb

1412
01:03:56,880 --> 01:03:58,859
chair for laser and expert physics I'm

1413
01:03:58,859 --> 01:04:02,640
border Zemke from the front of Isaac and

1414
01:04:02,640 --> 01:04:05,280
yeah the previous talks were more about

1415
01:04:05,280 --> 01:04:08,760
um how to exploit faults this talk will

1416
01:04:08,760 --> 01:04:12,359
be um on the Ford injection process

1417
01:04:12,359 --> 01:04:15,960
um itself so how we can inject Falls by

1418
01:04:15,960 --> 01:04:19,079
laser-based fault injection and yeah

1419
01:04:19,079 --> 01:04:21,480
laser fault injection is considered the

1420
01:04:21,480 --> 01:04:23,460
most precise method for fault injection

1421
01:04:23,460 --> 01:04:27,119
in in general and we have high temporal

1422
01:04:27,119 --> 01:04:29,220
um Precision so we can have very short

1423
01:04:29,220 --> 01:04:30,599
pulses

1424
01:04:30,599 --> 01:04:32,460
um in the nanosecond or even picosec

1425
01:04:32,460 --> 01:04:35,220
range which allows us to um be very

1426
01:04:35,220 --> 01:04:36,660
precise and Target individual clock

1427
01:04:36,660 --> 01:04:39,780
Cycles we have a high spatial position

1428
01:04:39,780 --> 01:04:44,579
so we can have very small spots and um

1429
01:04:44,579 --> 01:04:46,500
yeah very selectively

1430
01:04:46,500 --> 01:04:48,900
um choose where to inject falls on the

1431
01:04:48,900 --> 01:04:50,280
die

1432
01:04:50,280 --> 01:04:52,500
um we have a high Plus repability or

1433
01:04:52,500 --> 01:04:54,660
highest pulse rate and with diode lasers

1434
01:04:54,660 --> 01:04:56,220
you can easily go into the megahertz

1435
01:04:56,220 --> 01:04:59,520
range and do yeah multi-fault injections

1436
01:04:59,520 --> 01:05:01,680
or multiple fault injections one after

1437
01:05:01,680 --> 01:05:03,540
another or you you can even have

1438
01:05:03,540 --> 01:05:06,119
multi-beam fault injections for example

1439
01:05:06,119 --> 01:05:10,200
using two lasers and inject two Falls at

1440
01:05:10,200 --> 01:05:11,760
different locations but at the same

1441
01:05:11,760 --> 01:05:13,680
point in time all this is possible it

1442
01:05:13,680 --> 01:05:15,119
makes laser phone injection a very

1443
01:05:15,119 --> 01:05:19,140
powerful tool however you also have

1444
01:05:19,140 --> 01:05:22,380
um limitations challenges and and some

1445
01:05:22,380 --> 01:05:26,220
disadvantages perhaps um most notably we

1446
01:05:26,220 --> 01:05:30,180
need the device access so um

1447
01:05:30,180 --> 01:05:31,020
yeah

1448
01:05:31,020 --> 01:05:32,760
laser-based fault injection works best

1449
01:05:32,760 --> 01:05:34,799
from the chip back side I'm going

1450
01:05:34,799 --> 01:05:36,900
through the Silicon substrate from the

1451
01:05:36,900 --> 01:05:38,760
front side a principle it work would

1452
01:05:38,760 --> 01:05:41,940
work as well but we have a reflection on

1453
01:05:41,940 --> 01:05:44,160
the on the metal layers of the Chip And

1454
01:05:44,160 --> 01:05:47,220
that um for modern ship tends to work

1455
01:05:47,220 --> 01:05:48,240
very

1456
01:05:48,240 --> 01:05:51,059
um very yeah poorly so the best option

1457
01:05:51,059 --> 01:05:53,240
is to go to the Silicon substrate

1458
01:05:53,240 --> 01:05:56,220
however that also needs depending on the

1459
01:05:56,220 --> 01:05:57,780
package that's not not so easily

1460
01:05:57,780 --> 01:05:59,819
accessible all the time so for BGA

1461
01:05:59,819 --> 01:06:02,099
package for example that can be quite

1462
01:06:02,099 --> 01:06:04,680
challenging and this

1463
01:06:04,680 --> 01:06:06,299
leads me to my next Point device

1464
01:06:06,299 --> 01:06:08,040
preparation device preparation is always

1465
01:06:08,040 --> 01:06:09,780
necessary for laser-based fault

1466
01:06:09,780 --> 01:06:10,799
injection

1467
01:06:10,799 --> 01:06:13,619
um apart from uh you know despite other

1468
01:06:13,619 --> 01:06:15,359
forward injection methods like for

1469
01:06:15,359 --> 01:06:18,000
example emfi where you don't have to

1470
01:06:18,000 --> 01:06:20,760
necessarily prepare your device

1471
01:06:20,760 --> 01:06:22,859
um for lesser functions as always

1472
01:06:22,859 --> 01:06:26,160
um yeah necessary and even more can can

1473
01:06:26,160 --> 01:06:28,500
be often is necessary to thin the

1474
01:06:28,500 --> 01:06:31,680
Silicon of the dye so you don't um only

1475
01:06:31,680 --> 01:06:34,319
open the device but you also

1476
01:06:34,319 --> 01:06:34,980
um

1477
01:06:34,980 --> 01:06:37,380
thin the Silicon substrate of the of the

1478
01:06:37,380 --> 01:06:39,599
chip that can be done by mechanical

1479
01:06:39,599 --> 01:06:42,119
grinding however that is also some um

1480
01:06:42,119 --> 01:06:45,000
yeah requires specialized equipment to

1481
01:06:45,000 --> 01:06:46,500
do that and because you have to be very

1482
01:06:46,500 --> 01:06:48,780
precise it's time consuming and it gives

1483
01:06:48,780 --> 01:06:51,140
the risk that you damage the dire

1484
01:06:51,140 --> 01:06:54,299
correct the dye so it's uh it's it's um

1485
01:06:54,299 --> 01:06:55,799
yeah

1486
01:06:55,799 --> 01:06:57,960
um it's broken and in the worst case

1487
01:06:57,960 --> 01:06:59,520
that might even be something which is

1488
01:06:59,520 --> 01:07:02,940
detectable by counter measures and last

1489
01:07:02,940 --> 01:07:04,859
but not least um

1490
01:07:04,859 --> 01:07:07,140
so laser phone injection is the most

1491
01:07:07,140 --> 01:07:09,960
precise method it's um also has its

1492
01:07:09,960 --> 01:07:12,960
limits uh there and the spot size is

1493
01:07:12,960 --> 01:07:15,000
mainly limited by the wavelength of the

1494
01:07:15,000 --> 01:07:17,460
laser and there we are fixed to the near

1495
01:07:17,460 --> 01:07:18,960
infrared range if you want to detect

1496
01:07:18,960 --> 01:07:22,200
from the back side and also um the beam

1497
01:07:22,200 --> 01:07:25,079
diameter The Wider the beam is the more

1498
01:07:25,079 --> 01:07:28,200
uh the better it can be focused but

1499
01:07:28,200 --> 01:07:29,940
there are just have practical limits

1500
01:07:29,940 --> 01:07:31,619
from the objective lens which I can use

1501
01:07:31,619 --> 01:07:33,660
so in the end that gives me spot sizes

1502
01:07:33,660 --> 01:07:36,119
around one micrometer that's the best

1503
01:07:36,119 --> 01:07:37,859
but that's achievable state of the art

1504
01:07:37,859 --> 01:07:40,920
technology and with that you can for

1505
01:07:40,920 --> 01:07:42,299
example with the 90 Nano miniature

1506
01:07:42,299 --> 01:07:44,099
technology load um have very precise

1507
01:07:44,099 --> 01:07:46,319
faults and a high control over that so I

1508
01:07:46,319 --> 01:07:48,180
can even control if I wanted a bit set

1509
01:07:48,180 --> 01:07:51,119
bit resets that's possible but um that

1510
01:07:51,119 --> 01:07:52,920
doesn't scale any further than that so

1511
01:07:52,920 --> 01:07:54,960
and smaller technology notes for example

1512
01:07:54,960 --> 01:07:56,880
10 nanometers that won't be possible

1513
01:07:56,880 --> 01:07:59,579
anymore so that rises the question

1514
01:07:59,579 --> 01:08:01,799
um can we do better than that um can we

1515
01:08:01,799 --> 01:08:04,799
have better position can we have lower

1516
01:08:04,799 --> 01:08:06,420
requirements perhaps on the device

1517
01:08:06,420 --> 01:08:08,460
preparation and perhaps even something

1518
01:08:08,460 --> 01:08:11,579
which is harder to detect and the answer

1519
01:08:11,579 --> 01:08:13,440
is yes otherwise we won't be standing

1520
01:08:13,440 --> 01:08:15,240
here and

1521
01:08:15,240 --> 01:08:16,679
um yeah my

1522
01:08:16,679 --> 01:08:19,380
colleague Maximilian will then now

1523
01:08:19,380 --> 01:08:21,779
explain the physical the physics behind

1524
01:08:21,779 --> 01:08:23,960
that

1525
01:08:25,140 --> 01:08:27,479
all right so let's start with the

1526
01:08:27,479 --> 01:08:29,460
commonly used single function absorption

1527
01:08:29,460 --> 01:08:31,140
as we call it

1528
01:08:31,140 --> 01:08:33,600
um so the band gap of a silicon

1529
01:08:33,600 --> 01:08:35,698
semiconductor at room temperature is

1530
01:08:35,698 --> 01:08:38,939
about 1.12 election volts therefore we

1531
01:08:38,939 --> 01:08:41,939
need Photon energies Above This pancake

1532
01:08:41,939 --> 01:08:44,660
energy or wavelength below

1533
01:08:44,660 --> 01:08:47,939
110 nanometers for the excitation of an

1534
01:08:47,939 --> 01:08:51,120
electron from the well and spent into

1535
01:08:51,120 --> 01:08:52,738
the conduction bands and as a result

1536
01:08:52,738 --> 01:08:54,779
fault

1537
01:08:54,779 --> 01:08:56,719
um can be triggered

1538
01:08:56,719 --> 01:08:59,219
this whole process is not possible for

1539
01:08:59,219 --> 01:09:01,520
wavelengths above

1540
01:09:01,520 --> 01:09:05,660
110 nanometer because you can see here

1541
01:09:05,660 --> 01:09:09,839
the absorption coefficient of silicon so

1542
01:09:09,839 --> 01:09:12,238
um above about 1000 nanometer the

1543
01:09:12,238 --> 01:09:15,000
absorption is zero and therefore no

1544
01:09:15,000 --> 01:09:18,060
electron hole pair can be generated so

1545
01:09:18,060 --> 01:09:19,979
we have kind of a trade-off problem

1546
01:09:19,979 --> 01:09:22,679
because on the one hand we want to be

1547
01:09:22,679 --> 01:09:25,439
transparent with our laser for the

1548
01:09:25,439 --> 01:09:28,198
Silicon substrate on the other hand we

1549
01:09:28,198 --> 01:09:30,779
want to be absorptive in the Silicon

1550
01:09:30,779 --> 01:09:32,939
semiconductor

1551
01:09:32,939 --> 01:09:35,580
um yeah so we have kind of a

1552
01:09:35,580 --> 01:09:37,979
um yeah we have to find a sweet spot

1553
01:09:37,979 --> 01:09:39,120
here

1554
01:09:39,120 --> 01:09:42,960
um which is a 1064 nanometers at this

1555
01:09:42,960 --> 01:09:45,238
point so there can be a solution that's

1556
01:09:45,238 --> 01:09:48,299
the two Photon absorption as we call it

1557
01:09:48,299 --> 01:09:49,979
um so how does this work so we still

1558
01:09:49,979 --> 01:09:53,279
need the 1.12 electron volts of photon

1559
01:09:53,279 --> 01:09:55,920
energy but we can just add two photons

1560
01:09:55,920 --> 01:09:58,679
with half the band cap energy and

1561
01:09:58,679 --> 01:09:59,760
therefore we need this simultaneous

1562
01:09:59,760 --> 01:10:02,160
absorption of these two photons

1563
01:10:02,160 --> 01:10:04,260
so the first Photon elevates an election

1564
01:10:04,260 --> 01:10:07,320
from the valence into a virtual

1565
01:10:07,320 --> 01:10:09,420
intermediate State and the second one

1566
01:10:09,420 --> 01:10:11,400
elevates it further into the conduction

1567
01:10:11,400 --> 01:10:12,540
band

1568
01:10:12,540 --> 01:10:14,580
so there's a lifetime for the special

1569
01:10:14,580 --> 01:10:17,179
intermediate state of about 170 seconds

1570
01:10:17,179 --> 01:10:20,880
so we have a very low probability

1571
01:10:20,880 --> 01:10:24,179
um for this process to happen but we

1572
01:10:24,179 --> 01:10:26,580
increase this with a high peak laser

1573
01:10:26,580 --> 01:10:29,280
intensities short pulses and therefore

1574
01:10:29,280 --> 01:10:31,440
increasing the amount of photons

1575
01:10:31,440 --> 01:10:34,440
available for this process

1576
01:10:34,440 --> 01:10:38,100
so our terrific comparison between SPI

1577
01:10:38,100 --> 01:10:40,140
and TPA because I'm a physicist so of

1578
01:10:40,140 --> 01:10:43,679
course I have to show some equations

1579
01:10:43,679 --> 01:10:46,800
so as it comes to intensities and below

1580
01:10:46,800 --> 01:10:49,260
10 to the power of 6 watts per square

1581
01:10:49,260 --> 01:10:51,960
centimeter and we get this linear

1582
01:10:51,960 --> 01:10:55,320
relation between the absorption rate and

1583
01:10:55,320 --> 01:10:59,040
the intensity of our of our laser

1584
01:10:59,040 --> 01:11:00,480
um yeah now we can integrate this

1585
01:11:00,480 --> 01:11:03,179
equation and get an exponential decay of

1586
01:11:03,179 --> 01:11:06,120
the intensity due to the absorption

1587
01:11:06,120 --> 01:11:09,500
um in our device

1588
01:11:09,659 --> 01:11:12,120
um as it comes to higher intensities uh

1589
01:11:12,120 --> 01:11:15,000
we got a non-linear relation in the case

1590
01:11:15,000 --> 01:11:17,219
for the two Photon absorption

1591
01:11:17,219 --> 01:11:18,719
um and therefore we got

1592
01:11:18,719 --> 01:11:21,780
um yeah a dependency of the square of

1593
01:11:21,780 --> 01:11:23,219
the intensity

1594
01:11:23,219 --> 01:11:24,780
um for the absorption rate which will be

1595
01:11:24,780 --> 01:11:26,219
important

1596
01:11:26,219 --> 01:11:27,540
um later on

1597
01:11:27,540 --> 01:11:29,760
of course we can integrate this as well

1598
01:11:29,760 --> 01:11:32,760
and get an expression for the intensity

1599
01:11:32,760 --> 01:11:35,520
inside the device for the two Photon

1600
01:11:35,520 --> 01:11:38,940
absorption so now we can combine this as

1601
01:11:38,940 --> 01:11:41,760
a total absorption as a step further we

1602
01:11:41,760 --> 01:11:42,679
can

1603
01:11:42,679 --> 01:11:45,840
formulate the electron hole pair

1604
01:11:45,840 --> 01:11:48,900
um generation rate inside our device so

1605
01:11:48,900 --> 01:11:51,360
it's just a number of

1606
01:11:51,360 --> 01:11:54,300
um I've generated charge carriers

1607
01:11:54,300 --> 01:11:57,780
um in a yeah certain time step

1608
01:11:57,780 --> 01:12:00,179
um as I told you in our experiments we

1609
01:12:00,179 --> 01:12:01,920
only focused on the twofold and

1610
01:12:01,920 --> 01:12:04,500
absorption that's why we can neglect

1611
01:12:04,500 --> 01:12:07,140
um this contribution here

1612
01:12:07,140 --> 01:12:10,140
um and so we can theoretically formulate

1613
01:12:10,140 --> 01:12:12,480
um the number of the generated

1614
01:12:12,480 --> 01:12:13,460
um

1615
01:12:13,460 --> 01:12:17,640
charge carriers in our device

1616
01:12:17,640 --> 01:12:19,980
and again this is a very highly

1617
01:12:19,980 --> 01:12:23,820
nonlinear process and only valid for

1618
01:12:23,820 --> 01:12:26,280
very high intensities and Ultra short

1619
01:12:26,280 --> 01:12:28,140
laser pulses in the range of

1620
01:12:28,140 --> 01:12:31,140
femtoseconds

1621
01:12:31,440 --> 01:12:34,080
so while we are doing all these

1622
01:12:34,080 --> 01:12:37,620
considerations and the theory

1623
01:12:37,620 --> 01:12:39,600
um because we found some benefits of the

1624
01:12:39,600 --> 01:12:41,640
twofold and absorption compared to the

1625
01:12:41,640 --> 01:12:44,580
single Fortune absorption uh the first

1626
01:12:44,580 --> 01:12:46,260
one is the transparency um of the

1627
01:12:46,260 --> 01:12:48,840
Silicon second one is the focal width so

1628
01:12:48,840 --> 01:12:50,400
we got an

1629
01:12:50,400 --> 01:12:52,020
um effective Focus

1630
01:12:52,020 --> 01:12:54,360
um which is even below the theoretical

1631
01:12:54,360 --> 01:12:56,159
limits so how tight you can you can

1632
01:12:56,159 --> 01:12:58,159
focus your laser spot

1633
01:12:58,159 --> 01:13:01,080
and as a result we get a selective

1634
01:13:01,080 --> 01:13:04,500
excitation referred to the depth of the

1635
01:13:04,500 --> 01:13:06,900
material

1636
01:13:06,900 --> 01:13:09,600
so to make this uh more visual these

1637
01:13:09,600 --> 01:13:11,699
benefits we did a small simulation we

1638
01:13:11,699 --> 01:13:13,199
just used the equations

1639
01:13:13,199 --> 01:13:15,000
um I showed you before and put in our

1640
01:13:15,000 --> 01:13:16,920
laser parameters

1641
01:13:16,920 --> 01:13:18,840
um so you can see here on the right

1642
01:13:18,840 --> 01:13:21,600
um the simulation of the charge carrier

1643
01:13:21,600 --> 01:13:24,719
density inside our device for the

1644
01:13:24,719 --> 01:13:26,840
wavelength of 800

1645
01:13:26,840 --> 01:13:30,840
1064 and 2000 nanometers so commonly

1646
01:13:30,840 --> 01:13:32,820
used single floating absorption setup

1647
01:13:32,820 --> 01:13:38,100
and our new approach with the two photon

1648
01:13:38,100 --> 01:13:41,040
um absorption so it's kind of a top view

1649
01:13:41,040 --> 01:13:42,840
on the device and we are taking gear

1650
01:13:42,840 --> 01:13:44,940
from the from the bottom

1651
01:13:44,940 --> 01:13:47,640
um inside the chip

1652
01:13:47,640 --> 01:13:49,679
so the First Advantage as I told you is

1653
01:13:49,679 --> 01:13:51,540
the transparency therefore we can

1654
01:13:51,540 --> 01:13:52,920
compare

1655
01:13:52,920 --> 01:13:53,520
um

1656
01:13:53,520 --> 01:13:56,159
800 nanometer and the 2000 nanometers

1657
01:13:56,159 --> 01:13:58,140
that we see here and we have a lot of

1658
01:13:58,140 --> 01:14:00,659
absorption at the air silicon interface

1659
01:14:00,659 --> 01:14:02,940
and at the entrance of the of the chip

1660
01:14:02,940 --> 01:14:05,940
so we don't need to reach our our Target

1661
01:14:05,940 --> 01:14:08,280
um plane at 70 micrometers so that's

1662
01:14:08,280 --> 01:14:11,400
where we want to to attack inside the

1663
01:14:11,400 --> 01:14:14,159
chip because of the absorption of the

1664
01:14:14,159 --> 01:14:17,340
Silicon for 2000 nanometers of our and

1665
01:14:17,340 --> 01:14:19,260
proportion absorption

1666
01:14:19,260 --> 01:14:21,420
um we get a perfectly located spot

1667
01:14:21,420 --> 01:14:24,360
um at the at the Target area

1668
01:14:24,360 --> 01:14:26,100
um yeah because there's no absorption

1669
01:14:26,100 --> 01:14:30,000
and of the Silicon we have you know no

1670
01:14:30,000 --> 01:14:31,739
intensity losses

1671
01:14:31,739 --> 01:14:34,199
um at all

1672
01:14:34,199 --> 01:14:36,420
um this is beneficial because we don't

1673
01:14:36,420 --> 01:14:38,400
need to to thin our substrate or to

1674
01:14:38,400 --> 01:14:41,580
remove the Silicon substrates

1675
01:14:41,580 --> 01:14:44,219
um therefore we have no no risk of loss

1676
01:14:44,219 --> 01:14:45,300
or damage

1677
01:14:45,300 --> 01:14:47,100
due to terminal effects because of the

1678
01:14:47,100 --> 01:14:48,719
absorption

1679
01:14:48,719 --> 01:14:53,360
um yeah or through the training process

1680
01:14:53,520 --> 01:14:55,739
um the second benefit

1681
01:14:55,739 --> 01:14:58,440
um is the focal width so as you can see

1682
01:14:58,440 --> 01:15:01,020
here in figure C and second D for the

1683
01:15:01,020 --> 01:15:03,199
commonly used Spa

1684
01:15:03,199 --> 01:15:05,699
setup so

1685
01:15:05,699 --> 01:15:08,520
um we got six times more charge carriers

1686
01:15:08,520 --> 01:15:11,880
than for proof Vault and absorption and

1687
01:15:11,880 --> 01:15:14,219
yeah we are generating kind of a current

1688
01:15:14,219 --> 01:15:17,460
through the whole chip which can cause

1689
01:15:17,460 --> 01:15:22,080
latch up and and other effects

1690
01:15:22,140 --> 01:15:25,500
um for the 2 000 nanometer here

1691
01:15:25,500 --> 01:15:27,600
um because of this non-linearity inside

1692
01:15:27,600 --> 01:15:30,179
the material uh we're gonna focus with

1693
01:15:30,179 --> 01:15:32,760
an effective focal with um of a power

1694
01:15:32,760 --> 01:15:35,940
factor of 1 over square root two smaller

1695
01:15:35,940 --> 01:15:38,280
than for the single Photon absorption

1696
01:15:38,280 --> 01:15:41,219
and therefore we got our focal spots and

1697
01:15:41,219 --> 01:15:43,860
very symmetric and and localized

1698
01:15:43,860 --> 01:15:46,560
excitation inside the device

1699
01:15:46,560 --> 01:15:49,500
certain result overall we got the

1700
01:15:49,500 --> 01:15:51,780
precise excitation

1701
01:15:51,780 --> 01:15:54,360
um again in comparison if you get if you

1702
01:15:54,360 --> 01:15:56,219
get eight here we got the single Photon

1703
01:15:56,219 --> 01:15:59,219
absorption for 1064 nanometers so we got

1704
01:15:59,219 --> 01:16:03,540
a broad range where we excite charge

1705
01:16:03,540 --> 01:16:06,360
carriers and in comparison

1706
01:16:06,360 --> 01:16:08,520
the two Photon absorption here very

1707
01:16:08,520 --> 01:16:13,260
localized and sharp spot

1708
01:16:14,340 --> 01:16:17,100
so how we do this in the experiment so

1709
01:16:17,100 --> 01:16:19,260
how we can realize this as I told you we

1710
01:16:19,260 --> 01:16:21,239
need high intensities and they're very

1711
01:16:21,239 --> 01:16:23,520
short and Laser pulses

1712
01:16:23,520 --> 01:16:25,980
um and we at our chair can provide such

1713
01:16:25,980 --> 01:16:27,960
laser pulses and that's why this whole

1714
01:16:27,960 --> 01:16:32,400
project in the corporation started

1715
01:16:32,400 --> 01:16:34,800
um yeah so our laser system delivers uh

1716
01:16:34,800 --> 01:16:37,860
laser pulses with wavelength around 700

1717
01:16:37,860 --> 01:16:39,380
nanometers

1718
01:16:39,380 --> 01:16:42,179
and the price duration of 5 FM per

1719
01:16:42,179 --> 01:16:43,860
seconds

1720
01:16:43,860 --> 01:16:46,560
so at first we have to keep these pulses

1721
01:16:46,560 --> 01:16:48,420
as short as possible so we have to

1722
01:16:48,420 --> 01:16:50,580
compensate for this person this is done

1723
01:16:50,580 --> 01:16:53,400
by a few silica clouds which is

1724
01:16:53,400 --> 01:16:55,440
um another important

1725
01:16:55,440 --> 01:16:57,719
um component here in the setup

1726
01:16:57,719 --> 01:16:59,400
um is a Chopper wheel in the shutter so

1727
01:16:59,400 --> 01:17:01,500
we have to reduce the pulse repetition

1728
01:17:01,500 --> 01:17:03,840
rate from four kilohertz

1729
01:17:03,840 --> 01:17:06,800
um to single laser shots

1730
01:17:07,020 --> 01:17:08,159
um

1731
01:17:08,159 --> 01:17:09,980
and

1732
01:17:09,980 --> 01:17:12,840
another important component here is the

1733
01:17:12,840 --> 01:17:14,880
nonlinear Crystal so our laser system

1734
01:17:14,880 --> 01:17:18,300
delivers about 700 nanometers but as we

1735
01:17:18,300 --> 01:17:19,800
just learned we need

1736
01:17:19,800 --> 01:17:22,320
um around 2000 nanometer

1737
01:17:22,320 --> 01:17:24,620
um infrared light for the 240 absorption

1738
01:17:24,620 --> 01:17:27,540
and that's why we have to generate

1739
01:17:27,540 --> 01:17:29,640
um this wavelength here

1740
01:17:29,640 --> 01:17:32,699
um in a non-linear Crystal

1741
01:17:32,699 --> 01:17:35,100
um yeah so of course in the end we got

1742
01:17:35,100 --> 01:17:38,280
our objective and um

1743
01:17:38,280 --> 01:17:41,699
and the device and the test

1744
01:17:41,699 --> 01:17:44,340
so here in conclusion uh comparison

1745
01:17:44,340 --> 01:17:47,280
between the the parameters on the device

1746
01:17:47,280 --> 01:17:49,980
um compared um to the regular single

1747
01:17:49,980 --> 01:17:52,080
Photon absorption setup so most

1748
01:17:52,080 --> 01:17:53,100
important

1749
01:17:53,100 --> 01:17:53,880
um

1750
01:17:53,880 --> 01:17:56,880
parameters are here to focus with

1751
01:17:56,880 --> 01:17:59,100
um so we got an official focal width

1752
01:17:59,100 --> 01:18:02,400
that is larger than for the spa but we

1753
01:18:02,400 --> 01:18:03,719
have this effective

1754
01:18:03,719 --> 01:18:05,880
um nonlinear response of the material

1755
01:18:05,880 --> 01:18:08,340
which is way more smaller than for a

1756
01:18:08,340 --> 01:18:10,140
single 14 absorption and of course the

1757
01:18:10,140 --> 01:18:12,360
price duration with about 10 frames per

1758
01:18:12,360 --> 01:18:13,620
seconds

1759
01:18:13,620 --> 01:18:17,580
um again 800 picoseconds so now I hope I

1760
01:18:17,580 --> 01:18:18,900
could convince you on the on the

1761
01:18:18,900 --> 01:18:21,239
benefits of the 240 absorption at least

1762
01:18:21,239 --> 01:18:23,699
on the theoretical side but now border

1763
01:18:23,699 --> 01:18:26,520
represents our experimental findings

1764
01:18:26,520 --> 01:18:28,560
yeah I think I have to speed up a bit

1765
01:18:28,560 --> 01:18:31,860
because we're pretty late on time

1766
01:18:31,860 --> 01:18:35,159
um yeah so we used um this uh um the

1767
01:18:35,159 --> 01:18:38,820
setup and our regular Spa setup which is

1768
01:18:38,820 --> 01:18:42,179
shown here to do it um yeah some kind of

1769
01:18:42,179 --> 01:18:44,040
comparison which wasn't so easy in

1770
01:18:44,040 --> 01:18:46,679
practice so what we basically put some

1771
01:18:46,679 --> 01:18:48,960
two very basic experiments so we had two

1772
01:18:48,960 --> 01:18:50,340
arm cortex and zero based

1773
01:18:50,340 --> 01:18:52,800
microcontrollers and we basically did

1774
01:18:52,800 --> 01:18:54,300
some experiments on the on the ownership

1775
01:18:54,300 --> 01:18:56,880
SRAM in these these devices so we had an

1776
01:18:56,880 --> 01:19:00,360
infinian xmc which is 65 nanometer

1777
01:19:00,360 --> 01:19:03,719
technology and and nxp controller with

1778
01:19:03,719 --> 01:19:07,620
140 nanometer and technology and you

1779
01:19:07,620 --> 01:19:09,540
have used the invention chip for doing

1780
01:19:09,540 --> 01:19:13,080
an um some kind of precision um

1781
01:19:13,080 --> 01:19:15,179
comparison we scanned a certain area in

1782
01:19:15,179 --> 01:19:17,640
this SRAM the multiple laser shots per

1783
01:19:17,640 --> 01:19:21,000
location and I'm just yeah evaluated how

1784
01:19:21,000 --> 01:19:23,159
much single bit false we we were able to

1785
01:19:23,159 --> 01:19:25,980
to generate and for the TPA setup we

1786
01:19:25,980 --> 01:19:29,040
achieved in 50 of the cases at the best

1787
01:19:29,040 --> 01:19:32,159
locations and and a single bit fault

1788
01:19:32,159 --> 01:19:34,679
um not with the SBA setup and that's

1789
01:19:34,679 --> 01:19:36,840
astonishing as you saw on the on the

1790
01:19:36,840 --> 01:19:39,239
previous slide we nominally have here a

1791
01:19:39,239 --> 01:19:41,460
much bigger spot size with a TBA setup

1792
01:19:41,460 --> 01:19:43,140
so that shows that due to this

1793
01:19:43,140 --> 01:19:45,420
non-linearity in the generated charge

1794
01:19:45,420 --> 01:19:47,400
carrier density we get a much sharper

1795
01:19:47,400 --> 01:19:49,920
effect here and

1796
01:19:49,920 --> 01:19:52,620
um then we'll look at a second chip here

1797
01:19:52,620 --> 01:19:54,120
this was a chip

1798
01:19:54,120 --> 01:19:56,100
um yeah we also scanned the SRAM region

1799
01:19:56,100 --> 01:19:58,260
of this chip we had problems with that

1800
01:19:58,260 --> 01:20:01,440
in in previous experiments and with the

1801
01:20:01,440 --> 01:20:04,620
regular lfi setup once you um yeah

1802
01:20:04,620 --> 01:20:06,600
targeted the SRAM

1803
01:20:06,600 --> 01:20:08,400
um the chip immediately reacts with a

1804
01:20:08,400 --> 01:20:10,080
with a hard reset

1805
01:20:10,080 --> 01:20:12,000
um and that wasn't circumventable even

1806
01:20:12,000 --> 01:20:13,920
if you tuned the laser power

1807
01:20:13,920 --> 01:20:17,640
um way down was either nothing or if you

1808
01:20:17,640 --> 01:20:19,440
if you tune it up a bit you you directly

1809
01:20:19,440 --> 01:20:23,760
got a hard reset but no no Faults so to

1810
01:20:23,760 --> 01:20:24,900
ever

1811
01:20:24,900 --> 01:20:27,540
um our explanation for that was that we

1812
01:20:27,540 --> 01:20:30,000
are our hypothesis that is um that we

1813
01:20:30,000 --> 01:20:32,219
triggered actually uh ledge up effects

1814
01:20:32,219 --> 01:20:35,040
inside the device and

1815
01:20:35,040 --> 01:20:36,780
um latch up effects are yeah short

1816
01:20:36,780 --> 01:20:39,120
circuits actually and this is detected

1817
01:20:39,120 --> 01:20:41,280
by the brown art detection

1818
01:20:41,280 --> 01:20:43,260
um we're quickly explained this here on

1819
01:20:43,260 --> 01:20:46,860
the slides what you see here uh is a

1820
01:20:46,860 --> 01:20:48,780
cross-section from a regular CMOS

1821
01:20:48,780 --> 01:20:50,880
inverter and for fault injection we

1822
01:20:50,880 --> 01:20:53,580
ideally wanted did want to inject charge

1823
01:20:53,580 --> 01:20:57,120
carers here in the in the reverse biased

1824
01:20:57,120 --> 01:21:00,000
um the end Junctions of the of the of

1825
01:21:00,000 --> 01:21:02,880
The Blocking um mosfet so that depends

1826
01:21:02,880 --> 01:21:04,739
on the actual data value which one of

1827
01:21:04,739 --> 01:21:07,020
them is is false sensitive but that's

1828
01:21:07,020 --> 01:21:09,120
where we want to to have our charge

1829
01:21:09,120 --> 01:21:11,460
carriers however

1830
01:21:11,460 --> 01:21:14,460
um they are also parasitic bipolar

1831
01:21:14,460 --> 01:21:16,560
Junction transistors in this the a

1832
01:21:16,560 --> 01:21:18,840
scheme which I depicted here by this

1833
01:21:18,840 --> 01:21:21,140
dashed line and they form a circuit

1834
01:21:21,140 --> 01:21:23,280
circuitry which you can see here on the

1835
01:21:23,280 --> 01:21:25,620
right the problem with that is if we

1836
01:21:25,620 --> 01:21:28,020
induce this photo current there which is

1837
01:21:28,020 --> 01:21:29,420
labeled red

1838
01:21:29,420 --> 01:21:32,300
yeah we have a current flow through this

1839
01:21:32,300 --> 01:21:35,520
resistor which results in a voltage drop

1840
01:21:35,520 --> 01:21:37,860
which will then open this transistor

1841
01:21:37,860 --> 01:21:41,880
allowing to flow current here and this

1842
01:21:41,880 --> 01:21:43,920
will then also open this transistor

1843
01:21:43,920 --> 01:21:46,020
allowing to current flow here and so

1844
01:21:46,020 --> 01:21:47,820
this whole thing latches up there the

1845
01:21:47,820 --> 01:21:49,920
name comes from and

1846
01:21:49,920 --> 01:21:51,480
um even if there's photo current then

1847
01:21:51,480 --> 01:21:55,260
vanishes this thing stays active and we

1848
01:21:55,260 --> 01:21:57,480
have a short circuit basically which is

1849
01:21:57,480 --> 01:21:59,179
only resolvable by

1850
01:21:59,179 --> 01:22:02,820
yeah reset of the device that's the only

1851
01:22:02,820 --> 01:22:06,120
way to get out of that and if that

1852
01:22:06,120 --> 01:22:07,739
happens or not or likely that is to

1853
01:22:07,739 --> 01:22:10,320
happen largely depends on the exact chip

1854
01:22:10,320 --> 01:22:12,480
technology

1855
01:22:12,480 --> 01:22:15,120
um for some it's likely for others not

1856
01:22:15,120 --> 01:22:18,000
so much and so we repeated the whole

1857
01:22:18,000 --> 01:22:20,460
experiment here with our TPA setup and

1858
01:22:20,460 --> 01:22:22,320
looked at two locations and specific

1859
01:22:22,320 --> 01:22:25,199
here and the result which we saw was um

1860
01:22:25,199 --> 01:22:27,360
that we had no problems at all injecting

1861
01:22:27,360 --> 01:22:30,179
faults um here and

1862
01:22:30,179 --> 01:22:33,060
um what you see is basically just an and

1863
01:22:33,060 --> 01:22:36,960
depiction of the number of uh injector

1864
01:22:36,960 --> 01:22:38,520
single bit faults that's not so

1865
01:22:38,520 --> 01:22:40,140
important actually

1866
01:22:40,140 --> 01:22:42,780
um our explanation for that is that um

1867
01:22:42,780 --> 01:22:45,659
that we um yeah have drastically less

1868
01:22:45,659 --> 01:22:47,880
charged careers in the Silicon substrate

1869
01:22:47,880 --> 01:22:50,460
and that's why this works

1870
01:22:50,460 --> 01:22:52,140
um yeah in the paper we also discussed

1871
01:22:52,140 --> 01:22:54,420
the the impact on certain count counter

1872
01:22:54,420 --> 01:22:55,320
measures

1873
01:22:55,320 --> 01:22:57,380
um

1874
01:22:57,659 --> 01:23:00,000
where we had might have slightly

1875
01:23:00,000 --> 01:23:00,739
um

1876
01:23:00,739 --> 01:23:03,420
advantages for for sensor-based counter

1877
01:23:03,420 --> 01:23:04,920
Metals for a Nancy it doesn't make a

1878
01:23:04,920 --> 01:23:07,739
difference this is uh quite obvious I

1879
01:23:07,739 --> 01:23:08,760
would say

1880
01:23:08,760 --> 01:23:10,080
um for something that most prominent

1881
01:23:10,080 --> 01:23:12,719
light detectors for example

1882
01:23:12,719 --> 01:23:14,159
um due to the

1883
01:23:14,159 --> 01:23:16,140
sharper excitation of the of the

1884
01:23:16,140 --> 01:23:18,540
material it's it will be easier to to to

1885
01:23:18,540 --> 01:23:22,080
get um yeah in the in the uh inject

1886
01:23:22,080 --> 01:23:23,400
faults and in the vicinity of those

1887
01:23:23,400 --> 01:23:25,739
without triggering like those so but um

1888
01:23:25,739 --> 01:23:27,120
for Motor Vehicles you would have to

1889
01:23:27,120 --> 01:23:28,800
look in the paper I would say so in

1890
01:23:28,800 --> 01:23:30,000
conclusion

1891
01:23:30,000 --> 01:23:30,780
um

1892
01:23:30,780 --> 01:23:33,540
we have shown that the two two Photon

1893
01:23:33,540 --> 01:23:36,000
absorption um actually has quite some

1894
01:23:36,000 --> 01:23:39,300
nice um advantages for um laser-based

1895
01:23:39,300 --> 01:23:40,980
fault injection

1896
01:23:40,980 --> 01:23:44,040
um we have very good charge career

1897
01:23:44,040 --> 01:23:44,719
um

1898
01:23:44,719 --> 01:23:47,460
density only in the focal point this

1899
01:23:47,460 --> 01:23:50,280
means that we only uh also don't have to

1900
01:23:50,280 --> 01:23:51,780
bother with the Silicon substrate

1901
01:23:51,780 --> 01:23:54,540
thickness and even our

1902
01:23:54,540 --> 01:23:57,179
um so we we have it the spot is

1903
01:23:57,179 --> 01:23:58,260
vertically

1904
01:23:58,260 --> 01:24:01,739
um located in in the Silicon it's also

1905
01:24:01,739 --> 01:24:03,659
more narrow in the in the in the

1906
01:24:03,659 --> 01:24:06,060
horizontal distribution meaning that we

1907
01:24:06,060 --> 01:24:08,699
have a smaller effective spot size which

1908
01:24:08,699 --> 01:24:12,420
is uh quite advantageous and yeah that

1909
01:24:12,420 --> 01:24:15,060
can help us circumventing certain um

1910
01:24:15,060 --> 01:24:19,199
counter measures and yeah there's uh

1911
01:24:19,199 --> 01:24:21,780
further potential for more research uh

1912
01:24:21,780 --> 01:24:23,640
to to do that we were only able to do

1913
01:24:23,640 --> 01:24:25,980
very limited results so far but yeah

1914
01:24:25,980 --> 01:24:28,020
that will conclude the talk and thank

1915
01:24:28,020 --> 01:24:30,620
you for your attention

1916
01:24:35,940 --> 01:24:40,519
okay we have time for some questions

1917
01:24:46,040 --> 01:24:49,640
yes Parish

1918
01:25:08,540 --> 01:25:11,420
thank you

1919
01:25:11,420 --> 01:25:15,659
so our reason for the 2000 nanometer

1920
01:25:15,659 --> 01:25:16,440
um

1921
01:25:16,440 --> 01:25:20,940
so we we thought simple so with 1000

1922
01:25:20,940 --> 01:25:23,760
nanometer you got the perfect perfectly

1923
01:25:23,760 --> 01:25:26,100
energy for the for the band Gap and with

1924
01:25:26,100 --> 01:25:28,560
double the wavelength you got half the

1925
01:25:28,560 --> 01:25:31,020
bank of energy so this was our our

1926
01:25:31,020 --> 01:25:32,580
simple approach

1927
01:25:32,580 --> 01:25:34,260
um in fact

1928
01:25:34,260 --> 01:25:37,860
um you can use 1500 nanometer and get

1929
01:25:37,860 --> 01:25:39,120
even better results because the

1930
01:25:39,120 --> 01:25:40,380
non-linear

1931
01:25:40,380 --> 01:25:42,659
um reaction of the material

1932
01:25:42,659 --> 01:25:43,320
um

1933
01:25:43,320 --> 01:25:47,040
is a bit better and you get on yeah more

1934
01:25:47,040 --> 01:25:50,100
sharp focused spots of course the

1935
01:25:50,100 --> 01:25:51,420
shorter wavelength to get a better

1936
01:25:51,420 --> 01:25:54,179
better Precision so that was just the

1937
01:25:54,179 --> 01:25:55,679
first experiment we did we discussed it

1938
01:25:55,679 --> 01:25:57,300
in the paper that of course a bit

1939
01:25:57,300 --> 01:25:59,159
shorter would be beneficial but you have

1940
01:25:59,159 --> 01:26:01,380
to be careful in our experiment we also

1941
01:26:01,380 --> 01:26:03,600
take took care that we um only had the

1942
01:26:03,600 --> 01:26:05,639
two Photon absorption effects so we

1943
01:26:05,639 --> 01:26:08,159
wanted to stay out of the of the of

1944
01:26:08,159 --> 01:26:10,380
everything below 1000 and so to say

1945
01:26:10,380 --> 01:26:11,460
otherwise we have a position

1946
01:26:11,460 --> 01:26:14,639
superposition of both effects and

1947
01:26:14,639 --> 01:26:17,100
um you also have to to to bear in mind

1948
01:26:17,100 --> 01:26:19,500
that was seen on on one of the slides

1949
01:26:19,500 --> 01:26:22,199
the the width of the spectrum

1950
01:26:22,199 --> 01:26:24,719
um you can't do that arbitrarily small

1951
01:26:24,719 --> 01:26:27,060
that is just because

1952
01:26:27,060 --> 01:26:29,580
um there's a physical relation behind

1953
01:26:29,580 --> 01:26:31,560
that the shorter your pulse is and we

1954
01:26:31,560 --> 01:26:33,600
have really short pulses here the

1955
01:26:33,600 --> 01:26:35,639
broader it gets in the Spectrum so you

1956
01:26:35,639 --> 01:26:38,820
can't have both and I can't give you the

1957
01:26:38,820 --> 01:26:41,040
exact numbers for 10 frame to seconds

1958
01:26:41,040 --> 01:26:42,980
how

1959
01:26:42,980 --> 01:26:46,440
shop you can do it in the Spectrum

1960
01:26:46,440 --> 01:26:49,500
um a bit better probably than that but

1961
01:26:49,500 --> 01:26:51,800
um yeah

1962
01:26:53,040 --> 01:26:57,560
yes one more there behind you

1963
01:27:13,679 --> 01:27:14,700
here is

1964
01:27:14,700 --> 01:27:21,820
[Music]

1965
01:27:23,840 --> 01:27:26,699
that was perhaps if I got the question

1966
01:27:26,699 --> 01:27:28,620
correctly and a misconception we didn't

1967
01:27:28,620 --> 01:27:31,199
do experiments on those here this was

1968
01:27:31,199 --> 01:27:32,820
just something we discussed in the paper

1969
01:27:32,820 --> 01:27:37,199
this is not uh uh covered or not

1970
01:27:37,199 --> 01:27:39,179
um there were no practical experiments

1971
01:27:39,179 --> 01:27:42,780
on those here so we're just reason we we

1972
01:27:42,780 --> 01:27:44,820
just reasoned about what might be be

1973
01:27:44,820 --> 01:27:47,040
benefits because it was also practically

1974
01:27:47,040 --> 01:27:49,440
very difficult to to evaluate the ones

1975
01:27:49,440 --> 01:27:51,480
for for the setup reasons we had is not

1976
01:27:51,480 --> 01:27:53,219
not so easy to use actually and we had

1977
01:27:53,219 --> 01:27:55,440
limited measuring time because the Laser

1978
01:27:55,440 --> 01:27:56,520
Source was also used for other

1979
01:27:56,520 --> 01:28:01,080
experiments and and also from uh from

1980
01:28:01,080 --> 01:28:02,639
the security side it's actually quite

1981
01:28:02,639 --> 01:28:04,199
hard to find Targets where you can say

1982
01:28:04,199 --> 01:28:05,940
that the specific counter measures in

1983
01:28:05,940 --> 01:28:08,219
there because normally you don't get

1984
01:28:08,219 --> 01:28:09,420
this information from a commercial

1985
01:28:09,420 --> 01:28:11,040
product how the content measures in

1986
01:28:11,040 --> 01:28:13,679
there look like so that was a bit of a

1987
01:28:13,679 --> 01:28:15,960
practical problem somebody has

1988
01:28:15,960 --> 01:28:19,440
um Target which one might to try you can

1989
01:28:19,440 --> 01:28:22,440
uh yeah I would be glad to to talk about

1990
01:28:22,440 --> 01:28:24,060
that

1991
01:28:24,060 --> 01:28:26,600
foreign

1992
01:28:26,880 --> 01:28:30,980
last minute questions last

1993
01:28:31,380 --> 01:28:34,320
let me just check chat

1994
01:28:34,320 --> 01:28:37,020
oh there is some

1995
01:28:37,020 --> 01:28:38,580
okay

1996
01:28:38,580 --> 01:28:40,679
was there any trials from front side

1997
01:28:40,679 --> 01:28:43,679
dealing is still required for backside

1998
01:28:43,679 --> 01:28:45,420
and sorry something about front side was

1999
01:28:45,420 --> 01:28:48,000
there any trials from front side

2000
01:28:48,000 --> 01:28:51,360
uh no no okay so no trash out of the

2001
01:28:51,360 --> 01:28:54,000
reflection of course it also holds for

2002
01:28:54,000 --> 01:28:56,040
the 2000 nanometers and that won't get

2003
01:28:56,040 --> 01:28:59,159
better now and is thinning still

2004
01:28:59,159 --> 01:29:01,159
required for backside

2005
01:29:01,159 --> 01:29:06,780
uh no no okay cool thank you okay let's

2006
01:29:06,780 --> 01:29:09,440
thank the speaker

2007
01:29:14,280 --> 01:29:16,860
uh so this finishes the first session

2008
01:29:16,860 --> 01:29:19,620
now it's coffee break one important

2009
01:29:19,620 --> 01:29:22,080
announcement there is a lot of posters

2010
01:29:22,080 --> 01:29:24,900
outside so use the opportunity and check

2011
01:29:24,900 --> 01:29:27,920
some of the posters

