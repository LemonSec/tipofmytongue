1
00:00:04,400 --> 00:00:06,560
hello i would like to talk about our

2
00:00:06,560 --> 00:00:09,920
paper timing proposal crafting that

3
00:00:09,920 --> 00:00:12,559
puzzle example choose timing rigs

4
00:00:12,559 --> 00:00:17,199
against dnn on embedded devices i am not

5
00:00:17,199 --> 00:00:21,199
guy from mississippi corporation

6
00:00:27,039 --> 00:00:29,279
this file showed a quick overview of my

7
00:00:29,279 --> 00:00:33,440
talk we focus on advanced example a is

8
00:00:33,440 --> 00:00:35,680
we introduce a fast attack to cracked

9
00:00:35,680 --> 00:00:37,760
aes that is based on differential

10
00:00:37,760 --> 00:00:41,600
processing time according to input data

11
00:00:41,600 --> 00:00:44,160
the problem is that converting a is

12
00:00:44,160 --> 00:00:45,520
needs

13
00:00:45,520 --> 00:00:47,840
training data module architecture and

14
00:00:47,840 --> 00:00:51,760
parameter subject model or module school

15
00:00:51,760 --> 00:00:54,800
but our attack factor is by using only

16
00:00:54,800 --> 00:00:57,600
processing time on dnns on embedded

17
00:00:57,600 --> 00:00:59,280
devices

18
00:00:59,280 --> 00:01:02,079
our contribution we propose a noble

19
00:01:02,079 --> 00:01:04,879
bubbles attack to cracked air is by

20
00:01:04,879 --> 00:01:07,840
using certain weeks

21
00:01:07,840 --> 00:01:10,960
we identify two relationship between the

22
00:01:10,960 --> 00:01:13,439
processing time and number of activated

23
00:01:13,439 --> 00:01:14,479
nodes

24
00:01:14,479 --> 00:01:17,680
and between the number of active nodes

25
00:01:17,680 --> 00:01:20,000
and aes

26
00:01:20,000 --> 00:01:22,960
and we clarify that cause of our tag by

27
00:01:22,960 --> 00:01:24,880
implementing a counter measure to

28
00:01:24,880 --> 00:01:28,320
prevent the timing rigs

29
00:01:33,920 --> 00:01:36,479
a is a small perturbation to the input

30
00:01:36,479 --> 00:01:38,560
data of a deep learning model for

31
00:01:38,560 --> 00:01:40,799
misclassification

32
00:01:40,799 --> 00:01:41,680
is

33
00:01:41,680 --> 00:01:44,640
easy to exploit and have a large impact

34
00:01:44,640 --> 00:01:46,320
on their world

35
00:01:46,320 --> 00:01:49,280
for example attaching small sticker to

36
00:01:49,280 --> 00:01:52,720
the rule sign as nae

37
00:01:52,720 --> 00:01:54,960
an automated drawing system is

38
00:01:54,960 --> 00:01:59,679
misrecognized stop at speed limiting

39
00:02:04,479 --> 00:02:06,880
this table shows the taxonomy of

40
00:02:06,880 --> 00:02:10,000
grafting aes the methods are classified

41
00:02:10,000 --> 00:02:12,319
into white box attack and black box

42
00:02:12,319 --> 00:02:13,760
attack mainly

43
00:02:13,760 --> 00:02:15,920
white box attack use twenty million

44
00:02:15,920 --> 00:02:18,480
information such as the architecture and

45
00:02:18,480 --> 00:02:21,599
parameter of dnns the bus engineering

46
00:02:21,599 --> 00:02:23,520
countermeasures such as the model

47
00:02:23,520 --> 00:02:25,040
encryption

48
00:02:25,040 --> 00:02:27,760
protect the model information

49
00:02:27,760 --> 00:02:30,879
the block box attacks use only input and

50
00:02:30,879 --> 00:02:34,319
output data of dnns from the viewpoint

51
00:02:34,319 --> 00:02:38,239
of attacker black box attacks are more

52
00:02:38,239 --> 00:02:41,280
serious than white box attacks because

53
00:02:41,280 --> 00:02:44,319
of the attacker's knowledge

54
00:02:44,319 --> 00:02:47,120
but black box attacks are more difficult

55
00:02:47,120 --> 00:02:50,000
to craft effective aes than white box

56
00:02:50,000 --> 00:02:51,680
attacks

57
00:02:51,680 --> 00:02:54,720
in the black box attacks the attacks

58
00:02:54,720 --> 00:02:57,599
using transability can craft effective

59
00:02:57,599 --> 00:02:59,360
aes

60
00:02:59,360 --> 00:03:02,400
the attacks craft substitute model using

61
00:03:02,400 --> 00:03:05,680
the input and output data and then do

62
00:03:05,680 --> 00:03:08,480
white box attacks using the modeling

63
00:03:08,480 --> 00:03:10,319
mission

64
00:03:10,319 --> 00:03:13,200
but transparency depends on the kind of

65
00:03:13,200 --> 00:03:14,720
trend model

66
00:03:14,720 --> 00:03:18,000
and the trend motif with deeper hidden

67
00:03:18,000 --> 00:03:22,400
layer have robustness of transability

68
00:03:22,400 --> 00:03:24,400
the attacks using

69
00:03:24,400 --> 00:03:26,720
using model score are

70
00:03:26,720 --> 00:03:30,080
also one of the black box attacks

71
00:03:30,080 --> 00:03:32,720
the attacks focus on the changes of

72
00:03:32,720 --> 00:03:34,799
output probability

73
00:03:34,799 --> 00:03:37,120
the confidence deduction counter measure

74
00:03:37,120 --> 00:03:39,200
is effective to mask the output

75
00:03:39,200 --> 00:03:40,720
probability

76
00:03:40,720 --> 00:03:44,080
the point is that crafting the aes needs

77
00:03:44,080 --> 00:03:47,920
some model information so our motivation

78
00:03:47,920 --> 00:03:50,720
is that can we get some information from

79
00:03:50,720 --> 00:03:52,720
sergeant ricks to

80
00:03:52,720 --> 00:03:56,200
quark a's

81
00:04:01,360 --> 00:04:03,680
related work uses trend model

82
00:04:03,680 --> 00:04:04,879
information

83
00:04:04,879 --> 00:04:07,439
some works reveal the model architecture

84
00:04:07,439 --> 00:04:10,000
and parameters from cycling rigs such as

85
00:04:10,000 --> 00:04:12,080
electromagnetic radiation on embedded

86
00:04:12,080 --> 00:04:13,519
devices

87
00:04:13,519 --> 00:04:14,480
especially

88
00:04:14,480 --> 00:04:17,120
existing blocks attack use output

89
00:04:17,120 --> 00:04:18,720
probability

90
00:04:18,720 --> 00:04:21,040
our approach is the black box attack

91
00:04:21,040 --> 00:04:23,680
using certain weeks so research question

92
00:04:23,680 --> 00:04:26,960
is that can attack a craft a is using

93
00:04:26,960 --> 00:04:29,919
certain weeks if the output property is

94
00:04:29,919 --> 00:04:32,479
masked

95
00:04:37,759 --> 00:04:40,320
this slide shows the sweat model we

96
00:04:40,320 --> 00:04:43,680
focused on dnns on embedded devices the

97
00:04:43,680 --> 00:04:46,639
tnn on embedded devices are attracted

98
00:04:46,639 --> 00:04:49,120
interests because of distributed and

99
00:04:49,120 --> 00:04:51,759
real-time processing on site

100
00:04:51,759 --> 00:04:54,320
an initial report mapping the asset and

101
00:04:54,320 --> 00:04:57,680
threat of ai note physical attacks to

102
00:04:57,680 --> 00:04:58,960
hardware

103
00:04:58,960 --> 00:05:02,560
so in case of embedded devices attackers

104
00:05:02,560 --> 00:05:04,960
can measure surgical information such as

105
00:05:04,960 --> 00:05:06,880
processing time

106
00:05:06,880 --> 00:05:09,600
we assume two security functions for

107
00:05:09,600 --> 00:05:13,360
embedded devices model encryption and

108
00:05:13,360 --> 00:05:15,680
confidence deduction

109
00:05:15,680 --> 00:05:19,120
so the attackers measure to

110
00:05:19,120 --> 00:05:22,960
craft aes by using the input data of

111
00:05:22,960 --> 00:05:26,000
travel and certain weeks

112
00:05:26,000 --> 00:05:28,880
finally the attackers craft a is on a

113
00:05:28,880 --> 00:05:33,280
target device and then input the ae to

114
00:05:33,280 --> 00:05:37,960
output devices for misclassification

115
00:05:43,039 --> 00:05:46,080
i'm expand our approach to craft a is

116
00:05:46,080 --> 00:05:49,120
using certain weeks in related work

117
00:05:49,120 --> 00:05:52,080
vatina reported that some types of

118
00:05:52,080 --> 00:05:54,160
activation function have differential

119
00:05:54,160 --> 00:05:56,880
processing times depending on the input

120
00:05:56,880 --> 00:05:58,160
data

121
00:05:58,160 --> 00:06:01,360
for example in case of a layer function

122
00:06:01,360 --> 00:06:05,039
it is implemented like this source code

123
00:06:05,039 --> 00:06:08,080
so depending on the input data

124
00:06:08,080 --> 00:06:11,360
the red function indicates two cycles as

125
00:06:11,360 --> 00:06:14,080
differential processing time

126
00:06:14,080 --> 00:06:15,840
when we defined

127
00:06:15,840 --> 00:06:18,319
p a is a processing time when it is

128
00:06:18,319 --> 00:06:19,600
activated

129
00:06:19,600 --> 00:06:21,039
tna

130
00:06:21,039 --> 00:06:22,080
is

131
00:06:22,080 --> 00:06:25,360
processing time when it is not activated

132
00:06:25,360 --> 00:06:29,360
the ta is longer than tnn

133
00:06:29,360 --> 00:06:31,280
but dina also

134
00:06:31,280 --> 00:06:32,960
showed

135
00:06:32,960 --> 00:06:35,280
other activation functions such as

136
00:06:35,280 --> 00:06:37,680
sigmoid also have a data dependent

137
00:06:37,680 --> 00:06:40,479
timing leaks

138
00:06:46,160 --> 00:06:48,720
now we can observe change in the number

139
00:06:48,720 --> 00:06:53,039
of activated nodes on dns from the data

140
00:06:53,039 --> 00:06:55,599
dependent timing rigs of activation

141
00:06:55,599 --> 00:06:56,960
functions

142
00:06:56,960 --> 00:07:00,240
for example in case of dna with red

143
00:07:00,240 --> 00:07:01,680
function

144
00:07:01,680 --> 00:07:05,280
we can describe the processing time t

145
00:07:05,280 --> 00:07:09,039
according to the input data x1 and x2

146
00:07:09,039 --> 00:07:15,759
tx1 is 4 ta plus 5 tna plus alpha

147
00:07:15,759 --> 00:07:20,639
t x two is h t a plus one t n a plus

148
00:07:20,639 --> 00:07:22,560
alpha

149
00:07:22,560 --> 00:07:24,880
according to tying rigs of value

150
00:07:24,880 --> 00:07:26,080
function

151
00:07:26,080 --> 00:07:31,280
t x two is longer than t x one so

152
00:07:31,280 --> 00:07:34,800
the dna with more activated nodes is

153
00:07:34,800 --> 00:07:38,080
more time consuming

154
00:07:43,280 --> 00:07:45,360
i'm explained that increasing the number

155
00:07:45,360 --> 00:07:47,919
of activated nodes affect the output

156
00:07:47,919 --> 00:07:50,639
data of dna because of the increased

157
00:07:50,639 --> 00:07:53,120
number of propagated values

158
00:07:53,120 --> 00:07:56,319
for example in case of a dnn

159
00:07:56,319 --> 00:08:00,479
when the input data is x1 and x2

160
00:08:00,479 --> 00:08:03,039
if the number of activated nodes

161
00:08:03,039 --> 00:08:04,319
increased

162
00:08:04,319 --> 00:08:05,120
then

163
00:08:05,120 --> 00:08:07,759
the output probability of correct level

164
00:08:07,759 --> 00:08:10,400
is more affect than the output

165
00:08:10,400 --> 00:08:14,240
probability of fewer activated nodes

166
00:08:14,240 --> 00:08:16,879
next we simulated the connection between

167
00:08:16,879 --> 00:08:19,919
the number of activated nodes and the

168
00:08:19,919 --> 00:08:24,599
output probability of correct travels

169
00:08:29,680 --> 00:08:32,559
the simulation use a basic mfb model for

170
00:08:32,559 --> 00:08:36,000
emini's dataset or linux os computer we

171
00:08:36,000 --> 00:08:38,799
focused on activation node in the first

172
00:08:38,799 --> 00:08:42,000
layer that is sensitive to input data of

173
00:08:42,000 --> 00:08:43,440
the model

174
00:08:43,440 --> 00:08:46,399
we manipulate the number of deactivation

175
00:08:46,399 --> 00:08:47,760
nodes

176
00:08:47,760 --> 00:08:50,480
the simulation naturally denies the

177
00:08:50,480 --> 00:08:54,399
activation nodes with activated value or

178
00:08:54,399 --> 00:08:57,680
non-activated value

179
00:09:03,360 --> 00:09:05,839
this graph shows relationship between

180
00:09:05,839 --> 00:09:08,480
the change in the number of all layers

181
00:09:08,480 --> 00:09:11,279
activated nodes and the mean output

182
00:09:11,279 --> 00:09:13,920
probability of the correct level

183
00:09:13,920 --> 00:09:17,519
the output probability decreases as the

184
00:09:17,519 --> 00:09:19,680
increase in the number of activated

185
00:09:19,680 --> 00:09:22,680
nodes

186
00:09:27,839 --> 00:09:30,000
in the summation this graph shows the

187
00:09:30,000 --> 00:09:32,320
relationship between the change in the

188
00:09:32,320 --> 00:09:35,440
number of all layers activated nodes and

189
00:09:35,440 --> 00:09:38,399
the number of successful attack it is a

190
00:09:38,399 --> 00:09:41,680
misclassification rate

191
00:09:41,760 --> 00:09:44,240
the decrease in the output probability

192
00:09:44,240 --> 00:09:47,120
cause misclassification and increase the

193
00:09:47,120 --> 00:09:51,160
number of successful attack

194
00:09:56,480 --> 00:09:58,959
according to the simulation we define

195
00:09:58,959 --> 00:10:00,800
two relation shape between the

196
00:10:00,800 --> 00:10:03,279
processing time and number of activated

197
00:10:03,279 --> 00:10:06,160
node and between the number of activated

198
00:10:06,160 --> 00:10:08,720
nodes and aes

199
00:10:08,720 --> 00:10:12,399
so the strategy of our tag is firstly we

200
00:10:12,399 --> 00:10:14,959
add a small perturbation to a part of

201
00:10:14,959 --> 00:10:16,880
input data

202
00:10:16,880 --> 00:10:20,000
and then we measured the processing time

203
00:10:20,000 --> 00:10:21,839
of prediction

204
00:10:21,839 --> 00:10:26,720
finally we craft aid with timing weeks

205
00:10:26,720 --> 00:10:28,480
the air is

206
00:10:28,480 --> 00:10:30,839
called misclassification to other

207
00:10:30,839 --> 00:10:34,240
devices that have the same dna model of

208
00:10:34,240 --> 00:10:37,279
target device

209
00:10:42,959 --> 00:10:46,640
we demonstrated our attack on mcu's

210
00:10:46,640 --> 00:10:49,360
this figure showed the setup of our

211
00:10:49,360 --> 00:10:51,040
experiment

212
00:10:51,040 --> 00:10:54,000
we used micro tensor framework to press

213
00:10:54,000 --> 00:10:57,279
dna model on mcu's

214
00:10:57,279 --> 00:11:00,320
and we deployed a basic mmb model for

215
00:11:00,320 --> 00:11:04,160
eminis dataset and cnn model for c410

216
00:11:04,160 --> 00:11:09,240
dataset on two mcu's

217
00:11:14,640 --> 00:11:16,640
these graphs showed histogram of

218
00:11:16,640 --> 00:11:19,279
successful attack to the mmp model on

219
00:11:19,279 --> 00:11:20,560
the mcu

220
00:11:20,560 --> 00:11:22,399
the data showed the

221
00:11:22,399 --> 00:11:24,079
perturbation bound until the

222
00:11:24,079 --> 00:11:26,399
misclassification is caused

223
00:11:26,399 --> 00:11:29,120
we compared with random noise under the

224
00:11:29,120 --> 00:11:31,839
same condition without the use of output

225
00:11:31,839 --> 00:11:33,920
probability

226
00:11:33,920 --> 00:11:36,560
these graphs indicated that our

227
00:11:36,560 --> 00:11:39,680
attracting to the fact a is with small

228
00:11:39,680 --> 00:11:44,239
perturbation compared with random noise

229
00:11:50,160 --> 00:11:53,120
this graph shows histogram of successful

230
00:11:53,120 --> 00:11:56,959
attacks to the cnn model on the mcu

231
00:11:56,959 --> 00:11:59,200
the data shows the perturbation bound

232
00:11:59,200 --> 00:12:01,839
until the misclassification is caused

233
00:12:01,839 --> 00:12:04,240
we compared with random noise under the

234
00:12:04,240 --> 00:12:06,800
same condition without the use of output

235
00:12:06,800 --> 00:12:08,959
probability

236
00:12:08,959 --> 00:12:12,160
these graphs also indicated that our

237
00:12:12,160 --> 00:12:15,279
attack tend to craft a is with small

238
00:12:15,279 --> 00:12:19,959
perturbation to the cnn model

239
00:12:25,040 --> 00:12:27,839
next we analyze the cause of our attack

240
00:12:27,839 --> 00:12:30,000
by using constant time against data

241
00:12:30,000 --> 00:12:32,240
depends timing leaks

242
00:12:32,240 --> 00:12:35,279
we assumed constant time to prevent the

243
00:12:35,279 --> 00:12:37,920
timing rigs depending on the input data

244
00:12:37,920 --> 00:12:40,320
of activation function

245
00:12:40,320 --> 00:12:43,120
so we improved activation function to

246
00:12:43,120 --> 00:12:45,279
consume the same processing time

247
00:12:45,279 --> 00:12:48,000
regardless of the input data

248
00:12:48,000 --> 00:12:50,560
we deployed a counter measure using the

249
00:12:50,560 --> 00:12:55,199
inline assembly code on the mcu

250
00:13:00,880 --> 00:13:03,440
these graphs show the histogram of

251
00:13:03,440 --> 00:13:06,240
successful attack to the mfp model on

252
00:13:06,240 --> 00:13:07,839
the mcu

253
00:13:07,839 --> 00:13:10,320
the data showed the perturbation bound

254
00:13:10,320 --> 00:13:13,680
until the misclassification is caused

255
00:13:13,680 --> 00:13:16,639
these graphs indicated that our attack

256
00:13:16,639 --> 00:13:19,519
tend to prevent the occurrence of timing

257
00:13:19,519 --> 00:13:23,440
weeks by the counter measured

258
00:13:29,440 --> 00:13:31,839
i am discussing the limitations of our

259
00:13:31,839 --> 00:13:34,720
attack the first one is activation

260
00:13:34,720 --> 00:13:35,760
function

261
00:13:35,760 --> 00:13:39,120
this talk focuses on red function

262
00:13:39,120 --> 00:13:42,079
the paper showed result of sigmoid

263
00:13:42,079 --> 00:13:45,519
function our attack are successful

264
00:13:45,519 --> 00:13:48,240
our attack depends on the types and

265
00:13:48,240 --> 00:13:51,760
implementation of activation function

266
00:13:51,760 --> 00:13:54,880
the second one is other platform such as

267
00:13:54,880 --> 00:13:57,440
gpu or tpu

268
00:13:57,440 --> 00:14:00,079
we focused on mcu's

269
00:14:00,079 --> 00:14:01,680
there are some neural network

270
00:14:01,680 --> 00:14:05,680
accelerators such as gpu or tpu

271
00:14:05,680 --> 00:14:08,320
the paper showed the evaluation of

272
00:14:08,320 --> 00:14:12,800
jetson none gpu and coral edge tpu

273
00:14:12,800 --> 00:14:15,600
we cannot observed timing rigs due to

274
00:14:15,600 --> 00:14:17,360
the prioritization of activation

275
00:14:17,360 --> 00:14:22,000
function on gpu and tpu

276
00:14:28,880 --> 00:14:31,600
i'm concluding my talk we proposed a

277
00:14:31,600 --> 00:14:35,040
novel black box attack to practice by

278
00:14:35,040 --> 00:14:37,199
using differential processing time

279
00:14:37,199 --> 00:14:40,240
according to the input data on dns on

280
00:14:40,240 --> 00:14:42,399
embed devices

281
00:14:42,399 --> 00:14:45,760
we identified two relationship between

282
00:14:45,760 --> 00:14:48,000
the processing time and number of

283
00:14:48,000 --> 00:14:50,800
activated nodes and between the number

284
00:14:50,800 --> 00:14:53,920
of activated nodes and a is

285
00:14:53,920 --> 00:14:56,399
we demonstrated that

286
00:14:56,399 --> 00:14:59,199
our attack depends on the processing

287
00:14:59,199 --> 00:15:02,240
time on activation function

288
00:15:02,240 --> 00:15:05,760
we clarify the codes of our attack by

289
00:15:05,760 --> 00:15:08,240
implementing a counter measure using the

290
00:15:08,240 --> 00:15:10,959
activation function with constant time

291
00:15:10,959 --> 00:15:14,719
to prevent the timing wakes

292
00:15:20,079 --> 00:15:23,638
thank you for watching

