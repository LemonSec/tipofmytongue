1
00:00:02,800 --> 00:00:06,000
hello everyone now i will present our

2
00:00:06,000 --> 00:00:09,200
work revealing the weakness of addition

3
00:00:09,200 --> 00:00:13,759
chain based masked xbox implementations

4
00:00:13,759 --> 00:00:16,320
my name is mindinya i am the first

5
00:00:16,320 --> 00:00:18,400
author of this paper

6
00:00:18,400 --> 00:00:21,199
i come from the institute of information

7
00:00:21,199 --> 00:00:26,080
engineering chinese academy of science

8
00:00:26,320 --> 00:00:29,119
this presentation is divided into four

9
00:00:29,119 --> 00:00:32,800
parts and i will start at introduction

10
00:00:32,800 --> 00:00:36,000
and previous work

11
00:00:36,640 --> 00:00:40,000
certain attacks exploit various physical

12
00:00:40,000 --> 00:00:41,120
leakage

13
00:00:41,120 --> 00:00:43,360
such as the running time

14
00:00:43,360 --> 00:00:45,280
the power consumption

15
00:00:45,280 --> 00:00:47,680
the em emanations

16
00:00:47,680 --> 00:00:49,360
using this leakage

17
00:00:49,360 --> 00:00:52,079
the adversary is able to recover the

18
00:00:52,079 --> 00:00:53,520
sensitive data

19
00:00:53,520 --> 00:00:57,559
of a crypto system

20
00:00:58,719 --> 00:01:01,039
among all-call measures against set

21
00:01:01,039 --> 00:01:02,480
channel attacks

22
00:01:02,480 --> 00:01:05,840
masking is one of the most widely used

23
00:01:05,840 --> 00:01:08,320
for its grid performance

24
00:01:08,320 --> 00:01:11,439
specifically masking analyzes the

25
00:01:11,439 --> 00:01:13,840
dependency between the sensitive

26
00:01:13,840 --> 00:01:16,640
intermediate and its corresponding

27
00:01:16,640 --> 00:01:17,600
leakage

28
00:01:17,600 --> 00:01:20,479
by splitting the sensitive value into

29
00:01:20,479 --> 00:01:23,840
d-plus line shares

30
00:01:25,840 --> 00:01:28,560
when protecting the cryptographic

31
00:01:28,560 --> 00:01:32,079
algorithm using masking the linear

32
00:01:32,079 --> 00:01:34,960
operations are simple to mask

33
00:01:34,960 --> 00:01:37,680
because for a linear function it is

34
00:01:37,680 --> 00:01:40,479
sufficient to compute for each chair

35
00:01:40,479 --> 00:01:42,159
sparity

36
00:01:42,159 --> 00:01:44,960
but the nonlinear operation

37
00:01:44,960 --> 00:01:47,759
are difficult to mask

38
00:01:47,759 --> 00:01:50,240
there are mainly two ways with

39
00:01:50,240 --> 00:01:54,000
acceptable cost to solve this problem

40
00:01:54,000 --> 00:01:56,719
the first one is lookup table based

41
00:01:56,719 --> 00:01:59,200
implementation

42
00:01:59,200 --> 00:02:02,159
and it is needed to generate a masked

43
00:02:02,159 --> 00:02:05,439
table for this solution

44
00:02:05,439 --> 00:02:08,560
the second one is compute the

45
00:02:08,560 --> 00:02:12,080
n row functions over of a nice field

46
00:02:12,080 --> 00:02:16,319
in this solution the xbox is achieved by

47
00:02:16,319 --> 00:02:18,480
several masked computations

48
00:02:18,480 --> 00:02:22,599
over overnight field

49
00:02:24,000 --> 00:02:27,360
here is a table for the running time

50
00:02:27,360 --> 00:02:31,760
of protected implementations of aes

51
00:02:31,760 --> 00:02:33,680
it can be seen that

52
00:02:33,680 --> 00:02:36,480
the lookup table based solution

53
00:02:36,480 --> 00:02:39,599
costs at least four times more than that

54
00:02:39,599 --> 00:02:42,480
of the computation based one

55
00:02:42,480 --> 00:02:46,000
thus in this paper we first we focus on

56
00:02:46,000 --> 00:02:50,760
the commutation based implementations

57
00:02:52,239 --> 00:02:55,440
addition chain is widely used for its

58
00:02:55,440 --> 00:02:57,200
computation-based

59
00:02:57,200 --> 00:02:59,680
mass export implementations

60
00:02:59,680 --> 00:03:01,040
specifically

61
00:03:01,040 --> 00:03:04,959
the xbox can be expressed as a sequence

62
00:03:04,959 --> 00:03:08,159
of squares and multiplications

63
00:03:08,159 --> 00:03:10,800
these nonlinear multiplications can be

64
00:03:10,800 --> 00:03:14,080
then implemented using previously known

65
00:03:14,080 --> 00:03:18,080
schemes such as sw

66
00:03:18,080 --> 00:03:21,599
here is one of the most popular audition

67
00:03:21,599 --> 00:03:24,879
chain for aes s box

68
00:03:24,879 --> 00:03:26,879
lots of mathematics games

69
00:03:26,879 --> 00:03:29,440
are used in this addition chain

70
00:03:29,440 --> 00:03:32,799
for example the pulling masking the

71
00:03:32,799 --> 00:03:36,799
mixed active and multiplicative masking

72
00:03:36,799 --> 00:03:40,080
inner product masking

73
00:03:41,599 --> 00:03:45,040
most studies focus on the analysis on

74
00:03:45,040 --> 00:03:48,000
the final xbox outputs

75
00:03:48,000 --> 00:03:49,920
however the addition chain

76
00:03:49,920 --> 00:03:51,440
implementations

77
00:03:51,440 --> 00:03:55,200
induce lots of extra computations for

78
00:03:55,200 --> 00:03:57,040
monomials

79
00:03:57,040 --> 00:03:59,840
in particular

80
00:04:00,239 --> 00:04:01,040
the

81
00:04:01,040 --> 00:04:03,760
nearly half monomials over the

82
00:04:03,760 --> 00:04:07,439
finite field are not balanced

83
00:04:07,439 --> 00:04:10,400
and now that the

84
00:04:10,400 --> 00:04:13,439
function is said to be balanced if every

85
00:04:13,439 --> 00:04:15,680
output element admits

86
00:04:15,680 --> 00:04:18,160
the same number of inputs

87
00:04:18,160 --> 00:04:20,720
of pre-match

88
00:04:20,720 --> 00:04:23,680
so a natural question is that

89
00:04:23,680 --> 00:04:26,479
what if the computations of some

90
00:04:26,479 --> 00:04:29,360
intermediate monomials leak more than

91
00:04:29,360 --> 00:04:31,600
the xbox outputs

92
00:04:31,600 --> 00:04:36,400
especially some unbalanced monomials

93
00:04:37,919 --> 00:04:42,560
here is an example for 4-bit case it is

94
00:04:42,560 --> 00:04:45,199
a simulated experiment

95
00:04:45,199 --> 00:04:47,919
of higher order safety attack

96
00:04:47,919 --> 00:04:51,360
and the simulated leakage of each chair

97
00:04:51,360 --> 00:04:54,400
are under heavyweight model

98
00:04:54,400 --> 00:04:57,520
and the combined leakage are obtained by

99
00:04:57,520 --> 00:05:01,680
mono normalized product

100
00:05:01,680 --> 00:05:04,479
it can be seen that the results can be

101
00:05:04,479 --> 00:05:08,479
divided into four groups

102
00:05:08,560 --> 00:05:11,680
so next we introduce our resistance

103
00:05:11,680 --> 00:05:14,240
measurement which can help

104
00:05:14,240 --> 00:05:17,440
explain the results

105
00:05:17,759 --> 00:05:20,960
transparency order which is called to

106
00:05:20,960 --> 00:05:22,240
for short

107
00:05:22,240 --> 00:05:26,240
was proposed to focus on the intrinsic

108
00:05:26,240 --> 00:05:29,120
resilience of x-boxes

109
00:05:29,120 --> 00:05:33,360
namely to quantifies the basic dpa

110
00:05:33,360 --> 00:05:36,160
resonance of xbox

111
00:05:36,160 --> 00:05:39,440
so we introduced dpa briefly

112
00:05:39,440 --> 00:05:40,800
in dpa

113
00:05:40,800 --> 00:05:44,080
the liquid traces are divided into two

114
00:05:44,080 --> 00:05:47,840
groups based on the disk speed of xbox

115
00:05:47,840 --> 00:05:49,360
output

116
00:05:49,360 --> 00:05:52,639
and there are differential expectation

117
00:05:52,639 --> 00:05:56,240
is a distinguished value

118
00:05:57,840 --> 00:06:00,400
if the leakage is assumed to follow

119
00:06:00,400 --> 00:06:02,160
harming ways model

120
00:06:02,160 --> 00:06:06,319
and analyzes always n traces

121
00:06:06,319 --> 00:06:08,800
we denote t as a

122
00:06:08,800 --> 00:06:11,680
plane taxes

123
00:06:11,680 --> 00:06:15,360
then the distinguisher can be expressed

124
00:06:15,360 --> 00:06:18,479
as this equation

125
00:06:19,360 --> 00:06:23,199
however if the function is unbalanced

126
00:06:23,199 --> 00:06:26,800
the target bits may always be 0 or 1

127
00:06:26,800 --> 00:06:29,440
which leads to the fact that the leakage

128
00:06:29,440 --> 00:06:33,199
cannot be divided into two groups

129
00:06:33,199 --> 00:06:34,400
and then

130
00:06:34,400 --> 00:06:38,080
the following calculation for to

131
00:06:38,080 --> 00:06:41,120
become meaningless

132
00:06:43,120 --> 00:06:45,919
actually it is not a hard problem to be

133
00:06:45,919 --> 00:06:47,360
fixed

134
00:06:47,360 --> 00:06:49,360
in unbalanced functions

135
00:06:49,360 --> 00:06:51,199
some output bits

136
00:06:51,199 --> 00:06:54,080
may be always 0 or 1

137
00:06:54,080 --> 00:06:57,039
which are useless for distinguishing the

138
00:06:57,039 --> 00:06:59,840
secret key

139
00:07:00,240 --> 00:07:01,199
so

140
00:07:01,199 --> 00:07:02,479
when the

141
00:07:02,479 --> 00:07:05,680
output bits are always 0 or 1 we define

142
00:07:05,680 --> 00:07:07,440
the distinguished

143
00:07:07,440 --> 00:07:11,039
differential value equal to 0.

144
00:07:11,039 --> 00:07:15,080
then we have this equation

145
00:07:16,960 --> 00:07:19,360
sum the distinguishable value on all

146
00:07:19,360 --> 00:07:22,000
bids for all key herpes

147
00:07:22,000 --> 00:07:24,800
we get a new notion which is able to

148
00:07:24,800 --> 00:07:26,160
measure the

149
00:07:26,160 --> 00:07:29,680
dpa residence for all functions

150
00:07:29,680 --> 00:07:32,560
and this notion is named polygon degree

151
00:07:32,560 --> 00:07:35,360
in our work

152
00:07:37,120 --> 00:07:39,840
there are three properties of polygon

153
00:07:39,840 --> 00:07:41,440
degree

154
00:07:41,440 --> 00:07:44,800
the first one is that the smaller

155
00:07:44,800 --> 00:07:47,680
argon degree of a function is

156
00:07:47,680 --> 00:07:50,160
a stronger it resists against the

157
00:07:50,160 --> 00:07:52,800
channel text

158
00:07:52,800 --> 00:07:55,680
the second one is that for function f we

159
00:07:55,680 --> 00:07:58,639
have that is polygon degree is higher

160
00:07:58,639 --> 00:08:00,240
than zero but

161
00:08:00,240 --> 00:08:02,400
lower than one

162
00:08:02,400 --> 00:08:04,160
and last

163
00:08:04,160 --> 00:08:07,120
the polygon degree is also valid in

164
00:08:07,120 --> 00:08:08,879
higher order attacks

165
00:08:08,879 --> 00:08:11,919
because the expectation of combined

166
00:08:11,919 --> 00:08:13,199
leakage

167
00:08:13,199 --> 00:08:15,599
follow a linear transformation of

168
00:08:15,599 --> 00:08:19,120
hamming weight distribution

169
00:08:22,560 --> 00:08:24,319
and then we

170
00:08:24,319 --> 00:08:28,080
introduce how to verify the soundness of

171
00:08:28,080 --> 00:08:29,919
polygon degree

172
00:08:29,919 --> 00:08:32,799
and the polygon degree is called pd for

173
00:08:32,799 --> 00:08:34,559
short

174
00:08:34,559 --> 00:08:38,080
step one is to calculate the pd values

175
00:08:38,080 --> 00:08:40,719
for all monomials over the phonetic

176
00:08:40,719 --> 00:08:41,919
field

177
00:08:41,919 --> 00:08:45,120
and then we perform simulated higher

178
00:08:45,120 --> 00:08:46,800
order cpa

179
00:08:46,800 --> 00:08:49,760
on all monomials

180
00:08:49,760 --> 00:08:52,320
the leakage are also under hemingway

181
00:08:52,320 --> 00:08:53,600
model

182
00:08:53,600 --> 00:08:56,560
and last we met the pd values and

183
00:08:56,560 --> 00:09:00,079
simulated attack results

184
00:09:02,480 --> 00:09:04,959
if we classify the

185
00:09:04,959 --> 00:09:07,680
results on 4 bit cases

186
00:09:07,680 --> 00:09:10,320
we can find that

187
00:09:10,320 --> 00:09:13,040
based on the pde value the their

188
00:09:13,040 --> 00:09:17,279
resistance is that the class 3 is lower

189
00:09:17,279 --> 00:09:20,720
than class 7 and lower than class 5 and

190
00:09:20,720 --> 00:09:23,920
last lower than class 1.

191
00:09:23,920 --> 00:09:26,959
it can be seen that the pd values match

192
00:09:26,959 --> 00:09:27,920
the

193
00:09:27,920 --> 00:09:31,040
attack results well

194
00:09:34,000 --> 00:09:37,440
we additionally verified on the 6-bit

195
00:09:37,440 --> 00:09:38,959
cases

196
00:09:38,959 --> 00:09:40,240
and we can

197
00:09:40,240 --> 00:09:43,519
find that the powers fall into the same

198
00:09:43,519 --> 00:09:44,720
pd value

199
00:09:44,720 --> 00:09:48,839
if the exponents lie in the same

200
00:09:48,839 --> 00:09:52,240
cyclonic class

201
00:09:55,519 --> 00:09:59,600
there are a total of 62 monomials

202
00:09:59,600 --> 00:10:00,880
for the

203
00:10:00,880 --> 00:10:03,440
6-bit cases

204
00:10:03,440 --> 00:10:08,720
and the results are shown as a histogram

205
00:10:08,720 --> 00:10:11,200
the y-axis shows the number of traces

206
00:10:11,200 --> 00:10:15,680
for gas entropy to be below 4.

207
00:10:16,640 --> 00:10:19,839
it can be seen that the smaller pd value

208
00:10:19,839 --> 00:10:23,200
conveys a stronger resistance

209
00:10:23,200 --> 00:10:27,200
which verify the property

210
00:10:27,440 --> 00:10:29,680
and the number of traces for the

211
00:10:29,680 --> 00:10:33,279
monomial function with the lowest pd is

212
00:10:33,279 --> 00:10:35,440
nearly three times

213
00:10:35,440 --> 00:10:38,959
than the highest one

214
00:10:41,200 --> 00:10:43,040
as for the hp

215
00:10:43,040 --> 00:10:45,720
simulation there are

216
00:10:45,720 --> 00:10:50,399
254 monomials and the total of 34

217
00:10:50,399 --> 00:10:52,079
classes

218
00:10:52,079 --> 00:10:53,440
so we use

219
00:10:53,440 --> 00:10:57,200
inverse functions to face these results

220
00:10:57,200 --> 00:10:59,360
it can be seen as

221
00:10:59,360 --> 00:11:00,640
the

222
00:11:00,640 --> 00:11:04,880
results match the pd values as well

223
00:11:07,120 --> 00:11:09,360
besides we also tried other

224
00:11:09,360 --> 00:11:11,920
satanometrics

225
00:11:11,920 --> 00:11:14,480
in information theoretic metrics are

226
00:11:14,480 --> 00:11:17,839
widely used as indicators for that for

227
00:11:17,839 --> 00:11:20,160
set channel attacks

228
00:11:20,160 --> 00:11:22,399
and mutual information

229
00:11:22,399 --> 00:11:25,360
is a well-known information theoretical

230
00:11:25,360 --> 00:11:26,720
metric

231
00:11:26,720 --> 00:11:28,640
so we use it

232
00:11:28,640 --> 00:11:31,519
in our work

233
00:11:31,680 --> 00:11:34,399
the results for 4-bit case and 6-bit

234
00:11:34,399 --> 00:11:36,320
case are shown

235
00:11:36,320 --> 00:11:38,880
it can be seen that the monomials with

236
00:11:38,880 --> 00:11:41,920
the same output size fall into the same

237
00:11:41,920 --> 00:11:43,519
class

238
00:11:43,519 --> 00:11:44,480
and

239
00:11:44,480 --> 00:11:47,839
mutual information metric does not match

240
00:11:47,839 --> 00:11:49,360
the results

241
00:11:49,360 --> 00:11:52,959
where as pd does

242
00:11:55,360 --> 00:11:58,320
and next we introduce our practical

243
00:11:58,320 --> 00:12:01,120
experiments

244
00:12:02,240 --> 00:12:06,720
in our work the aes s-box is as a static

245
00:12:06,720 --> 00:12:08,079
case

246
00:12:08,079 --> 00:12:11,839
because firstly aes is one of the most

247
00:12:11,839 --> 00:12:14,639
popular block cipher

248
00:12:14,639 --> 00:12:15,519
and

249
00:12:15,519 --> 00:12:19,040
aes s both can be expressed

250
00:12:19,040 --> 00:12:22,720
simply over the phonetic field

251
00:12:22,720 --> 00:12:25,920
and moreover there are many public mass

252
00:12:25,920 --> 00:12:31,040
implementations for aes block server

253
00:12:32,800 --> 00:12:35,360
and here comes the first problem problem

254
00:12:35,360 --> 00:12:38,399
we said how to find all feasible and the

255
00:12:38,399 --> 00:12:43,040
most efficient addition didn't change

256
00:12:43,519 --> 00:12:46,160
the most efficient addition chain needs

257
00:12:46,160 --> 00:12:49,680
to have four multiplications and seven

258
00:12:49,680 --> 00:12:52,160
squares

259
00:12:52,160 --> 00:12:54,560
step one is to find the addition change

260
00:12:54,560 --> 00:12:58,719
in including four multiplications

261
00:13:00,240 --> 00:13:02,480
and we

262
00:13:02,480 --> 00:13:04,880
randomly choose two

263
00:13:04,880 --> 00:13:06,959
elements to add

264
00:13:06,959 --> 00:13:08,320
then we can

265
00:13:08,320 --> 00:13:11,600
get a new set

266
00:13:11,600 --> 00:13:16,079
we union the new set and the initial

267
00:13:16,079 --> 00:13:20,680
exponent exponential set

268
00:13:22,000 --> 00:13:24,000
as for additions

269
00:13:24,000 --> 00:13:26,000
we get we judge the

270
00:13:26,000 --> 00:13:27,560
does the

271
00:13:27,560 --> 00:13:32,880
254 belong to the final exponential set

272
00:13:32,880 --> 00:13:36,959
if it is then this addition chain

273
00:13:36,959 --> 00:13:39,120
includes the four

274
00:13:39,120 --> 00:13:42,079
multiplications

275
00:13:44,000 --> 00:13:46,639
and the step two is count the number of

276
00:13:46,639 --> 00:13:51,120
squares in this addition chance

277
00:13:51,120 --> 00:13:52,480
our met

278
00:13:52,480 --> 00:13:54,560
our approach is to sum the square's

279
00:13:54,560 --> 00:13:58,720
number from the red to the orange in

280
00:13:58,720 --> 00:14:00,399
each

281
00:14:00,399 --> 00:14:01,760
cyclo

282
00:14:01,760 --> 00:14:04,079
cyclonic class

283
00:14:04,079 --> 00:14:07,120
then we get

284
00:14:07,639 --> 00:14:10,320
1330 addition chains

285
00:14:10,320 --> 00:14:11,440
with

286
00:14:11,440 --> 00:14:15,839
four multiplications and seven squares

287
00:14:15,839 --> 00:14:17,600
now with

288
00:14:17,600 --> 00:14:21,279
the lower square number

289
00:14:23,760 --> 00:14:26,560
moreover we assume that there are two

290
00:14:26,560 --> 00:14:28,839
types of

291
00:14:28,839 --> 00:14:32,160
adversaries the address rewind has

292
00:14:32,160 --> 00:14:35,040
limited computational resources

293
00:14:35,040 --> 00:14:38,160
so he is only able to find a leakage

294
00:14:38,160 --> 00:14:41,040
with corresponding to one sensitive

295
00:14:41,040 --> 00:14:43,360
intermediate

296
00:14:43,360 --> 00:14:47,199
in for this for this adversary the

297
00:14:47,199 --> 00:14:49,199
measurement is uh

298
00:14:49,199 --> 00:14:53,279
is a max pd value

299
00:14:54,240 --> 00:14:57,040
and a adversary 2 has enough

300
00:14:57,040 --> 00:14:59,040
computational results

301
00:14:59,040 --> 00:15:01,920
with resources so he is able to launch

302
00:15:01,920 --> 00:15:03,519
higher order attack

303
00:15:03,519 --> 00:15:06,399
on all sensitive intermediates

304
00:15:06,399 --> 00:15:08,560
then sum the results together to achieve

305
00:15:08,560 --> 00:15:12,760
a higher success rate

306
00:15:12,880 --> 00:15:16,720
last the measurement for this adversary

307
00:15:16,720 --> 00:15:18,399
is

308
00:15:18,399 --> 00:15:22,320
is a sum of pd values

309
00:15:25,199 --> 00:15:27,040
with with the two

310
00:15:27,040 --> 00:15:28,320
measurements

311
00:15:28,320 --> 00:15:32,160
we find three typical addition chains

312
00:15:32,160 --> 00:15:34,880
the first one is a weakest adjacent

313
00:15:34,880 --> 00:15:39,040
chance for both two adversary

314
00:15:39,040 --> 00:15:41,279
and the second one is the

315
00:15:41,279 --> 00:15:43,759
strongest addition chance for both

316
00:15:43,759 --> 00:15:46,320
adversaries

317
00:15:46,320 --> 00:15:49,199
and the second is a strong audit and

318
00:15:49,199 --> 00:15:50,160
change

319
00:15:50,160 --> 00:15:51,600
and can be

320
00:15:51,600 --> 00:15:55,800
proceeded in parallel

321
00:15:59,040 --> 00:16:03,199
here is our experiment setup

322
00:16:03,199 --> 00:16:06,399
the power traces are collected by a

323
00:16:06,399 --> 00:16:08,720
cheap whisper light board

324
00:16:08,720 --> 00:16:12,720
and the codes are running on a armcortex

325
00:16:12,720 --> 00:16:17,160
m4 based microcontroller

326
00:16:17,199 --> 00:16:19,680
the leakage is shown

327
00:16:19,680 --> 00:16:23,199
and we can find that it is clearly a is

328
00:16:23,199 --> 00:16:24,000
a

329
00:16:24,000 --> 00:16:26,639
low noise scan array

330
00:16:26,639 --> 00:16:27,440
but

331
00:16:27,440 --> 00:16:30,800
the noise level for different monomials

332
00:16:30,800 --> 00:16:34,399
are also different which will affect the

333
00:16:34,399 --> 00:16:37,720
attack results

334
00:16:38,000 --> 00:16:40,959
the em traces are collected by an

335
00:16:40,959 --> 00:16:43,040
angeline oscilloscope

336
00:16:43,040 --> 00:16:45,600
with an em prop

337
00:16:45,600 --> 00:16:47,600
the code is also running

338
00:16:47,600 --> 00:16:48,399
on

339
00:16:48,399 --> 00:16:51,440
arm cortex m4 based

340
00:16:51,440 --> 00:16:54,240
microcore controller

341
00:16:54,240 --> 00:16:57,759
clearly it is a high noise scanner you

342
00:16:57,759 --> 00:17:01,279
can see its leakage

343
00:17:01,279 --> 00:17:04,880
the correlation corresponds of leakage

344
00:17:04,880 --> 00:17:06,799
and the

345
00:17:06,799 --> 00:17:11,439
corresponding sensitive value is lower

346
00:17:11,439 --> 00:17:14,640
but the difference of noise level for

347
00:17:14,640 --> 00:17:18,559
monomials get more obviously

348
00:17:18,559 --> 00:17:21,839
which may affect the attack results

349
00:17:21,839 --> 00:17:24,639
more greatly

350
00:17:26,000 --> 00:17:30,000
here is our power analysis

351
00:17:30,000 --> 00:17:33,320
and it can be seen that all the

352
00:17:33,320 --> 00:17:34,880
implementations

353
00:17:34,880 --> 00:17:37,200
can be broken within a small amount of

354
00:17:37,200 --> 00:17:38,640
pieces

355
00:17:38,640 --> 00:17:40,000
more and

356
00:17:40,000 --> 00:17:42,559
the two strong addition chains

357
00:17:42,559 --> 00:17:47,720
are always better than the other two

358
00:17:48,080 --> 00:17:50,000
and most important

359
00:17:50,000 --> 00:17:51,919
in the worst cases

360
00:17:51,919 --> 00:17:55,120
the resistance is close to that of

361
00:17:55,120 --> 00:17:59,639
unprotected esx box

362
00:18:00,240 --> 00:18:02,400
and here is a

363
00:18:02,400 --> 00:18:06,160
result for yam analysis

364
00:18:06,160 --> 00:18:09,440
since it is not direct to understand

365
00:18:09,440 --> 00:18:11,919
our main results are summarized in a

366
00:18:11,919 --> 00:18:14,919
table

367
00:18:15,919 --> 00:18:18,400
in this table we can see that in the

368
00:18:18,400 --> 00:18:20,240
worst case

369
00:18:20,240 --> 00:18:23,280
its resistance is also close to that of

370
00:18:23,280 --> 00:18:27,520
unprotected aes implementation

371
00:18:27,520 --> 00:18:28,720
besides

372
00:18:28,720 --> 00:18:31,360
we can find that the tags on the other

373
00:18:31,360 --> 00:18:33,919
three addition chain become less

374
00:18:33,919 --> 00:18:35,039
efficient

375
00:18:35,039 --> 00:18:37,840
for the adversary too

376
00:18:37,840 --> 00:18:39,600
it is because

377
00:18:39,600 --> 00:18:42,640
inefficient results on some monomials

378
00:18:42,640 --> 00:18:44,480
such as x

379
00:18:44,480 --> 00:18:45,520
the

380
00:18:45,520 --> 00:18:48,400
two power of x are combined and

381
00:18:48,400 --> 00:18:51,200
negatively affect the final attack

382
00:18:51,200 --> 00:18:54,200
result

383
00:18:56,240 --> 00:19:00,320
what's more we also land profile tags

384
00:19:00,320 --> 00:19:03,120
and they are the template tag

385
00:19:03,120 --> 00:19:07,120
and the deep learning base attack

386
00:19:07,120 --> 00:19:09,280
in template attack

387
00:19:09,280 --> 00:19:13,600
we get the probability of its shares in

388
00:19:13,600 --> 00:19:15,360
each piece

389
00:19:15,360 --> 00:19:16,559
then we

390
00:19:16,559 --> 00:19:18,320
guess the

391
00:19:18,320 --> 00:19:19,679
probability

392
00:19:19,679 --> 00:19:23,280
of the sensitive data on each

393
00:19:23,280 --> 00:19:26,400
with the help of the inverse map

394
00:19:26,400 --> 00:19:28,400
the probability for sensitive

395
00:19:28,400 --> 00:19:32,240
intermediate can map to the secret key

396
00:19:32,240 --> 00:19:34,000
and we add up the

397
00:19:34,000 --> 00:19:37,760
probabilities for key of the trees then

398
00:19:37,760 --> 00:19:40,160
we get the

399
00:19:40,160 --> 00:19:43,840
the probability for all key hypotheses

400
00:19:43,840 --> 00:19:49,120
and the max probability is our result

401
00:19:49,200 --> 00:19:52,480
for the dipole in base attack it is

402
00:19:52,480 --> 00:19:56,400
training using a cnn model

403
00:19:56,400 --> 00:19:59,120
and the last fully connect layer

404
00:19:59,120 --> 00:20:00,640
contains the

405
00:20:00,640 --> 00:20:07,159
number of the output of the function f

406
00:20:10,000 --> 00:20:13,200
our targets are two typical functions

407
00:20:13,200 --> 00:20:17,840
the 85 power of x and the x boxes

408
00:20:17,840 --> 00:20:19,840
it can be seen that with increase in

409
00:20:19,840 --> 00:20:23,120
noise attack on 85

410
00:20:23,120 --> 00:20:27,280
power of x becomes more efficient

411
00:20:27,280 --> 00:20:30,720
and since the smaller size of the

412
00:20:30,720 --> 00:20:32,559
85 power of x

413
00:20:32,559 --> 00:20:35,679
the cost for storing templates and the

414
00:20:35,679 --> 00:20:39,600
running attacks are also lower

415
00:20:40,559 --> 00:20:43,760
and this is experimental environments

416
00:20:43,760 --> 00:20:48,120
and cn architecture

417
00:20:48,480 --> 00:20:50,960
the network architectures may be not

418
00:20:50,960 --> 00:20:54,159
optimal as our goal is to compare the

419
00:20:54,159 --> 00:20:56,559
different addition chains but not to

420
00:20:56,559 --> 00:20:59,760
find optimal parameters

421
00:20:59,760 --> 00:21:01,840
it can be seen that with increase in

422
00:21:01,840 --> 00:21:03,919
noise attack on

423
00:21:03,919 --> 00:21:06,960
the 85 power of x becomes more efficient

424
00:21:06,960 --> 00:21:09,440
as well

425
00:21:11,360 --> 00:21:15,520
finally we conclude our work

426
00:21:15,520 --> 00:21:18,640
in our work we target on the addition

427
00:21:18,640 --> 00:21:22,400
chain implementation using blue masking

428
00:21:22,400 --> 00:21:25,280
then we propose a new notion named

429
00:21:25,280 --> 00:21:28,000
polygon degree to quantify the set

430
00:21:28,000 --> 00:21:31,600
channel resistance of a function

431
00:21:31,600 --> 00:21:34,640
and we also try the mutual information

432
00:21:34,640 --> 00:21:36,799
as a metric

433
00:21:36,799 --> 00:21:40,559
and last we validate our metric using

434
00:21:40,559 --> 00:21:42,240
higher order cpa

435
00:21:42,240 --> 00:21:44,960
the template attack and the deep

436
00:21:44,960 --> 00:21:48,080
learning based attack

437
00:21:48,960 --> 00:21:52,559
however this work has now been completed

438
00:21:52,559 --> 00:21:54,480
besides the addition chain

439
00:21:54,480 --> 00:21:56,159
implementation

440
00:21:56,159 --> 00:21:58,400
there might be other implementations

441
00:21:58,400 --> 00:22:01,520
including the unbalanced functions

442
00:22:01,520 --> 00:22:02,640
moreover

443
00:22:02,640 --> 00:22:05,520
the unbalanced functions maybe also

444
00:22:05,520 --> 00:22:07,760
affect the security

445
00:22:07,760 --> 00:22:10,080
for other masking schemes

446
00:22:10,080 --> 00:22:12,960
such as a multiplicative masking

447
00:22:12,960 --> 00:22:15,760
the inner product masking the xiaomi

448
00:22:15,760 --> 00:22:17,760
secret such sharing

449
00:22:17,760 --> 00:22:20,080
and other schemes

450
00:22:20,080 --> 00:22:23,039
then we may need other metrics to

451
00:22:23,039 --> 00:22:26,159
qualify the second resistance

452
00:22:26,159 --> 00:22:31,440
and vary them with other distinguishers

453
00:22:31,919 --> 00:22:34,000
this is my presentation

454
00:22:34,000 --> 00:22:37,559
thanks for watching

