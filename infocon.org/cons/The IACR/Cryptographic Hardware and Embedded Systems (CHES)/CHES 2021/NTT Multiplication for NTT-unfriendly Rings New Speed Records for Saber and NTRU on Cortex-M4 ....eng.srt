1
00:00:00,719 --> 00:00:03,520
hello everyone i'm vincent hong

2
00:00:03,520 --> 00:00:05,440
in this video i'm going to talk about

3
00:00:05,440 --> 00:00:07,919
paper into team application for english

4
00:00:07,919 --> 00:00:09,599
young friendly rings

5
00:00:09,599 --> 00:00:12,719
here's a drone work with jimmy ramington

6
00:00:12,719 --> 00:00:17,080
matey's conviction yakisada

7
00:00:20,240 --> 00:00:22,000
let's first recall some useful

8
00:00:22,000 --> 00:00:25,840
properties of number theorem transforms

9
00:00:25,840 --> 00:00:28,000
suppose the integer n is invertible in

10
00:00:28,000 --> 00:00:29,599
the ring r

11
00:00:29,599 --> 00:00:32,320
given invertible element theta and the

12
00:00:32,320 --> 00:00:35,040
principle and rules of unity omega

13
00:00:35,040 --> 00:00:38,160
the size in any key is a isomorphism

14
00:00:38,160 --> 00:00:41,680
from the ring of x over x and minus

15
00:00:41,680 --> 00:00:43,200
theta to n

16
00:00:43,200 --> 00:00:46,239
to the product ring where each ring is

17
00:00:46,239 --> 00:00:47,440
of x

18
00:00:47,440 --> 00:00:49,440
over x minus

19
00:00:49,440 --> 00:00:52,640
theta times omega 2 i

20
00:00:52,640 --> 00:00:55,360
if data to the n is 1 then we call

21
00:00:55,360 --> 00:00:56,879
secret engine key

22
00:00:56,879 --> 00:00:59,600
we say that to n is negative one then we

23
00:00:59,600 --> 00:01:01,840
probably need a second and g key

24
00:01:01,840 --> 00:01:04,959
additionally if data to n is the nth

25
00:01:04,959 --> 00:01:07,920
power of our omega

26
00:01:07,920 --> 00:01:10,640
then we can use this definition of any

27
00:01:10,640 --> 00:01:13,920
key for explaining extent of

28
00:01:13,920 --> 00:01:15,840
glutathione key

29
00:01:15,840 --> 00:01:19,680
this will be shown in the next slide

30
00:01:19,680 --> 00:01:21,680
as a ring isomorphism

31
00:01:21,680 --> 00:01:23,360
ndt provides

32
00:01:23,360 --> 00:01:26,479
alternative approaches for multiplying

33
00:01:26,479 --> 00:01:29,119
and adding up to point your meals

34
00:01:29,119 --> 00:01:32,560
for multiplying a and b

35
00:01:32,720 --> 00:01:35,600
we can first apply energy on a and b

36
00:01:35,600 --> 00:01:37,280
point multiply them

37
00:01:37,280 --> 00:01:38,640
and apply

38
00:01:38,640 --> 00:01:40,640
the inverse of the dt

39
00:01:40,640 --> 00:01:42,640
this multiplicative property is also

40
00:01:42,640 --> 00:01:45,520
called the convolution theorem

41
00:01:45,520 --> 00:01:47,280
since any key can be computed

42
00:01:47,280 --> 00:01:48,640
efficiently

43
00:01:48,640 --> 00:01:50,320
we can also compute the product

44
00:01:50,320 --> 00:01:52,479
efficiently

45
00:01:52,479 --> 00:01:54,799
for adding up to polynomials

46
00:01:54,799 --> 00:01:56,960
we can also compute energy in a similar

47
00:01:56,960 --> 00:01:58,240
fashion

48
00:01:58,240 --> 00:02:00,320
but it doesn't

49
00:02:00,320 --> 00:02:02,640
it's not very clear how we can really

50
00:02:02,640 --> 00:02:06,240
benefit from 80 keys

51
00:02:06,719 --> 00:02:09,758
this property is actually crucial for

52
00:02:09,758 --> 00:02:12,239
the energy for safer and we'll see in

53
00:02:12,239 --> 00:02:16,080
the next slide in the next few slides

54
00:02:17,920 --> 00:02:20,720
fast fourier transforms are several

55
00:02:20,720 --> 00:02:22,640
options for computing

56
00:02:22,640 --> 00:02:24,879
anything sufficiently

57
00:02:24,879 --> 00:02:27,680
in our paper we implement three epic

58
00:02:27,680 --> 00:02:28,640
keys

59
00:02:28,640 --> 00:02:31,680
the first one is cool to the fft

60
00:02:31,680 --> 00:02:34,480
after applying the cyclic ndt

61
00:02:34,480 --> 00:02:36,560
for the second isomorphism

62
00:02:36,560 --> 00:02:38,959
we'll apply the observation in the

63
00:02:38,959 --> 00:02:40,319
previous slide

64
00:02:40,319 --> 00:02:44,480
by setting data to omega to the i

65
00:02:44,480 --> 00:02:47,360
for the second effect key we implement

66
00:02:47,360 --> 00:02:49,200
genome scenario key

67
00:02:49,200 --> 00:02:53,120
gentlemen fft is twisting the

68
00:02:53,120 --> 00:02:55,599
polynomial rings to the sacred ones

69
00:02:55,599 --> 00:02:57,519
whenever possible

70
00:02:57,519 --> 00:03:02,080
so for the second isomorphism

71
00:03:02,560 --> 00:03:05,200
we transform the polynomial ring of x

72
00:03:05,200 --> 00:03:08,480
over x n1 minus omega to the

73
00:03:08,480 --> 00:03:10,319
n1i

74
00:03:10,319 --> 00:03:13,360
to the polynomial ring over x

75
00:03:13,360 --> 00:03:16,720
over x to the n1 minus one

76
00:03:16,720 --> 00:03:21,239
we then continue with superintendents

77
00:03:21,760 --> 00:03:24,400
the third fft is boosting

78
00:03:24,400 --> 00:03:26,159
question is transforming a

79
00:03:26,159 --> 00:03:28,560
one-dimensional convolution into a

80
00:03:28,560 --> 00:03:32,360
multi-dimensional convolution

81
00:03:32,799 --> 00:03:34,720
after the transformation we can then

82
00:03:34,720 --> 00:03:36,239
apply

83
00:03:36,239 --> 00:03:38,400
accurate to the other key for each of

84
00:03:38,400 --> 00:03:40,480
the dimensions for computing seeking

85
00:03:40,480 --> 00:03:42,400
convolutions

86
00:03:42,400 --> 00:03:45,640
now paper

87
00:03:46,720 --> 00:03:49,200
we implement a two-dimensional

88
00:03:49,200 --> 00:03:51,360
transformation

89
00:03:51,360 --> 00:03:54,120
and then we'll apply quality fft in the

90
00:03:54,120 --> 00:03:57,840
dimension of y and compute c convolution

91
00:03:57,840 --> 00:04:01,840
for the dimension of z

92
00:04:04,400 --> 00:04:08,000
the most important operations

93
00:04:08,000 --> 00:04:10,640
for implementing entities are montgomery

94
00:04:10,640 --> 00:04:12,159
locations

95
00:04:12,159 --> 00:04:14,560
on quotation 4 we'll implement circuit

96
00:04:14,560 --> 00:04:18,000
of bin mongolian location

97
00:04:19,839 --> 00:04:22,079
by utilizing the

98
00:04:22,079 --> 00:04:25,680
non-multiplication instructions

99
00:04:26,080 --> 00:04:29,360
for fbx2 we implement system b mongol

100
00:04:29,360 --> 00:04:32,400
multiplication by utilizing

101
00:04:32,400 --> 00:04:34,639
multiplication instructions returning

102
00:04:34,639 --> 00:04:36,560
high product

103
00:04:36,560 --> 00:04:38,639
the main reason

104
00:04:38,639 --> 00:04:43,520
for this is because there are no 32-bit

105
00:04:43,520 --> 00:04:45,360
modification instruction return high

106
00:04:45,360 --> 00:04:48,720
product in fbx2

107
00:04:48,720 --> 00:04:52,240
safer is a latex-based game based on

108
00:04:52,240 --> 00:04:55,440
modular learning surrounding

109
00:04:55,440 --> 00:04:58,400
the polynomial ring chosen by saber is

110
00:04:58,400 --> 00:05:03,680
z ak 192 of x over x plus 256 plus one

111
00:05:03,680 --> 00:05:06,160
the security of cyber is specified by

112
00:05:06,160 --> 00:05:08,320
the modular dimension l

113
00:05:08,320 --> 00:05:11,120
and the most time operation

114
00:05:11,120 --> 00:05:15,199
is the merchant's reaction application

115
00:05:15,199 --> 00:05:18,560
the matrix a is an l by l matrix where

116
00:05:18,560 --> 00:05:21,280
each of the components is a polynomial

117
00:05:21,280 --> 00:05:22,960
in rp

118
00:05:22,960 --> 00:05:25,440
for polynomials in the vectors

119
00:05:25,440 --> 00:05:27,680
all of these coefficients are within

120
00:05:27,680 --> 00:05:31,680
plus minus mu over two

121
00:05:32,479 --> 00:05:34,880
we take a closer look at how entropy

122
00:05:34,880 --> 00:05:37,280
friendly and how indium-friendly

123
00:05:37,280 --> 00:05:38,720
satellite is

124
00:05:38,720 --> 00:05:41,520
first the polynomial modulus is a

125
00:05:41,520 --> 00:05:43,600
negative convolution

126
00:05:43,600 --> 00:05:45,840
this implies that

127
00:05:45,840 --> 00:05:47,440
if we can define

128
00:05:47,440 --> 00:05:49,360
negative entities

129
00:05:49,360 --> 00:05:51,199
then we don't need to expand the

130
00:05:51,199 --> 00:05:53,440
polynomial degree

131
00:05:53,440 --> 00:05:56,120
next we look at the coefficient ring

132
00:05:56,120 --> 00:05:57,919
z8122

133
00:05:57,919 --> 00:05:59,600
in this string

134
00:05:59,600 --> 00:06:01,919
we can define entities given

135
00:06:01,919 --> 00:06:03,600
isomorphisms

136
00:06:03,600 --> 00:06:05,280
therefore the coefficient ring is

137
00:06:05,280 --> 00:06:09,280
regarded as individual friendly

138
00:06:09,440 --> 00:06:12,800
a straightforward solution for this is

139
00:06:12,800 --> 00:06:15,039
to choose a large modulus

140
00:06:15,039 --> 00:06:18,080
or separably binding the maximum value

141
00:06:18,080 --> 00:06:21,280
of one point multiplication

142
00:06:21,280 --> 00:06:24,240
but entities actually tell us much more

143
00:06:24,240 --> 00:06:27,199
than multiplying two polynomials

144
00:06:27,199 --> 00:06:29,919
in particular

145
00:06:30,960 --> 00:06:35,000
for a well-defined entity

146
00:06:35,280 --> 00:06:38,160
the summation of several products

147
00:06:38,160 --> 00:06:40,080
of polynomials can be computed with

148
00:06:40,080 --> 00:06:42,960
eight of entries as well

149
00:06:42,960 --> 00:06:44,880
first

150
00:06:44,880 --> 00:06:48,800
we apply entities to other polynomials

151
00:06:48,800 --> 00:06:51,039
then

152
00:06:53,280 --> 00:06:54,880
then

153
00:06:54,880 --> 00:06:56,800
we accumulate several point

154
00:06:56,800 --> 00:06:58,160
multiplications

155
00:06:58,160 --> 00:07:00,160
and finally we apply the inverse of

156
00:07:00,160 --> 00:07:02,479
entity

157
00:07:02,479 --> 00:07:05,360
this characterization suggests that

158
00:07:05,360 --> 00:07:07,520
the structure of

159
00:07:07,520 --> 00:07:09,919
measure to vector multiplication is

160
00:07:09,919 --> 00:07:11,599
energy threatening

161
00:07:11,599 --> 00:07:12,560
because

162
00:07:12,560 --> 00:07:14,560
we only need to transform the vector

163
00:07:14,560 --> 00:07:15,599
once

164
00:07:15,599 --> 00:07:18,240
and at the end we only need to compute

165
00:07:18,240 --> 00:07:22,160
the inverse of entities for vector

166
00:07:23,199 --> 00:07:24,800
for any keys

167
00:07:24,800 --> 00:07:27,280
for the metro vector multiplication

168
00:07:27,280 --> 00:07:29,759
we start by

169
00:07:29,759 --> 00:07:32,080
computing the result as if z is a

170
00:07:32,080 --> 00:07:33,759
coefficient ring

171
00:07:33,759 --> 00:07:36,880
therefore the maximum value

172
00:07:36,880 --> 00:07:40,319
is bounded by 2 to the 20 times mu times

173
00:07:40,319 --> 00:07:41,520
l

174
00:07:41,520 --> 00:07:43,120
on quotation 4

175
00:07:43,120 --> 00:07:45,680
which uses a 32-bit prime q prime

176
00:07:45,680 --> 00:07:47,840
bonding the maximum value

177
00:07:47,840 --> 00:07:50,159
then

178
00:07:50,800 --> 00:07:52,080
we compute

179
00:07:52,080 --> 00:07:56,240
any keys in v cube prime

180
00:07:56,319 --> 00:07:59,120
for f x x2 we choose two setting b

181
00:07:59,120 --> 00:08:01,440
primes p0 and p1

182
00:08:01,440 --> 00:08:03,120
where the product is bounding the

183
00:08:03,120 --> 00:08:05,840
maximum value

184
00:08:05,840 --> 00:08:11,120
then we compute any keys in p0 and in p1

185
00:08:11,120 --> 00:08:14,560
after computing the entire product in

186
00:08:14,560 --> 00:08:16,960
these two primes

187
00:08:16,960 --> 00:08:20,080
we then apply crt to derive the result

188
00:08:20,080 --> 00:08:21,520
as if

189
00:08:21,520 --> 00:08:26,000
the sfd is a coefficient ring

190
00:08:26,000 --> 00:08:28,800
for computing

191
00:08:29,759 --> 00:08:31,440
the entire product

192
00:08:31,440 --> 00:08:35,120
of with energies in a certain primary

193
00:08:35,120 --> 00:08:36,559
we need

194
00:08:36,559 --> 00:08:38,799
l plus l 2 2 in the case for

195
00:08:38,799 --> 00:08:41,360
transforming the vector and the matrix

196
00:08:41,360 --> 00:08:44,560
into two primal locations and

197
00:08:44,560 --> 00:08:45,800
l

198
00:08:45,800 --> 00:08:49,920
inverses of ndks

199
00:08:50,320 --> 00:08:52,560
we made the following decisions for our

200
00:08:52,560 --> 00:08:55,440
quotation for implementation

201
00:08:55,440 --> 00:08:58,160
first we compute incomplete entities

202
00:08:58,160 --> 00:09:00,959
giving four coefficient polynomials

203
00:09:00,959 --> 00:09:02,399
this is because

204
00:09:02,399 --> 00:09:04,480
there are only 14 general proposed

205
00:09:04,480 --> 00:09:06,720
registers on cartesian 4

206
00:09:06,720 --> 00:09:09,440
and we find that computing three layers

207
00:09:09,440 --> 00:09:11,760
of indices at the time is the most

208
00:09:11,760 --> 00:09:15,040
economical choice

209
00:09:15,040 --> 00:09:17,040
therefore in total

210
00:09:17,040 --> 00:09:19,839
we compute six layers of entities given

211
00:09:19,839 --> 00:09:22,640
four coefficient polynomials

212
00:09:22,640 --> 00:09:25,040
the second decision is

213
00:09:25,040 --> 00:09:26,320
to decide

214
00:09:26,320 --> 00:09:29,600
how to accumulate

215
00:09:29,600 --> 00:09:31,920
the products of four coefficient

216
00:09:31,920 --> 00:09:33,680
polynomials

217
00:09:33,680 --> 00:09:36,080
for example suppose we are going to

218
00:09:36,080 --> 00:09:37,519
compute h

219
00:09:37,519 --> 00:09:39,600
as a summation of

220
00:09:39,600 --> 00:09:42,800
products of p and q

221
00:09:42,800 --> 00:09:45,040
and we focus on the constant term of the

222
00:09:45,040 --> 00:09:47,200
result

223
00:09:47,200 --> 00:09:50,240
then we see that there are at least two

224
00:09:50,240 --> 00:09:52,480
approaches for computing the constant

225
00:09:52,480 --> 00:09:53,680
term

226
00:09:53,680 --> 00:09:56,240
the first approach is to compute the

227
00:09:56,240 --> 00:09:59,360
64-bit value of each segment

228
00:09:59,360 --> 00:10:01,360
and reducing them to three little bit

229
00:10:01,360 --> 00:10:02,800
immediately

230
00:10:02,800 --> 00:10:05,760
and finally accumulate the

231
00:10:05,760 --> 00:10:08,720
secondary result

232
00:10:08,720 --> 00:10:11,839
the second approach is to compute

233
00:10:11,839 --> 00:10:15,120
the 64-bit value of the of the constant

234
00:10:15,120 --> 00:10:16,079
term

235
00:10:16,079 --> 00:10:18,880
so we only need to reduce to 72 bit

236
00:10:18,880 --> 00:10:21,440
value once

237
00:10:21,440 --> 00:10:24,399
on quotation 4 due to the register

238
00:10:24,399 --> 00:10:25,519
pressure

239
00:10:25,519 --> 00:10:27,120
it's not

240
00:10:27,120 --> 00:10:31,279
very clear which approach is faster

241
00:10:31,279 --> 00:10:33,519
and our experiment shows that the second

242
00:10:33,519 --> 00:10:35,760
approach is slightly faster than the

243
00:10:35,760 --> 00:10:38,000
first approach

244
00:10:38,000 --> 00:10:40,560
furthermore we expect that

245
00:10:40,560 --> 00:10:42,800
the second approach is going to be a lot

246
00:10:42,800 --> 00:10:44,640
faster than first approach

247
00:10:44,640 --> 00:10:45,519
if

248
00:10:45,519 --> 00:10:49,120
we have a lot more registers

249
00:10:50,079 --> 00:10:52,399
now we take a look at multiplying

250
00:10:52,399 --> 00:10:55,680
polynomials in yen true

251
00:10:55,680 --> 00:10:58,640
they are in total six parameter sets

252
00:10:58,640 --> 00:11:01,120
in our paper we implement

253
00:11:01,120 --> 00:11:03,040
permutation for

254
00:11:03,040 --> 00:11:05,040
four of the parameter sets

255
00:11:05,040 --> 00:11:07,279
the largest two parameter cells are

256
00:11:07,279 --> 00:11:08,480
introduced

257
00:11:08,480 --> 00:11:11,200
after we submit a paper

258
00:11:11,200 --> 00:11:12,880
the polynomial ring for point of

259
00:11:12,880 --> 00:11:14,480
notation n true

260
00:11:14,480 --> 00:11:15,680
is z

261
00:11:15,680 --> 00:11:17,600
is z q of x

262
00:11:17,600 --> 00:11:21,040
over x to the n minus one where q is a

263
00:11:21,040 --> 00:11:22,560
power of two

264
00:11:22,560 --> 00:11:25,839
and n is a prime

265
00:11:25,920 --> 00:11:28,959
we are targeting the polling location

266
00:11:28,959 --> 00:11:31,839
where one of the modules is ternary

267
00:11:31,839 --> 00:11:33,279
in other words

268
00:11:33,279 --> 00:11:35,600
all of its coefficients must be within

269
00:11:35,600 --> 00:11:38,560
plus minus one

270
00:11:39,040 --> 00:11:40,640
in this video

271
00:11:40,640 --> 00:11:44,079
i only focus on the differences of the

272
00:11:44,079 --> 00:11:47,440
crystal indentation

273
00:11:47,440 --> 00:11:50,399
in n2 and n2 prime

274
00:11:50,399 --> 00:11:52,160
in n2 prime

275
00:11:52,160 --> 00:11:54,560
we are given two primes for specifying

276
00:11:54,560 --> 00:11:56,959
the polynomial rings as

277
00:11:56,959 --> 00:11:59,360
the large gradle field

278
00:11:59,360 --> 00:12:03,120
and now compare the parameter set 761 in

279
00:12:03,120 --> 00:12:07,760
n2 prime with the parameter set 677 and

280
00:12:07,760 --> 00:12:11,839
701 in entry

281
00:12:12,079 --> 00:12:13,040
in both

282
00:12:13,040 --> 00:12:15,440
implementation of good stream

283
00:12:15,440 --> 00:12:17,680
they are almost the same

284
00:12:17,680 --> 00:12:19,760
except for the reduction

285
00:12:19,760 --> 00:12:24,160
to the target polynomial rings

286
00:12:24,160 --> 00:12:26,880
in both implementations

287
00:12:26,880 --> 00:12:29,920
the reduction of polynomial modulus is

288
00:12:29,920 --> 00:12:30,959
performed

289
00:12:30,959 --> 00:12:33,040
before the reduction of the coefficient

290
00:12:33,040 --> 00:12:35,120
ring

291
00:12:35,120 --> 00:12:36,839
first of

292
00:12:36,839 --> 00:12:39,519
all we can look at the polynomial

293
00:12:39,519 --> 00:12:41,600
modulus in n2

294
00:12:41,600 --> 00:12:43,680
and find that

295
00:12:43,680 --> 00:12:45,279
for reducing

296
00:12:45,279 --> 00:12:46,480
to

297
00:12:46,480 --> 00:12:48,160
a coefficient

298
00:12:48,160 --> 00:12:50,720
we we need one addition

299
00:12:50,720 --> 00:12:54,800
this also implies that the maximum value

300
00:12:54,800 --> 00:12:58,160
in z in regard z as a coefficient ring

301
00:12:58,160 --> 00:12:59,040
is

302
00:12:59,040 --> 00:13:01,200
n times q

303
00:13:01,200 --> 00:13:02,639
on the other hand

304
00:13:02,639 --> 00:13:05,279
the polynomial modulus natural prime is

305
00:13:05,279 --> 00:13:08,320
x to the p minus x minus 1.

306
00:13:08,320 --> 00:13:12,959
so to reduce into a single entry we need

307
00:13:12,959 --> 00:13:14,880
two additions

308
00:13:14,880 --> 00:13:18,399
this also implies that the maximum value

309
00:13:18,399 --> 00:13:22,560
of the result in z is n times 2 p minus

310
00:13:22,560 --> 00:13:24,720
1.

311
00:13:24,720 --> 00:13:26,079
so really

312
00:13:26,079 --> 00:13:28,560
because of the polynomial modulus we

313
00:13:28,560 --> 00:13:30,880
find that we need

314
00:13:30,880 --> 00:13:33,760
one addition on average

315
00:13:33,760 --> 00:13:36,000
and we also need to choose a larger

316
00:13:36,000 --> 00:13:37,040
prime

317
00:13:37,040 --> 00:13:40,399
for compute s and z

318
00:13:40,399 --> 00:13:43,040
next we look at the reductions of

319
00:13:43,040 --> 00:13:46,079
coefficient greens

320
00:13:46,320 --> 00:13:49,040
for n2 the coefficient ring is a power

321
00:13:49,040 --> 00:13:50,160
of 2.

322
00:13:50,160 --> 00:13:51,440
therefore

323
00:13:51,440 --> 00:13:54,399
we can pack two half words before the

324
00:13:54,399 --> 00:13:55,760
reduction

325
00:13:55,760 --> 00:13:58,560
and after packing into a register

326
00:13:58,560 --> 00:14:01,279
we can then reduce two coefficients at a

327
00:14:01,279 --> 00:14:05,600
time with their instruction logical end

328
00:14:05,600 --> 00:14:07,199
so on average

329
00:14:07,199 --> 00:14:10,240
for each coefficient we only need 0.5

330
00:14:10,240 --> 00:14:13,279
cycles for the reduction

331
00:14:13,279 --> 00:14:15,519
but if we look at the professional intro

332
00:14:15,519 --> 00:14:16,720
prime

333
00:14:16,720 --> 00:14:19,360
then the coefficient ring because of the

334
00:14:19,360 --> 00:14:21,839
partition ring is a prime ring

335
00:14:21,839 --> 00:14:24,880
we need 32-bit arithmetic

336
00:14:24,880 --> 00:14:26,880
for reducing reduction

337
00:14:26,880 --> 00:14:29,440
and reduce the coefficient ring with a

338
00:14:29,440 --> 00:14:32,079
two-cycle implementation for barrier

339
00:14:32,079 --> 00:14:33,680
reduction

340
00:14:33,680 --> 00:14:37,440
after the reduction we then pack

341
00:14:37,440 --> 00:14:39,440
two headwords into

342
00:14:39,440 --> 00:14:40,880
a word

343
00:14:40,880 --> 00:14:43,279
therefore on already

344
00:14:43,279 --> 00:14:44,480
we need

345
00:14:44,480 --> 00:14:49,120
two cycles for reducing each entry

346
00:14:53,080 --> 00:14:55,199
[Music]

347
00:14:55,199 --> 00:14:58,399
on average we'll really see that we can

348
00:14:58,399 --> 00:15:01,360
save 2.5 cycles for reducing each

349
00:15:01,360 --> 00:15:03,440
coefficient

350
00:15:03,440 --> 00:15:06,839
this gives us about

351
00:15:06,839 --> 00:15:10,240
1750 cycles of reduction on the cycle

352
00:15:10,240 --> 00:15:11,680
count

353
00:15:11,680 --> 00:15:14,240
fact we have a slightly greater

354
00:15:14,240 --> 00:15:16,880
reduction and this is because that

355
00:15:16,880 --> 00:15:19,360
polynomials in entry are shorter natural

356
00:15:19,360 --> 00:15:21,760
prone

357
00:15:22,020 --> 00:15:24,160
[Music]

358
00:15:24,160 --> 00:15:25,920
i'll talk a little bit about some

359
00:15:25,920 --> 00:15:30,000
implementation concentrations with fbx2

360
00:15:30,000 --> 00:15:32,560
for every extra implementation since we

361
00:15:32,560 --> 00:15:35,360
are implementing system two system bit

362
00:15:35,360 --> 00:15:37,120
leds

363
00:15:37,120 --> 00:15:40,000
we have to compute crt for applying the

364
00:15:40,000 --> 00:15:42,240
result as in z

365
00:15:42,240 --> 00:15:44,720
for the scenarity we implement the

366
00:15:44,720 --> 00:15:46,880
divided difference form for the

367
00:15:46,880 --> 00:15:48,800
computation

368
00:15:48,800 --> 00:15:51,279
and we find that this approach is more

369
00:15:51,279 --> 00:15:52,880
variable when there are only two

370
00:15:52,880 --> 00:15:56,079
problems for the crt

371
00:15:56,079 --> 00:15:58,800
another important constellation is

372
00:15:58,800 --> 00:16:02,160
the magnitude of the

373
00:16:02,480 --> 00:16:05,360
intermediate results

374
00:16:05,360 --> 00:16:07,680
we compute the worst case intervals from

375
00:16:07,680 --> 00:16:10,800
the given input intervals

376
00:16:10,800 --> 00:16:13,199
for the computation of the intervals we

377
00:16:13,199 --> 00:16:15,440
follow precisely the arithmetic

378
00:16:15,440 --> 00:16:18,240
instructions

379
00:16:18,880 --> 00:16:19,920
and

380
00:16:19,920 --> 00:16:22,240
and grab precisely the rules of unity

381
00:16:22,240 --> 00:16:25,040
for computation

382
00:16:25,440 --> 00:16:27,519
we look at the results of our

383
00:16:27,519 --> 00:16:29,759
implementations

384
00:16:29,759 --> 00:16:32,399
the most time-consuming operation in

385
00:16:32,399 --> 00:16:34,839
saber is the measured vector

386
00:16:34,839 --> 00:16:38,079
multiplication on protocol 4 we obtained

387
00:16:38,079 --> 00:16:42,160
a reduction of 61 percent of cyber count

388
00:16:42,160 --> 00:16:44,959
and we're often reduction of 32 percent

389
00:16:44,959 --> 00:16:47,360
on skylake

390
00:16:47,360 --> 00:16:50,720
another important polynomials

391
00:16:50,720 --> 00:16:53,279
polynomial arithmetic in saber is the

392
00:16:53,279 --> 00:16:54,720
inner product

393
00:16:54,720 --> 00:16:57,920
on cortisone 4 reduces cytokine by 42

394
00:16:57,920 --> 00:16:58,959
percent

395
00:16:58,959 --> 00:17:01,199
and on skylab we include the cytokine by

396
00:17:01,199 --> 00:17:03,120
55 percent

397
00:17:03,120 --> 00:17:05,359
on quotation 4

398
00:17:05,359 --> 00:17:07,760
the reduction of the ratio of inner

399
00:17:07,760 --> 00:17:09,839
product is less than

400
00:17:09,839 --> 00:17:12,799
the ratio of measurement medication

401
00:17:12,799 --> 00:17:14,559
this is expected

402
00:17:14,559 --> 00:17:15,520
because

403
00:17:15,520 --> 00:17:17,599
the structure of mr metro vector

404
00:17:17,599 --> 00:17:19,760
multiplication is more friendly for any

405
00:17:19,760 --> 00:17:22,640
keys than the structure for of inner

406
00:17:22,640 --> 00:17:24,559
product

407
00:17:24,559 --> 00:17:27,280
but i think a little bit weird why we're

408
00:17:27,280 --> 00:17:28,319
obtaining

409
00:17:28,319 --> 00:17:30,840
a greater ratio of reduction on

410
00:17:30,840 --> 00:17:33,679
skylake for the inner problem

411
00:17:33,679 --> 00:17:36,400
and the main reason is that for the

412
00:17:36,400 --> 00:17:38,720
for the inner product on skyline

413
00:17:38,720 --> 00:17:41,520
we perform we compute in the way

414
00:17:41,520 --> 00:17:43,919
by assuming one of the

415
00:17:43,919 --> 00:17:48,559
vector is already transformed by indices

416
00:17:48,880 --> 00:17:50,400
so the cytokine

417
00:17:50,400 --> 00:17:52,080
is executing three angular

418
00:17:52,080 --> 00:17:54,080
transformations

419
00:17:54,080 --> 00:17:57,120
on cartesian 4 we are not doing so

420
00:17:57,120 --> 00:17:59,679
mainly because we are trying to

421
00:17:59,679 --> 00:18:02,400
make the implementation compatible with

422
00:18:02,400 --> 00:18:05,840
the reference implementation

423
00:18:06,799 --> 00:18:08,640
z is a result of the

424
00:18:08,640 --> 00:18:10,480
first winner saber

425
00:18:10,480 --> 00:18:13,440
on quarter cent 4 we'll obtain

426
00:18:13,440 --> 00:18:17,440
a reduction from 22 to 26

427
00:18:17,440 --> 00:18:18,880
once guided

428
00:18:18,880 --> 00:18:21,840
we obtain a reduction from 5 to 10

429
00:18:21,840 --> 00:18:24,240
percent

430
00:18:24,240 --> 00:18:26,880
we also have the result of these

431
00:18:26,880 --> 00:18:29,280
result for cci transform

432
00:18:29,280 --> 00:18:32,960
we also have the result for cpa

433
00:18:32,960 --> 00:18:35,679
in our paper

434
00:18:37,840 --> 00:18:40,160
this is a result for multiplying a

435
00:18:40,160 --> 00:18:42,640
polynomial with a ternary polynomial in

436
00:18:42,640 --> 00:18:44,880
n2

437
00:18:44,880 --> 00:18:46,559
on cartesian 4

438
00:18:46,559 --> 00:18:49,520
we obtain reduction

439
00:18:49,520 --> 00:18:52,400
for all of the parameter sets even for

440
00:18:52,400 --> 00:18:54,720
the smallest parameter cells

441
00:18:54,720 --> 00:18:57,440
and this set a new criteria for applying

442
00:18:57,440 --> 00:19:00,640
entities on context info

443
00:19:00,640 --> 00:19:02,000
on skylake

444
00:19:02,000 --> 00:19:04,000
we are not able to have a speed line for

445
00:19:04,000 --> 00:19:05,919
the smaller square meter set

446
00:19:05,919 --> 00:19:07,280
but we still

447
00:19:07,280 --> 00:19:08,480
acquire

448
00:19:08,480 --> 00:19:10,559
reduction between 7

449
00:19:10,559 --> 00:19:12,240
to 15

450
00:19:12,240 --> 00:19:15,039
for all other parameters

451
00:19:15,039 --> 00:19:17,679
this implies that when the security

452
00:19:17,679 --> 00:19:20,160
level becomes larger and larger we

453
00:19:20,160 --> 00:19:22,960
believe that

454
00:19:23,039 --> 00:19:25,919
on both cortisone 4 and skylake with fx

455
00:19:25,919 --> 00:19:26,799
2

456
00:19:26,799 --> 00:19:30,960
ndt is more variable for entry

457
00:19:31,679 --> 00:19:33,600
this is a result of the first level of

458
00:19:33,600 --> 00:19:34,720
engine

459
00:19:34,720 --> 00:19:37,760
we ignore the cytokine of degeneration

460
00:19:37,760 --> 00:19:41,360
because the t generation is dominated by

461
00:19:41,360 --> 00:19:44,000
the inversion of polynomial

462
00:19:44,000 --> 00:19:46,080
and we are not targeting the inversion

463
00:19:46,080 --> 00:19:48,000
here

464
00:19:48,000 --> 00:19:49,520
for the encapsulation and the

465
00:19:49,520 --> 00:19:54,640
capsulation of the cells 677 and 6

466
00:19:54,640 --> 00:19:57,039
and 701

467
00:19:57,039 --> 00:19:59,280
on cortisone 4 we obtain a reduction

468
00:19:59,280 --> 00:20:02,240
between 3 to 6 percent

469
00:20:02,240 --> 00:20:04,960
in our scheduling reaction reduction

470
00:20:04,960 --> 00:20:07,840
between

471
00:20:08,320 --> 00:20:11,678
one percent to two percent

472
00:20:13,679 --> 00:20:15,919
we also implement injuries for the round

473
00:20:15,919 --> 00:20:18,240
two summation log

474
00:20:18,240 --> 00:20:20,960
the polynomial ring chosen by log is z2

475
00:20:20,960 --> 00:20:26,880
of x over x m minus plus 1 where q is

476
00:20:26,880 --> 00:20:28,480
2

477
00:20:28,480 --> 00:20:30,559
251

478
00:20:30,559 --> 00:20:33,120
and n is a power of 2

479
00:20:33,120 --> 00:20:34,559
which which are

480
00:20:34,559 --> 00:20:36,799
5 12 and

481
00:20:36,799 --> 00:20:39,679
10 24.

482
00:20:39,760 --> 00:20:42,320
in the last summation uh polynomial

483
00:20:42,320 --> 00:20:44,559
multiplication are also of the form

484
00:20:44,559 --> 00:20:47,360
where one of the number can is more is

485
00:20:47,360 --> 00:20:49,840
ternary

486
00:20:49,919 --> 00:20:53,440
during the implantation for any keys

487
00:20:53,440 --> 00:20:58,400
we find that in the previous indentation

488
00:20:59,200 --> 00:21:01,360
the approach is somewhat a quadratic

489
00:21:01,360 --> 00:21:03,440
time in n

490
00:21:03,440 --> 00:21:05,200
and we believe this is the main reason

491
00:21:05,200 --> 00:21:08,480
why we are able to obtain uh

492
00:21:08,480 --> 00:21:10,320
that speed on multiplying two

493
00:21:10,320 --> 00:21:13,120
polynomials

494
00:21:13,600 --> 00:21:15,840
due to the vast speed of multiplying two

495
00:21:15,840 --> 00:21:17,679
polynomials

496
00:21:17,679 --> 00:21:19,679
we obtain

497
00:21:19,679 --> 00:21:21,840
a reduction of cyclone for the source

498
00:21:21,840 --> 00:21:23,200
you know luck

499
00:21:23,200 --> 00:21:25,679
between

500
00:21:26,720 --> 00:21:28,000
67

501
00:21:28,000 --> 00:21:28,880
to

502
00:21:28,880 --> 00:21:32,799
79 on protesting 4 and between 20

503
00:21:32,799 --> 00:21:33,679
to

504
00:21:33,679 --> 00:21:34,720
61

505
00:21:34,720 --> 00:21:36,799
on skylake

506
00:21:36,799 --> 00:21:38,400
in conclusion

507
00:21:38,400 --> 00:21:40,480
we find that even though the profession

508
00:21:40,480 --> 00:21:41,360
rings

509
00:21:41,360 --> 00:21:44,559
of saber and true and log are ancient

510
00:21:44,559 --> 00:21:45,679
friendly

511
00:21:45,679 --> 00:21:48,559
you can still benefit from entities

512
00:21:48,559 --> 00:21:50,080
in particular

513
00:21:50,080 --> 00:21:52,400
for saber the polynomial modulus is

514
00:21:52,400 --> 00:21:53,919
integral friendly

515
00:21:53,919 --> 00:21:55,600
and the structure of measure vector

516
00:21:55,600 --> 00:21:58,640
multiplication is also english landing

517
00:21:58,640 --> 00:21:59,919
for n true

518
00:21:59,919 --> 00:22:01,919
since the degrees of polynomials is

519
00:22:01,919 --> 00:22:04,400
large we can still benefit from any

520
00:22:04,400 --> 00:22:05,520
trees

521
00:22:05,520 --> 00:22:08,000
and for luck

522
00:22:08,000 --> 00:22:09,840
both the polynomial modules and the

523
00:22:09,840 --> 00:22:12,880
degrees of the polynomials such as any

524
00:22:12,880 --> 00:22:13,840
keys

525
00:22:13,840 --> 00:22:16,240
are very useful

526
00:22:16,240 --> 00:22:19,039
for computer result as in z

527
00:22:19,039 --> 00:22:21,679
on quotation 4 which is a 32-bit prime

528
00:22:21,679 --> 00:22:23,760
binding the maximum result

529
00:22:23,760 --> 00:22:27,120
and for fbx2 which is two system b prime

530
00:22:27,120 --> 00:22:30,479
spinning the maximum result

531
00:22:31,280 --> 00:22:33,039
there are some works worth noting in

532
00:22:33,039 --> 00:22:34,559
this period

533
00:22:34,559 --> 00:22:36,880
in our paper we optimize save on

534
00:22:36,880 --> 00:22:40,799
question 4 only for the purpose of speed

535
00:22:40,799 --> 00:22:44,799
and we think mature from blind junk for

536
00:22:44,799 --> 00:22:49,120
integrating stack optimization of safer

537
00:22:49,120 --> 00:22:52,480
for even more stack optimization 4 and

538
00:22:52,480 --> 00:22:55,360
more about entities there's a paper

539
00:22:55,360 --> 00:22:57,120
multimodally annuities for saber on

540
00:22:57,120 --> 00:22:59,840
potassium 3 and cortisone 4.

541
00:22:59,840 --> 00:23:04,159
for entities with 64-bit rb8a

542
00:23:04,159 --> 00:23:07,440
there's a paper near any key fast to

543
00:23:07,440 --> 00:23:11,840
kyber and saber on codex s7 2 and 8.1

544
00:23:11,840 --> 00:23:14,799
in the paper the authors introduce a

545
00:23:14,799 --> 00:23:16,240
string instruction single with

546
00:23:16,240 --> 00:23:18,080
multiplication

547
00:23:18,080 --> 00:23:19,919
and explain how to

548
00:23:19,919 --> 00:23:22,720
multiply polynomials in

549
00:23:22,720 --> 00:23:24,159
x to the

550
00:23:24,159 --> 00:23:26,559
2 of 4 minus theta essentially as a

551
00:23:26,559 --> 00:23:29,360
state conclusion without requiring the

552
00:23:29,360 --> 00:23:32,159
execution of a square root

553
00:23:32,159 --> 00:23:35,520
or first root of data

554
00:23:35,520 --> 00:23:39,158
thank you for your intention

