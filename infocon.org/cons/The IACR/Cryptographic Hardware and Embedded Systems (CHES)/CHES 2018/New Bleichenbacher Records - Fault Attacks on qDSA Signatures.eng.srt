1
00:00:00,000 --> 00:00:05,009
welcome to the last session<font color="#E5E5E5"> last</font>

2
00:00:01,589 --> 00:00:06,869
<font color="#E5E5E5">technical session on</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> 2018 so this</font>

3
00:00:05,009 --> 00:00:10,800
session will be<font color="#CCCCCC"> on faulty pax fault</font>

4
00:00:06,870 --> 00:00:11,849
attacks<font color="#CCCCCC"> -</font><font color="#E5E5E5"> so the first paper is on new</font>

5
00:00:10,800 --> 00:00:15,199
<font color="#CCCCCC">bludgeoned batcher</font>

6
00:00:11,849 --> 00:00:18,509
<font color="#CCCCCC">records fault</font><font color="#E5E5E5"> tax on QD s a signature</font>

7
00:00:15,199 --> 00:00:22,170
<font color="#CCCCCC">the work is a joint</font><font color="#E5E5E5"> work between Kyoto</font>

8
00:00:18,510 --> 00:00:25,880
University and<font color="#CCCCCC"> Indy labs</font><font color="#E5E5E5"> and the work</font>

9
00:00:22,170 --> 00:00:29,490
will<font color="#CCCCCC"> be presented by</font><font color="#E5E5E5"> Akira takahashi</font>

10
00:00:25,880 --> 00:00:30,179
<font color="#E5E5E5">thank you for the introduction so</font><font color="#CCCCCC"> Akira</font>

11
00:00:29,490 --> 00:00:31,799
<font color="#E5E5E5">takahashi</font>

12
00:00:30,179 --> 00:00:33,899
according to a master's student<font color="#CCCCCC"> at</font>

13
00:00:31,800 --> 00:00:36,120
<font color="#CCCCCC">Curtin University</font><font color="#E5E5E5"> in Japan</font><font color="#CCCCCC"> so today I'm</font>

14
00:00:33,899 --> 00:00:38,520
going to present<font color="#E5E5E5"> our recent results on</font>

15
00:00:36,120 --> 00:00:40,440
black Emperor's attack<font color="#E5E5E5"> and also</font><font color="#CCCCCC"> our new</font>

16
00:00:38,520 --> 00:00:42,660
<font color="#CCCCCC">4th attacks on QDs a signature scheme</font>

17
00:00:40,440 --> 00:00:44,430
this is a joint<font color="#CCCCCC"> work with method Teebs</font>

18
00:00:42,660 --> 00:00:47,429
and the master ukyo<font color="#CCCCCC"> BAE from NTT</font>

19
00:00:44,430 --> 00:00:49,890
<font color="#E5E5E5">circular platform laboratories so</font><font color="#CCCCCC"> here</font>

20
00:00:47,430 --> 00:00:51,690
<font color="#CCCCCC">is the outline of today's talk</font><font color="#E5E5E5"> first I'm</font>

21
00:00:49,890 --> 00:00:53,910
going to<font color="#E5E5E5"> introduce</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> problem we've</font>

22
00:00:51,690 --> 00:00:55,110
addressed in this work<font color="#E5E5E5"> and then I'm</font>

23
00:00:53,910 --> 00:00:58,288
going<font color="#CCCCCC"> to present our three main</font>

24
00:00:55,110 --> 00:01:00,629
contributions of the paper<font color="#E5E5E5"> so as a</font>

25
00:00:58,289 --> 00:01:02,850
motivating example<font color="#CCCCCC"> let me</font><font color="#E5E5E5"> briefly</font>

26
00:01:00,629 --> 00:01:05,399
describe<font color="#CCCCCC"> the snow signature scheme which</font>

27
00:01:02,850 --> 00:01:08,430
<font color="#CCCCCC">is one of the simplest</font><font color="#E5E5E5"> and most</font><font color="#CCCCCC"> widely</font>

28
00:01:05,400 --> 00:01:11,880
used digital<font color="#E5E5E5"> signature scheme so as</font>

29
00:01:08,430 --> 00:01:14,430
everyone probably knows the DSA<font color="#E5E5E5"> and the</font>

30
00:01:11,880 --> 00:01:16,830
ECDSA<font color="#CCCCCC"> those are the most notable variant</font>

31
00:01:14,430 --> 00:01:18,810
of the snow signature as for the

32
00:01:16,830 --> 00:01:20,640
provable security Chenoa signature is

33
00:01:18,810 --> 00:01:22,590
known to be<font color="#E5E5E5"> secure in</font><font color="#CCCCCC"> the random Oracle</font>

34
00:01:20,640 --> 00:01:25,439
model<font color="#E5E5E5"> if the discrete log problem is</font>

35
00:01:22,590 --> 00:01:27,360
hard<font color="#E5E5E5"> also another important feature of</font>

36
00:01:25,439 --> 00:01:29,429
the snore is that it<font color="#E5E5E5"> relies on an</font>

37
00:01:27,360 --> 00:01:31,650
ephemeral random value<font color="#CCCCCC"> and what's known</font>

38
00:01:29,430 --> 00:01:34,439
<font color="#E5E5E5">so let's have a look at this nonce in</font>

39
00:01:31,650 --> 00:01:37,110
the snow signature so here at least is a

40
00:01:34,439 --> 00:01:39,329
signer<font color="#E5E5E5"> holding a secret key</font><font color="#CCCCCC"> D</font><font color="#E5E5E5"> chosen</font>

41
00:01:37,110 --> 00:01:42,329
<font color="#E5E5E5">former integer mod n where n is a large</font>

42
00:01:39,329 --> 00:01:45,298
crime and whenever Alice generates a new

43
00:01:42,329 --> 00:01:49,079
signature<font color="#E5E5E5"> she first as samples this</font>

44
00:01:45,299 --> 00:01:52,530
<font color="#E5E5E5">integer K from</font><font color="#CCCCCC"> 0 energy uniformly and at</font>

45
00:01:49,079 --> 00:01:54,720
<font color="#E5E5E5">random and this an integer</font><font color="#CCCCCC"> K is</font>

46
00:01:52,530 --> 00:01:57,360
typically called<font color="#E5E5E5"> knowns</font><font color="#CCCCCC"> and it usually</font>

47
00:01:54,720 --> 00:02:00,539
satisfies<font color="#CCCCCC"> this congruence of</font><font color="#E5E5E5"> the</font>

48
00:01:57,360 --> 00:02:02,759
relation and since ace

49
00:02:00,540 --> 00:02:05,460
<font color="#E5E5E5">s and H those are the public information</font>

50
00:02:02,759 --> 00:02:08,699
as a part<font color="#E5E5E5"> of the signature of course</font>

51
00:02:05,460 --> 00:02:10,619
<font color="#CCCCCC">Alice</font><font color="#E5E5E5"> should never disclose her known to</font>

52
00:02:08,699 --> 00:02:13,170
anyone<font color="#E5E5E5"> else otherwise it would</font><font color="#CCCCCC"> be very</font>

53
00:02:10,619 --> 00:02:13,990
easy to recover the secret<font color="#E5E5E5"> key also</font>

54
00:02:13,170 --> 00:02:16,540
<font color="#CCCCCC">Alistair</font>

55
00:02:13,990 --> 00:02:19,570
never used the same<font color="#E5E5E5"> exact game more</font><font color="#CCCCCC"> than</font>

56
00:02:16,540 --> 00:02:22,239
once<font color="#CCCCCC"> so these are well-known facts but</font>

57
00:02:19,570 --> 00:02:23,470
what if this<font color="#CCCCCC"> case is slightly</font><font color="#E5E5E5"> biased</font><font color="#CCCCCC"> for</font>

58
00:02:22,240 --> 00:02:26,740
example as showing this figure

59
00:02:23,470 --> 00:02:30,090
<font color="#E5E5E5">and what if Kate stop it</font><font color="#CCCCCC"> OSI to zero or</font>

60
00:02:26,740 --> 00:02:32,980
what if<font color="#CCCCCC"> known as case partially leaked</font>

61
00:02:30,090 --> 00:02:35,490
actually even in such cases<font color="#CCCCCC"> by</font>

62
00:02:32,980 --> 00:02:38,410
collecting sufficiently many signatures

63
00:02:35,490 --> 00:02:41,170
adversely<font color="#CCCCCC"> to</font><font color="#E5E5E5"> distill by</font><font color="#CCCCCC"> post a discrete</font>

64
00:02:38,410 --> 00:02:43,690
log problem<font color="#E5E5E5"> and consequently</font><font color="#CCCCCC"> steal the</font>

65
00:02:41,170 --> 00:02:47,109
secret key<font color="#E5E5E5"> by solving so-called hidden</font>

66
00:02:43,690 --> 00:02:48,970
<font color="#CCCCCC">above program so we can see that</font><font color="#E5E5E5"> nonce</font>

67
00:02:47,110 --> 00:02:52,570
is<font color="#CCCCCC"> a very sensitive part</font><font color="#E5E5E5"> of the snow</font>

68
00:02:48,970 --> 00:02:55,780
signature DSA and<font color="#E5E5E5"> ECDSA as well and it</font>

69
00:02:52,570 --> 00:03:00,010
is<font color="#E5E5E5"> very crucial</font><font color="#CCCCCC"> to evaluate risk of</font>

70
00:02:55,780 --> 00:03:02,500
biased or<font color="#CCCCCC"> leak noises so in this context</font>

71
00:03:00,010 --> 00:03:04,810
<font color="#E5E5E5">our contribution can be summarized</font><font color="#CCCCCC"> as</font>

72
00:03:02,500 --> 00:03:06,760
<font color="#E5E5E5">follows first we optimize the</font>

73
00:03:04,810 --> 00:03:09,130
<font color="#E5E5E5">statistical attack framework known as</font>

74
00:03:06,760 --> 00:03:12,160
ply Himba attack against the nonce

75
00:03:09,130 --> 00:03:14,650
additional like signatures second as a

76
00:03:12,160 --> 00:03:17,170
separate contribution we propose new

77
00:03:14,650 --> 00:03:20,200
fault attacks against<font color="#E5E5E5"> specific channel</font>

78
00:03:17,170 --> 00:03:22,799
like signatures called<font color="#CCCCCC"> Q DSA in order to</font>

79
00:03:20,200 --> 00:03:24,820
obtain a few bits of<font color="#CCCCCC"> analysis</font><font color="#E5E5E5"> and</font>

80
00:03:22,800 --> 00:03:27,970
combining those two contributions

81
00:03:24,820 --> 00:03:30,010
together<font color="#E5E5E5"> we implemented a full secret</font>

82
00:03:27,970 --> 00:03:32,260
key recovery attack against you know

83
00:03:30,010 --> 00:03:35,590
like signatures which was instantiated

84
00:03:32,260 --> 00:03:39,370
<font color="#E5E5E5">over</font><font color="#CCCCCC"> 252 big group using only</font><font color="#E5E5E5"> two or</font>

85
00:03:35,590 --> 00:03:41,410
<font color="#E5E5E5">three bit</font><font color="#CCCCCC"> knows leaks and actually</font><font color="#E5E5E5"> these</font>

86
00:03:39,370 --> 00:03:43,360
targeted parameters have set<font color="#CCCCCC"> new records</font>

87
00:03:41,410 --> 00:03:45,460
in the implementation<font color="#CCCCCC"> that black embers</font>

88
00:03:43,360 --> 00:03:47,740
attack<font color="#E5E5E5"> so here's the summary of the</font>

89
00:03:45,460 --> 00:03:50,050
previous<font color="#CCCCCC"> published records of attacks</font>

90
00:03:47,740 --> 00:03:52,780
against<font color="#E5E5E5"> gnosis including both black</font>

91
00:03:50,050 --> 00:03:56,800
<font color="#E5E5E5">Himba has attack and latticed attacks as</font>

92
00:03:52,780 --> 00:03:59,500
well<font color="#E5E5E5"> so basically we solved this</font><font color="#CCCCCC"> 3v3</font>

93
00:03:56,800 --> 00:04:02,020
case and much harder<font color="#E5E5E5"> to beat the case</font>

94
00:03:59,500 --> 00:04:03,640
and to the best of our knowledge these

95
00:04:02,020 --> 00:04:06,850
<font color="#E5E5E5">targeted parameters have never been</font>

96
00:04:03,640 --> 00:04:08,829
broken<font color="#E5E5E5"> before so now I'm going to</font>

97
00:04:06,850 --> 00:04:11,290
<font color="#CCCCCC">present</font><font color="#E5E5E5"> our first contribution the</font>

98
00:04:08,830 --> 00:04:13,660
optimization<font color="#CCCCCC"> of black embers attack the</font>

99
00:04:11,290 --> 00:04:15,579
what is<font color="#CCCCCC"> bla him but has nonce attack it</font>

100
00:04:13,660 --> 00:04:17,140
was<font color="#E5E5E5"> originally already proposed</font><font color="#CCCCCC"> 18 years</font>

101
00:04:15,580 --> 00:04:19,989
<font color="#E5E5E5">ago by Daniel Baha Baha</font>

102
00:04:17,140 --> 00:04:23,229
<font color="#E5E5E5">but it was only recently revisited by</font>

103
00:04:19,988 --> 00:04:26,169
those two<font color="#CCCCCC"> papers the model tau at</font><font color="#E5E5E5"> the</font>

104
00:04:23,229 --> 00:04:28,010
<font color="#E5E5E5">chest 2013 and arremato</font><font color="#CCCCCC"> at the</font><font color="#E5E5E5"> edge of</font>

105
00:04:26,169 --> 00:04:30,349
<font color="#CCCCCC">creed 2014</font>

106
00:04:28,010 --> 00:04:33,380
the main idea<font color="#CCCCCC"> of the black</font><font color="#E5E5E5"> embossed</font>

107
00:04:30,350 --> 00:04:35,630
<font color="#E5E5E5">attack is to quantify the non spires</font><font color="#CCCCCC"> by</font>

108
00:04:33,380 --> 00:04:38,210
defining the<font color="#CCCCCC"> so called bias function</font>

109
00:04:35,630 --> 00:04:40,760
which is real<font color="#E5E5E5"> values between 0 and 1 and</font>

110
00:04:38,210 --> 00:04:43,489
<font color="#CCCCCC">to find a</font><font color="#E5E5E5"> peak of it though I don't have</font>

111
00:04:40,760 --> 00:04:46,070
<font color="#E5E5E5">much time to formally describe this vise</font>

112
00:04:43,490 --> 00:04:48,650
function essentially<font color="#E5E5E5"> the bias function</font>

113
00:04:46,070 --> 00:04:51,409
becomes 0<font color="#E5E5E5"> if the nonce is uniformly</font>

114
00:04:48,650 --> 00:04:53,659
distributed<font color="#E5E5E5"> and if the nonce is biased</font>

115
00:04:51,410 --> 00:04:57,680
<font color="#E5E5E5">then this bias function becomes close to</font>

116
00:04:53,660 --> 00:04:59,780
1 and essentially the most<font color="#E5E5E5"> important and</font>

117
00:04:57,680 --> 00:05:02,180
costly phase of the<font color="#CCCCCC"> blacken bajas attack</font>

118
00:04:59,780 --> 00:05:05,630
is<font color="#CCCCCC"> so-called</font><font color="#E5E5E5"> range reduction of integers</font>

119
00:05:02,180 --> 00:05:07,490
<font color="#CCCCCC">H and this phase is it necessary</font><font color="#E5E5E5"> to</font>

120
00:05:05,630 --> 00:05:11,570
<font color="#E5E5E5">detect by speak correctly and</font>

121
00:05:07,490 --> 00:05:14,390
efficiently<font color="#CCCCCC"> so what do</font><font color="#E5E5E5"> we have to do</font>

122
00:05:11,570 --> 00:05:16,790
<font color="#CCCCCC">exactly at during</font><font color="#E5E5E5"> the range reduction so</font>

123
00:05:14,390 --> 00:05:20,090
we<font color="#CCCCCC"> Furr we are</font><font color="#E5E5E5"> first given</font><font color="#CCCCCC"> s signatures</font>

124
00:05:16,790 --> 00:05:22,460
and<font color="#E5E5E5"> we</font><font color="#CCCCCC"> want to find sufficiently many</font>

125
00:05:20,090 --> 00:05:25,280
linear combinations of those<font color="#CCCCCC"> h values</font>

126
00:05:22,460 --> 00:05:28,669
and these linear combinations<font color="#CCCCCC"> have to</font>

127
00:05:25,280 --> 00:05:30,409
<font color="#CCCCCC">satisfy two conditions</font><font color="#E5E5E5"> first the</font>

128
00:05:28,670 --> 00:05:32,600
resulting linear combination should be

129
00:05:30,410 --> 00:05:35,660
smaller than<font color="#E5E5E5"> a certain threshold value</font>

130
00:05:32,600 --> 00:05:37,460
<font color="#E5E5E5">second the coefficients of the linear</font>

131
00:05:35,660 --> 00:05:39,440
combination should be<font color="#E5E5E5"> as sparse as</font>

132
00:05:37,460 --> 00:05:40,849
possible so those are to require the

133
00:05:39,440 --> 00:05:44,060
conditions for the black hamburgers

134
00:05:40,850 --> 00:05:46,220
<font color="#CCCCCC">attack to work correctly</font><font color="#E5E5E5"> also please</font>

135
00:05:44,060 --> 00:05:48,980
<font color="#CCCCCC">note that the disc</font><font color="#E5E5E5"> range reduction</font>

136
00:05:46,220 --> 00:05:51,590
problem looks like<font color="#E5E5E5"> knapsack problem but</font>

137
00:05:48,980 --> 00:05:54,110
the main<font color="#CCCCCC"> difference</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> that in the</font><font color="#E5E5E5"> range</font>

138
00:05:51,590 --> 00:05:56,270
reduction problem<font color="#E5E5E5"> we have to find many</font>

139
00:05:54,110 --> 00:06:00,470
<font color="#E5E5E5">linear combinations instead of a single</font>

140
00:05:56,270 --> 00:06:02,120
<font color="#CCCCCC">map exact knapsack solution so the</font>

141
00:06:00,470 --> 00:06:04,310
<font color="#E5E5E5">previous works are mentioned before I</font>

142
00:06:02,120 --> 00:06:06,950
<font color="#E5E5E5">have tried</font><font color="#CCCCCC"> to address</font><font color="#E5E5E5"> this range the</font>

143
00:06:04,310 --> 00:06:09,740
reduction program<font color="#CCCCCC"> in</font><font color="#E5E5E5"> different ways but</font>

144
00:06:06,950 --> 00:06:12,260
<font color="#CCCCCC">unfortunately those there approaches</font>

145
00:06:09,740 --> 00:06:15,950
were not very optimal especially if the

146
00:06:12,260 --> 00:06:19,400
<font color="#CCCCCC">nones biases is quite small for</font><font color="#E5E5E5"> example</font>

147
00:06:15,950 --> 00:06:22,610
<font color="#CCCCCC">the atom of</font><font color="#E5E5E5"> the adults work they</font><font color="#CCCCCC"> use the</font>

148
00:06:19,400 --> 00:06:25,099
BCC lattice reduction algorithm<font color="#E5E5E5"> but with</font>

149
00:06:22,610 --> 00:06:26,780
<font color="#E5E5E5">this approach the resulting coefficients</font>

150
00:06:25,100 --> 00:06:28,790
of the linear combinations are not

151
00:06:26,780 --> 00:06:32,090
sparse enough if the<font color="#E5E5E5"> non-spicy</font>

152
00:06:28,790 --> 00:06:34,280
<font color="#CCCCCC">is small</font><font color="#E5E5E5"> also another important another</font>

153
00:06:32,090 --> 00:06:37,580
<font color="#E5E5E5">approach is the sort</font><font color="#CCCCCC"> indifference</font>

154
00:06:34,280 --> 00:06:39,590
conducted<font color="#CCCCCC"> by</font><font color="#E5E5E5"> Alana at all but the sword</font>

155
00:06:37,580 --> 00:06:41,780
indifference requires many inputs and

156
00:06:39,590 --> 00:06:44,810
consequently consumes

157
00:06:41,780 --> 00:06:47,780
huge<font color="#E5E5E5"> memory space so we took different</font>

158
00:06:44,810 --> 00:06:51,230
<font color="#E5E5E5">approach so here we apply the shredder</font>

159
00:06:47,780 --> 00:06:53,359
<font color="#E5E5E5">some years</font><font color="#CCCCCC"> Nautica Rossum actually the</font>

160
00:06:51,230 --> 00:06:56,750
use of the<font color="#CCCCCC"> premier was already</font><font color="#E5E5E5"> mentioned</font>

161
00:06:53,360 --> 00:06:58,610
by<font color="#CCCCCC"> playing</font><font color="#E5E5E5"> bajo but interestingly</font><font color="#CCCCCC"> its</font>

162
00:06:56,750 --> 00:07:01,280
merits have never been<font color="#CCCCCC"> examined in the</font>

163
00:06:58,610 --> 00:07:04,220
previous<font color="#E5E5E5"> work so what's good about the</font>

164
00:07:01,280 --> 00:07:06,619
<font color="#CCCCCC">sharpie some</font><font color="#E5E5E5"> you so be so first the</font>

165
00:07:04,220 --> 00:07:09,889
<font color="#CCCCCC">shrimp</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> Amir is highly space efficient</font>

166
00:07:06,620 --> 00:07:12,200
and second it can be highly

167
00:07:09,889 --> 00:07:15,050
<font color="#E5E5E5">parallelizable</font><font color="#CCCCCC"> by</font><font color="#E5E5E5"> making use of how</font><font color="#CCCCCC"> Greg</font>

168
00:07:12,200 --> 00:07:17,539
<font color="#E5E5E5">cram choose variant of</font><font color="#CCCCCC"> shreds Amir so</font>

169
00:07:15,050 --> 00:07:21,919
our regular reduction algorithm was

170
00:07:17,540 --> 00:07:25,010
<font color="#CCCCCC">specifically inspired</font><font color="#E5E5E5"> by this variant so</font>

171
00:07:21,919 --> 00:07:27,400
he's the brief<font color="#E5E5E5"> overview of</font><font color="#CCCCCC"> how the</font>

172
00:07:25,010 --> 00:07:30,409
<font color="#E5E5E5">premier</font><font color="#CCCCCC"> base 20 reduction works</font>

173
00:07:27,400 --> 00:07:32,929
so we first split the input into<font color="#CCCCCC"> the</font>

174
00:07:30,410 --> 00:07:36,110
list into four separate<font color="#CCCCCC"> lists and sort</font>

175
00:07:32,930 --> 00:07:38,479
them second<font color="#CCCCCC"> we search for the</font><font color="#E5E5E5"> linear</font>

176
00:07:36,110 --> 00:07:40,610
combinations to whose top consecutive

177
00:07:38,479 --> 00:07:43,430
<font color="#CCCCCC">bits coincide with</font><font color="#E5E5E5"> some certain fixed</font>

178
00:07:40,610 --> 00:07:47,900
<font color="#E5E5E5">value and sort them and push</font><font color="#CCCCCC"> them into</font>

179
00:07:43,430 --> 00:07:50,330
<font color="#E5E5E5">two separate lists and finally we take</font>

180
00:07:47,900 --> 00:07:53,060
<font color="#E5E5E5">the differences between those linear</font>

181
00:07:50,330 --> 00:07:55,400
combinations of two and since now it's

182
00:07:53,060 --> 00:07:58,520
guaranteed that<font color="#E5E5E5"> the collision happened</font>

183
00:07:55,400 --> 00:08:00,590
in the top bits with good<font color="#E5E5E5"> probability we</font>

184
00:07:58,520 --> 00:08:03,799
<font color="#CCCCCC">can get</font><font color="#E5E5E5"> very small linear combinations</font>

185
00:08:00,590 --> 00:08:04,330
for for each one<font color="#E5E5E5"> so that's the basic</font>

186
00:08:03,800 --> 00:08:06,950
idea

187
00:08:04,330 --> 00:08:09,890
so we analyze this algorithm in detail

188
00:08:06,950 --> 00:08:12,560
<font color="#E5E5E5">and they observed well balance the</font>

189
00:08:09,890 --> 00:08:14,510
time-space trade-offs<font color="#E5E5E5"> so here you can</font>

190
00:08:12,560 --> 00:08:16,160
see compared<font color="#E5E5E5"> to the compared to the</font>

191
00:08:14,510 --> 00:08:18,680
previous approach<font color="#E5E5E5"> certain difference</font>

192
00:08:16,160 --> 00:08:23,030
<font color="#CCCCCC">that our range reduction algorithm is</font>

193
00:08:18,680 --> 00:08:25,039
much more<font color="#CCCCCC"> spacious space efficient but</font>

194
00:08:23,030 --> 00:08:28,640
the drawback is<font color="#E5E5E5"> that the time</font><font color="#CCCCCC"> complexity</font>

195
00:08:25,039 --> 00:08:30,229
<font color="#E5E5E5">got a bit worse</font><font color="#CCCCCC"> but in practice the</font>

196
00:08:28,640 --> 00:08:32,390
<font color="#CCCCCC">three parameter based range reductions</font>

197
00:08:30,229 --> 00:08:34,419
<font color="#E5E5E5">to terminate within a reasonable time</font>

198
00:08:32,390 --> 00:08:36,588
frame by making use of<font color="#E5E5E5"> large-scale</font>

199
00:08:34,419 --> 00:08:39,760
<font color="#CCCCCC">polarization technique which I'm going</font>

200
00:08:36,589 --> 00:08:42,200
<font color="#E5E5E5">to revisit in the implementation</font><font color="#CCCCCC"> section</font>

201
00:08:39,760 --> 00:08:44,870
so<font color="#CCCCCC"> now I will</font><font color="#E5E5E5"> go over</font><font color="#CCCCCC"> our second</font>

202
00:08:42,200 --> 00:08:47,750
contribution<font color="#CCCCCC"> the</font><font color="#E5E5E5"> fault attacks on</font><font color="#CCCCCC"> Q DSS</font>

203
00:08:44,870 --> 00:08:50,000
signature scheme the Q DSS signature

204
00:08:47,750 --> 00:08:52,520
which stands<font color="#CCCCCC"> for the question digital</font>

205
00:08:50,000 --> 00:08:55,279
signature algorithm is a recent high

206
00:08:52,520 --> 00:08:57,379
speed very<font color="#CCCCCC"> untraditional sonar signature</font>

207
00:08:55,279 --> 00:08:59,870
<font color="#CCCCCC">Varinius and</font><font color="#E5E5E5"> Smith's</font><font color="#CCCCCC"> at Asia</font><font color="#E5E5E5"> crypt last</font>

208
00:08:57,379 --> 00:09:02,180
year the important feature of the<font color="#E5E5E5"> QT</font>

209
00:08:59,870 --> 00:09:05,629
essays that<font color="#E5E5E5"> it can be instantiated with</font>

210
00:09:02,180 --> 00:09:07,399
<font color="#CCCCCC">curve to 519 Montgomery curve</font><font color="#E5E5E5"> so this</font>

211
00:09:05,629 --> 00:09:09,800
<font color="#E5E5E5">means</font><font color="#CCCCCC"> that the signature generation</font>

212
00:09:07,399 --> 00:09:12,439
algorithm can benefit from<font color="#E5E5E5"> highly</font>

213
00:09:09,800 --> 00:09:14,420
efficient<font color="#E5E5E5"> Montgomery's ladder</font><font color="#CCCCCC"> Manas</font>

214
00:09:12,439 --> 00:09:17,149
ladder based of scalar multiplication<font color="#E5E5E5"> in</font>

215
00:09:14,420 --> 00:09:20,628
which y-coordinate is not used at all

216
00:09:17,149 --> 00:09:24,459
also please<font color="#E5E5E5"> note</font><font color="#CCCCCC"> that in QD s a the</font>

217
00:09:20,629 --> 00:09:28,160
nonce K is deterministically<font color="#CCCCCC"> I generated</font>

218
00:09:24,459 --> 00:09:30,109
here our<font color="#CCCCCC"> talk Lydia is quite simple</font><font color="#E5E5E5"> so</font>

219
00:09:28,160 --> 00:09:32,870
we basically exploit this group

220
00:09:30,110 --> 00:09:36,110
structure<font color="#E5E5E5"> of curve</font><font color="#CCCCCC"> to 5</font><font color="#E5E5E5"> up 19 which as</font>

221
00:09:32,870 --> 00:09:37,420
<font color="#E5E5E5">you can see include normal non prime and</font>

222
00:09:36,110 --> 00:09:40,490
lower the point

223
00:09:37,420 --> 00:09:42,769
<font color="#E5E5E5">so by injecting an appropriate fault to</font>

224
00:09:40,490 --> 00:09:46,550
<font color="#E5E5E5">the base point point of the copy to</font><font color="#CCCCCC"> 5 of</font>

225
00:09:42,769 --> 00:09:50,480
19 we can perturb it<font color="#E5E5E5"> to non prime or low</font>

226
00:09:46,550 --> 00:09:52,670
<font color="#E5E5E5">order points and using this</font><font color="#CCCCCC"> 40 base</font>

227
00:09:50,480 --> 00:09:55,550
point as an input<font color="#CCCCCC"> to the ladder function</font>

228
00:09:52,670 --> 00:09:58,819
<font color="#E5E5E5">by looking at the resulting 40</font><font color="#CCCCCC"> hog</font><font color="#E5E5E5"> top</font>

229
00:09:55,550 --> 00:10:01,519
for the output<font color="#E5E5E5"> we</font><font color="#CCCCCC"> can obtain the partial</font>

230
00:09:58,819 --> 00:10:03,920
information of a secret scalar K which

231
00:10:01,519 --> 00:10:07,850
is<font color="#E5E5E5"> used as non cinders not</font><font color="#CCCCCC"> acute ESS</font>

232
00:10:03,920 --> 00:10:09,920
<font color="#E5E5E5">signature so here I give the our</font>

233
00:10:07,850 --> 00:10:14,050
fundamental observation and why our

234
00:10:09,920 --> 00:10:18,219
<font color="#E5E5E5">attack works against QD s</font><font color="#CCCCCC"> s signature</font>

235
00:10:14,050 --> 00:10:21,649
<font color="#E5E5E5">first if we attack the EC snore or ECDSA</font>

236
00:10:18,220 --> 00:10:24,290
<font color="#E5E5E5">since they use</font><font color="#CCCCCC"> Y y-coordinate as</font><font color="#E5E5E5"> well if</font>

237
00:10:21,649 --> 00:10:26,629
we<font color="#CCCCCC"> perturb the point the resulting point</font>

238
00:10:24,290 --> 00:10:29,240
<font color="#E5E5E5">is not likely on the original curve</font>

239
00:10:26,629 --> 00:10:31,250
anymore<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> why our</font><font color="#E5E5E5"> fault attacks</font>

240
00:10:29,240 --> 00:10:34,699
wouldn't make sense<font color="#E5E5E5"> against</font><font color="#CCCCCC"> the such</font>

241
00:10:31,250 --> 00:10:36,559
schemes on the other hand this<font color="#CCCCCC"> QT si</font>

242
00:10:34,699 --> 00:10:38,990
makes use of<font color="#E5E5E5"> X on the</font><font color="#CCCCCC"> arithmetic and</font>

243
00:10:36,559 --> 00:10:41,750
therefore<font color="#CCCCCC"> does not involve y coordinate</font>

244
00:10:38,990 --> 00:10:45,170
the perturb point<font color="#E5E5E5"> the P tilde is</font>

245
00:10:41,750 --> 00:10:47,929
<font color="#E5E5E5">necessary on the copy itself or its</font>

246
00:10:45,170 --> 00:10:50,599
twist<font color="#E5E5E5"> so that's why even after rejecting</font>

247
00:10:47,929 --> 00:10:53,540
a fault we can still confidently makes

248
00:10:50,600 --> 00:10:57,050
use of the structure<font color="#E5E5E5"> of the underlying</font>

249
00:10:53,540 --> 00:11:00,349
<font color="#E5E5E5">original curve so following this</font>

250
00:10:57,050 --> 00:11:03,559
observation<font color="#E5E5E5"> we propose the two types of</font>

251
00:11:00,350 --> 00:11:05,689
for the tax on carbon 5<font color="#CCCCCC"> AB 19</font><font color="#E5E5E5"> the first</font>

252
00:11:03,559 --> 00:11:09,050
one is random<font color="#E5E5E5"> same permanent vote</font>

253
00:11:05,689 --> 00:11:10,670
against the program memory so<font color="#E5E5E5"> you</font>

254
00:11:09,050 --> 00:11:12,349
using this fault attack we<font color="#CCCCCC"> can obtain</font>

255
00:11:10,670 --> 00:11:15,500
the three least significant bits of<font color="#E5E5E5"> the</font>

256
00:11:12,350 --> 00:11:17,510
<font color="#CCCCCC">nose</font><font color="#E5E5E5"> the second one is the instruction</font>

257
00:11:15,500 --> 00:11:20,029
skipping<font color="#CCCCCC"> fault</font><font color="#E5E5E5"> against the base point</font>

258
00:11:17,510 --> 00:11:23,060
<font color="#E5E5E5">initialization though this</font><font color="#CCCCCC"> fourth attack</font>

259
00:11:20,029 --> 00:11:25,339
<font color="#E5E5E5">only reveals to LSB</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the nose is much</font>

260
00:11:23,060 --> 00:11:27,349
easier to<font color="#CCCCCC"> achieve in practice and we</font>

261
00:11:25,339 --> 00:11:30,079
verify that<font color="#E5E5E5"> this attack indeed works</font>

262
00:11:27,350 --> 00:11:32,570
against the Qt<font color="#E5E5E5"> si using the</font><font color="#CCCCCC"> cheap</font>

263
00:11:30,079 --> 00:11:35,569
whisper light against the AVR

264
00:11:32,570 --> 00:11:37,610
microcontroller the<font color="#E5E5E5"> countermeasure is</font>

265
00:11:35,570 --> 00:11:40,040
quite simple just<font color="#E5E5E5"> multiplying the</font><font color="#CCCCCC"> noses</font>

266
00:11:37,610 --> 00:11:42,560
by least common multiple<font color="#CCCCCC"> of the curb</font>

267
00:11:40,040 --> 00:11:45,140
<font color="#CCCCCC">carbon cofactor</font><font color="#E5E5E5"> and the twist cofactor</font>

268
00:11:42,560 --> 00:11:47,630
and<font color="#CCCCCC"> this technique is technique is</font>

269
00:11:45,140 --> 00:11:50,899
<font color="#E5E5E5">commonly known as</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> cofactor killing or</font>

270
00:11:47,630 --> 00:11:54,079
<font color="#E5E5E5">clumping so especially for curve</font><font color="#CCCCCC"> 2 5f</font>

271
00:11:50,899 --> 00:11:58,250
90s case we can just<font color="#CCCCCC"> multiply the nonce</font>

272
00:11:54,079 --> 00:12:00,199
<font color="#CCCCCC">K by the least common multiple eight</font>

273
00:11:58,250 --> 00:12:02,630
you know this<font color="#E5E5E5"> clamping technique</font>

274
00:12:00,200 --> 00:12:04,540
<font color="#E5E5E5">completely throws our proposed fault</font>

275
00:12:02,630 --> 00:12:08,209
attacks

276
00:12:04,540 --> 00:12:11,329
<font color="#E5E5E5">okay so now I'm going to present</font><font color="#CCCCCC"> our</font>

277
00:12:08,209 --> 00:12:12,768
main result the implementation<font color="#E5E5E5"> of the</font>

278
00:12:11,329 --> 00:12:16,969
nonce attack against<font color="#CCCCCC"> you know like</font>

279
00:12:12,769 --> 00:12:20,209
signature so here's our main result so

280
00:12:16,970 --> 00:12:23,600
<font color="#E5E5E5">we attacked caduceus QD</font><font color="#CCCCCC"> si using only</font>

281
00:12:20,209 --> 00:12:27,170
<font color="#CCCCCC">two</font><font color="#E5E5E5"> bit leaks and the first as an input</font>

282
00:12:23,600 --> 00:12:30,110
we simulated<font color="#CCCCCC"> two to the 40/40 Q</font><font color="#E5E5E5"> DSS</font>

283
00:12:27,170 --> 00:12:33,319
signatures<font color="#E5E5E5"> out of which we used only two</font>

284
00:12:30,110 --> 00:12:36,680
to the 2016 census having a smaller<font color="#CCCCCC"> H</font>

285
00:12:33,320 --> 00:12:40,790
values and we fed them into black<font color="#E5E5E5"> embers</font>

286
00:12:36,680 --> 00:12:43,459
attack<font color="#CCCCCC"> and we have highly</font><font color="#E5E5E5"> paralyzed the</font>

287
00:12:40,790 --> 00:12:48,920
implementation so in this experiment<font color="#CCCCCC"> we</font>

288
00:12:43,459 --> 00:12:51,170
<font color="#E5E5E5">used 256 threads in total and after the</font>

289
00:12:48,920 --> 00:12:53,719
first trial of<font color="#E5E5E5"> the blacken bajas attack</font>

290
00:12:51,170 --> 00:12:57,979
<font color="#E5E5E5">we successfully recover the top bits of</font>

291
00:12:53,720 --> 00:13:00,589
the secret key also<font color="#CCCCCC"> as expected the</font>

292
00:12:57,980 --> 00:13:03,140
memory consumption was quite modest<font color="#E5E5E5"> so</font>

293
00:13:00,589 --> 00:13:04,300
in this experiment we only used 15

294
00:13:03,140 --> 00:13:08,120
gigabytes of memory

295
00:13:04,300 --> 00:13:10,459
<font color="#E5E5E5">also the</font><font color="#CCCCCC"> cpu time was rather long the</font>

296
00:13:08,120 --> 00:13:12,890
thanks to<font color="#E5E5E5"> the</font><font color="#CCCCCC"> large scale polarization</font>

297
00:13:10,459 --> 00:13:17,660
the actual experiment finished<font color="#E5E5E5"> only</font>

298
00:13:12,890 --> 00:13:20,660
after 16 days also<font color="#CCCCCC"> once</font><font color="#E5E5E5"> we know the top</font>

299
00:13:17,660 --> 00:13:23,189
bits of the secret key the<font color="#E5E5E5"> we can</font>

300
00:13:20,660 --> 00:13:26,219
recover<font color="#E5E5E5"> the remaining bits of the secret</font>

301
00:13:23,190 --> 00:13:29,339
<font color="#CCCCCC">by iteratively applying blabbers attack</font>

302
00:13:26,220 --> 00:13:33,720
<font color="#CCCCCC">and this</font><font color="#E5E5E5"> procedure took only less than</font>

303
00:13:29,339 --> 00:13:35,310
<font color="#E5E5E5">six hours also please</font><font color="#CCCCCC"> note that our</font>

304
00:13:33,720 --> 00:13:37,290
estimation shows that<font color="#E5E5E5"> a certain</font>

305
00:13:35,310 --> 00:13:39,750
difference the previous<font color="#E5E5E5"> approach would</font>

306
00:13:37,290 --> 00:13:41,699
<font color="#CCCCCC">require much more signatures which would</font>

307
00:13:39,750 --> 00:13:44,069
be<font color="#E5E5E5"> equivalent to the two terabytes of</font>

308
00:13:41,699 --> 00:13:46,410
memory<font color="#CCCCCC"> I</font><font color="#E5E5E5"> would say that this attack</font>

309
00:13:44,069 --> 00:13:49,110
would have<font color="#CCCCCC"> been much more difficult to</font>

310
00:13:46,410 --> 00:13:53,009
achieve in practice<font color="#E5E5E5"> using the previous</font>

311
00:13:49,110 --> 00:13:55,379
range reduction algorithm also we

312
00:13:53,009 --> 00:13:58,860
attacked a bit easier case that using

313
00:13:55,379 --> 00:14:00,509
<font color="#E5E5E5">three bit nonce leaks so here of</font><font color="#CCCCCC"> course</font>

314
00:13:58,860 --> 00:14:04,110
the wall clock time was much<font color="#CCCCCC"> shorter</font>

315
00:14:00,509 --> 00:14:07,410
than<font color="#E5E5E5"> the</font><font color="#CCCCCC"> previous</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> since the</font><font color="#CCCCCC"> cpu</font>

316
00:14:04,110 --> 00:14:09,000
time was less than<font color="#E5E5E5"> 10 days also the</font>

317
00:14:07,410 --> 00:14:11,219
memory consumption was<font color="#E5E5E5"> less than</font><font color="#CCCCCC"> three</font>

318
00:14:09,000 --> 00:14:12,569
gigabytes<font color="#CCCCCC"> we can say that the black</font>

319
00:14:11,220 --> 00:14:17,160
<font color="#E5E5E5">ember has</font><font color="#CCCCCC"> attacked would</font><font color="#E5E5E5"> be even</font>

320
00:14:12,569 --> 00:14:19,079
feasible<font color="#CCCCCC"> using</font><font color="#E5E5E5"> a small laptop also it</font>

321
00:14:17,160 --> 00:14:21,420
turned out that attacking<font color="#E5E5E5"> with sort and</font>

322
00:14:19,079 --> 00:14:24,269
difference is possible<font color="#E5E5E5"> and of course</font><font color="#CCCCCC"> as</font>

323
00:14:21,420 --> 00:14:26,128
expected that<font color="#CCCCCC"> sovereign</font><font color="#E5E5E5"> difference range</font>

324
00:14:24,269 --> 00:14:29,939
reduction was much faster<font color="#CCCCCC"> than the share</font>

325
00:14:26,129 --> 00:14:32,490
<font color="#CCCCCC">premier based one however the memory</font>

326
00:14:29,939 --> 00:14:35,699
consumption was over a hundred gigabytes

327
00:14:32,490 --> 00:14:37,889
<font color="#E5E5E5">and it required billions of signatures</font>

328
00:14:35,699 --> 00:14:43,859
<font color="#E5E5E5">which would not fit in the commonly used</font>

329
00:14:37,889 --> 00:14:46,470
laptop so let's<font color="#E5E5E5"> conclude so in the first</font>

330
00:14:43,860 --> 00:14:49,259
<font color="#CCCCCC">contribution we optimized</font><font color="#E5E5E5"> the black</font>

331
00:14:46,470 --> 00:14:52,139
<font color="#E5E5E5">Emperor's attack</font><font color="#CCCCCC"> and successfully</font>

332
00:14:49,259 --> 00:14:54,470
overcame the memory barrier or previous

333
00:14:52,139 --> 00:14:57,959
approach by applying knapsack algorithm

334
00:14:54,470 --> 00:15:00,060
in the second contribution<font color="#E5E5E5"> we</font><font color="#CCCCCC"> propose</font>

335
00:14:57,959 --> 00:15:03,859
new<font color="#CCCCCC"> fort attacks on cue DSS</font><font color="#E5E5E5"> signature</font>

336
00:15:00,060 --> 00:15:06,329
over<font color="#E5E5E5"> instantiated</font><font color="#CCCCCC"> overcome to</font><font color="#E5E5E5"> 5:19 and</font>

337
00:15:03,860 --> 00:15:08,550
here we discovered yet another situation

338
00:15:06,329 --> 00:15:11,279
where<font color="#E5E5E5"> adversity could learn the partial</font>

339
00:15:08,550 --> 00:15:13,170
<font color="#CCCCCC">information of nonces also the important</font>

340
00:15:11,279 --> 00:15:15,660
lesson here<font color="#CCCCCC"> is that</font><font color="#E5E5E5"> the cofactor killing</font>

341
00:15:13,170 --> 00:15:17,699
is a crucial countermeasure when using<font color="#E5E5E5"> X</font>

342
00:15:15,660 --> 00:15:20,699
on the arithmetic<font color="#E5E5E5"> of Montgomery score</font>

343
00:15:17,699 --> 00:15:23,399
<font color="#CCCCCC">and finally we implemented a nonce</font>

344
00:15:20,699 --> 00:15:25,349
attack<font color="#CCCCCC"> and presented the</font><font color="#E5E5E5"> first</font>

345
00:15:23,399 --> 00:15:28,139
<font color="#CCCCCC">large-scale polarization of the black</font>

346
00:15:25,350 --> 00:15:31,110
inverse attack<font color="#E5E5E5"> and successfully set the</font>

347
00:15:28,139 --> 00:15:33,540
<font color="#E5E5E5">new records of nonce attack and of</font>

348
00:15:31,110 --> 00:15:35,610
<font color="#E5E5E5">course our parallel implementation of</font>

349
00:15:33,540 --> 00:15:36,930
the black composite AK is publicly

350
00:15:35,610 --> 00:15:38,999
available on github page

351
00:15:36,930 --> 00:15:46,410
so please<font color="#E5E5E5"> check it</font><font color="#CCCCCC"> out thank you very</font>

352
00:15:38,999 --> 00:15:58,649
much so we have some time<font color="#CCCCCC"> for questions</font>

353
00:15:46,410 --> 00:16:00,389
<font color="#E5E5E5">so</font><font color="#CCCCCC"> I thank you for the nice job I</font><font color="#E5E5E5"> have a</font>

354
00:15:58,649 --> 00:16:02,429
question what kind of fault model you

355
00:16:00,389 --> 00:16:06,209
have assumed in this case can you

356
00:16:02,429 --> 00:16:11,189
<font color="#E5E5E5">actually the fault model so in the first</font>

357
00:16:06,209 --> 00:16:14,309
<font color="#E5E5E5">form fault model</font><font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> the the</font><font color="#CCCCCC"> fault</font>

358
00:16:11,189 --> 00:16:17,209
<font color="#CCCCCC">that makes it possible to label the the</font>

359
00:16:14,309 --> 00:16:20,399
<font color="#CCCCCC">3lv</font><font color="#E5E5E5"> so we basically like</font><font color="#CCCCCC"> assume</font><font color="#E5E5E5"> that</font>

360
00:16:17,209 --> 00:16:23,368
optical fault<font color="#E5E5E5"> in order to induce the bit</font>

361
00:16:20,399 --> 00:16:25,519
flip<font color="#E5E5E5"> and then the second</font><font color="#CCCCCC"> model</font><font color="#E5E5E5"> we</font>

362
00:16:23,369 --> 00:16:28,949
basically use the clock glitch

363
00:16:25,519 --> 00:16:32,369
okay so<font color="#CCCCCC"> Club which resulted in single</font>

364
00:16:28,949 --> 00:16:36,179
<font color="#CCCCCC">bit flip only the clock glitch resulted</font>

365
00:16:32,369 --> 00:16:39,230
in bit flips only no no<font color="#E5E5E5"> which was just</font>

366
00:16:36,179 --> 00:16:41,670
used to<font color="#E5E5E5"> allow like skip the one</font>

367
00:16:39,230 --> 00:16:45,029
<font color="#E5E5E5">instruction to set the x-coordinate of</font>

368
00:16:41,670 --> 00:16:47,339
the base point<font color="#CCCCCC"> oh I think I see okay</font>

369
00:16:45,029 --> 00:16:53,610
<font color="#E5E5E5">thank you so are</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> any other</font>

370
00:16:47,339 --> 00:16:54,600
<font color="#CCCCCC">questions</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> I have one question so like</font>

371
00:16:53,610 --> 00:16:57,059
you<font color="#CCCCCC"> mentioned about</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> Montgomery</font>

372
00:16:54,600 --> 00:16:59,220
<font color="#E5E5E5">ladder being implemented using x</font>

373
00:16:57,059 --> 00:17:01,019
coordinates<font color="#E5E5E5"> so what if I also you have</font>

374
00:16:59,220 --> 00:17:03,749
projective coordinates to implement like

375
00:17:01,019 --> 00:17:06,480
<font color="#CCCCCC">will attack</font><font color="#E5E5E5"> still war so like if</font><font color="#CCCCCC"> you</font>

376
00:17:03,749 --> 00:17:09,720
just use X and Z<font color="#CCCCCC"> for example as</font>

377
00:17:06,480 --> 00:17:11,909
coordinates<font color="#CCCCCC"> we</font><font color="#E5E5E5"> basically assume the</font><font color="#CCCCCC"> X T</font>

378
00:17:09,720 --> 00:17:16,679
in this experiment<font color="#CCCCCC"> so that's what</font>

379
00:17:11,909 --> 00:17:17,750
exactly<font color="#CCCCCC"> it works</font><font color="#E5E5E5"> okay so are there any</font>

380
00:17:16,679 --> 00:17:22,069
<font color="#E5E5E5">questions</font>

381
00:17:17,750 --> 00:17:22,069
if not then let's tango speaker

382
00:17:24,099 --> 00:17:26,159
<font color="#E5E5E5">you</font>

