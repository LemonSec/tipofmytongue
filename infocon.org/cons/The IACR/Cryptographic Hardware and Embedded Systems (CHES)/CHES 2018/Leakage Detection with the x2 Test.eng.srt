1
00:00:01,669 --> 00:00:05,370
<font color="#CCCCCC">all right so before the next</font>

2
00:00:03,600 --> 00:00:07,560
<font color="#E5E5E5">presentation I'll continue to harass</font>

3
00:00:05,370 --> 00:00:09,750
anyone standing there are chairs up

4
00:00:07,560 --> 00:00:11,129
front<font color="#E5E5E5"> there's like three here right on</font>

5
00:00:09,750 --> 00:00:13,790
<font color="#E5E5E5">the edge so you don't even</font><font color="#CCCCCC"> have to</font>

6
00:00:11,130 --> 00:00:16,049
interrupt<font color="#E5E5E5"> anyone this row has some free</font>

7
00:00:13,790 --> 00:00:20,910
<font color="#CCCCCC">so</font><font color="#E5E5E5"> please if you'd like come sit</font><font color="#CCCCCC"> down</font>

8
00:00:16,049 --> 00:00:22,529
<font color="#E5E5E5">there's a few come this way the</font>

9
00:00:20,910 --> 00:00:27,720
insistence isn't working as<font color="#CCCCCC"> well as I</font>

10
00:00:22,529 --> 00:00:30,509
hoped<font color="#CCCCCC"> so I'll continue to try the second</font>

11
00:00:27,720 --> 00:00:33,870
presentation<font color="#CCCCCC"> will have leakage detection</font>

12
00:00:30,510 --> 00:00:36,300
with<font color="#CCCCCC"> z-squared</font><font color="#E5E5E5"> tests</font><font color="#CCCCCC"> this is by</font><font color="#E5E5E5"> Amir</font>

13
00:00:33,870 --> 00:00:39,030
Marathi<font color="#CCCCCC"> Bastian Richert via Schneider</font>

14
00:00:36,300 --> 00:00:42,209
<font color="#CCCCCC">and</font><font color="#E5E5E5"> Francis Xavier standard and it will</font>

15
00:00:39,030 --> 00:00:45,270
be presented<font color="#CCCCCC"> here by Bastian so thank</font>

16
00:00:42,210 --> 00:00:48,719
<font color="#CCCCCC">you so when we perform security</font>

17
00:00:45,270 --> 00:00:50,520
relations<font color="#E5E5E5"> we want to assure</font><font color="#CCCCCC"> that a</font>

18
00:00:48,719 --> 00:00:52,350
device does not<font color="#CCCCCC"> leak sensitive</font>

19
00:00:50,520 --> 00:00:54,930
informations or sensitive area during

20
00:00:52,350 --> 00:00:57,960
the execution<font color="#E5E5E5"> of the cryptographic</font>

21
00:00:54,930 --> 00:00:59,850
operations and often<font color="#E5E5E5"> these tests are</font>

22
00:00:57,960 --> 00:01:03,000
performed<font color="#E5E5E5"> based on a text with sampling</font>

23
00:00:59,850 --> 00:01:04,890
<font color="#E5E5E5">criteria and these are the downsides</font>

24
00:01:03,000 --> 00:01:07,020
<font color="#E5E5E5">that you have a high complexity you have</font>

25
00:01:04,890 --> 00:01:09,750
to choose the<font color="#CCCCCC"> method intermediate values</font>

26
00:01:07,020 --> 00:01:12,298
on the models<font color="#E5E5E5"> every attack has to be</font>

27
00:01:09,750 --> 00:01:15,060
optimized<font color="#E5E5E5"> and so it's easy to miss on a</font>

28
00:01:12,299 --> 00:01:17,700
tech nectar but there's also the

29
00:01:15,060 --> 00:01:22,650
approach<font color="#CCCCCC"> of leakage detection which</font>

30
00:01:17,700 --> 00:01:24,540
tries to to use methods or like general

31
00:01:22,650 --> 00:01:27,090
statistical assumptions to get

32
00:01:24,540 --> 00:01:28,979
independent of models or attack methods

33
00:01:27,090 --> 00:01:30,780
so<font color="#E5E5E5"> we can really treat the</font>

34
00:01:28,979 --> 00:01:32,579
implementation as a black box and<font color="#E5E5E5"> don't</font>

35
00:01:30,780 --> 00:01:37,079
need<font color="#E5E5E5"> to adjust the method to it</font>

36
00:01:32,579 --> 00:01:39,059
and the most common today<font color="#E5E5E5"> is test vector</font>

37
00:01:37,079 --> 00:01:39,779
or leakage assessment based on wash

38
00:01:39,060 --> 00:01:43,530
<font color="#E5E5E5">t-test</font>

39
00:01:39,780 --> 00:01:46,920
<font color="#E5E5E5">and this one uses</font><font color="#CCCCCC"> two basically two</font>

40
00:01:43,530 --> 00:01:50,130
<font color="#E5E5E5">properties to reduce this complexity so</font>

41
00:01:46,920 --> 00:01:52,850
first that<font color="#E5E5E5"> reduce it to two</font><font color="#CCCCCC"> classes</font><font color="#E5E5E5"> so</font>

42
00:01:50,130 --> 00:01:55,530
for example a fixed was<font color="#E5E5E5"> this random test</font>

43
00:01:52,850 --> 00:01:58,020
<font color="#CCCCCC">and it also applies simple statistical</font>

44
00:01:55,530 --> 00:02:00,360
<font color="#CCCCCC">treatment so we only estimates that</font>

45
00:01:58,020 --> 00:02:03,810
<font color="#E5E5E5">single service for moments or multiple</font>

46
00:02:00,360 --> 00:02:05,399
statistical moments<font color="#E5E5E5"> but they are also</font>

47
00:02:03,810 --> 00:02:08,229
downsides resulting from these

48
00:02:05,399 --> 00:02:09,850
simplifications so

49
00:02:08,229 --> 00:02:12,910
first we have the reduction to two

50
00:02:09,850 --> 00:02:15,250
classes<font color="#CCCCCC"> which can result in false</font>

51
00:02:12,910 --> 00:02:18,460
negatives<font color="#E5E5E5"> because maybe we can get like</font>

52
00:02:15,250 --> 00:02:20,860
a leakage which is too<font color="#E5E5E5"> similar in these</font>

53
00:02:18,460 --> 00:02:25,420
two<font color="#E5E5E5"> classes but might be detectable with</font>

54
00:02:20,860 --> 00:02:28,900
multiple classes and also because it

55
00:02:25,420 --> 00:02:31,089
only depends on separate moments<font color="#E5E5E5"> maybe</font>

56
00:02:28,900 --> 00:02:34,030
<font color="#E5E5E5">the leakage is spread or distributed</font>

57
00:02:31,090 --> 00:02:36,310
<font color="#CCCCCC">over multiple moments and cannot be</font>

58
00:02:34,030 --> 00:02:38,440
detected<font color="#E5E5E5"> with only looking at a single</font>

59
00:02:36,310 --> 00:02:41,760
moment because<font color="#E5E5E5"> there's there the leakage</font>

60
00:02:38,440 --> 00:02:44,290
is quite small<font color="#E5E5E5"> but summing it up or</font>

61
00:02:41,760 --> 00:02:46,030
comparing the multiple moments<font color="#E5E5E5"> leakage</font>

62
00:02:44,290 --> 00:02:50,799
might be enough to<font color="#CCCCCC"> be detected</font><font color="#E5E5E5"> or</font>

63
00:02:46,030 --> 00:02:54,340
exploited but<font color="#E5E5E5"> XI squared s can address</font>

64
00:02:50,800 --> 00:02:57,220
<font color="#E5E5E5">these two issues first</font><font color="#CCCCCC"> his greatest</font>

65
00:02:54,340 --> 00:02:59,890
<font color="#E5E5E5">works with</font><font color="#CCCCCC"> multiple classes so we can</font>

66
00:02:57,220 --> 00:03:03,520
use more classes than<font color="#E5E5E5"> the totality test</font>

67
00:02:59,890 --> 00:03:07,779
<font color="#E5E5E5">and also the XI squared has is based on</font>

68
00:03:03,520 --> 00:03:09,730
the whole distribution<font color="#E5E5E5"> so we can detect</font>

69
00:03:07,780 --> 00:03:11,620
leakage which is spread over<font color="#E5E5E5"> the</font><font color="#CCCCCC"> whole</font>

70
00:03:09,730 --> 00:03:16,260
distribution<font color="#E5E5E5"> and not only in n single</font>

71
00:03:11,620 --> 00:03:18,610
moments<font color="#E5E5E5"> so coming to our methodology</font>

72
00:03:16,260 --> 00:03:21,370
first when<font color="#E5E5E5"> we perform a fixed versus</font>

73
00:03:18,610 --> 00:03:24,850
random tests we first sample two sets of

74
00:03:21,370 --> 00:03:29,650
traces<font color="#E5E5E5"> one with</font><font color="#CCCCCC"> fixed</font><font color="#E5E5E5"> input one with</font>

75
00:03:24,850 --> 00:03:31,780
random inputs and from these<font color="#CCCCCC"> we compute</font>

76
00:03:29,650 --> 00:03:36,940
the histograms for<font color="#E5E5E5"> each point in time of</font>

77
00:03:31,780 --> 00:03:39,480
<font color="#E5E5E5">the of the two classes and from there we</font>

78
00:03:36,940 --> 00:03:45,430
can<font color="#E5E5E5"> go to the contingency table</font><font color="#CCCCCC"> and</font>

79
00:03:39,480 --> 00:03:49,238
compute our test statistics<font color="#CCCCCC"> a good point</font>

80
00:03:45,430 --> 00:03:51,459
<font color="#E5E5E5">here is that the first part is</font><font color="#CCCCCC"> actually</font>

81
00:03:49,239 --> 00:03:53,560
<font color="#CCCCCC">the same as for</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> t-test when</font><font color="#E5E5E5"> we use</font>

82
00:03:51,459 --> 00:03:56,350
this<font color="#E5E5E5"> fast leakage assessment presented</font>

83
00:03:53,560 --> 00:03:58,660
<font color="#E5E5E5">last year here by a</font><font color="#CCCCCC"> repair us at all</font><font color="#E5E5E5"> so</font>

84
00:03:56,350 --> 00:04:01,989
we can save a<font color="#E5E5E5"> lot of time during the</font>

85
00:03:58,660 --> 00:04:05,459
<font color="#CCCCCC">computation and use like the same pre</font>

86
00:04:01,989 --> 00:04:05,459
computations as for the t-test

87
00:04:05,850 --> 00:04:12,430
this is one<font color="#CCCCCC"> advantage</font><font color="#E5E5E5"> of the</font><font color="#CCCCCC"> a square</font>

88
00:04:08,380 --> 00:04:15,730
test<font color="#E5E5E5"> we can use</font><font color="#CCCCCC"> multiple classes which</font>

89
00:04:12,430 --> 00:04:17,709
works basically<font color="#E5E5E5"> the</font><font color="#CCCCCC"> same we sample more</font>

90
00:04:15,730 --> 00:04:19,690
sets<font color="#CCCCCC"> than the</font><font color="#E5E5E5"> to multiple sets for</font>

91
00:04:17,709 --> 00:04:21,760
<font color="#CCCCCC">example for different fixed inputs and</font>

92
00:04:19,690 --> 00:04:24,910
then we just get more

93
00:04:21,760 --> 00:04:29,980
in our contingency table and can again

94
00:04:24,910 --> 00:04:31,540
compute our statistics so the specific

95
00:04:29,980 --> 00:04:34,780
<font color="#E5E5E5">test we use here is Pearson chi-square</font>

96
00:04:31,540 --> 00:04:37,450
test of Independence<font color="#CCCCCC"> and this one has</font>

97
00:04:34,780 --> 00:04:40,530
<font color="#E5E5E5">the null hypothesis that</font><font color="#CCCCCC"> the occurrences</font>

98
00:04:37,450 --> 00:04:43,599
<font color="#E5E5E5">of the observations are independent</font><font color="#CCCCCC"> and</font>

99
00:04:40,530 --> 00:04:46,119
from<font color="#E5E5E5"> this we can conclude if this null</font>

100
00:04:43,600 --> 00:04:48,100
hypothesis is<font color="#E5E5E5"> rejected the leakage is</font>

101
00:04:46,120 --> 00:04:52,360
<font color="#CCCCCC">informative so we might have some</font>

102
00:04:48,100 --> 00:04:54,430
leaking information this is based

103
00:04:52,360 --> 00:04:56,740
completely<font color="#CCCCCC"> on this</font><font color="#E5E5E5"> contingency table of</font>

104
00:04:54,430 --> 00:04:59,140
frequencies and<font color="#E5E5E5"> not on some estimated</font>

105
00:04:56,740 --> 00:05:03,160
<font color="#E5E5E5">moments but on the sample distribution</font>

106
00:04:59,140 --> 00:05:05,740
<font color="#E5E5E5">we got from our measurements but there's</font>

107
00:05:03,160 --> 00:05:08,440
<font color="#E5E5E5">one down size so we have to always</font>

108
00:05:05,740 --> 00:05:11,530
<font color="#E5E5E5">compute the p-values for the chi-square</font>

109
00:05:08,440 --> 00:05:15,460
test because the degrees<font color="#CCCCCC"> of freedom do</font>

110
00:05:11,530 --> 00:05:18,309
not converge<font color="#E5E5E5"> for the s for the</font><font color="#CCCCCC"> T test so</font>

111
00:05:15,460 --> 00:05:21,070
we have<font color="#CCCCCC"> chosen</font><font color="#E5E5E5"> P as T to the</font><font color="#CCCCCC"> power of</font>

112
00:05:18,310 --> 00:05:24,010
minus 5 for the later experiments which

113
00:05:21,070 --> 00:05:31,390
<font color="#CCCCCC">is equivalent</font><font color="#E5E5E5"> to the usually you special</font>

114
00:05:24,010 --> 00:05:33,250
of T equals<font color="#E5E5E5"> 4.5</font><font color="#CCCCCC"> we can we</font><font color="#E5E5E5"> computed we</font>

115
00:05:31,390 --> 00:05:34,630
can first like build the contingency

116
00:05:33,250 --> 00:05:38,140
table<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is basically just</font>

117
00:05:34,630 --> 00:05:41,740
transforming<font color="#E5E5E5"> the histograms</font><font color="#CCCCCC"> then we have</font>

118
00:05:38,140 --> 00:05:45,010
to compute the<font color="#CCCCCC"> as</font><font color="#E5E5E5"> the expected values</font>

119
00:05:41,740 --> 00:05:46,240
for each cells<font color="#E5E5E5"> on there and then the</font>

120
00:05:45,010 --> 00:05:48,969
<font color="#CCCCCC">computation is very efficient</font><font color="#E5E5E5"> it's</font>

121
00:05:46,240 --> 00:05:51,970
basically<font color="#CCCCCC"> just using computing the</font>

122
00:05:48,970 --> 00:05:54,340
<font color="#CCCCCC">difference summing everything up and</font>

123
00:05:51,970 --> 00:05:56,440
<font color="#E5E5E5">then applying the chi-square probability</font>

124
00:05:54,340 --> 00:06:02,409
density function to<font color="#E5E5E5"> get the</font><font color="#CCCCCC"> p-value</font>

125
00:05:56,440 --> 00:06:06,730
which is the result<font color="#E5E5E5"> of our test so to</font>

126
00:06:02,410 --> 00:06:09,220
test our approach<font color="#E5E5E5"> we first simulated</font>

127
00:06:06,730 --> 00:06:12,490
experiments with<font color="#CCCCCC"> univariate leakage</font>

128
00:06:09,220 --> 00:06:14,650
so we basically simulated a mask

129
00:06:12,490 --> 00:06:17,980
<font color="#E5E5E5">hardware</font><font color="#CCCCCC"> design with</font><font color="#E5E5E5"> parallel processing</font>

130
00:06:14,650 --> 00:06:22,179
of<font color="#E5E5E5"> the dishes so our secret value split</font>

131
00:06:17,980 --> 00:06:24,670
up<font color="#E5E5E5"> into D shares X I and we combined</font>

132
00:06:22,180 --> 00:06:28,710
these shares with a<font color="#CCCCCC"> hemingway leakage</font>

133
00:06:24,670 --> 00:06:31,710
function and<font color="#E5E5E5"> added Gaussian noise to</font>

134
00:06:28,710 --> 00:06:36,630
so we can produce<font color="#E5E5E5"> different</font><font color="#CCCCCC"> SNR values</font>

135
00:06:31,710 --> 00:06:38,940
<font color="#E5E5E5">and when we test this with an fix where</font>

136
00:06:36,630 --> 00:06:42,810
<font color="#E5E5E5">this random test we can see it the</font>

137
00:06:38,940 --> 00:06:44,430
results<font color="#E5E5E5"> that</font><font color="#CCCCCC"> for the lower orders UT's</font>

138
00:06:42,810 --> 00:06:47,490
<font color="#CCCCCC">test</font><font color="#E5E5E5"> actually performs better than the</font>

139
00:06:44,430 --> 00:06:51,330
chi-square test<font color="#E5E5E5"> but with increasing</font>

140
00:06:47,490 --> 00:06:54,449
orders and our test order<font color="#E5E5E5"> 3</font><font color="#CCCCCC"> D theta</font><font color="#E5E5E5"> 3</font>

141
00:06:51,330 --> 00:06:56,280
and<font color="#CCCCCC"> d 4</font><font color="#E5E5E5"> we can see that the chi-square</font>

142
00:06:54,449 --> 00:06:58,199
test improves<font color="#E5E5E5"> and we expect that</font>

143
00:06:56,280 --> 00:07:02,909
advantage gets even higher for

144
00:06:58,199 --> 00:07:05,280
<font color="#E5E5E5">increasing orders the other parameter we</font>

145
00:07:02,910 --> 00:07:09,139
have<font color="#E5E5E5"> to test is the</font><font color="#CCCCCC"> snr and there we can</font>

146
00:07:05,280 --> 00:07:13,849
<font color="#E5E5E5">see that the advantage we saw before</font>

147
00:07:09,139 --> 00:07:19,620
<font color="#E5E5E5">decreases with with shrinking as an R</font>

148
00:07:13,849 --> 00:07:27,900
and that the<font color="#E5E5E5"> t-test is not that strongly</font>

149
00:07:19,620 --> 00:07:29,699
influenced by<font color="#E5E5E5"> this so we then</font><font color="#CCCCCC"> went on</font>

150
00:07:27,900 --> 00:07:34,320
with multivariate leakage so with

151
00:07:29,699 --> 00:07:37,380
parallel with<font color="#CCCCCC"> C realized</font><font color="#E5E5E5"> computation of</font>

152
00:07:34,320 --> 00:07:39,510
the shares or like math software masking

153
00:07:37,380 --> 00:07:42,810
so we did<font color="#E5E5E5"> not add up the hem of the</font>

154
00:07:39,510 --> 00:07:45,659
leakage we simulated<font color="#E5E5E5"> and for this we</font>

155
00:07:42,810 --> 00:07:48,120
need some<font color="#CCCCCC"> kind of combination function</font>

156
00:07:45,659 --> 00:07:50,610
so first we choose the normalized

157
00:07:48,120 --> 00:07:54,449
product which is<font color="#E5E5E5"> also usually used for</font>

158
00:07:50,610 --> 00:07:57,000
<font color="#CCCCCC">t-test but for the chi-square test we</font>

159
00:07:54,449 --> 00:07:59,490
additionally used two other combination

160
00:07:57,000 --> 00:08:02,190
function which is first<font color="#CCCCCC"> sum combining</font>

161
00:07:59,490 --> 00:08:04,199
which is again possible<font color="#CCCCCC"> because we have</font>

162
00:08:02,190 --> 00:08:07,740
<font color="#CCCCCC">a look at the whole distribution and not</font>

163
00:08:04,199 --> 00:08:09,449
only at for example the means this<font color="#E5E5E5"> is a</font>

164
00:08:07,740 --> 00:08:11,699
advantage<font color="#CCCCCC"> that the noise is not</font>

165
00:08:09,449 --> 00:08:15,090
multiplied so it's only<font color="#E5E5E5"> adds up but</font><font color="#CCCCCC"> is</font>

166
00:08:11,699 --> 00:08:17,759
<font color="#E5E5E5">not multiplied as with the combined</font>

167
00:08:15,090 --> 00:08:23,369
combination function<font color="#CCCCCC"> before</font><font color="#E5E5E5"> and also we</font>

168
00:08:17,759 --> 00:08:27,090
tested multivariate histograms so when

169
00:08:23,370 --> 00:08:30,509
we have a look at the results here<font color="#E5E5E5"> we</font>

170
00:08:27,090 --> 00:08:32,819
see that the t-test<font color="#E5E5E5"> actually performs</font>

171
00:08:30,509 --> 00:08:37,440
better for<font color="#E5E5E5"> multivariate leakage seems to</font>

172
00:08:32,820 --> 00:08:41,900
cope better with with a combined noise

173
00:08:37,440 --> 00:08:46,160
and the normalized combination function

174
00:08:41,900 --> 00:08:48,290
<font color="#CCCCCC">normalize product</font><font color="#E5E5E5"> and also</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> normalize</font>

175
00:08:46,160 --> 00:08:52,250
product seems to be the most most

176
00:08:48,290 --> 00:08:56,300
efficient combination functions for non

177
00:08:52,250 --> 00:08:58,270
<font color="#CCCCCC">irritable noise levels so only</font><font color="#E5E5E5"> when we</font>

178
00:08:56,300 --> 00:09:00,709
get<font color="#E5E5E5"> like a really really</font><font color="#CCCCCC"> high as in our</font>

179
00:08:58,270 --> 00:09:01,970
<font color="#E5E5E5">the other combination functions like</font>

180
00:09:00,710 --> 00:09:04,070
<font color="#E5E5E5">some combining</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> multivariate</font>

181
00:09:01,970 --> 00:09:10,690
histograms<font color="#E5E5E5"> work better than the</font>

182
00:09:04,070 --> 00:09:15,230
<font color="#E5E5E5">normalized product</font><font color="#CCCCCC"> we also</font><font color="#E5E5E5"> tested this</font>

183
00:09:10,690 --> 00:09:17,870
method on real hardware so<font color="#E5E5E5"> we</font>

184
00:09:15,230 --> 00:09:20,330
implemented<font color="#E5E5E5"> a present threshold</font>

185
00:09:17,870 --> 00:09:23,450
implementation with three shares on the

186
00:09:20,330 --> 00:09:25,940
<font color="#CCCCCC">qiraji board and this one has like</font><font color="#E5E5E5"> it</font>

187
00:09:23,450 --> 00:09:29,840
split up<font color="#E5E5E5"> s box into</font><font color="#CCCCCC"> the G and F function</font>

188
00:09:25,940 --> 00:09:35,120
and is a<font color="#CCCCCC"> byte 0</font><font color="#E5E5E5"> implementation which</font>

189
00:09:29,840 --> 00:09:37,100
uses a shift registers for<font color="#CCCCCC"> the state so</font>

190
00:09:35,120 --> 00:09:41,990
when we have a look first at<font color="#E5E5E5"> the fixed</font>

191
00:09:37,100 --> 00:09:45,830
versus random results we can<font color="#E5E5E5"> see that</font>

192
00:09:41,990 --> 00:09:47,810
the<font color="#E5E5E5"> T tests behave as expected for this</font>

193
00:09:45,830 --> 00:09:50,360
implementation<font color="#CCCCCC"> so we don't get</font><font color="#E5E5E5"> first</font>

194
00:09:47,810 --> 00:09:52,250
order leakage<font color="#CCCCCC"> we</font><font color="#E5E5E5"> have like a small</font>

195
00:09:50,360 --> 00:09:56,060
<font color="#E5E5E5">second-order leakage and a high third or</font>

196
00:09:52,250 --> 00:09:58,040
a leakage and when we have a look at<font color="#E5E5E5"> the</font>

197
00:09:56,060 --> 00:09:59,810
result of<font color="#CCCCCC"> XI square chest we can see</font>

198
00:09:58,040 --> 00:10:02,990
that it actually<font color="#CCCCCC"> behaves quite similar</font>

199
00:09:59,810 --> 00:10:05,109
to<font color="#E5E5E5"> the</font><font color="#CCCCCC"> third-party tests but at the same</font>

200
00:10:02,990 --> 00:10:11,900
time it gives<font color="#E5E5E5"> us a higher confidence</font>

201
00:10:05,110 --> 00:10:13,940
than the T test<font color="#CCCCCC"> when we have a look at</font>

202
00:10:11,900 --> 00:10:16,780
the fixed<font color="#E5E5E5"> versus fixed which</font><font color="#CCCCCC"> is like one</font>

203
00:10:13,940 --> 00:10:19,910
thing<font color="#E5E5E5"> you cannot do with a t-test</font><font color="#CCCCCC"> for</font>

204
00:10:16,780 --> 00:10:24,400
<font color="#CCCCCC">this test we recorded eight different</font>

205
00:10:19,910 --> 00:10:28,819
fixed<font color="#CCCCCC"> plaintexts and first as a</font>

206
00:10:24,400 --> 00:10:31,670
<font color="#E5E5E5">comparison we compared different pairs</font>

207
00:10:28,820 --> 00:10:34,810
<font color="#E5E5E5">of plaintexts which is on the right</font><font color="#CCCCCC"> plot</font>

208
00:10:31,670 --> 00:10:37,339
here so we can see<font color="#E5E5E5"> that the different</font>

209
00:10:34,810 --> 00:10:39,250
combinations of the plaintexts detect

210
00:10:37,340 --> 00:10:45,110
leakage at different points of the

211
00:10:39,250 --> 00:10:47,660
computation<font color="#CCCCCC"> but additionally we used the</font>

212
00:10:45,110 --> 00:10:51,020
chi-square test to compute

213
00:10:47,660 --> 00:10:55,880
the<font color="#E5E5E5"> XI square value over</font><font color="#CCCCCC"> the whole eight</font>

214
00:10:51,020 --> 00:10:57,920
classes and this also<font color="#E5E5E5"> detects like the</font>

215
00:10:55,880 --> 00:10:59,450
the<font color="#CCCCCC"> fixed was random test this huge</font>

216
00:10:57,920 --> 00:11:03,800
leakage at the beginning<font color="#E5E5E5"> of the</font>

217
00:10:59,450 --> 00:11:06,590
<font color="#E5E5E5">computation</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> it additionally detects</font>

218
00:11:03,800 --> 00:11:09,339
a more smaller leakage at later times

219
00:11:06,590 --> 00:11:16,700
<font color="#E5E5E5">during</font><font color="#CCCCCC"> the computation</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> we get</font><font color="#E5E5E5"> like a</font>

220
00:11:09,340 --> 00:11:20,120
small benefit from this<font color="#E5E5E5"> okay so we we</font>

221
00:11:16,700 --> 00:11:23,560
saw that we can detect<font color="#E5E5E5"> leakage which is</font>

222
00:11:20,120 --> 00:11:28,100
<font color="#E5E5E5">distributed over multiple moments in our</font>

223
00:11:23,560 --> 00:11:31,910
computation and<font color="#E5E5E5"> but we also need to to</font>

224
00:11:28,100 --> 00:11:33,950
exploit<font color="#E5E5E5"> this leakage so we can again</font><font color="#CCCCCC"> use</font>

225
00:11:31,910 --> 00:11:38,240
<font color="#CCCCCC">the smart class capability of the</font>

226
00:11:33,950 --> 00:11:40,400
chi-square test<font color="#E5E5E5"> and then perform an</font>

227
00:11:38,240 --> 00:11:45,350
detect attack by<font color="#E5E5E5"> using it as a</font>

228
00:11:40,400 --> 00:11:48,079
<font color="#CCCCCC">distinguisher</font><font color="#E5E5E5"> and for each key</font><font color="#CCCCCC"> canny</font><font color="#E5E5E5"> 8k</font>

229
00:11:45,350 --> 00:11:50,450
we can compute<font color="#E5E5E5"> a separate test for this</font>

230
00:11:48,080 --> 00:11:53,870
so we can for each key candidate we can

231
00:11:50,450 --> 00:11:55,580
sort the traces into the<font color="#E5E5E5"> the different</font>

232
00:11:53,870 --> 00:11:58,060
classes of the model<font color="#E5E5E5"> for</font><font color="#CCCCCC"> example a</font>

233
00:11:55,580 --> 00:12:00,200
<font color="#E5E5E5">Hamming distance or Hamming weight and</font>

234
00:11:58,060 --> 00:12:03,410
calculate the histogram for<font color="#E5E5E5"> the classes</font>

235
00:12:00,200 --> 00:12:05,570
<font color="#CCCCCC">and</font><font color="#E5E5E5"> then again perform our statistics we</font>

236
00:12:03,410 --> 00:12:09,469
can<font color="#E5E5E5"> then rank our key candidates by</font>

237
00:12:05,570 --> 00:12:13,580
their resulting p-value and get

238
00:12:09,470 --> 00:12:15,290
hopefully<font color="#E5E5E5"> the correct key and yeah this</font>

239
00:12:13,580 --> 00:12:18,950
this really<font color="#CCCCCC"> gives</font><font color="#E5E5E5"> us the benefit</font><font color="#CCCCCC"> of</font>

240
00:12:15,290 --> 00:12:22,880
using<font color="#E5E5E5"> the</font><font color="#CCCCCC"> the whole distribution so it's</font>

241
00:12:18,950 --> 00:12:26,210
this this case it's similar to mutual

242
00:12:22,880 --> 00:12:28,070
information analysis but it provides an

243
00:12:26,210 --> 00:12:31,700
additional<font color="#E5E5E5"> confidence level</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> each key</font>

244
00:12:28,070 --> 00:12:33,440
candidate<font color="#CCCCCC"> what we have to</font><font color="#E5E5E5"> consider here</font>

245
00:12:31,700 --> 00:12:36,980
<font color="#E5E5E5">is also like for mutual information</font>

246
00:12:33,440 --> 00:12:38,540
analysis<font color="#E5E5E5"> the number of classes has to be</font>

247
00:12:36,980 --> 00:12:40,490
lower than<font color="#CCCCCC"> the number of</font><font color="#E5E5E5"> key candidates</font>

248
00:12:38,540 --> 00:12:43,219
otherwise we<font color="#E5E5E5"> get a</font><font color="#CCCCCC"> bisection and because</font>

249
00:12:40,490 --> 00:12:48,850
the<font color="#CCCCCC"> the</font><font color="#E5E5E5"> order is</font><font color="#CCCCCC"> not considered in</font><font color="#E5E5E5"> the</font>

250
00:12:43,220 --> 00:12:48,850
test<font color="#E5E5E5"> all tests will result in the same</font>

251
00:12:52,060 --> 00:12:59,270
yeah our results here for this present

252
00:12:55,910 --> 00:13:01,219
implementation are that as<font color="#E5E5E5"> expected the</font>

253
00:12:59,270 --> 00:13:03,259
first all a CPA didn't work the second

254
00:13:01,220 --> 00:13:07,160
also didn't<font color="#E5E5E5"> work but surprisingly the</font>

255
00:13:03,259 --> 00:13:09,529
<font color="#E5E5E5">third-order</font><font color="#CCCCCC"> DPA CPA</font><font color="#E5E5E5"> also did not work</font>

256
00:13:07,160 --> 00:13:14,420
<font color="#CCCCCC">for this</font><font color="#E5E5E5"> with even</font><font color="#CCCCCC"> with 50 million</font>

257
00:13:09,529 --> 00:13:17,319
traces but using<font color="#E5E5E5"> our chi-square test we</font>

258
00:13:14,420 --> 00:13:20,360
were able<font color="#E5E5E5"> to recover the correct key</font>

259
00:13:17,319 --> 00:13:23,930
<font color="#E5E5E5">successfully after 28 million traces</font><font color="#CCCCCC"> Ola</font>

260
00:13:20,360 --> 00:13:27,019
<font color="#E5E5E5">after</font><font color="#CCCCCC"> 1/2 or trace set so this really</font>

261
00:13:23,930 --> 00:13:29,229
gives<font color="#E5E5E5"> us a benefit</font><font color="#CCCCCC"> fusing like multiple</font>

262
00:13:27,019 --> 00:13:36,500
<font color="#E5E5E5">orders or using the higher orders of</font><font color="#CCCCCC"> the</font>

263
00:13:29,230 --> 00:13:38,269
leakage so to conclude<font color="#E5E5E5"> we</font><font color="#CCCCCC"> presented the</font>

264
00:13:36,500 --> 00:13:41,779
chi-square test as a complement to the

265
00:13:38,269 --> 00:13:44,420
<font color="#E5E5E5">t-test</font><font color="#CCCCCC"> it's able</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> outperform</font><font color="#E5E5E5"> the</font>

266
00:13:41,779 --> 00:13:46,759
<font color="#E5E5E5">t-test in the cases that for example the</font>

267
00:13:44,420 --> 00:13:48,439
noise level is<font color="#E5E5E5"> not sufficient or the</font>

268
00:13:46,759 --> 00:13:51,889
leakage is distributed<font color="#CCCCCC"> over multiple</font>

269
00:13:48,439 --> 00:13:54,290
statistical moments but<font color="#E5E5E5"> you should</font>

270
00:13:51,889 --> 00:13:56,209
always use it together<font color="#CCCCCC"> with a t-test</font>

271
00:13:54,290 --> 00:13:58,699
<font color="#E5E5E5">because</font><font color="#CCCCCC"> there are also many cases</font><font color="#E5E5E5"> which</font>

272
00:13:56,209 --> 00:14:04,489
in which<font color="#CCCCCC"> the T tests</font><font color="#E5E5E5"> works better than</font>

273
00:13:58,699 --> 00:14:07,008
<font color="#CCCCCC">the chi-square test and so we propose</font><font color="#E5E5E5"> to</font>

274
00:14:04,490 --> 00:14:09,139
to use the<font color="#E5E5E5"> t-test as before to evaluate</font>

275
00:14:07,009 --> 00:14:11,779
the<font color="#CCCCCC"> security order see if you reach the</font>

276
00:14:09,139 --> 00:14:14,209
the the order you attended with the

277
00:14:11,779 --> 00:14:16,550
<font color="#E5E5E5">implementation but also use the</font>

278
00:14:14,209 --> 00:14:18,589
chi-square<font color="#E5E5E5"> test to evaluate the the</font>

279
00:14:16,550 --> 00:14:23,899
<font color="#CCCCCC">noise level of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> eggman of the whole</font>

280
00:14:18,589 --> 00:14:26,569
<font color="#CCCCCC">implementation and to see whether your</font>

281
00:14:23,899 --> 00:14:28,160
leakage is supported by enough noise and

282
00:14:26,569 --> 00:14:34,628
cannot be<font color="#E5E5E5"> easily broken by switching to</font>

283
00:14:28,160 --> 00:14:34,629
a<font color="#CCCCCC"> high or for example</font><font color="#E5E5E5"> thank you</font>

284
00:14:36,279 --> 00:14:41,390
thank you<font color="#E5E5E5"> thank you very much</font>

285
00:14:38,930 --> 00:14:43,279
so before questions there are<font color="#E5E5E5"> still</font>

286
00:14:41,390 --> 00:14:44,720
seats open people at the back you<font color="#CCCCCC"> can</font>

287
00:14:43,279 --> 00:14:48,050
come<font color="#E5E5E5"> forward if</font><font color="#CCCCCC"> you're standing feel</font>

288
00:14:44,720 --> 00:14:50,200
free<font color="#E5E5E5"> lots of seats questions we had one</font>

289
00:14:48,050 --> 00:14:53,300
up here I believe

290
00:14:50,200 --> 00:14:53,930
thank you for your lectures<font color="#E5E5E5"> so I have a</font>

291
00:14:53,300 --> 00:14:56,959
<font color="#E5E5E5">question</font>

292
00:14:53,930 --> 00:15:00,709
how have you<font color="#E5E5E5"> ever</font><font color="#CCCCCC"> made the cases with</font>

293
00:14:56,959 --> 00:15:04,520
the<font color="#CCCCCC"> x-squared</font><font color="#E5E5E5"> tasks that can cause the</font>

294
00:15:00,709 --> 00:15:08,300
false positive<font color="#E5E5E5"> and how do</font><font color="#CCCCCC"> distinguish</font>

295
00:15:04,520 --> 00:15:13,399
<font color="#E5E5E5">the cases with false positive and true</font>

296
00:15:08,300 --> 00:15:15,319
<font color="#E5E5E5">positive and the false positive you</font><font color="#CCCCCC"> mean</font>

297
00:15:13,399 --> 00:15:18,110
that we detect<font color="#CCCCCC"> the leakage we</font><font color="#E5E5E5"> can not</font>

298
00:15:15,320 --> 00:15:20,839
later exploit you mean<font color="#CCCCCC"> yet yeah of</font>

299
00:15:18,110 --> 00:15:22,970
<font color="#E5E5E5">course this can happen I mean especially</font>

300
00:15:20,839 --> 00:15:24,500
<font color="#E5E5E5">when combined with noise I mean maybe</font>

301
00:15:22,970 --> 00:15:26,029
you were you're able<font color="#CCCCCC"> to detect</font><font color="#E5E5E5"> it</font>

302
00:15:24,500 --> 00:15:28,490
similar<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> t-test I mean you also</font>

303
00:15:26,029 --> 00:15:31,100
can detect leakage with the<font color="#E5E5E5"> t-test you</font>

304
00:15:28,490 --> 00:15:33,500
might not be able<font color="#CCCCCC"> to explore able to</font>

305
00:15:31,100 --> 00:15:36,620
exploit<font color="#CCCCCC"> in a</font><font color="#E5E5E5"> divide-and-conquer</font><font color="#CCCCCC"> taker I</font>

306
00:15:33,500 --> 00:15:40,220
mean this<font color="#E5E5E5"> this can happen so the</font>

307
00:15:36,620 --> 00:15:42,649
behavior<font color="#E5E5E5"> of the false positive and true</font>

308
00:15:40,220 --> 00:15:45,470
positive the squared has<font color="#E5E5E5"> the can you</font>

309
00:15:42,649 --> 00:15:48,380
make a<font color="#CCCCCC"> comparison of</font><font color="#E5E5E5"> AX squared hast NT</font>

310
00:15:45,470 --> 00:15:54,709
<font color="#CCCCCC">tossed in the behavior of false positive</font>

311
00:15:48,380 --> 00:15:56,930
<font color="#E5E5E5">and the true positive</font><font color="#CCCCCC"> no</font><font color="#E5E5E5"> so maybe we can</font>

312
00:15:54,709 --> 00:16:05,719
discuss<font color="#CCCCCC"> this</font><font color="#E5E5E5"> later offline</font><font color="#CCCCCC"> okay thank</font>

313
00:15:56,930 --> 00:16:10,160
you with<font color="#CCCCCC"> real question Emanuel thank you</font>

314
00:16:05,720 --> 00:16:12,950
<font color="#E5E5E5">in the univariate case for the t-test</font>

315
00:16:10,160 --> 00:16:16,610
<font color="#E5E5E5">did you did you</font><font color="#CCCCCC"> perform some processing</font>

316
00:16:12,950 --> 00:16:19,070
to attack the other contaminates<font color="#E5E5E5"> you</font>

317
00:16:16,610 --> 00:16:20,870
mean for<font color="#E5E5E5"> the for the</font><font color="#CCCCCC"> Harper</font><font color="#E5E5E5"> experiment</font>

318
00:16:19,070 --> 00:16:23,570
or formulated one for for the

319
00:16:20,870 --> 00:16:25,910
simulations you<font color="#CCCCCC"> we did not perform any</font>

320
00:16:23,570 --> 00:16:28,880
pre-processing<font color="#E5E5E5"> we just summed up the</font>

321
00:16:25,910 --> 00:16:32,959
<font color="#E5E5E5">hemming leakage Hamming weight leakage</font>

322
00:16:28,880 --> 00:16:34,699
<font color="#E5E5E5">- no noise for for the t-test or for the</font>

323
00:16:32,959 --> 00:16:36,800
teachers<font color="#CCCCCC"> no for the teachers we also did</font>

324
00:16:34,699 --> 00:16:38,870
not<font color="#E5E5E5"> perform pre-processing well the</font>

325
00:16:36,800 --> 00:16:41,630
<font color="#E5E5E5">univariate you</font><font color="#CCCCCC"> said</font><font color="#E5E5E5"> yeah was the</font><font color="#CCCCCC"> two</font>

326
00:16:38,870 --> 00:16:44,810
<font color="#CCCCCC">tests against</font><font color="#E5E5E5"> the organs of sharing you</font>

327
00:16:41,630 --> 00:16:46,130
you don't perform a<font color="#E5E5E5"> processing before</font><font color="#CCCCCC"> no</font>

328
00:16:44,810 --> 00:16:48,560
for<font color="#E5E5E5"> this test we did not perform</font>

329
00:16:46,130 --> 00:16:53,720
pre-processing<font color="#E5E5E5"> okay</font>

330
00:16:48,560 --> 00:16:59,630
I think there's time for one<font color="#CCCCCC"> or two</font><font color="#E5E5E5"> more</font>

331
00:16:53,720 --> 00:17:01,510
if any questions if not well thank you

332
00:16:59,630 --> 00:17:09,279
very<font color="#CCCCCC"> much</font><font color="#E5E5E5"> and</font>

333
00:17:01,510 --> 00:17:09,279
[Applause]

