1
00:00:02,389 --> 00:00:06,000
<font color="#E5E5E5">okay</font>

2
00:00:03,570 --> 00:00:09,300
third and last speaker of<font color="#CCCCCC"> this session</font>

3
00:00:06,000 --> 00:00:09,599
is<font color="#E5E5E5"> and I tried it I trained it a little</font>

4
00:00:09,300 --> 00:00:14,219
<font color="#E5E5E5">bit</font>

5
00:00:09,599 --> 00:00:16,590
<font color="#CCCCCC">Kostas Papageno Paulo's an amazing at</font>

6
00:00:14,219 --> 00:00:17,880
<font color="#CCCCCC">Tim thank you yes very polite of</font><font color="#E5E5E5"> you and</font>

7
00:00:16,590 --> 00:00:19,590
he will speak<font color="#E5E5E5"> about low randomness</font>

8
00:00:17,880 --> 00:00:23,038
masking and shuffling and evaluation

9
00:00:19,590 --> 00:00:27,198
using<font color="#E5E5E5"> mutual information Thank You Vera</font>

10
00:00:23,039 --> 00:00:29,670
<font color="#CCCCCC">dict so</font><font color="#E5E5E5"> like the rest of the talks</font>

11
00:00:27,199 --> 00:00:32,180
<font color="#E5E5E5">during</font><font color="#CCCCCC"> this session we will be</font>

12
00:00:29,670 --> 00:00:35,460
<font color="#CCCCCC">discussing</font><font color="#E5E5E5"> masking ah the infamous</font>

13
00:00:32,180 --> 00:00:37,380
<font color="#CCCCCC">countermeasure that</font><font color="#E5E5E5"> can actually at</font>

14
00:00:35,460 --> 00:00:40,100
<font color="#CCCCCC">least try</font><font color="#E5E5E5"> to hide intermediate values</font>

15
00:00:37,380 --> 00:00:42,899
<font color="#E5E5E5">from the prying eyes of an adversary now</font>

16
00:00:40,100 --> 00:00:44,489
we will<font color="#CCCCCC"> also be</font><font color="#E5E5E5"> discussing shuffling the</font>

17
00:00:42,899 --> 00:00:46,649
countermeasure that actually likes to

18
00:00:44,489 --> 00:00:49,440
reorder cipher operations and confuse

19
00:00:46,649 --> 00:00:52,469
the adversary but unlike the previous

20
00:00:49,440 --> 00:00:54,599
<font color="#E5E5E5">talk we will not be extending the</font>

21
00:00:52,469 --> 00:00:56,520
previous properties we will not<font color="#E5E5E5"> delve</font>

22
00:00:54,600 --> 00:00:58,920
deeper into glitching<font color="#E5E5E5"> or glitch</font>

23
00:00:56,520 --> 00:01:04,199
resistance<font color="#CCCCCC"> we will be looking at</font>

24
00:00:58,920 --> 00:01:06,540
randomness<font color="#CCCCCC"> so as a quick overview</font><font color="#E5E5E5"> of the</font>

25
00:01:04,199 --> 00:01:08,658
talk we will discuss first that masking

26
00:01:06,540 --> 00:01:10,770
is<font color="#CCCCCC"> safe</font><font color="#E5E5E5"> link actually</font><font color="#CCCCCC"> are very painful</font>

27
00:01:08,659 --> 00:01:13,380
<font color="#CCCCCC">when</font><font color="#E5E5E5"> it comes to random number</font>

28
00:01:10,770 --> 00:01:15,330
generation<font color="#E5E5E5"> they take a lot of time to do</font>

29
00:01:13,380 --> 00:01:17,100
<font color="#E5E5E5">that and we will propose some new</font>

30
00:01:15,330 --> 00:01:19,170
countermeasure variants that actually

31
00:01:17,100 --> 00:01:23,610
recycle random as they are better at<font color="#CCCCCC"> it</font>

32
00:01:19,170 --> 00:01:26,520
of course<font color="#E5E5E5"> computational</font><font color="#CCCCCC"> performance does</font>

33
00:01:23,610 --> 00:01:28,409
not<font color="#E5E5E5"> come free there will be discussion</font>

34
00:01:26,520 --> 00:01:31,048
about pitfalls in formal security<font color="#CCCCCC"> and</font>

35
00:01:28,409 --> 00:01:32,939
how does recycling damage the noise

36
00:01:31,049 --> 00:01:36,659
amplification stage of masking and

37
00:01:32,939 --> 00:01:38,548
shuffling so let me get right<font color="#E5E5E5"> on</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> it</font>

38
00:01:36,659 --> 00:01:40,590
<font color="#E5E5E5">we will start with</font><font color="#CCCCCC"> a quick introduction</font>

39
00:01:38,549 --> 00:01:44,310
<font color="#CCCCCC">about masking a shuffling most of which</font>

40
00:01:40,590 --> 00:01:45,840
has been<font color="#CCCCCC"> already</font><font color="#E5E5E5"> mentioned so masking is</font>

41
00:01:44,310 --> 00:01:48,600
probably one of the most popular

42
00:01:45,840 --> 00:01:51,479
countermeasures<font color="#CCCCCC"> in the community it asks</font>

43
00:01:48,600 --> 00:01:53,189
the adversary to<font color="#E5E5E5"> recombine shares and if</font>

44
00:01:51,479 --> 00:01:54,960
you split it<font color="#CCCCCC"> into</font><font color="#E5E5E5"> eight pieces then it</font>

45
00:01:53,189 --> 00:01:57,449
will become<font color="#CCCCCC"> very</font><font color="#E5E5E5"> hard to perform a</font>

46
00:01:54,960 --> 00:01:59,100
<font color="#E5E5E5">recombination and we will it</font><font color="#CCCCCC"> here's</font><font color="#E5E5E5"> the</font>

47
00:01:57,450 --> 00:02:01,920
property<font color="#CCCCCC"> of noise amplification and we</font>

48
00:01:59,100 --> 00:02:03,689
really really<font color="#CCCCCC"> like this property</font><font color="#E5E5E5"> because</font>

49
00:02:01,920 --> 00:02:05,579
actually it has an exponential<font color="#E5E5E5"> effect in</font>

50
00:02:03,689 --> 00:02:09,288
the number<font color="#CCCCCC"> of traces</font><font color="#E5E5E5"> you need to attack</font>

51
00:02:05,579 --> 00:02:11,340
the implementation more importantly

52
00:02:09,288 --> 00:02:13,769
masking is very<font color="#CCCCCC"> computationally</font>

53
00:02:11,340 --> 00:02:15,510
demanding so if you implement this

54
00:02:13,770 --> 00:02:18,060
hi Vogler<font color="#E5E5E5"> then you're looking at</font>

55
00:02:15,510 --> 00:02:20,549
quadratic randomness complexity<font color="#E5E5E5"> there</font>

56
00:02:18,060 --> 00:02:22,230
have been more recent works that have

57
00:02:20,550 --> 00:02:25,590
<font color="#CCCCCC">been improving on this bound from</font><font color="#E5E5E5"> below</font>

58
00:02:22,230 --> 00:02:28,200
at all<font color="#E5E5E5"> but still</font><font color="#CCCCCC"> even</font><font color="#E5E5E5"> under this</font>

59
00:02:25,590 --> 00:02:30,690
improved situations then<font color="#CCCCCC"> you still have</font>

60
00:02:28,200 --> 00:02:34,260
<font color="#E5E5E5">quite a big overhead that you are about</font>

61
00:02:30,690 --> 00:02:36,390
<font color="#CCCCCC">to face and</font><font color="#E5E5E5"> these conclusions persist</font>

62
00:02:34,260 --> 00:02:38,910
throughout masking most of its<font color="#CCCCCC"> variance</font>

63
00:02:36,390 --> 00:02:40,559
<font color="#E5E5E5">and sometimes going to higher order</font>

64
00:02:38,910 --> 00:02:44,120
threshold<font color="#E5E5E5"> implementations so no matter</font>

65
00:02:40,560 --> 00:02:47,670
what<font color="#E5E5E5"> you do you will face</font><font color="#CCCCCC"> the rng cost</font>

66
00:02:44,120 --> 00:02:49,920
now similarly shuffling is also quite

67
00:02:47,670 --> 00:02:51,690
widely<font color="#CCCCCC"> deployed it permits blocks so if</font>

68
00:02:49,920 --> 00:02:54,359
you are<font color="#CCCCCC"> processing in a serial fashion</font>

69
00:02:51,690 --> 00:02:56,190
<font color="#E5E5E5">the S boxes of a cipher and then you</font>

70
00:02:54,360 --> 00:02:59,040
will go from<font color="#E5E5E5"> one two three and four and</font>

71
00:02:56,190 --> 00:03:02,280
<font color="#E5E5E5">you will permute their order perhaps</font>

72
00:02:59,040 --> 00:03:04,170
three one four two and<font color="#E5E5E5"> again the</font>

73
00:03:02,280 --> 00:03:06,330
<font color="#CCCCCC">countermeasure performs</font><font color="#E5E5E5"> knowing noise</font>

74
00:03:04,170 --> 00:03:10,500
amplification<font color="#E5E5E5"> in a different way than</font>

75
00:03:06,330 --> 00:03:12,480
masking but still and of course it comes

76
00:03:10,500 --> 00:03:15,630
in with<font color="#E5E5E5"> an</font><font color="#CCCCCC"> RG overhead which is</font>

77
00:03:12,480 --> 00:03:20,429
approximately<font color="#E5E5E5"> K log K</font><font color="#CCCCCC"> random bits</font><font color="#E5E5E5"> if you</font>

78
00:03:15,630 --> 00:03:23,720
want to shuffle K things around<font color="#CCCCCC"> so from</font>

79
00:03:20,430 --> 00:03:26,820
our experience<font color="#CCCCCC"> so far</font><font color="#E5E5E5"> implemented</font>

80
00:03:23,720 --> 00:03:29,520
<font color="#E5E5E5">ciphers a protected ciphers in several</font>

81
00:03:26,820 --> 00:03:31,470
devices<font color="#E5E5E5"> we have agreed that the</font><font color="#CCCCCC"> RNG is</font>

82
00:03:29,520 --> 00:03:34,230
quite a considerable<font color="#E5E5E5"> performance over</font>

83
00:03:31,470 --> 00:03:36,120
here<font color="#E5E5E5"> just to give you some taste of the</font>

84
00:03:34,230 --> 00:03:38,670
figures some people have<font color="#E5E5E5"> tried to</font>

85
00:03:36,120 --> 00:03:40,350
<font color="#E5E5E5">implement a second order AES on AVR and</font>

86
00:03:38,670 --> 00:03:43,140
<font color="#E5E5E5">they</font><font color="#CCCCCC"> use the pseudo-random number</font>

87
00:03:40,350 --> 00:03:45,329
generator<font color="#CCCCCC"> and these were the results</font>

88
00:03:43,140 --> 00:03:47,910
like roughly<font color="#CCCCCC"> thirty eight</font><font color="#E5E5E5"> percent of the</font>

89
00:03:45,330 --> 00:03:51,030
<font color="#CCCCCC">total computation time was spent on</font><font color="#E5E5E5"> RNG</font>

90
00:03:47,910 --> 00:03:53,370
or when we try<font color="#E5E5E5"> to implement second order</font>

91
00:03:51,030 --> 00:03:56,880
present<font color="#E5E5E5"> on an arm cortex-m</font><font color="#CCCCCC"> four and we</font>

92
00:03:53,370 --> 00:03:59,550
decided<font color="#E5E5E5"> to use the true RNG that came in</font>

93
00:03:56,880 --> 00:04:01,560
packed together<font color="#E5E5E5"> with this device then we</font>

94
00:03:59,550 --> 00:04:05,250
were in this situation

95
00:04:01,560 --> 00:04:09,240
so<font color="#E5E5E5"> roughly one out of four cycles was</font>

96
00:04:05,250 --> 00:04:11,100
wasted<font color="#E5E5E5"> in</font><font color="#CCCCCC"> orangy</font><font color="#E5E5E5"> and if we go into even</font>

97
00:04:09,240 --> 00:04:13,530
more<font color="#E5E5E5"> extreme cases how about a fourth</font>

98
00:04:11,100 --> 00:04:15,180
order AES implementation that<font color="#E5E5E5"> is</font>

99
00:04:13,530 --> 00:04:17,700
actually quite fast<font color="#E5E5E5"> because of neon</font>

100
00:04:15,180 --> 00:04:20,390
assembly but does the terrible<font color="#CCCCCC"> mistake</font>

101
00:04:17,700 --> 00:04:23,190
of<font color="#E5E5E5"> using randomness from the view random</font>

102
00:04:20,390 --> 00:04:26,099
then the<font color="#CCCCCC"> situation will be really ugly</font>

103
00:04:23,190 --> 00:04:27,540
<font color="#CCCCCC">affable so of course this</font><font color="#E5E5E5"> is a very</font>

104
00:04:26,100 --> 00:04:29,490
<font color="#E5E5E5">naive case</font>

105
00:04:27,540 --> 00:04:31,310
<font color="#E5E5E5">people won't really do that but at least</font>

106
00:04:29,490 --> 00:04:35,280
it<font color="#E5E5E5"> shows that if you do not put the</font>

107
00:04:31,310 --> 00:04:37,140
required attention<font color="#CCCCCC"> into RNG then you may</font>

108
00:04:35,280 --> 00:04:41,849
face this situation like<font color="#CCCCCC"> a very fast</font>

109
00:04:37,140 --> 00:04:44,039
<font color="#CCCCCC">cipher and very slow RNG</font><font color="#E5E5E5"> all right but</font>

110
00:04:41,850 --> 00:04:47,760
we decided<font color="#E5E5E5"> to do</font><font color="#CCCCCC"> something</font><font color="#E5E5E5"> about that</font><font color="#CCCCCC"> so</font>

111
00:04:44,040 --> 00:04:49,560
<font color="#CCCCCC">in this spirit we looked more into it</font>

112
00:04:47,760 --> 00:04:52,770
and looked out<font color="#CCCCCC"> into other works</font><font color="#E5E5E5"> that</font>

113
00:04:49,560 --> 00:04:55,470
were exploring<font color="#E5E5E5"> this concept of reusing</font>

114
00:04:52,770 --> 00:04:57,539
or recycling<font color="#E5E5E5"> randomness while masking</font>

115
00:04:55,470 --> 00:05:00,870
around<font color="#E5E5E5"> and I feel the best way to</font>

116
00:04:57,540 --> 00:05:03,180
explain this<font color="#E5E5E5"> is through an</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> so</font>

117
00:05:00,870 --> 00:05:04,950
like previous presentations let's take a

118
00:05:03,180 --> 00:05:07,620
look again<font color="#CCCCCC"> that</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is a hive owner</font>

119
00:05:04,950 --> 00:05:09,840
<font color="#E5E5E5">let's assume</font><font color="#CCCCCC"> two multiplications both of</font>

120
00:05:07,620 --> 00:05:11,100
them are<font color="#CCCCCC"> second order secure and</font><font color="#E5E5E5"> but and</font>

121
00:05:09,840 --> 00:05:13,289
they<font color="#E5E5E5"> are completely</font><font color="#CCCCCC"> independent from</font>

122
00:05:11,100 --> 00:05:15,180
<font color="#CCCCCC">each</font><font color="#E5E5E5"> other so if you feel like you can</font>

123
00:05:13,290 --> 00:05:17,570
think<font color="#CCCCCC"> of them as two different execution</font>

124
00:05:15,180 --> 00:05:20,670
of a cipher or<font color="#E5E5E5"> two different</font>

125
00:05:17,570 --> 00:05:22,800
<font color="#E5E5E5">computations that</font><font color="#CCCCCC"> they they do</font><font color="#E5E5E5"> not link</font>

126
00:05:20,670 --> 00:05:26,310
to each other<font color="#E5E5E5"> and in the first one you</font>

127
00:05:22,800 --> 00:05:29,040
have to produce that equal<font color="#E5E5E5"> x times y the</font>

128
00:05:26,310 --> 00:05:31,580
second one<font color="#CCCCCC"> si</font><font color="#E5E5E5"> is equal</font><font color="#CCCCCC"> a times B and in</font>

129
00:05:29,040 --> 00:05:33,810
order to<font color="#E5E5E5"> do that you can see the</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> the</font>

130
00:05:31,580 --> 00:05:35,820
formula with<font color="#E5E5E5"> the partial products and</font>

131
00:05:33,810 --> 00:05:38,070
highlighted in green you can<font color="#CCCCCC"> see the</font>

132
00:05:35,820 --> 00:05:40,349
random numbers that<font color="#E5E5E5"> are necessary</font><font color="#CCCCCC"> that</font>

133
00:05:38,070 --> 00:05:44,640
it is a<font color="#E5E5E5"> necessity to inject them if you</font>

134
00:05:40,350 --> 00:05:47,190
are<font color="#CCCCCC"> to maintain security</font><font color="#E5E5E5"> so the first</font>

135
00:05:44,640 --> 00:05:49,590
step was yeah let's think very<font color="#E5E5E5"> simply</font>

136
00:05:47,190 --> 00:05:51,660
<font color="#E5E5E5">and let's try to reuse some numbers from</font>

137
00:05:49,590 --> 00:05:53,909
the first multiplication<font color="#E5E5E5"> store them</font>

138
00:05:51,660 --> 00:05:56,460
perhaps<font color="#E5E5E5"> in memory and then reuse them in</font>

139
00:05:53,910 --> 00:05:58,200
<font color="#E5E5E5">the later multiplication so it would</font>

140
00:05:56,460 --> 00:06:01,590
look a bit<font color="#CCCCCC"> like this now instead</font><font color="#E5E5E5"> of</font>

141
00:05:58,200 --> 00:06:04,080
using<font color="#CCCCCC"> t0</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> t1 we replaced it</font><font color="#E5E5E5"> with w0</font>

142
00:06:01,590 --> 00:06:06,419
and w1 which we<font color="#E5E5E5"> already have generated</font>

143
00:06:04,080 --> 00:06:09,180
<font color="#CCCCCC">before you know to reduce the randomness</font>

144
00:06:06,420 --> 00:06:12,390
<font color="#E5E5E5">caused by two numbers which doesn't seem</font>

145
00:06:09,180 --> 00:06:15,270
a lot but if you put in like if you see

146
00:06:12,390 --> 00:06:17,340
the big picture<font color="#CCCCCC"> the AES sbox will have</font>

147
00:06:15,270 --> 00:06:19,650
lots of<font color="#E5E5E5"> those multiplications</font><font color="#CCCCCC"> so in any</font>

148
00:06:17,340 --> 00:06:23,549
<font color="#CCCCCC">case it</font><font color="#E5E5E5"> will</font><font color="#CCCCCC"> be beneficial on</font><font color="#E5E5E5"> the long</font>

149
00:06:19,650 --> 00:06:25,859
run the natural question<font color="#E5E5E5"> that comes is</font>

150
00:06:23,550 --> 00:06:28,020
like<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> now you have a very</font><font color="#CCCCCC"> strange</font>

151
00:06:25,860 --> 00:06:30,180
<font color="#E5E5E5">gadget that</font><font color="#CCCCCC"> consists of</font><font color="#E5E5E5"> two</font>

152
00:06:28,020 --> 00:06:32,520
<font color="#E5E5E5">multiplication gadget and you want to</font>

153
00:06:30,180 --> 00:06:36,060
prove<font color="#E5E5E5"> that this</font><font color="#CCCCCC"> is secure in some sense</font>

154
00:06:32,520 --> 00:06:38,609
so using the formal security<font color="#E5E5E5"> tool by</font>

155
00:06:36,060 --> 00:06:41,310
<font color="#CCCCCC">Curran</font><font color="#E5E5E5"> you can</font><font color="#CCCCCC"> actually prove that this</font>

156
00:06:38,610 --> 00:06:46,980
to multiplication gadget is<font color="#CCCCCC"> to</font><font color="#E5E5E5"> an</font><font color="#CCCCCC"> I so</font>

157
00:06:41,310 --> 00:06:49,740
so far so good you're arresting<font color="#E5E5E5"> well the</font>

158
00:06:46,980 --> 00:06:51,660
next<font color="#CCCCCC"> step</font><font color="#E5E5E5"> is to you</font><font color="#CCCCCC"> know become a little</font>

159
00:06:49,740 --> 00:06:54,000
<font color="#E5E5E5">bit greedy and trying to recycle more so</font>

160
00:06:51,660 --> 00:06:56,040
I thought yeah why not grab all<font color="#CCCCCC"> of them</font>

161
00:06:54,000 --> 00:06:58,770
and use them in the second and they<font color="#CCCCCC"> are</font>

162
00:06:56,040 --> 00:07:00,390
independent it should be<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> and this</font>

163
00:06:58,770 --> 00:07:03,270
<font color="#CCCCCC">actually will reduce a random the</font>

164
00:07:00,390 --> 00:07:05,430
randomness cost even more however<font color="#E5E5E5"> once</font>

165
00:07:03,270 --> 00:07:07,469
you throw again it everything into the

166
00:07:05,430 --> 00:07:09,180
tool that will complain it will tell you

167
00:07:07,470 --> 00:07:11,880
this isn't secure for example check

168
00:07:09,180 --> 00:07:14,970
values that<font color="#CCCCCC"> took Shore</font><font color="#E5E5E5"> see - I have</font>

169
00:07:11,880 --> 00:07:17,280
<font color="#E5E5E5">found</font><font color="#CCCCCC"> two probing attack that can</font>

170
00:07:14,970 --> 00:07:18,540
<font color="#CCCCCC">actually put a</font><font color="#E5E5E5"> double consisting of two</font>

171
00:07:17,280 --> 00:07:24,210
intermediate values that<font color="#E5E5E5"> can actually</font>

172
00:07:18,540 --> 00:07:26,190
<font color="#E5E5E5">break the thing because W 1 and W 2 here</font>

173
00:07:24,210 --> 00:07:29,969
and<font color="#E5E5E5"> here will</font><font color="#CCCCCC"> actually cancel</font><font color="#E5E5E5"> out with</font><font color="#CCCCCC"> W</font>

174
00:07:26,190 --> 00:07:31,940
1 and W 2 here<font color="#E5E5E5"> so in the end we can</font>

175
00:07:29,970 --> 00:07:34,710
observe<font color="#CCCCCC"> that if you recycle excessively</font>

176
00:07:31,940 --> 00:07:40,560
<font color="#E5E5E5">you will be hurting probing security</font>

177
00:07:34,710 --> 00:07:43,620
<font color="#E5E5E5">even between independent gadgets the</font>

178
00:07:40,560 --> 00:07:46,500
last step of this let's say search was

179
00:07:43,620 --> 00:07:49,080
<font color="#E5E5E5">to actually look</font><font color="#CCCCCC"> around for efficient</font>

180
00:07:46,500 --> 00:07:53,040
multiplication gadgets<font color="#E5E5E5"> so we did try</font><font color="#CCCCCC"> to</font>

181
00:07:49,080 --> 00:07:55,289
look for SI sawai Varner gadgets of

182
00:07:53,040 --> 00:07:58,560
security order<font color="#CCCCCC"> one two and three</font><font color="#E5E5E5"> if you</font>

183
00:07:55,290 --> 00:08:00,540
do not recycle<font color="#E5E5E5"> using this gadget</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> two</font>

184
00:07:58,560 --> 00:08:03,750
multiplications then you're looking<font color="#CCCCCC"> at</font>

185
00:08:00,540 --> 00:08:05,340
<font color="#E5E5E5">two six or twelve random elements needed</font>

186
00:08:03,750 --> 00:08:07,080
in your<font color="#E5E5E5"> computation well if you do</font>

187
00:08:05,340 --> 00:08:10,440
recycle then you can drop it<font color="#CCCCCC"> down to one</font>

188
00:08:07,080 --> 00:08:12,330
four or eight so there is a<font color="#CCCCCC"> let's say</font>

189
00:08:10,440 --> 00:08:14,219
<font color="#CCCCCC">twenty to thirty</font><font color="#E5E5E5"> percent improvement in</font>

190
00:08:12,330 --> 00:08:17,419
this situation<font color="#E5E5E5"> it can be actually quite</font>

191
00:08:14,220 --> 00:08:20,880
<font color="#E5E5E5">helpful given that</font><font color="#CCCCCC"> RNG is often slow</font>

192
00:08:17,420 --> 00:08:24,480
even let's say<font color="#E5E5E5"> the more</font><font color="#CCCCCC"> know M</font>

193
00:08:20,880 --> 00:08:27,210
randomness<font color="#E5E5E5"> aware</font><font color="#CCCCCC"> bbp gadget which was</font>

194
00:08:24,480 --> 00:08:30,060
published<font color="#E5E5E5"> by</font><font color="#CCCCCC"> Belaya</font><font color="#E5E5E5"> data this already</font>

195
00:08:27,210 --> 00:08:32,010
<font color="#E5E5E5">hidden mind randomness and it already</font>

196
00:08:30,060 --> 00:08:34,380
tried to reduce randomness<font color="#E5E5E5"> but if you</font>

197
00:08:32,010 --> 00:08:36,210
recycle<font color="#E5E5E5"> on top of it you can</font><font color="#CCCCCC"> still gain</font>

198
00:08:34,380 --> 00:08:40,380
some nice margins<font color="#E5E5E5"> and improve your</font>

199
00:08:36,210 --> 00:08:43,010
situation<font color="#E5E5E5"> all right so</font><font color="#CCCCCC"> far everything</font>

200
00:08:40,380 --> 00:08:45,090
<font color="#CCCCCC">looks</font><font color="#E5E5E5"> okay we can actually find</font>

201
00:08:43,010 --> 00:08:46,500
<font color="#CCCCCC">non-interference gadget that's actually</font>

202
00:08:45,090 --> 00:08:49,200
recycle randomness<font color="#E5E5E5"> and improve the</font>

203
00:08:46,500 --> 00:08:52,020
situation<font color="#CCCCCC"> but</font><font color="#E5E5E5"> the problem actually</font>

204
00:08:49,200 --> 00:08:54,660
starts when if<font color="#E5E5E5"> we go we go away from</font><font color="#CCCCCC"> the</font>

205
00:08:52,020 --> 00:08:55,089
<font color="#E5E5E5">formal security and we move towards the</font>

206
00:08:54,660 --> 00:08:58,120
<font color="#E5E5E5">noise</font>

207
00:08:55,089 --> 00:09:00,309
vacation stage of masking so a<font color="#E5E5E5"> reminder</font>

208
00:08:58,120 --> 00:09:02,920
<font color="#CCCCCC">of the central</font><font color="#E5E5E5"> limit theorem in our</font>

209
00:09:00,309 --> 00:09:05,379
context at least<font color="#CCCCCC"> let's assume that</font>

210
00:09:02,920 --> 00:09:07,589
<font color="#E5E5E5">random number is being recycled</font><font color="#CCCCCC"> and</font>

211
00:09:05,379 --> 00:09:10,240
since it's being recycled you will<font color="#CCCCCC"> emit</font>

212
00:09:07,589 --> 00:09:12,730
<font color="#E5E5E5">several e it will emit leakages multiple</font>

213
00:09:10,240 --> 00:09:15,220
times let's say L 1<font color="#CCCCCC"> L</font><font color="#E5E5E5"> 2 and</font><font color="#CCCCCC"> L M all of</font>

214
00:09:12,730 --> 00:09:18,639
them follow<font color="#E5E5E5"> a normal distribution</font><font color="#CCCCCC"> with a</font>

215
00:09:15,220 --> 00:09:20,170
mean and standard deviation<font color="#CCCCCC"> now</font><font color="#E5E5E5"> if</font>

216
00:09:18,639 --> 00:09:22,629
someone<font color="#E5E5E5"> grabs those leakages and</font>

217
00:09:20,170 --> 00:09:25,149
<font color="#E5E5E5">averages them then the new</font><font color="#CCCCCC"> distribution</font>

218
00:09:22,629 --> 00:09:27,269
will follow<font color="#E5E5E5"> again a norm it will be</font>

219
00:09:25,149 --> 00:09:30,180
again normal<font color="#CCCCCC"> but the standard deviation</font>

220
00:09:27,269 --> 00:09:33,360
<font color="#CCCCCC">will be divided by this factor over</font><font color="#E5E5E5"> here</font>

221
00:09:30,180 --> 00:09:35,649
<font color="#CCCCCC">so essentially I'm restating that</font>

222
00:09:33,360 --> 00:09:38,290
<font color="#E5E5E5">someone who is able to observe those</font>

223
00:09:35,649 --> 00:09:40,720
Recycling's will be able<font color="#E5E5E5"> to denoise the</font>

224
00:09:38,290 --> 00:09:42,219
signal<font color="#E5E5E5"> even</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> everything is fine</font><font color="#CCCCCC"> even</font>

225
00:09:40,720 --> 00:09:44,709
if they think<font color="#E5E5E5"> is</font><font color="#CCCCCC"> probing secure it won't</font>

226
00:09:42,220 --> 00:09:46,300
matter<font color="#E5E5E5"> repetition will hurt you and this</font>

227
00:09:44,709 --> 00:09:50,699
has been<font color="#CCCCCC"> shown several</font><font color="#E5E5E5"> times in the</font>

228
00:09:46,300 --> 00:09:54,008
context of more horizontal attacks

229
00:09:50,699 --> 00:09:55,719
<font color="#E5E5E5">all right so in order to</font><font color="#CCCCCC"> showcase this</font>

230
00:09:54,009 --> 00:09:59,139
scenario and perform let's say more

231
00:09:55,720 --> 00:10:02,230
concrete noise analysis we<font color="#CCCCCC"> defined</font><font color="#E5E5E5"> two</font>

232
00:09:59,139 --> 00:10:04,029
adversaries<font color="#E5E5E5"> so there is adversary</font><font color="#CCCCCC"> c1 he</font>

233
00:10:02,230 --> 00:10:06,100
is quite naive<font color="#E5E5E5"> he doesn't see recycling</font>

234
00:10:04,029 --> 00:10:08,769
and this adversary<font color="#CCCCCC"> c2 who can</font><font color="#E5E5E5"> actually</font>

235
00:10:06,100 --> 00:10:12,370
see recycle he can<font color="#E5E5E5"> average and let's see</font>

236
00:10:08,769 --> 00:10:14,829
how this<font color="#E5E5E5"> will</font><font color="#CCCCCC"> work out</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> so</font>

237
00:10:12,370 --> 00:10:18,189
here's the<font color="#E5E5E5"> pitfall if you start from the</font>

238
00:10:14,829 --> 00:10:23,349
solid red line over<font color="#CCCCCC"> here then that is a</font>

239
00:10:18,189 --> 00:10:25,599
third order<font color="#E5E5E5"> attack on using the knave</font>

240
00:10:23,350 --> 00:10:27,550
adversary<font color="#CCCCCC"> on something that</font><font color="#E5E5E5"> actually is</font>

241
00:10:25,600 --> 00:10:30,100
recycling but is recycling a modest

242
00:10:27,550 --> 00:10:32,349
amount of randomness<font color="#E5E5E5"> and if you are</font>

243
00:10:30,100 --> 00:10:34,269
<font color="#E5E5E5">compare it to the actual situation you</font>

244
00:10:32,350 --> 00:10:36,009
<font color="#E5E5E5">will see that the knave adversary cannot</font>

245
00:10:34,269 --> 00:10:38,319
take advantage<font color="#CCCCCC"> of it this is as good</font><font color="#E5E5E5"> as</font>

246
00:10:36,009 --> 00:10:41,740
<font color="#E5E5E5">attacking a third order scheme without</font>

247
00:10:38,319 --> 00:10:43,628
<font color="#E5E5E5">any difference</font><font color="#CCCCCC"> now you will observe that</font>

248
00:10:41,740 --> 00:10:47,379
the dashed<font color="#E5E5E5"> red line shifts to the right</font>

249
00:10:43,629 --> 00:10:49,269
<font color="#E5E5E5">so an adversary who</font><font color="#CCCCCC"> is able</font><font color="#E5E5E5"> to see those</font>

250
00:10:47,379 --> 00:10:50,829
repetitions<font color="#CCCCCC"> he will be</font><font color="#E5E5E5"> able to</font><font color="#CCCCCC"> shift the</font>

251
00:10:49,269 --> 00:10:53,199
curve to<font color="#E5E5E5"> the right and reduce the</font>

252
00:10:50,829 --> 00:10:56,559
security<font color="#CCCCCC"> so the second observation is</font>

253
00:10:53,199 --> 00:10:57,990
<font color="#E5E5E5">that we can actually exploit recycling</font>

254
00:10:56,559 --> 00:11:01,149
to our advantage

255
00:10:57,990 --> 00:11:04,269
<font color="#E5E5E5">now finally if you move to</font><font color="#CCCCCC"> the blue</font>

256
00:11:01,149 --> 00:11:06,100
lines<font color="#CCCCCC"> the first one is not recycling the</font>

257
00:11:04,269 --> 00:11:08,230
second one is recycling a little bit so

258
00:11:06,100 --> 00:11:08,830
the dashed blue line is moving<font color="#CCCCCC"> to the</font>

259
00:11:08,230 --> 00:11:10,959
<font color="#E5E5E5">right</font>

260
00:11:08,830 --> 00:11:13,060
and if you really recycle a<font color="#CCCCCC"> lot if you</font>

261
00:11:10,959 --> 00:11:15,040
<font color="#E5E5E5">want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> really cut</font><font color="#CCCCCC"> down on the cost of</font>

262
00:11:13,060 --> 00:11:17,890
<font color="#CCCCCC">orangy then you are moving towards a</font>

263
00:11:15,040 --> 00:11:22,209
dotted line<font color="#E5E5E5"> which is which may have a</font>

264
00:11:17,890 --> 00:11:24,240
<font color="#E5E5E5">huge impact on</font><font color="#CCCCCC"> security and finally</font>

265
00:11:22,209 --> 00:11:28,329
perhaps<font color="#CCCCCC"> the most important point of this</font>

266
00:11:24,240 --> 00:11:30,190
graph<font color="#E5E5E5"> is that this</font><font color="#CCCCCC"> RRM this</font><font color="#E5E5E5"> recycled</font>

267
00:11:28,329 --> 00:11:31,449
randomness masking is actually a

268
00:11:30,190 --> 00:11:33,399
trade-off<font color="#CCCCCC"> between</font><font color="#E5E5E5"> security and</font>

269
00:11:31,450 --> 00:11:36,820
<font color="#E5E5E5">randomness cost it's nothing more than</font>

270
00:11:33,399 --> 00:11:39,160
that<font color="#CCCCCC"> and it is very important</font><font color="#E5E5E5"> for the</font>

271
00:11:36,820 --> 00:11:40,779
countermeasure designer to have such a

272
00:11:39,160 --> 00:11:42,519
trade-off in<font color="#E5E5E5"> his hand he can actually</font>

273
00:11:40,779 --> 00:11:44,290
<font color="#CCCCCC">twist and turn a little bit</font><font color="#E5E5E5"> on the</font>

274
00:11:42,519 --> 00:11:46,690
randomness there it happened down<font color="#CCCCCC"> in</font>

275
00:11:44,290 --> 00:11:52,199
order<font color="#E5E5E5"> to fix the security that he aims</font>

276
00:11:46,690 --> 00:11:54,820
<font color="#E5E5E5">for all right so we did talk about</font>

277
00:11:52,200 --> 00:11:57,250
<font color="#E5E5E5">recycled Miranda</font><font color="#CCCCCC"> menace in masking</font><font color="#E5E5E5"> will</font>

278
00:11:54,820 --> 00:12:00,160
do the<font color="#E5E5E5"> same thing in sapling but it it</font>

279
00:11:57,250 --> 00:12:01,870
is<font color="#E5E5E5"> quite easier so let's take an</font>

280
00:12:00,160 --> 00:12:03,880
abstract case of shuffling and here I

281
00:12:01,870 --> 00:12:06,490
have to shuffle three layers<font color="#CCCCCC"> of a cipher</font>

282
00:12:03,880 --> 00:12:08,230
<font color="#E5E5E5">and</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> layer his</font><font color="#CCCCCC"> for blocks in it</font>

283
00:12:06,490 --> 00:12:11,890
<font color="#E5E5E5">blocks could be anything like they could</font>

284
00:12:08,230 --> 00:12:13,779
be<font color="#E5E5E5"> whole cipher sections or it could be</font>

285
00:12:11,890 --> 00:12:16,390
just assembly instructions or blocks of

286
00:12:13,779 --> 00:12:17,680
assembly instructions and<font color="#E5E5E5"> the randomness</font>

287
00:12:16,390 --> 00:12:19,839
cost to shuffling three layers

288
00:12:17,680 --> 00:12:22,719
independently and each one his forward

289
00:12:19,839 --> 00:12:25,079
<font color="#E5E5E5">with will go around 24 bits of</font>

290
00:12:22,720 --> 00:12:28,450
<font color="#CCCCCC">randomness if the</font><font color="#E5E5E5"> formula is correct</font>

291
00:12:25,079 --> 00:12:30,729
<font color="#E5E5E5">then a nice option</font><font color="#CCCCCC"> is if you want to</font><font color="#E5E5E5"> cut</font>

292
00:12:28,450 --> 00:12:32,110
<font color="#E5E5E5">down on the randomness cost and we</font>

293
00:12:30,730 --> 00:12:34,750
<font color="#CCCCCC">propose why don't you</font><font color="#E5E5E5"> partition the</font>

294
00:12:32,110 --> 00:12:37,510
layers<font color="#E5E5E5"> instead of actually settling all</font>

295
00:12:34,750 --> 00:12:39,760
<font color="#E5E5E5">four in columns well</font><font color="#CCCCCC"> why don't</font><font color="#E5E5E5"> you cut</font>

296
00:12:37,510 --> 00:12:41,920
down a little bit and we call this

297
00:12:39,760 --> 00:12:45,189
partition shuffling with partition

298
00:12:41,920 --> 00:12:47,199
factor<font color="#E5E5E5"> FB is</font><font color="#CCCCCC"> equal to</font><font color="#E5E5E5"> two and if you do</font>

299
00:12:45,190 --> 00:12:48,579
that then you can recompute<font color="#CCCCCC"> the</font>

300
00:12:47,200 --> 00:12:50,770
randomness cost and it will actually

301
00:12:48,579 --> 00:12:53,680
<font color="#CCCCCC">reduce the twelve bits</font><font color="#E5E5E5"> which is less</font>

302
00:12:50,770 --> 00:12:57,670
<font color="#E5E5E5">than</font><font color="#CCCCCC"> 24 so yeah we</font><font color="#E5E5E5"> thought we got</font><font color="#CCCCCC"> a</font>

303
00:12:53,680 --> 00:12:59,649
small<font color="#E5E5E5"> advantage over it all right so</font>

304
00:12:57,670 --> 00:13:02,949
that's<font color="#E5E5E5"> not the only options are</font><font color="#CCCCCC"> actually</font>

305
00:12:59,649 --> 00:13:04,779
quite a few<font color="#CCCCCC"> one more is that instead of</font>

306
00:13:02,949 --> 00:13:07,479
original<font color="#CCCCCC"> surflink</font><font color="#E5E5E5"> we can actually do</font>

307
00:13:04,779 --> 00:13:10,329
merge<font color="#E5E5E5"> shuffling so we can merge the two</font>

308
00:13:07,480 --> 00:13:12,279
layers<font color="#E5E5E5"> so</font><font color="#CCCCCC"> layer 1 and layer 2 used to</font><font color="#E5E5E5"> be</font>

309
00:13:10,329 --> 00:13:13,930
<font color="#E5E5E5">different but now we put them all</font>

310
00:13:12,279 --> 00:13:16,209
<font color="#E5E5E5">together and we will shuffle them all</font>

311
00:13:13,930 --> 00:13:19,050
together and we call this merge<font color="#E5E5E5"> stuffing</font>

312
00:13:16,209 --> 00:13:22,780
with merge factor FM is equal to<font color="#E5E5E5"> 2 now</font>

313
00:13:19,050 --> 00:13:24,579
<font color="#CCCCCC">again if you see them compute the round</font>

314
00:13:22,780 --> 00:13:28,089
<font color="#CCCCCC">this</font><font color="#E5E5E5"> cost for this then you</font><font color="#CCCCCC"> have to</font>

315
00:13:24,580 --> 00:13:31,030
shuffle<font color="#E5E5E5"> two layers and this will again</font>

316
00:13:28,090 --> 00:13:33,640
end up in approximately<font color="#E5E5E5"> 16 bits which is</font>

317
00:13:31,030 --> 00:13:37,089
less<font color="#E5E5E5"> than 24 so again we feel that we</font>

318
00:13:33,640 --> 00:13:42,370
got an advantage<font color="#E5E5E5"> through our through our</font>

319
00:13:37,090 --> 00:13:45,010
our<font color="#E5E5E5"> s as you might have already expected</font>

320
00:13:42,370 --> 00:13:47,020
<font color="#E5E5E5">doing all those things increasing from</font>

321
00:13:45,010 --> 00:13:49,240
let's say the<font color="#CCCCCC"> original</font><font color="#E5E5E5"> case where you do</font>

322
00:13:47,020 --> 00:13:50,890
not partition and<font color="#E5E5E5"> you do not show and</font>

323
00:13:49,240 --> 00:13:53,620
you do not<font color="#E5E5E5"> merge any layers</font><font color="#CCCCCC"> while</font>

324
00:13:50,890 --> 00:13:55,750
shuffling<font color="#E5E5E5"> and comparing to</font><font color="#CCCCCC"> a case where</font>

325
00:13:53,620 --> 00:13:58,180
you partition<font color="#CCCCCC"> or AK to a case where you</font>

326
00:13:55,750 --> 00:13:59,500
partition<font color="#E5E5E5"> and sha and merge then we will</font>

327
00:13:58,180 --> 00:14:01,260
see a damage in the noise of

328
00:13:59,500 --> 00:14:03,820
<font color="#E5E5E5">notification stage of this thing</font><font color="#CCCCCC"> so</font>

329
00:14:01,260 --> 00:14:05,770
<font color="#CCCCCC">starting</font><font color="#E5E5E5"> from the solid blue</font><font color="#CCCCCC"> line</font><font color="#E5E5E5"> this</font>

330
00:14:03,820 --> 00:14:07,000
<font color="#E5E5E5">curve starts shifting to the right the</font>

331
00:14:05,770 --> 00:14:09,670
<font color="#CCCCCC">more you merge and</font><font color="#E5E5E5"> the more you</font>

332
00:14:07,000 --> 00:14:12,850
<font color="#E5E5E5">partition or in general the more you cut</font>

333
00:14:09,670 --> 00:14:14,560
down<font color="#CCCCCC"> on randomness and of course it</font>

334
00:14:12,850 --> 00:14:17,710
damages the noise amplification stage

335
00:14:14,560 --> 00:14:20,050
<font color="#E5E5E5">and once again I will restate the same</font>

336
00:14:17,710 --> 00:14:22,090
thing that<font color="#E5E5E5"> our RS is a trade off</font><font color="#CCCCCC"> that</font>

337
00:14:20,050 --> 00:14:25,120
the countermeasure designer has at his

338
00:14:22,090 --> 00:14:27,730
disposal and<font color="#E5E5E5"> he can actually use it to</font>

339
00:14:25,120 --> 00:14:33,070
<font color="#E5E5E5">make an implementation cheaper less</font>

340
00:14:27,730 --> 00:14:35,350
secure or the other way around<font color="#E5E5E5"> so</font>

341
00:14:33,070 --> 00:14:37,750
finally some future directions<font color="#CCCCCC"> for this</font>

342
00:14:35,350 --> 00:14:39,220
type of work<font color="#CCCCCC"> and here I say towards</font>

343
00:14:37,750 --> 00:14:41,310
parametric design for<font color="#CCCCCC"> side-channel</font>

344
00:14:39,220 --> 00:14:43,420
<font color="#CCCCCC">countermeasures I will explain this</font>

345
00:14:41,310 --> 00:14:45,729
first and foremost we have<font color="#E5E5E5"> demonstrated</font>

346
00:14:43,420 --> 00:14:49,030
<font color="#CCCCCC">how</font><font color="#E5E5E5"> to reduce the randomness cost in</font>

347
00:14:45,730 --> 00:14:50,920
masking and shuffling<font color="#E5E5E5"> and now I think</font>

348
00:14:49,030 --> 00:14:53,470
it's<font color="#E5E5E5"> time</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> start</font><font color="#CCCCCC"> talking more about</font>

349
00:14:50,920 --> 00:14:54,750
this random<font color="#E5E5E5"> number generator</font><font color="#CCCCCC"> I haven't</font>

350
00:14:53,470 --> 00:14:56,500
seen that many open source

351
00:14:54,750 --> 00:14:58,810
<font color="#E5E5E5">implementations of this thing and I</font>

352
00:14:56,500 --> 00:15:00,550
<font color="#CCCCCC">think it would be nice for the whole</font>

353
00:14:58,810 --> 00:15:03,339
community<font color="#CCCCCC"> to</font><font color="#E5E5E5"> agree</font><font color="#CCCCCC"> on what is</font><font color="#E5E5E5"> actually</font>

354
00:15:00,550 --> 00:15:05,979
required<font color="#E5E5E5"> for an orangy used in masking</font>

355
00:15:03,340 --> 00:15:07,870
or shuffling it will encourage more

356
00:15:05,980 --> 00:15:09,940
discussions<font color="#E5E5E5"> I would encourage more</font>

357
00:15:07,870 --> 00:15:13,600
discussions on this and more research

358
00:15:09,940 --> 00:15:16,990
towards this direction<font color="#E5E5E5"> now second and</font>

359
00:15:13,600 --> 00:15:19,690
perhaps<font color="#CCCCCC"> more interestingly</font><font color="#E5E5E5"> is that I</font>

360
00:15:16,990 --> 00:15:22,990
would like<font color="#E5E5E5"> to at least personally see</font>

361
00:15:19,690 --> 00:15:26,740
more<font color="#E5E5E5"> of a parametric approach when we</font>

362
00:15:22,990 --> 00:15:29,410
design countermeasures<font color="#E5E5E5"> and</font><font color="#CCCCCC"> for example</font>

363
00:15:26,740 --> 00:15:30,940
<font color="#E5E5E5">in the modern countermeasures we just</font>

364
00:15:29,410 --> 00:15:32,620
decide the order<font color="#E5E5E5"> of masking we</font>

365
00:15:30,940 --> 00:15:35,950
implemented in<font color="#CCCCCC"> a device and</font><font color="#E5E5E5"> that's it</font>

366
00:15:32,620 --> 00:15:37,450
and up until

367
00:15:35,950 --> 00:15:38,829
<font color="#E5E5E5">all right let's say a few years ago we</font>

368
00:15:37,450 --> 00:15:40,750
didn't<font color="#CCCCCC"> have that</font><font color="#E5E5E5"> many options there were</font>

369
00:15:38,829 --> 00:15:42,609
several countermeasures people were

370
00:15:40,750 --> 00:15:45,070
implementing them<font color="#E5E5E5"> but I feel that we</font>

371
00:15:42,610 --> 00:15:47,620
<font color="#E5E5E5">start scratching more and more beneath</font>

372
00:15:45,070 --> 00:15:49,480
the<font color="#E5E5E5"> surface of those options so now</font>

373
00:15:47,620 --> 00:15:52,060
instead<font color="#E5E5E5"> of</font><font color="#CCCCCC"> just the order of masking I</font>

374
00:15:49,480 --> 00:15:54,850
can have I have so many<font color="#CCCCCC"> variants to</font>

375
00:15:52,060 --> 00:15:57,459
choose from I can choose<font color="#CCCCCC"> X order masking</font>

376
00:15:54,850 --> 00:16:00,070
that recycles random numbers merges a

377
00:15:57,459 --> 00:16:02,859
few layers and many more things<font color="#E5E5E5"> so I</font>

378
00:16:00,070 --> 00:16:07,480
have far more available options and

379
00:16:02,860 --> 00:16:10,510
<font color="#E5E5E5">compare what I used to so to close down</font>

380
00:16:07,480 --> 00:16:13,750
this presentation<font color="#E5E5E5"> I will start and I</font>

381
00:16:10,510 --> 00:16:15,939
<font color="#E5E5E5">will attempt an analogy with action with</font>

382
00:16:13,750 --> 00:16:17,320
actual architecture<font color="#E5E5E5"> between</font><font color="#CCCCCC"> South</font>

383
00:16:15,940 --> 00:16:18,820
shuffling and<font color="#CCCCCC"> masking</font><font color="#E5E5E5"> cast</font>

384
00:16:17,320 --> 00:16:21,899
countermeasure architecture<font color="#E5E5E5"> and actual</font>

385
00:16:18,820 --> 00:16:25,050
architecture so in the<font color="#E5E5E5"> 70s or 80s it was</font>

386
00:16:21,899 --> 00:16:27,760
the<font color="#CCCCCC"> age of modernity</font><font color="#E5E5E5"> and we used to have</font>

387
00:16:25,050 --> 00:16:29,979
buildings<font color="#E5E5E5"> that were</font><font color="#CCCCCC"> built in</font><font color="#E5E5E5"> the</font>

388
00:16:27,760 --> 00:16:32,860
<font color="#CCCCCC">international style and the mantra</font><font color="#E5E5E5"> was</font>

389
00:16:29,980 --> 00:16:35,170
more like let's<font color="#CCCCCC"> just pick the number of</font>

390
00:16:32,860 --> 00:16:36,820
floors and<font color="#E5E5E5"> then form</font><font color="#CCCCCC"> Sara's faction</font>

391
00:16:35,170 --> 00:16:39,550
function that was<font color="#E5E5E5"> the mantra of</font>

392
00:16:36,820 --> 00:16:41,410
modernist designers and then like

393
00:16:39,550 --> 00:16:44,199
masking yeah you just put many orders<font color="#E5E5E5"> of</font>

394
00:16:41,410 --> 00:16:46,360
masking even that's it<font color="#E5E5E5"> while I feel that</font>

395
00:16:44,199 --> 00:16:49,120
now we<font color="#E5E5E5"> have the</font><font color="#CCCCCC"> ability to move a</font><font color="#E5E5E5"> more</font>

396
00:16:46,360 --> 00:16:52,990
towards a more parametric model so a bit

397
00:16:49,120 --> 00:16:55,110
like<font color="#E5E5E5"> the turning torso</font><font color="#CCCCCC"> in Sweden</font><font color="#E5E5E5"> so</font>

398
00:16:52,990 --> 00:16:58,029
which is essentially the<font color="#E5E5E5"> same building</font>

399
00:16:55,110 --> 00:17:01,930
<font color="#CCCCCC">but now we</font><font color="#E5E5E5"> have a better</font><font color="#CCCCCC"> understanding</font>

400
00:16:58,029 --> 00:17:05,349
<font color="#E5E5E5">of structure so we</font><font color="#CCCCCC"> can twist and mould</font>

401
00:17:01,930 --> 00:17:07,418
it in a better form<font color="#E5E5E5"> in a</font><font color="#CCCCCC"> form that</font><font color="#E5E5E5"> still</font>

402
00:17:05,349 --> 00:17:10,270
serve function but in the form that

403
00:17:07,419 --> 00:17:13,569
optimizes<font color="#CCCCCC"> the function itself</font><font color="#E5E5E5"> and that</font>

404
00:17:10,270 --> 00:17:15,730
<font color="#E5E5E5">pretty</font><font color="#CCCCCC"> much concludes the talk so are</font>

405
00:17:13,569 --> 00:17:19,399
there any questions

406
00:17:15,730 --> 00:17:22,729
[Applause]

407
00:17:19,400 --> 00:17:22,729
[Music]

408
00:17:24,279 --> 00:17:31,999
<font color="#CCCCCC">Christian's</font><font color="#E5E5E5"> focused us who wants the</font>

409
00:17:27,259 --> 00:17:38,629
microphone it's really softer don't be

410
00:17:31,999 --> 00:17:42,259
afraid<font color="#E5E5E5"> all right</font><font color="#CCCCCC"> let's start so for the</font>

411
00:17:38,629 --> 00:17:43,668
recycled masking you<font color="#E5E5E5"> you require at some</font>

412
00:17:42,259 --> 00:17:46,249
point<font color="#CCCCCC"> is basic basically pretty much</font>

413
00:17:43,669 --> 00:17:47,990
everybody does that<font color="#E5E5E5"> inputs or that these</font>

414
00:17:46,249 --> 00:17:51,379
two<font color="#E5E5E5"> operations that recycle they must be</font>

415
00:17:47,990 --> 00:17:52,759
independent<font color="#E5E5E5"> but for example</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> I</font>

416
00:17:51,379 --> 00:17:55,668
<font color="#CCCCCC">implement</font><font color="#E5E5E5"> an</font><font color="#CCCCCC"> S</font><font color="#E5E5E5"> box I will have many</font>

417
00:17:52,759 --> 00:17:58,129
multiplications<font color="#E5E5E5"> that are not independent</font>

418
00:17:55,669 --> 00:18:00,409
<font color="#E5E5E5">so then I need</font><font color="#CCCCCC"> to add extra</font><font color="#E5E5E5"> randomness</font>

419
00:17:58,129 --> 00:18:01,129
<font color="#CCCCCC">to make them independent</font><font color="#E5E5E5"> so that</font><font color="#CCCCCC"> would</font>

420
00:18:00,409 --> 00:18:04,309
be one<font color="#CCCCCC"> option</font>

421
00:18:01,129 --> 00:18:06,168
I<font color="#E5E5E5"> think refreshing gadget in between but</font>

422
00:18:04,309 --> 00:18:08,360
<font color="#E5E5E5">then I would feel</font><font color="#CCCCCC"> that this would</font><font color="#E5E5E5"> defeat</font>

423
00:18:06,169 --> 00:18:10,759
the<font color="#CCCCCC"> whole purpose of it unless you</font><font color="#E5E5E5"> have</font>

424
00:18:08,360 --> 00:18:13,519
extremely higher order and the<font color="#E5E5E5"> quadratic</font>

425
00:18:10,759 --> 00:18:16,399
randomness hits you more than the linear

426
00:18:13,519 --> 00:18:18,679
randomness of of the other gadgets<font color="#E5E5E5"> but</font>

427
00:18:16,399 --> 00:18:21,678
still<font color="#E5E5E5"> I what I have in mind is</font><font color="#CCCCCC"> different</font>

428
00:18:18,679 --> 00:18:24,889
executions<font color="#E5E5E5"> while storing in between the</font>

429
00:18:21,679 --> 00:18:26,809
<font color="#E5E5E5">random numbers so you</font><font color="#CCCCCC"> do what is</font>

430
00:18:24,889 --> 00:18:28,100
iteration you store<font color="#E5E5E5"> those numbers and</font>

431
00:18:26,809 --> 00:18:30,350
<font color="#E5E5E5">then</font><font color="#CCCCCC"> you reuse them in the second</font>

432
00:18:28,100 --> 00:18:32,389
iteration<font color="#CCCCCC"> and then</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> give some</font><font color="#E5E5E5"> sort of</font>

433
00:18:30,350 --> 00:18:39,860
guarantee<font color="#CCCCCC"> but</font><font color="#E5E5E5"> of course this implies</font>

434
00:18:32,389 --> 00:18:42,080
storage more<font color="#E5E5E5"> questions comments no all</font>

435
00:18:39,860 --> 00:18:44,748
<font color="#E5E5E5">right then we'll have a</font><font color="#CCCCCC"> short break</font><font color="#E5E5E5"> and</font>

436
00:18:42,080 --> 00:18:46,428
we'll begin again<font color="#CCCCCC"> at quarter past</font><font color="#E5E5E5"> five</font>

437
00:18:44,749 --> 00:18:46,940
thanks again to all<font color="#CCCCCC"> the speakers</font><font color="#E5E5E5"> of the</font>

438
00:18:46,429 --> 00:18:49,030
session

439
00:18:46,940 --> 00:18:49,190
[Applause]

440
00:18:49,030 --> 00:18:52,740
[Music]

441
00:18:49,190 --> 00:18:52,740
[Applause]

