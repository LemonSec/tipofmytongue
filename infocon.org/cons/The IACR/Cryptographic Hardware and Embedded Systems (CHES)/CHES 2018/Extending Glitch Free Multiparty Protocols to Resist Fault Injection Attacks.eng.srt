1
00:00:00,319 --> 00:00:08,040
<font color="#E5E5E5">okay next talk is a paper by</font><font color="#CCCCCC"> oaken</font>

2
00:00:05,460 --> 00:00:10,679
<font color="#E5E5E5">seeker Abraham Fernandez Rubio</font><font color="#CCCCCC"> Reiner</font>

3
00:00:08,039 --> 00:00:12,799
Stein went and<font color="#E5E5E5"> Tomas Eisenberg and oaken</font>

4
00:00:10,679 --> 00:00:14,849
will give the talk he will<font color="#E5E5E5"> speak about</font>

5
00:00:12,799 --> 00:00:16,740
extending<font color="#E5E5E5"> glitch-free multi-party</font>

6
00:00:14,849 --> 00:00:21,539
protocols<font color="#E5E5E5"> to resist fault injection</font>

7
00:00:16,740 --> 00:00:23,689
attacks hello<font color="#E5E5E5"> and thanks for the</font>

8
00:00:21,539 --> 00:00:27,510
introduction<font color="#CCCCCC"> and</font><font color="#E5E5E5"> today I will give us a</font>

9
00:00:23,689 --> 00:00:29,429
small talk on the<font color="#E5E5E5"> our paper and as you</font>

10
00:00:27,510 --> 00:00:33,180
<font color="#CCCCCC">can see this is a joint work with</font>

11
00:00:29,429 --> 00:00:36,000
Abraham<font color="#E5E5E5"> Thomas and Reiner so as we all</font>

12
00:00:33,180 --> 00:00:38,760
<font color="#E5E5E5">know the physical attacks on on embedded</font>

13
00:00:36,000 --> 00:00:41,489
systems<font color="#CCCCCC"> are our real threat so if the if</font>

14
00:00:38,760 --> 00:00:44,160
the these devices<font color="#CCCCCC"> I'll just run some</font>

15
00:00:41,489 --> 00:00:46,500
crypto algorithm these devices are

16
00:00:44,160 --> 00:00:47,910
vulnerable is<font color="#CCCCCC"> easy on</font><font color="#E5E5E5"> so let</font><font color="#CCCCCC"> me</font>

17
00:00:46,500 --> 00:00:50,160
introduce our adversary in this

18
00:00:47,910 --> 00:00:52,140
presentation<font color="#CCCCCC"> Eve will be</font><font color="#E5E5E5"> our addressee</font>

19
00:00:50,160 --> 00:00:54,898
and what she can<font color="#CCCCCC"> do is you can do</font>

20
00:00:52,140 --> 00:00:59,070
sizegenetics<font color="#E5E5E5"> fault injection probing and</font>

21
00:00:54,899 --> 00:01:01,199
<font color="#E5E5E5">glitches</font><font color="#CCCCCC"> as well in the</font><font color="#E5E5E5"> in the even in</font>

22
00:00:59,070 --> 00:01:04,290
<font color="#E5E5E5">this simplest case what</font><font color="#CCCCCC"> she can do is</font>

23
00:01:01,199 --> 00:01:06,360
you can<font color="#CCCCCC"> just do</font><font color="#E5E5E5"> some simple DPA and get</font>

24
00:01:04,290 --> 00:01:09,180
<font color="#E5E5E5">the</font><font color="#CCCCCC"> tree get security</font><font color="#E5E5E5"> information very</font>

25
00:01:06,360 --> 00:01:11,850
easily<font color="#E5E5E5"> so what we need to do is we need</font>

26
00:01:09,180 --> 00:01:14,930
<font color="#E5E5E5">to just protect this implementation so</font>

27
00:01:11,850 --> 00:01:17,580
we can do this<font color="#E5E5E5"> in two</font><font color="#CCCCCC"> different</font>

28
00:01:14,930 --> 00:01:19,049
categories<font color="#E5E5E5"> one of them is such a</font>

29
00:01:17,580 --> 00:01:23,220
countermeasure and the other one is

30
00:01:19,049 --> 00:01:27,210
fault injection of course luckily in the

31
00:01:23,220 --> 00:01:29,189
previous presentation we saw that such

32
00:01:27,210 --> 00:01:31,949
an countermeasures<font color="#CCCCCC"> can be listed</font><font color="#E5E5E5"> I'm</font>

33
00:01:29,189 --> 00:01:34,079
asking some examples are private

34
00:01:31,950 --> 00:01:35,759
circuits bullying and polynomial masking

35
00:01:34,079 --> 00:01:37,949
threshold<font color="#CCCCCC"> implant issues</font><font color="#E5E5E5"> and the fault</font>

36
00:01:35,759 --> 00:01:39,390
injection countermeasures are redundancy

37
00:01:37,950 --> 00:01:42,060
<font color="#E5E5E5">error detection and effective</font>

38
00:01:39,390 --> 00:01:44,220
competition<font color="#E5E5E5"> so of course we</font><font color="#CCCCCC"> need to</font>

39
00:01:42,060 --> 00:01:46,079
<font color="#E5E5E5">combine these</font><font color="#CCCCCC"> countermeasures and there</font>

40
00:01:44,220 --> 00:01:48,658
in<font color="#E5E5E5"> the literature there's several</font>

41
00:01:46,079 --> 00:01:52,199
countermeasures<font color="#E5E5E5"> combined countermeasures</font>

42
00:01:48,659 --> 00:01:55,110
which can combine those those different

43
00:01:52,200 --> 00:01:57,540
operations<font color="#E5E5E5"> so what we're</font><font color="#CCCCCC"> going to do in</font>

44
00:01:55,110 --> 00:02:00,299
this presentation<font color="#E5E5E5"> is we will introduce a</font>

45
00:01:57,540 --> 00:02:03,180
polynomial mask polynomial based upon

46
00:02:00,299 --> 00:02:05,219
the masking<font color="#CCCCCC"> based countermeasures and</font><font color="#E5E5E5"> I</font>

47
00:02:03,180 --> 00:02:07,770
will just<font color="#E5E5E5"> introduce you</font><font color="#CCCCCC"> to our our our</font>

48
00:02:05,219 --> 00:02:09,750
scheme and<font color="#E5E5E5"> I believe to this why do we</font>

49
00:02:07,770 --> 00:02:11,519
need an error preserving multiplication

50
00:02:09,750 --> 00:02:13,340
<font color="#E5E5E5">and of course I will give you some</font>

51
00:02:11,520 --> 00:02:15,650
<font color="#E5E5E5">security</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> performance</font><font color="#CCCCCC"> honors and if</font>

52
00:02:13,340 --> 00:02:20,420
<font color="#E5E5E5">we have time we will do some application</font>

53
00:02:15,650 --> 00:02:21,860
on<font color="#E5E5E5"> a s so our</font><font color="#CCCCCC"> country</font><font color="#E5E5E5"> combined car</font><font color="#CCCCCC"> to</font>

54
00:02:20,420 --> 00:02:23,510
<font color="#E5E5E5">measure based on the shamanistic a</font>

55
00:02:21,860 --> 00:02:25,780
<font color="#E5E5E5">change so what is your secret sharing</font>

56
00:02:23,510 --> 00:02:29,209
scheme is is<font color="#E5E5E5"> a just a polynomial base</font>

57
00:02:25,780 --> 00:02:32,030
<font color="#E5E5E5">secret sharing which requires evaluating</font>

58
00:02:29,209 --> 00:02:36,709
a secret polynomial into n different

59
00:02:32,030 --> 00:02:39,379
points and<font color="#E5E5E5"> yeah you can see some example</font>

60
00:02:36,709 --> 00:02:42,440
in here which is<font color="#CCCCCC"> a degree 2 polynomial</font>

61
00:02:39,379 --> 00:02:46,790
and this<font color="#E5E5E5"> to</font><font color="#CCCCCC"> Paloma can be represented by</font>

62
00:02:42,440 --> 00:02:51,859
<font color="#E5E5E5">three points and here you can see that</font>

63
00:02:46,790 --> 00:02:53,810
our<font color="#E5E5E5"> F 0</font><font color="#CCCCCC"> is shared by 3 points</font><font color="#E5E5E5"> so we have</font>

64
00:02:51,860 --> 00:02:55,579
a<font color="#E5E5E5"> secretary construction of course we</font>

65
00:02:53,810 --> 00:02:57,470
have two different<font color="#CCCCCC"> representations one</font>

66
00:02:55,579 --> 00:03:00,680
of them is the coefficients<font color="#E5E5E5"> the other</font>

67
00:02:57,470 --> 00:03:03,530
one is<font color="#E5E5E5"> of</font><font color="#CCCCCC"> course</font><font color="#E5E5E5"> the points and we</font><font color="#CCCCCC"> are</font>

68
00:03:00,680 --> 00:03:07,579
<font color="#E5E5E5">going to of</font><font color="#CCCCCC"> course the ticket shares are</font>

69
00:03:03,530 --> 00:03:09,110
the points itself<font color="#E5E5E5"> so what</font><font color="#CCCCCC"> do</font><font color="#E5E5E5"> we do what</font>

70
00:03:07,579 --> 00:03:13,459
what<font color="#CCCCCC"> happen if</font><font color="#E5E5E5"> we increase</font><font color="#CCCCCC"> the number of</font>

71
00:03:09,110 --> 00:03:15,230
shares<font color="#E5E5E5"> now we have</font><font color="#CCCCCC"> four points and if</font>

72
00:03:13,459 --> 00:03:18,590
you try<font color="#CCCCCC"> to interpolate these polynomials</font>

73
00:03:15,230 --> 00:03:21,319
<font color="#E5E5E5">and do some calculations</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> it we will</font>

74
00:03:18,590 --> 00:03:25,900
see that the<font color="#CCCCCC"> highest</font><font color="#E5E5E5"> degree term is 0 in</font>

75
00:03:21,319 --> 00:03:29,060
this<font color="#CCCCCC"> case so what happens if the if if</font>

76
00:03:25,900 --> 00:03:31,220
successfully inject<font color="#E5E5E5"> the fault</font><font color="#CCCCCC"> system now</font>

77
00:03:29,060 --> 00:03:34,880
in<font color="#E5E5E5"> this</font><font color="#CCCCCC"> example if you can just inject</font>

78
00:03:31,220 --> 00:03:37,910
<font color="#CCCCCC">the fault to those torture and when we</font>

79
00:03:34,880 --> 00:03:40,069
try<font color="#E5E5E5"> to implement</font><font color="#CCCCCC"> urple 8 these</font><font color="#E5E5E5"> four</font>

80
00:03:37,910 --> 00:03:42,889
<font color="#CCCCCC">points what are we</font><font color="#E5E5E5"> going to see is that</font>

81
00:03:40,069 --> 00:03:45,858
<font color="#E5E5E5">this highest degree term is non zero so</font>

82
00:03:42,889 --> 00:03:49,819
<font color="#CCCCCC">we will use this fact in an arc</font><font color="#E5E5E5"> in our</font>

83
00:03:45,859 --> 00:03:52,669
computations<font color="#E5E5E5"> and we will try to detect</font>

84
00:03:49,819 --> 00:03:55,220
errors<font color="#CCCCCC"> using those coefficients</font><font color="#E5E5E5"> so in</font>

85
00:03:52,669 --> 00:03:57,500
the<font color="#E5E5E5"> end this scheme</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> can see that the</font>

86
00:03:55,220 --> 00:04:03,829
coefficient between<font color="#CCCCCC"> D plus</font><font color="#E5E5E5"> 1 and n</font><font color="#CCCCCC"> minus</font>

87
00:03:57,500 --> 00:04:05,419
1 are our error detection terms so we

88
00:04:03,829 --> 00:04:08,030
will just stick with<font color="#E5E5E5"> stick with the</font>

89
00:04:05,419 --> 00:04:10,790
points<font color="#E5E5E5"> so we need to just define</font><font color="#CCCCCC"> some of</font>

90
00:04:08,030 --> 00:04:12,980
<font color="#E5E5E5">the operations using the points in the</font>

91
00:04:10,790 --> 00:04:16,880
simplest case if you would like to<font color="#CCCCCC"> do</font>

92
00:04:12,980 --> 00:04:21,048
that<font color="#CCCCCC"> do some addition when</font><font color="#E5E5E5"> we try to add</font>

93
00:04:16,880 --> 00:04:23,870
<font color="#CCCCCC">two secrets we just need to add the</font>

94
00:04:21,048 --> 00:04:27,650
<font color="#CCCCCC">addition right the secret and the shares</font>

95
00:04:23,870 --> 00:04:31,610
of<font color="#E5E5E5"> each player so we can just</font>

96
00:04:27,650 --> 00:04:34,520
- transformation day super<font color="#E5E5E5"> easily but</font>

97
00:04:31,610 --> 00:04:36,949
the<font color="#E5E5E5"> the most interesting cases is the</font>

98
00:04:34,520 --> 00:04:40,130
<font color="#E5E5E5">multiplication so in this example we</font>

99
00:04:36,949 --> 00:04:44,660
<font color="#E5E5E5">will say</font><font color="#CCCCCC"> 3 1 skin and when we try</font><font color="#E5E5E5"> to do</font>

100
00:04:40,130 --> 00:04:47,719
a computation<font color="#E5E5E5"> and when we try to try to</font>

101
00:04:44,660 --> 00:04:50,030
<font color="#CCCCCC">mult multiply 2 secrets</font><font color="#E5E5E5"> what we see is</font>

102
00:04:47,720 --> 00:04:52,940
in the first step we will<font color="#E5E5E5"> just</font><font color="#CCCCCC"> multiply</font>

103
00:04:50,030 --> 00:04:55,429
the first corresponding<font color="#E5E5E5"> shares now as</font>

104
00:04:52,940 --> 00:04:57,350
you can<font color="#CCCCCC"> see this is a</font><font color="#E5E5E5"> 3:1 scheme and F</font>

105
00:04:55,430 --> 00:05:00,260
and G are<font color="#E5E5E5"> actually aligned in the in</font>

106
00:04:57,350 --> 00:05:02,860
<font color="#E5E5E5">this</font><font color="#CCCCCC"> case and when we</font><font color="#E5E5E5"> multiply two lines</font>

107
00:05:00,260 --> 00:05:05,570
what we get is a degree<font color="#E5E5E5"> 2 polynomial and</font>

108
00:05:02,860 --> 00:05:09,110
that means we cannot use the<font color="#CCCCCC"> eights</font><font color="#E5E5E5"> as</font>

109
00:05:05,570 --> 00:05:13,130
the output shares<font color="#E5E5E5"> so in the second</font><font color="#CCCCCC"> step</font>

110
00:05:09,110 --> 00:05:14,960
we<font color="#E5E5E5"> do a randomization step and in step</font>

111
00:05:13,130 --> 00:05:17,300
each player just generate a random

112
00:05:14,960 --> 00:05:20,810
degree the polynomials<font color="#E5E5E5"> whose coefficient</font>

113
00:05:17,300 --> 00:05:23,840
is<font color="#CCCCCC"> a is their calculated value</font><font color="#E5E5E5"> and then</font>

114
00:05:20,810 --> 00:05:25,610
they reshare this polynomial<font color="#CCCCCC"> and each</font>

115
00:05:23,840 --> 00:05:28,909
player gets<font color="#CCCCCC"> three different values and</font>

116
00:05:25,610 --> 00:05:31,250
<font color="#E5E5E5">actually at</font><font color="#CCCCCC"> the add this together so</font>

117
00:05:28,910 --> 00:05:34,789
what happened if the<font color="#CCCCCC"> eve</font><font color="#E5E5E5"> successfully</font>

118
00:05:31,250 --> 00:05:36,560
inject a fault<font color="#CCCCCC"> and as you can</font><font color="#E5E5E5"> see</font><font color="#CCCCCC"> the</font>

119
00:05:34,789 --> 00:05:39,380
the fault<font color="#E5E5E5"> actually propagate until the</font>

120
00:05:36,560 --> 00:05:41,599
second step<font color="#CCCCCC"> and since the</font><font color="#E5E5E5"> Q eyes are</font>

121
00:05:39,380 --> 00:05:44,360
just<font color="#CCCCCC"> a random poll numbers and</font><font color="#E5E5E5"> MDD</font>

122
00:05:41,599 --> 00:05:46,580
polynomials<font color="#E5E5E5"> what happen is when</font><font color="#CCCCCC"> we try</font>

123
00:05:44,360 --> 00:05:48,590
<font color="#CCCCCC">to interpolate this polynomial</font><font color="#E5E5E5"> the</font>

124
00:05:46,580 --> 00:05:51,889
output is always the great greater

125
00:05:48,590 --> 00:05:53,570
greater less than<font color="#CCCCCC"> B so that's</font><font color="#E5E5E5"> why we</font>

126
00:05:51,889 --> 00:05:55,699
need<font color="#CCCCCC"> to so that's</font><font color="#E5E5E5"> why</font><font color="#CCCCCC"> the error</font>

127
00:05:53,570 --> 00:05:57,770
propagates until the second until<font color="#E5E5E5"> the</font>

128
00:05:55,699 --> 00:06:01,010
first step<font color="#E5E5E5"> and then second</font><font color="#CCCCCC"> step is</font>

129
00:05:57,770 --> 00:06:04,609
<font color="#E5E5E5">always a valid degree</font><font color="#CCCCCC"> D point of it so</font>

130
00:06:01,010 --> 00:06:07,789
we need<font color="#E5E5E5"> to try</font><font color="#CCCCCC"> find a way to protect the</font>

131
00:06:04,610 --> 00:06:10,490
implementations so first of<font color="#E5E5E5"> all what is</font>

132
00:06:07,789 --> 00:06:13,969
<font color="#CCCCCC">the our ideas what are our aims and we</font>

133
00:06:10,490 --> 00:06:17,900
only we<font color="#E5E5E5"> only detect the</font><font color="#CCCCCC"> faults that</font>

134
00:06:13,970 --> 00:06:20,770
<font color="#CCCCCC">means we don't</font><font color="#E5E5E5"> want to correct correct</font>

135
00:06:17,900 --> 00:06:23,479
the<font color="#CCCCCC"> false it</font><font color="#E5E5E5"> means that the only we</font><font color="#CCCCCC"> only</font>

136
00:06:20,770 --> 00:06:28,280
looked at the<font color="#CCCCCC"> apt</font><font color="#E5E5E5"> if</font><font color="#CCCCCC"> if that</font><font color="#E5E5E5"> if the</font>

137
00:06:23,479 --> 00:06:31,190
outputs degree is greater than D so<font color="#E5E5E5"> and</font>

138
00:06:28,280 --> 00:06:32,599
<font color="#E5E5E5">also as we have the point space and we</font>

139
00:06:31,190 --> 00:06:34,699
had the coefficient space we can just

140
00:06:32,599 --> 00:06:37,099
<font color="#E5E5E5">into an interpolation and do the fault</font>

141
00:06:34,699 --> 00:06:40,450
<font color="#E5E5E5">detection</font><font color="#CCCCCC"> but that this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> gonna leak</font>

142
00:06:37,099 --> 00:06:42,400
information<font color="#E5E5E5"> so we don't want to do that</font>

143
00:06:40,450 --> 00:06:44,680
and we would like<font color="#CCCCCC"> to have an</font><font color="#E5E5E5"> air</font>

144
00:06:42,400 --> 00:06:47,560
preserving multiplication<font color="#E5E5E5"> that means if</font>

145
00:06:44,680 --> 00:06:51,820
the if if successfully inject<font color="#CCCCCC"> a Fault in</font>

146
00:06:47,560 --> 00:06:54,640
<font color="#E5E5E5">any step of the algorithm</font><font color="#CCCCCC"> the degree of</font>

147
00:06:51,820 --> 00:06:57,070
the degree of<font color="#CCCCCC"> this shares should be</font>

148
00:06:54,640 --> 00:06:59,500
always greater than the<font color="#CCCCCC"> greedy in any</font>

149
00:06:57,070 --> 00:07:02,200
step so<font color="#CCCCCC"> that we can do if you would like</font>

150
00:06:59,500 --> 00:07:04,990
<font color="#E5E5E5">to do a fault detection in every step we</font>

151
00:07:02,200 --> 00:07:07,659
<font color="#E5E5E5">should be able to detect the fault and</font>

152
00:07:04,990 --> 00:07:09,790
lastly we<font color="#E5E5E5"> would like to have effective</font>

153
00:07:07,660 --> 00:07:12,300
<font color="#CCCCCC">computation</font><font color="#E5E5E5"> that means if the fault is</font>

154
00:07:09,790 --> 00:07:14,800
injected<font color="#E5E5E5"> when the output is generated</font>

155
00:07:12,300 --> 00:07:16,930
the the<font color="#CCCCCC"> eve should not be able to</font><font color="#E5E5E5"> get</font>

156
00:07:14,800 --> 00:07:20,850
any information<font color="#CCCCCC"> from it and it should</font><font color="#E5E5E5"> be</font>

157
00:07:16,930 --> 00:07:23,620
randomized<font color="#E5E5E5"> so what is our solution and</font>

158
00:07:20,850 --> 00:07:25,510
we introduced our error preserving

159
00:07:23,620 --> 00:07:27,990
multiplication scheme in this case it

160
00:07:25,510 --> 00:07:30,880
<font color="#CCCCCC">start</font><font color="#E5E5E5"> as the same as the</font><font color="#CCCCCC"> previous one</font>

161
00:07:27,990 --> 00:07:34,480
<font color="#E5E5E5">just a reminder</font><font color="#CCCCCC"> in here we have the L</font>

162
00:07:30,880 --> 00:07:37,300
section terms from F and G are<font color="#E5E5E5"> degree</font>

163
00:07:34,480 --> 00:07:41,890
between<font color="#E5E5E5"> D and M and from the H we have</font>

164
00:07:37,300 --> 00:07:44,530
between<font color="#CCCCCC"> 2 D mmm</font><font color="#E5E5E5"> so as I</font><font color="#CCCCCC"> told</font><font color="#E5E5E5"> this start</font>

165
00:07:41,890 --> 00:07:48,400
at the same and we actually update this

166
00:07:44,530 --> 00:07:52,150
<font color="#CCCCCC">qi using some error</font><font color="#E5E5E5"> information from the</font>

167
00:07:48,400 --> 00:07:54,609
F G and<font color="#E5E5E5"> H and in this last step is the</font>

168
00:07:52,150 --> 00:07:56,560
<font color="#E5E5E5">same so what is the our main</font><font color="#CCCCCC"> idea</font>

169
00:07:54,610 --> 00:07:59,710
<font color="#CCCCCC">Maynard is</font><font color="#E5E5E5"> if the fault is injected</font>

170
00:07:56,560 --> 00:08:03,220
again<font color="#CCCCCC"> in propagates until the second</font>

171
00:07:59,710 --> 00:08:05,320
step<font color="#E5E5E5"> and in the third step in</font><font color="#CCCCCC"> the in the</font>

172
00:08:03,220 --> 00:08:09,760
final<font color="#E5E5E5"> step the default should be</font>

173
00:08:05,320 --> 00:08:12,550
propagated into to the<font color="#E5E5E5"> other</font><font color="#CCCCCC"> C's so how</font>

174
00:08:09,760 --> 00:08:14,830
are<font color="#CCCCCC"> we gonna</font><font color="#E5E5E5"> update this</font><font color="#CCCCCC"> Q eyes</font>

175
00:08:12,550 --> 00:08:18,310
initialized<font color="#E5E5E5"> advection terms we actually</font>

176
00:08:14,830 --> 00:08:21,070
<font color="#CCCCCC">define our new variable called a IJ Yeji</font>

177
00:08:18,310 --> 00:08:26,100
it is just a share of<font color="#CCCCCC"> our</font><font color="#E5E5E5"> section term</font>

178
00:08:21,070 --> 00:08:28,659
of<font color="#E5E5E5"> H or F ng so how</font><font color="#CCCCCC"> it is calculated</font>

179
00:08:26,100 --> 00:08:31,000
when<font color="#E5E5E5"> the each player does calculate its</font>

180
00:08:28,660 --> 00:08:34,630
<font color="#E5E5E5">its last chair is their output</font>

181
00:08:31,000 --> 00:08:37,929
inherently when they get get all the

182
00:08:34,630 --> 00:08:40,299
shares and calculate its corresponding

183
00:08:37,929 --> 00:08:43,750
output they actually get one coefficient

184
00:08:40,299 --> 00:08:47,439
<font color="#E5E5E5">from H and one coefficient from or or</font>

185
00:08:43,750 --> 00:08:49,510
<font color="#CCCCCC">one coefficient from G and F so if you</font>

186
00:08:47,440 --> 00:08:52,600
look<font color="#CCCCCC"> to the previous example what we see</font>

187
00:08:49,510 --> 00:08:53,800
is the first year<font color="#E5E5E5"> gets an earth diction</font>

188
00:08:52,600 --> 00:08:56,019
term from<font color="#CCCCCC"> H</font>

189
00:08:53,800 --> 00:09:05,079
and the second chair<font color="#E5E5E5"> gets an error</font>

190
00:08:56,019 --> 00:09:07,689
detection term from FN g<font color="#E5E5E5"> again luckily</font>

191
00:09:05,079 --> 00:09:10,628
so we I have very<font color="#E5E5E5"> theoretical background</font>

192
00:09:07,689 --> 00:09:14,498
for the<font color="#CCCCCC"> tsa security notion thanks for</font>

193
00:09:10,629 --> 00:09:16,089
the previous presentation and we have we

194
00:09:14,499 --> 00:09:17,889
all know that es mi<font color="#CCCCCC"> security notion is a</font>

195
00:09:16,089 --> 00:09:20,499
standard way<font color="#CCCCCC"> of proving secure taking</font>

196
00:09:17,889 --> 00:09:23,350
probing attacks so what we did is we

197
00:09:20,499 --> 00:09:27,040
defined<font color="#E5E5E5"> a we just extend this notion to</font>

198
00:09:23,350 --> 00:09:28,989
a TSN<font color="#E5E5E5"> I and</font><font color="#CCCCCC"> II notion and we</font><font color="#E5E5E5"> actually</font>

199
00:09:27,040 --> 00:09:31,480
show that<font color="#E5E5E5"> T probes and some of the</font><font color="#CCCCCC"> are</font>

200
00:09:28,989 --> 00:09:35,259
<font color="#CCCCCC">teachers is</font><font color="#E5E5E5"> simulate able by the input</font>

201
00:09:31,480 --> 00:09:37,389
<font color="#E5E5E5">chairs and that means in using</font><font color="#CCCCCC"> or the</font>

202
00:09:35,259 --> 00:09:39,819
<font color="#E5E5E5">air preserving multiplication we saw</font>

203
00:09:37,389 --> 00:09:41,799
that he probes being<font color="#E5E5E5"> no informations to</font>

204
00:09:39,819 --> 00:09:45,179
<font color="#E5E5E5">adversity because these shares are all</font>

205
00:09:41,799 --> 00:09:49,299
<font color="#E5E5E5">are already uniformly distributed and</font>

206
00:09:45,179 --> 00:09:51,670
<font color="#E5E5E5">that brings nothing so what about</font><font color="#CCCCCC"> our</font>

207
00:09:49,299 --> 00:09:54,339
fault detection<font color="#E5E5E5"> and we saw</font><font color="#CCCCCC"> that we</font>

208
00:09:51,670 --> 00:09:58,089
defined a new prop notion called<font color="#E5E5E5"> a</font>

209
00:09:54,339 --> 00:10:01,119
propagation<font color="#E5E5E5"> as I told you we just we</font>

210
00:09:58,089 --> 00:10:04,660
just our aim is to<font color="#CCCCCC"> only detect the</font><font color="#E5E5E5"> fault</font>

211
00:10:01,119 --> 00:10:07,689
<font color="#CCCCCC">so this this</font><font color="#E5E5E5"> notion is tasted if the</font>

212
00:10:04,660 --> 00:10:11,049
input is faulty the<font color="#CCCCCC"> output is the</font>

213
00:10:07,689 --> 00:10:13,079
<font color="#CCCCCC">probability of thought is</font><font color="#E5E5E5"> also fault now</font>

214
00:10:11,049 --> 00:10:16,149
if you look into the propagation

215
00:10:13,079 --> 00:10:18,790
propagate of probability of a<font color="#E5E5E5"> finance</font>

216
00:10:16,149 --> 00:10:19,809
squaring operation<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is one however</font>

217
00:10:18,790 --> 00:10:24,699
it's in the addition<font color="#E5E5E5"> and</font><font color="#CCCCCC"> multiplication</font>

218
00:10:19,809 --> 00:10:27,610
is close to<font color="#CCCCCC"> one</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> since we used</font><font color="#E5E5E5"> Aaron</font>

219
00:10:24,699 --> 00:10:30,910
and error propagated and we assume that

220
00:10:27,610 --> 00:10:33,819
we<font color="#CCCCCC"> saw that errors propagated</font><font color="#E5E5E5"> we can</font>

221
00:10:30,910 --> 00:10:36,100
just insert some fault detection

222
00:10:33,819 --> 00:10:38,889
operations<font color="#E5E5E5"> so that this probable to</font>

223
00:10:36,100 --> 00:10:42,399
become one again<font color="#CCCCCC"> so what</font><font color="#E5E5E5"> is the cost of</font>

224
00:10:38,889 --> 00:10:44,529
our operations<font color="#CCCCCC"> and as you can</font><font color="#E5E5E5"> see</font><font color="#CCCCCC"> this</font>

225
00:10:42,399 --> 00:10:46,360
is the the previous<font color="#E5E5E5"> version</font><font color="#CCCCCC"> and this</font><font color="#E5E5E5"> is</font>

226
00:10:44,529 --> 00:10:49,660
our air preserving multiplication scheme

227
00:10:46,360 --> 00:10:52,720
and the<font color="#CCCCCC"> most costly operation is the</font>

228
00:10:49,660 --> 00:10:55,149
second part which is which in<font color="#E5E5E5"> which we</font>

229
00:10:52,720 --> 00:10:59,319
generate some<font color="#E5E5E5"> degree D program</font><font color="#CCCCCC"> learning</font>

230
00:10:55,149 --> 00:11:02,379
and and<font color="#CCCCCC"> an oval-8 is</font><font color="#E5E5E5"> polynomial into</font>

231
00:10:59,319 --> 00:11:04,269
into into other shares so what is the

232
00:11:02,379 --> 00:11:07,329
cost of<font color="#E5E5E5"> our operation is</font><font color="#CCCCCC"> just the</font>

233
00:11:04,269 --> 00:11:11,679
calculation of the e IJ

234
00:11:07,329 --> 00:11:14,649
and so for the example<font color="#E5E5E5"> we we</font><font color="#CCCCCC"> assumed I</font>

235
00:11:11,679 --> 00:11:18,759
would<font color="#E5E5E5"> like to look into the the first</font>

236
00:11:14,649 --> 00:11:22,089
part<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the yes yes box</font><font color="#CCCCCC"> is one of the a</font>

237
00:11:18,759 --> 00:11:24,879
si s box is one<font color="#CCCCCC"> F and transformation and</font>

238
00:11:22,089 --> 00:11:28,149
and and some sequence of multiplication

239
00:11:24,879 --> 00:11:30,819
and securing so what we did<font color="#E5E5E5"> is we</font><font color="#CCCCCC"> just</font>

240
00:11:28,149 --> 00:11:32,679
get the previous<font color="#E5E5E5"> algorithm and we just</font>

241
00:11:30,819 --> 00:11:34,839
change change the multiplication with

242
00:11:32,679 --> 00:11:39,249
<font color="#CCCCCC">their preserving modifications and</font><font color="#E5E5E5"> add</font>

243
00:11:34,839 --> 00:11:40,509
<font color="#CCCCCC">to refreshing mask operations so what</font>

244
00:11:39,249 --> 00:11:43,600
you can do right<font color="#CCCCCC"> now</font>

245
00:11:40,509 --> 00:11:45,910
if you can<font color="#CCCCCC"> just using</font><font color="#E5E5E5"> T props</font><font color="#CCCCCC"> you can</font>

246
00:11:43,600 --> 00:11:48,429
just get<font color="#E5E5E5"> the get the internet variables</font>

247
00:11:45,910 --> 00:11:52,959
<font color="#E5E5E5">but since we prove that our scheme is</font>

248
00:11:48,429 --> 00:11:55,209
<font color="#CCCCCC">security asinine notion we can say that</font>

249
00:11:52,959 --> 00:11:59,729
this<font color="#E5E5E5"> probs will bring no information to</font>

250
00:11:55,209 --> 00:12:02,618
<font color="#CCCCCC">Eve</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> secondly</font><font color="#E5E5E5"> she can just do some</font>

251
00:11:59,730 --> 00:12:05,709
<font color="#CCCCCC">inject some faults and to the inputs or</font>

252
00:12:02,619 --> 00:12:08,110
within the algorithm itself<font color="#E5E5E5"> and we</font>

253
00:12:05,709 --> 00:12:10,209
actually<font color="#E5E5E5"> show that the the in the in the</font>

254
00:12:08,110 --> 00:12:12,879
<font color="#E5E5E5">for one scheme we show that error</font>

255
00:12:10,209 --> 00:12:17,498
propagation after of this algorithm<font color="#CCCCCC"> is</font>

256
00:12:12,879 --> 00:12:20,619
<font color="#CCCCCC">this is this number</font><font color="#E5E5E5"> so in conclusion</font>

257
00:12:17,499 --> 00:12:23,079
what we<font color="#E5E5E5"> did until here we define them a</font>

258
00:12:20,619 --> 00:12:24,819
new multiplication engine which in<font color="#E5E5E5"> which</font>

259
00:12:23,079 --> 00:12:27,219
<font color="#E5E5E5">the information about the fault</font><font color="#CCCCCC"> remains</font>

260
00:12:24,819 --> 00:12:28,959
is a part of the shares and<font color="#CCCCCC"> the error</font>

261
00:12:27,220 --> 00:12:32,230
propagates through the algebraic

262
00:12:28,959 --> 00:12:36,008
operations and so that we<font color="#CCCCCC"> can't</font><font color="#E5E5E5"> delay we</font>

263
00:12:32,230 --> 00:12:37,929
<font color="#CCCCCC">can't delay in our error detection</font><font color="#E5E5E5"> as</font>

264
00:12:36,009 --> 00:12:44,769
late as<font color="#CCCCCC"> day as</font><font color="#E5E5E5"> the final recombination</font>

265
00:12:37,929 --> 00:12:46,629
step so and and we<font color="#E5E5E5"> can use the and also</font>

266
00:12:44,769 --> 00:12:49,600
we defined any fault detection and

267
00:12:46,629 --> 00:12:51,279
recombination gate and for<font color="#E5E5E5"> which we can</font>

268
00:12:49,600 --> 00:12:54,730
do a false detection and<font color="#E5E5E5"> also</font>

269
00:12:51,279 --> 00:12:59,350
recombination and<font color="#E5E5E5"> as I told you we can</font>

270
00:12:54,730 --> 00:13:01,089
just<font color="#E5E5E5"> we can just like</font><font color="#CCCCCC"> we can</font><font color="#E5E5E5"> we can</font><font color="#CCCCCC"> just</font>

271
00:12:59,350 --> 00:13:04,929
inject<font color="#E5E5E5"> or we can just put the fault</font>

272
00:13:01,089 --> 00:13:07,419
detection algorithm in clever way of so

273
00:13:04,929 --> 00:13:09,549
it the fault propagation becomes<font color="#E5E5E5"> one and</font>

274
00:13:07,419 --> 00:13:13,059
we can detect the fault in any step of

275
00:13:09,549 --> 00:13:14,889
the algorithm and also<font color="#CCCCCC"> we using</font>

276
00:13:13,059 --> 00:13:16,419
recombination at<font color="#CCCCCC"> we if the fault is</font>

277
00:13:14,889 --> 00:13:18,509
detectable and the<font color="#CCCCCC"> other until the end</font>

278
00:13:16,419 --> 00:13:21,220
of the end of

279
00:13:18,509 --> 00:13:26,680
<font color="#CCCCCC">algorithm we</font><font color="#E5E5E5"> said that the</font><font color="#CCCCCC"> infective</font>

280
00:13:21,220 --> 00:13:28,389
<font color="#E5E5E5">competition is insured so and also in we</font>

281
00:13:26,680 --> 00:13:31,719
proved our scheme is securing a

282
00:13:28,389 --> 00:13:33,670
<font color="#E5E5E5">stability program model and using the</font>

283
00:13:31,720 --> 00:13:37,300
refreshing<font color="#E5E5E5"> mask operation we we actually</font>

284
00:13:33,670 --> 00:13:40,240
<font color="#E5E5E5">able to increase or extend the security</font>

285
00:13:37,300 --> 00:13:43,689
notion of the previous scheme<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the SLI</font>

286
00:13:40,240 --> 00:13:46,259
notion and we examine<font color="#CCCCCC"> there</font><font color="#E5E5E5"> are analyzed</font>

287
00:13:43,689 --> 00:13:49,389
<font color="#CCCCCC">our fault detection</font>

288
00:13:46,259 --> 00:13:52,300
<font color="#E5E5E5">fault detection probe properties of our</font>

289
00:13:49,389 --> 00:13:55,629
<font color="#E5E5E5">scheme using a new notion called</font>

290
00:13:52,300 --> 00:13:58,569
<font color="#E5E5E5">propagation and also we implement these</font>

291
00:13:55,629 --> 00:14:01,350
algorithms<font color="#CCCCCC"> and in the proof of concept</font>

292
00:13:58,569 --> 00:14:03,910
<font color="#CCCCCC">see</font><font color="#E5E5E5"> implementation a is 1 1 2</font><font color="#CCCCCC"> & 8 on</font>

293
00:14:01,350 --> 00:14:08,050
<font color="#CCCCCC">Australorp our architecture arm cortex-m</font>

294
00:14:03,910 --> 00:14:09,969
<font color="#CCCCCC">m0 and we actually include full leakage</font>

295
00:14:08,050 --> 00:14:13,508
analysis including higher order moments

296
00:14:09,970 --> 00:14:14,949
and we<font color="#CCCCCC"> we show</font><font color="#E5E5E5"> that this is a flow for</font>

297
00:14:13,509 --> 00:14:18,579
the constant execution flow with

298
00:14:14,949 --> 00:14:20,859
constant number accesses and the codes

299
00:14:18,579 --> 00:14:22,529
available<font color="#E5E5E5"> you can just download and play</font>

300
00:14:20,860 --> 00:14:25,949
with it<font color="#E5E5E5"> and we will be</font><font color="#CCCCCC"> very happy and</font>

301
00:14:22,529 --> 00:14:25,949
<font color="#CCCCCC">thank you</font><font color="#E5E5E5"> for listening</font>

302
00:14:28,420 --> 00:14:37,079
[Music]

303
00:14:30,950 --> 00:14:39,480
thanks for the talk questions it's very

304
00:14:37,080 --> 00:14:49,020
<font color="#E5E5E5">soft I tried it over</font><font color="#CCCCCC"> there</font>

305
00:14:39,480 --> 00:14:49,530
a<font color="#CCCCCC"> mono it yeah yeah thank you for the</font>

306
00:14:49,020 --> 00:14:53,329
talk

307
00:14:49,530 --> 00:14:56,250
see seeing<font color="#E5E5E5"> a fort as as a glitch</font>

308
00:14:53,330 --> 00:14:58,950
<font color="#CCCCCC">they're</font><font color="#E5E5E5"> shims</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you could use the</font>

309
00:14:56,250 --> 00:15:02,430
approach<font color="#CCCCCC"> presented in previous Travis</font>

310
00:14:58,950 --> 00:15:06,270
Stork to prove the security<font color="#CCCCCC"> of her first</font>

311
00:15:02,430 --> 00:15:10,380
<font color="#CCCCCC">skill not even in presence of</font><font color="#E5E5E5"> forts and</font>

312
00:15:06,270 --> 00:15:15,840
<font color="#E5E5E5">also using the composability</font><font color="#CCCCCC"> oceans yes</font>

313
00:15:10,380 --> 00:15:18,030
so we we<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> just so</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> previous</font>

314
00:15:15,840 --> 00:15:20,220
<font color="#CCCCCC">scheme is actually</font><font color="#E5E5E5"> just it's proven</font>

315
00:15:18,030 --> 00:15:23,730
typically<font color="#E5E5E5"> tree so what we did is we just</font>

316
00:15:20,220 --> 00:15:25,890
<font color="#E5E5E5">implement some a fault fault preserving</font>

317
00:15:23,730 --> 00:15:29,700
operation to that so<font color="#E5E5E5"> that we</font><font color="#CCCCCC"> can say</font>

318
00:15:25,890 --> 00:15:32,840
<font color="#E5E5E5">that this scheme can</font><font color="#CCCCCC"> be used as a as a</font>

319
00:15:29,700 --> 00:15:42,630
glitch free and also fault preserving<font color="#CCCCCC"> I</font>

320
00:15:32,840 --> 00:15:44,550
<font color="#E5E5E5">understand the</font><font color="#CCCCCC"> question you you you</font>

321
00:15:42,630 --> 00:15:47,610
prove the<font color="#CCCCCC"> note you prove them the</font>

322
00:15:44,550 --> 00:15:50,520
<font color="#E5E5E5">security of</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> your skin</font><font color="#CCCCCC"> no with the</font>

323
00:15:47,610 --> 00:15:52,590
notion of rubbish<font color="#E5E5E5"> of</font><font color="#CCCCCC"> fur business yeah</font>

324
00:15:50,520 --> 00:15:56,069
<font color="#E5E5E5">of propagation mmm</font>

325
00:15:52,590 --> 00:15:58,910
is it a former do you succeed<font color="#E5E5E5"> to proof</font>

326
00:15:56,070 --> 00:16:00,180
<font color="#CCCCCC">firmly that</font><font color="#E5E5E5"> yes yes there's no leakage</font>

327
00:15:58,910 --> 00:16:03,630
yes

328
00:16:00,180 --> 00:16:07,010
so we show that<font color="#E5E5E5"> our</font><font color="#CCCCCC"> our our new</font>

329
00:16:03,630 --> 00:16:11,400
multiplication scheme is TSN I so it's

330
00:16:07,010 --> 00:16:13,770
to be proven against<font color="#E5E5E5"> T</font><font color="#CCCCCC"> probes</font><font color="#E5E5E5"> and since</font>

331
00:16:11,400 --> 00:16:18,810
we and and<font color="#E5E5E5"> we know that the</font><font color="#CCCCCC"> combination</font>

332
00:16:13,770 --> 00:16:20,579
of those operations is can be<font color="#E5E5E5"> used with</font>

333
00:16:18,810 --> 00:16:23,369
of course<font color="#E5E5E5"> using</font><font color="#CCCCCC"> some some some</font>

334
00:16:20,580 --> 00:16:27,990
conditions can<font color="#CCCCCC"> be used for example in</font>

335
00:16:23,370 --> 00:16:30,870
<font color="#E5E5E5">the X</font><font color="#CCCCCC"> X</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> 254 case we show</font><font color="#E5E5E5"> that</font>

336
00:16:27,990 --> 00:16:33,630
actually<font color="#E5E5E5"> this combination of operation</font>

337
00:16:30,870 --> 00:16:37,230
is can be<font color="#E5E5E5"> seen as a security problem</font>

338
00:16:33,630 --> 00:16:41,970
model using using refreshing mask

339
00:16:37,230 --> 00:16:43,950
operations so<font color="#E5E5E5"> we it is not only enough</font>

340
00:16:41,970 --> 00:16:46,470
to solve at the<font color="#CCCCCC"> Indy</font>

341
00:16:43,950 --> 00:16:48,150
operations<font color="#E5E5E5"> RTS</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> life we need</font><font color="#CCCCCC"> to add</font>

342
00:16:46,470 --> 00:16:50,400
some refreshing<font color="#CCCCCC"> operate your facial mask</font>

343
00:16:48,150 --> 00:16:53,459
operation<font color="#E5E5E5"> so that's why we</font><font color="#CCCCCC"> introduce</font><font color="#E5E5E5"> you</font>

344
00:16:50,400 --> 00:16:57,390
<font color="#CCCCCC">first</font><font color="#E5E5E5"> my mask operations and we were</font>

345
00:16:53,460 --> 00:16:59,870
<font color="#CCCCCC">able to theoretically prove that our our</font>

346
00:16:57,390 --> 00:17:05,459
our<font color="#E5E5E5"> scheme is actually securing and</font>

347
00:16:59,870 --> 00:17:17,010
<font color="#CCCCCC">evolving</font><font color="#E5E5E5"> model thank you another</font>

348
00:17:05,459 --> 00:17:20,940
question I have fun

349
00:17:17,010 --> 00:17:23,790
can you go back<font color="#E5E5E5"> to slides I think 17 now</font>

350
00:17:20,940 --> 00:17:25,290
earlier earlier 13<font color="#CCCCCC"> maybe that graph here</font>

351
00:17:23,790 --> 00:17:27,420
so<font color="#E5E5E5"> yeah one down</font><font color="#CCCCCC"> yeah</font>

352
00:17:25,290 --> 00:17:29,220
so why does this<font color="#E5E5E5"> arrow only distribute</font>

353
00:17:27,420 --> 00:17:31,620
into<font color="#E5E5E5"> two parts</font><font color="#CCCCCC"> because it's distributed</font>

354
00:17:29,220 --> 00:17:33,570
<font color="#E5E5E5">everywhere in</font><font color="#CCCCCC"> here so we we look into</font>

355
00:17:31,620 --> 00:17:38,580
the highest<font color="#E5E5E5"> degree terms of the age and</font>

356
00:17:33,570 --> 00:17:41,010
and<font color="#E5E5E5"> the</font><font color="#CCCCCC"> H and the F F F X or G so in</font>

357
00:17:38,580 --> 00:17:44,760
this<font color="#E5E5E5"> case this is a for</font><font color="#CCCCCC"> example for for</font>

358
00:17:41,010 --> 00:17:46,230
one scheme and four for four from H we

359
00:17:44,760 --> 00:17:50,220
<font color="#CCCCCC">only get the highest degree term which</font>

360
00:17:46,230 --> 00:17:51,720
is the H 3 and in the<font color="#E5E5E5"> for the</font><font color="#CCCCCC"> QQ one</font><font color="#E5E5E5"> it</font>

361
00:17:50,220 --> 00:17:57,090
actually gets the error detection term

362
00:17:51,720 --> 00:18:03,560
from the<font color="#CCCCCC"> X or F so</font><font color="#E5E5E5"> that's why it's it's</font>

363
00:17:57,090 --> 00:18:06,570
so we only have<font color="#CCCCCC"> two</font><font color="#E5E5E5"> error section to 0</font>

364
00:18:03,560 --> 00:18:08,580
coefficients<font color="#E5E5E5"> if it's if there is no</font>

365
00:18:06,570 --> 00:18:12,720
fault<font color="#E5E5E5"> so we can only utilize those</font>

366
00:18:08,580 --> 00:18:14,460
coefficients<font color="#E5E5E5"> so that's why only</font><font color="#CCCCCC"> two only</font>

367
00:18:12,720 --> 00:18:20,780
<font color="#CCCCCC">two of them gets</font><font color="#E5E5E5"> it's a faulty</font>

368
00:18:14,460 --> 00:18:20,780
information<font color="#CCCCCC"> okay other</font><font color="#E5E5E5"> questions</font>

369
00:18:24,280 --> 00:18:30,469
[Applause]

370
00:18:26,940 --> 00:18:30,469
[Music]

