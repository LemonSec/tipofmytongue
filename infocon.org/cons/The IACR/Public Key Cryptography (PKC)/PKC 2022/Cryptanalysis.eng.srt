1
00:00:00,080 --> 00:00:02,240
stephen galbraith and i'm the chair

2
00:00:02,240 --> 00:00:04,640
and this is a session with

3
00:00:04,640 --> 00:00:07,680
five papers on cryptanalysis and one

4
00:00:07,680 --> 00:00:09,519
paper on constructions

5
00:00:09,519 --> 00:00:10,320
and

6
00:00:10,320 --> 00:00:12,559
um i'm going to first start off by

7
00:00:12,559 --> 00:00:15,040
sharing this beautiful i'm reminding of

8
00:00:15,040 --> 00:00:16,960
my being reminded of my trips to japan

9
00:00:16,960 --> 00:00:19,119
and this is my beautiful sake cup

10
00:00:19,119 --> 00:00:20,000
from

11
00:00:20,000 --> 00:00:23,359
pkc 2013 which was in japan and it still

12
00:00:23,359 --> 00:00:25,760
still smells delicious but i'm not going

13
00:00:25,760 --> 00:00:28,720
to drink any sake because it's only

14
00:00:28,720 --> 00:00:30,960
1 20 in the afternoon for me

15
00:00:30,960 --> 00:00:33,680
so anyway come by

16
00:00:33,680 --> 00:00:36,160
all right so um

17
00:00:36,160 --> 00:00:37,840
good morning good night

18
00:00:37,840 --> 00:00:38,960
good day

19
00:00:38,960 --> 00:00:40,719
to everybody and uh we'll start with

20
00:00:40,719 --> 00:00:41,920
john peter do you want to share your

21
00:00:41,920 --> 00:00:42,800
slides

22
00:00:42,800 --> 00:00:45,360
yeah let's go and if anyone's got

23
00:00:45,360 --> 00:00:47,760
questions you can put them in the zulu

24
00:00:47,760 --> 00:00:49,600
or in the chat

25
00:00:49,600 --> 00:00:52,320
so are my slides visible yes you can

26
00:00:52,320 --> 00:00:54,800
start so with that obligatory start so

27
00:00:54,800 --> 00:00:56,719
thanks for the introduction and so let's

28
00:00:56,719 --> 00:00:59,520
talk about decryption failure attacks

29
00:00:59,520 --> 00:01:01,520
so first question what are decryption

30
00:01:01,520 --> 00:01:02,879
theory attacks

31
00:01:02,879 --> 00:01:04,720
imagine that we have a public key

32
00:01:04,720 --> 00:01:06,560
encryption scheme so alice sends a

33
00:01:06,560 --> 00:01:08,240
public key to bob

34
00:01:08,240 --> 00:01:10,640
sends a cyber text to alice

35
00:01:10,640 --> 00:01:12,159
and imagine that this public key

36
00:01:12,159 --> 00:01:14,640
encryption scheme has a certain uh

37
00:01:14,640 --> 00:01:16,640
decryption failure probability so this

38
00:01:16,640 --> 00:01:19,119
means that even if we send a perfectly

39
00:01:19,119 --> 00:01:21,200
valid cipher text there is a certain

40
00:01:21,200 --> 00:01:23,200
probability that it cannot be decrypted

41
00:01:23,200 --> 00:01:24,479
correctly

42
00:01:24,479 --> 00:01:26,320
then we can do decryption failure

43
00:01:26,320 --> 00:01:28,000
attacks

44
00:01:28,000 --> 00:01:29,439
and so in this decryption failure

45
00:01:29,439 --> 00:01:31,520
attacks what happens is that an attacker

46
00:01:31,520 --> 00:01:33,759
will send in valid ciphertext so correct

47
00:01:33,759 --> 00:01:35,200
ciphertext

48
00:01:35,200 --> 00:01:38,159
um but this attacker will try to trigger

49
00:01:38,159 --> 00:01:40,720
um decryption failure so it will try to

50
00:01:40,720 --> 00:01:42,960
find scientix that are not decryptable

51
00:01:42,960 --> 00:01:44,399
by alice

52
00:01:44,399 --> 00:01:47,439
um and if the adversary finds such a

53
00:01:47,439 --> 00:01:49,439
cipher text he or she will learn

54
00:01:49,439 --> 00:01:52,000
something about the secret key of alice

55
00:01:52,000 --> 00:01:54,720
and can therefore try to recover this

56
00:01:54,720 --> 00:01:56,560
secretly

57
00:01:56,560 --> 00:01:59,119
so in my online talk in the longer talk

58
00:01:59,119 --> 00:02:01,200
i gave a longer introduction to

59
00:02:01,200 --> 00:02:02,479
decryption failure so if you're

60
00:02:02,479 --> 00:02:05,119
interested in decryption failures please

61
00:02:05,119 --> 00:02:07,040
have a look at this at the the online

62
00:02:07,040 --> 00:02:10,959
talk or um take a look at well our paper

63
00:02:10,959 --> 00:02:12,800
of course or these papers that give a

64
00:02:12,800 --> 00:02:16,000
nice introduction to the field i think

65
00:02:16,000 --> 00:02:18,560
so what we did in our paper was a look

66
00:02:18,560 --> 00:02:21,680
at two things the first one is

67
00:02:21,680 --> 00:02:23,200
to look at

68
00:02:23,200 --> 00:02:25,280
constrained attacks practical attacks

69
00:02:25,280 --> 00:02:27,520
and then secondly to look at what these

70
00:02:27,520 --> 00:02:29,840
attacks actually mean for schemes like

71
00:02:29,840 --> 00:02:33,200
savior and kyber so real world schemes

72
00:02:33,200 --> 00:02:34,879
so let's first look at constrained

73
00:02:34,879 --> 00:02:37,519
attacks and what do i mean with this so

74
00:02:37,519 --> 00:02:39,120
previous attacks

75
00:02:39,120 --> 00:02:41,440
were not always practical so some of

76
00:02:41,440 --> 00:02:43,440
these attacks would you would need to do

77
00:02:43,440 --> 00:02:45,680
two to the 128 self-test squares for

78
00:02:45,680 --> 00:02:46,720
example

79
00:02:46,720 --> 00:02:49,120
and that would be directed at one server

80
00:02:49,120 --> 00:02:51,920
or one iot node and this is more like a

81
00:02:51,920 --> 00:02:54,239
denial of service attack than it is to a

82
00:02:54,239 --> 00:02:57,200
key retrieving uh attack

83
00:02:57,200 --> 00:02:59,440
so one thing that was proposed

84
00:02:59,440 --> 00:03:01,440
previously is to do multi-target attacks

85
00:03:01,440 --> 00:03:03,519
so you spread your queries over multiple

86
00:03:03,519 --> 00:03:04,640
targets

87
00:03:04,640 --> 00:03:07,120
and you retrieve the key of one of these

88
00:03:07,120 --> 00:03:09,519
targets of one random target

89
00:03:09,519 --> 00:03:11,599
so for example you have a maximum of 2

90
00:03:11,599 --> 00:03:14,159
to 64 quiz for one

91
00:03:14,159 --> 00:03:17,040
specific target but you target 264

92
00:03:17,040 --> 00:03:19,760
targets and you want to break

93
00:03:19,760 --> 00:03:22,640
one target at random

94
00:03:22,640 --> 00:03:24,640
so in our paper we introduced the

95
00:03:24,640 --> 00:03:25,840
methods

96
00:03:25,840 --> 00:03:28,159
the leveled multi-target attack that in

97
00:03:28,159 --> 00:03:30,640
some cases actually improves on the

98
00:03:30,640 --> 00:03:32,799
previous attacks by doing more

99
00:03:32,799 --> 00:03:34,480
pre-processing work more work in the

100
00:03:34,480 --> 00:03:37,200
first stage and then reduce the work in

101
00:03:37,200 --> 00:03:40,000
the second stage

102
00:03:40,000 --> 00:03:41,760
so second thing that we looked at was

103
00:03:41,760 --> 00:03:44,000
improving the cost estimation

104
00:03:44,000 --> 00:03:46,640
so the the theory of decryption failures

105
00:03:46,640 --> 00:03:49,360
is in essence rather simple but if you

106
00:03:49,360 --> 00:03:51,360
want to then cost is so if you want to

107
00:03:51,360 --> 00:03:53,360
know what the cost is of these attacks

108
00:03:53,360 --> 00:03:55,120
these calculations are really expensive

109
00:03:55,120 --> 00:03:56,879
really hard to do and you need to do

110
00:03:56,879 --> 00:03:59,519
approximation simplifications and so in

111
00:03:59,519 --> 00:04:01,920
our paper in in our paper we revisited

112
00:04:01,920 --> 00:04:04,000
some of these approximations some of

113
00:04:04,000 --> 00:04:06,000
these simplifications so we looked at

114
00:04:06,000 --> 00:04:08,319
for example we keys worse than expected

115
00:04:08,319 --> 00:04:11,280
angle we took into account a lot more to

116
00:04:11,280 --> 00:04:13,280
try to get a better estimation of the

117
00:04:13,280 --> 00:04:16,238
cost of these attacks

118
00:04:16,478 --> 00:04:18,880
also we looked specifically at gybrian

119
00:04:18,880 --> 00:04:21,199
sabre so in our previous work in in our

120
00:04:21,199 --> 00:04:24,000
eurocrypt work we actually

121
00:04:24,000 --> 00:04:26,840
worked on a simplified scheme

122
00:04:26,840 --> 00:04:30,960
katana uh we call it katana here um and

123
00:04:30,960 --> 00:04:33,199
we made some simplifications to make it

124
00:04:33,199 --> 00:04:36,800
easier uh to do this cost estimation

125
00:04:36,800 --> 00:04:39,120
and in this work we look at models that

126
00:04:39,120 --> 00:04:41,600
can also obtain estimates for sabring

127
00:04:41,600 --> 00:04:42,960
kyber

128
00:04:42,960 --> 00:04:44,800
as you can see in this figures there's

129
00:04:44,800 --> 00:04:46,320
actually a big difference so the blue

130
00:04:46,320 --> 00:04:48,320
curve is what you would have with this

131
00:04:48,320 --> 00:04:50,080
simplified model from

132
00:04:50,080 --> 00:04:52,960
previous papers and the orange model is

133
00:04:52,960 --> 00:04:54,479
a new model and you can see that there's

134
00:04:54,479 --> 00:04:56,880
really like a 20 or 30 bit difference

135
00:04:56,880 --> 00:04:59,280
between the models and

136
00:04:59,280 --> 00:05:01,199
the old model is actually really not

137
00:05:01,199 --> 00:05:04,560
accurate for these for sabring but for

138
00:05:04,560 --> 00:05:06,880
practical schemes so it was correct for

139
00:05:06,880 --> 00:05:08,479
this

140
00:05:08,479 --> 00:05:10,320
katana simplified scheme but not correct

141
00:05:10,320 --> 00:05:12,320
for sabringer and we corrected that in

142
00:05:12,320 --> 00:05:14,320
our paper

143
00:05:14,320 --> 00:05:16,800
so we have a lot of numbers and results

144
00:05:16,800 --> 00:05:18,720
if you want to understand these numbers

145
00:05:18,720 --> 00:05:20,479
understand this table i would recommend

146
00:05:20,479 --> 00:05:21,680
you to read

147
00:05:21,680 --> 00:05:23,759
the paper especially in the last part we

148
00:05:23,759 --> 00:05:26,240
really try to explain

149
00:05:26,240 --> 00:05:27,680
the attacks in detail or the effects of

150
00:05:27,680 --> 00:05:29,120
the attacks in detail

151
00:05:29,120 --> 00:05:31,520
but as a conclusion if you want to do

152
00:05:31,520 --> 00:05:34,240
an estimation of a scheme if you want to

153
00:05:34,240 --> 00:05:35,039
do

154
00:05:35,039 --> 00:05:37,520
failure boosting attack cost estimations

155
00:05:37,520 --> 00:05:39,680
please your use our newest code it's

156
00:05:39,680 --> 00:05:40,720
it's more

157
00:05:40,720 --> 00:05:43,520
accurate um it is better code so you can

158
00:05:43,520 --> 00:05:44,800
find it here

159
00:05:44,800 --> 00:05:45,840
um

160
00:05:45,840 --> 00:05:47,919
and then secondly what is the impact on

161
00:05:47,919 --> 00:05:49,039
the schemes

162
00:05:49,039 --> 00:05:50,720
so if we look at single target attack

163
00:05:50,720 --> 00:05:52,560
like classical attack where you want to

164
00:05:52,560 --> 00:05:55,440
target one um

165
00:05:55,440 --> 00:05:57,360
one note

166
00:05:57,360 --> 00:05:59,680
then clearly these attacks are not

167
00:05:59,680 --> 00:06:01,680
possible on any of the nist's

168
00:06:01,680 --> 00:06:03,520
submissions

169
00:06:03,520 --> 00:06:06,000
if you do this multi-target attacks

170
00:06:06,000 --> 00:06:08,319
theoretically in in very extreme cases

171
00:06:08,319 --> 00:06:09,680
where you're very relaxed on the

172
00:06:09,680 --> 00:06:11,919
conditions you can have a smaller

173
00:06:11,919 --> 00:06:14,319
security reduction but in practice these

174
00:06:14,319 --> 00:06:15,759
attacks are really not efficient you

175
00:06:15,759 --> 00:06:18,080
need like very relaxed

176
00:06:18,080 --> 00:06:20,160
security constraints so in practice

177
00:06:20,160 --> 00:06:22,240
these attacks um

178
00:06:22,240 --> 00:06:25,680
are not better than than direct lattice

179
00:06:25,680 --> 00:06:28,479
attacks on the lattice

180
00:06:28,479 --> 00:06:30,960
so interesting future work well we have

181
00:06:30,960 --> 00:06:32,479
this framework we did it for sabre and

182
00:06:32,479 --> 00:06:34,400
kyber but what happens if we try to

183
00:06:34,400 --> 00:06:36,800
apply to frodo what happens if we try to

184
00:06:36,800 --> 00:06:38,240
apply it to schemes with error

185
00:06:38,240 --> 00:06:40,000
correcting codes or maybe code based

186
00:06:40,000 --> 00:06:41,360
crypto

187
00:06:41,360 --> 00:06:42,720
and also from the other side what

188
00:06:42,720 --> 00:06:44,479
happens if we try to improve the

189
00:06:44,479 --> 00:06:46,080
security bound so not from an attack

190
00:06:46,080 --> 00:06:48,639
side but from the security side can we

191
00:06:48,639 --> 00:06:51,280
improve our security proofs

192
00:06:51,280 --> 00:06:53,680
and with that i'm open to

193
00:06:53,680 --> 00:06:55,680
our questions

194
00:06:55,680 --> 00:06:57,440
thanks very much young peter for your

195
00:06:57,440 --> 00:06:58,319
talk

196
00:06:58,319 --> 00:06:59,280
um

197
00:06:59,280 --> 00:07:02,080
so if anyone's got questions they can

198
00:07:02,080 --> 00:07:04,319
raise hand or or put them in the chat or

199
00:07:04,319 --> 00:07:05,599
the zulub

200
00:07:05,599 --> 00:07:08,240
there was the question in the chat

201
00:07:08,240 --> 00:07:09,039
um

202
00:07:09,039 --> 00:07:10,880
quite a while ago

203
00:07:10,880 --> 00:07:11,759
about

204
00:07:11,759 --> 00:07:13,440
says i guess the situation is the same

205
00:07:13,440 --> 00:07:15,680
as the ncca case i'm not exactly sure

206
00:07:15,680 --> 00:07:18,000
what is the question but i mean this

207
00:07:18,000 --> 00:07:19,599
work is very much in the setting of

208
00:07:19,599 --> 00:07:22,080
where there's a uh some kind of

209
00:07:22,080 --> 00:07:22,960
um

210
00:07:22,960 --> 00:07:25,120
fujisaki okamoto being used right you're

211
00:07:25,120 --> 00:07:27,599
really talking about

212
00:07:27,599 --> 00:07:28,800
attacks in the setting where there's

213
00:07:28,800 --> 00:07:30,160
already some kind of protection against

214
00:07:30,160 --> 00:07:32,639
adaptive attacks yes yes yes so if you

215
00:07:32,639 --> 00:07:34,080
don't have uh

216
00:07:34,080 --> 00:07:37,199
um protection against uh active attacks

217
00:07:37,199 --> 00:07:39,520
like uh chosen ciphertext attacks then

218
00:07:39,520 --> 00:07:41,520
you would never do this because there's

219
00:07:41,520 --> 00:07:43,360
much easier attacks out there that's

220
00:07:43,360 --> 00:07:44,960
that's correct

221
00:07:44,960 --> 00:07:47,199
yeah so hopefully that answers

222
00:07:47,199 --> 00:07:51,039
the question from kitagawa

223
00:07:52,160 --> 00:07:54,000
the question

224
00:07:54,000 --> 00:07:55,919
if no one else has a question

225
00:07:55,919 --> 00:07:57,680
i was curious about

226
00:07:57,680 --> 00:07:59,599
one thing um

227
00:07:59,599 --> 00:08:00,560
i mean i've looked at some of your

228
00:08:00,560 --> 00:08:02,400
papers before and the

229
00:08:02,400 --> 00:08:05,360
the if i understand the failure boosting

230
00:08:05,360 --> 00:08:06,720
the kind of philosophy of failure

231
00:08:06,720 --> 00:08:08,879
boosting is that once you get once you

232
00:08:08,879 --> 00:08:11,360
get one

233
00:08:11,599 --> 00:08:13,120
choice of matrix that has a high

234
00:08:13,120 --> 00:08:15,840
probability of causing a failure you try

235
00:08:15,840 --> 00:08:18,080
and you try and generate more examples

236
00:08:18,080 --> 00:08:19,919
that are kind of

237
00:08:19,919 --> 00:08:21,599
uh pointing in the same direction or

238
00:08:21,599 --> 00:08:23,360
they they you're sort of using that

239
00:08:23,360 --> 00:08:25,199
information about the existing failure

240
00:08:25,199 --> 00:08:28,080
to to create to create further failures

241
00:08:28,080 --> 00:08:30,080
this is in the pre-computation

242
00:08:30,080 --> 00:08:32,399
and i was wondering if you thought about

243
00:08:32,399 --> 00:08:34,719
what that actually means for the

244
00:08:34,719 --> 00:08:36,159
key recovery

245
00:08:36,159 --> 00:08:37,919
later on because

246
00:08:37,919 --> 00:08:39,519
it wasn't clear to me for the for the

247
00:08:39,519 --> 00:08:40,880
actual key record once you have a lot of

248
00:08:40,880 --> 00:08:42,719
failures you then want to try and learn

249
00:08:42,719 --> 00:08:47,040
something about the secret right and um

250
00:08:47,040 --> 00:08:48,640
is it is there could there be an issue

251
00:08:48,640 --> 00:08:50,320
there if the failures were all somehow

252
00:08:50,320 --> 00:08:51,760
too correlated would you really be able

253
00:08:51,760 --> 00:08:53,040
to get enough information to learn the

254
00:08:53,040 --> 00:08:55,680
whole secret yeah this is this is very

255
00:08:55,680 --> 00:08:57,839
interesting question um

256
00:08:57,839 --> 00:08:58,800
so

257
00:08:58,800 --> 00:09:01,279
indeed and so this is something that we

258
00:09:01,279 --> 00:09:03,839
try to take away a bit in this work um

259
00:09:03,839 --> 00:09:06,000
is indeed if you start to do failure

260
00:09:06,000 --> 00:09:08,640
boosting so you are going to find

261
00:09:08,640 --> 00:09:10,720
information that you already have kind

262
00:09:10,720 --> 00:09:12,880
of so you'll find more redundant

263
00:09:12,880 --> 00:09:14,959
information than than

264
00:09:14,959 --> 00:09:16,320
if you don't

265
00:09:16,320 --> 00:09:17,279
um

266
00:09:17,279 --> 00:09:20,480
so we think and this is a previous paper

267
00:09:20,480 --> 00:09:23,040
in in our previous paper together with

268
00:09:23,040 --> 00:09:24,000
uh

269
00:09:24,000 --> 00:09:27,519
melissa rossi and fernando velia um

270
00:09:27,519 --> 00:09:29,360
we we did some experiments and we think

271
00:09:29,360 --> 00:09:32,560
that this is not too much of a problem

272
00:09:32,560 --> 00:09:34,000
for the attack

273
00:09:34,000 --> 00:09:34,720
but

274
00:09:34,720 --> 00:09:36,959
yeah we we never tried it like

275
00:09:36,959 --> 00:09:38,640
completely or tested this because it's

276
00:09:38,640 --> 00:09:41,040
really hard to actually

277
00:09:41,040 --> 00:09:42,720
create a scenario where you can test

278
00:09:42,720 --> 00:09:44,880
this so uh it's it's an interesting

279
00:09:44,880 --> 00:09:48,080
question i think yeah

280
00:09:48,080 --> 00:09:50,320
great thank you that's about the time i

281
00:09:50,320 --> 00:09:52,080
think so unless there's anything urgent

282
00:09:52,080 --> 00:09:53,680
um

283
00:09:53,680 --> 00:09:56,880
or that i've missed anything

284
00:09:57,279 --> 00:09:59,680
i don't see anything else so um thank

285
00:09:59,680 --> 00:10:02,320
you again peter for the virtual applause

286
00:10:02,320 --> 00:10:04,079
um now i'm not sure if we have the next

287
00:10:04,079 --> 00:10:07,920
speaker is this on here

288
00:10:11,200 --> 00:10:12,640
i don't see

289
00:10:12,640 --> 00:10:15,279
anything in the call that looks like

290
00:10:15,279 --> 00:10:18,480
it could be

291
00:10:18,480 --> 00:10:20,800
him

292
00:10:23,440 --> 00:10:25,440
so

293
00:10:25,440 --> 00:10:28,000
i propose in that case we move ahead to

294
00:10:28,000 --> 00:10:29,279
the third

295
00:10:29,279 --> 00:10:30,399
talk

296
00:10:30,399 --> 00:10:31,920
this means that this will in fact be a

297
00:10:31,920 --> 00:10:33,839
session on cryptanalysis

298
00:10:33,839 --> 00:10:34,800
um

299
00:10:34,800 --> 00:10:35,839
so

300
00:10:35,839 --> 00:10:40,079
i think pierreck do you want to set up

301
00:10:40,240 --> 00:10:41,760
great

302
00:10:41,760 --> 00:10:44,760
um

303
00:10:48,480 --> 00:10:49,440
um

304
00:10:49,440 --> 00:10:50,399
so

305
00:10:50,399 --> 00:10:52,880
hello everyone uh

306
00:10:52,880 --> 00:10:56,959
can everyone see my slides

307
00:10:56,959 --> 00:10:58,800
yep that's good it's a it's not quite

308
00:10:58,800 --> 00:11:00,560
the full screen do you want to put it in

309
00:11:00,560 --> 00:11:05,279
presentation mode okay okay um

310
00:11:11,600 --> 00:11:14,560
hope this works better this way it's the

311
00:11:14,560 --> 00:11:17,279
same but i think it's okay

312
00:11:17,279 --> 00:11:18,240
ah

313
00:11:18,240 --> 00:11:22,240
okay um that's unfortunate okay well

314
00:11:22,240 --> 00:11:26,000
okay but uh do you do you see it clearly

315
00:11:26,000 --> 00:11:28,160
i think it's good enough yeah okay yeah

316
00:11:28,160 --> 00:11:30,399
please please begin

317
00:11:30,399 --> 00:11:31,200
so

318
00:11:31,200 --> 00:11:34,160
thank you everybody uh today i will uh

319
00:11:34,160 --> 00:11:36,800
talk about uh the security analysis of

320
00:11:36,800 --> 00:11:38,959
oriented super sangular isogeny divi

321
00:11:38,959 --> 00:11:42,320
hellman due to leonardo colo and david

322
00:11:42,320 --> 00:11:44,959
kohl this protocol is based on

323
00:11:44,959 --> 00:11:47,920
cryptographic group actions so let's

324
00:11:47,920 --> 00:11:50,079
briefly recall what it is

325
00:11:50,079 --> 00:11:52,560
to be cryptographic group action needs

326
00:11:52,560 --> 00:11:55,760
to be a billion transitive and faithful

327
00:11:55,760 --> 00:11:58,880
but also easy to compute and one way for

328
00:11:58,880 --> 00:12:00,720
security reasons

329
00:12:00,720 --> 00:12:03,600
meaning that if you have x and y that

330
00:12:03,600 --> 00:12:06,160
you know on the ideal

331
00:12:06,160 --> 00:12:09,279
on the group action space and the group

332
00:12:09,279 --> 00:12:12,240
elements relating them that is unknown g

333
00:12:12,240 --> 00:12:14,959
then g is hard to find

334
00:12:14,959 --> 00:12:17,440
so with this we can perform a difficult

335
00:12:17,440 --> 00:12:19,519
monkey exchange by fixing a public

336
00:12:19,519 --> 00:12:22,880
parameter s0 in the space and then alice

337
00:12:22,880 --> 00:12:26,240
and bob will select secret yeah sorry

338
00:12:26,240 --> 00:12:28,160
we're still seeing the title slide so

339
00:12:28,160 --> 00:12:29,440
are you are you moving through the

340
00:12:29,440 --> 00:12:30,959
slides now

341
00:12:30,959 --> 00:12:33,440
uh yes um

342
00:12:33,440 --> 00:12:35,519
well okay we're only seeing the title

343
00:12:35,519 --> 00:12:38,000
well i i'm sorry so i i i really feel

344
00:12:38,000 --> 00:12:40,079
like you should share your desktop and

345
00:12:40,079 --> 00:12:44,399
not only is a superior viewer

346
00:12:44,560 --> 00:12:48,079
so uh i'm i'm i'm sharing my desktop and

347
00:12:48,079 --> 00:12:51,440
not and not my pdf okay

348
00:12:51,440 --> 00:12:53,920
so that was not what what i intended to

349
00:12:53,920 --> 00:12:55,120
do

350
00:12:55,120 --> 00:12:55,810
um

351
00:12:55,810 --> 00:12:58,079
[Music]

352
00:12:58,079 --> 00:13:00,239
well

353
00:13:02,160 --> 00:13:03,040
uh

354
00:13:03,040 --> 00:13:06,560
do you see a new slide now

355
00:13:06,560 --> 00:13:08,000
yes we do

356
00:13:08,000 --> 00:13:09,680
okay

357
00:13:09,680 --> 00:13:11,680
thank you uh sorry for those uh

358
00:13:11,680 --> 00:13:13,440
technical problems

359
00:13:13,440 --> 00:13:15,680
so uh do i move on

360
00:13:15,680 --> 00:13:18,880
uh are you seeing changes it's good no

361
00:13:18,880 --> 00:13:20,800
okay okay perfect

362
00:13:20,800 --> 00:13:24,639
um so uh as as i said um

363
00:13:24,639 --> 00:13:26,800
uh you you have crypto we have a

364
00:13:26,800 --> 00:13:28,800
cryptographic group action with this uh

365
00:13:28,800 --> 00:13:31,600
we perform a difficult monkey exchange

366
00:13:31,600 --> 00:13:34,079
uh by fixing a public

367
00:13:34,079 --> 00:13:35,519
space element

368
00:13:35,519 --> 00:13:38,240
and alice and bob can choose a separate

369
00:13:38,240 --> 00:13:40,639
secret group elements

370
00:13:40,639 --> 00:13:43,680
perform a group computer a group action

371
00:13:43,680 --> 00:13:47,120
on this public element exchange the data

372
00:13:47,120 --> 00:13:50,079
they computed and act with their secret

373
00:13:50,079 --> 00:13:52,800
on the exchange data to recover the

374
00:13:52,800 --> 00:13:54,399
shared secret key

375
00:13:54,399 --> 00:13:55,600
gh

376
00:13:55,600 --> 00:13:57,279
x 0.

377
00:13:57,279 --> 00:14:00,000
this will work because the group is a

378
00:14:00,000 --> 00:14:01,680
billion and

379
00:14:01,680 --> 00:14:03,839
will be secure because

380
00:14:03,839 --> 00:14:05,680
the uh

381
00:14:05,680 --> 00:14:07,920
group action is one way

382
00:14:07,920 --> 00:14:10,959
so how do we does the truck for our side

383
00:14:10,959 --> 00:14:12,639
for all side

384
00:14:12,639 --> 00:14:13,760
we

385
00:14:13,760 --> 00:14:16,240
act with the the ideal class group of a

386
00:14:16,240 --> 00:14:19,360
quadratic imaginary order the space will

387
00:14:19,360 --> 00:14:21,760
be the space of oriented uh super

388
00:14:21,760 --> 00:14:24,399
singular elliptic curves and the group

389
00:14:24,399 --> 00:14:27,199
action will be given by a correspondence

390
00:14:27,199 --> 00:14:29,920
between ideal classes and isogenes

391
00:14:29,920 --> 00:14:32,880
between those oriented elliptic curves

392
00:14:32,880 --> 00:14:37,120
concretely to compute the group action

393
00:14:37,120 --> 00:14:38,720
rework in the

394
00:14:38,720 --> 00:14:41,120
l isogenic graph

395
00:14:41,120 --> 00:14:45,199
which has a structure of a volcano

396
00:14:45,199 --> 00:14:48,399
each level of the volcano

397
00:14:48,399 --> 00:14:50,880
is given by an orientation

398
00:14:50,880 --> 00:14:52,800
of an order

399
00:14:52,800 --> 00:14:55,440
appearing here and

400
00:14:55,440 --> 00:14:57,199
meaning that

401
00:14:57,199 --> 00:14:59,120
every level

402
00:14:59,120 --> 00:15:02,240
is actually a space for an ideal class

403
00:15:02,240 --> 00:15:04,320
group action

404
00:15:04,320 --> 00:15:06,880
the crater for instance is oriented by

405
00:15:06,880 --> 00:15:09,199
the maximal order and

406
00:15:09,199 --> 00:15:11,600
at level n

407
00:15:11,600 --> 00:15:13,760
we are oriented by the order of

408
00:15:13,760 --> 00:15:16,320
conductor l to the n

409
00:15:16,320 --> 00:15:20,560
and as we go uh deeper in the graph

410
00:15:20,560 --> 00:15:24,560
the level size grows exponentially so we

411
00:15:24,560 --> 00:15:26,880
need to just go deep enough to ensure

412
00:15:26,880 --> 00:15:30,240
security of the protocol

413
00:15:30,240 --> 00:15:32,000
let's say that

414
00:15:32,000 --> 00:15:34,639
we act at level n

415
00:15:34,639 --> 00:15:36,560
and uh we want to compute the group

416
00:15:36,560 --> 00:15:40,560
action of an ideal a on e n then we use

417
00:15:40,560 --> 00:15:42,480
the structure of the graph to represent

418
00:15:42,480 --> 00:15:45,839
e n as a descending l isogeny chain

419
00:15:45,839 --> 00:15:49,839
and act with a on a every level

420
00:15:49,839 --> 00:15:51,920
going down the graph

421
00:15:51,920 --> 00:15:53,759
and the result will be another

422
00:15:53,759 --> 00:15:56,880
descending lysogenic chain whose ending

423
00:15:56,880 --> 00:15:59,279
element is the group action that we

424
00:15:59,279 --> 00:16:02,079
wanted to compute in the first place

425
00:16:02,079 --> 00:16:05,440
but this works only with ideas of short

426
00:16:05,440 --> 00:16:06,560
norms

427
00:16:06,560 --> 00:16:09,040
this computation that i presented so we

428
00:16:09,040 --> 00:16:10,959
fix a bunch of them

429
00:16:10,959 --> 00:16:13,920
that generate the ideal class group

430
00:16:13,920 --> 00:16:17,199
and we act by product of them

431
00:16:17,199 --> 00:16:18,959
in the protocol

432
00:16:18,959 --> 00:16:22,000
then it would be natural just to use

433
00:16:22,000 --> 00:16:25,759
this bunch of ideas of course and

434
00:16:25,759 --> 00:16:28,320
descending allies of jenny chains

435
00:16:28,320 --> 00:16:31,440
and alice and bob will would exchange

436
00:16:31,440 --> 00:16:33,839
such chains so it would be the normal

437
00:16:33,839 --> 00:16:36,720
difficult protocol but the problem is

438
00:16:36,720 --> 00:16:40,160
that this approach is insecure because

439
00:16:40,160 --> 00:16:41,920
let's say that

440
00:16:41,920 --> 00:16:43,839
we study alice

441
00:16:43,839 --> 00:16:45,519
exchange

442
00:16:45,519 --> 00:16:47,199
the attacker knows

443
00:16:47,199 --> 00:16:48,560
the public

444
00:16:48,560 --> 00:16:51,839
chain and a chain alice sent to bob then

445
00:16:51,839 --> 00:16:54,240
he would be able to recover the secret

446
00:16:54,240 --> 00:16:56,560
ideal class relating

447
00:16:56,560 --> 00:17:00,000
those two chains by simply going down

448
00:17:00,000 --> 00:17:01,199
the graph

449
00:17:01,199 --> 00:17:04,720
level by level to recover the ideal

450
00:17:04,720 --> 00:17:06,720
class

451
00:17:06,720 --> 00:17:08,959
level by level until recovering the

452
00:17:08,959 --> 00:17:10,400
ideal class

453
00:17:10,400 --> 00:17:13,119
in the ideal class group of o n

454
00:17:13,119 --> 00:17:14,079
so

455
00:17:14,079 --> 00:17:17,039
an attacker will be able to break

456
00:17:17,039 --> 00:17:20,240
the such a protocol so the trick uh

457
00:17:20,240 --> 00:17:23,439
introduced by kolo and kohel is

458
00:17:23,439 --> 00:17:27,199
not to use uh not to exchange the whole

459
00:17:27,199 --> 00:17:30,720
chains but instead only vertical uh

460
00:17:30,720 --> 00:17:32,640
information

461
00:17:32,640 --> 00:17:33,919
given by

462
00:17:33,919 --> 00:17:37,039
the group action of the qj the

463
00:17:37,039 --> 00:17:39,760
generators that we have on the ending

464
00:17:39,760 --> 00:17:42,480
element of the chains

465
00:17:42,480 --> 00:17:45,679
but this is not enough to make outside

466
00:17:45,679 --> 00:17:48,240
actually because with those horizontal

467
00:17:48,240 --> 00:17:51,679
chains we are able to recover the whole

468
00:17:51,679 --> 00:17:54,799
descending l isogeny chain

469
00:17:54,799 --> 00:17:56,160
why because

470
00:17:56,160 --> 00:17:58,880
this could be leveraged to find a cycle

471
00:17:58,880 --> 00:18:02,799
in the level n of the graph

472
00:18:02,799 --> 00:18:04,640
and this cycle

473
00:18:04,640 --> 00:18:07,760
could be used to recover the element of

474
00:18:07,760 --> 00:18:10,640
level n minus 1 in the chain

475
00:18:10,640 --> 00:18:11,520
then

476
00:18:11,520 --> 00:18:12,480
we could

477
00:18:12,480 --> 00:18:14,960
just push the information that we have

478
00:18:14,960 --> 00:18:18,640
at level n to level 8 minus 1 to recover

479
00:18:18,640 --> 00:18:22,400
again a cycle go to level n minus 2 and

480
00:18:22,400 --> 00:18:25,039
like this we cover the whole chain

481
00:18:25,039 --> 00:18:28,080
the question is now how can we find such

482
00:18:28,080 --> 00:18:31,280
a cycle we just have to compute the

483
00:18:31,280 --> 00:18:32,559
group action

484
00:18:32,559 --> 00:18:34,799
by a principle

485
00:18:34,799 --> 00:18:37,120
ideal because this will give an

486
00:18:37,120 --> 00:18:40,320
endomorphism which is actually a cycle

487
00:18:40,320 --> 00:18:42,720
and to be simple to compute this group

488
00:18:42,720 --> 00:18:45,200
action by a principal ideal would need

489
00:18:45,200 --> 00:18:47,520
to be in the right form meaning a

490
00:18:47,520 --> 00:18:50,720
product of the qj with small exponents

491
00:18:50,720 --> 00:18:53,520
so what we do to find such an ideal is

492
00:18:53,520 --> 00:18:55,919
that we look for short vectors in the

493
00:18:55,919 --> 00:18:58,559
relation lattice of the ideal class

494
00:18:58,559 --> 00:19:00,400
group

495
00:19:00,400 --> 00:19:01,200
and

496
00:19:01,200 --> 00:19:03,919
so our attack is of course exponential

497
00:19:03,919 --> 00:19:05,840
because we have a lattice reduction to

498
00:19:05,840 --> 00:19:08,480
perform but it's efficient enough to

499
00:19:08,480 --> 00:19:11,840
break colo and kohl's parameters

500
00:19:11,840 --> 00:19:14,640
and the countermeasures existing uh to

501
00:19:14,640 --> 00:19:17,440
our attack slow the protocol excessively

502
00:19:17,440 --> 00:19:20,080
so made it make it impractical

503
00:19:20,080 --> 00:19:22,559
or hamper its functionality because we

504
00:19:22,559 --> 00:19:24,960
no longer have a cryptographic group

505
00:19:24,960 --> 00:19:27,200
action

506
00:19:27,200 --> 00:19:29,039
thank you for your attention now i'm

507
00:19:29,039 --> 00:19:31,360
ready for your questions thanks thanks

508
00:19:31,360 --> 00:19:33,200
pierreck um

509
00:19:33,200 --> 00:19:35,280
the time is is going quite quickly

510
00:19:35,280 --> 00:19:37,520
though i'm aware that we kind of have 10

511
00:19:37,520 --> 00:19:39,840
potentially 10 minutes there um anyway

512
00:19:39,840 --> 00:19:41,760
so i think it's a cool paper and it's

513
00:19:41,760 --> 00:19:44,880
really nice to see a lattice attack on a

514
00:19:44,880 --> 00:19:46,160
isogeny

515
00:19:46,160 --> 00:19:47,520
it's like almost like a pure lattice

516
00:19:47,520 --> 00:19:49,360
attack against an isotonic cryptosystem

517
00:19:49,360 --> 00:19:52,080
so i like it

518
00:19:52,080 --> 00:19:54,880
any questions at all from anybody

519
00:19:54,880 --> 00:19:57,440
so may i ask a question

520
00:19:57,440 --> 00:19:59,600
yes please also

521
00:19:59,600 --> 00:20:01,600
thank you for nice crash color attack

522
00:20:01,600 --> 00:20:03,039
but

523
00:20:03,039 --> 00:20:05,120
if you compare a

524
00:20:05,120 --> 00:20:08,720
quantum sub exponential attack for

525
00:20:08,720 --> 00:20:11,360
cryptographic group action so

526
00:20:11,360 --> 00:20:14,080
you have some comment for the

527
00:20:14,080 --> 00:20:16,640
comparison

528
00:20:16,640 --> 00:20:17,600
problem

529
00:20:17,600 --> 00:20:22,080
with your classical attack um so um yeah

530
00:20:22,080 --> 00:20:24,240
yes our approach is classical you mean

531
00:20:24,240 --> 00:20:27,039
uh do we have a comparison uh with

532
00:20:27,039 --> 00:20:30,000
quantum attacks or ideas yeah so some

533
00:20:30,000 --> 00:20:31,120
some

534
00:20:31,120 --> 00:20:32,080
if

535
00:20:32,080 --> 00:20:34,400
compared with such sub-exponential

536
00:20:34,400 --> 00:20:35,760
attack

537
00:20:35,760 --> 00:20:38,159
how trade-off

538
00:20:38,159 --> 00:20:42,240
for size parameter you have some comment

539
00:20:42,240 --> 00:20:45,360
um well we did not

540
00:20:45,360 --> 00:20:49,840
actually study uh like

541
00:20:49,840 --> 00:20:52,240
quantum attacks like uh

542
00:20:52,240 --> 00:20:54,720
hidden subgroups or

543
00:20:54,720 --> 00:20:57,840
or those those kind of attacks

544
00:20:57,840 --> 00:20:59,120
but

545
00:20:59,120 --> 00:21:02,320
of course we are aware that uh we we

546
00:21:02,320 --> 00:21:04,799
could have a interesting complexity

547
00:21:04,799 --> 00:21:06,480
properties because

548
00:21:06,480 --> 00:21:08,679
we would have a uh

549
00:21:08,679 --> 00:21:11,679
sub-exponential uh complexity

550
00:21:11,679 --> 00:21:12,640
um

551
00:21:12,640 --> 00:21:15,120
well of course this these attacks are

552
00:21:15,120 --> 00:21:17,280
not practical because we could not

553
00:21:17,280 --> 00:21:19,679
implement them since we do not have a

554
00:21:19,679 --> 00:21:21,440
quantum computer

555
00:21:21,440 --> 00:21:24,480
but and we wanted an implementation but

556
00:21:24,480 --> 00:21:27,600
uh what is interesting is that um

557
00:21:27,600 --> 00:21:30,640
related to our counter-measure one of

558
00:21:30,640 --> 00:21:31,840
them

559
00:21:31,840 --> 00:21:34,399
actually

560
00:21:34,480 --> 00:21:35,679
prevents

561
00:21:35,679 --> 00:21:36,960
those kind of

562
00:21:36,960 --> 00:21:38,960
attack

563
00:21:38,960 --> 00:21:41,600
and of course our attack

564
00:21:41,600 --> 00:21:46,000
meaning that if we make the key space uh

565
00:21:46,000 --> 00:21:47,360
very small

566
00:21:47,360 --> 00:21:49,039
it's mentioned in the in our paper

567
00:21:49,039 --> 00:21:52,080
compared to the ideal class group

568
00:21:52,080 --> 00:21:55,280
then we don't have short vectors

569
00:21:55,280 --> 00:21:58,480
so we cannot perform our attack but

570
00:21:58,480 --> 00:22:00,240
we also

571
00:22:00,240 --> 00:22:02,720
do not cover the whole ideal class group

572
00:22:02,720 --> 00:22:04,320
so we cannot

573
00:22:04,320 --> 00:22:06,640
perform group attacks like hidden

574
00:22:06,640 --> 00:22:08,080
subgroup

575
00:22:08,080 --> 00:22:11,120
so there are of course parallels between

576
00:22:11,120 --> 00:22:13,760
those but we did not do very uh

577
00:22:13,760 --> 00:22:16,320
rigorously the comparison

578
00:22:16,320 --> 00:22:20,080
with the security parameters

579
00:22:20,960 --> 00:22:22,159
actually

580
00:22:22,159 --> 00:22:25,720
thank you very much

581
00:22:38,080 --> 00:22:40,720
sorry i was muted uh eric can you um

582
00:22:40,720 --> 00:22:42,320
stop sharing so we can move on to the

583
00:22:42,320 --> 00:22:45,200
next talk thanks okay okay okay

584
00:22:45,200 --> 00:22:47,760
ah thank you very much

585
00:22:47,760 --> 00:22:49,440
yeah thanks for your talk it was a very

586
00:22:49,440 --> 00:22:51,120
nice paper all right charlotte do you

587
00:22:51,120 --> 00:22:52,840
want to get set

588
00:22:52,840 --> 00:22:55,200
up yes

589
00:22:55,200 --> 00:23:00,640
okay let me share my video on the screen

590
00:23:01,039 --> 00:23:02,559
can you see it now

591
00:23:02,559 --> 00:23:07,039
yep that's great so um yeah please start

592
00:23:07,039 --> 00:23:10,240
okay so hi everyone this is a joint work

593
00:23:10,240 --> 00:23:11,919
with pierre carpenter with subject time

594
00:23:11,919 --> 00:23:13,440
memory trade-offs for large weight

595
00:23:13,440 --> 00:23:16,320
syndrome decoding in ternary goals

596
00:23:16,320 --> 00:23:17,760
so

597
00:23:17,760 --> 00:23:19,360
okay so

598
00:23:19,360 --> 00:23:21,200
here we consider an instance of the

599
00:23:21,200 --> 00:23:22,960
fixed weight syndrome decoding problem

600
00:23:22,960 --> 00:23:24,880
this takes as input a parity check

601
00:23:24,880 --> 00:23:27,440
matrix of a certain code where n is the

602
00:23:27,440 --> 00:23:29,679
code length and k the dimension then we

603
00:23:29,679 --> 00:23:32,240
have s the syndrome and w the weight the

604
00:23:32,240 --> 00:23:34,640
aim is to solve h e equals s and the

605
00:23:34,640 --> 00:23:36,240
solution must have a hamming weight

606
00:23:36,240 --> 00:23:37,679
equal to w

607
00:23:37,679 --> 00:23:39,360
we'll restrict ourselves to a setting

608
00:23:39,360 --> 00:23:40,880
where the parity-check matrix and the

609
00:23:40,880 --> 00:23:42,799
syndrome are assumed to be both simple

610
00:23:42,799 --> 00:23:45,520
uniformly at random also the quadrate

611
00:23:45,520 --> 00:23:47,120
and relative weight are fixed to these

612
00:23:47,120 --> 00:23:49,279
values and in particular we are in a

613
00:23:49,279 --> 00:23:50,720
large weight region

614
00:23:50,720 --> 00:23:52,720
also here we are far from the gerber

615
00:23:52,720 --> 00:23:54,799
version of bone so that the total number

616
00:23:54,799 --> 00:23:57,360
of expected solutions here is expected

617
00:23:57,360 --> 00:23:59,679
is exponential in the code length yet

618
00:23:59,679 --> 00:24:01,279
the weight is large enough so that this

619
00:24:01,279 --> 00:24:03,360
problem is believed to be heard

620
00:24:03,360 --> 00:24:05,679
this is quite an unusual problem and in

621
00:24:05,679 --> 00:24:07,520
fact here our main motivation is the

622
00:24:07,520 --> 00:24:09,279
wave signature scheme introduced by

623
00:24:09,279 --> 00:24:11,440
debris a lazarette all where one of its

624
00:24:11,440 --> 00:24:13,520
security requirements is the hardness of

625
00:24:13,520 --> 00:24:15,360
the syndrome decoding problem presented

626
00:24:15,360 --> 00:24:18,240
a slide ago in fact bricottel studied in

627
00:24:18,240 --> 00:24:20,159
detail the large white ternary syndrome

628
00:24:20,159 --> 00:24:22,000
decoding problem they proposed new

629
00:24:22,000 --> 00:24:23,840
parameters for this nuclear scheme that

630
00:24:23,840 --> 00:24:25,840
we are going to use in this work

631
00:24:25,840 --> 00:24:27,520
i'll go back later on the technique that

632
00:24:27,520 --> 00:24:30,559
they used but the best instance to solve

633
00:24:30,559 --> 00:24:32,559
the large weight syndrome decoding

634
00:24:32,559 --> 00:24:34,799
problem underlying wave signature scheme

635
00:24:34,799 --> 00:24:37,200
has the following asymptotic costs

636
00:24:37,200 --> 00:24:39,520
and this cost is in time and in memory

637
00:24:39,520 --> 00:24:41,279
and in this work we proposed to

638
00:24:41,279 --> 00:24:43,039
investigate the possible tradeoff for

639
00:24:43,039 --> 00:24:44,400
this problem

640
00:24:44,400 --> 00:24:46,159
to do that we started the same way as

641
00:24:46,159 --> 00:24:48,400
brick with it all that is we use the pg

642
00:24:48,400 --> 00:24:50,559
processes framework it's a framework

643
00:24:50,559 --> 00:24:52,400
that was formalized by them and this is

644
00:24:52,400 --> 00:24:54,640
a modular description of most isd-based

645
00:24:54,640 --> 00:24:55,840
algorithms

646
00:24:55,840 --> 00:24:57,760
so here on the left hand side we have

647
00:24:57,760 --> 00:25:00,000
the original syndrome decoding problem

648
00:25:00,000 --> 00:25:01,679
and on the right hand side this is the

649
00:25:01,679 --> 00:25:03,360
sub problem derived thanks to this

650
00:25:03,360 --> 00:25:05,919
framework so this is a

651
00:25:05,919 --> 00:25:08,080
sub syndrome decoding problem where we

652
00:25:08,080 --> 00:25:10,559
require many solutions

653
00:25:10,559 --> 00:25:12,400
so in fact this is a sub problem because

654
00:25:12,400 --> 00:25:14,799
h2 is a sub matrix of h after having

655
00:25:14,799 --> 00:25:17,200
done the partial gaussian elimination in

656
00:25:17,200 --> 00:25:18,799
our case we have some freedom on the

657
00:25:18,799 --> 00:25:20,720
size of the sub matrix and in our case

658
00:25:20,720 --> 00:25:22,799
it will provide us trade-offs

659
00:25:22,799 --> 00:25:24,960
not worthy is that here we want only a

660
00:25:24,960 --> 00:25:26,559
fraction of the solutions to the

661
00:25:26,559 --> 00:25:28,480
sub-problem

662
00:25:28,480 --> 00:25:31,279
so as pointed as by bricot at al because

663
00:25:31,279 --> 00:25:33,440
the so the solutions here are required

664
00:25:33,440 --> 00:25:35,200
to be full weight the derived sub

665
00:25:35,200 --> 00:25:37,360
problem in fact reduces to the zero one

666
00:25:37,360 --> 00:25:39,039
subset sum problem

667
00:25:39,039 --> 00:25:40,799
concretely it means that we can use

668
00:25:40,799 --> 00:25:42,880
generalized birthday algorithms solving

669
00:25:42,880 --> 00:25:45,120
the following problem where we have as

670
00:25:45,120 --> 00:25:47,520
input or list and the aim is to find one

671
00:25:47,520 --> 00:25:49,679
element in each list such that such that

672
00:25:49,679 --> 00:25:52,080
the sum gives the new vector

673
00:25:52,080 --> 00:25:54,960
so the generalized birthday algorithms

674
00:25:54,960 --> 00:25:57,039
are doing a sort of smart exhaustive

675
00:25:57,039 --> 00:25:58,960
search and one of their attractive

676
00:25:58,960 --> 00:26:00,720
features is that they are able to

677
00:26:00,720 --> 00:26:02,240
provide solutions at a constant

678
00:26:02,240 --> 00:26:03,679
amortized cost

679
00:26:03,679 --> 00:26:05,600
however some of these algorithms are

680
00:26:05,600 --> 00:26:07,200
designed to exhaustively solve the

681
00:26:07,200 --> 00:26:09,360
generalized birthday problem and some of

682
00:26:09,360 --> 00:26:11,200
them are going to return much more

683
00:26:11,200 --> 00:26:14,240
solutions than the desired amount and it

684
00:26:14,240 --> 00:26:17,039
yields to sub-optimal instances in such

685
00:26:17,039 --> 00:26:18,960
case we'd say that the algorithm has a

686
00:26:18,960 --> 00:26:20,880
course granularity

687
00:26:20,880 --> 00:26:22,720
so now we see the algorithms from the

688
00:26:22,720 --> 00:26:24,400
literature that we considered in this

689
00:26:24,400 --> 00:26:26,880
work the dissection from generate al and

690
00:26:26,880 --> 00:26:28,960
the k3 from wagner can be seen as

691
00:26:28,960 --> 00:26:30,559
generalizations of the meat in the

692
00:26:30,559 --> 00:26:32,080
middle algorithm

693
00:26:32,080 --> 00:26:34,320
in particular ricotta all used the k3

694
00:26:34,320 --> 00:26:35,679
combined with the representation

695
00:26:35,679 --> 00:26:37,120
technique and it gave them the

696
00:26:37,120 --> 00:26:39,120
asymptotic cost presented a few slides

697
00:26:39,120 --> 00:26:40,000
ago

698
00:26:40,000 --> 00:26:42,240
also it's possible to hybrid the k3 and

699
00:26:42,240 --> 00:26:43,520
the dissection

700
00:26:43,520 --> 00:26:44,400
um

701
00:26:44,400 --> 00:26:46,400
and it gave us the dissection entry and

702
00:26:46,400 --> 00:26:49,919
it was from introduced by dinner

703
00:26:49,919 --> 00:26:52,000
so the summary is that the dissection is

704
00:26:52,000 --> 00:26:54,559
much more memory efficient than the k3

705
00:26:54,559 --> 00:26:57,039
however for large memory the dissection

706
00:26:57,039 --> 00:26:59,600
has a cost granularity so we tried to

707
00:26:59,600 --> 00:27:01,440
make the dissection return as few

708
00:27:01,440 --> 00:27:04,000
solutions as possible but despite this

709
00:27:04,000 --> 00:27:07,200
tweak the k3 was still performing better

710
00:27:07,200 --> 00:27:09,279
however tweaking the granularity for the

711
00:27:09,279 --> 00:27:11,760
dissection e3 was quite successful and

712
00:27:11,760 --> 00:27:13,919
it gave us instances which were always

713
00:27:13,919 --> 00:27:15,760
better than our equivalent to the

714
00:27:15,760 --> 00:27:17,679
dissection on the k3

715
00:27:17,679 --> 00:27:19,919
so all of these algorithms provided us a

716
00:27:19,919 --> 00:27:21,760
near continuous time memory trade-off

717
00:27:21,760 --> 00:27:24,080
curve and this table summarizes some of

718
00:27:24,080 --> 00:27:25,919
its points unless the first line which

719
00:27:25,919 --> 00:27:29,520
is from brico that has recorded as work

720
00:27:29,520 --> 00:27:31,440
on this table we included the product

721
00:27:31,440 --> 00:27:33,120
time memory which can be useful to

722
00:27:33,120 --> 00:27:34,960
compare the different traders and we can

723
00:27:34,960 --> 00:27:36,799
see that it decreases along with the

724
00:27:36,799 --> 00:27:38,559
memory consumption

725
00:27:38,559 --> 00:27:40,880
so for our instances these are all

726
00:27:40,880 --> 00:27:42,480
dissection entry

727
00:27:42,480 --> 00:27:44,320
and the first number is the number of

728
00:27:44,320 --> 00:27:46,640
flavors in the tree and the second one

729
00:27:46,640 --> 00:27:48,960
is the dissection used and we can see

730
00:27:48,960 --> 00:27:51,039
that when the memory consumption

731
00:27:51,039 --> 00:27:52,320
decreases

732
00:27:52,320 --> 00:27:54,320
in fact the granularity of the

733
00:27:54,320 --> 00:27:56,640
dissection becomes less a problem and we

734
00:27:56,640 --> 00:27:59,679
can consider larger dissections

735
00:27:59,679 --> 00:28:01,600
so that's it for this presentation and

736
00:28:01,600 --> 00:28:03,360
thank you for your attention do you have

737
00:28:03,360 --> 00:28:05,440
any question

738
00:28:05,440 --> 00:28:07,760
thank you very much for your talk

739
00:28:07,760 --> 00:28:09,600
all right we've got any questions from

740
00:28:09,600 --> 00:28:12,080
the audience in the zulu for the chat or

741
00:28:12,080 --> 00:28:13,840
anyone wants to

742
00:28:13,840 --> 00:28:16,559
yes we have a question yep

743
00:28:16,559 --> 00:28:19,840
um thank you for the talk charlotte um i

744
00:28:19,840 --> 00:28:21,760
was wondering so the best algorithm is

745
00:28:21,760 --> 00:28:24,080
based on the combination of the k3

746
00:28:24,080 --> 00:28:26,320
algorithm and representation technique

747
00:28:26,320 --> 00:28:28,080
did you study uh

748
00:28:28,080 --> 00:28:29,840
if it's possible to improve your

749
00:28:29,840 --> 00:28:32,559
trade-offs uh time-wise by uh

750
00:28:32,559 --> 00:28:35,039
considering the representation technique

751
00:28:35,039 --> 00:28:37,520
uh no in this work we didn't uh focus on

752
00:28:37,520 --> 00:28:39,120
the representation technique we were

753
00:28:39,120 --> 00:28:40,799
really on the dissection and the

754
00:28:40,799 --> 00:28:42,960
dissection entry so we didn't explore

755
00:28:42,960 --> 00:28:45,600
this uh this possibility

756
00:28:45,600 --> 00:28:48,559
okay thank you very much

757
00:28:49,679 --> 00:28:53,240
any other questions

758
00:28:54,080 --> 00:28:56,480
i have a

759
00:28:56,480 --> 00:28:59,760
uh yeah i had a question about the

760
00:28:59,760 --> 00:29:02,559
you talk about the amortized time and i

761
00:29:02,559 --> 00:29:05,279
i'm just curious exactly what's your

762
00:29:05,279 --> 00:29:06,799
what's your computation model is this

763
00:29:06,799 --> 00:29:08,399
assuming some kind of parallelism or

764
00:29:08,399 --> 00:29:10,320
something

765
00:29:10,320 --> 00:29:11,360
uh

766
00:29:11,360 --> 00:29:13,600
no there is no parallel parallelism

767
00:29:13,600 --> 00:29:16,640
taken into account uh but in this um

768
00:29:16,640 --> 00:29:19,360
amortized cost uh we forget uh the

769
00:29:19,360 --> 00:29:22,159
polynomial factors uh so for example the

770
00:29:22,159 --> 00:29:26,320
code length are uh the constants in the

771
00:29:26,320 --> 00:29:27,679
in the course i'm just a little bit

772
00:29:27,679 --> 00:29:30,240
confused what the amortized so so what

773
00:29:30,240 --> 00:29:31,600
do you

774
00:29:31,600 --> 00:29:33,279
i mean what's the what's the thing

775
00:29:33,279 --> 00:29:34,720
that's being done which which makes you

776
00:29:34,720 --> 00:29:37,279
think about this being amortized

777
00:29:37,279 --> 00:29:38,720
because you're generating a large list

778
00:29:38,720 --> 00:29:41,440
or something

779
00:29:41,440 --> 00:29:44,320
ah in that sense uh

780
00:29:44,320 --> 00:29:47,279
okay for for example for the k3 we can

781
00:29:47,279 --> 00:29:50,159
assume that the lists are generated on

782
00:29:50,159 --> 00:29:51,360
the fly

783
00:29:51,360 --> 00:29:52,159
so

784
00:29:52,159 --> 00:29:54,159
we only take into account the memory

785
00:29:54,159 --> 00:29:56,320
consumption of the first list

786
00:29:56,320 --> 00:29:58,720
and um

787
00:29:58,720 --> 00:30:00,799
yes uh sorry i'm not really sure to see

788
00:30:00,799 --> 00:30:02,960
what you mean in fact well normally when

789
00:30:02,960 --> 00:30:04,720
you talk about amortized i mean to me

790
00:30:04,720 --> 00:30:07,360
the word amortized is something like

791
00:30:07,360 --> 00:30:08,880
uh

792
00:30:08,880 --> 00:30:09,919
because you're doing something in

793
00:30:09,919 --> 00:30:11,360
parallel or you're doing some

794
00:30:11,360 --> 00:30:13,919
computation organized in a way that that

795
00:30:13,919 --> 00:30:16,320
the this is somehow improved over just

796
00:30:16,320 --> 00:30:17,919
sequentially computing things i mean

797
00:30:17,919 --> 00:30:19,279
normally you have a

798
00:30:19,279 --> 00:30:21,200
an algorithm it would if you ran it in a

799
00:30:21,200 --> 00:30:23,039
sequential way it would have some cost

800
00:30:23,039 --> 00:30:24,640
but by doing something by doing some bit

801
00:30:24,640 --> 00:30:26,399
slicing or some organizing the

802
00:30:26,399 --> 00:30:28,240
computation in a way then you talk about

803
00:30:28,240 --> 00:30:29,679
the amortized cost because you're

804
00:30:29,679 --> 00:30:31,440
averaging over a different does that

805
00:30:31,440 --> 00:30:34,159
make sense ah yes in fact i mean in the

806
00:30:34,159 --> 00:30:36,880
amortized cost i mean that the the

807
00:30:36,880 --> 00:30:39,039
overall complexity of your algorithm is

808
00:30:39,039 --> 00:30:41,360
the number of solutions written by these

809
00:30:41,360 --> 00:30:42,720
algorithms

810
00:30:42,720 --> 00:30:44,880
so when we have constant amortized cost

811
00:30:44,880 --> 00:30:47,200
it means that uh

812
00:30:47,200 --> 00:30:48,880
the the overall time cost modulo

813
00:30:48,880 --> 00:30:50,640
constants is the total number of written

814
00:30:50,640 --> 00:30:52,960
solutions so

815
00:30:52,960 --> 00:30:55,440
i don't think it has a

816
00:30:55,440 --> 00:30:58,480
something to do with parallelism

817
00:30:58,480 --> 00:30:59,279
all right

818
00:30:59,279 --> 00:31:01,519
thanks

819
00:31:02,080 --> 00:31:04,399
okay we probably shouldn't move along

820
00:31:04,399 --> 00:31:07,840
unless anyone else has a question

821
00:31:08,240 --> 00:31:09,919
great okay thank you charlotte you can

822
00:31:09,919 --> 00:31:12,559
stop sharing

823
00:31:14,720 --> 00:31:16,840
okay andre you're

824
00:31:16,840 --> 00:31:20,320
next all right

825
00:31:23,919 --> 00:31:26,559
can you see my screen yep so good you

826
00:31:26,559 --> 00:31:28,159
can perfect that

827
00:31:28,159 --> 00:31:29,600
all right

828
00:31:29,600 --> 00:31:32,000
yes thank you so um this is a joint work

829
00:31:32,000 --> 00:31:34,399
with emmanuel bellini also from

830
00:31:34,399 --> 00:31:36,399
technology innovation institute

831
00:31:36,399 --> 00:31:37,200
so

832
00:31:37,200 --> 00:31:38,960
in i'm sorry

833
00:31:38,960 --> 00:31:41,679
so the nist pqc standardization effort

834
00:31:41,679 --> 00:31:43,440
is approaching the end of the third

835
00:31:43,440 --> 00:31:44,559
round and

836
00:31:44,559 --> 00:31:46,799
this third round will end with a

837
00:31:46,799 --> 00:31:49,360
selection of schemes to be standardized

838
00:31:49,360 --> 00:31:51,120
which makes it uh increasingly important

839
00:31:51,120 --> 00:31:53,039
to understand the

840
00:31:53,039 --> 00:31:54,799
exact security

841
00:31:54,799 --> 00:31:57,200
uh level of proposed parameter sets of

842
00:31:57,200 --> 00:31:59,600
course obviously these parameter sets

843
00:31:59,600 --> 00:32:01,840
need to be a part of the standard

844
00:32:01,840 --> 00:32:02,640
and

845
00:32:02,640 --> 00:32:04,960
in this work we focus on

846
00:32:04,960 --> 00:32:06,960
code based schemes of which there are

847
00:32:06,960 --> 00:32:10,080
still three remaining in the third round

848
00:32:10,080 --> 00:32:11,519
and the goal

849
00:32:11,519 --> 00:32:12,559
was to

850
00:32:12,559 --> 00:32:15,440
give precise security estimates for

851
00:32:15,440 --> 00:32:17,760
the different or the parameter sets of

852
00:32:17,760 --> 00:32:19,519
the different schemes on the

853
00:32:19,519 --> 00:32:22,559
different metrics where matrix means

854
00:32:22,559 --> 00:32:25,519
especially different memory models

855
00:32:25,519 --> 00:32:26,399
and

856
00:32:26,399 --> 00:32:28,960
the hardness of code based schemes is

857
00:32:28,960 --> 00:32:30,159
usually

858
00:32:30,159 --> 00:32:32,080
relying on the

859
00:32:32,080 --> 00:32:34,320
difficulty of the syndrome decoding

860
00:32:34,320 --> 00:32:35,840
problem and

861
00:32:35,840 --> 00:32:37,679
this problem or the best known

862
00:32:37,679 --> 00:32:39,120
algorithms to solve these problems are

863
00:32:39,120 --> 00:32:41,279
information set decoding algorithms

864
00:32:41,279 --> 00:32:43,120
and in this work we basically make three

865
00:32:43,120 --> 00:32:46,320
contributions that is first we observe

866
00:32:46,320 --> 00:32:48,880
relations between all major isd

867
00:32:48,880 --> 00:32:49,919
improvements

868
00:32:49,919 --> 00:32:51,919
which allows us somehow to unify this

869
00:32:51,919 --> 00:32:54,480
diverse landscape in a kind of framework

870
00:32:54,480 --> 00:32:57,600
which makes it easy to derive complexity

871
00:32:57,600 --> 00:33:00,000
formulas for each of these algorithms

872
00:33:00,000 --> 00:33:02,880
and we provide these these frameworks

873
00:33:02,880 --> 00:33:05,120
these complexity formulas

874
00:33:05,120 --> 00:33:07,679
in a publicly available tool called

875
00:33:07,679 --> 00:33:09,679
syndrome decoding estimator which allows

876
00:33:09,679 --> 00:33:11,279
to

877
00:33:11,279 --> 00:33:13,200
estimate the hardness of arbitrary

878
00:33:13,200 --> 00:33:15,360
synonym decoding instances

879
00:33:15,360 --> 00:33:18,080
and then finally using this tool we

880
00:33:18,080 --> 00:33:20,080
provide the precise security estimates

881
00:33:20,080 --> 00:33:20,880
for

882
00:33:20,880 --> 00:33:23,279
different parameter sets and in this

883
00:33:23,279 --> 00:33:25,679
talk i will only give a brief spoiler on

884
00:33:25,679 --> 00:33:28,000
the security estimates so if you're

885
00:33:28,000 --> 00:33:30,000
interested in the details on the other

886
00:33:30,000 --> 00:33:31,840
contributions or details on security

887
00:33:31,840 --> 00:33:35,120
estimates i refer to our paper online or

888
00:33:35,120 --> 00:33:37,760
the longer version of the talk

889
00:33:37,760 --> 00:33:40,320
so let's dive right into the security

890
00:33:40,320 --> 00:33:42,640
estimates for the bike scheme

891
00:33:42,640 --> 00:33:44,720
so here we have the

892
00:33:44,720 --> 00:33:46,880
three categories one three and five

893
00:33:46,880 --> 00:33:49,440
given by nist which relates the security

894
00:33:49,440 --> 00:33:52,960
of the scheme or the parameter set

895
00:33:52,960 --> 00:33:55,679
to the security of breaking aes with

896
00:33:55,679 --> 00:33:57,600
respective key lengths

897
00:33:57,600 --> 00:34:01,120
and we find that for bike basically all

898
00:34:01,120 --> 00:34:03,840
given parameter sets match the security

899
00:34:03,840 --> 00:34:05,440
categories

900
00:34:05,440 --> 00:34:07,600
and now it's important to note that

901
00:34:07,600 --> 00:34:09,839
all algorithmic improvements

902
00:34:09,839 --> 00:34:12,159
on isd as we've also seen in the talk by

903
00:34:12,159 --> 00:34:14,399
charlotte are heavily relying on the use

904
00:34:14,399 --> 00:34:15,520
of memory

905
00:34:15,520 --> 00:34:16,560
and

906
00:34:16,560 --> 00:34:18,560
of course an algorithm that has a huge

907
00:34:18,560 --> 00:34:20,320
demand for memory will certainly slow

908
00:34:20,320 --> 00:34:22,320
down the computations

909
00:34:22,320 --> 00:34:24,480
because it simply needs to access this

910
00:34:24,480 --> 00:34:26,159
amount of memory and memory cells are

911
00:34:26,159 --> 00:34:27,760
usually quite slow

912
00:34:27,760 --> 00:34:29,440
so in a

913
00:34:29,440 --> 00:34:30,879
more

914
00:34:30,879 --> 00:34:33,199
accurate or a realistic security

915
00:34:33,199 --> 00:34:35,918
estimate we want to account for this

916
00:34:35,918 --> 00:34:38,320
memory usage meaning we want to penalize

917
00:34:38,320 --> 00:34:39,839
the algorithm for

918
00:34:39,839 --> 00:34:40,879
a high

919
00:34:40,879 --> 00:34:43,199
amount of memory it's using

920
00:34:43,199 --> 00:34:44,480
and for

921
00:34:44,480 --> 00:34:46,879
deriving this penalization we use some

922
00:34:46,879 --> 00:34:48,560
established models i don't want to dive

923
00:34:48,560 --> 00:34:51,440
into the details but of course if we

924
00:34:51,440 --> 00:34:54,239
introduce these memory access costs then

925
00:34:54,239 --> 00:34:56,079
we can only increase the margins since

926
00:34:56,079 --> 00:34:59,200
uh bike is already matching its security

927
00:34:59,200 --> 00:35:00,560
levels

928
00:35:00,560 --> 00:35:02,880
and the same holds basically for the hqc

929
00:35:02,880 --> 00:35:03,839
scheme

930
00:35:03,839 --> 00:35:07,760
and this is a result of the

931
00:35:07,760 --> 00:35:10,160
specific choice of parameters made in in

932
00:35:10,160 --> 00:35:12,960
the viking's hqc scheme

933
00:35:12,960 --> 00:35:14,800
which does not allow

934
00:35:14,800 --> 00:35:18,000
um the isd algorithms to benefit too

935
00:35:18,000 --> 00:35:19,359
much from the made algorithmic

936
00:35:19,359 --> 00:35:21,599
improvements so they cannot like

937
00:35:21,599 --> 00:35:24,800
leverage the memory to its full extent

938
00:35:24,800 --> 00:35:27,359
things change a bit if we look into the

939
00:35:27,359 --> 00:35:29,680
classic megalis submission so here's the

940
00:35:29,680 --> 00:35:31,280
same categories holds the only

941
00:35:31,280 --> 00:35:32,960
difference is that

942
00:35:32,960 --> 00:35:34,000
we have

943
00:35:34,000 --> 00:35:36,480
this submission team provides three

944
00:35:36,480 --> 00:35:40,400
category five sets there is 5a and 5b

945
00:35:40,400 --> 00:35:41,920
meant to provide roughly the same

946
00:35:41,920 --> 00:35:45,920
security and category 5c set to give

947
00:35:45,920 --> 00:35:47,760
high security guarantees

948
00:35:47,760 --> 00:35:48,560
and

949
00:35:48,560 --> 00:35:50,800
if we do not impose memory access calls

950
00:35:50,800 --> 00:35:54,320
we find that only 2 out of 5 sets

951
00:35:54,320 --> 00:35:56,880
match the security guarantee

952
00:35:56,880 --> 00:35:58,880
but to be fair these

953
00:35:58,880 --> 00:36:01,280
algorithms

954
00:36:01,280 --> 00:36:03,599
used to obtain these estimates use huge

955
00:36:03,599 --> 00:36:05,680
amounts of memory which makes it

956
00:36:05,680 --> 00:36:07,599
increasingly interesting to look into

957
00:36:07,599 --> 00:36:09,040
memory access course

958
00:36:09,040 --> 00:36:11,839
and we find that

959
00:36:11,839 --> 00:36:13,760
if we consider low memory access codes

960
00:36:13,760 --> 00:36:16,160
the picture does not change drastically

961
00:36:16,160 --> 00:36:18,880
but under high memory access course

962
00:36:18,880 --> 00:36:20,079
the

963
00:36:20,079 --> 00:36:22,560
yeah basically all but the category 3

964
00:36:22,560 --> 00:36:25,200
set match the security guarantees

965
00:36:25,200 --> 00:36:27,760
but yeah so it's a slight slight outlier

966
00:36:27,760 --> 00:36:29,839
of the categories reset here

967
00:36:29,839 --> 00:36:31,040
so

968
00:36:31,040 --> 00:36:33,359
what does this mean for the code based

969
00:36:33,359 --> 00:36:34,320
schemes

970
00:36:34,320 --> 00:36:37,040
for the code based submissions

971
00:36:37,040 --> 00:36:38,880
so as we have seen the bike and hqc

972
00:36:38,880 --> 00:36:41,440
scheme is already or are already secure

973
00:36:41,440 --> 00:36:43,040
on the conservative metrics so if we

974
00:36:43,040 --> 00:36:44,560
introduce memory access codes we can

975
00:36:44,560 --> 00:36:46,800
only increase the security margins

976
00:36:46,800 --> 00:36:48,800
but nevertheless also for the bike and

977
00:36:48,800 --> 00:36:51,200
hqc scheme but also but especially for

978
00:36:51,200 --> 00:36:53,040
the mcalee scheme we've seen that memory

979
00:36:53,040 --> 00:36:54,880
access costs

980
00:36:54,880 --> 00:36:56,160
certainly matter

981
00:36:56,160 --> 00:36:56,960
and

982
00:36:56,960 --> 00:36:59,599
so our suggestion for the submission

983
00:36:59,599 --> 00:37:02,240
teams is to decide for a metric under

984
00:37:02,240 --> 00:37:05,119
which the parameters should be proposed

985
00:37:05,119 --> 00:37:07,280
and then ensure that they

986
00:37:07,280 --> 00:37:09,040
all all parameter sets match the

987
00:37:09,040 --> 00:37:11,599
security levels equally well

988
00:37:11,599 --> 00:37:14,000
thank you very much

989
00:37:14,000 --> 00:37:16,240
thank you very much andre

990
00:37:16,240 --> 00:37:19,520
okay do we have any questions

991
00:37:19,520 --> 00:37:20,800
puts anything in the chat or the zoom

992
00:37:20,800 --> 00:37:23,520
zulubit

993
00:37:25,440 --> 00:37:27,920
so uh one of the

994
00:37:27,920 --> 00:37:29,680
big challenges for

995
00:37:29,680 --> 00:37:33,680
post quantum cryptos to understand um

996
00:37:33,680 --> 00:37:35,760
also quantum security levels against a

997
00:37:35,760 --> 00:37:37,680
quantum attacker and this this you're

998
00:37:37,680 --> 00:37:40,480
talking about classical attacks and the

999
00:37:40,480 --> 00:37:42,320
kind of the challenge of what is the

1000
00:37:42,320 --> 00:37:44,480
what is the cost of of memory for

1001
00:37:44,480 --> 00:37:46,400
classical computing and i think the

1002
00:37:46,400 --> 00:37:48,640
situation with quantum algorithms is

1003
00:37:48,640 --> 00:37:50,800
even less clear about what is what is

1004
00:37:50,800 --> 00:37:53,280
the cost of quantum quantum storage but

1005
00:37:53,280 --> 00:37:54,800
did you think about doing some similar

1006
00:37:54,800 --> 00:37:56,480
kind of um

1007
00:37:56,480 --> 00:37:58,960
simulation or some kind of you know tool

1008
00:37:58,960 --> 00:38:02,320
for estimating quantum security as well

1009
00:38:02,320 --> 00:38:05,040
yes so i i didn't

1010
00:38:05,040 --> 00:38:07,280
include in this talk but in our paper we

1011
00:38:07,280 --> 00:38:09,440
also give a

1012
00:38:09,440 --> 00:38:12,240
rough estimation of the course of a very

1013
00:38:12,240 --> 00:38:14,320
basic this was our original isd

1014
00:38:14,320 --> 00:38:17,119
algorithm by pranga

1015
00:38:17,119 --> 00:38:19,359
so we do a very optimistic analysis of

1016
00:38:19,359 --> 00:38:22,079
this algorithm uh including

1017
00:38:22,079 --> 00:38:24,640
not including a lot of overhead that the

1018
00:38:24,640 --> 00:38:26,960
real implementation would generate and

1019
00:38:26,960 --> 00:38:29,680
we find that all schemes all parameter

1020
00:38:29,680 --> 00:38:31,440
sets match

1021
00:38:31,440 --> 00:38:33,839
the security the quantum security level

1022
00:38:33,839 --> 00:38:35,119
given by nist

1023
00:38:35,119 --> 00:38:36,400
um

1024
00:38:36,400 --> 00:38:38,480
yeah the reason we did not consider

1025
00:38:38,480 --> 00:38:41,359
algorithmic or more advanced algorithmic

1026
00:38:41,359 --> 00:38:45,440
improvements was that they usually use

1027
00:38:45,440 --> 00:38:48,000
yeah quantum memory and

1028
00:38:48,000 --> 00:38:52,560
there therefore we didn't include those

1029
00:38:52,640 --> 00:38:54,800
yeah i think that's a that's a

1030
00:38:54,800 --> 00:38:56,400
problem that we don't really know enough

1031
00:38:56,400 --> 00:38:58,480
about how to solve it dan bernstein has

1032
00:38:58,480 --> 00:39:00,640
put a comment in the zulu uh saying that

1033
00:39:00,640 --> 00:39:02,560
he he always

1034
00:39:02,560 --> 00:39:04,880
explicitly stated the memory access

1035
00:39:04,880 --> 00:39:06,960
costs

1036
00:39:06,960 --> 00:39:08,480
i don't know if dan you want to speak at

1037
00:39:08,480 --> 00:39:13,000
all or are you happy with your comment

1038
00:39:18,960 --> 00:39:19,760
i don't know if they have a

1039
00:39:19,760 --> 00:39:22,480
technological obstruction to speaking

1040
00:39:22,480 --> 00:39:24,720
um that's all right

1041
00:39:24,720 --> 00:39:27,760
anyone else want to up here

1042
00:39:27,760 --> 00:39:30,079
no audio at the moment okay

1043
00:39:30,079 --> 00:39:31,839
we've uh we've achieved the impossible

1044
00:39:31,839 --> 00:39:34,000
we've silenced dan bernstein so um

1045
00:39:34,000 --> 00:39:36,320
that's uh that's correct sorry dan

1046
00:39:36,320 --> 00:39:38,000
no i love you really

1047
00:39:38,000 --> 00:39:40,320
um

1048
00:39:40,800 --> 00:39:43,359
all right um

1049
00:39:43,359 --> 00:39:46,720
is there any other questions

1050
00:39:46,800 --> 00:39:48,960
cool i think we're getting uh we're

1051
00:39:48,960 --> 00:39:50,720
doing good shape and i'm very happy that

1052
00:39:50,720 --> 00:39:52,400
this is a cryptanalysis session but we

1053
00:39:52,400 --> 00:39:54,640
haven't actually broken any uh any

1054
00:39:54,640 --> 00:39:57,040
missed finalists today so um that's

1055
00:39:57,040 --> 00:39:59,440
that's probably that's probably good

1056
00:39:59,440 --> 00:40:00,800
all right thanks you can stop sharing

1057
00:40:00,800 --> 00:40:01,760
andre

1058
00:40:01,760 --> 00:40:04,000
all right

1059
00:40:04,400 --> 00:40:05,839
um

1060
00:40:05,839 --> 00:40:09,680
all right so bo i guess you're next

1061
00:40:09,680 --> 00:40:10,480
cool

1062
00:40:10,480 --> 00:40:10,990
um

1063
00:40:10,990 --> 00:40:12,240
[Music]

1064
00:40:12,240 --> 00:40:13,760
yeah do you want to

1065
00:40:13,760 --> 00:40:16,079
start

1066
00:40:16,319 --> 00:40:17,760
yes i was trying to find the unmute

1067
00:40:17,760 --> 00:40:19,040
button

1068
00:40:19,040 --> 00:40:21,280
yeah so uh thanks

1069
00:40:21,280 --> 00:40:23,280
thanks everyone for being here i know

1070
00:40:23,280 --> 00:40:27,599
it's late in you and uh so i'm bull yeah

1071
00:40:27,599 --> 00:40:30,079
and this is joint work with uh boris

1072
00:40:30,079 --> 00:40:32,319
peter and simon

1073
00:40:32,319 --> 00:40:34,400
so boys is actually on the call it's 2

1074
00:40:34,400 --> 00:40:37,040
a.m in rome so if you have any questions

1075
00:40:37,040 --> 00:40:39,680
maybe yeah you can try to talk to boris

1076
00:40:39,680 --> 00:40:41,359
as well

1077
00:40:41,359 --> 00:40:44,079
so our our paper is on the isolation

1078
00:40:44,079 --> 00:40:46,880
problem with torsion point information

1079
00:40:46,880 --> 00:40:47,680
so

1080
00:40:47,680 --> 00:40:50,359
this is a continuation

1081
00:40:50,359 --> 00:40:53,599
of the gpst paper

1082
00:40:53,599 --> 00:40:54,880
so i'll just give you an overview of

1083
00:40:54,880 --> 00:40:57,040
what what the the setting of the paper

1084
00:40:57,040 --> 00:40:58,079
is like

1085
00:40:58,079 --> 00:40:59,920
so there is an algorithm for finding

1086
00:40:59,920 --> 00:41:03,440
secret isogenies of sidh type schemes

1087
00:41:03,440 --> 00:41:06,000
given the endomorphism means of your

1088
00:41:06,000 --> 00:41:08,319
starting and your target curves

1089
00:41:08,319 --> 00:41:09,760
as well as some torsion point

1090
00:41:09,760 --> 00:41:11,680
information so this is kind of our paper

1091
00:41:11,680 --> 00:41:13,359
in a nutshell

1092
00:41:13,359 --> 00:41:16,480
so originally

1093
00:41:16,480 --> 00:41:18,800
we know that you can given the

1094
00:41:18,800 --> 00:41:20,640
endomorphism ring of the starting and

1095
00:41:20,640 --> 00:41:23,680
target curves in the sidh setting

1096
00:41:23,680 --> 00:41:27,520
we are able to recover isogenes

1097
00:41:27,520 --> 00:41:29,760
or rather the equivalent

1098
00:41:29,760 --> 00:41:31,359
isogenes

1099
00:41:31,359 --> 00:41:32,960
because what we are recovering is

1100
00:41:32,960 --> 00:41:36,160
actually the connecting ideals

1101
00:41:36,160 --> 00:41:39,200
but this is own this only works for sidh

1102
00:41:39,200 --> 00:41:41,920
because we take advantage of the fact

1103
00:41:41,920 --> 00:41:44,240
that sidh produces

1104
00:41:44,240 --> 00:41:46,640
short isogenies so i'll explain to you

1105
00:41:46,640 --> 00:41:48,880
what it means in the next slide

1106
00:41:48,880 --> 00:41:50,560
and we are not using portion point

1107
00:41:50,560 --> 00:41:54,319
information so this is known in 2016.

1108
00:41:54,319 --> 00:41:56,480
so in this paper what we do is that we

1109
00:41:56,480 --> 00:41:59,440
extend this gpst result

1110
00:41:59,440 --> 00:42:00,960
to b site type

1111
00:42:00,960 --> 00:42:02,480
systems

1112
00:42:02,480 --> 00:42:05,119
and what we actually show is that

1113
00:42:05,119 --> 00:42:06,400
the prime p

1114
00:42:06,400 --> 00:42:09,839
and v side is tight

1115
00:42:09,839 --> 00:42:12,480
so roughly speaking

1116
00:42:12,480 --> 00:42:15,280
there's a gap between sidh and b side

1117
00:42:15,280 --> 00:42:18,000
that we we bridge in this paper

1118
00:42:18,000 --> 00:42:20,560
so snh is short by socialists because

1119
00:42:20,560 --> 00:42:23,040
you have two parties using roughly

1120
00:42:23,040 --> 00:42:25,680
uh half of the space that you're given

1121
00:42:25,680 --> 00:42:28,839
in the isogenic graph if you like

1122
00:42:28,839 --> 00:42:31,440
so short isogenetics we mean that

1123
00:42:31,440 --> 00:42:34,240
disogenes have degree

1124
00:42:34,240 --> 00:42:37,280
roughly equal to square root of p

1125
00:42:37,280 --> 00:42:40,160
whereas b side has longer exogenous

1126
00:42:40,160 --> 00:42:43,440
so the techniques where we use in gpst

1127
00:42:43,440 --> 00:42:47,280
are unable to work with b-side in uh in

1128
00:42:47,280 --> 00:42:48,720
general

1129
00:42:48,720 --> 00:42:50,079
because you only recover short

1130
00:42:50,079 --> 00:42:52,480
exhaustions so what we want to do is

1131
00:42:52,480 --> 00:42:54,079
we're going to recover longer exhaustion

1132
00:42:54,079 --> 00:42:55,119
needs

1133
00:42:55,119 --> 00:42:57,440
but and we to do this we need to use

1134
00:42:57,440 --> 00:42:59,440
extra information known as the torsion

1135
00:42:59,440 --> 00:43:02,160
point information

1136
00:43:02,160 --> 00:43:04,000
so this is uh

1137
00:43:04,000 --> 00:43:06,880
this so you you'll start to wonder while

1138
00:43:06,880 --> 00:43:08,880
right now you need to use distortion for

1139
00:43:08,880 --> 00:43:11,280
information is this actually

1140
00:43:11,280 --> 00:43:13,200
a better attack and i would say yes

1141
00:43:13,200 --> 00:43:15,599
because in b-side you still need to

1142
00:43:15,599 --> 00:43:17,680
provide this torsion point information

1143
00:43:17,680 --> 00:43:18,720
for you to

1144
00:43:18,720 --> 00:43:20,720
complete the complete the square if you

1145
00:43:20,720 --> 00:43:22,960
like so this is not superfluous

1146
00:43:22,960 --> 00:43:25,280
information that is unavailable to an

1147
00:43:25,280 --> 00:43:27,520
adversary this is actually

1148
00:43:27,520 --> 00:43:30,880
information that we did not use in gpst

1149
00:43:30,880 --> 00:43:32,319
so all

1150
00:43:32,319 --> 00:43:35,200
b-side and sid sndh

1151
00:43:35,200 --> 00:43:38,560
schemes would provide this

1152
00:43:38,560 --> 00:43:41,359
information for free to an adversary so

1153
00:43:41,359 --> 00:43:44,640
this is still a strong attack

1154
00:43:44,640 --> 00:43:48,720
so the idea is to compute an ll basis

1155
00:43:48,720 --> 00:43:52,400
for this uh so i so o1 and o2 are the

1156
00:43:52,400 --> 00:43:53,920
endomorphism means of your target and

1157
00:43:53,920 --> 00:43:56,560
your base curve so i is a connecting

1158
00:43:56,560 --> 00:43:57,839
ideal

1159
00:43:57,839 --> 00:43:59,760
and you want to compute an ll we do

1160
00:43:59,760 --> 00:44:00,800
spaces

1161
00:44:00,800 --> 00:44:04,160
to get this omega one two three and four

1162
00:44:04,160 --> 00:44:06,079
so in gpst

1163
00:44:06,079 --> 00:44:08,079
you you stop here this is where you stop

1164
00:44:08,079 --> 00:44:10,079
because one of this would allow you to

1165
00:44:10,079 --> 00:44:11,119
compute

1166
00:44:11,119 --> 00:44:13,200
the correct disorganize that you use to

1167
00:44:13,200 --> 00:44:14,319
recover

1168
00:44:14,319 --> 00:44:16,480
uh the secret

1169
00:44:16,480 --> 00:44:18,560
but this is not sufficient here

1170
00:44:18,560 --> 00:44:21,119
so in general these are not enough and

1171
00:44:21,119 --> 00:44:23,839
you go further and so we're gonna have

1172
00:44:23,839 --> 00:44:25,599
to

1173
00:44:25,599 --> 00:44:27,520
what we do is that we need to use the

1174
00:44:27,520 --> 00:44:29,680
torsion point information which is given

1175
00:44:29,680 --> 00:44:32,400
by the phi p and phi q

1176
00:44:32,400 --> 00:44:36,079
and we need to express pi p and phi q

1177
00:44:36,079 --> 00:44:37,520
in terms of

1178
00:44:37,520 --> 00:44:40,640
linear combinations of omega

1179
00:44:40,640 --> 00:44:42,240
so the first thing you need to do is you

1180
00:44:42,240 --> 00:44:44,560
need to evaluate this isogeny on phi p

1181
00:44:44,560 --> 00:44:46,720
and q and this you can do using a

1182
00:44:46,720 --> 00:44:49,119
technique by lauter and petite

1183
00:44:49,119 --> 00:44:51,599
and once you have all these information

1184
00:44:51,599 --> 00:44:54,480
you will use them

1185
00:44:54,480 --> 00:44:56,640
and put them in equation in this

1186
00:44:56,640 --> 00:44:58,240
following form

1187
00:44:58,240 --> 00:45:00,400
solve them using linear algebra

1188
00:45:00,400 --> 00:45:02,560
which can be done

1189
00:45:02,560 --> 00:45:04,240
well with techniques uh listed in the

1190
00:45:04,240 --> 00:45:07,599
paper so i say easy here but this is

1191
00:45:07,599 --> 00:45:08,800
this this

1192
00:45:08,800 --> 00:45:10,800
this is uh kind of the the meat of our

1193
00:45:10,800 --> 00:45:13,200
paper i guess so the the these three

1194
00:45:13,200 --> 00:45:15,200
lines these three points are made of

1195
00:45:15,200 --> 00:45:16,319
paper and i'm just giving you an

1196
00:45:16,319 --> 00:45:18,240
overview so if you're interested in how

1197
00:45:18,240 --> 00:45:20,400
this is done i encourage you to read the

1198
00:45:20,400 --> 00:45:22,880
paper or maybe look at peter's uh longer

1199
00:45:22,880 --> 00:45:25,920
explanation online

1200
00:45:25,920 --> 00:45:27,760
so once you have solved

1201
00:45:27,760 --> 00:45:30,000
what x i's are

1202
00:45:30,000 --> 00:45:32,720
you can then use your your knowledge of

1203
00:45:32,720 --> 00:45:34,960
these five w i's which is which is what

1204
00:45:34,960 --> 00:45:36,720
you we covered over here

1205
00:45:36,720 --> 00:45:40,799
to reconstruct your secret file

1206
00:45:40,880 --> 00:45:42,000
okay

1207
00:45:42,000 --> 00:45:42,880
so

1208
00:45:42,880 --> 00:45:45,119
moving on to the last slide now

1209
00:45:45,119 --> 00:45:47,200
uh it's just a recap of what we have

1210
00:45:47,200 --> 00:45:49,040
done in this paper we generalized the

1211
00:45:49,040 --> 00:45:51,359
gpst attack to a larger class of sig

1212
00:45:51,359 --> 00:45:53,040
style schemes

1213
00:45:53,040 --> 00:45:55,440
namely b-side

1214
00:45:55,440 --> 00:45:59,560
and we provide an algorithm

1215
00:46:01,839 --> 00:46:04,079
for evaluating yeah smooth not

1216
00:46:04,079 --> 00:46:06,160
non-smooth degree associates

1217
00:46:06,160 --> 00:46:08,640
and so this gives us an attack for b

1218
00:46:08,640 --> 00:46:10,160
side that's more efficient than mid in

1219
00:46:10,160 --> 00:46:11,280
the middle

1220
00:46:11,280 --> 00:46:13,359
and we actually prove that the common

1221
00:46:13,359 --> 00:46:14,400
design

1222
00:46:14,400 --> 00:46:16,640
b set parameters are tight so that

1223
00:46:16,640 --> 00:46:18,319
they're in fact they're

1224
00:46:18,319 --> 00:46:20,240
not affected so we can't actually touch

1225
00:46:20,240 --> 00:46:23,119
them yet but it cannot be lowered

1226
00:46:23,119 --> 00:46:24,960
so this is the end of my presentation

1227
00:46:24,960 --> 00:46:27,520
maybe i'll leave it over here

1228
00:46:27,520 --> 00:46:31,200
thanks very much oh for that

1229
00:46:31,200 --> 00:46:34,000
are there any questions in the zulu or

1230
00:46:34,000 --> 00:46:35,119
the

1231
00:46:35,119 --> 00:46:36,960
or in the audience in order to ask a

1232
00:46:36,960 --> 00:46:39,960
question

1233
00:46:45,119 --> 00:46:46,960
yeah i mean it's a nice i think i like

1234
00:46:46,960 --> 00:46:48,800
this i like this result because i like

1235
00:46:48,800 --> 00:46:50,079
the way it uh

1236
00:46:50,079 --> 00:46:51,760
you have to use um

1237
00:46:51,760 --> 00:46:53,680
some quite nice analysis of the lattice

1238
00:46:53,680 --> 00:46:54,720
and the

1239
00:46:54,720 --> 00:46:56,640
fact that the

1240
00:46:56,640 --> 00:46:57,760
vector of a certain length in the

1241
00:46:57,760 --> 00:46:59,359
lattice will have these coefficients x i

1242
00:46:59,359 --> 00:47:00,720
have a certain length and they're

1243
00:47:00,720 --> 00:47:02,240
bounded by the

1244
00:47:02,240 --> 00:47:03,040
the

1245
00:47:03,040 --> 00:47:04,480
size of the torsion subgroup and all

1246
00:47:04,480 --> 00:47:06,240
that kind of thing there's nice um some

1247
00:47:06,240 --> 00:47:08,560
nice little details in the paper

1248
00:47:08,560 --> 00:47:10,720
it's interesting how isogen is also

1249
00:47:10,720 --> 00:47:13,040
related to lattices

1250
00:47:13,040 --> 00:47:14,480
well actually everything's related the

1251
00:47:14,480 --> 00:47:16,079
lattices well especially this class

1252
00:47:16,079 --> 00:47:18,160
group action stuff right it's um the

1253
00:47:18,160 --> 00:47:20,559
lattices are very explicitly there

1254
00:47:20,559 --> 00:47:22,640
yeah it's a very small letter so a lot

1255
00:47:22,640 --> 00:47:24,079
of the time you can just brute force

1256
00:47:24,079 --> 00:47:25,839
this sort of stuff right when we say ll

1257
00:47:25,839 --> 00:47:27,200
we lose basis we're actually talking

1258
00:47:27,200 --> 00:47:29,440
about the minkowski video spaces yeah

1259
00:47:29,440 --> 00:47:30,880
yeah yeah

1260
00:47:30,880 --> 00:47:33,760
um so i guess the question would be

1261
00:47:33,760 --> 00:47:35,040
you know when we did the original work

1262
00:47:35,040 --> 00:47:38,559
on sidh i seem to remember there was a

1263
00:47:38,559 --> 00:47:39,839
it was it was

1264
00:47:39,839 --> 00:47:41,359
just on the sort of breaking point and

1265
00:47:41,359 --> 00:47:43,200
we sort of had there was a

1266
00:47:43,200 --> 00:47:44,880
kind of suggestion that you might have

1267
00:47:44,880 --> 00:47:46,480
to brute force a couple of bits of the

1268
00:47:46,480 --> 00:47:48,720
secret isogeny just just to get um just

1269
00:47:48,720 --> 00:47:50,160
to get the norm

1270
00:47:50,160 --> 00:47:52,000
small enough so that ll definitely

1271
00:47:52,000 --> 00:47:54,720
outputs the right vector

1272
00:47:54,720 --> 00:47:56,800
i don't know if we use the distortion

1273
00:47:56,800 --> 00:47:58,480
point information would that actually

1274
00:47:58,480 --> 00:47:59,440
give a

1275
00:47:59,440 --> 00:48:01,599
kind of cleaner analysis in that case do

1276
00:48:01,599 --> 00:48:03,920
you think

1277
00:48:04,640 --> 00:48:08,640
well i do not distinct

1278
00:48:09,200 --> 00:48:10,240
because you can actually define a

1279
00:48:10,240 --> 00:48:11,520
different lattice right at the moment

1280
00:48:11,520 --> 00:48:13,280
you're starting off with the the the

1281
00:48:13,280 --> 00:48:15,599
module between o1 and o2

1282
00:48:15,599 --> 00:48:16,960
yeah and you're starting off with the

1283
00:48:16,960 --> 00:48:18,880
basis for that module and then you're

1284
00:48:18,880 --> 00:48:20,800
imposing the torsion points condition

1285
00:48:20,800 --> 00:48:22,480
but you could make these torsion points

1286
00:48:22,480 --> 00:48:24,160
conditions a restriction on the lattice

1287
00:48:24,160 --> 00:48:26,000
to give you a lattice of a different

1288
00:48:26,000 --> 00:48:28,160
volume and then the

1289
00:48:28,160 --> 00:48:30,720
the behavior of ll might be different

1290
00:48:30,720 --> 00:48:32,559
but i mean this this this would this

1291
00:48:32,559 --> 00:48:35,440
would definitely the next few steps so

1292
00:48:35,440 --> 00:48:38,000
after gpst if you continue

1293
00:48:38,000 --> 00:48:39,440
doing this few steps you could

1294
00:48:39,440 --> 00:48:41,680
definitely use this for sith you know

1295
00:48:41,680 --> 00:48:43,359
there's nothing strong there's nothing

1296
00:48:43,359 --> 00:48:45,280
we're not using anything special about

1297
00:48:45,280 --> 00:48:47,280
b-side

1298
00:48:47,280 --> 00:48:49,119
to do all these steps so you could

1299
00:48:49,119 --> 00:48:51,760
definitely use these but whether it's

1300
00:48:51,760 --> 00:48:53,280
better i have no idea because i never

1301
00:48:53,280 --> 00:48:54,880
compared the two no it's probably not

1302
00:48:54,880 --> 00:48:57,520
better it's probably not actually a

1303
00:48:57,520 --> 00:48:59,839
project with anyone spending time on but

1304
00:48:59,839 --> 00:49:01,359
you feel like it's probably a kind of a

1305
00:49:01,359 --> 00:49:03,280
sequence of it like if you if you look

1306
00:49:03,280 --> 00:49:05,040
to slightly unbalanced um parameters or

1307
00:49:05,040 --> 00:49:06,640
something that'd be kind of a

1308
00:49:06,640 --> 00:49:09,040
uh maybe a

1309
00:49:09,040 --> 00:49:11,280
unified attack that kind of uses both

1310
00:49:11,280 --> 00:49:13,040
approaches and something

1311
00:49:13,040 --> 00:49:15,200
yeah so we have an example in the paper

1312
00:49:15,200 --> 00:49:17,280
if you want to go through it and we do

1313
00:49:17,280 --> 00:49:19,920
it quite explicitly even though we so we

1314
00:49:19,920 --> 00:49:21,760
take some cheap we cheated a little bit

1315
00:49:21,760 --> 00:49:23,520
because we it's hard to compute uh

1316
00:49:23,520 --> 00:49:25,839
endomorphism brings explicitly so we

1317
00:49:25,839 --> 00:49:27,520
took some liberties in that we should

1318
00:49:27,520 --> 00:49:28,800
resolve with

1319
00:49:28,800 --> 00:49:30,960
were

1320
00:49:34,720 --> 00:49:36,720
significantly

1321
00:49:36,720 --> 00:49:38,240
and luka says it's not an attack it's a

1322
00:49:38,240 --> 00:49:40,480
reduction yes so so first of all this

1323
00:49:40,480 --> 00:49:42,000
business is not an attack it's reducing

1324
00:49:42,000 --> 00:49:45,200
the hardest of one problem

1325
00:49:47,359 --> 00:49:48,720
thank you thank you luca for your

1326
00:49:48,720 --> 00:49:50,240
comment but back to the other question

1327
00:49:50,240 --> 00:49:53,760
in the chat why does this reduction um

1328
00:49:53,760 --> 00:49:55,280
uh

1329
00:49:55,280 --> 00:49:58,000
not um how should we say not not really

1330
00:49:58,000 --> 00:49:59,520
not really apply to decide maybe there's

1331
00:49:59,520 --> 00:50:01,119
another way of saying it

1332
00:50:01,119 --> 00:50:03,760
yeah well first of all you need to work

1333
00:50:03,760 --> 00:50:05,760
out the endomorphism right

1334
00:50:05,760 --> 00:50:08,960
so that in itself is i think

1335
00:50:08,960 --> 00:50:11,599
i think that in itself is enough of a a

1336
00:50:11,599 --> 00:50:13,359
barrier

1337
00:50:13,359 --> 00:50:15,440
but uh

1338
00:50:15,440 --> 00:50:17,359
yeah

1339
00:50:17,359 --> 00:50:19,200
i think i think i think that's best

1340
00:50:19,200 --> 00:50:21,760
answer to be honest

1341
00:50:21,760 --> 00:50:23,440
but also it's about the parameters right

1342
00:50:23,440 --> 00:50:24,720
you really need the parameters to be you

1343
00:50:24,720 --> 00:50:26,720
need you need the m2 to be this big to

1344
00:50:26,720 --> 00:50:29,599
um yeah exactly so you you do need you

1345
00:50:29,599 --> 00:50:31,119
do need some uh

1346
00:50:31,119 --> 00:50:32,880
inequalities like they're not shown here

1347
00:50:32,880 --> 00:50:36,160
so it's in actually it's in peter's uh

1348
00:50:36,160 --> 00:50:38,160
uh actual

1349
00:50:38,160 --> 00:50:39,839
longer presentation so you can see the

1350
00:50:39,839 --> 00:50:42,079
inequality of m1 over n2

1351
00:50:42,079 --> 00:50:43,760
and it needs to be

1352
00:50:43,760 --> 00:50:45,440
something over 16 i can't remember the

1353
00:50:45,440 --> 00:50:48,000
exact the exact ratio but you need the

1354
00:50:48,000 --> 00:50:51,200
ratios to place 16 where d is the

1355
00:50:51,200 --> 00:50:53,040
length of the smallest isolate between

1356
00:50:53,040 --> 00:50:54,960
the two groups

1357
00:50:54,960 --> 00:50:56,079
thank you

1358
00:50:56,079 --> 00:50:58,400
thank you guys

1359
00:50:58,400 --> 00:51:00,720
yeah the over 16.

1360
00:51:00,720 --> 00:51:03,839
cool all right um i'm going to make a

1361
00:51:03,839 --> 00:51:08,558
final call last call for boarding for

1362
00:51:10,800 --> 00:51:11,839
is here

1363
00:51:11,839 --> 00:51:14,799
please speak now

1364
00:51:20,400 --> 00:51:22,480
okay i think the flight is departing

1365
00:51:22,480 --> 00:51:24,800
without isan on board so i think that

1366
00:51:24,800 --> 00:51:25,920
was

1367
00:51:25,920 --> 00:51:29,680
five talks was all we were gonna get

1368
00:51:29,680 --> 00:51:32,000
um

1369
00:51:33,040 --> 00:51:34,839
it's pretty late in

1370
00:51:34,839 --> 00:51:36,640
luxembourg yeah

1371
00:51:36,640 --> 00:51:38,880
yeah there's this um

1372
00:51:38,880 --> 00:51:41,280
this happens

1373
00:51:41,280 --> 00:51:43,920
cool all right well um that ends the

1374
00:51:43,920 --> 00:51:47,040
session um thanks to all the speakers

1375
00:51:47,040 --> 00:51:49,440
and to the audience for showing up

1376
00:51:49,440 --> 00:51:51,040
if anyone wants to stick around and talk

1377
00:51:51,040 --> 00:51:52,880
about isogenes afterwards they're

1378
00:51:52,880 --> 00:51:54,720
welcome to

1379
00:51:54,720 --> 00:51:57,559
otherwise we have a

1380
00:51:57,559 --> 00:52:01,680
25-minute break approximately

