1
00:00:00,560 --> 00:00:01,680
hello

2
00:00:01,680 --> 00:00:03,520
this is our work on the post quantum

3
00:00:03,520 --> 00:00:05,120
security of signatures and ring

4
00:00:05,120 --> 00:00:06,560
signatures

5
00:00:06,560 --> 00:00:08,720
to appear in pkc22

6
00:00:08,720 --> 00:00:10,880
this is joint work with kymen chung zhao

7
00:00:10,880 --> 00:00:13,599
liang and julia malavolta

8
00:00:13,599 --> 00:00:15,440
we start with the post quantum security

9
00:00:15,440 --> 00:00:17,520
of signatures signatures satisfy

10
00:00:17,520 --> 00:00:18,960
enforceability

11
00:00:18,960 --> 00:00:20,560
where an adversary gets to talk to a

12
00:00:20,560 --> 00:00:22,240
challenger which provides it to signing

13
00:00:22,240 --> 00:00:23,680
oracle

14
00:00:23,680 --> 00:00:25,279
in the classical case this means that

15
00:00:25,279 --> 00:00:27,039
the adversary can query individual

16
00:00:27,039 --> 00:00:29,279
messages and receives the corresponding

17
00:00:29,279 --> 00:00:31,119
signatures from the challenger

18
00:00:31,119 --> 00:00:32,960
eventually the adversary produces

19
00:00:32,960 --> 00:00:34,239
forgery

20
00:00:34,239 --> 00:00:36,079
which is said to be successful if the

21
00:00:36,079 --> 00:00:37,600
message corresponding to the forged

22
00:00:37,600 --> 00:00:39,440
signature was not queried before by the

23
00:00:39,440 --> 00:00:41,120
adversary and this is indeed the

24
00:00:41,120 --> 00:00:42,879
standard definition used for classical

25
00:00:42,879 --> 00:00:45,120
enforceability

26
00:00:45,120 --> 00:00:46,960
if the adversary is a quantum polynomial

27
00:00:46,960 --> 00:00:49,440
time how machine however

28
00:00:49,440 --> 00:00:51,840
it can make quantum queries

29
00:00:51,840 --> 00:00:53,760
which means that its messages may not be

30
00:00:53,760 --> 00:00:55,199
restricted

31
00:00:55,199 --> 00:00:56,320
to being

32
00:00:56,320 --> 00:00:58,399
individual messages

33
00:00:58,399 --> 00:01:00,320
but can be queries which are a

34
00:01:00,320 --> 00:01:02,399
superposition over the measure space

35
00:01:02,399 --> 00:01:04,239
the challenger in turn has to reply with

36
00:01:04,239 --> 00:01:06,880
the appropriate superposition

37
00:01:06,880 --> 00:01:08,880
over signatures

38
00:01:08,880 --> 00:01:11,040
since these superpositions may range

39
00:01:11,040 --> 00:01:13,200
over the entire message space

40
00:01:13,200 --> 00:01:14,799
and the challenger clearly cannot

41
00:01:14,799 --> 00:01:17,200
measure the adversaries queries

42
00:01:17,200 --> 00:01:19,040
it quickly becomes clear

43
00:01:19,040 --> 00:01:20,960
that we cannot meaningfully define the

44
00:01:20,960 --> 00:01:22,880
notion of what message was really

45
00:01:22,880 --> 00:01:24,080
queried

46
00:01:24,080 --> 00:01:26,960
and so it becomes difficult to define

47
00:01:26,960 --> 00:01:29,119
when the adversary actually succeeds in

48
00:01:29,119 --> 00:01:31,119
forging a signature

49
00:01:31,119 --> 00:01:33,439
for example the adversary may query an

50
00:01:33,439 --> 00:01:35,680
uniform superposition over the entire

51
00:01:35,680 --> 00:01:37,040
method space

52
00:01:37,040 --> 00:01:38,880
and just measure the challenger's

53
00:01:38,880 --> 00:01:41,759
response to get a signature on an

54
00:01:41,759 --> 00:01:44,960
uniformly picked message

55
00:01:44,960 --> 00:01:46,880
does this mean that the adversary

56
00:01:46,880 --> 00:01:49,680
succeeded in getting a fourth signature

57
00:01:49,680 --> 00:01:51,439
it's unclear so we have to turn to other

58
00:01:51,439 --> 00:01:52,640
definitions

59
00:01:52,640 --> 00:01:54,799
to see what we can do

60
00:01:54,799 --> 00:01:57,040
one of the first definitions considered

61
00:01:57,040 --> 00:01:58,799
in the quantum setting was that of one

62
00:01:58,799 --> 00:02:00,719
more unforge ability

63
00:02:00,719 --> 00:02:02,799
which was first introduced by bonnie and

64
00:02:02,799 --> 00:02:05,200
zandry in their work

65
00:02:05,200 --> 00:02:08,000
classically this is similar to

66
00:02:08,000 --> 00:02:10,160
unforgeability for blind signatures

67
00:02:10,160 --> 00:02:11,840
where the adversary

68
00:02:11,840 --> 00:02:14,080
queries the signing article

69
00:02:14,080 --> 00:02:16,080
on several messages

70
00:02:16,080 --> 00:02:17,760
let us say queue of them

71
00:02:17,760 --> 00:02:18,879
and receives the corresponding

72
00:02:18,879 --> 00:02:20,160
signatures

73
00:02:20,160 --> 00:02:22,640
next the adversary has to produce four

74
00:02:22,640 --> 00:02:23,760
signatures

75
00:02:23,760 --> 00:02:25,760
but not just one as in the standard

76
00:02:25,760 --> 00:02:26,959
definition

77
00:02:26,959 --> 00:02:28,640
but q plus one of them

78
00:02:28,640 --> 00:02:31,200
if all of these signatures are valid

79
00:02:31,200 --> 00:02:32,800
the challenger accepts the adversary's

80
00:02:32,800 --> 00:02:34,879
forgery the generalization to the

81
00:02:34,879 --> 00:02:36,879
quantum case is immediate the adversary

82
00:02:36,879 --> 00:02:38,400
switches to querying

83
00:02:38,400 --> 00:02:40,480
quantum states which are superpositions

84
00:02:40,480 --> 00:02:42,800
over the messages and the oracle replies

85
00:02:42,800 --> 00:02:44,319
with the appropriate signatures as we

86
00:02:44,319 --> 00:02:46,160
have seen before

87
00:02:46,160 --> 00:02:48,080
and it does this q times as before for

88
00:02:48,080 --> 00:02:49,680
example

89
00:02:49,680 --> 00:02:51,920
and we expect the adversary to finally

90
00:02:51,920 --> 00:02:53,040
produce

91
00:02:53,040 --> 00:02:55,440
q plus one classical signatures and the

92
00:02:55,440 --> 00:02:57,040
challenger accepts if all of these are

93
00:02:57,040 --> 00:02:59,519
valid in this case

94
00:02:59,519 --> 00:03:02,159
we can further see that

95
00:03:02,159 --> 00:03:03,280
there is

96
00:03:03,280 --> 00:03:06,319
nowhere that we can use superpositions

97
00:03:06,319 --> 00:03:08,159
to win the game where a classical

98
00:03:08,159 --> 00:03:10,159
adversary wouldn't and of course as we

99
00:03:10,159 --> 00:03:11,599
have seen this is equivalent to the

100
00:03:11,599 --> 00:03:13,840
standard definition classically and this

101
00:03:13,840 --> 00:03:15,040
serves as

102
00:03:15,040 --> 00:03:16,640
a well-defined

103
00:03:16,640 --> 00:03:19,040
definition for affordability in the

104
00:03:19,040 --> 00:03:21,040
quantum case

105
00:03:21,040 --> 00:03:24,560
and it has been used in several works

106
00:03:24,560 --> 00:03:26,319
there are certain concerns that can be

107
00:03:26,319 --> 00:03:27,920
had with the one more unforgivability

108
00:03:27,920 --> 00:03:29,040
definition

109
00:03:29,040 --> 00:03:30,959
broadly the issue is that does

110
00:03:30,959 --> 00:03:33,120
definition disagrees slightly with our

111
00:03:33,120 --> 00:03:34,799
intuitive understanding

112
00:03:34,799 --> 00:03:36,720
of the generalization of unforgiability

113
00:03:36,720 --> 00:03:38,560
to the quantum setting

114
00:03:38,560 --> 00:03:41,040
for example we can consider an adversary

115
00:03:41,040 --> 00:03:44,000
that produces several forgeries

116
00:03:44,000 --> 00:03:47,519
however it queries the signing oracle

117
00:03:47,519 --> 00:03:49,200
on superpositions that come from a

118
00:03:49,200 --> 00:03:51,360
different part of the message space

119
00:03:51,360 --> 00:03:54,159
than for which it produces the forgeries

120
00:03:54,159 --> 00:03:55,680
in more detail

121
00:03:55,680 --> 00:03:58,000
you have an adversary

122
00:03:58,000 --> 00:04:00,400
and you have the message space and you

123
00:04:00,400 --> 00:04:02,000
have a certain subset of the message

124
00:04:02,000 --> 00:04:03,760
space

125
00:04:03,760 --> 00:04:07,519
and suppose an adversary queries

126
00:04:07,519 --> 00:04:09,599
superpositions on points outside of the

127
00:04:09,599 --> 00:04:11,920
subset s

128
00:04:11,920 --> 00:04:14,640
and it gets back certain signatures

129
00:04:14,640 --> 00:04:16,639
and in the end it manages to produce a

130
00:04:16,639 --> 00:04:18,959
forgery that comes from s while all its

131
00:04:18,959 --> 00:04:21,199
queries were supported on points outside

132
00:04:21,199 --> 00:04:22,240
us

133
00:04:22,240 --> 00:04:24,160
clearly intuitively we feel that this

134
00:04:24,160 --> 00:04:26,960
should not be allowed

135
00:04:26,960 --> 00:04:28,800
but the one more unforgeability

136
00:04:28,800 --> 00:04:30,880
definition does not rule out attacks of

137
00:04:30,880 --> 00:04:32,560
this kind

138
00:04:32,560 --> 00:04:35,199
this is not just of notional interest

139
00:04:35,199 --> 00:04:38,479
because in the work of amrs 20

140
00:04:38,479 --> 00:04:40,000
there is an example of this kind of

141
00:04:40,000 --> 00:04:42,240
scheme

142
00:04:42,240 --> 00:04:44,479
that achieves this kind of forgery but

143
00:04:44,479 --> 00:04:46,560
also satisfies the notion of one more

144
00:04:46,560 --> 00:04:48,880
unforgeability details can be found in

145
00:04:48,880 --> 00:04:50,320
that paper

146
00:04:50,320 --> 00:04:52,800
to counter man these issues we consider

147
00:04:52,800 --> 00:04:54,840
moving to a different definition of

148
00:04:54,840 --> 00:04:56,400
unforgeability

149
00:04:56,400 --> 00:04:57,840
we considered the notion of blind

150
00:04:57,840 --> 00:05:00,000
unforgeability that was proposed in the

151
00:05:00,000 --> 00:05:03,039
work of mrs 20. as before we have the

152
00:05:03,039 --> 00:05:04,800
adversary talking to assigning oracle

153
00:05:04,800 --> 00:05:06,720
and the corresponding message space m

154
00:05:06,720 --> 00:05:09,120
this has various messages and now the

155
00:05:09,120 --> 00:05:11,199
adversary may submit superposition

156
00:05:11,199 --> 00:05:13,120
queries over these messages

157
00:05:13,120 --> 00:05:14,560
and the oracle's

158
00:05:14,560 --> 00:05:16,720
returns the corresponding signature also

159
00:05:16,720 --> 00:05:18,800
in superposition the catch is that the

160
00:05:18,800 --> 00:05:21,039
oracle in this definition maintains what

161
00:05:21,039 --> 00:05:22,880
we call a blind set

162
00:05:22,880 --> 00:05:25,199
of relative weight epsilon by uniformly

163
00:05:25,199 --> 00:05:26,800
sampling points from the message space

164
00:05:26,800 --> 00:05:28,960
with probability epsilon the parameter

165
00:05:28,960 --> 00:05:31,360
epsilon is part of the game parameters

166
00:05:31,360 --> 00:05:33,840
and can be chosen adversarially the

167
00:05:33,840 --> 00:05:35,520
function of the blind set is that the

168
00:05:35,520 --> 00:05:38,479
oracle is considered to be blinded

169
00:05:38,479 --> 00:05:40,800
on the messages that are in the subset

170
00:05:40,800 --> 00:05:42,960
so in more detail if the adversary

171
00:05:42,960 --> 00:05:44,800
submits a superposition

172
00:05:44,800 --> 00:05:46,400
over messages where some of these

173
00:05:46,400 --> 00:05:48,800
messages may be in the blind set

174
00:05:48,800 --> 00:05:51,280
the signing query only answers on those

175
00:05:51,280 --> 00:05:53,039
components that do not come from the

176
00:05:53,039 --> 00:05:55,759
blind set so here for example we have

177
00:05:55,759 --> 00:05:57,600
that the signing oracle computes the

178
00:05:57,600 --> 00:05:59,919
signatures the components that come from

179
00:05:59,919 --> 00:06:00,960
the points

180
00:06:00,960 --> 00:06:02,880
outside of the blind set but for the

181
00:06:02,880 --> 00:06:05,199
points inside the blind set

182
00:06:05,199 --> 00:06:06,800
it just computes the signature to be

183
00:06:06,800 --> 00:06:08,800
bought and then prepares the final

184
00:06:08,800 --> 00:06:11,120
signature in superposition appropriately

185
00:06:11,120 --> 00:06:13,039
we denote this blinded signature by

186
00:06:13,039 --> 00:06:14,960
prefixing b epsilon

187
00:06:14,960 --> 00:06:16,479
eventually in this definition the

188
00:06:16,479 --> 00:06:19,759
adversary must output a challenge

189
00:06:19,759 --> 00:06:21,199
and the challenger has to check that

190
00:06:21,199 --> 00:06:23,440
this forgery is valid

191
00:06:23,440 --> 00:06:25,680
and the message for the signature comes

192
00:06:25,680 --> 00:06:27,919
from the blindside it is not hard to see

193
00:06:27,919 --> 00:06:29,840
that the classical restriction of this

194
00:06:29,840 --> 00:06:30,960
definition

195
00:06:30,960 --> 00:06:32,479
is comparable

196
00:06:32,479 --> 00:06:34,000
and is actually equivalent to the

197
00:06:34,000 --> 00:06:36,319
standard unforgivability definition so

198
00:06:36,319 --> 00:06:38,319
this seems to meet the basic

199
00:06:38,319 --> 00:06:39,919
requirements we'd want from quantum

200
00:06:39,919 --> 00:06:42,400
affordability definition

201
00:06:42,400 --> 00:06:44,720
unfortunately we do not know how to

202
00:06:44,720 --> 00:06:46,800
compare this to the

203
00:06:46,800 --> 00:06:48,720
one more unforgetability definition in

204
00:06:48,720 --> 00:06:51,039
the quantum setting directly however as

205
00:06:51,039 --> 00:06:53,039
mentioned it seems to meet

206
00:06:53,039 --> 00:06:55,280
all the requirements we would want and

207
00:06:55,280 --> 00:06:57,039
also agrees with our intuitive

208
00:06:57,039 --> 00:06:59,120
understanding of unforgivability in the

209
00:06:59,120 --> 00:07:00,880
quantum setting so we use this

210
00:07:00,880 --> 00:07:02,560
definition

211
00:07:02,560 --> 00:07:04,319
with this definition in mind we show

212
00:07:04,319 --> 00:07:06,240
several signature schemes that satisfy

213
00:07:06,240 --> 00:07:08,560
it in different settings before our work

214
00:07:08,560 --> 00:07:10,240
the only known schemes that provably

215
00:07:10,240 --> 00:07:12,240
satisfied blind and forgeability were

216
00:07:12,240 --> 00:07:14,160
one-time signature schemes

217
00:07:14,160 --> 00:07:16,560
we first show that

218
00:07:16,560 --> 00:07:19,280
a signature scheme based on quantum prfs

219
00:07:19,280 --> 00:07:21,599
and the quantum hardness of sis is blind

220
00:07:21,599 --> 00:07:23,440
unforgible in the quantum random oracle

221
00:07:23,440 --> 00:07:24,479
model

222
00:07:24,479 --> 00:07:26,720
we also give a new scheme based on the

223
00:07:26,720 --> 00:07:28,160
same assumptions that is blind

224
00:07:28,160 --> 00:07:30,479
unforgible in the plane model both these

225
00:07:30,479 --> 00:07:32,160
signatures turn out to be compact

226
00:07:32,160 --> 00:07:34,000
meaning that the signature size can be

227
00:07:34,000 --> 00:07:35,840
made independent of the size of the

228
00:07:35,840 --> 00:07:37,520
message itself

229
00:07:37,520 --> 00:07:39,280
we also have results in the ring

230
00:07:39,280 --> 00:07:42,319
signature setting firstly we develop a

231
00:07:42,319 --> 00:07:43,759
meaningful extension of the blind

232
00:07:43,759 --> 00:07:46,000
unforgivability definition to the ring

233
00:07:46,000 --> 00:07:48,160
signature setting we also present a

234
00:07:48,160 --> 00:07:49,680
construction of ring signatures

235
00:07:49,680 --> 00:07:51,680
satisfying this definition

236
00:07:51,680 --> 00:07:53,919
relying on the previous construction of

237
00:07:53,919 --> 00:07:55,840
ring signatures by chatterjee gerg and

238
00:07:55,840 --> 00:07:58,160
others from crypto 21.

239
00:07:58,160 --> 00:08:00,000
the definition of ring signature and

240
00:08:00,000 --> 00:08:02,319
forge ability proposed in that work

241
00:08:02,319 --> 00:08:05,280
had several drawbacks

242
00:08:05,280 --> 00:08:06,960
stemming from the fact that it was based

243
00:08:06,960 --> 00:08:09,520
on one more unforgeability

244
00:08:09,520 --> 00:08:10,960
our new definition removes these

245
00:08:10,960 --> 00:08:12,960
drawbacks and we also find a way to meet

246
00:08:12,960 --> 00:08:14,080
it

247
00:08:14,080 --> 00:08:15,680
let us talk now about the blind and

248
00:08:15,680 --> 00:08:18,160
forgivable scheme secure in the qram the

249
00:08:18,160 --> 00:08:19,840
scheme that we showed to be secure was

250
00:08:19,840 --> 00:08:21,039
given by gentry by curt and

251
00:08:21,039 --> 00:08:23,440
vaikunthanathan in 2008. here we will

252
00:08:23,440 --> 00:08:25,759
quickly recall the scheme

253
00:08:25,759 --> 00:08:27,520
this relies crucially on the notion of

254
00:08:27,520 --> 00:08:29,520
pre-image sampleable function families

255
00:08:29,520 --> 00:08:31,759
psf's are family of functions associated

256
00:08:31,759 --> 00:08:34,159
with public and private keys where a

257
00:08:34,159 --> 00:08:36,159
public key allows for evaluation of the

258
00:08:36,159 --> 00:08:38,000
psm in the forward direction

259
00:08:38,000 --> 00:08:40,159
and the secret key allows for sampling a

260
00:08:40,159 --> 00:08:42,799
pre-image psf's have several properties

261
00:08:42,799 --> 00:08:44,320
with the main one being that the joint

262
00:08:44,320 --> 00:08:46,080
distribution of the image and pre-image

263
00:08:46,080 --> 00:08:48,640
taken together are statistically close

264
00:08:48,640 --> 00:08:50,720
whether the images first sample

265
00:08:50,720 --> 00:08:53,040
uniformly or the pre-images

266
00:08:53,040 --> 00:08:54,959
secondly for any given image the

267
00:08:54,959 --> 00:08:57,120
corresponding pre-image has super

268
00:08:57,120 --> 00:08:59,279
logarithmic min entropy the third

269
00:08:59,279 --> 00:09:01,360
property that they have is collision

270
00:09:01,360 --> 00:09:03,120
resistance meaning that it is hard to

271
00:09:03,120 --> 00:09:05,200
find two different pre-images for the

272
00:09:05,200 --> 00:09:07,680
same image psf satisfying all these

273
00:09:07,680 --> 00:09:09,360
properties can be constructed from the

274
00:09:09,360 --> 00:09:11,600
hardness of the sis problem so what does

275
00:09:11,600 --> 00:09:13,279
the gpv scheme look like the first thing

276
00:09:13,279 --> 00:09:15,120
to note is that it is a deterministic

277
00:09:15,120 --> 00:09:16,880
scheme that is derandomized using a

278
00:09:16,880 --> 00:09:18,959
quantum prf but we won't be going into

279
00:09:18,959 --> 00:09:20,240
that here

280
00:09:20,240 --> 00:09:21,920
the scheme has a secret key that

281
00:09:21,920 --> 00:09:24,560
includes the secret key of the psf

282
00:09:24,560 --> 00:09:26,959
given any particular message we first

283
00:09:26,959 --> 00:09:28,560
evaluate the random oracle on the

284
00:09:28,560 --> 00:09:31,200
message to get a hash digest

285
00:09:31,200 --> 00:09:33,839
and then we compute the inverse

286
00:09:33,839 --> 00:09:36,320
of the psf given by the secret key on

287
00:09:36,320 --> 00:09:37,680
the hash digest to get the actual

288
00:09:37,680 --> 00:09:39,920
signature colloquially this is known as

289
00:09:39,920 --> 00:09:41,920
a hash and science signature scheme

290
00:09:41,920 --> 00:09:43,360
the public key

291
00:09:43,360 --> 00:09:45,600
includes the public key of the psf and

292
00:09:45,600 --> 00:09:48,399
allows for evaluating

293
00:09:48,399 --> 00:09:50,560
the output of the psf on the signature

294
00:09:50,560 --> 00:09:52,160
which if the signature was computed

295
00:09:52,160 --> 00:09:53,360
correctly

296
00:09:53,360 --> 00:09:55,200
should be equal to the hash digest on

297
00:09:55,200 --> 00:09:57,040
the message and this is simply the

298
00:09:57,040 --> 00:09:59,519
verification procedure

299
00:09:59,519 --> 00:10:01,519
one can check that this signature scheme

300
00:10:01,519 --> 00:10:03,839
can be made compact because the size of

301
00:10:03,839 --> 00:10:05,360
the random oracle output does not need

302
00:10:05,360 --> 00:10:07,040
to depend on the message we now sketch

303
00:10:07,040 --> 00:10:08,720
the security of this scheme

304
00:10:08,720 --> 00:10:10,079
the first thing to note is that we

305
00:10:10,079 --> 00:10:11,519
presented the scheme in the classical

306
00:10:11,519 --> 00:10:13,440
setting but it makes perfect sense as a

307
00:10:13,440 --> 00:10:15,279
quantum scheme given access to the

308
00:10:15,279 --> 00:10:17,040
quantum random article

309
00:10:17,040 --> 00:10:20,000
we show security using a hybrid argument

310
00:10:20,000 --> 00:10:21,200
in the hybrid form of the

311
00:10:21,200 --> 00:10:23,040
unforgivability experiment

312
00:10:23,040 --> 00:10:24,560
any given message

313
00:10:24,560 --> 00:10:26,880
is signed in a slightly different manner

314
00:10:26,880 --> 00:10:28,959
described as follows for any given

315
00:10:28,959 --> 00:10:32,640
message we simply evaluate a pre-image

316
00:10:32,640 --> 00:10:35,120
for the psf family sampled using message

317
00:10:35,120 --> 00:10:37,440
dependent randomness the randomness is

318
00:10:37,440 --> 00:10:39,120
derived from a random function that is

319
00:10:39,120 --> 00:10:40,959
unrelated to the random article and is

320
00:10:40,959 --> 00:10:43,040
present only in this hybrid and this

321
00:10:43,040 --> 00:10:45,360
when we mitigated using quantum pair of

322
00:10:45,360 --> 00:10:47,920
techniques next the random oracle is

323
00:10:47,920 --> 00:10:49,120
programmed

324
00:10:49,120 --> 00:10:51,040
to make the hash digest the output of

325
00:10:51,040 --> 00:10:54,160
the psf on any signature sigma by the

326
00:10:54,160 --> 00:10:56,160
properties of the psf

327
00:10:56,160 --> 00:10:57,839
the joint distribution between the hash

328
00:10:57,839 --> 00:10:59,920
digest and the signature on a gigan

329
00:10:59,920 --> 00:11:02,079
message are statistically close to the

330
00:11:02,079 --> 00:11:04,320
real experiment with their sample as

331
00:11:04,320 --> 00:11:06,480
described previously of course in the

332
00:11:06,480 --> 00:11:08,079
blind and forgeability game the

333
00:11:08,079 --> 00:11:10,800
adversary never gets to see messages

334
00:11:10,800 --> 00:11:12,560
or rather signatures for the messages in

335
00:11:12,560 --> 00:11:15,360
the blind set and finally of course it

336
00:11:15,360 --> 00:11:17,360
has to produce a forgery that lies in

337
00:11:17,360 --> 00:11:18,720
the blind set

338
00:11:18,720 --> 00:11:20,880
so suppose we have a forgery that is m

339
00:11:20,880 --> 00:11:22,880
star and sing master

340
00:11:22,880 --> 00:11:24,560
now let sigma prime describe the

341
00:11:24,560 --> 00:11:26,480
signature that would be returned by the

342
00:11:26,480 --> 00:11:28,720
challenger if the adversary vertical

343
00:11:28,720 --> 00:11:30,240
query m star

344
00:11:30,240 --> 00:11:32,880
we have one of two possible outcomes

345
00:11:32,880 --> 00:11:34,880
either sigma star is equal to sigma

346
00:11:34,880 --> 00:11:35,760
prime

347
00:11:35,760 --> 00:11:37,680
which violates the pre-image min entropy

348
00:11:37,680 --> 00:11:39,519
condition because the adversary should

349
00:11:39,519 --> 00:11:41,120
not be able to predict

350
00:11:41,120 --> 00:11:42,240
sigma

351
00:11:42,240 --> 00:11:44,000
prime with more than negligible

352
00:11:44,000 --> 00:11:46,480
probability our sigma star is not equal

353
00:11:46,480 --> 00:11:48,240
to sigma prime

354
00:11:48,240 --> 00:11:50,000
which would in turn violate collision

355
00:11:50,000 --> 00:11:52,160
resistance in this way we are able to

356
00:11:52,160 --> 00:11:54,000
show that the scheme is

357
00:11:54,000 --> 00:11:55,680
blind and forgeable in the quantum

358
00:11:55,680 --> 00:11:57,519
random oracle model

359
00:11:57,519 --> 00:11:59,440
let us now move to our signature scheme

360
00:11:59,440 --> 00:12:00,959
in the plane model

361
00:12:00,959 --> 00:12:02,639
let's get into the key components

362
00:12:02,639 --> 00:12:04,880
required for a plane signature scheme

363
00:12:04,880 --> 00:12:06,560
the techniques we use are a combination

364
00:12:06,560 --> 00:12:08,800
of the left right backdoor paradigm

365
00:12:08,800 --> 00:12:12,399
as in agarwal boyan and bonnet 2010 and

366
00:12:12,399 --> 00:12:14,160
key homomorphic evaluation techniques

367
00:12:14,160 --> 00:12:15,680
from brackerski and wycon to nathan

368
00:12:15,680 --> 00:12:16,959
2014.

369
00:12:16,959 --> 00:12:18,639
to keep things short we won't get into

370
00:12:18,639 --> 00:12:20,399
these techniques but their core can be

371
00:12:20,399 --> 00:12:22,320
summarized as follows

372
00:12:22,320 --> 00:12:24,240
for any string x we can create a

373
00:12:24,240 --> 00:12:26,399
corresponding white matrix bx of the

374
00:12:26,399 --> 00:12:27,920
following form

375
00:12:27,920 --> 00:12:30,240
the left part of b has a matrix a

376
00:12:30,240 --> 00:12:33,600
sampled at random with entries in z q

377
00:12:33,600 --> 00:12:36,160
for a large enough modulus q a can be

378
00:12:36,160 --> 00:12:39,040
sampled with an sis chapter ta that

379
00:12:39,040 --> 00:12:40,639
allows us to generate short integer

380
00:12:40,639 --> 00:12:42,880
solutions corresponding to a the right

381
00:12:42,880 --> 00:12:45,360
half of the matrix bx has the form a

382
00:12:45,360 --> 00:12:46,399
prime

383
00:12:46,399 --> 00:12:50,160
minus f of x for some efficient f

384
00:12:50,160 --> 00:12:51,760
along with g

385
00:12:51,760 --> 00:12:54,079
g here is the gadget matrix and it's a

386
00:12:54,079 --> 00:12:56,560
fixed public matrix so we also have a

387
00:12:56,560 --> 00:12:59,120
fixed public trapdoor sis chapter for g

388
00:12:59,120 --> 00:13:02,079
the point now here is that we can sample

389
00:13:02,079 --> 00:13:04,399
sis chapters for the whole wide matrix

390
00:13:04,399 --> 00:13:05,680
bx

391
00:13:05,680 --> 00:13:07,680
in two ways either we can use the left

392
00:13:07,680 --> 00:13:10,639
chapter ta or the right one tg and this

393
00:13:10,639 --> 00:13:12,800
will be crucial to our secret signature

394
00:13:12,800 --> 00:13:13,839
scheme

395
00:13:13,839 --> 00:13:15,360
let us turn to our actual signature

396
00:13:15,360 --> 00:13:16,639
scheme

397
00:13:16,639 --> 00:13:18,240
for any message m

398
00:13:18,240 --> 00:13:20,959
we can create the following matrix bm

399
00:13:20,959 --> 00:13:22,399
where the role of the function f from

400
00:13:22,399 --> 00:13:24,800
before is now taken over by a bit prf

401
00:13:24,800 --> 00:13:26,959
namely bm has the following form where a

402
00:13:26,959 --> 00:13:30,000
is a random matrix sample just as before

403
00:13:30,000 --> 00:13:32,240
and the right half has the following

404
00:13:32,240 --> 00:13:33,120
form

405
00:13:33,120 --> 00:13:34,480
namely a prime

406
00:13:34,480 --> 00:13:36,320
minus a

407
00:13:36,320 --> 00:13:39,600
subscript f and m it can be seen

408
00:13:39,600 --> 00:13:41,440
as an encoded form of the output of the

409
00:13:41,440 --> 00:13:43,199
prf on the message

410
00:13:43,199 --> 00:13:45,360
as described previously we sample a

411
00:13:45,360 --> 00:13:48,480
along with a sis trapdoor and in turn

412
00:13:48,480 --> 00:13:50,000
our signature scheme

413
00:13:50,000 --> 00:13:51,920
has a public key consisting of the

414
00:13:51,920 --> 00:13:54,240
components required to create bm

415
00:13:54,240 --> 00:13:56,480
where the matrices c0 c1 can be seen as

416
00:13:56,480 --> 00:13:58,880
encodings for the message

417
00:13:58,880 --> 00:14:01,040
and the matrices ki can be seen as

418
00:14:01,040 --> 00:14:03,199
encodings of the prf secret key the

419
00:14:03,199 --> 00:14:05,440
corresponding secret key is of course

420
00:14:05,440 --> 00:14:07,760
the sis trap.ta

421
00:14:07,760 --> 00:14:09,440
a particular combination of techniques

422
00:14:09,440 --> 00:14:11,040
are similar to the work of boyen and lee

423
00:14:11,040 --> 00:14:13,760
from 2016 who create a similar signature

424
00:14:13,760 --> 00:14:14,720
scheme

425
00:14:14,720 --> 00:14:16,800
a signature sigma is actually just a

426
00:14:16,800 --> 00:14:18,639
vector in the null space

427
00:14:18,639 --> 00:14:20,000
of b m

428
00:14:20,000 --> 00:14:22,720
namely bm times sigma should be zero

429
00:14:22,720 --> 00:14:24,480
and of course given the secret key

430
00:14:24,480 --> 00:14:26,480
namely the size chapter for a one can

431
00:14:26,480 --> 00:14:29,279
create such a signature easily

432
00:14:29,279 --> 00:14:31,199
note that the signature is also compact

433
00:14:31,199 --> 00:14:32,720
meaning that the signature size is not

434
00:14:32,720 --> 00:14:35,199
directly dependent on the message length

435
00:14:35,199 --> 00:14:37,120
let us quickly go over why the signature

436
00:14:37,120 --> 00:14:39,199
scheme is secure

437
00:14:39,199 --> 00:14:41,120
we consider a hybrid form of the

438
00:14:41,120 --> 00:14:42,880
unforgeability challenge with public

439
00:14:42,880 --> 00:14:45,040
keys generated differently

440
00:14:45,040 --> 00:14:47,279
namely the component matrices in the

441
00:14:47,279 --> 00:14:49,360
public key are sampled in a different

442
00:14:49,360 --> 00:14:51,040
manner with the end result being that

443
00:14:51,040 --> 00:14:53,279
the wide matrix bm now appears as

444
00:14:53,279 --> 00:14:54,240
follows

445
00:14:54,240 --> 00:14:56,000
the left part of bm is still a random

446
00:14:56,000 --> 00:14:58,720
matrix a with entries in zq

447
00:14:58,720 --> 00:15:00,880
however a is no longer sampled with an

448
00:15:00,880 --> 00:15:02,959
sis trapped or ta and it is no longer

449
00:15:02,959 --> 00:15:04,880
available to the challenger

450
00:15:04,880 --> 00:15:07,120
the right part of a has the form a times

451
00:15:07,120 --> 00:15:09,760
a matrix r plus one minus f of m along

452
00:15:09,760 --> 00:15:10,880
with g

453
00:15:10,880 --> 00:15:13,120
f is still a prf but now it becomes an

454
00:15:13,120 --> 00:15:15,279
epsilon biased bit prf

455
00:15:15,279 --> 00:15:16,800
which we will come to shortly and which

456
00:15:16,800 --> 00:15:19,199
will be crucial

457
00:15:19,199 --> 00:15:21,120
r is a low norm matrix with short

458
00:15:21,120 --> 00:15:22,399
entries

459
00:15:22,399 --> 00:15:24,560
and t g

460
00:15:24,560 --> 00:15:26,880
is the trap door sis traveler for the

461
00:15:26,880 --> 00:15:28,959
gadget matrix g and it now becomes a

462
00:15:28,959 --> 00:15:31,120
secret key for the challenger

463
00:15:31,120 --> 00:15:32,160
the full

464
00:15:32,160 --> 00:15:34,000
the two following cases can be easily

465
00:15:34,000 --> 00:15:35,279
seen

466
00:15:35,279 --> 00:15:37,759
if f on m is zero

467
00:15:37,759 --> 00:15:39,600
then the challenger can easily sample

468
00:15:39,600 --> 00:15:42,000
size solutions for bm in this

469
00:15:42,000 --> 00:15:44,399
hybrid and therefore can sign

470
00:15:44,399 --> 00:15:47,440
if f on m is one however the challenger

471
00:15:47,440 --> 00:15:50,079
can no longer sign and in fact

472
00:15:50,079 --> 00:15:51,839
any signature that is forced by the

473
00:15:51,839 --> 00:15:55,040
adversary can be used as an sis solution

474
00:15:55,040 --> 00:15:57,680
for bm which can be transformed to an

475
00:15:57,680 --> 00:15:59,759
sis solution for an independently

476
00:15:59,759 --> 00:16:01,120
sampled instance

477
00:16:01,120 --> 00:16:03,600
so using such a forgery we can break

478
00:16:03,600 --> 00:16:06,160
the hardness of the sis problem

479
00:16:06,160 --> 00:16:08,320
now the important thing to note here is

480
00:16:08,320 --> 00:16:10,320
if s

481
00:16:10,320 --> 00:16:14,000
if f is a normal prf

482
00:16:14,000 --> 00:16:16,000
then it outputs 0 or 1 with equal

483
00:16:16,000 --> 00:16:18,480
probability over the message space

484
00:16:18,480 --> 00:16:20,480
this is not useful to us

485
00:16:20,480 --> 00:16:22,639
however if f is an epsilon biased bit

486
00:16:22,639 --> 00:16:26,079
prf meaning it only outputs one

487
00:16:26,079 --> 00:16:28,000
with weight epsilon or probability

488
00:16:28,000 --> 00:16:30,480
epsilon then this models an uniformly

489
00:16:30,480 --> 00:16:32,639
sampled blind set of weight epsilon for

490
00:16:32,639 --> 00:16:35,120
us and so we can directly use it in the

491
00:16:35,120 --> 00:16:37,519
blind unforgeability challenge

492
00:16:37,519 --> 00:16:39,759
and this technique will actually give us

493
00:16:39,759 --> 00:16:41,360
a reduction

494
00:16:41,360 --> 00:16:43,279
from the unforgeability of the signature

495
00:16:43,279 --> 00:16:45,040
scheme to the hardness of the sis

496
00:16:45,040 --> 00:16:47,199
problem finally let us turn to the

497
00:16:47,199 --> 00:16:50,399
quantum security of ring signatures

498
00:16:50,399 --> 00:16:53,040
firstly what are ring signatures well

499
00:16:53,040 --> 00:16:54,399
they considered the setting where we

500
00:16:54,399 --> 00:16:56,800
have a set or a ring of users each with

501
00:16:56,800 --> 00:16:58,880
their own corresponding public key

502
00:16:58,880 --> 00:17:01,279
any user in this ring can produce a

503
00:17:01,279 --> 00:17:03,199
signature on behalf of the entire ring

504
00:17:03,199 --> 00:17:04,720
which is identified with the list of

505
00:17:04,720 --> 00:17:07,119
public keys the crucial thing is that

506
00:17:07,119 --> 00:17:09,039
there is no interaction required between

507
00:17:09,039 --> 00:17:11,039
this user and the other users in the

508
00:17:11,039 --> 00:17:12,400
ring

509
00:17:12,400 --> 00:17:14,240
the properties we expect here are

510
00:17:14,240 --> 00:17:16,319
unforgeability which in this case means

511
00:17:16,319 --> 00:17:18,880
that no entity outside of a ring can

512
00:17:18,880 --> 00:17:20,720
force signatures on behalf of that

513
00:17:20,720 --> 00:17:23,039
particular ring and anonymity meaning

514
00:17:23,039 --> 00:17:24,959
that nobody can tell

515
00:17:24,959 --> 00:17:26,880
which particular user in a ring signed a

516
00:17:26,880 --> 00:17:29,039
given message ring signatures have

517
00:17:29,039 --> 00:17:31,120
various uses

518
00:17:31,120 --> 00:17:32,720
including but not restricted to

519
00:17:32,720 --> 00:17:35,600
whistleblowing and blockchains

520
00:17:35,600 --> 00:17:37,600
in this talk we will be focusing on the

521
00:17:37,600 --> 00:17:39,919
unforgeability property as extending

522
00:17:39,919 --> 00:17:41,679
anonymity to the quantum setting is

523
00:17:41,679 --> 00:17:43,840
relatively straightforward and does not

524
00:17:43,840 --> 00:17:46,480
present new technical challenges

525
00:17:46,480 --> 00:17:48,240
it helps to start from the classical

526
00:17:48,240 --> 00:17:50,080
version of the definition

527
00:17:50,080 --> 00:17:51,440
this involves an adversary in the

528
00:17:51,440 --> 00:17:53,120
challenger as before where the

529
00:17:53,120 --> 00:17:55,280
challenger now generates a universe of q

530
00:17:55,280 --> 00:17:56,480
public keys

531
00:17:56,480 --> 00:17:59,360
vk1 through vkq

532
00:17:59,360 --> 00:18:01,440
to generate a ring signature

533
00:18:01,440 --> 00:18:03,679
one has to specify a message and a ring

534
00:18:03,679 --> 00:18:06,080
of his choice and the adversary can do

535
00:18:06,080 --> 00:18:06,960
so

536
00:18:06,960 --> 00:18:08,640
in terms of sign inquiries and get the

537
00:18:08,640 --> 00:18:10,559
corresponding signatures

538
00:18:10,559 --> 00:18:12,559
the adversary can also issue corruption

539
00:18:12,559 --> 00:18:13,600
queries

540
00:18:13,600 --> 00:18:15,520
where it can get the signing key for a

541
00:18:15,520 --> 00:18:17,679
particular user which is considered to

542
00:18:17,679 --> 00:18:19,520
have been corrupted

543
00:18:19,520 --> 00:18:21,440
finally the adversary has to produce a

544
00:18:21,440 --> 00:18:23,200
forgery

545
00:18:23,200 --> 00:18:24,240
of

546
00:18:24,240 --> 00:18:26,720
on a message and a ring of its choice

547
00:18:26,720 --> 00:18:29,039
this forgery is considered to be valid

548
00:18:29,039 --> 00:18:31,600
only if it is a violent ring signature

549
00:18:31,600 --> 00:18:34,000
and the ring presented by the adversary

550
00:18:34,000 --> 00:18:36,480
has no members previously corrupted by

551
00:18:36,480 --> 00:18:37,200
it

552
00:18:37,200 --> 00:18:38,960
since we use it as a starting point for

553
00:18:38,960 --> 00:18:41,840
our construction let us also look at the

554
00:18:41,840 --> 00:18:43,679
construction of the ring signature from

555
00:18:43,679 --> 00:18:45,919
chatterjee gurg and others

556
00:18:45,919 --> 00:18:48,720
this signature scheme uses as components

557
00:18:48,720 --> 00:18:50,720
a standard signature scheme

558
00:18:50,720 --> 00:18:52,720
an encryption scheme

559
00:18:52,720 --> 00:18:54,480
a zap system

560
00:18:54,480 --> 00:18:56,559
and a somewhere perfectly binding hash

561
00:18:56,559 --> 00:18:57,440
scheme

562
00:18:57,440 --> 00:18:59,360
the verification key for the ring

563
00:18:59,360 --> 00:19:01,679
signature consists of a verification key

564
00:19:01,679 --> 00:19:03,919
for the standard signature

565
00:19:03,919 --> 00:19:07,039
a public key for the encryption scheme

566
00:19:07,039 --> 00:19:09,280
and finally the first message of a zap

567
00:19:09,280 --> 00:19:10,720
proof

568
00:19:10,720 --> 00:19:13,120
that comes from the verifier

569
00:19:13,120 --> 00:19:15,039
the corresponding ring signature signing

570
00:19:15,039 --> 00:19:15,840
key

571
00:19:15,840 --> 00:19:18,160
has the normal signing key in addition

572
00:19:18,160 --> 00:19:20,720
the actual signatures itself is made of

573
00:19:20,720 --> 00:19:22,400
the following components

574
00:19:22,400 --> 00:19:24,000
firstly a standard signature for the

575
00:19:24,000 --> 00:19:26,000
message is generated and then encrypted

576
00:19:26,000 --> 00:19:27,440
using the public key for the encryption

577
00:19:27,440 --> 00:19:28,400
scheme

578
00:19:28,400 --> 00:19:30,480
second we generate a hash key for the

579
00:19:30,480 --> 00:19:33,840
spb hash scheme the spb hash is not

580
00:19:33,840 --> 00:19:36,240
important to our construction and can be

581
00:19:36,240 --> 00:19:38,000
simply thought of as a variant of a

582
00:19:38,000 --> 00:19:40,320
merkle tree with certain statistically

583
00:19:40,320 --> 00:19:42,640
binding properties so that

584
00:19:42,640 --> 00:19:45,120
it allows for compressing the ring of

585
00:19:45,120 --> 00:19:48,000
public keys into a small digest stage

586
00:19:48,000 --> 00:19:49,760
finally the signature has the

587
00:19:49,760 --> 00:19:51,760
corresponding prover message for this

588
00:19:51,760 --> 00:19:53,440
app scheme

589
00:19:53,440 --> 00:19:55,360
with respect to the first message that

590
00:19:55,360 --> 00:19:57,760
is part of the verification key

591
00:19:57,760 --> 00:20:01,440
this lab proof simply proves that

592
00:20:01,440 --> 00:20:03,440
we have a component ciphertext that is

593
00:20:03,440 --> 00:20:05,600
properly generated and that encrypts a

594
00:20:05,600 --> 00:20:07,679
properly generated signature with

595
00:20:07,679 --> 00:20:09,600
respect to the ring in question

596
00:20:09,600 --> 00:20:10,640
this is just a sketch of the

597
00:20:10,640 --> 00:20:12,559
construction and the actual construction

598
00:20:12,559 --> 00:20:14,880
has a pair of encrypted signatures and

599
00:20:14,880 --> 00:20:16,000
hash keys

600
00:20:16,000 --> 00:20:17,280
because we rely on witness and

601
00:20:17,280 --> 00:20:19,120
distinguishability

602
00:20:19,120 --> 00:20:20,960
next let us take a quick look at why the

603
00:20:20,960 --> 00:20:22,640
signature scheme satisfies all the

604
00:20:22,640 --> 00:20:24,799
desired properties the signature has the

605
00:20:24,799 --> 00:20:26,799
following form where it is an encrypted

606
00:20:26,799 --> 00:20:28,480
standard signature followed by a hash

607
00:20:28,480 --> 00:20:31,440
key along with a zap proof note that the

608
00:20:31,440 --> 00:20:33,280
entire signature does not use the ring

609
00:20:33,280 --> 00:20:34,640
anywhere

610
00:20:34,640 --> 00:20:36,799
and the hash key allows us to hash the

611
00:20:36,799 --> 00:20:38,960
ring into small digest which is also

612
00:20:38,960 --> 00:20:40,559
used in the proof meaning that the proof

613
00:20:40,559 --> 00:20:42,080
itself does not depend on the size of

614
00:20:42,080 --> 00:20:44,000
the entire ring and can be made

615
00:20:44,000 --> 00:20:45,679
logarithmic in the ring size thus

616
00:20:45,679 --> 00:20:48,240
naturally guaranteeing compactness

617
00:20:48,240 --> 00:20:50,240
next unforgeability is shown by moving

618
00:20:50,240 --> 00:20:51,600
to a hybrid

619
00:20:51,600 --> 00:20:53,520
where we then essentially manage to show

620
00:20:53,520 --> 00:20:56,000
that either the zap proof provided by

621
00:20:56,000 --> 00:20:57,440
the adversary

622
00:20:57,440 --> 00:20:59,280
proves a false statement

623
00:20:59,280 --> 00:21:02,720
or we can extract an encrypted signature

624
00:21:02,720 --> 00:21:04,080
and in turn

625
00:21:04,080 --> 00:21:05,280
extract the signature from the

626
00:21:05,280 --> 00:21:06,400
encryption

627
00:21:06,400 --> 00:21:08,480
that is bound to be a forged signature

628
00:21:08,480 --> 00:21:10,080
this relies on properties of the

629
00:21:10,080 --> 00:21:12,159
underlying encryption scheme

630
00:21:12,159 --> 00:21:13,840
finally as mentioned before we don't

631
00:21:13,840 --> 00:21:16,799
touch on anonymity in detail

632
00:21:16,799 --> 00:21:18,880
but this follows from

633
00:21:18,880 --> 00:21:20,240
a simple

634
00:21:20,240 --> 00:21:22,159
swapping argument that uses the dummy

635
00:21:22,159 --> 00:21:23,679
block effectively and relies on the

636
00:21:23,679 --> 00:21:25,440
witness and distinguishability of this

637
00:21:25,440 --> 00:21:26,480
app

638
00:21:26,480 --> 00:21:28,159
finally let us turn to our quantum

639
00:21:28,159 --> 00:21:29,919
definition of ring signature and forge

640
00:21:29,919 --> 00:21:32,559
ability as mentioned before

641
00:21:32,559 --> 00:21:34,480
this draws from the blind unforgivable

642
00:21:34,480 --> 00:21:35,520
definition

643
00:21:35,520 --> 00:21:37,280
and proceeds as follows

644
00:21:37,280 --> 00:21:38,880
the adversary interacts with the ring

645
00:21:38,880 --> 00:21:41,120
signature and forgeability challenger

646
00:21:41,120 --> 00:21:42,880
which issues this universe of public

647
00:21:42,880 --> 00:21:44,640
keys as before

648
00:21:44,640 --> 00:21:46,559
the adversary is now able to query for

649
00:21:46,559 --> 00:21:49,200
signatures on superpositions that are

650
00:21:49,200 --> 00:21:51,520
over both the message and the ring and

651
00:21:51,520 --> 00:21:53,760
look as follows

652
00:21:53,760 --> 00:21:55,200
it remains to be pointed out that this

653
00:21:55,200 --> 00:21:57,120
is a natural generalization and

654
00:21:57,120 --> 00:21:58,720
something we would expect

655
00:21:58,720 --> 00:22:00,960
each user in a ring signature generates

656
00:22:00,960 --> 00:22:03,679
signatures on their own and the ring is

657
00:22:03,679 --> 00:22:05,600
just an additional input parameter to

658
00:22:05,600 --> 00:22:07,440
the signing algorithm and so it makes

659
00:22:07,440 --> 00:22:09,440
sense to consider superpositions over

660
00:22:09,440 --> 00:22:11,039
them the challenger returns the

661
00:22:11,039 --> 00:22:12,159
corresponding signature and

662
00:22:12,159 --> 00:22:13,760
superposition

663
00:22:13,760 --> 00:22:14,960
with the signing oracle being

664
00:22:14,960 --> 00:22:17,760
appropriately blinded

665
00:22:17,760 --> 00:22:19,600
additionally in this case

666
00:22:19,600 --> 00:22:21,600
we have to maintain a blind set that is

667
00:22:21,600 --> 00:22:23,840
over both messages and rings and not

668
00:22:23,840 --> 00:22:26,240
over each individually the corruption

669
00:22:26,240 --> 00:22:28,320
queries however remain classical in our

670
00:22:28,320 --> 00:22:29,679
definition because there is no

671
00:22:29,679 --> 00:22:31,520
meaningful intuition for considering

672
00:22:31,520 --> 00:22:33,039
quantum corruptions

673
00:22:33,039 --> 00:22:35,600
indeed to corrupt us user means to take

674
00:22:35,600 --> 00:22:37,840
over their signing duties and at least

675
00:22:37,840 --> 00:22:39,919
at the moment it is unclear how we would

676
00:22:39,919 --> 00:22:42,559
consider such a task and superposition

677
00:22:42,559 --> 00:22:45,679
so we retained classical corruptions

678
00:22:45,679 --> 00:22:47,760
finally the adversary must produce

679
00:22:47,760 --> 00:22:49,440
signature

680
00:22:49,440 --> 00:22:51,440
a forgery as before

681
00:22:51,440 --> 00:22:53,039
and now in contrast to the classical

682
00:22:53,039 --> 00:22:56,000
definition we simply have that the

683
00:22:56,000 --> 00:22:58,480
signature must be valid and the message

684
00:22:58,480 --> 00:23:00,799
and the ring must lie in the blind set

685
00:23:00,799 --> 00:23:03,120
a hidden detail here is that to properly

686
00:23:03,120 --> 00:23:04,960
construct the blind set

687
00:23:04,960 --> 00:23:07,360
we have to fix the size of the rings

688
00:23:07,360 --> 00:23:09,440
used by the adversary but this is not a

689
00:23:09,440 --> 00:23:10,880
problem

690
00:23:10,880 --> 00:23:12,799
how can we make the previous template

691
00:23:12,799 --> 00:23:15,200
secure against this definition well the

692
00:23:15,200 --> 00:23:17,760
first step of course needs to be that we

693
00:23:17,760 --> 00:23:19,600
make the underlying signature scheme

694
00:23:19,600 --> 00:23:22,000
blind and forgeable in the quantum sense

695
00:23:22,000 --> 00:23:24,240
additionally our zap must be sound

696
00:23:24,240 --> 00:23:26,559
against efficient quantum provers which

697
00:23:26,559 --> 00:23:28,720
is already the case for the zap used in

698
00:23:28,720 --> 00:23:30,240
the previous template so we don't have

699
00:23:30,240 --> 00:23:32,320
to worry about it in our reduction from

700
00:23:32,320 --> 00:23:34,480
this definition to standard blind and

701
00:23:34,480 --> 00:23:36,240
forge ability we need to maintain

702
00:23:36,240 --> 00:23:38,640
consistency between the blind sets in a

703
00:23:38,640 --> 00:23:39,919
certain form

704
00:23:39,919 --> 00:23:42,000
and unfortunately this means that we

705
00:23:42,000 --> 00:23:43,360
have to sign

706
00:23:43,360 --> 00:23:45,600
the message along with the ring to

707
00:23:45,600 --> 00:23:47,520
ensure this consistency

708
00:23:47,520 --> 00:23:50,400
this makes this construction non-compact

709
00:23:50,400 --> 00:23:52,400
and we can remove the hash key for

710
00:23:52,400 --> 00:23:54,080
simplicity since now it serves no

711
00:23:54,080 --> 00:23:55,440
purpose

712
00:23:55,440 --> 00:23:57,919
with these modifications we can adapt

713
00:23:57,919 --> 00:23:59,760
the reduction from the previous template

714
00:23:59,760 --> 00:24:01,919
and use it to show that the resulting

715
00:24:01,919 --> 00:24:03,600
construction

716
00:24:03,600 --> 00:24:05,440
satisfies the blind and forgivability

717
00:24:05,440 --> 00:24:07,840
definition for ring signatures

718
00:24:07,840 --> 00:24:09,840
this brings us to the end of our content

719
00:24:09,840 --> 00:24:11,840
and now we can consider a few open

720
00:24:11,840 --> 00:24:13,440
problems that might be interesting to

721
00:24:13,440 --> 00:24:14,720
think about

722
00:24:14,720 --> 00:24:17,600
first standing open problem remains is

723
00:24:17,600 --> 00:24:19,679
follows easily from the last slide which

724
00:24:19,679 --> 00:24:21,360
is can we construct compact ring

725
00:24:21,360 --> 00:24:23,520
signatures under our definition

726
00:24:23,520 --> 00:24:25,039
and of course we don't have an answer

727
00:24:25,039 --> 00:24:26,080
yet

728
00:24:26,080 --> 00:24:27,679
additionally we could consider more

729
00:24:27,679 --> 00:24:29,679
efficient standard signatures

730
00:24:29,679 --> 00:24:31,279
or signatures in other models and

731
00:24:31,279 --> 00:24:34,320
assumptions based on this definition

732
00:24:34,320 --> 00:24:36,000
which might be interesting because this

733
00:24:36,000 --> 00:24:38,880
definition is very appealing

734
00:24:38,880 --> 00:24:40,960
finally we could consider further

735
00:24:40,960 --> 00:24:43,200
definitions that might be adapted to

736
00:24:43,200 --> 00:24:45,760
different cases in the quantum setting

737
00:24:45,760 --> 00:24:48,000
and may offer additional advantages that

738
00:24:48,000 --> 00:24:49,600
may be appealing just as blind

739
00:24:49,600 --> 00:24:51,440
unforgeability does over standard one

740
00:24:51,440 --> 00:24:52,880
more enforceability in the quantum

741
00:24:52,880 --> 00:24:54,080
setting

742
00:24:54,080 --> 00:24:55,919
that brings us to the end of our talk

743
00:24:55,919 --> 00:24:57,440
and thank you for watching and listening

744
00:24:57,440 --> 00:24:59,200
and following along we invite you to

745
00:24:59,200 --> 00:25:01,360
check out our full paper available at

746
00:25:01,360 --> 00:25:05,799
this url thank you

747
00:25:18,960 --> 00:25:21,039
you

