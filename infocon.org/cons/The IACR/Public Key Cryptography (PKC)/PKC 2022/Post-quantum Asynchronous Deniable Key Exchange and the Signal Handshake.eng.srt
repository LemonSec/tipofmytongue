1
00:00:00,799 --> 00:00:03,919
hi everybody my name is una fitla in

2
00:00:03,919 --> 00:00:06,319
this presentation i will show you how we

3
00:00:06,319 --> 00:00:08,720
have built a post quantum version of an

4
00:00:08,720 --> 00:00:10,880
asynchronous deniable key exchange

5
00:00:10,880 --> 00:00:12,000
protocol

6
00:00:12,000 --> 00:00:13,679
and how we use this for the signal

7
00:00:13,679 --> 00:00:15,040
handshake

8
00:00:15,040 --> 00:00:16,640
this is trying to work with jacqueline

9
00:00:16,640 --> 00:00:19,119
brendell felix gunter christian jansson

10
00:00:19,119 --> 00:00:21,600
and douglas stabula

11
00:00:21,600 --> 00:00:23,680
first let's review the setting of

12
00:00:23,680 --> 00:00:25,279
instant messaging

13
00:00:25,279 --> 00:00:27,279
alice wants to initiate a conversation

14
00:00:27,279 --> 00:00:28,320
with bob

15
00:00:28,320 --> 00:00:30,160
if both of them are online at the same

16
00:00:30,160 --> 00:00:32,800
point in time this is straightforward

17
00:00:32,800 --> 00:00:35,360
however what do we do if bob is offline

18
00:00:35,360 --> 00:00:36,719
when alice wants to initiate the

19
00:00:36,719 --> 00:00:38,239
conversation

20
00:00:38,239 --> 00:00:41,040
in this case we can use a key server

21
00:00:41,040 --> 00:00:43,680
and bob uploads a so-called pre-key

22
00:00:43,680 --> 00:00:47,360
bundle to the key server ahead of time

23
00:00:47,360 --> 00:00:49,200
then alice when she wants to initiate

24
00:00:49,200 --> 00:00:51,680
the conversation queries the key server

25
00:00:51,680 --> 00:00:54,079
to get bob's pre-key bundle

26
00:00:54,079 --> 00:00:55,760
using this free key bundle she can

27
00:00:55,760 --> 00:00:58,000
compute her first message and sent it to

28
00:00:58,000 --> 00:01:00,320
bob who can read it whenever he's coming

29
00:01:00,320 --> 00:01:01,680
back online

30
00:01:01,680 --> 00:01:04,080
afterwards both of them can keep sending

31
00:01:04,080 --> 00:01:05,600
messages to each other at their

32
00:01:05,600 --> 00:01:07,760
convenience

33
00:01:07,760 --> 00:01:11,280
this feature is called asynchronicity

34
00:01:11,280 --> 00:01:13,439
another feature that we want is mutual

35
00:01:13,439 --> 00:01:15,680
authentication that means that each

36
00:01:15,680 --> 00:01:17,520
party should be sure that they are

37
00:01:17,520 --> 00:01:19,439
actually talking to the party that they

38
00:01:19,439 --> 00:01:21,840
think they are talking to

39
00:01:21,840 --> 00:01:23,680
and the third feature that signal is

40
00:01:23,680 --> 00:01:24,960
looking for is called offline

41
00:01:24,960 --> 00:01:26,479
deniability

42
00:01:26,479 --> 00:01:28,720
intuitively this means that

43
00:01:28,720 --> 00:01:30,240
if you have a transcript of a

44
00:01:30,240 --> 00:01:32,799
conversation then you can deny that you

45
00:01:32,799 --> 00:01:34,240
were involved in creating this

46
00:01:34,240 --> 00:01:36,400
transcript but we will go into the

47
00:01:36,400 --> 00:01:37,759
details of this

48
00:01:37,759 --> 00:01:41,280
more later on

49
00:01:41,280 --> 00:01:43,920
the first few messages so when they

50
00:01:43,920 --> 00:01:46,479
agree when they first agree on a key

51
00:01:46,479 --> 00:01:48,479
this protocol is called the extended

52
00:01:48,479 --> 00:01:51,360
triple diffie-hellman protocol or x3dh

53
00:01:51,360 --> 00:01:54,000
for short

54
00:01:54,000 --> 00:01:56,159
when later on when both parties keep

55
00:01:56,159 --> 00:01:58,640
updating their keys to send new messages

56
00:01:58,640 --> 00:02:00,000
this is called the double wretched

57
00:02:00,000 --> 00:02:02,000
protocol

58
00:02:02,000 --> 00:02:04,399
and let's have a look in more detail at

59
00:02:04,399 --> 00:02:07,119
the initial handshake

60
00:02:07,119 --> 00:02:09,758
here we have again alice and bob and

61
00:02:09,758 --> 00:02:11,440
both of them have a long term key and an

62
00:02:11,440 --> 00:02:14,319
ephemera key in addition bob has a

63
00:02:14,319 --> 00:02:16,720
semi-static key

64
00:02:16,720 --> 00:02:18,800
and first bob has transferred his

65
00:02:18,800 --> 00:02:21,120
pre-key bundle to alice via the key

66
00:02:21,120 --> 00:02:23,280
server

67
00:02:23,280 --> 00:02:26,239
the pre-keep unlock bob consists of

68
00:02:26,239 --> 00:02:27,440
several

69
00:02:27,440 --> 00:02:29,760
diffie-hellman public keys

70
00:02:29,760 --> 00:02:32,000
and alice also has round if you harm on

71
00:02:32,000 --> 00:02:34,400
public keys and pairs them according to

72
00:02:34,400 --> 00:02:37,519
these arrows here so alice's long term

73
00:02:37,519 --> 00:02:40,160
share goes with bob semi static share

74
00:02:40,160 --> 00:02:42,319
and alice's ephemeral share goes with

75
00:02:42,319 --> 00:02:45,440
each of bob's shares

76
00:02:45,680 --> 00:02:48,239
and then alice sends her own to defeat

77
00:02:48,239 --> 00:02:50,800
hermann shares to bob so that bob can

78
00:02:50,800 --> 00:02:55,120
compute the same tiffehaman shared keys

79
00:02:55,360 --> 00:02:57,440
this protocol however is not post

80
00:02:57,440 --> 00:02:59,440
quantum

81
00:02:59,440 --> 00:03:01,120
because it relies on the diffie-harman

82
00:03:01,120 --> 00:03:03,519
assumption which does not hold against

83
00:03:03,519 --> 00:03:06,560
quantum adversaries

84
00:03:06,720 --> 00:03:10,080
so we can see that signal consists of

85
00:03:10,080 --> 00:03:11,680
two protocols

86
00:03:11,680 --> 00:03:14,080
first the initial handshake extended

87
00:03:14,080 --> 00:03:15,840
triple to the helmet which is not post

88
00:03:15,840 --> 00:03:17,040
quantum

89
00:03:17,040 --> 00:03:18,400
and then there's the double registered

90
00:03:18,400 --> 00:03:20,800
protocol which can be replaced with a

91
00:03:20,800 --> 00:03:22,720
post quantum alternative

92
00:03:22,720 --> 00:03:24,400
for example from key encapsulation

93
00:03:24,400 --> 00:03:27,280
mechanisms this was shown by alvin at al

94
00:03:27,280 --> 00:03:30,319
at eurocrypt 2019

95
00:03:30,319 --> 00:03:32,239
and in this talk we will focus on

96
00:03:32,239 --> 00:03:34,640
replacing the initial handshake with the

97
00:03:34,640 --> 00:03:37,760
quantum secure version

98
00:03:37,760 --> 00:03:40,080
key encapsulation mechanisms have been

99
00:03:40,080 --> 00:03:42,239
used as a post-quantum replacement for

100
00:03:42,239 --> 00:03:44,480
the diffie-hellman key exchange in

101
00:03:44,480 --> 00:03:47,760
several scenarios so let's review cams

102
00:03:47,760 --> 00:03:49,840
to see if they fit for our purpose here

103
00:03:49,840 --> 00:03:51,840
as well

104
00:03:51,840 --> 00:03:54,400
bob has a key pair and sends his public

105
00:03:54,400 --> 00:03:56,799
key over to alice alice then

106
00:03:56,799 --> 00:03:59,280
encapsulates against bob's public key

107
00:03:59,280 --> 00:04:01,280
resulting in a ciphertext and a session

108
00:04:01,280 --> 00:04:02,560
key

109
00:04:02,560 --> 00:04:05,040
she sends the ciphertext over to bob who

110
00:04:05,040 --> 00:04:07,680
can decapsulate the ciphertext by using

111
00:04:07,680 --> 00:04:10,239
his own secret key to learn the session

112
00:04:10,239 --> 00:04:11,120
key

113
00:04:11,120 --> 00:04:13,280
now both parties know the secret session

114
00:04:13,280 --> 00:04:15,519
key

115
00:04:15,519 --> 00:04:17,600
how can we use this to construct a post

116
00:04:17,600 --> 00:04:20,478
quantum version of signal

117
00:04:20,478 --> 00:04:22,240
we could try the following

118
00:04:22,240 --> 00:04:25,520
bob has three chem key pairs a long-term

119
00:04:25,520 --> 00:04:27,840
semi-static and a family key pair he

120
00:04:27,840 --> 00:04:29,600
sends over all of his public keys to

121
00:04:29,600 --> 00:04:32,160
alice and alice encapsulates against

122
00:04:32,160 --> 00:04:34,960
each of bob's public keys

123
00:04:34,960 --> 00:04:36,720
she sends over the three resulting

124
00:04:36,720 --> 00:04:39,280
cipher texts to bob

125
00:04:39,280 --> 00:04:41,520
the problem with this protocol is that

126
00:04:41,520 --> 00:04:44,160
there is no ls to bob authentication

127
00:04:44,160 --> 00:04:45,919
and bob doesn't know if this really came

128
00:04:45,919 --> 00:04:48,080
from alice or if this was actually sent

129
00:04:48,080 --> 00:04:50,080
by charlie

130
00:04:50,080 --> 00:04:52,800
to remedy this we could add a signature

131
00:04:52,800 --> 00:04:54,639
so that alice assigns the three

132
00:04:54,639 --> 00:04:57,440
ciphertexts now bob can be sure that

133
00:04:57,440 --> 00:05:00,560
this message actually came from alice

134
00:05:00,560 --> 00:05:03,199
however alice can no longer deny her

135
00:05:03,199 --> 00:05:06,000
involvement in this session because only

136
00:05:06,000 --> 00:05:07,520
alice herself

137
00:05:07,520 --> 00:05:11,120
can compute this signature

138
00:05:11,120 --> 00:05:13,680
though the idea of using chems for a

139
00:05:13,680 --> 00:05:16,080
post-quantum replacement of signal has

140
00:05:16,080 --> 00:05:17,840
been around for a bit

141
00:05:17,840 --> 00:05:20,160
previously brand led i'll have proposed

142
00:05:20,160 --> 00:05:22,080
to replace the initial handshake with a

143
00:05:22,080 --> 00:05:24,400
primitive they call split cams

144
00:05:24,400 --> 00:05:26,560
however this primitive turned out to be

145
00:05:26,560 --> 00:05:29,199
not instantiable

146
00:05:29,199 --> 00:05:31,440
but let's follow the design idea from

147
00:05:31,440 --> 00:05:34,080
the previous slide of using cams in

148
00:05:34,080 --> 00:05:35,280
combination

149
00:05:35,280 --> 00:05:37,120
with some form of deniable

150
00:05:37,120 --> 00:05:38,960
authentication

151
00:05:38,960 --> 00:05:41,199
and in this work we use designated

152
00:05:41,199 --> 00:05:42,960
verifier signatures for deniable

153
00:05:42,960 --> 00:05:44,960
authentication

154
00:05:44,960 --> 00:05:47,600
separately hashimoto have used ring

155
00:05:47,600 --> 00:05:51,280
signatures for the same purpose

156
00:05:51,280 --> 00:05:54,080
so how do designated verifier signatures

157
00:05:54,080 --> 00:05:55,199
work

158
00:05:55,199 --> 00:05:58,240
alice sends a message m to bob in a

159
00:05:58,240 --> 00:06:01,199
manner that bob can be sure this message

160
00:06:01,199 --> 00:06:03,759
was sent by alice however he cannot

161
00:06:03,759 --> 00:06:07,840
prove this fact to anybody else

162
00:06:08,000 --> 00:06:10,479
so what alice does is she can sign a

163
00:06:10,479 --> 00:06:13,199
message m with her own secret key and

164
00:06:13,199 --> 00:06:16,560
designating designates it to bob by

165
00:06:16,560 --> 00:06:18,400
including bob's public key into the

166
00:06:18,400 --> 00:06:21,360
signing algorithm and this results in an

167
00:06:21,360 --> 00:06:24,400
alice to bob signature

168
00:06:24,400 --> 00:06:27,440
similarly bob can use the simulation

169
00:06:27,440 --> 00:06:28,800
algorithm

170
00:06:28,800 --> 00:06:31,680
to create a alice-to-bob signature by

171
00:06:31,680 --> 00:06:33,840
using his own secret key as well as

172
00:06:33,840 --> 00:06:36,319
alice's public key

173
00:06:36,319 --> 00:06:39,039
and dvs schemes also have a property

174
00:06:39,039 --> 00:06:40,960
called source hiding

175
00:06:40,960 --> 00:06:43,840
which tell you that for each attacker it

176
00:06:43,840 --> 00:06:46,880
is indistinguishable if a signature was

177
00:06:46,880 --> 00:06:49,280
created using the sine algorithm or the

178
00:06:49,280 --> 00:06:52,319
simulate or the simulate algorithm even

179
00:06:52,319 --> 00:06:57,280
if the attacker knows both secret keys

180
00:06:58,479 --> 00:07:00,720
there are some post-quantum dvs

181
00:07:00,720 --> 00:07:02,960
instantiations

182
00:07:02,960 --> 00:07:04,639
which were not published in the

183
00:07:04,639 --> 00:07:06,880
mainstream cryptographic literature so

184
00:07:06,880 --> 00:07:08,720
we believe they are in need of some more

185
00:07:08,720 --> 00:07:10,639
scrutiny

186
00:07:10,639 --> 00:07:13,520
instead we propose to build the post

187
00:07:13,520 --> 00:07:15,840
quantum dvs schemes from two user ring

188
00:07:15,840 --> 00:07:17,199
signatures

189
00:07:17,199 --> 00:07:21,039
we show in our paper how to do this

190
00:07:21,039 --> 00:07:23,039
with this we have the advantage that we

191
00:07:23,039 --> 00:07:25,680
can make use of the big literature on

192
00:07:25,680 --> 00:07:28,800
post quantum ring signature schemes

193
00:07:28,800 --> 00:07:31,039
after we have published our work there

194
00:07:31,039 --> 00:07:33,919
was an update to their work of by

195
00:07:33,919 --> 00:07:36,160
hashimoto at al we showed that you can

196
00:07:36,160 --> 00:07:38,400
build a two user ring signature from a

197
00:07:38,400 --> 00:07:40,080
dvr scheme

198
00:07:40,080 --> 00:07:42,080
so it turns out to user ring signatures

199
00:07:42,080 --> 00:07:44,560
and dvr schemes are actually equivalent

200
00:07:44,560 --> 00:07:48,240
for some security notions

201
00:07:48,319 --> 00:07:50,319
now that we are equipped with a tool for

202
00:07:50,319 --> 00:07:52,639
deniable authentication let's have a

203
00:07:52,639 --> 00:07:54,400
look at the core idea of our

204
00:07:54,400 --> 00:07:56,479
asynchronous deniable authenticated key

205
00:07:56,479 --> 00:07:59,120
exchange protocol

206
00:07:59,120 --> 00:08:01,919
both alice and bob have a dvs key in the

207
00:08:01,919 --> 00:08:03,680
long term key

208
00:08:03,680 --> 00:08:06,160
and bob also has a cam key in his long

209
00:08:06,160 --> 00:08:08,879
term key and ephemera key

210
00:08:08,879 --> 00:08:11,039
it begins with bob transferring his

211
00:08:11,039 --> 00:08:13,840
public key over to alice

212
00:08:13,840 --> 00:08:16,800
and now alice can encapsulate against

213
00:08:16,800 --> 00:08:19,599
bob's long-term cam key and against

214
00:08:19,599 --> 00:08:20,639
bob's

215
00:08:20,639 --> 00:08:23,280
ephemeracam key resulting in two

216
00:08:23,280 --> 00:08:26,400
different cam cipher texts

217
00:08:26,400 --> 00:08:28,639
next alice can

218
00:08:28,639 --> 00:08:30,240
sign these

219
00:08:30,240 --> 00:08:33,279
to camp ciphertext with the dvs scheme

220
00:08:33,279 --> 00:08:35,519
resulting in an alice to borb signature

221
00:08:35,519 --> 00:08:38,159
over these two chem cipher texts

222
00:08:38,159 --> 00:08:39,839
with this we have alice to bob

223
00:08:39,839 --> 00:08:41,679
authentication while retaining

224
00:08:41,679 --> 00:08:44,720
deniability for alice

225
00:08:44,720 --> 00:08:47,839
hashimoto i'll use the same principle in

226
00:08:47,839 --> 00:08:49,920
their protocol wherever they're using a

227
00:08:49,920 --> 00:08:53,519
ring signature instead of a dvs scheme

228
00:08:53,519 --> 00:08:55,440
as promised now let's have a more

229
00:08:55,440 --> 00:08:58,480
detailed look at deniability

230
00:08:58,480 --> 00:09:01,519
the signal specification says that the

231
00:09:01,519 --> 00:09:04,080
initial handshake protocol doesn't give

232
00:09:04,080 --> 00:09:06,399
either alice or bob publishable

233
00:09:06,399 --> 00:09:08,320
cryptographic proof of the contents of

234
00:09:08,320 --> 00:09:10,000
the communication

235
00:09:10,000 --> 00:09:12,000
or the fact that they communicated at

236
00:09:12,000 --> 00:09:13,440
all

237
00:09:13,440 --> 00:09:15,279
in other words

238
00:09:15,279 --> 00:09:17,600
if there is a third party and this third

239
00:09:17,600 --> 00:09:20,800
party has access to private keys from

240
00:09:20,800 --> 00:09:23,760
alice or bob and this third party has

241
00:09:23,760 --> 00:09:25,760
access to a communication transcript

242
00:09:25,760 --> 00:09:28,480
that appears to be between alice and bob

243
00:09:28,480 --> 00:09:30,720
then this transcript can only have been

244
00:09:30,720 --> 00:09:33,760
created by some party who has the

245
00:09:33,760 --> 00:09:35,839
legitimate private keys from alice of

246
00:09:35,839 --> 00:09:38,080
bob

247
00:09:38,480 --> 00:09:41,200
and we have formalized this informal

248
00:09:41,200 --> 00:09:44,480
requirement in the following way

249
00:09:44,480 --> 00:09:46,480
so if we want to have a transcript

250
00:09:46,480 --> 00:09:48,800
there's two ways to get this transcript

251
00:09:48,800 --> 00:09:51,279
the first way is alice executes the

252
00:09:51,279 --> 00:09:53,600
protocol as specified on the previous

253
00:09:53,600 --> 00:09:56,560
slide by using the run algorithm and her

254
00:09:56,560 --> 00:09:58,000
own secret key

255
00:09:58,000 --> 00:09:59,680
this results in a transcript and a

256
00:09:59,680 --> 00:10:01,200
session key

257
00:10:01,200 --> 00:10:03,360
the second case is

258
00:10:03,360 --> 00:10:05,600
bob uses a different algorithm which we

259
00:10:05,600 --> 00:10:07,920
call the fake algorithm this fake

260
00:10:07,920 --> 00:10:10,640
algorithm takes bob's secret key and

261
00:10:10,640 --> 00:10:12,240
adds the results in a transcript and a

262
00:10:12,240 --> 00:10:13,760
session key

263
00:10:13,760 --> 00:10:16,079
and now the third party comes into play

264
00:10:16,079 --> 00:10:18,160
because the third party should not be

265
00:10:18,160 --> 00:10:19,839
able to distinguish

266
00:10:19,839 --> 00:10:22,079
if the run or the fake algorithm was

267
00:10:22,079 --> 00:10:23,920
used to create this transcript and

268
00:10:23,920 --> 00:10:25,360
session key

269
00:10:25,360 --> 00:10:27,839
and even if this third party has access

270
00:10:27,839 --> 00:10:30,959
to the private keys of both parties

271
00:10:30,959 --> 00:10:32,959
this is the deniability definition that

272
00:10:32,959 --> 00:10:35,599
we introduce

273
00:10:36,640 --> 00:10:38,399
and let me point out that there is some

274
00:10:38,399 --> 00:10:40,160
design space to this deniability

275
00:10:40,160 --> 00:10:42,720
definition

276
00:10:42,720 --> 00:10:44,800
in particular

277
00:10:44,800 --> 00:10:47,040
does the fake algorithm require the

278
00:10:47,040 --> 00:10:49,839
secret key of bob or can you run it with

279
00:10:49,839 --> 00:10:52,079
public data

280
00:10:52,079 --> 00:10:54,399
another option to modify this definition

281
00:10:54,399 --> 00:10:55,440
would be

282
00:10:55,440 --> 00:10:57,519
does the judge get all of the secret

283
00:10:57,519 --> 00:11:00,240
keys or does it have to decide based

284
00:11:00,240 --> 00:11:02,720
only on public inputs

285
00:11:02,720 --> 00:11:04,079
and thirdly

286
00:11:04,079 --> 00:11:06,160
is the judge allowed to interact with

287
00:11:06,160 --> 00:11:08,240
the participants during the protocol

288
00:11:08,240 --> 00:11:09,600
execution

289
00:11:09,600 --> 00:11:11,200
or does the judge only learn a

290
00:11:11,200 --> 00:11:14,839
transcript afterwards

291
00:11:15,600 --> 00:11:17,680
there is a deniability definition which

292
00:11:17,680 --> 00:11:21,120
goes back to the remainder from 2006

293
00:11:21,120 --> 00:11:23,680
and compared to their definition

294
00:11:23,680 --> 00:11:26,000
our definition is weaker in the sense

295
00:11:26,000 --> 00:11:27,040
that

296
00:11:27,040 --> 00:11:29,519
our fake algorithm requires the secret

297
00:11:29,519 --> 00:11:32,240
key of bob

298
00:11:32,240 --> 00:11:34,880
however our definition is stronger in

299
00:11:34,880 --> 00:11:37,279
the sense that our judge gets access to

300
00:11:37,279 --> 00:11:39,440
all of the secret keys

301
00:11:39,440 --> 00:11:42,240
and we believe this to be very important

302
00:11:42,240 --> 00:11:44,720
to model the case of for example a legal

303
00:11:44,720 --> 00:11:47,600
judge which is able to subpoena you into

304
00:11:47,600 --> 00:11:50,160
giving up your secret keys

305
00:11:50,160 --> 00:11:52,160
or if the judge is an asian state

306
00:11:52,160 --> 00:11:53,680
adversary that can infiltrate your

307
00:11:53,680 --> 00:11:55,600
smartphone and thereby learn your secret

308
00:11:55,600 --> 00:11:57,839
keys

309
00:11:59,120 --> 00:12:01,279
so all in all these two deniability

310
00:12:01,279 --> 00:12:03,600
notions are incomparable however we

311
00:12:03,600 --> 00:12:05,519
believe ours to be more suitable for the

312
00:12:05,519 --> 00:12:08,399
use case at hand

313
00:12:08,399 --> 00:12:11,760
and another downside of the definition

314
00:12:11,760 --> 00:12:14,240
by the realm onward al is that proofs

315
00:12:14,240 --> 00:12:15,920
for their definition

316
00:12:15,920 --> 00:12:17,519
require some form of knowledge

317
00:12:17,519 --> 00:12:20,399
assumptions in all of the cases that are

318
00:12:20,399 --> 00:12:22,240
known to us so for all the proofs that

319
00:12:22,240 --> 00:12:24,560
we know of

320
00:12:24,560 --> 00:12:26,720
let me also point out that there is some

321
00:12:26,720 --> 00:12:29,120
concurrent work by dobson and galbraith

322
00:12:29,120 --> 00:12:30,720
from last year

323
00:12:30,720 --> 00:12:32,880
and they have lifted the extended triple

324
00:12:32,880 --> 00:12:35,360
diffie-hellman protocol to the setting

325
00:12:35,360 --> 00:12:38,160
of super singular isotonies so they

326
00:12:38,160 --> 00:12:40,560
follow the same blueprint but they rely

327
00:12:40,560 --> 00:12:43,440
on isogeny problems instead of the

328
00:12:43,440 --> 00:12:45,760
diffie-hellman problem

329
00:12:45,760 --> 00:12:47,360
with this they retain the same

330
00:12:47,360 --> 00:12:49,519
properties but in addition they get the

331
00:12:49,519 --> 00:12:51,680
quantum resistance which we were looking

332
00:12:51,680 --> 00:12:53,839
for

333
00:12:54,720 --> 00:12:57,360
and there's also our full construction

334
00:12:57,360 --> 00:12:58,880
so what you've seen previously was only

335
00:12:58,880 --> 00:13:01,279
the core idea and our full construction

336
00:13:01,279 --> 00:13:03,839
is called spqr which is short for signal

337
00:13:03,839 --> 00:13:06,800
in the post-quantum regime

338
00:13:06,800 --> 00:13:08,560
the full construction includes

339
00:13:08,560 --> 00:13:11,519
semi-static keys to model the case where

340
00:13:11,519 --> 00:13:13,839
ephemera keys which are provided by the

341
00:13:13,839 --> 00:13:16,240
key server run out

342
00:13:16,240 --> 00:13:18,959
also we secure our protocol against

343
00:13:18,959 --> 00:13:20,480
randomness exposure

344
00:13:20,480 --> 00:13:23,440
by the use of a twisted prf

345
00:13:23,440 --> 00:13:26,800
we proved the security of our protocol

346
00:13:26,800 --> 00:13:28,639
in a security model analogous to the

347
00:13:28,639 --> 00:13:30,959
original signal analysis from congo net

348
00:13:30,959 --> 00:13:31,760
al

349
00:13:31,760 --> 00:13:34,000
and we also proved deniability of our

350
00:13:34,000 --> 00:13:38,320
protocol with respect to our definition

351
00:13:39,680 --> 00:13:40,880
let's compare the different

352
00:13:40,880 --> 00:13:42,880
constructions for the initial handshake

353
00:13:42,880 --> 00:13:44,639
protocol

354
00:13:44,639 --> 00:13:48,320
so the first one is x3dh which relies on

355
00:13:48,320 --> 00:13:50,480
the diffie-hellman key exchange and is

356
00:13:50,480 --> 00:13:53,040
therefore not post quantum secure

357
00:13:53,040 --> 00:13:55,279
it was recently shown to be deniable

358
00:13:55,279 --> 00:13:56,959
with respect to the definition of the

359
00:13:56,959 --> 00:13:58,320
ram android al

360
00:13:58,320 --> 00:14:00,399
and it is we also conjecture it to be

361
00:14:00,399 --> 00:14:03,120
deniable with respect to strong judges

362
00:14:03,120 --> 00:14:04,959
so our definition

363
00:14:04,959 --> 00:14:07,120
and it covers the full scope of what we

364
00:14:07,120 --> 00:14:09,600
expect that means it covers real world

365
00:14:09,600 --> 00:14:12,079
setting in which ephemeral keys may run

366
00:14:12,079 --> 00:14:14,639
out and where you need semi-static keys

367
00:14:14,639 --> 00:14:17,519
to cover for that

368
00:14:17,519 --> 00:14:19,440
then there are two protocols suggested

369
00:14:19,440 --> 00:14:21,600
by hashimoto at all

370
00:14:21,600 --> 00:14:24,240
relying on cams and ring signatures

371
00:14:24,240 --> 00:14:27,040
the first one is post quantum secure but

372
00:14:27,040 --> 00:14:28,639
not deniable with respect to the

373
00:14:28,639 --> 00:14:31,120
definition of tiramando at all to remedy

374
00:14:31,120 --> 00:14:31,920
that

375
00:14:31,920 --> 00:14:33,600
they added non-interactive zero

376
00:14:33,600 --> 00:14:35,440
knowledge proofs

377
00:14:35,440 --> 00:14:36,560
on top

378
00:14:36,560 --> 00:14:38,880
to get this deniability

379
00:14:38,880 --> 00:14:40,880
and we also conjecture both of them to

380
00:14:40,880 --> 00:14:42,560
be deniable with respect to strong

381
00:14:42,560 --> 00:14:45,279
judges our definition

382
00:14:45,279 --> 00:14:47,440
which is however not proven

383
00:14:47,440 --> 00:14:51,279
though both of them are not full scope

384
00:14:51,279 --> 00:14:54,639
then there's our construction spqr

385
00:14:54,639 --> 00:14:57,360
which uses key encapsulation mechanisms

386
00:14:57,360 --> 00:15:00,000
and designated verifier signatures

387
00:15:00,000 --> 00:15:03,120
it is post quantum and deniable against

388
00:15:03,120 --> 00:15:04,800
strong judges

389
00:15:04,800 --> 00:15:06,800
but not against the definition but not

390
00:15:06,800 --> 00:15:09,600
deniable against the definition of the

391
00:15:09,600 --> 00:15:12,320
realm under at all with the weak judges

392
00:15:12,320 --> 00:15:15,680
though it is full scope

393
00:15:15,920 --> 00:15:19,360
and both the constructions by hashimoto

394
00:15:19,360 --> 00:15:22,000
as well as our sbqr are generic

395
00:15:22,000 --> 00:15:24,720
constructions which you can instantiate

396
00:15:24,720 --> 00:15:27,680
with different cams and ring signatures

397
00:15:27,680 --> 00:15:30,240
nizix and dvs schemes relying on

398
00:15:30,240 --> 00:15:32,639
different problems however this is not

399
00:15:32,639 --> 00:15:36,399
the case for the last scheme six 3dh

400
00:15:36,399 --> 00:15:39,120
which is hard-coded to use sidh key

401
00:15:39,120 --> 00:15:42,079
exchange therefore it is post quantum

402
00:15:42,079 --> 00:15:44,560
and also deniable with respect to the

403
00:15:44,560 --> 00:15:46,720
definition of the real mondo at all and

404
00:15:46,720 --> 00:15:49,360
for scope and we conjecture it to be

405
00:15:49,360 --> 00:15:50,720
deniable with

406
00:15:50,720 --> 00:15:52,839
against strong judges as

407
00:15:52,839 --> 00:15:56,480
well but it's not a generic construction

408
00:15:56,480 --> 00:15:58,560
all in all we are very happy to see that

409
00:15:58,560 --> 00:16:01,440
there is many people working towards

410
00:16:01,440 --> 00:16:03,600
making signal post quantum

411
00:16:03,600 --> 00:16:05,680
and our contribution to that

412
00:16:05,680 --> 00:16:09,120
is our protocol spqr which is a post

413
00:16:09,120 --> 00:16:10,800
quantum replacement for the initial

414
00:16:10,800 --> 00:16:13,040
handshake from key encapsulation

415
00:16:13,040 --> 00:16:14,880
mechanisms and designated verifier

416
00:16:14,880 --> 00:16:16,399
signatures

417
00:16:16,399 --> 00:16:18,480
along the way we have introduced a new

418
00:16:18,480 --> 00:16:20,639
definition of deniability with strong

419
00:16:20,639 --> 00:16:21,759
judges

420
00:16:21,759 --> 00:16:24,160
which our protocol fulfills and we have

421
00:16:24,160 --> 00:16:27,279
shown that you can build dvs from ring

422
00:16:27,279 --> 00:16:29,040
signatures

423
00:16:29,040 --> 00:16:31,680
and then using a post quantum

424
00:16:31,680 --> 00:16:33,279
replacement for the initial handshake

425
00:16:33,279 --> 00:16:35,600
such as our spqr protocol

426
00:16:35,600 --> 00:16:38,800
and a double ratchet replacement such as

427
00:16:38,800 --> 00:16:40,720
the one using key encapsulation

428
00:16:40,720 --> 00:16:43,040
mechanisms from alvin at all these two

429
00:16:43,040 --> 00:16:44,959
in combination can be used to build a

430
00:16:44,959 --> 00:16:48,959
post quantum alternative of signal

431
00:16:48,959 --> 00:16:51,120
thank you very much for your attention

432
00:16:51,120 --> 00:16:53,199
and please check out our full paper on

433
00:16:53,199 --> 00:16:56,199
eprint

