1
00:00:01,120 --> 00:00:03,840
hello everyone i am elio the title of

2
00:00:03,840 --> 00:00:06,399
our work is making private function

3
00:00:06,399 --> 00:00:10,320
evaluations safer faster and simpler

4
00:00:10,320 --> 00:00:12,240
this is the joy war when you are

5
00:00:12,240 --> 00:00:15,040
assuming you

6
00:00:15,280 --> 00:00:16,480
pse

7
00:00:16,480 --> 00:00:19,359
mainly private match evaluation in the

8
00:00:19,359 --> 00:00:22,400
two-party scenario consider the case

9
00:00:22,400 --> 00:00:24,400
where there are two parties at least and

10
00:00:24,400 --> 00:00:25,199
bob

11
00:00:25,199 --> 00:00:28,640
at least has a private function f and

12
00:00:28,640 --> 00:00:30,240
private in class

13
00:00:30,240 --> 00:00:31,279
and ma

14
00:00:31,279 --> 00:00:33,840
has a private input y

15
00:00:33,840 --> 00:00:36,480
this two party intends to compute

16
00:00:36,480 --> 00:00:40,559
fsy and finally one or two party obtains

17
00:00:40,559 --> 00:00:43,760
the result in this picture no obtain the

18
00:00:43,760 --> 00:00:46,320
result

19
00:00:46,960 --> 00:00:49,840
pfe is the general case

20
00:00:49,840 --> 00:00:53,920
of secure function evaluation sfe

21
00:00:53,920 --> 00:00:58,160
for sfe the function f is public and

22
00:00:58,160 --> 00:01:00,000
both party knows that

23
00:01:00,000 --> 00:01:03,680
however for pfe the function f is

24
00:01:03,680 --> 00:01:04,879
private

25
00:01:04,879 --> 00:01:09,760
and as a private input of one party

26
00:01:09,760 --> 00:01:13,040
there are several ways to realize pfe

27
00:01:13,040 --> 00:01:15,520
first of all be straightforward to

28
00:01:15,520 --> 00:01:17,759
realize pfe using fully homomorphic

29
00:01:17,759 --> 00:01:18,720
question

30
00:01:18,720 --> 00:01:21,119
however today fully homomorphic in

31
00:01:21,119 --> 00:01:23,439
christian still has very high

32
00:01:23,439 --> 00:01:26,080
computational overhead

33
00:01:26,080 --> 00:01:28,640
and the second is to use universal

34
00:01:28,640 --> 00:01:30,560
circuits

35
00:01:30,560 --> 00:01:33,200
universal circuit is a circuit that also

36
00:01:33,200 --> 00:01:35,600
tests the discretion of the

37
00:01:35,600 --> 00:01:37,200
infrastructure

38
00:01:37,200 --> 00:01:40,720
and improves and offers yes

39
00:01:40,720 --> 00:01:43,920
however for a circuit of size n

40
00:01:43,920 --> 00:01:47,600
the corresponding universal circuit has

41
00:01:47,600 --> 00:01:50,320
additional log n over half

42
00:01:50,320 --> 00:01:52,880
and the constant factor and low order

43
00:01:52,880 --> 00:01:56,479
term also significant

44
00:01:57,360 --> 00:02:00,560
and the line of approach avoids the

45
00:02:00,560 --> 00:02:04,880
usage of fhe and uc

46
00:02:04,880 --> 00:02:07,600
one is based on oblivious evaluation of

47
00:02:07,600 --> 00:02:09,440
switch network

48
00:02:09,440 --> 00:02:12,239
which also has additional lock and

49
00:02:12,239 --> 00:02:14,800
overhang

50
00:02:15,120 --> 00:02:18,160
and the other lighter board starts from

51
00:02:18,160 --> 00:02:20,080
cars and mount car

52
00:02:20,080 --> 00:02:22,319
the main pvfe protocol has linear

53
00:02:22,319 --> 00:02:26,720
capacity and constant route

54
00:02:27,280 --> 00:02:30,160
recently it will show that that heavily

55
00:02:30,160 --> 00:02:32,720
secure pfe protocol performs the

56
00:02:32,720 --> 00:02:35,920
state-of-the-art heavily secure uc-based

57
00:02:35,920 --> 00:02:38,958
pfe protocol

58
00:02:40,160 --> 00:02:42,080
following this lightboard there are

59
00:02:42,080 --> 00:02:44,720
several improvements

60
00:02:44,720 --> 00:02:48,800
the paper ms-13 generalized and improves

61
00:02:48,800 --> 00:02:51,840
the protocol

62
00:02:51,920 --> 00:02:55,440
then recently a reusability property

63
00:02:55,440 --> 00:02:57,040
when respect

64
00:02:57,040 --> 00:02:59,040
to given party

65
00:02:59,040 --> 00:03:00,640
is added

66
00:03:00,640 --> 00:03:02,000
this means

67
00:03:02,000 --> 00:03:05,760
the two party only need one initiation

68
00:03:05,760 --> 00:03:07,280
for function f

69
00:03:07,280 --> 00:03:10,560
and then they can evaluate f on

70
00:03:10,560 --> 00:03:14,159
different inputs directly

71
00:03:14,640 --> 00:03:16,879
here is an illustration for your

72
00:03:16,879 --> 00:03:18,560
reusability

73
00:03:18,560 --> 00:03:20,480
these two party

74
00:03:20,480 --> 00:03:22,000
initiates

75
00:03:22,000 --> 00:03:24,319
for private function f

76
00:03:24,319 --> 00:03:28,159
and then evaluate f on different inputs

77
00:03:28,159 --> 00:03:29,599
for example

78
00:03:29,599 --> 00:03:31,599
s1 and y1

79
00:03:31,599 --> 00:03:32,959
should derive

80
00:03:32,959 --> 00:03:35,200
fs1 y1

81
00:03:35,200 --> 00:03:40,159
and s2 i2 to derive f s2 y2

82
00:03:40,159 --> 00:03:42,879
and so on

83
00:03:43,120 --> 00:03:45,200
this property leads to better

84
00:03:45,200 --> 00:03:46,480
performance

85
00:03:46,480 --> 00:03:48,959
when the whole code is executed more

86
00:03:48,959 --> 00:03:50,480
than one time

87
00:03:50,480 --> 00:03:52,959
for the same function as

88
00:03:52,959 --> 00:03:54,560
but those

89
00:03:54,560 --> 00:03:56,159
but those

90
00:03:56,159 --> 00:03:59,200
pfe.co are passively secure so what

91
00:03:59,200 --> 00:04:03,040
about active security

92
00:04:03,120 --> 00:04:06,159
in the original km11 paper the author

93
00:04:06,159 --> 00:04:08,799
introduced how to achieve security

94
00:04:08,799 --> 00:04:11,920
against malicious improv provider

95
00:04:11,920 --> 00:04:15,760
then the protocol in mss14

96
00:04:15,760 --> 00:04:17,120
such is

97
00:04:17,120 --> 00:04:20,880
full security however the number of laws

98
00:04:20,880 --> 00:04:22,880
of the protocol is equal to the number

99
00:04:22,880 --> 00:04:25,280
of gates

100
00:04:25,280 --> 00:04:27,520
and to the best of our knowledge there

101
00:04:27,520 --> 00:04:29,040
is no constant

102
00:04:29,040 --> 00:04:31,360
actively secure pfv protocol with linear

103
00:04:31,360 --> 00:04:34,160
capacity

104
00:04:36,400 --> 00:04:38,800
in our work we provide the first

105
00:04:38,800 --> 00:04:41,840
constant route actually secure pfe

106
00:04:41,840 --> 00:04:45,440
protocol with linear capacity

107
00:04:45,440 --> 00:04:47,840
meanwhile we provide a previously secure

108
00:04:47,840 --> 00:04:50,320
pfe protocol

109
00:04:50,320 --> 00:04:53,600
and our true protocol which is global

110
00:04:53,600 --> 00:04:56,600
reusability

111
00:04:57,360 --> 00:05:00,479
global reusability here means that the

112
00:05:00,479 --> 00:05:03,600
private function holder at least

113
00:05:03,600 --> 00:05:06,800
can perform a global initiation for her

114
00:05:06,800 --> 00:05:08,840
private function

115
00:05:08,840 --> 00:05:11,919
f then a party bob

116
00:05:11,919 --> 00:05:15,199
can use this information

117
00:05:15,199 --> 00:05:18,880
and start the evaluation of f1 alice

118
00:05:18,880 --> 00:05:21,840
multiple times

119
00:05:22,560 --> 00:05:25,199
at the same time the native party

120
00:05:25,199 --> 00:05:28,400
charlie can also use this information

121
00:05:28,400 --> 00:05:32,000
and start the evaluation of f by alice

122
00:05:32,000 --> 00:05:36,479
so the initiation f is global

123
00:05:37,360 --> 00:05:40,080
in this task i will focus on our

124
00:05:40,080 --> 00:05:43,919
actually secure pfp protocol

125
00:05:44,960 --> 00:05:46,560
as i have mentioned

126
00:05:46,560 --> 00:05:49,520
in the km11 paper the author introduced

127
00:05:49,520 --> 00:05:52,000
how to achieve at this security against

128
00:05:52,000 --> 00:05:54,479
malicious simple provider using

129
00:05:54,479 --> 00:05:58,719
classical techniques for global circuit

130
00:05:58,880 --> 00:06:01,759
and here we mainly focus on malicious

131
00:06:01,759 --> 00:06:03,919
function provider

132
00:06:03,919 --> 00:06:06,080
and this true result can be combined to

133
00:06:06,080 --> 00:06:10,160
obtain a fully secure pfp protocol

134
00:06:10,160 --> 00:06:11,840
here we suppose that the private

135
00:06:11,840 --> 00:06:15,600
function f is implemented by a circuit

136
00:06:15,600 --> 00:06:18,400
that only consists of not n gates

137
00:06:18,400 --> 00:06:21,520
and we also have public parameter

138
00:06:21,520 --> 00:06:24,639
like the circuit has data gates and

139
00:06:24,639 --> 00:06:27,440
input base and m of b

140
00:06:27,440 --> 00:06:29,280
and other information about the circuit

141
00:06:29,280 --> 00:06:31,280
is hidden

142
00:06:31,280 --> 00:06:33,840
we will work on

143
00:06:33,840 --> 00:06:36,800
growth g or prior order cure with a

144
00:06:36,800 --> 00:06:40,000
decisional diffic-hormone assumption how

145
00:06:40,000 --> 00:06:42,880
ddh assumption

146
00:06:42,880 --> 00:06:45,120
and in this talk

147
00:06:45,120 --> 00:06:48,080
we'll see that alice only has private

148
00:06:48,080 --> 00:06:51,120
info f and bob obtains the evaluation

149
00:06:51,120 --> 00:06:52,880
result

150
00:06:52,880 --> 00:06:55,919
we would like to know that it's easy to

151
00:06:55,919 --> 00:06:59,039
extend the protocol to support ali's

152
00:06:59,039 --> 00:07:00,840
private input

153
00:07:00,840 --> 00:07:03,759
so first introduced how to describe a

154
00:07:03,759 --> 00:07:06,720
circuit for example as we can see this

155
00:07:06,720 --> 00:07:08,240
circuit has

156
00:07:08,240 --> 00:07:12,000
five input wires and three upper wires

157
00:07:12,000 --> 00:07:14,160
and we call while

158
00:07:14,160 --> 00:07:17,039
outgoing was either y is the input wires

159
00:07:17,039 --> 00:07:18,880
of the circuit

160
00:07:18,880 --> 00:07:22,319
uh the upper wires of gates

161
00:07:22,319 --> 00:07:23,680
and here the

162
00:07:23,680 --> 00:07:26,319
ones where orange colors are outgoing

163
00:07:26,319 --> 00:07:27,759
wires

164
00:07:27,759 --> 00:07:31,120
and we call while coming while it

165
00:07:31,120 --> 00:07:34,479
is the improvise of gate so these blue

166
00:07:34,479 --> 00:07:38,479
color wires are incoming wires

167
00:07:38,639 --> 00:07:42,080
so for circuit with the target

168
00:07:42,080 --> 00:07:45,039
and input base and alphabet

169
00:07:45,039 --> 00:07:48,639
we have employed her outgoing wife and

170
00:07:48,639 --> 00:07:52,000
to state her incoming wise

171
00:07:52,000 --> 00:07:53,440
for example

172
00:07:53,440 --> 00:07:55,280
in this circuit

173
00:07:55,280 --> 00:07:59,039
bit high is equal to 6 because it has 6

174
00:07:59,039 --> 00:08:01,919
case and n is equal to 5

175
00:08:01,919 --> 00:08:04,479
and m is equals to 3

176
00:08:04,479 --> 00:08:08,800
so we have 11 outgoing wires and 12

177
00:08:08,800 --> 00:08:11,599
incoming wires

178
00:08:11,599 --> 00:08:14,479
because all gates are not engaged

179
00:08:14,479 --> 00:08:17,840
the circuit can be described by the wire

180
00:08:17,840 --> 00:08:20,479
connections

181
00:08:20,720 --> 00:08:23,599
to formalize the connections of blast we

182
00:08:23,599 --> 00:08:26,720
use the concept name is 10d permutation

183
00:08:26,720 --> 00:08:28,960
or ep

184
00:08:28,960 --> 00:08:32,240
ep is the mapping pipe that makes a

185
00:08:32,240 --> 00:08:35,599
number between 1 2 and to a number

186
00:08:35,599 --> 00:08:37,599
between 1 to m

187
00:08:37,599 --> 00:08:41,839
such that for every s in the set of 1 2

188
00:08:41,839 --> 00:08:42,958
m

189
00:08:42,958 --> 00:08:47,200
there is this one number y in the set

190
00:08:47,200 --> 00:08:52,800
of 1 to m such that y is equals to pi s

191
00:08:52,959 --> 00:08:56,000
for a circuit discretion this means that

192
00:08:56,000 --> 00:08:59,680
even an interest of incoming was prime

193
00:08:59,680 --> 00:09:03,680
mastic to an index of um outgoing was

194
00:09:03,680 --> 00:09:08,640
that connected when this incoming was

195
00:09:08,640 --> 00:09:10,959
this is an illustration of the standard

196
00:09:10,959 --> 00:09:12,880
permutation

197
00:09:12,880 --> 00:09:17,440
for the example circuit as we can see

198
00:09:17,440 --> 00:09:20,959
one incoming was connected with

199
00:09:20,959 --> 00:09:24,240
outgoing wires well one outgoing wires

200
00:09:24,240 --> 00:09:26,240
may connect it with several incoming

201
00:09:26,240 --> 00:09:27,839
wires

202
00:09:27,839 --> 00:09:30,959
because the outgoing the the output

203
00:09:30,959 --> 00:09:32,800
wires of the circuit

204
00:09:32,800 --> 00:09:36,800
neither are going while nine ten and 11

205
00:09:36,800 --> 00:09:38,959
do not connect it with

206
00:09:38,959 --> 00:09:40,399
incoming ones

207
00:09:40,399 --> 00:09:43,920
we do not need to consider this wise in

208
00:09:43,920 --> 00:09:48,160
the extended permutation mapping

209
00:09:48,160 --> 00:09:52,240
so we let m equals to m plus theta minus

210
00:09:52,240 --> 00:09:53,120
n

211
00:09:53,120 --> 00:09:56,480
so a in this example

212
00:09:56,480 --> 00:10:00,640
and a is equal to 2 theta so

213
00:10:00,640 --> 00:10:02,959
12 in this example

214
00:10:02,959 --> 00:10:05,279
and like this map here

215
00:10:05,279 --> 00:10:08,640
the connection like incoming wire five

216
00:10:08,640 --> 00:10:11,360
and are going while one

217
00:10:11,360 --> 00:10:15,279
they are connected in this mapping

218
00:10:15,440 --> 00:10:19,200
now we know how to describe the circuit

219
00:10:19,200 --> 00:10:21,440
at the beginning of the protocol the

220
00:10:21,440 --> 00:10:24,959
circuit provider naming os and gates she

221
00:10:24,959 --> 00:10:28,079
first named the input wires of the

222
00:10:28,079 --> 00:10:29,760
circuit

223
00:10:29,760 --> 00:10:33,279
and then all wires connected when gates

224
00:10:33,279 --> 00:10:36,160
and we introduce how to name

225
00:10:36,160 --> 00:10:40,480
the wires in detail in our paper

226
00:10:41,120 --> 00:10:43,200
then we can extract the extended

227
00:10:43,200 --> 00:10:44,640
notation pi

228
00:10:44,640 --> 00:10:47,839
for this circuit

229
00:10:51,120 --> 00:10:54,480
now the study provider alice host

230
00:10:54,480 --> 00:10:55,680
circuit

231
00:10:55,680 --> 00:10:58,959
and extended annotation pi

232
00:10:58,959 --> 00:11:01,680
so we can let

233
00:11:01,680 --> 00:11:04,079
so we can let both doubles or gets lose

234
00:11:04,079 --> 00:11:05,360
badly

235
00:11:05,360 --> 00:11:08,399
i want to know that because we

236
00:11:08,399 --> 00:11:11,120
divide a while into an incoming voice

237
00:11:11,120 --> 00:11:13,120
and an outgoing word

238
00:11:13,120 --> 00:11:14,880
what blocking gabo's

239
00:11:14,880 --> 00:11:16,160
case

240
00:11:16,160 --> 00:11:18,160
my estio

241
00:11:18,160 --> 00:11:19,920
doesn't know the connection between

242
00:11:19,920 --> 00:11:22,319
wires

243
00:11:22,959 --> 00:11:25,040
at the same time at least not the

244
00:11:25,040 --> 00:11:27,360
extended fermentation she should know

245
00:11:27,360 --> 00:11:31,040
how to derive incoming wire labels from

246
00:11:31,040 --> 00:11:33,680
its connected outgoing wire labels to

247
00:11:33,680 --> 00:11:36,320
evaluate the cable circuit

248
00:11:36,320 --> 00:11:39,040
masturbation no no

249
00:11:39,040 --> 00:11:42,399
other wire labels

250
00:11:42,399 --> 00:11:44,399
to know how to derive incoming wire

251
00:11:44,399 --> 00:11:46,800
labels from outgoing wire labels

252
00:11:46,800 --> 00:11:49,920
at least need to taper in the file level

253
00:11:49,920 --> 00:11:52,560
generation

254
00:11:52,560 --> 00:11:54,000
the procedure

255
00:11:54,000 --> 00:11:57,839
of our cable circuit generation is here

256
00:11:57,839 --> 00:12:00,800
now first general renter

257
00:12:00,800 --> 00:12:01,920
rent the

258
00:12:01,920 --> 00:12:03,040
gi

259
00:12:03,040 --> 00:12:06,079
in the group for each outgoing wire and

260
00:12:06,079 --> 00:12:09,439
sends them to alice

261
00:12:09,600 --> 00:12:11,120
so each

262
00:12:11,120 --> 00:12:15,920
outgoing wire i has an element gi

263
00:12:15,920 --> 00:12:19,040
then at least performs the inverse of pi

264
00:12:19,040 --> 00:12:23,120
on those gi's so as in this picture

265
00:12:23,120 --> 00:12:25,200
it to a wire

266
00:12:25,200 --> 00:12:29,600
kinetics they will have the same values

267
00:12:30,240 --> 00:12:33,440
then at least randomly p

268
00:12:33,440 --> 00:12:37,760
t j then computes the t j powers of

269
00:12:37,760 --> 00:12:41,120
each g pi j

270
00:12:41,120 --> 00:12:43,200
like this

271
00:12:43,200 --> 00:12:45,680
and sends them to bob

272
00:12:45,680 --> 00:12:48,639
so each one is raised to

273
00:12:48,639 --> 00:12:52,279
t j power

274
00:12:55,279 --> 00:12:57,680
because t j is random

275
00:12:57,680 --> 00:12:58,800
those

276
00:12:58,800 --> 00:13:00,880
uh g pi j

277
00:13:00,880 --> 00:13:06,000
to the power of q j do not leave any

278
00:13:06,000 --> 00:13:08,720
anything about the extended permutation

279
00:13:08,720 --> 00:13:10,959
pi

280
00:13:15,519 --> 00:13:18,079
and actually receiving those elements

281
00:13:18,079 --> 00:13:22,079
but randomly please alpha 0 and alpha 1

282
00:13:22,079 --> 00:13:25,680
then for labels when value b

283
00:13:25,680 --> 00:13:27,360
ball computes

284
00:13:27,360 --> 00:13:30,480
the alpha b power to the corresponding

285
00:13:30,480 --> 00:13:31,839
elements

286
00:13:31,839 --> 00:13:35,600
as for this example

287
00:13:35,600 --> 00:13:37,600
our computers

288
00:13:37,600 --> 00:13:40,240
for this incoming wire one

289
00:13:40,240 --> 00:13:44,160
computes the labels for value zero

290
00:13:44,160 --> 00:13:46,880
in this form and the

291
00:13:46,880 --> 00:13:50,639
labels for value 1 in this form

292
00:13:50,639 --> 00:13:51,519
and

293
00:13:51,519 --> 00:13:55,120
while labels for our guest is like this

294
00:13:55,120 --> 00:13:57,199
left-hand side

295
00:13:57,199 --> 00:13:59,519
okay

296
00:13:59,680 --> 00:14:02,720
now given those white levels bulking

297
00:14:02,720 --> 00:14:04,720
doubles or gates

298
00:14:04,720 --> 00:14:08,079
more used to improv wire labels as

299
00:14:08,079 --> 00:14:11,279
the keys to increase the corresponding

300
00:14:11,279 --> 00:14:13,279
of wire

301
00:14:13,279 --> 00:14:16,880
labels for the output wires

302
00:14:16,880 --> 00:14:20,480
and this is four world dump in classical

303
00:14:20,480 --> 00:14:23,839
double circuit approach

304
00:14:25,760 --> 00:14:28,639
now let's see how to evaluate the double

305
00:14:28,639 --> 00:14:31,600
circuit

306
00:14:31,600 --> 00:14:34,880
to derive the wire levels of incoming

307
00:14:34,880 --> 00:14:36,480
wire from the

308
00:14:36,480 --> 00:14:40,079
wire levels of our ring wire

309
00:14:40,079 --> 00:14:42,320
let's focus on

310
00:14:42,320 --> 00:14:45,560
one gauge

311
00:14:45,600 --> 00:14:48,480
even one of the two labels of the

312
00:14:48,480 --> 00:14:50,720
incoming wireless file

313
00:14:50,720 --> 00:14:53,920
and one of the two labels of the of the

314
00:14:53,920 --> 00:14:56,440
incoming viruses we can decrypt the

315
00:14:56,440 --> 00:14:59,600
corresponding labels of the outgoing

316
00:14:59,600 --> 00:15:02,320
wire a

317
00:15:02,800 --> 00:15:05,199
and now to derive the labels of the

318
00:15:05,199 --> 00:15:06,720
incoming

319
00:15:06,720 --> 00:15:09,279
wire 7

320
00:15:09,279 --> 00:15:13,360
let's see what this label should be

321
00:15:13,360 --> 00:15:16,160
according to this extended permutation

322
00:15:16,160 --> 00:15:16,959
pi

323
00:15:16,959 --> 00:15:21,040
incoming wire 7 is connected with

324
00:15:21,040 --> 00:15:25,440
the outgoing wire a so pi 7 is equals to

325
00:15:25,440 --> 00:15:27,839
a

326
00:15:28,079 --> 00:15:31,920
now we can see here we can fill the

327
00:15:31,920 --> 00:15:36,000
t7 power to the level we just liquid we

328
00:15:36,000 --> 00:15:37,759
obtain the corresponding income

329
00:15:37,759 --> 00:15:40,720
meanwhile label so

330
00:15:40,720 --> 00:15:43,600
alice can follow this approach to

331
00:15:43,600 --> 00:15:45,360
evaluate the whole

332
00:15:45,360 --> 00:15:48,480
double gate to obtain the final double

333
00:15:48,480 --> 00:15:50,959
output

334
00:15:51,680 --> 00:15:54,639
and let me summarize the procedure first

335
00:15:54,639 --> 00:15:56,079
of all

336
00:15:56,079 --> 00:15:59,519
above sense random growth element gi for

337
00:15:59,519 --> 00:16:03,040
each outgoing wireless i

338
00:16:03,120 --> 00:16:05,360
then alice performs the extended

339
00:16:05,360 --> 00:16:08,800
permutation pi on those

340
00:16:08,800 --> 00:16:10,399
gi's render

341
00:16:10,399 --> 00:16:12,000
and randomly piece

342
00:16:12,000 --> 00:16:16,079
t-tray and compute the t3 powers of each

343
00:16:16,079 --> 00:16:18,480
element

344
00:16:18,480 --> 00:16:23,839
and nearly send those elements to bob

345
00:16:23,920 --> 00:16:26,880
bob will randomly choose

346
00:16:26,880 --> 00:16:29,920
alpha 0 and alpha 1 to compute the wire

347
00:16:29,920 --> 00:16:32,240
level

348
00:16:33,360 --> 00:16:36,240
and then send all double gates together

349
00:16:36,240 --> 00:16:37,839
when she is

350
00:16:37,839 --> 00:16:39,839
double improved

351
00:16:39,839 --> 00:16:43,199
for white valleys

352
00:16:43,440 --> 00:16:46,320
alice will evaluate the kabusiki using

353
00:16:46,320 --> 00:16:47,680
double gate

354
00:16:47,680 --> 00:16:49,279
double impulse

355
00:16:49,279 --> 00:16:50,480
and

356
00:16:50,480 --> 00:16:52,399
the extended permutation

357
00:16:52,399 --> 00:16:54,000
pi

358
00:16:54,000 --> 00:16:56,880
and teach it to obtain the double

359
00:16:56,880 --> 00:16:59,360
opposed

360
00:17:00,399 --> 00:17:03,120
and sends it to bob

361
00:17:03,120 --> 00:17:05,679
finally bob can obtain the

362
00:17:05,679 --> 00:17:08,240
evaluation result from

363
00:17:08,240 --> 00:17:11,359
the global output

364
00:17:13,359 --> 00:17:16,559
and we can divide the procedure into two

365
00:17:16,559 --> 00:17:17,679
phases

366
00:17:17,679 --> 00:17:21,199
the initiation phase and the evaluation

367
00:17:21,199 --> 00:17:23,520
phase

368
00:17:24,000 --> 00:17:26,160
and because we work on

369
00:17:26,160 --> 00:17:30,320
the group where ddh assumption holds the

370
00:17:30,320 --> 00:17:33,120
ddh assumption allows bob to generate

371
00:17:33,120 --> 00:17:36,400
different alpha 0 and alpha 1 and 2

372
00:17:36,400 --> 00:17:38,080
parties kill

373
00:17:38,080 --> 00:17:41,039
the evaluation phase for f multiplied

374
00:17:41,039 --> 00:17:42,160
times

375
00:17:42,160 --> 00:17:47,240
using different inputs

376
00:17:47,520 --> 00:17:50,960
to achieve active security because the

377
00:17:50,960 --> 00:17:53,600
evaluation phase is similar to classical

378
00:17:53,600 --> 00:17:55,280
double circuit

379
00:17:55,280 --> 00:17:58,559
and alice only needs to evaluate the

380
00:17:58,559 --> 00:18:00,640
double circuit

381
00:18:00,640 --> 00:18:04,559
in fact the authenticity of gabo silky

382
00:18:04,559 --> 00:18:07,760
ensures that alice can not have the

383
00:18:07,760 --> 00:18:10,080
security of the protocol

384
00:18:10,080 --> 00:18:13,679
so now we only need to focus on http

385
00:18:13,679 --> 00:18:16,080
security of the

386
00:18:16,080 --> 00:18:19,280
initiation phase

387
00:18:19,919 --> 00:18:22,799
let's see the message then in the

388
00:18:22,799 --> 00:18:25,918
initiation phase

389
00:18:26,880 --> 00:18:29,440
we need to ensure that

390
00:18:29,440 --> 00:18:31,919
alias sends correct message

391
00:18:31,919 --> 00:18:33,919
and this means that we're near your

392
00:18:33,919 --> 00:18:36,640
knowledge pool of knowledge for

393
00:18:36,640 --> 00:18:39,600
valley extended communication pi perform

394
00:18:39,600 --> 00:18:41,360
those two elements

395
00:18:41,360 --> 00:18:42,880
and we also

396
00:18:42,880 --> 00:18:45,760
need a zero knowledge proof of

397
00:18:45,760 --> 00:18:47,039
uh

398
00:18:47,039 --> 00:18:49,840
knowledge pool of knowledge of the power

399
00:18:49,840 --> 00:18:55,280
tj to stress in the security proof

400
00:18:55,360 --> 00:18:58,160
for these two goals we first focused on

401
00:18:58,160 --> 00:19:00,480
the second one

402
00:19:00,480 --> 00:19:03,039
we may first try to use zero knowledge

403
00:19:03,039 --> 00:19:04,880
proof of knowledge of this quest

404
00:19:04,880 --> 00:19:06,240
location

405
00:19:06,240 --> 00:19:09,360
however when we use such a vocal the

406
00:19:09,360 --> 00:19:13,360
element g pi j should be given

407
00:19:13,360 --> 00:19:16,640
and then the extended permutation pi is

408
00:19:16,640 --> 00:19:18,799
liquid

409
00:19:18,799 --> 00:19:22,000
our solution is to use a gamma equation

410
00:19:22,000 --> 00:19:24,320
called the element since it is

411
00:19:24,320 --> 00:19:26,960
marketingly homomorphic and we can

412
00:19:26,960 --> 00:19:29,760
compute the t3 power

413
00:19:29,760 --> 00:19:32,799
so the procedure is here

414
00:19:32,799 --> 00:19:35,679
suppose the alias generates the path of

415
00:19:35,679 --> 00:19:38,960
key or gamma in question and the private

416
00:19:38,960 --> 00:19:40,720
key is that

417
00:19:40,720 --> 00:19:43,440
such that the public key h

418
00:19:43,440 --> 00:19:47,760
is the power of gf

419
00:19:48,240 --> 00:19:49,679
and then

420
00:19:49,679 --> 00:19:52,400
l is first increase g

421
00:19:52,400 --> 00:19:53,919
pi j

422
00:19:53,919 --> 00:19:56,320
then she can compute the encrypted

423
00:19:56,320 --> 00:19:58,880
element to the power of t j

424
00:19:58,880 --> 00:20:02,880
over the cyber test cj

425
00:20:02,880 --> 00:20:04,159
after that

426
00:20:04,159 --> 00:20:07,440
ali sender to cyber test to bob

427
00:20:07,440 --> 00:20:10,960
and put the knowledge of tj

428
00:20:10,960 --> 00:20:14,240
and finally alice can help up decrypt

429
00:20:14,240 --> 00:20:18,840
the cybertest c check to the power of

430
00:20:18,840 --> 00:20:21,360
tj and

431
00:20:21,360 --> 00:20:24,159
due to the inclusion

432
00:20:24,159 --> 00:20:24,880
g

433
00:20:24,880 --> 00:20:27,200
pi j

434
00:20:27,200 --> 00:20:29,520
is preserved and the extended

435
00:20:29,520 --> 00:20:33,200
permutation height is hidden

436
00:20:33,200 --> 00:20:36,880
now the first follicle is that even gi

437
00:20:36,880 --> 00:20:39,280
and organ muscle has cj

438
00:20:39,280 --> 00:20:43,360
so that the provenance are js and a

439
00:20:43,360 --> 00:20:46,240
valid extended permutation pi

440
00:20:46,240 --> 00:20:48,000
such

441
00:20:48,000 --> 00:20:50,320
cj is encouraging

442
00:20:50,320 --> 00:20:51,120
g

443
00:20:51,120 --> 00:20:53,360
pi j

444
00:20:53,360 --> 00:20:56,240
to for this statement we can describe

445
00:20:56,240 --> 00:20:59,120
the origami sub test in a different way

446
00:20:59,120 --> 00:21:02,480
as we can see in these pictures for the

447
00:21:02,480 --> 00:21:04,559
extended permutation

448
00:21:04,559 --> 00:21:08,000
each incoming wires connects it with

449
00:21:08,000 --> 00:21:11,039
exactly one outgoing wire

450
00:21:11,039 --> 00:21:14,799
so we can define a letter e for each

451
00:21:14,799 --> 00:21:16,640
incoming wire

452
00:21:16,640 --> 00:21:17,919
such that

453
00:21:17,919 --> 00:21:21,200
if pi mapped j to i

454
00:21:21,200 --> 00:21:24,320
is i entry is equal to 1

455
00:21:24,320 --> 00:21:26,960
and otherwise the end change

456
00:21:26,960 --> 00:21:28,840
equals to

457
00:21:28,840 --> 00:21:30,640
0.

458
00:21:30,640 --> 00:21:33,280
so for the multi

459
00:21:33,280 --> 00:21:35,760
is pronunciation form

460
00:21:35,760 --> 00:21:37,679
only the elements

461
00:21:37,679 --> 00:21:40,080
g pi j remains

462
00:21:40,080 --> 00:21:42,000
so we can rewrite

463
00:21:42,000 --> 00:21:45,679
our sub tests in this form

464
00:21:45,679 --> 00:21:47,840
so now we can say that an extended

465
00:21:47,840 --> 00:21:49,039
permutation

466
00:21:49,039 --> 00:21:51,919
highest value here only about cyber test

467
00:21:51,919 --> 00:21:54,640
cj can be represent

468
00:21:54,640 --> 00:21:57,679
in this new form such that the inner

469
00:21:57,679 --> 00:22:00,799
product of vector 1

470
00:22:00,799 --> 00:22:04,559
and e j is equal to 1 this means that

471
00:22:04,559 --> 00:22:06,799
the sum of all entries

472
00:22:06,799 --> 00:22:11,600
of the vector ejs is equal to 1

473
00:22:11,600 --> 00:22:14,799
the engine wise product between the

474
00:22:14,799 --> 00:22:16,799
vector e j

475
00:22:16,799 --> 00:22:18,400
and the vector

476
00:22:18,400 --> 00:22:22,159
e j minus the vector one is equal to

477
00:22:22,159 --> 00:22:23,200
zero

478
00:22:23,200 --> 00:22:26,480
this means that each entrance

479
00:22:26,480 --> 00:22:30,320
of ej is either zero or one

480
00:22:30,320 --> 00:22:34,080
so this condition is equals to the

481
00:22:34,080 --> 00:22:35,679
condition

482
00:22:35,679 --> 00:22:42,480
though that e j i is equal to 1 if pi j

483
00:22:42,480 --> 00:22:44,320
is equal to i

484
00:22:44,320 --> 00:22:48,080
and 0 otherwise

485
00:22:48,720 --> 00:22:51,200
we can rewrite the second collision

486
00:22:51,200 --> 00:22:54,880
as the entry was product up to vector ej

487
00:22:54,880 --> 00:22:58,320
is also equals to ej

488
00:22:58,320 --> 00:23:00,960
i also would like to note that

489
00:23:00,960 --> 00:23:04,799
now the semi test cj can be regarded as

490
00:23:04,799 --> 00:23:10,480
an elgama commitment to the vector e j

491
00:23:10,480 --> 00:23:13,280
let's see the first statement we need to

492
00:23:13,280 --> 00:23:16,480
prove that our subtest c j satisfies the

493
00:23:16,480 --> 00:23:19,600
conditions that the sum of r n shares of

494
00:23:19,600 --> 00:23:23,280
v j is equal to one and in fact we can

495
00:23:23,280 --> 00:23:25,440
match the statement of

496
00:23:25,440 --> 00:23:28,080
of our subtest together

497
00:23:28,080 --> 00:23:30,960
we let the verifier fit a random

498
00:23:30,960 --> 00:23:34,080
challenge omega for the prover

499
00:23:34,080 --> 00:23:37,039
then the party computes the product of r

500
00:23:37,039 --> 00:23:40,480
cipher test raised to the power of omega

501
00:23:40,480 --> 00:23:42,480
through the power of j

502
00:23:42,480 --> 00:23:46,480
and we call this new cyber test c and in

503
00:23:46,480 --> 00:23:49,120
fact is the commitment to such a letter

504
00:23:49,120 --> 00:23:51,120
e

505
00:23:51,120 --> 00:23:54,799
and because omega is random its sum of

506
00:23:54,799 --> 00:23:57,919
omega to the power of j times

507
00:23:57,919 --> 00:23:58,720
the

508
00:23:58,720 --> 00:23:59,919
condition

509
00:23:59,919 --> 00:24:02,400
is equals to the sum of omega to the

510
00:24:02,400 --> 00:24:06,159
power of j then all conditions hold an

511
00:24:06,159 --> 00:24:09,520
overwhelming probability

512
00:24:09,600 --> 00:24:12,400
so we can let

513
00:24:12,400 --> 00:24:15,039
big omega equals to the sum of small

514
00:24:15,039 --> 00:24:16,080
omega

515
00:24:16,080 --> 00:24:20,159
to the power of j a is it now to

516
00:24:20,159 --> 00:24:24,559
only for that inner product of vector 1

517
00:24:24,559 --> 00:24:26,480
and letter e

518
00:24:26,480 --> 00:24:30,480
is equal to big omega

519
00:24:31,120 --> 00:24:34,159
now we can use the new statement that

520
00:24:34,159 --> 00:24:35,600
that is

521
00:24:35,600 --> 00:24:39,760
letter e and random calls re such that e

522
00:24:39,760 --> 00:24:41,039
is the

523
00:24:41,039 --> 00:24:42,320
committee

524
00:24:42,320 --> 00:24:43,919
value inside c

525
00:24:43,919 --> 00:24:47,679
and the inner product of vector 1 and e

526
00:24:47,679 --> 00:24:50,720
is equal to big omega

527
00:24:50,720 --> 00:24:53,279
this is the inner product for committee

528
00:24:53,279 --> 00:24:54,320
data

529
00:24:54,320 --> 00:24:56,880
and we provide a modified version

530
00:24:56,880 --> 00:25:00,880
of protocol in the bulletproof paper to

531
00:25:00,880 --> 00:25:03,760
put this fat

532
00:25:04,559 --> 00:25:08,080
now let's move to the second condition

533
00:25:08,080 --> 00:25:10,799
to produce this condition

534
00:25:10,799 --> 00:25:12,240
for all

535
00:25:12,240 --> 00:25:14,320
cyber tests we can follow a similar

536
00:25:14,320 --> 00:25:16,400
procedure as before

537
00:25:16,400 --> 00:25:19,360
we let validifier p to random change s

538
00:25:19,360 --> 00:25:20,400
and y

539
00:25:20,400 --> 00:25:23,919
for the approval

540
00:25:23,919 --> 00:25:27,520
then will party compute the product of

541
00:25:27,520 --> 00:25:29,840
each sub test that are raised to the

542
00:25:29,840 --> 00:25:31,520
power of s

543
00:25:31,520 --> 00:25:34,559
to the power object

544
00:25:34,640 --> 00:25:36,240
and similarly

545
00:25:36,240 --> 00:25:39,520
we can regard the resulting cyber test c

546
00:25:39,520 --> 00:25:40,320
as

547
00:25:40,320 --> 00:25:46,240
the aogama commitment to such a vector b

548
00:25:46,240 --> 00:25:49,200
because f is random either sum of s to

549
00:25:49,200 --> 00:25:51,840
the power of j times

550
00:25:51,840 --> 00:25:54,000
the entry wise product

551
00:25:54,000 --> 00:25:54,840
of

552
00:25:54,840 --> 00:25:58,880
two vectors each and minus the

553
00:25:58,880 --> 00:26:02,400
letter b is equals to zero

554
00:26:02,400 --> 00:26:05,360
then the condition for all j holds way

555
00:26:05,360 --> 00:26:08,918
overwhelming probability

556
00:26:10,000 --> 00:26:14,320
the vector pha equals to s to the power

557
00:26:14,320 --> 00:26:17,840
of j times letter e j

558
00:26:17,840 --> 00:26:21,200
we let vector dj star

559
00:26:21,200 --> 00:26:25,120
vector e j equals to the sum of d j i

560
00:26:25,120 --> 00:26:30,400
times e j i times y to the power of i

561
00:26:30,400 --> 00:26:34,240
then if the vector djs star

562
00:26:34,240 --> 00:26:36,720
e j is equal to zero then the entry

563
00:26:36,720 --> 00:26:40,720
entry-wise product of letter b j and e j

564
00:26:40,720 --> 00:26:42,960
is equals to vector zero when

565
00:26:42,960 --> 00:26:45,840
overwhelming probability

566
00:26:45,840 --> 00:26:49,039
so we can match the condition for r j as

567
00:26:49,039 --> 00:26:51,679
an equation

568
00:26:51,679 --> 00:26:57,279
and the sum of letter dj star meta ej

569
00:26:57,279 --> 00:26:59,440
plus minus

570
00:26:59,440 --> 00:27:00,880
that

571
00:27:00,880 --> 00:27:04,240
metal ones that letter d is equals to

572
00:27:04,240 --> 00:27:05,200
zero

573
00:27:05,200 --> 00:27:08,480
and this statement can be proven by zero

574
00:27:08,480 --> 00:27:10,960
knowledge argument introduced

575
00:27:10,960 --> 00:27:14,240
in the paper bg 12

576
00:27:14,240 --> 00:27:16,559
and we also provide improvement of that

577
00:27:16,559 --> 00:27:20,240
protocol in our paper

578
00:27:20,240 --> 00:27:23,360
now let me summarize our modification

579
00:27:23,360 --> 00:27:24,399
to

580
00:27:24,399 --> 00:27:28,959
make the initiation activate security

581
00:27:29,440 --> 00:27:31,760
now the message for alice

582
00:27:31,760 --> 00:27:34,559
for each incoming value is to

583
00:27:34,559 --> 00:27:37,520
simultaneous together when the elements

584
00:27:37,520 --> 00:27:40,559
for the question of the second

585
00:27:40,559 --> 00:27:42,799
cyber test

586
00:27:42,799 --> 00:27:43,760
and

587
00:27:43,760 --> 00:27:46,240
alice also need to prove that the

588
00:27:46,240 --> 00:27:48,240
knowledge of her valley extended

589
00:27:48,240 --> 00:27:50,159
permutation high

590
00:27:50,159 --> 00:27:52,559
the knowledge of tj

591
00:27:52,559 --> 00:27:55,120
and the knowledge of the private key for

592
00:27:55,120 --> 00:27:58,159
the ogama in christian scheme

593
00:27:58,159 --> 00:27:58,600
and

594
00:27:58,600 --> 00:27:59,919
[Music]

595
00:27:59,919 --> 00:28:02,240
and the complexity of this protocol is

596
00:28:02,240 --> 00:28:05,039
linear in the numbers of wires

597
00:28:05,039 --> 00:28:06,880
in the circuit

598
00:28:06,880 --> 00:28:08,960
and the numbers of wires in the circuit

599
00:28:08,960 --> 00:28:10,159
is linear

600
00:28:10,159 --> 00:28:12,159
in the numbers of gates

601
00:28:12,159 --> 00:28:16,320
in the circuit so the capacity is linear

602
00:28:16,320 --> 00:28:20,000
in the numbers of case

603
00:28:21,679 --> 00:28:25,039
an important thing is that a message

604
00:28:25,039 --> 00:28:27,600
from bob in the initiation phase are

605
00:28:27,600 --> 00:28:28,640
rendered

606
00:28:28,640 --> 00:28:31,039
so they can be generated

607
00:28:31,039 --> 00:28:34,159
by lender oral code to meta initiation

608
00:28:34,159 --> 00:28:36,640
face no entirety

609
00:28:36,640 --> 00:28:39,520
and all party playing the roles of bob

610
00:28:39,520 --> 00:28:42,640
can verify alice message and start the

611
00:28:42,640 --> 00:28:47,039
evaluation phase with alice

612
00:28:47,200 --> 00:28:50,240
so for this global reusability that is

613
00:28:50,240 --> 00:28:52,559
published the no entirety

614
00:28:52,559 --> 00:28:55,200
initiation phase another party can

615
00:28:55,200 --> 00:28:57,520
download this information verify the

616
00:28:57,520 --> 00:29:00,080
conduct means and then start the

617
00:29:00,080 --> 00:29:03,200
evaluation phase where i list for the

618
00:29:03,200 --> 00:29:07,279
private input forward function f

619
00:29:07,279 --> 00:29:09,200
and that's all on my top

620
00:29:09,200 --> 00:29:11,520
you are interested in this work please

621
00:29:11,520 --> 00:29:14,000
find the full version or e-print thank

622
00:29:14,000 --> 00:29:17,120
you very much

