1
00:00:05,600 --> 00:00:06,799
hi everyone

2
00:00:06,799 --> 00:00:09,200
thank you for attending my talk i'm

3
00:00:09,200 --> 00:00:09,920
going to be

4
00:00:09,920 --> 00:00:13,360
presenting sidon spaces an algebraic

5
00:00:13,360 --> 00:00:15,200
concept and their application to

6
00:00:15,200 --> 00:00:18,560
construct public key cryptosystems

7
00:00:18,560 --> 00:00:20,800
before we begin i must apologize i am

8
00:00:20,800 --> 00:00:22,960
not from this community so please accept

9
00:00:22,960 --> 00:00:23,840
my apology

10
00:00:23,840 --> 00:00:26,560
if i explain in too much detail things

11
00:00:26,560 --> 00:00:27,840
that you find trivial

12
00:00:27,840 --> 00:00:29,760
or skip things that you do not find

13
00:00:29,760 --> 00:00:31,599
trivial and in any case

14
00:00:31,599 --> 00:00:33,120
i'll be happy to take any questions

15
00:00:33,120 --> 00:00:35,440
often

16
00:00:38,800 --> 00:00:41,600
a moment of legacy shimon siddhar was a

17
00:00:41,600 --> 00:00:43,600
hungarian mathematician that died

18
00:00:43,600 --> 00:00:46,000
untimely death in 1941 because an

19
00:00:46,000 --> 00:00:48,399
academic brother is called herdish

20
00:00:48,399 --> 00:00:51,440
and other than this very short wikipedia

21
00:00:51,440 --> 00:00:52,480
entry

22
00:00:52,480 --> 00:00:55,840
his legacy includes seed on sex

23
00:00:55,840 --> 00:00:58,480
these are sets of positive integers such

24
00:00:58,480 --> 00:00:59,440
that

25
00:00:59,440 --> 00:01:03,440
for any two pairs in these in this set

26
00:01:03,440 --> 00:01:05,920
if their sums go inside then they must

27
00:01:05,920 --> 00:01:06,960
be the same

28
00:01:06,960 --> 00:01:11,200
pair in words if one is given

29
00:01:11,200 --> 00:01:14,240
a sum one can identify

30
00:01:14,240 --> 00:01:18,799
the elements which constitute the sum

31
00:01:18,799 --> 00:01:20,799
the questions in this area of study is

32
00:01:20,799 --> 00:01:21,920
how large t

33
00:01:21,920 --> 00:01:24,159
can be the size of a set of course with

34
00:01:24,159 --> 00:01:25,439
respect to the range

35
00:01:25,439 --> 00:01:28,799
m clearly all some fit

36
00:01:28,799 --> 00:01:31,520
within the range of 2m and therefore 2m

37
00:01:31,520 --> 00:01:33,439
has to be as large as the number of

38
00:01:33,439 --> 00:01:35,200
different sums

39
00:01:35,200 --> 00:01:37,680
and respective constructions do exist

40
00:01:37,680 --> 00:01:40,560
way back from paul erdesh's time

41
00:01:40,560 --> 00:01:42,320
in this talk we're going to discuss

42
00:01:42,320 --> 00:01:44,799
crypto applications of sedum spaces that

43
00:01:44,799 --> 00:01:46,880
can be seen as a multiplicative

44
00:01:46,880 --> 00:01:49,520
and linear algebraic variant of season

45
00:01:49,520 --> 00:01:51,839
sets

46
00:01:52,159 --> 00:01:54,560
a few words about how the research of

47
00:01:54,560 --> 00:01:57,040
season spaces came about

48
00:01:57,040 --> 00:01:59,280
in the early 2000s the hot topic in the

49
00:01:59,280 --> 00:02:01,280
coding theory community was network

50
00:02:01,280 --> 00:02:02,479
coding

51
00:02:02,479 --> 00:02:04,399
this topic discusses information

52
00:02:04,399 --> 00:02:06,479
transmission in networks from multiple

53
00:02:06,479 --> 00:02:08,878
sources to multiple things

54
00:02:08,878 --> 00:02:10,800
and the surprising result there is that

55
00:02:10,800 --> 00:02:12,400
linearly combining packets

56
00:02:12,400 --> 00:02:14,160
in intermediate nodes can achieve the

57
00:02:14,160 --> 00:02:17,200
capacity of the network

58
00:02:17,200 --> 00:02:19,440
this results in interest in so-called

59
00:02:19,440 --> 00:02:20,959
subspace codes

60
00:02:20,959 --> 00:02:23,840
a subspace code is a set of subspecies

61
00:02:23,840 --> 00:02:24,400
of

62
00:02:24,400 --> 00:02:26,640
the extension field f q to the n or the

63
00:02:26,640 --> 00:02:28,080
base field f q

64
00:02:28,080 --> 00:02:30,319
such that any two has low dimensional

65
00:02:30,319 --> 00:02:31,599
intersection

66
00:02:31,599 --> 00:02:33,840
they are used for error correction in

67
00:02:33,840 --> 00:02:35,440
network coding

68
00:02:35,440 --> 00:02:38,160
this observation it ignited an influx of

69
00:02:38,160 --> 00:02:38,720
research

70
00:02:38,720 --> 00:02:40,879
about subspace codes which which

71
00:02:40,879 --> 00:02:41,840
included

72
00:02:41,840 --> 00:02:45,040
cyclic subspace codes these are subspace

73
00:02:45,040 --> 00:02:46,400
codes with an additional

74
00:02:46,400 --> 00:02:48,800
field structure mean meaning that they

75
00:02:48,800 --> 00:02:51,120
exploit their construction exploits

76
00:02:51,120 --> 00:02:53,200
structure of the extension field not

77
00:02:53,200 --> 00:02:54,400
that not just

78
00:02:54,400 --> 00:02:57,680
its structure as a vector space

79
00:02:57,680 --> 00:03:01,200
and that's where me and my collaborators

80
00:03:01,200 --> 00:03:04,319
show up they can be constructed from the

81
00:03:04,319 --> 00:03:05,680
so-called seating space

82
00:03:05,680 --> 00:03:07,280
which we haven't seen the definition of

83
00:03:07,280 --> 00:03:08,959
yet

84
00:03:08,959 --> 00:03:11,120
this brings us to this paper where we

85
00:03:11,120 --> 00:03:13,200
show that the same seed-on spaces that

86
00:03:13,200 --> 00:03:14,800
were used in this research

87
00:03:14,800 --> 00:03:17,440
are also applicable to construct the

88
00:03:17,440 --> 00:03:18,159
public key

89
00:03:18,159 --> 00:03:23,040
crypto systems with no further ado

90
00:03:23,040 --> 00:03:26,159
acetone space is a subspace of the

91
00:03:26,159 --> 00:03:28,879
extension field over the base field

92
00:03:28,879 --> 00:03:31,840
such that take any two pairs of elements

93
00:03:31,840 --> 00:03:33,120
multiply them

94
00:03:33,120 --> 00:03:35,360
if you get the same result of the

95
00:03:35,360 --> 00:03:36,799
multiplication

96
00:03:36,799 --> 00:03:40,400
then these pairs must be identical up to

97
00:03:40,400 --> 00:03:44,959
a constant multiple from the base field

98
00:03:44,959 --> 00:03:47,360
in other words given the product one can

99
00:03:47,360 --> 00:03:49,360
determine the elements uniquely

100
00:03:49,360 --> 00:03:52,080
up to a multiplication by scaling where

101
00:03:52,080 --> 00:03:54,000
is the scalar coming from

102
00:03:54,000 --> 00:03:57,519
since you can always squeeze any scalar

103
00:03:57,519 --> 00:04:00,560
lambda non-zero from the base field here

104
00:04:00,560 --> 00:04:01,200
and still

105
00:04:01,200 --> 00:04:04,959
get the same product a similar question

106
00:04:04,959 --> 00:04:06,799
what is the largest k which is the

107
00:04:06,799 --> 00:04:08,080
dimension of the

108
00:04:08,080 --> 00:04:11,360
c double space with respect to n

109
00:04:11,360 --> 00:04:14,879
of a subspace that has this property

110
00:04:14,879 --> 00:04:16,959
similar counting arguments show that n

111
00:04:16,959 --> 00:04:20,079
has to be at least 2k but give or take

112
00:04:20,079 --> 00:04:22,240
and respective construction was given by

113
00:04:22,240 --> 00:04:24,080
my collaborators a few years ago

114
00:04:24,080 --> 00:04:27,520
with n equals 2k i will only remark

115
00:04:27,520 --> 00:04:29,120
that acetone space is not something

116
00:04:29,120 --> 00:04:31,199
unique there are plenty of those

117
00:04:31,199 --> 00:04:34,960
and a rough boundary to the uh

118
00:04:35,680 --> 00:04:38,720
why should they be uh applicable to

119
00:04:38,720 --> 00:04:42,960
uh cryptography intuitively

120
00:04:42,960 --> 00:04:45,919
for a and b you see down space b to

121
00:04:45,919 --> 00:04:46,479
factor

122
00:04:46,479 --> 00:04:49,040
the product to the constituent elements

123
00:04:49,040 --> 00:04:50,000
one must know

124
00:04:50,000 --> 00:04:52,960
v a different mean v would result in a

125
00:04:52,960 --> 00:04:55,040
different factorization

126
00:04:55,040 --> 00:04:58,080
so the idea here

127
00:04:58,080 --> 00:05:01,039
is alice choosing a seed on a secret

128
00:05:01,039 --> 00:05:02,160
seed on space

129
00:05:02,160 --> 00:05:05,360
b publishes something that enables the

130
00:05:05,360 --> 00:05:06,240
sender

131
00:05:06,240 --> 00:05:08,840
to compute products but still keeps v

132
00:05:08,840 --> 00:05:10,639
private

133
00:05:10,639 --> 00:05:13,680
the sender will then encrypt its message

134
00:05:13,680 --> 00:05:16,720
a and b to the ciphertext a b

135
00:05:16,720 --> 00:05:20,160
without knowing b alice would then be

136
00:05:20,160 --> 00:05:21,520
able to factor

137
00:05:21,520 --> 00:05:24,960
a b to a and b

138
00:05:28,479 --> 00:05:30,160
in what follows we show that this can be

139
00:05:30,160 --> 00:05:31,520
done not only

140
00:05:31,520 --> 00:05:33,840
with bob not knowing b but even without

141
00:05:33,840 --> 00:05:36,000
knowing that there is any extension

142
00:05:36,000 --> 00:05:37,520
field

143
00:05:37,520 --> 00:05:40,240
in this scheme

144
00:05:40,880 --> 00:05:43,520
the question is which b should alice use

145
00:05:43,520 --> 00:05:44,880
which stenon stays

146
00:05:44,880 --> 00:05:47,680
and the answer is literally emmy as long

147
00:05:47,680 --> 00:05:48,560
as she knows

148
00:05:48,560 --> 00:05:52,400
some efficient factorization on it

149
00:05:52,400 --> 00:05:54,800
we naturally use the construction um

150
00:05:54,800 --> 00:05:56,240
that we had in the paper

151
00:05:56,240 --> 00:05:59,280
way back when which is rather simple

152
00:05:59,280 --> 00:06:02,639
omitting some technicalities

153
00:06:02,639 --> 00:06:05,120
the construction is as follows take any

154
00:06:05,120 --> 00:06:05,680
gamma

155
00:06:05,680 --> 00:06:07,840
which does not like the intermediate

156
00:06:07,840 --> 00:06:09,520
field f u to the k

157
00:06:09,520 --> 00:06:12,880
where n equals 2k and take

158
00:06:12,880 --> 00:06:15,199
the simple construction of all elements

159
00:06:15,199 --> 00:06:15,919
of the form

160
00:06:15,919 --> 00:06:18,840
u plus u to the q gamma we're using the

161
00:06:18,840 --> 00:06:21,039
intermediate

162
00:06:21,039 --> 00:06:23,520
in a nutshell this works since one and

163
00:06:23,520 --> 00:06:25,440
gamma are linearly independent

164
00:06:25,440 --> 00:06:28,240
over the intermediate field and

165
00:06:28,240 --> 00:06:29,440
therefore

166
00:06:29,440 --> 00:06:31,440
the product of two elements from this

167
00:06:31,440 --> 00:06:34,800
feed which has this form for some u and

168
00:06:34,800 --> 00:06:35,120
v

169
00:06:35,120 --> 00:06:37,440
in the intermediate field can be

170
00:06:37,440 --> 00:06:39,280
described as a linear combination

171
00:06:39,280 --> 00:06:41,759
of one and gamma the coefficients in

172
00:06:41,759 --> 00:06:43,600
these linear combinations are from

173
00:06:43,600 --> 00:06:46,400
the intermediate field and can be rather

174
00:06:46,400 --> 00:06:48,080
easily extracted

175
00:06:48,080 --> 00:06:50,160
this gives us an efficient factorization

176
00:06:50,160 --> 00:06:51,680
algorithm for products

177
00:06:51,680 --> 00:06:54,080
in these in seed on spaces v that were

178
00:06:54,080 --> 00:06:55,039
constructed

179
00:06:55,039 --> 00:06:58,400
according to our construction

180
00:06:58,479 --> 00:07:01,840
the challenge here i repeat is to enable

181
00:07:01,840 --> 00:07:03,360
alice to publish something

182
00:07:03,360 --> 00:07:05,280
which enables the sender to compute

183
00:07:05,280 --> 00:07:09,120
products in b but does not expose b

184
00:07:09,120 --> 00:07:12,160
the idea that we use is as follows

185
00:07:12,160 --> 00:07:15,280
fix some basis v1 through vk for your

186
00:07:15,280 --> 00:07:16,080
seed on space

187
00:07:16,080 --> 00:07:18,800
v and observe that for every two

188
00:07:18,800 --> 00:07:19,360
elements

189
00:07:19,360 --> 00:07:23,599
a b in it they can of course be

190
00:07:23,599 --> 00:07:25,919
represented as a linear combination of

191
00:07:25,919 --> 00:07:27,039
those v one through v

192
00:07:27,039 --> 00:07:30,400
k over the base field however

193
00:07:30,400 --> 00:07:32,960
when we compute the product between

194
00:07:32,960 --> 00:07:33,520
these

195
00:07:33,520 --> 00:07:36,720
linear combinations move it to vector

196
00:07:36,720 --> 00:07:37,120
form

197
00:07:37,120 --> 00:07:39,520
then move it to a matrix form we see

198
00:07:39,520 --> 00:07:40,800
that the so-called

199
00:07:40,800 --> 00:07:44,000
multiplication table here arises this

200
00:07:44,000 --> 00:07:44,560
probably

201
00:07:44,560 --> 00:07:46,479
doesn't come as a great surprise to many

202
00:07:46,479 --> 00:07:48,160
of you that already know

203
00:07:48,160 --> 00:07:50,639
that multiplication in finite field is

204
00:07:50,639 --> 00:07:54,160
technically the bi-linear form

205
00:07:54,160 --> 00:07:56,639
therefore our idea here is to publish

206
00:07:56,639 --> 00:07:58,080
the multiplication table

207
00:07:58,080 --> 00:08:00,879
v of a secret cdung space without

208
00:08:00,879 --> 00:08:03,919
revealing its sentences

209
00:08:03,919 --> 00:08:07,280
this happens as follows the parameters

210
00:08:07,280 --> 00:08:08,479
of the system are q

211
00:08:08,479 --> 00:08:11,199
the base field size okay the dimension

212
00:08:11,199 --> 00:08:12,879
of the c down states

213
00:08:12,879 --> 00:08:16,080
n here would be just 2k

214
00:08:16,080 --> 00:08:19,360
alice begins by choosing a construction

215
00:08:19,360 --> 00:08:21,520
for the extension field

216
00:08:21,520 --> 00:08:25,199
and a basis the construction of

217
00:08:25,199 --> 00:08:28,400
some c dog space again will be rendered

218
00:08:28,400 --> 00:08:31,520
and it's in a respective basis

219
00:08:31,520 --> 00:08:34,000
then alice will construct the so-called

220
00:08:34,000 --> 00:08:36,080
multiplication table of v

221
00:08:36,080 --> 00:08:38,958
which is this basis transposed times

222
00:08:38,958 --> 00:08:40,399
itself

223
00:08:40,399 --> 00:08:43,200
this is a k by k matrix over the

224
00:08:43,200 --> 00:08:45,839
extension field mass q to the m

225
00:08:45,839 --> 00:08:48,800
and as such it can be represented as a

226
00:08:48,800 --> 00:08:50,399
linear combination

227
00:08:50,399 --> 00:08:54,320
of some matrices times

228
00:08:54,320 --> 00:08:58,720
the basis elements beta 1 through beta

229
00:08:58,720 --> 00:09:01,040
these matrices over here are k by 2

230
00:09:01,040 --> 00:09:01,920
matrices

231
00:09:01,920 --> 00:09:05,040
over f cube these matrices

232
00:09:05,040 --> 00:09:07,680
will be precisely the public key which

233
00:09:07,680 --> 00:09:10,480
alice publishes

234
00:09:10,480 --> 00:09:12,399
when bob wants to send something to

235
00:09:12,399 --> 00:09:13,600
alice it will

236
00:09:13,600 --> 00:09:16,399
map its message into two vectors of

237
00:09:16,399 --> 00:09:17,200
length k

238
00:09:17,200 --> 00:09:21,120
over f q and send the bilinear product

239
00:09:21,120 --> 00:09:22,560
of these elements

240
00:09:22,560 --> 00:09:25,518
by the matrix m

241
00:09:26,560 --> 00:09:30,000
moving on when alice receives this

242
00:09:30,000 --> 00:09:33,279
ciphertext she uses the secret basis

243
00:09:33,279 --> 00:09:35,360
of the extension field to compute the

244
00:09:35,360 --> 00:09:38,240
following linear combination

245
00:09:38,240 --> 00:09:40,880
it equals this expression where you can

246
00:09:40,880 --> 00:09:41,680
see that the

247
00:09:41,680 --> 00:09:43,680
expression here inside the parenthesis

248
00:09:43,680 --> 00:09:45,839
is simply

249
00:09:45,839 --> 00:09:48,240
the multiplication table of the secret c

250
00:09:48,240 --> 00:09:49,040
dot space

251
00:09:49,040 --> 00:09:53,360
b as such this linear combination

252
00:09:53,360 --> 00:09:56,560
is simply a product between two elements

253
00:09:56,560 --> 00:10:00,319
in the secret c on space b

254
00:10:00,480 --> 00:10:02,839
therefore these two elements can be

255
00:10:02,839 --> 00:10:04,800
extracted

256
00:10:04,800 --> 00:10:07,920
from which alice can extract the precise

257
00:10:07,920 --> 00:10:11,040
vectors a1 ak and b1 through bk which is

258
00:10:11,040 --> 00:10:18,079
bob's message

259
00:10:18,079 --> 00:10:20,640
let's think about the hardness of this

260
00:10:20,640 --> 00:10:21,279
if

261
00:10:21,279 --> 00:10:24,000
sees one one thing that she sees is the

262
00:10:24,000 --> 00:10:24,800
public key

263
00:10:24,800 --> 00:10:28,079
i.e the matrices m1 through mn

264
00:10:28,079 --> 00:10:31,600
which compose the multiplication table

265
00:10:31,600 --> 00:10:33,279
of the season space

266
00:10:33,279 --> 00:10:35,920
yet she does not know bases of the seed

267
00:10:35,920 --> 00:10:37,040
on space nor

268
00:10:37,040 --> 00:10:39,440
the basis of the extension field which

269
00:10:39,440 --> 00:10:42,560
are used in this expression

270
00:10:42,560 --> 00:10:46,399
she also sees ciphertext meaning the

271
00:10:46,399 --> 00:10:48,480
bilinear product of the message by the

272
00:10:48,480 --> 00:10:51,040
matrices and i

273
00:10:51,040 --> 00:10:53,279
therefore she needs to solve this by

274
00:10:53,279 --> 00:10:55,600
linear set of equations which has

275
00:10:55,600 --> 00:10:58,720
n variables and n equations

276
00:10:58,720 --> 00:11:01,360
this is the reason that we categorize

277
00:11:01,360 --> 00:11:02,640
this cryptosystem

278
00:11:02,640 --> 00:11:05,760
as a multivariate one

279
00:11:06,880 --> 00:11:08,880
multivariate cryptosystems are normally

280
00:11:08,880 --> 00:11:11,040
broken by mid-rank attack in either one

281
00:11:11,040 --> 00:11:12,320
of two formulations

282
00:11:12,320 --> 00:11:14,160
the kernel formulation and reminder

283
00:11:14,160 --> 00:11:17,360
formulation which we'll discuss briefly

284
00:11:17,360 --> 00:11:19,839
in this paper we prove that both

285
00:11:19,839 --> 00:11:21,200
formulations succeed

286
00:11:21,200 --> 00:11:23,200
only with very small probabilities

287
00:11:23,200 --> 00:11:24,959
specifically exponentially small

288
00:11:24,959 --> 00:11:28,079
in the size of the plaintext support

289
00:11:28,079 --> 00:11:29,200
these experiments

290
00:11:29,200 --> 00:11:30,640
we support these findings with

291
00:11:30,640 --> 00:11:32,240
experiments and discuss

292
00:11:32,240 --> 00:11:35,040
several specialized methods i would like

293
00:11:35,040 --> 00:11:35,760
to disclaim

294
00:11:35,760 --> 00:11:37,760
we're not claiming any breakthrough in

295
00:11:37,760 --> 00:11:40,320
post-quantum cryptography here

296
00:11:40,320 --> 00:11:43,519
we have hardness proofs for attacks uh

297
00:11:43,519 --> 00:11:46,079
of this form which are quite common but

298
00:11:46,079 --> 00:11:47,040
we do not have

299
00:11:47,040 --> 00:11:48,640
a hardness proof of the civil

300
00:11:48,640 --> 00:11:52,000
cryptosystems in general

301
00:11:54,800 --> 00:11:58,480
so eve sees these these matrices

302
00:11:58,480 --> 00:12:01,519
that were constructed as such where this

303
00:12:01,519 --> 00:12:03,360
is the multiplication table of the seed

304
00:12:03,360 --> 00:12:05,200
on space

305
00:12:05,200 --> 00:12:07,279
observe that this multiplication table

306
00:12:07,279 --> 00:12:09,360
is simply a rank one matrix over the

307
00:12:09,360 --> 00:12:11,200
extension

308
00:12:11,200 --> 00:12:14,079
therefore to extract the private key

309
00:12:14,079 --> 00:12:15,760
from the public key

310
00:12:15,760 --> 00:12:18,880
eve needs to find a rank one linear

311
00:12:18,880 --> 00:12:20,959
combination of the mis where the

312
00:12:20,959 --> 00:12:22,000
coefficients

313
00:12:22,000 --> 00:12:25,519
come from the extension this will allow

314
00:12:25,519 --> 00:12:25,760
her

315
00:12:25,760 --> 00:12:29,279
to find the bases of the seat on space

316
00:12:29,279 --> 00:12:29,920
and therefore

317
00:12:29,920 --> 00:12:32,719
to break the system

318
00:12:35,519 --> 00:12:39,120
stated formally given the public key

319
00:12:39,120 --> 00:12:41,120
one needs to find the beta i's in the

320
00:12:41,120 --> 00:12:42,160
extension field

321
00:12:42,160 --> 00:12:44,320
such the respective rank of this target

322
00:12:44,320 --> 00:12:47,440
matrix is one

323
00:12:47,760 --> 00:12:49,920
this is a min rank problem with a few

324
00:12:49,920 --> 00:12:52,399
notable differences

325
00:12:52,399 --> 00:12:54,480
those mi's are over the base field where

326
00:12:54,480 --> 00:12:55,440
the coefficients

327
00:12:55,440 --> 00:12:57,680
are over the extension normally in main

328
00:12:57,680 --> 00:13:00,240
rankings are the same field

329
00:13:00,240 --> 00:13:03,040
the solution beta i should be a basis to

330
00:13:03,040 --> 00:13:05,040
an extension field

331
00:13:05,040 --> 00:13:07,120
and the resulting vi should spend some

332
00:13:07,120 --> 00:13:08,880
cbl space

333
00:13:08,880 --> 00:13:11,279
it is unclear to us what can be done if

334
00:13:11,279 --> 00:13:12,880
this system is solved

335
00:13:12,880 --> 00:13:14,800
and the solution does not satisfy these

336
00:13:14,800 --> 00:13:16,240
requirements

337
00:13:16,240 --> 00:13:18,480
nevertheless we focus on finding any

338
00:13:18,480 --> 00:13:19,360
solution

339
00:13:19,360 --> 00:13:22,079
not necessarily which satisfies these

340
00:13:22,079 --> 00:13:25,040
extra conditions

341
00:13:25,360 --> 00:13:28,079
in its first formulation the idea is

342
00:13:28,079 --> 00:13:30,800
that any vector in the target matrix

343
00:13:30,800 --> 00:13:34,160
gives rise to this system of linear

344
00:13:34,160 --> 00:13:34,959
equations

345
00:13:34,959 --> 00:13:38,399
linear in the lambda i's since then

346
00:13:38,399 --> 00:13:38,959
there are

347
00:13:38,959 --> 00:13:41,680
um k which is n over two linear

348
00:13:41,680 --> 00:13:42,880
equations here

349
00:13:42,880 --> 00:13:46,320
and n lambda i's if we manage to

350
00:13:46,320 --> 00:13:49,760
to find meaning to guess two or more

351
00:13:49,760 --> 00:13:52,320
such use we get a system with the

352
00:13:52,320 --> 00:13:53,680
potential to

353
00:13:53,680 --> 00:13:57,040
pin down the exact solution

354
00:13:57,040 --> 00:14:00,160
lambda however

355
00:14:00,160 --> 00:14:03,519
this is not feasible the kernel here i

356
00:14:03,519 --> 00:14:04,959
remind you is over

357
00:14:04,959 --> 00:14:07,920
the extension view therefore if you

358
00:14:07,920 --> 00:14:08,320
choose

359
00:14:08,320 --> 00:14:11,600
u at random the probability that this u

360
00:14:11,600 --> 00:14:14,639
is in the kernel is exponentially small

361
00:14:14,639 --> 00:14:17,600
in the size of the extension field

362
00:14:17,600 --> 00:14:19,199
therefore it is unlikely

363
00:14:19,199 --> 00:14:23,040
that this guess will work

364
00:14:23,040 --> 00:14:25,040
even if you only want to find one and

365
00:14:25,040 --> 00:14:26,480
nevertheless if you need to find

366
00:14:26,480 --> 00:14:29,519
two you might suggest cheat

367
00:14:29,519 --> 00:14:31,680
and guess a vector in the base field

368
00:14:31,680 --> 00:14:33,600
rather than the extension field

369
00:14:33,600 --> 00:14:35,360
which is doomed to fail and this thing

370
00:14:35,360 --> 00:14:38,560
over here is a one line

371
00:14:41,199 --> 00:14:43,279
in the minor formulation of the min rank

372
00:14:43,279 --> 00:14:45,040
attack

373
00:14:45,040 --> 00:14:48,880
we observe that if the rank of the

374
00:14:48,880 --> 00:14:51,760
target matrix is indeed one it implies

375
00:14:51,760 --> 00:14:52,399
that all

376
00:14:52,399 --> 00:14:53,920
two by two minors meaning all

377
00:14:53,920 --> 00:14:56,079
determinants of two by two matrices

378
00:14:56,079 --> 00:14:59,440
should be zero

379
00:14:59,440 --> 00:15:02,000
this provides setting all the two by two

380
00:15:02,000 --> 00:15:03,120
minus to zero

381
00:15:03,120 --> 00:15:05,839
provides a quadratic system in the

382
00:15:05,839 --> 00:15:08,480
lambda eyes

383
00:15:08,480 --> 00:15:10,880
this system is usually solved via via

384
00:15:10,880 --> 00:15:12,079
linearization

385
00:15:12,079 --> 00:15:15,360
meaning every player on the island j

386
00:15:15,360 --> 00:15:18,959
is replaced by a single variable z ij

387
00:15:18,959 --> 00:15:20,320
and then we build the resulting

388
00:15:20,320 --> 00:15:22,800
coefficient matrix called omega

389
00:15:22,800 --> 00:15:26,560
which is now over f q

390
00:15:26,560 --> 00:15:28,880
this coefficient matrix correspond to a

391
00:15:28,880 --> 00:15:30,000
linear system

392
00:15:30,000 --> 00:15:32,639
about n square variables and n to the

393
00:15:32,639 --> 00:15:35,120
fourth equations

394
00:15:35,120 --> 00:15:36,800
we know that the dimension of this

395
00:15:36,800 --> 00:15:38,880
kernel is at least one

396
00:15:38,880 --> 00:15:40,720
this is simply since the system is

397
00:15:40,720 --> 00:15:43,279
solvable the secret basis the solution

398
00:15:43,279 --> 00:15:44,079
to the system

399
00:15:44,079 --> 00:15:46,079
does give you a solution to the linear

400
00:15:46,079 --> 00:15:48,479
system

401
00:15:48,720 --> 00:15:51,279
if the dimension of the kernel is at

402
00:15:51,279 --> 00:15:52,320
most one

403
00:15:52,320 --> 00:15:56,880
we can find it we'll find a solution

404
00:15:56,880 --> 00:15:59,360
arrange it in a matrix it will be an n

405
00:15:59,360 --> 00:16:02,240
by n matrix

406
00:16:02,880 --> 00:16:06,720
this would be probably a rank 1 matrix

407
00:16:06,720 --> 00:16:08,399
we're going to find this rank one

408
00:16:08,399 --> 00:16:09,839
decomposition

409
00:16:09,839 --> 00:16:12,320
and output its elements the elements of

410
00:16:12,320 --> 00:16:14,240
the respective vector

411
00:16:14,240 --> 00:16:17,279
as our solution however

412
00:16:17,279 --> 00:16:19,279
if the dimension of the kernel here

413
00:16:19,279 --> 00:16:20,880
happens to be more than one

414
00:16:20,880 --> 00:16:22,880
we're essentially stuck because we are

415
00:16:22,880 --> 00:16:25,839
left with another mineral problem

416
00:16:25,839 --> 00:16:29,519
once we've found the kernel of omega

417
00:16:29,519 --> 00:16:32,079
inside that kernel we need to find the

418
00:16:32,079 --> 00:16:33,120
respective z

419
00:16:33,120 --> 00:16:35,839
which is of rank one this is technically

420
00:16:35,839 --> 00:16:39,440
the same problem as we began

421
00:16:43,360 --> 00:16:46,240
in most random instances linearization

422
00:16:46,240 --> 00:16:46,720
works

423
00:16:46,720 --> 00:16:48,320
in the minor formulation and the

424
00:16:48,320 --> 00:16:50,079
dimension of the kernel would indeed be

425
00:16:50,079 --> 00:16:52,160
one

426
00:16:52,160 --> 00:16:54,480
in all instances resulting from seed on

427
00:16:54,480 --> 00:16:55,519
cryptosystem

428
00:16:55,519 --> 00:16:57,360
we have the dimension of the kernel

429
00:16:57,360 --> 00:16:58,880
omega equals

430
00:16:58,880 --> 00:17:01,920
2m to put it more formally

431
00:17:01,920 --> 00:17:04,160
we have verified the experimental for

432
00:17:04,160 --> 00:17:05,119
any value

433
00:17:05,119 --> 00:17:08,000
of q and every value of k that the

434
00:17:08,000 --> 00:17:09,280
dimension of the kernel

435
00:17:09,280 --> 00:17:13,199
is 2n we have been able to partially

436
00:17:13,199 --> 00:17:14,799
explain that mathematically

437
00:17:14,799 --> 00:17:17,599
and we showed that for every q and k the

438
00:17:17,599 --> 00:17:20,240
dimension of the resulting

439
00:17:20,240 --> 00:17:24,400
kernel of omega is at least n

440
00:17:24,400 --> 00:17:26,240
meaning there is no straightforward

441
00:17:26,240 --> 00:17:28,319
forward way to solve the minor

442
00:17:28,319 --> 00:17:29,280
formulation

443
00:17:29,280 --> 00:17:34,000
of mirroring problem via linearization

444
00:17:34,080 --> 00:17:36,720
a few words about the proof offline what

445
00:17:36,720 --> 00:17:37,360
we prove

446
00:17:37,360 --> 00:17:39,360
is that in the minor formulation of mean

447
00:17:39,360 --> 00:17:40,960
rank there are at least

448
00:17:40,960 --> 00:17:44,080
n linearly independent vectors in the

449
00:17:44,080 --> 00:17:44,640
kernel

450
00:17:44,640 --> 00:17:47,840
of omega

451
00:17:49,520 --> 00:17:51,360
what we do in the proof is that we take

452
00:17:51,360 --> 00:17:53,840
the multiplication table of the entire

453
00:17:53,840 --> 00:17:57,360
secret field f q to v which gives rise

454
00:17:57,360 --> 00:17:59,200
to these matrices bi

455
00:17:59,200 --> 00:18:00,960
in some sources in the literature this

456
00:18:00,960 --> 00:18:02,240
is called the

457
00:18:02,240 --> 00:18:05,919
uh multiplication tensor of the field

458
00:18:05,919 --> 00:18:09,039
and after some change of basis we

459
00:18:09,039 --> 00:18:12,240
we show that some vectorization of bi

460
00:18:12,240 --> 00:18:15,200
is in the kernel of omega an interesting

461
00:18:15,200 --> 00:18:16,799
fact we observed

462
00:18:16,799 --> 00:18:19,360
is that when we're doing sort of the

463
00:18:19,360 --> 00:18:20,640
secondary attack

464
00:18:20,640 --> 00:18:24,080
meaning we try to find a rank one matrix

465
00:18:24,080 --> 00:18:27,200
in the kernel of omega perhaps this

466
00:18:27,200 --> 00:18:30,559
is all about solvable by linearization

467
00:18:30,559 --> 00:18:33,760
we find once again that the same uh

468
00:18:33,760 --> 00:18:36,880
vectors are also in the kernel this also

469
00:18:36,880 --> 00:18:38,799
happens in your

470
00:18:38,799 --> 00:18:40,880
uh the third time that you do this in

471
00:18:40,880 --> 00:18:42,960
the fourth time and so on

472
00:18:42,960 --> 00:18:44,480
i find this to be a very interesting

473
00:18:44,480 --> 00:18:46,799
phenomenon we were able to explain that

474
00:18:46,799 --> 00:18:48,400
mathematically but we're not sure

475
00:18:48,400 --> 00:18:48,960
exactly

476
00:18:48,960 --> 00:18:52,160
what's the bigger picture different

477
00:18:52,160 --> 00:18:53,760
attacks that we implemented

478
00:18:53,760 --> 00:18:56,160
try to apply problem basis algorithm on

479
00:18:56,160 --> 00:18:57,840
the generic mid-rank

480
00:18:57,840 --> 00:19:01,360
and as expected it was exponential

481
00:19:01,360 --> 00:19:03,280
we also applied several grammar basis

482
00:19:03,280 --> 00:19:04,640
algorithm to find

483
00:19:04,640 --> 00:19:06,799
an equivalence and equivalent c dot

484
00:19:06,799 --> 00:19:08,320
space which performed

485
00:19:08,320 --> 00:19:11,440
the worst of the following tags our call

486
00:19:11,440 --> 00:19:11,760
is

487
00:19:11,760 --> 00:19:13,840
code is available on github if any of

488
00:19:13,840 --> 00:19:16,559
you is interested

489
00:19:18,000 --> 00:19:21,760
for future work right two venues

490
00:19:21,760 --> 00:19:24,080
one of them is the attacking system

491
00:19:24,080 --> 00:19:25,120
probably

492
00:19:25,120 --> 00:19:26,640
by exploiting the structure of this

493
00:19:26,640 --> 00:19:29,280
event space we don't know how

494
00:19:29,280 --> 00:19:31,600
and another thing which we weren't very

495
00:19:31,600 --> 00:19:32,400
able to do

496
00:19:32,400 --> 00:19:34,400
is to analyze the big security of the

497
00:19:34,400 --> 00:19:36,320
system

498
00:19:36,320 --> 00:19:37,919
another venue which we have a few

499
00:19:37,919 --> 00:19:39,440
suggestions is

500
00:19:39,440 --> 00:19:43,120
uh to strengthen the system first of all

501
00:19:43,120 --> 00:19:46,320
to understand where these extra n

502
00:19:46,320 --> 00:19:49,840
dimensions in the kernel are coming from

503
00:19:49,840 --> 00:19:51,760
second is to use a generalization of

504
00:19:51,760 --> 00:19:53,039
signal space

505
00:19:53,039 --> 00:19:56,080
that's called our season space

506
00:19:56,080 --> 00:19:59,039
in an rcd on space you have unique r

507
00:19:59,039 --> 00:19:59,679
products

508
00:19:59,679 --> 00:20:02,400
instead of unique pairwise products in

509
00:20:02,400 --> 00:20:03,280
other words

510
00:20:03,280 --> 00:20:07,200
acetone space is a two cm space

511
00:20:07,200 --> 00:20:09,360
some constructions are known in the same

512
00:20:09,360 --> 00:20:12,959
paper that we have a few years ago

513
00:20:13,120 --> 00:20:14,880
another thing that will strengthen the

514
00:20:14,880 --> 00:20:17,520
system is instead of using

515
00:20:17,520 --> 00:20:19,600
one dimensional multiplication table we

516
00:20:19,600 --> 00:20:21,679
can use a two or three or whatever

517
00:20:21,679 --> 00:20:23,039
dimension

518
00:20:23,039 --> 00:20:25,840
multiplication table meaning instead of

519
00:20:25,840 --> 00:20:26,880
publishing

520
00:20:26,880 --> 00:20:30,640
v v transpose we publish u u transposed

521
00:20:30,640 --> 00:20:32,880
plus v v transposed meaning the

522
00:20:32,880 --> 00:20:34,080
additions of two different

523
00:20:34,080 --> 00:20:36,480
multiplication tables

524
00:20:36,480 --> 00:20:38,480
this would result in attack in an attack

525
00:20:38,480 --> 00:20:39,919
which is trilling

526
00:20:39,919 --> 00:20:41,760
instead of bilinear and therefore the

527
00:20:41,760 --> 00:20:43,200
resulting system

528
00:20:43,200 --> 00:20:46,320
will be more difficult

529
00:20:46,320 --> 00:20:48,000
thank you for your attention and i'll be

530
00:20:48,000 --> 00:21:02,799
happy to take any questions

531
00:21:02,799 --> 00:21:04,879
you

