1
00:00:00,960 --> 00:00:03,679
okay you're ready to go

2
00:00:03,679 --> 00:00:06,160
all right so welcome everybody to our

3
00:00:06,160 --> 00:00:08,240
first invited talk

4
00:00:08,240 --> 00:00:10,240
i mentioned the beginning of the

5
00:00:10,240 --> 00:00:13,120
conference that

6
00:00:14,320 --> 00:00:16,720
one of the themes the theme this year

7
00:00:16,720 --> 00:00:18,960
was

8
00:00:19,520 --> 00:00:22,240
quantum post quantum cryptography and

9
00:00:22,240 --> 00:00:24,800
analysis given these

10
00:00:24,800 --> 00:00:26,720
efforts in standardizing postmodern

11
00:00:26,720 --> 00:00:28,560
cryptography

12
00:00:28,560 --> 00:00:31,599
and then we couldn't think of a

13
00:00:31,599 --> 00:00:34,640
better candidate to give a talk as a

14
00:00:34,640 --> 00:00:35,680
next speaker

15
00:00:35,680 --> 00:00:39,440
who obtained his phd at the ens

16
00:00:39,440 --> 00:00:43,040
in paris and the topic of lattice-based

17
00:00:43,040 --> 00:00:44,239
crypto

18
00:00:44,239 --> 00:00:47,360
did a boston gazillion csd and then

19
00:00:47,360 --> 00:00:50,480
joined cwi in amsterdam

20
00:00:50,480 --> 00:00:54,319
and i have an ambulance going by

21
00:00:54,399 --> 00:00:58,480
sorry about that

22
00:00:58,480 --> 00:01:02,719
where he's now uh work is now tenured

23
00:01:02,719 --> 00:01:05,040
so his uh research is in uh on

24
00:01:05,040 --> 00:01:06,240
cryptology

25
00:01:06,240 --> 00:01:09,360
uh lattices algorithm circuit analysis

26
00:01:09,360 --> 00:01:12,640
and he has substantially contributed to

27
00:01:12,640 --> 00:01:14,960
quantum cryptanalysis of lattice-based

28
00:01:14,960 --> 00:01:16,720
kings

29
00:01:16,720 --> 00:01:19,200
and in particular he's a co-designer of

30
00:01:19,200 --> 00:01:20,640
several kind of schemes

31
00:01:20,640 --> 00:01:22,560
to the next post-crime to the

32
00:01:22,560 --> 00:01:24,840
civilization effort that i just

33
00:01:24,840 --> 00:01:26,000
mentioned

34
00:01:26,000 --> 00:01:29,520
okay so please join me and welcoming

35
00:01:29,520 --> 00:01:32,640
leo to cass

36
00:01:32,799 --> 00:01:34,720
and we will allow you the round of

37
00:01:34,720 --> 00:01:36,159
applause for uh for

38
00:01:36,159 --> 00:01:40,479
next time

39
00:01:40,479 --> 00:01:44,720
let me share my desktop here we are

40
00:01:44,720 --> 00:01:47,360
okay so thank you very much for your

41
00:01:47,360 --> 00:01:48,159
introduction

42
00:01:48,159 --> 00:01:51,360
and uh especially for your invitation so

43
00:01:51,360 --> 00:01:53,040
it's a it's a great honor to be your

44
00:01:53,040 --> 00:01:54,560
invited speaker

45
00:01:54,560 --> 00:01:57,200
i i just now realized that i may not

46
00:01:57,200 --> 00:01:58,640
have prepared a talk on

47
00:01:58,640 --> 00:02:02,320
the topic that you were expecting

48
00:02:02,320 --> 00:02:05,040
uh because i'm i'm going to talk about

49
00:02:05,040 --> 00:02:06,960
lattices and factoring but not

50
00:02:06,960 --> 00:02:08,720
particularly post-quantum

51
00:02:08,720 --> 00:02:12,000
cryptography candidates i hope

52
00:02:12,000 --> 00:02:15,360
you will forgive me for that

53
00:02:15,520 --> 00:02:18,640
but yes so

54
00:02:18,640 --> 00:02:21,680
i today i wanted you to

55
00:02:21,680 --> 00:02:24,480
use this invited talk to revisit uh old

56
00:02:24,480 --> 00:02:25,599
ideas uh

57
00:02:25,599 --> 00:02:27,599
because i think they're nice and uh

58
00:02:27,599 --> 00:02:28,959
they've been uh

59
00:02:28,959 --> 00:02:32,239
a little bit in the air if even maybe in

60
00:02:32,239 --> 00:02:34,400
the news lately with uh

61
00:02:34,400 --> 00:02:37,200
the publication of snore of paper on the

62
00:02:37,200 --> 00:02:38,720
on imprint

63
00:02:38,720 --> 00:02:41,760
uh and those those are reminiscents of

64
00:02:41,760 --> 00:02:42,720
ideas that are

65
00:02:42,720 --> 00:02:46,239
from four years ago and uh and

66
00:02:46,239 --> 00:02:48,160
the reason i wanted to talk about all

67
00:02:48,160 --> 00:02:50,319
this is because i think that

68
00:02:50,319 --> 00:02:53,360
cryptography is is getting old

69
00:02:53,360 --> 00:02:55,519
i'm sorry to say so or maybe i could

70
00:02:55,519 --> 00:02:56,800
could say it uh

71
00:02:56,800 --> 00:02:58,959
if we compared to mathematics maybe we

72
00:02:58,959 --> 00:03:00,720
could say that cryptography has reached

73
00:03:00,720 --> 00:03:04,159
a non-negligible age

74
00:03:04,159 --> 00:03:07,920
and uh and you know

75
00:03:07,920 --> 00:03:09,519
the the history of cryptography of

76
00:03:09,519 --> 00:03:11,280
modern cryptography

77
00:03:11,280 --> 00:03:14,879
uh you know has maybe six or seven

78
00:03:14,879 --> 00:03:16,879
academic generation in it so

79
00:03:16,879 --> 00:03:18,959
i think we're reaching a point where we

80
00:03:18,959 --> 00:03:20,159
might start

81
00:03:20,159 --> 00:03:22,800
losing bits of our scientific history

82
00:03:22,800 --> 00:03:23,360
losing

83
00:03:23,360 --> 00:03:25,599
uh track of of some ideas that have

84
00:03:25,599 --> 00:03:27,760
existed and that could still

85
00:03:27,760 --> 00:03:31,360
uh be useful uh today so

86
00:03:31,360 --> 00:03:33,120
um yeah i think we should write our

87
00:03:33,120 --> 00:03:35,120
history of course we we've written a lot

88
00:03:35,120 --> 00:03:36,799
about all the great victories

89
00:03:36,799 --> 00:03:39,440
of cryptography but there are also all

90
00:03:39,440 --> 00:03:39,920
small

91
00:03:39,920 --> 00:03:42,720
small battles that maybe seemed lost at

92
00:03:42,720 --> 00:03:44,159
the time

93
00:03:44,159 --> 00:03:47,440
i think they they deserve to to to

94
00:03:47,440 --> 00:03:50,879
to stay alive in some sense and for this

95
00:03:50,879 --> 00:03:52,799
we need to to revisit them from time to

96
00:03:52,799 --> 00:03:54,879
time

97
00:03:54,879 --> 00:03:59,040
um another motivation uh for this talk

98
00:03:59,040 --> 00:04:02,239
is because i i wanted to

99
00:04:02,239 --> 00:04:04,799
reinstate a little bit knapsack-based

100
00:04:04,799 --> 00:04:06,959
cryptography in particular

101
00:04:06,959 --> 00:04:09,519
so knapsack-based cryptography is like

102
00:04:09,519 --> 00:04:11,360
the ancestor of lightest-based

103
00:04:11,360 --> 00:04:12,560
cryptography

104
00:04:12,560 --> 00:04:14,799
and as soon as i started my phd in

105
00:04:14,799 --> 00:04:16,320
cryptography i was like

106
00:04:16,320 --> 00:04:18,079
uh serve this narrative that

107
00:04:18,079 --> 00:04:19,759
knapsack-based cryptography was kind of

108
00:04:19,759 --> 00:04:21,440
an embarrassment

109
00:04:21,440 --> 00:04:24,240
and we we should forget all about it and

110
00:04:24,240 --> 00:04:25,520
thanks to itai's

111
00:04:25,520 --> 00:04:29,120
we grow beyond this dark age

112
00:04:29,120 --> 00:04:31,759
and uh and we finally have lattice-based

113
00:04:31,759 --> 00:04:33,919
cryptography which is much better

114
00:04:33,919 --> 00:04:35,360
i don't deny that lattice-based

115
00:04:35,360 --> 00:04:37,280
cryptography as we do it today is is

116
00:04:37,280 --> 00:04:39,120
better it's more secure

117
00:04:39,120 --> 00:04:41,280
but at the same time i don't really

118
00:04:41,280 --> 00:04:43,680
subscribe to the narrative

119
00:04:43,680 --> 00:04:46,720
and i mean one way of phrasing it would

120
00:04:46,720 --> 00:04:47,199
be the

121
00:04:47,199 --> 00:04:50,560
words of isaac newton uh if i have seen

122
00:04:50,560 --> 00:04:51,280
further

123
00:04:51,280 --> 00:04:54,840
it is by standing on the shoulders of

124
00:04:54,840 --> 00:04:56,720
giants

125
00:04:56,720 --> 00:04:59,680
and while i certainly recognize that

126
00:04:59,680 --> 00:05:00,320
aitai

127
00:05:00,320 --> 00:05:04,160
is a giant of legends based cryptography

128
00:05:04,160 --> 00:05:07,360
i i think we should more often

129
00:05:07,360 --> 00:05:11,199
try to uh view the world

130
00:05:11,199 --> 00:05:14,960
that aitai himself uh had from his

131
00:05:14,960 --> 00:05:17,919
shoulders you know we this giant should

132
00:05:17,919 --> 00:05:19,199
not hide us from

133
00:05:19,199 --> 00:05:22,400
from all the other giants so

134
00:05:22,400 --> 00:05:26,479
let me talk about uh four giants today

135
00:05:26,479 --> 00:05:29,280
uh the first two are klaus petersnell

136
00:05:29,280 --> 00:05:29,520
and

137
00:05:29,520 --> 00:05:33,120
leonard aldmann and they proposed

138
00:05:33,120 --> 00:05:35,840
i mean they studied an idea a very

139
00:05:35,840 --> 00:05:37,280
interesting idea

140
00:05:37,280 --> 00:05:41,600
to try to factor large integers

141
00:05:41,600 --> 00:05:44,960
uh using lattice techniques and by

142
00:05:44,960 --> 00:05:47,120
more precisely by trying to find short

143
00:05:47,120 --> 00:05:48,320
vector in

144
00:05:48,320 --> 00:05:50,960
in a certain lattice very carefully

145
00:05:50,960 --> 00:05:52,720
constructed

146
00:05:52,720 --> 00:05:56,000
and maybe even more forgotten uh

147
00:05:56,000 --> 00:05:59,199
is a cryptosystem of benny shore and ron

148
00:05:59,199 --> 00:06:00,319
rivers

149
00:06:00,319 --> 00:06:04,240
which uh as i will show work

150
00:06:04,240 --> 00:06:07,440
um under the dual id and this time we're

151
00:06:07,440 --> 00:06:09,520
going to do lattice stuff

152
00:06:09,520 --> 00:06:12,639
by means of factorizations more

153
00:06:12,639 --> 00:06:14,319
precisely we're going to

154
00:06:14,319 --> 00:06:17,680
solve decoding problems in lattices uh

155
00:06:17,680 --> 00:06:20,479
by by factoring integer or by factoring

156
00:06:20,479 --> 00:06:22,880
polynomials

157
00:06:22,880 --> 00:06:25,199
and so i thought that all those ideas

158
00:06:25,199 --> 00:06:27,199
would fit very well together and they're

159
00:06:27,199 --> 00:06:29,440
they're all from basically the same time

160
00:06:29,440 --> 00:06:30,960
frame by the end of the 80s and

161
00:06:30,960 --> 00:06:32,160
beginning of the

162
00:06:32,160 --> 00:06:35,440
of the 90s uh

163
00:06:35,440 --> 00:06:37,360
so there will be three parts to my talk

164
00:06:37,360 --> 00:06:39,120
the the first part about factoring with

165
00:06:39,120 --> 00:06:41,039
lattices the second part about decoding

166
00:06:41,039 --> 00:06:42,720
with factorization

167
00:06:42,720 --> 00:06:45,360
and you know because all of this

168
00:06:45,360 --> 00:06:46,880
historical review is

169
00:06:46,880 --> 00:06:49,360
is is still driven by a purpose there

170
00:06:49,360 --> 00:06:50,639
will be a

171
00:06:50,639 --> 00:06:53,759
third part where i conclude with some

172
00:06:53,759 --> 00:06:55,919
critique of uh lattice-based

173
00:06:55,919 --> 00:06:57,120
cryptography as

174
00:06:57,120 --> 00:07:00,080
it is today

175
00:07:00,160 --> 00:07:03,440
um so let me let me get started with

176
00:07:03,440 --> 00:07:06,319
uh the first part so factoring with uh

177
00:07:06,319 --> 00:07:08,639
lattice short vectors

178
00:07:08,639 --> 00:07:12,400
um give me a second to set my timer

179
00:07:12,400 --> 00:07:14,080
because i forgot to set it

180
00:07:14,080 --> 00:07:17,199
okay um

181
00:07:17,199 --> 00:07:20,160
so how how does factoring work before i

182
00:07:20,160 --> 00:07:20,720
show you

183
00:07:20,720 --> 00:07:24,000
uh the strategy of schnorr for

184
00:07:24,000 --> 00:07:25,759
for factoring i should first explain

185
00:07:25,759 --> 00:07:28,479
user let's say the standard strategy not

186
00:07:28,479 --> 00:07:29,520
the most advanced

187
00:07:29,520 --> 00:07:32,639
algorithms but that is the basic uh

188
00:07:32,639 --> 00:07:35,840
algorithm for factoring how they work

189
00:07:35,840 --> 00:07:38,319
uh so i will present you more

190
00:07:38,319 --> 00:07:40,800
specifically the quadratic sieve

191
00:07:40,800 --> 00:07:42,720
so in the in this spot we'll be trying

192
00:07:42,720 --> 00:07:44,960
to factor this large number

193
00:07:44,960 --> 00:07:47,680
n and i'm going to use the equal with

194
00:07:47,680 --> 00:07:48,639
the triple bar for

195
00:07:48,639 --> 00:07:52,080
for convergence model n and

196
00:07:52,080 --> 00:07:54,240
to to factor it we're going to try to

197
00:07:54,240 --> 00:07:56,479
find a non-trivial solution

198
00:07:56,479 --> 00:07:58,960
to this equation x squared congruent to

199
00:07:58,960 --> 00:07:59,759
y squared

200
00:07:59,759 --> 00:08:03,199
modulo n so why is this helpful well

201
00:08:03,199 --> 00:08:03,919
because i can

202
00:08:03,919 --> 00:08:06,319
factor this equation into the following

203
00:08:06,319 --> 00:08:07,520
form x minus y

204
00:08:07,520 --> 00:08:10,560
times x plus y converted to zero and

205
00:08:10,560 --> 00:08:12,639
is if those two factors are are

206
00:08:12,639 --> 00:08:14,319
non-trivial

207
00:08:14,319 --> 00:08:17,759
uh meaning that x are is different from

208
00:08:17,759 --> 00:08:18,160
y

209
00:08:18,160 --> 00:08:21,440
or minus y modulo n then

210
00:08:21,440 --> 00:08:24,560
actually i can deduce a factor the

211
00:08:24,560 --> 00:08:26,080
factorization of n

212
00:08:26,080 --> 00:08:28,879
out of this of out of the factorization

213
00:08:28,879 --> 00:08:31,039
of this equation

214
00:08:31,039 --> 00:08:33,200
so now the question is how do we

215
00:08:33,200 --> 00:08:34,399
construct this x

216
00:08:34,399 --> 00:08:37,440
and this y and it's going to be a

217
00:08:37,440 --> 00:08:38,000
two-step

218
00:08:38,000 --> 00:08:40,320
process the first one is called relation

219
00:08:40,320 --> 00:08:42,159
collection so if you if you read snore

220
00:08:42,159 --> 00:08:44,640
paper it speaks of factoring relations

221
00:08:44,640 --> 00:08:47,760
so this is this this technique is trying

222
00:08:47,760 --> 00:08:49,839
to improve the the first step in some

223
00:08:49,839 --> 00:08:51,920
sense of the quadratic sequence

224
00:08:51,920 --> 00:08:56,399
and then there is some linear algebras

225
00:08:56,720 --> 00:08:58,800
so quickly the first step relation

226
00:08:58,800 --> 00:08:59,760
collection so

227
00:08:59,760 --> 00:09:03,519
relations uh are going to be

228
00:09:03,519 --> 00:09:05,920
uh given over what is called the factor

229
00:09:05,920 --> 00:09:08,320
basis so that is just the set

230
00:09:08,320 --> 00:09:10,880
of all the primes below a certain bound

231
00:09:10,880 --> 00:09:12,640
b

232
00:09:12,640 --> 00:09:15,839
and the fact that the collection loop

233
00:09:15,839 --> 00:09:17,680
goes as follow we are going to repeat

234
00:09:17,680 --> 00:09:19,200
the following step

235
00:09:19,200 --> 00:09:21,760
we are going to take a random x and

236
00:09:21,760 --> 00:09:22,399
compute

237
00:09:22,399 --> 00:09:24,640
its square which we are going to reduce

238
00:09:24,640 --> 00:09:26,240
modulo n

239
00:09:26,240 --> 00:09:30,640
and this this square has a z modulo n

240
00:09:30,640 --> 00:09:34,800
i'm going to view it as an integer again

241
00:09:34,800 --> 00:09:37,440
and i'm going to try to factor it over

242
00:09:37,440 --> 00:09:39,279
the factor basis

243
00:09:39,279 --> 00:09:40,880
so here at this point you might have the

244
00:09:40,880 --> 00:09:42,399
feeling that i'm just reducing the

245
00:09:42,399 --> 00:09:43,519
factorization to

246
00:09:43,519 --> 00:09:46,320
another factorization problem and this

247
00:09:46,320 --> 00:09:47,519
is the case

248
00:09:47,519 --> 00:09:49,839
but the thing is that i've introduced

249
00:09:49,839 --> 00:09:50,720
randomness

250
00:09:50,720 --> 00:09:53,600
in between so it might be that z is

251
00:09:53,600 --> 00:09:54,080
actually

252
00:09:54,080 --> 00:09:55,920
easier to factor than the original

253
00:09:55,920 --> 00:09:57,440
number and this is exactly what i'm

254
00:09:57,440 --> 00:09:58,880
hoping for

255
00:09:58,880 --> 00:10:01,200
because i'm hoping that this z factor

256
00:10:01,200 --> 00:10:04,480
just using those small primes

257
00:10:04,480 --> 00:10:06,800
the second thing is if it doesn't i can

258
00:10:06,800 --> 00:10:08,880
just retry with another

259
00:10:08,880 --> 00:10:13,200
x and and and try another one

260
00:10:13,200 --> 00:10:15,920
so if i manage to to write this z as a

261
00:10:15,920 --> 00:10:18,000
product of small primes which i can

262
00:10:18,000 --> 00:10:21,200
try to do by simply doing trial division

263
00:10:21,200 --> 00:10:23,680
just trying repeat successively all the

264
00:10:23,680 --> 00:10:26,079
primes in my factory basis

265
00:10:26,079 --> 00:10:27,839
if i success in doing so i'm just going

266
00:10:27,839 --> 00:10:30,160
to write down this relation that x

267
00:10:30,160 --> 00:10:31,519
squared is going to

268
00:10:31,519 --> 00:10:34,959
a product of primes with certain

269
00:10:34,959 --> 00:10:36,640
exponents

270
00:10:36,640 --> 00:10:37,839
[Applause]

271
00:10:37,839 --> 00:10:40,720
and i'm going to repeat this i don't

272
00:10:40,720 --> 00:10:41,120
need

273
00:10:41,120 --> 00:10:43,279
just one relation i need many relation

274
00:10:43,279 --> 00:10:46,399
about b of them and

275
00:10:46,399 --> 00:10:48,320
so somehow the complexity is going to be

276
00:10:48,320 --> 00:10:49,440
dictated by

277
00:10:49,440 --> 00:10:52,399
this number b that needs to be carefully

278
00:10:52,399 --> 00:10:53,360
chosen

279
00:10:53,360 --> 00:10:55,680
so if i increase b i improve the success

280
00:10:55,680 --> 00:10:56,640
probability

281
00:10:56,640 --> 00:10:59,920
of each trial division but at the same

282
00:10:59,920 --> 00:11:01,519
time let me increase the cost of each of

283
00:11:01,519 --> 00:11:03,360
those trial divisions

284
00:11:03,360 --> 00:11:05,279
because i have more primes to test and i

285
00:11:05,279 --> 00:11:06,560
also need to find

286
00:11:06,560 --> 00:11:09,600
more relations so i'm not going to

287
00:11:09,600 --> 00:11:11,040
going to go into the detail of the

288
00:11:11,040 --> 00:11:13,120
complexity analysis but it turns out

289
00:11:13,120 --> 00:11:13,440
that

290
00:11:13,440 --> 00:11:16,560
because of the density of smooth number

291
00:11:16,560 --> 00:11:19,839
the optimal smoothness bound

292
00:11:19,839 --> 00:11:22,880
b to choose is this sub-exponential

293
00:11:22,880 --> 00:11:23,920
function

294
00:11:23,920 --> 00:11:27,120
of the bit size of the prime i want to

295
00:11:27,120 --> 00:11:28,640
factor so exponential of

296
00:11:28,640 --> 00:11:31,440
roughly square root of log n which is

297
00:11:31,440 --> 00:11:33,040
sometimes written

298
00:11:33,040 --> 00:11:36,079
as this l of one half

299
00:11:36,079 --> 00:11:39,440
function okay so this is

300
00:11:39,440 --> 00:11:42,560
the relation collection step

301
00:11:42,560 --> 00:11:46,719
and what do i do with those relations

302
00:11:47,920 --> 00:11:50,560
well i'm just going to write them here

303
00:11:50,560 --> 00:11:52,399
on top of each other so i have a bunch

304
00:11:52,399 --> 00:11:54,560
of squares on the left hand side and on

305
00:11:54,560 --> 00:11:56,079
the right hand side of

306
00:11:56,079 --> 00:11:58,399
products of primes and basically i want

307
00:11:58,399 --> 00:12:00,160
to end up with something where both the

308
00:12:00,160 --> 00:12:02,399
left hand side and the right hand sides

309
00:12:02,399 --> 00:12:06,800
are squares of numbers that i know

310
00:12:06,800 --> 00:12:10,240
so i basically want to combine

311
00:12:10,240 --> 00:12:12,720
all those equations take a

312
00:12:12,720 --> 00:12:14,639
multiplicative combination of those

313
00:12:14,639 --> 00:12:15,839
equations

314
00:12:15,839 --> 00:12:18,399
such that all the exponents on the right

315
00:12:18,399 --> 00:12:19,200
hand side

316
00:12:19,200 --> 00:12:22,240
becomes even integers

317
00:12:22,240 --> 00:12:24,240
and this is something that is easily

318
00:12:24,240 --> 00:12:25,760
done because i can just

319
00:12:25,760 --> 00:12:27,920
write all my exponents in in a big

320
00:12:27,920 --> 00:12:28,959
matrix

321
00:12:28,959 --> 00:12:32,000
and solve the linear system modulo 2 and

322
00:12:32,000 --> 00:12:33,360
that's going to give me

323
00:12:33,360 --> 00:12:36,480
uh high that's going to tell me how i

324
00:12:36,480 --> 00:12:38,720
should be combining those equations so

325
00:12:38,720 --> 00:12:39,440
that all the

326
00:12:39,440 --> 00:12:41,839
right hand side are even and if all the

327
00:12:41,839 --> 00:12:43,279
right hand side are even

328
00:12:43,279 --> 00:12:46,160
then i have effectively written

329
00:12:46,160 --> 00:12:48,560
congruence between two squares i have

330
00:12:48,560 --> 00:12:51,519
x square congruent to y square modulo n

331
00:12:51,519 --> 00:12:52,480
and i have found

332
00:12:52,480 --> 00:12:57,040
some non-trivial factor of n

333
00:12:59,519 --> 00:13:01,710
okay so

334
00:13:01,710 --> 00:13:02,880
[Music]

335
00:13:02,880 --> 00:13:06,800
now i i gave you the most naive version

336
00:13:06,800 --> 00:13:07,200
of this

337
00:13:07,200 --> 00:13:10,000
algorithm and in this very nice version

338
00:13:10,000 --> 00:13:11,040
we were choosing

339
00:13:11,040 --> 00:13:14,240
our x's at random meaning that

340
00:13:14,240 --> 00:13:16,320
x squared modulo n would be a random

341
00:13:16,320 --> 00:13:17,920
number modulo n so

342
00:13:17,920 --> 00:13:20,560
essentially x would be x squared mode

343
00:13:20,560 --> 00:13:22,079
and would be essentially as large as

344
00:13:22,079 --> 00:13:26,800
n and we cannot help but notice that if

345
00:13:26,800 --> 00:13:28,000
this number would be

346
00:13:28,000 --> 00:13:31,200
smaller then the success probability of

347
00:13:31,200 --> 00:13:32,320
trial division

348
00:13:32,320 --> 00:13:34,639
should be larger right it's it's easier

349
00:13:34,639 --> 00:13:35,440
to factor

350
00:13:35,440 --> 00:13:38,880
small numbers and large ones so

351
00:13:38,880 --> 00:13:41,440
can we try to aim and make x square more

352
00:13:41,440 --> 00:13:42,560
than smaller

353
00:13:42,560 --> 00:13:45,360
well there is a very easy way to do this

354
00:13:45,360 --> 00:13:46,560
so

355
00:13:46,560 --> 00:13:49,040
n is not a square so its square root is

356
00:13:49,040 --> 00:13:51,519
not an integer but i can just take a

357
00:13:51,519 --> 00:13:54,320
x that is close an integer x that is

358
00:13:54,320 --> 00:13:54,800
close

359
00:13:54,800 --> 00:13:57,199
square of n and if i do this i'm going

360
00:13:57,199 --> 00:13:58,800
to have that x square

361
00:13:58,800 --> 00:14:02,000
itself is close to n

362
00:14:02,000 --> 00:14:05,040
meaning that if i reduce x square modulo

363
00:14:05,040 --> 00:14:06,480
n i'm going to get something

364
00:14:06,480 --> 00:14:10,880
significantly smaller than n

365
00:14:10,880 --> 00:14:14,160
i so i cannot only take the closest

366
00:14:14,160 --> 00:14:16,560
rounding square root of n to an integer

367
00:14:16,560 --> 00:14:18,800
i need a larger range because i need to

368
00:14:18,800 --> 00:14:19,600
try

369
00:14:19,600 --> 00:14:22,000
many times to to find factoring

370
00:14:22,000 --> 00:14:23,279
relations

371
00:14:23,279 --> 00:14:24,959
but essentially i can still get

372
00:14:24,959 --> 00:14:26,880
something that is significantly

373
00:14:26,880 --> 00:14:30,079
smaller than

374
00:14:30,079 --> 00:14:32,240
overall this gives you a complexity gain

375
00:14:32,240 --> 00:14:34,160
but unfortunately because i've hidden so

376
00:14:34,160 --> 00:14:36,160
many things inside

377
00:14:36,160 --> 00:14:38,639
inside the the constants in the exponent

378
00:14:38,639 --> 00:14:40,079
i'm not able to show

379
00:14:40,079 --> 00:14:43,120
the explicit gain but essentially it

380
00:14:43,120 --> 00:14:44,560
improves significantly

381
00:14:44,560 --> 00:14:47,920
the complexity of the algorithm by uh

382
00:14:47,920 --> 00:14:50,240
decreasing the the hidden constant in

383
00:14:50,240 --> 00:14:53,920
this sub-exponential complexity

384
00:14:54,160 --> 00:14:57,680
so we see that you know carefully

385
00:14:57,680 --> 00:15:01,839
choosing uh um or left hand side

386
00:15:01,839 --> 00:15:04,079
gives us the opportunity to improve the

387
00:15:04,079 --> 00:15:05,920
success probability of the right hand

388
00:15:05,920 --> 00:15:08,079
side being easy to factor

389
00:15:08,079 --> 00:15:10,480
so can we do more can we do something

390
00:15:10,480 --> 00:15:11,120
you know

391
00:15:11,120 --> 00:15:14,240
a bit uh more evolved than just you know

392
00:15:14,240 --> 00:15:16,480
choosing x close to square root of n

393
00:15:16,480 --> 00:15:18,880
and this is precisely what schnorr was

394
00:15:18,880 --> 00:15:19,680
trying to do

395
00:15:19,680 --> 00:15:23,760
already in 1991.

396
00:15:23,760 --> 00:15:25,440
so first i need to explain a small

397
00:15:25,440 --> 00:15:28,160
relaxation to to allow for for this new

398
00:15:28,160 --> 00:15:29,279
strategy

399
00:15:29,279 --> 00:15:31,519
is to note that we actually don't really

400
00:15:31,519 --> 00:15:33,199
need the left-hand side

401
00:15:33,199 --> 00:15:36,240
to be a square if we also choose the

402
00:15:36,240 --> 00:15:37,279
right-hand side

403
00:15:37,279 --> 00:15:39,920
to be something that i can factor over

404
00:15:39,920 --> 00:15:41,120
the small primes

405
00:15:41,120 --> 00:15:44,320
so so something that is b smooth

406
00:15:44,320 --> 00:15:47,120
i can you know after the fact i can move

407
00:15:47,120 --> 00:15:49,440
my left hand side to the right hand side

408
00:15:49,440 --> 00:15:51,519
and then i end up with an equation of 1

409
00:15:51,519 --> 00:15:53,120
being congruent to again

410
00:15:53,120 --> 00:15:55,680
a product of primes and the left-hand

411
00:15:55,680 --> 00:15:56,240
side

412
00:15:56,240 --> 00:15:58,880
is one so it is a square so this thing

413
00:15:58,880 --> 00:15:59,279
is

414
00:15:59,279 --> 00:16:02,399
an equally valid relation for

415
00:16:02,399 --> 00:16:05,600
trying to forge the second step of

416
00:16:05,600 --> 00:16:09,600
uh the quadratic sieve

417
00:16:09,600 --> 00:16:12,160
okay so now that we've given this

418
00:16:12,160 --> 00:16:13,040
different

419
00:16:13,040 --> 00:16:16,560
uh way this more this larger degrees of

420
00:16:16,560 --> 00:16:17,199
freedom

421
00:16:17,199 --> 00:16:20,720
to to to try to hit something that is

422
00:16:20,720 --> 00:16:22,399
close to n

423
00:16:22,399 --> 00:16:25,199
uh we can just do this we can just try

424
00:16:25,199 --> 00:16:26,320
to find

425
00:16:26,320 --> 00:16:29,360
integer positive exponent subjects you

426
00:16:29,360 --> 00:16:29,680
know

427
00:16:29,680 --> 00:16:32,800
the product of the smallest primes

428
00:16:32,800 --> 00:16:34,240
raised to the exponent this is

429
00:16:34,240 --> 00:16:37,600
approximately equal to n

430
00:16:37,600 --> 00:16:39,759
and what is this problem well this

431
00:16:39,759 --> 00:16:40,720
problem is

432
00:16:40,720 --> 00:16:43,040
just an abstract problem or an

433
00:16:43,040 --> 00:16:45,360
approximate knapsack problem

434
00:16:45,360 --> 00:16:47,839
right because i want to find positive

435
00:16:47,839 --> 00:16:49,279
integers

436
00:16:49,279 --> 00:16:50,880
well maybe they can be greater than one

437
00:16:50,880 --> 00:16:53,600
so it's not exactly an abstract but

438
00:16:53,600 --> 00:16:56,160
um i want to find positive integers

439
00:16:56,160 --> 00:16:56,720
subset

440
00:16:56,720 --> 00:16:58,880
this equation approximately old i want

441
00:16:58,880 --> 00:17:00,320
to hit something that is

442
00:17:00,320 --> 00:17:03,199
close to log n using integer combination

443
00:17:03,199 --> 00:17:03,519
of

444
00:17:03,519 --> 00:17:06,720
log of p1 log of p2 log of p3

445
00:17:06,720 --> 00:17:11,039
etc okay

446
00:17:11,039 --> 00:17:13,199
so what is the first thing you do when

447
00:17:13,199 --> 00:17:15,119
you encounter an abstract

448
00:17:15,119 --> 00:17:17,439
or even worse an approximation of an

449
00:17:17,439 --> 00:17:18,319
aspect

450
00:17:18,319 --> 00:17:20,959
well you write it as a lattice problem

451
00:17:20,959 --> 00:17:23,039
or specifically your clause

452
00:17:23,039 --> 00:17:26,319
uh vector problem and so

453
00:17:26,319 --> 00:17:29,039
here the typical way of constructing the

454
00:17:29,039 --> 00:17:31,360
associated letters is as follow

455
00:17:31,360 --> 00:17:34,720
you and let's let's focus on the last

456
00:17:34,720 --> 00:17:36,799
row of this matrix first so this last

457
00:17:36,799 --> 00:17:38,559
whole encode specif

458
00:17:38,559 --> 00:17:41,840
specifically the equation we had on the

459
00:17:41,840 --> 00:17:43,679
previous slide here

460
00:17:43,679 --> 00:17:47,280
okay so this equation you find it here

461
00:17:47,280 --> 00:17:50,080
but you also are keeping more

462
00:17:50,080 --> 00:17:51,679
information in your lattice

463
00:17:51,679 --> 00:17:54,880
with those diagonal coefficient why do

464
00:17:54,880 --> 00:17:56,080
you have to do this

465
00:17:56,080 --> 00:17:59,039
well it's because knapsack and cdp are

466
00:17:59,039 --> 00:18:00,480
different things

467
00:18:00,480 --> 00:18:02,320
when you're solving an abstract you're

468
00:18:02,320 --> 00:18:04,720
asking for zero one solution

469
00:18:04,720 --> 00:18:07,440
or at least in this case something where

470
00:18:07,440 --> 00:18:08,480
all the coefficients

471
00:18:08,480 --> 00:18:11,520
are positive whereas in lattices you

472
00:18:11,520 --> 00:18:12,080
don't have

473
00:18:12,080 --> 00:18:13,679
this kind of constraint if you find a

474
00:18:13,679 --> 00:18:15,280
short vector lattice

475
00:18:15,280 --> 00:18:18,240
nothing tells you that this solution

476
00:18:18,240 --> 00:18:19,200
here e i

477
00:18:19,200 --> 00:18:21,520
etc is going to be positive you would

478
00:18:21,520 --> 00:18:22,960
only have the constraint that it is

479
00:18:22,960 --> 00:18:27,600
integer so fortunately

480
00:18:27,600 --> 00:18:31,280
this having negative exponents is

481
00:18:31,280 --> 00:18:35,039
not a direct killer the reason is that

482
00:18:35,039 --> 00:18:36,720
actually there's a bit more freedom in

483
00:18:36,720 --> 00:18:38,880
the solution that i want to find

484
00:18:38,880 --> 00:18:42,080
and if instead of finding an integer as

485
00:18:42,080 --> 00:18:45,280
my approximate solution for the product

486
00:18:45,280 --> 00:18:47,280
of prime so now i have primes on top and

487
00:18:47,280 --> 00:18:49,039
primes on

488
00:18:49,039 --> 00:18:50,880
under the fraction and this is

489
00:18:50,880 --> 00:18:52,640
approximately equal to n

490
00:18:52,640 --> 00:18:54,880
then i can also get that u is

491
00:18:54,880 --> 00:18:56,000
approximately equal to

492
00:18:56,000 --> 00:18:59,120
v n so this quantity s

493
00:18:59,120 --> 00:19:02,559
equal u minus v n or just u modulo n

494
00:19:02,559 --> 00:19:05,679
this might still be small but by using

495
00:19:05,679 --> 00:19:07,120
this implication here

496
00:19:07,120 --> 00:19:09,200
and what i'm hiding is that this

497
00:19:09,200 --> 00:19:10,480
implication

498
00:19:10,480 --> 00:19:13,360
degrades the quality of the

499
00:19:13,360 --> 00:19:14,720
approximation

500
00:19:14,720 --> 00:19:17,840
okay this this uh

501
00:19:17,840 --> 00:19:21,440
as v gets larger this this implication

502
00:19:21,440 --> 00:19:24,720
will be looser and looser in some sense

503
00:19:24,720 --> 00:19:27,760
so not only do i want to control

504
00:19:27,760 --> 00:19:31,120
how well the the sum the integer sum of

505
00:19:31,120 --> 00:19:33,039
those logs are going to be close to log

506
00:19:33,039 --> 00:19:33,760
of n

507
00:19:33,760 --> 00:19:36,720
i also want to control how large these

508
00:19:36,720 --> 00:19:38,160
integers themselves are

509
00:19:38,160 --> 00:19:41,280
going to be or at least the what is

510
00:19:41,280 --> 00:19:43,520
below on this fraction and this is why i

511
00:19:43,520 --> 00:19:45,280
have those diagonal

512
00:19:45,280 --> 00:19:48,399
coefficient here

513
00:19:49,520 --> 00:19:52,160
so yeah so what can we do with this

514
00:19:52,160 --> 00:19:53,039
actually i've been

515
00:19:53,039 --> 00:19:55,280
attempting at several occasions and

516
00:19:55,280 --> 00:19:57,280
discussing with other people

517
00:19:57,280 --> 00:20:00,799
uh how to to do average case analysis of

518
00:20:00,799 --> 00:20:01,919
of this

519
00:20:01,919 --> 00:20:05,520
this argument and it turns out to be

520
00:20:05,520 --> 00:20:08,559
particularly painful

521
00:20:08,559 --> 00:20:10,799
my laptop is complaining about battery

522
00:20:10,799 --> 00:20:12,159
i'm gonna have to take a one

523
00:20:12,159 --> 00:20:21,520
minute pose

524
00:20:21,520 --> 00:20:23,440
and i should have thought of that before

525
00:20:23,440 --> 00:20:24,799
the talk okay

526
00:20:24,799 --> 00:20:28,159
um so it is it is particularly

527
00:20:28,159 --> 00:20:30,480
daunting to do in an average case

528
00:20:30,480 --> 00:20:32,240
analysis of this algorithm because there

529
00:20:32,240 --> 00:20:33,760
are so many people

530
00:20:33,760 --> 00:20:35,440
so the first one is that you know when

531
00:20:35,440 --> 00:20:37,200
you do your cvt you're not

532
00:20:37,200 --> 00:20:38,880
in a full dimensional lattice so you

533
00:20:38,880 --> 00:20:40,720
need to apply new projections but that's

534
00:20:40,720 --> 00:20:41,840
manageable

535
00:20:41,840 --> 00:20:43,760
the second one and this is the one that

536
00:20:43,760 --> 00:20:45,760
is much more troublesome is that

537
00:20:45,760 --> 00:20:47,760
actually for certain values of this

538
00:20:47,760 --> 00:20:50,240
constant that was hidden in this lattice

539
00:20:50,240 --> 00:20:52,640
the gaussian heuristic seems actually

540
00:20:52,640 --> 00:20:54,000
invalid

541
00:20:54,000 --> 00:20:56,320
and even worse it seems that the optimal

542
00:20:56,320 --> 00:20:57,919
choice of this constant

543
00:20:57,919 --> 00:20:59,360
is in this regime for all the

544
00:20:59,360 --> 00:21:01,440
experiments that i was able

545
00:21:01,440 --> 00:21:04,400
to run so

546
00:21:04,720 --> 00:21:06,640
you know it's it's kind of a magic one

547
00:21:06,640 --> 00:21:08,000
to to predict

548
00:21:08,000 --> 00:21:11,120
uh let this be lettuce behavior and

549
00:21:11,120 --> 00:21:12,640
let this algorithm so if it's not

550
00:21:12,640 --> 00:21:14,159
applicable to the slatting

551
00:21:14,159 --> 00:21:17,760
then you're in trouble um the

552
00:21:17,760 --> 00:21:19,760
uh one more trouble is that you

553
00:21:19,760 --> 00:21:20,960
typically solve

554
00:21:20,960 --> 00:21:22,880
a shortest vector problem for the l2

555
00:21:22,880 --> 00:21:25,039
norm but it turns out that the l2 norm

556
00:21:25,039 --> 00:21:27,600
is not going to tell you precisely

557
00:21:27,600 --> 00:21:30,159
how large this number s is going to be

558
00:21:30,159 --> 00:21:32,320
and this is what you want to control

559
00:21:32,320 --> 00:21:35,039
the l1 norm is more relevant but again

560
00:21:35,039 --> 00:21:36,240
the natural way of

561
00:21:36,240 --> 00:21:38,720
trying to translate 82 norm into l1 norm

562
00:21:38,720 --> 00:21:41,360
seems to also be

563
00:21:41,360 --> 00:21:43,440
a non-viable heuristics in certain

564
00:21:43,440 --> 00:21:45,039
regimes

565
00:21:45,039 --> 00:21:47,360
so for now we have all those troubles

566
00:21:47,360 --> 00:21:48,880
just with lattices

567
00:21:48,880 --> 00:21:51,440
there is some extra trouble uh if you

568
00:21:51,440 --> 00:21:53,440
try to analyze this is that

569
00:21:53,440 --> 00:21:56,000
once you've constructed this number s

570
00:21:56,000 --> 00:21:57,120
that you want to

571
00:21:57,120 --> 00:22:00,720
to to apply trial division to

572
00:22:00,720 --> 00:22:02,960
this number does not behave like a

573
00:22:02,960 --> 00:22:05,600
random number with respect to

574
00:22:05,600 --> 00:22:08,400
trial division the reason is that in u

575
00:22:08,400 --> 00:22:08,880
and v

576
00:22:08,880 --> 00:22:12,159
i'm using all those small primes and

577
00:22:12,159 --> 00:22:15,520
if i use those primes for u or for v

578
00:22:15,520 --> 00:22:17,280
actually this prime is not about

579
00:22:17,280 --> 00:22:18,720
available for dividing

580
00:22:18,720 --> 00:22:21,200
s anymore so it means that the success

581
00:22:21,200 --> 00:22:22,880
probability of trial division is going

582
00:22:22,880 --> 00:22:24,159
to be worse

583
00:22:24,159 --> 00:22:26,320
for s's that i have constructed in this

584
00:22:26,320 --> 00:22:27,600
way than it is

585
00:22:27,600 --> 00:22:31,360
for random s's so if you want to study

586
00:22:31,360 --> 00:22:31,679
this

587
00:22:31,679 --> 00:22:33,360
this topic a little bit more you have to

588
00:22:33,360 --> 00:22:34,799
also be careful that

589
00:22:34,799 --> 00:22:37,440
uh you see several kinds of variants in

590
00:22:37,440 --> 00:22:38,320
the papers

591
00:22:38,320 --> 00:22:41,280
like sometimes the the primes that you

592
00:22:41,280 --> 00:22:42,640
use to construct

593
00:22:42,640 --> 00:22:45,200
the left-hand side are exactly the same

594
00:22:45,200 --> 00:22:45,840
as

595
00:22:45,840 --> 00:22:48,159
the one that you were trying to factor

596
00:22:48,159 --> 00:22:48,880
uh but

597
00:22:48,880 --> 00:22:50,720
here i think considering the

598
00:22:50,720 --> 00:22:52,559
unconstrained case is nicer because it

599
00:22:52,559 --> 00:22:54,080
gives you all the range of trade-offs

600
00:22:54,080 --> 00:22:55,120
and makes

601
00:22:55,120 --> 00:22:57,360
a natural way of comparing to the

602
00:22:57,360 --> 00:22:59,840
quadratic

603
00:23:00,480 --> 00:23:04,799
so what i only have to offer for now

604
00:23:04,799 --> 00:23:07,840
is is uh

605
00:23:07,840 --> 00:23:10,240
experimental result so i should clarify

606
00:23:10,240 --> 00:23:11,039
that this

607
00:23:11,039 --> 00:23:14,240
is also a different thing that what i

608
00:23:14,240 --> 00:23:14,640
have

609
00:23:14,640 --> 00:23:17,840
uh published on github uh regarding the

610
00:23:17,840 --> 00:23:19,919
latest version of noir flames here

611
00:23:19,919 --> 00:23:23,440
i'm like i'm considering an older

612
00:23:23,440 --> 00:23:24,799
version of this algorithm that they

613
00:23:24,799 --> 00:23:25,120
think

614
00:23:25,120 --> 00:23:28,480
makes more sense and in a more general

615
00:23:28,480 --> 00:23:33,039
uh you know more inconstrained setup

616
00:23:33,039 --> 00:23:35,919
and as i was explaining the the size of

617
00:23:35,919 --> 00:23:36,400
s

618
00:23:36,400 --> 00:23:39,760
is not the only concern but it is like

619
00:23:39,760 --> 00:23:41,200
the main concern

620
00:23:41,200 --> 00:23:43,120
in the complexity analysis and in

621
00:23:43,120 --> 00:23:44,880
particular if we want to beat the

622
00:23:44,880 --> 00:23:46,880
quadratic sieve we have to be able to

623
00:23:46,880 --> 00:23:47,679
construct

624
00:23:47,679 --> 00:23:49,760
s's that are smaller than the prophetic

625
00:23:49,760 --> 00:23:52,000
sieve and the quadratics if we could

626
00:23:52,000 --> 00:23:53,840
construct s's that were roughly square

627
00:23:53,840 --> 00:23:54,480
root of n

628
00:23:54,480 --> 00:23:57,760
so that's why i have like this quadratic

629
00:23:57,760 --> 00:24:01,279
baseline at at one half on this plot

630
00:24:01,279 --> 00:24:03,840
and i'm plotting against this the size

631
00:24:03,840 --> 00:24:05,760
of the s that are constructed

632
00:24:05,760 --> 00:24:09,760
using the approach of sure

633
00:24:09,760 --> 00:24:11,919
and so the way to read this plot is that

634
00:24:11,919 --> 00:24:12,880
if you want to factor

635
00:24:12,880 --> 00:24:15,919
100 bits integer n for example so the

636
00:24:15,919 --> 00:24:17,440
green curve

637
00:24:17,440 --> 00:24:19,520
then to beat the quadratic sieve at the

638
00:24:19,520 --> 00:24:20,720
non-lattice steps

639
00:24:20,720 --> 00:24:22,960
so at the final steps of the algorithm

640
00:24:22,960 --> 00:24:24,320
then i'm going to need

641
00:24:24,320 --> 00:24:26,640
you know a dimension that is larger than

642
00:24:26,640 --> 00:24:28,480
50 because it's barely crossing

643
00:24:28,480 --> 00:24:30,880
at dimension 15. but that might not be

644
00:24:30,880 --> 00:24:33,039
sufficient for two reasons

645
00:24:33,039 --> 00:24:35,360
the first one is that then i also need

646
00:24:35,360 --> 00:24:36,960
to account for the cost of the lattice

647
00:24:36,960 --> 00:24:37,760
steps

648
00:24:37,760 --> 00:24:41,360
and secondly you know the

649
00:24:41,360 --> 00:24:44,240
the probability that uh my s is actually

650
00:24:44,240 --> 00:24:46,640
easy to factor can be actually smaller

651
00:24:46,640 --> 00:24:49,679
than uh than for

652
00:24:49,679 --> 00:24:51,440
the quadratic sieve even if they have

653
00:24:51,440 --> 00:24:53,120
the same size

654
00:24:53,120 --> 00:24:56,320
and if you look at the curve for larger

655
00:24:56,320 --> 00:24:58,480
challenges that are easy to solve with

656
00:24:58,480 --> 00:25:00,080
with standard algorithms

657
00:25:00,080 --> 00:25:02,159
it seems at the moment that we're going

658
00:25:02,159 --> 00:25:04,000
to need lattices of

659
00:25:04,000 --> 00:25:07,600
unreasonable dimensions but i wouldn't

660
00:25:07,600 --> 00:25:08,960
dare to make a prediction

661
00:25:08,960 --> 00:25:12,159
uh for now results you know without

662
00:25:12,159 --> 00:25:12,640
having

663
00:25:12,640 --> 00:25:15,520
more formal argument for for the

664
00:25:15,520 --> 00:25:18,400
sympathetic behavior

665
00:25:18,400 --> 00:25:21,679
um so i shared all this because

666
00:25:21,679 --> 00:25:25,279
well i i despite the fact

667
00:25:25,279 --> 00:25:27,200
that it doesn't seem to work i think

668
00:25:27,200 --> 00:25:28,960
this is a deep and brilliant idea

669
00:25:28,960 --> 00:25:30,880
mathematically it's it's it's just very

670
00:25:30,880 --> 00:25:31,919
nice it's

671
00:25:31,919 --> 00:25:34,960
beautiful inside and even if it doesn't

672
00:25:34,960 --> 00:25:36,640
work i think it is a shame that we still

673
00:25:36,640 --> 00:25:38,960
don't have a complexity analysis

674
00:25:38,960 --> 00:25:42,240
uh a solid complexity analysis of this

675
00:25:42,240 --> 00:25:47,039
even 40 years after the id was laid out

676
00:25:47,200 --> 00:25:50,320
you know it's kind of like

677
00:25:50,480 --> 00:25:52,960
a positivity bias it's it's tough to

678
00:25:52,960 --> 00:25:54,000
write about

679
00:25:54,000 --> 00:25:56,159
things that don't work and especially

680
00:25:56,159 --> 00:25:58,559
when it is so challenging as we've seen

681
00:25:58,559 --> 00:26:01,360
there's like so many pitfalls to avoid

682
00:26:01,360 --> 00:26:04,559
but we should we should try harder

683
00:26:04,559 --> 00:26:08,320
um and the more interesting things even

684
00:26:08,320 --> 00:26:09,120
here is that

685
00:26:09,120 --> 00:26:11,840
despite all this not working it actually

686
00:26:11,840 --> 00:26:13,360
led to

687
00:26:13,360 --> 00:26:16,080
other application and in particular

688
00:26:16,080 --> 00:26:17,520
milestone results

689
00:26:17,520 --> 00:26:20,400
in particular by time so the story is

690
00:26:20,400 --> 00:26:21,200
like this

691
00:26:21,200 --> 00:26:25,520
is adolment picked up this idea of

692
00:26:25,520 --> 00:26:28,159
schnoor a few years later and he was

693
00:26:28,159 --> 00:26:29,200
attempting

694
00:26:29,200 --> 00:26:31,440
not so much to factor efficiently but

695
00:26:31,440 --> 00:26:33,120
more at proving

696
00:26:33,120 --> 00:26:35,120
the hardness of the shortest vector

697
00:26:35,120 --> 00:26:37,520
problem at that time we didn't really

698
00:26:37,520 --> 00:26:38,159
know what

699
00:26:38,159 --> 00:26:42,480
uh how hard was svp and it was even

700
00:26:42,480 --> 00:26:45,919
you know uh some people might even

701
00:26:45,919 --> 00:26:47,919
easily think that svp was an easy

702
00:26:47,919 --> 00:26:49,120
problem because

703
00:26:49,120 --> 00:26:52,480
the lattice that that we handle at that

704
00:26:52,480 --> 00:26:53,200
time

705
00:26:53,200 --> 00:26:55,919
they would all be destroyed by ll just

706
00:26:55,919 --> 00:26:56,640
because

707
00:26:56,640 --> 00:26:58,320
you know computers could not handle more

708
00:26:58,320 --> 00:27:01,200
than 50 or 60 dimension and ll

709
00:27:01,200 --> 00:27:04,240
behaves very well in small dimensions so

710
00:27:04,240 --> 00:27:05,760
some people might have thought that svp

711
00:27:05,760 --> 00:27:08,559
was kind of an easy problem

712
00:27:08,559 --> 00:27:10,720
and i don't think that adult man ever

713
00:27:10,720 --> 00:27:11,679
managed to

714
00:27:11,679 --> 00:27:13,840
to to make this proof work and i think

715
00:27:13,840 --> 00:27:15,760
that aitai was trying

716
00:27:15,760 --> 00:27:18,799
to uh finalize the work of adelman

717
00:27:18,799 --> 00:27:21,840
when he actually stumble uh

718
00:27:21,840 --> 00:27:24,240
across a much more powerful result

719
00:27:24,240 --> 00:27:25,440
namely that

720
00:27:25,440 --> 00:27:27,279
svp is not only how does it factoring

721
00:27:27,279 --> 00:27:29,360
but actually it's np hard it's factored

722
00:27:29,360 --> 00:27:30,159
it's harder than

723
00:27:30,159 --> 00:27:32,240
all the np problems at least in the

724
00:27:32,240 --> 00:27:34,000
random rise reduction

725
00:27:34,000 --> 00:27:37,760
and despite no explicit factorization

726
00:27:37,760 --> 00:27:38,399
results

727
00:27:38,399 --> 00:27:41,520
in aita's work the same lattice the same

728
00:27:41,520 --> 00:27:42,880
lattice construction

729
00:27:42,880 --> 00:27:45,279
is playing a key role in the proof and i

730
00:27:45,279 --> 00:27:47,840
think this is remarkable

731
00:27:47,840 --> 00:27:50,559
i should also mention that this kind of

732
00:27:50,559 --> 00:27:51,360
techniques has

733
00:27:51,360 --> 00:27:54,000
has reappeared later on for different

734
00:27:54,000 --> 00:27:56,000
purposes like constructing extremely

735
00:27:56,000 --> 00:27:58,240
examples from the abc conjecture

736
00:27:58,240 --> 00:28:00,799
but using you know again the same kind

737
00:28:00,799 --> 00:28:01,360
of

738
00:28:01,360 --> 00:28:03,679
oracle for the closest vector problem

739
00:28:03,679 --> 00:28:04,559
there is also

740
00:28:04,559 --> 00:28:08,000
a module algorithm that

741
00:28:08,000 --> 00:28:11,279
was put forward by li pelemari

742
00:28:11,279 --> 00:28:14,399
stele and wallet

743
00:28:14,399 --> 00:28:17,679
two years ago so

744
00:28:17,679 --> 00:28:19,520
before i move to to the second part of

745
00:28:19,520 --> 00:28:22,240
my talk i i just want to say a few words

746
00:28:22,240 --> 00:28:25,679
about uh itai's result and i thai's

747
00:28:25,679 --> 00:28:26,880
technique

748
00:28:26,880 --> 00:28:28,960
uh if you remember a few slides ago i

749
00:28:28,960 --> 00:28:30,720
mentioned there was kind of a gap

750
00:28:30,720 --> 00:28:33,760
between knapsack and lattice problems in

751
00:28:33,760 --> 00:28:35,600
particular knapsack solution they should

752
00:28:35,600 --> 00:28:36,799
be binary

753
00:28:36,799 --> 00:28:39,520
whereas svp solutions are just arbitrary

754
00:28:39,520 --> 00:28:40,799
integers

755
00:28:40,799 --> 00:28:44,000
and this this this was a significant

756
00:28:44,000 --> 00:28:45,840
gap because at the time knapsack was

757
00:28:45,840 --> 00:28:47,120
known to be hard

758
00:28:47,120 --> 00:28:50,880
but not the shortest vector problem

759
00:28:50,880 --> 00:28:54,320
and the key insights that uh that makes

760
00:28:54,320 --> 00:28:55,760
ity's proof work

761
00:28:55,760 --> 00:28:59,039
is that the zero one solution in schnorr

762
00:28:59,039 --> 00:29:00,960
adelman lattices

763
00:29:00,960 --> 00:29:03,760
are precisely in correspondence with

764
00:29:03,760 --> 00:29:06,799
integers that are smooth and square free

765
00:29:06,799 --> 00:29:09,919
and and that live in an interval of a

766
00:29:09,919 --> 00:29:11,440
specific size

767
00:29:11,440 --> 00:29:14,799
and the thing is that we know how to

768
00:29:14,799 --> 00:29:16,480
count those we know how to count those

769
00:29:16,480 --> 00:29:18,080
from analytic number theory this is

770
00:29:18,080 --> 00:29:19,440
something we've studied very deeply

771
00:29:19,440 --> 00:29:20,960
specific precisely for

772
00:29:20,960 --> 00:29:23,919
for factoring or for understanding you

773
00:29:23,919 --> 00:29:24,799
know

774
00:29:24,799 --> 00:29:27,840
arithmetic properties of random numbers

775
00:29:27,840 --> 00:29:31,279
so despite factoring not being

776
00:29:31,279 --> 00:29:34,240
the goal anymore also i used to play a

777
00:29:34,240 --> 00:29:35,360
key role

778
00:29:35,360 --> 00:29:38,559
and he was basically able to embed

779
00:29:38,559 --> 00:29:42,240
like uh this constraints that things

780
00:29:42,240 --> 00:29:46,399
should be zero one into uh

781
00:29:46,399 --> 00:29:48,480
into into a lattice problem so that you

782
00:29:48,480 --> 00:29:49,919
could reduce

783
00:29:49,919 --> 00:29:52,799
uh knapsack and sdp so he showed that

784
00:29:52,799 --> 00:29:54,799
svb was harder than knapsack

785
00:29:54,799 --> 00:29:57,919
and therefore that svp was npr

786
00:29:57,919 --> 00:30:01,039
so i don't master his proof fully and i

787
00:30:01,039 --> 00:30:03,679
it's not my purpose to go over it today

788
00:30:03,679 --> 00:30:05,039
but i'm hoping that

789
00:30:05,039 --> 00:30:07,039
daniele will give a talk next week at

790
00:30:07,039 --> 00:30:08,320
the risk seminar

791
00:30:08,320 --> 00:30:09,919
so if you want to learn more about

792
00:30:09,919 --> 00:30:12,240
iodized proof of np hardness

793
00:30:12,240 --> 00:30:14,799
you can maybe join this seminar next

794
00:30:14,799 --> 00:30:15,640
week

795
00:30:15,640 --> 00:30:16,960
[Music]

796
00:30:16,960 --> 00:30:20,840
okay so that that was uh that was it for

797
00:30:20,840 --> 00:30:23,039
uh

798
00:30:23,039 --> 00:30:25,679
for factoring using lattices now let's

799
00:30:25,679 --> 00:30:26,799
do um

800
00:30:26,799 --> 00:30:28,799
let's do it the other way around we're

801
00:30:28,799 --> 00:30:30,399
going to try to

802
00:30:30,399 --> 00:30:34,840
solve lattice problem using ids of

803
00:30:34,840 --> 00:30:36,480
factorization

804
00:30:36,480 --> 00:30:39,679
um so what we want precisely

805
00:30:39,679 --> 00:30:41,760
in this section is to construct a

806
00:30:41,760 --> 00:30:42,880
lattice

807
00:30:42,880 --> 00:30:44,880
which is a good packing it's a dense

808
00:30:44,880 --> 00:30:46,399
lattice so

809
00:30:46,399 --> 00:30:48,799
that we also so that's the mathematical

810
00:30:48,799 --> 00:30:50,720
problem of sphere packing

811
00:30:50,720 --> 00:30:52,799
but we also want it to come with an

812
00:30:52,799 --> 00:30:54,640
efficient decoding algorithm because if

813
00:30:54,640 --> 00:30:56,880
this is the case then we can use it

814
00:30:56,880 --> 00:30:59,120
for error correction for example over

815
00:30:59,120 --> 00:31:01,519
analog channels

816
00:31:01,519 --> 00:31:04,480
so because it's a bit simpler for for my

817
00:31:04,480 --> 00:31:06,960
slides i'm going to focus on the l1 norm

818
00:31:06,960 --> 00:31:09,600
for my errors but all this can be

819
00:31:09,600 --> 00:31:12,320
adjusted to the l2 norm as well

820
00:31:12,320 --> 00:31:14,399
um so the boundary distance decoding

821
00:31:14,399 --> 00:31:15,919
problem is as follow

822
00:31:15,919 --> 00:31:18,960
i received i receive a

823
00:31:18,960 --> 00:31:22,960
point in space t that i is by promise

824
00:31:22,960 --> 00:31:25,360
the sum of a lattice vector which

825
00:31:25,360 --> 00:31:27,200
corresponds maybe to the discrete

826
00:31:27,200 --> 00:31:29,039
message that i want to send

827
00:31:29,039 --> 00:31:30,880
and an error e which is kind of a

828
00:31:30,880 --> 00:31:33,039
continuous error that is added by

829
00:31:33,039 --> 00:31:35,600
the channel and the goal of decoding is

830
00:31:35,600 --> 00:31:36,559
to separate

831
00:31:36,559 --> 00:31:39,679
somehow this message and this error and

832
00:31:39,679 --> 00:31:41,679
of course for the solution to be unique

833
00:31:41,679 --> 00:31:45,440
this is only possible if my error radius

834
00:31:45,440 --> 00:31:46,720
is less than the

835
00:31:46,720 --> 00:31:48,399
half of the minimum distance of the

836
00:31:48,399 --> 00:31:50,559
lattice

837
00:31:50,559 --> 00:31:53,440
so how large of an r can we hope to

838
00:31:53,440 --> 00:31:55,039
solve

839
00:31:55,039 --> 00:31:56,960
or how large of a minimal distance can

840
00:31:56,960 --> 00:31:58,240
we hope to have

841
00:31:58,240 --> 00:32:00,880
this is given by minkowski bound

842
00:32:00,880 --> 00:32:02,399
minkowski tells you

843
00:32:02,399 --> 00:32:04,640
for the l1 north so this is not the l2

844
00:32:04,640 --> 00:32:06,960
meanwhipski but the l1 in kopsky

845
00:32:06,960 --> 00:32:09,279
that the minimal distance once you

846
00:32:09,279 --> 00:32:10,159
normalize it

847
00:32:10,159 --> 00:32:12,880
by the root determinant of the lattice

848
00:32:12,880 --> 00:32:14,480
is at most

849
00:32:14,480 --> 00:32:17,440
linear in the dimension if you take the

850
00:32:17,440 --> 00:32:20,480
trivial lattice zn the square lattice

851
00:32:20,480 --> 00:32:23,760
then this quantity is just one and i

852
00:32:23,760 --> 00:32:24,480
would like

853
00:32:24,480 --> 00:32:26,399
i would like it to be as large as big o

854
00:32:26,399 --> 00:32:27,679
of n for

855
00:32:27,679 --> 00:32:30,880
better decoding

856
00:32:30,880 --> 00:32:34,240
properties so we want a lattice

857
00:32:34,240 --> 00:32:36,799
that reach close to this bond but where

858
00:32:36,799 --> 00:32:38,720
we also have an algorithm

859
00:32:38,720 --> 00:32:42,940
for decoding close to this bound

860
00:32:42,940 --> 00:32:44,399
[Music]

861
00:32:44,399 --> 00:32:46,559
and actually if you look at the short

862
00:32:46,559 --> 00:32:48,000
rhythms crypto system

863
00:32:48,000 --> 00:32:50,880
there is there's no way there's in no

864
00:32:50,880 --> 00:32:52,159
way talking about

865
00:32:52,159 --> 00:32:54,080
decoding in something they're only

866
00:32:54,080 --> 00:32:57,760
talking about cryptography

867
00:32:57,760 --> 00:33:00,559
so actually core and rivers have

868
00:33:00,559 --> 00:33:01,440
proposed a

869
00:33:01,440 --> 00:33:03,039
public key cryptosystem publicly

870
00:33:03,039 --> 00:33:05,200
encryption scheme that

871
00:33:05,200 --> 00:33:08,559
you can summarize like this the idea is

872
00:33:08,559 --> 00:33:10,320
that the subsystem problem

873
00:33:10,320 --> 00:33:13,840
that problem is seemingly a hard problem

874
00:33:13,840 --> 00:33:16,240
or an abstract is a hard problem but the

875
00:33:16,240 --> 00:33:16,880
subset

876
00:33:16,880 --> 00:33:20,000
product is easy that is by subset

877
00:33:20,000 --> 00:33:21,760
product or multiplicative knapsack i

878
00:33:21,760 --> 00:33:23,120
mean that if you know

879
00:33:23,120 --> 00:33:26,240
all the primes that are supposed to that

880
00:33:26,240 --> 00:33:28,720
may appear in something then you can

881
00:33:28,720 --> 00:33:30,880
do the factorization you can do the

882
00:33:30,880 --> 00:33:32,320
decomposition you just do

883
00:33:32,320 --> 00:33:34,159
triangle division with all the primes

884
00:33:34,159 --> 00:33:37,519
that are in your factor basis

885
00:33:37,519 --> 00:33:39,919
so the idea of core and rivers was

886
00:33:39,919 --> 00:33:42,000
actually extremely natural

887
00:33:42,000 --> 00:33:44,720
take logarithms and this way you will

888
00:33:44,720 --> 00:33:46,000
disguise

889
00:33:46,000 --> 00:33:47,760
a subset product problem into a

890
00:33:47,760 --> 00:33:49,919
subsystem problem

891
00:33:49,919 --> 00:33:52,640
okay and as long as this guy is kind of

892
00:33:52,640 --> 00:33:54,320
works as long as it's not too visible

893
00:33:54,320 --> 00:33:56,000
that you've done this then

894
00:33:56,000 --> 00:33:59,200
maybe you have a a a trap door here

895
00:33:59,200 --> 00:34:03,039
maybe you have a public cryptography

896
00:34:03,279 --> 00:34:05,279
so there are like several variants of

897
00:34:05,279 --> 00:34:07,440
this in particular the original variant

898
00:34:07,440 --> 00:34:08,560
of this scheme was

899
00:34:08,560 --> 00:34:12,320
uh doing this over uh polynomials

900
00:34:12,320 --> 00:34:14,879
over finite fields but here i'm more

901
00:34:14,879 --> 00:34:15,918
going to talk about

902
00:34:15,918 --> 00:34:17,918
versions of the integers because i think

903
00:34:17,918 --> 00:34:19,760
it's it's easier

904
00:34:19,760 --> 00:34:23,119
for for exposition and

905
00:34:23,119 --> 00:34:25,119
my whole point is that inside this

906
00:34:25,119 --> 00:34:26,560
crypto system there's actually a

907
00:34:26,560 --> 00:34:27,199
beautiful

908
00:34:27,199 --> 00:34:30,079
coding gem for example in one of those

909
00:34:30,079 --> 00:34:32,639
variants

910
00:34:32,639 --> 00:34:34,079
shows that if you remove the

911
00:34:34,079 --> 00:34:35,918
cryptography out of it

912
00:34:35,918 --> 00:34:38,480
then you end up with a pretty good

913
00:34:38,480 --> 00:34:39,520
binary code that

914
00:34:39,520 --> 00:34:42,719
decodes with a really large with a good

915
00:34:42,719 --> 00:34:45,839
radius efficiency and with cclpro three

916
00:34:45,839 --> 00:34:47,359
years ago we've done essentially the

917
00:34:47,359 --> 00:34:48,480
same thing

918
00:34:48,480 --> 00:34:51,679
for the core reverse lattice and we show

919
00:34:51,679 --> 00:34:52,000
that

920
00:34:52,000 --> 00:34:53,760
it actually is construction this

921
00:34:53,760 --> 00:34:55,440
beautiful construction actually

922
00:34:55,440 --> 00:34:58,640
hides an excellent lattice for bonded

923
00:34:58,640 --> 00:35:02,160
distance decoding

924
00:35:02,160 --> 00:35:05,200
so how does a construction works well

925
00:35:05,200 --> 00:35:07,440
again um we're going to have a factor

926
00:35:07,440 --> 00:35:09,839
basis that's first a modulus

927
00:35:09,839 --> 00:35:11,440
an integer modulus which i'm going to

928
00:35:11,440 --> 00:35:13,599
choose for as a power of three

929
00:35:13,599 --> 00:35:15,359
because if i take it as a power of twos

930
00:35:15,359 --> 00:35:16,640
and the multiplicative group is not

931
00:35:16,640 --> 00:35:17,680
cyclic and it's

932
00:35:17,680 --> 00:35:19,359
not really a problem it just makes my

933
00:35:19,359 --> 00:35:22,160
life a bit more painful

934
00:35:22,160 --> 00:35:25,200
so uh and with this i take the usual

935
00:35:25,200 --> 00:35:27,200
factor basis so all the primes

936
00:35:27,200 --> 00:35:28,960
smaller than the constant b except that

937
00:35:28,960 --> 00:35:30,880
i'm going to skip 3 because i want all

938
00:35:30,880 --> 00:35:32,480
the things to be

939
00:35:32,480 --> 00:35:36,880
co-primed with m and

940
00:35:36,880 --> 00:35:40,240
then i'm going to define amorphism so

941
00:35:40,240 --> 00:35:43,440
here here is my disguising function

942
00:35:43,440 --> 00:35:46,240
here is is where i take something

943
00:35:46,240 --> 00:35:47,839
additive and map it to something

944
00:35:47,839 --> 00:35:49,680
multiplicative so i take

945
00:35:49,680 --> 00:35:52,960
the the additive group zn

946
00:35:52,960 --> 00:35:55,200
okay and i map it to the multiplicative

947
00:35:55,200 --> 00:35:56,640
group z over mz

948
00:35:56,640 --> 00:35:59,440
simply by sending each integer vector x

949
00:35:59,440 --> 00:36:00,800
to the product

950
00:36:00,800 --> 00:36:03,839
of the x p i to the x i

951
00:36:03,839 --> 00:36:06,240
it's kind of like taking the exponent of

952
00:36:06,240 --> 00:36:10,000
a vector given a vector as the basis

953
00:36:10,000 --> 00:36:14,079
and i take all this modulo by modulus m

954
00:36:14,079 --> 00:36:16,079
and now you can define a lattice simply

955
00:36:16,079 --> 00:36:18,800
by taking the kernel of this map

956
00:36:18,800 --> 00:36:20,480
okay so i'm going to have a lattice be

957
00:36:20,480 --> 00:36:22,320
defined as a set of all the vector

958
00:36:22,320 --> 00:36:25,440
v's such that this product with exponent

959
00:36:25,440 --> 00:36:25,680
v

960
00:36:25,680 --> 00:36:29,598
i's is congruent to one mode n

961
00:36:30,880 --> 00:36:32,160
and you know if you're doing

962
00:36:32,160 --> 00:36:35,200
lattice-based cryptography and you're

963
00:36:35,200 --> 00:36:38,320
not so much number theory or or algebra

964
00:36:38,320 --> 00:36:40,000
this might be a very strange way of

965
00:36:40,000 --> 00:36:42,320
defining the lattice but

966
00:36:42,320 --> 00:36:45,359
it is it is not so strange

967
00:36:45,359 --> 00:36:49,200
if uh if you suddenly decide to rewrite

968
00:36:49,200 --> 00:36:49,760
it

969
00:36:49,760 --> 00:36:51,760
additively simply by taking discrete

970
00:36:51,760 --> 00:36:52,880
logarithms

971
00:36:52,880 --> 00:36:55,520
right so before we constructed something

972
00:36:55,520 --> 00:36:56,800
with primes and

973
00:36:56,800 --> 00:36:59,200
logarithms here we do the same except

974
00:36:59,200 --> 00:36:59,839
that we take

975
00:36:59,839 --> 00:37:04,640
discrete logarithms and

976
00:37:05,839 --> 00:37:08,000
and this is where my modulus was kind of

977
00:37:08,000 --> 00:37:09,520
important because i've taken

978
00:37:09,520 --> 00:37:11,680
uh my modulus to be a power of three or

979
00:37:11,680 --> 00:37:13,280
a power of a small prime

980
00:37:13,280 --> 00:37:15,119
actually the discrete logarithm is going

981
00:37:15,119 --> 00:37:16,640
to be uh

982
00:37:16,640 --> 00:37:18,880
easy it's going to be polynomial time

983
00:37:18,880 --> 00:37:21,200
all you have to do is do it modulo 3 and

984
00:37:21,200 --> 00:37:22,079
then do a

985
00:37:22,079 --> 00:37:26,720
like hansel lifting kind of business

986
00:37:26,720 --> 00:37:28,800
and if you do so then you can rewrite

987
00:37:28,800 --> 00:37:30,520
this you know

988
00:37:30,520 --> 00:37:32,880
multiplicatively written lattice into an

989
00:37:32,880 --> 00:37:35,359
additive one so it becomes kind of a

990
00:37:35,359 --> 00:37:37,520
subset some kind of lattice where

991
00:37:37,520 --> 00:37:40,160
the lattice is defined by a linear

992
00:37:40,160 --> 00:37:40,960
equation

993
00:37:40,960 --> 00:37:44,240
modulo uh phi m okay so that's the sum

994
00:37:44,240 --> 00:37:45,040
of the vi

995
00:37:45,040 --> 00:37:47,680
times the discrete logarithms of the pi

996
00:37:47,680 --> 00:37:48,839
congruent to zero

997
00:37:48,839 --> 00:37:52,480
modifier okay so

998
00:37:52,480 --> 00:37:54,480
how good of a lattice it is why is it a

999
00:37:54,480 --> 00:37:56,160
good lattice let's not even talk about

1000
00:37:56,160 --> 00:37:57,599
decoding yet

1001
00:37:57,599 --> 00:38:00,720
why is this lattice a dense a dense

1002
00:38:00,720 --> 00:38:02,000
lattice why is it a good

1003
00:38:02,000 --> 00:38:05,359
packing so we know pretty easily its

1004
00:38:05,359 --> 00:38:07,839
dimension and its determinant

1005
00:38:07,839 --> 00:38:09,839
and all we have to to really work a

1006
00:38:09,839 --> 00:38:11,920
little bit for forgetting

1007
00:38:11,920 --> 00:38:15,440
is the minimal distance of this lattice

1008
00:38:15,440 --> 00:38:18,720
okay and here i'm going to claim that

1009
00:38:18,720 --> 00:38:21,680
this minimal distance is actually lower

1010
00:38:21,680 --> 00:38:22,480
bounded

1011
00:38:22,480 --> 00:38:25,839
by log of m over log of b this is a

1012
00:38:25,839 --> 00:38:27,760
convenient line

1013
00:38:27,760 --> 00:38:31,440
um actually you might use a factor too

1014
00:38:31,440 --> 00:38:33,520
if you do the real proof instead of the

1015
00:38:33,520 --> 00:38:35,920
cheating proof but let's go with the

1016
00:38:35,920 --> 00:38:37,440
cheating proof

1017
00:38:37,440 --> 00:38:40,640
so i i recall

1018
00:38:40,640 --> 00:38:42,480
that the lattice when i write it

1019
00:38:42,480 --> 00:38:44,720
multiplicatively it's just a product of

1020
00:38:44,720 --> 00:38:46,640
the pidis current

1021
00:38:46,640 --> 00:38:50,880
to one modem so if i want a vector

1022
00:38:50,880 --> 00:38:54,320
in that lattice to be non-zero

1023
00:38:54,320 --> 00:38:57,359
it means that when i take this product

1024
00:38:57,359 --> 00:39:00,079
this must wrap around modulo m otherwise

1025
00:39:00,079 --> 00:39:02,000
this product over the integer will be

1026
00:39:02,000 --> 00:39:02,720
smaller than

1027
00:39:02,720 --> 00:39:04,640
m and there is no way that it's

1028
00:39:04,640 --> 00:39:07,359
congruent to one modem

1029
00:39:07,359 --> 00:39:10,560
right so in particular if i take the

1030
00:39:10,560 --> 00:39:12,720
largest of those primes raised to the

1031
00:39:12,720 --> 00:39:15,040
length of the vector in l1 norm

1032
00:39:15,040 --> 00:39:17,760
this has to be larger than m and this

1033
00:39:17,760 --> 00:39:18,240
gives

1034
00:39:18,240 --> 00:39:21,440
our claim just by taking logarithms

1035
00:39:21,440 --> 00:39:23,359
so this is a bogus proof why is it a

1036
00:39:23,359 --> 00:39:25,119
bogus proof because i've completely

1037
00:39:25,119 --> 00:39:26,000
ignored

1038
00:39:26,000 --> 00:39:29,440
negative coefficients in the exponent

1039
00:39:29,440 --> 00:39:31,200
but if you work a little bit more you

1040
00:39:31,200 --> 00:39:33,200
can adjust this proof and adjust the

1041
00:39:33,200 --> 00:39:33,680
claim

1042
00:39:33,680 --> 00:39:38,240
to also handle negative exponents

1043
00:39:39,520 --> 00:39:42,079
and now you just have to instantiate the

1044
00:39:42,079 --> 00:39:45,359
lattice asymptotically so and and grows

1045
00:39:45,359 --> 00:39:48,160
and uh and i'm just basically a simple

1046
00:39:48,160 --> 00:39:49,599
institution taking

1047
00:39:49,599 --> 00:39:52,960
this uh integer k uh so there's a power

1048
00:39:52,960 --> 00:39:54,880
that appears in the modulus

1049
00:39:54,880 --> 00:39:57,119
to be essentially equal to n or just

1050
00:39:57,119 --> 00:39:58,480
proportional to m

1051
00:39:58,480 --> 00:40:02,160
is going to lead to the desired result

1052
00:40:02,160 --> 00:40:04,400
that uh the minimal distance of the

1053
00:40:04,400 --> 00:40:05,839
lattice

1054
00:40:05,839 --> 00:40:08,880
is actually very good it's n over log n

1055
00:40:08,880 --> 00:40:10,880
which is only your log n factor away

1056
00:40:10,880 --> 00:40:12,800
from skip out

1057
00:40:12,800 --> 00:40:15,520
so before this the the best lattices we

1058
00:40:15,520 --> 00:40:16,880
knew how to decode

1059
00:40:16,880 --> 00:40:19,920
was in the fourth root of n

1060
00:40:19,920 --> 00:40:21,839
so only halfway between the three volt

1061
00:40:21,839 --> 00:40:23,760
k's and minkowski bound so this gets us

1062
00:40:23,760 --> 00:40:26,000
much closer to my opposite node

1063
00:40:26,000 --> 00:40:28,000
of course we know better lattices we

1064
00:40:28,000 --> 00:40:30,000
know lattices with

1065
00:40:30,000 --> 00:40:31,839
you know this minimal distance being

1066
00:40:31,839 --> 00:40:33,599
bigger than

1067
00:40:33,599 --> 00:40:35,200
but those lattices we don't know how to

1068
00:40:35,200 --> 00:40:38,000
decode and this lattice i claim that we

1069
00:40:38,000 --> 00:40:39,760
know how to decode it

1070
00:40:39,760 --> 00:40:43,040
and this is uh again uh given by a

1071
00:40:43,040 --> 00:40:46,160
core and reversed uh cryptosystem

1072
00:40:46,160 --> 00:40:49,280
precisely this the decryption algorithm

1073
00:40:49,280 --> 00:40:51,839
is if you remove the all of it it's just

1074
00:40:51,839 --> 00:40:55,040
a decoding algorithm

1075
00:40:55,200 --> 00:40:57,040
so how does this decoding algorithm

1076
00:40:57,040 --> 00:40:59,440
works i remind you of the notation so we

1077
00:40:59,440 --> 00:41:01,680
want to decode up to a radius of

1078
00:41:01,680 --> 00:41:05,119
log of m over log of b um

1079
00:41:05,119 --> 00:41:07,280
and we have a target here that writes

1080
00:41:07,280 --> 00:41:08,160
the lattice vector

1081
00:41:08,160 --> 00:41:10,560
plus some error and we want to separate

1082
00:41:10,560 --> 00:41:11,200
the error

1083
00:41:11,200 --> 00:41:14,480
and the and the lattice vector

1084
00:41:14,480 --> 00:41:16,960
and again i'm going to abuse the

1085
00:41:16,960 --> 00:41:18,560
multiplicative

1086
00:41:18,560 --> 00:41:20,960
way of writing my lattice and something

1087
00:41:20,960 --> 00:41:21,920
so i'm going to

1088
00:41:21,920 --> 00:41:24,400
compute this quantity f to be the

1089
00:41:24,400 --> 00:41:25,040
product

1090
00:41:25,040 --> 00:41:28,240
of the pi raised to those ti's which are

1091
00:41:28,240 --> 00:41:29,300
my targets

1092
00:41:29,300 --> 00:41:30,800
[Music]

1093
00:41:30,800 --> 00:41:34,880
um and then i'm going to compute

1094
00:41:34,880 --> 00:41:37,839
if i if i unhold this definition of ti i

1095
00:41:37,839 --> 00:41:39,280
just get this double product

1096
00:41:39,280 --> 00:41:42,880
product of p i v i's and p i e i's

1097
00:41:42,880 --> 00:41:45,200
okay and this by the very construction

1098
00:41:45,200 --> 00:41:46,640
of my lattice

1099
00:41:46,640 --> 00:41:48,880
okay this quantity is always one modulo

1100
00:41:48,880 --> 00:41:49,760
of m

1101
00:41:49,760 --> 00:41:54,160
okay so what we are left is this with

1102
00:41:54,160 --> 00:41:56,240
this quantity product of the p i e

1103
00:41:56,240 --> 00:41:59,839
i modulo n but the thing is

1104
00:41:59,839 --> 00:42:02,960
because those exponents are small enough

1105
00:42:02,960 --> 00:42:04,079
by assumption

1106
00:42:04,079 --> 00:42:06,480
right because this error is small i

1107
00:42:06,480 --> 00:42:07,280
actually

1108
00:42:07,280 --> 00:42:08,960
know that this is sorry this shouldn't

1109
00:42:08,960 --> 00:42:10,720
be q here this should be m

1110
00:42:10,720 --> 00:42:12,880
i know that this product is smaller than

1111
00:42:12,880 --> 00:42:14,079
the modulus

1112
00:42:14,079 --> 00:42:15,920
okay and because it is smaller than the

1113
00:42:15,920 --> 00:42:17,200
modulus it means that i have

1114
00:42:17,200 --> 00:42:19,760
recovered it over the integers and not

1115
00:42:19,760 --> 00:42:21,520
just modulo m

1116
00:42:21,520 --> 00:42:24,560
so now it is very easy to to factor it

1117
00:42:24,560 --> 00:42:27,760
okay it's it's a subset product problem

1118
00:42:27,760 --> 00:42:29,760
i can just do trial division

1119
00:42:29,760 --> 00:42:33,359
and recover the exponents

1120
00:42:33,359 --> 00:42:35,119
and then if i recover the exponent as it

1121
00:42:35,119 --> 00:42:37,040
gives simple subtraction will also give

1122
00:42:37,040 --> 00:42:37,359
me

1123
00:42:37,359 --> 00:42:40,240
the lattice vector

1124
00:42:40,640 --> 00:42:42,400
this is this is actually a very simple

1125
00:42:42,400 --> 00:42:45,520
decoding algorithm

1126
00:42:45,520 --> 00:42:48,480
and so again i've cheated a little bit

1127
00:42:48,480 --> 00:42:49,839
because i've only

1128
00:42:49,839 --> 00:42:53,200
decoded positive error uh it turns out

1129
00:42:53,200 --> 00:42:54,960
that if you do a bit more effort you can

1130
00:42:54,960 --> 00:42:56,240
also decode

1131
00:42:56,240 --> 00:42:57,839
errors that might have negative

1132
00:42:57,839 --> 00:42:59,680
components and

1133
00:42:59,680 --> 00:43:01,359
you do this by computing the same

1134
00:43:01,359 --> 00:43:03,839
quantity f but in your mind you split it

1135
00:43:03,839 --> 00:43:06,240
as the part with positive exponent and

1136
00:43:06,240 --> 00:43:08,480
the part with negative exponents

1137
00:43:08,480 --> 00:43:10,319
and then you're you know in your mind

1138
00:43:10,319 --> 00:43:12,000
there's a u n a v that you should be

1139
00:43:12,000 --> 00:43:12,880
recovering but

1140
00:43:12,880 --> 00:43:14,720
you also know that those two guys should

1141
00:43:14,720 --> 00:43:16,560
be small

1142
00:43:16,560 --> 00:43:18,319
so this is kind of a rational

1143
00:43:18,319 --> 00:43:20,240
construction problem i know fraction i

1144
00:43:20,240 --> 00:43:22,400
know that two things are small

1145
00:43:22,400 --> 00:43:24,640
and i know it might end and i need to

1146
00:43:24,640 --> 00:43:25,440
recover

1147
00:43:25,440 --> 00:43:27,040
both things and this is something you

1148
00:43:27,040 --> 00:43:28,960
can solve with with a simple

1149
00:43:28,960 --> 00:43:31,839
uh shortest vector problem but this time

1150
00:43:31,839 --> 00:43:33,440
in the lattice of dimension two so

1151
00:43:33,440 --> 00:43:34,319
there's no

1152
00:43:34,319 --> 00:43:36,480
there's no hardness here this is uh this

1153
00:43:36,480 --> 00:43:40,240
is previously polynomial time

1154
00:43:40,240 --> 00:43:42,560
again i've not completely fully solved

1155
00:43:42,560 --> 00:43:44,560
the whole problem of decoding because

1156
00:43:44,560 --> 00:43:47,760
still my errors here are integers but it

1157
00:43:47,760 --> 00:43:50,319
turns out that resource parameterization

1158
00:43:50,319 --> 00:43:53,760
just rounding the target before doing

1159
00:43:53,760 --> 00:43:56,319
all this will actually gives you

1160
00:43:56,319 --> 00:43:58,720
still the same quality of decoding even

1161
00:43:58,720 --> 00:43:59,520
if you have

1162
00:43:59,520 --> 00:44:01,839
continuous error maybe up to a small

1163
00:44:01,839 --> 00:44:04,170
constant factor to lose

1164
00:44:04,170 --> 00:44:06,480
[Music]

1165
00:44:06,480 --> 00:44:10,000
so it is very nice it is it was in

1166
00:44:10,000 --> 00:44:12,960
2018 as far as i know the best uh

1167
00:44:12,960 --> 00:44:15,359
decoding radius that was achievable

1168
00:44:15,359 --> 00:44:18,560
uh when comparing it to mitkowski bound

1169
00:44:18,560 --> 00:44:21,119
uh just a log and away from it but it's

1170
00:44:21,119 --> 00:44:23,280
still a bit away from it so can

1171
00:44:23,280 --> 00:44:25,599
can we do better and if you look at

1172
00:44:25,599 --> 00:44:27,760
what's going on what's costing you this

1173
00:44:27,760 --> 00:44:28,800
login factor

1174
00:44:28,800 --> 00:44:30,880
it seems is the fact that if you want n

1175
00:44:30,880 --> 00:44:32,720
primes and one of them has to be you

1176
00:44:32,720 --> 00:44:33,599
know larger than

1177
00:44:33,599 --> 00:44:35,920
n you would like to have more small

1178
00:44:35,920 --> 00:44:37,119
primes you would like all

1179
00:44:37,119 --> 00:44:40,240
your primes to be two or something

1180
00:44:40,240 --> 00:44:42,960
and if if if you had like so many prime

1181
00:44:42,960 --> 00:44:44,400
of this size then you would kill the

1182
00:44:44,400 --> 00:44:46,160
login

1183
00:44:46,160 --> 00:44:48,480
so you can try to do this with other

1184
00:44:48,480 --> 00:44:49,520
with other rings

1185
00:44:49,520 --> 00:44:51,200
so switching back from the integers

1186
00:44:51,200 --> 00:44:52,960
maybe to to

1187
00:44:52,960 --> 00:44:55,359
polynomials over fp but it doesn't seem

1188
00:44:55,359 --> 00:44:57,359
to improve the asymptotics

1189
00:44:57,359 --> 00:44:59,920
and actually when i show this to people

1190
00:44:59,920 --> 00:45:01,920
more inclined to elliptic curves than i

1191
00:45:01,920 --> 00:45:03,200
they say yeah maybe this is something

1192
00:45:03,200 --> 00:45:05,280
you can solve with elliptic curves

1193
00:45:05,280 --> 00:45:07,520
and obviously i'm not the guy for for

1194
00:45:07,520 --> 00:45:09,200
this so so i'm turning back the

1195
00:45:09,200 --> 00:45:12,079
problem to you guys uh is this elliptic

1196
00:45:12,079 --> 00:45:13,440
curve we're going to solve this do we

1197
00:45:13,440 --> 00:45:14,640
have enough

1198
00:45:14,640 --> 00:45:18,560
primes uh to to solve this

1199
00:45:18,560 --> 00:45:20,160
and also if you if you're bringing

1200
00:45:20,160 --> 00:45:21,920
lattices and elliptic curves together

1201
00:45:21,920 --> 00:45:22,160
you

1202
00:45:22,160 --> 00:45:24,319
have to mention the the modern vague

1203
00:45:24,319 --> 00:45:25,599
lattices which are

1204
00:45:25,599 --> 00:45:28,400
also extremely fancy lattice uh that

1205
00:45:28,400 --> 00:45:30,160
reach minkowski bounds

1206
00:45:30,160 --> 00:45:33,040
and that are built out of autophiliptic

1207
00:45:33,040 --> 00:45:34,800
curves

1208
00:45:34,800 --> 00:45:37,680
so um please don't ask any question of

1209
00:45:37,680 --> 00:45:39,040
those two on those two

1210
00:45:39,040 --> 00:45:41,359
things those questions are for you as a

1211
00:45:41,359 --> 00:45:43,520
suggestion of open problems but i

1212
00:45:43,520 --> 00:45:46,319
really really not equipped to to answer

1213
00:45:46,319 --> 00:45:48,800
anything about it

1214
00:45:48,800 --> 00:45:51,119
um but what i should mention as well is

1215
00:45:51,119 --> 00:45:52,640
that there is actually a recent result

1216
00:45:52,640 --> 00:45:53,839
that's outperformed

1217
00:45:53,839 --> 00:45:57,839
uh what we've analyzed with cctro

1218
00:45:57,839 --> 00:45:59,359
which actually use a completely

1219
00:45:59,359 --> 00:46:01,839
different approach again it's a fancy

1220
00:46:01,839 --> 00:46:03,200
construction of the lattice it's

1221
00:46:03,200 --> 00:46:04,640
construction d

1222
00:46:04,640 --> 00:46:07,119
and it's also using some coding theory

1223
00:46:07,119 --> 00:46:09,280
so i think there are some bch codes

1224
00:46:09,280 --> 00:46:12,960
behind this construction and using this

1225
00:46:12,960 --> 00:46:14,720
mook and packet we're actually able to

1226
00:46:14,720 --> 00:46:16,720
give a decoding algorithm that is only a

1227
00:46:16,720 --> 00:46:17,520
square root

1228
00:46:17,520 --> 00:46:20,880
login away from minkowski bounds

1229
00:46:20,880 --> 00:46:22,480
and they can even do more i think they

1230
00:46:22,480 --> 00:46:24,240
can do like this decoding

1231
00:46:24,240 --> 00:46:27,680
and it's pretty interesting and uh

1232
00:46:27,680 --> 00:46:31,040
it's it's it's very nice

1233
00:46:31,839 --> 00:46:34,480
so why all this what is my point with

1234
00:46:34,480 --> 00:46:35,760
all this why

1235
00:46:35,760 --> 00:46:37,599
why should cryptographers should care

1236
00:46:37,599 --> 00:46:38,880
about all this

1237
00:46:38,880 --> 00:46:42,800
so the first thing i want to say is that

1238
00:46:42,800 --> 00:46:44,720
you know not all knapsack-based

1239
00:46:44,720 --> 00:46:46,480
cryptography is actually broken

1240
00:46:46,480 --> 00:46:48,319
actually the core is a script or system

1241
00:46:48,319 --> 00:46:50,240
is not broken at least in the asymptotic

1242
00:46:50,240 --> 00:46:51,520
sense

1243
00:46:51,520 --> 00:46:54,400
and uh and it offers actually very short

1244
00:46:54,400 --> 00:46:55,920
ciphertext of course it has

1245
00:46:55,920 --> 00:46:57,760
rather large public keys but a little

1246
00:46:57,760 --> 00:46:59,599
bit much shorter ciphertext than

1247
00:46:59,599 --> 00:47:02,720
ld can offer i think at least if you

1248
00:47:02,720 --> 00:47:04,560
you know you have to to readjust to the

1249
00:47:04,560 --> 00:47:06,240
state of the art because that is other

1250
00:47:06,240 --> 00:47:08,560
than because it is from 40 years ago

1251
00:47:08,560 --> 00:47:11,440
whereas they were targeting like 80 or

1252
00:47:11,440 --> 00:47:13,760
even less bits of security so

1253
00:47:13,760 --> 00:47:15,680
you have to to re-parameterize it but

1254
00:47:15,680 --> 00:47:18,160
still it's because of its excellent

1255
00:47:18,160 --> 00:47:20,559
uh decoding capabilities of the virtual

1256
00:47:20,559 --> 00:47:21,839
ciphertext

1257
00:47:21,839 --> 00:47:24,160
i also think it's it's an intriguing

1258
00:47:24,160 --> 00:47:25,440
problem from uh

1259
00:47:25,440 --> 00:47:27,760
especially from a quantum point of view

1260
00:47:27,760 --> 00:47:29,599
because it's some kind of a reverse

1261
00:47:29,599 --> 00:47:31,200
of the discrete algorithm problem the

1262
00:47:31,200 --> 00:47:32,720
discrete logarithm problem

1263
00:47:32,720 --> 00:47:34,160
you're given a field or as a

1264
00:47:34,160 --> 00:47:35,680
representation of a field and you have

1265
00:47:35,680 --> 00:47:37,520
to compute this categorism

1266
00:47:37,520 --> 00:47:39,920
here it's the opposite you're given

1267
00:47:39,920 --> 00:47:41,359
discrete logarithms and you have to

1268
00:47:41,359 --> 00:47:43,680
recover the representation of the field

1269
00:47:43,680 --> 00:47:44,559
out of it

1270
00:47:44,559 --> 00:47:46,559
i have no idea this is quantum resistant

1271
00:47:46,559 --> 00:47:48,240
and i think this is

1272
00:47:48,240 --> 00:47:51,439
kind of a neat question

1273
00:47:51,520 --> 00:47:53,839
i also want to point out that this this

1274
00:47:53,839 --> 00:47:54,880
uh

1275
00:47:54,880 --> 00:47:56,960
decoding algorithm you don't have to use

1276
00:47:56,960 --> 00:47:59,359
it like inside directly as a crypto

1277
00:47:59,359 --> 00:48:00,960
system you don't have to tie the crypto

1278
00:48:00,960 --> 00:48:02,400
system to to it

1279
00:48:02,400 --> 00:48:05,760
you could maybe use it inside a pure lwd

1280
00:48:05,760 --> 00:48:07,440
scheme you could like separate the

1281
00:48:07,440 --> 00:48:09,200
decoding phase from the cryptosystem

1282
00:48:09,200 --> 00:48:10,079
itself

1283
00:48:10,079 --> 00:48:13,920
and maybe improve improve

1284
00:48:13,920 --> 00:48:17,119
l schemes that are truly based on lwe

1285
00:48:17,119 --> 00:48:19,680
despite using those ids of corinne

1286
00:48:19,680 --> 00:48:21,359
rivers

1287
00:48:21,359 --> 00:48:24,240
and it's not only about improving things

1288
00:48:24,240 --> 00:48:24,880
that exist

1289
00:48:24,880 --> 00:48:27,200
it's also about inventing things that

1290
00:48:27,200 --> 00:48:29,040
did not necessarily exist

1291
00:48:29,040 --> 00:48:31,680
in particular galbraith lee auto those

1292
00:48:31,680 --> 00:48:33,359
ideas actually built something very

1293
00:48:33,359 --> 00:48:34,000
different from

1294
00:48:34,000 --> 00:48:36,319
encryption namely an obfuscator an

1295
00:48:36,319 --> 00:48:38,960
obfuscator for need near equality

1296
00:48:38,960 --> 00:48:44,079
that seemingly achieves vbd security

1297
00:48:44,720 --> 00:48:47,760
so yes there is ways of

1298
00:48:47,760 --> 00:48:50,880
doing new and brilliant stuff out of

1299
00:48:50,880 --> 00:48:53,920
very old ideas

1300
00:48:54,480 --> 00:48:57,839
which leads me to my little critic of

1301
00:48:57,839 --> 00:48:59,599
the current state of research in

1302
00:48:59,599 --> 00:49:02,240
lattice-based cryptography

1303
00:49:02,240 --> 00:49:05,280
and i think it can be summarized

1304
00:49:05,280 --> 00:49:09,280
as this i think we live in a monoculture

1305
00:49:09,280 --> 00:49:11,599
centered around the sis problem in the

1306
00:49:11,599 --> 00:49:13,200
lda problem or

1307
00:49:13,200 --> 00:49:15,760
more technically around random curie

1308
00:49:15,760 --> 00:49:17,280
lettuces

1309
00:49:17,280 --> 00:49:19,440
and i certainly don't want abs this is

1310
00:49:19,440 --> 00:49:20,720
certainly not the critic

1311
00:49:20,720 --> 00:49:23,520
of the contribution that have been made

1312
00:49:23,520 --> 00:49:24,400
uh

1313
00:49:24,400 --> 00:49:27,200
but more of what we've done with all

1314
00:49:27,200 --> 00:49:27,680
this

1315
00:49:27,680 --> 00:49:31,440
as a community and i think the slsis and

1316
00:49:31,440 --> 00:49:32,319
lge have

1317
00:49:32,319 --> 00:49:35,520
like made things incredibly easy to

1318
00:49:35,520 --> 00:49:35,920
build

1319
00:49:35,920 --> 00:49:38,800
extremely tall

1320
00:49:40,079 --> 00:49:42,720
tower of of cryptography extremely

1321
00:49:42,720 --> 00:49:45,760
complex and very rich

1322
00:49:45,760 --> 00:49:48,960
but only in the in the in the

1323
00:49:48,960 --> 00:49:52,079
vertical direction in some sense and

1324
00:49:52,079 --> 00:49:53,680
and the foundational work that has been

1325
00:49:53,680 --> 00:49:55,440
done was extremely thorough so

1326
00:49:55,440 --> 00:49:58,319
this is this is extremely solid and but

1327
00:49:58,319 --> 00:50:00,160
it's kind of a comfort zone and it's

1328
00:50:00,160 --> 00:50:01,839
it's normal that when you want to build

1329
00:50:01,839 --> 00:50:02,720
height stuff you

1330
00:50:02,720 --> 00:50:04,720
do it on the comfort zone but it doesn't

1331
00:50:04,720 --> 00:50:06,000
mean that we should be restricted to

1332
00:50:06,000 --> 00:50:07,680
this comfort zone

1333
00:50:07,680 --> 00:50:11,920
and uh despite sis and lb having

1334
00:50:11,920 --> 00:50:13,680
achieved incredible feats

1335
00:50:13,680 --> 00:50:16,160
i i i think there is some points to be

1336
00:50:16,160 --> 00:50:18,480
made about it the first one is that

1337
00:50:18,480 --> 00:50:20,640
worst case hotness is something

1338
00:50:20,640 --> 00:50:21,760
confronting

1339
00:50:21,760 --> 00:50:24,720
but it's not a silver bullet okay you

1340
00:50:24,720 --> 00:50:26,960
you maybe you'll be less afraid of

1341
00:50:26,960 --> 00:50:29,359
like uh something coming out of like

1342
00:50:29,359 --> 00:50:31,359
specific instances but

1343
00:50:31,359 --> 00:50:32,800
it does not dispense you from

1344
00:50:32,800 --> 00:50:34,800
cryptanalysis neither concrete neither

1345
00:50:34,800 --> 00:50:36,800
is an asymptotic noises and quantum or

1346
00:50:36,800 --> 00:50:38,480
anything so

1347
00:50:38,480 --> 00:50:40,559
worst case hyenas is still business as

1348
00:50:40,559 --> 00:50:42,640
usual you still have to to try to break

1349
00:50:42,640 --> 00:50:43,599
things until

1350
00:50:43,599 --> 00:50:45,200
you get convinced that it cannot be

1351
00:50:45,200 --> 00:50:46,800
broken

1352
00:50:46,800 --> 00:50:48,960
but as i mentioned we locked ourselves

1353
00:50:48,960 --> 00:50:51,520
in a subspace of design in this comfort

1354
00:50:51,520 --> 00:50:52,240
zone

1355
00:50:52,240 --> 00:50:53,680
and where we think that everything is

1356
00:50:53,680 --> 00:50:55,359
secure but

1357
00:50:55,359 --> 00:50:57,599
you know maybe they they maybe this

1358
00:50:57,599 --> 00:50:59,040
means that the current designer

1359
00:50:59,040 --> 00:51:00,720
are far from multiple because we've not

1360
00:51:00,720 --> 00:51:03,520
explored the full space of things

1361
00:51:03,520 --> 00:51:06,640
um and this is not just

1362
00:51:06,640 --> 00:51:09,680
necessarily a need an institution to

1363
00:51:09,680 --> 00:51:11,760
uh throw everything away in german two

1364
00:51:11,760 --> 00:51:13,280
different things but at least we should

1365
00:51:13,280 --> 00:51:15,440
explore them and document them

1366
00:51:15,440 --> 00:51:18,160
and and it's even worse than this

1367
00:51:18,160 --> 00:51:19,440
because of this narrative that's

1368
00:51:19,440 --> 00:51:22,319
that all this was uh was bad crypto and

1369
00:51:22,319 --> 00:51:23,839
we should forget about it i think very

1370
00:51:23,839 --> 00:51:25,599
interesting ideas have been buried

1371
00:51:25,599 --> 00:51:27,839
if not even demoted to cryptographic

1372
00:51:27,839 --> 00:51:28,960
scenes we've

1373
00:51:28,960 --> 00:51:32,400
you know we've locked ourselves in

1374
00:51:32,400 --> 00:51:36,720
in a subset

1375
00:51:36,720 --> 00:51:40,079
and why is it problematic well because

1376
00:51:40,079 --> 00:51:42,880
you know in some sense in this huge

1377
00:51:42,880 --> 00:51:44,720
diversity of lattices that exist

1378
00:51:44,720 --> 00:51:46,720
it seems that the only thing that we're

1379
00:51:46,720 --> 00:51:48,000
doing things with

1380
00:51:48,000 --> 00:51:50,400
albert nicole is the lattice dn which is

1381
00:51:50,400 --> 00:51:52,960
the saddest of all the lattice

1382
00:51:52,960 --> 00:51:55,040
uh indeed each time you have to do

1383
00:51:55,040 --> 00:51:56,480
something algorithmically with the

1384
00:51:56,480 --> 00:51:57,680
lattice what people do

1385
00:51:57,680 --> 00:52:00,960
is to reduce themselves to z or zn just

1386
00:52:00,960 --> 00:52:02,800
by construction

1387
00:52:02,800 --> 00:52:04,319
geometrically this is the worst thing

1388
00:52:04,319 --> 00:52:06,319
that you can do if the end is the worst

1389
00:52:06,319 --> 00:52:07,200
lattice

1390
00:52:07,200 --> 00:52:09,119
it's it has the worst packing radius the

1391
00:52:09,119 --> 00:52:10,480
worst coloring radius

1392
00:52:10,480 --> 00:52:12,640
the worst smoothness parameter it just

1393
00:52:12,640 --> 00:52:14,400
sucks

1394
00:52:14,400 --> 00:52:16,720
where we have like so many more lattices

1395
00:52:16,720 --> 00:52:18,079
and the first one that i want to

1396
00:52:18,079 --> 00:52:18,720
emphasize

1397
00:52:18,720 --> 00:52:21,119
is the root lattices or the wood lattice

1398
00:52:21,119 --> 00:52:21,839
of type a

1399
00:52:21,839 --> 00:52:24,880
in particular why because actually

1400
00:52:24,880 --> 00:52:25,280
they're

1401
00:52:25,280 --> 00:52:28,480
already there each time you're using a

1402
00:52:28,480 --> 00:52:31,040
cycloatomic rings of prime conductor

1403
00:52:31,040 --> 00:52:32,559
it's actually the hook lattice is

1404
00:52:32,559 --> 00:52:35,440
hidden in there and instead of embracing

1405
00:52:35,440 --> 00:52:36,240
it and using

1406
00:52:36,240 --> 00:52:37,839
algorithms that are known for the

1407
00:52:37,839 --> 00:52:39,680
lattice for for example the closest

1408
00:52:39,680 --> 00:52:40,800
spectre problem

1409
00:52:40,800 --> 00:52:43,040
in the status people have been fighting

1410
00:52:43,040 --> 00:52:44,240
against it they've been

1411
00:52:44,240 --> 00:52:46,640
breaking its symmetry this lattice has

1412
00:52:46,640 --> 00:52:48,000
been butchered

1413
00:52:48,000 --> 00:52:50,800
by a generation of contaminants that's

1414
00:52:50,800 --> 00:52:51,280
uh

1415
00:52:51,280 --> 00:52:52,720
i don't want to see this happen it's

1416
00:52:52,720 --> 00:52:54,559
beautiful that is please don't butcher

1417
00:52:54,559 --> 00:52:55,040
it

1418
00:52:55,040 --> 00:52:56,640
so if you don't want to butcher it you

1419
00:52:56,640 --> 00:52:58,240
can read the

1420
00:52:58,240 --> 00:53:01,280
bachelor testis of uh vessels and food

1421
00:53:01,280 --> 00:53:04,079
but there are just so many more uh leech

1422
00:53:04,079 --> 00:53:05,280
lattice construction d

1423
00:53:05,280 --> 00:53:08,640
barnes will all those snore adelman core

1424
00:53:08,640 --> 00:53:10,000
revised lattices or

1425
00:53:10,000 --> 00:53:12,640
even crazy motivated lattices and it's

1426
00:53:12,640 --> 00:53:14,319
hard to think that they have nothing to

1427
00:53:14,319 --> 00:53:16,319
refer to cryptography

1428
00:53:16,319 --> 00:53:19,119
so i will conclude with this uh

1429
00:53:19,119 --> 00:53:21,760
cryptography strives in diversity

1430
00:53:21,760 --> 00:53:24,160
and i think that uh nowadays we would

1431
00:53:24,160 --> 00:53:26,400
need uh

1432
00:53:26,400 --> 00:53:28,400
to be more open in lattice-based

1433
00:53:28,400 --> 00:53:29,599
cryptography to

1434
00:53:29,599 --> 00:53:32,960
uh other backgrounds other point of view

1435
00:53:32,960 --> 00:53:36,960
over goals and just uh other people

1436
00:53:36,960 --> 00:53:38,960
you know maybe people that are more

1437
00:53:38,960 --> 00:53:41,119
coming from coding theories they've put

1438
00:53:41,119 --> 00:53:42,400
tom lattices for

1439
00:53:42,400 --> 00:53:44,319
communication over continuous channel

1440
00:53:44,319 --> 00:53:46,000
for decades

1441
00:53:46,000 --> 00:53:47,839
uh maybe people knowing about model

1442
00:53:47,839 --> 00:53:49,920
reforms maybe people knowing about

1443
00:53:49,920 --> 00:53:52,960
discrete symmetric group

1444
00:53:52,960 --> 00:53:55,359
of like super special lettuces like the

1445
00:53:55,359 --> 00:53:58,160
monster group virtually chatted

1446
00:53:58,160 --> 00:54:00,960
so yeah i think we need a bit more

1447
00:54:00,960 --> 00:54:02,960
openness in lattice-based cryptography

1448
00:54:02,960 --> 00:54:04,880
doesn't mean that we have to base

1449
00:54:04,880 --> 00:54:07,200
standard schemes on it but we should be

1450
00:54:07,200 --> 00:54:08,319
doing more research

1451
00:54:08,319 --> 00:54:12,960
in in a wider range of directions

1452
00:54:12,960 --> 00:54:16,240
and that is all for my talk

1453
00:54:16,240 --> 00:54:19,118
thank you very much

1454
00:54:19,359 --> 00:54:22,880
thank you leo thanks for a nice talk

1455
00:54:22,880 --> 00:54:26,720
we have a few minutes for questions

1456
00:54:28,319 --> 00:54:30,880
uh there are a couple of questions on

1457
00:54:30,880 --> 00:54:33,280
zulip

1458
00:54:33,440 --> 00:54:35,920
can you see them or shall i read them

1459
00:54:35,920 --> 00:54:37,440
yeah i appreciate if you could read them

1460
00:54:37,440 --> 00:54:38,079
because

1461
00:54:38,079 --> 00:54:42,079
zlip is open on the other computer okay

1462
00:54:42,079 --> 00:54:43,839
so first question i think these are

1463
00:54:43,839 --> 00:54:45,599
questions about the first part

1464
00:54:45,599 --> 00:54:48,960
the first question from nigel smart why

1465
00:54:48,960 --> 00:54:50,960
are the diagonal elements in the first

1466
00:54:50,960 --> 00:54:52,400
slide is equal to

1467
00:54:52,400 --> 00:54:55,359
log bi and not something like c log bi

1468
00:54:55,359 --> 00:54:56,799
or something which makes all the

1469
00:54:56,799 --> 00:54:59,390
diagonal values to be the same size

1470
00:54:59,390 --> 00:55:00,640
[Music]

1471
00:55:00,640 --> 00:55:01,790
okay so

1472
00:55:01,790 --> 00:55:04,839
[Music]

1473
00:55:04,839 --> 00:55:07,599
oh yes

1474
00:55:07,599 --> 00:55:11,680
so it's basically because um

1475
00:55:11,680 --> 00:55:15,040
the the l1 size of this element

1476
00:55:15,040 --> 00:55:18,319
when you put log pi's here is uh

1477
00:55:18,319 --> 00:55:21,599
is going to be the logarithm of the size

1478
00:55:21,599 --> 00:55:24,799
of u and of the size of v

1479
00:55:24,799 --> 00:55:27,760
so so essentially by putting those guys

1480
00:55:27,760 --> 00:55:28,160
here

1481
00:55:28,160 --> 00:55:31,520
you you you create a relation

1482
00:55:31,520 --> 00:55:34,319
between the quality of the solution as a

1483
00:55:34,319 --> 00:55:35,680
lattice vector

1484
00:55:35,680 --> 00:55:40,000
and the the size of those elements u and

1485
00:55:40,000 --> 00:55:40,240
v

1486
00:55:40,240 --> 00:55:41,680
which are it's themselves going to

1487
00:55:41,680 --> 00:55:43,790
dictate the size of s

1488
00:55:43,790 --> 00:55:47,090
[Music]

1489
00:55:47,520 --> 00:55:50,000
all right so and you keep you keep a

1490
00:55:50,000 --> 00:55:50,960
constant c

1491
00:55:50,960 --> 00:55:52,640
that you might take want to take large

1492
00:55:52,640 --> 00:55:55,359
on the last column so that you can tune

1493
00:55:55,359 --> 00:55:57,920
whether you want those things to be

1494
00:55:57,920 --> 00:55:58,480
small

1495
00:55:58,480 --> 00:56:00,400
or whether you want this approximation

1496
00:56:00,400 --> 00:56:02,079
to be of high quality

1497
00:56:02,079 --> 00:56:05,520
okay so this constancy is here

1498
00:56:05,520 --> 00:56:08,160
is here to tune your two goals the two

1499
00:56:08,160 --> 00:56:10,000
things that you want to control

1500
00:56:10,000 --> 00:56:16,000
and and find the the right trails

1501
00:56:16,000 --> 00:56:19,040
all right thanks another question by

1502
00:56:19,040 --> 00:56:22,880
daniel apon and says um

1503
00:56:22,880 --> 00:56:24,880
gaussian heuristic seems invalid for

1504
00:56:24,880 --> 00:56:27,119
certain constant c

1505
00:56:27,119 --> 00:56:29,280
would like to hear more about this how

1506
00:56:29,280 --> 00:56:31,280
where why does it fail

1507
00:56:31,280 --> 00:56:33,280
is that a simple punch line about what's

1508
00:56:33,280 --> 00:56:34,880
going on here

1509
00:56:34,880 --> 00:56:37,119
yeah so the simple punch line is again

1510
00:56:37,119 --> 00:56:38,480
take this lattice and set

1511
00:56:38,480 --> 00:56:41,520
c equals zero and then

1512
00:56:41,520 --> 00:56:43,599
you can you can see that this is not a

1513
00:56:43,599 --> 00:56:45,280
random that is at all

1514
00:56:45,280 --> 00:56:48,319
um essentially that's that's almost a

1515
00:56:48,319 --> 00:56:49,280
null token all that

1516
00:56:49,280 --> 00:56:52,160
is and um

1517
00:56:52,480 --> 00:56:54,720
and yeah the the closest vector in an

1518
00:56:54,720 --> 00:56:56,319
orthogonal lattice is going to be worse

1519
00:56:56,319 --> 00:56:56,640
than

1520
00:56:56,640 --> 00:56:59,839
the randomness

1521
00:57:01,040 --> 00:57:04,559
all right any other questions from the

1522
00:57:04,559 --> 00:57:05,200
audience

1523
00:57:05,200 --> 00:57:13,839
that i don't see

1524
00:57:15,599 --> 00:57:18,240
so actually if i may ask a question i'm

1525
00:57:18,240 --> 00:57:19,839
actually curious about this result

1526
00:57:19,839 --> 00:57:21,920
with relation to obfuscation that you

1527
00:57:21,920 --> 00:57:22,880
mentioned by

1528
00:57:22,880 --> 00:57:26,480
galbraith and lee can you

1529
00:57:26,480 --> 00:57:29,520
elaborate on that a bit i

1530
00:57:29,520 --> 00:57:32,079
i'm i'm too afraid of saying something

1531
00:57:32,079 --> 00:57:33,680
stupid but

1532
00:57:33,680 --> 00:57:38,319
um yeah i think they're encoding things

1533
00:57:38,319 --> 00:57:39,920
in the exponent and they're

1534
00:57:39,920 --> 00:57:42,720
using this this idea that uh if there's

1535
00:57:42,720 --> 00:57:43,760
not too much error

1536
00:57:43,760 --> 00:57:46,640
you can simply recover those errors in

1537
00:57:46,640 --> 00:57:48,000
the exponent

1538
00:57:48,000 --> 00:57:51,440
by by factoring but honestly you you

1539
00:57:51,440 --> 00:57:52,240
would have to

1540
00:57:52,240 --> 00:57:54,319
to talk with steven or maybe read their

1541
00:57:54,319 --> 00:57:55,440
paper to

1542
00:57:55,440 --> 00:57:57,839
to know more so yeah i'm so i'm sorry i

1543
00:57:57,839 --> 00:57:59,280
don't have more insight

1544
00:57:59,280 --> 00:58:01,200
i just wanted to point at it

1545
00:58:01,200 --> 00:58:03,119
unfortunately

1546
00:58:03,119 --> 00:58:09,040
i i'm a bit short-handed here

1547
00:58:09,040 --> 00:58:14,720
okay thanks any other questions

1548
00:58:20,400 --> 00:58:23,839
if not

1549
00:58:23,920 --> 00:58:25,599
well thank you again for the wait

1550
00:58:25,599 --> 00:58:27,200
there's there's one more question

1551
00:58:27,200 --> 00:58:29,520
right

1552
00:58:30,400 --> 00:58:31,610
hmm i posted a question

1553
00:58:31,610 --> 00:58:33,680
[Music]

1554
00:58:33,680 --> 00:58:35,920
what would that mean can you put it can

1555
00:58:35,920 --> 00:58:38,000
you put it on the copy paste on

1556
00:58:38,000 --> 00:58:42,000
all right that's on chat

1557
00:58:42,799 --> 00:58:44,799
now i'll go i won't quit later and try

1558
00:58:44,799 --> 00:58:46,880
to answer any remaining questions well

1559
00:58:46,880 --> 00:58:48,240
this will be easy so for the problem

1560
00:58:48,240 --> 00:58:50,480
we're not having enough small primes in

1561
00:58:50,480 --> 00:58:53,839
z z does switch into aj cycle atomic

1562
00:58:53,839 --> 00:58:54,720
rings easy

1563
00:58:54,720 --> 00:58:58,160
sata work or is it nonsense

1564
00:58:58,160 --> 00:59:01,359
sorry can you see the chat

1565
00:59:01,359 --> 00:59:05,920
window as the okay

1566
00:59:05,920 --> 00:59:09,839
stop share oh yes this chat

1567
00:59:09,839 --> 00:59:12,000
uh for the prime of not having enough

1568
00:59:12,000 --> 00:59:14,319
small primes in z those switching to

1569
00:59:14,319 --> 00:59:17,440
say ah yes that's um

1570
00:59:17,440 --> 00:59:19,280
that's that's a natural strategy but

1571
00:59:19,280 --> 00:59:20,960
then um

1572
00:59:20,960 --> 00:59:22,640
the thing is that the notion of size

1573
00:59:22,640 --> 00:59:24,640
becomes kind of like it's it's no more a

1574
00:59:24,640 --> 00:59:26,720
one-dimensional thing so

1575
00:59:26,720 --> 00:59:29,680
i i i've tried but maybe very naively

1576
00:59:29,680 --> 00:59:30,240
but i

1577
00:59:30,240 --> 00:59:32,319
did not manage to to solve it but it's

1578
00:59:32,319 --> 00:59:33,359
yes that's it's

1579
00:59:33,359 --> 00:59:34,880
somewhere where you have more small

1580
00:59:34,880 --> 00:59:36,720
primes so that's that would be natural

1581
00:59:36,720 --> 00:59:39,040
as well

1582
00:59:44,079 --> 00:59:47,760
all right okay leo thanks very much for

1583
00:59:47,760 --> 00:59:48,640
your talk

1584
00:59:48,640 --> 00:59:51,599
uh thank you for the invitation it was a

1585
00:59:51,599 --> 00:59:52,480
real pleasure

1586
00:59:52,480 --> 00:59:54,880
and uh well i'm not sure i'll join the

1587
00:59:54,880 --> 00:59:57,040
social hours i hope i can

1588
00:59:57,040 --> 01:00:00,160
it's a bit late

1589
01:00:00,160 --> 01:00:03,119
okay thanks uh thanks everybody well we

1590
01:00:03,119 --> 01:00:04,799
have a

1591
01:00:04,799 --> 01:00:07,839
another break now

