1
00:00:00,480 --> 00:00:03,199
hello everyone i'm c hung

2
00:00:03,199 --> 00:00:05,600
a phd student from hemphill center for

3
00:00:05,600 --> 00:00:07,200
information security

4
00:00:07,200 --> 00:00:09,760
this presentation is about a multi-party

5
00:00:09,760 --> 00:00:11,120
cardinality test

6
00:00:11,120 --> 00:00:13,759
for threshold privacy intersection do

7
00:00:13,759 --> 00:00:15,679
you want to work with pedro blanco and

8
00:00:15,679 --> 00:00:18,480
nicole deuteronomy

9
00:00:19,840 --> 00:00:23,439
here's a brief overview of this talk

10
00:00:23,439 --> 00:00:26,720
i'm gonna start with the background

11
00:00:26,720 --> 00:00:28,840
and motivation of private set

12
00:00:28,840 --> 00:00:30,240
intersection

13
00:00:30,240 --> 00:00:32,479
next i will show our results in this

14
00:00:32,479 --> 00:00:33,360
work

15
00:00:33,360 --> 00:00:36,960
and relations with a concurrent work

16
00:00:36,960 --> 00:00:39,760
then i will show the challenge we met in

17
00:00:39,760 --> 00:00:42,399
our approach to get around it

18
00:00:42,399 --> 00:00:44,160
at the end i finished a talk with a

19
00:00:44,160 --> 00:00:46,959
short summary

20
00:00:47,760 --> 00:00:50,879
let me briefly explain what is a private

21
00:00:50,879 --> 00:00:53,039
set intersection

22
00:00:53,039 --> 00:00:56,239
as an example say there

23
00:00:56,239 --> 00:00:59,840
are two companies denoted as alice

24
00:00:59,840 --> 00:01:02,879
and bob respectively holding their own

25
00:01:02,879 --> 00:01:04,640
customers contacts

26
00:01:04,640 --> 00:01:08,159
denoted as sa and sb

27
00:01:08,159 --> 00:01:10,400
they would like to know who are their

28
00:01:10,400 --> 00:01:12,080
common customers

29
00:01:12,080 --> 00:01:15,759
so they can cooperate each other

30
00:01:15,759 --> 00:01:18,240
without looking at their own customers

31
00:01:18,240 --> 00:01:20,400
information

32
00:01:20,400 --> 00:01:23,439
so basically they require a protocol

33
00:01:23,439 --> 00:01:24,960
allowing each party to learn the

34
00:01:24,960 --> 00:01:27,360
intersection but nothing else

35
00:01:27,360 --> 00:01:29,920
this is called private set intersection

36
00:01:29,920 --> 00:01:32,720
or psi

37
00:01:33,360 --> 00:01:36,560
today we're more interested in a special

38
00:01:36,560 --> 00:01:37,439
setting of

39
00:01:37,439 --> 00:01:41,200
standard psi called threshold psi

40
00:01:41,200 --> 00:01:43,600
which means parties only learn the

41
00:01:43,600 --> 00:01:44,799
intersection

42
00:01:44,799 --> 00:01:47,840
when it is larger than some threshold

43
00:01:47,840 --> 00:01:51,520
otherwise they learn nothing

44
00:01:53,119 --> 00:01:56,000
here is a great example for threshold

45
00:01:56,000 --> 00:01:57,360
psi

46
00:01:57,360 --> 00:02:00,880
that is run sharing suppose

47
00:02:00,880 --> 00:02:04,000
there are two people would like to go to

48
00:02:04,000 --> 00:02:04,560
different

49
00:02:04,560 --> 00:02:07,119
destinations and they want to share a

50
00:02:07,119 --> 00:02:08,959
ride from uber

51
00:02:08,959 --> 00:02:11,038
so they need to know which path is

52
00:02:11,038 --> 00:02:12,400
coming for both

53
00:02:12,400 --> 00:02:15,440
but they don't want to leak their own

54
00:02:15,440 --> 00:02:18,879
unique secret route basically

55
00:02:18,879 --> 00:02:20,959
they require a following protocol to

56
00:02:20,959 --> 00:02:22,720
achieve the goal

57
00:02:22,720 --> 00:02:27,760
the two paths i dissected substantially

58
00:02:28,640 --> 00:02:31,280
they learned a short path and could

59
00:02:31,280 --> 00:02:32,239
agree

60
00:02:32,239 --> 00:02:36,640
on what sharing however if to pass

61
00:02:36,640 --> 00:02:39,680
a barely intersected they learn nothing

62
00:02:39,680 --> 00:02:40,720
instead

63
00:02:40,720 --> 00:02:44,319
and much denier sharing

64
00:02:46,239 --> 00:02:50,560
so here here are related works for um

65
00:02:50,560 --> 00:02:54,080
threshold psi gauche and simking in

66
00:02:54,080 --> 00:02:57,360
crypto 2019 give the first two-party

67
00:02:57,360 --> 00:02:59,040
threshold psi protocol

68
00:02:59,040 --> 00:03:02,000
which communication only depends on the

69
00:03:02,000 --> 00:03:03,040
threshold

70
00:03:03,040 --> 00:03:06,640
instead of the set size i will briefly

71
00:03:06,640 --> 00:03:10,159
explain their scheme later so generally

72
00:03:10,159 --> 00:03:12,159
in high level their protocol can be

73
00:03:12,159 --> 00:03:13,440
divided into

74
00:03:13,440 --> 00:03:16,720
two phases or two parts the first part

75
00:03:16,720 --> 00:03:19,840
is a kind of negative test step the

76
00:03:19,840 --> 00:03:22,000
second one is

77
00:03:22,000 --> 00:03:25,200
intersection commutation step

78
00:03:25,200 --> 00:03:27,920
the second part can be extended extended

79
00:03:27,920 --> 00:03:28,319
to

80
00:03:28,319 --> 00:03:31,599
multiply easily so we only focus on the

81
00:03:31,599 --> 00:03:33,360
first step

82
00:03:33,360 --> 00:03:37,280
in this talk that is

83
00:03:37,280 --> 00:03:41,519
a cardinality test for multiparty

84
00:03:44,080 --> 00:03:46,959
now i show our main results our main

85
00:03:46,959 --> 00:03:48,000
result

86
00:03:48,000 --> 00:03:51,120
is a multi-party cardinality test

87
00:03:51,120 --> 00:03:53,760
which allows um parties to check if the

88
00:03:53,760 --> 00:03:54,560
intersection

89
00:03:54,560 --> 00:03:56,319
is larger than minus t for some

90
00:03:56,319 --> 00:03:57,840
threshold key

91
00:03:57,840 --> 00:04:01,519
here a big n is a number of parties

92
00:04:01,519 --> 00:04:04,640
a small n is a set of size

93
00:04:04,640 --> 00:04:08,000
and t is substantially smaller than n

94
00:04:08,000 --> 00:04:12,000
and small n our approach only requires

95
00:04:12,000 --> 00:04:13,840
threshold additively homomorphic

96
00:04:13,840 --> 00:04:16,000
encryption instead of a

97
00:04:16,000 --> 00:04:18,478
fully homomorphic one thus we only

98
00:04:18,478 --> 00:04:19,519
relies

99
00:04:19,519 --> 00:04:24,720
on weaker assumptions such as ddh or dcr

100
00:04:24,960 --> 00:04:27,680
and we achieve a t-square communication

101
00:04:27,680 --> 00:04:28,560
complexity

102
00:04:28,560 --> 00:04:31,440
for each party

103
00:04:32,320 --> 00:04:35,919
actually there's a concurrent work bmr

104
00:04:35,919 --> 00:04:37,919
21st

105
00:04:37,919 --> 00:04:40,400
of hours also consider the same problem

106
00:04:40,400 --> 00:04:41,919
in multi-party setting

107
00:04:41,919 --> 00:04:44,320
but they focus on a slightly different

108
00:04:44,320 --> 00:04:45,280
variant

109
00:04:45,280 --> 00:04:48,560
which can which complements ours

110
00:04:48,560 --> 00:04:51,600
specifically the focus on the case which

111
00:04:51,600 --> 00:04:53,199
allows parties to learn

112
00:04:53,199 --> 00:04:55,919
to learn the intersection if and only if

113
00:04:55,919 --> 00:04:57,040
the difference

114
00:04:57,040 --> 00:04:59,120
between the union and the intersection

115
00:04:59,120 --> 00:05:00,720
is smaller than t

116
00:05:00,720 --> 00:05:04,080
whereas ours is to learn it if and only

117
00:05:04,080 --> 00:05:05,120
if the intersection

118
00:05:05,120 --> 00:05:09,120
is larger than a minus t

119
00:05:09,440 --> 00:05:12,400
now let's move to the technical part

120
00:05:12,400 --> 00:05:13,199
first

121
00:05:13,199 --> 00:05:17,199
recall the two-part particle from gs19

122
00:05:17,199 --> 00:05:20,000
suppose two parties alice and bob

123
00:05:20,000 --> 00:05:20,960
holding a set

124
00:05:20,960 --> 00:05:24,960
as a and sb of size n respectively

125
00:05:24,960 --> 00:05:27,840
without losing generality we assume both

126
00:05:27,840 --> 00:05:28,720
sets

127
00:05:28,720 --> 00:05:31,759
are the same size

128
00:05:31,759 --> 00:05:34,880
so the problem is they want to know that

129
00:05:34,880 --> 00:05:37,199
they want to know the intersection if

130
00:05:37,199 --> 00:05:38,080
and only if

131
00:05:38,080 --> 00:05:40,320
the set difference is smaller than some

132
00:05:40,320 --> 00:05:41,759
threshold t

133
00:05:41,759 --> 00:05:45,919
where t is much smaller than n

134
00:05:46,960 --> 00:05:49,840
the main observation of them is a set of

135
00:05:49,840 --> 00:05:51,680
reconciliation techniques

136
00:05:51,680 --> 00:05:54,400
introduced by minsky can be leveraged in

137
00:05:54,400 --> 00:05:55,840
this case

138
00:05:55,840 --> 00:05:59,199
that is each party encode encodes their

139
00:05:59,199 --> 00:06:00,000
own set

140
00:06:00,000 --> 00:06:02,800
as a polynomial like this so for each

141
00:06:02,800 --> 00:06:03,360
element

142
00:06:03,360 --> 00:06:07,199
a j from s your s is their own set

143
00:06:07,199 --> 00:06:10,319
the polynomial is the product of all the

144
00:06:10,319 --> 00:06:11,360
terms

145
00:06:11,360 --> 00:06:15,039
of x minus aj

146
00:06:17,039 --> 00:06:20,080
now two parties alice and bob have two

147
00:06:20,080 --> 00:06:21,199
polynomials p

148
00:06:21,199 --> 00:06:24,479
a and p b while encoding their sets

149
00:06:24,479 --> 00:06:28,000
if we compute p a or p b then the common

150
00:06:28,000 --> 00:06:28,639
factors

151
00:06:28,639 --> 00:06:30,960
of two polynomials which are

152
00:06:30,960 --> 00:06:33,039
corresponding to the intersection

153
00:06:33,039 --> 00:06:36,000
are canceled out finally it's only a

154
00:06:36,000 --> 00:06:37,520
rational function left

155
00:06:37,520 --> 00:06:40,720
with low degree the low degree rational

156
00:06:40,720 --> 00:06:41,680
function means

157
00:06:41,680 --> 00:06:45,120
its numerator and its denominator

158
00:06:45,120 --> 00:06:48,479
are flow of low degree polynomials

159
00:06:48,479 --> 00:06:51,759
here it means p a minus b

160
00:06:51,759 --> 00:06:55,039
and pb minus a are two t degree

161
00:06:55,039 --> 00:06:56,000
polynomials

162
00:06:56,000 --> 00:07:00,160
where t is a threshold and therefore

163
00:07:00,160 --> 00:07:02,720
both parties can just can firstly

164
00:07:02,720 --> 00:07:03,280
compute

165
00:07:03,280 --> 00:07:05,919
all of t evaluation points of the

166
00:07:05,919 --> 00:07:07,120
rational function

167
00:07:07,120 --> 00:07:10,160
a p a or p b as in

168
00:07:10,160 --> 00:07:12,720
one party say a bob can recover the

169
00:07:12,720 --> 00:07:13,840
denominator

170
00:07:13,840 --> 00:07:16,960
via interpolation which which will

171
00:07:16,960 --> 00:07:17,759
review

172
00:07:17,759 --> 00:07:20,639
the intersection when compared to his

173
00:07:20,639 --> 00:07:23,199
own set

174
00:07:24,240 --> 00:07:27,440
of course bob should not learn

175
00:07:27,440 --> 00:07:30,880
the numerator p a minus b

176
00:07:30,880 --> 00:07:33,759
otherwise the security is compromised as

177
00:07:33,759 --> 00:07:34,400
bob

178
00:07:34,400 --> 00:07:36,720
we also learned the whole set of errors

179
00:07:36,720 --> 00:07:38,720
which is forbidden

180
00:07:38,720 --> 00:07:42,639
in gs19 they use oblivious linear

181
00:07:42,639 --> 00:07:43,599
evaluation

182
00:07:43,599 --> 00:07:47,199
or ola e to mask the numerator

183
00:07:47,199 --> 00:07:49,599
with a random polynomial to have the

184
00:07:49,599 --> 00:07:52,159
information

185
00:07:53,280 --> 00:07:56,400
so far we only discussed the second part

186
00:07:56,400 --> 00:08:00,720
which is how to compute an intersection

187
00:08:00,720 --> 00:08:04,000
it can be it can be it can only be

188
00:08:04,000 --> 00:08:07,120
proved um when the intersection size is

189
00:08:07,120 --> 00:08:08,960
larger than minus t

190
00:08:08,960 --> 00:08:12,400
otherwise the proven security will fail

191
00:08:12,400 --> 00:08:15,919
that's why they still require um

192
00:08:15,919 --> 00:08:18,800
a cardinality test to make sure when

193
00:08:18,800 --> 00:08:19,919
they compute

194
00:08:19,919 --> 00:08:22,720
when they compute the intersection size

195
00:08:22,720 --> 00:08:24,240
or its cardinality

196
00:08:24,240 --> 00:08:27,840
is large enough

197
00:08:28,080 --> 00:08:31,120
still let's first consider the two-party

198
00:08:31,120 --> 00:08:33,760
cardinality test in gs19

199
00:08:33,760 --> 00:08:37,839
the encode set elements in two exponents

200
00:08:37,839 --> 00:08:42,000
say for each element aj or ai

201
00:08:42,000 --> 00:08:45,519
sorry the encoder set as a polynomial qx

202
00:08:45,519 --> 00:08:46,640
equals to

203
00:08:46,640 --> 00:08:50,319
sum of all of x2 ai

204
00:08:50,399 --> 00:08:52,959
then the security check is the

205
00:08:52,959 --> 00:08:55,519
difference between polynomials

206
00:08:55,519 --> 00:08:59,040
qa and qa minus qb is a

207
00:08:59,040 --> 00:09:01,440
sparse polynomial sparse polynomial

208
00:09:01,440 --> 00:09:03,120
means the polynomial

209
00:09:03,120 --> 00:09:05,519
has much few terms compared to its

210
00:09:05,519 --> 00:09:06,240
degree

211
00:09:06,240 --> 00:09:09,440
here n of q x

212
00:09:09,440 --> 00:09:11,680
might be a polynomial with exponentially

213
00:09:11,680 --> 00:09:13,040
large degree

214
00:09:13,040 --> 00:09:16,560
whereas it only has t terms or t minor

215
00:09:16,560 --> 00:09:20,800
t monomials of course here we need some

216
00:09:20,800 --> 00:09:24,240
secure computation to do a private check

217
00:09:24,240 --> 00:09:27,360
finally if the resulting polynomial is

218
00:09:27,360 --> 00:09:28,080
false

219
00:09:28,080 --> 00:09:30,480
we conclude that the set difference is

220
00:09:30,480 --> 00:09:31,120
small

221
00:09:31,120 --> 00:09:33,760
which pass the cardinality test

222
00:09:33,760 --> 00:09:34,640
otherwise

223
00:09:34,640 --> 00:09:36,800
it doesn't pass the test and both

224
00:09:36,800 --> 00:09:38,080
parties will just

225
00:09:38,080 --> 00:09:41,200
abort the protocol

226
00:09:42,240 --> 00:09:45,600
however if we were to directly extend

227
00:09:45,600 --> 00:09:45,920
the

228
00:09:45,920 --> 00:09:49,040
approach to multi-party setting we would

229
00:09:49,040 --> 00:09:49,360
let

230
00:09:49,360 --> 00:09:53,040
n parties compute a minus 1 times q 1 x

231
00:09:53,040 --> 00:09:56,240
minus q 2 x to

232
00:09:56,240 --> 00:09:59,440
q n x this is a sparse polynomial

233
00:09:59,440 --> 00:10:02,560
only if n times t is small because

234
00:10:02,560 --> 00:10:05,120
the resulting polynomial has n times t

235
00:10:05,120 --> 00:10:06,399
terms

236
00:10:06,399 --> 00:10:09,519
if the intersection cardinality is t

237
00:10:09,519 --> 00:10:12,240
thus the communication codes for each

238
00:10:12,240 --> 00:10:12,959
party

239
00:10:12,959 --> 00:10:16,079
will depend on the number of parties n

240
00:10:16,079 --> 00:10:19,760
which is highly undesired we need to

241
00:10:19,760 --> 00:10:23,600
seek for other solutions

242
00:10:25,279 --> 00:10:28,160
for simplicity let's first consider the

243
00:10:28,160 --> 00:10:29,440
insecure way

244
00:10:29,440 --> 00:10:33,040
of our approach to do clinicality test

245
00:10:33,040 --> 00:10:36,320
we use the original encoding set

246
00:10:36,320 --> 00:10:40,959
c for a inside set we encoded that we

247
00:10:40,959 --> 00:10:44,720
encode it as a integrated polynomial

248
00:10:44,720 --> 00:10:48,160
then suppose there are n sets from s1 s2

249
00:10:48,160 --> 00:10:49,360
to sn

250
00:10:49,360 --> 00:10:52,480
we encode them as ps1 to

251
00:10:52,480 --> 00:10:55,680
psn and

252
00:10:55,680 --> 00:10:59,279
if we compute the the rational function

253
00:10:59,279 --> 00:11:02,720
which is 1 plus ps2 plus 2

254
00:11:02,720 --> 00:11:06,720
psn over ps1 after reconciliation

255
00:11:06,720 --> 00:11:09,200
after canceling out common factors the

256
00:11:09,200 --> 00:11:11,040
resulting rational function

257
00:11:11,040 --> 00:11:14,160
has degree t at most if the intersection

258
00:11:14,160 --> 00:11:15,440
cardinality

259
00:11:15,440 --> 00:11:19,440
is larger than n minus t this actually

260
00:11:19,440 --> 00:11:22,880
helps us to get rid of the number of

261
00:11:22,880 --> 00:11:28,399
parties n in the computation

262
00:11:28,399 --> 00:11:30,959
therefore the clinicality test boils

263
00:11:30,959 --> 00:11:33,200
down to the following problem

264
00:11:33,200 --> 00:11:36,240
given a rational function f of x

265
00:11:36,240 --> 00:11:40,160
equals to p one of x over p two of x

266
00:11:40,160 --> 00:11:42,800
can we decide if degree of p1 or degree

267
00:11:42,800 --> 00:11:45,040
of p2 is smaller than t

268
00:11:45,040 --> 00:11:50,079
with only t evaluation points of f of x

269
00:11:50,079 --> 00:11:52,160
we give an affirmative answer in this

270
00:11:52,160 --> 00:11:54,399
work

271
00:11:55,360 --> 00:11:58,480
our crucial observation is that

272
00:11:58,480 --> 00:12:01,519
if we interpret f of x

273
00:12:01,519 --> 00:12:05,680
equals to p one of x over p two of x

274
00:12:05,680 --> 00:12:08,639
where um f of x is some unknown reduced

275
00:12:08,639 --> 00:12:10,000
rational function

276
00:12:10,000 --> 00:12:13,440
which means p1 of x and p2 of x are

277
00:12:13,440 --> 00:12:14,560
co-prime

278
00:12:14,560 --> 00:12:18,000
they don't share any common vectors

279
00:12:18,000 --> 00:12:21,200
so if we interpret this f of x

280
00:12:21,200 --> 00:12:24,399
on two different support sets say v and

281
00:12:24,399 --> 00:12:25,440
w

282
00:12:25,440 --> 00:12:28,720
so each one of size all of t we will get

283
00:12:28,720 --> 00:12:31,760
two different interpolated functions

284
00:12:31,760 --> 00:12:36,240
fv and fw respectively

285
00:12:37,279 --> 00:12:40,800
then we would have if degree of p1

286
00:12:40,800 --> 00:12:42,720
equals to degree p2

287
00:12:42,720 --> 00:12:46,079
smaller than some threshold t our

288
00:12:46,079 --> 00:12:50,240
interpolated functions f3 equals to fw

289
00:12:50,240 --> 00:12:54,399
otherwise if the degree is larger than t

290
00:12:54,399 --> 00:12:56,720
then these two interpret functions are

291
00:12:56,720 --> 00:12:57,839
different

292
00:12:57,839 --> 00:13:01,600
say fv fv will not equals to

293
00:13:01,600 --> 00:13:05,519
fw except with a negligible probability

294
00:13:05,519 --> 00:13:10,160
over the uniform choice of v i and w i

295
00:13:12,320 --> 00:13:15,760
moreover interpolating a rational

296
00:13:15,760 --> 00:13:16,639
function

297
00:13:16,639 --> 00:13:18,720
can be reduced to solving a linear

298
00:13:18,720 --> 00:13:21,120
system of equivalence

299
00:13:21,120 --> 00:13:24,480
by extending secure linear algebra tools

300
00:13:24,480 --> 00:13:28,480
developed by kmkmwf07

301
00:13:28,480 --> 00:13:30,959
to multipartic case we can perform the

302
00:13:30,959 --> 00:13:33,360
degree test revealing nothing else

303
00:13:33,360 --> 00:13:37,519
than output note that we we also need to

304
00:13:37,519 --> 00:13:39,360
randomize numerators

305
00:13:39,360 --> 00:13:41,680
of the rational function which is not

306
00:13:41,680 --> 00:13:42,880
for security

307
00:13:42,880 --> 00:13:48,399
but for the correctness

308
00:13:48,399 --> 00:13:51,600
we prove our security uh

309
00:13:51,600 --> 00:13:54,880
we prove the security of our protocol in

310
00:13:54,880 --> 00:13:58,000
externalized uc from work the standard

311
00:13:58,000 --> 00:13:59,360
uc framework

312
00:13:59,360 --> 00:14:02,720
has a subtle issue

313
00:14:02,720 --> 00:14:05,440
that um the input because the inputs of

314
00:14:05,440 --> 00:14:06,320
our

315
00:14:06,320 --> 00:14:09,040
sub-particles are encrypted under a

316
00:14:09,040 --> 00:14:10,320
private key

317
00:14:10,320 --> 00:14:12,720
which uh which needs to come from

318
00:14:12,720 --> 00:14:13,519
somewhere in

319
00:14:13,519 --> 00:14:16,399
uc setting so it's it's some kind of a

320
00:14:16,399 --> 00:14:17,680
definition

321
00:14:17,680 --> 00:14:21,279
the definitional problem um

322
00:14:21,279 --> 00:14:23,600
so this is also mentioned in the in the

323
00:14:23,600 --> 00:14:24,839
concurrent work

324
00:14:24,839 --> 00:14:28,639
bmr21st and they get around this by

325
00:14:28,639 --> 00:14:31,199
by only proving the final protocol

326
00:14:31,199 --> 00:14:34,000
instead of the sub-particles

327
00:14:34,000 --> 00:14:36,800
which we choose to choose to improve the

328
00:14:36,800 --> 00:14:37,519
security

329
00:14:37,519 --> 00:14:40,240
in a generalized uc framework

330
00:14:40,240 --> 00:14:41,120
externalized

331
00:14:41,120 --> 00:14:44,639
uc framework which has a global setup

332
00:14:44,639 --> 00:14:47,920
of publications infrastructure

333
00:14:47,920 --> 00:14:51,360
so we can get around this

334
00:14:51,360 --> 00:14:54,000
sort of issue

335
00:14:54,720 --> 00:14:57,120
to make a short summary we develop a

336
00:14:57,120 --> 00:14:59,120
multi-party cardinality test for

337
00:14:59,120 --> 00:15:00,959
threshold psi

338
00:15:00,959 --> 00:15:03,360
with communication only depends on the

339
00:15:03,360 --> 00:15:05,360
threshold for each party

340
00:15:05,360 --> 00:15:07,519
without relying on the number of parties

341
00:15:07,519 --> 00:15:08,880
in

342
00:15:08,880 --> 00:15:12,959
and our our construction is built up

343
00:15:12,959 --> 00:15:15,680
it only relies on additional homomorphic

344
00:15:15,680 --> 00:15:17,279
encryption

345
00:15:17,279 --> 00:15:19,279
which is much weaker than uh

346
00:15:19,279 --> 00:15:20,959
photomorphic ones

347
00:15:20,959 --> 00:15:24,839
so we don't require uh lattice

348
00:15:24,839 --> 00:15:27,839
assumptions

349
00:15:29,920 --> 00:15:35,759
that's all thanks for your attention

