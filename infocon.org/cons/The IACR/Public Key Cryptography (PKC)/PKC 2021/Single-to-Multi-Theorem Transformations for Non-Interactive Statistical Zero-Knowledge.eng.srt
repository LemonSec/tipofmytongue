1
00:00:01,520 --> 00:00:04,160
hello and welcome to the presentation of

2
00:00:04,160 --> 00:00:05,200
the paper

3
00:00:05,200 --> 00:00:07,680
single to multi-theorem transformations

4
00:00:07,680 --> 00:00:09,519
for non-interactive statistical zeal

5
00:00:09,519 --> 00:00:10,880
knowledge

6
00:00:10,880 --> 00:00:13,120
my name is felix robert and this is

7
00:00:13,120 --> 00:00:15,519
joint work with mark fishlin

8
00:00:15,519 --> 00:00:17,440
i will be presenting this paper in a

9
00:00:17,440 --> 00:00:19,600
live session on may 13th

10
00:00:19,600 --> 00:00:23,039
as part of pkc 2021 so if you have any

11
00:00:23,039 --> 00:00:24,000
questions

12
00:00:24,000 --> 00:00:27,359
feel free to ask them there

13
00:00:27,359 --> 00:00:29,679
first let me shortly remind you about

14
00:00:29,679 --> 00:00:32,479
non-interactive zero-knowledge arguments

15
00:00:32,479 --> 00:00:34,800
a non-interactive argument consists of a

16
00:00:34,800 --> 00:00:35,600
verifier

17
00:00:35,600 --> 00:00:38,000
and approver where the prover has to

18
00:00:38,000 --> 00:00:39,680
convince the verifier

19
00:00:39,680 --> 00:00:42,239
whether a statement x is in a specific

20
00:00:42,239 --> 00:00:42,840
language

21
00:00:42,840 --> 00:00:47,039
l as this argument is non-interactive

22
00:00:47,039 --> 00:00:49,039
the prover may only send one message to

23
00:00:49,039 --> 00:00:50,960
the verifier

24
00:00:50,960 --> 00:00:53,039
additionally we need to give both

25
00:00:53,039 --> 00:00:55,520
parties access to a random string

26
00:00:55,520 --> 00:00:58,079
the so-called common random string which

27
00:00:58,079 --> 00:01:01,359
cannot be influenced by either party

28
00:01:01,359 --> 00:01:04,159
if such a common random string exists we

29
00:01:04,159 --> 00:01:06,000
say that we are in the common random

30
00:01:06,000 --> 00:01:08,640
string model

31
00:01:09,200 --> 00:01:11,520
now we want this protocol to fulfill

32
00:01:11,520 --> 00:01:12,960
three properties

33
00:01:12,960 --> 00:01:15,600
completeness soundness and zero

34
00:01:15,600 --> 00:01:16,720
knowledge

35
00:01:16,720 --> 00:01:18,960
completeness requires that for statement

36
00:01:18,960 --> 00:01:20,799
x in the language l

37
00:01:20,799 --> 00:01:23,200
the prover generates a proof from x and

38
00:01:23,200 --> 00:01:24,479
the witness omega

39
00:01:24,479 --> 00:01:27,119
which is then accepted by the verifier

40
00:01:27,119 --> 00:01:29,200
with high probability

41
00:01:29,200 --> 00:01:31,680
soundness on the other hand requires

42
00:01:31,680 --> 00:01:33,840
that no malicious prover may convince

43
00:01:33,840 --> 00:01:35,119
the verifier

44
00:01:35,119 --> 00:01:37,280
to accept any statement x not in the

45
00:01:37,280 --> 00:01:38,400
language l

46
00:01:38,400 --> 00:01:41,439
with considerable probability

47
00:01:41,439 --> 00:01:43,840
finally zero knowledge means that the

48
00:01:43,840 --> 00:01:45,280
verifier should not be

49
00:01:45,280 --> 00:01:48,159
able to learn anything besides whether x

50
00:01:48,159 --> 00:01:49,200
is in the language l

51
00:01:49,200 --> 00:01:51,680
or not this is modeled by the existence

52
00:01:51,680 --> 00:01:53,119
of simulator

53
00:01:53,119 --> 00:01:55,280
without access to the witness omega

54
00:01:55,280 --> 00:01:56,719
which however

55
00:01:56,719 --> 00:01:58,479
should create a protocol message

56
00:01:58,479 --> 00:02:00,320
indistinguishable from the one by the

57
00:02:00,320 --> 00:02:02,719
prover

58
00:02:03,040 --> 00:02:05,520
soundness can be both against unbounded

59
00:02:05,520 --> 00:02:07,759
or an unbounded malicious prover

60
00:02:07,759 --> 00:02:09,280
and for the knowledge the

61
00:02:09,280 --> 00:02:10,800
indistinguishability between the

62
00:02:10,800 --> 00:02:11,520
simulator

63
00:02:11,520 --> 00:02:14,000
and the reapprover can be computational

64
00:02:14,000 --> 00:02:15,040
statistical

65
00:02:15,040 --> 00:02:18,720
or even perfect however if we want to be

66
00:02:18,720 --> 00:02:21,120
able to run arguments for all languages

67
00:02:21,120 --> 00:02:24,480
in np we can only either have

68
00:02:24,480 --> 00:02:27,280
unbound approvers or statistical or

69
00:02:27,280 --> 00:02:27,840
perfect

70
00:02:27,840 --> 00:02:30,720
zero knowledge in the first case we

71
00:02:30,720 --> 00:02:33,599
speak of non-interactive theology proofs

72
00:02:33,599 --> 00:02:36,000
in the second case of non-interactive

73
00:02:36,000 --> 00:02:37,680
statistical or perfect

74
00:02:37,680 --> 00:02:40,959
zero-nudge arguments our focus is on the

75
00:02:40,959 --> 00:02:43,599
second one

76
00:02:44,480 --> 00:02:46,640
as mentioned previously non-interactive

77
00:02:46,640 --> 00:02:48,400
zero-knowledge arguments require

78
00:02:48,400 --> 00:02:50,640
a common random string which must not be

79
00:02:50,640 --> 00:02:53,200
influenced by any party

80
00:02:53,200 --> 00:02:55,440
unfortunately many constructions of

81
00:02:55,440 --> 00:02:57,519
non-interactive zero-knowledge arguments

82
00:02:57,519 --> 00:02:59,840
cannot reuse this common random string

83
00:02:59,840 --> 00:03:02,800
or only for a fixed number of arguments

84
00:03:02,800 --> 00:03:04,879
we call these constructions single

85
00:03:04,879 --> 00:03:06,560
theorem

86
00:03:06,560 --> 00:03:08,480
in contrast a multi-theorem

87
00:03:08,480 --> 00:03:10,319
non-interactive zero knowledge argument

88
00:03:10,319 --> 00:03:12,560
can be used for any polynomial number of

89
00:03:12,560 --> 00:03:15,040
arguments

90
00:03:15,040 --> 00:03:17,519
for non-interactive theology proofs that

91
00:03:17,519 --> 00:03:19,920
means if we only require computational

92
00:03:19,920 --> 00:03:21,120
zero knowledge

93
00:03:21,120 --> 00:03:23,519
feiger lapido and jamir show the

94
00:03:23,519 --> 00:03:25,519
transformation which turns any

95
00:03:25,519 --> 00:03:27,599
single theorem non-interactive zero

96
00:03:27,599 --> 00:03:28,799
knowledge proof

97
00:03:28,799 --> 00:03:31,599
into a multitheorum variant assuming

98
00:03:31,599 --> 00:03:33,840
only the existence of a solid random

99
00:03:33,840 --> 00:03:36,239
generator

100
00:03:36,239 --> 00:03:38,319
there exists a folklore transformation

101
00:03:38,319 --> 00:03:39,360
based on this

102
00:03:39,360 --> 00:03:42,239
fls transformation for non-interactive

103
00:03:42,239 --> 00:03:44,799
statistical zero-knowledge arguments

104
00:03:44,799 --> 00:03:47,360
which however does not work for common

105
00:03:47,360 --> 00:03:48,640
random strings

106
00:03:48,640 --> 00:03:50,959
and requires a string which is the image

107
00:03:50,959 --> 00:03:54,400
of a solid random generator instead

108
00:03:54,400 --> 00:03:56,959
those structured strings are also called

109
00:03:56,959 --> 00:03:58,879
common reference strings

110
00:03:58,879 --> 00:04:02,000
however arguably it is a lot harder to

111
00:04:02,000 --> 00:04:02,959
generate such

112
00:04:02,959 --> 00:04:05,519
structured strings which still can't be

113
00:04:05,519 --> 00:04:08,080
influenced by any party

114
00:04:08,080 --> 00:04:11,200
therefore a natural question is whether

115
00:04:11,200 --> 00:04:13,280
such a transformation can be given in

116
00:04:13,280 --> 00:04:14,959
the common random string model

117
00:04:14,959 --> 00:04:18,320
and under which assumptions

118
00:04:19,358 --> 00:04:21,279
our contributions in this paper are

119
00:04:21,279 --> 00:04:22,639
two-fold

120
00:04:22,639 --> 00:04:25,199
first we analyze in a more fine-grained

121
00:04:25,199 --> 00:04:25,840
way

122
00:04:25,840 --> 00:04:27,520
different soundness properties for

123
00:04:27,520 --> 00:04:28,960
non-interactive statistical

124
00:04:28,960 --> 00:04:31,040
zero-knowledge arguments

125
00:04:31,040 --> 00:04:33,759
second we give two transformations from

126
00:04:33,759 --> 00:04:35,840
single theorem to multi-theorem zero

127
00:04:35,840 --> 00:04:36,720
knowledge

128
00:04:36,720 --> 00:04:39,440
using common random strings one assuming

129
00:04:39,440 --> 00:04:41,840
the existence of one-way permutations

130
00:04:41,840 --> 00:04:42,720
and the other

131
00:04:42,720 --> 00:04:45,199
assuming the hardness of the learning

132
00:04:45,199 --> 00:04:48,160
with errors problem

133
00:04:48,560 --> 00:04:50,800
i will start with soundness as mentioned

134
00:04:50,800 --> 00:04:51,840
in the introduction

135
00:04:51,840 --> 00:04:54,080
soundness refers to the probability that

136
00:04:54,080 --> 00:04:55,280
a malicious prover

137
00:04:55,280 --> 00:04:57,680
is successful in convincing the verifier

138
00:04:57,680 --> 00:04:59,040
to accept the statement x

139
00:04:59,040 --> 00:05:02,160
not in the language l commonly

140
00:05:02,160 --> 00:05:04,080
there are two types of soundness

141
00:05:04,080 --> 00:05:05,759
depending on when the malicious prover

142
00:05:05,759 --> 00:05:06,400
decides

143
00:05:06,400 --> 00:05:09,600
which statement exit wants to use for

144
00:05:09,600 --> 00:05:11,039
non-adapter soundness

145
00:05:11,039 --> 00:05:12,560
the prover has to decide on the

146
00:05:12,560 --> 00:05:14,479
statement x before seeing the common

147
00:05:14,479 --> 00:05:15,600
random string

148
00:05:15,600 --> 00:05:18,080
for adapter soundness however the prover

149
00:05:18,080 --> 00:05:20,160
decides on x after seeing the common

150
00:05:20,160 --> 00:05:22,160
random string

151
00:05:22,160 --> 00:05:24,240
however there is another dimension of

152
00:05:24,240 --> 00:05:27,039
soundness which often goes unnoticed

153
00:05:27,039 --> 00:05:29,199
namely in which way we measure the

154
00:05:29,199 --> 00:05:31,680
success of the malicious prover

155
00:05:31,680 --> 00:05:33,600
clearly the approver should not be able

156
00:05:33,600 --> 00:05:35,199
to make the verifier accept the

157
00:05:35,199 --> 00:05:38,080
statement x not in the language l

158
00:05:38,080 --> 00:05:40,639
however there are two ways to capture

159
00:05:40,639 --> 00:05:43,280
the non-membership requirement

160
00:05:43,280 --> 00:05:45,280
one possibility is to disallow the

161
00:05:45,280 --> 00:05:47,120
malicious prover from outputting a

162
00:05:47,120 --> 00:05:49,600
statement x in the language

163
00:05:49,600 --> 00:05:51,600
the other possibility is to allow the

164
00:05:51,600 --> 00:05:53,600
prover to choose a statement x in the

165
00:05:53,600 --> 00:05:54,320
language

166
00:05:54,320 --> 00:05:56,560
but it will lose the game in this case

167
00:05:56,560 --> 00:05:58,319
independent of whether

168
00:05:58,319 --> 00:06:01,840
the verifier accepts or not similar to

169
00:06:01,840 --> 00:06:02,720
definitions for

170
00:06:02,720 --> 00:06:06,319
ncca by villarreal we call the first

171
00:06:06,319 --> 00:06:06,720
case

172
00:06:06,720 --> 00:06:09,520
exclusive soundness as we exclude all

173
00:06:09,520 --> 00:06:12,319
malicious proverbs that output x and l

174
00:06:12,319 --> 00:06:14,560
and we call the second case penalizing

175
00:06:14,560 --> 00:06:15,520
soundness

176
00:06:15,520 --> 00:06:17,600
let's penalize the malicious prover for

177
00:06:17,600 --> 00:06:20,080
outputting x and l

178
00:06:20,080 --> 00:06:22,400
note that in a concurrent work arte and

179
00:06:22,400 --> 00:06:24,479
bellar made a similar distinction

180
00:06:24,479 --> 00:06:26,960
and incidentally came up with the same

181
00:06:26,960 --> 00:06:27,520
name for

182
00:06:27,520 --> 00:06:30,880
both these variants

183
00:06:31,120 --> 00:06:32,880
the difference between exclusive and

184
00:06:32,880 --> 00:06:34,479
penalizing soundness

185
00:06:34,479 --> 00:06:37,120
may appear to be insignificant at first

186
00:06:37,120 --> 00:06:39,360
indeed for non-interactive proofs

187
00:06:39,360 --> 00:06:41,440
that is when soundness holds against

188
00:06:41,440 --> 00:06:43,440
unbounded adversaries

189
00:06:43,440 --> 00:06:45,039
all different soundness properties

190
00:06:45,039 --> 00:06:47,759
presented here are equivalent

191
00:06:47,759 --> 00:06:51,039
however for non-interactive arguments

192
00:06:51,039 --> 00:06:53,680
this is not the case as far as we know

193
00:06:53,680 --> 00:06:55,680
as a malicious but bounded prover

194
00:06:55,680 --> 00:06:57,440
might itself not know whether its

195
00:06:57,440 --> 00:07:00,840
statement access in the language l or

196
00:07:00,840 --> 00:07:02,319
not

197
00:07:02,319 --> 00:07:05,199
in total we end up with five definitions

198
00:07:05,199 --> 00:07:06,560
all combinations of

199
00:07:06,560 --> 00:07:08,720
adaptive and non-adaptive as well as

200
00:07:08,720 --> 00:07:10,720
exclusive and penalizing

201
00:07:10,720 --> 00:07:13,039
plus a non-uniform variant that only

202
00:07:13,039 --> 00:07:16,000
exists for non-adaptive soundness

203
00:07:16,000 --> 00:07:18,240
adaptive soundness implies non-adaptive

204
00:07:18,240 --> 00:07:20,240
soundness and penalizing soundness

205
00:07:20,240 --> 00:07:22,720
always implies exclusive soundness

206
00:07:22,720 --> 00:07:25,440
therefore adaptive penalizing soundness

207
00:07:25,440 --> 00:07:27,759
is the strongest definition

208
00:07:27,759 --> 00:07:31,280
however paths showed in 2016

209
00:07:31,280 --> 00:07:33,520
that adaptive penalizing soundness

210
00:07:33,520 --> 00:07:35,680
cannot be reached in black box wave from

211
00:07:35,680 --> 00:07:38,479
hard primitives

212
00:07:38,639 --> 00:07:40,720
further we show that for non-uniform

213
00:07:40,720 --> 00:07:42,240
provers

214
00:07:42,240 --> 00:07:46,000
all non-adaptive notions are equivalent

215
00:07:46,000 --> 00:07:48,560
this leaves adaptive exclusive soundness

216
00:07:48,560 --> 00:07:50,240
as probably the strongest soundness

217
00:07:50,240 --> 00:07:50,960
property

218
00:07:50,960 --> 00:07:54,080
achievable in the blackbox way

219
00:07:54,080 --> 00:07:56,639
as adaptive exclusive implies a slightly

220
00:07:56,639 --> 00:07:57,680
weaker notion

221
00:07:57,680 --> 00:08:00,400
of adaptive culpable soundness which was

222
00:08:00,400 --> 00:08:01,360
introduced by

223
00:08:01,360 --> 00:08:05,280
kod ostrovsky and zahai in 2012

224
00:08:05,280 --> 00:08:07,520
and adaptive culpable soundness was

225
00:08:07,520 --> 00:08:10,560
shown to suffice for many applications

226
00:08:10,560 --> 00:08:12,240
we think that reaching adaptive

227
00:08:12,240 --> 00:08:16,479
exclusive soundness is indeed meaningful

228
00:08:16,800 --> 00:08:19,280
as our second contribution we give two

229
00:08:19,280 --> 00:08:20,319
constructions

230
00:08:20,319 --> 00:08:21,759
of single-to-multi-theorem

231
00:08:21,759 --> 00:08:23,440
transformations for non-interactive

232
00:08:23,440 --> 00:08:25,440
statistical zeology arguments in the

233
00:08:25,440 --> 00:08:27,280
common random string model

234
00:08:27,280 --> 00:08:30,400
that indeed retain adaptive exclusive

235
00:08:30,400 --> 00:08:32,479
soundness

236
00:08:32,479 --> 00:08:34,719
our first transformation requires the

237
00:08:34,719 --> 00:08:37,519
existence of one-way permutations

238
00:08:37,519 --> 00:08:39,120
further we can extend this

239
00:08:39,120 --> 00:08:41,279
transformation to even retain perfect

240
00:08:41,279 --> 00:08:42,799
zero knowledge

241
00:08:42,799 --> 00:08:45,600
however we require the simulator to run

242
00:08:45,600 --> 00:08:45,839
an

243
00:08:45,839 --> 00:08:50,000
expected polynomial time for this

244
00:08:50,720 --> 00:08:52,880
our second transformation is based on

245
00:08:52,880 --> 00:08:55,360
the learning of errors assumption

246
00:08:55,360 --> 00:08:57,440
this construction fits in nicely with

247
00:08:57,440 --> 00:08:59,040
the recent construction of

248
00:08:59,040 --> 00:09:00,880
single theorem statistical zero

249
00:09:00,880 --> 00:09:02,399
knowledge arguments

250
00:09:02,399 --> 00:09:04,720
based on plain learning with errors by

251
00:09:04,720 --> 00:09:08,240
pycard and here yarn

252
00:09:08,240 --> 00:09:11,120
i'm showing here a comparison of our

253
00:09:11,120 --> 00:09:12,480
work to a selection

254
00:09:12,480 --> 00:09:14,720
of other multitherm constructions or

255
00:09:14,720 --> 00:09:16,640
transformations

256
00:09:16,640 --> 00:09:18,560
our transformations are the first to

257
00:09:18,560 --> 00:09:20,560
provide a form of adaptive soundness

258
00:09:20,560 --> 00:09:22,000
from standard cryptographic

259
00:09:22,000 --> 00:09:24,880
assumptions further together with the

260
00:09:24,880 --> 00:09:27,839
recent construction by libera at all

261
00:09:27,839 --> 00:09:30,000
our transformations are one of the few

262
00:09:30,000 --> 00:09:32,399
that work with common random strings

263
00:09:32,399 --> 00:09:33,839
as opposed to structured common

264
00:09:33,839 --> 00:09:36,240
reference strings and still achieve

265
00:09:36,240 --> 00:09:39,760
statistical zero knowledge

266
00:09:40,399 --> 00:09:41,839
the general idea for both

267
00:09:41,839 --> 00:09:44,080
transformations is a dual version of the

268
00:09:44,080 --> 00:09:45,399
transformation based of

269
00:09:45,399 --> 00:09:47,440
non-pseudo-random generators

270
00:09:47,440 --> 00:09:50,399
by feigl labido and chamier in their

271
00:09:50,399 --> 00:09:51,279
construction

272
00:09:51,279 --> 00:09:53,440
they extend the common random string by

273
00:09:53,440 --> 00:09:55,519
an auxiliary string the length of the

274
00:09:55,519 --> 00:09:58,880
output of a pseudorandom generator

275
00:09:58,880 --> 00:10:01,200
now instead of just proving that the

276
00:10:01,200 --> 00:10:03,519
statement x is in language l

277
00:10:03,519 --> 00:10:05,600
the prover is supposed to prove that

278
00:10:05,600 --> 00:10:07,760
either x is an l

279
00:10:07,760 --> 00:10:09,760
or the auxiliary part of the common

280
00:10:09,760 --> 00:10:10,800
random string

281
00:10:10,800 --> 00:10:12,880
is an output of the pseudorandom

282
00:10:12,880 --> 00:10:14,640
generator

283
00:10:14,640 --> 00:10:16,720
for an honestly generated common random

284
00:10:16,720 --> 00:10:19,519
string the probability of the auxiliary

285
00:10:19,519 --> 00:10:21,519
part being the output of subsidiary

286
00:10:21,519 --> 00:10:22,880
random generator

287
00:10:22,880 --> 00:10:27,279
is small therefore soundness still holds

288
00:10:27,279 --> 00:10:30,560
however the simulation can now generate

289
00:10:30,560 --> 00:10:32,160
a common random string

290
00:10:32,160 --> 00:10:34,000
that is indeed in the domain of the

291
00:10:34,000 --> 00:10:36,000
pseudorandom generator

292
00:10:36,000 --> 00:10:38,720
and uses this to convince the verifier

293
00:10:38,720 --> 00:10:40,320
without the need to convince the

294
00:10:40,320 --> 00:10:41,200
verifier that

295
00:10:41,200 --> 00:10:45,200
x is now feiger lapido and charmia

296
00:10:45,200 --> 00:10:47,240
showed that they can use witness

297
00:10:47,240 --> 00:10:48,720
indistinguishability

298
00:10:48,720 --> 00:10:50,640
to generate a transcript

299
00:10:50,640 --> 00:10:53,440
indistinguishable from a true execution

300
00:10:53,440 --> 00:10:55,760
this together with the hardness of the

301
00:10:55,760 --> 00:10:57,360
pseudorandom generator

302
00:10:57,360 --> 00:10:59,440
ensures that the distinction for your

303
00:10:59,440 --> 00:11:01,279
knowledge cannot know whether a

304
00:11:01,279 --> 00:11:03,519
transcript is from the simulator

305
00:11:03,519 --> 00:11:07,120
or true execution further

306
00:11:07,120 --> 00:11:09,200
they show that this holds even if the

307
00:11:09,200 --> 00:11:10,720
common random string is

308
00:11:10,720 --> 00:11:13,040
reused for any polynomial number of

309
00:11:13,040 --> 00:11:14,480
arguments

310
00:11:14,480 --> 00:11:16,959
intuitively this is the case because

311
00:11:16,959 --> 00:11:18,959
they have not revealed anything

312
00:11:18,959 --> 00:11:21,279
about the artificial common random

313
00:11:21,279 --> 00:11:22,000
string

314
00:11:22,000 --> 00:11:26,800
generated by the simulator

315
00:11:26,800 --> 00:11:28,800
however this transformation does not

316
00:11:28,800 --> 00:11:31,200
work for statistical zero knowledge

317
00:11:31,200 --> 00:11:34,320
as the output of pseudorandom generator

318
00:11:34,320 --> 00:11:36,880
is not statistically close to uniform

319
00:11:36,880 --> 00:11:38,079
randomness

320
00:11:38,079 --> 00:11:39,760
and the distinction would therefore

321
00:11:39,760 --> 00:11:41,600
notice that the common random string

322
00:11:41,600 --> 00:11:44,320
must have been created by the simulator

323
00:11:44,320 --> 00:11:48,480
with overwhelming probability

324
00:11:48,480 --> 00:11:51,120
in our transformation we specify instead

325
00:11:51,120 --> 00:11:52,560
that the auxiliary string

326
00:11:52,560 --> 00:11:55,600
in the output is not pseudorandom

327
00:11:55,600 --> 00:11:57,440
for soundness we let the malicious

328
00:11:57,440 --> 00:11:59,360
prover run on absolutely random common

329
00:11:59,360 --> 00:12:00,720
random string

330
00:12:00,720 --> 00:12:03,920
using that malicious prover is bounded

331
00:12:03,920 --> 00:12:06,399
and is therefore unable to distinguish

332
00:12:06,399 --> 00:12:09,120
these cases

333
00:12:09,440 --> 00:12:11,360
i will now focus on our second

334
00:12:11,360 --> 00:12:13,200
construction

335
00:12:13,200 --> 00:12:15,440
the latter space construction uses a

336
00:12:15,440 --> 00:12:17,120
dual mode commitment scheme

337
00:12:17,120 --> 00:12:18,720
based on learning with errors by

338
00:12:18,720 --> 00:12:20,560
governor at all

339
00:12:20,560 --> 00:12:22,880
a commitment scheme lets a party commit

340
00:12:22,880 --> 00:12:23,680
to a value

341
00:12:23,680 --> 00:12:25,920
without revealing the value itself at

342
00:12:25,920 --> 00:12:27,519
first

343
00:12:27,519 --> 00:12:30,079
later in the opening phase the party may

344
00:12:30,079 --> 00:12:32,959
reveal to which value it committed

345
00:12:32,959 --> 00:12:35,760
this is captured in two properties the

346
00:12:35,760 --> 00:12:37,360
hiding property

347
00:12:37,360 --> 00:12:39,120
which guarantees that the commitment

348
00:12:39,120 --> 00:12:40,959
reveals no information about the

349
00:12:40,959 --> 00:12:42,560
committed value

350
00:12:42,560 --> 00:12:44,800
and the binding property which

351
00:12:44,800 --> 00:12:46,880
guarantees that the committing party

352
00:12:46,880 --> 00:12:48,720
cannot claim to have committed to some

353
00:12:48,720 --> 00:12:52,399
other value afterwards

354
00:12:52,399 --> 00:12:55,279
both properties hiding and binding can

355
00:12:55,279 --> 00:12:57,760
be both against bounded or unbranded

356
00:12:57,760 --> 00:13:00,800
adversaries however it's a well-known

357
00:13:00,800 --> 00:13:01,360
fact

358
00:13:01,360 --> 00:13:04,720
that for each commitment scheme only one

359
00:13:04,720 --> 00:13:07,040
of these properties can hold against an

360
00:13:07,040 --> 00:13:08,959
unbounded adversary

361
00:13:08,959 --> 00:13:10,480
either a commitment scheme is

362
00:13:10,480 --> 00:13:12,240
statistically hiding

363
00:13:12,240 --> 00:13:15,279
and computationally binding or it is

364
00:13:15,279 --> 00:13:16,959
computationally hiding

365
00:13:16,959 --> 00:13:20,240
but perfectly binding

366
00:13:20,240 --> 00:13:22,800
now a dual mode commitment scheme is a

367
00:13:22,800 --> 00:13:24,560
commitment scheme that can be both

368
00:13:24,560 --> 00:13:26,639
perfectly binding and statistically

369
00:13:26,639 --> 00:13:27,920
hiding but not

370
00:13:27,920 --> 00:13:30,639
at the same time it contains a public

371
00:13:30,639 --> 00:13:31,519
key

372
00:13:31,519 --> 00:13:33,680
that can be generated in a hiding or

373
00:13:33,680 --> 00:13:35,200
binding mode

374
00:13:35,200 --> 00:13:37,600
making the commitments using the key

375
00:13:37,600 --> 00:13:39,680
either statistically hiding

376
00:13:39,680 --> 00:13:42,800
or perfectly binding further

377
00:13:42,800 --> 00:13:45,680
a public key created in the hiding mode

378
00:13:45,680 --> 00:13:48,079
is computationally indistinguishable

379
00:13:48,079 --> 00:13:49,920
from a public key generated in the

380
00:13:49,920 --> 00:13:52,719
binding mode

381
00:13:53,040 --> 00:13:55,360
i will now explain how we use that dual

382
00:13:55,360 --> 00:13:56,800
mode commitment scheme

383
00:13:56,800 --> 00:13:58,880
to build a single to multi-theorem

384
00:13:58,880 --> 00:14:00,720
transformation for non-interactive

385
00:14:00,720 --> 00:14:02,079
statistical knowledge

386
00:14:02,079 --> 00:14:05,120
arguments for the auxiliary string

387
00:14:05,120 --> 00:14:07,279
in the common random string we add

388
00:14:07,279 --> 00:14:09,680
enough random bits for a public key

389
00:14:09,680 --> 00:14:12,880
pk of the dual mode commitment scheme as

390
00:14:12,880 --> 00:14:13,440
well

391
00:14:13,440 --> 00:14:17,519
as for commitment c by the design of our

392
00:14:17,519 --> 00:14:19,360
dual mode commitment scheme

393
00:14:19,360 --> 00:14:22,160
a random public key is a public key for

394
00:14:22,160 --> 00:14:23,440
the hiding mode

395
00:14:23,440 --> 00:14:27,120
with overwhelming probability

396
00:14:27,120 --> 00:14:30,079
further we modify the language such that

397
00:14:30,079 --> 00:14:31,040
either statement

398
00:14:31,040 --> 00:14:34,079
x must be in the language l or the

399
00:14:34,079 --> 00:14:34,959
commitment

400
00:14:34,959 --> 00:14:36,480
in the common random string is a

401
00:14:36,480 --> 00:14:38,720
commitment to one

402
00:14:38,720 --> 00:14:41,279
now a random string is not a commitment

403
00:14:41,279 --> 00:14:42,000
to one

404
00:14:42,000 --> 00:14:45,680
with high probability however similar to

405
00:14:45,680 --> 00:14:47,680
the construction by feigl labido and

406
00:14:47,680 --> 00:14:48,560
chamier

407
00:14:48,560 --> 00:14:50,880
the simulator can set the commitment to

408
00:14:50,880 --> 00:14:53,120
be a commitment to one

409
00:14:53,120 --> 00:14:55,839
using the statistically hiding property

410
00:14:55,839 --> 00:14:58,560
of the dual mode commitment scheme

411
00:14:58,560 --> 00:15:00,800
note that here we need that the public

412
00:15:00,800 --> 00:15:02,880
key for the hiding mode of the dual mode

413
00:15:02,880 --> 00:15:03,839
commitment

414
00:15:03,839 --> 00:15:06,000
is statistically close to uniform

415
00:15:06,000 --> 00:15:07,040
randomness

416
00:15:07,040 --> 00:15:09,360
because now even an unbounded

417
00:15:09,360 --> 00:15:11,360
distinction cannot distinguish between

418
00:15:11,360 --> 00:15:12,959
the random public key

419
00:15:12,959 --> 00:15:16,079
and the true common random string and

420
00:15:16,079 --> 00:15:17,760
the public key generated by the

421
00:15:17,760 --> 00:15:20,399
simulator

422
00:15:20,639 --> 00:15:22,560
because we know that the scheme was

423
00:15:22,560 --> 00:15:24,399
trans we transform

424
00:15:24,399 --> 00:15:26,480
is single theorems that discuss your

425
00:15:26,480 --> 00:15:27,440
knowledge

426
00:15:27,440 --> 00:15:30,240
it is already multi theorem statistical

427
00:15:30,240 --> 00:15:32,560
witness indistinguishable

428
00:15:32,560 --> 00:15:35,040
now this together with the fact that the

429
00:15:35,040 --> 00:15:36,160
common random string

430
00:15:36,160 --> 00:15:38,320
generated by the simulator is

431
00:15:38,320 --> 00:15:40,320
statistically close to uniform

432
00:15:40,320 --> 00:15:41,279
randomness

433
00:15:41,279 --> 00:15:43,680
we get that indeed the transformed

434
00:15:43,680 --> 00:15:44,639
scheme is

435
00:15:44,639 --> 00:15:46,480
multitheorem's that is skull zero

436
00:15:46,480 --> 00:15:48,800
knowledge

437
00:15:48,800 --> 00:15:50,560
let me now show you why this

438
00:15:50,560 --> 00:15:52,639
construction is adaptive

439
00:15:52,639 --> 00:15:55,120
exclusively sound if the underlying

440
00:15:55,120 --> 00:15:56,639
single theorem construction

441
00:15:56,639 --> 00:15:59,680
is already adaptive exclusively sound

442
00:15:59,680 --> 00:16:02,160
to prove soundness we change the common

443
00:16:02,160 --> 00:16:03,920
random string given to the malicious

444
00:16:03,920 --> 00:16:05,040
prover

445
00:16:05,040 --> 00:16:08,800
first we regenerate the public key pk

446
00:16:08,800 --> 00:16:10,880
for the dual mode commitment scheme in

447
00:16:10,880 --> 00:16:12,160
hiding mode

448
00:16:12,160 --> 00:16:14,560
and compute the commitment to zero under

449
00:16:14,560 --> 00:16:17,758
the new public key

450
00:16:18,160 --> 00:16:20,320
as both are statistically close to

451
00:16:20,320 --> 00:16:22,959
uniform randomness the malicious prover

452
00:16:22,959 --> 00:16:25,040
has only negligible advantage of

453
00:16:25,040 --> 00:16:28,639
detecting the new common random string

454
00:16:28,639 --> 00:16:31,199
next we will replace the public key of

455
00:16:31,199 --> 00:16:32,560
the commitment scheme

456
00:16:32,560 --> 00:16:35,279
by a binding mode public key and

457
00:16:35,279 --> 00:16:37,759
recompute the commitment

458
00:16:37,759 --> 00:16:39,440
if this would change the success

459
00:16:39,440 --> 00:16:41,440
probability by more than a negligible

460
00:16:41,440 --> 00:16:42,320
amount

461
00:16:42,320 --> 00:16:44,880
we would have a distinction against the

462
00:16:44,880 --> 00:16:46,800
public key modes of the dual mode

463
00:16:46,800 --> 00:16:47,920
commitment scheme

464
00:16:47,920 --> 00:16:50,480
which in turn would break learning with

465
00:16:50,480 --> 00:16:52,560
errors

466
00:16:52,560 --> 00:16:54,800
therefore the malicious prover can have

467
00:16:54,800 --> 00:16:55,600
only lost

468
00:16:55,600 --> 00:16:58,560
negligible probabilities by switching

469
00:16:58,560 --> 00:17:00,000
the com random string

470
00:17:00,000 --> 00:17:03,360
to the modified one however

471
00:17:03,360 --> 00:17:05,599
due to the perfectly binding of the dual

472
00:17:05,599 --> 00:17:07,439
mode commitment scheme

473
00:17:07,439 --> 00:17:10,079
the or part of our modified language is

474
00:17:10,079 --> 00:17:11,760
now always false

475
00:17:11,760 --> 00:17:14,319
and language for this specific common

476
00:17:14,319 --> 00:17:15,599
random string

477
00:17:15,599 --> 00:17:18,000
is therefore identical to the original

478
00:17:18,000 --> 00:17:19,839
language

479
00:17:19,839 --> 00:17:21,919
therefore a successful malicious

480
00:17:21,919 --> 00:17:24,319
approval would also break the underlying

481
00:17:24,319 --> 00:17:24,959
scheme

482
00:17:24,959 --> 00:17:28,559
which we assume to be sound all that is

483
00:17:28,559 --> 00:17:29,360
now missing

484
00:17:29,360 --> 00:17:32,960
is completeness which however is not

485
00:17:32,960 --> 00:17:35,840
influenced at all by our construction

486
00:17:35,840 --> 00:17:38,720
therefore we have now shown that our

487
00:17:38,720 --> 00:17:39,840
transform scheme

488
00:17:39,840 --> 00:17:42,400
is indeed multitherm non-interactive

489
00:17:42,400 --> 00:17:46,160
statistical zero knowledge

490
00:17:46,160 --> 00:17:48,720
to conclude we have analyzed soundness

491
00:17:48,720 --> 00:17:50,720
of non-interactive arguments

492
00:17:50,720 --> 00:17:53,280
and argue that adaptive exclusive

493
00:17:53,280 --> 00:17:54,400
soundness

494
00:17:54,400 --> 00:17:56,720
is probably the most promising soundness

495
00:17:56,720 --> 00:17:58,720
variant to achieve

496
00:17:58,720 --> 00:18:01,039
further we have given two single to

497
00:18:01,039 --> 00:18:03,039
multiple um transformations

498
00:18:03,039 --> 00:18:05,760
for statistical zero knowledge that work

499
00:18:05,760 --> 00:18:07,520
in the common random string model

500
00:18:07,520 --> 00:18:11,520
and retain adaptive exclusive soundness

501
00:18:11,520 --> 00:18:13,840
thank you very much for your attention

502
00:18:13,840 --> 00:18:16,400
you can find our full paper on eprint

503
00:18:16,400 --> 00:18:18,799
and if you have any questions join our

504
00:18:18,799 --> 00:18:20,320
session on may 13th

505
00:18:20,320 --> 00:18:28,000
or just write us an email

506
00:18:28,000 --> 00:18:30,080
you

