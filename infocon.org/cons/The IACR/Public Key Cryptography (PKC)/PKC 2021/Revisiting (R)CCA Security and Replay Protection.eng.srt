1
00:00:01,280 --> 00:00:03,439
hi i'm guillerm and welcome to my

2
00:00:03,439 --> 00:00:04,560
presentation on

3
00:00:04,560 --> 00:00:06,720
revisiting rcc security and replay

4
00:00:06,720 --> 00:00:08,000
protection

5
00:00:08,000 --> 00:00:10,480
this is joint work with christian wiley

6
00:00:10,480 --> 00:00:12,719
and christopher

7
00:00:12,719 --> 00:00:15,839
so security notions are usually designed

8
00:00:15,839 --> 00:00:18,400
with concrete applications in mind

9
00:00:18,400 --> 00:00:20,400
however they often do not match the

10
00:00:20,400 --> 00:00:22,320
exact security requirements of

11
00:00:22,320 --> 00:00:24,640
their intended applications so what is

12
00:00:24,640 --> 00:00:26,160
their purpose

13
00:00:26,160 --> 00:00:28,640
for example what is the purpose of cc to

14
00:00:28,640 --> 00:00:31,199
security for pke schemes

15
00:00:31,199 --> 00:00:34,160
on one hand we know that cc2 security is

16
00:00:34,160 --> 00:00:34,960
sufficient

17
00:00:34,960 --> 00:00:38,000
to achieve confidential communication

18
00:00:38,000 --> 00:00:41,200
however there are also non-cca2 secure

19
00:00:41,200 --> 00:00:42,000
schemes

20
00:00:42,000 --> 00:00:43,760
that also allow for this type of

21
00:00:43,760 --> 00:00:46,000
communication

22
00:00:46,000 --> 00:00:49,200
the same happens with rcca security

23
00:00:49,200 --> 00:00:52,640
so rcc security is a relaxation of cc2

24
00:00:52,640 --> 00:00:54,079
security

25
00:00:54,079 --> 00:00:57,680
relaxation in the sense that on one hand

26
00:00:57,680 --> 00:01:01,440
it is implied by cc2 security

27
00:01:01,440 --> 00:01:03,920
on the other hand it does not imply cc2

28
00:01:03,920 --> 00:01:06,159
security

29
00:01:06,159 --> 00:01:09,360
so as i was saying

30
00:01:09,360 --> 00:01:12,640
rcca security is necessary to achieve

31
00:01:12,640 --> 00:01:15,680
confidential communication

32
00:01:15,680 --> 00:01:17,840
actually it is also sufficient to

33
00:01:17,840 --> 00:01:20,400
achieve confidential communication

34
00:01:20,400 --> 00:01:24,960
but it is only so if and only if

35
00:01:24,960 --> 00:01:28,960
the message space size is large

36
00:01:28,960 --> 00:01:32,079
for small message space sizes

37
00:01:32,079 --> 00:01:34,119
indar cca does not capture

38
00:01:34,119 --> 00:01:35,840
non-malleability

39
00:01:35,840 --> 00:01:38,000
which is a requirement for confidential

40
00:01:38,000 --> 00:01:39,680
communication

41
00:01:39,680 --> 00:01:42,799
this means that in general indar cca

42
00:01:42,799 --> 00:01:44,079
does not capture

43
00:01:44,079 --> 00:01:47,439
confidential communication

44
00:01:48,320 --> 00:01:51,799
so in this work we identify technical

45
00:01:51,799 --> 00:01:54,560
inconsistencies with existing game-based

46
00:01:54,560 --> 00:01:56,079
security notions

47
00:01:56,079 --> 00:01:59,119
namely in pdrcca and in

48
00:01:59,119 --> 00:02:03,280
sdrcca security we show that

49
00:02:03,280 --> 00:02:05,920
they are not implied by cca2 security

50
00:02:05,920 --> 00:02:06,479
for

51
00:02:06,479 --> 00:02:08,959
the case of probabilistic decryption and

52
00:02:08,959 --> 00:02:10,878
this actually contradicts a claim within

53
00:02:10,878 --> 00:02:13,120
earlier work

54
00:02:13,120 --> 00:02:15,599
and furthermore they have no known

55
00:02:15,599 --> 00:02:18,720
operational meaning

56
00:02:18,720 --> 00:02:22,319
so this diagram represents the previous

57
00:02:22,319 --> 00:02:23,120
diagram of

58
00:02:23,120 --> 00:02:26,879
ncc2 and in the rcca but now it is two

59
00:02:26,879 --> 00:02:28,800
new notions

60
00:02:28,800 --> 00:02:31,840
so these notions in pdrcca and

61
00:02:31,840 --> 00:02:35,280
industry rcc security were supposed to

62
00:02:35,280 --> 00:02:36,000
be between

63
00:02:36,000 --> 00:02:40,480
cc2 and rcca security

64
00:02:40,480 --> 00:02:44,319
however as we shine this work ncc2 does

65
00:02:44,319 --> 00:02:45,040
not imply

66
00:02:45,040 --> 00:02:48,160
entpd rcca security

67
00:02:48,160 --> 00:02:50,400
as it turns out it does not even imply

68
00:02:50,400 --> 00:02:51,200
the weaker

69
00:02:51,200 --> 00:02:55,040
industry rcca security

70
00:02:55,360 --> 00:02:57,599
in his work we clean up the space of

71
00:02:57,599 --> 00:02:59,280
game-based security notions

72
00:02:59,280 --> 00:03:02,159
for capturing confidential communication

73
00:03:02,159 --> 00:03:04,640
and we do so by following a systematic

74
00:03:04,640 --> 00:03:05,360
approach

75
00:03:05,360 --> 00:03:07,760
for characterizing security using a

76
00:03:07,760 --> 00:03:10,000
composable framework

77
00:03:10,000 --> 00:03:11,840
essentially we define different

78
00:03:11,840 --> 00:03:13,680
applications of pke schemes as

79
00:03:13,680 --> 00:03:14,560
benchmarks

80
00:03:14,560 --> 00:03:17,280
which are composable security notions

81
00:03:17,280 --> 00:03:18,480
and then use

82
00:03:18,480 --> 00:03:20,800
these benchmarks to assess whether

83
00:03:20,800 --> 00:03:22,959
gameplay security notions

84
00:03:22,959 --> 00:03:26,959
capture the intended application

85
00:03:26,959 --> 00:03:29,200
so we consider three benchmarks the

86
00:03:29,200 --> 00:03:31,200
first corresponding to the confidential

87
00:03:31,200 --> 00:03:32,080
communication

88
00:03:32,080 --> 00:03:34,959
i was referring to just before this

89
00:03:34,959 --> 00:03:37,840
benchmark is taken from earlier work

90
00:03:37,840 --> 00:03:40,159
the second benchmark is a variant of

91
00:03:40,159 --> 00:03:41,840
confidential communication

92
00:03:41,840 --> 00:03:45,040
but where this time the receiver can

93
00:03:45,040 --> 00:03:46,640
filter out ciphertext

94
00:03:46,640 --> 00:03:50,080
replays the third benchmark

95
00:03:50,080 --> 00:03:52,239
is yet another variant of confidential

96
00:03:52,239 --> 00:03:53,280
communication

97
00:03:53,280 --> 00:03:56,400
but where this time a third

98
00:03:56,400 --> 00:03:59,040
party can perform the ciphertext replay

99
00:03:59,040 --> 00:04:01,840
filtering

100
00:04:02,080 --> 00:04:05,200
so we introduce these benchmarks and for

101
00:04:05,200 --> 00:04:06,720
each one of them

102
00:04:06,720 --> 00:04:09,280
we introduce a game-based security

103
00:04:09,280 --> 00:04:11,840
notion capturing the benchmark

104
00:04:11,840 --> 00:04:13,920
firstly for this benchmark we introduce

105
00:04:13,920 --> 00:04:16,320
intcl rcc security

106
00:04:16,320 --> 00:04:19,918
for the second srprca security

107
00:04:19,918 --> 00:04:23,040
and finally for the third prp rcca

108
00:04:23,040 --> 00:04:24,800
security

109
00:04:24,800 --> 00:04:27,520
for each of these notions we show that

110
00:04:27,520 --> 00:04:28,479
they capture

111
00:04:28,479 --> 00:04:32,080
the intended benchmark

112
00:04:32,080 --> 00:04:34,320
in this presentation we are not going to

113
00:04:34,320 --> 00:04:36,320
capture benchmark 3

114
00:04:36,320 --> 00:04:41,280
nor in prp rcca security

115
00:04:41,440 --> 00:04:44,160
finally in this paper we give a full

116
00:04:44,160 --> 00:04:46,560
characterization of our game by security

117
00:04:46,560 --> 00:04:47,919
notions

118
00:04:47,919 --> 00:04:50,880
we show that they are correctly placed

119
00:04:50,880 --> 00:04:53,759
between cc2 and rcc security

120
00:04:53,759 --> 00:04:55,919
and we also give all possible relations

121
00:04:55,919 --> 00:04:57,840
between all our game-based security

122
00:04:57,840 --> 00:05:00,240
notions

123
00:05:00,240 --> 00:05:02,639
so we prove all possible implications

124
00:05:02,639 --> 00:05:04,720
and all possible separations between the

125
00:05:04,720 --> 00:05:07,199
notions

126
00:05:08,000 --> 00:05:10,880
okay with this let's go into some

127
00:05:10,880 --> 00:05:13,120
preliminaries

128
00:05:13,120 --> 00:05:16,240
first let's go over preliminaries about

129
00:05:16,240 --> 00:05:18,400
pk schemes

130
00:05:18,400 --> 00:05:21,120
so pke scheme is just a triple of ppt

131
00:05:21,120 --> 00:05:22,400
algorithms

132
00:05:22,400 --> 00:05:25,280
and for correctness we required that for

133
00:05:25,280 --> 00:05:25,680
any

134
00:05:25,680 --> 00:05:30,160
adversary a the adversary cannot output

135
00:05:30,160 --> 00:05:31,039
some message

136
00:05:31,039 --> 00:05:34,240
such that for this message

137
00:05:34,240 --> 00:05:36,840
encryption and decryption do not work

138
00:05:36,840 --> 00:05:39,440
correctly

139
00:05:39,440 --> 00:05:41,759
now we're going to introduce a generic

140
00:05:41,759 --> 00:05:43,360
game by security notion

141
00:05:43,360 --> 00:05:46,639
x so

142
00:05:46,639 --> 00:05:50,880
a pk scheme pi is index secure

143
00:05:50,880 --> 00:05:54,240
if no efficient extinguisher can tell

144
00:05:54,240 --> 00:05:56,479
with which system it is interacting with

145
00:05:56,479 --> 00:05:58,639
g0 or g1

146
00:05:58,639 --> 00:06:00,800
and we will define these systems in the

147
00:06:00,800 --> 00:06:01,840
next slide

148
00:06:01,840 --> 00:06:06,000
with non-negotiable advantage

149
00:06:06,000 --> 00:06:07,919
so the game systems are defined as

150
00:06:07,919 --> 00:06:09,440
follows

151
00:06:09,440 --> 00:06:11,919
initially the game season generates a

152
00:06:11,919 --> 00:06:13,520
public secret keypair

153
00:06:13,520 --> 00:06:16,400
using the keeper generation algorithm of

154
00:06:16,400 --> 00:06:18,160
the pk scheme

155
00:06:18,160 --> 00:06:19,759
and send the public key to the

156
00:06:19,759 --> 00:06:22,080
distinguisher

157
00:06:22,080 --> 00:06:24,240
there is a first encryption stage during

158
00:06:24,240 --> 00:06:26,080
which the distinguisher can ask for

159
00:06:26,080 --> 00:06:26,960
decryption

160
00:06:26,960 --> 00:06:30,319
of cipher texts the game will then

161
00:06:30,319 --> 00:06:32,960
decrypt the cipher text that the

162
00:06:32,960 --> 00:06:34,800
distinguisher asks to the crypt

163
00:06:34,800 --> 00:06:37,919
and send the resulting plaintext back to

164
00:06:37,919 --> 00:06:40,000
d

165
00:06:40,160 --> 00:06:42,479
then there is a challenge stage during

166
00:06:42,479 --> 00:06:44,800
which the distinguisher can simply ask

167
00:06:44,800 --> 00:06:48,160
the game to encrypt one of the two test

168
00:06:48,160 --> 00:06:50,000
messages and

169
00:06:50,000 --> 00:06:53,120
exactly what test message is encrypted

170
00:06:53,120 --> 00:06:54,800
depends on the game that

171
00:06:54,800 --> 00:06:57,280
the distinguisher is interacting with

172
00:06:57,280 --> 00:06:59,120
and the game will encrypt one of these

173
00:06:59,120 --> 00:07:00,720
messages and reply

174
00:07:00,720 --> 00:07:02,639
with a cipher text back to the

175
00:07:02,639 --> 00:07:04,240
distinguisher

176
00:07:04,240 --> 00:07:06,560
this cipher text which we here with the

177
00:07:06,560 --> 00:07:07,599
node by c star

178
00:07:07,599 --> 00:07:11,680
is called the challenge cipher text

179
00:07:12,000 --> 00:07:13,840
then finally there is a second

180
00:07:13,840 --> 00:07:16,400
encryption stage

181
00:07:16,400 --> 00:07:18,080
during this decryption stage the

182
00:07:18,080 --> 00:07:19,840
distinguisher can ask

183
00:07:19,840 --> 00:07:23,280
the game to decrypt well for ciphertext

184
00:07:23,280 --> 00:07:23,759
again

185
00:07:23,759 --> 00:07:26,560
but this time the game might actually

186
00:07:26,560 --> 00:07:28,840
refuse to decrypt some of these

187
00:07:28,840 --> 00:07:30,639
ciphertexts

188
00:07:30,639 --> 00:07:32,639
the decision whether to refuse to

189
00:07:32,639 --> 00:07:34,400
decrypt or not

190
00:07:34,400 --> 00:07:37,599
is done based on some predicate px which

191
00:07:37,599 --> 00:07:39,520
is defined by the game based notion

192
00:07:39,520 --> 00:07:41,120
itself

193
00:07:41,120 --> 00:07:44,720
essentially if this predicate outputs 1

194
00:07:44,720 --> 00:07:46,960
then the game refuses to decrypt the

195
00:07:46,960 --> 00:07:49,280
ciphertext that c submitted

196
00:07:49,280 --> 00:07:52,479
and otherwise the game decrypts the

197
00:07:52,479 --> 00:07:54,800
ciphertext and outputs the message

198
00:07:54,800 --> 00:07:58,479
back to the distinguisher

199
00:07:58,479 --> 00:08:00,960
okay so let's just see if a couple of

200
00:08:00,960 --> 00:08:01,759
examples of

201
00:08:01,759 --> 00:08:05,120
such predicates so for example for cc2

202
00:08:05,120 --> 00:08:07,280
security we could define the predicate

203
00:08:07,280 --> 00:08:08,000
as just

204
00:08:08,000 --> 00:08:11,599
checking whether the ciphertext that the

205
00:08:11,599 --> 00:08:13,360
distinction is asking to decrypt

206
00:08:13,360 --> 00:08:16,800
matches the challenge ciphertext

207
00:08:16,800 --> 00:08:19,919
for rcca security we could define

208
00:08:19,919 --> 00:08:22,080
the we could define the predicate as

209
00:08:22,080 --> 00:08:23,520
just checking whether

210
00:08:23,520 --> 00:08:26,080
the ciphertext decrypts one of the two

211
00:08:26,080 --> 00:08:28,479
test messages

212
00:08:28,479 --> 00:08:32,000
essentially for some security notion x

213
00:08:32,000 --> 00:08:34,240
this predicate px can be interpreted

214
00:08:34,240 --> 00:08:35,440
just as

215
00:08:35,440 --> 00:08:38,958
defining what the

216
00:08:38,958 --> 00:08:41,760
security notion considers to be replaced

217
00:08:41,760 --> 00:08:44,320
of the challenge cipher text

218
00:08:44,320 --> 00:08:47,760
so then the games defined by the

219
00:08:47,760 --> 00:08:49,040
security notion

220
00:08:49,040 --> 00:08:51,200
simply do not allow the distinguisher to

221
00:08:51,200 --> 00:08:52,480
obtain decryptions

222
00:08:52,480 --> 00:08:57,040
of replays of the challenge ciphertext

223
00:08:57,680 --> 00:08:59,360
okay now let's go into some

224
00:08:59,360 --> 00:09:00,959
preliminaries about

225
00:09:00,959 --> 00:09:05,279
channels we consider four types of

226
00:09:05,279 --> 00:09:06,880
channels in this work

227
00:09:06,880 --> 00:09:09,839
two of them are very similar the first

228
00:09:09,839 --> 00:09:12,480
one is insecure channel

229
00:09:12,480 --> 00:09:15,279
whenever alice inputs a message m into

230
00:09:15,279 --> 00:09:17,200
the insecure channel this message is

231
00:09:17,200 --> 00:09:19,839
simply output to if

232
00:09:19,839 --> 00:09:23,360
whenever if inserts a message m star

233
00:09:23,360 --> 00:09:24,959
into the insecure channel

234
00:09:24,959 --> 00:09:28,800
this message is simply output to bob

235
00:09:28,959 --> 00:09:31,040
in the authenticated channel place

236
00:09:31,040 --> 00:09:32,720
things are a bit different

237
00:09:32,720 --> 00:09:34,959
whenever alice inputs a message this

238
00:09:34,959 --> 00:09:36,160
message is immediately

239
00:09:36,160 --> 00:09:39,519
sent to both if and bob

240
00:09:39,519 --> 00:09:41,920
it is authenticated because only alice

241
00:09:41,920 --> 00:09:46,160
can input messages into the channel

242
00:09:46,640 --> 00:09:50,000
finally we have the rip the confidential

243
00:09:50,000 --> 00:09:51,519
channel and replay protected

244
00:09:51,519 --> 00:09:54,640
confidential channels

245
00:09:54,720 --> 00:09:57,839
here whenever alice inputs a message m

246
00:09:57,839 --> 00:10:02,399
if only gets to see the length of m

247
00:10:02,399 --> 00:10:05,760
if can either choose to deliver the jth

248
00:10:05,760 --> 00:10:08,560
message that alice input or it can

249
00:10:08,560 --> 00:10:09,279
inject

250
00:10:09,279 --> 00:10:12,079
some new message m prime into the

251
00:10:12,079 --> 00:10:13,200
channel

252
00:10:13,200 --> 00:10:16,959
depending on what if does bob then gets

253
00:10:16,959 --> 00:10:19,760
a message emptied output at its

254
00:10:19,760 --> 00:10:22,399
interface

255
00:10:23,200 --> 00:10:24,399
what is the difference between

256
00:10:24,399 --> 00:10:25,920
confidential and replay protected

257
00:10:25,920 --> 00:10:27,519
confidential channels well

258
00:10:27,519 --> 00:10:29,760
the difference is that confidential

259
00:10:29,760 --> 00:10:31,120
channels allow for replays

260
00:10:31,120 --> 00:10:33,440
and config replay protected confidential

261
00:10:33,440 --> 00:10:35,120
channels do not

262
00:10:35,120 --> 00:10:38,560
but what does this mean essentially each

263
00:10:38,560 --> 00:10:41,760
deliver query for the jth message italy

264
00:10:41,760 --> 00:10:42,800
sent

265
00:10:42,800 --> 00:10:44,839
in the confidential channel page is

266
00:10:44,839 --> 00:10:47,519
processed causing the jth message at all

267
00:10:47,519 --> 00:10:51,200
is sent to be delivered to bob

268
00:10:51,200 --> 00:10:52,959
in the replay protected confidential

269
00:10:52,959 --> 00:10:55,200
channel this is different

270
00:10:55,200 --> 00:10:58,399
so only the first query

271
00:10:58,399 --> 00:11:01,200
to deliver the jth message italic send

272
00:11:01,200 --> 00:11:02,800
is processed

273
00:11:02,800 --> 00:11:05,200
later queries for the same j are simply

274
00:11:05,200 --> 00:11:07,600
ignored

275
00:11:08,320 --> 00:11:10,160
with this we can now go to the

276
00:11:10,160 --> 00:11:12,320
benchmarks

277
00:11:12,320 --> 00:11:14,079
the first benchmark captures

278
00:11:14,079 --> 00:11:17,279
confidential communication

279
00:11:17,279 --> 00:11:20,160
essentially in the real world we have

280
00:11:20,160 --> 00:11:21,279
two resources

281
00:11:21,279 --> 00:11:24,000
an authenticated channel from bob dwalis

282
00:11:24,000 --> 00:11:24,320
and

283
00:11:24,320 --> 00:11:28,800
an insecure channel from alice to bob

284
00:11:28,800 --> 00:11:30,800
alice runs an encryption protocol and

285
00:11:30,800 --> 00:11:32,240
bob runs a decryption

286
00:11:32,240 --> 00:11:35,200
protocol initially the decryption

287
00:11:35,200 --> 00:11:36,480
protocol generates a

288
00:11:36,480 --> 00:11:39,440
public secret keypair and sends a public

289
00:11:39,440 --> 00:11:40,079
key

290
00:11:40,079 --> 00:11:43,839
over the authenticated channel to alice

291
00:11:43,839 --> 00:11:45,920
of course this public key also leaks to

292
00:11:45,920 --> 00:11:47,600
if

293
00:11:47,600 --> 00:11:50,800
whenever if sorry whenever alice

294
00:11:50,800 --> 00:11:52,959
inputs a message into her encryption

295
00:11:52,959 --> 00:11:54,639
protocol

296
00:11:54,639 --> 00:11:56,800
the encryption protocol simply encrypts

297
00:11:56,800 --> 00:11:59,200
this message using the public key

298
00:11:59,200 --> 00:12:01,360
outputting some ciphertext through the

299
00:12:01,360 --> 00:12:03,600
insecure channel

300
00:12:03,600 --> 00:12:06,160
if then c is the ciphertext and can

301
00:12:06,160 --> 00:12:08,000
choose to inject some ciphertext c

302
00:12:08,000 --> 00:12:11,519
prime into the insecure channel

303
00:12:11,519 --> 00:12:14,560
the decryption protocol run by pope

304
00:12:14,560 --> 00:12:16,800
will then try to decrypt the cipher.xe

305
00:12:16,800 --> 00:12:17,600
prime

306
00:12:17,600 --> 00:12:19,760
and if it is a valid ciphertext it will

307
00:12:19,760 --> 00:12:24,160
output some message emptyo to bob in the

308
00:12:24,160 --> 00:12:25,920
ideal world we have a confidential

309
00:12:25,920 --> 00:12:27,120
channel

310
00:12:27,120 --> 00:12:30,160
and we also have a simulator sigma

311
00:12:30,160 --> 00:12:32,320
initially the simulator generates a

312
00:12:32,320 --> 00:12:34,480
public secret keypair and outputs the

313
00:12:34,480 --> 00:12:35,279
public key

314
00:12:35,279 --> 00:12:38,480
to weave whenever alice inputs a message

315
00:12:38,480 --> 00:12:41,680
m the confidential channel only links

316
00:12:41,680 --> 00:12:42,639
the length of

317
00:12:42,639 --> 00:12:46,480
m to the simulator the simulator then

318
00:12:46,480 --> 00:12:49,040
somehow has to generate a ciphertext c

319
00:12:49,040 --> 00:12:53,200
and send it to if whenever eve

320
00:12:53,200 --> 00:12:55,360
inserts some ciphertex c prime into the

321
00:12:55,360 --> 00:12:56,800
simulator

322
00:12:56,800 --> 00:12:59,440
the simulator will choose to either

323
00:12:59,440 --> 00:13:01,760
deliver some message or inject a new one

324
00:13:01,760 --> 00:13:03,920
into the confidential channel

325
00:13:03,920 --> 00:13:06,160
and again depending on what the

326
00:13:06,160 --> 00:13:07,760
simulator does

327
00:13:07,760 --> 00:13:10,320
bob will get some message emptied output

328
00:13:10,320 --> 00:13:13,200
at its interface

329
00:13:13,200 --> 00:13:16,320
we say that benchmark 1 is achieved if

330
00:13:16,320 --> 00:13:18,839
the real world and the ideal worlds are

331
00:13:18,839 --> 00:13:21,839
indistinguishable

332
00:13:21,839 --> 00:13:25,920
okay so now let's go into benchmark 2.

333
00:13:25,920 --> 00:13:28,800
the main difference is that well now the

334
00:13:28,800 --> 00:13:31,360
decryption protocol has an additional

335
00:13:31,360 --> 00:13:34,240
memory resource which it can use to

336
00:13:34,240 --> 00:13:34,720
store

337
00:13:34,720 --> 00:13:36,959
well cipher text that it has already

338
00:13:36,959 --> 00:13:40,320
decrypted and output to pop

339
00:13:40,320 --> 00:13:42,399
essentially everything else works as

340
00:13:42,399 --> 00:13:43,680
before

341
00:13:43,680 --> 00:13:46,560
except that now whenever eve inserts

342
00:13:46,560 --> 00:13:46,959
some

343
00:13:46,959 --> 00:13:49,120
ciphertext c prime into the insecure

344
00:13:49,120 --> 00:13:50,720
channel

345
00:13:50,720 --> 00:13:53,760
the decryption protocol then checks into

346
00:13:53,760 --> 00:13:54,959
its memory

347
00:13:54,959 --> 00:13:57,680
to see if it has processed any related

348
00:13:57,680 --> 00:13:59,040
ciphertext

349
00:13:59,040 --> 00:14:01,680
and well if it has it simply ignore c

350
00:14:01,680 --> 00:14:02,800
prime

351
00:14:02,800 --> 00:14:05,839
otherwise it will store c prime into its

352
00:14:05,839 --> 00:14:07,600
memory resource

353
00:14:07,600 --> 00:14:10,639
it will decrypt c prime and output it to

354
00:14:10,639 --> 00:14:12,880
bob

355
00:14:13,279 --> 00:14:16,959
okay in the ideal world everything is

356
00:14:16,959 --> 00:14:20,560
as before except that the confidential

357
00:14:20,560 --> 00:14:23,360
channel is replaced with a replay

358
00:14:23,360 --> 00:14:26,320
protected confidential channel

359
00:14:26,320 --> 00:14:28,639
again we say that benchmark 2 is

360
00:14:28,639 --> 00:14:30,160
achieved if the

361
00:14:30,160 --> 00:14:31,839
real and ideal rules are

362
00:14:31,839 --> 00:14:34,800
indistinguishable

363
00:14:35,680 --> 00:14:38,800
now let's see why in-rca security is not

364
00:14:38,800 --> 00:14:40,639
sufficient

365
00:14:40,639 --> 00:14:42,880
so recall how the predicate for the

366
00:14:42,880 --> 00:14:44,800
security notion is defined

367
00:14:44,800 --> 00:14:48,240
essentially it just outputs one

368
00:14:48,240 --> 00:14:51,040
if and only if the cipher text that the

369
00:14:51,040 --> 00:14:51,600
the

370
00:14:51,600 --> 00:14:53,839
distinguisher is asking to decrypt

371
00:14:53,839 --> 00:14:55,360
decrypts to one of the two

372
00:14:55,360 --> 00:15:00,160
plain texts to enable to test messages

373
00:15:00,160 --> 00:15:03,440
so i would like to highlight that

374
00:15:03,440 --> 00:15:05,040
the confidential channel requires

375
00:15:05,040 --> 00:15:07,120
non-valuability

376
00:15:07,120 --> 00:15:10,079
and this is so since well if can only

377
00:15:10,079 --> 00:15:11,360
first

378
00:15:11,360 --> 00:15:15,760
learn message lengths sent by alice

379
00:15:15,760 --> 00:15:18,240
second it can forward the messages that

380
00:15:18,240 --> 00:15:19,120
ali sends

381
00:15:19,120 --> 00:15:22,320
to bob and finally it can inject

382
00:15:22,320 --> 00:15:25,360
new messages and prime into the

383
00:15:25,360 --> 00:15:26,000
confidential

384
00:15:26,000 --> 00:15:29,279
channel which are then output to bob

385
00:15:29,279 --> 00:15:32,240
but since eve does not know any of the

386
00:15:32,240 --> 00:15:34,639
messages that alice sends

387
00:15:34,639 --> 00:15:37,920
it simply cannot insert or cannot really

388
00:15:37,920 --> 00:15:39,680
interfere

389
00:15:39,680 --> 00:15:42,399
with well the messages that alice is

390
00:15:42,399 --> 00:15:43,360
sending

391
00:15:43,360 --> 00:15:46,320
in particular it cannot take one of the

392
00:15:46,320 --> 00:15:47,279
messages and

393
00:15:47,279 --> 00:15:49,279
transform it between into another

394
00:15:49,279 --> 00:15:50,880
related one

395
00:15:50,880 --> 00:15:52,720
so essentially this confidential channel

396
00:15:52,720 --> 00:15:55,920
really captures on malleability

397
00:15:55,920 --> 00:15:59,920
however there are malleable pke schemes

398
00:15:59,920 --> 00:16:00,880
that are in

399
00:16:00,880 --> 00:16:04,959
rcca secure and this is so since

400
00:16:04,959 --> 00:16:08,079
if you consider the binary message space

401
00:16:08,079 --> 00:16:12,720
then well the second decryption stage

402
00:16:12,720 --> 00:16:15,440
does not really help in distinguishing

403
00:16:15,440 --> 00:16:16,480
well

404
00:16:16,480 --> 00:16:19,839
g0 from g1 so even

405
00:16:19,839 --> 00:16:24,320
if a pk scheme is malleable

406
00:16:24,320 --> 00:16:26,720
a distinguisher cannot take advantage of

407
00:16:26,720 --> 00:16:29,040
the second encryption stage

408
00:16:29,040 --> 00:16:30,880
and because of that cannot take

409
00:16:30,880 --> 00:16:32,800
advantage of the malleability of

410
00:16:32,800 --> 00:16:36,320
the pke scheme to manage to win

411
00:16:36,320 --> 00:16:39,360
the security game

412
00:16:40,320 --> 00:16:43,440
okay now that i explained why in darcy

413
00:16:43,440 --> 00:16:45,440
is not sufficient to achieve benchmark

414
00:16:45,440 --> 00:16:46,160
one

415
00:16:46,160 --> 00:16:49,440
let's actually achieve benchmark one

416
00:16:49,440 --> 00:16:52,720
so we introduce ncl rcca security to

417
00:16:52,720 --> 00:16:54,639
achieve benchmark one

418
00:16:54,639 --> 00:16:58,800
we said that a pk scheme pi is ncl rcca

419
00:16:58,800 --> 00:17:00,160
secure

420
00:17:00,160 --> 00:17:02,639
if well there is an efficiently

421
00:17:02,639 --> 00:17:05,119
computable predicate v

422
00:17:05,119 --> 00:17:08,079
such that no efficient distinguisher can

423
00:17:08,079 --> 00:17:08,880
distinguish

424
00:17:08,880 --> 00:17:12,000
if it is interacting with g0 or with g1

425
00:17:12,000 --> 00:17:15,520
with non-negotiable advantage

426
00:17:16,240 --> 00:17:18,959
the predicate for this security notion

427
00:17:18,959 --> 00:17:21,280
is defined as follows

428
00:17:21,280 --> 00:17:25,199
so it outputs one if and only if

429
00:17:25,199 --> 00:17:28,799
well first the ciphertext that is asking

430
00:17:28,799 --> 00:17:30,160
to decrypt

431
00:17:30,160 --> 00:17:32,559
is related according to v to the

432
00:17:32,559 --> 00:17:34,320
challenge ciphertext

433
00:17:34,320 --> 00:17:36,960
and furthermore it also decrypts to the

434
00:17:36,960 --> 00:17:38,160
same as a challenge

435
00:17:38,160 --> 00:17:40,960
ciphertext

436
00:17:41,360 --> 00:17:44,240
notice here that the distinguisher is

437
00:17:44,240 --> 00:17:44,960
not given

438
00:17:44,960 --> 00:17:48,160
oracle access to fee

439
00:17:48,480 --> 00:17:50,640
and the goal of fee is to disallow

440
00:17:50,640 --> 00:17:51,919
strategies that

441
00:17:51,919 --> 00:17:54,799
could win the security game but would

442
00:17:54,799 --> 00:17:56,160
not really

443
00:17:56,160 --> 00:18:00,080
help in breaking confidentiality

444
00:18:00,080 --> 00:18:03,760
checking whether the ciphertext that the

445
00:18:03,760 --> 00:18:05,520
distinguisher is asking to decrypt

446
00:18:05,520 --> 00:18:07,120
really decrypts to the same as the

447
00:18:07,120 --> 00:18:09,200
challenge ciphertext

448
00:18:09,200 --> 00:18:12,559
is key to ensure that no meaningful

449
00:18:12,559 --> 00:18:14,000
moulding a text

450
00:18:14,000 --> 00:18:18,480
attacks are being disallowed by the game

451
00:18:19,760 --> 00:18:22,640
so we show that in clrca achieves a

452
00:18:22,640 --> 00:18:25,200
benchmark one for a single message

453
00:18:25,200 --> 00:18:27,200
and we also show for that for the and

454
00:18:27,200 --> 00:18:29,280
challenge version

455
00:18:29,280 --> 00:18:33,360
of ncl rcca achieves benchmark one for n

456
00:18:33,360 --> 00:18:35,840
messages

457
00:18:36,960 --> 00:18:39,520
so we introduce in clrca and we show

458
00:18:39,520 --> 00:18:41,760
that it captures benchmark one

459
00:18:41,760 --> 00:18:45,919
and now one could ask well is in clrca

460
00:18:45,919 --> 00:18:48,559
also sufficient to achieve benchmark 2

461
00:18:48,559 --> 00:18:50,080
or in other words

462
00:18:50,080 --> 00:18:53,840
does nclrcca capture replay protection

463
00:18:53,840 --> 00:18:56,559
well we could not prove this and that is

464
00:18:56,559 --> 00:18:58,880
for two main reasons

465
00:18:58,880 --> 00:19:02,080
first recall that v takes as input the

466
00:19:02,080 --> 00:19:04,080
secret key

467
00:19:04,080 --> 00:19:05,840
since the game does not give oracle

468
00:19:05,840 --> 00:19:07,360
access to v then

469
00:19:07,360 --> 00:19:09,679
how could the reduction check if two

470
00:19:09,679 --> 00:19:11,280
arbitrary suffer texts

471
00:19:11,280 --> 00:19:14,160
are in place of one another the second

472
00:19:14,160 --> 00:19:15,200
reason is that

473
00:19:15,200 --> 00:19:17,679
actually we might not even compute an

474
00:19:17,679 --> 00:19:20,000
equivalence relation

475
00:19:20,000 --> 00:19:22,799
so it's not clear whether v could test

476
00:19:22,799 --> 00:19:23,360
detect

477
00:19:23,360 --> 00:19:26,240
certain replays

478
00:19:26,880 --> 00:19:29,440
okay so to achieve benchmark 2 we

479
00:19:29,440 --> 00:19:30,320
introduce in

480
00:19:30,320 --> 00:19:33,440
srp rcca security

481
00:19:33,440 --> 00:19:35,840
we say that the pk scheme pi is in the

482
00:19:35,840 --> 00:19:37,520
srp rcc secure

483
00:19:37,520 --> 00:19:40,160
if there is an efficiently computable

484
00:19:40,160 --> 00:19:41,520
predicate v

485
00:19:41,520 --> 00:19:44,960
satisfying two conditions first for each

486
00:19:44,960 --> 00:19:45,600
keeper

487
00:19:45,600 --> 00:19:47,520
in the support of the keypad generation

488
00:19:47,520 --> 00:19:48,720
algorithm

489
00:19:48,720 --> 00:19:50,720
v must compute an equivalence relation

490
00:19:50,720 --> 00:19:53,280
over ciphertexts

491
00:19:53,280 --> 00:19:55,840
second for each keypair in the support

492
00:19:55,840 --> 00:19:58,640
of the keypair generation algorithm

493
00:19:58,640 --> 00:20:02,720
and for each ciphertext c and c prime

494
00:20:02,720 --> 00:20:04,840
if v declares this ciphertext to be

495
00:20:04,840 --> 00:20:06,159
related

496
00:20:06,159 --> 00:20:08,320
then they must carry essentially the

497
00:20:08,320 --> 00:20:09,600
same information

498
00:20:09,600 --> 00:20:12,080
what does this mean well it means that

499
00:20:12,080 --> 00:20:13,039
the decryption

500
00:20:13,039 --> 00:20:14,960
the statistical distance of the

501
00:20:14,960 --> 00:20:16,400
decryptions of c and c

502
00:20:16,400 --> 00:20:19,600
prime must

503
00:20:19,600 --> 00:20:23,039
must be negligible

504
00:20:23,039 --> 00:20:26,080
okay so bk scheme pi is indus rpr cca

505
00:20:26,080 --> 00:20:26,960
secure

506
00:20:26,960 --> 00:20:28,640
if there is an efficiently computable

507
00:20:28,640 --> 00:20:30,880
predicate v satisfying these two

508
00:20:30,880 --> 00:20:32,000
conditions

509
00:20:32,000 --> 00:20:35,840
such that no efficient extinguisher

510
00:20:35,840 --> 00:20:38,880
which is given oracle access to v

511
00:20:38,880 --> 00:20:41,039
on any pair of ciphertexts and

512
00:20:41,039 --> 00:20:43,039
throughout the entire game

513
00:20:43,039 --> 00:20:44,960
can distinguish if it is interacting

514
00:20:44,960 --> 00:20:46,799
with g0 or with g1

515
00:20:46,799 --> 00:20:50,240
in non-negligible advantage

516
00:20:50,320 --> 00:20:53,200
for this security notion the predicate

517
00:20:53,200 --> 00:20:54,799
is simply defined to be

518
00:20:54,799 --> 00:20:56,960
v

519
00:20:58,000 --> 00:21:01,120
so we introduce index rpr cci security

520
00:21:01,120 --> 00:21:03,039
and we show that it captures benchmark

521
00:21:03,039 --> 00:21:04,400
2.

522
00:21:04,400 --> 00:21:06,880
here predicate v can be used by the

523
00:21:06,880 --> 00:21:07,760
decryption

524
00:21:07,760 --> 00:21:10,960
protocol for detecting and thus also

525
00:21:10,960 --> 00:21:15,440
filtering out ciphertext replays

526
00:21:15,440 --> 00:21:18,159
to achieve benchmark 3 which we did not

527
00:21:18,159 --> 00:21:20,000
introduce in this presentation

528
00:21:20,000 --> 00:21:24,320
we introduce in prp rcca security

529
00:21:24,320 --> 00:21:26,400
this security notion is defined very

530
00:21:26,400 --> 00:21:27,760
similarly to wind

531
00:21:27,760 --> 00:21:31,200
srp rcca security the main difference

532
00:21:31,200 --> 00:21:34,320
is that now predicate fee is not given

533
00:21:34,320 --> 00:21:37,200
the secret key

534
00:21:38,159 --> 00:21:41,360
so we introduce in prp rcca security

535
00:21:41,360 --> 00:21:43,360
and we show that it captures benchmark

536
00:21:43,360 --> 00:21:44,640
3.

537
00:21:44,640 --> 00:21:47,280
the predicate fee given by the in

538
00:21:47,280 --> 00:21:50,240
prprcca security of apk scheme

539
00:21:50,240 --> 00:21:53,520
can be used for detecting and filtering

540
00:21:53,520 --> 00:21:54,080
out

541
00:21:54,080 --> 00:21:58,320
ciphertext replays

542
00:21:58,320 --> 00:22:01,120
finally we give all possible relations

543
00:22:01,120 --> 00:22:03,679
between our game-based notions

544
00:22:03,679 --> 00:22:06,880
we show that cca2 implies prp-rcc

545
00:22:06,880 --> 00:22:07,760
security

546
00:22:07,760 --> 00:22:10,400
which implies that's our prcc security

547
00:22:10,400 --> 00:22:12,240
clrca security

548
00:22:12,240 --> 00:22:15,840
and finally nclrc security implies in

549
00:22:15,840 --> 00:22:19,440
rcci security regarding separations

550
00:22:19,440 --> 00:22:22,480
we also show that in rcc security does

551
00:22:22,480 --> 00:22:23,280
not imply

552
00:22:23,280 --> 00:22:26,559
ncl or cca security which in turn does

553
00:22:26,559 --> 00:22:27,600
not imply

554
00:22:27,600 --> 00:22:31,200
in srp or cca security in prp rcc

555
00:22:31,200 --> 00:22:32,000
security

556
00:22:32,000 --> 00:22:35,840
and finally in prp rcca security

557
00:22:35,840 --> 00:22:40,960
does not imply in cca2 security

558
00:22:40,960 --> 00:22:43,760
for more details please have a look at

559
00:22:43,760 --> 00:22:44,320
the

560
00:22:44,320 --> 00:22:47,280
paper which is available on eprint thank

561
00:22:47,280 --> 00:22:55,840
you for your attention

