1
00:00:01,760 --> 00:00:04,160
hello everyone my name is yuyu wang

2
00:00:04,160 --> 00:00:07,279
i'm from uestc our title is

3
00:00:07,279 --> 00:00:09,040
impossibility on tampa resident

4
00:00:09,040 --> 00:00:12,240
cryptography with uniqueness properties

5
00:00:12,240 --> 00:00:16,719
it's a joint work with takashi master

6
00:00:20,480 --> 00:00:23,519
first we record the temperature model

7
00:00:23,519 --> 00:00:25,680
improving security of a cryptographic

8
00:00:25,680 --> 00:00:28,240
scheme we usually assume that the keys

9
00:00:28,240 --> 00:00:31,840
are perfectly protected

10
00:00:32,479 --> 00:00:35,520
however in the real world an anniversary

11
00:00:35,520 --> 00:00:37,360
may change the keys by executing

12
00:00:37,360 --> 00:00:39,360
tampering attacks such as heating up

13
00:00:39,360 --> 00:00:40,160
devices

14
00:00:40,160 --> 00:00:43,440
and injecting votes and the adversary

15
00:00:43,440 --> 00:00:43,760
may

16
00:00:43,760 --> 00:00:46,000
observe the cipher texts or the

17
00:00:46,000 --> 00:00:46,960
signatures

18
00:00:46,960 --> 00:00:50,719
generated by the tempered keys

19
00:00:52,160 --> 00:00:55,280
then the anniversary may get some extra

20
00:00:55,280 --> 00:00:58,879
advantage to breed the security

21
00:00:58,879 --> 00:01:00,879
there have been many examples of

22
00:01:00,879 --> 00:01:02,879
successful tampering attacks

23
00:01:02,879 --> 00:01:06,000
such as the ones on rsa

24
00:01:06,000 --> 00:01:09,439
des and aes and we want to consider the

25
00:01:09,439 --> 00:01:11,280
tempering model which captures these

26
00:01:11,280 --> 00:01:13,840
attacks

27
00:01:14,320 --> 00:01:16,560
there have been several positive results

28
00:01:16,560 --> 00:01:18,880
which show the existence of temporal

29
00:01:18,880 --> 00:01:20,640
resilient primitives in the common

30
00:01:20,640 --> 00:01:22,320
reference stream model

31
00:01:22,320 --> 00:01:24,560
in this model the adversary can temper

32
00:01:24,560 --> 00:01:26,000
with both the public keys

33
00:01:26,000 --> 00:01:28,960
and the secret keys in any way it wants

34
00:01:28,960 --> 00:01:29,600
but

35
00:01:29,600 --> 00:01:32,079
it's assumed that there are tamper-proof

36
00:01:32,079 --> 00:01:35,279
common reference strings

37
00:01:36,960 --> 00:01:39,840
however it's still unclear whether we

38
00:01:39,840 --> 00:01:41,840
can have secure schemes in the plane

39
00:01:41,840 --> 00:01:42,720
model

40
00:01:42,720 --> 00:01:45,200
where we do not assume any tamper-proof

41
00:01:45,200 --> 00:01:47,840
crs

42
00:01:48,720 --> 00:01:50,640
in this work we show that it's

43
00:01:50,640 --> 00:01:52,320
impossible to derive the temporal

44
00:01:52,320 --> 00:01:53,119
resilience of

45
00:01:53,119 --> 00:01:55,600
a broad class of primitives from any

46
00:01:55,600 --> 00:01:56,640
karma assumption

47
00:01:56,640 --> 00:02:00,079
by black box reductions

48
00:02:00,399 --> 00:02:02,560
before going to more details we first

49
00:02:02,560 --> 00:02:04,240
defined two extremely

50
00:02:04,240 --> 00:02:07,280
weak security notions the first one is

51
00:02:07,280 --> 00:02:08,560
weak comfortability

52
00:02:08,560 --> 00:02:10,800
which holds if the adversaries cannot

53
00:02:10,800 --> 00:02:12,879
forge a message signature pair without

54
00:02:12,879 --> 00:02:14,959
seeing any use for information

55
00:02:14,959 --> 00:02:18,879
even including the verification key

56
00:02:18,959 --> 00:02:21,040
one can easily see that the security

57
00:02:21,040 --> 00:02:22,239
notion is

58
00:02:22,239 --> 00:02:23,920
weaker than the standard security

59
00:02:23,920 --> 00:02:26,720
notions such as the cms security

60
00:02:26,720 --> 00:02:29,680
the rms security the one-time cma and

61
00:02:29,680 --> 00:02:32,319
the one-time rma

62
00:02:32,319 --> 00:02:34,879
the second one is weak one winners which

63
00:02:34,879 --> 00:02:36,959
is the same as standard one witness

64
00:02:36,959 --> 00:02:40,000
except that we don't give the public key

65
00:02:40,000 --> 00:02:43,040
to the adversary

66
00:02:43,040 --> 00:02:46,080
and it's obvious that this security is

67
00:02:46,080 --> 00:02:48,840
strictly weaker than standard one

68
00:02:48,840 --> 00:02:51,200
witness

69
00:02:51,200 --> 00:02:53,599
now we give more details on which class

70
00:02:53,599 --> 00:02:55,920
of primitives we consider

71
00:02:55,920 --> 00:02:58,400
first our negative results capture two

72
00:02:58,400 --> 00:02:59,760
types of signatures

73
00:02:59,760 --> 00:03:02,159
which are unique signature and signature

74
00:03:02,159 --> 00:03:04,159
with the unique signing keys

75
00:03:04,159 --> 00:03:06,640
here we require that the signatures

76
00:03:06,640 --> 00:03:08,239
should satisfy the weak

77
00:03:08,239 --> 00:03:11,519
unforgettability but this requirement is

78
00:03:11,519 --> 00:03:14,400
very natural since the security is

79
00:03:14,400 --> 00:03:15,760
extremely weak

80
00:03:15,760 --> 00:03:19,840
as we explained before

81
00:03:20,080 --> 00:03:22,800
for unique signature there exists only

82
00:03:22,800 --> 00:03:24,319
one valid signature

83
00:03:24,319 --> 00:03:27,120
for each pair of verification key and

84
00:03:27,120 --> 00:03:29,599
message

85
00:03:29,599 --> 00:03:31,920
and for signatures with unique signing

86
00:03:31,920 --> 00:03:32,720
key

87
00:03:32,720 --> 00:03:35,519
there exists only one valid signing key

88
00:03:35,519 --> 00:03:39,040
for each verification key

89
00:03:39,280 --> 00:03:41,920
it captures many instantiations such as

90
00:03:41,920 --> 00:03:43,519
the elgama signature and

91
00:03:43,519 --> 00:03:47,280
the dsa and the signature

92
00:03:47,280 --> 00:03:49,840
we also obtained negative results on

93
00:03:49,840 --> 00:03:51,920
injective one-way functions

94
00:03:51,920 --> 00:03:54,959
verifiable random functions and also pke

95
00:03:54,959 --> 00:03:55,360
with

96
00:03:55,360 --> 00:03:57,280
unique message satisfying weak one

97
00:03:57,280 --> 00:03:58,799
winners

98
00:03:58,799 --> 00:04:02,799
similar to the case of we comfortability

99
00:04:02,799 --> 00:04:05,519
any meaningful pke should satisfy weak

100
00:04:05,519 --> 00:04:08,080
one winners

101
00:04:08,080 --> 00:04:10,959
here by pku with unique messages we mean

102
00:04:10,959 --> 00:04:12,959
that for each ciphertext

103
00:04:12,959 --> 00:04:15,120
all the value secret keys of the same

104
00:04:15,120 --> 00:04:17,519
public key lead to the same decryption

105
00:04:17,519 --> 00:04:20,000
result

106
00:04:20,320 --> 00:04:23,440
as examples we showed how it captures

107
00:04:23,440 --> 00:04:24,960
the grammarship scheme

108
00:04:24,960 --> 00:04:27,440
and all the unique key pke schemes in

109
00:04:27,440 --> 00:04:29,520
our paper

110
00:04:29,520 --> 00:04:32,400
and in this presentation we will focus

111
00:04:32,400 --> 00:04:33,759
on the negative results

112
00:04:33,759 --> 00:04:37,680
on unix signature for simplicity

113
00:04:37,919 --> 00:04:40,000
we now define temporal resilience in the

114
00:04:40,000 --> 00:04:41,440
plane model

115
00:04:41,440 --> 00:04:43,520
since we consider negative results in

116
00:04:43,520 --> 00:04:46,160
this work the weaker the security is

117
00:04:46,160 --> 00:04:49,759
the stronger our results are

118
00:04:50,400 --> 00:04:53,040
an adversary in this model consists of

119
00:04:53,040 --> 00:04:54,080
three parts

120
00:04:54,080 --> 00:04:58,000
which are temper brick one and brick two

121
00:04:58,000 --> 00:05:00,000
they are not allowed to communicate with

122
00:05:00,000 --> 00:05:02,479
each other

123
00:05:02,479 --> 00:05:04,800
temper is a selective tempering function

124
00:05:04,800 --> 00:05:06,960
which takes as input a public key a

125
00:05:06,960 --> 00:05:07,759
secret key

126
00:05:07,759 --> 00:05:12,479
and outputs a temper key sk prime

127
00:05:13,039 --> 00:05:15,759
brick 1 takes as input public key and

128
00:05:15,759 --> 00:05:19,680
makes a signing query which is m

129
00:05:21,199 --> 00:05:23,440
brick 2 takes as input the public key or

130
00:05:23,440 --> 00:05:25,360
signature generated by a temporary

131
00:05:25,360 --> 00:05:26,320
signing key and

132
00:05:26,320 --> 00:05:28,320
tries to forge your message signature

133
00:05:28,320 --> 00:05:30,800
pair if the probability that the

134
00:05:30,800 --> 00:05:34,080
forgery is valid is negligible and

135
00:05:34,080 --> 00:05:36,160
the message in the forgery is not the

136
00:05:36,160 --> 00:05:37,520
sending query

137
00:05:37,520 --> 00:05:39,280
then the temporary resiliency in the

138
00:05:39,280 --> 00:05:43,440
play model is set to be satisfied

139
00:05:43,759 --> 00:05:46,400
one can see that the security is very

140
00:05:46,400 --> 00:05:47,680
weak

141
00:05:47,680 --> 00:05:49,919
since we only allow the adversary to

142
00:05:49,919 --> 00:05:52,000
temper with the key once

143
00:05:52,000 --> 00:05:54,880
and make only one signing query but

144
00:05:54,880 --> 00:05:55,600
again

145
00:05:55,600 --> 00:05:57,600
since we only consider the negative

146
00:05:57,600 --> 00:05:59,280
results the weaker

147
00:05:59,280 --> 00:06:03,520
it is the stronger our results are

148
00:06:03,840 --> 00:06:05,919
we now recall the blackbox reduction

149
00:06:05,919 --> 00:06:07,759
from comma assumptions to temporal

150
00:06:07,759 --> 00:06:08,960
resilience

151
00:06:08,960 --> 00:06:11,280
the reduction has black box access to

152
00:06:11,280 --> 00:06:13,360
the adversary and can make queries

153
00:06:13,360 --> 00:06:14,160
adaptive

154
00:06:14,160 --> 00:06:16,560
in any order to the three components of

155
00:06:16,560 --> 00:06:18,319
the adversary

156
00:06:18,319 --> 00:06:20,400
if by making use of a successful

157
00:06:20,400 --> 00:06:22,400
adversary the reduction breaks the

158
00:06:22,400 --> 00:06:24,800
underlying assumption successfully

159
00:06:24,800 --> 00:06:26,960
then we can conclude that the temporal

160
00:06:26,960 --> 00:06:28,080
resilience holds

161
00:06:28,080 --> 00:06:31,039
under the assumption

162
00:06:31,600 --> 00:06:34,479
we now give the intuition on how we show

163
00:06:34,479 --> 00:06:35,840
impossibility on

164
00:06:35,840 --> 00:06:37,600
black box reduction for temporary

165
00:06:37,600 --> 00:06:40,240
sealing to unix signatures

166
00:06:40,240 --> 00:06:43,440
to show this we just have to prove that

167
00:06:43,440 --> 00:06:45,120
the reductions do not

168
00:06:45,120 --> 00:06:47,360
benefit from having access to the

169
00:06:47,360 --> 00:06:49,840
adversary

170
00:06:50,319 --> 00:06:53,759
we consider two cases in the first case

171
00:06:53,759 --> 00:06:57,280
the reduction gives correct keys to the

172
00:06:57,280 --> 00:07:00,880
first component which is timbre

173
00:07:00,880 --> 00:07:02,880
in this case the reduction already knows

174
00:07:02,880 --> 00:07:04,560
the sending key and it can forge the

175
00:07:04,560 --> 00:07:07,919
signature by himself

176
00:07:08,720 --> 00:07:11,599
and due to uniqueness this signature

177
00:07:11,599 --> 00:07:13,840
computed by reduction should be the same

178
00:07:13,840 --> 00:07:17,758
as the one generated by brick two

179
00:07:18,160 --> 00:07:20,560
thus the adversary does little help to

180
00:07:20,560 --> 00:07:21,919
the reduction

181
00:07:21,919 --> 00:07:23,919
and the reduction can break the

182
00:07:23,919 --> 00:07:26,080
underlying assumption by himself

183
00:07:26,080 --> 00:07:30,400
which gives us the conflicts

184
00:07:30,400 --> 00:07:32,400
we now consider the case that the

185
00:07:32,400 --> 00:07:35,199
reduction does not give the valid keys

186
00:07:35,199 --> 00:07:37,840
to the adversary

187
00:07:37,840 --> 00:07:40,720
in this case the keys may not pass the

188
00:07:40,720 --> 00:07:43,199
verification by the adversary

189
00:07:43,199 --> 00:07:45,680
and then the adversary does not have to

190
00:07:45,680 --> 00:07:47,199
give a temporary key

191
00:07:47,199 --> 00:07:50,240
to the reduction in this case

192
00:07:50,240 --> 00:07:52,879
the reduction will learn no information

193
00:07:52,879 --> 00:07:54,000
on sk prime

194
00:07:54,000 --> 00:07:58,240
which is the temporary key

195
00:07:58,240 --> 00:08:00,319
then due to the weak comfortability of

196
00:08:00,319 --> 00:08:02,000
the unique signature

197
00:08:02,000 --> 00:08:04,639
the reduction cannot answer the signing

198
00:08:04,639 --> 00:08:07,759
query correctly

199
00:08:08,080 --> 00:08:10,400
since the reduction cannot simulate the

200
00:08:10,400 --> 00:08:12,800
view of the adversary now

201
00:08:12,800 --> 00:08:15,280
the adversary does not have to give a

202
00:08:15,280 --> 00:08:16,479
valid forgery

203
00:08:16,479 --> 00:08:19,360
to the reduction as a result the

204
00:08:19,360 --> 00:08:21,759
reduction cannot use the adversary in a

205
00:08:21,759 --> 00:08:26,479
meaningful way

206
00:08:26,479 --> 00:08:29,840
this is the intuition of our idea and

207
00:08:29,840 --> 00:08:33,360
to show the strict proof we have to take

208
00:08:33,360 --> 00:08:35,279
care of two points

209
00:08:35,279 --> 00:08:37,839
the first one is that the reduction can

210
00:08:37,839 --> 00:08:40,000
make adaptive queries to the three

211
00:08:40,000 --> 00:08:43,360
components in any order and the second

212
00:08:43,360 --> 00:08:43,679
one

213
00:08:43,679 --> 00:08:46,640
is that we have to find a way for tamper

214
00:08:46,640 --> 00:08:48,720
which is the first component

215
00:08:48,720 --> 00:08:53,279
to check the validity of the keys

216
00:08:53,279 --> 00:08:55,760
to give the formal proof we use the

217
00:08:55,760 --> 00:08:57,920
framework of simulatable attacks by

218
00:08:57,920 --> 00:08:58,880
weeks

219
00:08:58,880 --> 00:09:01,200
in this framework we first need to

220
00:09:01,200 --> 00:09:03,200
construct a computationally unbounded

221
00:09:03,200 --> 00:09:04,880
adversary to break the temporal

222
00:09:04,880 --> 00:09:07,120
residence

223
00:09:07,120 --> 00:09:09,920
then we define a simulator which runs in

224
00:09:09,920 --> 00:09:11,040
polynomial time

225
00:09:11,040 --> 00:09:13,440
but is indistinguishable with the

226
00:09:13,440 --> 00:09:14,720
adversary

227
00:09:14,720 --> 00:09:17,440
notice that the simulator doesn't have

228
00:09:17,440 --> 00:09:18,000
to run

229
00:09:18,000 --> 00:09:21,120
in a legal way it just have to simulate

230
00:09:21,120 --> 00:09:22,880
the anniversary it doesn't have to

231
00:09:22,880 --> 00:09:25,519
follow the game

232
00:09:25,519 --> 00:09:27,839
the distinction can make adaptive

233
00:09:27,839 --> 00:09:29,519
queries for any times

234
00:09:29,519 --> 00:09:32,720
and in any order

235
00:09:33,040 --> 00:09:36,320
and if the simulatable attacks exist

236
00:09:36,320 --> 00:09:38,880
which means that if we can construct the

237
00:09:38,880 --> 00:09:39,760
adversary

238
00:09:39,760 --> 00:09:43,040
and the simulator then there exists

239
00:09:43,040 --> 00:09:45,600
no black box reductions from standard

240
00:09:45,600 --> 00:09:48,240
assumptions

241
00:09:48,880 --> 00:09:52,160
the reason is that if there exists a

242
00:09:52,160 --> 00:09:52,880
reduction

243
00:09:52,880 --> 00:09:55,040
that breaks the assumption by having

244
00:09:55,040 --> 00:09:59,040
black box access to the adversary

245
00:09:59,040 --> 00:10:01,200
then it can also break the underlying

246
00:10:01,200 --> 00:10:03,279
assumption by having access to the

247
00:10:03,279 --> 00:10:04,000
simulator

248
00:10:04,000 --> 00:10:06,720
which runs in polynomial time this means

249
00:10:06,720 --> 00:10:08,959
that the online assumption can be broken

250
00:10:08,959 --> 00:10:10,160
in polynomial time

251
00:10:10,160 --> 00:10:13,760
which gives us the conflict

252
00:10:14,240 --> 00:10:16,839
we now show how we construct the

253
00:10:16,839 --> 00:10:19,600
adversary

254
00:10:19,600 --> 00:10:22,160
the three components of the adversary

255
00:10:22,160 --> 00:10:23,680
share a random function

256
00:10:23,680 --> 00:10:26,079
in the start of the game and cannot

257
00:10:26,079 --> 00:10:29,760
share any common state anymore

258
00:10:29,839 --> 00:10:32,959
all the three components compute fpk to

259
00:10:32,959 --> 00:10:34,640
obtain the random coins

260
00:10:34,640 --> 00:10:37,920
which are rg rs m star

261
00:10:37,920 --> 00:10:41,519
and m rg is used to generate the

262
00:10:41,519 --> 00:10:42,959
tempered keys

263
00:10:42,959 --> 00:10:46,800
rs is used to forge the signature

264
00:10:46,800 --> 00:10:50,000
m star is the message in the forgery and

265
00:10:50,000 --> 00:10:53,519
m is the signing query

266
00:10:54,399 --> 00:10:56,640
tamper will check the validity of keys

267
00:10:56,640 --> 00:10:58,720
by checking whether the signature for m

268
00:10:58,720 --> 00:11:01,200
star generated by using the random coin

269
00:11:01,200 --> 00:11:04,800
rs and the secret key sk can pass the

270
00:11:04,800 --> 00:11:06,399
verification

271
00:11:06,399 --> 00:11:09,680
if the check works then temper generates

272
00:11:09,680 --> 00:11:12,000
sk prime by making use of the random

273
00:11:12,000 --> 00:11:14,880
coin rg notice that

274
00:11:14,880 --> 00:11:18,399
pk and sk do not have to be a valid key

275
00:11:18,399 --> 00:11:18,880
pair

276
00:11:18,880 --> 00:11:21,519
for any message they just have to be

277
00:11:21,519 --> 00:11:25,040
valid for the message m stop

278
00:11:25,680 --> 00:11:27,279
then break two checks whether the

279
00:11:27,279 --> 00:11:30,160
signing query is correctly responded

280
00:11:30,160 --> 00:11:32,959
if the check works it uses brute force

281
00:11:32,959 --> 00:11:35,680
to search the value signature sigma star

282
00:11:35,680 --> 00:11:38,880
which passes the verification

283
00:11:38,880 --> 00:11:42,079
due to correctness the adversary must

284
00:11:42,079 --> 00:11:44,320
be able to break the temporal residence

285
00:11:44,320 --> 00:11:48,640
if the challenger runs in an honest way

286
00:11:49,600 --> 00:11:51,440
we now consider the communication

287
00:11:51,440 --> 00:11:52,880
between the distinguisher

288
00:11:52,880 --> 00:11:55,760
and the adversary if the key is given by

289
00:11:55,760 --> 00:11:57,519
the distinguisher did not pass the

290
00:11:57,519 --> 00:11:59,760
verification by temper

291
00:11:59,760 --> 00:12:01,839
then the distinguisher will learn no

292
00:12:01,839 --> 00:12:03,839
information on pk prime and

293
00:12:03,839 --> 00:12:06,560
sk prime

294
00:12:06,880 --> 00:12:08,720
in this case no matter how the

295
00:12:08,720 --> 00:12:10,720
distinction makes queries

296
00:12:10,720 --> 00:12:13,200
it cannot answer the sending queries due

297
00:12:13,200 --> 00:12:13,839
to unique

298
00:12:13,839 --> 00:12:16,639
unforgettability and then break 2 will

299
00:12:16,639 --> 00:12:19,040
not forge the signature by using brute

300
00:12:19,040 --> 00:12:21,360
force

301
00:12:21,440 --> 00:12:23,680
this means that we can simulate the

302
00:12:23,680 --> 00:12:24,959
adversary easily

303
00:12:24,959 --> 00:12:28,239
in polynomial time

304
00:12:29,760 --> 00:12:31,920
we now consider the case that the

305
00:12:31,920 --> 00:12:32,800
distinguisher

306
00:12:32,800 --> 00:12:37,599
has given keys passing the verification

307
00:12:37,760 --> 00:12:40,560
in this case to simulate the adversary a

308
00:12:40,560 --> 00:12:42,480
simulator does not have to use brute

309
00:12:42,480 --> 00:12:43,839
force as well

310
00:12:43,839 --> 00:12:46,800
it just uses sk which is given by the

311
00:12:46,800 --> 00:12:47,680
distinguisher

312
00:12:47,680 --> 00:12:50,800
to generate a forged signature

313
00:12:50,800 --> 00:12:52,959
the forge signature must pass the

314
00:12:52,959 --> 00:12:54,399
verification

315
00:12:54,399 --> 00:12:56,959
the reason is that we have checked the

316
00:12:56,959 --> 00:12:57,920
validity

317
00:12:57,920 --> 00:13:02,319
of the secret key which is skb4

318
00:13:02,639 --> 00:13:05,600
also the signature which is sigma star

319
00:13:05,600 --> 00:13:07,519
generated by the simulator will be the

320
00:13:07,519 --> 00:13:08,480
same as the one

321
00:13:08,480 --> 00:13:11,040
generated by the adversary by making use

322
00:13:11,040 --> 00:13:12,639
of brute force

323
00:13:12,639 --> 00:13:16,160
this is because of the uniqueness of the

324
00:13:16,160 --> 00:13:17,519
signature

325
00:13:17,519 --> 00:13:20,399
and this will hold no matter in which

326
00:13:20,399 --> 00:13:24,000
order the distribution query read

327
00:13:24,160 --> 00:13:26,079
as a result we can simulate the

328
00:13:26,079 --> 00:13:27,440
unbounded adversary

329
00:13:27,440 --> 00:13:30,160
in polynomial time anyway which means

330
00:13:30,160 --> 00:13:30,560
that

331
00:13:30,560 --> 00:13:35,839
the simulator attack exists

332
00:13:35,920 --> 00:13:38,160
now we give the conclusion this

333
00:13:38,160 --> 00:13:39,760
presentation shows that

334
00:13:39,760 --> 00:13:42,160
there exists a simulatable attack for

335
00:13:42,160 --> 00:13:44,079
unique signatures

336
00:13:44,079 --> 00:13:47,120
this means that it's impossible to

337
00:13:47,120 --> 00:13:49,199
prove temporal resilience for unique

338
00:13:49,199 --> 00:13:53,439
signatures by black box reductions

339
00:13:54,399 --> 00:13:57,600
in similar ways we can also construct

340
00:13:57,600 --> 00:14:00,320
simulatable attacks for signature with

341
00:14:00,320 --> 00:14:01,600
unique signing key

342
00:14:01,600 --> 00:14:04,079
pke with the unique message verifiable

343
00:14:04,079 --> 00:14:04,959
random function

344
00:14:04,959 --> 00:14:07,279
and injective line with functions which

345
00:14:07,279 --> 00:14:08,399
means that

346
00:14:08,399 --> 00:14:11,760
it's impossible to derive the temporal

347
00:14:11,760 --> 00:14:14,240
resilience of these primitives via black

348
00:14:14,240 --> 00:14:17,360
box reductions

349
00:14:17,360 --> 00:14:21,519
thank you for your attention

