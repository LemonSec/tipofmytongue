1
00:00:00,399 --> 00:00:02,720
hi i am jovan de pereira and this work

2
00:00:02,720 --> 00:00:03,280
is about

3
00:00:03,280 --> 00:00:05,120
giving an alternative approach to

4
00:00:05,120 --> 00:00:07,040
tackling two of the main bottlenecks in

5
00:00:07,040 --> 00:00:09,440
a sergeant-based key compression

6
00:00:09,440 --> 00:00:12,639
namely pairings and discrete logarithms

7
00:00:12,639 --> 00:00:14,920
this is a giant work with all of a

8
00:00:14,920 --> 00:00:16,320
rhythm

9
00:00:16,320 --> 00:00:18,480
okay so let's start with some motivation

10
00:00:18,480 --> 00:00:20,320
in the background

11
00:00:20,320 --> 00:00:22,240
it is well known that classical elliptic

12
00:00:22,240 --> 00:00:24,000
curves and pairings offer many

13
00:00:24,000 --> 00:00:25,519
opportunities to do research on

14
00:00:25,519 --> 00:00:27,840
different mathematical objects

15
00:00:27,840 --> 00:00:30,800
from what precision to finite field

16
00:00:30,800 --> 00:00:31,840
arithmetic

17
00:00:31,840 --> 00:00:34,880
and curve arithmetic now isogen is

18
00:00:34,880 --> 00:00:36,480
that i believe that two people's quantum

19
00:00:36,480 --> 00:00:37,920
secure

20
00:00:37,920 --> 00:00:40,239
introduce their automatic of maps

21
00:00:40,239 --> 00:00:41,840
between curves

22
00:00:41,840 --> 00:00:43,680
and key compression takes it to another

23
00:00:43,680 --> 00:00:45,600
level it also includes discrete

24
00:00:45,600 --> 00:00:47,440
logarithms of refined fields

25
00:00:47,440 --> 00:00:50,239
to be used constructively and now in

26
00:00:50,239 --> 00:00:52,079
this work we suggest to use discrete

27
00:00:52,079 --> 00:00:54,719
logarithms over ellipt curves

28
00:00:54,719 --> 00:00:56,559
the techniques for key compression here

29
00:00:56,559 --> 00:00:57,920
not only applies

30
00:00:57,920 --> 00:01:01,280
to keys but also to cipher text so it

31
00:01:01,280 --> 00:01:03,680
also applies to sonic

32
00:01:03,680 --> 00:01:06,560
and also it's not only restricted to

33
00:01:06,560 --> 00:01:08,720
kens key encapsulation mechanisms

34
00:01:08,720 --> 00:01:12,320
but also to isogen-based signatures

35
00:01:12,320 --> 00:01:15,040
so if you are a big fan of elliptic

36
00:01:15,040 --> 00:01:16,000
curves

37
00:01:16,000 --> 00:01:18,640
and you want to to research both quantum

38
00:01:18,640 --> 00:01:20,080
cryptography

39
00:01:20,080 --> 00:01:23,200
and you also want small keys

40
00:01:23,200 --> 00:01:26,720
psych is a good candidate for that

41
00:01:26,720 --> 00:01:28,479
now let's go through the necessary

42
00:01:28,479 --> 00:01:30,400
background for this work

43
00:01:30,400 --> 00:01:32,720
we start by describing the usual sidh

44
00:01:32,720 --> 00:01:33,520
psych setting

45
00:01:33,520 --> 00:01:35,680
where we define a prime p of the from 2

46
00:01:35,680 --> 00:01:38,240
to the n times 3 to the n minus 1

47
00:01:38,240 --> 00:01:40,560
and we build a quadratic extension of

48
00:01:40,560 --> 00:01:42,159
the finite field f3 by

49
00:01:42,159 --> 00:01:45,200
joining the imaginary number r

50
00:01:45,200 --> 00:01:46,720
all the curves in this work will be

51
00:01:46,720 --> 00:01:48,240
super singular

52
00:01:48,240 --> 00:01:49,920
and usually represented in their

53
00:01:49,920 --> 00:01:51,360
montgomery farm unless

54
00:01:51,360 --> 00:01:55,119
stated otherwise and here ea

55
00:01:55,119 --> 00:01:58,079
denotes the the curve in its montgomery

56
00:01:58,079 --> 00:01:58,479
form

57
00:01:58,479 --> 00:02:01,360
and a is just the montgomery coefficient

58
00:02:01,360 --> 00:02:03,360
in the second round of this competition

59
00:02:03,360 --> 00:02:04,320
the psych team

60
00:02:04,320 --> 00:02:06,719
also suggested to use the curve e6 as

61
00:02:06,719 --> 00:02:08,080
the public initial curve

62
00:02:08,080 --> 00:02:10,720
shared among all the users and they also

63
00:02:10,720 --> 00:02:12,879
defined two pairs of torsion generators

64
00:02:12,879 --> 00:02:16,080
are denoted here b6 and q6

65
00:02:16,080 --> 00:02:18,800
where um if l is equal to 2 they are

66
00:02:18,800 --> 00:02:20,959
going to generate the 2 to the n version

67
00:02:20,959 --> 00:02:22,400
and if l is equal to three they are

68
00:02:22,400 --> 00:02:23,760
going to turn into the three to the

69
00:02:23,760 --> 00:02:24,720
intersection

70
00:02:24,720 --> 00:02:28,640
of the curve e6 and previously to e6 the

71
00:02:28,640 --> 00:02:30,640
curve e0 was the actual initial curve

72
00:02:30,640 --> 00:02:31,920
adopted in psyc

73
00:02:31,920 --> 00:02:33,920
but it was replaced in the second round

74
00:02:33,920 --> 00:02:35,040
of nist

75
00:02:35,040 --> 00:02:37,040
because actually any two exogeny

76
00:02:37,040 --> 00:02:38,400
departing for only zero

77
00:02:38,400 --> 00:02:41,360
would pass through e6 anyways so you

78
00:02:41,360 --> 00:02:43,280
wanted to avoid that

79
00:02:43,280 --> 00:02:45,280
that's a very special property of the

80
00:02:45,280 --> 00:02:47,840
curvy zero

81
00:02:47,840 --> 00:02:51,280
also the curvy zero comes with a pair of

82
00:02:51,280 --> 00:02:53,840
version generators p0 and q0 that will

83
00:02:53,840 --> 00:02:55,760
make use in this work

84
00:02:55,760 --> 00:02:57,920
and it has other special properties that

85
00:02:57,920 --> 00:03:00,400
i'm going to describe

86
00:03:00,400 --> 00:03:02,640
so we know that the curve v0 is

87
00:03:02,640 --> 00:03:04,480
connected to the curve 6

88
00:03:04,480 --> 00:03:07,599
via auto isogeny generated

89
00:03:07,599 --> 00:03:11,200
by the point i n0

90
00:03:11,200 --> 00:03:14,560
and we also denote by capital phi

91
00:03:14,560 --> 00:03:16,480
therefore being used endomorphism only

92
00:03:16,480 --> 00:03:17,760
0.

93
00:03:17,760 --> 00:03:20,959
and by tr the trace map that takes

94
00:03:20,959 --> 00:03:21,599
points

95
00:03:21,599 --> 00:03:24,799
uh to the base field and is defined by

96
00:03:24,799 --> 00:03:28,239
the sun of the point a point t to its

97
00:03:28,239 --> 00:03:31,120
forbidden map

98
00:03:31,519 --> 00:03:34,480
so we also have a distortion map

99
00:03:34,480 --> 00:03:36,640
available on the curve v0

100
00:03:36,640 --> 00:03:39,120
that is usually hard to find on general

101
00:03:39,120 --> 00:03:40,080
elliptic curves

102
00:03:40,080 --> 00:03:44,560
but in here we can make use of it

103
00:03:44,560 --> 00:03:46,319
for the purposes of this work we are

104
00:03:46,319 --> 00:03:49,120
going to consider sadh private keys as

105
00:03:49,120 --> 00:03:50,480
triples where

106
00:03:50,480 --> 00:03:52,959
sl is going to be an integer mod l to

107
00:03:52,959 --> 00:03:54,239
the e

108
00:03:54,239 --> 00:03:58,319
uh we have also um an exogenic phi

109
00:03:58,319 --> 00:04:00,799
of degree lambda to the e to the lambda

110
00:04:00,799 --> 00:04:03,040
whose kernel is generated by the point

111
00:04:03,040 --> 00:04:06,879
p6 plus slq six and we also have

112
00:04:06,879 --> 00:04:10,319
access to its dual i-hat and here

113
00:04:10,319 --> 00:04:14,640
lambda is going to be comparing to l

114
00:04:14,640 --> 00:04:17,040
the public key in turn can be seen as a

115
00:04:17,040 --> 00:04:20,000
triple a pq

116
00:04:20,000 --> 00:04:22,639
where an a is going to be the montgomery

117
00:04:22,639 --> 00:04:23,440
coefficient

118
00:04:23,440 --> 00:04:28,000
of the image curve of phi e in here

119
00:04:28,000 --> 00:04:31,440
and p and q are going to be two uh

120
00:04:31,440 --> 00:04:34,720
points on e and that will be the

121
00:04:34,720 --> 00:04:37,360
image of the isogenic phi evaluated on

122
00:04:37,360 --> 00:04:38,800
the original version

123
00:04:38,800 --> 00:04:42,560
uh bases p6 and q6

124
00:04:42,560 --> 00:04:44,240
so now we can move on to the ideas

125
00:04:44,240 --> 00:04:46,560
behind the sidh key compression

126
00:04:46,560 --> 00:04:50,479
so let e be the public key ellipt curve

127
00:04:50,479 --> 00:04:52,560
it is always possible to build a

128
00:04:52,560 --> 00:04:55,040
canonical basis for the l today version

129
00:04:55,040 --> 00:04:57,520
here denoted by the points r n s

130
00:04:57,520 --> 00:05:01,120
that everyone agrees upon and because

131
00:05:01,120 --> 00:05:04,479
the privatizogenify preserves the linear

132
00:05:04,479 --> 00:05:06,000
independence of the points

133
00:05:06,000 --> 00:05:09,120
p6 and q6 the points

134
00:05:09,120 --> 00:05:11,919
uh p and q are also going to be uh a

135
00:05:11,919 --> 00:05:14,160
bases for that same intention

136
00:05:14,160 --> 00:05:17,600
this means that uh a base change matrix

137
00:05:17,600 --> 00:05:20,720
should exist and it's given by these uh

138
00:05:20,720 --> 00:05:23,039
a's and b's coefficients here that are

139
00:05:23,039 --> 00:05:26,960
just small integers mod l today

140
00:05:27,199 --> 00:05:29,919
the first idea for key compression was

141
00:05:29,919 --> 00:05:31,840
given by azaderash and others

142
00:05:31,840 --> 00:05:35,280
where instead of transmitting um

143
00:05:35,280 --> 00:05:37,840
the x coordinates of points p and q to

144
00:05:37,840 --> 00:05:39,919
represent those points

145
00:05:39,919 --> 00:05:43,039
which have storage for log p

146
00:05:43,039 --> 00:05:45,199
we can actually transmit these four

147
00:05:45,199 --> 00:05:46,160
coefficients

148
00:05:46,160 --> 00:05:48,320
that are the representations being q in

149
00:05:48,320 --> 00:05:50,240
terms of that canonical basis so

150
00:05:50,240 --> 00:05:50,960
everyone

151
00:05:50,960 --> 00:05:53,120
can recover p and q and these

152
00:05:53,120 --> 00:05:54,720
coefficients are just

153
00:05:54,720 --> 00:05:57,840
half the bit length of the prime p so in

154
00:05:57,840 --> 00:05:58,400
total

155
00:05:58,400 --> 00:06:02,240
only two log p would be transmitted

156
00:06:02,240 --> 00:06:04,400
an improvement to this approach was

157
00:06:04,400 --> 00:06:06,960
given by costello and others

158
00:06:06,960 --> 00:06:08,800
that showed that only three coefficients

159
00:06:08,800 --> 00:06:10,400
need to be transmitted

160
00:06:10,400 --> 00:06:12,240
the observations that during the

161
00:06:12,240 --> 00:06:13,759
compression

162
00:06:13,759 --> 00:06:16,240
we have to compute a subgroup generated

163
00:06:16,240 --> 00:06:17,280
by the point p

164
00:06:17,280 --> 00:06:20,400
plus sl times q and if you

165
00:06:20,400 --> 00:06:23,759
expand this out in terms of r and s

166
00:06:23,759 --> 00:06:27,520
you basically have um you can multiply

167
00:06:27,520 --> 00:06:30,639
this uh point by the inverse of ap

168
00:06:30,639 --> 00:06:33,840
if ap is invertible not l today and this

169
00:06:33,840 --> 00:06:37,039
still gives an equivalent sub group

170
00:06:37,039 --> 00:06:38,800
so basically you just need these three

171
00:06:38,800 --> 00:06:40,880
coefficients uh with multiples of

172
00:06:40,880 --> 00:06:45,280
ap inverse and if ap is not invertible

173
00:06:45,280 --> 00:06:47,520
by construction we will have that bp is

174
00:06:47,520 --> 00:06:50,319
going to be invertible because of this

175
00:06:50,319 --> 00:06:53,599
base change matrix

176
00:06:54,479 --> 00:06:56,800
so i haven't actually explained how to

177
00:06:56,800 --> 00:06:58,639
compute the four coefficients

178
00:06:58,639 --> 00:07:01,440
a's and b's so for example if you look

179
00:07:01,440 --> 00:07:03,599
at the structure of r

180
00:07:03,599 --> 00:07:06,319
it is decomposed into two cyclic

181
00:07:06,319 --> 00:07:07,120
subgroups

182
00:07:07,120 --> 00:07:10,160
generated by p and q

183
00:07:10,160 --> 00:07:12,319
and if you want to retrieve for example

184
00:07:12,319 --> 00:07:13,280
the coefficient

185
00:07:13,280 --> 00:07:16,319
ap you would have to project r

186
00:07:16,319 --> 00:07:19,680
onto that sub group generated by b

187
00:07:19,680 --> 00:07:22,000
and use pulley hammer for example

188
00:07:22,000 --> 00:07:24,560
because this is a smooth order

189
00:07:24,560 --> 00:07:28,720
subgroup so um

190
00:07:28,720 --> 00:07:31,680
in the original works the tool used to

191
00:07:31,680 --> 00:07:32,880
decompose

192
00:07:32,880 --> 00:07:36,000
uh r into this cyclic sub groups

193
00:07:36,000 --> 00:07:39,199
is the pairing so basically we are going

194
00:07:39,199 --> 00:07:39,599
to

195
00:07:39,599 --> 00:07:41,919
uh move this discrete logarithm

196
00:07:41,919 --> 00:07:42,960
instances

197
00:07:42,960 --> 00:07:45,680
onto the cyclic subgroups over the

198
00:07:45,680 --> 00:07:47,199
quadratic extension of

199
00:07:47,199 --> 00:07:50,960
the finite field and here are the

200
00:07:50,960 --> 00:07:54,000
uh five pairings suggested to do this

201
00:07:54,000 --> 00:07:55,520
computation

202
00:07:55,520 --> 00:07:57,280
actually the first one the pairing g

203
00:07:57,280 --> 00:07:58,800
which is the pairing between the points

204
00:07:58,800 --> 00:08:00,080
p and q

205
00:08:00,080 --> 00:08:03,120
can be pre-computed because we can

206
00:08:03,120 --> 00:08:04,800
work out the details and see that it

207
00:08:04,800 --> 00:08:07,360
only depends on public parameters

208
00:08:07,360 --> 00:08:09,360
but the other four need need to be

209
00:08:09,360 --> 00:08:10,639
computed

210
00:08:10,639 --> 00:08:14,000
on demand so also have this

211
00:08:14,000 --> 00:08:17,840
uh u's and v's uh basically

212
00:08:17,840 --> 00:08:19,280
these are going to be elements of a

213
00:08:19,280 --> 00:08:21,599
defined field and then you can just

214
00:08:21,599 --> 00:08:25,759
use pulley helmond to solve

215
00:08:25,759 --> 00:08:28,879
order l to the

216
00:08:28,960 --> 00:08:31,599
discrete logs over the finite field and

217
00:08:31,599 --> 00:08:33,440
then retrieve the actual

218
00:08:33,440 --> 00:08:37,360
four coefficients we now reveal how to

219
00:08:37,360 --> 00:08:39,279
compute smooth orders with logarithms

220
00:08:39,279 --> 00:08:40,799
over the finite field

221
00:08:40,799 --> 00:08:43,360
we are giving a generator g of order l

222
00:08:43,360 --> 00:08:43,839
to the a

223
00:08:43,839 --> 00:08:46,320
of the finite field and a challenge of

224
00:08:46,320 --> 00:08:48,000
the from g to the d

225
00:08:48,000 --> 00:08:50,880
where the exponent d is represented in

226
00:08:50,880 --> 00:08:52,000
base l

227
00:08:52,000 --> 00:08:54,720
where the digits uh are smaller numbers

228
00:08:54,720 --> 00:08:55,360
uh mod

229
00:08:55,360 --> 00:08:59,440
l so in the original uh pulley helmet

230
00:08:59,440 --> 00:09:01,279
it was suggested to solve this problem

231
00:09:01,279 --> 00:09:03,760
by computing a sequence r0 up to our e

232
00:09:03,760 --> 00:09:04,959
minus one

233
00:09:04,959 --> 00:09:07,600
where starter zero with the challenge

234
00:09:07,600 --> 00:09:09,519
and then you start recovering the

235
00:09:09,519 --> 00:09:11,120
partial digits or

236
00:09:11,120 --> 00:09:16,160
the 0 up to decay up to d minus 1

237
00:09:16,160 --> 00:09:19,440
by doing consecutive exponentiations by

238
00:09:19,440 --> 00:09:19,760
l

239
00:09:19,760 --> 00:09:22,800
and solving smaller discrete logarithms

240
00:09:22,800 --> 00:09:25,760
and then we're moving uh the the

241
00:09:25,760 --> 00:09:27,279
computed digits

242
00:09:27,279 --> 00:09:29,440
from the previous hours to compute the

243
00:09:29,440 --> 00:09:31,920
next hours

244
00:09:31,920 --> 00:09:35,760
so um so no atom in 2018

245
00:09:35,760 --> 00:09:38,000
showed how to reformulate this problem

246
00:09:38,000 --> 00:09:38,959
in terms of

247
00:09:38,959 --> 00:09:42,240
a graph very similar to the

248
00:09:42,240 --> 00:09:45,360
strategy used to solve

249
00:09:45,360 --> 00:09:48,399
and compute the smooth order isogens

250
00:09:48,399 --> 00:09:51,040
so basically uh the root of the graph is

251
00:09:51,040 --> 00:09:51,839
going to be

252
00:09:51,839 --> 00:09:54,640
the challenge and going to the left on

253
00:09:54,640 --> 00:09:55,279
the graph

254
00:09:55,279 --> 00:09:58,880
uh means uh raising to the power of l

255
00:09:58,880 --> 00:10:02,240
and going to the right going to a model

256
00:10:02,240 --> 00:10:05,279
removing a digit or multiplying by g to

257
00:10:05,279 --> 00:10:05,600
the

258
00:10:05,600 --> 00:10:09,040
minus l uh to the j plus k times the

259
00:10:09,040 --> 00:10:11,440
digit to decay so basically

260
00:10:11,440 --> 00:10:15,680
uh we can um using an optimal

261
00:10:15,680 --> 00:10:19,279
strategy to traverse this graph and

262
00:10:19,279 --> 00:10:19,760
compute

263
00:10:19,760 --> 00:10:23,040
all the digits and this was sort of

264
00:10:23,040 --> 00:10:26,399
expected uh as well it was mentioned by

265
00:10:26,399 --> 00:10:28,720
victor ship long time ago

266
00:10:28,720 --> 00:10:31,360
that there would be there would exist a

267
00:10:31,360 --> 00:10:33,600
optimization strategy for this problem

268
00:10:33,600 --> 00:10:34,560
but

269
00:10:34,560 --> 00:10:38,479
no one had given a solution before

270
00:10:38,880 --> 00:10:41,360
the nominal also showed that if we use a

271
00:10:41,360 --> 00:10:42,720
windowed version

272
00:10:42,720 --> 00:10:45,040
of the discrete logarithm meaning that

273
00:10:45,040 --> 00:10:46,880
we work with base l to the w

274
00:10:46,880 --> 00:10:49,600
instead of l to represent the digits we

275
00:10:49,600 --> 00:10:52,560
can do some nice pre-computation

276
00:10:52,560 --> 00:10:54,560
so basically we represent the digits in

277
00:10:54,560 --> 00:10:56,399
base capital l which is

278
00:10:56,399 --> 00:11:00,240
l to the w for some w and the

279
00:11:00,240 --> 00:11:02,720
right traversals will correspond to

280
00:11:02,720 --> 00:11:03,600
removing

281
00:11:03,600 --> 00:11:07,279
now large digits mod out to the w

282
00:11:07,279 --> 00:11:09,120
and the left traversals are going to

283
00:11:09,120 --> 00:11:11,600
correspond to raising the element to the

284
00:11:11,600 --> 00:11:12,800
power of

285
00:11:12,800 --> 00:11:16,560
capital l or l to the w so basically we

286
00:11:16,560 --> 00:11:18,640
have a much smaller

287
00:11:18,640 --> 00:11:22,320
graph basically we have size e over w

288
00:11:22,320 --> 00:11:22,880
instead of

289
00:11:22,880 --> 00:11:25,760
e but now going to the left is going to

290
00:11:25,760 --> 00:11:27,200
be more expensive

291
00:11:27,200 --> 00:11:30,079
because now we are powering by l to the

292
00:11:30,079 --> 00:11:30,959
top

293
00:11:30,959 --> 00:11:33,279
so basically to go to the bottom is

294
00:11:33,279 --> 00:11:34,160
going to

295
00:11:34,160 --> 00:11:35,519
when you go to the left is going to be

296
00:11:35,519 --> 00:11:37,760
the same cost as the original graph

297
00:11:37,760 --> 00:11:40,880
on the other hand going to the right

298
00:11:40,880 --> 00:11:44,560
can be made cheaper if you pre-compute

299
00:11:44,560 --> 00:11:47,680
this uh guy that is multiplied on the

300
00:11:47,680 --> 00:11:49,360
right here to remove the digits so

301
00:11:49,360 --> 00:11:50,959
basically

302
00:11:50,959 --> 00:11:54,959
you can introduce this table t u d k

303
00:11:54,959 --> 00:11:57,920
equal to those powers of g and because g

304
00:11:57,920 --> 00:11:58,720
is public

305
00:11:58,720 --> 00:12:01,839
you can do this per computation

306
00:12:01,839 --> 00:12:04,000
so basically the right at traversal is

307
00:12:04,000 --> 00:12:05,360
going to be a table lookup

308
00:12:05,360 --> 00:12:08,399
and one single multiplication

309
00:12:08,399 --> 00:12:10,240
and in this case the table size

310
00:12:10,240 --> 00:12:12,639
increases exponentially

311
00:12:12,639 --> 00:12:16,320
out of the w so in w so

312
00:12:16,320 --> 00:12:21,040
you can not go use a very large w but

313
00:12:21,040 --> 00:12:23,200
even for small w's you can do you can

314
00:12:23,200 --> 00:12:24,399
save some

315
00:12:24,399 --> 00:12:27,519
some multiplications

316
00:12:27,519 --> 00:12:30,639
we can now move on to the contributions

317
00:12:30,639 --> 00:12:32,000
so before going to the first

318
00:12:32,000 --> 00:12:33,920
optimization i should mention that the

319
00:12:33,920 --> 00:12:35,440
previous windowed pulley helmet

320
00:12:35,440 --> 00:12:37,600
technique works well when w divides the

321
00:12:37,600 --> 00:12:38,320
exponent

322
00:12:38,320 --> 00:12:41,600
e it turns out that for psych p 4 3 4

323
00:12:41,600 --> 00:12:45,279
and p 7 5 1 the exponential e is a prime

324
00:12:45,279 --> 00:12:47,120
number for the two version

325
00:12:47,120 --> 00:12:50,320
so no w is going to divide e

326
00:12:50,320 --> 00:12:52,800
so so no tao also suggested an approach

327
00:12:52,800 --> 00:12:54,160
to

328
00:12:54,160 --> 00:12:57,200
address this issue uh by using an extra

329
00:12:57,200 --> 00:12:58,959
table of the same size of the previous

330
00:12:58,959 --> 00:13:00,480
table t

331
00:13:00,480 --> 00:13:04,720
so uh in their approach let t be e mod w

332
00:13:04,720 --> 00:13:06,720
it's what's going to happen is that if

333
00:13:06,720 --> 00:13:08,240
you uh use it

334
00:13:08,240 --> 00:13:11,600
um the original uh this description

335
00:13:11,600 --> 00:13:14,079
by raising uh the elements to the power

336
00:13:14,079 --> 00:13:16,399
out of the w when you go to the left

337
00:13:16,399 --> 00:13:19,440
when you get to the first leaf here

338
00:13:19,440 --> 00:13:21,600
you basically get an element of order l

339
00:13:21,600 --> 00:13:23,680
to the t instead of l to the w so

340
00:13:23,680 --> 00:13:25,440
basically we are going to be recovering

341
00:13:25,440 --> 00:13:28,160
less information about the digits so

342
00:13:28,160 --> 00:13:31,600
what does the neutral proposed was to uh

343
00:13:31,600 --> 00:13:34,399
fix this uh the order of the elements in

344
00:13:34,399 --> 00:13:35,839
on the leaves

345
00:13:35,839 --> 00:13:38,880
by uh in the first

346
00:13:38,880 --> 00:13:42,079
uh the very first uh left traversal from

347
00:13:42,079 --> 00:13:44,079
the right most diagonal

348
00:13:44,079 --> 00:13:46,240
we are going to raise the elements by

349
00:13:46,240 --> 00:13:47,760
the power of l to the t

350
00:13:47,760 --> 00:13:49,760
instead of l to the w and then after

351
00:13:49,760 --> 00:13:51,440
that we just

352
00:13:51,440 --> 00:13:54,320
go as usual so basically this is going

353
00:13:54,320 --> 00:13:55,920
to fix the order of the elements

354
00:13:55,920 --> 00:13:57,600
and when they get to the leaves we can

355
00:13:57,600 --> 00:13:59,519
still recover the full digits except

356
00:13:59,519 --> 00:14:03,279
to the the right most one and uh for

357
00:14:03,279 --> 00:14:04,320
going to the right

358
00:14:04,320 --> 00:14:07,040
uh if you are at the right most diagonal

359
00:14:07,040 --> 00:14:07,920
you can

360
00:14:07,920 --> 00:14:10,240
just proceed as usual by removing the

361
00:14:10,240 --> 00:14:12,800
digits using a table t

362
00:14:12,800 --> 00:14:15,680
on the other hand when uh are below the

363
00:14:15,680 --> 00:14:16,000
uh

364
00:14:16,000 --> 00:14:19,519
rightmost diagonal the digits will be

365
00:14:19,519 --> 00:14:23,120
shifted uh by l to the t because of this

366
00:14:23,120 --> 00:14:23,440
uh

367
00:14:23,440 --> 00:14:26,160
first exponentiation so basically uh

368
00:14:26,160 --> 00:14:27,040
this table

369
00:14:27,040 --> 00:14:29,040
is not exactly what you need uh they

370
00:14:29,040 --> 00:14:31,120
suggested a shifted table

371
00:14:31,120 --> 00:14:33,199
that gives you the exact elements that

372
00:14:33,199 --> 00:14:35,680
you have to use to remove the digits

373
00:14:35,680 --> 00:14:37,839
and this new table has the same size of

374
00:14:37,839 --> 00:14:40,639
the previous one

375
00:14:40,959 --> 00:14:42,800
so in order to reduce the storage

376
00:14:42,800 --> 00:14:44,720
requirements we suggest the following

377
00:14:44,720 --> 00:14:45,680
approach

378
00:14:45,680 --> 00:14:48,160
let the discrete logarithm be written as

379
00:14:48,160 --> 00:14:49,839
q times l to the minus t

380
00:14:49,839 --> 00:14:51,600
plus r using the euclidean divisional

381
00:14:51,600 --> 00:14:53,839
gradient where q is just a small number

382
00:14:53,839 --> 00:14:56,000
less than l to the t

383
00:14:56,000 --> 00:14:58,079
so instead of computing the original log

384
00:14:58,079 --> 00:15:00,160
of the challenge in base g we suggest to

385
00:15:00,160 --> 00:15:01,199
compute

386
00:15:01,199 --> 00:15:03,760
log of the challenge to the l to the t

387
00:15:03,760 --> 00:15:05,600
base g to the delta t

388
00:15:05,600 --> 00:15:08,160
so now the exponent of the new challenge

389
00:15:08,160 --> 00:15:10,160
will be a multiple of w

390
00:15:10,160 --> 00:15:13,839
and then we can recover the remainder r

391
00:15:13,839 --> 00:15:16,399
so also have the remainder r we can note

392
00:15:16,399 --> 00:15:17,920
that the

393
00:15:17,920 --> 00:15:19,360
there is a relation between the

394
00:15:19,360 --> 00:15:21,040
challenge and

395
00:15:21,040 --> 00:15:24,320
the remainder r and the powers of g

396
00:15:24,320 --> 00:15:27,680
and the left hand side here c times g to

397
00:15:27,680 --> 00:15:28,480
the minus r

398
00:15:28,480 --> 00:15:31,519
can be computed once you have r and the

399
00:15:31,519 --> 00:15:32,880
right hand side

400
00:15:32,880 --> 00:15:36,320
um which involves small powers of

401
00:15:36,320 --> 00:15:39,600
g to the l minus t you can basically

402
00:15:39,600 --> 00:15:40,800
pre-compute

403
00:15:40,800 --> 00:15:43,920
so this is uh composed by public values

404
00:15:43,920 --> 00:15:45,839
and then you can create this table which

405
00:15:45,839 --> 00:15:48,320
we call it t small

406
00:15:48,320 --> 00:15:50,240
that has those powers and then it can

407
00:15:50,240 --> 00:15:51,759
just compare the

408
00:15:51,759 --> 00:15:55,199
table entries with this element to see

409
00:15:55,199 --> 00:15:58,560
what's the correct value for q

410
00:15:58,560 --> 00:16:01,519
and if you compare this new table with

411
00:16:01,519 --> 00:16:01,839
the

412
00:16:01,839 --> 00:16:04,880
the previous the shift the table uh

413
00:16:04,880 --> 00:16:07,279
proposed by the numerator we can see

414
00:16:07,279 --> 00:16:08,000
that we can

415
00:16:08,000 --> 00:16:11,759
basically reduce uh the entire table

416
00:16:11,759 --> 00:16:14,959
um can consume less than one percent of

417
00:16:14,959 --> 00:16:17,120
the size of the previous table

418
00:16:17,120 --> 00:16:19,839
so one of the remarks is that because we

419
00:16:19,839 --> 00:16:20,399
had

420
00:16:20,399 --> 00:16:24,240
uh even the uh the original table t

421
00:16:24,240 --> 00:16:27,360
in addition to t shift the overall uh

422
00:16:27,360 --> 00:16:29,519
reduction here is going to be a factor

423
00:16:29,519 --> 00:16:30,399
two

424
00:16:30,399 --> 00:16:33,519
uh when you compare with uh

425
00:16:33,519 --> 00:16:37,360
both tables t shift and t and

426
00:16:37,360 --> 00:16:40,000
this optimization applies to discrete

427
00:16:40,000 --> 00:16:40,639
logs

428
00:16:40,639 --> 00:16:42,480
of refined fields so it applies to

429
00:16:42,480 --> 00:16:43,839
official psych

430
00:16:43,839 --> 00:16:46,720
and we also be used when solving squid

431
00:16:46,720 --> 00:16:47,519
logs over

432
00:16:47,519 --> 00:16:50,800
elite curves so we learned

433
00:16:50,800 --> 00:16:52,639
how to project the discrete logarithms

434
00:16:52,639 --> 00:16:54,560
of r and s with respect to p

435
00:16:54,560 --> 00:16:57,600
and q by using uh bi-linear pairings and

436
00:16:57,600 --> 00:16:59,279
then solving discrete logarithms over

437
00:16:59,279 --> 00:17:01,040
finite fields

438
00:17:01,040 --> 00:17:03,440
it turns out that there's a way to avoid

439
00:17:03,440 --> 00:17:04,720
those pairings

440
00:17:04,720 --> 00:17:06,720
and just solving this with logarithms

441
00:17:06,720 --> 00:17:08,000
over

442
00:17:08,000 --> 00:17:13,039
the base field on the lead curve e0

443
00:17:13,599 --> 00:17:16,319
so equation one is stated in terms of

444
00:17:16,319 --> 00:17:17,359
the elliptic curve

445
00:17:17,359 --> 00:17:21,280
e which is the image public curve

446
00:17:21,280 --> 00:17:23,359
so it turns out that we can use the loop

447
00:17:23,359 --> 00:17:26,079
away solution if we had

448
00:17:26,079 --> 00:17:28,240
and efficiently uh move the problem back

449
00:17:28,240 --> 00:17:30,400
to the curve e6

450
00:17:30,400 --> 00:17:33,200
so uh this uh isogen if you had can be

451
00:17:33,200 --> 00:17:35,200
efficiently computed as described

452
00:17:35,200 --> 00:17:38,960
before by negan things so once you have

453
00:17:38,960 --> 00:17:40,480
moved the problem to

454
00:17:40,480 --> 00:17:42,720
e6 you can see that we still have the

455
00:17:42,720 --> 00:17:45,679
original coefficients that are preserved

456
00:17:45,679 --> 00:17:47,840
by the homomorphisms a property of the

457
00:17:47,840 --> 00:17:49,440
esogenes

458
00:17:49,440 --> 00:17:52,559
and then also our only six you can uh

459
00:17:52,559 --> 00:17:55,600
again uh translate the problem to the

460
00:17:55,600 --> 00:17:58,559
curve e0 using that two exogeny

461
00:17:58,559 --> 00:18:01,679
that connects them so

462
00:18:01,679 --> 00:18:04,640
uh basically

463
00:18:05,440 --> 00:18:08,960
the key idea now is that we can define

464
00:18:08,960 --> 00:18:11,039
an element g over the base field of

465
00:18:11,039 --> 00:18:13,200
order l to the n

466
00:18:13,200 --> 00:18:15,679
and you know that the trace of a point

467
00:18:15,679 --> 00:18:16,880
uh is always

468
00:18:16,880 --> 00:18:20,640
uh on the on the base field of e0

469
00:18:20,640 --> 00:18:23,520
so uh we can apply independently the

470
00:18:23,520 --> 00:18:25,520
trace map and also the trace map

471
00:18:25,520 --> 00:18:26,559
composed with

472
00:18:26,559 --> 00:18:29,600
the distortion epsilon 0 to get

473
00:18:29,600 --> 00:18:32,559
equations like this

474
00:18:33,120 --> 00:18:35,120
we are going to apply this to the

475
00:18:35,120 --> 00:18:37,200
equation 2 here

476
00:18:37,200 --> 00:18:40,400
and then we can see that

477
00:18:40,400 --> 00:18:42,960
the projection of the trace uh on the

478
00:18:42,960 --> 00:18:44,000
point b0

479
00:18:44,000 --> 00:18:47,280
q0 r0 and s0 are going to be multiples

480
00:18:47,280 --> 00:18:48,799
of that same

481
00:18:48,799 --> 00:18:51,679
generator g

482
00:18:52,480 --> 00:18:54,480
now by looking at the equations above we

483
00:18:54,480 --> 00:18:55,760
can see that

484
00:18:55,760 --> 00:18:57,840
recovering the discrete logarithms of

485
00:18:57,840 --> 00:18:59,679
the traces of the points p

486
00:18:59,679 --> 00:19:03,360
q r and s in base g we need to solve

487
00:19:03,360 --> 00:19:06,160
these eight discrete logarithms

488
00:19:06,160 --> 00:19:09,679
which are simpler over the base field

489
00:19:09,679 --> 00:19:12,960
and for example the first four squid

490
00:19:12,960 --> 00:19:14,080
logarithms

491
00:19:14,080 --> 00:19:17,600
only involve public points so they can

492
00:19:17,600 --> 00:19:19,120
be pre-computed

493
00:19:19,120 --> 00:19:22,799
so basically the last four need to be

494
00:19:22,799 --> 00:19:25,440
computed on demand and these are all

495
00:19:25,440 --> 00:19:27,600
over the base field

496
00:19:27,600 --> 00:19:29,840
and uh once you have computed and

497
00:19:29,840 --> 00:19:31,120
recovered this uh

498
00:19:31,120 --> 00:19:34,640
zetas and xs you can basically

499
00:19:34,640 --> 00:19:37,919
uh solve a linear system of equations

500
00:19:37,919 --> 00:19:39,360
over the integers

501
00:19:39,360 --> 00:19:42,400
model to the e to recover

502
00:19:42,400 --> 00:19:45,440
for example a b and b p you solve

503
00:19:45,440 --> 00:19:47,520
the system composed by equations three

504
00:19:47,520 --> 00:19:48,480
and five

505
00:19:48,480 --> 00:19:51,039
and to recover a q and b q you solve the

506
00:19:51,039 --> 00:19:53,280
system composed by equations

507
00:19:53,280 --> 00:19:57,120
4 and 6 by

508
00:19:57,120 --> 00:20:00,080
removing the the g in here and just

509
00:20:00,080 --> 00:20:00,720
working with

510
00:20:00,720 --> 00:20:03,360
integers

511
00:20:04,080 --> 00:20:05,840
now the instance of the discrete

512
00:20:05,840 --> 00:20:07,360
logarithms we have to solve

513
00:20:07,360 --> 00:20:11,520
are over the initial curve e0 over fb

514
00:20:11,520 --> 00:20:13,760
and the modeling to solve this uh

515
00:20:13,760 --> 00:20:15,679
logarithm via pulley helmond is very

516
00:20:15,679 --> 00:20:18,080
similar to defined field case

517
00:20:18,080 --> 00:20:20,799
where you just start with the challenges

518
00:20:20,799 --> 00:20:22,720
being the root of the tree which is now

519
00:20:22,720 --> 00:20:25,840
is going to be a point uh on the curve

520
00:20:25,840 --> 00:20:28,720
writing additive notation here and

521
00:20:28,720 --> 00:20:29,679
basically

522
00:20:29,679 --> 00:20:32,320
uh going to the left now instead of

523
00:20:32,320 --> 00:20:33,360
raising to the power of

524
00:20:33,360 --> 00:20:36,400
l you just multiply the point uh

525
00:20:36,400 --> 00:20:40,000
by l and going to the right is just

526
00:20:40,000 --> 00:20:41,039
removing a digit

527
00:20:41,039 --> 00:20:44,720
by doing a point subtraction

528
00:20:44,720 --> 00:20:48,159
and uh we should note that now

529
00:20:48,159 --> 00:20:51,440
the sign of the point the y

530
00:20:51,440 --> 00:20:53,120
coordinate of the point will make a

531
00:20:53,120 --> 00:20:54,880
difference so basically we have to work

532
00:20:54,880 --> 00:20:56,320
with full protective

533
00:20:56,320 --> 00:20:59,120
coordinates and we did some

534
00:20:59,120 --> 00:21:00,720
investigation of different

535
00:21:00,720 --> 00:21:03,600
curve models to do this uh

536
00:21:03,600 --> 00:21:04,960
multiplications by l

537
00:21:04,960 --> 00:21:06,799
two or three a point doubling or

538
00:21:06,799 --> 00:21:08,559
tripling and uh

539
00:21:08,559 --> 00:21:11,280
point to detraction when we found that

540
00:21:11,280 --> 00:21:12,960
for l equal to three

541
00:21:12,960 --> 00:21:16,159
uh projective twisted edwards model

542
00:21:16,159 --> 00:21:19,600
gives the best formulas and for lco2 the

543
00:21:19,600 --> 00:21:21,360
inverted twisted adwords

544
00:21:21,360 --> 00:21:24,960
model will give the best formula for us

545
00:21:24,960 --> 00:21:29,520
and here we should mention that

546
00:21:29,520 --> 00:21:31,360
solving the small discrete logarithms

547
00:21:31,360 --> 00:21:33,679
are the leaves

548
00:21:33,679 --> 00:21:36,799
you can still use tables

549
00:21:36,799 --> 00:21:40,640
for computing those multiples of the

550
00:21:40,640 --> 00:21:42,080
generator

551
00:21:42,080 --> 00:21:44,559
but the thing is that to compare with

552
00:21:44,559 --> 00:21:47,200
the table entries uh we still have to do

553
00:21:47,200 --> 00:21:49,440
uh some extra field multiplications

554
00:21:49,440 --> 00:21:51,600
because we have projected points

555
00:21:51,600 --> 00:21:54,880
uh as the leaves so there's uh

556
00:21:54,880 --> 00:21:58,000
some extra multiplication still within

557
00:21:58,000 --> 00:21:59,840
another optimization that i call it two

558
00:21:59,840 --> 00:22:02,240
prime here regards the case where l is

559
00:22:02,240 --> 00:22:03,440
equal to two

560
00:22:03,440 --> 00:22:06,159
it turns out that in this case uh

561
00:22:06,159 --> 00:22:09,039
reconstructing the original coefficient

562
00:22:09,039 --> 00:22:12,000
is not trivial so basically there is an

563
00:22:12,000 --> 00:22:12,559
issue

564
00:22:12,559 --> 00:22:15,039
when we try to move the problem from the

565
00:22:15,039 --> 00:22:17,679
curve e6 to the curve is zero

566
00:22:17,679 --> 00:22:20,000
uh because now the order of the points

567
00:22:20,000 --> 00:22:22,559
have r is 2 to the m

568
00:22:22,559 --> 00:22:24,559
which is not co-prime to the degree of

569
00:22:24,559 --> 00:22:26,559
the esogenic which is 2.

570
00:22:26,559 --> 00:22:29,600
so basically what can happen is that the

571
00:22:29,600 --> 00:22:31,840
kernel generator of desogyny

572
00:22:31,840 --> 00:22:34,640
phi 2 may be a multiple of any of these

573
00:22:34,640 --> 00:22:35,600
two points

574
00:22:35,600 --> 00:22:39,200
r6 or s6 and in this case

575
00:22:39,200 --> 00:22:40,960
the resulting points the image points

576
00:22:40,960 --> 00:22:42,480
are zero or is

577
00:22:42,480 --> 00:22:44,640
zero is not going to be a full order

578
00:22:44,640 --> 00:22:45,600
point

579
00:22:45,600 --> 00:22:47,360
so we may lose some information about

580
00:22:47,360 --> 00:22:50,880
the coefficients a's and b's

581
00:22:50,880 --> 00:22:53,600
and in the paper we give two different

582
00:22:53,600 --> 00:22:55,120
approaches

583
00:22:55,120 --> 00:22:57,440
for this problem which turned it out to

584
00:22:57,440 --> 00:22:59,120
be non-trivial

585
00:22:59,120 --> 00:23:01,919
and the first one is simpler but it has

586
00:23:01,919 --> 00:23:04,559
twice as sturdy as the second one

587
00:23:04,559 --> 00:23:06,840
and then the second one which is more

588
00:23:06,840 --> 00:23:08,480
elaborate

589
00:23:08,480 --> 00:23:10,320
we can we were able to reduce this

590
00:23:10,320 --> 00:23:12,080
astrology requirement

591
00:23:12,080 --> 00:23:14,000
so if you want to see all the tricks and

592
00:23:14,000 --> 00:23:15,679
ideas behind them

593
00:23:15,679 --> 00:23:19,440
you can have a look at the paper

594
00:23:20,080 --> 00:23:22,240
now we move on to the results and final

595
00:23:22,240 --> 00:23:23,919
remarks

596
00:23:23,919 --> 00:23:26,000
so we have implemented our algorithms in

597
00:23:26,000 --> 00:23:27,919
magma to validate our ideas

598
00:23:27,919 --> 00:23:31,039
and for example in the case of psycp-751

599
00:23:31,039 --> 00:23:32,640
and now we go to three

600
00:23:32,640 --> 00:23:35,039
we have some storage figures compared to

601
00:23:35,039 --> 00:23:36,480
previous works

602
00:23:36,480 --> 00:23:38,799
so basically if you look at the total

603
00:23:38,799 --> 00:23:40,480
storage size

604
00:23:40,480 --> 00:23:43,520
we are improving by um a ratio of

605
00:23:43,520 --> 00:23:47,039
28 or 20 depending on the torsion we are

606
00:23:47,039 --> 00:23:48,559
working on

607
00:23:48,559 --> 00:23:51,760
and in terms of

608
00:23:51,760 --> 00:23:54,000
time performance when you look at the

609
00:23:54,000 --> 00:23:56,080
number of fp multiplications

610
00:23:56,080 --> 00:23:59,520
equivalent um basically um

611
00:23:59,520 --> 00:24:03,120
our work is faster if in the case where

612
00:24:03,120 --> 00:24:06,720
no pre-computation is used it's about 24

613
00:24:06,720 --> 00:24:07,760
to 48

614
00:24:07,760 --> 00:24:10,640
percent faster depending on the version

615
00:24:10,640 --> 00:24:11,039
uh

616
00:24:11,039 --> 00:24:14,240
but when pre-computation is used uh it's

617
00:24:14,240 --> 00:24:15,760
a bit slower

618
00:24:15,760 --> 00:24:19,279
um because of the the structure of the

619
00:24:19,279 --> 00:24:22,400
discrete login over the elliptic curve

620
00:24:22,400 --> 00:24:24,400
so in summary we gave a new technique

621
00:24:24,400 --> 00:24:26,320
that improved memory requirements

622
00:24:26,320 --> 00:24:28,720
when solving discrete logarithms and

623
00:24:28,720 --> 00:24:30,000
based out to the w

624
00:24:30,000 --> 00:24:32,559
where w does not divide the exponent

625
00:24:32,559 --> 00:24:34,559
this applies to official psych and also

626
00:24:34,559 --> 00:24:35,440
for

627
00:24:35,440 --> 00:24:37,520
the elliptic curve version of the sweet

628
00:24:37,520 --> 00:24:38,799
logarithm

629
00:24:38,799 --> 00:24:40,960
and we also proposed an alternative

630
00:24:40,960 --> 00:24:42,080
approach to

631
00:24:42,080 --> 00:24:44,480
map dead squid logarithms to ellipt

632
00:24:44,480 --> 00:24:46,559
curves with logarithms instead of using

633
00:24:46,559 --> 00:24:48,000
pairings

634
00:24:48,000 --> 00:24:51,840
and this new approach provides improved

635
00:24:51,840 --> 00:24:52,799
storage

636
00:24:52,799 --> 00:24:55,600
compared to previous techniques and it

637
00:24:55,600 --> 00:24:56,880
is faster when

638
00:24:56,880 --> 00:25:00,320
no pre-computation is used

639
00:25:00,320 --> 00:25:03,840
thank you for your attention

