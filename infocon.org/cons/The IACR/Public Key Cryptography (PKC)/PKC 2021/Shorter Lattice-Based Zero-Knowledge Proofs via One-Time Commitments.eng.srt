1
00:00:02,080 --> 00:00:03,520
hi everyone my name is

2
00:00:03,520 --> 00:00:05,839
khan i'm a phd student at ibm research

3
00:00:05,839 --> 00:00:06,879
zurich and eth

4
00:00:06,879 --> 00:00:09,280
survey and today i'm going to talk about

5
00:00:09,280 --> 00:00:10,880
shorter lattice-based zero-knowledge

6
00:00:10,880 --> 00:00:13,120
proofs via one-time commitments

7
00:00:13,120 --> 00:00:14,559
so this is joint work with vadim

8
00:00:14,559 --> 00:00:18,000
lubashevsky and gregor seiler

9
00:00:18,000 --> 00:00:21,600
okay so in this area of lattice based on

10
00:00:21,600 --> 00:00:24,800
knowledge proofs the statements are

11
00:00:24,800 --> 00:00:26,640
usually of the following form

12
00:00:26,640 --> 00:00:29,359
we want to prove knowledge of a vector s

13
00:00:29,359 --> 00:00:31,519
which has small coefficients for example

14
00:00:31,519 --> 00:00:34,800
binary or ternary

15
00:00:35,040 --> 00:00:36,399
and we want to prove some linear

16
00:00:36,399 --> 00:00:38,879
relations about it so

17
00:00:38,879 --> 00:00:41,120
given the public matrix a and some

18
00:00:41,120 --> 00:00:42,480
public vector u

19
00:00:42,480 --> 00:00:46,000
you want to prove that a s is equal to u

20
00:00:46,000 --> 00:00:49,360
so in terms of the underlying ring this

21
00:00:49,360 --> 00:00:51,840
can be over the integers modulus of

22
00:00:51,840 --> 00:00:52,960
prime q

23
00:00:52,960 --> 00:00:56,559
or over some polynomial ring

24
00:00:57,520 --> 00:01:00,960
so there have been many recent works

25
00:01:00,960 --> 00:01:04,080
which use lattice commitments to prove

26
00:01:04,080 --> 00:01:05,680
such statements

27
00:01:05,680 --> 00:01:10,000
and they mostly consider practical

28
00:01:10,000 --> 00:01:13,840
um practical um well statements which

29
00:01:13,840 --> 00:01:14,320
can be

30
00:01:14,320 --> 00:01:17,360
directly applied to construct

31
00:01:17,360 --> 00:01:19,600
some cryptographic primitives like group

32
00:01:19,600 --> 00:01:22,000
signatures or ring signatures

33
00:01:22,000 --> 00:01:26,000
uh in this setting well so the security

34
00:01:26,000 --> 00:01:29,119
of these schemes are rely on

35
00:01:29,119 --> 00:01:32,560
quantum safe assumptions like presumably

36
00:01:32,560 --> 00:01:35,600
like module lwe or module cis

37
00:01:35,600 --> 00:01:39,360
and then um the runtime is also pretty

38
00:01:39,360 --> 00:01:41,600
fast they can be efficiently implemented

39
00:01:41,600 --> 00:01:43,040
because

40
00:01:43,040 --> 00:01:44,960
because one can make use of the

41
00:01:44,960 --> 00:01:47,200
algebraic structure of the underlying

42
00:01:47,200 --> 00:01:48,799
polynomial ring

43
00:01:48,799 --> 00:01:51,680
for example using ntts and so on and

44
00:01:51,680 --> 00:01:53,040
then

45
00:01:53,040 --> 00:01:55,439
so the runtime is pretty fast on the

46
00:01:55,439 --> 00:01:56,240
other hand

47
00:01:56,240 --> 00:01:58,960
well in terms of the concrete proof size

48
00:01:58,960 --> 00:02:00,399
it can still be

49
00:02:00,399 --> 00:02:03,600
uh pretty small but then

50
00:02:03,600 --> 00:02:06,479
asymptotically the proof size is kind of

51
00:02:06,479 --> 00:02:09,199
linear in the number of commitments or

52
00:02:09,199 --> 00:02:11,920
all the size of the witness so if the

53
00:02:11,920 --> 00:02:13,200
statement or

54
00:02:13,200 --> 00:02:14,959
if the statement gets bigger or if the

55
00:02:14,959 --> 00:02:18,000
witness gets bigger then the proof size

56
00:02:18,000 --> 00:02:22,400
might just blow well then

57
00:02:22,400 --> 00:02:24,720
there is more generic approach for

58
00:02:24,720 --> 00:02:27,760
example the pcp

59
00:02:27,760 --> 00:02:30,800
which yeah they um the proof size

60
00:02:30,800 --> 00:02:33,760
becomes sublinear or even logarithmic

61
00:02:33,760 --> 00:02:34,560
then

62
00:02:34,560 --> 00:02:36,560
they rely on collision resistant hash

63
00:02:36,560 --> 00:02:38,959
functions which is also quantum safe

64
00:02:38,959 --> 00:02:40,800
but then the runtime is pretty slow

65
00:02:40,800 --> 00:02:42,080
compared to the lattices

66
00:02:42,080 --> 00:02:43,840
especially the part where you have to

67
00:02:43,840 --> 00:02:45,920
hash a lot

68
00:02:45,920 --> 00:02:47,680
and this might be actually very

69
00:02:47,680 --> 00:02:49,680
important if we want to

70
00:02:49,680 --> 00:02:51,599
implement these protocols on constrained

71
00:02:51,599 --> 00:02:52,720
devices

72
00:02:52,720 --> 00:02:55,599
so we want to have we want the protocols

73
00:02:55,599 --> 00:02:56,080
to be

74
00:02:56,080 --> 00:02:58,720
efficiently implemented and have some

75
00:02:58,720 --> 00:03:01,680
small proof size

76
00:03:01,680 --> 00:03:04,959
so actually there there are

77
00:03:04,959 --> 00:03:08,000
so there have been a few

78
00:03:08,000 --> 00:03:10,959
um recent papers which consider

79
00:03:10,959 --> 00:03:13,120
sublinear constructions using lattice

80
00:03:13,120 --> 00:03:14,400
commitments

81
00:03:14,400 --> 00:03:17,519
and um so this is a very

82
00:03:17,519 --> 00:03:20,319
active area of current research so in

83
00:03:20,319 --> 00:03:22,400
terms of concrete

84
00:03:22,400 --> 00:03:25,760
sizes they might still not be as good as

85
00:03:25,760 --> 00:03:26,879
the linear ones

86
00:03:26,879 --> 00:03:31,440
but this shows that there is still some

87
00:03:31,440 --> 00:03:35,280
space to improve okay so

88
00:03:35,280 --> 00:03:38,480
if we look at all these solutions using

89
00:03:38,480 --> 00:03:40,000
lattice commitments

90
00:03:40,000 --> 00:03:42,640
so in order to ensure the zero knowledge

91
00:03:42,640 --> 00:03:43,599
property

92
00:03:43,599 --> 00:03:45,599
they make use of the rejection sampling

93
00:03:45,599 --> 00:03:48,080
so we'll just briefly recall what that

94
00:03:48,080 --> 00:03:49,519
is

95
00:03:49,519 --> 00:03:52,159
so suppose we have the example we want

96
00:03:52,159 --> 00:03:53,519
to prove

97
00:03:53,519 --> 00:03:56,319
knowledge of an s such that a s is equal

98
00:03:56,319 --> 00:03:58,000
to u

99
00:03:58,000 --> 00:04:01,840
over some ring so okay so we will just

100
00:04:01,840 --> 00:04:03,040
do that

101
00:04:03,040 --> 00:04:06,080
simple snore like protocol

102
00:04:06,080 --> 00:04:09,040
um so we have the prover who knows a s

103
00:04:09,040 --> 00:04:09,519
and u

104
00:04:09,519 --> 00:04:11,840
and we have the verifier who knows a and

105
00:04:11,840 --> 00:04:13,200
u

106
00:04:13,200 --> 00:04:16,798
um so actually nowadays they should act

107
00:04:16,798 --> 00:04:21,120
yeah they should wear a mask but um

108
00:04:21,120 --> 00:04:23,040
so just assume that they are quite far

109
00:04:23,040 --> 00:04:24,800
away and maybe outdoors so

110
00:04:24,800 --> 00:04:27,600
let's say they don't have the masks um

111
00:04:27,600 --> 00:04:28,160
yeah

112
00:04:28,160 --> 00:04:32,000
so the prover generates some y

113
00:04:32,000 --> 00:04:34,639
in this case we use the gaussian

114
00:04:34,639 --> 00:04:36,160
rejection sampling

115
00:04:36,160 --> 00:04:39,600
so y is chosen from a discrete gaussian

116
00:04:39,600 --> 00:04:42,160
and dimensional with a standard

117
00:04:42,160 --> 00:04:43,919
deviation sigma

118
00:04:43,919 --> 00:04:46,479
and then the prover computes w which is

119
00:04:46,479 --> 00:04:47,040
a times

120
00:04:47,040 --> 00:04:51,199
y so it sends the w

121
00:04:51,199 --> 00:04:54,800
and then the verifier generates a

122
00:04:54,800 --> 00:04:55,680
challenge c

123
00:04:55,680 --> 00:04:58,000
and then sends it to the approver and

124
00:04:58,000 --> 00:04:58,880
then the approval

125
00:04:58,880 --> 00:05:02,800
sends this z which is equal to y plus cs

126
00:05:02,800 --> 00:05:05,280
then the verifier checks that z is small

127
00:05:05,280 --> 00:05:06,320
and then a z

128
00:05:06,320 --> 00:05:09,680
is equal to w plus c u

129
00:05:09,680 --> 00:05:12,880
so we observe that the distribution of

130
00:05:12,880 --> 00:05:14,240
set

131
00:05:14,240 --> 00:05:17,360
is well depends on the s right depends

132
00:05:17,360 --> 00:05:18,880
on the secret

133
00:05:18,880 --> 00:05:22,080
so the the main idea of the rejection

134
00:05:22,080 --> 00:05:23,199
sampling

135
00:05:23,199 --> 00:05:25,840
is to force the distribution of z to be

136
00:05:25,840 --> 00:05:26,639
independent

137
00:05:26,639 --> 00:05:29,440
of the secret so now like in this in

138
00:05:29,440 --> 00:05:30,639
this case

139
00:05:30,639 --> 00:05:32,720
z is actually the distribution of z is

140
00:05:32,720 --> 00:05:35,039
actually the discrete gaussian

141
00:05:35,039 --> 00:05:37,919
well shifted discrete gaussian centered

142
00:05:37,919 --> 00:05:38,240
at

143
00:05:38,240 --> 00:05:42,320
c times s right so the idea here is to

144
00:05:42,320 --> 00:05:44,639
force the distribution to be

145
00:05:44,639 --> 00:05:49,120
the gaussian centered at zero

146
00:05:50,080 --> 00:05:53,440
so because then if we can force it this

147
00:05:53,440 --> 00:05:53,840
way

148
00:05:53,840 --> 00:05:56,160
then we can simulate the transcripts

149
00:05:56,160 --> 00:05:59,440
without knowing the secret

150
00:05:59,680 --> 00:06:01,520
okay so let's have a look at this the

151
00:06:01,520 --> 00:06:03,919
following rejection sampling algorithm

152
00:06:03,919 --> 00:06:07,440
which is basically what the prover does

153
00:06:07,440 --> 00:06:11,440
so we sample y and then we sample

154
00:06:11,440 --> 00:06:14,240
v well v will be the secret from some

155
00:06:14,240 --> 00:06:15,759
distribution h

156
00:06:15,759 --> 00:06:18,840
and then we set z to be equal to y plus

157
00:06:18,840 --> 00:06:20,080
v

158
00:06:20,080 --> 00:06:23,280
and here v in our case v is equal to c

159
00:06:23,280 --> 00:06:26,400
times s basically and then we output z

160
00:06:26,400 --> 00:06:26,800
and v

161
00:06:26,800 --> 00:06:30,080
with probability well uh

162
00:06:30,080 --> 00:06:33,039
the minimum of one and the probability

163
00:06:33,039 --> 00:06:34,080
of getting z

164
00:06:34,080 --> 00:06:37,680
from the uh centered well from the

165
00:06:37,680 --> 00:06:39,919
discrete gaussian centered at zero

166
00:06:39,919 --> 00:06:40,800
divided by

167
00:06:40,800 --> 00:06:43,600
some parameter m times the probability

168
00:06:43,600 --> 00:06:43,840
of

169
00:06:43,840 --> 00:06:46,479
getting z from the shifted discrete

170
00:06:46,479 --> 00:06:47,199
gaussian

171
00:06:47,199 --> 00:06:50,479
centered at v

172
00:06:51,360 --> 00:06:53,919
and then we have the simulation sampling

173
00:06:53,919 --> 00:06:56,080
algorithm where we just sample v

174
00:06:56,080 --> 00:06:58,960
like before and then we sample set from

175
00:06:58,960 --> 00:07:00,160
from a discrete

176
00:07:00,160 --> 00:07:02,479
gaussian centered at zero and then we

177
00:07:02,479 --> 00:07:03,440
output z and v

178
00:07:03,440 --> 00:07:06,800
with probability one over m so this n

179
00:07:06,800 --> 00:07:08,560
this parameter m we will call the

180
00:07:08,560 --> 00:07:10,240
repetition rate

181
00:07:10,240 --> 00:07:13,039
which basically means that if we run it

182
00:07:13,039 --> 00:07:13,680
uh

183
00:07:13,680 --> 00:07:16,319
m times then it should accept at some

184
00:07:16,319 --> 00:07:18,639
point

185
00:07:19,039 --> 00:07:22,319
so these so the result by lubashevsky

186
00:07:22,319 --> 00:07:24,880
says that these distributions are

187
00:07:24,880 --> 00:07:27,039
basically very close so what do we mean

188
00:07:27,039 --> 00:07:28,720
by close what's the distance between

189
00:07:28,720 --> 00:07:30,560
these two algorithms

190
00:07:30,560 --> 00:07:33,599
so the distance basically depends

191
00:07:33,599 --> 00:07:37,199
on how often this term here is less than

192
00:07:37,199 --> 00:07:37,599
one

193
00:07:37,599 --> 00:07:41,360
or less or equal to one so if we choose

194
00:07:41,360 --> 00:07:44,720
m so that for all that it's always

195
00:07:44,720 --> 00:07:46,400
less than or equal to one then they will

196
00:07:46,400 --> 00:07:48,879
be identical

197
00:07:48,879 --> 00:07:51,280
but in practice well we will just see

198
00:07:51,280 --> 00:07:52,400
how m is

199
00:07:52,400 --> 00:07:55,680
chosen usually it happens with

200
00:07:55,680 --> 00:07:57,759
overwhelming probability and then that's

201
00:07:57,759 --> 00:07:59,680
why these two distributions are

202
00:07:59,680 --> 00:08:03,039
statistically close so how is

203
00:08:03,039 --> 00:08:06,240
m chosen okay so

204
00:08:06,240 --> 00:08:08,800
what we do is that we take we look at

205
00:08:08,800 --> 00:08:11,360
the maximum over set

206
00:08:11,360 --> 00:08:14,400
of this of this well probability of

207
00:08:14,400 --> 00:08:15,919
getting said from the

208
00:08:15,919 --> 00:08:19,199
shifted discrete gaussian divided by

209
00:08:19,199 --> 00:08:21,919
the probability of getting said from the

210
00:08:21,919 --> 00:08:22,560
um

211
00:08:22,560 --> 00:08:26,879
well discrete gaussian centered at zero

212
00:08:26,879 --> 00:08:29,039
and then if we just do the math we end

213
00:08:29,039 --> 00:08:30,319
up with the

214
00:08:30,319 --> 00:08:34,399
maximum over set of e to the minus two

215
00:08:34,399 --> 00:08:37,039
times the inner product of z and v plus

216
00:08:37,039 --> 00:08:37,919
the norm of v

217
00:08:37,919 --> 00:08:41,760
squared divided by 2 sigma squared

218
00:08:41,760 --> 00:08:44,560
so now we will use the tailbone

219
00:08:44,560 --> 00:08:46,399
inequality

220
00:08:46,399 --> 00:08:49,200
which says that if z is chosen from a

221
00:08:49,200 --> 00:08:50,880
discrete gaussian then

222
00:08:50,880 --> 00:08:53,440
the absolute value of the inner product

223
00:08:53,440 --> 00:08:54,640
is less or equal to

224
00:08:54,640 --> 00:08:57,600
12 times the standard deviation sigma

225
00:08:57,600 --> 00:08:58,959
times the norm of v

226
00:08:58,959 --> 00:09:01,920
with probability at least one minus 2 to

227
00:09:01,920 --> 00:09:04,320
the minus 100

228
00:09:04,320 --> 00:09:08,240
and then we set m to be equal to

229
00:09:08,240 --> 00:09:10,480
well to that expression e to the 24

230
00:09:10,480 --> 00:09:12,240
sigma times norm of v

231
00:09:12,240 --> 00:09:14,320
plus norm of v squared divided by two

232
00:09:14,320 --> 00:09:17,040
sigma squared

233
00:09:17,519 --> 00:09:19,519
so concretely if you want to have the

234
00:09:19,519 --> 00:09:21,839
repetition rate equal to 3 which means

235
00:09:21,839 --> 00:09:22,880
that we would

236
00:09:22,880 --> 00:09:25,360
probably well most likely just repeated

237
00:09:25,360 --> 00:09:27,440
three times

238
00:09:27,440 --> 00:09:29,519
one says the standard deviation sigma

239
00:09:29,519 --> 00:09:32,560
equal to 11 times the norm of v

240
00:09:32,560 --> 00:09:34,160
so now the question is if we can do

241
00:09:34,160 --> 00:09:36,640
better so the main idea

242
00:09:36,640 --> 00:09:39,680
of this paper is is the observation that

243
00:09:39,680 --> 00:09:42,640
well what happens if we force the inner

244
00:09:42,640 --> 00:09:43,200
product

245
00:09:43,200 --> 00:09:45,680
to be greater or equal to zero so here

246
00:09:45,680 --> 00:09:48,640
we don't want to rely on the tail bound

247
00:09:48,640 --> 00:09:51,760
so what do we mean by that so

248
00:09:51,760 --> 00:09:53,519
this means that in the rejection

249
00:09:53,519 --> 00:09:55,279
sampling algorithm

250
00:09:55,279 --> 00:09:57,839
we have additional step which says that

251
00:09:57,839 --> 00:10:00,080
if the inner product is less than zero

252
00:10:00,080 --> 00:10:03,200
we reject and then

253
00:10:03,200 --> 00:10:05,200
similarly in the simulation sampling

254
00:10:05,200 --> 00:10:06,399
algorithm

255
00:10:06,399 --> 00:10:08,160
if the inner product is less than zero

256
00:10:08,160 --> 00:10:11,199
then we also reject

257
00:10:11,839 --> 00:10:15,120
so the we have the two results

258
00:10:15,120 --> 00:10:17,600
so yeah in terms of the proof technique

259
00:10:17,600 --> 00:10:19,760
and they are very similar to the

260
00:10:19,760 --> 00:10:22,800
paper by lubaszewski but basically

261
00:10:22,800 --> 00:10:26,160
if we choose m so that this term

262
00:10:26,160 --> 00:10:28,160
this fraction here is always less or

263
00:10:28,160 --> 00:10:29,760
equal to one and it's

264
00:10:29,760 --> 00:10:31,839
it all it will be as we will show in the

265
00:10:31,839 --> 00:10:32,880
next slide

266
00:10:32,880 --> 00:10:34,399
then these two distributions are

267
00:10:34,399 --> 00:10:37,440
identical and then the probability that

268
00:10:37,440 --> 00:10:39,279
rejection sampling algorithm output

269
00:10:39,279 --> 00:10:40,880
something is at least 1 over

270
00:10:40,880 --> 00:10:44,880
2m so why is it y over 2

271
00:10:44,880 --> 00:10:47,440
1 over two m and not one over n just

272
00:10:47,440 --> 00:10:48,560
like before

273
00:10:48,560 --> 00:10:52,160
so the idea is that um

274
00:10:52,160 --> 00:10:54,720
if set is chosen from a discrete cause

275
00:10:54,720 --> 00:10:56,320
and centered zero

276
00:10:56,320 --> 00:11:00,240
so we observe that it is symmetric

277
00:11:00,240 --> 00:11:02,480
so the probability that the inner

278
00:11:02,480 --> 00:11:03,360
product

279
00:11:03,360 --> 00:11:06,160
of z and v is greater or equal to zero

280
00:11:06,160 --> 00:11:07,519
is at least one half

281
00:11:07,519 --> 00:11:10,720
that's why this term one half comes in

282
00:11:10,720 --> 00:11:14,560
in the result 1b so the repetition rate

283
00:11:14,560 --> 00:11:15,279
is actually

284
00:11:15,279 --> 00:11:18,079
2m now

285
00:11:18,320 --> 00:11:20,320
okay so if we force the inner product to

286
00:11:20,320 --> 00:11:23,519
be greater or equal to zero

287
00:11:23,519 --> 00:11:26,640
then when we have this exp

288
00:11:26,640 --> 00:11:29,760
we can use that in the in the inequality

289
00:11:29,760 --> 00:11:33,279
here so we can bound this term

290
00:11:33,279 --> 00:11:36,640
by e to the well e to the

291
00:11:36,640 --> 00:11:38,880
norm of v squared divided by 2 sigma

292
00:11:38,880 --> 00:11:40,959
squared and this is

293
00:11:40,959 --> 00:11:44,160
how we pick m

294
00:11:44,160 --> 00:11:48,399
and now if uh if we set m to be one

295
00:11:48,399 --> 00:11:51,600
one and a half then we would

296
00:11:51,600 --> 00:11:54,560
set the standard deviation to be sigma

297
00:11:54,560 --> 00:11:55,680
equal to well

298
00:11:55,680 --> 00:12:00,639
sigma around 1.11 times the normal v

299
00:12:00,639 --> 00:12:03,040
and then the repetition rate now is 2m

300
00:12:03,040 --> 00:12:06,240
right so it's going to be 3.

301
00:12:06,959 --> 00:12:09,760
and using the previous method for the

302
00:12:09,760 --> 00:12:10,240
same

303
00:12:10,240 --> 00:12:13,680
rate we obtain sigma equal

304
00:12:13,680 --> 00:12:16,720
around 11 times norm of v so that's why

305
00:12:16,720 --> 00:12:17,440
we

306
00:12:17,440 --> 00:12:19,440
managed to decrease the standard

307
00:12:19,440 --> 00:12:24,079
deviation by a factor of 10.

308
00:12:24,079 --> 00:12:26,800
okay so let's go back to the protocol so

309
00:12:26,800 --> 00:12:27,920
what

310
00:12:27,920 --> 00:12:30,959
what happens here is that

311
00:12:30,959 --> 00:12:32,720
apart from using the standard rejection

312
00:12:32,720 --> 00:12:34,639
sampling we want to force the inner

313
00:12:34,639 --> 00:12:35,360
product of

314
00:12:35,360 --> 00:12:40,079
z and cs to be greater or equal to zero

315
00:12:40,079 --> 00:12:41,760
so yeah so if the inner product is less

316
00:12:41,760 --> 00:12:43,360
than zero we abort

317
00:12:43,360 --> 00:12:46,240
otherwise we we do the rejection

318
00:12:46,240 --> 00:12:48,240
sampling step as before and then we send

319
00:12:48,240 --> 00:12:50,560
the set

320
00:12:50,560 --> 00:12:52,720
but some people might notice that there

321
00:12:52,720 --> 00:12:54,959
is something fishy going on here

322
00:12:54,959 --> 00:12:58,880
so um the verifier actually knows

323
00:12:58,880 --> 00:13:02,000
so if if the verifier gets the set

324
00:13:02,000 --> 00:13:04,399
they know that the inner product of z

325
00:13:04,399 --> 00:13:06,399
and cs is greater or equal to

326
00:13:06,399 --> 00:13:10,320
zero right so in some settings

327
00:13:10,320 --> 00:13:13,120
this is not really secure because if for

328
00:13:13,120 --> 00:13:15,120
example if you want to construct a

329
00:13:15,120 --> 00:13:18,720
signature scheme from here then

330
00:13:18,720 --> 00:13:20,720
one might get a lot of information about

331
00:13:20,720 --> 00:13:22,000
the secret key

332
00:13:22,000 --> 00:13:24,480
just by having a lot of signatures

333
00:13:24,480 --> 00:13:25,040
because

334
00:13:25,040 --> 00:13:28,320
the verifying the verify knows z

335
00:13:28,320 --> 00:13:31,839
and c and and the sign

336
00:13:31,839 --> 00:13:35,760
that a sign of the inner products and cs

337
00:13:35,760 --> 00:13:38,880
so this already sounds fishy if you want

338
00:13:38,880 --> 00:13:40,079
to construct

339
00:13:40,079 --> 00:13:43,360
uh signature schemes from there

340
00:13:43,360 --> 00:13:45,839
from that

341
00:13:46,480 --> 00:13:50,000
okay so that's why in the title we have

342
00:13:50,000 --> 00:13:50,639
the

343
00:13:50,639 --> 00:13:53,839
phrase one-time commitments so let's see

344
00:13:53,839 --> 00:13:55,040
um

345
00:13:55,040 --> 00:13:59,279
so there are a few previous works which

346
00:13:59,279 --> 00:14:02,480
develop a framework for proving linear

347
00:14:02,480 --> 00:14:04,399
and multiplicative relations between the

348
00:14:04,399 --> 00:14:06,240
committed messages

349
00:14:06,240 --> 00:14:10,560
and it's very efficient um

350
00:14:10,560 --> 00:14:13,920
so then for

351
00:14:14,079 --> 00:14:18,320
okay so um so these protocols

352
00:14:18,320 --> 00:14:22,079
uh look look basically as follows

353
00:14:22,079 --> 00:14:24,880
so the proofer so the approver wants to

354
00:14:24,880 --> 00:14:26,880
prove some relations between them

355
00:14:26,880 --> 00:14:29,360
committed messages right so what the

356
00:14:29,360 --> 00:14:30,000
prover does

357
00:14:30,000 --> 00:14:34,959
is it generates fresh randomness r

358
00:14:34,959 --> 00:14:37,760
and then it sends the commitments to the

359
00:14:37,760 --> 00:14:38,399
messages

360
00:14:38,399 --> 00:14:43,440
with the randomness r so it sends the t

361
00:14:43,440 --> 00:14:47,120
so um it so these previous works use the

362
00:14:47,120 --> 00:14:50,160
bdlop commitment scheme

363
00:14:50,160 --> 00:14:52,720
and then okay so in between there are

364
00:14:52,720 --> 00:14:54,079
some fancy stuff

365
00:14:54,079 --> 00:14:57,040
fancy stuff happening to prove linear

366
00:14:57,040 --> 00:14:58,880
and multiplicative relations

367
00:14:58,880 --> 00:15:00,720
which are maybe not relevant to this

368
00:15:00,720 --> 00:15:02,639
talk

369
00:15:02,639 --> 00:15:05,680
um and then um

370
00:15:05,680 --> 00:15:08,720
yeah in the end the prover wants to to

371
00:15:08,720 --> 00:15:09,760
prove

372
00:15:09,760 --> 00:15:12,480
that they know the opening for these

373
00:15:12,480 --> 00:15:13,920
commitments so this is this

374
00:15:13,920 --> 00:15:16,720
opening proof so the verifier sends the

375
00:15:16,720 --> 00:15:17,440
c

376
00:15:17,440 --> 00:15:19,440
in the end which is the challenge and

377
00:15:19,440 --> 00:15:21,120
then the previous

378
00:15:21,120 --> 00:15:24,240
compute set equal to y plus cr

379
00:15:24,240 --> 00:15:27,440
and then if and then yeah we do the

380
00:15:27,440 --> 00:15:29,680
rejection sampling if it aborts then we

381
00:15:29,680 --> 00:15:30,160
abort

382
00:15:30,160 --> 00:15:33,680
otherwise we send the set and then

383
00:15:33,680 --> 00:15:36,880
the verifier checks if it uh checks the

384
00:15:36,880 --> 00:15:38,720
verification equations

385
00:15:38,720 --> 00:15:41,759
so what's new here is that we will

386
00:15:41,759 --> 00:15:45,920
force the inner product of z and cr

387
00:15:45,920 --> 00:15:49,040
to be well to be greater or equal to

388
00:15:49,040 --> 00:15:49,519
zero

389
00:15:49,519 --> 00:15:52,800
so if it's less than zero then we abort

390
00:15:52,800 --> 00:15:55,519
then yeah we we have the same argument

391
00:15:55,519 --> 00:15:57,519
meaning that the verifier can say okay i

392
00:15:57,519 --> 00:15:58,079
know

393
00:15:58,079 --> 00:16:01,519
the inner product of z and cr oh well

394
00:16:01,519 --> 00:16:04,560
they know the sign so yeah so they know

395
00:16:04,560 --> 00:16:05,360
that the sub

396
00:16:05,360 --> 00:16:07,839
that the inner product of z and cr is

397
00:16:07,839 --> 00:16:10,639
greater or equal to zero

398
00:16:10,639 --> 00:16:13,360
but that's actually okay because we in

399
00:16:13,360 --> 00:16:14,160
the proof

400
00:16:14,160 --> 00:16:17,040
we will only use the r ones so if you

401
00:16:17,040 --> 00:16:17,839
want to run

402
00:16:17,839 --> 00:16:20,079
a new proof we will generate new

403
00:16:20,079 --> 00:16:21,600
randomness

404
00:16:21,600 --> 00:16:24,880
so so this problem with the signature

405
00:16:24,880 --> 00:16:25,360
scheme

406
00:16:25,360 --> 00:16:28,560
doesn't really hold here

407
00:16:28,959 --> 00:16:32,160
so how do we prove to see well how do

408
00:16:32,160 --> 00:16:34,399
you prove zero knowledge in this case

409
00:16:34,399 --> 00:16:37,600
so these previous works like als ens

410
00:16:37,600 --> 00:16:41,279
lns they proved um the honest verified

411
00:16:41,279 --> 00:16:43,199
zero knowledge property

412
00:16:43,199 --> 00:16:45,519
by reducing it to the module lwe

413
00:16:45,519 --> 00:16:47,920
assumption

414
00:16:47,920 --> 00:16:51,440
um in this setting where we reveal

415
00:16:51,440 --> 00:16:54,959
that one bit uh we reduce

416
00:16:54,959 --> 00:16:57,040
the same that property to the hardness

417
00:16:57,040 --> 00:16:58,959
of the so-called extended

418
00:16:58,959 --> 00:17:02,959
module lwe which basically says that

419
00:17:02,959 --> 00:17:05,760
well it's kind of very very similar to

420
00:17:05,760 --> 00:17:06,799
the

421
00:17:06,799 --> 00:17:08,880
standard module lwe but there are some

422
00:17:08,880 --> 00:17:09,839
hints

423
00:17:09,839 --> 00:17:14,319
so we we have this we have the matrix a

424
00:17:14,319 --> 00:17:16,160
and then we have we want to distinguish

425
00:17:16,160 --> 00:17:18,000
between a times r

426
00:17:18,000 --> 00:17:21,760
and some uniform u and now we also have

427
00:17:21,760 --> 00:17:23,039
some hints right

428
00:17:23,039 --> 00:17:26,480
so c we have the c we have the

429
00:17:26,480 --> 00:17:30,240
vector z and the hint is that

430
00:17:30,240 --> 00:17:33,360
we also know the sign of the inner

431
00:17:33,360 --> 00:17:34,000
product

432
00:17:34,000 --> 00:17:37,200
of z and cr

433
00:17:38,480 --> 00:17:41,520
okay so the last question is

434
00:17:41,520 --> 00:17:44,400
why is this a reliable assumption so

435
00:17:44,400 --> 00:17:45,840
first of all

436
00:17:45,840 --> 00:17:48,880
we noticed that our non-algebraic

437
00:17:48,880 --> 00:17:49,919
version

438
00:17:49,919 --> 00:17:51,520
the non-algebraic version of our

439
00:17:51,520 --> 00:17:53,840
assumption is very similar to

440
00:17:53,840 --> 00:17:58,240
the extended lwe problem uh defined in

441
00:17:58,240 --> 00:18:00,160
in the paper by alpine sheriff and

442
00:18:00,160 --> 00:18:01,440
pykert

443
00:18:01,440 --> 00:18:04,000
and using very similar well the same

444
00:18:04,000 --> 00:18:06,000
techniques as in that paper we

445
00:18:06,000 --> 00:18:08,400
proved that our non-algebraic version

446
00:18:08,400 --> 00:18:11,840
can be reduced to plain lwe

447
00:18:11,840 --> 00:18:15,039
so next well the hardness of

448
00:18:15,039 --> 00:18:19,520
ring module lwe is often analyzed as the

449
00:18:19,520 --> 00:18:22,160
plain lwe problem because so far the

450
00:18:22,160 --> 00:18:23,120
best

451
00:18:23,120 --> 00:18:26,480
no attacks don't really use

452
00:18:26,480 --> 00:18:28,480
any algebraic structure of the

453
00:18:28,480 --> 00:18:31,360
polynomial ring

454
00:18:32,080 --> 00:18:34,320
and actually in terms of concrete

455
00:18:34,320 --> 00:18:35,520
analysis

456
00:18:35,520 --> 00:18:38,799
solving search lwe is actually more

457
00:18:38,799 --> 00:18:40,320
efficient than solving the decisional

458
00:18:40,320 --> 00:18:42,160
version of lwe

459
00:18:42,160 --> 00:18:44,880
so if we look at our problem as the

460
00:18:44,880 --> 00:18:46,720
search version

461
00:18:46,720 --> 00:18:50,160
then revealing one bit

462
00:18:50,160 --> 00:18:53,440
about r shouldn't really make much

463
00:18:53,440 --> 00:18:55,200
difference because the

464
00:18:55,200 --> 00:18:57,840
vector randomness vector r has high

465
00:18:57,840 --> 00:18:59,760
enough entropy

466
00:18:59,760 --> 00:19:02,880
so that's why we believe that uh our

467
00:19:02,880 --> 00:19:06,559
assumption is uh makes sense

468
00:19:06,559 --> 00:19:10,000
and it's reliable okay so in terms of

469
00:19:10,000 --> 00:19:10,640
concrete

470
00:19:10,640 --> 00:19:14,240
improvements uh we take three examples

471
00:19:14,240 --> 00:19:16,000
from the previous works

472
00:19:16,000 --> 00:19:18,880
so um for the proof of knowledge of an

473
00:19:18,880 --> 00:19:20,799
lwe sample

474
00:19:20,799 --> 00:19:23,760
the previous works obtained 47 kilobytes

475
00:19:23,760 --> 00:19:24,400
proof

476
00:19:24,400 --> 00:19:27,360
and here we reduce it to a little bit

477
00:19:27,360 --> 00:19:30,000
more than 33 kilobytes

478
00:19:30,000 --> 00:19:32,640
for the integer addition proof with 128

479
00:19:32,640 --> 00:19:34,000
bit integers

480
00:19:34,000 --> 00:19:36,880
from 20 around 25 kilobytes we end up

481
00:19:36,880 --> 00:19:37,280
with

482
00:19:37,280 --> 00:19:40,880
around 17 and then for the 128 bit

483
00:19:40,880 --> 00:19:43,679
integer multiplication from 40 kilobytes

484
00:19:43,679 --> 00:19:44,640
we end up with

485
00:19:44,640 --> 00:19:48,640
around 28 kilobytes so in terms of these

486
00:19:48,640 --> 00:19:52,000
numbers this comparison

487
00:19:52,000 --> 00:19:54,160
is a bit unfair because the previous

488
00:19:54,160 --> 00:19:56,160
works used the uniform rejection

489
00:19:56,160 --> 00:19:57,360
sampling

490
00:19:57,360 --> 00:20:00,720
um but we also checked how uh how they

491
00:20:00,720 --> 00:20:01,919
perform with

492
00:20:01,919 --> 00:20:05,039
the gaussian rejection sampling and then

493
00:20:05,039 --> 00:20:08,000
um the improvement is still around 20 to

494
00:20:08,000 --> 00:20:11,200
30 percent

495
00:20:11,520 --> 00:20:14,640
yeah so uh if you reach the end then

496
00:20:14,640 --> 00:20:16,080
thanks very much for watching

497
00:20:16,080 --> 00:20:18,080
and here is the link to the full version

498
00:20:18,080 --> 00:20:19,280
of the paper

499
00:20:19,280 --> 00:20:23,120
thanks bye

