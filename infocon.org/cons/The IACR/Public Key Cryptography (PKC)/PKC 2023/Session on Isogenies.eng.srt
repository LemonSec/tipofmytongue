1
00:00:00,000 --> 00:00:02,879
today I'm happy to open the last session

2
00:00:02,879 --> 00:00:05,880
for today so it will be a session on

3
00:00:05,880 --> 00:00:09,360
isogenes we will have sweet talks the

4
00:00:09,360 --> 00:00:11,420
first one is about some

5
00:00:11,420 --> 00:00:13,580
fisherman problem

6
00:00:13,580 --> 00:00:16,800
so the talk is entitled scan up scaling

7
00:00:16,800 --> 00:00:18,680
the sea fish

8
00:00:18,680 --> 00:00:23,880
it's a work by Luca de fero Taco Boris

9
00:00:23,880 --> 00:00:28,160
fosa beta kutas

10
00:00:33,739 --> 00:00:35,820
is here

11
00:00:35,820 --> 00:00:37,500
yes

12
00:00:37,500 --> 00:00:40,500
thanks a lot Serge for the introduction

13
00:00:40,500 --> 00:00:42,600
thank you everyone for attending the

14
00:00:42,600 --> 00:00:44,640
isog session

15
00:00:44,640 --> 00:00:46,980
I'm gonna talk about our recent work

16
00:00:46,980 --> 00:00:49,320
scallop scaling the sea fish

17
00:00:49,320 --> 00:00:51,960
this is a talk about cryptographic group

18
00:00:51,960 --> 00:00:54,539
action can you actually hear me all

19
00:00:54,539 --> 00:00:55,980
right yeah

20
00:00:55,980 --> 00:00:58,260
um this is a talk about cryptographic

21
00:00:58,260 --> 00:00:59,579
group actions what is a group action

22
00:00:59,579 --> 00:01:02,640
it's it's a function on a set

23
00:01:02,640 --> 00:01:05,700
um where where G is a group which acts

24
00:01:05,700 --> 00:01:08,159
on the set and certain axioms are

25
00:01:08,159 --> 00:01:10,020
satisfied namely that the identity

26
00:01:10,020 --> 00:01:13,200
element of the group acts trivially and

27
00:01:13,200 --> 00:01:16,260
that if you act with a product on the

28
00:01:16,260 --> 00:01:18,600
group it it is the same as if yet

29
00:01:18,600 --> 00:01:21,720
consecutively with the factors of this

30
00:01:21,720 --> 00:01:22,860
product

31
00:01:22,860 --> 00:01:25,439
now it's quite easy to see how to get a

32
00:01:25,439 --> 00:01:27,720
diffie-hellman style key exchange from a

33
00:01:27,720 --> 00:01:30,060
group action if if it's a commutative

34
00:01:30,060 --> 00:01:32,520
group that acts you just fix a set

35
00:01:32,520 --> 00:01:35,400
element in the beginning and then you

36
00:01:35,400 --> 00:01:37,740
have Alice in Bob both take the secret

37
00:01:37,740 --> 00:01:41,340
group element they just act on this uh

38
00:01:41,340 --> 00:01:44,640
fixed starting element and then exchange

39
00:01:44,640 --> 00:01:46,920
the resulting set elements act again as

40
00:01:46,920 --> 00:01:48,420
long as your group is commutative they

41
00:01:48,420 --> 00:01:50,700
should arrive at the same set element in

42
00:01:50,700 --> 00:01:52,380
the end and

43
00:01:52,380 --> 00:01:53,700
um well

44
00:01:53,700 --> 00:01:57,140
this can be used as your shared secrets

45
00:01:57,140 --> 00:01:59,220
now the

46
00:01:59,220 --> 00:02:01,680
the problem that resembles the discrete

47
00:02:01,680 --> 00:02:03,540
logarithm problem in this context is

48
00:02:03,540 --> 00:02:05,399
called usually the vectorization problem

49
00:02:05,399 --> 00:02:07,259
so if you're given two set elements you

50
00:02:07,259 --> 00:02:08,758
want to find the group element that act

51
00:02:08,758 --> 00:02:12,060
that Maps one to the other

52
00:02:12,060 --> 00:02:14,040
and the parallelization problem is the

53
00:02:14,040 --> 00:02:16,260
one that resembles the computational the

54
00:02:16,260 --> 00:02:19,040
human problem

55
00:02:19,560 --> 00:02:22,739
um this is quite a powerful framework

56
00:02:22,739 --> 00:02:25,319
um so if these problems are hard even

57
00:02:25,319 --> 00:02:27,180
for a quantum computer then this gives

58
00:02:27,180 --> 00:02:29,280
rise to a post Quantum secure key

59
00:02:29,280 --> 00:02:30,959
exchange

60
00:02:30,959 --> 00:02:31,620
um

61
00:02:31,620 --> 00:02:34,680
probably the most prominent one is the

62
00:02:34,680 --> 00:02:37,020
seaside key exchange which is also like

63
00:02:37,020 --> 00:02:38,580
a non-interactive key exchange very

64
00:02:38,580 --> 00:02:40,920
powerful tool to build other post

65
00:02:40,920 --> 00:02:43,379
Quantum constructions and this talk is

66
00:02:43,379 --> 00:02:45,360
going to introduce yet another

67
00:02:45,360 --> 00:02:48,480
um post Quantum group action that gives

68
00:02:48,480 --> 00:02:50,519
you even more properties

69
00:02:50,519 --> 00:02:51,840
but

70
00:02:51,840 --> 00:02:54,780
what could you actually ask for more in

71
00:02:54,780 --> 00:02:57,540
the than the seaside I mean it's it's a

72
00:02:57,540 --> 00:02:59,040
very cool group action you can you can

73
00:02:59,040 --> 00:03:00,840
build a lot with it

74
00:03:00,840 --> 00:03:03,480
um well if we start just see site is not

75
00:03:03,480 --> 00:03:04,920
an effective group action what does that

76
00:03:04,920 --> 00:03:07,440
mean you cannot actually evaluate it on

77
00:03:07,440 --> 00:03:08,940
all the group elements of your acting

78
00:03:08,940 --> 00:03:13,319
group uh the truth is Seaside

79
00:03:13,319 --> 00:03:15,599
you you can only evaluate it on certain

80
00:03:15,599 --> 00:03:17,099
uh

81
00:03:17,099 --> 00:03:19,860
fixed elements of your acting group and

82
00:03:19,860 --> 00:03:20,879
um

83
00:03:20,879 --> 00:03:23,280
this is for many constructions not a

84
00:03:23,280 --> 00:03:26,040
problem namely uh you just restrict

85
00:03:26,040 --> 00:03:29,099
yourself to a a list of elements I'll

86
00:03:29,099 --> 00:03:31,640
want to end that span your acting group

87
00:03:31,640 --> 00:03:34,560
and for which you can efficiently

88
00:03:34,560 --> 00:03:37,200
evaluate the group action and then

89
00:03:37,200 --> 00:03:39,720
in practice you just evaluate on product

90
00:03:39,720 --> 00:03:42,420
of the of these elements just by

91
00:03:42,420 --> 00:03:45,060
consecutively evaluating the group

92
00:03:45,060 --> 00:03:46,500
action this this is called the

93
00:03:46,500 --> 00:03:48,540
restricted effective group action which

94
00:03:48,540 --> 00:03:50,519
is as many of you will know quite

95
00:03:50,519 --> 00:03:53,400
powerful but there's some constructions

96
00:03:53,400 --> 00:03:56,340
where you would like to evaluate your

97
00:03:56,340 --> 00:03:57,959
group action

98
00:03:57,959 --> 00:04:00,480
on all the elements and where you want

99
00:04:00,480 --> 00:04:03,599
to have a unique representation of every

100
00:04:03,599 --> 00:04:06,540
group element for example and

101
00:04:06,540 --> 00:04:08,879
for example this is very useful to build

102
00:04:08,879 --> 00:04:12,720
uh for hme style efficient signatures

103
00:04:12,720 --> 00:04:14,819
um but Seaside doesn't give you that so

104
00:04:14,819 --> 00:04:18,060
is there a way to transform a restricted

105
00:04:18,060 --> 00:04:20,940
effective group action into a effective

106
00:04:20,940 --> 00:04:22,320
group action

107
00:04:22,320 --> 00:04:25,460
yes there is a general strategy you can

108
00:04:25,460 --> 00:04:27,600
pre-compute the group structure of the

109
00:04:27,600 --> 00:04:28,680
acting group

110
00:04:28,680 --> 00:04:31,139
um so that means you pre-compute for

111
00:04:31,139 --> 00:04:33,660
example the cardinality of a group and

112
00:04:33,660 --> 00:04:35,820
you pre-compute something that's called

113
00:04:35,820 --> 00:04:38,100
the lattice of relations so if you have

114
00:04:38,100 --> 00:04:40,320
your generators from the previous slide

115
00:04:40,320 --> 00:04:42,840
these L1 to LM that span the entire

116
00:04:42,840 --> 00:04:46,259
group you look for vectors in the

117
00:04:46,259 --> 00:04:49,860
exponents such that L1 to the LI to the

118
00:04:49,860 --> 00:04:52,199
e i the products of those act trivially

119
00:04:52,199 --> 00:04:56,160
so um the exponents give you like a

120
00:04:56,160 --> 00:04:59,460
vector well each each one of these

121
00:04:59,460 --> 00:05:01,199
relations gives you a vector if you

122
00:05:01,199 --> 00:05:02,639
consider all of them that's the lattice

123
00:05:02,639 --> 00:05:04,020
and this lattice is called the lattice

124
00:05:04,020 --> 00:05:05,639
of relations

125
00:05:05,639 --> 00:05:08,580
if your compute the reduced basis of

126
00:05:08,580 --> 00:05:10,979
such a lattice that uh

127
00:05:10,979 --> 00:05:13,940
allows you to solve CVP instances

128
00:05:13,940 --> 00:05:17,580
efficiently then this can help you to

129
00:05:17,580 --> 00:05:19,139
evaluate the group action everywhere

130
00:05:19,139 --> 00:05:22,680
namely assume you have for example L1 to

131
00:05:22,680 --> 00:05:26,220
a very large power e in in fact the the

132
00:05:26,220 --> 00:05:27,840
groups we're interested in are usually

133
00:05:27,840 --> 00:05:30,240
cyclic or nearly cyclic so you can

134
00:05:30,240 --> 00:05:31,919
assume that if you can solve this

135
00:05:31,919 --> 00:05:34,620
problem you can kind of evaluate the

136
00:05:34,620 --> 00:05:37,380
group action everywhere now if you just

137
00:05:37,380 --> 00:05:38,699
want to straightforward with your

138
00:05:38,699 --> 00:05:40,199
restricted group actually evaluate this

139
00:05:40,199 --> 00:05:41,820
is not going to work because for a large

140
00:05:41,820 --> 00:05:43,139
exponent if you have to do it

141
00:05:43,139 --> 00:05:44,639
consecutively it's just going to take

142
00:05:44,639 --> 00:05:45,539
too long

143
00:05:45,539 --> 00:05:47,699
but what you can do is you just solve

144
00:05:47,699 --> 00:05:50,780
the approximate CVP problem in your

145
00:05:50,780 --> 00:05:54,180
lattice of relations uh so you look for

146
00:05:54,180 --> 00:05:55,280
a lattice

147
00:05:55,280 --> 00:05:57,259
Vector

148
00:05:57,259 --> 00:06:01,560
that is close to e followed by zeros in

149
00:06:01,560 --> 00:06:03,419
this case so that that gives you a

150
00:06:03,419 --> 00:06:06,479
decomposition or a product l i to the e

151
00:06:06,479 --> 00:06:10,860
i that acts in the same way on on your

152
00:06:10,860 --> 00:06:11,699
set

153
00:06:11,699 --> 00:06:15,120
such that the exponents are small and

154
00:06:15,120 --> 00:06:16,800
well now you can just use your

155
00:06:16,800 --> 00:06:19,080
restricted group action to evaluate it

156
00:06:19,080 --> 00:06:21,979
the caveat of course with this idea is

157
00:06:21,979 --> 00:06:25,139
that depending on the group G you may

158
00:06:25,139 --> 00:06:27,180
not be able to actually pre-compute its

159
00:06:27,180 --> 00:06:28,380
group structure

160
00:06:28,380 --> 00:06:31,620
and in fact for the groups that we have

161
00:06:31,620 --> 00:06:33,900
in Seaside for example the the groups

162
00:06:33,900 --> 00:06:36,960
are notoriously known to be very hard to

163
00:06:36,960 --> 00:06:39,120
compute

164
00:06:39,120 --> 00:06:41,880
however this this strategy was uh used

165
00:06:41,880 --> 00:06:43,919
by Berlin's Klein young and

166
00:06:43,919 --> 00:06:46,560
outerman in 2019 to build efficient

167
00:06:46,560 --> 00:06:49,860
isogeny based signatures there they just

168
00:06:49,860 --> 00:06:52,680
took the seaside 512 action that is the

169
00:06:52,680 --> 00:06:55,919
smallest Seaside parameter set group

170
00:06:55,919 --> 00:06:57,020
action

171
00:06:57,020 --> 00:07:00,259
pre-computed the lattice of relations

172
00:07:00,259 --> 00:07:04,440
with an index calculus approach and then

173
00:07:04,440 --> 00:07:06,360
uh

174
00:07:06,360 --> 00:07:08,460
basically that the strategy from the

175
00:07:08,460 --> 00:07:09,600
previous slide

176
00:07:09,600 --> 00:07:13,319
now the the group action of of Seaside

177
00:07:13,319 --> 00:07:15,360
is a class group action so this these

178
00:07:15,360 --> 00:07:17,880
class groups are uh well hard to compute

179
00:07:17,880 --> 00:07:20,460
and to compute the structure of this

180
00:07:20,460 --> 00:07:22,979
group they did a world record class

181
00:07:22,979 --> 00:07:24,960
group computation so this was the the

182
00:07:24,960 --> 00:07:27,300
biggest class group ever computed to

183
00:07:27,300 --> 00:07:29,880
just get the smallest parameter set of

184
00:07:29,880 --> 00:07:32,639
Seaside uh in into this effective group

185
00:07:32,639 --> 00:07:34,280
action framework

186
00:07:34,280 --> 00:07:37,139
uh unfortunately it doesn't scale very

187
00:07:37,139 --> 00:07:40,020
well so Computing the structure of

188
00:07:40,020 --> 00:07:42,599
larger Seaside parameter sets is firmly

189
00:07:42,599 --> 00:07:44,220
Out Of Reach with the currently known

190
00:07:44,220 --> 00:07:48,180
algorithms and computational resources

191
00:07:48,180 --> 00:07:49,800
um so this was the motivation for our

192
00:07:49,800 --> 00:07:52,259
work can we build a different group

193
00:07:52,259 --> 00:07:55,199
action from misogynist in our case that

194
00:07:55,199 --> 00:07:57,060
solves this scaling issue can we somehow

195
00:07:57,060 --> 00:07:59,520
build effective group actions for larger

196
00:07:59,520 --> 00:08:01,020
parameter sets

197
00:08:01,020 --> 00:08:04,380
uh uh and that's yeah that scale at

198
00:08:04,380 --> 00:08:06,780
least to some extent

199
00:08:06,780 --> 00:08:09,300
um so to answer this questions let look

200
00:08:09,300 --> 00:08:11,940
a little bit at what the seaside group

201
00:08:11,940 --> 00:08:13,860
action actually is

202
00:08:13,860 --> 00:08:15,780
so

203
00:08:15,780 --> 00:08:18,120
for group actions on exogenes you have a

204
00:08:18,120 --> 00:08:20,039
imaginary quadratic order you can think

205
00:08:20,039 --> 00:08:22,800
of it as like some as that square root

206
00:08:22,800 --> 00:08:25,199
of minus P for Prime p

207
00:08:25,199 --> 00:08:27,780
and then you consider as your Set uh

208
00:08:27,780 --> 00:08:31,560
that you act on certain elliptic curves

209
00:08:31,560 --> 00:08:32,880
um these elliptic curves have

210
00:08:32,880 --> 00:08:34,919
endomorphism rings that is uh the

211
00:08:34,919 --> 00:08:37,080
isogenes that you have from a curve to

212
00:08:37,080 --> 00:08:39,539
itself and they have a certain structure

213
00:08:39,539 --> 00:08:42,059
there are orders in a quaternity in

214
00:08:42,059 --> 00:08:45,360
algebra but each of them also has many

215
00:08:45,360 --> 00:08:47,940
embeddings of of different quadratic

216
00:08:47,940 --> 00:08:51,060
borders into them so it turns out that

217
00:08:51,060 --> 00:08:54,720
um those elliptic curves that have an

218
00:08:54,720 --> 00:08:56,580
embedding of some fixed imaginary

219
00:08:56,580 --> 00:08:58,920
quadratic Border in them

220
00:08:58,920 --> 00:09:01,860
um you can act upon by invertible ideals

221
00:09:01,860 --> 00:09:04,700
of this imaginary quadratic order

222
00:09:04,700 --> 00:09:07,800
principal principle ideals act trivially

223
00:09:07,800 --> 00:09:09,779
so this gives rise to a well-defined

224
00:09:09,779 --> 00:09:11,040
group action of the class group the

225
00:09:11,040 --> 00:09:13,140
class group is just the set of all

226
00:09:13,140 --> 00:09:15,720
invertible ideals of your imaginary

227
00:09:15,720 --> 00:09:17,399
photographic order divided out by the

228
00:09:17,399 --> 00:09:19,080
principal ideals

229
00:09:19,080 --> 00:09:19,740
um

230
00:09:19,740 --> 00:09:22,620
on the set and now Seaside is the

231
00:09:22,620 --> 00:09:25,040
special case where you take the

232
00:09:25,040 --> 00:09:27,959
imaginary quadratic border Z squared of

233
00:09:27,959 --> 00:09:30,600
minus p and you consider a curse that

234
00:09:30,600 --> 00:09:32,580
are defined over FP the finite field

235
00:09:32,580 --> 00:09:35,459
over FP

236
00:09:35,459 --> 00:09:37,019
um

237
00:09:37,019 --> 00:09:39,480
and square root of minus p is under this

238
00:09:39,480 --> 00:09:41,160
embedding this embedding is called the

239
00:09:41,160 --> 00:09:42,899
orientation is mapped to the frobenius

240
00:09:42,899 --> 00:09:44,760
endomorphism which is well defined of

241
00:09:44,760 --> 00:09:47,160
over curves defined over the base

242
00:09:47,160 --> 00:09:49,080
now this raises the question if we

243
00:09:49,080 --> 00:09:51,680
cannot compute the class group for for

244
00:09:51,680 --> 00:09:55,440
this order the class this the structure

245
00:09:55,440 --> 00:09:57,060
of this class group for larger parameter

246
00:09:57,060 --> 00:09:58,620
sets can we maybe do it for different

247
00:09:58,620 --> 00:10:01,440
imaginary quadratic borders

248
00:10:01,440 --> 00:10:03,300
um but if we do so can we then still

249
00:10:03,300 --> 00:10:04,920
evaluate the group action like we know

250
00:10:04,920 --> 00:10:07,440
it exists but can we compute with it how

251
00:10:07,440 --> 00:10:10,380
do you represent stuff um this is one

252
00:10:10,380 --> 00:10:13,040
question we answer in our paper for one

253
00:10:13,040 --> 00:10:17,100
family of of group actions but

254
00:10:17,100 --> 00:10:20,459
why would we want to do that why why do

255
00:10:20,459 --> 00:10:22,260
we want to use a different quadratic

256
00:10:22,260 --> 00:10:23,040
order

257
00:10:23,040 --> 00:10:26,640
the reason is that for certain quadratic

258
00:10:26,640 --> 00:10:28,920
borders you can compute the a class

259
00:10:28,920 --> 00:10:32,399
group of it uh more easily if you have a

260
00:10:32,399 --> 00:10:35,100
imaginary quadratic border of the form

261
00:10:35,100 --> 00:10:38,580
that plus a conductor that's called the

262
00:10:38,580 --> 00:10:41,700
conductor F times uh what imaginative

263
00:10:41,700 --> 00:10:43,200
quadratic order of which you know their

264
00:10:43,200 --> 00:10:45,680
class group or the class number like the

265
00:10:45,680 --> 00:10:48,300
cardinality of your class group then you

266
00:10:48,300 --> 00:10:49,040
can

267
00:10:49,040 --> 00:10:51,899
compute the class number just from the

268
00:10:51,899 --> 00:10:53,220
factorization of

269
00:10:53,220 --> 00:10:55,260
so that's that's a simple formula you

270
00:10:55,260 --> 00:10:57,120
don't have to do some huge computation

271
00:10:57,120 --> 00:10:59,600
for that

272
00:10:59,640 --> 00:11:01,680
so our strategy was

273
00:11:01,680 --> 00:11:04,680
um we just take a a class group that has

274
00:11:04,680 --> 00:11:06,180
a trivial

275
00:11:06,180 --> 00:11:09,180
um with X trivially so class number one

276
00:11:09,180 --> 00:11:12,360
and then we generate certain candidates

277
00:11:12,360 --> 00:11:15,480
or generators of a larger class group

278
00:11:15,480 --> 00:11:17,760
uh larger imaginary quadratic order

279
00:11:17,760 --> 00:11:18,839
sorry

280
00:11:18,839 --> 00:11:23,160
um and compute the the conductor and if

281
00:11:23,160 --> 00:11:24,540
it's Prime well then we know it's

282
00:11:24,540 --> 00:11:26,700
factorization we can easily compute the

283
00:11:26,700 --> 00:11:27,620
class

284
00:11:27,620 --> 00:11:30,360
plus strap well not the class structure

285
00:11:30,360 --> 00:11:33,180
but the class number sorry

286
00:11:33,180 --> 00:11:34,800
um and

287
00:11:34,800 --> 00:11:37,140
we just sieve over these candidates

288
00:11:37,140 --> 00:11:39,720
until we find one class group that has

289
00:11:39,720 --> 00:11:42,920
reasonably smooth class numbers so the

290
00:11:42,920 --> 00:11:46,620
cardinality is divisible by many

291
00:11:46,620 --> 00:11:50,180
small factors

292
00:11:50,180 --> 00:11:52,740
now this is where our approach is also

293
00:11:52,740 --> 00:11:55,019
not super scalable right you still need

294
00:11:55,019 --> 00:11:57,779
to sieve through many candidates until

295
00:11:57,779 --> 00:12:00,480
you find a reasonably smooth number if

296
00:12:00,480 --> 00:12:02,880
you just model this as a like a

297
00:12:02,880 --> 00:12:06,240
the class number as being like a random

298
00:12:06,240 --> 00:12:09,440
number of a certain size

299
00:12:09,480 --> 00:12:11,820
um but if you have found one that is

300
00:12:11,820 --> 00:12:13,860
reasonably smooth then we can compute

301
00:12:13,860 --> 00:12:15,540
the lattice of relations just by solving

302
00:12:15,540 --> 00:12:17,339
this instances of the discrete logarithm

303
00:12:17,339 --> 00:12:19,440
problem in your class group uh because

304
00:12:19,440 --> 00:12:21,480
well if it's reasonably smooth you can

305
00:12:21,480 --> 00:12:24,420
solve this pretty log problems

306
00:12:24,420 --> 00:12:27,060
then the rest is as similar as was done

307
00:12:27,060 --> 00:12:29,160
previously in C fish namely you just

308
00:12:29,160 --> 00:12:31,380
compute A reduced basis this is also

309
00:12:31,380 --> 00:12:34,380
fine in our case because the dimensions

310
00:12:34,380 --> 00:12:35,700
we deal with

311
00:12:35,700 --> 00:12:37,260
this is not going to be the bottleneck

312
00:12:37,260 --> 00:12:38,519
of the computation

313
00:12:38,519 --> 00:12:41,600
and finally we need to instantiate the

314
00:12:41,600 --> 00:12:44,040
group action with the starting curve you

315
00:12:44,040 --> 00:12:46,320
need to find something to start acting

316
00:12:46,320 --> 00:12:49,380
on this is not as straightforward as it

317
00:12:49,380 --> 00:12:51,300
is in Seaside where you just take some

318
00:12:51,300 --> 00:12:53,459
curve defined over FP

319
00:12:53,459 --> 00:12:57,180
um but instead you uh yeah we give a

320
00:12:57,180 --> 00:12:59,339
solution for this in our page and this

321
00:12:59,339 --> 00:13:01,500
is also efficient

322
00:13:01,500 --> 00:13:06,740
now to actually compute the online phase

323
00:13:07,560 --> 00:13:10,560
I said earlier we generate the imaginary

324
00:13:10,560 --> 00:13:12,899
quadratic order to have a smooth

325
00:13:12,899 --> 00:13:15,120
generator this smooth generator under

326
00:13:15,120 --> 00:13:17,480
the embedding into the endomorphism ring

327
00:13:17,480 --> 00:13:19,980
corresponds to an endomorphism of smooth

328
00:13:19,980 --> 00:13:22,440
degree and these are nomorphisms you can

329
00:13:22,440 --> 00:13:25,079
you can represent you can write down a

330
00:13:25,079 --> 00:13:27,420
the representation of it in in terms of

331
00:13:27,420 --> 00:13:28,620
its kernel

332
00:13:28,620 --> 00:13:31,139
and this endomorphism plays the same

333
00:13:31,139 --> 00:13:33,180
role that the forbino's anamorphism

334
00:13:33,180 --> 00:13:36,120
plays in Seaside namely it stabilizes

335
00:13:36,120 --> 00:13:38,519
the kernel of the isogenes used to

336
00:13:38,519 --> 00:13:40,500
compute the group action

337
00:13:40,500 --> 00:13:42,360
now on the right side you see the

338
00:13:42,360 --> 00:13:45,120
isogeny graph involved so all the curves

339
00:13:45,120 --> 00:13:46,620
on the outside are the ones that

340
00:13:46,620 --> 00:13:48,120
essentially you walk on in our group

341
00:13:48,120 --> 00:13:50,579
action and they are all connected to one

342
00:13:50,579 --> 00:13:52,380
group with a trivial group action in the

343
00:13:52,380 --> 00:13:54,740
middle and lines

344
00:13:54,740 --> 00:13:57,480
represent a large degree exogeny of

345
00:13:57,480 --> 00:13:59,940
degree f

346
00:13:59,940 --> 00:14:01,740
now

347
00:14:01,740 --> 00:14:03,480
you can evaluate this group action

348
00:14:03,480 --> 00:14:05,459
similar to Seaside by Computing certain

349
00:14:05,459 --> 00:14:07,680
isogenes that's Maps between elliptic

350
00:14:07,680 --> 00:14:09,959
curves for this talk

351
00:14:09,959 --> 00:14:12,360
um the drawback here is that you have to

352
00:14:12,360 --> 00:14:14,700
transport your orientation so this

353
00:14:14,700 --> 00:14:17,459
endomorphism along the curves so there's

354
00:14:17,459 --> 00:14:19,800
some additional computation you have to

355
00:14:19,800 --> 00:14:21,300
do compared to Seaside where you have

356
00:14:21,300 --> 00:14:23,760
this as an implicit feature

357
00:14:23,760 --> 00:14:25,680
um already available and that's also why

358
00:14:25,680 --> 00:14:29,040
our support action is a bit slower

359
00:14:29,040 --> 00:14:31,500
uh so let's just look at the like a

360
00:14:31,500 --> 00:14:34,560
brief comparison of sea fish and scallop

361
00:14:34,560 --> 00:14:37,440
our two isogeny based effective group

362
00:14:37,440 --> 00:14:38,339
action

363
00:14:38,339 --> 00:14:41,220
one has a fixed imaginary quadratic

364
00:14:41,220 --> 00:14:43,860
border the Z squared of minus p

365
00:14:43,860 --> 00:14:46,380
whereas in scallop we can instantiate

366
00:14:46,380 --> 00:14:48,600
all sorts of imaginary quadratic orders

367
00:14:48,600 --> 00:14:51,360
of this form that plus some Prime Times

368
00:14:51,360 --> 00:14:55,860
a like in our case is it's the gaussian

369
00:14:55,860 --> 00:14:59,100
integers the o0

370
00:14:59,100 --> 00:15:01,860
um whereas while in C fish you have to

371
00:15:01,860 --> 00:15:03,240
do this very expensive class group

372
00:15:03,240 --> 00:15:05,220
action which only allows you to compute

373
00:15:05,220 --> 00:15:06,480
the class group for the smallest

374
00:15:06,480 --> 00:15:08,160
parameter sets and afterwards it's

375
00:15:08,160 --> 00:15:09,720
infeasible

376
00:15:09,720 --> 00:15:12,120
um in in scallop you get the class

377
00:15:12,120 --> 00:15:13,980
number so the cardinality of the group

378
00:15:13,980 --> 00:15:15,420
for free

379
00:15:15,420 --> 00:15:17,100
um but you then have to do some sieving

380
00:15:17,100 --> 00:15:18,720
until there's class numbers smooth

381
00:15:18,720 --> 00:15:22,040
enough to compute the slabs of relations

382
00:15:22,040 --> 00:15:24,360
asymptotically both of these steps are

383
00:15:24,360 --> 00:15:26,940
unfortunately actually have the same

384
00:15:26,940 --> 00:15:30,240
complexity but in practice the constant

385
00:15:30,240 --> 00:15:32,100
is much slower so even moderate

386
00:15:32,100 --> 00:15:33,839
resources we managed to instantiate

387
00:15:33,839 --> 00:15:37,860
larger security levels with a scallop

388
00:15:37,860 --> 00:15:41,160
um the evaluation in sea fish is with

389
00:15:41,160 --> 00:15:43,019
these this implicit orientation by the

390
00:15:43,019 --> 00:15:45,000
frobinus endomorphism and is quite

391
00:15:45,000 --> 00:15:47,339
efficient unfortunately our group action

392
00:15:47,339 --> 00:15:49,440
is less efficient because you have to

393
00:15:49,440 --> 00:15:52,260
compute this explicit orientation along

394
00:15:52,260 --> 00:15:55,279
the evaluation

395
00:15:55,800 --> 00:15:58,800
um we implemented our group action in C

396
00:15:58,800 --> 00:16:01,800
plus and it's available under this link

397
00:16:01,800 --> 00:16:04,199
um more precisely we gave a concrete

398
00:16:04,199 --> 00:16:07,019
instantiation for scallop that matches

399
00:16:07,019 --> 00:16:09,480
the security levels of Seaside 512 and

400
00:16:09,480 --> 00:16:13,019
seaside 1024 just a reminder Seaside 20

401
00:16:13,019 --> 00:16:15,540
1024 would be absolutely infeasible with

402
00:16:15,540 --> 00:16:19,079
the sea fish type of computation

403
00:16:19,079 --> 00:16:21,900
the public keys of our group action

404
00:16:21,900 --> 00:16:22,199
[Music]

405
00:16:22,199 --> 00:16:23,279
um

406
00:16:23,279 --> 00:16:25,560
are roughly 1600 bits for the smaller

407
00:16:25,560 --> 00:16:28,260
parameter sets and 2300 bits for the

408
00:16:28,260 --> 00:16:29,940
larger one that's still quite compact

409
00:16:29,940 --> 00:16:32,940
it's larger than the seaside ones um but

410
00:16:32,940 --> 00:16:34,620
that's not the not the main problem

411
00:16:34,620 --> 00:16:37,139
what's a bit more annoying is that the

412
00:16:37,139 --> 00:16:38,820
evaluation of the group action for the

413
00:16:38,820 --> 00:16:40,860
small parameter sets takes 35 seconds

414
00:16:40,860 --> 00:16:43,079
and for the larger ones 12 and a half

415
00:16:43,079 --> 00:16:46,320
minutes for our parameter sets and to

416
00:16:46,320 --> 00:16:48,420
for example build signatures from this

417
00:16:48,420 --> 00:16:50,459
you would need dozens of these group

418
00:16:50,459 --> 00:16:52,680
action and allegations

419
00:16:52,680 --> 00:16:55,560
so in summary this implementation shows

420
00:16:55,560 --> 00:16:57,959
more the feasibility of our group action

421
00:16:57,959 --> 00:17:01,380
than well that's the practice that is

422
00:17:01,380 --> 00:17:03,540
practicality

423
00:17:03,540 --> 00:17:05,579
so in summary we provide a framework to

424
00:17:05,579 --> 00:17:08,000
evaluate new group actions um

425
00:17:08,000 --> 00:17:10,880
unoriented elliptic curves by isogenes

426
00:17:10,880 --> 00:17:13,559
we give very concrete instantiation for

427
00:17:13,559 --> 00:17:17,099
class group actions using this uh

428
00:17:17,099 --> 00:17:19,799
imaginary quadratic orders of prime

429
00:17:19,799 --> 00:17:21,959
large Prime conductor into in a

430
00:17:21,959 --> 00:17:24,540
imaginary quadratic field of small

431
00:17:24,540 --> 00:17:27,240
discriminant this is what's what we call

432
00:17:27,240 --> 00:17:30,360
scallop and this instantiates

433
00:17:30,360 --> 00:17:32,160
um effective group actions for larger

434
00:17:32,160 --> 00:17:33,780
security levels that were previously Out

435
00:17:33,780 --> 00:17:35,340
Of Reach

436
00:17:35,340 --> 00:17:37,380
and allows you to build schemes that

437
00:17:37,380 --> 00:17:39,179
where you have to uniquely represent

438
00:17:39,179 --> 00:17:40,919
elements and efficiently act by

439
00:17:40,919 --> 00:17:43,140
arbitrary group elements

440
00:17:43,140 --> 00:17:44,700
which gets us through the questions so

441
00:17:44,700 --> 00:17:46,799
the obvious ones is how can we make this

442
00:17:46,799 --> 00:17:49,400
group action more practical is it faster

443
00:17:49,400 --> 00:17:53,520
and scallop still has a scaling issue

444
00:17:53,520 --> 00:17:56,039
um we can do larger security levels but

445
00:17:56,039 --> 00:17:58,440
they clock out eventually maybe there's

446
00:17:58,440 --> 00:18:01,980
a way to resolve that thank you for your

447
00:18:01,980 --> 00:18:03,600
attention you will find a lot more

448
00:18:03,600 --> 00:18:06,059
details in the paper and I'm happy to

449
00:18:06,059 --> 00:18:08,539
take questions

450
00:18:22,980 --> 00:18:25,620
uh thanks for the interesting talk um I

451
00:18:25,620 --> 00:18:28,620
wonder the uh the smoothness of the

452
00:18:28,620 --> 00:18:30,120
class group order does it have any

453
00:18:30,120 --> 00:18:32,900
implications for the hardness of the

454
00:18:32,900 --> 00:18:35,460
like the discrete log problem or

455
00:18:35,460 --> 00:18:37,260
whatever the analog is I think you call

456
00:18:37,260 --> 00:18:39,720
it vectorization problem

457
00:18:39,720 --> 00:18:41,100
um for the class group action we don't

458
00:18:41,100 --> 00:18:42,299
think so no

459
00:18:42,299 --> 00:18:43,140
um

460
00:18:43,140 --> 00:18:45,660
of course it immediately influences how

461
00:18:45,660 --> 00:18:47,160
hard it is to compute the lattice of

462
00:18:47,160 --> 00:18:48,960
relations right the more smooth it is

463
00:18:48,960 --> 00:18:51,900
you more easy it is to compute the

464
00:18:51,900 --> 00:18:52,799
um

465
00:18:52,799 --> 00:18:55,980
the the lattice um but yeah no we don't

466
00:18:55,980 --> 00:18:57,660
think that it has security implications

467
00:18:57,660 --> 00:18:59,880
on the actual class production

468
00:18:59,880 --> 00:19:02,100
thanks

469
00:19:02,100 --> 00:19:05,059
and here's a question

470
00:19:06,120 --> 00:19:07,860
thank you for a nice talk

471
00:19:07,860 --> 00:19:11,400
um I seem to recall that Seaside has

472
00:19:11,400 --> 00:19:14,700
this Gap structure where you can like

473
00:19:14,700 --> 00:19:17,580
you have uh the underlying uh assumption

474
00:19:17,580 --> 00:19:19,640
Gap CDH

475
00:19:19,640 --> 00:19:23,700
in pre-quantum cryptography which you

476
00:19:23,700 --> 00:19:25,860
which is hard notoriously hard to find

477
00:19:25,860 --> 00:19:27,600
in post Quantum cryptography do you know

478
00:19:27,600 --> 00:19:30,240
if uh scallop also has this I think

479
00:19:30,240 --> 00:19:32,039
Seaside was the only one previously

480
00:19:32,039 --> 00:19:34,260
known to have this Gap structure

481
00:19:34,260 --> 00:19:35,880
um what do you mean by the cap structure

482
00:19:35,880 --> 00:19:39,860
so uh with access to a decisional Oracle

483
00:19:39,860 --> 00:19:42,120
uh the computational problem should

484
00:19:42,120 --> 00:19:43,200
still be hard

485
00:19:43,200 --> 00:19:46,020
yes I think so yeah I mean it's it's

486
00:19:46,020 --> 00:19:48,120
pretty much the same thing

487
00:19:48,120 --> 00:19:48,840
um

488
00:19:48,840 --> 00:19:49,860
one

489
00:19:49,860 --> 00:19:51,780
I think it's it's a very similar problem

490
00:19:51,780 --> 00:19:53,880
so if you abstract away a lot of the

491
00:19:53,880 --> 00:19:55,799
structure they you get the same like

492
00:19:55,799 --> 00:19:57,419
General problem

493
00:19:57,419 --> 00:19:58,380
um

494
00:19:58,380 --> 00:20:02,059
that makes sense yeah thank you

495
00:20:02,640 --> 00:20:04,380
I think say what's another question in

496
00:20:04,380 --> 00:20:07,400
your back yes

497
00:20:14,039 --> 00:20:16,080
oh just a question that you you were

498
00:20:16,080 --> 00:20:18,539
mentioning that that you uh that you

499
00:20:18,539 --> 00:20:21,240
take the uh the maximal order to have a

500
00:20:21,240 --> 00:20:26,400
cluster number one to to um to to sieve

501
00:20:26,400 --> 00:20:30,059
right so why why is it that you could

502
00:20:30,059 --> 00:20:32,760
also use another small one or one one

503
00:20:32,760 --> 00:20:35,220
that is known we just um we started

504
00:20:35,220 --> 00:20:37,380
working with gaussian integers and they

505
00:20:37,380 --> 00:20:40,500
they on one curve uh you have like a

506
00:20:40,500 --> 00:20:43,170
real class group action there

507
00:20:43,170 --> 00:20:43,620
[Music]

508
00:20:43,620 --> 00:20:44,880
um

509
00:20:44,880 --> 00:20:46,980
I'm not sure you gain anything by taking

510
00:20:46,980 --> 00:20:49,020
a larger one that's maybe interesting I

511
00:20:49,020 --> 00:20:51,360
don't know I don't think so there's only

512
00:20:51,360 --> 00:20:53,520
finally many right with class number one

513
00:20:53,520 --> 00:20:57,240
so at some point uh you want to uh to

514
00:20:57,240 --> 00:20:59,520
have a bit more uh no but this is just

515
00:20:59,520 --> 00:21:02,340
your like uh if you look at the isogeny

516
00:21:02,340 --> 00:21:04,559
graph that I had here so the one that

517
00:21:04,559 --> 00:21:07,140
has action of class number one is the

518
00:21:07,140 --> 00:21:10,440
one middle curve and then basically the

519
00:21:10,440 --> 00:21:12,059
curves that are actually where you

520
00:21:12,059 --> 00:21:13,799
compute the group action are the ones on

521
00:21:13,799 --> 00:21:15,960
the outside Circle so ones that are

522
00:21:15,960 --> 00:21:18,600
connected by a large degree exogeny

523
00:21:18,600 --> 00:21:20,039
um and if

524
00:21:20,039 --> 00:21:22,320
the degree is large enough you can

525
00:21:22,320 --> 00:21:25,140
basically reach many many curves and it

526
00:21:25,140 --> 00:21:27,480
depends on the con conductor which

527
00:21:27,480 --> 00:21:29,280
curves you actually reach to compute

528
00:21:29,280 --> 00:21:31,260
your class group action on

529
00:21:31,260 --> 00:21:33,000
um so I don't think it really matters

530
00:21:33,000 --> 00:21:35,580
which curve you have in the middle

531
00:21:35,580 --> 00:21:36,600
um

532
00:21:36,600 --> 00:21:39,299
like think think of sidh you have like a

533
00:21:39,299 --> 00:21:41,400
starting curve in the beginning with a

534
00:21:41,400 --> 00:21:43,320
lot of structure but then you you walk

535
00:21:43,320 --> 00:21:45,659
away into all sorts of directions until

536
00:21:45,659 --> 00:21:48,240
you reach curves far away

537
00:21:48,240 --> 00:21:50,820
just that in our case it's not a smooth

538
00:21:50,820 --> 00:21:53,520
degree asserting but a large Prime

539
00:21:53,520 --> 00:21:54,539
um

540
00:21:54,539 --> 00:21:56,280
yeah I don't know whether this answers

541
00:21:56,280 --> 00:21:58,500
to your question yeah and I was just to

542
00:21:58,500 --> 00:21:59,940
find to find

543
00:21:59,940 --> 00:22:02,460
um the this uh

544
00:22:02,460 --> 00:22:04,860
um the disorder from the maximum from

545
00:22:04,860 --> 00:22:06,179
the maximum order that it was starting

546
00:22:06,179 --> 00:22:08,159
from a maximum order of class number one

547
00:22:08,159 --> 00:22:10,919
yes so I was wondering was the technical

548
00:22:10,919 --> 00:22:13,260
but anyways to exist

549
00:22:13,260 --> 00:22:14,760
um so okay if you have one that's

550
00:22:14,760 --> 00:22:18,320
sufficient okay okay fine

551
00:22:19,799 --> 00:22:21,840
okay if there is no other question let's

552
00:22:21,840 --> 00:22:24,740
thank the speaker again

553
00:22:28,980 --> 00:22:31,380
so next we have a round optimal

554
00:22:31,380 --> 00:22:34,380
oblivious transfer and MPC from a

555
00:22:34,380 --> 00:22:37,940
computational Seaside

556
00:22:39,360 --> 00:22:42,340
she

557
00:22:42,340 --> 00:22:45,449
[Music]

558
00:22:50,880 --> 00:22:53,120
is

559
00:22:57,740 --> 00:23:01,700
Patrick Patrick

560
00:23:02,120 --> 00:23:07,520
is here sorry for uh Miss Francis

561
00:23:07,559 --> 00:23:10,200
uh hi my name is pratik today I'm going

562
00:23:10,200 --> 00:23:12,360
to talk about round optimal oblivious

563
00:23:12,360 --> 00:23:14,700
transfer and MPC from computational

564
00:23:14,700 --> 00:23:17,580
Seaside so this is a joint work with Sai

565
00:23:17,580 --> 00:23:20,220
Krishna badrinarayanan Daniel masmine

566
00:23:20,220 --> 00:23:23,280
pratha Mukherjee Shikhar patanovis and

567
00:23:23,280 --> 00:23:26,159
srinivas and raghuraman so this work was

568
00:23:26,159 --> 00:23:28,020
done when all of us were at Visa

569
00:23:28,020 --> 00:23:30,120
research and now we are in different

570
00:23:30,120 --> 00:23:33,360
places only srini is left in Visa so

571
00:23:33,360 --> 00:23:37,260
yeah so uh let me first introduce what

572
00:23:37,260 --> 00:23:39,960
is MPC and OT and then I'll go into the

573
00:23:39,960 --> 00:23:41,580
constructions

574
00:23:41,580 --> 00:23:43,860
so I will talk about uh secure two body

575
00:23:43,860 --> 00:23:46,440
computation so there's two parties who

576
00:23:46,440 --> 00:23:48,480
have their private inputs X and Y so

577
00:23:48,480 --> 00:23:50,340
they want to compute a function f on

578
00:23:50,340 --> 00:23:53,100
their private inputs to do that they run

579
00:23:53,100 --> 00:23:56,520
a protocol over here and it satisfied

580
00:23:56,520 --> 00:23:58,200
that the protocol output should be same

581
00:23:58,200 --> 00:24:00,240
as function output well security says

582
00:24:00,240 --> 00:24:02,280
that the protocol should not leak

583
00:24:02,280 --> 00:24:05,100
anything about X and Y beyond the output

584
00:24:05,100 --> 00:24:08,100
now a more specific uh two-party

585
00:24:08,100 --> 00:24:09,179
protocol is

586
00:24:09,179 --> 00:24:11,820
OT so this OT primitive there's a sender

587
00:24:11,820 --> 00:24:15,120
who has input messages m0 M1 and there's

588
00:24:15,120 --> 00:24:17,880
a receiver she has a choice bit B and

589
00:24:17,880 --> 00:24:20,940
now the OT protocol uh outputs MB to the

590
00:24:20,940 --> 00:24:22,919
receiver so security says that the

591
00:24:22,919 --> 00:24:24,419
sender should not know B and the

592
00:24:24,419 --> 00:24:25,860
receiver should not know what is M1

593
00:24:25,860 --> 00:24:27,600
minus B so this is a very simple

594
00:24:27,600 --> 00:24:30,240
primitive in the two-party setting and

595
00:24:30,240 --> 00:24:31,679
this is a very interesting primitive

596
00:24:31,679 --> 00:24:34,500
because we know that around optimal OT

597
00:24:34,500 --> 00:24:38,340
gives you around optimal MPC so just if

598
00:24:38,340 --> 00:24:40,799
you just build this OT primitive you can

599
00:24:40,799 --> 00:24:43,080
go all the way up to NPC which is a more

600
00:24:43,080 --> 00:24:45,240
generalized version of 2 PC so that's

601
00:24:45,240 --> 00:24:47,280
why we are going to focus on this round

602
00:24:47,280 --> 00:24:50,039
optimal OT in this talk

603
00:24:50,039 --> 00:24:52,799
and in the stock our focus is OT product

604
00:24:52,799 --> 00:24:55,380
protocols in setup model and plane model

605
00:24:55,380 --> 00:24:57,900
which are around optimal so in the setup

606
00:24:57,900 --> 00:24:59,880
model round optimality means two rounds

607
00:24:59,880 --> 00:25:02,039
and in the plane model is four rounds so

608
00:25:02,039 --> 00:25:04,679
that's why um I'm saying round optimal

609
00:25:04,679 --> 00:25:07,919
and then simulation security as in you

610
00:25:07,919 --> 00:25:09,600
need indistinguishability-based security

611
00:25:09,600 --> 00:25:11,820
and also you will be able to extract

612
00:25:11,820 --> 00:25:13,679
akara party's input so that's what

613
00:25:13,679 --> 00:25:16,679
simulation security means and finally we

614
00:25:16,679 --> 00:25:18,179
will try to construct it from weak

615
00:25:18,179 --> 00:25:20,460
isogeny based assumptions we will mainly

616
00:25:20,460 --> 00:25:22,799
construct it from computational suicide

617
00:25:22,799 --> 00:25:25,559
and by applying the results of benmuda

618
00:25:25,559 --> 00:25:27,080
atol and

619
00:25:27,080 --> 00:25:30,000
gargeton we will get MPC in setup model

620
00:25:30,000 --> 00:25:32,220
and clean modern uh satisfying the same

621
00:25:32,220 --> 00:25:34,200
properties which our Roti protocol will

622
00:25:34,200 --> 00:25:35,520
satisfy

623
00:25:35,520 --> 00:25:38,460
so now uh let me talk about our

624
00:25:38,460 --> 00:25:40,260
contributions and compare with state of

625
00:25:40,260 --> 00:25:41,400
the art

626
00:25:41,400 --> 00:25:45,600
so in this work in this talk I'm going

627
00:25:45,600 --> 00:25:47,760
to focus on the seaside based protocols

628
00:25:47,760 --> 00:25:49,919
I'm not going to talk about the sidh

629
00:25:49,919 --> 00:25:52,440
based protocols so in the seaside based

630
00:25:52,440 --> 00:25:54,840
protocols there's three Works which

631
00:25:54,840 --> 00:25:57,779
construct two round

632
00:25:57,779 --> 00:26:00,120
OT protocols in the setup model mainly

633
00:26:00,120 --> 00:26:02,700
CRS and CRS plus random molecule model

634
00:26:02,700 --> 00:26:05,760
and they satisfy UC security but they

635
00:26:05,760 --> 00:26:07,440
rely on this diffusional Seaside

636
00:26:07,440 --> 00:26:09,779
assumption so it's like a ddh variant of

637
00:26:09,779 --> 00:26:12,539
Seaside then there's a recent work in

638
00:26:12,539 --> 00:26:15,539
eurocrypt 21 by lie at all so they

639
00:26:15,539 --> 00:26:17,100
construct a foreground protocol from

640
00:26:17,100 --> 00:26:20,400
reciprocal Seaside so this is a

641
00:26:20,400 --> 00:26:22,320
um a Quantum equivalent to computational

642
00:26:22,320 --> 00:26:25,140
Seaside so they rely on CRS plus random

643
00:26:25,140 --> 00:26:27,000
molecule but they are not round optimal

644
00:26:27,000 --> 00:26:28,860
because they require four rounds and

645
00:26:28,860 --> 00:26:30,179
finally there's a recent work by

646
00:26:30,179 --> 00:26:32,460
orphania at all uh which came out I

647
00:26:32,460 --> 00:26:34,320
think last month so they rely on

648
00:26:34,320 --> 00:26:36,299
discrete log C side

649
00:26:36,299 --> 00:26:37,740
um which is like the one-wayiness of

650
00:26:37,740 --> 00:26:40,080
Seaside but they rely on knowledge of

651
00:26:40,080 --> 00:26:41,520
exponent assumption for the reduction

652
00:26:41,520 --> 00:26:44,159
and they are around optimal but they

653
00:26:44,159 --> 00:26:46,320
only obtain relaxed UC security because

654
00:26:46,320 --> 00:26:48,179
they get knowledge of exponent

655
00:26:48,179 --> 00:26:51,179
assumption and finally in this work we

656
00:26:51,179 --> 00:26:53,279
build from computational suicide which

657
00:26:53,279 --> 00:26:55,620
we wanted to go and we get it in two

658
00:26:55,620 --> 00:26:57,960
rounds so we actually get UC security so

659
00:26:57,960 --> 00:27:00,480
this is a typo this will be UC and we

660
00:27:00,480 --> 00:27:02,279
get it in the CRS plus random Oracle

661
00:27:02,279 --> 00:27:03,360
model

662
00:27:03,360 --> 00:27:06,360
so our contributions is as follows uh in

663
00:27:06,360 --> 00:27:09,840
the setup model we obtain a two round UC

664
00:27:09,840 --> 00:27:12,240
rot in CRS plus random Oracle from

665
00:27:12,240 --> 00:27:14,039
computational Seaside

666
00:27:14,039 --> 00:27:16,799
and we also obtain MPC by applying the

667
00:27:16,799 --> 00:27:19,520
results of bl18 and gs18

668
00:27:19,520 --> 00:27:22,620
and now I'm gonna talk about uh our

669
00:27:22,620 --> 00:27:24,539
results in the plane model so in the

670
00:27:24,539 --> 00:27:26,580
plane model there are three Works uh

671
00:27:26,580 --> 00:27:28,260
which obtain

672
00:27:28,260 --> 00:27:31,440
OT protocols so this uh word by alamati

673
00:27:31,440 --> 00:27:33,960
at all they are two rounds they they

674
00:27:33,960 --> 00:27:36,240
only obtain semantic security they don't

675
00:27:36,240 --> 00:27:38,159
get simulation security so they only

676
00:27:38,159 --> 00:27:39,960
have indistinguishivity-based security

677
00:27:39,960 --> 00:27:41,760
where you get Center privacy and

678
00:27:41,760 --> 00:27:44,220
receiver privacy but not extraction so

679
00:27:44,220 --> 00:27:46,380
uh this is not full simulation so that's

680
00:27:46,380 --> 00:27:49,980
why they can do two rounds and there are

681
00:27:49,980 --> 00:27:53,220
words uh there's a work in TCC last year

682
00:27:53,220 --> 00:27:55,440
where we construct a four round OT

683
00:27:55,440 --> 00:27:57,539
protocol in the plane model and we get

684
00:27:57,539 --> 00:27:59,580
full simulation security and as a result

685
00:27:59,580 --> 00:28:02,100
we get MPC and this is four round this

686
00:28:02,100 --> 00:28:04,440
round optimal in the plane model and

687
00:28:04,440 --> 00:28:08,159
there's a work by uh kurana at all which

688
00:28:08,159 --> 00:28:11,580
uh by applying the result of admp20 you

689
00:28:11,580 --> 00:28:13,860
can get a four round plane model OT from

690
00:28:13,860 --> 00:28:16,559
decision on C side so as you can see the

691
00:28:16,559 --> 00:28:18,120
literature is open for computational

692
00:28:18,120 --> 00:28:20,400
free site and in this work uh we

693
00:28:20,400 --> 00:28:22,919
construct a four round plane model OT

694
00:28:22,919 --> 00:28:26,039
and MPC from uh in from computational C

695
00:28:26,039 --> 00:28:28,679
side uh so this is our second

696
00:28:28,679 --> 00:28:30,960
contribution so we get a four round OT

697
00:28:30,960 --> 00:28:33,779
protocol in plane model uh which uh

698
00:28:33,779 --> 00:28:36,000
simulation sound uh simulation secure

699
00:28:36,000 --> 00:28:38,760
and from computational Seaside and we

700
00:28:38,760 --> 00:28:41,039
also get MPC by applying the result of

701
00:28:41,039 --> 00:28:44,460
bl18 and js18 and finally we also get a

702
00:28:44,460 --> 00:28:47,820
we also show an OT extension in to show

703
00:28:47,820 --> 00:28:50,700
some efficient results uh our base OT

704
00:28:50,700 --> 00:28:53,039
requires four isogenic computations and

705
00:28:53,039 --> 00:28:55,500
this protocol relies on reciprocal

706
00:28:55,500 --> 00:28:56,880
Seaside which is computational

707
00:28:56,880 --> 00:28:59,880
equivalent to computational Suicide uh

708
00:28:59,880 --> 00:29:01,620
Quantum equivalent to competition C side

709
00:29:01,620 --> 00:29:04,200
so these are our main contributions now

710
00:29:04,200 --> 00:29:07,140
I'm gonna briefly talk about isogeneous

711
00:29:07,140 --> 00:29:08,539
preliminaries

712
00:29:08,539 --> 00:29:11,640
Simon has already introduced them in the

713
00:29:11,640 --> 00:29:14,580
previous talk so this is a group action

714
00:29:14,580 --> 00:29:16,980
a group action consists of a group and a

715
00:29:16,980 --> 00:29:20,940
set and a function uh star over here

716
00:29:20,940 --> 00:29:23,700
from the group and set to the set and

717
00:29:23,700 --> 00:29:25,559
you need an identity element such that e

718
00:29:25,559 --> 00:29:28,919
star X is equal to X and the group has

719
00:29:28,919 --> 00:29:33,059
to be a billion and also g dot h start X

720
00:29:33,059 --> 00:29:36,120
should be G star a star X and

721
00:29:36,120 --> 00:29:38,580
um for any two set elements x and x

722
00:29:38,580 --> 00:29:41,220
Prime there exists a unique G in the

723
00:29:41,220 --> 00:29:45,000
group such that G Star X is X Prime

724
00:29:45,000 --> 00:29:48,059
um next uh there's uh something called

725
00:29:48,059 --> 00:29:50,220
effective group action which Simon

726
00:29:50,220 --> 00:29:52,320
introduced in the last talk that is you

727
00:29:52,320 --> 00:29:54,659
can efficiently compute G Star X for any

728
00:29:54,659 --> 00:29:58,080
G comma X in G cross X and you have

729
00:29:58,080 --> 00:30:00,179
efficient a guy instantiations from

730
00:30:00,179 --> 00:30:02,399
Seaside with known group structure and C

731
00:30:02,399 --> 00:30:04,919
fish and this is not broken due to the

732
00:30:04,919 --> 00:30:06,960
recent attacks on its ideas family of

733
00:30:06,960 --> 00:30:08,700
isogenes there's also another

734
00:30:08,700 --> 00:30:11,399
abstraction called rega which is regular

735
00:30:11,399 --> 00:30:14,279
group action and in our protocols do

736
00:30:14,279 --> 00:30:15,860
work in that

737
00:30:15,860 --> 00:30:18,419
regular group action framework but in

738
00:30:18,419 --> 00:30:20,039
this talk I'm not gonna talk about it

739
00:30:20,039 --> 00:30:22,760
due to uh to keep it simple

740
00:30:22,760 --> 00:30:25,200
uh so these are the computational

741
00:30:25,200 --> 00:30:27,419
assumptions so first is the discrete log

742
00:30:27,419 --> 00:30:30,240
C side assumption or the one-way AGA so

743
00:30:30,240 --> 00:30:32,580
given a random group element G from and

744
00:30:32,580 --> 00:30:36,000
a set element x uh and given X comma G

745
00:30:36,000 --> 00:30:37,740
Star X it is computationally invisible

746
00:30:37,740 --> 00:30:41,039
to compute G so this is like one Venus

747
00:30:41,039 --> 00:30:43,080
and then you have the weak unpredictable

748
00:30:43,080 --> 00:30:45,419
AGA uh which is like the computational C

749
00:30:45,419 --> 00:30:48,120
side so this is somewhat like the CDH

750
00:30:48,120 --> 00:30:51,380
variant of C side so here given G and H

751
00:30:51,380 --> 00:30:55,260
and X comma G Star X and H star X you

752
00:30:55,260 --> 00:30:56,700
cannot compute like an adversary

753
00:30:56,700 --> 00:30:58,799
computationally bounded adversary

754
00:30:58,799 --> 00:31:02,340
compute G Star g dot h start X so this

755
00:31:02,340 --> 00:31:04,200
is the computational C side or like the

756
00:31:04,200 --> 00:31:07,080
CDH variant or C side so our Protocols

757
00:31:07,080 --> 00:31:09,600
are in this uh from this assumption now

758
00:31:09,600 --> 00:31:11,520
the second one

759
00:31:11,520 --> 00:31:13,799
so now I'm gonna talk about our OT

760
00:31:13,799 --> 00:31:16,740
protocol in the setup model

761
00:31:16,740 --> 00:31:19,500
so we start off with the two round semi

762
00:31:19,500 --> 00:31:22,860
honest OT protocol so here uh we assume

763
00:31:22,860 --> 00:31:24,720
that the sender and the receiver will

764
00:31:24,720 --> 00:31:27,299
follow the OT protocol like when if when

765
00:31:27,299 --> 00:31:29,820
it's corrupted by a adversary so in the

766
00:31:29,820 --> 00:31:32,580
CRS you have three set elements x x 0

767
00:31:32,580 --> 00:31:34,980
and X1 and now the receiver has choice

768
00:31:34,980 --> 00:31:37,260
would be it samples a random group

769
00:31:37,260 --> 00:31:39,360
element R and it computes the first OT

770
00:31:39,360 --> 00:31:43,140
message as R star XB it sends over this

771
00:31:43,140 --> 00:31:45,840
Z to Sender now the sender computes two

772
00:31:45,840 --> 00:31:48,840
random paths by sampling k0 K1 from the

773
00:31:48,840 --> 00:31:52,799
group and capital y 0 if K 0 star x0 and

774
00:31:52,799 --> 00:31:57,059
capital Y 1 is k1 stud X1 and then the

775
00:31:57,059 --> 00:31:59,700
sender uses this k0 and K1 the

776
00:31:59,700 --> 00:32:01,980
randomness to encrypt the messages m0

777
00:32:01,980 --> 00:32:04,740
and M1 so the sender computes t0 and T1

778
00:32:04,740 --> 00:32:08,820
which is Hash of k0 star v x or m0 and

779
00:32:08,820 --> 00:32:12,480
T1 is Hash of K1 star Z Exon M1 so this

780
00:32:12,480 --> 00:32:15,360
H is random Oracle and now the center

781
00:32:15,360 --> 00:32:18,299
just sends y 0 y 1 and t 0 t 1 to the

782
00:32:18,299 --> 00:32:19,140
receiver

783
00:32:19,140 --> 00:32:23,159
now the receiver can compute uh MB which

784
00:32:23,159 --> 00:32:26,700
is cbxr Hash of R star y b so just given

785
00:32:26,700 --> 00:32:30,840
this Randomness R and y y b and TV it

786
00:32:30,840 --> 00:32:33,000
can compute MB so if you work out the

787
00:32:33,000 --> 00:32:36,120
algebra then you can find out that MB is

788
00:32:36,120 --> 00:32:40,200
what it is so this thing works out and

789
00:32:40,200 --> 00:32:41,940
to argue that the receiver's choice

790
00:32:41,940 --> 00:32:44,279
would be is hidden from a corrupt sender

791
00:32:44,279 --> 00:32:46,440
we can show that this choice would be

792
00:32:46,440 --> 00:32:49,679
statistically hidden so assume that b is

793
00:32:49,679 --> 00:32:53,460
equal to 1 that means V is R star X1 and

794
00:32:53,460 --> 00:32:56,220
you can also write it as R Prime Star x0

795
00:32:56,220 --> 00:32:58,860
where R Prime is a function of the

796
00:32:58,860 --> 00:33:02,399
trapdos of the CRS so R Prime can be

797
00:33:02,399 --> 00:33:06,059
written as r g 1 G 0 inverse so you can

798
00:33:06,059 --> 00:33:09,720
express Z as both and

799
00:33:09,720 --> 00:33:11,580
um both as a first message corresponding

800
00:33:11,580 --> 00:33:15,059
to bit 0 and bit one so that's why the

801
00:33:15,059 --> 00:33:17,519
choice bit is hidden and now for

802
00:33:17,519 --> 00:33:19,799
standard privacy we can show that if the

803
00:33:19,799 --> 00:33:22,080
receiver computes M1 minus B then you

804
00:33:22,080 --> 00:33:25,559
can break uh the weak unpaintable AGA

805
00:33:25,559 --> 00:33:27,600
property and for the reduction we need

806
00:33:27,600 --> 00:33:30,299
to extract the r this R from a corrupt

807
00:33:30,299 --> 00:33:31,019
receiver

808
00:33:31,019 --> 00:33:33,360
so this is semi honest and now to make

809
00:33:33,360 --> 00:33:37,320
it malicious uh we need we can show that

810
00:33:37,320 --> 00:33:39,720
uh this this protocol already satisfies

811
00:33:39,720 --> 00:33:42,179
security against a malicious sender that

812
00:33:42,179 --> 00:33:44,340
is you can extract m0 on M1 when the

813
00:33:44,340 --> 00:33:46,380
sender is malicious but when the

814
00:33:46,380 --> 00:33:48,659
receiver is malicious you cannot extract

815
00:33:48,659 --> 00:33:51,659
B and R because recall that it was

816
00:33:51,659 --> 00:33:54,480
statistically hidden from so we need

817
00:33:54,480 --> 00:33:57,059
some additional Primitives to get uh

818
00:33:57,059 --> 00:33:58,559
input extraction for a malicious

819
00:33:58,559 --> 00:34:00,000
receiver

820
00:34:00,000 --> 00:34:02,899
so to do that uh we introduce I mean we

821
00:34:02,899 --> 00:34:06,539
uh get help from the literature we use

822
00:34:06,539 --> 00:34:08,699
the the firmative called non-interactive

823
00:34:08,699 --> 00:34:10,560
witnessing distribution proof of

824
00:34:10,560 --> 00:34:12,599
knowledge or navy so here there's

825
00:34:12,599 --> 00:34:14,760
approver who has an NP statement tax and

826
00:34:14,760 --> 00:34:16,980
witness W and the verifier has the same

827
00:34:16,980 --> 00:34:19,379
entry statement X and now the webrover

828
00:34:19,379 --> 00:34:22,379
sends a proof called Pi which is uh

829
00:34:22,379 --> 00:34:24,780
there exists W such that X comma W is in

830
00:34:24,780 --> 00:34:27,480
the relation and now the completeness

831
00:34:27,480 --> 00:34:29,699
says that verified outputs want if x and

832
00:34:29,699 --> 00:34:31,918
W is in the relation soundness says that

833
00:34:31,918 --> 00:34:34,260
if X is not in the relation then verify

834
00:34:34,260 --> 00:34:36,418
output 0 and witnessing distribution

835
00:34:36,418 --> 00:34:39,359
says that if Pi 0 and Pi 1 are computed

836
00:34:39,359 --> 00:34:41,940
using two different Witnesses then Pi 0

837
00:34:41,940 --> 00:34:44,520
and Pi 1 are indistinguishable and proof

838
00:34:44,520 --> 00:34:46,020
of knowledge says that witness can be

839
00:34:46,020 --> 00:34:48,300
extracted from an activity group so we

840
00:34:48,300 --> 00:34:50,339
are going to use this perimeter to get

841
00:34:50,339 --> 00:34:52,679
security against malicious receiver

842
00:34:52,679 --> 00:34:55,980
and we also build this from wiga in the

843
00:34:55,980 --> 00:34:58,080
CRF model

844
00:34:58,080 --> 00:35:00,839
so this was our uh semi honest protocol

845
00:35:00,839 --> 00:35:04,200
from the previous slides and now we uh

846
00:35:04,200 --> 00:35:07,320
uh like Incorporated these Navy

847
00:35:07,320 --> 00:35:11,040
protocols where this receiver uses a

848
00:35:11,040 --> 00:35:13,740
Navy to prove that it knows R such that

849
00:35:13,740 --> 00:35:16,500
these are static 0 or these R star X1

850
00:35:16,500 --> 00:35:18,300
and it sells the Navy proof and the

851
00:35:18,300 --> 00:35:22,079
sender verifies the Navy proof now uh

852
00:35:22,079 --> 00:35:24,060
coming back to receiver privacy and send

853
00:35:24,060 --> 00:35:26,640
a privacy uh the receiver privacy

854
00:35:26,640 --> 00:35:28,140
follows that choice would be

855
00:35:28,140 --> 00:35:30,900
statistically hidden and the pi is uh

856
00:35:30,900 --> 00:35:32,820
witnessing distinguishable that this

857
00:35:32,820 --> 00:35:36,300
does not leak about whether it's from x0

858
00:35:36,300 --> 00:35:39,180
or X1 so uh this is which is individual

859
00:35:39,180 --> 00:35:41,640
and for sender privacy

860
00:35:41,640 --> 00:35:44,579
we again uh relying on this pi to

861
00:35:44,579 --> 00:35:46,500
extract the r

862
00:35:46,500 --> 00:35:48,599
um and this relies on Pi sound and

863
00:35:48,599 --> 00:35:51,060
extractable and then we reduce to our

864
00:35:51,060 --> 00:35:53,880
semi honest sender privacy argument

865
00:35:53,880 --> 00:35:55,980
and to do input extraction you can

866
00:35:55,980 --> 00:35:58,200
extract from the Nui as I said before

867
00:35:58,200 --> 00:36:01,320
and for standard input extraction uh you

868
00:36:01,320 --> 00:36:03,839
use the CRS trapdoor to extract both m0

869
00:36:03,839 --> 00:36:07,320
and M1 so this is our two round

870
00:36:07,320 --> 00:36:09,960
malicious secure OT protocol in the

871
00:36:09,960 --> 00:36:11,240
setup model

872
00:36:11,240 --> 00:36:15,119
and yeah and now uh I'm gonna discuss

873
00:36:15,119 --> 00:36:18,119
our plane model OT protocol so before

874
00:36:18,119 --> 00:36:20,880
doing that I'm going to discuss the

875
00:36:20,880 --> 00:36:23,220
interactive variants of nivi and zero

876
00:36:23,220 --> 00:36:25,020
knowledge so in zero knowledge you again

877
00:36:25,020 --> 00:36:27,060
have approver who has input statement X

878
00:36:27,060 --> 00:36:28,980
and witness W and the verified as

879
00:36:28,980 --> 00:36:30,839
statement X so it needs to satisfy

880
00:36:30,839 --> 00:36:32,940
completeness soundness zero knowledge

881
00:36:32,940 --> 00:36:35,880
and proof of knowledge says that a

882
00:36:35,880 --> 00:36:37,440
witness W can be extracted from an

883
00:36:37,440 --> 00:36:39,540
accepting proof and in addition we need

884
00:36:39,540 --> 00:36:41,460
an additional property called delete

885
00:36:41,460 --> 00:36:45,000
input that is only the last vka protocol

886
00:36:45,000 --> 00:36:47,280
message depends on the approval's input

887
00:36:47,280 --> 00:36:50,220
statement X so the first three protocol

888
00:36:50,220 --> 00:36:52,740
messages are independent of X so this is

889
00:36:52,740 --> 00:36:55,760
an important property for our protocol

890
00:36:55,760 --> 00:37:00,660
and we build this from wiga as well and

891
00:37:00,660 --> 00:37:04,140
next another primitive is delete input

892
00:37:04,140 --> 00:37:06,720
wi proof of knowledge so this is same as

893
00:37:06,720 --> 00:37:08,220
the interactive zero knowledge except

894
00:37:08,220 --> 00:37:10,980
this is wi uh witness indistinguishable

895
00:37:10,980 --> 00:37:13,200
and not zero knowledge and we need like

896
00:37:13,200 --> 00:37:14,400
three rounds

897
00:37:14,400 --> 00:37:17,400
and this has to be also delayed input

898
00:37:17,400 --> 00:37:19,440
that is only the last wi protocol

899
00:37:19,440 --> 00:37:21,900
message depends on the statement so this

900
00:37:21,900 --> 00:37:24,599
is uh delayed input wi proof of

901
00:37:24,599 --> 00:37:26,579
knowledge so using these two Primitives

902
00:37:26,579 --> 00:37:28,920
we are going to build our plane model

903
00:37:28,920 --> 00:37:31,859
ody protocol uh and we also build this

904
00:37:31,859 --> 00:37:35,700
uh protocol from we AGA uh in the paper

905
00:37:35,700 --> 00:37:38,700
and so this is our

906
00:37:38,700 --> 00:37:42,060
two round semi honest protocol which is

907
00:37:42,060 --> 00:37:43,560
like the first protocol so if you

908
00:37:43,560 --> 00:37:45,599
remember the receiver had a choice would

909
00:37:45,599 --> 00:37:48,900
be it computed uh r and v and it sent it

910
00:37:48,900 --> 00:37:50,940
over and this was the second OT message

911
00:37:50,940 --> 00:37:54,180
and x01 X1 was a CRS so in this

912
00:37:54,180 --> 00:37:55,800
maliciously secured plane model OT

913
00:37:55,800 --> 00:37:58,380
there's no CRS so the sender is supposed

914
00:37:58,380 --> 00:38:01,500
to sample the CRS x01 X1 so this is

915
00:38:01,500 --> 00:38:03,660
going to be ot2 message and now I am

916
00:38:03,660 --> 00:38:06,000
going to briefly fill up the other four

917
00:38:06,000 --> 00:38:07,079
OT messages

918
00:38:07,079 --> 00:38:09,180
so first I am going to

919
00:38:09,180 --> 00:38:12,660
incorporate the wi primitive from the

920
00:38:12,660 --> 00:38:15,060
previous slide so you are using the

921
00:38:15,060 --> 00:38:17,760
double interactive wi the receiver is

922
00:38:17,760 --> 00:38:20,460
going to prove that it knows an R such

923
00:38:20,460 --> 00:38:23,220
that these R start at 0 and Z is R star

924
00:38:23,220 --> 00:38:27,420
X1 so re see that uh like the first two

925
00:38:27,420 --> 00:38:29,400
messages are just like the

926
00:38:29,400 --> 00:38:32,339
pre-processing or the uh like the here

927
00:38:32,339 --> 00:38:34,920
we need the delayed input property of wi

928
00:38:34,920 --> 00:38:37,859
because we don't require rely on the

929
00:38:37,859 --> 00:38:39,960
statement over in this two first

930
00:38:39,960 --> 00:38:42,660
messages so this is a three round delete

931
00:38:42,660 --> 00:38:45,240
input wi which are using here and the

932
00:38:45,240 --> 00:38:47,160
verifier will now verify the wi in the

933
00:38:47,160 --> 00:38:49,200
third round and then it will compute the

934
00:38:49,200 --> 00:38:51,180
fourth round which is like this to

935
00:38:51,180 --> 00:38:53,339
second round of the semi honest OD

936
00:38:53,339 --> 00:38:55,640
protocol and send it over

937
00:38:55,640 --> 00:39:01,800
and then uh to prove uh for like now to

938
00:39:01,800 --> 00:39:04,140
uh consider as malicious sender we need

939
00:39:04,140 --> 00:39:07,260
to uh ensure that this x0 and X1 is

940
00:39:07,260 --> 00:39:09,060
correct and we also need to extract the

941
00:39:09,060 --> 00:39:11,940
g0 and G1 so that's why we use the

942
00:39:11,940 --> 00:39:14,099
delayed input ZK protocol the zero

943
00:39:14,099 --> 00:39:16,020
knowledge protocol which was four round

944
00:39:16,020 --> 00:39:17,640
so the first three rounds are like

945
00:39:17,640 --> 00:39:19,140
pre-processing independent of the

946
00:39:19,140 --> 00:39:21,619
statement and the final round

947
00:39:21,619 --> 00:39:24,119
protocol message from the sender to the

948
00:39:24,119 --> 00:39:26,400
receiver is dependent on the uh

949
00:39:26,400 --> 00:39:28,619
statement and it sends it over and the

950
00:39:28,619 --> 00:39:30,660
receiver now verifies that so after it

951
00:39:30,660 --> 00:39:32,280
verifies it now it computes the message

952
00:39:32,280 --> 00:39:36,060
so this is our four round plane model OT

953
00:39:36,060 --> 00:39:38,280
protocol which is nothing but the two

954
00:39:38,280 --> 00:39:40,800
round semi honest protocol Plus or three

955
00:39:40,800 --> 00:39:43,260
round wi and a four round V K so that's

956
00:39:43,260 --> 00:39:45,900
how we can interpret our four round

957
00:39:45,900 --> 00:39:48,000
malicious we secure OT protocol in the

958
00:39:48,000 --> 00:39:50,640
plane model and now to argue input

959
00:39:50,640 --> 00:39:52,740
privacy we can

960
00:39:52,740 --> 00:39:55,260
see that b statistically hidden and the

961
00:39:55,260 --> 00:39:56,880
wi and

962
00:39:56,880 --> 00:39:59,339
I or what is B and this ZK protocol has

963
00:39:59,339 --> 00:40:03,720
to be found uh and because if this uh x0

964
00:40:03,720 --> 00:40:05,760
next one is badly computed then you

965
00:40:05,760 --> 00:40:07,500
might be able to leak stuff

966
00:40:07,500 --> 00:40:11,160
and finally uh and finally uh for sender

967
00:40:11,160 --> 00:40:13,980
privacy if our compute M1 minus B then

968
00:40:13,980 --> 00:40:17,040
we can make w a ga and we also rely on w

969
00:40:17,040 --> 00:40:20,040
w i sound knowledge

970
00:40:20,040 --> 00:40:22,140
and then for input extraction we extract

971
00:40:22,140 --> 00:40:26,160
R from this uh Pi wi and we extract B

972
00:40:26,160 --> 00:40:29,640
accordingly by setting Z dot x b and

973
00:40:29,640 --> 00:40:31,560
finally for input uh sender input

974
00:40:31,560 --> 00:40:34,560
extraction you extract g0 and G1 from

975
00:40:34,560 --> 00:40:36,800
this um

976
00:40:36,800 --> 00:40:40,560
and then you compute uh M1 and m0 using

977
00:40:40,560 --> 00:40:44,460
the trapdos g0 and G1 so this is our uh

978
00:40:44,460 --> 00:40:48,780
simulation security for the plane model

979
00:40:48,780 --> 00:40:52,020
and finally we build these Primitives

980
00:40:52,020 --> 00:40:55,260
from wa because there are known uh

981
00:40:55,260 --> 00:40:57,240
constructions of these Primitives from

982
00:40:57,240 --> 00:41:00,060
weaker Primitives like injectives

983
00:41:00,060 --> 00:41:01,200
chapter one way function and

984
00:41:01,200 --> 00:41:02,880
statistically hiding commitments two

985
00:41:02,880 --> 00:41:05,700
rounds so you can build them from wa

986
00:41:05,700 --> 00:41:08,220
so to conclude uh

987
00:41:08,220 --> 00:41:11,280
uh we uh introduce we constructed the

988
00:41:11,280 --> 00:41:14,400
first round optimal OT or MPC in the CRS

989
00:41:14,400 --> 00:41:15,900
plus random molecule model from

990
00:41:15,900 --> 00:41:19,020
computational Seaside we also built the

991
00:41:19,020 --> 00:41:21,720
first round optimal OT plus MPC in plane

992
00:41:21,720 --> 00:41:23,820
model from computational Seaside and we

993
00:41:23,820 --> 00:41:26,099
also have a OT extension based on

994
00:41:26,099 --> 00:41:28,099
reciprocal Seaside which is efficient

995
00:41:28,099 --> 00:41:30,839
and to conclude with two open problems

996
00:41:30,839 --> 00:41:32,820
uh can we build two-round computational

997
00:41:32,820 --> 00:41:36,480
fee site based ucot which is like you

998
00:41:36,480 --> 00:41:39,240
need extraction for corrupt receiver and

999
00:41:39,240 --> 00:41:41,339
corrupt sender without relying on random

1000
00:41:41,339 --> 00:41:44,160
Oracle so in our paper we need the

1001
00:41:44,160 --> 00:41:47,160
random molecule to extract the r for the

1002
00:41:47,160 --> 00:41:49,020
reduction but that is not really

1003
00:41:49,020 --> 00:41:51,359
required for the simulation so can you

1004
00:41:51,359 --> 00:41:54,300
remove the random Oracle and still get a

1005
00:41:54,300 --> 00:41:55,380
ucot

1006
00:41:55,380 --> 00:41:58,020
and finally can you build a two round

1007
00:41:58,020 --> 00:42:00,180
ucot from computational Seaside where

1008
00:42:00,180 --> 00:42:01,980
you incur constant number of isogenic

1009
00:42:01,980 --> 00:42:05,460
competitions so our protocol uh recall

1010
00:42:05,460 --> 00:42:07,800
that has a new e inside it for the two

1011
00:42:07,800 --> 00:42:10,500
round malicious secure OT ucot and that

1012
00:42:10,500 --> 00:42:13,079
requires order of K isogenic

1013
00:42:13,079 --> 00:42:14,820
computations so that part is not

1014
00:42:14,820 --> 00:42:18,599
constant is so can you do that uh from I

1015
00:42:18,599 --> 00:42:19,800
mean yeah can you do that from

1016
00:42:19,800 --> 00:42:22,079
computational Seaside without uh

1017
00:42:22,079 --> 00:42:24,540
requiring security parameter number of

1018
00:42:24,540 --> 00:42:28,279
file functions so thank you

1019
00:42:32,820 --> 00:42:35,220
it's

1020
00:42:35,220 --> 00:42:37,859
uh thank you thank you for talk uh my

1021
00:42:37,859 --> 00:42:39,180
question is what's the difference

1022
00:42:39,180 --> 00:42:41,579
between UC security and simulation

1023
00:42:41,579 --> 00:42:44,280
security and which one is stronger uh

1024
00:42:44,280 --> 00:42:46,619
you think already definitely stronger uh

1025
00:42:46,619 --> 00:42:48,839
what's uh the UC security is definitely

1026
00:42:48,839 --> 00:42:51,480
stronger uh but in the plane model you

1027
00:42:51,480 --> 00:42:53,160
cannot get UC security

1028
00:42:53,160 --> 00:42:54,359
so

1029
00:42:54,359 --> 00:42:57,300
um simulation security is weaker uh if

1030
00:42:57,300 --> 00:42:59,040
that makes sense so you need some kind

1031
00:42:59,040 --> 00:43:01,700
of setup assumption to get UC security

1032
00:43:01,700 --> 00:43:03,900
uh but you cannot get that in the clean

1033
00:43:03,900 --> 00:43:04,859
model

1034
00:43:04,859 --> 00:43:06,480
okay

1035
00:43:06,480 --> 00:43:08,579
because I mean you have rewinding so

1036
00:43:08,579 --> 00:43:10,380
that is like you see incompatible maybe

1037
00:43:10,380 --> 00:43:11,460
we can talk

1038
00:43:11,460 --> 00:43:15,500
after let's and here's a question

1039
00:43:16,319 --> 00:43:17,819
okay so let's say you speak here again

1040
00:43:17,819 --> 00:43:20,180
okay

1041
00:43:24,300 --> 00:43:28,400
and the final talk for today is entitled

1042
00:43:28,400 --> 00:43:32,339
generic models for group actions by

1043
00:43:32,339 --> 00:43:36,900
Julia mon Dominique Hartman acre kills

1044
00:43:36,900 --> 00:43:40,859
Sabrina quartzweiler Shona sliman and

1045
00:43:40,859 --> 00:43:45,859
during Reaper and shonassi's here

1046
00:43:46,440 --> 00:43:49,640
whenever you're ready

1047
00:43:52,140 --> 00:43:55,740
all right can you hear me yes very good

1048
00:43:55,740 --> 00:43:57,780
all right so this will be yet another

1049
00:43:57,780 --> 00:44:00,119
talk on group actions

1050
00:44:00,119 --> 00:44:01,859
um so there will be some overlap with

1051
00:44:01,859 --> 00:44:05,099
the previous talks so bear with me here

1052
00:44:05,099 --> 00:44:07,619
um first let's start the talk with some

1053
00:44:07,619 --> 00:44:09,900
motivation and for this we take our

1054
00:44:09,900 --> 00:44:12,180
favorite characters Alice and Bob they

1055
00:44:12,180 --> 00:44:14,220
want to have a private communication

1056
00:44:14,220 --> 00:44:16,859
over an insecure Channel like the

1057
00:44:16,859 --> 00:44:19,140
internet and therefore they have to

1058
00:44:19,140 --> 00:44:21,060
assume that there might be a malicious

1059
00:44:21,060 --> 00:44:23,400
party Eve that eavesdrop on their

1060
00:44:23,400 --> 00:44:26,520
messages and may read the secret and of

1061
00:44:26,520 --> 00:44:28,200
course that's nothing that Alice and Bob

1062
00:44:28,200 --> 00:44:29,280
want

1063
00:44:29,280 --> 00:44:31,380
and of course we know how to solve this

1064
00:44:31,380 --> 00:44:33,599
problem right we can just use encryption

1065
00:44:33,599 --> 00:44:35,760
for this and as long as Alice and Bob

1066
00:44:35,760 --> 00:44:38,280
use the secure encryption scheme uh if

1067
00:44:38,280 --> 00:44:40,560
you cannot learn the messages and in

1068
00:44:40,560 --> 00:44:42,900
particularly not the secret

1069
00:44:42,900 --> 00:44:44,940
uh this has worked very well in the past

1070
00:44:44,940 --> 00:44:48,180
but since recently we know that there

1071
00:44:48,180 --> 00:44:50,060
exists this notion of a quantum computer

1072
00:44:50,060 --> 00:44:52,800
and in particular if Eve has access to

1073
00:44:52,800 --> 00:44:55,859
such a quantum computer then she can

1074
00:44:55,859 --> 00:44:57,740
um break almost all the public key

1075
00:44:57,740 --> 00:44:59,640
cryptography we use today in the

1076
00:44:59,640 --> 00:45:01,680
internet

1077
00:45:01,680 --> 00:45:03,420
um and of course then Alice and Pop's

1078
00:45:03,420 --> 00:45:06,720
messages are not secure anymore

1079
00:45:06,720 --> 00:45:08,099
um we know how to solve this problem

1080
00:45:08,099 --> 00:45:09,180
again

1081
00:45:09,180 --> 00:45:10,859
um we can use post Quantum secure

1082
00:45:10,859 --> 00:45:12,480
cryptography for this

1083
00:45:12,480 --> 00:45:14,819
and there exist various approaches to

1084
00:45:14,819 --> 00:45:17,400
this and I guess the most prominent one

1085
00:45:17,400 --> 00:45:20,579
is based on Nazis they have very very

1086
00:45:20,579 --> 00:45:22,560
favorable trade-offs they are very

1087
00:45:22,560 --> 00:45:24,240
flexible and they have been recently

1088
00:45:24,240 --> 00:45:26,579
standardized by the Mist so we are

1089
00:45:26,579 --> 00:45:28,319
pretty confident in their hardness and

1090
00:45:28,319 --> 00:45:29,700
in their security

1091
00:45:29,700 --> 00:45:31,680
however it's not completely ruled out

1092
00:45:31,680 --> 00:45:34,020
that there's not some clever math that

1093
00:45:34,020 --> 00:45:36,000
completely breaks that this is right you

1094
00:45:36,000 --> 00:45:38,579
can never be sure about that so what we

1095
00:45:38,579 --> 00:45:41,339
like to do is we like to diversify so we

1096
00:45:41,339 --> 00:45:42,900
want to build protocol space and

1097
00:45:42,900 --> 00:45:45,240
different assumptions such that if one

1098
00:45:45,240 --> 00:45:47,040
of them gets broken then the others

1099
00:45:47,040 --> 00:45:48,000
might not

1100
00:45:48,000 --> 00:45:50,220
and one of these popular alternatives

1101
00:45:50,220 --> 00:45:52,680
are cryptographic group actions

1102
00:45:52,680 --> 00:45:55,020
um they come again in various traits and

1103
00:45:55,020 --> 00:45:57,780
forms but the most popular ones are

1104
00:45:57,780 --> 00:46:01,380
based on misogynist and this talk will

1105
00:46:01,380 --> 00:46:03,060
be exactly about this cryptographic

1106
00:46:03,060 --> 00:46:05,040
group actions

1107
00:46:05,040 --> 00:46:07,319
um now let me quickly give you an

1108
00:46:07,319 --> 00:46:08,640
introduction to group actions you have

1109
00:46:08,640 --> 00:46:11,160
seen this already but bear with me here

1110
00:46:11,160 --> 00:46:14,579
so we first need a group for our group

1111
00:46:14,579 --> 00:46:17,700
action and also we need a set which we

1112
00:46:17,700 --> 00:46:19,800
call X and we assume that this set is

1113
00:46:19,800 --> 00:46:22,800
more or less structuralized and thirdly

1114
00:46:22,800 --> 00:46:25,140
we need a mapping which is called star

1115
00:46:25,140 --> 00:46:27,540
here in this case and this mapping

1116
00:46:27,540 --> 00:46:31,319
should fulfill some basic properties

1117
00:46:31,319 --> 00:46:33,359
um well first of all we take a group

1118
00:46:33,359 --> 00:46:36,839
element and settle them in X and this

1119
00:46:36,839 --> 00:46:38,640
mapping should map us to another set

1120
00:46:38,640 --> 00:46:40,680
element G times x

1121
00:46:40,680 --> 00:46:44,280
and of course the identity should act

1122
00:46:44,280 --> 00:46:46,020
trivially on the set so this is one

1123
00:46:46,020 --> 00:46:47,280
property

1124
00:46:47,280 --> 00:46:49,740
and we want compatibility with a group

1125
00:46:49,740 --> 00:46:52,680
operation this means that g times H

1126
00:46:52,680 --> 00:46:54,960
times x should be equal to g plus h

1127
00:46:54,960 --> 00:46:57,780
times x and I assume I see we use

1128
00:46:57,780 --> 00:47:00,000
additive notation in this talk so which

1129
00:47:00,000 --> 00:47:02,819
is a bit unusual but I hope you get

1130
00:47:02,819 --> 00:47:03,720
along

1131
00:47:03,720 --> 00:47:06,780
there are more properties but I will

1132
00:47:06,780 --> 00:47:09,300
skip them for for brevity here

1133
00:47:09,300 --> 00:47:12,420
and if you have no group action then you

1134
00:47:12,420 --> 00:47:14,520
can Define some pretty standard group

1135
00:47:14,520 --> 00:47:17,099
action assumptions uh the first one is

1136
00:47:17,099 --> 00:47:19,859
discrete lock so given X and G times x

1137
00:47:19,859 --> 00:47:22,440
the task is to compute the G

1138
00:47:22,440 --> 00:47:26,579
uh the second one is CDH so given given

1139
00:47:26,579 --> 00:47:29,520
x g times x and H times x tassels the

1140
00:47:29,520 --> 00:47:32,579
compute G plus h times x

1141
00:47:32,579 --> 00:47:35,880
and the third one is ddh so given x g

1142
00:47:35,880 --> 00:47:38,579
times x and H times x and some set

1143
00:47:38,579 --> 00:47:41,160
elements that decide whether that is g

1144
00:47:41,160 --> 00:47:43,380
plus h times x

1145
00:47:43,380 --> 00:47:45,060
and again these are pretty pretty

1146
00:47:45,060 --> 00:47:46,619
standard right

1147
00:47:46,619 --> 00:47:50,160
um we are we know of a Quantum algorithm

1148
00:47:50,160 --> 00:47:52,140
solving these um and in particular

1149
00:47:52,140 --> 00:47:54,240
solving discrete log which is the the

1150
00:47:54,240 --> 00:47:56,220
cooperberg algorithm it has

1151
00:47:56,220 --> 00:47:59,099
sub-exponential uh time complexity

1152
00:47:59,099 --> 00:48:01,140
um but this is thus far the best attack

1153
00:48:01,140 --> 00:48:02,880
we know so

1154
00:48:02,880 --> 00:48:05,760
uh we are pretty confident in the

1155
00:48:05,760 --> 00:48:07,980
hardness of these assumptions

1156
00:48:07,980 --> 00:48:10,800
uh however you can also Define some uh

1157
00:48:10,800 --> 00:48:12,359
non-standard assumptions in the group

1158
00:48:12,359 --> 00:48:13,800
action World

1159
00:48:13,800 --> 00:48:16,079
um for example a strong CDH

1160
00:48:16,079 --> 00:48:19,200
in strong CDH you are given basically a

1161
00:48:19,200 --> 00:48:22,319
CDH instance so it's very similar to CDH

1162
00:48:22,319 --> 00:48:24,359
um but you're given additionally access

1163
00:48:24,359 --> 00:48:27,119
to these oracles so these TDH oracles

1164
00:48:27,119 --> 00:48:30,060
where you might note that the the first

1165
00:48:30,060 --> 00:48:31,740
input is fixed

1166
00:48:31,740 --> 00:48:34,319
so it's not quite the Gap problem we we

1167
00:48:34,319 --> 00:48:37,200
talked about before but uh it's uh it's

1168
00:48:37,200 --> 00:48:38,400
very similar

1169
00:48:38,400 --> 00:48:41,099
and this is not a esoteric assumption I

1170
00:48:41,099 --> 00:48:43,680
came up with for this talk this actually

1171
00:48:43,680 --> 00:48:46,560
analyzed the uh the active security of

1172
00:48:46,560 --> 00:48:48,240
the seaside key exchange in the quantum

1173
00:48:48,240 --> 00:48:50,460
random Oracle model which we showed at

1174
00:48:50,460 --> 00:48:52,800
last year's Azure Crypt

1175
00:48:52,800 --> 00:48:54,839
uh so it's very very important

1176
00:48:54,839 --> 00:48:56,700
assumption

1177
00:48:56,700 --> 00:48:59,220
now secondly you can also Define strong

1178
00:48:59,220 --> 00:49:01,500
Spirit inverse CDH

1179
00:49:01,500 --> 00:49:04,380
um which says that while given X and G

1180
00:49:04,380 --> 00:49:07,200
times x the task is to come to compute

1181
00:49:07,200 --> 00:49:09,359
such a tuple here where the first input

1182
00:49:09,359 --> 00:49:12,839
y can be chosen by the adversary but uh

1183
00:49:12,839 --> 00:49:14,520
then the adversary also has to compute

1184
00:49:14,520 --> 00:49:18,319
2T times Y and minus 3 times y

1185
00:49:18,319 --> 00:49:21,359
and again the adversary has access to

1186
00:49:21,359 --> 00:49:24,240
these ddh oracles

1187
00:49:24,240 --> 00:49:26,520
and here again this analyzed the

1188
00:49:26,520 --> 00:49:28,380
security of the group action based

1189
00:49:28,380 --> 00:49:30,839
password authenticator key exchange from

1190
00:49:30,839 --> 00:49:34,200
crypto 2022 and also in some mild

1191
00:49:34,200 --> 00:49:36,839
variation analyze the security of the

1192
00:49:36,839 --> 00:49:38,339
group action based oblivious transfer

1193
00:49:38,339 --> 00:49:41,040
from Europe 21.

1194
00:49:41,040 --> 00:49:44,640
so here it's not really clear how hard

1195
00:49:44,640 --> 00:49:46,859
these problems are right because the

1196
00:49:46,859 --> 00:49:48,720
intuition is that these ddh oracles

1197
00:49:48,720 --> 00:49:50,760
shouldn't help you much when Computing

1198
00:49:50,760 --> 00:49:52,859
the CDH or when Computing this Tuple

1199
00:49:52,859 --> 00:49:55,140
here for example but you could also

1200
00:49:55,140 --> 00:49:56,880
imagine having Quantum access to these

1201
00:49:56,880 --> 00:49:59,460
oracles right and then it's really

1202
00:49:59,460 --> 00:50:01,260
unclear how hard these problems really

1203
00:50:01,260 --> 00:50:04,079
are and whenever you're faced with such

1204
00:50:04,079 --> 00:50:05,579
a situation at least in the prime order

1205
00:50:05,579 --> 00:50:07,800
group setting what you would do as well

1206
00:50:07,800 --> 00:50:09,720
if you cannot analyze them directly in

1207
00:50:09,720 --> 00:50:11,280
the standard model then it would Resort

1208
00:50:11,280 --> 00:50:14,099
back to the idealized models where the

1209
00:50:14,099 --> 00:50:16,260
analysis might be a bit easier and then

1210
00:50:16,260 --> 00:50:18,060
you get at least some confidence in

1211
00:50:18,060 --> 00:50:20,280
their hardness

1212
00:50:20,280 --> 00:50:20,819
um

1213
00:50:20,819 --> 00:50:22,740
of course these models don't exist in

1214
00:50:22,740 --> 00:50:24,839
the group action setting yet and that's

1215
00:50:24,839 --> 00:50:27,900
actually what this work is about so we

1216
00:50:27,900 --> 00:50:30,660
first Define the generic group action

1217
00:50:30,660 --> 00:50:32,760
model which is based on the generic

1218
00:50:32,760 --> 00:50:34,440
group model by Shoop

1219
00:50:34,440 --> 00:50:37,560
and here you can show that in some cases

1220
00:50:37,560 --> 00:50:40,079
this model is actually part of the

1221
00:50:40,079 --> 00:50:42,359
generic group model by Shoop

1222
00:50:42,359 --> 00:50:45,000
and also we can show classical lower

1223
00:50:45,000 --> 00:50:47,099
bonds for all these problems we saw

1224
00:50:47,099 --> 00:50:49,400
before like discrete log CDH and ddh

1225
00:50:49,400 --> 00:50:52,440
however note that classical here really

1226
00:50:52,440 --> 00:50:55,079
means non-quantum because we can further

1227
00:50:55,079 --> 00:50:57,420
show that Quantum lower bonds are

1228
00:50:57,420 --> 00:51:00,420
impossible at least in this model

1229
00:51:00,420 --> 00:51:03,059
and secondly we Define the algebraic

1230
00:51:03,059 --> 00:51:05,040
group action model which again is based

1231
00:51:05,040 --> 00:51:07,140
on the algebraic group model where

1232
00:51:07,140 --> 00:51:08,880
things are now much nicer in the quantum

1233
00:51:08,880 --> 00:51:10,980
setting because we can now Define give

1234
00:51:10,980 --> 00:51:13,380
classical and Quantum reductions between

1235
00:51:13,380 --> 00:51:15,119
these non-standard assumptions and

1236
00:51:15,119 --> 00:51:18,079
discrete blocks

1237
00:51:18,900 --> 00:51:20,640
all right so

1238
00:51:20,640 --> 00:51:22,859
um let's first start with the generic

1239
00:51:22,859 --> 00:51:25,559
group action model and here the idea is

1240
00:51:25,559 --> 00:51:28,319
that we give the adversary access to a

1241
00:51:28,319 --> 00:51:31,020
generic group action that has no further

1242
00:51:31,020 --> 00:51:34,319
structure now how do we do this well

1243
00:51:34,319 --> 00:51:36,960
we take our group action and also Define

1244
00:51:36,960 --> 00:51:39,839
a labeling function Sigma that maps from

1245
00:51:39,839 --> 00:51:42,960
the set X to some bit strings and this

1246
00:51:42,960 --> 00:51:44,640
labeling function is drawn uniformly at

1247
00:51:44,640 --> 00:51:47,280
random so

1248
00:51:47,280 --> 00:51:49,940
these labels are also uniformly random

1249
00:51:49,940 --> 00:51:53,819
and now by concatenating these two we

1250
00:51:53,819 --> 00:51:56,160
get a generic group action on these

1251
00:51:56,160 --> 00:51:59,220
labels and the the intuition now is that

1252
00:51:59,220 --> 00:52:01,319
while the adversary only sees these

1253
00:52:01,319 --> 00:52:03,480
labels and for the adversary it does not

1254
00:52:03,480 --> 00:52:05,099
matter whether the group action is

1255
00:52:05,099 --> 00:52:07,319
implemented via esogenes or codes

1256
00:52:07,319 --> 00:52:09,839
because he doesn't see the real set

1257
00:52:09,839 --> 00:52:11,760
elements anymore he just sees labels

1258
00:52:11,760 --> 00:52:14,880
that are uniformly random

1259
00:52:14,880 --> 00:52:18,240
so um uh he cannot come up with these

1260
00:52:18,240 --> 00:52:20,339
labels himself because the the labeling

1261
00:52:20,339 --> 00:52:22,980
function is part of the of the setup or

1262
00:52:22,980 --> 00:52:25,740
of the of the model so in particular he

1263
00:52:25,740 --> 00:52:27,240
cannot compute the group action himself

1264
00:52:27,240 --> 00:52:28,800
anymore

1265
00:52:28,800 --> 00:52:29,579
um

1266
00:52:29,579 --> 00:52:32,339
and this is of course an issue we can

1267
00:52:32,339 --> 00:52:35,099
resolve this by giving the adversary

1268
00:52:35,099 --> 00:52:37,859
Oracle access to the group action so

1269
00:52:37,859 --> 00:52:41,220
this Oracle or X to compute computes the

1270
00:52:41,220 --> 00:52:42,780
group action for him

1271
00:52:42,780 --> 00:52:45,359
and this works by appearing the Oracle

1272
00:52:45,359 --> 00:52:48,540
on a group element and a label for some

1273
00:52:48,540 --> 00:52:50,240
set element X

1274
00:52:50,240 --> 00:52:53,339
and uh the Oracle then returns a label

1275
00:52:53,339 --> 00:52:56,640
for the set element of G times x

1276
00:52:56,640 --> 00:52:59,819
and again the idea is that the adversary

1277
00:52:59,819 --> 00:53:01,559
cannot come up with this label himself

1278
00:53:01,559 --> 00:53:03,660
uh the only thing you can really do with

1279
00:53:03,660 --> 00:53:07,460
these labels is check for equality

1280
00:53:08,160 --> 00:53:09,960
now of course you could also extend this

1281
00:53:09,960 --> 00:53:13,740
model with further oracles but I will

1282
00:53:13,740 --> 00:53:16,200
not do this for the sake of Simplicity

1283
00:53:16,200 --> 00:53:18,720
here and lastly I want to mention that

1284
00:53:18,720 --> 00:53:20,640
this is an information theoretic model

1285
00:53:20,640 --> 00:53:22,559
so in particular we give the adversary

1286
00:53:22,559 --> 00:53:26,700
unlimited runtime and only bound the the

1287
00:53:26,700 --> 00:53:28,260
number of Oracle queries more or less

1288
00:53:28,260 --> 00:53:29,700
right so

1289
00:53:29,700 --> 00:53:31,920
he can do whatever he wants like

1290
00:53:31,920 --> 00:53:35,059
inverting hash functions solving lwe

1291
00:53:35,059 --> 00:53:38,099
but he cannot freely compute in the

1292
00:53:38,099 --> 00:53:39,420
group action anymore because that's

1293
00:53:39,420 --> 00:53:41,480
what's what we bound

1294
00:53:41,480 --> 00:53:45,780
and this really models that the only

1295
00:53:45,780 --> 00:53:47,700
source of hardness in this model comes

1296
00:53:47,700 --> 00:53:49,680
from this from this group action and in

1297
00:53:49,680 --> 00:53:51,480
particular this also means that we have

1298
00:53:51,480 --> 00:53:53,099
an easy discrete block problem in the

1299
00:53:53,099 --> 00:53:55,800
group G because the adversary has free

1300
00:53:55,800 --> 00:53:57,180
access to the group G and you can

1301
00:53:57,180 --> 00:53:59,760
compute discrete logs in as much time as

1302
00:53:59,760 --> 00:54:01,800
he wants and this also matches our

1303
00:54:01,800 --> 00:54:04,680
intuition because groups are inherently

1304
00:54:04,680 --> 00:54:07,920
pre-quantum right and we don't want any

1305
00:54:07,920 --> 00:54:10,260
hardness of the group action to come

1306
00:54:10,260 --> 00:54:14,359
from a group right

1307
00:54:15,240 --> 00:54:17,339
all right so that's the model what can

1308
00:54:17,339 --> 00:54:19,079
we show on this model well first of all

1309
00:54:19,079 --> 00:54:21,119
we can show that if the group order plus

1310
00:54:21,119 --> 00:54:23,579
one is prime then the generic group

1311
00:54:23,579 --> 00:54:25,260
model by Shoop actually contains our

1312
00:54:25,260 --> 00:54:27,960
generic group action model and uh this

1313
00:54:27,960 --> 00:54:29,520
condition here on the group order is a

1314
00:54:29,520 --> 00:54:30,420
bit weird

1315
00:54:30,420 --> 00:54:32,099
um but actually comes from the fact that

1316
00:54:32,099 --> 00:54:35,839
in the generic group model uh we have

1317
00:54:35,839 --> 00:54:38,220
a multiplicative structure in the

1318
00:54:38,220 --> 00:54:39,720
exponents right so if you exponentially

1319
00:54:39,720 --> 00:54:41,460
it multiple times then you get a

1320
00:54:41,460 --> 00:54:44,819
multiplicative structure and in our

1321
00:54:44,819 --> 00:54:47,040
model we have an additive group instead

1322
00:54:47,040 --> 00:54:49,079
which is for technical reasons and this

1323
00:54:49,079 --> 00:54:50,819
mismatch caused this this weight

1324
00:54:50,819 --> 00:54:53,540
condition here

1325
00:54:53,700 --> 00:54:56,760
now as an easy crawler we now get that

1326
00:54:56,760 --> 00:54:59,520
under this condition uh discrete log is

1327
00:54:59,520 --> 00:55:02,460
actually hard in in our model so for

1328
00:55:02,460 --> 00:55:05,099
every adversary a in our generic group

1329
00:55:05,099 --> 00:55:07,559
action model against discrete log we can

1330
00:55:07,559 --> 00:55:09,960
bound its success probability by Q

1331
00:55:09,960 --> 00:55:12,119
squared over n where Q is the number of

1332
00:55:12,119 --> 00:55:14,579
Oracle queries that is the runtime of

1333
00:55:14,579 --> 00:55:17,760
the adversary and N is the group order

1334
00:55:17,760 --> 00:55:21,000
and this is exponential so this in in

1335
00:55:21,000 --> 00:55:24,480
sum is negligible

1336
00:55:25,920 --> 00:55:27,540
um actually by adapting the same proof

1337
00:55:27,540 --> 00:55:29,880
techniques as in the GTM we can also

1338
00:55:29,880 --> 00:55:31,980
show that this holds unconditionally

1339
00:55:31,980 --> 00:55:34,079
even though the group order plus one is

1340
00:55:34,079 --> 00:55:36,960
not prime uh and then we essentially get

1341
00:55:36,960 --> 00:55:39,000
the same Bond there's some some constant

1342
00:55:39,000 --> 00:55:41,160
Factor here involved but uh for

1343
00:55:41,160 --> 00:55:44,839
Simplicity we we leave it out here

1344
00:55:45,720 --> 00:55:47,520
right what about the quantum version of

1345
00:55:47,520 --> 00:55:50,640
the the generic group model then group

1346
00:55:50,640 --> 00:55:52,380
action models sorry

1347
00:55:52,380 --> 00:55:55,260
well in theory this is uh this is easy

1348
00:55:55,260 --> 00:55:57,180
to Define right we just allow Quantum

1349
00:55:57,180 --> 00:56:00,180
access to to the Oracle however there

1350
00:56:00,180 --> 00:56:02,520
exists an algorithm by adding an huia

1351
00:56:02,520 --> 00:56:05,760
which is a generic Quantum algorithm

1352
00:56:05,760 --> 00:56:09,359
solving group action discrete log

1353
00:56:09,359 --> 00:56:11,819
um it takes exponential time which means

1354
00:56:11,819 --> 00:56:14,160
it's not a real threat to group actions

1355
00:56:14,160 --> 00:56:17,160
however it has only polynomial Oracle

1356
00:56:17,160 --> 00:56:19,319
complexity meaning that in previously

1357
00:56:19,319 --> 00:56:21,240
Oracle a polynomial amount of times and

1358
00:56:21,240 --> 00:56:22,440
then has gathered enough information

1359
00:56:22,440 --> 00:56:26,040
such that it can only solve a local

1360
00:56:26,040 --> 00:56:28,380
optimization problem so to speak and

1361
00:56:28,380 --> 00:56:30,660
well this takes exponential time but in

1362
00:56:30,660 --> 00:56:32,640
our model this is free computation right

1363
00:56:32,640 --> 00:56:35,160
because it doesn't take place anymore in

1364
00:56:35,160 --> 00:56:36,680
the group action

1365
00:56:36,680 --> 00:56:39,960
and uh therefore not even discrete log

1366
00:56:39,960 --> 00:56:42,540
is hard in our model which of course is

1367
00:56:42,540 --> 00:56:45,200
kind of bad

1368
00:56:45,200 --> 00:56:47,400
things are now much nicer in the

1369
00:56:47,400 --> 00:56:49,680
algebraic setting

1370
00:56:49,680 --> 00:56:53,220
um here we give the adversary concrete

1371
00:56:53,220 --> 00:56:54,720
access to the group action so no

1372
00:56:54,720 --> 00:56:56,700
labeling function involves anymore

1373
00:56:56,700 --> 00:56:58,880
however the adversary has to behave

1374
00:56:58,880 --> 00:57:01,740
algebraically and what that means is

1375
00:57:01,740 --> 00:57:03,720
well uh

1376
00:57:03,720 --> 00:57:06,300
when the adverse replace a game for

1377
00:57:06,300 --> 00:57:09,180
example then the game might provide the

1378
00:57:09,180 --> 00:57:11,280
adversary with some initial input in

1379
00:57:11,280 --> 00:57:13,579
form of the settlements here

1380
00:57:13,579 --> 00:57:16,800
and now whenever the adversary comes up

1381
00:57:16,800 --> 00:57:19,020
with a set element himself and in this

1382
00:57:19,020 --> 00:57:21,480
case the set element y it also has to

1383
00:57:21,480 --> 00:57:23,339
provide an explanation for the set

1384
00:57:23,339 --> 00:57:26,220
element meaning a group Elementary and

1385
00:57:26,220 --> 00:57:28,859
an index file such that g times x i

1386
00:57:28,859 --> 00:57:31,319
equals y

1387
00:57:31,319 --> 00:57:33,680
and this of course also works quantumly

1388
00:57:33,680 --> 00:57:36,300
and lastly we measure the runtime of the

1389
00:57:36,300 --> 00:57:37,440
adversary in the number of unit

1390
00:57:37,440 --> 00:57:41,819
operations so classical runtime analysis

1391
00:57:41,819 --> 00:57:45,059
now what are the results in in our model

1392
00:57:45,059 --> 00:57:48,000
um I only show one in the interest of

1393
00:57:48,000 --> 00:57:49,859
time

1394
00:57:49,859 --> 00:57:51,599
um remember the strong CDH assumption

1395
00:57:51,599 --> 00:57:54,300
from before we can actually show that

1396
00:57:54,300 --> 00:57:57,839
this is uh as hard as discrete log at

1397
00:57:57,839 --> 00:57:59,400
least in the quantum algebraic group

1398
00:57:59,400 --> 00:58:01,440
action model so for every Quantum

1399
00:58:01,440 --> 00:58:02,880
adversary a

1400
00:58:02,880 --> 00:58:06,839
um we can confine two other adversaries

1401
00:58:06,839 --> 00:58:09,540
p and C against discrete log such that

1402
00:58:09,540 --> 00:58:11,400
the success probability of a is

1403
00:58:11,400 --> 00:58:13,079
essentially bounded by the success

1404
00:58:13,079 --> 00:58:15,240
probability of B and C

1405
00:58:15,240 --> 00:58:18,740
and therefore these problems are uh well

1406
00:58:18,740 --> 00:58:21,660
they imply each other

1407
00:58:21,660 --> 00:58:24,839
right so this is the end of my talk so

1408
00:58:24,839 --> 00:58:27,000
in summary we adapted the generic group

1409
00:58:27,000 --> 00:58:29,280
model and the algebraic group model to

1410
00:58:29,280 --> 00:58:31,859
the group action setting actually in our

1411
00:58:31,859 --> 00:58:34,079
paper we include further algebraic

1412
00:58:34,079 --> 00:58:36,359
properties of group actions like twist

1413
00:58:36,359 --> 00:58:38,099
in the air such any case

1414
00:58:38,099 --> 00:58:40,260
and we improved information theoretic

1415
00:58:40,260 --> 00:58:43,559
lower bounds on standard assumptions in

1416
00:58:43,559 --> 00:58:45,540
the generic group action model

1417
00:58:45,540 --> 00:58:48,119
and further we get algebraic reductions

1418
00:58:48,119 --> 00:58:49,040
between

1419
00:58:49,040 --> 00:58:51,960
non-standard assumptions and group

1420
00:58:51,960 --> 00:58:53,520
action discrete log

1421
00:58:53,520 --> 00:58:55,319
and with that I'm happy to take your

1422
00:58:55,319 --> 00:58:58,279
questions thank you

1423
00:59:03,540 --> 00:59:06,740
any question yes

1424
00:59:10,859 --> 00:59:12,180
um I think in one of your slides you

1425
00:59:12,180 --> 00:59:14,040
mentioned that the generic group action

1426
00:59:14,040 --> 00:59:15,900
model is contained in the generic group

1427
00:59:15,900 --> 00:59:18,119
model right uh could you define what

1428
00:59:18,119 --> 00:59:20,579
exactly you mean by contained

1429
00:59:20,579 --> 00:59:21,660
um

1430
00:59:21,660 --> 00:59:23,640
well you could think of it like this so

1431
00:59:23,640 --> 00:59:25,740
in the uh generic group model you have

1432
00:59:25,740 --> 00:59:29,579
uh the uh like multiplicative Oracle

1433
00:59:29,579 --> 00:59:30,660
where you can multiply two group

1434
00:59:30,660 --> 00:59:32,819
elements but then again you can also

1435
00:59:32,819 --> 00:59:34,859
have like an exponentiation oracle more

1436
00:59:34,859 --> 00:59:36,660
or less by double and like uh Square

1437
00:59:36,660 --> 00:59:39,359
multiply right and this

1438
00:59:39,359 --> 00:59:41,160
um this exponentiation Oracle is

1439
00:59:41,160 --> 00:59:44,520
actually a group action right so

1440
00:59:44,520 --> 00:59:46,920
um in certain in a certain sense if you

1441
00:59:46,920 --> 00:59:51,119
remove the the standards group operation

1442
00:59:51,119 --> 00:59:52,920
Oracle and just include the

1443
00:59:52,920 --> 00:59:55,319
exponentiation Oracle in the GTM then

1444
00:59:55,319 --> 00:59:56,819
you get a group act then you get

1445
00:59:56,819 --> 00:59:59,520
basically our generic group action model

1446
00:59:59,520 --> 01:00:01,500
so that's what we mean

1447
01:00:01,500 --> 01:00:04,079
um uh wouldn't if you were to include

1448
01:00:04,079 --> 01:00:07,500
just the exponentiation uh Oracle in the

1449
01:00:07,500 --> 01:00:10,079
gdm wouldn't it still just be the GTM

1450
01:00:10,079 --> 01:00:12,000
because you can just set the exponents

1451
01:00:12,000 --> 01:00:13,799
to just one and one and have a standard

1452
01:00:13,799 --> 01:00:15,900
operation sorry can you repeat the

1453
01:00:15,900 --> 01:00:17,819
question if you were to have just the

1454
01:00:17,819 --> 01:00:19,440
exponentiation Oracle in the ggm

1455
01:00:19,440 --> 01:00:21,960
wouldn't it still just be the ggm

1456
01:00:21,960 --> 01:00:25,200
uh no because you cannot multiply to to

1457
01:00:25,200 --> 01:00:26,760
Google elements anymore you're seeing

1458
01:00:26,760 --> 01:00:28,559
like separate exponentiation and

1459
01:00:28,559 --> 01:00:30,480
separate right we have one orator for

1460
01:00:30,480 --> 01:00:32,220
adding inside the exponent of one for

1461
01:00:32,220 --> 01:00:33,660
multiplying in the exponent and you

1462
01:00:33,660 --> 01:00:35,280
mentioned that this is based on Shoop's

1463
01:00:35,280 --> 01:00:37,500
DGM right and have you ever thought

1464
01:00:37,500 --> 01:00:40,319
about like uh Morris and like how that

1465
01:00:40,319 --> 01:00:42,480
would translate

1466
01:00:42,480 --> 01:00:45,839
um that's a good question I think

1467
01:00:45,839 --> 01:00:47,880
uh yeah I never thought about that

1468
01:00:47,880 --> 01:00:51,799
actually thank you thank you

1469
01:00:52,380 --> 01:00:54,420
yes

1470
01:00:54,420 --> 01:00:57,900
uh hi uh Knight Rock uh so how do you

1471
01:00:57,900 --> 01:00:59,700
model the twists because

1472
01:00:59,700 --> 01:01:00,599
um yeah

1473
01:01:00,599 --> 01:01:01,799
oh

1474
01:01:01,799 --> 01:01:04,559
um The Twist we model as an extra Oracle

1475
01:01:04,559 --> 01:01:06,240
here

1476
01:01:06,240 --> 01:01:08,940
right where the Oracle gives back a

1477
01:01:08,940 --> 01:01:11,760
label for minus three times x

1478
01:01:11,760 --> 01:01:13,740
because twisting really means like

1479
01:01:13,740 --> 01:01:15,780
taking the inverse of an element and

1480
01:01:15,780 --> 01:01:17,819
because we are an additive we have an

1481
01:01:17,819 --> 01:01:19,740
additive group here we just take it

1482
01:01:19,740 --> 01:01:22,920
sends over a label for uh three times

1483
01:01:22,920 --> 01:01:24,839
three times x and gets back a level four

1484
01:01:24,839 --> 01:01:26,819
minus G times x but twist is like a

1485
01:01:26,819 --> 01:01:28,859
public operation right so

1486
01:01:28,859 --> 01:01:30,299
I mean

1487
01:01:30,299 --> 01:01:32,640
if the if you model it as an oracle then

1488
01:01:32,640 --> 01:01:34,380
you assume that the Computing The Twist

1489
01:01:34,380 --> 01:01:36,660
is hard or

1490
01:01:36,660 --> 01:01:37,200
um

1491
01:01:37,200 --> 01:01:38,940
yeah well

1492
01:01:38,940 --> 01:01:40,440
um

1493
01:01:40,440 --> 01:01:43,319
maybe we can talk you could say that yes

1494
01:01:43,319 --> 01:01:46,260
but uh this this doesn't affect the city

1495
01:01:46,260 --> 01:01:51,260
uh reduction a lot okay thank you

1496
01:01:56,819 --> 01:01:59,760
thank you for a very interesting talk

1497
01:01:59,760 --> 01:02:02,400
um can you give some intuition about uh

1498
01:02:02,400 --> 01:02:04,920
how you approve the final theorem

1499
01:02:04,920 --> 01:02:08,040
which final period so on the next to

1500
01:02:08,040 --> 01:02:10,020
final slide of the presentation or

1501
01:02:10,020 --> 01:02:11,880
something like this Oh you mean on uh on

1502
01:02:11,880 --> 01:02:13,680
this one yes exactly

1503
01:02:13,680 --> 01:02:17,520
um yeah I can um so because we are in

1504
01:02:17,520 --> 01:02:19,200
the algebraic setting the adversary

1505
01:02:19,200 --> 01:02:21,480
always has to uh has to provide these

1506
01:02:21,480 --> 01:02:25,200
explanations right and when he solves uh

1507
01:02:25,200 --> 01:02:29,220
CDH for example then he has to give like

1508
01:02:29,220 --> 01:02:33,420
a relative D log to either x g times X

1509
01:02:33,420 --> 01:02:35,460
or H times x and from that we can

1510
01:02:35,460 --> 01:02:37,859
extract uh more or less the discrete

1511
01:02:37,859 --> 01:02:40,460
lock of of one of the elements

1512
01:02:40,460 --> 01:02:42,000
and

1513
01:02:42,000 --> 01:02:44,760
um the the the the other part of the

1514
01:02:44,760 --> 01:02:47,040
bound here this one is coming from

1515
01:02:47,040 --> 01:02:48,960
simulating these oracles right we have

1516
01:02:48,960 --> 01:02:50,700
to somehow simulate these Oracles in

1517
01:02:50,700 --> 01:02:53,160
Quantum superposition and for that we we

1518
01:02:53,160 --> 01:02:54,540
use the one way to hiding them and

1519
01:02:54,540 --> 01:02:56,400
therefore we get the square root Bond

1520
01:02:56,400 --> 01:02:57,720
yeah

1521
01:02:57,720 --> 01:03:00,960
thank you all right okay one more

1522
01:03:00,960 --> 01:03:02,640
question

1523
01:03:02,640 --> 01:03:06,440
so let's thank the speaker again

1524
01:03:08,819 --> 01:03:11,280
so that's it for today we have a dinner

1525
01:03:11,280 --> 01:03:15,020
in one hour approximately

1526
01:03:15,299 --> 01:03:18,500
hi everybody uh dinner at six

1527
01:03:18,500 --> 01:03:20,940
in this area

1528
01:03:20,940 --> 01:03:23,099
other than that take time enjoy Atlanta

1529
01:03:23,099 --> 01:03:26,359
we're done for the day

