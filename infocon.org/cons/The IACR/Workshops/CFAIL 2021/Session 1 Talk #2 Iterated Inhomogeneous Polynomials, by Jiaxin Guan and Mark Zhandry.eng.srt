1
00:00:11,440 --> 00:00:12,719
all right we're getting ready for the

2
00:00:12,719 --> 00:00:14,559
next talk and that is iterated in

3
00:00:14,559 --> 00:00:16,720
homogeneous polynomials

4
00:00:16,720 --> 00:00:19,039
and this is going to give my video and

5
00:00:19,039 --> 00:00:20,640
the authors are

6
00:00:20,640 --> 00:00:23,519
jergen guang and mark gendry

7
00:00:23,519 --> 00:00:24,560
all right

8
00:00:24,560 --> 00:00:27,959
let's get started

9
00:00:32,800 --> 00:00:34,719
my name is joshin guan and today i'll be

10
00:00:34,719 --> 00:00:36,640
talking about our failure iterated in

11
00:00:36,640 --> 00:00:38,719
homogeneous polynomials

12
00:00:38,719 --> 00:00:40,800
this is a joint failure with mark zandry

13
00:00:40,800 --> 00:00:42,559
both of us are from princeton university

14
00:00:42,559 --> 00:00:44,559
and entity research

15
00:00:44,559 --> 00:00:46,160
i've noticed that a lot of the other

16
00:00:46,160 --> 00:00:48,320
talks have rather interesting titles

17
00:00:48,320 --> 00:00:50,399
but it's sort of too late to change ours

18
00:00:50,399 --> 00:00:53,039
so i guess instead today we'll be

19
00:00:53,039 --> 00:00:55,039
talking about iterating homogeneous

20
00:00:55,039 --> 00:00:56,640
polynomials iterating homogeneous

21
00:00:56,640 --> 00:00:58,079
polynomials iterating homogeneous

22
00:00:58,079 --> 00:01:00,000
polynomials so on and so forth

23
00:01:00,000 --> 00:01:03,840
how do you know let's generate it

24
00:01:04,239 --> 00:01:04,959
so

25
00:01:04,959 --> 00:01:07,360
just as every good story begins with

26
00:01:07,360 --> 00:01:09,600
once upon a time

27
00:01:09,600 --> 00:01:11,439
mark was back at home just casually

28
00:01:11,439 --> 00:01:13,439
browsing the mathematics section of

29
00:01:13,439 --> 00:01:16,080
stack exchange when a specific post

30
00:01:16,080 --> 00:01:17,840
caught its interest

31
00:01:17,840 --> 00:01:20,240
a few days later mark talked to me about

32
00:01:20,240 --> 00:01:22,159
the post during our meeting and later on

33
00:01:22,159 --> 00:01:24,240
send me the link in the email

34
00:01:24,240 --> 00:01:25,600
so this is the email i received from

35
00:01:25,600 --> 00:01:26,640
mark

36
00:01:26,640 --> 00:01:28,799
and what is this exact post that called

37
00:01:28,799 --> 00:01:31,280
mark's interest

38
00:01:31,280 --> 00:01:33,759
well the original post is on triangular

39
00:01:33,759 --> 00:01:34,720
numbers

40
00:01:34,720 --> 00:01:37,680
namely f x equals x times x plus one

41
00:01:37,680 --> 00:01:38,880
over two

42
00:01:38,880 --> 00:01:40,640
however instead of evaluating this

43
00:01:40,640 --> 00:01:42,560
function over the integers it is

44
00:01:42,560 --> 00:01:43,680
evaluated

45
00:01:43,680 --> 00:01:45,920
mod 2 to the n

46
00:01:45,920 --> 00:01:47,520
so what are some interesting properties

47
00:01:47,520 --> 00:01:48,320
here

48
00:01:48,320 --> 00:01:50,079
so first of all

49
00:01:50,079 --> 00:01:52,159
it is pointed out in the post that this

50
00:01:52,159 --> 00:01:54,399
actually forms a permutation of the

51
00:01:54,399 --> 00:01:57,520
elements in z 2 to the n

52
00:01:57,520 --> 00:01:59,840
secondly now that we know that f of x is

53
00:01:59,840 --> 00:02:02,240
a permutation we know that if we start

54
00:02:02,240 --> 00:02:04,640
from x and we keep on

55
00:02:04,640 --> 00:02:07,200
applying the function f iteratively

56
00:02:07,200 --> 00:02:09,280
eventually we will get bad act get back

57
00:02:09,280 --> 00:02:10,479
at x

58
00:02:10,479 --> 00:02:12,400
so natural question would be

59
00:02:12,400 --> 00:02:14,959
how long would these cycles be

60
00:02:14,959 --> 00:02:18,080
well it turns out that from the post

61
00:02:18,080 --> 00:02:19,360
empirically

62
00:02:19,360 --> 00:02:21,280
these cycles are really long

63
00:02:21,280 --> 00:02:23,040
and in a follow-up to the post it's

64
00:02:23,040 --> 00:02:24,720
actually proved that for sufficiently

65
00:02:24,720 --> 00:02:26,160
large n

66
00:02:26,160 --> 00:02:28,560
the longest cycle is actually at least 2

67
00:02:28,560 --> 00:02:31,120
to the n over 10.

68
00:02:31,120 --> 00:02:31,920
so

69
00:02:31,920 --> 00:02:33,519
why does these triangular numbers

70
00:02:33,519 --> 00:02:36,920
interest us

71
00:02:37,040 --> 00:02:38,239
and some of you might have already

72
00:02:38,239 --> 00:02:39,840
noticed that in the the title of the

73
00:02:39,840 --> 00:02:42,160
email is actually vd apps

74
00:02:42,160 --> 00:02:45,120
so what are vdfs

75
00:02:45,120 --> 00:02:47,280
vdf stands for verifiable delay

76
00:02:47,280 --> 00:02:49,519
functions the concept was first put

77
00:02:49,519 --> 00:02:51,599
forward by bonne bonneau builds and fish

78
00:02:51,599 --> 00:02:53,680
in 2018.

79
00:02:53,680 --> 00:02:55,040
we won't go into the full formal

80
00:02:55,040 --> 00:02:57,360
definition of edfs today but roughly

81
00:02:57,360 --> 00:02:58,720
speaking the definition has two

82
00:02:58,720 --> 00:03:00,400
components

83
00:03:00,400 --> 00:03:02,159
first of all the function itself needs

84
00:03:02,159 --> 00:03:04,720
to be a sequential function meaning that

85
00:03:04,720 --> 00:03:06,640
it is slow to compute even for an

86
00:03:06,640 --> 00:03:09,440
absolute with levels of paralysis

87
00:03:09,440 --> 00:03:11,360
secondly while you are computing the

88
00:03:11,360 --> 00:03:13,040
function you should also be able to

89
00:03:13,040 --> 00:03:14,800
compute a short proof

90
00:03:14,800 --> 00:03:16,879
which will allow others to efficiently

91
00:03:16,879 --> 00:03:19,760
verify the output of the function

92
00:03:19,760 --> 00:03:20,879
there are a couple of known

93
00:03:20,879 --> 00:03:23,200
constructions of edfs

94
00:03:23,200 --> 00:03:26,319
two of them are from repeated squaring

95
00:03:26,319 --> 00:03:28,319
done by wesolowski and peter zach

96
00:03:28,319 --> 00:03:30,560
separately in 2018

97
00:03:30,560 --> 00:03:32,080
there is also a construction from

98
00:03:32,080 --> 00:03:34,480
misogynist from davio and others but

99
00:03:34,480 --> 00:03:36,480
that one is less relevant to our talk

100
00:03:36,480 --> 00:03:38,159
today

101
00:03:38,159 --> 00:03:39,519
so both of these

102
00:03:39,519 --> 00:03:42,080
wisconsin computers x constructions

103
00:03:42,080 --> 00:03:44,080
use repeated squaring as the sequential

104
00:03:44,080 --> 00:03:45,040
function

105
00:03:45,040 --> 00:03:47,040
namely you start so you start from x

106
00:03:47,040 --> 00:03:49,120
compute x squared x to the fourth so on

107
00:03:49,120 --> 00:03:51,440
and so forth all the way until x to the

108
00:03:51,440 --> 00:03:53,120
2 to the t

109
00:03:53,120 --> 00:03:54,799
what is different in these papers is

110
00:03:54,799 --> 00:03:55,760
that

111
00:03:55,760 --> 00:03:57,760
they produce different proofs

112
00:03:57,760 --> 00:04:00,319
both using some algebraic properties of

113
00:04:00,319 --> 00:04:02,959
repeated squaring

114
00:04:02,959 --> 00:04:04,799
so here's an interesting way to view

115
00:04:04,799 --> 00:04:07,439
these these sequential functions if we

116
00:04:07,439 --> 00:04:09,519
think about f of x being the squaring

117
00:04:09,519 --> 00:04:10,400
function

118
00:04:10,400 --> 00:04:12,799
this this repeated squaring procedure is

119
00:04:12,799 --> 00:04:14,959
actually just iteratively applying the

120
00:04:14,959 --> 00:04:16,639
function f

121
00:04:16,639 --> 00:04:18,560
on the input x

122
00:04:18,560 --> 00:04:21,358
so a natural question is

123
00:04:21,358 --> 00:04:22,079
is

124
00:04:22,079 --> 00:04:24,639
squaring the only function f here

125
00:04:24,639 --> 00:04:26,240
can we use some other function for

126
00:04:26,240 --> 00:04:29,360
example maybe the triangular number

127
00:04:29,360 --> 00:04:30,960
well it turns out that with triangular

128
00:04:30,960 --> 00:04:32,960
numbers there are two problems

129
00:04:32,960 --> 00:04:35,280
the first issue is this divide by two

130
00:04:35,280 --> 00:04:36,800
operation

131
00:04:36,800 --> 00:04:38,720
it is not commutative with the mod

132
00:04:38,720 --> 00:04:40,880
operation for example if we start with

133
00:04:40,880 --> 00:04:43,440
the number 18 and we divide by 2 first

134
00:04:43,440 --> 00:04:45,600
and then mod by 16 the result is going

135
00:04:45,600 --> 00:04:46,800
to be 9.

136
00:04:46,800 --> 00:04:48,639
however if we swap the order of these

137
00:04:48,639 --> 00:04:51,040
operations and we perform the mod

138
00:04:51,040 --> 00:04:53,360
operation before the divide by 2

139
00:04:53,360 --> 00:04:56,320
operation the result will now be 1. so

140
00:04:56,320 --> 00:04:58,880
this breaks the nice algebraic property

141
00:04:58,880 --> 00:05:00,880
of this function f

142
00:05:00,880 --> 00:05:04,160
recall that both vesolowsky and peters x

143
00:05:04,160 --> 00:05:06,880
proofs are algebraic proofs they both

144
00:05:06,880 --> 00:05:08,560
take advantage of the algebraic

145
00:05:08,560 --> 00:05:10,479
properties of the underlying repeated

146
00:05:10,479 --> 00:05:11,680
squaring

147
00:05:11,680 --> 00:05:14,000
therefore if we were to replace repeated

148
00:05:14,000 --> 00:05:15,840
squaring with this f

149
00:05:15,840 --> 00:05:18,639
neither of peter zack nor

150
00:05:18,639 --> 00:05:20,800
voice alaska's proofs will work

151
00:05:20,800 --> 00:05:22,479
therefore we will need to come up with

152
00:05:22,479 --> 00:05:25,840
some other clever proof here

153
00:05:25,840 --> 00:05:27,840
the second issue is that although we

154
00:05:27,840 --> 00:05:30,160
know there exists long cycles

155
00:05:30,160 --> 00:05:32,639
our chances are that if we pick a random

156
00:05:32,639 --> 00:05:34,320
starting point x

157
00:05:34,320 --> 00:05:36,479
a chances are that we're still stuck in

158
00:05:36,479 --> 00:05:40,000
a fixed point or a very short cycle

159
00:05:40,000 --> 00:05:43,120
it is just not quite satisfying yet

160
00:05:43,120 --> 00:05:45,360
so the natural question here would be

161
00:05:45,360 --> 00:05:47,039
are there any polynomials that actually

162
00:05:47,039 --> 00:05:50,720
give us full length cycles

163
00:05:50,720 --> 00:05:52,400
it seems that the idea of triangular

164
00:05:52,400 --> 00:05:54,400
numbers from the stack exchange post

165
00:05:54,400 --> 00:05:56,639
doesn't quite work so we naturally move

166
00:05:56,639 --> 00:05:59,440
on to the next chapter where we try to

167
00:05:59,440 --> 00:06:02,000
search for a polynomial that we can use

168
00:06:02,000 --> 00:06:05,199
as a sequential function

169
00:06:05,280 --> 00:06:08,560
so some other day keypad leo aka kevin

170
00:06:08,560 --> 00:06:11,039
who is also a student of mark is at my

171
00:06:11,039 --> 00:06:13,039
place having lunch

172
00:06:13,039 --> 00:06:14,800
after lunch we were actually having hot

173
00:06:14,800 --> 00:06:16,800
pot and we were talking about uh the

174
00:06:16,800 --> 00:06:18,880
post mark sent me and i was talking

175
00:06:18,880 --> 00:06:20,720
about how we're

176
00:06:20,720 --> 00:06:22,479
how we're searching for a polynomial

177
00:06:22,479 --> 00:06:24,960
that gave us four land cycles

178
00:06:24,960 --> 00:06:27,919
so kevin accidentally rubbed his hand

179
00:06:27,919 --> 00:06:30,560
against the hot pot with boiling water

180
00:06:30,560 --> 00:06:32,160
in there

181
00:06:32,160 --> 00:06:33,120
and

182
00:06:33,120 --> 00:06:35,199
surprisingly or maybe not surprisingly

183
00:06:35,199 --> 00:06:36,800
out comes a

184
00:06:36,800 --> 00:06:38,319
hotpot genie

185
00:06:38,319 --> 00:06:40,560
so the genie was obviously quite grumpy

186
00:06:40,560 --> 00:06:42,319
because he was a disturbed from his

187
00:06:42,319 --> 00:06:43,440
sleep

188
00:06:43,440 --> 00:06:46,400
uh but nevertheless he's a genie and he

189
00:06:46,400 --> 00:06:47,280
said

190
00:06:47,280 --> 00:06:51,280
that we can we can ask three wishes

191
00:06:51,280 --> 00:06:54,240
but since he was grumpy he may or may

192
00:06:54,240 --> 00:06:56,479
not fulfill them

193
00:06:56,479 --> 00:06:57,759
since we were just talking about this

194
00:06:57,759 --> 00:07:00,880
problem naturally kevin asked are there

195
00:07:00,880 --> 00:07:03,840
any polynomials that gives us four land

196
00:07:03,840 --> 00:07:04,960
cycles

197
00:07:04,960 --> 00:07:06,639
so the genie thought for a while and

198
00:07:06,639 --> 00:07:10,160
said yes actually there are

199
00:07:10,160 --> 00:07:12,479
one example of such polynomials is f x

200
00:07:12,479 --> 00:07:14,560
is equal to two x squared plus three x

201
00:07:14,560 --> 00:07:15,840
plus one

202
00:07:15,840 --> 00:07:17,759
here we're modeling 16 here because it's

203
00:07:17,759 --> 00:07:19,360
easier to demonstrate but actually it

204
00:07:19,360 --> 00:07:22,880
works mod any larger 2 to the n

205
00:07:22,880 --> 00:07:23,680
so

206
00:07:23,680 --> 00:07:25,360
let's say we start from

207
00:07:25,360 --> 00:07:28,160
1 so pick x equal to 1 and then we

208
00:07:28,160 --> 00:07:30,639
compute f one which is equal to six so

209
00:07:30,639 --> 00:07:33,360
we go to six and from six to eleven to

210
00:07:33,360 --> 00:07:34,479
four

211
00:07:34,479 --> 00:07:37,440
to thirteen so on and so forth and we

212
00:07:37,440 --> 00:07:40,000
can see that as we're doing we went

213
00:07:40,000 --> 00:07:42,560
through all of the sixteen elements and

214
00:07:42,560 --> 00:07:44,479
got back to one

215
00:07:44,479 --> 00:07:46,720
and in fact we're able to prove that

216
00:07:46,720 --> 00:07:49,360
this function f actually gives us four

217
00:07:49,360 --> 00:07:51,919
then cycles multi to the n

218
00:07:51,919 --> 00:07:54,400
in addition to that we're also to be

219
00:07:54,400 --> 00:07:57,280
able to perfor uh to generalize this

220
00:07:57,280 --> 00:07:59,199
into a general form

221
00:07:59,199 --> 00:08:02,000
parameterized by three integers k l and

222
00:08:02,000 --> 00:08:04,560
m and the function is two k x squared

223
00:08:04,560 --> 00:08:08,080
plus four l plus two k plus one times x

224
00:08:08,080 --> 00:08:10,800
plus two m plus one this whole thing is

225
00:08:10,800 --> 00:08:12,400
also both

226
00:08:12,400 --> 00:08:15,120
uh gives us four dance cycles not any

227
00:08:15,120 --> 00:08:17,039
two to the n

228
00:08:17,039 --> 00:08:18,560
so the properties here if you take a

229
00:08:18,560 --> 00:08:19,759
look is that

230
00:08:19,759 --> 00:08:22,160
the constant coefficient is uh need to

231
00:08:22,160 --> 00:08:24,879
be odd and the quadratic coefficient

232
00:08:24,879 --> 00:08:27,199
needs to be even and the difference

233
00:08:27,199 --> 00:08:28,960
between the linear coefficient and the

234
00:08:28,960 --> 00:08:31,440
quadratic coefficient needs to be 1 mod

235
00:08:31,440 --> 00:08:33,039
4.

236
00:08:33,039 --> 00:08:35,919
we're also able to get a proof that

237
00:08:35,919 --> 00:08:37,519
these polynomials

238
00:08:37,519 --> 00:08:40,159
get 4 lens cycles

239
00:08:40,159 --> 00:08:42,719
so the genie fulfilled our first wish

240
00:08:42,719 --> 00:08:45,120
and gave us a polynomial or actually a

241
00:08:45,120 --> 00:08:46,959
class of polynomials that gave us full

242
00:08:46,959 --> 00:08:48,640
dense cycles

243
00:08:48,640 --> 00:08:50,720
and kevin went back home after the lunch

244
00:08:50,720 --> 00:08:52,800
of course and he had other researchers

245
00:08:52,800 --> 00:08:55,279
to attend to but i was stuck with a

246
00:08:55,279 --> 00:08:57,600
genie at my home because he wouldn't

247
00:08:57,600 --> 00:08:59,519
leave until all the three wishes are

248
00:08:59,519 --> 00:09:00,720
made

249
00:09:00,720 --> 00:09:03,680
therefore the next question is what wish

250
00:09:03,680 --> 00:09:06,640
should i make next

251
00:09:06,880 --> 00:09:09,760
well um we wanted to replace repeated

252
00:09:09,760 --> 00:09:12,320
scoring by iterative polynomials right

253
00:09:12,320 --> 00:09:13,760
and uh

254
00:09:13,760 --> 00:09:15,519
we can view repeated squaring in this

255
00:09:15,519 --> 00:09:17,440
way so we have this g of x is the

256
00:09:17,440 --> 00:09:19,600
squaring function and they're evaluated

257
00:09:19,600 --> 00:09:22,560
over this group of unknown order

258
00:09:22,560 --> 00:09:24,240
and we want

259
00:09:24,240 --> 00:09:26,800
we want that x to the 2 to the t which

260
00:09:26,800 --> 00:09:29,519
is essentially this function evaluated t

261
00:09:29,519 --> 00:09:31,920
times it should require

262
00:09:31,920 --> 00:09:33,839
approximately a linear amount of

263
00:09:33,839 --> 00:09:36,800
sequential time to compute this

264
00:09:36,800 --> 00:09:39,279
is actually proved uh this is actually

265
00:09:39,279 --> 00:09:41,600
proved in the black box ring model by

266
00:09:41,600 --> 00:09:45,440
rhodamine sega in 2020.

267
00:09:45,440 --> 00:09:46,560
so

268
00:09:46,560 --> 00:09:48,640
the question is if we were to replace

269
00:09:48,640 --> 00:09:51,440
this gx with f of x which is 2 squared

270
00:09:51,440 --> 00:09:54,720
plus 3x plus 1 and it is evaluated over

271
00:09:54,720 --> 00:09:57,279
2 to the n instead of a group of unknown

272
00:09:57,279 --> 00:09:58,160
order

273
00:09:58,160 --> 00:10:00,880
is the statement still true is f

274
00:10:00,880 --> 00:10:03,040
f iterated t times on x

275
00:10:03,040 --> 00:10:04,560
still require

276
00:10:04,560 --> 00:10:08,640
a linear amount of time to compute

277
00:10:08,959 --> 00:10:12,560
so i asked the genie this question

278
00:10:12,560 --> 00:10:14,959
the genie thought for a while and said

279
00:10:14,959 --> 00:10:16,320
no

280
00:10:16,320 --> 00:10:18,959
nope actually computing f iterate t

281
00:10:18,959 --> 00:10:21,680
times on x you can do that in time much

282
00:10:21,680 --> 00:10:24,240
shorter than than linear

283
00:10:24,240 --> 00:10:26,720
so how do we do this

284
00:10:26,720 --> 00:10:28,640
so the first thing to notice is that

285
00:10:28,640 --> 00:10:32,000
take this following factorial of x you

286
00:10:32,000 --> 00:10:33,920
multiply x with x minus 1 all the way

287
00:10:33,920 --> 00:10:36,480
until x minus k plus 1

288
00:10:36,480 --> 00:10:38,560
that's k terms in total

289
00:10:38,560 --> 00:10:40,560
so the first thing is that by basic

290
00:10:40,560 --> 00:10:42,160
combinatorics

291
00:10:42,160 --> 00:10:45,519
this is a multiple of k factorial

292
00:10:45,519 --> 00:10:47,839
and then if we set the value of k to be

293
00:10:47,839 --> 00:10:49,200
high enough

294
00:10:49,200 --> 00:10:51,519
roughly somewhere around n this k

295
00:10:51,519 --> 00:10:54,000
factorial will also contain 2 to the n

296
00:10:54,000 --> 00:10:55,920
as a factor

297
00:10:55,920 --> 00:10:57,440
therefore this following factorial of

298
00:10:57,440 --> 00:10:58,640
degree k

299
00:10:58,640 --> 00:11:00,959
contains 2 to the n as a factor

300
00:11:00,959 --> 00:11:02,800
that means this form factorial of degree

301
00:11:02,800 --> 00:11:07,440
k is identically 0 mod 2 to the n

302
00:11:07,440 --> 00:11:09,920
what this allows us to do is that take

303
00:11:09,920 --> 00:11:12,160
any function of a potential very high

304
00:11:12,160 --> 00:11:14,800
degree and what we can do is to look at

305
00:11:14,800 --> 00:11:17,600
its highest degree and then subtract out

306
00:11:17,600 --> 00:11:19,279
a following factorial of the

307
00:11:19,279 --> 00:11:21,360
corresponding degree

308
00:11:21,360 --> 00:11:22,720
this will make the highest degree go

309
00:11:22,720 --> 00:11:24,959
away but this will not change the value

310
00:11:24,959 --> 00:11:26,320
of the function because what we are

311
00:11:26,320 --> 00:11:29,040
subtracting out is identically 0 multi

312
00:11:29,040 --> 00:11:30,079
to the n

313
00:11:30,079 --> 00:11:31,760
so by repeating this process we're

314
00:11:31,760 --> 00:11:33,600
eventually able to reduce this

315
00:11:33,600 --> 00:11:35,600
polynomial of a high degree to a

316
00:11:35,600 --> 00:11:38,640
polynomial that has a degree at most k

317
00:11:38,640 --> 00:11:40,320
minus 1.

318
00:11:40,320 --> 00:11:43,279
and of course the new the new polynomial

319
00:11:43,279 --> 00:11:46,000
will have different coefficients

320
00:11:46,000 --> 00:11:47,680
and since this has a boundary degree we

321
00:11:47,680 --> 00:11:49,839
can represent this polynomial as a

322
00:11:49,839 --> 00:11:53,279
vector b of length k multiplied by the

323
00:11:53,279 --> 00:11:56,000
transposition of a venderman matrix of

324
00:11:56,000 --> 00:12:00,560
only one row and degree k as well

325
00:12:00,959 --> 00:12:02,720
so now let's assume that we've already

326
00:12:02,720 --> 00:12:05,920
computed f generated i times on input x

327
00:12:05,920 --> 00:12:08,880
and it is represented by the vector v

328
00:12:08,880 --> 00:12:10,639
multiplied by the transposition of the

329
00:12:10,639 --> 00:12:11,920
vendor mode

330
00:12:11,920 --> 00:12:14,079
we want to show how we can use this to

331
00:12:14,079 --> 00:12:16,240
compute the next iteration which is

332
00:12:16,240 --> 00:12:19,839
namely f iterated i plus 1 times on x

333
00:12:19,839 --> 00:12:21,519
notice that we can separate this into

334
00:12:21,519 --> 00:12:24,000
two parts where we first evaluate f once

335
00:12:24,000 --> 00:12:26,160
on the input x and then followed by

336
00:12:26,160 --> 00:12:28,399
another i iterations

337
00:12:28,399 --> 00:12:31,440
we can expand out we can expand out this

338
00:12:31,440 --> 00:12:33,519
and this will give us b zero plus b one

339
00:12:33,519 --> 00:12:37,200
times f of x plus b two times f of x

340
00:12:37,200 --> 00:12:40,800
squared all the way to b k minus 1 times

341
00:12:40,800 --> 00:12:43,200
f of x raised up to the power of k minus

342
00:12:43,200 --> 00:12:44,720
1.

343
00:12:44,720 --> 00:12:46,240
the next thing we do

344
00:12:46,240 --> 00:12:48,320
is to collect the coefficients of this

345
00:12:48,320 --> 00:12:49,519
polynomial

346
00:12:49,519 --> 00:12:52,160
so what is the new constant coefficient

347
00:12:52,160 --> 00:12:54,399
well that is just by summing up all of

348
00:12:54,399 --> 00:12:58,000
the old coefficients namely b0 plus b1

349
00:12:58,000 --> 00:13:02,399
plus b2 all the way to bk minus 1.

350
00:13:02,399 --> 00:13:03,920
the linear coefficient is going to be

351
00:13:03,920 --> 00:13:05,760
slightly more complicated but

352
00:13:05,760 --> 00:13:08,000
nevertheless it is still a linear

353
00:13:08,000 --> 00:13:10,639
combination of the o coefficients and so

354
00:13:10,639 --> 00:13:11,519
is

355
00:13:11,519 --> 00:13:13,440
it's also true for the quadratic

356
00:13:13,440 --> 00:13:14,639
coefficient

357
00:13:14,639 --> 00:13:16,240
all the way to the coefficient for the

358
00:13:16,240 --> 00:13:18,800
highest degree in this case it is 2k

359
00:13:18,800 --> 00:13:20,399
minus 2.

360
00:13:20,399 --> 00:13:23,279
so the next thing we do so now we have a

361
00:13:23,279 --> 00:13:26,480
polynomial with degree 2k minus 2 we

362
00:13:26,480 --> 00:13:28,720
want to reduce it to a polynomial of

363
00:13:28,720 --> 00:13:31,760
highest degree k minus 1 using the

364
00:13:31,760 --> 00:13:33,200
following factorial trick from the

365
00:13:33,200 --> 00:13:34,399
previous page

366
00:13:34,399 --> 00:13:37,839
notice that this trick we iteratively

367
00:13:37,839 --> 00:13:40,720
subtract out following factorials from

368
00:13:40,720 --> 00:13:43,680
the highest degree and this procedure is

369
00:13:43,680 --> 00:13:47,040
strictly linear therefore the new the

370
00:13:47,040 --> 00:13:49,760
new coefficients that we get for the for

371
00:13:49,760 --> 00:13:51,839
the for the new polynomial

372
00:13:51,839 --> 00:13:54,240
which has a degree at most k minus one

373
00:13:54,240 --> 00:13:56,720
all these coefficients are again a

374
00:13:56,720 --> 00:13:59,040
linear combination of the old

375
00:13:59,040 --> 00:14:03,440
coefficients of f iterated i times on x

376
00:14:03,440 --> 00:14:05,680
therefore we can represent these new

377
00:14:05,680 --> 00:14:08,480
coefficients as a linear transformation

378
00:14:08,480 --> 00:14:10,240
on the original on the original

379
00:14:10,240 --> 00:14:12,560
coefficients and we can represent this

380
00:14:12,560 --> 00:14:15,760
linear transformation as this matrix m

381
00:14:15,760 --> 00:14:19,920
which has dimension k by k

382
00:14:19,920 --> 00:14:23,040
therefore f iterated i plus 1 times on

383
00:14:23,040 --> 00:14:25,600
the input x can be simply written as

384
00:14:25,600 --> 00:14:27,040
the original

385
00:14:27,040 --> 00:14:29,360
coefficient vector v multiplied by the

386
00:14:29,360 --> 00:14:31,680
transformation matrix m and then

387
00:14:31,680 --> 00:14:33,519
multiplied by the transposition of the

388
00:14:33,519 --> 00:14:34,959
vendor mod

389
00:14:34,959 --> 00:14:38,560
notice that this transformation matrix m

390
00:14:38,560 --> 00:14:41,279
is independent of i

391
00:14:41,279 --> 00:14:42,720
it is only dependent on the original

392
00:14:42,720 --> 00:14:46,160
polynomial 2x squared plus 3x plus 1

393
00:14:46,160 --> 00:14:48,639
which makes it that makes it the same

394
00:14:48,639 --> 00:14:50,800
even for different i's

395
00:14:50,800 --> 00:14:53,279
then by simple induction

396
00:14:53,279 --> 00:14:55,839
we know that the function f iterated t

397
00:14:55,839 --> 00:14:58,399
times on input x is just

398
00:14:58,399 --> 00:15:00,639
the unit vector representing x

399
00:15:00,639 --> 00:15:03,680
multiplied by the transformation matrix

400
00:15:03,680 --> 00:15:06,880
m raised up to the t times multiplied by

401
00:15:06,880 --> 00:15:09,120
the transposition of the vendor

402
00:15:09,120 --> 00:15:10,720
and how long does it take to compute

403
00:15:10,720 --> 00:15:12,720
this well we can

404
00:15:12,720 --> 00:15:16,320
use repeated squaring to compute this

405
00:15:16,320 --> 00:15:18,720
m raised up to the t and that will only

406
00:15:18,720 --> 00:15:21,519
require log t time which is much faster

407
00:15:21,519 --> 00:15:23,600
than the supposedly linear runtime

408
00:15:23,600 --> 00:15:25,600
therefore we have shown there is

409
00:15:25,600 --> 00:15:27,839
actually a way to shortcut these

410
00:15:27,839 --> 00:15:32,240
iterative polynomial evaluations

411
00:15:32,240 --> 00:15:34,880
well this is not exactly bad news for us

412
00:15:34,880 --> 00:15:37,040
we now know that computing f either with

413
00:15:37,040 --> 00:15:39,199
a t times on input x can be done

414
00:15:39,199 --> 00:15:41,839
efficiently we can perhaps use this as a

415
00:15:41,839 --> 00:15:43,279
group action

416
00:15:43,279 --> 00:15:46,160
so if we look at the group generated by

417
00:15:46,160 --> 00:15:49,199
iteratively applying the function f

418
00:15:49,199 --> 00:15:51,600
this group actually has a smooth order

419
00:15:51,600 --> 00:15:53,360
of 2 to the n

420
00:15:53,360 --> 00:15:55,839
this means that a discrete log within

421
00:15:55,839 --> 00:15:58,480
this group is easy however discrete log

422
00:15:58,480 --> 00:16:00,399
within the group actions could still

423
00:16:00,399 --> 00:16:02,560
potentially be hard

424
00:16:02,560 --> 00:16:04,880
also just as we've seen in isogenic

425
00:16:04,880 --> 00:16:08,480
based cryptography group actions can be

426
00:16:08,480 --> 00:16:11,040
hoped to be quantum resistant therefore

427
00:16:11,040 --> 00:16:13,120
there is certain interest in studying

428
00:16:13,120 --> 00:16:15,360
whether we can use these polynomials as

429
00:16:15,360 --> 00:16:18,079
group actions

430
00:16:18,240 --> 00:16:20,399
so here's a diffie-hellman protocol that

431
00:16:20,399 --> 00:16:22,480
uses these polynomials as

432
00:16:22,480 --> 00:16:24,399
group actions

433
00:16:24,399 --> 00:16:27,199
so for addis and bob to reach a common

434
00:16:27,199 --> 00:16:29,199
secret they will first agree on a

435
00:16:29,199 --> 00:16:31,839
function f together with an input x

436
00:16:31,839 --> 00:16:34,320
these are made public and everybody has

437
00:16:34,320 --> 00:16:36,399
access to it in fact you cannot even

438
00:16:36,399 --> 00:16:39,680
think about x being simply one

439
00:16:39,680 --> 00:16:41,839
so alice would have would think about a

440
00:16:41,839 --> 00:16:44,240
secret value a and evaluate the function

441
00:16:44,240 --> 00:16:47,279
f a times an input x and bob similarly

442
00:16:47,279 --> 00:16:49,519
for a secret value b

443
00:16:49,519 --> 00:16:51,839
and then addis and bob will exchange

444
00:16:51,839 --> 00:16:54,160
their evaluations of the function

445
00:16:54,160 --> 00:16:56,320
and alice will again

446
00:16:56,320 --> 00:16:57,839
evaluate the function another eight

447
00:16:57,839 --> 00:17:00,560
times on bob's result and eventually got

448
00:17:00,560 --> 00:17:03,040
this result which is equivalent to the

449
00:17:03,040 --> 00:17:05,280
function evaluating the function f b

450
00:17:05,280 --> 00:17:08,160
times and then a times on the input x

451
00:17:08,160 --> 00:17:10,240
bob will also get a similar result and

452
00:17:10,240 --> 00:17:12,799
it is easy to verify that both of these

453
00:17:12,799 --> 00:17:15,839
results are equal to f iterated a plus b

454
00:17:15,839 --> 00:17:19,839
times on the input x

455
00:17:19,839 --> 00:17:20,720
so

456
00:17:20,720 --> 00:17:22,799
having lived with the hotball genie in

457
00:17:22,799 --> 00:17:24,799
my room for a couple of months i kind of

458
00:17:24,799 --> 00:17:26,559
really want to get rid of him so

459
00:17:26,559 --> 00:17:30,240
therefore i ask the last wish

460
00:17:30,240 --> 00:17:33,360
is discrete log within the group actions

461
00:17:33,360 --> 00:17:34,320
hard

462
00:17:34,320 --> 00:17:35,600
in this case

463
00:17:35,600 --> 00:17:37,679
so in order to be specific we're given

464
00:17:37,679 --> 00:17:39,760
the function f and input x and we're

465
00:17:39,760 --> 00:17:41,200
given the result of evaluating the

466
00:17:41,200 --> 00:17:44,000
function f t times on the input x

467
00:17:44,000 --> 00:17:45,039
can we

468
00:17:45,039 --> 00:17:47,520
get from here the

469
00:17:47,520 --> 00:17:49,440
number of iterations t

470
00:17:49,440 --> 00:17:51,520
the genie thought for a while and

471
00:17:51,520 --> 00:17:52,960
actually said

472
00:17:52,960 --> 00:17:53,840
nope

473
00:17:53,840 --> 00:17:57,520
that is not hard at all

474
00:17:57,600 --> 00:17:59,679
so here's how the genie proposed that we

475
00:17:59,679 --> 00:18:01,679
solve the discrete log within the group

476
00:18:01,679 --> 00:18:05,039
actions so we start from the input x

477
00:18:05,039 --> 00:18:08,000
and the function evaluated t times on

478
00:18:08,000 --> 00:18:09,200
input x

479
00:18:09,200 --> 00:18:11,200
and then we simultaneously evaluate the

480
00:18:11,200 --> 00:18:13,520
function f on both of these values and

481
00:18:13,520 --> 00:18:16,640
we repeat this for a while

482
00:18:16,640 --> 00:18:19,440
now by the commutativity of polynomial

483
00:18:19,440 --> 00:18:21,840
composition we know that

484
00:18:21,840 --> 00:18:23,520
it doesn't matter if you apply the

485
00:18:23,520 --> 00:18:25,679
function f t times first or one time

486
00:18:25,679 --> 00:18:28,880
first the result is the same

487
00:18:28,880 --> 00:18:30,799
so now we're able to replace the bottom

488
00:18:30,799 --> 00:18:32,799
half of the chain with these values

489
00:18:32,799 --> 00:18:35,280
instead

490
00:18:35,520 --> 00:18:37,679
the next thing to notice is that since f

491
00:18:37,679 --> 00:18:39,760
presents four length cycles we know that

492
00:18:39,760 --> 00:18:42,240
f of x is not going to be the same as x

493
00:18:42,240 --> 00:18:44,160
let's say we call it x prime and

494
00:18:44,160 --> 00:18:46,640
similarly x double prime x triple prime

495
00:18:46,640 --> 00:18:48,720
and we updated the values in the bottom

496
00:18:48,720 --> 00:18:51,440
correspondingly as well

497
00:18:51,440 --> 00:18:52,799
what this gives us

498
00:18:52,799 --> 00:18:55,120
are actually pairs of values

499
00:18:55,120 --> 00:18:57,039
that are different points on the

500
00:18:57,039 --> 00:19:00,559
function f iterated t times

501
00:19:00,559 --> 00:19:03,280
then the next step we use polynomial

502
00:19:03,280 --> 00:19:04,720
interpolation

503
00:19:04,720 --> 00:19:07,919
to get back the polynomial f iterated t

504
00:19:07,919 --> 00:19:09,039
times

505
00:19:09,039 --> 00:19:11,200
here we're doing the polynomial

506
00:19:11,200 --> 00:19:14,160
interpolation in z2 to the n

507
00:19:14,160 --> 00:19:16,799
it is a bit trickier but nonetheless it

508
00:19:16,799 --> 00:19:18,240
is still possible

509
00:19:18,240 --> 00:19:20,880
so now we're able to map from the group

510
00:19:20,880 --> 00:19:22,880
actions back to the group elements and

511
00:19:22,880 --> 00:19:24,559
since the group itself has a smooth

512
00:19:24,559 --> 00:19:26,960
order of 2 to the n solving the discrete

513
00:19:26,960 --> 00:19:28,880
log and getting t

514
00:19:28,880 --> 00:19:31,440
is easy

515
00:19:31,440 --> 00:19:33,600
so now that we've made all our three

516
00:19:33,600 --> 00:19:35,520
wishes the hotpot genie disappeared

517
00:19:35,520 --> 00:19:37,280
without a trace

518
00:19:37,280 --> 00:19:40,480
so looking back at our story the first

519
00:19:40,480 --> 00:19:43,039
which we made was for polynomials with

520
00:19:43,039 --> 00:19:44,720
fallen cycles

521
00:19:44,720 --> 00:19:47,440
the genie kindly granted the wish and

522
00:19:47,440 --> 00:19:49,919
actually gave us a class of polynomials

523
00:19:49,919 --> 00:19:51,760
with following cycles

524
00:19:51,760 --> 00:19:53,679
the second which we made was for no

525
00:19:53,679 --> 00:19:56,080
shortcutting on iterated evaluation of

526
00:19:56,080 --> 00:19:57,600
polynomials

527
00:19:57,600 --> 00:20:00,160
however the genie declined our wish and

528
00:20:00,160 --> 00:20:01,520
showed us that

529
00:20:01,520 --> 00:20:03,280
you can shortcut by squaring these

530
00:20:03,280 --> 00:20:06,240
transformation matrices

531
00:20:06,240 --> 00:20:08,000
the third which that we made

532
00:20:08,000 --> 00:20:09,919
was that we want to use these

533
00:20:09,919 --> 00:20:11,840
polynomials of group actions we wonder

534
00:20:11,840 --> 00:20:14,400
if discrete log is hard for these group

535
00:20:14,400 --> 00:20:15,840
actions

536
00:20:15,840 --> 00:20:16,960
again

537
00:20:16,960 --> 00:20:19,200
the hotbar genie declined our wish and

538
00:20:19,200 --> 00:20:21,360
shows that we can map these group

539
00:20:21,360 --> 00:20:23,600
actions back to the group elements where

540
00:20:23,600 --> 00:20:27,199
the discrete log becomes easy

541
00:20:27,760 --> 00:20:28,559
so

542
00:20:28,559 --> 00:20:30,080
to prepare for the next time that we

543
00:20:30,080 --> 00:20:32,080
meet the hotdog genie we want some

544
00:20:32,080 --> 00:20:34,080
wishes ready by hand and here are some

545
00:20:34,080 --> 00:20:35,120
of them

546
00:20:35,120 --> 00:20:37,039
first we notice that the group of

547
00:20:37,039 --> 00:20:39,120
polynomials mod 2 to the n is

548
00:20:39,120 --> 00:20:41,200
non-obedient and we wonder if we can

549
00:20:41,200 --> 00:20:45,120
plug this into non-median cryptosystems

550
00:20:45,120 --> 00:20:47,600
secondly most of the currently current

551
00:20:47,600 --> 00:20:49,440
protocols rely on the hardness of the

552
00:20:49,440 --> 00:20:52,400
discrete log problem but here we have a

553
00:20:52,400 --> 00:20:53,679
group where

554
00:20:53,679 --> 00:20:55,600
both the degree log within the group and

555
00:20:55,600 --> 00:20:57,840
within the group actions are easy we

556
00:20:57,840 --> 00:20:59,200
wonder if there are any interesting

557
00:20:59,200 --> 00:21:01,679
protocols that we can build utilizing

558
00:21:01,679 --> 00:21:04,799
this easy discrete log problems

559
00:21:04,799 --> 00:21:07,919
and lastly perhaps by embedding addition

560
00:21:07,919 --> 00:21:10,159
and multiplication into polynomial

561
00:21:10,159 --> 00:21:12,320
addition and composition we might be

562
00:21:12,320 --> 00:21:14,640
able to get some form of 40 homomorphic

563
00:21:14,640 --> 00:21:15,679
encryption

564
00:21:15,679 --> 00:21:17,600
this seems like an interesting idea to

565
00:21:17,600 --> 00:21:19,918
explore

566
00:21:20,400 --> 00:21:22,880
lastly thank you all for your time and

567
00:21:22,880 --> 00:21:25,520
we hope that you meet a hotdog genie

568
00:21:25,520 --> 00:21:27,840
sometime in the future as well

569
00:21:27,840 --> 00:21:31,080
thank you

570
00:21:35,039 --> 00:21:37,520
thank you very nicely done

571
00:21:37,520 --> 00:21:38,799
all right

572
00:21:38,799 --> 00:21:40,080
do you have any questions for the

573
00:21:40,080 --> 00:21:44,199
speaker or the hotpot genie

574
00:21:47,360 --> 00:21:50,559
i don't see any on on zulub yet so do

575
00:21:50,559 --> 00:21:51,760
you think you should have asked the

576
00:21:51,760 --> 00:21:53,600
first question differently or do you

577
00:21:53,600 --> 00:21:55,840
have evidence that all other polynomials

578
00:21:55,840 --> 00:21:57,440
that are not squaring

579
00:21:57,440 --> 00:21:59,280
and have a full cycle lengths are easy

580
00:21:59,280 --> 00:22:02,000
to evaluate

581
00:22:02,080 --> 00:22:04,159
so you're saying that uh can you guys

582
00:22:04,159 --> 00:22:05,120
hear me

583
00:22:05,120 --> 00:22:07,360
oh yeah i can hear you so the question

584
00:22:07,360 --> 00:22:09,520
is can you ask the genie a question to

585
00:22:09,520 --> 00:22:12,000
give you something of full cycle length

586
00:22:12,000 --> 00:22:15,200
which is not easy to shortcut

587
00:22:15,200 --> 00:22:17,360
uh yeah that's what we've been uh trying

588
00:22:17,360 --> 00:22:20,640
to find and uh it seems um seems hard

589
00:22:20,640 --> 00:22:21,919
because all the polynomials that we've

590
00:22:21,919 --> 00:22:23,360
come up with

591
00:22:23,360 --> 00:22:24,799
i think the issue is that if they give

592
00:22:24,799 --> 00:22:27,360
you full-length cycles um our intuition

593
00:22:27,360 --> 00:22:30,000
is that it's like the polynomial if you

594
00:22:30,000 --> 00:22:32,000
look at the cycles itself it's it's

595
00:22:32,000 --> 00:22:33,679
actually well structured which

596
00:22:33,679 --> 00:22:36,000
essentially presents you like uh some

597
00:22:36,000 --> 00:22:38,559
way of shortcutting it so

598
00:22:38,559 --> 00:22:40,000
yeah but that's an interesting question

599
00:22:40,000 --> 00:22:41,600
to think about maybe not multi to the

600
00:22:41,600 --> 00:22:44,080
end maybe uh in some other um in some

601
00:22:44,080 --> 00:22:46,080
other groups or range so

602
00:22:46,080 --> 00:22:47,440
yeah that's definitely one direction to

603
00:22:47,440 --> 00:22:49,760
explore

604
00:22:51,120 --> 00:22:53,280
see more people coming up on

605
00:22:53,280 --> 00:22:57,200
this camera anybody has a question

606
00:23:03,520 --> 00:23:05,120
everybody is saving a question to ask

607
00:23:05,120 --> 00:23:07,520
the jimmy genie directly

608
00:23:07,520 --> 00:23:09,520
yeah yeah i mean i i wonder how i can

609
00:23:09,520 --> 00:23:11,760
invoke that genie because i mean that

610
00:23:11,760 --> 00:23:13,600
sounds awesome to begin with do you have

611
00:23:13,600 --> 00:23:15,520
to have special brand of hot pot or can

612
00:23:15,520 --> 00:23:17,200
it be your homemade

613
00:23:17,200 --> 00:23:19,440
uh it's just a trick that you just need

614
00:23:19,440 --> 00:23:21,200
it's like the technique you need like to

615
00:23:21,200 --> 00:23:23,120
rub the hotpot in a special way i guess

616
00:23:23,120 --> 00:23:25,200
like keypad who's i think also in the

617
00:23:25,200 --> 00:23:27,200
talk he might have more experience in

618
00:23:27,200 --> 00:23:29,440
that

619
00:23:29,760 --> 00:23:31,280
but don't actually try that that's uh

620
00:23:31,280 --> 00:23:34,280
yoga

621
00:23:36,240 --> 00:23:38,400
oh sorry maybe i didn't get that so why

622
00:23:38,400 --> 00:23:40,000
did you choose

623
00:23:40,000 --> 00:23:42,559
is there any reason to choose two to the

624
00:23:42,559 --> 00:23:44,880
end in the first place so uh it's sort

625
00:23:44,880 --> 00:23:46,880
of like we started off with this pose

626
00:23:46,880 --> 00:23:48,559
and where they study triangular numbers

627
00:23:48,559 --> 00:23:50,080
multi to the n

628
00:23:50,080 --> 00:23:52,240
and that's sort of like uh so we started

629
00:23:52,240 --> 00:23:54,720
from there and we look at all different

630
00:23:54,720 --> 00:23:56,799
polynomials multiple to the n log two to

631
00:23:56,799 --> 00:23:58,960
the n so that's sort of where we started

632
00:23:58,960 --> 00:24:01,200
uh so we've actually looked at higher

633
00:24:01,200 --> 00:24:04,240
degree polynomials for example uh say of

634
00:24:04,240 --> 00:24:05,679
degree 3

635
00:24:05,679 --> 00:24:08,480
say for example f x equals say i don't

636
00:24:08,480 --> 00:24:10,400
remember exactly but say some

637
00:24:10,400 --> 00:24:12,720
degree 3 polynomial and in that case you

638
00:24:12,720 --> 00:24:15,360
will be doing mod 3 to the n in that

639
00:24:15,360 --> 00:24:16,320
case

640
00:24:16,320 --> 00:24:17,840
and that will also give you fallen

641
00:24:17,840 --> 00:24:19,840
cycles

642
00:24:19,840 --> 00:24:21,679
because it seems like the more structure

643
00:24:21,679 --> 00:24:24,400
you have maybe the easier the problem or

644
00:24:24,400 --> 00:24:25,919
like

645
00:24:25,919 --> 00:24:29,200
um no because this okay maybe this uh

646
00:24:29,200 --> 00:24:31,360
designate this um

647
00:24:31,360 --> 00:24:33,120
verifiable delay function they are

648
00:24:33,120 --> 00:24:34,400
modulo

649
00:24:34,400 --> 00:24:36,240
yeah they're in groups of unknown order

650
00:24:36,240 --> 00:24:38,000
but they're like they're doing the

651
00:24:38,000 --> 00:24:40,320
squaring um which gives you four line

652
00:24:40,320 --> 00:24:42,080
cycles but if you

653
00:24:42,080 --> 00:24:44,240
uh if you do these polynomials within uh

654
00:24:44,240 --> 00:24:46,000
within groups of unknown order uh

655
00:24:46,000 --> 00:24:47,440
they're not gonna be they're not gonna

656
00:24:47,440 --> 00:24:49,440
give you four land cycles uh the phone

657
00:24:49,440 --> 00:24:51,520
cycles are only there in the if you're

658
00:24:51,520 --> 00:24:52,799
doing multi to end with these

659
00:24:52,799 --> 00:24:55,520
polynomials

660
00:24:58,640 --> 00:25:01,200
okay thank you

661
00:25:01,200 --> 00:25:02,640
all right at this point it's quarter

662
00:25:02,640 --> 00:25:04,799
past so i should hand over to allison

663
00:25:04,799 --> 00:25:07,360
but let me first thank uh to jan for the

664
00:25:07,360 --> 00:25:08,880
awesome talk and lots of hotspots

665
00:25:08,880 --> 00:25:10,559
inspiration

666
00:25:10,559 --> 00:25:13,720
thank you

667
00:25:14,080 --> 00:25:17,360
thank you um ellie do you want to check

668
00:25:17,360 --> 00:25:20,400
real quick that we can hear you before i

669
00:25:20,400 --> 00:25:24,120
introduce your talk

