1
00:00:00,800 --> 00:00:04,080
hello my name is Matilda and I will be

2
00:00:04,080 --> 00:00:05,580
talking about punctual key wrapping

3
00:00:05,580 --> 00:00:07,620
analyst applications this is Joint work

4
00:00:07,620 --> 00:00:10,080
with Felix ginto and Kenny Patterson

5
00:00:10,080 --> 00:00:12,660
in the full talk at Asia Crypt I will

6
00:00:12,660 --> 00:00:14,219
try to tell you what punctual key

7
00:00:14,219 --> 00:00:16,139
wrapping is how it can be used and why

8
00:00:16,139 --> 00:00:18,000
we think it's interesting but in this

9
00:00:18,000 --> 00:00:19,380
teaser I'm going to focus on the last

10
00:00:19,380 --> 00:00:21,180
point and tell you why I think we need

11
00:00:21,180 --> 00:00:23,400
functional key wrapping

12
00:00:23,400 --> 00:00:25,080
so starting with a motivating example

13
00:00:25,080 --> 00:00:27,240
let's take a look at the setting of

14
00:00:27,240 --> 00:00:29,039
cloud storage

15
00:00:29,039 --> 00:00:31,019
imagine that you're a user or cloud

16
00:00:31,019 --> 00:00:32,820
storage service and that you have some

17
00:00:32,820 --> 00:00:34,739
files which you would like to upload to

18
00:00:34,739 --> 00:00:36,059
the cloud

19
00:00:36,059 --> 00:00:38,520
however the files might be of a

20
00:00:38,520 --> 00:00:40,320
sensitive nature so you'd like to

21
00:00:40,320 --> 00:00:42,000
encrypt them before you Outsource them

22
00:00:42,000 --> 00:00:45,239
to do this you generate a unique per

23
00:00:45,239 --> 00:00:47,399
file data encryption key or deck for

24
00:00:47,399 --> 00:00:49,980
short and use this to encrypt the files

25
00:00:49,980 --> 00:00:52,260
now you can safely Outsource the storage

26
00:00:52,260 --> 00:00:54,899
of the files in the cloud however you're

27
00:00:54,899 --> 00:00:57,239
left with a bit of a key management

28
00:00:57,239 --> 00:00:59,039
problem because you have to store all of

29
00:00:59,039 --> 00:01:00,239
the data encryption keys in some

30
00:01:00,239 --> 00:01:01,680
protected storage

31
00:01:01,680 --> 00:01:04,019
to get around this you can generate

32
00:01:04,019 --> 00:01:05,760
what's known as a key encryption key or

33
00:01:05,760 --> 00:01:08,280
a Keck for short and use this to a wrap

34
00:01:08,280 --> 00:01:10,500
up or essentially encrypt the data

35
00:01:10,500 --> 00:01:12,960
encryption keys now the data encryption

36
00:01:12,960 --> 00:01:15,060
keys are also protected and you can

37
00:01:15,060 --> 00:01:17,220
safely Outsource the storage of both the

38
00:01:17,220 --> 00:01:19,080
data encryption keys and the encrypted

39
00:01:19,080 --> 00:01:21,740
files to the cloud

40
00:01:22,020 --> 00:01:24,360
now imagine that you want to delete the

41
00:01:24,360 --> 00:01:25,799
file and you send this request to the

42
00:01:25,799 --> 00:01:26,580
cloud

43
00:01:26,580 --> 00:01:28,080
the cloud might respond that the file

44
00:01:28,080 --> 00:01:30,420
has been deleted however since the cloud

45
00:01:30,420 --> 00:01:32,460
is not trusted you cannot actually be

46
00:01:32,460 --> 00:01:35,040
sure that the file was properly deleted

47
00:01:35,040 --> 00:01:37,380
for example if the cloud is malicious it

48
00:01:37,380 --> 00:01:38,820
might simply choose to ignore your

49
00:01:38,820 --> 00:01:41,040
request to delete the file and even if

50
00:01:41,040 --> 00:01:42,720
the cloud is honest it might have been

51
00:01:42,720 --> 00:01:44,880
compromised by some external adversary

52
00:01:44,880 --> 00:01:47,040
that took a snapshot of the ciphertext

53
00:01:47,040 --> 00:01:49,560
before the file was deleted

54
00:01:49,560 --> 00:01:52,079
it can also be the case that the file is

55
00:01:52,079 --> 00:01:53,759
kept around for backup or Disaster

56
00:01:53,759 --> 00:01:56,220
Recovery purposes or that it's simply

57
00:01:56,220 --> 00:01:58,200
not properly deleted because of faulty

58
00:01:58,200 --> 00:02:00,119
processes

59
00:02:00,119 --> 00:02:01,799
and this is a problem if your key

60
00:02:01,799 --> 00:02:03,540
encryption key were to get compromised

61
00:02:03,540 --> 00:02:05,340
because that means that all of the files

62
00:02:05,340 --> 00:02:07,320
that you keep in the cloud including the

63
00:02:07,320 --> 00:02:08,940
one that you wanted to delete are

64
00:02:08,940 --> 00:02:10,739
potentially vulnerable

65
00:02:10,739 --> 00:02:12,540
and this is a problem because it means

66
00:02:12,540 --> 00:02:14,040
that your deleted files lack forward

67
00:02:14,040 --> 00:02:15,900
security which is something that we'd

68
00:02:15,900 --> 00:02:17,959
like to be able to provide

69
00:02:17,959 --> 00:02:20,459
so imagine that there was a way for you

70
00:02:20,459 --> 00:02:22,980
to make sure that your deleted files

71
00:02:22,980 --> 00:02:25,140
were completely gone without having to

72
00:02:25,140 --> 00:02:27,900
trust the cloud at all for example we

73
00:02:27,900 --> 00:02:29,640
could imagine there was a way to punch a

74
00:02:29,640 --> 00:02:31,620
hole in your key encryption key it's

75
00:02:31,620 --> 00:02:33,780
updated in such a way that it could no

76
00:02:33,780 --> 00:02:35,160
longer be used

77
00:02:35,160 --> 00:02:38,220
to re to unwrap the data encryption key

78
00:02:38,220 --> 00:02:39,959
corresponding to the file that you

79
00:02:39,959 --> 00:02:42,000
wanted to delete

80
00:02:42,000 --> 00:02:44,160
now if your updated key encryption key

81
00:02:44,160 --> 00:02:47,040
was to be compromised then

82
00:02:47,040 --> 00:02:52,220
your deleted file would be secure

83
00:02:52,500 --> 00:02:54,239
this is exactly what punctual key

84
00:02:54,239 --> 00:02:56,819
wrapping gives us namely fine-grained

85
00:02:56,819 --> 00:02:59,519
forward Security in an efficient and

86
00:02:59,519 --> 00:03:00,840
generic way

87
00:03:00,840 --> 00:03:03,120
and with applications to both places

88
00:03:03,120 --> 00:03:04,800
like cloud storage which I show you now

89
00:03:04,800 --> 00:03:06,780
and also things like TLS session

90
00:03:06,780 --> 00:03:09,120
resumption

91
00:03:09,120 --> 00:03:10,860
if you found this interesting which I

92
00:03:10,860 --> 00:03:12,659
hope you did you can learn more our

93
00:03:12,659 --> 00:03:15,180
paper is on ePrint uh here's the QR code

94
00:03:15,180 --> 00:03:17,099
in the link and I'll be giving a talk at

95
00:03:17,099 --> 00:03:19,319
Asia Crypt 2022.

96
00:03:19,319 --> 00:03:21,510
thanks for listening

97
00:03:21,510 --> 00:03:34,030
[Music]

98
00:03:34,200 --> 00:03:36,480
if you want to store all your files in

99
00:03:36,480 --> 00:03:38,819
the cloud and you ask yourself now is

100
00:03:38,819 --> 00:03:41,099
there somehow I can erase my fans

101
00:03:41,099 --> 00:03:43,319
securing the case of a guy that can

102
00:03:43,319 --> 00:03:45,360
still not their gears just jewelry to

103
00:03:45,360 --> 00:03:47,700
sample a key that you use for your files

104
00:03:47,700 --> 00:03:49,980
then take a new one that you keep for a

105
00:03:49,980 --> 00:03:52,260
while the first one's attack which we

106
00:03:52,260 --> 00:03:54,720
will be encrypting by using the cake and

107
00:03:54,720 --> 00:03:56,519
you could keep wrapping but that's not

108
00:03:56,519 --> 00:03:58,860
enough and that's why I'm happy to show

109
00:03:58,860 --> 00:04:00,599
you what happens if you puncture keep

110
00:04:00,599 --> 00:04:02,879
rapping just update your key and then

111
00:04:02,879 --> 00:04:04,799
you're all set it leaves you an okay

112
00:04:04,799 --> 00:04:06,690
that you can forget

113
00:04:06,690 --> 00:04:18,620
[Music]

114
00:04:18,620 --> 00:04:21,720
time then send early data and that by

115
00:04:21,720 --> 00:04:24,180
Design allows you to be quick but there

116
00:04:24,180 --> 00:04:26,940
is a price not forward secure that's not

117
00:04:26,940 --> 00:04:28,979
really nice but here comes our new skin

118
00:04:28,979 --> 00:04:31,979
to rescue you out the psk sponsor and

119
00:04:31,979 --> 00:04:33,780
that leaves no doubt don't worry you

120
00:04:33,780 --> 00:04:35,580
really don't have to trust me trust me

121
00:04:35,580 --> 00:04:38,600
we managed to prove this enemies

122
00:04:38,600 --> 00:05:04,240
[Music]

