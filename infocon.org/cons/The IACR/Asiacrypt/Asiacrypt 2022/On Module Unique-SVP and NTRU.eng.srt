1
00:00:00,000 --> 00:00:02,280
hello everyone and thank you for

2
00:00:02,280 --> 00:00:04,200
watching this video abstract my name is

3
00:00:04,200 --> 00:00:06,779
Joel felderoff I am PhD student at the

4
00:00:06,779 --> 00:00:08,700
UNS de Leon and I am going to present

5
00:00:08,700 --> 00:00:11,820
the article on module unique SVP and

6
00:00:11,820 --> 00:00:14,219
Andrew which is a joint work with Alice

7
00:00:14,219 --> 00:00:17,220
polymeri and Daniel stereo the intro

8
00:00:17,220 --> 00:00:19,380
security assumption asks given a

9
00:00:19,380 --> 00:00:22,080
polynomial h a modular SKU and a power

10
00:00:22,080 --> 00:00:25,560
of 2N to find f and g small polynomials

11
00:00:25,560 --> 00:00:28,560
very things that H is equal to F over G

12
00:00:28,560 --> 00:00:32,159
modulo q and x to the N plus 1 provided

13
00:00:32,159 --> 00:00:35,280
that such small polynomial exists this

14
00:00:35,280 --> 00:00:37,440
can be seen as finding a small non-zero

15
00:00:37,440 --> 00:00:40,500
Vector in lattice L which verifies that

16
00:00:40,500 --> 00:00:43,320
firstly every element of L are pairs of

17
00:00:43,320 --> 00:00:45,180
integral polynomials module exclusion

18
00:00:45,180 --> 00:00:47,640
plus one and secondly there exists some

19
00:00:47,640 --> 00:00:50,219
very short vectors in L this problem of

20
00:00:50,219 --> 00:00:51,660
finding short non-zero Vector in

21
00:00:51,660 --> 00:00:53,520
lattices with an exceptionally short

22
00:00:53,520 --> 00:00:56,219
Vector is called the unique short Vector

23
00:00:56,219 --> 00:00:59,280
problem it has already been studied and

24
00:00:59,280 --> 00:01:01,020
it is known to be equivalent to some

25
00:01:01,020 --> 00:01:02,940
other classical problem in lenses based

26
00:01:02,940 --> 00:01:05,220
cryptography such as bounded distance

27
00:01:05,220 --> 00:01:08,100
decoding or the short independent Vector

28
00:01:08,100 --> 00:01:10,560
problem where the equivalence requires a

29
00:01:10,560 --> 00:01:11,880
quantum computer

30
00:01:11,880 --> 00:01:14,280
in our paper we see this structured

31
00:01:14,280 --> 00:01:16,799
version of usbp that we called module

32
00:01:16,799 --> 00:01:20,640
usvp in rank 2. it asks given basis of

33
00:01:20,640 --> 00:01:22,920
lattice L with elements are pairs of

34
00:01:22,920 --> 00:01:24,720
polynomials modular exclusion plus one

35
00:01:24,720 --> 00:01:27,000
to find a short non-zero Vector in it

36
00:01:27,000 --> 00:01:29,220
with the guarantee that the shortest

37
00:01:29,220 --> 00:01:31,680
element of L is a lot smaller than the

38
00:01:31,680 --> 00:01:33,240
lattices root volume

39
00:01:33,240 --> 00:01:35,460
as we said and toy is a particular case

40
00:01:35,460 --> 00:01:37,799
of modulus bin rank 2. our first

41
00:01:37,799 --> 00:01:39,780
contribution consists in proving that it

42
00:01:39,780 --> 00:01:42,000
is indeed a generic case and with

43
00:01:42,000 --> 00:01:44,939
equivalent to modulus pin rank 2. this

44
00:01:44,939 --> 00:01:46,380
is done by giving an algorithm

45
00:01:46,380 --> 00:01:48,960
transforming any module USB in Rank 2

46
00:01:48,960 --> 00:01:51,180
instance into a related entry instance

47
00:01:51,180 --> 00:01:53,939
and a way to lift back enter solution to

48
00:01:53,939 --> 00:01:57,079
our initial module usvp solution

49
00:01:57,079 --> 00:01:59,759
next we give a random self-production

50
00:01:59,759 --> 00:02:02,100
for module USB in rank 2. we show that

51
00:02:02,100 --> 00:02:04,140
there exists a distribution over its

52
00:02:04,140 --> 00:02:07,200
instances such that if someone can solve

53
00:02:07,200 --> 00:02:08,699
module usdp in Rank 2 with

54
00:02:08,699 --> 00:02:10,380
non-negligible probability for an

55
00:02:10,380 --> 00:02:12,420
instance sample from the distribution

56
00:02:12,420 --> 00:02:14,819
then they can solve every stats of

57
00:02:14,819 --> 00:02:17,760
module usvp in rank 2. this is done by

58
00:02:17,760 --> 00:02:20,520
giving an algorithm that randomizes in

59
00:02:20,520 --> 00:02:23,160
an invertible way any instance of module

60
00:02:23,160 --> 00:02:26,280
user pin rank 2. all of reduction are

61
00:02:26,280 --> 00:02:29,099
classical but require calls to Ideal VP

62
00:02:29,099 --> 00:02:31,260
Oracle the outline will be given in the

63
00:02:31,260 --> 00:02:33,480
in-person talk I hope this video made

64
00:02:33,480 --> 00:02:34,860
you want to assist to my presentation

65
00:02:34,860 --> 00:02:36,840
and I hope to see you live in Taiwan

66
00:02:36,840 --> 00:02:39,800
soon bye

