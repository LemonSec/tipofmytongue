1
00:00:57,660 --> 00:01:00,379
okay

2
00:01:11,159 --> 00:01:13,700
foreign

3
00:01:50,939 --> 00:01:53,600
foreign

4
00:01:59,840 --> 00:02:02,159
session of today on symmetric

5
00:02:02,159 --> 00:02:04,560
cryptography

6
00:02:04,560 --> 00:02:07,380
our first talk is key reduced variance

7
00:02:07,380 --> 00:02:09,720
of 3kf9 with Beyond birthday Bond

8
00:02:09,720 --> 00:02:10,860
security

9
00:02:10,860 --> 00:02:15,959
by Yao bin Shen Ferdinand siberas

10
00:02:15,959 --> 00:02:18,840
and this and Ferdinand will give the

11
00:02:18,840 --> 00:02:19,680
talk

12
00:02:19,680 --> 00:02:22,020
or is yours

13
00:02:22,020 --> 00:02:25,200
may I remind actually the whoever is on

14
00:02:25,200 --> 00:02:27,060
zoom and you can ask questions at the

15
00:02:27,060 --> 00:02:29,280
end like raise your hands and ask them

16
00:02:29,280 --> 00:02:32,000
in person please

17
00:02:33,120 --> 00:02:34,920
uh thank you for the ingredients good

18
00:02:34,920 --> 00:02:36,300
morning everyone

19
00:02:36,300 --> 00:02:38,520
uh so let's

20
00:02:38,520 --> 00:02:42,360
talk about uh lightweight cryptography

21
00:02:42,360 --> 00:02:44,400
so electricity is quite Hot Topic

22
00:02:44,400 --> 00:02:47,280
recently we've got many lightweight

23
00:02:47,280 --> 00:02:49,220
Cipher that were proposed more than 60

24
00:02:49,220 --> 00:02:52,379
some built by many entities you may know

25
00:02:52,379 --> 00:02:55,379
present gift Simon spec

26
00:02:55,379 --> 00:02:57,660
an electric photography also have

27
00:02:57,660 --> 00:02:59,400
competition to build authenticated

28
00:02:59,400 --> 00:03:02,239
encryption so not only block ciphers but

29
00:03:02,239 --> 00:03:05,040
work ciphers and modes of operation that

30
00:03:05,040 --> 00:03:06,900
provide both authentication and

31
00:03:06,900 --> 00:03:09,599
encryption so the Caesar competition at

32
00:03:09,599 --> 00:03:13,319
the lightweight portfolio who saw ascan

33
00:03:13,319 --> 00:03:15,360
and ascon as the win account as the

34
00:03:15,360 --> 00:03:16,620
winner

35
00:03:16,620 --> 00:03:18,900
the nice lightweight competition also

36
00:03:18,900 --> 00:03:21,239
still ongoing we have 10 finalists you

37
00:03:21,239 --> 00:03:23,040
may have heard of some of them

38
00:03:23,040 --> 00:03:25,800
but it's quite an ongoing uh field of

39
00:03:25,800 --> 00:03:26,819
research

40
00:03:26,819 --> 00:03:29,700
but wasn't gonna talk in this paper is a

41
00:03:29,700 --> 00:03:31,920
lightweight Mac so

42
00:03:31,920 --> 00:03:34,200
not authenticate an encryption but only

43
00:03:34,200 --> 00:03:35,959
Authentication

44
00:03:35,959 --> 00:03:38,940
uh so why would we want a new

45
00:03:38,940 --> 00:03:40,560
authentication and not encryption well

46
00:03:40,560 --> 00:03:43,379
in practice that's really it's actually

47
00:03:43,379 --> 00:03:45,659
not so uncommon to only once uh

48
00:03:45,659 --> 00:03:48,000
authentication for instance when you

49
00:03:48,000 --> 00:03:49,980
want to synchronize a machine you might

50
00:03:49,980 --> 00:03:52,560
want just to send a standing stamp which

51
00:03:52,560 --> 00:03:54,299
contain no secret information but you

52
00:03:54,299 --> 00:03:56,159
want you don't want an adversary to be

53
00:03:56,159 --> 00:03:57,900
able to temper it so

54
00:03:57,900 --> 00:04:01,680
Mac only application exists and it's a

55
00:04:01,680 --> 00:04:04,620
it's it's also a decreasing topic to

56
00:04:04,620 --> 00:04:06,060
look on

57
00:04:06,060 --> 00:04:09,120
and it's also quite rare we don't have a

58
00:04:09,120 --> 00:04:11,879
lot of lightweight Mark it's mainly

59
00:04:11,879 --> 00:04:13,920
black ciphers and authenticating

60
00:04:13,920 --> 00:04:15,840
question but authentication only it's

61
00:04:15,840 --> 00:04:17,820
not green

62
00:04:17,820 --> 00:04:20,940
so one nice thing okay I can just take

63
00:04:20,940 --> 00:04:23,639
any Mark and plug in a lightweight block

64
00:04:23,639 --> 00:04:25,259
Cipher because we have a black block

65
00:04:25,259 --> 00:04:27,360
Cipher

66
00:04:27,360 --> 00:04:29,759
um can work but you have to be careful

67
00:04:29,759 --> 00:04:31,800
that lightweight block Cipher usually

68
00:04:31,800 --> 00:04:35,699
have a small size so so it's uh so so to

69
00:04:35,699 --> 00:04:37,560
reduce implementation tests and so so

70
00:04:37,560 --> 00:04:39,180
it's more lightweight

71
00:04:39,180 --> 00:04:41,280
and if you take conventional Mark like

72
00:04:41,280 --> 00:04:44,460
CBC Mac or pmac you might run into a

73
00:04:44,460 --> 00:04:46,320
trouble because the amount of operation

74
00:04:46,320 --> 00:04:48,900
is only secure up to burst Labon which

75
00:04:48,900 --> 00:04:51,300
concretely means if you have a 64-bit

76
00:04:51,300 --> 00:04:54,120
block Cipher it's only secure up to 2 to

77
00:04:54,120 --> 00:04:59,160
32 uh the target attack Authentication

78
00:04:59,160 --> 00:05:02,820
and recently we had the sweet 32 attack

79
00:05:02,820 --> 00:05:06,979
that so that's 2 to the 32 uh it may be

80
00:05:06,979 --> 00:05:09,540
achievable in practice you can have real

81
00:05:09,540 --> 00:05:11,759
security threats if you use small block

82
00:05:11,759 --> 00:05:15,840
ciphers on with the buzzaigon secure

83
00:05:15,840 --> 00:05:17,699
modes of operation

84
00:05:17,699 --> 00:05:19,320
and so

85
00:05:19,320 --> 00:05:22,139
might we might want is to design Mac

86
00:05:22,139 --> 00:05:26,280
that are secure beyond the birthday bone

87
00:05:26,280 --> 00:05:29,220
a speaker way to to to build max secure

88
00:05:29,220 --> 00:05:30,900
beyond the birthday bone and to keep

89
00:05:30,900 --> 00:05:32,820
everything deterministic

90
00:05:32,820 --> 00:05:36,060
is the double block as then some uh

91
00:05:36,060 --> 00:05:39,900
strategy where you double the internal

92
00:05:39,900 --> 00:05:42,840
State size so no instead of having a

93
00:05:42,840 --> 00:05:45,780
hand bit State size you have a 20 bit to

94
00:05:45,780 --> 00:05:46,979
avoid Collision

95
00:05:46,979 --> 00:05:49,620
that's because you actually have a an

96
00:05:49,620 --> 00:05:53,699
attack we expect Collision in in the

97
00:05:53,699 --> 00:05:54,960
United States

98
00:05:54,960 --> 00:05:57,180
so if you double the internal State

99
00:05:57,180 --> 00:05:59,340
Collision apparents the

100
00:05:59,340 --> 00:06:02,039
much more ready and then you you can

101
00:06:02,039 --> 00:06:04,860
hope to achieve Beyond those demon CPT

102
00:06:04,860 --> 00:06:06,900
you have a lot of proposal that follows

103
00:06:06,900 --> 00:06:09,419
these patterns I mean cbcp Mic Plus 2K9

104
00:06:09,419 --> 00:06:11,820
like my Plus

105
00:06:11,820 --> 00:06:15,539
I plot them there so let's just go one

106
00:06:15,539 --> 00:06:16,500
by one

107
00:06:16,500 --> 00:06:19,380
quickly you see some ecbc was the first

108
00:06:19,380 --> 00:06:20,460
of its kind

109
00:06:20,460 --> 00:06:21,840
uh

110
00:06:21,840 --> 00:06:24,419
uh it's like two encrypted CBC that just

111
00:06:24,419 --> 00:06:26,880
use XL at the end to get the tag

112
00:06:26,880 --> 00:06:29,639
uh pmac plus you have some

113
00:06:29,639 --> 00:06:31,560
parallelization going on for filmic plus

114
00:06:31,560 --> 00:06:34,680
and like Mike Plus where you have uh one

115
00:06:34,680 --> 00:06:37,199
one block Cipher called block of message

116
00:06:37,199 --> 00:06:39,840
and some field multiplication

117
00:06:39,840 --> 00:06:43,440
and then vkf9 well it's like it's also

118
00:06:43,440 --> 00:06:47,520
uh some encrypted CC and you just saw

119
00:06:47,520 --> 00:06:50,280
the output of every every step to get to

120
00:06:50,280 --> 00:06:51,660
get to the type

121
00:06:51,660 --> 00:06:54,539
so how about the lightweightness well

122
00:06:54,539 --> 00:06:57,479
Sony CBC use two blocks I have a block

123
00:06:57,479 --> 00:06:58,919
of message so it's

124
00:06:58,919 --> 00:07:01,560
maybe not so lightweight but you can see

125
00:07:01,560 --> 00:07:03,600
that team expression like my press

126
00:07:03,600 --> 00:07:05,940
and we have now only use one block a

127
00:07:05,940 --> 00:07:08,280
block Cipher called permissions

128
00:07:08,280 --> 00:07:10,139
light micros and P Mac Plus have the

129
00:07:10,139 --> 00:07:11,940
advantage of being paralyzable but they

130
00:07:11,940 --> 00:07:14,819
use some field multiplication also with

131
00:07:14,819 --> 00:07:18,740
all all blocks I've called

132
00:07:20,000 --> 00:07:23,340
this is like no no no film notification

133
00:07:23,340 --> 00:07:25,860
and and it works

134
00:07:25,860 --> 00:07:28,460
so

135
00:07:28,620 --> 00:07:32,660
how can we do even more lightweight Mac

136
00:07:32,660 --> 00:07:34,860
mode of irrigation

137
00:07:34,860 --> 00:07:39,300
well one try is to reduce the keys so if

138
00:07:39,300 --> 00:07:41,880
you see in uh in the previous slides

139
00:07:41,880 --> 00:07:44,280
but in some CBC use four different keys

140
00:07:44,280 --> 00:07:46,139
and everything here use three different

141
00:07:46,139 --> 00:07:47,940
keys so we might want to reduce the

142
00:07:47,940 --> 00:07:50,759
number of keys to two or one and that

143
00:07:50,759 --> 00:07:52,979
that people have done that for PMX plus

144
00:07:52,979 --> 00:07:54,720
you have one KP Mic Plus like my plus

145
00:07:54,720 --> 00:07:56,340
one get like my Plus

146
00:07:56,340 --> 00:07:58,319
and the student user field notification

147
00:07:58,319 --> 00:08:00,060
and you only need one key and everything

148
00:08:00,060 --> 00:08:02,280
works so that's really great

149
00:08:02,280 --> 00:08:04,620
what about 3kf9

150
00:08:04,620 --> 00:08:07,620
can we do a live trade version uh with a

151
00:08:07,620 --> 00:08:10,919
review with 201 key version of 1kf9

152
00:08:10,919 --> 00:08:14,039
that's that's too good or for paper

153
00:08:14,039 --> 00:08:15,180
so

154
00:08:15,180 --> 00:08:17,639
has it been done before well it's been

155
00:08:17,639 --> 00:08:18,900
tried before

156
00:08:18,900 --> 00:08:21,900
so the first try was on kf9

157
00:08:21,900 --> 00:08:24,419
this one with a film notification and

158
00:08:24,419 --> 00:08:26,580
the fixed function we just fixed the

159
00:08:26,580 --> 00:08:29,520
last last bit to zero one so that

160
00:08:29,520 --> 00:08:32,159
creates the domain separation

161
00:08:32,159 --> 00:08:35,099
uh the proof of this was never completed

162
00:08:35,099 --> 00:08:39,419
and later actually we found a birthday

163
00:08:39,419 --> 00:08:40,979
bone attack

164
00:08:40,979 --> 00:08:44,940
so so that's a that that shows that this

165
00:08:44,940 --> 00:08:47,399
construction is actually not uh Beyond

166
00:08:47,399 --> 00:08:49,260
birthday Bon secure

167
00:08:49,260 --> 00:08:52,019
uh

168
00:08:52,019 --> 00:08:54,839
2K F9 was also proposed so it's just

169
00:08:54,839 --> 00:08:58,140
like 3K F9 but at the end instead of

170
00:08:58,140 --> 00:08:59,760
having two different Keys you have the

171
00:08:59,760 --> 00:09:01,080
same key

172
00:09:01,080 --> 00:09:04,380
but that's really uh you have a big

173
00:09:04,380 --> 00:09:08,160
issue here because everyone block query

174
00:09:08,160 --> 00:09:10,440
will create a zero type so if you see

175
00:09:10,440 --> 00:09:13,019
after one pressing one block the upper

176
00:09:13,019 --> 00:09:15,180
and lower parts I equal

177
00:09:15,180 --> 00:09:17,820
and so if you pass through the same

178
00:09:17,820 --> 00:09:20,220
block side first the equality will stay

179
00:09:20,220 --> 00:09:22,740
and the the tag will be zero so in other

180
00:09:22,740 --> 00:09:25,019
words if you take any one block message

181
00:09:25,019 --> 00:09:26,459
and you guess the tag is zero it's a

182
00:09:26,459 --> 00:09:29,119
very Fortune

183
00:09:29,760 --> 00:09:33,000
and it's not clear how you can fix this

184
00:09:33,000 --> 00:09:36,000
if you add fixed function just like when

185
00:09:36,000 --> 00:09:38,760
kf9 to create domain separation then you

186
00:09:38,760 --> 00:09:40,440
have the same attack as one kf9 so

187
00:09:40,440 --> 00:09:42,080
because they don't attack

188
00:09:42,080 --> 00:09:45,420
and the other thing you can try to fix

189
00:09:45,420 --> 00:09:48,480
this is to append is to always start by

190
00:09:48,480 --> 00:09:50,940
encrypting a zero block

191
00:09:50,940 --> 00:09:54,120
so that even one block message will have

192
00:09:54,120 --> 00:09:56,100
at least two blocks I forgot and the

193
00:09:56,100 --> 00:09:59,040
difference difference will be created

194
00:09:59,040 --> 00:10:02,880
in this case it avoids the it avoids the

195
00:10:02,880 --> 00:10:04,920
the single block attack but

196
00:10:04,920 --> 00:10:08,160
you still have an issue uh the the well

197
00:10:08,160 --> 00:10:11,760
for some uh missed pair of messages

198
00:10:11,760 --> 00:10:14,459
the probability that the the event that

199
00:10:14,459 --> 00:10:16,380
the upper part becomes the lower part so

200
00:10:16,380 --> 00:10:20,300
Sigma X becomes Lambda y

201
00:10:20,720 --> 00:10:23,399
and the lower parts become the upper

202
00:10:23,399 --> 00:10:25,200
part of the second message so Lambda x

203
00:10:25,200 --> 00:10:28,019
equals Sigma Y is actually only a n bit

204
00:10:28,019 --> 00:10:29,940
condition so that will happens at those

205
00:10:29,940 --> 00:10:32,220
day one and if this happens at birthday

206
00:10:32,220 --> 00:10:33,360
bone

207
00:10:33,360 --> 00:10:35,760
then because you have the same blocks I

208
00:10:35,760 --> 00:10:38,540
thought the same value will come but

209
00:10:38,540 --> 00:10:40,860
inverted so the lower part becomes the

210
00:10:40,860 --> 00:10:43,740
upper part and you get attack Collision

211
00:10:43,740 --> 00:10:46,980
it's not uh it's actually not a forgery

212
00:10:46,980 --> 00:10:49,320
but that's a distinguisher because that

213
00:10:49,320 --> 00:10:51,600
Collision will have come more time than

214
00:10:51,600 --> 00:10:53,899
you expect

215
00:10:54,480 --> 00:10:55,620
so

216
00:10:55,620 --> 00:10:57,000
that's what we learned from previous

217
00:10:57,000 --> 00:10:59,279
attempts

218
00:10:59,279 --> 00:11:01,620
one kf9 you have fixed function to

219
00:11:01,620 --> 00:11:03,540
create domain separation but it leads to

220
00:11:03,540 --> 00:11:07,140
very at least to many uh bad events that

221
00:11:07,140 --> 00:11:08,760
you have to consider that seems hard to

222
00:11:08,760 --> 00:11:11,880
avoid at birthday Bond to kf9 you have

223
00:11:11,880 --> 00:11:14,399
to be careful on the analysis uh simple

224
00:11:14,399 --> 00:11:16,860
analysis of Sigma y equal Lambda y so

225
00:11:16,860 --> 00:11:18,300
the upper part and lower parts being

226
00:11:18,300 --> 00:11:19,380
equal

227
00:11:19,380 --> 00:11:22,100
in in the analysis you can see the the

228
00:11:22,100 --> 00:11:24,540
It Was Written like this so the question

229
00:11:24,540 --> 00:11:27,360
was even was written like it's with the

230
00:11:27,360 --> 00:11:30,240
three dots but if Lambda Y is equal to

231
00:11:30,240 --> 00:11:32,160
one then the sum is like there's no

232
00:11:32,160 --> 00:11:34,500
thing in the sum so zero equals 0 to 3

233
00:11:34,500 --> 00:11:36,660
always holds so we have to be careful in

234
00:11:36,660 --> 00:11:38,640
the proof

235
00:11:38,640 --> 00:11:41,579
and the opposable construction where you

236
00:11:41,579 --> 00:11:46,079
you you you encrypt a zero block uh you

237
00:11:46,079 --> 00:11:47,940
have some you keep the Symmetry between

238
00:11:47,940 --> 00:11:50,360
the upper part and lower part and this

239
00:11:50,360 --> 00:11:54,360
this leads to burstable event that is

240
00:11:54,360 --> 00:11:57,540
that that that that makes the proof uh

241
00:11:57,540 --> 00:11:59,880
impossible

242
00:11:59,880 --> 00:12:02,459
so let's try to fix everything all this

243
00:12:02,459 --> 00:12:07,680
we what did we we achieve uh to to uh

244
00:12:07,680 --> 00:12:12,180
two key uh 3kf9 so our solution is this

245
00:12:12,180 --> 00:12:14,940
and uh I think it's pretty pretty neat

246
00:12:14,940 --> 00:12:16,140
it's

247
00:12:16,140 --> 00:12:18,660
with everything that can go wrong

248
00:12:18,660 --> 00:12:21,899
we realize that a single uh doubling at

249
00:12:21,899 --> 00:12:24,540
the end was solving everything

250
00:12:24,540 --> 00:12:27,600
and doubling a single doubling is in in

251
00:12:27,600 --> 00:12:30,000
any Garba field you can you can come up

252
00:12:30,000 --> 00:12:32,519
it's simply a one bit shift and a

253
00:12:32,519 --> 00:12:34,860
conditional exhaust so it's very light

254
00:12:34,860 --> 00:12:37,140
and it seems to serve everything

255
00:12:37,140 --> 00:12:39,779
uh final three modification has no fixed

256
00:12:39,779 --> 00:12:42,300
points so every every one block call

257
00:12:42,300 --> 00:12:45,060
will never lead to a quality between the

258
00:12:45,060 --> 00:12:46,860
upper part and lower part except if it's

259
00:12:46,860 --> 00:12:50,040
zero but that's really very low priority

260
00:12:50,040 --> 00:12:52,339
event

261
00:12:52,440 --> 00:12:55,260
if you look at the equations or the the

262
00:12:55,260 --> 00:12:57,000
upper and lower part being flipped

263
00:12:57,000 --> 00:12:59,100
between two pairs of messages

264
00:12:59,100 --> 00:13:01,740
you can check that storage lead to a two

265
00:13:01,740 --> 00:13:04,680
to two end bit conditions so just won't

266
00:13:04,680 --> 00:13:07,638
happen at the stable

267
00:13:07,700 --> 00:13:11,040
this uh we don't use fix so we don't

268
00:13:11,040 --> 00:13:13,680
have an attack on 1kf9 and everything is

269
00:13:13,680 --> 00:13:16,380
fine we just need to then to do the

270
00:13:16,380 --> 00:13:20,839
security analysis and and we're done

271
00:13:21,420 --> 00:13:23,639
the one key version

272
00:13:23,639 --> 00:13:27,180
we use the same ID just uh one uh one

273
00:13:27,180 --> 00:13:29,339
free notification with the additional

274
00:13:29,339 --> 00:13:31,560
restriction that we need the prefix free

275
00:13:31,560 --> 00:13:34,100
encoding

276
00:13:34,100 --> 00:13:36,240
and it shouldn't be surprising because

277
00:13:36,240 --> 00:13:38,519
if you look at the upper part no it's

278
00:13:38,519 --> 00:13:42,600
like a row CB smack and we know that CBC

279
00:13:42,600 --> 00:13:45,240
Mac is only secure if it's prefix free

280
00:13:45,240 --> 00:13:48,240
if the encoding is prefix free so to

281
00:13:48,240 --> 00:13:50,540
achieve Graphics Fitness

282
00:13:50,540 --> 00:13:53,100
one typical way is to encode the length

283
00:13:53,100 --> 00:13:54,839
of the message as the first block and

284
00:13:54,839 --> 00:13:59,360
then you you process with the rest

285
00:14:00,560 --> 00:14:03,560
foreign

286
00:14:04,700 --> 00:14:08,339
it's actually quite uh quite a light fix

287
00:14:08,339 --> 00:14:11,820
but seems to fix everything uh if you

288
00:14:11,820 --> 00:14:14,160
compare the or construction with uh

289
00:14:14,160 --> 00:14:16,920
encrypted Mac then it doesn't use any

290
00:14:16,920 --> 00:14:18,120
other key

291
00:14:18,120 --> 00:14:22,200
and simply uh an additional ended States

292
00:14:22,200 --> 00:14:24,360
a few notification and one block Cipher

293
00:14:24,360 --> 00:14:27,120
called per message

294
00:14:27,120 --> 00:14:30,480
the security however goes up to uh

295
00:14:30,480 --> 00:14:33,600
two to the third over 2 to V 2 n

296
00:14:33,600 --> 00:14:37,019
while the security of encrypted Nike's

297
00:14:37,019 --> 00:14:40,380
and he uh because they don't subcuted

298
00:14:40,380 --> 00:14:44,480
and this uh this can be even further

299
00:14:44,480 --> 00:14:47,040
improved maybe because we don't have a

300
00:14:47,040 --> 00:14:48,600
matching attack the matching attack use

301
00:14:48,600 --> 00:14:49,680
the

302
00:14:49,680 --> 00:14:55,079
you use a 22d3n of uh to the sphere

303
00:14:55,079 --> 00:14:56,880
number four queries so

304
00:14:56,880 --> 00:14:58,980
maybe it can be improved

305
00:14:58,980 --> 00:15:01,079
we don't know

306
00:15:01,079 --> 00:15:04,199
same for one key version so just the CDC

307
00:15:04,199 --> 00:15:06,959
Mac it's really comparable just add a

308
00:15:06,959 --> 00:15:09,420
few notification and uh

309
00:15:09,420 --> 00:15:11,880
and you have the same it's the same

310
00:15:11,880 --> 00:15:13,260
thing you don't need an additional key

311
00:15:13,260 --> 00:15:17,300
you don't need a you don't need much

312
00:15:17,480 --> 00:15:20,399
so the proof I did Proof ID really

313
00:15:20,399 --> 00:15:21,660
follows

314
00:15:21,660 --> 00:15:25,680
uh previous Works ID uh just we try to

315
00:15:25,680 --> 00:15:29,040
look at what went wrong and to to treat

316
00:15:29,040 --> 00:15:32,579
every case uh properly so don't we don't

317
00:15:32,579 --> 00:15:34,920
we don't have any any mistaking or proof

318
00:15:34,920 --> 00:15:37,500
but the idea is simple is to for every

319
00:15:37,500 --> 00:15:39,300
message we want at least

320
00:15:39,300 --> 00:15:41,880
the other part of the lower parts to be

321
00:15:41,880 --> 00:15:45,360
uh to be unique so we say we want at

322
00:15:45,360 --> 00:15:47,519
least one of the sigma or the Lambda to

323
00:15:47,519 --> 00:15:51,300
be uh cover free so they don't they

324
00:15:51,300 --> 00:15:53,220
don't collide with anything anything

325
00:15:53,220 --> 00:15:55,639
else

326
00:15:58,440 --> 00:16:00,600
this is the this is the part that was on

327
00:16:00,600 --> 00:16:02,940
and then the the

328
00:16:02,940 --> 00:16:05,040
finishing when you prove it's cover free

329
00:16:05,040 --> 00:16:07,019
it's really the same as other proof it

330
00:16:07,019 --> 00:16:10,740
works well and no issues so far in any

331
00:16:10,740 --> 00:16:13,639
proof from that part

332
00:16:14,959 --> 00:16:17,760
so what does that mean it means that we

333
00:16:17,760 --> 00:16:20,339
have to prove

334
00:16:20,339 --> 00:16:23,220
three main uh bad events so we have to

335
00:16:23,220 --> 00:16:25,199
prove that symmetrical and I don't

336
00:16:25,199 --> 00:16:26,519
happens

337
00:16:26,519 --> 00:16:28,440
that's fine that's easy we just did it

338
00:16:28,440 --> 00:16:29,820
together

339
00:16:29,820 --> 00:16:32,100
then we prove that for any two messages

340
00:16:32,100 --> 00:16:34,500
it never flips the upper part never

341
00:16:34,500 --> 00:16:36,180
become the robot but at the same time

342
00:16:36,180 --> 00:16:38,160
that the robot becomes your purpose so

343
00:16:38,160 --> 00:16:39,540
that's that will lead to attack

344
00:16:39,540 --> 00:16:40,920
Collision

345
00:16:40,920 --> 00:16:43,620
so we also did together the equation as

346
00:16:43,620 --> 00:16:45,420
a ranked two so it's two and bit

347
00:16:45,420 --> 00:16:47,040
condition never happens

348
00:16:47,040 --> 00:16:49,320
and then you have the the the condition

349
00:16:49,320 --> 00:16:51,540
find is free message so

350
00:16:51,540 --> 00:16:54,720
for for one message the sigma path

351
00:16:54,720 --> 00:16:56,519
appears somewhere and around about up

352
00:16:56,519 --> 00:16:58,320
here someone else

353
00:16:58,320 --> 00:17:00,360
this uh this doesn't lead to an attack

354
00:17:00,360 --> 00:17:04,199
but uh but uh it makes the proof easy if

355
00:17:04,199 --> 00:17:07,079
this never happens and this is uh this

356
00:17:07,079 --> 00:17:09,540
is a rank uh two equations so that's

357
00:17:09,540 --> 00:17:12,240
also a 2N bit condition

358
00:17:12,240 --> 00:17:14,760
that's also a twin bit condition but on

359
00:17:14,760 --> 00:17:17,099
strippers so that's where our bond comes

360
00:17:17,099 --> 00:17:18,480
from so you have q to the three

361
00:17:18,480 --> 00:17:19,740
strippers

362
00:17:19,740 --> 00:17:22,500
divided by 2 to the two n uh that's two

363
00:17:22,500 --> 00:17:24,000
and bit condition

364
00:17:24,000 --> 00:17:28,199
so that's it in conclusion we I showed

365
00:17:28,199 --> 00:17:30,120
you how to build the two key and single

366
00:17:30,120 --> 00:17:32,760
key version of 3kf9 that retains

367
00:17:32,760 --> 00:17:35,100
security B on the bus label

368
00:17:35,100 --> 00:17:38,700
and uh that's uh totally possible

369
00:17:38,700 --> 00:17:40,559
candidates for lightweight Mark going

370
00:17:40,559 --> 00:17:41,580
forward

371
00:17:41,580 --> 00:17:42,740
thank you

372
00:17:42,740 --> 00:17:46,089
[Applause]

373
00:17:52,740 --> 00:17:55,160
foreign

374
00:17:55,160 --> 00:17:58,080
in the meantime I have a question can

375
00:17:58,080 --> 00:18:01,880
you go back to the one key version 1K

376
00:18:01,880 --> 00:18:04,220
n1k F9

377
00:18:04,220 --> 00:18:07,460
uh yes

378
00:18:10,679 --> 00:18:12,960
some yeah

379
00:18:12,960 --> 00:18:16,860
um so the last two the upper one

380
00:18:16,860 --> 00:18:19,020
is that really necessary because it's

381
00:18:19,020 --> 00:18:21,720
like CBC Mac with the last block zero

382
00:18:21,720 --> 00:18:24,140
right so

383
00:18:24,140 --> 00:18:27,980
so is it necessary

384
00:18:28,860 --> 00:18:30,918
um

385
00:18:31,679 --> 00:18:33,980
probably

386
00:18:33,980 --> 00:18:37,559
I didn't you didn't check it okay I

387
00:18:37,559 --> 00:18:41,160
didn't check it but uh but it's

388
00:18:41,160 --> 00:18:42,840
probably necessary

389
00:18:42,840 --> 00:18:45,960
you have to redo all the equation

390
00:18:45,960 --> 00:18:47,350
but uh

391
00:18:47,350 --> 00:18:50,590
[Music]

392
00:18:50,880 --> 00:18:52,559
is basically what introduced the

393
00:18:52,559 --> 00:18:54,480
difference between the the upper and

394
00:18:54,480 --> 00:18:56,640
lower but and you want to use the the

395
00:18:56,640 --> 00:18:59,580
the the how you finish the proof is

396
00:18:59,580 --> 00:19:01,559
we're using this kind of mirror Theory

397
00:19:01,559 --> 00:19:05,160
right you just have two two same

398
00:19:05,160 --> 00:19:07,380
the same permutation and you should

399
00:19:07,380 --> 00:19:09,059
remove that you will have to use it

400
00:19:09,059 --> 00:19:10,740
using a

401
00:19:10,740 --> 00:19:15,120
using the the previous black cycle

402
00:19:15,120 --> 00:19:18,120
and that might become tricky because the

403
00:19:18,120 --> 00:19:21,439
adversary can choose M2

404
00:19:21,480 --> 00:19:24,179
and I'm not sure it will translate in

405
00:19:24,179 --> 00:19:26,460
the proof but intuitively wouldn't it be

406
00:19:26,460 --> 00:19:28,740
like so the lower part does not change

407
00:19:28,740 --> 00:19:31,380
and the upper part now is not the mark

408
00:19:31,380 --> 00:19:35,220
of M but it's the Mac of M appended with

409
00:19:35,220 --> 00:19:36,419
zeros

410
00:19:36,419 --> 00:19:37,679
yeah

411
00:19:37,679 --> 00:19:40,740
and you explore the two

412
00:19:40,740 --> 00:19:42,780
yeah yeah no that's a good question

413
00:19:42,780 --> 00:19:44,880
that's was something else but you have

414
00:19:44,880 --> 00:19:46,799
to be careful as because the anniversary

415
00:19:46,799 --> 00:19:47,760
kind of

416
00:19:47,760 --> 00:19:51,780
control what goes in the

417
00:19:51,780 --> 00:19:55,080
so so so so I wanna know right off the

418
00:19:55,080 --> 00:19:57,780
bat how this translates to our questions

419
00:19:57,780 --> 00:19:58,860
thank you

420
00:19:58,860 --> 00:20:01,459
any more questions

421
00:20:02,880 --> 00:20:06,260
any questions from Zoom

422
00:20:13,260 --> 00:20:14,820
if not then let's thank the speaker

423
00:20:14,820 --> 00:20:17,400
again

424
00:20:17,400 --> 00:20:20,400
foreign

425
00:20:55,919 --> 00:20:59,820
not our next talk is jamming on the deck

426
00:20:59,820 --> 00:21:01,580
by

427
00:21:01,580 --> 00:21:06,440
norika virtual Yeti Johan demin uhofert

428
00:21:06,440 --> 00:21:11,039
gilvanash Ronnie vancier and gervanash

429
00:21:11,039 --> 00:21:13,640
will give the talk

430
00:21:14,039 --> 00:21:16,020
okay good morning everyone thanks for

431
00:21:16,020 --> 00:21:17,400
the introduction

432
00:21:17,400 --> 00:21:20,640
so um I will give a couple of words

433
00:21:20,640 --> 00:21:22,440
about the title because it might look

434
00:21:22,440 --> 00:21:25,260
like a bit of a mystery so in our paper

435
00:21:25,260 --> 00:21:28,380
we have two contributions one is the

436
00:21:28,380 --> 00:21:30,600
jamming Cipher and the other one is the

437
00:21:30,600 --> 00:21:32,760
deck function so the title kind of

438
00:21:32,760 --> 00:21:34,140
combines the two

439
00:21:34,140 --> 00:21:36,600
but in this presentation due to lack of

440
00:21:36,600 --> 00:21:38,280
time I will focus more on Deck functions

441
00:21:38,280 --> 00:21:41,280
than on the jamming Cipher

442
00:21:41,280 --> 00:21:42,960
okay that's the outline of the

443
00:21:42,960 --> 00:21:44,100
presentation I will give you an

444
00:21:44,100 --> 00:21:45,780
introduction talking about Primitives

445
00:21:45,780 --> 00:21:48,659
and and modes in symmetric crypto then

446
00:21:48,659 --> 00:21:50,880
introduce deck functions talk about

447
00:21:50,880 --> 00:21:52,679
modes of operations on top of deck

448
00:21:52,679 --> 00:21:54,720
functions and give some words about the

449
00:21:54,720 --> 00:21:57,500
Channing Cipher

450
00:21:58,080 --> 00:21:59,580
Okay so

451
00:21:59,580 --> 00:22:02,820
in um in symmetric crypto many of the

452
00:22:02,820 --> 00:22:05,700
schemes that we use today are

453
00:22:05,700 --> 00:22:08,280
um using a combination of a primitive

454
00:22:08,280 --> 00:22:11,039
and a mode of operation on top of it

455
00:22:11,039 --> 00:22:13,620
so this picture really

456
00:22:13,620 --> 00:22:15,900
um illustrate this so that's

457
00:22:15,900 --> 00:22:17,820
um we have the sea level that defines

458
00:22:17,820 --> 00:22:19,320
the interface between the mode and the

459
00:22:19,320 --> 00:22:21,780
Primitive so above you have the modes

460
00:22:21,780 --> 00:22:24,539
below you have The Primitives and yeah

461
00:22:24,539 --> 00:22:27,480
what I mean with Primitives is objects

462
00:22:27,480 --> 00:22:29,340
for which you cannot prove the security

463
00:22:29,340 --> 00:22:32,220
you only have the only other way to to

464
00:22:32,220 --> 00:22:34,200
have trust in primitive is by having

465
00:22:34,200 --> 00:22:36,179
third-party cryptoencies so by

466
00:22:36,179 --> 00:22:38,159
Primitives I mean permutations block

467
00:22:38,159 --> 00:22:40,320
ciphers tweakable block ciphers

468
00:22:40,320 --> 00:22:43,559
keystream generators and so on

469
00:22:43,559 --> 00:22:46,980
so we have people working above the sea

470
00:22:46,980 --> 00:22:49,200
level at this designing mode proving the

471
00:22:49,200 --> 00:22:51,960
security of mode proving bounds on these

472
00:22:51,960 --> 00:22:54,059
modes and then we have cryptographers

473
00:22:54,059 --> 00:22:55,140
working

474
00:22:55,140 --> 00:22:57,780
below the the sea level designing

475
00:22:57,780 --> 00:23:00,539
Primitives and doing crypto analysis to

476
00:23:00,539 --> 00:23:03,480
make sure that they are secure

477
00:23:03,480 --> 00:23:05,700
um so it's a nice picture but there are

478
00:23:05,700 --> 00:23:07,860
some cases some ad hoc constructions

479
00:23:07,860 --> 00:23:10,919
that kind of disturb this nice picture

480
00:23:10,919 --> 00:23:12,480
um so there are ad-hoc constructions

481
00:23:12,480 --> 00:23:14,880
that are not made of the combination of

482
00:23:14,880 --> 00:23:20,900
a primitive and a mode on top of it

483
00:23:21,299 --> 00:23:24,360
um so yeah what I'm

484
00:23:24,360 --> 00:23:26,280
allowed to illustrate is that some of

485
00:23:26,280 --> 00:23:27,360
these

486
00:23:27,360 --> 00:23:29,760
um or at least I think many of these

487
00:23:29,760 --> 00:23:33,360
other constructions actually are so they

488
00:23:33,360 --> 00:23:36,240
require their kryptonesis on their own

489
00:23:36,240 --> 00:23:38,580
that's one thing and the other thing is

490
00:23:38,580 --> 00:23:43,020
that they usually address variable input

491
00:23:43,020 --> 00:23:45,179
length or variable output length so

492
00:23:45,179 --> 00:23:48,600
stream ciphers uh one example of such a

493
00:23:48,600 --> 00:23:51,480
thing there are other examples

494
00:23:51,480 --> 00:23:53,880
so for instance the Pelican Mac function

495
00:23:53,880 --> 00:23:56,760
that was defined by Diamond Raymond so

496
00:23:56,760 --> 00:23:59,039
it uses so it's a Mac function it uses

497
00:23:59,039 --> 00:24:01,260
the full as black Cipher at the

498
00:24:01,260 --> 00:24:03,360
beginning and at the end but in between

499
00:24:03,360 --> 00:24:06,360
it only uses four rounds of idle

500
00:24:06,360 --> 00:24:09,299
so you cannot code for rounds of Randall

501
00:24:09,299 --> 00:24:13,620
an ideal component but globally this

502
00:24:13,620 --> 00:24:16,320
gives a Mac that is up to now up to the

503
00:24:16,320 --> 00:24:20,340
claim security and it's 2.5 times faster

504
00:24:20,340 --> 00:24:23,280
than CMAC for instance

505
00:24:23,280 --> 00:24:23,820
um

506
00:24:23,820 --> 00:24:26,340
another example is the monkey duplex

507
00:24:26,340 --> 00:24:29,159
construction a variant of it is used by

508
00:24:29,159 --> 00:24:32,100
ascon for instance and there so it uses

509
00:24:32,100 --> 00:24:34,320
permutations but as you can see the

510
00:24:34,320 --> 00:24:36,960
numbers and init and duplex below the

511
00:24:36,960 --> 00:24:39,539
F's all the number of rounds so the the

512
00:24:39,539 --> 00:24:41,520
number of rounds are specified at this

513
00:24:41,520 --> 00:24:44,159
level so Krypt analysis again has to be

514
00:24:44,159 --> 00:24:45,780
done at the level of the whole function

515
00:24:45,780 --> 00:24:49,559
and not at uh component level

516
00:24:49,559 --> 00:24:52,320
and one one last example is the farfalli

517
00:24:52,320 --> 00:24:53,760
construction that we proposed a few

518
00:24:53,760 --> 00:24:57,780
years ago and so this builds a prf and

519
00:24:57,780 --> 00:25:01,080
using this prf is built using a light

520
00:25:01,080 --> 00:25:03,840
weight permutation so F is for instance

521
00:25:03,840 --> 00:25:05,640
six rounds of the kachaka fermentation

522
00:25:05,640 --> 00:25:07,380
or six rounds of the pseudo permutation

523
00:25:07,380 --> 00:25:10,620
which again cannot be called an ideal

524
00:25:10,620 --> 00:25:12,780
permutation but nevertheless the Global

525
00:25:12,780 --> 00:25:17,100
Construction is is a secure as a whole

526
00:25:17,100 --> 00:25:20,400
so okay we there are two ways out of

527
00:25:20,400 --> 00:25:22,320
this so either we could just ignore this

528
00:25:22,320 --> 00:25:25,380
this uh constructions and let let

529
00:25:25,380 --> 00:25:29,340
they remain ad hoc or we can try to to

530
00:25:29,340 --> 00:25:31,260
to take things differently and say yeah

531
00:25:31,260 --> 00:25:33,480
what about let's explore the possibility

532
00:25:33,480 --> 00:25:35,760
that we Define a new kind of primitive

533
00:25:35,760 --> 00:25:38,460
to to put all these Primitives under the

534
00:25:38,460 --> 00:25:40,860
same Hood let's say and see what happens

535
00:25:40,860 --> 00:25:44,779
and that's the goal of this presentation

536
00:25:45,779 --> 00:25:48,059
that I said Okay so

537
00:25:48,059 --> 00:25:49,919
I'm going to introduce deck function

538
00:25:49,919 --> 00:25:51,720
that's the new kind of Primitives that I

539
00:25:51,720 --> 00:25:53,880
would like to to Define

540
00:25:53,880 --> 00:25:54,600
um

541
00:25:54,600 --> 00:25:57,419
so a deck function stands for doubly

542
00:25:57,419 --> 00:25:59,940
extendable cryptographic kit function so

543
00:25:59,940 --> 00:26:02,700
it's a function that takes as input a

544
00:26:02,700 --> 00:26:05,640
secret key K and then a sequence of

545
00:26:05,640 --> 00:26:07,440
strings so it's not just one string but

546
00:26:07,440 --> 00:26:11,279
a sequence of M strings X1 X2 up to XM

547
00:26:11,279 --> 00:26:13,020
and it's um

548
00:26:13,020 --> 00:26:15,659
so I said it's a it's a prf so it's

549
00:26:15,659 --> 00:26:18,480
going to Output random looking bits and

550
00:26:18,480 --> 00:26:21,260
potentially an infinite uh sequence of

551
00:26:21,260 --> 00:26:23,580
random looking bits

552
00:26:23,580 --> 00:26:26,159
the the notation might be a bit tricky

553
00:26:26,159 --> 00:26:30,419
but so so F K of X1 to XM is an infinite

554
00:26:30,419 --> 00:26:32,700
string but I take as a convention that

555
00:26:32,700 --> 00:26:36,299
at two bitwise two strings together we

556
00:26:36,299 --> 00:26:38,100
take the shortest one as the length of

557
00:26:38,100 --> 00:26:40,080
the output so

558
00:26:40,080 --> 00:26:43,740
um o n the um unbeats all zero string

559
00:26:43,740 --> 00:26:47,220
plus FK of n f k of x 1 to XM gives you

560
00:26:47,220 --> 00:26:49,500
a string of n Bits And Then There is

561
00:26:49,500 --> 00:26:52,020
this shift by Q positions which really

562
00:26:52,020 --> 00:26:54,120
means that we take the output bits

563
00:26:54,120 --> 00:26:57,320
starting from the offset Q

564
00:26:57,360 --> 00:27:00,299
okay so it's doubly extendable so what

565
00:27:00,299 --> 00:27:02,400
I'm also requiring for from a deck

566
00:27:02,400 --> 00:27:04,860
function is that it's efficiently

567
00:27:04,860 --> 00:27:07,500
incrementable both at the input and at

568
00:27:07,500 --> 00:27:09,659
the output so for the input it means

569
00:27:09,659 --> 00:27:12,539
that if I first compute FK of X so one

570
00:27:12,539 --> 00:27:14,460
just one string in in my sequence of

571
00:27:14,460 --> 00:27:17,580
strings and I keep some State then the

572
00:27:17,580 --> 00:27:19,140
next time I need to to compute something

573
00:27:19,140 --> 00:27:21,360
the next time I need to compute FK of X

574
00:27:21,360 --> 00:27:24,360
followed by y so I will pay only the

575
00:27:24,360 --> 00:27:27,000
cost of processing y okay so I don't

576
00:27:27,000 --> 00:27:29,820
need to process X again at the condition

577
00:27:29,820 --> 00:27:31,260
of course that I kept some State

578
00:27:31,260 --> 00:27:34,919
information after completing FK of x

579
00:27:34,919 --> 00:27:36,659
and the same thing goes for the output

580
00:27:36,659 --> 00:27:39,659
if I request N1 bits and then if I need

581
00:27:39,659 --> 00:27:42,539
some more I can just restart from there

582
00:27:42,539 --> 00:27:44,640
because I need to keep state but then I

583
00:27:44,640 --> 00:27:47,360
I can get more bits without

584
00:27:47,360 --> 00:27:51,240
Computing all the first N1 bits again

585
00:27:51,240 --> 00:27:53,159
so I would like to stress that I'm not

586
00:27:53,159 --> 00:27:55,500
defining a new construction uh like

587
00:27:55,500 --> 00:27:57,960
sponge off of Friday I'm just specifying

588
00:27:57,960 --> 00:28:01,200
a new type of objects so really a set of

589
00:28:01,200 --> 00:28:03,720
requirements so functional requirements

590
00:28:03,720 --> 00:28:05,760
what this function does what kind of

591
00:28:05,760 --> 00:28:08,520
input it has security requirements it

592
00:28:08,520 --> 00:28:10,559
must be a prf and then some efficiency

593
00:28:10,559 --> 00:28:12,419
requirements this efficient

594
00:28:12,419 --> 00:28:13,919
incrementality

595
00:28:13,919 --> 00:28:16,080
and now the question is yeah that's nice

596
00:28:16,080 --> 00:28:18,539
but what can we do with such uh such a

597
00:28:18,539 --> 00:28:20,960
new object

598
00:28:21,059 --> 00:28:23,340
okay so there are some trigger examples

599
00:28:23,340 --> 00:28:25,080
it can be used as a stream Cipher you

600
00:28:25,080 --> 00:28:27,840
just input the nuns so the deck function

601
00:28:27,840 --> 00:28:29,700
and you use the output as a keystream

602
00:28:29,700 --> 00:28:32,340
and can be used as a Mac you input the

603
00:28:32,340 --> 00:28:35,279
plain text and you take the output as

604
00:28:35,279 --> 00:28:36,720
the Knight

605
00:28:36,720 --> 00:28:38,940
but there are of course more advanced

606
00:28:38,940 --> 00:28:40,919
modes so I would like to describe some

607
00:28:40,919 --> 00:28:43,020
authenticate encryption modes

608
00:28:43,020 --> 00:28:45,120
we'll describe five of them with

609
00:28:45,120 --> 00:28:47,520
different sets of properties so deck

610
00:28:47,520 --> 00:28:50,039
plane and then four different ones I

611
00:28:50,039 --> 00:28:51,600
will just start with the the simplest

612
00:28:51,600 --> 00:28:53,940
one to explain

613
00:28:53,940 --> 00:28:58,020
okay so um deck plane the purpose of

614
00:28:58,020 --> 00:29:00,720
deck plane is to do first simple

615
00:29:00,720 --> 00:29:03,299
non-based authenticated encryption so to

616
00:29:03,299 --> 00:29:05,400
encrypt uh what I mean with the message

617
00:29:05,400 --> 00:29:08,279
is a pair associate data and blend text

618
00:29:08,279 --> 00:29:11,039
but it can also support sessions and by

619
00:29:11,039 --> 00:29:13,620
sessions I mean

620
00:29:13,620 --> 00:29:14,220
um

621
00:29:14,220 --> 00:29:16,740
that I could continue

622
00:29:16,740 --> 00:29:19,440
um encrypting and authenticating further

623
00:29:19,440 --> 00:29:22,020
messaging and by keeping state every

624
00:29:22,020 --> 00:29:23,460
time I authenticate something I

625
00:29:23,460 --> 00:29:25,020
authenticate everything that I've

626
00:29:25,020 --> 00:29:27,539
received or sent so far so let's start

627
00:29:27,539 --> 00:29:30,539
with just one message through a pair of

628
00:29:30,539 --> 00:29:33,600
associate data A1 and play text M1 P1

629
00:29:33,600 --> 00:29:35,039
sorry

630
00:29:35,039 --> 00:29:37,559
um first go to the deck function I take

631
00:29:37,559 --> 00:29:40,440
A1 as the input string followed by one

632
00:29:40,440 --> 00:29:42,960
zero for domain separation and this

633
00:29:42,960 --> 00:29:45,960
gives me some key stream that I add to

634
00:29:45,960 --> 00:29:49,260
P1 and I get Z1 the encrypted plain text

635
00:29:49,260 --> 00:29:52,520
then at the next step

636
00:29:52,520 --> 00:29:56,940
I call FK again with A1 again but I

637
00:29:56,940 --> 00:29:58,020
don't need to pay for this anymore

638
00:29:58,020 --> 00:30:00,960
because it's already done and I just add

639
00:30:00,960 --> 00:30:03,299
to that Z1 followed by one for domain

640
00:30:03,299 --> 00:30:05,640
separation and the result I use at the

641
00:30:05,640 --> 00:30:06,419
tank

642
00:30:06,419 --> 00:30:09,240
so the concatenation of Z1 and T1 gives

643
00:30:09,240 --> 00:30:11,340
me my my science

644
00:30:11,340 --> 00:30:13,559
so it's simple non-based uh

645
00:30:13,559 --> 00:30:15,539
authentication encryption of course A1

646
00:30:15,539 --> 00:30:17,520
must be announced otherwise the security

647
00:30:17,520 --> 00:30:18,860
breaks down

648
00:30:18,860 --> 00:30:22,380
but the thing is that I can continue I

649
00:30:22,380 --> 00:30:24,480
can I can encrypt further messages so

650
00:30:24,480 --> 00:30:26,580
let's say that the second message is

651
00:30:26,580 --> 00:30:28,860
made only of plain text P2 and no

652
00:30:28,860 --> 00:30:30,960
Associated data

653
00:30:30,960 --> 00:30:33,059
um then like what they can specifies is

654
00:30:33,059 --> 00:30:37,620
that I need to input A110 and z11 again

655
00:30:37,620 --> 00:30:39,840
but I will skip the first two bits

656
00:30:39,840 --> 00:30:41,760
because I use them already in the

657
00:30:41,760 --> 00:30:44,880
previous iteration and I would just use

658
00:30:44,880 --> 00:30:47,279
the next next bits asci stream to

659
00:30:47,279 --> 00:30:50,220
encrypt P2 and then I open to the

660
00:30:50,220 --> 00:30:53,580
sequence of input strings I open Z1 Z2

661
00:30:53,580 --> 00:30:56,159
sorry to get the tag and I get my sign

662
00:30:56,159 --> 00:30:58,320
for texted to T2

663
00:30:58,320 --> 00:31:00,480
uh let's say that I get a third message

664
00:31:00,480 --> 00:31:03,059
just made of associate data no plain

665
00:31:03,059 --> 00:31:04,679
text so that could be just a

666
00:31:04,679 --> 00:31:07,320
confirmation okay and I want to have a

667
00:31:07,320 --> 00:31:10,200
tag on the whole thing and then so the

668
00:31:10,200 --> 00:31:12,000
deck function input will be everything

669
00:31:12,000 --> 00:31:15,899
so far with H3 followed by zero zero and

670
00:31:15,899 --> 00:31:17,640
that gives me my tag

671
00:31:17,640 --> 00:31:20,520
so this deck plane also I wish to say

672
00:31:20,520 --> 00:31:22,860
that it works as by by bi-directional

673
00:31:22,860 --> 00:31:25,500
communication so we could also say take

674
00:31:25,500 --> 00:31:27,779
as a convention that every other message

675
00:31:27,779 --> 00:31:29,940
is sent in in a different direction so

676
00:31:29,940 --> 00:31:31,980
the first message might be sent from

677
00:31:31,980 --> 00:31:33,899
Alice to Bob then the second one from

678
00:31:33,899 --> 00:31:36,059
bug to Alice and the third one from

679
00:31:36,059 --> 00:31:40,340
again from Alice to bug and that works

680
00:31:40,799 --> 00:31:43,440
okay so it's none's based

681
00:31:43,440 --> 00:31:45,720
um do we have other modes that are maybe

682
00:31:45,720 --> 00:31:48,600
more robust and that's the purpose of

683
00:31:48,600 --> 00:31:51,360
these foremost deck Jamboree so we look

684
00:31:51,360 --> 00:31:53,399
at these four modes from the point of

685
00:31:53,399 --> 00:31:55,919
view of faster Networks

686
00:31:55,919 --> 00:31:57,960
so um there are four modes and it

687
00:31:57,960 --> 00:31:58,919
depends

688
00:31:58,919 --> 00:32:01,140
the four modes tell you which rounds of

689
00:32:01,140 --> 00:32:02,760
this files and network are used on that

690
00:32:02,760 --> 00:32:04,740
so the the middle part the middle two

691
00:32:04,740 --> 00:32:06,480
rounds that's both that's always present

692
00:32:06,480 --> 00:32:08,820
for the four options but then you can

693
00:32:08,820 --> 00:32:12,960
add one on the top or not and one on the

694
00:32:12,960 --> 00:32:15,179
bottom or not so if you have jam it

695
00:32:15,179 --> 00:32:16,980
means you have the first round otherwise

696
00:32:16,980 --> 00:32:19,140
you don't have if you have re at the end

697
00:32:19,140 --> 00:32:20,340
you have the last round otherwise you

698
00:32:20,340 --> 00:32:21,720
don't have it

699
00:32:21,720 --> 00:32:25,020
okay so let's start with the easiest one

700
00:32:25,020 --> 00:32:26,760
so deck bow

701
00:32:26,760 --> 00:32:29,039
so with degbo

702
00:32:29,039 --> 00:32:31,140
um we have just two rounds and what we

703
00:32:31,140 --> 00:32:33,779
do is on the left side of the Firestone

704
00:32:33,779 --> 00:32:36,539
Network we just put T bits equal to zero

705
00:32:36,539 --> 00:32:38,520
and the right hand side we put the plain

706
00:32:38,520 --> 00:32:39,480
text

707
00:32:39,480 --> 00:32:42,120
so the first iteration I go with the

708
00:32:42,120 --> 00:32:43,919
plain text inside the faster Network

709
00:32:43,919 --> 00:32:46,679
that gives me a tag and then at the next

710
00:32:46,679 --> 00:32:49,260
iteration I use this tag in the second

711
00:32:49,260 --> 00:32:51,539
call to the deck function the output is

712
00:32:51,539 --> 00:32:53,640
some keystream to encrypt that so you

713
00:32:53,640 --> 00:32:55,860
have probably recognized the SIV mode

714
00:32:55,860 --> 00:32:57,779
which was expressed as a faster Network

715
00:32:57,779 --> 00:33:00,899
so deck bow is essentially the SIV mode

716
00:33:00,899 --> 00:33:03,419
with the support of sessions so I don't

717
00:33:03,419 --> 00:33:06,360
explicitly make the support of session

718
00:33:06,360 --> 00:33:08,640
on on the slide but if you read the

719
00:33:08,640 --> 00:33:10,200
paper you will find all the details how

720
00:33:10,200 --> 00:33:13,740
to to have the full sessions report

721
00:33:13,740 --> 00:33:16,380
okay so that's good but um

722
00:33:16,380 --> 00:33:20,039
this mode can can be made more robust by

723
00:33:20,039 --> 00:33:23,039
also making sure that it's resistant

724
00:33:23,039 --> 00:33:25,019
against the release of unverified plain

725
00:33:25,019 --> 00:33:27,360
text so let's let's assume that an

726
00:33:27,360 --> 00:33:29,880
adversary can can get unverified plain

727
00:33:29,880 --> 00:33:32,539
text and it can then control the value V

728
00:33:32,539 --> 00:33:37,080
and then get some some random ciphertext

729
00:33:37,080 --> 00:33:40,140
decrypted and then by xorring P and Z

730
00:33:40,140 --> 00:33:43,679
you can get the key stream for any any

731
00:33:43,679 --> 00:33:46,559
tag you want so you can do a he's from

732
00:33:46,559 --> 00:33:50,039
harvesting So to avoid this attack we

733
00:33:50,039 --> 00:33:52,140
just add one round to the re rounds we

734
00:33:52,140 --> 00:33:54,779
get deck Berry and the last round what

735
00:33:54,779 --> 00:33:56,279
it's going to do is just to Blind this

736
00:33:56,279 --> 00:33:58,260
stack so that this attack

737
00:33:58,260 --> 00:34:00,299
um is not working anymore so keystream

738
00:34:00,299 --> 00:34:02,700
alphabetic is not possible anymore and

739
00:34:02,700 --> 00:34:04,740
you might have recognized the Riff mode

740
00:34:04,740 --> 00:34:07,620
but so deckberry is accessing the rift

741
00:34:07,620 --> 00:34:10,619
mode plus session two

742
00:34:10,619 --> 00:34:13,379
okay so we can further improve this mode

743
00:34:13,379 --> 00:34:16,500
and the the side problem we have now is

744
00:34:16,500 --> 00:34:18,780
that on the left Branch we must have t

745
00:34:18,780 --> 00:34:21,719
bits and these t-bits T must be high

746
00:34:21,719 --> 00:34:23,520
enough to avoid Collision so typically

747
00:34:23,520 --> 00:34:26,280
if you want to have 128 bits of security

748
00:34:26,280 --> 00:34:29,520
you need T to be 256 bits so you need to

749
00:34:29,520 --> 00:34:32,580
add your size or text expansion is 256

750
00:34:32,580 --> 00:34:35,159
bits can we reduce this so the answer is

751
00:34:35,159 --> 00:34:38,339
yes we add one more round so that now we

752
00:34:38,339 --> 00:34:40,080
have the full Jamboree

753
00:34:40,080 --> 00:34:42,239
and what we can do now with with this

754
00:34:42,239 --> 00:34:45,540
extra round is we can spread the plain

755
00:34:45,540 --> 00:34:48,300
text on both branches of the fashion

756
00:34:48,300 --> 00:34:50,760
Network so we have OT and then some some

757
00:34:50,760 --> 00:34:52,260
bits of the plain text on the left side

758
00:34:52,260 --> 00:34:54,540
and then pilas and some budding on the

759
00:34:54,540 --> 00:34:56,399
right hand side

760
00:34:56,399 --> 00:34:57,180
um

761
00:34:57,180 --> 00:34:59,160
of course we still need to to avoid

762
00:34:59,160 --> 00:35:01,440
collisions on the both branches

763
00:35:01,440 --> 00:35:04,080
but we have some some room for plain

764
00:35:04,080 --> 00:35:06,420
text so it means that this T now can be

765
00:35:06,420 --> 00:35:09,180
just the security level so if I need 128

766
00:35:09,180 --> 00:35:13,500
bits of security T can be 128 bits so I

767
00:35:13,500 --> 00:35:15,480
reduced my expansion

768
00:35:15,480 --> 00:35:17,520
so what the first round does really is

769
00:35:17,520 --> 00:35:19,740
to produce a value y that is

770
00:35:19,740 --> 00:35:22,140
representative of the plain text so not

771
00:35:22,140 --> 00:35:24,180
knowing the key it's difficult to find

772
00:35:24,180 --> 00:35:28,140
collisions in y so the rest of the the

773
00:35:28,140 --> 00:35:31,260
faster network was as before except that

774
00:35:31,260 --> 00:35:33,119
what was the plain text before now this

775
00:35:33,119 --> 00:35:37,079
plain text representative why

776
00:35:37,079 --> 00:35:40,440
and now to finish the the tour of the

777
00:35:40,440 --> 00:35:42,119
four different modes I'm now removing

778
00:35:42,119 --> 00:35:45,540
the last one so I've duck Jambo and with

779
00:35:45,540 --> 00:35:47,700
deck Jambo I have something that that is

780
00:35:47,700 --> 00:35:52,140
like SIV but so with optimal redundancy

781
00:35:52,140 --> 00:35:55,440
so it's slightly better than SIV but I

782
00:35:55,440 --> 00:35:57,119
since I removed the last round I don't

783
00:35:57,119 --> 00:36:00,060
have resistance against uh underified

784
00:36:00,060 --> 00:36:02,099
paint text anymore

785
00:36:02,099 --> 00:36:04,400
okay so that gives me four different

786
00:36:04,400 --> 00:36:08,099
modes five if you include the plane in

787
00:36:08,099 --> 00:36:10,440
the paper we prove that they are all

788
00:36:10,440 --> 00:36:13,440
secure but yes they are secure under

789
00:36:13,440 --> 00:36:15,540
which model that's the

790
00:36:15,540 --> 00:36:19,079
that's the topic of the jamming Cipher

791
00:36:19,079 --> 00:36:21,119
so

792
00:36:21,119 --> 00:36:24,660
we really wanted to have some modes that

793
00:36:24,660 --> 00:36:25,440
um

794
00:36:25,440 --> 00:36:27,540
yeah that supports this concept of

795
00:36:27,540 --> 00:36:28,500
sessions

796
00:36:28,500 --> 00:36:30,540
and the model that was the closest to

797
00:36:30,540 --> 00:36:34,920
this idea is the oae 2 model

798
00:36:34,920 --> 00:36:37,740
um but yeah the slight Pro the side

799
00:36:37,740 --> 00:36:40,980
thing we had with uh oee 2 is that it

800
00:36:40,980 --> 00:36:43,380
actually defines different flavors of

801
00:36:43,380 --> 00:36:47,220
oe2 you have oe2 a b c and then oe two

802
00:36:47,220 --> 00:36:48,960
doe two

803
00:36:48,960 --> 00:36:51,000
and that was a bit difficult for us to

804
00:36:51,000 --> 00:36:54,000
uh I mean to treat all that so we

805
00:36:54,000 --> 00:36:56,460
decided to to define a new model and

806
00:36:56,460 --> 00:36:58,740
that's the jamming Cipher

807
00:36:58,740 --> 00:37:00,540
um so we wanted to have something that

808
00:37:00,540 --> 00:37:02,700
is both operational and referential in

809
00:37:02,700 --> 00:37:04,640
oa2 you have some modes that

810
00:37:04,640 --> 00:37:07,500
are meant for game playing and others

811
00:37:07,500 --> 00:37:11,339
are meant for uh modeling um something

812
00:37:11,339 --> 00:37:13,140
at the higher level

813
00:37:13,140 --> 00:37:15,780
uh we wanted to have a single model for

814
00:37:15,780 --> 00:37:17,579
both nonsense forcing and non-smicured

815
00:37:17,579 --> 00:37:20,280
resistance modes uh of course sessions

816
00:37:20,280 --> 00:37:23,060
by Direction and Communications

817
00:37:23,060 --> 00:37:25,859
parameters parameterized sexual

818
00:37:25,859 --> 00:37:28,460
expansion MLT key support and the result

819
00:37:28,460 --> 00:37:31,020
is the jamming Cipher so I'm not giving

820
00:37:31,020 --> 00:37:33,480
the details please go to the paper to

821
00:37:33,480 --> 00:37:35,160
have all the details but essentially

822
00:37:35,160 --> 00:37:37,200
it's similar to a pseudo-random

823
00:37:37,200 --> 00:37:39,720
injection model but with the support of

824
00:37:39,720 --> 00:37:42,259
sessions

825
00:37:42,900 --> 00:37:47,040
um we've we show that is close to early

826
00:37:47,040 --> 00:37:49,440
um by proving this theorem so the

827
00:37:49,440 --> 00:37:51,900
jamming Cipher can can in in one model

828
00:37:51,900 --> 00:37:54,780
you can you can kind of replace all the

829
00:37:54,780 --> 00:37:57,660
different flavors of a week too uh with

830
00:37:57,660 --> 00:38:00,259
just this one

831
00:38:00,420 --> 00:38:02,280
um so that brings me to the conclusion

832
00:38:02,280 --> 00:38:03,540
so

833
00:38:03,540 --> 00:38:05,640
um I spoke about deck functions and I

834
00:38:05,640 --> 00:38:06,720
think

835
00:38:06,720 --> 00:38:09,300
um it's it's a nice new kind of of

836
00:38:09,300 --> 00:38:12,720
primitive that allows you to what I

837
00:38:12,720 --> 00:38:14,339
think there are two advantages one

838
00:38:14,339 --> 00:38:17,160
advantage is that by including variable

839
00:38:17,160 --> 00:38:18,660
input lengths and variable output

840
00:38:18,660 --> 00:38:20,700
lengths inside the Primitive you can

841
00:38:20,700 --> 00:38:21,839
have

842
00:38:21,839 --> 00:38:25,320
um most that are simpler to Define of

843
00:38:25,320 --> 00:38:28,680
course it kind of moves the problem down

844
00:38:28,680 --> 00:38:31,079
to the Primitive but at the same time by

845
00:38:31,079 --> 00:38:33,420
allowing to have variable input length

846
00:38:33,420 --> 00:38:34,980
at the Primitive level you can really

847
00:38:34,980 --> 00:38:37,140
put the safety margin where it needs to

848
00:38:37,140 --> 00:38:38,579
be so you can

849
00:38:38,579 --> 00:38:41,820
you you can use maybe reduce around

850
00:38:41,820 --> 00:38:44,400
things inside and so in the end it

851
00:38:44,400 --> 00:38:47,900
allows more efficient transfers

852
00:38:48,240 --> 00:38:50,280
and then the other contribution is the

853
00:38:50,280 --> 00:38:52,800
jamming Cipher which is a simpler model

854
00:38:52,800 --> 00:38:55,079
and it's the model of choice for these

855
00:38:55,079 --> 00:38:57,420
deck deck base modes

856
00:38:57,420 --> 00:38:59,099
that's all I wanted to say thanks for

857
00:38:59,099 --> 00:39:01,400
your attention

858
00:39:09,060 --> 00:39:11,599
questions

859
00:39:15,300 --> 00:39:16,560
hey

860
00:39:16,560 --> 00:39:21,259
so can you go to some slide where Bo

861
00:39:21,480 --> 00:39:26,480
om is to be seen okay

862
00:39:29,400 --> 00:39:32,400
oh okay then maybe damn

863
00:39:32,400 --> 00:39:34,859
sorry jumbo

864
00:39:34,859 --> 00:39:38,760
here so I suppose this branching on the

865
00:39:38,760 --> 00:39:42,780
right side of the x is then xored right

866
00:39:42,780 --> 00:39:44,280
after

867
00:39:44,280 --> 00:39:47,099
yeah um so yeah maybe I didn't mention

868
00:39:47,099 --> 00:39:50,040
but only only the first

869
00:39:50,040 --> 00:39:53,400
few bits of the the right Branch are so

870
00:39:53,400 --> 00:39:56,280
with the output of the deck function and

871
00:39:56,280 --> 00:39:59,640
intuitively why is that needed

872
00:39:59,640 --> 00:40:01,800
um so so what we want to do is to

873
00:40:01,800 --> 00:40:03,420
connect to

874
00:40:03,420 --> 00:40:06,780
so let's take this one in this case Y is

875
00:40:06,780 --> 00:40:08,099
the plain text

876
00:40:08,099 --> 00:40:10,560
so you want to have something that that

877
00:40:10,560 --> 00:40:12,180
on the right hand side is your really

878
00:40:12,180 --> 00:40:13,800
your plain text and you should change

879
00:40:13,800 --> 00:40:15,420
the plain text you go right hand side

880
00:40:15,420 --> 00:40:19,200
branch changes now if you go now here

881
00:40:19,200 --> 00:40:22,440
your plain text is partly on the left on

882
00:40:22,440 --> 00:40:23,339
the right

883
00:40:23,339 --> 00:40:25,440
so you could imagine that yeah someone

884
00:40:25,440 --> 00:40:29,280
changes only uh B first and then the

885
00:40:29,280 --> 00:40:31,079
right Branch would be only P last and

886
00:40:31,079 --> 00:40:33,420
you would get some kind of collision but

887
00:40:33,420 --> 00:40:34,920
you don't get the Collision because P

888
00:40:34,920 --> 00:40:39,240
first goes into this uh first round and

889
00:40:39,240 --> 00:40:42,060
modifies y so if you change P first then

890
00:40:42,060 --> 00:40:44,460
you get a different Y and you if you

891
00:40:44,460 --> 00:40:46,619
change B last of course you also get a

892
00:40:46,619 --> 00:40:48,900
different Y and combining the two you

893
00:40:48,900 --> 00:40:50,579
you cannot do because you don't know the

894
00:40:50,579 --> 00:40:51,960
secret the adversary doesn't know the

895
00:40:51,960 --> 00:40:54,420
secret key so doesn't know what is xored

896
00:40:54,420 --> 00:40:57,000
into X so that's the intuition okay

897
00:40:57,000 --> 00:40:59,960
thanks make sense

898
00:41:01,560 --> 00:41:04,160
foreign

899
00:41:12,060 --> 00:41:14,880
so maybe I have a question as well

900
00:41:14,880 --> 00:41:17,099
um when I first look at your paper I

901
00:41:17,099 --> 00:41:19,200
think I thought that

902
00:41:19,200 --> 00:41:20,880
you could express for example this

903
00:41:20,880 --> 00:41:23,760
construction as a encoder and Cipher

904
00:41:23,760 --> 00:41:25,140
Paradigm you could see it in that way

905
00:41:25,140 --> 00:41:28,260
that you're building first a cipher and

906
00:41:28,260 --> 00:41:30,060
then you're doing some encoding to turn

907
00:41:30,060 --> 00:41:33,060
it into an AED but that

908
00:41:33,060 --> 00:41:36,000
yeah like that feed forward attacks kind

909
00:41:36,000 --> 00:41:37,200
of

910
00:41:37,200 --> 00:41:39,720
seems to disrupt that right or

911
00:41:39,720 --> 00:41:42,359
so yeah we we directly focused on

912
00:41:42,359 --> 00:41:43,980
authenticator encryption we could have

913
00:41:43,980 --> 00:41:46,440
first defined a white block software for

914
00:41:46,440 --> 00:41:47,880
instance and then some

915
00:41:47,880 --> 00:41:50,400
added some encoding some some redundancy

916
00:41:50,400 --> 00:41:53,099
to to do the authentication yeah I think

917
00:41:53,099 --> 00:41:55,740
we could still do it there is no

918
00:41:55,740 --> 00:41:57,300
contradiction it was just that we

919
00:41:57,300 --> 00:42:00,780
focused on on authenticate encryption

920
00:42:00,780 --> 00:42:03,300
um yeah because there is a page limit

921
00:42:03,300 --> 00:42:06,000
yeah okay so did you compare then how

922
00:42:06,000 --> 00:42:07,980
your bonds compare if you do it if you

923
00:42:07,980 --> 00:42:11,240
do the proof one way or the other

924
00:42:11,460 --> 00:42:14,700
no not really I don't I I wouldn't okay

925
00:42:14,700 --> 00:42:18,180
I don't know I would have to check

926
00:42:18,180 --> 00:42:21,560
thank you thank you

927
00:42:21,960 --> 00:42:25,820
okay that's the new speaker again then

928
00:42:28,030 --> 00:42:31,239
[Music]

929
00:42:49,640 --> 00:42:52,020
okay so our last talk

930
00:42:52,020 --> 00:42:54,660
is a modular approach to the

931
00:42:54,660 --> 00:42:56,700
incompressibility of block Cipher based

932
00:42:56,700 --> 00:42:57,660
aad

933
00:42:57,660 --> 00:43:01,500
by akinori hosayamada takina takanori

934
00:43:01,500 --> 00:43:02,640
iZombie

935
00:43:02,640 --> 00:43:07,440
yosuke Todo and kanyasuda and Akinator

936
00:43:07,440 --> 00:43:09,660
will give the talk

937
00:43:09,660 --> 00:43:12,259
foreign

938
00:43:12,780 --> 00:43:15,740
foreign

939
00:43:31,040 --> 00:43:33,660
I would like to explain the background

940
00:43:33,660 --> 00:43:36,560
of our results

941
00:43:36,680 --> 00:43:40,079
so this picture shows the Black Box

942
00:43:40,079 --> 00:43:42,540
model where we usually study the

943
00:43:42,540 --> 00:43:44,700
security of cryptographic streams or

944
00:43:44,700 --> 00:43:47,960
cryptographic algorithm

945
00:43:51,440 --> 00:43:54,599
algorithm is given and we assume that

946
00:43:54,599 --> 00:43:57,060
the other Comics some queries to the

947
00:43:57,060 --> 00:43:59,339
Oracle and the Oracle will return

948
00:43:59,339 --> 00:44:00,720
responses

949
00:44:00,720 --> 00:44:03,060
and here the important thing is we

950
00:44:03,060 --> 00:44:05,339
assume that the attacker doesn't have

951
00:44:05,339 --> 00:44:07,740
direct access to the implementation of

952
00:44:07,740 --> 00:44:09,660
the algorithm

953
00:44:09,660 --> 00:44:12,300
so this is the usual Black Box model

954
00:44:12,300 --> 00:44:15,060
where we work and study security of

955
00:44:15,060 --> 00:44:16,740
cryptographic algorithm

956
00:44:16,740 --> 00:44:19,680
but in the real world sometimes we have

957
00:44:19,680 --> 00:44:24,259
some problems with this Black Box model

958
00:44:24,540 --> 00:44:27,599
the problem is in the real world there

959
00:44:27,599 --> 00:44:31,140
may exist a kind of malware and this

960
00:44:31,140 --> 00:44:33,420
malware May introduce into personal

961
00:44:33,420 --> 00:44:36,240
computer or server where the

962
00:44:36,240 --> 00:44:39,540
cryptographic algorithm is implemented

963
00:44:39,540 --> 00:44:41,880
and with such a situation security

964
00:44:41,880 --> 00:44:45,780
results so in soon in the Black Box

965
00:44:45,780 --> 00:44:49,740
model guarantee no security about this

966
00:44:49,740 --> 00:44:51,920
cryptographic algorithm

967
00:44:51,920 --> 00:44:54,660
uh because this malware made some

968
00:44:54,660 --> 00:44:56,700
information about implementation to the

969
00:44:56,700 --> 00:44:58,140
attacker

970
00:44:58,140 --> 00:45:02,460
so this is the real world and

971
00:45:02,460 --> 00:45:05,520
avoid box cryptography is a technique to

972
00:45:05,520 --> 00:45:09,180
remedy such a situation

973
00:45:09,180 --> 00:45:12,540
I mean uh what about cryptography is a

974
00:45:12,540 --> 00:45:15,180
technique to protect data against

975
00:45:15,180 --> 00:45:17,819
attackers who may have full and direct

976
00:45:17,819 --> 00:45:19,500
access to implementations of

977
00:45:19,500 --> 00:45:23,000
cryptographic algorithms

978
00:45:23,000 --> 00:45:25,140
photography there are two major

979
00:45:25,140 --> 00:45:27,720
requirements the first one is the

980
00:45:27,720 --> 00:45:30,780
resistance against the T extraction and

981
00:45:30,780 --> 00:45:33,540
the other one is resistance against code

982
00:45:33,540 --> 00:45:35,099
lifting

983
00:45:35,099 --> 00:45:38,099
here key extraction is now back to

984
00:45:38,099 --> 00:45:40,440
recover the secret key and the code

985
00:45:40,440 --> 00:45:43,079
listing is an attack to copy the entire

986
00:45:43,079 --> 00:45:45,060
implementation

987
00:45:45,060 --> 00:45:48,599
and of course obviously the resistance

988
00:45:48,599 --> 00:45:51,300
against the key extraction is mandatory

989
00:45:51,300 --> 00:45:53,940
this is obvious but the important thing

990
00:45:53,940 --> 00:45:57,240
is resistance against code lifting is

991
00:45:57,240 --> 00:46:00,420
also mandatory because if an attacker

992
00:46:00,420 --> 00:46:02,760
can copy the entire implementation of

993
00:46:02,760 --> 00:46:05,760
the algorithm then the data can perform

994
00:46:05,760 --> 00:46:06,980
every

995
00:46:06,980 --> 00:46:10,260
cryptographic operation orbital ID

996
00:46:10,260 --> 00:46:13,380
uh so the resistance against code

997
00:46:13,380 --> 00:46:17,359
lifting is also mandatory

998
00:46:18,359 --> 00:46:20,520
and the next I'd like to explain about

999
00:46:20,520 --> 00:46:22,380
incompressibility

1000
00:46:22,380 --> 00:46:27,200
this is a security notion introduced by

1001
00:46:31,140 --> 00:46:32,460
it all

1002
00:46:32,460 --> 00:46:36,000
and this is photography

1003
00:46:36,000 --> 00:46:39,380
and very roughly speaking

1004
00:46:52,200 --> 00:46:54,319
thank you

1005
00:46:57,200 --> 00:47:00,839
and so a very individually this

1006
00:47:00,839 --> 00:47:02,880
incompressibility formalizes the

1007
00:47:02,880 --> 00:47:04,740
hardness of compressing cryptographic

1008
00:47:04,740 --> 00:47:06,540
implementations while keeping a

1009
00:47:06,540 --> 00:47:08,280
functionality

1010
00:47:08,280 --> 00:47:10,619
and for instance suppose we have an

1011
00:47:10,619 --> 00:47:11,720
English

1012
00:47:11,720 --> 00:47:14,819
and this one is compiled to a large

1013
00:47:14,819 --> 00:47:18,240
program p and then we say that the

1014
00:47:18,240 --> 00:47:21,359
program is incompressible if even if the

1015
00:47:21,359 --> 00:47:23,700
program is given to the adversary it is

1016
00:47:23,700 --> 00:47:25,980
hard to build a smaller program that is

1017
00:47:25,980 --> 00:47:27,780
functionally because of equivalent to

1018
00:47:27,780 --> 00:47:30,420
the original program p

1019
00:47:30,420 --> 00:47:33,180
and very lovely speaking in global

1020
00:47:33,180 --> 00:47:35,760
incompressibility means the hardness for

1021
00:47:35,760 --> 00:47:38,819
malawiers to leak useful information

1022
00:47:38,819 --> 00:47:40,859
so this is the basic idea of

1023
00:47:40,859 --> 00:47:42,300
incompressibility

1024
00:47:42,300 --> 00:47:44,400
and in previous works there are many

1025
00:47:44,400 --> 00:47:46,980
variants of incompressibility for

1026
00:47:46,980 --> 00:47:49,500
instance income by Focus at all and

1027
00:47:49,500 --> 00:47:52,560
space hardness by both Android and so on

1028
00:47:52,560 --> 00:47:55,500
so there are many variants but the basic

1029
00:47:55,500 --> 00:47:58,140
idea is the same I mean the basic idea

1030
00:47:58,140 --> 00:48:00,000
is the hardness of compressing

1031
00:48:00,000 --> 00:48:02,099
cryptographic implementations while

1032
00:48:02,099 --> 00:48:04,140
keeping functionality

1033
00:48:04,140 --> 00:48:06,720
and the good point about about

1034
00:48:06,720 --> 00:48:09,060
incompressibility or its variance is

1035
00:48:09,060 --> 00:48:12,300
they are achievable without relying on

1036
00:48:12,300 --> 00:48:14,640
special sexual Hardware

1037
00:48:14,640 --> 00:48:18,060
and this is many special secret Hardware

1038
00:48:18,060 --> 00:48:21,119
like TPM are common in use but still

1039
00:48:21,119 --> 00:48:23,700
there exists High demands for software

1040
00:48:23,700 --> 00:48:26,520
only solutions in various scenarios like

1041
00:48:26,520 --> 00:48:28,800
cloud-based payment services

1042
00:48:28,800 --> 00:48:33,260
so we also focus on incompressibility

1043
00:48:34,440 --> 00:48:36,540
and the next I'd like to explain the

1044
00:48:36,540 --> 00:48:38,640
motivation of our research

1045
00:48:38,640 --> 00:48:42,300
first in previous Works they already

1046
00:48:42,300 --> 00:48:44,220
exists statero and efficient

1047
00:48:44,220 --> 00:48:46,859
incompressible block ciphers but there

1048
00:48:46,859 --> 00:48:49,200
is no modes of operation to convert them

1049
00:48:49,200 --> 00:48:53,220
into incompressible AES for instance the

1050
00:48:53,220 --> 00:48:55,980
famous GCM mode is not incompressible

1051
00:48:55,980 --> 00:48:58,819
even if it is instantiated with an

1052
00:48:58,819 --> 00:49:02,520
incompressible block Cipher because once

1053
00:49:02,520 --> 00:49:05,640
the Hashim key for Z hash is leaked then

1054
00:49:05,640 --> 00:49:08,099
Universal forestry is possible and the

1055
00:49:08,099 --> 00:49:09,960
similar Dark Souls work for other modes

1056
00:49:09,960 --> 00:49:13,079
like CCM and OCB and so on

1057
00:49:13,079 --> 00:49:15,960
and the second there's no incompressible

1058
00:49:15,960 --> 00:49:17,640
a scheme achieving both of

1059
00:49:17,640 --> 00:49:19,700
confidentiality and authenticity without

1060
00:49:19,700 --> 00:49:23,280
relying on special Hardware when the

1061
00:49:23,280 --> 00:49:24,960
leakage exists

1062
00:49:24,960 --> 00:49:28,140
and so a natural question is can't we

1063
00:49:28,140 --> 00:49:30,000
reduce incompressibility like security

1064
00:49:30,000 --> 00:49:32,520
innocence of an AEG mode to those of

1065
00:49:32,520 --> 00:49:33,660
block service

1066
00:49:33,660 --> 00:49:36,060
I think this is a natural question

1067
00:49:36,060 --> 00:49:39,119
but it seems new security Notions are

1068
00:49:39,119 --> 00:49:41,460
necessary for both of block service and

1069
00:49:41,460 --> 00:49:44,940
aeads because existing security Notions

1070
00:49:44,940 --> 00:49:47,280
do not seem suitable for reductions from

1071
00:49:47,280 --> 00:49:50,080
aeads to block ciphers

1072
00:49:50,080 --> 00:49:53,270
[Applause]

1073
00:49:53,359 --> 00:49:55,560
only a kind of universal

1074
00:49:55,560 --> 00:49:57,660
unfortunatability which is much because

1075
00:49:57,660 --> 00:49:59,819
what can be achieved in the Black Box

1076
00:49:59,819 --> 00:50:00,720
model

1077
00:50:00,720 --> 00:50:03,720
so this is the motivation of our results

1078
00:50:03,720 --> 00:50:06,119
and it is our results

1079
00:50:06,119 --> 00:50:08,520
firstly we introduce new white box

1080
00:50:08,520 --> 00:50:11,460
certifications for aead and block Cipher

1081
00:50:11,460 --> 00:50:13,260
and prf and so on

1082
00:50:13,260 --> 00:50:15,660
and the second we show that a weak

1083
00:50:15,660 --> 00:50:17,640
variant of public in differentiability

1084
00:50:17,640 --> 00:50:20,700
impress reduction between new white box

1085
00:50:20,700 --> 00:50:22,200
secret innocence

1086
00:50:22,200 --> 00:50:25,079
and the third we saw that the sib

1087
00:50:25,079 --> 00:50:27,839
construction instantiated with a

1088
00:50:27,839 --> 00:50:30,300
sponge-based prf and the counter mode

1089
00:50:30,300 --> 00:50:33,180
becomes a white box SQL AEG mode of

1090
00:50:33,180 --> 00:50:34,760
block ciphers

1091
00:50:34,760 --> 00:50:38,640
and of course we also introduced a new

1092
00:50:38,640 --> 00:50:40,980
white box visual by the block block

1093
00:50:40,980 --> 00:50:44,040
Cipher I mean 256-bit block Cipher which

1094
00:50:44,040 --> 00:50:48,839
we named space 256 16. this is a variant

1095
00:50:48,839 --> 00:50:51,240
of space block Cipher introduced by

1096
00:50:51,240 --> 00:50:54,180
bogudana is away and we conjecture that

1097
00:50:54,180 --> 00:50:57,119
this block Cipher is secure with respect

1098
00:50:57,119 --> 00:50:58,980
to our new specific notion for Block

1099
00:50:58,980 --> 00:51:01,520
ciphers

1100
00:51:03,200 --> 00:51:06,240
can be detected if they consume lots of

1101
00:51:06,240 --> 00:51:08,339
computational resources or send huge

1102
00:51:08,339 --> 00:51:11,040
data outside but we assume nothing about

1103
00:51:11,040 --> 00:51:12,300
Hardware

1104
00:51:12,300 --> 00:51:14,880
so this is the summary of our results

1105
00:51:14,880 --> 00:51:17,220
and the inverter for us I would like to

1106
00:51:17,220 --> 00:51:20,460
explain details about these results

1107
00:51:20,460 --> 00:51:22,680
and firstly I'd like to explain about

1108
00:51:22,680 --> 00:51:26,299
our new statutory key Notions

1109
00:51:27,180 --> 00:51:30,839
and first I'd like to explain what we

1110
00:51:30,839 --> 00:51:33,960
took into account when considering how

1111
00:51:33,960 --> 00:51:37,440
to define security illusion for aeads

1112
00:51:37,440 --> 00:51:41,099
and first we would like to divide we

1113
00:51:41,099 --> 00:51:43,559
wanted to Define uh the satellite in

1114
00:51:43,559 --> 00:51:46,440
Ocean by using real and the ideal

1115
00:51:46,440 --> 00:51:48,540
distinguishing games like various

1116
00:51:48,540 --> 00:51:51,059
conventional decision

1117
00:51:51,059 --> 00:51:53,520
and the second we impose the sum of

1118
00:51:53,520 --> 00:51:55,619
limits on the amount of leakage for more

1119
00:51:55,619 --> 00:51:57,780
we are running time expecting that

1120
00:51:57,780 --> 00:52:00,000
various can be detected if the leakage

1121
00:52:00,000 --> 00:52:02,040
for running time or not

1122
00:52:02,040 --> 00:52:05,400
and start we consider security only

1123
00:52:05,400 --> 00:52:07,559
after code lifting or only after

1124
00:52:07,559 --> 00:52:10,260
marvelous because no security can be

1125
00:52:10,260 --> 00:52:12,059
grounded during all the lifting or

1126
00:52:12,059 --> 00:52:14,400
during a malware is running

1127
00:52:14,400 --> 00:52:17,339
and the fourth uh we noticed that

1128
00:52:17,339 --> 00:52:20,599
leakage means an answer repeat because

1129
00:52:20,599 --> 00:52:23,819
different type of expires under some

1130
00:52:23,819 --> 00:52:25,980
dances that haven't been queries by the

1131
00:52:25,980 --> 00:52:31,380
attacker so uh whitebox must be not

1132
00:52:31,380 --> 00:52:34,380
misused resistant in the Black Box model

1133
00:52:34,380 --> 00:52:37,319
and finally we cannot prohibit the

1134
00:52:37,319 --> 00:52:39,000
record for the outputs from the

1135
00:52:39,000 --> 00:52:41,599
encryption Oracle to the declarable

1136
00:52:41,599 --> 00:52:45,000
such things is prohibited sometimes in

1137
00:52:45,000 --> 00:52:46,859
the Black Box model but in the waterbox

1138
00:52:46,859 --> 00:52:49,220
model we cannot prohibit this because

1139
00:52:49,220 --> 00:52:51,780
malware can do everything

1140
00:52:51,780 --> 00:52:55,559
and taking these things into account we

1141
00:52:55,559 --> 00:52:58,500
finally decided uh to Define our new

1142
00:52:58,500 --> 00:53:00,540
state recognition by extending the

1143
00:53:00,540 --> 00:53:03,000
student random injection security or pry

1144
00:53:03,000 --> 00:53:04,579
security

1145
00:53:04,579 --> 00:53:06,240
and

1146
00:53:06,240 --> 00:53:09,900
here uh please remember that we say in

1147
00:53:09,900 --> 00:53:12,900
the Black Box model we see that an aead

1148
00:53:12,900 --> 00:53:15,599
stream is a pseudo-random injection or

1149
00:53:15,599 --> 00:53:18,480
pry if the encryption and the

1150
00:53:18,480 --> 00:53:19,940
description algorithms are

1151
00:53:19,940 --> 00:53:22,680
indistinguishable from

1152
00:53:22,680 --> 00:53:26,460
random injection and its inverse so the

1153
00:53:26,460 --> 00:53:29,339
ideal object in this recognition is

1154
00:53:29,339 --> 00:53:31,079
random injection

1155
00:53:31,079 --> 00:53:34,380
and so anyways we defined uh the new

1156
00:53:34,380 --> 00:53:36,780
certification for AEG taking these

1157
00:53:36,780 --> 00:53:39,420
things these things into account and our

1158
00:53:39,420 --> 00:53:43,079
certification is based on pry security

1159
00:53:43,079 --> 00:53:45,140
and the next either actually explain

1160
00:53:45,140 --> 00:53:49,559
what the real world looks like uh so

1161
00:53:49,559 --> 00:53:51,900
there is an adversary and we assume that

1162
00:53:51,900 --> 00:53:54,420
first this adversary makes some queries

1163
00:53:54,420 --> 00:53:57,059
to the Black Box Oracle of the aead mode

1164
00:53:57,059 --> 00:54:01,200
or aead so there's some information

1165
00:54:01,200 --> 00:54:04,440
and then this attack produces a malware

1166
00:54:04,440 --> 00:54:08,000
and by any means

1167
00:54:08,059 --> 00:54:11,339
that this malware have

1168
00:54:11,339 --> 00:54:13,079
direct access to the white box

1169
00:54:13,079 --> 00:54:15,780
implementation of AED scheme

1170
00:54:15,780 --> 00:54:18,180
and after doing some competition this

1171
00:54:18,180 --> 00:54:20,040
malware out of its

1172
00:54:20,040 --> 00:54:22,500
the details to the attacker

1173
00:54:22,500 --> 00:54:25,980
and of course disable and this is the

1174
00:54:25,980 --> 00:54:28,500
same article same adversary in the real

1175
00:54:28,500 --> 00:54:31,920
world so we are able to send some data

1176
00:54:31,920 --> 00:54:33,000
to A2

1177
00:54:33,000 --> 00:54:37,380
and we assume that the A2 again make

1178
00:54:37,380 --> 00:54:39,059
some queries to the black box or the

1179
00:54:39,059 --> 00:54:40,800
black box Oracle to just some

1180
00:54:40,800 --> 00:54:41,880
information

1181
00:54:41,880 --> 00:54:45,240
and finally it outputs the final uh

1182
00:54:45,240 --> 00:54:48,000
something final bit string

1183
00:54:48,000 --> 00:54:51,780
so this is how real world looks like

1184
00:54:51,780 --> 00:54:53,940
and the next I'll directly explain about

1185
00:54:53,940 --> 00:54:55,680
the ideal world

1186
00:54:55,680 --> 00:54:59,460
since uh we Define the new certification

1187
00:54:59,460 --> 00:55:02,280
by extending the pry Security in the

1188
00:55:02,280 --> 00:55:03,660
Black Box model

1189
00:55:03,660 --> 00:55:07,079
firstly the Black Box Oracle is replaced

1190
00:55:07,079 --> 00:55:10,260
with random injection and its symbols

1191
00:55:10,260 --> 00:55:13,859
so firstly data makes queries to the

1192
00:55:13,859 --> 00:55:16,680
random injection Oracle and produces a

1193
00:55:16,680 --> 00:55:17,640
malware

1194
00:55:17,640 --> 00:55:20,220
but here we have a problem

1195
00:55:20,220 --> 00:55:22,619
the problem is there is no white box

1196
00:55:22,619 --> 00:55:25,140
implementation in the ideal world

1197
00:55:25,140 --> 00:55:28,680
so here we introduce a simulator

1198
00:55:28,680 --> 00:55:32,220
and this simulator is time unbounded and

1199
00:55:32,220 --> 00:55:34,079
makes some queries to the Black Box

1200
00:55:34,079 --> 00:55:35,400
Oracle

1201
00:55:35,400 --> 00:55:38,280
and then this simulator simulates output

1202
00:55:38,280 --> 00:55:41,640
simulated leakage to the attacker and

1203
00:55:41,640 --> 00:55:44,579
here the goal of the simulator is

1204
00:55:44,579 --> 00:55:48,000
simulate this leakage so that the

1205
00:55:48,000 --> 00:55:52,079
adversy is will not distinguish Ideal

1206
00:55:52,079 --> 00:55:55,020
World from The Real World okay again so

1207
00:55:55,020 --> 00:55:58,380
the goal of the simulator is simulate

1208
00:55:58,380 --> 00:56:01,680
the leakage so that the other side will

1209
00:56:01,680 --> 00:56:05,280
not distinguish Ideal World and real

1210
00:56:05,280 --> 00:56:06,359
world

1211
00:56:06,359 --> 00:56:10,079
uh so this is how simulator works and

1212
00:56:10,079 --> 00:56:14,520
nothing is finally output something

1213
00:56:14,520 --> 00:56:18,420
and so finally we defined the new

1214
00:56:18,420 --> 00:56:20,940
certification for aead like this

1215
00:56:20,940 --> 00:56:25,800
and we name the new certification whpry

1216
00:56:25,980 --> 00:56:28,819
we say that an aead stream is

1217
00:56:28,819 --> 00:56:33,119
whpry65 for any efficient advocacy there

1218
00:56:33,119 --> 00:56:35,579
exists a time unbounded dissimulator is

1219
00:56:35,579 --> 00:56:37,980
making reasonable amount of queries to

1220
00:56:37,980 --> 00:56:40,859
the uh either horrible making the

1221
00:56:40,859 --> 00:56:43,380
distinguishing Advantage small

1222
00:56:43,380 --> 00:56:46,680
uh so this is our new notion for aads

1223
00:56:46,680 --> 00:56:49,260
w-hpry

1224
00:56:49,260 --> 00:56:51,900
and the next I'd like to explain uh how

1225
00:56:51,900 --> 00:56:53,819
we can interprets this new security

1226
00:56:53,819 --> 00:56:55,740
notion

1227
00:56:55,740 --> 00:56:59,700
so suppose we have an AED stream and

1228
00:56:59,700 --> 00:57:03,599
this AEG stream is whpry SQL then there

1229
00:57:03,599 --> 00:57:06,359
exists a simulator making the

1230
00:57:06,359 --> 00:57:09,059
distinguishing Advantage small

1231
00:57:09,059 --> 00:57:13,680
then this means spheres

1232
00:57:18,000 --> 00:57:20,160
and this further means that the

1233
00:57:20,160 --> 00:57:22,440
implementation white box implementation

1234
00:57:22,440 --> 00:57:25,859
of the aead stream is incompressible and

1235
00:57:25,859 --> 00:57:28,619
privacy and authenticity lost by 112

1236
00:57:28,619 --> 00:57:30,839
leakage is only Lambda bit

1237
00:57:30,839 --> 00:57:34,200
so this is how we can interpret our new

1238
00:57:34,200 --> 00:57:36,859
certification

1239
00:57:37,559 --> 00:57:41,099
and next we also uh similarly defined

1240
00:57:41,099 --> 00:57:43,200
new specific Notions for block ciphers

1241
00:57:43,200 --> 00:57:46,559
and prf and so on in particular uh we

1242
00:57:46,559 --> 00:57:49,460
named the new notion for Block Cipher as

1243
00:57:49,460 --> 00:57:52,920
whprp and this is an extension of the

1244
00:57:52,920 --> 00:57:55,559
Black Box PRP security

1245
00:57:55,559 --> 00:57:58,680
and we conjugate that the space Cipher

1246
00:57:58,680 --> 00:58:01,319
broke Cipher but without by bogudanov

1247
00:58:01,319 --> 00:58:05,520
and Isabel is whpr by prb SQL with

1248
00:58:05,520 --> 00:58:08,520
respect to uh some reasonable uh

1249
00:58:08,520 --> 00:58:10,740
strategy parameters

1250
00:58:10,740 --> 00:58:14,579
and so next our goal is to come up with

1251
00:58:14,579 --> 00:58:18,440
an AEG mode of block Cipher and reduce

1252
00:58:18,440 --> 00:58:22,380
Whirlwind security over the aead mode to

1253
00:58:22,380 --> 00:58:25,200
the whprb security of the underlying

1254
00:58:25,200 --> 00:58:26,339
block cycle

1255
00:58:26,339 --> 00:58:29,760
uh so this is our next role next one is

1256
00:58:29,760 --> 00:58:32,760
uh so how to our next question is how to

1257
00:58:32,760 --> 00:58:36,380
reduce the citric ignosium

1258
00:58:36,480 --> 00:58:39,660
but here in our paper we saw that some

1259
00:58:39,660 --> 00:58:41,819
variants of indifference ability impress

1260
00:58:41,819 --> 00:58:43,619
reductions between our new security

1261
00:58:43,619 --> 00:58:47,520
Notions for instance if the structure of

1262
00:58:47,520 --> 00:58:49,980
our steam is indifferentiable from the

1263
00:58:49,980 --> 00:58:51,240
random object

1264
00:58:51,240 --> 00:58:53,940
then we can say that there exists a

1265
00:58:53,940 --> 00:58:55,980
security reduction between new white box

1266
00:58:55,980 --> 00:58:57,420
functions

1267
00:58:57,420 --> 00:58:59,819
and in fact some weaker variants of

1268
00:58:59,819 --> 00:59:01,680
indifference ability are sufficient to

1269
00:59:01,680 --> 00:59:04,319
show direction for instance if we can

1270
00:59:04,319 --> 00:59:06,359
show only public in differentiability

1271
00:59:06,359 --> 00:59:08,579
instead of the original indifference

1272
00:59:08,579 --> 00:59:10,859
ability it is also sufficient so

1273
00:59:10,859 --> 00:59:13,799
reductions between white boxes

1274
00:59:13,799 --> 00:59:17,520
and we also show that uh more weaker

1275
00:59:17,520 --> 00:59:19,440
variants which will weak public in

1276
00:59:19,440 --> 00:59:21,299
differentiability is actually sufficient

1277
00:59:21,299 --> 00:59:23,420
to show deductions

1278
00:59:23,420 --> 00:59:25,799
and I would like to explain details

1279
00:59:25,799 --> 00:59:27,900
about Republic interference ability but

1280
00:59:27,900 --> 00:59:30,720
I don't have enough time today so please

1281
00:59:30,720 --> 00:59:33,599
our paper for details

1282
00:59:33,599 --> 00:59:37,440
and so uh anyways uh to show reductions

1283
00:59:37,440 --> 00:59:40,020
it is sufficient too so uh in the

1284
00:59:40,020 --> 00:59:41,880
financial ability weak public in

1285
00:59:41,880 --> 00:59:44,400
differentiability

1286
00:59:44,400 --> 00:59:47,520
and finally I'd like to explain what

1287
00:59:47,520 --> 00:59:51,240
kind of AEG mode becomes incompressible

1288
00:59:51,240 --> 00:59:53,700
and also I'd like to explain new white

1289
00:59:53,700 --> 00:59:57,680
box uh secure incompressible

1290
00:59:58,500 --> 01:00:03,240
uh so this is the aea mode uh we focused

1291
01:00:03,240 --> 01:00:06,839
on other people the model is the sib

1292
01:00:06,839 --> 01:00:09,660
construction instantiated with a

1293
01:00:09,660 --> 01:00:12,960
sponge-based prf and the counter mode

1294
01:00:12,960 --> 01:00:15,420
and here please remember that the sib

1295
01:00:15,420 --> 01:00:18,000
construction first takes nuns and

1296
01:00:18,000 --> 01:00:20,880
Associated data and message as an input

1297
01:00:20,880 --> 01:00:24,540
and generates attacks by using a prf and

1298
01:00:24,540 --> 01:00:28,260
this tag is used as an IV for the

1299
01:00:28,260 --> 01:00:30,000
encryption part

1300
01:00:30,000 --> 01:00:33,180
and here we assume that the prf is

1301
01:00:33,180 --> 01:00:35,180
instantiated

1302
01:00:35,180 --> 01:00:39,540
as some sponge-based prf and we assume

1303
01:00:39,540 --> 01:00:41,760
that the underlying primitive primitive

1304
01:00:41,760 --> 01:00:44,339
of the sponge is the incompressible

1305
01:00:44,339 --> 01:00:46,020
block cycle

1306
01:00:46,020 --> 01:00:49,020
and in our paper visual that this

1307
01:00:49,020 --> 01:00:50,780
structure becomes public

1308
01:00:50,780 --> 01:00:53,579
indifferentiable from a random injection

1309
01:00:53,579 --> 01:00:56,780
if the underlying block Cipher is

1310
01:00:56,780 --> 01:01:00,000
ideally random permutation

1311
01:01:00,000 --> 01:01:02,280
and as I mentioned before public

1312
01:01:02,280 --> 01:01:04,680
indifference ability in price security

1313
01:01:04,680 --> 01:01:08,280
reductions between white box Notions and

1314
01:01:08,280 --> 01:01:09,900
so this public in differentiability

1315
01:01:09,900 --> 01:01:13,740
means that if we have a white box visual

1316
01:01:13,740 --> 01:01:18,180
block Cipher then the entire resulting

1317
01:01:18,180 --> 01:01:23,579
AEG stream becomes adding waterbox zero

1318
01:01:23,579 --> 01:01:26,880
and a very lovely speaking we saw that

1319
01:01:26,880 --> 01:01:29,099
the mode is essential up to two to the

1320
01:01:29,099 --> 01:01:32,040
power and over four Black Box queries

1321
01:01:32,040 --> 01:01:34,380
but here we have a problem

1322
01:01:34,380 --> 01:01:37,559
the problem is the space Cipher bogdanov

1323
01:01:37,559 --> 01:01:40,140
and reservations to be whp or pcq but

1324
01:01:40,140 --> 01:01:44,040
the parameter n is only 128.

1325
01:01:44,040 --> 01:01:46,200
which means the security of the

1326
01:01:46,200 --> 01:01:49,140
resulting ADHD scheme is only up to 2 to

1327
01:01:49,140 --> 01:01:51,059
the power 32 complexity which is not

1328
01:01:51,059 --> 01:01:53,460
enough for practical use cases

1329
01:01:53,460 --> 01:01:57,540
and so we introduced a new broke Cipher

1330
01:01:57,540 --> 01:02:03,660
between a space 256. and this has uh the

1331
01:02:03,660 --> 01:02:06,119
programs over 256.

1332
01:02:06,119 --> 01:02:09,059
so the resulting very scheme

1333
01:02:09,059 --> 01:02:11,940
instantiated with this new Cipher uh

1334
01:02:11,940 --> 01:02:14,099
because up to 2 to the power 64

1335
01:02:14,099 --> 01:02:15,480
complexity

1336
01:02:15,480 --> 01:02:17,520
and this Cipher is based on the space

1337
01:02:17,520 --> 01:02:20,520
Cipher Bible download and we conduct

1338
01:02:20,520 --> 01:02:23,220
that this Cipher is a schedule if the

1339
01:02:23,220 --> 01:02:26,579
query and the running time of malware is

1340
01:02:26,579 --> 01:02:29,160
less than two to the power 64 and the

1341
01:02:29,160 --> 01:02:31,079
amount of digits is less than two to

1342
01:02:31,079 --> 01:02:32,819
about 20.

1343
01:02:32,819 --> 01:02:35,520
and we also implemented the resulting

1344
01:02:35,520 --> 01:02:39,559
AED scheme and the performance is about

1345
01:02:39,559 --> 01:02:43,079
530 cycle provide on inter platform

1346
01:02:43,079 --> 01:02:45,420
of course this performance is much worse

1347
01:02:45,420 --> 01:02:48,660
than the usual aad mode like gcma yes

1348
01:02:48,660 --> 01:02:52,200
but still we believe this is practical

1349
01:02:52,200 --> 01:02:55,920
enough for a real world use thesis

1350
01:02:55,920 --> 01:02:58,319
and so finally I would like to today's

1351
01:02:58,319 --> 01:03:01,160
I'd like to summarize today's my talk

1352
01:03:01,160 --> 01:03:03,660
we introduced new white box

1353
01:03:03,660 --> 01:03:06,119
certifications for aead and block Cipher

1354
01:03:06,119 --> 01:03:08,940
and so on and we saw that a weak variant

1355
01:03:08,940 --> 01:03:11,160
of public in differentiability employees

1356
01:03:11,160 --> 01:03:14,099
reductions and we sure that the HIV

1357
01:03:14,099 --> 01:03:16,260
construction instantiated with a

1358
01:03:16,260 --> 01:03:18,059
sponge-based prf and counter mode

1359
01:03:18,059 --> 01:03:20,880
because avoidable AV mode

1360
01:03:20,880 --> 01:03:23,579
and we introduced a new white box figure

1361
01:03:23,579 --> 01:03:25,500
while the block block server which we

1362
01:03:25,500 --> 01:03:29,040
named space 256. this is a variant of

1363
01:03:29,040 --> 01:03:31,799
the space Cipher bothanov and the

1364
01:03:31,799 --> 01:03:32,819
isobene

1365
01:03:32,819 --> 01:03:35,700
and finally in our paper we assume that

1366
01:03:35,700 --> 01:03:38,160
model S can be detected if they consume

1367
01:03:38,160 --> 01:03:40,200
lots of computational resources or send

1368
01:03:40,200 --> 01:03:42,900
huge data outside but we assume nothing

1369
01:03:42,900 --> 01:03:44,940
about the secure Hardware

1370
01:03:44,940 --> 01:03:46,619
uh that's all thank you for your

1371
01:03:46,619 --> 01:03:48,799
attention

1372
01:03:53,220 --> 01:03:55,939
any questions

1373
01:04:05,819 --> 01:04:08,040
just so uh I understand the

1374
01:04:08,040 --> 01:04:10,559
incompressibility security definition is

1375
01:04:10,559 --> 01:04:12,720
it releasing the key you had mentioned

1376
01:04:12,720 --> 01:04:15,299
before on another side that GCM is not

1377
01:04:15,299 --> 01:04:17,220
compressible because

1378
01:04:17,220 --> 01:04:21,119
uh if you um release the G HP then you

1379
01:04:21,119 --> 01:04:24,920
could Forge tags

1380
01:04:25,500 --> 01:04:29,720
um so I just couldn't note here so

1381
01:04:31,799 --> 01:04:34,200
um for okay this looks better for the

1382
01:04:34,200 --> 01:04:36,299
incompressibility security notion is are

1383
01:04:36,299 --> 01:04:37,920
you releasing the

1384
01:04:37,920 --> 01:04:41,059
um the encryption key

1385
01:04:41,160 --> 01:04:43,200
is that released to the adversary you

1386
01:04:43,200 --> 01:04:47,180
had said before that for GCM

1387
01:04:49,079 --> 01:04:50,700
um for the AAP

1388
01:04:50,700 --> 01:04:54,078
for the incompressibility

1389
01:04:58,380 --> 01:05:01,280
it's incompressible

1390
01:05:03,500 --> 01:05:07,020
you see yeah DCM is not incompressible

1391
01:05:07,020 --> 01:05:09,240
and your question is solid

1392
01:05:09,240 --> 01:05:11,400
is

1393
01:05:11,400 --> 01:05:15,140
disability security definition

1394
01:05:21,599 --> 01:05:23,819
I'm sorry I don't understand something

1395
01:05:23,819 --> 01:05:25,799
and yeah I'd like to discuss whole thing

1396
01:05:25,799 --> 01:05:27,540
thank you

1397
01:05:27,540 --> 01:05:30,440
another question

1398
01:05:32,339 --> 01:05:34,260
it wasn't resolved it will be taken

1399
01:05:34,260 --> 01:05:36,420
offline

1400
01:05:36,420 --> 01:05:38,040
but

1401
01:05:38,040 --> 01:05:39,900
um I think the question was like in the

1402
01:05:39,900 --> 01:05:42,240
which is also a question I had and the

1403
01:05:42,240 --> 01:05:44,819
compressibility definition right you

1404
01:05:44,819 --> 01:05:47,220
made the claim that GCM is not

1405
01:05:47,220 --> 01:05:50,640
incompressible yes because the key of G

1406
01:05:50,640 --> 01:05:53,740
hash leaks yeah right

1407
01:05:53,740 --> 01:05:54,299
[Music]

1408
01:05:54,299 --> 01:05:55,619
um

1409
01:05:55,619 --> 01:05:58,020
I think your question was in the

1410
01:05:58,020 --> 01:06:00,960
definition of incompressibility

1411
01:06:00,960 --> 01:06:02,520
um you leaked the key

1412
01:06:02,520 --> 01:06:05,359
is that correct

1413
01:06:06,480 --> 01:06:08,460
yeah in when considering

1414
01:06:08,460 --> 01:06:12,059
incompressibility we assume that the

1415
01:06:12,059 --> 01:06:14,579
malware made some information about the

1416
01:06:14,579 --> 01:06:18,740
team but here we assume that the size of

1417
01:06:18,740 --> 01:06:21,359
implementation is very large

1418
01:06:21,359 --> 01:06:23,339
I mean the older over gigabytes or

1419
01:06:23,339 --> 01:06:24,299
something

1420
01:06:24,299 --> 01:06:27,420
and we assume that uh

1421
01:06:27,420 --> 01:06:31,140
malware if the malware these such large

1422
01:06:31,140 --> 01:06:34,559
huge information outside then that

1423
01:06:34,559 --> 01:06:36,960
behavior can be detected and we can stop

1424
01:06:36,960 --> 01:06:38,099
using

1425
01:06:38,099 --> 01:06:40,619
data implementation

1426
01:06:40,619 --> 01:06:43,559
so incompressibility means like leaking

1427
01:06:43,559 --> 01:06:46,319
some information that will allow that is

1428
01:06:46,319 --> 01:06:48,119
less than the description of the screen

1429
01:06:48,119 --> 01:06:51,460
that allows breaking this scheme

1430
01:06:51,460 --> 01:06:55,170
[Music]

1431
01:06:55,880 --> 01:06:57,900
a compression

1432
01:06:57,900 --> 01:06:59,520
of the scheme according to

1433
01:06:59,520 --> 01:07:02,240
incompressibility

1434
01:07:03,920 --> 01:07:07,319
incompressibility means

1435
01:07:07,319 --> 01:07:10,020
just a small amount of data does not

1436
01:07:10,020 --> 01:07:13,500
Arrow attacker to break some security

1437
01:07:13,500 --> 01:07:15,119
notion like authenticity or something

1438
01:07:15,119 --> 01:07:16,500
okay yeah I think that should answer

1439
01:07:16,500 --> 01:07:18,900
your question yeah

1440
01:07:18,900 --> 01:07:22,160
more questions thank you

1441
01:07:24,599 --> 01:07:27,119
okay let's sing the speaker again thank

1442
01:07:27,119 --> 01:07:29,960
you thank you so much

1443
01:07:30,359 --> 01:07:31,799
please don't leave I have an

1444
01:07:31,799 --> 01:07:33,660
announcement

1445
01:07:33,660 --> 01:07:38,520
and so first uh to remind you early the

1446
01:07:38,520 --> 01:07:41,280
morning and there is the coffee on the

1447
01:07:41,280 --> 01:07:43,740
fourth floor for those who needs it

1448
01:07:43,740 --> 01:07:48,180
and also and the rump session deadlines

1449
01:07:48,180 --> 01:07:52,260
for submissions is today at noon and

1450
01:07:52,260 --> 01:07:55,920
like please you know submit uh your sub

1451
01:07:55,920 --> 01:08:00,020
your summary to the hot crap and and

1452
01:08:00,020 --> 01:08:03,660
finally we would like to remind those

1453
01:08:03,660 --> 01:08:07,079
who where those people that we owe you

1454
01:08:07,079 --> 01:08:09,359
about me like people who have stipended

1455
01:08:09,359 --> 01:08:11,700
students stipends coming to come and

1456
01:08:11,700 --> 01:08:14,280
talk to the reception desk thank you

1457
01:08:14,280 --> 01:08:15,299
very much

1458
01:08:15,299 --> 01:08:19,040
enjoy your coffee break

