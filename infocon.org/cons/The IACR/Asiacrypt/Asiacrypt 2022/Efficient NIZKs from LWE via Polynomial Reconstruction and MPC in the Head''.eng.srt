1
00:00:00,420 --> 00:00:03,480
hi I'm Paul and this is efficient nizzix

2
00:00:03,480 --> 00:00:05,819
from lwe via polynomial reconstruction

3
00:00:05,819 --> 00:00:08,519
and NPC in the head and this is Joint

4
00:00:08,519 --> 00:00:12,240
work with ridi goshal and Amit sahai

5
00:00:12,240 --> 00:00:14,160
our starting point is nizics for all of

6
00:00:14,160 --> 00:00:17,100
NP from lwe which was largely due to CCH

7
00:00:17,100 --> 00:00:19,800
plus 19 and ps19

8
00:00:19,800 --> 00:00:22,140
prior to our work all known Asic

9
00:00:22,140 --> 00:00:24,420
Arguments for NP from lwe considered

10
00:00:24,420 --> 00:00:26,519
instantiating the future mere Paradigm

11
00:00:26,519 --> 00:00:29,039
on a parallel repetition of a public

12
00:00:29,039 --> 00:00:31,260
coin honest verified zero knowledge

13
00:00:31,260 --> 00:00:32,880
interactive proof

14
00:00:32,880 --> 00:00:35,820
if we have a language L and NP we can

15
00:00:35,820 --> 00:00:37,920
take a statement X and L

16
00:00:37,920 --> 00:00:40,320
compile it via car production to some

17
00:00:40,320 --> 00:00:42,540
instance in a np-complete language such

18
00:00:42,540 --> 00:00:44,640
as graph hamiltonicity

19
00:00:44,640 --> 00:00:48,300
for which CCH plus 19 and ps19 give us a

20
00:00:48,300 --> 00:00:50,760
music argument the CRS model based on

21
00:00:50,760 --> 00:00:53,399
the hardness of lwe and this uses some

22
00:00:53,399 --> 00:00:55,800
underlying protocol for hamiltonicity

23
00:00:55,800 --> 00:00:58,500
such as fls 90.

24
00:00:58,500 --> 00:01:01,079
the work of hlr21 extends this to any

25
00:01:01,079 --> 00:01:03,000
commit and open protocol such as the

26
00:01:03,000 --> 00:01:07,320
three coloring protocol given by gmw 86

27
00:01:07,320 --> 00:01:09,960
in all these protocols there's a large

28
00:01:09,960 --> 00:01:11,880
proof size due to parallel repetition

29
00:01:11,880 --> 00:01:13,619
which is done to reduce the soundness

30
00:01:13,619 --> 00:01:16,500
error down to negligible

31
00:01:16,500 --> 00:01:18,780
moreover this car production is in

32
00:01:18,780 --> 00:01:22,080
general computationally expensive

33
00:01:22,080 --> 00:01:24,299
in our work we give an efficient base

34
00:01:24,299 --> 00:01:27,299
music construction for NP from lwe

35
00:01:27,299 --> 00:01:29,400
without parallel repetition and car

36
00:01:29,400 --> 00:01:32,759
Productions we do this by using the NPC

37
00:01:32,759 --> 00:01:34,560
in the head paradigm

38
00:01:34,560 --> 00:01:38,280
which was first given by icos O7

39
00:01:38,280 --> 00:01:40,619
in particular this allows us to

40
00:01:40,619 --> 00:01:42,479
translate work done on efficient

41
00:01:42,479 --> 00:01:45,540
perfectly robust MPC protocols to our

42
00:01:45,540 --> 00:01:49,259
setting of efficient nizzics from lwe

43
00:01:49,259 --> 00:01:52,020
our main informal theorem statement is

44
00:01:52,020 --> 00:01:54,540
that assuming the hardness of lwe

45
00:01:54,540 --> 00:01:56,340
there exists nizzix with computational

46
00:01:56,340 --> 00:01:59,280
soundness for all of NP whose proof size

47
00:01:59,280 --> 00:02:02,759
is O of C plus Q times depth of C plus

48
00:02:02,759 --> 00:02:05,159
poly K field elements and some finite

49
00:02:05,159 --> 00:02:06,420
field f

50
00:02:06,420 --> 00:02:09,419
where K is the security parameter

51
00:02:09,419 --> 00:02:12,780
Q is quasi-linear and K the size of the

52
00:02:12,780 --> 00:02:14,819
field is larger than two times Q

53
00:02:14,819 --> 00:02:17,459
and C is an arithmetic circuit for the

54
00:02:17,459 --> 00:02:19,620
MP verification function for some NP

55
00:02:19,620 --> 00:02:21,599
language l

56
00:02:21,599 --> 00:02:23,819
here what we mean by a basenistic

57
00:02:23,819 --> 00:02:25,860
construction is that the work of GGI

58
00:02:25,860 --> 00:02:28,260
plus 15 shows that we can use fully

59
00:02:28,260 --> 00:02:30,180
homomorphic encryption to bootstrap an

60
00:02:30,180 --> 00:02:32,580
underlying nizik protocol to a nizzic

61
00:02:32,580 --> 00:02:35,220
protocol whose proof size is just linear

62
00:02:35,220 --> 00:02:37,140
in the size of the witness plus poly K

63
00:02:37,140 --> 00:02:38,400
bits

64
00:02:38,400 --> 00:02:40,200
in particular we can view our main

65
00:02:40,200 --> 00:02:42,599
theorem as providing a more efficient

66
00:02:42,599 --> 00:02:44,340
underlying music from the hardness of

67
00:02:44,340 --> 00:02:46,920
lwe

68
00:02:46,920 --> 00:02:49,560
as an overview our technique builds off

69
00:02:49,560 --> 00:02:52,200
of hlr 21's coding theoretic approach to

70
00:02:52,200 --> 00:02:54,120
instantiating Fiat Shamir

71
00:02:54,120 --> 00:02:56,459
they show how to use a list recoverable

72
00:02:56,459 --> 00:02:58,500
error correcting code to address the

73
00:02:58,500 --> 00:03:00,180
case of exponentially many bad

74
00:03:00,180 --> 00:03:01,739
challenges

75
00:03:01,739 --> 00:03:03,959
there the block size of this list

76
00:03:03,959 --> 00:03:05,459
recoverable error correcting code

77
00:03:05,459 --> 00:03:08,879
determines the efficiency of the proof

78
00:03:08,879 --> 00:03:11,099
they use a part of rashvardi code

79
00:03:11,099 --> 00:03:13,440
concatenated with a single random code

80
00:03:13,440 --> 00:03:16,319
and achieve a block size of O of K to

81
00:03:16,319 --> 00:03:18,959
the 1 plus Epsilon for any positive

82
00:03:18,959 --> 00:03:22,800
small constant Epsilon one may ask can

83
00:03:22,800 --> 00:03:24,840
we generically apply this technique to

84
00:03:24,840 --> 00:03:27,420
the setting of MPC in the head

85
00:03:27,420 --> 00:03:29,220
in fact we can

86
00:03:29,220 --> 00:03:30,540
however

87
00:03:30,540 --> 00:03:32,940
generalist recovery does not take

88
00:03:32,940 --> 00:03:34,500
advantage of the special structure

89
00:03:34,500 --> 00:03:36,599
present in the NPC in the head setting

90
00:03:36,599 --> 00:03:38,220
which we observe

91
00:03:38,220 --> 00:03:40,440
in fact we will show that this yields

92
00:03:40,440 --> 00:03:42,840
less efficient proofs

93
00:03:42,840 --> 00:03:45,239
and in our work we note that the bad

94
00:03:45,239 --> 00:03:47,159
challenge set structure present in a

95
00:03:47,159 --> 00:03:49,220
modification of the icoso 7 protocol

96
00:03:49,220 --> 00:03:52,739
only needs a strictly weaker notion of

97
00:03:52,739 --> 00:03:55,260
list recovery which we term recurrent

98
00:03:55,260 --> 00:03:57,780
risk recovery

99
00:03:57,780 --> 00:04:00,599
therefore we can use qualitatively

100
00:04:00,599 --> 00:04:03,060
simpler codes to instantiate recurrent

101
00:04:03,060 --> 00:04:05,819
list recovery namely read Salomon codes

102
00:04:05,819 --> 00:04:08,400
concatenated with multiple random codes

103
00:04:08,400 --> 00:04:10,319
and directly use the polynomial

104
00:04:10,319 --> 00:04:12,299
reconstruction algorithm given by Sudan

105
00:04:12,299 --> 00:04:16,380
97 and Guru Swami Sudan 98 to achieve an

106
00:04:16,380 --> 00:04:19,139
improved block size of quasi-linear in a

107
00:04:19,139 --> 00:04:20,880
security parameter k

108
00:04:20,880 --> 00:04:22,620
for more details please come see our

109
00:04:22,620 --> 00:04:25,520
talk thank you

