1
00:00:02,520 --> 00:00:04,680
hello everyone today I'm gonna talk

2
00:00:04,680 --> 00:00:07,080
about Tripoli adaptive using music this

3
00:00:07,080 --> 00:00:08,880
is a joint work with Ron Kennedy and

4
00:00:08,880 --> 00:00:10,620
Xiao Wang

5
00:00:10,620 --> 00:00:12,900
so let me first Define what is a nasik

6
00:00:12,900 --> 00:00:15,059
protocol so in the music protocol there

7
00:00:15,059 --> 00:00:16,920
is a proofer who has an input statement

8
00:00:16,920 --> 00:00:20,039
X and A Witness W and the verifier has

9
00:00:20,039 --> 00:00:22,920
the same with NP witness NP statement X

10
00:00:22,920 --> 00:00:26,220
now the approval computes a proof Pi

11
00:00:26,220 --> 00:00:29,340
which attests that X is in the language

12
00:00:29,340 --> 00:00:32,340
L and W is a valid witness for it now

13
00:00:32,340 --> 00:00:34,860
after obtaining the proof Pi the

14
00:00:34,860 --> 00:00:39,360
verifier outputs either 0 or 1. now the

15
00:00:39,360 --> 00:00:41,219
protocol has to satisfy a few properties

16
00:00:41,219 --> 00:00:43,920
firstly it has to satisfy correctness

17
00:00:43,920 --> 00:00:46,920
that is if x is in the language L and W

18
00:00:46,920 --> 00:00:49,559
is a valid witness then V outputs one

19
00:00:49,559 --> 00:00:52,020
that is if the prover is honest then the

20
00:00:52,020 --> 00:00:54,420
verifier always outputs one next it

21
00:00:54,420 --> 00:00:56,699
should satisfy soundness that is if X is

22
00:00:56,699 --> 00:00:58,620
not in the language then the verify

23
00:00:58,620 --> 00:01:01,699
verifier outputs 0 with high probability

24
00:01:01,699 --> 00:01:04,019
finally it should also satisfy zero

25
00:01:04,019 --> 00:01:06,960
knowledge that is there exist is PPT or

26
00:01:06,960 --> 00:01:08,400
probabilistically polynomial time

27
00:01:08,400 --> 00:01:11,100
algorithm called simulator which

28
00:01:11,100 --> 00:01:12,540
computes

29
00:01:12,540 --> 00:01:15,240
uh simulated proof uh just given the

30
00:01:15,240 --> 00:01:17,580
statement X and the trapdoor for the CRS

31
00:01:17,580 --> 00:01:21,299
which is denoted by TD so this proof

32
00:01:21,299 --> 00:01:23,759
should be indistinguishable from an

33
00:01:23,759 --> 00:01:26,820
honestly generated proof

34
00:01:26,820 --> 00:01:30,780
next we need three additional properties

35
00:01:30,780 --> 00:01:33,840
from our music system firstly we need

36
00:01:33,840 --> 00:01:37,920
adaptive soundness in this system the in

37
00:01:37,920 --> 00:01:40,979
this game the proverb is corrupt and the

38
00:01:40,979 --> 00:01:43,259
challenge it samples the CRS and sells

39
00:01:43,259 --> 00:01:45,540
to the proverb now the prover can

40
00:01:45,540 --> 00:01:47,640
adaptively choose the statement X to be

41
00:01:47,640 --> 00:01:50,939
proven and it also computes a proof and

42
00:01:50,939 --> 00:01:53,159
uh then it sends the statement and the

43
00:01:53,159 --> 00:01:55,380
proof to the challenge and now the

44
00:01:55,380 --> 00:01:57,200
Challenger just runs the

45
00:01:57,200 --> 00:01:59,939
verified algorithm now adaptive

46
00:01:59,939 --> 00:02:01,860
soundness says that effects is not in

47
00:02:01,860 --> 00:02:03,659
the language then the Challenger output

48
00:02:03,659 --> 00:02:06,240
0 with very high probability that is a

49
00:02:06,240 --> 00:02:08,220
very far that is approver cannot break

50
00:02:08,220 --> 00:02:11,400
soundness even if uh the statement is

51
00:02:11,400 --> 00:02:13,500
adaptively chosen based on the CRS

52
00:02:13,500 --> 00:02:14,879
distribution

53
00:02:14,879 --> 00:02:17,360
next we ah

54
00:02:17,360 --> 00:02:20,239
we extend the same

55
00:02:20,239 --> 00:02:22,920
same argument for the zero knowledge

56
00:02:22,920 --> 00:02:26,819
game ah here we have a Simulator X who

57
00:02:26,819 --> 00:02:29,459
is given uh who interacts with the

58
00:02:29,459 --> 00:02:31,440
corrupt verifier now the cutoff verifier

59
00:02:31,440 --> 00:02:33,360
obtains the CRS and it adaptively

60
00:02:33,360 --> 00:02:36,780
chooses the statement X and sends to the

61
00:02:36,780 --> 00:02:38,580
simulator and the simulator again

62
00:02:38,580 --> 00:02:40,379
computes the simulated proof and this

63
00:02:40,379 --> 00:02:41,700
simulated proof should be

64
00:02:41,700 --> 00:02:43,739
indistinguishable from an honestly

65
00:02:43,739 --> 00:02:45,959
generated proof here the verifier is

66
00:02:45,959 --> 00:02:48,239
basically adaptively I can adaptively

67
00:02:48,239 --> 00:02:51,480
choose the statement X and the X has to

68
00:02:51,480 --> 00:02:53,940
be in the language and we say that a

69
00:02:53,940 --> 00:02:56,640
protocol is adaptively zero knowledge

70
00:02:56,640 --> 00:02:59,700
ah if the simulated proof is

71
00:02:59,700 --> 00:03:01,680
indistinguishable from a real proof even

72
00:03:01,680 --> 00:03:03,900
if the statement is chosen based on the

73
00:03:03,900 --> 00:03:06,860
CRS distribution

74
00:03:07,200 --> 00:03:08,940
next we consider the setting where the

75
00:03:08,940 --> 00:03:10,500
proofer can get adaptively corrupted

76
00:03:10,500 --> 00:03:12,659
after the protocol execution

77
00:03:12,659 --> 00:03:14,400
so here we again start off with the same

78
00:03:14,400 --> 00:03:16,620
simulator who has given the chapter to

79
00:03:16,620 --> 00:03:18,540
the CRS and it comes with a simulated

80
00:03:18,540 --> 00:03:20,940
proof and this proof is uh

81
00:03:20,940 --> 00:03:22,620
indistinguishable from honestly

82
00:03:22,620 --> 00:03:24,840
generated proof

83
00:03:24,840 --> 00:03:28,560
next ah the simulator is given the

84
00:03:28,560 --> 00:03:30,920
witness

85
00:03:30,920 --> 00:03:34,080
of the prover once approver gets adapted

86
00:03:34,080 --> 00:03:35,640
once the proverb gets adaptively

87
00:03:35,640 --> 00:03:37,440
corrupted now the simulator has to come

88
00:03:37,440 --> 00:03:40,640
up with the randomness

89
00:03:40,640 --> 00:03:43,500
that is used to generate that has been

90
00:03:43,500 --> 00:03:46,379
used to generate uh the proof such that

91
00:03:46,379 --> 00:03:49,019
the proof looks consistent

92
00:03:49,019 --> 00:03:52,319
ah with the witness following the honest

93
00:03:52,319 --> 00:03:54,180
proven algorithm to an adversarial

94
00:03:54,180 --> 00:03:56,519
verifier so here security against

95
00:03:56,519 --> 00:04:00,299
adaptive Corruptions says that uh the

96
00:04:00,299 --> 00:04:03,659
simulated proof and the witness and the

97
00:04:03,659 --> 00:04:07,680
randomness should be like consistent ah

98
00:04:07,680 --> 00:04:09,959
and they should be indistinguishable

99
00:04:09,959 --> 00:04:13,400
from a real one

100
00:04:13,500 --> 00:04:15,299
now we Define the notion of triply

101
00:04:15,299 --> 00:04:18,298
adaptive music here we require the

102
00:04:18,298 --> 00:04:20,279
native protocol to have all three

103
00:04:20,279 --> 00:04:21,779
properties that is adaptive soundness

104
00:04:21,779 --> 00:04:23,520
adaptive zero knowledge and adaptive

105
00:04:23,520 --> 00:04:24,419
security

106
00:04:24,419 --> 00:04:25,680
so

107
00:04:25,680 --> 00:04:30,060
ah this ah kind of ah crypto adaptive

108
00:04:30,060 --> 00:04:32,220
music provides realistic security

109
00:04:32,220 --> 00:04:34,380
guarantees because the proofer uses the

110
00:04:34,380 --> 00:04:37,020
same CRS to prove adaptively chosen

111
00:04:37,020 --> 00:04:39,660
statements and it also provides security

112
00:04:39,660 --> 00:04:42,540
against adaptive Corruptions so this is

113
00:04:42,540 --> 00:04:44,759
kind of very useful in real life

114
00:04:44,759 --> 00:04:48,419
applications where the party can get

115
00:04:48,419 --> 00:04:51,900
corrupted after some ex like after some

116
00:04:51,900 --> 00:04:54,540
point of time and still you get security

117
00:04:54,540 --> 00:04:57,720
and then finally we require uh UC

118
00:04:57,720 --> 00:05:01,080
security so that the same process CRS is

119
00:05:01,080 --> 00:05:03,360
reused for multiple sessions between

120
00:05:03,360 --> 00:05:05,699
different parties so it's and you can

121
00:05:05,699 --> 00:05:07,620
also like compose your native protocol

122
00:05:07,620 --> 00:05:12,360
inside your favorite uh MPC protocol

123
00:05:12,360 --> 00:05:15,120
now let's briefly uh check out the state

124
00:05:15,120 --> 00:05:17,699
of the art for triply adaptive music

125
00:05:17,699 --> 00:05:20,040
protocols so there is a seminal work by

126
00:05:20,040 --> 00:05:23,400
growth oskowski sahai so that work does

127
00:05:23,400 --> 00:05:24,900
not obtain adaptive soundness but it

128
00:05:24,900 --> 00:05:26,639
obtains adaptation knowledge and

129
00:05:26,639 --> 00:05:28,440
adaptive security against adaptive

130
00:05:28,440 --> 00:05:30,120
Corruptions and they are based on

131
00:05:30,120 --> 00:05:33,180
pairing ah they do not obtain adaptive

132
00:05:33,180 --> 00:05:36,660
Sounders because they are their CRS is

133
00:05:36,660 --> 00:05:39,120
in the is in the Dual mode sitting which

134
00:05:39,120 --> 00:05:42,060
is not compatible with adaptive

135
00:05:42,060 --> 00:05:44,280
soundness ah

136
00:05:44,280 --> 00:05:46,919
then there is another work by katsu Mata

137
00:05:46,919 --> 00:05:49,220
so they are also

138
00:05:49,220 --> 00:05:52,800
from pairings and they also fail to

139
00:05:52,800 --> 00:05:54,180
obtain adaptive soundness but they

140
00:05:54,180 --> 00:05:55,620
obtain adaptive zero knowledge and

141
00:05:55,620 --> 00:05:57,000
adaptive security

142
00:05:57,000 --> 00:05:59,220
then there was this work by a bay and

143
00:05:59,220 --> 00:06:03,120
fair which obtains 50 adaptivity ah but

144
00:06:03,120 --> 00:06:05,639
they require knowledge assumptions for

145
00:06:05,639 --> 00:06:07,440
their proof

146
00:06:07,440 --> 00:06:11,400
so we ah complete this picture by

147
00:06:11,400 --> 00:06:12,720
showing that we can obtain triple

148
00:06:12,720 --> 00:06:15,060
adaptive music protocol ah from standard

149
00:06:15,060 --> 00:06:18,720
assumptions like lwe or ddh plus LPN

150
00:06:18,720 --> 00:06:21,000
and we do not rely on any knowledge

151
00:06:21,000 --> 00:06:23,160
assumptions

152
00:06:23,160 --> 00:06:25,680
so uh to briefly go through our

153
00:06:25,680 --> 00:06:28,440
contributions we construct the first uh

154
00:06:28,440 --> 00:06:31,440
we first proposed a non-interactive UC

155
00:06:31,440 --> 00:06:34,020
commitment functionality if nikom here

156
00:06:34,020 --> 00:06:36,300
the parties can access the F9 com

157
00:06:36,300 --> 00:06:37,680
functionality locally for commitment

158
00:06:37,680 --> 00:06:40,199
generation and verification and the

159
00:06:40,199 --> 00:06:41,400
functionality also outputs the

160
00:06:41,400 --> 00:06:43,080
commitment string during the commit

161
00:06:43,080 --> 00:06:46,259
phase as a result uh this functionality

162
00:06:46,259 --> 00:06:49,620
is very friendly for MPC protocols it

163
00:06:49,620 --> 00:06:51,479
doesn't require any interaction between

164
00:06:51,479 --> 00:06:55,440
the parties uh and between the two

165
00:06:55,440 --> 00:06:57,120
parties during the commit phase or

166
00:06:57,120 --> 00:06:58,800
verification phase

167
00:06:58,800 --> 00:07:02,520
next we ah construct a triply adaptive

168
00:07:02,520 --> 00:07:05,940
music compiler how we do this by

169
00:07:05,940 --> 00:07:07,560
proposing the notion of critically

170
00:07:07,560 --> 00:07:09,900
adaptive Sigma protocol in F Nikon Model

171
00:07:09,900 --> 00:07:12,479
then we compile the above Sigma protocol

172
00:07:12,479 --> 00:07:15,120
to obtain triply adaptive music finally

173
00:07:15,120 --> 00:07:19,080
we use apply ah we finally we also show

174
00:07:19,080 --> 00:07:21,360
how to apply correlation interactivity

175
00:07:21,360 --> 00:07:23,460
for music arguments previously it was

176
00:07:23,460 --> 00:07:27,300
only known for music proofs or proof

177
00:07:27,300 --> 00:07:28,319
systems

178
00:07:28,319 --> 00:07:32,280
ah then we instantiate our compiler by

179
00:07:32,280 --> 00:07:33,840
showing that most Sigma protocols which

180
00:07:33,840 --> 00:07:35,520
are like commit and open are triple

181
00:07:35,520 --> 00:07:37,440
adaptive in the if Nikon Model and then

182
00:07:37,440 --> 00:07:39,539
we Implement F9 com with the kinety

183
00:07:39,539 --> 00:07:41,460
facial in commitment scheme

184
00:07:41,460 --> 00:07:44,639
and finally we obtain user security

185
00:07:44,639 --> 00:07:47,699
using generic or standard tricks from

186
00:07:47,699 --> 00:07:50,520
growth of surface or the literature

187
00:07:50,520 --> 00:07:53,160
ah thank you I hope to see you at the

188
00:07:53,160 --> 00:07:55,280
talk

