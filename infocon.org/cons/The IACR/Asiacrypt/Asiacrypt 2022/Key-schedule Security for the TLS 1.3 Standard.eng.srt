1
00:00:01,199 --> 00:00:04,680
key scheduled security for the TLs 1.3

2
00:00:04,680 --> 00:00:07,919
handshake let us start with the TLs

3
00:00:07,919 --> 00:00:10,580
handshake

4
00:00:10,920 --> 00:00:13,440
the tls1.3 Hendrick protocol is a key

5
00:00:13,440 --> 00:00:15,120
exchange protocol which allows the

6
00:00:15,120 --> 00:00:17,400
client and the server to agree on a

7
00:00:17,400 --> 00:00:20,400
symmetric key which they can then use to

8
00:00:20,400 --> 00:00:22,560
build a secure channel to authenticate

9
00:00:22,560 --> 00:00:26,400
and encrypt their communication

10
00:00:26,400 --> 00:00:28,740
and I will now focus on the handshake

11
00:00:28,740 --> 00:00:31,260
protocol so let me remove the secure

12
00:00:31,260 --> 00:00:32,700
Channel

13
00:00:32,700 --> 00:00:35,520
at the core of the tls1.3 handshake

14
00:00:35,520 --> 00:00:38,160
protocol is a one-sided authenticated

15
00:00:38,160 --> 00:00:40,559
diffie-hellman protocol so the client

16
00:00:40,559 --> 00:00:42,840
sends G to the X the server sends G to

17
00:00:42,840 --> 00:00:45,239
the Y and then Additionally the server

18
00:00:45,239 --> 00:00:48,180
sends a signature over G to the X and G

19
00:00:48,180 --> 00:00:51,020
to the Y and then both parties

20
00:00:51,020 --> 00:00:54,780
authenticate the transcript with a mix

21
00:00:54,780 --> 00:00:57,180
Additionally the client and the server

22
00:00:57,180 --> 00:00:59,520
might have appreciate key

23
00:00:59,520 --> 00:01:01,800
and if so then the client sends over the

24
00:01:01,800 --> 00:01:04,260
ID of this pre-shaped key and the binder

25
00:01:04,260 --> 00:01:06,659
value that binds the pre-shared key to

26
00:01:06,659 --> 00:01:08,159
the transcript

27
00:01:08,159 --> 00:01:10,260
and then the resulting session key

28
00:01:10,260 --> 00:01:13,560
should be secure if the psk was honest

29
00:01:13,560 --> 00:01:16,619
or the diffie-haven secret was honest so

30
00:01:16,619 --> 00:01:19,560
how does this work we first feed the psk

31
00:01:19,560 --> 00:01:21,060
into some deterministic function

32
00:01:21,060 --> 00:01:24,659
indicated by this pink error and then we

33
00:01:24,659 --> 00:01:27,960
run an extract function to get a new key

34
00:01:27,960 --> 00:01:29,040
value

35
00:01:29,040 --> 00:01:31,560
on which we apply this deterministic

36
00:01:31,560 --> 00:01:33,479
blue function and then additionally

37
00:01:33,479 --> 00:01:36,299
using a label and a transcript we derive

38
00:01:36,299 --> 00:01:37,740
the session key

39
00:01:37,740 --> 00:01:41,100
now the preset key can either come from

40
00:01:41,100 --> 00:01:43,979
some external application or it can be a

41
00:01:43,979 --> 00:01:45,900
resumption key which was derived in

42
00:01:45,900 --> 00:01:47,820
private session so in addition to the

43
00:01:47,820 --> 00:01:50,280
session key we also derive a resumption

44
00:01:50,280 --> 00:01:52,140
key and in fact we derive many other

45
00:01:52,140 --> 00:01:54,240
keys but I'll skip these in this

46
00:01:54,240 --> 00:01:55,560
overview

47
00:01:55,560 --> 00:01:58,380
so in our security analysis of the TLs

48
00:01:58,380 --> 00:02:00,840
103 key schedule we model the key

49
00:02:00,840 --> 00:02:02,820
schedule so we model key derivations not

50
00:02:02,820 --> 00:02:05,420
the protocol flow and the adversary

51
00:02:05,420 --> 00:02:08,340
chooses its own corrupted keys and heavy

52
00:02:08,340 --> 00:02:10,020
Hammond shares and it can extract the

53
00:02:10,020 --> 00:02:12,420
model to sample honest keys so this

54
00:02:12,420 --> 00:02:14,459
model is a strong version of selective

55
00:02:14,459 --> 00:02:16,739
corruption and additionally the

56
00:02:16,739 --> 00:02:18,720
addresser instructs the model to perform

57
00:02:18,720 --> 00:02:21,300
key derivations with adversarially

58
00:02:21,300 --> 00:02:23,459
chosen transcripts that have to satisfy

59
00:02:23,459 --> 00:02:26,300
some restrictions

60
00:02:26,700 --> 00:02:28,680
and in this model we prove that the

61
00:02:28,680 --> 00:02:31,080
session keys are pseudorandom and unique

62
00:02:31,080 --> 00:02:33,420
so the randomness holds if the last psk

63
00:02:33,420 --> 00:02:36,540
or DV helmet secret were honest and

64
00:02:36,540 --> 00:02:39,599
uniqueness also holds for all dishonest

65
00:02:39,599 --> 00:02:41,879
Keys which follows from the restrictions

66
00:02:41,879 --> 00:02:44,580
on the transcript

67
00:02:44,580 --> 00:02:47,400
in our security analysis we assume that

68
00:02:47,400 --> 00:02:49,680
the expand function is a pseudorandom

69
00:02:49,680 --> 00:02:52,260
function that the extract function is a

70
00:02:52,260 --> 00:02:54,300
dual pseudorandom function and

71
00:02:54,300 --> 00:02:55,680
additionally we assume Collision

72
00:02:55,680 --> 00:02:58,200
resistant on the expand function the

73
00:02:58,200 --> 00:03:00,420
extract function and the hash function

74
00:03:00,420 --> 00:03:02,400
involved in the protocol and

75
00:03:02,400 --> 00:03:04,440
additionally what our analysis brought

76
00:03:04,440 --> 00:03:07,260
to light was the need for The Salted

77
00:03:07,260 --> 00:03:10,500
Oracle diffie-hellon assumption which is

78
00:03:10,500 --> 00:03:12,480
an assumption where the adversary can

79
00:03:12,480 --> 00:03:14,760
choose the salt because here in this

80
00:03:14,760 --> 00:03:17,519
particle this pink function is a

81
00:03:17,519 --> 00:03:20,879
deterministic function of the pre-shared

82
00:03:20,879 --> 00:03:22,980
key so if the preset key is dishonest

83
00:03:22,980 --> 00:03:25,200
then the adversary has a lot of control

84
00:03:25,200 --> 00:03:27,360
over the salt that is used in this

85
00:03:27,360 --> 00:03:29,280
extraction step here

86
00:03:29,280 --> 00:03:31,500
for the prf assumptions and the

87
00:03:31,500 --> 00:03:33,720
Collision resistance we did not need to

88
00:03:33,720 --> 00:03:36,360
make agile assumptions that talk about

89
00:03:36,360 --> 00:03:38,159
relations between different algorithms

90
00:03:38,159 --> 00:03:40,500
but for the Salted Oracle Diffie helmets

91
00:03:40,500 --> 00:03:42,599
we did need to make an agile assumption

92
00:03:42,599 --> 00:03:44,879
because potentially from the same

93
00:03:44,879 --> 00:03:47,760
different secret one might extract with

94
00:03:47,760 --> 00:03:49,680
appreciate keys that use different

95
00:03:49,680 --> 00:03:51,360
algorithms

96
00:03:51,360 --> 00:03:53,280
I would like to conclude my presentation

97
00:03:53,280 --> 00:03:55,739
with a couple of afterthoughts on

98
00:03:55,739 --> 00:03:57,900
protocol modifications which would have

99
00:03:57,900 --> 00:04:00,060
made the analysis considerably easier

100
00:04:00,060 --> 00:04:02,640
and would have allowed us to rely on a

101
00:04:02,640 --> 00:04:05,580
weaker Oracle the V ham and assumption

102
00:04:05,580 --> 00:04:08,040
firstly it's very nice for the analysis

103
00:04:08,040 --> 00:04:10,319
to include the context early here by

104
00:04:10,319 --> 00:04:12,599
context I refer particularly to the

105
00:04:12,599 --> 00:04:14,819
resumption level and the diffie-hellman

106
00:04:14,819 --> 00:04:16,440
shares

107
00:04:16,440 --> 00:04:19,320
secondly it would be a good idea to

108
00:04:19,320 --> 00:04:20,880
extract from the Diffie Hammond secret

109
00:04:20,880 --> 00:04:23,280
first before mixing it with other

110
00:04:23,280 --> 00:04:24,660
secrets

111
00:04:24,660 --> 00:04:26,580
including the resumption level

112
00:04:26,580 --> 00:04:29,040
explicitly early on in the psk the

113
00:04:29,040 --> 00:04:31,139
variation prevents Collision attacks

114
00:04:31,139 --> 00:04:33,479
between resumption psks and external

115
00:04:33,479 --> 00:04:35,880
psks more directly than currently done

116
00:04:35,880 --> 00:04:38,699
in tis similarly extracting from

117
00:04:38,699 --> 00:04:41,340
diffie-hellman first and then including

118
00:04:41,340 --> 00:04:44,520
the diffie-hellman shares into the

119
00:04:44,520 --> 00:04:47,699
derivation allows to prevent Collision

120
00:04:47,699 --> 00:04:50,520
attacks for this kind of diffie-hellman

121
00:04:50,520 --> 00:04:52,979
additionally it would allow the analysis

122
00:04:52,979 --> 00:04:56,699
to rely on a less strong diffie-hellman

123
00:04:56,699 --> 00:04:59,180
assumption

