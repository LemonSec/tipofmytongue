1
00:00:00,780 --> 00:00:03,360
hello my name is Andre Alexander and

2
00:00:03,360 --> 00:00:04,980
this teaser is about State moisture

3
00:00:04,980 --> 00:00:06,180
application under changing Network

4
00:00:06,180 --> 00:00:08,039
conditions which is joint work with

5
00:00:08,039 --> 00:00:09,780
Erica Boone Jonathan Katz and Julian

6
00:00:09,780 --> 00:00:10,860
Ross

7
00:00:10,860 --> 00:00:12,420
so what is statement share application

8
00:00:12,420 --> 00:00:14,700
and why do we care about it sequential

9
00:00:14,700 --> 00:00:16,139
application protocols have recently

10
00:00:16,139 --> 00:00:17,820
received a considerable attention in the

11
00:00:17,820 --> 00:00:19,920
context of blockchain protocols as they

12
00:00:19,920 --> 00:00:22,020
specify how a set of parties can jointly

13
00:00:22,020 --> 00:00:24,060
agree on a continuous growing orders

14
00:00:24,060 --> 00:00:25,740
block of transactions

15
00:00:25,740 --> 00:00:27,900
this agreement should hold at all honest

16
00:00:27,900 --> 00:00:29,760
parties despite Byzantine parties in

17
00:00:29,760 --> 00:00:32,279
being involved in the protocol and say

18
00:00:32,279 --> 00:00:33,960
push replication is related to the top

19
00:00:33,960 --> 00:00:36,000
of Byzantine agreement but not subsumed

20
00:00:36,000 --> 00:00:38,040
by it as isn't an agreement enables the

21
00:00:38,040 --> 00:00:40,739
One-Shot agreement on a single band

22
00:00:40,739 --> 00:00:42,420
the network model has the same

23
00:00:42,420 --> 00:00:44,460
significant impact on the security and

24
00:00:44,460 --> 00:00:45,899
efficiency of State machine replication

25
00:00:45,899 --> 00:00:48,059
protocols and several models have been

26
00:00:48,059 --> 00:00:50,100
studied in the case where the network is

27
00:00:50,100 --> 00:00:51,660
synchronous stable sharification

28
00:00:51,660 --> 00:00:53,460
protocols have been proposed for a

29
00:00:53,460 --> 00:00:55,140
security threshold of n over two

30
00:00:55,140 --> 00:00:56,940
Corruptions when the network is

31
00:00:56,940 --> 00:00:58,680
asynchronous the toileted corruption

32
00:00:58,680 --> 00:01:01,680
threshold is n over 3. in this work we

33
00:01:01,680 --> 00:01:03,300
focus on what is called the network

34
00:01:03,300 --> 00:01:05,760
agnostic model where the network might

35
00:01:05,760 --> 00:01:07,500
be either synchronous or asynchronous

36
00:01:07,500 --> 00:01:09,080
without knowing the case in advance

37
00:01:09,080 --> 00:01:11,580
therefore we would like to design a

38
00:01:11,580 --> 00:01:14,100
state machine replication protocol which

39
00:01:14,100 --> 00:01:15,420
is secure regardless of the network

40
00:01:15,420 --> 00:01:17,580
State and targets potentially more

41
00:01:17,580 --> 00:01:19,200
Corruptions than the asynchronous case

42
00:01:19,200 --> 00:01:21,200
if the network is synchronous

43
00:01:21,200 --> 00:01:23,580
kilometer proves that the optimal

44
00:01:23,580 --> 00:01:25,500
threshold for next Network agnostic

45
00:01:25,500 --> 00:01:27,420
security between the toroid Corruptions

46
00:01:27,420 --> 00:01:29,100
in the synchronous case and the

47
00:01:29,100 --> 00:01:30,299
tolerated Corruptions in the

48
00:01:30,299 --> 00:01:34,020
asynchronous case is 2 times DS plus d a

49
00:01:34,020 --> 00:01:36,060
less than n the total number of parties

50
00:01:36,060 --> 00:01:38,159
the feasibility question has been

51
00:01:38,159 --> 00:01:40,619
answered positively before and we now

52
00:01:40,619 --> 00:01:42,000
ask whether we can achieve the same

53
00:01:42,000 --> 00:01:43,560
communication complexity as in the

54
00:01:43,560 --> 00:01:44,939
asynchronous case

55
00:01:44,939 --> 00:01:47,400
also what if the network is Moody and

56
00:01:47,400 --> 00:01:48,960
keeps changing from synchronous to

57
00:01:48,960 --> 00:01:51,180
asynchronous and vice versa but we don't

58
00:01:51,180 --> 00:01:52,860
know whether it stabilizes in a

59
00:01:52,860 --> 00:01:54,960
synchronous or an asynchronous state

60
00:01:54,960 --> 00:01:57,000
is a network transitions from

61
00:01:57,000 --> 00:01:58,680
synchronous to asynchronous and the

62
00:01:58,680 --> 00:02:00,720
adversary still holds control over TS

63
00:02:00,720 --> 00:02:02,939
parties and we lose security because of

64
00:02:02,939 --> 00:02:04,619
well-known impossibility results related

65
00:02:04,619 --> 00:02:06,840
to the asynchronous model so we need to

66
00:02:06,840 --> 00:02:08,340
assume that the corruption capability of

67
00:02:08,340 --> 00:02:10,080
the adversary also decreases when the

68
00:02:10,080 --> 00:02:12,120
network becomes asynchronous and that

69
00:02:12,120 --> 00:02:13,920
parties have the capability of rebooting

70
00:02:13,920 --> 00:02:15,720
and kicking out the adversary

71
00:02:15,720 --> 00:02:17,760
nevertheless the adversary will still

72
00:02:17,760 --> 00:02:19,500
know the states of the parties it has

73
00:02:19,500 --> 00:02:21,060
previously corrupted including whatever

74
00:02:21,060 --> 00:02:23,400
keys they have so the question is can we

75
00:02:23,400 --> 00:02:26,280
still get security under key exposures

76
00:02:26,280 --> 00:02:28,500
the agriculture for async on the state

77
00:02:28,500 --> 00:02:31,200
machine replication both for static and

78
00:02:31,200 --> 00:02:33,540
adaptive adversaries achieve a QB

79
00:02:33,540 --> 00:02:35,280
communication complexity when outputting

80
00:02:35,280 --> 00:02:37,379
and transactions this means a quadratic

81
00:02:37,379 --> 00:02:39,120
amortized communication complexity per

82
00:02:39,120 --> 00:02:41,099
transaction on the other hand the

83
00:02:41,099 --> 00:02:43,260
tardigrades Network agnostic protocol by

84
00:02:43,260 --> 00:02:45,420
Bloom at all for an Adaptive adversary

85
00:02:45,420 --> 00:02:47,400
has a higher total and amortized

86
00:02:47,400 --> 00:02:49,920
communication complexity if we relax the

87
00:02:49,920 --> 00:02:51,599
security assumption the static protocol

88
00:02:51,599 --> 00:02:53,940
upgrade can achieve a linear amortized

89
00:02:53,940 --> 00:02:55,860
communication cost per transaction but

90
00:02:55,860 --> 00:02:57,540
only when outputting a quadratic number

91
00:02:57,540 --> 00:02:59,640
of transactions which is very large

92
00:02:59,640 --> 00:03:02,099
so in this work we present two protocols

93
00:03:02,099 --> 00:03:03,180
that improve the state-of-the-art

94
00:03:03,180 --> 00:03:04,140
results

95
00:03:04,140 --> 00:03:06,780
update is adaptively secure for optimal

96
00:03:06,780 --> 00:03:08,400
corruption thresholds and has QB

97
00:03:08,400 --> 00:03:10,140
communication complexity for committing

98
00:03:10,140 --> 00:03:12,300
a block of and transactions this is an

99
00:03:12,300 --> 00:03:14,519
order of an improvement over tardigrade

100
00:03:14,519 --> 00:03:16,680
Upstate is statically secure for near

101
00:03:16,680 --> 00:03:18,959
optimal corruption thresholds and has

102
00:03:18,959 --> 00:03:20,700
quadratic communication complexity to

103
00:03:20,700 --> 00:03:22,379
commit wealth of n transactions

104
00:03:22,379 --> 00:03:24,180
obtaining a linear amortized

105
00:03:24,180 --> 00:03:26,519
communication for only and transactions

106
00:03:26,519 --> 00:03:28,319
we show that our Protocols are also

107
00:03:28,319 --> 00:03:29,879
secure when the network can transition

108
00:03:29,879 --> 00:03:32,280
between asynchronous and asynchronous

109
00:03:32,280 --> 00:03:34,319
behavior and that the adversary can be

110
00:03:34,319 --> 00:03:36,239
mobile between appbox but is limited to

111
00:03:36,239 --> 00:03:38,519
corrupting at most TS unique parts

112
00:03:38,519 --> 00:03:40,739
and also please note the name pass we

113
00:03:40,739 --> 00:03:43,440
thought very hard about them

114
00:03:43,440 --> 00:03:45,360
here is the roadmap of the paper and of

115
00:03:45,360 --> 00:03:46,860
the longer presentation at Asia cup

116
00:03:46,860 --> 00:03:49,560
2020. we first describe update which

117
00:03:49,560 --> 00:03:51,120
uses error correcting codes to reduce

118
00:03:51,120 --> 00:03:53,099
communication complexity and is based on

119
00:03:53,099 --> 00:03:55,440
two protocols work agreement and async

120
00:03:55,440 --> 00:03:57,299
business common subset which complement

121
00:03:57,299 --> 00:03:58,799
each other regardless of the network

122
00:03:58,799 --> 00:04:01,440
state we then briefly describe Upstate

123
00:04:01,440 --> 00:04:03,599
which is the statically secure version

124
00:04:03,599 --> 00:04:06,120
of update which with almost optimal

125
00:04:06,120 --> 00:04:08,700
corruption threshold which affects two

126
00:04:08,700 --> 00:04:10,560
types of smaller communities

127
00:04:10,560 --> 00:04:12,540
going forward we look at what happens

128
00:04:12,540 --> 00:04:14,459
when there can be arbitrary changes of

129
00:04:14,459 --> 00:04:16,320
the network State and the adversary can

130
00:04:16,320 --> 00:04:18,180
be mobile since our protocols use

131
00:04:18,180 --> 00:04:20,040
threshold crypto systems we look at the

132
00:04:20,040 --> 00:04:21,959
security of asynchronous proactive SQL

133
00:04:21,959 --> 00:04:23,400
sharing with refresh and prove that

134
00:04:23,400 --> 00:04:25,680
without future further restrictions it

135
00:04:25,680 --> 00:04:28,199
is impossible to achieve what divided by

136
00:04:28,199 --> 00:04:30,240
this negative result we constrain the

137
00:04:30,240 --> 00:04:32,699
adversaries capability to be mobile only

138
00:04:32,699 --> 00:04:34,440
inside the fixed set of parties and show

139
00:04:34,440 --> 00:04:35,880
that our protocols can achieve security

140
00:04:35,880 --> 00:04:37,680
despite key exposures

141
00:04:37,680 --> 00:04:39,600
finally we will outline some open

142
00:04:39,600 --> 00:04:41,280
problems

143
00:04:41,280 --> 00:04:44,960
thanks and hope to see you there

