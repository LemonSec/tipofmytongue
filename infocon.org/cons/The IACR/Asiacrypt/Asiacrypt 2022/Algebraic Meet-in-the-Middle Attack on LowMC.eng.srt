1
00:00:01,140 --> 00:00:02,100
okay

2
00:00:02,100 --> 00:00:04,860
hello everyone the title of this work is

3
00:00:04,860 --> 00:00:07,020
algebraic meet in a middle attack on low

4
00:00:07,020 --> 00:00:09,660
MC and Full Count Leo this is a joint

5
00:00:09,660 --> 00:00:12,360
work recently one williamier and

6
00:00:12,360 --> 00:00:15,299
takanoli isobe low MC is a very famous

7
00:00:15,299 --> 00:00:17,880
block Cipher it was proposed at a

8
00:00:17,880 --> 00:00:21,420
eurocrypt 2015 and is designed to be MPC

9
00:00:21,420 --> 00:00:24,900
fhe and DK friendly a notable feature of

10
00:00:24,900 --> 00:00:27,060
loam says that its parameters can be

11
00:00:27,060 --> 00:00:29,699
chosen in a flexible way including its

12
00:00:29,699 --> 00:00:31,740
offline layers the key schedule function

13
00:00:31,740 --> 00:00:35,160
and the number of Xboxes per round

14
00:00:35,160 --> 00:00:37,380
in this work we focus on the crypto

15
00:00:37,380 --> 00:00:40,140
analysis of flow MC and the previous

16
00:00:40,140 --> 00:00:42,960
results can be classified into four

17
00:00:42,960 --> 00:00:45,300
types and we focus on the third type

18
00:00:45,300 --> 00:00:48,239
where two children plane tests where two

19
00:00:48,239 --> 00:00:49,860
children plane test and a cipher test

20
00:00:49,860 --> 00:00:52,800
pairs can be obtained

21
00:00:52,800 --> 00:00:55,079
the attacks in this setting are related

22
00:00:55,079 --> 00:00:57,120
to the security proof of the picnic

23
00:00:57,120 --> 00:01:00,899
signature scheme and we improve the

24
00:01:00,899 --> 00:01:03,359
attacks and we improve the attack in

25
00:01:03,359 --> 00:01:05,519
this setting by proposing a new

26
00:01:05,519 --> 00:01:07,799
technique called algebraic meet in the

27
00:01:07,799 --> 00:01:09,360
middle attack

28
00:01:09,360 --> 00:01:12,119
to understand our attack it's necessary

29
00:01:12,119 --> 00:01:13,860
to First understand the difference in

30
00:01:13,860 --> 00:01:16,799
numeration Attack the its general idea

31
00:01:16,799 --> 00:01:19,080
is very simple first compute the

32
00:01:19,080 --> 00:01:21,479
improved and output difference Theta 0

33
00:01:21,479 --> 00:01:23,939
and Theta R according to the plane test

34
00:01:23,939 --> 00:01:27,540
Pairs and Cipher test pairs then at Step

35
00:01:27,540 --> 00:01:30,600
2 pre-compute and store all possible

36
00:01:30,600 --> 00:01:34,619
data I computed from Delta 0 and at step

37
00:01:34,619 --> 00:01:38,400
3 again we compute Delta I uh but from

38
00:01:38,400 --> 00:01:42,720
the r and for each compute data I find a

39
00:01:42,720 --> 00:01:45,360
match from the pre-computed table Once A

40
00:01:45,360 --> 00:01:48,180
match is found the trailer from the the

41
00:01:48,180 --> 00:01:51,060
chair from Theta 0 to Theta R is

42
00:01:51,060 --> 00:01:53,340
determined and the key can be computed

43
00:01:53,340 --> 00:01:55,140
from the trail

44
00:01:55,140 --> 00:01:57,840
so this is an illustration of the

45
00:01:57,840 --> 00:01:59,700
original difference enumeration attack

46
00:01:59,700 --> 00:02:02,100
framework it's a simple mid in the

47
00:02:02,100 --> 00:02:05,159
middle attack so according to the above

48
00:02:05,159 --> 00:02:08,220
uh description so the memory complexity

49
00:02:08,220 --> 00:02:11,220
is very high and exponential and it is

50
00:02:11,220 --> 00:02:14,099
exponential in R1

51
00:02:14,099 --> 00:02:18,300
to uh to reduce the memory complexity in

52
00:02:18,300 --> 00:02:20,060
crypto 2021

53
00:02:20,060 --> 00:02:22,800
algebraic method was proposed so

54
00:02:22,800 --> 00:02:25,400
different from the previous attack

55
00:02:25,400 --> 00:02:28,680
for a gaming challenge that are 0 plus

56
00:02:28,680 --> 00:02:31,980
Delta R1 instead of trying to find a

57
00:02:31,980 --> 00:02:35,400
match from uh from a huge precomputation

58
00:02:35,400 --> 00:02:38,940
table the attacker tries to solve a

59
00:02:38,940 --> 00:02:41,160
linear equation system to recover the

60
00:02:41,160 --> 00:02:43,260
difference transitions in the middle R1

61
00:02:43,260 --> 00:02:47,040
rounds however the max the maximum value

62
00:02:47,040 --> 00:02:51,360
of us one is limited in this attack so

63
00:02:51,360 --> 00:02:53,700
there are some problems left first how

64
00:02:53,700 --> 00:02:56,099
to further reduce the memory complexity

65
00:02:56,099 --> 00:02:58,080
of the original difference in numeration

66
00:02:58,080 --> 00:03:01,200
attack and second how to further extend

67
00:03:01,200 --> 00:03:04,680
R1 by using additional memory uh

68
00:03:04,680 --> 00:03:09,060
uh uh based on their text based on the

69
00:03:09,060 --> 00:03:13,140
techniques proposed at the crypto 2021

70
00:03:13,140 --> 00:03:15,959
so motivated by the two problems we

71
00:03:15,959 --> 00:03:18,000
propose the LG primitive in the middle

72
00:03:18,000 --> 00:03:21,120
attack the idea is very simple so

73
00:03:21,120 --> 00:03:24,599
different from the previous mean in the

74
00:03:24,599 --> 00:03:28,319
middle structures instead of a storing

75
00:03:28,319 --> 00:03:32,159
many values in a table we restore some

76
00:03:32,159 --> 00:03:35,220
restore many linear equations in a table

77
00:03:35,220 --> 00:03:37,920
and for a given challenge we try to find

78
00:03:37,920 --> 00:03:41,159
a linear equation system that can be

79
00:03:41,159 --> 00:03:43,860
matched from The Challenge that can be

80
00:03:43,860 --> 00:03:46,200
matched with the challenge so in this

81
00:03:46,200 --> 00:03:48,959
way it's obvious that we can reduce the

82
00:03:48,959 --> 00:03:53,040
memory complexity because uh some values

83
00:03:53,040 --> 00:03:54,360
are

84
00:03:54,360 --> 00:03:57,659
a solved as some values are computed by

85
00:03:57,659 --> 00:04:00,360
solving a linear equation system

86
00:04:00,360 --> 00:04:03,720
so this is our new attack framework

87
00:04:03,720 --> 00:04:06,900
and for the middle R1 rounds there will

88
00:04:06,900 --> 00:04:10,200
be two phases on offline offline phase

89
00:04:10,200 --> 00:04:12,900
and online phase as the offline phase

90
00:04:12,900 --> 00:04:16,139
will be compute some information and as

91
00:04:16,139 --> 00:04:19,139
the online phase for each for any given

92
00:04:19,139 --> 00:04:22,380
challenge that are 0 plus DOTA R1 we use

93
00:04:22,380 --> 00:04:25,380
the precomputed information to retrieve

94
00:04:25,380 --> 00:04:28,500
the corresponding equation system to

95
00:04:28,500 --> 00:04:31,199
recover the different transitions in the

96
00:04:31,199 --> 00:04:34,380
whole middle R1 runs with this technique

97
00:04:34,380 --> 00:04:37,320
the security margins of fluency are

98
00:04:37,320 --> 00:04:40,919
secretly reduced as can be seen from the

99
00:04:40,919 --> 00:04:43,139
last column of this table

100
00:04:43,139 --> 00:04:46,919
similarly for the pector cipherlo mcmv2

101
00:04:46,919 --> 00:04:49,919
the security margins are also signally

102
00:04:49,919 --> 00:04:51,540
reduced

103
00:04:51,540 --> 00:04:54,360
in summary we propose new algebraic

104
00:04:54,360 --> 00:04:56,520
attacks on low MC and the attacks are

105
00:04:56,520 --> 00:04:58,500
highly related to the feature of the

106
00:04:58,500 --> 00:05:00,419
part in a linear layer

107
00:05:00,419 --> 00:05:02,820
at last we want to mention an

108
00:05:02,820 --> 00:05:04,340
interesting problem

109
00:05:04,340 --> 00:05:08,460
it can refer to improve the attack for

110
00:05:08,460 --> 00:05:11,340
example can we extend R2

111
00:05:11,340 --> 00:05:14,539
that's all thank you

