1
00:00:00,000 --> 00:00:03,120
in this video I will give an overview of

2
00:00:03,120 --> 00:00:07,140
our paper optimizing rectangle attacks a

3
00:00:07,140 --> 00:00:10,320
unified and generic framework for key

4
00:00:10,320 --> 00:00:12,980
recovery

5
00:00:13,380 --> 00:00:16,619
rectangle attack is a chosen plane test

6
00:00:16,619 --> 00:00:20,279
variant or boomera attack which is a

7
00:00:20,279 --> 00:00:23,220
differential scale attack using two

8
00:00:23,220 --> 00:00:26,460
short differentials of high probability

9
00:00:26,460 --> 00:00:30,380
to construct the long run

10
00:00:32,520 --> 00:00:35,399
to mount a rectangle key recovery

11
00:00:35,399 --> 00:00:39,180
attacks as efficiently as possible for

12
00:00:39,180 --> 00:00:42,660
rectangle K recovery algorithms have

13
00:00:42,660 --> 00:00:45,059
been presented using four different

14
00:00:45,059 --> 00:00:48,420
kinds of sub-key guessing strategies

15
00:00:48,420 --> 00:00:51,420
however they are treated and separated

16
00:00:51,420 --> 00:00:54,059
once before

17
00:00:54,059 --> 00:00:57,360
in our paper we investigate the

18
00:00:57,360 --> 00:01:01,020
rectangle key recovery in depth and come

19
00:01:01,020 --> 00:01:04,080
up with a unified and generic rectangle

20
00:01:04,080 --> 00:01:06,720
key recovery algorithm

21
00:01:06,720 --> 00:01:09,299
supporting any possible attacking

22
00:01:09,299 --> 00:01:10,500
parameters

23
00:01:10,500 --> 00:01:13,740
which covers all the previous rectangle

24
00:01:13,740 --> 00:01:17,520
key recovery algorithms and unveils

25
00:01:17,520 --> 00:01:21,000
another five types of new attacks

26
00:01:21,000 --> 00:01:24,960
our basic idea is that any possible key

27
00:01:24,960 --> 00:01:27,900
guessing strategy should be allowed and

28
00:01:27,900 --> 00:01:30,479
that there must be a guessing strategy

29
00:01:30,479 --> 00:01:33,420
leading to Optimal complexities of the

30
00:01:33,420 --> 00:01:36,860
key recovery attack

31
00:01:38,100 --> 00:01:41,340
as a compliment we propose a framework

32
00:01:41,340 --> 00:01:44,420
to tell the best attacking parameters

33
00:01:44,420 --> 00:01:48,119
including the sub capits to be guessed

34
00:01:48,119 --> 00:01:52,439
our automatic framework is modular and

35
00:01:52,439 --> 00:01:56,280
flexible it takes the sets of parameters

36
00:01:56,280 --> 00:01:58,860
of a given Boomerang or rectangle

37
00:01:58,860 --> 00:02:01,140
distinguisher as input

38
00:02:01,140 --> 00:02:04,079
and then return the optimal parameters

39
00:02:04,079 --> 00:02:06,780
and the time complexity

40
00:02:06,780 --> 00:02:09,959
when we feed the parameters returned by

41
00:02:09,959 --> 00:02:13,620
this work to our key recovery algorithm

42
00:02:13,620 --> 00:02:16,920
the term complexity of the attack will

43
00:02:16,920 --> 00:02:19,640
be minimal

44
00:02:22,140 --> 00:02:25,260
to demonstrate the efficiency of our new

45
00:02:25,260 --> 00:02:28,980
key recovery algorithm we apply it to

46
00:02:28,980 --> 00:02:31,980
four block servers using existing

47
00:02:31,980 --> 00:02:35,239
distinguishers and obtain a series of

48
00:02:35,239 --> 00:02:37,680
improved results

49
00:02:37,680 --> 00:02:40,680
we give better attacks on turn around

50
00:02:40,680 --> 00:02:44,400
serpent improve some of the best attacks

51
00:02:44,400 --> 00:02:47,220
for skinny in previous works

52
00:02:47,220 --> 00:02:50,819
extend the rectangular attack on Craft

53
00:02:50,819 --> 00:02:54,599
by one round and give the first 19

54
00:02:54,599 --> 00:02:57,060
rounder attack

55
00:02:57,060 --> 00:03:01,560
and improve the 11 round rectangle

56
00:03:01,560 --> 00:03:04,379
attack and extend the boomerular attack

57
00:03:04,379 --> 00:03:07,860
by one round in the related key setting

58
00:03:07,860 --> 00:03:10,739
for Deoxys

59
00:03:10,739 --> 00:03:14,340
our results are summarized in the table

60
00:03:14,340 --> 00:03:17,159
and the results of this work are

61
00:03:17,159 --> 00:03:19,560
highlighted in the table

62
00:03:19,560 --> 00:03:23,220
according to these applications we found

63
00:03:23,220 --> 00:03:24,120
that

64
00:03:24,120 --> 00:03:26,720
the best attacking parameters differ

65
00:03:26,720 --> 00:03:29,580
significantly from those which were used

66
00:03:29,580 --> 00:03:32,280
in previous works

67
00:03:32,280 --> 00:03:35,580
and even the number of runs added around

68
00:03:35,580 --> 00:03:39,060
the distinguisher is different

69
00:03:39,060 --> 00:03:42,599
it is likely that previous rectangular

70
00:03:42,599 --> 00:03:45,739
text can be improved to some extent

71
00:03:45,739 --> 00:03:49,819
using our new key recovery algorithm

72
00:03:49,819 --> 00:03:54,060
besides we develop variants of the new

73
00:03:54,060 --> 00:03:57,860
key recovery algorithm for related texts

74
00:03:57,860 --> 00:04:02,580
including the case RB equals an variance

75
00:04:02,580 --> 00:04:04,920
for pulmonary attacks and the related

76
00:04:04,920 --> 00:04:07,879
case setting

77
00:04:09,060 --> 00:04:12,439
that's all thank you

