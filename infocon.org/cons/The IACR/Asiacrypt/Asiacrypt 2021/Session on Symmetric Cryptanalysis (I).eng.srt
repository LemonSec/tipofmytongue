1
00:00:02,080 --> 00:00:04,160
okay and please go ahead you're ready

2
00:00:04,160 --> 00:00:05,279
okay

3
00:00:05,279 --> 00:00:08,160
so yeah uh i'm kasich from minnesota

4
00:00:08,160 --> 00:00:10,880
operation to chair uh in the samantha

5
00:00:10,880 --> 00:00:14,799
sarkozy and we will uh serve uh of this

6
00:00:14,799 --> 00:00:15,759
session

7
00:00:15,759 --> 00:00:16,560
okay

8
00:00:16,560 --> 00:00:19,039
we have five talks and each talk will

9
00:00:19,039 --> 00:00:21,039
consist of a five minutes present a

10
00:00:21,039 --> 00:00:24,160
short presentation and a subsequent uh q

11
00:00:24,160 --> 00:00:27,359
a session uh probably in seven minutes

12
00:00:27,359 --> 00:00:31,359
but and you can uh ask

13
00:00:31,359 --> 00:00:34,160
you are expected to question to post a

14
00:00:34,160 --> 00:00:35,360
question on

15
00:00:35,360 --> 00:00:36,719
[Music]

16
00:00:36,719 --> 00:00:38,079
the lip

17
00:00:38,079 --> 00:00:40,719
as you can find from the website of the

18
00:00:40,719 --> 00:00:42,399
age of crypt

19
00:00:42,399 --> 00:00:45,360
and then we will assign the yeah we will

20
00:00:45,360 --> 00:00:48,160
ask the question to the presenter okay

21
00:00:48,160 --> 00:00:50,719
that's the yeah procedure so

22
00:00:50,719 --> 00:00:54,000
okay let's start with the first talk the

23
00:00:54,000 --> 00:00:56,879
the it is a title entitled as a

24
00:00:56,879 --> 00:01:00,039
practical key recovery attack on

25
00:01:00,039 --> 00:01:04,080
805 round tribune and chen dong yeah and

26
00:01:04,080 --> 00:01:06,479
the chanting and this chanting will give

27
00:01:06,479 --> 00:01:07,600
us a talk

28
00:01:07,600 --> 00:01:09,680
so please start

29
00:01:09,680 --> 00:01:12,400
okay i will give this laptop on our

30
00:01:12,400 --> 00:01:13,840
paper

31
00:01:13,840 --> 00:01:15,040
um

32
00:01:15,040 --> 00:01:17,759
this is the outline of this talk

33
00:01:17,759 --> 00:01:19,119
first let us

34
00:01:19,119 --> 00:01:21,920
briefly introduce trivia trivia is one

35
00:01:21,920 --> 00:01:23,920
of the html hardware or antenna

36
00:01:23,920 --> 00:01:25,280
finalists

37
00:01:25,280 --> 00:01:27,360
it was specified as the international

38
00:01:27,360 --> 00:01:28,400
standard

39
00:01:28,400 --> 00:01:30,720
both the key size and every size are 80

40
00:01:30,720 --> 00:01:31,680
bits

41
00:01:31,680 --> 00:01:34,000
the the size of the internal state is

42
00:01:34,000 --> 00:01:36,880
288

43
00:01:36,880 --> 00:01:39,360
this is an overview of the stream

44
00:01:39,360 --> 00:01:40,960
generation of

45
00:01:40,960 --> 00:01:42,479
trivia

46
00:01:42,479 --> 00:01:46,320
the internal state can be can consist of

47
00:01:46,320 --> 00:01:49,280
three non-near feedback shift registers

48
00:01:49,280 --> 00:01:52,399
the feedback functions are quadratic

49
00:01:52,399 --> 00:01:54,799
and the output bit is obtained by the

50
00:01:54,799 --> 00:01:57,439
exclusive odds of six speeds from the

51
00:01:57,439 --> 00:01:58,960
internal state

52
00:01:58,960 --> 00:02:02,079
before the first key stream fit

53
00:02:02,079 --> 00:02:03,600
the whole

54
00:02:03,600 --> 00:02:06,079
inter the whole

55
00:02:06,079 --> 00:02:08,720
state should be initialized

56
00:02:08,720 --> 00:02:09,878
for

57
00:02:09,878 --> 00:02:13,280
1152 rounds

58
00:02:13,840 --> 00:02:15,280
there are four

59
00:02:15,280 --> 00:02:18,239
important attacks on trivial they are

60
00:02:18,239 --> 00:02:20,480
cuba tax division property based cuba

61
00:02:20,480 --> 00:02:22,560
attacks correlation curvature and

62
00:02:22,560 --> 00:02:25,120
conditional differential attack

63
00:02:25,120 --> 00:02:29,360
in this talk we focus on cube attack

64
00:02:29,360 --> 00:02:31,280
we should do some basic tests of cube

65
00:02:31,280 --> 00:02:33,920
attacks in the cube attack against tree

66
00:02:33,920 --> 00:02:37,120
cipher the first output key stream fit

67
00:02:37,120 --> 00:02:39,840
is described by polynomial in key

68
00:02:39,840 --> 00:02:42,160
variables and every variable

69
00:02:42,160 --> 00:02:45,840
choose a subset i of every indexes

70
00:02:45,840 --> 00:02:46,800
then

71
00:02:46,800 --> 00:02:48,959
ci is a cube

72
00:02:48,959 --> 00:02:51,519
which is a set of assignments for every

73
00:02:51,519 --> 00:02:53,920
variable consisting of the two to dm

74
00:02:53,920 --> 00:02:57,040
tuples in which the variables indexed by

75
00:02:57,040 --> 00:02:59,519
i are active variables

76
00:02:59,519 --> 00:03:01,760
which means they are assigned to all the

77
00:03:01,760 --> 00:03:04,560
possible combinations of 0 and 1 while

78
00:03:04,560 --> 00:03:06,560
all the other iv variables are assigned

79
00:03:06,560 --> 00:03:10,000
to 0 or some fix the constant

80
00:03:10,000 --> 00:03:13,360
then the summation of the function f on

81
00:03:13,360 --> 00:03:16,239
the cube ci will give the super quality

82
00:03:16,239 --> 00:03:20,000
of ci on key variables

83
00:03:20,000 --> 00:03:23,040
there are two states in the cube attack

84
00:03:23,040 --> 00:03:25,760
ones of life phrase which is independent

85
00:03:25,760 --> 00:03:28,239
of the secret key the other is online

86
00:03:28,239 --> 00:03:30,720
phase in online phase we will solve the

87
00:03:30,720 --> 00:03:33,840
system of equations define

88
00:03:33,840 --> 00:03:35,920
key variables

89
00:03:35,920 --> 00:03:37,599
in the overlap phase

90
00:03:37,599 --> 00:03:38,720
the main

91
00:03:38,720 --> 00:03:41,920
aim is finding some useful superpowers

92
00:03:41,920 --> 00:03:44,000
in secret key variables

93
00:03:44,000 --> 00:03:46,640
and then the most important step is by

94
00:03:46,640 --> 00:03:49,280
the use of super products in the offline

95
00:03:49,280 --> 00:03:50,319
phase

96
00:03:50,319 --> 00:03:52,319
then there are two basic problems in

97
00:03:52,319 --> 00:03:54,959
cuba attacks one is how to find a good

98
00:03:54,959 --> 00:03:55,760
cube

99
00:03:55,760 --> 00:03:58,720
here a good kill means the super party

100
00:03:58,720 --> 00:04:00,560
is low degree

101
00:04:00,560 --> 00:04:01,840
of balance

102
00:04:01,840 --> 00:04:04,799
and the other and the second problem is

103
00:04:04,799 --> 00:04:07,439
how to recover the a f of the superpower

104
00:04:07,439 --> 00:04:08,959
for a given cube

105
00:04:08,959 --> 00:04:11,040
and there are many words on

106
00:04:11,040 --> 00:04:14,159
how to recover the accurate amf of the

107
00:04:14,159 --> 00:04:16,079
super party

108
00:04:16,079 --> 00:04:18,478
according to how you recover the super

109
00:04:18,478 --> 00:04:20,639
probably the cube attacks generally are

110
00:04:20,639 --> 00:04:23,360
divided into two types one is

111
00:04:23,360 --> 00:04:25,440
experimental cube attack and the other

112
00:04:25,440 --> 00:04:28,080
is division property based cube attacks

113
00:04:28,080 --> 00:04:30,720
in experimental cube attack superpolice

114
00:04:30,720 --> 00:04:33,520
are recovered by probabilistic

115
00:04:33,520 --> 00:04:35,840
probabilistic tests such as the new

116
00:04:35,840 --> 00:04:38,960
neurology test and the quadratic test

117
00:04:38,960 --> 00:04:40,960
while individual property based people

118
00:04:40,960 --> 00:04:43,520
attack this the party is recovered by

119
00:04:43,520 --> 00:04:45,919
division property

120
00:04:45,919 --> 00:04:48,880
after crypto 2017

121
00:04:48,880 --> 00:04:51,040
toto first introduced the dividend

122
00:04:51,040 --> 00:04:52,560
property into the

123
00:04:52,560 --> 00:04:55,360
cube attack against the street staffer

124
00:04:55,360 --> 00:04:59,919
um but before euro cube 2000

125
00:04:59,919 --> 00:05:01,759
how introduced the

126
00:05:01,759 --> 00:05:05,280
three subset division property

127
00:05:05,280 --> 00:05:09,520
the accurate super the accuracy property

128
00:05:09,520 --> 00:05:11,759
could be recovered by division property

129
00:05:11,759 --> 00:05:15,120
since europe 2000

130
00:05:15,120 --> 00:05:17,360
which means that we could recover the

131
00:05:17,360 --> 00:05:18,560
accurate

132
00:05:18,560 --> 00:05:21,360
super product by division poverty using

133
00:05:21,360 --> 00:05:23,600
three subsidy division property without

134
00:05:23,600 --> 00:05:25,919
unknown subset

135
00:05:25,919 --> 00:05:27,360
now we have

136
00:05:27,360 --> 00:05:29,039
i think how to

137
00:05:29,039 --> 00:05:32,479
recover superpolice well established in

138
00:05:32,479 --> 00:05:33,759
cuba attacks

139
00:05:33,759 --> 00:05:36,240
at this stage it is difficult both for

140
00:05:36,240 --> 00:05:38,160
experimental cube attacks and division

141
00:05:38,160 --> 00:05:40,160
property-based tuber tanks to recover

142
00:05:40,160 --> 00:05:42,400
lots of superpolis with randomly

143
00:05:42,400 --> 00:05:44,400
selected cubes

144
00:05:44,400 --> 00:05:47,440
for experimental tuber taxing a cube of

145
00:05:47,440 --> 00:05:50,000
size larger than 40 is very time

146
00:05:50,000 --> 00:05:51,199
consuming

147
00:05:51,199 --> 00:05:53,680
and you need to test a lot of

148
00:05:53,680 --> 00:05:56,720
cubes to find one useful one

149
00:05:56,720 --> 00:05:58,880
for three subset division property based

150
00:05:58,880 --> 00:06:01,680
cube attacks and though you could treat

151
00:06:01,680 --> 00:06:04,479
light cube size the speed is mainly

152
00:06:04,479 --> 00:06:06,319
decided by the scale of the super

153
00:06:06,319 --> 00:06:07,759
protein

154
00:06:07,759 --> 00:06:12,639
for random cube it is still very large

155
00:06:12,960 --> 00:06:15,120
to further improve efficiency and

156
00:06:15,120 --> 00:06:17,280
increase the number of rounds vulnerable

157
00:06:17,280 --> 00:06:20,240
to turbotax we need an effective method

158
00:06:20,240 --> 00:06:24,880
to construct useful and good cubes

159
00:06:24,880 --> 00:06:27,520
our aim of this paper is to construct

160
00:06:27,520 --> 00:06:31,520
cubes for recovery linear superpolis

161
00:06:31,520 --> 00:06:33,840
and the main idea is starting from set

162
00:06:33,840 --> 00:06:37,120
of two variables indexed by i and extend

163
00:06:37,120 --> 00:06:41,919
i to be a large candidate cube indexes

164
00:06:42,560 --> 00:06:44,319
in this paper there are three main

165
00:06:44,319 --> 00:06:47,440
algorithms one f y is an enzyme to

166
00:06:47,440 --> 00:06:50,160
predict the prevalent speed for given

167
00:06:50,160 --> 00:06:53,680
one the second is a heuristic evidence

168
00:06:53,680 --> 00:06:56,400
to construct candidate tubes the third

169
00:06:56,400 --> 00:06:58,560
one is to improve the tubules

170
00:06:58,560 --> 00:07:03,039
transformation to restorative complexity

171
00:07:03,039 --> 00:07:06,240
for start to construct a start cube size

172
00:07:06,240 --> 00:07:07,759
we observe that

173
00:07:07,759 --> 00:07:10,400
the output phase is a

174
00:07:10,400 --> 00:07:13,199
exclusive of 6 bits from the internal

175
00:07:13,199 --> 00:07:15,680
state if a qc has an immediate

176
00:07:15,680 --> 00:07:18,000
superpower then it is likely only one of

177
00:07:18,000 --> 00:07:19,840
the six terms works

178
00:07:19,840 --> 00:07:22,080
and the other five terms contribute

179
00:07:22,080 --> 00:07:25,840
contact zero this is because um for

180
00:07:25,840 --> 00:07:28,160
cube attacks against trivial

181
00:07:28,160 --> 00:07:30,720
the linear superpower is very sparse

182
00:07:30,720 --> 00:07:32,240
usually only

183
00:07:32,240 --> 00:07:33,919
one variable

184
00:07:33,919 --> 00:07:36,479
then we give an exam to predict the

185
00:07:36,479 --> 00:07:38,639
preference speed

186
00:07:38,639 --> 00:07:42,240
uh assume s 66 is a preference speed

187
00:07:42,240 --> 00:07:45,039
then we write its feedback function

188
00:07:45,039 --> 00:07:47,919
and then come back to the time stance t

189
00:07:47,919 --> 00:07:49,840
minus 66

190
00:07:49,840 --> 00:07:52,479
choose a set of q variables indexed by i

191
00:07:52,479 --> 00:07:55,280
and search sum of its sub cubes to find

192
00:07:55,280 --> 00:07:56,879
the cube with the nearness of the

193
00:07:56,879 --> 00:07:58,800
produce either in

194
00:07:58,800 --> 00:07:59,919
s2

195
00:07:59,919 --> 00:08:05,280
86 or in s2 8 7

196
00:08:05,280 --> 00:08:08,479
6 cube is a starting cube set

197
00:08:08,479 --> 00:08:11,599
then we extend a starting cube to a

198
00:08:11,599 --> 00:08:12,879
large cube

199
00:08:12,879 --> 00:08:15,120
first and every variable to i which

200
00:08:15,120 --> 00:08:16,800
makes the degree of the super body

201
00:08:16,800 --> 00:08:19,599
decrease as fast as possible then we

202
00:08:19,599 --> 00:08:21,520
find that sometimes

203
00:08:21,520 --> 00:08:24,319
the degree jumps from turn suddenly to

204
00:08:24,319 --> 00:08:28,000
zero then we come back and add an every

205
00:08:28,000 --> 00:08:30,800
variable to i which decrease the degree

206
00:08:30,800 --> 00:08:33,279
of the super body as slowly as possible

207
00:08:33,279 --> 00:08:35,839
make it to

208
00:08:35,839 --> 00:08:37,039
near

209
00:08:37,039 --> 00:08:40,320
degree one a linear superpower

210
00:08:40,320 --> 00:08:42,320
uh as for the improved mobile

211
00:08:42,320 --> 00:08:43,760
transformation

212
00:08:43,760 --> 00:08:47,279
uh actually we do not to make a a cube

213
00:08:47,279 --> 00:08:50,399
attack we do not need a whole mobile the

214
00:08:50,399 --> 00:08:52,480
whole uh juice table

215
00:08:52,480 --> 00:08:56,399
uh because we only use large cubes so

216
00:08:56,399 --> 00:08:58,320
cube of size 40

217
00:08:58,320 --> 00:08:59,600
maybe

218
00:08:59,600 --> 00:09:04,000
cubes whose size over 38 may be useful

219
00:09:04,000 --> 00:09:07,279
the other cubes are not useful so we

220
00:09:07,279 --> 00:09:08,560
proposed to

221
00:09:08,560 --> 00:09:10,320
breaking the original movie

222
00:09:10,320 --> 00:09:12,800
transformation into two states

223
00:09:12,800 --> 00:09:15,519
first we will treat several

224
00:09:15,519 --> 00:09:18,560
sub functions and only keep useful

225
00:09:18,560 --> 00:09:21,199
information

226
00:09:21,519 --> 00:09:25,279
uh when we applied our method to trivial

227
00:09:25,279 --> 00:09:27,279
we find more than one thousand cubes

228
00:09:27,279 --> 00:09:29,600
with numerous superpolis in output of

229
00:09:29,600 --> 00:09:32,480
eight zero five round trivial

230
00:09:32,480 --> 00:09:35,680
and there are 38 independent ponies

231
00:09:35,680 --> 00:09:38,800
could be used to recover key information

232
00:09:38,800 --> 00:09:41,279
we also find the 16 million super penny

233
00:09:41,279 --> 00:09:45,360
for 806 round trivia by only sliding

234
00:09:45,360 --> 00:09:49,600
sliding the cubes for 8.05

235
00:09:49,600 --> 00:09:52,399
this is a summary of the cube attacks on

236
00:09:52,399 --> 00:09:54,399
experimental cubot times individual

237
00:09:54,399 --> 00:09:57,519
property cubed based cube attacks and we

238
00:09:57,519 --> 00:10:00,320
can see that for experimental kubernetes

239
00:10:00,320 --> 00:10:02,480
the complexity is low

240
00:10:02,480 --> 00:10:04,560
well for division property based cube

241
00:10:04,560 --> 00:10:09,359
attack the number one is very high

242
00:10:10,240 --> 00:10:12,399
on the main contribution of this paper

243
00:10:12,399 --> 00:10:15,120
is a new cube construction exam together

244
00:10:15,120 --> 00:10:17,839
with some heuristic new ideas on this

245
00:10:17,839 --> 00:10:18,880
topic

246
00:10:18,880 --> 00:10:21,120
after a candidate cube was obtained

247
00:10:21,120 --> 00:10:23,760
either new build transformation all

248
00:10:23,760 --> 00:10:25,680
three subset division property could be

249
00:10:25,680 --> 00:10:28,160
used to recover super police

250
00:10:28,160 --> 00:10:30,160
and the reason why we finally use a

251
00:10:30,160 --> 00:10:31,920
mobile transformation to cover

252
00:10:31,920 --> 00:10:34,720
superpolis that a large number of sub

253
00:10:34,720 --> 00:10:37,440
cubes could be tested simultaneously

254
00:10:37,440 --> 00:10:39,360
well three subset division property

255
00:10:39,360 --> 00:10:43,440
trees superpowers just one by one

256
00:10:43,440 --> 00:10:45,920
thanks for your attention this is my

257
00:10:45,920 --> 00:10:48,160
thought

258
00:10:48,240 --> 00:10:50,079
thanks for your talk so

259
00:10:50,079 --> 00:10:52,079
let's move to the uh

260
00:10:52,079 --> 00:10:54,480
to another session so if you have any

261
00:10:54,480 --> 00:10:55,760
question

262
00:10:55,760 --> 00:10:57,200
please

263
00:10:57,200 --> 00:11:00,959
post it to the sleep

264
00:11:00,959 --> 00:11:05,040
currently we received no questions so

265
00:11:05,040 --> 00:11:07,120
far

266
00:11:07,120 --> 00:11:10,120
yes

267
00:11:15,680 --> 00:11:18,240
so maybe my understanding is very basic

268
00:11:18,240 --> 00:11:21,120
so my gen my question i i'd like to have

269
00:11:21,120 --> 00:11:23,600
a very general question

270
00:11:23,600 --> 00:11:24,880
so

271
00:11:24,880 --> 00:11:26,880
do you think the your technique can be

272
00:11:26,880 --> 00:11:29,279
applied to other

273
00:11:29,279 --> 00:11:32,800
uh lfsl based stream ciphers or it's

274
00:11:32,800 --> 00:11:36,399
very specific to trivium

275
00:11:36,560 --> 00:11:37,020
um

276
00:11:37,020 --> 00:11:38,399
[Music]

277
00:11:38,399 --> 00:11:41,200
i think some of the techniques could be

278
00:11:41,200 --> 00:11:43,040
used to other

279
00:11:43,040 --> 00:11:45,440
lifestyle-based stress efforts such as

280
00:11:45,440 --> 00:11:48,160
the improved mobile transformation

281
00:11:48,160 --> 00:11:49,440
and the

282
00:11:49,440 --> 00:11:52,560
idea of extend extended

283
00:11:52,560 --> 00:11:55,760
a small cube to a large cube

284
00:11:55,760 --> 00:11:59,440
but for the starting cubesat i think

285
00:11:59,440 --> 00:12:01,680
it is specified for trivial because

286
00:12:01,680 --> 00:12:03,200
trivial is a

287
00:12:03,200 --> 00:12:06,480
linear output function

288
00:12:07,360 --> 00:12:09,360
thank you

289
00:12:09,360 --> 00:12:12,320
uh well i have a question uh tian

290
00:12:12,320 --> 00:12:14,320
so uh how did this yeah how did you get

291
00:12:14,320 --> 00:12:15,839
the first cube

292
00:12:15,839 --> 00:12:17,920
it's you run for many experiments and

293
00:12:17,920 --> 00:12:20,160
then you chose one of them or

294
00:12:20,160 --> 00:12:21,600
the first one

295
00:12:21,600 --> 00:12:26,399
yeah the first what what i i did not

296
00:12:26,399 --> 00:12:29,279
the cube that you started with

297
00:12:29,279 --> 00:12:32,000
or the cube i start with okay

298
00:12:32,000 --> 00:12:33,680
could you see my slide

299
00:12:33,680 --> 00:12:34,639
yep

300
00:12:34,639 --> 00:12:36,079
yeah um

301
00:12:36,079 --> 00:12:38,959
for example we first to predict the

302
00:12:38,959 --> 00:12:40,720
preference speed

303
00:12:40,720 --> 00:12:42,800
the preference speed is one of the six

304
00:12:42,800 --> 00:12:44,399
speed

305
00:12:44,399 --> 00:12:44,710
um

306
00:12:44,710 --> 00:12:46,160
[Music]

307
00:12:46,160 --> 00:12:50,160
assume s 66 is a preference bit

308
00:12:50,160 --> 00:12:53,800
then we write the feedback function of

309
00:12:53,800 --> 00:12:57,680
s66 at the time is times t the time is

310
00:12:57,680 --> 00:13:00,959
times t is the round you want to attack

311
00:13:00,959 --> 00:13:04,079
then it's it is expressed by the

312
00:13:04,079 --> 00:13:07,839
internal state of t minus 66

313
00:13:07,839 --> 00:13:09,920
you can see that there is only one

314
00:13:09,920 --> 00:13:11,600
projected term

315
00:13:11,600 --> 00:13:14,000
so the cube must be

316
00:13:14,000 --> 00:13:17,440
should be come from this quadratic term

317
00:13:17,440 --> 00:13:21,360
then a cube if a cube is a c linear has

318
00:13:21,360 --> 00:13:26,240
a linear super body as s 66 then

319
00:13:26,240 --> 00:13:29,200
it is it is necessary that some of the

320
00:13:29,200 --> 00:13:30,720
sub cubes

321
00:13:30,720 --> 00:13:35,320
should have linear super body um as

322
00:13:35,320 --> 00:13:37,959
286 or as

323
00:13:37,959 --> 00:13:43,360
287 at the time extends t minus 66

324
00:13:43,360 --> 00:13:46,399
and there are many sidestep cubes i just

325
00:13:46,399 --> 00:13:49,680
randomly choose one one of them

326
00:13:49,680 --> 00:13:52,959
yeah got it thanks

327
00:13:54,399 --> 00:13:57,199
okay if you have no more questions uh

328
00:13:57,199 --> 00:14:00,160
let's move to the next talk so thanks

329
00:14:00,160 --> 00:14:03,680
for your talking you're welcome

330
00:14:03,680 --> 00:14:07,600
okay the next talk is algebraic attacks

331
00:14:07,600 --> 00:14:10,079
on raster and the duster using low

332
00:14:10,079 --> 00:14:11,040
degree

333
00:14:11,040 --> 00:14:13,360
equations and uh

334
00:14:13,360 --> 00:14:16,399
written by lukanu something soccer with

335
00:14:16,399 --> 00:14:18,639
mayor takano isobe and the fukan will

336
00:14:18,639 --> 00:14:21,440
give us a talk

337
00:14:24,880 --> 00:14:28,040
i think

338
00:14:32,720 --> 00:14:34,480
can you see my slide

339
00:14:34,480 --> 00:14:37,920
yes but in you could you uh could you do

340
00:14:37,920 --> 00:14:41,279
a free full screen mode

341
00:14:41,839 --> 00:14:43,760
okay hit okay

342
00:14:43,760 --> 00:14:44,880
yes

343
00:14:44,880 --> 00:14:46,480
okay thanks for the

344
00:14:46,480 --> 00:14:49,279
introduction the title of this part is

345
00:14:49,279 --> 00:14:51,680
algebraic attacks on asta and dasta

346
00:14:51,680 --> 00:14:54,320
using low degree equations

347
00:14:54,320 --> 00:14:57,279
so asta is a fully homomorphic

348
00:14:57,279 --> 00:14:59,120
encryption friendly symmetrically

349
00:14:59,120 --> 00:15:02,320
primitive proposed and crypto 2018.

350
00:15:02,320 --> 00:15:04,720
so this is a new trend to design such

351
00:15:04,720 --> 00:15:06,000
primitives

352
00:15:06,000 --> 00:15:06,800
and

353
00:15:06,800 --> 00:15:10,800
design the the aim of astr is to

354
00:15:10,800 --> 00:15:13,440
achieve low end depth and and gate

355
00:15:13,440 --> 00:15:15,760
simulate simultaneously

356
00:15:15,760 --> 00:15:18,560
an important feature of astar is that

357
00:15:18,560 --> 00:15:21,120
the fine layers are different for each

358
00:15:21,120 --> 00:15:24,000
to be encrypted plan test block in other

359
00:15:24,000 --> 00:15:26,800
words each key stream is generated with

360
00:15:26,800 --> 00:15:29,360
a different concrete asta instance

361
00:15:29,360 --> 00:15:32,000
specifically we can see from this figure

362
00:15:32,000 --> 00:15:35,040
the n-bit key stream z is generated with

363
00:15:35,040 --> 00:15:36,320
different

364
00:15:36,320 --> 00:15:38,880
m bit of fine layers a while the

365
00:15:38,880 --> 00:15:42,160
non-linear layer s is fixed which is the

366
00:15:42,160 --> 00:15:44,480
n-bit tile operation note that the

367
00:15:44,480 --> 00:15:46,560
calibration the file bit power operation

368
00:15:46,560 --> 00:15:50,000
is already used in the catalog function

369
00:15:50,000 --> 00:15:51,680
the designers proposed several

370
00:15:51,680 --> 00:15:54,160
parameters for our star you can see from

371
00:15:54,160 --> 00:15:57,360
this table that the key size n is much

372
00:15:57,360 --> 00:15:59,920
larger than the claimed security level

373
00:15:59,920 --> 00:16:02,800
copper in addition you can also observe

374
00:16:02,800 --> 00:16:04,959
that the number of rounds is very small

375
00:16:04,959 --> 00:16:09,040
from four runs to six runs you know dc

376
00:16:09,040 --> 00:16:11,279
the designers also proposed three

377
00:16:11,279 --> 00:16:13,680
aggressive versions of faster called hr

378
00:16:13,680 --> 00:16:16,240
star where the key size is almost the

379
00:16:16,240 --> 00:16:18,959
same with the calendar security level

380
00:16:18,959 --> 00:16:20,800
and the number of rounds is still small

381
00:16:20,800 --> 00:16:22,959
from four rounds to five rounds

382
00:16:22,959 --> 00:16:24,639
now uh

383
00:16:24,639 --> 00:16:26,160
before this works

384
00:16:26,160 --> 00:16:28,079
there is no attack can break any of

385
00:16:28,079 --> 00:16:30,000
these ciphers

386
00:16:30,000 --> 00:16:32,720
including asta and hr star

387
00:16:32,720 --> 00:16:34,959
so to analyze asta there are some

388
00:16:34,959 --> 00:16:37,519
challenging problems first it behaves

389
00:16:37,519 --> 00:16:40,000
like a moving target second the

390
00:16:40,000 --> 00:16:41,680
traditional techniques are failed

391
00:16:41,680 --> 00:16:44,399
because they're required to collect many

392
00:16:44,399 --> 00:16:46,959
appliances ciphertext spares and a fixed

393
00:16:46,959 --> 00:16:50,560
encryption instance however after uh

394
00:16:50,560 --> 00:16:53,600
each inc each plaintext cipher test pair

395
00:16:53,600 --> 00:16:56,800
is obtained under a different encryption

396
00:16:56,800 --> 00:16:58,480
instance for ourselves so this is the

397
00:16:58,480 --> 00:17:00,480
difficulty however there are also some

398
00:17:00,480 --> 00:17:03,040
exploitable features first the degree of

399
00:17:03,040 --> 00:17:05,280
the run function is very small it's only

400
00:17:05,280 --> 00:17:07,839
two seconds the number of rounds is also

401
00:17:07,839 --> 00:17:10,559
very small third the there is a feed

402
00:17:10,559 --> 00:17:13,760
forward operation which implies a mid in

403
00:17:13,760 --> 00:17:16,079
the middle style attack may work

404
00:17:16,079 --> 00:17:18,400
the designers are obviously aware of

405
00:17:18,400 --> 00:17:20,559
these features indeed they chose the

406
00:17:20,559 --> 00:17:23,280
parameters by considering the resistance

407
00:17:23,280 --> 00:17:25,359
against the linear ratio attacks

408
00:17:25,359 --> 00:17:29,840
specifically a week of the mbt stream z

409
00:17:29,840 --> 00:17:32,559
can be written as nonlinear expressions

410
00:17:32,559 --> 00:17:35,679
in terms of the n-bit key

411
00:17:35,679 --> 00:17:37,679
whose degree the degree and the degree

412
00:17:37,679 --> 00:17:39,840
of these expressions is upper bounded by

413
00:17:39,840 --> 00:17:42,720
2 to the r because the noun the degree

414
00:17:42,720 --> 00:17:46,840
of the round function is 2.

415
00:17:46,880 --> 00:17:49,039
the linear the complexity of the linear

416
00:17:49,039 --> 00:17:51,360
ratio attacks is directly related to the

417
00:17:51,360 --> 00:17:53,840
number of variables and the degree

418
00:17:53,840 --> 00:17:56,640
so to improve the attack we have to

419
00:17:56,640 --> 00:18:00,400
reduce the degree while keeping the the

420
00:18:00,400 --> 00:18:02,799
the number of variables the same so i

421
00:18:02,799 --> 00:18:05,200
asked the i mean so we should still

422
00:18:05,200 --> 00:18:07,280
treat the keyboard the keyboards as

423
00:18:07,280 --> 00:18:10,160
variables so how to reduce the degree of

424
00:18:10,160 --> 00:18:12,000
the equations

425
00:18:12,000 --> 00:18:14,400
one may consider the mid in the middle

426
00:18:14,400 --> 00:18:17,280
style attack because because of the

427
00:18:17,280 --> 00:18:19,679
feed forward operation however

428
00:18:19,679 --> 00:18:21,679
can this really work

429
00:18:21,679 --> 00:18:22,720
uh

430
00:18:22,720 --> 00:18:25,520
this is uh indeed it is we are now that

431
00:18:25,520 --> 00:18:28,160
the inver the the inverse of the

432
00:18:28,160 --> 00:18:30,880
large-scale cooperation is of very high

433
00:18:30,880 --> 00:18:34,320
degree so if simply inverting the

434
00:18:34,320 --> 00:18:36,240
uh the the last

435
00:18:36,240 --> 00:18:38,320
operation will only increase the degree

436
00:18:38,320 --> 00:18:41,039
of the equation system which will only

437
00:18:41,039 --> 00:18:44,000
uh increase the time complexity to

438
00:18:44,000 --> 00:18:44,919
uh

439
00:18:44,919 --> 00:18:47,919
demonstration attacks so indeed this is

440
00:18:47,919 --> 00:18:50,480
what the designers thought and directly

441
00:18:50,480 --> 00:18:53,120
gave up in this direction indeed this is

442
00:18:53,120 --> 00:18:56,400
also what we thought in 2019

443
00:18:56,400 --> 00:18:59,360
yeah so but then how do we find the

444
00:18:59,360 --> 00:19:02,080
attacks i think indeed he can find from

445
00:19:02,080 --> 00:19:04,559
this table that is very simple very very

446
00:19:04,559 --> 00:19:06,320
simple so i think he's more valuable to

447
00:19:06,320 --> 00:19:09,840
share how we find the idea this is uh

448
00:19:09,840 --> 00:19:14,000
inspired from our work on omc so recover

449
00:19:14,000 --> 00:19:16,240
the secret key from a single printed

450
00:19:16,240 --> 00:19:19,520
services pair so in this work we started

451
00:19:19,520 --> 00:19:21,760
the low mcs box

452
00:19:21,760 --> 00:19:24,400
then uh

453
00:19:24,400 --> 00:19:26,720
in this work uh so to

454
00:19:26,720 --> 00:19:28,799
but by considering two consecutive

455
00:19:28,799 --> 00:19:32,240
output bits of the lambda s box we can

456
00:19:32,240 --> 00:19:34,080
obtain two additional quadratic

457
00:19:34,080 --> 00:19:37,120
equations to describe this xbox

458
00:19:37,120 --> 00:19:39,840
so this is this then motivates us to

459
00:19:39,840 --> 00:19:42,640
consider whether similar analysis can be

460
00:19:42,640 --> 00:19:45,360
performed for the ambition operation to

461
00:19:45,360 --> 00:19:48,160
do this we list the expressions for the

462
00:19:48,160 --> 00:19:51,360
chi operation so y 0 y 1 y square two

463
00:19:51,360 --> 00:19:53,919
plus over y a minus one then we consider

464
00:19:53,919 --> 00:19:56,320
two consecutive output bits y and y i

465
00:19:56,320 --> 00:19:57,360
plus one

466
00:19:57,360 --> 00:20:00,320
luckily and we immediately observed an

467
00:20:00,320 --> 00:20:04,000
useful equation y plus x i and y i plus

468
00:20:04,000 --> 00:20:06,720
one equals zero so the last equation in

469
00:20:06,720 --> 00:20:07,840
this slide

470
00:20:07,840 --> 00:20:10,480
so what does this equation imply we

471
00:20:10,480 --> 00:20:13,200
should note that x i is the input of the

472
00:20:13,200 --> 00:20:16,559
cooperation while y is the output of the

473
00:20:16,559 --> 00:20:19,120
operation due to the feed forward

474
00:20:19,120 --> 00:20:21,840
operation we can know that y can be

475
00:20:21,840 --> 00:20:23,760
written as linear expressions in the

476
00:20:23,760 --> 00:20:27,360
qubits and x it can be written as

477
00:20:27,360 --> 00:20:29,679
non-linear expressions in the qubits

478
00:20:29,679 --> 00:20:31,919
whose degrees are bounded by 2 to the r

479
00:20:31,919 --> 00:20:34,720
minus 1. so according to this simple

480
00:20:34,720 --> 00:20:37,679
equation we can directly uh construct a

481
00:20:37,679 --> 00:20:40,559
system of a system of equations of

482
00:20:40,559 --> 00:20:42,559
degree two to the

483
00:20:42,559 --> 00:20:45,280
r minus one plus one to describe arduino

484
00:20:45,280 --> 00:20:48,400
star so we reduce the degree from two to

485
00:20:48,400 --> 00:20:51,280
the r to two to the r minus one plus one

486
00:20:51,280 --> 00:20:55,760
this is uh so the spec in a word we we

487
00:20:55,760 --> 00:20:57,760
do not fully invert the large scale

488
00:20:57,760 --> 00:20:59,679
calibration instead we carefully

489
00:20:59,679 --> 00:21:03,200
consider some input bits and output bits

490
00:21:03,200 --> 00:21:04,960
so this is what we

491
00:21:04,960 --> 00:21:07,360
we do in this work and then we are

492
00:21:07,360 --> 00:21:09,039
motivated to consider whether we have

493
00:21:09,039 --> 00:21:13,200
more uh such equations then we we we did

494
00:21:13,200 --> 00:21:14,880
experiments on the small scale

495
00:21:14,880 --> 00:21:18,000
calibration to derive these eq equations

496
00:21:18,000 --> 00:21:20,480
and then test uh whether they can also

497
00:21:20,480 --> 00:21:22,640
hold for the large scale calibration in

498
00:21:22,640 --> 00:21:24,480
this way i'll be obtained these five

499
00:21:24,480 --> 00:21:26,880
equations all of them can be used to

500
00:21:26,880 --> 00:21:28,640
construct a system of equations of

501
00:21:28,640 --> 00:21:31,600
degree to the r minus one plus one so we

502
00:21:31,600 --> 00:21:33,120
all of them can be used to improve the

503
00:21:33,120 --> 00:21:35,600
linearization attacks so in summary

504
00:21:35,600 --> 00:21:37,840
based on this simple observation we

505
00:21:37,840 --> 00:21:40,000
could directly break two out of three

506
00:21:40,000 --> 00:21:43,120
instances of hr star second the generic

507
00:21:43,120 --> 00:21:45,200
linear ratio attacks on asa and data are

508
00:21:45,200 --> 00:21:46,880
all improved by one run for most

509
00:21:46,880 --> 00:21:50,480
instances third dash is shown to be

510
00:21:50,480 --> 00:21:52,480
weaker than after thus violating the

511
00:21:52,480 --> 00:21:53,840
designers claim

512
00:21:53,840 --> 00:21:55,919
most importantly we believe this

513
00:21:55,919 --> 00:21:58,000
worksheet new insights into a large

514
00:21:58,000 --> 00:22:00,240
scale cooperation and how to analyze the

515
00:22:00,240 --> 00:22:02,880
after-like primitives and there is also

516
00:22:02,880 --> 00:22:04,559
a simple question

517
00:22:04,559 --> 00:22:06,640
so can we further construct the linear

518
00:22:06,640 --> 00:22:09,760
equations of the law of law degree so in

519
00:22:09,760 --> 00:22:12,320
this work we pure we almost appear off

520
00:22:12,320 --> 00:22:14,720
the last round so can we

521
00:22:14,720 --> 00:22:16,799
is it possible maybe

522
00:22:16,799 --> 00:22:19,039
so can we do something

523
00:22:19,039 --> 00:22:22,960
similar to peel off say uh last two runs

524
00:22:22,960 --> 00:22:26,080
yeah if we can do it we may break faster

525
00:22:26,080 --> 00:22:28,559
that's all thank you

526
00:22:28,559 --> 00:22:30,799
thank you for your talk

527
00:22:30,799 --> 00:22:33,360
so do you have any questions

528
00:22:33,360 --> 00:22:36,080
if you have one please post it to the do

529
00:22:36,080 --> 00:22:39,080
it

530
00:22:51,440 --> 00:22:54,640
so yeah why do you call it a moving

531
00:22:54,640 --> 00:22:57,360
target in the page

532
00:22:57,360 --> 00:22:59,840
or side force yes

533
00:22:59,840 --> 00:23:01,280
yeah because

534
00:23:01,280 --> 00:23:04,960
so each plane test cipher test pair

535
00:23:04,960 --> 00:23:07,200
is obtained with different

536
00:23:07,200 --> 00:23:09,039
of fine layers so

537
00:23:09,039 --> 00:23:10,880
so for for the common

538
00:23:10,880 --> 00:23:13,600
symmetric key primitives be a fine layer

539
00:23:13,600 --> 00:23:15,200
and uh

540
00:23:15,200 --> 00:23:18,080
and the non-linear are all fixed so they

541
00:23:18,080 --> 00:23:21,440
are stable but for in our star for each

542
00:23:21,440 --> 00:23:23,520
plane test there we are

543
00:23:23,520 --> 00:23:26,000
uh they will be encrypted with different

544
00:23:26,000 --> 00:23:28,559
of mine layers and the s and the

545
00:23:28,559 --> 00:23:31,039
nonlinear air so this is very well

546
00:23:31,039 --> 00:23:33,440
called a moving target

547
00:23:33,440 --> 00:23:37,000
i see thank you

548
00:23:47,360 --> 00:23:49,279
why do you have any

549
00:23:49,279 --> 00:23:52,600
other questions

550
00:24:02,150 --> 00:24:04,320
[Music]

551
00:24:04,320 --> 00:24:06,480
so yeah

552
00:24:06,480 --> 00:24:09,200
maybe i'm not an expert on this area but

553
00:24:09,200 --> 00:24:11,120
it seems that then uh

554
00:24:11,120 --> 00:24:12,320
this

555
00:24:12,320 --> 00:24:14,320
raster has an uh

556
00:24:14,320 --> 00:24:16,240
the point is one of the point is that in

557
00:24:16,240 --> 00:24:19,840
the backwater uh player has a very high

558
00:24:19,840 --> 00:24:22,159
degree competition yeah what direction

559
00:24:22,159 --> 00:24:23,360
and

560
00:24:23,360 --> 00:24:26,320
and that's that's a designation and it's

561
00:24:26,320 --> 00:24:28,400
i i think it's also

562
00:24:28,400 --> 00:24:29,520
effective

563
00:24:29,520 --> 00:24:31,760
to swatting attacks

564
00:24:31,760 --> 00:24:33,120
in general

565
00:24:33,120 --> 00:24:35,679
yeah yeah yeah

566
00:24:35,679 --> 00:24:38,720
that's an interesting yeah yeah it's our

567
00:24:38,720 --> 00:24:41,679
attack on the asta family afterlife

568
00:24:41,679 --> 00:24:44,679
um

569
00:24:46,000 --> 00:24:48,159
we may come we may also

570
00:24:48,159 --> 00:24:50,400
consider if there is no feed forward

571
00:24:50,400 --> 00:24:53,279
operation and we can we only truncate

572
00:24:53,279 --> 00:24:56,320
truncate some output bits the attack may

573
00:24:56,320 --> 00:24:58,000
not work but

574
00:24:58,000 --> 00:25:00,400
i'm not sure whether we can obtain some

575
00:25:00,400 --> 00:25:03,520
so with some other techniques to obtain

576
00:25:03,520 --> 00:25:05,440
low degree equations maybe this is an

577
00:25:05,440 --> 00:25:08,000
intrinsic problem but i currently don't

578
00:25:08,000 --> 00:25:10,240
have any idea for it and there are

579
00:25:10,240 --> 00:25:13,600
indeed some constructions use truncation

580
00:25:13,600 --> 00:25:15,840
not the feed forward average

581
00:25:15,840 --> 00:25:17,919
that's a trending offer to my point of

582
00:25:17,919 --> 00:25:20,240
view to my idea because by truncation we

583
00:25:20,240 --> 00:25:21,200
get us

584
00:25:21,200 --> 00:25:23,400
shorter outputs

585
00:25:23,400 --> 00:25:25,600
[Music]

586
00:25:25,600 --> 00:25:26,799
okay

587
00:25:26,799 --> 00:25:30,000
okay so if there's no

588
00:25:30,000 --> 00:25:32,480
questions let's move to the yeah next

589
00:25:32,480 --> 00:25:35,440
test next talk so thank you

590
00:25:35,440 --> 00:25:36,400
thank you

591
00:25:36,400 --> 00:25:38,640
okay

592
00:25:39,679 --> 00:25:42,799
so the sad torque

593
00:25:42,799 --> 00:25:44,799
is

594
00:25:44,799 --> 00:25:47,840
automatic crash car and quantum rebound

595
00:25:47,840 --> 00:25:50,640
attacks on aes like hashing by

596
00:25:50,640 --> 00:25:53,360
exploiting related key differentials

597
00:25:53,360 --> 00:25:57,120
written by xiaoyang dong

598
00:26:02,640 --> 00:26:05,279
will give us a talk

599
00:26:05,279 --> 00:26:08,080
thank you thank you for the introduction

600
00:26:08,080 --> 00:26:09,520
um

601
00:26:09,520 --> 00:26:12,000
can hear the slides

602
00:26:12,000 --> 00:26:14,320
yes

603
00:26:15,200 --> 00:26:17,279
i'm talking about automatic classical

604
00:26:17,279 --> 00:26:19,440
and the quantum ribbon attacks

605
00:26:19,440 --> 00:26:22,400
on as live hashing by exploring the

606
00:26:22,400 --> 00:26:24,960
k differentials

607
00:26:24,960 --> 00:26:26,080
so

608
00:26:26,080 --> 00:26:28,559
in quantum clearing text there are three

609
00:26:28,559 --> 00:26:31,200
generic algorithms

610
00:26:31,200 --> 00:26:33,840
the first setting is that we have small

611
00:26:33,840 --> 00:26:36,799
quantum computer and large qram

612
00:26:36,799 --> 00:26:39,360
then the phd algorithm will

613
00:26:39,360 --> 00:26:41,520
achieve optimal

614
00:26:41,520 --> 00:26:42,559
trade-off

615
00:26:42,559 --> 00:26:45,840
and then the second is the trade-off

616
00:26:45,840 --> 00:26:47,120
algorithm

617
00:26:47,120 --> 00:26:49,360
and

618
00:26:49,840 --> 00:26:52,559
parallel role algorithm

619
00:26:52,559 --> 00:26:54,320
is the best algorithm

620
00:26:54,320 --> 00:26:56,799
and the third setting is the

621
00:26:56,799 --> 00:26:59,919
is that we have a small quantum computer

622
00:26:59,919 --> 00:27:01,760
but a large

623
00:27:01,760 --> 00:27:06,559
classical memory and no qrm then uh thin

624
00:27:06,559 --> 00:27:10,799
s algorithm okay she was the best

625
00:27:10,799 --> 00:27:12,000
so

626
00:27:12,000 --> 00:27:13,120
um

627
00:27:13,120 --> 00:27:15,360
in this paper we uh

628
00:27:15,360 --> 00:27:17,600
we are focusing on the rebound attack

629
00:27:17,600 --> 00:27:19,520
and its content modern

630
00:27:19,520 --> 00:27:22,159
so it first introduced the introduced

631
00:27:22,159 --> 00:27:23,360
the

632
00:27:23,360 --> 00:27:24,880
ribbon attack

633
00:27:24,880 --> 00:27:28,480
ribbon attack is uh proposed by mundo at

634
00:27:28,480 --> 00:27:32,240
uh fse to the other nine

635
00:27:32,240 --> 00:27:34,480
so in the inbound phase uh we're

636
00:27:34,480 --> 00:27:37,200
generating pairs uh conforming in

637
00:27:37,200 --> 00:27:39,600
punctual uh and

638
00:27:39,600 --> 00:27:43,200
uh with the middle approach and in the

639
00:27:43,200 --> 00:27:45,919
outbound phase we verify

640
00:27:45,919 --> 00:27:49,240
that pairs

641
00:27:49,360 --> 00:27:52,640
to see if this uh

642
00:27:52,640 --> 00:27:53,840
this

643
00:27:53,840 --> 00:27:57,039
if it meets the outbound differential

644
00:27:57,039 --> 00:27:58,880
and the outbound differential

645
00:27:58,880 --> 00:28:00,159
probability

646
00:28:00,159 --> 00:28:01,360
is pr

647
00:28:01,360 --> 00:28:04,320
then in classical setting we have at

648
00:28:04,320 --> 00:28:06,320
least a

649
00:28:06,320 --> 00:28:07,840
transverse

650
00:28:07,840 --> 00:28:10,640
one divided pr starting points

651
00:28:10,640 --> 00:28:13,279
to find the clear

652
00:28:13,279 --> 00:28:14,720
so

653
00:28:14,720 --> 00:28:17,760
pr has to be larger than two to minus

654
00:28:17,760 --> 00:28:18,480
and

655
00:28:18,480 --> 00:28:20,399
and device two

656
00:28:20,399 --> 00:28:22,880
and in quantum setting

657
00:28:22,880 --> 00:28:25,679
uh jose mother and necessity applied

658
00:28:25,679 --> 00:28:28,159
rules algorithm to send the right red

659
00:28:28,159 --> 00:28:30,159
one

660
00:28:30,159 --> 00:28:31,039
so

661
00:28:31,039 --> 00:28:34,799
to make the complexity

662
00:28:35,600 --> 00:28:38,000
by square root of

663
00:28:38,000 --> 00:28:38,960
uh

664
00:28:38,960 --> 00:28:40,799
one divided pr

665
00:28:40,799 --> 00:28:42,880
and too bad to be better than phd

666
00:28:42,880 --> 00:28:44,880
algorithm

667
00:28:44,880 --> 00:28:45,840
those

668
00:28:45,840 --> 00:28:46,799
those

669
00:28:46,799 --> 00:28:49,120
time uh should be

670
00:28:49,120 --> 00:28:50,960
smaller than

671
00:28:50,960 --> 00:28:53,440
the uh sentences

672
00:28:53,440 --> 00:28:56,720
so pr had to be latched in uh

673
00:28:56,720 --> 00:29:00,240
two two minus two n divided by three

674
00:29:00,240 --> 00:29:04,559
the to be better than zero algorithm pr

675
00:29:04,559 --> 00:29:06,799
has to be larger than two two

676
00:29:06,799 --> 00:29:10,080
uh minus n

677
00:29:10,960 --> 00:29:13,360
in religious key setting

678
00:29:13,360 --> 00:29:14,159
uh

679
00:29:14,159 --> 00:29:15,520
we first

680
00:29:15,520 --> 00:29:17,679
found the relative k chakra differential

681
00:29:17,679 --> 00:29:21,120
for e k and the truth appear

682
00:29:21,120 --> 00:29:24,000
the k and k

683
00:29:24,000 --> 00:29:25,200
dot

684
00:29:25,200 --> 00:29:27,440
which means the differential in the case

685
00:29:27,440 --> 00:29:29,679
schedule and perform the rebound attack

686
00:29:29,679 --> 00:29:32,000
in the encryption data path

687
00:29:32,000 --> 00:29:35,279
with k and k dot

688
00:29:36,399 --> 00:29:40,000
if we review the automatic tool to

689
00:29:40,000 --> 00:29:43,039
standard related k differential

690
00:29:43,039 --> 00:29:44,480
difference for

691
00:29:44,480 --> 00:29:47,039
in sql key setting

692
00:29:47,039 --> 00:29:48,799
previous work

693
00:29:48,799 --> 00:29:50,880
consider the probability of transfer

694
00:29:50,880 --> 00:29:52,559
differential

695
00:29:52,559 --> 00:29:54,480
the enumerate the

696
00:29:54,480 --> 00:29:58,080
cancellations by mc

697
00:29:58,080 --> 00:29:59,440
and

698
00:29:59,440 --> 00:30:02,799
xor operation to estimate the

699
00:30:02,799 --> 00:30:04,159
probability

700
00:30:04,159 --> 00:30:05,440
uh but in

701
00:30:05,440 --> 00:30:08,640
replicating a relative key setting

702
00:30:08,640 --> 00:30:10,320
we have to

703
00:30:10,320 --> 00:30:12,480
do another case

704
00:30:12,480 --> 00:30:14,559
uh for example in

705
00:30:14,559 --> 00:30:15,840
finger b

706
00:30:15,840 --> 00:30:18,159
uh if we

707
00:30:18,159 --> 00:30:20,399
following if we follow the previous

708
00:30:20,399 --> 00:30:21,919
method

709
00:30:21,919 --> 00:30:25,440
we can enumerate the cancellations uh

710
00:30:25,440 --> 00:30:28,080
with two two cells

711
00:30:28,080 --> 00:30:31,039
but the total uh difference the

712
00:30:31,039 --> 00:30:35,360
probability of differential is a can be

713
00:30:35,360 --> 00:30:38,159
can be just the one cell

714
00:30:38,159 --> 00:30:40,640
that is uh two to

715
00:30:40,640 --> 00:30:43,840
a minus c instead of two two uh minus

716
00:30:43,840 --> 00:30:46,559
two c by uh this

717
00:30:46,559 --> 00:30:47,520
this

718
00:30:47,520 --> 00:30:51,840
differential can be achieved by

719
00:30:51,840 --> 00:30:55,360
advocate to dedicatedly choose a kb

720
00:30:55,360 --> 00:30:58,080
k difference

721
00:30:58,880 --> 00:31:01,120
so

722
00:31:01,519 --> 00:31:03,519
so

723
00:31:03,519 --> 00:31:05,120
uh by using the

724
00:31:05,120 --> 00:31:07,600
degree of freedom from the k we can

725
00:31:07,600 --> 00:31:08,720
increase

726
00:31:08,720 --> 00:31:09,679
uh

727
00:31:09,679 --> 00:31:11,840
the probability from

728
00:31:11,840 --> 00:31:15,039
this one to this one

729
00:31:15,440 --> 00:31:16,480
so

730
00:31:16,480 --> 00:31:20,080
we introduced the uh constraints uh to

731
00:31:20,080 --> 00:31:21,919
to deal with the

732
00:31:21,919 --> 00:31:24,559
to deal with this can uh this control

733
00:31:24,559 --> 00:31:26,320
this condition

734
00:31:26,320 --> 00:31:31,279
and uh we introduce uh the symbols

735
00:31:31,279 --> 00:31:33,519
and uh

736
00:31:33,519 --> 00:31:35,039
uh

737
00:31:35,039 --> 00:31:37,679
well for the dfi for the degree of

738
00:31:37,679 --> 00:31:38,720
freedom

739
00:31:38,720 --> 00:31:40,080
uh

740
00:31:40,080 --> 00:31:44,159
this equation is the consume consumption

741
00:31:44,159 --> 00:31:46,880
of the degrees of freedom they should be

742
00:31:46,880 --> 00:31:49,039
smaller than the total degrees of

743
00:31:49,039 --> 00:31:50,480
freedom

744
00:31:50,480 --> 00:31:53,840
the objective functions held two

745
00:31:53,840 --> 00:31:57,120
uh two cases uh the first case we place

746
00:31:57,120 --> 00:31:59,679
two runs in one place

747
00:31:59,679 --> 00:32:02,399
in the middle and the

748
00:32:02,399 --> 00:32:05,440
objective is to minimize this one

749
00:32:05,440 --> 00:32:06,159
and

750
00:32:06,159 --> 00:32:08,480
the second one is to

751
00:32:08,480 --> 00:32:11,360
place a cereal in in one phase in the

752
00:32:11,360 --> 00:32:14,240
middle and the function as objective

753
00:32:14,240 --> 00:32:18,240
function is to minimize this

754
00:32:18,399 --> 00:32:20,640
when applied when

755
00:32:20,640 --> 00:32:23,440
applied to saturate uh we have to deal

756
00:32:23,440 --> 00:32:27,840
with uh many in some abilities

757
00:32:27,840 --> 00:32:31,120
because that race case schedule is very

758
00:32:31,120 --> 00:32:33,279
very easy as a

759
00:32:33,279 --> 00:32:35,679
for example

760
00:32:35,679 --> 00:32:37,600
this forerunned

761
00:32:37,600 --> 00:32:39,279
tracking differential

762
00:32:39,279 --> 00:32:40,240
we can

763
00:32:40,240 --> 00:32:43,279
get where an equation in this round and

764
00:32:43,279 --> 00:32:45,360
we can get another equation

765
00:32:45,360 --> 00:32:47,039
with this run

766
00:32:47,039 --> 00:32:48,240
and

767
00:32:48,240 --> 00:32:49,279
we can

768
00:32:49,279 --> 00:32:50,399
plus

769
00:32:50,399 --> 00:32:52,240
these two equations

770
00:32:52,240 --> 00:32:55,799
to find the contradiction

771
00:32:56,080 --> 00:32:58,720
so this forum is a

772
00:32:58,720 --> 00:33:01,279
incomparability differential

773
00:33:01,279 --> 00:33:05,600
uh to conquer these uh competitive we

774
00:33:05,600 --> 00:33:07,120
introduce a proper

775
00:33:07,120 --> 00:33:09,279
property of mc

776
00:33:09,279 --> 00:33:10,799
suppose

777
00:33:10,799 --> 00:33:13,519
this are the input and

778
00:33:13,519 --> 00:33:14,960
output

779
00:33:14,960 --> 00:33:16,720
of mc

780
00:33:16,720 --> 00:33:19,600
and this is also the important of

781
00:33:19,600 --> 00:33:20,799
omc

782
00:33:20,799 --> 00:33:22,080
and

783
00:33:22,080 --> 00:33:24,640
if there are at least four sim cell in

784
00:33:24,640 --> 00:33:25,840
two vector

785
00:33:25,840 --> 00:33:28,640
then the other other cells should be the

786
00:33:28,640 --> 00:33:30,000
same

787
00:33:30,000 --> 00:33:33,200
so we use this probability to

788
00:33:33,200 --> 00:33:38,240
delete many e impossible diffusion

789
00:33:38,240 --> 00:33:41,679
at last we found a is wrong certainly

790
00:33:41,679 --> 00:33:43,120
uh

791
00:33:43,120 --> 00:33:44,000
different

792
00:33:44,000 --> 00:33:45,760
h1 a relief

793
00:33:45,760 --> 00:33:50,480
k differential for saturn and we place

794
00:33:50,480 --> 00:33:54,240
two uh two in one phase in the in this

795
00:33:54,240 --> 00:33:56,000
part and

796
00:33:56,000 --> 00:33:59,039
the outbound probability is two two uh

797
00:33:59,039 --> 00:34:02,960
minus two hundred and eleven

798
00:34:02,960 --> 00:34:04,720
then

799
00:34:04,720 --> 00:34:06,559
we perform the quantum phrase start

800
00:34:06,559 --> 00:34:07,519
clearing

801
00:34:07,519 --> 00:34:10,079
and the the quantum time to so the

802
00:34:10,079 --> 00:34:11,760
inbound phase is

803
00:34:11,760 --> 00:34:12,639
about

804
00:34:12,639 --> 00:34:14,480
2 to

805
00:34:14,480 --> 00:34:16,239
22 and

806
00:34:16,239 --> 00:34:17,679
finally

807
00:34:17,679 --> 00:34:19,280
we

808
00:34:19,280 --> 00:34:22,480
i found the collision with a visible

809
00:34:22,480 --> 00:34:23,839
algorithm

810
00:34:23,839 --> 00:34:26,159
with time two two

811
00:34:26,159 --> 00:34:29,760
one two nine xbox evaluations

812
00:34:29,760 --> 00:34:33,119
uh since there are uh one to eight xbox

813
00:34:33,119 --> 00:34:35,440
applications

814
00:34:35,440 --> 00:34:36,239
in

815
00:34:36,239 --> 00:34:39,440
one h1 century then

816
00:34:39,440 --> 00:34:41,440
the total complexity

817
00:34:41,440 --> 00:34:43,199
is about two to

818
00:34:43,199 --> 00:34:44,800
one to two

819
00:34:44,800 --> 00:34:46,480
it's better than partial rule of

820
00:34:46,480 --> 00:34:49,480
algorithm

821
00:34:49,760 --> 00:34:50,560
and

822
00:34:50,560 --> 00:34:52,079
we also

823
00:34:52,079 --> 00:34:56,879
found a niron wordpress client

824
00:34:56,879 --> 00:34:58,480
in previous work

825
00:34:58,480 --> 00:35:02,000
at asia crypto

826
00:35:11,359 --> 00:35:16,480
only the case get a case schedule pass

827
00:35:16,480 --> 00:35:21,520
how a full active rebound attack

828
00:35:21,680 --> 00:35:24,240
and in our new

829
00:35:24,240 --> 00:35:27,599
usual uh both the key case schedulers

830
00:35:27,599 --> 00:35:29,280
and data paths

831
00:35:29,280 --> 00:35:32,160
have the true state of state

832
00:35:32,160 --> 00:35:35,040
rebound attack

833
00:35:35,920 --> 00:35:39,200
this is over trill

834
00:35:39,839 --> 00:35:41,280
so

835
00:35:41,280 --> 00:35:43,359
to perform the quantum clearance attack

836
00:35:43,359 --> 00:35:45,040
we define

837
00:35:45,040 --> 00:35:46,400
different

838
00:35:46,400 --> 00:35:49,280
functions the first function is g and

839
00:35:49,280 --> 00:35:50,560
this is to

840
00:35:50,560 --> 00:35:52,079
solve the

841
00:35:52,079 --> 00:35:55,680
three run inbound phase and

842
00:35:55,680 --> 00:35:57,760
a function f

843
00:35:57,760 --> 00:36:02,160
you to identify a good pair

844
00:36:02,960 --> 00:36:05,839
a good differential pair

845
00:36:05,839 --> 00:36:07,760
to satisfy the

846
00:36:07,760 --> 00:36:09,200
key

847
00:36:09,200 --> 00:36:12,079
to satisfy this this trio

848
00:36:12,079 --> 00:36:14,560
is okay

849
00:36:14,800 --> 00:36:19,599
so uh given 36 we run algorithm on f to

850
00:36:19,599 --> 00:36:20,880
find

851
00:36:20,880 --> 00:36:23,920
a good a good pair 65

852
00:36:23,920 --> 00:36:27,079
the three

853
00:36:28,240 --> 00:36:29,520
yes

854
00:36:29,520 --> 00:36:30,480
uh

855
00:36:30,480 --> 00:36:33,280
so we define another function

856
00:36:33,280 --> 00:36:34,320
uh

857
00:36:34,320 --> 00:36:35,599
to identify

858
00:36:35,599 --> 00:36:36,880
uh

859
00:36:36,880 --> 00:36:38,839
one third

860
00:36:38,839 --> 00:36:41,680
omega 3w6

861
00:36:41,680 --> 00:36:44,320
if it is clear

862
00:36:44,320 --> 00:36:46,240
uh the

863
00:36:46,240 --> 00:36:48,560
algorithm that the oracle

864
00:36:48,560 --> 00:36:51,119
uh for the quantum attack on network

865
00:36:51,119 --> 00:36:53,440
workflow is is as follows

866
00:36:53,440 --> 00:36:56,240
we run algorithm on us

867
00:36:56,240 --> 00:36:59,440
to get the financial aid

868
00:36:59,440 --> 00:37:03,520
and the attack for workflow

869
00:37:03,680 --> 00:37:05,920
the result is as follows

870
00:37:05,920 --> 00:37:08,079
is neyron

871
00:37:08,079 --> 00:37:08,960
and

872
00:37:08,960 --> 00:37:14,000
we also have uh some tax accessory

873
00:37:14,000 --> 00:37:16,400
thank you

874
00:37:17,119 --> 00:37:18,960
thank you for your talk

875
00:37:18,960 --> 00:37:23,680
uh it's running out of the time slot so

876
00:37:23,680 --> 00:37:25,839
we just moved to the next stop and if

877
00:37:25,839 --> 00:37:28,800
you have any question to this talk and

878
00:37:28,800 --> 00:37:31,599
you can yeah still post to the jury and

879
00:37:31,599 --> 00:37:34,320
we will if we have a time and we can

880
00:37:34,320 --> 00:37:35,119
uh

881
00:37:35,119 --> 00:37:37,280
have a question uh the uh question

882
00:37:37,280 --> 00:37:39,440
answer time for the rest of the session

883
00:37:39,440 --> 00:37:40,400
okay

884
00:37:40,400 --> 00:37:42,480
okay i'll handle the task to the

885
00:37:42,480 --> 00:37:44,560
samantha is that okay

886
00:37:44,560 --> 00:37:46,720
yeah thanks very good

887
00:37:46,720 --> 00:37:48,480
i take it from here

888
00:37:48,480 --> 00:37:51,920
um well we have uh two talks remaining

889
00:37:51,920 --> 00:37:54,160
uh so now we have

890
00:37:54,160 --> 00:37:57,280
clustering effect on in simon and simek

891
00:37:57,280 --> 00:38:01,040
uh the authors are gandalong clara parno

892
00:38:01,040 --> 00:38:03,440
andre scott and

893
00:38:03,440 --> 00:38:05,520
and the talk will be given by clara

894
00:38:05,520 --> 00:38:07,520
clara over to you

895
00:38:07,520 --> 00:38:09,839
hi do you hear me

896
00:38:09,839 --> 00:38:11,040
yes so we do

897
00:38:11,040 --> 00:38:12,640
okay thanks so thanks for the

898
00:38:12,640 --> 00:38:14,720
introduction my name is sarah piano and

899
00:38:14,720 --> 00:38:16,240
i'm going to present a joint work with

900
00:38:16,240 --> 00:38:17,359
diet

901
00:38:17,359 --> 00:38:20,240
freshwater antelope clustering effect in

902
00:38:20,240 --> 00:38:21,680
simon enzyme

903
00:38:21,680 --> 00:38:23,440
so simon and spike are two lightweight

904
00:38:23,440 --> 00:38:25,520
block ciphers introduced by the nsa in

905
00:38:25,520 --> 00:38:28,400
2013. simon is optimizing hardware while

906
00:38:28,400 --> 00:38:30,560
spec is optimized in software

907
00:38:30,560 --> 00:38:32,640
the nsa tried to get simon and spike

908
00:38:32,640 --> 00:38:34,560
standardized at izo but some experts

909
00:38:34,560 --> 00:38:36,160
from other countries were suspicious

910
00:38:36,160 --> 00:38:38,800
because it was the nsa so more than 70

911
00:38:38,800 --> 00:38:41,119
papers study simon and spec a little bit

912
00:38:41,119 --> 00:38:42,880
later an academic variant of simon and

913
00:38:42,880 --> 00:38:45,839
spec was proposed this variant is cymec

914
00:38:45,839 --> 00:38:48,000
so in the following we'll study simon

915
00:38:48,000 --> 00:38:50,960
and cymec so simon and semek are festive

916
00:38:50,960 --> 00:38:53,520
ciphers with a quality crown function so

917
00:38:53,520 --> 00:38:55,040
for simon this round function is

918
00:38:55,040 --> 00:38:56,880
composed of a rotation of eight bit to

919
00:38:56,880 --> 00:38:59,040
the left a rotation of one bit to the

920
00:38:59,040 --> 00:39:01,280
left and both are handed bit wise and

921
00:39:01,280 --> 00:39:03,280
the result is zero to the right part

922
00:39:03,280 --> 00:39:05,200
this is the nonlinear part and there is

923
00:39:05,200 --> 00:39:07,200
also a linear part which is composed of

924
00:39:07,200 --> 00:39:09,520
the rotation of two b to the left

925
00:39:09,520 --> 00:39:11,839
finally there is a key addition so for

926
00:39:11,839 --> 00:39:14,079
simon there are ten set of parameters

927
00:39:14,079 --> 00:39:15,839
with different block size key size and

928
00:39:15,839 --> 00:39:18,640
numeral forms and a linear key schedule

929
00:39:18,640 --> 00:39:20,320
concerning cymek the rom function is

930
00:39:20,320 --> 00:39:22,480
very similar however the rotation

931
00:39:22,480 --> 00:39:24,320
elements are different they are five

932
00:39:24,320 --> 00:39:26,000
zero on one

933
00:39:26,000 --> 00:39:28,000
there are three sets of parameters and a

934
00:39:28,000 --> 00:39:29,760
non-linearity schedule which reuses the

935
00:39:29,760 --> 00:39:31,599
round function f

936
00:39:31,599 --> 00:39:33,440
so in this work we studied different

937
00:39:33,440 --> 00:39:35,440
cell and linear group analysis here i

938
00:39:35,440 --> 00:39:37,040
will talk about different cycle analysis

939
00:39:37,040 --> 00:39:38,640
but a similar approach can be done for

940
00:39:38,640 --> 00:39:41,839
linear method analysis so the goal of

941
00:39:41,839 --> 00:39:43,760
different circuit analysis is to find a

942
00:39:43,760 --> 00:39:45,680
differential which is a pair delta delta

943
00:39:45,680 --> 00:39:47,599
prime such that the probability that an

944
00:39:47,599 --> 00:39:49,119
input difference delta output or

945
00:39:49,119 --> 00:39:51,280
difference delta prime is bigger than

946
00:39:51,280 --> 00:39:53,920
two to the minus n with n the block size

947
00:39:53,920 --> 00:39:56,320
so to find such a different cell we will

948
00:39:56,320 --> 00:39:58,240
study the propagation of differences

949
00:39:58,240 --> 00:40:00,960
through every round so first through one

950
00:40:00,960 --> 00:40:03,040
round this probability can be computed

951
00:40:03,040 --> 00:40:05,280
efficiently for simon and cymek this was

952
00:40:05,280 --> 00:40:07,359
demonstrated by cobble leander and tsn

953
00:40:07,359 --> 00:40:09,280
at crypto 2015.

954
00:40:09,280 --> 00:40:11,119
this can be extended to the probability

955
00:40:11,119 --> 00:40:14,160
of a one tray a trail is defined by all

956
00:40:14,160 --> 00:40:15,760
the intermediate differences and the

957
00:40:15,760 --> 00:40:17,680
probability of a tray is just the

958
00:40:17,680 --> 00:40:19,359
probability of the product of the

959
00:40:19,359 --> 00:40:23,200
probability of each round transition

960
00:40:23,200 --> 00:40:25,040
so this is for one train but if we want

961
00:40:25,040 --> 00:40:26,800
to compute the priority that's an input

962
00:40:26,800 --> 00:40:28,480
difference delta zero output a

963
00:40:28,480 --> 00:40:30,319
difference delta four we need to take

964
00:40:30,319 --> 00:40:32,640
into account all the trades and as we

965
00:40:32,640 --> 00:40:34,640
can see here there are many trades so it

966
00:40:34,640 --> 00:40:36,800
is infeasible in practice to do the sum

967
00:40:36,800 --> 00:40:38,960
of all the strains

968
00:40:38,960 --> 00:40:40,960
so for some ciphers there is one or

969
00:40:40,960 --> 00:40:42,560
several dominant traits so we can

970
00:40:42,560 --> 00:40:44,560
approximate this probability by

971
00:40:44,560 --> 00:40:46,560
considering only the dominant traits but

972
00:40:46,560 --> 00:40:49,119
for simon and simek this gives not an

973
00:40:49,119 --> 00:40:51,520
accurate approximation

974
00:40:51,520 --> 00:40:52,720
so uh

975
00:40:52,720 --> 00:40:54,800
we observed that simon and stymic have

976
00:40:54,800 --> 00:40:56,800
very slow diffusion so if we start with

977
00:40:56,800 --> 00:40:58,880
differences in a window of size w for

978
00:40:58,880 --> 00:41:01,440
cymek then after run run we observe that

979
00:41:01,440 --> 00:41:02,880
the differences would stand in the

980
00:41:02,880 --> 00:41:05,119
window of size w plus 5 in the worst

981
00:41:05,119 --> 00:41:06,960
case because the biggest amount of

982
00:41:06,960 --> 00:41:10,319
rotation is 5. however this rotation

983
00:41:10,319 --> 00:41:12,400
amount 5 is associated to a nonlinear

984
00:41:12,400 --> 00:41:14,400
operation so sometimes the differences

985
00:41:14,400 --> 00:41:15,760
will not propagate through the end

986
00:41:15,760 --> 00:41:18,319
operator so the differences will stand

987
00:41:18,319 --> 00:41:21,200
in a window of size w plus one

988
00:41:21,200 --> 00:41:23,200
so simon and cymic have a very slow

989
00:41:23,200 --> 00:41:26,240
decision and we decided to exploit this

990
00:41:26,240 --> 00:41:28,560
and our idea was to focus on trades that

991
00:41:28,560 --> 00:41:30,640
are active in the window of the wbs so

992
00:41:30,640 --> 00:41:32,319
it means that in place of considering

993
00:41:32,319 --> 00:41:34,560
all the strength because it is invisible

994
00:41:34,560 --> 00:41:36,640
we only focus on a

995
00:41:36,640 --> 00:41:37,680
window

996
00:41:37,680 --> 00:41:39,040
on the trails that are active in a

997
00:41:39,040 --> 00:41:42,400
window of w bits and this gave us a

998
00:41:42,400 --> 00:41:45,440
lower bond of the probability so by

999
00:41:45,440 --> 00:41:47,040
doing this we obtain some stronger

1000
00:41:47,040 --> 00:41:49,680
distinguisher for simon and simek

1001
00:41:49,680 --> 00:41:52,160
and then we extended to this to key

1002
00:41:52,160 --> 00:41:54,560
recovery attack so starting from our

1003
00:41:54,560 --> 00:41:55,760
this language

1004
00:41:55,760 --> 00:41:58,560
we add some roms before and after and

1005
00:41:58,560 --> 00:42:00,960
then we can evaluate the statistic of

1006
00:42:00,960 --> 00:42:02,800
our distinguisher by guessing a subset

1007
00:42:02,800 --> 00:42:03,839
of the key

1008
00:42:03,839 --> 00:42:06,319
and the total number of

1009
00:42:06,319 --> 00:42:08,000
bits that need to be guessed need to be

1010
00:42:08,000 --> 00:42:10,079
smaller than the key size and this

1011
00:42:10,079 --> 00:42:11,280
attack

1012
00:42:11,280 --> 00:42:14,160
can be summarized as follow so first we

1013
00:42:14,160 --> 00:42:15,920
need to find an efficient distant issue

1014
00:42:15,920 --> 00:42:18,240
so this was done in the previous slide

1015
00:42:18,240 --> 00:42:20,240
then we need to find the subset of the

1016
00:42:20,240 --> 00:42:22,000
key that need to be used to evaluate our

1017
00:42:22,000 --> 00:42:23,119
statistic

1018
00:42:23,119 --> 00:42:24,960
and finally we will rearrange the

1019
00:42:24,960 --> 00:42:27,599
operation to reduce the time complexity

1020
00:42:27,599 --> 00:42:30,000
so here we compare the different cell

1021
00:42:30,000 --> 00:42:32,640
and the linear attack for a cymax with a

1022
00:42:32,640 --> 00:42:35,040
block size of 64 bit on the key size of

1023
00:42:35,040 --> 00:42:38,160
128 bits and a distinguishable over 30

1024
00:42:38,160 --> 00:42:40,319
rounds so what we observe is that our

1025
00:42:40,319 --> 00:42:42,640
distinguishers are really similar so for

1026
00:42:42,640 --> 00:42:44,240
different flipped analysis we have a

1027
00:42:44,240 --> 00:42:47,119
probability of 2 to the minus 60.41 and

1028
00:42:47,119 --> 00:42:48,800
for linear hypothesis we have a this

1029
00:42:48,800 --> 00:42:50,240
time we show with probability 2 to the

1030
00:42:50,240 --> 00:42:54,000
minus 60. 36. so those two probabilities

1031
00:42:54,000 --> 00:42:56,319
are very similar and both distinguishers

1032
00:42:56,319 --> 00:42:58,960
have the minimal number of activities

1033
00:42:58,960 --> 00:43:01,119
however for the step one the different

1034
00:43:01,119 --> 00:43:02,880
cell and linear capacitances are really

1035
00:43:02,880 --> 00:43:04,560
different because for different circuit

1036
00:43:04,560 --> 00:43:06,160
analysis we are able to add free roam

1037
00:43:06,160 --> 00:43:08,560
before on seven one bit after

1038
00:43:08,560 --> 00:43:11,520
by guessing 123 bits while for linear

1039
00:43:11,520 --> 00:43:13,359
appetizers we are able to add four

1040
00:43:13,359 --> 00:43:15,680
rounds before on the edge round after by

1041
00:43:15,680 --> 00:43:18,880
guessing only 118 bits so the linear

1042
00:43:18,880 --> 00:43:20,560
attacks would be more efficient than the

1043
00:43:20,560 --> 00:43:22,560
different cell attacks

1044
00:43:22,560 --> 00:43:25,359
so here are our results so for example

1045
00:43:25,359 --> 00:43:28,079
for cymac with a block size of 64 bit on

1046
00:43:28,079 --> 00:43:30,960
the key size of 128 bits we obtained an

1047
00:43:30,960 --> 00:43:33,440
attack over 42 rounds out of 44 while

1048
00:43:33,440 --> 00:43:35,680
before the best attack only reached 37

1049
00:43:35,680 --> 00:43:37,680
rounds so that's all thanks for

1050
00:43:37,680 --> 00:43:40,680
listening

1051
00:43:40,800 --> 00:43:43,200
okay nice talk clara is there any

1052
00:43:43,200 --> 00:43:45,520
question

1053
00:43:52,400 --> 00:43:54,480
yeah i don't see any questions so maybe

1054
00:43:54,480 --> 00:43:56,480
i can ask one question

1055
00:43:56,480 --> 00:44:00,400
um so is this the simplicity of uh cymac

1056
00:44:00,400 --> 00:44:02,800
that is leading to this attack

1057
00:44:02,800 --> 00:44:04,880
or so is this the lesson that we learned

1058
00:44:04,880 --> 00:44:07,440
that cipher should not be too simple

1059
00:44:07,440 --> 00:44:09,119
those will be attacked

1060
00:44:09,119 --> 00:44:12,000
yes probably this is uh this is probably

1061
00:44:12,000 --> 00:44:14,720
that because uh there is a

1062
00:44:14,720 --> 00:44:17,040
the run function is probably too simple

1063
00:44:17,040 --> 00:44:18,480
and uh there is

1064
00:44:18,480 --> 00:44:21,280
no the diffusion is very slow so

1065
00:44:21,280 --> 00:44:22,800
this is probably not a good idea to

1066
00:44:22,800 --> 00:44:25,760
design a very simple one function like

1067
00:44:25,760 --> 00:44:27,760
the one of simon and sandwich

1068
00:44:27,760 --> 00:44:29,680
right so this is the trailer actually so

1069
00:44:29,680 --> 00:44:33,280
when we design hardware efficient

1070
00:44:33,280 --> 00:44:35,119
ciphers then we go for

1071
00:44:35,119 --> 00:44:38,000
like two degrees boxes and uh very

1072
00:44:38,000 --> 00:44:40,960
simple uh circuit uh but yeah that's a

1073
00:44:40,960 --> 00:44:43,280
trailer yeah good lesson to learn

1074
00:44:43,280 --> 00:44:45,680
so we can move to the next stop thanks

1075
00:44:45,680 --> 00:44:48,919
once again

1076
00:44:54,480 --> 00:44:57,359
okay i think only i'm left

1077
00:44:57,359 --> 00:44:59,598
yeah

1078
00:44:59,760 --> 00:45:00,560
so

1079
00:45:00,560 --> 00:45:03,280
can you up your slides please

1080
00:45:03,280 --> 00:45:05,839
one second

1081
00:45:06,160 --> 00:45:08,319
is it up

1082
00:45:08,319 --> 00:45:09,839
uh yes

1083
00:45:09,839 --> 00:45:12,480
okay okay so we're at the end of this uh

1084
00:45:12,480 --> 00:45:16,079
session uh so the talk is new attacks on

1085
00:45:16,079 --> 00:45:18,960
umc instances with the single plaintext

1086
00:45:18,960 --> 00:45:21,760
ciphertext pair it's uh co-authored by

1087
00:45:21,760 --> 00:45:23,599
swadi munich

1088
00:45:23,599 --> 00:45:27,359
uh kashayar bharati sanjay and hailin

1089
00:45:27,359 --> 00:45:29,920
yun so kashaya will be giving the talk

1090
00:45:29,920 --> 00:45:30,839
about your

1091
00:45:30,839 --> 00:45:33,839
kasha uh so thanks for the introduction

1092
00:45:33,839 --> 00:45:34,880
um

1093
00:45:34,880 --> 00:45:37,200
from epfl i'm presenting the joint fork

1094
00:45:37,200 --> 00:45:38,960
uh with subaru panic says wadena and

1095
00:45:38,960 --> 00:45:41,280
hylun yan called new attacks on omc

1096
00:45:41,280 --> 00:45:42,640
instances with a single plaintext

1097
00:45:42,640 --> 00:45:44,880
ciphertext pair or you see the name is

1098
00:45:44,880 --> 00:45:46,480
long i would prefer to call it that

1099
00:45:46,480 --> 00:45:48,240
crypt analysis paper with a really long

1100
00:45:48,240 --> 00:45:49,040
name

1101
00:45:49,040 --> 00:45:50,960
and i'm being the author with the

1102
00:45:50,960 --> 00:45:53,280
hardest name to pronounce

1103
00:45:53,280 --> 00:45:54,640
so

1104
00:45:54,640 --> 00:45:56,319
what do we do in this work we study

1105
00:45:56,319 --> 00:45:57,920
attacks on though i'm seeing scenarios

1106
00:45:57,920 --> 00:45:59,680
that are relevant to cryptanalysis of

1107
00:45:59,680 --> 00:46:01,440
picnic so picnic is a post quantum

1108
00:46:01,440 --> 00:46:04,319
signature scheme which uses uh

1109
00:46:04,319 --> 00:46:06,480
it's an npc and head paradigm so

1110
00:46:06,480 --> 00:46:08,240
whenever you see the name npc you know

1111
00:46:08,240 --> 00:46:09,520
that you want the minimum number of

1112
00:46:09,520 --> 00:46:11,920
multiplications as you can

1113
00:46:11,920 --> 00:46:15,440
so we use block ciphers inside

1114
00:46:15,440 --> 00:46:16,880
inside picnic that have low

1115
00:46:16,880 --> 00:46:19,200
multiplication depth and

1116
00:46:19,200 --> 00:46:22,000
low mc is designed for this type of use

1117
00:46:22,000 --> 00:46:26,079
cases so low mc is used for pikmin

1118
00:46:26,079 --> 00:46:27,040
so

1119
00:46:27,040 --> 00:46:28,880
exactly what is the scenario that we're

1120
00:46:28,880 --> 00:46:32,480
considering is that so picnics uh public

1121
00:46:32,480 --> 00:46:34,400
key consists of a plaintext ciphertext

1122
00:46:34,400 --> 00:46:36,480
pair so we can only consider that we

1123
00:46:36,480 --> 00:46:38,960
have a single plaintext ciphertext pair

1124
00:46:38,960 --> 00:46:40,240
and we're in the given plaintext

1125
00:46:40,240 --> 00:46:42,319
ciphertext

1126
00:46:42,319 --> 00:46:43,440
setting

1127
00:46:43,440 --> 00:46:46,319
and also each extra round when we do mpc

1128
00:46:46,319 --> 00:46:48,720
computations counts so we want to keep

1129
00:46:48,720 --> 00:46:50,000
the multiplication depth as low as

1130
00:46:50,000 --> 00:46:51,839
possible so it's good to analyze

1131
00:46:51,839 --> 00:46:54,720
variants of one c which have really low

1132
00:46:54,720 --> 00:46:56,800
depth multiplication depth which means

1133
00:46:56,800 --> 00:46:59,520
lower rounds so looking at low mc it's a

1134
00:46:59,520 --> 00:47:01,760
simple spn network

1135
00:47:01,760 --> 00:47:04,800
uh and is actually networking spn so it

1136
00:47:04,800 --> 00:47:06,000
has a three bit

1137
00:47:06,000 --> 00:47:08,160
s box as you can see it's written there

1138
00:47:08,160 --> 00:47:10,480
it's a pretty simple s-box and s-box

1139
00:47:10,480 --> 00:47:13,040
works on three disjoint bits in every

1140
00:47:13,040 --> 00:47:14,319
round and then

1141
00:47:14,319 --> 00:47:15,839
it's followed by an affine layer and the

1142
00:47:15,839 --> 00:47:18,319
round key so the only non-linearity

1143
00:47:18,319 --> 00:47:21,760
in the whole round would be the s-box

1144
00:47:21,760 --> 00:47:24,160
and then we have two variants we either

1145
00:47:24,160 --> 00:47:25,839
call it like a full s box layer or a

1146
00:47:25,839 --> 00:47:27,680
partial s box layer depending on whether

1147
00:47:27,680 --> 00:47:28,880
there are some inputs of the round

1148
00:47:28,880 --> 00:47:31,200
passing 3ds boxes like all the inputs

1149
00:47:31,200 --> 00:47:33,920
are passing through or some are not

1150
00:47:33,920 --> 00:47:35,119
so

1151
00:47:35,119 --> 00:47:36,640
let's talk about data complexity one

1152
00:47:36,640 --> 00:47:38,160
attacks that already have been done the

1153
00:47:38,160 --> 00:47:40,319
first work is by us

1154
00:47:40,319 --> 00:47:42,160
it's supposed to be presented in ffc

1155
00:47:42,160 --> 00:47:45,440
2022 because fse was postponed twice so

1156
00:47:45,440 --> 00:47:47,760
in that work we break up to

1157
00:47:47,760 --> 00:47:49,440
the full round variant we break up to

1158
00:47:49,440 --> 00:47:51,760
two rounds and for the partial variance

1159
00:47:51,760 --> 00:47:53,359
we break up to point eight and over

1160
00:47:53,359 --> 00:47:55,280
restaurants and then this here at

1161
00:47:55,280 --> 00:47:57,920
eurocrypt linux presented an attack that

1162
00:47:57,920 --> 00:47:59,760
only works for the full round variant

1163
00:47:59,760 --> 00:48:01,760
and it breaks up to five rounds and for

1164
00:48:01,760 --> 00:48:04,240
the four round variant and for n equal

1165
00:48:04,240 --> 00:48:07,359
to 129 it breaks up to four runs only

1166
00:48:07,359 --> 00:48:08,160
okay

1167
00:48:08,160 --> 00:48:10,480
so the numerous algorithm uses some

1168
00:48:10,480 --> 00:48:12,400
fourier techniques and some thing called

1169
00:48:12,400 --> 00:48:14,160
the multiparity counting algorithm and

1170
00:48:14,160 --> 00:48:16,480
we use some linearization method that we

1171
00:48:16,480 --> 00:48:17,839
will see in a second

1172
00:48:17,839 --> 00:48:19,440
so in this work we will present a meet

1173
00:48:19,440 --> 00:48:21,040
in the middle attack

1174
00:48:21,040 --> 00:48:22,640
for the fullest box layer we will break

1175
00:48:22,640 --> 00:48:24,640
up to three rounds for the partial s fox

1176
00:48:24,640 --> 00:48:26,319
layer we will break up to n over s

1177
00:48:26,319 --> 00:48:28,319
rounds

1178
00:48:28,319 --> 00:48:31,119
so the new attack uses the linearization

1179
00:48:31,119 --> 00:48:33,040
ideas that we had from the previous work

1180
00:48:33,040 --> 00:48:35,200
plus some method that i called extended

1181
00:48:35,200 --> 00:48:37,520
linearized we'll see in a second

1182
00:48:37,520 --> 00:48:39,599
so what is the linearization this is a

1183
00:48:39,599 --> 00:48:41,200
an informal version of the theorem that

1184
00:48:41,200 --> 00:48:42,880
we had in the previous work so it says

1185
00:48:42,880 --> 00:48:45,040
that if i guess the output of any

1186
00:48:45,040 --> 00:48:46,880
quadratic function any balanced

1187
00:48:46,880 --> 00:48:48,400
quadratic function in the input of the

1188
00:48:48,400 --> 00:48:51,359
xbox of low mc i can linearize this box

1189
00:48:51,359 --> 00:48:53,760
so for instance i can take the majority

1190
00:48:53,760 --> 00:48:55,359
function the three bit majority function

1191
00:48:55,359 --> 00:48:57,119
if i guess the majority of the inputs of

1192
00:48:57,119 --> 00:48:59,920
the s box i can linearize this box

1193
00:48:59,920 --> 00:49:00,800
so

1194
00:49:00,800 --> 00:49:02,720
inherently for a

1195
00:49:02,720 --> 00:49:04,960
for a round if i guess the majorities of

1196
00:49:04,960 --> 00:49:06,880
every single s box that i have in that

1197
00:49:06,880 --> 00:49:10,400
round the whole round becomes linear

1198
00:49:10,400 --> 00:49:13,040
so now let's see how the attack works

1199
00:49:13,040 --> 00:49:15,040
so we use an mitm attack that was

1200
00:49:15,040 --> 00:49:16,319
proposed a meeting a middle attack that

1201
00:49:16,319 --> 00:49:18,319
was proposed in the previous fork so the

1202
00:49:18,319 --> 00:49:20,160
idea is i will break my key into two

1203
00:49:20,160 --> 00:49:22,960
parts k1 and k2 and for all the rounds

1204
00:49:22,960 --> 00:49:24,480
other than the first round i will guess

1205
00:49:24,480 --> 00:49:27,599
all the majorities of every s box input

1206
00:49:27,599 --> 00:49:29,680
and linearize all the other ones then i

1207
00:49:29,680 --> 00:49:32,000
do a four for propagation

1208
00:49:32,000 --> 00:49:33,599
to get

1209
00:49:33,599 --> 00:49:36,800
an equation of this form uh

1210
00:49:36,800 --> 00:49:38,640
and back for propagation for the last

1211
00:49:38,640 --> 00:49:39,920
rounds

1212
00:49:39,920 --> 00:49:41,520
and get an equation in this form which

1213
00:49:41,520 --> 00:49:43,359
left hand side is only in k1 and right

1214
00:49:43,359 --> 00:49:46,880
hand side is only in k2 and ai and bi

1215
00:49:46,880 --> 00:49:48,640
are linear they come from the backward

1216
00:49:48,640 --> 00:49:51,280
propagation and fi and gi are quadratic

1217
00:49:51,280 --> 00:49:54,000
and come from the forward direction

1218
00:49:54,000 --> 00:49:55,520
now what i will do is that i will also

1219
00:49:55,520 --> 00:49:58,720
divide my k2 into two parts and the

1220
00:49:58,720 --> 00:50:00,160
point is although these functions are

1221
00:50:00,160 --> 00:50:01,599
quadratic they're really sparse

1222
00:50:01,599 --> 00:50:03,599
quadratic functions because how the low

1223
00:50:03,599 --> 00:50:05,599
mcas box works

1224
00:50:05,599 --> 00:50:07,280
so what i can do i can re-linearize i

1225
00:50:07,280 --> 00:50:09,119
can extend my space and re-linearize

1226
00:50:09,119 --> 00:50:11,680
these equations and get some linear

1227
00:50:11,680 --> 00:50:13,520
equation over a bigger space of this

1228
00:50:13,520 --> 00:50:15,680
form now my left hand side is not full

1229
00:50:15,680 --> 00:50:18,160
rank so i can compute the kernel of it

1230
00:50:18,160 --> 00:50:20,160
let's call it h

1231
00:50:20,160 --> 00:50:22,400
and then i get an equation like this in

1232
00:50:22,400 --> 00:50:24,319
the two halves of the second part of the

1233
00:50:24,319 --> 00:50:27,359
key of k2 which this is perfect amount

1234
00:50:27,359 --> 00:50:30,000
to meet in the middle attack

1235
00:50:30,000 --> 00:50:31,280
so

1236
00:50:31,280 --> 00:50:33,280
exactly i do a collision search attack

1237
00:50:33,280 --> 00:50:36,640
type of thing between k21 and k22 and i

1238
00:50:36,640 --> 00:50:39,440
keep a list of all k2 good k2 values

1239
00:50:39,440 --> 00:50:40,640
that i have

1240
00:50:40,640 --> 00:50:42,000
and then i do a meet in the middle

1241
00:50:42,000 --> 00:50:44,240
between k1 values and k2 values that are

1242
00:50:44,240 --> 00:50:45,839
already in this list

1243
00:50:45,839 --> 00:50:47,680
so as you can see

1244
00:50:47,680 --> 00:50:49,440
at each part i'm only using 2 to the

1245
00:50:49,440 --> 00:50:52,160
power n over 3 values

1246
00:50:52,160 --> 00:50:54,400
of the key let's say and for the partial

1247
00:50:54,400 --> 00:50:56,160
round i can do something similar as well

1248
00:50:56,160 --> 00:50:59,040
here it's more delicate like it needs

1249
00:50:59,040 --> 00:51:02,000
way more uh it has way more details but

1250
00:51:02,000 --> 00:51:05,200
simply the idea is similar i will uh

1251
00:51:05,200 --> 00:51:07,760
split my rounds into the first a rounds

1252
00:51:07,760 --> 00:51:10,240
then the b rounds after some rounds in

1253
00:51:10,240 --> 00:51:12,079
middle which i call the middle runs and

1254
00:51:12,079 --> 00:51:15,119
then the c the last c rounds

1255
00:51:15,119 --> 00:51:16,880
and what i will do is that i will

1256
00:51:16,880 --> 00:51:18,480
linearize the middle rounds by guessing

1257
00:51:18,480 --> 00:51:20,400
the majorities then i will extend the

1258
00:51:20,400 --> 00:51:22,800
space and re-linearize every equation

1259
00:51:22,800 --> 00:51:26,000
that i found based on

1260
00:51:26,720 --> 00:51:28,960
the equations induced by my cipher and

1261
00:51:28,960 --> 00:51:30,400
then i will do two meet in the middle

1262
00:51:30,400 --> 00:51:33,200
attacks first one is between ka and kc

1263
00:51:33,200 --> 00:51:35,599
so the first rounds and the last rounds

1264
00:51:35,599 --> 00:51:37,599
and the second one is between the good

1265
00:51:37,599 --> 00:51:39,760
values that i have for ka and kc and the

1266
00:51:39,760 --> 00:51:41,920
kb values okay

1267
00:51:41,920 --> 00:51:44,079
so let's conclude this in this fork we

1268
00:51:44,079 --> 00:51:46,400
propose uh attacks for both

1269
00:51:46,400 --> 00:51:48,640
full layer s box and partial layer for

1270
00:51:48,640 --> 00:51:50,240
full erase box we break up the three

1271
00:51:50,240 --> 00:51:53,200
rounds it's not very impressive but we

1272
00:51:53,200 --> 00:51:54,480
have the fastest attack for the two

1273
00:51:54,480 --> 00:51:57,200
round variants but we have the benchmark

1274
00:51:57,200 --> 00:52:00,240
attack for the partial layer s box so we

1275
00:52:00,240 --> 00:52:02,079
can break up to n over s runs and we

1276
00:52:02,079 --> 00:52:04,079
have the fastest attacks for all the

1277
00:52:04,079 --> 00:52:06,960
partial layer variants

1278
00:52:06,960 --> 00:52:07,839
and

1279
00:52:07,839 --> 00:52:10,559
to wrap it up we should not go on a

1280
00:52:10,559 --> 00:52:12,880
picnic on a rainy day so make sure that

1281
00:52:12,880 --> 00:52:15,040
you choose your parameters

1282
00:52:15,040 --> 00:52:17,040
smartly when you're using

1283
00:52:17,040 --> 00:52:18,640
block ciphers with low multiplication

1284
00:52:18,640 --> 00:52:22,480
that thank you very much for listening

1285
00:52:22,559 --> 00:52:24,559
okay thanks share

1286
00:52:24,559 --> 00:52:27,800
any questions

1287
00:52:36,079 --> 00:52:38,720
i don't see any question um

1288
00:52:38,720 --> 00:52:42,640
so uh you have uh more works on this

1289
00:52:42,640 --> 00:52:46,400
attack is coming up right

1290
00:52:46,400 --> 00:52:47,920
yes there is someone going working at

1291
00:52:47,920 --> 00:52:49,520
the moment

1292
00:52:49,520 --> 00:52:50,319
as well

1293
00:52:50,319 --> 00:52:51,280
so

1294
00:52:51,280 --> 00:52:53,599
um how cs the

1295
00:52:53,599 --> 00:52:55,839
now low mc is knowing

1296
00:52:55,839 --> 00:52:59,040
irrespective of those

1297
00:52:59,040 --> 00:53:00,079
uh attacks

1298
00:53:00,079 --> 00:53:03,680
really hard to say because

1299
00:53:04,240 --> 00:53:06,160
it's a real trade-off between how many

1300
00:53:06,160 --> 00:53:07,760
rounds you want because if you're

1301
00:53:07,760 --> 00:53:09,599
looking at picnic if you're considering

1302
00:53:09,599 --> 00:53:11,440
the use case and picnic it's really a

1303
00:53:11,440 --> 00:53:12,960
trade-off between how many rounds you

1304
00:53:12,960 --> 00:53:15,440
want because how picnic works to give

1305
00:53:15,440 --> 00:53:17,200
like a

1306
00:53:17,200 --> 00:53:20,000
high level idea so the prover so we have

1307
00:53:20,000 --> 00:53:21,680
a proof of identification system that

1308
00:53:21,680 --> 00:53:23,599
the approver is simulating an npc

1309
00:53:23,599 --> 00:53:25,920
computation so it's dividing the secret

1310
00:53:25,920 --> 00:53:28,960
key into shares and then doing an mpc

1311
00:53:28,960 --> 00:53:31,760
encryption and like an npc doing in low

1312
00:53:31,760 --> 00:53:32,800
mc

1313
00:53:32,800 --> 00:53:35,119
encryption in an mpc manner so every

1314
00:53:35,119 --> 00:53:36,559
round that you add you will add more

1315
00:53:36,559 --> 00:53:38,400
multiplications and then you will have a

1316
00:53:38,400 --> 00:53:40,800
huge overheads on your approver which is

1317
00:53:40,800 --> 00:53:42,640
your sign in the end

1318
00:53:42,640 --> 00:53:45,200
so it's a real trade-off so i think

1319
00:53:45,200 --> 00:53:47,119
as i said the newest algorithm breaks up

1320
00:53:47,119 --> 00:53:49,520
to five runs so the current thing that

1321
00:53:49,520 --> 00:53:51,520
we have we might be able to go up to

1322
00:53:51,520 --> 00:53:53,760
seven rounds i guess but the difference

1323
00:53:53,760 --> 00:53:55,440
with exhaustive search is really not

1324
00:53:55,440 --> 00:53:57,680
that much so i'm not sure if it's really

1325
00:53:57,680 --> 00:53:59,040
concerning

1326
00:53:59,040 --> 00:54:01,839
but yes uh i think they're like

1327
00:54:01,839 --> 00:54:04,240
ongoing work on this mpc and had

1328
00:54:04,240 --> 00:54:05,520
signatures

1329
00:54:05,520 --> 00:54:07,839
follow-ups to picnic which look more

1330
00:54:07,839 --> 00:54:11,280
promising i would say right yeah thanks

1331
00:54:11,280 --> 00:54:15,599
for these comments yeah any question

1332
00:54:18,160 --> 00:54:21,680
okay if not uh then i

1333
00:54:21,680 --> 00:54:23,920
uh i thank again kasha for this

1334
00:54:23,920 --> 00:54:26,000
wonderful talk thank you

1335
00:54:26,000 --> 00:54:28,400
we see that we have still time for more

1336
00:54:28,400 --> 00:54:30,480
questions if you have from the previous

1337
00:54:30,480 --> 00:54:31,680
talks

1338
00:54:31,680 --> 00:54:33,839
we can have those questions please go

1339
00:54:33,839 --> 00:54:36,839
ahead

1340
00:54:42,480 --> 00:54:44,640
okay so i have the question on this uh

1341
00:54:44,640 --> 00:54:47,440
quantum rebound attack uh

1342
00:54:47,440 --> 00:54:51,559
connect the author please

1343
00:55:02,960 --> 00:55:04,559
yes

1344
00:55:04,559 --> 00:55:06,880
yeah so you

1345
00:55:06,880 --> 00:55:08,400
have this tag

1346
00:55:08,400 --> 00:55:11,599
um i'm just not expert in quantum but

1347
00:55:11,599 --> 00:55:14,000
just wondering uh what about the uh x

1348
00:55:14,000 --> 00:55:16,160
frame intel validation so is there any

1349
00:55:16,160 --> 00:55:20,240
simulation available there

1350
00:55:20,240 --> 00:55:22,959
all right and

1351
00:55:23,040 --> 00:55:25,280
so you applied grover

1352
00:55:25,280 --> 00:55:26,640
right yes

1353
00:55:26,640 --> 00:55:28,160
yeah so i'm just

1354
00:55:28,160 --> 00:55:30,640
what's up

1355
00:55:30,720 --> 00:55:33,839
so is there any experimental validation

1356
00:55:33,839 --> 00:55:37,200
of the quantum part that you did

1357
00:55:38,240 --> 00:55:39,359
um

1358
00:55:39,359 --> 00:55:42,559
you mean host con

1359
00:55:42,559 --> 00:55:44,880
sorry

1360
00:55:45,920 --> 00:55:48,000
is there any simulation result on the

1361
00:55:48,000 --> 00:55:51,599
quantum part of your attack

1362
00:55:51,599 --> 00:55:53,119
or we have to wait until the real

1363
00:55:53,119 --> 00:55:55,119
compute quantum computer is available

1364
00:55:55,119 --> 00:55:58,799
for this attack to validate

1365
00:56:01,359 --> 00:56:04,079
sorry sorry i can't follow

1366
00:56:04,079 --> 00:56:05,200
um

1367
00:56:05,200 --> 00:56:07,200
okay we can take this question offline

1368
00:56:07,200 --> 00:56:08,960
fine thank you

1369
00:56:08,960 --> 00:56:11,200
thank you

1370
00:56:14,079 --> 00:56:16,480
you wanna say something

1371
00:56:16,480 --> 00:56:19,119
yeah i have a one short question about

1372
00:56:19,119 --> 00:56:20,000
the

1373
00:56:20,000 --> 00:56:21,599
yeah simon

1374
00:56:21,599 --> 00:56:24,079
cymex attack

1375
00:56:24,079 --> 00:56:26,000
right yes okay

1376
00:56:26,000 --> 00:56:28,880
so yeah it seems that the idea of

1377
00:56:28,880 --> 00:56:30,720
limiting the window

1378
00:56:30,720 --> 00:56:31,440
to

1379
00:56:31,440 --> 00:56:33,520
the focusing for focusing on the

1380
00:56:33,520 --> 00:56:36,319
possible differential and linear

1381
00:56:36,319 --> 00:56:39,119
characteristic seems a very generic

1382
00:56:39,119 --> 00:56:40,559
idea

1383
00:56:40,559 --> 00:56:43,359
and how do you think that an

1384
00:56:43,359 --> 00:56:46,000
application to other yeah other ciphers

1385
00:56:46,000 --> 00:56:47,599
for this yeah

1386
00:56:47,599 --> 00:56:50,960
idea or did you see any similar

1387
00:56:50,960 --> 00:56:54,160
work on other cryptanalysis on other

1388
00:56:54,160 --> 00:56:55,760
cyphers

1389
00:56:55,760 --> 00:56:56,640
uh

1390
00:56:56,640 --> 00:56:58,880
i think it's not easy to apply this to

1391
00:56:58,880 --> 00:57:01,680
other ciphers because uh here it works

1392
00:57:01,680 --> 00:57:04,000
well because there is only rotations

1393
00:57:04,000 --> 00:57:05,680
there are no other

1394
00:57:05,680 --> 00:57:07,760
mixing between between the bits because

1395
00:57:07,760 --> 00:57:09,839
if there are some mixing steps that then

1396
00:57:09,839 --> 00:57:11,760
it will not

1397
00:57:11,760 --> 00:57:15,520
and but probably for the cipher t i'm i

1398
00:57:15,520 --> 00:57:16,880
don't know exactly

1399
00:57:16,880 --> 00:57:17,760
how

1400
00:57:17,760 --> 00:57:20,400
we pronounce it so t e a

1401
00:57:20,400 --> 00:57:21,920
yeah yeah

1402
00:57:21,920 --> 00:57:22,880
yes

1403
00:57:22,880 --> 00:57:24,880
we can probably apply something like

1404
00:57:24,880 --> 00:57:28,640
that but we didn't look in details

1405
00:57:28,640 --> 00:57:31,599
so basically possibly applicable to very

1406
00:57:31,599 --> 00:57:33,119
simple

1407
00:57:33,119 --> 00:57:36,240
uh a cipher right because consisting of

1408
00:57:36,240 --> 00:57:38,960
the addition rotation the next or sort

1409
00:57:38,960 --> 00:57:41,520
of this simple write our page

1410
00:57:41,520 --> 00:57:44,559
all right yeah thank you

1411
00:57:47,920 --> 00:57:50,160
any more question or any discussion you

1412
00:57:50,160 --> 00:57:53,799
would like to have

1413
00:57:57,040 --> 00:57:59,520
um if not maybe because you can end this

1414
00:57:59,520 --> 00:58:02,640
session and go for break

1415
00:58:02,640 --> 00:58:03,599
okay

1416
00:58:03,599 --> 00:58:06,960
okay it's almost time so yeah thanks for

1417
00:58:06,960 --> 00:58:09,680
joining this session and

1418
00:58:09,680 --> 00:58:12,000
thanks for the wonderful talk

1419
00:58:12,000 --> 00:58:13,839
for the presenters

1420
00:58:13,839 --> 00:58:15,440
okay so

1421
00:58:15,440 --> 00:58:17,680
thanks and yeah

1422
00:58:17,680 --> 00:58:19,920
let's move to the uh what the next

1423
00:58:19,920 --> 00:58:21,200
program

1424
00:58:21,200 --> 00:58:23,920
i haven't checked but then uh yeah

1425
00:58:23,920 --> 00:58:27,760
yeah let's move to there yeah next

