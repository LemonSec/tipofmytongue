1
00:00:01,040 --> 00:00:03,439
hi my name is lin lu welcome to the top

2
00:00:03,439 --> 00:00:06,399
of our asia crypt 2021 paper digital

3
00:00:06,399 --> 00:00:08,480
signatures with memory tight security in

4
00:00:08,480 --> 00:00:10,240
the multi-challenge setting

5
00:00:10,240 --> 00:00:12,320
this is joint work with dennis diemert

6
00:00:12,320 --> 00:00:14,960
kai gallat and tiba jagger we are from

7
00:00:14,960 --> 00:00:17,840
the university of roberto

8
00:00:17,840 --> 00:00:19,760
in this talk i will first provide some

9
00:00:19,760 --> 00:00:21,600
background knowledge about memory type

10
00:00:21,600 --> 00:00:24,240
reductions and digital signatures i will

11
00:00:24,240 --> 00:00:26,080
also talk about security of digital

12
00:00:26,080 --> 00:00:27,680
signatures in the multi-challenge

13
00:00:27,680 --> 00:00:28,640
setting

14
00:00:28,640 --> 00:00:30,800
then i will recall some impossibility

15
00:00:30,800 --> 00:00:32,800
results in getting memory type digital

16
00:00:32,800 --> 00:00:34,800
signatures in this setting

17
00:00:34,800 --> 00:00:36,559
in the second part of this talk i will

18
00:00:36,559 --> 00:00:38,399
talk about how we currently

19
00:00:38,399 --> 00:00:41,280
impossibility results and our approach

20
00:00:41,280 --> 00:00:43,760
can be divided into two steps

21
00:00:43,760 --> 00:00:46,160
in the first step we achieve a weak

22
00:00:46,160 --> 00:00:47,600
memory tied security in the

23
00:00:47,600 --> 00:00:49,600
multi-challenge setting which we call

24
00:00:49,600 --> 00:00:53,280
the msuf cma-1 security by the help of a

25
00:00:53,280 --> 00:00:55,920
special kind of reductions which we call

26
00:00:55,920 --> 00:00:58,320
the canonical reductions

27
00:00:58,320 --> 00:01:00,399
and in the second step we propose a

28
00:01:00,399 --> 00:01:03,120
generic and memory type transformation

29
00:01:03,120 --> 00:01:06,640
from the msuf cma1 security to the msuf

30
00:01:06,640 --> 00:01:08,880
cma security

31
00:01:08,880 --> 00:01:11,200
and next i will talk about the

32
00:01:11,200 --> 00:01:13,680
instantiations of our approach and

33
00:01:13,680 --> 00:01:17,040
compare them with existing schemes

34
00:01:17,040 --> 00:01:19,520
finally i summarize our work and raise

35
00:01:19,520 --> 00:01:23,119
some interesting open problems

36
00:01:23,680 --> 00:01:25,439
first let's talk about security

37
00:01:25,439 --> 00:01:28,000
reductions

38
00:01:28,799 --> 00:01:30,960
when we build some cryptographic scheme

39
00:01:30,960 --> 00:01:32,960
and want to prove certain security of

40
00:01:32,960 --> 00:01:35,439
this scheme based on some assumption

41
00:01:35,439 --> 00:01:37,200
what we usually do is to build a

42
00:01:37,200 --> 00:01:39,439
reduction r which transfers any

43
00:01:39,439 --> 00:01:41,520
adversary breaking the security of this

44
00:01:41,520 --> 00:01:44,640
scheme into a problem solver

45
00:01:44,640 --> 00:01:46,240
in this work we are interested in

46
00:01:46,240 --> 00:01:48,640
non-interactive problems which can be a

47
00:01:48,640 --> 00:01:52,000
computational problem like cdh or rsa

48
00:01:52,000 --> 00:01:55,600
or can be a decision problem like ddh

49
00:01:55,600 --> 00:01:57,759
the reduction gets an instance pi of

50
00:01:57,759 --> 00:02:00,000
this problem and simulates the initial

51
00:02:00,000 --> 00:02:02,159
input of the adversary

52
00:02:02,159 --> 00:02:04,079
when the anniversary makes some oracle

53
00:02:04,079 --> 00:02:06,719
queries to the reduction the reduction r

54
00:02:06,719 --> 00:02:09,360
will simulate and the oracle and the

55
00:02:09,360 --> 00:02:11,840
responses for the adversary

56
00:02:11,840 --> 00:02:14,640
finally the anniversary output something

57
00:02:14,640 --> 00:02:16,879
and the reduction will use this output

58
00:02:16,879 --> 00:02:19,200
together with this view to extract some

59
00:02:19,200 --> 00:02:22,720
solution s to the problem pi and output

60
00:02:22,720 --> 00:02:25,120
the solution s

61
00:02:25,120 --> 00:02:26,959
we usually measure the quality of a

62
00:02:26,959 --> 00:02:29,120
reduction while its running time and its

63
00:02:29,120 --> 00:02:31,599
success probability or advantage

64
00:02:31,599 --> 00:02:34,000
we say a reduction r is tight if the

65
00:02:34,000 --> 00:02:36,400
overall running time of the reduction

66
00:02:36,400 --> 00:02:39,440
is approx is approximately the same with

67
00:02:39,440 --> 00:02:42,080
the running time of the of the adversary

68
00:02:42,080 --> 00:02:43,920
and the success probability or the

69
00:02:43,920 --> 00:02:46,000
advantage of the reduction

70
00:02:46,000 --> 00:02:48,160
is approximately the same

71
00:02:48,160 --> 00:02:49,840
with the success probability or the

72
00:02:49,840 --> 00:02:52,400
advantage of the adversary

73
00:02:52,400 --> 00:02:54,959
it is very often that the reductions are

74
00:02:54,959 --> 00:02:57,440
not tight for example we often see

75
00:02:57,440 --> 00:02:59,920
reductions such that the running time is

76
00:02:59,920 --> 00:03:02,720
tight but the advantage reduces by a

77
00:03:02,720 --> 00:03:05,840
factor of l this factor l is called the

78
00:03:05,840 --> 00:03:08,640
security loss of the reduction r

79
00:03:08,640 --> 00:03:11,680
and it is not tight if l depends on the

80
00:03:11,680 --> 00:03:14,720
adversary for example l equals to the

81
00:03:14,720 --> 00:03:16,840
number of queries made by the

82
00:03:16,840 --> 00:03:18,480
adversary

83
00:03:18,480 --> 00:03:22,159
alba cash fesh and kills notice that

84
00:03:22,159 --> 00:03:24,080
actually memory is also a valuable

85
00:03:24,080 --> 00:03:26,560
computational resource and should be

86
00:03:26,560 --> 00:03:28,720
considered as a measurement for

87
00:03:28,720 --> 00:03:30,159
reductions

88
00:03:30,159 --> 00:03:32,720
they propose the concept of memory type

89
00:03:32,720 --> 00:03:34,080
reductions

90
00:03:34,080 --> 00:03:36,319
and the reduction is memory tight if the

91
00:03:36,319 --> 00:03:39,120
overall memory consumed by the reduction

92
00:03:39,120 --> 00:03:41,440
is approximately the same with the

93
00:03:41,440 --> 00:03:43,680
memory consumed by the adversary

94
00:03:43,680 --> 00:03:45,920
this means that the additional memory

95
00:03:45,920 --> 00:03:48,480
consumed by the reduction itself is

96
00:03:48,480 --> 00:03:50,959
little compared with the memory consumed

97
00:03:50,959 --> 00:03:53,760
by the anniversary and is independent of

98
00:03:53,760 --> 00:03:55,920
the anniversary

99
00:03:55,920 --> 00:03:57,760
providing memory type reductions for

100
00:03:57,760 --> 00:04:00,560
crypto for cryptographic schemes is of

101
00:04:00,560 --> 00:04:02,159
great importance

102
00:04:02,159 --> 00:04:04,480
especially when the underlying problem

103
00:04:04,480 --> 00:04:06,640
is a memory sensitive one

104
00:04:06,640 --> 00:04:09,040
in this talk we will call a reduction

105
00:04:09,040 --> 00:04:12,159
fully tight if it's if it is tight in

106
00:04:12,159 --> 00:04:16,478
terms of time advantage and memory

107
00:04:16,478 --> 00:04:19,120
next let us briefly recall the public

108
00:04:19,120 --> 00:04:22,000
key primitive of digital signatures

109
00:04:22,000 --> 00:04:23,919
a digital signature scheme allows a

110
00:04:23,919 --> 00:04:26,240
secret key holder to authenticate any

111
00:04:26,240 --> 00:04:27,440
message

112
00:04:27,440 --> 00:04:29,120
by generating a signature for this

113
00:04:29,120 --> 00:04:31,199
message using the secret key

114
00:04:31,199 --> 00:04:33,120
anyone who has the corresponding public

115
00:04:33,120 --> 00:04:36,000
key can publicly verify the validity of

116
00:04:36,000 --> 00:04:38,320
the signature for this message using the

117
00:04:38,320 --> 00:04:39,600
public key

118
00:04:39,600 --> 00:04:42,160
and for security of digital signatures

119
00:04:42,160 --> 00:04:44,880
the most commonly commonly accepted

120
00:04:44,880 --> 00:04:46,639
security is the existing show

121
00:04:46,639 --> 00:04:48,800
affordability and their chosen message

122
00:04:48,800 --> 00:04:53,040
attack security or ufcma security

123
00:04:53,040 --> 00:04:56,000
in the ufcma security game an adversary

124
00:04:56,000 --> 00:04:58,960
gets a public key as initial input and

125
00:04:58,960 --> 00:05:01,039
can have multiple access to a side

126
00:05:01,039 --> 00:05:02,240
article

127
00:05:02,240 --> 00:05:04,800
in each query to this cya oracle the

128
00:05:04,800 --> 00:05:07,199
adversary adaptively selects a message

129
00:05:07,199 --> 00:05:11,280
mi and gets a signature sigma i for mi

130
00:05:11,280 --> 00:05:13,680
in the end of the game the anniversary

131
00:05:13,680 --> 00:05:16,000
makes a false query by submitting a

132
00:05:16,000 --> 00:05:18,240
message signature pair and star sigma

133
00:05:18,240 --> 00:05:20,800
star to the challenger

134
00:05:20,800 --> 00:05:24,800
and euf cma adversary wins if the final

135
00:05:24,800 --> 00:05:27,440
forgery is valid which means that the

136
00:05:27,440 --> 00:05:29,280
signature sigma star is a valid

137
00:05:29,280 --> 00:05:32,240
signature with respect to message m star

138
00:05:32,240 --> 00:05:34,240
and the message m star is never has

139
00:05:34,240 --> 00:05:35,280
never been

140
00:05:35,280 --> 00:05:37,840
signed before

141
00:05:37,840 --> 00:05:39,520
are also interested in a stronger

142
00:05:39,520 --> 00:05:42,320
version in this of this security which

143
00:05:42,320 --> 00:05:44,800
which is called the strong uf cma

144
00:05:44,800 --> 00:05:46,240
security

145
00:05:46,240 --> 00:05:49,600
and in the suf cma game we relax the

146
00:05:49,600 --> 00:05:51,520
winning condition for the adversary and

147
00:05:51,520 --> 00:05:53,840
allow the adversary to win even if the

148
00:05:53,840 --> 00:05:56,400
message m star has been signed before

149
00:05:56,400 --> 00:05:58,639
as long as the signature sigma star is

150
00:05:58,639 --> 00:05:59,759
new

151
00:05:59,759 --> 00:06:01,919
and putting this in some other way this

152
00:06:01,919 --> 00:06:04,400
means that the final signa message

153
00:06:04,400 --> 00:06:06,880
signature pair is not one of the message

154
00:06:06,880 --> 00:06:09,520
signature pairs that has been queried

155
00:06:09,520 --> 00:06:13,120
and answered by the assigned oracle

156
00:06:13,120 --> 00:06:15,520
both of these two

157
00:06:15,520 --> 00:06:17,680
securities consider single challenge

158
00:06:17,680 --> 00:06:20,000
adversaries where the adversary can only

159
00:06:20,000 --> 00:06:22,800
make one last forged query

160
00:06:22,800 --> 00:06:25,759
at at the end of the game

161
00:06:25,759 --> 00:06:27,840
however for memory tightness we are

162
00:06:27,840 --> 00:06:29,520
particularly interested in

163
00:06:29,520 --> 00:06:32,160
multi-challenged security

164
00:06:32,160 --> 00:06:35,440
of formalized multi-challenge ufcma

165
00:06:35,440 --> 00:06:38,720
security which we call the mfmuf cma

166
00:06:38,720 --> 00:06:41,919
security security

167
00:06:41,919 --> 00:06:45,199
in this muf cma security game adversary

168
00:06:45,199 --> 00:06:47,280
gets multiple chances to make four

169
00:06:47,280 --> 00:06:49,520
queries at any time

170
00:06:49,520 --> 00:06:52,240
the adversary wins if there exists at

171
00:06:52,240 --> 00:06:54,880
least one valid forged queries

172
00:06:54,880 --> 00:06:57,520
one valid first query among them

173
00:06:57,520 --> 00:07:00,479
here we also consider a strong

174
00:07:00,479 --> 00:07:02,960
and non-strong versions and call the

175
00:07:02,960 --> 00:07:07,280
strong version as msuf cma security

176
00:07:07,280 --> 00:07:09,680
if we do not consider memory then single

177
00:07:09,680 --> 00:07:12,720
challenge a uf cma security tightly

178
00:07:12,720 --> 00:07:15,120
implies the multi-challenge ufcma

179
00:07:15,120 --> 00:07:17,759
security the reduction can simply use

180
00:07:17,759 --> 00:07:19,520
memory to store all the message

181
00:07:19,520 --> 00:07:21,759
signature pairs for the multi-chat for

182
00:07:21,759 --> 00:07:23,919
the monty challenge adversary

183
00:07:23,919 --> 00:07:26,880
and test whether a forge repair is fresh

184
00:07:26,880 --> 00:07:28,080
or not

185
00:07:28,080 --> 00:07:30,800
and outputs the first fresh pair as its

186
00:07:30,800 --> 00:07:32,639
own forgery

187
00:07:32,639 --> 00:07:35,199
however we cannot assume that all the

188
00:07:35,199 --> 00:07:37,039
single challenge adversary will use

189
00:07:37,039 --> 00:07:39,199
memory to store the message signature

190
00:07:39,199 --> 00:07:40,240
pairs

191
00:07:40,240 --> 00:07:42,639
and a tight reduction is not obvious if

192
00:07:42,639 --> 00:07:44,800
memory is taken into consideration in

193
00:07:44,800 --> 00:07:47,599
this multi-challenge setting

194
00:07:47,599 --> 00:07:49,440
previous works have even shown some

195
00:07:49,440 --> 00:07:51,440
impossibility results for digital

196
00:07:51,440 --> 00:07:53,360
signatures in terms of

197
00:07:53,360 --> 00:07:54,479
memory type

198
00:07:54,479 --> 00:07:56,639
multi-challenge security

199
00:07:56,639 --> 00:07:59,360
more precisely al-baqara show that

200
00:07:59,360 --> 00:08:01,360
for certain black box reductions from

201
00:08:01,360 --> 00:08:03,039
the multi-channel security to the single

202
00:08:03,039 --> 00:08:05,440
challenge security it must be non-tied

203
00:08:05,440 --> 00:08:07,039
with respect to

204
00:08:07,039 --> 00:08:08,479
memory or time

205
00:08:08,479 --> 00:08:10,639
they provide a memory type reduction for

206
00:08:10,639 --> 00:08:13,759
the rsa photo may hash signature scheme

207
00:08:13,759 --> 00:08:16,160
but it is not tight in terms of

208
00:08:16,160 --> 00:08:18,560
advantage or time

209
00:08:18,560 --> 00:08:21,440
one method generalizes their results and

210
00:08:21,440 --> 00:08:22,720
show that

211
00:08:22,720 --> 00:08:24,720
certain natural black box reductions

212
00:08:24,720 --> 00:08:27,680
from the multi-channel security to any

213
00:08:27,680 --> 00:08:30,160
computational problem must be non-typed

214
00:08:30,160 --> 00:08:32,479
with respect to memory or time

215
00:08:32,479 --> 00:08:34,958
they also show some lower bounds for the

216
00:08:34,958 --> 00:08:37,279
security in the multi-user setting and

217
00:08:37,279 --> 00:08:40,880
clearly resist hashing settings

218
00:08:40,880 --> 00:08:43,599
it seems that we only have some bad news

219
00:08:43,599 --> 00:08:45,279
for memory type signatures in the

220
00:08:45,279 --> 00:08:47,839
multi-challenge setting

221
00:08:47,839 --> 00:08:50,080
and in our work we propose an approach

222
00:08:50,080 --> 00:08:52,800
to curcumin these lower bounds

223
00:08:52,800 --> 00:08:55,120
instead of focusing on the properties of

224
00:08:55,120 --> 00:08:56,959
reductions that would make the

225
00:08:56,959 --> 00:08:59,839
impossibility results hold we focus on

226
00:08:59,839 --> 00:09:01,440
finding which properties of the

227
00:09:01,440 --> 00:09:04,399
reduction are are sufficient to achieve

228
00:09:04,399 --> 00:09:06,160
memory tightness in the multi-challenge

229
00:09:06,160 --> 00:09:07,519
setting

230
00:09:07,519 --> 00:09:09,360
however we need to keep in mind the

231
00:09:09,360 --> 00:09:11,279
lower bounds proposed by alba hathaway

232
00:09:11,279 --> 00:09:13,519
and one metal about black box reductions

233
00:09:13,519 --> 00:09:15,920
in the multi-challenge setting

234
00:09:15,920 --> 00:09:18,320
so what we consider is non-black box

235
00:09:18,320 --> 00:09:19,519
reductions

236
00:09:19,519 --> 00:09:21,279
and furthermore we consider weaker

237
00:09:21,279 --> 00:09:23,279
security notion in the multi-challenge

238
00:09:23,279 --> 00:09:25,200
setting

239
00:09:25,200 --> 00:09:28,240
however even in this weaker setting we

240
00:09:28,240 --> 00:09:30,480
still face the main challenge that the

241
00:09:30,480 --> 00:09:33,120
reduction r must be able to distinguish

242
00:09:33,120 --> 00:09:35,600
fresh forgery from replayed message

243
00:09:35,600 --> 00:09:40,000
signature pair without using memory

244
00:09:40,000 --> 00:09:42,320
our first step towards solving this

245
00:09:42,320 --> 00:09:44,640
problem is that we consider a weaker

246
00:09:44,640 --> 00:09:46,560
security notion which is the one

247
00:09:46,560 --> 00:09:49,120
signature per message security or the

248
00:09:49,120 --> 00:09:52,480
cma1 security the cma1 security game

249
00:09:52,480 --> 00:09:54,800
differs from the classical cma security

250
00:09:54,800 --> 00:09:56,720
in the sense that if the adversary

251
00:09:56,720 --> 00:09:58,959
queries design oracle for the same

252
00:09:58,959 --> 00:10:01,920
message multiple times the cma1 game

253
00:10:01,920 --> 00:10:04,079
will only generate a fresh signature for

254
00:10:04,079 --> 00:10:06,800
the first query and the adversary will

255
00:10:06,800 --> 00:10:09,600
receive the signature response of all

256
00:10:09,600 --> 00:10:13,040
the other queries for the same message

257
00:10:13,040 --> 00:10:15,040
that means for each message the

258
00:10:15,040 --> 00:10:17,600
adversary only gets one freshly

259
00:10:17,600 --> 00:10:20,160
generated signature

260
00:10:20,160 --> 00:10:22,880
and note that usually we still need a

261
00:10:22,880 --> 00:10:25,519
memory to store message signature pairs

262
00:10:25,519 --> 00:10:28,000
in order to reply the same signature to

263
00:10:28,000 --> 00:10:29,920
the adversary when the same message is

264
00:10:29,920 --> 00:10:31,839
queried

265
00:10:31,839 --> 00:10:34,800
however we observe that if there exists

266
00:10:34,800 --> 00:10:38,480
a reduction r for the cme1 security such

267
00:10:38,480 --> 00:10:40,480
that r simulates the signature in some

268
00:10:40,480 --> 00:10:43,680
deterministic way then intuitively r can

269
00:10:43,680 --> 00:10:45,760
deal with all the sign queries and

270
00:10:45,760 --> 00:10:48,079
search queries without storing any of

271
00:10:48,079 --> 00:10:50,480
the message signature pair

272
00:10:50,480 --> 00:10:52,320
the reason is that i could run the

273
00:10:52,320 --> 00:10:54,800
signature simulation algorithm each time

274
00:10:54,800 --> 00:10:57,839
it receives a sign query

275
00:10:57,839 --> 00:10:59,839
since this algorithm functions in some

276
00:10:59,839 --> 00:11:01,600
deterministic way

277
00:11:01,600 --> 00:11:02,560
the thing

278
00:11:02,560 --> 00:11:04,640
the same signature will be generated for

279
00:11:04,640 --> 00:11:06,160
the same message

280
00:11:06,160 --> 00:11:08,000
for the forged query the reduction r

281
00:11:08,000 --> 00:11:09,760
could determine whether the message

282
00:11:09,760 --> 00:11:12,000
signature pair m star sigma star is

283
00:11:12,000 --> 00:11:13,519
fresh or not

284
00:11:13,519 --> 00:11:15,680
by first simulating the signature for

285
00:11:15,680 --> 00:11:16,880
sigma star

286
00:11:16,880 --> 00:11:19,760
for m star and then compare sigma star

287
00:11:19,760 --> 00:11:22,560
with the simulated signature

288
00:11:22,560 --> 00:11:25,680
if m star sigma star is a replay then it

289
00:11:25,680 --> 00:11:27,839
must be the case that sigma star equals

290
00:11:27,839 --> 00:11:30,320
to the simulated signature

291
00:11:30,320 --> 00:11:32,640
and alternatively if sigma star does not

292
00:11:32,640 --> 00:11:35,440
equal to the simulated signature then m

293
00:11:35,440 --> 00:11:38,560
star sigma star must be a fresh pair

294
00:11:38,560 --> 00:11:40,880
and in this way i could deal with all

295
00:11:40,880 --> 00:11:43,200
sine queries and false queries without

296
00:11:43,200 --> 00:11:46,880
storing the message signature pairs

297
00:11:46,880 --> 00:11:49,120
and we formalize this intuition as

298
00:11:49,120 --> 00:11:50,800
canonical reductions

299
00:11:50,800 --> 00:11:53,680
we say a reduction r is l data canonical

300
00:11:53,680 --> 00:11:57,120
if it transfers any strong ufc ma1

301
00:11:57,120 --> 00:12:00,240
adversary a into a problem solver for

302
00:12:00,240 --> 00:12:02,560
some interactive problem

303
00:12:02,560 --> 00:12:05,680
and reduction are functions uh

304
00:12:05,680 --> 00:12:08,240
as shown in this figure

305
00:12:08,240 --> 00:12:10,880
a canonical reduction r takes a problem

306
00:12:10,880 --> 00:12:13,440
instance pi as input and we'll use the

307
00:12:13,440 --> 00:12:16,800
algorithm arjun to simulate a public key

308
00:12:16,800 --> 00:12:19,360
and secret key the simulated public key

309
00:12:19,360 --> 00:12:21,519
will be provided to the adversary and

310
00:12:21,519 --> 00:12:24,000
the simulated secret key will be used to

311
00:12:24,000 --> 00:12:26,560
simulate signatures

312
00:12:26,560 --> 00:12:28,959
the adversary can sign can make sign

313
00:12:28,959 --> 00:12:31,760
queries and the canonical reduction r

314
00:12:31,760 --> 00:12:34,079
will use algorithm r sine to similar

315
00:12:34,079 --> 00:12:36,399
signatures

316
00:12:36,399 --> 00:12:39,040
if random oracle model is considered the

317
00:12:39,040 --> 00:12:41,279
adversary can make random oracle queries

318
00:12:41,279 --> 00:12:43,519
and the canonical reduction r will use

319
00:12:43,519 --> 00:12:46,079
the algorithm r hash to simulate the

320
00:12:46,079 --> 00:12:48,560
random article

321
00:12:48,560 --> 00:12:50,480
at the end of the game the single

322
00:12:50,480 --> 00:12:52,480
challenge adversary makes this false

323
00:12:52,480 --> 00:12:53,440
query

324
00:12:53,440 --> 00:12:55,600
the economic production r will use a

325
00:12:55,600 --> 00:12:58,000
check or algorithm to check the message

326
00:12:58,000 --> 00:12:59,360
signature pair

327
00:12:59,360 --> 00:13:00,480
and the check

328
00:13:00,480 --> 00:13:03,200
algorithm outputs 1 if and only if sigma

329
00:13:03,200 --> 00:13:06,000
star is a valid signature for m star and

330
00:13:06,000 --> 00:13:08,639
the sigma star does not equal to the

331
00:13:08,639 --> 00:13:12,079
simulated signature for m star

332
00:13:12,079 --> 00:13:13,839
if the check path

333
00:13:13,839 --> 00:13:16,880
and algorithm are extract will be run to

334
00:13:16,880 --> 00:13:18,880
extract the solution s

335
00:13:18,880 --> 00:13:21,440
otherwise if the check fill

336
00:13:21,440 --> 00:13:24,160
the algorithm u will be run to generate

337
00:13:24,160 --> 00:13:26,560
a trivial solution s

338
00:13:26,560 --> 00:13:28,160
and finally

339
00:13:28,160 --> 00:13:30,480
r will output the solution s and

340
00:13:30,480 --> 00:13:33,120
terminates

341
00:13:33,120 --> 00:13:35,839
we note that for canonical reductions

342
00:13:35,839 --> 00:13:38,160
the algorithm are signed are hash r

343
00:13:38,160 --> 00:13:41,120
extract and check are all deterministic

344
00:13:41,120 --> 00:13:42,800
algorithms

345
00:13:42,800 --> 00:13:45,279
but they have access to the same random

346
00:13:45,279 --> 00:13:47,680
function

347
00:13:47,760 --> 00:13:50,000
finally we require that the canonical

348
00:13:50,000 --> 00:13:52,000
reduction works which means that the

349
00:13:52,000 --> 00:13:54,399
advantage of r is larger than or equal

350
00:13:54,399 --> 00:13:57,680
to the advantage of a divided by l minus

351
00:13:57,680 --> 00:13:59,199
theta

352
00:13:59,199 --> 00:14:01,839
and this is the definition for canonical

353
00:14:01,839 --> 00:14:04,000
reductions

354
00:14:04,000 --> 00:14:06,160
and note that canonical reductions are

355
00:14:06,160 --> 00:14:08,639
restricted in several aspects

356
00:14:08,639 --> 00:14:10,880
first it only deals with single

357
00:14:10,880 --> 00:14:12,560
challenge adversaries

358
00:14:12,560 --> 00:14:15,839
and more precisely it only deals with

359
00:14:15,839 --> 00:14:17,120
adversaries

360
00:14:17,120 --> 00:14:18,399
secondly

361
00:14:18,399 --> 00:14:20,399
even though canonical reductions do not

362
00:14:20,399 --> 00:14:22,639
store message signature pairs they are

363
00:14:22,639 --> 00:14:25,440
not necessarily memory tight because r

364
00:14:25,440 --> 00:14:27,680
will also need to simulate the random

365
00:14:27,680 --> 00:14:30,240
function that that is accessed by the

366
00:14:30,240 --> 00:14:31,600
algorithms

367
00:14:31,600 --> 00:14:33,839
and this makes that this takes a lot of

368
00:14:33,839 --> 00:14:35,519
memory

369
00:14:35,519 --> 00:14:37,760
and certainly canonical reductions works

370
00:14:37,760 --> 00:14:40,720
for the cma one security uh

371
00:14:40,720 --> 00:14:41,519
uh

372
00:14:41,519 --> 00:14:44,800
works for the cma one adversary but not

373
00:14:44,800 --> 00:14:48,959
for the standard cma adversary

374
00:14:48,959 --> 00:14:50,480
even though canonical reductions are

375
00:14:50,480 --> 00:14:52,880
restricted in these aspects it still

376
00:14:52,880 --> 00:14:55,440
serves as an important tool in our

377
00:14:55,440 --> 00:14:56,639
approach

378
00:14:56,639 --> 00:14:59,120
with this help we can prove an important

379
00:14:59,120 --> 00:15:01,519
theorem which is the main theorem of our

380
00:15:01,519 --> 00:15:02,959
work

381
00:15:02,959 --> 00:15:05,440
and the theorem states that if sigma is

382
00:15:05,440 --> 00:15:07,360
a signature scheme pi is a

383
00:15:07,360 --> 00:15:09,760
non-interactive problem and r is an

384
00:15:09,760 --> 00:15:12,000
elder canonical reduction from breaking

385
00:15:12,000 --> 00:15:15,440
the sufcma1 security of sigma to solving

386
00:15:15,440 --> 00:15:16,880
the problem pi

387
00:15:16,880 --> 00:15:17,839
then

388
00:15:17,839 --> 00:15:19,680
using the canonical reduction r and the

389
00:15:19,680 --> 00:15:21,920
memory tight secured pseudorandom

390
00:15:21,920 --> 00:15:22,880
function

391
00:15:22,880 --> 00:15:25,519
we can build another reduction r prime

392
00:15:25,519 --> 00:15:27,760
from breaking the multi-challenge msuf

393
00:15:27,760 --> 00:15:30,240
cma1 security of sigma to solving the

394
00:15:30,240 --> 00:15:31,600
problem pi

395
00:15:31,600 --> 00:15:34,639
such that for any adversary a prime the

396
00:15:34,639 --> 00:15:36,880
overall running time and memory of r

397
00:15:36,880 --> 00:15:39,519
prime is approximately the same with the

398
00:15:39,519 --> 00:15:42,079
running time and memory of a prime

399
00:15:42,079 --> 00:15:44,240
and the advantage of r prime is

400
00:15:44,240 --> 00:15:45,759
approximately

401
00:15:45,759 --> 00:15:48,399
the advantage of a prime divided by l

402
00:15:48,399 --> 00:15:51,279
minus delta

403
00:15:53,600 --> 00:15:56,160
the proof idea of this theorem is that

404
00:15:56,160 --> 00:15:58,800
we construct r prime using the

405
00:15:58,800 --> 00:16:01,519
algorithms of the canonical reduction r

406
00:16:01,519 --> 00:16:03,279
and instantiate the random function

407
00:16:03,279 --> 00:16:05,600
using the pseudorandom function

408
00:16:05,600 --> 00:16:07,519
when the reduction r prime runs the

409
00:16:07,519 --> 00:16:09,920
check algorithm for error for every

410
00:16:09,920 --> 00:16:12,480
forged query made by the multi-challenge

411
00:16:12,480 --> 00:16:15,759
adversary a prime and only use the first

412
00:16:15,759 --> 00:16:17,759
fourth query which can pass the check to

413
00:16:17,759 --> 00:16:20,880
extract solutions

414
00:16:21,440 --> 00:16:22,399
note that

415
00:16:22,399 --> 00:16:24,800
now our prime is tight in terms of time

416
00:16:24,800 --> 00:16:26,000
and memory

417
00:16:26,000 --> 00:16:28,480
if the parameters are good for the

418
00:16:28,480 --> 00:16:31,120
canonical reduction r which means that l

419
00:16:31,120 --> 00:16:33,759
is a constant and delta is either

420
00:16:33,759 --> 00:16:36,399
statistically small or negligibly small

421
00:16:36,399 --> 00:16:39,120
but is independent of the adversary

422
00:16:39,120 --> 00:16:41,279
then the reduction r prime will also be

423
00:16:41,279 --> 00:16:44,000
tied in terms of advantage which means

424
00:16:44,000 --> 00:16:48,000
our uh prime is fully tight for the msus

425
00:16:48,000 --> 00:16:52,480
ufc me1 security of sigma

426
00:16:52,480 --> 00:16:55,279
and this is a nice result we get fully

427
00:16:55,279 --> 00:16:58,079
tight results but we still need to seek

428
00:16:58,079 --> 00:17:00,800
a way to upgrade the security from cma-1

429
00:17:00,800 --> 00:17:04,880
security to the standard cma security

430
00:17:04,880 --> 00:17:06,959
and here comes our second step we

431
00:17:06,959 --> 00:17:09,199
propose a generic transformation which

432
00:17:09,199 --> 00:17:11,679
achieved this goal and preserves

433
00:17:11,679 --> 00:17:14,559
tightness for all three dimensions

434
00:17:14,559 --> 00:17:17,119
suppose sigma prime is a signature

435
00:17:17,119 --> 00:17:19,199
scheme which transfers sigma prime to

436
00:17:19,199 --> 00:17:21,599
another signature scheme sigma by

437
00:17:21,599 --> 00:17:25,119
involving an additional random nouns and

438
00:17:25,119 --> 00:17:27,119
in the signature

439
00:17:27,119 --> 00:17:29,679
the knots end is chosen uniformly random

440
00:17:29,679 --> 00:17:32,160
from bit strings of length 2 lambda and

441
00:17:32,160 --> 00:17:35,840
then signed together with the message

442
00:17:35,840 --> 00:17:38,240
we can prove the theorem that if sigma

443
00:17:38,240 --> 00:17:41,200
prime is memory tightly ms ufc ma1

444
00:17:41,200 --> 00:17:43,919
secure then sigma is memory tightly ms

445
00:17:43,919 --> 00:17:46,559
ufc ma1 secure

446
00:17:46,559 --> 00:17:48,640
and actually we can prove more than what

447
00:17:48,640 --> 00:17:51,360
we show here on this transformation is

448
00:17:51,360 --> 00:17:53,760
not only preserves memory tightness but

449
00:17:53,760 --> 00:17:56,000
also preserve tightness in terms of time

450
00:17:56,000 --> 00:17:57,919
and advantage

451
00:17:57,919 --> 00:18:00,400
the proof idea of the theorem is that we

452
00:18:00,400 --> 00:18:03,440
can simulate the cma game based on a

453
00:18:03,440 --> 00:18:07,280
cma1 game the cma adversary will query

454
00:18:07,280 --> 00:18:09,840
the same message multiple times in the

455
00:18:09,840 --> 00:18:11,440
cma game

456
00:18:11,440 --> 00:18:13,360
however the nonsense are chosen

457
00:18:13,360 --> 00:18:16,000
uniformly and independently which means

458
00:18:16,000 --> 00:18:19,679
that they are unlikely to repeat

459
00:18:19,679 --> 00:18:20,480
so

460
00:18:20,480 --> 00:18:22,720
the message together with the nouns will

461
00:18:22,720 --> 00:18:26,080
also not repeat

462
00:18:26,320 --> 00:18:28,480
and this completes our approach and let

463
00:18:28,480 --> 00:18:30,640
me summarize it here

464
00:18:30,640 --> 00:18:33,200
we first assume that for signature

465
00:18:33,200 --> 00:18:36,320
scheme sigma prime there is an l

466
00:18:36,320 --> 00:18:39,600
canonical reaction r which proves that

467
00:18:39,600 --> 00:18:43,440
sigma prime is s ufc ma1 secure

468
00:18:43,440 --> 00:18:45,679
when the non-interactive problem pi is

469
00:18:45,679 --> 00:18:47,039
hard

470
00:18:47,039 --> 00:18:49,120
then in the first step we construct a

471
00:18:49,120 --> 00:18:52,000
memory type reduction r prime using r

472
00:18:52,000 --> 00:18:54,240
and r prime proves that

473
00:18:54,240 --> 00:18:56,760
sigma prime has memory type

474
00:18:56,760 --> 00:18:59,600
msufcma1 security under the same

475
00:18:59,600 --> 00:19:01,120
assumption

476
00:19:01,120 --> 00:19:03,039
now we successfully go from single

477
00:19:03,039 --> 00:19:05,440
challenge setting to the multi-challenge

478
00:19:05,440 --> 00:19:07,760
setting but we are still in the cma1

479
00:19:07,760 --> 00:19:08,960
case

480
00:19:08,960 --> 00:19:11,200
then we apply our second step to

481
00:19:11,200 --> 00:19:13,679
transfer sigma prime to sigma with the

482
00:19:13,679 --> 00:19:15,679
help of nonsys

483
00:19:15,679 --> 00:19:19,679
and sigma has memory type msufcma

484
00:19:19,679 --> 00:19:21,120
security

485
00:19:21,120 --> 00:19:24,400
furthermore if l is a constant delta is

486
00:19:24,400 --> 00:19:26,960
small and independent of the adversary

487
00:19:26,960 --> 00:19:29,039
then sigma is a fully tight

488
00:19:29,039 --> 00:19:30,880
signature scheme in all the three

489
00:19:30,880 --> 00:19:33,360
dimensions

490
00:19:33,360 --> 00:19:35,600
to instantiate our approach we only need

491
00:19:35,600 --> 00:19:37,679
to construct a signature scheme sigma

492
00:19:37,679 --> 00:19:39,840
prime and provide a canonical reduction

493
00:19:39,840 --> 00:19:43,039
proving the single challenge as ufc ma1

494
00:19:43,039 --> 00:19:46,240
security of this scheme

495
00:19:46,240 --> 00:19:48,160
we are able to do this for three

496
00:19:48,160 --> 00:19:50,799
different schemes the first scheme is

497
00:19:50,799 --> 00:19:52,960
based on a lossy identification scheme

498
00:19:52,960 --> 00:19:55,039
by abdellatto

499
00:19:55,039 --> 00:19:56,880
we show a one directive canonical

500
00:19:56,880 --> 00:19:59,039
reduction for their lossy id based

501
00:19:59,039 --> 00:20:00,799
signature scheme

502
00:20:00,799 --> 00:20:02,480
and the underlying non-interactive

503
00:20:02,480 --> 00:20:05,520
problem or the assumption is that the

504
00:20:05,520 --> 00:20:07,600
lossy public key is is it is

505
00:20:07,600 --> 00:20:10,720
indistinguishable from normal public key

506
00:20:10,720 --> 00:20:13,039
for the lossy id schemes

507
00:20:13,039 --> 00:20:17,200
and the data here is statistically small

508
00:20:17,200 --> 00:20:19,120
so by our generic

509
00:20:19,120 --> 00:20:21,919
approach we can get a fully tied msuf

510
00:20:21,919 --> 00:20:25,120
cma secure digital signature scheme

511
00:20:25,120 --> 00:20:27,440
and the second scheme is the rsa for the

512
00:20:27,440 --> 00:20:29,440
mahash scheme proposed by blah and

513
00:20:29,440 --> 00:20:30,640
rockboy

514
00:20:30,640 --> 00:20:33,360
albert hall they proposed a reduction

515
00:20:33,360 --> 00:20:36,080
for the rsa photo mihash scheme and this

516
00:20:36,080 --> 00:20:40,000
reduction can be viewed as a e times q s

517
00:20:40,000 --> 00:20:42,159
zero canonical reduction

518
00:20:42,159 --> 00:20:44,880
where e is the oldest number and q s is

519
00:20:44,880 --> 00:20:46,720
the number of sign queries made by the

520
00:20:46,720 --> 00:20:48,400
adversary

521
00:20:48,400 --> 00:20:51,679
and if we apply directly our approach on

522
00:20:51,679 --> 00:20:53,919
this reduction we will not get a fully

523
00:20:53,919 --> 00:20:55,760
tied scheme because the security loss

524
00:20:55,760 --> 00:20:57,840
here is large

525
00:20:57,840 --> 00:21:00,320
however casa and wang propose a slight

526
00:21:00,320 --> 00:21:03,280
variant of rsa fudu mehash scheme which

527
00:21:03,280 --> 00:21:06,799
which we call the rsa fdh plus scheme

528
00:21:06,799 --> 00:21:09,440
and we can provide a two zero canonical

529
00:21:09,440 --> 00:21:12,080
reduction to the uh

530
00:21:12,080 --> 00:21:16,880
rsa problem for the rsa fdh plus scheme

531
00:21:16,880 --> 00:21:18,640
and plugging this reduction into our

532
00:21:18,640 --> 00:21:20,640
approach we can get the second the fully

533
00:21:20,640 --> 00:21:23,440
tight msuf cma secure digital signature

534
00:21:23,440 --> 00:21:25,440
scheme

535
00:21:25,440 --> 00:21:28,640
and also we get a similar results for

536
00:21:28,640 --> 00:21:30,960
the bonin ling shachman scheme or the

537
00:21:30,960 --> 00:21:33,760
bls scheme

538
00:21:33,760 --> 00:21:35,919
and this table shows a comparison

539
00:21:35,919 --> 00:21:37,919
between these schemes and you can see

540
00:21:37,919 --> 00:21:42,080
that we get three fully tied ms ufcma

541
00:21:42,080 --> 00:21:44,799
secure digital signatures

542
00:21:44,799 --> 00:21:46,799
and the cost to achieve a fully

543
00:21:46,799 --> 00:21:49,919
tightness is a two lambda bits expansion

544
00:21:49,919 --> 00:21:52,400
in the signature size because the

545
00:21:52,400 --> 00:21:54,559
additional nouns that we use in the

546
00:21:54,559 --> 00:21:59,200
second step has length to lambda

547
00:21:59,200 --> 00:22:01,679
and here i want to bring attention to an

548
00:22:01,679 --> 00:22:03,919
independent and concurrent work hiding

549
00:22:03,919 --> 00:22:06,480
in plain sight memory type proofs via

550
00:22:06,480 --> 00:22:09,760
random randomness programming by gaucho

551
00:22:09,760 --> 00:22:10,799
gozo

552
00:22:10,799 --> 00:22:13,200
jaeger and tessero

553
00:22:13,200 --> 00:22:15,600
and they studied the problem of getting

554
00:22:15,600 --> 00:22:19,280
memory tied to muf cma secure signature

555
00:22:19,280 --> 00:22:20,559
schemes

556
00:22:20,559 --> 00:22:23,520
via black box reductions

557
00:22:23,520 --> 00:22:26,000
their construction is similar to ours in

558
00:22:26,000 --> 00:22:28,640
the second step they also use random

559
00:22:28,640 --> 00:22:30,159
nonsense

560
00:22:30,159 --> 00:22:32,799
but their approach is completely

561
00:22:32,799 --> 00:22:35,679
different from ours

562
00:22:35,679 --> 00:22:38,080
and we want to send our acknowledgements

563
00:22:38,080 --> 00:22:40,320
to the four authors of this paper for

564
00:22:40,320 --> 00:22:42,880
spotting a gap in the proof of our mean

565
00:22:42,880 --> 00:22:44,000
theory

566
00:22:44,000 --> 00:22:46,000
we close this gap in the full version of

567
00:22:46,000 --> 00:22:48,720
our paper by introducing a new property

568
00:22:48,720 --> 00:22:50,400
for canonical reductions

569
00:22:50,400 --> 00:22:53,200
and with a refined analysis

570
00:22:53,200 --> 00:22:55,120
we also want to send our

571
00:22:55,120 --> 00:22:56,880
acknowledgements to the

572
00:22:56,880 --> 00:22:59,679
anonymous reviewers of asia crypt 2021

573
00:22:59,679 --> 00:23:02,799
for insightful and helpful comments

574
00:23:02,799 --> 00:23:06,000
and finally let me summarize our work we

575
00:23:06,000 --> 00:23:08,080
propose a generic approach in getting

576
00:23:08,080 --> 00:23:10,400
memory type msufcma

577
00:23:10,400 --> 00:23:12,159
security

578
00:23:12,159 --> 00:23:13,760
digital signatures

579
00:23:13,760 --> 00:23:16,559
and we instantiate our approach and get

580
00:23:16,559 --> 00:23:18,720
three digital signatures with a fully

581
00:23:18,720 --> 00:23:21,760
tied msuf cma security

582
00:23:21,760 --> 00:23:24,480
and our results do not conflict with the

583
00:23:24,480 --> 00:23:27,200
impossibility results by alcohol or one

584
00:23:27,200 --> 00:23:28,159
at all

585
00:23:28,159 --> 00:23:30,080
we can cook with this impossibility

586
00:23:30,080 --> 00:23:32,080
results because we focus on a special

587
00:23:32,080 --> 00:23:34,559
kind of non-black book reductions which

588
00:23:34,559 --> 00:23:37,600
we call the canonical reductions

589
00:23:37,600 --> 00:23:40,320
a limitation of our work is that all the

590
00:23:40,320 --> 00:23:42,240
memory type signature scheme we

591
00:23:42,240 --> 00:23:44,960
considered regardless of fully tied or

592
00:23:44,960 --> 00:23:45,760
not

593
00:23:45,760 --> 00:23:48,880
are proven in the random oracle model

594
00:23:48,880 --> 00:23:51,279
so we think getting a memory titan

595
00:23:51,279 --> 00:23:53,919
multi-challenge secure digital signature

596
00:23:53,919 --> 00:23:56,080
scheme in the standard model is an

597
00:23:56,080 --> 00:23:59,279
interesting open problem

598
00:23:59,679 --> 00:24:01,679
if you are interested in our paper you

599
00:24:01,679 --> 00:24:03,840
can find the full version of this paper

600
00:24:03,840 --> 00:24:06,320
on eprint via the link shown here you

601
00:24:06,320 --> 00:24:08,400
can find the slides on the azure group

602
00:24:08,400 --> 00:24:10,559
2021 website

603
00:24:10,559 --> 00:24:12,640
and if you have any questions about our

604
00:24:12,640 --> 00:24:15,440
work feel free to send us emails

605
00:24:15,440 --> 00:24:17,279
or you can raise your question in the

606
00:24:17,279 --> 00:24:21,279
in-text session of asia 2021 conference

607
00:24:21,279 --> 00:24:24,640
and we will try our best to answer them

608
00:24:24,640 --> 00:24:27,039
and that's all for this talk thank you

609
00:24:27,039 --> 00:24:31,600
very much for your time and attention

