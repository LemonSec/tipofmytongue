1
00:00:02,560 --> 00:00:05,200
hello everyone um

2
00:00:05,200 --> 00:00:07,200
from epfl and today i'll be presenting

3
00:00:07,200 --> 00:00:09,519
the joint fork with survey panic serge

4
00:00:09,519 --> 00:00:11,360
and hailing on

5
00:00:11,360 --> 00:00:12,719
called new attacks on low energy

6
00:00:12,719 --> 00:00:14,160
instances with a single plaintext

7
00:00:14,160 --> 00:00:15,839
ciphertext pair so as you see the name

8
00:00:15,839 --> 00:00:18,640
is long so i've shortened it here

9
00:00:18,640 --> 00:00:21,279
so let's talk about speaking of mc first

10
00:00:21,279 --> 00:00:22,960
and see why do we even care about it so

11
00:00:22,960 --> 00:00:24,560
picnic is a post quantum signature

12
00:00:24,560 --> 00:00:26,000
scheme

13
00:00:26,000 --> 00:00:28,240
which is based on a

14
00:00:28,240 --> 00:00:30,640
mpc in the heads paradigm specifically

15
00:00:30,640 --> 00:00:34,079
talking specialized version of zkw

16
00:00:34,079 --> 00:00:36,000
so this is a proof of identification

17
00:00:36,000 --> 00:00:37,760
then we have some field premiere or

18
00:00:37,760 --> 00:00:39,680
similar transform in order to change it

19
00:00:39,680 --> 00:00:42,160
to uh turn it into a signature scheme

20
00:00:42,160 --> 00:00:44,399
and it's currently an alternate

21
00:00:44,399 --> 00:00:46,399
candidate for third round of this pq

22
00:00:46,399 --> 00:00:49,280
standardization process

23
00:00:49,280 --> 00:00:52,160
so how does zkboom work

24
00:00:52,160 --> 00:00:53,920
so simply we have a public key which is

25
00:00:53,920 --> 00:00:55,120
going to be a pair of plaintext and

26
00:00:55,120 --> 00:00:56,800
ciphertext

27
00:00:56,800 --> 00:00:58,480
so this is important that our key

28
00:00:58,480 --> 00:01:00,320
actually consists of a given plain text

29
00:01:00,320 --> 00:01:01,760
in ciphertext

30
00:01:01,760 --> 00:01:05,280
and then we have a key sk a secret key

31
00:01:05,280 --> 00:01:06,880
which is going to work as the encryption

32
00:01:06,880 --> 00:01:08,960
key and what the prover is trying to do

33
00:01:08,960 --> 00:01:10,479
is that he's trying to prove that he

34
00:01:10,479 --> 00:01:13,760
knows an sk value such that e of pk and

35
00:01:13,760 --> 00:01:16,240
sk is going to be c

36
00:01:16,240 --> 00:01:17,920
and how does

37
00:01:17,920 --> 00:01:20,880
how do how does the prover do this

38
00:01:20,880 --> 00:01:22,560
the approver will simulate an npc

39
00:01:22,560 --> 00:01:24,400
computation of e

40
00:01:24,400 --> 00:01:25,600
and then we'll commit to the

41
00:01:25,600 --> 00:01:27,360
computations on each share

42
00:01:27,360 --> 00:01:29,360
and then the verifier is going to ask

43
00:01:29,360 --> 00:01:30,960
him to open some of the commitments in a

44
00:01:30,960 --> 00:01:33,520
specific way and then

45
00:01:33,520 --> 00:01:35,040
check that for that share the

46
00:01:35,040 --> 00:01:38,320
computation was done correctly

47
00:01:38,400 --> 00:01:40,320
so what's the catch here is that's

48
00:01:40,320 --> 00:01:42,079
because the approver has to do an mpc

49
00:01:42,079 --> 00:01:44,159
computation multiplications are not

50
00:01:44,159 --> 00:01:45,920
ideal so we want as few as them as

51
00:01:45,920 --> 00:01:48,560
possible without losing my security

52
00:01:48,560 --> 00:01:49,920
and that's why

53
00:01:49,920 --> 00:01:50,799
um

54
00:01:50,799 --> 00:01:53,040
like mpc in general is one of the

55
00:01:53,040 --> 00:01:55,040
reasons that people have been working on

56
00:01:55,040 --> 00:01:57,119
a lot on block ciphers which have low

57
00:01:57,119 --> 00:01:58,880
multiplication depths

58
00:01:58,880 --> 00:01:59,680
okay

59
00:01:59,680 --> 00:02:01,920
low mc is one of these ciphers so it's a

60
00:02:01,920 --> 00:02:04,159
substitution permutation network it has

61
00:02:04,159 --> 00:02:06,399
a three bit s box

62
00:02:06,399 --> 00:02:08,239
it's a quadratic box as you can see

63
00:02:08,239 --> 00:02:10,080
pretty simple

64
00:02:10,080 --> 00:02:12,879
and it's followed by an affine layer and

65
00:02:12,879 --> 00:02:15,520
a key edition round keys are also fine

66
00:02:15,520 --> 00:02:17,280
functions of the master key so the only

67
00:02:17,280 --> 00:02:19,040
non-linearity in the cipher comes from

68
00:02:19,040 --> 00:02:21,360
the s box

69
00:02:21,360 --> 00:02:22,400
so

70
00:02:22,400 --> 00:02:23,920
there are two main variants that we will

71
00:02:23,920 --> 00:02:25,680
be talking about it's called the partial

72
00:02:25,680 --> 00:02:27,520
s box here and the full s box layer

73
00:02:27,520 --> 00:02:28,560
variants

74
00:02:28,560 --> 00:02:31,280
i'll explain those in a sec

75
00:02:31,280 --> 00:02:32,560
so

76
00:02:32,560 --> 00:02:34,720
by s i will denote the number of s boxes

77
00:02:34,720 --> 00:02:36,879
per round and it's going to be the block

78
00:02:36,879 --> 00:02:38,160
size or it's going to be number of

79
00:02:38,160 --> 00:02:40,560
rounds so this is how a single round

80
00:02:40,560 --> 00:02:41,519
looks like

81
00:02:41,519 --> 00:02:44,080
so each s box is acting on

82
00:02:44,080 --> 00:02:46,640
three disjoint bits of the block of the

83
00:02:46,640 --> 00:02:47,519
input

84
00:02:47,519 --> 00:02:49,280
and then it's followed by a fine layer

85
00:02:49,280 --> 00:02:51,360
on the whole state and then i add the

86
00:02:51,360 --> 00:02:53,360
round key

87
00:02:53,360 --> 00:02:54,800
and whenever

88
00:02:54,800 --> 00:02:57,920
my s is exactly equal to n over three

89
00:02:57,920 --> 00:03:00,159
meaning that every bit of the block

90
00:03:00,159 --> 00:03:01,440
passes through

91
00:03:01,440 --> 00:03:03,920
the s box i call it a full layer and

92
00:03:03,920 --> 00:03:05,760
whenever

93
00:03:05,760 --> 00:03:07,760
3s is less than and i call it a partial

94
00:03:07,760 --> 00:03:10,000
layer

95
00:03:10,159 --> 00:03:11,519
so let's talk about work that has

96
00:03:11,519 --> 00:03:14,080
already been done so two famous attacks

97
00:03:14,080 --> 00:03:17,280
that have that exist on low mc are rekt

98
00:03:17,280 --> 00:03:18,560
burgers

99
00:03:18,560 --> 00:03:21,040
attack from tosc 2018

100
00:03:21,040 --> 00:03:22,879
which uses some difference enumeration

101
00:03:22,879 --> 00:03:25,280
attack and then leaves improvement of it

102
00:03:25,280 --> 00:03:27,040
in crypto 21

103
00:03:27,040 --> 00:03:29,599
which uses some algebraic tricks to

104
00:03:29,599 --> 00:03:31,920
improve the previous attack but as you

105
00:03:31,920 --> 00:03:33,200
can see from

106
00:03:33,200 --> 00:03:35,280
the name we need differences for these

107
00:03:35,280 --> 00:03:36,560
attacks meaning that with a single

108
00:03:36,560 --> 00:03:38,799
plaintext ciphertext pair which is the

109
00:03:38,799 --> 00:03:40,799
scenario that we have in picnic we

110
00:03:40,799 --> 00:03:43,280
cannot perform this attacks so

111
00:03:43,280 --> 00:03:45,519
we care about complexity one attacks in

112
00:03:45,519 --> 00:03:47,920
the in the given plaintext ciphertext

113
00:03:47,920 --> 00:03:50,238
model

114
00:03:50,400 --> 00:03:51,360
and

115
00:03:51,360 --> 00:03:53,280
this is where these other attacks come

116
00:03:53,280 --> 00:03:54,080
into

117
00:03:54,080 --> 00:03:55,280
okay

118
00:03:55,280 --> 00:03:56,159
so

119
00:03:56,159 --> 00:03:58,640
the first one that came out was our

120
00:03:58,640 --> 00:04:00,799
previous work but surprisingly is not

121
00:04:00,799 --> 00:04:02,640
presented yet

122
00:04:02,640 --> 00:04:04,400
so we use

123
00:04:04,400 --> 00:04:06,000
uh some

124
00:04:06,000 --> 00:04:09,280
algebraic property of the s-box to

125
00:04:09,280 --> 00:04:11,519
be able to linearize the s-box with not

126
00:04:11,519 --> 00:04:14,239
many guesses

127
00:04:14,239 --> 00:04:15,519
and then

128
00:04:15,519 --> 00:04:18,160
for the full s box layer variant we

129
00:04:18,160 --> 00:04:20,399
break up to two rounds

130
00:04:20,399 --> 00:04:22,560
and the partial s box layer variant you

131
00:04:22,560 --> 00:04:27,040
break up to 0.8 and over s rounds

132
00:04:27,040 --> 00:04:28,880
convergence of law and c and these are

133
00:04:28,880 --> 00:04:31,040
not arbitrary these numbers they

134
00:04:31,040 --> 00:04:32,479
actually come from the low end secret

135
00:04:32,479 --> 00:04:34,960
analysis challenge

136
00:04:34,960 --> 00:04:36,800
and also there is the noise attack from

137
00:04:36,800 --> 00:04:38,800
eurocrypt 21 which is based on

138
00:04:38,800 --> 00:04:40,639
multiparity counting

139
00:04:40,639 --> 00:04:43,600
and this attack only works for

140
00:04:43,600 --> 00:04:45,360
the fullest box variants because we need

141
00:04:45,360 --> 00:04:47,120
low number of rounds

142
00:04:47,120 --> 00:04:49,360
we need the degree of the polynomials to

143
00:04:49,360 --> 00:04:51,600
be low and then it breaks up to five

144
00:04:51,600 --> 00:04:53,360
rounds

145
00:04:53,360 --> 00:04:56,240
and for n equal to 129 which is the

146
00:04:56,240 --> 00:04:57,600
smallest

147
00:04:57,600 --> 00:04:59,520
block size that we have it breaks up to

148
00:04:59,520 --> 00:05:01,039
four rounds

149
00:05:01,039 --> 00:05:01,919
okay

150
00:05:01,919 --> 00:05:04,400
so what's going to happen here so we

151
00:05:04,400 --> 00:05:06,479
will present a two-step mitm attack

152
00:05:06,479 --> 00:05:08,800
which uses the linearization ideas from

153
00:05:08,800 --> 00:05:11,039
our previous work plus some graco

154
00:05:11,039 --> 00:05:14,080
denomination methods

155
00:05:14,479 --> 00:05:17,680
which breaks the full layer variant

156
00:05:17,680 --> 00:05:19,759
up to three rounds and the partial

157
00:05:19,759 --> 00:05:22,160
variant up to n over s

158
00:05:22,160 --> 00:05:23,199
okay

159
00:05:23,199 --> 00:05:24,720
so let's talk about the linearization

160
00:05:24,720 --> 00:05:26,639
that we already talked about

161
00:05:26,639 --> 00:05:29,199
so this is the theorem from

162
00:05:29,199 --> 00:05:31,600
a previous paper and what it essentially

163
00:05:31,600 --> 00:05:34,800
means is that if i guess

164
00:05:34,800 --> 00:05:35,680
any

165
00:05:35,680 --> 00:05:37,600
balanced quadratic boolean function in

166
00:05:37,600 --> 00:05:41,840
the inputs of of the inputs of the s box

167
00:05:41,840 --> 00:05:43,919
based on that guess i can linearize this

168
00:05:43,919 --> 00:05:47,360
box so i can write the s box for any

169
00:05:47,360 --> 00:05:49,039
balanced volume function

170
00:05:49,039 --> 00:05:51,600
in the input as that function times a

171
00:05:51,600 --> 00:05:52,880
linear function

172
00:05:52,880 --> 00:05:55,440
plus another linear function

173
00:05:55,440 --> 00:05:56,240
so

174
00:05:56,240 --> 00:05:58,400
the example that we used

175
00:05:58,400 --> 00:06:00,400
almost everywhere during the previous

176
00:06:00,400 --> 00:06:03,360
work was the tribute majority function

177
00:06:03,360 --> 00:06:04,840
as this balanced

178
00:06:04,840 --> 00:06:07,520
function and how does the attack work

179
00:06:07,520 --> 00:06:09,919
simply for every single as i said the

180
00:06:09,919 --> 00:06:12,080
only non-linearity comes from the s box

181
00:06:12,080 --> 00:06:13,919
so if i linearize all the s boxes

182
00:06:13,919 --> 00:06:15,600
everything will be linear

183
00:06:15,600 --> 00:06:17,520
and then i i get a

184
00:06:17,520 --> 00:06:19,440
equation system

185
00:06:19,440 --> 00:06:21,680
in my key

186
00:06:21,680 --> 00:06:23,360
based on the majority yes that i do so

187
00:06:23,360 --> 00:06:25,199
what i will do exactly i will guess all

188
00:06:25,199 --> 00:06:27,360
the majorities for every single s box in

189
00:06:27,360 --> 00:06:29,840
the cipher

190
00:06:30,240 --> 00:06:31,520
then i will

191
00:06:31,520 --> 00:06:34,160
form a linear equation in the key

192
00:06:34,160 --> 00:06:36,400
describing the ciphertext in the plain

193
00:06:36,400 --> 00:06:38,400
text and the key and then i will do a

194
00:06:38,400 --> 00:06:40,400
gaussian elimination to solve this and

195
00:06:40,400 --> 00:06:43,440
then i need to do one re-encryption to

196
00:06:43,440 --> 00:06:45,759
to see if this key is a good candidate

197
00:06:45,759 --> 00:06:48,479
whether all the majorities match so as

198
00:06:48,479 --> 00:06:50,080
you can see i need two to the power

199
00:06:50,080 --> 00:06:52,720
number of s boxes guesses majority

200
00:06:52,720 --> 00:06:54,880
guesses and for each majority guess one

201
00:06:54,880 --> 00:06:56,800
encryption

202
00:06:56,800 --> 00:06:58,639
so this only works when

203
00:06:58,639 --> 00:07:02,639
s times r is less than

204
00:07:02,639 --> 00:07:05,120
and now let's talk about the new attack

205
00:07:05,120 --> 00:07:07,280
so this attack is also influenced by the

206
00:07:07,280 --> 00:07:09,199
previous work but it's a bit different

207
00:07:09,199 --> 00:07:11,199
because it uses the other attack

208
00:07:11,199 --> 00:07:13,280
proposed in our former work which was a

209
00:07:13,280 --> 00:07:14,960
meet in the middle attack the divorce

210
00:07:14,960 --> 00:07:17,199
complexity than the linearization

211
00:07:17,199 --> 00:07:19,199
so the idea is i will not touch the

212
00:07:19,199 --> 00:07:21,280
first round but for everything that

213
00:07:21,280 --> 00:07:23,360
comes after

214
00:07:23,360 --> 00:07:25,919
i will guess the majorities

215
00:07:25,919 --> 00:07:28,880
and linearize them

216
00:07:29,120 --> 00:07:30,880
so what i get is that if i look at the

217
00:07:30,880 --> 00:07:32,720
output of the first round

218
00:07:32,720 --> 00:07:35,599
or the input of the rest of the rounds

219
00:07:35,599 --> 00:07:37,199
there they're the same thing

220
00:07:37,199 --> 00:07:38,800
then i can write

221
00:07:38,800 --> 00:07:41,680
the value here

222
00:07:41,680 --> 00:07:43,840
as a linear function of the key and the

223
00:07:43,840 --> 00:07:45,199
ciphertext

224
00:07:45,199 --> 00:07:46,720
so simply

225
00:07:46,720 --> 00:07:49,120
i will split my key into two parts the

226
00:07:49,120 --> 00:07:50,479
first half of the key and the second

227
00:07:50,479 --> 00:07:53,520
half of the key k1 and k2

228
00:07:53,520 --> 00:07:55,759
so i can get equations of this form

229
00:07:55,759 --> 00:07:58,560
describing the state at the middle so

230
00:07:58,560 --> 00:08:00,240
simply it's going to be a

231
00:08:00,240 --> 00:08:03,199
k1 plus bk2 plus some constant it's

232
00:08:03,199 --> 00:08:05,120
going to be describing the state in the

233
00:08:05,120 --> 00:08:07,360
middle

234
00:08:07,360 --> 00:08:09,599
again dependent on the majority guess

235
00:08:09,599 --> 00:08:11,360
now i'll do the same thing in the

236
00:08:11,360 --> 00:08:13,199
forward direction but this time i will

237
00:08:13,199 --> 00:08:15,599
not do any linearization i will just

238
00:08:15,599 --> 00:08:16,639
describe

239
00:08:16,639 --> 00:08:19,360
the state here as a quadratic function

240
00:08:19,360 --> 00:08:21,759
of the plaintext and the keys

241
00:08:21,759 --> 00:08:24,000
and again i can write it in this form as

242
00:08:24,000 --> 00:08:26,879
fk1 plus gk2

243
00:08:26,879 --> 00:08:28,960
plus

244
00:08:28,960 --> 00:08:30,639
some constant is going to be equal to

245
00:08:30,639 --> 00:08:32,479
that state so

246
00:08:32,479 --> 00:08:34,399
and what i have is that these two terms

247
00:08:34,399 --> 00:08:36,240
should be equal to each other and i will

248
00:08:36,240 --> 00:08:38,479
use this to mount a meter in the middle

249
00:08:38,479 --> 00:08:40,559
attack

250
00:08:40,559 --> 00:08:43,679
okay so let's see how it goes

251
00:08:43,679 --> 00:08:45,440
so i take

252
00:08:45,440 --> 00:08:47,519
in the case that i have now i will take

253
00:08:47,519 --> 00:08:51,360
k1 to the n over 3 k2 to be 2n over 3.

254
00:08:51,360 --> 00:08:52,959
i will guess the majority of the s boxes

255
00:08:52,959 --> 00:08:53,760
on the

256
00:08:53,760 --> 00:08:55,279
later rounds as i said i'm going to

257
00:08:55,279 --> 00:08:56,800
linearize them and then i'm going to

258
00:08:56,800 --> 00:08:59,120
make these quadratic equations bringing

259
00:08:59,120 --> 00:09:01,279
everything in k1 to the left and

260
00:09:01,279 --> 00:09:03,360
bringing everything in k2 to the right

261
00:09:03,360 --> 00:09:05,600
side

262
00:09:05,600 --> 00:09:08,000
now these functions only depend on k1

263
00:09:08,000 --> 00:09:10,080
and these functions only depend on k2 so

264
00:09:10,080 --> 00:09:11,680
what we did in the previous work was

265
00:09:11,680 --> 00:09:12,640
that

266
00:09:12,640 --> 00:09:15,519
we guess the value of k1 we make this

267
00:09:15,519 --> 00:09:17,279
list one

268
00:09:17,279 --> 00:09:20,240
which simply holds

269
00:09:20,399 --> 00:09:22,640
the left hand side evaluated for the k1

270
00:09:22,640 --> 00:09:25,519
guesses and then another list which

271
00:09:25,519 --> 00:09:26,880
holds the right hand side of the

272
00:09:26,880 --> 00:09:28,800
equation for the k2 vss

273
00:09:28,800 --> 00:09:30,480
and then we check for we look for a

274
00:09:30,480 --> 00:09:33,760
collision between these two lists

275
00:09:33,760 --> 00:09:35,360
here we will do something slightly

276
00:09:35,360 --> 00:09:36,480
different

277
00:09:36,480 --> 00:09:38,800
so you have that ais

278
00:09:38,800 --> 00:09:40,240
are linear

279
00:09:40,240 --> 00:09:43,120
and f and g are both quadratic

280
00:09:43,120 --> 00:09:45,360
but f and g are not quadra are quadratic

281
00:09:45,360 --> 00:09:47,519
functions but they don't if i if i look

282
00:09:47,519 --> 00:09:49,519
at their spectrum they don't have every

283
00:09:49,519 --> 00:09:51,680
possible monomial

284
00:09:51,680 --> 00:09:54,080
in the kids and every possible quadratic

285
00:09:54,080 --> 00:09:55,279
monomial

286
00:09:55,279 --> 00:09:56,560
in fact

287
00:09:56,560 --> 00:09:57,519
the only

288
00:09:57,519 --> 00:10:00,160
monomials that they have

289
00:10:00,160 --> 00:10:02,079
are the simple ones

290
00:10:02,079 --> 00:10:04,720
plus the ones that appear in the output

291
00:10:04,720 --> 00:10:07,279
of the xbox so what do i do

292
00:10:07,279 --> 00:10:09,680
i split my k2 again into two parts into

293
00:10:09,680 --> 00:10:12,160
k21 and k22 then i

294
00:10:12,160 --> 00:10:15,120
express this f and g that i had

295
00:10:15,120 --> 00:10:16,720
as linear functions

296
00:10:16,720 --> 00:10:18,800
and a space of twice the size with the

297
00:10:18,800 --> 00:10:21,279
spaces

298
00:10:22,320 --> 00:10:24,320
and i will call them let's say

299
00:10:24,320 --> 00:10:27,440
f bar and g bar

300
00:10:28,320 --> 00:10:30,800
so now i have a linear

301
00:10:30,800 --> 00:10:33,440
equality of this form simply both left

302
00:10:33,440 --> 00:10:37,120
hand side and right hand side are linear

303
00:10:37,920 --> 00:10:40,160
and what i can do because i this is for

304
00:10:40,160 --> 00:10:43,920
every i i can write this as a matrix

305
00:10:43,920 --> 00:10:45,440
equation

306
00:10:45,440 --> 00:10:48,079
of this form

307
00:10:48,160 --> 00:10:49,760
okay

308
00:10:49,760 --> 00:10:53,360
now this f function this large capital f

309
00:10:53,360 --> 00:10:56,160
is for sure

310
00:10:56,240 --> 00:10:57,279
it's

311
00:10:57,279 --> 00:10:58,480
not a

312
00:10:58,480 --> 00:11:02,320
full rank matrix so it has a null space

313
00:11:02,320 --> 00:11:05,279
let's call that h

314
00:11:05,360 --> 00:11:08,320
h is the kernel of f as i said

315
00:11:08,320 --> 00:11:09,519
and then

316
00:11:09,519 --> 00:11:11,680
i split g

317
00:11:11,680 --> 00:11:14,800
based on this splitting of k2 that i did

318
00:11:14,800 --> 00:11:16,240
already

319
00:11:16,240 --> 00:11:17,279
so

320
00:11:17,279 --> 00:11:19,600
and i derive to an equation of this form

321
00:11:19,600 --> 00:11:21,360
and then i'm going to multiply both

322
00:11:21,360 --> 00:11:23,600
sides by h

323
00:11:23,600 --> 00:11:25,279
so

324
00:11:25,279 --> 00:11:27,360
and what i will have is that h was the

325
00:11:27,360 --> 00:11:30,079
kernel of f

326
00:11:31,920 --> 00:11:32,880
so

327
00:11:32,880 --> 00:11:34,640
i get an equation of this form because

328
00:11:34,640 --> 00:11:37,680
the left hand side is going to be zero

329
00:11:37,680 --> 00:11:39,760
so again now i have a left hand side

330
00:11:39,760 --> 00:11:41,680
which is only in k to

331
00:11:41,680 --> 00:11:44,240
right hand side which is only in k22 so

332
00:11:44,240 --> 00:11:45,680
this is perfect to mount a meter in the

333
00:11:45,680 --> 00:11:48,079
middle attack again

334
00:11:48,079 --> 00:11:50,160
so

335
00:11:50,160 --> 00:11:52,480
it goes exactly as you think so i'm just

336
00:11:52,480 --> 00:11:53,760
gonna

337
00:11:53,760 --> 00:11:56,079
exhaust all the values of k21 and

338
00:11:56,079 --> 00:11:57,360
compute

339
00:11:57,360 --> 00:11:59,040
the values evaluate the values on the

340
00:11:59,040 --> 00:12:01,519
left hand side of my equation

341
00:12:01,519 --> 00:12:03,040
and then i'm going to exhaust all the

342
00:12:03,040 --> 00:12:05,040
k22 values and evaluate everything on

343
00:12:05,040 --> 00:12:06,560
the right hand side of the equation and

344
00:12:06,560 --> 00:12:08,320
look for a collision

345
00:12:08,320 --> 00:12:10,399
and then i will keep a list of all these

346
00:12:10,399 --> 00:12:12,560
good conditions so let's see how many

347
00:12:12,560 --> 00:12:14,959
collisions we will be finding

348
00:12:14,959 --> 00:12:16,880
so we have 2 to the power n over 3

349
00:12:16,880 --> 00:12:18,880
possible values for k to 1 we have 2 to

350
00:12:18,880 --> 00:12:20,880
the power n over 3 possible values for

351
00:12:20,880 --> 00:12:22,560
k2 2.

352
00:12:22,560 --> 00:12:25,200
so what is the size of k2

353
00:12:25,200 --> 00:12:27,440
let's see so we said that's

354
00:12:27,440 --> 00:12:29,839
k2 1 and k2 are of equal size and i say

355
00:12:29,839 --> 00:12:33,839
that k2 is 2 n over 3 bits

356
00:12:34,480 --> 00:12:35,680
so

357
00:12:35,680 --> 00:12:36,959
the only

358
00:12:36,959 --> 00:12:39,040
whenever for every x1 and x2 i have that

359
00:12:39,040 --> 00:12:41,839
hx1 is equal to hx2 it means that x1

360
00:12:41,839 --> 00:12:45,040
minus x2 is going to be in kernel of h

361
00:12:45,040 --> 00:12:48,000
so the probability of for every random

362
00:12:48,000 --> 00:12:50,839
x1 and x2

363
00:12:50,839 --> 00:12:54,240
uh h times x1 being equal to h times x2

364
00:12:54,240 --> 00:12:56,079
is going to be 2 to the power

365
00:12:56,079 --> 00:12:58,959
dimension of kernel of h1 over 2 to the

366
00:12:58,959 --> 00:13:00,480
power 2 n

367
00:13:00,480 --> 00:13:01,600
so

368
00:13:01,600 --> 00:13:03,519
these are the differences

369
00:13:03,519 --> 00:13:07,079
and these are the possibilities

370
00:13:08,480 --> 00:13:10,639
so

371
00:13:11,360 --> 00:13:13,279
and i have that the dimension of the

372
00:13:13,279 --> 00:13:15,120
kernel is 2n minus

373
00:13:15,120 --> 00:13:16,480
1 over 3.

374
00:13:16,480 --> 00:13:17,839
this is because of the property that

375
00:13:17,839 --> 00:13:19,519
it's the null space

376
00:13:19,519 --> 00:13:23,040
matrix of function f

377
00:13:23,040 --> 00:13:24,800
and exactly because

378
00:13:24,800 --> 00:13:26,320
f hat is

379
00:13:26,320 --> 00:13:28,959
constraining n over three variables so

380
00:13:28,959 --> 00:13:31,040
the probability of a collision for a

381
00:13:31,040 --> 00:13:34,480
pair for a given pair is 2 to the power

382
00:13:34,480 --> 00:13:36,320
minus n over 3.

383
00:13:36,320 --> 00:13:37,680
so what is the expected number of

384
00:13:37,680 --> 00:13:39,199
collisions is going to be total number

385
00:13:39,199 --> 00:13:41,519
of pairs times this probability which is

386
00:13:41,519 --> 00:13:42,560
going to be

387
00:13:42,560 --> 00:13:45,040
2 to the power n

388
00:13:45,040 --> 00:13:46,639
okay

389
00:13:46,639 --> 00:13:50,639
so let's see after we get to sets kb

390
00:13:50,639 --> 00:13:52,240
what are we going to do

391
00:13:52,240 --> 00:13:53,519
everything is going to be exactly

392
00:13:53,519 --> 00:13:55,120
similar to what we did before what i

393
00:13:55,120 --> 00:13:57,199
explained in the beginning so for every

394
00:13:57,199 --> 00:13:59,440
value of k2 that i have

395
00:13:59,440 --> 00:14:03,279
i will evaluate this equation

396
00:14:03,279 --> 00:14:06,000
for every value of k1 that i have

397
00:14:06,000 --> 00:14:08,639
i will evaluate this equation and i will

398
00:14:08,639 --> 00:14:10,639
look for a collision again but here the

399
00:14:10,639 --> 00:14:12,639
point is that

400
00:14:12,639 --> 00:14:14,399
there are 2 to the power n over 3

401
00:14:14,399 --> 00:14:16,240
possible values for k 1 and 2 to the

402
00:14:16,240 --> 00:14:18,399
power n over 3 around 2 to the power n

403
00:14:18,399 --> 00:14:20,639
over 3 values for k2

404
00:14:20,639 --> 00:14:22,079
because

405
00:14:22,079 --> 00:14:24,240
this set is not all the possible values

406
00:14:24,240 --> 00:14:26,880
but we've already done one check on it

407
00:14:26,880 --> 00:14:28,959
and then i would return the whole key

408
00:14:28,959 --> 00:14:32,079
that i've recovered from here

409
00:14:32,240 --> 00:14:34,480
okay

410
00:14:34,480 --> 00:14:36,639
so let's go through the complexity

411
00:14:36,639 --> 00:14:38,800
analysis for a second so

412
00:14:38,800 --> 00:14:41,600
you have this many majority guesses

413
00:14:41,600 --> 00:14:43,920
then you have to compute one equation

414
00:14:43,920 --> 00:14:45,519
the equation that i described in the

415
00:14:45,519 --> 00:14:47,839
beginning so that's going to be

416
00:14:47,839 --> 00:14:50,560
one partial encryption

417
00:14:50,560 --> 00:14:51,839
there's going to be one gaussian

418
00:14:51,839 --> 00:14:53,199
elimination

419
00:14:53,199 --> 00:14:55,040
because we have to find that kernel

420
00:14:55,040 --> 00:14:56,399
matrix

421
00:14:56,399 --> 00:14:58,399
and then there are two mitms so for the

422
00:14:58,399 --> 00:14:59,680
first one

423
00:14:59,680 --> 00:15:02,639
i have to evaluate quadratic polynomials

424
00:15:02,639 --> 00:15:04,639
and this many inputs two times two to

425
00:15:04,639 --> 00:15:07,040
the power n over three inputs for this

426
00:15:07,040 --> 00:15:08,639
i'm going to use some gray code

427
00:15:08,639 --> 00:15:11,040
enumeration method

428
00:15:11,040 --> 00:15:12,800
and the second mitm

429
00:15:12,800 --> 00:15:15,519
is going to be evaluating

430
00:15:15,519 --> 00:15:17,360
quadratic polynomials again over 2 to

431
00:15:17,360 --> 00:15:19,839
the power n over 3.

432
00:15:19,839 --> 00:15:22,320
quadratic

433
00:15:22,480 --> 00:15:25,040
size input sets okay

434
00:15:25,040 --> 00:15:26,959
so now let's talk about the partial

435
00:15:26,959 --> 00:15:29,760
layer virtually

436
00:15:30,480 --> 00:15:31,759
okay

437
00:15:31,759 --> 00:15:34,880
so i will divide my rounds that i have

438
00:15:34,880 --> 00:15:37,600
here into four different distinct types

439
00:15:37,600 --> 00:15:39,759
so there's going to be the air rounds

440
00:15:39,759 --> 00:15:42,000
which are in the beginning

441
00:15:42,000 --> 00:15:44,000
the keys that appear in

442
00:15:44,000 --> 00:15:45,519
the round keys that appear here i'm

443
00:15:45,519 --> 00:15:47,519
going to express them as ka

444
00:15:47,519 --> 00:15:49,839
they're going to be b rounds which are

445
00:15:49,839 --> 00:15:52,639
the b rounds after the a rounds

446
00:15:52,639 --> 00:15:55,199
so kb describes the keys there

447
00:15:55,199 --> 00:15:57,040
i'm going to have the c runs with

448
00:15:57,040 --> 00:15:59,199
corresponding keys kc which are the last

449
00:15:59,199 --> 00:16:00,320
c rounds

450
00:16:00,320 --> 00:16:02,240
and then i will have

451
00:16:02,240 --> 00:16:03,839
the middle rounds which i will be

452
00:16:03,839 --> 00:16:06,560
linearizing and then the keys the key

453
00:16:06,560 --> 00:16:08,399
the entropy of the key that is left from

454
00:16:08,399 --> 00:16:11,279
these three one uh three round keys i'll

455
00:16:11,279 --> 00:16:14,160
call it kram

456
00:16:14,160 --> 00:16:16,720
so it's gonna be n minus three s a plus

457
00:16:16,720 --> 00:16:18,399
b plus c bits

458
00:16:18,399 --> 00:16:21,199
so let's see why this is true first

459
00:16:21,199 --> 00:16:23,759
so the idea is for

460
00:16:23,759 --> 00:16:26,240
rounds a b and c i will

461
00:16:26,240 --> 00:16:27,519
push

462
00:16:27,519 --> 00:16:31,199
uh the round keys uh forward somehow

463
00:16:31,199 --> 00:16:33,680
forward and backward such that the round

464
00:16:33,680 --> 00:16:36,399
keys would be small would actually be of

465
00:16:36,399 --> 00:16:37,600
for every

466
00:16:37,600 --> 00:16:39,199
single round that i have in these three

467
00:16:39,199 --> 00:16:41,040
rounds the round key is going to be

468
00:16:41,040 --> 00:16:43,600
three s bits only and how is this done

469
00:16:43,600 --> 00:16:44,880
as you can see

470
00:16:44,880 --> 00:16:46,720
the portion that is not passing through

471
00:16:46,720 --> 00:16:48,959
the s box i can just pass it through the

472
00:16:48,959 --> 00:16:51,120
affine layer and push it to the next

473
00:16:51,120 --> 00:16:52,399
layer

474
00:16:52,399 --> 00:16:55,759
and if i keep doing this i will have one

475
00:16:55,759 --> 00:16:59,519
big round key in the end and all the

476
00:16:59,519 --> 00:17:01,199
round keys before that are going to be

477
00:17:01,199 --> 00:17:04,519
pretty small

478
00:17:04,640 --> 00:17:07,359
so for a for first a plus b runs i'm

479
00:17:07,359 --> 00:17:10,000
going to push everything forward

480
00:17:10,000 --> 00:17:11,439
and for the

481
00:17:11,439 --> 00:17:12,480
last

482
00:17:12,480 --> 00:17:13,439
uh

483
00:17:13,439 --> 00:17:16,160
r minus orban runs i'm gonna push

484
00:17:16,160 --> 00:17:18,799
everything backwards so

485
00:17:18,799 --> 00:17:21,039
the big key that i have here is going to

486
00:17:21,039 --> 00:17:22,000
appear

487
00:17:22,000 --> 00:17:24,559
in that middle runs that i described and

488
00:17:24,559 --> 00:17:26,959
for all a b and c rounds i will have

489
00:17:26,959 --> 00:17:28,000
small

490
00:17:28,000 --> 00:17:30,240
uh

491
00:17:31,039 --> 00:17:34,799
okay so as i said kakba and kc will be

492
00:17:34,799 --> 00:17:37,280
3sa 3sp 3sc

493
00:17:37,280 --> 00:17:39,919
bits long respectively

494
00:17:39,919 --> 00:17:43,600
and the entropy left is this much

495
00:17:43,600 --> 00:17:44,799
okay

496
00:17:44,799 --> 00:17:48,400
so now let's see what i will do

497
00:17:48,559 --> 00:17:51,360
so for every s box

498
00:17:51,360 --> 00:17:53,919
i will add two sets of variables the

499
00:17:53,919 --> 00:17:56,559
inputs and the outputs of the s box so u

500
00:17:56,559 --> 00:17:58,799
is the input z is the output

501
00:17:58,799 --> 00:18:01,679
now if you check here these dis

502
00:18:01,679 --> 00:18:04,320
are only are a linear function in my x

503
00:18:04,320 --> 00:18:07,440
values and my z values

504
00:18:07,440 --> 00:18:09,840
so this is good so d is a linear

505
00:18:09,840 --> 00:18:12,240
function of x values and z values

506
00:18:12,240 --> 00:18:14,480
and then if i look here

507
00:18:14,480 --> 00:18:16,880
these e values are a linear function of

508
00:18:16,880 --> 00:18:18,960
d's and z's

509
00:18:18,960 --> 00:18:21,039
and these themselves were a linear

510
00:18:21,039 --> 00:18:22,960
function of x and z

511
00:18:22,960 --> 00:18:23,760
so

512
00:18:23,760 --> 00:18:26,400
i will get the w which is the output of

513
00:18:26,400 --> 00:18:28,320
my b rounds is going to be a linear

514
00:18:28,320 --> 00:18:30,640
function

515
00:18:30,640 --> 00:18:33,520
and my z's are my x's which x's were the

516
00:18:33,520 --> 00:18:35,840
outputs of the a rounds and the inputs

517
00:18:35,840 --> 00:18:37,520
to the b rounds

518
00:18:37,520 --> 00:18:38,559
okay

519
00:18:38,559 --> 00:18:41,799
and then

520
00:18:43,919 --> 00:18:46,880
i call the output of the middle rounds

521
00:18:46,880 --> 00:18:49,120
to be y or you can think of it as the

522
00:18:49,120 --> 00:18:53,280
output of the inverse of the last series

523
00:18:53,280 --> 00:18:54,559
so what i will do i will guess the

524
00:18:54,559 --> 00:18:56,559
majority for them for the middle rounds

525
00:18:56,559 --> 00:18:58,640
and linearize everything so now i have

526
00:18:58,640 --> 00:18:59,919
that

527
00:18:59,919 --> 00:19:00,960
y

528
00:19:00,960 --> 00:19:05,440
is a linear function of w and the qubits

529
00:19:08,000 --> 00:19:09,280
so as i say

530
00:19:09,280 --> 00:19:12,080
w can be written as a linear function of

531
00:19:12,080 --> 00:19:12,880
z

532
00:19:12,880 --> 00:19:15,760
and x is and y can be written as a

533
00:19:15,760 --> 00:19:19,520
linear function of w and the keys

534
00:19:19,520 --> 00:19:22,000
so y can be written as a linear function

535
00:19:22,000 --> 00:19:26,720
of z the key it's and x's because i just

536
00:19:26,720 --> 00:19:28,720
replace w with the represent with this

537
00:19:28,720 --> 00:19:32,559
representation in terms of z and x

538
00:19:32,559 --> 00:19:34,880
now i have a linear system

539
00:19:34,880 --> 00:19:36,880
which has way more variables than

540
00:19:36,880 --> 00:19:39,039
equations so i can eliminate some of

541
00:19:39,039 --> 00:19:41,200
these variables so what i will eliminate

542
00:19:41,200 --> 00:19:43,280
will be the kb variables the kram

543
00:19:43,280 --> 00:19:46,240
valuables and z

544
00:19:46,720 --> 00:19:48,480
and this will give me a linear equation

545
00:19:48,480 --> 00:19:50,880
of this form so and i find the function

546
00:19:50,880 --> 00:19:53,200
of ka and x is going to be equal to a

547
00:19:53,200 --> 00:19:56,880
defined function of k c and y

548
00:19:56,880 --> 00:19:58,960
and this is actually good because if you

549
00:19:58,960 --> 00:20:01,039
remember x was the output of the first a

550
00:20:01,039 --> 00:20:04,000
rounds and y was the output of the

551
00:20:04,000 --> 00:20:05,039
inverse

552
00:20:05,039 --> 00:20:07,919
final c rounds

553
00:20:07,919 --> 00:20:10,640
so x only depends on k a and p t and y

554
00:20:10,640 --> 00:20:13,440
only depends on k c and c t so i can

555
00:20:13,440 --> 00:20:15,679
mount a meet in the middle attack

556
00:20:15,679 --> 00:20:17,120
so how does the first meet in the middle

557
00:20:17,120 --> 00:20:19,280
work i will guess the value of ka and

558
00:20:19,280 --> 00:20:22,000
compute x out of it

559
00:20:22,000 --> 00:20:24,159
then i will make a hash table and index

560
00:20:24,159 --> 00:20:25,840
it by

561
00:20:25,840 --> 00:20:28,000
the left hand side of my equation that i

562
00:20:28,000 --> 00:20:30,320
had before with this computed values of

563
00:20:30,320 --> 00:20:32,720
k a and x

564
00:20:32,720 --> 00:20:35,200
then i would guess kc and compute y out

565
00:20:35,200 --> 00:20:36,240
of it

566
00:20:36,240 --> 00:20:37,760
and do the same thing and look for a

567
00:20:37,760 --> 00:20:40,240
collision

568
00:20:40,400 --> 00:20:42,559
and i will keep a good list

569
00:20:42,559 --> 00:20:46,159
a list of good kas and cases

570
00:20:46,159 --> 00:20:47,120
okay

571
00:20:47,120 --> 00:20:49,280
so now let's see this how the second

572
00:20:49,280 --> 00:20:50,720
mitm works

573
00:20:50,720 --> 00:20:53,120
so here i'm trying to get rid of the kbs

574
00:20:53,120 --> 00:20:55,520
in a sense so if you look at the first

575
00:20:55,520 --> 00:20:57,840
round

576
00:20:58,960 --> 00:21:02,799
kb is simply the xor of uis

577
00:21:02,799 --> 00:21:05,520
and x i's from here

578
00:21:05,520 --> 00:21:06,400
because

579
00:21:06,400 --> 00:21:09,679
exactly the input of the s box is x i's

580
00:21:09,679 --> 00:21:12,480
plus the round keys

581
00:21:12,480 --> 00:21:15,360
then here if you look

582
00:21:15,360 --> 00:21:17,760
these kbs that appear here

583
00:21:17,760 --> 00:21:18,720
are

584
00:21:18,720 --> 00:21:23,120
xor of dis and duis again and di's were

585
00:21:23,120 --> 00:21:24,880
a linear function

586
00:21:24,880 --> 00:21:27,760
in x and z

587
00:21:28,159 --> 00:21:31,039
so kb can be seen as a linear function

588
00:21:31,039 --> 00:21:34,480
of u x and z

589
00:21:35,039 --> 00:21:36,159
so

590
00:21:36,159 --> 00:21:37,200
and y

591
00:21:37,200 --> 00:21:38,720
if you remember

592
00:21:38,720 --> 00:21:41,520
was a linear function

593
00:21:41,520 --> 00:21:44,480
of x z k b k a k c and k ram so i will

594
00:21:44,480 --> 00:21:48,640
just replace k b by u x and k z

595
00:21:48,640 --> 00:21:53,280
and now i will eliminate k ram from here

596
00:21:53,679 --> 00:21:54,480
okay

597
00:21:54,480 --> 00:21:56,720
so this will give me some fine equation

598
00:21:56,720 --> 00:21:59,120
of this form and a fine function of z

599
00:21:59,120 --> 00:22:01,520
and u is going to be equal to an a fine

600
00:22:01,520 --> 00:22:05,918
function of k a k c x and y

601
00:22:07,440 --> 00:22:09,200
which

602
00:22:09,200 --> 00:22:11,200
again

603
00:22:11,200 --> 00:22:12,880
this equation is going to allow me to

604
00:22:12,880 --> 00:22:15,919
perform a meet in the middle attack

605
00:22:15,919 --> 00:22:16,799
so

606
00:22:16,799 --> 00:22:19,120
again it goes as we guessed so i've

607
00:22:19,120 --> 00:22:21,520
already created a good list

608
00:22:21,520 --> 00:22:24,840
of good kas and kcs

609
00:22:24,840 --> 00:22:28,240
so for every k and kc that are in that

610
00:22:28,240 --> 00:22:30,480
good list i will compute this value i

611
00:22:30,480 --> 00:22:32,000
will evaluate the defined function that

612
00:22:32,000 --> 00:22:34,320
i had and k a k c x and y and if you

613
00:22:34,320 --> 00:22:36,080
remember x and y were only dependent on

614
00:22:36,080 --> 00:22:38,158
k

615
00:22:38,480 --> 00:22:40,720
then i will exhaust all the u values

616
00:22:40,720 --> 00:22:43,120
which are in 0 1 to the power 3 sp and

617
00:22:43,120 --> 00:22:45,440
compute the defined function which was

618
00:22:45,440 --> 00:22:47,919
on the left hand side of my equation

619
00:22:47,919 --> 00:22:49,280
based on

620
00:22:49,280 --> 00:22:52,240
u and z guesses so z is the output of

621
00:22:52,240 --> 00:22:54,400
the s box u is the input of the xbox so

622
00:22:54,400 --> 00:22:58,080
z can be computed with the u guess

623
00:22:58,720 --> 00:23:00,559
and then i will look for a

624
00:23:00,559 --> 00:23:02,799
collision between the two after i find

625
00:23:02,799 --> 00:23:04,720
the collision i had that kb was a linear

626
00:23:04,720 --> 00:23:07,600
function of u z and x so i can recover

627
00:23:07,600 --> 00:23:08,799
kb

628
00:23:08,799 --> 00:23:11,039
based on the value of uz and x

629
00:23:11,039 --> 00:23:12,799
that i found

630
00:23:12,799 --> 00:23:14,880
and then i recover the remaining part of

631
00:23:14,880 --> 00:23:17,280
the key from the rest of the values that

632
00:23:17,280 --> 00:23:19,280
i have

633
00:23:19,280 --> 00:23:20,320
okay

634
00:23:20,320 --> 00:23:23,280
so this gives me whole key bits

635
00:23:23,280 --> 00:23:25,760
so let's just check the complexity for a

636
00:23:25,760 --> 00:23:26,480
bit

637
00:23:26,480 --> 00:23:28,400
so there are these many

638
00:23:28,400 --> 00:23:31,200
majority guesses that i have to do

639
00:23:31,200 --> 00:23:33,280
there are two mitm stages

640
00:23:33,280 --> 00:23:35,280
in each in the first mitm stage i have

641
00:23:35,280 --> 00:23:37,600
to eliminate some variables i have to

642
00:23:37,600 --> 00:23:38,720
compute

643
00:23:38,720 --> 00:23:41,840
x and y based on k and k c for all these

644
00:23:41,840 --> 00:23:43,679
k and k c values

645
00:23:43,679 --> 00:23:45,840
for the second mitm i have to replace k

646
00:23:45,840 --> 00:23:48,320
v by u z x so this is a

647
00:23:48,320 --> 00:23:51,120
so this is a matrix multiplication

648
00:23:51,120 --> 00:23:52,880
this is a matrix multiplication this was

649
00:23:52,880 --> 00:23:55,039
a gaussian elimination

650
00:23:55,039 --> 00:23:57,120
and then i have to compute u from z this

651
00:23:57,120 --> 00:24:00,799
is evaluating the s box once and then

652
00:24:00,799 --> 00:24:02,559
for both cases i have to evaluate a

653
00:24:02,559 --> 00:24:04,799
linear polynomial

654
00:24:04,799 --> 00:24:06,080
okay

655
00:24:06,080 --> 00:24:07,840
so

656
00:24:07,840 --> 00:24:08,720
the

657
00:24:08,720 --> 00:24:10,880
the analysis of this one is a bit

658
00:24:10,880 --> 00:24:12,880
tedious but you can it's pretty similar

659
00:24:12,880 --> 00:24:14,799
to the previous one that i explained but

660
00:24:14,799 --> 00:24:16,080
there are more details so you can check

661
00:24:16,080 --> 00:24:18,720
out the paper for that but he actually

662
00:24:18,720 --> 00:24:21,520
also implemented the attacks

663
00:24:21,520 --> 00:24:23,679
here you can see i have a variance

664
00:24:23,679 --> 00:24:25,919
for the full s box

665
00:24:25,919 --> 00:24:28,240
version full xbox layer version and the

666
00:24:28,240 --> 00:24:30,000
partial xbox layer

667
00:24:30,000 --> 00:24:33,039
so here you see i have the two-step mitm

668
00:24:33,039 --> 00:24:34,640
attack here i have the linearization

669
00:24:34,640 --> 00:24:36,640
attack and here is the

670
00:24:36,640 --> 00:24:38,480
gray code

671
00:24:38,480 --> 00:24:41,120
optimization applied to the two-step mit

672
00:24:41,120 --> 00:24:42,799
environment

673
00:24:42,799 --> 00:24:44,720
and as you can see

674
00:24:44,720 --> 00:24:47,360
the gray code variant is way better than

675
00:24:47,360 --> 00:24:49,120
both the others but already two-step

676
00:24:49,120 --> 00:24:51,200
mitm is faster

677
00:24:51,200 --> 00:24:52,159
than

678
00:24:52,159 --> 00:24:54,000
normal linearization

679
00:24:54,000 --> 00:24:55,039
so

680
00:24:55,039 --> 00:24:56,559
the difference between the gray code

681
00:24:56,559 --> 00:24:58,640
variant and the non-gray code variant of

682
00:24:58,640 --> 00:25:00,159
the

683
00:25:00,159 --> 00:25:03,600
partial layer is subtle because exactly

684
00:25:03,600 --> 00:25:04,480
the

685
00:25:04,480 --> 00:25:06,159
the degrees of the equations will go

686
00:25:06,159 --> 00:25:07,760
higher so the gray code method will be

687
00:25:07,760 --> 00:25:09,600
less effective but still you can see

688
00:25:09,600 --> 00:25:11,200
that both of them are significantly

689
00:25:11,200 --> 00:25:13,200
better than the linearization attack

690
00:25:13,200 --> 00:25:14,400
okay

691
00:25:14,400 --> 00:25:17,520
so now let's conclude this talk

692
00:25:17,520 --> 00:25:20,000
uh this is a table of the complexities

693
00:25:20,000 --> 00:25:22,960
you can find it in the paper the more

694
00:25:22,960 --> 00:25:24,559
accurate version of it

695
00:25:24,559 --> 00:25:26,799
so we've represented the tags for both

696
00:25:26,799 --> 00:25:28,880
the full xbox variant and the partial

697
00:25:28,880 --> 00:25:30,559
layer

698
00:25:30,559 --> 00:25:32,799
so for the

699
00:25:32,799 --> 00:25:35,600
full xbox variant we have that we can

700
00:25:35,600 --> 00:25:37,279
break it up to three rounds as you can

701
00:25:37,279 --> 00:25:39,279
see here

702
00:25:39,279 --> 00:25:40,320
for

703
00:25:40,320 --> 00:25:42,799
but uh the north three round attack is

704
00:25:42,799 --> 00:25:44,960
still faster than ours but for the two

705
00:25:44,960 --> 00:25:46,320
rounds

706
00:25:46,320 --> 00:25:48,960
version our attack is the fastest

707
00:25:48,960 --> 00:25:50,799
up until now

708
00:25:50,799 --> 00:25:52,720
then for the partial xbox layer which is

709
00:25:52,720 --> 00:25:54,720
the actual interesting part of this work

710
00:25:54,720 --> 00:25:57,600
i would say we can break up to n over s

711
00:25:57,600 --> 00:26:00,720
rounds which was not done before and for

712
00:26:00,720 --> 00:26:01,440
all

713
00:26:01,440 --> 00:26:04,159
for both 0.8 times n over s and then

714
00:26:04,159 --> 00:26:08,000
over s we get faster attacks

715
00:26:08,840 --> 00:26:11,600
so whatever what are possible future

716
00:26:11,600 --> 00:26:13,200
works that can be done

717
00:26:13,200 --> 00:26:16,400
one thing to check is that can this mitm

718
00:26:16,400 --> 00:26:19,039
slash graco denomination approach extend

719
00:26:19,039 --> 00:26:20,480
to more rounds

720
00:26:20,480 --> 00:26:23,520
and the answer is yes

721
00:26:23,520 --> 00:26:25,679
i would say almost yes

722
00:26:25,679 --> 00:26:27,360
so this is some current work that we're

723
00:26:27,360 --> 00:26:29,520
doing and the idea is we replace the

724
00:26:29,520 --> 00:26:33,039
majority function with some

725
00:26:33,039 --> 00:26:34,400
more better

726
00:26:34,400 --> 00:26:36,159
tailored functions such that the roots

727
00:26:36,159 --> 00:26:40,720
of its are ordered in a gray code manner

728
00:26:40,960 --> 00:26:43,919
and uh this will probably break

729
00:26:43,919 --> 00:26:46,240
uh variants with more rounds

730
00:26:46,240 --> 00:26:48,320
i think the last thing we have is we can

731
00:26:48,320 --> 00:26:50,080
break up to seven runs but the

732
00:26:50,080 --> 00:26:53,279
difference hits normal

733
00:26:53,279 --> 00:26:55,520
exhaustive search is really small so

734
00:26:55,520 --> 00:26:56,960
there are still improvements that need

735
00:26:56,960 --> 00:26:58,799
to be done

736
00:26:58,799 --> 00:27:00,880
and then another

737
00:27:00,880 --> 00:27:02,559
interesting approach would be combining

738
00:27:02,559 --> 00:27:04,400
the linearization ideas with the parity

739
00:27:04,400 --> 00:27:07,600
counting methods from dinor

740
00:27:07,600 --> 00:27:09,600
okay thank you very much for watching

741
00:27:09,600 --> 00:27:12,080
this video and listening

742
00:27:12,080 --> 00:27:14,320
and if you were interested if the talk

743
00:27:14,320 --> 00:27:16,000
was interesting to you i would

744
00:27:16,000 --> 00:27:17,679
highly encourage you to

745
00:27:17,679 --> 00:27:20,159
read the paper here's a link to it and

746
00:27:20,159 --> 00:27:23,880
thank you very much again

