1
00:00:00,799 --> 00:00:03,919
hello i'm shyhan i'm going to talk about

2
00:00:03,919 --> 00:00:06,560
key encapsulation mechanism with stat

3
00:00:06,560 --> 00:00:08,960
enhanced security in the mud user

4
00:00:08,960 --> 00:00:10,080
setting

5
00:00:10,080 --> 00:00:12,240
impossibility results and optimal

6
00:00:12,240 --> 00:00:13,599
tightness

7
00:00:13,599 --> 00:00:15,759
this is a joint work with shungio and

8
00:00:15,759 --> 00:00:18,400
taougo

9
00:00:18,480 --> 00:00:20,800
in this talk we will first record the

10
00:00:20,800 --> 00:00:24,400
syntax of cam and its enhanced security

11
00:00:24,400 --> 00:00:26,880
record existing possibility results on

12
00:00:26,880 --> 00:00:28,800
tight security

13
00:00:28,800 --> 00:00:31,439
then we will introduce our new technical

14
00:00:31,439 --> 00:00:34,160
tool called camps rank and show how to

15
00:00:34,160 --> 00:00:36,480
use it to obtaining our impossibility

16
00:00:36,480 --> 00:00:38,559
results

17
00:00:38,559 --> 00:00:42,000
first let us record cam

18
00:00:42,000 --> 00:00:44,879
key encapsulation mechanism or cam for

19
00:00:44,879 --> 00:00:47,440
short is a public key cryptographic

20
00:00:47,440 --> 00:00:48,800
primitive

21
00:00:48,800 --> 00:00:51,199
cam has rape of ballistic polynomial

22
00:00:51,199 --> 00:00:54,000
time algorithms with a key generation

23
00:00:54,000 --> 00:00:56,480
algorithm alex generates a pair of

24
00:00:56,480 --> 00:00:58,879
public key and secret key

25
00:00:58,879 --> 00:01:02,239
and publishes her public key pk

26
00:01:02,239 --> 00:01:04,080
with alice's

27
00:01:04,080 --> 00:01:06,479
public key pk bob can invoke the

28
00:01:06,479 --> 00:01:09,439
encapsulation algorithm to produce an

29
00:01:09,439 --> 00:01:12,320
encapsulated key and a cipher ciphertext

30
00:01:12,320 --> 00:01:14,799
and sends the ciphertext c to

31
00:01:14,799 --> 00:01:16,640
alice

32
00:01:16,640 --> 00:01:19,520
after receiving c alice can use her own

33
00:01:19,520 --> 00:01:22,479
secret key to decapsulate c and recover

34
00:01:22,479 --> 00:01:25,040
the encapsulated key k by invoking the

35
00:01:25,040 --> 00:01:27,360
decapsulation algorithm

36
00:01:27,360 --> 00:01:30,479
this way alex and bob establish a shared

37
00:01:30,479 --> 00:01:33,200
encapsulated key k and can use it for

38
00:01:33,200 --> 00:01:35,520
better use

39
00:01:35,520 --> 00:01:38,560
cam has many applications such as in

40
00:01:38,560 --> 00:01:40,799
constructing public key encryption

41
00:01:40,799 --> 00:01:45,840
authenticated key exchange protocols etc

42
00:01:45,840 --> 00:01:48,240
in real world scenarios there might be

43
00:01:48,240 --> 00:01:50,960
many users each of them generates their

44
00:01:50,960 --> 00:01:53,280
own keys and each two of them might

45
00:01:53,280 --> 00:01:55,680
communicate and send many cipher tests

46
00:01:55,680 --> 00:01:58,719
to each other this is called the matte

47
00:01:58,719 --> 00:02:01,040
user setting

48
00:02:01,040 --> 00:02:03,520
in this setting an adversary is able to

49
00:02:03,520 --> 00:02:06,240
see all users public keys and all cypher

50
00:02:06,240 --> 00:02:09,119
tests sending over the public channels

51
00:02:09,119 --> 00:02:11,599
moreover a powerful adversary may even

52
00:02:11,599 --> 00:02:14,239
craft some users and obtain their secret

53
00:02:14,239 --> 00:02:16,720
keys and may obtain some keys

54
00:02:16,720 --> 00:02:19,599
encapsulated in some separate tests

55
00:02:19,599 --> 00:02:22,000
the security of cam would ask the

56
00:02:22,000 --> 00:02:24,720
unreviewed keys and the uncrafted users

57
00:02:24,720 --> 00:02:27,760
to be pseudorandom

58
00:02:28,480 --> 00:02:31,840
such a strong yet realistic security is

59
00:02:31,840 --> 00:02:34,720
called enhanced security in our work

60
00:02:34,720 --> 00:02:37,040
we formalize two enhanced security

61
00:02:37,040 --> 00:02:38,239
notions

62
00:02:38,239 --> 00:02:41,599
enhance cpa and enhance the cca

63
00:02:41,599 --> 00:02:44,080
in enhanced cpa security model an

64
00:02:44,080 --> 00:02:46,319
anniversary can obtain all users public

65
00:02:46,319 --> 00:02:47,360
keys

66
00:02:47,360 --> 00:02:50,640
then it can implement several queries

67
00:02:50,640 --> 00:02:53,360
through in-cap queries the adversary can

68
00:02:53,360 --> 00:02:56,319
obtain newly generated ciphertexts ci

69
00:02:56,319 --> 00:02:58,319
from the challenger

70
00:02:58,319 --> 00:03:00,879
then the adversary can ask to review the

71
00:03:00,879 --> 00:03:04,000
key ki encapsulated in ci through key

72
00:03:04,000 --> 00:03:04,959
review

73
00:03:04,959 --> 00:03:06,480
queries

74
00:03:06,480 --> 00:03:08,800
the adversary can also adaptively craft

75
00:03:08,800 --> 00:03:11,440
some users and obtain their secret keys

76
00:03:11,440 --> 00:03:13,280
ski

77
00:03:13,280 --> 00:03:15,840
for unreviewed keys under uncrafted

78
00:03:15,840 --> 00:03:17,519
secret keys

79
00:03:17,519 --> 00:03:20,720
the adversary can ask text queries and

80
00:03:20,720 --> 00:03:23,120
receive a challenge which is either the

81
00:03:23,120 --> 00:03:26,480
real key kj encapsulated in cj

82
00:03:26,480 --> 00:03:29,680
or a uniformly independent key depending

83
00:03:29,680 --> 00:03:31,360
on the challenge bit

84
00:03:31,360 --> 00:03:32,560
b

85
00:03:32,560 --> 00:03:35,360
finally a outputs are guessing bits b

86
00:03:35,360 --> 00:03:36,560
prime

87
00:03:36,560 --> 00:03:39,280
the probability that b prime equals b

88
00:03:39,280 --> 00:03:42,159
should be negligibly close to one over

89
00:03:42,159 --> 00:03:44,319
two

90
00:03:44,319 --> 00:03:46,799
to prove the security of a cryptographic

91
00:03:46,799 --> 00:03:50,239
scheme like cam a common way is to base

92
00:03:50,239 --> 00:03:53,040
schemes security and hardness of a

93
00:03:53,040 --> 00:03:55,280
well-studied program through a security

94
00:03:55,280 --> 00:03:57,200
reduction

95
00:03:57,200 --> 00:03:59,760
a security reduction turns any adversary

96
00:03:59,760 --> 00:04:02,640
a run in time ta breaking scheme

97
00:04:02,640 --> 00:04:05,840
security with advantage epsilon a into l

98
00:04:05,840 --> 00:04:07,519
adversary b

99
00:04:07,519 --> 00:04:10,000
running in time tb solving the hard

100
00:04:10,000 --> 00:04:14,560
problem with advantage epsilon b

101
00:04:14,560 --> 00:04:17,680
a reduction establishes an inequality

102
00:04:17,680 --> 00:04:19,199
between t b

103
00:04:19,199 --> 00:04:22,639
over epsilon b and t a over epsilon a

104
00:04:22,639 --> 00:04:24,639
with a factor l

105
00:04:24,639 --> 00:04:27,600
the l called the security loss factor

106
00:04:27,600 --> 00:04:30,080
measures the quality of the reduction

107
00:04:30,080 --> 00:04:32,560
and is smaller the better

108
00:04:32,560 --> 00:04:34,720
it is desirable to have l to be a

109
00:04:34,720 --> 00:04:36,160
constant

110
00:04:36,160 --> 00:04:38,639
if a cryptographic scheme has a security

111
00:04:38,639 --> 00:04:41,199
reduction with a constant loss vector

112
00:04:41,199 --> 00:04:45,520
then we call it has a tight security

113
00:04:45,680 --> 00:04:47,919
it is desirable to have tightly secured

114
00:04:47,919 --> 00:04:50,560
schemes however many existing works

115
00:04:50,560 --> 00:04:52,720
proved impossibility results on tight

116
00:04:52,720 --> 00:04:55,680
securities of many primitives

117
00:04:55,680 --> 00:04:56,960
for example

118
00:04:56,960 --> 00:04:58,800
morgan pass

119
00:04:58,800 --> 00:05:01,360
showed that for deterministic

120
00:05:01,360 --> 00:05:03,280
message authentication code and

121
00:05:03,280 --> 00:05:06,160
deterministic digital signature it is

122
00:05:06,160 --> 00:05:08,880
impossible to achieve tight security

123
00:05:08,880 --> 00:05:11,280
under adaptive corruptions from bonded

124
00:05:11,280 --> 00:05:13,600
round assumptions

125
00:05:13,600 --> 00:05:15,919
for digital signature public key

126
00:05:15,919 --> 00:05:18,560
encryption and chem starting from the

127
00:05:18,560 --> 00:05:20,720
same network by coron

128
00:05:20,720 --> 00:05:23,600
there is a line of research including

129
00:05:23,600 --> 00:05:24,800
cupcake

130
00:05:24,800 --> 00:05:26,000
cutes

131
00:05:26,000 --> 00:05:27,039
badger

132
00:05:27,039 --> 00:05:30,720
jager e sanchez showed that tight

133
00:05:30,720 --> 00:05:32,960
security under adaptive corruption is

134
00:05:32,960 --> 00:05:36,240
impossible to achieve if the relation pk

135
00:05:36,240 --> 00:05:39,120
sk is checkable and one of the following

136
00:05:39,120 --> 00:05:41,600
two conditions hold

137
00:05:41,600 --> 00:05:44,320
the first condition requires sk has key

138
00:05:44,320 --> 00:05:47,440
uniqueness namely for every pk there

139
00:05:47,440 --> 00:05:50,320
exists at most one sk corresponding to

140
00:05:50,320 --> 00:05:51,280
it

141
00:05:51,280 --> 00:05:54,320
the second condition requires sk has key

142
00:05:54,320 --> 00:05:58,639
randomization namely given a sk1

143
00:05:58,639 --> 00:06:01,680
one can efficiently sample a uniform sk

144
00:06:01,680 --> 00:06:03,840
from all secret keys corresponding to

145
00:06:03,840 --> 00:06:06,880
the pk1

146
00:06:06,880 --> 00:06:09,520
existing impossibility results rule out

147
00:06:09,520 --> 00:06:13,280
some camps on their tight security

148
00:06:13,280 --> 00:06:15,680
under adaptive corruptions

149
00:06:15,680 --> 00:06:18,720
thus also their ties enhanced security

150
00:06:18,720 --> 00:06:22,080
for example the l gamma cam satisfies

151
00:06:22,080 --> 00:06:25,840
the sk uniqueness each pk has a unique

152
00:06:25,840 --> 00:06:28,720
sk thus it is impossible for your gamma

153
00:06:28,720 --> 00:06:32,960
cam to have a tight enhanced security

154
00:06:32,960 --> 00:06:35,759
however many well-known camps including

155
00:06:35,759 --> 00:06:38,080
the most efficient crimeship and

156
00:06:38,080 --> 00:06:40,960
crusader decimate camps from decisional

157
00:06:40,960 --> 00:06:43,039
different assumptions

158
00:06:43,039 --> 00:06:45,759
their sk has neither key uniqueness nor

159
00:06:45,759 --> 00:06:47,680
key randomization

160
00:06:47,680 --> 00:06:51,280
for example there are p 0 p k equals g 1

161
00:06:51,280 --> 00:06:52,800
to x 1

162
00:06:52,800 --> 00:06:56,160
times g 2 to x 2.

163
00:06:56,160 --> 00:06:58,639
there are many secret keys x 1 x 2

164
00:06:58,639 --> 00:07:01,120
correspond to a single p k

165
00:07:01,120 --> 00:07:03,680
however it is inefficient to do real

166
00:07:03,680 --> 00:07:06,479
randomization unless the discrete

167
00:07:06,479 --> 00:07:10,960
logarithm of g1 and g2 is easy to solve

168
00:07:10,960 --> 00:07:13,520
therefore for many well-known camps we

169
00:07:13,520 --> 00:07:15,360
do not know whether they have tight

170
00:07:15,360 --> 00:07:17,039
enhanced security

171
00:07:17,039 --> 00:07:19,680
or not by existing works

172
00:07:19,680 --> 00:07:21,680
determining determining whether

173
00:07:21,680 --> 00:07:24,400
tightness impossibility holds for such

174
00:07:24,400 --> 00:07:28,000
cam schemes needs new techniques

175
00:07:28,000 --> 00:07:30,479
next we show our main technical tool in

176
00:07:30,479 --> 00:07:33,520
this work called cams rank which is

177
00:07:33,520 --> 00:07:35,360
crucial in establishing our

178
00:07:35,360 --> 00:07:38,080
impossibility results

179
00:07:38,080 --> 00:07:40,479
firstly we studied the equivalence of

180
00:07:40,479 --> 00:07:42,800
secret keys for cam schemes when

181
00:07:42,800 --> 00:07:46,560
decapitating a set of cipher tests x

182
00:07:46,560 --> 00:07:50,560
for set of cipher text x consisting c1

183
00:07:50,560 --> 00:07:53,520
c2 to cq we define an

184
00:07:53,520 --> 00:07:55,840
equivalence relation on the secret key

185
00:07:55,840 --> 00:07:57,440
space

186
00:07:57,440 --> 00:08:00,240
k and s k prime are the cap equivalent

187
00:08:00,240 --> 00:08:03,120
with respect to x if for every cipher

188
00:08:03,120 --> 00:08:07,120
test c in x the capsulation of c using s

189
00:08:07,120 --> 00:08:10,840
k equals the capsulation of c using sk

190
00:08:10,840 --> 00:08:15,599
prime in other words s k and s k prime

191
00:08:15,599 --> 00:08:17,919
has the same d capsulation

192
00:08:17,919 --> 00:08:20,879
functionality on the whole ciphertext

193
00:08:20,879 --> 00:08:22,720
set x

194
00:08:22,720 --> 00:08:25,199
with this decap equivalence relation we

195
00:08:25,199 --> 00:08:27,360
can partition the secret key space into

196
00:08:27,360 --> 00:08:31,360
many equivalent classes

197
00:08:31,599 --> 00:08:34,080
with different x we may have different

198
00:08:34,080 --> 00:08:36,080
equivalence relations on secret key

199
00:08:36,080 --> 00:08:37,039
space

200
00:08:37,039 --> 00:08:39,679
in particular with more cipher tests in

201
00:08:39,679 --> 00:08:42,719
x it may partition the set the secret

202
00:08:42,719 --> 00:08:46,240
key space into more equivalent classes

203
00:08:46,240 --> 00:08:49,360
and with fewer cipher tests in x it may

204
00:08:49,360 --> 00:08:52,160
partition the secret key space into

205
00:08:52,160 --> 00:08:54,959
fewer equivalent classes

206
00:08:54,959 --> 00:08:58,160
for set x and element c 1 in x

207
00:08:58,160 --> 00:09:02,000
if x defines a strict strictly defined

208
00:09:02,000 --> 00:09:06,160
equivalence relation then x set minus c1

209
00:09:06,160 --> 00:09:08,560
then we call c1 is an independent

210
00:09:08,560 --> 00:09:11,200
element in x

211
00:09:11,200 --> 00:09:13,920
there is another situation that x

212
00:09:13,920 --> 00:09:16,080
defines exactly the same equivalence

213
00:09:16,080 --> 00:09:19,600
relation with x set minus c1

214
00:09:19,600 --> 00:09:22,399
in this case we call c1 is a dependent

215
00:09:22,399 --> 00:09:25,120
element in x

216
00:09:25,120 --> 00:09:28,560
so starting from a ciphertext

217
00:09:28,560 --> 00:09:32,399
set x we can drop all dependent elements

218
00:09:32,399 --> 00:09:34,959
in it without changing the equivalence

219
00:09:34,959 --> 00:09:37,120
relation it's defined

220
00:09:37,120 --> 00:09:39,839
in the end every elements left are

221
00:09:39,839 --> 00:09:41,040
independent

222
00:09:41,040 --> 00:09:43,440
elements then we call the resulting

223
00:09:43,440 --> 00:09:48,240
subset x prime of x and independent set

224
00:09:48,240 --> 00:09:50,720
x prime is a subset of x

225
00:09:50,720 --> 00:09:53,040
but it consists of only

226
00:09:53,040 --> 00:09:54,959
independent elements

227
00:09:54,959 --> 00:09:57,440
and defines the same equivalence

228
00:09:57,440 --> 00:10:00,640
relation with x

229
00:10:02,000 --> 00:10:05,200
for set x it might have many independent

230
00:10:05,200 --> 00:10:06,959
subsets x prime

231
00:10:06,959 --> 00:10:09,680
we define the rank of x and the size of

232
00:10:09,680 --> 00:10:13,120
the largest independent set of x

233
00:10:13,120 --> 00:10:15,760
by taking x as the whole ciphertest

234
00:10:15,760 --> 00:10:17,760
space c t

235
00:10:17,760 --> 00:10:20,079
we define the rank of cam which is the

236
00:10:20,079 --> 00:10:24,000
rank of the sephora test space of cam

237
00:10:24,000 --> 00:10:26,640
and equals the size of the largest

238
00:10:26,640 --> 00:10:28,959
independent set of the whole cipher test

239
00:10:28,959 --> 00:10:31,040
space

240
00:10:31,040 --> 00:10:33,200
intuitively the relation between

241
00:10:33,200 --> 00:10:36,240
independent set and ct is analogous to

242
00:10:36,240 --> 00:10:38,240
the relation between a basis and the

243
00:10:38,240 --> 00:10:39,600
linear space

244
00:10:39,600 --> 00:10:42,000
and the rank of cam is analogous to the

245
00:10:42,000 --> 00:10:45,120
size of the basis of a linear space

246
00:10:45,120 --> 00:10:48,079
namely the dimension of linear space

247
00:10:48,079 --> 00:10:50,399
however we note that in general the

248
00:10:50,399 --> 00:10:53,200
decapsulation algorithm of chem is not a

249
00:10:53,200 --> 00:10:55,680
linear function especially for cca

250
00:10:55,680 --> 00:10:57,279
secure camps

251
00:10:57,279 --> 00:10:59,519
so the rank of cam is different from the

252
00:10:59,519 --> 00:11:02,800
dimension of ct even if ct is indeed a

253
00:11:02,800 --> 00:11:05,120
linear space

254
00:11:05,120 --> 00:11:07,600
with the notion of rank we establish a

255
00:11:07,600 --> 00:11:09,519
core technical mr

256
00:11:09,519 --> 00:11:11,200
which says that

257
00:11:11,200 --> 00:11:14,399
if we uniformly pick a cipher test c

258
00:11:14,399 --> 00:11:18,800
from x the probability that x c minus c

259
00:11:18,800 --> 00:11:22,480
and x define a same equivalence relation

260
00:11:22,480 --> 00:11:26,160
or c is indep is dependent in c

261
00:11:26,160 --> 00:11:29,360
is at least one minus kim's rank over

262
00:11:29,360 --> 00:11:32,320
the size of x

263
00:11:33,360 --> 00:11:35,680
finally we show how we establish our

264
00:11:35,680 --> 00:11:37,519
impossibility results using our

265
00:11:37,519 --> 00:11:41,120
technical tool kim's rank

266
00:11:41,120 --> 00:11:43,680
our impossibility result is built upon a

267
00:11:43,680 --> 00:11:45,920
line of research on using mental

268
00:11:45,920 --> 00:11:48,480
reductions starting from current at

269
00:11:48,480 --> 00:11:51,360
eurocrypt02

270
00:11:51,360 --> 00:11:53,279
the high-level idea of the mental

271
00:11:53,279 --> 00:11:56,399
reduction paradigm works as follows

272
00:11:56,399 --> 00:11:59,040
let our ple reduction algorithm from the

273
00:11:59,040 --> 00:12:01,920
security of chems enhance security to

274
00:12:01,920 --> 00:12:05,920
air in an interactive heart problem

275
00:12:06,399 --> 00:12:09,279
firstly we will construct a hypothetical

276
00:12:09,279 --> 00:12:12,959
inefficient adversary a star that breaks

277
00:12:12,959 --> 00:12:15,200
the security of the primitive with

278
00:12:15,200 --> 00:12:18,959
advantage epsilon star

279
00:12:19,120 --> 00:12:21,839
then by the security reduction r which

280
00:12:21,839 --> 00:12:24,560
interacts with the hypothetical a star

281
00:12:24,560 --> 00:12:26,639
we get a lower bound on the security

282
00:12:26,639 --> 00:12:30,320
loss vector l by a star's advantage over

283
00:12:30,320 --> 00:12:33,120
rs advantage

284
00:12:33,120 --> 00:12:35,600
finally we will construct an efficient

285
00:12:35,600 --> 00:12:38,399
meta reduction algorithm b which

286
00:12:38,399 --> 00:12:41,920
emulates a star while running r

287
00:12:41,920 --> 00:12:44,639
suppose that b perfectly emulates the

288
00:12:44,639 --> 00:12:47,600
interaction between r and a star except

289
00:12:47,600 --> 00:12:50,240
with probability delta

290
00:12:50,240 --> 00:12:53,839
then the lower bound of l is epsilon

291
00:12:53,839 --> 00:12:57,279
star over delta assuming the underlying

292
00:12:57,279 --> 00:13:00,399
problem is hard to solve so that epsilon

293
00:13:00,399 --> 00:13:03,680
b is negligible

294
00:13:04,079 --> 00:13:06,480
with the mental reduction paradigm we

295
00:13:06,480 --> 00:13:08,399
will show our construction of the

296
00:13:08,399 --> 00:13:11,279
hypothetical adversary a star and our

297
00:13:11,279 --> 00:13:13,120
construction of the mental reduction

298
00:13:13,120 --> 00:13:14,800
algorithm b

299
00:13:14,800 --> 00:13:18,639
by analyzing epsilon a star and delta we

300
00:13:18,639 --> 00:13:21,360
will obtain the lower bound of l thus

301
00:13:21,360 --> 00:13:25,519
establishing our impossibility results

302
00:13:25,519 --> 00:13:28,240
in step one we show our construction of

303
00:13:28,240 --> 00:13:30,800
the hypothetical inefficient adversary a

304
00:13:30,800 --> 00:13:32,000
star

305
00:13:32,000 --> 00:13:34,560
in the enhanced security model a star

306
00:13:34,560 --> 00:13:36,800
will first receive public keys of all

307
00:13:36,800 --> 00:13:39,839
users from the challenger

308
00:13:39,839 --> 00:13:42,880
then for each user a star issues queue

309
00:13:42,880 --> 00:13:45,680
encapsulation queries and receives the

310
00:13:45,680 --> 00:13:50,240
encapsulations cij from the challenger

311
00:13:50,240 --> 00:13:53,839
next for each user a star issues q minus

312
00:13:53,839 --> 00:13:55,920
one key review queries

313
00:13:55,920 --> 00:13:59,279
and receives the keys kij encapsulated

314
00:13:59,279 --> 00:14:00,800
in cij

315
00:14:00,800 --> 00:14:03,920
here the indices of the unreviewed keys

316
00:14:03,920 --> 00:14:07,199
are uniformly chosen

317
00:14:07,199 --> 00:14:10,880
then a star crafts all but one users and

318
00:14:10,880 --> 00:14:13,920
obtains their secret keys ski

319
00:14:13,920 --> 00:14:17,680
the uncrafted user i star is uniformly

320
00:14:17,680 --> 00:14:20,240
chosen from 1 to n

321
00:14:20,240 --> 00:14:22,639
with the secret keys ski

322
00:14:22,639 --> 00:14:25,839
reviewed encapsulated keys kij

323
00:14:25,839 --> 00:14:28,079
and ciphertext cij

324
00:14:28,079 --> 00:14:31,120
a star can check whether kij is in the

325
00:14:31,120 --> 00:14:36,399
capsulation of cij under secret key ski

326
00:14:36,399 --> 00:14:39,600
clearly if the challenger is honest then

327
00:14:39,600 --> 00:14:41,839
the checks always pass

328
00:14:41,839 --> 00:14:44,480
if the check does not pass a star or

329
00:14:44,480 --> 00:14:46,800
bots

330
00:14:47,120 --> 00:14:50,320
finally a star will ask to test the

331
00:14:50,320 --> 00:14:54,000
unreviewed key of the uncrafted user

332
00:14:54,000 --> 00:14:56,720
a star will receive a change t

333
00:14:56,720 --> 00:14:58,720
which is either the real key

334
00:14:58,720 --> 00:15:01,839
encapsulated in c i star 2

335
00:15:01,839 --> 00:15:03,760
or a random key

336
00:15:03,760 --> 00:15:08,320
a star wants to output a guessing bit

337
00:15:08,320 --> 00:15:11,680
a star is an efficient adversary so far

338
00:15:11,680 --> 00:15:14,160
the only inefficient part is how esta

339
00:15:14,160 --> 00:15:17,760
computes the final guessing bit

340
00:15:17,760 --> 00:15:20,880
a star will use brute force search to

341
00:15:20,880 --> 00:15:24,560
find a secret key sk star

342
00:15:24,560 --> 00:15:26,959
and text and test whether the challenge

343
00:15:26,959 --> 00:15:29,759
t is the calculation of c

344
00:15:29,759 --> 00:15:32,959
i star 2 under sk star

345
00:15:32,959 --> 00:15:34,480
if it holds

346
00:15:34,480 --> 00:15:38,240
then t equals k i star 2 and a star

347
00:15:38,240 --> 00:15:41,360
outputs 1 to the challenger otherwise t

348
00:15:41,360 --> 00:15:45,360
is random and a star output 0.

349
00:15:45,360 --> 00:15:48,639
so how a star choose sk star

350
00:15:48,639 --> 00:15:51,120
for the uncrafted user i star

351
00:15:51,120 --> 00:15:54,079
since a star obtains q minus 1 reviewed

352
00:15:54,079 --> 00:15:55,120
keys

353
00:15:55,120 --> 00:16:00,399
k i star 1 ki star 3 to k star q

354
00:16:00,399 --> 00:16:02,480
by the correctness of cam the real

355
00:16:02,480 --> 00:16:05,920
secret key ski star of user i star must

356
00:16:05,920 --> 00:16:09,040
decrypt cs.1 to ki star 1

357
00:16:09,040 --> 00:16:10,800
decrypt c

358
00:16:10,800 --> 00:16:14,880
i star 3 to ks star 3 decrypt cs dot q 2

359
00:16:14,880 --> 00:16:17,440
k star q etc

360
00:16:17,440 --> 00:16:20,720
a star will choose a random sk star from

361
00:16:20,720 --> 00:16:24,160
all secret keys which decrypts cs star 1

362
00:16:24,160 --> 00:16:28,160
to caster 1 decrypt cs dot 3 to k star 3

363
00:16:28,160 --> 00:16:29,839
etc

364
00:16:29,839 --> 00:16:31,440
in other words

365
00:16:31,440 --> 00:16:33,920
s k star is chosen from the equivalence

366
00:16:33,920 --> 00:16:37,279
class where the real secret key sql

367
00:16:37,279 --> 00:16:39,120
start belongs to

368
00:16:39,120 --> 00:16:41,600
and the equivalence relation is defined

369
00:16:41,600 --> 00:16:45,279
bit by c star one c star three

370
00:16:45,279 --> 00:16:47,360
to cs dot q

371
00:16:47,360 --> 00:16:52,320
or x z minus c star 2.

372
00:16:52,639 --> 00:16:57,040
now we analyze a star's advantage

373
00:16:57,040 --> 00:17:00,800
we know that s k star chosen by a star

374
00:17:00,800 --> 00:17:03,360
and the real secret key s k star are in

375
00:17:03,360 --> 00:17:06,640
the same equivalence class defined by x

376
00:17:06,640 --> 00:17:09,359
set minus c i star 2.

377
00:17:09,359 --> 00:17:12,559
if the equivalence class defined by x z

378
00:17:12,559 --> 00:17:15,439
minus c i star 2 is the same as the

379
00:17:15,439 --> 00:17:18,959
equivalence class defined by x then s k

380
00:17:18,959 --> 00:17:21,760
star and s k i star will also be in the

381
00:17:21,760 --> 00:17:25,520
same equivalence class defined by x

382
00:17:25,520 --> 00:17:28,559
this means that using s k star or using

383
00:17:28,559 --> 00:17:30,880
s k i star to decrypt

384
00:17:30,880 --> 00:17:35,280
c dot 2 would lead to a same result

385
00:17:35,280 --> 00:17:38,559
so in this case a star using sk

386
00:17:38,559 --> 00:17:41,360
sk star can successfully tell whether

387
00:17:41,360 --> 00:17:42,720
the challenge t

388
00:17:42,720 --> 00:17:45,600
is the real key encapsulated in ci star

389
00:17:45,600 --> 00:17:47,679
2 or random key

390
00:17:47,679 --> 00:17:50,240
thus a wings

391
00:17:50,240 --> 00:17:53,120
therefore a star's advantage is lower

392
00:17:53,120 --> 00:17:55,440
bounded by the probability that

393
00:17:55,440 --> 00:17:56,240
x

394
00:17:56,240 --> 00:17:59,360
z minus c star 2 and x define the same

395
00:17:59,360 --> 00:18:01,120
equivalence relation

396
00:18:01,120 --> 00:18:04,240
where ci star 2 is uniformly chosen from

397
00:18:04,240 --> 00:18:05,520
x

398
00:18:05,520 --> 00:18:08,320
then by our chroma this is lower bounded

399
00:18:08,320 --> 00:18:12,160
by 1 minus k's rank over q

400
00:18:12,160 --> 00:18:14,480
this is our construction of a star and

401
00:18:14,480 --> 00:18:17,200
its advantage

402
00:18:17,200 --> 00:18:20,160
in step 2 we show our construction of

403
00:18:20,160 --> 00:18:22,559
the mental reduction algorithm b

404
00:18:22,559 --> 00:18:25,120
which emulates the interaction between r

405
00:18:25,120 --> 00:18:29,280
and a star in an efficient way first

406
00:18:29,280 --> 00:18:31,919
b receives the public keys of all users

407
00:18:31,919 --> 00:18:34,480
from r

408
00:18:34,480 --> 00:18:37,280
then b proceeds exactly the same as a

409
00:18:37,280 --> 00:18:38,160
star

410
00:18:38,160 --> 00:18:41,440
b issues q in cap queries per user and

411
00:18:41,440 --> 00:18:44,960
receive cij from r

412
00:18:44,960 --> 00:18:47,919
and for each user b issues q minus one

413
00:18:47,919 --> 00:18:50,720
key review queries and receives the keys

414
00:18:50,720 --> 00:18:53,919
kij encapsulated in cij

415
00:18:53,919 --> 00:18:56,559
again the indices of the unreviewed keys

416
00:18:56,559 --> 00:18:59,840
are uniformly chosen

417
00:18:59,919 --> 00:19:03,280
then b also crops all part 1 users and

418
00:19:03,280 --> 00:19:05,919
obtains their secret keys ski

419
00:19:05,919 --> 00:19:08,160
with the secret keys ski

420
00:19:08,160 --> 00:19:11,600
reviewed encapsulated keys kij

421
00:19:11,600 --> 00:19:14,720
and ciphertest cij b can also check

422
00:19:14,720 --> 00:19:17,200
whether kij either the capsulation of

423
00:19:17,200 --> 00:19:20,640
cij under ski for all reviewed keys and

424
00:19:20,640 --> 00:19:22,720
all crafted users

425
00:19:22,720 --> 00:19:25,600
bigger bots if the check feels

426
00:19:25,600 --> 00:19:28,559
so far b perceives exactly the same as a

427
00:19:28,559 --> 00:19:30,960
star since this part of a star is

428
00:19:30,960 --> 00:19:33,200
efficient

429
00:19:33,200 --> 00:19:35,600
finally we will ask to test the

430
00:19:35,600 --> 00:19:38,799
unreviewed key of the uncrafted user

431
00:19:38,799 --> 00:19:41,280
b will receive a challenge t which is

432
00:19:41,280 --> 00:19:44,720
either the real key encapsulated in cs.2

433
00:19:44,720 --> 00:19:46,559
or a random key

434
00:19:46,559 --> 00:19:48,799
he wants to distinguish

435
00:19:48,799 --> 00:19:51,120
which case it is

436
00:19:51,120 --> 00:19:54,240
however he cannot emulate a star since

437
00:19:54,240 --> 00:19:56,960
esta uses brute force to find a secret

438
00:19:56,960 --> 00:20:00,080
key sk star

439
00:20:00,320 --> 00:20:02,720
alternatively b will resort to the

440
00:20:02,720 --> 00:20:05,039
efficient rewinding to find a secret key

441
00:20:05,039 --> 00:20:06,559
of user i star

442
00:20:06,559 --> 00:20:09,360
it will rewind the corruption procedure

443
00:20:09,360 --> 00:20:11,360
a minus one times

444
00:20:11,360 --> 00:20:14,080
in the first rewind we will craft all

445
00:20:14,080 --> 00:20:16,320
user spots the first user

446
00:20:16,320 --> 00:20:18,640
in the second rewind we will craft all

447
00:20:18,640 --> 00:20:22,159
users but the second user etc

448
00:20:22,159 --> 00:20:25,200
so through rewind we will crop user i

449
00:20:25,200 --> 00:20:28,159
star and receive the secret key ski star

450
00:20:28,159 --> 00:20:29,360
from r

451
00:20:29,360 --> 00:20:32,720
we note that this ski style is output by

452
00:20:32,720 --> 00:20:36,240
r so it may not be the real secret key

453
00:20:36,240 --> 00:20:37,840
of user i star

454
00:20:37,840 --> 00:20:42,720
but this ski star also decrypts csr1 to

455
00:20:42,720 --> 00:20:44,640
ki star one

456
00:20:44,640 --> 00:20:48,240
decrypts csda3 to cast ks.3

457
00:20:48,240 --> 00:20:52,159
and decrypt csrq to cast.q since b will

458
00:20:52,159 --> 00:20:54,799
check this in each rewind

459
00:20:54,799 --> 00:20:58,000
this means that that this sks star

460
00:20:58,000 --> 00:21:00,559
returned by r also belongs to the same

461
00:21:00,559 --> 00:21:03,120
equivalence class as the sk star chosen

462
00:21:03,120 --> 00:21:05,600
by a

463
00:21:06,640 --> 00:21:09,200
now we analyze the probability delta

464
00:21:09,200 --> 00:21:11,840
that b does not emulate a star and r

465
00:21:11,840 --> 00:21:13,360
perfectly

466
00:21:13,360 --> 00:21:16,159
we know that the sk star chosen by a

467
00:21:16,159 --> 00:21:20,480
star and the sk i star used by b

468
00:21:20,480 --> 00:21:22,400
returned by r are in the same

469
00:21:22,400 --> 00:21:26,240
equivalence class defined by x z minus c

470
00:21:26,240 --> 00:21:27,600
i star 2.

471
00:21:27,600 --> 00:21:30,400
if the equivalence class defined by x z

472
00:21:30,400 --> 00:21:33,200
minus c i star 2 is the same as the

473
00:21:33,200 --> 00:21:35,679
equivalence class defined by x

474
00:21:35,679 --> 00:21:38,960
then s k star and s k i star will also

475
00:21:38,960 --> 00:21:41,440
be in the same equivalence class defined

476
00:21:41,440 --> 00:21:42,880
by x

477
00:21:42,880 --> 00:21:45,919
this means that using sk star or using

478
00:21:45,919 --> 00:21:49,440
ski star to decap cs.2 would lead to a

479
00:21:49,440 --> 00:21:52,799
same result so in this case b perfectly

480
00:21:52,799 --> 00:21:54,960
emigrates a star

481
00:21:54,960 --> 00:21:57,760
overall b might emulate a star

482
00:21:57,760 --> 00:22:00,480
imperfectly if one of the two band

483
00:22:00,480 --> 00:22:02,080
events occur

484
00:22:02,080 --> 00:22:05,360
the first bad event is that b fields 2

485
00:22:05,360 --> 00:22:07,600
gets ski star from r

486
00:22:07,600 --> 00:22:09,360
during the rewinds

487
00:22:09,360 --> 00:22:11,280
which may happen with probability at

488
00:22:11,280 --> 00:22:13,600
most one over n

489
00:22:13,600 --> 00:22:16,240
the second bad event is that

490
00:22:16,240 --> 00:22:19,440
x z minus c i star 2 does not define the

491
00:22:19,440 --> 00:22:23,120
same equivalence relation as x by our

492
00:22:23,120 --> 00:22:25,440
gamma this can happen with probability

493
00:22:25,440 --> 00:22:26,480
at most

494
00:22:26,480 --> 00:22:28,880
kemp's rank over q

495
00:22:28,880 --> 00:22:31,520
so the probability delta that b

496
00:22:31,520 --> 00:22:34,640
simulation is imperfect is bounded by

497
00:22:34,640 --> 00:22:35,919
one over n

498
00:22:35,919 --> 00:22:38,720
plus kim's rank over q

499
00:22:38,720 --> 00:22:41,120
this finishes our construction of mental

500
00:22:41,120 --> 00:22:42,880
reduction b

501
00:22:42,880 --> 00:22:45,120
in step three we can establish our

502
00:22:45,120 --> 00:22:47,280
impossibility results under tetris

503
00:22:47,280 --> 00:22:49,840
enhanced secure cam

504
00:22:49,840 --> 00:22:53,039
the security loss l is lower bounded by

505
00:22:53,039 --> 00:22:56,400
epsilon a star over delta

506
00:22:56,400 --> 00:22:58,960
if kem's rank is a polynomial then we

507
00:22:58,960 --> 00:23:01,039
can always set q

508
00:23:01,039 --> 00:23:03,760
equals n times polynomial

509
00:23:03,760 --> 00:23:05,919
so that kemp's rank over q

510
00:23:05,919 --> 00:23:08,880
is no more than one over n

511
00:23:08,880 --> 00:23:11,840
consequently l is lower bounded by big

512
00:23:11,840 --> 00:23:13,919
omega n

513
00:23:13,919 --> 00:23:17,200
this suggests that as long as cam has a

514
00:23:17,200 --> 00:23:20,400
polynomial rank then it is impossible to

515
00:23:20,400 --> 00:23:23,200
achieve a tight enhanced security based

516
00:23:23,200 --> 00:23:25,520
on non-interactive assumptions

517
00:23:25,520 --> 00:23:28,080
and the security loss is at least linear

518
00:23:28,080 --> 00:23:31,039
in the burden of users

519
00:23:31,039 --> 00:23:33,600
then we apply our impossibility results

520
00:23:33,600 --> 00:23:36,240
to many well-known camps by showing that

521
00:23:36,240 --> 00:23:39,039
their rank is polynomially bonded

522
00:23:39,039 --> 00:23:41,760
for example for the crime ship cpa

523
00:23:41,760 --> 00:23:43,279
secure cam

524
00:23:43,279 --> 00:23:45,840
with two cypher tests we can partition

525
00:23:45,840 --> 00:23:48,799
the secret key space completely

526
00:23:48,799 --> 00:23:51,520
so the largest independent set consists

527
00:23:51,520 --> 00:23:54,640
of only two separate tests and the rank

528
00:23:54,640 --> 00:23:59,120
of the gram troop camp is 2.

529
00:23:59,120 --> 00:24:01,279
in the full version of our paper we

530
00:24:01,279 --> 00:24:03,919
analyze more cam schemes including

531
00:24:03,919 --> 00:24:07,360
elgama cca secure clamshoop crossover

532
00:24:07,360 --> 00:24:08,559
desk mate

533
00:24:08,559 --> 00:24:11,760
gay hoff hands kilts wii

534
00:24:11,760 --> 00:24:13,760
han

535
00:24:13,760 --> 00:24:15,600
and the now young double encryption

536
00:24:15,600 --> 00:24:17,120
paradigm

537
00:24:17,120 --> 00:24:19,760
we show that all of these cam schemes

538
00:24:19,760 --> 00:24:22,000
have a constant or a polynomially

539
00:24:22,000 --> 00:24:24,880
bounded rank therefore by applying our

540
00:24:24,880 --> 00:24:27,600
impossibility results it is impossible

541
00:24:27,600 --> 00:24:30,080
to achieve tight enhanced security for

542
00:24:30,080 --> 00:24:32,000
these cam schemes based on

543
00:24:32,000 --> 00:24:34,159
non-interactive assumptions

544
00:24:34,159 --> 00:24:36,320
and the enhanced security of these

545
00:24:36,320 --> 00:24:38,640
schemes inherently suffer from a

546
00:24:38,640 --> 00:24:41,360
security loss factor at least inner in

547
00:24:41,360 --> 00:24:43,919
the number end of users

548
00:24:43,919 --> 00:24:46,159
we also show that the linear security

549
00:24:46,159 --> 00:24:49,279
loss on is achievable by giving two

550
00:24:49,279 --> 00:24:50,559
reductions

551
00:24:50,559 --> 00:24:52,000
for example

552
00:24:52,000 --> 00:24:55,039
it implies that the l gamma cam has

553
00:24:55,039 --> 00:24:58,159
security loss factor on for enhanced cpa

554
00:24:58,159 --> 00:24:59,520
security

555
00:24:59,520 --> 00:25:02,080
and the cam proposed by offense and

556
00:25:02,080 --> 00:25:05,600
jager has security was factor owen for

557
00:25:05,600 --> 00:25:09,039
enhanced cca security

558
00:25:09,039 --> 00:25:11,200
this together with our impossibility

559
00:25:11,200 --> 00:25:13,600
results show that for camps with

560
00:25:13,600 --> 00:25:15,840
polynomial bonded rank

561
00:25:15,840 --> 00:25:17,840
the linear security cost factor for

562
00:25:17,840 --> 00:25:21,120
enhanced security is optimal

563
00:25:21,120 --> 00:25:23,600
let me now conclude the talk and sum up

564
00:25:23,600 --> 00:25:25,520
our contributions

565
00:25:25,520 --> 00:25:27,440
we define the realistic enhanced

566
00:25:27,440 --> 00:25:30,240
security models for cam which considers

567
00:25:30,240 --> 00:25:33,039
adaptive user corruptions and adaptive

568
00:25:33,039 --> 00:25:35,840
encapsulated key reviews in smart user

569
00:25:35,840 --> 00:25:38,080
and multi-change setting

570
00:25:38,080 --> 00:25:40,480
we developed a new technical tool called

571
00:25:40,480 --> 00:25:43,039
cams rank to identify a class of chem

572
00:25:43,039 --> 00:25:45,600
schemes for which impossibility of tight

573
00:25:45,600 --> 00:25:47,679
reduction holds

574
00:25:47,679 --> 00:25:50,720
we prove that as long as the rank of a

575
00:25:50,720 --> 00:25:53,200
camp scheme is polynomially bounded the

576
00:25:53,200 --> 00:25:55,360
incurred security loss factor is at

577
00:25:55,360 --> 00:25:57,760
least linear in the number end of users

578
00:25:57,760 --> 00:25:59,840
when reducing to early non-interactive

579
00:25:59,840 --> 00:26:01,440
assumptions

580
00:26:01,440 --> 00:26:03,919
our impossibility results rule out the

581
00:26:03,919 --> 00:26:05,600
tight enhanced security of many

582
00:26:05,600 --> 00:26:07,360
well-known camps

583
00:26:07,360 --> 00:26:10,240
including clamshoop crossover decimate

584
00:26:10,240 --> 00:26:12,400
since the ranks of their camp are

585
00:26:12,400 --> 00:26:14,480
polynomially bounded

586
00:26:14,480 --> 00:26:17,200
finally we show the linear security loss

587
00:26:17,200 --> 00:26:20,000
is achievable and optimal for camps with

588
00:26:20,000 --> 00:26:22,960
polynomially bonded rank

589
00:26:22,960 --> 00:26:24,799
for more details please check out our

590
00:26:24,799 --> 00:26:27,440
paper and imprint that's all

591
00:26:27,440 --> 00:26:31,159
thank you for your listening

