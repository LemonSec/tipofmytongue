1
00:00:01,040 --> 00:00:02,399
hi everyone

2
00:00:02,399 --> 00:00:04,480
my name is alice balimari and i'm going

3
00:00:04,480 --> 00:00:06,399
to present you a joint work with damian

4
00:00:06,399 --> 00:00:08,800
steli on the harness of intro

5
00:00:08,800 --> 00:00:11,440
so let me start with a bit of context um

6
00:00:11,440 --> 00:00:13,200
so if you're not familiar with them

7
00:00:13,200 --> 00:00:14,880
through let me just shrink up a few

8
00:00:14,880 --> 00:00:16,960
information on it so entry is an

9
00:00:16,960 --> 00:00:18,640
algorithmic problem that is based on

10
00:00:18,640 --> 00:00:19,920
vertices

11
00:00:19,920 --> 00:00:21,920
it's supposed to be pos quantum meaning

12
00:00:21,920 --> 00:00:24,240
that we don't know how to break it even

13
00:00:24,240 --> 00:00:26,560
if you have a quantum computer

14
00:00:26,560 --> 00:00:29,199
it uses structural lattices which means

15
00:00:29,199 --> 00:00:31,519
that it's quite efficient

16
00:00:31,519 --> 00:00:34,239
and it's been used a lot already in many

17
00:00:34,239 --> 00:00:36,000
different cryptographic constructions so

18
00:00:36,000 --> 00:00:38,079
as an example you can cite like three of

19
00:00:38,079 --> 00:00:40,160
the um

20
00:00:40,160 --> 00:00:41,760
of the submissions that made it to the

21
00:00:41,760 --> 00:00:43,760
round three of

22
00:00:43,760 --> 00:00:45,600
the nispas quantum standardization

23
00:00:45,600 --> 00:00:47,360
process and that are using and through

24
00:00:47,360 --> 00:00:49,760
so two encryption scheme and one

25
00:00:49,760 --> 00:00:51,920
signature scheme

26
00:00:51,920 --> 00:00:54,239
and it's also one of the characteristic

27
00:00:54,239 --> 00:00:56,000
offense that it's quite old for

28
00:00:56,000 --> 00:00:57,840
latis-based cryptographic assumption so

29
00:00:57,840 --> 00:01:00,399
it's been already studied

30
00:01:00,399 --> 00:01:02,160
quite a lot like it's been around for

31
00:01:02,160 --> 00:01:04,239
more than 20 years

32
00:01:04,239 --> 00:01:06,159
and there is one aspect of

33
00:01:06,159 --> 00:01:08,799
intro which has not been said so much so

34
00:01:08,799 --> 00:01:10,799
far and which is the topic of our

35
00:01:10,799 --> 00:01:14,720
article it's the relations between

36
00:01:14,720 --> 00:01:16,960
the hardness of different variants of

37
00:01:16,960 --> 00:01:18,880
and through and between and through and

38
00:01:18,880 --> 00:01:21,119
other algorithmic problems so this is

39
00:01:21,119 --> 00:01:23,280
what we call reduction here on my

40
00:01:23,280 --> 00:01:24,479
picture

41
00:01:24,479 --> 00:01:26,960
narrow means a reduction so it means

42
00:01:26,960 --> 00:01:28,880
here for instance this was the

43
00:01:28,880 --> 00:01:32,240
the state of the art before our article

44
00:01:32,240 --> 00:01:34,720
and it says that you can

45
00:01:34,720 --> 00:01:37,119
reduce decision and true to search and

46
00:01:37,119 --> 00:01:38,159
true

47
00:01:38,159 --> 00:01:40,159
which means in other words that if you

48
00:01:40,159 --> 00:01:42,079
can solve search and true then you can

49
00:01:42,079 --> 00:01:44,479
solve decision intro

50
00:01:44,479 --> 00:01:46,320
so it's not a very surprising production

51
00:01:46,320 --> 00:01:48,560
it's quite immediate because so i'm

52
00:01:48,560 --> 00:01:50,159
going to define more formally what is

53
00:01:50,159 --> 00:01:52,799
search and decision intro but the idea

54
00:01:52,799 --> 00:01:54,399
of search and true is to recover some

55
00:01:54,399 --> 00:01:57,520
secret information whereas the

56
00:01:57,520 --> 00:01:59,280
problem asked by decision entry is just

57
00:01:59,280 --> 00:02:01,600
to distinguish if something is an entry

58
00:02:01,600 --> 00:02:03,680
instance or uniform so if you can

59
00:02:03,680 --> 00:02:05,759
recover the secret information related

60
00:02:05,759 --> 00:02:08,318
to and true then you can say oh it's an

61
00:02:08,318 --> 00:02:10,720
entry instance but if you don't get any

62
00:02:10,720 --> 00:02:12,160
secret then you say it's going to be

63
00:02:12,160 --> 00:02:13,760
uniform so if you can solve search

64
00:02:13,760 --> 00:02:15,520
usually you can solve decision variants

65
00:02:15,520 --> 00:02:18,239
of the problems

66
00:02:18,239 --> 00:02:20,640
so this was the only reduction that was

67
00:02:20,640 --> 00:02:22,720
known related to and true

68
00:02:22,720 --> 00:02:25,280
and what we do in this work is we prove

69
00:02:25,280 --> 00:02:27,840
a bunch of other reductions

70
00:02:27,840 --> 00:02:30,480
so let me comment a bit on this picture

71
00:02:30,480 --> 00:02:33,360
so this is what we prove we introduce

72
00:02:33,360 --> 00:02:35,360
two search variants of and true i'm

73
00:02:35,360 --> 00:02:37,120
going to define them

74
00:02:37,120 --> 00:02:39,360
but um

75
00:02:39,360 --> 00:02:41,280
we realize that there are two quite

76
00:02:41,280 --> 00:02:42,959
natural ways of defining the third

77
00:02:42,959 --> 00:02:45,200
variant of and true and for the moment

78
00:02:45,200 --> 00:02:47,599
we don't know if both search variants

79
00:02:47,599 --> 00:02:49,120
are equivalent

80
00:02:49,120 --> 00:02:51,360
so we have one search variant here the

81
00:02:51,360 --> 00:02:53,040
first one which we can prove is

82
00:02:53,040 --> 00:02:54,959
equivalent to the decision and variant

83
00:02:54,959 --> 00:02:56,400
of intro

84
00:02:56,400 --> 00:02:58,480
and we have the second search variant

85
00:02:58,480 --> 00:03:00,720
which we can prove is at least as hard

86
00:03:00,720 --> 00:03:02,480
as some worst case problem on ideal

87
00:03:02,480 --> 00:03:03,599
lattices

88
00:03:03,599 --> 00:03:05,680
so ideal lattices are just like this

89
00:03:05,680 --> 00:03:08,720
with some extra structure

90
00:03:08,720 --> 00:03:11,599
and so yeah so the picture is not

91
00:03:11,599 --> 00:03:15,200
completely um complete yet because what

92
00:03:15,200 --> 00:03:18,239
we really would like for crypto is to

93
00:03:18,239 --> 00:03:20,400
have some guarantees of the hardness of

94
00:03:20,400 --> 00:03:22,080
the decision and entry protein because

95
00:03:22,080 --> 00:03:23,920
because this is the one that we usually

96
00:03:23,920 --> 00:03:26,319
use to construct reproductive primitive

97
00:03:26,319 --> 00:03:29,280
and so we would like to have

98
00:03:29,280 --> 00:03:31,360
a guarantee of its hardness based on

99
00:03:31,360 --> 00:03:33,360
some worst case problems and ideal

100
00:03:33,360 --> 00:03:35,120
lattices for instance and you can see

101
00:03:35,120 --> 00:03:37,360
that for the moment we don't have a

102
00:03:37,360 --> 00:03:39,760
reduction from worst case that's a frame

103
00:03:39,760 --> 00:03:41,599
to decision and true

104
00:03:41,599 --> 00:03:45,200
but this is already a beginning

105
00:03:45,200 --> 00:03:48,319
okay so now let me go into more details

106
00:03:48,319 --> 00:03:51,519
about this result and i'm going to start

107
00:03:51,519 --> 00:03:53,920
first by defining and through and the

108
00:03:53,920 --> 00:03:55,519
three variants of entry i've told you

109
00:03:55,519 --> 00:03:57,120
about like the decisional variant and

110
00:03:57,120 --> 00:03:59,519
the two search variant

111
00:03:59,519 --> 00:04:02,159
so first of all i'm going to use

112
00:04:02,159 --> 00:04:04,959
number shields and ring of integers so

113
00:04:04,959 --> 00:04:07,280
i'm going to fix for this talk a

114
00:04:07,280 --> 00:04:09,599
cyclotemic number field of power of 2

115
00:04:09,599 --> 00:04:10,799
but

116
00:04:10,799 --> 00:04:13,360
you can take any

117
00:04:13,360 --> 00:04:17,040
any nice number field i mean the um

118
00:04:17,040 --> 00:04:18,478
reductions i'm going to show you the

119
00:04:18,478 --> 00:04:20,238
parameters are going to depend on some

120
00:04:20,238 --> 00:04:21,839
quantities of the number fields but if

121
00:04:21,839 --> 00:04:24,479
the discriminant is not too big and if

122
00:04:24,479 --> 00:04:26,000
you know a good basis of the ring of

123
00:04:26,000 --> 00:04:27,440
integer everything is going to be the

124
00:04:27,440 --> 00:04:28,560
same

125
00:04:28,560 --> 00:04:30,400
and if you are not familiar with number

126
00:04:30,400 --> 00:04:32,320
field and ring of integers you can just

127
00:04:32,320 --> 00:04:35,199
imagine for most of the talk that k is

128
00:04:35,199 --> 00:04:38,160
just the field of rational number and r

129
00:04:38,160 --> 00:04:41,280
is just a ring of integer numbers

130
00:04:41,280 --> 00:04:42,720
and

131
00:04:42,720 --> 00:04:46,240
and rq is just z mod qd

132
00:04:46,240 --> 00:04:48,880
so um i'm going to say when this is

133
00:04:48,880 --> 00:04:50,479
important that we are in the field and

134
00:04:50,479 --> 00:04:52,400
not just over the rationales and other

135
00:04:52,400 --> 00:04:54,400
integers but for most of the talk it's

136
00:04:54,400 --> 00:04:57,360
not important

137
00:04:57,360 --> 00:04:59,759
so let me start by defining what is an

138
00:04:59,759 --> 00:05:01,360
nfl instance

139
00:05:01,360 --> 00:05:03,360
so an unfor instance essentially is an

140
00:05:03,360 --> 00:05:06,720
element that lives in our modulo queue

141
00:05:06,720 --> 00:05:09,680
and which can be written as so it's i'm

142
00:05:09,680 --> 00:05:11,440
going to write it

143
00:05:11,440 --> 00:05:14,320
h and it's going to be written as f over

144
00:05:14,320 --> 00:05:18,240
g mod q with some small f and g

145
00:05:18,240 --> 00:05:20,560
so i'm going to parameterize my entry

146
00:05:20,560 --> 00:05:23,039
instance by two parameters q which is a

147
00:05:23,039 --> 00:05:26,000
modulus and gamma which measures how

148
00:05:26,000 --> 00:05:28,479
small f and g are

149
00:05:28,479 --> 00:05:29,759
so this

150
00:05:29,759 --> 00:05:32,160
smallness measurement is going to take

151
00:05:32,160 --> 00:05:34,479
this form so i'm going to assume that

152
00:05:34,479 --> 00:05:37,120
the euclidean norm of f and g

153
00:05:37,120 --> 00:05:39,919
so when f and g are polynomials you just

154
00:05:39,919 --> 00:05:41,360
take

155
00:05:41,360 --> 00:05:43,199
the euclidean norm of the vector of the

156
00:05:43,199 --> 00:05:45,520
coefficients of the polynomial and so

157
00:05:45,520 --> 00:05:48,160
i'm going to assume i mean in a gamma q

158
00:05:48,160 --> 00:05:50,080
instance these quantities are going to

159
00:05:50,080 --> 00:05:52,720
be bounded by square root q over gamma

160
00:05:52,720 --> 00:05:54,479
so the

161
00:05:54,479 --> 00:05:57,600
larger gamma the smaller f and g and

162
00:05:57,600 --> 00:05:59,520
gamma i'm going to call it the gap

163
00:05:59,520 --> 00:06:01,919
because we're going to see later on that

164
00:06:01,919 --> 00:06:04,720
if you take h uniform mod q you expect

165
00:06:04,720 --> 00:06:07,600
to be able to be too sorry you expect to

166
00:06:07,600 --> 00:06:10,479
be able to write it as f over g with f

167
00:06:10,479 --> 00:06:13,280
and g of the order of square root q

168
00:06:13,280 --> 00:06:16,080
so if you take gamma is one here

169
00:06:16,080 --> 00:06:17,520
essentially every

170
00:06:17,520 --> 00:06:20,160
h is an entropy instance but when you

171
00:06:20,160 --> 00:06:22,400
increase gamma then the number of entry

172
00:06:22,400 --> 00:06:24,479
of gamma and for instances decreases

173
00:06:24,479 --> 00:06:27,919
because you impose stronger and stronger

174
00:06:27,919 --> 00:06:31,759
conditions on the size of f and g

175
00:06:31,759 --> 00:06:35,280
and f and g is a small f and g that

176
00:06:35,280 --> 00:06:37,360
can be used to write

177
00:06:37,360 --> 00:06:39,600
h i'm going to call that an entry

178
00:06:39,600 --> 00:06:43,120
trapdoor a trapdoor for age

179
00:06:43,120 --> 00:06:45,919
so some remark that is important here

180
00:06:45,919 --> 00:06:48,560
is that f and g are not unique you can

181
00:06:48,560 --> 00:06:51,120
have multiple ways of writing h as f

182
00:06:51,120 --> 00:06:53,120
over g and f prime over t

183
00:06:53,120 --> 00:06:55,039
but they are

184
00:06:55,039 --> 00:06:56,639
somehow unique

185
00:06:56,639 --> 00:06:59,680
in the sense that the span of the vector

186
00:06:59,680 --> 00:07:03,360
f g is unique so say differently if i

187
00:07:03,360 --> 00:07:05,680
have two trapdoors f g and f prime g

188
00:07:05,680 --> 00:07:08,639
prime then f prime is alpha f and g

189
00:07:08,639 --> 00:07:11,199
prime is alpha g for some alpha in the

190
00:07:11,199 --> 00:07:12,160
field

191
00:07:12,160 --> 00:07:14,840
or another way to write it

192
00:07:14,840 --> 00:07:16,800
again is

193
00:07:16,800 --> 00:07:19,360
f over g is equal to f prime over g

194
00:07:19,360 --> 00:07:21,520
prime and here i'm performing the

195
00:07:21,520 --> 00:07:24,240
division over the field k not modulo q

196
00:07:24,240 --> 00:07:27,039
so this is some quantity that is unique

197
00:07:27,039 --> 00:07:29,520
and which i'm going to call h k so it's

198
00:07:29,520 --> 00:07:33,440
kind of a lift of h over the rationales

199
00:07:33,440 --> 00:07:35,680
okay so now that i've defined and for

200
00:07:35,680 --> 00:07:37,360
instances i can define the different

201
00:07:37,360 --> 00:07:39,680
variants of n through problem so the

202
00:07:39,680 --> 00:07:41,680
decisional variant is

203
00:07:41,680 --> 00:07:43,280
what you would expect for a decision and

204
00:07:43,280 --> 00:07:45,840
variant of a problem you are given an

205
00:07:45,840 --> 00:07:48,960
element h which is either uniform modulo

206
00:07:48,960 --> 00:07:49,759
q

207
00:07:49,759 --> 00:07:51,840
which is sampled from some distribution

208
00:07:51,840 --> 00:07:54,400
over some entry instances and you are

209
00:07:54,400 --> 00:07:56,400
asked to distinguish if h is an entry

210
00:07:56,400 --> 00:07:58,639
instance or if h is uniform

211
00:07:58,639 --> 00:08:00,479
so that's very natural and i'm not going

212
00:08:00,479 --> 00:08:03,440
to spend too much time

213
00:08:03,440 --> 00:08:07,520
the search problem is a bit more tricky

214
00:08:07,520 --> 00:08:09,680
so probably the most natural variant of

215
00:08:09,680 --> 00:08:11,199
the search problem you would want to

216
00:08:11,199 --> 00:08:12,960
define if you are asked to define your

217
00:08:12,960 --> 00:08:15,039
search variant of intro would be this

218
00:08:15,039 --> 00:08:18,000
variant which we call and vector problem

219
00:08:18,000 --> 00:08:20,240
which is i give you some h which is an

220
00:08:20,240 --> 00:08:22,400
intro instance so h can be written as f

221
00:08:22,400 --> 00:08:25,440
over g mod q for some small f and g and

222
00:08:25,440 --> 00:08:27,599
i ask you to recover

223
00:08:27,599 --> 00:08:30,080
a trap door so recover another not

224
00:08:30,080 --> 00:08:32,240
necessarily the same but another pair of

225
00:08:32,240 --> 00:08:36,240
f g such that f and g are small and h is

226
00:08:36,240 --> 00:08:37,440
f over h

227
00:08:37,440 --> 00:08:40,479
so that's a natural

228
00:08:40,479 --> 00:08:42,958
search variant

229
00:08:42,958 --> 00:08:44,959
and yes i'm going to comment on the name

230
00:08:44,959 --> 00:08:46,720
and for vector in a few seconds but let

231
00:08:46,720 --> 00:08:49,440
me just define the other variant which i

232
00:08:49,440 --> 00:08:52,160
also believe makes a lot of sense

233
00:08:52,160 --> 00:08:54,480
so the problem of the entry vector

234
00:08:54,480 --> 00:08:56,640
variant is that so as i've said you are

235
00:08:56,640 --> 00:08:58,720
just asked to recover one trap there but

236
00:08:58,720 --> 00:09:01,200
it's not unique what you have to recover

237
00:09:01,200 --> 00:09:03,360
so you could also say okay maybe i don't

238
00:09:03,360 --> 00:09:06,560
really care about recovering fng small i

239
00:09:06,560 --> 00:09:09,600
just care about recovering the lift of h

240
00:09:09,600 --> 00:09:12,480
in k like f divided by g in k what i

241
00:09:12,480 --> 00:09:16,480
called h k on the previous slide

242
00:09:16,480 --> 00:09:18,800
and the good point of this variant which

243
00:09:18,800 --> 00:09:21,200
i'm going to call android module

244
00:09:21,200 --> 00:09:24,800
is that it's um

245
00:09:24,880 --> 00:09:26,480
that's sorry that's the solution of this

246
00:09:26,480 --> 00:09:31,440
frame is unique so there is a unique hk

247
00:09:32,000 --> 00:09:34,480
so said differently just to be sure

248
00:09:34,480 --> 00:09:37,120
we're on the same page i just want not

249
00:09:37,120 --> 00:09:39,200
necessarily to recover a small problem

250
00:09:39,200 --> 00:09:41,519
but any multiple of disruptors so alpha

251
00:09:41,519 --> 00:09:43,920
f alpha g for any alpha which can be

252
00:09:43,920 --> 00:09:45,279
very large

253
00:09:45,279 --> 00:09:47,440
i'm happy with that anything in the span

254
00:09:47,440 --> 00:09:51,399
of the vector f g

255
00:09:52,640 --> 00:09:55,680
so that's all for the two uh

256
00:09:55,680 --> 00:09:57,760
search and through problems and the

257
00:09:57,760 --> 00:09:59,760
decision i learned from problem and i

258
00:09:59,760 --> 00:10:01,839
just wanted to comment a bit

259
00:10:01,839 --> 00:10:04,240
on um i've told you at the beginning

260
00:10:04,240 --> 00:10:05,360
that

261
00:10:05,360 --> 00:10:06,480
and true

262
00:10:06,480 --> 00:10:08,720
is a lattice problem but from the

263
00:10:08,720 --> 00:10:10,720
definition it might not be so clear so

264
00:10:10,720 --> 00:10:12,480
let me just introduce you the the

265
00:10:12,480 --> 00:10:13,519
lattice

266
00:10:13,519 --> 00:10:16,000
um which is behind

267
00:10:16,000 --> 00:10:18,480
behind the entro problems

268
00:10:18,480 --> 00:10:22,640
so this is a module lattice a franc 2 so

269
00:10:22,640 --> 00:10:23,920
if you are not familiar with module

270
00:10:23,920 --> 00:10:25,360
lattices just

271
00:10:25,360 --> 00:10:27,519
take r equals z and then this is just

272
00:10:27,519 --> 00:10:29,680
going to be a lattice of

273
00:10:29,680 --> 00:10:32,480
dimension 2 over the integers otherwise

274
00:10:32,480 --> 00:10:33,920
it's a lattice of dimension two over

275
00:10:33,920 --> 00:10:35,680
some ring r

276
00:10:35,680 --> 00:10:38,560
so this is a basis of the lattice of the

277
00:10:38,560 --> 00:10:40,160
lambda h so which is the lattice

278
00:10:40,160 --> 00:10:42,079
associated to some

279
00:10:42,079 --> 00:10:47,120
element h in the field in the ring r

280
00:10:47,120 --> 00:10:49,279
and so what's the property of this

281
00:10:49,279 --> 00:10:51,279
lattice is that you can also define it

282
00:10:51,279 --> 00:10:54,399
as a pair of all vectors

283
00:10:54,399 --> 00:10:58,720
so gf and not fg but it's okay such that

284
00:10:58,720 --> 00:11:02,640
g times h is f modulo q

285
00:11:02,640 --> 00:11:05,279
so if g is invertible this is exactly h

286
00:11:05,279 --> 00:11:07,920
is equal to f over g mod q so this

287
00:11:07,920 --> 00:11:10,399
lattice contains all

288
00:11:10,399 --> 00:11:14,640
ways to write h as f over g but not

289
00:11:14,640 --> 00:11:16,399
necessarily really small so not

290
00:11:16,399 --> 00:11:18,079
everything in the lattice is a trapdoor

291
00:11:18,079 --> 00:11:20,160
trap there is a small f and g

292
00:11:20,160 --> 00:11:23,519
in the lattice essentially

293
00:11:23,519 --> 00:11:25,200
so let me just give you a bunch of

294
00:11:25,200 --> 00:11:26,800
properties

295
00:11:26,800 --> 00:11:29,279
if you sample h uniformly at random mod

296
00:11:29,279 --> 00:11:31,519
q then you would expect from instance

297
00:11:31,519 --> 00:11:33,600
using the gaussian heuristic that the

298
00:11:33,600 --> 00:11:36,320
shortest vector of this that is bh is

299
00:11:36,320 --> 00:11:38,800
roughly squared q up to some square root

300
00:11:38,800 --> 00:11:40,640
and factor

301
00:11:40,640 --> 00:11:43,760
on the other hand if you take h to be an

302
00:11:43,760 --> 00:11:45,440
n for instance

303
00:11:45,440 --> 00:11:49,040
then you will have a short vector in

304
00:11:49,040 --> 00:11:50,959
this lattice because you know that h can

305
00:11:50,959 --> 00:11:53,120
be written that you get a vector

306
00:11:53,120 --> 00:11:55,680
g f in this lattice with g and f smaller

307
00:11:55,680 --> 00:11:57,760
than square root q over gamma so that

308
00:11:57,760 --> 00:11:59,760
should probably be a square root two

309
00:11:59,760 --> 00:12:01,760
times character gamma here because it's

310
00:12:01,760 --> 00:12:04,399
a vector with two coordinates

311
00:12:04,399 --> 00:12:06,639
um anyway

312
00:12:06,639 --> 00:12:08,839
so you get

313
00:12:08,839 --> 00:12:10,959
um a

314
00:12:10,959 --> 00:12:13,519
very i mean a much shorter vector in the

315
00:12:13,519 --> 00:12:16,000
lattice than what you would expect if h

316
00:12:16,000 --> 00:12:18,160
was uniform and so this is what we call

317
00:12:18,160 --> 00:12:21,120
a unique svp uh instance because you get

318
00:12:21,120 --> 00:12:23,440
something some lambda one much smaller

319
00:12:23,440 --> 00:12:25,519
than expected

320
00:12:25,519 --> 00:12:27,120
especially if gamma is large it's going

321
00:12:27,120 --> 00:12:29,200
to be much smaller

322
00:12:29,200 --> 00:12:32,240
and so if i rephrase my different

323
00:12:32,240 --> 00:12:35,120
entry problems in terms of this lattice

324
00:12:35,120 --> 00:12:37,440
so the decision elemental problem as to

325
00:12:37,440 --> 00:12:39,519
distinguish whether the lattice has a

326
00:12:39,519 --> 00:12:41,920
unique sharp vector or not

327
00:12:41,920 --> 00:12:43,680
so it has to

328
00:12:43,680 --> 00:12:45,680
to guess the value of lambda 1 of the

329
00:12:45,680 --> 00:12:48,959
shortest vector of the lattice

330
00:12:50,000 --> 00:12:52,000
if you look at the n through vector

331
00:12:52,000 --> 00:12:53,760
variant of the problem

332
00:12:53,760 --> 00:12:55,920
the question is can we find a short

333
00:12:55,920 --> 00:12:57,920
vector in the lambda in the lattice

334
00:12:57,920 --> 00:13:00,480
lambda h so which is why we call it

335
00:13:00,480 --> 00:13:02,079
entro vector

336
00:13:02,079 --> 00:13:03,680
and if you look at the n for module

337
00:13:03,680 --> 00:13:06,160
variant we don't want to recover a short

338
00:13:06,160 --> 00:13:08,160
vector but we want to recover

339
00:13:08,160 --> 00:13:09,279
the

340
00:13:09,279 --> 00:13:10,720
um

341
00:13:10,720 --> 00:13:11,440
the

342
00:13:11,440 --> 00:13:14,320
dimension one subspace spanned by a

343
00:13:14,320 --> 00:13:15,920
sharp vector because we know that all

344
00:13:15,920 --> 00:13:17,519
the sharp vectors are going to be on the

345
00:13:17,519 --> 00:13:19,120
same line and we want to recover this

346
00:13:19,120 --> 00:13:22,240
line so if you have a ring this line is

347
00:13:22,240 --> 00:13:24,320
called a rank one module and this is why

348
00:13:24,320 --> 00:13:26,160
we call this valiant and through module

349
00:13:26,160 --> 00:13:27,440
problem

350
00:13:27,440 --> 00:13:29,360
so essentially we want to find

351
00:13:29,360 --> 00:13:31,360
the direction in winds in which sorry

352
00:13:31,360 --> 00:13:34,959
the lattice lambda h is dense

353
00:13:34,959 --> 00:13:38,399
okay so this concludes the definition of

354
00:13:38,399 --> 00:13:40,720
the three variants of n true

355
00:13:40,720 --> 00:13:42,800
and so now i would like to discuss a bit

356
00:13:42,800 --> 00:13:44,720
about what we know about and through

357
00:13:44,720 --> 00:13:47,360
what we knew and what we know

358
00:13:47,360 --> 00:13:48,399
thanks to the

359
00:13:48,399 --> 00:13:51,279
reservatory pro

360
00:13:51,360 --> 00:13:52,320
so

361
00:13:52,320 --> 00:13:53,760
let me

362
00:13:53,760 --> 00:13:56,160
discuss a bit about reductions that were

363
00:13:56,160 --> 00:13:57,920
known about ensure

364
00:13:57,920 --> 00:14:00,240
so we have a few reductions that were

365
00:14:00,240 --> 00:14:02,480
non untrue which i didn't show on the

366
00:14:02,480 --> 00:14:04,480
first picture because it couldn't really

367
00:14:04,480 --> 00:14:06,800
be shown on this one

368
00:14:06,800 --> 00:14:09,279
so we know

369
00:14:09,279 --> 00:14:11,760
that if you sample

370
00:14:11,760 --> 00:14:14,079
f and g from some gaussian distribution

371
00:14:14,079 --> 00:14:16,240
but a large one so it's not the regime

372
00:14:16,240 --> 00:14:17,839
in which we are interested in this work

373
00:14:17,839 --> 00:14:19,600
because in this work we assume that f

374
00:14:19,600 --> 00:14:21,839
and g are smaller than square root q

375
00:14:21,839 --> 00:14:23,440
here you take them from a distribution

376
00:14:23,440 --> 00:14:24,959
which is slightly larger than square

377
00:14:24,959 --> 00:14:26,000
root q

378
00:14:26,000 --> 00:14:27,839
then you can prove at least four

379
00:14:27,839 --> 00:14:30,399
psychothermic fields that f over g is

380
00:14:30,399 --> 00:14:32,880
indistinguishable from uniform modular q

381
00:14:32,880 --> 00:14:34,399
so this means that the decisional

382
00:14:34,399 --> 00:14:38,160
variant of n true is probably hard if

383
00:14:38,160 --> 00:14:40,480
f and g are sufficiently large

384
00:14:40,480 --> 00:14:42,160
which is again not the regime in which

385
00:14:42,160 --> 00:14:44,480
we are interested here because we want a

386
00:14:44,480 --> 00:14:46,639
regime where f and g are smaller than

387
00:14:46,639 --> 00:14:48,639
square root 2 and so enter instances are

388
00:14:48,639 --> 00:14:53,440
sparse among all the elements multi

389
00:14:54,079 --> 00:14:56,240
you also have another reduction

390
00:14:56,240 --> 00:14:57,279
which

391
00:14:57,279 --> 00:15:00,240
shows that decision and true cannot be

392
00:15:00,240 --> 00:15:02,800
harder than ringing the wa

393
00:15:02,800 --> 00:15:05,760
so it's not very uh

394
00:15:05,760 --> 00:15:07,360
interesting for intro because it's an

395
00:15:07,360 --> 00:15:09,519
upper bound on the harness offense but

396
00:15:09,519 --> 00:15:10,800
it's

397
00:15:10,800 --> 00:15:12,560
something already

398
00:15:12,560 --> 00:15:15,360
and um

399
00:15:15,360 --> 00:15:18,560
we we have also attacks so that's

400
00:15:18,560 --> 00:15:20,079
essentially all we knew for the

401
00:15:20,079 --> 00:15:22,800
reductions untrue uh let's just say a

402
00:15:22,800 --> 00:15:24,880
few words about attacks on intro because

403
00:15:24,880 --> 00:15:26,880
that's also important maybe if we cannot

404
00:15:26,880 --> 00:15:28,560
prove reduction that's because we have

405
00:15:28,560 --> 00:15:30,240
attacks

406
00:15:30,240 --> 00:15:32,000
so i'm only going to consider polynomial

407
00:15:32,000 --> 00:15:34,000
time attacks here

408
00:15:34,000 --> 00:15:35,759
so because i'm true is a lattice problem

409
00:15:35,759 --> 00:15:37,279
you can of course run any lattice

410
00:15:37,279 --> 00:15:39,360
reduction algorithm so in polynomial

411
00:15:39,360 --> 00:15:42,160
time you would run ln in order to break

412
00:15:42,160 --> 00:15:44,639
it so this will break and through

413
00:15:44,639 --> 00:15:46,160
the decision and variant of and through

414
00:15:46,160 --> 00:15:48,240
and the module variant of intro

415
00:15:48,240 --> 00:15:50,800
if the gap is large enough so for ln is

416
00:15:50,800 --> 00:15:52,399
going to be if the gap is larger than 2

417
00:15:52,399 --> 00:15:55,600
to the n but in the case of ventrue will

418
00:15:55,600 --> 00:15:57,279
serve some attacks that are specific to

419
00:15:57,279 --> 00:15:58,320
and true

420
00:15:58,320 --> 00:16:01,279
and not to all module lattice problems

421
00:16:01,279 --> 00:16:04,320
or lattice problems

422
00:16:04,320 --> 00:16:06,160
which

423
00:16:06,160 --> 00:16:08,800
reaches which breaks decisional variant

424
00:16:08,800 --> 00:16:11,040
of and true and and from module

425
00:16:11,040 --> 00:16:13,120
for some regime of parameters that are

426
00:16:13,120 --> 00:16:17,040
different from the ones of lnl so

427
00:16:17,040 --> 00:16:19,199
you have a condition here which is maybe

428
00:16:19,199 --> 00:16:20,800
a bit complicated but one example to

429
00:16:20,800 --> 00:16:23,440
keep in mind is if the modulus is 2 to

430
00:16:23,440 --> 00:16:24,720
the square root n

431
00:16:24,720 --> 00:16:26,880
and the gap is roughly the same as

432
00:16:26,880 --> 00:16:29,040
square root q

433
00:16:29,040 --> 00:16:31,120
so meaning that f and g are very small

434
00:16:31,120 --> 00:16:33,199
let's say constant size and the modulus

435
00:16:33,199 --> 00:16:35,360
is 2 square root 10 then you can break

436
00:16:35,360 --> 00:16:37,759
decision island through an entry module

437
00:16:37,759 --> 00:16:39,279
and it's not

438
00:16:39,279 --> 00:16:41,600
i mean if you would use just ll you

439
00:16:41,600 --> 00:16:42,560
wouldn't

440
00:16:42,560 --> 00:16:46,240
break it for these parameters

441
00:16:46,240 --> 00:16:48,800
okay so this is essentially all we know

442
00:16:48,800 --> 00:16:51,120
about attacks and reductions for and

443
00:16:51,120 --> 00:16:52,000
true

444
00:16:52,000 --> 00:16:54,079
and so this is what we prove with a bit

445
00:16:54,079 --> 00:16:55,759
more details

446
00:16:55,759 --> 00:16:56,800
um

447
00:16:56,800 --> 00:16:59,839
so i put the real names of entry

448
00:16:59,839 --> 00:17:01,440
problems now so we proved that

449
00:17:01,440 --> 00:17:03,519
decisional and true variant is

450
00:17:03,519 --> 00:17:06,480
equivalent to the entry module variant

451
00:17:06,480 --> 00:17:09,599
the antra module variant is

452
00:17:09,599 --> 00:17:12,640
no harder than the entro vector variant

453
00:17:12,640 --> 00:17:15,359
and the entro vector variant is at least

454
00:17:15,359 --> 00:17:18,160
as hard as worst case ideology so in

455
00:17:18,160 --> 00:17:20,880
this picture i put in black the

456
00:17:20,880 --> 00:17:22,880
immediate errors

457
00:17:22,880 --> 00:17:24,400
so we have already seen that if you can

458
00:17:24,400 --> 00:17:25,599
solve

459
00:17:25,599 --> 00:17:26,959
some search variants you can sort of

460
00:17:26,959 --> 00:17:29,200
decisional variant and if you can find

461
00:17:29,200 --> 00:17:31,120
the sharp vector you can find

462
00:17:31,120 --> 00:17:33,919
the span of this short vector

463
00:17:33,919 --> 00:17:36,240
so this arrow is a bit maybe less

464
00:17:36,240 --> 00:17:38,160
obvious but it's still very easy to

465
00:17:38,160 --> 00:17:40,400
prove so it means that if you can solve

466
00:17:40,400 --> 00:17:42,880
and through module and you can solve

467
00:17:42,880 --> 00:17:45,200
ideal svp so you can find short vectors

468
00:17:45,200 --> 00:17:47,280
in ideal lattices

469
00:17:47,280 --> 00:17:49,280
then you can solve them from and through

470
00:17:49,280 --> 00:17:50,720
vector problem

471
00:17:50,720 --> 00:17:53,360
and in red you have the two interesting

472
00:17:53,360 --> 00:17:55,520
arrows that require some work and that

473
00:17:55,520 --> 00:17:59,120
are maybe more interesting in terms of a

474
00:17:59,120 --> 00:18:01,520
security guarantees so which shows that

475
00:18:01,520 --> 00:18:03,360
decision island through is at least as

476
00:18:03,360 --> 00:18:07,440
hard as uh the module variant of intro

477
00:18:07,440 --> 00:18:10,000
and that introvector is actually as hard

478
00:18:10,000 --> 00:18:12,240
as some worst case

479
00:18:12,240 --> 00:18:15,200
ideal problem i don't like this problem

480
00:18:15,200 --> 00:18:17,200
so something i want to emphasize also on

481
00:18:17,200 --> 00:18:19,760
this picture that the especially the red

482
00:18:19,760 --> 00:18:22,480
arrows they require some very specific

483
00:18:22,480 --> 00:18:24,480
distribution and entry instances and

484
00:18:24,480 --> 00:18:26,960
some specific range of parameters so not

485
00:18:26,960 --> 00:18:29,039
all the errors may compose like

486
00:18:29,039 --> 00:18:31,200
sometimes you get uncompatible

487
00:18:31,200 --> 00:18:35,360
conditions to compose the arrows

488
00:18:35,520 --> 00:18:38,080
and so if you want to know how the gap

489
00:18:38,080 --> 00:18:40,720
degrades along the reduction so you can

490
00:18:40,720 --> 00:18:43,039
pause on this slide but essentially for

491
00:18:43,039 --> 00:18:44,880
all the trigger reductions we have no

492
00:18:44,880 --> 00:18:47,280
loss and for the red reductions

493
00:18:47,280 --> 00:18:49,679
interesting one we have a small

494
00:18:49,679 --> 00:18:53,039
a small loss so you can look at it

495
00:18:53,039 --> 00:18:54,240
okay so

496
00:18:54,240 --> 00:18:57,200
i wanted to try to plat to plot all we

497
00:18:57,200 --> 00:18:59,840
know about andrew on one slide uh so

498
00:18:59,840 --> 00:19:01,919
it's a complicated slide and i'm not

499
00:19:01,919 --> 00:19:03,679
sure it's very useful but still it's

500
00:19:03,679 --> 00:19:05,679
there so let me show you you can pause

501
00:19:05,679 --> 00:19:07,520
also if you want to have a look

502
00:19:07,520 --> 00:19:10,880
so uh on this slide on the x-axis you

503
00:19:10,880 --> 00:19:13,760
have the modulus q and on the y-axis you

504
00:19:13,760 --> 00:19:15,760
have the size of f and g so it's not the

505
00:19:15,760 --> 00:19:17,760
gap that i'm plotting but the size of

506
00:19:17,760 --> 00:19:19,840
the upper bound on f and g

507
00:19:19,840 --> 00:19:22,640
and the scale is log log so you go from

508
00:19:22,640 --> 00:19:25,280
polynomial to two to the n and in the in

509
00:19:25,280 --> 00:19:27,200
between you have to do the square root

510
00:19:27,200 --> 00:19:29,360
because you can be interested in various

511
00:19:29,360 --> 00:19:32,160
parameter ranges for intro so in grey

512
00:19:32,160 --> 00:19:34,320
you have the area where

513
00:19:34,320 --> 00:19:36,480
the size of f and g is larger than q

514
00:19:36,480 --> 00:19:38,480
then you have low income instances with

515
00:19:38,480 --> 00:19:40,400
f and g larger than q

516
00:19:40,400 --> 00:19:42,960
so in purple you have the area where you

517
00:19:42,960 --> 00:19:45,200
can prove that decision line true is

518
00:19:45,200 --> 00:19:47,280
unconditionally hard so if you have f

519
00:19:47,280 --> 00:19:50,080
and g of this side and gaussian then

520
00:19:50,080 --> 00:19:53,200
it's indistinguishable from uniform

521
00:19:53,200 --> 00:19:55,840
in red you have the area where you have

522
00:19:55,840 --> 00:19:58,160
the subfield attack or kirchner fook

523
00:19:58,160 --> 00:20:00,880
attack or ll attacks so all the attacks

524
00:20:00,880 --> 00:20:03,039
on and through so the red area is where

525
00:20:03,039 --> 00:20:05,440
you should not choose your parameters

526
00:20:05,440 --> 00:20:07,760
you have polynomial time attacks and so

527
00:20:07,760 --> 00:20:10,320
all reductions they can be positioned

528
00:20:10,320 --> 00:20:12,000
here so the

529
00:20:12,000 --> 00:20:14,000
equivalence between decision and through

530
00:20:14,000 --> 00:20:16,720
and for modules is

531
00:20:16,720 --> 00:20:18,799
there is few restrictions on it so it

532
00:20:18,799 --> 00:20:23,600
covers quite a bunch of the space

533
00:20:23,600 --> 00:20:25,600
and the restriction bit i mean there is

534
00:20:25,600 --> 00:20:28,159
a reduction between from ideal sap to

535
00:20:28,159 --> 00:20:30,000
enter vector problem

536
00:20:30,000 --> 00:20:33,039
is restricted to the size of f and g

537
00:20:33,039 --> 00:20:36,159
being sufficiently large so you have two

538
00:20:36,159 --> 00:20:38,320
areas here so in blue it's something

539
00:20:38,320 --> 00:20:40,240
that works for all

540
00:20:40,240 --> 00:20:42,000
number fields at least with small

541
00:20:42,000 --> 00:20:43,520
discriminants

542
00:20:43,520 --> 00:20:46,720
and in polynomial time classical time

543
00:20:46,720 --> 00:20:47,679
and in

544
00:20:47,679 --> 00:20:49,840
light blue you need the quantum this is

545
00:20:49,840 --> 00:20:51,600
a quantum reduction and it's only for

546
00:20:51,600 --> 00:20:53,600
psychoatomic fields

547
00:20:53,600 --> 00:20:55,679
okay so let me move on to the techniques

548
00:20:55,679 --> 00:20:57,600
of the two interesting reductions and

549
00:20:57,600 --> 00:20:59,120
i'm going to start

550
00:20:59,120 --> 00:21:01,760
from the reduction from ideal idp to n4

551
00:21:01,760 --> 00:21:03,600
vector

552
00:21:03,600 --> 00:21:05,679
so this reduction is a one-to-one

553
00:21:05,679 --> 00:21:08,000
reduction so we start with an ideal and

554
00:21:08,000 --> 00:21:09,520
we're going to transform it into an

555
00:21:09,520 --> 00:21:12,000
intro instance such that any solution to

556
00:21:12,000 --> 00:21:14,000
the entry instance gives us a small

557
00:21:14,000 --> 00:21:15,760
vector in the ideal

558
00:21:15,760 --> 00:21:17,679
so for simplicity here i'm going to

559
00:21:17,679 --> 00:21:19,840
assume my ideal is principle and it's

560
00:21:19,840 --> 00:21:22,080
just the set of all multiples of some

561
00:21:22,080 --> 00:21:24,640
generator z which i know

562
00:21:24,640 --> 00:21:28,320
so all integral multiple of z

563
00:21:28,320 --> 00:21:32,240
and i have some element g in i which is

564
00:21:32,240 --> 00:21:35,120
small in my idea so here is a place

565
00:21:35,120 --> 00:21:37,760
where the intuition if you imagine that

566
00:21:37,760 --> 00:21:40,240
the ring r is a ring of integer z it

567
00:21:40,240 --> 00:21:42,720
might be misleading because then z is

568
00:21:42,720 --> 00:21:44,240
going to be the shortest element of the

569
00:21:44,240 --> 00:21:46,320
ideal and it's trivially

570
00:21:46,320 --> 00:21:50,320
solved but in the general case where um

571
00:21:50,320 --> 00:21:53,679
r is a ring of integer of a number field

572
00:21:53,679 --> 00:21:54,400
then

573
00:21:54,400 --> 00:21:56,720
the shortest vector g is usually going

574
00:21:56,720 --> 00:21:59,280
to be an integral multiple of z and this

575
00:21:59,280 --> 00:22:02,799
is the multiple we would like to find

576
00:22:02,799 --> 00:22:04,480
so how do we transform that into an

577
00:22:04,480 --> 00:22:06,799
ultra instance well we just do a bit of

578
00:22:06,799 --> 00:22:09,760
manipulation we multiply this equation

579
00:22:09,760 --> 00:22:13,600
by q over z to get like g times q over z

580
00:22:13,600 --> 00:22:15,520
is a multiple of q

581
00:22:15,520 --> 00:22:18,799
and now if i call h this q over z i get

582
00:22:18,799 --> 00:22:22,720
g times h is 0 mod q

583
00:22:22,720 --> 00:22:25,120
so the problem here if i do that it

584
00:22:25,120 --> 00:22:28,640
looks like n true but um h is

585
00:22:28,640 --> 00:22:30,880
a rational it's an element of the field

586
00:22:30,880 --> 00:22:33,760
it's q over z and in entro we want h to

587
00:22:33,760 --> 00:22:35,520
be

588
00:22:35,520 --> 00:22:38,960
something some some thing in the ring r

589
00:22:38,960 --> 00:22:41,919
so well we just add a line and we round

590
00:22:41,919 --> 00:22:43,200
q over z

591
00:22:43,200 --> 00:22:46,000
so we get g times q over z the rounding

592
00:22:46,000 --> 00:22:47,120
part

593
00:22:47,120 --> 00:22:50,240
is equal to so what's left which is

594
00:22:50,240 --> 00:22:52,480
minus g times the fractional part of q

595
00:22:52,480 --> 00:22:53,520
over z

596
00:22:53,520 --> 00:22:54,960
modulo q

597
00:22:54,960 --> 00:22:58,080
and now i just take h to be this

598
00:22:58,080 --> 00:23:00,000
rounding of q over z

599
00:23:00,000 --> 00:23:02,559
f to be minus g times the rational part

600
00:23:02,559 --> 00:23:06,080
of q over z and i get that g h is f mod

601
00:23:06,080 --> 00:23:07,039
q

602
00:23:07,039 --> 00:23:09,120
g is small because it's a short vector

603
00:23:09,120 --> 00:23:12,400
of i and f is also of the order of

604
00:23:12,400 --> 00:23:14,400
of the same size as g

605
00:23:14,400 --> 00:23:16,080
because this fractional part is

606
00:23:16,080 --> 00:23:18,880
something that is comprised between zero

607
00:23:18,880 --> 00:23:21,200
minus one alpha and one half let's say

608
00:23:21,200 --> 00:23:23,440
over the integer so it's small

609
00:23:23,440 --> 00:23:25,600
so f and g are both small

610
00:23:25,600 --> 00:23:29,199
and we get an n for instance

611
00:23:29,280 --> 00:23:31,520
so

612
00:23:31,919 --> 00:23:34,320
what i've done so far is

613
00:23:34,320 --> 00:23:36,480
if i'm given a principle ideal i am able

614
00:23:36,480 --> 00:23:38,720
to construct an entry instance

615
00:23:38,720 --> 00:23:40,880
such that

616
00:23:40,880 --> 00:23:43,279
if g is a small element of the ideal

617
00:23:43,279 --> 00:23:46,159
then there exists a trapdoor fg for the

618
00:23:46,159 --> 00:23:48,000
initial instance h

619
00:23:48,000 --> 00:23:49,840
so it's not completely sufficient yet

620
00:23:49,840 --> 00:23:51,919
but you can prove that the converse is

621
00:23:51,919 --> 00:23:54,559
true for this central instance that is

622
00:23:54,559 --> 00:23:57,760
any trapdoor f prime g prime for h

623
00:23:57,760 --> 00:24:00,240
will have g prime which is an element of

624
00:24:00,240 --> 00:24:01,279
i

625
00:24:01,279 --> 00:24:03,919
and since it's a trapdoor the prime is

626
00:24:03,919 --> 00:24:06,320
also small and so this gives you a small

627
00:24:06,320 --> 00:24:08,159
element in the ideal and so you can

628
00:24:08,159 --> 00:24:10,960
solve ideal sap by solving and true for

629
00:24:10,960 --> 00:24:13,679
the input age

630
00:24:13,679 --> 00:24:15,520
okay so just to conclude on this

631
00:24:15,520 --> 00:24:17,039
reduction

632
00:24:17,039 --> 00:24:19,279
so i've presented it to you just in the

633
00:24:19,279 --> 00:24:21,200
case of principal ideals but you can

634
00:24:21,200 --> 00:24:23,679
extend it as i said to any

635
00:24:23,679 --> 00:24:26,159
non-principle ideal the idea is that you

636
00:24:26,159 --> 00:24:28,559
can always write a non-principal ideal

637
00:24:28,559 --> 00:24:32,080
as the intersection of a principle ideal

638
00:24:32,080 --> 00:24:34,080
for which you know generator and the

639
00:24:34,080 --> 00:24:35,760
ring of integers

640
00:24:35,760 --> 00:24:38,080
and so if you write it like this then

641
00:24:38,080 --> 00:24:39,520
you can just do everything that i've

642
00:24:39,520 --> 00:24:40,320
said

643
00:24:40,320 --> 00:24:42,559
with this element z and it's going to

644
00:24:42,559 --> 00:24:44,159
work

645
00:24:44,159 --> 00:24:46,720
and another extension of the reduction

646
00:24:46,720 --> 00:24:48,559
is that so the reaction that's presented

647
00:24:48,559 --> 00:24:50,799
to you was one two one if you have an

648
00:24:50,799 --> 00:24:52,640
ideal lattice you can transform it into

649
00:24:52,640 --> 00:24:54,799
an untrue instance

650
00:24:54,799 --> 00:24:57,520
but what we would like to have is worst

651
00:24:57,520 --> 00:24:59,360
case to average cave meaning if you can

652
00:24:59,360 --> 00:25:01,600
solve for some average case distribution

653
00:25:01,600 --> 00:25:03,039
of and through

654
00:25:03,039 --> 00:25:04,720
the answer problem then you can solve

655
00:25:04,720 --> 00:25:06,880
idealized ep for all

656
00:25:06,880 --> 00:25:09,440
ideal lattices and so we can achieve

657
00:25:09,440 --> 00:25:11,360
that by using a previous work which

658
00:25:11,360 --> 00:25:13,520
showed a worst case to average case

659
00:25:13,520 --> 00:25:15,760
reduction for ideal lattices

660
00:25:15,760 --> 00:25:18,159
and then we use the one-to-one reduction

661
00:25:18,159 --> 00:25:20,400
that i've just showed you to reduce that

662
00:25:20,400 --> 00:25:23,600
to average case and true

663
00:25:23,840 --> 00:25:25,440
so this was the idea of the first

664
00:25:25,440 --> 00:25:27,360
reduction let me now move on to the

665
00:25:27,360 --> 00:25:29,279
second reduction from decision element

666
00:25:29,279 --> 00:25:31,520
through to intro module

667
00:25:31,520 --> 00:25:33,760
uh so this reduction is not going to be

668
00:25:33,760 --> 00:25:35,520
one to one so i'm going to phrase the

669
00:25:35,520 --> 00:25:38,159
prime a lit a bit differently

670
00:25:38,159 --> 00:25:40,960
so my objective is given some

671
00:25:40,960 --> 00:25:43,279
some and through instance h

672
00:25:43,279 --> 00:25:44,559
to recover

673
00:25:44,559 --> 00:25:46,799
h k so if you remember and for module we

674
00:25:46,799 --> 00:25:49,200
want to recover f over g

675
00:25:49,200 --> 00:25:51,600
with the division performed over the

676
00:25:51,600 --> 00:25:52,799
rational

677
00:25:52,799 --> 00:25:55,039
and we are given as input f over g

678
00:25:55,039 --> 00:25:57,520
modulo q

679
00:25:57,520 --> 00:26:00,159
and to do so so this is a reduction so

680
00:26:00,159 --> 00:26:02,000
we can assume that we have an oracle

681
00:26:02,000 --> 00:26:04,559
that solves decisional intro

682
00:26:04,559 --> 00:26:07,039
and here in order to give us intuition

683
00:26:07,039 --> 00:26:08,880
i'm going to assume that i have what i'm

684
00:26:08,880 --> 00:26:11,039
going to call a perfect oracle

685
00:26:11,039 --> 00:26:14,480
so it's an oracle such that if i give it

686
00:26:14,480 --> 00:26:16,880
h which is f over g it's going to say

687
00:26:16,880 --> 00:26:17,919
yes

688
00:26:17,919 --> 00:26:20,640
if there exists f and g

689
00:26:20,640 --> 00:26:22,640
smaller than some bound b so i don't

690
00:26:22,640 --> 00:26:24,400
know b but there is some bound b such

691
00:26:24,400 --> 00:26:27,120
that if h can be written as f over g

692
00:26:27,120 --> 00:26:29,200
then the record is going to say yes

693
00:26:29,200 --> 00:26:31,840
and if h cannot be written as f over g

694
00:26:31,840 --> 00:26:33,360
with f and j is smaller than b then the

695
00:26:33,360 --> 00:26:35,440
record is going to say no

696
00:26:35,440 --> 00:26:37,520
so it's perfect in the sense that there

697
00:26:37,520 --> 00:26:39,440
is really some bound b

698
00:26:39,440 --> 00:26:41,760
that says yes or no and it's not some

699
00:26:41,760 --> 00:26:44,400
continuous degradation of

700
00:26:44,400 --> 00:26:47,840
the success probability

701
00:26:47,840 --> 00:26:49,840
so what can i do if i have such an

702
00:26:49,840 --> 00:26:53,360
oracle well the idea is going to be

703
00:26:53,360 --> 00:26:56,720
pick any x and y you want integer

704
00:26:56,720 --> 00:26:57,440
and

705
00:26:57,440 --> 00:26:58,559
compute

706
00:26:58,559 --> 00:27:01,120
x times h plus y

707
00:27:01,120 --> 00:27:03,520
so if i write it as a fraction it's x f

708
00:27:03,520 --> 00:27:06,720
plus y g divided by g mod q and now i

709
00:27:06,720 --> 00:27:11,039
can query the record on this new h prime

710
00:27:11,039 --> 00:27:13,919
and the oracle is going to say yes if x

711
00:27:13,919 --> 00:27:16,240
f plus y g is smaller than b but it's

712
00:27:16,240 --> 00:27:17,919
going to say no with very high

713
00:27:17,919 --> 00:27:20,559
probability if x xf plus yg is larger

714
00:27:20,559 --> 00:27:21,840
than b

715
00:27:21,840 --> 00:27:24,320
so by querying the oracle on h prime i

716
00:27:24,320 --> 00:27:27,360
can learn whether xf plus yg is smaller

717
00:27:27,360 --> 00:27:29,679
than b or not

718
00:27:29,679 --> 00:27:32,000
and the important properties here is

719
00:27:32,000 --> 00:27:34,799
that i can do that for any x and y of my

720
00:27:34,799 --> 00:27:35,840
choice

721
00:27:35,840 --> 00:27:38,320
and in particular i can choose x and y

722
00:27:38,320 --> 00:27:40,000
such that they only modify one

723
00:27:40,000 --> 00:27:42,399
coordinate of f and g at a time

724
00:27:42,399 --> 00:27:44,480
so i can separate the coordinates of f

725
00:27:44,480 --> 00:27:48,320
and g and recover them one by one so i

726
00:27:48,320 --> 00:27:50,880
can rephrase my problem in a simplest

727
00:27:50,880 --> 00:27:52,080
way

728
00:27:52,080 --> 00:27:55,279
in a simpler way by saying i have just f

729
00:27:55,279 --> 00:27:56,640
and g that are

730
00:27:56,640 --> 00:27:59,520
one-dimensional real numbers

731
00:27:59,520 --> 00:28:02,399
i have some bond b which i don't know

732
00:28:02,399 --> 00:28:05,039
and what i can do is i can choose x and

733
00:28:05,039 --> 00:28:07,760
y as i want and i can learn whether x f

734
00:28:07,760 --> 00:28:10,640
plus y g is larger than b on it

735
00:28:10,640 --> 00:28:13,520
and i want to recover f over t

736
00:28:13,520 --> 00:28:14,559
and

737
00:28:14,559 --> 00:28:18,640
well it's um yeah just a remark that i

738
00:28:18,640 --> 00:28:21,279
cannot hope to recover f and g i can

739
00:28:21,279 --> 00:28:24,159
only hope to recover f over g because

740
00:28:24,159 --> 00:28:26,320
if you see my problem if you scale

741
00:28:26,320 --> 00:28:28,880
everything by alpha so if you scale f g

742
00:28:28,880 --> 00:28:31,520
and b by alpha which are

743
00:28:31,520 --> 00:28:33,760
all unknown to the attacker

744
00:28:33,760 --> 00:28:35,679
then the behavior of the record is going

745
00:28:35,679 --> 00:28:37,679
to be the same so i cannot hope to

746
00:28:37,679 --> 00:28:38,799
distinguish

747
00:28:38,799 --> 00:28:41,279
to recover f and g exactly but i can

748
00:28:41,279 --> 00:28:43,360
hope to recover f over g

749
00:28:43,360 --> 00:28:44,399
and

750
00:28:44,399 --> 00:28:45,760
it's actually

751
00:28:45,760 --> 00:28:49,200
not complicated to recover f and g here

752
00:28:49,200 --> 00:28:52,240
so the idea is to going to increase

753
00:28:52,240 --> 00:28:55,039
suffix for instance some x0 and increase

754
00:28:55,039 --> 00:28:58,640
y0 until the record changes from yes to

755
00:28:58,640 --> 00:28:59,520
no

756
00:28:59,520 --> 00:29:02,320
and when it changes its answer we know

757
00:29:02,320 --> 00:29:05,039
that we have found some equation x 0 f

758
00:29:05,039 --> 00:29:08,640
plus y 0 g is equal to b

759
00:29:08,640 --> 00:29:11,279
we do that twice

760
00:29:11,279 --> 00:29:13,200
we get two equations and then we can

761
00:29:13,200 --> 00:29:14,720
just solve

762
00:29:14,720 --> 00:29:17,440
for f over g

763
00:29:17,440 --> 00:29:21,679
so that's really an easy algorithm

764
00:29:21,679 --> 00:29:23,360
so um

765
00:29:23,360 --> 00:29:26,000
this again is a simplified version of

766
00:29:26,000 --> 00:29:27,760
the algorithm there are more technical

767
00:29:27,760 --> 00:29:30,559
details to handle and in particular

768
00:29:30,559 --> 00:29:32,480
the main technicalities here is that the

769
00:29:32,480 --> 00:29:34,480
oracle is not going to be perfect

770
00:29:34,480 --> 00:29:36,240
but it's going

771
00:29:36,240 --> 00:29:38,000
the only thing you can assume on the

772
00:29:38,000 --> 00:29:39,440
oracle is that

773
00:29:39,440 --> 00:29:41,679
when it's distributed as in true it says

774
00:29:41,679 --> 00:29:43,600
yes and when it's distributed as uniform

775
00:29:43,600 --> 00:29:46,000
it says no but everything in between we

776
00:29:46,000 --> 00:29:48,720
don't know what what happens

777
00:29:48,720 --> 00:29:52,320
and so in order to deal with that we

778
00:29:52,320 --> 00:29:55,120
don't uh do the proof and the algorithm

779
00:29:55,120 --> 00:29:58,080
as i've showed to you by hand but we use

780
00:29:58,080 --> 00:30:00,159
a framework that was introduced by pyker

781
00:30:00,159 --> 00:30:02,960
trigger and stefan davido it's to prove

782
00:30:02,960 --> 00:30:04,880
the

783
00:30:04,880 --> 00:30:07,360
hardness of ringle beliwi

784
00:30:07,360 --> 00:30:09,679
which is called the oracle hidden center

785
00:30:09,679 --> 00:30:12,480
framework problem sorry

786
00:30:12,480 --> 00:30:13,679
and

787
00:30:13,679 --> 00:30:15,440
essentially the only thing you need to

788
00:30:15,440 --> 00:30:16,320
show

789
00:30:16,320 --> 00:30:19,760
thanks to their framework is that

790
00:30:19,760 --> 00:30:22,000
the probability of success has some nice

791
00:30:22,000 --> 00:30:24,000
condition like being nip sheets and

792
00:30:24,000 --> 00:30:26,320
things like that and then you can call

793
00:30:26,320 --> 00:30:28,320
the framework and it's going to give you

794
00:30:28,320 --> 00:30:30,320
an algorithm to find

795
00:30:30,320 --> 00:30:34,520
the solution f over g

796
00:30:36,080 --> 00:30:38,799
so let me conclude now

797
00:30:38,799 --> 00:30:41,279
so here is a summary of the reductions

798
00:30:41,279 --> 00:30:42,640
we prove

799
00:30:42,640 --> 00:30:44,640
uh there is a bunch of open questions

800
00:30:44,640 --> 00:30:47,919
related to what we have proven so far so

801
00:30:47,919 --> 00:30:49,919
one open question is regarding the

802
00:30:49,919 --> 00:30:52,240
distributions i mentioned that we don't

803
00:30:52,240 --> 00:30:53,919
use the same distributions for all the

804
00:30:53,919 --> 00:30:55,600
reductions so it would be nice to have

805
00:30:55,600 --> 00:30:57,840
one reduce one distribution sorry that

806
00:30:57,840 --> 00:31:00,559
works for all the reductions

807
00:31:00,559 --> 00:31:02,240
another open question is whether we can

808
00:31:02,240 --> 00:31:04,080
prove the hardness of decision length

809
00:31:04,080 --> 00:31:06,559
through based on some worst case idea

810
00:31:06,559 --> 00:31:09,919
svp problem and for this the

811
00:31:09,919 --> 00:31:11,600
natural idea would be whether we could

812
00:31:11,600 --> 00:31:12,799
prove that

813
00:31:12,799 --> 00:31:15,120
worst case identicap reduces to n for

814
00:31:15,120 --> 00:31:17,039
module instead of and true vector so so

815
00:31:17,039 --> 00:31:19,840
far we don't know how to do that

816
00:31:19,840 --> 00:31:21,600
and finally the last open problem is

817
00:31:21,600 --> 00:31:23,760
whether we could replace this worst case

818
00:31:23,760 --> 00:31:26,080
problem on ideal lattices

819
00:31:26,080 --> 00:31:28,000
by some worst case flame on module

820
00:31:28,000 --> 00:31:29,840
lattices for modules of front two or

821
00:31:29,840 --> 00:31:31,279
more because

822
00:31:31,279 --> 00:31:32,640
for the moment they are believed to be

823
00:31:32,640 --> 00:31:36,720
maybe a bit safer than ideal lattices

824
00:31:36,720 --> 00:31:38,480
so that's all for me thank you for

825
00:31:38,480 --> 00:31:42,039
watching this video

