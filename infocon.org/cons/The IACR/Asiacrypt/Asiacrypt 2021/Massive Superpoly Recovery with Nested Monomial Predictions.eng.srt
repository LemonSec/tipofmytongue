1
00:00:03,120 --> 00:00:06,000
hello everyone my name is kaifu i will

2
00:00:06,000 --> 00:00:08,160
present a work named massive property

3
00:00:08,160 --> 00:00:11,440
recovery with nasty nominal predictions

4
00:00:11,440 --> 00:00:14,719
this is a joint work with suicidal

5
00:00:14,719 --> 00:00:17,119
machine

6
00:00:19,279 --> 00:00:21,840
this presentation consists of four parts

7
00:00:21,840 --> 00:00:23,439
in the first part

8
00:00:23,439 --> 00:00:25,439
i will give some background knowledge

9
00:00:25,439 --> 00:00:27,439
about the cube attack and super body

10
00:00:27,439 --> 00:00:30,160
recovery secondly i will introduce our

11
00:00:30,160 --> 00:00:32,640
first technical contribution about an

12
00:00:32,640 --> 00:00:35,040
efficient framework for the muscle super

13
00:00:35,040 --> 00:00:36,880
body recovery

14
00:00:36,880 --> 00:00:39,040
thirdly i will show how to do the key

15
00:00:39,040 --> 00:00:41,680
recovery attacks based on the muscles

16
00:00:41,680 --> 00:00:43,840
properly covered

17
00:00:43,840 --> 00:00:47,920
lastly i summarize this work

18
00:00:48,239 --> 00:00:50,960
the cube attack was proposed by dina and

19
00:00:50,960 --> 00:00:53,440
xiamiya and the euro couple 29

20
00:00:53,440 --> 00:00:54,960
in this attack

21
00:00:54,960 --> 00:00:57,360
a ballon polynomial can be simplified by

22
00:00:57,360 --> 00:00:59,920
focusing on the coefficient of one cubic

23
00:00:59,920 --> 00:01:03,120
nominal x to u

24
00:01:03,120 --> 00:01:05,040
the value of the super body can be

25
00:01:05,040 --> 00:01:07,600
calculated also according to the mobile

26
00:01:07,600 --> 00:01:08,880
transform

27
00:01:08,880 --> 00:01:11,200
for a symmetrical cycle system

28
00:01:11,200 --> 00:01:13,840
so simply will be a function

29
00:01:13,840 --> 00:01:14,560
to

30
00:01:14,560 --> 00:01:18,000
of the secret k only if we let the net

31
00:01:18,000 --> 00:01:19,759
cube

32
00:01:19,759 --> 00:01:22,960
noise or r b with zero

33
00:01:22,960 --> 00:01:25,520
if we can recover the af of the super

34
00:01:25,520 --> 00:01:27,600
body then we can get

35
00:01:27,600 --> 00:01:30,799
one equation okay and some k information

36
00:01:30,799 --> 00:01:33,759
may be extracted

37
00:01:33,840 --> 00:01:36,880
in the very early stage the super body

38
00:01:36,880 --> 00:01:39,360
can be recovered by experimental methods

39
00:01:39,360 --> 00:01:42,320
online all in simplest policies can be

40
00:01:42,320 --> 00:01:44,640
recovered in this way

41
00:01:44,640 --> 00:01:48,399
a breakthrough occurred at a crypto 2017

42
00:01:48,399 --> 00:01:51,040
portal etc introduced the division

43
00:01:51,040 --> 00:01:53,759
property into cube tag

44
00:01:53,759 --> 00:01:55,840
then we do not need to rely on the

45
00:01:55,840 --> 00:01:57,680
experimental method

46
00:01:57,680 --> 00:02:00,399
theoretical analysis becomes possible

47
00:02:00,399 --> 00:02:02,479
there are many following works along

48
00:02:02,479 --> 00:02:04,240
this direction

49
00:02:04,240 --> 00:02:06,560
there are also some algebraic methods in

50
00:02:06,560 --> 00:02:09,719
the literature

51
00:02:10,080 --> 00:02:12,560
for composite boolean function the

52
00:02:12,560 --> 00:02:14,879
nominal prediction or division property

53
00:02:14,879 --> 00:02:17,040
allows us to predict

54
00:02:17,040 --> 00:02:20,080
if a monomial x to u does or doesn't

55
00:02:20,080 --> 00:02:23,360
appear in the nominal y2 way by counting

56
00:02:23,360 --> 00:02:25,760
the number of so-called nominal or

57
00:02:25,760 --> 00:02:28,080
dividing trials

58
00:02:28,080 --> 00:02:31,680
for a cube term x2u if we can determine

59
00:02:31,680 --> 00:02:35,519
all possible monomials gk x2u since the

60
00:02:35,519 --> 00:02:39,920
super body can be determined accordingly

61
00:02:41,440 --> 00:02:44,239
however with previous method there

62
00:02:44,239 --> 00:02:46,480
exists some challenges

63
00:02:46,480 --> 00:02:49,120
the recovered superpolis in literature

64
00:02:49,120 --> 00:02:51,920
are all low degree and with small number

65
00:02:51,920 --> 00:02:53,040
of terms

66
00:02:53,040 --> 00:02:56,160
however as the number of drugs increases

67
00:02:56,160 --> 00:02:59,200
superpowers become more and more complex

68
00:02:59,200 --> 00:03:00,959
we took directly in the monomial

69
00:03:00,959 --> 00:03:04,440
prediction to recover the super body for

70
00:03:04,440 --> 00:03:07,840
843 round trivial

71
00:03:07,840 --> 00:03:09,440
unfortunately

72
00:03:09,440 --> 00:03:12,560
no results are obtained for one month

73
00:03:12,560 --> 00:03:15,680
so the challenge is how to recover a

74
00:03:15,680 --> 00:03:19,080
massive superpower

75
00:03:19,599 --> 00:03:22,000
in this paper we give an efficient

76
00:03:22,000 --> 00:03:24,480
framework with nasty the usage of the

77
00:03:24,480 --> 00:03:26,640
nominal prediction

78
00:03:26,640 --> 00:03:29,599
provided the output bit of a certain run

79
00:03:29,599 --> 00:03:31,200
of our stream software

80
00:03:31,200 --> 00:03:34,720
we first choose a positive number r 0

81
00:03:34,720 --> 00:03:38,480
to expand the output bit

82
00:03:38,480 --> 00:03:40,560
to the intermediate states

83
00:03:40,560 --> 00:03:43,680
after armas are their runs

84
00:03:43,680 --> 00:03:46,640
in other words the output bit will be

85
00:03:46,640 --> 00:03:49,440
written as a polynomial of the states

86
00:03:49,440 --> 00:03:52,319
after the r minus are zero rounds

87
00:03:52,319 --> 00:03:54,959
all the monomials are pushed into the

88
00:03:54,959 --> 00:03:58,560
set as 2r minus r0

89
00:03:58,560 --> 00:04:01,680
then for each monomial in this set

90
00:04:01,680 --> 00:04:05,040
we construct a mrp model to compute the

91
00:04:05,040 --> 00:04:07,680
partial polynomial with the monomial

92
00:04:07,680 --> 00:04:08,959
prediction

93
00:04:08,959 --> 00:04:10,080
but

94
00:04:10,080 --> 00:04:13,519
we add a time limit torque

95
00:04:13,519 --> 00:04:14,560
on

96
00:04:14,560 --> 00:04:17,200
this model

97
00:04:18,720 --> 00:04:20,000
so

98
00:04:20,000 --> 00:04:23,280
after the time is up all monomials

99
00:04:23,280 --> 00:04:27,440
in s2 r minus r0 the set can be grouped

100
00:04:27,440 --> 00:04:30,880
into three disjoint set

101
00:04:30,880 --> 00:04:33,600
in the first case the mrp model for this

102
00:04:33,600 --> 00:04:35,440
monomial is

103
00:04:35,440 --> 00:04:37,680
solved but infeasible

104
00:04:37,680 --> 00:04:39,680
then we know the nominal has no

105
00:04:39,680 --> 00:04:42,560
contribution to the final super body

106
00:04:42,560 --> 00:04:45,520
in the second case the mrp model for the

107
00:04:45,520 --> 00:04:48,479
nominal is solved but

108
00:04:48,479 --> 00:04:50,880
feasible and feasible

109
00:04:50,880 --> 00:04:52,800
then we can extract the partial

110
00:04:52,800 --> 00:04:56,160
polynomial from this monomial

111
00:04:56,160 --> 00:04:59,120
in the last case the mrp model cannot be

112
00:04:59,120 --> 00:05:03,360
determined feasible or inevitable then

113
00:05:03,360 --> 00:05:04,160
we

114
00:05:04,160 --> 00:05:07,680
have to expand every monomial to next

115
00:05:07,680 --> 00:05:11,560
deeper wrong states

116
00:05:11,680 --> 00:05:15,759
and we repeat this process

117
00:05:17,520 --> 00:05:19,600
when there is no

118
00:05:19,600 --> 00:05:21,280
undetermined set

119
00:05:21,280 --> 00:05:22,240
of

120
00:05:22,240 --> 00:05:25,360
the determinant set is empty

121
00:05:25,360 --> 00:05:28,080
the superpoly is totally recovered

122
00:05:28,080 --> 00:05:30,400
we collect all the partial superpolis

123
00:05:30,400 --> 00:05:33,360
along the way and sum them up to the

124
00:05:33,360 --> 00:05:36,479
final superpoly

125
00:05:37,199 --> 00:05:39,600
we have a short discussion on the

126
00:05:39,600 --> 00:05:43,280
choices of the tall and r both of which

127
00:05:43,280 --> 00:05:45,840
affect the efficiency

128
00:05:45,840 --> 00:05:51,039
as r minus r0 minus r1 until rr becomes

129
00:05:51,039 --> 00:05:54,160
smaller and closer to zero

130
00:05:54,160 --> 00:05:55,759
in principle

131
00:05:55,759 --> 00:05:58,800
tall should be larger and larger and the

132
00:05:58,800 --> 00:06:02,240
rr is chosen such that the number of

133
00:06:02,240 --> 00:06:04,840
expanded nominals surpass a given

134
00:06:04,840 --> 00:06:07,840
threshold and in our experiments we

135
00:06:07,840 --> 00:06:10,560
usually choose n as ten thousand or a

136
00:06:10,560 --> 00:06:12,720
hundred thousand

137
00:06:12,720 --> 00:06:14,960
please note that tall and r should be

138
00:06:14,960 --> 00:06:16,880
chosen accordingly

139
00:06:16,880 --> 00:06:19,199
according to the concrete experimental

140
00:06:19,199 --> 00:06:21,840
environment

141
00:06:22,240 --> 00:06:24,319
next i will show some results of this

142
00:06:24,319 --> 00:06:25,759
new framework

143
00:06:25,759 --> 00:06:28,160
the first application is for trivial you

144
00:06:28,160 --> 00:06:29,280
can see

145
00:06:29,280 --> 00:06:31,440
here five cubes we used in our

146
00:06:31,440 --> 00:06:32,880
experiment

147
00:06:32,880 --> 00:06:35,440
these cubes are chosen by adding new

148
00:06:35,440 --> 00:06:38,960
indexes one by one to the cube given by

149
00:06:38,960 --> 00:06:42,080
the oem crypto 2017

150
00:06:42,080 --> 00:06:44,720
and here is the information of the super

151
00:06:44,720 --> 00:06:46,720
body weight recovery

152
00:06:46,720 --> 00:06:49,120
this is supporters are truly massive and

153
00:06:49,120 --> 00:06:51,120
it contains hundreds and thousands of

154
00:06:51,120 --> 00:06:52,560
nominals

155
00:06:52,560 --> 00:06:56,960
all of them involved all key bits

156
00:06:56,960 --> 00:07:00,800
the supported for 843

157
00:07:00,800 --> 00:07:04,560
and 844 rounds can be recovered within

158
00:07:04,560 --> 00:07:07,880
two weeks while the superpowers for

159
00:07:07,880 --> 00:07:12,560
845 rounds are within three weeks

160
00:07:12,560 --> 00:07:14,960
and their balancedness is tested by

161
00:07:14,960 --> 00:07:20,400
conducting 2 to 15 randomly chosen keys

162
00:07:20,400 --> 00:07:22,720
the second application is for the grade

163
00:07:22,720 --> 00:07:24,639
128

164
00:07:24,639 --> 00:07:25,440
a

165
00:07:25,440 --> 00:07:28,240
and please note that if we assume we can

166
00:07:28,240 --> 00:07:31,039
observe the first pre-output bit

167
00:07:31,039 --> 00:07:36,319
of the initialization phase of grid 128

168
00:07:36,319 --> 00:07:37,840
aad

169
00:07:37,840 --> 00:07:41,919
then the a8d server is identical to grid

170
00:07:41,919 --> 00:07:44,000
128a

171
00:07:44,000 --> 00:07:46,639
the two cubes are chosen as a zero and r

172
00:07:46,639 --> 00:07:47,440
one

173
00:07:47,440 --> 00:07:51,440
a zero contains all the nuts or r bits

174
00:07:51,440 --> 00:07:55,440
while r1 contains all except the

175
00:07:55,440 --> 00:07:58,080
30s

176
00:07:58,080 --> 00:08:02,440
two superpolis will cover the wall for

177
00:08:02,440 --> 00:08:06,800
191 rounds are out here

178
00:08:07,039 --> 00:08:09,520
the time for the two super bodies are

179
00:08:09,520 --> 00:08:13,199
three to five days

180
00:08:13,199 --> 00:08:16,319
the third application is for trivial for

181
00:08:16,319 --> 00:08:17,680
equilibrium

182
00:08:17,680 --> 00:08:21,599
we use a cube with dimension 119

183
00:08:21,599 --> 00:08:23,039
uh

184
00:08:23,039 --> 00:08:25,520
like this

185
00:08:25,840 --> 00:08:27,199
for

186
00:08:27,199 --> 00:08:29,759
this cube and

187
00:08:29,759 --> 00:08:32,120
the super party of

188
00:08:32,120 --> 00:08:36,159
893 round is a constant one

189
00:08:36,159 --> 00:08:38,120
and for

190
00:08:38,120 --> 00:08:41,039
819 for run the super body the small

191
00:08:41,039 --> 00:08:45,519
balance one with 109 q1 terms

192
00:08:45,519 --> 00:08:47,519
the degree is fall

193
00:08:47,519 --> 00:08:48,320
and

194
00:08:48,320 --> 00:08:51,040
although this simply is very simple

195
00:08:51,040 --> 00:08:53,120
it costs a month

196
00:08:53,120 --> 00:08:56,080
to recover it

197
00:08:58,000 --> 00:09:00,080
next we discuss

198
00:09:00,080 --> 00:09:03,360
why our free work is more efficient

199
00:09:03,360 --> 00:09:06,560
firstly the group server is called you

200
00:09:06,560 --> 00:09:09,680
know restricted way

201
00:09:09,680 --> 00:09:12,640
we do not totally rely on its inner

202
00:09:12,640 --> 00:09:14,240
optimization

203
00:09:14,240 --> 00:09:16,720
each call to the solver is limited to a

204
00:09:16,720 --> 00:09:18,720
given time limit

205
00:09:18,720 --> 00:09:20,959
secondly the divider and the conquer

206
00:09:20,959 --> 00:09:23,200
strategy is used

207
00:09:23,200 --> 00:09:25,120
thirdly

208
00:09:25,120 --> 00:09:27,920
for nominals it is natural to take the

209
00:09:27,920 --> 00:09:31,120
parallelization to speed up the search

210
00:09:31,120 --> 00:09:37,720
and in our experiments we use 64 threads

211
00:09:38,000 --> 00:09:40,399
the second technical point is the key

212
00:09:40,399 --> 00:09:42,800
recovery based on the super bodies we

213
00:09:42,800 --> 00:09:44,880
recovered

214
00:09:44,880 --> 00:09:48,320
provided the super body and the sum of

215
00:09:48,320 --> 00:09:51,200
the outputs of the cube we can construct

216
00:09:51,200 --> 00:09:54,560
our equation of the superpoly

217
00:09:54,560 --> 00:09:57,200
for answer qualities if the

218
00:09:57,200 --> 00:09:59,680
joint distribution is p

219
00:09:59,680 --> 00:10:00,959
like this

220
00:10:00,959 --> 00:10:04,160
for each value with zero with 1

221
00:10:04,160 --> 00:10:07,519
until we n minus 1 the probability is

222
00:10:07,519 --> 00:10:10,240
corresponding

223
00:10:10,240 --> 00:10:11,920
this p

224
00:10:11,920 --> 00:10:14,320
we can calculate the entropy of this

225
00:10:14,320 --> 00:10:17,200
distribution using the definition

226
00:10:17,200 --> 00:10:18,959
of the entropy

227
00:10:18,959 --> 00:10:22,560
if the entropy is e

228
00:10:22,560 --> 00:10:25,360
then we can recover eps

229
00:10:25,360 --> 00:10:28,560
of k information on average

230
00:10:28,560 --> 00:10:29,519
to know

231
00:10:29,519 --> 00:10:33,200
the distribution we test two to 15

232
00:10:33,200 --> 00:10:35,760
randomly chosen keys to observe this

233
00:10:35,760 --> 00:10:38,480
distribution

234
00:10:41,920 --> 00:10:44,800
however now our supporters are massive

235
00:10:44,800 --> 00:10:46,800
and too complicated

236
00:10:46,800 --> 00:10:49,440
all cables are involved

237
00:10:49,440 --> 00:10:51,839
on exhaustive search is not impossible

238
00:10:51,839 --> 00:10:54,000
to recover information

239
00:10:54,000 --> 00:10:57,839
so we have to use some new techniques

240
00:10:57,839 --> 00:11:00,880
as is well-known mobius transform is

241
00:11:00,880 --> 00:11:03,680
well known as the transformation

242
00:11:03,680 --> 00:11:06,399
between the af and the truth table of a

243
00:11:06,399 --> 00:11:09,839
boron function the complexity is n times

244
00:11:09,839 --> 00:11:12,079
2

245
00:11:12,240 --> 00:11:14,880
n times 2 to n minus 1

246
00:11:14,880 --> 00:11:19,680
beat x y and the memory is 2 to n bits

247
00:11:19,680 --> 00:11:21,680
our super bodies

248
00:11:21,680 --> 00:11:23,360
are actually sparse although it is

249
00:11:23,360 --> 00:11:26,240
massive because comparing to a randomly

250
00:11:26,240 --> 00:11:28,320
chosen

251
00:11:28,320 --> 00:11:31,519
polynomials the number of monomials are

252
00:11:31,519 --> 00:11:32,959
much less

253
00:11:32,959 --> 00:11:35,839
so for splash superpowers with a fine

254
00:11:35,839 --> 00:11:38,880
grid analysis the time complexity can be

255
00:11:38,880 --> 00:11:42,399
reduced to n times 2 to n

256
00:11:42,399 --> 00:11:45,519
minus 2 x y

257
00:11:45,600 --> 00:11:49,440
and then we can use the mobius transform

258
00:11:49,440 --> 00:11:52,160
and our divider conquer strategy to do

259
00:11:52,160 --> 00:11:55,120
the q recovery

260
00:11:55,680 --> 00:11:58,160
first we introduce the disjoint set of a

261
00:11:58,160 --> 00:11:59,760
polynomial

262
00:11:59,760 --> 00:12:03,920
given a super body pk with a variable

263
00:12:03,920 --> 00:12:07,120
if kr and kg are never multiplied

264
00:12:07,120 --> 00:12:11,279
together in all monomials of pk then we

265
00:12:11,279 --> 00:12:14,639
say peak pr and pj are destroyed

266
00:12:14,639 --> 00:12:17,839
if for a subset of variables d

267
00:12:17,839 --> 00:12:20,320
every pair of variables e and d are

268
00:12:20,320 --> 00:12:22,160
disjoint we call d

269
00:12:22,160 --> 00:12:25,120
this joint set and the example

270
00:12:25,120 --> 00:12:25,920
here

271
00:12:25,920 --> 00:12:27,200
is here

272
00:12:27,200 --> 00:12:30,560
uh you can see k0 and k3 are never

273
00:12:30,560 --> 00:12:32,399
multiplied uh

274
00:12:32,399 --> 00:12:33,519
brutally

275
00:12:33,519 --> 00:12:37,200
so we say k k 0 and k 3 are destroying

276
00:12:37,200 --> 00:12:40,480
and the set containing k0 and k3 is the

277
00:12:40,480 --> 00:12:43,040
destroying set

278
00:12:43,040 --> 00:12:45,200
for n super bodies

279
00:12:45,200 --> 00:12:47,360
we can define the common destructive set

280
00:12:47,360 --> 00:12:52,880
if d is a disjoint set for every pi

281
00:12:52,880 --> 00:12:55,600
a destroying set or a common disjoint

282
00:12:55,600 --> 00:12:56,800
set

283
00:12:56,800 --> 00:12:59,600
can be found with a greedy algorithm or

284
00:12:59,600 --> 00:13:02,560
smt model

285
00:13:03,519 --> 00:13:06,959
suppose pk has a disjoint set d with m

286
00:13:06,959 --> 00:13:10,639
variables and j equals k zero k y until

287
00:13:10,639 --> 00:13:14,480
k n minus one except d

288
00:13:14,480 --> 00:13:15,519
then

289
00:13:15,519 --> 00:13:19,040
p k can be written as this form

290
00:13:19,040 --> 00:13:21,839
equation one

291
00:13:21,839 --> 00:13:24,560
when where p i j

292
00:13:24,560 --> 00:13:27,839
is a polynomial of the variable in j

293
00:13:27,839 --> 00:13:28,560
so

294
00:13:28,560 --> 00:13:31,839
p r j involves at most m minus m

295
00:13:31,839 --> 00:13:33,120
variables

296
00:13:33,120 --> 00:13:35,680
and we can use mobius transform to

297
00:13:35,680 --> 00:13:39,519
compute the truth table of p0 p1pm

298
00:13:39,519 --> 00:13:42,240
and the time complexity for each table

299
00:13:42,240 --> 00:13:43,600
is

300
00:13:43,600 --> 00:13:45,519
n minus m

301
00:13:45,519 --> 00:13:49,839
times 2 to n minus m minus 2

302
00:13:54,959 --> 00:13:56,399
with the m

303
00:13:56,399 --> 00:13:59,440
minus 1 to stable we can access

304
00:13:59,440 --> 00:14:02,079
them and get the values for every k

305
00:14:02,079 --> 00:14:03,839
combination in j

306
00:14:03,839 --> 00:14:06,959
the equation 1 will become a linear

307
00:14:06,959 --> 00:14:10,160
expression of variables in d

308
00:14:10,160 --> 00:14:12,560
some key information can be extracted

309
00:14:12,560 --> 00:14:15,560
easily

310
00:14:17,839 --> 00:14:20,480
the time complexity consists of four

311
00:14:20,480 --> 00:14:21,519
parts

312
00:14:21,519 --> 00:14:24,079
firstly constructing the

313
00:14:24,079 --> 00:14:25,360
truth tables

314
00:14:25,360 --> 00:14:27,040
and the police

315
00:14:27,040 --> 00:14:29,519
m plus one tables

316
00:14:29,519 --> 00:14:33,360
and n minus m times 2 to n minus m minus

317
00:14:33,360 --> 00:14:35,199
2 is the

318
00:14:35,199 --> 00:14:39,360
cost to construct one table

319
00:14:39,360 --> 00:14:42,320
then we can access the

320
00:14:42,320 --> 00:14:43,600
tables on

321
00:14:43,600 --> 00:14:46,880
construct the linear equations

322
00:14:46,880 --> 00:14:48,959
and this causes

323
00:14:48,959 --> 00:14:51,519
such capacity

324
00:14:51,519 --> 00:14:54,800
in the third step we guess the value of

325
00:14:54,800 --> 00:14:57,199
m minus n bits

326
00:14:57,199 --> 00:14:59,360
then the remaining

327
00:14:59,360 --> 00:15:01,519
the remaining m bits can be determined

328
00:15:01,519 --> 00:15:03,360
by solving a set of simple linear

329
00:15:03,360 --> 00:15:05,839
equations and this step cos

330
00:15:05,839 --> 00:15:10,800
2 2 i minus n gauss's which is small

331
00:15:10,800 --> 00:15:13,440
so for each class in the sub step called

332
00:15:13,440 --> 00:15:16,399
the self oracle to verify the candidate

333
00:15:16,399 --> 00:15:18,320
by exhaustive search

334
00:15:18,320 --> 00:15:22,000
and we believe the exhaustive search

335
00:15:22,000 --> 00:15:24,399
is the dominant part of the complexity

336
00:15:24,399 --> 00:15:26,480
because

337
00:15:26,480 --> 00:15:29,519
steps the previous steps contains only

338
00:15:29,519 --> 00:15:31,920
bit operations and compared to the

339
00:15:31,920 --> 00:15:34,399
initialization of the stream software

340
00:15:34,399 --> 00:15:36,480
they are small

341
00:15:36,480 --> 00:15:37,279
the

342
00:15:37,279 --> 00:15:40,320
memory complexity

343
00:15:40,320 --> 00:15:44,160
is n times m times 2 to n

344
00:15:44,160 --> 00:15:49,519
minus m bits to store the m to stables

345
00:15:50,160 --> 00:15:52,880
finally here is our key

346
00:15:52,880 --> 00:15:55,759
results all other current best ones

347
00:15:55,759 --> 00:15:59,199
according to the wrong number

348
00:16:00,720 --> 00:16:02,880
so in

349
00:16:02,880 --> 00:16:05,360
this if in this work a new efficient

350
00:16:05,360 --> 00:16:07,120
framework with nasty the nominal

351
00:16:07,120 --> 00:16:09,759
prediction for massive body recovery is

352
00:16:09,759 --> 00:16:11,120
present here

353
00:16:11,120 --> 00:16:13,360
we also give a new recovery attack

354
00:16:13,360 --> 00:16:15,920
strategy with mobius transform for

355
00:16:15,920 --> 00:16:18,639
muscle super body recovery

356
00:16:18,639 --> 00:16:20,800
secure recovery attacks on trivium

357
00:16:20,800 --> 00:16:25,920
korean 100 green 128 a and equilibrium

358
00:16:25,920 --> 00:16:28,079
are improved

359
00:16:28,079 --> 00:16:30,880
thanks for your attention if you

360
00:16:30,880 --> 00:16:33,199
have any questions please write email to

361
00:16:33,199 --> 00:16:33,920
me

362
00:16:33,920 --> 00:16:37,160
thank you

