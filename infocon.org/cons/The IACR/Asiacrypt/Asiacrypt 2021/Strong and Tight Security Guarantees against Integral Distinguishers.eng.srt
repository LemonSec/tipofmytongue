1
00:00:00,640 --> 00:00:02,000
hello everyone and thank you for

2
00:00:02,000 --> 00:00:04,640
watching this video i am batista number

3
00:00:04,640 --> 00:00:06,720
and today i will present our paper at

4
00:00:06,720 --> 00:00:08,960
asia 2021

5
00:00:08,960 --> 00:00:10,320
which is called strong and tight

6
00:00:10,320 --> 00:00:12,559
security guarantees against instagram

7
00:00:12,559 --> 00:00:15,040
distinguishers and this is a joint work

8
00:00:15,040 --> 00:00:16,720
with philip burns kreger leander and

9
00:00:16,720 --> 00:00:18,880
usuketodo

10
00:00:18,880 --> 00:00:21,359
so the main topic is block cipher so

11
00:00:21,359 --> 00:00:23,519
block ciphers are one of the main way to

12
00:00:23,519 --> 00:00:25,359
build symmetric encryption

13
00:00:25,359 --> 00:00:28,800
and the idea is to generate a family of

14
00:00:28,800 --> 00:00:30,560
permutations

15
00:00:30,560 --> 00:00:33,120
such that to compute the encryption of a

16
00:00:33,120 --> 00:00:35,280
plaintext m

17
00:00:35,280 --> 00:00:37,360
we will simply choose a key which will

18
00:00:37,360 --> 00:00:39,280
select one of these permutations and

19
00:00:39,280 --> 00:00:41,280
then the resulting ciphertext c is

20
00:00:41,280 --> 00:00:44,000
simply the image of m's who is this

21
00:00:44,000 --> 00:00:45,360
permutation

22
00:00:45,360 --> 00:00:47,520
so an ideal block cipher would be a

23
00:00:47,520 --> 00:00:49,840
random selection of permutation and this

24
00:00:49,840 --> 00:00:52,559
is quite hard to do so in practice we

25
00:00:52,559 --> 00:00:55,360
try to beat block ciphers with approx

26
00:00:55,360 --> 00:00:57,760
which approximate this ideal block

27
00:00:57,760 --> 00:00:58,879
cipher

28
00:00:58,879 --> 00:01:00,960
so one of the way to do so is to use a

29
00:01:00,960 --> 00:01:02,960
key alternating block cipher

30
00:01:02,960 --> 00:01:05,119
so instead of designing the whole set of

31
00:01:05,119 --> 00:01:07,280
permutations all at once we will first

32
00:01:07,280 --> 00:01:09,600
design around function f and the key

33
00:01:09,600 --> 00:01:12,080
schedule and this key schedule will take

34
00:01:12,080 --> 00:01:13,680
the key k

35
00:01:13,680 --> 00:01:17,439
derive some sub keys uh k0 k1 up to kr

36
00:01:17,439 --> 00:01:19,200
and then to encrypt we will take the

37
00:01:19,200 --> 00:01:20,560
plain text at

38
00:01:20,560 --> 00:01:23,920
k0 apply the round function f at k1

39
00:01:23,920 --> 00:01:26,159
place around function f again and again

40
00:01:26,159 --> 00:01:27,920
until the end and we opted to decipher

41
00:01:27,920 --> 00:01:29,119
text

42
00:01:29,119 --> 00:01:30,159
so

43
00:01:30,159 --> 00:01:32,240
most if not all block ciphers these days

44
00:01:32,240 --> 00:01:34,799
are kiltenant log ciphers and

45
00:01:34,799 --> 00:01:38,079
one of them is for example aes

46
00:01:38,079 --> 00:01:39,920
and so we want to establish the security

47
00:01:39,920 --> 00:01:41,759
of this block cipher so how far does it

48
00:01:41,759 --> 00:01:45,360
differ from a random set of permutation

49
00:01:45,360 --> 00:01:48,320
and one example to do so is integral

50
00:01:48,320 --> 00:01:50,560
attacks so i will introduce them with an

51
00:01:50,560 --> 00:01:53,840
example on aes so it's a very well known

52
00:01:53,840 --> 00:01:56,560
integral attack but the ig is that

53
00:01:56,560 --> 00:01:59,200
we will generate a set m of two to the

54
00:01:59,200 --> 00:02:00,960
eight plain text which has the following

55
00:02:00,960 --> 00:02:03,439
structure so

56
00:02:03,439 --> 00:02:05,280
we set each

57
00:02:05,280 --> 00:02:06,320
of

58
00:02:06,320 --> 00:02:09,440
the byte of the plaintext to be some

59
00:02:09,440 --> 00:02:10,639
constant

60
00:02:10,639 --> 00:02:12,800
except one byte and the first one for

61
00:02:12,800 --> 00:02:14,640
example which will take all values so

62
00:02:14,640 --> 00:02:17,040
this leads to two to the end plain text

63
00:02:17,040 --> 00:02:19,520
and we will encrypt this uh set of

64
00:02:19,520 --> 00:02:22,560
pentax with three rounds of aes

65
00:02:22,560 --> 00:02:24,879
resulting into the synthetic text

66
00:02:24,879 --> 00:02:28,000
and something we can see is that

67
00:02:28,000 --> 00:02:30,319
if we take the sum of all of the

68
00:02:30,319 --> 00:02:32,800
ciphertexts so when i say some i mean

69
00:02:32,800 --> 00:02:34,959
the xor of all of the ciphertext

70
00:02:34,959 --> 00:02:37,519
together then whatever the value of the

71
00:02:37,519 --> 00:02:39,519
key that was used in the three

72
00:02:39,519 --> 00:02:42,319
around aes this sum will be zero so each

73
00:02:42,319 --> 00:02:43,760
byte would sum

74
00:02:43,760 --> 00:02:45,120
to zero

75
00:02:45,120 --> 00:02:47,440
and this is not really

76
00:02:47,440 --> 00:02:49,440
a behavior yet we would expect from a

77
00:02:49,440 --> 00:02:51,280
random permutation

78
00:02:51,280 --> 00:02:54,080
so this is a distinguisher so this is

79
00:02:54,080 --> 00:02:55,920
something that distinguishes a block

80
00:02:55,920 --> 00:02:58,159
cipher from an id block cipher from the

81
00:02:58,159 --> 00:03:00,159
set of found implementation and the

82
00:03:00,159 --> 00:03:01,440
important part

83
00:03:01,440 --> 00:03:03,200
important part here is that it's true

84
00:03:03,200 --> 00:03:05,760
for any key

85
00:03:05,760 --> 00:03:08,159
so in general the framework of integral

86
00:03:08,159 --> 00:03:11,040
attacks is to find such a central set m

87
00:03:11,040 --> 00:03:12,959
of plaintext so that

88
00:03:12,959 --> 00:03:15,200
the sum of the resulting ciphertext is

89
00:03:15,200 --> 00:03:18,480
always equal to 0 with 481 no matter the

90
00:03:18,480 --> 00:03:20,480
value of the key and obviously this set

91
00:03:20,480 --> 00:03:22,319
needs to be

92
00:03:22,319 --> 00:03:25,120
non-empty and also to not cover the full

93
00:03:25,120 --> 00:03:26,319
input set

94
00:03:26,319 --> 00:03:28,640
but it's something that dates by from

95
00:03:28,640 --> 00:03:30,840
quite a while now it was introduced by

96
00:03:30,840 --> 00:03:34,080
lutsen with higher order differentials

97
00:03:34,080 --> 00:03:36,000
it was then refined a bit especially

98
00:03:36,000 --> 00:03:38,319
with delta said so sets a bit like the

99
00:03:38,319 --> 00:03:40,480
previous one where some vital constant

100
00:03:40,480 --> 00:03:42,480
and other article values

101
00:03:42,480 --> 00:03:43,360
and

102
00:03:43,360 --> 00:03:45,200
i will talk a bit about it later but

103
00:03:45,200 --> 00:03:46,959
there are some links with the a f of the

104
00:03:46,959 --> 00:03:48,720
cipher so with the algebraic

105
00:03:48,720 --> 00:03:50,640
representation of the cipher

106
00:03:50,640 --> 00:03:53,200
and these days um the most common way to

107
00:03:53,200 --> 00:03:55,519
study integral attacks is to consider

108
00:03:55,519 --> 00:03:57,840
division property introduced by josuke

109
00:03:57,840 --> 00:04:00,000
todo a few years ago to actually find

110
00:04:00,000 --> 00:04:02,319
this set

111
00:04:02,319 --> 00:04:04,480
so

112
00:04:05,200 --> 00:04:06,959
integral attacks are

113
00:04:06,959 --> 00:04:08,799
the goal of integral attacks is to find

114
00:04:08,799 --> 00:04:10,799
the set m such that this release sum is

115
00:04:10,799 --> 00:04:13,519
zero so if we want to argue about the

116
00:04:13,519 --> 00:04:15,120
security of

117
00:04:15,120 --> 00:04:17,199
a block cipher against these attacks

118
00:04:17,199 --> 00:04:20,238
well we need to show that no such set

119
00:04:20,238 --> 00:04:23,280
aim of plaintext exists

120
00:04:23,280 --> 00:04:24,400
and

121
00:04:24,400 --> 00:04:26,800
to do so so we need to take a closer

122
00:04:26,800 --> 00:04:29,759
look at how we can describe a blog

123
00:04:29,759 --> 00:04:31,040
cipher

124
00:04:31,040 --> 00:04:31,840
so

125
00:04:31,840 --> 00:04:33,759
something very general is that for any

126
00:04:33,759 --> 00:04:36,080
boolean function we know that if we can

127
00:04:36,080 --> 00:04:38,560
represent this boolean function with its

128
00:04:38,560 --> 00:04:41,759
algebraic normal form so it's a nf

129
00:04:41,759 --> 00:04:43,520
which is simply writing it as a

130
00:04:43,520 --> 00:04:45,440
polynomial over f2

131
00:04:45,440 --> 00:04:47,759
and so for block cipher block cipher is

132
00:04:47,759 --> 00:04:50,560
not just a boolean function it's

133
00:04:50,560 --> 00:04:52,400
essentially a key boolean function so

134
00:04:52,400 --> 00:04:54,720
now we have a key and instead of having

135
00:04:54,720 --> 00:04:57,360
just a coefficient lambda u in f2 in

136
00:04:57,360 --> 00:04:59,280
front of each monomial

137
00:04:59,280 --> 00:05:02,560
and we will have a polynomial pu which

138
00:05:02,560 --> 00:05:05,120
depends on the key k

139
00:05:05,120 --> 00:05:06,720
so this is how we will see our block

140
00:05:06,720 --> 00:05:08,560
size first now as keyboard function and

141
00:05:08,560 --> 00:05:12,720
we have the n f given as the sum of some

142
00:05:12,720 --> 00:05:17,919
p u k times uh some monomials uh x20

143
00:05:17,919 --> 00:05:21,840
and um so something very useful um to

144
00:05:21,840 --> 00:05:24,000
study block ciphers when seeing them

145
00:05:24,000 --> 00:05:26,160
like this is the notion of algebraic

146
00:05:26,160 --> 00:05:27,120
degree

147
00:05:27,120 --> 00:05:29,600
so the algebraic degree

148
00:05:29,600 --> 00:05:32,240
is essentially just what is the degree

149
00:05:32,240 --> 00:05:34,320
of the highest monomial in x that

150
00:05:34,320 --> 00:05:36,080
appears in the a f we are only

151
00:05:36,080 --> 00:05:37,919
considering someone on earth

152
00:05:37,919 --> 00:05:39,199
in eggs

153
00:05:39,199 --> 00:05:40,880
and whatever the highest agreement

154
00:05:40,880 --> 00:05:43,039
appears in the whole inf then this is

155
00:05:43,039 --> 00:05:44,400
defined as the degree of the block

156
00:05:44,400 --> 00:05:45,840
cipher

157
00:05:45,840 --> 00:05:47,759
and

158
00:05:47,759 --> 00:05:50,400
so to show that this monomial x2u

159
00:05:50,400 --> 00:05:52,240
appears in the a f it means essentially

160
00:05:52,240 --> 00:05:54,320
that the corresponding key polynomial is

161
00:05:54,320 --> 00:05:55,360
nonzero

162
00:05:55,360 --> 00:05:58,560
and one way we could show that this

163
00:05:58,560 --> 00:06:01,280
a key polynomial p u is not zero is with

164
00:06:01,280 --> 00:06:03,280
the following nema which is very well

165
00:06:03,280 --> 00:06:05,039
known result

166
00:06:05,039 --> 00:06:06,960
which basically states that we can

167
00:06:06,960 --> 00:06:09,600
compute this polynomial p u

168
00:06:09,600 --> 00:06:14,400
by doing the sum over all x uh uh lower

169
00:06:14,400 --> 00:06:16,800
or equal to mu where lower equal for

170
00:06:16,800 --> 00:06:18,479
vectors is defined as just all

171
00:06:18,479 --> 00:06:20,960
coordinates are lower than

172
00:06:20,960 --> 00:06:22,800
or equal than the other

173
00:06:22,800 --> 00:06:24,800
and so if we do this sum over all of the

174
00:06:24,800 --> 00:06:27,919
x uh lower one or equal than u and we

175
00:06:27,919 --> 00:06:30,400
obtain pu

176
00:06:30,400 --> 00:06:31,840
and this looks very close to what we

177
00:06:31,840 --> 00:06:34,160
want for integral attacks and actually

178
00:06:34,160 --> 00:06:36,560
this is one of the ways to determine

179
00:06:36,560 --> 00:06:39,120
attacks so if we can show that the lc

180
00:06:39,120 --> 00:06:41,680
algebraic degree of block cipher is

181
00:06:41,680 --> 00:06:43,199
equal to d

182
00:06:43,199 --> 00:06:47,039
then for any u of weight levels and d

183
00:06:47,039 --> 00:06:48,960
the key polynomial p u will be zero

184
00:06:48,960 --> 00:06:51,039
otherwise it wouldn't be of the gradient

185
00:06:51,039 --> 00:06:54,000
but if this k polynomial p u is equal to

186
00:06:54,000 --> 00:06:56,639
zero this means that the sum over all of

187
00:06:56,639 --> 00:07:00,000
the x lower equals and u

188
00:07:00,000 --> 00:07:00,800
uh

189
00:07:00,800 --> 00:07:02,880
of the resulting ciphertext is equal to

190
00:07:02,880 --> 00:07:05,440
zero which is exactly what we want for

191
00:07:05,440 --> 00:07:07,520
in for an integral attack so we can

192
00:07:07,520 --> 00:07:10,160
define the set m as the set of all legs

193
00:07:10,160 --> 00:07:12,160
lower or equal to u

194
00:07:12,160 --> 00:07:14,400
and now we have a set m for which if we

195
00:07:14,400 --> 00:07:16,160
take the corresponding ciphertext also

196
00:07:16,160 --> 00:07:18,479
down to zero

197
00:07:18,479 --> 00:07:20,639
so a necessary condition we want for a

198
00:07:20,639 --> 00:07:22,319
block cipher to be immune to integral

199
00:07:22,319 --> 00:07:24,319
attacks it's obviously to have a high

200
00:07:24,319 --> 00:07:25,599
degree

201
00:07:25,599 --> 00:07:26,720
and

202
00:07:26,720 --> 00:07:28,080
so estimating the degree of a block

203
00:07:28,080 --> 00:07:30,400
cipher is not easy it was

204
00:07:30,400 --> 00:07:32,319
quite well known now to

205
00:07:32,319 --> 00:07:35,280
obtain upper bound this degree but if we

206
00:07:35,280 --> 00:07:37,120
really want to prove security the first

207
00:07:37,120 --> 00:07:38,639
step would be to show lower bounds of

208
00:07:38,639 --> 00:07:39,919
the archipelago

209
00:07:39,919 --> 00:07:42,800
and this was considered quite hard until

210
00:07:42,800 --> 00:07:46,720
last year at azure crypt uh 2020.

211
00:07:46,720 --> 00:07:48,879
and so last year at azure crypt

212
00:07:48,879 --> 00:07:51,199
we actually the same author showed how

213
00:07:51,199 --> 00:07:52,800
to compute lower bounds of the degree of

214
00:07:52,800 --> 00:07:54,160
block ciphers

215
00:07:54,160 --> 00:07:57,039
and also a few stronger notions

216
00:07:57,039 --> 00:07:59,759
and i will need to describe a bit

217
00:07:59,759 --> 00:08:01,840
what we did because our work this year

218
00:08:01,840 --> 00:08:03,280
strongly relies on the techniques

219
00:08:03,280 --> 00:08:06,400
introduced in this paper

220
00:08:06,400 --> 00:08:08,160
so the idea is that we have a block

221
00:08:08,160 --> 00:08:11,280
cipher e and we can write it's a f and

222
00:08:11,280 --> 00:08:13,440
if we develop the key polynomial p u it

223
00:08:13,440 --> 00:08:15,360
basically results in

224
00:08:15,360 --> 00:08:17,840
this expression so the sum of some

225
00:08:17,840 --> 00:08:20,879
lambda u v times k v times x to the u

226
00:08:20,879 --> 00:08:22,400
and so

227
00:08:22,400 --> 00:08:24,800
this is of the regime if we can find the

228
00:08:24,800 --> 00:08:25,599
u

229
00:08:25,599 --> 00:08:27,039
of weight d

230
00:08:27,039 --> 00:08:29,840
such that lambda u v is not zero

231
00:08:29,840 --> 00:08:30,639
and

232
00:08:30,639 --> 00:08:32,719
ideally for block cipher we want to show

233
00:08:32,719 --> 00:08:35,120
that it is of maximum degree which means

234
00:08:35,120 --> 00:08:36,958
degree n minus one

235
00:08:36,958 --> 00:08:39,200
and so there is not a lot of choice for

236
00:08:39,200 --> 00:08:41,200
this vector u

237
00:08:41,200 --> 00:08:43,360
because there are only n

238
00:08:43,360 --> 00:08:45,920
vectors of weight n minus one

239
00:08:45,920 --> 00:08:47,519
however for v

240
00:08:47,519 --> 00:08:50,160
there is a lot more freedom

241
00:08:50,160 --> 00:08:52,800
so again we are in the context of key

242
00:08:52,800 --> 00:08:54,720
alternating block cipher so we have

243
00:08:54,720 --> 00:08:56,959
sound function and between each round

244
00:08:56,959 --> 00:09:00,000
function we have a key addition

245
00:09:00,000 --> 00:09:00,959
so

246
00:09:00,959 --> 00:09:02,959
when we build block ciphers we use a key

247
00:09:02,959 --> 00:09:04,399
schedule to derive this hand function

248
00:09:04,399 --> 00:09:05,839
but to

249
00:09:05,839 --> 00:09:08,240
show this lower bound on the degree to

250
00:09:08,240 --> 00:09:10,399
basically show try to show the security

251
00:09:10,399 --> 00:09:13,040
of this block cipher we would work under

252
00:09:13,040 --> 00:09:14,399
a slightly

253
00:09:14,399 --> 00:09:15,839
stronger assumption which is that we

254
00:09:15,839 --> 00:09:17,839
have independent rankings

255
00:09:17,839 --> 00:09:18,880
and

256
00:09:18,880 --> 00:09:21,200
more specifically in the work of at

257
00:09:21,200 --> 00:09:23,440
azercrypt last year we didn't need the

258
00:09:23,440 --> 00:09:25,519
first and the last key so we are only

259
00:09:25,519 --> 00:09:27,519
considering the keys in the middle of

260
00:09:27,519 --> 00:09:29,600
the cipher and we consider them all

261
00:09:29,600 --> 00:09:30,800
independent

262
00:09:30,800 --> 00:09:34,560
so now our monomial kv is defined as

263
00:09:34,560 --> 00:09:37,279
well the following expression so

264
00:09:37,279 --> 00:09:40,000
monomial in k1 times someone i mean k2

265
00:09:40,000 --> 00:09:42,399
etc

266
00:09:42,399 --> 00:09:46,320
and um so we need to do two things we

267
00:09:46,320 --> 00:09:48,000
need to be able to show that a given

268
00:09:48,000 --> 00:09:50,399
number uv is different than zero

269
00:09:50,399 --> 00:09:51,279
and

270
00:09:51,279 --> 00:09:53,279
we also need to choose

271
00:09:53,279 --> 00:09:54,480
which v

272
00:09:54,480 --> 00:09:58,480
to use so which vi and to use to

273
00:09:58,480 --> 00:10:00,959
actually compute this lambda uv so the

274
00:10:00,959 --> 00:10:03,200
first question was uh answer that europe

275
00:10:03,200 --> 00:10:04,560
last year

276
00:10:04,560 --> 00:10:06,000
using basically a variant of the

277
00:10:06,000 --> 00:10:08,480
division property which is a

278
00:10:08,480 --> 00:10:10,959
mathematical way to

279
00:10:10,959 --> 00:10:12,800
show something so what's the degree and

280
00:10:12,800 --> 00:10:14,800
the monomials appearing in cnf for block

281
00:10:14,800 --> 00:10:16,959
cipher and what we did last year

282
00:10:16,959 --> 00:10:19,519
essentially comes down to okay how do we

283
00:10:19,519 --> 00:10:21,600
actually choose um

284
00:10:21,600 --> 00:10:23,279
the

285
00:10:23,279 --> 00:10:25,360
value as a vector of v so that we can

286
00:10:25,360 --> 00:10:27,360
actually compute this

287
00:10:27,360 --> 00:10:31,440
coefficient lambda u v in practical time

288
00:10:31,440 --> 00:10:34,000
and so yeah we can compute this lambda

289
00:10:34,000 --> 00:10:35,600
uvs and

290
00:10:35,600 --> 00:10:38,880
by doing so we can actually compute uh

291
00:10:38,880 --> 00:10:40,560
some lower bounds of the algebraic

292
00:10:40,560 --> 00:10:41,600
degree

293
00:10:41,600 --> 00:10:44,480
and with a bit more work we can even

294
00:10:44,480 --> 00:10:46,480
prove some stronger notions just a

295
00:10:46,480 --> 00:10:48,800
algebraic degree called minimum degree

296
00:10:48,800 --> 00:10:50,399
and max degree angle property which i

297
00:10:50,399 --> 00:10:52,160
will not describe here

298
00:10:52,160 --> 00:10:52,959
but

299
00:10:52,959 --> 00:10:54,800
even the stronger notions of the max

300
00:10:54,800 --> 00:10:56,640
decrement property

301
00:10:56,640 --> 00:10:58,880
was not enough to prove to prove true

302
00:10:58,880 --> 00:11:00,640
resistance to get integral attacks what

303
00:11:00,640 --> 00:11:02,480
our paper last year did was prove

304
00:11:02,480 --> 00:11:04,800
resistance against only a subset of

305
00:11:04,800 --> 00:11:06,560
integral attacks

306
00:11:06,560 --> 00:11:09,360
and moreover

307
00:11:09,360 --> 00:11:10,720
the bonds that we gave and the

308
00:11:10,720 --> 00:11:13,120
resistance the partial resistance that

309
00:11:13,120 --> 00:11:15,279
we showed was only true for a given

310
00:11:15,279 --> 00:11:16,959
number of rounds r

311
00:11:16,959 --> 00:11:19,440
but we did not provide any arguments for

312
00:11:19,440 --> 00:11:21,200
a larger number of hearts knowing that

313
00:11:21,200 --> 00:11:23,120
for example the degree is maximum

314
00:11:23,120 --> 00:11:25,600
argument so this was another problem and

315
00:11:25,600 --> 00:11:26,800
last

316
00:11:26,800 --> 00:11:28,880
computationally it was

317
00:11:28,880 --> 00:11:31,200
still quite expensive and took a lot of

318
00:11:31,200 --> 00:11:32,640
time to compute

319
00:11:32,640 --> 00:11:35,519
so our contribution and this year is to

320
00:11:35,519 --> 00:11:38,640
actually improve on all of these reports

321
00:11:38,640 --> 00:11:40,079
and

322
00:11:40,079 --> 00:11:42,560
i will mostly focus on proving actual

323
00:11:42,560 --> 00:11:46,000
resistance against integral attacks

324
00:11:46,000 --> 00:11:47,040
so

325
00:11:47,040 --> 00:11:49,360
let's come back to our initial problem

326
00:11:49,360 --> 00:11:50,560
so

327
00:11:50,560 --> 00:11:52,079
we want to

328
00:11:52,079 --> 00:11:54,079
show that there is no set aim of

329
00:11:54,079 --> 00:11:57,040
plaintext so that

330
00:11:57,200 --> 00:11:58,639
is equal to zero

331
00:11:58,639 --> 00:12:00,959
and we show that if the degree is high

332
00:12:00,959 --> 00:12:02,880
enough and discover

333
00:12:02,880 --> 00:12:06,720
some form of set m but not all of them

334
00:12:06,720 --> 00:12:08,639
so if we look

335
00:12:08,639 --> 00:12:11,920
a bit closer in a bit more details if

336
00:12:11,920 --> 00:12:13,600
there is an integral attack if there is

337
00:12:13,600 --> 00:12:15,600
such a set m so that the sum is equal to

338
00:12:15,600 --> 00:12:18,399
zero it actually means that

339
00:12:18,399 --> 00:12:21,680
the key polynomials p u are linear

340
00:12:21,680 --> 00:12:23,360
dependent

341
00:12:23,360 --> 00:12:25,839
so if we wanted to show that a given

342
00:12:25,839 --> 00:12:28,240
block cipher is resistant against the

343
00:12:28,240 --> 00:12:29,600
staggered attacks

344
00:12:29,600 --> 00:12:31,519
we will need to show that all of the 2

345
00:12:31,519 --> 00:12:34,399
to the n polynomials p u are linear

346
00:12:34,399 --> 00:12:36,000
independent

347
00:12:36,000 --> 00:12:36,720
and

348
00:12:36,720 --> 00:12:38,639
this seems very hard because

349
00:12:38,639 --> 00:12:41,839
um so each polynomial can also be uh

350
00:12:41,839 --> 00:12:43,839
developed as a polynomial so some sum of

351
00:12:43,839 --> 00:12:46,720
some lambda u v times kv

352
00:12:46,720 --> 00:12:48,000
and

353
00:12:48,000 --> 00:12:49,120
well

354
00:12:49,120 --> 00:12:51,279
each polynomial has about 2 to n

355
00:12:51,279 --> 00:12:53,200
coefficients and we have to choose the

356
00:12:53,200 --> 00:12:54,720
end polynomial so we will need to

357
00:12:54,720 --> 00:12:56,399
compute two to the m times two to the n

358
00:12:56,399 --> 00:12:58,160
coefficient and show that the following

359
00:12:58,160 --> 00:13:00,800
matrix is a full rank which

360
00:13:00,800 --> 00:13:03,040
when you consider modern block ciphers

361
00:13:03,040 --> 00:13:06,240
where n is equal to 64 for some example

362
00:13:06,240 --> 00:13:08,160
it's a very large number and it's

363
00:13:08,160 --> 00:13:11,440
absolutely not doable in practice

364
00:13:11,440 --> 00:13:14,000
so we need to do something a bit smarter

365
00:13:14,000 --> 00:13:15,360
and

366
00:13:15,360 --> 00:13:18,079
to do so we will simply use a whitening

367
00:13:18,079 --> 00:13:21,279
key so we have our block cipher e

368
00:13:21,279 --> 00:13:22,959
which depends on the key k

369
00:13:22,959 --> 00:13:23,760
and

370
00:13:23,760 --> 00:13:25,839
what we do is considering an augmented

371
00:13:25,839 --> 00:13:28,639
cipher where we just add a whitening key

372
00:13:28,639 --> 00:13:31,600
so a key k0 before the actual block

373
00:13:31,600 --> 00:13:34,480
cipher so we have the cnf of our block

374
00:13:34,480 --> 00:13:36,720
cipher ak which

375
00:13:36,720 --> 00:13:40,079
is the sum of some pu times x to the u

376
00:13:40,079 --> 00:13:42,320
and now we also have the a and f of the

377
00:13:42,320 --> 00:13:44,160
augmented block cipher which is the sum

378
00:13:44,160 --> 00:13:45,199
of some

379
00:13:45,199 --> 00:13:47,839
q v times x to the p and q v now are

380
00:13:47,839 --> 00:13:50,320
polynomials in both the key k and the

381
00:13:50,320 --> 00:13:52,480
whitening key k zero

382
00:13:52,480 --> 00:13:53,839
and

383
00:13:53,839 --> 00:13:56,720
the main theorem that we show is that

384
00:13:56,720 --> 00:13:58,560
if we consider only one output bit of

385
00:13:58,560 --> 00:14:01,040
the block cipher

386
00:14:01,040 --> 00:14:02,639
then

387
00:14:02,639 --> 00:14:05,120
um by showing that all of the

388
00:14:05,120 --> 00:14:08,800
polynomials p e i are linear independent

389
00:14:08,800 --> 00:14:10,480
so the polynomials

390
00:14:10,480 --> 00:14:12,720
in the original block cipher

391
00:14:12,720 --> 00:14:14,959
then all of the resulting polynomials in

392
00:14:14,959 --> 00:14:16,560
the augmented block cipher so the block

393
00:14:16,560 --> 00:14:18,639
cipher with a whitening key are linear

394
00:14:18,639 --> 00:14:21,199
independent so why why is this useful

395
00:14:21,199 --> 00:14:24,160
because the polynomials p i

396
00:14:24,160 --> 00:14:25,760
p e i

397
00:14:25,760 --> 00:14:28,639
are the polynomials associated with

398
00:14:28,639 --> 00:14:31,839
the vector e i which is defined as

399
00:14:31,839 --> 00:14:33,519
one in each coordinates epsilon

400
00:14:33,519 --> 00:14:35,760
coordinate i which is set to zero

401
00:14:35,760 --> 00:14:38,079
and there are only n vectors of z four

402
00:14:38,079 --> 00:14:41,199
of this form so if we are able to show

403
00:14:41,199 --> 00:14:43,680
that n polynomials are linear

404
00:14:43,680 --> 00:14:45,040
independent

405
00:14:45,040 --> 00:14:47,600
then only by adding a widening key we

406
00:14:47,600 --> 00:14:50,079
show that all of the 2 to the n

407
00:14:50,079 --> 00:14:51,839
resulting polynomials are linear

408
00:14:51,839 --> 00:14:53,440
independent so now we reduce the word

409
00:14:53,440 --> 00:14:56,800
from 2 to the n to n polynomials

410
00:14:56,800 --> 00:14:59,120
so this was only for one output bit

411
00:14:59,120 --> 00:15:01,360
block cipher obviously has more than

412
00:15:01,360 --> 00:15:04,000
just one upper bit just multiple bits

413
00:15:04,000 --> 00:15:06,480
and an attacker could

414
00:15:06,480 --> 00:15:08,639
try to see if the sum of some of this

415
00:15:08,639 --> 00:15:10,959
output bit is zero but also try to sum

416
00:15:10,959 --> 00:15:12,639
for example linear combination of output

417
00:15:12,639 --> 00:15:14,320
bits

418
00:15:14,320 --> 00:15:16,000
um so we

419
00:15:16,000 --> 00:15:18,160
don't just need to show that all of the

420
00:15:18,160 --> 00:15:19,920
output bit verifies the crm we need to

421
00:15:19,920 --> 00:15:22,240
show that any linear combination of

422
00:15:22,240 --> 00:15:24,560
output bit verifies the theorem which

423
00:15:24,560 --> 00:15:27,920
means that for any non-zero uh beta

424
00:15:27,920 --> 00:15:30,560
the inner product between beta and ek

425
00:15:30,560 --> 00:15:32,720
verifies the previous crm so this is

426
00:15:32,720 --> 00:15:34,399
just a one b uh

427
00:15:34,399 --> 00:15:36,880
one bit one output bit function

428
00:15:36,880 --> 00:15:38,480
we need to show that all of these

429
00:15:38,480 --> 00:15:40,399
functions verify the previous theorem

430
00:15:40,399 --> 00:15:41,759
and again there are two to the end of

431
00:15:41,759 --> 00:15:43,920
this function so we cannot do it very

432
00:15:43,920 --> 00:15:46,320
naively

433
00:15:46,320 --> 00:15:48,639
we need to do something a bit smarter

434
00:15:48,639 --> 00:15:49,600
and

435
00:15:49,600 --> 00:15:51,440
it's actually very

436
00:15:51,440 --> 00:15:53,759
somewhat easy to see so yeah we need to

437
00:15:53,759 --> 00:15:55,440
show that all of these functions uh so

438
00:15:55,440 --> 00:15:57,040
inner product of beta and the block

439
00:15:57,040 --> 00:15:58,480
cipher

440
00:15:58,480 --> 00:15:59,839
verifies the previous theorem which

441
00:15:59,839 --> 00:16:02,000
means that we want uh

442
00:16:02,000 --> 00:16:04,720
actually that all of the inner product

443
00:16:04,720 --> 00:16:07,279
between beta and

444
00:16:07,279 --> 00:16:10,079
the specific specific n polynomials p e

445
00:16:10,079 --> 00:16:12,000
i so associated with the weight and

446
00:16:12,000 --> 00:16:14,399
minus one vectors are linearly

447
00:16:14,399 --> 00:16:16,320
independent

448
00:16:16,320 --> 00:16:18,880
and so what this means since the p of

449
00:16:18,880 --> 00:16:22,079
p e i are vectors of polynomial is that

450
00:16:22,079 --> 00:16:24,079
we only need to focus on n squared

451
00:16:24,079 --> 00:16:26,320
polynomials and so that all of these n

452
00:16:26,320 --> 00:16:28,320
code polynomials are linearly

453
00:16:28,320 --> 00:16:30,560
independent which is much smaller than

454
00:16:30,560 --> 00:16:32,000
the two trillion polynomials we had

455
00:16:32,000 --> 00:16:34,079
before

456
00:16:34,079 --> 00:16:35,440
so we need to show that all of these

457
00:16:35,440 --> 00:16:38,160
polynomials are ordinarily independent

458
00:16:38,160 --> 00:16:39,759
and to do so well again these

459
00:16:39,759 --> 00:16:42,560
polynomials are expressed as some lambda

460
00:16:42,560 --> 00:16:43,440
u

461
00:16:43,440 --> 00:16:45,199
v times k to the v

462
00:16:45,199 --> 00:16:47,519
so we just need to find

463
00:16:47,519 --> 00:16:51,360
a few v i uh at least n squared

464
00:16:51,360 --> 00:16:54,240
such that when we write this matrix so

465
00:16:54,240 --> 00:16:56,079
the matrix of the coefficient of each

466
00:16:56,079 --> 00:16:57,519
polynomial

467
00:16:57,519 --> 00:16:59,279
and this matrix is full rank if this

468
00:16:59,279 --> 00:17:01,519
matrix is full rank and the n squared

469
00:17:01,519 --> 00:17:04,480
polynomials are linearly independent and

470
00:17:04,480 --> 00:17:07,439
we want we actually improved

471
00:17:07,439 --> 00:17:10,000
integral resistance resistance again in

472
00:17:10,000 --> 00:17:12,720
steroid attacks

473
00:17:12,720 --> 00:17:16,319
so yeah in short for block cipher ek we

474
00:17:16,319 --> 00:17:18,959
compute about and and to the for well

475
00:17:18,959 --> 00:17:20,959
chosen coefficient uv

476
00:17:20,959 --> 00:17:22,959
so that the previous matrix is full rank

477
00:17:22,959 --> 00:17:25,760
and if we are able to do so

478
00:17:25,760 --> 00:17:27,679
we show that

479
00:17:27,679 --> 00:17:29,360
the block cipher when using the

480
00:17:29,360 --> 00:17:31,120
whitening key

481
00:17:31,120 --> 00:17:32,559
fulfills the integral resistance

482
00:17:32,559 --> 00:17:34,080
property which means that the block

483
00:17:34,080 --> 00:17:36,640
cipher is immune to integral attacks and

484
00:17:36,640 --> 00:17:38,960
we can compute this lambda uvs using

485
00:17:38,960 --> 00:17:39,760
what

486
00:17:39,760 --> 00:17:43,600
we did last year at azercrude

487
00:17:43,600 --> 00:17:46,300
however a small caveat is that

488
00:17:46,300 --> 00:17:47,840
[Music]

489
00:17:47,840 --> 00:17:50,240
it was still uh only using the work from

490
00:17:50,240 --> 00:17:52,400
the azure clip last year

491
00:17:52,400 --> 00:17:55,280
was a bit slow uh it was still very um

492
00:17:55,280 --> 00:17:58,000
computationally hard and

493
00:17:58,000 --> 00:17:59,840
even if some result could have been

494
00:17:59,840 --> 00:18:01,600
achieved just doing it naively wouldn't

495
00:18:01,600 --> 00:18:04,799
work essentially the issue is that

496
00:18:04,799 --> 00:18:06,080
to

497
00:18:06,080 --> 00:18:08,240
compute this lambda uv's we need to

498
00:18:08,240 --> 00:18:10,320
count the number of solutions in an minp

499
00:18:10,320 --> 00:18:12,720
problem so a linear programming

500
00:18:12,720 --> 00:18:13,679
problem

501
00:18:13,679 --> 00:18:16,799
and general this is quite hard

502
00:18:16,799 --> 00:18:18,559
so what we did to improve this is

503
00:18:18,559 --> 00:18:20,640
essentially try to reduce the number of

504
00:18:20,640 --> 00:18:22,799
solutions to these problems

505
00:18:22,799 --> 00:18:26,559
and a big observation was that if we are

506
00:18:26,559 --> 00:18:28,240
working on a block cipher which has a

507
00:18:28,240 --> 00:18:30,799
one wise linear layer so a near layer

508
00:18:30,799 --> 00:18:32,080
working on

509
00:18:32,080 --> 00:18:33,280
bytes on

510
00:18:33,280 --> 00:18:34,320
nibbles

511
00:18:34,320 --> 00:18:35,360
um

512
00:18:35,360 --> 00:18:37,280
we can have equivalent representation of

513
00:18:37,280 --> 00:18:40,320
the cipher and more specifically

514
00:18:40,320 --> 00:18:43,280
if the ciphers are used in s box s

515
00:18:43,280 --> 00:18:46,480
we can instead use an s box s prime

516
00:18:46,480 --> 00:18:48,080
which is defined as a following which is

517
00:18:48,080 --> 00:18:51,440
just a special case of a fin equivalence

518
00:18:51,440 --> 00:18:53,760
uh so that assuming independent one case

519
00:18:53,760 --> 00:18:55,679
that like we did in the beginning

520
00:18:55,679 --> 00:18:57,760
we have equivalent ciphers

521
00:18:57,760 --> 00:19:00,240
so now instead of just one cipher we

522
00:19:00,240 --> 00:19:01,679
have actually

523
00:19:01,679 --> 00:19:04,320
quite a few of them about two to the 22

524
00:19:04,320 --> 00:19:06,400
if the xbox is over four bits

525
00:19:06,400 --> 00:19:07,919
and

526
00:19:07,919 --> 00:19:10,160
what we did was design some heuristic

527
00:19:10,160 --> 00:19:12,080
criteria to pick which representation to

528
00:19:12,080 --> 00:19:14,400
use so that the number of solutions in

529
00:19:14,400 --> 00:19:16,160
the milp problem

530
00:19:16,160 --> 00:19:18,640
would be rather small so we can actually

531
00:19:18,640 --> 00:19:21,120
measure the solution and so obtain our

532
00:19:21,120 --> 00:19:22,840
result which is computing this lambda

533
00:19:22,840 --> 00:19:26,000
uv's and so we designed these heuristics

534
00:19:26,000 --> 00:19:28,320
we also um

535
00:19:28,320 --> 00:19:31,520
show how to actually choose v in the

536
00:19:31,520 --> 00:19:33,520
smart way so that we have a lot of

537
00:19:33,520 --> 00:19:36,240
lambda uvs which are automatically

538
00:19:36,240 --> 00:19:38,000
equals to zero without doing any

539
00:19:38,000 --> 00:19:41,360
computation just by design if we choose

540
00:19:41,360 --> 00:19:43,280
v properly we know for sure that some

541
00:19:43,280 --> 00:19:44,880
coefficients will be zero and the matrix

542
00:19:44,880 --> 00:19:47,440
which heavily reduce the number of

543
00:19:47,440 --> 00:19:49,440
coefficients we need to compute

544
00:19:49,440 --> 00:19:51,360
and also using some symmetries and some

545
00:19:51,360 --> 00:19:52,799
block ciphers we can also reduce the

546
00:19:52,799 --> 00:19:55,600
number of coefficients

547
00:19:55,679 --> 00:19:58,720
and so a notable example is that

548
00:19:58,720 --> 00:20:00,640
we are able to get results on the

549
00:20:00,640 --> 00:20:02,880
blockchain for craft while last year we

550
00:20:02,880 --> 00:20:04,320
were not able to without this

551
00:20:04,320 --> 00:20:06,799
improvement

552
00:20:06,799 --> 00:20:08,480
so

553
00:20:08,480 --> 00:20:10,960
to give a summary of what we showed here

554
00:20:10,960 --> 00:20:12,559
are the number of fronts we are able to

555
00:20:12,559 --> 00:20:15,440
push on our several blocks i first

556
00:20:15,440 --> 00:20:18,080
so in the second column i'll give the

557
00:20:18,080 --> 00:20:19,840
number of rounds for which we know the

558
00:20:19,840 --> 00:20:22,000
longest integral at a integral

559
00:20:22,000 --> 00:20:23,600
distinguisher

560
00:20:23,600 --> 00:20:24,480
and

561
00:20:24,480 --> 00:20:26,080
on the last column

562
00:20:26,080 --> 00:20:27,520
i showed the number of rounds we were

563
00:20:27,520 --> 00:20:29,120
able to prove to be resistant again

564
00:20:29,120 --> 00:20:31,840
integral attacks and in the head you can

565
00:20:31,840 --> 00:20:34,880
see all of the results which are dyed

566
00:20:34,880 --> 00:20:37,039
which means that

567
00:20:37,039 --> 00:20:39,440
there is no improvement possible we know

568
00:20:39,440 --> 00:20:40,240
that

569
00:20:40,240 --> 00:20:42,640
the best integral distinguisher is

570
00:20:42,640 --> 00:20:44,880
oneness round that

571
00:20:44,880 --> 00:20:46,480
the number of hand we were able to prove

572
00:20:46,480 --> 00:20:47,760
to be resistant to integral

573
00:20:47,760 --> 00:20:50,320
distinguishes so you can see that for uh

574
00:20:50,320 --> 00:20:52,880
gift and present there is still some

575
00:20:52,880 --> 00:20:55,039
margin it doesn't mean that there is

576
00:20:55,039 --> 00:20:57,600
necessarily an attack on for example

577
00:20:57,600 --> 00:20:59,600
eleven round of gift it just had

578
00:20:59,600 --> 00:21:02,720
computationally we were not able to

579
00:21:02,720 --> 00:21:05,440
show that 11 rounds of gift is resistant

580
00:21:05,440 --> 00:21:06,559
to

581
00:21:06,559 --> 00:21:08,400
integral attacks it might be possible

582
00:21:08,400 --> 00:21:10,960
but there are still some improvement we

583
00:21:10,960 --> 00:21:13,440
can do here

584
00:21:13,440 --> 00:21:15,120
so i showed how

585
00:21:15,120 --> 00:21:17,360
to improve resistance again integral

586
00:21:17,360 --> 00:21:19,840
attacks how we improved

587
00:21:19,840 --> 00:21:22,559
the computational aspect and our last

588
00:21:22,559 --> 00:21:24,320
point is

589
00:21:24,320 --> 00:21:26,159
what about neurons

590
00:21:26,159 --> 00:21:27,919
so i assure that a given number of

591
00:21:27,919 --> 00:21:30,240
fronts is immune to integral attacks but

592
00:21:30,240 --> 00:21:31,600
what happened for morons you would

593
00:21:31,600 --> 00:21:33,919
despite obviously that it works and if

594
00:21:33,919 --> 00:21:36,000
ions are new then our prime rounds are

595
00:21:36,000 --> 00:21:38,480
also immune and in practice it's a bit

596
00:21:38,480 --> 00:21:41,039
more complicated so if we

597
00:21:41,039 --> 00:21:43,440
just consider the algebraic degree

598
00:21:43,440 --> 00:21:45,600
and we take two very simple functions so

599
00:21:45,600 --> 00:21:48,880
the two functions here f and e

600
00:21:48,880 --> 00:21:50,559
both of these functions are degree two

601
00:21:50,559 --> 00:21:53,200
but if we compose these functions even

602
00:21:53,200 --> 00:21:55,039
with adding a key in the middle and the

603
00:21:55,039 --> 00:21:58,000
resulting function is of degree one

604
00:21:58,000 --> 00:22:00,159
so what we can see that the algebraic

605
00:22:00,159 --> 00:22:02,720
degree in general is not preserved

606
00:22:02,720 --> 00:22:03,840
and

607
00:22:03,840 --> 00:22:05,520
so we cannot give automatically give

608
00:22:05,520 --> 00:22:08,400
guarantees however in the paper and i

609
00:22:08,400 --> 00:22:10,080
recommend you to see this if you are

610
00:22:10,080 --> 00:22:12,400
interested in interested into details we

611
00:22:12,400 --> 00:22:14,320
can actually characterize when the

612
00:22:14,320 --> 00:22:17,760
algebraic degree is preserved

613
00:22:18,240 --> 00:22:22,000
now if we look at integral resistance so

614
00:22:22,000 --> 00:22:24,640
if we show that

615
00:22:24,640 --> 00:22:26,400
a block cipher okay is

616
00:22:26,400 --> 00:22:29,280
resistant again integral attacks then in

617
00:22:29,280 --> 00:22:31,280
this case it's a lot easier because we

618
00:22:31,280 --> 00:22:33,200
are able to show that for any

619
00:22:33,200 --> 00:22:35,679
permutation f adding this permutation at

620
00:22:35,679 --> 00:22:37,520
the input of the cipher also results in

621
00:22:37,520 --> 00:22:40,400
something that is immune to

622
00:22:40,400 --> 00:22:42,559
integral attacks and this is very easy

623
00:22:42,559 --> 00:22:44,080
to see it's just that if we are the

624
00:22:44,080 --> 00:22:45,840
permutation of the input

625
00:22:45,840 --> 00:22:49,760
then at the end we also obtain a sum of

626
00:22:49,760 --> 00:22:51,840
um

627
00:22:51,840 --> 00:22:52,640
some

628
00:22:52,640 --> 00:22:54,559
set so f of m

629
00:22:54,559 --> 00:22:56,400
of some linear combination of the output

630
00:22:56,400 --> 00:22:58,640
bits and we show that all of these sum

631
00:22:58,640 --> 00:22:59,760
are

632
00:22:59,760 --> 00:23:01,919
non-zero uh which essentially means that

633
00:23:01,919 --> 00:23:04,080
it depends on the key

634
00:23:04,080 --> 00:23:06,320
so for integral resistance everything

635
00:23:06,320 --> 00:23:08,960
happens nicely if we are able to show

636
00:23:08,960 --> 00:23:11,039
that our grounds of cypher are immune to

637
00:23:11,039 --> 00:23:12,559
integral attacks and

638
00:23:12,559 --> 00:23:14,960
any number of uh

639
00:23:14,960 --> 00:23:18,480
any higher number of front is also

640
00:23:19,280 --> 00:23:20,640
so to conclude

641
00:23:20,640 --> 00:23:23,200
there are still some um

642
00:23:23,200 --> 00:23:25,520
ways to improve our work so it's still

643
00:23:25,520 --> 00:23:27,679
quite a bit intense our intensive on

644
00:23:27,679 --> 00:23:29,520
computation so we would like to make it

645
00:23:29,520 --> 00:23:31,679
faster we would like to design

646
00:23:31,679 --> 00:23:33,440
even better heuristic and understand

647
00:23:33,440 --> 00:23:36,159
this heuristics better and we would also

648
00:23:36,159 --> 00:23:38,000
like to make it more usable because for

649
00:23:38,000 --> 00:23:40,559
now for each block cipher we actually

650
00:23:40,559 --> 00:23:41,840
need

651
00:23:41,840 --> 00:23:44,080
a few tweaks here and there to

652
00:23:44,080 --> 00:23:44,960
actually

653
00:23:44,960 --> 00:23:46,720
really improve

654
00:23:46,720 --> 00:23:48,720
the speed and actually have practical

655
00:23:48,720 --> 00:23:50,000
results so there are still some more

656
00:23:50,000 --> 00:23:51,440
works to explore

657
00:23:51,440 --> 00:23:54,240
and yeah thank you very much for your

658
00:23:54,240 --> 00:23:56,880
interest in this talk and i hope to see

659
00:23:56,880 --> 00:23:59,039
you next week at the live

660
00:23:59,039 --> 00:24:00,080
talks

661
00:24:00,080 --> 00:24:03,240
for azure

