1
00:00:11,840 --> 00:00:15,280
okay so uh can i start

2
00:00:15,519 --> 00:00:16,880
yes

3
00:00:16,880 --> 00:00:17,760
okay

4
00:00:17,760 --> 00:00:18,880
uh

5
00:00:18,880 --> 00:00:21,119
uh so welcome to the session of quantum

6
00:00:21,119 --> 00:00:23,760
security i am atino hussain

7
00:00:23,760 --> 00:00:25,760
and we'll serve as the session cheers

8
00:00:25,760 --> 00:00:28,240
with andreas harrison

9
00:00:28,240 --> 00:00:30,480
this session has seven talks

10
00:00:30,480 --> 00:00:32,880
each talk is given five minutes followed

11
00:00:32,880 --> 00:00:35,360
by five minutes to runways

12
00:00:35,360 --> 00:00:37,680
if you have any questions on the talks

13
00:00:37,680 --> 00:00:40,160
please write them on the journey chat or

14
00:00:40,160 --> 00:00:43,200
the chat or zoom

15
00:00:43,200 --> 00:00:47,120
and so the first talk of this session

16
00:00:47,120 --> 00:00:49,600
is on the non-tightness of measurement

17
00:00:49,600 --> 00:00:51,840
based reactions for key encapsulation

18
00:00:51,840 --> 00:00:53,760
mechanism in the quantum random oracle

19
00:00:53,760 --> 00:00:55,840
model by how don't you

20
00:00:55,840 --> 00:00:58,840
finish

21
00:01:08,080 --> 00:01:11,080
okay

22
00:01:48,880 --> 00:01:52,640
we saw your slides for a moment there

23
00:01:52,840 --> 00:01:56,640
okay actually

24
00:01:58,320 --> 00:02:01,200
uh if we have any technical difficulties

25
00:02:01,200 --> 00:02:03,680
on showing us right i would like to over

26
00:02:03,680 --> 00:02:08,000
you to the last of this session

27
00:02:08,000 --> 00:02:11,440
are you able to share your screen

28
00:02:12,239 --> 00:02:15,920
okay let me try again i'm sorry

29
00:02:17,920 --> 00:02:20,920
okay

30
00:02:22,800 --> 00:02:25,040
okay

31
00:02:28,319 --> 00:02:30,958
it looks good

32
00:02:33,120 --> 00:02:36,239
you should do it in full screen mode

33
00:02:36,239 --> 00:02:37,760
right

34
00:02:37,760 --> 00:02:39,120
yes

35
00:02:39,120 --> 00:02:41,519
okay okay i'm sorry

36
00:02:41,519 --> 00:02:43,920
and i'm talking about the paper on the

37
00:02:43,920 --> 00:02:46,400
90s of a merriment based reduction for

38
00:02:46,400 --> 00:02:48,800
camp in the quantum realm local model

39
00:02:48,800 --> 00:02:50,400
this is a jungle with the dream

40
00:02:50,400 --> 00:02:53,280
fundraiser and the gym

41
00:02:54,319 --> 00:02:56,400
the quantum cryptography is to design

42
00:02:56,400 --> 00:02:58,560
classical cryptosystems that remain

43
00:02:58,560 --> 00:03:01,120
secure for a quantum adversary recently

44
00:03:01,120 --> 00:03:04,159
nissa launched our pqc project and

45
00:03:04,159 --> 00:03:06,800
published a cover proposal for pke

46
00:03:06,800 --> 00:03:09,200
signature and cam in particular more

47
00:03:09,200 --> 00:03:13,119
than half of the submissions are camps

48
00:03:14,400 --> 00:03:17,200
in this submission they first construct

49
00:03:17,200 --> 00:03:20,319
a cp's qrpke anderson use a generic

50
00:03:20,319 --> 00:03:23,040
transform called the physical model

51
00:03:23,040 --> 00:03:24,560
to build a

52
00:03:24,560 --> 00:03:27,519
cc secure cam we usually call such a

53
00:03:27,519 --> 00:03:30,799
transformer by f4 in short i feel like a

54
00:03:30,799 --> 00:03:32,959
generic constructions are based on an

55
00:03:32,959 --> 00:03:34,879
idealized model called the random oracle

56
00:03:34,879 --> 00:03:35,920
model

57
00:03:35,920 --> 00:03:37,840
uh in a quantum world where improving

58
00:03:37,840 --> 00:03:39,840
post corner security

59
00:03:39,840 --> 00:03:41,519
and when you already needs the quantum

60
00:03:41,519 --> 00:03:43,680
renault model where the adversary can

61
00:03:43,680 --> 00:03:47,840
call the red marker with a quantum state

62
00:03:49,120 --> 00:03:51,519
typically when proving uh

63
00:03:51,519 --> 00:03:52,640
security of

64
00:03:52,640 --> 00:03:54,560
our scheme when usually construct a

65
00:03:54,560 --> 00:03:57,599
reduction that runs anniversary as a

66
00:03:57,599 --> 00:03:59,200
subroutine to break the underlying

67
00:03:59,200 --> 00:04:00,640
harder problem

68
00:04:00,640 --> 00:04:03,360
in the random work model improving the

69
00:04:03,360 --> 00:04:05,760
industrial ability when you only use a

70
00:04:05,760 --> 00:04:08,319
quite basic reduction that use a high

71
00:04:08,319 --> 00:04:10,159
quality from the adversary to break the

72
00:04:10,159 --> 00:04:12,239
underlying hard problem

73
00:04:12,239 --> 00:04:15,040
such as improving the effort transform

74
00:04:15,040 --> 00:04:19,600
the reactor team br oep and so on

75
00:04:19,600 --> 00:04:22,479
in the quantum renault model the quantum

76
00:04:22,479 --> 00:04:25,120
counterpart of coil based reduction is

77
00:04:25,120 --> 00:04:27,759
called environmental based reduction

78
00:04:27,759 --> 00:04:29,440
that measures our query from the

79
00:04:29,440 --> 00:04:31,680
adversary and they use the outcome to

80
00:04:31,680 --> 00:04:35,280
break the underlying heart problem

81
00:04:37,120 --> 00:04:39,360
reduction is called black box if it

82
00:04:39,360 --> 00:04:41,759
mainly uses the adversary's input output

83
00:04:41,759 --> 00:04:43,120
behavior

84
00:04:43,120 --> 00:04:44,400
well

85
00:04:44,400 --> 00:04:46,000
non-black box reduction requires the

86
00:04:46,000 --> 00:04:48,400
knowledge of but versus the internals

87
00:04:48,400 --> 00:04:52,000
for example adversary codes

88
00:04:55,120 --> 00:04:56,639
header reduction with the smaller

89
00:04:56,639 --> 00:04:59,280
tetanus and tennis gap are desirable for

90
00:04:59,280 --> 00:05:00,639
practice

91
00:05:00,639 --> 00:05:03,919
for iphone consortiums from standard cp

92
00:05:03,919 --> 00:05:05,840
assumptions test reduction can be

93
00:05:05,840 --> 00:05:08,720
achieved in a black box manner in the

94
00:05:08,720 --> 00:05:10,880
random local model

95
00:05:10,880 --> 00:05:13,680
however all the quantum render model

96
00:05:13,680 --> 00:05:17,039
reductions are handheld and most of them

97
00:05:17,039 --> 00:05:20,080
are measurement based

98
00:05:22,160 --> 00:05:24,240
in particular the current black box

99
00:05:24,240 --> 00:05:26,800
reductions have a quadratic security

100
00:05:26,800 --> 00:05:27,919
loss

101
00:05:27,919 --> 00:05:29,600
although these uh although these

102
00:05:29,600 --> 00:05:31,600
quadratic security laws can be avoided

103
00:05:31,600 --> 00:05:34,639
by a number box reduction uh that

104
00:05:34,639 --> 00:05:36,639
reliance uh let us

105
00:05:36,639 --> 00:05:38,400
newly introduced technique called the

106
00:05:38,400 --> 00:05:40,639
marijuana measure that

107
00:05:40,639 --> 00:05:43,360
part of this technique can only apply to

108
00:05:43,360 --> 00:05:46,720
reversible adversaries

109
00:05:47,520 --> 00:05:49,600
well the current black box reductions

110
00:05:49,600 --> 00:05:52,160
can cover arbitrary adversaries this is

111
00:05:52,160 --> 00:05:54,160
quite different from the results in the

112
00:05:54,160 --> 00:05:55,840
random local model

113
00:05:55,840 --> 00:05:58,080
where our linear security loss can be

114
00:05:58,080 --> 00:06:01,199
achieved in a black box manner

115
00:06:01,199 --> 00:06:03,360
the

116
00:06:04,080 --> 00:06:06,319
quadratic security loss erased from the

117
00:06:06,319 --> 00:06:08,400
usage of the volume to hiding technique

118
00:06:08,400 --> 00:06:10,080
the way to hide in technique is an

119
00:06:10,080 --> 00:06:12,720
essential technique to prove to prove

120
00:06:12,720 --> 00:06:15,520
quantum security of a crypto system it

121
00:06:15,520 --> 00:06:17,840
gives a reduction from a such problem to

122
00:06:17,840 --> 00:06:19,680
a decision problem

123
00:06:19,680 --> 00:06:21,759
recently several works tried to improve

124
00:06:21,759 --> 00:06:24,240
the tennis of the webinar hiding however

125
00:06:24,240 --> 00:06:27,120
as in the case of apholectric camps the

126
00:06:27,120 --> 00:06:30,080
tennis improvements are only restricted

127
00:06:30,080 --> 00:06:32,960
to the fact of the of reduction loss and

128
00:06:32,960 --> 00:06:37,280
the quadratic securities still exists

129
00:06:40,240 --> 00:06:42,639
a natural question is that for every lag

130
00:06:42,639 --> 00:06:45,840
camps and the under the hiding technique

131
00:06:45,840 --> 00:06:48,160
is the quranic secular loss avoidable

132
00:06:48,160 --> 00:06:50,160
for environment-based black box

133
00:06:50,160 --> 00:06:52,800
reduction

134
00:06:53,759 --> 00:06:56,800
in this paper i will give a formal

135
00:06:56,800 --> 00:06:58,800
affirmative answer for the above

136
00:06:58,800 --> 00:07:00,800
question forever like a camps which you

137
00:07:00,800 --> 00:07:02,479
we should environment based the black

138
00:07:02,479 --> 00:07:05,360
box reduction from breaking the standard

139
00:07:05,360 --> 00:07:08,000
the cpu security of the underlying gpu

140
00:07:08,000 --> 00:07:10,560
to breaking the cc security

141
00:07:10,560 --> 00:07:12,720
and the resulting cam will inevitably

142
00:07:12,720 --> 00:07:15,440
incur quadratic securities

143
00:07:15,440 --> 00:07:18,319
such a impossibility result can also be

144
00:07:18,319 --> 00:07:20,639
extended to the chinese limits of the

145
00:07:20,639 --> 00:07:23,360
general general

146
00:07:23,360 --> 00:07:26,800
black box around the heading

147
00:07:29,199 --> 00:07:31,120
main techniques is that we first

148
00:07:31,120 --> 00:07:34,560
construct a specific quantum adversary

149
00:07:34,560 --> 00:07:36,560
that breaks the cc security of the

150
00:07:36,560 --> 00:07:38,319
resulting camp by acquiring the random

151
00:07:38,319 --> 00:07:41,280
vocal with a well-designed quantum state

152
00:07:41,280 --> 00:07:42,840
and serving a

153
00:07:42,840 --> 00:07:44,879
discrimination problem between two

154
00:07:44,879 --> 00:07:46,160
quantum states

155
00:07:46,160 --> 00:07:49,039
the advantage of this spec

156
00:07:49,039 --> 00:07:51,599
of this basic adversary is at least

157
00:07:51,599 --> 00:07:56,240
square root p p is a positive real

158
00:07:57,039 --> 00:07:59,039
and using the metal reduction we show

159
00:07:59,039 --> 00:08:01,280
that an environment based on black box

160
00:08:01,280 --> 00:08:03,919
reduction that runs its basic adversary

161
00:08:03,919 --> 00:08:06,639
as a subroutine to break to break the

162
00:08:06,639 --> 00:08:08,879
standard swiss gold here of the

163
00:08:08,879 --> 00:08:11,120
underlying cheeky url now we have around

164
00:08:11,120 --> 00:08:13,840
the atmosphere

165
00:08:13,840 --> 00:08:16,400
combining these two points we can get

166
00:08:16,400 --> 00:08:19,120
our results

167
00:08:19,680 --> 00:08:24,759
this is a short summary of our work

168
00:08:27,599 --> 00:08:29,199
okay okay

169
00:08:29,199 --> 00:08:32,639
uh thanks for listening

170
00:08:34,799 --> 00:08:37,120
thank you for the talk um i don't see

171
00:08:37,120 --> 00:08:38,839
questions in the chat

172
00:08:38,839 --> 00:08:41,440
i is there anyone that has a question or

173
00:08:41,440 --> 00:08:44,320
wants to unmute

174
00:08:45,839 --> 00:08:48,080
otherwise i think we're already a bit

175
00:08:48,080 --> 00:08:50,000
ahead of time so uh

176
00:08:50,000 --> 00:08:50,959
maybe

177
00:08:50,959 --> 00:08:54,959
we proceed to the next talk

178
00:08:54,959 --> 00:08:59,680
okay same uh thank you again for uh

179
00:08:59,680 --> 00:09:04,320
so i would like to move to the next talk

180
00:09:04,320 --> 00:09:07,320
the next talk is redeeming reset in

181
00:09:07,320 --> 00:09:09,680
differentiability and applications to

182
00:09:09,680 --> 00:09:12,640
post quantum security by mark gendry and

183
00:09:12,640 --> 00:09:14,640
mark chandlery religious group

184
00:09:14,640 --> 00:09:17,279
mark please

185
00:09:17,360 --> 00:09:18,480
all right

186
00:09:18,480 --> 00:09:22,160
can everyone see my slides

187
00:09:22,160 --> 00:09:23,120
yes

188
00:09:23,120 --> 00:09:24,640
all right great

189
00:09:24,640 --> 00:09:26,800
um

190
00:09:26,800 --> 00:09:29,519
so in this talk will be about

191
00:09:29,519 --> 00:09:31,279
indifferentiability

192
00:09:31,279 --> 00:09:33,839
uh indifferentiability is a

193
00:09:33,839 --> 00:09:36,320
strengthening of indistinguishability

194
00:09:36,320 --> 00:09:38,080
which is used when you're trying to

195
00:09:38,080 --> 00:09:39,120
build

196
00:09:39,120 --> 00:09:42,000
one idealized object from another here

197
00:09:42,000 --> 00:09:43,519
i've diagrammed

198
00:09:43,519 --> 00:09:44,800
the case where you're trying to build a

199
00:09:44,800 --> 00:09:46,959
random oracle from a random permutation

200
00:09:46,959 --> 00:09:49,839
p and p inverse

201
00:09:49,839 --> 00:09:51,760
called an ideal cipher

202
00:09:51,760 --> 00:09:53,519
our goal is to justify that the

203
00:09:53,519 --> 00:09:56,640
resulting construction that we call c

204
00:09:56,640 --> 00:09:59,680
is in some sense as good as an ideal

205
00:09:59,680 --> 00:10:01,680
hash function also called a random

206
00:10:01,680 --> 00:10:04,880
oracle and in differentiability is a way

207
00:10:04,880 --> 00:10:08,079
to formalize this goal

208
00:10:08,079 --> 00:10:10,160
indifferentiability can be seen as a

209
00:10:10,160 --> 00:10:12,880
form of universal composability for

210
00:10:12,880 --> 00:10:14,720
idealized objects

211
00:10:14,720 --> 00:10:16,880
and indeed malware at all show that

212
00:10:16,880 --> 00:10:19,279
indifferentiability composes well and

213
00:10:19,279 --> 00:10:20,880
also that interdifferentiable

214
00:10:20,880 --> 00:10:22,880
constructions are as good as the ideal

215
00:10:22,880 --> 00:10:23,920
object

216
00:10:23,920 --> 00:10:26,320
in the sense that it implies security in

217
00:10:26,320 --> 00:10:29,200
what are known as single stage games

218
00:10:29,200 --> 00:10:31,440
single stage games are games making up

219
00:10:31,440 --> 00:10:33,920
most of cryptography where a single

220
00:10:33,920 --> 00:10:37,600
adversary interacts with the challenger

221
00:10:37,600 --> 00:10:39,680
because of these nice properties proofs

222
00:10:39,680 --> 00:10:42,000
of interference ability have become a

223
00:10:42,000 --> 00:10:44,720
popular way to justify the security of

224
00:10:44,720 --> 00:10:48,560
cryptosystems such as hash functions

225
00:10:49,360 --> 00:10:51,360
for general multi-stage gains

226
00:10:51,360 --> 00:10:52,399
unfortunately plane and

227
00:10:52,399 --> 00:10:55,440
differentiability is insufficient

228
00:10:55,440 --> 00:10:58,399
multi-stage games are those like kdm

229
00:10:58,399 --> 00:11:01,120
security deterministic public encryption

230
00:11:01,120 --> 00:11:04,079
leakage resilience and so forth

231
00:11:04,079 --> 00:11:06,560
where there are multiple

232
00:11:06,560 --> 00:11:08,720
adversary parties interacting with the

233
00:11:08,720 --> 00:11:10,720
challenger

234
00:11:10,720 --> 00:11:12,720
for these kind of games we instead need

235
00:11:12,720 --> 00:11:14,959
a strengthening of indifferentiability

236
00:11:14,959 --> 00:11:17,519
called reset and differentiability which

237
00:11:17,519 --> 00:11:20,720
looks basically identical to plane and

238
00:11:20,720 --> 00:11:23,360
differentiability with the important

239
00:11:23,360 --> 00:11:26,320
difference that the simulator in the

240
00:11:26,320 --> 00:11:27,760
definition

241
00:11:27,760 --> 00:11:31,200
is required to be stateless

242
00:11:32,560 --> 00:11:34,800
but there is an analogous

243
00:11:34,800 --> 00:11:36,560
theorem by wrist and part at all that

244
00:11:36,560 --> 00:11:37,760
shows that

245
00:11:37,760 --> 00:11:38,720
if you're

246
00:11:38,720 --> 00:11:40,480
if you are able to have a stateless

247
00:11:40,480 --> 00:11:41,680
simulator

248
00:11:41,680 --> 00:11:42,560
then

249
00:11:42,560 --> 00:11:45,200
you get composition and security in

250
00:11:45,200 --> 00:11:48,240
multi-stage games

251
00:11:49,600 --> 00:11:53,040
unfortunately reset to differentiability

252
00:11:53,040 --> 00:11:55,120
has some limitations

253
00:11:55,120 --> 00:11:57,440
the main one being that something called

254
00:11:57,440 --> 00:11:59,839
domain extension is impossible

255
00:11:59,839 --> 00:12:02,079
so domain extension is taking any small

256
00:12:02,079 --> 00:12:04,320
domain ideal object

257
00:12:04,320 --> 00:12:06,639
like a small compression function

258
00:12:06,639 --> 00:12:08,880
and constructing a large domain object

259
00:12:08,880 --> 00:12:10,800
such

260
00:12:10,800 --> 00:12:12,399
as what you would do with merkle dam

261
00:12:12,399 --> 00:12:13,360
guard

262
00:12:13,360 --> 00:12:14,320
or

263
00:12:14,320 --> 00:12:15,760
the sponge construction is also a

264
00:12:15,760 --> 00:12:18,800
version of domain extension taking a

265
00:12:18,800 --> 00:12:20,639
small permutation small ideal

266
00:12:20,639 --> 00:12:23,200
permutation and constructing a

267
00:12:23,200 --> 00:12:26,240
large hash function

268
00:12:26,480 --> 00:12:28,399
as domain extension has been one of the

269
00:12:28,399 --> 00:12:31,920
main applications of indifferentiability

270
00:12:31,920 --> 00:12:34,160
this strong the strong impossibility has

271
00:12:34,160 --> 00:12:35,920
more or less led to recent

272
00:12:35,920 --> 00:12:37,360
indifferentiability

273
00:12:37,360 --> 00:12:39,200
being abandoned with

274
00:12:39,200 --> 00:12:41,360
relatively few subsequent works in the

275
00:12:41,360 --> 00:12:43,760
area

276
00:12:44,480 --> 00:12:47,200
so our starting point for this work is

277
00:12:47,200 --> 00:12:49,519
two observations

278
00:12:49,519 --> 00:12:51,760
first we observe that domain extension

279
00:12:51,760 --> 00:12:54,000
is not always necessary

280
00:12:54,000 --> 00:12:56,079
for example when using a random oracle

281
00:12:56,079 --> 00:12:57,360
to construct

282
00:12:57,360 --> 00:13:00,639
say deterministic public encryption

283
00:13:00,639 --> 00:13:04,000
if the size of your messages are bounded

284
00:13:04,000 --> 00:13:05,839
then it turns out you only need a fixed

285
00:13:05,839 --> 00:13:09,519
domain random oracle

286
00:13:10,560 --> 00:13:12,720
the second observation is that basically

287
00:13:12,720 --> 00:13:14,720
nothing is known about reset

288
00:13:14,720 --> 00:13:17,200
indifferentiability beyond the

289
00:13:17,200 --> 00:13:20,480
impossibility of domain extension

290
00:13:20,480 --> 00:13:23,200
prior work somewhat surprisingly didn't

291
00:13:23,200 --> 00:13:25,600
even establish whether you could

292
00:13:25,600 --> 00:13:28,639
shrink the domain take a large

293
00:13:28,639 --> 00:13:30,800
ideal hash function and construct a

294
00:13:30,800 --> 00:13:33,360
small ideal hash function

295
00:13:33,360 --> 00:13:35,360
now this seems like it would be trivial

296
00:13:35,360 --> 00:13:37,760
but it turns out that doing this with a

297
00:13:37,760 --> 00:13:39,440
stateless simulator is actually not

298
00:13:39,440 --> 00:13:40,959
obvious

299
00:13:40,959 --> 00:13:44,079
um other interesting open questions

300
00:13:44,079 --> 00:13:46,880
include whether you can build a fixed

301
00:13:46,880 --> 00:13:49,199
size random oracle from an ideal cipher

302
00:13:49,199 --> 00:13:52,079
and vice versa

303
00:13:54,160 --> 00:13:56,639
so this leads us to our work

304
00:13:56,639 --> 00:13:59,040
where we give a handful of new results

305
00:13:59,040 --> 00:14:03,480
on reset and differentiability

306
00:14:04,160 --> 00:14:06,720
first we prove that

307
00:14:06,720 --> 00:14:08,079
domain extent

308
00:14:08,079 --> 00:14:09,920
sorry domain shrinkage

309
00:14:09,920 --> 00:14:11,920
is in fact possible with reset

310
00:14:11,920 --> 00:14:13,600
interferenceability

311
00:14:13,600 --> 00:14:14,880
using

312
00:14:14,880 --> 00:14:16,880
the obvious construction where you just

313
00:14:16,880 --> 00:14:18,959
sort of pad out the domain with

314
00:14:18,959 --> 00:14:21,120
with zeros

315
00:14:21,120 --> 00:14:23,279
and then hash with the bigger

316
00:14:23,279 --> 00:14:25,040
hash function

317
00:14:25,040 --> 00:14:26,000
to get a small one

318
00:14:26,000 --> 00:14:28,560
[Music]

319
00:14:28,560 --> 00:14:30,720
we also investigate the natural approach

320
00:14:30,720 --> 00:14:32,720
to building a random oracle from a

321
00:14:32,720 --> 00:14:34,560
random permutation

322
00:14:34,560 --> 00:14:36,720
where you first pad the input and then

323
00:14:36,720 --> 00:14:38,320
truncate the output you can think of

324
00:14:38,320 --> 00:14:41,680
this as the sponge construction for

325
00:14:41,680 --> 00:14:43,120
a single block

326
00:14:43,120 --> 00:14:44,959
and we show that as long as the sum of

327
00:14:44,959 --> 00:14:47,360
the input and output lengths

328
00:14:47,360 --> 00:14:50,720
are at most the block length of the

329
00:14:50,720 --> 00:14:52,800
ideal cipher that you get reset in

330
00:14:52,800 --> 00:14:55,680
differentiability

331
00:14:55,680 --> 00:14:56,959
on the other hand we show that this

332
00:14:56,959 --> 00:14:58,959
restriction on input and output length

333
00:14:58,959 --> 00:15:02,000
are necessary and by giving an explicit

334
00:15:02,000 --> 00:15:04,240
reset indifferentiability attack

335
00:15:04,240 --> 00:15:06,399
if the input length plus output length

336
00:15:06,399 --> 00:15:08,160
exceed the block length

337
00:15:08,160 --> 00:15:10,079
of the permutation and this is in

338
00:15:10,079 --> 00:15:11,199
contrast to the plane and

339
00:15:11,199 --> 00:15:13,040
differentiability setting

340
00:15:13,040 --> 00:15:15,199
where basically any non-trivial amount

341
00:15:15,199 --> 00:15:17,199
of padding and truncating will get you

342
00:15:17,199 --> 00:15:19,760
security

343
00:15:20,000 --> 00:15:22,240
then the final

344
00:15:22,240 --> 00:15:24,720
result is basically showing that all of

345
00:15:24,720 --> 00:15:25,440
our

346
00:15:25,440 --> 00:15:28,800
results lift to the quantum setting

347
00:15:28,800 --> 00:15:31,040
and why this is interesting is that

348
00:15:31,040 --> 00:15:32,720
reset interferentiability is actually

349
00:15:32,720 --> 00:15:34,399
very amenable to quantum proof

350
00:15:34,399 --> 00:15:36,320
techniques and previous quantum and

351
00:15:36,320 --> 00:15:38,639
differentiability results required

352
00:15:38,639 --> 00:15:41,680
sophisticated quantum machinery

353
00:15:41,680 --> 00:15:43,920
on the other hand we don't need this and

354
00:15:43,920 --> 00:15:47,600
our proofs are relatively accessible

355
00:15:47,600 --> 00:15:50,480
and as a consequence we give

356
00:15:50,480 --> 00:15:53,600
we show that ideal ciphers in particular

357
00:15:53,600 --> 00:15:56,000
give random oracles

358
00:15:56,000 --> 00:15:58,240
which was previously unknown quantumly

359
00:15:58,240 --> 00:16:00,160
even if we were to ignore recent

360
00:16:00,160 --> 00:16:01,680
interpretability so even under plane and

361
00:16:01,680 --> 00:16:03,680
differentiability this was

362
00:16:03,680 --> 00:16:06,800
not previously known

363
00:16:06,800 --> 00:16:11,359
right so that's all i have thanks

364
00:16:15,519 --> 00:16:17,519
thanks a lot for the talk

365
00:16:17,519 --> 00:16:20,160
are there any questions in the zoom chat

366
00:16:20,160 --> 00:16:23,839
i don't see any um

367
00:16:25,199 --> 00:16:27,440
wait a second

368
00:16:27,440 --> 00:16:29,199
if there are some

369
00:16:29,199 --> 00:16:31,920
insulip

370
00:16:34,480 --> 00:16:36,800
so to this point um i've had one

371
00:16:36,800 --> 00:16:38,399
question maybe i didn't manage to read

372
00:16:38,399 --> 00:16:41,519
the paper yet but uh is the idea to

373
00:16:41,519 --> 00:16:44,720
essentially reprogram the

374
00:16:44,720 --> 00:16:48,079
the permutation or

375
00:16:48,480 --> 00:16:51,519
yeah so um

376
00:16:51,519 --> 00:16:54,560
uh in my longer slides i i i have it

377
00:16:54,560 --> 00:16:57,199
diagram just so there's there's a couple

378
00:16:57,199 --> 00:16:59,759
uh here let me actually here

379
00:16:59,759 --> 00:17:01,839
so there's a there's a couple

380
00:17:01,839 --> 00:17:04,400
um bits that are needed so first so for

381
00:17:04,400 --> 00:17:05,359
domain

382
00:17:05,359 --> 00:17:06,640
shrinkage

383
00:17:06,640 --> 00:17:07,839
um

384
00:17:07,839 --> 00:17:10,480
basically what we need is a way to

385
00:17:10,480 --> 00:17:12,959
simulate the the part of the domain that

386
00:17:12,959 --> 00:17:15,199
we're truncating and we need to be able

387
00:17:15,199 --> 00:17:18,160
to do this without state

388
00:17:18,160 --> 00:17:20,880
and basically what we show is that you

389
00:17:20,880 --> 00:17:21,760
can

390
00:17:21,760 --> 00:17:23,520
kind of

391
00:17:23,520 --> 00:17:25,439
steal part of the

392
00:17:25,439 --> 00:17:27,520
the random oracle that the simulator has

393
00:17:27,520 --> 00:17:28,640
access to

394
00:17:28,640 --> 00:17:32,640
and use that as sort of a um

395
00:17:32,640 --> 00:17:34,480
it's kind of a state that you is

396
00:17:34,480 --> 00:17:35,840
immutable

397
00:17:35,840 --> 00:17:36,960
um

398
00:17:36,960 --> 00:17:40,720
and so we show how we can actually

399
00:17:40,720 --> 00:17:42,799
essentially get if the simulator has

400
00:17:42,799 --> 00:17:45,039
access to a random oracle that you can

401
00:17:45,039 --> 00:17:47,520
simulate additional random workables

402
00:17:47,520 --> 00:17:49,120
additional

403
00:17:49,120 --> 00:17:51,679
ideal permutations or whatever you need

404
00:17:51,679 --> 00:17:56,320
in order to you know fill out the domain

405
00:17:58,000 --> 00:17:59,520
and then for

406
00:17:59,520 --> 00:18:00,880
constructing

407
00:18:00,880 --> 00:18:04,240
uh random articles from ideal ciphers

408
00:18:04,240 --> 00:18:06,559
what we need to do is what we basically

409
00:18:06,559 --> 00:18:07,280
do

410
00:18:07,280 --> 00:18:09,200
is we need to allow our stateless

411
00:18:09,200 --> 00:18:10,559
simulator

412
00:18:10,559 --> 00:18:14,240
to be able to um

413
00:18:14,240 --> 00:18:15,520
you know answer

414
00:18:15,520 --> 00:18:16,799
the

415
00:18:16,799 --> 00:18:18,559
permutation queries and apparently also

416
00:18:18,559 --> 00:18:20,559
the inverse queries

417
00:18:20,559 --> 00:18:21,520
and

418
00:18:21,520 --> 00:18:24,880
the way we do that is we

419
00:18:24,880 --> 00:18:28,080
we simulate in the permutations in a way

420
00:18:28,080 --> 00:18:28,799
where

421
00:18:28,799 --> 00:18:32,000
in this um sort of the junk part that we

422
00:18:32,000 --> 00:18:33,840
are throwing away

423
00:18:33,840 --> 00:18:36,160
we actually encode

424
00:18:36,160 --> 00:18:38,160
using more ideal ciphers and random

425
00:18:38,160 --> 00:18:40,000
oracles and whatnot we actually encode

426
00:18:40,000 --> 00:18:41,760
information about the input in the

427
00:18:41,760 --> 00:18:43,919
stateless way that allows the simulator

428
00:18:43,919 --> 00:18:46,720
to know how to invert it

429
00:18:46,720 --> 00:18:47,520
um

430
00:18:47,520 --> 00:18:48,410
and then our

431
00:18:48,410 --> 00:18:50,400
[Music]

432
00:18:50,400 --> 00:18:52,720
sort of barrier or impossibility here is

433
00:18:52,720 --> 00:18:53,840
sort of

434
00:18:53,840 --> 00:18:55,200
essentially what it shows us that that

435
00:18:55,200 --> 00:18:57,120
is necessary that the only way you can

436
00:18:57,120 --> 00:19:00,000
simulate is if you can encode the

437
00:19:00,000 --> 00:19:01,520
the input

438
00:19:01,520 --> 00:19:04,480
into this trash uh bits that you throw

439
00:19:04,480 --> 00:19:07,280
away and that gives the

440
00:19:07,280 --> 00:19:10,080
the desired inequality

441
00:19:10,080 --> 00:19:12,559
i see

442
00:19:12,640 --> 00:19:15,120
thanks a lot sir there's no question

443
00:19:15,120 --> 00:19:17,360
anymore in sudip then i would say we

444
00:19:17,360 --> 00:19:20,559
continue to the next talk thanks again

445
00:19:20,559 --> 00:19:21,520
thank you

446
00:19:21,520 --> 00:19:24,760
thank you

447
00:19:26,320 --> 00:19:29,039
okay then i'd like to move to the next

448
00:19:29,039 --> 00:19:30,559
talk

449
00:19:30,559 --> 00:19:33,039
the next talk is franchised quantum

450
00:19:33,039 --> 00:19:36,320
money by uh basker robots and mark

451
00:19:36,320 --> 00:19:38,559
chandra i hope my pronunciation is

452
00:19:38,559 --> 00:19:40,880
correct and the

453
00:19:40,880 --> 00:19:43,760
vascular robots ready that looks

454
00:19:43,760 --> 00:19:46,320
are you ready

455
00:19:50,240 --> 00:19:51,600
hi

456
00:19:51,600 --> 00:19:54,240
uh so my name is bosker uh

457
00:19:54,240 --> 00:19:57,360
and today i'll be talking about some

458
00:19:57,360 --> 00:19:59,600
work that i did on quantum money with

459
00:19:59,600 --> 00:20:02,840
mark sandri

460
00:20:08,960 --> 00:20:11,039
okay so

461
00:20:11,039 --> 00:20:13,440
we are interested in studying uh quantum

462
00:20:13,440 --> 00:20:16,960
money which seeks to use quantum states

463
00:20:16,960 --> 00:20:20,799
uh to create uh basically unclonable uh

464
00:20:20,799 --> 00:20:22,240
banknotes

465
00:20:22,240 --> 00:20:24,159
uh this is not something that digital

466
00:20:24,159 --> 00:20:27,120
currency could achieve classically

467
00:20:27,120 --> 00:20:29,200
uh but thanks to the no cloning theorem

468
00:20:29,200 --> 00:20:31,760
we at least have hope that it's possible

469
00:20:31,760 --> 00:20:35,480
using quantum information

470
00:20:35,679 --> 00:20:37,679
so in particular

471
00:20:37,679 --> 00:20:38,559
the

472
00:20:38,559 --> 00:20:40,320
banknotes or the money scheme that we're

473
00:20:40,320 --> 00:20:41,520
designing

474
00:20:41,520 --> 00:20:43,520
should have two properties

475
00:20:43,520 --> 00:20:45,679
the first is unclonability this means

476
00:20:45,679 --> 00:20:48,080
that if an adversary is given and

477
00:20:48,080 --> 00:20:49,760
banknotes they shouldn't be able to

478
00:20:49,760 --> 00:20:50,720
produce

479
00:20:50,720 --> 00:20:53,520
uh n plus one banknotes that all

480
00:20:53,520 --> 00:20:55,679
pass verification and look like valid

481
00:20:55,679 --> 00:20:56,960
money

482
00:20:56,960 --> 00:20:59,600
um the second uh property that we want

483
00:20:59,600 --> 00:21:03,360
is called local verification

484
00:21:03,360 --> 00:21:05,200
this means that it should be possible

485
00:21:05,200 --> 00:21:08,000
for anyone even an untrusted user

486
00:21:08,000 --> 00:21:10,799
to verify the bank notes without

487
00:21:10,799 --> 00:21:14,000
communicating with the bank or any other

488
00:21:14,000 --> 00:21:15,679
trusted third party

489
00:21:15,679 --> 00:21:17,360
during verification

490
00:21:17,360 --> 00:21:19,120
so we call this local verification

491
00:21:19,120 --> 00:21:20,720
because there's no communication that

492
00:21:20,720 --> 00:21:22,559
needs to be done to a

493
00:21:22,559 --> 00:21:23,919
far off

494
00:21:23,919 --> 00:21:26,480
trusted third party

495
00:21:26,480 --> 00:21:28,720
so

496
00:21:29,039 --> 00:21:30,720
in particular

497
00:21:30,720 --> 00:21:32,320
the field of quantum money has been

498
00:21:32,320 --> 00:21:35,919
interested in public key quantum money

499
00:21:35,919 --> 00:21:38,720
in which there's a single public key

500
00:21:38,720 --> 00:21:40,799
that anyone can use to verify banknotes

501
00:21:40,799 --> 00:21:43,799
locally

502
00:21:46,640 --> 00:21:48,320
so i'm interested in studying the

503
00:21:48,320 --> 00:21:50,480
quantum money problem because it seems

504
00:21:50,480 --> 00:21:52,960
foundational to the study of unclonable

505
00:21:52,960 --> 00:21:54,799
cryptographic primitives

506
00:21:54,799 --> 00:21:56,320
uh in recent years there have been

507
00:21:56,320 --> 00:21:58,480
proposals for a variety of unclonable

508
00:21:58,480 --> 00:21:59,600
primitives

509
00:21:59,600 --> 00:22:02,000
such as copy protection copy detection

510
00:22:02,000 --> 00:22:03,280
etc

511
00:22:03,280 --> 00:22:06,720
and these constructions generally use

512
00:22:06,720 --> 00:22:08,000
techniques that were originally

513
00:22:08,000 --> 00:22:10,880
developed for quantum money

514
00:22:10,880 --> 00:22:13,120
and so my approach is

515
00:22:13,120 --> 00:22:15,440
by developing really good techniques for

516
00:22:15,440 --> 00:22:17,120
the quantum money problem

517
00:22:17,120 --> 00:22:18,960
uh hopefully they'll generalize and

518
00:22:18,960 --> 00:22:20,880
allow us to construct a variety of

519
00:22:20,880 --> 00:22:24,000
unclonable primitives

520
00:22:24,640 --> 00:22:27,840
uh any questions so far

521
00:22:31,840 --> 00:22:34,080
i don't think so

522
00:22:34,080 --> 00:22:36,159
cool

523
00:22:36,159 --> 00:22:38,159
so the state of

524
00:22:38,159 --> 00:22:41,039
public key quantum money is uh there

525
00:22:41,039 --> 00:22:43,039
have been a variety of

526
00:22:43,039 --> 00:22:44,159
attempts

527
00:22:44,159 --> 00:22:45,760
to construct public key quantum money

528
00:22:45,760 --> 00:22:47,280
over the past decade

529
00:22:47,280 --> 00:22:49,280
um but none of them have

530
00:22:49,280 --> 00:22:51,360
sort of succeeded in constructing public

531
00:22:51,360 --> 00:22:53,679
key quantum money from well-studied

532
00:22:53,679 --> 00:22:56,240
assumptions

533
00:22:56,720 --> 00:22:57,840
there was a

534
00:22:57,840 --> 00:22:59,600
recent line of work that constructed

535
00:22:59,600 --> 00:23:01,440
public key quantum money from

536
00:23:01,440 --> 00:23:03,600
post-quantum secure i o

537
00:23:03,600 --> 00:23:05,039
but of course we don't have

538
00:23:05,039 --> 00:23:07,200
constructions of that from well-studied

539
00:23:07,200 --> 00:23:09,840
assumptions

540
00:23:12,000 --> 00:23:13,760
so this work

541
00:23:13,760 --> 00:23:16,320
takes a slightly different approach

542
00:23:16,320 --> 00:23:18,240
we'll define a new form of quantum money

543
00:23:18,240 --> 00:23:20,880
called franchised quantum money which is

544
00:23:20,880 --> 00:23:23,120
weaker than public key quantum money and

545
00:23:23,120 --> 00:23:24,640
easier to construct

546
00:23:24,640 --> 00:23:26,640
but it achieves the two properties that

547
00:23:26,640 --> 00:23:28,080
we care about

548
00:23:28,080 --> 00:23:29,919
which are unclonability and local

549
00:23:29,919 --> 00:23:31,600
verification

550
00:23:31,600 --> 00:23:33,520
previously public key quantum money was

551
00:23:33,520 --> 00:23:35,600
the only primitive that achieved those

552
00:23:35,600 --> 00:23:36,960
properties

553
00:23:36,960 --> 00:23:38,799
so the fact that we can achieve this

554
00:23:38,799 --> 00:23:42,000
without meeting public key

555
00:23:42,000 --> 00:23:43,279
is

556
00:23:43,279 --> 00:23:45,840
surprising

557
00:23:45,840 --> 00:23:48,480
the main idea is this so in public key

558
00:23:48,480 --> 00:23:51,679
quantum money verification is done using

559
00:23:51,679 --> 00:23:54,320
a single public key that anyone has

560
00:23:54,320 --> 00:23:57,279
access to including adversaries

561
00:23:57,279 --> 00:23:59,840
in franchised quantum money anyone who

562
00:23:59,840 --> 00:24:02,799
wants to verify a bank note can get a

563
00:24:02,799 --> 00:24:05,279
unique secret key

564
00:24:05,279 --> 00:24:07,520
to use for verifying banknotes

565
00:24:07,520 --> 00:24:08,240
so

566
00:24:08,240 --> 00:24:10,000
this means even an adversary could

567
00:24:10,000 --> 00:24:13,120
request a unique secret key

568
00:24:13,120 --> 00:24:16,320
and the scheme would remain secure

569
00:24:16,320 --> 00:24:18,960
so every key can be used to verify every

570
00:24:18,960 --> 00:24:20,080
banknote

571
00:24:20,080 --> 00:24:21,679
and the security guarantee that we'll

572
00:24:21,679 --> 00:24:24,799
give is as long as you keep your key

573
00:24:24,799 --> 00:24:25,760
secret

574
00:24:25,760 --> 00:24:27,679
nobody can fool you

575
00:24:27,679 --> 00:24:33,159
um into accepting an invalid banknote

576
00:24:34,159 --> 00:24:34,960
to

577
00:24:34,960 --> 00:24:36,320
i guess to illustrate the difference

578
00:24:36,320 --> 00:24:38,720
between these two definitions

579
00:24:38,720 --> 00:24:41,760
if you leak your key accidentally in the

580
00:24:41,760 --> 00:24:43,200
franchised model

581
00:24:43,200 --> 00:24:44,840
in other words if you make your key

582
00:24:44,840 --> 00:24:47,679
public the security guarantees no longer

583
00:24:47,679 --> 00:24:50,000
hold and it might be possible for an

584
00:24:50,000 --> 00:24:54,159
adversary to create a fake banknote that

585
00:24:54,159 --> 00:24:55,760
looks like the real thing when you're

586
00:24:55,760 --> 00:24:59,720
using that key for verification

587
00:25:00,640 --> 00:25:03,279
any questions

588
00:25:06,640 --> 00:25:08,480
i don't think so yet

589
00:25:08,480 --> 00:25:10,000
cool

590
00:25:10,000 --> 00:25:12,320
also people in the

591
00:25:12,320 --> 00:25:14,480
in the call feel free to to ask as we go

592
00:25:14,480 --> 00:25:16,799
along

593
00:25:18,320 --> 00:25:19,360
okay

594
00:25:19,360 --> 00:25:22,320
so the um construction that we give i'll

595
00:25:22,320 --> 00:25:24,720
just summarize it at like ten thousand

596
00:25:24,720 --> 00:25:25,600
feet

597
00:25:25,600 --> 00:25:27,679
um basically

598
00:25:27,679 --> 00:25:29,360
when we try to construct public key

599
00:25:29,360 --> 00:25:31,679
quantum money the problem that we

600
00:25:31,679 --> 00:25:34,400
generally run into is

601
00:25:34,400 --> 00:25:36,640
the verification key also gives the

602
00:25:36,640 --> 00:25:38,880
adversary enough information to

603
00:25:38,880 --> 00:25:40,880
counterfeit successfully

604
00:25:40,880 --> 00:25:43,360
so our approach is to take this

605
00:25:43,360 --> 00:25:44,960
verification key

606
00:25:44,960 --> 00:25:47,440
split it into lots of pieces and then

607
00:25:47,440 --> 00:25:52,559
give each verifier one piece of the key

608
00:25:52,559 --> 00:25:54,480
so in our construction even having a

609
00:25:54,480 --> 00:25:56,480
single piece of the key

610
00:25:56,480 --> 00:25:59,440
is sufficient to verify the banknotes

611
00:25:59,440 --> 00:26:02,880
but because an adversary given one key

612
00:26:02,880 --> 00:26:05,279
doesn't know any of the other pieces

613
00:26:05,279 --> 00:26:07,279
it's hard for them to create fake

614
00:26:07,279 --> 00:26:10,240
banknotes that will fool verifiers using

615
00:26:10,240 --> 00:26:13,279
one of the other pieces

616
00:26:14,000 --> 00:26:15,360
in a little bit more detail our

617
00:26:15,360 --> 00:26:17,840
construction is based on the proposal

618
00:26:17,840 --> 00:26:20,880
for quantum money from hidden subspaces

619
00:26:20,880 --> 00:26:21,840
so

620
00:26:21,840 --> 00:26:25,039
the master key would be a description of

621
00:26:25,039 --> 00:26:25,919
this

622
00:26:25,919 --> 00:26:28,880
subspace which has n over two dimensions

623
00:26:28,880 --> 00:26:31,200
and in our construction

624
00:26:31,200 --> 00:26:33,840
each franchised verification key is a

625
00:26:33,840 --> 00:26:35,840
small number of dimensions from that

626
00:26:35,840 --> 00:26:37,600
subspace

627
00:26:37,600 --> 00:26:40,799
and so each verifier just gets a small

628
00:26:40,799 --> 00:26:45,440
random subspace from the hidden subspace

629
00:26:46,640 --> 00:26:48,960
finally our construction requires a

630
00:26:48,960 --> 00:26:50,640
collusion bound

631
00:26:50,640 --> 00:26:53,360
so this means that uh we guarantee that

632
00:26:53,360 --> 00:26:57,520
our scheme is secure but only if uh

633
00:26:57,520 --> 00:26:59,679
like the number of colluding adversaries

634
00:26:59,679 --> 00:27:02,799
is uh o of square root n

635
00:27:02,799 --> 00:27:04,000
um

636
00:27:04,000 --> 00:27:06,720
what we find is that if if multiple

637
00:27:06,720 --> 00:27:09,600
verifiers are dishonest and if they

638
00:27:09,600 --> 00:27:12,159
collude and pull their keys together

639
00:27:12,159 --> 00:27:14,159
uh they can learn quite a bit about the

640
00:27:14,159 --> 00:27:15,919
master secret key

641
00:27:15,919 --> 00:27:17,120
and if there are

642
00:27:17,120 --> 00:27:18,720
more than square root n of them they can

643
00:27:18,720 --> 00:27:21,919
learn the entire master secret key

644
00:27:21,919 --> 00:27:22,799
um

645
00:27:22,799 --> 00:27:24,080
so

646
00:27:24,080 --> 00:27:26,720
the collision bound is a barrier to

647
00:27:26,720 --> 00:27:28,960
making this construction practical but

648
00:27:28,960 --> 00:27:30,399
we believe it can be

649
00:27:30,399 --> 00:27:32,320
improved and even eliminated in future

650
00:27:32,320 --> 00:27:35,320
work

651
00:27:36,559 --> 00:27:38,320
cool that's it

652
00:27:38,320 --> 00:27:40,720
any questions

653
00:27:40,720 --> 00:27:42,159
thanks a lot

654
00:27:42,159 --> 00:27:44,000
um

655
00:27:44,000 --> 00:27:46,480
do we have any questions i don't see any

656
00:27:46,480 --> 00:27:49,840
in the zoom chat

657
00:27:50,159 --> 00:27:51,600
and sulip

658
00:27:51,600 --> 00:27:55,199
there's also nothing yet

659
00:27:55,360 --> 00:27:57,200
so maybe in the interest of time we move

660
00:27:57,200 --> 00:27:59,679
on because we still have port clocks i

661
00:27:59,679 --> 00:28:02,320
think

662
00:28:02,320 --> 00:28:04,559
yeah i think so

663
00:28:04,559 --> 00:28:07,039
uh so if uh

664
00:28:07,039 --> 00:28:10,000
if you have any talks on the talks uh if

665
00:28:10,000 --> 00:28:12,000
you are sorry if you have any questions

666
00:28:12,000 --> 00:28:14,320
on the talks please uh write them on

667
00:28:14,320 --> 00:28:18,320
your lipsense or the attack on zoom

668
00:28:18,320 --> 00:28:21,039
and so next i would like to

669
00:28:21,039 --> 00:28:23,840
move to the next strokes

670
00:28:23,840 --> 00:28:25,919
the next talk is

671
00:28:25,919 --> 00:28:27,760
quantum computational

672
00:28:27,760 --> 00:28:30,000
predicate binding commitments with

673
00:28:30,000 --> 00:28:32,399
application in quantum zero knowledge

674
00:28:32,399 --> 00:28:35,520
arguments for nlp by jung yang

675
00:28:35,520 --> 00:28:37,679
and the junior religious

676
00:28:37,679 --> 00:28:40,000
please hi hi thanks

677
00:28:40,000 --> 00:28:45,240
so first let me share my screen

678
00:28:45,760 --> 00:28:48,760
okay

679
00:29:03,360 --> 00:29:04,480
okay uh

680
00:29:04,480 --> 00:29:06,080
can you hear me

681
00:29:06,080 --> 00:29:08,320
yes hi can i hear you and i can you see

682
00:29:08,320 --> 00:29:09,600
he was right

683
00:29:09,600 --> 00:29:12,799
okay thanks okay let me begin

684
00:29:12,799 --> 00:29:16,000
my name is ji yen from china university

685
00:29:16,000 --> 00:29:18,000
and the title of my talk today is

686
00:29:18,000 --> 00:29:20,240
quantum computationally practical

687
00:29:20,240 --> 00:29:22,320
binding commitments with their

688
00:29:22,320 --> 00:29:25,360
application in quantum zero knowledge

689
00:29:25,360 --> 00:29:27,840
arguments for mp

690
00:29:27,840 --> 00:29:28,960
okay

691
00:29:28,960 --> 00:29:31,919
so let me first state my our main

692
00:29:31,919 --> 00:29:33,120
results

693
00:29:33,120 --> 00:29:35,200
we know that from quantum secure when we

694
00:29:35,200 --> 00:29:37,679
function we can construct a quantum bit

695
00:29:37,679 --> 00:29:38,799
commitment

696
00:29:38,799 --> 00:29:41,440
that is in particular computationally

697
00:29:41,440 --> 00:29:42,399
binding

698
00:29:42,399 --> 00:29:44,640
however we know that with the general

699
00:29:44,640 --> 00:29:46,960
quantum binding the committed value is

700
00:29:46,960 --> 00:29:49,200
no longer unique it could be a

701
00:29:49,200 --> 00:29:51,200
superposition

702
00:29:51,200 --> 00:29:52,159
so

703
00:29:52,159 --> 00:29:54,880
it's natural to ask uh what happened uh

704
00:29:54,880 --> 00:29:57,600
if we compose quantum bit commitment in

705
00:29:57,600 --> 00:30:00,240
parallel to commit as gene which is

706
00:30:00,240 --> 00:30:03,039
typical in application

707
00:30:03,039 --> 00:30:05,440
we ask what binding property can a

708
00:30:05,440 --> 00:30:07,200
resulting quantum stream commitment

709
00:30:07,200 --> 00:30:09,360
scheme that satisfy

710
00:30:09,360 --> 00:30:10,080
is

711
00:30:10,080 --> 00:30:13,120
is it useful in applications

712
00:30:13,120 --> 00:30:15,760
this question has been opened for

713
00:30:15,760 --> 00:30:17,760
almost two decades

714
00:30:17,760 --> 00:30:20,159
and in this work i will make a first

715
00:30:20,159 --> 00:30:22,720
step towards answering these questions

716
00:30:22,720 --> 00:30:25,200
so in particular i will prove

717
00:30:25,200 --> 00:30:27,919
the following so-called computational

718
00:30:27,919 --> 00:30:30,159
practical binding property

719
00:30:30,159 --> 00:30:32,640
that is any polynomial time boundary

720
00:30:32,640 --> 00:30:35,120
center cannot open commitment in two

721
00:30:35,120 --> 00:30:38,320
ways third to satisfy two inconsistent

722
00:30:38,320 --> 00:30:42,559
predicates at respect respectively

723
00:30:42,559 --> 00:30:44,799
and this is the first nontrivial quantum

724
00:30:44,799 --> 00:30:47,279
computational stream binding that is

725
00:30:47,279 --> 00:30:50,159
both useful and can be instantiated with

726
00:30:50,159 --> 00:30:52,159
the minimal complex complexity

727
00:30:52,159 --> 00:30:54,320
assumption

728
00:30:54,320 --> 00:30:57,279
and if we plug quantum bit commitments

729
00:30:57,279 --> 00:30:59,600
in bloom's zero knowledge protocol we

730
00:30:59,600 --> 00:31:01,600
obtain the first quantum material

731
00:31:01,600 --> 00:31:04,399
knowledge arguments for mp solely based

732
00:31:04,399 --> 00:31:06,720
on final secure runway functions

733
00:31:06,720 --> 00:31:10,880
but with soundness error at one half

734
00:31:12,399 --> 00:31:15,519
and the main technical part of this work

735
00:31:15,519 --> 00:31:18,159
lies in establishing these computational

736
00:31:18,159 --> 00:31:21,360
practical binding property

737
00:31:21,360 --> 00:31:24,399
okay this is our main result and now let

738
00:31:24,399 --> 00:31:27,679
me introduce two important concepts that

739
00:31:27,679 --> 00:31:29,600
are introduced in this work

740
00:31:29,600 --> 00:31:32,240
namely patent predicate and stream

741
00:31:32,240 --> 00:31:33,760
practical binding

742
00:31:33,760 --> 00:31:35,440
they are motivated by the soundness

743
00:31:35,440 --> 00:31:38,080
analysis of bloom's protocol

744
00:31:38,080 --> 00:31:40,720
but we believe a layer of independent

745
00:31:40,720 --> 00:31:42,880
interest and generally enough in

746
00:31:42,880 --> 00:31:45,880
elsewhere

747
00:31:46,559 --> 00:31:49,360
so a patent for a patent predict uh

748
00:31:49,360 --> 00:31:51,519
first first gene to satisfy such a

749
00:31:51,519 --> 00:31:54,480
predict predict it should exhibit a

750
00:31:54,480 --> 00:31:57,120
certain pattern somewhere

751
00:31:57,120 --> 00:31:59,840
and i will not remark that a weakness

752
00:31:59,840 --> 00:32:02,240
might be needed to compute the pattern

753
00:32:02,240 --> 00:32:05,440
or where it locates in polynomial time

754
00:32:05,440 --> 00:32:07,919
for example i will consider a bloom's

755
00:32:07,919 --> 00:32:09,679
protocol that qualifies final

756
00:32:09,679 --> 00:32:12,960
verification induces two particles

757
00:32:12,960 --> 00:32:15,519
p0 and p1 corresponding to the

758
00:32:15,519 --> 00:32:17,679
qualifier's challenge 0 and 1

759
00:32:17,679 --> 00:32:19,120
respectively

760
00:32:19,120 --> 00:32:22,320
for the practical practical p0 a pattern

761
00:32:22,320 --> 00:32:23,360
is just

762
00:32:23,360 --> 00:32:24,880
just a whole stream

763
00:32:24,880 --> 00:32:27,039
that should be like in photographs of

764
00:32:27,039 --> 00:32:28,640
some permutation

765
00:32:28,640 --> 00:32:32,320
with the sunnis is just a permutation pi

766
00:32:32,320 --> 00:32:35,360
a silica selected by the plural

767
00:32:35,360 --> 00:32:38,480
for the plastic political p1 the pattern

768
00:32:38,480 --> 00:32:41,919
is n1's let it form an n cycle and the

769
00:32:41,919 --> 00:32:43,679
witness is

770
00:32:43,679 --> 00:32:46,880
the location of a hamiltonian cycle

771
00:32:46,880 --> 00:32:49,360
these two predicates are in consists

772
00:32:49,360 --> 00:32:52,640
consistent when the input graph g is not

773
00:32:52,640 --> 00:32:54,159
hamiltonian

774
00:32:54,159 --> 00:32:57,760
by inconsistent i mean they are disjoint

775
00:32:57,760 --> 00:33:00,480
no string can satisfy both of them

776
00:33:00,480 --> 00:33:03,440
simultaneously

777
00:33:04,159 --> 00:33:07,200
now with pattern predict project we can

778
00:33:07,200 --> 00:33:10,080
define practical practical binding with

779
00:33:10,080 --> 00:33:12,960
respect to p0 and p1

780
00:33:12,960 --> 00:33:14,559
namely

781
00:33:14,559 --> 00:33:17,039
if a center can open commitments so that

782
00:33:17,039 --> 00:33:20,080
the reward value satisfy p0 with

783
00:33:20,080 --> 00:33:21,760
probability 1

784
00:33:21,760 --> 00:33:24,640
then it cannot open the same commitments

785
00:33:24,640 --> 00:33:27,760
so that the reward values satisfy p1

786
00:33:27,760 --> 00:33:30,960
with a non-negligible probability

787
00:33:30,960 --> 00:33:33,440
here we highlight that

788
00:33:33,440 --> 00:33:35,279
now the word value could be a

789
00:33:35,279 --> 00:33:38,240
superposition of exponentially many

790
00:33:38,240 --> 00:33:42,000
genes with general quantum binding

791
00:33:42,000 --> 00:33:45,600
or put it in some quantum formalization

792
00:33:45,600 --> 00:33:47,600
we needed to show that accepting

793
00:33:47,600 --> 00:33:50,240
subspaces p0 and p1

794
00:33:50,240 --> 00:33:53,279
that are introduced induced by particles

795
00:33:53,279 --> 00:33:56,880
p0 and p1 are almost orthogonal

796
00:33:56,880 --> 00:33:59,120
up to any polynomial time realizable

797
00:33:59,120 --> 00:34:01,440
unitary that does not touch the

798
00:34:01,440 --> 00:34:03,840
commitment space

799
00:34:03,840 --> 00:34:05,919
and we say practical binding with

800
00:34:05,919 --> 00:34:08,320
practical binding with respect to any

801
00:34:08,320 --> 00:34:12,480
pair of inconsistent predicates

802
00:34:13,119 --> 00:34:16,399
and the main technical difficulty lies

803
00:34:16,399 --> 00:34:17,520
in

804
00:34:17,520 --> 00:34:20,800
in establishing practical binding one

805
00:34:20,800 --> 00:34:23,440
needed to try to avoid the potential

806
00:34:23,440 --> 00:34:26,480
exponential blow up of error that are

807
00:34:26,480 --> 00:34:29,119
incurred by this superposition of

808
00:34:29,119 --> 00:34:32,399
possible exponential and many genes

809
00:34:32,399 --> 00:34:35,839
and by our our technique we actually

810
00:34:35,839 --> 00:34:38,879
failed to prove a full practical binding

811
00:34:38,879 --> 00:34:40,560
but that are

812
00:34:40,560 --> 00:34:44,560
generally enough for our applications

813
00:34:45,760 --> 00:34:48,000
okay okay uh that's all what i want to

814
00:34:48,000 --> 00:34:50,879
say thanks for your listening and uh you

815
00:34:50,879 --> 00:34:54,560
can questions are welcome

816
00:34:54,639 --> 00:34:55,918
thanks a lot

817
00:34:55,918 --> 00:34:59,200
are there any questions

818
00:35:00,240 --> 00:35:02,720
so maybe when we wait if people

819
00:35:02,720 --> 00:35:05,280
add a question also for the the previous

820
00:35:05,280 --> 00:35:07,440
speakers please check the chat every now

821
00:35:07,440 --> 00:35:09,520
and then um to see because there's at

822
00:35:09,520 --> 00:35:11,520
least one question for the first speaker

823
00:35:11,520 --> 00:35:13,359
um

824
00:35:13,359 --> 00:35:15,040
that you could still answer in the chat

825
00:35:15,040 --> 00:35:16,720
then

826
00:35:16,720 --> 00:35:18,800
um

827
00:35:18,800 --> 00:35:20,800
by the way you're still sharing

828
00:35:20,800 --> 00:35:22,240
so okay

829
00:35:22,240 --> 00:35:23,359
now you're showing the chat what's

830
00:35:23,359 --> 00:35:25,680
actually good

831
00:35:25,680 --> 00:35:27,599
okay

832
00:35:27,599 --> 00:35:30,599
um

833
00:35:31,280 --> 00:35:33,760
okay but i don't see any question right

834
00:35:33,760 --> 00:35:35,440
now then

835
00:35:35,440 --> 00:35:37,760
i would say we move on to the next talk

836
00:35:37,760 --> 00:35:38,960
thank you again

837
00:35:38,960 --> 00:35:41,680
okay thank you

838
00:35:41,760 --> 00:35:42,839
thank

839
00:35:42,839 --> 00:35:44,560
you

840
00:35:44,560 --> 00:35:46,880
okay

841
00:35:46,880 --> 00:35:49,599
let's move to the next talks

842
00:35:49,599 --> 00:35:51,760
and the next talk is

843
00:35:51,760 --> 00:35:54,079
quantum encryption with certified

844
00:35:54,079 --> 00:35:55,920
deletion registered

845
00:35:55,920 --> 00:35:58,160
public key attribute attribute-based and

846
00:35:58,160 --> 00:36:03,040
classical communication by tiger hiroka

847
00:36:03,680 --> 00:36:05,359
takashi yamakawa

848
00:36:05,359 --> 00:36:08,799
and tiger hiroka

849
00:36:09,520 --> 00:36:10,880
are you ready

850
00:36:10,880 --> 00:36:13,119
yes can you see the slide

851
00:36:13,119 --> 00:36:15,359
yes i can see your slides and i can hear

852
00:36:15,359 --> 00:36:18,560
you yeah please stop

853
00:36:19,359 --> 00:36:22,000
hello everyone my name is taiga hiroka

854
00:36:22,000 --> 00:36:23,839
in this talk i talk about quantum

855
00:36:23,839 --> 00:36:26,400
encryption without hydration represent

856
00:36:26,400 --> 00:36:28,720
public key attribute base and classical

857
00:36:28,720 --> 00:36:30,960
communication this occasion to work with

858
00:36:30,960 --> 00:36:32,320
stomach

859
00:36:32,320 --> 00:36:35,520
monkey and takashima

860
00:36:35,760 --> 00:36:38,480
first let me explain the prior work a

861
00:36:38,480 --> 00:36:40,480
one-time secret key encryption with sat

862
00:36:40,480 --> 00:36:43,119
hydration was introduced by broadband

863
00:36:43,119 --> 00:36:46,079
and islam in tcc 2020.

864
00:36:46,079 --> 00:36:47,839
in this primitive there is a

865
00:36:47,839 --> 00:36:50,400
certification security in addition to

866
00:36:50,400 --> 00:36:53,839
the functionality of one-time secret key

867
00:36:53,839 --> 00:36:55,680
this security unit guarantees a

868
00:36:55,680 --> 00:36:56,720
following

869
00:36:56,720 --> 00:36:59,680
first sender generates a secret key

870
00:36:59,680 --> 00:37:02,079
and generates a quantum ciphertext

871
00:37:02,079 --> 00:37:05,040
and sends it to a receiver

872
00:37:05,040 --> 00:37:07,680
after she sends a quantum ciphertext if

873
00:37:07,680 --> 00:37:09,599
she changes her mind under answer there

874
00:37:09,599 --> 00:37:12,240
is a ciphertext she requests to him to

875
00:37:12,240 --> 00:37:13,920
delete the ciphertext

876
00:37:13,920 --> 00:37:16,400
and she receives a classical certificate

877
00:37:16,400 --> 00:37:18,560
which guarantees that he deletes a

878
00:37:18,560 --> 00:37:20,400
quantum ciphertext

879
00:37:20,400 --> 00:37:22,560
and then she checks whether this

880
00:37:22,560 --> 00:37:25,359
certificate is correct or not using a

881
00:37:25,359 --> 00:37:27,599
verification key

882
00:37:27,599 --> 00:37:29,599
when correct he cannot obtain the

883
00:37:29,599 --> 00:37:32,560
message name correctly even if he

884
00:37:32,560 --> 00:37:34,640
receives the secret key of this

885
00:37:34,640 --> 00:37:36,640
ciphertext

886
00:37:36,640 --> 00:37:38,960
the construction has disadvantages as

887
00:37:38,960 --> 00:37:40,079
follows

888
00:37:40,079 --> 00:37:42,640
first the construction is limited to the

889
00:37:42,640 --> 00:37:44,240
setting of one-time secret key

890
00:37:44,240 --> 00:37:45,839
encryption

891
00:37:45,839 --> 00:37:48,720
second in their construction sender

892
00:37:48,720 --> 00:37:51,280
needs quantum operation

893
00:37:51,280 --> 00:37:53,599
third in the construction direction is

894
00:37:53,599 --> 00:37:56,160
privately believable which means that

895
00:37:56,160 --> 00:37:58,800
the sender needs a verification key kept

896
00:37:58,800 --> 00:38:00,960
secret

897
00:38:00,960 --> 00:38:03,599
in our work we have improved improved

898
00:38:03,599 --> 00:38:07,599
these disadvantages as horrors

899
00:38:07,599 --> 00:38:09,599
in this talk i talk about quantum

900
00:38:09,599 --> 00:38:12,320
encryption with saturation where the

901
00:38:12,320 --> 00:38:16,000
sender is completely classical

902
00:38:16,880 --> 00:38:19,280
in our construction we have used noisy

903
00:38:19,280 --> 00:38:22,160
trapped rocky function f and injective

904
00:38:22,160 --> 00:38:24,079
trapped function g to construct a

905
00:38:24,079 --> 00:38:25,839
protocol

906
00:38:25,839 --> 00:38:29,440
these functions are constructed from lw

907
00:38:29,440 --> 00:38:31,680
assumption and have some cryptographic

908
00:38:31,680 --> 00:38:34,079
primitives properties

909
00:38:34,079 --> 00:38:36,160
using these properties a classical

910
00:38:36,160 --> 00:38:38,240
sender can generate a quantum state in

911
00:38:38,240 --> 00:38:41,119
the receiver's register

912
00:38:41,119 --> 00:38:43,839
in a nutshell idea of our construction

913
00:38:43,839 --> 00:38:46,880
is to use f-type function and g-type

914
00:38:46,880 --> 00:38:47,920
function

915
00:38:47,920 --> 00:38:50,240
instead of directly sending bb a throw

916
00:38:50,240 --> 00:38:53,280
state with quantum channel

917
00:38:53,280 --> 00:38:56,079
now first i explain how to use f-type

918
00:38:56,079 --> 00:38:58,480
function

919
00:38:58,480 --> 00:39:01,440
first across carcinda generates f-type

920
00:39:01,440 --> 00:39:03,920
function on trapdoor and sends function

921
00:39:03,920 --> 00:39:05,599
to receiver

922
00:39:05,599 --> 00:39:07,839
the receiver generates super position

923
00:39:07,839 --> 00:39:11,920
state and coherently evaluates f4 waves

924
00:39:11,920 --> 00:39:13,680
if he measures the third register in the

925
00:39:13,680 --> 00:39:15,200
computational basis

926
00:39:15,200 --> 00:39:16,640
he obtains a post he obtains a

927
00:39:16,640 --> 00:39:17,920
measurement outcome y and the

928
00:39:17,920 --> 00:39:20,079
post-measurement quantum state

929
00:39:20,079 --> 00:39:21,839
if he measure this quantum state in the

930
00:39:21,839 --> 00:39:24,000
computational basis this quantum state

931
00:39:24,000 --> 00:39:26,640
collapses to the classical bit string

932
00:39:26,640 --> 00:39:28,320
on the other hand if you measure this

933
00:39:28,320 --> 00:39:30,640
quantum state in the normal basis this

934
00:39:30,640 --> 00:39:32,560
quantum state collapses to the random

935
00:39:32,560 --> 00:39:34,960
classical string e and d that satisfies

936
00:39:34,960 --> 00:39:37,040
this equation

937
00:39:37,040 --> 00:39:39,040
noisy drop down closely function f

938
00:39:39,040 --> 00:39:41,680
satisfy adaptive hardware bit property

939
00:39:41,680 --> 00:39:44,079
which guarantees that quantum polynomial

940
00:39:44,079 --> 00:39:46,880
time receiver cannot obtain both

941
00:39:46,880 --> 00:39:47,760
this

942
00:39:47,760 --> 00:39:50,320
and this at the same time use the

943
00:39:50,320 --> 00:39:53,200
probability more than one half

944
00:39:53,200 --> 00:39:55,359
and you know in your construction we

945
00:39:55,359 --> 00:39:57,119
have used the injective drop to our

946
00:39:57,119 --> 00:40:00,880
function g in addition to this function

947
00:40:00,880 --> 00:40:02,720
first a classical sender generates

948
00:40:02,720 --> 00:40:05,119
function d and drop down on the sensor

949
00:40:05,119 --> 00:40:07,440
function to the receiver

950
00:40:07,440 --> 00:40:10,319
note that from the injected imbalance of

951
00:40:10,319 --> 00:40:11,680
this function g

952
00:40:11,680 --> 00:40:13,599
quantum polynomial time receiver cannot

953
00:40:13,599 --> 00:40:15,599
distinguish this function from this

954
00:40:15,599 --> 00:40:16,720
function

955
00:40:16,720 --> 00:40:18,880
this property is very important for

956
00:40:18,880 --> 00:40:20,319
construction

957
00:40:20,319 --> 00:40:21,839
then the receiver generates

958
00:40:21,839 --> 00:40:23,680
superposition state and coherently

959
00:40:23,680 --> 00:40:25,680
evaluates g of x

960
00:40:25,680 --> 00:40:27,359
if he measures the third register in the

961
00:40:27,359 --> 00:40:29,280
computational basis he obtains a

962
00:40:29,280 --> 00:40:30,720
measurement outcome y and the

963
00:40:30,720 --> 00:40:32,960
post-measurement quantum state

964
00:40:32,960 --> 00:40:34,640
if he measure this quantum state in the

965
00:40:34,640 --> 00:40:36,560
completion basis

966
00:40:36,560 --> 00:40:38,720
this quantum state crosses to the cross

967
00:40:38,720 --> 00:40:41,119
carpet string on the other hand if you

968
00:40:41,119 --> 00:40:42,560
measure this quantum state in that

969
00:40:42,560 --> 00:40:45,119
amount basis this quantum state crosses

970
00:40:45,119 --> 00:40:48,240
to the random classical bit string

971
00:40:48,240 --> 00:40:51,760
now i explain a construction note that

972
00:40:51,760 --> 00:40:53,359
this construction is not formal

973
00:40:53,359 --> 00:40:55,280
construction if you are interested in

974
00:40:55,280 --> 00:40:57,200
the homework construction please read a

975
00:40:57,200 --> 00:40:58,560
paper

976
00:40:58,560 --> 00:41:00,640
first a classical sender generates a

977
00:41:00,640 --> 00:41:03,040
random secret random classical string as

978
00:41:03,040 --> 00:41:05,440
a secret key where zero denotes g type

979
00:41:05,440 --> 00:41:07,280
function and one denotes

980
00:41:07,280 --> 00:41:09,040
f-type function

981
00:41:09,040 --> 00:41:11,599
then she generates these functions

982
00:41:11,599 --> 00:41:14,000
according to this classical string at

983
00:41:14,000 --> 00:41:16,160
the same time she didn't extract over

984
00:41:16,160 --> 00:41:19,040
and send them to the sender a receiver

985
00:41:19,040 --> 00:41:20,960
receiver generates this quantum state

986
00:41:20,960 --> 00:41:22,560
and sends the measurement outcomes to

987
00:41:22,560 --> 00:41:24,960
the sender at this point she can know

988
00:41:24,960 --> 00:41:27,040
the post measurement quantum state using

989
00:41:27,040 --> 00:41:29,280
measurement outcomes on the trap door on

990
00:41:29,280 --> 00:41:30,960
the other hand he can't know the post

991
00:41:30,960 --> 00:41:32,560
management quantum state from the

992
00:41:32,560 --> 00:41:35,040
property of these functions therefore

993
00:41:35,040 --> 00:41:37,520
this process is as if a classical center

994
00:41:37,520 --> 00:41:40,079
generates this quantum state

995
00:41:40,079 --> 00:41:43,200
in the receiver's registers blindly

996
00:41:43,200 --> 00:41:46,560
then she encrypts plain text m using b1

997
00:41:46,560 --> 00:41:49,040
x1 as a horse where it is a random

998
00:41:49,040 --> 00:41:50,480
oracle

999
00:41:50,480 --> 00:41:53,040
after she sends this cipher text if she

1000
00:41:53,040 --> 00:41:54,720
changes her mind and wants there is a

1001
00:41:54,720 --> 00:41:56,880
ciphertext she requests to him to

1002
00:41:56,880 --> 00:41:58,480
measure all these content states in the

1003
00:41:58,480 --> 00:42:00,720
demand basis and receive the measurement

1004
00:42:00,720 --> 00:42:03,359
outcomes as a classical certificate

1005
00:42:03,359 --> 00:42:05,359
then she checks whether this e and d

1006
00:42:05,359 --> 00:42:07,760
satisfies this equation

1007
00:42:07,760 --> 00:42:09,040
when yes

1008
00:42:09,040 --> 00:42:11,040
he cannot obtain the information message

1009
00:42:11,040 --> 00:42:13,520
m correctly even if he receives a

1010
00:42:13,520 --> 00:42:16,560
location function which is which is us

1011
00:42:16,560 --> 00:42:20,720
which is a secret key of this ciphertext

1012
00:42:20,720 --> 00:42:23,599
analog in order to prove this

1013
00:42:23,599 --> 00:42:26,240
construction security we have introduced

1014
00:42:26,240 --> 00:42:28,880
a new property of these functions

1015
00:42:28,880 --> 00:42:30,960
which we call cotton cheese adaptive

1016
00:42:30,960 --> 00:42:32,720
hardcore property

1017
00:42:32,720 --> 00:42:35,040
it is relatively straightforward to

1018
00:42:35,040 --> 00:42:37,599
previous security from this property

1019
00:42:37,599 --> 00:42:40,000
therefore i skip it

1020
00:42:40,000 --> 00:42:41,359
instead of that

1021
00:42:41,359 --> 00:42:43,839
i explain an intuitive understanding of

1022
00:42:43,839 --> 00:42:46,000
this property

1023
00:42:46,000 --> 00:42:48,319
cotton choose adaptive hardcore property

1024
00:42:48,319 --> 00:42:51,040
intuitively guarantees that when each

1025
00:42:51,040 --> 00:42:53,760
end satisfies this equation quantum

1026
00:42:53,760 --> 00:42:56,000
polynomial time receiver cannot obtain

1027
00:42:56,000 --> 00:42:59,119
b1 and x1 even if he receives the

1028
00:42:59,119 --> 00:43:02,400
location functions after he obtained e e

1029
00:43:02,400 --> 00:43:05,280
and d that satisfies this equation

1030
00:43:05,280 --> 00:43:06,960
and i'll expand the intuitive proof of

1031
00:43:06,960 --> 00:43:08,319
captain choose adaptive hardcore

1032
00:43:08,319 --> 00:43:09,440
property

1033
00:43:09,440 --> 00:43:12,240
in order to obtain this e and d he has

1034
00:43:12,240 --> 00:43:14,480
to measure these two quantum states in

1035
00:43:14,480 --> 00:43:17,040
the normal basis on the other hand he

1036
00:43:17,040 --> 00:43:19,760
cannot distinguish these functions

1037
00:43:19,760 --> 00:43:22,240
therefore in order to obtain this e and

1038
00:43:22,240 --> 00:43:25,040
d with a high probability he has to

1039
00:43:25,040 --> 00:43:27,280
measure all these quantum states in the

1040
00:43:27,280 --> 00:43:28,640
damage bases

1041
00:43:28,640 --> 00:43:30,560
on the other hand if he measure this

1042
00:43:30,560 --> 00:43:33,200
quantum state in the normal basis this

1043
00:43:33,200 --> 00:43:35,359
quantum state collapses to the random

1044
00:43:35,359 --> 00:43:37,280
class carbide string and he can no

1045
00:43:37,280 --> 00:43:40,240
longer obtain b1 x1 even if he receives

1046
00:43:40,240 --> 00:43:42,240
a location function

1047
00:43:42,240 --> 00:43:44,319
this is an intuitive proof of our carton

1048
00:43:44,319 --> 00:43:47,599
choose adaptive hardcore property

1049
00:43:47,599 --> 00:43:49,760
now i changed my talk if you are

1050
00:43:49,760 --> 00:43:52,560
interested in more homage these results

1051
00:43:52,560 --> 00:43:55,040
please read our paper thank you for your

1052
00:43:55,040 --> 00:43:57,440
listening

1053
00:44:00,800 --> 00:44:03,599
thanks a lot for the talk

1054
00:44:03,599 --> 00:44:06,240
are there any questions

1055
00:44:06,240 --> 00:44:09,839
so we've got nothing on soon

1056
00:44:11,200 --> 00:44:13,200
so how long uh answer catherine's

1057
00:44:13,200 --> 00:44:15,440
question on the chat but i also don't

1058
00:44:15,440 --> 00:44:19,400
see new questions there

1059
00:44:26,000 --> 00:44:28,720
then i would suggest we move on

1060
00:44:28,720 --> 00:44:31,759
thanks a lot for the talk

1061
00:44:34,480 --> 00:44:38,000
uh so i'd like to think uh again for

1062
00:44:38,000 --> 00:44:39,680
uh the previous talk

1063
00:44:39,680 --> 00:44:42,160
and i would like to move to the next

1064
00:44:42,160 --> 00:44:43,280
talk and

1065
00:44:43,280 --> 00:44:44,720
the next stop is

1066
00:44:44,720 --> 00:44:47,040
tight adaptive reprogramming in the

1067
00:44:47,040 --> 00:44:48,160
queue room

1068
00:44:48,160 --> 00:44:50,240
by alex b gullo

1069
00:44:50,240 --> 00:44:52,800
and kathleen hoberman and andreas

1070
00:44:52,800 --> 00:44:55,520
harrison and christian madins

1071
00:44:55,520 --> 00:44:58,079
and kathleen i think cousin hoverman's

1072
00:44:58,079 --> 00:45:00,400
village

1073
00:45:00,560 --> 00:45:02,400
yeah hi everyone can you see my slides

1074
00:45:02,400 --> 00:45:05,040
and hear me fine yes i can hear you and

1075
00:45:05,040 --> 00:45:07,359
i can see your throats yeah please start

1076
00:45:07,359 --> 00:45:09,599
okay great thanks

1077
00:45:09,599 --> 00:45:11,359
yeah welcome to my talk about adaptive

1078
00:45:11,359 --> 00:45:12,880
reprogramming and the quantum random

1079
00:45:12,880 --> 00:45:14,640
oracle model

1080
00:45:14,640 --> 00:45:17,359
and before i dive into our results i

1081
00:45:17,359 --> 00:45:19,359
will first sketch the motivation of this

1082
00:45:19,359 --> 00:45:21,759
paper

1083
00:45:22,079 --> 00:45:23,839
the motivation was

1084
00:45:23,839 --> 00:45:25,839
random oracle model programmability

1085
00:45:25,839 --> 00:45:28,240
which is a nice property of the random

1086
00:45:28,240 --> 00:45:30,800
oracle model that allows for simple

1087
00:45:30,800 --> 00:45:33,040
proof strategies and

1088
00:45:33,040 --> 00:45:35,599
the strategy is as follows we argue that

1089
00:45:35,599 --> 00:45:37,440
if a random oracle has not yet been

1090
00:45:37,440 --> 00:45:40,319
queried on a particular pre-image x

1091
00:45:40,319 --> 00:45:42,560
then the oracle value can be chosen on

1092
00:45:42,560 --> 00:45:45,040
the fly by the game

1093
00:45:45,040 --> 00:45:48,160
and if we do so cleverly um

1094
00:45:48,160 --> 00:45:50,240
we allow the game to be simulated by a

1095
00:45:50,240 --> 00:45:52,160
reduction that then does not have to

1096
00:45:52,160 --> 00:45:54,000
rely on secret knowledge like for

1097
00:45:54,000 --> 00:45:56,560
example a secret key

1098
00:45:56,560 --> 00:45:58,480
but unfortunately the random oracle

1099
00:45:58,480 --> 00:46:01,280
model does not suffice to argue quantum

1100
00:46:01,280 --> 00:46:02,560
security

1101
00:46:02,560 --> 00:46:04,720
which is why it was generalized 10 years

1102
00:46:04,720 --> 00:46:05,760
ago

1103
00:46:05,760 --> 00:46:07,760
in a way that allows quantum access to

1104
00:46:07,760 --> 00:46:10,240
the random oracle and hence allows to

1105
00:46:10,240 --> 00:46:12,960
argue security against quantum attacks

1106
00:46:12,960 --> 00:46:15,280
in classical networks

1107
00:46:15,280 --> 00:46:17,760
but with this generalization

1108
00:46:17,760 --> 00:46:20,560
there comes some challenges for example

1109
00:46:20,560 --> 00:46:22,720
any query to the random oracle might

1110
00:46:22,720 --> 00:46:25,040
contain a pre-image x with some

1111
00:46:25,040 --> 00:46:26,480
amplitude

1112
00:46:26,480 --> 00:46:27,920
and this might not be trivially

1113
00:46:27,920 --> 00:46:30,560
checkable because checking would mean

1114
00:46:30,560 --> 00:46:33,119
measuring and hence altering the state

1115
00:46:33,119 --> 00:46:33,839
and

1116
00:46:33,839 --> 00:46:37,599
potentially derailing the attacker

1117
00:46:37,599 --> 00:46:39,440
so an important question is can we

1118
00:46:39,440 --> 00:46:41,440
adaptively reprogram in the quantum

1119
00:46:41,440 --> 00:46:43,599
random oracle model

1120
00:46:43,599 --> 00:46:45,760
and our results are in a line of work on

1121
00:46:45,760 --> 00:46:48,960
this question and a comparison will be

1122
00:46:48,960 --> 00:46:50,880
given after i have shown you what we

1123
00:46:50,880 --> 00:46:52,880
found out

1124
00:46:52,880 --> 00:46:56,800
so our result is a reprogramming toolbox

1125
00:46:56,800 --> 00:46:59,119
and i'll first sketch the simplest case

1126
00:46:59,119 --> 00:47:01,760
of reprogramming and then afterwards

1127
00:47:01,760 --> 00:47:05,200
show how this result can be generalized

1128
00:47:05,200 --> 00:47:08,000
so what we consider is a distinguisher

1129
00:47:08,000 --> 00:47:10,560
tasked with distinguishing between

1130
00:47:10,560 --> 00:47:12,720
quantum access to the

1131
00:47:12,720 --> 00:47:15,280
general random oracle h0

1132
00:47:15,280 --> 00:47:18,000
or access to its

1133
00:47:18,000 --> 00:47:21,200
reprogrammed version h1

1134
00:47:21,200 --> 00:47:23,599
and the game goes as this we have a

1135
00:47:23,599 --> 00:47:25,359
distinguisher run in the reprogramming

1136
00:47:25,359 --> 00:47:26,559
game

1137
00:47:26,559 --> 00:47:28,880
in the first phase of the game

1138
00:47:28,880 --> 00:47:31,040
it will have quantum access to the

1139
00:47:31,040 --> 00:47:34,640
oracle h0 that is not reprogrammed

1140
00:47:34,640 --> 00:47:37,119
and at some point it will issue a

1141
00:47:37,119 --> 00:47:39,520
reprogramming instruction

1142
00:47:39,520 --> 00:47:41,280
in the game we'll pick

1143
00:47:41,280 --> 00:47:44,720
a pre-image x and a random oracle value

1144
00:47:44,720 --> 00:47:47,520
y uniformly at random

1145
00:47:47,520 --> 00:47:50,880
and set the reprogrammed oracle to map x

1146
00:47:50,880 --> 00:47:55,760
to y and coincide with h0 anywhere else

1147
00:47:55,760 --> 00:47:58,559
afterwards the game will forward the

1148
00:47:58,559 --> 00:48:01,839
pre-image to the distinguisher

1149
00:48:01,839 --> 00:48:03,599
and in the second phase

1150
00:48:03,599 --> 00:48:06,000
the distinguisher has either access to

1151
00:48:06,000 --> 00:48:10,079
h0 or the reprogrammed version h1

1152
00:48:10,079 --> 00:48:12,160
and at the end it has to output a

1153
00:48:12,160 --> 00:48:15,680
guessing bit to indicate to which

1154
00:48:15,680 --> 00:48:17,920
oracle it believes it had access to in

1155
00:48:17,920 --> 00:48:21,359
the second phase so classically it's

1156
00:48:21,359 --> 00:48:22,640
pretty easy to see that the

1157
00:48:22,640 --> 00:48:24,319
distinguishing advantage can be upper

1158
00:48:24,319 --> 00:48:26,160
bounded in terms of the number of oracle

1159
00:48:26,160 --> 00:48:28,640
queries in the size of x because

1160
00:48:28,640 --> 00:48:30,559
to have any distinguishing advantage

1161
00:48:30,559 --> 00:48:32,880
whatsoever the distinguisher would have

1162
00:48:32,880 --> 00:48:35,359
had to query h0

1163
00:48:35,359 --> 00:48:38,319
on x in the first phase

1164
00:48:38,319 --> 00:48:40,880
and our findings are that quantumly

1165
00:48:40,880 --> 00:48:43,280
there exists a similar bound

1166
00:48:43,280 --> 00:48:44,720
and still we have this fraction of

1167
00:48:44,720 --> 00:48:47,680
number of oracle queries and size of x

1168
00:48:47,680 --> 00:48:50,480
but we have to consider square root and

1169
00:48:50,480 --> 00:48:53,599
also multiply by a small factor

1170
00:48:53,599 --> 00:48:56,400
however this bound is tight

1171
00:48:56,400 --> 00:48:58,640
as we have found a matching attack which

1172
00:48:58,640 --> 00:49:01,440
will be sketched in the youtube talk

1173
00:49:01,440 --> 00:49:03,760
and now i can sketch how we furthermore

1174
00:49:03,760 --> 00:49:06,800
generalized this result

1175
00:49:06,800 --> 00:49:08,800
so the first important generalization of

1176
00:49:08,800 --> 00:49:10,800
course is that we want to reprogram many

1177
00:49:10,800 --> 00:49:12,800
times not just once

1178
00:49:12,800 --> 00:49:14,240
so we pick

1179
00:49:14,240 --> 00:49:18,960
several reprogramming positions x12 xr

1180
00:49:18,960 --> 00:49:22,319
second important generalization is that

1181
00:49:22,319 --> 00:49:25,280
we now let the distinguisher determine

1182
00:49:25,280 --> 00:49:27,440
on which positions uh

1183
00:49:27,440 --> 00:49:29,119
we will reprogram

1184
00:49:29,119 --> 00:49:30,800
by

1185
00:49:30,800 --> 00:49:32,720
telling the game the distributions

1186
00:49:32,720 --> 00:49:34,640
according to which the positions will

1187
00:49:34,640 --> 00:49:37,200
have to be chosen

1188
00:49:37,200 --> 00:49:39,200
and the third generalization is that

1189
00:49:39,200 --> 00:49:41,200
those distributions come with some

1190
00:49:41,200 --> 00:49:43,280
additional site information

1191
00:49:43,280 --> 00:49:45,520
that is also forwarded

1192
00:49:45,520 --> 00:49:48,640
to the distinguisher

1193
00:49:49,280 --> 00:49:52,160
to compare with previous results

1194
00:49:52,160 --> 00:49:54,400
so no none of the previous work

1195
00:49:54,400 --> 00:49:56,480
considered any distribution that was

1196
00:49:56,480 --> 00:49:59,440
anything else but uniform

1197
00:49:59,440 --> 00:50:00,960
and

1198
00:50:00,960 --> 00:50:03,440
yeah clearly this also means that the

1199
00:50:03,440 --> 00:50:05,680
distributions did not offer any side

1200
00:50:05,680 --> 00:50:07,440
information

1201
00:50:07,440 --> 00:50:09,839
and to compare the bounds i just

1202
00:50:09,839 --> 00:50:10,720
conf

1203
00:50:10,720 --> 00:50:12,480
considered the uniform case to keep

1204
00:50:12,480 --> 00:50:14,000
things

1205
00:50:14,000 --> 00:50:15,599
pretty simple

1206
00:50:15,599 --> 00:50:18,240
so what we see here is that our bound

1207
00:50:18,240 --> 00:50:20,960
improves by a small factor and more

1208
00:50:20,960 --> 00:50:24,400
importantly it also improves by a factor

1209
00:50:24,400 --> 00:50:27,839
of square root of q

1210
00:50:28,400 --> 00:50:30,559
and with this toolbox at hand we can

1211
00:50:30,559 --> 00:50:31,760
also

1212
00:50:31,760 --> 00:50:33,760
we were also able to give some security

1213
00:50:33,760 --> 00:50:35,440
proofs in the quantum random oracle

1214
00:50:35,440 --> 00:50:36,559
model

1215
00:50:36,559 --> 00:50:38,240
so we improved

1216
00:50:38,240 --> 00:50:41,119
on previous work on vhm signatures and

1217
00:50:41,119 --> 00:50:43,920
the message compression routine of xmss

1218
00:50:43,920 --> 00:50:46,240
because we now have this toolbox that

1219
00:50:46,240 --> 00:50:48,800
allows for conceptually simple proofs

1220
00:50:48,800 --> 00:50:51,760
and um also is a bit tighter

1221
00:50:51,760 --> 00:50:54,079
and we also gave the first proof in the

1222
00:50:54,079 --> 00:50:55,839
quantum random oracle model that the

1223
00:50:55,839 --> 00:50:58,240
hedge future mere construction is secure

1224
00:50:58,240 --> 00:51:00,240
against several fault injections and

1225
00:51:00,240 --> 00:51:03,040
one's misuse

1226
00:51:03,200 --> 00:51:05,440
and with that i want to conclude my talk

1227
00:51:05,440 --> 00:51:09,839
and i'm happy to take any questions

1228
00:51:11,680 --> 00:51:13,040
thanks a lot

1229
00:51:13,040 --> 00:51:15,760
nice talk great result

1230
00:51:15,760 --> 00:51:20,440
are there any questions for catskin

1231
00:51:22,400 --> 00:51:24,640
so i don't see any question in the zoom

1232
00:51:24,640 --> 00:51:26,800
chat

1233
00:51:26,800 --> 00:51:28,960
i also don't see any question in the

1234
00:51:28,960 --> 00:51:31,280
sulup ah now there's a question a

1235
00:51:31,280 --> 00:51:33,760
special question

1236
00:51:33,760 --> 00:51:35,599
thank you for your time does the bond

1237
00:51:35,599 --> 00:51:39,520
get worse in the non-uniform case

1238
00:51:39,760 --> 00:51:40,640
um

1239
00:51:40,640 --> 00:51:43,119
yeah a nice question the answer is no

1240
00:51:43,119 --> 00:51:45,040
this will also be presented in the long

1241
00:51:45,040 --> 00:51:48,240
version so let me go back to the slide

1242
00:51:48,240 --> 00:51:51,640
with the branch

1243
00:51:52,079 --> 00:51:55,520
yeah so here we see a fraction of q over

1244
00:51:55,520 --> 00:51:57,280
the size of x and

1245
00:51:57,280 --> 00:51:59,599
one over the size of x represents the

1246
00:51:59,599 --> 00:52:01,359
uniform distribution

1247
00:52:01,359 --> 00:52:02,800
that i picked

1248
00:52:02,800 --> 00:52:05,200
and what we would consider instead if we

1249
00:52:05,200 --> 00:52:07,920
go to the non-uniform case would be the

1250
00:52:07,920 --> 00:52:10,720
maximum probability of any of those

1251
00:52:10,720 --> 00:52:13,119
distributions hitting a particular

1252
00:52:13,119 --> 00:52:14,400
element

1253
00:52:14,400 --> 00:52:18,200
this is all that changes

1254
00:52:26,400 --> 00:52:27,440
okay

1255
00:52:27,440 --> 00:52:31,400
is there any further question

1256
00:52:33,599 --> 00:52:36,000
uh if there is no question i would like

1257
00:52:36,000 --> 00:52:37,760
to ask one question

1258
00:52:37,760 --> 00:52:40,559
uh so i think i think about uh the

1259
00:52:40,559 --> 00:52:43,040
uh bound for no uniformities uh maybe

1260
00:52:43,040 --> 00:52:44,800
i'm sorry i may

1261
00:52:44,800 --> 00:52:48,079
miss something but so

1262
00:52:48,079 --> 00:52:50,480
do you also get as a tight one for

1263
00:52:50,480 --> 00:52:53,440
knowing your informal case

1264
00:52:53,599 --> 00:52:57,359
um i'm not sure so we didn't approve

1265
00:52:57,359 --> 00:52:59,599
tightness overbound for the non-uniform

1266
00:52:59,599 --> 00:53:01,520
case we only proved it for the uniform

1267
00:53:01,520 --> 00:53:03,680
case i think

1268
00:53:03,680 --> 00:53:06,800
and do you think uh the uh

1269
00:53:06,800 --> 00:53:09,440
interesting things about uh concerning

1270
00:53:09,440 --> 00:53:10,319
about

1271
00:53:10,319 --> 00:53:12,880
tithing is for non-uniform case what do

1272
00:53:12,880 --> 00:53:14,480
you think

1273
00:53:14,480 --> 00:53:16,880
you are not so much interested in

1274
00:53:16,880 --> 00:53:20,480
uh no sorry it is not so interesting to

1275
00:53:20,480 --> 00:53:23,440
study the titans for non-uniform case

1276
00:53:23,440 --> 00:53:24,880
i think that's a very interesting

1277
00:53:24,880 --> 00:53:26,880
question it was just out of the scope of

1278
00:53:26,880 --> 00:53:29,119
this paper because it was already very

1279
00:53:29,119 --> 00:53:31,520
long because we had to include all those

1280
00:53:31,520 --> 00:53:34,240
uh security proofs

1281
00:53:34,240 --> 00:53:37,118
okay thank you

1282
00:53:37,359 --> 00:53:39,839
maybe i can add that

1283
00:53:39,839 --> 00:53:42,640
i would expect the non-uniform case also

1284
00:53:42,640 --> 00:53:44,880
to be tight

1285
00:53:44,880 --> 00:53:47,359
and i think it should be possible to

1286
00:53:47,359 --> 00:53:50,400
prove that by reducing it to the uniform

1287
00:53:50,400 --> 00:53:52,640
case via some kind of asymptotic

1288
00:53:52,640 --> 00:53:54,960
equi-partition property

1289
00:53:54,960 --> 00:53:56,480
so by taking

1290
00:53:56,480 --> 00:54:00,720
many copies of the non-uniform

1291
00:54:00,800 --> 00:54:03,040
case

1292
00:54:03,359 --> 00:54:08,040
oh interesting thank you thank you

1293
00:54:10,640 --> 00:54:13,280
thanks a lot then uh yeah i guess we can

1294
00:54:13,280 --> 00:54:16,400
move on to the next talk

1295
00:54:17,119 --> 00:54:20,720
okay i'd like to move to the next talk

1296
00:54:20,720 --> 00:54:23,040
the last talk of this session

1297
00:54:23,040 --> 00:54:26,880
and the next stock is qcb

1298
00:54:26,880 --> 00:54:29,440
efficient quantum central authenticated

1299
00:54:29,440 --> 00:54:31,839
encryption by retirement power

1300
00:54:31,839 --> 00:54:34,160
saving

1301
00:54:36,480 --> 00:54:39,280
and mariana

1302
00:54:51,040 --> 00:54:52,720
for the introduction and for listing all

1303
00:54:52,720 --> 00:54:54,720
the quarters so that i can

1304
00:54:54,720 --> 00:54:56,960
jump straight into the top

1305
00:54:56,960 --> 00:55:00,480
okay so we begin with ocd3 which is a

1306
00:55:00,480 --> 00:55:02,000
very popular

1307
00:55:02,000 --> 00:55:03,920
authenticated encryption mode

1308
00:55:03,920 --> 00:55:05,359
and it is

1309
00:55:05,359 --> 00:55:07,359
it just uses these offsets which are

1310
00:55:07,359 --> 00:55:09,599
calculated based on an iv and the block

1311
00:55:09,599 --> 00:55:12,640
number and it uses these offsets with

1312
00:55:12,640 --> 00:55:14,400
the ecb mode which is highly

1313
00:55:14,400 --> 00:55:16,799
parallelizable and this makes it very

1314
00:55:16,799 --> 00:55:18,799
lightweight and it's a great one

1315
00:55:18,799 --> 00:55:22,640
authentically encryption mode which is

1316
00:55:22,640 --> 00:55:24,319
which means it just uses one block

1317
00:55:24,319 --> 00:55:26,799
cipher call for message two

1318
00:55:26,799 --> 00:55:28,960
so we begin with this and we want we

1319
00:55:28,960 --> 00:55:30,480
want to examine

1320
00:55:30,480 --> 00:55:31,680
how it

1321
00:55:31,680 --> 00:55:34,240
stands up against against a quantum

1322
00:55:34,240 --> 00:55:36,720
adversary but unfortunately there are

1323
00:55:36,720 --> 00:55:40,640
results already that this is not quantum

1324
00:55:40,640 --> 00:55:43,280
secure because there are many periods

1325
00:55:43,280 --> 00:55:46,000
for instance if we encrypt the same

1326
00:55:46,000 --> 00:55:47,599
message block

1327
00:55:47,599 --> 00:55:48,720
twice

1328
00:55:48,720 --> 00:55:52,000
and then it saw the cipher text and this

1329
00:55:52,000 --> 00:55:54,079
becomes a periodic function of the

1330
00:55:54,079 --> 00:55:55,760
message block because

1331
00:55:55,760 --> 00:55:57,680
the iv part of the

1332
00:55:57,680 --> 00:56:00,799
offsets cancel out cancels out and this

1333
00:56:00,799 --> 00:56:03,040
since the period is constant here we can

1334
00:56:03,040 --> 00:56:06,640
use siemens uh to recover the

1335
00:56:06,640 --> 00:56:10,000
period which is delta 0x or delta 1 and

1336
00:56:10,000 --> 00:56:12,799
from that we can do a force easily

1337
00:56:12,799 --> 00:56:15,280
and this is just for this differing part

1338
00:56:15,280 --> 00:56:17,440
but on the tag part as well

1339
00:56:17,440 --> 00:56:19,680
there can be attacks because if we just

1340
00:56:19,680 --> 00:56:20,880
uh

1341
00:56:20,880 --> 00:56:22,640
we just if we just calculate the tag of

1342
00:56:22,640 --> 00:56:25,599
the empty message and with the

1343
00:56:25,599 --> 00:56:27,680
same associated data blocks

1344
00:56:27,680 --> 00:56:29,520
repeated twice

1345
00:56:29,520 --> 00:56:30,559
then the

1346
00:56:30,559 --> 00:56:33,520
tag becomes a periodic function of the

1347
00:56:33,520 --> 00:56:35,520
associated data block with a constant

1348
00:56:35,520 --> 00:56:38,000
period and again we can use symbols so

1349
00:56:38,000 --> 00:56:40,000
these are known results

1350
00:56:40,000 --> 00:56:41,760
but we are interested in direct one

1351
00:56:41,760 --> 00:56:43,119
property of

1352
00:56:43,119 --> 00:56:46,000
ocb3 so here we try to examine how we

1353
00:56:46,000 --> 00:56:48,559
can fix this fix these weaknesses over

1354
00:56:48,559 --> 00:56:51,280
cv3 and still get a great one

1355
00:56:51,280 --> 00:56:53,200
authentically encryption mode which is

1356
00:56:53,200 --> 00:56:56,319
secure against the quantum interest

1357
00:56:56,319 --> 00:56:57,920
so the first idea is that maybe the

1358
00:56:57,920 --> 00:57:00,720
offsets are bad because in ocb3 the

1359
00:57:00,720 --> 00:57:04,240
offsets consist of uh something from the

1360
00:57:04,240 --> 00:57:06,079
a component from the iv solving the

1361
00:57:06,079 --> 00:57:07,599
components from the block

1362
00:57:07,599 --> 00:57:10,720
and this means that when you exit the

1363
00:57:10,720 --> 00:57:12,559
offsets on two successive blocks on the

1364
00:57:12,559 --> 00:57:14,400
same iv the energy component gets

1365
00:57:14,400 --> 00:57:15,680
cancelled out

1366
00:57:15,680 --> 00:57:18,160
but we could modify this and we could

1367
00:57:18,160 --> 00:57:20,400
take for instance uh

1368
00:57:20,400 --> 00:57:24,079
offset which is i dot ekiv and then this

1369
00:57:24,079 --> 00:57:26,640
ig does not cancel out when you xor it

1370
00:57:26,640 --> 00:57:29,440
over two blocks

1371
00:57:29,440 --> 00:57:31,680
but

1372
00:57:32,160 --> 00:57:34,480
but unfortunately there is a stream on

1373
00:57:34,480 --> 00:57:36,799
best attack that still works on this

1374
00:57:36,799 --> 00:57:38,720
because if you take

1375
00:57:38,720 --> 00:57:40,720
one single message with the same id and

1376
00:57:40,720 --> 00:57:42,240
then

1377
00:57:42,240 --> 00:57:44,559
the same if if you repeat the message

1378
00:57:44,559 --> 00:57:47,280
each message block twice like in one two

1379
00:57:47,280 --> 00:57:49,200
three four and so on and then if you

1380
00:57:49,200 --> 00:57:51,599
take the xor of this ciphertext they

1381
00:57:51,599 --> 00:57:52,880
have the same

1382
00:57:52,880 --> 00:57:56,319
period and then you can use uh something

1383
00:57:56,319 --> 00:57:59,200
like assignments to sample vectors which

1384
00:57:59,200 --> 00:58:00,480
are one of

1385
00:58:00,480 --> 00:58:03,119
these periods and then you can extract

1386
00:58:03,119 --> 00:58:05,359
enough data to solve for ekf

1387
00:58:05,359 --> 00:58:07,440
so this does not work and this leads us

1388
00:58:07,440 --> 00:58:08,799
to believe that

1389
00:58:08,799 --> 00:58:11,280
the main problem in ocb against the

1390
00:58:11,280 --> 00:58:14,160
quantum adversary is the open the offset

1391
00:58:14,160 --> 00:58:15,040
path

1392
00:58:15,040 --> 00:58:17,440
and so we want to modify it in a way

1393
00:58:17,440 --> 00:58:18,240
that

1394
00:58:18,240 --> 00:58:19,040
these

1395
00:58:19,040 --> 00:58:21,280
data on iv and block number is still

1396
00:58:21,280 --> 00:58:24,000
used but not as offsets

1397
00:58:24,000 --> 00:58:27,040
and so we move on to qcb

1398
00:58:27,040 --> 00:58:28,799
and where we

1399
00:58:28,799 --> 00:58:30,640
do some kind of domain separation so

1400
00:58:30,640 --> 00:58:32,559
essentially we use tweakable block

1401
00:58:32,559 --> 00:58:33,599
ciphers

1402
00:58:33,599 --> 00:58:36,000
and this was an idea used already in

1403
00:58:36,000 --> 00:58:38,400
something called decibit which was used

1404
00:58:38,400 --> 00:58:41,200
in the security group for ocb3

1405
00:58:41,200 --> 00:58:44,400
but here we see that if we if we process

1406
00:58:44,400 --> 00:58:46,559
the tweak in some other way

1407
00:58:46,559 --> 00:58:48,079
not using

1408
00:58:48,079 --> 00:58:48,839
these

1409
00:58:48,839 --> 00:58:51,599
offsets then we can get the good quantum

1410
00:58:51,599 --> 00:58:54,000
security of this construction so this is

1411
00:58:54,000 --> 00:58:56,000
the qcb it's essentially the same

1412
00:58:56,000 --> 00:58:58,559
construction except we have strapped out

1413
00:58:58,559 --> 00:59:00,880
the offset part and put everything into

1414
00:59:00,880 --> 00:59:03,200
a quick which has the ivd block number

1415
00:59:03,200 --> 00:59:05,839
and something for domain separation

1416
00:59:05,839 --> 00:59:08,240
but for processing the authenticated

1417
00:59:08,240 --> 00:59:09,760
data but

1418
00:59:09,760 --> 00:59:13,760
for processing the associated data we

1419
00:59:13,760 --> 00:59:17,280
use something else we use the iv as a

1420
00:59:17,280 --> 00:59:19,359
inside the tweet for the

1421
00:59:19,359 --> 00:59:21,280
block cipher calls for processing the

1422
00:59:21,280 --> 00:59:23,200
associated data and this is something

1423
00:59:23,200 --> 00:59:24,400
different

1424
00:59:24,400 --> 00:59:27,040
from ocb3 where the iv is not used for

1425
00:59:27,040 --> 00:59:28,000
dd

1426
00:59:28,000 --> 00:59:28,720
but

1427
00:59:28,720 --> 00:59:29,440
this

1428
00:59:29,440 --> 00:59:31,280
as it turns out to avoid quantum

1429
00:59:31,280 --> 00:59:34,000
linearization attacks it is necessary to

1430
00:59:34,000 --> 00:59:36,400
use this check

1431
00:59:36,400 --> 00:59:38,720
and so this is what is broadly called

1432
00:59:38,720 --> 00:59:40,079
qcb and

1433
00:59:40,079 --> 00:59:41,359
for the

1434
00:59:41,359 --> 00:59:43,280
tweakable block cipher we want something

1435
00:59:43,280 --> 00:59:45,359
that is secure against the quantum

1436
00:59:45,359 --> 00:59:46,480
atrocity

1437
00:59:46,480 --> 00:59:50,400
and if we assume a perfect

1438
00:59:50,400 --> 00:59:52,160
quantum security on the

1439
00:59:52,160 --> 00:59:54,799
dbc then we can show that this is also

1440
00:59:54,799 --> 00:59:56,559
very easy if you have secure

1441
00:59:56,559 --> 00:59:58,880
authenticated encryption

1442
00:59:58,880 --> 01:00:01,200
but then we explore further we try to

1443
01:00:01,200 --> 01:00:03,200
explore uh some

1444
01:00:03,200 --> 01:00:06,319
actual tbc which can help us instantiate

1445
01:00:06,319 --> 01:00:08,559
this uh ucb

1446
01:00:08,559 --> 01:00:11,200
and for this and there can be several

1447
01:00:11,200 --> 01:00:14,720
devices for instance there is a

1448
01:00:14,720 --> 01:00:17,359
dbc with three block cipher calls for

1449
01:00:17,359 --> 01:00:21,920
divisible by asuyama and iwata but

1450
01:00:21,920 --> 01:00:23,760
we want to use something that is great

1451
01:00:23,760 --> 01:00:24,559
one

1452
01:00:24,559 --> 01:00:25,760
because

1453
01:00:25,760 --> 01:00:28,240
otherwise our construction is no longer

1454
01:00:28,240 --> 01:00:31,200
a report on the block cipher

1455
01:00:31,200 --> 01:00:33,680
but we found that the key

1456
01:00:33,680 --> 01:00:36,079
tweak insertion dbc but the week is

1457
01:00:36,079 --> 01:00:38,400
simply xor with the key actually works

1458
01:00:38,400 --> 01:00:40,319
quite well for a purpose

1459
01:00:40,319 --> 01:00:41,040
but

1460
01:00:41,040 --> 01:00:42,559
there is a caveat that we could not

1461
01:00:42,559 --> 01:00:44,960
prove ideal tbc security on the key

1462
01:00:44,960 --> 01:00:47,520
driven session and we had to make the

1463
01:00:47,520 --> 01:00:50,480
modification that the tweaks have to be

1464
01:00:50,480 --> 01:00:53,040
non-adaptive

1465
01:00:53,040 --> 01:00:55,839
so that is a modification and by the way

1466
01:00:55,839 --> 01:00:58,160
in this model the tweaks are also

1467
01:00:58,160 --> 01:00:59,280
classical

1468
01:00:59,280 --> 01:01:02,079
and that is a common use case and we use

1469
01:01:02,079 --> 01:01:04,000
that here so the tweaks are classical

1470
01:01:04,000 --> 01:01:06,640
and non-adaptive in our group and with

1471
01:01:06,640 --> 01:01:10,079
that we can show that our qcb has these

1472
01:01:10,079 --> 01:01:11,920
goals where

1473
01:01:11,920 --> 01:01:14,960
these popular notions of privacy and the

1474
01:01:14,960 --> 01:01:17,280
unforgivability are used for privacy we

1475
01:01:17,280 --> 01:01:19,680
said it's intune cpa but with the

1476
01:01:19,680 --> 01:01:21,839
modification that the ivs are either

1477
01:01:21,839 --> 01:01:24,960
random or specified in advance and this

1478
01:01:24,960 --> 01:01:26,880
is to take care of the modified security

1479
01:01:26,880 --> 01:01:28,160
of the tbc

1480
01:01:28,160 --> 01:01:30,559
and for unforgivability we use the bonus

1481
01:01:30,559 --> 01:01:32,319
on the notion

1482
01:01:32,319 --> 01:01:35,119
where but with the modification that the

1483
01:01:35,119 --> 01:01:37,280
ivs are either random or specified

1484
01:01:37,280 --> 01:01:39,599
networks and with these modifications we

1485
01:01:39,599 --> 01:01:42,000
can we are able to prove the security of

1486
01:01:42,000 --> 01:01:44,000
qc

1487
01:01:44,000 --> 01:01:46,160
when instantiated with the

1488
01:01:46,160 --> 01:01:48,960
key tweaking such

1489
01:01:49,119 --> 01:01:50,880
pvc

1490
01:01:50,880 --> 01:01:53,280
okay and that is the main result of the

1491
01:01:53,280 --> 01:01:54,400
paper

1492
01:01:54,400 --> 01:01:57,920
and there are several open questions for

1493
01:01:57,920 --> 01:01:59,760
which we can explore like

1494
01:01:59,760 --> 01:02:00,960
whether

1495
01:02:00,960 --> 01:02:03,039
we can show introduces here security

1496
01:02:03,039 --> 01:02:04,720
whether we can define it properly and

1497
01:02:04,720 --> 01:02:06,799
whether we can show it and whether we

1498
01:02:06,799 --> 01:02:09,119
can use the more recent definition of

1499
01:02:09,119 --> 01:02:11,520
blind unforgeability

1500
01:02:11,520 --> 01:02:12,880
and

1501
01:02:12,880 --> 01:02:16,079
whether we can show the full tv security

1502
01:02:16,079 --> 01:02:18,079
of the key tweaking session

1503
01:02:18,079 --> 01:02:20,079
and finally whether we can say anything

1504
01:02:20,079 --> 01:02:22,799
without the ideal cycle

1505
01:02:22,799 --> 01:02:25,280
and the full function is found on ebay

1506
01:02:25,280 --> 01:02:26,160
then

1507
01:02:26,160 --> 01:02:28,079
there is also a longer version of this

1508
01:02:28,079 --> 01:02:30,000
talk on youtube

1509
01:02:30,000 --> 01:02:34,200
thanks for your attention if you want

1510
01:02:34,720 --> 01:02:36,799
thank you vita um

1511
01:02:36,799 --> 01:02:40,160
are there any questions

1512
01:02:44,480 --> 01:02:47,680
so i know it's quite early for uh people

1513
01:02:47,680 --> 01:02:49,839
but

1514
01:02:52,000 --> 01:02:54,480
if there is no other question

1515
01:02:54,480 --> 01:02:59,280
i have one so i'd like to ask a question

1516
01:02:59,440 --> 01:03:00,319
so

1517
01:03:00,319 --> 01:03:01,119
if

1518
01:03:01,119 --> 01:03:03,920
uh so uh in your

1519
01:03:03,920 --> 01:03:06,880
uh work uh so you assume nouns are

1520
01:03:06,880 --> 01:03:10,000
random or specified in advance right

1521
01:03:10,000 --> 01:03:11,119
yes

1522
01:03:11,119 --> 01:03:13,359
uh so what happens

1523
01:03:13,359 --> 01:03:14,319
uh sorry

1524
01:03:14,319 --> 01:03:17,520
so what happens if you uh repeat the

1525
01:03:17,520 --> 01:03:19,280
announce or announcement is chosen by

1526
01:03:19,280 --> 01:03:21,520
advantage uh is

1527
01:03:21,520 --> 01:03:25,200
uh both of privacy and authenticity uh

1528
01:03:25,200 --> 01:03:26,240
broken

1529
01:03:26,240 --> 01:03:28,240
immediately

1530
01:03:28,240 --> 01:03:32,160
um uh no so if the nonce is uh repeated

1531
01:03:32,160 --> 01:03:33,119
then

1532
01:03:33,119 --> 01:03:34,559
then there can be problems they're not

1533
01:03:34,559 --> 01:03:37,359
proof doesn't work at all and

1534
01:03:37,359 --> 01:03:40,960
if the nonce is not repeated but it's

1535
01:03:40,960 --> 01:03:42,799
not declared in advance it's chosen

1536
01:03:42,799 --> 01:03:45,920
adaptively adaptively then

1537
01:03:45,920 --> 01:03:47,520
i mean we have a hunch that this is

1538
01:03:47,520 --> 01:03:49,839
still secure but we could not prove it

1539
01:03:49,839 --> 01:03:52,400
because we could not prove the

1540
01:03:52,400 --> 01:03:56,880
security of full ideal tbc security

1541
01:03:56,880 --> 01:03:58,799
for the tbc

1542
01:03:58,799 --> 01:04:00,880
but you know the non-slippy thing is

1543
01:04:00,880 --> 01:04:03,280
probably we did not show an attack but

1544
01:04:03,280 --> 01:04:05,920
our proof relies heavily on the fact

1545
01:04:05,920 --> 01:04:09,920
that the nonce is not repeated

1546
01:04:09,920 --> 01:04:12,880
okay thank you

1547
01:04:12,880 --> 01:04:15,440
um maybe i can also ask a question um

1548
01:04:15,440 --> 01:04:17,520
thanks for the for the target

1549
01:04:17,520 --> 01:04:18,559
um

1550
01:04:18,559 --> 01:04:21,119
so i was wondering whether um

1551
01:04:21,119 --> 01:04:23,680
you think your proof techniques are um

1552
01:04:23,680 --> 01:04:26,880
are fit to prove blind affordability or

1553
01:04:26,880 --> 01:04:29,920
whether you um whether

1554
01:04:29,920 --> 01:04:31,280
other like different techniques are

1555
01:04:31,280 --> 01:04:33,839
necessary

1556
01:04:35,039 --> 01:04:39,200
so our proof techniques are somewhat

1557
01:04:39,200 --> 01:04:41,680
more ad hoc than we would have liked but

1558
01:04:41,680 --> 01:04:43,119
the

1559
01:04:43,119 --> 01:04:44,000
i mean

1560
01:04:44,000 --> 01:04:45,920
in these proofs what the impression we

1561
01:04:45,920 --> 01:04:47,119
had was that

1562
01:04:47,119 --> 01:04:49,119
there are still no standardized

1563
01:04:49,119 --> 01:04:50,480
framework for

1564
01:04:50,480 --> 01:04:52,480
making these proofs so some some people

1565
01:04:52,480 --> 01:04:54,960
are trying to standardize the database

1566
01:04:54,960 --> 01:04:57,359
method for instance which would give us

1567
01:04:57,359 --> 01:04:59,280
some sort of counting proofs which can

1568
01:04:59,280 --> 01:05:03,200
be put into a standard framework but

1569
01:05:03,200 --> 01:05:05,520
here we use some somewhat ad hoc

1570
01:05:05,520 --> 01:05:07,359
arguments for the proof so

1571
01:05:07,359 --> 01:05:09,680
uh yes for that that may be

1572
01:05:09,680 --> 01:05:12,559
generalizable to blind unforgivability

1573
01:05:12,559 --> 01:05:15,680
but for that our main problem was

1574
01:05:15,680 --> 01:05:17,039
i mean we could not

1575
01:05:17,039 --> 01:05:19,839
clearly define how define the problem or

1576
01:05:19,839 --> 01:05:22,319
we were not sure how to use them so the

1577
01:05:22,319 --> 01:05:24,160
so what i'm trying to say is that the

1578
01:05:24,160 --> 01:05:26,240
proof techniques we use were not very

1579
01:05:26,240 --> 01:05:28,559
generalizable

1580
01:05:28,559 --> 01:05:32,119
okay thanks

1581
01:05:41,680 --> 01:05:44,078
okay

1582
01:05:44,240 --> 01:05:46,319
i guess

1583
01:05:46,319 --> 01:05:49,200
thanks a lot for your talk um

1584
01:05:49,200 --> 01:05:50,960
and that was the last talk in the

1585
01:05:50,960 --> 01:05:52,720
session

1586
01:05:52,720 --> 01:05:54,559
so i think we got

1587
01:05:54,559 --> 01:05:57,200
about a 30-minute break now we're even

1588
01:05:57,200 --> 01:05:59,280
three minutes early and then there is

1589
01:05:59,280 --> 01:06:03,280
the test of time award happening at

1590
01:06:03,280 --> 01:06:08,000
10 past the full hour wherever you are

1591
01:06:08,880 --> 01:06:11,359
it will be a bit later earlier

1592
01:06:11,359 --> 01:06:13,839
than for us

1593
01:06:15,039 --> 01:06:17,599
then have a nice day and

1594
01:06:17,599 --> 01:06:21,319
see you in half an hour

