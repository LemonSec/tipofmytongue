1
00:00:01,120 --> 00:00:03,439
i am pedra kotash and uh

2
00:00:03,439 --> 00:00:05,120
i'm going to talk about shayta super

3
00:00:05,120 --> 00:00:06,640
seeing our encryption from torsion

4
00:00:06,640 --> 00:00:10,559
attacks which is joint progress

5
00:00:13,920 --> 00:00:16,960
silva and

6
00:00:19,760 --> 00:00:22,160
so currently in this post quantum

7
00:00:22,160 --> 00:00:23,680
competition in the third round there are

8
00:00:23,680 --> 00:00:26,400
15 candidates eight fine less than seven

9
00:00:26,400 --> 00:00:28,560
alternate candidates and they're based

10
00:00:28,560 --> 00:00:29,519
on

11
00:00:29,519 --> 00:00:32,558
either lattices codes multivariate

12
00:00:32,558 --> 00:00:34,640
schemes isogenys hash functions or

13
00:00:34,640 --> 00:00:36,480
multi-party computation

14
00:00:36,480 --> 00:00:38,320
and there's only one isogenic based

15
00:00:38,320 --> 00:00:39,920
candidate which is an encryption scheme

16
00:00:39,920 --> 00:00:42,160
psych which has the advantage that it

17
00:00:42,160 --> 00:00:44,960
has small keys it has a disadvantage

18
00:00:44,960 --> 00:00:47,760
that it has a poor efficiency

19
00:00:47,760 --> 00:00:49,840
uh compared to

20
00:00:49,840 --> 00:00:51,920
other candidates it's usually an order

21
00:00:51,920 --> 00:00:53,280
of magnitude slower than for example

22
00:00:53,280 --> 00:00:55,840
lattices

23
00:00:56,879 --> 00:00:58,719
psych is based on sivh which was

24
00:00:58,719 --> 00:01:00,719
discovered in 2011

25
00:01:00,719 --> 00:01:02,640
and many isogen based protocols have

26
00:01:02,640 --> 00:01:05,119
been discovered since but not too many

27
00:01:05,119 --> 00:01:07,200
encryption schemes

28
00:01:07,200 --> 00:01:08,960
such a natural problem to build new

29
00:01:08,960 --> 00:01:10,840
encryption schemes based on different

30
00:01:10,840 --> 00:01:14,000
problems so our main contribution is

31
00:01:14,000 --> 00:01:15,920
shita which is a public key encryption

32
00:01:15,920 --> 00:01:17,680
scheme based on an injective chapter

33
00:01:17,680 --> 00:01:19,600
one-way function which is actually

34
00:01:19,600 --> 00:01:21,680
inspired by an attack against sidh

35
00:01:21,680 --> 00:01:24,080
variants called torsion point attacks

36
00:01:24,080 --> 00:01:25,759
which were initially discovered by

37
00:01:25,759 --> 00:01:28,560
patilla 2017 asia crypt

38
00:01:28,560 --> 00:01:30,479
our other main contribution

39
00:01:30,479 --> 00:01:33,520
is so that we also uh proposed concrete

40
00:01:33,520 --> 00:01:36,000
parameter sets for sheath and we also

41
00:01:36,000 --> 00:01:39,720
present the first implementation

42
00:01:40,000 --> 00:01:42,720
and we also finally we also introduced a

43
00:01:42,720 --> 00:01:44,880
new hardness assumption called the upper

44
00:01:44,880 --> 00:01:46,399
eye surgery assumption which actually

45
00:01:46,399 --> 00:01:48,079
encompasses all isogenic based

46
00:01:48,079 --> 00:01:49,280
assumptions

47
00:01:49,280 --> 00:01:52,159
used in practice

48
00:01:52,320 --> 00:01:54,320
so let me give a brief introduction to

49
00:01:54,320 --> 00:01:56,320
isolating the base crypto so let's uh e

50
00:01:56,320 --> 00:01:59,040
b not the curve which is uh has the fine

51
00:01:59,040 --> 00:02:01,680
equation y square equals x cubed uh plus

52
00:02:01,680 --> 00:02:04,240
a x plus b

53
00:02:04,240 --> 00:02:05,520
and the

54
00:02:05,520 --> 00:02:07,600
the points uh

55
00:02:07,600 --> 00:02:09,598
a finite field of q form an additive

56
00:02:09,598 --> 00:02:10,720
group

57
00:02:10,720 --> 00:02:13,360
uh where uh scalar multiplication so

58
00:02:13,360 --> 00:02:16,160
multiplying a point by n is the analog

59
00:02:16,160 --> 00:02:18,480
of exponentiation in this group

60
00:02:18,480 --> 00:02:20,400
and uh finally the

61
00:02:20,400 --> 00:02:22,480
en is is called the n torsion subgroup

62
00:02:22,480 --> 00:02:25,040
so the subgroup of elements whose order

63
00:02:25,040 --> 00:02:26,959
is a divisor of n and there's an

64
00:02:26,959 --> 00:02:28,959
abstract group this group is isomorphic

65
00:02:28,959 --> 00:02:31,840
to z over and that square

66
00:02:31,840 --> 00:02:34,319
an isogeny is a rational map between two

67
00:02:34,319 --> 00:02:37,040
elliptic curves uh e and f which sends

68
00:02:37,040 --> 00:02:39,120
the point of infinity of e to the point

69
00:02:39,120 --> 00:02:41,040
of infinity of f so in particular it's

70
00:02:41,040 --> 00:02:44,480
also a group homomorphism and an isogeny

71
00:02:44,480 --> 00:02:47,359
is separable if

72
00:02:48,080 --> 00:02:50,800
the degree of this map is just equal to

73
00:02:50,800 --> 00:02:53,120
the cardinality of the kernel

74
00:02:53,120 --> 00:02:54,879
finally if you have an isogen in between

75
00:02:54,879 --> 00:02:56,480
e and f and you also have an isogen in

76
00:02:56,480 --> 00:02:58,879
between f and equal to isogeny with the

77
00:02:58,879 --> 00:03:00,959
property but if you compose that with

78
00:03:00,959 --> 00:03:02,480
the original isogeny you just get

79
00:03:02,480 --> 00:03:05,840
multiplication by the degree

80
00:03:06,400 --> 00:03:08,800
let me give a brief example over f11 so

81
00:03:08,800 --> 00:03:11,360
the first curve e is y squared equals xq

82
00:03:11,360 --> 00:03:13,200
plus x and f is

83
00:03:13,200 --> 00:03:16,400
y squared equals x cubed minus 4x and

84
00:03:16,400 --> 00:03:18,800
this map phi goes from e to f and it's a

85
00:03:18,800 --> 00:03:21,680
misogyny in them uh

86
00:03:21,680 --> 00:03:22,400
and

87
00:03:22,400 --> 00:03:25,440
it uh the actual map is now drawn by

88
00:03:25,440 --> 00:03:27,840
these red dotted lines and as you can

89
00:03:27,840 --> 00:03:29,680
see the the kernel is actually generated

90
00:03:29,680 --> 00:03:31,280
by that breadth point

91
00:03:31,280 --> 00:03:33,840
and it has cardinality two it consists

92
00:03:33,840 --> 00:03:36,400
of that point and the point of infinity

93
00:03:36,400 --> 00:03:38,640
so this is a degree two map and it's

94
00:03:38,640 --> 00:03:42,000
analogous to uh squaring in in afghan

95
00:03:42,000 --> 00:03:44,319
star

96
00:03:44,640 --> 00:03:46,879
if a misogyny goes from e to e then it

97
00:03:46,879 --> 00:03:48,720
is called an endomorphism and then the

98
00:03:48,720 --> 00:03:51,360
morphisms of a curve form a ring

99
00:03:51,360 --> 00:03:55,439
under addition and compensation

100
00:03:56,080 --> 00:03:58,319
uh let me give some examples so one

101
00:03:58,319 --> 00:04:00,720
example is just multiplication by n so

102
00:04:00,720 --> 00:04:03,120
taking the point p and matrix to n times

103
00:04:03,120 --> 00:04:03,920
p

104
00:04:03,920 --> 00:04:05,680
another example is when the curve is

105
00:04:05,680 --> 00:04:07,680
defined over f p

106
00:04:07,680 --> 00:04:08,879
then

107
00:04:08,879 --> 00:04:12,640
you can map x y to x to the p y to the p

108
00:04:12,640 --> 00:04:13,920
and this is called the frobenius

109
00:04:13,920 --> 00:04:16,719
endomorphism

110
00:04:18,478 --> 00:04:20,639
the structure of the endomorphism uh

111
00:04:20,639 --> 00:04:23,199
allows us to uh classify

112
00:04:23,199 --> 00:04:26,000
curves into two categories

113
00:04:26,000 --> 00:04:27,440
so if the endomorphism ring of

114
00:04:27,440 --> 00:04:29,520
phenolphtic curve uh over a finite field

115
00:04:29,520 --> 00:04:30,880
is commutative

116
00:04:30,880 --> 00:04:33,040
and in particular in order of

117
00:04:33,040 --> 00:04:35,199
in a quadratic imaginary field then it

118
00:04:35,199 --> 00:04:36,160
is

119
00:04:36,160 --> 00:04:37,600
ordinary

120
00:04:37,600 --> 00:04:39,759
and when the endomorphism ring is

121
00:04:39,759 --> 00:04:42,240
non-commutative actually in particular a

122
00:04:42,240 --> 00:04:44,160
maximum order in a continuing algebra

123
00:04:44,160 --> 00:04:46,080
then it is called super singular

124
00:04:46,080 --> 00:04:48,240
and in this talk we will focus on super

125
00:04:48,240 --> 00:04:50,720
difference

126
00:04:51,360 --> 00:04:54,400
so now let me briefly recall uh sid8

127
00:04:54,400 --> 00:04:56,639
super single resolution

128
00:04:56,639 --> 00:04:58,320
which is a key exchange between alice

129
00:04:58,320 --> 00:04:59,680
and bob

130
00:04:59,680 --> 00:05:00,800
and now

131
00:05:00,800 --> 00:05:03,120
we have as parameters two integers and a

132
00:05:03,120 --> 00:05:05,680
and b which are coprime

133
00:05:05,680 --> 00:05:07,199
and smooth

134
00:05:07,199 --> 00:05:08,880
and

135
00:05:08,880 --> 00:05:11,919
now analyst chooses a secret isogeny5a

136
00:05:11,919 --> 00:05:14,720
of degree m a which goes from e0 to ea

137
00:05:14,720 --> 00:05:17,600
and bob chooses a secret isogen5 a of

138
00:05:17,600 --> 00:05:20,560
degree and b which goes from e0 to eb

139
00:05:20,560 --> 00:05:21,919
and their goal is to compute the

140
00:05:21,919 --> 00:05:24,560
push-forward isogenes which will result

141
00:05:24,560 --> 00:05:26,240
which should result in the same curve e

142
00:05:26,240 --> 00:05:27,120
a b

143
00:05:27,120 --> 00:05:29,039
a so in particular the kernel of phi a

144
00:05:29,039 --> 00:05:30,960
was generated by a

145
00:05:30,960 --> 00:05:33,600
and the kernel of uh eb is generated by

146
00:05:33,600 --> 00:05:34,400
b

147
00:05:34,400 --> 00:05:37,360
then you want the shared curve to be

148
00:05:37,360 --> 00:05:39,520
corresponding to the subgroup generated

149
00:05:39,520 --> 00:05:40,720
by a and b

150
00:05:40,720 --> 00:05:42,720
but if you only publish

151
00:05:42,720 --> 00:05:44,560
ea and indeed then there's no real way

152
00:05:44,560 --> 00:05:48,080
of actually arriving at this same shared

153
00:05:48,080 --> 00:05:49,120
curve

154
00:05:49,120 --> 00:05:49,919
so

155
00:05:49,919 --> 00:05:50,800
to

156
00:05:50,800 --> 00:05:52,479
to make this happen you also need to

157
00:05:52,479 --> 00:05:55,520
publish uh torsion point images so alice

158
00:05:55,520 --> 00:05:58,800
also publishes phi apb phi a q beaver pb

159
00:05:58,800 --> 00:06:00,720
and qb generate the beat version and

160
00:06:00,720 --> 00:06:04,080
also bob publishes five ep a5d qa where

161
00:06:04,080 --> 00:06:06,319
pa and q generate

162
00:06:06,319 --> 00:06:09,120
an a torsion

163
00:06:11,840 --> 00:06:14,880
so the hardness of this problem is

164
00:06:14,880 --> 00:06:16,720
dependent on the computational super

165
00:06:16,720 --> 00:06:19,680
singularized loginicity ssi problem

166
00:06:19,680 --> 00:06:22,400
which one is given to uh

167
00:06:22,400 --> 00:06:24,720
curves e0 and ea and we know that

168
00:06:24,720 --> 00:06:26,479
there's a degree and a isogen between

169
00:06:26,479 --> 00:06:28,960
them and the the goal is to find these

170
00:06:28,960 --> 00:06:32,160
best specialized logic however

171
00:06:32,160 --> 00:06:34,400
in sidh as you can see more information

172
00:06:34,400 --> 00:06:36,720
is given so you're not only given e01 ea

173
00:06:36,720 --> 00:06:39,759
and uh and the degree and a you're also

174
00:06:39,759 --> 00:06:42,880
given phi apb by a qp so you also know

175
00:06:42,880 --> 00:06:44,880
this secret isogeny

176
00:06:44,880 --> 00:06:47,199
on the and bait and beat version so

177
00:06:47,199 --> 00:06:50,720
we'll dub this the cst int problem

178
00:06:50,720 --> 00:06:53,759
so the morning in the case of sidh e0 is

179
00:06:53,759 --> 00:06:55,840
fixed

180
00:06:55,840 --> 00:06:59,919
and has no one in the morphesive ring

181
00:07:01,199 --> 00:07:02,639
uh and then

182
00:07:02,639 --> 00:07:04,880
underlying all these problems is the is

183
00:07:04,880 --> 00:07:07,520
the most natural number theory problem

184
00:07:07,520 --> 00:07:09,680
which is uh the endomorphism ring

185
00:07:09,680 --> 00:07:11,840
problem that one is given a curve e and

186
00:07:11,840 --> 00:07:16,280
one has to find its endomorphism ring

187
00:07:16,479 --> 00:07:18,960
now we'll briefly recall uh what torsion

188
00:07:18,960 --> 00:07:23,199
point detects are and give applications

189
00:07:23,199 --> 00:07:25,360
so torsion point attacks uh you want to

190
00:07:25,360 --> 00:07:27,599
solve uh the cssit problem and the

191
00:07:27,599 --> 00:07:30,560
endomorphism ring of e0 is known so you

192
00:07:30,560 --> 00:07:31,919
want to exploit this fact in a

193
00:07:31,919 --> 00:07:34,080
meaningful fashion and the main idea is

194
00:07:34,080 --> 00:07:35,759
the following so what is so one is

195
00:07:35,759 --> 00:07:38,160
looking for an isogenic phi a between e0

196
00:07:38,160 --> 00:07:39,759
and ea

197
00:07:39,759 --> 00:07:41,599
and then

198
00:07:41,599 --> 00:07:43,840
one can look at specific types of

199
00:07:43,840 --> 00:07:46,560
endomorphisms of the target curve

200
00:07:46,560 --> 00:07:47,440
ea

201
00:07:47,440 --> 00:07:50,960
which are of the form za plus phi a

202
00:07:50,960 --> 00:07:53,599
and an endomorphism from e0 and then phi

203
00:07:53,599 --> 00:07:56,159
8 duo

204
00:07:56,560 --> 00:07:59,680
and the main idea here is that uh

205
00:07:59,680 --> 00:08:03,360
if you take uh the endomorphism theta in

206
00:08:03,360 --> 00:08:07,360
e0 in a good fashion then this

207
00:08:07,360 --> 00:08:11,520
specific endomorphism of n uh of ea will

208
00:08:11,520 --> 00:08:14,639
be computable namely take uh find an

209
00:08:14,639 --> 00:08:17,599
integer d and theta in and b zero such

210
00:08:17,599 --> 00:08:18,479
that

211
00:08:18,479 --> 00:08:19,599
uh

212
00:08:19,599 --> 00:08:22,319
the degree of this endomorphism psi is

213
00:08:22,319 --> 00:08:24,560
nb square

214
00:08:24,560 --> 00:08:26,639
because then there is a not too hard way

215
00:08:26,639 --> 00:08:29,759
of actually computing style

216
00:08:29,759 --> 00:08:31,520
uh

217
00:08:31,520 --> 00:08:34,559
knowing uh phi a p b phi q b so even

218
00:08:34,559 --> 00:08:37,519
though you don't know phi a if i and you

219
00:08:37,519 --> 00:08:39,760
don't know phi hat you know how it acts

220
00:08:39,760 --> 00:08:41,519
on the unbeated version and this gives

221
00:08:41,519 --> 00:08:43,440
enough information to actually recompute

222
00:08:43,440 --> 00:08:44,399
psi

223
00:08:44,399 --> 00:08:46,959
if psi has degree and b square

224
00:08:46,959 --> 00:08:49,600
and then once psi is known then there is

225
00:08:49,600 --> 00:08:51,279
an easy way of

226
00:08:51,279 --> 00:08:54,240
recomputing the dual of phi a namely

227
00:08:54,240 --> 00:08:56,880
intersecting the kernel psi minus t

228
00:08:56,880 --> 00:08:59,200
uh with the n a torsion

229
00:08:59,200 --> 00:09:02,560
of e2 modulo some conditions some small

230
00:09:02,560 --> 00:09:06,359
conditions on theta

231
00:09:08,080 --> 00:09:10,080
essentially breaking the s test side

232
00:09:10,080 --> 00:09:13,360
cssi t problem reduces to finding d and

233
00:09:13,360 --> 00:09:16,640
theta such that the degree of this d

234
00:09:16,640 --> 00:09:20,080
plus phi a theta phi hat is equal to m e

235
00:09:20,080 --> 00:09:22,000
square

236
00:09:22,000 --> 00:09:23,760
and when the uh

237
00:09:23,760 --> 00:09:26,640
starting curve has j and variance 17 28

238
00:09:26,640 --> 00:09:28,560
this leads to a very particular norm

239
00:09:28,560 --> 00:09:29,680
equation

240
00:09:29,680 --> 00:09:30,640
uh

241
00:09:30,640 --> 00:09:32,399
d squared plus n a squared times c

242
00:09:32,399 --> 00:09:34,560
squared plus d times b squared plus a

243
00:09:34,560 --> 00:09:36,560
square equals n b square

244
00:09:36,560 --> 00:09:37,760
and

245
00:09:37,760 --> 00:09:40,399
we know that this has us you know we can

246
00:09:40,399 --> 00:09:42,880
compute the solution when n b is bigger

247
00:09:42,880 --> 00:09:45,680
than p times n a this has no impact on

248
00:09:45,680 --> 00:09:49,600
psych or sidh because in sidh n a and nb

249
00:09:49,600 --> 00:09:51,760
are roughly the same size and they're

250
00:09:51,760 --> 00:09:53,920
both roughly spirit of p

251
00:09:53,920 --> 00:09:56,959
so that's still secure

252
00:09:57,440 --> 00:09:59,600
however uh there is a

253
00:09:59,600 --> 00:10:02,560
more interesting uh approach

254
00:10:02,560 --> 00:10:04,160
namely so of course

255
00:10:04,160 --> 00:10:06,560
so the the previous term equation stands

256
00:10:06,560 --> 00:10:07,839
if you fix

257
00:10:07,839 --> 00:10:10,959
x0 to beat 1728

258
00:10:10,959 --> 00:10:12,640
but what happens if you want to design

259
00:10:12,640 --> 00:10:15,519
specific factor curves

260
00:10:15,519 --> 00:10:17,680
where you can solve this problem in a

261
00:10:17,680 --> 00:10:20,240
more general fashion so namely

262
00:10:20,240 --> 00:10:22,079
instead of

263
00:10:22,079 --> 00:10:23,120
choosing

264
00:10:23,120 --> 00:10:24,959
e0 first and then finding the

265
00:10:24,959 --> 00:10:27,440
endomorphism second you somehow find the

266
00:10:27,440 --> 00:10:30,399
endomorphism first and then find

267
00:10:30,399 --> 00:10:32,640
the the curve afterwards

268
00:10:32,640 --> 00:10:34,720
which in some sense doesn't make too

269
00:10:34,720 --> 00:10:36,399
much sense from the elliptic curve side

270
00:10:36,399 --> 00:10:37,200
but then you're working with

271
00:10:37,200 --> 00:10:39,600
transparency this perfectly makes sense

272
00:10:39,600 --> 00:10:41,360
and this leads to more generic term

273
00:10:41,360 --> 00:10:44,640
equation d squared plus n a squared n

274
00:10:44,640 --> 00:10:47,839
equals nb squared

275
00:10:47,920 --> 00:10:49,760
which you can solve whenever nb is

276
00:10:49,760 --> 00:10:51,839
bigger than a square because essentially

277
00:10:51,839 --> 00:10:54,480
you solve it uh module 1 a square

278
00:10:54,480 --> 00:10:54,890
and then

279
00:10:54,890 --> 00:10:56,399
[Music]

280
00:10:56,399 --> 00:10:58,320
i hope that

281
00:10:58,320 --> 00:11:00,959
the resulting n

282
00:11:00,959 --> 00:11:02,880
has the property that z square root of

283
00:11:02,880 --> 00:11:04,160
minus n

284
00:11:04,160 --> 00:11:07,600
is embedded in the quaternion algebra

285
00:11:07,600 --> 00:11:09,680
and if that is the case

286
00:11:09,680 --> 00:11:10,640
then

287
00:11:10,640 --> 00:11:12,560
after a few iterations this can be done

288
00:11:12,560 --> 00:11:13,519
easily

289
00:11:13,519 --> 00:11:15,839
so if that square root of minus n

290
00:11:15,839 --> 00:11:17,440
is in the quaternion algebra then you're

291
00:11:17,440 --> 00:11:19,200
looking then you can

292
00:11:19,200 --> 00:11:21,200
try to look for a specific maximum order

293
00:11:21,200 --> 00:11:23,200
that that contains that square root of

294
00:11:23,200 --> 00:11:26,240
minus n and that will be that e0 will be

295
00:11:26,240 --> 00:11:29,680
the backdoor curve

296
00:11:29,680 --> 00:11:31,360
uh and then

297
00:11:31,360 --> 00:11:34,560
if you know this endomorphism theta

298
00:11:34,560 --> 00:11:38,160
uh in nd 0

299
00:11:38,480 --> 00:11:41,200
such that that theta is just isomorphic

300
00:11:41,200 --> 00:11:42,480
that said spirit of matrix and that

301
00:11:42,480 --> 00:11:46,079
breaks the cssip problem

302
00:11:50,160 --> 00:11:53,200
okay so the shape of one way function

303
00:11:53,200 --> 00:11:54,240
one has

304
00:11:54,240 --> 00:11:58,000
this integer d n n a and b and the

305
00:11:58,000 --> 00:12:00,560
solution to d square plus n a square n

306
00:12:00,560 --> 00:12:02,240
equals m b squared and the public

307
00:12:02,240 --> 00:12:03,600
description

308
00:12:03,600 --> 00:12:06,320
is the starting curve e0 which contains

309
00:12:06,320 --> 00:12:08,320
uh this quadratic order that's square

310
00:12:08,320 --> 00:12:11,279
root of minus n uh p and q which

311
00:12:11,279 --> 00:12:13,279
generate the and b version and the first

312
00:12:13,279 --> 00:12:15,839
one has to note that you only know that

313
00:12:15,839 --> 00:12:17,680
this is that square root of minus n is

314
00:12:17,680 --> 00:12:20,160
gluten is containing and e0 you don't

315
00:12:20,160 --> 00:12:21,920
actually know the embedding

316
00:12:21,920 --> 00:12:24,560
the trapped the function itself

317
00:12:24,560 --> 00:12:29,279
uh you take a misogyny uh of uh degree a

318
00:12:29,279 --> 00:12:32,720
degree n a from e zero to e a and uh the

319
00:12:32,720 --> 00:12:35,440
output of the function is e a plus the

320
00:12:35,440 --> 00:12:38,079
images of the torsion points p and q

321
00:12:38,079 --> 00:12:39,600
under phi a

322
00:12:39,600 --> 00:12:42,160
and then the trapdoor information

323
00:12:42,160 --> 00:12:44,000
is just this theta which is contained in

324
00:12:44,000 --> 00:12:46,720
the endomorphism ring e zero such that z

325
00:12:46,720 --> 00:12:48,880
theta is isomorphic to z square root of

326
00:12:48,880 --> 00:12:50,240
minus m

327
00:12:50,240 --> 00:12:52,639
and inverting the one-way function it's

328
00:12:52,639 --> 00:12:54,720
just applying the torsion point attack

329
00:12:54,720 --> 00:12:58,240
against the cssrt problem

330
00:12:58,240 --> 00:13:02,240
the inversion problem is just the cssip

331
00:13:02,240 --> 00:13:04,240
problem plus

332
00:13:04,240 --> 00:13:06,880
the knowledge that you know that z

333
00:13:06,880 --> 00:13:08,639
squared of minus

334
00:13:08,639 --> 00:13:10,320
n is actually embedded in the

335
00:13:10,320 --> 00:13:14,000
endomorphism ring e0

336
00:13:14,000 --> 00:13:15,839
so now we are ready to

337
00:13:15,839 --> 00:13:17,920
give the details on parameter choices

338
00:13:17,920 --> 00:13:21,079
and implementation

339
00:13:22,959 --> 00:13:25,760
okay thank you very much peter for this

340
00:13:25,760 --> 00:13:27,839
introduction of the sheta trapdoor one

341
00:13:27,839 --> 00:13:28,880
function

342
00:13:28,880 --> 00:13:31,040
and now we are going to focus on the

343
00:13:31,040 --> 00:13:34,880
concrete instantiations of our scheme

344
00:13:34,880 --> 00:13:38,399
and first i'm going to give briefly to

345
00:13:38,399 --> 00:13:40,560
you the key generation procedure because

346
00:13:40,560 --> 00:13:42,800
this is not something that peter

347
00:13:42,800 --> 00:13:45,279
introduced to you but uh the key

348
00:13:45,279 --> 00:13:48,240
generation algorithm has a big impact on

349
00:13:48,240 --> 00:13:49,839
the selection the selection of

350
00:13:49,839 --> 00:13:51,040
parameters

351
00:13:51,040 --> 00:13:53,440
so our goal is to compute the curve e0

352
00:13:53,440 --> 00:13:55,360
with this embedding of this special

353
00:13:55,360 --> 00:13:57,360
quadratic order z square root of minus n

354
00:13:57,360 --> 00:13:59,279
inside it's on the morph zone

355
00:13:59,279 --> 00:14:01,279
and so how do we do that well the answer

356
00:14:01,279 --> 00:14:02,959
is that we're going to use the daring

357
00:14:02,959 --> 00:14:04,240
correspondence

358
00:14:04,240 --> 00:14:06,000
unfortunately we don't have the time in

359
00:14:06,000 --> 00:14:08,399
this video to introduce to you the nice

360
00:14:08,399 --> 00:14:10,160
details of this very interesting

361
00:14:10,160 --> 00:14:12,160
mathematical theory

362
00:14:12,160 --> 00:14:14,240
the main idea is that this

363
00:14:14,240 --> 00:14:16,800
correspondence gives you a way to

364
00:14:16,800 --> 00:14:17,839
interpret

365
00:14:17,839 --> 00:14:19,680
super single elliptic curves and

366
00:14:19,680 --> 00:14:23,040
isogenys as lattices inside a quaternion

367
00:14:23,040 --> 00:14:25,440
algebra whose definition only depends on

368
00:14:25,440 --> 00:14:28,240
the prime characteristic p

369
00:14:28,240 --> 00:14:31,360
so more concretely this means that uh

370
00:14:31,360 --> 00:14:33,600
elliptic curves are going to correspond

371
00:14:33,600 --> 00:14:35,839
to a maximum order of this quaternion

372
00:14:35,839 --> 00:14:37,500
algebra and um

373
00:14:37,500 --> 00:14:38,639
[Music]

374
00:14:38,639 --> 00:14:40,480
isogenys are

375
00:14:40,480 --> 00:14:43,440
equivalent to ideos both are types of

376
00:14:43,440 --> 00:14:46,560
lattices and i'm not going to be

377
00:14:46,560 --> 00:14:50,000
given giving any more details on that

378
00:14:50,000 --> 00:14:51,360
so what we need

379
00:14:51,360 --> 00:14:54,160
uh to start this to be using this direct

380
00:14:54,160 --> 00:14:55,839
correspondence for our algorithm is a

381
00:14:55,839 --> 00:14:58,320
starting curve f0 with a special on the

382
00:14:58,320 --> 00:15:01,680
morphism ring f0 which is isomorphic to

383
00:15:01,680 --> 00:15:04,560
the maximal order o0 which we know and

384
00:15:04,560 --> 00:15:06,480
in fact for this special car we also

385
00:15:06,480 --> 00:15:08,800
require that we can evaluate the

386
00:15:08,800 --> 00:15:11,279
endomorphisms of this curve efficiently

387
00:15:11,279 --> 00:15:13,120
so you can show that you can find such a

388
00:15:13,120 --> 00:15:16,560
curve for uh every prime p but there are

389
00:15:16,560 --> 00:15:18,720
only a few of them and most of the other

390
00:15:18,720 --> 00:15:20,320
super singular curves

391
00:15:20,320 --> 00:15:22,800
uh we don't know what their on the

392
00:15:22,800 --> 00:15:25,120
marxism ring looks like and how to

393
00:15:25,120 --> 00:15:27,120
evaluate them so this is really a

394
00:15:27,120 --> 00:15:29,600
special case but we know that it exists

395
00:15:29,600 --> 00:15:32,240
once we have done that here here is the

396
00:15:32,240 --> 00:15:34,480
algorithm that we are going to use

397
00:15:34,480 --> 00:15:36,720
so the idea is that we start by finding

398
00:15:36,720 --> 00:15:39,279
an element theta of num n and trace 0

399
00:15:39,279 --> 00:15:42,160
inside the quotient algebra so this is

400
00:15:42,160 --> 00:15:44,959
done by solving uh basically quadratic

401
00:15:44,959 --> 00:15:46,639
equations

402
00:15:46,639 --> 00:15:48,560
and with that we obtain an element theta

403
00:15:48,560 --> 00:15:50,720
such that z of t is isomorphic to z

404
00:15:50,720 --> 00:15:52,720
square root of minus n

405
00:15:52,720 --> 00:15:55,440
then we can find a maximum order o that

406
00:15:55,440 --> 00:15:57,680
is containing this element theta and

407
00:15:57,680 --> 00:15:59,839
this will give under the ring

408
00:15:59,839 --> 00:16:01,759
correspondence the curve e0 that we are

409
00:16:01,759 --> 00:16:03,839
looking for and the embedding is going

410
00:16:03,839 --> 00:16:06,000
to be obtained through this theta

411
00:16:06,000 --> 00:16:09,040
so now how do we do to find uh e0 well

412
00:16:09,040 --> 00:16:11,680
we are going to use ideals in particular

413
00:16:11,680 --> 00:16:13,519
we are going to compute a connecting

414
00:16:13,519 --> 00:16:14,959
ideal i

415
00:16:14,959 --> 00:16:17,279
between o zero so the special maximum

416
00:16:17,279 --> 00:16:18,800
order and the

417
00:16:18,800 --> 00:16:19,600
o

418
00:16:19,600 --> 00:16:22,079
the order that we just computed and

419
00:16:22,079 --> 00:16:23,839
under the during correspondence we know

420
00:16:23,839 --> 00:16:26,240
that this gives an hysogeny from

421
00:16:26,240 --> 00:16:28,079
f0 to e0

422
00:16:28,079 --> 00:16:30,720
so if we can compute this this hysogeny

423
00:16:30,720 --> 00:16:33,440
then the uncertain problem was e0 is

424
00:16:33,440 --> 00:16:34,880
going to be the codomain of this

425
00:16:34,880 --> 00:16:37,120
hydrogen

426
00:16:37,120 --> 00:16:39,920
and so the this last step is actually

427
00:16:39,920 --> 00:16:41,600
the the bottleneck in the computation

428
00:16:41,600 --> 00:16:44,240
because apart from that all the other

429
00:16:44,240 --> 00:16:46,000
operations are done over the particular

430
00:16:46,000 --> 00:16:50,480
algebra with linear algebra and the

431
00:16:51,120 --> 00:16:53,360
which we know how to do efficiently so

432
00:16:53,360 --> 00:16:55,839
the hard step is the the last one which

433
00:16:55,839 --> 00:16:58,079
was only recently introduced in the

434
00:16:58,079 --> 00:17:02,160
context of isogeny based cryptography

435
00:17:02,160 --> 00:17:04,079
and i i won't get into the detail

436
00:17:04,079 --> 00:17:05,839
because the algorithm is quite uh it's

437
00:17:05,839 --> 00:17:08,160
quite complicated remember that this is

438
00:17:08,160 --> 00:17:10,959
the this translation from quaternion to

439
00:17:10,959 --> 00:17:14,160
isotonix is the hard part

440
00:17:14,160 --> 00:17:16,559
so now that we have that in mind we can

441
00:17:16,559 --> 00:17:19,679
uh go to the the parameter selection

442
00:17:19,679 --> 00:17:21,760
so a generic principle that we have to

443
00:17:21,760 --> 00:17:23,839
remember is that if we want isogenic

444
00:17:23,839 --> 00:17:26,079
computations to be efficient we first

445
00:17:26,079 --> 00:17:28,480
need that degree to be smooth

446
00:17:28,480 --> 00:17:30,960
and also to have the kernel defined over

447
00:17:30,960 --> 00:17:34,640
fpk where k is small and this is

448
00:17:34,640 --> 00:17:36,640
equivalent to say to saying that the

449
00:17:36,640 --> 00:17:40,720
degree must divide p to the k minus one

450
00:17:41,120 --> 00:17:42,799
so now that we have that

451
00:17:42,799 --> 00:17:46,000
we see that the goal will be to find a

452
00:17:46,000 --> 00:17:48,320
prime p such that p to the k minus one

453
00:17:48,320 --> 00:17:50,960
has a lot of smooth factor and the size

454
00:17:50,960 --> 00:17:53,200
of this smooth factor depends on the

455
00:17:53,200 --> 00:17:56,000
scheme we want to we want to to build so

456
00:17:56,000 --> 00:17:58,960
in our case here are the requirements

457
00:17:58,960 --> 00:18:00,799
first for encryption decryption we have

458
00:18:00,799 --> 00:18:03,120
this degrees n a and then b

459
00:18:03,120 --> 00:18:05,840
and if you remember but what peter said

460
00:18:05,840 --> 00:18:08,480
earlier uh these are the values that we

461
00:18:08,480 --> 00:18:10,240
are going to use these are the degree of

462
00:18:10,240 --> 00:18:11,919
the isogenic we need to compute for the

463
00:18:11,919 --> 00:18:13,760
trouble one way function so this would

464
00:18:13,760 --> 00:18:15,760
be the part involved in the encryption

465
00:18:15,760 --> 00:18:18,799
and decryption and we have a bound and b

466
00:18:18,799 --> 00:18:20,880
bigger than n squared and we we also

467
00:18:20,880 --> 00:18:23,600
need that these two degrees must be

468
00:18:23,600 --> 00:18:25,440
copri

469
00:18:25,440 --> 00:18:27,440
then for the key generation we need

470
00:18:27,440 --> 00:18:30,160
other parameters t and l to the e which

471
00:18:30,160 --> 00:18:31,840
i did not introduce but you have to

472
00:18:31,840 --> 00:18:34,240
believe me we need them and you also

473
00:18:34,240 --> 00:18:37,200
have to believe me that we have the very

474
00:18:37,200 --> 00:18:40,400
complicated constraint on p that t must

475
00:18:40,400 --> 00:18:42,799
be bigger than p to the three divided by

476
00:18:42,799 --> 00:18:45,120
two and the fact that t must be bigger

477
00:18:45,120 --> 00:18:48,320
than p in particular is what uh is going

478
00:18:48,320 --> 00:18:50,720
to make the the selection parameter

479
00:18:50,720 --> 00:18:53,039
complicated because basically we cannot

480
00:18:53,039 --> 00:18:56,559
find a value of t and then

481
00:18:56,559 --> 00:18:59,120
sorry we cannot fix a value of t and

482
00:18:59,120 --> 00:19:02,320
then uh find a p such that for instance

483
00:19:02,320 --> 00:19:04,080
p to the squared minus one is going to

484
00:19:04,080 --> 00:19:06,720
be uh divided by t so we must go the

485
00:19:06,720 --> 00:19:08,960
other way around which is select uh

486
00:19:08,960 --> 00:19:11,919
several possible primes until we we find

487
00:19:11,919 --> 00:19:14,480
one with a suitable t

488
00:19:14,480 --> 00:19:16,720
okay and of course we in that with that

489
00:19:16,720 --> 00:19:19,520
method the factors in t are still going

490
00:19:19,520 --> 00:19:21,760
to be quite big as you're going to see

491
00:19:21,760 --> 00:19:23,600
next

492
00:19:23,600 --> 00:19:26,880
so now uh in terms of security uh we

493
00:19:26,880 --> 00:19:29,760
need na to be quite big to avoid meeting

494
00:19:29,760 --> 00:19:32,240
the middle attacks and also p to be big

495
00:19:32,240 --> 00:19:33,840
to avoid generic on the motors and win

496
00:19:33,840 --> 00:19:35,760
computation and you can see from the

497
00:19:35,760 --> 00:19:38,160
torsional requirement above that with

498
00:19:38,160 --> 00:19:40,000
those two constraints

499
00:19:40,000 --> 00:19:42,480
this also give us a bound on the the

500
00:19:42,480 --> 00:19:47,120
values of nb and the size of nv and t

501
00:19:47,120 --> 00:19:47,919
so

502
00:19:47,919 --> 00:19:50,080
here are all what we need to know about

503
00:19:50,080 --> 00:19:51,440
the parameters

504
00:19:51,440 --> 00:19:53,679
and basically to choose them we have two

505
00:19:53,679 --> 00:19:54,880
strategies

506
00:19:54,880 --> 00:19:55,760
other

507
00:19:55,760 --> 00:19:57,840
either we choose a

508
00:19:57,840 --> 00:19:59,600
faster encryption and decryption but

509
00:19:59,600 --> 00:20:02,000
slower key generation and so for that

510
00:20:02,000 --> 00:20:04,240
the idea is to choose optimal degrees

511
00:20:04,240 --> 00:20:06,320
for n a and b so in this case it would

512
00:20:06,320 --> 00:20:08,559
be powers of twos and threes

513
00:20:08,559 --> 00:20:10,240
and so we can do that and have them

514
00:20:10,240 --> 00:20:12,240
defined over f squared

515
00:20:12,240 --> 00:20:14,960
but the problem is that in that case

516
00:20:14,960 --> 00:20:17,600
uh t is going to be defined over a field

517
00:20:17,600 --> 00:20:20,000
expansion of degree maybe like a few

518
00:20:20,000 --> 00:20:20,960
hundred

519
00:20:20,960 --> 00:20:23,440
and if even if that's polynomial

520
00:20:23,440 --> 00:20:26,159
technically polynomial uh it's still in

521
00:20:26,159 --> 00:20:28,480
practice very big and so in the end we

522
00:20:28,480 --> 00:20:30,480
would end up with a key generation which

523
00:20:30,480 --> 00:20:33,679
would probably uh impractical

524
00:20:33,679 --> 00:20:35,840
so the other possibility which is what

525
00:20:35,840 --> 00:20:38,720
we choose to do for our implementation

526
00:20:38,720 --> 00:20:41,200
is rather to start with finding a good

527
00:20:41,200 --> 00:20:45,039
prime uh p with a good uh torsion

528
00:20:45,039 --> 00:20:48,799
uh points uh t torsion points and then

529
00:20:48,799 --> 00:20:51,120
to choose n a and n b among this

530
00:20:51,120 --> 00:20:52,880
available torsion

531
00:20:52,880 --> 00:20:55,360
and with that strategy we get that all

532
00:20:55,360 --> 00:20:57,200
the torsion points are defined above f p

533
00:20:57,200 --> 00:20:59,919
squared with which give us a reasonable

534
00:20:59,919 --> 00:21:02,640
key generation which of course since the

535
00:21:02,640 --> 00:21:04,799
the factors in n a and m b are going to

536
00:21:04,799 --> 00:21:07,120
be a lot bigger than two and three

537
00:21:07,120 --> 00:21:09,360
the encryption and encryption mechanism

538
00:21:09,360 --> 00:21:12,080
are going to be a lot slower

539
00:21:12,080 --> 00:21:14,240
so we we did this

540
00:21:14,240 --> 00:21:15,880
for uh

541
00:21:15,880 --> 00:21:18,880
128 bits of security and we obtained a

542
00:21:18,880 --> 00:21:21,200
400 bit prime p

543
00:21:21,200 --> 00:21:22,480
of this form

544
00:21:22,480 --> 00:21:24,880
with the following factors

545
00:21:24,880 --> 00:21:27,280
and you can see for instance that there

546
00:21:27,280 --> 00:21:29,919
are a lot of very big factors in nb

547
00:21:29,919 --> 00:21:31,760
which is what is going to slow down the

548
00:21:31,760 --> 00:21:33,600
computation and the decryption mechanism

549
00:21:33,600 --> 00:21:36,080
in particular and so with that in mind

550
00:21:36,080 --> 00:21:38,720
we get that the key generation so we

551
00:21:38,720 --> 00:21:41,760
made an implementation in c

552
00:21:41,760 --> 00:21:44,000
and we get that the key generation takes

553
00:21:44,000 --> 00:21:46,960
10 hours the encryption takes 4.6

554
00:21:46,960 --> 00:21:48,720
seconds in average and then the

555
00:21:48,720 --> 00:21:50,240
decryption

556
00:21:50,240 --> 00:21:54,880
is 10.6 minutes in average

557
00:21:54,880 --> 00:21:57,600
and so that will conclude uh this brief

558
00:21:57,600 --> 00:21:59,919
introduction of our implementation and

559
00:21:59,919 --> 00:22:01,919
i'm going to switch to the last part of

560
00:22:01,919 --> 00:22:03,919
the talk which is about this uber

561
00:22:03,919 --> 00:22:07,200
isogeny assumption

562
00:22:08,320 --> 00:22:09,520
so

563
00:22:09,520 --> 00:22:12,320
the base of the uber isogeny assumption

564
00:22:12,320 --> 00:22:15,440
are quality orders and their links with

565
00:22:15,440 --> 00:22:17,280
super singular eptic curves in

566
00:22:17,280 --> 00:22:18,960
particular we can define the two

567
00:22:18,960 --> 00:22:22,159
following sets so first we have fo which

568
00:22:22,159 --> 00:22:25,760
are the sets of embeddings from o to the

569
00:22:25,760 --> 00:22:27,600
endomorphism ring of super singular lt

570
00:22:27,600 --> 00:22:30,000
curves and then we have eo which is the

571
00:22:30,000 --> 00:22:31,919
set of curves admitting such an

572
00:22:31,919 --> 00:22:34,320
embedding

573
00:22:35,039 --> 00:22:37,600
and there is a very nice mathematical

574
00:22:37,600 --> 00:22:39,760
property that says that we have actually

575
00:22:39,760 --> 00:22:43,200
a group action from the class group of o

576
00:22:43,200 --> 00:22:45,360
which is an avaliant group so we have an

577
00:22:45,360 --> 00:22:46,880
ability and group action

578
00:22:46,880 --> 00:22:50,400
uh so on the class group on this set of

579
00:22:50,400 --> 00:22:52,240
um embeddings

580
00:22:52,240 --> 00:22:53,200
okay

581
00:22:53,200 --> 00:22:55,919
and i write this operation star

582
00:22:55,919 --> 00:22:58,559
uh and under this notation i'm actually

583
00:22:58,559 --> 00:23:01,200
hiding some isogenic computation which

584
00:23:01,200 --> 00:23:03,520
is why this framework is actually part

585
00:23:03,520 --> 00:23:05,760
of isogd-based cryptography

586
00:23:05,760 --> 00:23:08,400
and so the idea to use that with super

587
00:23:08,400 --> 00:23:10,400
singularity curve

588
00:23:10,400 --> 00:23:13,200
was first introduced uh by kastrik and

589
00:23:13,200 --> 00:23:15,280
al in 2018

590
00:23:15,280 --> 00:23:17,679
with the seaside scheme

591
00:23:17,679 --> 00:23:20,480
and so they instantiate this group

592
00:23:20,480 --> 00:23:24,080
action in the specific case where o is z

593
00:23:24,080 --> 00:23:25,840
square root of minus p because in that

594
00:23:25,840 --> 00:23:28,240
case the unveiling is actually very

595
00:23:28,240 --> 00:23:30,240
easy to compute and it is induced by the

596
00:23:30,240 --> 00:23:33,280
frobenius morphism

597
00:23:33,840 --> 00:23:35,919
and so yeah and the goal of seaside was

598
00:23:35,919 --> 00:23:39,120
to uh define a key exchange

599
00:23:39,120 --> 00:23:42,720
from this group action id

600
00:23:42,720 --> 00:23:44,480
so now that i have introduced to you

601
00:23:44,480 --> 00:23:46,960
this notation i can state

602
00:23:46,960 --> 00:23:47,919
the

603
00:23:47,919 --> 00:23:50,000
uber isogenic problem which is always

604
00:23:50,000 --> 00:23:52,240
parameterized by some

605
00:23:52,240 --> 00:23:54,080
quadratic order o

606
00:23:54,080 --> 00:23:56,080
and so the idea of this problem is that

607
00:23:56,080 --> 00:23:59,679
given uh e0 and yota 0 so a correct

608
00:23:59,679 --> 00:24:00,799
embedding

609
00:24:00,799 --> 00:24:04,080
and a curve in the set e0 but here given

610
00:24:04,080 --> 00:24:06,640
without the embedding and this is

611
00:24:06,640 --> 00:24:10,480
important the goal is to find an ideal a

612
00:24:10,480 --> 00:24:14,720
uh that is sending e0 0 to e yota where

613
00:24:14,720 --> 00:24:16,880
you take the correct embedding from o2

614
00:24:16,880 --> 00:24:20,000
the under morph summary of

615
00:24:20,400 --> 00:24:22,720
and the best generic algorithm to solve

616
00:24:22,720 --> 00:24:24,240
this problem

617
00:24:24,240 --> 00:24:28,320
depends is linear in the size of e0

618
00:24:28,320 --> 00:24:29,679
and

619
00:24:29,679 --> 00:24:30,720
in

620
00:24:30,720 --> 00:24:32,880
in general we don't know much about this

621
00:24:32,880 --> 00:24:34,559
set but it is conjecture to have

622
00:24:34,559 --> 00:24:36,320
exponential size

623
00:24:36,320 --> 00:24:38,799
uh in most cases and the only generic

624
00:24:38,799 --> 00:24:40,720
property that we have on it is that it

625
00:24:40,720 --> 00:24:43,440
is smaller than the set f o

626
00:24:43,440 --> 00:24:46,720
which is roughly equal to the class

627
00:24:46,720 --> 00:24:49,679
number which is roughly equal to um the

628
00:24:49,679 --> 00:24:52,400
square root of the discriminant

629
00:24:52,400 --> 00:24:54,720
but uh yeah in in most cases it is

630
00:24:54,720 --> 00:24:57,600
conjectured to be exponentially hard and

631
00:24:57,600 --> 00:25:00,000
this is why and the hardness of the ouip

632
00:25:00,000 --> 00:25:02,159
is what we call the uber isogeny

633
00:25:02,159 --> 00:25:04,640
assumption

634
00:25:04,720 --> 00:25:07,039
so now let me illustrate to you the

635
00:25:07,039 --> 00:25:09,200
interest of this new problem

636
00:25:09,200 --> 00:25:11,840
by sharing the links with this problem

637
00:25:11,840 --> 00:25:13,440
between this problem and various

638
00:25:13,440 --> 00:25:16,080
protocols and security problems in

639
00:25:16,080 --> 00:25:18,480
esogenic based cryptography

640
00:25:18,480 --> 00:25:20,799
so of course the the first obvious

641
00:25:20,799 --> 00:25:22,960
starting point is seaside even the

642
00:25:22,960 --> 00:25:24,799
formulation of seaside and the

643
00:25:24,799 --> 00:25:27,760
formulation of ouip it is no surprise

644
00:25:27,760 --> 00:25:29,279
that

645
00:25:29,279 --> 00:25:32,000
the z squared of minus p uip is actually

646
00:25:32,000 --> 00:25:34,400
equivalent to the seaside key recovery

647
00:25:34,400 --> 00:25:36,799
problem

648
00:25:37,600 --> 00:25:41,360
a lot more less obvious link is between

649
00:25:41,360 --> 00:25:44,240
the uber essentially problem and the

650
00:25:44,240 --> 00:25:46,159
sidh scheme

651
00:25:46,159 --> 00:25:47,200
okay

652
00:25:47,200 --> 00:25:49,679
we actually realized and in fact this

653
00:25:49,679 --> 00:25:51,679
this property is also what underlies

654
00:25:51,679 --> 00:25:53,440
deduction point attacks that peter

655
00:25:53,440 --> 00:25:56,159
presented you earlier that if e0 is

656
00:25:56,159 --> 00:25:57,279
embedded

657
00:25:57,279 --> 00:25:58,320
uh

658
00:25:58,320 --> 00:26:01,520
with a quadratic order o0 then the

659
00:26:01,520 --> 00:26:06,240
existence of phi a between e0 and ea

660
00:26:06,240 --> 00:26:09,120
implies that ea is embedded

661
00:26:09,120 --> 00:26:11,760
the odometer pa is embedded with z plus

662
00:26:11,760 --> 00:26:14,240
n a times o0 so this is a new quadratic

663
00:26:14,240 --> 00:26:15,279
order

664
00:26:15,279 --> 00:26:18,559
and with that we see that if we can

665
00:26:18,559 --> 00:26:20,320
we can actually prove that if we can

666
00:26:20,320 --> 00:26:23,600
break the z plus n a or zero uap then we

667
00:26:23,600 --> 00:26:24,799
can break the

668
00:26:24,799 --> 00:26:28,960
sidh key recovery problem

669
00:26:29,279 --> 00:26:31,360
we actually have the same thing about

670
00:26:31,360 --> 00:26:34,559
sheta okay so once again we take this n

671
00:26:34,559 --> 00:26:36,960
solution of the quadratic equation and

672
00:26:36,960 --> 00:26:39,840
then by design we know that the public

673
00:26:39,840 --> 00:26:43,200
key curve e0 is uh contained inside e z

674
00:26:43,200 --> 00:26:44,960
z square root of minus n

675
00:26:44,960 --> 00:26:47,360
and so if we can break the uap problem

676
00:26:47,360 --> 00:26:49,360
for this quantity order then we can

677
00:26:49,360 --> 00:26:51,840
recover shutter

678
00:26:51,840 --> 00:26:54,158
keys

679
00:26:54,400 --> 00:26:55,840
and finally

680
00:26:55,840 --> 00:26:58,640
and most importantly maybe if we select

681
00:26:58,640 --> 00:27:01,279
aquatic order o such that every curve

682
00:27:01,279 --> 00:27:03,120
every super singular curve is contained

683
00:27:03,120 --> 00:27:06,640
inside this set of zero e e0 then you

684
00:27:06,640 --> 00:27:10,880
can actually show that breaking the ouip

685
00:27:10,880 --> 00:27:14,080
allows you to break the css generic cssi

686
00:27:14,080 --> 00:27:15,679
problem

687
00:27:15,679 --> 00:27:17,279
and

688
00:27:17,279 --> 00:27:19,360
so this is very strong because it means

689
00:27:19,360 --> 00:27:21,279
really that the uh

690
00:27:21,279 --> 00:27:23,840
uber isogenic assumption is related to a

691
00:27:23,840 --> 00:27:26,720
very the one of the most generic

692
00:27:26,720 --> 00:27:28,080
uh

693
00:27:28,080 --> 00:27:31,840
isogeny uh based problem

694
00:27:32,080 --> 00:27:36,320
and so yeah i'll conclude uh my uh my my

695
00:27:36,320 --> 00:27:38,799
my talk on this uh uber i certainly

696
00:27:38,799 --> 00:27:41,200
assumption now and just let me conclude

697
00:27:41,200 --> 00:27:42,799
briefly by saying that we have

698
00:27:42,799 --> 00:27:44,240
introduced a new post quantum

699
00:27:44,240 --> 00:27:46,880
description scheme whose mechanism is

700
00:27:46,880 --> 00:27:49,760
inspired by the torsion point attacks on

701
00:27:49,760 --> 00:27:51,120
sidh

702
00:27:51,120 --> 00:27:52,960
we have made an implementation of this

703
00:27:52,960 --> 00:27:55,120
and we saw that the efficiencies see

704
00:27:55,120 --> 00:27:58,000
orders of magnitude below sidh

705
00:27:58,000 --> 00:28:00,960
but we have new security problems

706
00:28:00,960 --> 00:28:04,000
which may introduce nice security versus

707
00:28:04,000 --> 00:28:06,000
efficiency traders

708
00:28:06,000 --> 00:28:09,200
we have also introduced a new generic uh

709
00:28:09,200 --> 00:28:11,279
isogeny assumption

710
00:28:11,279 --> 00:28:14,080
uh for isogenimese photography and here

711
00:28:14,080 --> 00:28:16,720
are a few open questions and directions

712
00:28:16,720 --> 00:28:18,480
for future work

713
00:28:18,480 --> 00:28:20,799
so we need to explore the other traders

714
00:28:20,799 --> 00:28:23,520
or parameters and maybe try to see if we

715
00:28:23,520 --> 00:28:25,840
can make the key generation efficient

716
00:28:25,840 --> 00:28:28,320
while getting the fastest possible

717
00:28:28,320 --> 00:28:30,000
encryption and decryption it would be

718
00:28:30,000 --> 00:28:32,559
very nice to have a comparison with sidh

719
00:28:32,559 --> 00:28:34,240
in this setting

720
00:28:34,240 --> 00:28:36,320
uh we also need to understand better the

721
00:28:36,320 --> 00:28:39,600
ouip and as i mentioned in particular we

722
00:28:39,600 --> 00:28:42,000
need to study this set eo and its

723
00:28:42,000 --> 00:28:45,120
cardinal to to get a good estimation on

724
00:28:45,120 --> 00:28:46,000
the

725
00:28:46,000 --> 00:28:47,600
on the complexity

726
00:28:47,600 --> 00:28:49,760
and finally we need to study more the

727
00:28:49,760 --> 00:28:52,320
sheta security which is based on several

728
00:28:52,320 --> 00:28:54,399
new problems which are

729
00:28:54,399 --> 00:28:58,559
different from the ouip that i mentioned

730
00:28:58,559 --> 00:29:00,960
and so i'll thank you for watching this

731
00:29:00,960 --> 00:29:03,679
video and please have a look at the full

732
00:29:03,679 --> 00:29:05,760
eprint version

733
00:29:05,760 --> 00:29:09,240
for more details

