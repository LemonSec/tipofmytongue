1
00:00:02,240 --> 00:00:04,560
hello this is pyongyang and i'm going to

2
00:00:04,560 --> 00:00:05,680
talk about

3
00:00:05,680 --> 00:00:07,759
word of fully secure authenticated

4
00:00:07,759 --> 00:00:09,840
encryption scheme from a pseudorandom

5
00:00:09,840 --> 00:00:11,599
permutation

6
00:00:11,599 --> 00:00:14,799
this is joint work with wansa yangmin

7
00:00:14,799 --> 00:00:17,919
and trio

8
00:00:19,840 --> 00:00:22,400
let's start with the introduction

9
00:00:22,400 --> 00:00:24,800
as everyone knows authenticated

10
00:00:24,800 --> 00:00:27,119
encryption is a symmetric algorithm that

11
00:00:27,119 --> 00:00:28,880
protects both integrity and

12
00:00:28,880 --> 00:00:32,000
confidentiality at once

13
00:00:32,000 --> 00:00:34,480
if at least want to send a message with

14
00:00:34,480 --> 00:00:37,360
associated data to pop securely

15
00:00:37,360 --> 00:00:39,760
at least compute separate text and tag

16
00:00:39,760 --> 00:00:42,079
by using authenticated encryption

17
00:00:42,079 --> 00:00:45,039
then send it to bob

18
00:00:45,039 --> 00:00:47,440
bob will try to decrypt the message from

19
00:00:47,440 --> 00:00:49,520
given associated data

20
00:00:49,520 --> 00:00:52,239
ciphertext and tag

21
00:00:52,239 --> 00:00:54,559
if the given ciphertext attack pair is

22
00:00:54,559 --> 00:00:55,760
valid

23
00:00:55,760 --> 00:00:58,399
bob would get the correct decrypt

24
00:00:58,399 --> 00:01:00,559
but otherwise bob would get failure

25
00:01:00,559 --> 00:01:03,440
symbol but

26
00:01:04,559 --> 00:01:06,880
using non-c is a common way to guarantee

27
00:01:06,880 --> 00:01:09,520
the variability of the ciphertext and we

28
00:01:09,520 --> 00:01:11,920
call them non-spaced authenticate

29
00:01:11,920 --> 00:01:15,840
encryption or nae in short

30
00:01:15,840 --> 00:01:19,600
in nae security is guaranteed only if a

31
00:01:19,600 --> 00:01:22,320
nonce is never repeated

32
00:01:22,320 --> 00:01:24,960
for example

33
00:01:24,960 --> 00:01:27,119
contour mode or gcm

34
00:01:27,119 --> 00:01:29,680
licks its hash key as soon as a single

35
00:01:29,680 --> 00:01:33,119
nonce is used twice

36
00:01:35,119 --> 00:01:37,600
however it might be challenging to keep

37
00:01:37,600 --> 00:01:40,799
the uniqueness of the notes for example

38
00:01:40,799 --> 00:01:43,280
in a stateless device where good quality

39
00:01:43,280 --> 00:01:46,399
of randomness is not available

40
00:01:46,399 --> 00:01:49,040
therefore there are such a designs

41
00:01:49,040 --> 00:01:52,079
achieving nonsense resistance called

42
00:01:52,079 --> 00:01:57,520
resource-resistant resistance ae or mrae

43
00:01:57,520 --> 00:02:00,399
mra guarantees security

44
00:02:00,399 --> 00:02:04,320
even if the noise is repeated

45
00:02:05,360 --> 00:02:08,160
now i will introduce two constructions

46
00:02:08,160 --> 00:02:10,878
that motivated this work

47
00:02:10,878 --> 00:02:13,680
non-space enhanced hashtag mask is a

48
00:02:13,680 --> 00:02:16,160
message authentication code proposed by

49
00:02:16,160 --> 00:02:21,879
duta landi and tanika at 2019.

50
00:02:22,080 --> 00:02:23,680
provides beyond the perception on

51
00:02:23,680 --> 00:02:26,879
security or more precisely it is secured

52
00:02:26,879 --> 00:02:28,959
up to two to the three and over four

53
00:02:28,959 --> 00:02:32,000
authentication queries

54
00:02:32,000 --> 00:02:34,720
also insecurity gratefully degrades in

55
00:02:34,720 --> 00:02:36,879
those non-smith setting

56
00:02:36,879 --> 00:02:40,319
in detail the security of nhtm can be

57
00:02:40,319 --> 00:02:42,400
represented with a function of

58
00:02:42,400 --> 00:02:46,879
number of queries with repeated nonsense

59
00:02:47,840 --> 00:02:49,599
aes to shameless

60
00:02:49,599 --> 00:02:52,239
is a recently proposed misuse resistant

61
00:02:52,239 --> 00:02:53,200
ae

62
00:02:53,200 --> 00:02:54,959
which is secure up to two to the end

63
00:02:54,959 --> 00:02:57,599
queries in those respective settings

64
00:02:57,599 --> 00:02:59,760
and secure up to two to the end of two

65
00:02:59,760 --> 00:03:03,040
queries in the special setting

66
00:03:03,040 --> 00:03:06,959
it can be seen as a variant of gms iv

67
00:03:06,959 --> 00:03:09,599
and the core difference is to use

68
00:03:09,599 --> 00:03:13,040
non-spaced key derivation

69
00:03:13,040 --> 00:03:16,720
aes-gcm siv uses kdf to generate

70
00:03:16,720 --> 00:03:18,959
generate independent keys for each

71
00:03:18,959 --> 00:03:20,239
different ones

72
00:03:20,239 --> 00:03:22,800
and it could achieve full security in

73
00:03:22,800 --> 00:03:24,400
either cipher model

74
00:03:24,400 --> 00:03:27,200
while loses some efficiency from

75
00:03:27,200 --> 00:03:31,119
key derivation or key scheduling

76
00:03:31,680 --> 00:03:34,720
in this research we tried to construct a

77
00:03:34,720 --> 00:03:37,760
blockchain-based ae which provides full

78
00:03:37,760 --> 00:03:40,080
ambi security

79
00:03:40,080 --> 00:03:43,599
we also wanted non-species resistance

80
00:03:43,599 --> 00:03:47,360
with grateful security degradation

81
00:03:47,360 --> 00:03:50,720
finally we targeted to have rate 1 over

82
00:03:50,720 --> 00:03:53,120
2 and parallel eligibility

83
00:03:53,120 --> 00:03:55,200
which are the basic properties to be

84
00:03:55,200 --> 00:03:58,839
computed efficiently

85
00:04:00,720 --> 00:04:03,519
now let's talk about our contribution

86
00:04:03,519 --> 00:04:06,080
the synthetic counter with masking mode

87
00:04:06,080 --> 00:04:08,640
schm

88
00:04:09,599 --> 00:04:12,159
scene can be seen as another variant of

89
00:04:12,159 --> 00:04:15,920
gcm siv and it follows nsiv structure

90
00:04:15,920 --> 00:04:19,040
which is proposed by perine and serine

91
00:04:19,040 --> 00:04:21,839
at 2017.

92
00:04:21,839 --> 00:04:23,919
to encrypt the given message

93
00:04:23,919 --> 00:04:26,160
scheme first encrypt the nouns and

94
00:04:26,160 --> 00:04:29,360
generate three non-space mass based mass

95
00:04:29,360 --> 00:04:33,520
delta delta prime and delta double prime

96
00:04:33,520 --> 00:04:36,639
then it computes tag in a similar way to

97
00:04:36,639 --> 00:04:41,360
nhtm together with delta double prime

98
00:04:41,440 --> 00:04:43,280
in the encryption phase

99
00:04:43,280 --> 00:04:46,080
it first computes the synthetic counters

100
00:04:46,080 --> 00:04:48,320
from the linear combination of tag and

101
00:04:48,320 --> 00:04:50,560
delta

102
00:04:50,560 --> 00:04:52,479
at the end it includes the synthetic

103
00:04:52,479 --> 00:04:55,440
counters then add the delta prime to get

104
00:04:55,440 --> 00:04:58,080
the key stream

105
00:04:58,479 --> 00:05:01,280
sgm is the first blue cypher-based

106
00:05:01,280 --> 00:05:03,440
and rate one over two parallel

107
00:05:03,440 --> 00:05:06,000
realizable mra with

108
00:05:06,000 --> 00:05:10,000
ambient equity of the query complexity

109
00:05:10,000 --> 00:05:12,240
it also provides graceful security

110
00:05:12,240 --> 00:05:16,720
degradation and non-specific setting

111
00:05:21,120 --> 00:05:23,120
now we will talk about the security of

112
00:05:23,120 --> 00:05:24,720
scm

113
00:05:24,720 --> 00:05:27,280
to give formal security proof we use

114
00:05:27,280 --> 00:05:29,759
distinguishing game

115
00:05:29,759 --> 00:05:31,680
in this game the adversary is

116
00:05:31,680 --> 00:05:34,720
interacting either with the real world

117
00:05:34,720 --> 00:05:36,720
and ideal world

118
00:05:36,720 --> 00:05:39,440
the real world comprises the a

119
00:05:39,440 --> 00:05:41,120
encryption and decryption

120
00:05:41,120 --> 00:05:43,680
while the idea will com comprise a

121
00:05:43,680 --> 00:05:47,680
random function and reject function

122
00:05:47,680 --> 00:05:49,759
the adversary tries to distinguish two

123
00:05:49,759 --> 00:05:52,320
words by making q encryption queries

124
00:05:52,320 --> 00:05:54,400
read equation queries with length and

125
00:05:54,400 --> 00:05:56,479
most l blocks

126
00:05:56,479 --> 00:05:58,720
note that sigma denotes the number of

127
00:05:58,720 --> 00:06:01,680
all curved blocks

128
00:06:02,080 --> 00:06:03,919
the distinguishing advantage of the

129
00:06:03,919 --> 00:06:06,479
adversary is defined as the probability

130
00:06:06,479 --> 00:06:08,319
of correctly determined or interacting

131
00:06:08,319 --> 00:06:10,800
world minus one over two

132
00:06:10,800 --> 00:06:13,759
which is a probability of winning by

133
00:06:13,759 --> 00:06:16,800
simple random guessing

134
00:06:19,120 --> 00:06:21,759
and this is our main lemma expectation

135
00:06:21,759 --> 00:06:23,520
method

136
00:06:23,520 --> 00:06:26,400
expectation method informally says if

137
00:06:26,400 --> 00:06:28,960
the probability to have bad transcript

138
00:06:28,960 --> 00:06:30,639
is negligible

139
00:06:30,639 --> 00:06:33,120
and ideal world and the real world have

140
00:06:33,120 --> 00:06:35,039
a negligible indifference without

141
00:06:35,039 --> 00:06:37,520
getting the bad transcript

142
00:06:37,520 --> 00:06:40,319
one cannot distinguish the ideal world

143
00:06:40,319 --> 00:06:42,560
and the real world

144
00:06:42,560 --> 00:06:45,280
i will not cover this precisely but

145
00:06:45,280 --> 00:06:47,680
important point is we should define

146
00:06:47,680 --> 00:06:50,479
define the proper set of bad transcript

147
00:06:50,479 --> 00:06:53,120
then upper bound the two values epsilon

148
00:06:53,120 --> 00:06:56,560
bad and epsilon ratio

149
00:06:58,400 --> 00:07:01,199
and here is our result on the security

150
00:07:01,199 --> 00:07:04,080
of sscm

151
00:07:04,800 --> 00:07:07,039
since the result theorem is quite

152
00:07:07,039 --> 00:07:08,400
complex

153
00:07:08,400 --> 00:07:11,520
let us briefly introduce it

154
00:07:11,520 --> 00:07:14,080
and the result mu comes the number of

155
00:07:14,080 --> 00:07:16,800
faulty noises in encryption queries

156
00:07:16,800 --> 00:07:19,599
note that adversary can freely choose

157
00:07:19,599 --> 00:07:23,440
notes in the dedication queries

158
00:07:23,440 --> 00:07:27,199
if we focus on those respecting model or

159
00:07:27,199 --> 00:07:29,759
mu equal to zero in other words

160
00:07:29,759 --> 00:07:32,080
the advantage can be upper bounded with

161
00:07:32,080 --> 00:07:34,080
the form of

162
00:07:34,080 --> 00:07:38,160
q times l squared over 2 to the n

163
00:07:38,160 --> 00:07:41,599
also in faulting of model so if mu is

164
00:07:41,599 --> 00:07:44,319
larger than 0 the security gracefully

165
00:07:44,319 --> 00:07:47,199
falls to birthday bound as you see

166
00:07:47,199 --> 00:07:50,560
as you can see in the graph

167
00:07:53,199 --> 00:07:55,919
here is the comparison of sgm with

168
00:07:55,919 --> 00:07:58,479
existing ae modes

169
00:07:58,479 --> 00:08:01,599
you can see that sgm outperforms

170
00:08:01,599 --> 00:08:04,000
previous block cipher based ammos

171
00:08:04,000 --> 00:08:06,080
and also comparable to trickle block

172
00:08:06,080 --> 00:08:10,319
cipher based or ideal cycle based modes

173
00:08:10,319 --> 00:08:13,759
gae is the exceptional case since case

174
00:08:13,759 --> 00:08:16,319
since it has rate two over three

175
00:08:16,319 --> 00:08:19,520
but i want to emphasize that the tweak

176
00:08:19,520 --> 00:08:22,639
input in gae is random which which

177
00:08:22,639 --> 00:08:25,759
degrades the overall efficiency and also

178
00:08:25,759 --> 00:08:29,039
jain is to use 20-bit tag which is twice

179
00:08:29,039 --> 00:08:33,120
larger than common length of the tag

180
00:08:34,719 --> 00:08:37,039
this is the result of experiments done

181
00:08:37,039 --> 00:08:39,919
in skylake architecture which supports

182
00:08:39,919 --> 00:08:46,080
pcmr avx and asni hardware acceleration

183
00:08:46,080 --> 00:08:50,000
also according to our experiments sgm is

184
00:08:50,000 --> 00:08:53,600
slightly faster than aes-gmsiv in both

185
00:08:53,600 --> 00:08:55,920
short message cases and long message

186
00:08:55,920 --> 00:08:57,600
cases

187
00:08:57,600 --> 00:08:58,880
it is because

188
00:08:58,880 --> 00:09:01,519
case scheduling can be pre-computed in

189
00:09:01,519 --> 00:09:04,000
sdn

190
00:09:04,000 --> 00:09:07,680
one can aware of its large key size

191
00:09:07,680 --> 00:09:08,720
but

192
00:09:08,720 --> 00:09:11,120
we can reduce it by using keyservation

193
00:09:11,120 --> 00:09:15,120
function at initialization time

194
00:09:16,080 --> 00:09:18,640
now i will introduce the core ideas for

195
00:09:18,640 --> 00:09:21,040
the security proof

196
00:09:21,040 --> 00:09:24,080
since the ciphertext should look random

197
00:09:24,080 --> 00:09:26,240
when constructing the pseudorandom

198
00:09:26,240 --> 00:09:28,560
permutation based ae we need to

199
00:09:28,560 --> 00:09:30,959
construct a pseudorandom function from

200
00:09:30,959 --> 00:09:33,040
the present permutation

201
00:09:33,040 --> 00:09:35,440
and we should use it to generate a

202
00:09:35,440 --> 00:09:37,600
random string

203
00:09:37,600 --> 00:09:41,600
however if we use naive prp dpr switch

204
00:09:41,600 --> 00:09:43,839
the security cannot go beyond birthday

205
00:09:43,839 --> 00:09:45,519
part

206
00:09:45,519 --> 00:09:48,640
therefore in this research we decided to

207
00:09:48,640 --> 00:09:49,519
use

208
00:09:49,519 --> 00:09:54,080
extra permutations or xrp in short

209
00:09:54,080 --> 00:09:57,200
as you can see in the figure in xyp

210
00:09:57,200 --> 00:10:00,480
it increases w different inputs and then

211
00:10:00,480 --> 00:10:03,040
computes w minus one outputs by xoring

212
00:10:03,040 --> 00:10:05,279
them

213
00:10:05,279 --> 00:10:08,320
there are some recent results that

214
00:10:08,320 --> 00:10:11,600
the outputs of xrp are almost random

215
00:10:11,600 --> 00:10:12,880
therefore

216
00:10:12,880 --> 00:10:16,079
we can construct a secure prf with only

217
00:10:16,079 --> 00:10:20,239
one additional prp using xrp

218
00:10:22,560 --> 00:10:24,560
although there have been many studies on

219
00:10:24,560 --> 00:10:25,760
xrp

220
00:10:25,760 --> 00:10:28,079
there are two of the most outstanding

221
00:10:28,079 --> 00:10:29,760
results

222
00:10:29,760 --> 00:10:32,399
one is patterns beer theory

223
00:10:32,399 --> 00:10:34,640
mirror theory is the theory to bound the

224
00:10:34,640 --> 00:10:36,640
number of solutions for a certain system

225
00:10:36,640 --> 00:10:39,839
of equations and non-equations

226
00:10:39,839 --> 00:10:42,399
it provides optimum security when w is

227
00:10:42,399 --> 00:10:43,600
equal to two

228
00:10:43,600 --> 00:10:44,640
and

229
00:10:44,640 --> 00:10:47,040
in this research we will use slightly

230
00:10:47,040 --> 00:10:49,839
modified version of the military

231
00:10:49,839 --> 00:10:53,760
in the paper from chad

232
00:10:54,000 --> 00:10:56,320
another is done with chi-square method

233
00:10:56,320 --> 00:10:57,600
proposed by

234
00:10:57,600 --> 00:11:00,480
which is proposed by at all at crypto

235
00:11:00,480 --> 00:11:02,640
2017

236
00:11:02,640 --> 00:11:05,360
chi-square method is the recent theory

237
00:11:05,360 --> 00:11:07,839
used to prove the pr security of xrp

238
00:11:07,839 --> 00:11:09,440
like construction

239
00:11:09,440 --> 00:11:12,160
and in this paper we use generalized

240
00:11:12,160 --> 00:11:16,000
version of batacharia and not this

241
00:11:16,000 --> 00:11:18,480
results

242
00:11:19,360 --> 00:11:22,160
i will introduce how the security of sgm

243
00:11:22,160 --> 00:11:24,640
could be derived by the randomness of

244
00:11:24,640 --> 00:11:26,880
xrp

245
00:11:26,880 --> 00:11:29,120
let us first focus on the mask

246
00:11:29,120 --> 00:11:31,279
generation

247
00:11:31,279 --> 00:11:33,760
in mass mass generation function we

248
00:11:33,760 --> 00:11:37,200
directly applied extrap structure so we

249
00:11:37,200 --> 00:11:40,000
can consider delta delta prime and delta

250
00:11:40,000 --> 00:11:42,959
double prime as a as truly random

251
00:11:42,959 --> 00:11:45,360
strings

252
00:11:45,360 --> 00:11:47,839
note that the number of queries in this

253
00:11:47,839 --> 00:11:49,839
structure are equal to the number of

254
00:11:49,839 --> 00:11:52,000
different notes in the authenticated

255
00:11:52,000 --> 00:11:53,279
encryption

256
00:11:53,279 --> 00:11:54,560
and

257
00:11:54,560 --> 00:11:58,719
w is equal to 4 at this moment

258
00:11:59,839 --> 00:12:02,800
next step is to compute the tag

259
00:12:02,800 --> 00:12:05,839
to ease the proof we reveal hash key at

260
00:12:05,839 --> 00:12:08,800
the end of the distinguishing game so

261
00:12:08,800 --> 00:12:10,720
all the inputs on block ciphers are

262
00:12:10,720 --> 00:12:12,160
known

263
00:12:12,160 --> 00:12:15,440
let x i be the input on block cipher in

264
00:12:15,440 --> 00:12:18,000
ice query

265
00:12:18,000 --> 00:12:20,079
in those respective queries

266
00:12:20,079 --> 00:12:23,279
tag ti are truly random since delta

267
00:12:23,279 --> 00:12:27,600
double prime are also truly random

268
00:12:27,600 --> 00:12:30,000
however in faulty node's queries delta

269
00:12:30,000 --> 00:12:33,120
prime is not any more random since

270
00:12:33,120 --> 00:12:35,120
two queries should share same delta

271
00:12:35,120 --> 00:12:39,440
prime if their losses are same

272
00:12:39,440 --> 00:12:42,000
therefore instead of using the

273
00:12:42,000 --> 00:12:45,360
randomness of the tableau prime

274
00:12:45,360 --> 00:12:47,120
one can compute the difference between

275
00:12:47,120 --> 00:12:49,440
the block cipher outputs which can be

276
00:12:49,440 --> 00:12:54,560
seen as a output of xrp construction

277
00:12:54,560 --> 00:12:57,200
then after applying the result of

278
00:12:57,200 --> 00:13:00,720
pseudo-randomness of xrp output

279
00:13:00,720 --> 00:13:03,680
we can also conclude that all tags are

280
00:13:03,680 --> 00:13:05,440
generated randomly

281
00:13:05,440 --> 00:13:08,639
in volte noise queries

282
00:13:10,079 --> 00:13:13,920
the final step is key stream generation

283
00:13:13,920 --> 00:13:16,880
similar to before we reveal the delta at

284
00:13:16,880 --> 00:13:18,399
the end of the game

285
00:13:18,399 --> 00:13:23,120
so all inputs on both sides are known

286
00:13:23,120 --> 00:13:25,600
then one can compute the

287
00:13:25,600 --> 00:13:27,279
difference between two block diaper

288
00:13:27,279 --> 00:13:31,120
outputs who shares the same notes

289
00:13:31,120 --> 00:13:34,000
therefore we can use the randomness of

290
00:13:34,000 --> 00:13:37,440
xrp outputs on the

291
00:13:37,440 --> 00:13:39,920
on this construction so

292
00:13:39,920 --> 00:13:42,240
we can conclude that jet variables or

293
00:13:42,240 --> 00:13:44,720
key streams are all

294
00:13:44,720 --> 00:13:48,600
generated in random

295
00:13:49,279 --> 00:13:51,760
together with the expectation method we

296
00:13:51,760 --> 00:13:53,600
could get the theorem which gives

297
00:13:53,600 --> 00:13:57,600
security bound of sgm

298
00:13:59,839 --> 00:14:03,120
this is our conclusion in this research

299
00:14:03,120 --> 00:14:05,120
we proposed scm

300
00:14:05,120 --> 00:14:08,000
with synthetic contour with masking mode

301
00:14:08,000 --> 00:14:12,000
which is almost fully secured mrae

302
00:14:12,000 --> 00:14:14,160
sgm enjoys grateful security

303
00:14:14,160 --> 00:14:17,519
detergration in the fortinet's model

304
00:14:17,519 --> 00:14:18,639
and

305
00:14:18,639 --> 00:14:20,800
it provides full security in the

306
00:14:20,800 --> 00:14:23,120
non-respecting model in terms of the

307
00:14:23,120 --> 00:14:26,560
threshold number of queries

308
00:14:26,880 --> 00:14:27,920
also

309
00:14:27,920 --> 00:14:30,959
sgm has an efficiency comparable to aes

310
00:14:30,959 --> 00:14:33,920
gms iv

311
00:14:35,040 --> 00:14:38,160
here's the responses

312
00:14:38,800 --> 00:14:40,480
this is the end of the slide and thank

313
00:14:40,480 --> 00:14:43,959
you for the listening

