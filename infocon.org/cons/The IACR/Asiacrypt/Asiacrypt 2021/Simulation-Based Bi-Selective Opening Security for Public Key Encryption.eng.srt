1
00:00:00,480 --> 00:00:02,159
all right so hello everyone i'm moving

2
00:00:02,159 --> 00:00:04,240
on and today i'm going to talk about how

3
00:00:04,240 --> 00:00:06,319
to define and construct public key

4
00:00:06,319 --> 00:00:07,759
influence schemes with vast

5
00:00:07,759 --> 00:00:10,240
circumference security this is based on

6
00:00:10,240 --> 00:00:13,120
drug to work with quinoa and for example

7
00:00:13,120 --> 00:00:14,799
so a piggy scheme contains three

8
00:00:14,799 --> 00:00:17,600
algorithms namely the ketogenic reserve

9
00:00:17,600 --> 00:00:19,760
which produces a pair of public key and

10
00:00:19,760 --> 00:00:22,320
secret key the encryption algorithm

11
00:00:22,320 --> 00:00:25,519
which includes a message with public key

12
00:00:25,519 --> 00:00:27,760
and the declaration of results which

13
00:00:27,760 --> 00:00:28,800
decrease

14
00:00:28,800 --> 00:00:30,800
subtext with a secret key

15
00:00:30,800 --> 00:00:33,360
its correctness requires that the

16
00:00:33,360 --> 00:00:35,840
algorithm can always recover the correct

17
00:00:35,840 --> 00:00:38,879
message from an honestly generated

18
00:00:38,879 --> 00:00:40,079
self text

19
00:00:40,079 --> 00:00:43,040
and it security requires that

20
00:00:43,040 --> 00:00:46,320
those are consider anything from the

21
00:00:46,320 --> 00:00:49,440
uh text this can be defined by requiring

22
00:00:49,440 --> 00:00:51,120
a simulator that

23
00:00:51,120 --> 00:00:53,199
simulates the view of those three

24
00:00:53,199 --> 00:00:55,520
without seeing anything

25
00:00:55,520 --> 00:00:57,840
so in practice pke schemes are usually

26
00:00:57,840 --> 00:01:00,320
deployed in a material setting

27
00:01:00,320 --> 00:01:02,399
that is there are many senders and

28
00:01:02,399 --> 00:01:05,438
receivers and each receiver has her own

29
00:01:05,438 --> 00:01:07,920
public key and secure key a sender sends

30
00:01:07,920 --> 00:01:10,640
messages to 0 by using the receiver's

31
00:01:10,640 --> 00:01:13,200
public key to include the message

32
00:01:13,200 --> 00:01:15,200
so in this set here it comes that some

33
00:01:15,200 --> 00:01:18,479
users are corrupted

34
00:01:18,479 --> 00:01:20,000
in this case

35
00:01:20,000 --> 00:01:22,400
it seems invincible to protect

36
00:01:22,400 --> 00:01:24,560
messengers that are sent by a craft

37
00:01:24,560 --> 00:01:25,520
sender

38
00:01:25,520 --> 00:01:28,159
and the messengers sent by are received

39
00:01:28,159 --> 00:01:30,960
by a corrupted receiver however we still

40
00:01:30,960 --> 00:01:33,360
hope to protect messengers that are

41
00:01:33,360 --> 00:01:35,759
transmitted between aircraft users

42
00:01:35,759 --> 00:01:38,240
especially in the case that the prompt

43
00:01:38,240 --> 00:01:40,400
messengers and the encrypted messages

44
00:01:40,400 --> 00:01:43,119
are related

45
00:01:43,119 --> 00:01:45,280
so in the literature we have formally

46
00:01:45,280 --> 00:01:48,560
studied single selected open security

47
00:01:48,560 --> 00:01:52,079
where only senders can be corrupted

48
00:01:52,079 --> 00:01:53,759
and receive

49
00:01:53,759 --> 00:01:56,000
to open security where only the

50
00:01:56,000 --> 00:01:58,960
receivers can be corrupted however we

51
00:01:58,960 --> 00:02:01,360
have not formally defined construct key

52
00:02:01,360 --> 00:02:03,759
schemes with biased directive opening

53
00:02:03,759 --> 00:02:06,640
security while both the senders and the

54
00:02:06,640 --> 00:02:09,520
receivers may be corrupted

55
00:02:09,520 --> 00:02:12,400
so in this work we formally study by

56
00:02:12,400 --> 00:02:15,760
selective open security for p schemes

57
00:02:15,760 --> 00:02:18,879
our results include four parts first we

58
00:02:18,879 --> 00:02:21,440
give formal definition of barcelona to

59
00:02:21,440 --> 00:02:23,680
security for key schemes then we

60
00:02:23,680 --> 00:02:26,000
construct key scheme with best selective

61
00:02:26,000 --> 00:02:28,480
open security in the right vocal model

62
00:02:28,480 --> 00:02:31,120
we'll also consider a weaker notion of

63
00:02:31,120 --> 00:02:33,519
bastard coping security and construct

64
00:02:33,519 --> 00:02:35,760
pke schemes with this weaker

65
00:02:35,760 --> 00:02:38,239
guarantee in the play model

66
00:02:38,239 --> 00:02:41,120
so let's start with our definition

67
00:02:41,120 --> 00:02:43,680
okay so in the definition

68
00:02:43,680 --> 00:02:45,680
the

69
00:02:45,680 --> 00:02:47,760
the adversary is giving a set of

70
00:02:47,760 --> 00:02:50,480
publications beginning then it specifies

71
00:02:50,480 --> 00:02:53,040
a message distribution then it will

72
00:02:53,040 --> 00:02:55,599
receive chains of text that includes

73
00:02:55,599 --> 00:02:59,040
messages sampled from this distribution

74
00:02:59,040 --> 00:03:01,280
then the adversary will choose install

75
00:03:01,280 --> 00:03:04,000
centers and receivers to craft for

76
00:03:04,000 --> 00:03:06,080
hitchcock's sender it will receive the

77
00:03:06,080 --> 00:03:08,239
message sent by the sender and the

78
00:03:08,239 --> 00:03:10,640
rightness used to encrypt the message

79
00:03:10,640 --> 00:03:13,120
and for each craft receiver the doc3

80
00:03:13,120 --> 00:03:13,920
will

81
00:03:13,920 --> 00:03:15,120
will

82
00:03:15,120 --> 00:03:16,640
obtain the

83
00:03:16,640 --> 00:03:19,840
message received by the xero and the

84
00:03:19,840 --> 00:03:22,560
under the shareholders secret key

85
00:03:22,560 --> 00:03:24,480
after seeing the opening information the

86
00:03:24,480 --> 00:03:26,720
grocery will upload something

87
00:03:26,720 --> 00:03:29,599
the security request the groceries are

88
00:03:29,599 --> 00:03:33,360
put kind of stimulated a simulator that

89
00:03:33,360 --> 00:03:36,640
only sees the corrupted messages

90
00:03:36,640 --> 00:03:38,879
we can also define transfer security

91
00:03:38,879 --> 00:03:41,680
instead here and in this case the

92
00:03:41,680 --> 00:03:43,680
dossier is further giving a decryption

93
00:03:43,680 --> 00:03:44,840
algorithm

94
00:03:44,840 --> 00:03:47,040
decryption oracle

95
00:03:47,040 --> 00:03:50,239
that the creator the

96
00:03:50,239 --> 00:03:51,040
um

97
00:03:51,040 --> 00:03:55,439
soft text submitted by the adversary

98
00:03:55,519 --> 00:03:57,280
okay so next we will see how to

99
00:03:57,280 --> 00:03:59,680
construct pke schemes with bi selective

100
00:03:59,680 --> 00:04:01,599
open security

101
00:04:01,599 --> 00:04:03,680
so the construction is

102
00:04:03,680 --> 00:04:07,200
built of a secure key encapsulation

103
00:04:07,200 --> 00:04:08,640
mechanism

104
00:04:08,640 --> 00:04:12,560
and a hash function modeled as a local

105
00:04:12,560 --> 00:04:14,720
the public key and security of the pke

106
00:04:14,720 --> 00:04:16,720
scheme is just the public key and

107
00:04:16,720 --> 00:04:19,199
security of camp scheme

108
00:04:19,199 --> 00:04:21,120
and to increase the message the

109
00:04:21,120 --> 00:04:23,759
increasing algorithm first runs the

110
00:04:23,759 --> 00:04:26,639
encapsulation algorithm of the camp

111
00:04:26,639 --> 00:04:30,479
scheme and then use the hash of the

112
00:04:30,479 --> 00:04:34,080
encapsulated key to mask the message

113
00:04:34,080 --> 00:04:36,800
then to decrease the subtext

114
00:04:36,800 --> 00:04:40,479
the algorithm first runs the calculation

115
00:04:40,479 --> 00:04:43,040
of sum of the camp scheme and then it

116
00:04:43,040 --> 00:04:45,120
use the hash of the request key to

117
00:04:45,120 --> 00:04:48,160
almost message

118
00:04:48,160 --> 00:04:50,560
to see why the scheme is secure is about

119
00:04:50,560 --> 00:04:53,600
selected opening security

120
00:04:53,600 --> 00:04:56,080
because we recall that the dossier will

121
00:04:56,080 --> 00:04:58,479
receive a public key new beginning link

122
00:04:58,479 --> 00:05:00,160
specifies a

123
00:05:00,160 --> 00:05:02,080
message distribution

124
00:05:02,080 --> 00:05:05,199
then it will receive a set of tensor

125
00:05:05,199 --> 00:05:06,240
texts

126
00:05:06,240 --> 00:05:09,039
and then it

127
00:05:09,039 --> 00:05:10,800
through the system centers and the

128
00:05:10,800 --> 00:05:12,960
receivers to crops and

129
00:05:12,960 --> 00:05:15,120
receives their interest states finally

130
00:05:15,120 --> 00:05:17,759
it up for something to simulate the

131
00:05:17,759 --> 00:05:19,680
losses are put

132
00:05:19,680 --> 00:05:21,120
the simulator

133
00:05:21,120 --> 00:05:23,759
will invoke the glossary as a subroutine

134
00:05:23,759 --> 00:05:26,400
and the simulator is will in the reward

135
00:05:26,400 --> 00:05:28,400
so in more detail the simulator will

136
00:05:28,400 --> 00:05:30,800
first sends the public keys to the dos

137
00:05:30,800 --> 00:05:33,759
rate and then it outputs the max

138
00:05:33,759 --> 00:05:35,039
distribution

139
00:05:35,039 --> 00:05:38,880
of special files by those three

140
00:05:41,600 --> 00:05:43,919
and craft users specified by the wall

141
00:05:43,919 --> 00:05:46,000
street

142
00:05:46,000 --> 00:05:48,000
then on receiving the

143
00:05:48,000 --> 00:05:50,800
copy messages the simulator sends the

144
00:05:50,800 --> 00:05:53,120
corrupt messages and the interests of

145
00:05:53,120 --> 00:05:56,000
the corrupt users to the adversary

146
00:05:56,000 --> 00:05:58,560
finally it outputs what's the producer

147
00:05:58,560 --> 00:06:00,639
outpost

148
00:06:00,639 --> 00:06:02,960
so in this case the signature does know

149
00:06:02,960 --> 00:06:05,039
the 10 messages when generating the

150
00:06:05,039 --> 00:06:06,479
sense of text

151
00:06:06,479 --> 00:06:09,680
so it has to cheat here

152
00:06:09,680 --> 00:06:12,880
in more detail the simulator

153
00:06:12,880 --> 00:06:15,680
will first run the encapsulation

154
00:06:15,680 --> 00:06:17,680
algorithm of the camps game honestly to

155
00:06:17,680 --> 00:06:20,479
generate the first part of some text but

156
00:06:20,479 --> 00:06:22,560
it samples the second part of the soft

157
00:06:22,560 --> 00:06:23,919
text

158
00:06:23,919 --> 00:06:26,639
uniformly at render

159
00:06:26,639 --> 00:06:29,199
this is indistinguishable from only

160
00:06:29,199 --> 00:06:31,360
security the channels of text

161
00:06:31,360 --> 00:06:34,000
due to the security of camp scheme and

162
00:06:34,000 --> 00:06:35,199
the fact that

163
00:06:35,199 --> 00:06:37,919
the landlord call will output a drone

164
00:06:37,919 --> 00:06:40,880
module on a input that has not been

165
00:06:40,880 --> 00:06:43,039
created before

166
00:06:43,039 --> 00:06:46,080
then in open phase the simulator will

167
00:06:46,080 --> 00:06:49,919
sense the correct interest of senders

168
00:06:49,919 --> 00:06:52,960
and receivers that is for each crafter

169
00:06:52,960 --> 00:06:57,360
center it will risk it will sense the

170
00:06:57,360 --> 00:06:59,440
remnants used in the

171
00:06:59,440 --> 00:07:02,080
encapsulation of reservoir can scheme to

172
00:07:02,080 --> 00:07:04,639
the adversary and for each crafted

173
00:07:04,639 --> 00:07:06,560
receiver it will

174
00:07:06,560 --> 00:07:08,000
send the

175
00:07:08,000 --> 00:07:10,160
correct secret key of the receiver to

176
00:07:10,160 --> 00:07:11,840
the adversary

177
00:07:11,840 --> 00:07:14,960
it should also program the lamar code to

178
00:07:14,960 --> 00:07:17,440
make the opening and the transcend text

179
00:07:17,440 --> 00:07:19,919
compatible

180
00:07:19,919 --> 00:07:20,720
okay

181
00:07:20,720 --> 00:07:23,039
so that's why the scheme has bus

182
00:07:23,039 --> 00:07:26,000
selective security we can also achieve

183
00:07:26,000 --> 00:07:28,160
strengths of text security faster likely

184
00:07:28,160 --> 00:07:30,319
modifying the business construction

185
00:07:30,319 --> 00:07:33,759
please see our people for more details

186
00:07:33,759 --> 00:07:37,599
okay so the about construction

187
00:07:37,599 --> 00:07:40,479
is constructed in the landmark model we

188
00:07:40,479 --> 00:07:42,560
can also construct pt schemes with

189
00:07:42,560 --> 00:07:44,800
select always by selecting security in

190
00:07:44,800 --> 00:07:48,000
the play model but we can only achieve a

191
00:07:48,000 --> 00:07:50,400
weaker security so let's start with the

192
00:07:50,400 --> 00:07:52,479
definition of the weak security

193
00:07:52,479 --> 00:07:54,319
in this secret definition though those

194
00:07:54,319 --> 00:07:55,280
three

195
00:07:55,280 --> 00:07:56,800
has to

196
00:07:56,800 --> 00:08:00,160
choose if it hopes to launch a center

197
00:08:00,160 --> 00:08:01,440
selector

198
00:08:01,440 --> 00:08:04,400
attack or the receiver selectment pack

199
00:08:04,400 --> 00:08:07,280
after the public keys saying it has to

200
00:08:07,280 --> 00:08:09,280
follow its selection

201
00:08:09,280 --> 00:08:11,759
security still requested

202
00:08:11,759 --> 00:08:14,319
the adulterated output can be simulated

203
00:08:14,319 --> 00:08:16,000
by a simulator that only sees the

204
00:08:16,000 --> 00:08:18,000
corrupted messages and we can also

205
00:08:18,000 --> 00:08:20,160
define transatlantic security in this

206
00:08:20,160 --> 00:08:22,479
case

207
00:08:22,479 --> 00:08:24,960
this security definition is

208
00:08:24,960 --> 00:08:27,120
weaker than that but look at the

209
00:08:27,120 --> 00:08:29,280
standard device and equipment security

210
00:08:29,280 --> 00:08:30,240
but

211
00:08:30,240 --> 00:08:31,599
it is

212
00:08:31,599 --> 00:08:33,679
still structurally stronger than the

213
00:08:33,679 --> 00:08:35,279
single select home security and the

214
00:08:35,279 --> 00:08:37,519
receivers in the common security

215
00:08:37,519 --> 00:08:40,240
in addition it implies the requirement

216
00:08:40,240 --> 00:08:42,640
that a piggy scheme has booster similar

217
00:08:42,640 --> 00:08:44,399
circumference security at the receiver

218
00:08:44,399 --> 00:08:46,160
circumstance

219
00:08:46,160 --> 00:08:48,640
and it seems that our new definition is

220
00:08:48,640 --> 00:08:50,800
stronger than this requirement since in

221
00:08:50,800 --> 00:08:52,800
our definition the adulterer can choose

222
00:08:52,800 --> 00:08:55,120
the attacking type of thing about the

223
00:08:55,120 --> 00:08:56,399
public keys

224
00:08:56,399 --> 00:08:59,120
but in the requirement of security the

225
00:08:59,120 --> 00:09:01,839
adversary has to choose attacking type

226
00:09:01,839 --> 00:09:03,600
with forcing anything

227
00:09:03,600 --> 00:09:06,000
okay so we finally show how to construct

228
00:09:06,000 --> 00:09:08,000
pde schemes with weak battery common

229
00:09:08,000 --> 00:09:10,000
security in the play model

230
00:09:10,000 --> 00:09:12,399
the construction relies on a new

231
00:09:12,399 --> 00:09:14,160
primitive called key in quickbooks

232
00:09:14,160 --> 00:09:16,959
hybrid system recall that a hash pro

233
00:09:16,959 --> 00:09:18,160
system

234
00:09:18,160 --> 00:09:22,160
considers a set x and a subset arrow

235
00:09:22,160 --> 00:09:24,080
ox

236
00:09:24,080 --> 00:09:26,720
both the set x and the subset arrow are

237
00:09:26,720 --> 00:09:28,800
efficiently samplable

238
00:09:28,800 --> 00:09:31,279
and if one samples an element from the

239
00:09:31,279 --> 00:09:35,440
subset arrow it can also get a weakness

240
00:09:35,440 --> 00:09:37,760
showing that the sample element is

241
00:09:37,760 --> 00:09:40,560
actually in arrow

242
00:09:40,560 --> 00:09:42,480
the hardness requires that

243
00:09:42,480 --> 00:09:45,200
an element sampled from the subset arrow

244
00:09:45,200 --> 00:09:47,440
is indistinguishable from an element

245
00:09:47,440 --> 00:09:50,560
sampled from x

246
00:09:50,560 --> 00:09:52,959
also the hash procession contains three

247
00:09:52,959 --> 00:09:54,720
algorithms

248
00:09:54,720 --> 00:09:57,200
the criteria algorithm generates the

249
00:09:57,200 --> 00:09:59,200
security and publicly of the

250
00:09:59,200 --> 00:10:00,160
system

251
00:10:00,160 --> 00:10:05,040
the secret evaluation prism runs

252
00:10:06,000 --> 00:10:09,440
a function on input x in the set l

253
00:10:09,440 --> 00:10:11,440
with the secret key

254
00:10:11,440 --> 00:10:12,800
and if the

255
00:10:12,800 --> 00:10:15,839
the input x is sampled from subset arrow

256
00:10:15,839 --> 00:10:18,880
the same function can be eliminated

257
00:10:18,880 --> 00:10:21,120
by using only the public key and the

258
00:10:21,120 --> 00:10:24,320
witness for the

259
00:10:25,360 --> 00:10:26,800
input x

260
00:10:26,800 --> 00:10:29,440
its correctness request for any input x

261
00:10:29,440 --> 00:10:32,079
in the subset arrow the output of

262
00:10:32,079 --> 00:10:34,560
security relational reserve and that of

263
00:10:34,560 --> 00:10:35,760
the public

264
00:10:35,760 --> 00:10:38,640
result should be identical

265
00:10:38,640 --> 00:10:41,920
also its security requested finding

266
00:10:41,920 --> 00:10:45,040
input dot error

267
00:10:45,279 --> 00:10:48,720
then if one performs the

268
00:10:48,720 --> 00:10:51,680
secret election algorithm on this input

269
00:10:51,680 --> 00:10:54,320
with a random secret key associated with

270
00:10:54,320 --> 00:10:56,399
a public key

271
00:10:56,399 --> 00:10:58,640
the output should be uniform even given

272
00:10:58,640 --> 00:11:01,760
the public key based on this we can

273
00:11:01,760 --> 00:11:05,600
define key equivalent system by

274
00:11:05,600 --> 00:11:07,920
further

275
00:11:07,920 --> 00:11:12,560
define key subsets in the set x minus l

276
00:11:12,560 --> 00:11:14,720
here for simplicity we consider a case

277
00:11:14,720 --> 00:11:17,680
that q equals one and this is enough to

278
00:11:17,680 --> 00:11:20,320
construct pke scheme with bus always

279
00:11:20,320 --> 00:11:22,959
weak bus local security in the case that

280
00:11:22,959 --> 00:11:24,399
each channel

281
00:11:24,399 --> 00:11:26,720
each public key is only used to

282
00:11:26,720 --> 00:11:29,519
include a 1 10 message

283
00:11:29,519 --> 00:11:31,920
the hardness now requires that element

284
00:11:31,920 --> 00:11:35,120
sampled from the subset r1 should be

285
00:11:35,120 --> 00:11:37,440
should be indistinguishable from an

286
00:11:37,440 --> 00:11:40,000
enemy sample from l and

287
00:11:40,000 --> 00:11:43,600
sample from x we also need a new

288
00:11:43,600 --> 00:11:44,800
algorithm

289
00:11:44,800 --> 00:11:45,600
to

290
00:11:45,600 --> 00:11:50,639
resample a new key hsk prime from uh old

291
00:11:50,639 --> 00:11:52,720
secret key hsk

292
00:11:52,720 --> 00:11:54,560
and actually some

293
00:11:54,560 --> 00:11:57,839
trouble information

294
00:11:58,639 --> 00:12:01,360
and the new security and old school key

295
00:12:01,360 --> 00:12:03,120
should be associated with the passing

296
00:12:03,120 --> 00:12:04,320
public key

297
00:12:04,320 --> 00:12:06,480
also we request that

298
00:12:06,480 --> 00:12:09,279
if one performs the secret evolution

299
00:12:09,279 --> 00:12:12,560
on an input x in r1 with the old screen

300
00:12:12,560 --> 00:12:15,040
key then the output should be uniform in

301
00:12:15,040 --> 00:12:17,600
giving the new square key

302
00:12:17,600 --> 00:12:18,480
okay

303
00:12:18,480 --> 00:12:20,480
so

304
00:12:20,480 --> 00:12:22,880
we'll next see how to construct pke

305
00:12:22,880 --> 00:12:25,440
schemes with weak passenger security

306
00:12:25,440 --> 00:12:28,399
from the key in kukupal hashbroom system

307
00:12:28,399 --> 00:12:30,320
the public key and the secret key of the

308
00:12:30,320 --> 00:12:32,399
pe scheme is just the public and

309
00:12:32,399 --> 00:12:35,279
security key of the hashbroom system

310
00:12:35,279 --> 00:12:36,320
as the

311
00:12:36,320 --> 00:12:38,959
subtext of the picking scheme contains

312
00:12:38,959 --> 00:12:42,000
an element from the set x and the string

313
00:12:42,000 --> 00:12:44,079
in the

314
00:12:44,079 --> 00:12:45,920
evaluation algorithm of the hash full

315
00:12:45,920 --> 00:12:48,079
system

316
00:12:48,079 --> 00:12:50,399
to include a message zero the encryption

317
00:12:50,399 --> 00:12:51,760
algorithm just

318
00:12:51,760 --> 00:12:54,399
outputs a random subtext in a subtext

319
00:12:54,399 --> 00:12:57,360
space and to increase a message y the

320
00:12:57,360 --> 00:12:59,519
increasing algorithm samples an element

321
00:12:59,519 --> 00:13:01,680
from subset arrow and perform the public

322
00:13:01,680 --> 00:13:06,000
variation increasing on the input

323
00:13:06,000 --> 00:13:08,800
then to decrypt a subtext

324
00:13:08,800 --> 00:13:10,959
ct equals x k

325
00:13:10,959 --> 00:13:13,040
the dictionary algorithm performs the

326
00:13:13,040 --> 00:13:15,839
second evaluation algorithm on

327
00:13:15,839 --> 00:13:16,639
x

328
00:13:16,639 --> 00:13:19,839
and it outputs one if and only if we are

329
00:13:19,839 --> 00:13:23,600
just without equals to k

330
00:13:24,000 --> 00:13:25,600
so

331
00:13:25,600 --> 00:13:27,200
next we will see why the scheme is

332
00:13:27,200 --> 00:13:29,680
secure because that will consider the

333
00:13:29,680 --> 00:13:30,560
case

334
00:13:30,560 --> 00:13:33,040
that each public key is used for only

335
00:13:33,040 --> 00:13:35,360
ones in this case

336
00:13:35,360 --> 00:13:36,320
also

337
00:13:36,320 --> 00:13:39,760
uh the adultery is allowed to

338
00:13:39,760 --> 00:13:41,920
craft the either senders or receivers

339
00:13:41,920 --> 00:13:43,519
but never both

340
00:13:43,519 --> 00:13:44,320
okay

341
00:13:44,320 --> 00:13:45,920
so again

342
00:13:45,920 --> 00:13:47,279
we will use

343
00:13:47,279 --> 00:13:50,639
we will uh okay the simulator will erode

344
00:13:50,639 --> 00:13:52,720
the

345
00:13:52,720 --> 00:13:54,959
uh adulterer at the subroutine and the

346
00:13:54,959 --> 00:13:57,199
simulate is will in the real world

347
00:13:57,199 --> 00:13:59,040
in more detail the simulator will send

348
00:13:59,040 --> 00:14:01,120
in public keys to adultery

349
00:14:01,120 --> 00:14:03,920
in the beginning then it will output the

350
00:14:03,920 --> 00:14:06,000
message distribution and the attacking

351
00:14:06,000 --> 00:14:09,199
type are put by the adversary then it

352
00:14:09,199 --> 00:14:11,440
sends some chance of tax to adversary

353
00:14:11,440 --> 00:14:13,680
and corrupts the users

354
00:14:13,680 --> 00:14:16,800
were specified by the adversary they are

355
00:14:16,800 --> 00:14:18,639
receiving the

356
00:14:18,639 --> 00:14:21,440
corrupted messengers the simulator sends

357
00:14:21,440 --> 00:14:23,680
the crafting message and the interstates

358
00:14:23,680 --> 00:14:25,760
of the prop user to the grocery and

359
00:14:25,760 --> 00:14:28,000
finally it outputs whatever

360
00:14:28,000 --> 00:14:31,120
what are the adversary outputs

361
00:14:31,120 --> 00:14:32,079
so

362
00:14:32,079 --> 00:14:34,720
in this case the those uh the simulator

363
00:14:34,720 --> 00:14:37,040
still and knows the

364
00:14:37,040 --> 00:14:38,480
trend measures when generating the

365
00:14:38,480 --> 00:14:39,839
chance of text

366
00:14:39,839 --> 00:14:42,000
so it has to cheat here

367
00:14:42,000 --> 00:14:44,560
fortunately the adversary is allowed to

368
00:14:44,560 --> 00:14:47,040
crop senders or receivers partner pools

369
00:14:47,040 --> 00:14:49,760
so those are so the simulator can use

370
00:14:49,760 --> 00:14:52,880
different strategies to simulate the

371
00:14:52,880 --> 00:14:54,240
ill-formed

372
00:14:54,240 --> 00:14:56,880
chance of text in different pieces

373
00:14:56,880 --> 00:14:59,760
so in more detail if the

374
00:14:59,760 --> 00:15:01,279
although three truths is two crop

375
00:15:01,279 --> 00:15:04,639
cinders then the simulator

376
00:15:04,639 --> 00:15:05,519
will

377
00:15:05,519 --> 00:15:07,360
up or will sense

378
00:15:07,360 --> 00:15:10,000
inclusion of one to the adversary no

379
00:15:10,000 --> 00:15:13,839
matter what the message is

380
00:15:14,480 --> 00:15:16,399
this is indistinguishable from an

381
00:15:16,399 --> 00:15:18,880
honestly generated attendance of text

382
00:15:18,880 --> 00:15:20,480
due to

383
00:15:20,480 --> 00:15:22,800
the hardness and the security of the

384
00:15:22,800 --> 00:15:25,120
hashpool system

385
00:15:25,120 --> 00:15:27,680
then in opening phase it will send the

386
00:15:27,680 --> 00:15:29,279
correct redness

387
00:15:29,279 --> 00:15:32,000
uh to the dosa if the messenger is one

388
00:15:32,000 --> 00:15:34,480
but it will send the

389
00:15:34,480 --> 00:15:37,279
soft text itself to the adversary if the

390
00:15:37,279 --> 00:15:39,040
message is zero

391
00:15:39,040 --> 00:15:42,399
okay so on the other hand if the

392
00:15:42,399 --> 00:15:44,240
adversary chooses two crops sub

393
00:15:44,240 --> 00:15:45,440
receivers

394
00:15:45,440 --> 00:15:47,680
then the

395
00:15:47,680 --> 00:15:50,160
simulator will sample uh

396
00:15:50,160 --> 00:15:53,279
samples an element from the subset r1

397
00:15:53,279 --> 00:15:54,720
and perform

398
00:15:54,720 --> 00:15:56,880
the security evolution of some other

399
00:15:56,880 --> 00:16:00,560
input for each chance of text

400
00:16:00,560 --> 00:16:03,600
then in opening phase it sends the

401
00:16:03,600 --> 00:16:07,279
correct sql key to 3 if the message is 1

402
00:16:07,279 --> 00:16:08,560
and

403
00:16:08,560 --> 00:16:10,800
if the message is zero it will resemble

404
00:16:10,800 --> 00:16:12,880
a new secret key and sends the news

405
00:16:12,880 --> 00:16:15,360
quickly to the adversary

406
00:16:15,360 --> 00:16:16,399
so

407
00:16:16,399 --> 00:16:17,440
the

408
00:16:17,440 --> 00:16:20,720
uniform chance of text and the

409
00:16:20,720 --> 00:16:23,040
single case into though those three are

410
00:16:23,040 --> 00:16:25,360
indistinguishable from the honest

411
00:16:25,360 --> 00:16:27,360
generated chance of tests and the

412
00:16:27,360 --> 00:16:28,880
correct secret key

413
00:16:28,880 --> 00:16:31,360
due to the new harness requirement

414
00:16:31,360 --> 00:16:34,880
and the key capability property required

415
00:16:34,880 --> 00:16:38,160
by the key quick ball hardcore system

416
00:16:38,160 --> 00:16:41,920
okay that's why the scheme is secured in

417
00:16:41,920 --> 00:16:44,160
against a weak bar select to open

418
00:16:44,160 --> 00:16:47,199
attacker we can also achieve we can also

419
00:16:47,199 --> 00:16:49,279
support multiple messengers and achieve

420
00:16:49,279 --> 00:16:50,959
trends of text creating the material

421
00:16:50,959 --> 00:16:53,440
section in the meta translation if we

422
00:16:53,440 --> 00:16:55,279
start to modify the basic construction

423
00:16:55,279 --> 00:16:57,759
and definition of key quickball hard

424
00:16:57,759 --> 00:16:59,279
proof system

425
00:16:59,279 --> 00:17:02,880
policy of non-formative health

426
00:17:02,880 --> 00:17:05,599
finally we will see how to instantiate

427
00:17:05,599 --> 00:17:08,000
the key in quick ball hot boost term

428
00:17:08,000 --> 00:17:10,559
from the ddh example

429
00:17:10,559 --> 00:17:14,160
uh this instantiation the we consider a

430
00:17:14,160 --> 00:17:15,039
group

431
00:17:15,039 --> 00:17:19,039
a generator g as the other uh

432
00:17:19,039 --> 00:17:22,799
generators g1 t2 and d3 the set x is

433
00:17:22,799 --> 00:17:24,799
just a three dimensional vectors over

434
00:17:24,799 --> 00:17:26,079
the property

435
00:17:26,079 --> 00:17:29,120
and the set are a subset arrow contains

436
00:17:29,120 --> 00:17:30,840
three dimensional vectors with simplex

437
00:17:30,840 --> 00:17:34,640
preload also the subset r1 contains

438
00:17:34,640 --> 00:17:37,520
elements of form g1 to w g2 to dom prime

439
00:17:37,520 --> 00:17:38,880
g32w

440
00:17:38,880 --> 00:17:39,760
where

441
00:17:39,760 --> 00:17:43,280
w and double prime are distinct

442
00:17:43,280 --> 00:17:45,520
so the harness comes from the dth

443
00:17:45,520 --> 00:17:48,160
assumption directly

444
00:17:48,160 --> 00:17:49,600
also the

445
00:17:49,600 --> 00:17:52,000
secret key of the hashbroom system

446
00:17:52,000 --> 00:17:53,360
contains

447
00:17:53,360 --> 00:17:55,919
a certain character s1 as 2s3 in the

448
00:17:55,919 --> 00:17:59,200
queue and the public key is g1 to s1

449
00:17:59,200 --> 00:18:02,080
times 2 to s2 times d3 to s3

450
00:18:02,080 --> 00:18:05,600
then given an input x equals x1 x2 x3

451
00:18:05,600 --> 00:18:08,000
the secret electrical algorithm outputs

452
00:18:08,000 --> 00:18:12,160
x1 to s1 comes at x2 to s2 times x3 to

453
00:18:12,160 --> 00:18:15,200
s3 and the public irish algorithm

454
00:18:15,200 --> 00:18:18,799
outposts fpw

455
00:18:18,799 --> 00:18:21,280
the instantiation is similar to previous

456
00:18:21,280 --> 00:18:24,240
institutions of hashpool system so the

457
00:18:24,240 --> 00:18:26,880
kindness and security can be shown in a

458
00:18:26,880 --> 00:18:29,840
similar way

459
00:18:29,919 --> 00:18:33,280
now next scaling uh old secret key sos

460
00:18:33,280 --> 00:18:36,880
2s3 to sample a new security s1 prime s2

461
00:18:36,880 --> 00:18:38,480
prime as your prime

462
00:18:38,480 --> 00:18:41,840
the sql key resampling algorithm sets s1

463
00:18:41,840 --> 00:18:43,360
prime to psy

464
00:18:43,360 --> 00:18:46,320
and it samples s2 prime uniformly as

465
00:18:46,320 --> 00:18:47,360
random

466
00:18:47,360 --> 00:18:49,760
then it computes actual prime to make

467
00:18:49,760 --> 00:18:50,880
the

468
00:18:50,880 --> 00:18:53,039
new secret key and also key to be

469
00:18:53,039 --> 00:18:55,679
associated with the same publicly

470
00:18:55,679 --> 00:18:56,400
so

471
00:18:56,400 --> 00:18:58,480
because that if one

472
00:18:58,480 --> 00:19:01,280
uh use the old script key to perform uh

473
00:19:01,280 --> 00:19:03,600
the security evolution

474
00:19:03,600 --> 00:19:05,760
algorithm our

475
00:19:05,760 --> 00:19:08,480
input x in the subset of one then it

476
00:19:08,480 --> 00:19:13,760
will get apt to w times d2 to s2 times

477
00:19:13,760 --> 00:19:17,120
that from minus w

478
00:19:17,120 --> 00:19:19,840
also note that s2

479
00:19:19,840 --> 00:19:23,200
is hidden even giving the new circle k

480
00:19:23,200 --> 00:19:27,679
so the output of the secret ratio result

481
00:19:27,679 --> 00:19:30,080
should be uniform given the

482
00:19:30,080 --> 00:19:32,960
new security and the key incredibility

483
00:19:32,960 --> 00:19:34,799
follows

484
00:19:34,799 --> 00:19:37,039
okay so that's our ddh based

485
00:19:37,039 --> 00:19:39,840
instantiation we also give a disturbance

486
00:19:39,840 --> 00:19:43,439
instantiation in the full people

487
00:19:43,760 --> 00:19:46,799
so to summarize in this work we formally

488
00:19:46,799 --> 00:19:49,440
initiate the study of barcelona who

489
00:19:49,440 --> 00:19:52,400
opens attacks on pke schemes

490
00:19:52,400 --> 00:19:54,640
we give different definitions to capture

491
00:19:54,640 --> 00:19:56,799
the tag in different settings

492
00:19:56,799 --> 00:20:00,000
and construct pk schemes with different

493
00:20:00,000 --> 00:20:01,520
security guarantee

494
00:20:01,520 --> 00:20:04,240
from different assumptions technically

495
00:20:04,240 --> 00:20:05,200
we

496
00:20:05,200 --> 00:20:08,240
present a new primitive called peq

497
00:20:08,240 --> 00:20:10,559
cobalt hashtag system which may find

498
00:20:10,559 --> 00:20:12,880
further applications okay that's all

499
00:20:12,880 --> 00:20:16,280
thanks for attention

