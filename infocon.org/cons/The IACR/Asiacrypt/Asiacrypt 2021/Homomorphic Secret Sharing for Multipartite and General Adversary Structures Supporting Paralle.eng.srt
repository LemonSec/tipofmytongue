1
00:00:02,800 --> 00:00:06,480
hello my name is rayguchi in this video

2
00:00:06,480 --> 00:00:08,800
i talk about the paper entitled

3
00:00:08,800 --> 00:00:10,800
homomorphic secret sharing for

4
00:00:10,800 --> 00:00:12,719
multipathetic and general advice

5
00:00:12,719 --> 00:00:14,719
structures supporting parallel

6
00:00:14,719 --> 00:00:17,600
evaluation of low degree polynomials

7
00:00:17,600 --> 00:00:21,760
this is a joint work with koji nuida

8
00:00:21,760 --> 00:00:23,600
first i'll introduce a multi-party

9
00:00:23,600 --> 00:00:26,480
computation in this model we assume

10
00:00:26,480 --> 00:00:28,720
several input players holding the

11
00:00:28,720 --> 00:00:31,920
private inputs and then they run some

12
00:00:31,920 --> 00:00:33,520
multiplicative computation protocol for

13
00:00:33,520 --> 00:00:35,680
a function f

14
00:00:35,680 --> 00:00:37,760
for example we can consider some

15
00:00:37,760 --> 00:00:40,559
statistical analysis on private customer

16
00:00:40,559 --> 00:00:44,160
information held by several companies

17
00:00:44,160 --> 00:00:46,800
after the protocol an output player

18
00:00:46,800 --> 00:00:48,960
collects messages from

19
00:00:48,960 --> 00:00:50,719
the input players

20
00:00:50,719 --> 00:00:51,680
and

21
00:00:51,680 --> 00:00:56,239
then he obtains a value of the function

22
00:00:56,399 --> 00:00:58,800
as for privacy uh an anniversary

23
00:00:58,800 --> 00:01:02,000
corrupts a subset of input players and

24
00:01:02,000 --> 00:01:04,799
see their messages during the protocol

25
00:01:04,799 --> 00:01:07,520
then the privacy requirement is that the

26
00:01:07,520 --> 00:01:09,600
adversary learns nothing beyond the

27
00:01:09,600 --> 00:01:12,600
output

28
00:01:12,640 --> 00:01:14,400
homomorphic secret sharing is an

29
00:01:14,400 --> 00:01:16,560
important building block for multipatchy

30
00:01:16,560 --> 00:01:17,920
computation

31
00:01:17,920 --> 00:01:20,880
uh it is a variant of secret sharing and

32
00:01:20,880 --> 00:01:23,520
it and so it has a sharing algorithm

33
00:01:23,520 --> 00:01:26,240
which takes a secret as input and

34
00:01:26,240 --> 00:01:28,720
outputs and shares

35
00:01:28,720 --> 00:01:31,600
as in the standard security definition

36
00:01:31,600 --> 00:01:35,040
we require that some specified subset of

37
00:01:35,040 --> 00:01:36,000
shares

38
00:01:36,000 --> 00:01:38,840
reveal no information on the

39
00:01:38,840 --> 00:01:41,759
secret homophilic secret sharing has

40
00:01:41,759 --> 00:01:44,640
additional algorithms called evaluation

41
00:01:44,640 --> 00:01:46,960
and decoding algorithms

42
00:01:46,960 --> 00:01:50,079
suppose that input players generate m

43
00:01:50,079 --> 00:01:53,119
shares from their private inputs and

44
00:01:53,119 --> 00:01:56,479
send the shares to m servers

45
00:01:56,479 --> 00:01:59,040
then each server locally runs the

46
00:01:59,040 --> 00:02:00,799
evaluation algorithm

47
00:02:00,799 --> 00:02:04,399
and on a function f and n shares it

48
00:02:04,399 --> 00:02:07,439
receives from the input players

49
00:02:07,439 --> 00:02:10,399
finally an output player collects all

50
00:02:10,399 --> 00:02:13,200
outputs of the evaluation algorithms and

51
00:02:13,200 --> 00:02:17,120
um he runs um decoding algorithm

52
00:02:17,120 --> 00:02:22,360
whose output is supposed to be a f of x

53
00:02:23,200 --> 00:02:25,280
homophobic secret sharing has a direct

54
00:02:25,280 --> 00:02:28,160
application to multipatter communication

55
00:02:28,160 --> 00:02:30,879
in indeed um consider the following

56
00:02:30,879 --> 00:02:33,200
multipatient computation protocol

57
00:02:33,200 --> 00:02:37,120
and we input players distribute shares

58
00:02:37,120 --> 00:02:39,760
of their secret input using a homophobic

59
00:02:39,760 --> 00:02:41,440
secret sharing scheme

60
00:02:41,440 --> 00:02:44,000
and then each player locally runs the

61
00:02:44,000 --> 00:02:46,319
evaluation algorithm on their received

62
00:02:46,319 --> 00:02:48,080
shares

63
00:02:48,080 --> 00:02:50,959
finally an output player collects uh all

64
00:02:50,959 --> 00:02:53,200
the outputs of the evaluation algorithms

65
00:02:53,200 --> 00:02:57,040
and recovers the value of the function

66
00:02:57,040 --> 00:03:00,159
important features um of this protocol

67
00:03:00,159 --> 00:03:03,280
based on an hs scheme is that it only

68
00:03:03,280 --> 00:03:06,000
needs two rounds of communication

69
00:03:06,000 --> 00:03:08,640
the first is sharing the inputs and the

70
00:03:08,640 --> 00:03:10,480
second is collecting the inputs

71
00:03:10,480 --> 00:03:13,519
collecting outputs

72
00:03:13,519 --> 00:03:16,159
it also has succinctness which means

73
00:03:16,159 --> 00:03:17,040
that

74
00:03:17,040 --> 00:03:19,200
its communication complexity is

75
00:03:19,200 --> 00:03:21,120
proportional to the share size

76
00:03:21,120 --> 00:03:22,959
independent of the

77
00:03:22,959 --> 00:03:25,840
complexity of the function

78
00:03:25,840 --> 00:03:28,080
furthermore the corruption power of the

79
00:03:28,080 --> 00:03:31,040
adversary is characterized by

80
00:03:31,040 --> 00:03:32,560
the adversary structure of the

81
00:03:32,560 --> 00:03:34,640
underlying homophobic secret sharing

82
00:03:34,640 --> 00:03:35,840
scheme

83
00:03:35,840 --> 00:03:37,920
the adversary structure is the

84
00:03:37,920 --> 00:03:40,480
collection of subsets of shares which

85
00:03:40,480 --> 00:03:43,680
reveal no information on a secret

86
00:03:43,680 --> 00:03:46,480
therefore if we construct a

87
00:03:46,480 --> 00:03:48,640
homophilic secret sharing scheme for

88
00:03:48,640 --> 00:03:51,440
non-threshold adversary structure then

89
00:03:51,440 --> 00:03:54,000
we can obtain an mpc protocol which

90
00:03:54,000 --> 00:03:56,480
tolerates a more general corruption

91
00:03:56,480 --> 00:03:58,159
pattern

92
00:03:58,159 --> 00:04:00,879
in this work we focus on the three kinds

93
00:04:00,879 --> 00:04:02,640
of adversity structures

94
00:04:02,640 --> 00:04:04,720
adversary structure is the collection

95
00:04:04,720 --> 00:04:07,920
delta of subsets of players whose shares

96
00:04:07,920 --> 00:04:11,040
reveal more information on a secret

97
00:04:11,040 --> 00:04:13,280
the simplest case is a threshold that

98
00:04:13,280 --> 00:04:16,079
was a structure which tolerates any

99
00:04:16,079 --> 00:04:19,918
collusion of at most players

100
00:04:19,918 --> 00:04:22,560
on the other hand the most general case

101
00:04:22,560 --> 00:04:25,520
is a general advisory structure which

102
00:04:25,520 --> 00:04:28,880
has no limitation on delta so every

103
00:04:28,880 --> 00:04:31,360
adverse structure is classified to a

104
00:04:31,360 --> 00:04:33,759
general advisory structures

105
00:04:33,759 --> 00:04:36,160
for example we can consider a known

106
00:04:36,160 --> 00:04:38,479
threshold versus structure used by a

107
00:04:38,479 --> 00:04:40,000
graph

108
00:04:40,000 --> 00:04:42,400
in this advanced structure a player

109
00:04:42,400 --> 00:04:45,520
corresponds to a vertex and an adversary

110
00:04:45,520 --> 00:04:48,000
is a one of the players

111
00:04:48,000 --> 00:04:50,880
and this dishonest player colludes with

112
00:04:50,880 --> 00:04:54,800
its adjacent players

113
00:04:55,120 --> 00:04:57,120
finally a multipattered advanced

114
00:04:57,120 --> 00:05:00,400
structure aligns between threshold and

115
00:05:00,400 --> 00:05:02,720
general advisory structures

116
00:05:02,720 --> 00:05:05,039
specifically a support that the whole

117
00:05:05,039 --> 00:05:07,680
set of players is partitioned into l

118
00:05:07,680 --> 00:05:10,720
parts p1 to pl

119
00:05:10,720 --> 00:05:12,960
roughly speaking uh in a multipattered

120
00:05:12,960 --> 00:05:16,639
advanced structure whether a subset x is

121
00:05:16,639 --> 00:05:19,360
in delta or not is uniquely determined

122
00:05:19,360 --> 00:05:22,080
by this vector which counts the number

123
00:05:22,080 --> 00:05:24,960
of players in each part

124
00:05:24,960 --> 00:05:28,479
note that if we set l to 1

125
00:05:28,479 --> 00:05:29,440
then

126
00:05:29,440 --> 00:05:31,840
delta is equivalent to a threshold

127
00:05:31,840 --> 00:05:33,520
adversely structure

128
00:05:33,520 --> 00:05:35,360
and if we if we set

129
00:05:35,360 --> 00:05:38,560
l to m then it is equivalent to a

130
00:05:38,560 --> 00:05:41,199
general adverse structure in this sense

131
00:05:41,199 --> 00:05:44,080
a multi-party adversary structure lies

132
00:05:44,080 --> 00:05:46,880
between threshold and general advisory

133
00:05:46,880 --> 00:05:49,440
structures

134
00:05:50,479 --> 00:05:53,120
next we explain the previously proposed

135
00:05:53,120 --> 00:05:55,840
homomorphic secret sharing schemes

136
00:05:55,840 --> 00:05:58,240
in this work we consider a homophilic

137
00:05:58,240 --> 00:06:00,080
secret sharing scheme computing a

138
00:06:00,080 --> 00:06:02,960
bounded degree polynomials

139
00:06:02,960 --> 00:06:04,400
first

140
00:06:04,400 --> 00:06:07,039
information theoretically secure uh hs

141
00:06:07,039 --> 00:06:09,280
schemes were proposed for advanced

142
00:06:09,280 --> 00:06:12,560
structures satisfying the condition

143
00:06:12,560 --> 00:06:14,479
called type qd

144
00:06:14,479 --> 00:06:17,280
which means that for any these subsets

145
00:06:17,280 --> 00:06:20,160
in delta their union does not cover the

146
00:06:20,160 --> 00:06:22,720
whole set of players

147
00:06:22,720 --> 00:06:25,120
three homophobic secret sharing schemes

148
00:06:25,120 --> 00:06:27,600
have been proposed for a threshold

149
00:06:27,600 --> 00:06:29,600
multipathetic and general advisory

150
00:06:29,600 --> 00:06:31,199
structures

151
00:06:31,199 --> 00:06:34,160
the security of these schemes

152
00:06:34,160 --> 00:06:36,319
is information theoretic and so it does

153
00:06:36,319 --> 00:06:39,840
not rely on any cryptographic assumption

154
00:06:39,840 --> 00:06:41,520
but the condition

155
00:06:41,520 --> 00:06:44,639
type qd puts a strong limit on advisory

156
00:06:44,639 --> 00:06:45,919
structures

157
00:06:45,919 --> 00:06:47,840
for example a threshold advisory

158
00:06:47,840 --> 00:06:51,039
structure of type qd means that um its

159
00:06:51,039 --> 00:06:53,840
corruption threshold must be less than m

160
00:06:53,840 --> 00:06:56,318
over d

161
00:06:56,639 --> 00:06:58,880
on the other hand um if we assume the

162
00:06:58,880 --> 00:07:01,599
lwe assumption and there is an

163
00:07:01,599 --> 00:07:03,280
homophilic secret sharing scheme

164
00:07:03,280 --> 00:07:06,639
tolerating all the adversary structures

165
00:07:06,639 --> 00:07:09,520
lead schemes the achieve the largest

166
00:07:09,520 --> 00:07:12,160
corruption threshold m minus one which

167
00:07:12,160 --> 00:07:14,960
means that um they are secure as long as

168
00:07:14,960 --> 00:07:18,240
there is at least one honest player

169
00:07:18,240 --> 00:07:21,360
but we must assume a narrow class of

170
00:07:21,360 --> 00:07:23,680
cryptographic assumptions related to

171
00:07:23,680 --> 00:07:26,319
lattices

172
00:07:26,800 --> 00:07:29,120
recently two homologic secret sharing

173
00:07:29,120 --> 00:07:32,319
schemes have been proposed

174
00:07:32,319 --> 00:07:35,440
and they lie between these two extreme

175
00:07:35,440 --> 00:07:37,680
cases

176
00:07:37,680 --> 00:07:39,599
these schemes assume homologic

177
00:07:39,599 --> 00:07:43,039
encryption for a degree k polynomials

178
00:07:43,039 --> 00:07:45,039
which can be obtained from various

179
00:07:45,039 --> 00:07:46,960
hardness assumptions such as stiffy

180
00:07:46,960 --> 00:07:50,879
helmet problem in addition to lwe

181
00:07:50,879 --> 00:07:52,240
furthermore

182
00:07:52,240 --> 00:07:53,919
for the degree k

183
00:07:53,919 --> 00:07:56,879
of the underlying homogeneous scheme

184
00:07:56,879 --> 00:07:59,360
they can tolerate a wider class of

185
00:07:59,360 --> 00:08:03,360
adverse structures of type qdk

186
00:08:03,360 --> 00:08:05,840
we do not give its formal definition

187
00:08:05,840 --> 00:08:08,800
here but an important point is that the

188
00:08:08,800 --> 00:08:12,160
class of tolerable advanced structure is

189
00:08:12,160 --> 00:08:14,319
wider than those of

190
00:08:14,319 --> 00:08:16,160
type qd

191
00:08:16,160 --> 00:08:18,080
for example um

192
00:08:18,080 --> 00:08:20,879
in the threshold case and type qdk means

193
00:08:20,879 --> 00:08:23,599
that the corruption threshold is

194
00:08:23,599 --> 00:08:27,280
less than k plus 1 times m over d which

195
00:08:27,280 --> 00:08:30,479
is k plus 1 times larger than the

196
00:08:30,479 --> 00:08:33,839
upper bound for for type 2d

197
00:08:33,839 --> 00:08:36,640
the threshold scheme has constant share

198
00:08:36,640 --> 00:08:39,200
size on the other hand the general uh

199
00:08:39,200 --> 00:08:41,519
homophilic secret sharing scheme has a

200
00:08:41,519 --> 00:08:46,080
share size of exponential in m

201
00:08:48,080 --> 00:08:50,480
this work also follows that direction of

202
00:08:50,480 --> 00:08:51,760
research

203
00:08:51,760 --> 00:08:54,720
based on homophilic encryption

204
00:08:54,720 --> 00:08:57,200
we first show a novel homophilic secret

205
00:08:57,200 --> 00:08:59,440
sharing scheme for multipathetic

206
00:08:59,440 --> 00:09:02,959
adversary structures of type qdk

207
00:09:02,959 --> 00:09:05,760
computing the dvd polynomials

208
00:09:05,760 --> 00:09:07,760
the share size of our scheme is

209
00:09:07,760 --> 00:09:10,399
polynomial in the number of players and

210
00:09:10,399 --> 00:09:13,040
so more efficient than the general

211
00:09:13,040 --> 00:09:15,760
construction

212
00:09:16,320 --> 00:09:18,880
furthermore because our scheme tolerates

213
00:09:18,880 --> 00:09:21,519
a multiplated adversary structures it is

214
00:09:21,519 --> 00:09:25,839
more general than the threshold scheme

215
00:09:25,839 --> 00:09:27,600
in addition

216
00:09:27,600 --> 00:09:29,519
we show that

217
00:09:29,519 --> 00:09:31,279
these three

218
00:09:31,279 --> 00:09:33,440
homophilic secret sharing schemes can be

219
00:09:33,440 --> 00:09:36,000
extended to homophilic secret sharing

220
00:09:36,000 --> 00:09:38,560
for a simile computation which means

221
00:09:38,560 --> 00:09:42,080
that it computes a single polynomial on

222
00:09:42,080 --> 00:09:45,760
l different inputs in parallel

223
00:09:45,760 --> 00:09:48,640
and the overheads in share size are all

224
00:09:48,640 --> 00:09:50,399
log of l

225
00:09:50,399 --> 00:09:52,640
therefore our technique is more

226
00:09:52,640 --> 00:09:55,680
efficient than naive solution of simply

227
00:09:55,680 --> 00:09:58,320
running l computations independently

228
00:09:58,320 --> 00:10:00,240
which results in an overhead

229
00:10:00,240 --> 00:10:02,720
proportional to l

230
00:10:02,720 --> 00:10:04,480
as a drawback however

231
00:10:04,480 --> 00:10:07,279
the adversary structures of our hs

232
00:10:07,279 --> 00:10:09,920
schemes must satisfy a stronger

233
00:10:09,920 --> 00:10:14,480
condition um which we call type qd kl

234
00:10:14,480 --> 00:10:17,279
but it is um still wider than the

235
00:10:17,279 --> 00:10:21,839
information theoretic bound of type qd

236
00:10:23,040 --> 00:10:25,200
from now on we explain how the

237
00:10:25,200 --> 00:10:27,680
contraction of homologic secret sharing

238
00:10:27,680 --> 00:10:30,320
scheme for general advisory structures

239
00:10:30,320 --> 00:10:34,320
which supports parallel evaluation

240
00:10:34,320 --> 00:10:37,040
as we said earlier based on homophilic

241
00:10:37,040 --> 00:10:39,680
encryption there are three homophilic

242
00:10:39,680 --> 00:10:42,160
secret sharing schemes for adversary

243
00:10:42,160 --> 00:10:45,120
structures of type qdk

244
00:10:45,120 --> 00:10:47,519
in this work we show that these

245
00:10:47,519 --> 00:10:49,600
homogeneous sharing schemes can be

246
00:10:49,600 --> 00:10:51,839
extended to the ones supporting the

247
00:10:51,839 --> 00:10:53,920
parallel evaluation of a single

248
00:10:53,920 --> 00:10:55,200
polynomial

249
00:10:55,200 --> 00:10:57,519
while the class of tolerable advanced

250
00:10:57,519 --> 00:11:00,399
structures becomes smaller

251
00:11:00,399 --> 00:11:02,720
an important point of our technique is

252
00:11:02,720 --> 00:11:06,079
that the overhead is only logarithmic in

253
00:11:06,079 --> 00:11:08,320
l on the number of comp parallel

254
00:11:08,320 --> 00:11:10,959
computations and therefore it is more

255
00:11:10,959 --> 00:11:13,440
efficient than the naive solution of

256
00:11:13,440 --> 00:11:15,680
simply running l computations

257
00:11:15,680 --> 00:11:17,680
independently

258
00:11:17,680 --> 00:11:19,920
due to the time constraint we only

259
00:11:19,920 --> 00:11:22,480
explain the case of general advisory

260
00:11:22,480 --> 00:11:24,000
structures

261
00:11:24,000 --> 00:11:26,880
technically we use the notion of packed

262
00:11:26,880 --> 00:11:29,839
secret sharing

263
00:11:30,320 --> 00:11:32,560
the previous homophobic secret sharing

264
00:11:32,560 --> 00:11:35,040
scheme can tolerate general advisory

265
00:11:35,040 --> 00:11:37,839
structures but does not support parallel

266
00:11:37,839 --> 00:11:39,360
evaluation

267
00:11:39,360 --> 00:11:41,200
on the other hand a packed secret

268
00:11:41,200 --> 00:11:42,800
sharing scheme

269
00:11:42,800 --> 00:11:45,920
supports parallel evaluation but can

270
00:11:45,920 --> 00:11:48,560
only tolerate threshold advisory

271
00:11:48,560 --> 00:11:49,760
structures

272
00:11:49,760 --> 00:11:52,560
in this work we propose a novel way to

273
00:11:52,560 --> 00:11:53,680
combine

274
00:11:53,680 --> 00:11:57,120
two schemes and as a result we obtain a

275
00:11:57,120 --> 00:11:59,600
homomorphic secret sharing scheme which

276
00:11:59,600 --> 00:12:01,680
not only tolerates general advanced

277
00:12:01,680 --> 00:12:04,079
structures but also supports parallel

278
00:12:04,079 --> 00:12:06,719
evaluation

279
00:12:07,920 --> 00:12:09,760
before explaining the details of

280
00:12:09,760 --> 00:12:12,880
technique we recall that we recall the a

281
00:12:12,880 --> 00:12:14,959
previously proposed homophilic secret

282
00:12:14,959 --> 00:12:16,480
sharing scheme

283
00:12:16,480 --> 00:12:18,880
let those are the general advisory

284
00:12:18,880 --> 00:12:19,920
structure

285
00:12:19,920 --> 00:12:22,880
without loss of generality we may assume

286
00:12:22,880 --> 00:12:26,560
that delta is monotonically decreasing

287
00:12:26,560 --> 00:12:29,120
by which we mean that um

288
00:12:29,120 --> 00:12:32,800
if a is a subset of b and b is in delta

289
00:12:32,800 --> 00:12:35,920
then a is also in delta

290
00:12:35,920 --> 00:12:39,360
so then delta is um uniquely determined

291
00:12:39,360 --> 00:12:43,200
by only specifying all maximal subsets

292
00:12:43,200 --> 00:12:46,079
a1 to am

293
00:12:46,079 --> 00:12:48,959
in the previous scheme a secret input

294
00:12:48,959 --> 00:12:51,519
is an is an element of a finite field

295
00:12:51,519 --> 00:12:52,560
because

296
00:12:52,560 --> 00:12:56,399
it only supports one short computation

297
00:12:56,399 --> 00:12:59,200
in its share generation um

298
00:12:59,200 --> 00:13:01,519
first a secret s

299
00:13:01,519 --> 00:13:04,560
is randomly split into n random elements

300
00:13:04,560 --> 00:13:08,639
s1 to sm here n is the number of all

301
00:13:08,639 --> 00:13:11,839
maximal subsets of delta

302
00:13:11,839 --> 00:13:12,800
then

303
00:13:12,800 --> 00:13:14,560
for each eye

304
00:13:14,560 --> 00:13:18,240
si is given to a players which does not

305
00:13:18,240 --> 00:13:22,000
belong to a maximal set ai

306
00:13:22,000 --> 00:13:24,560
and the players in ai receive a

307
00:13:24,560 --> 00:13:27,279
ciphertext of si

308
00:13:27,279 --> 00:13:28,720
so then the

309
00:13:28,720 --> 00:13:31,760
privacy is straightforward because for

310
00:13:31,760 --> 00:13:35,360
any maximal subset ai players in this

311
00:13:35,360 --> 00:13:40,000
set uh only receive a ciphertext of si

312
00:13:40,000 --> 00:13:42,000
and so they do not obtain any

313
00:13:42,000 --> 00:13:44,480
information on si

314
00:13:44,480 --> 00:13:47,600
so therefore they can they cannot learn

315
00:13:47,600 --> 00:13:51,839
the secret input as either

316
00:13:52,880 --> 00:13:55,360
to extend this homophilic secret sharing

317
00:13:55,360 --> 00:13:58,240
scheme to a parallel computation we also

318
00:13:58,240 --> 00:14:01,680
use the notion of packed secret sharing

319
00:14:01,680 --> 00:14:04,160
here we consider a threshold advisory

320
00:14:04,160 --> 00:14:05,760
structure

321
00:14:05,760 --> 00:14:08,399
in this scheme a secret input is

322
00:14:08,399 --> 00:14:10,639
supposed to be a an l dimensional

323
00:14:10,639 --> 00:14:13,040
lectures

324
00:14:13,040 --> 00:14:15,120
in its chair generation

325
00:14:15,120 --> 00:14:18,079
we choose a random polynomial phi

326
00:14:18,079 --> 00:14:21,519
such that the values of phi at

327
00:14:21,519 --> 00:14:24,240
at l different points alpha one to alpha

328
00:14:24,240 --> 00:14:25,040
l

329
00:14:25,040 --> 00:14:27,760
are equal to the secret vector

330
00:14:27,760 --> 00:14:30,560
and also that the degree is at most t

331
00:14:30,560 --> 00:14:32,959
plus l minus 1.

332
00:14:32,959 --> 00:14:37,279
then we give a point phi of j unto the j

333
00:14:37,279 --> 00:14:40,240
server as its share

334
00:14:40,240 --> 00:14:42,000
as for privacy

335
00:14:42,000 --> 00:14:45,279
t shares reveal t linear constraints on

336
00:14:45,279 --> 00:14:47,839
the coefficients of phi

337
00:14:47,839 --> 00:14:50,639
but the number of coefficients of phi is

338
00:14:50,639 --> 00:14:52,000
t plus l

339
00:14:52,000 --> 00:14:55,120
and so there are still l unknown

340
00:14:55,120 --> 00:14:58,880
coefficients which protects um uh l

341
00:14:58,880 --> 00:15:00,000
secrets

342
00:15:00,000 --> 00:15:02,959
so in summary t shares reveals no

343
00:15:02,959 --> 00:15:06,320
information on the secret vector

344
00:15:06,320 --> 00:15:08,880
on the other hand t plus l shares are

345
00:15:08,880 --> 00:15:11,600
sufficient to recover the interpolating

346
00:15:11,600 --> 00:15:14,560
polynomial phi because again the number

347
00:15:14,560 --> 00:15:18,079
of coefficients of pi is t plus l

348
00:15:18,079 --> 00:15:20,800
so then we can compute the secret vector

349
00:15:20,800 --> 00:15:24,000
from this polynomial

350
00:15:24,720 --> 00:15:27,440
from now on we show our homophobic

351
00:15:27,440 --> 00:15:29,680
secret sharing scheme which combined the

352
00:15:29,680 --> 00:15:31,440
previous homophobic secret sharing

353
00:15:31,440 --> 00:15:33,680
scheme for general advisor structures

354
00:15:33,680 --> 00:15:37,439
and packed secret sharing scheme

355
00:15:38,079 --> 00:15:40,240
recall that um general advanced

356
00:15:40,240 --> 00:15:43,040
structure is determined by uh all

357
00:15:43,040 --> 00:15:46,800
maximal subsets a1 to a n

358
00:15:46,800 --> 00:15:49,759
now a secret input is an l dimensional

359
00:15:49,759 --> 00:15:52,320
vector because we consider parallel

360
00:15:52,320 --> 00:15:55,120
computation

361
00:15:55,120 --> 00:15:57,120
as in the previous homophilic secret

362
00:15:57,120 --> 00:16:00,320
sharing scheme we first split the input

363
00:16:00,320 --> 00:16:01,680
vector s

364
00:16:01,680 --> 00:16:05,360
into n random vectors s1 to sn

365
00:16:05,360 --> 00:16:08,000
this is a simple extension of the

366
00:16:08,000 --> 00:16:12,800
previous scheme to vector valued inputs

367
00:16:12,800 --> 00:16:15,440
next we associate

368
00:16:15,440 --> 00:16:20,880
each vector su with the maximal set au

369
00:16:20,880 --> 00:16:23,680
and we share the vector su

370
00:16:23,680 --> 00:16:26,399
using uh packed secret sharing

371
00:16:26,399 --> 00:16:29,279
precisely we choose a random polynomial

372
00:16:29,279 --> 00:16:33,920
uh phi u um and give phi u of j to the

373
00:16:33,920 --> 00:16:34,959
um

374
00:16:34,959 --> 00:16:39,120
dj's player if it is not in a you

375
00:16:39,120 --> 00:16:41,839
and give a type of attackist of five of

376
00:16:41,839 --> 00:16:45,440
j and to players in au

377
00:16:45,440 --> 00:16:48,720
then the privacy is straightforward

378
00:16:48,720 --> 00:16:51,920
for any maximal subset au a players in

379
00:16:51,920 --> 00:16:54,320
this set and do not learn any

380
00:16:54,320 --> 00:16:56,480
information on the

381
00:16:56,480 --> 00:16:59,360
polynomial value because all of all of

382
00:16:59,360 --> 00:17:01,759
its values are encrypted

383
00:17:01,759 --> 00:17:04,400
so therefore they do not learn the

384
00:17:04,400 --> 00:17:07,919
the vector s u and so the secret vector

385
00:17:07,919 --> 00:17:10,720
s either

386
00:17:11,439 --> 00:17:15,119
now uh we show how our scheme performs a

387
00:17:15,119 --> 00:17:18,079
parallel evaluation of a single degree d

388
00:17:18,079 --> 00:17:20,079
polynomial

389
00:17:20,079 --> 00:17:21,119
let

390
00:17:21,119 --> 00:17:25,119
x1 to xd be the secret inputs which are

391
00:17:25,119 --> 00:17:27,280
l dimensional vectors

392
00:17:27,280 --> 00:17:29,760
it follows from the construction of our

393
00:17:29,760 --> 00:17:33,120
scheme that each secret vector is split

394
00:17:33,120 --> 00:17:35,760
into n random vectors

395
00:17:35,760 --> 00:17:37,760
and then each of them

396
00:17:37,760 --> 00:17:40,640
is shared via packed secret sharing

397
00:17:40,640 --> 00:17:44,240
using the random polynomial

398
00:17:44,240 --> 00:17:47,919
we consider the product of d secret um

399
00:17:47,919 --> 00:17:50,400
here star denotes the element-wise

400
00:17:50,400 --> 00:17:52,640
product

401
00:17:52,640 --> 00:17:55,200
and this monomial is expanded to uh the

402
00:17:55,200 --> 00:17:57,200
sum of m2d

403
00:17:57,200 --> 00:17:58,799
monomials

404
00:17:58,799 --> 00:18:00,720
note that uh each of them can be

405
00:18:00,720 --> 00:18:02,160
computed

406
00:18:02,160 --> 00:18:04,880
if the product of their interpolating

407
00:18:04,880 --> 00:18:07,120
polynomials um

408
00:18:07,120 --> 00:18:09,039
is recovered

409
00:18:09,039 --> 00:18:11,679
more precisely because on the degree of

410
00:18:11,679 --> 00:18:15,120
this polynomial is d l minus 1.

411
00:18:15,120 --> 00:18:17,520
if we collect more than

412
00:18:17,520 --> 00:18:20,000
the l minus 1 points of this polynomial

413
00:18:20,000 --> 00:18:23,200
from servers we can recover it by

414
00:18:23,200 --> 00:18:25,679
lagrange

415
00:18:26,840 --> 00:18:29,520
interpolation i recall that um from the

416
00:18:29,520 --> 00:18:32,640
contraction server i has the points of

417
00:18:32,640 --> 00:18:37,120
fi u as plain text if it is uh it does

418
00:18:37,120 --> 00:18:39,840
not belong to a u

419
00:18:39,840 --> 00:18:41,600
and um

420
00:18:41,600 --> 00:18:44,320
it has the point so uh it has the points

421
00:18:44,320 --> 00:18:48,480
of value as ciphertext if it is in nu

422
00:18:48,480 --> 00:18:52,080
then the value of this polynomial at i

423
00:18:52,080 --> 00:18:55,760
is separated into two parts the first is

424
00:18:55,760 --> 00:18:58,720
the product of points associated with

425
00:18:58,720 --> 00:19:01,840
maximal subsets not containing i

426
00:19:01,840 --> 00:19:04,080
and the latter is the product of the

427
00:19:04,080 --> 00:19:06,960
remaining points

428
00:19:07,520 --> 00:19:10,480
then a server i only cyber text of these

429
00:19:10,480 --> 00:19:12,799
values in the second part

430
00:19:12,799 --> 00:19:15,600
an important point is that if the number

431
00:19:15,600 --> 00:19:17,520
of ciphertexts in the

432
00:19:17,520 --> 00:19:20,559
second part is at most k

433
00:19:20,559 --> 00:19:22,640
then the server i can compute a

434
00:19:22,640 --> 00:19:25,360
ciphertext of this value because of the

435
00:19:25,360 --> 00:19:28,960
correctness of homophobic encryption

436
00:19:28,960 --> 00:19:30,080
therefore

437
00:19:30,080 --> 00:19:32,559
the evaluation of degree d polynomial

438
00:19:32,559 --> 00:19:35,200
succeeds if the following condition

439
00:19:35,200 --> 00:19:36,400
holds

440
00:19:36,400 --> 00:19:39,840
for any combination of the indices j1 to

441
00:19:39,840 --> 00:19:41,440
jd

442
00:19:41,440 --> 00:19:44,080
there are sufficiently many servers such

443
00:19:44,080 --> 00:19:47,440
that the number of cybertech is to be

444
00:19:47,440 --> 00:19:50,799
multiplied is at most k

445
00:19:50,799 --> 00:19:53,760
precisely we require that the number of

446
00:19:53,760 --> 00:19:56,559
such servers um to be more than the

447
00:19:56,559 --> 00:20:00,320
degree of this polynomial uh that is d l

448
00:20:00,320 --> 00:20:01,760
minus one

449
00:20:01,760 --> 00:20:04,240
then an output the player can recover at

450
00:20:04,240 --> 00:20:06,559
this polynomial

451
00:20:06,559 --> 00:20:08,240
from the points

452
00:20:08,240 --> 00:20:09,600
sent by

453
00:20:09,600 --> 00:20:11,679
servers

454
00:20:11,679 --> 00:20:14,240
and then he obtains a multiplication of

455
00:20:14,240 --> 00:20:17,440
d secret vectors

456
00:20:17,840 --> 00:20:21,280
however that is um this is not our final

457
00:20:21,280 --> 00:20:23,679
homophilic sig sharing scheme there is

458
00:20:23,679 --> 00:20:24,880
some uh

459
00:20:24,880 --> 00:20:28,320
some room for optimization

460
00:20:28,320 --> 00:20:31,520
as in our former construction we split a

461
00:20:31,520 --> 00:20:34,559
secret vector into random vectors but

462
00:20:34,559 --> 00:20:35,760
now

463
00:20:35,760 --> 00:20:39,440
we also give servers um ciphertext of

464
00:20:39,440 --> 00:20:41,440
derivatives of the interpolating

465
00:20:41,440 --> 00:20:43,039
polynomial

466
00:20:43,039 --> 00:20:45,840
privacy is still hold true because

467
00:20:45,840 --> 00:20:49,840
this additional information is encrypted

468
00:20:49,840 --> 00:20:53,679
we omit the details but because of this

469
00:20:53,679 --> 00:20:56,720
additional information an output player

470
00:20:56,720 --> 00:20:59,520
obtains more information on the product

471
00:20:59,520 --> 00:21:01,679
of secrets from servers

472
00:21:01,679 --> 00:21:02,400
so

473
00:21:02,400 --> 00:21:05,039
as a result this scheme can compute a

474
00:21:05,039 --> 00:21:08,960
polynomial of higher degree

475
00:21:09,679 --> 00:21:12,320
in addition so far we only consider a

476
00:21:12,320 --> 00:21:15,120
privacy against servers but in

477
00:21:15,120 --> 00:21:18,720
application to npc we also require that

478
00:21:18,720 --> 00:21:22,159
an output player um should not learn any

479
00:21:22,159 --> 00:21:24,400
information beyond the value of a

480
00:21:24,400 --> 00:21:25,919
function

481
00:21:25,919 --> 00:21:29,440
so for that we need to re-randomize the

482
00:21:29,440 --> 00:21:32,559
outputs of the evaluation algorithms

483
00:21:32,559 --> 00:21:36,159
with random shares of zero

484
00:21:36,159 --> 00:21:38,400
then the condition on the adversary

485
00:21:38,400 --> 00:21:41,200
structure is slightly changed

486
00:21:41,200 --> 00:21:42,480
this is a

487
00:21:42,480 --> 00:21:46,159
final condition and we call it a type qd

488
00:21:46,159 --> 00:21:48,000
kl

489
00:21:48,000 --> 00:21:52,159
we know that if we set l to 1 it is

490
00:21:52,159 --> 00:21:54,799
equivalent to a type qdk

491
00:21:54,799 --> 00:21:57,520
which is the condition required that the

492
00:21:57,520 --> 00:21:59,360
previous homophilic secret sharing

493
00:21:59,360 --> 00:22:00,640
scheme

494
00:22:00,640 --> 00:22:04,000
therefore our skin supports l parallel

495
00:22:04,000 --> 00:22:06,960
computations while the condition

496
00:22:06,960 --> 00:22:11,880
becomes stronger as l grows

497
00:22:12,559 --> 00:22:14,799
as for privacy as for sorry as for

498
00:22:14,799 --> 00:22:17,840
efficiency in our scheme each server

499
00:22:17,840 --> 00:22:21,200
receive at most end field elements and

500
00:22:21,200 --> 00:22:23,600
at most end cypher texas

501
00:22:23,600 --> 00:22:26,400
here any the number of maximal subsets

502
00:22:26,400 --> 00:22:29,760
of delta which is exponential

503
00:22:29,760 --> 00:22:31,919
in the number of players in the worst

504
00:22:31,919 --> 00:22:33,360
case

505
00:22:33,360 --> 00:22:36,320
on the other hand to share back to share

506
00:22:36,320 --> 00:22:39,120
secret vectors instead of scholars we

507
00:22:39,120 --> 00:22:42,000
need to choose a finite field containing

508
00:22:42,000 --> 00:22:45,679
at least m plus l elements

509
00:22:45,679 --> 00:22:48,320
therefore the share size of our scheme

510
00:22:48,320 --> 00:22:54,720
is 2 to m times a log of m plus l

511
00:22:54,720 --> 00:22:57,280
finally i will summarize this talk

512
00:22:57,280 --> 00:23:00,320
in this work we first propose a novel

513
00:23:00,320 --> 00:23:02,400
homophilic secret sharing scheme for

514
00:23:02,400 --> 00:23:05,440
multipathetic adversary structures

515
00:23:05,440 --> 00:23:06,840
of type 2

516
00:23:06,840 --> 00:23:10,080
decay the share size of our scheme is

517
00:23:10,080 --> 00:23:12,720
polynomial in the number of players and

518
00:23:12,720 --> 00:23:15,120
so more efficient than the general

519
00:23:15,120 --> 00:23:16,960
construction

520
00:23:16,960 --> 00:23:19,520
furthermore because our scheme tolerates

521
00:23:19,520 --> 00:23:22,400
multiplied adversary structures and so

522
00:23:22,400 --> 00:23:24,799
um it is more general than the threshold

523
00:23:24,799 --> 00:23:26,880
scheme

524
00:23:26,880 --> 00:23:29,520
in addition we showed that the

525
00:23:29,520 --> 00:23:32,240
these three homophily sharing schemes

526
00:23:32,240 --> 00:23:35,520
can be extended to the ones for cmd

527
00:23:35,520 --> 00:23:37,919
computation which means that

528
00:23:37,919 --> 00:23:40,880
it computes a single polynomial on l

529
00:23:40,880 --> 00:23:43,279
different points

530
00:23:43,279 --> 00:23:45,120
the adversary structures of our

531
00:23:45,120 --> 00:23:47,039
homophilic secret sharing schemes must

532
00:23:47,039 --> 00:23:49,919
satisfy a stronger condition which we

533
00:23:49,919 --> 00:23:54,320
call type qd kl but the overheads in in

534
00:23:54,320 --> 00:23:57,039
share size are all logo well

535
00:23:57,039 --> 00:23:59,520
so therefore our technique is more

536
00:23:59,520 --> 00:24:02,080
efficient than the naive solution of

537
00:24:02,080 --> 00:24:04,799
simply running um l computations

538
00:24:04,799 --> 00:24:07,600
independently

539
00:24:07,840 --> 00:24:11,439
and these are references

540
00:24:12,080 --> 00:24:14,480
this is the end of my talk uh that's all

541
00:24:14,480 --> 00:24:17,720
thank you

