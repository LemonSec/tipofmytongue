1
00:00:00,080 --> 00:00:03,600
you're welcome no sorry

2
00:00:03,600 --> 00:00:05,440
no problem so

3
00:00:05,440 --> 00:00:07,120
good morning everybody good evening

4
00:00:07,120 --> 00:00:09,760
afternoon because uh depending on your

5
00:00:09,760 --> 00:00:11,599
time zone

6
00:00:11,599 --> 00:00:14,920
so welcome to the

7
00:00:14,920 --> 00:00:16,480
2021

8
00:00:16,480 --> 00:00:20,000
uh iacr distinguished lecture so i am

9
00:00:20,000 --> 00:00:22,080
michelle abdallah the current iecr

10
00:00:22,080 --> 00:00:23,600
president

11
00:00:23,600 --> 00:00:26,400
uh as you may know the iacr

12
00:00:26,400 --> 00:00:28,880
distinguished lecturers they have been

13
00:00:28,880 --> 00:00:31,279
awarded by the acr

14
00:00:31,279 --> 00:00:33,840
since uh 1994

15
00:00:33,840 --> 00:00:37,120
and they are usually

16
00:00:37,120 --> 00:00:39,040
awarded to people who have made

17
00:00:39,040 --> 00:00:41,280
important contributions to cryptology

18
00:00:41,280 --> 00:00:42,960
research

19
00:00:42,960 --> 00:00:45,039
so the actual venue in which these

20
00:00:45,039 --> 00:00:47,120
lectures take place they are alternate

21
00:00:47,120 --> 00:00:49,280
between the the air the general

22
00:00:49,280 --> 00:00:51,360
conferences meaning they alternate

23
00:00:51,360 --> 00:00:54,879
between eurocrypt crypto and asia crypt

24
00:00:54,879 --> 00:00:57,440
and this year uh

25
00:00:57,440 --> 00:00:59,359
we have the pledge to have this lecture

26
00:00:59,359 --> 00:01:01,039
at asia crypt

27
00:01:01,039 --> 00:01:03,840
so it is an immense honor for me to

28
00:01:03,840 --> 00:01:09,520
introduce uh andrew yell our 2021 acr

29
00:01:09,520 --> 00:01:11,760
uh distinguished lecturer

30
00:01:11,760 --> 00:01:13,040
so

31
00:01:13,040 --> 00:01:14,640
just a bit of

32
00:01:14,640 --> 00:01:16,880
information though most of you are

33
00:01:16,880 --> 00:01:19,920
extremely familiar with uh andrew

34
00:01:19,920 --> 00:01:23,280
so andrew obtained a phd in physics from

35
00:01:23,280 --> 00:01:24,840
harvard in

36
00:01:24,840 --> 00:01:28,479
1972 and a phd in computer science from

37
00:01:28,479 --> 00:01:30,799
the university of illinois at ubuna

38
00:01:30,799 --> 00:01:34,079
champaign in 1975

39
00:01:34,079 --> 00:01:36,479
so he is currently the dean of the

40
00:01:36,479 --> 00:01:37,759
institute of

41
00:01:37,759 --> 00:01:40,000
for interdisciplinary information

42
00:01:40,000 --> 00:01:41,600
sciences

43
00:01:41,600 --> 00:01:44,640
at the tinchua in university

44
00:01:44,640 --> 00:01:47,759
but prior to that andrew also held

45
00:01:47,759 --> 00:01:51,920
professor positions at mit stanford uc

46
00:01:51,920 --> 00:01:55,280
berkeley and princeton

47
00:01:55,280 --> 00:01:58,240
so andrew's research interest

48
00:01:58,240 --> 00:02:00,240
includes interests

49
00:02:00,240 --> 00:02:02,719
include algorithms cryptography quantum

50
00:02:02,719 --> 00:02:05,680
computer auction theory and artificial

51
00:02:05,680 --> 00:02:07,520
intelligence

52
00:02:07,520 --> 00:02:09,360
and he has made

53
00:02:09,360 --> 00:02:11,440
many fundamental and outstanding

54
00:02:11,440 --> 00:02:13,280
contributions to

55
00:02:13,280 --> 00:02:16,319
all of these areas

56
00:02:17,280 --> 00:02:20,319
and of course because of that the angel

57
00:02:20,319 --> 00:02:23,360
has received many awards during the

58
00:02:23,360 --> 00:02:25,280
during his career and here i would like

59
00:02:25,280 --> 00:02:26,959
just to mention

60
00:02:26,959 --> 00:02:31,120
uh three of them so first uh

61
00:02:31,120 --> 00:02:36,160
andrew received the canoes prize in 1996

62
00:02:36,160 --> 00:02:38,239
uh he

63
00:02:38,239 --> 00:02:41,040
also is well known for having received

64
00:02:41,040 --> 00:02:42,800
the training award

65
00:02:42,800 --> 00:02:43,760
in

66
00:02:43,760 --> 00:02:46,080
the in 2000

67
00:02:46,080 --> 00:02:48,480
which is one of the most if not the most

68
00:02:48,480 --> 00:02:51,519
prestigious word in computer science

69
00:02:51,519 --> 00:02:54,319
and very recently this year

70
00:02:54,319 --> 00:02:57,519
he received the kyoto prize for in

71
00:02:57,519 --> 00:03:00,080
in advanced technology

72
00:03:00,080 --> 00:03:02,840
so in addition to these awards andrew is

73
00:03:02,840 --> 00:03:06,800
also a fellow of the american academy of

74
00:03:06,800 --> 00:03:08,560
arts and science

75
00:03:08,560 --> 00:03:11,360
a fellow of the american association for

76
00:03:11,360 --> 00:03:13,440
the advancement of science

77
00:03:13,440 --> 00:03:16,080
a fellow of the ecm

78
00:03:16,080 --> 00:03:18,560
a foreign member of the u.s national

79
00:03:18,560 --> 00:03:20,480
academy of science

80
00:03:20,480 --> 00:03:21,680
sciences

81
00:03:21,680 --> 00:03:23,680
and a member of the chinese academy of

82
00:03:23,680 --> 00:03:25,040
sciences

83
00:03:25,040 --> 00:03:27,680
so in today's lecture andrew will be

84
00:03:27,680 --> 00:03:30,400
talking about probabilistic reasoning

85
00:03:30,400 --> 00:03:33,680
and cryptography and machine learning

86
00:03:33,680 --> 00:03:34,799
so please

87
00:03:34,799 --> 00:03:38,239
join me in welcoming andrew andrea

88
00:03:38,239 --> 00:03:40,959
please andrew

89
00:03:41,519 --> 00:03:43,440
well thank you very much michelle for

90
00:03:43,440 --> 00:03:45,599
the nice introduction

91
00:03:45,599 --> 00:03:46,400
um

92
00:03:46,400 --> 00:03:47,599
i think that

93
00:03:47,599 --> 00:03:48,720
from

94
00:03:48,720 --> 00:03:52,239
now and then i i saw on my screen that

95
00:03:52,239 --> 00:03:56,000
the network is unstable so if if somehow

96
00:03:56,000 --> 00:03:57,360
during this

97
00:03:57,360 --> 00:03:59,360
next hour uh the

98
00:03:59,360 --> 00:04:02,640
connect is not quite great i i hope you

99
00:04:02,640 --> 00:04:05,279
would forgive me

100
00:04:06,640 --> 00:04:11,439
no problem it's really nice to be here

101
00:04:11,840 --> 00:04:14,000
it might help the network if you turn

102
00:04:14,000 --> 00:04:16,798
off your camera

103
00:04:16,798 --> 00:04:19,040
oh can you hear me oh yeah turn off my

104
00:04:19,040 --> 00:04:21,600
camera yeah it might help the network oh

105
00:04:21,600 --> 00:04:24,000
oh oh just

106
00:04:24,000 --> 00:04:26,080
let me see how do i

107
00:04:26,080 --> 00:04:31,440
i i i i'll stop video yes

108
00:04:31,440 --> 00:04:32,880
okay

109
00:04:32,880 --> 00:04:36,240
wow great suggestion

110
00:04:36,800 --> 00:04:41,000
now i know why you are at the chair

111
00:04:49,199 --> 00:04:52,919
except it didn't work

112
00:04:59,759 --> 00:05:00,639
okay

113
00:05:00,639 --> 00:05:03,840
as you can see that

114
00:05:04,720 --> 00:05:07,280
that these two subjects look very

115
00:05:07,280 --> 00:05:08,160
different

116
00:05:08,160 --> 00:05:12,000
cryptography and machine learning but

117
00:05:12,000 --> 00:05:15,039
they are tied together

118
00:05:15,280 --> 00:05:17,758
by the

119
00:05:20,800 --> 00:05:22,639
being used often

120
00:05:22,639 --> 00:05:25,199
and uh i'm very interested in this

121
00:05:25,199 --> 00:05:28,160
subject and so today i'd like to

122
00:05:28,160 --> 00:05:29,440
talk about

123
00:05:29,440 --> 00:05:30,880
uh the

124
00:05:30,880 --> 00:05:33,440
an open problem called the decay quality

125
00:05:33,440 --> 00:05:36,800
problem in cryptography which has to do

126
00:05:36,800 --> 00:05:38,800
with the

127
00:05:38,800 --> 00:05:41,199
the the loss of of

128
00:05:41,199 --> 00:05:42,720
privacy amount

129
00:05:42,720 --> 00:05:45,039
and the other subject is about some

130
00:05:45,039 --> 00:05:47,919
mathematical aspect of the kernel method

131
00:05:47,919 --> 00:05:51,639
of machine learning

132
00:05:53,759 --> 00:05:55,680
i'm going to

133
00:05:55,680 --> 00:05:58,720
discuss a very classical

134
00:05:58,720 --> 00:06:02,479
uh k-party k-equality communication

135
00:06:02,479 --> 00:06:04,960
problem which has been open for some

136
00:06:04,960 --> 00:06:06,400
time

137
00:06:06,400 --> 00:06:07,280
and

138
00:06:07,280 --> 00:06:09,520
i will introduce the problem

139
00:06:09,520 --> 00:06:12,720
and uh then i'm going to tie this k

140
00:06:12,720 --> 00:06:15,759
party problem to a coding problem and so

141
00:06:15,759 --> 00:06:16,960
i would

142
00:06:16,960 --> 00:06:20,000
analyze the protocols and introducing

143
00:06:20,000 --> 00:06:23,680
something called a distributed xor code

144
00:06:23,680 --> 00:06:24,639
and

145
00:06:24,639 --> 00:06:27,759
proving something about this extra code

146
00:06:27,759 --> 00:06:30,639
and using that

147
00:06:33,120 --> 00:06:36,080
uh this coding result

148
00:06:36,080 --> 00:06:39,440
and to uh begin with uh we are

149
00:06:39,440 --> 00:06:41,840
interested in this multi-party

150
00:06:41,840 --> 00:06:45,680
computation setting k parties uh want to

151
00:06:45,680 --> 00:06:48,560
compute a function with with

152
00:06:48,560 --> 00:06:52,400
all their different ambit private data

153
00:06:52,400 --> 00:06:54,319
and they would like to look at this

154
00:06:54,319 --> 00:06:58,319
function using protocols

155
00:07:01,039 --> 00:07:02,560
also

156
00:07:02,560 --> 00:07:05,280
a few rounds for

157
00:07:07,680 --> 00:07:10,400
protocols what's the best

158
00:07:10,400 --> 00:07:14,039
protocol that

159
00:07:16,479 --> 00:07:18,720
approaches problem uh is called

160
00:07:18,720 --> 00:07:20,960
communication complexity which was

161
00:07:20,960 --> 00:07:25,360
proposed in 1979 to address some aspect

162
00:07:25,360 --> 00:07:27,120
of these questions

163
00:07:27,120 --> 00:07:30,120
and

164
00:07:31,440 --> 00:07:35,039
across many areas including cryptography

165
00:07:35,039 --> 00:07:38,159
for example the

166
00:07:42,400 --> 00:07:43,680
do some

167
00:07:43,680 --> 00:07:45,840
multi-party computation

168
00:07:45,840 --> 00:07:47,599
uh can also

169
00:07:47,599 --> 00:07:51,199
be regarded as uh what's the amount of

170
00:07:51,199 --> 00:07:55,360
inevitable privacy laws about the data

171
00:07:55,360 --> 00:07:56,960
that you have to

172
00:07:56,960 --> 00:07:58,879
you have to leak if somebody is

173
00:07:58,879 --> 00:08:01,280
listening

174
00:08:04,160 --> 00:08:08,400
that i will be focusing on is the

175
00:08:08,400 --> 00:08:13,039
k equality problem so we have uh

176
00:08:13,039 --> 00:08:14,560
k processors

177
00:08:14,560 --> 00:08:17,599
and then a referee so that's the p k

178
00:08:17,599 --> 00:08:18,960
plus one

179
00:08:18,960 --> 00:08:21,440
and uh there's a certain function g

180
00:08:21,440 --> 00:08:24,440
that

181
00:08:27,440 --> 00:08:28,960
and the

182
00:08:28,960 --> 00:08:32,799
processor pi would send a

183
00:08:32,799 --> 00:08:35,839
a randomized string

184
00:08:35,839 --> 00:08:37,039
ri

185
00:08:37,039 --> 00:08:38,479
to the referee

186
00:08:38,479 --> 00:08:41,360
and the processor at the referee

187
00:08:41,360 --> 00:08:43,200
after collecting

188
00:08:43,200 --> 00:08:45,680
all the uh strings that has been

189
00:08:45,680 --> 00:08:46,800
submitted

190
00:08:46,800 --> 00:08:49,440
uh then we'll use the function g in

191
00:08:49,440 --> 00:08:53,839
order to decide whether the exclusive or

192
00:08:53,839 --> 00:08:55,519
of these

193
00:08:55,519 --> 00:08:58,640
k strings bit by bit

194
00:08:58,640 --> 00:09:01,640
easy

195
00:09:08,320 --> 00:09:10,800
so that the function would be exactly

196
00:09:10,800 --> 00:09:14,000
the uh parity function of these ambit

197
00:09:14,000 --> 00:09:15,120
strings

198
00:09:15,120 --> 00:09:17,760
and uh the interesting case

199
00:09:17,760 --> 00:09:19,360
is that we are

200
00:09:19,360 --> 00:09:22,640
allowing randomized algorithm and also

201
00:09:22,640 --> 00:09:24,080
we are allowing

202
00:09:24,080 --> 00:09:25,200
a certain

203
00:09:25,200 --> 00:09:26,720
error epsilon

204
00:09:26,720 --> 00:09:29,120
and the communication cost is the

205
00:09:29,120 --> 00:09:31,120
maximum length of the string or

206
00:09:31,120 --> 00:09:34,120
sometimes

207
00:09:36,560 --> 00:09:39,040
and the communication complexity is the

208
00:09:39,040 --> 00:09:41,760
minimum communication is the minimum

209
00:09:41,760 --> 00:09:44,160
combination cost in terms of the number

210
00:09:44,160 --> 00:09:47,519
of bits of any uh such k party

211
00:09:47,519 --> 00:09:49,839
algorithms and we are

212
00:09:49,839 --> 00:09:50,880
interested

213
00:09:50,880 --> 00:09:52,240
focused on

214
00:09:52,240 --> 00:09:53,279
the

215
00:09:53,279 --> 00:09:56,000
simplest possible model the simultaneous

216
00:09:56,000 --> 00:09:59,440
message model in which only one round

217
00:09:59,440 --> 00:10:02,320
of communication takes place and then

218
00:10:02,320 --> 00:10:03,600
designed

219
00:10:03,600 --> 00:10:06,959
and let's use the simple

220
00:10:09,680 --> 00:10:13,360
complexity for the

221
00:10:13,360 --> 00:10:14,720
quality

222
00:10:14,720 --> 00:10:17,720
problem

223
00:10:19,600 --> 00:10:24,160
and for k equal to 2 it's been known for

224
00:10:24,160 --> 00:10:27,680
for a long time of almost 25 years

225
00:10:27,680 --> 00:10:29,360
uh that

226
00:10:29,360 --> 00:10:32,079
there is a non-obvious

227
00:10:32,079 --> 00:10:33,279
solution

228
00:10:33,279 --> 00:10:36,320
that takes square root of end bits

229
00:10:36,320 --> 00:10:38,079
by the

230
00:10:38,079 --> 00:10:39,440
two parties

231
00:10:39,440 --> 00:10:40,240
and

232
00:10:40,240 --> 00:10:43,680
also it was wow

233
00:10:45,680 --> 00:10:47,200
the optimal

234
00:10:47,200 --> 00:10:50,160
complexity of the question so there is a

235
00:10:50,160 --> 00:10:51,279
long list

236
00:10:51,279 --> 00:10:54,079
starting with the

237
00:10:54,079 --> 00:10:57,680
96 and 97 baba and the chemo and binance

238
00:10:57,680 --> 00:10:59,040
paper and

239
00:10:59,040 --> 00:11:01,920
there are many versions and variants and

240
00:11:01,920 --> 00:11:04,399
uh and also notably uh there's a

241
00:11:04,399 --> 00:11:07,279
recently very uh relatively recent uh

242
00:11:07,279 --> 00:11:09,200
paper by uh

243
00:11:09,200 --> 00:11:12,800
uh bash govsky and the clock

244
00:11:12,800 --> 00:11:16,240
in 2015 that

245
00:11:16,240 --> 00:11:19,279
gives a very ingenious nice proof of the

246
00:11:19,279 --> 00:11:20,959
of the of the result

247
00:11:20,959 --> 00:11:21,760
for

248
00:11:21,760 --> 00:11:23,519
k greater than two

249
00:11:23,519 --> 00:11:26,079
uh it's easy to see that one can

250
00:11:26,079 --> 00:11:28,480
generalize the known construction so

251
00:11:28,480 --> 00:11:30,880
that it will be instead of n

252
00:11:30,880 --> 00:11:32,260
to the one half you

253
00:11:32,260 --> 00:11:35,370
[Music]

254
00:11:36,800 --> 00:11:40,480
0 is a bigger power of n

255
00:11:40,480 --> 00:11:43,120
when k becomes larger

256
00:11:43,120 --> 00:11:44,959
and

257
00:11:44,959 --> 00:11:46,079
the

258
00:11:46,079 --> 00:11:48,800
however the optimality question remains

259
00:11:48,800 --> 00:11:49,680
open

260
00:11:49,680 --> 00:11:52,720
uh since that early times and there were

261
00:11:52,720 --> 00:11:57,200
partial results along the way but um

262
00:11:57,200 --> 00:11:59,760
the general question has been open for

263
00:11:59,760 --> 00:12:02,160
love for a long time

264
00:12:02,160 --> 00:12:04,399
and uh in this talk i would like to

265
00:12:04,399 --> 00:12:06,959
focus on this problem and show that

266
00:12:06,959 --> 00:12:10,240
actually this upper bound is also a

267
00:12:10,240 --> 00:12:12,800
lower bound

268
00:12:13,040 --> 00:12:15,440
and so as i mentioned that's the way

269
00:12:15,440 --> 00:12:17,600
that

270
00:12:20,639 --> 00:12:24,519
from the clear party problem

271
00:12:25,920 --> 00:12:29,440
third parties and and uh think it think

272
00:12:29,440 --> 00:12:31,360
about it from the

273
00:12:31,360 --> 00:12:34,079
coding perspective and because then that

274
00:12:34,079 --> 00:12:35,680
code will

275
00:12:35,680 --> 00:12:37,839
have some restrictions on the structure

276
00:12:37,839 --> 00:12:42,480
of the code which is made may make it

277
00:12:44,800 --> 00:12:47,120
and to begin with let's

278
00:12:47,120 --> 00:12:50,800
discuss the uh the concept of coding for

279
00:12:50,800 --> 00:12:53,360
a one party that is a kind of standard

280
00:12:53,360 --> 00:12:56,000
type of code but we're interested in

281
00:12:56,000 --> 00:12:59,839
randomized code and so a code would be a

282
00:12:59,839 --> 00:13:02,720
collection of distributions

283
00:13:02,720 --> 00:13:03,839
row

284
00:13:03,839 --> 00:13:09,120
sub s where x is any input string

285
00:13:09,120 --> 00:13:12,399
so this is a collection of distributions

286
00:13:12,399 --> 00:13:13,839
uh over

287
00:13:13,839 --> 00:13:14,880
a

288
00:13:14,880 --> 00:13:17,920
output string so if the message you want

289
00:13:17,920 --> 00:13:21,200
to send is n bit long then this would be

290
00:13:21,200 --> 00:13:22,079
a

291
00:13:22,079 --> 00:13:24,000
each of the row f's would be a

292
00:13:24,000 --> 00:13:27,760
distribution uh over the m bit strings

293
00:13:27,760 --> 00:13:30,959
so in other words uh if the

294
00:13:30,959 --> 00:13:32,639
if i see a

295
00:13:32,639 --> 00:13:34,639
string import

296
00:13:34,639 --> 00:13:37,360
embed code

297
00:13:40,320 --> 00:13:41,680
to generate

298
00:13:41,680 --> 00:13:45,920
a a probability a a render string

299
00:13:45,920 --> 00:13:48,560
and i will be focused on

300
00:13:48,560 --> 00:13:52,399
the particular the case that the input x

301
00:13:52,399 --> 00:13:55,279
will be a uniform rendering input and uh

302
00:13:55,279 --> 00:13:57,920
of course in general it could be some

303
00:13:57,920 --> 00:13:59,760
other distributions but i think for the

304
00:13:59,760 --> 00:14:01,680
purpose of this talk

305
00:14:01,680 --> 00:14:05,279
we will focus on the case when the a

306
00:14:05,279 --> 00:14:08,399
random variable x is a bit string it's a

307
00:14:08,399 --> 00:14:11,760
uniform random input and if i take

308
00:14:11,760 --> 00:14:13,040
uh

309
00:14:13,040 --> 00:14:13,839
t

310
00:14:13,839 --> 00:14:16,240
iit samples according to the

311
00:14:16,240 --> 00:14:18,959
distribution

312
00:14:20,160 --> 00:14:21,199
then

313
00:14:21,199 --> 00:14:24,480
the receiver will learn about x

314
00:14:24,480 --> 00:14:26,160
more and more

315
00:14:26,160 --> 00:14:28,399
so

316
00:14:28,880 --> 00:14:31,839
that means that the entropy of x from

317
00:14:31,839 --> 00:14:33,920
the point of view of the receiver

318
00:14:33,920 --> 00:14:36,480
would decreases more

319
00:14:36,480 --> 00:14:40,160
as more samples are

320
00:14:43,199 --> 00:14:45,040
at what point

321
00:14:45,040 --> 00:14:46,079
uh

322
00:14:46,079 --> 00:14:48,480
would the

323
00:14:48,480 --> 00:14:51,680
the the the random variable

324
00:14:51,680 --> 00:14:52,959
uh would

325
00:14:52,959 --> 00:14:56,399
develop collisions

326
00:14:56,399 --> 00:14:59,600
in the sense that the entropy of x

327
00:14:59,600 --> 00:15:01,279
gets uh

328
00:15:01,279 --> 00:15:05,040
smaller that something happens and of us

329
00:15:05,040 --> 00:15:09,040
the collision threshold of rho to be

330
00:15:09,040 --> 00:15:12,800
ct of rho which is the minimal number of

331
00:15:12,800 --> 00:15:16,079
messages that the receiver has to

332
00:15:16,079 --> 00:15:18,639
receive before

333
00:15:18,639 --> 00:15:21,040
there will be significant collision

334
00:15:21,040 --> 00:15:25,399
taking place according to

335
00:15:27,680 --> 00:15:31,440
the samples so uh more precisely is just

336
00:15:31,440 --> 00:15:34,720
the minimal t so that if i take

337
00:15:34,720 --> 00:15:36,959
two random samples according to this

338
00:15:36,959 --> 00:15:38,959
distribution mu t

339
00:15:38,959 --> 00:15:42,880
uh what's the probability of getting a

340
00:15:42,880 --> 00:15:44,720
collision

341
00:15:44,720 --> 00:15:46,639
and uh so

342
00:15:46,639 --> 00:15:47,600
of course

343
00:15:47,600 --> 00:15:49,440
uh there are many different thresholds

344
00:15:49,440 --> 00:15:50,639
one can

345
00:15:50,639 --> 00:15:53,360
look and and for different purposes

346
00:15:53,360 --> 00:15:55,920
but here today we'll just focus on this

347
00:15:55,920 --> 00:15:58,160
particular

348
00:15:58,160 --> 00:15:59,600
threshold

349
00:15:59,600 --> 00:16:02,639
and now

350
00:16:02,959 --> 00:16:03,759
what

351
00:16:03,759 --> 00:16:09,079
so next i would like to introduce some

352
00:16:10,800 --> 00:16:13,040
uh fairly high

353
00:16:13,040 --> 00:16:15,440
threshold and uh

354
00:16:15,440 --> 00:16:18,079
and this is going uh turn out to be the

355
00:16:18,079 --> 00:16:20,959
key to lower bounding the communication

356
00:16:20,959 --> 00:16:24,480
complexity of the k equality

357
00:16:24,480 --> 00:16:26,880
problem

358
00:16:35,759 --> 00:16:39,040
i seem to have a little

359
00:16:41,440 --> 00:16:42,959
we can hear it

360
00:16:42,959 --> 00:16:44,880
i think i think my connection is a

361
00:16:44,880 --> 00:16:46,639
little bit unstable

362
00:16:46,639 --> 00:16:48,839
so that i can i cannot

363
00:16:48,839 --> 00:16:52,560
uh i think it's okay like uh sometimes

364
00:16:52,560 --> 00:16:55,120
it cuts a bit but i think uh most of

365
00:16:55,120 --> 00:16:57,680
what i think it's a is okay okay thank

366
00:16:57,680 --> 00:16:59,680
you we are able to follow

367
00:16:59,680 --> 00:17:03,279
okay so i'll i'll continue uh

368
00:17:03,279 --> 00:17:05,919
now uh i'm going to

369
00:17:05,919 --> 00:17:07,199
to to

370
00:17:07,199 --> 00:17:11,439
to uh construct a uh class of codes with

371
00:17:11,439 --> 00:17:14,880
the following description

372
00:17:17,839 --> 00:17:19,039
suppose

373
00:17:19,039 --> 00:17:22,240
i can construct uh something called

374
00:17:22,240 --> 00:17:27,520
uh x uh xor code based on this the

375
00:17:27,520 --> 00:17:31,120
randomized codes uh denoted by row tilde

376
00:17:31,120 --> 00:17:32,559
is this collection

377
00:17:32,559 --> 00:17:34,880
and each one of them is a randomized

378
00:17:34,880 --> 00:17:38,240
code and so in order to

379
00:17:38,240 --> 00:17:41,440
code a input string w

380
00:17:41,440 --> 00:17:42,559
for the

381
00:17:42,559 --> 00:17:43,679
uh

382
00:17:43,679 --> 00:17:44,559
code

383
00:17:44,559 --> 00:17:47,799
raw data

384
00:17:49,600 --> 00:17:52,880
i would randomly decompose w into this

385
00:17:52,880 --> 00:17:56,240
exclusive or sum of k random strings and

386
00:17:56,240 --> 00:17:58,240
so which is the constraint that they add

387
00:17:58,240 --> 00:18:00,320
up to w

388
00:18:00,320 --> 00:18:01,120
and

389
00:18:01,120 --> 00:18:05,360
secondly i would generate

390
00:18:08,000 --> 00:18:09,440
a random string

391
00:18:09,440 --> 00:18:12,320
according to the row i

392
00:18:12,320 --> 00:18:15,440
based on fsi and then output the

393
00:18:15,440 --> 00:18:17,440
collection of k

394
00:18:17,440 --> 00:18:20,160
random strings as the

395
00:18:20,160 --> 00:18:22,799
output of this

396
00:18:22,799 --> 00:18:24,400
xor code

397
00:18:24,400 --> 00:18:25,840
and

398
00:18:25,840 --> 00:18:30,000
we would refer to the length m1 m2

399
00:18:30,000 --> 00:18:31,760
and a of the

400
00:18:31,760 --> 00:18:34,240
random strings as the shape

401
00:18:34,240 --> 00:18:37,200
of the xor code

402
00:18:37,200 --> 00:18:39,120
and so

403
00:18:39,120 --> 00:18:41,760
now the following theorem shows that the

404
00:18:41,760 --> 00:18:46,160
xor code is quite resilient

405
00:18:49,679 --> 00:18:51,600
and the theorem can alternatively be

406
00:18:51,600 --> 00:18:54,960
viewed as an extension of the x-star

407
00:18:54,960 --> 00:18:59,120
lemma so what he said is this

408
00:18:59,120 --> 00:19:02,320
if if if row tilter be

409
00:19:02,320 --> 00:19:06,080
any n bit k extra code with shape

410
00:19:06,080 --> 00:19:09,440
parameters 1 m1 to mk

411
00:19:09,440 --> 00:19:12,640
then theorem one says the

412
00:19:12,640 --> 00:19:15,600
collision threshold of this code

413
00:19:15,600 --> 00:19:16,480
uh

414
00:19:16,480 --> 00:19:19,760
is has very high threshold so if you can

415
00:19:19,760 --> 00:19:25,280
see that if m1 to mk they are much less

416
00:19:25,280 --> 00:19:28,720
than n than a

417
00:19:31,039 --> 00:19:32,400
develop

418
00:19:32,400 --> 00:19:34,960
collision so in other words if someone

419
00:19:34,960 --> 00:19:37,600
leaks the information

420
00:19:37,600 --> 00:19:39,280
of the

421
00:19:39,280 --> 00:19:41,280
of the message

422
00:19:41,280 --> 00:19:44,320
of the by

423
00:19:45,360 --> 00:19:47,280
for

424
00:19:47,280 --> 00:19:49,600
for for each eye getting some

425
00:19:49,600 --> 00:19:50,799
information

426
00:19:50,799 --> 00:19:52,480
about the the

427
00:19:52,480 --> 00:19:53,440
the

428
00:19:53,440 --> 00:19:54,960
uh

429
00:19:54,960 --> 00:19:57,840
about the information xi then all

430
00:19:57,840 --> 00:20:01,200
together they will review uh

431
00:20:01,200 --> 00:20:05,840
so little information about the original

432
00:20:05,840 --> 00:20:07,840
input w that

433
00:20:07,840 --> 00:20:09,520
you could get very little information

434
00:20:09,520 --> 00:20:11,840
about it and uh

435
00:20:11,840 --> 00:20:13,840
that

436
00:20:13,840 --> 00:20:16,159
is the essence that

437
00:20:16,159 --> 00:20:19,360
you you can use it the basic idea to

438
00:20:19,360 --> 00:20:22,399
show that the

439
00:20:26,480 --> 00:20:29,679
the the

440
00:20:30,159 --> 00:20:31,679
the

441
00:20:31,679 --> 00:20:35,480
kind of delete the message

442
00:20:35,520 --> 00:20:37,679
kind of separately

443
00:20:37,679 --> 00:20:39,440
then it will take a long time before you

444
00:20:39,440 --> 00:20:40,640
learn anything

445
00:20:40,640 --> 00:20:42,240
about it

446
00:20:42,240 --> 00:20:44,480
and uh in a way that's the

447
00:20:44,480 --> 00:20:46,880
main technical

448
00:20:46,880 --> 00:20:50,480
theorem uh but then uh

449
00:20:50,480 --> 00:20:53,200
it it takes a lot

450
00:20:53,200 --> 00:20:54,480
of it to

451
00:20:54,480 --> 00:20:55,679
make it work

452
00:20:55,679 --> 00:20:58,679
okay

453
00:21:08,960 --> 00:21:10,720
yeah i i think you probably can still

454
00:21:10,720 --> 00:21:13,039
hear me but i cannot yeah

455
00:21:13,039 --> 00:21:15,679
yes we can hear you

456
00:21:15,679 --> 00:21:16,400
okay

457
00:21:16,400 --> 00:21:19,280
and and and now we're going to use it in

458
00:21:19,280 --> 00:21:21,280
order to show the

459
00:21:21,280 --> 00:21:22,480
uh

460
00:21:22,480 --> 00:21:25,120
the complexity about the

461
00:21:25,120 --> 00:21:26,000
uh

462
00:21:26,000 --> 00:21:29,039
k equality uh communication complexity

463
00:21:29,039 --> 00:21:31,840
problem and so the theorem too is to

464
00:21:31,840 --> 00:21:34,399
show that

465
00:21:41,919 --> 00:21:43,120
algorithms

466
00:21:43,120 --> 00:21:46,000
that that you can have in terms of order

467
00:21:46,000 --> 00:21:49,919
of magnitude and now the

468
00:21:49,919 --> 00:21:52,960
the the the essence uh is that a

469
00:21:52,960 --> 00:21:56,159
protocol for the k equality problem can

470
00:21:56,159 --> 00:21:58,159
be interpreted

471
00:21:58,159 --> 00:22:00,640
an algorithm for solving the two

472
00:22:00,640 --> 00:22:03,679
equality problems so can reduce the k

473
00:22:03,679 --> 00:22:06,480
equality problem to a two quantity

474
00:22:06,480 --> 00:22:09,679
equality problem which as we said

475
00:22:09,679 --> 00:22:11,440
has been well studied and we have a lot

476
00:22:11,440 --> 00:22:13,039
of insight about it

477
00:22:13,039 --> 00:22:16,799
and and the deduction is that the two

478
00:22:16,799 --> 00:22:20,000
player the first player is the original

479
00:22:20,000 --> 00:22:22,320
first player so it's using

480
00:22:22,320 --> 00:22:23,840
m1 bits

481
00:22:23,840 --> 00:22:26,000
and all the other k minus one other

482
00:22:26,000 --> 00:22:29,840
players are collectively uh controlled

483
00:22:29,840 --> 00:22:31,760
by a single player

484
00:22:31,760 --> 00:22:34,000
and

485
00:22:34,080 --> 00:22:35,200
now

486
00:22:35,200 --> 00:22:36,400
on the other hand

487
00:22:36,400 --> 00:22:38,840
uh because of the nature of the the k

488
00:22:38,840 --> 00:22:40,640
party uh

489
00:22:40,640 --> 00:22:43,200
set up that the player

490
00:22:43,200 --> 00:22:44,320
b

491
00:22:44,320 --> 00:22:47,679
is committed to using a k minus one

492
00:22:47,679 --> 00:22:49,120
extra code

493
00:22:49,120 --> 00:22:51,120
with the shape

494
00:22:51,120 --> 00:22:53,360
given by the individual

495
00:22:53,360 --> 00:22:55,840
players

496
00:23:00,240 --> 00:23:01,600
the the

497
00:23:01,600 --> 00:23:02,799
the length

498
00:23:02,799 --> 00:23:05,760
of the bit the player sent

499
00:23:05,760 --> 00:23:07,679
has to be

500
00:23:07,679 --> 00:23:11,760
greater than the collision threshold

501
00:23:11,760 --> 00:23:13,600
of the

502
00:23:13,600 --> 00:23:14,640
a1

503
00:23:14,640 --> 00:23:15,919
extra code

504
00:23:15,919 --> 00:23:16,880
of the

505
00:23:16,880 --> 00:23:20,559
second player so uh that's a result that

506
00:23:20,559 --> 00:23:23,120
the the the voltage

507
00:23:23,120 --> 00:23:25,039
in the paper that i mentioned uh they

508
00:23:25,039 --> 00:23:27,840
use that idea

509
00:23:32,799 --> 00:23:35,799
so

510
00:23:38,159 --> 00:23:40,559
and use theorem 1

511
00:23:40,559 --> 00:23:41,520
to

512
00:23:41,520 --> 00:23:42,880
us

513
00:23:42,880 --> 00:23:45,200
get the

514
00:23:47,760 --> 00:23:50,559
end to the k minus 1 divided

515
00:23:50,559 --> 00:23:53,039
by the product of the messages and

516
00:23:53,039 --> 00:23:56,559
therefore now use the

517
00:23:58,640 --> 00:24:02,520
the total number of messages

518
00:24:04,080 --> 00:24:06,960
the sum

519
00:24:10,000 --> 00:24:13,159
no result

520
00:24:18,400 --> 00:24:21,120
and uh

521
00:24:23,360 --> 00:24:26,959
yeah i think that i'm still

522
00:24:27,120 --> 00:24:30,840
yeah this last part i could not hear

523
00:24:30,840 --> 00:24:33,440
much but it's okay i can't hear you back

524
00:24:33,440 --> 00:24:35,679
now

525
00:24:36,720 --> 00:24:38,320
back now

526
00:24:38,320 --> 00:24:40,559
yeah

527
00:24:43,760 --> 00:24:47,120
can you hear me or not that's why

528
00:24:47,120 --> 00:24:50,000
i divided why reduce it to

529
00:24:50,000 --> 00:24:53,840
uh two-party uh and and indeed uh

530
00:24:53,840 --> 00:24:56,640
alternatively it's possible to regard

531
00:24:56,640 --> 00:24:59,120
the decay equality problem

532
00:24:59,120 --> 00:25:00,559
as a

533
00:25:00,559 --> 00:25:03,200
one-party problem

534
00:25:03,200 --> 00:25:04,240
except

535
00:25:04,240 --> 00:25:08,080
at this time it's not the the k equality

536
00:25:08,080 --> 00:25:10,639
the sorry

537
00:25:13,120 --> 00:25:15,679
testing problem uh using the k

538
00:25:15,679 --> 00:25:19,279
uh xor codes and it's possible to use

539
00:25:19,279 --> 00:25:22,880
that approach to derive the bounds that

540
00:25:22,880 --> 00:25:24,080
we mentioned

541
00:25:24,080 --> 00:25:26,640
except i think it's more natural to do

542
00:25:26,640 --> 00:25:29,279
it with the two-party case because the

543
00:25:29,279 --> 00:25:31,440
zero testing i think it just seems to be

544
00:25:31,440 --> 00:25:33,360
such a trivial problem how can you get

545
00:25:33,360 --> 00:25:37,440
any lower bound but i i think that

546
00:25:37,440 --> 00:25:39,600
okay so

547
00:25:39,600 --> 00:25:40,720
that's the

548
00:25:40,720 --> 00:25:41,760
the part

549
00:25:41,760 --> 00:25:43,840
about the

550
00:25:43,840 --> 00:25:46,799
my first topic i want to say and the

551
00:25:46,799 --> 00:25:48,640
second topic i'd like to say is

552
00:25:48,640 --> 00:25:50,559
something about the machine learning

553
00:25:50,559 --> 00:25:57,000
algorithm and i think it actually uh

554
00:25:58,640 --> 00:26:00,240
very exciting

555
00:26:00,240 --> 00:26:01,520
uh trend

556
00:26:01,520 --> 00:26:04,320
and because from the algorithmic point

557
00:26:04,320 --> 00:26:07,679
of view it really emphasizes a different

558
00:26:07,679 --> 00:26:09,679
algorithmic paradigm

559
00:26:09,679 --> 00:26:10,480
and

560
00:26:10,480 --> 00:26:14,400
it has wide applicability but

561
00:26:14,400 --> 00:26:15,440
very

562
00:26:15,440 --> 00:26:18,400
little theoretical understanding

563
00:26:18,400 --> 00:26:21,520
and so the research issue is that to

564
00:26:21,520 --> 00:26:24,880
explain the behavior of machine learning

565
00:26:24,880 --> 00:26:27,440
whether it's good or where or why it

566
00:26:27,440 --> 00:26:30,080
doesn't work and these are challenging

567
00:26:30,080 --> 00:26:31,120
problems

568
00:26:31,120 --> 00:26:33,279
for

569
00:26:35,919 --> 00:26:38,559
today is the new algorithmic paradigm

570
00:26:38,559 --> 00:26:39,520
because

571
00:26:39,520 --> 00:26:43,919
uh for many years uh that that we uh we

572
00:26:43,919 --> 00:26:45,120
tend to think

573
00:26:45,120 --> 00:26:49,520
about the design of algorithms uh is a

574
00:26:49,520 --> 00:26:51,760
it's a logical process basically we

575
00:26:51,760 --> 00:26:53,279
would take a problem

576
00:26:53,279 --> 00:26:55,760
and we would try to understand it

577
00:26:55,760 --> 00:26:58,320
to every

578
00:26:58,799 --> 00:27:02,320
mathematical structure of knowledge

579
00:27:02,320 --> 00:27:05,600
and then we would design an algorithm

580
00:27:05,600 --> 00:27:07,760
and we know beforehand that the

581
00:27:07,760 --> 00:27:10,880
algorithm definitely would work and

582
00:27:10,880 --> 00:27:14,000
quite often with the explicit analysis

583
00:27:14,000 --> 00:27:17,440
of of the performance guarantees however

584
00:27:17,440 --> 00:27:21,000
the machine learnings

585
00:27:23,200 --> 00:27:26,240
plausible way to do things and

586
00:27:26,240 --> 00:27:29,679
applied to things that that might not

587
00:27:29,679 --> 00:27:32,320
have a really good reason for it to work

588
00:27:32,320 --> 00:27:34,720
but it turns out a lot of times that

589
00:27:34,720 --> 00:27:35,919
they work well

590
00:27:35,919 --> 00:27:39,360
and uh so it's a very interesting

591
00:27:39,360 --> 00:27:41,760
uh subject means it's a difficult

592
00:27:41,760 --> 00:27:44,480
problem where you try to explain

593
00:27:44,480 --> 00:27:47,279
something and to up

594
00:27:47,279 --> 00:27:50,480
and this head has no intrinsic logic uh

595
00:27:50,480 --> 00:27:53,760
that is transparent and and and so uh

596
00:27:53,760 --> 00:27:55,360
uh i think from

597
00:27:55,360 --> 00:27:57,279
uh the

598
00:27:57,279 --> 00:28:01,000
theories point if

599
00:28:03,279 --> 00:28:05,840
and so uh today what i would like to

600
00:28:05,840 --> 00:28:06,880
to

601
00:28:06,880 --> 00:28:09,840
talk about is a uh example i think it's

602
00:28:09,840 --> 00:28:12,640
perhaps one of the most familiar methods

603
00:28:12,640 --> 00:28:15,039
in machine learning and it's the kernel

604
00:28:15,039 --> 00:28:19,120
method and uh we would like to do an

605
00:28:19,120 --> 00:28:21,520
analysis uh for some

606
00:28:21,520 --> 00:28:22,559
problems

607
00:28:22,559 --> 00:28:25,279
and so uh machine learnings are

608
00:28:25,279 --> 00:28:28,399
definitely being what you use in all

609
00:28:28,399 --> 00:28:31,679
domains and the quality of solutions uh

610
00:28:31,679 --> 00:28:35,039
rely mostly on empirical evidence with a

611
00:28:35,039 --> 00:28:36,880
little theoretical batching

612
00:28:36,880 --> 00:28:39,919
and the current state of affairs is that

613
00:28:39,919 --> 00:28:42,000
really the applications

614
00:28:42,000 --> 00:28:43,600
run far ahead

615
00:28:43,600 --> 00:28:47,439
of the scientific understanding

616
00:28:50,960 --> 00:28:52,640
a well-known problem

617
00:28:52,640 --> 00:28:53,679
i just

618
00:28:53,679 --> 00:28:55,440
discussed a couple

619
00:28:55,440 --> 00:28:57,200
mentioned the first one is more

620
00:28:57,200 --> 00:28:59,679
robustness and and

621
00:28:59,679 --> 00:29:02,480
improving the stability of the machine

622
00:29:02,480 --> 00:29:03,679
learning

623
00:29:03,679 --> 00:29:05,120
for example

624
00:29:05,120 --> 00:29:08,080
here is the well-known example that if

625
00:29:08,080 --> 00:29:11,120
you have pattern

626
00:29:11,120 --> 00:29:14,959
object recognition and

627
00:29:15,360 --> 00:29:16,480
here is a

628
00:29:16,480 --> 00:29:19,279
a picture that's that's

629
00:29:19,279 --> 00:29:22,480
uh perfectly diagnosed classified as a

630
00:29:22,480 --> 00:29:25,200
pig but if you put randomness and there

631
00:29:25,200 --> 00:29:31,120
are examples that it actually turns into

632
00:29:33,600 --> 00:29:34,559
just

633
00:29:34,559 --> 00:29:37,600
robust than the typical algorithms we

634
00:29:37,600 --> 00:29:40,000
we do and the second example is

635
00:29:40,000 --> 00:29:41,200
certainly

636
00:29:41,200 --> 00:29:43,679
i think that we talked people talking

637
00:29:43,679 --> 00:29:44,880
about a lot

638
00:29:44,880 --> 00:29:45,679
uh

639
00:29:45,679 --> 00:29:49,039
explainable ai and the transparency of

640
00:29:49,039 --> 00:29:51,760
machine learning namely that

641
00:29:51,760 --> 00:29:53,279
in order for

642
00:29:53,279 --> 00:29:55,120
the

643
00:29:55,120 --> 00:29:58,799
learning algorithms to be to be widely

644
00:29:58,799 --> 00:30:00,399
adapted

645
00:30:00,399 --> 00:30:01,919
in many cases

646
00:30:01,919 --> 00:30:04,080
people have to have have to have

647
00:30:04,080 --> 00:30:08,199
confidence in it so

648
00:30:09,520 --> 00:30:10,240
i

649
00:30:10,240 --> 00:30:14,640
didn't put some bias into it now here is

650
00:30:14,640 --> 00:30:15,520
a

651
00:30:15,520 --> 00:30:17,279
something that people often talk about

652
00:30:17,279 --> 00:30:20,080
you have the appraisal of homes based on

653
00:30:20,080 --> 00:30:22,960
the data so the machine

654
00:30:22,960 --> 00:30:26,159
learning designers have

655
00:30:26,159 --> 00:30:27,360
taken

656
00:30:27,360 --> 00:30:28,880
a lot of

657
00:30:28,880 --> 00:30:29,840
the

658
00:30:29,840 --> 00:30:31,840
data in the neighborhood of the house

659
00:30:31,840 --> 00:30:33,520
and

660
00:30:33,520 --> 00:30:35,120
design a system

661
00:30:35,120 --> 00:30:38,320
and from that time on can be used and so

662
00:30:38,320 --> 00:30:40,399
for example if somebody put in

663
00:30:40,399 --> 00:30:43,279
a application and get a a two billion

664
00:30:43,279 --> 00:30:45,600
dollar

665
00:30:45,600 --> 00:30:48,000
price tag and so

666
00:30:48,000 --> 00:30:48,799
the

667
00:30:48,799 --> 00:30:52,799
the person might get

668
00:30:55,679 --> 00:30:58,240
that can i trust the result and but the

669
00:30:58,240 --> 00:31:00,960
machine learning algorithms uh a lot of

670
00:31:00,960 --> 00:31:04,000
times it's not possible

671
00:31:04,000 --> 00:31:06,960
at the present state affairs to explain

672
00:31:06,960 --> 00:31:09,600
yeah with the same mathematical rigor so

673
00:31:09,600 --> 00:31:10,559
that's a

674
00:31:10,559 --> 00:31:12,480
so this kind of question

675
00:31:12,480 --> 00:31:13,519
are

676
00:31:13,519 --> 00:31:15,840
very important and

677
00:31:15,840 --> 00:31:18,960
i think that the analysis uh is the

678
00:31:18,960 --> 00:31:23,519
first is is one one of the first

679
00:31:27,279 --> 00:31:30,480
uh fix such problems and uh so but

680
00:31:30,480 --> 00:31:31,519
currently

681
00:31:31,519 --> 00:31:32,799
uh

682
00:31:32,799 --> 00:31:35,600
the analysis the analysis of the machine

683
00:31:35,600 --> 00:31:40,320
learning algorithms is in a very uh

684
00:31:40,320 --> 00:31:41,679
kind of

685
00:31:41,679 --> 00:31:43,120
a different

686
00:31:43,120 --> 00:31:44,559
uh

687
00:31:44,559 --> 00:31:45,519
days

688
00:31:45,519 --> 00:31:46,720
so

689
00:31:46,720 --> 00:31:47,760
okay

690
00:31:47,760 --> 00:31:51,440
and and so uh let's do it for a a

691
00:31:51,440 --> 00:31:52,720
particular

692
00:31:52,720 --> 00:31:57,600
uh simple case and and um

693
00:31:58,080 --> 00:31:59,679
that's something called the kernel

694
00:31:59,679 --> 00:32:02,399
method and it's widely used in pattern

695
00:32:02,399 --> 00:32:06,879
analysis and basically the method

696
00:32:07,120 --> 00:32:08,880
uses a

697
00:32:08,880 --> 00:32:10,880
something called a kernel function which

698
00:32:10,880 --> 00:32:13,840
is a similarity function to predict

699
00:32:13,840 --> 00:32:15,679
whether a data

700
00:32:15,679 --> 00:32:17,840
point belongs to

701
00:32:17,840 --> 00:32:18,640
some

702
00:32:18,640 --> 00:32:20,640
clustered or or not

703
00:32:20,640 --> 00:32:22,880
so you can

704
00:32:22,880 --> 00:32:25,039
think of this kernel method is trying to

705
00:32:25,039 --> 00:32:26,880
do classification

706
00:32:26,880 --> 00:32:29,039
uh

707
00:32:29,039 --> 00:32:30,799
making a prediction

708
00:32:30,799 --> 00:32:32,000
algorithm

709
00:32:32,000 --> 00:32:34,480
and let's just look at an example of the

710
00:32:34,480 --> 00:32:37,919
simplest case the linear kernel

711
00:32:37,919 --> 00:32:40,559
and the also the darshan kernel

712
00:32:40,559 --> 00:32:41,279
and

713
00:32:41,279 --> 00:32:44,240
now using the kernel method

714
00:32:44,240 --> 00:32:45,440
uh

715
00:32:45,440 --> 00:32:47,840
like to solve to do machine learning it

716
00:32:47,840 --> 00:32:50,799
works well in many practical cases and

717
00:32:50,799 --> 00:32:53,120
uh but there are also many many

718
00:32:53,120 --> 00:32:56,960
exceptions and one particular well-known

719
00:32:56,960 --> 00:32:58,640
uh

720
00:32:58,640 --> 00:33:01,679
hard case is the parity function

721
00:33:01,679 --> 00:33:03,120
and the

722
00:33:03,120 --> 00:33:06,399
kernel method seems to have difficulty

723
00:33:06,399 --> 00:33:07,360
of

724
00:33:07,360 --> 00:33:10,640
getting very accurate prediction of this

725
00:33:10,640 --> 00:33:12,799
function the parity which is supposed to

726
00:33:12,799 --> 00:33:15,760
be really simple and and

727
00:33:15,760 --> 00:33:18,320
uh so and there have been

728
00:33:18,320 --> 00:33:21,200
plausible arguments suggested why the

729
00:33:21,200 --> 00:33:24,159
kernel methods don't work very well but

730
00:33:24,159 --> 00:33:25,679
uh

731
00:33:25,679 --> 00:33:28,880
there's so far no really rigorous proof

732
00:33:28,880 --> 00:33:30,480
and we would like to prove that the

733
00:33:30,480 --> 00:33:32,320
parity function

734
00:33:32,320 --> 00:33:33,200
blur

735
00:33:33,200 --> 00:33:36,559
for uh in particular the uh

736
00:33:36,559 --> 00:33:38,880
the gaussian kernel

737
00:33:38,880 --> 00:33:41,279
and now to

738
00:33:41,279 --> 00:33:42,399
to uh

739
00:33:42,399 --> 00:33:45,039
uh looking into it a little bit they uh

740
00:33:45,039 --> 00:33:46,799
let me just

741
00:33:46,799 --> 00:33:48,320
go through the

742
00:33:48,320 --> 00:33:50,880
the basic definition the the kernel

743
00:33:50,880 --> 00:33:54,320
function k is a similarity function

744
00:33:54,320 --> 00:33:57,120
from rn

745
00:33:57,919 --> 00:34:00,159
cross rn to

746
00:34:00,159 --> 00:34:02,720
the set of real numbers satisfying the

747
00:34:02,720 --> 00:34:05,519
positive semi-definite conditions

748
00:34:05,519 --> 00:34:07,200
and

749
00:34:07,200 --> 00:34:10,320
namely that the gram matrix k

750
00:34:10,320 --> 00:34:13,280
of x i x j is a

751
00:34:13,280 --> 00:34:15,199
positive semi-definite

752
00:34:15,199 --> 00:34:17,040
for any x1

753
00:34:17,040 --> 00:34:18,879
to xn

754
00:34:18,879 --> 00:34:21,679
in the space and and and uh

755
00:34:21,679 --> 00:34:22,399
but

756
00:34:22,399 --> 00:34:23,359
the

757
00:34:23,359 --> 00:34:25,199
the burning

758
00:34:25,199 --> 00:34:26,000
so

759
00:34:26,000 --> 00:34:27,280
the

760
00:34:27,280 --> 00:34:29,359
so the kernel method is a

761
00:34:29,359 --> 00:34:31,760
kind of is a matrix of this form and

762
00:34:31,760 --> 00:34:34,399
satisfying certain conditions

763
00:34:34,399 --> 00:34:35,119
and

764
00:34:35,119 --> 00:34:38,320
the learning a boolean function with the

765
00:34:38,320 --> 00:34:41,440
kernel function at k goes like follows

766
00:34:41,440 --> 00:34:42,560
you first

767
00:34:42,560 --> 00:34:44,239
collecting data

768
00:34:44,239 --> 00:34:46,960
and then you learn to predict

769
00:34:46,960 --> 00:34:50,719
kind of you you you you get an album

770
00:34:50,719 --> 00:34:52,079
from this data

771
00:34:52,079 --> 00:34:55,040
uh called a predictor and finally you

772
00:34:55,040 --> 00:34:57,119
can apply the predictor to make

773
00:34:57,119 --> 00:34:59,520
predictions so the collecting data phase

774
00:34:59,520 --> 00:35:02,400
would take m random samples from the

775
00:35:02,400 --> 00:35:05,280
boolean cube so they are coded as one

776
00:35:05,280 --> 00:35:07,040
and a minus one from a certain

777
00:35:07,040 --> 00:35:08,320
distribution

778
00:35:08,320 --> 00:35:12,320
and uh now you do something

779
00:35:12,320 --> 00:35:13,040
to

780
00:35:13,040 --> 00:35:17,599
to learn to build an optimal uh model

781
00:35:17,599 --> 00:35:18,960
for

782
00:35:18,960 --> 00:35:20,079
predicting

783
00:35:20,079 --> 00:35:20,800
f

784
00:35:20,800 --> 00:35:23,359
and basically you do this

785
00:35:23,359 --> 00:35:27,359
the the class of of predictors that

786
00:35:27,359 --> 00:35:30,160
you want to design is the simplest one

787
00:35:30,160 --> 00:35:32,640
it's just a linear function so it's

788
00:35:32,640 --> 00:35:36,800
satisfied by so it's specified by the n

789
00:35:36,800 --> 00:35:40,240
plus one numbers in a linear function

790
00:35:40,240 --> 00:35:42,240
and you want to

791
00:35:42,240 --> 00:35:43,520
to

792
00:35:43,520 --> 00:35:46,240
optimize it uh

793
00:35:46,240 --> 00:35:48,079
for the in the following fashion the

794
00:35:48,079 --> 00:35:51,280
first it will uh fitting that

795
00:35:51,280 --> 00:35:54,720
so that if you use these

796
00:35:54,720 --> 00:35:57,520
parameters uh then you can get the same

797
00:35:57,520 --> 00:36:01,440
sign as the f so basically you you would

798
00:36:01,440 --> 00:36:03,440
want that the

799
00:36:03,440 --> 00:36:05,200
the the

800
00:36:05,200 --> 00:36:07,040
kind of the particular

801
00:36:07,040 --> 00:36:09,119
linear function that you constructed

802
00:36:09,119 --> 00:36:11,839
here that uh if you use this as a

803
00:36:11,839 --> 00:36:14,960
predictor then it will at least

804
00:36:14,960 --> 00:36:16,880
fitting the data

805
00:36:16,880 --> 00:36:20,560
from where it came from and uh

806
00:36:20,560 --> 00:36:24,079
secondly among all the possible

807
00:36:24,079 --> 00:36:27,040
m plus one tuple of numbers that define

808
00:36:27,040 --> 00:36:28,800
the linear equation

809
00:36:28,800 --> 00:36:31,280
you you want to max choose the one that

810
00:36:31,280 --> 00:36:35,119
have to maximize the margin so um you

811
00:36:35,119 --> 00:36:38,000
want it so that the

812
00:36:38,000 --> 00:36:41,000
prediction

813
00:36:43,440 --> 00:36:45,920
decimal

814
00:36:48,960 --> 00:36:49,839
of the

815
00:36:49,839 --> 00:36:51,280
linear functions

816
00:36:51,280 --> 00:36:53,680
and once you get the prediction you can

817
00:36:53,680 --> 00:36:54,800
use it

818
00:36:54,800 --> 00:36:56,800
if you take a

819
00:36:56,800 --> 00:36:59,040
input

820
00:36:59,040 --> 00:37:02,240
volume input y you would you would

821
00:37:02,240 --> 00:37:04,960
predict the value of

822
00:37:04,960 --> 00:37:08,240
of f y to be the sign of the uh

823
00:37:08,240 --> 00:37:09,359
predictor

824
00:37:09,359 --> 00:37:12,320
and uh so then so the error probability

825
00:37:12,320 --> 00:37:15,680
the performance measure would be uh in

826
00:37:15,680 --> 00:37:18,160
in our case let's just assume that all

827
00:37:18,160 --> 00:37:21,440
the numbers are randomly chosen over the

828
00:37:21,440 --> 00:37:24,240
boolean tube

829
00:37:26,480 --> 00:37:29,520
a proportion of the input for which that

830
00:37:29,520 --> 00:37:31,280
this predictor makes the wrong

831
00:37:31,280 --> 00:37:33,359
prediction and as you can see that in

832
00:37:33,359 --> 00:37:36,320
the case of the linear kernels the

833
00:37:36,320 --> 00:37:38,800
internal function is just simply the

834
00:37:38,800 --> 00:37:40,240
inner product

835
00:37:40,240 --> 00:37:42,240
of the

836
00:37:42,240 --> 00:37:43,520
of the y's

837
00:37:43,520 --> 00:37:46,480
and that predictor would correspond to a

838
00:37:46,480 --> 00:37:49,280
hyperplane that's separating the labeled

839
00:37:49,280 --> 00:37:50,960
sample points

840
00:37:50,960 --> 00:37:54,240
into into two groups the true

841
00:37:54,240 --> 00:37:56,319
and

842
00:37:58,880 --> 00:38:01,040
spirit the

843
00:38:01,040 --> 00:38:02,000
inputs

844
00:38:02,000 --> 00:38:03,760
and

845
00:38:03,760 --> 00:38:05,119
and the

846
00:38:05,119 --> 00:38:06,079
the

847
00:38:06,079 --> 00:38:07,839
uh

848
00:38:07,839 --> 00:38:10,640
the maximization over the

849
00:38:10,640 --> 00:38:14,480
the the margin is simply to minimize the

850
00:38:14,480 --> 00:38:17,119
largest distance from uh

851
00:38:17,119 --> 00:38:20,160
both the red and the blue point to the

852
00:38:20,160 --> 00:38:22,560
uh separating plane so the maximum the

853
00:38:22,560 --> 00:38:24,720
margin means uh to

854
00:38:24,720 --> 00:38:27,119
to to

855
00:38:27,119 --> 00:38:29,119
to minimize

856
00:38:29,119 --> 00:38:30,960
the max distance

857
00:38:30,960 --> 00:38:34,960
and the second example uh

858
00:38:38,000 --> 00:38:40,640
use this

859
00:38:40,640 --> 00:38:42,800
kind of

860
00:38:42,800 --> 00:38:43,839
gaussian

861
00:38:43,839 --> 00:38:45,680
function

862
00:38:45,680 --> 00:38:49,440
as the the the uh

863
00:38:49,920 --> 00:38:53,200
as the as the similarity function so

864
00:38:53,200 --> 00:38:54,320
it's

865
00:38:54,320 --> 00:38:56,320
uh it's try to

866
00:38:56,320 --> 00:39:00,000
try to emphasize points that are close

867
00:39:00,000 --> 00:39:02,640
together and give you more weight

868
00:39:02,640 --> 00:39:04,880
as compared to points that are

869
00:39:04,880 --> 00:39:08,320
dissimilar that are the same

870
00:39:10,800 --> 00:39:13,280
tools and and i think that

871
00:39:13,280 --> 00:39:15,920
sensibly this lambda would be choosing

872
00:39:15,920 --> 00:39:17,440
moderation

873
00:39:17,440 --> 00:39:19,839
otherwise you would either

874
00:39:19,839 --> 00:39:21,280
would try to

875
00:39:21,280 --> 00:39:22,720
too much emphasis

876
00:39:22,720 --> 00:39:25,440
on the on the on the points that are

877
00:39:25,440 --> 00:39:26,839
very close

878
00:39:26,839 --> 00:39:29,599
or to

879
00:39:29,599 --> 00:39:32,720
to equalize all the contributions and so

880
00:39:32,720 --> 00:39:34,320
that you might not get

881
00:39:34,320 --> 00:39:36,000
a good information

882
00:39:36,000 --> 00:39:39,040
that you like to extract and and so

883
00:39:39,040 --> 00:39:40,960
using this

884
00:39:40,960 --> 00:39:43,760
the predictor is given by a

885
00:39:43,760 --> 00:39:45,280
uh a function

886
00:39:45,280 --> 00:39:48,560
uh that is linear in the kernels but uh

887
00:39:48,560 --> 00:39:51,680
of course it's a nonlinear function of

888
00:39:51,680 --> 00:39:53,920
this uh particular form

889
00:39:53,920 --> 00:39:55,760
and gaussian kernel is one of the most

890
00:39:55,760 --> 00:39:56,720
commonly

891
00:39:56,720 --> 00:39:57,599
used

892
00:39:57,599 --> 00:40:00,560
kernel method and producing classifier

893
00:40:00,560 --> 00:40:03,040
in many scenarios and the question is

894
00:40:03,040 --> 00:40:06,640
that what's its implementation and why

895
00:40:06,640 --> 00:40:08,480
and empirically the gaussian kernel

896
00:40:08,480 --> 00:40:11,359
method doesn't work well for the pair

897
00:40:11,359 --> 00:40:12,079
and

898
00:40:12,079 --> 00:40:14,000
i think the uh

899
00:40:14,000 --> 00:40:16,160
i think from the theoretician's point of

900
00:40:16,160 --> 00:40:18,640
view at least we should understand this

901
00:40:18,640 --> 00:40:19,839
simplest

902
00:40:19,839 --> 00:40:21,200
uh

903
00:40:21,200 --> 00:40:22,400
phenomena

904
00:40:22,400 --> 00:40:26,720
and and uh if we can understand anything

905
00:40:26,720 --> 00:40:28,800
we should be able to understand uh this

906
00:40:28,800 --> 00:40:31,200
particular case and so we would like to

907
00:40:31,200 --> 00:40:33,359
confirm it analytically

908
00:40:33,359 --> 00:40:38,759
and this problem has a pretty a big

909
00:40:46,560 --> 00:40:49,440
1990s showed that no small degree

910
00:40:49,440 --> 00:40:51,440
multivariate polynomial

911
00:40:51,440 --> 00:40:54,640
can approximate pretty well so linear

912
00:40:54,640 --> 00:40:56,800
polynomials or

913
00:40:56,800 --> 00:40:59,839
quadratic polynomials and so on can uh

914
00:40:59,839 --> 00:41:01,040
wouldn't do

915
00:41:01,040 --> 00:41:03,520
as a predictor and but of course the

916
00:41:03,520 --> 00:41:06,400
gaussian is not the pronoun you say it's

917
00:41:06,400 --> 00:41:08,560
a

918
00:41:12,400 --> 00:41:14,160
infinitely many terms

919
00:41:14,160 --> 00:41:17,839
and uh now benjio uh observed very early

920
00:41:17,839 --> 00:41:19,599
on that

921
00:41:19,599 --> 00:41:20,640
that

922
00:41:20,640 --> 00:41:22,960
there's a good reason why

923
00:41:22,960 --> 00:41:24,960
at least a plausible reason why the

924
00:41:24,960 --> 00:41:27,760
gaussians don't uh learn the parity

925
00:41:27,760 --> 00:41:31,040
function well so with very large lambda

926
00:41:31,040 --> 00:41:35,440
the parity function uh can be uh

927
00:41:35,440 --> 00:41:38,480
expressed with a uh

928
00:41:38,480 --> 00:41:41,599
uh m plus one dollar cautious so that's

929
00:41:41,599 --> 00:41:43,599
a uh kind of

930
00:41:43,599 --> 00:41:47,040
uh there's an argument for that

931
00:41:47,040 --> 00:41:48,480
the the

932
00:41:48,480 --> 00:41:50,880
the the guardian kernel might

933
00:41:50,880 --> 00:41:53,520
might have a chance but immediately uh

934
00:41:53,520 --> 00:41:56,800
they also suggested that that uh

935
00:41:56,800 --> 00:41:59,599
the the gaussian kernels will not learn

936
00:41:59,599 --> 00:42:01,040
well because the

937
00:42:01,040 --> 00:42:02,400
linear combination

938
00:42:02,400 --> 00:42:05,200
is not of the form of the of the

939
00:42:05,200 --> 00:42:08,160
standard learning

940
00:42:11,280 --> 00:42:14,480
can come up from a very smart politician

941
00:42:14,480 --> 00:42:16,480
who look at it

942
00:42:16,480 --> 00:42:19,119
and say that we can design a linear

943
00:42:19,119 --> 00:42:22,079
combination of n plus one functions that

944
00:42:22,079 --> 00:42:25,760
can solve problems exactly but however

945
00:42:25,760 --> 00:42:27,680
if you want to do some real learning

946
00:42:27,680 --> 00:42:30,560
kind of using the methodology

947
00:42:30,560 --> 00:42:33,119
that i just mentioned and and try to

948
00:42:33,119 --> 00:42:35,200
learn from the data then

949
00:42:35,200 --> 00:42:36,720
then actually

950
00:42:36,720 --> 00:42:41,799
bend you at how they uh i think

951
00:42:44,000 --> 00:42:46,720
argument then and so uh

952
00:42:46,720 --> 00:42:49,119
very recently uh we showed that the

953
00:42:49,119 --> 00:42:51,280
gaussian kernel cannot learn parity for

954
00:42:51,280 --> 00:42:54,400
various ranges of lambda here we will

955
00:42:54,400 --> 00:42:57,200
just prove it for the case when landa is

956
00:42:57,200 --> 00:42:59,119
in the most reasonable

957
00:42:59,119 --> 00:43:01,760
sensible choice 1 over the square root

958
00:43:01,760 --> 00:43:02,640
of n

959
00:43:02,640 --> 00:43:03,920
and the

960
00:43:03,920 --> 00:43:07,119
statement will look like this

961
00:43:07,200 --> 00:43:09,280
for for this parameter

962
00:43:09,280 --> 00:43:11,839
with with very high probability a random

963
00:43:11,839 --> 00:43:13,520
gaussian

964
00:43:13,520 --> 00:43:15,680
parent predictor p

965
00:43:15,680 --> 00:43:17,680
that is chosen according to the

966
00:43:17,680 --> 00:43:20,160
mythology we mentioned it will have

967
00:43:20,160 --> 00:43:22,799
error rate

968
00:43:25,839 --> 00:43:28,480
involving very heavy probabilistic

969
00:43:28,480 --> 00:43:30,319
conditioning and reasoning

970
00:43:30,319 --> 00:43:31,200
and

971
00:43:31,200 --> 00:43:32,880
uh so the

972
00:43:32,880 --> 00:43:36,000
uh i think the century to the to the

973
00:43:36,000 --> 00:43:39,040
proof is to set up a hella high-level

974
00:43:39,040 --> 00:43:40,480
view that

975
00:43:40,480 --> 00:43:43,599
reduces the problem to simpler pieces

976
00:43:43,599 --> 00:43:46,079
each one of them requires solving a

977
00:43:46,079 --> 00:43:50,680
non-trivial stochastic processes

978
00:43:56,240 --> 00:43:57,440
uh

979
00:43:57,440 --> 00:43:58,800
okay yeah

980
00:43:58,800 --> 00:44:02,720
and and uh uh so

981
00:44:03,839 --> 00:44:06,000
uh

982
00:44:06,480 --> 00:44:11,760
so let me give me a be a a little bit um

983
00:44:14,480 --> 00:44:16,319
random sample points

984
00:44:16,319 --> 00:44:17,280
and

985
00:44:17,280 --> 00:44:20,480
we use it to produce a gaussian

986
00:44:20,480 --> 00:44:23,280
parity predictor uh

987
00:44:23,280 --> 00:44:25,119
this is a linear function

988
00:44:25,119 --> 00:44:27,680
and uh it's useful to regard this

989
00:44:27,680 --> 00:44:30,720
predictor as a as a hashing function

990
00:44:30,720 --> 00:44:32,800
that would hashes the

991
00:44:32,800 --> 00:44:36,560
uh different sample points

992
00:44:37,040 --> 00:44:40,000
enter into into the real space

993
00:44:40,000 --> 00:44:41,520
and

994
00:44:41,520 --> 00:44:46,839
so what we would like to do is that that

995
00:44:50,319 --> 00:44:54,480
would produce a uh predictor which from

996
00:44:54,480 --> 00:44:56,880
the point of view of the hashing

997
00:44:56,880 --> 00:45:00,240
function that that do too well

998
00:45:00,240 --> 00:45:03,440
a good job so that that independent of

999
00:45:03,440 --> 00:45:06,880
whether they are parities is plus one or

1000
00:45:06,880 --> 00:45:09,680
minus one they would just

1001
00:45:09,680 --> 00:45:13,040
hashes them together in a uh a sort of a

1002
00:45:13,040 --> 00:45:14,240
wealthiest

1003
00:45:14,240 --> 00:45:17,599
uh evenly distributed way and so

1004
00:45:17,599 --> 00:45:21,200
essentially uh this

1005
00:45:23,440 --> 00:45:25,680
research of designing uh kind of

1006
00:45:25,680 --> 00:45:28,560
analyzing universal families and so on

1007
00:45:28,560 --> 00:45:32,000
of hash function so uh why is it that

1008
00:45:32,000 --> 00:45:34,079
this random issues

1009
00:45:34,079 --> 00:45:36,240
uh

1010
00:45:36,240 --> 00:45:38,640
function from this particular hash

1011
00:45:38,640 --> 00:45:39,599
function

1012
00:45:39,599 --> 00:45:41,760
uh would be a

1013
00:45:41,760 --> 00:45:43,839
very good

1014
00:45:43,839 --> 00:45:47,359
hash function that is the uh

1015
00:45:47,359 --> 00:45:48,480
the problem

1016
00:45:48,480 --> 00:45:51,280
and uh

1017
00:45:51,920 --> 00:45:54,480
and and so so let me give you the the

1018
00:45:54,480 --> 00:45:57,680
the the several steps for for doing it

1019
00:45:57,680 --> 00:45:58,720
but first

1020
00:45:58,720 --> 00:46:01,839
uh let's kind of uh

1021
00:46:01,839 --> 00:46:04,640
prove the result under the assumption

1022
00:46:04,640 --> 00:46:05,920
that uh

1023
00:46:05,920 --> 00:46:08,800
that these coefficients ai they are

1024
00:46:08,800 --> 00:46:11,760
exactly equal to one or minus one

1025
00:46:11,760 --> 00:46:14,960
according to the parity for for all eyes

1026
00:46:14,960 --> 00:46:17,200
and and later we'll relax this

1027
00:46:17,200 --> 00:46:18,400
assumption

1028
00:46:18,400 --> 00:46:19,520
and so

1029
00:46:19,520 --> 00:46:21,359
uh what we'd like to do is to construct

1030
00:46:21,359 --> 00:46:23,599
a probabilistic argument to show

1031
00:46:23,599 --> 00:46:26,880
take a random sample uh we'll get a

1032
00:46:26,880 --> 00:46:29,280
predictor that's a very effective hash

1033
00:46:29,280 --> 00:46:32,640
function and and and so this function

1034
00:46:32,640 --> 00:46:34,800
cannot well separate points without even

1035
00:46:34,800 --> 00:46:38,160
parity and leading us to conclude that

1036
00:46:38,160 --> 00:46:40,720
it makes a very high

1037
00:46:40,720 --> 00:46:42,720
error and the entity

1038
00:46:42,720 --> 00:46:44,960
the the difficult part is that if you

1039
00:46:44,960 --> 00:46:46,720
compare the randomness

1040
00:46:46,720 --> 00:46:48,480
uh the b

1041
00:46:48,480 --> 00:46:50,160
is in the

1042
00:46:50,160 --> 00:46:51,599
random set

1043
00:46:51,599 --> 00:46:54,000
and and uh so

1044
00:46:54,000 --> 00:46:55,599
uh

1045
00:46:55,599 --> 00:47:00,319
so so it is true that that it's it's

1046
00:47:02,800 --> 00:47:06,160
specific two points then a randomly

1047
00:47:06,160 --> 00:47:09,040
choose hash function would hatch them

1048
00:47:09,040 --> 00:47:10,400
to

1049
00:47:10,400 --> 00:47:12,560
different locations but the point is

1050
00:47:12,560 --> 00:47:15,119
that you would like to argue yourself

1051
00:47:15,119 --> 00:47:16,720
that

1052
00:47:16,720 --> 00:47:17,680
that

1053
00:47:17,680 --> 00:47:18,960
the

1054
00:47:18,960 --> 00:47:22,400
so it's easy to get the probabilistic

1055
00:47:22,400 --> 00:47:25,040
statement from one side but actually

1056
00:47:25,040 --> 00:47:26,960
what we want to see

1057
00:47:26,960 --> 00:47:29,839
is the other end of the of the point and

1058
00:47:29,839 --> 00:47:31,200
this

1059
00:47:31,200 --> 00:47:32,800
nonetheless there are

1060
00:47:32,800 --> 00:47:35,599
standard type

1061
00:47:37,440 --> 00:47:38,720
the laws

1062
00:47:38,720 --> 00:47:40,000
in order to

1063
00:47:40,000 --> 00:47:42,880
do probabilistic reasoning uh to

1064
00:47:42,880 --> 00:47:46,880
transfer this type of of results and so

1065
00:47:46,880 --> 00:47:48,480
the central argument

1066
00:47:48,480 --> 00:47:51,359
will uh start with proving this so let

1067
00:47:51,359 --> 00:47:53,680
me just show you the

1068
00:47:53,680 --> 00:47:56,000
the the result so if you take points

1069
00:47:56,000 --> 00:47:58,319
which are fairly distance apart

1070
00:47:58,319 --> 00:47:59,920
then they would

1071
00:47:59,920 --> 00:48:04,160
it's very hard to get a a bad

1072
00:48:04,160 --> 00:48:07,160
random

1073
00:48:10,079 --> 00:48:13,599
is bigger than epsilon for a random y y

1074
00:48:13,599 --> 00:48:16,800
prime in a and the lemma shows this

1075
00:48:16,800 --> 00:48:17,680
and

1076
00:48:17,680 --> 00:48:19,200
so

1077
00:48:19,200 --> 00:48:20,720
that's exactly

1078
00:48:20,720 --> 00:48:22,720
uh the the

1079
00:48:22,720 --> 00:48:26,880
the integration that i i gave and now uh

1080
00:48:26,880 --> 00:48:29,599
after we have done that we let's remove

1081
00:48:29,599 --> 00:48:32,559
the uh restriction that a i

1082
00:48:32,559 --> 00:48:34,720
say plus or minus one according to the

1083
00:48:34,720 --> 00:48:37,440
priority and so

1084
00:48:37,440 --> 00:48:39,599
if i consider the maximum margin

1085
00:48:39,599 --> 00:48:44,079
condition for the parameters and one use

1086
00:48:44,079 --> 00:48:46,880
optimization theory uh it's possible to

1087
00:48:46,880 --> 00:48:49,599
infer that the a i

1088
00:48:49,599 --> 00:48:52,240
is equal to the parity of x i plus

1089
00:48:52,240 --> 00:48:55,759
exponentially small terms

1090
00:48:58,240 --> 00:49:00,400
all the derivations in the previous

1091
00:49:00,400 --> 00:49:03,839
proof and therefore does not affect the

1092
00:49:03,839 --> 00:49:06,800
conclusion and so so to summarize a

1093
00:49:06,800 --> 00:49:08,960
rigorous analysis of

1094
00:49:08,960 --> 00:49:11,520
machine learning algorithm behavior can

1095
00:49:11,520 --> 00:49:13,920
invoke quite subtle probabilistic

1096
00:49:13,920 --> 00:49:15,920
reasoning and such understanding will

1097
00:49:15,920 --> 00:49:18,720
help us build a firmer foundation for

1098
00:49:18,720 --> 00:49:22,879
machine learning so in conclusion

1099
00:49:24,400 --> 00:49:26,640
both cryptography and machine learning

1100
00:49:26,640 --> 00:49:30,240
are rich cross disciplinary areas that

1101
00:49:30,240 --> 00:49:31,440
need

1102
00:49:31,440 --> 00:49:33,599
foundational research

1103
00:49:33,599 --> 00:49:34,400
and

1104
00:49:34,400 --> 00:49:35,680
foundations

1105
00:49:35,680 --> 00:49:36,480
that

1106
00:49:36,480 --> 00:49:39,599
laid during the 1980s for

1107
00:49:39,599 --> 00:49:42,720
these areas in cryptography and deep

1108
00:49:42,720 --> 00:49:44,559
learning have led to amazing

1109
00:49:44,559 --> 00:49:47,760
applications nowadays in digital economy

1110
00:49:47,760 --> 00:49:50,240
and the alpha vote

1111
00:49:50,240 --> 00:49:52,880
today and

1112
00:49:52,880 --> 00:49:55,200
i think that probabilistic reasoning

1113
00:49:55,200 --> 00:49:58,200
uh

1114
00:50:00,800 --> 00:50:04,319
key to resolving many of the problems

1115
00:50:04,319 --> 00:50:06,800
of a stochastic nature that arise in

1116
00:50:06,800 --> 00:50:09,040
these settings and

1117
00:50:09,040 --> 00:50:11,280
two examples

1118
00:50:11,280 --> 00:50:12,559
were presented

1119
00:50:12,559 --> 00:50:15,040
in this talk today uh thank you very

1120
00:50:15,040 --> 00:50:16,319
much

1121
00:50:16,319 --> 00:50:19,359
for coming to the top

1122
00:50:19,520 --> 00:50:22,640
so uh thank you andy

1123
00:50:22,640 --> 00:50:23,440
uh

1124
00:50:23,440 --> 00:50:26,480
so now we have a

1125
00:50:26,480 --> 00:50:28,720
time for a few questions so if you would

1126
00:50:28,720 --> 00:50:31,440
like to ask questions you can actually

1127
00:50:31,440 --> 00:50:35,520
feel free to unmute yourself

1128
00:50:37,520 --> 00:50:41,640
so and uh yeah

1129
00:50:42,000 --> 00:50:43,119
so

1130
00:50:43,119 --> 00:50:45,760
i actually have a question

1131
00:50:45,760 --> 00:50:47,920
yes

1132
00:50:47,920 --> 00:50:51,200
it's partly my uh misunderstanding it

1133
00:50:51,200 --> 00:50:54,000
may be due to the audio breakup but

1134
00:50:54,000 --> 00:50:56,559
could you explain again the role that

1135
00:50:56,559 --> 00:50:57,359
the

1136
00:50:57,359 --> 00:51:00,800
colonel you used plays in the analysis

1137
00:51:00,800 --> 00:51:03,839
in the middle of your talk

1138
00:51:04,319 --> 00:51:06,000
you referred to two examples of

1139
00:51:06,000 --> 00:51:07,520
different kernels

1140
00:51:07,520 --> 00:51:08,880
oh

1141
00:51:08,880 --> 00:51:10,559
i'm only

1142
00:51:10,559 --> 00:51:13,280
analyze the gaussian kernel because the

1143
00:51:13,280 --> 00:51:16,400
linear kernel is well known that it

1144
00:51:16,400 --> 00:51:18,880
cannot

1145
00:51:19,359 --> 00:51:21,280
learn the parity function well i think

1146
00:51:21,280 --> 00:51:23,119
that actually

1147
00:51:23,119 --> 00:51:26,079
any fixed degree or small degree

1148
00:51:26,079 --> 00:51:28,319
even in fraction of n

1149
00:51:28,319 --> 00:51:30,160
uh it is known

1150
00:51:30,160 --> 00:51:32,000
by aspirins

1151
00:51:32,000 --> 00:51:33,520
in one of the

1152
00:51:33,520 --> 00:51:35,839
references that i mentioned they show

1153
00:51:35,839 --> 00:51:36,800
that

1154
00:51:36,800 --> 00:51:39,599
they cannot distinguish the parity more

1155
00:51:39,599 --> 00:51:43,920
than 50 of the time and and

1156
00:51:46,640 --> 00:51:48,960
is that it's it's

1157
00:51:48,960 --> 00:51:51,680
it has high degree

1158
00:51:51,680 --> 00:51:53,760
so this is specific to the problem of

1159
00:51:53,760 --> 00:51:55,680
learning parity then

1160
00:51:55,680 --> 00:51:57,599
that's right that

1161
00:51:57,599 --> 00:51:59,839
i think that in general

1162
00:51:59,839 --> 00:52:01,760
really do not know how to analyze it i

1163
00:52:01,760 --> 00:52:03,760
think the parity is

1164
00:52:03,760 --> 00:52:05,280
it's it's the

1165
00:52:05,280 --> 00:52:07,280
is the simplest kind i think that one

1166
00:52:07,280 --> 00:52:10,160
thing i want to say that is that

1167
00:52:10,160 --> 00:52:11,920
that uh

1168
00:52:11,920 --> 00:52:14,480
what's what's different about the

1169
00:52:14,480 --> 00:52:15,680
the

1170
00:52:15,680 --> 00:52:18,559
analyzing machine learning algorithms is

1171
00:52:18,559 --> 00:52:20,800
that

1172
00:52:23,599 --> 00:52:26,400
proof that something does not work that

1173
00:52:26,400 --> 00:52:28,480
we we don't have any good experience

1174
00:52:28,480 --> 00:52:30,880
with it because i think that in the old

1175
00:52:30,880 --> 00:52:35,280
days that algorithms stay

1176
00:52:38,000 --> 00:52:40,640
evidence

1177
00:52:40,720 --> 00:52:42,240
ask the question that can you show me

1178
00:52:42,240 --> 00:52:43,920
that why it doesn't work

1179
00:52:43,920 --> 00:52:46,240
however this is a question that makes

1180
00:52:46,240 --> 00:52:48,480
sense in the machine learning context

1181
00:52:48,480 --> 00:52:50,640
because the hope is that you will design

1182
00:52:50,640 --> 00:52:53,440
general purpose

1183
00:52:53,760 --> 00:52:56,400
machine learning

1184
00:52:59,839 --> 00:53:02,640
so therefore we would like to understand

1185
00:53:02,640 --> 00:53:06,400
why it works and why it doesn't work

1186
00:53:06,880 --> 00:53:09,760
i i think this is it's it's it's kind of

1187
00:53:09,760 --> 00:53:14,559
tied up to the kind of the things in the

1188
00:53:17,280 --> 00:53:18,720
when people analyze

1189
00:53:18,720 --> 00:53:21,119
uh dynamic systems and if i give you a

1190
00:53:21,119 --> 00:53:24,160
dynamic systems and uh i asked the

1191
00:53:24,160 --> 00:53:27,040
question can you show me that

1192
00:53:27,040 --> 00:53:30,480
a it doesn't behave or does it converge

1193
00:53:30,480 --> 00:53:32,240
and you will have difficulty doing it i

1194
00:53:32,240 --> 00:53:34,880
mean except for the well-known cases and

1195
00:53:34,880 --> 00:53:36,240
and uh

1196
00:53:36,240 --> 00:53:38,880
so the problem uh and i believe this is

1197
00:53:38,880 --> 00:53:42,000
a very interesting subject for

1198
00:53:42,000 --> 00:53:44,240
probabilistic reasoning is that i think

1199
00:53:44,240 --> 00:53:45,599
that that

1200
00:53:45,599 --> 00:53:48,319
it makes sense for us to try to have to

1201
00:53:48,319 --> 00:53:51,440
to develop a technology for proving

1202
00:53:51,440 --> 00:53:54,640
things that don't work

1203
00:53:55,200 --> 00:53:58,240
okay i i maybe i should explain why i

1204
00:53:58,240 --> 00:54:00,079
was asking the question

1205
00:54:00,079 --> 00:54:02,640
in machine learning a lot of the goal is

1206
00:54:02,640 --> 00:54:03,599
to

1207
00:54:03,599 --> 00:54:07,040
uh model human perception to

1208
00:54:07,040 --> 00:54:09,680
be able to generalize human

1209
00:54:09,680 --> 00:54:10,960
inferences

1210
00:54:10,960 --> 00:54:13,599
and so for example in image processing

1211
00:54:13,599 --> 00:54:16,160
we try to find similar images

1212
00:54:16,160 --> 00:54:18,559
but there's this ancient result from the

1213
00:54:18,559 --> 00:54:21,920
1970s by amas tversky about

1214
00:54:21,920 --> 00:54:24,240
how human

1215
00:54:24,240 --> 00:54:27,359
perception of similarity is not

1216
00:54:27,359 --> 00:54:30,480
properly represented by a metric space

1217
00:54:30,480 --> 00:54:32,559
and so the kernels you were using are

1218
00:54:32,559 --> 00:54:35,119
actually embedded in a metric space

1219
00:54:35,119 --> 00:54:37,680
and i wonder how much of the difficulty

1220
00:54:37,680 --> 00:54:40,160
of machine learning predictions is due

1221
00:54:40,160 --> 00:54:41,760
to the fact that they're using this

1222
00:54:41,760 --> 00:54:45,520
faulty measure of similarity

1223
00:54:46,079 --> 00:54:48,319
it's a complicated question and i've

1224
00:54:48,319 --> 00:54:50,079
asked several machine learning experts

1225
00:54:50,079 --> 00:54:51,599
this and they sort of

1226
00:54:51,599 --> 00:54:53,760
you know as mathematicians we prefer

1227
00:54:53,760 --> 00:54:55,440
using simple

1228
00:54:55,440 --> 00:54:58,400
measures and you know we that's why

1229
00:54:58,400 --> 00:55:01,520
we're always referring to the gaussian

1230
00:55:01,520 --> 00:55:04,559
distance instead of other metrics but

1231
00:55:04,559 --> 00:55:06,640
you know similarity is not not actually

1232
00:55:06,640 --> 00:55:08,240
a metric there's this wonderful paper

1233
00:55:08,240 --> 00:55:10,079
i'll send you an email about it

1234
00:55:10,079 --> 00:55:12,240
yeah please do i think that's a very

1235
00:55:12,240 --> 00:55:16,000
interesting point i think that um

1236
00:55:17,280 --> 00:55:18,640
i think

1237
00:55:18,640 --> 00:55:22,240
extremely intriguing to be able to

1238
00:55:22,240 --> 00:55:23,920
uh design

1239
00:55:23,920 --> 00:55:26,559
standard alternative to the current

1240
00:55:26,559 --> 00:55:28,319
metric space approach

1241
00:55:28,319 --> 00:55:30,160
and and uh

1242
00:55:30,160 --> 00:55:32,880
yeah please send me the

1243
00:55:32,880 --> 00:55:35,760
point to any reference but because i i

1244
00:55:35,760 --> 00:55:37,200
i'm dying to

1245
00:55:37,200 --> 00:55:40,640
to hear some successful examples i think

1246
00:55:40,640 --> 00:55:44,480
that it would be it would be wonderful

1247
00:55:46,720 --> 00:55:50,480
i put a link to the paper in the chat

1248
00:55:50,480 --> 00:55:53,040
um but here

1249
00:55:53,040 --> 00:55:55,520
in the chat but i'll send it by email

1250
00:55:55,520 --> 00:55:58,000
yeah yeah

1251
00:56:00,559 --> 00:56:02,799
okay uh

1252
00:56:02,799 --> 00:56:04,480
okay well i i

1253
00:56:04,480 --> 00:56:07,599
i can download it from here

1254
00:56:10,240 --> 00:56:11,680
so

1255
00:56:11,680 --> 00:56:13,119
does anybody

1256
00:56:13,119 --> 00:56:14,480
anybody else would like to ask

1257
00:56:14,480 --> 00:56:17,839
additional questions

1258
00:56:24,799 --> 00:56:27,040
yeah thanks for the for the paper i

1259
00:56:27,040 --> 00:56:28,240
think that

1260
00:56:28,240 --> 00:56:31,119
the diversity certainly is a big name

1261
00:56:31,119 --> 00:56:32,559
yeah it's an it's a very very

1262
00:56:32,559 --> 00:56:34,319
interesting paper

1263
00:56:34,319 --> 00:56:35,200
um

1264
00:56:35,200 --> 00:56:36,799
which i discovered

1265
00:56:36,799 --> 00:56:40,079
i don't know 15 years ago

1266
00:56:41,359 --> 00:56:45,160
yeah i think i got it

1267
00:56:51,280 --> 00:56:53,599
all right

1268
00:56:53,839 --> 00:56:56,000
so

1269
00:56:56,400 --> 00:56:58,400
would i take this opportunity to thank

1270
00:56:58,400 --> 00:56:59,920
andy again for

1271
00:56:59,920 --> 00:57:01,440
for his talk

1272
00:57:01,440 --> 00:57:02,960
uh

1273
00:57:02,960 --> 00:57:05,520
so it was very nice of you to be able to

1274
00:57:05,520 --> 00:57:07,839
accept this invitation to give a

1275
00:57:07,839 --> 00:57:09,839
distinguished lecture

1276
00:57:09,839 --> 00:57:11,280
and

1277
00:57:11,280 --> 00:57:14,640
so if you have further questions to ask

1278
00:57:14,640 --> 00:57:17,680
andrew you can always submit via the

1279
00:57:17,680 --> 00:57:19,680
chat we can always make sure to forward

1280
00:57:19,680 --> 00:57:23,200
the questions to to him

1281
00:57:23,359 --> 00:57:25,040
and uh so

1282
00:57:25,040 --> 00:57:26,559
please

1283
00:57:26,559 --> 00:57:29,760
let's uh thank andy again for his uh for

1284
00:57:29,760 --> 00:57:33,520
his talk thank you andy

1285
00:57:34,640 --> 00:57:36,880
well thank you very much michelle and

1286
00:57:36,880 --> 00:57:39,040
kevin and you you

1287
00:57:39,040 --> 00:57:41,520
and i think oh and and thanks to all

1288
00:57:41,520 --> 00:57:43,920
those that are present

1289
00:57:43,920 --> 00:57:47,400
i enjoy

