1
00:00:03,919 --> 00:00:05,520
so hi everyone

2
00:00:05,520 --> 00:00:07,680
welcome to the session on musics and

3
00:00:07,680 --> 00:00:09,200
snarks

4
00:00:09,200 --> 00:00:11,120
so i'm daniel and i'm co-chairing this

5
00:00:11,120 --> 00:00:13,758
session with

6
00:00:14,920 --> 00:00:17,359
takashi hi

7
00:00:17,359 --> 00:00:19,199
and uh we're going to have five very

8
00:00:19,199 --> 00:00:20,560
nice papers

9
00:00:20,560 --> 00:00:22,720
and i'd suggest that we directly jump

10
00:00:22,720 --> 00:00:25,840
into the presentations

11
00:00:25,840 --> 00:00:28,720
so the first paper is a lunar toolbox

12
00:00:28,720 --> 00:00:30,400
for more efficient universal and

13
00:00:30,400 --> 00:00:32,880
updatable ck snarks and commute improve

14
00:00:32,880 --> 00:00:34,239
extensions

15
00:00:34,239 --> 00:00:36,880
and the talk will be given by a nice and

16
00:00:36,880 --> 00:00:39,280
i would suggest to just

17
00:00:39,280 --> 00:00:41,760
jump into it

18
00:00:41,760 --> 00:00:44,719
uh can you see this light

19
00:00:44,719 --> 00:00:45,920
yes

20
00:00:45,920 --> 00:00:48,879
okay nice so thanks for having me here i

21
00:00:48,879 --> 00:00:51,120
am a nice girl and i'm going to present

22
00:00:51,120 --> 00:00:52,719
lunar this is joint work with matteo

23
00:00:52,719 --> 00:00:55,039
campanelli antonio ferono dario fiori

24
00:00:55,039 --> 00:00:57,760
and adrian rodriguez so this belongs to

25
00:00:57,760 --> 00:00:59,760
the area of syrian knowledge snarks

26
00:00:59,760 --> 00:01:01,840
which basically focus on the problem of

27
00:01:01,840 --> 00:01:04,959
showing and that a claim is true without

28
00:01:04,959 --> 00:01:07,280
showing any more than the fact that the

29
00:01:07,280 --> 00:01:08,960
claim is true so we don't filter any

30
00:01:08,960 --> 00:01:12,080
more information so with universal c key

31
00:01:12,080 --> 00:01:14,640
snarks we can have it by having a

32
00:01:14,640 --> 00:01:17,439
one-time setup for any bounded

33
00:01:17,439 --> 00:01:20,080
relation that fits within some bounds

34
00:01:20,080 --> 00:01:22,880
and with updatability we can have a

35
00:01:22,880 --> 00:01:24,960
number of active participants that

36
00:01:24,960 --> 00:01:26,880
collaborate on the randomness and thus

37
00:01:26,880 --> 00:01:29,840
reducing trust requirements so this has

38
00:01:29,840 --> 00:01:32,400
been a very active area of research

39
00:01:32,400 --> 00:01:34,799
recently starting from grow that all

40
00:01:34,799 --> 00:01:38,720
with a quadratic size srs and then some

41
00:01:38,720 --> 00:01:41,680
linear sizes rs among which uh lunar is

42
00:01:41,680 --> 00:01:44,320
located and now if we look at uh some of

43
00:01:44,320 --> 00:01:46,240
our contributions what we give is a

44
00:01:46,240 --> 00:01:48,640
family of efficient universal databall

45
00:01:48,640 --> 00:01:50,960
ziki snarks and

46
00:01:50,960 --> 00:01:53,840
cp snarks versions and also the first to

47
00:01:53,840 --> 00:01:56,240
the best of our knowledge uh compiler to

48
00:01:56,240 --> 00:01:58,560
this type of cp snarks we also give a

49
00:01:58,560 --> 00:02:00,320
more general type of information

50
00:02:00,320 --> 00:02:03,040
theratic object that we call a php and

51
00:02:03,040 --> 00:02:05,040
we make our compilation uh through

52
00:02:05,040 --> 00:02:07,520
efficient blocks the entire cp snarks as

53
00:02:07,520 --> 00:02:09,840
opposed to colonial commitments we give

54
00:02:09,840 --> 00:02:11,200
the notion of somewhat hiding

55
00:02:11,200 --> 00:02:13,120
commitments which means that we are not

56
00:02:13,120 --> 00:02:15,120
using fully hiding commitments in order

57
00:02:15,120 --> 00:02:17,120
to achieve zero knowledge and we also

58
00:02:17,120 --> 00:02:18,879
give a new shorter constraint system

59
00:02:18,879 --> 00:02:20,959
that we call our cs light for which we

60
00:02:20,959 --> 00:02:22,959
build our constructions together with

61
00:02:22,959 --> 00:02:24,239
r1cs

62
00:02:24,239 --> 00:02:27,440
so this table just shows some numbers on

63
00:02:27,440 --> 00:02:30,959
efficiency for constant proof

64
00:02:30,959 --> 00:02:33,280
candidates but feel free to look into

65
00:02:33,280 --> 00:02:35,280
the paper for more details because this

66
00:02:35,280 --> 00:02:37,120
is only for one of the members of this

67
00:02:37,120 --> 00:02:38,239
family

68
00:02:38,239 --> 00:02:40,000
so now if we look at the first type of

69
00:02:40,000 --> 00:02:42,400
the compilation we wanted to generalize

70
00:02:42,400 --> 00:02:44,879
plonks and marlin's approach which are

71
00:02:44,879 --> 00:02:47,599
iop based type of information theratic

72
00:02:47,599 --> 00:02:49,840
object with some limitations in the

73
00:02:49,840 --> 00:02:51,760
sense that some notions of serial

74
00:02:51,760 --> 00:02:54,000
knowledge are were not were lacking in

75
00:02:54,000 --> 00:02:56,400
the abstraction and so and the type of

76
00:02:56,400 --> 00:02:58,400
point evaluations that are reformed in

77
00:02:58,400 --> 00:03:00,879
the very fire side had a vast impact on

78
00:03:00,879 --> 00:03:02,159
proof length

79
00:03:02,159 --> 00:03:04,000
and this first approach was then

80
00:03:04,000 --> 00:03:05,840
compiled with using polynomial

81
00:03:05,840 --> 00:03:08,239
commitments but this implies that uh

82
00:03:08,239 --> 00:03:09,760
some optimizations deviate from

83
00:03:09,760 --> 00:03:11,599
destruction and we wanted to address

84
00:03:11,599 --> 00:03:14,159
this problem by using a modular and

85
00:03:14,159 --> 00:03:17,519
interoperable cp snarks as our blocks to

86
00:03:17,519 --> 00:03:20,319
do this compilation so if we look at now

87
00:03:20,319 --> 00:03:22,560
at what is a php

88
00:03:22,560 --> 00:03:25,040
um so this is very similar and from a

89
00:03:25,040 --> 00:03:27,200
high level to asps and dialed these

90
00:03:27,200 --> 00:03:29,200
essentially you have an offline phase

91
00:03:29,200 --> 00:03:31,360
where the indexer encodes the relation

92
00:03:31,360 --> 00:03:33,680
polynomials and the verifier has oracle

93
00:03:33,680 --> 00:03:35,840
access to them and then in the online

94
00:03:35,840 --> 00:03:37,920
phase program verifier talk with each

95
00:03:37,920 --> 00:03:40,000
other prover sending uh oracle

96
00:03:40,000 --> 00:03:42,319
polynomials verifier answer answering

97
00:03:42,319 --> 00:03:44,480
with some randomness and then at the end

98
00:03:44,480 --> 00:03:46,319
of these rounds uh the verifier performs

99
00:03:46,319 --> 00:03:48,080
some checks uh

100
00:03:48,080 --> 00:03:50,080
of the of these degree bounds and some

101
00:03:50,080 --> 00:03:52,319
polynomial equations

102
00:03:52,319 --> 00:03:55,040
now if we look at the compiler to uh

103
00:03:55,040 --> 00:03:56,159
snarks

104
00:03:56,159 --> 00:03:57,760
we will see this key generation

105
00:03:57,760 --> 00:04:00,159
algorithm that basically corresponds to

106
00:04:00,159 --> 00:04:02,560
this one-time setup for a number of

107
00:04:02,560 --> 00:04:05,120
relations that fit within some bounds

108
00:04:05,120 --> 00:04:07,360
and then the derivation algorithm

109
00:04:07,360 --> 00:04:10,480
specializes in these srs for a specific

110
00:04:10,480 --> 00:04:13,040
relation which basically consists on

111
00:04:13,040 --> 00:04:14,879
committing to the

112
00:04:14,879 --> 00:04:16,798
polynomials that are output by this

113
00:04:16,798 --> 00:04:18,000
indexer

114
00:04:18,000 --> 00:04:20,639
then the prover for each of the rounds

115
00:04:20,639 --> 00:04:23,680
of the php will commit to the

116
00:04:23,680 --> 00:04:26,080
polynomials that are output by this php

117
00:04:26,080 --> 00:04:27,680
prover and

118
00:04:27,680 --> 00:04:32,160
giving a proof of opening of those uh

119
00:04:32,160 --> 00:04:34,880
of those polynomials and then providing

120
00:04:34,880 --> 00:04:37,120
a proof or that the php verifier would

121
00:04:37,120 --> 00:04:38,800
accept and then the verifier simply

122
00:04:38,800 --> 00:04:41,040
takes those proofs and verifies uh the

123
00:04:41,040 --> 00:04:43,440
php side meaning these degree checks and

124
00:04:43,440 --> 00:04:45,759
polynomial equations and proofs as well

125
00:04:45,759 --> 00:04:48,240
and verifies as well uh these uh the

126
00:04:48,240 --> 00:04:49,600
knowledge of the opening of those

127
00:04:49,600 --> 00:04:52,800
polynomials so if you look at here those

128
00:04:52,800 --> 00:04:55,199
types we have a type based commitment

129
00:04:55,199 --> 00:04:58,240
scheme for two types relation types

130
00:04:58,240 --> 00:04:59,840
which are these white ones which

131
00:04:59,840 --> 00:05:02,320
correspond to relations of relation

132
00:05:02,320 --> 00:05:05,199
polynomials and this is non-hiding

133
00:05:05,199 --> 00:05:07,680
commitments this is a deterministic

134
00:05:07,680 --> 00:05:09,680
commitment scheme because this is only

135
00:05:09,680 --> 00:05:11,120
public information so we don't care

136
00:05:11,120 --> 00:05:12,960
about that and we also have something

137
00:05:12,960 --> 00:05:15,199
called somewhat hiding commitments which

138
00:05:15,199 --> 00:05:17,360
are commitments that filter up to one

139
00:05:17,360 --> 00:05:19,680
evaluation at a random point which means

140
00:05:19,680 --> 00:05:21,280
that we are not using fully hiding

141
00:05:21,280 --> 00:05:23,360
commitments in order to achieve zero

142
00:05:23,360 --> 00:05:24,560
knowledge and this is very interesting

143
00:05:24,560 --> 00:05:25,919
for efficiency

144
00:05:25,919 --> 00:05:27,440
so if you look at the main building

145
00:05:27,440 --> 00:05:29,280
blocks that we have for our compiler you

146
00:05:29,280 --> 00:05:33,199
will see then that the cp php is also

147
00:05:33,199 --> 00:05:35,600
formed by two other building blocks one

148
00:05:35,600 --> 00:05:37,759
for polynomial equations and another one

149
00:05:37,759 --> 00:05:39,520
for proving degree bounds of these

150
00:05:39,520 --> 00:05:41,600
committed polynomials and for each of

151
00:05:41,600 --> 00:05:43,759
those we have a number of instantiations

152
00:05:43,759 --> 00:05:44,960
of these blocks with different

153
00:05:44,960 --> 00:05:47,919
properties for instance for the opening

154
00:05:47,919 --> 00:05:50,240
of a polynomial in the pka assumption we

155
00:05:50,240 --> 00:05:52,320
give a novel batting technique for l

156
00:05:52,320 --> 00:05:55,440
commitments using only one group element

157
00:05:55,440 --> 00:05:58,560
for equal equation polynomial equations

158
00:05:58,560 --> 00:06:00,560
uh we have a novel empty proof in the

159
00:06:00,560 --> 00:06:02,800
case that you can express that equation

160
00:06:02,800 --> 00:06:04,960
as a product of two committed

161
00:06:04,960 --> 00:06:07,280
polynomials quadratic equations

162
00:06:07,280 --> 00:06:10,400
and also for the degree uh we use this

163
00:06:10,400 --> 00:06:12,080
as a commitment to the shift of

164
00:06:12,080 --> 00:06:13,840
polynomial and if you can express that

165
00:06:13,840 --> 00:06:15,759
as a quadratic equation again you can

166
00:06:15,759 --> 00:06:18,160
have empty proof as well for the degree

167
00:06:18,160 --> 00:06:20,240
so in this picture i just wanted to show

168
00:06:20,240 --> 00:06:22,080
what are all the possible combinations

169
00:06:22,080 --> 00:06:24,400
of these blocks in order to produce all

170
00:06:24,400 --> 00:06:25,919
of the members of this family that i'm

171
00:06:25,919 --> 00:06:28,560
talking about and just to name a few i'm

172
00:06:28,560 --> 00:06:30,560
giving here three of our constructions

173
00:06:30,560 --> 00:06:33,840
we have lunar light for this r1cs light

174
00:06:33,840 --> 00:06:36,479
constraint system our lunar one cs fast

175
00:06:36,479 --> 00:06:39,120
and short and lunar 1cs short vk for

176
00:06:39,120 --> 00:06:41,759
normal r1cs so plan if you want more

177
00:06:41,759 --> 00:06:43,919
details feel free to watch the video or

178
00:06:43,919 --> 00:06:46,319
refer to the paper so if you have any

179
00:06:46,319 --> 00:06:48,319
more questions i'll be happy to answer

180
00:06:48,319 --> 00:06:50,720
thank you

181
00:06:50,880 --> 00:06:53,440
thanks a lot tonight for this nice talk

182
00:06:53,440 --> 00:06:55,520
i forgot to mention so if you feel

183
00:06:55,520 --> 00:06:57,039
comfortable with just a mewtwo if you

184
00:06:57,039 --> 00:06:58,800
have any questions

185
00:06:58,800 --> 00:07:01,680
so there i don't see anyone on zulip or

186
00:07:01,680 --> 00:07:04,479
the zoo chat

187
00:07:05,919 --> 00:07:07,440
so

188
00:07:07,440 --> 00:07:10,719
anyone who has a question

189
00:07:15,360 --> 00:07:17,039
yeah i'm not receiving

190
00:07:17,039 --> 00:07:19,360
questions either i think

191
00:07:19,360 --> 00:07:21,039
okay so so anyway

192
00:07:21,039 --> 00:07:23,360
so i have a question okay

193
00:07:23,360 --> 00:07:26,080
so do you think that this notion of of

194
00:07:26,080 --> 00:07:28,800
somewhat hiding commitments um kind of

195
00:07:28,800 --> 00:07:31,599
like going to be more generic thing that

196
00:07:31,599 --> 00:07:34,160
you can use in different application

197
00:07:34,160 --> 00:07:36,639
scenarios or is this very specific to

198
00:07:36,639 --> 00:07:38,880
these types of

199
00:07:38,880 --> 00:07:40,479
systems

200
00:07:40,479 --> 00:07:43,280
i would say we can apply that to other

201
00:07:43,280 --> 00:07:45,680
systems as well as long as all of the

202
00:07:45,680 --> 00:07:47,919
blocks that are involved

203
00:07:47,919 --> 00:07:51,599
oops i hear some noise um

204
00:07:51,599 --> 00:07:53,919
have some features so

205
00:07:53,919 --> 00:07:56,160
the the summer hiding commitments is not

206
00:07:56,160 --> 00:07:57,919
like the only requirement that makes all

207
00:07:57,919 --> 00:08:00,479
of it work because we also have other

208
00:08:00,479 --> 00:08:03,520
notions of about and zero knowledge and

209
00:08:03,520 --> 00:08:04,879
leaky

210
00:08:04,879 --> 00:08:08,160
cb snarks so all together

211
00:08:08,160 --> 00:08:10,160
with all those ingredients we can have

212
00:08:10,160 --> 00:08:13,120
fully zero knowledge snarks so if you

213
00:08:13,120 --> 00:08:15,599
remove some of these pieces then perhaps

214
00:08:15,599 --> 00:08:17,919
you need other type of

215
00:08:17,919 --> 00:08:20,319
assumptions on those commitments but as

216
00:08:20,319 --> 00:08:21,280
long as

217
00:08:21,280 --> 00:08:23,360
you can have the equivalent notions for

218
00:08:23,360 --> 00:08:25,599
other constructions i i guess you can

219
00:08:25,599 --> 00:08:29,440
also use them for others

220
00:08:29,680 --> 00:08:30,879
okay thanks

221
00:08:30,879 --> 00:08:33,440
no problem

222
00:08:38,799 --> 00:08:41,039
okay

223
00:08:41,039 --> 00:08:43,039
move on to the next talk so

224
00:08:43,039 --> 00:08:46,560
the next talk is uh gentry week is tied

225
00:08:46,560 --> 00:08:49,760
a forty-five non-adopted return snark by

226
00:08:49,760 --> 00:08:53,519
helga lipmark and kathy rinna pavlik and

227
00:08:53,519 --> 00:08:57,200
i believe helga will give a talk

228
00:09:07,200 --> 00:09:11,279
i i can't hear you with a mute

229
00:09:12,560 --> 00:09:14,640
yeah can you hear me now

230
00:09:14,640 --> 00:09:16,080
yes

231
00:09:16,080 --> 00:09:18,080
and you can see my slides

232
00:09:18,080 --> 00:09:19,920
so very good thank you

233
00:09:19,920 --> 00:09:20,959
um

234
00:09:20,959 --> 00:09:22,880
yeah this paper is called gentry weeks

235
00:09:22,880 --> 00:09:24,959
is tight a fancy fabulon that actually

236
00:09:24,959 --> 00:09:26,480
sounds large

237
00:09:26,480 --> 00:09:28,560
it's quartered with katarina public and

238
00:09:28,560 --> 00:09:32,080
we both both work at similar uab norway

239
00:09:32,080 --> 00:09:34,160
and uh

240
00:09:34,160 --> 00:09:35,839
like when i was recording i was quite

241
00:09:35,839 --> 00:09:38,640
sick i'm i'm still a bit of like

242
00:09:38,640 --> 00:09:40,959
like without voice but i hope it will be

243
00:09:40,959 --> 00:09:42,560
okay

244
00:09:42,560 --> 00:09:43,680
um

245
00:09:43,680 --> 00:09:44,720
so

246
00:09:44,720 --> 00:09:47,200
let me try to first

247
00:09:47,200 --> 00:09:50,720
talk about uh our model so anna's

248
00:09:50,720 --> 00:09:53,120
already introduced um

249
00:09:53,120 --> 00:09:54,320
knowledge

250
00:09:54,320 --> 00:09:57,360
so but i i want to be a bit more precise

251
00:09:57,360 --> 00:09:59,600
about the model that we are working in

252
00:09:59,600 --> 00:10:04,320
so uh the more most standard

253
00:10:04,959 --> 00:10:07,040
model in the case of non-interactive

254
00:10:07,040 --> 00:10:10,160
zero noise proofs is in the crs

255
00:10:10,160 --> 00:10:13,920
well it is in the crs model

256
00:10:14,480 --> 00:10:16,240
the party

257
00:10:16,240 --> 00:10:17,360
who

258
00:10:17,360 --> 00:10:19,920
anthenia have approval and verifier so

259
00:10:19,920 --> 00:10:21,839
then the trusted third party is

260
00:10:21,839 --> 00:10:24,240
generating a crs

261
00:10:24,240 --> 00:10:26,160
sending it to both approver and the

262
00:10:26,160 --> 00:10:27,920
verifier

263
00:10:27,920 --> 00:10:30,959
and after after seeing the crs the

264
00:10:30,959 --> 00:10:32,640
prover can choose

265
00:10:32,640 --> 00:10:34,480
some input

266
00:10:34,480 --> 00:10:36,399
and the private witness

267
00:10:36,399 --> 00:10:39,279
send the input over to the verifier

268
00:10:39,279 --> 00:10:41,519
and then accompany it with a zero

269
00:10:41,519 --> 00:10:43,040
knowledge proof

270
00:10:43,040 --> 00:10:46,959
that this input belongs to some language

271
00:10:46,959 --> 00:10:48,079
and

272
00:10:48,079 --> 00:10:50,880
this moniker snark means succinct

273
00:10:50,880 --> 00:10:54,720
non-interactive arguments

274
00:10:54,959 --> 00:10:57,200
and the first words succinct basically

275
00:10:57,200 --> 00:11:01,320
means the proof has to be succinct

276
00:11:01,519 --> 00:11:04,720
so this is the common case

277
00:11:04,720 --> 00:11:07,279
or so-called adaptive case where the

278
00:11:07,279 --> 00:11:11,040
input can depend on the crs

279
00:11:11,200 --> 00:11:12,480
and

280
00:11:12,480 --> 00:11:15,040
just once more to give a bit of

281
00:11:15,040 --> 00:11:17,279
motivation why we are working on this

282
00:11:17,279 --> 00:11:18,320
program

283
00:11:18,320 --> 00:11:19,440
is that

284
00:11:19,440 --> 00:11:21,200
there's a lot of money in the area of

285
00:11:21,200 --> 00:11:23,519
snarks

286
00:11:23,519 --> 00:11:25,519
real money

287
00:11:25,519 --> 00:11:27,040
there's hundreds of papers in top

288
00:11:27,040 --> 00:11:29,200
conferences used prominently in their

289
00:11:29,200 --> 00:11:30,480
real life

290
00:11:30,480 --> 00:11:32,880
but then you if you look at any snark

291
00:11:32,880 --> 00:11:34,800
paper written ever

292
00:11:34,800 --> 00:11:36,959
it has the following claim our

293
00:11:36,959 --> 00:11:39,279
construction is based on non-falsif

294
00:11:39,279 --> 00:11:41,519
ratifiable assumptions due to the

295
00:11:41,519 --> 00:11:45,519
impossibility result of gender and weeks

296
00:11:45,519 --> 00:11:46,480
and

297
00:11:46,480 --> 00:11:49,519
this aim is something we are interested

298
00:11:49,519 --> 00:11:51,120
in

299
00:11:51,120 --> 00:11:55,200
so what does gentry week say is that

300
00:11:55,200 --> 00:11:56,800
there are basically four different

301
00:11:56,800 --> 00:11:59,360
properties that you cannot achieve at

302
00:11:59,360 --> 00:12:01,600
the same time in non-interactive zero

303
00:12:01,600 --> 00:12:04,480
knowledge so you cannot achieve adaptive

304
00:12:04,480 --> 00:12:05,839
soundness

305
00:12:05,839 --> 00:12:08,560
succinct arguments

306
00:12:08,560 --> 00:12:11,600
you cannot handle hard languages

307
00:12:11,600 --> 00:12:13,680
and you cannot have it under falsifiable

308
00:12:13,680 --> 00:12:15,120
assumptions

309
00:12:15,120 --> 00:12:17,200
there are actually several impossibility

310
00:12:17,200 --> 00:12:18,399
results

311
00:12:18,399 --> 00:12:20,720
results in this area but gentry which is

312
00:12:20,720 --> 00:12:22,480
the most famous

313
00:12:22,480 --> 00:12:26,079
and then now when you look at this uh

314
00:12:26,079 --> 00:12:27,839
impossibility result the question is

315
00:12:27,839 --> 00:12:30,000
that you we cannot get all four at the

316
00:12:30,000 --> 00:12:33,839
same time but can we get any three

317
00:12:33,839 --> 00:12:36,480
and in most of the combinations this was

318
00:12:36,480 --> 00:12:39,519
well known before for example if you

319
00:12:39,519 --> 00:12:41,839
don't care about succinctness then this

320
00:12:41,839 --> 00:12:44,320
has been known for around 30 years at

321
00:12:44,320 --> 00:12:47,200
least by feiger lapid and swamiji

322
00:12:47,200 --> 00:12:49,200
if you don't care about hard languages

323
00:12:49,200 --> 00:12:51,440
then you can just construct

324
00:12:51,440 --> 00:12:52,959
something for

325
00:12:52,959 --> 00:12:55,519
for the complexity class p

326
00:12:55,519 --> 00:12:58,160
and for this we have delegation schemes

327
00:12:58,160 --> 00:13:00,160
and if you don't care about classified

328
00:13:00,160 --> 00:13:03,920
assumptions then we have snarks

329
00:13:03,920 --> 00:13:06,639
so all paper fills the cut

330
00:13:06,639 --> 00:13:09,360
we we show that we can get other three

331
00:13:09,360 --> 00:13:11,600
properties if we don't care about

332
00:13:11,600 --> 00:13:14,639
adaptive sounds

333
00:13:15,360 --> 00:13:16,320
so

334
00:13:16,320 --> 00:13:18,639
just to explain why any of those

335
00:13:18,639 --> 00:13:21,120
properties is needed to such sickness is

336
00:13:21,120 --> 00:13:23,279
basically efficiency property saying

337
00:13:23,279 --> 00:13:25,279
that the communication is small and the

338
00:13:25,279 --> 00:13:28,000
verification is efficient

339
00:13:28,000 --> 00:13:30,279
hard languages that's an

340
00:13:30,279 --> 00:13:32,959
expressivity property basically means

341
00:13:32,959 --> 00:13:35,760
that you can handle all np languages do

342
00:13:35,760 --> 00:13:39,279
something that is actually non-trivial

343
00:13:39,279 --> 00:13:42,240
adaptive soundness

344
00:13:42,240 --> 00:13:44,800
is a security property so it means it's

345
00:13:44,800 --> 00:13:47,199
a soundness holds even if the input can

346
00:13:47,199 --> 00:13:50,319
depend on the crs

347
00:13:51,120 --> 00:13:53,120
and now

348
00:13:53,120 --> 00:13:55,279
if you have

349
00:13:55,279 --> 00:13:58,000
so on top of it this stories

350
00:13:58,000 --> 00:13:59,600
you get you have like this fourth

351
00:13:59,600 --> 00:14:01,040
property which is specifiable

352
00:14:01,040 --> 00:14:03,279
assumptions

353
00:14:03,279 --> 00:14:04,000
and

354
00:14:04,000 --> 00:14:06,399
which is basically you can efficiently

355
00:14:06,399 --> 00:14:09,199
check if an assumption was broken or not

356
00:14:09,199 --> 00:14:10,320
and

357
00:14:10,320 --> 00:14:13,199
in practice it seems that people really

358
00:14:13,199 --> 00:14:15,279
care about the first three assumptions

359
00:14:15,279 --> 00:14:17,839
but not not about the last assumptions

360
00:14:17,839 --> 00:14:21,440
but the other or last property i would

361
00:14:21,440 --> 00:14:23,199
also argue that the last property is

362
00:14:23,199 --> 00:14:25,600
very important because if you are basing

363
00:14:25,600 --> 00:14:28,240
your system on very complicated how to

364
00:14:28,240 --> 00:14:31,040
believe assumptions then your scheme

365
00:14:31,040 --> 00:14:33,680
might be broken at some moment

366
00:14:33,680 --> 00:14:35,360
but also i think it's just a

367
00:14:35,360 --> 00:14:36,959
theoretically interesting question to

368
00:14:36,959 --> 00:14:38,880
see whether actually this impossibility

369
00:14:38,880 --> 00:14:41,040
result is tight

370
00:14:41,040 --> 00:14:43,360
so yes the first three properties are

371
00:14:43,360 --> 00:14:45,440
needed to get this two billion for your

372
00:14:45,440 --> 00:14:48,000
scheme and the fourth property is needed

373
00:14:48,000 --> 00:14:51,120
to to kind of get an assurance that your

374
00:14:51,120 --> 00:14:52,079
scheme

375
00:14:52,079 --> 00:14:55,680
is still there in five years

376
00:14:56,000 --> 00:14:56,839
so

377
00:14:56,839 --> 00:15:00,160
uh what is this non-adaptive sound

378
00:15:00,160 --> 00:15:02,959
so in the case of non-adaptive soundness

379
00:15:02,959 --> 00:15:05,199
you kind of assume

380
00:15:05,199 --> 00:15:07,600
that the input does not depend on the

381
00:15:07,600 --> 00:15:08,800
crs

382
00:15:08,800 --> 00:15:09,680
so

383
00:15:09,680 --> 00:15:11,920
in the security game you can model it so

384
00:15:11,920 --> 00:15:13,760
that you first

385
00:15:13,760 --> 00:15:15,600
let the prover to choose the input and

386
00:15:15,600 --> 00:15:17,760
the witness and then

387
00:15:17,760 --> 00:15:20,000
generate the crs

388
00:15:20,000 --> 00:15:22,560
you don't have to do it that way

389
00:15:22,560 --> 00:15:25,199
it doesn't have to be like a temporal

390
00:15:25,199 --> 00:15:27,920
dependency you just have to assume

391
00:15:27,920 --> 00:15:30,079
that the input does not depend on the

392
00:15:30,079 --> 00:15:32,639
crs if it can depend on the crs you

393
00:15:32,639 --> 00:15:35,600
don't have a security guarantee

394
00:15:35,600 --> 00:15:37,839
and you still have a succinct proof

395
00:15:37,839 --> 00:15:40,639
and this is non-adaptive soundness

396
00:15:40,639 --> 00:15:44,079
so what are our results first of all

397
00:15:44,079 --> 00:15:46,800
like i said we breached this cap we

398
00:15:46,800 --> 00:15:48,959
propose the first

399
00:15:48,959 --> 00:15:51,519
falsifiable non-adaptively sound snark

400
00:15:51,519 --> 00:15:54,160
for np

401
00:15:54,160 --> 00:15:58,240
it is succinct so uh while

402
00:15:58,240 --> 00:16:00,000
it is a theoretically interesting

403
00:16:00,000 --> 00:16:02,160
question i just want to emphasize that

404
00:16:02,160 --> 00:16:04,000
we actually get something that is fairly

405
00:16:04,000 --> 00:16:07,040
practical so the length of the

406
00:16:07,040 --> 00:16:09,519
argument is nine elements from g1 and

407
00:16:09,519 --> 00:16:12,240
five from g2 we work in parentheses

408
00:16:12,240 --> 00:16:14,000
setting

409
00:16:14,000 --> 00:16:16,079
um and this closes the cup in century

410
00:16:16,079 --> 00:16:19,920
weeks so then the paper dwells into

411
00:16:19,920 --> 00:16:22,399
many other additional properties

412
00:16:22,399 --> 00:16:24,639
so for example we also showed that this

413
00:16:24,639 --> 00:16:26,399
news north

414
00:16:26,399 --> 00:16:28,800
in addition of being non-adaptively

415
00:16:28,800 --> 00:16:31,920
sound under falsifiable assumptions it's

416
00:16:31,920 --> 00:16:34,480
also non-adaptable knowledge sound in

417
00:16:34,480 --> 00:16:36,720
the algebra group model

418
00:16:36,720 --> 00:16:39,279
and its subversion zero knowledge under

419
00:16:39,279 --> 00:16:41,519
a non-falsifiable assumption

420
00:16:41,519 --> 00:16:43,680
and in both of those cases

421
00:16:43,680 --> 00:16:45,680
it's kind of unknown that you really

422
00:16:45,680 --> 00:16:48,399
need a non-transformative assumption

423
00:16:48,399 --> 00:16:50,959
there's a later talk in the sec section

424
00:16:50,959 --> 00:16:54,639
about vekovs by artna tobias etc where

425
00:16:54,639 --> 00:16:57,040
we try to actually

426
00:16:57,040 --> 00:17:00,000
uh work on this

427
00:17:00,160 --> 00:17:01,279
and the

428
00:17:01,279 --> 00:17:03,600
paper has two major building blocks one

429
00:17:03,600 --> 00:17:06,240
of them is so-called bilateral subspace

430
00:17:06,240 --> 00:17:08,319
cross-adaptive music

431
00:17:08,319 --> 00:17:11,839
and another one is functional somewhat

432
00:17:11,839 --> 00:17:13,919
uh statistically binding commitment

433
00:17:13,919 --> 00:17:15,439
scheme

434
00:17:15,439 --> 00:17:18,079
and in addition we also get new results

435
00:17:18,079 --> 00:17:19,439
about the

436
00:17:19,439 --> 00:17:22,400
bilateral subspace garnishing

437
00:17:22,400 --> 00:17:23,760
and just

438
00:17:23,760 --> 00:17:27,039
one more slide or sorry two slides so

439
00:17:27,039 --> 00:17:29,760
one of them is like more conceptions how

440
00:17:29,760 --> 00:17:31,679
we get what we get

441
00:17:31,679 --> 00:17:34,160
is that we don't have a real extraction

442
00:17:34,160 --> 00:17:36,960
in the scheme we have local extraction

443
00:17:36,960 --> 00:17:40,320
so basically we left adversary do guess

444
00:17:40,320 --> 00:17:42,799
which sorry not the adversary but we let

445
00:17:42,799 --> 00:17:45,120
the reduction of guess which which gate

446
00:17:45,120 --> 00:17:47,520
was miscomputed by the adversary

447
00:17:47,520 --> 00:17:50,480
we were bought if the guest was wrong

448
00:17:50,480 --> 00:17:53,200
and then we prepared this trs so that

449
00:17:53,200 --> 00:17:55,760
one can efficiently extract a succinct

450
00:17:55,760 --> 00:17:57,120
local witness

451
00:17:57,120 --> 00:17:59,280
showing that this concrete gate was

452
00:17:59,280 --> 00:18:01,120
miscomputed

453
00:18:01,120 --> 00:18:03,520
and then we reduced to soundness of

454
00:18:03,520 --> 00:18:05,760
ultraviolet assumption that uses only

455
00:18:05,760 --> 00:18:08,559
this succinct local weakness

456
00:18:08,559 --> 00:18:11,280
and then there are two previous papers

457
00:18:11,280 --> 00:18:13,600
one of them is by daza

458
00:18:13,600 --> 00:18:17,520
pkc 2019 and another one is by fawzi

459
00:18:17,520 --> 00:18:18,960
myself

460
00:18:18,960 --> 00:18:20,039
uh

461
00:18:20,039 --> 00:18:23,840
vintado and janoscene from this year

462
00:18:23,840 --> 00:18:27,200
where we use local extraction from from

463
00:18:27,200 --> 00:18:29,520
non-success commitments so in those

464
00:18:29,520 --> 00:18:31,039
papers we

465
00:18:31,039 --> 00:18:33,679
we got adaptive soundness but we had a

466
00:18:33,679 --> 00:18:35,600
long commitment

467
00:18:35,600 --> 00:18:37,520
but we still worked under quantifiable

468
00:18:37,520 --> 00:18:38,720
assumptions

469
00:18:38,720 --> 00:18:40,960
and here we turn it around

470
00:18:40,960 --> 00:18:42,880
we get non-adaptive soundness but we

471
00:18:42,880 --> 00:18:46,160
have succinct commitment

472
00:18:46,160 --> 00:18:47,360
um

473
00:18:47,360 --> 00:18:48,559
so

474
00:18:48,559 --> 00:18:51,280
i think that that is not really the last

475
00:18:51,280 --> 00:18:53,200
last line so i'm trying to explain like

476
00:18:53,200 --> 00:18:55,440
how this sounds proof works

477
00:18:55,440 --> 00:18:57,360
so basically

478
00:18:57,360 --> 00:18:59,440
it's written down in a linear way in the

479
00:18:59,440 --> 00:19:01,600
actual paper you have you have security

480
00:19:01,600 --> 00:19:04,480
games but the idea is that you you have

481
00:19:04,480 --> 00:19:06,480
adversary to commit to the weakness by

482
00:19:06,480 --> 00:19:08,160
using a succinct

483
00:19:08,160 --> 00:19:11,520
this functional ssp commitment

484
00:19:11,520 --> 00:19:13,120
then you guess the gate with that

485
00:19:13,120 --> 00:19:15,200
battery sheet

486
00:19:15,200 --> 00:19:17,840
then you force a cursor to fix the input

487
00:19:17,840 --> 00:19:19,840
and you can do it because you are in

488
00:19:19,840 --> 00:19:21,679
non-adaptive case

489
00:19:21,679 --> 00:19:24,240
and then after that you modified the crs

490
00:19:24,240 --> 00:19:26,080
to allow local extraction of this class

491
00:19:26,080 --> 00:19:28,160
is concrete gate

492
00:19:28,160 --> 00:19:30,000
then you obtain the argument from

493
00:19:30,000 --> 00:19:32,240
adversary

494
00:19:32,240 --> 00:19:34,640
because input was fixed this miscomputed

495
00:19:34,640 --> 00:19:36,799
gate number did not change

496
00:19:36,799 --> 00:19:38,880
then you extract local witness from the

497
00:19:38,880 --> 00:19:41,200
commitment your rejective guess was

498
00:19:41,200 --> 00:19:43,200
wrong this means that you have a

499
00:19:43,200 --> 00:19:46,799
security loss of like the number of case

500
00:19:46,799 --> 00:19:48,240
times

501
00:19:48,240 --> 00:19:51,039
and since we did not reject

502
00:19:51,039 --> 00:19:53,280
and we have known that after soundness

503
00:19:53,280 --> 00:19:55,440
is adversary input does not depend on

504
00:19:55,440 --> 00:19:56,799
the crs

505
00:19:56,799 --> 00:19:59,360
hence the gateway adversary cheat it

506
00:19:59,360 --> 00:20:01,520
does not depend on the crs it's still

507
00:20:01,520 --> 00:20:04,000
the same gate we have a local witness

508
00:20:04,000 --> 00:20:06,559
that this gate was miscomputed and we

509
00:20:06,559 --> 00:20:08,559
use it in a reduction to a fancy

510
00:20:08,559 --> 00:20:10,720
variable assumption and first we get the

511
00:20:10,720 --> 00:20:12,960
non-adaptive sounders

512
00:20:12,960 --> 00:20:14,000
and

513
00:20:14,000 --> 00:20:16,400
again to not contradict central week's

514
00:20:16,400 --> 00:20:18,640
non-adaptivities needed while in those

515
00:20:18,640 --> 00:20:20,480
two previous papers

516
00:20:20,480 --> 00:20:22,559
they got adaptive soundness but they

517
00:20:22,559 --> 00:20:24,880
have nonsense commitment

518
00:20:24,880 --> 00:20:28,720
so thank you all and

519
00:20:29,760 --> 00:20:30,480
i

520
00:20:30,480 --> 00:20:32,320
don't know if you have any questions

521
00:20:32,320 --> 00:20:34,960
thank you thank you

522
00:20:34,960 --> 00:20:38,240
so do you have any question

523
00:20:38,640 --> 00:20:42,240
i don't see any question in the chat

524
00:20:42,240 --> 00:20:44,640
so so i have one quick question

525
00:20:44,640 --> 00:20:48,320
so uh at first i know the gently fixed

526
00:20:48,320 --> 00:20:51,200
uh impossibility result considers that

527
00:20:51,200 --> 00:20:52,159
food

528
00:20:52,159 --> 00:20:53,919
fear generation

529
00:20:53,919 --> 00:20:57,440
efficiency is independent of their

530
00:20:57,440 --> 00:21:00,440
statements

531
00:21:07,600 --> 00:21:10,080
so so as far as i know the gender fix

532
00:21:10,080 --> 00:21:12,799
continues now with uh serious generation

533
00:21:12,799 --> 00:21:16,000
efficiency independent of the statement

534
00:21:16,000 --> 00:21:18,320
length and weakness length and i my

535
00:21:18,320 --> 00:21:20,640
question is if your contraction

536
00:21:20,640 --> 00:21:23,440
satisfies this property

537
00:21:23,440 --> 00:21:24,480
uh

538
00:21:24,480 --> 00:21:26,880
no we

539
00:21:26,880 --> 00:21:28,720
we actually have

540
00:21:28,720 --> 00:21:30,960
a long crs

541
00:21:30,960 --> 00:21:34,880
and the crs depends on their language so

542
00:21:34,880 --> 00:21:37,679
uh not well yeah it depends on the

543
00:21:37,679 --> 00:21:40,080
language so it's for cert but the crs

544
00:21:40,080 --> 00:21:42,320
depends on the circuit i think i think

545
00:21:42,320 --> 00:21:44,159
it's a very interesting question to see

546
00:21:44,159 --> 00:21:45,679
if we can actually get the shorter

547
00:21:45,679 --> 00:21:47,120
series

548
00:21:47,120 --> 00:21:49,600
yeah so in that case we expect that it

549
00:21:49,600 --> 00:21:52,000
may be possible to extend gentrific

550
00:21:52,000 --> 00:21:53,760
impossibility results to know adaptive

551
00:21:53,760 --> 00:21:54,880
soundness

552
00:21:54,880 --> 00:21:57,760
if we require fact independent uh

553
00:21:57,760 --> 00:22:00,640
theater generation

554
00:22:00,880 --> 00:22:06,080
it might be i i don't know um

555
00:22:06,559 --> 00:22:07,600
so

556
00:22:07,600 --> 00:22:09,600
like i didn't mention during the talk

557
00:22:09,600 --> 00:22:11,520
but the construction definitely has some

558
00:22:11,520 --> 00:22:14,640
limitations so the crs is long and the

559
00:22:14,640 --> 00:22:18,159
crs it depends on the input

560
00:22:18,159 --> 00:22:20,880
the problem is that if you look at the

561
00:22:20,880 --> 00:22:23,440
current constructions of snarks

562
00:22:23,440 --> 00:22:25,600
where the crs does not depend on the

563
00:22:25,600 --> 00:22:28,799
inputs of universal snarks they actually

564
00:22:28,799 --> 00:22:30,320
all

565
00:22:30,320 --> 00:22:33,200
all efficient ones sorry all efficient

566
00:22:33,200 --> 00:22:34,480
constructions

567
00:22:34,480 --> 00:22:37,039
work into random oracle models

568
00:22:37,039 --> 00:22:38,080
and

569
00:22:38,080 --> 00:22:40,000
and getting rid of the random oracle

570
00:22:40,000 --> 00:22:41,039
model

571
00:22:41,039 --> 00:22:42,000
even

572
00:22:42,000 --> 00:22:44,960
just like let's say have a co efficient

573
00:22:44,960 --> 00:22:46,799
construction of universal snark where

574
00:22:46,799 --> 00:22:48,480
you can rely on the knowledge

575
00:22:48,480 --> 00:22:50,240
assumptions but you don't have random

576
00:22:50,240 --> 00:22:53,200
oracle model i think even this is

577
00:22:53,200 --> 00:22:55,520
an open question there are

578
00:22:55,520 --> 00:22:58,240
somewhat non-official constructions

579
00:22:58,240 --> 00:23:00,000
but

580
00:23:00,000 --> 00:23:01,600
at least this is my knowledge maybe

581
00:23:01,600 --> 00:23:04,480
there's some recent paper that does it

582
00:23:04,480 --> 00:23:06,400
i say thank you so much

583
00:23:06,400 --> 00:23:07,360
so

584
00:23:07,360 --> 00:23:09,360
thank you hagar uh we'll move on to the

585
00:23:09,360 --> 00:23:11,840
next talk

586
00:23:13,039 --> 00:23:17,919
yes uh helga i had one more question so

587
00:23:17,919 --> 00:23:21,240
is it possible

588
00:23:22,799 --> 00:23:24,559
so i i mean i mean

589
00:23:24,559 --> 00:23:26,159
would non-adaptive sound this be a

590
00:23:26,159 --> 00:23:27,760
notion that's reasonable for for the

591
00:23:27,760 --> 00:23:30,000
applications that you did you used as a

592
00:23:30,000 --> 00:23:32,640
motivation

593
00:23:32,799 --> 00:23:33,600
uh

594
00:23:33,600 --> 00:23:35,360
well

595
00:23:35,360 --> 00:23:37,440
we really don't have uh

596
00:23:37,440 --> 00:23:40,080
have an application in mind

597
00:23:40,080 --> 00:23:42,480
so to be completely honest we just

598
00:23:42,480 --> 00:23:44,000
started to

599
00:23:44,000 --> 00:23:46,559
tinker with previous constructions see

600
00:23:46,559 --> 00:23:48,559
to see whether we can improve on it and

601
00:23:48,559 --> 00:23:51,120
that sometimes

602
00:23:52,320 --> 00:23:53,600
that we can get

603
00:23:53,600 --> 00:23:55,919
this trade off

604
00:23:55,919 --> 00:23:57,279
but

605
00:23:57,279 --> 00:23:58,880
it's a very good question because

606
00:23:58,880 --> 00:24:00,880
basically like on the slide i was

607
00:24:00,880 --> 00:24:03,600
showing that the input has to be chosen

608
00:24:03,600 --> 00:24:05,919
before crs was generated but this is

609
00:24:05,919 --> 00:24:07,840
actually not the case

610
00:24:07,840 --> 00:24:11,280
so if i think if you have like uh

611
00:24:11,280 --> 00:24:12,799
[Music]

612
00:24:12,799 --> 00:24:16,840
some kind of a restricted application

613
00:24:16,840 --> 00:24:19,919
where cheating maybe just doesn't make

614
00:24:19,919 --> 00:24:22,880
sense if your input depends on the crs

615
00:24:22,880 --> 00:24:25,520
then i think it's fine but i'm i'm not

616
00:24:25,520 --> 00:24:27,840
really sure what would that application

617
00:24:27,840 --> 00:24:28,880
be

618
00:24:28,880 --> 00:24:31,760
i'm quite interested in the question so

619
00:24:31,760 --> 00:24:36,320
we can talk later yeah okay thanks

620
00:24:37,279 --> 00:24:39,039
okay then let's move on to the next

621
00:24:39,039 --> 00:24:42,880
paper but as far as i see there is no

622
00:24:42,880 --> 00:24:44,320
author

623
00:24:44,320 --> 00:24:46,720
online right

624
00:24:46,720 --> 00:24:50,799
so is there any one for the third paper

625
00:24:54,799 --> 00:24:56,400
so otherwise i would suggest that we

626
00:24:56,400 --> 00:24:58,720
postpone this paper and then see later

627
00:24:58,720 --> 00:25:00,640
if someone is here

628
00:25:00,640 --> 00:25:04,159
and just move on to the next one

629
00:25:06,559 --> 00:25:08,559
here yeah i guess

630
00:25:08,559 --> 00:25:10,480
yes

631
00:25:10,480 --> 00:25:13,360
and then the next dog is snarky ceremony

632
00:25:13,360 --> 00:25:16,159
by gianno sim mark

633
00:25:16,159 --> 00:25:17,679
ko base

634
00:25:17,679 --> 00:25:18,640
mike

635
00:25:18,640 --> 00:25:21,440
varkov mary muller and gianno we give a

636
00:25:21,440 --> 00:25:23,039
talk

637
00:25:23,039 --> 00:25:23,919
yeah

638
00:25:23,919 --> 00:25:25,679
i hope you see my screen

639
00:25:25,679 --> 00:25:27,279
yes

640
00:25:27,279 --> 00:25:28,720
all right great

641
00:25:28,720 --> 00:25:32,000
so uh thank you for the introduction

642
00:25:32,000 --> 00:25:32,390
um

643
00:25:32,390 --> 00:25:35,630
[Music]

644
00:25:36,240 --> 00:25:38,240
so uh you already heard quite a bit

645
00:25:38,240 --> 00:25:40,320
about ck snarks so these are

646
00:25:40,320 --> 00:25:42,480
non-interactive arguments with

647
00:25:42,480 --> 00:25:44,640
knowledge soundness

648
00:25:44,640 --> 00:25:48,640
zero knowledge and succinctness

649
00:25:49,039 --> 00:25:51,200
and one of the most efficient

650
00:25:51,200 --> 00:25:53,679
ck snark was proposed by

651
00:25:53,679 --> 00:25:56,240
jan scott in 2016

652
00:25:56,240 --> 00:25:58,320
and it has a lot of nice properties it

653
00:25:58,320 --> 00:26:00,000
has the smallest proof

654
00:26:00,000 --> 00:26:02,159
the fastest verifier

655
00:26:02,159 --> 00:26:05,120
it's very widely deployed in practice

656
00:26:05,120 --> 00:26:07,679
and it has lots of other nice properties

657
00:26:07,679 --> 00:26:10,799
like proof aggregation and weak form of

658
00:26:10,799 --> 00:26:14,400
simulation extractability and so on

659
00:26:14,400 --> 00:26:15,279
um

660
00:26:15,279 --> 00:26:16,799
and it also works in this common

661
00:26:16,799 --> 00:26:18,880
reference string model that you just saw

662
00:26:18,880 --> 00:26:21,039
so in at the center of it you have this

663
00:26:21,039 --> 00:26:23,039
trusted party you have approver and

664
00:26:23,039 --> 00:26:25,600
verifier brewer knows the statement and

665
00:26:25,600 --> 00:26:27,600
the witness and verifier knows just the

666
00:26:27,600 --> 00:26:28,720
statement

667
00:26:28,720 --> 00:26:31,120
and then this trusted party will give

668
00:26:31,120 --> 00:26:33,440
a common reference string which is a bit

669
00:26:33,440 --> 00:26:36,480
string from a very specific distribution

670
00:26:36,480 --> 00:26:38,400
and do the program verifier and the

671
00:26:38,400 --> 00:26:40,480
improver can use this to construct an

672
00:26:40,480 --> 00:26:42,480
argument

673
00:26:42,480 --> 00:26:44,799
and verify we'll either accept or reject

674
00:26:44,799 --> 00:26:46,960
this

675
00:26:46,960 --> 00:26:50,080
uh however this trusted party also holds

676
00:26:50,080 --> 00:26:52,799
a secret trap door which is basically a

677
00:26:52,799 --> 00:26:55,840
key that if you hold it you can easily

678
00:26:55,840 --> 00:26:57,279
cheat in the brook

679
00:26:57,279 --> 00:26:59,520
so if this trusted party is actually a

680
00:26:59,520 --> 00:27:01,679
bit malicious then the whole system

681
00:27:01,679 --> 00:27:03,919
collapses

682
00:27:03,919 --> 00:27:05,600
so in response to that

683
00:27:05,600 --> 00:27:07,919
there was a proposal for updatable

684
00:27:07,919 --> 00:27:09,679
reference string

685
00:27:09,679 --> 00:27:11,440
so in this model you have a bunch of

686
00:27:11,440 --> 00:27:12,720
parties

687
00:27:12,720 --> 00:27:17,679
and they update the crs one by one

688
00:27:17,840 --> 00:27:18,640
and

689
00:27:18,640 --> 00:27:21,919
the final crs is now

690
00:27:21,919 --> 00:27:23,200
secure

691
00:27:23,200 --> 00:27:25,360
or in other words the secret key has not

692
00:27:25,360 --> 00:27:27,440
been leaked if at least one of the

693
00:27:27,440 --> 00:27:30,399
parties is honest

694
00:27:31,120 --> 00:27:32,880
unfortunately

695
00:27:32,880 --> 00:27:34,880
the snarks in this updatable reference

696
00:27:34,880 --> 00:27:38,799
string model a bit less efficient

697
00:27:38,799 --> 00:27:42,000
uh and actually bowie guppies and the

698
00:27:42,000 --> 00:27:43,200
myers

699
00:27:43,200 --> 00:27:46,640
also proposed an update ability ceremony

700
00:27:46,640 --> 00:27:49,360
for the crotch 16 snark

701
00:27:49,360 --> 00:27:51,520
and the difference here is that this

702
00:27:51,520 --> 00:27:54,559
ceremony protocol works in two phases

703
00:27:54,559 --> 00:27:57,200
so the first phase looks kind of similar

704
00:27:57,200 --> 00:27:59,360
you have a bunch of parties updating

705
00:27:59,360 --> 00:28:01,679
and you obtain what we call a universal

706
00:28:01,679 --> 00:28:04,480
crs so this is a crs that's uh

707
00:28:04,480 --> 00:28:06,320
independent of the concrete relation

708
00:28:06,320 --> 00:28:08,480
that we're trying to prove

709
00:28:08,480 --> 00:28:10,559
and then you have another phase which

710
00:28:10,559 --> 00:28:12,559
works slightly differently which already

711
00:28:12,559 --> 00:28:14,320
depends on the relation

712
00:28:14,320 --> 00:28:16,799
where again everyone will update the crs

713
00:28:16,799 --> 00:28:19,520
and then you will obtain the final crs

714
00:28:19,520 --> 00:28:21,760
that you can actually use

715
00:28:21,760 --> 00:28:24,320
uh and in either of the phases you now

716
00:28:24,320 --> 00:28:26,399
need one honest party

717
00:28:26,399 --> 00:28:28,960
in order to get security

718
00:28:28,960 --> 00:28:31,600
uh this protocol has been very widely

719
00:28:31,600 --> 00:28:33,840
used in practice in all those blockchain

720
00:28:33,840 --> 00:28:35,840
projects and so on

721
00:28:35,840 --> 00:28:38,880
but it also has a slight uh

722
00:28:38,880 --> 00:28:41,360
theoretical problem at least that it

723
00:28:41,360 --> 00:28:43,600
uses a random beacon so what's a random

724
00:28:43,600 --> 00:28:46,480
beacon it's uh basically some

725
00:28:46,480 --> 00:28:48,720
source of randomness that period

726
00:28:48,720 --> 00:28:51,840
periodically produces you unpredictable

727
00:28:51,840 --> 00:28:54,960
random numbers so at some point it will

728
00:28:54,960 --> 00:28:58,000
produce one number and in another point

729
00:28:58,000 --> 00:28:59,760
you might want another complete

730
00:28:59,760 --> 00:29:02,480
unpredictable number and so on

731
00:29:02,480 --> 00:29:04,799
and at least if you want to

732
00:29:04,799 --> 00:29:07,360
construct probably secure random beacons

733
00:29:07,360 --> 00:29:08,399
then it's

734
00:29:08,399 --> 00:29:09,520
far from

735
00:29:09,520 --> 00:29:12,640
trivial how to construct them

736
00:29:12,640 --> 00:29:14,720
so ideally we would not like to have

737
00:29:14,720 --> 00:29:16,080
this uh

738
00:29:16,080 --> 00:29:18,799
at the center of our protocol at all

739
00:29:18,799 --> 00:29:20,320
and the way it's actually used in this

740
00:29:20,320 --> 00:29:23,279
protocol is that at the end of each each

741
00:29:23,279 --> 00:29:25,120
updating phase you

742
00:29:25,120 --> 00:29:29,039
apply a random beacon output to somehow

743
00:29:29,039 --> 00:29:31,600
randomize the crs

744
00:29:31,600 --> 00:29:33,919
so what are our contributions

745
00:29:33,919 --> 00:29:34,799
um

746
00:29:34,799 --> 00:29:37,279
firstly we propose a formal model for

747
00:29:37,279 --> 00:29:39,760
these types of multi

748
00:29:39,760 --> 00:29:43,760
ceremony protocols that you just saw

749
00:29:43,840 --> 00:29:46,720
and this can be seen as generalization

750
00:29:46,720 --> 00:29:48,640
of the updatability model

751
00:29:48,640 --> 00:29:51,039
or actually you can actually restrict

752
00:29:51,039 --> 00:29:55,840
our model precisely to updatability

753
00:29:55,919 --> 00:29:58,159
then we propose a variation of the

754
00:29:58,159 --> 00:30:02,000
oegabism myers protocol

755
00:30:02,000 --> 00:30:06,799
which doesn't use random beacon at all

756
00:30:06,799 --> 00:30:10,159
and finally we give a proof of security

757
00:30:10,159 --> 00:30:13,120
in our new ceremony model

758
00:30:13,120 --> 00:30:14,960
and this proof of security uses both

759
00:30:14,960 --> 00:30:17,200
algebraic group model and random oracle

760
00:30:17,200 --> 00:30:18,559
model

761
00:30:18,559 --> 00:30:19,440
and

762
00:30:19,440 --> 00:30:21,520
yeah it's a quite technical proof but it

763
00:30:21,520 --> 00:30:23,440
turns out that if you cut away this

764
00:30:23,440 --> 00:30:26,320
random beacon for from polygamy

765
00:30:26,320 --> 00:30:29,600
ceremony then it's still actually secure

766
00:30:29,600 --> 00:30:31,120
and moreover

767
00:30:31,120 --> 00:30:35,760
our security proof also applies to

768
00:30:35,760 --> 00:30:38,720
current executions of ceremony protocols

769
00:30:38,720 --> 00:30:40,799
that are already used in practice so

770
00:30:40,799 --> 00:30:42,880
even if they have an insecure random

771
00:30:42,880 --> 00:30:46,880
beacon then they are actually still safe

772
00:30:47,120 --> 00:30:51,200
and that's it thank you for listening

773
00:30:51,200 --> 00:30:53,600
thank you jenna

774
00:30:53,600 --> 00:30:56,159
do you have a question

775
00:30:56,159 --> 00:30:58,480
so if you're a question right at the

776
00:30:58,480 --> 00:31:02,000
drip chat or the chat

777
00:31:03,519 --> 00:31:06,320
there's no question so far

778
00:31:06,320 --> 00:31:09,360
so i have one question

779
00:31:09,360 --> 00:31:11,679
so i'm wondering if

780
00:31:11,679 --> 00:31:13,919
this can be seen as a special case of

781
00:31:13,919 --> 00:31:16,080
multiparty computation or is there any

782
00:31:16,080 --> 00:31:18,480
essential difference

783
00:31:18,480 --> 00:31:21,760
uh yeah it can be seen as a special case

784
00:31:21,760 --> 00:31:24,159
of multi-party computation i mean in

785
00:31:24,159 --> 00:31:25,760
general you can use multi-party

786
00:31:25,760 --> 00:31:28,000
computation to always generate this

787
00:31:28,000 --> 00:31:29,760
common reference string

788
00:31:29,760 --> 00:31:33,360
the problem is that

789
00:31:33,360 --> 00:31:35,519
in many applications you want a huge

790
00:31:35,519 --> 00:31:37,279
number of parties

791
00:31:37,279 --> 00:31:39,360
to participate in this multi-party

792
00:31:39,360 --> 00:31:42,320
computation and you also want

793
00:31:42,320 --> 00:31:44,559
or also this common reference triggers a

794
00:31:44,559 --> 00:31:47,840
very large so often uh

795
00:31:47,840 --> 00:31:49,519
general multi-party computation

796
00:31:49,519 --> 00:31:51,919
protocols are not very efficient for for

797
00:31:51,919 --> 00:31:54,240
this case

798
00:31:54,240 --> 00:31:56,480
and also the nice property here is that

799
00:31:56,480 --> 00:31:58,640
you only need one

800
00:31:58,640 --> 00:32:01,120
honest party in each phase of the

801
00:32:01,120 --> 00:32:03,519
protocol

802
00:32:03,519 --> 00:32:05,679
but in general yes

803
00:32:05,679 --> 00:32:07,279
i think so the problem is efficiency

804
00:32:07,279 --> 00:32:10,080
thank you and i found one question in

805
00:32:10,080 --> 00:32:11,120
chat

806
00:32:11,120 --> 00:32:13,679
uh how much longer do you feel the

807
00:32:13,679 --> 00:32:15,840
random bigger model is than the random

808
00:32:15,840 --> 00:32:18,480
oracle model

809
00:32:18,640 --> 00:32:20,799
um

810
00:32:20,799 --> 00:32:22,640
well the question is like how do you

811
00:32:22,640 --> 00:32:25,200
construct a random beacon random oracle

812
00:32:25,200 --> 00:32:26,480
is very

813
00:32:26,480 --> 00:32:30,080
simple to obtain you just uh

814
00:32:30,080 --> 00:32:31,760
i mean you pick a hash function that

815
00:32:31,760 --> 00:32:33,519
looks secure and you're kind of done

816
00:32:33,519 --> 00:32:34,740
with random beacon

817
00:32:34,740 --> 00:32:36,000
[Music]

818
00:32:36,000 --> 00:32:37,360
you know there are some practical

819
00:32:37,360 --> 00:32:39,120
solutions like uh

820
00:32:39,120 --> 00:32:41,360
for example you take a blockchain block

821
00:32:41,360 --> 00:32:42,640
that was

822
00:32:42,640 --> 00:32:45,440
proposed uh i don't know 10 blocks ago

823
00:32:45,440 --> 00:32:47,440
in bitcoin and then you hash it and you

824
00:32:47,440 --> 00:32:49,519
kind of claim that this is now the

825
00:32:49,519 --> 00:32:51,919
output of your random beacon

826
00:32:51,919 --> 00:32:52,880
um

827
00:32:52,880 --> 00:32:54,720
can you prove that this is actually

828
00:32:54,720 --> 00:32:56,480
secure i mean

829
00:32:56,480 --> 00:32:59,600
maybe you can somehow but i'm not sure

830
00:32:59,600 --> 00:33:01,200
but actual constructions of random

831
00:33:01,200 --> 00:33:05,440
vehicles are a lot more complicated

832
00:33:06,640 --> 00:33:08,000
thanks

833
00:33:08,000 --> 00:33:11,799
is there any other question

834
00:33:15,440 --> 00:33:18,480
50 no question let's move to the next

835
00:33:18,480 --> 00:33:20,399
talk thank you general

836
00:33:20,399 --> 00:33:22,799
thank you

837
00:33:23,039 --> 00:33:25,279
okay then let's move on to the next talk

838
00:33:25,279 --> 00:33:27,279
so the next vlog is on efficient music

839
00:33:27,279 --> 00:33:30,399
for algebraic set and uh roberto will uh

840
00:33:30,399 --> 00:33:33,039
give the talk so please go yes

841
00:33:33,039 --> 00:33:35,200
i guess you can see my right

842
00:33:35,200 --> 00:33:38,200
yes

843
00:33:38,480 --> 00:33:39,519
okay

844
00:33:39,519 --> 00:33:41,840
so um i'm going to present the feature

845
00:33:41,840 --> 00:33:43,840
musics for algebraic sets

846
00:33:43,840 --> 00:33:46,080
this is a joint work with joffrakuto

847
00:33:46,080 --> 00:33:49,918
alger litma and arnold obias

848
00:33:50,159 --> 00:33:51,360
so

849
00:33:51,360 --> 00:33:53,200
we are talking here about

850
00:33:53,200 --> 00:33:54,880
non-interactive zero knowledge or

851
00:33:54,880 --> 00:33:56,880
shortly music argument

852
00:33:56,880 --> 00:33:59,120
uh they are protocol engaged by this two

853
00:33:59,120 --> 00:34:01,200
party ellis approver and bob the very

854
00:34:01,200 --> 00:34:03,840
fire and alice wants to convince bob

855
00:34:03,840 --> 00:34:05,760
that she knows a witness w for a

856
00:34:05,760 --> 00:34:07,679
statement tax

857
00:34:07,679 --> 00:34:09,520
as before we require that only one

858
00:34:09,520 --> 00:34:11,359
message is sent

859
00:34:11,359 --> 00:34:13,040
by the proverb to the verifier which

860
00:34:13,040 --> 00:34:15,119
without an interaction is only to output

861
00:34:15,119 --> 00:34:17,119
accept or reject

862
00:34:17,119 --> 00:34:19,040
and different to other previous case we

863
00:34:19,040 --> 00:34:20,879
have seen in this section here we don't

864
00:34:20,879 --> 00:34:24,639
require that the proof is succinct

865
00:34:25,440 --> 00:34:27,199
also we must suppose the existence of

866
00:34:27,199 --> 00:34:29,760
this trustee transparty that computes

867
00:34:29,760 --> 00:34:31,359
and makes available to both prover and

868
00:34:31,359 --> 00:34:33,280
verifier sierras

869
00:34:33,280 --> 00:34:35,280
and this protocol has to be complete in

870
00:34:35,280 --> 00:34:37,119
the sense that honest proves always

871
00:34:37,119 --> 00:34:38,879
convinces the verifier

872
00:34:38,879 --> 00:34:40,960
sound in the sense that malicious prover

873
00:34:40,960 --> 00:34:43,199
cannot convince the verifier and zero

874
00:34:43,199 --> 00:34:45,119
knowledge in the sense that the verifier

875
00:34:45,119 --> 00:34:48,480
cannot learn anything about witness

876
00:34:48,480 --> 00:34:50,480
in our paper we present a new method to

877
00:34:50,480 --> 00:34:52,639
build uh musics

878
00:34:52,639 --> 00:34:53,599
so

879
00:34:53,599 --> 00:34:56,000
i'm start with an overview of the

880
00:34:56,000 --> 00:34:58,320
existing music construction compare them

881
00:34:58,320 --> 00:35:00,400
in terms of efficiency specific and

882
00:35:00,400 --> 00:35:02,640
security and at the end i also compared

883
00:35:02,640 --> 00:35:04,640
them with our music

884
00:35:04,640 --> 00:35:07,119
the first music construction was due to

885
00:35:07,119 --> 00:35:09,280
fiat and samir

886
00:35:09,280 --> 00:35:11,760
they performed very good in terms of

887
00:35:11,760 --> 00:35:14,480
efficiency and specificity but they are

888
00:35:14,480 --> 00:35:16,400
only proven to be secure in the random

889
00:35:16,400 --> 00:35:18,480
oracle model

890
00:35:18,480 --> 00:35:20,079
then after a while

891
00:35:20,079 --> 00:35:21,680
group scientific

892
00:35:21,680 --> 00:35:24,320
came they were the first musics proven

893
00:35:24,320 --> 00:35:26,400
secure under standard cryptographic

894
00:35:26,400 --> 00:35:28,880
assumption however they have some

895
00:35:28,880 --> 00:35:30,720
several limitations

896
00:35:30,720 --> 00:35:31,520
so

897
00:35:31,520 --> 00:35:33,359
often they are just not efficient enough

898
00:35:33,359 --> 00:35:35,119
for many applications

899
00:35:35,119 --> 00:35:37,520
and they are also restricted to their

900
00:35:37,520 --> 00:35:40,640
they are also defined only for

901
00:35:40,640 --> 00:35:42,960
paying product equation which means that

902
00:35:42,960 --> 00:35:45,359
in order to have a good sign physics for

903
00:35:45,359 --> 00:35:48,720
a specific application one must also uh

904
00:35:48,720 --> 00:35:51,040
must first find a representation of a

905
00:35:51,040 --> 00:35:52,960
given problem as a set of very product

906
00:35:52,960 --> 00:35:55,119
equation

907
00:35:55,119 --> 00:35:56,960
and then one years ago kuto and

908
00:35:56,960 --> 00:35:59,280
dartmouth developed a new way to build

909
00:35:59,280 --> 00:36:00,240
music

910
00:36:00,240 --> 00:36:01,839
and those musics have some very

911
00:36:01,839 --> 00:36:04,400
appealing features such as efficiency

912
00:36:04,400 --> 00:36:06,400
comparable to future music for some

913
00:36:06,400 --> 00:36:08,560
application but they also have some

914
00:36:08,560 --> 00:36:10,880
critical limitations so they are defined

915
00:36:10,880 --> 00:36:13,200
only for algebraic languages which is in

916
00:36:13,200 --> 00:36:14,880
principle a class or language is even

917
00:36:14,880 --> 00:36:16,400
more restricted than failed product

918
00:36:16,400 --> 00:36:17,359
equation

919
00:36:17,359 --> 00:36:19,359
and they are secure under

920
00:36:19,359 --> 00:36:21,280
a novel assumption which was not enough

921
00:36:21,280 --> 00:36:23,119
analyzed

922
00:36:23,119 --> 00:36:24,720
lastly

923
00:36:24,720 --> 00:36:28,000
our music built on top of the ch20

924
00:36:28,000 --> 00:36:29,280
results

925
00:36:29,280 --> 00:36:30,800
uh serves some of the previous

926
00:36:30,800 --> 00:36:33,280
limitations so first we slightly improve

927
00:36:33,280 --> 00:36:35,520
efficiency for some application but at

928
00:36:35,520 --> 00:36:36,720
the same weight

929
00:36:36,720 --> 00:36:39,280
but at the same time we widely enlarge

930
00:36:39,280 --> 00:36:41,200
the class of supported languages

931
00:36:41,200 --> 00:36:43,680
considers algebraic sets

932
00:36:43,680 --> 00:36:47,839
and we also relied on better assumptions

933
00:36:48,400 --> 00:36:52,400
so an algebraic set is defined by

934
00:36:52,400 --> 00:36:54,480
affinity number of polynomials over

935
00:36:54,480 --> 00:36:57,040
infinite file as the set of common roots

936
00:36:57,040 --> 00:36:58,960
of those polynomial

937
00:36:58,960 --> 00:37:00,960
we also use publicly linearly

938
00:37:00,960 --> 00:37:04,079
homomorphic encryption scheme

939
00:37:04,079 --> 00:37:07,040
and we define our languages as the set

940
00:37:07,040 --> 00:37:08,960
of encryption of element in the

941
00:37:08,960 --> 00:37:11,680
algebraic set

942
00:37:12,640 --> 00:37:15,200
our main contribution is a general

943
00:37:15,200 --> 00:37:17,119
framework to define a music for those

944
00:37:17,119 --> 00:37:19,359
languages the framework is divided in

945
00:37:19,359 --> 00:37:20,240
two

946
00:37:20,240 --> 00:37:21,280
steps

947
00:37:21,280 --> 00:37:24,400
the first step is to find um

948
00:37:24,400 --> 00:37:27,200
a basic of the algebraic set this is

949
00:37:27,200 --> 00:37:29,200
done considering the algebraic set as an

950
00:37:29,200 --> 00:37:31,760
ideal in the polynomial ring so we run

951
00:37:31,760 --> 00:37:34,160
an algorithm to find a good basis of the

952
00:37:34,160 --> 00:37:37,119
algebraic set this algorithm has to be

953
00:37:37,119 --> 00:37:39,839
run only once and i want to point out

954
00:37:39,839 --> 00:37:41,839
that this is just not a cryptographic

955
00:37:41,839 --> 00:37:45,040
problem uh many solutions are known

956
00:37:45,040 --> 00:37:48,800
that give like a satisfactory result

957
00:37:48,800 --> 00:37:52,160
so once we have this

958
00:37:52,480 --> 00:37:54,800
language defined in term of the basis of

959
00:37:54,800 --> 00:37:56,480
the algebraic set

960
00:37:56,480 --> 00:37:59,040
the second point it is to

961
00:37:59,040 --> 00:38:01,680
build and music for those languages

962
00:38:01,680 --> 00:38:03,200
and this is our main technical

963
00:38:03,200 --> 00:38:06,079
contribution i just want to point out

964
00:38:06,079 --> 00:38:08,880
that from the eye level description to

965
00:38:08,880 --> 00:38:10,880
the music this process is

966
00:38:10,880 --> 00:38:12,960
almost automatic in our paper

967
00:38:12,960 --> 00:38:15,359
particularly doesn't require work from a

968
00:38:15,359 --> 00:38:17,200
dedicated expertise

969
00:38:17,200 --> 00:38:19,359
which was not the case for a group

970
00:38:19,359 --> 00:38:21,359
science and

971
00:38:21,359 --> 00:38:24,560
ch 20 meetings

972
00:38:25,119 --> 00:38:26,960
to show the goodness of our method we

973
00:38:26,960 --> 00:38:29,280
have some application so we

974
00:38:29,280 --> 00:38:31,200
we have the best musics for

975
00:38:31,200 --> 00:38:32,480
set membership

976
00:38:32,480 --> 00:38:34,960
uh also to prove that the points belong

977
00:38:34,960 --> 00:38:36,880
to an elliptic code which

978
00:38:36,880 --> 00:38:38,560
is an application required in

979
00:38:38,560 --> 00:38:40,640
blockchains and cryptocurrency and we

980
00:38:40,640 --> 00:38:42,320
have also the best physics for several

981
00:38:42,320 --> 00:38:44,720
secret satisfiability problems such as

982
00:38:44,720 --> 00:38:48,079
boolean circuits and r1cs

983
00:38:48,079 --> 00:38:50,160
but we believe that

984
00:38:50,160 --> 00:38:51,839
the best part of our paper is the

985
00:38:51,839 --> 00:38:53,280
framework itself

986
00:38:53,280 --> 00:38:55,119
and we believe that as it was the case

987
00:38:55,119 --> 00:38:57,119
for bloodside many applications will

988
00:38:57,119 --> 00:38:59,280
come in the future

989
00:38:59,280 --> 00:39:01,280
so thanks for the attention and we also

990
00:39:01,280 --> 00:39:02,320
have

991
00:39:02,320 --> 00:39:03,839
the full version only print with more

992
00:39:03,839 --> 00:39:06,320
details

993
00:39:08,720 --> 00:39:11,598
thanks a lot to beto

994
00:39:12,880 --> 00:39:14,400
any questions

995
00:39:14,400 --> 00:39:17,760
from the audience

996
00:39:21,760 --> 00:39:24,240
i do not see any questions

997
00:39:24,240 --> 00:39:27,560
or zoom

998
00:39:28,800 --> 00:39:31,040
so i think that's a really nice paper so

999
00:39:31,040 --> 00:39:34,160
i i just have one question so i mean

1000
00:39:34,160 --> 00:39:35,920
so do you think that this is kind of

1001
00:39:35,920 --> 00:39:36,960
like

1002
00:39:36,960 --> 00:39:38,960
already optimal what you're doing with

1003
00:39:38,960 --> 00:39:41,359
this algebraic set representation or do

1004
00:39:41,359 --> 00:39:43,520
you see any path towards i mean

1005
00:39:43,520 --> 00:39:47,280
improving efficiency or do even better

1006
00:39:47,920 --> 00:39:48,720
uh

1007
00:39:48,720 --> 00:39:52,240
actually i don't know

1008
00:39:52,400 --> 00:39:54,320
i think it's

1009
00:39:54,320 --> 00:39:57,680
like to improve efficiency uh

1010
00:39:57,680 --> 00:40:01,280
one must really like found some better

1011
00:40:01,280 --> 00:40:03,040
representation of the

1012
00:40:03,040 --> 00:40:05,839
given problem

1013
00:40:07,920 --> 00:40:10,480
so i think it's mostly depend on the the

1014
00:40:10,480 --> 00:40:13,440
first step if you if you can find like

1015
00:40:13,440 --> 00:40:17,119
better efficiency i think the concept is

1016
00:40:17,119 --> 00:40:21,200
almost optimal but that's only my twist

1017
00:40:21,200 --> 00:40:24,919
oh yeah sure thanks

1018
00:40:27,119 --> 00:40:29,599
so let's just check

1019
00:40:29,599 --> 00:40:32,400
any other question

1020
00:40:32,800 --> 00:40:34,880
so i have one great question

1021
00:40:34,880 --> 00:40:36,079
yes so

1022
00:40:36,079 --> 00:40:38,240
i believe the growth high is already

1023
00:40:38,240 --> 00:40:42,160
somewhat efficient so i'm wondering so

1024
00:40:42,160 --> 00:40:44,319
is there any concrete comparison of the

1025
00:40:44,319 --> 00:40:45,920
efficiency between your protocol and

1026
00:40:45,920 --> 00:40:47,119
goes to high

1027
00:40:47,119 --> 00:40:51,119
yes yes we have some several tables of

1028
00:40:51,119 --> 00:40:54,319
comparison in which we show that we are

1029
00:40:54,319 --> 00:40:56,960
more efficient than the good psy

1030
00:40:56,960 --> 00:40:58,720
for i think

1031
00:40:58,720 --> 00:40:59,920
we were like

1032
00:40:59,920 --> 00:41:03,119
20 to 30 percent more efficient

1033
00:41:03,119 --> 00:41:05,040
but also like for

1034
00:41:05,040 --> 00:41:07,680
circuits we are

1035
00:41:07,680 --> 00:41:09,599
like a lot of efficiency

1036
00:41:09,599 --> 00:41:10,800
before

1037
00:41:10,800 --> 00:41:13,599
our statement is already in uh in one

1038
00:41:13,599 --> 00:41:16,319
group while with truth i would like to

1039
00:41:16,319 --> 00:41:18,400
send the commitment in

1040
00:41:18,400 --> 00:41:20,800
both group so

1041
00:41:20,800 --> 00:41:22,960
already this

1042
00:41:22,960 --> 00:41:25,280
gained a lot in the future

1043
00:41:25,280 --> 00:41:28,000
i think thank you

1044
00:41:32,000 --> 00:41:34,079
so i just checked but i think that we

1045
00:41:34,079 --> 00:41:36,240
have no one from the third paper here

1046
00:41:36,240 --> 00:41:38,640
online

1047
00:41:39,200 --> 00:41:41,200
so i think it's in the middle of the

1048
00:41:41,200 --> 00:41:43,760
night for them so

1049
00:41:43,760 --> 00:41:46,960
should be generous i guess

1050
00:41:46,960 --> 00:41:50,560
um okay then i think we're basically

1051
00:41:50,560 --> 00:41:52,960
done i want to thank all the people here

1052
00:41:52,960 --> 00:41:54,400
in the session and all the speakers for

1053
00:41:54,400 --> 00:41:57,560
the talks

1054
00:42:03,119 --> 00:42:05,599
i think we can close the session then

1055
00:42:05,599 --> 00:42:07,200
thanks a lot guys

1056
00:42:07,200 --> 00:42:10,439
thank you

