1
00:00:00,640 --> 00:00:02,480
hey my name is gordon and thank you for

2
00:00:02,480 --> 00:00:03,760
watching this video

3
00:00:03,760 --> 00:00:05,279
so in this video i'll be discussing our

4
00:00:05,279 --> 00:00:07,600
recent work on entry fatigue how stretch

5
00:00:07,600 --> 00:00:08,880
is overstretched

6
00:00:08,880 --> 00:00:11,679
and this is joint work with lyodica

7
00:00:11,679 --> 00:00:13,679
so let's get started with an overview

8
00:00:13,679 --> 00:00:15,360
andrew is a let's based public key

9
00:00:15,360 --> 00:00:17,279
crypto system of which many variants

10
00:00:17,279 --> 00:00:18,240
exist

11
00:00:18,240 --> 00:00:21,199
one of which simply known as andrew is

12
00:00:21,199 --> 00:00:24,960
in this post-content crypto finalist

13
00:00:24,960 --> 00:00:26,880
until recently latest reduction attacks

14
00:00:26,880 --> 00:00:28,400
were thought to be as similar as on the

15
00:00:28,400 --> 00:00:31,760
real lwe however for large overstretch

16
00:00:31,760 --> 00:00:34,239
mode like you thatcher reduction attacks

17
00:00:34,239 --> 00:00:37,600
have been shown to behave even better

18
00:00:37,600 --> 00:00:39,520
and the main question of our work is to

19
00:00:39,520 --> 00:00:41,040
understand when do we go from the

20
00:00:41,040 --> 00:00:43,120
splinter stretched to this overstretched

21
00:00:43,120 --> 00:00:46,640
regime as that's currently unclear

22
00:00:46,640 --> 00:00:48,800
so our contributions are we explain

23
00:00:48,800 --> 00:00:50,480
precisely how let's reduction breaks

24
00:00:50,480 --> 00:00:52,480
overstretch and through

25
00:00:52,480 --> 00:00:54,640
and we predict precisely when that's

26
00:00:54,640 --> 00:00:56,399
reduction attacks break overstretch

27
00:00:56,399 --> 00:00:58,719
center

28
00:00:58,719 --> 00:01:00,079
so what's exactly the end through

29
00:01:00,079 --> 00:01:02,719
problem well first we have a secret key

30
00:01:02,719 --> 00:01:04,879
that consists of small elements f and g

31
00:01:04,879 --> 00:01:06,479
in some ring r

32
00:01:06,479 --> 00:01:08,640
then we have a public key h that's given

33
00:01:08,640 --> 00:01:11,760
by g times f inverse molecule for the

34
00:01:11,760 --> 00:01:13,280
modulus q

35
00:01:13,280 --> 00:01:16,000
assuming that f is invertible

36
00:01:16,000 --> 00:01:17,439
and throughout this presentation you can

37
00:01:17,439 --> 00:01:20,320
assume that r is equal to set x quotient

38
00:01:20,320 --> 00:01:22,560
by x to the n minus one

39
00:01:22,560 --> 00:01:24,479
and that f and g are just like

40
00:01:24,479 --> 00:01:27,040
polynomials with coefficients

41
00:01:27,040 --> 00:01:29,759
in minus one zero and one

42
00:01:29,759 --> 00:01:32,000
now the entropy problem asked to given

43
00:01:32,000 --> 00:01:34,560
the public key h recover the secret key

44
00:01:34,560 --> 00:01:36,240
f and g

45
00:01:36,240 --> 00:01:38,079
or any rotation of them as that's kind

46
00:01:38,079 --> 00:01:40,479
of equivalent

47
00:01:40,479 --> 00:01:42,799
alternatively given the polar key you

48
00:01:42,799 --> 00:01:45,360
could just ask to find any shortest pair

49
00:01:45,360 --> 00:01:48,320
a dot b such that h times a is equal to

50
00:01:48,320 --> 00:01:50,880
b mod q and note that the c key

51
00:01:50,880 --> 00:01:53,360
satisfies this but for any sharp pair we

52
00:01:53,360 --> 00:01:54,399
might be able

53
00:01:54,399 --> 00:01:55,439
to

54
00:01:55,439 --> 00:01:58,159
break the cryptosystem already

55
00:01:58,159 --> 00:01:59,840
to apply let's reduction attacks we

56
00:01:59,840 --> 00:02:01,520
first need to define the so-called entry

57
00:02:01,520 --> 00:02:02,479
letters

58
00:02:02,479 --> 00:02:03,600
this is exactly the lattice that

59
00:02:03,600 --> 00:02:06,399
consists out of all such pairs a dot b

60
00:02:06,399 --> 00:02:10,318
so that h times a is equal to b mod q

61
00:02:10,318 --> 00:02:11,840
so if

62
00:02:11,840 --> 00:02:14,000
r has degree n then this lattice has

63
00:02:14,000 --> 00:02:17,120
dimension 2 times n and the determinant

64
00:02:17,120 --> 00:02:20,000
is equal to q to the n

65
00:02:20,000 --> 00:02:22,560
now this lens has two special properties

66
00:02:22,560 --> 00:02:24,640
first it contains the secret key in all

67
00:02:24,640 --> 00:02:27,280
its rotations and these are for most of

68
00:02:27,280 --> 00:02:29,120
the parameters and usually short vectors

69
00:02:29,120 --> 00:02:31,120
in this letters

70
00:02:31,120 --> 00:02:32,959
and secondly these rotations also

71
00:02:32,959 --> 00:02:35,440
generate an unusually dense subletters

72
00:02:35,440 --> 00:02:37,680
of rank n inside of this

73
00:02:37,680 --> 00:02:40,560
two n dimensional letters

74
00:02:40,560 --> 00:02:42,959
now the first property gives us the best

75
00:02:42,959 --> 00:02:45,519
attack for a small multi of q

76
00:02:45,519 --> 00:02:47,680
and it's similar to attacks on unique

77
00:02:47,680 --> 00:02:51,519
sap or what we call unusual sap

78
00:02:51,519 --> 00:02:53,920
and for the second property

79
00:02:53,920 --> 00:02:55,599
that gives us the best attack for large

80
00:02:55,599 --> 00:02:57,440
molecule and this is actually what we

81
00:02:57,440 --> 00:03:00,239
call the overstretch regime

82
00:03:00,239 --> 00:03:02,400
and our question is what's the crossover

83
00:03:02,400 --> 00:03:04,560
between these two attacks and we define

84
00:03:04,560 --> 00:03:07,280
this as the fatigue point

85
00:03:07,280 --> 00:03:09,040
so let's reduction is the process of

86
00:03:09,040 --> 00:03:11,360
turning a basis that consists of long

87
00:03:11,360 --> 00:03:12,159
and

88
00:03:12,159 --> 00:03:15,280
not orthogonal vectors into a good basis

89
00:03:15,280 --> 00:03:18,319
of short and almost orthogonal vectors

90
00:03:18,319 --> 00:03:20,239
so given that basis b

91
00:03:20,239 --> 00:03:22,640
it consists of vectors b 0 up to b and d

92
00:03:22,640 --> 00:03:25,200
minus 1.

93
00:03:25,360 --> 00:03:28,879
we first define the projection p y

94
00:03:28,879 --> 00:03:32,720
away from the first i basis vectors

95
00:03:32,720 --> 00:03:34,720
and this allows us then to define so

96
00:03:34,720 --> 00:03:37,200
about ground speed basis where bi star

97
00:03:37,200 --> 00:03:38,799
is given by

98
00:03:38,799 --> 00:03:41,680
the b high base element projected away

99
00:03:41,680 --> 00:03:44,720
from the previous based elements

100
00:03:44,720 --> 00:03:46,159
note that we have the invariant that the

101
00:03:46,159 --> 00:03:48,400
product of all these constitute bases

102
00:03:48,400 --> 00:03:50,400
elements the norm of them is equal to

103
00:03:50,400 --> 00:03:52,799
the determinant of the letters

104
00:03:52,799 --> 00:03:54,480
and this means in the picture that the

105
00:03:54,480 --> 00:03:56,720
volume underneath these two

106
00:03:56,720 --> 00:03:59,519
log plots must be equal

107
00:03:59,519 --> 00:04:01,840
now for a bad basis consists of large

108
00:04:01,840 --> 00:04:03,040
factors

109
00:04:03,040 --> 00:04:05,920
this base this profile starts very high

110
00:04:05,920 --> 00:04:08,239
and then quickly decreases

111
00:04:08,239 --> 00:04:10,239
for a good basis the profile is much

112
00:04:10,239 --> 00:04:12,400
flatter

113
00:04:12,400 --> 00:04:14,239
to obtain such a good basis we can use

114
00:04:14,239 --> 00:04:16,000
the big a z algorithm

115
00:04:16,000 --> 00:04:17,839
so first we have to define the so-called

116
00:04:17,839 --> 00:04:19,680
projected sub-lattice

117
00:04:19,680 --> 00:04:21,120
between l and r

118
00:04:21,120 --> 00:04:23,840
so we just take the basis element l up

119
00:04:23,840 --> 00:04:26,479
to r minus one and we project them away

120
00:04:26,479 --> 00:04:29,840
from all previous base factors

121
00:04:29,840 --> 00:04:31,360
and then

122
00:04:31,360 --> 00:04:33,280
the bc algorithm

123
00:04:33,280 --> 00:04:35,440
tries at any any position kappa it looks

124
00:04:35,440 --> 00:04:37,759
at the block the projected sub lattice

125
00:04:37,759 --> 00:04:41,040
between kappa and kappa plus beta

126
00:04:41,040 --> 00:04:42,960
and then it tries to find the shortest

127
00:04:42,960 --> 00:04:45,360
vector in this projected subletters

128
00:04:45,360 --> 00:04:47,680
and lifts it to lift it back to the fill

129
00:04:47,680 --> 00:04:49,520
lattice and then replace

130
00:04:49,520 --> 00:04:51,600
this base element there

131
00:04:51,600 --> 00:04:53,280
so what does that mean in practice is

132
00:04:53,280 --> 00:04:55,680
that we find this this short vector here

133
00:04:55,680 --> 00:04:58,560
and we decrease the probe highest point

134
00:04:58,560 --> 00:05:00,080
and of course because of the the

135
00:05:00,080 --> 00:05:02,240
invariant on the on the total

136
00:05:02,240 --> 00:05:05,199
volume underneath this plot

137
00:05:05,199 --> 00:05:07,440
we also get some changes in the rest of

138
00:05:07,440 --> 00:05:09,680
the profile

139
00:05:09,680 --> 00:05:12,080
and if you repeat this

140
00:05:12,080 --> 00:05:14,800
then for a large block size beta you get

141
00:05:14,800 --> 00:05:17,520
flatter and flatter profiles

142
00:05:17,520 --> 00:05:20,639
however the cost of this reduction is

143
00:05:20,639 --> 00:05:22,479
exponential in the block size so we have

144
00:05:22,479 --> 00:05:24,800
to be careful with that so for the rest

145
00:05:24,800 --> 00:05:26,880
of the presentation we will

146
00:05:26,880 --> 00:05:29,759
account for the complexity of solving

147
00:05:29,759 --> 00:05:31,680
entry problem in terms of this block

148
00:05:31,680 --> 00:05:34,479
size beta

149
00:05:34,479 --> 00:05:37,759
and what's nice that the behavior of big

150
00:05:37,759 --> 00:05:40,320
ac is pretty well understood

151
00:05:40,320 --> 00:05:43,360
for so-called like random lattices

152
00:05:43,360 --> 00:05:45,919
and what we can do is we can see that

153
00:05:45,919 --> 00:05:48,479
these are almost form a straight line

154
00:05:48,479 --> 00:05:50,720
and the angle that they give can be

155
00:05:50,720 --> 00:05:52,400
predicted by the so-called geometric

156
00:05:52,400 --> 00:05:55,198
series assumption

157
00:05:56,479 --> 00:05:57,759
so let us first focus on the

158
00:05:57,759 --> 00:06:00,639
understretch regime where bkz finds

159
00:06:00,639 --> 00:06:03,360
initially short secret key

160
00:06:03,360 --> 00:06:06,240
so bc is expected to find this initial

161
00:06:06,240 --> 00:06:07,440
short vector

162
00:06:07,440 --> 00:06:09,039
when the projection

163
00:06:09,039 --> 00:06:12,000
to this last block at position d minus

164
00:06:12,000 --> 00:06:13,120
beta

165
00:06:13,120 --> 00:06:15,759
is less than the ground speed term there

166
00:06:15,759 --> 00:06:17,360
because then the projection is actually

167
00:06:17,360 --> 00:06:20,319
the shortest vector in this block

168
00:06:20,319 --> 00:06:22,240
now the blue line here represents the

169
00:06:22,240 --> 00:06:24,560
expected length of this projection

170
00:06:24,560 --> 00:06:28,080
and the orange line is the the gsa of

171
00:06:28,080 --> 00:06:29,280
in this case

172
00:06:29,280 --> 00:06:31,600
beta st bkc

173
00:06:31,600 --> 00:06:34,319
now we see now that at this position the

174
00:06:34,319 --> 00:06:35,680
expected length of the projection is

175
00:06:35,680 --> 00:06:38,240
much larger than the grand speed norm so

176
00:06:38,240 --> 00:06:40,319
we don't expect big ac to find it

177
00:06:40,319 --> 00:06:41,360
however

178
00:06:41,360 --> 00:06:43,280
if we increase the reduction then at

179
00:06:43,280 --> 00:06:45,440
time point these lines cross

180
00:06:45,440 --> 00:06:47,120
and at this point we are expected to

181
00:06:47,120 --> 00:06:51,199
find the projection of this short vector

182
00:06:51,199 --> 00:06:53,759
and now we also it's also very likely

183
00:06:53,759 --> 00:06:55,199
that the short factor is actually lifted

184
00:06:55,199 --> 00:06:57,599
all the way back to the full context so

185
00:06:57,599 --> 00:06:59,680
we recover the unusually short factor or

186
00:06:59,680 --> 00:07:02,800
the initially short secret key

187
00:07:02,800 --> 00:07:04,479
so this is better known as the gsa

188
00:07:04,479 --> 00:07:07,520
intersect method or the 2016 estimate

189
00:07:07,520 --> 00:07:10,479
and bkc finds an easy short factor when

190
00:07:10,479 --> 00:07:12,639
beta is at least an overlock q up to

191
00:07:12,639 --> 00:07:14,800
logarithmic vectors

192
00:07:14,800 --> 00:07:17,120
additionally you can turn this analysis

193
00:07:17,120 --> 00:07:20,400
into an average case heuristic analysis

194
00:07:20,400 --> 00:07:22,639
and that gives concrete predictions

195
00:07:22,639 --> 00:07:24,319
and if we apply this to our entry

196
00:07:24,319 --> 00:07:27,280
problem we can give very precise

197
00:07:27,280 --> 00:07:28,479
predictions

198
00:07:28,479 --> 00:07:29,759
in the low

199
00:07:29,759 --> 00:07:33,120
in the inner stretch regime for low q

200
00:07:33,120 --> 00:07:34,800
however we see that in the overstretch

201
00:07:34,800 --> 00:07:37,280
regime for large q

202
00:07:37,280 --> 00:07:39,599
this prediction doesn't match

203
00:07:39,599 --> 00:07:43,120
and this fatigue point is already at a

204
00:07:43,120 --> 00:07:46,400
quite low values of q

205
00:07:46,400 --> 00:07:48,080
okay so let's now consider the second

206
00:07:48,080 --> 00:07:50,319
attack recall that the entry letters has

207
00:07:50,319 --> 00:07:52,960
a dense and dimensional subletters

208
00:07:52,960 --> 00:07:55,599
and our question is when does pse

209
00:07:55,599 --> 00:07:57,360
find this and dimensional subletters in

210
00:07:57,360 --> 00:07:59,039
some sense

211
00:07:59,039 --> 00:08:01,199
so kirchner fuch tried to answer this by

212
00:08:01,199 --> 00:08:04,400
using the following pataki to roll emma

213
00:08:04,400 --> 00:08:05,759
that says that for any n dimensional

214
00:08:05,759 --> 00:08:07,360
subletters we have the following

215
00:08:07,360 --> 00:08:08,560
constraint

216
00:08:08,560 --> 00:08:10,000
namely that the determinant of this

217
00:08:10,000 --> 00:08:11,280
ziplinis

218
00:08:11,280 --> 00:08:12,720
is at least

219
00:08:12,720 --> 00:08:14,960
the product of the n smallest concrete

220
00:08:14,960 --> 00:08:18,400
norms of the fill letters

221
00:08:18,960 --> 00:08:20,720
so to turn this into an attack we also

222
00:08:20,720 --> 00:08:22,080
need to abuse the fact that we know

223
00:08:22,080 --> 00:08:24,560
quite a good basis of our letters so

224
00:08:24,560 --> 00:08:26,080
using only public information we can

225
00:08:26,080 --> 00:08:28,080
create a basis of which the first n

226
00:08:28,080 --> 00:08:30,080
constraint factors have normal q and of

227
00:08:30,080 --> 00:08:31,599
which the loss and cross meet factors

228
00:08:31,599 --> 00:08:33,760
have form 1

229
00:08:33,760 --> 00:08:37,440
and this kind of gives a c shape

230
00:08:37,440 --> 00:08:40,559
now if we apply reduction to this basis

231
00:08:40,559 --> 00:08:42,799
then what we see in practice it does the

232
00:08:42,799 --> 00:08:44,720
that these flat parts stay the same but

233
00:08:44,720 --> 00:08:47,040
in the middle we get kind of a slope

234
00:08:47,040 --> 00:08:48,800
and this slope can again be predicted by

235
00:08:48,800 --> 00:08:51,040
the geometric series assumption

236
00:08:51,040 --> 00:08:52,720
so if we upgrade our gmax here

237
00:08:52,720 --> 00:08:54,480
assumption we kind of get a c shape

238
00:08:54,480 --> 00:08:57,680
geometric series assumption

239
00:08:58,000 --> 00:08:59,600
so what does the pathogens roll lemma

240
00:08:59,600 --> 00:09:01,680
say in combination with the c shape

241
00:09:01,680 --> 00:09:03,360
well first the determinant of this

242
00:09:03,360 --> 00:09:05,440
density lattice can be represented by

243
00:09:05,440 --> 00:09:06,720
the area

244
00:09:06,720 --> 00:09:08,800
of this rectangle

245
00:09:08,800 --> 00:09:10,640
on the right side we have the product of

246
00:09:10,640 --> 00:09:13,200
the smallest n constant vectors which

247
00:09:13,200 --> 00:09:15,040
are just the last and constraint factors

248
00:09:15,040 --> 00:09:17,200
assuming the c shape and so that's just

249
00:09:17,200 --> 00:09:18,720
the area underneath

250
00:09:18,720 --> 00:09:21,040
this plot

251
00:09:21,040 --> 00:09:24,080
but now if we increase

252
00:09:24,080 --> 00:09:26,160
the reduction then at some point this

253
00:09:26,160 --> 00:09:28,320
inequality can't be true anymore

254
00:09:28,320 --> 00:09:31,200
so something must have happened

255
00:09:31,200 --> 00:09:33,680
and kirchner reasoned that at such

256
00:09:33,680 --> 00:09:35,200
a point we must have found the dense

257
00:09:35,200 --> 00:09:37,360
subletters in some way

258
00:09:37,360 --> 00:09:39,360
and note that this is quite a

259
00:09:39,360 --> 00:09:41,279
unclear statement

260
00:09:41,279 --> 00:09:43,279
but if you run this analysis

261
00:09:43,279 --> 00:09:46,240
then what gaijin forgot that pkc finds

262
00:09:46,240 --> 00:09:48,560
the dense sublattice in some way when

263
00:09:48,560 --> 00:09:49,360
the

264
00:09:49,360 --> 00:09:51,760
block size beta is at least n over log

265
00:09:51,760 --> 00:09:53,040
squared q

266
00:09:53,040 --> 00:09:54,560
and note that now we have this log

267
00:09:54,560 --> 00:09:57,360
squared instead of just the log q so for

268
00:09:57,360 --> 00:09:59,200
growing q at some point this attack must

269
00:09:59,200 --> 00:10:03,040
become better than the first attack

270
00:10:03,120 --> 00:10:04,800
and indeed in practice this breaks

271
00:10:04,800 --> 00:10:06,480
several ffg schemes

272
00:10:06,480 --> 00:10:10,320
that use very large small iq

273
00:10:10,320 --> 00:10:11,839
and if you run the analysis for this

274
00:10:11,839 --> 00:10:15,440
fatigue point then for ternary f and g

275
00:10:15,440 --> 00:10:17,839
the fatigue point is supposed to lie at

276
00:10:17,839 --> 00:10:22,079
about n to the power 2.783

277
00:10:22,079 --> 00:10:23,519
but note that this is just an upper

278
00:10:23,519 --> 00:10:26,560
bound as the analysis is just a worst

279
00:10:26,560 --> 00:10:28,399
case analysis

280
00:10:28,399 --> 00:10:30,240
and also we have no clue what's hidden

281
00:10:30,240 --> 00:10:34,079
inside of this little o of one

282
00:10:34,320 --> 00:10:36,800
so a few problems with this method is

283
00:10:36,800 --> 00:10:39,120
first we have no clue how big ac

284
00:10:39,120 --> 00:10:41,120
actually finds this dense sublets vector

285
00:10:41,120 --> 00:10:44,240
only that something must have happened

286
00:10:44,240 --> 00:10:45,839
secondly it only gives an upper bound on

287
00:10:45,839 --> 00:10:48,399
the fatigue point

288
00:10:48,399 --> 00:10:49,200
and

289
00:10:49,200 --> 00:10:51,360
also because the islam is quite a worst

290
00:10:51,360 --> 00:10:52,800
case statement

291
00:10:52,800 --> 00:10:54,399
we can go give go no concrete

292
00:10:54,399 --> 00:10:56,880
predictions using this and it's far from

293
00:10:56,880 --> 00:11:00,160
actual practical behavior that we see

294
00:11:00,160 --> 00:11:02,000
so given that we want to understand how

295
00:11:02,000 --> 00:11:04,959
and when pkc solves the entry problem

296
00:11:04,959 --> 00:11:07,279
let's first see what happens in practice

297
00:11:07,279 --> 00:11:09,120
but for this to run experiments we first

298
00:11:09,120 --> 00:11:11,440
need to define what we are looking at

299
00:11:11,440 --> 00:11:14,079
and for this we define some events so

300
00:11:14,079 --> 00:11:16,000
first we define the secret key recovery

301
00:11:16,000 --> 00:11:18,640
event at some position kappa

302
00:11:18,640 --> 00:11:21,200
and this triggers when a vector is short

303
00:11:21,200 --> 00:11:22,959
as the secret key vector so the second

304
00:11:22,959 --> 00:11:24,720
key vector or any rotation

305
00:11:24,720 --> 00:11:26,560
is inserted in the base at the position

306
00:11:26,560 --> 00:11:29,600
kappa during pkc

307
00:11:29,600 --> 00:11:31,279
secondly we have the so-called dense

308
00:11:31,279 --> 00:11:34,000
sublet's discovery event

309
00:11:34,000 --> 00:11:36,000
and that triggers if a dense sub lattice

310
00:11:36,000 --> 00:11:37,519
factor from this

311
00:11:37,519 --> 00:11:39,680
subletter is generated by the shaker key

312
00:11:39,680 --> 00:11:41,360
longer than the secret key is insert in

313
00:11:41,360 --> 00:11:42,800
the basis

314
00:11:42,800 --> 00:11:45,440
at position kappa

315
00:11:45,440 --> 00:11:47,920
so we run bkc on and through lattice

316
00:11:47,920 --> 00:11:50,560
with n equal to 127

317
00:11:50,560 --> 00:11:53,200
for different mole iq

318
00:11:53,200 --> 00:11:55,839
and we looked at which block size it was

319
00:11:55,839 --> 00:11:56,880
first

320
00:11:56,880 --> 00:11:59,360
solved it found the secret key or the

321
00:11:59,360 --> 00:12:01,519
then sublet's discovery

322
00:12:01,519 --> 00:12:04,000
so we see that in the instructor regime

323
00:12:04,000 --> 00:12:06,240
we must see skr events

324
00:12:06,240 --> 00:12:08,160
well in the overstretch regime we mostly

325
00:12:08,160 --> 00:12:11,920
see these dense sublet's discover events

326
00:12:11,920 --> 00:12:14,639
now in terms of positions we see that

327
00:12:14,639 --> 00:12:16,720
for the skr events that they mostly

328
00:12:16,720 --> 00:12:17,680
happen

329
00:12:17,680 --> 00:12:20,240
at around the dimension minus beta

330
00:12:20,240 --> 00:12:22,079
exactly as predicted

331
00:12:22,079 --> 00:12:25,839
by the first attack

332
00:12:26,320 --> 00:12:28,160
for these then supply score events we

333
00:12:28,160 --> 00:12:30,240
see that these happen at positions much

334
00:12:30,240 --> 00:12:31,040
more

335
00:12:31,040 --> 00:12:34,320
central so a bit close to

336
00:12:34,320 --> 00:12:36,480
n

337
00:12:36,639 --> 00:12:38,560
and in the around the fatigue point we

338
00:12:38,560 --> 00:12:41,040
see that both events happen

339
00:12:41,040 --> 00:12:44,000
so high position mostly skr events and

340
00:12:44,000 --> 00:12:47,600
low positions mostly dsd events

341
00:12:47,600 --> 00:12:49,040
and what's important to know is that

342
00:12:49,040 --> 00:12:51,200
after such a dsd event we saw in

343
00:12:51,200 --> 00:12:53,760
practice that pkc quickly recovers the

344
00:12:53,760 --> 00:12:55,600
full secret key

345
00:12:55,600 --> 00:12:57,519
but even if this does not happen

346
00:12:57,519 --> 00:12:59,920
we explain our paper how you can given

347
00:12:59,920 --> 00:13:02,639
such a dense sublets vector can

348
00:13:02,639 --> 00:13:04,639
recover the secret key with much more

349
00:13:04,639 --> 00:13:07,200
efficient algorithms

350
00:13:07,200 --> 00:13:09,360
so we have observed in practice that in

351
00:13:09,360 --> 00:13:11,279
the overstretched regime

352
00:13:11,279 --> 00:13:13,600
bkc solves and through problem by first

353
00:13:13,600 --> 00:13:16,000
finding a dense vector at some position

354
00:13:16,000 --> 00:13:17,440
kappa

355
00:13:17,440 --> 00:13:18,800
so let's try to turn this into an

356
00:13:18,800 --> 00:13:20,399
estimate

357
00:13:20,399 --> 00:13:23,519
so for such a dense sublet's factor

358
00:13:23,519 --> 00:13:25,680
that's inserted at position kappa note

359
00:13:25,680 --> 00:13:27,839
that it must be generated by the first

360
00:13:27,839 --> 00:13:30,720
gapa plus beta lattice vectors or base

361
00:13:30,720 --> 00:13:32,800
vectors

362
00:13:32,800 --> 00:13:35,440
so why don't we just assume that this

363
00:13:35,440 --> 00:13:37,440
vector is indeed the shortest vector

364
00:13:37,440 --> 00:13:39,040
that is generated

365
00:13:39,040 --> 00:13:41,839
by these first k plus beta base vectors

366
00:13:41,839 --> 00:13:45,519
and it also lies in the dense subletters

367
00:13:45,519 --> 00:13:48,639
and this is exactly our estimate

368
00:13:48,639 --> 00:13:51,279
and following the same methodology of

369
00:13:51,279 --> 00:13:55,199
the 2016 estimate we then say that

370
00:13:55,199 --> 00:13:58,160
beta bkcz triggers this dsd cap event if

371
00:13:58,160 --> 00:14:00,880
the projection of this particular then

372
00:14:00,880 --> 00:14:03,519
density vector is less than the ground

373
00:14:03,519 --> 00:14:06,320
speed norm at the position kappa

374
00:14:06,320 --> 00:14:08,399
and note that the ground speed norm of

375
00:14:08,399 --> 00:14:09,920
this vector because we assume it's

376
00:14:09,920 --> 00:14:12,000
shortest one is given by the first

377
00:14:12,000 --> 00:14:13,199
minimum

378
00:14:13,199 --> 00:14:14,720
of the intersection

379
00:14:14,720 --> 00:14:16,720
between the dense subletters and the

380
00:14:16,720 --> 00:14:18,480
first and the let's spend by the first

381
00:14:18,480 --> 00:14:19,920
cables beta

382
00:14:19,920 --> 00:14:22,639
base vectors

383
00:14:22,639 --> 00:14:24,560
and to estimate this first minimum we

384
00:14:24,560 --> 00:14:26,639
have the minkowski bound

385
00:14:26,639 --> 00:14:28,639
that gives a bound of the first minimum

386
00:14:28,639 --> 00:14:30,399
in terms of the determinant

387
00:14:30,399 --> 00:14:32,800
of this lattice so in our case we need

388
00:14:32,800 --> 00:14:33,920
to

389
00:14:33,920 --> 00:14:36,160
guess the determinant of this

390
00:14:36,160 --> 00:14:38,320
intersection

391
00:14:38,320 --> 00:14:40,240
and to achieve this call we made a

392
00:14:40,240 --> 00:14:43,279
generalization of the path key trauma

393
00:14:43,279 --> 00:14:45,760
that says that for any n-dimensional

394
00:14:45,760 --> 00:14:47,680
subletters l-prime

395
00:14:47,680 --> 00:14:49,120
we can

396
00:14:49,120 --> 00:14:51,199
bound the determinant of this

397
00:14:51,199 --> 00:14:53,360
intersection with the first

398
00:14:53,360 --> 00:14:55,360
s base vectors

399
00:14:55,360 --> 00:14:57,199
and this dense subletters

400
00:14:57,199 --> 00:14:58,480
and this is always bounded by the

401
00:14:58,480 --> 00:15:00,800
determinant of this dead subletters

402
00:15:00,800 --> 00:15:03,279
multiplied again by some

403
00:15:03,279 --> 00:15:05,120
thing that depends on the cross-meat

404
00:15:05,120 --> 00:15:07,360
arms

405
00:15:08,240 --> 00:15:09,760
and to see that it's generalized by the

406
00:15:09,760 --> 00:15:12,720
keterol lemma let's just assume the the

407
00:15:12,720 --> 00:15:14,560
case that k is zero

408
00:15:14,560 --> 00:15:15,920
and then

409
00:15:15,920 --> 00:15:17,680
we in the proof you can assume that this

410
00:15:17,680 --> 00:15:18,880
is equal to one

411
00:15:18,880 --> 00:15:20,959
and then this gives exactly

412
00:15:20,959 --> 00:15:24,480
uh the old but the key through our level

413
00:15:24,480 --> 00:15:27,199
so we can analyze when bkc inserts such

414
00:15:27,199 --> 00:15:29,920
a then sublets vector at any position

415
00:15:29,920 --> 00:15:31,199
kappa

416
00:15:31,199 --> 00:15:33,680
and optimizing over this position we

417
00:15:33,680 --> 00:15:36,240
find that the best case at position

418
00:15:36,240 --> 00:15:38,880
around n minus beta of 2.

419
00:15:38,880 --> 00:15:40,880
so what we find is that bkc finds a

420
00:15:40,880 --> 00:15:42,880
dense supplement vector at position n

421
00:15:42,880 --> 00:15:44,639
minus beta of 2

422
00:15:44,639 --> 00:15:47,120
when beta is at least n over log squared

423
00:15:47,120 --> 00:15:48,000
q

424
00:15:48,000 --> 00:15:50,000
so note that asymptotically

425
00:15:50,000 --> 00:15:53,279
we still get kind of the same result

426
00:15:53,279 --> 00:15:56,240
however if we zoom in closer

427
00:15:56,240 --> 00:15:59,120
and take q equal to n to the power q

428
00:15:59,120 --> 00:16:01,120
and the size our secret key about n to

429
00:16:01,120 --> 00:16:02,639
the s

430
00:16:02,639 --> 00:16:05,920
and beta is linear in n

431
00:16:05,920 --> 00:16:08,079
then we do actually see some uh

432
00:16:08,079 --> 00:16:10,720
improvements namely with the old

433
00:16:10,720 --> 00:16:13,360
kirchhoff estimate we got that

434
00:16:13,360 --> 00:16:14,320
b

435
00:16:14,320 --> 00:16:16,800
b must be at least eight s over q

436
00:16:16,800 --> 00:16:19,680
squared and we improved it with a plus

437
00:16:19,680 --> 00:16:20,720
one

438
00:16:20,720 --> 00:16:23,279
in the denominator

439
00:16:23,279 --> 00:16:24,959
so what this means is that the fatigue

440
00:16:24,959 --> 00:16:27,680
point instead of lying at n to the power

441
00:16:27,680 --> 00:16:29,199
2.783

442
00:16:29,199 --> 00:16:33,680
it now lies at n to the power 2.484

443
00:16:33,680 --> 00:16:35,040
but more importantly because our

444
00:16:35,040 --> 00:16:37,440
analysis explains precisely what happens

445
00:16:37,440 --> 00:16:39,440
we can turn this into heuristic average

446
00:16:39,440 --> 00:16:40,880
case analysis

447
00:16:40,880 --> 00:16:42,320
and use this to make concrete

448
00:16:42,320 --> 00:16:43,839
predictions

449
00:16:43,839 --> 00:16:45,839
and we can see that now instead of just

450
00:16:45,839 --> 00:16:47,519
giving good predictions in the

451
00:16:47,519 --> 00:16:49,680
instructor scheme we can also give very

452
00:16:49,680 --> 00:16:51,680
concrete and precise predictions in the

453
00:16:51,680 --> 00:16:53,920
overstretch regime

454
00:16:53,920 --> 00:16:55,519
so given that we now understand the

455
00:16:55,519 --> 00:16:57,519
under stretch and overstretch regime we

456
00:16:57,519 --> 00:16:59,519
can also easily make predictions for the

457
00:16:59,519 --> 00:17:01,279
fatigue point

458
00:17:01,279 --> 00:17:04,240
so for ternary secrets f and g the

459
00:17:04,240 --> 00:17:05,919
concrete fatigue point seems to lie at

460
00:17:05,919 --> 00:17:07,919
around 0.004

461
00:17:07,919 --> 00:17:11,199
times n to the power 2.484

462
00:17:11,199 --> 00:17:13,039
and note that this fully explains why

463
00:17:13,039 --> 00:17:15,280
this fatigue point already lies very low

464
00:17:15,280 --> 00:17:17,520
in the experiments that we did

465
00:17:17,520 --> 00:17:19,280
however because the exponent is still

466
00:17:19,280 --> 00:17:21,359
rather large

467
00:17:21,359 --> 00:17:23,760
this fatigue point lies much higher than

468
00:17:23,760 --> 00:17:26,319
the nist parameters being used

469
00:17:26,319 --> 00:17:28,400
so all the schemes that are being used

470
00:17:28,400 --> 00:17:31,039
now indeed lie

471
00:17:31,039 --> 00:17:33,600
in the understudy regime

472
00:17:33,600 --> 00:17:35,039
so what's important to note in the

473
00:17:35,039 --> 00:17:36,880
overstretch regime the security really

474
00:17:36,880 --> 00:17:38,640
depends on the volume of this densa

475
00:17:38,640 --> 00:17:39,760
platas

476
00:17:39,760 --> 00:17:41,919
and if you sample a random ternary key

477
00:17:41,919 --> 00:17:43,440
then the volume of this dense subletters

478
00:17:43,440 --> 00:17:45,360
can vary a lot

479
00:17:45,360 --> 00:17:47,520
even the security in terms of the block

480
00:17:47,520 --> 00:17:51,440
size can vary from slightly below 30 all

481
00:17:51,440 --> 00:17:54,240
the way up to 50.

482
00:17:54,240 --> 00:17:55,760
so if you truly want to understand the

483
00:17:55,760 --> 00:17:58,640
security in this regime then just an

484
00:17:58,640 --> 00:18:00,960
average case analysis might not be

485
00:18:00,960 --> 00:18:02,640
enough

486
00:18:02,640 --> 00:18:04,720
so while our analysis captures most of

487
00:18:04,720 --> 00:18:06,960
the events that we see in practice

488
00:18:06,960 --> 00:18:09,120
and also allows us to give very concrete

489
00:18:09,120 --> 00:18:11,919
predictions that match experiments

490
00:18:11,919 --> 00:18:14,000
there are some events that we can't

491
00:18:14,000 --> 00:18:15,760
fully explain

492
00:18:15,760 --> 00:18:17,679
so we see that most events indeed happen

493
00:18:17,679 --> 00:18:21,120
around n minus the predicted block size

494
00:18:21,120 --> 00:18:24,080
and that's captured by our model however

495
00:18:24,080 --> 00:18:26,080
some of these dsd events happen at

496
00:18:26,080 --> 00:18:28,559
higher positions and these are not

497
00:18:28,559 --> 00:18:31,520
captured by our model

498
00:18:31,840 --> 00:18:34,080
additionally we note that the vectors

499
00:18:34,080 --> 00:18:36,960
that are inserted here are much longer

500
00:18:36,960 --> 00:18:39,120
than the ones we find here

501
00:18:39,120 --> 00:18:42,320
however their projection on this block

502
00:18:42,320 --> 00:18:44,320
is much much smaller than what you would

503
00:18:44,320 --> 00:18:45,520
expect

504
00:18:45,520 --> 00:18:46,880
so the probability of this happened

505
00:18:46,880 --> 00:18:48,960
happening is very small however there

506
00:18:48,960 --> 00:18:51,600
might be a lot of these these vectors

507
00:18:51,600 --> 00:18:53,600
and that might account for this

508
00:18:53,600 --> 00:18:55,440
probability

509
00:18:55,440 --> 00:18:56,799
and then also you have a very small

510
00:18:56,799 --> 00:18:58,559
probability that actually this vector is

511
00:18:58,559 --> 00:18:59,919
lifted back

512
00:18:59,919 --> 00:19:01,919
to the correct long

513
00:19:01,919 --> 00:19:03,840
then sublets vector

514
00:19:03,840 --> 00:19:07,200
and that's why we call them lucky lifts

515
00:19:07,200 --> 00:19:09,120
so in our work we give some starting

516
00:19:09,120 --> 00:19:10,640
points on how to

517
00:19:10,640 --> 00:19:13,120
run the analysis for these things

518
00:19:13,120 --> 00:19:15,840
but at the same time for experiments

519
00:19:15,840 --> 00:19:18,320
these things don't happen at any other

520
00:19:18,320 --> 00:19:19,840
block sizes than what you already

521
00:19:19,840 --> 00:19:20,960
predict

522
00:19:20,960 --> 00:19:23,760
so so far they don't seem to matter that

523
00:19:23,760 --> 00:19:24,799
much

524
00:19:24,799 --> 00:19:27,520
so let's get this to the key takeaways

525
00:19:27,520 --> 00:19:29,520
so we can now give concrete predictions

526
00:19:29,520 --> 00:19:31,520
for all values of the modulus queue both

527
00:19:31,520 --> 00:19:32,799
in the understretched and in the

528
00:19:32,799 --> 00:19:34,720
overstretched regime

529
00:19:34,720 --> 00:19:36,240
we now fully understand the fatigue

530
00:19:36,240 --> 00:19:37,200
points

531
00:19:37,200 --> 00:19:38,880
and while it lies much lower than

532
00:19:38,880 --> 00:19:40,799
expected it still lies well above nist

533
00:19:40,799 --> 00:19:42,799
parameters

534
00:19:42,799 --> 00:19:44,480
and you have to be worried about large

535
00:19:44,480 --> 00:19:46,880
variance in the volume of this dense

536
00:19:46,880 --> 00:19:48,960
sublettis as this has a large influence

537
00:19:48,960 --> 00:19:50,720
on the block size

538
00:19:50,720 --> 00:19:52,480
that's required

539
00:19:52,480 --> 00:19:54,240
so the code for all experiments is

540
00:19:54,240 --> 00:19:56,559
available at this address and thank you

541
00:19:56,559 --> 00:19:59,039
for watching this video

542
00:19:59,039 --> 00:20:01,840
here you can see the the bibliography

543
00:20:01,840 --> 00:20:03,440
thanks

544
00:20:03,440 --> 00:20:04,720
and i hope to see you soon at the

545
00:20:04,720 --> 00:20:07,760
physical conference

