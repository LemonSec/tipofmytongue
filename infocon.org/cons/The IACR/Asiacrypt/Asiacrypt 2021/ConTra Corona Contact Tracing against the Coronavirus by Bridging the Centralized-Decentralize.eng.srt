1
00:00:00,560 --> 00:00:02,480
hello and welcome to my presentation on

2
00:00:02,480 --> 00:00:05,040
contract corona this is joint work with

3
00:00:05,040 --> 00:00:07,200
vasily piskovinov gunnar hartung

4
00:00:07,200 --> 00:00:09,599
alexander koch john will acquire those

5
00:00:09,599 --> 00:00:11,920
trophy and my name is felix stern and i

6
00:00:11,920 --> 00:00:14,480
will be presenting our work

7
00:00:14,480 --> 00:00:16,640
on how we can improve privacy for

8
00:00:16,640 --> 00:00:20,000
contact tracing systems

9
00:00:21,039 --> 00:00:22,480
so

10
00:00:22,480 --> 00:00:24,160
currently in germany

11
00:00:24,160 --> 00:00:25,359
we have

12
00:00:25,359 --> 00:00:27,920
an official contact tracing app

13
00:00:27,920 --> 00:00:28,960
that

14
00:00:28,960 --> 00:00:30,480
uses the google apple exposure

15
00:00:30,480 --> 00:00:32,800
notification framework

16
00:00:32,800 --> 00:00:34,960
and has roughly

17
00:00:34,960 --> 00:00:38,640
downloads for about 40 of the population

18
00:00:38,640 --> 00:00:40,480
but whenever

19
00:00:40,480 --> 00:00:43,600
a new infection is detected only 20

20
00:00:43,600 --> 00:00:46,160
about 20 percent as seen in this graph

21
00:00:46,160 --> 00:00:47,680
on the right

22
00:00:47,680 --> 00:00:48,960
of those

23
00:00:48,960 --> 00:00:51,440
infections result in a key

24
00:00:51,440 --> 00:00:53,680
shared with the contact tracing app and

25
00:00:53,680 --> 00:00:55,199
then

26
00:00:55,199 --> 00:00:58,879
by that contacts being warned so about

27
00:00:58,879 --> 00:01:00,640
only one in five

28
00:01:00,640 --> 00:01:02,000
infections

29
00:01:02,000 --> 00:01:04,959
uses the contact tracing app to

30
00:01:04,959 --> 00:01:06,400
warn

31
00:01:06,400 --> 00:01:08,080
other

32
00:01:08,080 --> 00:01:11,080
people

33
00:01:12,000 --> 00:01:15,759
so in this talk i will like to

34
00:01:15,759 --> 00:01:18,080
um talk about the google apple exposure

35
00:01:18,080 --> 00:01:20,080
notification framework a bit as

36
00:01:20,080 --> 00:01:21,920
background and

37
00:01:21,920 --> 00:01:24,960
what are the privacy problems that

38
00:01:24,960 --> 00:01:26,560
what the privacy problems are that it

39
00:01:26,560 --> 00:01:28,720
leaks desired

40
00:01:28,720 --> 00:01:30,560
our goals

41
00:01:30,560 --> 00:01:32,960
how we would improve privacy upon the

42
00:01:32,960 --> 00:01:35,360
system and

43
00:01:35,360 --> 00:01:37,840
how we model security of our approach to

44
00:01:37,840 --> 00:01:40,960
have a better contact tracing system

45
00:01:40,960 --> 00:01:42,720
so first a bit about the google apple

46
00:01:42,720 --> 00:01:44,880
explosion notification framework and how

47
00:01:44,880 --> 00:01:47,920
it would work cryptographically

48
00:01:47,920 --> 00:01:50,880
so when a user installs the app

49
00:01:50,880 --> 00:01:51,840
the app

50
00:01:51,840 --> 00:01:54,640
draws a random key once per

51
00:01:54,640 --> 00:01:56,240
day

52
00:01:56,240 --> 00:01:58,719
which it uses to derive short term keys

53
00:01:58,719 --> 00:02:00,719
that are broadcasted and

54
00:02:00,719 --> 00:02:02,079
switched every

55
00:02:02,079 --> 00:02:05,200
about 15 minutes

56
00:02:05,200 --> 00:02:07,360
under normal operation

57
00:02:07,360 --> 00:02:10,000
the apps will then record all keys that

58
00:02:10,000 --> 00:02:12,319
are in proximity to them

59
00:02:12,319 --> 00:02:14,000
by regularly

60
00:02:14,000 --> 00:02:15,520
checking them

61
00:02:15,520 --> 00:02:18,160
receiving bluetooth communication

62
00:02:18,160 --> 00:02:20,400
and record them together with some meta

63
00:02:20,400 --> 00:02:24,480
information like signal strength

64
00:02:24,480 --> 00:02:26,640
when later on a participant gets

65
00:02:26,640 --> 00:02:28,000
infected

66
00:02:28,000 --> 00:02:29,920
they can

67
00:02:29,920 --> 00:02:31,840
and they are tested so the infection is

68
00:02:31,840 --> 00:02:34,879
detected they receive some kind of

69
00:02:34,879 --> 00:02:37,200
information

70
00:02:37,200 --> 00:02:38,160
like

71
00:02:38,160 --> 00:02:40,560
a transaction number

72
00:02:40,560 --> 00:02:42,959
and then they upload their secret key

73
00:02:42,959 --> 00:02:45,120
that they use to derive

74
00:02:45,120 --> 00:02:48,480
the short term identifiers

75
00:02:48,480 --> 00:02:50,800
and they will upload all their secret

76
00:02:50,800 --> 00:02:53,120
keys for the last 14 days

77
00:02:53,120 --> 00:02:56,879
to a back end and all apps regularly

78
00:02:56,879 --> 00:02:57,840
pull

79
00:02:57,840 --> 00:03:00,239
the secret keys from the back end

80
00:03:00,239 --> 00:03:01,380
will expand them

81
00:03:01,380 --> 00:03:02,640
[Music]

82
00:03:02,640 --> 00:03:05,360
again into those short term identifiers

83
00:03:05,360 --> 00:03:08,239
and check if they have seen any of those

84
00:03:08,239 --> 00:03:09,920
and if they have seen any of those they

85
00:03:09,920 --> 00:03:11,599
will accumulate

86
00:03:11,599 --> 00:03:14,159
the signal strength to approximate the

87
00:03:14,159 --> 00:03:15,519
risk

88
00:03:15,519 --> 00:03:18,080
and if it is somehow high the user will

89
00:03:18,080 --> 00:03:20,080
get warned

90
00:03:20,080 --> 00:03:22,159
and what the apps implement is just the

91
00:03:22,159 --> 00:03:23,920
management and backend information and

92
00:03:23,920 --> 00:03:26,319
all the other information like

93
00:03:26,319 --> 00:03:29,840
storing these identifiers and summing it

94
00:03:29,840 --> 00:03:30,959
up

95
00:03:30,959 --> 00:03:33,200
this is done by the operating system

96
00:03:33,200 --> 00:03:34,799
itself

97
00:03:34,799 --> 00:03:36,720
so the apps don't have

98
00:03:36,720 --> 00:03:39,120
direct access to this whole bluetooth

99
00:03:39,120 --> 00:03:41,440
interface

100
00:03:41,440 --> 00:03:43,040
and what are the privacy problems with

101
00:03:43,040 --> 00:03:44,640
this approach

102
00:03:44,640 --> 00:03:47,839
when a person is infected

103
00:03:48,000 --> 00:03:48,799
they

104
00:03:48,799 --> 00:03:51,360
need to upload their secret identities

105
00:03:51,360 --> 00:03:54,640
and thereby they will make all their

106
00:03:54,640 --> 00:03:57,200
short term identify files that they used

107
00:03:57,200 --> 00:03:59,439
over the day linkable

108
00:03:59,439 --> 00:04:01,439
so

109
00:04:01,439 --> 00:04:03,200
my 14

110
00:04:03,200 --> 00:04:05,680
short term and my 14 secret keys are not

111
00:04:05,680 --> 00:04:08,400
linkable they are just mixed with all

112
00:04:08,400 --> 00:04:10,799
the others when i upload them

113
00:04:10,799 --> 00:04:11,680
but

114
00:04:11,680 --> 00:04:14,159
when someone has met me twice during the

115
00:04:14,159 --> 00:04:15,439
day

116
00:04:15,439 --> 00:04:17,279
they can see that

117
00:04:17,279 --> 00:04:18,798
those two encounters were the same

118
00:04:18,798 --> 00:04:20,639
person

119
00:04:20,639 --> 00:04:22,800
this is not necessary for

120
00:04:22,800 --> 00:04:25,360
them being warned

121
00:04:25,360 --> 00:04:27,520
and additionally they

122
00:04:27,520 --> 00:04:29,440
learn which of the encounters and how

123
00:04:29,440 --> 00:04:31,360
many of the encounters during the day

124
00:04:31,360 --> 00:04:34,320
that you're warning so if they are

125
00:04:34,320 --> 00:04:36,479
um if they have been in contact with two

126
00:04:36,479 --> 00:04:39,280
infected persons they get to know which

127
00:04:39,280 --> 00:04:40,160
one

128
00:04:40,160 --> 00:04:43,120
that there have been two persons and

129
00:04:43,120 --> 00:04:45,040
which encounters they were so

130
00:04:45,040 --> 00:04:47,360
if they would somehow write down

131
00:04:47,360 --> 00:04:49,680
uh at what point in time

132
00:04:49,680 --> 00:04:52,479
and they met which person by

133
00:04:52,479 --> 00:04:55,040
where they were

134
00:04:55,040 --> 00:04:57,040
then they could later on

135
00:04:57,040 --> 00:04:59,120
look at the record of short-term

136
00:04:59,120 --> 00:05:01,199
identifiers see which one have matches

137
00:05:01,199 --> 00:05:02,080
and then

138
00:05:02,080 --> 00:05:03,440
see

139
00:05:03,440 --> 00:05:06,160
where exactly they were infected

140
00:05:06,160 --> 00:05:08,479
and also this is not really information

141
00:05:08,479 --> 00:05:11,280
that they would necessarily necessarily

142
00:05:11,280 --> 00:05:12,639
need they would only need the

143
00:05:12,639 --> 00:05:13,840
information that they have been in

144
00:05:13,840 --> 00:05:16,080
contact with an infected person and that

145
00:05:16,080 --> 00:05:17,440
they should

146
00:05:17,440 --> 00:05:20,880
probably go quarantine

147
00:05:21,360 --> 00:05:24,160
so our goal is to improve the privacy of

148
00:05:24,160 --> 00:05:27,280
infected participants more

149
00:05:27,280 --> 00:05:30,320
one could argue that they should be um

150
00:05:30,320 --> 00:05:32,560
that only a few participants should be

151
00:05:32,560 --> 00:05:36,800
infected but as the pandemic goes for

152
00:05:36,800 --> 00:05:40,320
many many people become infected

153
00:05:40,320 --> 00:05:43,120
and yeah they are potentially the more

154
00:05:43,120 --> 00:05:46,960
vulnerable participants in the system

155
00:05:48,400 --> 00:05:51,360
and we hope that um increasing particip

156
00:05:51,360 --> 00:05:53,840
increasing privacy could also help to

157
00:05:53,840 --> 00:05:55,520
convince people

158
00:05:55,520 --> 00:05:59,039
um to more likely voluntarily share

159
00:05:59,039 --> 00:06:02,240
their diagnostic skills

160
00:06:02,240 --> 00:06:04,240
and we want to do this in a way where we

161
00:06:04,240 --> 00:06:06,160
do not compromise the purchase the

162
00:06:06,160 --> 00:06:08,560
privacy of all other participants of

163
00:06:08,560 --> 00:06:10,479
course we don't want some central

164
00:06:10,479 --> 00:06:12,800
authority that can build up

165
00:06:12,800 --> 00:06:14,960
contact graphs or

166
00:06:14,960 --> 00:06:18,000
movement profiles

167
00:06:18,240 --> 00:06:20,160
and we want to give a security model so

168
00:06:20,160 --> 00:06:21,680
we can see

169
00:06:21,680 --> 00:06:24,080
which information exactly is leaked

170
00:06:24,080 --> 00:06:26,720
about the contacts

171
00:06:26,720 --> 00:06:28,960
even in the ideal functionality of

172
00:06:28,960 --> 00:06:31,680
contact tracing which we would require

173
00:06:31,680 --> 00:06:34,560
and which we would want to leak

174
00:06:34,560 --> 00:06:35,600
so

175
00:06:35,600 --> 00:06:37,120
our approach is

176
00:06:37,120 --> 00:06:38,880
kind of hybrid between a fully

177
00:06:38,880 --> 00:06:40,720
decentralized and

178
00:06:40,720 --> 00:06:43,039
some centralized approach

179
00:06:43,039 --> 00:06:44,479
where we

180
00:06:44,479 --> 00:06:47,440
have some central logic

181
00:06:47,440 --> 00:06:49,199
but we would like to have the central

182
00:06:49,199 --> 00:06:51,680
logic split up into three

183
00:06:51,680 --> 00:06:54,000
distinct functionalities that are

184
00:06:54,000 --> 00:06:55,919
ideally operated by

185
00:06:55,919 --> 00:06:57,759
independent parties so that they do not

186
00:06:57,759 --> 00:06:59,039
collaborate

187
00:06:59,039 --> 00:07:00,560
and

188
00:07:00,560 --> 00:07:02,880
share information

189
00:07:02,880 --> 00:07:04,560
um

190
00:07:04,560 --> 00:07:06,880
more share more information than

191
00:07:06,880 --> 00:07:09,199
required by the interfaces that we

192
00:07:09,199 --> 00:07:11,759
specify

193
00:07:12,000 --> 00:07:14,720
and the users in the system would also

194
00:07:14,720 --> 00:07:17,759
regularly once per day draw a new secret

195
00:07:17,759 --> 00:07:19,039
key

196
00:07:19,039 --> 00:07:21,520
and then would register them

197
00:07:21,520 --> 00:07:24,799
with the submission server

198
00:07:25,520 --> 00:07:26,560
and

199
00:07:26,560 --> 00:07:28,560
they would do that through some kind of

200
00:07:28,560 --> 00:07:30,639
anonymizing proxy because that's also

201
00:07:30,639 --> 00:07:33,280
something that is overlooked in current

202
00:07:33,280 --> 00:07:34,880
um applications

203
00:07:34,880 --> 00:07:36,880
that even though

204
00:07:36,880 --> 00:07:38,880
all this contact tracing might be

205
00:07:38,880 --> 00:07:41,039
pseudonymous

206
00:07:41,039 --> 00:07:43,120
um the moment that you interact with

207
00:07:43,120 --> 00:07:46,000
this central infrastructure

208
00:07:46,000 --> 00:07:48,560
if you don't take additional precautions

209
00:07:48,560 --> 00:07:50,160
you

210
00:07:50,160 --> 00:07:52,240
implicitly leak your ip address and ip

211
00:07:52,240 --> 00:07:54,080
addresses can be resolved to natural

212
00:07:54,080 --> 00:07:56,560
persons

213
00:07:56,960 --> 00:07:58,720
so we would uh

214
00:07:58,720 --> 00:08:00,800
would want um some kind of anonymizing

215
00:08:00,800 --> 00:08:02,000
proxy here

216
00:08:02,000 --> 00:08:03,919
operated by

217
00:08:03,919 --> 00:08:06,960
an independent party

218
00:08:08,080 --> 00:08:10,879
and the apps would yeah as i said um

219
00:08:10,879 --> 00:08:12,800
upload their

220
00:08:12,800 --> 00:08:15,520
regularly generated identifiers

221
00:08:15,520 --> 00:08:19,280
and then query the system for warnings

222
00:08:19,280 --> 00:08:20,400
and

223
00:08:20,400 --> 00:08:22,240
let's see how

224
00:08:22,240 --> 00:08:25,199
an infection is reported so when

225
00:08:25,199 --> 00:08:27,199
the user gets some positive test and

226
00:08:27,199 --> 00:08:28,400
they

227
00:08:28,400 --> 00:08:30,720
the positive test is somehow authorized

228
00:08:30,720 --> 00:08:31,759
to

229
00:08:31,759 --> 00:08:34,479
a ton number for example

230
00:08:34,479 --> 00:08:36,399
as is done with the

231
00:08:36,399 --> 00:08:40,559
most of the current contact tracing apps

232
00:08:40,559 --> 00:08:43,120
the users in this system upload all the

233
00:08:43,120 --> 00:08:45,440
identities that they recorded so they do

234
00:08:45,440 --> 00:08:48,560
not upload the identities

235
00:08:48,560 --> 00:08:50,880
that they broadcasted themselves but

236
00:08:50,880 --> 00:08:52,560
they upload the identities that they

237
00:08:52,560 --> 00:08:54,480
recorded in order to get all those

238
00:08:54,480 --> 00:08:56,160
people want

239
00:08:56,160 --> 00:08:58,240
in that way this approach is kind of

240
00:08:58,240 --> 00:08:59,680
dual

241
00:08:59,680 --> 00:09:00,880
to

242
00:09:00,880 --> 00:09:02,560
the approach that the google app

243
00:09:02,560 --> 00:09:05,200
exposure notification framework uses

244
00:09:05,200 --> 00:09:07,200
these uploaded identifiers are then

245
00:09:07,200 --> 00:09:08,640
translated by

246
00:09:08,640 --> 00:09:10,640
the matching and the warning server into

247
00:09:10,640 --> 00:09:12,800
warning identifiers and

248
00:09:12,800 --> 00:09:14,160
then there will be one warning

249
00:09:14,160 --> 00:09:17,600
identifier per person and today

250
00:09:17,600 --> 00:09:19,920
for each person that should be warned so

251
00:09:19,920 --> 00:09:21,760
even if you

252
00:09:21,760 --> 00:09:24,399
are warned by two people

253
00:09:24,399 --> 00:09:25,920
in the end on the warning server there

254
00:09:25,920 --> 00:09:27,760
will be only one warning identifier for

255
00:09:27,760 --> 00:09:30,320
you and you cannot tell how many people

256
00:09:30,320 --> 00:09:32,880
have warned you

257
00:09:33,200 --> 00:09:37,200
thereby protecting their privacy

258
00:09:37,200 --> 00:09:38,480
now a bit more

259
00:09:38,480 --> 00:09:40,560
on our security model

260
00:09:40,560 --> 00:09:41,920
as it's

261
00:09:41,920 --> 00:09:44,640
common nowadays we compare ourselves

262
00:09:44,640 --> 00:09:47,440
with an ideal functionality and then

263
00:09:47,440 --> 00:09:49,440
later on prove that there is no

264
00:09:49,440 --> 00:09:51,360
environment

265
00:09:51,360 --> 00:09:54,080
that can distinguish if it is executing

266
00:09:54,080 --> 00:09:56,320
with an adversary and the real protocol

267
00:09:56,320 --> 00:09:58,560
or if it is in an experiment

268
00:09:58,560 --> 00:09:59,360
with

269
00:09:59,360 --> 00:10:00,880
a simulator

270
00:10:00,880 --> 00:10:03,279
that uses the adversary

271
00:10:03,279 --> 00:10:04,880
uh and

272
00:10:04,880 --> 00:10:06,160
that

273
00:10:06,160 --> 00:10:08,560
has access to an ideal functionality and

274
00:10:08,560 --> 00:10:10,480
the ideal functionality only reveals

275
00:10:10,480 --> 00:10:12,880
information that is necessary for the

276
00:10:12,880 --> 00:10:15,839
functionality we want to achieve

277
00:10:15,839 --> 00:10:18,399
and the environment in our case is

278
00:10:18,399 --> 00:10:20,240
allowed to choose the physical scenario

279
00:10:20,240 --> 00:10:22,880
so the scenario

280
00:10:22,880 --> 00:10:25,120
which persons are in contact with each

281
00:10:25,120 --> 00:10:27,680
each other at what point in time

282
00:10:27,680 --> 00:10:29,839
and at what point in time which persons

283
00:10:29,839 --> 00:10:32,399
become infected and then will warn other

284
00:10:32,399 --> 00:10:34,399
participants

285
00:10:34,399 --> 00:10:36,880
we model time as

286
00:10:36,880 --> 00:10:37,760
um

287
00:10:37,760 --> 00:10:40,640
epochs that are just incremented

288
00:10:40,640 --> 00:10:43,040
over time and we have this long-term

289
00:10:43,040 --> 00:10:44,880
epochs

290
00:10:44,880 --> 00:10:47,200
that is the one daytime interval that's

291
00:10:47,200 --> 00:10:48,480
usually used

292
00:10:48,480 --> 00:10:50,240
and the short term epochs

293
00:10:50,240 --> 00:10:52,240
uh the epochs

294
00:10:52,240 --> 00:10:55,600
how often the identifiers are rotated

295
00:10:55,600 --> 00:10:59,800
um yeah are part of that

296
00:11:00,079 --> 00:11:02,560
now a bit more about how the contact

297
00:11:02,560 --> 00:11:04,800
graph is modeled

298
00:11:04,800 --> 00:11:09,040
so when we have a contact graph

299
00:11:09,040 --> 00:11:10,880
this is such a contact graph that the

300
00:11:10,880 --> 00:11:13,839
environment would specify

301
00:11:13,839 --> 00:11:17,600
model it as a directed graph

302
00:11:17,600 --> 00:11:18,959
because

303
00:11:18,959 --> 00:11:21,439
even though

304
00:11:21,519 --> 00:11:23,279
you would in the first

305
00:11:23,279 --> 00:11:26,839
moment think of contexts like something

306
00:11:26,839 --> 00:11:28,480
undirected

307
00:11:28,480 --> 00:11:31,920
um in the real world if you probably

308
00:11:31,920 --> 00:11:35,279
send bluetooth messages to people and

309
00:11:35,279 --> 00:11:37,120
we use that as a

310
00:11:37,120 --> 00:11:39,200
model for if you are in contact with

311
00:11:39,200 --> 00:11:41,519
someone those bluetooth messages might

312
00:11:41,519 --> 00:11:43,760
only receive it might only go through in

313
00:11:43,760 --> 00:11:46,399
one direction

314
00:11:46,399 --> 00:11:48,880
um and that's why we don't chose we

315
00:11:48,880 --> 00:11:51,360
chose to not restrict this graph to a

316
00:11:51,360 --> 00:11:54,000
undirected graph so in this case

317
00:11:54,000 --> 00:11:56,639
um bluetooth messages from ia reach c

318
00:11:56,639 --> 00:11:58,000
but not the other way around for

319
00:11:58,000 --> 00:12:00,800
whatever reason

320
00:12:01,120 --> 00:12:03,120
and then there are notes b and d in this

321
00:12:03,120 --> 00:12:04,000
graph

322
00:12:04,000 --> 00:12:06,720
and those notes are corrupted so the

323
00:12:06,720 --> 00:12:08,560
adversary can statically corrupt some

324
00:12:08,560 --> 00:12:10,399
participants and all those

325
00:12:10,399 --> 00:12:12,720
participants would then try to

326
00:12:12,720 --> 00:12:14,560
collaboratively

327
00:12:14,560 --> 00:12:16,560
break the security of

328
00:12:16,560 --> 00:12:18,560
and break the privacy of some other

329
00:12:18,560 --> 00:12:21,760
participants in the system

330
00:12:22,839 --> 00:12:25,200
yeah and

331
00:12:25,200 --> 00:12:27,920
when we have this contact graph

332
00:12:27,920 --> 00:12:29,279
some information about this contact

333
00:12:29,279 --> 00:12:30,639
graph needs to be leaked to the

334
00:12:30,639 --> 00:12:32,639
adversary because we cannot hide it

335
00:12:32,639 --> 00:12:34,320
anyway

336
00:12:34,320 --> 00:12:35,040
and

337
00:12:35,040 --> 00:12:36,880
yeah in order for the

338
00:12:36,880 --> 00:12:38,639
later on to be able to

339
00:12:38,639 --> 00:12:40,320
improve security we need to make this

340
00:12:40,320 --> 00:12:42,079
leakage explicit

341
00:12:42,079 --> 00:12:43,680
so for example

342
00:12:43,680 --> 00:12:46,160
this edge between the corrupted nodes b

343
00:12:46,160 --> 00:12:47,200
and d

344
00:12:47,200 --> 00:12:49,279
the adversary can always find out if

345
00:12:49,279 --> 00:12:52,639
there is this edge and

346
00:12:52,639 --> 00:12:55,360
that it's only this direction because it

347
00:12:55,360 --> 00:12:57,440
can just let the corrupted party be send

348
00:12:57,440 --> 00:12:58,880
a bluetooth broadcast with some

349
00:12:58,880 --> 00:13:00,320
arbitrary value

350
00:13:00,320 --> 00:13:04,079
and if party d receives that value

351
00:13:04,079 --> 00:13:05,920
it's clear that this edge has to be

352
00:13:05,920 --> 00:13:07,440
present so

353
00:13:07,440 --> 00:13:09,519
in the the contact graph all edges

354
00:13:09,519 --> 00:13:12,240
between only corrupted nodes are just

355
00:13:12,240 --> 00:13:14,160
copied over

356
00:13:14,160 --> 00:13:16,959
edges from honest nodes are also copied

357
00:13:16,959 --> 00:13:18,800
over but

358
00:13:18,800 --> 00:13:21,839
um as shown here in the right graph the

359
00:13:21,839 --> 00:13:23,200
lines

360
00:13:23,200 --> 00:13:26,000
um of this nodes are dashed lines

361
00:13:26,000 --> 00:13:28,079
which should indicate that the adversary

362
00:13:28,079 --> 00:13:30,320
does not get the full identity of those

363
00:13:30,320 --> 00:13:32,639
nodes but only a pseudonym that's

364
00:13:32,639 --> 00:13:34,800
switched every short-term epoch

365
00:13:34,800 --> 00:13:36,800
so the environment can set a new contact

366
00:13:36,800 --> 00:13:39,040
graph every short-term epoch

367
00:13:39,040 --> 00:13:42,079
and the pseudonym for a is chosen fresh

368
00:13:42,079 --> 00:13:44,399
every time so the adversary cannot see

369
00:13:44,399 --> 00:13:46,639
if this is which node of from the

370
00:13:46,639 --> 00:13:50,639
previous contact graph this represents

371
00:13:51,680 --> 00:13:53,839
and as you see there are also edges

372
00:13:53,839 --> 00:13:56,240
outgoing from the corrupted nodes

373
00:13:56,240 --> 00:13:57,600
but there

374
00:13:57,600 --> 00:13:59,279
there's even less information there

375
00:13:59,279 --> 00:14:02,399
because for each outgoing nodes edges

376
00:14:02,399 --> 00:14:06,639
the nodes target nodes are splitted

377
00:14:07,199 --> 00:14:08,639
so

378
00:14:08,639 --> 00:14:10,560
instead of

379
00:14:10,560 --> 00:14:12,639
this node for a and this node for a

380
00:14:12,639 --> 00:14:15,600
being the same node we made

381
00:14:15,600 --> 00:14:18,399
one each for each corrupted note as the

382
00:14:18,399 --> 00:14:20,880
adversary cannot distinguish

383
00:14:20,880 --> 00:14:23,519
if the broadcasts from b and d reach the

384
00:14:23,519 --> 00:14:26,079
same honest note or only reach different

385
00:14:26,079 --> 00:14:28,800
honest notes

386
00:14:28,800 --> 00:14:29,680
but

387
00:14:29,680 --> 00:14:32,079
we modeled it as they

388
00:14:32,079 --> 00:14:34,240
as the as if the adversary can detect

389
00:14:34,240 --> 00:14:37,279
how many honest nodes

390
00:14:37,279 --> 00:14:39,839
the corrupted broadcasts reach

391
00:14:39,839 --> 00:14:42,639
because when later node b gets infected

392
00:14:42,639 --> 00:14:44,639
the number of infected participants will

393
00:14:44,639 --> 00:14:46,399
go up and that's something that the

394
00:14:46,399 --> 00:14:49,920
adversary will be able to notice

395
00:14:50,800 --> 00:14:53,279
so a bit more detail on the real ideal

396
00:14:53,279 --> 00:14:55,760
modeling

397
00:14:56,720 --> 00:14:59,040
yeah as we compare the protocol

398
00:14:59,040 --> 00:15:00,720
execution in the real world where the

399
00:15:00,720 --> 00:15:01,920
adversary

400
00:15:01,920 --> 00:15:04,399
interacts with parties that execute the

401
00:15:04,399 --> 00:15:07,040
protocol i specified

402
00:15:07,040 --> 00:15:08,959
um and an environment that gives them

403
00:15:08,959 --> 00:15:10,160
the inputs

404
00:15:10,160 --> 00:15:11,440
and that

405
00:15:11,440 --> 00:15:13,279
can talk arbitrary messages with an

406
00:15:13,279 --> 00:15:16,399
adversary interactively at any time

407
00:15:16,399 --> 00:15:19,680
we have an ideal world on the other side

408
00:15:19,680 --> 00:15:22,240
where the adversary is wrapped in a

409
00:15:22,240 --> 00:15:23,519
simulator

410
00:15:23,519 --> 00:15:25,680
so all messages that the adversary saw

411
00:15:25,680 --> 00:15:28,160
in the real world

412
00:15:28,160 --> 00:15:29,120
happen

413
00:15:29,120 --> 00:15:30,720
the simulator needs to build in the

414
00:15:30,720 --> 00:15:34,079
ideal world so that the adversary

415
00:15:34,079 --> 00:15:38,839
feels as if it is in the real world

416
00:15:40,480 --> 00:15:42,560
now how does the contact graph play into

417
00:15:42,560 --> 00:15:43,680
all this

418
00:15:43,680 --> 00:15:45,759
when the environment regularly specifies

419
00:15:45,759 --> 00:15:47,920
a new contact graph it will send this to

420
00:15:47,920 --> 00:15:52,320
a special designated party pmat

421
00:15:52,320 --> 00:15:54,959
which will only forward it to an ideal

422
00:15:54,959 --> 00:15:57,680
functionality in the real model

423
00:15:57,680 --> 00:15:59,839
um that represents how the physical

424
00:15:59,839 --> 00:16:02,480
world interacts so we don't specify this

425
00:16:02,480 --> 00:16:05,839
as a program so we we specify this as an

426
00:16:05,839 --> 00:16:08,880
ideal trusted program

427
00:16:08,880 --> 00:16:11,360
to to model the way we expect the

428
00:16:11,360 --> 00:16:13,519
physical world to behave

429
00:16:13,519 --> 00:16:15,199
and in this case this means the

430
00:16:15,199 --> 00:16:17,120
environment can specify which parties

431
00:16:17,120 --> 00:16:18,160
are

432
00:16:18,160 --> 00:16:20,079
in proximity to each other by specifying

433
00:16:20,079 --> 00:16:22,560
such a contact graph and when then party

434
00:16:22,560 --> 00:16:26,639
p2 will broadcast an identifier

435
00:16:26,639 --> 00:16:29,279
fmat will look up in the current contact

436
00:16:29,279 --> 00:16:31,600
graph which parties are in proximity and

437
00:16:31,600 --> 00:16:34,160
forward the the broadcast

438
00:16:34,160 --> 00:16:37,639
to those parties

439
00:16:37,759 --> 00:16:40,079
and in the ideal world we would replace

440
00:16:40,079 --> 00:16:41,920
all the protocol execution with an ideal

441
00:16:41,920 --> 00:16:43,440
functionality

442
00:16:43,440 --> 00:16:45,040
this is fct

443
00:16:45,040 --> 00:16:47,360
and fct will just receive the inputs

444
00:16:47,360 --> 00:16:50,000
from all the parties so the parties here

445
00:16:50,000 --> 00:16:51,920
on the left they execute the protocol as

446
00:16:51,920 --> 00:16:53,279
specified

447
00:16:53,279 --> 00:16:54,639
and the parties here on the right will

448
00:16:54,639 --> 00:16:56,880
just forward all their inputs and

449
00:16:56,880 --> 00:17:00,959
receive their outputs directly from fct

450
00:17:00,959 --> 00:17:02,639
and you may notice that the ideal

451
00:17:02,639 --> 00:17:04,799
functionality fm that was present here

452
00:17:04,799 --> 00:17:06,319
in the real world is missing in the

453
00:17:06,319 --> 00:17:08,799
ideal world this is because

454
00:17:08,799 --> 00:17:10,640
the contact graph that the environment

455
00:17:10,640 --> 00:17:12,240
sends to pmat

456
00:17:12,240 --> 00:17:13,439
is forwarded

457
00:17:13,439 --> 00:17:16,640
directly to fct and fct can then use the

458
00:17:16,640 --> 00:17:19,439
contact graph to look up which part is

459
00:17:19,439 --> 00:17:21,679
in proximity to each other and then by

460
00:17:21,679 --> 00:17:24,079
that which party should be warned

461
00:17:24,079 --> 00:17:27,438
from which infection

462
00:17:28,079 --> 00:17:30,080
to

463
00:17:30,080 --> 00:17:31,600
best model

464
00:17:31,600 --> 00:17:33,679
the ideal functionality we would want

465
00:17:33,679 --> 00:17:36,240
from contact tracing

466
00:17:36,240 --> 00:17:37,840
and in order for the simulator to

467
00:17:37,840 --> 00:17:39,919
simulate all the messages that the

468
00:17:39,919 --> 00:17:43,039
adversary sees in the real world

469
00:17:43,039 --> 00:17:45,120
we would need to send in this leakage

470
00:17:45,120 --> 00:17:47,600
graph that we discussed earlier and this

471
00:17:47,600 --> 00:17:50,160
is done by fct explicitly sending the

472
00:17:50,160 --> 00:17:51,919
leakage graph as we described to the

473
00:17:51,919 --> 00:17:54,480
simulator

474
00:17:55,600 --> 00:17:57,919
so as a conclusion

475
00:17:57,919 --> 00:18:00,799
the exposure notification framework as

476
00:18:00,799 --> 00:18:02,720
proposed by google and apple is a great

477
00:18:02,720 --> 00:18:04,880
first step compared to

478
00:18:04,880 --> 00:18:07,120
centralized contact tracing information

479
00:18:07,120 --> 00:18:08,400
where all

480
00:18:08,400 --> 00:18:10,559
encounters are just stored centrally and

481
00:18:10,559 --> 00:18:12,480
some central authority has the

482
00:18:12,480 --> 00:18:16,559
possibility to access this data

483
00:18:17,039 --> 00:18:18,799
and

484
00:18:18,799 --> 00:18:20,000
but even

485
00:18:20,000 --> 00:18:24,000
this leaves something to desire so

486
00:18:24,400 --> 00:18:26,400
we present an approach that can protect

487
00:18:26,400 --> 00:18:29,280
privacy better especially the privacy

488
00:18:29,280 --> 00:18:32,160
for the effective participants and as

489
00:18:32,160 --> 00:18:34,320
current discussions about how

490
00:18:34,320 --> 00:18:36,000
one would

491
00:18:36,000 --> 00:18:38,160
continue developing on those

492
00:18:38,160 --> 00:18:40,320
contact tracing apps shows

493
00:18:40,320 --> 00:18:42,400
every information that is theoretically

494
00:18:42,400 --> 00:18:44,000
there

495
00:18:44,000 --> 00:18:46,640
will try to be used so if we can protect

496
00:18:46,640 --> 00:18:48,640
such information cryptographically we

497
00:18:48,640 --> 00:18:49,520
might

498
00:18:49,520 --> 00:18:52,240
um prevent such

499
00:18:52,240 --> 00:18:55,360
additional privacy intrusion

500
00:18:55,360 --> 00:18:56,400
and

501
00:18:56,400 --> 00:18:58,400
to

502
00:18:58,400 --> 00:19:00,960
show that our model provides privacy

503
00:19:00,960 --> 00:19:02,000
better we

504
00:19:02,000 --> 00:19:03,679
give a security model

505
00:19:03,679 --> 00:19:05,840
and show

506
00:19:05,840 --> 00:19:08,720
how our protocol is secure in this model

507
00:19:08,720 --> 00:19:12,320
and while in the conference version we

508
00:19:12,320 --> 00:19:15,039
focus only on

509
00:19:15,039 --> 00:19:17,360
proving security against

510
00:19:17,360 --> 00:19:18,640
honest

511
00:19:18,640 --> 00:19:21,120
service in the full version that's given

512
00:19:21,120 --> 00:19:23,679
under this link we give more detail on

513
00:19:23,679 --> 00:19:26,480
how to prove security for

514
00:19:26,480 --> 00:19:28,960
the case when those servers are

515
00:19:28,960 --> 00:19:30,080
corrupted

516
00:19:30,080 --> 00:19:33,639
thanks for your attention

