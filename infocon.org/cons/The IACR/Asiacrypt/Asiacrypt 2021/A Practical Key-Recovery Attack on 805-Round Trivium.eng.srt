1
00:00:01,199 --> 00:00:03,840
hello everyone it is our pleasure to

2
00:00:03,840 --> 00:00:06,879
share our work a practical key recovery

3
00:00:06,879 --> 00:00:10,080
attack on eight hundred and five-rounded

4
00:00:10,080 --> 00:00:12,719
film here

5
00:00:12,960 --> 00:00:15,040
in the following we shall introduce our

6
00:00:15,040 --> 00:00:19,279
work from the following five aspects

7
00:00:19,279 --> 00:00:22,080
travium is a beta oriented string cypher

8
00:00:22,080 --> 00:00:24,800
designed by chrysotovo the canoe and

9
00:00:24,800 --> 00:00:28,160
butt preview it was selected as one of

10
00:00:28,160 --> 00:00:31,439
the extreme hardware oriented finalists

11
00:00:31,439 --> 00:00:34,480
and it was specified as an international

12
00:00:34,480 --> 00:00:37,760
standard on the rso iec

13
00:00:37,760 --> 00:00:40,800
both the key size and the resize are 80

14
00:00:40,800 --> 00:00:44,800
bits it contains a 280

15
00:00:44,800 --> 00:00:47,360
bit internal state the number of

16
00:00:47,360 --> 00:00:52,039
initialization runs is 1152

17
00:00:53,600 --> 00:00:57,520
this figure shows an overview of trivial

18
00:00:57,520 --> 00:01:00,320
and the sudoku of tribune is shown as

19
00:01:00,320 --> 00:01:02,719
follows

20
00:01:02,800 --> 00:01:04,239
the cube attack

21
00:01:04,239 --> 00:01:07,200
which was first proposed by dina and

22
00:01:07,200 --> 00:01:10,479
xiaomi is one of the most important

23
00:01:10,479 --> 00:01:12,799
crevator analysts analysis technique

24
00:01:12,799 --> 00:01:15,759
against your view

25
00:01:15,759 --> 00:01:18,400
since proposed cube attacks attract

26
00:01:18,400 --> 00:01:20,320
mainly attentions

27
00:01:20,320 --> 00:01:21,119
and

28
00:01:21,119 --> 00:01:24,479
lost good ideas such as

29
00:01:24,479 --> 00:01:27,680
mobius transformation division property

30
00:01:27,680 --> 00:01:29,840
and the correlation cube attacks were

31
00:01:29,840 --> 00:01:34,320
proposed to improve cuban tax

32
00:01:34,479 --> 00:01:36,720
in the following we shall introduce the

33
00:01:36,720 --> 00:01:40,079
basics of cuba attacks

34
00:01:40,079 --> 00:01:42,159
let f be n

35
00:01:42,159 --> 00:01:44,960
and variable boolean function and

36
00:01:44,960 --> 00:01:50,720
i be a subset of variable indexes

37
00:01:51,040 --> 00:01:51,920
then

38
00:01:51,920 --> 00:01:56,479
f could be written as following

39
00:01:56,719 --> 00:01:59,360
the polynomial p i is called the

40
00:01:59,360 --> 00:02:03,200
superpoly of i in f

41
00:02:04,000 --> 00:02:07,439
a demand a d dimensional cube c i is a

42
00:02:07,439 --> 00:02:10,720
set of assignments consisting of

43
00:02:10,720 --> 00:02:12,640
2 to the power d

44
00:02:12,640 --> 00:02:14,800
and tables in which

45
00:02:14,800 --> 00:02:17,680
the variables indexed by i are assigned

46
00:02:17,680 --> 00:02:21,040
to all the possible combinations of

47
00:02:21,040 --> 00:02:23,920
0 or 1 while the other

48
00:02:23,920 --> 00:02:27,920
variables remain and determine

49
00:02:29,840 --> 00:02:30,720
then

50
00:02:30,720 --> 00:02:31,840
p i

51
00:02:31,840 --> 00:02:34,959
is equal to the summation of

52
00:02:34,959 --> 00:02:39,200
function derived by each element in ci

53
00:02:39,200 --> 00:02:40,480
note that

54
00:02:40,480 --> 00:02:42,800
two evaluate pi

55
00:02:42,800 --> 00:02:45,519
2 to the power d summations are always

56
00:02:45,519 --> 00:02:47,920
needed

57
00:02:49,599 --> 00:02:53,280
for stream servers the function f is the

58
00:02:53,280 --> 00:02:56,160
polynomial representation of the first

59
00:02:56,160 --> 00:02:57,200
order

60
00:02:57,200 --> 00:02:59,440
key string bit on the key and array

61
00:02:59,440 --> 00:03:01,519
variables

62
00:03:01,519 --> 00:03:02,800
let i

63
00:03:02,800 --> 00:03:07,760
be a subset of ie indexes and d be the

64
00:03:07,760 --> 00:03:10,640
order of set i

65
00:03:10,640 --> 00:03:13,599
the ci be a set of assignments of iris

66
00:03:13,599 --> 00:03:17,040
variables consisting of 2 to the power d

67
00:03:17,040 --> 00:03:19,120
and tables in which

68
00:03:19,120 --> 00:03:22,640
the variables indexed by i are assigned

69
00:03:22,640 --> 00:03:26,920
to the all the possible combination of

70
00:03:26,920 --> 00:03:30,560
01 while the other iv variables are

71
00:03:30,560 --> 00:03:34,640
assigned to zero or fixed constants

72
00:03:34,640 --> 00:03:37,920
then the superpoli of rf which is equal

73
00:03:37,920 --> 00:03:41,120
to the summation of functions derived by

74
00:03:41,120 --> 00:03:43,440
elements of aging ci

75
00:03:43,440 --> 00:03:46,879
is a function on key variable

76
00:03:46,879 --> 00:03:49,760
there are two phases in cube attacks the

77
00:03:49,760 --> 00:03:52,560
first offense is offline phase which is

78
00:03:52,560 --> 00:03:55,120
independent of a sacred key

79
00:03:55,120 --> 00:03:57,760
during this phase the aim is to find

80
00:03:57,760 --> 00:04:00,640
some useful symbol police in sacred key

81
00:04:00,640 --> 00:04:02,239
variables

82
00:04:02,239 --> 00:04:05,040
the second phase is online phase in this

83
00:04:05,040 --> 00:04:07,680
phase the task is to solve a system of

84
00:04:07,680 --> 00:04:10,799
equations defined by superpolice under

85
00:04:10,799 --> 00:04:12,840
the secret

86
00:04:12,840 --> 00:04:16,478
key traditionally low degree tests such

87
00:04:16,478 --> 00:04:19,120
as blr linearity test

88
00:04:19,120 --> 00:04:20,000
and

89
00:04:20,000 --> 00:04:22,960
capacity tests are used to find

90
00:04:22,960 --> 00:04:25,759
balance the superpolis containing sacred

91
00:04:25,759 --> 00:04:27,520
key information

92
00:04:27,520 --> 00:04:28,520
fse

93
00:04:28,520 --> 00:04:32,320
2013 folk and vanit use the mobius

94
00:04:32,320 --> 00:04:35,680
transformation to simultaneously compute

95
00:04:35,680 --> 00:04:38,560
a large number of sub cubes from a large

96
00:04:38,560 --> 00:04:40,800
cube

97
00:04:40,880 --> 00:04:43,040
given the truth table of a boolean

98
00:04:43,040 --> 00:04:46,160
function one could compute its algebraic

99
00:04:46,160 --> 00:04:49,360
normal form by using mobius mobile's

100
00:04:49,360 --> 00:04:51,919
transformation

101
00:04:51,919 --> 00:04:54,800
when it comes to cube attacks under any

102
00:04:54,800 --> 00:04:58,720
specific key by storing the value of f

103
00:04:58,720 --> 00:05:01,600
are all elements of ci

104
00:05:01,600 --> 00:05:05,840
one could compute the a f f of f

105
00:05:05,840 --> 00:05:09,199
on variables in i

106
00:05:09,199 --> 00:05:12,479
it was noting that

107
00:05:12,560 --> 00:05:15,280
much memory is needed to store the truth

108
00:05:15,280 --> 00:05:18,799
table for a large cube

109
00:05:18,960 --> 00:05:21,199
division property is an important

110
00:05:21,199 --> 00:05:23,520
improvement on cube attacks

111
00:05:23,520 --> 00:05:26,400
division property was proposed by toto

112
00:05:26,400 --> 00:05:29,840
at euro credit 2015

113
00:05:29,840 --> 00:05:32,479
as the generalization of integral

114
00:05:32,479 --> 00:05:35,520
property used in integral capital

115
00:05:35,520 --> 00:05:38,720
analysis against the bulk cybers

116
00:05:38,720 --> 00:05:41,360
later the bitter best division property

117
00:05:41,360 --> 00:05:43,759
as well as the three substated division

118
00:05:43,759 --> 00:05:46,720
property was introduced by toto and the

119
00:05:46,720 --> 00:05:50,400
miro at fse 2016

120
00:05:50,400 --> 00:05:53,199
to search new integral distinguishing

121
00:05:53,199 --> 00:05:56,400
for simon family

122
00:05:57,600 --> 00:05:59,919
division property based cube attacks

123
00:05:59,919 --> 00:06:02,880
were first proposed by total intercept

124
00:06:02,880 --> 00:06:06,479
at crypto 2017

125
00:06:06,479 --> 00:06:09,280
it breaks the limitation of traditional

126
00:06:09,280 --> 00:06:10,639
cuban attacks

127
00:06:10,639 --> 00:06:13,600
where the cube dimension could hardly be

128
00:06:13,600 --> 00:06:14,800
larger than

129
00:06:14,800 --> 00:06:16,319
40.

130
00:06:16,319 --> 00:06:19,680
for example 78 dimensional cubes could

131
00:06:19,680 --> 00:06:22,560
be exploited in division property based

132
00:06:22,560 --> 00:06:25,360
cube attacks

133
00:06:25,919 --> 00:06:28,400
the definition of beta-based

134
00:06:28,400 --> 00:06:33,960
division property was assumed as follows

135
00:06:37,520 --> 00:06:41,919
in the paper published in crypto 2015

136
00:06:41,919 --> 00:06:43,560
and fse

137
00:06:43,560 --> 00:06:47,840
2016 total and morrow studied the

138
00:06:47,840 --> 00:06:50,160
rules of division property for basic

139
00:06:50,160 --> 00:06:51,360
operations

140
00:06:51,360 --> 00:06:54,960
and xor and copay

141
00:06:54,960 --> 00:06:56,240
furthermore

142
00:06:56,240 --> 00:06:59,280
for an around cyber the propagation of a

143
00:06:59,280 --> 00:07:02,240
division property could be evaluated by

144
00:07:02,240 --> 00:07:04,720
figuring out the division property of

145
00:07:04,720 --> 00:07:06,560
internal states

146
00:07:06,560 --> 00:07:07,360
then

147
00:07:07,360 --> 00:07:09,759
the concept of division trail was

148
00:07:09,759 --> 00:07:10,880
proposed

149
00:07:10,880 --> 00:07:12,000
which could

150
00:07:12,000 --> 00:07:14,400
propagate us through the whole around

151
00:07:14,400 --> 00:07:15,520
cyber

152
00:07:15,520 --> 00:07:18,240
the detailed definition is showing our

153
00:07:18,240 --> 00:07:20,080
slides

154
00:07:20,080 --> 00:07:24,240
at the asia crypto 2016 xiaomi series

155
00:07:24,240 --> 00:07:26,560
showed that the propagation could be

156
00:07:26,560 --> 00:07:29,280
efficiently evaluated by using mrp

157
00:07:29,280 --> 00:07:31,360
models

158
00:07:31,360 --> 00:07:34,400
but more particularly an mrp model

159
00:07:34,400 --> 00:07:36,880
captures all division trails and the

160
00:07:36,880 --> 00:07:40,400
solver is valid as the visibility rather

161
00:07:40,400 --> 00:07:42,880
there are division trails from the input

162
00:07:42,880 --> 00:07:45,599
division property to the output one or

163
00:07:45,599 --> 00:07:47,840
not

164
00:07:49,759 --> 00:07:52,720
based on division property one at zeroth

165
00:07:52,720 --> 00:07:55,599
proposed a degree evaluation method

166
00:07:55,599 --> 00:07:58,240
which could estimate the upper bound of

167
00:07:58,240 --> 00:08:01,680
the degree of simple police

168
00:08:01,680 --> 00:08:04,000
according to the proposition proposed by

169
00:08:04,000 --> 00:08:05,440
180

170
00:08:05,440 --> 00:08:06,240
if

171
00:08:06,240 --> 00:08:10,000
there is d such that ok lambda with hemi

172
00:08:10,000 --> 00:08:11,039
weight

173
00:08:11,039 --> 00:08:12,400
larger than d

174
00:08:12,400 --> 00:08:15,520
the division trail x superscript k

175
00:08:15,520 --> 00:08:18,000
lambda does not exist

176
00:08:18,000 --> 00:08:21,360
then it can be seen that d is an upper

177
00:08:21,360 --> 00:08:24,000
bound of the algebraic degree of the

178
00:08:24,000 --> 00:08:27,000
superpower

179
00:08:27,840 --> 00:08:30,720
now we are going to introduce our work

180
00:08:30,720 --> 00:08:33,760
in cuba text finding cube which would

181
00:08:33,760 --> 00:08:35,039
lead to

182
00:08:35,039 --> 00:08:37,839
useful super police is a critical but a

183
00:08:37,839 --> 00:08:39,440
difficult task

184
00:08:39,440 --> 00:08:42,719
previously some ideas were proposed to

185
00:08:42,719 --> 00:08:45,680
find or construct such cubes

186
00:08:45,680 --> 00:08:49,839
in 2009 dina and shah xiaomi proposed a

187
00:08:49,839 --> 00:08:52,800
random work algorithm to find cubes with

188
00:08:52,800 --> 00:08:54,640
linear superpolis

189
00:08:54,640 --> 00:08:58,880
later in 2013 rogue and vernet presented

190
00:08:58,880 --> 00:09:01,760
a method where two disjoin the small

191
00:09:01,760 --> 00:09:04,240
cubes are unioned to find the linear

192
00:09:04,240 --> 00:09:06,720
superpolis

193
00:09:06,720 --> 00:09:08,880
when it comes to find the cubes leading

194
00:09:08,880 --> 00:09:11,920
to zero sum distinguisher

195
00:09:11,920 --> 00:09:15,360
selecting cubes with no adjacent indexes

196
00:09:15,360 --> 00:09:18,640
and the greedy bit side algorithm was

197
00:09:18,640 --> 00:09:21,640
proposed

198
00:09:22,240 --> 00:09:25,519
our aim is to construct the good cubes

199
00:09:25,519 --> 00:09:29,519
for recovering linear superpowers

200
00:09:29,519 --> 00:09:31,839
to achieve our aim we find the

201
00:09:31,839 --> 00:09:33,519
inspiration

202
00:09:33,519 --> 00:09:36,399
from grade data set algorithm

203
00:09:36,399 --> 00:09:37,600
namely

204
00:09:37,600 --> 00:09:40,720
our solution is starting from a set of

205
00:09:40,720 --> 00:09:43,920
cube variables indexes and

206
00:09:43,920 --> 00:09:46,880
extending it to a large candidate cube

207
00:09:46,880 --> 00:09:49,279
indexes

208
00:09:49,279 --> 00:09:52,080
then there are two critical problems to

209
00:09:52,080 --> 00:09:54,000
be solved

210
00:09:54,000 --> 00:09:54,959
first

211
00:09:54,959 --> 00:09:57,839
how to determine a proper set of cuban

212
00:09:57,839 --> 00:10:00,560
variables indexed by i

213
00:10:00,560 --> 00:10:01,600
second

214
00:10:01,600 --> 00:10:05,839
how to extend i to be a large candidate

215
00:10:05,839 --> 00:10:08,880
cuba indexes

216
00:10:09,360 --> 00:10:12,240
we shall first introduce how to solve

217
00:10:12,240 --> 00:10:14,480
the second problem

218
00:10:14,480 --> 00:10:17,680
we propose a two-stage method to extend

219
00:10:17,680 --> 00:10:18,800
i

220
00:10:18,800 --> 00:10:20,480
the figure shows

221
00:10:20,480 --> 00:10:23,360
an overview of our word measure

222
00:10:23,360 --> 00:10:25,200
more specifically

223
00:10:25,200 --> 00:10:28,160
steep ie variables and gentle array

224
00:10:28,160 --> 00:10:30,720
variables are picked in

225
00:10:30,720 --> 00:10:33,279
the two different stages

226
00:10:33,279 --> 00:10:36,480
in stage one every time add a steep

227
00:10:36,480 --> 00:10:39,440
array variables to decrease the degree

228
00:10:39,440 --> 00:10:44,160
of superpoli as fast as possible

229
00:10:44,560 --> 00:10:46,720
in stage 2

230
00:10:46,720 --> 00:10:49,040
to make the degree of super bowling

231
00:10:49,040 --> 00:10:51,920
close to 1 we pick up a gentle array

232
00:10:51,920 --> 00:10:54,079
variables in

233
00:10:54,079 --> 00:10:57,040
each iteration

234
00:10:59,120 --> 00:11:02,560
now the only left problem is how to

235
00:11:02,560 --> 00:11:06,880
determine a good data cube set

236
00:11:06,880 --> 00:11:09,360
note that the output function of a

237
00:11:09,360 --> 00:11:12,839
trivium is linear which is shown in our

238
00:11:12,839 --> 00:11:15,920
slide if a cube of c has a linear

239
00:11:15,920 --> 00:11:19,920
superpoli then it is very likely one of

240
00:11:19,920 --> 00:11:21,600
the six terms

241
00:11:21,600 --> 00:11:23,360
come to contribute

242
00:11:23,360 --> 00:11:26,000
the linear superpoli and the other five

243
00:11:26,000 --> 00:11:28,720
terms contribute to constant zero

244
00:11:28,720 --> 00:11:31,839
namely we shall only focus on one of the

245
00:11:31,839 --> 00:11:34,480
six internal states bits appeared in the

246
00:11:34,480 --> 00:11:37,120
output function

247
00:11:37,120 --> 00:11:40,320
take the first one as an example

248
00:11:40,320 --> 00:11:42,560
according to the fig feedback function

249
00:11:42,560 --> 00:11:45,760
of trivium it could be expressed as

250
00:11:45,760 --> 00:11:48,079
follows

251
00:11:48,079 --> 00:11:51,120
our idea is focusing on the two degree

252
00:11:51,120 --> 00:11:54,639
term english expression

253
00:11:54,800 --> 00:11:57,279
more particularly we choose a state of

254
00:11:57,279 --> 00:12:01,279
cuba variables indexed by i and search

255
00:12:01,279 --> 00:12:05,120
some of its sub-cubes to find a cube

256
00:12:05,120 --> 00:12:07,279
with linear superpolis either in the

257
00:12:07,279 --> 00:12:11,519
blue internal state or the red one

258
00:12:11,519 --> 00:12:13,760
such cubes

259
00:12:13,760 --> 00:12:18,880
is determined as a starting set cubesat

260
00:12:22,800 --> 00:12:26,000
then the problem turns into how to pick

261
00:12:26,000 --> 00:12:28,880
up a proper internal state from the

262
00:12:28,880 --> 00:12:30,959
sixth internal state speeds in the

263
00:12:30,959 --> 00:12:33,760
output function

264
00:12:33,760 --> 00:12:36,079
since the output function is a summation

265
00:12:36,079 --> 00:12:39,279
of six internal state beat

266
00:12:39,279 --> 00:12:41,839
the superpoli of i in they could have

267
00:12:41,839 --> 00:12:42,800
taken

268
00:12:42,800 --> 00:12:46,399
apart into six ones

269
00:12:46,399 --> 00:12:48,000
note that

270
00:12:48,000 --> 00:12:50,800
a linear superpoly usually has only one

271
00:12:50,800 --> 00:12:54,639
term say p i is equal to k j

272
00:12:54,639 --> 00:12:57,760
one of the six super police is equal to

273
00:12:57,760 --> 00:13:00,160
k j

274
00:13:00,399 --> 00:13:02,800
hence for a given r

275
00:13:02,800 --> 00:13:05,519
it is necessary to predict the key with

276
00:13:05,519 --> 00:13:09,120
a large success probe success property

277
00:13:09,120 --> 00:13:12,160
such that a linear superpoly in vr

278
00:13:12,160 --> 00:13:15,680
implies a linear superpoland in skr

279
00:13:15,680 --> 00:13:17,200
in our paper

280
00:13:17,200 --> 00:13:21,839
skr is called the preference bit

281
00:13:24,160 --> 00:13:25,760
to predict the

282
00:13:25,760 --> 00:13:28,560
preference bit

283
00:13:28,560 --> 00:13:31,600
our main idea is to predict the number

284
00:13:31,600 --> 00:13:36,639
of terms in the form of ti times kj

285
00:13:36,639 --> 00:13:39,440
which are called weak terms

286
00:13:39,440 --> 00:13:41,519
in the sex internal

287
00:13:41,519 --> 00:13:43,360
state bits

288
00:13:43,360 --> 00:13:46,160
however it is difficult to make such

289
00:13:46,160 --> 00:13:48,639
prediction directory

290
00:13:48,639 --> 00:13:51,920
our solution is exploiting the feedback

291
00:13:51,920 --> 00:13:55,040
function of trivium to predict

292
00:13:55,040 --> 00:13:59,839
the number of weekly terms iteratively

293
00:14:00,399 --> 00:14:03,360
we shall take s94

294
00:14:03,360 --> 00:14:06,639
as an example

295
00:14:07,920 --> 00:14:11,839
the feedback function of s94 is shown in

296
00:14:11,839 --> 00:14:13,600
the slide

297
00:14:13,600 --> 00:14:17,279
that we ks be the number of weekly terms

298
00:14:17,279 --> 00:14:19,519
in s

299
00:14:19,519 --> 00:14:23,360
the number of pre terms in s is denoted

300
00:14:23,360 --> 00:14:24,959
by v s

301
00:14:24,959 --> 00:14:26,160
then

302
00:14:26,160 --> 00:14:29,279
the number of way k terms in s94 could

303
00:14:29,279 --> 00:14:31,440
be predicted as the

304
00:14:31,440 --> 00:14:35,199
equation at the bottom of our slides

305
00:14:35,199 --> 00:14:38,639
the key point is to predict the terms in

306
00:14:38,639 --> 00:14:40,959
red

307
00:14:42,480 --> 00:14:44,320
considering the property of boolean

308
00:14:44,320 --> 00:14:46,800
function we predict that the number of

309
00:14:46,800 --> 00:14:50,479
weaker terms as following

310
00:14:52,240 --> 00:14:55,120
finally we use the equation in red to

311
00:14:55,120 --> 00:14:57,680
predict the number of weighted terms in

312
00:14:57,680 --> 00:15:00,560
s94

313
00:15:01,279 --> 00:15:03,920
based on the above method we proposed

314
00:15:03,920 --> 00:15:06,639
algorithm 4 which could iteratively

315
00:15:06,639 --> 00:15:09,440
predict the number of weekly terms

316
00:15:09,440 --> 00:15:11,600
so that the previous bit could have been

317
00:15:11,600 --> 00:15:14,240
predicted

318
00:15:16,000 --> 00:15:18,560
another contribution of this paper is to

319
00:15:18,560 --> 00:15:21,279
improve the mobius transformation

320
00:15:21,279 --> 00:15:23,760
as mentioned before the advantage of

321
00:15:23,760 --> 00:15:26,880
mobius transformation is that it could

322
00:15:26,880 --> 00:15:30,000
compute a large number of sub-cubes from

323
00:15:30,000 --> 00:15:32,800
a large cube simultaneously

324
00:15:32,800 --> 00:15:35,920
however the weakness is that much memory

325
00:15:35,920 --> 00:15:38,480
is needed to store the truth table for a

326
00:15:38,480 --> 00:15:42,240
large cube hence our aim is testing a

327
00:15:42,240 --> 00:15:44,800
large number of sub cubes from a large

328
00:15:44,800 --> 00:15:47,600
cube simultaneously with reasonable

329
00:15:47,600 --> 00:15:49,759
memory

330
00:15:49,759 --> 00:15:53,680
let f be a boolean function on variables

331
00:15:53,680 --> 00:15:56,720
our idea is breaking the original mobius

332
00:15:56,720 --> 00:15:59,680
transformation into a two-stage one to

333
00:15:59,680 --> 00:16:03,279
recover a part of a f of f

334
00:16:03,279 --> 00:16:07,440
in the first stage we calculated g0 g1

335
00:16:07,440 --> 00:16:10,399
to g 2 to the power q

336
00:16:10,399 --> 00:16:12,560
minus 1 and keep a part of their

337
00:16:12,560 --> 00:16:13,920
information

338
00:16:13,920 --> 00:16:17,759
in the second stage we recover lf of f

339
00:16:17,759 --> 00:16:21,600
according to the capital information

340
00:16:21,759 --> 00:16:24,800
algorithm 5 shows the details of our

341
00:16:24,800 --> 00:16:28,800
improved mobius transformation

342
00:16:30,000 --> 00:16:33,600
the memory complexity of algorithm 5 is

343
00:16:33,600 --> 00:16:35,600
consists of two parts

344
00:16:35,600 --> 00:16:36,399
first

345
00:16:36,399 --> 00:16:38,240
the size of s

346
00:16:38,240 --> 00:16:41,600
is 2 to the power n minus q

347
00:16:41,600 --> 00:16:44,160
and so it costs

348
00:16:44,160 --> 00:16:45,120
2

349
00:16:45,120 --> 00:16:49,040
to the power n minus q bit memory

350
00:16:49,040 --> 00:16:53,279
second for h j the size of sfj

351
00:16:53,279 --> 00:16:57,759
is t and so it requires 2 to the power q

352
00:16:57,759 --> 00:17:00,959
times t bits memory totally

353
00:17:00,959 --> 00:17:04,079
when t is much less than 2 to the power

354
00:17:04,079 --> 00:17:05,839
n minus q

355
00:17:05,839 --> 00:17:08,720
the memory complexity of our improved

356
00:17:08,720 --> 00:17:11,520
the mobius transformation is much less

357
00:17:11,520 --> 00:17:14,240
than that of the original mobius

358
00:17:14,240 --> 00:17:17,240
transformation

359
00:17:18,000 --> 00:17:19,280
with all

360
00:17:19,280 --> 00:17:21,839
with all the above measures we make

361
00:17:21,839 --> 00:17:26,000
application to 805 round trivium

362
00:17:26,000 --> 00:17:26,880
first

363
00:17:26,880 --> 00:17:29,200
the preference bit to find the linear

364
00:17:29,200 --> 00:17:30,840
super poly is

365
00:17:30,840 --> 00:17:34,480
as 66

366
00:17:34,480 --> 00:17:36,480
second we choose

367
00:17:36,480 --> 00:17:39,679
cubes of size 22 and use mobius

368
00:17:39,679 --> 00:17:42,559
transformation to find

369
00:17:42,559 --> 00:17:48,639
a proper cube i1 as our start cuba says

370
00:17:50,000 --> 00:17:52,160
in the first stage we

371
00:17:52,160 --> 00:17:55,280
we extend i1 by adding steep array

372
00:17:55,280 --> 00:17:59,200
variables and we obtain a cube of size

373
00:17:59,200 --> 00:18:01,200
34

374
00:18:01,200 --> 00:18:03,760
in the second stage we start with

375
00:18:03,760 --> 00:18:07,039
iceland and keep up four variables

376
00:18:07,039 --> 00:18:10,240
as such that the degree of superpolis

377
00:18:10,240 --> 00:18:15,160
are less than 4 in the last iteration

378
00:18:15,360 --> 00:18:18,559
finally i4 of 5

379
00:18:18,559 --> 00:18:21,440
40 is a candidate and large cube which

380
00:18:21,440 --> 00:18:24,960
is given in the slice

381
00:18:25,760 --> 00:18:28,640
together with some other candidate cubes

382
00:18:28,640 --> 00:18:31,440
we find more than one thousand cubes

383
00:18:31,440 --> 00:18:34,320
with linear super police and the output

384
00:18:34,320 --> 00:18:36,480
of eight hundred and

385
00:18:36,480 --> 00:18:39,360
five one trivium

386
00:18:39,360 --> 00:18:40,559
there were

387
00:18:40,559 --> 00:18:45,360
38 independent and linear superpolice

388
00:18:45,919 --> 00:18:48,799
what's more we also find the 16 linear

389
00:18:48,799 --> 00:18:54,160
superpolis for 806 rounded film

390
00:18:54,480 --> 00:18:57,280
these are a part of a linear superpolis

391
00:18:57,280 --> 00:18:58,200
of

392
00:18:58,200 --> 00:18:59,919
805

393
00:18:59,919 --> 00:19:02,080
round trivium

394
00:19:02,080 --> 00:19:05,880
these are a part of linear superpolis of

395
00:19:05,880 --> 00:19:09,679
806 round tribute

396
00:19:09,679 --> 00:19:12,320
we summarize the key recovery attacks

397
00:19:12,320 --> 00:19:14,480
onto view note that

398
00:19:14,480 --> 00:19:18,840
the previous best practical attack is on

399
00:19:18,840 --> 00:19:21,760
784 rounded trivium

400
00:19:21,760 --> 00:19:24,640
proposed by 4k and bennett

401
00:19:24,640 --> 00:19:27,440
in this report the best practical key

402
00:19:27,440 --> 00:19:31,520
recovery attacks are improved 21 rounds

403
00:19:31,520 --> 00:19:32,360
to

404
00:19:32,360 --> 00:19:36,320
805 random film

405
00:19:36,960 --> 00:19:40,480
what's more we apply our method to 800

406
00:19:40,480 --> 00:19:43,600
rounded to film where a candidate cube

407
00:19:43,600 --> 00:19:48,000
of a size 43 is constructed and the two

408
00:19:48,000 --> 00:19:51,840
sub-cubes of 42 with linear superpolis

409
00:19:51,840 --> 00:19:53,919
are found

410
00:19:53,919 --> 00:19:55,600
now we

411
00:19:55,600 --> 00:19:58,240
shall make a brief conclusion of our

412
00:19:58,240 --> 00:20:01,120
work in this paper we introduce a new

413
00:20:01,120 --> 00:20:03,919
algorithm to construct the good cubes

414
00:20:03,919 --> 00:20:07,200
and apply it to 805

415
00:20:07,200 --> 00:20:09,679
longitude

416
00:20:09,679 --> 00:20:13,120
more specifically a new algorithm to

417
00:20:13,120 --> 00:20:15,440
construct the candidate cubes

418
00:20:15,440 --> 00:20:18,080
the preference bit and the algorithm to

419
00:20:18,080 --> 00:20:19,440
predict it

420
00:20:19,440 --> 00:20:21,120
and

421
00:20:21,120 --> 00:20:23,840
to improve the mobius transformation

422
00:20:23,840 --> 00:20:25,520
more presented

423
00:20:25,520 --> 00:20:26,799
hopefully

424
00:20:26,799 --> 00:20:30,080
we believe that the new algorithm could

425
00:20:30,080 --> 00:20:34,400
also be applied to you like cyphers

426
00:20:34,400 --> 00:20:38,120
thanks for your attention

