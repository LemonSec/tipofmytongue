1
00:00:00,080 --> 00:00:04,160
hi everyone i'm joseph i'm going to tell

2
00:00:02,800 --> 00:00:06,160
you about my paper

3
00:00:04,160 --> 00:00:07,839
handling adaptive compromise for

4
00:00:06,160 --> 00:00:10,559
practical encryption schemes which is

5
00:00:07,839 --> 00:00:12,559
joint work with nirvan thiagy

6
00:00:10,559 --> 00:00:14,239
in this paper we introduced new security

7
00:00:12,559 --> 00:00:16,640
notions for symmetric encryption

8
00:00:14,240 --> 00:00:17,760
and prfs in an adaptive compromise

9
00:00:16,640 --> 00:00:19,600
setting

10
00:00:17,760 --> 00:00:20,960
so let's start by discussing what this

11
00:00:19,600 --> 00:00:22,480
looks like

12
00:00:20,960 --> 00:00:24,080
we think of there being some number of

13
00:00:22,480 --> 00:00:26,800
parties communicating

14
00:00:24,080 --> 00:00:28,880
while accruing cryptographic secrets an

15
00:00:26,800 --> 00:00:31,599
attacker observes this communication

16
00:00:28,880 --> 00:00:34,000
and based on its observations may

17
00:00:31,599 --> 00:00:36,239
adaptively compromise the secrets of any

18
00:00:34,000 --> 00:00:38,559
subset of the parties

19
00:00:36,239 --> 00:00:40,239
this general setting appears regularly

20
00:00:38,559 --> 00:00:41,680
in cryptography for many different

21
00:00:40,239 --> 00:00:43,760
primitives

22
00:00:41,680 --> 00:00:45,440
in particular the examples that

23
00:00:43,760 --> 00:00:47,199
motivated this work consisted of

24
00:00:45,440 --> 00:00:48,320
adaptive compromise for symmetric

25
00:00:47,200 --> 00:00:51,120
encryption

26
00:00:48,320 --> 00:00:53,280
and prf's in simulation based security

27
00:00:51,120 --> 00:00:54,879
definitions

28
00:00:53,280 --> 00:00:56,719
in such a setting we consider the

29
00:00:54,879 --> 00:01:00,000
difference between the real

30
00:00:56,719 --> 00:01:01,520
and an ideal world in the real world the

31
00:01:00,000 --> 00:01:02,320
attacker makes queries to some

32
00:01:01,520 --> 00:01:05,519
cryptographic

33
00:01:02,320 --> 00:01:07,200
construction pi in the ideal world

34
00:01:05,519 --> 00:01:08,960
its queries are instead answered by a

35
00:01:07,200 --> 00:01:10,479
simulator which is given leakage about

36
00:01:08,960 --> 00:01:13,199
the queries

37
00:01:10,479 --> 00:01:15,039
the advantage of the adversary is

38
00:01:13,200 --> 00:01:16,320
defined as the difference in probability

39
00:01:15,040 --> 00:01:19,920
that it outputs one

40
00:01:16,320 --> 00:01:21,199
in these two worlds in our motivating

41
00:01:19,920 --> 00:01:24,000
examples

42
00:01:21,200 --> 00:01:25,680
symmetric encryption came up as a small

43
00:01:24,000 --> 00:01:28,159
component of it

44
00:01:25,680 --> 00:01:29,600
complicated protocol such that the

45
00:01:28,159 --> 00:01:32,960
attacker could interact

46
00:01:29,600 --> 00:01:34,079
with it in two ways the attacker can ask

47
00:01:32,960 --> 00:01:37,679
for encryptions

48
00:01:34,079 --> 00:01:40,798
of messages under a secret key k

49
00:01:37,680 --> 00:01:43,360
then later it can ask for this key to be

50
00:01:40,799 --> 00:01:46,000
exposed to it

51
00:01:43,360 --> 00:01:47,119
in the ideal world the leakage given to

52
00:01:46,000 --> 00:01:49,680
the simulator on

53
00:01:47,119 --> 00:01:52,720
encryption queries is only the length of

54
00:01:49,680 --> 00:01:55,600
the message to be encrypted

55
00:01:52,720 --> 00:01:56,399
only later when it is asked to expose a

56
00:01:55,600 --> 00:01:58,559
key

57
00:01:56,399 --> 00:02:00,399
is the simulator told the content of the

58
00:01:58,560 --> 00:02:02,880
messages

59
00:02:00,399 --> 00:02:05,040
such simulation is possible with

60
00:02:02,880 --> 00:02:08,160
non-committing encryption

61
00:02:05,040 --> 00:02:10,319
however by result of nielsen this

62
00:02:08,160 --> 00:02:12,000
requires the key to be as long as all of

63
00:02:10,318 --> 00:02:12,879
the message that will ever be encrypted

64
00:02:12,000 --> 00:02:15,920
under it

65
00:02:12,879 --> 00:02:18,000
which is impractical in many settings

66
00:02:15,920 --> 00:02:21,280
unless we are willing to work in a

67
00:02:18,000 --> 00:02:25,360
programmable ideal model

68
00:02:21,280 --> 00:02:27,360
pseudo-random functions appear similarly

69
00:02:25,360 --> 00:02:29,760
the attacker can ask for the function to

70
00:02:27,360 --> 00:02:31,760
be evaluated at chosen points

71
00:02:29,760 --> 00:02:34,160
and then later ask for the underlying

72
00:02:31,760 --> 00:02:36,560
key to be exposed

73
00:02:34,160 --> 00:02:40,799
in the ideal world the responses to the

74
00:02:36,560 --> 00:02:40,800
evaluation queries are chosen randomly

75
00:02:42,640 --> 00:02:48,319
as before the techniques nielsen

76
00:02:45,840 --> 00:02:50,160
showed that such a prf would necessarily

77
00:02:48,319 --> 00:02:54,079
need long keys

78
00:02:50,160 --> 00:02:57,280
or to use a programmable ideal model

79
00:02:54,080 --> 00:02:59,760
in our motivating example they tended to

80
00:02:57,280 --> 00:03:01,680
follow a common approach

81
00:02:59,760 --> 00:03:02,799
they would first fix a particular

82
00:03:01,680 --> 00:03:05,680
encryption scheme

83
00:03:02,800 --> 00:03:07,440
or prf and then prove security of their

84
00:03:05,680 --> 00:03:10,319
higher level protocols

85
00:03:07,440 --> 00:03:12,480
using this scheme in some programmable

86
00:03:10,319 --> 00:03:14,879
ideal model

87
00:03:12,480 --> 00:03:17,200
a common scheme used in these examples

88
00:03:14,879 --> 00:03:19,518
worked as follows

89
00:03:17,200 --> 00:03:21,518
first we pick a prf that will be modeled

90
00:03:19,519 --> 00:03:24,640
as a random oracle

91
00:03:21,519 --> 00:03:26,480
to encrypt a message m with key k we

92
00:03:24,640 --> 00:03:29,359
pick a random value

93
00:03:26,480 --> 00:03:32,399
feed this value through f sub k and then

94
00:03:29,360 --> 00:03:34,879
xor the result with the message

95
00:03:32,400 --> 00:03:36,720
to simulate encryption by this scheme we

96
00:03:34,879 --> 00:03:42,319
can simply pick the ciphertext

97
00:03:36,720 --> 00:03:42,319
at random when we need to expose a key

98
00:03:42,640 --> 00:03:46,079
we pick one at random and reprogram the

99
00:03:45,200 --> 00:03:47,760
random oracle

100
00:03:46,080 --> 00:03:49,519
to be consistent with our earlier

101
00:03:47,760 --> 00:03:51,760
encryptions

102
00:03:49,519 --> 00:03:53,519
however this leaves us with some

103
00:03:51,760 --> 00:03:55,359
questions

104
00:03:53,519 --> 00:03:57,599
what if we want to use a prf that can't

105
00:03:55,360 --> 00:03:59,599
be thought of as a random oracle

106
00:03:57,599 --> 00:04:00,720
say some block cipher which is better

107
00:03:59,599 --> 00:04:04,000
modeled as

108
00:04:00,720 --> 00:04:05,040
an ideal cipher what if we want to use a

109
00:04:04,000 --> 00:04:08,560
different amount of

110
00:04:05,040 --> 00:04:12,000
mode of operation with this prf

111
00:04:08,560 --> 00:04:13,599
following the status quo for this

112
00:04:12,000 --> 00:04:15,680
we would need to write completely

113
00:04:13,599 --> 00:04:17,120
separate proofs for each choice of a

114
00:04:15,680 --> 00:04:19,840
mode of operation

115
00:04:17,120 --> 00:04:22,000
prf and application that we want to

116
00:04:19,839 --> 00:04:23,119
prove secure

117
00:04:22,000 --> 00:04:25,600
summing over these different

118
00:04:23,120 --> 00:04:28,240
combinations we have a cubic number of

119
00:04:25,600 --> 00:04:30,960
proofs that need to be written

120
00:04:28,240 --> 00:04:32,800
moreover each of these proofs is an

121
00:04:30,960 --> 00:04:35,599
ideal model programming proof

122
00:04:32,800 --> 00:04:38,240
which while conceptually straightforward

123
00:04:35,600 --> 00:04:40,560
can be quite detail-intensive

124
00:04:38,240 --> 00:04:42,720
to exemplify this let's categorize the

125
00:04:40,560 --> 00:04:45,199
proofs of all those papers we cited

126
00:04:42,720 --> 00:04:45,199
earlier

127
00:04:45,680 --> 00:04:49,280
by whether they provide all the details

128
00:04:47,520 --> 00:04:52,400
of the programming proofs

129
00:04:49,280 --> 00:04:54,159
and the correctness of said proofs the

130
00:04:52,400 --> 00:04:56,638
majority of these papers

131
00:04:54,160 --> 00:04:59,840
had no bugs but did not provide a

132
00:04:56,639 --> 00:05:01,759
detailed analysis of the programming

133
00:04:59,840 --> 00:05:03,280
all of the examples we found that did

134
00:05:01,759 --> 00:05:06,880
provide the details

135
00:05:03,280 --> 00:05:08,880
had bugs in the proof we also identified

136
00:05:06,880 --> 00:05:12,719
bugs in some papers that only sketch the

137
00:05:08,880 --> 00:05:12,719
details of the programming analysis

138
00:05:12,800 --> 00:05:16,240
to be clear i'm not trying to pick on

139
00:05:14,880 --> 00:05:18,800
these earlier papers

140
00:05:16,240 --> 00:05:20,320
after all my co-author and i were

141
00:05:18,800 --> 00:05:22,160
separately authors on two of these

142
00:05:20,320 --> 00:05:24,639
papers

143
00:05:22,160 --> 00:05:26,080
these difficulties inviting a thorough

144
00:05:24,639 --> 00:05:29,360
correct proof

145
00:05:26,080 --> 00:05:32,000
indicates the need for a new approach

146
00:05:29,360 --> 00:05:33,280
in this work we provide an alternative

147
00:05:32,000 --> 00:05:36,880
to the status quo

148
00:05:33,280 --> 00:05:38,638
by introducing layers of abstraction

149
00:05:36,880 --> 00:05:40,320
we introduced a target definition for

150
00:05:38,639 --> 00:05:43,919
prfs called

151
00:05:40,320 --> 00:05:44,479
sim ac prf security that captures the

152
00:05:43,919 --> 00:05:47,359
needs

153
00:05:44,479 --> 00:05:48,880
in simulation security under adaptive

154
00:05:47,360 --> 00:05:51,600
compromise

155
00:05:48,880 --> 00:05:54,960
in appropriate ideal models prfs can be

156
00:05:51,600 --> 00:05:54,960
shown to achieve this notion

157
00:05:55,120 --> 00:06:00,400
we additionally introduce various target

158
00:05:57,440 --> 00:06:03,280
definitions for encryption schemes

159
00:06:00,400 --> 00:06:04,400
then modes of operation can be shown to

160
00:06:03,280 --> 00:06:07,599
achieve these

161
00:06:04,400 --> 00:06:10,080
assuming that they use a sim ac secure

162
00:06:07,600 --> 00:06:13,039
prf

163
00:06:10,080 --> 00:06:14,000
finally each application security can be

164
00:06:13,039 --> 00:06:16,400
shown assuming

165
00:06:14,000 --> 00:06:18,639
the sim ac security of the underlying

166
00:06:16,400 --> 00:06:21,120
encryption scheme

167
00:06:18,639 --> 00:06:22,720
using this approach only a linear number

168
00:06:21,120 --> 00:06:26,000
of proofs are required

169
00:06:22,720 --> 00:06:26,800
and moreover the complicated programming

170
00:06:26,000 --> 00:06:29,600
proofs

171
00:06:26,800 --> 00:06:30,720
are relegated to the lowest level proofs

172
00:06:29,600 --> 00:06:34,160
particularly

173
00:06:30,720 --> 00:06:34,960
those regarding the prfs and the details

174
00:06:34,160 --> 00:06:37,440
of this

175
00:06:34,960 --> 00:06:38,560
are then inherited for free in all of

176
00:06:37,440 --> 00:06:41,360
the higher level

177
00:06:38,560 --> 00:06:44,319
proofs before we proceed let me give a

178
00:06:41,360 --> 00:06:47,680
high level overview of our results

179
00:06:44,319 --> 00:06:50,080
first as noted we provided new security

180
00:06:47,680 --> 00:06:52,720
definitions for symmetric encryption

181
00:06:50,080 --> 00:06:54,400
and prfs and adaptive compromise

182
00:06:52,720 --> 00:06:56,960
settings

183
00:06:54,400 --> 00:06:58,400
then we established the usefulness of

184
00:06:56,960 --> 00:07:00,638
our new notions

185
00:06:58,400 --> 00:07:02,560
by using them to prove the security of

186
00:07:00,639 --> 00:07:04,560
several applications including a

187
00:07:02,560 --> 00:07:07,520
searchable encryption scheme

188
00:07:04,560 --> 00:07:10,400
due to cash at all the burnbox

189
00:07:07,520 --> 00:07:13,880
self-revocable encryption scheme

190
00:07:10,400 --> 00:07:15,758
of tiago at all and the opaque

191
00:07:13,880 --> 00:07:16,639
password-authenticated key exchange

192
00:07:15,759 --> 00:07:19,680
protocol

193
00:07:16,639 --> 00:07:23,280
of jarecki at all

194
00:07:19,680 --> 00:07:25,919
finally we provide lifting results

195
00:07:23,280 --> 00:07:27,440
these show that classic results in

196
00:07:25,919 --> 00:07:30,560
symmetric crypto

197
00:07:27,440 --> 00:07:33,360
extend to our new definitions this

198
00:07:30,560 --> 00:07:36,400
includes results for modularly achieving

199
00:07:33,360 --> 00:07:39,039
our cca security notion

200
00:07:36,400 --> 00:07:41,919
results that random oracles and ideal

201
00:07:39,039 --> 00:07:44,960
ciphers make good prfs

202
00:07:41,919 --> 00:07:47,758
and results establishing the sim-ac

203
00:07:44,960 --> 00:07:48,878
security of various classic modes of

204
00:07:47,759 --> 00:07:53,120
operation

205
00:07:48,879 --> 00:07:56,000
when using sim ac secure prfs

206
00:07:53,120 --> 00:07:57,039
this last point is derived as a general

207
00:07:56,000 --> 00:07:59,599
result

208
00:07:57,039 --> 00:08:00,360
that any mode of operation which reach a

209
00:07:59,599 --> 00:08:03,199
notion of

210
00:08:00,360 --> 00:08:04,720
extractability will achieve our cpa

211
00:08:03,199 --> 00:08:09,280
notion

212
00:08:04,720 --> 00:08:09,280
let me start by discussing our security

213
00:08:10,840 --> 00:08:14,000
definitions

214
00:08:12,160 --> 00:08:16,000
these can be viewed in the same

215
00:08:14,000 --> 00:08:17,440
simulation based setting we considered

216
00:08:16,000 --> 00:08:20,639
earlier

217
00:08:17,440 --> 00:08:22,000
our basic cpa notion is a multi-user

218
00:08:20,639 --> 00:08:24,160
notion

219
00:08:22,000 --> 00:08:26,879
in the real world the adversary has

220
00:08:24,160 --> 00:08:29,599
access to three interfaces

221
00:08:26,879 --> 00:08:32,000
by the encryption interface it can ask a

222
00:08:29,599 --> 00:08:35,519
user you

223
00:08:32,000 --> 00:08:36,159
to encrypt a message app the exposure

224
00:08:35,519 --> 00:08:38,000
interface

225
00:08:36,159 --> 00:08:41,360
allows the attacker to obtain the secret

226
00:08:38,000 --> 00:08:44,080
key of any user it chooses

227
00:08:41,360 --> 00:08:46,720
finally the ideal primitive interface

228
00:08:44,080 --> 00:08:50,640
allows the attacker to make queries

229
00:08:46,720 --> 00:08:52,839
to the ideal primitive the ideal world

230
00:08:50,640 --> 00:08:55,279
works similarly to what we've seen

231
00:08:52,839 --> 00:08:57,040
before on encryption queries

232
00:08:55,279 --> 00:08:58,320
the simulator is told the length of the

233
00:08:57,040 --> 00:09:00,319
message

234
00:08:58,320 --> 00:09:01,519
when asked to expose the key of some

235
00:09:00,320 --> 00:09:03,279
users

236
00:09:01,519 --> 00:09:05,760
the simulator is given all of the

237
00:09:03,279 --> 00:09:07,680
messages that were previously queried to

238
00:09:05,760 --> 00:09:09,600
that user

239
00:09:07,680 --> 00:09:10,800
finally before submitting the ideal

240
00:09:09,600 --> 00:09:12,560
primitive

241
00:09:10,800 --> 00:09:14,959
it sees the attacker's query in the

242
00:09:12,560 --> 00:09:14,959
clear

243
00:09:15,760 --> 00:09:20,000
to obtain the cca version of our

244
00:09:18,560 --> 00:09:23,760
definitions

245
00:09:20,000 --> 00:09:26,000
we simply add a decryption interface

246
00:09:23,760 --> 00:09:27,760
the attacker is disallowed from querying

247
00:09:26,000 --> 00:09:30,800
this oracle on ciphertext that it

248
00:09:27,760 --> 00:09:33,439
received from the encryption interface

249
00:09:30,800 --> 00:09:35,120
in the ideal decryption interface the

250
00:09:33,440 --> 00:09:38,000
simulator is given the

251
00:09:35,120 --> 00:09:40,399
texts that the attacker queries in the

252
00:09:38,000 --> 00:09:43,600
clear

253
00:09:40,399 --> 00:09:45,920
for symmetric crypto

254
00:09:43,600 --> 00:09:47,880
it's common to target strong notions

255
00:09:45,920 --> 00:09:49,760
such as key privacy

256
00:09:47,880 --> 00:09:51,040
indistinguishability of cipher text from

257
00:09:49,760 --> 00:09:53,040
random bits

258
00:09:51,040 --> 00:09:54,640
or authenticated encryption which

259
00:09:53,040 --> 00:09:58,640
combines security

260
00:09:54,640 --> 00:10:00,240
both of confidentiality and integrity

261
00:09:58,640 --> 00:10:01,600
each of these can be captured in our

262
00:10:00,240 --> 00:10:03,279
setting by placing appropriate

263
00:10:01,600 --> 00:10:04,959
restrictions on the behavior of the

264
00:10:03,279 --> 00:10:09,120
simulator

265
00:10:04,959 --> 00:10:11,359
our prf definitions work similarly

266
00:10:09,120 --> 00:10:13,519
the encryption interface is replaced by

267
00:10:11,360 --> 00:10:16,560
an evaluation interface

268
00:10:13,519 --> 00:10:18,320
and for unexposed users random values

269
00:10:16,560 --> 00:10:21,359
are returned at this interface

270
00:10:18,320 --> 00:10:21,360
in the ideal world

271
00:10:23,760 --> 00:10:28,000
as discussed we used our definition to

272
00:10:26,560 --> 00:10:30,239
prove the security of several

273
00:10:28,000 --> 00:10:32,240
applications

274
00:10:30,240 --> 00:10:33,600
for the searchable encryption scheme we

275
00:10:32,240 --> 00:10:36,640
consider

276
00:10:33,600 --> 00:10:39,519
cash at all provided a thorough proof of

277
00:10:36,640 --> 00:10:42,800
non-adaptive security using standard

278
00:10:39,519 --> 00:10:45,200
security notion for encryption and prfs

279
00:10:42,800 --> 00:10:46,160
and they provided a brief sketch of a

280
00:10:45,200 --> 00:10:47,760
proof

281
00:10:46,160 --> 00:10:50,240
when using a particular random

282
00:10:47,760 --> 00:10:53,439
oracle-based construction

283
00:10:50,240 --> 00:10:56,399
in our work we re-proved this result

284
00:10:53,440 --> 00:10:57,680
using our key private security notion

285
00:10:56,399 --> 00:11:01,839
for encryption

286
00:10:57,680 --> 00:11:01,839
and our prf security notion

287
00:11:03,200 --> 00:11:08,800
to yogi at all proved the security

288
00:11:06,399 --> 00:11:10,240
of their burn box self-revocable

289
00:11:08,800 --> 00:11:13,599
encryption scheme

290
00:11:10,240 --> 00:11:14,399
in the ideal encryption model this was a

291
00:11:13,600 --> 00:11:17,040
new

292
00:11:14,399 --> 00:11:20,800
and very strong ideal model which they

293
00:11:17,040 --> 00:11:24,880
introduced specifically for this purpose

294
00:11:20,800 --> 00:11:27,599
in our work we reprove their result

295
00:11:24,880 --> 00:11:28,880
under the under the assumption that the

296
00:11:27,600 --> 00:11:32,959
encryption scheme

297
00:11:28,880 --> 00:11:32,959
meets our new cpa notion

298
00:11:33,120 --> 00:11:37,839
finally the opaque password

299
00:11:35,760 --> 00:11:39,680
authenticated key exchange protocol of

300
00:11:37,839 --> 00:11:42,480
directly at all

301
00:11:39,680 --> 00:11:43,439
is proven secure assuming that an

302
00:11:42,480 --> 00:11:48,399
equivalent

303
00:11:43,440 --> 00:11:50,720
equivocable encryption scheme is used

304
00:11:48,399 --> 00:11:53,120
this is a new notion of security that

305
00:11:50,720 --> 00:11:56,320
they introduce for symmetric encryption

306
00:11:53,120 --> 00:11:56,880
in the e-print version of their paper in

307
00:11:56,320 --> 00:12:00,000
our work

308
00:11:56,880 --> 00:12:01,519
we observe that this new notion is

309
00:12:00,000 --> 00:12:05,519
implied by our own

310
00:12:01,519 --> 00:12:06,320
sim ac cpa notion in particular there's

311
00:12:05,519 --> 00:12:09,839
it's basically

312
00:12:06,320 --> 00:12:11,519
a single user one-time use special case

313
00:12:09,839 --> 00:12:13,279
of our notion

314
00:12:11,519 --> 00:12:15,360
if you'll allow me i'd like to take a

315
00:12:13,279 --> 00:12:17,040
brief aside to discuss some

316
00:12:15,360 --> 00:12:20,000
philosophical points about how to

317
00:12:17,040 --> 00:12:22,319
interpret the results of our paper

318
00:12:20,000 --> 00:12:23,120
in traditional motivation for ideal

319
00:12:22,320 --> 00:12:25,600
models

320
00:12:23,120 --> 00:12:28,160
say for example the random oracle model

321
00:12:25,600 --> 00:12:30,320
cryptographers have some scheme pi

322
00:12:28,160 --> 00:12:31,839
and they would like to understand if it

323
00:12:30,320 --> 00:12:35,120
meets a security notion

324
00:12:31,839 --> 00:12:38,959
x when using say your favorite

325
00:12:35,120 --> 00:12:40,560
sha hash function they run into an issue

326
00:12:38,959 --> 00:12:42,880
and are unable to come up with any

327
00:12:40,560 --> 00:12:45,279
reasonable standard model assumptions

328
00:12:42,880 --> 00:12:49,040
that they can make about sha which would

329
00:12:45,279 --> 00:12:52,320
imply the x security of pi

330
00:12:49,040 --> 00:12:55,439
so they show the scheme is secure

331
00:12:52,320 --> 00:12:58,720
first just when using a random oracle

332
00:12:55,440 --> 00:13:02,000
in place of sha then they use this

333
00:12:58,720 --> 00:13:04,399
as a sort of heuristic justification

334
00:13:02,000 --> 00:13:06,320
by which they can believe that the

335
00:13:04,399 --> 00:13:08,720
security will be maintained

336
00:13:06,320 --> 00:13:10,240
when the random oracle is instantiated

337
00:13:08,720 --> 00:13:14,480
with a concrete sha

338
00:13:10,240 --> 00:13:18,000
hash function if we try to apply this

339
00:13:14,480 --> 00:13:20,959
to our result definitions say

340
00:13:18,000 --> 00:13:22,480
thinking of x as being sim ac cpa

341
00:13:20,959 --> 00:13:25,518
security

342
00:13:22,480 --> 00:13:27,120
then we run into a problem in particular

343
00:13:25,519 --> 00:13:29,839
the techniques of nielsen that we

344
00:13:27,120 --> 00:13:31,519
discussed earlier will extend readily to

345
00:13:29,839 --> 00:13:34,000
rule out the possibility of

346
00:13:31,519 --> 00:13:36,399
any standard model scheme achieving our

347
00:13:34,000 --> 00:13:39,440
notion

348
00:13:36,399 --> 00:13:43,199
well okay how about this

349
00:13:39,440 --> 00:13:45,920
we used our scheme and the assumption

350
00:13:43,199 --> 00:13:48,479
that it achieves some notion x

351
00:13:45,920 --> 00:13:49,439
to imply that some higher level protocol

352
00:13:48,480 --> 00:13:52,480
pi prime

353
00:13:49,440 --> 00:13:54,959
achieves a notion y can we at least use

354
00:13:52,480 --> 00:13:57,279
our proofs to heuristically assume

355
00:13:54,959 --> 00:14:00,239
that pi prime achieves y when the

356
00:13:57,279 --> 00:14:03,279
variable goes instantiated

357
00:14:00,240 --> 00:14:04,720
unfortunately no again

358
00:14:03,279 --> 00:14:06,560
at least for the applications we

359
00:14:04,720 --> 00:14:09,920
considered nielsen

360
00:14:06,560 --> 00:14:12,719
again here to ruin our fun this leaves

361
00:14:09,920 --> 00:14:14,399
us with something of a conundrum

362
00:14:12,720 --> 00:14:16,320
what's the point of all of the results

363
00:14:14,399 --> 00:14:18,240
that we showed in our paper

364
00:14:16,320 --> 00:14:20,399
if there's no corresponding standard

365
00:14:18,240 --> 00:14:22,639
model assumption we can be assuming

366
00:14:20,399 --> 00:14:25,440
when we instantiate a random oracle or

367
00:14:22,639 --> 00:14:25,440
ideal cipher

368
00:14:26,880 --> 00:14:31,120
the interpretation i would like to put

369
00:14:28,959 --> 00:14:34,560
forth works like this

370
00:14:31,120 --> 00:14:36,720
first note that our notions x

371
00:14:34,560 --> 00:14:38,479
and the higher level notions y that we

372
00:14:36,720 --> 00:14:40,720
work with this in this paper

373
00:14:38,480 --> 00:14:42,240
are in some senses incredibly strong

374
00:14:40,720 --> 00:14:44,800
notions

375
00:14:42,240 --> 00:14:45,920
so our perspective here is that we could

376
00:14:44,800 --> 00:14:49,199
think

377
00:14:45,920 --> 00:14:50,079
of there being some weakened analogous

378
00:14:49,199 --> 00:14:54,079
definitions

379
00:14:50,079 --> 00:14:54,638
x prime and y prime which are strong and

380
00:14:54,079 --> 00:14:57,439
give us

381
00:14:54,639 --> 00:14:59,760
desirable properties but avoid these

382
00:14:57,440 --> 00:15:00,720
impossibility results of nielsen and may

383
00:14:59,760 --> 00:15:03,839
achievable

384
00:15:00,720 --> 00:15:03,839
in the standard model

385
00:15:04,160 --> 00:15:08,480
because of the clear strength of x and y

386
00:15:07,040 --> 00:15:10,639
we can be convinced

387
00:15:08,480 --> 00:15:12,240
that they will imply any reasonable x

388
00:15:10,639 --> 00:15:14,480
prime and y prime

389
00:15:12,240 --> 00:15:17,120
even if we aren't quite sure what the

390
00:15:14,480 --> 00:15:19,440
right choice for x prime and y prime are

391
00:15:17,120 --> 00:15:19,440
yet

392
00:15:23,600 --> 00:15:29,199
i'll finish out this talk by discussing

393
00:15:26,639 --> 00:15:30,399
how we showed that various prf's and

394
00:15:29,199 --> 00:15:33,519
encryption schemes

395
00:15:30,399 --> 00:15:35,199
meet our desired notions of security we

396
00:15:33,519 --> 00:15:37,519
start at the lowest level

397
00:15:35,199 --> 00:15:41,199
showing that random oracles and ideal

398
00:15:37,519 --> 00:15:43,839
ciphers achieve our prf notion

399
00:15:41,199 --> 00:15:44,719
these proofs provide the conceptually

400
00:15:43,839 --> 00:15:47,360
straightforward

401
00:15:44,720 --> 00:15:49,600
yet detail intensive ideal model

402
00:15:47,360 --> 00:15:51,920
programming that's at the core of all of

403
00:15:49,600 --> 00:15:53,759
our results

404
00:15:51,920 --> 00:15:55,199
the simulation strategy is fairly

405
00:15:53,759 --> 00:15:58,160
straightforward

406
00:15:55,199 --> 00:16:00,079
evaluation queries are given random

407
00:15:58,160 --> 00:16:02,800
responses

408
00:16:00,079 --> 00:16:03,680
then later when we need to expose some

409
00:16:02,800 --> 00:16:07,040
user use

410
00:16:03,680 --> 00:16:09,839
key we pick this kit random

411
00:16:07,040 --> 00:16:11,360
and then we program our ideal model to

412
00:16:09,839 --> 00:16:13,680
be consistent

413
00:16:11,360 --> 00:16:16,000
with the previous evaluation results we

414
00:16:13,680 --> 00:16:18,319
returned

415
00:16:16,000 --> 00:16:19,440
the core of analyzing this simulation

416
00:16:18,320 --> 00:16:21,360
strategy

417
00:16:19,440 --> 00:16:23,360
consists of bounding the probability of

418
00:16:21,360 --> 00:16:26,320
some bad events

419
00:16:23,360 --> 00:16:28,079
the first of these is that the same key

420
00:16:26,320 --> 00:16:31,600
happens to be sampled

421
00:16:28,079 --> 00:16:31,599
by multiple different users

422
00:16:31,680 --> 00:16:35,279
second is that the attacker is somehow

423
00:16:34,720 --> 00:16:38,240
able to

424
00:16:35,279 --> 00:16:38,800
query the ideal primitive using a user's

425
00:16:38,240 --> 00:16:42,079
key

426
00:16:38,800 --> 00:16:44,479
before that key is exposed

427
00:16:42,079 --> 00:16:47,439
and the third which is only applicable

428
00:16:44,480 --> 00:16:47,440
by your ciphers

429
00:16:48,560 --> 00:16:52,560
is if the random responses that would

430
00:16:50,639 --> 00:16:54,399
return by evaluation

431
00:16:52,560 --> 00:16:58,560
are inconsistent with the ideal

432
00:16:54,399 --> 00:16:58,560
precipitate being a permutation

433
00:16:59,600 --> 00:17:04,240
missing the first of these bad events

434
00:17:02,320 --> 00:17:05,199
was the source of many of these proof

435
00:17:04,240 --> 00:17:07,359
bugs that we

436
00:17:05,199 --> 00:17:09,839
discussed earlier that arose in prior

437
00:17:07,359 --> 00:17:09,839
papers

438
00:17:09,919 --> 00:17:13,760
to move towards proving that symmetric

439
00:17:12,319 --> 00:17:16,480
encryption schemes

440
00:17:13,760 --> 00:17:17,520
meet our new notions let's first discuss

441
00:17:16,480 --> 00:17:19,679
how we lifted

442
00:17:17,520 --> 00:17:20,559
modular results for achieving cca

443
00:17:19,679 --> 00:17:24,000
security

444
00:17:20,559 --> 00:17:26,240
to work with our new definition

445
00:17:24,000 --> 00:17:27,679
blurry and appropriate showed that in

446
00:17:26,240 --> 00:17:30,640
cpa security

447
00:17:27,679 --> 00:17:33,360
plus integrity of cipher texts implies

448
00:17:30,640 --> 00:17:35,280
in cca security

449
00:17:33,360 --> 00:17:37,039
we obtained the analogous result with

450
00:17:35,280 --> 00:17:41,200
our new versions of cpa

451
00:17:37,039 --> 00:17:43,520
and cca security to prove this result

452
00:17:41,200 --> 00:17:45,600
all we needed to do was observe that the

453
00:17:43,520 --> 00:17:47,760
integrity of ciphertexts

454
00:17:45,600 --> 00:17:49,360
means our simulator can respond to

455
00:17:47,760 --> 00:17:53,760
decryption queries

456
00:17:49,360 --> 00:17:53,760
simply by rejecting all ciphertexts

457
00:17:54,240 --> 00:17:57,520
next consider the encrypted mac

458
00:17:56,720 --> 00:18:00,240
construction

459
00:17:57,520 --> 00:18:02,240
using an encryption scheme e and a

460
00:18:00,240 --> 00:18:06,160
message authentication code

461
00:18:02,240 --> 00:18:08,960
m bilaria nonprofit

462
00:18:06,160 --> 00:18:09,919
showed that such a scheme will be in cca

463
00:18:08,960 --> 00:18:13,360
secure

464
00:18:09,919 --> 00:18:18,080
assuming that e is in cpa secure

465
00:18:13,360 --> 00:18:18,080
and m is ufcma secure

466
00:18:18,160 --> 00:18:24,480
we again obtain the analogous result

467
00:18:20,960 --> 00:18:27,600
using our versions of these definitions

468
00:18:24,480 --> 00:18:31,120
the flow of proving this mirrors that

469
00:18:27,600 --> 00:18:34,320
originally used by belarian and proper

470
00:18:31,120 --> 00:18:36,639
we borrow their results

471
00:18:34,320 --> 00:18:39,360
that shows security of the mac gives

472
00:18:36,640 --> 00:18:42,720
integrity of ciphertext

473
00:18:39,360 --> 00:18:46,159
then we show that sim cpa security

474
00:18:42,720 --> 00:18:49,440
is preserved by the encrypted mac

475
00:18:46,160 --> 00:18:50,880
transformation and with these two

476
00:18:49,440 --> 00:18:52,480
results we can then

477
00:18:50,880 --> 00:18:55,200
call back to the first result we

478
00:18:52,480 --> 00:18:57,840
discussed on this slide

479
00:18:55,200 --> 00:19:01,039
to complete the proof showing that cca

480
00:18:57,840 --> 00:19:01,039
security is achieved

481
00:19:02,240 --> 00:19:06,160
this just leaves us with understanding

482
00:19:04,400 --> 00:19:11,039
how to show that schemes

483
00:19:06,160 --> 00:19:13,919
achieve sim ac cpa security

484
00:19:11,039 --> 00:19:15,360
commonly symmetric encryption schemes

485
00:19:13,919 --> 00:19:18,080
are constructed

486
00:19:15,360 --> 00:19:20,559
as modes of operation on some underlying

487
00:19:18,080 --> 00:19:20,559
prf

488
00:19:21,120 --> 00:19:24,879
here we can think of the encryption

489
00:19:22,720 --> 00:19:29,600
being done by some algorithm

490
00:19:24,880 --> 00:19:29,600
which has only oracle access to the prf

491
00:19:29,679 --> 00:19:33,440
a typical result would say that the

492
00:19:32,240 --> 00:19:34,720
encryption scheme

493
00:19:33,440 --> 00:19:36,720
has ciphertexts which are

494
00:19:34,720 --> 00:19:41,120
indistinguishable from random

495
00:19:36,720 --> 00:19:43,600
if the underlying prf is secure

496
00:19:41,120 --> 00:19:44,320
our goal is to provide the analogous

497
00:19:43,600 --> 00:19:47,678
results

498
00:19:44,320 --> 00:19:47,678
with our new definitions

499
00:19:48,080 --> 00:19:52,399
a core part of this new security

500
00:19:50,840 --> 00:19:55,120
reduction

501
00:19:52,400 --> 00:19:57,039
involves showing how to use a simulator

502
00:19:55,120 --> 00:19:59,280
for the prf

503
00:19:57,039 --> 00:20:02,640
to construct a simulator for the

504
00:19:59,280 --> 00:20:02,639
encryption scheme as a whole

505
00:20:04,559 --> 00:20:08,559
as a concrete example let's think about

506
00:20:07,280 --> 00:20:11,600
that encryption scheme

507
00:20:08,559 --> 00:20:12,559
we were looking at earlier when f was a

508
00:20:11,600 --> 00:20:16,080
random oracle

509
00:20:12,559 --> 00:20:18,799
we saw how to simulate for this scheme

510
00:20:16,080 --> 00:20:20,799
ciphertext which is chosen at random and

511
00:20:18,799 --> 00:20:22,080
then for key exposures we first picked

512
00:20:20,799 --> 00:20:24,559
the key at random

513
00:20:22,080 --> 00:20:25,760
and then programmed our random oracle

514
00:20:24,559 --> 00:20:27,678
with that key

515
00:20:25,760 --> 00:20:30,559
to be consistent with the previous

516
00:20:27,679 --> 00:20:33,679
ciphertext returned

517
00:20:30,559 --> 00:20:38,158
if we instead just assume that our

518
00:20:33,679 --> 00:20:40,320
prf is sim ac p or f secure

519
00:20:38,159 --> 00:20:43,200
we have to modify the exposure part of

520
00:20:40,320 --> 00:20:43,200
this simulation

521
00:20:45,039 --> 00:20:48,080
first what we do is we kind of work

522
00:20:47,520 --> 00:20:50,158
backwards

523
00:20:48,080 --> 00:20:52,480
and figure out the input output pairs to

524
00:20:50,159 --> 00:20:54,960
f that would be consistent with these

525
00:20:52,480 --> 00:20:56,480
previous ciphertexts we returned

526
00:20:54,960 --> 00:20:58,320
and then we give these pairs to the

527
00:20:56,480 --> 00:21:01,440
simulator for f

528
00:20:58,320 --> 00:21:03,678
in return for a key

529
00:21:01,440 --> 00:21:06,960
this key is what we then output and

530
00:21:03,679 --> 00:21:09,200
return to the attacker

531
00:21:06,960 --> 00:21:10,480
we refer to this step of choosing input

532
00:21:09,200 --> 00:21:13,760
output pairs

533
00:21:10,480 --> 00:21:15,200
as extraction for a general security

534
00:21:13,760 --> 00:21:17,280
result

535
00:21:15,200 --> 00:21:19,919
we broadly introduced the notion of

536
00:21:17,280 --> 00:21:21,840
extractable encryption schemes

537
00:21:19,919 --> 00:21:24,240
these are just schemes that come with a

538
00:21:21,840 --> 00:21:27,678
procedure for determining explanatory

539
00:21:24,240 --> 00:21:27,679
values of the prf

540
00:21:27,840 --> 00:21:31,918
for such a scheme there's a canonical

541
00:21:30,320 --> 00:21:35,200
strategy that we can use

542
00:21:31,919 --> 00:21:37,200
for simulating

543
00:21:35,200 --> 00:21:38,880
first cipher texts are just chosen at

544
00:21:37,200 --> 00:21:41,200
random

545
00:21:38,880 --> 00:21:42,960
and then at exposure time we use the

546
00:21:41,200 --> 00:21:45,679
extractor

547
00:21:42,960 --> 00:21:48,240
to obtain these explanatory values we

548
00:21:45,679 --> 00:21:49,919
feed them to the simulator to the prf

549
00:21:48,240 --> 00:21:51,440
to obtain the key that we're going to

550
00:21:49,919 --> 00:21:55,039
return

551
00:21:51,440 --> 00:21:56,960
our main cpa theorem says that any

552
00:21:55,039 --> 00:22:00,400
extractable mode of operation

553
00:21:56,960 --> 00:22:04,400
is secure when using a sim ac secure

554
00:22:00,400 --> 00:22:07,679
prf formally extractability

555
00:22:04,400 --> 00:22:10,400
requires three separate properties

556
00:22:07,679 --> 00:22:12,159
a correctness property requiring that

557
00:22:10,400 --> 00:22:14,960
encrypting with values which were

558
00:22:12,159 --> 00:22:19,120
extracted from some ciphertext c

559
00:22:14,960 --> 00:22:19,120
will give back that same cipher text c

560
00:22:19,600 --> 00:22:24,080
a uniformly property says that if the

561
00:22:22,960 --> 00:22:26,799
ciphertext

562
00:22:24,080 --> 00:22:27,439
are pricked at random then the extracted

563
00:22:26,799 --> 00:22:32,639
prf

564
00:22:27,440 --> 00:22:34,880
outputs should look random and finally

565
00:22:32,640 --> 00:22:36,720
there's a security property which

566
00:22:34,880 --> 00:22:37,760
captures that extraction should be

567
00:22:36,720 --> 00:22:41,039
unlikely to give

568
00:22:37,760 --> 00:22:43,039
inconsistent outputs for the prf

569
00:22:41,039 --> 00:22:45,120
typically the first two of these

570
00:22:43,039 --> 00:22:49,120
properties are straightforward

571
00:22:45,120 --> 00:22:51,120
to verify for modes of operations

572
00:22:49,120 --> 00:22:53,120
security is typically the most

573
00:22:51,120 --> 00:22:55,678
interesting property

574
00:22:53,120 --> 00:22:57,120
fortunately what we find is that the

575
00:22:55,679 --> 00:22:59,840
required analysis

576
00:22:57,120 --> 00:23:02,559
is typically already implicit in the

577
00:22:59,840 --> 00:23:04,879
existing security proofs for the scheme

578
00:23:02,559 --> 00:23:05,600
when using the standard notions of prf

579
00:23:04,880 --> 00:23:09,840
security

580
00:23:05,600 --> 00:23:09,840
and in dollar sign security

581
00:23:10,080 --> 00:23:15,280
so putting this together our framework

582
00:23:12,400 --> 00:23:18,320
of extractable modes of operations

583
00:23:15,280 --> 00:23:21,200
provides clean way of

584
00:23:18,320 --> 00:23:22,399
efficiently lifting up known results to

585
00:23:21,200 --> 00:23:26,400
hold with our new

586
00:23:22,400 --> 00:23:26,400
sim ac style notions

587
00:23:26,640 --> 00:23:30,320
and with that i have reached the end of

588
00:23:28,799 --> 00:23:32,320
my talk

589
00:23:30,320 --> 00:23:34,399
i will leave you here with this slide

590
00:23:32,320 --> 00:23:36,158
that recalls the main contributions of

591
00:23:34,400 --> 00:23:38,000
our work

592
00:23:36,159 --> 00:23:41,360
thanks for your attention and have a

593
00:23:38,000 --> 00:23:41,360
nice day

