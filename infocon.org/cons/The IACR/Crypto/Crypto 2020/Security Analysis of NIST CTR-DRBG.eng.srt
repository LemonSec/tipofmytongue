1
00:00:00,799 --> 00:00:07,839
this talk is about security analysis of

2
00:00:04,080 --> 00:00:11,120
counter diabetes a national standard

3
00:00:07,839 --> 00:00:11,840
of random number generator i'm vietng

4
00:00:11,120 --> 00:00:15,120
one

5
00:00:11,840 --> 00:00:18,720
and its short work with javin sheng

6
00:00:15,120 --> 00:00:19,520
as i mentioned earlier counter diabetes

7
00:00:18,720 --> 00:00:24,320
is a

8
00:00:19,520 --> 00:00:27,599
random number generator or ing for short

9
00:00:24,320 --> 00:00:28,560
synthetically an rng is a stable

10
00:00:27,599 --> 00:00:31,759
algorithm

11
00:00:28,560 --> 00:00:32,000
that keeps refreshing state via inputs

12
00:00:31,760 --> 00:00:34,960
of

13
00:00:32,000 --> 00:00:36,239
high-min entropy and provides

14
00:00:34,960 --> 00:00:40,719
pseudo-random outputs

15
00:00:36,239 --> 00:00:41,599
upon request the int that we'll discuss

16
00:00:40,719 --> 00:00:44,640
today is

17
00:00:41,600 --> 00:00:48,079
counter dipg which is the most

18
00:00:44,640 --> 00:00:50,719
popular standardized ing it has been

19
00:00:48,079 --> 00:00:54,480
used in numerous cryptographic libraries

20
00:00:50,719 --> 00:00:57,440
and operating systems such as open ssl

21
00:00:54,480 --> 00:00:58,239
or windows 10 the security of these

22
00:00:57,440 --> 00:01:02,879
systems

23
00:00:58,239 --> 00:01:06,158
crucially depends on counter diabetes

24
00:01:02,879 --> 00:01:08,640
despite the importance of kata drpg

25
00:01:06,159 --> 00:01:09,680
for a long time there have been very few

26
00:01:08,640 --> 00:01:12,720
papers on

27
00:01:09,680 --> 00:01:13,520
analyzing this scheme these limited

28
00:01:12,720 --> 00:01:16,479
analysis

29
00:01:13,520 --> 00:01:17,679
however considered just some simplified

30
00:01:16,479 --> 00:01:21,119
component

31
00:01:17,680 --> 00:01:24,840
of cut eibg and therefore

32
00:01:21,119 --> 00:01:28,400
cannot support security claims in these

33
00:01:24,840 --> 00:01:31,520
documents in 2019

34
00:01:28,400 --> 00:01:32,320
woulda and schumann point out that some

35
00:01:31,520 --> 00:01:35,439
options

36
00:01:32,320 --> 00:01:40,000
in the openly flexible specification

37
00:01:35,439 --> 00:01:42,398
of counter diabetes might be exploitable

38
00:01:40,000 --> 00:01:43,759
shortly after that theoretical

39
00:01:42,399 --> 00:01:47,680
observation

40
00:01:43,759 --> 00:01:50,799
is confirmed by the work of karni at all

41
00:01:47,680 --> 00:01:56,159
the latter gives a scientific attack

42
00:01:50,799 --> 00:01:58,399
on reward implementation of kata drbg

43
00:01:56,159 --> 00:01:59,680
the lessons learned from these two

44
00:01:58,399 --> 00:02:02,560
papers are

45
00:01:59,680 --> 00:02:03,119
first you should deprecate in-secure

46
00:02:02,560 --> 00:02:06,799
options

47
00:02:03,119 --> 00:02:09,440
in kata diabetes next if you are

48
00:02:06,799 --> 00:02:11,360
a developer you should be mindful of

49
00:02:09,440 --> 00:02:14,560
misusing such as

50
00:02:11,360 --> 00:02:17,280
using leaky table based ies

51
00:02:14,560 --> 00:02:18,800
or failure to replace the state

52
00:02:17,280 --> 00:02:22,879
periodically

53
00:02:18,800 --> 00:02:26,080
or using low entropy input

54
00:02:22,879 --> 00:02:26,879
still that remains a big question that

55
00:02:26,080 --> 00:02:30,400
is

56
00:02:26,879 --> 00:02:33,920
if we adopt all of these recommendations

57
00:02:30,400 --> 00:02:37,120
is counter reality secure

58
00:02:33,920 --> 00:02:39,679
our gives an affirmative answer for this

59
00:02:37,120 --> 00:02:39,680
question

60
00:02:40,080 --> 00:02:44,720
before we get into the technical details

61
00:02:43,040 --> 00:02:48,400
let's define what we mean by

62
00:02:44,720 --> 00:02:51,680
security our target is the robust

63
00:02:48,400 --> 00:02:53,040
notion of notice at all which is a

64
00:02:51,680 --> 00:02:56,560
standard guru of

65
00:02:53,040 --> 00:02:59,519
ings informally

66
00:02:56,560 --> 00:03:01,040
an ing should still provide security

67
00:02:59,519 --> 00:03:04,239
either in the face of

68
00:03:01,040 --> 00:03:07,920
state compromise or adversarial

69
00:03:04,239 --> 00:03:09,519
input in particular we will consider a

70
00:03:07,920 --> 00:03:13,599
pair of adversaries

71
00:03:09,519 --> 00:03:16,720
a and d the sampler d would generate

72
00:03:13,599 --> 00:03:19,760
the inputs the address a

73
00:03:16,720 --> 00:03:22,800
would try to compromise the state

74
00:03:19,760 --> 00:03:26,159
and also distinguish the outputs

75
00:03:22,800 --> 00:03:29,040
with truly random strings

76
00:03:26,159 --> 00:03:30,720
if the ing is based on an ideal

77
00:03:29,040 --> 00:03:34,640
primitive pi

78
00:03:30,720 --> 00:03:37,040
we will give a oracle access to pi

79
00:03:34,640 --> 00:03:39,040
the sampler d however doesn't have

80
00:03:37,040 --> 00:03:42,159
access to pi

81
00:03:39,040 --> 00:03:46,000
in other words the img

82
00:03:42,159 --> 00:03:49,840
has a huge seat namely the encoding

83
00:03:46,000 --> 00:03:49,840
of the ideal primitive by

84
00:03:50,159 --> 00:03:55,040
in addition to phi the atmosphere is

85
00:03:52,799 --> 00:03:58,080
also given other oracles

86
00:03:55,040 --> 00:03:59,200
for example it can get the state of the

87
00:03:58,080 --> 00:04:01,519
rng

88
00:03:59,200 --> 00:04:03,200
or it can set the state of the energy to

89
00:04:01,519 --> 00:04:05,439
evaluate lies

90
00:04:03,200 --> 00:04:06,798
or it can force the energy to repress

91
00:04:05,439 --> 00:04:09,359
the state

92
00:04:06,799 --> 00:04:11,920
the adversary however doesn't control

93
00:04:09,360 --> 00:04:14,959
the random inputs

94
00:04:11,920 --> 00:04:17,839
finally adversary a is also given a real

95
00:04:14,959 --> 00:04:18,399
random oracle that provides either the

96
00:04:17,839 --> 00:04:21,599
real

97
00:04:18,399 --> 00:04:23,758
outputs of the ing or random strings of

98
00:04:21,600 --> 00:04:25,919
the same length

99
00:04:23,759 --> 00:04:27,680
this oracle however will provide real

100
00:04:25,919 --> 00:04:29,840
outputs if not enough mean

101
00:04:27,680 --> 00:04:31,680
entropy is supplied from a last step

102
00:04:29,840 --> 00:04:33,919
compromise

103
00:04:31,680 --> 00:04:35,600
we define the advantage of the

104
00:04:33,919 --> 00:04:39,120
adversaries a and d

105
00:04:35,600 --> 00:04:40,160
as a normalized probability that a can

106
00:04:39,120 --> 00:04:42,639
guess correctly

107
00:04:40,160 --> 00:04:43,360
whether it receives real outputs of the

108
00:04:42,639 --> 00:04:46,639
energy

109
00:04:43,360 --> 00:04:46,639
or the random strings

110
00:04:47,759 --> 00:04:52,080
let me now give you a birth eye view of

111
00:04:50,160 --> 00:04:54,240
counter diabg

112
00:04:52,080 --> 00:04:56,320
this construction is based on a

113
00:04:54,240 --> 00:04:59,680
randomness extractor

114
00:04:56,320 --> 00:05:03,680
that will go condensed then encrypt or

115
00:04:59,680 --> 00:05:04,880
cte counter diabetes consists of three

116
00:05:03,680 --> 00:05:07,520
algorithm

117
00:05:04,880 --> 00:05:08,639
one to derive the initial state the

118
00:05:07,520 --> 00:05:11,198
other one

119
00:05:08,639 --> 00:05:14,320
to refresh the state and yet another one

120
00:05:11,199 --> 00:05:14,320
to generate outputs

121
00:05:14,800 --> 00:05:18,720
the state of counter the rpg consists of

122
00:05:17,039 --> 00:05:21,919
a key k

123
00:05:18,720 --> 00:05:24,639
and an ibv for aes

124
00:05:21,919 --> 00:05:25,758
for example if you want to derive the

125
00:05:24,639 --> 00:05:28,880
initial state

126
00:05:25,759 --> 00:05:32,160
from an input i will apply

127
00:05:28,880 --> 00:05:35,280
cte on i will then

128
00:05:32,160 --> 00:05:38,479
use counter mode under a 0

129
00:05:35,280 --> 00:05:40,559
key and a 0 iv to encrypt the extracted

130
00:05:38,479 --> 00:05:42,560
string

131
00:05:40,560 --> 00:05:43,759
the resulting cell tags will then be

132
00:05:42,560 --> 00:05:47,199
passed into

133
00:05:43,759 --> 00:05:50,320
k and v accordingly

134
00:05:47,199 --> 00:05:53,120
if you want to generate an output

135
00:05:50,320 --> 00:05:54,639
we'll use the dragata mode to give a

136
00:05:53,120 --> 00:05:58,160
zero string

137
00:05:54,639 --> 00:06:01,280
under the key k and ivv

138
00:05:58,160 --> 00:06:06,319
from the stack the resulting

139
00:06:01,280 --> 00:06:10,638
output would be passed into an output r

140
00:06:06,319 --> 00:06:13,600
and unabated state k and b accordingly

141
00:06:10,639 --> 00:06:15,199
our result vows the robotic advantage of

142
00:06:13,600 --> 00:06:18,720
character dibg

143
00:06:15,199 --> 00:06:20,880
via two terms the first term measures

144
00:06:18,720 --> 00:06:22,880
pseudorandomness quality of outputs

145
00:06:20,880 --> 00:06:25,360
produced by catamount

146
00:06:22,880 --> 00:06:29,520
the second term measures how well we

147
00:06:25,360 --> 00:06:29,520
extract randomness from cte

148
00:06:30,400 --> 00:06:33,599
here's outbound for the pseudorandomness

149
00:06:32,720 --> 00:06:36,400
quality of

150
00:06:33,600 --> 00:06:37,600
outputs produced by cut mode in

151
00:06:36,400 --> 00:06:41,359
particular

152
00:06:37,600 --> 00:06:44,639
because we'll use counter on many keys

153
00:06:41,360 --> 00:06:45,440
so the first term bounce the multi-user

154
00:06:44,639 --> 00:06:48,639
via

155
00:06:45,440 --> 00:06:50,719
advantage of card mode and the second

156
00:06:48,639 --> 00:06:54,880
term bows the advantage of

157
00:06:50,720 --> 00:06:59,039
guessing one of the q counter keys

158
00:06:54,880 --> 00:06:59,039
via atmos q attempts

159
00:07:00,240 --> 00:07:04,880
to bow the quality of extracting

160
00:07:02,479 --> 00:07:07,840
randomness from cte

161
00:07:04,880 --> 00:07:09,120
we will use the generalized left over

162
00:07:07,840 --> 00:07:13,039
hash lemma

163
00:07:09,120 --> 00:07:16,000
from barack at all in particular

164
00:07:13,039 --> 00:07:18,080
if a granular input has lambda base of

165
00:07:16,000 --> 00:07:21,199
conditional mean entropy

166
00:07:18,080 --> 00:07:26,479
given other inputs we recommend that

167
00:07:21,199 --> 00:07:26,479
lambda to be at least 216.

168
00:07:26,639 --> 00:07:30,960
for the rest of the talk i will

169
00:07:28,319 --> 00:07:34,160
elaborate more on randomness extraction

170
00:07:30,960 --> 00:07:36,000
in culture divg namely the cte

171
00:07:34,160 --> 00:07:39,680
construction

172
00:07:36,000 --> 00:07:43,280
so this fixture is a blueprint of cte

173
00:07:39,680 --> 00:07:44,000
in particular given an input i you add

174
00:07:43,280 --> 00:07:47,599
some prefix

175
00:07:44,000 --> 00:07:50,479
free encoding and a padding

176
00:07:47,599 --> 00:07:51,360
it then iterate through cbc mark up to

177
00:07:50,479 --> 00:07:54,960
three times

178
00:07:51,360 --> 00:07:56,960
with different constant ivs

179
00:07:54,960 --> 00:07:58,080
the resulting cell that is then passed

180
00:07:56,960 --> 00:08:01,440
into a key

181
00:07:58,080 --> 00:08:03,758
and an iv of ies we will use this key in

182
00:08:01,440 --> 00:08:07,199
iv to encrypt a zero string

183
00:08:03,759 --> 00:08:11,520
under the cvc mode and the

184
00:08:07,199 --> 00:08:14,560
cell deck is the extracted output string

185
00:08:11,520 --> 00:08:18,878
as mentioned earlier cte

186
00:08:14,560 --> 00:08:22,080
is based on cbc map as a building block

187
00:08:18,879 --> 00:08:26,800
conventionally cbc map uses the zero iv

188
00:08:22,080 --> 00:08:30,000
but in cte the iv is nonzero

189
00:08:26,800 --> 00:08:32,240
a classical guide for using cbc map

190
00:08:30,000 --> 00:08:33,360
as a randomness extractor comes from the

191
00:08:32,240 --> 00:08:36,799
work of notice at

192
00:08:33,360 --> 00:08:38,159
all in particular if you want to see the

193
00:08:36,799 --> 00:08:40,640
random outputs

194
00:08:38,159 --> 00:08:42,000
egg issues should have high conditional

195
00:08:40,640 --> 00:08:45,439
mean entropy

196
00:08:42,000 --> 00:08:48,160
given the bus inputs

197
00:08:45,440 --> 00:08:49,680
this recommendation is however violated

198
00:08:48,160 --> 00:08:52,959
in cte

199
00:08:49,680 --> 00:08:55,279
in particular cta uses cpc mark

200
00:08:52,959 --> 00:08:57,119
on essentially the same input multiple

201
00:08:55,279 --> 00:08:59,600
times

202
00:08:57,120 --> 00:09:02,000
this is one of the biggest challenges in

203
00:08:59,600 --> 00:09:05,600
analyzing security of cpe

204
00:09:02,000 --> 00:09:05,600
as a randomized extractor

205
00:09:05,680 --> 00:09:11,040
to get around this obstacle we realize

206
00:09:08,560 --> 00:09:14,479
that the output of cte

207
00:09:11,040 --> 00:09:17,839
will be used to derive a key k and an

208
00:09:14,480 --> 00:09:21,200
iv v for the countable

209
00:09:17,839 --> 00:09:24,560
therefore if we model a s

210
00:09:21,200 --> 00:09:27,519
as an ideal cipher these outputs

211
00:09:24,560 --> 00:09:28,000
only need to be unpredictable instead of

212
00:09:27,519 --> 00:09:31,680
being

213
00:09:28,000 --> 00:09:34,240
pseudorandom as a result

214
00:09:31,680 --> 00:09:36,000
we can circumvest the requirements in a

215
00:09:34,240 --> 00:09:39,839
classic work of notice at

216
00:09:36,000 --> 00:09:43,519
all as an added plus

217
00:09:39,839 --> 00:09:46,880
because we only need the outputs of cpe

218
00:09:43,519 --> 00:09:48,839
to be merely unpredictable

219
00:09:46,880 --> 00:09:50,080
we can reduce the mean entropy

220
00:09:48,839 --> 00:09:55,680
requirements

221
00:09:50,080 --> 00:09:58,640
from 280 bits to 216 bits

222
00:09:55,680 --> 00:09:59,040
before we analyze the unpredictability

223
00:09:58,640 --> 00:10:02,000
of

224
00:09:59,040 --> 00:10:03,680
city outputs let's define an

225
00:10:02,000 --> 00:10:06,800
unbreakability notion

226
00:10:03,680 --> 00:10:10,239
for key hash function h

227
00:10:06,800 --> 00:10:12,880
in this game we first sample a

228
00:10:10,240 --> 00:10:14,160
random input i of land with submin

229
00:10:12,880 --> 00:10:17,120
entropy

230
00:10:14,160 --> 00:10:17,760
we then generate a key k uniformly at

231
00:10:17,120 --> 00:10:20,959
random

232
00:10:17,760 --> 00:10:24,880
independent i we then

233
00:10:20,959 --> 00:10:28,560
hash i under the key k to produce an

234
00:10:24,880 --> 00:10:29,760
output z we then define the guessing

235
00:10:28,560 --> 00:10:33,839
advantage

236
00:10:29,760 --> 00:10:37,040
of an average a against h by acuras

237
00:10:33,839 --> 00:10:40,240
as the probability that a can get z

238
00:10:37,040 --> 00:10:43,199
via q gases

239
00:10:40,240 --> 00:10:44,720
analyzing the unpredictability of cte is

240
00:10:43,200 --> 00:10:48,079
rather tricky

241
00:10:44,720 --> 00:10:50,240
let's begin with an intuitive approach

242
00:10:48,079 --> 00:10:51,760
in particular we will first show that

243
00:10:50,240 --> 00:10:55,360
cpc mac is an

244
00:10:51,760 --> 00:10:57,920
almost universal au hash function

245
00:10:55,360 --> 00:10:59,440
that is if we pick two distinct strings

246
00:10:57,920 --> 00:11:01,680
x and y

247
00:10:59,440 --> 00:11:04,640
and sample a uniformly random

248
00:11:01,680 --> 00:11:04,640
permutation by

249
00:11:04,959 --> 00:11:12,239
and then if we has x and y under cbc

250
00:11:08,959 --> 00:11:15,518
mach or pi then this is unlikely to

251
00:11:12,240 --> 00:11:18,160
result in a collision

252
00:11:15,519 --> 00:11:21,279
next we will employ the generalized

253
00:11:18,160 --> 00:11:24,480
leftover hash level of product at all

254
00:11:21,279 --> 00:11:27,360
which essentially says that any good au

255
00:11:24,480 --> 00:11:28,399
hash function is also a good journalist

256
00:11:27,360 --> 00:11:32,640
extractor

257
00:11:28,399 --> 00:11:32,640
for unpredictability applications

258
00:11:32,880 --> 00:11:35,920
as i mentioned earlier we want the

259
00:11:35,279 --> 00:11:39,279
collision

260
00:11:35,920 --> 00:11:42,640
probability of cbc multiple is small

261
00:11:39,279 --> 00:11:45,120
but how small is enough

262
00:11:42,640 --> 00:11:47,279
if we use the classic analysis in the

263
00:11:45,120 --> 00:11:50,560
work of notice at all

264
00:11:47,279 --> 00:11:50,880
it gives a good collision bound but only

265
00:11:50,560 --> 00:11:54,719
for

266
00:11:50,880 --> 00:11:54,720
x and y of the same length

267
00:11:55,200 --> 00:11:58,959
if we use this analysis in the context

268
00:11:57,680 --> 00:12:01,199
of cte

269
00:11:58,959 --> 00:12:02,880
it means that we are effectively

270
00:12:01,200 --> 00:12:05,279
assuming that

271
00:12:02,880 --> 00:12:06,240
the letter x random input is linked to

272
00:12:05,279 --> 00:12:10,720
the adversary

273
00:12:06,240 --> 00:12:12,880
a before it makes guesses

274
00:12:10,720 --> 00:12:14,720
because the length is a part of the

275
00:12:12,880 --> 00:12:17,519
entropy of inputs

276
00:12:14,720 --> 00:12:18,880
so it means that we are wasting entropy

277
00:12:17,519 --> 00:12:22,480
of random inputs

278
00:12:18,880 --> 00:12:22,480
and it is undesirable

279
00:12:22,839 --> 00:12:26,160
alternatively we can use the analysis in

280
00:12:25,360 --> 00:12:29,440
the world of

281
00:12:26,160 --> 00:12:32,719
molari bisect and runaway r

282
00:12:29,440 --> 00:12:36,000
cha and nandi these analysis

283
00:12:32,720 --> 00:12:38,720
can handle arbitrary x and y

284
00:12:36,000 --> 00:12:41,120
but the resulting bug is inferior for

285
00:12:38,720 --> 00:12:43,680
our purpose

286
00:12:41,120 --> 00:12:44,240
let's now try to find a different way to

287
00:12:43,680 --> 00:12:48,319
give an

288
00:12:44,240 --> 00:12:48,320
unpredictability bio for cte

289
00:12:49,680 --> 00:12:52,959
as shown in this picture the output of

290
00:12:52,240 --> 00:12:56,560
cte

291
00:12:52,959 --> 00:12:59,439
is the civil text of cbc encryption

292
00:12:56,560 --> 00:13:00,319
in order to predict this civil tax one

293
00:12:59,440 --> 00:13:05,120
is to guess

294
00:13:00,320 --> 00:13:08,639
both the key and the iv of cbc

295
00:13:05,120 --> 00:13:11,680
in our fair attempt we only require the

296
00:13:08,639 --> 00:13:15,200
adversary to predict the key

297
00:13:11,680 --> 00:13:17,519
and as a result the bow is poor

298
00:13:15,200 --> 00:13:19,200
we now can have a better bow if we

299
00:13:17,519 --> 00:13:25,120
require adversary

300
00:13:19,200 --> 00:13:25,120
to get both the key and iv of cbc

301
00:13:26,959 --> 00:13:30,199
realizing this observation translates to

302
00:13:29,839 --> 00:13:33,760
a

303
00:13:30,200 --> 00:13:36,480
multi-collision property of cvc mark

304
00:13:33,760 --> 00:13:37,760
in particular we need to show that if we

305
00:13:36,480 --> 00:13:41,839
pick two distinct

306
00:13:37,760 --> 00:13:45,199
strings x and y and then sample

307
00:13:41,839 --> 00:13:48,399
a random permutation pi

308
00:13:45,199 --> 00:13:51,599
then if we hash x and y

309
00:13:48,399 --> 00:13:54,800
under cbc map of pi with

310
00:13:51,600 --> 00:13:56,399
different ivs 0 and iv1

311
00:13:54,800 --> 00:13:58,800
then the chance that we have a double

312
00:13:56,399 --> 00:14:01,600
collision is small

313
00:13:58,800 --> 00:14:02,279
in our work we can show that the chance

314
00:14:01,600 --> 00:14:05,680
of this

315
00:14:02,279 --> 00:14:09,839
multicollision is at most 64

316
00:14:05,680 --> 00:14:12,880
l cubed over 2 to the 256

317
00:14:09,839 --> 00:14:16,240
where l is the maximum block length of

318
00:14:12,880 --> 00:14:18,160
x and y

319
00:14:16,240 --> 00:14:20,560
this multi-collision property then

320
00:14:18,160 --> 00:14:21,439
implies that it is hard to predict both

321
00:14:20,560 --> 00:14:26,560
the key

322
00:14:21,440 --> 00:14:30,320
and iv of cbc encryption inside cte

323
00:14:26,560 --> 00:14:32,160
as a result cte is a good and you hash

324
00:14:30,320 --> 00:14:34,639
function

325
00:14:32,160 --> 00:14:38,079
we can prove that without squandering

326
00:14:34,639 --> 00:14:40,639
entropy of random inputs

327
00:14:38,079 --> 00:14:42,560
finally we will employ the share lines

328
00:14:40,639 --> 00:14:46,480
left over hash lemma

329
00:14:42,560 --> 00:14:47,800
to show that city is a good journalist

330
00:14:46,480 --> 00:14:51,519
extractor for

331
00:14:47,800 --> 00:14:54,079
unbreakability applications

332
00:14:51,519 --> 00:14:55,920
it is the vow for the guesting advantage

333
00:14:54,079 --> 00:15:01,040
of an adversary

334
00:14:55,920 --> 00:15:01,040
against cte for q guesses

335
00:15:01,839 --> 00:15:07,199
in conclusion our work shows that if you

336
00:15:05,279 --> 00:15:10,160
adopt the recommendations

337
00:15:07,199 --> 00:15:11,519
in the work of buddha and shumau and

338
00:15:10,160 --> 00:15:15,199
connie at all

339
00:15:11,519 --> 00:15:18,320
that counter diabetes is robust

340
00:15:15,199 --> 00:15:21,519
moreover our also sheds some light

341
00:15:18,320 --> 00:15:22,639
in the design of counter drbg in

342
00:15:21,519 --> 00:15:25,120
particular

343
00:15:22,639 --> 00:15:26,240
this construction looks quite cumbersome

344
00:15:25,120 --> 00:15:29,279
at first

345
00:15:26,240 --> 00:15:30,720
however underneath that it contains very

346
00:15:29,279 --> 00:15:33,279
neat design ideas

347
00:15:30,720 --> 00:15:34,720
for getting around the limitation of

348
00:15:33,279 --> 00:15:39,040
using cbc map

349
00:15:34,720 --> 00:15:39,040
to extract randomness

