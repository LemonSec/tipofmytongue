1
00:00:01,120 --> 00:00:05,359
hi welcome to this talk on scalable sudo

2
00:00:03,360 --> 00:00:07,600
uno quantum states and my name is amush

3
00:00:05,359 --> 00:00:09,760
muelli and this is joint walk with vikka

4
00:00:07,600 --> 00:00:12,239
brakieski

5
00:00:09,760 --> 00:00:14,240
and this work is going to focus on the

6
00:00:12,240 --> 00:00:15,360
efficient generation of quantum random

7
00:00:14,240 --> 00:00:17,680
states

8
00:00:15,360 --> 00:00:19,359
and the basic fact in quantum

9
00:00:17,680 --> 00:00:20,400
information theory that efficiently

10
00:00:19,359 --> 00:00:22,160
generating

11
00:00:20,400 --> 00:00:24,720
a truly random quantum state is

12
00:00:22,160 --> 00:00:26,480
impossible this follows because if we

13
00:00:24,720 --> 00:00:28,479
consider the space of all in qubit

14
00:00:26,480 --> 00:00:30,640
quantum states

15
00:00:28,480 --> 00:00:32,079
this space is infinite but even if we

16
00:00:30,640 --> 00:00:34,960
discretize it

17
00:00:32,079 --> 00:00:35,440
to any negligible precision that then

18
00:00:34,960 --> 00:00:37,600
the

19
00:00:35,440 --> 00:00:39,519
number of points is going to be too big

20
00:00:37,600 --> 00:00:42,320
it's going to be super exponential

21
00:00:39,520 --> 00:00:44,320
and we don't have hope of efficiently

22
00:00:42,320 --> 00:00:47,760
sampling form

23
00:00:44,320 --> 00:00:48,399
and now one known solution to this

24
00:00:47,760 --> 00:00:52,640
problem

25
00:00:48,399 --> 00:00:55,520
is aiming for more modus gold namely

26
00:00:52,640 --> 00:00:57,680
aiming to sample from a distribution

27
00:00:55,520 --> 00:00:59,120
such that for a bounded number of copies

28
00:00:57,680 --> 00:01:01,600
of the output state

29
00:00:59,120 --> 00:01:03,120
uh it is going to be indistinguishable

30
00:01:01,600 --> 00:01:05,119
from the same number of copies of a

31
00:01:03,120 --> 00:01:07,600
trillion quantum state

32
00:01:05,119 --> 00:01:08,400
and indeed this modest approach has

33
00:01:07,600 --> 00:01:11,199
results

34
00:01:08,400 --> 00:01:12,000
uh one kind of strategy is called the

35
00:01:11,200 --> 00:01:14,479
quantum state

36
00:01:12,000 --> 00:01:15,840
design this is an efficiently samplable

37
00:01:14,479 --> 00:01:17,200
usually efficient assemblable

38
00:01:15,840 --> 00:01:20,400
distribution

39
00:01:17,200 --> 00:01:24,479
a where for an a priori known t

40
00:01:20,400 --> 00:01:27,040
number of copies and output states a t

41
00:01:24,479 --> 00:01:27,920
copies of the of an outer space of this

42
00:01:27,040 --> 00:01:29,759
distribution

43
00:01:27,920 --> 00:01:31,680
and t copies of the tolerance quantum

44
00:01:29,759 --> 00:01:33,280
state are going to be statistically

45
00:01:31,680 --> 00:01:34,799
indistinguishable which means that the

46
00:01:33,280 --> 00:01:38,000
trace distance is going to be

47
00:01:34,799 --> 00:01:41,520
a negligible and

48
00:01:38,000 --> 00:01:44,320
another kind of strategy more recent

49
00:01:41,520 --> 00:01:46,158
is called a pseudo-random quantum state

50
00:01:44,320 --> 00:01:47,520
this is again an efficiently assemblable

51
00:01:46,159 --> 00:01:51,040
distribution such that

52
00:01:47,520 --> 00:01:52,479
this time for any polynomial a number of

53
00:01:51,040 --> 00:01:55,040
copies t

54
00:01:52,479 --> 00:01:55,840
and the output states t copies of the

55
00:01:55,040 --> 00:01:57,759
outer space

56
00:01:55,840 --> 00:01:59,520
and and t copies of the truly random

57
00:01:57,759 --> 00:02:02,000
quantum state are going to be

58
00:01:59,520 --> 00:02:02,640
a computationally indistinguishable this

59
00:02:02,000 --> 00:02:05,119
time

60
00:02:02,640 --> 00:02:07,520
uh the dismissability is going to hold

61
00:02:05,119 --> 00:02:11,120
only against polynomial time

62
00:02:07,520 --> 00:02:14,079
a quantum distinguishes

63
00:02:11,120 --> 00:02:15,680
now let's define exactly uh what are the

64
00:02:14,080 --> 00:02:19,040
pseudorandom quantum states

65
00:02:15,680 --> 00:02:22,480
this notion was defined by g du in song

66
00:02:19,040 --> 00:02:25,200
for the first time in crypto 2018

67
00:02:22,480 --> 00:02:27,679
so this is a quantum algorithm the prs

68
00:02:25,200 --> 00:02:30,640
generator is a quantum algorithm g

69
00:02:27,680 --> 00:02:33,120
it gets two inputs uh one is a parameter

70
00:02:30,640 --> 00:02:36,160
denoting the the number of

71
00:02:33,120 --> 00:02:37,360
qubits in the output state the other is

72
00:02:36,160 --> 00:02:39,040
a classical key

73
00:02:37,360 --> 00:02:41,840
and the security guarantees the

74
00:02:39,040 --> 00:02:44,319
following so for any polynomial

75
00:02:41,840 --> 00:02:45,360
if we think of the output state of the

76
00:02:44,319 --> 00:02:49,839
generator for

77
00:02:45,360 --> 00:02:52,000
a classical random key then a

78
00:02:49,840 --> 00:02:53,519
copies of this of this state and

79
00:02:52,000 --> 00:02:55,200
polynomially many copies

80
00:02:53,519 --> 00:02:57,360
of a total and quantum state are going

81
00:02:55,200 --> 00:02:59,679
to be indistinguishable

82
00:02:57,360 --> 00:03:02,319
for polynomial time quantum

83
00:02:59,680 --> 00:03:05,360
distinguishers

84
00:03:02,319 --> 00:03:09,280
and prs generators have a few

85
00:03:05,360 --> 00:03:11,120
uh a few applications uh some inclu

86
00:03:09,280 --> 00:03:12,720
some of them are a simulation of

87
00:03:11,120 --> 00:03:16,319
thermalized quantum states

88
00:03:12,720 --> 00:03:19,760
another application is quantum money

89
00:03:16,319 --> 00:03:20,480
and these pls generators are known to

90
00:03:19,760 --> 00:03:23,440
exist

91
00:03:20,480 --> 00:03:26,000
based on the existence of post quantum

92
00:03:23,440 --> 00:03:29,920
one-way functions

93
00:03:26,000 --> 00:03:33,200
now one property that that is present

94
00:03:29,920 --> 00:03:35,839
in all pls generators is that what we

95
00:03:33,200 --> 00:03:38,879
think of as the security parameter

96
00:03:35,840 --> 00:03:40,879
is the same number as the size of the

97
00:03:38,879 --> 00:03:43,120
output quantum state

98
00:03:40,879 --> 00:03:44,959
let's be more precise about it so let's

99
00:03:43,120 --> 00:03:48,319
let's recall for a moment the

100
00:03:44,959 --> 00:03:50,959
security definition of a prs generator

101
00:03:48,319 --> 00:03:53,040
so what we're seeing in red is what we

102
00:03:50,959 --> 00:03:54,319
think of as the security parameter right

103
00:03:53,040 --> 00:03:56,959
this is the number

104
00:03:54,319 --> 00:03:57,599
the denotes say how many copies we are

105
00:03:56,959 --> 00:04:00,879
going to

106
00:03:57,599 --> 00:04:02,079
give the adversary go we're going to let

107
00:04:00,879 --> 00:04:04,480
the adversary have

108
00:04:02,080 --> 00:04:06,480
and also the number that denotes how how

109
00:04:04,480 --> 00:04:09,040
this is going to be for the adversary

110
00:04:06,480 --> 00:04:10,399
to distinguish for for this number of

111
00:04:09,040 --> 00:04:13,359
copies

112
00:04:10,400 --> 00:04:15,280
uh between the output state of the prs

113
00:04:13,360 --> 00:04:15,840
and the a and a truly random quantum

114
00:04:15,280 --> 00:04:18,720
state

115
00:04:15,840 --> 00:04:19,120
and what we're seeing in blue is uh is

116
00:04:18,720 --> 00:04:22,560
just

117
00:04:19,120 --> 00:04:23,120
the output the size of the output states

118
00:04:22,560 --> 00:04:26,639
of the

119
00:04:23,120 --> 00:04:29,520
of the generator and

120
00:04:26,639 --> 00:04:31,280
as we see this is the same number and

121
00:04:29,520 --> 00:04:32,799
what this essentially means from an

122
00:04:31,280 --> 00:04:36,000
operational point of view

123
00:04:32,800 --> 00:04:37,600
is that the more random the state is the

124
00:04:36,000 --> 00:04:39,280
more we want to make it how to

125
00:04:37,600 --> 00:04:40,080
distinguish this state from italian and

126
00:04:39,280 --> 00:04:42,239
quantum state

127
00:04:40,080 --> 00:04:43,199
we have to use more quantum memory the

128
00:04:42,240 --> 00:04:46,000
state size

129
00:04:43,199 --> 00:04:46,400
grows and the question that we are going

130
00:04:46,000 --> 00:04:49,360
to

131
00:04:46,400 --> 00:04:50,000
try and answer in this walk is can we

132
00:04:49,360 --> 00:04:52,320
create

133
00:04:50,000 --> 00:04:54,800
a small highly pseudo-random state can

134
00:04:52,320 --> 00:04:57,520
we make the security parameter

135
00:04:54,800 --> 00:04:59,280
and the state size independent of each

136
00:04:57,520 --> 00:05:01,680
other

137
00:04:59,280 --> 00:05:03,198
so for this goal of maintaining the

138
00:05:01,680 --> 00:05:04,479
independence between the security

139
00:05:03,199 --> 00:05:07,039
parameter

140
00:05:04,479 --> 00:05:07,680
and the state size n we're going to

141
00:05:07,039 --> 00:05:10,479
define

142
00:05:07,680 --> 00:05:12,800
a scalable pls generator so this is

143
00:05:10,479 --> 00:05:14,800
again an efficient quantum algorithm

144
00:05:12,800 --> 00:05:16,400
this time the security guarantee is

145
00:05:14,800 --> 00:05:18,960
going to be a bit different

146
00:05:16,400 --> 00:05:21,120
and the output state of the generator is

147
00:05:18,960 --> 00:05:23,359
going to be for any polynomial

148
00:05:21,120 --> 00:05:25,600
a number of copies indistinguishable

149
00:05:23,360 --> 00:05:29,360
from an n-qubit quantum state

150
00:05:25,600 --> 00:05:31,680
but the number of

151
00:05:29,360 --> 00:05:33,120
the security parameters is going to

152
00:05:31,680 --> 00:05:35,840
determine

153
00:05:33,120 --> 00:05:37,600
how many copies and also how hard is

154
00:05:35,840 --> 00:05:39,520
going to be to distinguish

155
00:05:37,600 --> 00:05:42,400
from the same number of copies of an n

156
00:05:39,520 --> 00:05:46,080
qubit or a random quantum state

157
00:05:42,400 --> 00:05:48,719
and a few words on previous works

158
00:05:46,080 --> 00:05:50,159
so the lack of security parameter the

159
00:05:48,720 --> 00:05:52,160
lack of this independence between the

160
00:05:50,160 --> 00:05:55,039
security parameter and state size

161
00:05:52,160 --> 00:05:57,120
is something fundamental because

162
00:05:55,039 --> 00:06:00,240
previous pls generators

163
00:05:57,120 --> 00:06:02,240
they output a state which is essentially

164
00:06:00,240 --> 00:06:04,400
uniform superposition

165
00:06:02,240 --> 00:06:06,560
so the amplitude is stationary this is

166
00:06:04,400 --> 00:06:07,679
just uniform the the vector if you look

167
00:06:06,560 --> 00:06:10,080
at the vector

168
00:06:07,680 --> 00:06:11,919
that describes the quantum states all of

169
00:06:10,080 --> 00:06:13,758
the absolute values are the same

170
00:06:11,919 --> 00:06:15,120
this is the square root of 2 to the

171
00:06:13,759 --> 00:06:18,840
minus n

172
00:06:15,120 --> 00:06:20,160
and the ampli the phases are going to be

173
00:06:18,840 --> 00:06:23,280
sudorando

174
00:06:20,160 --> 00:06:26,720
and if we were saying that

175
00:06:23,280 --> 00:06:28,799
the the the more the

176
00:06:26,720 --> 00:06:30,400
the hardness of distinguishing between

177
00:06:28,800 --> 00:06:32,319
the prs output and the two around the

178
00:06:30,400 --> 00:06:32,960
quantum state only grows with the state

179
00:06:32,319 --> 00:06:35,440
size

180
00:06:32,960 --> 00:06:36,479
it is natural to ask what happens uh on

181
00:06:35,440 --> 00:06:39,360
the opposite on

182
00:06:36,479 --> 00:06:40,800
very small output sizes for example the

183
00:06:39,360 --> 00:06:42,720
smallest output size

184
00:06:40,800 --> 00:06:44,240
one cubit what is the performance for

185
00:06:42,720 --> 00:06:48,479
one qubit

186
00:06:44,240 --> 00:06:50,319
and this kind of

187
00:06:48,479 --> 00:06:51,840
distributions which are uniform

188
00:06:50,319 --> 00:06:55,199
superpositions

189
00:06:51,840 --> 00:06:55,919
with a pseudo-random or even completely

190
00:06:55,199 --> 00:06:59,120
random

191
00:06:55,919 --> 00:07:02,880
phase they actually cover only

192
00:06:59,120 --> 00:07:05,360
this red ring in the blocks field and

193
00:07:02,880 --> 00:07:07,199
this is the reason that they are very

194
00:07:05,360 --> 00:07:07,919
very easy to distinguish from a totally

195
00:07:07,199 --> 00:07:10,400
random

196
00:07:07,919 --> 00:07:12,400
one cubit state which covers the entire

197
00:07:10,400 --> 00:07:15,599
blocks

198
00:07:12,400 --> 00:07:18,560
so as we understand in order to get a

199
00:07:15,599 --> 00:07:20,719
scalable prs generator we cannot just

200
00:07:18,560 --> 00:07:23,280
randomize

201
00:07:20,720 --> 00:07:24,400
the phases we need to also randomize the

202
00:07:23,280 --> 00:07:27,599
amplitudes

203
00:07:24,400 --> 00:07:31,679
of the states that we are upgrading

204
00:07:27,599 --> 00:07:34,560
okay so on to our results

205
00:07:31,680 --> 00:07:36,560
okay so we defined the we finally also

206
00:07:34,560 --> 00:07:38,160
explored this notion of scalability in

207
00:07:36,560 --> 00:07:41,360
the efficient generation of

208
00:07:38,160 --> 00:07:43,520
quantum random states and

209
00:07:41,360 --> 00:07:46,080
we showed framework specifically we show

210
00:07:43,520 --> 00:07:49,120
a framework for constructing scalable

211
00:07:46,080 --> 00:07:51,840
a random quantum states

212
00:07:49,120 --> 00:07:53,520
and more formally we show two theorems

213
00:07:51,840 --> 00:07:55,919
the first is a

214
00:07:53,520 --> 00:07:57,680
given the existence of post one to male

215
00:07:55,919 --> 00:07:59,919
a one-way functions we show

216
00:07:57,680 --> 00:08:01,759
scalable that scalable pls generators

217
00:07:59,919 --> 00:08:03,520
exist in particular

218
00:08:01,759 --> 00:08:05,680
we use the same computational

219
00:08:03,520 --> 00:08:08,960
assumptions uh needed for

220
00:08:05,680 --> 00:08:10,879
non-scalable generators and

221
00:08:08,960 --> 00:08:13,039
also unconditionally we showed that

222
00:08:10,879 --> 00:08:14,319
there exists a scalable t design

223
00:08:13,039 --> 00:08:17,199
generators

224
00:08:14,319 --> 00:08:18,240
in depth uh that is improved from

225
00:08:17,199 --> 00:08:21,520
polynomial in

226
00:08:18,240 --> 00:08:23,120
n the security parameter and t to

227
00:08:21,520 --> 00:08:24,878
polynomial and end the security

228
00:08:23,120 --> 00:08:28,400
parameter and log of t

229
00:08:24,879 --> 00:08:31,919
for any polynomiality so we improve the

230
00:08:28,400 --> 00:08:33,838
efficiency of existing t design

231
00:08:31,919 --> 00:08:36,079
scalable to design generators and we

232
00:08:33,839 --> 00:08:38,560
showed the existence of scalable trs

233
00:08:36,080 --> 00:08:42,399
generators for the first step

234
00:08:38,559 --> 00:08:46,079
and in order to show these two theorems

235
00:08:42,399 --> 00:08:48,160
we uh we use the same paradigms as the

236
00:08:46,080 --> 00:08:48,640
previous work which is the first showing

237
00:08:48,160 --> 00:08:51,279
in

238
00:08:48,640 --> 00:08:53,199
what is called an asymptotically random

239
00:08:51,279 --> 00:08:55,120
state generator so let's first define

240
00:08:53,200 --> 00:08:57,120
what is the asymptotical random state

241
00:08:55,120 --> 00:08:58,240
this is essentially like a pseudonym

242
00:08:57,120 --> 00:09:00,560
quantum state

243
00:08:58,240 --> 00:09:02,000
but where the distinguishability is

244
00:09:00,560 --> 00:09:06,079
statistical

245
00:09:02,000 --> 00:09:08,800
so if we take a the output state of an

246
00:09:06,080 --> 00:09:09,839
ars als is as short for asymptotically

247
00:09:08,800 --> 00:09:12,800
random state

248
00:09:09,839 --> 00:09:14,240
so for any polynomial number of copies

249
00:09:12,800 --> 00:09:16,479
this uh

250
00:09:14,240 --> 00:09:18,080
state is going to be a statistically

251
00:09:16,480 --> 00:09:20,839
distinguishable from the same number of

252
00:09:18,080 --> 00:09:22,080
copies of the truly random and qubit

253
00:09:20,839 --> 00:09:24,480
state

254
00:09:22,080 --> 00:09:26,399
the paradigm this ars paradigm that

255
00:09:24,480 --> 00:09:27,839
appears in both the previous works is

256
00:09:26,399 --> 00:09:30,560
the following this is

257
00:09:27,839 --> 00:09:32,240
how we construct both vrs generators and

258
00:09:30,560 --> 00:09:34,399
key design generators

259
00:09:32,240 --> 00:09:35,519
so the main technical point is

260
00:09:34,399 --> 00:09:37,839
constructing

261
00:09:35,519 --> 00:09:40,560
a an efficient quantum algorithm that

262
00:09:37,839 --> 00:09:43,360
when it has oracle quantum market access

263
00:09:40,560 --> 00:09:44,239
to a random classical function f it

264
00:09:43,360 --> 00:09:47,120
generates an

265
00:09:44,240 --> 00:09:49,040
als which means that if we sample effect

266
00:09:47,120 --> 00:09:50,240
random then the output of the generator

267
00:09:49,040 --> 00:09:52,240
is going to be

268
00:09:50,240 --> 00:09:53,839
statistically indistinguishable from

269
00:09:52,240 --> 00:09:56,320
ethereum quantum state for any

270
00:09:53,839 --> 00:09:59,839
polynomial number of copies

271
00:09:56,320 --> 00:10:00,640
and then when we have this ars generator

272
00:09:59,839 --> 00:10:04,079
we can take

273
00:10:00,640 --> 00:10:06,079
f swap it with the quantum secure pseudo

274
00:10:04,079 --> 00:10:09,199
handle function prf

275
00:10:06,079 --> 00:10:11,680
in order to get the prs and if we want

276
00:10:09,200 --> 00:10:13,200
uh to get out of this ars generator of

277
00:10:11,680 --> 00:10:15,040
key design generator

278
00:10:13,200 --> 00:10:16,800
we swap f with the two t wise

279
00:10:15,040 --> 00:10:18,959
independent function

280
00:10:16,800 --> 00:10:22,000
so essentially this is the way we can

281
00:10:18,959 --> 00:10:24,479
view ars generators as the center

282
00:10:22,000 --> 00:10:25,839
for the efficient generation of quantum

283
00:10:24,480 --> 00:10:27,279
random states

284
00:10:25,839 --> 00:10:29,040
and this is going to be our focus in

285
00:10:27,279 --> 00:10:32,800
this work and

286
00:10:29,040 --> 00:10:33,519
in the technical part we follow this als

287
00:10:32,800 --> 00:10:36,000
paradigm

288
00:10:33,519 --> 00:10:37,440
but we construct scalable layers

289
00:10:36,000 --> 00:10:39,279
generators

290
00:10:37,440 --> 00:10:41,360
scalable errors generator which means

291
00:10:39,279 --> 00:10:43,279
that this efficient quantum algorithm

292
00:10:41,360 --> 00:10:45,200
now is going to get additional parameter

293
00:10:43,279 --> 00:10:46,880
which is the security parameter

294
00:10:45,200 --> 00:10:48,720
and this security parameter is going to

295
00:10:46,880 --> 00:10:50,399
determine how hard is it going to

296
00:10:48,720 --> 00:10:52,000
distinguish

297
00:10:50,399 --> 00:10:54,800
the output of the generator between the

298
00:10:52,000 --> 00:10:58,839
two and quantum state and also how many

299
00:10:54,800 --> 00:11:02,000
copies we let the diversity have

300
00:10:58,839 --> 00:11:03,279
and uh accordingly our main technical

301
00:11:02,000 --> 00:11:06,240
lemma is going to be

302
00:11:03,279 --> 00:11:07,839
uh showing that there exists a scalable

303
00:11:06,240 --> 00:11:10,640
airs generator

304
00:11:07,839 --> 00:11:12,399
uh where the trace distance between the

305
00:11:10,640 --> 00:11:14,959
following two distributions

306
00:11:12,399 --> 00:11:15,440
is going to be bounded by t over e to

307
00:11:14,959 --> 00:11:18,479
the

308
00:11:15,440 --> 00:11:20,720
lambda where these two distributions

309
00:11:18,480 --> 00:11:22,640
uh are the following the first is the

310
00:11:20,720 --> 00:11:24,399
output of the errors generator the

311
00:11:22,640 --> 00:11:27,680
scalable errors generator

312
00:11:24,399 --> 00:11:32,399
t copies of this quantum state a versus

313
00:11:27,680 --> 00:11:36,880
t copies of a holy random enquiry

314
00:11:32,399 --> 00:11:38,640
and one important thing about this

315
00:11:36,880 --> 00:11:39,920
bound is that of course it is

316
00:11:38,640 --> 00:11:43,360
independent of n

317
00:11:39,920 --> 00:11:45,519
which implies that only the security

318
00:11:43,360 --> 00:11:47,600
parameter is going to control

319
00:11:45,519 --> 00:11:49,360
how hard is it going to distinguish from

320
00:11:47,600 --> 00:11:52,480
total quantum state

321
00:11:49,360 --> 00:11:56,560
and we also improve the

322
00:11:52,480 --> 00:11:56,959
the the bound in terms of the dependence

323
00:11:56,560 --> 00:12:00,160
on t

324
00:11:56,959 --> 00:12:02,880
because we get a linearity

325
00:12:00,160 --> 00:12:05,199
compared to a t squared from previous

326
00:12:02,880 --> 00:12:07,120
rules

327
00:12:05,200 --> 00:12:08,880
we now describe a construction of

328
00:12:07,120 --> 00:12:10,240
scalable asymptotically random state

329
00:12:08,880 --> 00:12:12,480
generator

330
00:12:10,240 --> 00:12:14,320
so to be concrete with what we want we

331
00:12:12,480 --> 00:12:17,040
want a polynomial

332
00:12:14,320 --> 00:12:17,760
algorithm that gets n number of qubits

333
00:12:17,040 --> 00:12:20,160
lambda

334
00:12:17,760 --> 00:12:21,439
security parameter it gets a quantum

335
00:12:20,160 --> 00:12:24,480
oracle access

336
00:12:21,440 --> 00:12:27,760
to a classical random function f from n

337
00:12:24,480 --> 00:12:29,040
bits to polynomial in n and lambda

338
00:12:27,760 --> 00:12:32,240
number of bits

339
00:12:29,040 --> 00:12:33,120
and it outputs an n qubit states i and

340
00:12:32,240 --> 00:12:36,320
the guarantee

341
00:12:33,120 --> 00:12:39,839
is that when f is random t

342
00:12:36,320 --> 00:12:42,720
copies of this state is going to be

343
00:12:39,839 --> 00:12:43,920
highly indistinguishable from t copies

344
00:12:42,720 --> 00:12:47,440
of a truly random

345
00:12:43,920 --> 00:12:48,639
n qubit quantum state one thing that's

346
00:12:47,440 --> 00:12:50,839
going to help us

347
00:12:48,639 --> 00:12:52,240
with intuition is the maybe the most

348
00:12:50,839 --> 00:12:55,200
basic

349
00:12:52,240 --> 00:12:56,320
effect in quantum information is that

350
00:12:55,200 --> 00:13:00,160
the space

351
00:12:56,320 --> 00:13:03,120
of n cubed quantum states corresponds

352
00:13:00,160 --> 00:13:03,439
to the unit sphere of in complex space

353
00:13:03,120 --> 00:13:06,959
of

354
00:13:03,440 --> 00:13:09,040
two to the n dimensions

355
00:13:06,959 --> 00:13:10,160
now our approach is going to be very

356
00:13:09,040 --> 00:13:14,079
natural and with the

357
00:13:10,160 --> 00:13:16,880
with accordance to this to this effect

358
00:13:14,079 --> 00:13:18,880
and we're going to attempt to sample a

359
00:13:16,880 --> 00:13:20,639
unit vector on this field

360
00:13:18,880 --> 00:13:23,120
just in a quantum state and the security

361
00:13:20,639 --> 00:13:26,160
parameter is going to only increase

362
00:13:23,120 --> 00:13:29,680
the density on this sphere of a

363
00:13:26,160 --> 00:13:32,000
of all n-cubit quantum states

364
00:13:29,680 --> 00:13:33,599
and the outline for implementing this

365
00:13:32,000 --> 00:13:36,240
approach is the following

366
00:13:33,600 --> 00:13:38,000
so given the oracle access to this the

367
00:13:36,240 --> 00:13:38,959
quantum market access to this classical

368
00:13:38,000 --> 00:13:41,440
function f

369
00:13:38,959 --> 00:13:42,479
we want to transform it into oracle

370
00:13:41,440 --> 00:13:44,800
access

371
00:13:42,480 --> 00:13:45,680
to a different function uh that

372
00:13:44,800 --> 00:13:50,160
describes

373
00:13:45,680 --> 00:13:50,160
a historically symmetric vector v

374
00:13:50,480 --> 00:13:55,920
okay where we mean or accuracy to the

375
00:13:54,320 --> 00:13:58,399
vector this is a vector

376
00:13:55,920 --> 00:13:59,120
in two to the n dimensions it has two dn

377
00:13:58,399 --> 00:14:02,399
entries

378
00:13:59,120 --> 00:14:05,440
and and for input x it is going to

379
00:14:02,399 --> 00:14:09,279
output the entry that corresponds to

380
00:14:05,440 --> 00:14:10,399
uh the string x and this vector has to

381
00:14:09,279 --> 00:14:13,279
be strictly symmetric

382
00:14:10,399 --> 00:14:13,680
if f is random and the second part in

383
00:14:13,279 --> 00:14:16,560
our

384
00:14:13,680 --> 00:14:18,079
algorithm is going to be to efficiently

385
00:14:16,560 --> 00:14:20,399
generate the quantum state

386
00:14:18,079 --> 00:14:21,680
that corresponds to the spherically

387
00:14:20,399 --> 00:14:24,880
symmetric

388
00:14:21,680 --> 00:14:26,959
vector v so

389
00:14:24,880 --> 00:14:29,120
let's start with the with the first part

390
00:14:26,959 --> 00:14:30,079
we want a oracle axis to spherically

391
00:14:29,120 --> 00:14:32,079
symmetric vector

392
00:14:30,079 --> 00:14:34,638
and we have oracle access to a random

393
00:14:32,079 --> 00:14:37,359
classical function f

394
00:14:34,639 --> 00:14:38,959
and one thing that can solve this first

395
00:14:37,360 --> 00:14:42,240
problem is that we if

396
00:14:38,959 --> 00:14:45,518
if we had a classical circuit g

397
00:14:42,240 --> 00:14:46,639
that uh translates it locally which

398
00:14:45,519 --> 00:14:50,240
means that the g

399
00:14:46,639 --> 00:14:53,120
of f of x is going to be this vector v

400
00:14:50,240 --> 00:14:54,560
such that when f is random uh doing this

401
00:14:53,120 --> 00:14:57,199
transformation with g

402
00:14:54,560 --> 00:15:00,638
on each of the coordinates of f going to

403
00:14:57,199 --> 00:15:03,680
yield the spherically symmetric vector

404
00:15:00,639 --> 00:15:07,440
and for this

405
00:15:03,680 --> 00:15:10,000
to to identify what this circuit

406
00:15:07,440 --> 00:15:11,519
gene needs to be we will recall a basic

407
00:15:10,000 --> 00:15:12,720
property of multivariate gaussian

408
00:15:11,519 --> 00:15:14,880
distribution

409
00:15:12,720 --> 00:15:16,880
is that it is spherically symmetric

410
00:15:14,880 --> 00:15:20,639
which means if we take a vector

411
00:15:16,880 --> 00:15:22,480
with a with many coordinates in each of

412
00:15:20,639 --> 00:15:24,880
the coordinates we sample from a

413
00:15:22,480 --> 00:15:27,680
gaussian distribution independently

414
00:15:24,880 --> 00:15:29,120
this vector is going to be a spherically

415
00:15:27,680 --> 00:15:31,199
symmetric it's going to

416
00:15:29,120 --> 00:15:33,360
a normalization of this vector is going

417
00:15:31,199 --> 00:15:36,719
to be a uniform unit

418
00:15:33,360 --> 00:15:39,680
unit vector and this

419
00:15:36,720 --> 00:15:40,639
this is a of course a very known a

420
00:15:39,680 --> 00:15:42,479
property of the

421
00:15:40,639 --> 00:15:43,920
multivariate gaussian distribution it is

422
00:15:42,480 --> 00:15:47,120
very useful for

423
00:15:43,920 --> 00:15:50,160
algorithms for sampling

424
00:15:47,120 --> 00:15:52,160
random unit vectors because all of these

425
00:15:50,160 --> 00:15:53,360
coordinates are going to be can be

426
00:15:52,160 --> 00:15:55,680
sampled

427
00:15:53,360 --> 00:15:57,519
in parallel independently of each other

428
00:15:55,680 --> 00:15:59,519
and then only the norm of the vector

429
00:15:57,519 --> 00:16:02,560
needs to be computed and this also

430
00:15:59,519 --> 00:16:04,560
can be done in parallel and

431
00:16:02,560 --> 00:16:06,880
while this property is very useful for

432
00:16:04,560 --> 00:16:10,800
the first parallel generation of

433
00:16:06,880 --> 00:16:11,920
a classical unit vectors we use it in

434
00:16:10,800 --> 00:16:15,279
the quantum setting

435
00:16:11,920 --> 00:16:18,479
to generate it efficiently

436
00:16:15,279 --> 00:16:19,680
so this a classical circuit g is going

437
00:16:18,480 --> 00:16:21,839
to be

438
00:16:19,680 --> 00:16:23,120
sampler circuit the classical sampler

439
00:16:21,839 --> 00:16:25,680
circuit

440
00:16:23,120 --> 00:16:26,720
for the gaussian distribution which

441
00:16:25,680 --> 00:16:28,719
means that

442
00:16:26,720 --> 00:16:32,160
we're going to think about the output of

443
00:16:28,720 --> 00:16:34,720
f as the randomness the random tape

444
00:16:32,160 --> 00:16:36,079
for a classical sampling algorithm and

445
00:16:34,720 --> 00:16:37,839
this algorithm is going to be

446
00:16:36,079 --> 00:16:40,239
simpler for the gaussian distribution we

447
00:16:37,839 --> 00:16:43,440
denote this algorithm with s

448
00:16:40,240 --> 00:16:46,480
so v the the x coordinate of

449
00:16:43,440 --> 00:16:46,959
our vector v is going to be s this the

450
00:16:46,480 --> 00:16:50,000
sample

451
00:16:46,959 --> 00:16:53,279
s applied to the randomness f

452
00:16:50,000 --> 00:16:56,320
of x and

453
00:16:53,279 --> 00:16:59,680
one technical

454
00:16:56,320 --> 00:17:02,480
detail to to recall is that

455
00:16:59,680 --> 00:17:04,240
s has to be an efficient in particular

456
00:17:02,480 --> 00:17:06,880
the polynomial size

457
00:17:04,240 --> 00:17:07,839
classical circuit and it cannot really

458
00:17:06,880 --> 00:17:09,439
sample

459
00:17:07,839 --> 00:17:11,119
from the continuous gaussian

460
00:17:09,439 --> 00:17:12,959
distribution it has to sample from a

461
00:17:11,119 --> 00:17:14,879
discrete gaussian distribution

462
00:17:12,959 --> 00:17:16,160
but we're going to leave this technical

463
00:17:14,880 --> 00:17:17,919
detail for the

464
00:17:16,160 --> 00:17:19,199
for the full version for the paper and

465
00:17:17,919 --> 00:17:21,760
this this in this

466
00:17:19,199 --> 00:17:22,559
presentation we're going to assume that

467
00:17:21,760 --> 00:17:25,919
the

468
00:17:22,559 --> 00:17:29,600
s sample from the continuous gaussian

469
00:17:25,919 --> 00:17:31,440
distribution okay so

470
00:17:29,600 --> 00:17:32,879
it seems we solved the very first

471
00:17:31,440 --> 00:17:35,440
problem

472
00:17:32,880 --> 00:17:36,080
and we have oracle access quantum market

473
00:17:35,440 --> 00:17:39,760
axis

474
00:17:36,080 --> 00:17:42,960
to a spherically symmetric vector of v

475
00:17:39,760 --> 00:17:44,720
and now we want to

476
00:17:42,960 --> 00:17:48,240
generate the quantum state that

477
00:17:44,720 --> 00:17:51,200
corresponds to the normalization of v

478
00:17:48,240 --> 00:17:53,039
and this this general task of getting

479
00:17:51,200 --> 00:17:54,240
oracle access to the description of a

480
00:17:53,039 --> 00:17:57,679
quantum state

481
00:17:54,240 --> 00:17:59,760
and then generating the quantum state is

482
00:17:57,679 --> 00:18:01,280
we don't have efficient algorithms for

483
00:17:59,760 --> 00:18:03,039
this general task

484
00:18:01,280 --> 00:18:05,039
but of course we don't have the general

485
00:18:03,039 --> 00:18:08,799
case here we have a

486
00:18:05,039 --> 00:18:10,879
restricted case where our vectors are

487
00:18:08,799 --> 00:18:11,840
gaussian vectors and we're going to

488
00:18:10,880 --> 00:18:13,679
attempt to find

489
00:18:11,840 --> 00:18:15,840
properties of the multivariate gaussian

490
00:18:13,679 --> 00:18:18,960
distribution that are going to be

491
00:18:15,840 --> 00:18:21,120
helpful uh in the efficient generation

492
00:18:18,960 --> 00:18:25,039
of the quantum state that corresponds

493
00:18:21,120 --> 00:18:27,600
to v for this task of generating the

494
00:18:25,039 --> 00:18:30,960
quantum state this corresponds to

495
00:18:27,600 --> 00:18:33,678
the the vector heavy we first

496
00:18:30,960 --> 00:18:34,640
recall a quantum algorithm for the

497
00:18:33,679 --> 00:18:36,640
generation of

498
00:18:34,640 --> 00:18:38,400
quantum states this algorithm is called

499
00:18:36,640 --> 00:18:40,480
the quantum ejection sampling

500
00:18:38,400 --> 00:18:42,960
it is the quantum analog of a classical

501
00:18:40,480 --> 00:18:43,919
rejection sampling and the setting is as

502
00:18:42,960 --> 00:18:47,039
follows

503
00:18:43,919 --> 00:18:48,480
so we have one a quantum state alpha and

504
00:18:47,039 --> 00:18:50,000
we want to transform it to another

505
00:18:48,480 --> 00:18:52,720
quantum state beta

506
00:18:50,000 --> 00:18:53,440
and additionally to having a alpha we

507
00:18:52,720 --> 00:18:55,919
have

508
00:18:53,440 --> 00:18:57,280
a classical we have oracle access

509
00:18:55,919 --> 00:19:01,120
quantum matrixes

510
00:18:57,280 --> 00:19:04,320
to a classical transformation circuit f

511
00:19:01,120 --> 00:19:07,678
now this circuit f outputs

512
00:19:04,320 --> 00:19:11,360
the ratio a beta over alpha

513
00:19:07,679 --> 00:19:11,600
times a number 1 over d for some number

514
00:19:11,360 --> 00:19:14,799
d

515
00:19:11,600 --> 00:19:15,439
which is an upper bound now this upper

516
00:19:14,799 --> 00:19:18,639
bound

517
00:19:15,440 --> 00:19:22,320
is an upper bound on m where m is the

518
00:19:18,640 --> 00:19:24,240
maximal ratio between the coordinates

519
00:19:22,320 --> 00:19:28,159
between all of the coordinates of

520
00:19:24,240 --> 00:19:28,720
beta and alpha and if we have this

521
00:19:28,160 --> 00:19:32,320
circuit

522
00:19:28,720 --> 00:19:36,080
f and these where it

523
00:19:32,320 --> 00:19:36,720
outputs a beta over alpha times one over

524
00:19:36,080 --> 00:19:39,678
d

525
00:19:36,720 --> 00:19:40,559
we can generate a beta with probability

526
00:19:39,679 --> 00:19:44,320
1 over d

527
00:19:40,559 --> 00:19:46,240
squared so the intuition

528
00:19:44,320 --> 00:19:47,439
is the important part behind quantum

529
00:19:46,240 --> 00:19:48,960
modulation sampling

530
00:19:47,440 --> 00:19:50,799
and it says that if we have a state

531
00:19:48,960 --> 00:19:53,280
alpha where

532
00:19:50,799 --> 00:19:53,840
all of its coordinates are roughly the

533
00:19:53,280 --> 00:19:56,879
same

534
00:19:53,840 --> 00:20:00,080
as a another quantum state beta

535
00:19:56,880 --> 00:20:01,120
and we also know the ratios in all of

536
00:20:00,080 --> 00:20:03,600
the coordinates

537
00:20:01,120 --> 00:20:04,799
by some classical circuit f we can

538
00:20:03,600 --> 00:20:08,240
generate beta

539
00:20:04,799 --> 00:20:08,240
with some good probability

540
00:20:08,320 --> 00:20:11,918
okay so in our case if we take the

541
00:20:10,400 --> 00:20:14,000
quantum rejection sampling to our

542
00:20:11,919 --> 00:20:16,400
setting we know what is the target

543
00:20:14,000 --> 00:20:17,200
vector that we are aiming for our beta

544
00:20:16,400 --> 00:20:20,400
is the

545
00:20:17,200 --> 00:20:21,919
normalized v we want to

546
00:20:20,400 --> 00:20:24,559
generate the quantum state that

547
00:20:21,919 --> 00:20:27,360
corresponds to the normalization of v

548
00:20:24,559 --> 00:20:28,799
now we have beta but we don't have yet a

549
00:20:27,360 --> 00:20:31,760
suitable alpha alpha

550
00:20:28,799 --> 00:20:32,400
needs to be a quantum state that we know

551
00:20:31,760 --> 00:20:34,799
how to

552
00:20:32,400 --> 00:20:37,360
efficiently generate from scratch not

553
00:20:34,799 --> 00:20:41,440
using a quantum objection sampling

554
00:20:37,360 --> 00:20:42,559
and even if we in addition to alpha we

555
00:20:41,440 --> 00:20:45,679
also need to know

556
00:20:42,559 --> 00:20:47,039
what is the circuit f that is going to

557
00:20:45,679 --> 00:20:50,400
output

558
00:20:47,039 --> 00:20:53,600
the ratio between beta and alpha

559
00:20:50,400 --> 00:20:56,880
times the bound one over d

560
00:20:53,600 --> 00:20:59,918
recall that we don't even have beta yet

561
00:20:56,880 --> 00:21:00,480
we have only the unnormalized version of

562
00:20:59,919 --> 00:21:02,799
beta

563
00:21:00,480 --> 00:21:04,080
we don't have the normalized v because

564
00:21:02,799 --> 00:21:07,120
in order to compute

565
00:21:04,080 --> 00:21:08,320
the norm of v we need to know all of the

566
00:21:07,120 --> 00:21:11,840
coordinates of v

567
00:21:08,320 --> 00:21:13,760
and this seems to take exponential time

568
00:21:11,840 --> 00:21:15,678
so what properties of the gaussian

569
00:21:13,760 --> 00:21:16,400
distribution are going to be useful to

570
00:21:15,679 --> 00:21:18,159
us

571
00:21:16,400 --> 00:21:19,520
for the quantum efficient generation of

572
00:21:18,159 --> 00:21:22,720
the state

573
00:21:19,520 --> 00:21:24,158
normalized so the first property again

574
00:21:22,720 --> 00:21:26,080
this these are very

575
00:21:24,159 --> 00:21:27,520
basic properties we just observed that

576
00:21:26,080 --> 00:21:28,639
they are useful for the efficient

577
00:21:27,520 --> 00:21:31,039
generation

578
00:21:28,640 --> 00:21:32,640
of the quantum states that corresponds

579
00:21:31,039 --> 00:21:35,200
to gaussian vectors

580
00:21:32,640 --> 00:21:37,039
and the first property is that if we

581
00:21:35,200 --> 00:21:39,280
take a random gaussian vector

582
00:21:37,039 --> 00:21:40,400
of two to the n coordinates to the n

583
00:21:39,280 --> 00:21:42,480
dimensions

584
00:21:40,400 --> 00:21:44,080
uh with overwhelming probability with

585
00:21:42,480 --> 00:21:47,280
probability one minus

586
00:21:44,080 --> 00:21:50,399
a e to the a minus lambda

587
00:21:47,280 --> 00:21:51,200
all coordinates are bounded by a square

588
00:21:50,400 --> 00:21:54,960
root of

589
00:21:51,200 --> 00:21:56,400
n plus lambda this this this is true by

590
00:21:54,960 --> 00:21:58,320
union bound because the

591
00:21:56,400 --> 00:22:00,240
the probability to for each of the

592
00:21:58,320 --> 00:22:02,879
coordinates to pass this bound

593
00:22:00,240 --> 00:22:03,760
this relatively small bound is so so

594
00:22:02,880 --> 00:22:05,440
much time

595
00:22:03,760 --> 00:22:07,679
compared to the number of coordinates

596
00:22:05,440 --> 00:22:10,720
which is 2 to the n

597
00:22:07,679 --> 00:22:14,240
now this means this

598
00:22:10,720 --> 00:22:16,720
like less sentence is very

599
00:22:14,240 --> 00:22:18,559
only on the intuitive level is that all

600
00:22:16,720 --> 00:22:21,760
of the amplitudes of this

601
00:22:18,559 --> 00:22:24,639
vector v are roughly the same when

602
00:22:21,760 --> 00:22:26,000
they are compared to the norm so the the

603
00:22:24,640 --> 00:22:28,799
differences between each

604
00:22:26,000 --> 00:22:29,360
pair of coordinates is relatively

605
00:22:28,799 --> 00:22:33,200
nothing

606
00:22:29,360 --> 00:22:35,918
compared to the huge norm of this vector

607
00:22:33,200 --> 00:22:36,720
this means intuitively again that this

608
00:22:35,919 --> 00:22:40,080
vector

609
00:22:36,720 --> 00:22:41,120
really resembles a vector where all of

610
00:22:40,080 --> 00:22:43,678
the amplitudes

611
00:22:41,120 --> 00:22:45,360
are the same and a vector where all of

612
00:22:43,679 --> 00:22:47,679
the amplitudes are the same is simply

613
00:22:45,360 --> 00:22:48,879
the uniform superposition and what is

614
00:22:47,679 --> 00:22:51,120
fantastic about the uniform

615
00:22:48,880 --> 00:22:52,960
superposition is that this is a quantum

616
00:22:51,120 --> 00:22:55,199
state that we already know how to

617
00:22:52,960 --> 00:22:56,880
officially generate from scratch

618
00:22:55,200 --> 00:22:58,799
so we're going to take alpha to be the

619
00:22:56,880 --> 00:23:00,559
uniform superposition the plus to the

620
00:22:58,799 --> 00:23:03,600
end state

621
00:23:00,559 --> 00:23:06,639
and if we take alpha to be the this

622
00:23:03,600 --> 00:23:10,158
uniform superposition we can take our

623
00:23:06,640 --> 00:23:13,520
classical transformation circuit f to be

624
00:23:10,159 --> 00:23:16,640
a the the x entry of

625
00:23:13,520 --> 00:23:20,240
v times 1 over square root of

626
00:23:16,640 --> 00:23:22,720
n plus lambda now why we chose these

627
00:23:20,240 --> 00:23:24,400
exact parameters so let's observe that

628
00:23:22,720 --> 00:23:27,200
if we look at the ratio

629
00:23:24,400 --> 00:23:28,240
a beta over alpha we know that beta now

630
00:23:27,200 --> 00:23:30,559
is the normalized

631
00:23:28,240 --> 00:23:33,520
v and alpha we also know what is alpha

632
00:23:30,559 --> 00:23:35,678
this is simply the uniform superposition

633
00:23:33,520 --> 00:23:36,879
we know that because of the first

634
00:23:35,679 --> 00:23:38,799
property

635
00:23:36,880 --> 00:23:40,480
all of the coordinates of fv are going

636
00:23:38,799 --> 00:23:43,760
to be bounded by square root of

637
00:23:40,480 --> 00:23:46,320
a n plus a lambda

638
00:23:43,760 --> 00:23:47,120
and which means that rd is going to be

639
00:23:46,320 --> 00:23:50,240
square root

640
00:23:47,120 --> 00:23:53,199
of 2 to the n times square root of

641
00:23:50,240 --> 00:23:55,440
a n plus lambda all of these divided by

642
00:23:53,200 --> 00:23:58,159
the norm of v

643
00:23:55,440 --> 00:23:59,120
and by choosing these parameters we we

644
00:23:58,159 --> 00:24:02,240
guarantee that

645
00:23:59,120 --> 00:24:06,799
f of x is indeed 1 over d times

646
00:24:02,240 --> 00:24:09,279
beta over alpha and this is all great

647
00:24:06,799 --> 00:24:11,360
and all our parameters are fixed but we

648
00:24:09,279 --> 00:24:12,960
recall that the success probability of

649
00:24:11,360 --> 00:24:16,000
quantum ejection sampling

650
00:24:12,960 --> 00:24:18,159
is one over this square so

651
00:24:16,000 --> 00:24:20,159
essentially we need in order for this

652
00:24:18,159 --> 00:24:23,440
probability to be noticeable we need d

653
00:24:20,159 --> 00:24:26,799
to b polynomial and uh

654
00:24:23,440 --> 00:24:27,679
this comes down to the norm of the

655
00:24:26,799 --> 00:24:30,879
vector v

656
00:24:27,679 --> 00:24:31,200
being very big being like on the order

657
00:24:30,880 --> 00:24:34,400
of

658
00:24:31,200 --> 00:24:35,120
square root of 2 to the n and this is

659
00:24:34,400 --> 00:24:37,200
where the

660
00:24:35,120 --> 00:24:38,320
the another property of the gaussian

661
00:24:37,200 --> 00:24:40,880
distribution

662
00:24:38,320 --> 00:24:42,960
kicks in to help us is that a gaussian

663
00:24:40,880 --> 00:24:46,400
vector of 2 to the n dimension

664
00:24:42,960 --> 00:24:49,440
has this say a

665
00:24:46,400 --> 00:24:50,960
square root of 2 to the n a over 2 has

666
00:24:49,440 --> 00:24:54,080
this norm at least

667
00:24:50,960 --> 00:24:57,679
with over 1 probability with 1

668
00:24:54,080 --> 00:25:01,600
minus e to the minus a 2 to the n

669
00:24:57,679 --> 00:25:03,440
and we know that now our vector with

670
00:25:01,600 --> 00:25:05,840
overwhelming probability is going to be

671
00:25:03,440 --> 00:25:07,440
large enough which means that d is going

672
00:25:05,840 --> 00:25:09,600
to be small enough

673
00:25:07,440 --> 00:25:11,520
and the rejection sampling success

674
00:25:09,600 --> 00:25:14,158
probability is going to be

675
00:25:11,520 --> 00:25:15,520
a noticeable and because we can

676
00:25:14,159 --> 00:25:18,720
regenerate

677
00:25:15,520 --> 00:25:20,320
a alpha every time we try we can try

678
00:25:18,720 --> 00:25:22,080
polynomial many times and with

679
00:25:20,320 --> 00:25:24,720
overwhelming probability

680
00:25:22,080 --> 00:25:27,279
in polynomial time managed to

681
00:25:24,720 --> 00:25:29,919
successfully

682
00:25:27,279 --> 00:25:32,159
generate the state v the quantum state

683
00:25:29,919 --> 00:25:35,760
it corresponds to it

684
00:25:32,159 --> 00:25:36,240
now uh one small technical problem that

685
00:25:35,760 --> 00:25:39,360
i

686
00:25:36,240 --> 00:25:40,880
kind of hid under the rug is that this

687
00:25:39,360 --> 00:25:43,760
concentration bound

688
00:25:40,880 --> 00:25:44,480
on uh that tells us that the vector v is

689
00:25:43,760 --> 00:25:46,960
going to be

690
00:25:44,480 --> 00:25:48,320
heavy large enough no this concentration

691
00:25:46,960 --> 00:25:51,520
bound kicks in

692
00:25:48,320 --> 00:25:52,799
only for large enough n

693
00:25:51,520 --> 00:25:54,720
right we want to we want our

694
00:25:52,799 --> 00:25:55,600
construction to work even for where n

695
00:25:54,720 --> 00:25:58,559
equals 1

696
00:25:55,600 --> 00:25:59,918
and for n equals 1 they say 1 minus e to

697
00:25:58,559 --> 00:26:01,840
the minus 2 to the n

698
00:25:59,919 --> 00:26:04,480
is not a large enough problem this is

699
00:26:01,840 --> 00:26:08,320
just a constant probability

700
00:26:04,480 --> 00:26:11,200
and our solution to this is that

701
00:26:08,320 --> 00:26:13,200
this this concentration bound on the

702
00:26:11,200 --> 00:26:16,240
multivariate gaussian distribution

703
00:26:13,200 --> 00:26:18,559
is so so so successful and

704
00:26:16,240 --> 00:26:19,360
even in the exponent we have a 2 to the

705
00:26:18,559 --> 00:26:22,720
n

706
00:26:19,360 --> 00:26:25,918
so this concentration kicks in

707
00:26:22,720 --> 00:26:29,600
already when n is at least log of

708
00:26:25,919 --> 00:26:31,039
lambda and then we have mine one minus

709
00:26:29,600 --> 00:26:32,158
say e to the minus lambda

710
00:26:31,039 --> 00:26:34,158
which is good enough which is

711
00:26:32,159 --> 00:26:35,440
overwhelming probability in the security

712
00:26:34,159 --> 00:26:36,799
parameter which is what we want

713
00:26:35,440 --> 00:26:40,559
essentially

714
00:26:36,799 --> 00:26:42,480
and in this like a extreme case where

715
00:26:40,559 --> 00:26:44,080
n is smaller than the log of the

716
00:26:42,480 --> 00:26:47,279
security parameter

717
00:26:44,080 --> 00:26:49,678
we can just sample the entire vector

718
00:26:47,279 --> 00:26:52,240
because we can run in 2 to the n time

719
00:26:49,679 --> 00:26:54,559
which is polynomial time in lambda

720
00:26:52,240 --> 00:26:56,559
and just sample explicitly sampling the

721
00:26:54,559 --> 00:26:59,039
entire classical description

722
00:26:56,559 --> 00:27:01,840
of this say n cubit state and and

723
00:26:59,039 --> 00:27:06,080
generate it inefficiently in n but

724
00:27:01,840 --> 00:27:08,480
efficiently in lambda and to conclude

725
00:27:06,080 --> 00:27:10,000
uh this is our a algorithm for the

726
00:27:08,480 --> 00:27:13,279
scalable ars

727
00:27:10,000 --> 00:27:16,400
generator uh for the regular case where

728
00:27:13,279 --> 00:27:20,559
lambda is bounded by 2 to the n

729
00:27:16,400 --> 00:27:23,120
our first step is to transform this

730
00:27:20,559 --> 00:27:24,480
oracle axis to f to local axis to a

731
00:27:23,120 --> 00:27:27,199
spherically symmetric

732
00:27:24,480 --> 00:27:27,840
vector and then to a unit vector and our

733
00:27:27,200 --> 00:27:30,720
second step

734
00:27:27,840 --> 00:27:31,279
is to iterate polynomial many times and

735
00:27:30,720 --> 00:27:33,679
try

736
00:27:31,279 --> 00:27:35,760
to do quantum rejection sampling that we

737
00:27:33,679 --> 00:27:37,600
know is going to be successful by some

738
00:27:35,760 --> 00:27:39,039
concentration properties

739
00:27:37,600 --> 00:27:40,959
of the multivariate gaussian

740
00:27:39,039 --> 00:27:42,640
distribution and then generate the

741
00:27:40,960 --> 00:27:43,919
quantum state that corresponds to the

742
00:27:42,640 --> 00:27:47,279
spherically symmetric

743
00:27:43,919 --> 00:27:48,480
vector v and for the restricted case of

744
00:27:47,279 --> 00:27:50,399
a

745
00:27:48,480 --> 00:27:52,720
of the security parameter being huge

746
00:27:50,399 --> 00:27:55,760
compared to the to the number of

747
00:27:52,720 --> 00:27:57,919
output the size of the output state we

748
00:27:55,760 --> 00:27:59,440
know that we can explicitly

749
00:27:57,919 --> 00:28:00,960
sample the classical the entire

750
00:27:59,440 --> 00:28:04,000
classical description

751
00:28:00,960 --> 00:28:06,559
of of the quantum state

752
00:28:04,000 --> 00:28:07,840
that we want to output and generate it

753
00:28:06,559 --> 00:28:10,158
inefficiently

754
00:28:07,840 --> 00:28:12,158
in the state size but efficiently in the

755
00:28:10,159 --> 00:28:15,039
security parameter

756
00:28:12,159 --> 00:28:19,200
and this concludes our talk thank you

757
00:28:15,039 --> 00:28:19,200
very much for listening

