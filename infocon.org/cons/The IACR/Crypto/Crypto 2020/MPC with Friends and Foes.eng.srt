1
00:00:01,280 --> 00:00:04,880
okay so hello everyone today i'm going

2
00:00:02,800 --> 00:00:06,240
to talk about npc with friends and folks

3
00:00:04,880 --> 00:00:08,800
and this is joint work with random

4
00:00:06,240 --> 00:00:10,719
brilliant and i'm asking chelniaski

5
00:00:08,800 --> 00:00:12,080
so i'll start with an example and

6
00:00:10,719 --> 00:00:12,959
specifically i'll talk about secure

7
00:00:12,080 --> 00:00:14,960
election

8
00:00:12,960 --> 00:00:16,480
and let's say that we have flip parties

9
00:00:14,960 --> 00:00:18,080
and each of them is chosen between two

10
00:00:16,480 --> 00:00:19,840
candidates

11
00:00:18,080 --> 00:00:21,119
and let's say that in this example the

12
00:00:19,840 --> 00:00:24,160
parties know that

13
00:00:21,119 --> 00:00:25,840
at most one of them is co-opted

14
00:00:24,160 --> 00:00:28,160
and let's say that during this protocol

15
00:00:25,840 --> 00:00:31,840
they figure out that the second party is

16
00:00:28,160 --> 00:00:32,558
being malicious so now the first and the

17
00:00:31,840 --> 00:00:34,559
third party

18
00:00:32,558 --> 00:00:36,800
knowing that they are honest and you

19
00:00:34,559 --> 00:00:39,839
this will protocol instruct them to

20
00:00:36,800 --> 00:00:41,519
exchange their inputs and now

21
00:00:39,840 --> 00:00:43,200
each of those party can locally compute

22
00:00:41,520 --> 00:00:45,120
to the winners

23
00:00:43,200 --> 00:00:46,399
however now one of those parties let's

24
00:00:45,120 --> 00:00:48,718
say that the third party

25
00:00:46,399 --> 00:00:50,320
actually realizes who the first party

26
00:00:48,719 --> 00:00:51,840
voted for

27
00:00:50,320 --> 00:00:53,760
which is problematic we don't want to

28
00:00:51,840 --> 00:00:56,719
reveal who we voted for because later on

29
00:00:53,760 --> 00:00:56,719
this could lead to violence

30
00:00:57,600 --> 00:01:01,520
okay so why is this allowed the reason

31
00:01:00,000 --> 00:01:03,280
that this is allowed is because

32
00:01:01,520 --> 00:01:04,400
in secure multi-party computation we

33
00:01:03,280 --> 00:01:05,360
only care about the view of the

34
00:01:04,400 --> 00:01:07,920
adversary

35
00:01:05,360 --> 00:01:08,560
and we never ask about what the honest

36
00:01:07,920 --> 00:01:11,600
party

37
00:01:08,560 --> 00:01:14,640
sees during the interaction okay so

38
00:01:11,600 --> 00:01:16,000
you might say no one actually constructs

39
00:01:14,640 --> 00:01:18,240
such protocols

40
00:01:16,000 --> 00:01:19,040
but in fact there are actually protocols

41
00:01:18,240 --> 00:01:20,798
that utilize

42
00:01:19,040 --> 00:01:22,720
this fact and for example there's the

43
00:01:20,799 --> 00:01:24,400
touring protocol official

44
00:01:22,720 --> 00:01:25,920
that uses this fact that the honest

45
00:01:24,400 --> 00:01:26,560
parties can reveal information to each

46
00:01:25,920 --> 00:01:28,159
other

47
00:01:26,560 --> 00:01:30,240
in order to minimize the run complexity

48
00:01:28,159 --> 00:01:32,240
of the protocol

49
00:01:30,240 --> 00:01:34,079
okay so let's say that we ignore this

50
00:01:32,240 --> 00:01:35,520
type of protocols because they only used

51
00:01:34,079 --> 00:01:36,320
it to minimize the run complexity and

52
00:01:35,520 --> 00:01:39,039
let's say that we're

53
00:01:36,320 --> 00:01:41,279
using only classical protocols like gmw

54
00:01:39,040 --> 00:01:43,920
or bgw

55
00:01:41,280 --> 00:01:44,640
and even then there is a problem with

56
00:01:43,920 --> 00:01:47,200
let's say

57
00:01:44,640 --> 00:01:48,479
secret sharing scheme and the reason is

58
00:01:47,200 --> 00:01:50,399
that the corrupted

59
00:01:48,479 --> 00:01:51,600
party can send its shell to the other

60
00:01:50,399 --> 00:01:54,240
honest parties

61
00:01:51,600 --> 00:01:56,399
allowing them to recover the original

62
00:01:54,240 --> 00:01:58,000
input of the other honest parties

63
00:01:56,399 --> 00:02:00,399
which again later on would lead to

64
00:01:58,000 --> 00:02:03,119
violence

65
00:02:00,399 --> 00:02:04,320
which lead me to talk about the question

66
00:02:03,119 --> 00:02:07,119
in this lecture

67
00:02:04,320 --> 00:02:09,199
research and of whether we can extend

68
00:02:07,119 --> 00:02:11,280
the classical notion of security to also

69
00:02:09,199 --> 00:02:13,280
prevent leakage of information from

70
00:02:11,280 --> 00:02:14,959
one honest party to other honest parties

71
00:02:13,280 --> 00:02:17,760
and perhaps even colluding subsets of

72
00:02:14,959 --> 00:02:17,760
honest parties

73
00:02:18,640 --> 00:02:23,200
so let me talk about the most naive way

74
00:02:21,520 --> 00:02:25,360
to try and solve this question

75
00:02:23,200 --> 00:02:27,040
and we this would simply be to take a

76
00:02:25,360 --> 00:02:28,720
protocol that can handle more malicious

77
00:02:27,040 --> 00:02:31,760
parties than what would require

78
00:02:28,720 --> 00:02:34,840
and i claim that this won't do so

79
00:02:31,760 --> 00:02:36,319
first the first reason is that we lose

80
00:02:34,840 --> 00:02:38,800
efficiency

81
00:02:36,319 --> 00:02:39,679
second if we still want to keep certain

82
00:02:38,800 --> 00:02:41,519
guarantees like

83
00:02:39,680 --> 00:02:43,360
say guaranteed double delivery then this

84
00:02:41,519 --> 00:02:44,879
might be impossible and later on i will

85
00:02:43,360 --> 00:02:46,640
show you that free party coin tossing

86
00:02:44,879 --> 00:02:48,239
can actually be computed with

87
00:02:46,640 --> 00:02:49,279
one malicious party and one semi honest

88
00:02:48,239 --> 00:02:51,200
party assuming that they are not

89
00:02:49,280 --> 00:02:53,440
colluding

90
00:02:51,200 --> 00:02:55,119
and finally this doesn't even work in

91
00:02:53,440 --> 00:02:57,280
general and even though

92
00:02:55,120 --> 00:02:59,040
standard protocol like gmw actually do

93
00:02:57,280 --> 00:03:00,080
satisfy this property when increasing

94
00:02:59,040 --> 00:03:03,519
the malicious

95
00:03:00,080 --> 00:03:06,400
security threshold actually does help

96
00:03:03,519 --> 00:03:06,800
the our protocol will this is not true

97
00:03:06,400 --> 00:03:08,480
and

98
00:03:06,800 --> 00:03:09,760
intuitively the reason is that even

99
00:03:08,480 --> 00:03:11,119
though we are dealing with stronger

100
00:03:09,760 --> 00:03:13,200
adversaries

101
00:03:11,120 --> 00:03:14,640
the their simulator is also stronger

102
00:03:13,200 --> 00:03:16,839
which uh

103
00:03:14,640 --> 00:03:18,399
which will be problematic in the

104
00:03:16,840 --> 00:03:20,400
reduction

105
00:03:18,400 --> 00:03:21,680
which lead me to talk about our new

106
00:03:20,400 --> 00:03:23,760
security notion which

107
00:03:21,680 --> 00:03:25,519
aims to solve these problems and we call

108
00:03:23,760 --> 00:03:28,159
this notion security with friends and

109
00:03:25,519 --> 00:03:29,840
foes or fast security for short

110
00:03:28,159 --> 00:03:31,200
and roughly th staff of security

111
00:03:29,840 --> 00:03:32,720
requires the following

112
00:03:31,200 --> 00:03:34,798
so again let's say that we have three

113
00:03:32,720 --> 00:03:37,040
puppies and we require that for

114
00:03:34,799 --> 00:03:39,519
any adversary co-opting at most tea

115
00:03:37,040 --> 00:03:41,120
parties malicious adversary

116
00:03:39,519 --> 00:03:42,959
in this example we corrupt only one

117
00:03:41,120 --> 00:03:44,799
party we want it to be

118
00:03:42,959 --> 00:03:46,879
able to we want to be able to simulate

119
00:03:44,799 --> 00:03:49,280
its view just like in the standard

120
00:03:46,879 --> 00:03:51,840
security definition

121
00:03:49,280 --> 00:03:53,920
now additionally we require that any

122
00:03:51,840 --> 00:03:54,799
semi honest adversary corrupting at most

123
00:03:53,920 --> 00:03:56,399
h

124
00:03:54,799 --> 00:03:57,840
parties in this example again this will

125
00:03:56,400 --> 00:03:59,680
only be one

126
00:03:57,840 --> 00:04:02,480
we also want to be able to simulate its

127
00:03:59,680 --> 00:04:04,480
view and we want to be able to simulate

128
00:04:02,480 --> 00:04:06,159
the view even if the adversary sends

129
00:04:04,480 --> 00:04:08,560
non-prescribed messages to the semi

130
00:04:06,159 --> 00:04:10,560
honest party

131
00:04:08,560 --> 00:04:12,400
and of course i want to stress that we

132
00:04:10,560 --> 00:04:13,840
don't only care about simulating this

133
00:04:12,400 --> 00:04:15,360
specific samuel is

134
00:04:13,840 --> 00:04:17,600
semi honest party we also want to

135
00:04:15,360 --> 00:04:19,600
simulate any other possible set of semi

136
00:04:17,600 --> 00:04:20,880
honest parties so even the first party

137
00:04:19,600 --> 00:04:25,120
to be able to

138
00:04:20,880 --> 00:04:26,840
be simulatable so we also introduced

139
00:04:25,120 --> 00:04:29,440
several results regarding this new

140
00:04:26,840 --> 00:04:30,960
notion and the first one is

141
00:04:29,440 --> 00:04:32,719
we provide the characterization

142
00:04:30,960 --> 00:04:33,758
specifically we show that under standard

143
00:04:32,720 --> 00:04:35,680
assumption

144
00:04:33,759 --> 00:04:36,880
any multi-party functionality can be

145
00:04:35,680 --> 00:04:39,600
computed with th

146
00:04:36,880 --> 00:04:41,360
star for security if and only if two t

147
00:04:39,600 --> 00:04:43,680
plus h star is smaller than the number

148
00:04:41,360 --> 00:04:45,360
of parties

149
00:04:43,680 --> 00:04:46,720
we also investigate the run complexity

150
00:04:45,360 --> 00:04:49,440
requires to do this

151
00:04:46,720 --> 00:04:51,440
sort of computation ensure that assuming

152
00:04:49,440 --> 00:04:52,560
pseudo-random generators you can compute

153
00:04:51,440 --> 00:04:54,400
any functionality

154
00:04:52,560 --> 00:04:56,000
with one one for security in three

155
00:04:54,400 --> 00:04:57,599
rounds we can in fact

156
00:04:56,000 --> 00:05:00,400
even increase the threshold that we can

157
00:04:57,600 --> 00:05:02,240
deal with in those three rounds

158
00:05:00,400 --> 00:05:04,159
however if we want two rounds then this

159
00:05:02,240 --> 00:05:05,120
is already impossible even for one one

160
00:05:04,160 --> 00:05:07,520
for security

161
00:05:05,120 --> 00:05:08,639
which give evidence as to why in the

162
00:05:07,520 --> 00:05:10,639
shaitaan protocol

163
00:05:08,639 --> 00:05:14,560
the honest parties had to reveal some

164
00:05:10,639 --> 00:05:14,560
information to other honest parties

165
00:05:14,880 --> 00:05:18,080
and finally we give comparisons to other

166
00:05:17,199 --> 00:05:20,720
definitions

167
00:05:18,080 --> 00:05:21,440
and show that the standard security

168
00:05:20,720 --> 00:05:24,160
notion of

169
00:05:21,440 --> 00:05:25,840
t plus h-style security doesn't apply

170
00:05:24,160 --> 00:05:29,199
for security as one would

171
00:05:25,840 --> 00:05:31,119
expect and we even refine this uh

172
00:05:29,199 --> 00:05:33,039
this result and show that mixed security

173
00:05:31,120 --> 00:05:35,039
doesn't apply soft security where mixed

174
00:05:33,039 --> 00:05:38,159
security is very similar

175
00:05:35,039 --> 00:05:40,000
we required that we can simulate any one

176
00:05:38,160 --> 00:05:41,919
adversary that controls some parties

177
00:05:40,000 --> 00:05:44,160
maliciously and another subset semi

178
00:05:41,919 --> 00:05:45,680
honestly whereas in fast security

179
00:05:44,160 --> 00:05:47,600
these are two completely different

180
00:05:45,680 --> 00:05:50,160
entities to adversaries that are not

181
00:05:47,600 --> 00:05:50,160
colluding

182
00:05:51,360 --> 00:05:55,039
so now let me give you a more formal

183
00:05:53,520 --> 00:05:58,159
definition of our security

184
00:05:55,039 --> 00:05:59,680
and how we deal with all the subtleties

185
00:05:58,160 --> 00:06:02,000
so the definition will follow the real

186
00:05:59,680 --> 00:06:03,520
versus ideal paradigm

187
00:06:02,000 --> 00:06:05,440
and it will be convenient to view the

188
00:06:03,520 --> 00:06:08,159
semi honest part is as as if they have

189
00:06:05,440 --> 00:06:09,440
been co-opted by an adversary

190
00:06:08,160 --> 00:06:10,880
and it's important to note that this

191
00:06:09,440 --> 00:06:14,000
adversary is not colluding with the

192
00:06:10,880 --> 00:06:14,000
malicious adversary

193
00:06:14,080 --> 00:06:18,400
moreover we let the semi honest party

194
00:06:16,639 --> 00:06:19,919
have an output just like honest parties

195
00:06:18,400 --> 00:06:21,440
and the reason we do it is because this

196
00:06:19,919 --> 00:06:24,240
is necessary in order to protect them

197
00:06:21,440 --> 00:06:26,240
from the malicious adversary

198
00:06:24,240 --> 00:06:27,919
and finally in the real world we

199
00:06:26,240 --> 00:06:29,919
consider adversaries that

200
00:06:27,919 --> 00:06:31,440
can send non-prescribed messages to the

201
00:06:29,919 --> 00:06:33,359
semi-honest adversary

202
00:06:31,440 --> 00:06:36,800
and they can even do it after the

203
00:06:33,360 --> 00:06:36,800
protocol it already terminated

204
00:06:38,080 --> 00:06:41,919
so now let me show you how we define the

205
00:06:39,919 --> 00:06:42,880
ideal world of security and i'll give

206
00:06:41,919 --> 00:06:44,639
you two versions

207
00:06:42,880 --> 00:06:46,319
one is full security we've guaranteed

208
00:06:44,639 --> 00:06:47,360
that to delivery and later on i'll show

209
00:06:46,319 --> 00:06:50,400
you how we define

210
00:06:47,360 --> 00:06:52,319
security with a boat so

211
00:06:50,400 --> 00:06:53,679
here we have three parties uh let's say

212
00:06:52,319 --> 00:06:55,440
that the left

213
00:06:53,680 --> 00:06:57,520
one is malicious the middle one is semi

214
00:06:55,440 --> 00:06:59,360
honest and the right one is honest

215
00:06:57,520 --> 00:07:01,198
in the ideal world we have another

216
00:06:59,360 --> 00:07:03,199
trusted party that is

217
00:07:01,199 --> 00:07:04,560
always honest that will perform the

218
00:07:03,199 --> 00:07:06,800
computation

219
00:07:04,560 --> 00:07:08,639
in this ideal world in the first phase

220
00:07:06,800 --> 00:07:09,680
the parties will send their inputs to

221
00:07:08,639 --> 00:07:11,199
the trusted party

222
00:07:09,680 --> 00:07:13,440
or the malicious party can change its

223
00:07:11,199 --> 00:07:15,680
input

224
00:07:13,440 --> 00:07:17,039
after that the malicious the trusted

225
00:07:15,680 --> 00:07:19,199
party will

226
00:07:17,039 --> 00:07:22,159
perform the computation and send each

227
00:07:19,199 --> 00:07:24,240
party its respective part of the output

228
00:07:22,160 --> 00:07:26,639
so far this is just the standard ideal

229
00:07:24,240 --> 00:07:28,400
world however here comes the new stuff

230
00:07:26,639 --> 00:07:30,080
we will require that the malicious

231
00:07:28,400 --> 00:07:32,318
adversary will send its entire

232
00:07:30,080 --> 00:07:33,599
ideal world view to the semi-honest

233
00:07:32,319 --> 00:07:36,400
party

234
00:07:33,599 --> 00:07:37,759
which includes its input its auxiliary

235
00:07:36,400 --> 00:07:39,039
information its randomness and the

236
00:07:37,759 --> 00:07:40,160
output it's received from the trusted

237
00:07:39,039 --> 00:07:42,719
party

238
00:07:40,160 --> 00:07:43,360
and the reason we are requiring to do

239
00:07:42,720 --> 00:07:44,800
this

240
00:07:43,360 --> 00:07:46,800
is because in the real world nothing

241
00:07:44,800 --> 00:07:48,479
prevents it from sending its entire view

242
00:07:46,800 --> 00:07:50,800
to the semi-honest parties

243
00:07:48,479 --> 00:07:51,599
so in order to handle those kind of

244
00:07:50,800 --> 00:07:54,720
adversaries

245
00:07:51,599 --> 00:07:56,840
we required the simulator to also send

246
00:07:54,720 --> 00:07:58,800
its information to the semi-honest

247
00:07:56,840 --> 00:08:01,359
simulator

248
00:07:58,800 --> 00:08:03,039
and lastly we need to define the outputs

249
00:08:01,360 --> 00:08:05,120
so the malicious party

250
00:08:03,039 --> 00:08:07,039
will output some view the semi-honest

251
00:08:05,120 --> 00:08:08,720
party will output a view and whatever it

252
00:08:07,039 --> 00:08:10,318
received from the trusted party

253
00:08:08,720 --> 00:08:13,840
when the honest party output whatever

254
00:08:10,319 --> 00:08:15,360
which received from the trusted party

255
00:08:13,840 --> 00:08:17,758
okay so now let me show you how we

256
00:08:15,360 --> 00:08:19,919
define security with a boat

257
00:08:17,759 --> 00:08:20,960
so again we have the same three parties

258
00:08:19,919 --> 00:08:22,639
and the trusted party

259
00:08:20,960 --> 00:08:24,479
and in the first phase again everyone

260
00:08:22,639 --> 00:08:26,240
just send its input

261
00:08:24,479 --> 00:08:28,080
after that the trusted party will

262
00:08:26,240 --> 00:08:29,599
perform the computation and in security

263
00:08:28,080 --> 00:08:31,840
with a boat it will first

264
00:08:29,599 --> 00:08:33,200
send an output only to the adversary and

265
00:08:31,840 --> 00:08:34,799
based on this information alone the

266
00:08:33,200 --> 00:08:36,240
adversary will later need to decide

267
00:08:34,799 --> 00:08:37,838
whether the other parties can receive

268
00:08:36,240 --> 00:08:40,560
the output or not

269
00:08:37,839 --> 00:08:42,000
however in fast security uh the

270
00:08:40,559 --> 00:08:45,199
definition that we give

271
00:08:42,000 --> 00:08:48,000
also uh states that the semi-honest

272
00:08:45,200 --> 00:08:49,360
party to also receive an output in the

273
00:08:48,000 --> 00:08:51,120
ideal world

274
00:08:49,360 --> 00:08:52,800
and the reason is that we want to handle

275
00:08:51,120 --> 00:08:55,360
protocols where

276
00:08:52,800 --> 00:08:57,199
some of the honest parties might learn

277
00:08:55,360 --> 00:09:00,320
some information on the output

278
00:08:57,200 --> 00:09:01,040
however they will not output it as their

279
00:09:00,320 --> 00:09:02,959
output

280
00:09:01,040 --> 00:09:04,800
but rather they will abort however in

281
00:09:02,959 --> 00:09:08,640
the ideal world they will learn it

282
00:09:04,800 --> 00:09:11,839
in order to simulate it and so from here

283
00:09:08,640 --> 00:09:12,399
the the the definition of the ideal what

284
00:09:11,839 --> 00:09:15,200
follows

285
00:09:12,399 --> 00:09:16,959
the standard way first the malicious

286
00:09:15,200 --> 00:09:18,640
party will send its ideal world view to

287
00:09:16,959 --> 00:09:20,399
the semi honest party

288
00:09:18,640 --> 00:09:22,240
and then it will say to the trusted

289
00:09:20,399 --> 00:09:24,480
party i do to continue our boat

290
00:09:22,240 --> 00:09:26,320
which based on that will either give the

291
00:09:24,480 --> 00:09:27,839
output to the honest party or tell it to

292
00:09:26,320 --> 00:09:28,720
a boat and to the semi-authority will

293
00:09:27,839 --> 00:09:30,399
tell us

294
00:09:28,720 --> 00:09:32,160
whatever you see from the atmosphere at

295
00:09:30,399 --> 00:09:33,839
the continuum or boat

296
00:09:32,160 --> 00:09:35,920
and based on this information each party

297
00:09:33,839 --> 00:09:37,519
will output whatever it needs to output

298
00:09:35,920 --> 00:09:40,719
which is either review or whatever

299
00:09:37,519 --> 00:09:42,080
received from the trusted public

300
00:09:40,720 --> 00:09:44,880
given that we can now define the

301
00:09:42,080 --> 00:09:47,360
security definition of our security

302
00:09:44,880 --> 00:09:47,920
and here we have two flavors of security

303
00:09:47,360 --> 00:09:50,640
the first

304
00:09:47,920 --> 00:09:52,479
weaker one requires that the view of the

305
00:09:50,640 --> 00:09:54,399
malicious party and the output of both

306
00:09:52,480 --> 00:09:55,839
the honest and the semi honest parties

307
00:09:54,399 --> 00:09:57,760
to be roughly the same in both the real

308
00:09:55,839 --> 00:09:59,360
and the ideal world

309
00:09:57,760 --> 00:10:00,800
and the second requirement is that the

310
00:09:59,360 --> 00:10:02,480
view of the semi honest party and the

311
00:10:00,800 --> 00:10:03,040
output of the honest party to be roughly

312
00:10:02,480 --> 00:10:06,399
the same

313
00:10:03,040 --> 00:10:08,319
again above the wheel and ideal world

314
00:10:06,399 --> 00:10:09,920
and the stronger notion of security

315
00:10:08,320 --> 00:10:11,600
requires that the joint

316
00:10:09,920 --> 00:10:13,279
distribution of all three random

317
00:10:11,600 --> 00:10:16,000
variables look roughly the same in both

318
00:10:13,279 --> 00:10:18,160
the real and the ideal world

319
00:10:16,000 --> 00:10:19,040
so a natural question to ask is whether

320
00:10:18,160 --> 00:10:21,360
or not

321
00:10:19,040 --> 00:10:22,880
the weaker security notion and the

322
00:10:21,360 --> 00:10:23,920
stronger security notion are actually

323
00:10:22,880 --> 00:10:25,760
equivalent

324
00:10:23,920 --> 00:10:26,959
and let me show you that this is not the

325
00:10:25,760 --> 00:10:28,880
case

326
00:10:26,959 --> 00:10:30,319
so for this example let me consider the

327
00:10:28,880 --> 00:10:32,480
secure channel function

328
00:10:30,320 --> 00:10:34,320
where the first party sends its input to

329
00:10:32,480 --> 00:10:37,440
the second party without the first

330
00:10:34,320 --> 00:10:38,560
third party learning anything about it

331
00:10:37,440 --> 00:10:40,800
and let's consider the following

332
00:10:38,560 --> 00:10:43,279
protocol so the

333
00:10:40,800 --> 00:10:45,199
first party has the an input and it will

334
00:10:43,279 --> 00:10:47,360
first compute a commitment

335
00:10:45,200 --> 00:10:50,399
which is then broadcast to both parties

336
00:10:47,360 --> 00:10:52,320
and then also send its input to the

337
00:10:50,399 --> 00:10:54,240
to the second party which it will then

338
00:10:52,320 --> 00:10:56,880
output

339
00:10:54,240 --> 00:10:58,880
so i claim that this is a weak fast

340
00:10:56,880 --> 00:11:00,640
secure this protocol yet it's not strong

341
00:10:58,880 --> 00:11:02,480
for secure and to give you a test as to

342
00:11:00,640 --> 00:11:03,519
why this is weak for secure let's assume

343
00:11:02,480 --> 00:11:05,279
that the

344
00:11:03,519 --> 00:11:06,800
bottom left part is malicious and the

345
00:11:05,279 --> 00:11:10,079
bottom right party is

346
00:11:06,800 --> 00:11:12,079
semi-honest so why

347
00:11:10,079 --> 00:11:13,680
why can we simulate it so the malicious

348
00:11:12,079 --> 00:11:14,959
simulator will simply put a commitment

349
00:11:13,680 --> 00:11:16,560
of zero

350
00:11:14,959 --> 00:11:18,640
and while the semi-annual simulator will

351
00:11:16,560 --> 00:11:20,319
output the commitment of x and x

352
00:11:18,640 --> 00:11:22,000
and whatever messages it received from

353
00:11:20,320 --> 00:11:24,320
the malicious party

354
00:11:22,000 --> 00:11:26,160
and that's it however in order to

355
00:11:24,320 --> 00:11:28,240
achieve strong security

356
00:11:26,160 --> 00:11:29,760
we need that both simulators to output

357
00:11:28,240 --> 00:11:33,120
exactly the same commitment

358
00:11:29,760 --> 00:11:35,200
which is impossible in the ideal world

359
00:11:33,120 --> 00:11:36,240
so now in the times i have left i want

360
00:11:35,200 --> 00:11:38,320
to talk about

361
00:11:36,240 --> 00:11:39,760
in more details about one of the results

362
00:11:38,320 --> 00:11:41,279
that i showed you earlier

363
00:11:39,760 --> 00:11:44,079
specifically i want to talk about the

364
00:11:41,279 --> 00:11:45,279
characterization

365
00:11:44,079 --> 00:11:47,839
and let's start with the positive

366
00:11:45,279 --> 00:11:50,079
direction so let's assume that

367
00:11:47,839 --> 00:11:51,279
2t plus h thousand is strictly smaller

368
00:11:50,079 --> 00:11:53,519
than the number of parties

369
00:11:51,279 --> 00:11:55,360
and will construct a protocol and the

370
00:11:53,519 --> 00:11:56,000
idea is to use their elimination

371
00:11:55,360 --> 00:11:58,399
technique which

372
00:11:56,000 --> 00:11:59,839
goes as follows first we show that the

373
00:11:58,399 --> 00:12:01,760
gmw protocol

374
00:11:59,839 --> 00:12:04,240
achieves fast security with identifiable

375
00:12:01,760 --> 00:12:06,959
abort where identifiable abort is

376
00:12:04,240 --> 00:12:09,200
exactly the same as security with a bot

377
00:12:06,959 --> 00:12:12,079
only that if the malicious party

378
00:12:09,200 --> 00:12:13,839
the malicious adversary decided to abort

379
00:12:12,079 --> 00:12:14,319
then it must reveal the identity of one

380
00:12:13,839 --> 00:12:18,639
of the

381
00:12:14,320 --> 00:12:20,320
co-opted parties so now the parties

382
00:12:18,639 --> 00:12:21,760
will compute an m minus t out of m

383
00:12:20,320 --> 00:12:24,720
secret sharing scheme of the output

384
00:12:21,760 --> 00:12:26,480
using the gmw protocol

385
00:12:24,720 --> 00:12:28,160
and if there was an abort then they have

386
00:12:26,480 --> 00:12:29,360
the identity of a corporate party they

387
00:12:28,160 --> 00:12:32,000
can throw it away

388
00:12:29,360 --> 00:12:33,680
give it some default value as an input

389
00:12:32,000 --> 00:12:35,839
and restart

390
00:12:33,680 --> 00:12:37,680
otherwise the honest the uncorrupted

391
00:12:35,839 --> 00:12:39,120
parties have enough information in order

392
00:12:37,680 --> 00:12:41,680
to reconstruct the output

393
00:12:39,120 --> 00:12:43,360
and so they would do it so why is this

394
00:12:41,680 --> 00:12:44,880
protocol secure

395
00:12:43,360 --> 00:12:46,959
well notice that the joint view of the

396
00:12:44,880 --> 00:12:48,880
adversary and the semi honest parties

397
00:12:46,959 --> 00:12:50,239
is by assumption strictly less than the

398
00:12:48,880 --> 00:12:52,240
number of co-op

399
00:12:50,240 --> 00:12:54,880
the number of shells required to perform

400
00:12:52,240 --> 00:12:54,880
the computation

401
00:12:57,519 --> 00:13:01,040
so what are the properties of this

402
00:12:59,200 --> 00:13:02,800
protocol so notice that the reduction to

403
00:13:01,040 --> 00:13:03,599
security with identifiable abort

404
00:13:02,800 --> 00:13:07,279
actually admits

405
00:13:03,600 --> 00:13:09,760
strong fast security however the entire

406
00:13:07,279 --> 00:13:12,480
protocol achieves only weak for security

407
00:13:09,760 --> 00:13:13,279
the reason is that because the gmw

408
00:13:12,480 --> 00:13:16,240
protocol is

409
00:13:13,279 --> 00:13:17,519
uh with for security and that goes to

410
00:13:16,240 --> 00:13:20,720
back to the commitment scheme

411
00:13:17,519 --> 00:13:22,800
used in the gmw protocol

412
00:13:20,720 --> 00:13:24,480
however this protocol actually sometimes

413
00:13:22,800 --> 00:13:25,519
admits for security for even higher

414
00:13:24,480 --> 00:13:27,680
threshold than what

415
00:13:25,519 --> 00:13:29,360
was stated in the theorem and this is

416
00:13:27,680 --> 00:13:30,719
for specific functionalities such as

417
00:13:29,360 --> 00:13:32,800
coin tossing with

418
00:13:30,720 --> 00:13:34,320
any uncorrupted majority so h star can

419
00:13:32,800 --> 00:13:36,639
be whatever we want

420
00:13:34,320 --> 00:13:38,079
but t must be strictly less than half of

421
00:13:36,639 --> 00:13:39,680
this parties

422
00:13:38,079 --> 00:13:41,439
and we can even compute with input

423
00:13:39,680 --> 00:13:44,079
functionalities like flip out the x or

424
00:13:41,440 --> 00:13:46,639
with one one for security

425
00:13:44,079 --> 00:13:48,719
so let me talk a bit about the negative

426
00:13:46,639 --> 00:13:49,120
direction and specifically i will talk

427
00:13:48,720 --> 00:13:51,360
about

428
00:13:49,120 --> 00:13:52,720
the impossibility of flip parties with

429
00:13:51,360 --> 00:13:53,920
one one for security

430
00:13:52,720 --> 00:13:55,600
they will show an example of

431
00:13:53,920 --> 00:13:58,079
functionality that cannot be computed in

432
00:13:55,600 --> 00:13:58,079
this setting

433
00:13:58,399 --> 00:14:01,519
so let's call this three parties a b and

434
00:14:00,800 --> 00:14:02,560
c

435
00:14:01,519 --> 00:14:05,199
and we consider the following

436
00:14:02,560 --> 00:14:06,638
functionality so a and c

437
00:14:05,199 --> 00:14:09,120
each will hold a string and c

438
00:14:06,639 --> 00:14:09,519
respectively and b will supposedly hold

439
00:14:09,120 --> 00:14:12,240
a one

440
00:14:09,519 --> 00:14:13,199
permutation of each of those string and

441
00:14:12,240 --> 00:14:15,600
if it does hold

442
00:14:13,199 --> 00:14:17,599
one or permutation of those string then

443
00:14:15,600 --> 00:14:18,000
the output of all parties will be a and

444
00:14:17,600 --> 00:14:20,560
c

445
00:14:18,000 --> 00:14:23,120
otherwise no party will learn anything

446
00:14:20,560 --> 00:14:25,279
and the idea is that in the ideal world

447
00:14:23,120 --> 00:14:26,240
if a is malicious and it changes its

448
00:14:25,279 --> 00:14:28,639
input

449
00:14:26,240 --> 00:14:30,160
then a semi on sb has no information

450
00:14:28,639 --> 00:14:31,760
whatsoever on c other than

451
00:14:30,160 --> 00:14:34,319
a one or permutation of it so it will

452
00:14:31,760 --> 00:14:36,480
not be able to recover it

453
00:14:34,320 --> 00:14:38,480
and furthermore in the real world any

454
00:14:36,480 --> 00:14:39,839
iron for any iron protocol there is

455
00:14:38,480 --> 00:14:42,880
always a round

456
00:14:39,839 --> 00:14:44,880
where one of the parties a and b all b

457
00:14:42,880 --> 00:14:46,720
and c can recover the output with

458
00:14:44,880 --> 00:14:47,680
significantly better probability than

459
00:14:46,720 --> 00:14:49,440
the other pill

460
00:14:47,680 --> 00:14:52,319
and the way to prove this is a simple

461
00:14:49,440 --> 00:14:52,320
averaging argument

462
00:14:52,959 --> 00:14:56,880
so using these two observations we can

463
00:14:55,279 --> 00:14:59,439
use the following we can

464
00:14:56,880 --> 00:15:01,120
do the following argument so first

465
00:14:59,440 --> 00:15:03,199
assuming that laws of generality that a

466
00:15:01,120 --> 00:15:04,480
and b are the product can recover the

467
00:15:03,199 --> 00:15:06,719
output to significantly better

468
00:15:04,480 --> 00:15:08,560
probability

469
00:15:06,720 --> 00:15:10,720
so what will the attacker do it will go

470
00:15:08,560 --> 00:15:14,479
up to a to act honestly until i

471
00:15:10,720 --> 00:15:15,279
round i it will abort and only after the

472
00:15:14,480 --> 00:15:19,440
protocol had

473
00:15:15,279 --> 00:15:19,439
ended it will send its entire view to b

474
00:15:19,600 --> 00:15:25,519
so let's compare the real ideal world

475
00:15:23,680 --> 00:15:27,120
so why can't we distinguish where can we

476
00:15:25,519 --> 00:15:30,240
distinguish between the two worlds

477
00:15:27,120 --> 00:15:31,519
so first let's denote the probability

478
00:15:30,240 --> 00:15:35,040
that b and c can recover

479
00:15:31,519 --> 00:15:38,240
ac in the real world so by definition

480
00:15:35,040 --> 00:15:40,240
c will output a and c with probability b

481
00:15:38,240 --> 00:15:41,759
or that what does that tells us about

482
00:15:40,240 --> 00:15:44,399
the ideal board

483
00:15:41,759 --> 00:15:45,680
since the only way for c to obtain this

484
00:15:44,399 --> 00:15:48,959
output for the honest

485
00:15:45,680 --> 00:15:49,279
c to obtain a and c is for the malicious

486
00:15:48,959 --> 00:15:52,079
a

487
00:15:49,279 --> 00:15:52,399
to send its original input this means

488
00:15:52,079 --> 00:15:54,399
that

489
00:15:52,399 --> 00:15:56,160
the malicious adversary that collapse a

490
00:15:54,399 --> 00:15:59,279
will send its original input with

491
00:15:56,160 --> 00:16:01,120
probability that is roughly p

492
00:15:59,279 --> 00:16:03,439
however now what we can say about the

493
00:16:01,120 --> 00:16:07,360
semi-honest party b

494
00:16:03,440 --> 00:16:09,600
is that by our previous observation

495
00:16:07,360 --> 00:16:11,360
the only way for it to recover c is for

496
00:16:09,600 --> 00:16:13,120
a to send its original input

497
00:16:11,360 --> 00:16:14,800
because otherwise it only holds the one

498
00:16:13,120 --> 00:16:17,279
or permutation of c

499
00:16:14,800 --> 00:16:19,920
so the probability that b can recover c

500
00:16:17,279 --> 00:16:22,399
is again a roughly p

501
00:16:19,920 --> 00:16:24,319
however as we already stated in the real

502
00:16:22,399 --> 00:16:26,639
world b can recover the output

503
00:16:24,320 --> 00:16:27,920
c if probability that it's significantly

504
00:16:26,639 --> 00:16:29,120
higher than p

505
00:16:27,920 --> 00:16:36,079
which gives us a clear way to

506
00:16:29,120 --> 00:16:37,519
distinguish the real and the ideal world

507
00:16:36,079 --> 00:16:39,279
if you want to extend this to more

508
00:16:37,519 --> 00:16:41,120
parties then we can use the standard

509
00:16:39,279 --> 00:16:43,759
player partitioning argument

510
00:16:41,120 --> 00:16:45,440
uh what i want to stress is that this

511
00:16:43,759 --> 00:16:47,120
argument actually holds up even further

512
00:16:45,440 --> 00:16:49,040
computation with fair computation

513
00:16:47,120 --> 00:16:51,440
roughly requires that either all parties

514
00:16:49,040 --> 00:16:53,439
learn the output or none of them do

515
00:16:51,440 --> 00:16:55,199
and the reason is that because for the

516
00:16:53,440 --> 00:16:57,279
functionality that we consider

517
00:16:55,199 --> 00:17:00,560
having the malicious simulator about is

518
00:16:57,279 --> 00:17:02,399
exactly the same as changing the input

519
00:17:00,560 --> 00:17:04,559
and furthermore the attacker that we

520
00:17:02,399 --> 00:17:06,240
introduced is actually independent of

521
00:17:04,559 --> 00:17:07,678
the adversary's view which means that we

522
00:17:06,240 --> 00:17:09,199
can actually apply this attack

523
00:17:07,679 --> 00:17:10,799
even while assuming that the parties

524
00:17:09,199 --> 00:17:12,880
have access to a simultaneous broadcast

525
00:17:10,799 --> 00:17:14,959
channel

526
00:17:12,880 --> 00:17:16,400
so to summarize we introduced a new

527
00:17:14,959 --> 00:17:18,480
security notion which we call

528
00:17:16,400 --> 00:17:20,240
security with friends and foes which

529
00:17:18,480 --> 00:17:22,319
aims to protect honest parties from

530
00:17:20,240 --> 00:17:23,599
other honest parties

531
00:17:22,319 --> 00:17:25,119
and we believe it will be interesting

532
00:17:23,599 --> 00:17:27,280
from both theoretical and particles

533
00:17:25,119 --> 00:17:28,959
perspective

534
00:17:27,280 --> 00:17:30,799
and we also post some various results

535
00:17:28,960 --> 00:17:32,559
regarding these new notions which

536
00:17:30,799 --> 00:17:34,320
include characterization of when we can

537
00:17:32,559 --> 00:17:35,280
compute any functionality and when we

538
00:17:34,320 --> 00:17:36,480
cannot

539
00:17:35,280 --> 00:17:38,320
we'll also investigate the round

540
00:17:36,480 --> 00:17:39,919
complexity showing that flip our

541
00:17:38,320 --> 00:17:41,439
free rounds suffices for many

542
00:17:39,919 --> 00:17:43,039
interesting

543
00:17:41,440 --> 00:17:44,640
thresholds however two ones it's

544
00:17:43,039 --> 00:17:46,160
impossible

545
00:17:44,640 --> 00:17:47,919
and we also give comparison to other

546
00:17:46,160 --> 00:17:51,679
standard definition

547
00:17:47,919 --> 00:17:51,679
and that's it thank you for listening

