1
00:00:24,400 --> 00:00:28,959
okay you can begin though

2
00:00:26,160 --> 00:00:30,240
okay cool all right welcome back

3
00:00:28,960 --> 00:00:34,239
everyone and this

4
00:00:30,240 --> 00:00:38,399
is the second session on postcon crypto

5
00:00:34,239 --> 00:00:42,000
of crypto 2020 and there are a couple of

6
00:00:38,399 --> 00:00:44,239
tags on not post

7
00:00:42,000 --> 00:00:46,000
part so we'll hear about that so the

8
00:00:44,239 --> 00:00:47,599
first talk so we'll have four talks and

9
00:00:46,000 --> 00:00:50,960
the first one will be

10
00:00:47,600 --> 00:00:54,160
scalable still random condom states by

11
00:00:50,960 --> 00:00:55,920
america melee zeveka breikowski and

12
00:00:54,160 --> 00:00:57,680
armory will be given a talk

13
00:00:55,920 --> 00:01:01,120
armory please go ahead and show your

14
00:00:57,680 --> 00:01:01,120
slice and the floor is yours

15
00:01:03,039 --> 00:01:07,199
thank you fang just

16
00:01:08,400 --> 00:01:13,200
okay so welcome everyone to this script

17
00:01:11,280 --> 00:01:14,560
to talk on scalable pseudorandom quantum

18
00:01:13,200 --> 00:01:16,720
states

19
00:01:14,560 --> 00:01:17,600
and i'm ambrish mueller this is a joint

20
00:01:16,720 --> 00:01:20,798
work with that

21
00:01:17,600 --> 00:01:21,439
vicar balkerski so in this work we're

22
00:01:20,799 --> 00:01:23,200
going to

23
00:01:21,439 --> 00:01:25,279
concentrate on the efficient generation

24
00:01:23,200 --> 00:01:27,200
of quantum quantum states and

25
00:01:25,280 --> 00:01:29,200
uh it is a basic fact in quantum

26
00:01:27,200 --> 00:01:31,119
information theory that uh

27
00:01:29,200 --> 00:01:33,200
efficiently generating a totally random

28
00:01:31,119 --> 00:01:34,799
quantum state is impossible

29
00:01:33,200 --> 00:01:37,119
simply because there is too much

30
00:01:34,799 --> 00:01:38,840
information in a truly random quantum

31
00:01:37,119 --> 00:01:40,240
state and there is no succinct

32
00:01:38,840 --> 00:01:44,159
representation

33
00:01:40,240 --> 00:01:46,079
now a more modest and achievable goal

34
00:01:44,159 --> 00:01:47,920
is aiming for an efficiently stable

35
00:01:46,079 --> 00:01:48,398
distribution such as for a bounded

36
00:01:47,920 --> 00:01:51,600
number

37
00:01:48,399 --> 00:01:53,520
of of output copies

38
00:01:51,600 --> 00:01:55,199
it is going to be indistinguishable from

39
00:01:53,520 --> 00:01:56,798
the same number of copies of the truly

40
00:01:55,200 --> 00:01:59,200
random quantum state and we know for

41
00:01:56,799 --> 00:02:00,320
example that for one copy it is trivial

42
00:01:59,200 --> 00:02:01,759
a classical

43
00:02:00,320 --> 00:02:03,360
a random classical string is

44
00:02:01,759 --> 00:02:06,000
indistinguishable from a

45
00:02:03,360 --> 00:02:07,119
random quantum state and the more copies

46
00:02:06,000 --> 00:02:10,000
we are going to let

47
00:02:07,119 --> 00:02:12,480
our adversary have the more the harder

48
00:02:10,000 --> 00:02:14,640
it is going to become for us to sample

49
00:02:12,480 --> 00:02:15,760
and one functionality that implements

50
00:02:14,640 --> 00:02:18,319
this approach

51
00:02:15,760 --> 00:02:19,359
is called the pseudorandom quantum state

52
00:02:18,319 --> 00:02:21,200
this is an efficient number of

53
00:02:19,360 --> 00:02:23,360
distributions such that for

54
00:02:21,200 --> 00:02:24,480
any polynomial number of copies of the

55
00:02:23,360 --> 00:02:27,440
output states

56
00:02:24,480 --> 00:02:29,040
it is going to be indistinguishable from

57
00:02:27,440 --> 00:02:30,480
the same number of copies of the toluene

58
00:02:29,040 --> 00:02:33,840
quantum state for

59
00:02:30,480 --> 00:02:36,369
a polynomial time quantum algorithms

60
00:02:33,840 --> 00:02:38,080
now more formally the definition of a

61
00:02:36,370 --> 00:02:40,319
[Music]

62
00:02:38,080 --> 00:02:42,319
pseudo-random quantum state generators

63
00:02:40,319 --> 00:02:44,879
first produced by a

64
00:02:42,319 --> 00:02:45,679
jillion song in crypto 2018 this is a

65
00:02:44,879 --> 00:02:47,920
quantum

66
00:02:45,680 --> 00:02:49,680
a polynomial time quantum algorithm it

67
00:02:47,920 --> 00:02:52,319
gets a and

68
00:02:49,680 --> 00:02:53,040
the output state size and k classical

69
00:02:52,319 --> 00:02:55,280
key

70
00:02:53,040 --> 00:02:56,879
and as you can see for any polynomial

71
00:02:55,280 --> 00:02:58,159
number of copies is going to be

72
00:02:56,879 --> 00:03:00,399
indistinguishable

73
00:02:58,159 --> 00:03:01,599
from an n cube with a random quantum

74
00:03:00,400 --> 00:03:05,760
state

75
00:03:01,599 --> 00:03:08,079
and it is known to how to to

76
00:03:05,760 --> 00:03:11,440
to construct such a generators based on

77
00:03:08,080 --> 00:03:14,560
the post quantum in one way functions

78
00:03:11,440 --> 00:03:16,480
now one thing that we observe about the

79
00:03:14,560 --> 00:03:17,840
the security definition of the prs

80
00:03:16,480 --> 00:03:19,679
generator

81
00:03:17,840 --> 00:03:21,680
is that the number that we think of the

82
00:03:19,680 --> 00:03:23,840
security parameter

83
00:03:21,680 --> 00:03:25,440
in red which denotes how many copies we

84
00:03:23,840 --> 00:03:26,560
are going to let our adversary have and

85
00:03:25,440 --> 00:03:28,720
how hard

86
00:03:26,560 --> 00:03:30,159
is it going to be to distinguish and the

87
00:03:28,720 --> 00:03:32,959
other number in blue

88
00:03:30,159 --> 00:03:34,720
which is the output state size these are

89
00:03:32,959 --> 00:03:37,040
exactly the same number

90
00:03:34,720 --> 00:03:39,440
and the operational meaning of this is

91
00:03:37,040 --> 00:03:41,359
that the more we want to make our output

92
00:03:39,440 --> 00:03:42,959
state size there

93
00:03:41,360 --> 00:03:44,959
sorry the more we want to make a state

94
00:03:42,959 --> 00:03:48,640
random and

95
00:03:44,959 --> 00:03:50,720
the bigger it gets and

96
00:03:48,640 --> 00:03:51,760
another thing to say about this is we we

97
00:03:50,720 --> 00:03:54,000
can say

98
00:03:51,760 --> 00:03:55,439
maybe something along the along these

99
00:03:54,000 --> 00:03:57,200
lines we can take

100
00:03:55,439 --> 00:03:59,519
n to be very big in particular the

101
00:03:57,200 --> 00:04:02,000
security parameter is going to be big

102
00:03:59,519 --> 00:04:03,840
and then take some prefix of this very

103
00:04:02,000 --> 00:04:05,360
big quantum state which we now know is

104
00:04:03,840 --> 00:04:08,080
very random

105
00:04:05,360 --> 00:04:08,480
but these kind of strategies don't yield

106
00:04:08,080 --> 00:04:11,280
a

107
00:04:08,480 --> 00:04:14,480
pure state and this is the reason that

108
00:04:11,280 --> 00:04:16,320
it does not yield a pr gas generator

109
00:04:14,480 --> 00:04:17,918
so the question that we are going to try

110
00:04:16,320 --> 00:04:20,000
and answer in this work is can we

111
00:04:17,918 --> 00:04:22,400
control the security level

112
00:04:20,000 --> 00:04:23,520
uh independently of the output state

113
00:04:22,400 --> 00:04:25,840
size

114
00:04:23,520 --> 00:04:27,520
so more formally essentially this is the

115
00:04:25,840 --> 00:04:29,359
definition that we have

116
00:04:27,520 --> 00:04:31,599
proposing this is a scalable prs

117
00:04:29,360 --> 00:04:33,600
generator the same the exact same

118
00:04:31,600 --> 00:04:35,919
algorithm form before but now it gets

119
00:04:33,600 --> 00:04:39,440
two independently tunable parameters

120
00:04:35,919 --> 00:04:40,080
and the output state size in blue and in

121
00:04:39,440 --> 00:04:43,840
red

122
00:04:40,080 --> 00:04:43,840
lambda the security parameter

123
00:04:44,160 --> 00:04:48,560
so a few words in relation to the

124
00:04:47,199 --> 00:04:51,600
previous construction so

125
00:04:48,560 --> 00:04:53,520
why doesn't previous constructions have

126
00:04:51,600 --> 00:04:55,600
a security parameters so

127
00:04:53,520 --> 00:04:57,359
all of the states in the support of the

128
00:04:55,600 --> 00:04:59,840
pls generator

129
00:04:57,360 --> 00:05:01,840
are essentially uniform amplitudes like

130
00:04:59,840 --> 00:05:04,400
all of the vectors that are in the

131
00:05:01,840 --> 00:05:05,198
support area all of the elements have

132
00:05:04,400 --> 00:05:09,599
the same

133
00:05:05,199 --> 00:05:12,560
absolute value and the phases are random

134
00:05:09,600 --> 00:05:14,160
now in order to uh and and one thing to

135
00:05:12,560 --> 00:05:16,800
say about this kind of distribution is

136
00:05:14,160 --> 00:05:19,199
that for a small number of qubits

137
00:05:16,800 --> 00:05:20,960
the dimension is small and it becomes

138
00:05:19,199 --> 00:05:21,440
very easy to distinguish from a truly

139
00:05:20,960 --> 00:05:23,680
random

140
00:05:21,440 --> 00:05:26,240
small quantum state and it becomes

141
00:05:23,680 --> 00:05:28,560
harder when the dimension goes

142
00:05:26,240 --> 00:05:30,560
and to get a scalable random state where

143
00:05:28,560 --> 00:05:32,400
we can look at a small state but it's

144
00:05:30,560 --> 00:05:34,160
still very very how to distinguish from

145
00:05:32,400 --> 00:05:36,000
a truly random quantum state

146
00:05:34,160 --> 00:05:38,800
and we also need to randomize the

147
00:05:36,000 --> 00:05:43,039
amplitudes not only the phases

148
00:05:38,800 --> 00:05:46,000
and the thing is that

149
00:05:43,039 --> 00:05:48,159
random phases is a local property and

150
00:05:46,000 --> 00:05:50,320
random amplitude is a global property

151
00:05:48,160 --> 00:05:52,160
what exactly do i mean by this

152
00:05:50,320 --> 00:05:53,919
is that we can start from any

153
00:05:52,160 --> 00:05:56,160
superposition say the uniform

154
00:05:53,919 --> 00:05:57,359
superposition and in order to randomize

155
00:05:56,160 --> 00:05:59,600
the amplitudes

156
00:05:57,360 --> 00:06:00,960
we can make a local computation in

157
00:05:59,600 --> 00:06:04,160
superposition

158
00:06:00,960 --> 00:06:07,280
and we can get random random phases

159
00:06:04,160 --> 00:06:09,600
sorry and in order to to get the random

160
00:06:07,280 --> 00:06:12,080
amplitudes we know that uh

161
00:06:09,600 --> 00:06:13,520
a quantum status corresponds to a unit

162
00:06:12,080 --> 00:06:16,719
vector

163
00:06:13,520 --> 00:06:18,000
and the unit vector is it means that all

164
00:06:16,720 --> 00:06:20,240
of the amplitudes depend

165
00:06:18,000 --> 00:06:22,000
on each other because they had to sum up

166
00:06:20,240 --> 00:06:23,919
the square of the amplitudes need to sum

167
00:06:22,000 --> 00:06:26,880
up to one

168
00:06:23,919 --> 00:06:28,960
so in this work very briefly we define

169
00:06:26,880 --> 00:06:30,880
and explore this notion of scalability

170
00:06:28,960 --> 00:06:32,840
in particular we show a framework for

171
00:06:30,880 --> 00:06:37,199
construction scalable

172
00:06:32,840 --> 00:06:40,318
uh objects we also show a technique for

173
00:06:37,199 --> 00:06:41,680
randomizing the amplitudes and more

174
00:06:40,319 --> 00:06:44,479
formally we show that

175
00:06:41,680 --> 00:06:46,240
based on the existence of post-quantum

176
00:06:44,479 --> 00:06:48,000
one-way functions

177
00:06:46,240 --> 00:06:50,479
we know how to construct scalable

178
00:06:48,000 --> 00:06:52,960
progress generators this is the same

179
00:06:50,479 --> 00:06:55,520
computational assumption as needed for

180
00:06:52,960 --> 00:06:58,719
non-scalable pls generators

181
00:06:55,520 --> 00:07:00,240
and we also show for another notion of

182
00:06:58,720 --> 00:07:01,039
the efficient generation of quantum

183
00:07:00,240 --> 00:07:03,599
state it's called t

184
00:07:01,039 --> 00:07:05,680
design i did not define it but it is

185
00:07:03,599 --> 00:07:06,560
incomparable to pseudorandom quantum

186
00:07:05,680 --> 00:07:09,680
states

187
00:07:06,560 --> 00:07:12,160
and we improve the efficiency of the

188
00:07:09,680 --> 00:07:12,880
scalable design generators from

189
00:07:12,160 --> 00:07:15,039
depending

190
00:07:12,880 --> 00:07:18,880
polynomially on t the number of copies

191
00:07:15,039 --> 00:07:18,880
to depending poly logarithmically

192
00:07:19,199 --> 00:07:26,319
and one last word about the technique

193
00:07:22,479 --> 00:07:27,919
so in a very small natural we know that

194
00:07:26,319 --> 00:07:30,080
the space of our quantum state is

195
00:07:27,919 --> 00:07:33,120
corresponds to the unit sphere of uh

196
00:07:30,080 --> 00:07:34,880
if it's a n-cubed quantum status so in a

197
00:07:33,120 --> 00:07:37,520
two to the n-dimension

198
00:07:34,880 --> 00:07:38,240
and to get a random point on this sphere

199
00:07:37,520 --> 00:07:41,280
we know that

200
00:07:38,240 --> 00:07:42,319
uh a gaussian vector and normalized

201
00:07:41,280 --> 00:07:44,638
gaussian vector

202
00:07:42,319 --> 00:07:46,240
is because of the spherical symmetry of

203
00:07:44,639 --> 00:07:48,319
the gaussian distribution

204
00:07:46,240 --> 00:07:50,319
uh distributes exactly the same so what

205
00:07:48,319 --> 00:07:52,720
essentially we are going to try and do

206
00:07:50,319 --> 00:07:54,240
is to sample a gaussian vector in a

207
00:07:52,720 --> 00:07:56,240
quantum state

208
00:07:54,240 --> 00:07:57,759
and one good thing about the gaussian

209
00:07:56,240 --> 00:07:59,360
distribution we know that this is

210
00:07:57,759 --> 00:08:00,800
locally separable which means that we

211
00:07:59,360 --> 00:08:02,800
can sample each of the

212
00:08:00,800 --> 00:08:04,319
two to the n coordinates of this vector

213
00:08:02,800 --> 00:08:06,240
independently

214
00:08:04,319 --> 00:08:08,080
and one thing that we need to take care

215
00:08:06,240 --> 00:08:09,680
of is the known this is the global

216
00:08:08,080 --> 00:08:12,800
property which i

217
00:08:09,680 --> 00:08:14,879
refer to earlier something that we don't

218
00:08:12,800 --> 00:08:17,440
know how to compute efficiently

219
00:08:14,879 --> 00:08:18,879
and in order to get around us not

220
00:08:17,440 --> 00:08:22,080
knowing the norm of this

221
00:08:18,879 --> 00:08:24,160
two to the n-dimensional vector uh we

222
00:08:22,080 --> 00:08:26,080
use a technique called quantum rejection

223
00:08:24,160 --> 00:08:27,919
sampling which is

224
00:08:26,080 --> 00:08:29,680
an analog the quantum analog of

225
00:08:27,919 --> 00:08:31,680
classical rejection sampling and this is

226
00:08:29,680 --> 00:08:32,320
how we efficiently generate the quantum

227
00:08:31,680 --> 00:08:36,000
state

228
00:08:32,320 --> 00:08:39,200
that corresponds to this gaussian vector

229
00:08:36,000 --> 00:08:41,519
and that's it thank you for listening

230
00:08:39,200 --> 00:08:44,480
okay thanks armory and i'll hand it to

231
00:08:41,519 --> 00:08:47,519
dominic to moderate the questions

232
00:08:44,480 --> 00:08:51,120
okay so anyone who has

233
00:08:47,519 --> 00:08:53,839
questions on this uh nice talk please

234
00:08:51,120 --> 00:08:55,040
type your questions in the chat so

235
00:08:53,839 --> 00:08:57,279
either on the

236
00:08:55,040 --> 00:09:00,000
well in any of the chats you find or

237
00:08:57,279 --> 00:09:00,000
raise your hand

238
00:09:00,080 --> 00:09:09,839
so i mean virtually raise your hand

239
00:09:02,000 --> 00:09:09,839
there's a function for that

240
00:09:10,959 --> 00:09:15,119
in in the meantime i have one one

241
00:09:13,680 --> 00:09:18,399
question

242
00:09:15,120 --> 00:09:21,120
so um do

243
00:09:18,399 --> 00:09:22,560
so your construction as i understand is

244
00:09:21,120 --> 00:09:25,600
directly

245
00:09:22,560 --> 00:09:29,518
like constructing uh directly a uh

246
00:09:25,600 --> 00:09:32,480
pseudorandom state instead of doing the

247
00:09:29,519 --> 00:09:34,160
like wrong approach of cutting off some

248
00:09:32,480 --> 00:09:35,839
qubits from an existing state

249
00:09:34,160 --> 00:09:37,519
but i was wondering and i was wondering

250
00:09:35,839 --> 00:09:40,720
whether you know the answer is

251
00:09:37,519 --> 00:09:42,480
um if i'm given a big pseudo-random

252
00:09:40,720 --> 00:09:43,040
state and i want to make a smaller one

253
00:09:42,480 --> 00:09:45,600
out of

254
00:09:43,040 --> 00:09:47,199
out of it but i might want to use

255
00:09:45,600 --> 00:09:47,920
something more clever than cutting off

256
00:09:47,200 --> 00:09:49,519
bits

257
00:09:47,920 --> 00:09:51,360
is do we do we know that this is

258
00:09:49,519 --> 00:09:55,920
impossible in general to

259
00:09:51,360 --> 00:09:58,399
kind of i i don't know of something that

260
00:09:55,920 --> 00:10:00,399
will tell us that this is impossible i

261
00:09:58,399 --> 00:10:02,839
surely don't know that this is possible

262
00:10:00,399 --> 00:10:04,000
but i don't know that this is impossible

263
00:10:02,839 --> 00:10:06,320
yeah

264
00:10:04,000 --> 00:10:06,320
okay

265
00:10:09,360 --> 00:10:14,800
yeah so it looks like we don't have any

266
00:10:11,920 --> 00:10:17,199
other questions right now

267
00:10:14,800 --> 00:10:19,439
so i can i get uh thank you again for

268
00:10:17,200 --> 00:10:23,519
your talk and i give the microphone back

269
00:10:19,440 --> 00:10:25,200
um okay thanks emily again let's move on

270
00:10:23,519 --> 00:10:25,839
to the next talk so our next stop will

271
00:10:25,200 --> 00:10:27,440
be

272
00:10:25,839 --> 00:10:29,519
efficient pseudorandom correlation

273
00:10:27,440 --> 00:10:32,720
genders from irene lpn

274
00:10:29,519 --> 00:10:32,720
by elite bowler

275
00:10:36,320 --> 00:10:39,360
peter's show and peter will be giving a

276
00:10:38,720 --> 00:10:42,079
talk

277
00:10:39,360 --> 00:10:42,720
peter the flames yours do you see my

278
00:10:42,079 --> 00:10:46,319
screen

279
00:10:42,720 --> 00:10:48,640
yes great so this is joint work with the

280
00:10:46,320 --> 00:10:50,079
electrified neville and lisa my

281
00:10:48,640 --> 00:10:52,800
co-authors

282
00:10:50,079 --> 00:10:53,599
and this talk is a little less quantum

283
00:10:52,800 --> 00:10:55,439
um

284
00:10:53,600 --> 00:10:57,040
the main motivation is actually towards

285
00:10:55,440 --> 00:10:58,959
constructing secure multi-party

286
00:10:57,040 --> 00:11:00,719
computation protocols

287
00:10:58,959 --> 00:11:03,119
so here we have two parties alice and

288
00:11:00,720 --> 00:11:04,800
bob with inputs x and y

289
00:11:03,120 --> 00:11:06,959
and they want to run some interactive

290
00:11:04,800 --> 00:11:08,640
protocol to evaluate a function f

291
00:11:06,959 --> 00:11:10,319
on their private inputs without

292
00:11:08,640 --> 00:11:13,360
revealing any more information

293
00:11:10,320 --> 00:11:14,160
on their inputs and in particular we're

294
00:11:13,360 --> 00:11:16,320
looking at an

295
00:11:14,160 --> 00:11:18,079
extension of this model where alice and

296
00:11:16,320 --> 00:11:20,959
bob also have access to

297
00:11:18,079 --> 00:11:22,880
ahead of time some general source of

298
00:11:20,959 --> 00:11:24,479
correlated randomness which is generated

299
00:11:22,880 --> 00:11:27,200
by a trusted dealer

300
00:11:24,480 --> 00:11:29,839
independently of their inputs so the

301
00:11:27,200 --> 00:11:31,040
benefits of this pre-processing model

302
00:11:29,839 --> 00:11:32,720
are that when the parties use the

303
00:11:31,040 --> 00:11:34,079
correlated randomness in the online

304
00:11:32,720 --> 00:11:35,600
phase of the protocol

305
00:11:34,079 --> 00:11:37,760
this can now be information

306
00:11:35,600 --> 00:11:39,120
theoretically secure and also very

307
00:11:37,760 --> 00:11:41,680
efficient in practice

308
00:11:39,120 --> 00:11:43,040
in fact it's just got a small constant

309
00:11:41,680 --> 00:11:44,959
overhead

310
00:11:43,040 --> 00:11:46,399
on top of evaluating the function and

311
00:11:44,959 --> 00:11:47,119
sending a circuit description of the

312
00:11:46,399 --> 00:11:49,920
function

313
00:11:47,120 --> 00:11:50,959
in the clear now the main downside of

314
00:11:49,920 --> 00:11:52,240
this approach

315
00:11:50,959 --> 00:11:53,839
is that the parties actually have to

316
00:11:52,240 --> 00:11:55,360
generate this private correlated

317
00:11:53,839 --> 00:11:56,880
randomness in the first place

318
00:11:55,360 --> 00:11:58,399
and typically this is done with an

319
00:11:56,880 --> 00:12:00,160
interactive protocol

320
00:11:58,399 --> 00:12:01,920
which is very expensive and actually

321
00:12:00,160 --> 00:12:05,120
dominates the overall cost of most

322
00:12:01,920 --> 00:12:07,680
protocols in practice

323
00:12:05,120 --> 00:12:08,639
now a pseudorandom correlation generator

324
00:12:07,680 --> 00:12:10,399
is a tool that

325
00:12:08,639 --> 00:12:12,880
offers an approach for reducing the cost

326
00:12:10,399 --> 00:12:14,480
of this pre-processing phase

327
00:12:12,880 --> 00:12:16,800
whereas a traditional pseudorandom

328
00:12:14,480 --> 00:12:19,440
generator takes a short seed and expands

329
00:12:16,800 --> 00:12:21,279
this to a longer pseudorandom string

330
00:12:19,440 --> 00:12:23,200
a pseudorandom correlation generator

331
00:12:21,279 --> 00:12:26,560
first samples a pair of short

332
00:12:23,200 --> 00:12:28,720
correlated seeds whereupon each of these

333
00:12:26,560 --> 00:12:31,359
seeds can then be locally expanded

334
00:12:28,720 --> 00:12:32,880
to produce a larger output such that the

335
00:12:31,360 --> 00:12:35,360
pair of outputs together

336
00:12:32,880 --> 00:12:36,720
is supposed to come from some target

337
00:12:35,360 --> 00:12:39,040
correlation

338
00:12:36,720 --> 00:12:40,959
where you could think of this as maybe a

339
00:12:39,040 --> 00:12:42,079
large batch of oblivious transfers on

340
00:12:40,959 --> 00:12:43,760
random inputs

341
00:12:42,079 --> 00:12:45,839
or a large batch of multiplication

342
00:12:43,760 --> 00:12:48,480
triples uh used in an npc

343
00:12:45,839 --> 00:12:49,760
protocol and the security property of a

344
00:12:48,480 --> 00:12:52,560
pcg

345
00:12:49,760 --> 00:12:54,639
is one of these expanded outputs should

346
00:12:52,560 --> 00:12:57,040
be computationally indistinguishable

347
00:12:54,639 --> 00:12:58,720
from a real sample of the correlation

348
00:12:57,040 --> 00:13:00,240
even if you're given the seed which

349
00:12:58,720 --> 00:13:03,760
generated the other output

350
00:13:00,240 --> 00:13:06,160
from the pcg so this can be plugged into

351
00:13:03,760 --> 00:13:07,439
any npc protocol in the pre-processing

352
00:13:06,160 --> 00:13:08,719
model

353
00:13:07,440 --> 00:13:11,200
such that the amount of correlated

354
00:13:08,720 --> 00:13:14,720
random randomness you need can be

355
00:13:11,200 --> 00:13:14,720
reduced to a much smaller size

356
00:13:14,959 --> 00:13:18,638
now the main goal today um is we're

357
00:13:17,519 --> 00:13:20,320
going to be looking at

358
00:13:18,639 --> 00:13:23,200
generating a correlation called

359
00:13:20,320 --> 00:13:25,279
oblivious linear function evaluation

360
00:13:23,200 --> 00:13:27,279
related correlations so this is a

361
00:13:25,279 --> 00:13:30,079
two-party correlation

362
00:13:27,279 --> 00:13:30,959
where typically you have an input uv

363
00:13:30,079 --> 00:13:33,040
from bob

364
00:13:30,959 --> 00:13:34,160
and the input x from alice these are

365
00:13:33,040 --> 00:13:36,319
field elements

366
00:13:34,160 --> 00:13:38,160
and alex receives the output w which is

367
00:13:36,320 --> 00:13:39,839
ux plus v

368
00:13:38,160 --> 00:13:41,279
but here because we're sampling a

369
00:13:39,839 --> 00:13:42,480
correlation then we just sample the

370
00:13:41,279 --> 00:13:45,519
inputs at random

371
00:13:42,480 --> 00:13:47,360
and give them out to the parties um yeah

372
00:13:45,519 --> 00:13:49,120
so this is

373
00:13:47,360 --> 00:13:50,800
related to multiplication triples and

374
00:13:49,120 --> 00:13:52,079
authenticated multiplication triples

375
00:13:50,800 --> 00:13:54,639
which we also

376
00:13:52,079 --> 00:13:56,000
consider in the paper that are used in a

377
00:13:54,639 --> 00:13:57,600
as kind of the main

378
00:13:56,000 --> 00:14:01,040
type of correlated randomness and a lot

379
00:13:57,600 --> 00:14:01,040
of secure computation protocols

380
00:14:01,680 --> 00:14:05,120
so our main contribution is to give new

381
00:14:03,839 --> 00:14:06,480
constructions of pseudo-random

382
00:14:05,120 --> 00:14:08,480
correlation generators

383
00:14:06,480 --> 00:14:10,639
based on variance of the ring learning

384
00:14:08,480 --> 00:14:12,480
parity with noise assumption

385
00:14:10,639 --> 00:14:14,480
in particular we give pcgs for

386
00:14:12,480 --> 00:14:16,880
generating oblivious linear function

387
00:14:14,480 --> 00:14:18,480
evaluations and multiplication triples

388
00:14:16,880 --> 00:14:20,320
where the computational cost of

389
00:14:18,480 --> 00:14:23,199
expanding the seeds to produce

390
00:14:20,320 --> 00:14:25,120
n oles or triples is just quasi-linear

391
00:14:23,199 --> 00:14:26,639
and the length of the output

392
00:14:25,120 --> 00:14:29,360
so this improves upon a previous

393
00:14:26,639 --> 00:14:31,120
construction from crypto last year

394
00:14:29,360 --> 00:14:34,160
where we had a quadratic in end cost

395
00:14:31,120 --> 00:14:36,560
based on the standard lpn assumption

396
00:14:34,160 --> 00:14:38,000
now interestingly uh techniques here are

397
00:14:36,560 --> 00:14:40,560
somewhat analogous to

398
00:14:38,000 --> 00:14:41,680
and also inspired by existing techniques

399
00:14:40,560 --> 00:14:43,680
from the fully homomorphic

400
00:14:41,680 --> 00:14:44,800
encryption literature where they

401
00:14:43,680 --> 00:14:48,079
switched from using

402
00:14:44,800 --> 00:14:50,160
learner with errors to ring lwe to avoid

403
00:14:48,079 --> 00:14:53,519
a quadratic blow up in ciphertext size

404
00:14:50,160 --> 00:14:55,920
during homomorphic evaluation

405
00:14:53,519 --> 00:14:57,519
so a second main contribution is an

406
00:14:55,920 --> 00:14:59,120
actively secure protocol

407
00:14:57,519 --> 00:15:02,000
for actually setting up the seeds for

408
00:14:59,120 --> 00:15:03,600
these pcgs in a secure manner

409
00:15:02,000 --> 00:15:05,440
and together these can be plugged in to

410
00:15:03,600 --> 00:15:07,440
produce a pre-processing phase for

411
00:15:05,440 --> 00:15:10,399
multi-party computation protocols such

412
00:15:07,440 --> 00:15:12,399
as speeds which is active security

413
00:15:10,399 --> 00:15:13,680
and it gives us something which is very

414
00:15:12,399 --> 00:15:15,199
concretely efficient

415
00:15:13,680 --> 00:15:16,800
and gives dramatic reductions in

416
00:15:15,199 --> 00:15:19,839
bandwidth and storage costs compared

417
00:15:16,800 --> 00:15:21,359
with the existing state of the art

418
00:15:19,839 --> 00:15:23,680
so finally a few more highlights of the

419
00:15:21,360 --> 00:15:25,440
paper we give some extensions of our

420
00:15:23,680 --> 00:15:28,000
basic pcgs to

421
00:15:25,440 --> 00:15:30,000
the multi-party setting and also more

422
00:15:28,000 --> 00:15:32,240
general forms of bilinear correlations

423
00:15:30,000 --> 00:15:33,920
including matrix triples

424
00:15:32,240 --> 00:15:36,320
and finally we provide some security

425
00:15:33,920 --> 00:15:37,920
analysis of the variance of the ring lpn

426
00:15:36,320 --> 00:15:39,600
assumption we require

427
00:15:37,920 --> 00:15:42,399
in particular our most efficient

428
00:15:39,600 --> 00:15:43,920
constructions are based on an arithmetic

429
00:15:42,399 --> 00:15:46,560
variant of ring lpn

430
00:15:43,920 --> 00:15:48,639
over a large prime modulus p and a

431
00:15:46,560 --> 00:15:50,719
polynomial modulus f of x

432
00:15:48,639 --> 00:15:52,959
where f x should split completely into

433
00:15:50,720 --> 00:15:55,199
linear factors modulo p

434
00:15:52,959 --> 00:15:56,959
so this is um somewhat similar to

435
00:15:55,199 --> 00:15:57,758
bringing lwe using a cycloatomic

436
00:15:56,959 --> 00:15:59,279
polynomial

437
00:15:57,759 --> 00:16:01,680
and here we have a sparse error

438
00:15:59,279 --> 00:16:04,240
distribution and also a constant number

439
00:16:01,680 --> 00:16:04,239
of samples

440
00:16:04,880 --> 00:16:09,759
so you might be wondering how efficient

441
00:16:07,680 --> 00:16:11,758
is this

442
00:16:09,759 --> 00:16:13,600
well in practice uh we didn't implement

443
00:16:11,759 --> 00:16:15,519
it completely but here's a few

444
00:16:13,600 --> 00:16:17,440
concrete estimates based on some micro

445
00:16:15,519 --> 00:16:19,120
benchmarks we did

446
00:16:17,440 --> 00:16:21,199
so if you want to generate a million

447
00:16:19,120 --> 00:16:23,759
authenticated multiplication triples

448
00:16:21,199 --> 00:16:27,279
for the speeds protocol with two parties

449
00:16:23,759 --> 00:16:29,839
over 128-bit prime field

450
00:16:27,279 --> 00:16:30,959
then the rough pipeline first you have

451
00:16:29,839 --> 00:16:33,040
to start out with

452
00:16:30,959 --> 00:16:34,638
a small number of seed triples say

453
00:16:33,040 --> 00:16:36,480
around 25 000

454
00:16:34,639 --> 00:16:38,480
and a few megabytes of communication in

455
00:16:36,480 --> 00:16:40,480
the protocol which generates the first

456
00:16:38,480 --> 00:16:42,399
set of pcbc's

457
00:16:40,480 --> 00:16:44,240
and then the local expansion phase takes

458
00:16:42,399 --> 00:16:45,120
around 20 seconds to produce a million

459
00:16:44,240 --> 00:16:46,639
triples

460
00:16:45,120 --> 00:16:48,959
and if you want to produce more triples

461
00:16:46,639 --> 00:16:50,720
than this then you can just reserve the

462
00:16:48,959 --> 00:16:53,359
last portion of these

463
00:16:50,720 --> 00:16:54,959
to do a kind of bootstrapping procedure

464
00:16:53,360 --> 00:16:57,279
and use these to generate the

465
00:16:54,959 --> 00:16:58,880
seed triples for the next set of pcg

466
00:16:57,279 --> 00:17:01,040
seeds

467
00:16:58,880 --> 00:17:02,560
so comparison to the state-of-the-art

468
00:17:01,040 --> 00:17:03,920
interactive approaches

469
00:17:02,560 --> 00:17:06,559
which are based on homomorphic

470
00:17:03,920 --> 00:17:08,000
encryption these require distributed key

471
00:17:06,559 --> 00:17:10,559
generation setup

472
00:17:08,000 --> 00:17:13,119
and a large amount of interaction with a

473
00:17:10,559 --> 00:17:14,720
comparable amount of computation time

474
00:17:13,119 --> 00:17:16,399
notably the two gigabytes of

475
00:17:14,720 --> 00:17:18,480
communication that it requires is

476
00:17:16,400 --> 00:17:21,520
much much larger than the amount to set

477
00:17:18,480 --> 00:17:24,079
up the pcg siege which we use

478
00:17:21,520 --> 00:17:24,959
this shows that pcgs give a practical

479
00:17:24,079 --> 00:17:27,198
approach

480
00:17:24,959 --> 00:17:28,480
uh for multiplication triples and other

481
00:17:27,199 --> 00:17:29,919
applications

482
00:17:28,480 --> 00:17:31,919
which can be used to greatly reduce

483
00:17:29,919 --> 00:17:33,840
bandwidth in applications of secure

484
00:17:31,919 --> 00:17:36,720
computation

485
00:17:33,840 --> 00:17:38,000
so that's it and thanks for listening

486
00:17:36,720 --> 00:17:41,360
all right thanks peter

487
00:17:38,000 --> 00:17:41,360
and we have time for questions

488
00:17:42,160 --> 00:18:00,799
yes as before if you have any questions

489
00:17:45,520 --> 00:18:03,918
please type them in the chat

490
00:18:00,799 --> 00:18:06,400
i i have one question um

491
00:18:03,919 --> 00:18:07,360
so i guess this ended this is in the

492
00:18:06,400 --> 00:18:10,960
post quantum

493
00:18:07,360 --> 00:18:12,799
uh session because it um is related to

494
00:18:10,960 --> 00:18:14,640
learning parity with noise which is not

495
00:18:12,799 --> 00:18:17,760
a quantum broken assumption

496
00:18:14,640 --> 00:18:20,160
but i'm wondering did you also um is it

497
00:18:17,760 --> 00:18:23,280
also post quantum secure so does the

498
00:18:20,160 --> 00:18:25,200
uh security proof go through in the

499
00:18:23,280 --> 00:18:27,600
quantum setting or is it just kind of

500
00:18:25,200 --> 00:18:29,600
related to post quantum security by

501
00:18:27,600 --> 00:18:31,439
sharing an assumption

502
00:18:29,600 --> 00:18:33,360
so we didn't think about doing any

503
00:18:31,440 --> 00:18:34,559
security proofs in the post quantum

504
00:18:33,360 --> 00:18:37,840
session

505
00:18:34,559 --> 00:18:40,000
and i think for our main protocol we do

506
00:18:37,840 --> 00:18:42,159
rely on a random oracle

507
00:18:40,000 --> 00:18:43,280
which may be a little more tricky for

508
00:18:42,160 --> 00:18:57,840
post quantums like

509
00:18:43,280 --> 00:18:57,840
adversary i guess okay

510
00:19:00,160 --> 00:19:05,679
dominic you're you're muted oh yeah

511
00:19:03,520 --> 00:19:07,520
thanks i was just saying it seems you

512
00:19:05,679 --> 00:19:10,000
don't have any more questions so i

513
00:19:07,520 --> 00:19:10,799
thank you for your talk and give the mic

514
00:19:10,000 --> 00:19:14,240
back to

515
00:19:10,799 --> 00:19:16,160
fund okay thanks okay thanks

516
00:19:14,240 --> 00:19:18,320
all right let's move on to the next app

517
00:19:16,160 --> 00:19:20,880
so this will be a non-pcp

518
00:19:18,320 --> 00:19:21,600
approach to succinct quantum save their

519
00:19:20,880 --> 00:19:24,559
knowledge

520
00:19:21,600 --> 00:19:25,360
by jonathan bruto the vadim lubaszewski

521
00:19:24,559 --> 00:19:27,520
kung wing

522
00:19:25,360 --> 00:19:29,039
gregory zeiler and kang will be given a

523
00:19:27,520 --> 00:19:31,360
talk

524
00:19:29,039 --> 00:19:39,840
please go ahead thank you very much for

525
00:19:31,360 --> 00:19:39,840
the introduction let me share the screen

526
00:19:40,960 --> 00:19:44,240
okay uh can you see it yeah we're good

527
00:19:43,840 --> 00:19:47,600
great

528
00:19:44,240 --> 00:19:48,000
um okay so um hi everyone my name is

529
00:19:47,600 --> 00:19:50,159
khan

530
00:19:48,000 --> 00:19:52,000
i'm a pg student at ibm research zurich

531
00:19:50,160 --> 00:19:53,520
and today i'm going to talk about a

532
00:19:52,000 --> 00:19:55,679
non-pcp approach to

533
00:19:53,520 --> 00:19:57,280
succinct quant of safe zero knowledge so

534
00:19:55,679 --> 00:19:59,919
this is joint work with jonathan bottle

535
00:19:57,280 --> 00:20:02,639
but immediately and gregor seiler

536
00:19:59,919 --> 00:20:04,400
okay so this approach is related to

537
00:20:02,640 --> 00:20:06,080
lattice base zero knowledge proofs

538
00:20:04,400 --> 00:20:07,840
so here's just a simple example of the

539
00:20:06,080 --> 00:20:11,199
statement the classical one

540
00:20:07,840 --> 00:20:12,799
so you're given a matrix a the vector u

541
00:20:11,200 --> 00:20:14,480
and you want to prove knowledge of a

542
00:20:12,799 --> 00:20:17,520
short vector s meaning with small

543
00:20:14,480 --> 00:20:20,640
coefficients such that a s is equal to u

544
00:20:17,520 --> 00:20:22,400
mod q where q is a prime so these types

545
00:20:20,640 --> 00:20:23,120
of statements can be proven obviously

546
00:20:22,400 --> 00:20:24,799
using

547
00:20:23,120 --> 00:20:26,479
lattice commitments and there have been

548
00:20:24,799 --> 00:20:29,520
a lot of works on that

549
00:20:26,480 --> 00:20:30,080
especially gregor's stock on monday so

550
00:20:29,520 --> 00:20:32,639
they

551
00:20:30,080 --> 00:20:34,799
rely on the quantum presumably want to

552
00:20:32,640 --> 00:20:36,400
say assumption like cis or lwe

553
00:20:34,799 --> 00:20:38,158
and also they can be implemented

554
00:20:36,400 --> 00:20:40,240
efficiently while

555
00:20:38,159 --> 00:20:41,840
for addition and multiplication and also

556
00:20:40,240 --> 00:20:43,039
in the polynomial ring setting with the

557
00:20:41,840 --> 00:20:45,280
entities

558
00:20:43,039 --> 00:20:47,360
so the main drawback as also described

559
00:20:45,280 --> 00:20:48,000
by gregor on monday is that the proof

560
00:20:47,360 --> 00:20:50,639
size is

561
00:20:48,000 --> 00:20:51,760
linear in the number of commitments so

562
00:20:50,640 --> 00:20:54,960
maybe it's still fine

563
00:20:51,760 --> 00:20:56,879
to apply these these techniques to prove

564
00:20:54,960 --> 00:21:00,720
some small statements like

565
00:20:56,880 --> 00:21:01,600
range proof or proving knowledge of lwe

566
00:21:00,720 --> 00:21:04,880
sample

567
00:21:01,600 --> 00:21:07,280
but one can imagine that for

568
00:21:04,880 --> 00:21:08,000
more complicated statements the proof

569
00:21:07,280 --> 00:21:11,039
size can

570
00:21:08,000 --> 00:21:12,720
basically blow then on the other hand

571
00:21:11,039 --> 00:21:15,679
we have the more generic approach which

572
00:21:12,720 --> 00:21:17,200
is the pcb like aurora oligaro

573
00:21:15,679 --> 00:21:19,200
they rely on collision resistant hash

574
00:21:17,200 --> 00:21:20,159
functions and then the process is really

575
00:21:19,200 --> 00:21:23,600
sublinear or

576
00:21:20,159 --> 00:21:24,720
even logarithmic in some cases so then

577
00:21:23,600 --> 00:21:27,280
the

578
00:21:24,720 --> 00:21:29,120
the downside is that it's quite slower

579
00:21:27,280 --> 00:21:30,320
compared to the lattices and sometimes

580
00:21:29,120 --> 00:21:31,760
this might be

581
00:21:30,320 --> 00:21:33,439
in some scenarios this might be very

582
00:21:31,760 --> 00:21:36,640
essential for example when

583
00:21:33,440 --> 00:21:38,480
we want to run protocols on constrained

584
00:21:36,640 --> 00:21:41,600
devices and so on

585
00:21:38,480 --> 00:21:42,480
so the main motivation of this paper is

586
00:21:41,600 --> 00:21:44,158
to construct

587
00:21:42,480 --> 00:21:45,760
purely let's base zero knowledge proof

588
00:21:44,159 --> 00:21:46,799
so that they can be implemented

589
00:21:45,760 --> 00:21:49,840
efficiently

590
00:21:46,799 --> 00:21:52,080
but they also so that they also have the

591
00:21:49,840 --> 00:21:53,360
nice sublinear proof size so kind of

592
00:21:52,080 --> 00:21:56,559
benefits of the two

593
00:21:53,360 --> 00:21:58,879
worlds so this is the motivation

594
00:21:56,559 --> 00:22:00,720
so our contributions can be split into

595
00:21:58,880 --> 00:22:02,640
basically two protocols

596
00:22:00,720 --> 00:22:04,320
so they have two different techniques

597
00:22:02,640 --> 00:22:05,840
they are sublinear

598
00:22:04,320 --> 00:22:08,000
and yeah i don't really have time to

599
00:22:05,840 --> 00:22:09,280
discuss both of them unfortunately so i

600
00:22:08,000 --> 00:22:10,159
find the level commitment is very

601
00:22:09,280 --> 00:22:11,600
interesting

602
00:22:10,159 --> 00:22:14,000
so i'm also happy to talk about the

603
00:22:11,600 --> 00:22:16,799
offline it's also in the video

604
00:22:14,000 --> 00:22:18,799
but uh in this talk we'll just focus on

605
00:22:16,799 --> 00:22:21,918
the main idea of the lattice base

606
00:22:18,799 --> 00:22:25,600
bulletproofs okay

607
00:22:21,919 --> 00:22:27,360
so okay so it is yeah it is inspired by

608
00:22:25,600 --> 00:22:29,678
the discrete log bullet proofs

609
00:22:27,360 --> 00:22:31,520
as the name suggests so the main

610
00:22:29,679 --> 00:22:32,720
observation is as follows so suppose we

611
00:22:31,520 --> 00:22:35,600
have

612
00:22:32,720 --> 00:22:36,240
some problem introduced in the previous

613
00:22:35,600 --> 00:22:39,600
slide

614
00:22:36,240 --> 00:22:42,000
so we have a s is equal to u where

615
00:22:39,600 --> 00:22:42,959
it holds over some ring and let's say

616
00:22:42,000 --> 00:22:45,120
the vector s

617
00:22:42,960 --> 00:22:46,320
the secret vector s is very long so the

618
00:22:45,120 --> 00:22:49,039
length yeah is

619
00:22:46,320 --> 00:22:49,678
very long and it has small coefficients

620
00:22:49,039 --> 00:22:52,960
so

621
00:22:49,679 --> 00:22:54,320
obviously one could just do some uh well

622
00:22:52,960 --> 00:22:56,480
apply some well-known techniques to

623
00:22:54,320 --> 00:22:58,559
prove that like fetch me with the boards

624
00:22:56,480 --> 00:23:00,159
but you can see that if you just do

625
00:22:58,559 --> 00:23:02,080
something like that then you send the

626
00:23:00,159 --> 00:23:05,120
mast opening of s

627
00:23:02,080 --> 00:23:07,600
which has the same length as s so

628
00:23:05,120 --> 00:23:09,199
if s is very long then this part would

629
00:23:07,600 --> 00:23:11,199
be very expensive

630
00:23:09,200 --> 00:23:12,960
so the the main idea of bulletproof

631
00:23:11,200 --> 00:23:14,720
system well of the lattice baseball

632
00:23:12,960 --> 00:23:17,440
approves is the following

633
00:23:14,720 --> 00:23:19,760
so we split the matrix a into two sub

634
00:23:17,440 --> 00:23:22,240
matrices a zero and a one

635
00:23:19,760 --> 00:23:23,679
then the vector s into s 0 and s 1 of

636
00:23:22,240 --> 00:23:28,640
the equal length

637
00:23:23,679 --> 00:23:28,640
then we have a 0 a 1 times s 0 s 1 is u

638
00:23:29,200 --> 00:23:34,720
so then for a challenge c get challenged

639
00:23:32,559 --> 00:23:35,840
we have the following so the matrix c

640
00:23:34,720 --> 00:23:39,440
ca0 plus

641
00:23:35,840 --> 00:23:42,959
a1 times the matrix s0 plus cs1

642
00:23:39,440 --> 00:23:44,000
is equal to some w0 plus cu plus c

643
00:23:42,960 --> 00:23:46,159
squared w1

644
00:23:44,000 --> 00:23:47,520
so here the w's are the cross terms so

645
00:23:46,159 --> 00:23:52,159
w0 is a1

646
00:23:47,520 --> 00:23:54,559
s0 and w1 is a0 s1

647
00:23:52,159 --> 00:23:56,400
so the intuition is just to send w0 and

648
00:23:54,559 --> 00:23:58,158
w1 to the verifier

649
00:23:56,400 --> 00:24:00,080
so you can see from that it's not really

650
00:23:58,159 --> 00:24:00,559
zero knowledge and then we end up

651
00:24:00,080 --> 00:24:02,480
proving

652
00:24:00,559 --> 00:24:04,080
a kind of similar equation so the

653
00:24:02,480 --> 00:24:07,360
equation at the top can be written

654
00:24:04,080 --> 00:24:11,039
as b s prime is equal to u prime so b

655
00:24:07,360 --> 00:24:14,080
here is the matrix c a zero plus a one

656
00:24:11,039 --> 00:24:15,039
s prime is the secret vector s zero plus

657
00:24:14,080 --> 00:24:17,760
c s one

658
00:24:15,039 --> 00:24:19,679
and u prime is a vector w zero plus c u

659
00:24:17,760 --> 00:24:22,879
plus c squared w one

660
00:24:19,679 --> 00:24:25,039
which is public so from a zero a

661
00:24:22,880 --> 00:24:26,799
s is equal to u we ended up with b s

662
00:24:25,039 --> 00:24:28,400
prime is equal to u prime so what's the

663
00:24:26,799 --> 00:24:30,960
difference here

664
00:24:28,400 --> 00:24:32,480
so there are so that's the good news and

665
00:24:30,960 --> 00:24:35,600
the bad news so the bad

666
00:24:32,480 --> 00:24:37,600
well the good news is that the c the

667
00:24:35,600 --> 00:24:38,799
length of the secret vector s prime is

668
00:24:37,600 --> 00:24:41,439
two times

669
00:24:38,799 --> 00:24:43,360
well it's twice as short as well two

670
00:24:41,440 --> 00:24:46,960
times shorter than s

671
00:24:43,360 --> 00:24:51,039
so so you can imagine this as one round

672
00:24:46,960 --> 00:24:54,320
but we can well apply multiple rounds

673
00:24:51,039 --> 00:24:56,640
to get even smaller sizes smaller length

674
00:24:54,320 --> 00:24:58,799
of the secret vector so that at the end

675
00:24:56,640 --> 00:25:00,960
when the size the length is not very big

676
00:24:58,799 --> 00:25:03,600
then we can send the mass opening and

677
00:25:00,960 --> 00:25:04,000
just like before okay so the bad news

678
00:25:03,600 --> 00:25:07,520
here

679
00:25:04,000 --> 00:25:10,080
like you can see from the slide is that

680
00:25:07,520 --> 00:25:11,440
we assume that the s so s0 and s1 have

681
00:25:10,080 --> 00:25:14,960
small coefficients right

682
00:25:11,440 --> 00:25:16,640
but then s prime which is s0 plus cs1

683
00:25:14,960 --> 00:25:18,000
will have yeah it will have bigger

684
00:25:16,640 --> 00:25:21,679
coefficient than s

685
00:25:18,000 --> 00:25:23,520
assuming that c is small so

686
00:25:21,679 --> 00:25:25,279
so this is just for one round so if we

687
00:25:23,520 --> 00:25:27,279
have many rounds like logarithm

688
00:25:25,279 --> 00:25:28,640
logarithmically many rounds then you can

689
00:25:27,279 --> 00:25:31,679
imagine that this

690
00:25:28,640 --> 00:25:34,960
secret vector s prime will be

691
00:25:31,679 --> 00:25:36,720
quite uh we will be bigger and then

692
00:25:34,960 --> 00:25:38,000
when we do the sound is proved then we

693
00:25:36,720 --> 00:25:40,480
extract then

694
00:25:38,000 --> 00:25:41,520
the size also also grows and then for

695
00:25:40,480 --> 00:25:43,279
that we have to

696
00:25:41,520 --> 00:25:45,679
set the parameters like prime modulus

697
00:25:43,279 --> 00:25:48,080
and so on so the main conclusion is that

698
00:25:45,679 --> 00:25:49,039
um even though the proof size is nice

699
00:25:48,080 --> 00:25:52,960
and so on

700
00:25:49,039 --> 00:25:54,158
just this just uh the extracted message

701
00:25:52,960 --> 00:25:56,240
being large

702
00:25:54,159 --> 00:25:58,320
makes the protocol not really uh

703
00:25:56,240 --> 00:26:01,039
interesting in practice

704
00:25:58,320 --> 00:26:03,039
so here i pointed out the advantages and

705
00:26:01,039 --> 00:26:03,840
disadvantages of these two protocols so

706
00:26:03,039 --> 00:26:06,158
i'm not

707
00:26:03,840 --> 00:26:06,959
so i didn't talk really about level

708
00:26:06,159 --> 00:26:08,480
commitments but

709
00:26:06,960 --> 00:26:10,400
for lots of this builder proofs we get

710
00:26:08,480 --> 00:26:12,159
the poliographic size

711
00:26:10,400 --> 00:26:14,480
it is not zero knowledge because we send

712
00:26:12,159 --> 00:26:16,559
these w's and then there is this massive

713
00:26:14,480 --> 00:26:20,080
slack meaning that when you extract the

714
00:26:16,559 --> 00:26:22,158
the vector then the the secret vector

715
00:26:20,080 --> 00:26:25,039
then the sizes of that

716
00:26:22,159 --> 00:26:26,080
uh the coefficients of the extracted

717
00:26:25,039 --> 00:26:27,760
vector are

718
00:26:26,080 --> 00:26:29,120
are much bigger than the one that we

719
00:26:27,760 --> 00:26:31,279
started with

720
00:26:29,120 --> 00:26:32,719
so well okay so nevertheless i think

721
00:26:31,279 --> 00:26:35,120
this is a nice

722
00:26:32,720 --> 00:26:36,840
uh theoretical first step towards

723
00:26:35,120 --> 00:26:40,239
practical sublinear

724
00:26:36,840 --> 00:26:42,799
linear sorry practical sublinear

725
00:26:40,240 --> 00:26:45,760
quantum state zero knowledge first so

726
00:26:42,799 --> 00:26:47,600
yeah thank you very much for listening

727
00:26:45,760 --> 00:26:53,840
all right thanks ken are there any

728
00:26:47,600 --> 00:26:53,840
questions for khan

729
00:26:59,840 --> 00:27:07,199
um i have one little question

730
00:27:04,480 --> 00:27:09,679
have you made any like do you have any

731
00:27:07,200 --> 00:27:13,919
concrete comparisons how this compares

732
00:27:09,679 --> 00:27:16,000
uh to other um protocols like

733
00:27:13,919 --> 00:27:17,360
or implementation experiments or

734
00:27:16,000 --> 00:27:21,360
something

735
00:27:17,360 --> 00:27:21,840
so uh for this for this particular these

736
00:27:21,360 --> 00:27:25,439
two

737
00:27:21,840 --> 00:27:26,720
protocols uh like we we noticed that the

738
00:27:25,440 --> 00:27:29,440
slack is so big

739
00:27:26,720 --> 00:27:30,159
that uh we think that it's in terms of

740
00:27:29,440 --> 00:27:32,240
techniques is

741
00:27:30,159 --> 00:27:34,640
the techniques are we think they are

742
00:27:32,240 --> 00:27:37,440
nice but in terms of the sizes even

743
00:27:34,640 --> 00:27:39,039
asymptotically they

744
00:27:37,440 --> 00:27:40,480
i'm not sure if there's any point to

745
00:27:39,039 --> 00:27:43,039
instantiate that

746
00:27:40,480 --> 00:27:43,679
i see so it's probably a stepping stone

747
00:27:43,039 --> 00:27:46,720
towards

748
00:27:43,679 --> 00:27:50,080
future things

749
00:27:46,720 --> 00:27:51,919
yeah yeah cool

750
00:27:50,080 --> 00:27:54,320
okay any other questions from the

751
00:27:51,919 --> 00:27:54,320
audience

752
00:27:56,480 --> 00:28:03,120
i just i think i'm sorry okay

753
00:28:00,399 --> 00:28:03,918
uh i i i think the the question that you

754
00:28:03,120 --> 00:28:06,959
asked about

755
00:28:03,919 --> 00:28:09,360
uh if the protocol itself is is

756
00:28:06,960 --> 00:28:10,480
uh post quantum in the previous talk it

757
00:28:09,360 --> 00:28:12,559
can be

758
00:28:10,480 --> 00:28:13,520
really it is also a very nice question

759
00:28:12,559 --> 00:28:15,360
here so

760
00:28:13,520 --> 00:28:17,679
i just wanted to point out that this

761
00:28:15,360 --> 00:28:18,799
bulletproof technique was also analyzed

762
00:28:17,679 --> 00:28:21,840
in the

763
00:28:18,799 --> 00:28:22,799
in yesterday's talk on um on zero

764
00:28:21,840 --> 00:28:26,399
knowledge

765
00:28:22,799 --> 00:28:28,960
so so this multi multi-round fetch me

766
00:28:26,399 --> 00:28:32,479
uh paper also this discussed that

767
00:28:28,960 --> 00:28:35,120
lattice-based bulletproofs in the paper

768
00:28:32,480 --> 00:28:36,240
actually cool okay so that one can be

769
00:28:35,120 --> 00:28:39,439
applied here

770
00:28:36,240 --> 00:28:41,440
to remove the interaction that's what

771
00:28:39,440 --> 00:28:44,799
you mean

772
00:28:41,440 --> 00:28:46,399
um it's about uh how to prove that

773
00:28:44,799 --> 00:28:48,559
how to prove that the protocol is

774
00:28:46,399 --> 00:28:50,799
secured here that's what i mean

775
00:28:48,559 --> 00:28:50,799
okay

776
00:28:53,279 --> 00:28:57,120
okay so it seems we don't have any other

777
00:28:55,200 --> 00:29:01,120
questions so i give it

778
00:28:57,120 --> 00:29:02,959
give the mic back to fun okay excellent

779
00:29:01,120 --> 00:29:04,959
all right now we have our last talk in

780
00:29:02,960 --> 00:29:07,120
this session

781
00:29:04,960 --> 00:29:09,120
uh it's non-interactive zero knowledge

782
00:29:07,120 --> 00:29:12,559
arguments for qma

783
00:29:09,120 --> 00:29:16,158
with pre-processing by andrea

784
00:29:12,559 --> 00:29:19,440
colo danzil thomas dick tina jen and

785
00:29:16,159 --> 00:29:22,480
andrea will be giving a talk

786
00:29:19,440 --> 00:29:23,600
andrea the floor can you hear me and can

787
00:29:22,480 --> 00:29:27,039
you see the screen

788
00:29:23,600 --> 00:29:29,840
yep okay good so uh this will be

789
00:29:27,039 --> 00:29:32,158
a brief overview of joint work with tina

790
00:29:29,840 --> 00:29:34,399
tinazang and toma vidiq

791
00:29:32,159 --> 00:29:35,840
so non-interactive zero knowledge proofs

792
00:29:34,399 --> 00:29:37,439
are of course well studied in the

793
00:29:35,840 --> 00:29:40,399
classical literature

794
00:29:37,440 --> 00:29:41,200
and it is well known that in the oops uh

795
00:29:40,399 --> 00:29:43,439
hold on

796
00:29:41,200 --> 00:29:44,720
ah there you go it's well known in that

797
00:29:43,440 --> 00:29:46,480
in the plane model

798
00:29:44,720 --> 00:29:48,720
these are impossible to achieve for

799
00:29:46,480 --> 00:29:50,720
languages outside of bpp

800
00:29:48,720 --> 00:29:51,919
and one of the most common setups to

801
00:29:50,720 --> 00:29:53,279
overcome this

802
00:29:51,919 --> 00:29:55,360
and to get non-interactive

803
00:29:53,279 --> 00:29:57,120
zero-knowledge proofs for all of np

804
00:29:55,360 --> 00:29:58,479
is to assume that the verifier and

805
00:29:57,120 --> 00:30:00,080
approver share

806
00:29:58,480 --> 00:30:01,919
a common random string or common

807
00:30:00,080 --> 00:30:03,439
reference string

808
00:30:01,919 --> 00:30:05,679
now this work is about the quantum

809
00:30:03,440 --> 00:30:07,440
setting so in the quantum setting the

810
00:30:05,679 --> 00:30:09,200
first question we can ask is

811
00:30:07,440 --> 00:30:11,520
are our proofs for np even the

812
00:30:09,200 --> 00:30:12,159
interactive ones still sound and zero

813
00:30:11,520 --> 00:30:13,760
knowledge

814
00:30:12,159 --> 00:30:15,679
so in particular what happens when we

815
00:30:13,760 --> 00:30:17,039
have a quantum verifier

816
00:30:15,679 --> 00:30:19,440
and the difficulty is that in the

817
00:30:17,039 --> 00:30:21,120
quantum case it is not in general

818
00:30:19,440 --> 00:30:22,720
possible it's not generically possible

819
00:30:21,120 --> 00:30:24,399
to rewind the verifier

820
00:30:22,720 --> 00:30:25,919
and in general a quantum measurement

821
00:30:24,399 --> 00:30:26,879
destroys the internal state of the

822
00:30:25,919 --> 00:30:28,880
verifier

823
00:30:26,880 --> 00:30:31,360
in an irreversible way and quantum

824
00:30:28,880 --> 00:30:32,960
information cannot be copied

825
00:30:31,360 --> 00:30:34,840
and of course rewinding is a common

826
00:30:32,960 --> 00:30:36,240
classical technique for proving zero

827
00:30:34,840 --> 00:30:38,639
knowledge

828
00:30:36,240 --> 00:30:40,240
but nonetheless we do have zero

829
00:30:38,640 --> 00:30:41,919
knowledge proofs for np

830
00:30:40,240 --> 00:30:44,240
which are zero knowledge against quantum

831
00:30:41,919 --> 00:30:45,520
verifiers and this is from a work of

832
00:30:44,240 --> 00:30:48,000
quatros

833
00:30:45,520 --> 00:30:49,039
and in the non-interactive case instead

834
00:30:48,000 --> 00:30:51,919
in a recent work

835
00:30:49,039 --> 00:30:53,200
of pecker and xi'an they showed that

836
00:30:51,919 --> 00:30:55,039
nesix foreign p

837
00:30:53,200 --> 00:30:57,200
can be constructed from learning with

838
00:30:55,039 --> 00:30:58,799
errors in the crs model

839
00:30:57,200 --> 00:31:01,039
and one of the things we show in our

840
00:30:58,799 --> 00:31:01,760
work is that the nesics from peckhart

841
00:31:01,039 --> 00:31:03,440
and xi'an

842
00:31:01,760 --> 00:31:05,200
are straightforwardly post quantum

843
00:31:03,440 --> 00:31:07,519
secure and this is because

844
00:31:05,200 --> 00:31:09,440
simply no rewinding of the verifier is

845
00:31:07,519 --> 00:31:11,279
involved there

846
00:31:09,440 --> 00:31:13,200
now a second direction that one can

847
00:31:11,279 --> 00:31:16,080
explore in the quantum setting

848
00:31:13,200 --> 00:31:18,480
is to go beyond np so can we have zero

849
00:31:16,080 --> 00:31:21,039
knowledge proofs for qma

850
00:31:18,480 --> 00:31:22,240
and now qma is just the quantum analog

851
00:31:21,039 --> 00:31:26,000
of np

852
00:31:22,240 --> 00:31:28,080
or ma where the witness is allowed to be

853
00:31:26,000 --> 00:31:29,840
a quantum state and the verifier can be

854
00:31:28,080 --> 00:31:32,080
quantum polynomial time

855
00:31:29,840 --> 00:31:33,439
so the most well well-studied qma

856
00:31:32,080 --> 00:31:37,199
complete problem

857
00:31:33,440 --> 00:31:39,039
is the local hamiltonian problem and

858
00:31:37,200 --> 00:31:41,200
in this problem the input is a classical

859
00:31:39,039 --> 00:31:45,279
description of a hamiltonian which is

860
00:31:41,200 --> 00:31:47,679
a hermitian operator on say n qubits

861
00:31:45,279 --> 00:31:48,880
it is local in the sense that it can be

862
00:31:47,679 --> 00:31:51,440
described as a sum of

863
00:31:48,880 --> 00:31:53,039
local terms each acting on a constant

864
00:31:51,440 --> 00:31:54,799
number of qubits

865
00:31:53,039 --> 00:31:56,320
and this is a promise problem so your

866
00:31:54,799 --> 00:31:58,080
promise that the lowest energy the

867
00:31:56,320 --> 00:32:00,000
lowest eigenvalue

868
00:31:58,080 --> 00:32:02,240
is either less than alpha or greater

869
00:32:00,000 --> 00:32:04,399
than beta there's some gap

870
00:32:02,240 --> 00:32:06,799
say inverse polynomial and you have to

871
00:32:04,399 --> 00:32:08,719
determine which is the case

872
00:32:06,799 --> 00:32:11,279
and so intuitively this problem is in

873
00:32:08,720 --> 00:32:12,960
qma because it's easy to verify that the

874
00:32:11,279 --> 00:32:15,360
energy is lower than alpha

875
00:32:12,960 --> 00:32:16,720
if you're handed the ground state but of

876
00:32:15,360 --> 00:32:17,199
course the background state itself may

877
00:32:16,720 --> 00:32:20,240
be

878
00:32:17,200 --> 00:32:21,919
hard to find and so there is an

879
00:32:20,240 --> 00:32:22,799
interactive zero knowledge protocol for

880
00:32:21,919 --> 00:32:24,399
qma

881
00:32:22,799 --> 00:32:26,720
this was proposed by broadband and

882
00:32:24,399 --> 00:32:27,439
co-authors fung song is one of the

883
00:32:26,720 --> 00:32:30,559
authors

884
00:32:27,440 --> 00:32:32,480
in 2016 and in particular this is a

885
00:32:30,559 --> 00:32:34,879
protocol for a variant of the

886
00:32:32,480 --> 00:32:37,120
local hamiltonian problem and here i'll

887
00:32:34,880 --> 00:32:40,559
just give you a very high level sketch

888
00:32:37,120 --> 00:32:42,080
of how this protocol proceeds so

889
00:32:40,559 --> 00:32:43,678
let's say that we're in the case of a

890
00:32:42,080 --> 00:32:46,240
yes instance and so

891
00:32:43,679 --> 00:32:48,480
there is some ground state some witness

892
00:32:46,240 --> 00:32:51,120
call it w

893
00:32:48,480 --> 00:32:52,159
the protocol is as follows in step one

894
00:32:51,120 --> 00:32:54,239
the prover

895
00:32:52,159 --> 00:32:55,279
sends to the verifier sort of an

896
00:32:54,240 --> 00:32:57,679
encoding

897
00:32:55,279 --> 00:32:59,120
under some authentication code without

898
00:32:57,679 --> 00:33:01,600
being too precise

899
00:32:59,120 --> 00:33:03,678
of the weakness of the ground state

900
00:33:01,600 --> 00:33:04,000
together with a classical commitment to

901
00:33:03,679 --> 00:33:07,600
the

902
00:33:04,000 --> 00:33:09,760
encoding key call it k

903
00:33:07,600 --> 00:33:12,399
and then in step two the verifier sort

904
00:33:09,760 --> 00:33:14,080
of homomorphically measures

905
00:33:12,399 --> 00:33:17,120
the encoded state that she receives and

906
00:33:14,080 --> 00:33:18,559
gets a classical encoded outcome

907
00:33:17,120 --> 00:33:20,639
and this should be an encoding of a low

908
00:33:18,559 --> 00:33:22,559
energy outcome if the encoded state was

909
00:33:20,640 --> 00:33:24,559
indeed a ground state

910
00:33:22,559 --> 00:33:26,240
and this outcome is returned to the

911
00:33:24,559 --> 00:33:29,039
prover

912
00:33:26,240 --> 00:33:30,640
and in the final step the prover proves

913
00:33:29,039 --> 00:33:33,360
that the encoded outcome indeed

914
00:33:30,640 --> 00:33:34,559
decodes to low energy with respect to

915
00:33:33,360 --> 00:33:37,760
the committed key

916
00:33:34,559 --> 00:33:41,200
k and p does so by engaging in a

917
00:33:37,760 --> 00:33:43,360
zero-knowledge proof for an mp statement

918
00:33:41,200 --> 00:33:45,679
now the question that we we saw in this

919
00:33:43,360 --> 00:33:46,799
work is how can you make this protocol

920
00:33:45,679 --> 00:33:48,559
non-interactive

921
00:33:46,799 --> 00:33:49,840
or at least non-interactive with

922
00:33:48,559 --> 00:33:52,080
possibly

923
00:33:49,840 --> 00:33:54,399
an instance independent pre-processing

924
00:33:52,080 --> 00:33:54,399
step

925
00:33:54,640 --> 00:33:59,039
and so certainly step three can be made

926
00:33:56,799 --> 00:33:59,918
non-interactive by adding a crs to the

927
00:33:59,039 --> 00:34:03,279
setup

928
00:33:59,919 --> 00:34:05,919
and using an easic for np

929
00:34:03,279 --> 00:34:08,079
and the cracks is step two where the

930
00:34:05,919 --> 00:34:09,918
verifier reports the encoded outcome

931
00:34:08,079 --> 00:34:12,000
back to the approver

932
00:34:09,918 --> 00:34:13,520
so the first thought that you might have

933
00:34:12,000 --> 00:34:15,918
is that the approver maybe

934
00:34:13,520 --> 00:34:17,918
actually can predict this outcome so the

935
00:34:15,918 --> 00:34:19,440
verifier doesn't need to send it

936
00:34:17,918 --> 00:34:20,719
the prover can predict it but

937
00:34:19,440 --> 00:34:22,879
unfortunately because of the

938
00:34:20,719 --> 00:34:24,959
requirements of the authentication code

939
00:34:22,879 --> 00:34:26,879
this encoded outcome is sort of

940
00:34:24,960 --> 00:34:27,440
uniformly random out of exponentially

941
00:34:26,879 --> 00:34:28,879
many

942
00:34:27,440 --> 00:34:31,440
so it cannot be predicted and the

943
00:34:28,879 --> 00:34:33,040
approver can't possibly send proofs for

944
00:34:31,440 --> 00:34:34,560
all of these outcomes

945
00:34:33,040 --> 00:34:37,040
and so i'll just tell you here what the

946
00:34:34,560 --> 00:34:40,159
main idea is to make this protocol

947
00:34:37,040 --> 00:34:43,440
non-interactive so the main idea

948
00:34:40,159 --> 00:34:45,359
is to use quantum teleportation

949
00:34:43,440 --> 00:34:46,639
and so as odd as it sounds this will

950
00:34:45,359 --> 00:34:49,119
allow the verifier

951
00:34:46,639 --> 00:34:51,359
to sort of measure the encoded state

952
00:34:49,119 --> 00:34:53,520
before she even receives it

953
00:34:51,359 --> 00:34:54,960
and report the encoded outcome in a

954
00:34:53,520 --> 00:34:57,839
pre-processing step

955
00:34:54,960 --> 00:34:59,760
which is instance independent so the

956
00:34:57,839 --> 00:35:02,720
witness will actually only be teleported

957
00:34:59,760 --> 00:35:04,320
by the approver in the following step

958
00:35:02,720 --> 00:35:06,160
and in order for this teleportation to

959
00:35:04,320 --> 00:35:06,960
be possible the verifier will have to

960
00:35:06,160 --> 00:35:08,799
send

961
00:35:06,960 --> 00:35:10,480
enough epr pairs to the approver in the

962
00:35:08,800 --> 00:35:11,920
pre-processing step

963
00:35:10,480 --> 00:35:14,400
and we also have to make use of

964
00:35:11,920 --> 00:35:16,079
homomorphic encryption and this is why

965
00:35:14,400 --> 00:35:17,920
we end up getting an argument and not

966
00:35:16,079 --> 00:35:19,839
the proof

967
00:35:17,920 --> 00:35:21,040
and one of the catches when one uses

968
00:35:19,839 --> 00:35:23,839
teleportation

969
00:35:21,040 --> 00:35:25,200
is that there are teleportation errors

970
00:35:23,839 --> 00:35:26,480
for those of you who are familiar with

971
00:35:25,200 --> 00:35:28,480
teleportation

972
00:35:26,480 --> 00:35:30,880
however these errors are classical and

973
00:35:28,480 --> 00:35:34,320
they can be accounted for

974
00:35:30,880 --> 00:35:34,320
in the provers nasik

975
00:35:35,359 --> 00:35:38,640
and the last thing that i want to

976
00:35:36,480 --> 00:35:40,480
mention is that in this work we also

977
00:35:38,640 --> 00:35:42,560
separately formalize the notion of

978
00:35:40,480 --> 00:35:44,560
proofs of quantum knowledge

979
00:35:42,560 --> 00:35:46,000
so this is a joint work with broadband

980
00:35:44,560 --> 00:35:48,320
and grillo

981
00:35:46,000 --> 00:35:50,560
it's sort of a quantum analog of proofs

982
00:35:48,320 --> 00:35:52,960
and arguments of quantum knowledge

983
00:35:50,560 --> 00:35:54,480
informally what i mean is that access to

984
00:35:52,960 --> 00:35:57,119
a successful prover

985
00:35:54,480 --> 00:35:59,359
allows to recover a quantum to extract

986
00:35:57,119 --> 00:36:00,960
the quantum weakness

987
00:35:59,359 --> 00:36:02,400
and in particular we showed that our

988
00:36:00,960 --> 00:36:04,079
protocol for qma

989
00:36:02,400 --> 00:36:06,160
is indeed an argument of quantum

990
00:36:04,079 --> 00:36:08,079
knowledge

991
00:36:06,160 --> 00:36:10,960
so this is all that i wanted to share

992
00:36:08,079 --> 00:36:14,160
thank you very much for listening

993
00:36:10,960 --> 00:36:17,839
okay thank you andrea thank you

994
00:36:14,160 --> 00:36:17,839
so do we have any questions from the

995
00:36:24,839 --> 00:36:27,839
audience

996
00:36:34,079 --> 00:36:37,839
so i have a question about the arguments

997
00:36:37,599 --> 00:36:41,760
of

998
00:36:37,839 --> 00:36:44,240
quantum knowledge uh i mean we know

999
00:36:41,760 --> 00:36:45,520
there's quantum known cloning so is this

1000
00:36:44,240 --> 00:36:48,240
protocol

1001
00:36:45,520 --> 00:36:48,960
in some intuitive way ensure that when

1002
00:36:48,240 --> 00:36:52,479
you

1003
00:36:48,960 --> 00:36:55,920
extract a quantum witness then something

1004
00:36:52,480 --> 00:36:59,440
has been consumed from the peruvia so

1005
00:36:55,920 --> 00:37:02,640
like yes running into this kind of

1006
00:36:59,440 --> 00:37:03,359
yeah yeah yeah yeah absolutely so so you

1007
00:37:02,640 --> 00:37:04,319
here you

1008
00:37:03,359 --> 00:37:06,480
i mean you're assuming that the

1009
00:37:04,320 --> 00:37:08,320
extractor has access to

1010
00:37:06,480 --> 00:37:10,240
approver a successful approver so a

1011
00:37:08,320 --> 00:37:13,200
prover that has in particular

1012
00:37:10,240 --> 00:37:14,319
i mean it might have a witness uh in in

1013
00:37:13,200 --> 00:37:15,839
its own register

1014
00:37:14,320 --> 00:37:18,480
so if you have access to a successful

1015
00:37:15,839 --> 00:37:22,799
prover then you're able to

1016
00:37:18,480 --> 00:37:24,480
extract with some probability um

1017
00:37:22,800 --> 00:37:26,160
basically a state it's not actually

1018
00:37:24,480 --> 00:37:28,000
quite the witness but it's kind of a

1019
00:37:26,160 --> 00:37:29,440
little bit degraded even so it's a state

1020
00:37:28,000 --> 00:37:32,640
that passes

1021
00:37:29,440 --> 00:37:35,520
the verification of your um

1022
00:37:32,640 --> 00:37:38,400
your qma circuit uh with with high

1023
00:37:35,520 --> 00:37:41,280
enough probability let's say

1024
00:37:38,400 --> 00:37:41,280
okay thanks

1025
00:37:43,920 --> 00:37:49,119
are there other questions yeah there is

1026
00:37:46,560 --> 00:37:52,720
a question in the chat

1027
00:37:49,119 --> 00:37:55,359
so it's from i'm not sure but

1028
00:37:52,720 --> 00:37:57,040
how to pronounce the name um so there

1029
00:37:55,359 --> 00:37:59,839
are two questions the first one

1030
00:37:57,040 --> 00:38:03,359
is do you know any applications of this

1031
00:37:59,839 --> 00:38:06,320
music for qma protocol

1032
00:38:03,359 --> 00:38:07,839
yeah so so yeah actually this is

1033
00:38:06,320 --> 00:38:10,800
something that we've thought about but

1034
00:38:07,839 --> 00:38:12,560
uh i i don't personally i have not

1035
00:38:10,800 --> 00:38:15,280
personally found like a compelling

1036
00:38:12,560 --> 00:38:18,160
application of music for qma

1037
00:38:15,280 --> 00:38:19,680
uh yet so this is i think an interesting

1038
00:38:18,160 --> 00:38:22,078
open question

1039
00:38:19,680 --> 00:38:23,520
and yeah unfortunately also for the

1040
00:38:22,079 --> 00:38:25,040
second question it's something that it's

1041
00:38:23,520 --> 00:38:26,800
a very good question right

1042
00:38:25,040 --> 00:38:28,720
uh are there any barriers to achieve in

1043
00:38:26,800 --> 00:38:30,400
isix without preprocessing it's also

1044
00:38:28,720 --> 00:38:33,839
something that we thought about

1045
00:38:30,400 --> 00:38:35,839
and unfortunately the particular

1046
00:38:33,839 --> 00:38:36,880
sort of you could call it trick that we

1047
00:38:35,839 --> 00:38:39,520
use here

1048
00:38:36,880 --> 00:38:40,400
um is very dependent on on having epr

1049
00:38:39,520 --> 00:38:42,320
pairs

1050
00:38:40,400 --> 00:38:44,720
so one thing that might be possible

1051
00:38:42,320 --> 00:38:47,280
although i don't have a

1052
00:38:44,720 --> 00:38:49,200
a concrete approach is if you allow a

1053
00:38:47,280 --> 00:38:51,520
setup in which maybe

1054
00:38:49,200 --> 00:38:52,560
um you don't only have a crs but you

1055
00:38:51,520 --> 00:38:54,800
also have

1056
00:38:52,560 --> 00:38:56,160
shared epr pairs so let's say you don't

1057
00:38:54,800 --> 00:38:58,000
have to worry about starting off with

1058
00:38:56,160 --> 00:38:59,680
the pr pairs then maybe

1059
00:38:58,000 --> 00:39:01,839
there there might be a hope but i don't

1060
00:38:59,680 --> 00:39:05,200
have a concrete approach this is

1061
00:39:01,839 --> 00:39:05,200
a very interesting question

1062
00:39:08,480 --> 00:39:15,839
okay thank you any more questions

1063
00:39:18,000 --> 00:39:24,560
then i give the mic back to fun okay

1064
00:39:21,280 --> 00:39:28,240
thanks and thanks andrea and

1065
00:39:24,560 --> 00:39:29,359
i know since this is our last session uh

1066
00:39:28,240 --> 00:39:31,839
are there any questions for

1067
00:39:29,359 --> 00:39:34,799
all any of the previous talks you can

1068
00:39:31,839 --> 00:39:34,799
spend a couple minutes

1069
00:39:36,400 --> 00:39:40,560
or okay well i guess it's probably

1070
00:39:39,680 --> 00:39:44,799
running late

1071
00:39:40,560 --> 00:39:46,400
for people from europe so okay i'll say

1072
00:39:44,800 --> 00:39:48,000
this will be the end of this session

1073
00:39:46,400 --> 00:39:50,720
also today's program

1074
00:39:48,000 --> 00:39:56,480
and let's give all the speakers another

1075
00:39:50,720 --> 00:39:58,078
round of footpaths

1076
00:39:56,480 --> 00:39:59,520
um i just wanted to make a quick

1077
00:39:58,079 --> 00:40:02,480
announcement um

1078
00:39:59,520 --> 00:40:04,800
that thanks to georgia martin we now

1079
00:40:02,480 --> 00:40:06,079
have crypto 2020 swag

1080
00:40:04,800 --> 00:40:08,640
it's something you can download and

1081
00:40:06,079 --> 00:40:11,760
print on your own t-shirt

1082
00:40:08,640 --> 00:40:13,359
if you wish um or on a bag or in a

1083
00:40:11,760 --> 00:40:15,520
sticker on your laptop

1084
00:40:13,359 --> 00:40:16,960
um i'll post the url into the chat and

1085
00:40:15,520 --> 00:40:18,960
also on zulip

1086
00:40:16,960 --> 00:40:21,359
um and if you just go to the main crypto

1087
00:40:18,960 --> 00:40:24,400
2020 page there'll be a link there

1088
00:40:21,359 --> 00:40:26,400
for downloading the files so go

1089
00:40:24,400 --> 00:40:29,200
make your own t-shirts and we'll see

1090
00:40:26,400 --> 00:40:29,200
everybody tomorrow

1091
00:40:36,480 --> 00:40:43,599
okay please order the t-shirts

1092
00:40:40,560 --> 00:40:43,599
see you tomorrow

