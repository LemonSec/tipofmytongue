1
00:00:00,960 --> 00:00:05,120
all right so hello everyone i'm rubin

2
00:00:03,040 --> 00:00:07,200
young today i will talk about how to

3
00:00:05,120 --> 00:00:09,360
construct chlorine resistant

4
00:00:07,200 --> 00:00:10,960
with multiple syndrome functions from

5
00:00:09,360 --> 00:00:15,759
standard assumptions

6
00:00:10,960 --> 00:00:18,080
this is done to work with mahoua you and

7
00:00:15,759 --> 00:00:18,880
so automatic scheme can embed some

8
00:00:18,080 --> 00:00:21,839
information

9
00:00:18,880 --> 00:00:23,599
into a different object without changing

10
00:00:21,840 --> 00:00:26,000
it too much

11
00:00:23,600 --> 00:00:27,439
also it should be hard to remove the

12
00:00:26,000 --> 00:00:30,640
embedded information

13
00:00:27,439 --> 00:00:33,680
in a watermarked object without damaging

14
00:00:30,640 --> 00:00:37,040
it in this talk we focus on

15
00:00:33,680 --> 00:00:38,079
market schemes for programs formally it

16
00:00:37,040 --> 00:00:40,480
consists of

17
00:00:38,079 --> 00:00:41,200
two algorithms namely the marketing

18
00:00:40,480 --> 00:00:44,000
algorithm

19
00:00:41,200 --> 00:00:44,879
and the equation algorithm the marking

20
00:00:44,000 --> 00:00:47,760
algorithm

21
00:00:44,879 --> 00:00:49,039
can embed message into a program with

22
00:00:47,760 --> 00:00:51,599
the marketing key

23
00:00:49,039 --> 00:00:53,360
and the exchange algorithm can extract

24
00:00:51,600 --> 00:00:56,480
the embedded message

25
00:00:53,360 --> 00:00:58,399
from automatic program with an

26
00:00:56,480 --> 00:01:00,879
extraction key

27
00:00:58,399 --> 00:01:02,079
its correctness requires that the

28
00:01:00,879 --> 00:01:04,720
marking algorithm

29
00:01:02,079 --> 00:01:07,520
can roughly preserve the functionality

30
00:01:04,720 --> 00:01:10,479
of the worldwide program

31
00:01:07,520 --> 00:01:12,158
also it requires that the attraction

32
00:01:10,479 --> 00:01:15,439
algorithm can extract

33
00:01:12,159 --> 00:01:19,280
the correct message from from

34
00:01:15,439 --> 00:01:21,919
an honestly watermarked program

35
00:01:19,280 --> 00:01:24,000
its main security requirement is on

36
00:01:21,920 --> 00:01:26,479
removability

37
00:01:24,000 --> 00:01:28,880
which requires that the adversary is not

38
00:01:26,479 --> 00:01:31,439
able to remove or modify

39
00:01:28,880 --> 00:01:32,320
message abandoned in a watermark program

40
00:01:31,439 --> 00:01:36,079
without

41
00:01:32,320 --> 00:01:38,880
significantly changing its functionality

42
00:01:36,079 --> 00:01:39,679
also in practice it is usually desired

43
00:01:38,880 --> 00:01:42,960
to have

44
00:01:39,680 --> 00:01:46,159
unlimited against gluten attacks

45
00:01:42,960 --> 00:01:48,479
that is the attacker can

46
00:01:46,159 --> 00:01:50,159
learn multiple automatic circuits which

47
00:01:48,479 --> 00:01:54,000
are generated by embedding

48
00:01:50,159 --> 00:01:56,320
different messages into the sim program

49
00:01:54,000 --> 00:01:57,600
so this is a basic notion of what

50
00:01:56,320 --> 00:02:00,719
marketing skills

51
00:01:57,600 --> 00:02:03,520
one we hope to have secure circuit board

52
00:02:00,719 --> 00:02:06,880
marketing schemes

53
00:02:03,520 --> 00:02:07,840
for arbitrary programs however as joined

54
00:02:06,880 --> 00:02:11,440
by cocaine

55
00:02:07,840 --> 00:02:14,400
in 2016 know what magnet scheme exists

56
00:02:11,440 --> 00:02:16,560
for learnable functionalities so in the

57
00:02:14,400 --> 00:02:17,599
study of watermarking schemes we only

58
00:02:16,560 --> 00:02:19,840
focus on what makes

59
00:02:17,599 --> 00:02:20,879
watermarking schemes for cryptographic

60
00:02:19,840 --> 00:02:23,680
programs

61
00:02:20,879 --> 00:02:24,799
such as the decryption algorithm of an

62
00:02:23,680 --> 00:02:26,879
equilibrium scheme

63
00:02:24,800 --> 00:02:27,920
the science algorithm our signature

64
00:02:26,879 --> 00:02:30,319
scheme and

65
00:02:27,920 --> 00:02:32,480
the evaluation algorithm our signal

66
00:02:30,319 --> 00:02:34,958
function

67
00:02:32,480 --> 00:02:36,160
so towards constructing circuit

68
00:02:34,959 --> 00:02:39,200
watermarking schemes

69
00:02:36,160 --> 00:02:41,120
for cryptographic programs we already

70
00:02:39,200 --> 00:02:43,760
know how to construct

71
00:02:41,120 --> 00:02:44,400
chlorine resistant watermarking schemes

72
00:02:43,760 --> 00:02:46,799
for

73
00:02:44,400 --> 00:02:47,920
public key primitives from simple

74
00:02:46,800 --> 00:02:51,599
assumptions

75
00:02:47,920 --> 00:02:55,280
such as the existing so one function

76
00:02:51,599 --> 00:02:57,760
and the standard lattice assumptions

77
00:02:55,280 --> 00:02:59,519
but for autonomic schemes for synonym

78
00:02:57,760 --> 00:03:01,760
functions

79
00:02:59,519 --> 00:03:02,800
increased constructions from standard

80
00:03:01,760 --> 00:03:06,000
assumptions

81
00:03:02,800 --> 00:03:06,640
can only achieve a weaker single

82
00:03:06,000 --> 00:03:09,599
challenge

83
00:03:06,640 --> 00:03:10,559
on removability and the only known

84
00:03:09,599 --> 00:03:12,640
including

85
00:03:10,560 --> 00:03:14,000
resistant watermark schemes for

86
00:03:12,640 --> 00:03:16,359
pseudonymous functions

87
00:03:14,000 --> 00:03:20,239
are constructed from

88
00:03:16,360 --> 00:03:20,239
indistinguishability of vasculation

89
00:03:20,480 --> 00:03:25,760
so the question is can we construct

90
00:03:23,599 --> 00:03:29,760
chlorine resistant automatically

91
00:03:25,760 --> 00:03:29,760
functions from standard assumptions

92
00:03:30,239 --> 00:03:33,280
before presenting our solution to this

93
00:03:32,400 --> 00:03:35,360
question

94
00:03:33,280 --> 00:03:37,360
we first recall how watermark both

95
00:03:35,360 --> 00:03:39,440
general functions are constructed

96
00:03:37,360 --> 00:03:40,560
from standard assumptions in previous

97
00:03:39,440 --> 00:03:43,680
works

98
00:03:40,560 --> 00:03:45,840
this is built on a primitive called

99
00:03:43,680 --> 00:03:46,799
constrained serum function roughly

100
00:03:45,840 --> 00:03:49,280
speaking

101
00:03:46,799 --> 00:03:51,120
a constrained string function is a

102
00:03:49,280 --> 00:03:54,319
circular function family

103
00:03:51,120 --> 00:03:58,000
that allows one to derive a constraint k

104
00:03:54,319 --> 00:04:01,359
from a pr key by punching the pfk

105
00:03:58,000 --> 00:04:04,480
on the subset of the input space the

106
00:04:01,360 --> 00:04:06,879
original k and the constrain k evaluate

107
00:04:04,480 --> 00:04:08,560
identically on all inputs outside the

108
00:04:06,879 --> 00:04:11,760
function set

109
00:04:08,560 --> 00:04:15,760
but for input x in the function state

110
00:04:11,760 --> 00:04:19,358
the output of fskx should still be still

111
00:04:15,760 --> 00:04:21,680
random in giving the constraint key

112
00:04:19,358 --> 00:04:22,799
when constructing automatic schemes we

113
00:04:21,680 --> 00:04:25,600
usually require

114
00:04:22,800 --> 00:04:26,240
a privately constrained signal function

115
00:04:25,600 --> 00:04:28,800
which can

116
00:04:26,240 --> 00:04:30,000
hide the functional side from constraint

117
00:04:28,800 --> 00:04:33,600
key

118
00:04:30,000 --> 00:04:34,240
and finally we see that a constriction

119
00:04:33,600 --> 00:04:37,199
function

120
00:04:34,240 --> 00:04:39,040
is coolant resistant if it's security

121
00:04:37,199 --> 00:04:41,600
holds against

122
00:04:39,040 --> 00:04:42,560
those reset kind of t model y

123
00:04:41,600 --> 00:04:46,320
constrained the

124
00:04:42,560 --> 00:04:46,320
case of the same prk

125
00:04:46,800 --> 00:04:52,639
okay so now with a constriction function

126
00:04:50,479 --> 00:04:54,960
we can construct a watermarking scheme

127
00:04:52,639 --> 00:04:57,440
for it

128
00:04:54,960 --> 00:04:58,880
here we start with a mac binding

129
00:04:57,440 --> 00:05:02,000
automatic scheme

130
00:04:58,880 --> 00:05:03,440
which only embeds a mac symbol into a

131
00:05:02,000 --> 00:05:06,000
pfk

132
00:05:03,440 --> 00:05:07,120
so in this scheme the marking algorithm

133
00:05:06,000 --> 00:05:09,680
first generates

134
00:05:07,120 --> 00:05:11,039
a specific input x star with this

135
00:05:09,680 --> 00:05:14,320
marking key

136
00:05:11,039 --> 00:05:18,639
then it punctures the secret key

137
00:05:14,320 --> 00:05:20,960
on x star and to get a constraint key

138
00:05:18,639 --> 00:05:22,320
the watermarked program is just a

139
00:05:20,960 --> 00:05:24,479
circuit that it

140
00:05:22,320 --> 00:05:26,880
evaluates the signal function with the

141
00:05:24,479 --> 00:05:30,639
constraint k

142
00:05:26,880 --> 00:05:33,440
to test if a circuit is what marked

143
00:05:30,639 --> 00:05:35,120
the expression algorithm for also first

144
00:05:33,440 --> 00:05:38,400
generates the specific

145
00:05:35,120 --> 00:05:40,160
input x star then they test if the

146
00:05:38,400 --> 00:05:44,159
circuit is punctured on

147
00:05:40,160 --> 00:05:46,720
extra or not the test is supported by

148
00:05:44,160 --> 00:05:48,560
special properties of the underlying

149
00:05:46,720 --> 00:05:50,400
constraint syndrome function

150
00:05:48,560 --> 00:05:52,479
for example if the underlying

151
00:05:50,400 --> 00:05:54,880
constituent student function

152
00:05:52,479 --> 00:05:57,039
is extractable then the expression

153
00:05:54,880 --> 00:05:58,880
algorithm can extract the original

154
00:05:57,039 --> 00:06:02,560
secret key from the constraints

155
00:05:58,880 --> 00:06:05,120
key with a trapdoor and then it can test

156
00:06:02,560 --> 00:06:07,600
if the circuit is functional on extra

157
00:06:05,120 --> 00:06:08,960
by testing if the circuit and the

158
00:06:07,600 --> 00:06:13,199
original super key

159
00:06:08,960 --> 00:06:15,599
evaluate identically on extra

160
00:06:13,199 --> 00:06:16,400
security also trying scheme comes from

161
00:06:15,600 --> 00:06:18,639
security

162
00:06:16,400 --> 00:06:19,520
of the online constrained student

163
00:06:18,639 --> 00:06:22,240
function

164
00:06:19,520 --> 00:06:23,440
which prevents the velocity from

165
00:06:22,240 --> 00:06:26,000
learning the pump

166
00:06:23,440 --> 00:06:26,719
the function point x star and modifying

167
00:06:26,000 --> 00:06:30,240
this

168
00:06:26,720 --> 00:06:33,280
output of circuit on x dot

169
00:06:30,240 --> 00:06:35,759
okay so this is how the what else

170
00:06:33,280 --> 00:06:37,280
the mac binding automatic scheme works

171
00:06:35,759 --> 00:06:40,319
and based on this

172
00:06:37,280 --> 00:06:44,159
to embed an input message

173
00:06:40,319 --> 00:06:47,199
instead of a mac symbol into the prk

174
00:06:44,160 --> 00:06:48,000
the marking algorithm will encode bits

175
00:06:47,199 --> 00:06:50,479
of the message

176
00:06:48,000 --> 00:06:51,199
into different puncture points in

177
00:06:50,479 --> 00:06:54,000
particular

178
00:06:51,199 --> 00:06:54,800
it can first generate impairs of

179
00:06:54,000 --> 00:07:00,000
specific

180
00:06:54,800 --> 00:07:03,919
inputs and and then it selects

181
00:07:00,000 --> 00:07:04,639
each input from selects one input from

182
00:07:03,919 --> 00:07:07,039
each pair

183
00:07:04,639 --> 00:07:09,520
by using each bit of the message and

184
00:07:07,039 --> 00:07:11,919
then it can puncture the prk

185
00:07:09,520 --> 00:07:13,039
on the selected inputs to get the

186
00:07:11,919 --> 00:07:15,440
constraint k

187
00:07:13,039 --> 00:07:17,440
and the watermarked program is a

188
00:07:15,440 --> 00:07:18,000
circular that evaluates the student

189
00:07:17,440 --> 00:07:21,280
function

190
00:07:18,000 --> 00:07:23,360
with the constraint k to extract

191
00:07:21,280 --> 00:07:26,239
the embedded message from a watermark

192
00:07:23,360 --> 00:07:28,400
circuit the expression algorithm

193
00:07:26,240 --> 00:07:30,080
also first generates these nps or

194
00:07:28,400 --> 00:07:32,239
specific inputs

195
00:07:30,080 --> 00:07:34,400
then it records the eye speed of the

196
00:07:32,240 --> 00:07:38,000
message by testing if the circuit

197
00:07:34,400 --> 00:07:40,799
is functioned on xr0 star or xr1 star

198
00:07:38,000 --> 00:07:42,720
it's that mi to be 0 if the circuit is

199
00:07:40,800 --> 00:07:45,520
functional on xr0 star

200
00:07:42,720 --> 00:07:46,479
and it says mr to be one if the circuit

201
00:07:45,520 --> 00:07:50,159
is functional

202
00:07:46,479 --> 00:07:54,560
xr1 star otherwise it outputs

203
00:07:50,160 --> 00:07:57,440
a simple symbol indicating that

204
00:07:54,560 --> 00:07:58,240
the circuit is not what marked

205
00:07:57,440 --> 00:08:00,800
correctness

206
00:07:58,240 --> 00:08:03,120
and the single key on removability of

207
00:08:00,800 --> 00:08:06,720
the message and binding automatic scheme

208
00:08:03,120 --> 00:08:07,680
come from properties of the online

209
00:08:06,720 --> 00:08:10,000
constraints

210
00:08:07,680 --> 00:08:10,720
function just as in the case of my

211
00:08:10,000 --> 00:08:13,919
combination

212
00:08:10,720 --> 00:08:18,240
automatic scheme but the scheme is not

213
00:08:13,919 --> 00:08:20,400
plural resistant to this recall that

214
00:08:18,240 --> 00:08:21,520
a clearing attacker for the automatic

215
00:08:20,400 --> 00:08:24,080
scheme can

216
00:08:21,520 --> 00:08:25,280
obtain multiple automaker circuits which

217
00:08:24,080 --> 00:08:27,359
are generated by

218
00:08:25,280 --> 00:08:29,520
inventing different messages into sim

219
00:08:27,360 --> 00:08:31,199
pfk

220
00:08:29,520 --> 00:08:32,880
since the embedded messages are

221
00:08:31,199 --> 00:08:35,760
different the function set

222
00:08:32,880 --> 00:08:37,120
and thus the control system and the

223
00:08:35,760 --> 00:08:40,718
constraint keys

224
00:08:37,120 --> 00:08:44,080
are also different so the adversary can

225
00:08:40,719 --> 00:08:45,120
in fact learn multiple customer keys of

226
00:08:44,080 --> 00:08:48,480
the cprk

227
00:08:45,120 --> 00:08:49,040
from the watermark circuit that is to

228
00:08:48,480 --> 00:08:52,560
say

229
00:08:49,040 --> 00:08:55,839
to guaranteeing chlorine resistant

230
00:08:52,560 --> 00:08:57,839
unlimited of the automatic scheme

231
00:08:55,839 --> 00:08:59,519
we require that the underlying

232
00:08:57,839 --> 00:09:03,519
constraints general function

233
00:08:59,519 --> 00:09:06,240
should also be chlorine resistant

234
00:09:03,519 --> 00:09:08,640
however in our previous constructions of

235
00:09:06,240 --> 00:09:11,680
watermarking schemes or what microsoft

236
00:09:08,640 --> 00:09:14,800
functions from standard assumptions

237
00:09:11,680 --> 00:09:18,399
the construction functions used are not

238
00:09:14,800 --> 00:09:22,240
clone resistant universe

239
00:09:18,399 --> 00:09:24,320
as shown by kennedy and chain 2017

240
00:09:22,240 --> 00:09:25,839
colluding resistant privately

241
00:09:24,320 --> 00:09:27,680
constitutional function

242
00:09:25,839 --> 00:09:29,680
implies indistinguishability of

243
00:09:27,680 --> 00:09:31,519
fasciculation

244
00:09:29,680 --> 00:09:33,359
since privately constitutional

245
00:09:31,519 --> 00:09:35,279
functioning is essential in most

246
00:09:33,360 --> 00:09:36,160
constructions or whatever consumer

247
00:09:35,279 --> 00:09:39,279
functions

248
00:09:36,160 --> 00:09:41,600
it seems impossible to construct

249
00:09:39,279 --> 00:09:45,439
chlorine resistant with markbox

250
00:09:41,600 --> 00:09:45,440
functions from standard assumptions

251
00:09:45,680 --> 00:09:51,120
so in this work we the time to

252
00:09:49,040 --> 00:09:52,480
overcome this barrier in another

253
00:09:51,120 --> 00:09:55,120
direction that is

254
00:09:52,480 --> 00:09:57,360
we will try to construct gluten

255
00:09:55,120 --> 00:10:00,160
resistant old mucosal functions

256
00:09:57,360 --> 00:10:02,079
from single key circular constitutional

257
00:10:00,160 --> 00:10:06,240
functions

258
00:10:02,079 --> 00:10:08,399
okay so our key idea is to

259
00:10:06,240 --> 00:10:09,680
encode the phase of the message into

260
00:10:08,399 --> 00:10:11,920
different sql keys

261
00:10:09,680 --> 00:10:14,000
instead of including them into different

262
00:10:11,920 --> 00:10:16,880
function points

263
00:10:14,000 --> 00:10:18,240
uh so in more detail our what markable

264
00:10:16,880 --> 00:10:21,360
student function

265
00:10:18,240 --> 00:10:22,240
is a repetition of n construction

266
00:10:21,360 --> 00:10:25,120
functions

267
00:10:22,240 --> 00:10:25,839
and the secret key of the waterpark both

268
00:10:25,120 --> 00:10:27,920
function

269
00:10:25,839 --> 00:10:28,880
consists of insecurities of the

270
00:10:27,920 --> 00:10:32,000
underlying

271
00:10:28,880 --> 00:10:32,880
constrained student function the marking

272
00:10:32,000 --> 00:10:37,360
algorithm

273
00:10:32,880 --> 00:10:41,200
first generates nps or specific inputs

274
00:10:37,360 --> 00:10:44,240
then it selects one input from each pair

275
00:10:41,200 --> 00:10:48,160
using one bit of the message and

276
00:10:44,240 --> 00:10:51,360
then it punctures the ice secret key

277
00:10:48,160 --> 00:10:53,920
on xr mr star the

278
00:10:51,360 --> 00:10:55,200
watermarked program is a circuit that

279
00:10:53,920 --> 00:10:58,800
evaluates with

280
00:10:55,200 --> 00:11:00,959
all these n constraint keys to extract

281
00:10:58,800 --> 00:11:02,000
the embedded message from a watermarked

282
00:11:00,959 --> 00:11:04,800
circulator

283
00:11:02,000 --> 00:11:05,600
the extraction organism also also first

284
00:11:04,800 --> 00:11:08,880
generates

285
00:11:05,600 --> 00:11:11,440
these impairs of specific inputs then

286
00:11:08,880 --> 00:11:12,560
it requires the eye speed of the message

287
00:11:11,440 --> 00:11:16,000
by testing if

288
00:11:12,560 --> 00:11:17,760
the circuit is if the ice part of

289
00:11:16,000 --> 00:11:20,640
circuit

290
00:11:17,760 --> 00:11:21,200
which evaluates with the ice constraint

291
00:11:20,640 --> 00:11:24,160
k

292
00:11:21,200 --> 00:11:25,200
is functioned on extra zero star or x y

293
00:11:24,160 --> 00:11:28,719
star

294
00:11:25,200 --> 00:11:29,360
it says rmi to be one if the circuit is

295
00:11:28,720 --> 00:11:32,560
functional

296
00:11:29,360 --> 00:11:36,079
x i y star and it says i might be zero

297
00:11:32,560 --> 00:11:38,719
otherwise to see what

298
00:11:36,079 --> 00:11:39,120
square security can be guaranteed by our

299
00:11:38,720 --> 00:11:42,720
first

300
00:11:39,120 --> 00:11:45,760
solution we consider a simplified

301
00:11:42,720 --> 00:11:49,120
example that n equals three and

302
00:11:45,760 --> 00:11:49,680
those three is only able to obtain two

303
00:11:49,120 --> 00:11:51,440
automatic

304
00:11:49,680 --> 00:11:54,839
circuits which are embedded with

305
00:11:51,440 --> 00:11:56,800
messages 101 and 110

306
00:11:54,839 --> 00:11:59,519
respectively

307
00:11:56,800 --> 00:12:00,079
the adversary is able to learn three

308
00:11:59,519 --> 00:12:02,800
pairs

309
00:12:00,079 --> 00:12:04,000
of constraint case from the automatic

310
00:12:02,800 --> 00:12:06,160
circuit

311
00:12:04,000 --> 00:12:07,200
and for the first pair of constraint

312
00:12:06,160 --> 00:12:10,160
keys

313
00:12:07,200 --> 00:12:11,360
the both of them are generated by

314
00:12:10,160 --> 00:12:14,719
function as k1

315
00:12:11,360 --> 00:12:15,600
on x1 star since the puncture points are

316
00:12:14,720 --> 00:12:18,720
the same

317
00:12:15,600 --> 00:12:22,560
the constraint keys are also identical

318
00:12:18,720 --> 00:12:25,839
so the rosary is only able to obtain

319
00:12:22,560 --> 00:12:27,920
one constraint case of sk1 then by

320
00:12:25,839 --> 00:12:29,519
single key security of the online

321
00:12:27,920 --> 00:12:32,800
customization function

322
00:12:29,519 --> 00:12:38,480
the base one embedded in sql should

323
00:12:32,800 --> 00:12:41,599
can't be removed or modified by the r3

324
00:12:38,480 --> 00:12:42,399
however for sk2 and sk3 since they will

325
00:12:41,600 --> 00:12:45,440
be punctured

326
00:12:42,399 --> 00:12:47,920
on different inputs so

327
00:12:45,440 --> 00:12:48,800
the adversary can still obtain more than

328
00:12:47,920 --> 00:12:51,680
one

329
00:12:48,800 --> 00:12:52,319
constrained versions of them that is to

330
00:12:51,680 --> 00:12:54,880
say

331
00:12:52,320 --> 00:12:55,680
the single key security of the online

332
00:12:54,880 --> 00:12:58,880
construction

333
00:12:55,680 --> 00:13:02,880
function uh does not uh

334
00:12:58,880 --> 00:13:05,439
cut counter restrict the losses here

335
00:13:02,880 --> 00:13:06,560
so the adultery is still able to remove

336
00:13:05,440 --> 00:13:09,680
or modify

337
00:13:06,560 --> 00:13:12,319
bits and binding sp2 and sk3

338
00:13:09,680 --> 00:13:13,599
so to summarize here in our first

339
00:13:12,320 --> 00:13:17,040
construction

340
00:13:13,600 --> 00:13:19,839
the rosary is not able to modify

341
00:13:17,040 --> 00:13:22,160
bits at a position if all messengers

342
00:13:19,839 --> 00:13:25,200
agree on this position

343
00:13:22,160 --> 00:13:27,920
but it can still modify with any other

344
00:13:25,200 --> 00:13:27,920
positions

345
00:13:28,639 --> 00:13:32,639
so our first construction can only

346
00:13:32,160 --> 00:13:37,279
achieve

347
00:13:32,639 --> 00:13:39,760
a weak secure guarantee and to upgrade

348
00:13:37,279 --> 00:13:42,079
this week's cycle guaranteeing to

349
00:13:39,760 --> 00:13:45,279
colonial resistance on renewability

350
00:13:42,079 --> 00:13:47,439
we use a fingerprint code here we

351
00:13:45,279 --> 00:13:49,279
describe the notion of fingerprint code

352
00:13:47,440 --> 00:13:52,480
in a slightly different way

353
00:13:49,279 --> 00:13:53,199
for use of explanation so roughly

354
00:13:52,480 --> 00:13:55,440
speaking

355
00:13:53,199 --> 00:13:56,319
a fingerprint code consists of two

356
00:13:55,440 --> 00:13:57,920
algorithms

357
00:13:56,320 --> 00:13:59,360
namely the encoding algorithm and the

358
00:13:57,920 --> 00:14:01,839
declining result

359
00:13:59,360 --> 00:14:04,320
the encoding algorithm can encode a

360
00:14:01,839 --> 00:14:06,320
message into a code word with a trapdoor

361
00:14:04,320 --> 00:14:08,480
and the declinableism can declare the

362
00:14:06,320 --> 00:14:11,040
color to recover the orange message with

363
00:14:08,480 --> 00:14:14,079
the same chapter

364
00:14:11,040 --> 00:14:16,399
its security requires that

365
00:14:14,079 --> 00:14:18,160
giving multiple code words which are

366
00:14:16,399 --> 00:14:20,880
generated by including different

367
00:14:18,160 --> 00:14:22,240
different messages the adversary is not

368
00:14:20,880 --> 00:14:24,800
able to

369
00:14:22,240 --> 00:14:26,959
create a string that equals to a new

370
00:14:24,800 --> 00:14:29,439
message

371
00:14:26,959 --> 00:14:31,119
of course we should restrict the

372
00:14:29,440 --> 00:14:34,720
groceries ability

373
00:14:31,120 --> 00:14:38,079
in generating the stream

374
00:14:34,720 --> 00:14:41,760
so here we request that

375
00:14:38,079 --> 00:14:44,560
the adultery is not allowed to modify

376
00:14:41,760 --> 00:14:46,639
bait at a position if all cold wars

377
00:14:44,560 --> 00:14:50,079
agree on this position

378
00:14:46,639 --> 00:14:53,440
for example if the adultery can receive

379
00:14:50,079 --> 00:14:56,638
took the words 101 and 110 then

380
00:14:53,440 --> 00:14:59,040
it is not allowed to submit

381
00:14:56,639 --> 00:14:59,680
a string double star such that double

382
00:14:59,040 --> 00:15:02,719
star y

383
00:14:59,680 --> 00:15:05,279
equals zero this is called the marking

384
00:15:02,720 --> 00:15:05,279
assumption

385
00:15:05,360 --> 00:15:09,199
so now with a fingerprint code we can

386
00:15:08,560 --> 00:15:13,040
upgrade

387
00:15:09,199 --> 00:15:16,319
our first construction to achieve

388
00:15:13,040 --> 00:15:18,800
chlorine resistant or removability

389
00:15:16,320 --> 00:15:20,320
so in our second construction the

390
00:15:18,800 --> 00:15:24,000
marking algorithm

391
00:15:20,320 --> 00:15:24,880
first encodes the message into a good

392
00:15:24,000 --> 00:15:28,240
word

393
00:15:24,880 --> 00:15:31,759
saying it embeds the codewords into npr

394
00:15:28,240 --> 00:15:33,519
case just using the

395
00:15:31,759 --> 00:15:35,279
marking algorithm of our first

396
00:15:33,519 --> 00:15:38,480
construction

397
00:15:35,279 --> 00:15:40,480
to extract the embedded message from a

398
00:15:38,480 --> 00:15:42,320
automatic circuit the extraction

399
00:15:40,480 --> 00:15:45,360
algorithm

400
00:15:42,320 --> 00:15:48,079
also first uh recover the

401
00:15:45,360 --> 00:15:48,959
codeword from the automarketer uh

402
00:15:48,079 --> 00:15:52,079
circuit

403
00:15:48,959 --> 00:15:56,399
as before then it decodes the

404
00:15:52,079 --> 00:15:58,800
codeword two the ongoing message

405
00:15:56,399 --> 00:15:59,440
security of our second construction

406
00:15:58,800 --> 00:16:02,079
comes from

407
00:15:59,440 --> 00:16:04,880
security of our first construction and

408
00:16:02,079 --> 00:16:07,599
the security of the fingerprint code

409
00:16:04,880 --> 00:16:08,639
first security of our first construction

410
00:16:07,600 --> 00:16:12,399
can

411
00:16:08,639 --> 00:16:13,199
uh ensure that those three is not able

412
00:16:12,399 --> 00:16:16,399
to

413
00:16:13,199 --> 00:16:19,120
modify bit at a position if all code

414
00:16:16,399 --> 00:16:22,399
words agree on this position

415
00:16:19,120 --> 00:16:25,120
this is exactly the marking assumption

416
00:16:22,399 --> 00:16:26,880
then by security of the fingerprint code

417
00:16:25,120 --> 00:16:27,440
the declining algorithm can still

418
00:16:26,880 --> 00:16:30,560
require

419
00:16:27,440 --> 00:16:32,880
one of the embedded messages and then

420
00:16:30,560 --> 00:16:35,359
the column resistance orientation

421
00:16:32,880 --> 00:16:35,360
follows

422
00:16:35,680 --> 00:16:42,800
so this is our second construction and

423
00:16:39,279 --> 00:16:45,120
why it is chlorine resistant on

424
00:16:42,800 --> 00:16:45,920
bond removal note that in the

425
00:16:45,120 --> 00:16:49,040
construction

426
00:16:45,920 --> 00:16:50,160
and the screw proof we don't rely on

427
00:16:49,040 --> 00:16:52,319
concrete properties

428
00:16:50,160 --> 00:16:53,439
of the underlying constraints durable

429
00:16:52,320 --> 00:16:56,399
function

430
00:16:53,440 --> 00:16:58,320
and it is safe to replace it with any

431
00:16:56,399 --> 00:17:01,680
single key circuit with macbook

432
00:16:58,320 --> 00:17:04,319
function so

433
00:17:01,680 --> 00:17:05,359
our construction in fact provides a

434
00:17:04,319 --> 00:17:08,240
compiler

435
00:17:05,359 --> 00:17:09,839
that up upgrade a single key circuit

436
00:17:08,240 --> 00:17:13,120
much more strong function

437
00:17:09,839 --> 00:17:16,399
into a column resist one

438
00:17:13,119 --> 00:17:17,119
all right so this is our basic idea on

439
00:17:16,400 --> 00:17:19,360
how to

440
00:17:17,119 --> 00:17:20,559
construct balloon resistant or multiple

441
00:17:19,359 --> 00:17:23,119
stream function

442
00:17:20,559 --> 00:17:25,199
from standard assumptions we also

443
00:17:23,119 --> 00:17:25,839
maintain our basic construction to

444
00:17:25,199 --> 00:17:29,120
achieve

445
00:17:25,839 --> 00:17:30,399
a strong vulnerability this is built on

446
00:17:29,120 --> 00:17:32,159
several new ideas

447
00:17:30,400 --> 00:17:33,520
including a new construction of

448
00:17:32,160 --> 00:17:36,160
fingerprint code

449
00:17:33,520 --> 00:17:37,679
which achieves a stronger security

450
00:17:36,160 --> 00:17:40,400
guarantee

451
00:17:37,679 --> 00:17:41,520
also we consider another security

452
00:17:40,400 --> 00:17:43,760
property

453
00:17:41,520 --> 00:17:45,200
called affordability for automatic

454
00:17:43,760 --> 00:17:47,679
schemes

455
00:17:45,200 --> 00:17:51,280
for unfortunately requested request that

456
00:17:47,679 --> 00:17:53,600
the adultery is not able to creating

457
00:17:51,280 --> 00:17:55,120
new watermark circuits without the

458
00:17:53,600 --> 00:17:57,678
marking key

459
00:17:55,120 --> 00:17:58,479
and in this work we provide a new

460
00:17:57,679 --> 00:18:01,520
framework

461
00:17:58,480 --> 00:18:03,600
that adds strong affordability to

462
00:18:01,520 --> 00:18:04,960
watermarking schemes without this school

463
00:18:03,600 --> 00:18:07,280
property

464
00:18:04,960 --> 00:18:10,000
for some reason we are not able to cover

465
00:18:07,280 --> 00:18:12,840
all these technical details in this talk

466
00:18:10,000 --> 00:18:14,559
and produce the our food people for more

467
00:18:12,840 --> 00:18:18,000
details

468
00:18:14,559 --> 00:18:21,280
so now to conclude in this work we

469
00:18:18,000 --> 00:18:22,160
provide a general construct a general

470
00:18:21,280 --> 00:18:25,120
construction

471
00:18:22,160 --> 00:18:26,840
that transforms a single key circular

472
00:18:25,120 --> 00:18:30,080
water parking schemes

473
00:18:26,840 --> 00:18:33,918
for similar functions into occlusion

474
00:18:30,080 --> 00:18:36,720
one by applying our transformation

475
00:18:33,919 --> 00:18:38,799
to existing constructions of single key

476
00:18:36,720 --> 00:18:43,360
circular automotive functions

477
00:18:38,799 --> 00:18:46,400
from standard assumptions we obtain

478
00:18:43,360 --> 00:18:48,719
several standard assumption based

479
00:18:46,400 --> 00:18:49,600
column resistant or multiple signal

480
00:18:48,720 --> 00:18:52,960
functions

481
00:18:49,600 --> 00:18:55,120
with wireless security guarantees

482
00:18:52,960 --> 00:18:58,080
the new schemes can roughly preserve

483
00:18:55,120 --> 00:19:01,678
security properties of the online scheme

484
00:18:58,080 --> 00:19:04,879
and they can achieve affordability

485
00:19:01,679 --> 00:19:07,760
for free however

486
00:19:04,880 --> 00:19:11,200
the new schemes can only achieve on

487
00:19:07,760 --> 00:19:13,600
reliability with bond electron queries

488
00:19:11,200 --> 00:19:14,720
even if the original scheme can achieve

489
00:19:13,600 --> 00:19:17,760
already with

490
00:19:14,720 --> 00:19:19,280
unbounded exchange queries it is an

491
00:19:17,760 --> 00:19:22,640
interesting open problem

492
00:19:19,280 --> 00:19:25,760
to see how to remove the strip this

493
00:19:22,640 --> 00:19:27,760
restriction in our construction

494
00:19:25,760 --> 00:19:29,760
another issue of our construction is

495
00:19:27,760 --> 00:19:32,960
that it only supports

496
00:19:29,760 --> 00:19:36,559
a polynomially large massive space and

497
00:19:32,960 --> 00:19:39,120
it's an interesting future work to see

498
00:19:36,559 --> 00:19:41,200
if we can construct chlorine resistant

499
00:19:39,120 --> 00:19:43,360
automatically suddenly functions with

500
00:19:41,200 --> 00:19:46,559
exponentially large massive message

501
00:19:43,360 --> 00:19:51,360
space from standard subjects

502
00:19:46,559 --> 00:19:51,360
so that's all thanks for attention

