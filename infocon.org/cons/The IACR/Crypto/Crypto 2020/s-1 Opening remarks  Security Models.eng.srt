1
00:00:06,640 --> 00:00:11,120
kevin can you tell me if you could see

2
00:00:08,240 --> 00:00:11,120
my screen

3
00:00:15,839 --> 00:00:19,039
i know i'm not kevin but yes yeah okay

4
00:00:18,720 --> 00:00:22,240
good

5
00:00:19,039 --> 00:00:22,240
i couldn't find my mouse

6
00:00:24,000 --> 00:00:28,480
all right um welcome everybody to crypto

7
00:00:26,320 --> 00:00:32,000
2020 i'm leo razon

8
00:00:28,480 --> 00:00:33,840
the general chair um first thing

9
00:00:32,000 --> 00:00:35,280
i'm sure you want to know is how many of

10
00:00:33,840 --> 00:00:39,040
you there are

11
00:00:35,280 --> 00:00:42,239
uh we have over 1100 registrations

12
00:00:39,040 --> 00:00:44,960
um the previous record is 641

13
00:00:42,239 --> 00:00:47,199
in 2018 virtual conferences get more

14
00:00:44,960 --> 00:00:52,640
attendance

15
00:00:47,200 --> 00:00:52,640
i organize things roughly by time zone

16
00:00:53,600 --> 00:00:58,879
to let you see

17
00:00:56,960 --> 00:01:00,800
how inconvenient the conference is for

18
00:00:58,879 --> 00:01:04,080
some of you um

19
00:01:00,800 --> 00:01:07,360
and uh 41 are

20
00:01:04,080 --> 00:01:09,119
pretty much reasonable uh 43 are not too

21
00:01:07,360 --> 00:01:11,200
bad and 16

22
00:01:09,119 --> 00:01:14,000
mostly in asia are suffering through

23
00:01:11,200 --> 00:01:14,000
ungodly hours

24
00:01:14,640 --> 00:01:19,280
and to make you feel better asia crypt

25
00:01:17,439 --> 00:01:23,919
will be in a much better time zone

26
00:01:19,280 --> 00:01:23,920
for those of you located in the east

27
00:01:25,119 --> 00:01:30,640
compared to the first crypto in 81

28
00:01:28,560 --> 00:01:32,400
we have over tenfold growth for those of

29
00:01:30,640 --> 00:01:36,560
you who want to visual

30
00:01:32,400 --> 00:01:36,560
here it is um

31
00:01:37,520 --> 00:01:41,439
and that proves that we don't just go

32
00:01:39,119 --> 00:01:42,399
for the beach i'm very glad to see you

33
00:01:41,439 --> 00:01:45,758
all here

34
00:01:42,399 --> 00:01:49,119
even if there's no perfect weather

35
00:01:45,759 --> 00:01:50,479
to uh to bring us together um i have

36
00:01:49,119 --> 00:01:53,680
many people to thank

37
00:01:50,479 --> 00:01:54,320
for organizing this conference sophia

38
00:01:53,680 --> 00:01:57,119
akubov

39
00:01:54,320 --> 00:01:58,960
was my co-conspirator in the whole thing

40
00:01:57,119 --> 00:02:02,000
and pretty much the only reason i

41
00:01:58,960 --> 00:02:04,639
accepted this job in 2018 when i was

42
00:02:02,000 --> 00:02:06,479
asked is that she was excited to help me

43
00:02:04,640 --> 00:02:07,680
and she was there helping out every step

44
00:02:06,479 --> 00:02:08,800
of the way from planning for the

45
00:02:07,680 --> 00:02:13,599
physical event

46
00:02:08,800 --> 00:02:13,599
to pivoting for the virtual one um

47
00:02:13,760 --> 00:02:17,760
kevin mccurley and k mckelly are our

48
00:02:15,840 --> 00:02:19,360
virtual conference team

49
00:02:17,760 --> 00:02:21,040
they provided the vision for the virtual

50
00:02:19,360 --> 00:02:22,480
event with many iterations and

51
00:02:21,040 --> 00:02:24,799
improvements

52
00:02:22,480 --> 00:02:26,399
they did so many technical and

53
00:02:24,800 --> 00:02:28,160
non-technical things for this conference

54
00:02:26,400 --> 00:02:29,360
you have no idea

55
00:02:28,160 --> 00:02:31,280
there was tech development there was

56
00:02:29,360 --> 00:02:32,000
support there was training there was

57
00:02:31,280 --> 00:02:33,519
vision

58
00:02:32,000 --> 00:02:35,200
and i really appreciate everything

59
00:02:33,519 --> 00:02:38,480
they've done

60
00:02:35,200 --> 00:02:40,480
the iacr board has been very helpful

61
00:02:38,480 --> 00:02:42,480
um especially michelle abdullah brian

62
00:02:40,480 --> 00:02:44,319
lamachi and douglas stabila have

63
00:02:42,480 --> 00:02:45,760
communicated with me and helped on short

64
00:02:44,319 --> 00:02:48,720
notice as needed

65
00:02:45,760 --> 00:02:50,480
uh the iacr emergency committee and

66
00:02:48,720 --> 00:02:51,519
organizers of the virtual eurocrypt and

67
00:02:50,480 --> 00:02:53,040
pkc

68
00:02:51,519 --> 00:02:55,440
have been very helpful and here i have

69
00:02:53,040 --> 00:02:58,239
to thank masa

70
00:02:55,440 --> 00:02:58,959
jiango shai halevi park panil peter

71
00:02:58,239 --> 00:03:01,200
schwab and

72
00:02:58,959 --> 00:03:02,840
jung in particular but all those not

73
00:03:01,200 --> 00:03:05,839
mentioned as well

74
00:03:02,840 --> 00:03:05,840
um

75
00:03:07,120 --> 00:03:11,680
the organizers and chairs of crypto

76
00:03:11,760 --> 00:03:16,399
2019 and 2018 have been extremely

77
00:03:13,680 --> 00:03:16,400
helpful as well

78
00:03:16,959 --> 00:03:21,200
and organizers of the previous 39

79
00:03:19,120 --> 00:03:23,519
cryptos really um are the people who got

80
00:03:21,200 --> 00:03:25,280
us where we are right now

81
00:03:23,519 --> 00:03:28,080
whitney morris and erica mcdonald of

82
00:03:25,280 --> 00:03:30,799
ucsb who are waiting for us

83
00:03:28,080 --> 00:03:31,280
for 2021 have been also extremely

84
00:03:30,799 --> 00:03:32,959
helpful

85
00:03:31,280 --> 00:03:34,319
in starting the planning being flexible

86
00:03:32,959 --> 00:03:37,280
with cancellation

87
00:03:34,319 --> 00:03:39,119
and agreeing to weight and we have many

88
00:03:37,280 --> 00:03:40,239
sponsors whom i'd like to thank as well

89
00:03:39,120 --> 00:03:42,319
they are the reason that the

90
00:03:40,239 --> 00:03:45,440
registration fees are so low uh

91
00:03:42,319 --> 00:03:48,640
cloudflare concordium fujitsu io hk

92
00:03:45,440 --> 00:03:52,079
entity research starkware ibm jpmorgan

93
00:03:48,640 --> 00:03:53,839
and google um

94
00:03:52,080 --> 00:03:55,599
i wanted to tell you how to enjoy the

95
00:03:53,840 --> 00:03:57,599
program of crypto 2020.

96
00:03:55,599 --> 00:03:59,439
um you if you hear you've probably

97
00:03:57,599 --> 00:04:01,119
already found

98
00:03:59,439 --> 00:04:02,720
the way to the program that is your

99
00:04:01,120 --> 00:04:05,760
starting point for everything that's

100
00:04:02,720 --> 00:04:05,760
going to happen at the conference

101
00:04:06,080 --> 00:04:12,159
the zoom rooms are going to be

102
00:04:09,840 --> 00:04:13,120
live sessions of five minutes talk per

103
00:04:12,159 --> 00:04:15,040
paper plus

104
00:04:13,120 --> 00:04:16,478
time for q a good amount of time for q a

105
00:04:15,040 --> 00:04:18,320
in fact

106
00:04:16,478 --> 00:04:20,079
in case of overflow in case you cannot

107
00:04:18,320 --> 00:04:23,120
get into the zoom room

108
00:04:20,079 --> 00:04:28,080
go to the iacr channel on youtube and

109
00:04:23,120 --> 00:04:30,080
you will get a live stream there

110
00:04:28,080 --> 00:04:31,359
um we are trying to be social and to

111
00:04:30,080 --> 00:04:33,199
replicate some of the conference

112
00:04:31,360 --> 00:04:35,120
experience so please join the chat

113
00:04:33,199 --> 00:04:36,479
it's a chat system similar to slack

114
00:04:35,120 --> 00:04:39,759
called zulip

115
00:04:36,479 --> 00:04:41,280
um and register and participate

116
00:04:39,759 --> 00:04:43,280
if you already joined the ihr's iacrs

117
00:04:41,280 --> 00:04:45,280
zoop during eurocrypto bkc

118
00:04:43,280 --> 00:04:46,799
it should already work for you um else

119
00:04:45,280 --> 00:04:48,400
you will need to create an account start

120
00:04:46,800 --> 00:04:50,400
by clicking chat on the program

121
00:04:48,400 --> 00:04:52,719
account creation takes some time you

122
00:04:50,400 --> 00:04:54,239
need to get an email so started early

123
00:04:52,720 --> 00:04:56,240
we've been having a bit of trouble

124
00:04:54,240 --> 00:04:58,479
getting emails over to

125
00:04:56,240 --> 00:04:59,919
gmail from the iacr it does seem to work

126
00:04:58,479 --> 00:05:01,280
but it has some delays

127
00:04:59,919 --> 00:05:03,359
if you have a non-gmail account it might

128
00:05:01,280 --> 00:05:05,840
work better

129
00:05:03,360 --> 00:05:07,360
and ask your questions that's where we

130
00:05:05,840 --> 00:05:08,960
prefer for q a

131
00:05:07,360 --> 00:05:10,560
to happen although it can also happen in

132
00:05:08,960 --> 00:05:12,000
zoom but in zulip

133
00:05:10,560 --> 00:05:14,400
people can answer in writing it doesn't

134
00:05:12,000 --> 00:05:16,800
disappear right after

135
00:05:14,400 --> 00:05:18,479
zoom is over and if you ask in the

136
00:05:16,800 --> 00:05:20,320
correct stream and topic which is where

137
00:05:18,479 --> 00:05:23,440
the chat links take you

138
00:05:20,320 --> 00:05:26,320
you will be able to participate that's

139
00:05:23,440 --> 00:05:26,320
what zulup looks like

140
00:05:26,800 --> 00:05:30,720
um now what else should you do if you

141
00:05:30,000 --> 00:05:32,560
have time

142
00:05:30,720 --> 00:05:33,919
watch the longer minute versions of the

143
00:05:32,560 --> 00:05:35,360
talks on youtube they're more like the

144
00:05:33,919 --> 00:05:36,960
conference stocks you used to about 20

145
00:05:35,360 --> 00:05:38,720
minutes

146
00:05:36,960 --> 00:05:40,000
and you can read the papers by clicking

147
00:05:38,720 --> 00:05:42,160
on the paper link

148
00:05:40,000 --> 00:05:44,000
um there's a bit of a cookie issue with

149
00:05:42,160 --> 00:05:45,520
springer every conference participant

150
00:05:44,000 --> 00:05:47,600
gets the paper links for free during the

151
00:05:45,520 --> 00:05:50,000
conference but you first need to click

152
00:05:47,600 --> 00:05:51,280
on a volume at the top of a page to make

153
00:05:50,000 --> 00:05:54,560
it happen there are instructions on the

154
00:05:51,280 --> 00:05:54,559
program page please read them

155
00:05:54,960 --> 00:05:58,479
for the technical program i have to

156
00:05:56,720 --> 00:06:00,400
thank danielle machancho tom riston part

157
00:05:58,479 --> 00:06:01,520
the program co-chairs who've had to deal

158
00:06:00,400 --> 00:06:03,520
with a very

159
00:06:01,520 --> 00:06:04,799
difficult situation of the pc that was

160
00:06:03,520 --> 00:06:06,719
grappling with sudden stay at home

161
00:06:04,800 --> 00:06:09,039
orders and no school issues

162
00:06:06,720 --> 00:06:10,800
due to covid and they really helped me

163
00:06:09,039 --> 00:06:12,400
also in organizing the virtual event and

164
00:06:10,800 --> 00:06:14,080
of course the authors speakers

165
00:06:12,400 --> 00:06:15,840
pc members and you the participants are

166
00:06:14,080 --> 00:06:19,198
what make the technical program

167
00:06:15,840 --> 00:06:22,318
happen we will have

168
00:06:19,199 --> 00:06:24,720
we already in fact had affiliated events

169
00:06:22,319 --> 00:06:26,080
um we had four of them on saturday and

170
00:06:24,720 --> 00:06:26,720
sunday at least in some parts of the

171
00:06:26,080 --> 00:06:28,479
world

172
00:06:26,720 --> 00:06:30,400
for those i have to thank alison bishop

173
00:06:28,479 --> 00:06:32,840
daniel benarocht and craig lapois

174
00:06:30,400 --> 00:06:35,840
gilada sharif raphael ostrovsky and

175
00:06:32,840 --> 00:06:35,840
digitally

176
00:06:36,400 --> 00:06:40,960
if you miss the affiliated events um you

177
00:06:39,199 --> 00:06:42,000
can still catch them on youtube the iacr

178
00:06:40,960 --> 00:06:43,758
channel will

179
00:06:42,000 --> 00:06:46,000
host all the videos if they're not there

180
00:06:43,759 --> 00:06:47,360
yet they will appear and for organizing

181
00:06:46,000 --> 00:06:48,560
the affiliate events i have to thank

182
00:06:47,360 --> 00:06:52,319
karmit hazai

183
00:06:48,560 --> 00:06:52,319
my affiliated events chair

184
00:06:52,800 --> 00:06:58,639
we will also have a ramp session it's

185
00:06:55,759 --> 00:07:00,639
going to be tomorrow

186
00:06:58,639 --> 00:07:02,000
please bring your own drinks

187
00:07:00,639 --> 00:07:02,720
unfortunately we can't provide drinks

188
00:07:02,000 --> 00:07:04,000
remotely

189
00:07:02,720 --> 00:07:05,599
and also bring your own talks the

190
00:07:04,000 --> 00:07:06,880
submission deadline for talks is in

191
00:07:05,599 --> 00:07:08,719
three hours

192
00:07:06,880 --> 00:07:10,639
go to the ram session page see the

193
00:07:08,720 --> 00:07:11,599
submit a talk button right at the bottom

194
00:07:10,639 --> 00:07:13,759
of the screen

195
00:07:11,599 --> 00:07:16,000
please do it it'll be an amazing ramp

196
00:07:13,759 --> 00:07:17,759
session it won't just be boring formulas

197
00:07:16,000 --> 00:07:19,280
and endless slides i promise

198
00:07:17,759 --> 00:07:21,520
and many thanks to the ram session

199
00:07:19,280 --> 00:07:22,799
channels chairs bertrand pottering

200
00:07:21,520 --> 00:07:25,359
antigoni police

201
00:07:22,800 --> 00:07:25,360
and martin

202
00:07:26,240 --> 00:07:29,280
other special events today very soon

203
00:07:28,160 --> 00:07:31,919
we're going to have the iscr

204
00:07:29,280 --> 00:07:33,758
distinguished lecture by sylvia mccauley

205
00:07:31,919 --> 00:07:35,758
tomorrow we will start with the test of

206
00:07:33,759 --> 00:07:37,120
time award ceremony

207
00:07:35,759 --> 00:07:38,400
and we'll have a best paper award

208
00:07:37,120 --> 00:07:40,240
session that will feature slightly

209
00:07:38,400 --> 00:07:42,799
longer talks 20 minute talks from the

210
00:07:40,240 --> 00:07:44,240
best paper awards

211
00:07:42,800 --> 00:07:46,160
and in two days from now we'll have an

212
00:07:44,240 --> 00:07:48,319
invited talk by sunny kamara

213
00:07:46,160 --> 00:07:50,639
and the iacr business meeting uh you're

214
00:07:48,319 --> 00:07:52,080
all members of the iacr so please come

215
00:07:50,639 --> 00:07:54,160
and participate and learn about your

216
00:07:52,080 --> 00:07:56,960
organization

217
00:07:54,160 --> 00:07:57,599
we will also have social events we have

218
00:07:56,960 --> 00:07:59,840
hope that

219
00:07:57,599 --> 00:08:01,280
they are a fun and important part of the

220
00:07:59,840 --> 00:08:03,039
program for you

221
00:08:01,280 --> 00:08:06,000
um each day during the long break in the

222
00:08:03,039 --> 00:08:07,599
middle we will have a social event

223
00:08:06,000 --> 00:08:10,560
you can see links like this on the

224
00:08:07,599 --> 00:08:12,639
program please join

225
00:08:10,560 --> 00:08:13,680
uh today will be uh pseudorandom social

226
00:08:12,639 --> 00:08:16,080
mixer using um

227
00:08:13,680 --> 00:08:18,160
zoom breakout rounds rooms tomorrow we

228
00:08:16,080 --> 00:08:20,159
will feature a scavenger hunt

229
00:08:18,160 --> 00:08:21,199
using the new social app developed by

230
00:08:20,160 --> 00:08:22,960
kevin

231
00:08:21,199 --> 00:08:25,039
um and there will even be prizes for top

232
00:08:22,960 --> 00:08:26,878
finishes so please participate

233
00:08:25,039 --> 00:08:28,639
subsequent days we will have various

234
00:08:26,879 --> 00:08:30,319
events featuring the social app and the

235
00:08:28,639 --> 00:08:31,520
social app allows us to host rooms

236
00:08:30,319 --> 00:08:33,360
thematic rooms

237
00:08:31,520 --> 00:08:34,799
if you'd like to host a room with a

238
00:08:33,360 --> 00:08:36,640
particular theme

239
00:08:34,799 --> 00:08:38,640
on wednesday thursday or friday please

240
00:08:36,640 --> 00:08:40,479
send a short string for the room name

241
00:08:38,640 --> 00:08:43,120
that you would like to host to virtual

242
00:08:40,479 --> 00:08:44,320
conferences at iacr.org or to me general

243
00:08:43,120 --> 00:08:45,279
chair there's contact info on the

244
00:08:44,320 --> 00:08:46,720
website

245
00:08:45,279 --> 00:08:48,399
um both light-hearted and serious

246
00:08:46,720 --> 00:08:50,000
subjects are welcome anything

247
00:08:48,399 --> 00:08:52,399
you want to host we will try to

248
00:08:50,000 --> 00:08:54,080
accommodate as much as we can

249
00:08:52,399 --> 00:08:56,399
for the social program i have to give

250
00:08:54,080 --> 00:08:59,040
special thanks to the bina

251
00:08:56,399 --> 00:09:01,120
sophia akubov kevin mccurley and k

252
00:08:59,040 --> 00:09:02,719
mckelly

253
00:09:01,120 --> 00:09:04,399
um this is important uh rules of

254
00:09:02,720 --> 00:09:06,720
behavior there's a lot of us on a zoom

255
00:09:04,399 --> 00:09:08,080
call and it i can only happen if you all

256
00:09:06,720 --> 00:09:09,839
behave please don't forget to mute your

257
00:09:08,080 --> 00:09:11,360
microphone unless you're speaking

258
00:09:09,839 --> 00:09:12,720
please use your real professional name

259
00:09:11,360 --> 00:09:14,560
the name by wishing known in the

260
00:09:12,720 --> 00:09:15,440
community that's part of the iacr code

261
00:09:14,560 --> 00:09:17,040
of conduct

262
00:09:15,440 --> 00:09:19,120
the code of contact applies to all

263
00:09:17,040 --> 00:09:20,560
social and technical events

264
00:09:19,120 --> 00:09:22,320
also note that the technical events

265
00:09:20,560 --> 00:09:23,599
including any audio video you share

266
00:09:22,320 --> 00:09:25,680
are live streamed to youtube and

267
00:09:23,600 --> 00:09:29,279
recorded and they'll be available later

268
00:09:25,680 --> 00:09:29,279
under the iacr youtube channel

269
00:09:29,440 --> 00:09:36,399
and we all hope to see you in 2021

270
00:09:33,920 --> 00:09:37,120
while you're waiting for the next talk

271
00:09:36,399 --> 00:09:40,560
please

272
00:09:37,120 --> 00:09:42,160
go to the program click on chat

273
00:09:40,560 --> 00:09:44,000
log in to zulippo create an account if

274
00:09:42,160 --> 00:09:47,680
you haven't created one already

275
00:09:44,000 --> 00:09:49,279
and upload a profile pic by clicking on

276
00:09:47,680 --> 00:09:51,839
settings up here

277
00:09:49,279 --> 00:09:52,720
and uploading one so we can somewhat

278
00:09:51,839 --> 00:09:54,399
replicate

279
00:09:52,720 --> 00:09:56,320
a face-to-face interaction if you're

280
00:09:54,399 --> 00:09:57,680
using a zoom client please also upload a

281
00:09:56,320 --> 00:10:00,320
pic there so people

282
00:09:57,680 --> 00:10:05,839
can recognize familiar faces and smile

283
00:10:00,320 --> 00:10:05,839
at each other

284
00:10:20,640 --> 00:10:26,399
all right and now i would like to

285
00:10:23,680 --> 00:10:27,839
hand it over to jeremiah jeremiah the

286
00:10:26,399 --> 00:10:31,360
floor is yours

287
00:10:27,839 --> 00:10:32,079
all right thanks and uh welcome to the

288
00:10:31,360 --> 00:10:35,519
uh first

289
00:10:32,079 --> 00:10:36,319
session of crypto 2020 um so we have an

290
00:10:35,519 --> 00:10:39,360
exciting

291
00:10:36,320 --> 00:10:41,920
uh lineup of six uh six papers here

292
00:10:39,360 --> 00:10:43,519
um each of the authors will give a short

293
00:10:41,920 --> 00:10:45,279
uh five minute presentation and then

294
00:10:43,519 --> 00:10:46,720
we'll have some time for questions and

295
00:10:45,279 --> 00:10:49,360
answers after

296
00:10:46,720 --> 00:10:50,000
after each short presentation um so as a

297
00:10:49,360 --> 00:10:53,600
reminder

298
00:10:50,000 --> 00:10:54,399
uh the preferred place to ask questions

299
00:10:53,600 --> 00:10:59,360
during the

300
00:10:54,399 --> 00:11:01,600
talks is uh on chat.ice.iacr.org

301
00:10:59,360 --> 00:11:03,040
you can also type them into into zoom

302
00:11:01,600 --> 00:11:03,680
here we'll try to keep an eye out for

303
00:11:03,040 --> 00:11:08,000
them but the

304
00:11:03,680 --> 00:11:11,519
easiest place to ask is on chat.iacr.org

305
00:11:08,000 --> 00:11:13,920
um so i'm jeremiah blocky and uh henry

306
00:11:11,519 --> 00:11:15,600
henry corrigan gibbs will be the will

307
00:11:13,920 --> 00:11:18,959
also be helping me to

308
00:11:15,600 --> 00:11:20,000
uh to chair and uh the first paper uh we

309
00:11:18,959 --> 00:11:22,079
have up is

310
00:11:20,000 --> 00:11:24,000
handling adaptive compromise for

311
00:11:22,079 --> 00:11:28,000
practical encryption schemes

312
00:11:24,000 --> 00:11:30,560
um so this paper was uh selected as a

313
00:11:28,000 --> 00:11:31,040
best paper by early career researchers

314
00:11:30,560 --> 00:11:33,760
award

315
00:11:31,040 --> 00:11:35,360
um so congratulations to the authors uh

316
00:11:33,760 --> 00:11:38,079
joseph uh

317
00:11:35,360 --> 00:11:38,640
jigger and uh nirvan tiaghi and i

318
00:11:38,079 --> 00:11:42,000
believe

319
00:11:38,640 --> 00:11:45,600
joseph will be giving the talk uh so

320
00:11:42,000 --> 00:11:46,959
joseph we can go ahead and share your

321
00:11:45,600 --> 00:11:57,839
screen and

322
00:11:46,959 --> 00:11:57,839
ready when you are

323
00:12:06,880 --> 00:12:12,560
okay hi everyone

324
00:12:10,320 --> 00:12:14,560
thanks for joining me as i kick off

325
00:12:12,560 --> 00:12:17,920
these technical talks for this very

326
00:12:14,560 --> 00:12:19,359
atypical crypto 2020.

327
00:12:17,920 --> 00:12:21,199
i'm going to be telling you about my

328
00:12:19,360 --> 00:12:23,040
paper with nirvan thiagy

329
00:12:21,200 --> 00:12:24,399
on handling adaptive compromise for

330
00:12:23,040 --> 00:12:28,800
symmetric encryption

331
00:12:24,399 --> 00:12:30,800
and prfs the adaptive compromise setting

332
00:12:28,800 --> 00:12:33,680
arises throughout cryptography in many

333
00:12:30,800 --> 00:12:35,439
contexts and under many different names

334
00:12:33,680 --> 00:12:37,599
broadly speaking it considers some

335
00:12:35,440 --> 00:12:40,800
number of parties that are communicating

336
00:12:37,600 --> 00:12:43,200
while accruing cryptographic secrets

337
00:12:40,800 --> 00:12:45,279
an attacker observes this communication

338
00:12:43,200 --> 00:12:47,760
and then based on its observations

339
00:12:45,279 --> 00:12:51,040
may adaptively compromise the secrets of

340
00:12:47,760 --> 00:12:54,560
some subset of the parties

341
00:12:51,040 --> 00:12:56,480
our work was motivated

342
00:12:54,560 --> 00:12:58,638
by adaptive compromise for symmetric

343
00:12:56,480 --> 00:12:59,680
encryption and pseudorandom functions

344
00:12:58,639 --> 00:13:03,279
that arose in

345
00:12:59,680 --> 00:13:06,638
simulation based security definitions

346
00:13:03,279 --> 00:13:08,160
to cut to the chase we provided new

347
00:13:06,639 --> 00:13:10,959
definitions for this setting

348
00:13:08,160 --> 00:13:12,880
referred to as sim acx for various

349
00:13:10,959 --> 00:13:14,560
choices of x

350
00:13:12,880 --> 00:13:17,680
we showed that our definitions are

351
00:13:14,560 --> 00:13:20,160
useful by applying them to simplify and

352
00:13:17,680 --> 00:13:23,439
improve the security proofs of example

353
00:13:20,160 --> 00:13:25,199
higher level protocols and we showed

354
00:13:23,440 --> 00:13:27,600
that the security of schemes

355
00:13:25,200 --> 00:13:29,200
we already know and love can be lifted

356
00:13:27,600 --> 00:13:30,959
to our new definitions

357
00:13:29,200 --> 00:13:32,480
in the appropriate choice of an ideal

358
00:13:30,959 --> 00:13:35,279
model

359
00:13:32,480 --> 00:13:36,959
the definitions we consider ask how well

360
00:13:35,279 --> 00:13:37,760
an attacker can distinguish between a

361
00:13:36,959 --> 00:13:39,439
real world

362
00:13:37,760 --> 00:13:41,760
where it interacts with a cryptographic

363
00:13:39,440 --> 00:13:43,839
scheme and an ideal world where its

364
00:13:41,760 --> 00:13:47,360
queries are answered by a simulator

365
00:13:43,839 --> 00:13:50,079
given some leakage about these queries

366
00:13:47,360 --> 00:13:51,199
our cpa definition is a multi-user

367
00:13:50,079 --> 00:13:53,599
definition

368
00:13:51,199 --> 00:13:55,519
in which the attacker can ask for

369
00:13:53,600 --> 00:13:56,880
encryptions of messages under a secret

370
00:13:55,519 --> 00:13:59,600
key k

371
00:13:56,880 --> 00:14:02,959
and then later ask for this key to be re

372
00:13:59,600 --> 00:14:04,720
be revealed to it in the ideal world

373
00:14:02,959 --> 00:14:06,000
the leakage given to the simulator on

374
00:14:04,720 --> 00:14:08,880
encryption queries

375
00:14:06,000 --> 00:14:09,920
is only the length of the message and

376
00:14:08,880 --> 00:14:12,399
then later

377
00:14:09,920 --> 00:14:14,160
when it is asked to expose a key the

378
00:14:12,399 --> 00:14:16,480
simulator may be told the content of

379
00:14:14,160 --> 00:14:19,680
these messages

380
00:14:16,480 --> 00:14:21,600
our prf definitions work similarly with

381
00:14:19,680 --> 00:14:23,120
encryption replaced by evaluation of the

382
00:14:21,600 --> 00:14:25,199
random function

383
00:14:23,120 --> 00:14:27,760
to which responses are random in the

384
00:14:25,199 --> 00:14:30,160
ideal world

385
00:14:27,760 --> 00:14:31,600
by a result of nielsen we know that

386
00:14:30,160 --> 00:14:33,839
achieving such notions

387
00:14:31,600 --> 00:14:35,600
in the standard model requires very long

388
00:14:33,839 --> 00:14:38,399
keys

389
00:14:35,600 --> 00:14:40,160
so the works we were inspired by and

390
00:14:38,399 --> 00:14:44,160
hence our definitions

391
00:14:40,160 --> 00:14:46,880
work in programmable ideal models

392
00:14:44,160 --> 00:14:49,120
we augment our definitions to add access

393
00:14:46,880 --> 00:14:51,519
to these ideal primitives

394
00:14:49,120 --> 00:14:53,360
and in the i in the ideal world the

395
00:14:51,519 --> 00:14:57,519
simulator has complete control

396
00:14:53,360 --> 00:15:00,560
of this access our motivating examples

397
00:14:57,519 --> 00:15:02,000
tended to follow a common approach

398
00:15:00,560 --> 00:15:03,518
when they ran into the need to do

399
00:15:02,000 --> 00:15:04,480
something comparable to what our

400
00:15:03,519 --> 00:15:06,720
definitions

401
00:15:04,480 --> 00:15:08,320
we just considered they would fix a

402
00:15:06,720 --> 00:15:09,920
particular random oracle-based

403
00:15:08,320 --> 00:15:11,600
encryption scheme

404
00:15:09,920 --> 00:15:15,599
and then prove security of the higher

405
00:15:11,600 --> 00:15:17,839
level protocol using this scheme

406
00:15:15,600 --> 00:15:19,920
a common scene considered was one block

407
00:15:17,839 --> 00:15:22,639
counter mode using a prf modeled as a

408
00:15:19,920 --> 00:15:22,639
random oracle

409
00:15:23,120 --> 00:15:26,880
however this approach leaves us some

410
00:15:25,120 --> 00:15:28,880
with some questions

411
00:15:26,880 --> 00:15:30,959
what if we want to use a prf that cannot

412
00:15:28,880 --> 00:15:32,399
be thought of as a random oracle

413
00:15:30,959 --> 00:15:35,599
or what if we want to use a different

414
00:15:32,399 --> 00:15:38,399
mode of operation with this prf

415
00:15:35,600 --> 00:15:39,680
following the status pro quo we would

416
00:15:38,399 --> 00:15:40,079
need to write a completely separate

417
00:15:39,680 --> 00:15:43,359
proof

418
00:15:40,079 --> 00:15:44,959
each choice of a mode of operation prf

419
00:15:43,360 --> 00:15:47,680
and application that we want to prove

420
00:15:44,959 --> 00:15:49,199
secure this is a cubic number of proofs

421
00:15:47,680 --> 00:15:51,279
in total

422
00:15:49,199 --> 00:15:52,240
moreover each of these proofs is an

423
00:15:51,279 --> 00:15:54,160
ideal model

424
00:15:52,240 --> 00:15:55,759
programming proof which while

425
00:15:54,160 --> 00:15:57,920
conceptually straightforward can be

426
00:15:55,759 --> 00:16:00,320
quite detail-intensive

427
00:15:57,920 --> 00:16:03,360
to exemplify this let's consider these

428
00:16:00,320 --> 00:16:06,000
papers we cited earlier

429
00:16:03,360 --> 00:16:06,720
few of them attempted to give full

430
00:16:06,000 --> 00:16:09,519
details

431
00:16:06,720 --> 00:16:11,279
of this complicated programming analysis

432
00:16:09,519 --> 00:16:13,680
and of those who did

433
00:16:11,279 --> 00:16:17,040
along with some which didn't we

434
00:16:13,680 --> 00:16:19,680
identified bugs in their proofs

435
00:16:17,040 --> 00:16:23,040
to be fair my co-author and i weren't

436
00:16:19,680 --> 00:16:25,199
some of these papers that had books

437
00:16:23,040 --> 00:16:26,959
this lack of a complete and correct

438
00:16:25,199 --> 00:16:30,560
proof using this strategy

439
00:16:26,959 --> 00:16:32,880
indicates the need for a new approach

440
00:16:30,560 --> 00:16:34,079
we provide this approach by introducing

441
00:16:32,880 --> 00:16:37,519
our intermediate

442
00:16:34,079 --> 00:16:39,040
sim ac definitions thereby

443
00:16:37,519 --> 00:16:42,000
only a linear number of proofs are

444
00:16:39,040 --> 00:16:44,800
required and the ideal model programming

445
00:16:42,000 --> 00:16:45,920
will only appear at the lowest level of

446
00:16:44,800 --> 00:16:50,160
analysis

447
00:16:45,920 --> 00:16:52,399
to be inherited by the higher levels

448
00:16:50,160 --> 00:16:54,639
we showed that our definitions suffice

449
00:16:52,399 --> 00:16:57,440
to prove the security of some example

450
00:16:54,639 --> 00:16:59,519
higher level protocols in particular a

451
00:16:57,440 --> 00:17:00,160
searchable encryption scheme of cash at

452
00:16:59,519 --> 00:17:02,240
all

453
00:17:00,160 --> 00:17:04,959
the burn box self-revocable encryption

454
00:17:02,240 --> 00:17:07,039
scheme of thiagi at all

455
00:17:04,959 --> 00:17:08,720
and the opaque password authenticated

456
00:17:07,039 --> 00:17:11,839
key exchange protocol

457
00:17:08,720 --> 00:17:11,839
of trekkie and all

458
00:17:11,919 --> 00:17:16,720
then we justify that many encryption

459
00:17:14,720 --> 00:17:19,760
schemes we all know and love

460
00:17:16,720 --> 00:17:20,880
satisfy these new notions in particular

461
00:17:19,760 --> 00:17:22,559
we first provide

462
00:17:20,880 --> 00:17:24,720
the detail intent of programming

463
00:17:22,559 --> 00:17:26,079
analysis to show that random oracles and

464
00:17:24,720 --> 00:17:29,280
ideal ciphers

465
00:17:26,079 --> 00:17:32,080
satisfy our prf notion then

466
00:17:29,280 --> 00:17:34,639
we lift classic results of bellari and

467
00:17:32,080 --> 00:17:39,840
amprempre for modularly achieving

468
00:17:34,640 --> 00:17:41,840
cca security to use our new csca notion

469
00:17:39,840 --> 00:17:43,600
then considering encryption schemes as

470
00:17:41,840 --> 00:17:48,080
modes of operations on

471
00:17:43,600 --> 00:17:51,120
sim ac secure prfs we show that standard

472
00:17:48,080 --> 00:17:54,799
cpa only schemes achieve our

473
00:17:51,120 --> 00:17:57,600
sim ac notion this last point

474
00:17:54,799 --> 00:17:58,799
is derived as a general result that any

475
00:17:57,600 --> 00:18:00,159
mode of operation

476
00:17:58,799 --> 00:18:03,039
which meets a new notion of

477
00:18:00,160 --> 00:18:04,160
extractability will achieve our csva

478
00:18:03,039 --> 00:18:07,919
notion

479
00:18:04,160 --> 00:18:10,160
and in particular the existing in-cpa

480
00:18:07,919 --> 00:18:11,520
analysis that we have in the literature

481
00:18:10,160 --> 00:18:13,360
tends to have the required

482
00:18:11,520 --> 00:18:16,960
extractability analysis

483
00:18:13,360 --> 00:18:16,959
hidden within their proofs

484
00:18:17,039 --> 00:18:19,919
thank you for your time

485
00:18:21,520 --> 00:18:28,559
all right thank you um so

486
00:18:25,360 --> 00:18:32,080
i would say my

487
00:18:28,559 --> 00:18:34,799
co-chair henry has been monitoring uh

488
00:18:32,080 --> 00:18:35,439
um monitoring on zulup for any questions

489
00:18:34,799 --> 00:18:37,120
uh

490
00:18:35,440 --> 00:18:39,120
so henry do you have any uh any

491
00:18:37,120 --> 00:18:41,678
questions that you've seen come in

492
00:18:39,120 --> 00:18:42,159
no so none on zulip yet so if you have a

493
00:18:41,679 --> 00:18:45,520
question

494
00:18:42,160 --> 00:18:47,679
please put it into the the channel on uh

495
00:18:45,520 --> 00:18:50,400
monday security model session

496
00:18:47,679 --> 00:18:50,799
but in the meantime i'll ask a couple of

497
00:18:50,400 --> 00:18:52,320
uh

498
00:18:50,799 --> 00:18:54,000
of my own so thanks for the talk this is

499
00:18:52,320 --> 00:18:56,399
really really nice work

500
00:18:54,000 --> 00:18:58,080
um i was curious i mean you found bugs i

501
00:18:56,400 --> 00:18:58,640
think you said in your paper in 15

502
00:18:58,080 --> 00:19:00,720
proofs

503
00:18:58,640 --> 00:19:02,160
that you checked and i'm curious if you

504
00:19:00,720 --> 00:19:03,760
can say anything about the nature of the

505
00:19:02,160 --> 00:19:04,400
bugs that you found and if there's kind

506
00:19:03,760 --> 00:19:06,960
of any

507
00:19:04,400 --> 00:19:08,400
common thread or anything we can learn

508
00:19:06,960 --> 00:19:08,880
from the types of bugs that you came

509
00:19:08,400 --> 00:19:12,480
across

510
00:19:08,880 --> 00:19:12,480
and these kind of detailed analyses

511
00:19:13,280 --> 00:19:18,879
the uh

512
00:19:16,480 --> 00:19:20,880
the most common source of the bugs was

513
00:19:18,880 --> 00:19:25,200
really this one particular step

514
00:19:20,880 --> 00:19:28,000
in the kind of ideal model analysis

515
00:19:25,200 --> 00:19:29,600
where um when say we're kind of

516
00:19:28,000 --> 00:19:32,640
simulating a prf

517
00:19:29,600 --> 00:19:33,760
based on a random oracle for example the

518
00:19:32,640 --> 00:19:35,760
kind of

519
00:19:33,760 --> 00:19:37,679
common bad event that most people were

520
00:19:35,760 --> 00:19:40,000
noticing they needed to look for

521
00:19:37,679 --> 00:19:41,600
is if the adversary queried to some

522
00:19:40,000 --> 00:19:46,400
user's key

523
00:19:41,600 --> 00:19:49,120
before exposing that user's key the

524
00:19:46,400 --> 00:19:50,720
more subtle thing which was the most

525
00:19:49,120 --> 00:19:52,320
common cause of issues

526
00:19:50,720 --> 00:19:54,480
was not noticing that you also need to

527
00:19:52,320 --> 00:19:58,320
consider the fact that multiple users

528
00:19:54,480 --> 00:20:01,520
might have collisions on their keys um

529
00:19:58,320 --> 00:20:04,080
so in terms of a high level take away

530
00:20:01,520 --> 00:20:06,400
you know that that specific example is

531
00:20:04,080 --> 00:20:09,120
something that you can just try to avoid

532
00:20:06,400 --> 00:20:11,120
but more broadly i'd say it kind of

533
00:20:09,120 --> 00:20:12,719
falls down to

534
00:20:11,120 --> 00:20:14,399
something about just kind of being

535
00:20:12,720 --> 00:20:16,000
really meticulous and careful and

536
00:20:14,400 --> 00:20:19,039
writing proofs and

537
00:20:16,000 --> 00:20:23,360
you know really challenging yourself if

538
00:20:19,039 --> 00:20:23,360
if you are catching everything and

539
00:20:23,520 --> 00:20:28,400
yeah great so i'll keep looking at the

540
00:20:28,000 --> 00:20:30,799
chat

541
00:20:28,400 --> 00:20:32,400
um and then at the end of the session if

542
00:20:30,799 --> 00:20:33,520
we have time we can circle back and ask

543
00:20:32,400 --> 00:20:34,880
more questions but

544
00:20:33,520 --> 00:20:37,039
in the meantime let me ask one more

545
00:20:34,880 --> 00:20:40,159
which is that it seems like

546
00:20:37,039 --> 00:20:42,158
adaptive compromise is security is

547
00:20:40,159 --> 00:20:44,559
a super useful property to have of of

548
00:20:42,159 --> 00:20:46,559
cryptosystems and i'm curious if you

549
00:20:44,559 --> 00:20:47,840
thought about kind of going beyond the

550
00:20:46,559 --> 00:20:49,600
primitives that you studied in this

551
00:20:47,840 --> 00:20:50,799
paper to look at adaptive compromise in

552
00:20:49,600 --> 00:20:52,639
other settings like for

553
00:20:50,799 --> 00:20:54,158
garbled circuits or for publicly

554
00:20:52,640 --> 00:20:55,679
primitives and

555
00:20:54,159 --> 00:20:58,240
and what the most interesting directions

556
00:20:55,679 --> 00:20:58,240
would be there

557
00:20:58,400 --> 00:21:05,600
sure um yeah

558
00:21:01,440 --> 00:21:07,840
we kind of have looked at this a bit

559
00:21:05,600 --> 00:21:09,678
that you know we looked at public key

560
00:21:07,840 --> 00:21:11,918
primitives and

561
00:21:09,679 --> 00:21:14,320
believe you can kind of define analogs

562
00:21:11,919 --> 00:21:17,039
of our definitions there

563
00:21:14,320 --> 00:21:17,840
and kind of work with them and prove

564
00:21:17,039 --> 00:21:20,799
certain

565
00:21:17,840 --> 00:21:22,320
ideal model based schemes are secure i

566
00:21:20,799 --> 00:21:23,200
mean i think in general there's kind of

567
00:21:22,320 --> 00:21:26,720
a very

568
00:21:23,200 --> 00:21:27,440
wide open kind of future directions here

569
00:21:26,720 --> 00:21:30,400
of looking

570
00:21:27,440 --> 00:21:32,480
for places that do this sort of ideal

571
00:21:30,400 --> 00:21:33,200
model analysis and a simulation based

572
00:21:32,480 --> 00:21:35,200
definition

573
00:21:33,200 --> 00:21:37,840
and seeing if we can modularize them

574
00:21:35,200 --> 00:21:39,280
with our types of definitions

575
00:21:37,840 --> 00:21:41,520
and i should of course mention that

576
00:21:39,280 --> 00:21:44,240
there's kind of plenty of work in

577
00:21:41,520 --> 00:21:47,520
other definitional regimes for adaptive

578
00:21:44,240 --> 00:21:47,520
compromise security

579
00:21:47,600 --> 00:21:51,600
under different terms that kind of

580
00:21:49,280 --> 00:21:53,360
already exists in particular public

581
00:21:51,600 --> 00:21:54,719
encryptions and commitment schemes have

582
00:21:53,360 --> 00:21:57,918
been one

583
00:21:54,720 --> 00:22:00,320
or two kind of common areas to look at

584
00:21:57,919 --> 00:22:02,320
this sort of issue with

585
00:22:00,320 --> 00:22:04,320
okay so one more quick question then we

586
00:22:02,320 --> 00:22:06,320
should probably move on to the next uh

587
00:22:04,320 --> 00:22:08,080
next talk so there's a question that

588
00:22:06,320 --> 00:22:11,200
came in on uh

589
00:22:08,080 --> 00:22:12,320
um on zulu so the question is by paul

590
00:22:11,200 --> 00:22:14,799
grubbs

591
00:22:12,320 --> 00:22:16,960
did you analyze purpose-built

592
00:22:14,799 --> 00:22:20,320
authenticated encryption schemes like

593
00:22:16,960 --> 00:22:23,919
ocb or gcm

594
00:22:20,320 --> 00:22:26,000
uh no we didn't the kind of motivation

595
00:22:23,919 --> 00:22:27,679
behind this was that the particular

596
00:22:26,000 --> 00:22:30,240
examples we had found which

597
00:22:27,679 --> 00:22:30,960
needed our sort of analysis all wanted

598
00:22:30,240 --> 00:22:34,000
to use

599
00:22:30,960 --> 00:22:37,600
randomized encryption schemes so we were

600
00:22:34,000 --> 00:22:40,559
kind of focusing on the classic

601
00:22:37,600 --> 00:22:40,879
randomized encryption schemes but we did

602
00:22:40,559 --> 00:22:42,720
in

603
00:22:40,880 --> 00:22:43,919
the appendix of our definition give

604
00:22:42,720 --> 00:22:47,200
definitions for

605
00:22:43,919 --> 00:22:50,159
non-spaced encryption schemes and

606
00:22:47,200 --> 00:22:52,159
i'm fairly confident that kind of the

607
00:22:50,159 --> 00:22:54,880
exact same approaches we took here

608
00:22:52,159 --> 00:22:55,280
to prove randomized schemes secure would

609
00:22:54,880 --> 00:22:58,880
work

610
00:22:55,280 --> 00:23:03,200
for some some of the kind of common

611
00:22:58,880 --> 00:23:04,559
uh non-space games in particular gcm i'm

612
00:23:03,200 --> 00:23:06,400
i've thought through that carefully

613
00:23:04,559 --> 00:23:07,840
though not written down very

614
00:23:06,400 --> 00:23:09,840
convinced that you could do the exact

615
00:23:07,840 --> 00:23:10,879
same sort of analysis to prove it meets

616
00:23:09,840 --> 00:23:14,080
that with non-space

617
00:23:10,880 --> 00:23:17,280
notions okay well

618
00:23:14,080 --> 00:23:18,320
uh thank you um so i think uh we'll ask

619
00:23:17,280 --> 00:23:20,960
uh

620
00:23:18,320 --> 00:23:22,559
um our next presenters to get uh get

621
00:23:20,960 --> 00:23:25,280
ready so the next paper

622
00:23:22,559 --> 00:23:26,799
is overcoming impossibility results and

623
00:23:25,280 --> 00:23:30,158
composable security

624
00:23:26,799 --> 00:23:33,360
using interval wise guarantees

625
00:23:30,159 --> 00:23:36,159
so this paper is by daniel yost

626
00:23:33,360 --> 00:23:39,280
and uli maurer and i believe daniel will

627
00:23:36,159 --> 00:23:39,280
give the presentation

628
00:23:40,080 --> 00:23:44,720
okay so welcome to my presentation as

629
00:23:42,960 --> 00:23:49,200
you said this is trying to work with

630
00:23:44,720 --> 00:23:52,080
worry mode and this talk is as well

631
00:23:49,200 --> 00:23:55,440
on the subject of composable sometimes

632
00:23:52,080 --> 00:23:57,600
also called simulation based security

633
00:23:55,440 --> 00:23:59,520
as you probably all know simulation

634
00:23:57,600 --> 00:24:02,158
based security has a lot of

635
00:23:59,520 --> 00:24:04,240
advantage such as it allows you to make

636
00:24:02,159 --> 00:24:07,120
very modular proofs

637
00:24:04,240 --> 00:24:10,080
but it comes at the price of having very

638
00:24:07,120 --> 00:24:12,559
strong security statements

639
00:24:10,080 --> 00:24:14,080
this not only often leads to sort of

640
00:24:12,559 --> 00:24:16,960
less efficient schemes

641
00:24:14,080 --> 00:24:18,080
additional setup assumptions and so on

642
00:24:16,960 --> 00:24:21,919
but sometimes even

643
00:24:18,080 --> 00:24:24,559
leads to downright impossibility results

644
00:24:21,919 --> 00:24:28,480
at least in the standard model

645
00:24:24,559 --> 00:24:30,879
and many of those impossibility results

646
00:24:28,480 --> 00:24:33,520
especially when it comes to adaptive

647
00:24:30,880 --> 00:24:34,960
corruptions are due to the so-called

648
00:24:33,520 --> 00:24:38,960
simulator commitment

649
00:24:34,960 --> 00:24:40,080
problem so let me give you a brief

650
00:24:38,960 --> 00:24:43,039
example of what

651
00:24:40,080 --> 00:24:44,080
this problem is about let's say we have

652
00:24:43,039 --> 00:24:46,640
alice and pope

653
00:24:44,080 --> 00:24:47,120
who wants to construct the cq channel

654
00:24:46,640 --> 00:24:49,840
from an

655
00:24:47,120 --> 00:24:52,000
authenticated one and the key using

656
00:24:49,840 --> 00:24:54,399
symmetric encryption

657
00:24:52,000 --> 00:24:55,520
unfortunately they live in a world where

658
00:24:54,400 --> 00:24:57,600
this key might

659
00:24:55,520 --> 00:24:59,520
leak to the adversary at some point

660
00:24:57,600 --> 00:25:00,879
maybe because one of the party state

661
00:24:59,520 --> 00:25:04,879
gets compromised

662
00:25:00,880 --> 00:25:07,679
or for whatever else reason so

663
00:25:04,880 --> 00:25:08,320
obviously um one can only hope for the

664
00:25:07,679 --> 00:25:10,559
message

665
00:25:08,320 --> 00:25:11,439
to remain confidential until this key

666
00:25:10,559 --> 00:25:14,320
leaks but

667
00:25:11,440 --> 00:25:15,200
it turns out that formalizing this in a

668
00:25:14,320 --> 00:25:17,840
traditional

669
00:25:15,200 --> 00:25:19,919
composable security framework is quite

670
00:25:17,840 --> 00:25:22,000
challenging

671
00:25:19,919 --> 00:25:24,320
so what you have to do is essentially

672
00:25:22,000 --> 00:25:27,840
you have to show that the real world and

673
00:25:24,320 --> 00:25:29,840
the ideal world are indistinguishable

674
00:25:27,840 --> 00:25:31,360
if in the real world alice inputs a

675
00:25:29,840 --> 00:25:35,039
message m then

676
00:25:31,360 --> 00:25:37,760
eve might observe a ciphertext c

677
00:25:35,039 --> 00:25:38,158
so in the ideal world well we said that

678
00:25:37,760 --> 00:25:41,600
this

679
00:25:38,159 --> 00:25:43,840
channel should be confidential so

680
00:25:41,600 --> 00:25:45,360
we formalize this as the channel only

681
00:25:43,840 --> 00:25:47,678
leaking the message length

682
00:25:45,360 --> 00:25:49,199
and it's then chop of the simulator to

683
00:25:47,679 --> 00:25:53,919
actually output

684
00:25:49,200 --> 00:25:57,840
an appropriate fake looking ciphertext c

685
00:25:53,919 --> 00:26:00,000
so so far all fine if you have any ncpa

686
00:25:57,840 --> 00:26:01,879
secure encryption scheme you can easily

687
00:26:00,000 --> 00:26:04,720
do this

688
00:26:01,880 --> 00:26:05,600
unfortunately the moment this key leaks

689
00:26:04,720 --> 00:26:08,480
to eve

690
00:26:05,600 --> 00:26:08,719
well now eve can decrypt the cipher text

691
00:26:08,480 --> 00:26:12,559
and

692
00:26:08,720 --> 00:26:14,320
recover the original message m so

693
00:26:12,559 --> 00:26:16,960
obviously the message is no longer

694
00:26:14,320 --> 00:26:18,480
confidential and hence a naive attempt

695
00:26:16,960 --> 00:26:20,960
would be to say okay

696
00:26:18,480 --> 00:26:23,120
this constructed channel at this point

697
00:26:20,960 --> 00:26:25,120
in time it now leaks the full message to

698
00:26:23,120 --> 00:26:27,840
the simulator

699
00:26:25,120 --> 00:26:29,918
unfortunately it turns out that this is

700
00:26:27,840 --> 00:26:32,399
not really of any help

701
00:26:29,919 --> 00:26:34,559
because if it's just any regular ncpa

702
00:26:32,400 --> 00:26:36,880
secure encryption scheme

703
00:26:34,559 --> 00:26:38,320
the simulator will still not be able to

704
00:26:36,880 --> 00:26:41,279
output a

705
00:26:38,320 --> 00:26:42,960
correctly distributed key that explains

706
00:26:41,279 --> 00:26:46,080
this fake ciphertext

707
00:26:42,960 --> 00:26:48,720
c to the message m

708
00:26:46,080 --> 00:26:50,799
so you would need um and so-called

709
00:26:48,720 --> 00:26:53,360
non-committing encryption scheme

710
00:26:50,799 --> 00:26:55,360
but this is sort of not the goal of this

711
00:26:53,360 --> 00:26:58,639
work

712
00:26:55,360 --> 00:27:01,678
but we can actually observe that somehow

713
00:26:58,640 --> 00:27:03,840
saying that this secure channel only

714
00:27:01,679 --> 00:27:06,400
leaks the message length was essentially

715
00:27:03,840 --> 00:27:08,080
just a way of formalizing that

716
00:27:06,400 --> 00:27:11,200
the mess that the channel is

717
00:27:08,080 --> 00:27:14,320
confidential until this key leaks

718
00:27:11,200 --> 00:27:15,039
yet it sort of causes problem only after

719
00:27:14,320 --> 00:27:19,120
this key

720
00:27:15,039 --> 00:27:21,520
exposure event so what we do in our work

721
00:27:19,120 --> 00:27:22,320
is essentially we come up with a notion

722
00:27:21,520 --> 00:27:25,600
that allows

723
00:27:22,320 --> 00:27:27,918
us to make two separate statements one

724
00:27:25,600 --> 00:27:29,678
for instance here about confidentiality

725
00:27:27,919 --> 00:27:32,240
until the key leaks

726
00:27:29,679 --> 00:27:34,159
and then as a second separate statement

727
00:27:32,240 --> 00:27:37,600
we formalize for instance all the

728
00:27:34,159 --> 00:27:40,960
remaining security guarantees after this

729
00:27:37,600 --> 00:27:42,799
event and i would really like to stress

730
00:27:40,960 --> 00:27:43,200
that somehow the goal of this work is

731
00:27:42,799 --> 00:27:45,520
not

732
00:27:43,200 --> 00:27:47,520
to come up with yet another notion that

733
00:27:45,520 --> 00:27:48,158
in the end requires less efficient

734
00:27:47,520 --> 00:27:51,200
scheme

735
00:27:48,159 --> 00:27:52,960
additional setup assumption or so on

736
00:27:51,200 --> 00:27:54,880
or where you even have to fall back to

737
00:27:52,960 --> 00:27:57,440
game-based security

738
00:27:54,880 --> 00:27:58,640
what we really try to do here is to come

739
00:27:57,440 --> 00:28:01,440
up with

740
00:27:58,640 --> 00:28:03,120
a way to express the security guarantees

741
00:28:01,440 --> 00:28:05,600
of your favorite schemes

742
00:28:03,120 --> 00:28:08,799
but within the composable framework

743
00:28:05,600 --> 00:28:11,439
instead of a game-based notion

744
00:28:08,799 --> 00:28:13,760
and the big open question is essentially

745
00:28:11,440 --> 00:28:15,679
how can we make such a notion fit within

746
00:28:13,760 --> 00:28:17,520
the composable framework and this is

747
00:28:15,679 --> 00:28:19,919
what i try to

748
00:28:17,520 --> 00:28:23,600
give you a very very high level overview

749
00:28:19,919 --> 00:28:23,600
in the next two minutes or so

750
00:28:23,679 --> 00:28:28,600
so our work is essentially based on this

751
00:28:26,159 --> 00:28:30,000
observation by maurel and render from

752
00:28:28,600 --> 00:28:33,279
2016 that

753
00:28:30,000 --> 00:28:37,840
composable security notions can be seen

754
00:28:33,279 --> 00:28:40,320
as a specification abstraction statement

755
00:28:37,840 --> 00:28:42,639
so if you have this dark greenish very

756
00:28:40,320 --> 00:28:45,039
complicated looking specification and

757
00:28:42,640 --> 00:28:48,000
you don't know whether it satisfies the

758
00:28:45,039 --> 00:28:48,640
properties you would need then what you

759
00:28:48,000 --> 00:28:50,880
can do

760
00:28:48,640 --> 00:28:52,480
is you can prove that it's contained in

761
00:28:50,880 --> 00:28:55,360
a bigger specification

762
00:28:52,480 --> 00:28:58,399
here the light green one which is then

763
00:28:55,360 --> 00:29:00,000
in turn easier to understand

764
00:28:58,399 --> 00:29:01,760
so for instance the traditional

765
00:29:00,000 --> 00:29:05,200
simulation based notion

766
00:29:01,760 --> 00:29:05,600
the this assumed specification would be

767
00:29:05,200 --> 00:29:08,760
just

768
00:29:05,600 --> 00:29:10,240
the real world whereas the ideal

769
00:29:08,760 --> 00:29:12,399
specification would

770
00:29:10,240 --> 00:29:13,679
be the ideal word including the

771
00:29:12,399 --> 00:29:15,678
simulator

772
00:29:13,679 --> 00:29:18,320
and this really highlights that having

773
00:29:15,679 --> 00:29:21,279
this decomposition into ideal resource

774
00:29:18,320 --> 00:29:23,520
and simulator is just a way to

775
00:29:21,279 --> 00:29:25,360
formalize the specification if you take

776
00:29:23,520 --> 00:29:27,440
this viewpoint

777
00:29:25,360 --> 00:29:29,120
i mean it's a very useful one because

778
00:29:27,440 --> 00:29:30,399
you can see easily what kind of

779
00:29:29,120 --> 00:29:33,120
guarantees you get

780
00:29:30,399 --> 00:29:35,678
with this interface to eve but it's just

781
00:29:33,120 --> 00:29:35,678
one way

782
00:29:36,399 --> 00:29:41,199
and so maybe in a nutshell this

783
00:29:39,440 --> 00:29:44,080
specification approach

784
00:29:41,200 --> 00:29:45,679
is really somehow a meta framework it

785
00:29:44,080 --> 00:29:48,320
provides some very nice

786
00:29:45,679 --> 00:29:50,720
properties such as an obvious way how to

787
00:29:48,320 --> 00:29:51,760
formalize multiple guarantees by saying

788
00:29:50,720 --> 00:29:54,480
it's contained in

789
00:29:51,760 --> 00:29:57,039
intersection but at the other hand it

790
00:29:54,480 --> 00:29:58,960
does not hard code one specific type of

791
00:29:57,039 --> 00:30:01,039
statement like for instance the uc

792
00:29:58,960 --> 00:30:03,360
framework does

793
00:30:01,039 --> 00:30:04,480
and in our work we really use this

794
00:30:03,360 --> 00:30:07,559
flexibility

795
00:30:04,480 --> 00:30:10,399
to come up with new types of such

796
00:30:07,559 --> 00:30:11,200
specification that can formalize um

797
00:30:10,399 --> 00:30:13,760
guarantees

798
00:30:11,200 --> 00:30:14,640
until some event and guarantees from

799
00:30:13,760 --> 00:30:17,679
some event

800
00:30:14,640 --> 00:30:20,960
on and the way we do this

801
00:30:17,679 --> 00:30:23,440
is we start with this overly idealized

802
00:30:20,960 --> 00:30:25,279
unfortunately unachievable resource we

803
00:30:23,440 --> 00:30:27,960
talked about before

804
00:30:25,279 --> 00:30:30,000
and then we apply something we call a

805
00:30:27,960 --> 00:30:32,240
relaxation

806
00:30:30,000 --> 00:30:34,559
and a relaxation is really just a

807
00:30:32,240 --> 00:30:37,279
function that maps specifications to

808
00:30:34,559 --> 00:30:39,678
bigger ones and the advantage of

809
00:30:37,279 --> 00:30:42,880
describing our ideal specification like

810
00:30:39,679 --> 00:30:46,159
this so this idealized

811
00:30:42,880 --> 00:30:47,440
resource and then relaxing it again

812
00:30:46,159 --> 00:30:50,200
gives us structure

813
00:30:47,440 --> 00:30:51,679
and we can use this structure to derive

814
00:30:50,200 --> 00:30:55,279
syntactical

815
00:30:51,679 --> 00:30:57,120
composition results so in a follow-up

816
00:30:55,279 --> 00:30:58,080
step what you can then do is you can

817
00:30:57,120 --> 00:31:01,518
forget about

818
00:30:58,080 --> 00:31:02,320
this relaxation and you can just assume

819
00:31:01,519 --> 00:31:04,720
that you have

820
00:31:02,320 --> 00:31:06,879
this overly idealized channel that first

821
00:31:04,720 --> 00:31:08,960
only leaks the message length and only

822
00:31:06,880 --> 00:31:10,799
once the key is exposed and

823
00:31:08,960 --> 00:31:12,080
confidentiality can no longer be

824
00:31:10,799 --> 00:31:15,279
guaranteed

825
00:31:12,080 --> 00:31:17,678
um it would just output all the messages

826
00:31:15,279 --> 00:31:20,720
to eve

827
00:31:17,679 --> 00:31:21,519
so obviously this was really very high

828
00:31:20,720 --> 00:31:24,240
level and

829
00:31:21,519 --> 00:31:26,240
short and so i would like to refer you

830
00:31:24,240 --> 00:31:26,720
to the either the full version of this

831
00:31:26,240 --> 00:31:28,720
talk

832
00:31:26,720 --> 00:31:29,919
which you can find um recorded on

833
00:31:28,720 --> 00:31:32,720
youtube or

834
00:31:29,919 --> 00:31:34,240
the paper which of course you can also

835
00:31:32,720 --> 00:31:36,799
find on eprint

836
00:31:34,240 --> 00:31:38,320
and i'm happy to answer questions you

837
00:31:36,799 --> 00:31:40,799
have

838
00:31:38,320 --> 00:31:43,039
okay so we have time for maybe uh one

839
00:31:40,799 --> 00:31:46,879
quick question uh before the next

840
00:31:43,039 --> 00:31:49,919
talk uh do we have anything on tulip or

841
00:31:46,880 --> 00:31:50,480
any other questions i don't see any on

842
00:31:49,919 --> 00:31:52,330
zulip

843
00:31:50,480 --> 00:31:53,600
or on zoom um

844
00:31:52,330 --> 00:31:55,439
[Music]

845
00:31:53,600 --> 00:31:58,158
so if anyone wants to ask one please

846
00:31:55,440 --> 00:32:00,000
please put it in the chat

847
00:31:58,159 --> 00:32:02,159
i guess i can ask one that that i was

848
00:32:00,000 --> 00:32:04,080
thinking about which is which is um

849
00:32:02,159 --> 00:32:06,159
this idea of kind of having an interval

850
00:32:04,080 --> 00:32:08,158
wise specification is neat uh

851
00:32:06,159 --> 00:32:09,519
especially for this this kind of

852
00:32:08,159 --> 00:32:10,720
commitment problem that you're talking

853
00:32:09,519 --> 00:32:12,320
about and i guess i'm wondering if you

854
00:32:10,720 --> 00:32:14,240
thought about other applications of this

855
00:32:12,320 --> 00:32:15,439
whether whether this could be useful in

856
00:32:14,240 --> 00:32:18,480
other settings where

857
00:32:15,440 --> 00:32:20,480
where simulation is difficult so

858
00:32:18,480 --> 00:32:22,880
in our work we had like two more

859
00:32:20,480 --> 00:32:24,159
examples beyond this one i here briefly

860
00:32:22,880 --> 00:32:27,120
described

861
00:32:24,159 --> 00:32:28,000
um one of them is identity based

862
00:32:27,120 --> 00:32:30,158
encryption

863
00:32:28,000 --> 00:32:31,679
where there was previously an

864
00:32:30,159 --> 00:32:35,039
impossibility result

865
00:32:31,679 --> 00:32:37,360
by um maurer matt and hofheinz

866
00:32:35,039 --> 00:32:38,799
that said that in the standard model you

867
00:32:37,360 --> 00:32:42,719
don't get what you would

868
00:32:38,799 --> 00:32:45,760
the functionality would like to have

869
00:32:42,720 --> 00:32:49,200
and it this is also to the

870
00:32:45,760 --> 00:32:50,640
this kind of commitment problem and here

871
00:32:49,200 --> 00:32:53,200
we

872
00:32:50,640 --> 00:32:55,360
gave an alternative formalization using

873
00:32:53,200 --> 00:32:56,159
those interval wise guarantees that

874
00:32:55,360 --> 00:32:58,559
turns out

875
00:32:56,159 --> 00:33:00,399
to be equivalent to the standard game

876
00:32:58,559 --> 00:33:04,000
based

877
00:33:00,399 --> 00:33:07,518
in the cpa notion

878
00:33:04,000 --> 00:33:10,320
and as a second example we looked at

879
00:33:07,519 --> 00:33:10,880
coin tossing via commitments i mean also

880
00:33:10,320 --> 00:33:13,120
there

881
00:33:10,880 --> 00:33:14,480
if you want to have uc commitments

882
00:33:13,120 --> 00:33:17,199
they're very useful but

883
00:33:14,480 --> 00:33:19,600
unfortunately they need set up so we

884
00:33:17,200 --> 00:33:20,799
provided the weaker notion of commitment

885
00:33:19,600 --> 00:33:24,158
from which you then

886
00:33:20,799 --> 00:33:28,480
still can get some kind of seemingly

887
00:33:24,159 --> 00:33:32,159
useful coin tossing functionality

888
00:33:28,480 --> 00:33:35,279
okay thanks um all right so i think

889
00:33:32,159 --> 00:33:38,559
we can move on to our next paper

890
00:33:35,279 --> 00:33:41,200
so next paper is indifferentiability for

891
00:33:38,559 --> 00:33:41,840
public key crypto systems by uh mark

892
00:33:41,200 --> 00:33:45,679
gendry

893
00:33:41,840 --> 00:33:46,959
and uh kong zhang um and i believe kang

894
00:33:45,679 --> 00:33:52,320
will be giving the talk

895
00:33:46,960 --> 00:33:55,760
so uh thank you and take it away hello

896
00:33:52,320 --> 00:33:57,918
hi this is his song and next i'd like to

897
00:33:55,760 --> 00:34:00,320
give the talk of my recent work

898
00:33:57,919 --> 00:34:01,600
which is individuality for public key

899
00:34:00,320 --> 00:34:03,519
computer system

900
00:34:01,600 --> 00:34:06,639
and this is the joint work with max

901
00:34:03,519 --> 00:34:10,079
andre okay let's start

902
00:34:06,640 --> 00:34:11,520
oh uh in the real world when we design a

903
00:34:10,079 --> 00:34:14,320
crypto parameters

904
00:34:11,520 --> 00:34:15,359
it would be very hard to predict how it

905
00:34:14,320 --> 00:34:17,679
would be this

906
00:34:15,359 --> 00:34:18,960
uh would how it would be it would be

907
00:34:17,679 --> 00:34:22,000
used in the

908
00:34:18,960 --> 00:34:23,440
real systems for instance here we design

909
00:34:22,000 --> 00:34:26,639
a public encryption

910
00:34:23,440 --> 00:34:27,440
and maybe in some systems the software

911
00:34:26,639 --> 00:34:30,639
developer

912
00:34:27,440 --> 00:34:33,280
want to want it to be cca secure

913
00:34:30,639 --> 00:34:34,639
and maybe in other systems they wanted

914
00:34:33,280 --> 00:34:38,000
to be liquid resilient

915
00:34:34,639 --> 00:34:41,119
or related related key attacks secure

916
00:34:38,000 --> 00:34:43,679
and so forth and the fact is that

917
00:34:41,119 --> 00:34:44,879
the schemes that achieve different

918
00:34:43,679 --> 00:34:48,320
security notions

919
00:34:44,879 --> 00:34:50,799
are quite quite distinct and even worse

920
00:34:48,320 --> 00:34:53,200
the software developer maybe even don't

921
00:34:50,800 --> 00:34:56,240
know what kind of security they want

922
00:34:53,199 --> 00:34:57,200
they want to they want to use and maybe

923
00:34:56,239 --> 00:34:59,680
they just

924
00:34:57,200 --> 00:35:01,839
plug the primitives into their systems

925
00:34:59,680 --> 00:35:02,879
and which is quite standard for the

926
00:35:01,839 --> 00:35:05,520
security

927
00:35:02,880 --> 00:35:06,400
so a natural question for this is that

928
00:35:05,520 --> 00:35:10,560
can we design

929
00:35:06,400 --> 00:35:12,560
a magic scheme that capture all of the

930
00:35:10,560 --> 00:35:13,599
the security notions even for the

931
00:35:12,560 --> 00:35:17,200
unknown

932
00:35:13,599 --> 00:35:17,839
security models and a typical solution

933
00:35:17,200 --> 00:35:20,319
for this

934
00:35:17,839 --> 00:35:20,960
is firstly consider about the idealized

935
00:35:20,320 --> 00:35:23,359
model

936
00:35:20,960 --> 00:35:24,400
and here let's have a recap for the

937
00:35:23,359 --> 00:35:27,119
heart functions

938
00:35:24,400 --> 00:35:27,839
the idealized model is just a random

939
00:35:27,119 --> 00:35:30,240
oracle and

940
00:35:27,839 --> 00:35:31,520
for block cipher is the random kids

941
00:35:30,240 --> 00:35:35,439
random cadence fermentation

942
00:35:31,520 --> 00:35:37,839
and for the groups the

943
00:35:35,440 --> 00:35:39,440
the well-known idealized model is

944
00:35:37,839 --> 00:35:42,640
generic group model

945
00:35:39,440 --> 00:35:43,440
and while interesting without a very

946
00:35:42,640 --> 00:35:45,839
interesting

947
00:35:43,440 --> 00:35:46,720
result recent work by bubble sound for

948
00:35:45,839 --> 00:35:50,078
jim is

949
00:35:46,720 --> 00:35:51,279
they formalize the idealized version for

950
00:35:50,079 --> 00:35:54,640
secretion as

951
00:35:51,280 --> 00:35:57,200
random randomized random kid injection

952
00:35:54,640 --> 00:35:58,720
and the question is what's the case in

953
00:35:57,200 --> 00:36:01,279
the public encryptions and

954
00:35:58,720 --> 00:36:03,520
this one is quite unknown yet and that's

955
00:36:01,280 --> 00:36:05,839
our work about

956
00:36:03,520 --> 00:36:06,640
okay in in this work we explore three

957
00:36:05,839 --> 00:36:08,880
parameters

958
00:36:06,640 --> 00:36:09,759
in the public sighting which are in

959
00:36:08,880 --> 00:36:12,160
non-integrity

960
00:36:09,760 --> 00:36:13,520
exchange the neck the public encryption

961
00:36:12,160 --> 00:36:16,560
and the digital signature

962
00:36:13,520 --> 00:36:18,320
and we propose the three response three

963
00:36:16,560 --> 00:36:21,040
response corresponding

964
00:36:18,320 --> 00:36:23,200
ideal notions i do like ideal pke and

965
00:36:21,040 --> 00:36:25,200
ideal signatures and due to time limits

966
00:36:23,200 --> 00:36:27,439
we as in this show talk we will only

967
00:36:25,200 --> 00:36:29,279
focus on the neck

968
00:36:27,440 --> 00:36:30,640
okay the question is what is what should

969
00:36:29,280 --> 00:36:34,320
be the definition of

970
00:36:30,640 --> 00:36:36,240
ideal neck as we discussed about which

971
00:36:34,320 --> 00:36:37,680
we know that it should be idealized

972
00:36:36,240 --> 00:36:41,279
model for neck

973
00:36:37,680 --> 00:36:43,919
and how could we interpret it to do that

974
00:36:41,280 --> 00:36:44,560
we first firstly simplified the neck as

975
00:36:43,920 --> 00:36:47,599
follows

976
00:36:44,560 --> 00:36:48,640
it consists of two algorithms caging and

977
00:36:47,599 --> 00:36:50,800
the shared key

978
00:36:48,640 --> 00:36:51,680
where the key only takes the secret key

979
00:36:50,800 --> 00:36:54,000
as input and

980
00:36:51,680 --> 00:36:55,598
outputs the public key while the shared

981
00:36:54,000 --> 00:36:56,160
key takes the one public key and the

982
00:36:55,599 --> 00:36:58,320
wash

983
00:36:56,160 --> 00:36:59,920
and one secure key as input and output

984
00:36:58,320 --> 00:37:02,079
the corresponding shared key

985
00:36:59,920 --> 00:37:04,000
with the correctness that z key of

986
00:37:02,079 --> 00:37:08,160
public key ones

987
00:37:04,000 --> 00:37:10,480
pk1 and sk2 is equal to pk2 and sk1

988
00:37:08,160 --> 00:37:11,920
so let's apply the bubbles on the

989
00:37:10,480 --> 00:37:15,760
fashion side here

990
00:37:11,920 --> 00:37:16,400
and we just formalize the kg as a random

991
00:37:15,760 --> 00:37:20,000
injection

992
00:37:16,400 --> 00:37:20,880
and let's formalize the shared key as a

993
00:37:20,000 --> 00:37:24,079
random

994
00:37:20,880 --> 00:37:24,960
run function does this work actually not

995
00:37:24,079 --> 00:37:28,160
because of

996
00:37:24,960 --> 00:37:29,680
the correctness of the shadow key we

997
00:37:28,160 --> 00:37:31,440
have to guarantee in the following thing

998
00:37:29,680 --> 00:37:35,598
the shared key of pk1

999
00:37:31,440 --> 00:37:39,119
sk2 should should net go to pk2 and sk1

1000
00:37:35,599 --> 00:37:42,400
so together to to give uh to give up

1001
00:37:39,119 --> 00:37:43,520
to give a definition for the ideal neck

1002
00:37:42,400 --> 00:37:46,079
we should do that

1003
00:37:43,520 --> 00:37:46,640
we formalize the dislike as the random

1004
00:37:46,079 --> 00:37:49,680
tuple

1005
00:37:46,640 --> 00:37:53,279
of functions nkg and sk

1006
00:37:49,680 --> 00:37:56,160
associated with three domains x y and z

1007
00:37:53,280 --> 00:37:58,160
where x is the domain of the secret key

1008
00:37:56,160 --> 00:38:00,640
y is the domain of the public key and z

1009
00:37:58,160 --> 00:38:03,680
is the domain of the shared key

1010
00:38:00,640 --> 00:38:06,799
where nkg is a

1011
00:38:03,680 --> 00:38:09,839
injection such that x to y and and

1012
00:38:06,800 --> 00:38:12,880
and sk is a function that maps x times

1013
00:38:09,839 --> 00:38:16,078
y to z where uh

1014
00:38:12,880 --> 00:38:16,800
we also restrict that the correctness

1015
00:38:16,079 --> 00:38:20,480
requirement

1016
00:38:16,800 --> 00:38:23,680
which means for any x one x two in in

1017
00:38:20,480 --> 00:38:27,280
in the x we have that the s k

1018
00:38:23,680 --> 00:38:30,319
x x y and n k d x two is equal to

1019
00:38:27,280 --> 00:38:33,920
x two and k g x one so this is

1020
00:38:30,320 --> 00:38:35,440
uh the definition of the ideal neck

1021
00:38:33,920 --> 00:38:37,040
and the next let's go to the

1022
00:38:35,440 --> 00:38:39,359
construction

1023
00:38:37,040 --> 00:38:41,520
uh the first thing we know that is this

1024
00:38:39,359 --> 00:38:41,920
is idealized model of course this does

1025
00:38:41,520 --> 00:38:44,720
not

1026
00:38:41,920 --> 00:38:46,640
exist in the real world so when we talk

1027
00:38:44,720 --> 00:38:49,040
about the construction we are going to

1028
00:38:46,640 --> 00:38:51,200
apply the individuality framework

1029
00:38:49,040 --> 00:38:52,960
which is proposed by maureen and the

1030
00:38:51,200 --> 00:38:55,200
whole instant

1031
00:38:52,960 --> 00:38:56,000
okay what does this mean it means that

1032
00:38:55,200 --> 00:38:58,720
if we

1033
00:38:56,000 --> 00:38:59,760
which we construct if we give a

1034
00:38:58,720 --> 00:39:02,799
construction

1035
00:38:59,760 --> 00:39:05,359
of c using some random some

1036
00:39:02,800 --> 00:39:06,480
idealized model say random oracle model

1037
00:39:05,359 --> 00:39:09,759
then

1038
00:39:06,480 --> 00:39:10,720
and which is also differentiable from

1039
00:39:09,760 --> 00:39:12,640
the ideal neck

1040
00:39:10,720 --> 00:39:15,520
then it means that our construction is

1041
00:39:12,640 --> 00:39:18,000
as good as the ideal neck

1042
00:39:15,520 --> 00:39:19,759
and let's recap the definition of

1043
00:39:18,000 --> 00:39:22,960
indivisibility

1044
00:39:19,760 --> 00:39:24,800
interfaciability involves two two words

1045
00:39:22,960 --> 00:39:26,320
which are the real words and the ideal

1046
00:39:24,800 --> 00:39:29,119
words in the real world

1047
00:39:26,320 --> 00:39:30,480
it has the constructions and the

1048
00:39:29,119 --> 00:39:33,119
rhetorical model

1049
00:39:30,480 --> 00:39:34,079
and in the out in the ideal world it has

1050
00:39:33,119 --> 00:39:37,119
the nkg

1051
00:39:34,079 --> 00:39:39,920
sk and simulator where the

1052
00:39:37,119 --> 00:39:41,040
adversary has access to all of these

1053
00:39:39,920 --> 00:39:43,440
algorithms

1054
00:39:41,040 --> 00:39:44,400
and the more i want to emphasize is i

1055
00:39:43,440 --> 00:39:47,440
would emphasize

1056
00:39:44,400 --> 00:39:49,359
is that everything here is under

1057
00:39:47,440 --> 00:39:50,400
controlled by the adversary which means

1058
00:39:49,359 --> 00:39:52,799
the secret key

1059
00:39:50,400 --> 00:39:55,520
the message the randomness of the nouns

1060
00:39:52,800 --> 00:39:58,800
are chosen by the adversary and

1061
00:39:55,520 --> 00:39:59,280
and those things can be chosen by any

1062
00:39:58,800 --> 00:40:01,920
way

1063
00:39:59,280 --> 00:40:03,040
any related way that the other three

1064
00:40:01,920 --> 00:40:05,839
wants

1065
00:40:03,040 --> 00:40:07,520
and the next question is where we choose

1066
00:40:05,839 --> 00:40:10,960
infestability

1067
00:40:07,520 --> 00:40:13,440
according to image i'm rh the

1068
00:40:10,960 --> 00:40:14,240
the result we know that if our

1069
00:40:13,440 --> 00:40:16,960
construction

1070
00:40:14,240 --> 00:40:18,479
is indivisible from ideal neck the nerve

1071
00:40:16,960 --> 00:40:20,160
construction is secure in many

1072
00:40:18,480 --> 00:40:23,359
adversarial environments

1073
00:40:20,160 --> 00:40:25,440
in the random oracle model and those

1074
00:40:23,359 --> 00:40:26,400
models include the followings the

1075
00:40:25,440 --> 00:40:28,640
unpredicated

1076
00:40:26,400 --> 00:40:29,920
shared key against active attackers

1077
00:40:28,640 --> 00:40:33,759
liquid resident

1078
00:40:29,920 --> 00:40:35,040
ktm secure rks cure and even sorting

1079
00:40:33,760 --> 00:40:37,920
combined security

1080
00:40:35,040 --> 00:40:39,200
which means our scheme can achieve both

1081
00:40:37,920 --> 00:40:42,400
liquid resilience

1082
00:40:39,200 --> 00:40:46,000
and kdm security and even

1083
00:40:42,400 --> 00:40:47,920
even better we our schemes also

1084
00:40:46,000 --> 00:40:50,240
achieve some annoying security which

1085
00:40:47,920 --> 00:40:52,079
means the securities are known and maybe

1086
00:40:50,240 --> 00:40:55,359
are important and may be used by

1087
00:40:52,079 --> 00:40:57,920
some misused by some software developer

1088
00:40:55,359 --> 00:40:58,799
and as long as the secure notion is

1089
00:40:57,920 --> 00:41:02,640
captured by

1090
00:40:58,800 --> 00:41:04,880
a single single stage game

1091
00:41:02,640 --> 00:41:06,640
okay so let's see the main challenge of

1092
00:41:04,880 --> 00:41:09,280
building that kind of scheme

1093
00:41:06,640 --> 00:41:10,160
we see that the primitives were

1094
00:41:09,280 --> 00:41:13,520
considered about

1095
00:41:10,160 --> 00:41:15,598
is in the public sighting and

1096
00:41:13,520 --> 00:41:17,520
and according to the famous separation

1097
00:41:15,599 --> 00:41:19,920
result by impregnatio and

1098
00:41:17,520 --> 00:41:21,920
rudig we see that run moral code itself

1099
00:41:19,920 --> 00:41:25,119
can never be sufficient

1100
00:41:21,920 --> 00:41:26,800
so we need to add new nutritions to to

1101
00:41:25,119 --> 00:41:28,800
our constructions

1102
00:41:26,800 --> 00:41:30,079
so here's the random oracle and in your

1103
00:41:28,800 --> 00:41:32,560
solution we apply

1104
00:41:30,079 --> 00:41:35,599
some specific standard model neck where

1105
00:41:32,560 --> 00:41:38,000
to get rid of the barrier of the

1106
00:41:35,599 --> 00:41:40,400
the separation results and we are trying

1107
00:41:38,000 --> 00:41:43,440
we are going to try to find uh

1108
00:41:40,400 --> 00:41:44,400
a careful careful way to to put them

1109
00:41:43,440 --> 00:41:47,599
together

1110
00:41:44,400 --> 00:41:48,560
the difficulty is that in the definition

1111
00:41:47,599 --> 00:41:50,960
of a new neck

1112
00:41:48,560 --> 00:41:52,720
there is no structures well for the

1113
00:41:50,960 --> 00:41:55,440
standard modal neck

1114
00:41:52,720 --> 00:41:56,480
say the group the group-based neck they

1115
00:41:55,440 --> 00:41:59,680
have structures

1116
00:41:56,480 --> 00:42:01,920
and we have to carefully make sure that

1117
00:41:59,680 --> 00:42:03,520
using one more code to get rid to get

1118
00:42:01,920 --> 00:42:06,960
rid of those structures

1119
00:42:03,520 --> 00:42:10,000
and make sure they come by to uh

1120
00:42:06,960 --> 00:42:12,400
properly they come by properly

1121
00:42:10,000 --> 00:42:14,400
and here is the summary of the work we

1122
00:42:12,400 --> 00:42:16,480
firstly proposed the three

1123
00:42:14,400 --> 00:42:18,240
new notions which we called ideolac

1124
00:42:16,480 --> 00:42:21,599
ideopke and the ideal

1125
00:42:18,240 --> 00:42:22,000
signatures and then we firstly bring in

1126
00:42:21,599 --> 00:42:24,000
the

1127
00:42:22,000 --> 00:42:25,200
individuality to the public sighting

1128
00:42:24,000 --> 00:42:28,800
where we built

1129
00:42:25,200 --> 00:42:31,118
the individual neck from random oracle

1130
00:42:28,800 --> 00:42:33,760
plus double strong cdh assumption

1131
00:42:31,119 --> 00:42:36,319
whereas this double strong cdhch

1132
00:42:33,760 --> 00:42:38,000
means that the cdh associated with

1133
00:42:36,319 --> 00:42:41,279
steedah oracle

1134
00:42:38,000 --> 00:42:44,319
and based on the results we built

1135
00:42:41,280 --> 00:42:46,640
an individual pke from ideal neck

1136
00:42:44,319 --> 00:42:48,319
i do like plaster and molecules and

1137
00:42:46,640 --> 00:42:50,560
apparently we also

1138
00:42:48,319 --> 00:42:52,000
built the differentiable signature from

1139
00:42:50,560 --> 00:42:55,839
random oracles from

1140
00:42:52,000 --> 00:42:59,760
plus the linear ddh assumptions and

1141
00:42:55,839 --> 00:43:02,160
that's all thanks any question

1142
00:42:59,760 --> 00:43:04,480
all right uh thank you uh so we're

1143
00:43:02,160 --> 00:43:06,720
running a little bit uh behind time

1144
00:43:04,480 --> 00:43:08,319
uh right now um so i think we'll go

1145
00:43:06,720 --> 00:43:10,480
ahead and start the next uh

1146
00:43:08,319 --> 00:43:13,279
talk uh if you have a question go ahead

1147
00:43:10,480 --> 00:43:16,720
type it type it into zoom

1148
00:43:13,280 --> 00:43:19,760
or zulup and we'll take it

1149
00:43:16,720 --> 00:43:22,160
at the end of the session so our next

1150
00:43:19,760 --> 00:43:23,440
uh our next talk is quantifying the

1151
00:43:22,160 --> 00:43:26,640
security cost

1152
00:43:23,440 --> 00:43:29,440
of migrating protocols to practice uh

1153
00:43:26,640 --> 00:43:31,598
this is by chris patton and uh tom tritt

1154
00:43:29,440 --> 00:43:32,560
tom shrimpton and i believe uh chris is

1155
00:43:31,599 --> 00:43:35,280
planning to give the

1156
00:43:32,560 --> 00:43:37,040
talk um it looks like we can see uh

1157
00:43:35,280 --> 00:43:38,720
presenter view right now uh is there a

1158
00:43:37,040 --> 00:43:41,839
way to change

1159
00:43:38,720 --> 00:43:43,839
uh swap that uh

1160
00:43:41,839 --> 00:43:45,040
i think there's maybe swap displays at

1161
00:43:43,839 --> 00:43:49,359
the top hi

1162
00:43:45,040 --> 00:43:49,359
uh yeah sorry hold on just a second all

1163
00:43:52,839 --> 00:43:57,520
right

1164
00:43:54,800 --> 00:43:59,440
perfect how's that perfect thanks cool

1165
00:43:57,520 --> 00:44:02,880
thanks sorry about the technical issue

1166
00:43:59,440 --> 00:44:05,440
um everyone can hear me okay okay

1167
00:44:02,880 --> 00:44:07,359
so uh thank you um so like the last talk

1168
00:44:05,440 --> 00:44:08,079
this next paper considers a novel

1169
00:44:07,359 --> 00:44:10,640
application

1170
00:44:08,079 --> 00:44:11,680
of indifferentiability in particular

1171
00:44:10,640 --> 00:44:14,078
though our goal here

1172
00:44:11,680 --> 00:44:16,000
is to account for discrepancies between

1173
00:44:14,079 --> 00:44:17,760
real-world cryptographic protocols

1174
00:44:16,000 --> 00:44:19,760
and the security proofs that support

1175
00:44:17,760 --> 00:44:20,880
them so to explain what this means let

1176
00:44:19,760 --> 00:44:23,680
me start off with a simple

1177
00:44:20,880 --> 00:44:25,280
motivating example the latest version of

1178
00:44:23,680 --> 00:44:28,078
tls tls 1.3

1179
00:44:25,280 --> 00:44:30,560
is widely considered a sex success story

1180
00:44:28,079 --> 00:44:32,800
for the provable security methodology

1181
00:44:30,560 --> 00:44:34,160
what sets 1.3 apart from earlier

1182
00:44:32,800 --> 00:44:36,000
versions of the protocol is that

1183
00:44:34,160 --> 00:44:38,879
security proofs were pursued during

1184
00:44:36,000 --> 00:44:41,280
the standardization process so in that

1185
00:44:38,880 --> 00:44:43,839
spirit an early draft of 1.3 was based

1186
00:44:41,280 --> 00:44:46,160
on a protocol called optls

1187
00:44:43,839 --> 00:44:47,680
optls itself has a security proof and it

1188
00:44:46,160 --> 00:44:50,879
was designed to meet the needs

1189
00:44:47,680 --> 00:44:52,640
of the new standard even so significant

1190
00:44:50,880 --> 00:44:54,319
changes were made to optls in the

1191
00:44:52,640 --> 00:44:57,440
process of translating it

1192
00:44:54,319 --> 00:44:59,440
into the draft of tls 1.3 and this is

1193
00:44:57,440 --> 00:45:02,079
typical of the standardization process

1194
00:44:59,440 --> 00:45:03,760
actually a protocol's original designers

1195
00:45:02,079 --> 00:45:05,359
won't be able to foresee all of the

1196
00:45:03,760 --> 00:45:06,640
practical considerations that the

1197
00:45:05,359 --> 00:45:09,119
standard needs to address

1198
00:45:06,640 --> 00:45:10,640
so changes are often necessary but it

1199
00:45:09,119 --> 00:45:11,440
does raise i think an interesting

1200
00:45:10,640 --> 00:45:13,520
question

1201
00:45:11,440 --> 00:45:15,440
what if any of the provable security

1202
00:45:13,520 --> 00:45:18,720
that supported the original protocol

1203
00:45:15,440 --> 00:45:20,480
is inherited by the standard and it

1204
00:45:18,720 --> 00:45:22,078
turns out this problem comes up a lot in

1205
00:45:20,480 --> 00:45:24,079
real world cryptography

1206
00:45:22,079 --> 00:45:25,280
standardizing implementing and deploying

1207
00:45:24,079 --> 00:45:27,440
cryptographic systems

1208
00:45:25,280 --> 00:45:29,040
involves practical considerations that

1209
00:45:27,440 --> 00:45:31,200
are often not fully addressed in the

1210
00:45:29,040 --> 00:45:32,960
design of the original system

1211
00:45:31,200 --> 00:45:35,279
changing a system to address these is

1212
00:45:32,960 --> 00:45:37,200
risky because it can lead to an attacks

1213
00:45:35,280 --> 00:45:38,400
not accounted for by the existing

1214
00:45:37,200 --> 00:45:40,319
analysis

1215
00:45:38,400 --> 00:45:41,760
so the subject of this paper is this

1216
00:45:40,319 --> 00:45:44,720
task of deciding

1217
00:45:41,760 --> 00:45:46,480
if a given translation is secure that is

1218
00:45:44,720 --> 00:45:47,439
whether a security property that's been

1219
00:45:46,480 --> 00:45:50,079
proven for some

1220
00:45:47,440 --> 00:45:52,480
reference system also holds for the real

1221
00:45:50,079 --> 00:45:54,640
system derived from it

1222
00:45:52,480 --> 00:45:55,920
in a bit more detail suppose that we

1223
00:45:54,640 --> 00:45:58,078
have a reduction

1224
00:45:55,920 --> 00:45:59,280
from the hardness of some problem p to

1225
00:45:58,079 --> 00:46:01,760
the security of

1226
00:45:59,280 --> 00:46:03,440
our reference system y and we want to

1227
00:46:01,760 --> 00:46:04,400
know if there's also a reduction from

1228
00:46:03,440 --> 00:46:08,640
the hardness of p

1229
00:46:04,400 --> 00:46:10,319
to the security of the real system x

1230
00:46:08,640 --> 00:46:12,480
put simply what we want to know is if we

1231
00:46:10,319 --> 00:46:14,319
can modify the existing proof for y

1232
00:46:12,480 --> 00:46:17,280
to account for the discrepancies between

1233
00:46:14,319 --> 00:46:19,520
the real system and the reference system

1234
00:46:17,280 --> 00:46:20,960
now a rigorous treatment of this problem

1235
00:46:19,520 --> 00:46:23,759
requires us to generate

1236
00:46:20,960 --> 00:46:24,240
a fresh proof but depending on on how

1237
00:46:23,760 --> 00:46:26,079
different

1238
00:46:24,240 --> 00:46:27,439
x is from y that is the real system from

1239
00:46:26,079 --> 00:46:29,359
the reference system

1240
00:46:27,440 --> 00:46:31,920
this work is likely to significantly

1241
00:46:29,359 --> 00:46:33,839
overlap with the existing analysis

1242
00:46:31,920 --> 00:46:36,240
so the question we asked here is whether

1243
00:46:33,839 --> 00:46:36,560
it's possible to use what we know about

1244
00:46:36,240 --> 00:46:38,160
y

1245
00:46:36,560 --> 00:46:40,240
that is the theorem that's already

1246
00:46:38,160 --> 00:46:40,640
established to prove what we want to

1247
00:46:40,240 --> 00:46:44,799
know

1248
00:46:40,640 --> 00:46:46,879
about x so what we do in this work is

1249
00:46:44,800 --> 00:46:48,720
formalize the conditions under which

1250
00:46:46,880 --> 00:46:51,040
there's a black box reduction from the

1251
00:46:48,720 --> 00:46:53,040
security of y to the security of x

1252
00:46:51,040 --> 00:46:55,200
so to show that a given translation is

1253
00:46:53,040 --> 00:46:57,040
secure it suffices to prove that this

1254
00:46:55,200 --> 00:46:59,118
property holds

1255
00:46:57,040 --> 00:47:00,640
so the main contribution of our paper is

1256
00:46:59,119 --> 00:47:02,880
a formal framework for making

1257
00:47:00,640 --> 00:47:04,480
these kinds of arguments and it works

1258
00:47:02,880 --> 00:47:06,319
for a wide range of systems

1259
00:47:04,480 --> 00:47:08,480
and security goals that is game-based

1260
00:47:06,319 --> 00:47:10,560
security goals

1261
00:47:08,480 --> 00:47:12,480
so at the core of this framework is as

1262
00:47:10,560 --> 00:47:14,160
as is a generalized notion of

1263
00:47:12,480 --> 00:47:15,839
indifferentiability

1264
00:47:14,160 --> 00:47:17,359
so the classic no application of

1265
00:47:15,839 --> 00:47:19,200
indifferentiability that is

1266
00:47:17,359 --> 00:47:21,359
the one i think most people are familiar

1267
00:47:19,200 --> 00:47:23,118
with is to the design of hash functions

1268
00:47:21,359 --> 00:47:24,799
where one wants to know if it's safe to

1269
00:47:23,119 --> 00:47:26,480
instantiate a random oracle with a

1270
00:47:24,800 --> 00:47:29,119
particular function

1271
00:47:26,480 --> 00:47:31,040
but this notion is much more the the

1272
00:47:29,119 --> 00:47:34,240
notion is a lot more general than this

1273
00:47:31,040 --> 00:47:36,160
as we saw in the last talk in general

1274
00:47:34,240 --> 00:47:38,240
indifferentiability asks an adversary to

1275
00:47:36,160 --> 00:47:40,319
distinguish between two experiments

1276
00:47:38,240 --> 00:47:41,759
one in which interacts with some system

1277
00:47:40,319 --> 00:47:43,359
x and another

1278
00:47:41,760 --> 00:47:45,280
within which it interacts with some

1279
00:47:43,359 --> 00:47:47,440
system y so

1280
00:47:45,280 --> 00:47:48,640
this notion um i think is very well

1281
00:47:47,440 --> 00:47:50,800
suited for the analysis

1282
00:47:48,640 --> 00:47:53,279
of simple primitives like hash functions

1283
00:47:50,800 --> 00:47:54,960
or even more complex ones like the

1284
00:47:53,280 --> 00:47:56,319
various public key primitives that we

1285
00:47:54,960 --> 00:47:59,599
saw in the last talk

1286
00:47:56,319 --> 00:48:02,160
so um but what about our application

1287
00:47:59,599 --> 00:48:04,319
well protocols um i think are inherently

1288
00:48:02,160 --> 00:48:06,720
more complex than primitives

1289
00:48:04,319 --> 00:48:08,800
at least in in regards to how the

1290
00:48:06,720 --> 00:48:11,520
adversary interacts with them

1291
00:48:08,800 --> 00:48:13,119
so so in this work we we decided to

1292
00:48:11,520 --> 00:48:14,160
define a generalization of

1293
00:48:13,119 --> 00:48:15,520
indifferentiability

1294
00:48:14,160 --> 00:48:17,680
which we call shared resource and

1295
00:48:15,520 --> 00:48:20,079
differentiability that helps us to tame

1296
00:48:17,680 --> 00:48:22,000
some of this complexity in the analysis

1297
00:48:20,079 --> 00:48:23,599
so i'm and i'm happy to discuss

1298
00:48:22,000 --> 00:48:26,480
particular differences between

1299
00:48:23,599 --> 00:48:28,640
our notion here and the usual one in the

1300
00:48:26,480 --> 00:48:30,480
q a part of the talk

1301
00:48:28,640 --> 00:48:31,839
finally let me just briefly mention the

1302
00:48:30,480 --> 00:48:32,720
case study that we looked at in this

1303
00:48:31,839 --> 00:48:35,040
work

1304
00:48:32,720 --> 00:48:35,839
there's been a lot of recent interest in

1305
00:48:35,040 --> 00:48:37,599
integrating

1306
00:48:35,839 --> 00:48:39,839
password authenticated key exchange into

1307
00:48:37,599 --> 00:48:41,839
tls which would allow using passwords

1308
00:48:39,839 --> 00:48:43,759
alongside of traditional certificates

1309
00:48:41,839 --> 00:48:45,839
so that tls could be used without solely

1310
00:48:43,760 --> 00:48:47,359
relying on the web pki for

1311
00:48:45,839 --> 00:48:49,119
authentication

1312
00:48:47,359 --> 00:48:51,359
so what we did in this work is we

1313
00:48:49,119 --> 00:48:52,319
started with um a generic pick extension

1314
00:48:51,359 --> 00:48:54,400
for tls

1315
00:48:52,319 --> 00:48:56,240
proposed by barnes and friel and we

1316
00:48:54,400 --> 00:48:56,720
showed how to securely instantiate it

1317
00:48:56,240 --> 00:48:59,598
with a

1318
00:48:56,720 --> 00:49:01,118
with a particular peg protocol and we

1319
00:48:59,599 --> 00:49:02,319
proved that the execution of this

1320
00:49:01,119 --> 00:49:04,160
extension is

1321
00:49:02,319 --> 00:49:06,319
shared resource indifferential from the

1322
00:49:04,160 --> 00:49:08,640
execution of the base pake

1323
00:49:06,319 --> 00:49:09,520
which implies that tls when used with

1324
00:49:08,640 --> 00:49:11,839
this extension

1325
00:49:09,520 --> 00:49:13,680
inherits whatever security property has

1326
00:49:11,839 --> 00:49:14,799
been proven for the base pake

1327
00:49:13,680 --> 00:49:18,399
so i'm going to leave it there and

1328
00:49:14,800 --> 00:49:18,400
answer any questions that you might have

1329
00:49:21,040 --> 00:49:27,119
all right thanks chris

1330
00:49:24,160 --> 00:49:30,319
if you have any questions please ask

1331
00:49:27,119 --> 00:49:34,480
them either on chat.acr.org or

1332
00:49:30,319 --> 00:49:34,480
here in the zoom zoom chat window

1333
00:49:34,800 --> 00:49:37,839
great so i don't see any yet but i'll

1334
00:49:36,880 --> 00:49:40,480
ask um

1335
00:49:37,839 --> 00:49:43,119
ask one so so one kind of important part

1336
00:49:40,480 --> 00:49:44,720
of tls the tls 1.3 process is

1337
00:49:43,119 --> 00:49:46,720
machine checked proofs of correctness

1338
00:49:44,720 --> 00:49:48,799
and have you thought at all about how

1339
00:49:46,720 --> 00:49:50,480
um you know your approach might might

1340
00:49:48,800 --> 00:49:51,760
fit in with that vision of doing

1341
00:49:50,480 --> 00:49:53,040
security proofs for complicated

1342
00:49:51,760 --> 00:49:55,440
protocols

1343
00:49:53,040 --> 00:49:57,119
yeah it's an interesting question so um

1344
00:49:55,440 --> 00:49:59,920
when i was you know when i was

1345
00:49:57,119 --> 00:50:01,040
working on this like after kind of

1346
00:49:59,920 --> 00:50:04,000
submitting the paper

1347
00:50:01,040 --> 00:50:04,960
i came upon this paper about how to do

1348
00:50:04,000 --> 00:50:06,400
um

1349
00:50:04,960 --> 00:50:08,079
machine checked proofs of you know

1350
00:50:06,400 --> 00:50:10,720
universal composability

1351
00:50:08,079 --> 00:50:13,359
and i think that there are probably um

1352
00:50:10,720 --> 00:50:16,879
similarities between

1353
00:50:13,359 --> 00:50:18,720
that how that works and doing uh

1354
00:50:16,880 --> 00:50:20,319
a a uh machine checked proof of

1355
00:50:18,720 --> 00:50:22,160
indifferentiability i think that they're

1356
00:50:20,319 --> 00:50:24,240
probably roughly as complicated i don't

1357
00:50:22,160 --> 00:50:26,399
know how it goes i'm personally

1358
00:50:24,240 --> 00:50:27,759
uh you know i haven't i haven't done

1359
00:50:26,400 --> 00:50:29,520
that that kind of

1360
00:50:27,760 --> 00:50:31,839
provable security that is like machine

1361
00:50:29,520 --> 00:50:33,359
check proofs um but i think that's a

1362
00:50:31,839 --> 00:50:36,000
that i think that's a really interesting

1363
00:50:33,359 --> 00:50:38,558
important direction

1364
00:50:36,000 --> 00:50:39,200
okay looks like we have one more uh

1365
00:50:38,559 --> 00:50:42,800
question

1366
00:50:39,200 --> 00:50:45,680
on uh online um so

1367
00:50:42,800 --> 00:50:47,520
let's see joseph uh jaeger asked have

1368
00:50:45,680 --> 00:50:49,759
you considered other applications where

1369
00:50:47,520 --> 00:50:54,000
your definition might be applicable

1370
00:50:49,760 --> 00:50:55,839
um will sr indifferentiability be easily

1371
00:50:54,000 --> 00:50:58,400
applicable or will modifications or

1372
00:50:55,839 --> 00:50:59,839
extensions to protocols have to be

1373
00:50:58,400 --> 00:51:01,440
carefully chosen to fit within the

1374
00:50:59,839 --> 00:51:04,720
framework

1375
00:51:01,440 --> 00:51:07,440
um so i think the the

1376
00:51:04,720 --> 00:51:09,200
the hard part of this work was coming up

1377
00:51:07,440 --> 00:51:12,240
with um

1378
00:51:09,200 --> 00:51:15,359
a very general notion a very general

1379
00:51:12,240 --> 00:51:17,040
um notion of interference ability we

1380
00:51:15,359 --> 00:51:17,920
wanted to really do a lot of heavy

1381
00:51:17,040 --> 00:51:21,040
lifting

1382
00:51:17,920 --> 00:51:21,599
um that that you see in a lot of

1383
00:51:21,040 --> 00:51:24,880
different

1384
00:51:21,599 --> 00:51:28,000
kinds of of security proofs

1385
00:51:24,880 --> 00:51:29,760
um so in particular so i had a paper at

1386
00:51:28,000 --> 00:51:31,359
crypto 2019

1387
00:51:29,760 --> 00:51:32,960
that fits very neatly into this

1388
00:51:31,359 --> 00:51:35,839
framework there's also

1389
00:51:32,960 --> 00:51:36,880
um there's there's a work by there's a

1390
00:51:35,839 --> 00:51:40,400
work by

1391
00:51:36,880 --> 00:51:42,400
bargavon at all from snp 2016 that

1392
00:51:40,400 --> 00:51:45,119
looked at downgrade resilience for

1393
00:51:42,400 --> 00:51:45,839
for tls and other key exchange protocols

1394
00:51:45,119 --> 00:51:47,760
and and

1395
00:51:45,839 --> 00:51:50,078
the sort of central technical tool in

1396
00:51:47,760 --> 00:51:51,040
that work also fits really nicely into

1397
00:51:50,079 --> 00:51:54,720
this framework

1398
00:51:51,040 --> 00:51:56,400
so it does capture um it it's a very

1399
00:51:54,720 --> 00:51:58,959
general thing that i think can be used

1400
00:51:56,400 --> 00:52:00,640
in a lot of different ways and i'd be

1401
00:51:58,960 --> 00:52:02,559
happy to talk about particular

1402
00:52:00,640 --> 00:52:04,720
applications i've looked at or

1403
00:52:02,559 --> 00:52:06,400
or chat about any any any thoughts you

1404
00:52:04,720 --> 00:52:09,839
might have about how to use this

1405
00:52:06,400 --> 00:52:11,119
joseph and anybody else out there so it

1406
00:52:09,839 --> 00:52:12,400
looks like we should probably move on to

1407
00:52:11,119 --> 00:52:14,240
the next talk but there's some more

1408
00:52:12,400 --> 00:52:16,800
questions coming in on the zoom chat

1409
00:52:14,240 --> 00:52:18,078
and zulu so if you're a speaker please

1410
00:52:16,800 --> 00:52:18,880
look at those channels and then you can

1411
00:52:18,079 --> 00:52:21,280
answer them by

1412
00:52:18,880 --> 00:52:23,520
text in case we don't have time um so

1413
00:52:21,280 --> 00:52:24,079
i'll log into zulip later and look at

1414
00:52:23,520 --> 00:52:25,680
them

1415
00:52:24,079 --> 00:52:27,040
right now i don't have access but thank

1416
00:52:25,680 --> 00:52:28,480
you for the questions i look forward to

1417
00:52:27,040 --> 00:52:31,680
looking at them

1418
00:52:28,480 --> 00:52:35,040
okay all right thanks uh so

1419
00:52:31,680 --> 00:52:36,720
next up we have uh the memory tightness

1420
00:52:35,040 --> 00:52:40,000
of authenticated encryption

1421
00:52:36,720 --> 00:52:43,839
uh this is uh by ashraejit

1422
00:52:40,000 --> 00:52:46,640
gushol uh joseph uh jager and stefano

1423
00:52:43,839 --> 00:52:47,759
tessero um and i believe asherjit is

1424
00:52:46,640 --> 00:52:50,400
giving the

1425
00:52:47,760 --> 00:52:50,400
giving the talk

1426
00:52:56,640 --> 00:53:02,879
hi i am and this is joint work with

1427
00:53:00,160 --> 00:53:05,520
joseph jaeger and stefano tessaro

1428
00:53:02,880 --> 00:53:06,319
very broadly this work asks whether we

1429
00:53:05,520 --> 00:53:08,319
can prove

1430
00:53:06,319 --> 00:53:10,319
time memory trade-offs for authenticated

1431
00:53:08,319 --> 00:53:12,558
encryption

1432
00:53:10,319 --> 00:53:14,319
in general concrete security theorems

1433
00:53:12,559 --> 00:53:16,160
attempt to prove an upper bound on the

1434
00:53:14,319 --> 00:53:17,200
advantage of an adversary in breaking

1435
00:53:16,160 --> 00:53:18,480
security

1436
00:53:17,200 --> 00:53:21,279
in terms of the resources of the

1437
00:53:18,480 --> 00:53:23,200
adversary in most prior work the

1438
00:53:21,280 --> 00:53:24,480
resources considered are an adversary's

1439
00:53:23,200 --> 00:53:26,160
time complexity

1440
00:53:24,480 --> 00:53:28,319
and data complexity are the number of

1441
00:53:26,160 --> 00:53:30,558
queries in this work

1442
00:53:28,319 --> 00:53:32,000
we additionally consider the adversary's

1443
00:53:30,559 --> 00:53:33,520
memory as a resource

1444
00:53:32,000 --> 00:53:35,200
this is important because the

1445
00:53:33,520 --> 00:53:37,119
feasibility of a certain attack

1446
00:53:35,200 --> 00:53:40,000
might be seriously affected by the

1447
00:53:37,119 --> 00:53:42,079
amount of available memory

1448
00:53:40,000 --> 00:53:43,200
even though this question is clearly

1449
00:53:42,079 --> 00:53:45,280
fundamental

1450
00:53:43,200 --> 00:53:46,720
only very recently we have seen some

1451
00:53:45,280 --> 00:53:48,400
prior work on this

1452
00:53:46,720 --> 00:53:51,279
and it has generally taken one of two

1453
00:53:48,400 --> 00:53:53,359
approaches the first gives time memory

1454
00:53:51,280 --> 00:53:55,200
tradeoffs for symmetric encryption

1455
00:53:53,359 --> 00:53:57,200
while the second focuses on either

1456
00:53:55,200 --> 00:53:59,520
giving or proving impossibility of

1457
00:53:57,200 --> 00:54:01,520
memory type reductions

1458
00:53:59,520 --> 00:54:02,960
in this work we shall combine elements

1459
00:54:01,520 --> 00:54:03,440
from both lines of work for the first

1460
00:54:02,960 --> 00:54:05,680
time

1461
00:54:03,440 --> 00:54:07,520
we ask whether we can lift the time

1462
00:54:05,680 --> 00:54:08,399
memory tradeoffs for the confidentiality

1463
00:54:07,520 --> 00:54:10,559
of encryption

1464
00:54:08,400 --> 00:54:11,839
to the based authenticated encryption

1465
00:54:10,559 --> 00:54:14,240
setting

1466
00:54:11,839 --> 00:54:16,240
very briefly the take away message from

1467
00:54:14,240 --> 00:54:18,399
our work is it's complicated

1468
00:54:16,240 --> 00:54:20,640
we provide both positive and negative

1469
00:54:18,400 --> 00:54:22,559
results

1470
00:54:20,640 --> 00:54:24,960
proving time memory trade-off for only

1471
00:54:22,559 --> 00:54:25,520
confidentiality has already been a hard

1472
00:54:24,960 --> 00:54:27,920
problem

1473
00:54:25,520 --> 00:54:29,680
to illustrate this here is a toy example

1474
00:54:27,920 --> 00:54:32,880
of a nonce based encryption scheme

1475
00:54:29,680 --> 00:54:34,799
based on a n-bit block cipher one can

1476
00:54:32,880 --> 00:54:36,720
prove this theorem which is a corollary

1477
00:54:34,800 --> 00:54:38,000
of two previous works one of which makes

1478
00:54:36,720 --> 00:54:40,799
connections to communication

1479
00:54:38,000 --> 00:54:42,319
complexity it proves an upper bound on

1480
00:54:40,799 --> 00:54:43,040
the advantage of distinguishing

1481
00:54:42,319 --> 00:54:44,880
ciphertext

1482
00:54:43,040 --> 00:54:47,520
encrypted under distinct nonsense from

1483
00:54:44,880 --> 00:54:50,640
random which is the standard notion for

1484
00:54:47,520 --> 00:54:53,040
confidentiality of non-based encryption

1485
00:54:50,640 --> 00:54:55,200
in particular the advantage of an

1486
00:54:53,040 --> 00:54:57,599
adversary can be upper bounded in terms

1487
00:54:55,200 --> 00:54:58,960
of its memory and number of encryptions

1488
00:54:57,599 --> 00:55:00,720
and the advantage of breaking the

1489
00:54:58,960 --> 00:55:02,640
underlying block cipher as a pseudo

1490
00:55:00,720 --> 00:55:04,799
random permutation

1491
00:55:02,640 --> 00:55:06,640
the first term here shows that there is

1492
00:55:04,799 --> 00:55:09,119
a time memory trade-off for breaking the

1493
00:55:06,640 --> 00:55:11,440
confidentiality of the scheme

1494
00:55:09,119 --> 00:55:13,359
so we ask whether we can prove similar

1495
00:55:11,440 --> 00:55:15,760
results for a security

1496
00:55:13,359 --> 00:55:18,078
in particular for widely used schemes

1497
00:55:15,760 --> 00:55:20,559
like gcm

1498
00:55:18,079 --> 00:55:23,760
we target the notion of a security that

1499
00:55:20,559 --> 00:55:25,520
combines confidentiality and integrity

1500
00:55:23,760 --> 00:55:27,920
the usual approach is to prove

1501
00:55:25,520 --> 00:55:29,920
separately uh bound on indar security

1502
00:55:27,920 --> 00:55:31,040
that is indistinguishability from random

1503
00:55:29,920 --> 00:55:33,040
ciphertext

1504
00:55:31,040 --> 00:55:34,400
and a bound on ctek security that is

1505
00:55:33,040 --> 00:55:36,319
ciphertext integrity

1506
00:55:34,400 --> 00:55:37,920
and then combine them to show ae

1507
00:55:36,319 --> 00:55:40,240
security

1508
00:55:37,920 --> 00:55:41,119
this can be cast as a concrete security

1509
00:55:40,240 --> 00:55:43,040
theorem that

1510
00:55:41,119 --> 00:55:45,040
upper bounds the advantage against a

1511
00:55:43,040 --> 00:55:48,000
security in terms of the advantages

1512
00:55:45,040 --> 00:55:50,400
against indar and ctek securities

1513
00:55:48,000 --> 00:55:51,760
the question however is how does this

1514
00:55:50,400 --> 00:55:55,040
result look like

1515
00:55:51,760 --> 00:55:56,880
when we take memory into account ideally

1516
00:55:55,040 --> 00:55:58,799
we would want a memory type reduction

1517
00:55:56,880 --> 00:56:00,480
that is we would want s1 and s2 to be

1518
00:55:58,799 --> 00:56:03,280
very close to s

1519
00:56:00,480 --> 00:56:05,599
unfortunately the known reduction is not

1520
00:56:03,280 --> 00:56:07,839
memory tight

1521
00:56:05,599 --> 00:56:09,200
in a nutshell our results are centered

1522
00:56:07,839 --> 00:56:10,640
around the question

1523
00:56:09,200 --> 00:56:12,799
whether we can make this reduction

1524
00:56:10,640 --> 00:56:14,480
memory first of all

1525
00:56:12,799 --> 00:56:15,920
we show that we can indeed make this

1526
00:56:14,480 --> 00:56:18,319
reduction memory right

1527
00:56:15,920 --> 00:56:19,040
in the restricted setting of channels

1528
00:56:18,319 --> 00:56:22,240
this setting

1529
00:56:19,040 --> 00:56:24,240
captures usage in protocols like tls we

1530
00:56:22,240 --> 00:56:26,319
introduce memory adaptive reductions

1531
00:56:24,240 --> 00:56:27,759
a new technique for giving memory tight

1532
00:56:26,319 --> 00:56:28,558
reductions but the memory of the

1533
00:56:27,760 --> 00:56:31,440
reduction

1534
00:56:28,559 --> 00:56:33,520
depends on the memory of that person we

1535
00:56:31,440 --> 00:56:35,599
use our memory type reduction to prove

1536
00:56:33,520 --> 00:56:38,960
time memory tradeoffs for a tls like

1537
00:56:35,599 --> 00:56:40,880
channel instantiated with gcm

1538
00:56:38,960 --> 00:56:42,640
secondly we give an impossibility result

1539
00:56:40,880 --> 00:56:44,240
for a memory type reduction in the most

1540
00:56:42,640 --> 00:56:46,400
general setting of nonce based

1541
00:56:44,240 --> 00:56:47,839
authenticated encryption

1542
00:56:46,400 --> 00:56:49,280
next i shall briefly talk about the

1543
00:56:47,839 --> 00:56:52,000
restricted channel setting and our

1544
00:56:49,280 --> 00:56:54,240
memory adaptive reduction

1545
00:56:52,000 --> 00:56:55,839
a channel consists of three algorithms

1546
00:56:54,240 --> 00:56:59,200
the state generation algorithm

1547
00:56:55,839 --> 00:57:00,160
x generates initial sender and receiver

1548
00:56:59,200 --> 00:57:02,399
states

1549
00:57:00,160 --> 00:57:03,680
the sender algorithm takes as input the

1550
00:57:02,400 --> 00:57:05,599
sender state and

1551
00:57:03,680 --> 00:57:07,680
message and outputs the updated sender

1552
00:57:05,599 --> 00:57:09,520
state and a ciphertext

1553
00:57:07,680 --> 00:57:11,598
the receiver algorithm takes as input

1554
00:57:09,520 --> 00:57:13,440
the receiver state and cipher text and

1555
00:57:11,599 --> 00:57:13,839
returns as output the updated receiver

1556
00:57:13,440 --> 00:57:15,839
state

1557
00:57:13,839 --> 00:57:17,920
and either a message or the error symbol

1558
00:57:15,839 --> 00:57:20,078
button

1559
00:57:17,920 --> 00:57:21,760
in terms of security we want to look at

1560
00:57:20,079 --> 00:57:23,760
a setting where the adversary is

1561
00:57:21,760 --> 00:57:26,559
responsible for delivering messages from

1562
00:57:23,760 --> 00:57:28,079
the sender to the receiver obviously the

1563
00:57:26,559 --> 00:57:30,480
adversary should not learn any

1564
00:57:28,079 --> 00:57:32,720
information on what is being sent

1565
00:57:30,480 --> 00:57:34,079
but also we want to prevent adversary

1566
00:57:32,720 --> 00:57:37,598
from delivering messages

1567
00:57:34,079 --> 00:57:39,760
out of order our main theorem

1568
00:57:37,599 --> 00:57:42,079
shows that suitably defined notions of

1569
00:57:39,760 --> 00:57:43,680
confidentiality and ciphertext integrity

1570
00:57:42,079 --> 00:57:46,559
tailored to channels

1571
00:57:43,680 --> 00:57:48,399
imply a security in channels in a memory

1572
00:57:46,559 --> 00:57:50,000
tight way

1573
00:57:48,400 --> 00:57:52,319
in the literature all memory type

1574
00:57:50,000 --> 00:57:54,880
reductions use a small amount of memory

1575
00:57:52,319 --> 00:57:57,200
independent of the underlying adversary

1576
00:57:54,880 --> 00:57:58,799
crucial to our result is that we use a

1577
00:57:57,200 --> 00:58:01,359
reduction whose memory grows

1578
00:57:58,799 --> 00:58:02,799
linearly in the memory of the adversary

1579
00:58:01,359 --> 00:58:04,160
and this is enough to prove memory

1580
00:58:02,799 --> 00:58:06,240
tightness

1581
00:58:04,160 --> 00:58:08,399
we use our result to prove a time memory

1582
00:58:06,240 --> 00:58:11,200
tradeoff for a security of a channel

1583
00:58:08,400 --> 00:58:12,480
instantiated with gcm

1584
00:58:11,200 --> 00:58:14,240
the full version of our paper is

1585
00:58:12,480 --> 00:58:15,760
available on eprint i refer you to the

1586
00:58:14,240 --> 00:58:16,399
longer talk and the paper for more

1587
00:58:15,760 --> 00:58:18,799
details

1588
00:58:16,400 --> 00:58:18,799
thank you

1589
00:58:19,680 --> 00:58:25,919
all right thank you um so we have a few

1590
00:58:23,599 --> 00:58:27,440
uh we have a minute or two for for

1591
00:58:25,920 --> 00:58:28,079
questions if anyone wants to ask a

1592
00:58:27,440 --> 00:58:31,760
question on

1593
00:58:28,079 --> 00:58:33,680
zulip or zoom here um

1594
00:58:31,760 --> 00:58:36,000
so it looks like we have one question

1595
00:58:33,680 --> 00:58:39,040
here that came in uh on zulap

1596
00:58:36,000 --> 00:58:40,640
from rohit chatterjee so

1597
00:58:39,040 --> 00:58:42,480
at first viewing it seems that the

1598
00:58:40,640 --> 00:58:44,240
memory overhead involved

1599
00:58:42,480 --> 00:58:45,599
is in storing query lists by the

1600
00:58:44,240 --> 00:58:47,598
reduction

1601
00:58:45,599 --> 00:58:49,599
would you say that such an overhead is

1602
00:58:47,599 --> 00:58:52,319
intrinsic to all similar reductions

1603
00:58:49,599 --> 00:58:52,319
reconstructions

1604
00:58:52,559 --> 00:58:57,440
yeah so so the the textbook reduction

1605
00:58:55,920 --> 00:58:59,040
in the memory overhead comes from

1606
00:58:57,440 --> 00:59:00,960
storing queries but

1607
00:58:59,040 --> 00:59:02,160
in this channel setting we can get

1608
00:59:00,960 --> 00:59:04,720
around that

1609
00:59:02,160 --> 00:59:05,759
by storing the number of queries which

1610
00:59:04,720 --> 00:59:09,118
is proportional

1611
00:59:05,760 --> 00:59:11,520
to the size of the adversary's memory

1612
00:59:09,119 --> 00:59:12,880
but in the most general setting we prove

1613
00:59:11,520 --> 00:59:16,559
an impossibility result

1614
00:59:12,880 --> 00:59:19,680
of getting around that okay what uh

1615
00:59:16,559 --> 00:59:21,440
um so i guess one question i had is uh

1616
00:59:19,680 --> 00:59:22,799
if instead of you know a channel between

1617
00:59:21,440 --> 00:59:25,520
two parties what if you had

1618
00:59:22,799 --> 00:59:26,319
you know a small small number of parties

1619
00:59:25,520 --> 00:59:29,359
uh

1620
00:59:26,319 --> 00:59:31,599
with uh you know maybe the messages

1621
00:59:29,359 --> 00:59:34,000
weren't uh completely sequential but

1622
00:59:31,599 --> 00:59:34,960
in some bounded sense they they were

1623
00:59:34,000 --> 00:59:37,040
could your

1624
00:59:34,960 --> 00:59:39,359
do you see your results as extending to

1625
00:59:37,040 --> 00:59:41,520
that that type of setting or

1626
00:59:39,359 --> 00:59:43,440
um are there barriers even as soon as

1627
00:59:41,520 --> 00:59:45,599
you introduce more than uh

1628
00:59:43,440 --> 00:59:47,280
more than a two-party uh you know basic

1629
00:59:45,599 --> 00:59:50,480
channel setting

1630
00:59:47,280 --> 00:59:51,200
uh so i so i like for the multi-user

1631
00:59:50,480 --> 00:59:54,480
setting

1632
00:59:51,200 --> 00:59:55,680
uh like i uh i'm i'm not aware of

1633
00:59:54,480 --> 00:59:57,599
like i'm not very sure whether our

1634
00:59:55,680 --> 00:59:59,839
results extend to that and even like

1635
00:59:57,599 --> 01:00:02,000
proving results for confidentiality in

1636
00:59:59,839 --> 01:00:03,200
the multi-user setting is already an

1637
01:00:02,000 --> 01:00:06,799
open problem

1638
01:00:03,200 --> 01:00:07,359
okay um it looks like we have one more

1639
01:00:06,799 --> 01:00:09,680
question

1640
01:00:07,359 --> 01:00:11,200
um so does the model here assume

1641
01:00:09,680 --> 01:00:13,118
unlimited computing power in the

1642
01:00:11,200 --> 01:00:16,160
pre-computation phase or are there still

1643
01:00:13,119 --> 01:00:16,160
computational limits

1644
01:00:16,640 --> 01:00:25,598
so if the question is for the

1645
01:00:21,440 --> 01:00:28,880
uh impossibility results

1646
01:00:25,599 --> 01:00:30,559
i think so i think so then no so we

1647
01:00:28,880 --> 01:00:32,000
the our impossibility is for like

1648
01:00:30,559 --> 01:00:35,680
efficient reductions

1649
01:00:32,000 --> 01:00:35,680
okay okay

1650
01:00:35,920 --> 01:00:39,040
all right um well i think uh let's go

1651
01:00:38,319 --> 01:00:42,160
ahead and

1652
01:00:39,040 --> 01:00:44,319
uh um start our our last talk uh so the

1653
01:00:42,160 --> 01:00:45,759
last talk is time space trade-offs and

1654
01:00:44,319 --> 01:00:48,880
short collisions

1655
01:00:45,760 --> 01:00:49,599
in merkel dam guard hash functions uh um

1656
01:00:48,880 --> 01:00:52,640
this is by

1657
01:00:49,599 --> 01:00:55,760
akshama david cash andrew drucker and

1658
01:00:52,640 --> 01:00:58,879
hotek we and i believe akshama is

1659
01:00:55,760 --> 01:01:01,839
going to give the presentation

1660
01:00:58,880 --> 01:01:03,599
um hello everyone i am akshama and i

1661
01:01:01,839 --> 01:01:04,960
will be presenting the joint work with

1662
01:01:03,599 --> 01:01:07,119
david cash

1663
01:01:04,960 --> 01:01:09,200
andrew drucker and hotek week where we

1664
01:01:07,119 --> 01:01:12,000
study time-space trade-offs in finding

1665
01:01:09,200 --> 01:01:12,000
short collisions

1666
01:01:12,319 --> 01:01:16,799
crediting it all in their work studied a

1667
01:01:14,480 --> 01:01:19,040
model where the adversary works in two

1668
01:01:16,799 --> 01:01:20,960
stages to find salted collisions in

1669
01:01:19,040 --> 01:01:22,839
md-based hash functions that use

1670
01:01:20,960 --> 01:01:25,599
compression function

1671
01:01:22,839 --> 01:01:27,759
h in the pre-computation phase the

1672
01:01:25,599 --> 01:01:30,079
adversary gets unbounded access to the

1673
01:01:27,760 --> 01:01:33,359
compression function edge but gets to

1674
01:01:30,079 --> 01:01:35,760
uh output an advice of bounded size c

1675
01:01:33,359 --> 01:01:36,880
s bits then in the online phase the

1676
01:01:35,760 --> 01:01:39,280
adversary takes this

1677
01:01:36,880 --> 01:01:41,200
s s-bit advice and the challenge salt

1678
01:01:39,280 --> 01:01:43,280
and has to output

1679
01:01:41,200 --> 01:01:45,279
a collision in the md hash on the

1680
01:01:43,280 --> 01:01:49,359
challenge sort making at most

1681
01:01:45,280 --> 01:01:51,760
about key queries to the function h

1682
01:01:49,359 --> 01:01:52,640
this model with pre-computation is hard

1683
01:01:51,760 --> 01:01:54,559
to analyze

1684
01:01:52,640 --> 01:01:57,118
because the queries of the adversary in

1685
01:01:54,559 --> 01:01:59,760
the online phase depend on the oracle

1686
01:01:57,119 --> 01:02:03,200
because it gets an s bit advice on the

1687
01:01:59,760 --> 01:02:03,200
on the oracle as input

1688
01:02:04,559 --> 01:02:10,000
assuming the compression function h

1689
01:02:07,680 --> 01:02:12,319
is is a random article correctly at all

1690
01:02:10,000 --> 01:02:12,880
proved a non-trivial bound of st square

1691
01:02:12,319 --> 01:02:17,119
over

1692
01:02:12,880 --> 01:02:19,359
n on any adversary in this model

1693
01:02:17,119 --> 01:02:21,599
in our work we studied a similar model

1694
01:02:19,359 --> 01:02:23,200
but now the adversary wins only if it

1695
01:02:21,599 --> 01:02:26,880
outputs collisions of b

1696
01:02:23,200 --> 01:02:28,480
or fewer blocks our conjected bound for

1697
01:02:26,880 --> 01:02:31,839
any adversary in our model

1698
01:02:28,480 --> 01:02:31,839
is stb over n

1699
01:02:32,160 --> 01:02:36,799
so in our work we were the first to

1700
01:02:34,640 --> 01:02:39,279
initiate the study of short collision

1701
01:02:36,799 --> 01:02:41,359
finding with pre-computation in md based

1702
01:02:39,280 --> 01:02:44,079
hash functions

1703
01:02:41,359 --> 01:02:46,240
we showed that it is easier to find two

1704
01:02:44,079 --> 01:02:48,079
block collisions as compared to finding

1705
01:02:46,240 --> 01:02:51,839
one block collisions but harder than

1706
01:02:48,079 --> 01:02:51,839
finding unbounded length collisions

1707
01:02:51,920 --> 01:02:55,920
we wanted to find bounds for three block

1708
01:02:54,079 --> 01:02:58,319
collision four block collision and so on

1709
01:02:55,920 --> 01:03:00,160
for arbitrary b block collisions however

1710
01:02:58,319 --> 01:03:02,400
we could not do that and proving the

1711
01:03:00,160 --> 01:03:04,799
bound for all adversary remains an open

1712
01:03:02,400 --> 01:03:04,799
problem

1713
01:03:05,599 --> 01:03:10,000
we could show the optimality only for a

1714
01:03:08,000 --> 01:03:10,720
class of adversaries following the

1715
01:03:10,000 --> 01:03:13,440
template

1716
01:03:10,720 --> 01:03:15,919
of optimal adversaries from prior work

1717
01:03:13,440 --> 01:03:18,559
we refer to these adversaries as zero

1718
01:03:15,920 --> 01:03:20,319
walk adversaries

1719
01:03:18,559 --> 01:03:22,559
next uh i would like to state our

1720
01:03:20,319 --> 01:03:25,119
results more concretely

1721
01:03:22,559 --> 01:03:27,039
uh for b-block collision finding we give

1722
01:03:25,119 --> 01:03:30,319
the best known attack that achieves at

1723
01:03:27,039 --> 01:03:32,240
least order of stb over an advantage

1724
01:03:30,319 --> 01:03:34,400
this attack is an extension of kuretti

1725
01:03:32,240 --> 01:03:37,118
atoll's optimal attack for

1726
01:03:34,400 --> 01:03:37,839
unbounded collisions we believe our

1727
01:03:37,119 --> 01:03:40,160
attack is

1728
01:03:37,839 --> 01:03:41,839
optimal for one because we could not

1729
01:03:40,160 --> 01:03:43,200
find any better attack but more

1730
01:03:41,839 --> 01:03:45,599
importantly

1731
01:03:43,200 --> 01:03:47,680
we know from prior lower bounds that

1732
01:03:45,599 --> 01:03:50,640
there can't be an attack that achieves

1733
01:03:47,680 --> 01:03:51,680
uh better than stb over n advantage that

1734
01:03:50,640 --> 01:03:54,319
works for all b

1735
01:03:51,680 --> 01:03:56,000
less than equal to t and it'll be very

1736
01:03:54,319 --> 01:03:57,920
surprising to see an attack that

1737
01:03:56,000 --> 01:03:59,760
achieves better than stb over an

1738
01:03:57,920 --> 01:04:01,920
advantage for small b

1739
01:03:59,760 --> 01:04:03,280
and then collapses to stb over an

1740
01:04:01,920 --> 01:04:07,119
advantage for as b

1741
01:04:03,280 --> 01:04:10,079
approaches t however

1742
01:04:07,119 --> 01:04:10,559
so our correct bound we believe is stb

1743
01:04:10,079 --> 01:04:12,880
over

1744
01:04:10,559 --> 01:04:14,720
n however we could prove this upper

1745
01:04:12,880 --> 01:04:16,720
bound only for a restricted class of

1746
01:04:14,720 --> 01:04:19,200
zero walk adversaries

1747
01:04:16,720 --> 01:04:20,399
we proved a matching bound of the order

1748
01:04:19,200 --> 01:04:24,000
of st over n

1749
01:04:20,400 --> 01:04:24,000
for two block long collisions

1750
01:04:24,240 --> 01:04:28,160
observe the qualitative jumps between

1751
01:04:26,720 --> 01:04:31,598
one block two block and

1752
01:04:28,160 --> 01:04:31,598
unbounded length collisions

1753
01:04:33,280 --> 01:04:37,599
next i will present our attack for

1754
01:04:35,359 --> 01:04:39,598
finding b block collisions which is

1755
01:04:37,599 --> 01:04:42,960
an extension of attack given by kuretti

1756
01:04:39,599 --> 01:04:45,839
it all for unbounded collisions

1757
01:04:42,960 --> 01:04:47,760
um so here in the pre-computation phase

1758
01:04:45,839 --> 01:04:50,799
adversary picks order of s

1759
01:04:47,760 --> 01:04:51,359
souls and computes hash with messages uh

1760
01:04:50,799 --> 01:04:54,480
that are b

1761
01:04:51,359 --> 01:04:56,720
over two blocks long and zero valued

1762
01:04:54,480 --> 01:04:58,640
and finds collision on the salts thus

1763
01:04:56,720 --> 01:05:00,879
reached and stores them

1764
01:04:58,640 --> 01:05:01,920
then in the online phase given the

1765
01:05:00,880 --> 01:05:04,880
challenge salt

1766
01:05:01,920 --> 01:05:06,400
adversary hashes with t over b messages

1767
01:05:04,880 --> 01:05:09,599
to output one of the

1768
01:05:06,400 --> 01:05:12,079
saws in with stored collisions

1769
01:05:09,599 --> 01:05:13,359
these messages consist only of zero

1770
01:05:12,079 --> 01:05:16,559
value block messages

1771
01:05:13,359 --> 01:05:16,558
after the first block

1772
01:05:17,520 --> 01:05:22,000
it is easy to show that an expectation

1773
01:05:19,760 --> 01:05:23,760
and omega of s being distinct nodes will

1774
01:05:22,000 --> 01:05:25,680
be there in the s trails that are

1775
01:05:23,760 --> 01:05:27,119
generated during the pre-computation

1776
01:05:25,680 --> 01:05:30,160
phase

1777
01:05:27,119 --> 01:05:30,640
and the adversary tries to output one of

1778
01:05:30,160 --> 01:05:33,920
these

1779
01:05:30,640 --> 01:05:36,960
omega sb nodes in b

1780
01:05:33,920 --> 01:05:37,280
times t over b queries achieving at

1781
01:05:36,960 --> 01:05:41,440
least

1782
01:05:37,280 --> 01:05:41,440
order of stb over an advantage

1783
01:05:41,680 --> 01:05:44,960
the two block variation of this attack

1784
01:05:43,680 --> 01:05:50,000
achieves at least

1785
01:05:44,960 --> 01:05:52,880
st over an advantage

1786
01:05:50,000 --> 01:05:55,280
the paper we proved this uh two block

1787
01:05:52,880 --> 01:05:58,000
collision finding attack to be optimal

1788
01:05:55,280 --> 01:05:59,839
via a combination of uh concentration

1789
01:05:58,000 --> 01:06:03,039
and compression techniques

1790
01:05:59,839 --> 01:06:06,400
we wanted to prove uh and and

1791
01:06:03,039 --> 01:06:08,720
bounding a matching stb over n bound uh

1792
01:06:06,400 --> 01:06:10,640
for b block collision finding however

1793
01:06:08,720 --> 01:06:12,558
due to limitations in our compression

1794
01:06:10,640 --> 01:06:14,879
technique we could not prove it

1795
01:06:12,559 --> 01:06:17,119
uh we could prove it only for a class of

1796
01:06:14,880 --> 01:06:19,680
adversaries that we call the zero work

1797
01:06:17,119 --> 01:06:21,520
groceries next i would like to define

1798
01:06:19,680 --> 01:06:23,200
the zero walk adversity so these are

1799
01:06:21,520 --> 01:06:23,920
essentially adversaries that save

1800
01:06:23,200 --> 01:06:26,240
collisions

1801
01:06:23,920 --> 01:06:27,920
on order of s sols in the

1802
01:06:26,240 --> 01:06:30,000
pre-computation phase

1803
01:06:27,920 --> 01:06:33,839
and then in the online phase they run as

1804
01:06:30,000 --> 01:06:33,839
our suggested attack

1805
01:06:33,920 --> 01:06:37,200
the best any zero work adversary could

1806
01:06:36,559 --> 01:06:39,280
do is

1807
01:06:37,200 --> 01:06:41,200
they can find collision for salts that

1808
01:06:39,280 --> 01:06:44,480
have large b depth trees

1809
01:06:41,200 --> 01:06:45,279
uh leading to them and then advantage

1810
01:06:44,480 --> 01:06:48,640
for

1811
01:06:45,280 --> 01:06:52,000
the zero adversary would be s times

1812
01:06:48,640 --> 01:06:55,279
t over b times the maximum tree size

1813
01:06:52,000 --> 01:06:56,640
over n we proved that the largest b

1814
01:06:55,280 --> 01:06:59,520
depth tree has size

1815
01:06:56,640 --> 01:07:00,799
order of b square with high probability

1816
01:06:59,520 --> 01:07:03,920
giving us

1817
01:07:00,799 --> 01:07:05,440
order of stb over n advantage on any

1818
01:07:03,920 --> 01:07:08,400
zero work adversary

1819
01:07:05,440 --> 01:07:10,160
so this proves that our attack is

1820
01:07:08,400 --> 01:07:12,799
optimal among all the zero walk

1821
01:07:10,160 --> 01:07:12,799
adversaries

1822
01:07:12,880 --> 01:07:17,680
thank you and i would be happy to answer

1823
01:07:14,880 --> 01:07:17,680
any questions

1824
01:07:18,880 --> 01:07:25,839
all right uh um thanks uh ashrajit

1825
01:07:21,920 --> 01:07:27,359
uh so um i don't see any questions on uh

1826
01:07:25,839 --> 01:07:30,078
on zolap at the moment

1827
01:07:27,359 --> 01:07:31,440
so i'll um i'll go ahead and ask one so

1828
01:07:30,079 --> 01:07:34,079
i guess the natural question

1829
01:07:31,440 --> 01:07:36,079
here is uh um what are the technical

1830
01:07:34,079 --> 01:07:37,280
challenges that you encounter when

1831
01:07:36,079 --> 01:07:40,400
trying to

1832
01:07:37,280 --> 01:07:45,039
um prove this stb over n bound for

1833
01:07:40,400 --> 01:07:48,000
b greater than uh b greater than two

1834
01:07:45,039 --> 01:07:49,440
um so the biggest uh challenge was the

1835
01:07:48,000 --> 01:07:52,720
compression technique

1836
01:07:49,440 --> 01:07:53,200
so uh a prior work by dodis at all they

1837
01:07:52,720 --> 01:07:55,439
used

1838
01:07:53,200 --> 01:07:56,240
a compression technique where they just

1839
01:07:55,440 --> 01:07:58,559
um

1840
01:07:56,240 --> 01:08:01,038
so if you have collisions in the

1841
01:07:58,559 --> 01:08:02,480
responses you can easily like delete one

1842
01:08:01,039 --> 01:08:05,599
of the response and

1843
01:08:02,480 --> 01:08:06,160
save those number of bits by saving some

1844
01:08:05,599 --> 01:08:08,160
other

1845
01:08:06,160 --> 01:08:10,240
bits but however when we are looking at

1846
01:08:08,160 --> 01:08:12,240
like longer collisions

1847
01:08:10,240 --> 01:08:13,598
these collisions uh you don't

1848
01:08:12,240 --> 01:08:15,759
necessarily have

1849
01:08:13,599 --> 01:08:16,960
as many collisions as the number of

1850
01:08:15,760 --> 01:08:18,080
soils on which you're finding the

1851
01:08:16,960 --> 01:08:20,560
collisions

1852
01:08:18,080 --> 01:08:24,158
like uh the same collision can be part

1853
01:08:20,560 --> 01:08:27,199
of several colliding chains

1854
01:08:24,158 --> 01:08:28,479
in order to essentially uh the in

1855
01:08:27,198 --> 01:08:31,678
precise words the

1856
01:08:28,479 --> 01:08:34,080
issue is that uh the

1857
01:08:31,679 --> 01:08:35,279
collision for finding the collisions in

1858
01:08:34,080 --> 01:08:38,880
one sword are not

1859
01:08:35,279 --> 01:08:41,120
independent of collisions in other salts

1860
01:08:38,880 --> 01:08:42,000
so in order to take care of that we have

1861
01:08:41,120 --> 01:08:43,599
to use conce

1862
01:08:42,000 --> 01:08:46,238
a concentration a concentration

1863
01:08:43,600 --> 01:08:48,880
technique by empowering us on cabinets

1864
01:08:46,238 --> 01:08:50,559
and then uh even we had to like modify

1865
01:08:48,880 --> 01:08:51,520
our compression technique like in the

1866
01:08:50,560 --> 01:08:54,159
sense that

1867
01:08:51,520 --> 01:08:55,520
so do this at all just took the

1868
01:08:54,158 --> 01:08:58,158
compression function

1869
01:08:55,520 --> 01:08:58,719
h as input and like they compressed only

1870
01:08:58,158 --> 01:09:00,639
on h

1871
01:08:58,719 --> 01:09:02,158
but in our compression technique we had

1872
01:09:00,640 --> 01:09:05,199
to like uh compress

1873
01:09:02,158 --> 01:09:06,000
h as well as the salt like we took a set

1874
01:09:05,198 --> 01:09:08,719
of salts and

1875
01:09:06,000 --> 01:09:09,279
then we had to compress that as well and

1876
01:09:08,719 --> 01:09:12,080
um

1877
01:09:09,279 --> 01:09:14,400
not only that um because like there can

1878
01:09:12,080 --> 01:09:16,960
be several types of colliding chains

1879
01:09:14,399 --> 01:09:18,639
so if you have like we had like six

1880
01:09:16,960 --> 01:09:20,319
different types of colliding chains and

1881
01:09:18,640 --> 01:09:22,560
each of these have to be addressed

1882
01:09:20,319 --> 01:09:24,239
differently by the compression technique

1883
01:09:22,560 --> 01:09:24,880
and that was one of the reasons why we

1884
01:09:24,238 --> 01:09:27,678
could not

1885
01:09:24,880 --> 01:09:28,960
like extend it to be like arbitrary b

1886
01:09:27,679 --> 01:09:34,080
because there will be like so many

1887
01:09:28,960 --> 01:09:36,080
different types of colliding chains

1888
01:09:34,080 --> 01:09:37,679
so i don't see any other questions but i

1889
01:09:36,080 --> 01:09:39,439
actually have one one more question for

1890
01:09:37,679 --> 01:09:41,920
you about this paper um

1891
01:09:39,439 --> 01:09:44,080
which which i really enjoyed so so i was

1892
01:09:41,920 --> 01:09:45,920
curious i mean one of the big

1893
01:09:44,080 --> 01:09:48,000
um sort of gaps in our knowledge of

1894
01:09:45,920 --> 01:09:50,640
these auxiliary input type attacks is in

1895
01:09:48,000 --> 01:09:52,399
function inversion where we don't know

1896
01:09:50,640 --> 01:09:54,640
right what the best what the best attack

1897
01:09:52,399 --> 01:09:56,719
is or best lower boundeds for inverting

1898
01:09:54,640 --> 01:09:58,400
functions with reprocessing i'm curious

1899
01:09:56,719 --> 01:09:59,920
if your zero walk adversary is if you

1900
01:09:58,400 --> 01:10:01,199
can prove stronger lower balance for

1901
01:09:59,920 --> 01:10:02,480
function inversion

1902
01:10:01,199 --> 01:10:04,400
if you make a similar type of

1903
01:10:02,480 --> 01:10:06,400
restriction on the adversary have you

1904
01:10:04,400 --> 01:10:09,679
thought about this

1905
01:10:06,400 --> 01:10:09,679
i haven't talked about this

1906
01:10:11,600 --> 01:10:16,159
but i think like these attacks are

1907
01:10:13,600 --> 01:10:18,719
essentially um

1908
01:10:16,159 --> 01:10:20,239
they have been taken from the start like

1909
01:10:18,719 --> 01:10:21,440
all the studies that have been done on

1910
01:10:20,239 --> 01:10:23,440
function inversion

1911
01:10:21,440 --> 01:10:24,719
so these attacks are actually inspired

1912
01:10:23,440 --> 01:10:26,879
from those attacks

1913
01:10:24,719 --> 01:10:29,199
so i don't think that these attacks can

1914
01:10:26,880 --> 01:10:31,679
help in improving those attacks like

1915
01:10:29,199 --> 01:10:33,120
because these are taken from there i

1916
01:10:31,679 --> 01:10:34,800
guess i'm wondering if you're if these

1917
01:10:33,120 --> 01:10:37,440
restricted lower bounds can

1918
01:10:34,800 --> 01:10:38,960
can give new restricted lower bounds uh

1919
01:10:37,440 --> 01:10:40,159
or lower bounds against restricted type

1920
01:10:38,960 --> 01:10:43,199
of adversaries and

1921
01:10:40,159 --> 01:10:44,639
for this other problem okay we haven't

1922
01:10:43,199 --> 01:10:45,440
talked about that but yeah that's an

1923
01:10:44,640 --> 01:10:49,440
interesting

1924
01:10:45,440 --> 01:10:51,759
yeah thing to consider thanks

1925
01:10:49,440 --> 01:10:53,919
all right uh um so it looks like uh

1926
01:10:51,760 --> 01:10:54,960
we're uh running out of time but uh

1927
01:10:53,920 --> 01:10:57,360
thanks to akshama

1928
01:10:54,960 --> 01:10:58,320
and uh all of our uh speakers for this

1929
01:10:57,360 --> 01:11:01,599
session

1930
01:10:58,320 --> 01:11:05,040
um so we have a break now

1931
01:11:01,600 --> 01:11:07,840
until 12 30 when we have a distinguished

1932
01:11:05,040 --> 01:11:09,040
lecture by silvio mccauley so we hope

1933
01:11:07,840 --> 01:11:12,239
you'll

1934
01:11:09,040 --> 01:11:14,960
come back for that talk also uh if you

1935
01:11:12,239 --> 01:11:17,519
had a question you wanted to ask

1936
01:11:14,960 --> 01:11:19,920
you know feel free to log into zulip uh

1937
01:11:17,520 --> 01:11:22,159
you can still ask questions and uh

1938
01:11:19,920 --> 01:11:22,960
we'll encourage authors to you know

1939
01:11:22,159 --> 01:11:25,519
monitor

1940
01:11:22,960 --> 01:11:27,199
uh the chat window if you know i guess

1941
01:11:25,520 --> 01:11:28,320
as a replacement for kind of hallway

1942
01:11:27,199 --> 01:11:32,559
chats uh we'll

1943
01:11:28,320 --> 01:11:34,400
we'll try to use uh use uh zulip as a

1944
01:11:32,560 --> 01:11:36,400
way to interact with authors and ask

1945
01:11:34,400 --> 01:11:39,519
them questions uh even after

1946
01:11:36,400 --> 01:11:41,360
after the session all right so

1947
01:11:39,520 --> 01:11:43,760
thanks everyone and uh we'll we'll take

1948
01:11:41,360 --> 01:11:45,199
a break now

1949
01:11:43,760 --> 01:11:46,960
i just want to make it clear to the

1950
01:11:45,199 --> 01:11:48,320
participants that you need to go back to

1951
01:11:46,960 --> 01:11:50,560
the program

1952
01:11:48,320 --> 01:11:51,440
in order to log into the next session

1953
01:11:50,560 --> 01:11:54,800
which starts

1954
01:11:51,440 --> 01:11:57,919
in under 15 minutes there is

1955
01:11:54,800 --> 01:12:00,000
a zoom room that

1956
01:11:57,920 --> 01:12:01,360
you need to join it's a different zoom

1957
01:12:00,000 --> 01:12:03,760
room from the current one

1958
01:12:01,360 --> 01:12:05,519
thank you everybody and we're no longer

1959
01:12:03,760 --> 01:12:10,640
going to be recording

1960
01:12:05,520 --> 01:12:10,640
um and let's

