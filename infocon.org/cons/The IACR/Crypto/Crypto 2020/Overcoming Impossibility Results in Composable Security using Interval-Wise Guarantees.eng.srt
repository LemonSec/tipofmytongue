1
00:00:02,480 --> 00:00:06,560
welcome to my talk on

2
00:00:04,160 --> 00:00:08,240
overcoming impossibility results in

3
00:00:06,560 --> 00:00:11,360
composable security

4
00:00:08,240 --> 00:00:14,559
using interval wise guarantees this is

5
00:00:11,360 --> 00:00:17,279
trying to work with worldy moder

6
00:00:14,559 --> 00:00:17,840
the main question of this work is how to

7
00:00:17,279 --> 00:00:21,119
best

8
00:00:17,840 --> 00:00:23,840
define security there are essentially

9
00:00:21,119 --> 00:00:26,800
two approaches to defining security

10
00:00:23,840 --> 00:00:28,560
the first one being game-based security

11
00:00:26,800 --> 00:00:31,920
leads to very simple and

12
00:00:28,560 --> 00:00:34,480
minimal security definitions

13
00:00:31,920 --> 00:00:36,160
the downside however is that those

14
00:00:34,480 --> 00:00:39,040
security definitions

15
00:00:36,160 --> 00:00:42,319
not always immediately linked to a real

16
00:00:39,040 --> 00:00:44,399
world execution of the protocol

17
00:00:42,320 --> 00:00:46,399
moreover if we were to build a

18
00:00:44,399 --> 00:00:47,680
cryptographic protocol from many

19
00:00:46,399 --> 00:00:51,120
building blocks

20
00:00:47,680 --> 00:00:51,360
then at each step we will have to prove

21
00:00:51,120 --> 00:00:54,160
an

22
00:00:51,360 --> 00:00:57,280
explicit reduction to the security game

23
00:00:54,160 --> 00:00:59,679
of the underlying primitive

24
00:00:57,280 --> 00:01:00,719
on the other hand their so-called

25
00:00:59,680 --> 00:01:04,640
composable

26
00:01:00,719 --> 00:01:08,479
or simulation based security notions

27
00:01:04,640 --> 00:01:09,360
as they compare an execution of the real

28
00:01:08,479 --> 00:01:12,880
protocol

29
00:01:09,360 --> 00:01:15,360
to the one of an idealized protocol

30
00:01:12,880 --> 00:01:16,158
such a mismatch between the security

31
00:01:15,360 --> 00:01:19,280
notion

32
00:01:16,159 --> 00:01:22,880
and an execution of the protocol

33
00:01:19,280 --> 00:01:25,840
can actually not exist moreover

34
00:01:22,880 --> 00:01:27,119
as they come with a composition theorem

35
00:01:25,840 --> 00:01:30,400
we can easily

36
00:01:27,119 --> 00:01:34,479
build modular protocols without having

37
00:01:30,400 --> 00:01:37,520
to prove reductions at every step

38
00:01:34,479 --> 00:01:40,560
the downside however is that those

39
00:01:37,520 --> 00:01:41,200
security notions are very strong and

40
00:01:40,560 --> 00:01:44,079
thus

41
00:01:41,200 --> 00:01:45,520
lead to less efficient schemes or in

42
00:01:44,079 --> 00:01:48,798
many cases even

43
00:01:45,520 --> 00:01:51,199
impossibility results

44
00:01:48,799 --> 00:01:53,600
a large class of such impossibility

45
00:01:51,200 --> 00:01:56,880
results is caused by the so-called

46
00:01:53,600 --> 00:01:59,520
simulator commitment problem

47
00:01:56,880 --> 00:02:02,479
so let us consider an example of the

48
00:01:59,520 --> 00:02:05,280
commitment problem

49
00:02:02,479 --> 00:02:05,759
let's say alice wants to confidentially

50
00:02:05,280 --> 00:02:09,119
send

51
00:02:05,759 --> 00:02:11,680
a message to bob so

52
00:02:09,119 --> 00:02:12,800
she might use a symmetric encryption

53
00:02:11,680 --> 00:02:16,080
scheme

54
00:02:12,800 --> 00:02:19,360
aimed to achieve this goal

55
00:02:16,080 --> 00:02:21,360
so in a composable security notion

56
00:02:19,360 --> 00:02:22,879
we would compare the real world

57
00:02:21,360 --> 00:02:26,000
execution of

58
00:02:22,879 --> 00:02:29,120
the protocol to

59
00:02:26,000 --> 00:02:32,400
alice and pope just using an

60
00:02:29,120 --> 00:02:36,239
idealized resource such as a secure

61
00:02:32,400 --> 00:02:38,560
channel in the ideal world

62
00:02:36,239 --> 00:02:39,680
and the commitment problem will actually

63
00:02:38,560 --> 00:02:42,879
appear

64
00:02:39,680 --> 00:02:45,440
whenever we assume that the shared

65
00:02:42,879 --> 00:02:46,799
symmetric key alice and pop share might

66
00:02:45,440 --> 00:02:49,440
not just be secure

67
00:02:46,800 --> 00:02:50,080
but maybe at some point will actually

68
00:02:49,440 --> 00:02:52,480
leak to

69
00:02:50,080 --> 00:02:52,480
eve

70
00:02:53,280 --> 00:02:58,239
a bit more concretely in order to prove

71
00:02:56,239 --> 00:03:00,480
the protocol secure

72
00:02:58,239 --> 00:03:02,159
we would have to show that for any

73
00:03:00,480 --> 00:03:04,760
interactive environment

74
00:03:02,159 --> 00:03:07,120
the two worlds are computationally

75
00:03:04,760 --> 00:03:09,840
indistinguishable

76
00:03:07,120 --> 00:03:10,400
so the environment might input any

77
00:03:09,840 --> 00:03:14,319
message

78
00:03:10,400 --> 00:03:18,560
m of his choice and then receive

79
00:03:14,319 --> 00:03:21,440
the ciphertext c at this interface

80
00:03:18,560 --> 00:03:22,560
so in the ideal world the same needs to

81
00:03:21,440 --> 00:03:25,440
happen

82
00:03:22,560 --> 00:03:25,760
so it's the simulator's job to actually

83
00:03:25,440 --> 00:03:28,079
come

84
00:03:25,760 --> 00:03:32,239
up with a cipher text that looks

85
00:03:28,080 --> 00:03:35,680
computationally indistinguishable

86
00:03:32,239 --> 00:03:39,040
as long as the encryption scheme

87
00:03:35,680 --> 00:03:40,319
is actually in cpa secure the simulator

88
00:03:39,040 --> 00:03:43,120
can easily do so

89
00:03:40,319 --> 00:03:43,440
by just encrypting any arbitrary message

90
00:03:43,120 --> 00:03:46,480
of

91
00:03:43,440 --> 00:03:48,879
the appropriate length however

92
00:03:46,480 --> 00:03:50,959
the simulator at this point is now

93
00:03:48,879 --> 00:03:53,760
committed on the ciphertext

94
00:03:50,959 --> 00:03:56,239
c that does not depend on the actual

95
00:03:53,760 --> 00:03:56,239
message

96
00:03:56,720 --> 00:04:04,080
so if in the real world at some point

97
00:04:01,120 --> 00:04:06,879
the key actually leaks to eve then eve

98
00:04:04,080 --> 00:04:10,400
can obviously now decrypt the ciphertext

99
00:04:06,879 --> 00:04:12,959
to obtain the message m hence

100
00:04:10,400 --> 00:04:14,799
we need to reflect that in the ideal

101
00:04:12,959 --> 00:04:16,798
world

102
00:04:14,799 --> 00:04:18,959
as at this point the message is

103
00:04:16,798 --> 00:04:21,839
obviously no longer confidential

104
00:04:18,959 --> 00:04:22,160
a naive attempt might be to just hand

105
00:04:21,839 --> 00:04:24,880
out

106
00:04:22,160 --> 00:04:27,759
the message m at this point to the

107
00:04:24,880 --> 00:04:30,639
simulator as well

108
00:04:27,759 --> 00:04:32,479
however it turns out that for most

109
00:04:30,639 --> 00:04:35,040
encryption scheme

110
00:04:32,479 --> 00:04:36,159
the simulator will still not be able to

111
00:04:35,040 --> 00:04:38,520
come up with a

112
00:04:36,160 --> 00:04:39,680
key k that's not only correctly

113
00:04:38,520 --> 00:04:43,280
distributed

114
00:04:39,680 --> 00:04:45,440
but also makes the ciphertext c decrypt

115
00:04:43,280 --> 00:04:49,039
to this message m

116
00:04:45,440 --> 00:04:51,199
and in fact in order to be able to do so

117
00:04:49,040 --> 00:04:52,960
one needs a so-called non-committing

118
00:04:51,199 --> 00:04:56,080
encryption scheme

119
00:04:52,960 --> 00:04:58,880
such schemes are however not only more

120
00:04:56,080 --> 00:05:01,680
expensive but often also require

121
00:04:58,880 --> 00:05:04,479
additional setup

122
00:05:01,680 --> 00:05:04,880
this sort of raises the question isn't

123
00:05:04,479 --> 00:05:08,080
there

124
00:05:04,880 --> 00:05:10,320
a better way to define this

125
00:05:08,080 --> 00:05:11,280
thing compulsively than saying there is

126
00:05:10,320 --> 00:05:13,919
this only

127
00:05:11,280 --> 00:05:16,400
this ideal channel with the simulator

128
00:05:13,919 --> 00:05:18,880
attached

129
00:05:16,400 --> 00:05:21,280
because in the end it seems that in a

130
00:05:18,880 --> 00:05:22,960
game-based world we don't seem to have a

131
00:05:21,280 --> 00:05:26,159
problem

132
00:05:22,960 --> 00:05:29,280
and moreover um if

133
00:05:26,160 --> 00:05:32,160
we say okay that this scheme is secure

134
00:05:29,280 --> 00:05:35,119
if the key never leaks then why should

135
00:05:32,160 --> 00:05:37,680
it be suddenly insecure if the key can

136
00:05:35,120 --> 00:05:41,039
leak in a thousand year from now

137
00:05:37,680 --> 00:05:43,039
and sort of indicate that maybe eve

138
00:05:41,039 --> 00:05:44,080
already learned something about the

139
00:05:43,039 --> 00:05:47,520
message now

140
00:05:44,080 --> 00:05:49,758
so it seems that rather than having to

141
00:05:47,520 --> 00:05:50,719
always use a non-committing encryption

142
00:05:49,759 --> 00:05:54,240
scheme that

143
00:05:50,720 --> 00:05:56,000
it's rather the simulation based

144
00:05:54,240 --> 00:05:58,880
security notion that's just

145
00:05:56,000 --> 00:05:58,880
too strict

146
00:06:00,400 --> 00:06:06,080
and in particular we can observe

147
00:06:04,000 --> 00:06:07,600
that we don't have any problem to

148
00:06:06,080 --> 00:06:10,960
simulate until

149
00:06:07,600 --> 00:06:12,000
the key is exposed and we don't have any

150
00:06:10,960 --> 00:06:14,638
problem

151
00:06:12,000 --> 00:06:15,440
afterwards it's just we can somehow not

152
00:06:14,639 --> 00:06:18,800
simulate

153
00:06:15,440 --> 00:06:18,800
past this event

154
00:06:19,680 --> 00:06:23,360
yet giving the simulator only the

155
00:06:22,720 --> 00:06:26,479
message

156
00:06:23,360 --> 00:06:28,639
lengths to begin with and asking him to

157
00:06:26,479 --> 00:06:32,000
come up with a fake cipher text

158
00:06:28,639 --> 00:06:34,600
is essentially only something we do

159
00:06:32,000 --> 00:06:35,840
as a proxy to formalize the

160
00:06:34,600 --> 00:06:39,280
confidentiality

161
00:06:35,840 --> 00:06:39,280
until this event

162
00:06:40,319 --> 00:06:44,639
i should mention that there have been a

163
00:06:42,319 --> 00:06:46,720
number of approaches to overcome the

164
00:06:44,639 --> 00:06:49,199
commitment problem

165
00:06:46,720 --> 00:06:50,000
for instance a large body of work

166
00:06:49,199 --> 00:06:53,520
considered

167
00:06:50,000 --> 00:06:56,319
allowing for super polynomial simulators

168
00:06:53,520 --> 00:06:57,280
however even with a super polynomial

169
00:06:56,319 --> 00:06:59,919
simulator

170
00:06:57,280 --> 00:07:00,880
one typically still needs less efficient

171
00:06:59,919 --> 00:07:04,000
schemes

172
00:07:00,880 --> 00:07:06,000
and additional setup

173
00:07:04,000 --> 00:07:08,720
another line of work considered

174
00:07:06,000 --> 00:07:10,800
so-called non-information oracles

175
00:07:08,720 --> 00:07:14,080
which essentially embed a game-based

176
00:07:10,800 --> 00:07:17,440
notion in a composable framework

177
00:07:14,080 --> 00:07:19,840
so instead of saying that we have this

178
00:07:17,440 --> 00:07:22,319
channel that first only leaks the length

179
00:07:19,840 --> 00:07:24,880
and only after the key got revealed it

180
00:07:22,319 --> 00:07:27,199
leaks the full message

181
00:07:24,880 --> 00:07:29,360
in such a world one would say we have a

182
00:07:27,199 --> 00:07:33,280
channel that leaks a cipher

183
00:07:29,360 --> 00:07:37,680
however the ciphertext is subject

184
00:07:33,280 --> 00:07:39,919
to a certain game-based security notion

185
00:07:37,680 --> 00:07:42,080
this however means that if we want to

186
00:07:39,919 --> 00:07:44,479
use this channel we will still

187
00:07:42,080 --> 00:07:45,758
need to prove a reduction to this

188
00:07:44,479 --> 00:07:50,639
embedded game

189
00:07:45,759 --> 00:07:50,639
hence it somehow hinders modularity

190
00:07:50,960 --> 00:07:57,440
so in this work we essentially want

191
00:07:54,319 --> 00:08:00,240
to explore whether we cannot

192
00:07:57,440 --> 00:08:03,199
circumvent the commitment problem by

193
00:08:00,240 --> 00:08:06,160
simply making two separate statements

194
00:08:03,199 --> 00:08:07,120
one about confidentiality until the key

195
00:08:06,160 --> 00:08:10,840
leaks

196
00:08:07,120 --> 00:08:13,840
and one about the remaining guarantees

197
00:08:10,840 --> 00:08:16,878
afterwards and i should stress here

198
00:08:13,840 --> 00:08:19,758
that the goal is really to express the

199
00:08:16,879 --> 00:08:20,080
guarantees of our regular schemes which

200
00:08:19,759 --> 00:08:23,599
we

201
00:08:20,080 --> 00:08:25,680
have used game based now for a long time

202
00:08:23,599 --> 00:08:28,159
which seemed to lead to many interesting

203
00:08:25,680 --> 00:08:30,960
schemes and so on

204
00:08:28,160 --> 00:08:32,320
so we do not want to come up with yet

205
00:08:30,960 --> 00:08:34,799
another strong

206
00:08:32,320 --> 00:08:35,440
notion that requires less efficient

207
00:08:34,799 --> 00:08:38,399
scheme

208
00:08:35,440 --> 00:08:40,000
or additional setup and we definitely do

209
00:08:38,399 --> 00:08:42,159
not want to just

210
00:08:40,000 --> 00:08:44,080
give up and fall back to game-based

211
00:08:42,159 --> 00:08:46,640
security notions at this

212
00:08:44,080 --> 00:08:48,720
as this means we have to prove

213
00:08:46,640 --> 00:08:52,399
reductions in every single step

214
00:08:48,720 --> 00:08:54,880
and cannot benefit from composition

215
00:08:52,399 --> 00:08:56,160
so the remaining open question is

216
00:08:54,880 --> 00:08:59,439
essentially

217
00:08:56,160 --> 00:09:01,360
how could such a notion that looks at

218
00:08:59,440 --> 00:09:03,440
separate security statements for

219
00:09:01,360 --> 00:09:07,519
different time intervals

220
00:09:03,440 --> 00:09:07,519
in a composable framework

221
00:09:07,680 --> 00:09:13,680
and to answer this question let me do

222
00:09:10,720 --> 00:09:16,399
a quick detour and look at how the

223
00:09:13,680 --> 00:09:22,719
constructive cryptography framework

224
00:09:16,399 --> 00:09:25,760
uses specifications as its main objects

225
00:09:22,720 --> 00:09:28,080
so in the constructive crypto free

226
00:09:25,760 --> 00:09:30,160
framework by maura and render

227
00:09:28,080 --> 00:09:32,000
one always makes statements about

228
00:09:30,160 --> 00:09:34,360
so-called resources

229
00:09:32,000 --> 00:09:38,959
which are essentially the analogous to

230
00:09:34,360 --> 00:09:38,959
functionalities in the uc framework

231
00:09:39,519 --> 00:09:44,720
so traditionally one might want to show

232
00:09:42,880 --> 00:09:47,200
that our real world resource is

233
00:09:44,720 --> 00:09:51,279
computationally indistinguishable

234
00:09:47,200 --> 00:09:54,399
to some kind of ideal world resource

235
00:09:51,279 --> 00:09:58,320
however we can also make a different

236
00:09:54,399 --> 00:09:59,040
more general statement so what we can do

237
00:09:58,320 --> 00:10:02,320
is

238
00:09:59,040 --> 00:10:04,959
we can show that this our

239
00:10:02,320 --> 00:10:05,600
real world resource is contained in the

240
00:10:04,959 --> 00:10:09,518
set of

241
00:10:05,600 --> 00:10:11,839
all resources that have some kind of

242
00:10:09,519 --> 00:10:16,000
desired properties

243
00:10:11,839 --> 00:10:16,000
and such a set we simply call a

244
00:10:16,839 --> 00:10:20,560
specification

245
00:10:18,480 --> 00:10:22,240
and a bit more general instead of

246
00:10:20,560 --> 00:10:25,199
looking at the single

247
00:10:22,240 --> 00:10:26,160
real world resource we can say that we

248
00:10:25,200 --> 00:10:28,640
also assume

249
00:10:26,160 --> 00:10:31,120
just a specification saying that maybe

250
00:10:28,640 --> 00:10:32,800
we don't know about certain aspects of

251
00:10:31,120 --> 00:10:35,839
the real world

252
00:10:32,800 --> 00:10:38,160
and the statement the main statement of

253
00:10:35,839 --> 00:10:38,560
the constructive cryptography framework

254
00:10:38,160 --> 00:10:40,719
then

255
00:10:38,560 --> 00:10:42,239
becomes the one of specification

256
00:10:40,720 --> 00:10:44,880
abstraction

257
00:10:42,240 --> 00:10:46,640
so we start with this assumed

258
00:10:44,880 --> 00:10:49,360
specification

259
00:10:46,640 --> 00:10:49,920
which might look very scary and about

260
00:10:49,360 --> 00:10:51,600
which

261
00:10:49,920 --> 00:10:53,519
we might not know whether all the

262
00:10:51,600 --> 00:10:56,720
resource content they're in

263
00:10:53,519 --> 00:11:00,240
have the guarantees we need so

264
00:10:56,720 --> 00:11:00,839
what we can do is we abstract it by a

265
00:11:00,240 --> 00:11:03,839
large

266
00:11:00,839 --> 00:11:07,279
specification and of course this only

267
00:11:03,839 --> 00:11:11,040
makes sense if this larger specification

268
00:11:07,279 --> 00:11:13,920
is somehow defined and described in a

269
00:11:11,040 --> 00:11:14,640
way that now makes it more obvious that

270
00:11:13,920 --> 00:11:17,760
all the

271
00:11:14,640 --> 00:11:22,319
resources contained in it have

272
00:11:17,760 --> 00:11:22,319
all the guarantees we need and want

273
00:11:22,800 --> 00:11:27,599
and making such a specification

274
00:11:25,680 --> 00:11:30,160
abstraction statement the core of

275
00:11:27,600 --> 00:11:31,760
constructive cryptography was introduced

276
00:11:30,160 --> 00:11:36,319
by maureen renner

277
00:11:31,760 --> 00:11:40,319
in 2016. so if you look at older papers

278
00:11:36,320 --> 00:11:42,399
they might still use a notion that's

279
00:11:40,320 --> 00:11:43,200
much more similar to the simulation

280
00:11:42,399 --> 00:11:46,640
based one

281
00:11:43,200 --> 00:11:46,640
of the uc framework

282
00:11:47,680 --> 00:11:51,920
and what this abstraction statement

283
00:11:51,200 --> 00:11:55,120
really gives

284
00:11:51,920 --> 00:11:57,360
us is flexibility because

285
00:11:55,120 --> 00:11:59,200
on the one hand it sort of provides a

286
00:11:57,360 --> 00:12:02,079
meta framework

287
00:11:59,200 --> 00:12:04,639
with this kind of statement already

288
00:12:02,079 --> 00:12:07,519
leading to a lot of nice properties

289
00:12:04,639 --> 00:12:08,000
on the other hand it does not fix as

290
00:12:07,519 --> 00:12:11,760
many

291
00:12:08,000 --> 00:12:15,120
aspects as the traditional

292
00:12:11,760 --> 00:12:16,000
uc statement you might know of and in

293
00:12:15,120 --> 00:12:19,079
particular

294
00:12:16,000 --> 00:12:20,240
it does not necessarily fix what kind of

295
00:12:19,079 --> 00:12:23,359
specification

296
00:12:20,240 --> 00:12:26,399
we are allowed to look at

297
00:12:23,360 --> 00:12:27,360
so let's quickly look at the nice

298
00:12:26,399 --> 00:12:30,480
properties

299
00:12:27,360 --> 00:12:33,279
this kind of statement has well

300
00:12:30,480 --> 00:12:33,760
first we're still making a statement

301
00:12:33,279 --> 00:12:37,360
about

302
00:12:33,760 --> 00:12:40,720
the real world resource being contained

303
00:12:37,360 --> 00:12:43,519
in an ideal specification and that means

304
00:12:40,720 --> 00:12:45,120
there are no forgotten attacks there is

305
00:12:43,519 --> 00:12:47,440
no mismatch between

306
00:12:45,120 --> 00:12:50,639
the security definition and the real

307
00:12:47,440 --> 00:12:50,639
world execution

308
00:12:50,880 --> 00:12:54,880
second the transitivity of the subset

309
00:12:54,160 --> 00:12:59,040
relation

310
00:12:54,880 --> 00:13:03,439
gives us a very basic composition result

311
00:12:59,040 --> 00:13:06,319
meaning that afterwards we can forget

312
00:13:03,440 --> 00:13:06,720
about this complicated specification and

313
00:13:06,320 --> 00:13:09,440
just

314
00:13:06,720 --> 00:13:12,560
continue proving results about the one

315
00:13:09,440 --> 00:13:15,600
that's somehow easier to deal with

316
00:13:12,560 --> 00:13:17,518
and rest assured that in the end we can

317
00:13:15,600 --> 00:13:21,200
plug the two statements together

318
00:13:17,519 --> 00:13:23,600
and get our desired result

319
00:13:21,200 --> 00:13:26,639
finally and very importantly for this

320
00:13:23,600 --> 00:13:29,279
work is that we can actually

321
00:13:26,639 --> 00:13:30,079
that this view actually gives us a very

322
00:13:29,279 --> 00:13:35,200
natural

323
00:13:30,079 --> 00:13:38,800
way to formalize multiple guarantees

324
00:13:35,200 --> 00:13:41,279
so we can simply make two statements

325
00:13:38,800 --> 00:13:43,839
so it's contained in this specification

326
00:13:41,279 --> 00:13:45,279
and in that specification and then if we

327
00:13:43,839 --> 00:13:48,480
say okay it's

328
00:13:45,279 --> 00:13:52,720
it's contained in in the intersection we

329
00:13:48,480 --> 00:13:52,720
know that it has both guarantees

330
00:13:54,480 --> 00:13:57,600
and i should also mention at this point

331
00:13:57,199 --> 00:13:59,920
that

332
00:13:57,600 --> 00:14:02,800
the standard simulation based notion in

333
00:13:59,920 --> 00:14:06,240
the end is just a special case

334
00:14:02,800 --> 00:14:08,319
so we consider we can consider the real

335
00:14:06,240 --> 00:14:11,279
world resource as our

336
00:14:08,320 --> 00:14:13,839
assumed specification and the ideal

337
00:14:11,279 --> 00:14:18,000
world resource including the simulator

338
00:14:13,839 --> 00:14:20,920
as the ideal world specification

339
00:14:18,000 --> 00:14:22,320
and this really shows that this kind of

340
00:14:20,920 --> 00:14:25,040
decomposing

341
00:14:22,320 --> 00:14:26,079
the ideal word specification into what

342
00:14:25,040 --> 00:14:28,399
we actually want

343
00:14:26,079 --> 00:14:29,279
the resource here the confidential

344
00:14:28,399 --> 00:14:32,000
channel

345
00:14:29,279 --> 00:14:34,160
and the simulator is just a way to

346
00:14:32,000 --> 00:14:38,000
define

347
00:14:34,160 --> 00:14:39,120
a specification such that it is easy to

348
00:14:38,000 --> 00:14:42,800
see

349
00:14:39,120 --> 00:14:46,320
that messages are confidential

350
00:14:42,800 --> 00:14:49,599
but the simulator is really in this view

351
00:14:46,320 --> 00:14:52,240
no inherent aspect

352
00:14:49,600 --> 00:14:52,720
of our security notion it's just a mean

353
00:14:52,240 --> 00:14:56,000
to the

354
00:14:52,720 --> 00:14:59,839
end and this will become very important

355
00:14:56,000 --> 00:14:59,839
in our notion

356
00:15:00,320 --> 00:15:04,720
what we also have to deal with is that

357
00:15:03,040 --> 00:15:06,279
traditionally one would say the two

358
00:15:04,720 --> 00:15:07,440
words are computationally

359
00:15:06,279 --> 00:15:10,720
indistinguishable

360
00:15:07,440 --> 00:15:12,160
but the abstraction statement is an

361
00:15:10,720 --> 00:15:14,959
absolute one

362
00:15:12,160 --> 00:15:16,719
so what we have to do instead is to

363
00:15:14,959 --> 00:15:19,439
enlarge in this

364
00:15:16,720 --> 00:15:21,199
green elliptic specification to a

365
00:15:19,440 --> 00:15:23,680
slightly bigger one

366
00:15:21,199 --> 00:15:27,120
such that the real work the real world

367
00:15:23,680 --> 00:15:30,160
specification is then actually contained

368
00:15:27,120 --> 00:15:30,480
and how do we do that well we simply map

369
00:15:30,160 --> 00:15:32,880
it

370
00:15:30,480 --> 00:15:34,759
to the one consisting of all systems

371
00:15:32,880 --> 00:15:36,240
which are computationally

372
00:15:34,759 --> 00:15:40,000
indistinguishable

373
00:15:36,240 --> 00:15:44,639
from the original specification

374
00:15:40,000 --> 00:15:47,680
and such a mapping we call a relaxation

375
00:15:44,639 --> 00:15:49,839
and in particular one can show

376
00:15:47,680 --> 00:15:51,359
that this kind of computational

377
00:15:49,839 --> 00:15:54,880
relaxation

378
00:15:51,360 --> 00:15:58,959
has nice properties and interacts

379
00:15:54,880 --> 00:16:02,240
nicely with um applying and

380
00:15:58,959 --> 00:16:06,079
separate protocol and using those

381
00:16:02,240 --> 00:16:09,199
nice properties one can then derive

382
00:16:06,079 --> 00:16:11,359
the uc composition theorem or the old

383
00:16:09,199 --> 00:16:13,839
constructive cryptography one

384
00:16:11,360 --> 00:16:14,800
essentially as a syntactic derivation

385
00:16:13,839 --> 00:16:19,360
rule

386
00:16:14,800 --> 00:16:22,399
so going back some slide we can then

387
00:16:19,360 --> 00:16:25,920
prove a subset statement about the green

388
00:16:22,399 --> 00:16:29,360
elliptic specification and

389
00:16:25,920 --> 00:16:32,880
later on transform this statement

390
00:16:29,360 --> 00:16:35,360
to one about the red specification such

391
00:16:32,880 --> 00:16:39,199
that we can plug them together nicely

392
00:16:35,360 --> 00:16:39,199
using the subset relation

393
00:16:41,360 --> 00:16:45,120
so with this set let's go back and see

394
00:16:44,639 --> 00:16:48,320
how

395
00:16:45,120 --> 00:16:51,920
we can formalize such interval wise

396
00:16:48,320 --> 00:16:54,959
guarantees within a composable framework

397
00:16:51,920 --> 00:16:58,079
and as a quick hint

398
00:16:54,959 --> 00:17:00,880
we actually do so using relaxations

399
00:16:58,079 --> 00:17:02,000
because using formalizing this as

400
00:17:00,880 --> 00:17:04,799
relaxation

401
00:17:02,000 --> 00:17:06,240
will exactly allow us to do the same

402
00:17:04,799 --> 00:17:09,520
thing

403
00:17:06,240 --> 00:17:11,520
we can then in

404
00:17:09,520 --> 00:17:13,119
separate steps forget about the

405
00:17:11,520 --> 00:17:15,839
relaxations and only

406
00:17:13,119 --> 00:17:18,479
in the end apply them and put everything

407
00:17:15,839 --> 00:17:21,760
nicely together

408
00:17:18,480 --> 00:17:22,160
so to recall the problem we had with

409
00:17:21,760 --> 00:17:24,720
this

410
00:17:22,160 --> 00:17:26,720
naive id of let's say we have a channel

411
00:17:24,720 --> 00:17:27,520
that first only leaks the length and

412
00:17:26,720 --> 00:17:30,080
only

413
00:17:27,520 --> 00:17:31,520
afterwards the full message was that we

414
00:17:30,080 --> 00:17:35,280
could not formalize

415
00:17:31,520 --> 00:17:37,600
past this key exposure event

416
00:17:35,280 --> 00:17:40,399
so we wanted to make the two separate

417
00:17:37,600 --> 00:17:40,399
statements

418
00:17:40,559 --> 00:17:46,000
and this is exactly our starting point

419
00:17:43,679 --> 00:17:48,480
we start with this over idealized

420
00:17:46,000 --> 00:17:48,960
channel we were unable to achieve and

421
00:17:48,480 --> 00:17:52,480
now

422
00:17:48,960 --> 00:17:54,960
for both intervals we suitably relax

423
00:17:52,480 --> 00:17:57,600
this overly idealized

424
00:17:54,960 --> 00:17:57,600
resource

425
00:17:58,400 --> 00:18:02,640
so for the first interval we essentially

426
00:18:01,200 --> 00:18:04,640
want to say okay

427
00:18:02,640 --> 00:18:06,480
it should behave like this channel but

428
00:18:04,640 --> 00:18:10,080
we don't care about what

429
00:18:06,480 --> 00:18:12,320
happens after the key got exposed

430
00:18:10,080 --> 00:18:14,159
and this is actually not so difficult to

431
00:18:12,320 --> 00:18:16,960
formalize i mean for instance

432
00:18:14,160 --> 00:18:18,240
we could say it's the set of all

433
00:18:16,960 --> 00:18:21,760
resources t

434
00:18:18,240 --> 00:18:25,280
that behave like this channel if um

435
00:18:21,760 --> 00:18:28,240
bo all the systems just shut down at

436
00:18:25,280 --> 00:18:30,160
the moment the key is leaked or if the

437
00:18:28,240 --> 00:18:32,720
environment has to stop

438
00:18:30,160 --> 00:18:34,000
once the key is leaked it doesn't really

439
00:18:32,720 --> 00:18:36,640
matter and i will

440
00:18:34,000 --> 00:18:38,320
refer to the paper if you want to know

441
00:18:36,640 --> 00:18:42,160
about the details

442
00:18:38,320 --> 00:18:44,879
how exactly we did it in this work

443
00:18:42,160 --> 00:18:47,600
a bit more interesting is how we

444
00:18:44,880 --> 00:18:48,320
formalize a relaxation that says okay we

445
00:18:47,600 --> 00:18:51,199
don't

446
00:18:48,320 --> 00:18:52,559
care about what happens before the key

447
00:18:51,200 --> 00:18:56,320
got leaked

448
00:18:52,559 --> 00:18:59,600
and in particular we want

449
00:18:56,320 --> 00:19:00,320
that the simulator only has to work from

450
00:18:59,600 --> 00:19:03,039
the moment

451
00:19:00,320 --> 00:19:05,120
on the key got leaked and hence it

452
00:19:03,039 --> 00:19:07,919
learns the full message and hence can

453
00:19:05,120 --> 00:19:11,840
trivially come up with a cipher text

454
00:19:07,919 --> 00:19:11,840
by just encrypting the message

455
00:19:12,559 --> 00:19:18,080
and here what we do is

456
00:19:15,679 --> 00:19:19,919
we rely on the extension of the

457
00:19:18,080 --> 00:19:22,399
constructive crypto framework

458
00:19:19,919 --> 00:19:24,240
called constructive cryptography with

459
00:19:22,400 --> 00:19:27,600
events that was introduced

460
00:19:24,240 --> 00:19:30,240
last year and we essentially only

461
00:19:27,600 --> 00:19:32,639
formalized this kind of relaxation for

462
00:19:30,240 --> 00:19:35,760
so-called external events

463
00:19:32,640 --> 00:19:37,600
so for instance here in the channel

464
00:19:35,760 --> 00:19:40,879
whether the key leaked or not is

465
00:19:37,600 --> 00:19:43,600
actually not something that's decided by

466
00:19:40,880 --> 00:19:44,160
this confidential channel but something

467
00:19:43,600 --> 00:19:47,918
by

468
00:19:44,160 --> 00:19:51,200
in the ideal world by the environment

469
00:19:47,919 --> 00:19:55,760
so what we can do is within that

470
00:19:51,200 --> 00:19:55,760
extension of constructive cryptography

471
00:19:56,320 --> 00:20:03,200
which i have an example of here

472
00:20:00,160 --> 00:20:05,520
so in this extension there is

473
00:20:03,200 --> 00:20:08,720
some kind of global event history on

474
00:20:05,520 --> 00:20:11,280
which all the resources can depend

475
00:20:08,720 --> 00:20:12,880
and in particular the events that are

476
00:20:11,280 --> 00:20:15,200
noted there

477
00:20:12,880 --> 00:20:17,360
are not necessarily something triggered

478
00:20:15,200 --> 00:20:18,240
by the actual resource but it could also

479
00:20:17,360 --> 00:20:21,600
be

480
00:20:18,240 --> 00:20:24,200
the environment triggering them

481
00:20:21,600 --> 00:20:26,959
so for instance we can say that the

482
00:20:24,200 --> 00:20:29,760
confidentiality of a channel depends on

483
00:20:26,960 --> 00:20:32,080
whether the key leaked or not where this

484
00:20:29,760 --> 00:20:35,600
event is something that's just up

485
00:20:32,080 --> 00:20:38,240
to the environment to decide and this

486
00:20:35,600 --> 00:20:40,399
allows us to really say okay we only

487
00:20:38,240 --> 00:20:43,440
look at the channel in a world

488
00:20:40,400 --> 00:20:46,000
where this event already initially

489
00:20:43,440 --> 00:20:46,000
happened

490
00:20:47,679 --> 00:20:54,640
so putting it all together um

491
00:20:51,600 --> 00:20:56,799
we see that for each time interval

492
00:20:54,640 --> 00:20:59,360
we can formalize the respective

493
00:20:56,799 --> 00:21:02,720
guarantee as one specification

494
00:20:59,360 --> 00:21:05,199
and which we can then all intersect

495
00:21:02,720 --> 00:21:08,080
in order to get the conjunction of all

496
00:21:05,200 --> 00:21:11,120
the guarantees

497
00:21:08,080 --> 00:21:13,520
and i should really point out that while

498
00:21:11,120 --> 00:21:15,039
each of those specifications will

499
00:21:13,520 --> 00:21:18,799
probably be described

500
00:21:15,039 --> 00:21:21,440
by using a simulator those simulators do

501
00:21:18,799 --> 00:21:24,639
not have to be the same one and this is

502
00:21:21,440 --> 00:21:28,559
really what allows us to avoid the

503
00:21:24,640 --> 00:21:31,600
commitment problem and

504
00:21:28,559 --> 00:21:33,918
to see that this is not something bad we

505
00:21:31,600 --> 00:21:34,399
really have to take this specification

506
00:21:33,919 --> 00:21:37,120
based

507
00:21:34,400 --> 00:21:39,039
view where we see that having a

508
00:21:37,120 --> 00:21:42,479
simulator is not something that's

509
00:21:39,039 --> 00:21:46,000
somehow inherent to a simulation based

510
00:21:42,480 --> 00:21:49,080
no to a composable notion but in the end

511
00:21:46,000 --> 00:21:51,280
it's really just a way on how to define

512
00:21:49,080 --> 00:21:54,678
specifications so

513
00:21:51,280 --> 00:21:56,158
why should there be a need for separate

514
00:21:54,679 --> 00:21:59,840
specifications

515
00:21:56,159 --> 00:21:59,840
to share the same simulator

516
00:21:59,919 --> 00:22:06,080
and on a more technical level we then

517
00:22:03,200 --> 00:22:08,159
formalize those interval wise guarantees

518
00:22:06,080 --> 00:22:12,399
as relaxations of the same

519
00:22:08,159 --> 00:22:14,720
overly idealized resource

520
00:22:12,400 --> 00:22:17,919
we did it in a way that we could prove

521
00:22:14,720 --> 00:22:20,960
nice properties about its relaxations

522
00:22:17,919 --> 00:22:24,880
such that we get all the desired um

523
00:22:20,960 --> 00:22:28,400
composition rules we would like to have

524
00:22:24,880 --> 00:22:31,600
and really for the details i would like

525
00:22:28,400 --> 00:22:34,799
you to refer to the paper

526
00:22:31,600 --> 00:22:35,760
but what let me repeat once more what's

527
00:22:34,799 --> 00:22:38,480
really nice

528
00:22:35,760 --> 00:22:40,960
is that then in every subsequent

529
00:22:38,480 --> 00:22:43,440
statement we can just assume we have

530
00:22:40,960 --> 00:22:46,000
this overly idealized resource

531
00:22:43,440 --> 00:22:47,280
and forget about all the nitty gritty

532
00:22:46,000 --> 00:22:49,760
details

533
00:22:47,280 --> 00:22:52,080
and only if we do somehow the overall

534
00:22:49,760 --> 00:22:55,200
bookkeeping we have to

535
00:22:52,080 --> 00:22:56,000
apply all the relaxation and see what we

536
00:22:55,200 --> 00:22:58,799
really got

537
00:22:56,000 --> 00:22:58,799
in the end

538
00:22:59,039 --> 00:23:03,120
so in our work we also looked at some

539
00:23:01,280 --> 00:23:06,158
additional examples

540
00:23:03,120 --> 00:23:06,559
such as identity based encryption for

541
00:23:06,159 --> 00:23:08,799
which

542
00:23:06,559 --> 00:23:09,760
it has been proven by hoffeinsmart and

543
00:23:08,799 --> 00:23:12,639
maurer

544
00:23:09,760 --> 00:23:14,799
that the uc simulation-based security

545
00:23:12,640 --> 00:23:18,480
notion is impossible to achieve

546
00:23:14,799 --> 00:23:20,879
in the standard model however

547
00:23:18,480 --> 00:23:23,200
using our interval wise guarantees we

548
00:23:20,880 --> 00:23:24,080
were able to come up with a composable

549
00:23:23,200 --> 00:23:26,559
notion that

550
00:23:24,080 --> 00:23:27,280
is not only achievable but that actually

551
00:23:26,559 --> 00:23:29,918
turned out

552
00:23:27,280 --> 00:23:32,960
to be equivalent to the standard indian

553
00:23:29,919 --> 00:23:35,840
cpa notion

554
00:23:32,960 --> 00:23:39,039
as a second example we looked at coin

555
00:23:35,840 --> 00:23:42,080
tossing via commitments

556
00:23:39,039 --> 00:23:44,559
and obviously we could just say okay we

557
00:23:42,080 --> 00:23:45,760
take a uc commitment but then we would

558
00:23:44,559 --> 00:23:48,720
need setup

559
00:23:45,760 --> 00:23:50,480
and what we were able to do here was we

560
00:23:48,720 --> 00:23:53,679
were able to come up with a

561
00:23:50,480 --> 00:23:56,960
formalization of commitments

562
00:23:53,679 --> 00:24:01,360
that don't have to rely on setup

563
00:23:56,960 --> 00:24:03,919
yet um then the coin tossing protocol

564
00:24:01,360 --> 00:24:06,320
can just be applied using the

565
00:24:03,919 --> 00:24:06,960
composition rules and we don't have to

566
00:24:06,320 --> 00:24:10,639
prove

567
00:24:06,960 --> 00:24:10,640
any explicit reduction

568
00:24:11,120 --> 00:24:17,039
so to conclude this talk

569
00:24:14,720 --> 00:24:18,159
what we really did was we took this

570
00:24:17,039 --> 00:24:20,320
specification

571
00:24:18,159 --> 00:24:22,720
based approach of the constructive

572
00:24:20,320 --> 00:24:23,760
cryptography framework and used the

573
00:24:22,720 --> 00:24:27,039
flexibility

574
00:24:23,760 --> 00:24:30,320
it gives us and

575
00:24:27,039 --> 00:24:34,080
in particular we defined so-called

576
00:24:30,320 --> 00:24:37,760
interval wise specifications which have

577
00:24:34,080 --> 00:24:40,080
very nice which are defined and

578
00:24:37,760 --> 00:24:41,760
built in a way from smaller building

579
00:24:40,080 --> 00:24:43,840
blocks that interact

580
00:24:41,760 --> 00:24:45,120
nicely with other aspects of the

581
00:24:43,840 --> 00:24:49,199
framework

582
00:24:45,120 --> 00:24:52,559
such that in the end we get strong

583
00:24:49,200 --> 00:24:55,440
composition rules and

584
00:24:52,559 --> 00:24:58,720
moreover it allows us to circumvent the

585
00:24:55,440 --> 00:25:01,840
simulator commitment problem

586
00:24:58,720 --> 00:25:01,840
thank you for your attention

