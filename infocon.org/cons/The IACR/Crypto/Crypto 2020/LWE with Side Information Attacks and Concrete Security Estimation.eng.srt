1
00:00:00,399 --> 00:00:04,400
hello i am melisa rossi and i am

2
00:00:03,199 --> 00:00:06,640
conferencing

3
00:00:04,400 --> 00:00:08,720
together we are going to present a joint

4
00:00:06,640 --> 00:00:11,280
work with donna dahman solid

5
00:00:08,720 --> 00:00:13,519
and leo duca we will show that side

6
00:00:11,280 --> 00:00:15,440
information can be integrated in the

7
00:00:13,519 --> 00:00:16,480
so-called primal lattice reduction

8
00:00:15,440 --> 00:00:18,400
attack

9
00:00:16,480 --> 00:00:21,520
this work has a theoretical part to

10
00:00:18,400 --> 00:00:23,519
build and validate a new framework

11
00:00:21,520 --> 00:00:25,198
and it has many applications in

12
00:00:23,519 --> 00:00:27,198
cryptanalysis

13
00:00:25,199 --> 00:00:29,039
in this talk we will mention side

14
00:00:27,199 --> 00:00:29,599
channel attacks decryption failure

15
00:00:29,039 --> 00:00:32,719
attacks

16
00:00:29,599 --> 00:00:34,960
and even structural attacks

17
00:00:32,719 --> 00:00:37,200
let us start with the motivation

18
00:00:34,960 --> 00:00:40,239
consider a learning with error-based

19
00:00:37,200 --> 00:00:41,040
cryptographic scheme to estimate its

20
00:00:40,239 --> 00:00:43,279
security

21
00:00:41,040 --> 00:00:46,239
one needs to estimate the cost of the

22
00:00:43,280 --> 00:00:48,719
lattice reduction primal attack

23
00:00:46,239 --> 00:00:52,480
this cost is represented by a parameter

24
00:00:48,719 --> 00:00:55,520
the block size of bkz algorithm

25
00:00:52,480 --> 00:00:56,959
this block size is denoted beta once

26
00:00:55,520 --> 00:00:59,280
this beta is found

27
00:00:56,960 --> 00:01:00,559
there are many cost models to derive a

28
00:00:59,280 --> 00:01:02,640
bit security

29
00:01:00,559 --> 00:01:04,959
we will not go into details here but

30
00:01:02,640 --> 00:01:08,159
most models suggest a multiplicative

31
00:01:04,959 --> 00:01:10,399
factor of around 0.3

32
00:01:08,159 --> 00:01:12,479
at the end we obtain a bit security

33
00:01:10,400 --> 00:01:13,119
which represents the amount of work

34
00:01:12,479 --> 00:01:15,920
needed for

35
00:01:13,119 --> 00:01:15,920
key recovery

36
00:01:17,600 --> 00:01:22,720
let us now consider that same algorithm

37
00:01:19,920 --> 00:01:24,320
but from a side channel perspective

38
00:01:22,720 --> 00:01:26,960
the measurement of some physical

39
00:01:24,320 --> 00:01:29,119
parameters give extra information

40
00:01:26,960 --> 00:01:31,600
typically we can measure some power

41
00:01:29,119 --> 00:01:34,079
consumption traces

42
00:01:31,600 --> 00:01:36,240
at the end here one can quantify the

43
00:01:34,079 --> 00:01:38,000
side information necessary to recover

44
00:01:36,240 --> 00:01:40,320
the full secret key

45
00:01:38,000 --> 00:01:41,200
for example a key recovery needs at

46
00:01:40,320 --> 00:01:44,240
least say

47
00:01:41,200 --> 00:01:44,240
100 traces

48
00:01:44,640 --> 00:01:48,799
let us now imagine that we are in the

49
00:01:46,479 --> 00:01:51,439
middle there is a side information

50
00:01:48,799 --> 00:01:52,799
for example we have one or two traces

51
00:01:51,439 --> 00:01:55,839
but they do not allow

52
00:01:52,799 --> 00:01:55,840
any key recovery

53
00:01:57,040 --> 00:02:00,960
if we can include this slight

54
00:01:58,719 --> 00:02:02,240
information given by the trace in the

55
00:02:00,960 --> 00:02:05,360
lattice reduction

56
00:02:02,240 --> 00:02:08,959
we can hope to decrease the bit security

57
00:02:05,360 --> 00:02:11,680
and we end up with a hybrid attack

58
00:02:08,959 --> 00:02:13,520
the purpose of our work is precisely to

59
00:02:11,680 --> 00:02:16,480
include this little information

60
00:02:13,520 --> 00:02:18,319
and compute the new block size beta this

61
00:02:16,480 --> 00:02:22,319
side information will be called

62
00:02:18,319 --> 00:02:23,519
hint the integration technique has been

63
00:02:22,319 --> 00:02:26,319
done in adult ways

64
00:02:23,520 --> 00:02:27,520
in the literature here we aim at

65
00:02:26,319 --> 00:02:30,000
systematizing it

66
00:02:27,520 --> 00:02:32,480
and predicting the security drop for any

67
00:02:30,000 --> 00:02:32,480
instance

68
00:02:32,720 --> 00:02:37,599
our main contribution is twofold we

69
00:02:35,440 --> 00:02:38,640
first propose a framework to integrate

70
00:02:37,599 --> 00:02:42,319
site information

71
00:02:38,640 --> 00:02:45,040
and its sage implementation and secondly

72
00:02:42,319 --> 00:02:45,839
we give various examples of applications

73
00:02:45,040 --> 00:02:47,760
we apply it

74
00:02:45,840 --> 00:02:50,080
on a side channel attack where the

75
00:02:47,760 --> 00:02:52,319
amount of site information is large as

76
00:02:50,080 --> 00:02:54,720
represented in red here

77
00:02:52,319 --> 00:02:56,879
contrary-wise in another example we

78
00:02:54,720 --> 00:03:00,319
derive a small hint by triggering

79
00:02:56,879 --> 00:03:00,319
real-world specifications

80
00:03:00,480 --> 00:03:04,079
our framework can also be applied to

81
00:03:02,400 --> 00:03:08,000
decryption failure attacks

82
00:03:04,080 --> 00:03:08,000
the more failures the less work

83
00:03:09,360 --> 00:03:13,519
in the first part let us analyze the

84
00:03:11,360 --> 00:03:14,159
framework if you prefer learning from

85
00:03:13,519 --> 00:03:16,080
practice

86
00:03:14,159 --> 00:03:19,040
you can go directly to the application

87
00:03:16,080 --> 00:03:21,440
part at the end of this presentation

88
00:03:19,040 --> 00:03:25,040
in this video all geometric intuitions

89
00:03:21,440 --> 00:03:25,040
will be given in two dimensions

90
00:03:26,319 --> 00:03:30,560
the bounded distance decoding problem

91
00:03:28,720 --> 00:03:33,519
works as follows

92
00:03:30,560 --> 00:03:35,519
given a lattice here in white find the

93
00:03:33,519 --> 00:03:36,879
lattice point that belongs in the green

94
00:03:35,519 --> 00:03:40,799
circular area

95
00:03:36,879 --> 00:03:43,599
the red dot for the purpose of this work

96
00:03:40,799 --> 00:03:46,400
we had to slightly distort this problem

97
00:03:43,599 --> 00:03:50,000
instead of considering a circular area

98
00:03:46,400 --> 00:03:50,000
we consider an ellipsoid

99
00:03:51,200 --> 00:03:55,839
more precisely we are given a lattice

100
00:03:53,360 --> 00:03:58,879
represented with the white dots here

101
00:03:55,840 --> 00:03:59,519
a center denoted mu and a covariance

102
00:03:58,879 --> 00:04:02,798
matrix

103
00:03:59,519 --> 00:04:03,439
sigma the eigenvectors of the covariance

104
00:04:02,799 --> 00:04:05,040
matrix

105
00:04:03,439 --> 00:04:07,920
will give the symmetries of the

106
00:04:05,040 --> 00:04:09,840
ellipsoidal distribution

107
00:04:07,920 --> 00:04:11,679
in this problem we still need to find

108
00:04:09,840 --> 00:04:13,760
the red dot

109
00:04:11,680 --> 00:04:14,720
each instance is defined by three

110
00:04:13,760 --> 00:04:17,039
parameters

111
00:04:14,720 --> 00:04:19,759
the lattice the center and the

112
00:04:17,040 --> 00:04:19,759
covariance

113
00:04:20,079 --> 00:04:24,400
there are some particular cases for

114
00:04:22,240 --> 00:04:25,360
example when the covariance is the

115
00:04:24,400 --> 00:04:28,400
identity

116
00:04:25,360 --> 00:04:30,240
we fall back to bonded distance decoding

117
00:04:28,400 --> 00:04:31,919
when the center is zero and the

118
00:04:30,240 --> 00:04:33,840
covariance is the identity

119
00:04:31,919 --> 00:04:36,240
we fall back to the shortest vector

120
00:04:33,840 --> 00:04:36,239
problem

121
00:04:36,320 --> 00:04:40,800
usually to attack a learning with error

122
00:04:38,560 --> 00:04:42,000
instance one transforms the learning

123
00:04:40,800 --> 00:04:45,040
wizard instance

124
00:04:42,000 --> 00:04:46,880
in a shortest vector problem instance

125
00:04:45,040 --> 00:04:49,360
the letter can be attacked with the

126
00:04:46,880 --> 00:04:52,159
lattice reduction

127
00:04:49,360 --> 00:04:57,840
let us use our dbdd definition and

128
00:04:52,160 --> 00:04:57,840
integrate the hints

129
00:04:58,080 --> 00:05:01,599
instead of embedding directly into a svp

130
00:05:00,960 --> 00:05:05,919
instance

131
00:05:01,600 --> 00:05:07,919
we embed the lwa instance into a dbdd1

132
00:05:05,919 --> 00:05:11,440
this gives us more flexibility to

133
00:05:07,919 --> 00:05:14,080
progressively integrate the hints

134
00:05:11,440 --> 00:05:14,639
finally we transform the final tbddd

135
00:05:14,080 --> 00:05:17,840
instance

136
00:05:14,639 --> 00:05:17,840
into a svp one

137
00:05:20,160 --> 00:05:23,600
let me present the first step

138
00:05:23,680 --> 00:05:26,720
the technique is standard assume that e

139
00:05:26,400 --> 00:05:29,919
s

140
00:05:26,720 --> 00:05:32,000
is the solution of a lwe instance

141
00:05:29,919 --> 00:05:32,960
we can constrict the following lattice

142
00:05:32,000 --> 00:05:36,320
in which e

143
00:05:32,960 --> 00:05:38,560
s 1 is a short vector variance and mean

144
00:05:36,320 --> 00:05:40,639
are defined with the variance and mean

145
00:05:38,560 --> 00:05:42,880
of the error

146
00:05:40,639 --> 00:05:52,000
except for the last coefficient which is

147
00:05:42,880 --> 00:05:56,400
one with covariance zero

148
00:05:52,000 --> 00:05:56,400
we finally have our dbdd instance

149
00:05:56,800 --> 00:06:03,680
let us see the last step geometrically

150
00:06:00,880 --> 00:06:07,840
assume that we have our dbdd instance

151
00:06:03,680 --> 00:06:10,160
and we want to apply lattice reduction

152
00:06:07,840 --> 00:06:13,599
first we will homogenize the instance

153
00:06:10,160 --> 00:06:13,600
with the following equations

154
00:06:17,280 --> 00:06:21,840
then we will isotropize the instance by

155
00:06:19,840 --> 00:06:25,039
distorting the lattice to end up with a

156
00:06:21,840 --> 00:06:25,039
circular distribution

157
00:06:31,120 --> 00:06:36,720
now the issue boils down to the middle

158
00:06:33,360 --> 00:06:38,720
part which is the heart of our work

159
00:06:36,720 --> 00:06:42,880
my colleague eugene will present you the

160
00:06:38,720 --> 00:06:42,880
geometric intuitions of this part

161
00:06:43,280 --> 00:06:49,599
next i'm going to show four types of

162
00:06:44,960 --> 00:06:52,000
hints formalized in our framework

163
00:06:49,599 --> 00:06:55,440
so for the perfect hints that is

164
00:06:52,000 --> 00:06:57,360
attacker is given a vector v

165
00:06:55,440 --> 00:06:58,639
and i know the inner product of the

166
00:06:57,360 --> 00:07:04,080
secret vector and

167
00:06:58,639 --> 00:07:06,560
b modular hints have the similar form

168
00:07:04,080 --> 00:07:07,280
here attacker knows the inner product of

169
00:07:06,560 --> 00:07:12,400
the modular

170
00:07:07,280 --> 00:07:15,198
integer and the integer is known

171
00:07:12,400 --> 00:07:15,520
in approximate hints attacker is able to

172
00:07:15,199 --> 00:07:19,599
learn

173
00:07:15,520 --> 00:07:23,120
the noisy version of the inner product

174
00:07:19,599 --> 00:07:25,440
the last type of hint is a bit special

175
00:07:23,120 --> 00:07:27,440
here attacker does not know the linear

176
00:07:25,440 --> 00:07:29,360
relation of the vector secret

177
00:07:27,440 --> 00:07:31,840
but know some other information about

178
00:07:29,360 --> 00:07:31,840
the lattice

179
00:07:32,240 --> 00:07:38,400
during this talk i will be focusing on

180
00:07:34,400 --> 00:07:40,400
illustrating first three types of hints

181
00:07:38,400 --> 00:07:42,638
now let's see how these hints get

182
00:07:40,400 --> 00:07:46,799
embedded into the distorted version

183
00:07:42,639 --> 00:07:46,800
of bounded distance decoding instance

184
00:07:47,360 --> 00:07:52,240
recall that in dbd problem you want to

185
00:07:50,319 --> 00:07:55,520
find a non-trivial lattice point

186
00:07:52,240 --> 00:07:55,520
within the ellipsoid

187
00:07:56,720 --> 00:08:02,319
the perfect hint is introduced

188
00:08:00,160 --> 00:08:04,240
for a simple example you have two

189
00:08:02,319 --> 00:08:05,840
dimensional letters

190
00:08:04,240 --> 00:08:09,440
attacker learns the sum of all the

191
00:08:05,840 --> 00:08:11,520
secret coordinates equals to zero

192
00:08:09,440 --> 00:08:12,719
which can be viewed as an inner product

193
00:08:11,520 --> 00:08:17,198
of the secret

194
00:08:12,720 --> 00:08:17,199
with a vector 1 1 equals to 0.

195
00:08:19,120 --> 00:08:24,560
some extra information can be learned

196
00:08:21,360 --> 00:08:27,039
from this inner product relation

197
00:08:24,560 --> 00:08:28,560
as the value l is the projected length

198
00:08:27,039 --> 00:08:31,759
of the secret vector

199
00:08:28,560 --> 00:08:34,080
of v assuming

200
00:08:31,759 --> 00:08:36,479
v is already normalized to be a unit

201
00:08:34,080 --> 00:08:36,479
vector

202
00:08:37,919 --> 00:08:42,718
now we know that the secret vector s

203
00:08:40,640 --> 00:08:46,240
must be contained in a hyperplane

204
00:08:42,719 --> 00:08:46,240
that is orthogonal to v

205
00:08:48,800 --> 00:08:55,839
by intersecting the lattice with the

206
00:08:50,800 --> 00:08:55,839
hyperplane we get a new lattice

207
00:08:57,680 --> 00:09:01,279
we also change the mu and covariance

208
00:08:59,760 --> 00:09:04,959
correspondingly

209
00:09:01,279 --> 00:09:04,959
based on the conditional information

210
00:09:05,920 --> 00:09:10,719
and finally we get a new dbdd instance

211
00:09:11,760 --> 00:09:15,920
for the new instance the lattice has a

212
00:09:14,160 --> 00:09:18,880
dimension decreased by 1

213
00:09:15,920 --> 00:09:19,120
and has the volume increased by a vector

214
00:09:18,880 --> 00:09:23,680
of

215
00:09:19,120 --> 00:09:26,880
v as a result by integrating a perfect

216
00:09:23,680 --> 00:09:29,199
hint we get an easier dbdd instance to

217
00:09:26,880 --> 00:09:29,200
solve

218
00:09:30,959 --> 00:09:37,199
now let's look at the modular hint

219
00:09:34,560 --> 00:09:37,839
recall that modular hint has the similar

220
00:09:37,200 --> 00:09:41,360
form

221
00:09:37,839 --> 00:09:42,640
as the perfect hint it is in the form of

222
00:09:41,360 --> 00:09:46,080
a linear product

223
00:09:42,640 --> 00:09:47,920
of a secret vector s with v modulus and

224
00:09:46,080 --> 00:09:51,680
integer

225
00:09:47,920 --> 00:09:53,120
for a simple two-dimensional example

226
00:09:51,680 --> 00:09:55,040
let's see attacker notes that the

227
00:09:53,120 --> 00:09:56,320
difference between two coordinates of

228
00:09:55,040 --> 00:09:58,959
the secret

229
00:09:56,320 --> 00:09:59,920
is divisible by three which can be

230
00:09:58,959 --> 00:10:05,119
formalized

231
00:09:59,920 --> 00:10:07,040
as a modular hint

232
00:10:05,120 --> 00:10:08,240
the geometric intuition behind the

233
00:10:07,040 --> 00:10:10,480
modular hints

234
00:10:08,240 --> 00:10:12,800
is actually very similar as the perfect

235
00:10:10,480 --> 00:10:15,519
hints

236
00:10:12,800 --> 00:10:17,199
in which way the modular hence equation

237
00:10:15,519 --> 00:10:20,880
is built as the inner product

238
00:10:17,200 --> 00:10:24,000
equals to l or l plus minus k or l plus

239
00:10:20,880 --> 00:10:26,640
minus 2k and so on

240
00:10:24,000 --> 00:10:27,440
and each of these possible inner product

241
00:10:26,640 --> 00:10:30,000
values

242
00:10:27,440 --> 00:10:31,360
contributes to a header plan that the

243
00:10:30,000 --> 00:10:35,440
secret lattice point

244
00:10:31,360 --> 00:10:36,720
may lie on and this forms an infinitely

245
00:10:35,440 --> 00:10:39,200
many hyperplanes

246
00:10:36,720 --> 00:10:42,079
that are all orthogonal to v and are

247
00:10:39,200 --> 00:10:42,079
equally spaced

248
00:10:42,640 --> 00:10:46,560
we can then specify the lattice by

249
00:10:44,800 --> 00:10:49,279
intersecting with the union of the

250
00:10:46,560 --> 00:10:49,279
hyperplanes

251
00:10:52,560 --> 00:10:58,800
we modify the covariance a little bit

252
00:10:54,959 --> 00:11:01,279
and keep the center mu the same

253
00:10:58,800 --> 00:11:05,120
now by integrating the modular hinge we

254
00:11:01,279 --> 00:11:07,439
derive a new dbdd instance

255
00:11:05,120 --> 00:11:09,360
this new instance is actually an easier

256
00:11:07,440 --> 00:11:12,000
problem

257
00:11:09,360 --> 00:11:15,839
as the volume of lattice is increased by

258
00:11:12,000 --> 00:11:15,839
a factor of k

259
00:11:17,839 --> 00:11:22,240
the third type of hints is approximate

260
00:11:20,320 --> 00:11:24,240
hint

261
00:11:22,240 --> 00:11:25,680
attacker learns the noisy inner product

262
00:11:24,240 --> 00:11:28,880
of the secret vector

263
00:11:25,680 --> 00:11:31,279
with a known vector

264
00:11:28,880 --> 00:11:33,760
we see this noise as standard deviation

265
00:11:31,279 --> 00:11:33,760
sigma

266
00:11:34,560 --> 00:11:39,839
for a simple example if attacker learns

267
00:11:37,920 --> 00:11:43,120
the first coordinate of the secret

268
00:11:39,839 --> 00:11:46,399
is at round 2 then this is a good case

269
00:11:43,120 --> 00:11:46,399
to use approximate things

270
00:11:47,440 --> 00:11:52,079
for the geometric intuition given a

271
00:11:50,639 --> 00:11:54,160
vector v

272
00:11:52,079 --> 00:11:57,120
we draw a same hyperplane as we did

273
00:11:54,160 --> 00:11:59,439
imperfect hint

274
00:11:57,120 --> 00:12:00,480
however since we only know this inner

275
00:11:59,440 --> 00:12:04,240
product value

276
00:12:00,480 --> 00:12:05,839
up to some error the secret may not be

277
00:12:04,240 --> 00:12:08,959
on the helper plan

278
00:12:05,839 --> 00:12:11,360
but it is close to the hyperplane

279
00:12:08,959 --> 00:12:12,880
to integrate the approximate hint we

280
00:12:11,360 --> 00:12:15,200
keep the same letters

281
00:12:12,880 --> 00:12:16,720
but change the center and the covariance

282
00:12:15,200 --> 00:12:18,720
of the ellipsoid shape

283
00:12:16,720 --> 00:12:21,279
according to this conditional noisy

284
00:12:18,720 --> 00:12:21,279
information

285
00:12:22,000 --> 00:12:26,639
as a result the new dbdd instance has a

286
00:12:25,279 --> 00:12:29,920
smaller ellipsoid

287
00:12:26,639 --> 00:12:29,920
and is easier to solve

288
00:12:32,880 --> 00:12:36,079
that's all for the hints and you may see

289
00:12:35,279 --> 00:12:38,399
that

290
00:12:36,079 --> 00:12:40,239
each hint may affect the dimension and

291
00:12:38,399 --> 00:12:42,720
the volume of the lattice

292
00:12:40,240 --> 00:12:45,680
and the covariance of the ellipsoid in a

293
00:12:42,720 --> 00:12:45,680
predictable way

294
00:12:45,839 --> 00:12:50,800
so let's check how is our prediction and

295
00:12:48,720 --> 00:12:51,440
we also want to see how much security

296
00:12:50,800 --> 00:12:54,880
loss

297
00:12:51,440 --> 00:12:54,880
from integrating those hints

298
00:12:56,480 --> 00:13:01,120
we implemented our framework in python

299
00:12:58,480 --> 00:13:01,120
with sage

300
00:13:02,160 --> 00:13:06,800
and we have three implementations under

301
00:13:04,240 --> 00:13:09,279
the same api

302
00:13:06,800 --> 00:13:09,839
for the full-fledged versions it keeps

303
00:13:09,279 --> 00:13:12,240
track of

304
00:13:09,839 --> 00:13:13,360
lattice spaces center and a covariance

305
00:13:12,240 --> 00:13:16,079
of ellipsoid

306
00:13:13,360 --> 00:13:20,160
and can launch a full attack at the end

307
00:13:16,079 --> 00:13:23,680
under physical dimensions

308
00:13:20,160 --> 00:13:23,680
it also provides prediction

309
00:13:24,639 --> 00:13:30,000
the other two are lighter versions they

310
00:13:27,680 --> 00:13:32,160
don't track that much information

311
00:13:30,000 --> 00:13:33,600
but to predict the security loss based

312
00:13:32,160 --> 00:13:35,040
on the changes of the volume and the

313
00:13:33,600 --> 00:13:38,320
dimensions or letters

314
00:13:35,040 --> 00:13:38,880
when integrating each hint the last

315
00:13:38,320 --> 00:13:40,560
version

316
00:13:38,880 --> 00:13:42,560
is even faster but with more

317
00:13:40,560 --> 00:13:45,040
restrictions

318
00:13:42,560 --> 00:13:49,839
melissa will give a demo on how to use

319
00:13:45,040 --> 00:13:49,839
this framework implementation at the end

320
00:13:50,560 --> 00:13:55,680
now let's look at our prediction versus

321
00:13:53,040 --> 00:13:58,639
experiment

322
00:13:55,680 --> 00:14:00,000
from the figures you can see that for

323
00:13:58,639 --> 00:14:02,160
each type of hint

324
00:14:00,000 --> 00:14:03,440
we are able to have the prediction very

325
00:14:02,160 --> 00:14:06,959
close to the experiment

326
00:14:03,440 --> 00:14:10,079
result for each example we start from

327
00:14:06,959 --> 00:14:12,000
two different dimensions

328
00:14:10,079 --> 00:14:14,239
as the number of hints integrated into

329
00:14:12,000 --> 00:14:16,560
the instance is increasing

330
00:14:14,240 --> 00:14:19,839
the blue curves overall keeps to be very

331
00:14:16,560 --> 00:14:22,079
close to the red curves

332
00:14:19,839 --> 00:14:25,760
next my colleague melissa will talk

333
00:14:22,079 --> 00:14:25,760
about the real world applications

334
00:14:26,560 --> 00:14:31,760
here comes the application part the

335
00:14:29,199 --> 00:14:34,000
types of hints presented by eugene may

336
00:14:31,760 --> 00:14:36,959
seem a little useless for a real word

337
00:14:34,000 --> 00:14:39,839
situational attacks it is true that

338
00:14:36,959 --> 00:14:42,800
leakages are never linear in the secrets

339
00:14:39,839 --> 00:14:44,079
however with some transformation one can

340
00:14:42,800 --> 00:14:48,000
use them for concrete

341
00:14:44,079 --> 00:14:49,760
cases let us see how it works on a

342
00:14:48,000 --> 00:14:52,480
simple example

343
00:14:49,760 --> 00:14:53,760
consider a secret coefficient s i

344
00:14:52,480 --> 00:14:57,279
between -5

345
00:14:53,760 --> 00:14:58,000
and 5. after a poor analysis an attacker

346
00:14:57,279 --> 00:15:01,040
can learn

347
00:14:58,000 --> 00:15:05,040
the hamming weight of s0 for example

348
00:15:01,040 --> 00:15:08,000
say hamming weight of s0 equals 2

349
00:15:05,040 --> 00:15:08,880
then there are only two choices for s0

350
00:15:08,000 --> 00:15:12,560
either 3

351
00:15:08,880 --> 00:15:14,079
or 5 this is quite a significant

352
00:15:12,560 --> 00:15:17,279
information

353
00:15:14,079 --> 00:15:19,599
and we can include it with hints

354
00:15:17,279 --> 00:15:22,079
a first modular hint can reduce the

355
00:15:19,600 --> 00:15:25,120
possibilities modulo 2

356
00:15:22,079 --> 00:15:26,319
and a second approximate hint can focus

357
00:15:25,120 --> 00:15:29,040
the distribution

358
00:15:26,320 --> 00:15:29,040
around four

359
00:15:30,000 --> 00:15:33,680
this can be generalized to other side

360
00:15:32,320 --> 00:15:36,000
channel attacks

361
00:15:33,680 --> 00:15:37,439
we for example use the data of the first

362
00:15:36,000 --> 00:15:40,720
attack presented by

363
00:15:37,440 --> 00:15:45,199
boss friedberger martholini oswald

364
00:15:40,720 --> 00:15:45,199
and stem in sac 2018.

365
00:15:46,560 --> 00:15:49,839
in this paper the authors present two

366
00:15:48,959 --> 00:15:52,880
attacks

367
00:15:49,839 --> 00:15:54,880
while the second attack was successful

368
00:15:52,880 --> 00:15:56,800
the first attack did not work because

369
00:15:54,880 --> 00:15:58,639
the leaked information was too weak for

370
00:15:56,800 --> 00:16:03,120
a full key recovery

371
00:15:58,639 --> 00:16:03,120
so it is a perfect use case for our two

372
00:16:04,959 --> 00:16:08,239
the side channel is a single trace

373
00:16:06,959 --> 00:16:10,560
template attack

374
00:16:08,240 --> 00:16:12,480
the attacker obtains an aposteriori

375
00:16:10,560 --> 00:16:16,239
distribution of the secret

376
00:16:12,480 --> 00:16:16,959
for example he recovers s0 equal to with

377
00:16:16,240 --> 00:16:20,880
80

378
00:16:16,959 --> 00:16:23,439
probability and s1 equals 0 with 100

379
00:16:20,880 --> 00:16:24,800
probability and so on for the other

380
00:16:23,440 --> 00:16:27,759
coefficients

381
00:16:24,800 --> 00:16:28,079
even if the probability is very high it

382
00:16:27,759 --> 00:16:30,480
is

383
00:16:28,079 --> 00:16:32,959
very expensive to recover the secret key

384
00:16:30,480 --> 00:16:34,880
with brute force

385
00:16:32,959 --> 00:16:36,000
however this information can be

386
00:16:34,880 --> 00:16:38,880
transformed into

387
00:16:36,000 --> 00:16:40,000
approximate and perfect hints for the

388
00:16:38,880 --> 00:16:41,839
approximate hint

389
00:16:40,000 --> 00:16:46,320
we derive the center and the standard

390
00:16:41,839 --> 00:16:46,320
deviation of the posteriori distribution

391
00:16:47,519 --> 00:16:52,000
finally our framework to allow to

392
00:16:49,440 --> 00:16:54,560
heavily decrease the block size

393
00:16:52,000 --> 00:16:57,440
the unit here is denoted bix it

394
00:16:54,560 --> 00:16:59,680
represents the block size

395
00:16:57,440 --> 00:17:01,120
we also propose a probabilistic attack

396
00:16:59,680 --> 00:17:03,519
with guesses

397
00:17:01,120 --> 00:17:04,959
when the probability of an approximate

398
00:17:03,519 --> 00:17:09,199
hint is very high

399
00:17:04,959 --> 00:17:09,199
we transform it into a perfect heat

400
00:17:09,280 --> 00:17:13,359
here we are in a case where there is a

401
00:17:11,599 --> 00:17:15,520
lot of side information

402
00:17:13,359 --> 00:17:19,280
and this allows to drastically decrease

403
00:17:15,520 --> 00:17:21,520
the complexity of the lattice reduction

404
00:17:19,280 --> 00:17:24,399
as a second example the decryption

405
00:17:21,520 --> 00:17:26,959
failures also provide side information

406
00:17:24,400 --> 00:17:29,120
indeed a decryption failure happens if

407
00:17:26,959 --> 00:17:32,880
the scalar product of the ciphertext

408
00:17:29,120 --> 00:17:35,520
and the secret is abnormally large

409
00:17:32,880 --> 00:17:37,200
this can be integrated as approximate

410
00:17:35,520 --> 00:17:39,840
hints

411
00:17:37,200 --> 00:17:40,799
with our tool we can reproduce the work

412
00:17:39,840 --> 00:17:43,760
of danvers

413
00:17:40,799 --> 00:17:44,720
guo johansson nielsen verkhoteren and

414
00:17:43,760 --> 00:17:48,720
verbal veda

415
00:17:44,720 --> 00:17:48,720
from pkc 2018

416
00:17:50,880 --> 00:17:54,880
and we obtain similar results in the

417
00:17:53,840 --> 00:17:57,120
x-axis

418
00:17:54,880 --> 00:17:58,960
we have the side information in other

419
00:17:57,120 --> 00:18:02,000
words the number of failures

420
00:17:58,960 --> 00:18:03,840
in the y-axis we have the amount of work

421
00:18:02,000 --> 00:18:06,240
for the attack

422
00:18:03,840 --> 00:18:08,559
the more failures the easier the attack

423
00:18:06,240 --> 00:18:08,559
gets

424
00:18:09,919 --> 00:18:13,520
another application was quite surprising

425
00:18:12,720 --> 00:18:16,400
some hints

426
00:18:13,520 --> 00:18:17,120
exist by design several real world

427
00:18:16,400 --> 00:18:20,320
schemes like

428
00:18:17,120 --> 00:18:23,600
entrue lag or round 5 use fixed weight

429
00:18:20,320 --> 00:18:25,439
ternary secrets this naturally induces a

430
00:18:23,600 --> 00:18:27,199
perfect hint

431
00:18:25,440 --> 00:18:29,919
the integration of these structural

432
00:18:27,200 --> 00:18:32,160
hints slightly benefit to an attacker

433
00:18:29,919 --> 00:18:33,039
we can see that the block size decreases

434
00:18:32,160 --> 00:18:37,360
by one two

435
00:18:33,039 --> 00:18:40,000
or three the lattice reduction work is

436
00:18:37,360 --> 00:18:42,320
still very high though

437
00:18:40,000 --> 00:18:44,080
let me finish this presentation by

438
00:18:42,320 --> 00:18:47,439
demonstrating our tool

439
00:18:44,080 --> 00:18:51,840
in its full flooded version it needs

440
00:18:47,440 --> 00:18:55,120
sage map 9.0 we first load our framework

441
00:18:51,840 --> 00:18:57,760
and build a lwe instance

442
00:18:55,120 --> 00:18:59,439
the tool creates the dbdd instance

443
00:18:57,760 --> 00:19:02,320
associated

444
00:18:59,440 --> 00:19:02,880
and estimates the attack by computing

445
00:19:02,320 --> 00:19:05,439
beta

446
00:19:02,880 --> 00:19:05,440
and delta

447
00:19:07,919 --> 00:19:13,280
it estimates a block size of beta equals

448
00:19:11,200 --> 00:19:15,600
45

449
00:19:13,280 --> 00:19:19,039
the instance is small so we can actually

450
00:19:15,600 --> 00:19:19,039
attack using bjz

451
00:19:22,640 --> 00:19:27,600
a block size of 46 was enough to recover

452
00:19:25,919 --> 00:19:29,679
the secret

453
00:19:27,600 --> 00:19:38,879
let us do the same with two randomly

454
00:19:29,679 --> 00:19:42,480
generated perfect hits

455
00:19:38,880 --> 00:19:42,480
pita is now 38

456
00:19:42,960 --> 00:19:47,360
we now integrate two random modular

457
00:19:50,840 --> 00:19:53,840
hints

458
00:19:54,160 --> 00:19:57,520
and approximate hints

459
00:19:59,760 --> 00:20:07,840
now the block size is estimated at 35

460
00:20:04,559 --> 00:20:07,840
we run the attack again

461
00:20:15,679 --> 00:20:22,480
and end up with a block size of 39

462
00:20:20,320 --> 00:20:25,039
the hints helped to have a more

463
00:20:22,480 --> 00:20:27,360
efficient attack

464
00:20:25,039 --> 00:20:30,240
our tool is available on github feel

465
00:20:27,360 --> 00:20:35,840
free to use it and improve it

466
00:20:30,240 --> 00:20:35,840
thanks for watching

