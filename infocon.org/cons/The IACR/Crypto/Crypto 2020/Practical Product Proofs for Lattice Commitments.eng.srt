1
00:00:01,199 --> 00:00:06,000
hello i'm going to present

2
00:00:03,840 --> 00:00:07,600
our paper practical product proofs for

3
00:00:06,000 --> 00:00:10,320
letters commitments

4
00:00:07,600 --> 00:00:12,799
and this is joint work with thomas atema

5
00:00:10,320 --> 00:00:14,639
and vladimirsky and my name is gregor

6
00:00:12,799 --> 00:00:16,880
zeiler

7
00:00:14,639 --> 00:00:18,640
okay so let me start with with a simple

8
00:00:16,880 --> 00:00:19,520
example that shows that product proofs

9
00:00:18,640 --> 00:00:21,279
are useful

10
00:00:19,520 --> 00:00:23,519
and this some example is about range

11
00:00:21,279 --> 00:00:25,680
proofs in a range proof

12
00:00:23,519 --> 00:00:27,759
the goal is to be able to commit to some

13
00:00:25,680 --> 00:00:29,279
vector and then prove that

14
00:00:27,760 --> 00:00:31,679
the vector is binary so all the

15
00:00:29,279 --> 00:00:33,360
coefficients are either 0 or 1

16
00:00:31,679 --> 00:00:35,440
and also that the integer that is

17
00:00:33,360 --> 00:00:37,920
encoded by the vector lies in a certain

18
00:00:35,440 --> 00:00:39,199
interval which means that only the first

19
00:00:37,920 --> 00:00:40,719
k coefficients

20
00:00:39,200 --> 00:00:43,280
are really 0 and 1 and then the

21
00:00:40,719 --> 00:00:44,800
remaining n minus k coefficients are all

22
00:00:43,280 --> 00:00:47,600
zero which

23
00:00:44,800 --> 00:00:48,800
implies that the integer that is encoded

24
00:00:47,600 --> 00:00:51,680
lies in the interval

25
00:00:48,800 --> 00:00:55,199
between 0 and 2 to the k and then

26
00:00:51,680 --> 00:00:56,960
therefore this is called a range proof

27
00:00:55,199 --> 00:00:59,120
this problem can be solved with a

28
00:00:56,960 --> 00:01:00,559
product proof where one is able to prove

29
00:00:59,120 --> 00:01:02,640
product relations

30
00:01:00,559 --> 00:01:05,759
on individual coefficients of the vector

31
00:01:02,640 --> 00:01:07,439
m so precisely we want to be able to

32
00:01:05,760 --> 00:01:11,040
prove that the first k coefficients are

33
00:01:07,439 --> 00:01:14,240
0 1 so we prove that they fulfill the

34
00:01:11,040 --> 00:01:15,840
relations m i times one minus m i

35
00:01:14,240 --> 00:01:17,839
equals zero and then we want to prove

36
00:01:15,840 --> 00:01:20,320
that the the other coefficients are zero

37
00:01:17,840 --> 00:01:23,680
which we show by proving the relation m

38
00:01:20,320 --> 00:01:23,679
i squared equals zero

39
00:01:23,840 --> 00:01:30,400
now in our paper one of the main results

40
00:01:27,280 --> 00:01:32,720
is an improved product proof for a

41
00:01:30,400 --> 00:01:34,640
certain letters-based commitment scheme

42
00:01:32,720 --> 00:01:38,000
and then in turn these product proofs

43
00:01:34,640 --> 00:01:41,920
allow us to construct a range proof

44
00:01:38,000 --> 00:01:42,399
which for a 1024 bit range has a proof

45
00:01:41,920 --> 00:01:45,360
size

46
00:01:42,399 --> 00:01:47,439
of 31 kilobytes but apart from this

47
00:01:45,360 --> 00:01:50,640
result we also

48
00:01:47,439 --> 00:01:52,720
give new technical

49
00:01:50,640 --> 00:01:56,960
contributions that are interesting

50
00:01:52,720 --> 00:01:56,960
outside of product or range proofs

51
00:01:57,280 --> 00:02:03,520
okay with this introduction let me start

52
00:02:00,960 --> 00:02:05,199
with the algebraic setup that we will be

53
00:02:03,520 --> 00:02:08,239
using

54
00:02:05,200 --> 00:02:10,878
and as is usually the case in

55
00:02:08,239 --> 00:02:12,720
efficient lattice-based constructions we

56
00:02:10,878 --> 00:02:14,000
will be working over some polynomial

57
00:02:12,720 --> 00:02:16,879
ring

58
00:02:14,000 --> 00:02:18,319
now it has emerged in the last years

59
00:02:16,879 --> 00:02:21,120
that it's usually best

60
00:02:18,319 --> 00:02:23,280
to choose the smallest ring that is

61
00:02:21,120 --> 00:02:26,319
sufficient for a task and therefore

62
00:02:23,280 --> 00:02:29,280
in all our protocols we will use

63
00:02:26,319 --> 00:02:30,000
this standard power of two cycloatomic

64
00:02:29,280 --> 00:02:35,120
ring

65
00:02:30,000 --> 00:02:37,840
of rank 128. the rank 128 is because we

66
00:02:35,120 --> 00:02:41,280
aim for 128 bits of security

67
00:02:37,840 --> 00:02:43,040
and then the the modulus

68
00:02:41,280 --> 00:02:44,800
we are using will be a prime number but

69
00:02:43,040 --> 00:02:47,760
i'm saying more about this in a second

70
00:02:44,800 --> 00:02:47,760
so the modulus q

71
00:02:48,160 --> 00:02:55,200
okay so i said our product proof

72
00:02:52,080 --> 00:02:56,640
is improving product relations

73
00:02:55,200 --> 00:02:58,560
for a particular lattice based

74
00:02:56,640 --> 00:03:00,640
commitment scheme so let me introduce

75
00:02:58,560 --> 00:03:01,599
this commitment scheme now and we will

76
00:03:00,640 --> 00:03:04,879
be using the

77
00:03:01,599 --> 00:03:08,319
the bd-lop commitment scheme this was

78
00:03:04,879 --> 00:03:10,319
presented at scn 2018

79
00:03:08,319 --> 00:03:11,839
in this scheme there are the following

80
00:03:10,319 --> 00:03:15,280
public parameters

81
00:03:11,840 --> 00:03:16,080
there is a matrix b0 over the ring rq

82
00:03:15,280 --> 00:03:19,040
and then there are

83
00:03:16,080 --> 00:03:21,280
potentially many row vectors b1 b2 and

84
00:03:19,040 --> 00:03:23,599
so on

85
00:03:21,280 --> 00:03:25,680
with these public information one can

86
00:03:23,599 --> 00:03:28,319
commit to arbitrary polynomials

87
00:03:25,680 --> 00:03:29,280
in in the ring rq let's call them m1 m2

88
00:03:28,319 --> 00:03:32,560
and so on

89
00:03:29,280 --> 00:03:34,720
by sampling a short vector r and

90
00:03:32,560 --> 00:03:36,159
computing the following expressions so

91
00:03:34,720 --> 00:03:38,959
one computes b 0

92
00:03:36,159 --> 00:03:39,920
times r and then for every message

93
00:03:38,959 --> 00:03:44,799
polynomial m

94
00:03:39,920 --> 00:03:47,920
i b i r plus m i

95
00:03:44,799 --> 00:03:50,159
and then all these polynomials t i

96
00:03:47,920 --> 00:03:53,518
together with the vector t 0

97
00:03:50,159 --> 00:03:56,560
this gives the full commitment

98
00:03:53,519 --> 00:03:58,239
to to all the polynomials mi

99
00:03:56,560 --> 00:04:00,879
this is really a proper commitment

100
00:03:58,239 --> 00:04:02,640
scheme so it is hiding and binding

101
00:04:00,879 --> 00:04:04,879
and it's very easy to see this i'm

102
00:04:02,640 --> 00:04:08,238
quickly recalling this fact

103
00:04:04,879 --> 00:04:10,079
um this scheme is hiding because every

104
00:04:08,239 --> 00:04:12,799
polynomial in t zero but also

105
00:04:10,080 --> 00:04:14,879
the polynomial is t i they contain an

106
00:04:12,799 --> 00:04:17,440
additive term that is

107
00:04:14,879 --> 00:04:19,039
an independent module lwe sample

108
00:04:17,440 --> 00:04:21,279
therefore all the polynomials

109
00:04:19,040 --> 00:04:23,120
look uniformly random under the module

110
00:04:21,279 --> 00:04:26,960
lgbe assumption

111
00:04:23,120 --> 00:04:30,000
and the scheme is binding because

112
00:04:26,960 --> 00:04:32,239
if one would be able to choose

113
00:04:30,000 --> 00:04:33,280
or to change one of the messages mi

114
00:04:32,240 --> 00:04:35,680
without change

115
00:04:33,280 --> 00:04:37,440
changing the corresponding commitment ti

116
00:04:35,680 --> 00:04:40,000
then one would also need to

117
00:04:37,440 --> 00:04:40,719
be able to change the randomness vector

118
00:04:40,000 --> 00:04:43,759
r

119
00:04:40,720 --> 00:04:47,040
but this first equation t

120
00:04:43,759 --> 00:04:50,160
0 equals b 0 r kind of serves

121
00:04:47,040 --> 00:04:52,320
to authenticate this vector r so if one

122
00:04:50,160 --> 00:04:55,120
would be able to give a second vector

123
00:04:52,320 --> 00:04:56,000
that still gives the same t 0 second

124
00:04:55,120 --> 00:04:57,600
randomness vector

125
00:04:56,000 --> 00:05:01,440
then one would have found the modulus

126
00:04:57,600 --> 00:05:01,440
solution which we assume is not possible

127
00:05:01,520 --> 00:05:07,520
okay so now essentially all the

128
00:05:04,560 --> 00:05:08,960
efficient zero knowledge proofs about

129
00:05:07,520 --> 00:05:11,840
this commitment scheme

130
00:05:08,960 --> 00:05:13,919
they have an underlying building block

131
00:05:11,840 --> 00:05:15,919
that is

132
00:05:13,919 --> 00:05:17,599
just in a so-called approximate proof

133
00:05:15,919 --> 00:05:19,198
for the first equation

134
00:05:17,600 --> 00:05:20,720
and we call this building block the

135
00:05:19,199 --> 00:05:23,759
opening proof because

136
00:05:20,720 --> 00:05:25,680
this proof of the first equation in

137
00:05:23,759 --> 00:05:26,960
on its own essentially shows that one

138
00:05:25,680 --> 00:05:29,759
knows an opening

139
00:05:26,960 --> 00:05:31,440
for the commitment and then starting

140
00:05:29,759 --> 00:05:32,960
from this building blocks usually your

141
00:05:31,440 --> 00:05:34,639
knowledge proof systems about this

142
00:05:32,960 --> 00:05:38,320
commitment scheme work by

143
00:05:34,639 --> 00:05:40,880
adding additional features to this

144
00:05:38,320 --> 00:05:42,240
opening proof um so basically extending

145
00:05:40,880 --> 00:05:42,880
this opening proofs and our product

146
00:05:42,240 --> 00:05:45,360
proof is no

147
00:05:42,880 --> 00:05:47,199
no example but since we also give a new

148
00:05:45,360 --> 00:05:48,960
analysis of this opening proof that is

149
00:05:47,199 --> 00:05:49,520
very crucial for our product proof i

150
00:05:48,960 --> 00:05:52,880
will

151
00:05:49,520 --> 00:05:54,560
now start with the opening proof um

152
00:05:52,880 --> 00:05:56,000
as i said it's an approximate proof of

153
00:05:54,560 --> 00:05:58,800
the first equation

154
00:05:56,000 --> 00:06:00,560
which is essentially modeled after

155
00:05:58,800 --> 00:06:03,120
proofs in the discrete log world

156
00:06:00,560 --> 00:06:04,000
and it works in the following way the

157
00:06:03,120 --> 00:06:07,759
prover

158
00:06:04,000 --> 00:06:10,639
samples short so-called masking vector y

159
00:06:07,759 --> 00:06:11,360
from some narrow distribution then

160
00:06:10,639 --> 00:06:14,160
computes

161
00:06:11,360 --> 00:06:15,039
w which is v 0 y sends this to the

162
00:06:14,160 --> 00:06:18,160
verifier

163
00:06:15,039 --> 00:06:20,000
the verifier samples a challenge c

164
00:06:18,160 --> 00:06:22,400
which is a very short polynomial that

165
00:06:20,000 --> 00:06:26,319
usually consists of

166
00:06:22,400 --> 00:06:28,560
trinary coefficients in -101

167
00:06:26,319 --> 00:06:29,360
then the verifier sends this polynomial

168
00:06:28,560 --> 00:06:32,160
to the prover

169
00:06:29,360 --> 00:06:32,800
who computes what we call a masked

170
00:06:32,160 --> 00:06:34,880
opening

171
00:06:32,800 --> 00:06:36,720
and we call this mask opening set and it

172
00:06:34,880 --> 00:06:40,159
is of the following form it is

173
00:06:36,720 --> 00:06:43,039
the masking vector y plus c times

174
00:06:40,160 --> 00:06:44,479
uh the randomness vector and then in in

175
00:06:43,039 --> 00:06:47,599
the lattice world

176
00:06:44,479 --> 00:06:49,520
uh there is a technical complication

177
00:06:47,600 --> 00:06:51,520
the prover cannot just send this set

178
00:06:49,520 --> 00:06:52,719
otherwise the protocol would not be zero

179
00:06:51,520 --> 00:06:55,440
knowledge because that

180
00:06:52,720 --> 00:06:55,919
would reveal secret information but

181
00:06:55,440 --> 00:06:58,960
there's

182
00:06:55,919 --> 00:07:01,520
um by now a standard technique um

183
00:06:58,960 --> 00:07:02,318
how to avoid this by basically aborting

184
00:07:01,520 --> 00:07:05,840
if if

185
00:07:02,319 --> 00:07:08,880
that reveals secret information

186
00:07:05,840 --> 00:07:12,638
if the approver is is

187
00:07:08,880 --> 00:07:14,719
able to send that then the verifier

188
00:07:12,639 --> 00:07:16,400
checks that it is short and some

189
00:07:14,720 --> 00:07:19,440
verification equation

190
00:07:16,400 --> 00:07:21,198
so this is the approximate proof

191
00:07:19,440 --> 00:07:22,479
for the first equation which shows that

192
00:07:21,199 --> 00:07:24,319
one knows an opening

193
00:07:22,479 --> 00:07:25,919
now i give an example how this can be

194
00:07:24,319 --> 00:07:28,479
extended to prove

195
00:07:25,919 --> 00:07:30,080
additional statements and the the

196
00:07:28,479 --> 00:07:33,440
simplest extension

197
00:07:30,080 --> 00:07:35,680
for example is if the approver just

198
00:07:33,440 --> 00:07:38,319
wanted to prove that one of the message

199
00:07:35,680 --> 00:07:39,759
polynomials say m1 is zero

200
00:07:38,319 --> 00:07:41,599
in this case the proverb would also

201
00:07:39,759 --> 00:07:44,240
compute b1y

202
00:07:41,599 --> 00:07:45,520
and send this to the verifier we then

203
00:07:44,240 --> 00:07:46,400
checks an additional verification

204
00:07:45,520 --> 00:07:48,318
equations

205
00:07:46,400 --> 00:07:49,919
so this is essentially a general pattern

206
00:07:48,319 --> 00:07:52,319
that then uses this building block

207
00:07:49,919 --> 00:07:53,840
and adds new polynomials that are sent

208
00:07:52,319 --> 00:07:56,639
and new verification equations for the

209
00:07:53,840 --> 00:07:59,679
verifier and then one gets

210
00:07:56,639 --> 00:08:04,000
basically more advanced protocols

211
00:07:59,680 --> 00:08:06,240
if and then analyst analyzes

212
00:08:04,000 --> 00:08:08,319
this proof of commitment to xero that

213
00:08:06,240 --> 00:08:11,039
i've presented on the previous slide

214
00:08:08,319 --> 00:08:13,759
and then one finds that all one can

215
00:08:11,039 --> 00:08:17,039
extract is is the following so the

216
00:08:13,759 --> 00:08:19,919
thing one can extract is one message m1

217
00:08:17,039 --> 00:08:20,639
and a so-called challenge difference c

218
00:08:19,919 --> 00:08:22,639
bar

219
00:08:20,639 --> 00:08:24,960
that is uh the difference of two

220
00:08:22,639 --> 00:08:28,720
challenges into accepting transcripts

221
00:08:24,960 --> 00:08:30,479
such that c bar times m one equals zero

222
00:08:28,720 --> 00:08:32,159
now this is of course only sufficient to

223
00:08:30,479 --> 00:08:35,439
prove that m1 is zero if

224
00:08:32,159 --> 00:08:39,200
c bar is invertible and for this

225
00:08:35,440 --> 00:08:42,640
technical reasons all previous

226
00:08:39,200 --> 00:08:44,399
papers about the knowledge proofs

227
00:08:42,640 --> 00:08:45,760
for the bdlop commitment scheme they

228
00:08:44,399 --> 00:08:48,880
have uh

229
00:08:45,760 --> 00:08:51,360
restricted to the case where c bar

230
00:08:48,880 --> 00:08:53,439
is always known to be invertible so this

231
00:08:51,360 --> 00:08:55,760
is possible by either julius in the ring

232
00:08:53,440 --> 00:08:57,120
in a in a suitable way or by restricting

233
00:08:55,760 --> 00:08:59,920
the challenge set so that

234
00:08:57,120 --> 00:09:01,279
one knows that the difference of all uh

235
00:08:59,920 --> 00:09:02,959
challenged polynomials is always

236
00:09:01,279 --> 00:09:06,959
invertible

237
00:09:02,959 --> 00:09:09,040
and with this uh i can explain that our

238
00:09:06,959 --> 00:09:11,119
first

239
00:09:09,040 --> 00:09:12,319
basically improvement for the opening

240
00:09:11,120 --> 00:09:14,720
proof is that we drop

241
00:09:12,320 --> 00:09:16,720
this assumption that the c bias

242
00:09:14,720 --> 00:09:20,560
invertible and show how to work with

243
00:09:16,720 --> 00:09:20,560
non-invertible challenges

244
00:09:21,040 --> 00:09:24,399
i explain this in the following way so

245
00:09:23,760 --> 00:09:27,200
we need

246
00:09:24,399 --> 00:09:29,279
first a better characterization what it

247
00:09:27,200 --> 00:09:30,080
means for an element in our ring to be

248
00:09:29,279 --> 00:09:31,760
invertible

249
00:09:30,080 --> 00:09:33,360
and the best characterization for this

250
00:09:31,760 --> 00:09:36,800
works while the chinese remain

251
00:09:33,360 --> 00:09:37,440
theorem so essentially depending on how

252
00:09:36,800 --> 00:09:40,479
much

253
00:09:37,440 --> 00:09:43,839
q splits in the cycloatomic ring

254
00:09:40,480 --> 00:09:47,440
um our ring our q is the product

255
00:09:43,839 --> 00:09:50,000
of uh smaller fields so

256
00:09:47,440 --> 00:09:52,880
this is nothing else then that the the

257
00:09:50,000 --> 00:09:54,720
polynomial x to the 128 plus one

258
00:09:52,880 --> 00:09:56,240
factors modulo q into smaller

259
00:09:54,720 --> 00:09:57,360
polynomials and then by the chinese

260
00:09:56,240 --> 00:09:59,920
remainder theorem

261
00:09:57,360 --> 00:10:00,800
uh this this ring is a product of of the

262
00:09:59,920 --> 00:10:05,199
rings c q

263
00:10:00,800 --> 00:10:08,240
x modulo these these vector polynomials

264
00:10:05,200 --> 00:10:08,959
for simplicity we usually call the the

265
00:10:08,240 --> 00:10:11,760
the

266
00:10:08,959 --> 00:10:15,279
fields that emerge that the crt slots

267
00:10:11,760 --> 00:10:19,360
crt for chinese reminders there

268
00:10:15,279 --> 00:10:22,160
now for the talk i decided to focus

269
00:10:19,360 --> 00:10:23,200
on a particular simple case for our

270
00:10:22,160 --> 00:10:26,480
protocol

271
00:10:23,200 --> 00:10:27,120
where the ring only splits into clt

272
00:10:26,480 --> 00:10:30,880
slots

273
00:10:27,120 --> 00:10:32,560
of degree 4. so this is why

274
00:10:30,880 --> 00:10:34,079
basically all the factors of x to the

275
00:10:32,560 --> 00:10:37,279
128 plus 1

276
00:10:34,079 --> 00:10:39,519
are of the form x to the 4 minus r

277
00:10:37,279 --> 00:10:40,560
this removes a lot of the complications

278
00:10:39,519 --> 00:10:45,360
in our paper

279
00:10:40,560 --> 00:10:45,359
but it simplifies the the talk

280
00:10:45,440 --> 00:10:52,880
okay so um now

281
00:10:49,040 --> 00:10:56,000
we with this basically

282
00:10:52,880 --> 00:10:58,800
splitting of our ring we see that

283
00:10:56,000 --> 00:11:00,880
some element for example c bar is

284
00:10:58,800 --> 00:11:04,560
invertible if and only if

285
00:11:00,880 --> 00:11:05,519
it is non-zero modulo all the factors x

286
00:11:04,560 --> 00:11:08,719
to the four minus

287
00:11:05,519 --> 00:11:11,360
r j and if you remember this equation

288
00:11:08,720 --> 00:11:12,880
c bar times m one equals zero then we

289
00:11:11,360 --> 00:11:15,680
see

290
00:11:12,880 --> 00:11:16,240
this is not used less in the case where

291
00:11:15,680 --> 00:11:19,359
c buyer

292
00:11:16,240 --> 00:11:21,519
is is uh non-invertible because it still

293
00:11:19,360 --> 00:11:23,519
proves that m1 is zero modulo all the x

294
00:11:21,519 --> 00:11:24,720
to the four minus rj where c is really

295
00:11:23,519 --> 00:11:26,320
non-zero

296
00:11:24,720 --> 00:11:28,399
it's just that there might be a couple

297
00:11:26,320 --> 00:11:31,360
of entity slots where

298
00:11:28,399 --> 00:11:32,640
c by zero and then mod in these entities

299
00:11:31,360 --> 00:11:36,560
lots we don't learn

300
00:11:32,640 --> 00:11:40,560
anything about m1 therefore

301
00:11:36,560 --> 00:11:43,599
and and the idea for our

302
00:11:40,560 --> 00:11:46,800
improved protocol is that we don't

303
00:11:43,600 --> 00:11:48,959
try to be able in the extraction

304
00:11:46,800 --> 00:11:50,880
to get a challenge different c but that

305
00:11:48,959 --> 00:11:51,760
is really invertible so non-zero

306
00:11:50,880 --> 00:11:54,959
everywhere

307
00:11:51,760 --> 00:11:57,120
but we want to set up the scheme in such

308
00:11:54,959 --> 00:11:58,319
a way that the extractor can obtain many

309
00:11:57,120 --> 00:12:00,480
different

310
00:11:58,320 --> 00:12:01,360
c bar j's with the property that for

311
00:12:00,480 --> 00:12:04,560
every

312
00:12:01,360 --> 00:12:06,480
uh basically for every vector x to the

313
00:12:04,560 --> 00:12:09,040
four minus r j there is one

314
00:12:06,480 --> 00:12:10,160
c bar j that is non zero there and then

315
00:12:09,040 --> 00:12:14,000
if we also have

316
00:12:10,160 --> 00:12:15,600
all these equations c by j times m1

317
00:12:14,000 --> 00:12:17,680
equals zero then we can piece them all

318
00:12:15,600 --> 00:12:18,560
together and the deals that m1 is really

319
00:12:17,680 --> 00:12:21,680
completely

320
00:12:18,560 --> 00:12:21,680
zero everywhere

321
00:12:21,920 --> 00:12:29,519
okay so how do we implement this idea

322
00:12:25,040 --> 00:12:32,240
um essentially all we have to do is

323
00:12:29,519 --> 00:12:32,800
we have to bound the probability that c

324
00:12:32,240 --> 00:12:36,160
bar

325
00:12:32,800 --> 00:12:38,240
is zero modulo these factors

326
00:12:36,160 --> 00:12:39,600
x to the four minus r because if this

327
00:12:38,240 --> 00:12:42,720
probability

328
00:12:39,600 --> 00:12:45,839
is is very small then into

329
00:12:42,720 --> 00:12:47,440
intuitively the prover has a small

330
00:12:45,839 --> 00:12:50,480
cheating probability

331
00:12:47,440 --> 00:12:53,920
um so basically all the prover can do

332
00:12:50,480 --> 00:12:56,240
to get away with proving that m1 is zero

333
00:12:53,920 --> 00:12:57,279
if if it is not zero modulo one of the x

334
00:12:56,240 --> 00:13:01,600
to the four minus r

335
00:12:57,279 --> 00:13:03,839
is to hope that um c bar is always zero

336
00:13:01,600 --> 00:13:05,200
um modulo this factor and if this

337
00:13:03,839 --> 00:13:08,240
probability is very small

338
00:13:05,200 --> 00:13:10,720
then his success probability is more

339
00:13:08,240 --> 00:13:12,160
so yeah yeah so how do we compute this

340
00:13:10,720 --> 00:13:14,079
probability

341
00:13:12,160 --> 00:13:15,360
uh if if we write down a challenge

342
00:13:14,079 --> 00:13:18,000
polynomial c

343
00:13:15,360 --> 00:13:20,560
with coefficients ci that are sampled

344
00:13:18,000 --> 00:13:23,360
from the set -101

345
00:13:20,560 --> 00:13:25,040
then we can slightly re-write this

346
00:13:23,360 --> 00:13:26,399
polynomial by grouping together

347
00:13:25,040 --> 00:13:30,000
coefficients

348
00:13:26,399 --> 00:13:33,120
whose index is or has the same remainder

349
00:13:30,000 --> 00:13:35,519
mod 4 and so i've done this

350
00:13:33,120 --> 00:13:38,079
on the bottom of the slide and in this

351
00:13:35,519 --> 00:13:40,880
representation of c we see that

352
00:13:38,079 --> 00:13:41,359
the reduction of c mod x to the four

353
00:13:40,880 --> 00:13:42,880
minus

354
00:13:41,360 --> 00:13:45,120
r this is a polynomial with four

355
00:13:42,880 --> 00:13:47,680
coefficients and all the

356
00:13:45,120 --> 00:13:49,600
all the coefficients are evaluations of

357
00:13:47,680 --> 00:13:52,399
completely independent polynomials

358
00:13:49,600 --> 00:13:53,839
at r so therefore the coefficients of c

359
00:13:52,399 --> 00:13:55,040
mod x to the four minus r are

360
00:13:53,839 --> 00:13:58,320
independent

361
00:13:55,040 --> 00:13:59,839
and in in the paper we compute um

362
00:13:58,320 --> 00:14:02,000
the distribution or not really the full

363
00:13:59,839 --> 00:14:05,600
distribution but the maximum probability

364
00:14:02,000 --> 00:14:08,720
of this distribution over zq

365
00:14:05,600 --> 00:14:11,040
and find that for suitable parameters

366
00:14:08,720 --> 00:14:14,399
this maximum probability is not much

367
00:14:11,040 --> 00:14:14,399
larger than one over q

368
00:14:14,800 --> 00:14:18,800
and then uh basically following from

369
00:14:18,320 --> 00:14:20,800
this

370
00:14:18,800 --> 00:14:21,839
we can deduce that the probability that

371
00:14:20,800 --> 00:14:24,479
c bar

372
00:14:21,839 --> 00:14:26,000
mod x to the four minus r is zero which

373
00:14:24,480 --> 00:14:26,639
means that all the four coefficients are

374
00:14:26,000 --> 00:14:28,639
zero

375
00:14:26,639 --> 00:14:30,000
this happens only with probability

376
00:14:28,639 --> 00:14:33,360
essentially q to the minus

377
00:14:30,000 --> 00:14:34,639
4 and if q is in the order of 2 to the

378
00:14:33,360 --> 00:14:37,920
32 then this q

379
00:14:34,639 --> 00:14:41,760
to the minus 4 is negligibly small so

380
00:14:37,920 --> 00:14:41,760
around 2 to the minus 128.

381
00:14:41,839 --> 00:14:48,160
of course modular other factors

382
00:14:44,880 --> 00:14:50,639
so i've focused on on this first factor

383
00:14:48,160 --> 00:14:52,560
on this slide but or the the probability

384
00:14:50,639 --> 00:14:54,800
or the maximum probability module the

385
00:14:52,560 --> 00:14:56,079
other factors is not independent but

386
00:14:54,800 --> 00:14:58,479
this is also not needed

387
00:14:56,079 --> 00:15:00,079
because we are not trying to get a c bar

388
00:14:58,480 --> 00:15:03,040
which is non-zero everywhere

389
00:15:00,079 --> 00:15:05,599
and this is enough that basically for

390
00:15:03,040 --> 00:15:07,120
each factor x to the four minus rj this

391
00:15:05,600 --> 00:15:08,880
cheating probability is small

392
00:15:07,120 --> 00:15:11,440
individually because then

393
00:15:08,880 --> 00:15:12,560
the extractor basically is successively

394
00:15:11,440 --> 00:15:14,880
rewriting can

395
00:15:12,560 --> 00:15:17,680
can get the c bar module all the factors

396
00:15:14,880 --> 00:15:17,680
where it does not zero

397
00:15:18,000 --> 00:15:21,120
okay so this concludes our first

398
00:15:20,320 --> 00:15:22,880
improvement

399
00:15:21,120 --> 00:15:24,240
of the opening proof now i come to the

400
00:15:22,880 --> 00:15:27,680
second improvement

401
00:15:24,240 --> 00:15:30,959
that is directly applied in

402
00:15:27,680 --> 00:15:31,439
our product proof the second improvement

403
00:15:30,959 --> 00:15:34,719
is

404
00:15:31,440 --> 00:15:37,440
that we are able to show that the reply

405
00:15:34,720 --> 00:15:40,000
that so this mask opening sent by the

406
00:15:37,440 --> 00:15:42,160
approver in the opening proof

407
00:15:40,000 --> 00:15:43,759
this is at least when the approver has

408
00:15:42,160 --> 00:15:45,360
sufficiently high success probability

409
00:15:43,759 --> 00:15:48,079
this is always

410
00:15:45,360 --> 00:15:48,800
precisely of the form in the honest

411
00:15:48,079 --> 00:15:51,758
transcript

412
00:15:48,800 --> 00:15:53,279
and the honest execution so by this i

413
00:15:51,759 --> 00:15:55,759
mean

414
00:15:53,279 --> 00:15:56,399
that the the in the extraction we are

415
00:15:55,759 --> 00:16:00,160
able

416
00:15:56,399 --> 00:16:03,360
to extract vectors y and r such that

417
00:16:00,160 --> 00:16:03,759
that can be written as y plus c r and

418
00:16:03,360 --> 00:16:06,160
these

419
00:16:03,759 --> 00:16:08,399
y are are fixed in the sense that if we

420
00:16:06,160 --> 00:16:10,719
rewind the prover and send a new c

421
00:16:08,399 --> 00:16:12,720
then we of course get a new reply that

422
00:16:10,720 --> 00:16:13,680
but it will still be of the form y plus

423
00:16:12,720 --> 00:16:16,079
ci with the sign

424
00:16:13,680 --> 00:16:18,079
with the same y and i as before so the

425
00:16:16,079 --> 00:16:21,279
prover really is committed to y

426
00:16:18,079 --> 00:16:24,000
and r and it's not only this

427
00:16:21,279 --> 00:16:25,279
but these vectors y are fulfill the

428
00:16:24,000 --> 00:16:28,240
equations that we

429
00:16:25,279 --> 00:16:28,880
expect this in particular means that

430
00:16:28,240 --> 00:16:31,920
that the r

431
00:16:28,880 --> 00:16:34,560
vector is a useful is a

432
00:16:31,920 --> 00:16:35,599
valid randomness vector for the

433
00:16:34,560 --> 00:16:37,439
commitment scheme

434
00:16:35,600 --> 00:16:38,800
which means that the commitment

435
00:16:37,440 --> 00:16:43,440
polynomials t i

436
00:16:38,800 --> 00:16:43,439
they can be written as b i r plus m i

437
00:16:43,519 --> 00:16:51,279
i should note that it is not necessarily

438
00:16:46,720 --> 00:16:54,720
true that y and r are short anymore but

439
00:16:51,279 --> 00:16:54,720
this is also not needed here

440
00:16:55,440 --> 00:16:59,680
okay this basically new analysis of the

441
00:16:58,320 --> 00:17:02,800
opening proof

442
00:16:59,680 --> 00:17:05,280
makes it now much easier to work with

443
00:17:02,800 --> 00:17:08,399
more complicated verification equations

444
00:17:05,280 --> 00:17:11,119
that we knew how to handle before um

445
00:17:08,400 --> 00:17:12,319
and in particular verification equations

446
00:17:11,119 --> 00:17:15,359
that are non-linear

447
00:17:12,319 --> 00:17:17,119
in in the commitments and basically the

448
00:17:15,359 --> 00:17:18,399
the first example for this is our

449
00:17:17,119 --> 00:17:21,599
product proof

450
00:17:18,400 --> 00:17:24,640
which works in the following way now um

451
00:17:21,599 --> 00:17:27,039
so as i said before we know that the

452
00:17:24,640 --> 00:17:27,919
mask openings that can be written as y

453
00:17:27,039 --> 00:17:31,280
plus cr

454
00:17:27,919 --> 00:17:31,679
with fixed y and r that are independent

455
00:17:31,280 --> 00:17:34,799
of c

456
00:17:31,679 --> 00:17:36,880
and t one is b one r plus m one and

457
00:17:34,799 --> 00:17:39,200
this allows us to do the following so we

458
00:17:36,880 --> 00:17:43,200
can let the verifier compute

459
00:17:39,200 --> 00:17:46,640
the polynomial f which is is

460
00:17:43,200 --> 00:17:48,320
defined by b one z minus ct1

461
00:17:46,640 --> 00:17:51,360
and if you look at this expression and

462
00:17:48,320 --> 00:17:52,240
just substitute the two equations from

463
00:17:51,360 --> 00:17:54,959
above

464
00:17:52,240 --> 00:17:55,840
then we find that f can be written as

465
00:17:54,960 --> 00:17:59,520
b1y

466
00:17:55,840 --> 00:18:01,840
minus cm1 if you now look at this last

467
00:17:59,520 --> 00:18:02,799
equation then we see that this is really

468
00:18:01,840 --> 00:18:06,399
just a mask

469
00:18:02,799 --> 00:18:07,280
opening of m1 where the masking

470
00:18:06,400 --> 00:18:10,480
polynomial

471
00:18:07,280 --> 00:18:15,600
is b1y and the

472
00:18:10,480 --> 00:18:18,640
the the secret is is the message m1

473
00:18:15,600 --> 00:18:21,360
and yeah so this is something which

474
00:18:18,640 --> 00:18:22,160
in previous uh product proofs would have

475
00:18:21,360 --> 00:18:24,000
been sent

476
00:18:22,160 --> 00:18:25,200
by the by the provers in previous

477
00:18:24,000 --> 00:18:27,200
product rules the proverb would have

478
00:18:25,200 --> 00:18:29,760
sent a mask opening of m1

479
00:18:27,200 --> 00:18:31,840
and now we see that we can let the

480
00:18:29,760 --> 00:18:33,919
verifier compute this from data he has

481
00:18:31,840 --> 00:18:36,399
received in the opening proof without

482
00:18:33,919 --> 00:18:38,080
further communication cost and in

483
00:18:36,400 --> 00:18:41,200
previous protocols where the prover

484
00:18:38,080 --> 00:18:44,159
has sent such a mask opening

485
00:18:41,200 --> 00:18:44,960
it was also necessary that the prover

486
00:18:44,160 --> 00:18:46,880
proved

487
00:18:44,960 --> 00:18:49,760
that f is really well formed so it's

488
00:18:46,880 --> 00:18:51,360
really a correct mask opening of m1

489
00:18:49,760 --> 00:18:54,879
and in our case this is not necessary

490
00:18:51,360 --> 00:18:54,879
anymore because the verifier

491
00:18:55,039 --> 00:18:58,720
computed f in a controlled way and

492
00:18:57,120 --> 00:19:01,760
therefore is convinced that

493
00:18:58,720 --> 00:19:03,919
that f is f is correctly formed

494
00:19:01,760 --> 00:19:06,080
and these two facts together decrease

495
00:19:03,919 --> 00:19:09,520
the the communication cost of our

496
00:19:06,080 --> 00:19:11,199
product proof um and then after we have

497
00:19:09,520 --> 00:19:12,960
established that the verifier can get

498
00:19:11,200 --> 00:19:14,880
hold of a mask opening

499
00:19:12,960 --> 00:19:16,080
and the the protocol proceeds in the

500
00:19:14,880 --> 00:19:19,280
standard way

501
00:19:16,080 --> 00:19:20,639
so the we construct the following

502
00:19:19,280 --> 00:19:24,320
quadratic equation in

503
00:19:20,640 --> 00:19:26,240
f which is f squared minus cf and if we

504
00:19:24,320 --> 00:19:29,280
evaluate this

505
00:19:26,240 --> 00:19:31,360
and group together coefficients

506
00:19:29,280 --> 00:19:34,240
that involve the same power of c so that

507
00:19:31,360 --> 00:19:36,399
we get a quadratic polynomial c then

508
00:19:34,240 --> 00:19:38,000
we get a constant in linear term that

509
00:19:36,400 --> 00:19:39,200
are not important which we call the

510
00:19:38,000 --> 00:19:42,080
garbage terms

511
00:19:39,200 --> 00:19:43,600
and leading terms of the quadratic term

512
00:19:42,080 --> 00:19:46,720
which

513
00:19:43,600 --> 00:19:48,480
involves the coefficient m1 squared

514
00:19:46,720 --> 00:19:51,120
minus m1

515
00:19:48,480 --> 00:19:51,679
and then also in the standard way if one

516
00:19:51,120 --> 00:19:54,639
proves

517
00:19:51,679 --> 00:19:56,799
that this leading coefficient vanishes

518
00:19:54,640 --> 00:19:59,200
then this proves the relation

519
00:19:56,799 --> 00:20:00,559
we want to prove and this works by

520
00:19:59,200 --> 00:20:02,320
essentially committing to the garbage

521
00:20:00,559 --> 00:20:02,960
terms subtracting them and then proving

522
00:20:02,320 --> 00:20:04,840
that the

523
00:20:02,960 --> 00:20:06,559
resulting polynomial is the zero

524
00:20:04,840 --> 00:20:09,360
polynomial

525
00:20:06,559 --> 00:20:10,000
now um i said before that in the talk i

526
00:20:09,360 --> 00:20:12,799
focus

527
00:20:10,000 --> 00:20:13,679
on the case where our ring splits into c

528
00:20:12,799 --> 00:20:17,360
or t slots

529
00:20:13,679 --> 00:20:22,320
of of degree four um and in this case

530
00:20:17,360 --> 00:20:24,479
uh the proof i've just basically

531
00:20:22,320 --> 00:20:26,559
explained on a high level this proof

532
00:20:24,480 --> 00:20:26,960
already has negligible soundness error

533
00:20:26,559 --> 00:20:28,799
because

534
00:20:26,960 --> 00:20:30,720
the soundless error of this approach is

535
00:20:28,799 --> 00:20:33,120
essentially determined by the size of

536
00:20:30,720 --> 00:20:35,840
the crt slots

537
00:20:33,120 --> 00:20:36,399
in in many applications it is advantages

538
00:20:35,840 --> 00:20:39,360
to

539
00:20:36,400 --> 00:20:40,799
to to let the ring further split so in

540
00:20:39,360 --> 00:20:44,639
for example fully split

541
00:20:40,799 --> 00:20:47,280
in into linear factors and then

542
00:20:44,640 --> 00:20:48,559
this approach would only have uh the

543
00:20:47,280 --> 00:20:50,320
sound is

544
00:20:48,559 --> 00:20:52,320
basically one of the q which is

545
00:20:50,320 --> 00:20:55,280
non-negligible

546
00:20:52,320 --> 00:20:56,240
um so then in this case the question

547
00:20:55,280 --> 00:20:58,158
arises how

548
00:20:56,240 --> 00:20:59,360
can one boost the soundness and is there

549
00:20:58,159 --> 00:21:01,679
maybe a better way

550
00:20:59,360 --> 00:21:03,360
than just repeating the protocol several

551
00:21:01,679 --> 00:21:06,960
times

552
00:21:03,360 --> 00:21:06,959
and this is another technical

553
00:21:07,200 --> 00:21:10,240
basically contribution of our paper

554
00:21:09,039 --> 00:21:11,760
which can also be used

555
00:21:10,240 --> 00:21:13,919
in other protocols not just in our

556
00:21:11,760 --> 00:21:16,240
product proof but since it is quite

557
00:21:13,919 --> 00:21:18,000
technical i'm not going into much

558
00:21:16,240 --> 00:21:21,200
detail here i'm just giving a very high

559
00:21:18,000 --> 00:21:23,679
level idea how this works

560
00:21:21,200 --> 00:21:25,919
the idea is essentially that we set up

561
00:21:23,679 --> 00:21:28,159
the opening proof in such a way that

562
00:21:25,919 --> 00:21:30,400
the proof isn't the verifier is not just

563
00:21:28,159 --> 00:21:31,120
able to compute one mask opening of the

564
00:21:30,400 --> 00:21:34,400
message

565
00:21:31,120 --> 00:21:38,000
m1 but several mask openings where

566
00:21:34,400 --> 00:21:41,280
the the message is rotated under some

567
00:21:38,000 --> 00:21:42,000
automorphism sigma and this is also very

568
00:21:41,280 --> 00:21:44,399
important

569
00:21:42,000 --> 00:21:45,200
all the mask openings still involve the

570
00:21:44,400 --> 00:21:48,640
same

571
00:21:45,200 --> 00:21:51,520
non-rotated challenge c and

572
00:21:48,640 --> 00:21:54,880
as soon as we have this um that we can

573
00:21:51,520 --> 00:21:58,000
basically construct the same

574
00:21:54,880 --> 00:22:01,039
quadratic relations

575
00:21:58,000 --> 00:22:04,159
on f as before but now for several f

576
00:22:01,039 --> 00:22:06,400
and then linear combine all of them with

577
00:22:04,159 --> 00:22:07,919
uniformly random challenge polynomials

578
00:22:06,400 --> 00:22:11,280
alpha

579
00:22:07,919 --> 00:22:14,159
and if we do this then we arrive at

580
00:22:11,280 --> 00:22:15,840
a still quadratic polynomial just in c

581
00:22:14,159 --> 00:22:17,360
but with the leading term that is a

582
00:22:15,840 --> 00:22:18,158
random linear combination of the

583
00:22:17,360 --> 00:22:21,520
rotations

584
00:22:18,159 --> 00:22:23,840
of m1 squared minus m1 and

585
00:22:21,520 --> 00:22:25,679
then by doing the same as before proving

586
00:22:23,840 --> 00:22:26,080
that this term vanishes we actually

587
00:22:25,679 --> 00:22:28,559
prove

588
00:22:26,080 --> 00:22:30,158
the relation with negligible sounds

589
00:22:28,559 --> 00:22:32,960
error

590
00:22:30,159 --> 00:22:34,159
the advantage of this approach over just

591
00:22:32,960 --> 00:22:37,039
repeating

592
00:22:34,159 --> 00:22:38,320
uh the the the basic protocol several

593
00:22:37,039 --> 00:22:40,400
times is that we still

594
00:22:38,320 --> 00:22:41,918
only have a quadratic polynomial c in

595
00:22:40,400 --> 00:22:42,240
the end and which means that there's

596
00:22:41,919 --> 00:22:45,840
still

597
00:22:42,240 --> 00:22:48,559
only two garbage terms um so basically

598
00:22:45,840 --> 00:22:49,840
the the whereas when when we would have

599
00:22:48,559 --> 00:22:51,039
repeated the probability of the product

600
00:22:49,840 --> 00:22:53,120
several times then

601
00:22:51,039 --> 00:22:54,799
we would have two garbage terms per

602
00:22:53,120 --> 00:22:58,000
repetition

603
00:22:54,799 --> 00:22:59,760
which costs which in involves costs in

604
00:22:58,000 --> 00:23:01,840
the form of commitments to these garbage

605
00:22:59,760 --> 00:23:04,000
cups

606
00:23:01,840 --> 00:23:05,360
okay with this i finished my

607
00:23:04,000 --> 00:23:09,760
presentation and

608
00:23:05,360 --> 00:23:09,760
thank you very much for listening

