1
00:00:01,920 --> 00:00:06,479
welcome to the presentation of

2
00:00:03,760 --> 00:00:08,240
a work dedicated to the security of

3
00:00:06,480 --> 00:00:10,240
symmetric primitives optimized for

4
00:00:08,240 --> 00:00:12,639
integrative proof systems

5
00:00:10,240 --> 00:00:14,559
my name is ann konto and what i'm

6
00:00:12,639 --> 00:00:17,200
presenting here is the joint work with

7
00:00:14,559 --> 00:00:17,200
tim bain

8
00:00:26,080 --> 00:00:30,799
the details of this work are of course

9
00:00:28,480 --> 00:00:33,920
available in the proceedings of crypto

10
00:00:30,800 --> 00:00:35,120
but as you know crypto vcure is a bit

11
00:00:33,920 --> 00:00:39,200
special

12
00:00:35,120 --> 00:00:42,640
so for instance as far as i can see

13
00:00:39,200 --> 00:00:45,760
the bitch this year looks like this

14
00:00:42,640 --> 00:00:47,440
and also these your strawberries have a

15
00:00:45,760 --> 00:00:50,640
different taste

16
00:00:47,440 --> 00:00:55,039
and even sea lions this year

17
00:00:50,640 --> 00:00:55,039
look a bit different let's see

18
00:00:56,480 --> 00:01:00,718
anyway let's now have a look at this

19
00:00:58,800 --> 00:01:03,839
symmetric primitive optimized for

20
00:01:00,719 --> 00:01:05,280
integrity proof systems so the design of

21
00:01:03,840 --> 00:01:07,600
such primitive

22
00:01:05,280 --> 00:01:08,400
actually follows a light a line of

23
00:01:07,600 --> 00:01:11,679
research

24
00:01:08,400 --> 00:01:13,119
which is quite active in the last few

25
00:01:11,680 --> 00:01:14,960
years

26
00:01:13,119 --> 00:01:17,680
because there is a strong demand for

27
00:01:14,960 --> 00:01:18,320
symmetric primitives which are optimized

28
00:01:17,680 --> 00:01:20,560
for

29
00:01:18,320 --> 00:01:22,960
some specific advanced cryptographic

30
00:01:20,560 --> 00:01:26,080
protocols so this includes for instance

31
00:01:22,960 --> 00:01:27,439
the design of symmetric cyphers were to

32
00:01:26,080 --> 00:01:29,840
be used within

33
00:01:27,439 --> 00:01:32,399
hybrid encryption schemes together with

34
00:01:29,840 --> 00:01:35,520
fully homomorphic encryption

35
00:01:32,400 --> 00:01:38,960
also a very interesting example

36
00:01:35,520 --> 00:01:42,399
is the block cycle memsi

37
00:01:38,960 --> 00:01:46,559
which has been designed to be

38
00:01:42,399 --> 00:01:49,840
optimized for being used with mpc

39
00:01:46,560 --> 00:01:52,159
and so this mimsy block cipher it has a

40
00:01:49,840 --> 00:01:54,880
very simple algebraic structure

41
00:01:52,159 --> 00:01:57,360
because it iterates many times the cube

42
00:01:54,880 --> 00:01:59,439
mapping over large finite fields and at

43
00:01:57,360 --> 00:02:02,479
each iteration this skill mapping is

44
00:01:59,439 --> 00:02:05,039
only followed by a round key addition

45
00:02:02,479 --> 00:02:06,159
so this memphis has inspired several

46
00:02:05,040 --> 00:02:08,800
over designs

47
00:02:06,159 --> 00:02:10,319
for over-application but with quite

48
00:02:08,800 --> 00:02:12,480
similar requirements

49
00:02:10,318 --> 00:02:13,679
and this includes for instance these

50
00:02:12,480 --> 00:02:16,079
hash functions

51
00:02:13,680 --> 00:02:18,000
which are used in the new integrity

52
00:02:16,080 --> 00:02:19,120
proof systems that have been proposed

53
00:02:18,000 --> 00:02:22,080
recently

54
00:02:19,120 --> 00:02:24,480
like that car storage protocols or

55
00:02:22,080 --> 00:02:26,879
snarks or bullet proofs

56
00:02:24,480 --> 00:02:28,079
indeed these hash functions they should

57
00:02:26,879 --> 00:02:31,518
be specified

58
00:02:28,080 --> 00:02:34,080
as sequences of low degree polynomials

59
00:02:31,519 --> 00:02:36,879
or offload degree rational maps of a

60
00:02:34,080 --> 00:02:39,920
refined field so of course

61
00:02:36,879 --> 00:02:41,920
this type of designs based on simple

62
00:02:39,920 --> 00:02:44,079
algebraic transformation over finite

63
00:02:41,920 --> 00:02:47,200
fields this is not a new id

64
00:02:44,080 --> 00:02:49,760
because it was an idea which was

65
00:02:47,200 --> 00:02:53,040
already behind the design of some

66
00:02:49,760 --> 00:02:56,799
seminal block ciphers

67
00:02:53,040 --> 00:03:00,560
so if we consider this

68
00:02:56,800 --> 00:03:02,560
recently proposed integrity proof system

69
00:03:00,560 --> 00:03:04,720
then it's clear that the performance

70
00:03:02,560 --> 00:03:07,280
inverse security are conditioned

71
00:03:04,720 --> 00:03:08,319
by the properties of the underlying hash

72
00:03:07,280 --> 00:03:10,879
functions

73
00:03:08,319 --> 00:03:12,640
so in terms of performance the cost

74
00:03:10,879 --> 00:03:15,359
metric for the hash function

75
00:03:12,640 --> 00:03:17,599
is determined by the size of the

76
00:03:15,360 --> 00:03:20,400
polynomial relations

77
00:03:17,599 --> 00:03:21,920
so these relations are expressed over

78
00:03:20,400 --> 00:03:24,319
finite fields

79
00:03:21,920 --> 00:03:25,760
and for these applications it is

80
00:03:24,319 --> 00:03:29,119
suitable to use

81
00:03:25,760 --> 00:03:32,000
large finite fields and also fields

82
00:03:29,120 --> 00:03:32,959
of out characteristic especially prime

83
00:03:32,000 --> 00:03:35,360
fields

84
00:03:32,959 --> 00:03:37,200
so this is then very different from

85
00:03:35,360 --> 00:03:40,640
usual symmetric primitives

86
00:03:37,200 --> 00:03:43,200
which are defined over binary fields

87
00:03:40,640 --> 00:03:46,399
and then since they can be represented

88
00:03:43,200 --> 00:03:48,640
by simple algebraic relations

89
00:03:46,400 --> 00:03:51,200
these primitives may be vulnerable to

90
00:03:48,640 --> 00:03:51,760
algebraic attack based on grammar basis

91
00:03:51,200 --> 00:03:54,079
as

92
00:03:51,760 --> 00:03:55,599
shown recently for instance at last

93
00:03:54,080 --> 00:03:59,280
azure crypt

94
00:03:55,599 --> 00:04:01,119
but of course we also need to guarantee

95
00:03:59,280 --> 00:04:02,560
that these primitives are resistant to

96
00:04:01,120 --> 00:04:05,519
other types of text

97
00:04:02,560 --> 00:04:07,360
and this is the aim of this word so to

98
00:04:05,519 --> 00:04:10,400
be concrete

99
00:04:07,360 --> 00:04:12,959
we focus on some hash functions

100
00:04:10,400 --> 00:04:14,000
dedicated to z key store protocols and

101
00:04:12,959 --> 00:04:16,160
especially

102
00:04:14,000 --> 00:04:17,680
on some hash functions involved in the

103
00:04:16,160 --> 00:04:20,320
public challenges

104
00:04:17,680 --> 00:04:21,519
launched by the start work company so

105
00:04:20,320 --> 00:04:24,240
these hash functions

106
00:04:21,519 --> 00:04:25,759
are based on two different types of kit

107
00:04:24,240 --> 00:04:29,360
permutations

108
00:04:25,759 --> 00:04:32,320
the first one is called g-mimsy so it's

109
00:04:29,360 --> 00:04:32,560
an unbalanced feistel network so this is

110
00:04:32,320 --> 00:04:36,240
a

111
00:04:32,560 --> 00:04:38,320
feistel flavor of mimsy and it uses the

112
00:04:36,240 --> 00:04:41,520
cube mapping of a prime field as

113
00:04:38,320 --> 00:04:42,000
expanding round function and the second

114
00:04:41,520 --> 00:04:45,039
type

115
00:04:42,000 --> 00:04:47,840
is an espn flavor of bimcy

116
00:04:45,040 --> 00:04:48,400
and it is named haddus memphi and it is

117
00:04:47,840 --> 00:04:51,359
defined

118
00:04:48,400 --> 00:04:52,479
both over a finite field and over prime

119
00:04:51,360 --> 00:04:54,960
field

120
00:04:52,479 --> 00:04:57,199
so these kit permutations are used

121
00:04:54,960 --> 00:04:59,680
within the sponge construction because

122
00:04:57,199 --> 00:05:01,280
what we need for those applications are

123
00:04:59,680 --> 00:05:03,600
hash functions

124
00:05:01,280 --> 00:05:05,039
so this means that we are using this

125
00:05:03,600 --> 00:05:08,320
design here

126
00:05:05,039 --> 00:05:08,800
and over the presentation i will always

127
00:05:08,320 --> 00:05:12,159
use

128
00:05:08,800 --> 00:05:13,919
this small t for denoting the block size

129
00:05:12,160 --> 00:05:17,520
of the sponge construction

130
00:05:13,919 --> 00:05:20,799
and c denotes the capacity of the sponge

131
00:05:17,520 --> 00:05:23,758
so this implies that we will consider

132
00:05:20,800 --> 00:05:24,880
kit permutation here whose internal

133
00:05:23,759 --> 00:05:28,800
state consists

134
00:05:24,880 --> 00:05:29,360
of t words and each of these words is an

135
00:05:28,800 --> 00:05:33,680
element

136
00:05:29,360 --> 00:05:36,240
in the field f q so the parameters

137
00:05:33,680 --> 00:05:40,479
proposed in the star chord challenges

138
00:05:36,240 --> 00:05:43,840
are here so the first ones are for 128

139
00:05:40,479 --> 00:05:45,120
security bits and the second one for 256

140
00:05:43,840 --> 00:05:48,080
security bits

141
00:05:45,120 --> 00:05:48,720
so as you can see here for 128 security

142
00:05:48,080 --> 00:05:52,000
bits

143
00:05:48,720 --> 00:05:55,039
we have three different field sizes

144
00:05:52,000 --> 00:05:57,840
so the first one is considered

145
00:05:55,039 --> 00:05:59,120
the first one considers fields of size

146
00:05:57,840 --> 00:06:02,159
roughly 2 to the power

147
00:05:59,120 --> 00:06:05,520
64. the second one fields of size

148
00:06:02,160 --> 00:06:09,360
around 2 to the power 128 and then

149
00:06:05,520 --> 00:06:11,840
fields of size around 2 to the power 256

150
00:06:09,360 --> 00:06:12,720
and for each size of the field we have

151
00:06:11,840 --> 00:06:15,280
two variant

152
00:06:12,720 --> 00:06:17,440
one corresponding two prime fields and

153
00:06:15,280 --> 00:06:18,559
the other one corresponding to binary

154
00:06:17,440 --> 00:06:21,360
fields

155
00:06:18,560 --> 00:06:22,240
so we will analyze the security of all

156
00:06:21,360 --> 00:06:25,199
this function

157
00:06:22,240 --> 00:06:26,080
but with a particular focus on the

158
00:06:25,199 --> 00:06:29,199
variants

159
00:06:26,080 --> 00:06:31,280
given here in red because it is a

160
00:06:29,199 --> 00:06:33,440
it corresponds to the parameters which

161
00:06:31,280 --> 00:06:36,880
provides the best performance

162
00:06:33,440 --> 00:06:38,560
for that case store protocols so we will

163
00:06:36,880 --> 00:06:40,719
mainly focus on

164
00:06:38,560 --> 00:06:41,919
permutations whose internal state

165
00:06:40,720 --> 00:06:45,199
consists of

166
00:06:41,919 --> 00:06:49,120
12 elements in a field with

167
00:06:45,199 --> 00:06:51,599
roughly 2 to the power 64

168
00:06:49,120 --> 00:06:51,599
elements

169
00:06:53,520 --> 00:07:00,880
so what we did is that we presented

170
00:06:57,759 --> 00:07:04,080
several attacks on these functions

171
00:07:00,880 --> 00:07:05,520
but what is important is that all these

172
00:07:04,080 --> 00:07:08,960
attacks rely on

173
00:07:05,520 --> 00:07:12,639
two important key ideas so the first one

174
00:07:08,960 --> 00:07:14,239
is a generalization of some classical

175
00:07:12,639 --> 00:07:16,960
attacks two fields of

176
00:07:14,240 --> 00:07:17,599
any characteristics and for instance we

177
00:07:16,960 --> 00:07:20,880
will see

178
00:07:17,599 --> 00:07:22,880
why the prime fields chosen challenges

179
00:07:20,880 --> 00:07:23,919
make the functions more vulnerable to

180
00:07:22,880 --> 00:07:26,880
symmetrics like

181
00:07:23,919 --> 00:07:27,520
integral attacks and their second key

182
00:07:26,880 --> 00:07:29,919
idea

183
00:07:27,520 --> 00:07:31,120
is to combine algebraic techniques with

184
00:07:29,919 --> 00:07:33,120
classical attacks

185
00:07:31,120 --> 00:07:35,520
like differential attacks to take

186
00:07:33,120 --> 00:07:38,880
advantage of the specific structure

187
00:07:35,520 --> 00:07:39,520
of the primitive in our context so i

188
00:07:38,880 --> 00:07:42,400
will then

189
00:07:39,520 --> 00:07:44,000
illustrate these two ideas with two

190
00:07:42,400 --> 00:07:47,679
examples two attacks

191
00:07:44,000 --> 00:07:50,720
on gmc so the first one

192
00:07:47,680 --> 00:07:51,840
is an integrated text so i will show how

193
00:07:50,720 --> 00:07:54,879
we can generalize

194
00:07:51,840 --> 00:07:57,758
integral attacks for two fields of

195
00:07:54,879 --> 00:07:59,360
any characteristic especially by using

196
00:07:57,759 --> 00:08:02,639
multiplicative subgroups

197
00:07:59,360 --> 00:08:04,879
of the field and i will show how this

198
00:08:02,639 --> 00:08:08,960
can be applied to gmimc

199
00:08:04,879 --> 00:08:11,520
and then i will present another type of

200
00:08:08,960 --> 00:08:14,000
attack which we called algebraically

201
00:08:11,520 --> 00:08:16,479
controlled differential attacks

202
00:08:14,000 --> 00:08:18,560
because this combines a differential

203
00:08:16,479 --> 00:08:19,520
cryptomysis with some algebraic

204
00:08:18,560 --> 00:08:22,479
techniques

205
00:08:19,520 --> 00:08:23,120
and again i will show how this can be

206
00:08:22,479 --> 00:08:27,520
applied

207
00:08:23,120 --> 00:08:31,280
to gmc so let us start with

208
00:08:27,520 --> 00:08:34,478
integral attacks over fq

209
00:08:31,280 --> 00:08:38,478
so let us consider a function f

210
00:08:34,479 --> 00:08:41,519
from fq into the same field fq

211
00:08:38,479 --> 00:08:44,000
and when fq is a binary field

212
00:08:41,519 --> 00:08:45,600
integral attacks rely on the following

213
00:08:44,000 --> 00:08:49,200
well-known property

214
00:08:45,600 --> 00:08:52,399
for any a fine subspace v

215
00:08:49,200 --> 00:08:53,279
whose size exceeds the degree of f plus

216
00:08:52,399 --> 00:08:57,760
one

217
00:08:53,279 --> 00:09:02,080
then the values of f of x sum to zero

218
00:08:57,760 --> 00:09:04,480
when x varies in the subspace v

219
00:09:02,080 --> 00:09:06,080
so this well-known property comes from

220
00:09:04,480 --> 00:09:08,399
the fact that this sum

221
00:09:06,080 --> 00:09:09,600
here is nothing else than the value of a

222
00:09:08,399 --> 00:09:13,040
derivative of

223
00:09:09,600 --> 00:09:15,680
the function but a derivative of

224
00:09:13,040 --> 00:09:17,920
order which is equal to the dimension of

225
00:09:15,680 --> 00:09:19,839
the subspace so it's clear that this sum

226
00:09:17,920 --> 00:09:22,240
is always equal to zero

227
00:09:19,839 --> 00:09:24,000
when this condition on the degree is

228
00:09:22,240 --> 00:09:26,720
satisfied

229
00:09:24,000 --> 00:09:27,360
but the problem is that this last

230
00:09:26,720 --> 00:09:29,440
formula

231
00:09:27,360 --> 00:09:31,040
here does not hold in odd

232
00:09:29,440 --> 00:09:33,680
characteristics so

233
00:09:31,040 --> 00:09:35,360
in odd characteristic if we want to

234
00:09:33,680 --> 00:09:37,599
exhibit a zero sum

235
00:09:35,360 --> 00:09:40,160
we need to consider a much more

236
00:09:37,600 --> 00:09:43,600
complicated formula

237
00:09:40,160 --> 00:09:47,040
however there is one case

238
00:09:43,600 --> 00:09:48,160
for which this zero sum property can be

239
00:09:47,040 --> 00:09:51,760
generalized to

240
00:09:48,160 --> 00:09:52,079
any field so this case is the case where

241
00:09:51,760 --> 00:09:55,760
the

242
00:09:52,080 --> 00:09:59,440
input x is saturated which means that

243
00:09:55,760 --> 00:10:02,720
x takes all possible values in fq

244
00:09:59,440 --> 00:10:04,160
index for any field it's easy to prove

245
00:10:02,720 --> 00:10:07,760
that the values of f

246
00:10:04,160 --> 00:10:10,319
x sum to zero when x varies in fq

247
00:10:07,760 --> 00:10:10,800
as soon as the degree of f is strictly

248
00:10:10,320 --> 00:10:14,079
less

249
00:10:10,800 --> 00:10:16,079
than q minus one so this

250
00:10:14,079 --> 00:10:17,439
is a nice property because this

251
00:10:16,079 --> 00:10:21,760
generalizes

252
00:10:17,440 --> 00:10:24,560
the usual integral property to any field

253
00:10:21,760 --> 00:10:25,279
but what is not that nice is that this

254
00:10:24,560 --> 00:10:28,640
property

255
00:10:25,279 --> 00:10:32,480
is less is much more restrictive

256
00:10:28,640 --> 00:10:35,519
than what we had in the binary case

257
00:10:32,480 --> 00:10:38,800
indeed in the binary case

258
00:10:35,519 --> 00:10:41,680
we were able to compute a

259
00:10:38,800 --> 00:10:43,040
zero sum by computing the sum of the

260
00:10:41,680 --> 00:10:46,079
values of

261
00:10:43,040 --> 00:10:48,959
f of x when x varies in a set

262
00:10:46,079 --> 00:10:50,319
whose size is much smaller than the size

263
00:10:48,959 --> 00:10:52,959
of the whole field

264
00:10:50,320 --> 00:10:55,200
especially when the degree of f is small

265
00:10:52,959 --> 00:10:57,439
while in the general case here

266
00:10:55,200 --> 00:11:00,399
we are only able to compute the sum of

267
00:10:57,440 --> 00:11:04,240
all f x when x varies in

268
00:11:00,399 --> 00:11:07,839
the whole field so of course we have

269
00:11:04,240 --> 00:11:10,240
less freedom degrees for the general

270
00:11:07,839 --> 00:11:13,600
case than for the binary case

271
00:11:10,240 --> 00:11:16,399
however we are able to have

272
00:11:13,600 --> 00:11:17,360
a situation which is quite similar to

273
00:11:16,399 --> 00:11:21,200
the situation

274
00:11:17,360 --> 00:11:24,480
of the binary case in the general case

275
00:11:21,200 --> 00:11:28,079
by using multiplicative subgroups

276
00:11:24,480 --> 00:11:29,200
indeed if the size of a multiplicative

277
00:11:28,079 --> 00:11:32,640
subgroup g

278
00:11:29,200 --> 00:11:34,560
exceeds the degree of f then we also get

279
00:11:32,640 --> 00:11:37,760
that the value of f of x when

280
00:11:34,560 --> 00:11:38,640
x varies in the subgroup g sum to a

281
00:11:37,760 --> 00:11:42,399
constant which

282
00:11:38,640 --> 00:11:45,600
only depends on the value of f at 0

283
00:11:42,399 --> 00:11:48,000
and of the size of the subgroup

284
00:11:45,600 --> 00:11:50,240
so this means that exactly as in the

285
00:11:48,000 --> 00:11:51,360
binary case we now have a relation

286
00:11:50,240 --> 00:11:54,560
between the value of

287
00:11:51,360 --> 00:11:57,519
f when the input varies in a set of size

288
00:11:54,560 --> 00:12:01,439
which is close to the degree of f

289
00:11:57,519 --> 00:12:04,160
so we have a sum of a much smaller set

290
00:12:01,440 --> 00:12:04,560
than the whole field when the degree of

291
00:12:04,160 --> 00:12:07,360
f

292
00:12:04,560 --> 00:12:09,279
is small exactly as what we have in the

293
00:12:07,360 --> 00:12:12,560
binary case

294
00:12:09,279 --> 00:12:13,200
so let us now see how this generalized

295
00:12:12,560 --> 00:12:17,599
version

296
00:12:13,200 --> 00:12:20,720
of integral attacks applies to gmmc

297
00:12:17,600 --> 00:12:23,920
so gmc is a feistel network

298
00:12:20,720 --> 00:12:25,600
with t branches and so it has an

299
00:12:23,920 --> 00:12:29,920
expanding round function which

300
00:12:25,600 --> 00:12:32,639
corresponds to the cube mapping over f q

301
00:12:29,920 --> 00:12:33,199
so for the parameters we focus on we

302
00:12:32,639 --> 00:12:36,560
have

303
00:12:33,200 --> 00:12:39,279
12 branches q is

304
00:12:36,560 --> 00:12:40,479
roughly 2 to the power 64 and 4 bits

305
00:12:39,279 --> 00:12:44,800
parameters

306
00:12:40,480 --> 00:12:48,480
we apply this run function 101

307
00:12:44,800 --> 00:12:50,479
times so what we will do now

308
00:12:48,480 --> 00:12:52,240
is that we will exhibit an integral

309
00:12:50,480 --> 00:12:55,920
distinguisher for the

310
00:12:52,240 --> 00:12:58,720
gmimc permutation so for that we will

311
00:12:55,920 --> 00:13:04,319
first start with a differential property

312
00:12:58,720 --> 00:13:04,320
over 2t minus 2 rounds of gmc

313
00:13:04,720 --> 00:13:08,959
so this property is a very specific

314
00:13:08,240 --> 00:13:12,000
property

315
00:13:08,959 --> 00:13:14,560
so for that we consider some input

316
00:13:12,000 --> 00:13:17,200
states having a very specific form

317
00:13:14,560 --> 00:13:20,239
which is this one so the first t minus

318
00:13:17,200 --> 00:13:22,720
two branches are set to some constant

319
00:13:20,240 --> 00:13:23,839
and then the left but one branch is

320
00:13:22,720 --> 00:13:27,279
equal to some

321
00:13:23,839 --> 00:13:30,560
x and the last branch is equal to

322
00:13:27,279 --> 00:13:33,040
f of x where f is a given function

323
00:13:30,560 --> 00:13:36,000
so i do not give the detailed formula

324
00:13:33,040 --> 00:13:38,719
for this f but it is a polynomial in x

325
00:13:36,000 --> 00:13:39,440
of a degree 3 and it depends on the

326
00:13:38,720 --> 00:13:41,920
constant

327
00:13:39,440 --> 00:13:44,000
alphas here and also on the round

328
00:13:41,920 --> 00:13:47,519
constant of the first rounds of t

329
00:13:44,000 --> 00:13:51,440
mems so now if

330
00:13:47,519 --> 00:13:55,199
we consider the first t minus two runs

331
00:13:51,440 --> 00:13:58,320
of t mimsi then it's clear that

332
00:13:55,199 --> 00:14:00,479
because these first t minus two branches

333
00:13:58,320 --> 00:14:02,959
do not depend on x

334
00:14:00,480 --> 00:14:04,320
then we get that the output of this

335
00:14:02,959 --> 00:14:07,518
first t minus two

336
00:14:04,320 --> 00:14:10,639
rounds is such that the last

337
00:14:07,519 --> 00:14:13,440
t minus two branches do not depend

338
00:14:10,639 --> 00:14:14,160
on x and only the first two branches

339
00:14:13,440 --> 00:14:16,079
depend on

340
00:14:14,160 --> 00:14:17,920
x and have value which correspond to

341
00:14:16,079 --> 00:14:22,000
what we had here

342
00:14:17,920 --> 00:14:25,040
plus a constant so now let us head

343
00:14:22,000 --> 00:14:28,160
one more round so now the

344
00:14:25,040 --> 00:14:28,800
the input of the round function of the s

345
00:14:28,160 --> 00:14:31,680
box

346
00:14:28,800 --> 00:14:32,319
depends on x so this implies that we

347
00:14:31,680 --> 00:14:35,359
will add

348
00:14:32,320 --> 00:14:37,600
to all other branches a value

349
00:14:35,360 --> 00:14:40,480
which also depends on x and which

350
00:14:37,600 --> 00:14:44,079
corresponds to the output of the s box

351
00:14:40,480 --> 00:14:48,000
if we now apply a second round

352
00:14:44,079 --> 00:14:50,479
then again we have an input of the xbox

353
00:14:48,000 --> 00:14:51,600
which also depend on x and which is

354
00:14:50,480 --> 00:14:54,800
defined by this

355
00:14:51,600 --> 00:14:55,600
f here and so again the output of this

356
00:14:54,800 --> 00:14:58,160
second and

357
00:14:55,600 --> 00:14:59,680
s box will be added to all other

358
00:14:58,160 --> 00:15:02,880
branches

359
00:14:59,680 --> 00:15:04,239
but this function f has been chosen in

360
00:15:02,880 --> 00:15:06,800
such a way that

361
00:15:04,240 --> 00:15:09,199
the outputs of these two s boxes

362
00:15:06,800 --> 00:15:12,800
corresponding to these two rounds

363
00:15:09,199 --> 00:15:16,079
these outputs they cancel each other

364
00:15:12,800 --> 00:15:17,439
so this means that what we add to all of

365
00:15:16,079 --> 00:15:20,800
our branches

366
00:15:17,440 --> 00:15:23,519
at these two runs this value is

367
00:15:20,800 --> 00:15:25,519
equal to zero in other words at the end

368
00:15:23,519 --> 00:15:28,560
of these two additional rounds

369
00:15:25,519 --> 00:15:28,880
what we get is an internal state which

370
00:15:28,560 --> 00:15:31,920
has

371
00:15:28,880 --> 00:15:33,120
this form the first t minus two branches

372
00:15:31,920 --> 00:15:36,000
they do not depend

373
00:15:33,120 --> 00:15:36,320
on x only the last two branches depend

374
00:15:36,000 --> 00:15:39,920
on

375
00:15:36,320 --> 00:15:40,320
x so the left branch is equal to x prime

376
00:15:39,920 --> 00:15:43,360
which is

377
00:15:40,320 --> 00:15:44,160
x plus some constants while the last but

378
00:15:43,360 --> 00:15:47,440
one branch

379
00:15:44,160 --> 00:15:51,199
is equal to a polynomial in x

380
00:15:47,440 --> 00:15:53,920
which has degree free so now we have a

381
00:15:51,199 --> 00:15:56,240
state which has exactly the same form as

382
00:15:53,920 --> 00:15:57,279
what we had at the beginning so again we

383
00:15:56,240 --> 00:16:00,800
can apply

384
00:15:57,279 --> 00:16:04,160
t minus two rounds here and

385
00:16:00,800 --> 00:16:07,439
what we get is that

386
00:16:04,160 --> 00:16:10,079
we get uh another

387
00:16:07,440 --> 00:16:12,399
state at the end of this additional t

388
00:16:10,079 --> 00:16:15,519
minus two rounds which is such that

389
00:16:12,399 --> 00:16:18,800
the first two branches depend on x

390
00:16:15,519 --> 00:16:22,000
and the last t minus two branches

391
00:16:18,800 --> 00:16:25,680
or a constant so this is a very

392
00:16:22,000 --> 00:16:26,959
important property and that we used in

393
00:16:25,680 --> 00:16:30,479
several attacks

394
00:16:26,959 --> 00:16:31,758
against g-memps so what we have found is

395
00:16:30,480 --> 00:16:33,839
that if we consider

396
00:16:31,759 --> 00:16:34,959
inter input states which have these

397
00:16:33,839 --> 00:16:37,600
specific forms

398
00:16:34,959 --> 00:16:38,638
then after two t minus two rounds we get

399
00:16:37,600 --> 00:16:41,839
output states

400
00:16:38,639 --> 00:16:44,240
which have this form and what is nice in

401
00:16:41,839 --> 00:16:44,880
our context is that if we look at each

402
00:16:44,240 --> 00:16:47,759
branch

403
00:16:44,880 --> 00:16:49,839
of the output state here we can see that

404
00:16:47,759 --> 00:16:50,800
each of this branch can be written as a

405
00:16:49,839 --> 00:16:53,839
polynomial in

406
00:16:50,800 --> 00:16:56,639
x and these polynomials have degree at

407
00:16:53,839 --> 00:16:56,639
most free

408
00:16:57,519 --> 00:17:02,880
so now what we can do is that we can add

409
00:17:00,320 --> 00:17:04,000
some more rounds so if we add one more

410
00:17:02,880 --> 00:17:07,599
round so what we

411
00:17:04,000 --> 00:17:08,160
get will be an output state where each

412
00:17:07,599 --> 00:17:10,879
branch

413
00:17:08,160 --> 00:17:12,799
is now a polynomial in x of degree at

414
00:17:10,880 --> 00:17:16,480
most nine because the degree

415
00:17:12,799 --> 00:17:18,879
is multiplied by at most a factor three

416
00:17:16,480 --> 00:17:20,079
which is the degree of the round

417
00:17:18,880 --> 00:17:23,439
function

418
00:17:20,079 --> 00:17:27,039
so this implies that if we add now

419
00:17:23,439 --> 00:17:30,000
log 3 of q minus 2 minus 1 rounds

420
00:17:27,039 --> 00:17:32,799
then we guarantee that the degree of the

421
00:17:30,000 --> 00:17:34,400
polynomial corresponding to each branch

422
00:17:32,799 --> 00:17:37,760
at the output

423
00:17:34,400 --> 00:17:40,320
is strictly less than q minus 1

424
00:17:37,760 --> 00:17:42,000
and so this implies that we can apply

425
00:17:40,320 --> 00:17:45,760
this zero sum property

426
00:17:42,000 --> 00:17:49,600
in other words the sum of

427
00:17:45,760 --> 00:17:53,120
all these outputs uh corresponding to

428
00:17:49,600 --> 00:17:57,600
the inputs the q inputs obtained when q

429
00:17:53,120 --> 00:18:01,199
varies in fq this output sum to zero

430
00:17:57,600 --> 00:18:04,240
and we can also do

431
00:18:01,200 --> 00:18:07,840
something which is better we can add t

432
00:18:04,240 --> 00:18:10,880
minus one more rounds and the reason

433
00:18:07,840 --> 00:18:12,720
is that if we look at this quantity

434
00:18:10,880 --> 00:18:15,280
which is a linear combination

435
00:18:12,720 --> 00:18:15,919
of the output words of these t minus one

436
00:18:15,280 --> 00:18:19,120
rounds

437
00:18:15,919 --> 00:18:20,640
it's not difficult to save it this is a

438
00:18:19,120 --> 00:18:23,120
linear combination

439
00:18:20,640 --> 00:18:23,760
of the input words of this t minus run

440
00:18:23,120 --> 00:18:26,320
rounds

441
00:18:23,760 --> 00:18:28,000
and because the input words here

442
00:18:26,320 --> 00:18:30,320
corresponds to polynomial

443
00:18:28,000 --> 00:18:32,640
of degree at m of degrees strictly less

444
00:18:30,320 --> 00:18:34,320
than q minus 1 then the same property

445
00:18:32,640 --> 00:18:38,080
holds for this value

446
00:18:34,320 --> 00:18:42,159
so this implies that when x varies in fq

447
00:18:38,080 --> 00:18:45,199
this quantity here sum to zero so

448
00:18:42,160 --> 00:18:47,679
this provides us an integ

449
00:18:45,200 --> 00:18:48,480
with an integral distinguisher on g

450
00:18:47,679 --> 00:18:52,160
memsi

451
00:18:48,480 --> 00:18:56,720
which covers three t minus four plus

452
00:18:52,160 --> 00:18:59,600
log three of q minus two rounds

453
00:18:56,720 --> 00:19:00,640
so for instance for at the parameters we

454
00:18:59,600 --> 00:19:04,480
focus on

455
00:19:00,640 --> 00:19:07,520
this distinguisher covers 70 out of the

456
00:19:04,480 --> 00:19:11,679
1 101 runs

457
00:19:07,520 --> 00:19:13,918
of gmc but what is not that nice is that

458
00:19:11,679 --> 00:19:16,799
the complexity of this distinguisher

459
00:19:13,919 --> 00:19:17,840
it's exactly q except the size of the

460
00:19:16,799 --> 00:19:20,879
fields because

461
00:19:17,840 --> 00:19:22,399
x varies in fq and then this implies

462
00:19:20,880 --> 00:19:24,480
then when the sub event

463
00:19:22,400 --> 00:19:26,160
when the size of the field is higher

464
00:19:24,480 --> 00:19:29,600
than the security level

465
00:19:26,160 --> 00:19:32,720
then the distinguisher does not apply

466
00:19:29,600 --> 00:19:36,240
however even in both case

467
00:19:32,720 --> 00:19:37,600
we can find we can exhibit a similar

468
00:19:36,240 --> 00:19:39,600
integral distinguisher

469
00:19:37,600 --> 00:19:41,918
by considering now multiplicative

470
00:19:39,600 --> 00:19:45,280
subgroup of the field even if

471
00:19:41,919 --> 00:19:47,360
the field is quite large so in that case

472
00:19:45,280 --> 00:19:50,720
so for instance in our case

473
00:19:47,360 --> 00:19:53,840
the parameter the field size proposed

474
00:19:50,720 --> 00:19:56,559
for the challenges is this one and this

475
00:19:53,840 --> 00:19:58,399
prime is very nice because for our

476
00:19:56,559 --> 00:20:00,960
attack for the attacker because

477
00:19:58,400 --> 00:20:01,840
q minus one is divisible by a high power

478
00:20:00,960 --> 00:20:03,919
of two

479
00:20:01,840 --> 00:20:06,559
so this means for instance that we can

480
00:20:03,919 --> 00:20:09,280
consider a multiplicative subgroup of

481
00:20:06,559 --> 00:20:12,320
size 2 to the power of 128

482
00:20:09,280 --> 00:20:15,360
and then with this we can exhibit

483
00:20:12,320 --> 00:20:18,879
an integral distinguisher which

484
00:20:15,360 --> 00:20:20,799
covers 85 rounds and so the number of

485
00:20:18,880 --> 00:20:23,520
rounds covered by the distinguisher is

486
00:20:20,799 --> 00:20:26,080
exactly the same as before except that

487
00:20:23,520 --> 00:20:29,840
the size of the multiplicative sub group

488
00:20:26,080 --> 00:20:32,799
is used instead of q minus 1.

489
00:20:29,840 --> 00:20:33,360
so also because what we are considering

490
00:20:32,799 --> 00:20:36,960
here

491
00:20:33,360 --> 00:20:39,360
is not a block cipher but a permutation

492
00:20:36,960 --> 00:20:41,039
where the key is fixed and corresponds

493
00:20:39,360 --> 00:20:43,360
to the run constant

494
00:20:41,039 --> 00:20:44,240
this means that we are in a non-key

495
00:20:43,360 --> 00:20:47,280
setting

496
00:20:44,240 --> 00:20:50,480
and so we can start the computation

497
00:20:47,280 --> 00:20:52,799
not only on from the input

498
00:20:50,480 --> 00:20:53,760
of the permutation but we can start from

499
00:20:52,799 --> 00:20:56,320
the middle

500
00:20:53,760 --> 00:20:58,240
which means that we can use similar

501
00:20:56,320 --> 00:21:00,000
properties to construct not only

502
00:20:58,240 --> 00:21:00,640
integral distinguisher but what is

503
00:21:00,000 --> 00:21:03,679
called

504
00:21:00,640 --> 00:21:05,679
zero sum distinguishes so we only have

505
00:21:03,679 --> 00:21:08,400
to use the same property but

506
00:21:05,679 --> 00:21:09,440
by computing in the backwards direction

507
00:21:08,400 --> 00:21:13,280
now

508
00:21:09,440 --> 00:21:17,520
and so what we get like this is we get

509
00:21:13,280 --> 00:21:20,240
some quantity depending on the input

510
00:21:17,520 --> 00:21:22,320
words which sum to zero and similarly as

511
00:21:20,240 --> 00:21:24,799
before some quantity depending on the

512
00:21:22,320 --> 00:21:27,360
output words which sum two zeros

513
00:21:24,799 --> 00:21:28,240
so with this we get a zero sum

514
00:21:27,360 --> 00:21:31,520
distinguisher

515
00:21:28,240 --> 00:21:35,520
covering this number of runs so if for

516
00:21:31,520 --> 00:21:38,639
the parameters we focus on if x

517
00:21:35,520 --> 00:21:41,840
varies in fq so if we saturate

518
00:21:38,640 --> 00:21:43,679
x then we cover a number of rounds which

519
00:21:41,840 --> 00:21:46,959
is higher than the number of rounds

520
00:21:43,679 --> 00:21:48,480
recommended by the designer and if we

521
00:21:46,960 --> 00:21:51,679
want to

522
00:21:48,480 --> 00:21:54,320
get a distinguisher which only

523
00:21:51,679 --> 00:21:56,640
covers a number of around corresponding

524
00:21:54,320 --> 00:21:58,960
to the recommended number of rounds

525
00:21:56,640 --> 00:22:01,120
then we can restrict ourselves to a

526
00:21:58,960 --> 00:22:04,000
multiplicative subgroup

527
00:22:01,120 --> 00:22:05,678
and then so for instance for a group the

528
00:22:04,000 --> 00:22:08,559
subgroup of this size

529
00:22:05,679 --> 00:22:10,159
what we get is a distinguished with a

530
00:22:08,559 --> 00:22:14,080
lower complexity

531
00:22:10,159 --> 00:22:16,159
here the complexity is 2 to the power 48

532
00:22:14,080 --> 00:22:18,480
which is smaller than the size of the

533
00:22:16,159 --> 00:22:18,480
field

534
00:22:20,080 --> 00:22:27,039
so this was for integral distinguishers

535
00:22:23,840 --> 00:22:27,600
and let me now move on to the second new

536
00:22:27,039 --> 00:22:30,720
type of

537
00:22:27,600 --> 00:22:33,120
tags that we introduced on gmc

538
00:22:30,720 --> 00:22:35,520
so we called this attack algebraically

539
00:22:33,120 --> 00:22:38,479
controlled differential attacks

540
00:22:35,520 --> 00:22:40,320
and the idea here is to combine

541
00:22:38,480 --> 00:22:44,640
differential cryptanalysis

542
00:22:40,320 --> 00:22:44,639
with some algebraic properties

543
00:22:44,880 --> 00:22:51,280
so what we would like to do here

544
00:22:48,159 --> 00:22:51,280
is uh to

545
00:22:51,360 --> 00:22:56,479
make to to mount a collision attack on

546
00:22:54,880 --> 00:22:58,000
the hash function that means on the

547
00:22:56,480 --> 00:23:01,200
sponge construction

548
00:22:58,000 --> 00:23:05,360
using gmc and so for that

549
00:23:01,200 --> 00:23:09,080
what we need is to find a pair of inputs

550
00:23:05,360 --> 00:23:11,120
which satisfy some differential

551
00:23:09,080 --> 00:23:15,039
characteristics

552
00:23:11,120 --> 00:23:17,520
but as in or setting what we will do

553
00:23:15,039 --> 00:23:19,360
is that instead of the usual

554
00:23:17,520 --> 00:23:20,720
probabilistic method which is too

555
00:23:19,360 --> 00:23:22,879
expensive here

556
00:23:20,720 --> 00:23:24,000
what we will do is that we will do use

557
00:23:22,880 --> 00:23:26,080
some algebraic

558
00:23:24,000 --> 00:23:27,520
techniques we will try to solve some

559
00:23:26,080 --> 00:23:30,240
algebraic equations

560
00:23:27,520 --> 00:23:31,039
in order to find these inputs which

561
00:23:30,240 --> 00:23:33,440
satisfy

562
00:23:31,039 --> 00:23:35,280
a given differential characteristic and

563
00:23:33,440 --> 00:23:37,440
we will be able to do this

564
00:23:35,280 --> 00:23:38,879
by representing the condition on

565
00:23:37,440 --> 00:23:41,919
differential transition

566
00:23:38,880 --> 00:23:43,520
as algebraic equations so i will show

567
00:23:41,919 --> 00:23:46,799
how this applies to

568
00:23:43,520 --> 00:23:49,918
g mimsi and what we will obtain is

569
00:23:46,799 --> 00:23:50,879
at differential characteristics for

570
00:23:49,919 --> 00:23:54,480
gmimc

571
00:23:50,880 --> 00:23:56,480
but we will find valid inputs for this

572
00:23:54,480 --> 00:23:58,720
differential characteristic

573
00:23:56,480 --> 00:23:59,919
by an attack an algorithm which is

574
00:23:58,720 --> 00:24:03,760
almost entirely

575
00:23:59,919 --> 00:24:06,400
algebraic and not probabilistic at all

576
00:24:03,760 --> 00:24:08,080
so i will show you how this works on

577
00:24:06,400 --> 00:24:09,760
three t minus two rounds of the

578
00:24:08,080 --> 00:24:11,600
permutation but actually

579
00:24:09,760 --> 00:24:13,120
we can extend these differential

580
00:24:11,600 --> 00:24:16,559
characteristics to

581
00:24:13,120 --> 00:24:19,678
t more rounds and then we get

582
00:24:16,559 --> 00:24:21,600
a better different better and more

583
00:24:19,679 --> 00:24:22,799
and so we get a better differential

584
00:24:21,600 --> 00:24:25,360
characteristics

585
00:24:22,799 --> 00:24:27,360
and we can use this for finding

586
00:24:25,360 --> 00:24:27,840
collisions so for instance we applied

587
00:24:27,360 --> 00:24:30,959
that

588
00:24:27,840 --> 00:24:34,000
in practice for finding collisions

589
00:24:30,960 --> 00:24:35,440
on the version of the hash function with

590
00:24:34,000 --> 00:24:39,520
the parameters

591
00:24:35,440 --> 00:24:42,320
we focus on but reduced to 40 runs

592
00:24:39,520 --> 00:24:44,879
and this has been done in a few minutes

593
00:24:42,320 --> 00:24:46,879
on a pc

594
00:24:44,880 --> 00:24:49,279
so let's have a look to what happens in

595
00:24:46,880 --> 00:24:50,720
practice so what we want to find for

596
00:24:49,279 --> 00:24:53,919
this attack first

597
00:24:50,720 --> 00:24:58,240
is a differential characteristic for

598
00:24:53,919 --> 00:25:02,240
gmimc so

599
00:24:58,240 --> 00:25:06,240
let's see what happens you here we start

600
00:25:02,240 --> 00:25:08,320
from a differential an input difference

601
00:25:06,240 --> 00:25:11,919
which has this particular form

602
00:25:08,320 --> 00:25:13,760
so the two the first two branches have a

603
00:25:11,919 --> 00:25:16,960
non-zero difference delta zero

604
00:25:13,760 --> 00:25:20,400
and delta zero prime and then we have t

605
00:25:16,960 --> 00:25:21,360
minus two branches with a zero input

606
00:25:20,400 --> 00:25:23,520
difference

607
00:25:21,360 --> 00:25:24,799
so because the first input difference is

608
00:25:23,520 --> 00:25:27,520
not zero then

609
00:25:24,799 --> 00:25:28,400
it's if the s box at the first round is

610
00:25:27,520 --> 00:25:31,760
active

611
00:25:28,400 --> 00:25:32,480
and then we denote by delta 1 the output

612
00:25:31,760 --> 00:25:35,679
difference

613
00:25:32,480 --> 00:25:38,799
of this first s box

614
00:25:35,679 --> 00:25:40,960
and so this delta 1 is then added to all

615
00:25:38,799 --> 00:25:43,039
over branches which means that at the

616
00:25:40,960 --> 00:25:46,080
output of this first round

617
00:25:43,039 --> 00:25:47,200
we get this difference where delta 1 has

618
00:25:46,080 --> 00:25:50,559
been added to

619
00:25:47,200 --> 00:25:54,799
all branches except the last one

620
00:25:50,559 --> 00:25:57,039
and now if we apply a second round again

621
00:25:54,799 --> 00:25:58,240
we have an active s box so we have a

622
00:25:57,039 --> 00:26:01,360
transition

623
00:25:58,240 --> 00:26:04,400
we denote by delta one prime v output

624
00:26:01,360 --> 00:26:05,840
uh of so the output difference of the s

625
00:26:04,400 --> 00:26:08,320
box at this second round

626
00:26:05,840 --> 00:26:10,158
and again this delta one prime is added

627
00:26:08,320 --> 00:26:12,320
to all branches

628
00:26:10,159 --> 00:26:14,799
except the last one and we get this

629
00:26:12,320 --> 00:26:17,200
difference at the output of the second

630
00:26:14,799 --> 00:26:17,200
round

631
00:26:18,159 --> 00:26:26,799
so what is nice here is that

632
00:26:23,279 --> 00:26:29,600
we have we can observe that as this

633
00:26:26,799 --> 00:26:30,158
the difference that we have in this

634
00:26:29,600 --> 00:26:33,360
first

635
00:26:30,159 --> 00:26:35,440
t minus two branches is x the same it

636
00:26:33,360 --> 00:26:38,959
equals delta one plus delta one

637
00:26:35,440 --> 00:26:41,840
prime so this implies that if this delta

638
00:26:38,960 --> 00:26:45,279
1 plus delta 1 prime is equal to 0

639
00:26:41,840 --> 00:26:48,799
then we get zeros here in

640
00:26:45,279 --> 00:26:52,320
on the first t minus two branches

641
00:26:48,799 --> 00:26:55,918
and so this implies that we have

642
00:26:52,320 --> 00:26:59,039
t minus two additional rounds for free

643
00:26:55,919 --> 00:27:02,320
because the s box is not active

644
00:26:59,039 --> 00:27:03,039
in the last in in the next t minus two

645
00:27:02,320 --> 00:27:05,279
rounds

646
00:27:03,039 --> 00:27:06,720
so what we get at the end if this

647
00:27:05,279 --> 00:27:09,039
condition is satisfied

648
00:27:06,720 --> 00:27:09,840
is a differential characteristic over t

649
00:27:09,039 --> 00:27:11,440
rounds

650
00:27:09,840 --> 00:27:13,120
and moreover this differential

651
00:27:11,440 --> 00:27:15,120
characteristic is an iterative

652
00:27:13,120 --> 00:27:17,120
differential characteristic because

653
00:27:15,120 --> 00:27:20,639
the output difference has exactly the

654
00:27:17,120 --> 00:27:23,678
same form as the input difference

655
00:27:20,640 --> 00:27:25,600
so this condition this this t rounds

656
00:27:23,679 --> 00:27:27,440
differential characteristic is satisfied

657
00:27:25,600 --> 00:27:30,158
if this condition holds

658
00:27:27,440 --> 00:27:31,679
and this condition it occurs with

659
00:27:30,159 --> 00:27:34,480
probability one over q

660
00:27:31,679 --> 00:27:36,399
where q is the size of the field but the

661
00:27:34,480 --> 00:27:39,679
problem here is that

662
00:27:36,399 --> 00:27:43,039
we operate on very large fields so this

663
00:27:39,679 --> 00:27:45,520
is extremely expensive so

664
00:27:43,039 --> 00:27:46,879
we won't be able to use a classical

665
00:27:45,520 --> 00:27:50,480
probabilistic method

666
00:27:46,880 --> 00:27:52,399
for finding pairs of inputs which

667
00:27:50,480 --> 00:27:55,120
satisfy this differential

668
00:27:52,399 --> 00:27:55,840
so instead what we will do is that we

669
00:27:55,120 --> 00:27:59,120
will view

670
00:27:55,840 --> 00:28:02,959
this condition as an algebraic

671
00:27:59,120 --> 00:28:06,639
equation on the values on the inputs

672
00:28:02,960 --> 00:28:07,039
of the differentials so let's see now

673
00:28:06,640 --> 00:28:09,919
how

674
00:28:07,039 --> 00:28:13,120
we can apply this to find longer

675
00:28:09,919 --> 00:28:15,919
differential characteristic on gmc

676
00:28:13,120 --> 00:28:18,559
so we can combine these new differential

677
00:28:15,919 --> 00:28:19,600
characteristic with the property we had

678
00:28:18,559 --> 00:28:22,879
and we used in

679
00:28:19,600 --> 00:28:25,199
interval distinguisher over two t minus

680
00:28:22,880 --> 00:28:27,600
two rounds so remember what we had

681
00:28:25,200 --> 00:28:29,600
we considered some input states which

682
00:28:27,600 --> 00:28:32,879
had this specific form

683
00:28:29,600 --> 00:28:36,240
so we had a constant on the first

684
00:28:32,880 --> 00:28:39,279
t minus two um inputs

685
00:28:36,240 --> 00:28:41,520
uh branches and then x and f of x

686
00:28:39,279 --> 00:28:43,279
and then we proved that after two t

687
00:28:41,520 --> 00:28:46,480
minus two rounds we have an

688
00:28:43,279 --> 00:28:50,640
output of this form where the last t

689
00:28:46,480 --> 00:28:53,679
minus two branches are now constant

690
00:28:50,640 --> 00:28:56,000
so if we take if we consider two input

691
00:28:53,679 --> 00:28:58,080
states which have exactly this form

692
00:28:56,000 --> 00:28:59,440
so one defined by x and the other one

693
00:28:58,080 --> 00:29:03,039
defined by one

694
00:28:59,440 --> 00:29:04,960
so what we have is after two t minus two

695
00:29:03,039 --> 00:29:05,679
rounds two output states having this

696
00:29:04,960 --> 00:29:07,919
form

697
00:29:05,679 --> 00:29:10,000
and in particular we are equal on the

698
00:29:07,919 --> 00:29:12,240
last t minus two branches

699
00:29:10,000 --> 00:29:14,480
which means that the difference between

700
00:29:12,240 --> 00:29:18,000
these output states

701
00:29:14,480 --> 00:29:19,919
has exactly the same form as the

702
00:29:18,000 --> 00:29:21,840
input difference or or previous

703
00:29:19,919 --> 00:29:23,120
differential characteristics so we can

704
00:29:21,840 --> 00:29:25,678
change this

705
00:29:23,120 --> 00:29:27,120
with or t rounds differential

706
00:29:25,679 --> 00:29:30,480
characteristic which had

707
00:29:27,120 --> 00:29:32,000
this form and so with that we get a

708
00:29:30,480 --> 00:29:35,039
differential characteristic

709
00:29:32,000 --> 00:29:37,840
over three t minus t rounds

710
00:29:35,039 --> 00:29:38,960
and this differential characteristic is

711
00:29:37,840 --> 00:29:42,320
satisfied

712
00:29:38,960 --> 00:29:43,840
if the tram differential characteristic

713
00:29:42,320 --> 00:29:47,760
here is satisfied so

714
00:29:43,840 --> 00:29:51,039
if we have a difference at the output

715
00:29:47,760 --> 00:29:54,158
of the s boxes in the two rounds

716
00:29:51,039 --> 00:29:57,440
involved in here this characteristic

717
00:29:54,159 --> 00:30:00,320
if this difference cancels out

718
00:29:57,440 --> 00:30:01,679
and so as i explained before this this

719
00:30:00,320 --> 00:30:05,520
differences here

720
00:30:01,679 --> 00:30:08,000
this condition can be written as a

721
00:30:05,520 --> 00:30:09,039
equation equation depending on the

722
00:30:08,000 --> 00:30:12,960
inputs here

723
00:30:09,039 --> 00:30:16,559
x and x here and y

724
00:30:12,960 --> 00:30:19,760
and so we can find a pair of inputs so

725
00:30:16,559 --> 00:30:21,520
a pair of values x and y such that those

726
00:30:19,760 --> 00:30:24,879
two inputs satisfy

727
00:30:21,520 --> 00:30:25,918
the differential characteristic if we

728
00:30:24,880 --> 00:30:29,360
are able to

729
00:30:25,919 --> 00:30:31,279
solve this equation so of course

730
00:30:29,360 --> 00:30:34,000
this depends on the degree of the

731
00:30:31,279 --> 00:30:36,159
equation corresponding to this condition

732
00:30:34,000 --> 00:30:37,919
so what is the degree of this equation

733
00:30:36,159 --> 00:30:42,240
then this is quite simple

734
00:30:37,919 --> 00:30:45,279
we start from something a polynomial g

735
00:30:42,240 --> 00:30:47,279
which has degree three and then we apply

736
00:30:45,279 --> 00:30:48,080
a first round so we multiply the degree

737
00:30:47,279 --> 00:30:50,480
by three

738
00:30:48,080 --> 00:30:52,320
and we have a second round so we

739
00:30:50,480 --> 00:30:54,880
multiply it again by three

740
00:30:52,320 --> 00:30:55,439
and so this means that in total we get

741
00:30:54,880 --> 00:30:59,200
degree

742
00:30:55,440 --> 00:31:02,880
which is almost 27.

743
00:30:59,200 --> 00:31:06,559
so what we have shown is that

744
00:31:02,880 --> 00:31:10,080
we are able to find

745
00:31:06,559 --> 00:31:12,960
uh to find input values which satisfy

746
00:31:10,080 --> 00:31:13,439
this differential characteristic over

747
00:31:12,960 --> 00:31:16,159
three t

748
00:31:13,440 --> 00:31:16,559
minus two rounds if we are able to solve

749
00:31:16,159 --> 00:31:19,919
this

750
00:31:16,559 --> 00:31:23,600
equation which is an equation in x and y

751
00:31:19,919 --> 00:31:25,519
of degree at most 27 and so how do we

752
00:31:23,600 --> 00:31:26,158
solve this when this is quite simple we

753
00:31:25,519 --> 00:31:28,880
just set

754
00:31:26,159 --> 00:31:30,000
y equal to a constant and so we got a

755
00:31:28,880 --> 00:31:32,640
polynomial in

756
00:31:30,000 --> 00:31:34,320
x of degree at most 27 and we just

757
00:31:32,640 --> 00:31:38,799
factor this polynomial

758
00:31:34,320 --> 00:31:42,480
and this is very very fast

759
00:31:38,799 --> 00:31:45,440
and then we can find an input difference

760
00:31:42,480 --> 00:31:46,080
which satisfies sorry an input which

761
00:31:45,440 --> 00:31:49,039
satisfies

762
00:31:46,080 --> 00:31:51,840
a differential characteristic so this

763
00:31:49,039 --> 00:31:53,679
was uh on a small example but we can

764
00:31:51,840 --> 00:31:54,720
also extend this differential

765
00:31:53,679 --> 00:31:57,919
characteristic

766
00:31:54,720 --> 00:32:00,159
by adding t more rounds at the beginning

767
00:31:57,919 --> 00:32:01,360
and then we can find a differential

768
00:32:00,159 --> 00:32:04,480
characteristic

769
00:32:01,360 --> 00:32:07,600
over now uh four t

770
00:32:04,480 --> 00:32:09,200
minus two rounds and using this we have

771
00:32:07,600 --> 00:32:12,480
been able to find practical

772
00:32:09,200 --> 00:32:14,880
collisions on the hash function for a

773
00:32:12,480 --> 00:32:17,279
reduced version reduced to 40

774
00:32:14,880 --> 00:32:17,279
rounds

775
00:32:18,640 --> 00:32:24,960
so let me now conclude so

776
00:32:21,840 --> 00:32:26,320
uh here is a summary of some of the

777
00:32:24,960 --> 00:32:29,360
attacks that

778
00:32:26,320 --> 00:32:31,519
we presented in the paper the first part

779
00:32:29,360 --> 00:32:34,559
of the table corresponds to

780
00:32:31,519 --> 00:32:36,799
functions with a security level

781
00:32:34,559 --> 00:32:37,918
equal to 128 bits the second port

782
00:32:36,799 --> 00:32:42,080
corresponds to

783
00:32:37,919 --> 00:32:45,440
a security level equal to 256 bits

784
00:32:42,080 --> 00:32:47,360
and the red entries corresponds to

785
00:32:45,440 --> 00:32:49,200
attacks that means distinguished earns a

786
00:32:47,360 --> 00:32:50,719
permutation or attacks on the hash

787
00:32:49,200 --> 00:32:54,720
function which cover

788
00:32:50,720 --> 00:32:56,960
all the runs proposed by the designers

789
00:32:54,720 --> 00:32:58,960
and so i would like to conclude with two

790
00:32:56,960 --> 00:33:02,240
more observations the first one

791
00:32:58,960 --> 00:33:04,720
is that i didn't say that uh the stock

792
00:33:02,240 --> 00:33:08,480
word challenges also include a

793
00:33:04,720 --> 00:33:11,200
first type of kid permutation which is

794
00:33:08,480 --> 00:33:12,320
a permutation corresponding to the block

795
00:33:11,200 --> 00:33:15,360
cipher's vision

796
00:33:12,320 --> 00:33:18,720
for the binary case and rescue

797
00:33:15,360 --> 00:33:21,439
for the prime field and we were not

798
00:33:18,720 --> 00:33:22,159
able to apply similar attacks on this

799
00:33:21,440 --> 00:33:25,440
third

800
00:33:22,159 --> 00:33:26,080
type of permutation so this means that

801
00:33:25,440 --> 00:33:28,240
it seems

802
00:33:26,080 --> 00:33:29,199
that vision and rescue offers a better

803
00:33:28,240 --> 00:33:32,080
security

804
00:33:29,200 --> 00:33:33,679
in these applications than tmc and

805
00:33:32,080 --> 00:33:36,879
haddis memphis

806
00:33:33,679 --> 00:33:37,760
but the second observation is that it's

807
00:33:36,880 --> 00:33:40,559
quite hard

808
00:33:37,760 --> 00:33:41,760
quite difficult to make strong claims on

809
00:33:40,559 --> 00:33:44,720
the security of

810
00:33:41,760 --> 00:33:46,559
this new type of primitives and one of

811
00:33:44,720 --> 00:33:48,399
the reason is that these primitives

812
00:33:46,559 --> 00:33:49,760
operates over fields of old

813
00:33:48,399 --> 00:33:52,158
characteristics

814
00:33:49,760 --> 00:33:52,799
and as we have seen with our general

815
00:33:52,159 --> 00:33:56,240
version

816
00:33:52,799 --> 00:33:57,120
of integrated text well we need really

817
00:33:56,240 --> 00:34:00,320
new tools

818
00:33:57,120 --> 00:34:03,840
for analyzing these primitives and

819
00:34:00,320 --> 00:34:04,240
there are still much work that needs to

820
00:34:03,840 --> 00:34:07,519
be

821
00:34:04,240 --> 00:34:10,879
done in order to find these new tools

822
00:34:07,519 --> 00:34:13,760
and to see how we can have very

823
00:34:10,879 --> 00:34:15,598
efficient cryptanalytic methods for

824
00:34:13,760 --> 00:34:18,560
primitives over fields of odd

825
00:34:15,599 --> 00:34:18,560
characteristics

826
00:34:18,719 --> 00:34:23,759
so thank you very much for listening

