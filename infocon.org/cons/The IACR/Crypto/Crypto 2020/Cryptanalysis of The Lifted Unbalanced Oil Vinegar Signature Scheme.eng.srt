1
00:00:01,680 --> 00:00:06,160
hi my name is joshua deegan

2
00:00:03,919 --> 00:00:08,400
and here in this video i'll briefly

3
00:00:06,160 --> 00:00:10,800
summarize our paper a quick analysis of

4
00:00:08,400 --> 00:00:11,599
luv using the subfield differential

5
00:00:10,800 --> 00:00:13,840
attack

6
00:00:11,599 --> 00:00:14,799
this is a joint work by dren taging

7
00:00:13,840 --> 00:00:17,600
myself

8
00:00:14,799 --> 00:00:19,039
kurt schmidt basharka and zhong zhang

9
00:00:17,600 --> 00:00:20,400
and we're all from the university of

10
00:00:19,039 --> 00:00:22,320
cincinnati

11
00:00:20,400 --> 00:00:24,080
i'm sorry if i missed pronouncing those

12
00:00:22,320 --> 00:00:25,519
names in this video and i'm going to

13
00:00:24,080 --> 00:00:28,560
turn off the webcam

14
00:00:25,519 --> 00:00:30,799
so you all can properly see the slides

15
00:00:28,560 --> 00:00:33,280
so in our paper we attack the scheme

16
00:00:30,800 --> 00:00:35,440
called lifted unbalanced oil and vinegar

17
00:00:33,280 --> 00:00:36,880
which is a multivariate signature scheme

18
00:00:35,440 --> 00:00:37,839
based on the oil and vinegar through

19
00:00:36,880 --> 00:00:40,000
your scheme

20
00:00:37,840 --> 00:00:42,000
so to start off with we will describe

21
00:00:40,000 --> 00:00:43,280
what what that means

22
00:00:42,000 --> 00:00:45,440
then we'll look into the lifted

23
00:00:43,280 --> 00:00:47,039
unbalanced oil vinegar scheme itself

24
00:00:45,440 --> 00:00:49,360
and then i'll work on the subfield

25
00:00:47,039 --> 00:00:52,239
differential attack

26
00:00:49,360 --> 00:00:54,079
introduction a signature scheme is a

27
00:00:52,239 --> 00:00:56,000
mathematical scheme for verifying the

28
00:00:54,079 --> 00:00:57,039
authenticity of digital messages or

29
00:00:56,000 --> 00:00:59,120
documents

30
00:00:57,039 --> 00:01:01,520
you need a method for key generation to

31
00:00:59,120 --> 00:01:03,760
create private key public key pairs

32
00:01:01,520 --> 00:01:06,000
a method for assigning a message given a

33
00:01:03,760 --> 00:01:08,399
private key to produce a signature

34
00:01:06,000 --> 00:01:09,119
and the method of giving a message a

35
00:01:08,400 --> 00:01:11,680
public key

36
00:01:09,119 --> 00:01:13,760
and a potential signature of determining

37
00:01:11,680 --> 00:01:16,080
whether it was legitimately generated or

38
00:01:13,760 --> 00:01:16,080
not

39
00:01:16,960 --> 00:01:20,479
the security of modern schemes rely on

40
00:01:18,880 --> 00:01:21,520
the hardness of seven mathematical

41
00:01:20,479 --> 00:01:23,840
problems

42
00:01:21,520 --> 00:01:25,600
listed below are the three families that

43
00:01:23,840 --> 00:01:27,439
we largely use today

44
00:01:25,600 --> 00:01:29,439
and the well as well as the mathematical

45
00:01:27,439 --> 00:01:31,039
problem they are based on

46
00:01:29,439 --> 00:01:33,199
here recently there's been great

47
00:01:31,040 --> 00:01:35,200
developments on quantum computers

48
00:01:33,200 --> 00:01:36,640
which use basic particles and quantum

49
00:01:35,200 --> 00:01:37,759
mechanic principles to a film

50
00:01:36,640 --> 00:01:39,360
calculation

51
00:01:37,759 --> 00:01:41,040
petershaw's algorithm shows that the

52
00:01:39,360 --> 00:01:41,600
previous families are vulnerable to a

53
00:01:41,040 --> 00:01:46,320
sufficient

54
00:01:41,600 --> 00:01:48,320
large quantum computer so in august 2015

55
00:01:46,320 --> 00:01:49,919
the nsa declared that post-quantum

56
00:01:48,320 --> 00:01:52,320
criticisms were needed

57
00:01:49,920 --> 00:01:53,600
in december 2016 nist called for

58
00:01:52,320 --> 00:01:55,919
proposals of new

59
00:01:53,600 --> 00:01:57,119
post-quantum cryptosystems and they had

60
00:01:55,920 --> 00:02:00,799
three criteria

61
00:01:57,119 --> 00:02:02,479
security cost algorithm implementation

62
00:02:00,799 --> 00:02:05,520
characteristics

63
00:02:02,479 --> 00:02:06,880
luv was the round two candidate as of

64
00:02:05,520 --> 00:02:08,720
august 2020

65
00:02:06,880 --> 00:02:11,359
there are three signature schemes left

66
00:02:08,720 --> 00:02:14,800
in round three crystals to lithium

67
00:02:11,360 --> 00:02:16,400
falcon and rainbow multivariate

68
00:02:14,800 --> 00:02:18,400
signature schemes

69
00:02:16,400 --> 00:02:19,840
in the multivariate signature scheme the

70
00:02:18,400 --> 00:02:22,000
public key p

71
00:02:19,840 --> 00:02:24,400
is an m two bullet of multivariate

72
00:02:22,000 --> 00:02:26,560
polynomials over a finite field

73
00:02:24,400 --> 00:02:27,680
the private key is a way to compute p

74
00:02:26,560 --> 00:02:29,840
inverse

75
00:02:27,680 --> 00:02:32,080
by p in this we do not necessarily mean

76
00:02:29,840 --> 00:02:33,680
that p is an invaluable function

77
00:02:32,080 --> 00:02:35,760
merely that we have a way of generating

78
00:02:33,680 --> 00:02:38,000
three images

79
00:02:35,760 --> 00:02:40,480
and then sending a hash of a document is

80
00:02:38,000 --> 00:02:43,040
just finding a pretty image of

81
00:02:40,480 --> 00:02:44,640
a hash the verification comes in

82
00:02:43,040 --> 00:02:46,720
plugging in the signature and getting

83
00:02:44,640 --> 00:02:48,839
the hash back

84
00:02:46,720 --> 00:02:50,239
the direct attack is to solve the set of

85
00:02:48,840 --> 00:02:52,800
equations p

86
00:02:50,239 --> 00:02:54,560
is equal to y solving a set of n

87
00:02:52,800 --> 00:02:56,560
randomly chosen equations within

88
00:02:54,560 --> 00:02:59,040
variables is going to be complete

89
00:02:56,560 --> 00:03:01,200
so this is a theoretical foundation of

90
00:02:59,040 --> 00:03:02,720
why this multivariate problem would be

91
00:03:01,200 --> 00:03:04,879
good for a signature scheme

92
00:03:02,720 --> 00:03:07,280
but this does not necessarily ensure the

93
00:03:04,879 --> 00:03:09,679
security of the systems

94
00:03:07,280 --> 00:03:11,120
now for efficiency we are a lot we

95
00:03:09,680 --> 00:03:12,319
largely look only at quadratic

96
00:03:11,120 --> 00:03:13,680
constructions

97
00:03:12,319 --> 00:03:15,679
and we can just define this

98
00:03:13,680 --> 00:03:17,440
mathematically because any set of high

99
00:03:15,680 --> 00:03:20,080
degree polynomial equations can be

100
00:03:17,440 --> 00:03:22,400
reduced to a set of quadratic equations

101
00:03:20,080 --> 00:03:24,959
as in this example we just essentially

102
00:03:22,400 --> 00:03:26,799
declare x1 times x2 to be y

103
00:03:24,959 --> 00:03:29,360
and then we are led to the following

104
00:03:26,799 --> 00:03:32,640
quadratic system

105
00:03:29,360 --> 00:03:34,720
the oil and vinegar signature scheme the

106
00:03:32,640 --> 00:03:36,399
oil video signature scheme which is the

107
00:03:34,720 --> 00:03:37,120
inspiration for the scheme that we're

108
00:03:36,400 --> 00:03:40,560
attacking

109
00:03:37,120 --> 00:03:42,319
was introduced by pattern in 1997.

110
00:03:40,560 --> 00:03:44,159
oil and vinegar is both simple and

111
00:03:42,319 --> 00:03:45,359
efficient it was inspired by the

112
00:03:44,159 --> 00:03:48,159
linearization attack

113
00:03:45,360 --> 00:03:49,280
to the matsumoto my cryptosystem here

114
00:03:48,159 --> 00:03:52,319
the public key p

115
00:03:49,280 --> 00:03:54,560
is the composition of two maps f and t f

116
00:03:52,319 --> 00:03:55,439
is quadratic but it's easy to compute f

117
00:03:54,560 --> 00:03:57,519
inverse

118
00:03:55,439 --> 00:03:58,879
while finding pre-images and t is

119
00:03:57,519 --> 00:04:02,480
invertible and linear

120
00:03:58,879 --> 00:04:05,359
it is used to hide the structure of f

121
00:04:02,480 --> 00:04:06,319
we then see that x is equal to the p

122
00:04:05,360 --> 00:04:09,200
inverse of y

123
00:04:06,319 --> 00:04:10,079
can be found by first computing f

124
00:04:09,200 --> 00:04:12,879
inverse of y

125
00:04:10,080 --> 00:04:13,439
is equal to w and then t inverse of w is

126
00:04:12,879 --> 00:04:17,759
equal to

127
00:04:13,439 --> 00:04:20,159
x let q be the finite field to size q

128
00:04:17,759 --> 00:04:21,040
and o and v be natural numbers and n is

129
00:04:20,160 --> 00:04:24,000
equal to o

130
00:04:21,040 --> 00:04:24,320
plus v the central map which is what we

131
00:04:24,000 --> 00:04:27,360
call

132
00:04:24,320 --> 00:04:27,759
f is an o tuple of quadratic polynomials

133
00:04:27,360 --> 00:04:30,479
and n

134
00:04:27,759 --> 00:04:32,479
variables we divide the variables in the

135
00:04:30,479 --> 00:04:34,800
two types the vinica variables

136
00:04:32,479 --> 00:04:36,639
which is x1 to xv and the original

137
00:04:34,800 --> 00:04:40,000
variables which is xv plus 1

138
00:04:36,639 --> 00:04:41,360
to xn for convenience we have the index

139
00:04:40,000 --> 00:04:44,560
set

140
00:04:41,360 --> 00:04:47,759
v is one to v and o is the

141
00:04:44,560 --> 00:04:48,720
v plus one to n so that x i is a vinegar

142
00:04:47,759 --> 00:04:51,919
variable if i

143
00:04:48,720 --> 00:04:56,080
is in v and x is an oriole variable of i

144
00:04:51,919 --> 00:04:58,560
is o each central map polynomial fk is

145
00:04:56,080 --> 00:05:00,479
in the following oil and vinegar form

146
00:04:58,560 --> 00:05:01,600
and here we see that we have vinegar

147
00:05:00,479 --> 00:05:04,800
times vinegar

148
00:05:01,600 --> 00:05:08,639
vinegar times oil vinegar by itself

149
00:05:04,800 --> 00:05:10,639
oil by itself plus a constant

150
00:05:08,639 --> 00:05:12,000
notice that there are no oil times oil

151
00:05:10,639 --> 00:05:13,759
terms

152
00:05:12,000 --> 00:05:15,680
thus by guessing for each of the vinegar

153
00:05:13,759 --> 00:05:18,720
polynomials here the x

154
00:05:15,680 --> 00:05:20,240
i is equal to nu i for i and v we have a

155
00:05:18,720 --> 00:05:23,039
linear polynomial

156
00:05:20,240 --> 00:05:24,240
in all variables so here's this plugging

157
00:05:23,039 --> 00:05:25,840
in that guess

158
00:05:24,240 --> 00:05:28,000
and we see that the first sum is

159
00:05:25,840 --> 00:05:30,799
constant the second is linear

160
00:05:28,000 --> 00:05:31,520
in the oil variables the third sum is

161
00:05:30,800 --> 00:05:35,120
constant

162
00:05:31,520 --> 00:05:36,880
and the first sum is linear

163
00:05:35,120 --> 00:05:38,639
thus we have a simple and efficient way

164
00:05:36,880 --> 00:05:42,479
of finding a pre-image of y

165
00:05:38,639 --> 00:05:43,759
in f q to the o first randomly guess for

166
00:05:42,479 --> 00:05:46,400
the negative variables

167
00:05:43,759 --> 00:05:48,000
for each quadratic equation and f x is

168
00:05:46,400 --> 00:05:50,080
equal to y

169
00:05:48,000 --> 00:05:51,120
then attempt to solve the resulting

170
00:05:50,080 --> 00:05:53,199
linear equations

171
00:05:51,120 --> 00:05:54,800
and o variables say by gaussian

172
00:05:53,199 --> 00:05:56,800
elimination

173
00:05:54,800 --> 00:05:57,840
if a solution exists then you find the

174
00:05:56,800 --> 00:06:00,000
pre-image

175
00:05:57,840 --> 00:06:00,880
and the very unlikely event that one

176
00:06:00,000 --> 00:06:02,800
does not

177
00:06:00,880 --> 00:06:04,159
simply try another guess for the vinegar

178
00:06:02,800 --> 00:06:05,520
variables

179
00:06:04,160 --> 00:06:07,360
the reason that the different variable

180
00:06:05,520 --> 00:06:08,479
types are called oil and vinegar comes

181
00:06:07,360 --> 00:06:10,479
from salad dressing

182
00:06:08,479 --> 00:06:12,719
where the oil and vinegar involved are

183
00:06:10,479 --> 00:06:14,800
not fully mixed

184
00:06:12,720 --> 00:06:16,000
by the composition with t we see that a

185
00:06:14,800 --> 00:06:18,160
public key p

186
00:06:16,000 --> 00:06:20,319
is equal to f composed of t seems to be

187
00:06:18,160 --> 00:06:23,440
a random quadratic system as the oil and

188
00:06:20,319 --> 00:06:25,520
vinegar structure is now hidden

189
00:06:23,440 --> 00:06:27,039
so there's some broken parameters for

190
00:06:25,520 --> 00:06:29,758
oil database games

191
00:06:27,039 --> 00:06:31,759
the original permit suggested was v is

192
00:06:29,759 --> 00:06:32,560
equal to o which was called balanced oil

193
00:06:31,759 --> 00:06:34,720
and vinegar

194
00:06:32,560 --> 00:06:36,880
this is defeated by kips and shamia

195
00:06:34,720 --> 00:06:39,199
using invariant subspaces

196
00:06:36,880 --> 00:06:40,479
if v is less than o then by guessing

197
00:06:39,199 --> 00:06:42,319
some variables

198
00:06:40,479 --> 00:06:43,520
it has a potential to become balanced

199
00:06:42,319 --> 00:06:46,160
oil vinegar again

200
00:06:43,520 --> 00:06:47,440
which then can be easily broken if v is

201
00:06:46,160 --> 00:06:49,039
much greater than o

202
00:06:47,440 --> 00:06:51,520
then finding a solution is generally

203
00:06:49,039 --> 00:06:54,159
easy as well

204
00:06:51,520 --> 00:06:54,960
now the use of parameters is going to be

205
00:06:54,160 --> 00:06:57,840
something like v

206
00:06:54,960 --> 00:06:58,880
is equal to twice oh thriceo a similar

207
00:06:57,840 --> 00:07:00,560
ratios

208
00:06:58,880 --> 00:07:03,360
this is called unbalanced over the

209
00:07:00,560 --> 00:07:05,520
vinegar the direct attack does not work

210
00:07:03,360 --> 00:07:07,039
the complexity is the same as if solving

211
00:07:05,520 --> 00:07:08,880
a random system

212
00:07:07,039 --> 00:07:10,240
beyond the direct attack there is the

213
00:07:08,880 --> 00:07:12,880
reconciliation attack

214
00:07:10,240 --> 00:07:14,400
which uses the structure of uav systems

215
00:07:12,880 --> 00:07:15,440
it looks for equivalent maps of a

216
00:07:14,400 --> 00:07:17,359
special form

217
00:07:15,440 --> 00:07:20,479
complexity becomes solving a system of

218
00:07:17,360 --> 00:07:23,039
all quadratic equations in v variables

219
00:07:20,479 --> 00:07:24,400
now choosing v is equal to 2o or

220
00:07:23,039 --> 00:07:26,639
something similar is

221
00:07:24,400 --> 00:07:28,638
less efficient the signature is at least

222
00:07:26,639 --> 00:07:30,720
twice the size of a document

223
00:07:28,639 --> 00:07:31,840
therefore there are many developments

224
00:07:30,720 --> 00:07:34,400
from basic uav

225
00:07:31,840 --> 00:07:35,359
to improve the efficiency of the scheme

226
00:07:34,400 --> 00:07:37,679
importantly

227
00:07:35,360 --> 00:07:39,599
one is the round three finalists rainbow

228
00:07:37,680 --> 00:07:43,039
by jin tai dean gaditha schmidt

229
00:07:39,599 --> 00:07:45,039
in 2005. it's a multi-layered version of

230
00:07:43,039 --> 00:07:46,719
of e and it reduces the number of

231
00:07:45,039 --> 00:07:50,318
variables in the public key to get

232
00:07:46,720 --> 00:07:52,479
smaller key sizes and smaller signatures

233
00:07:50,319 --> 00:07:53,840
another is l u of e which we will now

234
00:07:52,479 --> 00:07:57,120
discuss

235
00:07:53,840 --> 00:07:59,599
lifted unbalanced oil and vinegar

236
00:07:57,120 --> 00:08:01,520
luv is a round two in this candidate

237
00:07:59,599 --> 00:08:03,039
designed by ward billions at all in

238
00:08:01,520 --> 00:08:05,198
2017.

239
00:08:03,039 --> 00:08:06,960
it is a variant of uav that implements

240
00:08:05,199 --> 00:08:09,680
two previous refinements of

241
00:08:06,960 --> 00:08:11,680
uav as well as the lifting modification

242
00:08:09,680 --> 00:08:13,360
for which it is named

243
00:08:11,680 --> 00:08:15,280
the two previously known refinements

244
00:08:13,360 --> 00:08:18,240
will not be important for our attack

245
00:08:15,280 --> 00:08:19,039
we will only briefly discuss them here

246
00:08:18,240 --> 00:08:21,840
the first

247
00:08:19,039 --> 00:08:22,878
originally by peter suspect is to choose

248
00:08:21,840 --> 00:08:25,440
the fine

249
00:08:22,879 --> 00:08:26,319
transformation t in the shape which as

250
00:08:25,440 --> 00:08:29,599
follows

251
00:08:26,319 --> 00:08:32,479
well one sub v is the identity matrix

252
00:08:29,599 --> 00:08:34,000
whose diagonal is length v and similar

253
00:08:32,479 --> 00:08:35,760
for one to o

254
00:08:34,000 --> 00:08:38,559
the second originally by albrecht

255
00:08:35,760 --> 00:08:40,880
pedestal is to use a seed in a pseudo

256
00:08:38,559 --> 00:08:42,000
random number generator to generate both

257
00:08:40,880 --> 00:08:45,200
the private key

258
00:08:42,000 --> 00:08:47,519
and the public key the third from which

259
00:08:45,200 --> 00:08:49,519
luv gets its name for the notification

260
00:08:47,519 --> 00:08:52,080
is the focus of our attack

261
00:08:49,519 --> 00:08:53,440
luv takes up oil and vinegar private key

262
00:08:52,080 --> 00:08:55,360
over a small field

263
00:08:53,440 --> 00:08:57,200
and lifts it to an extension field from

264
00:08:55,360 --> 00:08:58,959
which it signs the signatures

265
00:08:57,200 --> 00:09:01,920
this allows more efficient storage at

266
00:08:58,959 --> 00:09:04,719
the public and private keys

267
00:09:01,920 --> 00:09:06,079
so to be explicit let f do the r be the

268
00:09:04,720 --> 00:09:09,279
extension of f2

269
00:09:06,080 --> 00:09:11,600
of degree r and n is equal to v plus o

270
00:09:09,279 --> 00:09:12,800
the central map f still is an oral and

271
00:09:11,600 --> 00:09:15,680
vinegar form

272
00:09:12,800 --> 00:09:16,880
except now each of the coefficients is

273
00:09:15,680 --> 00:09:20,399
going to be chosen in

274
00:09:16,880 --> 00:09:23,279
f2 so either zero or one further

275
00:09:20,399 --> 00:09:24,160
we choose that linear map t to be in the

276
00:09:23,279 --> 00:09:26,000
form

277
00:09:24,160 --> 00:09:29,600
where each of the entries are also from

278
00:09:26,000 --> 00:09:31,839
the small field f2

279
00:09:29,600 --> 00:09:32,800
from the third modification we see that

280
00:09:31,839 --> 00:09:35,519
the public key

281
00:09:32,800 --> 00:09:37,519
p is equal to f composed of t also has

282
00:09:35,519 --> 00:09:40,320
coefficients only in f2

283
00:09:37,519 --> 00:09:41,600
but maps f to the r to the n to f to the

284
00:09:40,320 --> 00:09:45,120
r to the o

285
00:09:41,600 --> 00:09:48,399
we will call such polynomials lifted

286
00:09:45,120 --> 00:09:50,000
subfield differential attack now let's

287
00:09:48,399 --> 00:09:53,839
describe the subfield differential

288
00:09:50,000 --> 00:09:55,279
attack sda itself it is a direct act

289
00:09:53,839 --> 00:09:57,200
against l u of e

290
00:09:55,279 --> 00:09:59,360
meaning we will try to forge a signature

291
00:09:57,200 --> 00:10:03,360
x for given message y

292
00:09:59,360 --> 00:10:05,680
by directly solving p of x is equal to y

293
00:10:03,360 --> 00:10:06,560
we first note that the design of luv

294
00:10:05,680 --> 00:10:09,599
mixes the main

295
00:10:06,560 --> 00:10:11,760
f to the rtn of the public key p much

296
00:10:09,600 --> 00:10:13,839
larger than the range after the r to the

297
00:10:11,760 --> 00:10:15,519
o

298
00:10:13,839 --> 00:10:17,519
thus we can try searching through some

299
00:10:15,519 --> 00:10:20,720
large enough subject d of the domain

300
00:10:17,519 --> 00:10:23,360
to find the pre-image x for y d

301
00:10:20,720 --> 00:10:24,000
needs to be much more means to be much

302
00:10:23,360 --> 00:10:25,360
more

303
00:10:24,000 --> 00:10:27,600
needs to be more efficient to find

304
00:10:25,360 --> 00:10:29,519
pre-images in otherwise there's little

305
00:10:27,600 --> 00:10:31,519
point in restricting ourselves

306
00:10:29,519 --> 00:10:33,120
we thus look for subsets of structure

307
00:10:31,519 --> 00:10:36,160
that can be exploited

308
00:10:33,120 --> 00:10:39,360
for sda we choose the set f 2 to the d

309
00:10:36,160 --> 00:10:41,839
to the n plus x prime where f to the d

310
00:10:39,360 --> 00:10:43,680
is the subfield of f to the r and x

311
00:10:41,839 --> 00:10:44,959
prime is an element of f to the right to

312
00:10:43,680 --> 00:10:47,439
the n

313
00:10:44,959 --> 00:10:48,800
then the pre-image x will be in the form

314
00:10:47,440 --> 00:10:51,440
of x bar plus x

315
00:10:48,800 --> 00:10:52,000
prime where x bar is an element of f t

316
00:10:51,440 --> 00:10:55,360
to the d

317
00:10:52,000 --> 00:10:56,240
to the n this leaves the idea behind the

318
00:10:55,360 --> 00:10:58,480
attack

319
00:10:56,240 --> 00:11:00,880
with a differential we reduce solving

320
00:10:58,480 --> 00:11:04,079
the original equations over f to the r

321
00:11:00,880 --> 00:11:06,959
to new equations over f to the d the

322
00:11:04,079 --> 00:11:08,640
ladder will be more efficient to solve

323
00:11:06,959 --> 00:11:10,160
it will be shown that we will only rely

324
00:11:08,640 --> 00:11:10,640
on the listed structure of the public

325
00:11:10,160 --> 00:11:12,480
key

326
00:11:10,640 --> 00:11:13,760
and the availability of a larger

327
00:11:12,480 --> 00:11:17,360
subfield f g

328
00:11:13,760 --> 00:11:20,480
r so let p be an l u v

329
00:11:17,360 --> 00:11:23,680
public key and f to the d of subfield

330
00:11:20,480 --> 00:11:24,560
f to the r we first randomly select the

331
00:11:23,680 --> 00:11:28,000
differential x

332
00:11:24,560 --> 00:11:30,319
prime and f to the rtn and x x bar

333
00:11:28,000 --> 00:11:31,680
being determinant of f t to the d to the

334
00:11:30,320 --> 00:11:35,519
n

335
00:11:31,680 --> 00:11:39,599
then we define the map p bar is equal to

336
00:11:35,519 --> 00:11:42,640
p a value we did at x bar plus x prime

337
00:11:39,600 --> 00:11:45,440
and this maps f to the d to the n to

338
00:11:42,640 --> 00:11:47,040
f to the r to the o so we've shrunk our

339
00:11:45,440 --> 00:11:50,000
domain

340
00:11:47,040 --> 00:11:51,920
we will solve p bar is equal to y using

341
00:11:50,000 --> 00:11:55,120
the quotient ring representation

342
00:11:51,920 --> 00:11:57,040
f to the r now to remind ourselves what

343
00:11:55,120 --> 00:12:00,399
that is if i take a base field

344
00:11:57,040 --> 00:12:02,160
f2 and extension field f2 to the r

345
00:12:00,399 --> 00:12:03,920
there'll always exist an intermediary

346
00:12:02,160 --> 00:12:07,600
field f2 to the d

347
00:12:03,920 --> 00:12:09,680
whenever d divides r now f to the r

348
00:12:07,600 --> 00:12:11,920
is isomorphic to the following quotient

349
00:12:09,680 --> 00:12:12,800
ring where g of t is an irreducible

350
00:12:11,920 --> 00:12:17,040
polynomial

351
00:12:12,800 --> 00:12:19,359
of degree s is equal to r divided by d

352
00:12:17,040 --> 00:12:20,319
elements in f to the r's can thus be

353
00:12:19,360 --> 00:12:23,279
represented

354
00:12:20,320 --> 00:12:24,000
by degree s minus 1 polynomials in the

355
00:12:23,279 --> 00:12:27,600
polynomial

356
00:12:24,000 --> 00:12:30,000
ring over f to the d

357
00:12:27,600 --> 00:12:30,959
so when we look at the form of p bar is

358
00:12:30,000 --> 00:12:33,279
equal to y

359
00:12:30,959 --> 00:12:35,040
in particular the cave component we see

360
00:12:33,279 --> 00:12:38,160
it's going to

361
00:12:35,040 --> 00:12:38,480
by definition be f k tilde evaluated at

362
00:12:38,160 --> 00:12:41,600
x

363
00:12:38,480 --> 00:12:43,519
prime plus x bar now

364
00:12:41,600 --> 00:12:45,920
rearranging this and stepping out at the

365
00:12:43,519 --> 00:12:47,440
quadratic terms it will be in this form

366
00:12:45,920 --> 00:12:48,959
and we see that the quadratic temps have

367
00:12:47,440 --> 00:12:51,920
coefficients alpha

368
00:12:48,959 --> 00:12:53,599
inside f2 so either zero 1 and the

369
00:12:51,920 --> 00:12:54,240
linear times coefficients of random

370
00:12:53,600 --> 00:12:57,519
degree s

371
00:12:54,240 --> 00:13:02,720
minus 1 polynomials in t because

372
00:12:57,519 --> 00:13:06,160
x prime i is randomly selected

373
00:13:02,720 --> 00:13:09,279
so we can write this again as f k tilde

374
00:13:06,160 --> 00:13:12,240
of the x prime plus x bar is equal to

375
00:13:09,279 --> 00:13:12,720
some sum of some random linear functions

376
00:13:12,240 --> 00:13:15,760
over

377
00:13:12,720 --> 00:13:19,200
f 2 to the d but they're multiplied

378
00:13:15,760 --> 00:13:23,200
to t for all the powers of t from 1

379
00:13:19,200 --> 00:13:25,920
to s minus 1 plus a single quadratic

380
00:13:23,200 --> 00:13:29,040
equation which is not multiplied to t

381
00:13:25,920 --> 00:13:29,760
and we set this equal to y sub k which

382
00:13:29,040 --> 00:13:33,360
we can also

383
00:13:29,760 --> 00:13:33,360
decompose into the powers of t

384
00:13:33,440 --> 00:13:38,399
thus we can solve p bar is equal to y by

385
00:13:36,560 --> 00:13:41,040
first finding the solution space

386
00:13:38,399 --> 00:13:42,240
s to the set of s minus 1 times o linear

387
00:13:41,040 --> 00:13:45,519
equations

388
00:13:42,240 --> 00:13:46,639
a is equal to l i k x bar is equal to y

389
00:13:45,519 --> 00:13:48,959
i k

390
00:13:46,639 --> 00:13:49,920
now we have s minus one times all linear

391
00:13:48,959 --> 00:13:53,199
equations

392
00:13:49,920 --> 00:13:54,959
because we have s minus one powers of t

393
00:13:53,199 --> 00:13:56,240
you know t to the power one up to t to

394
00:13:54,959 --> 00:14:00,000
the power of s minus one

395
00:13:56,240 --> 00:14:00,240
to solve and we have o uh polynomials

396
00:14:00,000 --> 00:14:03,360
and

397
00:14:00,240 --> 00:14:04,959
p bar to do this with

398
00:14:03,360 --> 00:14:06,720
then we attempt to solve the set of o

399
00:14:04,959 --> 00:14:09,680
quadratic equations

400
00:14:06,720 --> 00:14:10,240
b is equal to q sub k is equal to y zero

401
00:14:09,680 --> 00:14:13,040
k

402
00:14:10,240 --> 00:14:13,440
over s with high probability the mention

403
00:14:13,040 --> 00:14:17,120
of s

404
00:14:13,440 --> 00:14:19,360
is equal to n minus s minus 1 times o

405
00:14:17,120 --> 00:14:20,240
if a solution x bar to the above system

406
00:14:19,360 --> 00:14:22,800
is found

407
00:14:20,240 --> 00:14:24,959
then the forward signature is x bar plus

408
00:14:22,800 --> 00:14:26,479
x prime

409
00:14:24,959 --> 00:14:28,319
now that we describe the form of the

410
00:14:26,480 --> 00:14:30,000
attack we need to see if there's an

411
00:14:28,320 --> 00:14:32,959
appropriate subfield we can use

412
00:14:30,000 --> 00:14:33,920
for the parameters used by luv depending

413
00:14:32,959 --> 00:14:35,839
on the parameters

414
00:14:33,920 --> 00:14:37,519
there are many subfields of f to the r

415
00:14:35,839 --> 00:14:39,920
that we could select

416
00:14:37,519 --> 00:14:42,160
for instance here is the largest diagram

417
00:14:39,920 --> 00:14:44,639
of after you there these subfields

418
00:14:42,160 --> 00:14:46,000
and after the 80 is one of the choices

419
00:14:44,639 --> 00:14:48,800
with the lu one of the

420
00:14:46,000 --> 00:14:50,320
finite fields that the luv authors used

421
00:14:48,800 --> 00:14:51,920
in the original submission

422
00:14:50,320 --> 00:14:55,120
and we see in this case we're spoiled

423
00:14:51,920 --> 00:14:56,880
for choice which set field we could pick

424
00:14:55,120 --> 00:14:58,880
now the most efficient choice is the

425
00:14:56,880 --> 00:15:00,639
small subfield which the solution is

426
00:14:58,880 --> 00:15:04,240
likely to exist

427
00:15:00,639 --> 00:15:06,800
heuristically p bar acts as a random map

428
00:15:04,240 --> 00:15:07,360
so we can use the forming limit let a

429
00:15:06,800 --> 00:15:10,000
and b

430
00:15:07,360 --> 00:15:10,480
be two finite sets and q which takes a

431
00:15:10,000 --> 00:15:13,360
to b

432
00:15:10,480 --> 00:15:15,199
be a random map for each b and b the

433
00:15:13,360 --> 00:15:16,320
probability that q inverse of b is

434
00:15:15,199 --> 00:15:18,560
non-empty

435
00:15:16,320 --> 00:15:19,839
is approximately one minus e to the

436
00:15:18,560 --> 00:15:24,160
power of

437
00:15:19,839 --> 00:15:26,480
negative size of a divided by size of b

438
00:15:24,160 --> 00:15:27,519
here are the smallest usable choices of

439
00:15:26,480 --> 00:15:29,199
f to the d

440
00:15:27,519 --> 00:15:31,759
for the parameters originally submitted

441
00:15:29,199 --> 00:15:35,120
for the second round and in this table

442
00:15:31,759 --> 00:15:35,440
we see that d is always much smaller

443
00:15:35,120 --> 00:15:37,920
than

444
00:15:35,440 --> 00:15:40,560
r and our probability of success is

445
00:15:37,920 --> 00:15:43,599
almost one in each case

446
00:15:40,560 --> 00:15:45,439
complexity of sda now we are ready to

447
00:15:43,600 --> 00:15:46,720
compute the complexity of sda for the

448
00:15:45,440 --> 00:15:48,160
prose parameters

449
00:15:46,720 --> 00:15:50,320
as the cost of solving the linear

450
00:15:48,160 --> 00:15:52,560
equation small we will estimate only

451
00:15:50,320 --> 00:15:53,279
solving the undetermined final quadratic

452
00:15:52,560 --> 00:15:55,599
system

453
00:15:53,279 --> 00:15:57,360
with n minus s minus one times both

454
00:15:55,600 --> 00:16:00,720
variables in all equations

455
00:15:57,360 --> 00:16:01,920
over f to the d we'll have more

456
00:16:00,720 --> 00:16:03,759
variables and equations

457
00:16:01,920 --> 00:16:05,279
so we'll first use the method of timer

458
00:16:03,759 --> 00:16:06,240
and wolf which can be found in the

459
00:16:05,279 --> 00:16:07,759
following paper

460
00:16:06,240 --> 00:16:09,360
solving undetermined systems of

461
00:16:07,759 --> 00:16:11,040
multivariate quadratic equations

462
00:16:09,360 --> 00:16:13,360
revisited

463
00:16:11,040 --> 00:16:14,880
the method is to use a change of basis

464
00:16:13,360 --> 00:16:16,399
which can be found by solving a

465
00:16:14,880 --> 00:16:18,240
relatively small linear system

466
00:16:16,399 --> 00:16:19,759
to reduce the under the time system to a

467
00:16:18,240 --> 00:16:22,079
determinant system

468
00:16:19,759 --> 00:16:22,800
then the system of o equations and n

469
00:16:22,079 --> 00:16:25,599
minus

470
00:16:22,800 --> 00:16:27,359
s minus 1 times o variables is reduced

471
00:16:25,600 --> 00:16:30,399
to a system of m equations and m

472
00:16:27,360 --> 00:16:33,680
variables where m is equal to o minus

473
00:16:30,399 --> 00:16:37,040
the floor of n minus s minus 1 times o

474
00:16:33,680 --> 00:16:39,279
divided by o now

475
00:16:37,040 --> 00:16:41,360
after applying this method we generally

476
00:16:39,279 --> 00:16:44,560
lose one or two equations and

477
00:16:41,360 --> 00:16:46,560
this is in the following table to solve

478
00:16:44,560 --> 00:16:48,719
these atomic quadratic systems we will

479
00:16:46,560 --> 00:16:50,319
use what is called the hybrid method

480
00:16:48,720 --> 00:16:52,240
we will randomly guess k of the

481
00:16:50,320 --> 00:16:54,160
variables and then attempt to solve the

482
00:16:52,240 --> 00:16:56,480
new over determined systems of m

483
00:16:54,160 --> 00:17:01,040
equations and n minus k variables

484
00:16:56,480 --> 00:17:02,480
with an algorithm like vm in excel or f4

485
00:17:01,040 --> 00:17:03,920
the exact number of variables to be

486
00:17:02,480 --> 00:17:05,679
guessed for depends on the algorithm

487
00:17:03,920 --> 00:17:07,760
used in the parameters

488
00:17:05,679 --> 00:17:09,520
generally the smaller field the more

489
00:17:07,760 --> 00:17:11,599
variables the guessed form

490
00:17:09,520 --> 00:17:14,319
if no solution is found we change our

491
00:17:11,599 --> 00:17:16,399
guess and try it again until we succeed

492
00:17:14,319 --> 00:17:18,000
we will follow yet at all's analysis in

493
00:17:16,400 --> 00:17:18,799
solving these types of over-the-term

494
00:17:18,000 --> 00:17:21,919
systems

495
00:17:18,799 --> 00:17:24,720
and choose to use vitamin excel

496
00:17:21,919 --> 00:17:27,679
in our complexity estimates for details

497
00:17:24,720 --> 00:17:30,799
see operating degrees for xl versus f4

498
00:17:27,679 --> 00:17:32,000
f5 for generic and q with number of

499
00:17:30,799 --> 00:17:35,280
equations linear

500
00:17:32,000 --> 00:17:37,440
in that of nu invalid variables

501
00:17:35,280 --> 00:17:38,320
the complexity of xl largely depends on

502
00:17:37,440 --> 00:17:40,880
the constant d

503
00:17:38,320 --> 00:17:41,520
naught known as the operating degree

504
00:17:40,880 --> 00:17:43,280
generally

505
00:17:41,520 --> 00:17:45,600
when solving a quadratic system of m

506
00:17:43,280 --> 00:17:48,080
equations and variables of fq

507
00:17:45,600 --> 00:17:49,918
d-naught is equal to this expression

508
00:17:48,080 --> 00:17:52,559
where this notation means

509
00:17:49,919 --> 00:17:54,080
the coefficient of t to the d and the

510
00:17:52,559 --> 00:17:56,480
power series representation

511
00:17:54,080 --> 00:17:57,120
of this function however for small

512
00:17:56,480 --> 00:17:59,679
fields

513
00:17:57,120 --> 00:18:00,959
when d naught is greater than q we can

514
00:17:59,679 --> 00:18:04,000
use the field equations

515
00:18:00,960 --> 00:18:08,000
x q is equal to x to reduce this to

516
00:18:04,000 --> 00:18:09,440
e naught is equal to the this expression

517
00:18:08,000 --> 00:18:11,760
take into account the potential k

518
00:18:09,440 --> 00:18:12,799
guesses denoting the operating degree

519
00:18:11,760 --> 00:18:16,559
for each choice by d

520
00:18:12,799 --> 00:18:18,400
naught k and using the vitamin algorithm

521
00:18:16,559 --> 00:18:19,760
we estimate the complexity in solving

522
00:18:18,400 --> 00:18:22,880
the temp systems as

523
00:18:19,760 --> 00:18:26,240
c x l is approximate to

524
00:18:22,880 --> 00:18:28,799
this expression in the following table

525
00:18:26,240 --> 00:18:31,039
we record how cxl compares to the

526
00:18:28,799 --> 00:18:31,918
classical complexity requirements of l u

527
00:18:31,039 --> 00:18:34,160
of e

528
00:18:31,919 --> 00:18:36,559
and we see in each case that cxl is

529
00:18:34,160 --> 00:18:40,559
smaller than the nest requirements

530
00:18:36,559 --> 00:18:41,678
so summarizing lv as was proposed fails

531
00:18:40,559 --> 00:18:44,240
to meet the security

532
00:18:41,679 --> 00:18:45,360
level requirements two schemes which

533
00:18:44,240 --> 00:18:47,440
claim to be

534
00:18:45,360 --> 00:18:49,760
of level two security do not even

535
00:18:47,440 --> 00:18:52,480
satisfy the level one security of to the

536
00:18:49,760 --> 00:18:55,280
power of one forty three

537
00:18:52,480 --> 00:18:58,799
a possible response an immaculate

538
00:18:55,280 --> 00:19:01,440
ability of sda to non-lifted schemes

539
00:18:58,799 --> 00:19:03,679
earlier we earlier we saw that we wanted

540
00:19:01,440 --> 00:19:04,960
to choose the smallest possible subfield

541
00:19:03,679 --> 00:19:06,960
in which it is likely to find a

542
00:19:04,960 --> 00:19:08,640
signature

543
00:19:06,960 --> 00:19:10,799
this depends heavily on the chosen

544
00:19:08,640 --> 00:19:13,200
parameters if we choose r

545
00:19:10,799 --> 00:19:14,000
prime then the only subfield of f to the

546
00:19:13,200 --> 00:19:17,120
r is

547
00:19:14,000 --> 00:19:19,679
f2 which is too small to use for sda

548
00:19:17,120 --> 00:19:20,479
for the sda we present here the offers

549
00:19:19,679 --> 00:19:22,480
of luv

550
00:19:20,480 --> 00:19:25,360
have put four parameters which use a

551
00:19:22,480 --> 00:19:27,440
prime bar

552
00:19:25,360 --> 00:19:29,360
we and bo yin yang from tomkin

553
00:19:27,440 --> 00:19:30,960
university have made progress in this

554
00:19:29,360 --> 00:19:32,399
area of improving sda

555
00:19:30,960 --> 00:19:34,720
to attack fully half of these new

556
00:19:32,400 --> 00:19:36,240
parameters the level 1 security can be

557
00:19:34,720 --> 00:19:38,960
broken in the practical

558
00:19:36,240 --> 00:19:41,120
210 minutes the extension is called

559
00:19:38,960 --> 00:19:42,240
nested subset differential attack whose

560
00:19:41,120 --> 00:19:44,799
e-print was submitted

561
00:19:42,240 --> 00:19:45,520
in early august the paper is called

562
00:19:44,799 --> 00:19:47,918
invested

563
00:19:45,520 --> 00:19:49,840
sub differential attack a practical

564
00:19:47,919 --> 00:19:52,000
direct attack against luv

565
00:19:49,840 --> 00:19:54,320
which forges a signature within 210

566
00:19:52,000 --> 00:19:54,320
minutes

567
00:19:55,200 --> 00:19:59,520
before we conclude let's discuss why sda

568
00:19:57,760 --> 00:20:02,240
does not apply to uav

569
00:19:59,520 --> 00:20:03,918
rainbow or any multivariate scheme which

570
00:20:02,240 --> 00:20:06,960
does not use the lifted structure of

571
00:20:03,919 --> 00:20:08,000
l u of v the reason for this is that in

572
00:20:06,960 --> 00:20:10,080
submarine

573
00:20:08,000 --> 00:20:12,400
and separating out the linear system a

574
00:20:10,080 --> 00:20:14,000
in the quadratic terms it was necessary

575
00:20:12,400 --> 00:20:16,480
for the coefficients of the quadratic

576
00:20:14,000 --> 00:20:18,559
terms to only be in the subfield f 2 to

577
00:20:16,480 --> 00:20:21,520
the b

578
00:20:18,559 --> 00:20:23,120
below is the k component of p bar again

579
00:20:21,520 --> 00:20:25,679
and

580
00:20:23,120 --> 00:20:27,439
we see that if the alphas or random

581
00:20:25,679 --> 00:20:29,120
elements of f to the r

582
00:20:27,440 --> 00:20:31,440
then the quadratic terms with

583
00:20:29,120 --> 00:20:34,479
coefficients for all powers of t

584
00:20:31,440 --> 00:20:37,280
up to s minus one then we'll be solving

585
00:20:34,480 --> 00:20:38,159
o times s quadratic equations over f to

586
00:20:37,280 --> 00:20:41,280
the d

587
00:20:38,159 --> 00:20:44,720
and not gain any efficiency

588
00:20:41,280 --> 00:20:46,639
conclusion we have seen that though luv

589
00:20:44,720 --> 00:20:49,440
is an interesting development of u of e

590
00:20:46,640 --> 00:20:50,080
which reduces the public key size

591
00:20:49,440 --> 00:20:52,080
however

592
00:20:50,080 --> 00:20:53,280
given its newness we have found an

593
00:20:52,080 --> 00:20:55,199
attack which we call

594
00:20:53,280 --> 00:20:56,399
sda which breaks all the parameters

595
00:20:55,200 --> 00:20:57,760
originally submitted for this

596
00:20:56,400 --> 00:20:59,200
competition

597
00:20:57,760 --> 00:21:01,440
sda is based on the elementary

598
00:20:59,200 --> 00:21:03,360
representation of field extensions

599
00:21:01,440 --> 00:21:06,159
and thus has potential for more complex

600
00:21:03,360 --> 00:21:07,918
development as sca relies only on the

601
00:21:06,159 --> 00:21:09,919
lifted structure of luav

602
00:21:07,919 --> 00:21:10,960
it will need to be considered if any

603
00:21:09,919 --> 00:21:14,720
future schemes

604
00:21:10,960 --> 00:21:16,720
wants to use the lifted structure

605
00:21:14,720 --> 00:21:18,240
thanks for watching the video we'd like

606
00:21:16,720 --> 00:21:20,080
to show off

607
00:21:18,240 --> 00:21:21,440
state our appreciation for the support

608
00:21:20,080 --> 00:21:27,760
by the taft fund

609
00:21:21,440 --> 00:21:27,760
nist in the nsa have a good

