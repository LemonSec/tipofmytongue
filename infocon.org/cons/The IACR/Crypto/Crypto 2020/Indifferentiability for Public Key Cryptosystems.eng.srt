1
00:00:00,640 --> 00:00:03,439
hi this is song from ruggers university

2
00:00:03,120 --> 00:00:06,160
and

3
00:00:03,439 --> 00:00:07,359
next i will give the talk about my

4
00:00:06,160 --> 00:00:09,760
recent work which

5
00:00:07,359 --> 00:00:10,639
is individuality for public key crypto

6
00:00:09,760 --> 00:00:12,400
systems

7
00:00:10,639 --> 00:00:15,440
and this is the joint work with max

8
00:00:12,400 --> 00:00:17,119
andre and let's start

9
00:00:15,440 --> 00:00:19,359
in the real world when we design a

10
00:00:17,119 --> 00:00:20,640
crypto primitive it would be very hard

11
00:00:19,359 --> 00:00:23,039
to predict how would it

12
00:00:20,640 --> 00:00:25,039
how it would be used for instance for

13
00:00:23,039 --> 00:00:28,480
instance here we design a

14
00:00:25,039 --> 00:00:29,279
pke for some system maybe the software

15
00:00:28,480 --> 00:00:32,238
developer

16
00:00:29,279 --> 00:00:33,680
just wanted to be cca and for some for

17
00:00:32,238 --> 00:00:36,640
some other systems

18
00:00:33,680 --> 00:00:37,519
it might use the wanted to be leakage

19
00:00:36,640 --> 00:00:40,800
resilient

20
00:00:37,520 --> 00:00:43,120
or the related care attack secure and so

21
00:00:40,800 --> 00:00:43,120
forth

22
00:00:43,200 --> 00:00:46,320
and the fact is that the games that

23
00:00:45,039 --> 00:00:49,680
achieves different

24
00:00:46,320 --> 00:00:52,719
security models are quite different

25
00:00:49,680 --> 00:00:54,320
and even worse the software developer

26
00:00:52,719 --> 00:00:55,600
even doesn't know what kind of security

27
00:00:54,320 --> 00:00:58,800
model it wants to achieve

28
00:00:55,600 --> 00:01:01,920
and maybe they just plug our primitives

29
00:00:58,800 --> 00:01:03,839
into their systems and in fact this is

30
00:01:01,920 --> 00:01:06,000
very dangerous for security

31
00:01:03,840 --> 00:01:08,159
so another question is the following how

32
00:01:06,000 --> 00:01:10,560
this can we design a magic scheme

33
00:01:08,159 --> 00:01:12,000
that capture all the security models to

34
00:01:10,560 --> 00:01:14,560
roll them all

35
00:01:12,000 --> 00:01:16,560
and to answer this question the typical

36
00:01:14,560 --> 00:01:18,720
solution is that we can step out

37
00:01:16,560 --> 00:01:20,080
the idealized model and let's have a

38
00:01:18,720 --> 00:01:22,880
recap of the recent

39
00:01:20,080 --> 00:01:24,560
work for that function the idealized

40
00:01:22,880 --> 00:01:26,399
model is random oracle and for

41
00:01:24,560 --> 00:01:28,400
blockchain for the idolized model is a

42
00:01:26,400 --> 00:01:28,960
random key documentation and for groups

43
00:01:28,400 --> 00:01:32,159
of course

44
00:01:28,960 --> 00:01:35,199
it is generic generic group model

45
00:01:32,159 --> 00:01:38,079
and by and there is a risk

46
00:01:35,200 --> 00:01:38,640
there is a recent interesting paper by

47
00:01:38,079 --> 00:01:41,360
proposal

48
00:01:38,640 --> 00:01:42,799
for james they formalized the ideal as

49
00:01:41,360 --> 00:01:44,799
the ideal

50
00:01:42,799 --> 00:01:46,000
secret encryption as the random kid

51
00:01:44,799 --> 00:01:47,680
injection and

52
00:01:46,000 --> 00:01:50,000
the question is that what's the

53
00:01:47,680 --> 00:01:52,799
idealized model for public encryption

54
00:01:50,000 --> 00:01:53,360
or any primitives in public exciting

55
00:01:52,799 --> 00:01:55,920
this

56
00:01:53,360 --> 00:01:56,640
is quite unknown yet and this is what

57
00:01:55,920 --> 00:02:00,000
our work

58
00:01:56,640 --> 00:02:01,840
going to do in our work we're

59
00:02:00,000 --> 00:02:03,600
going to cast we can say about three

60
00:02:01,840 --> 00:02:05,840
primitives in public sighting

61
00:02:03,600 --> 00:02:07,039
which are neck non-integrity okay

62
00:02:05,840 --> 00:02:09,679
exchange

63
00:02:07,040 --> 00:02:12,480
public key and the digital signature and

64
00:02:09,679 --> 00:02:12,800
we propose three ideal notions for them

65
00:02:12,480 --> 00:02:14,959
which

66
00:02:12,800 --> 00:02:16,239
are ideal neck ideal pke and ideal

67
00:02:14,959 --> 00:02:19,280
signature

68
00:02:16,239 --> 00:02:20,959
and due to time limits we would we would

69
00:02:19,280 --> 00:02:24,560
only focus on the first one

70
00:02:20,959 --> 00:02:27,280
and i do like what is that unique

71
00:02:24,560 --> 00:02:29,680
as we discussed about we know that it

72
00:02:27,280 --> 00:02:32,080
would be the idealized model for nike

73
00:02:29,680 --> 00:02:33,840
and how can we integrate it properly

74
00:02:32,080 --> 00:02:38,160
let's firstly simplify

75
00:02:33,840 --> 00:02:40,800
the nike as follows here it only has

76
00:02:38,160 --> 00:02:41,680
consists of two algorithms okay gene and

77
00:02:40,800 --> 00:02:43,760
the shared key

78
00:02:41,680 --> 00:02:44,959
okay then takes the secret key as input

79
00:02:43,760 --> 00:02:47,120
and the output

80
00:02:44,959 --> 00:02:48,000
the public key and the shared key takes

81
00:02:47,120 --> 00:02:49,920
the

82
00:02:48,000 --> 00:02:51,519
takes the public key and the check the

83
00:02:49,920 --> 00:02:52,720
secretary input and output of

84
00:02:51,519 --> 00:02:55,120
corresponding shared key

85
00:02:52,720 --> 00:02:57,680
and the correctness requires that the

86
00:02:55,120 --> 00:02:59,920
shed share the k of pk1 as k2

87
00:02:57,680 --> 00:03:02,080
is and then you go to the shared k of

88
00:02:59,920 --> 00:03:04,720
pk2 and sk1

89
00:03:02,080 --> 00:03:05,519
and next let's apply the proposal and

90
00:03:04,720 --> 00:03:08,800
the fashion

91
00:03:05,519 --> 00:03:12,159
idea here we just

92
00:03:08,800 --> 00:03:14,239
we just formalized the id as a

93
00:03:12,159 --> 00:03:15,280
key gene as a random injection and the

94
00:03:14,239 --> 00:03:18,319
shared key here

95
00:03:15,280 --> 00:03:21,840
is a random function does it work

96
00:03:18,319 --> 00:03:24,079
unfortunately no because recall that

97
00:03:21,840 --> 00:03:25,680
for for next there is additional

98
00:03:24,080 --> 00:03:29,440
correctness requirement

99
00:03:25,680 --> 00:03:32,239
for for for this so we have to

100
00:03:29,440 --> 00:03:32,720
we have to make sure this sentence works

101
00:03:32,239 --> 00:03:35,760
and

102
00:03:32,720 --> 00:03:39,120
to and to do that we need we need

103
00:03:35,760 --> 00:03:40,319
defines as follows i don't like here is

104
00:03:39,120 --> 00:03:43,360
a random tuple

105
00:03:40,319 --> 00:03:46,399
function subject to x y z where

106
00:03:43,360 --> 00:03:49,599
nkg is injection such that maps x

107
00:03:46,400 --> 00:03:53,280
to y and as k the function that maps x

108
00:03:49,599 --> 00:03:56,640
times y to z and for the correctness

109
00:03:53,280 --> 00:04:00,640
we require that for any x y x 2 in x

110
00:03:56,640 --> 00:04:02,640
this equation holds

111
00:04:00,640 --> 00:04:04,319
okay here this is actually the

112
00:04:02,640 --> 00:04:06,879
definition of the idealized

113
00:04:04,319 --> 00:04:09,679
ideal definition of the ideal neck and

114
00:04:06,879 --> 00:04:12,959
next we go to the construction

115
00:04:09,680 --> 00:04:14,959
we see that this is the ideal neck is

116
00:04:12,959 --> 00:04:16,079
idealized model and of course it's the

117
00:04:14,959 --> 00:04:18,238
dynamic exist

118
00:04:16,079 --> 00:04:19,918
in the real world so when we talk about

119
00:04:18,238 --> 00:04:23,359
the construction we talk about

120
00:04:19,918 --> 00:04:24,400
we need constructed in another idealized

121
00:04:23,360 --> 00:04:27,040
model say

122
00:04:24,400 --> 00:04:28,880
random oracle model and to do that we

123
00:04:27,040 --> 00:04:30,000
have to apply the individuality

124
00:04:28,880 --> 00:04:32,960
framework which

125
00:04:30,000 --> 00:04:36,080
is proposed which was proposed by maro

126
00:04:32,960 --> 00:04:39,198
reynolds and hollister in 2004

127
00:04:36,080 --> 00:04:40,960
and in their indeed in the individual in

128
00:04:39,199 --> 00:04:42,320
the individuality framework they say

129
00:04:40,960 --> 00:04:46,880
that the construction

130
00:04:42,320 --> 00:04:50,400
is as good as ideologue okay g and s k

131
00:04:46,880 --> 00:04:51,040
and modularly individuality involves two

132
00:04:50,400 --> 00:04:53,359
words

133
00:04:51,040 --> 00:04:55,040
the real world and the ideal world in

134
00:04:53,360 --> 00:04:57,199
the real world it consists about

135
00:04:55,040 --> 00:04:59,040
the construction and the random oracle

136
00:04:57,199 --> 00:05:00,960
and where the

137
00:04:59,040 --> 00:05:02,240
construction has access to the random

138
00:05:00,960 --> 00:05:04,560
oracle and india

139
00:05:02,240 --> 00:05:05,759
and in the ideal world it consists of

140
00:05:04,560 --> 00:05:07,520
the ideal nike

141
00:05:05,759 --> 00:05:09,120
and the simulator where the simulator

142
00:05:07,520 --> 00:05:12,560
has dissed to rkg and

143
00:05:09,120 --> 00:05:15,280
sk and for any adversary that has

144
00:05:12,560 --> 00:05:17,120
the adversary has access to both to all

145
00:05:15,280 --> 00:05:20,159
of these

146
00:05:17,120 --> 00:05:20,960
and the security of interfaciability is

147
00:05:20,160 --> 00:05:24,720
to

148
00:05:20,960 --> 00:05:27,599
is to show that these two words are

149
00:05:24,720 --> 00:05:28,639
close to each other and one thing i want

150
00:05:27,600 --> 00:05:31,120
to emphasize

151
00:05:28,639 --> 00:05:33,600
um i want to emphasize that in the

152
00:05:31,120 --> 00:05:35,280
framework of indivisibility

153
00:05:33,600 --> 00:05:37,600
everything is under controlled by the

154
00:05:35,280 --> 00:05:40,080
other three which means the secret key

155
00:05:37,600 --> 00:05:42,160
the randomness the nonce everything is

156
00:05:40,080 --> 00:05:44,960
controlled by the adultery and

157
00:05:42,160 --> 00:05:46,720
they can be related they can be only

158
00:05:44,960 --> 00:05:48,719
they can be chosen in any related

159
00:05:46,720 --> 00:05:50,880
version

160
00:05:48,720 --> 00:05:52,160
the next question is why we choose

161
00:05:50,880 --> 00:05:55,120
invisibility

162
00:05:52,160 --> 00:05:55,840
according according to zarya's theorem

163
00:05:55,120 --> 00:05:58,400
we know that

164
00:05:55,840 --> 00:06:00,880
if our construction is indivisible from

165
00:05:58,400 --> 00:06:01,359
ideologue the construction is secure in

166
00:06:00,880 --> 00:06:03,680
many

167
00:06:01,360 --> 00:06:06,080
adversarial environments in rhetorical

168
00:06:03,680 --> 00:06:08,400
model and those environments include

169
00:06:06,080 --> 00:06:09,120
the shared key it's unpredicated shared

170
00:06:08,400 --> 00:06:12,719
key against

171
00:06:09,120 --> 00:06:15,280
active attacker liquid resilient kdm rka

172
00:06:12,720 --> 00:06:15,840
and even more combined secure which

173
00:06:15,280 --> 00:06:17,599
means that

174
00:06:15,840 --> 00:06:19,359
we are scheme can be both legal

175
00:06:17,600 --> 00:06:22,479
resilience and ktm

176
00:06:19,360 --> 00:06:25,440
and it also covers some unknown yet

177
00:06:22,479 --> 00:06:26,400
security as well as the security game

178
00:06:25,440 --> 00:06:28,960
can be

179
00:06:26,400 --> 00:06:30,719
represented by a single state game or

180
00:06:28,960 --> 00:06:34,318
the individuality

181
00:06:30,720 --> 00:06:34,720
framework cover that okay next question

182
00:06:34,319 --> 00:06:37,600
is

183
00:06:34,720 --> 00:06:39,680
what's the hardness of of this work and

184
00:06:37,600 --> 00:06:42,400
what's the barrier

185
00:06:39,680 --> 00:06:42,400
we know that

186
00:06:42,800 --> 00:06:46,080
the thing we're talking about is in the

187
00:06:45,039 --> 00:06:48,639
public sighting

188
00:06:46,080 --> 00:06:49,599
and due to the famous separation

189
00:06:48,639 --> 00:06:52,800
resulted by

190
00:06:49,599 --> 00:06:54,560
in fact it is azo and rudig we know that

191
00:06:52,800 --> 00:06:55,840
random oracle itself can never be

192
00:06:54,560 --> 00:06:59,039
sufficient and

193
00:06:55,840 --> 00:07:01,679
we have to add a new nutrition

194
00:06:59,039 --> 00:07:02,639
and here we add a standard model nike as

195
00:07:01,680 --> 00:07:05,759
the additional

196
00:07:02,639 --> 00:07:08,160
new additional nutrition and we try to

197
00:07:05,759 --> 00:07:10,240
and we try to combine these two together

198
00:07:08,160 --> 00:07:13,039
however the barrier is the following

199
00:07:10,240 --> 00:07:13,919
ideal night has no structures well the

200
00:07:13,039 --> 00:07:17,840
standard model

201
00:07:13,919 --> 00:07:19,680
like always not always

202
00:07:17,840 --> 00:07:21,280
often has structures that when it

203
00:07:19,680 --> 00:07:25,680
applies like groups

204
00:07:21,280 --> 00:07:28,880
or adobe they have some structures

205
00:07:25,680 --> 00:07:31,280
and and those are the bar and

206
00:07:28,880 --> 00:07:32,319
we and and that's the difference and

207
00:07:31,280 --> 00:07:34,719
that's the barrier

208
00:07:32,319 --> 00:07:35,599
so we cut we need to combine these two

209
00:07:34,720 --> 00:07:37,919
things together

210
00:07:35,599 --> 00:07:38,639
to make sure that our individual neck

211
00:07:37,919 --> 00:07:40,960
has

212
00:07:38,639 --> 00:07:43,199
has no structures from the outer layer

213
00:07:40,960 --> 00:07:44,638
but in the inner layer they still can

214
00:07:43,199 --> 00:07:48,720
use the struct things

215
00:07:44,639 --> 00:07:50,800
to run the public exciting computation

216
00:07:48,720 --> 00:07:52,720
and that's that's the main barrier and

217
00:07:50,800 --> 00:07:54,160
the strategy we combine these two things

218
00:07:52,720 --> 00:07:57,120
together

219
00:07:54,160 --> 00:07:59,120
and here's the summary of our work we

220
00:07:57,120 --> 00:08:00,080
first we firstly bring in the

221
00:07:59,120 --> 00:08:02,080
invisibility

222
00:08:00,080 --> 00:08:03,359
to the public sighting and propose the

223
00:08:02,080 --> 00:08:06,639
three notions

224
00:08:03,360 --> 00:08:08,639
uh uh which are ideal nike ideal pke and

225
00:08:06,639 --> 00:08:11,680
the ideal digital signature

226
00:08:08,639 --> 00:08:13,120
and then we built an individual

227
00:08:11,680 --> 00:08:14,879
nike from random oracle plus

228
00:08:13,120 --> 00:08:16,720
double-stranded cdh assumption

229
00:08:14,879 --> 00:08:18,800
here double strong series summation is

230
00:08:16,720 --> 00:08:21,039
the summation is the cdh assumption

231
00:08:18,800 --> 00:08:24,639
associated with the ddh

232
00:08:21,039 --> 00:08:25,120
oracle and then we built an individual

233
00:08:24,639 --> 00:08:28,160
nike

234
00:08:25,120 --> 00:08:31,280
pke from idyll nike plus land molecules

235
00:08:28,160 --> 00:08:33,519
and apparently we built a indifferent

236
00:08:31,280 --> 00:08:35,679
defendable nike from red more code plus

237
00:08:33,519 --> 00:08:37,679
by linear detail assumption

238
00:08:35,679 --> 00:08:41,120
and again due to time limits we would

239
00:08:37,679 --> 00:08:43,519
only focus on the like results

240
00:08:41,120 --> 00:08:44,399
okay here's the outline of this talk

241
00:08:43,519 --> 00:08:47,040
firstly we gave

242
00:08:44,399 --> 00:08:48,640
the night construction and then gave the

243
00:08:47,040 --> 00:08:52,240
intuition of the simulator and

244
00:08:48,640 --> 00:08:52,240
the conclusion we conclude

245
00:08:52,320 --> 00:08:57,760
for the construction now the

246
00:08:55,760 --> 00:08:59,040
nike considered consists of two

247
00:08:57,760 --> 00:09:01,600
algorithms caging

248
00:08:59,040 --> 00:09:02,319
and shed key and the first layer let's

249
00:09:01,600 --> 00:09:05,519
make the k

250
00:09:02,320 --> 00:09:05,519
gene differentiable

251
00:09:07,120 --> 00:09:11,200
again the strategy is that we try to

252
00:09:09,120 --> 00:09:12,240
combine random oracle and the standard

253
00:09:11,200 --> 00:09:16,000
model into

254
00:09:12,240 --> 00:09:18,959
indivisible knight and

255
00:09:16,000 --> 00:09:20,560
we denote this lowercase kg shell k2

256
00:09:18,959 --> 00:09:22,399
with a standard model neck and

257
00:09:20,560 --> 00:09:23,680
therefore the upper case of the upper

258
00:09:22,399 --> 00:09:26,880
case

259
00:09:23,680 --> 00:09:28,560
we denoted the ideal case we denoted the

260
00:09:26,880 --> 00:09:32,399
ideal case

261
00:09:28,560 --> 00:09:34,239
and to and and recall that

262
00:09:32,399 --> 00:09:35,519
the main barrier is that the caging has

263
00:09:34,240 --> 00:09:38,320
no structure has

264
00:09:35,519 --> 00:09:39,200
structures and the big the nkg has no

265
00:09:38,320 --> 00:09:41,519
structures

266
00:09:39,200 --> 00:09:42,800
how can we do that the one trivial

267
00:09:41,519 --> 00:09:46,640
attempt is we just

268
00:09:42,800 --> 00:09:50,079
hash it we just we just hash it

269
00:09:46,640 --> 00:09:52,240
just like this and does this work let's

270
00:09:50,080 --> 00:09:54,399
see

271
00:09:52,240 --> 00:09:55,920
here's the attack is attacker which

272
00:09:54,399 --> 00:09:59,760
choose it's uh

273
00:09:55,920 --> 00:10:02,959
which choose the skis sk store itself

274
00:09:59,760 --> 00:10:06,959
and it's formal and it

275
00:10:02,959 --> 00:10:07,439
generates the ktsk it generates the ktsk

276
00:10:06,959 --> 00:10:10,160
store

277
00:10:07,440 --> 00:10:11,360
and asks the simulator what's the hash

278
00:10:10,160 --> 00:10:13,760
value of this

279
00:10:11,360 --> 00:10:14,640
kdi sk store and we see that the

280
00:10:13,760 --> 00:10:18,079
simulator

281
00:10:14,640 --> 00:10:18,880
as it is at this stage it knows nothing

282
00:10:18,079 --> 00:10:22,160
of this about

283
00:10:18,880 --> 00:10:25,360
this sk star it's only no kitten sk star

284
00:10:22,160 --> 00:10:28,000
and by the security of the neck

285
00:10:25,360 --> 00:10:28,959
we know that it's given the publication

286
00:10:28,000 --> 00:10:31,440
knows nothing

287
00:10:28,959 --> 00:10:33,279
about the sk store so the simulator

288
00:10:31,440 --> 00:10:35,440
would fail

289
00:10:33,279 --> 00:10:37,120
and the reason why it files is that the

290
00:10:35,440 --> 00:10:40,480
simulator knows nothing about

291
00:10:37,120 --> 00:10:43,760
the sk star and how can we fix it

292
00:10:40,480 --> 00:10:44,160
we add a new hash function in the inner

293
00:10:43,760 --> 00:10:46,480
case

294
00:10:44,160 --> 00:10:47,519
we harsh the sk first and the way this

295
00:10:46,480 --> 00:10:50,240
helps

296
00:10:47,519 --> 00:10:51,200
it means let's see when that also wants

297
00:10:50,240 --> 00:10:54,079
to do this again

298
00:10:51,200 --> 00:10:55,200
it enforce the adversary to make this

299
00:10:54,079 --> 00:10:59,680
query before

300
00:10:55,200 --> 00:11:01,839
the h1 query and and

301
00:10:59,680 --> 00:11:03,599
once and once the adversary makes this

302
00:11:01,839 --> 00:11:06,240
query to the simulator then the

303
00:11:03,600 --> 00:11:09,200
simulator has the sk start information

304
00:11:06,240 --> 00:11:09,839
and would answer this query with nktsk

305
00:11:09,200 --> 00:11:13,200
star

306
00:11:09,839 --> 00:11:16,800
which is a proper answer

307
00:11:13,200 --> 00:11:20,079
does this work seems to seems to but

308
00:11:16,800 --> 00:11:22,479
the thing is that once we harsh this k

309
00:11:20,079 --> 00:11:24,160
gene then we destroy the groups then we

310
00:11:22,480 --> 00:11:25,120
destroy the groups in the group

311
00:11:24,160 --> 00:11:28,640
structure

312
00:11:25,120 --> 00:11:30,959
and once we once we use the h1

313
00:11:28,640 --> 00:11:33,120
then we can never use the key gene value

314
00:11:30,959 --> 00:11:36,079
anymore

315
00:11:33,120 --> 00:11:37,839
and again we're considered about the

316
00:11:36,079 --> 00:11:40,160
primitives in the public setting

317
00:11:37,839 --> 00:11:40,880
and the keying is the thing with how to

318
00:11:40,160 --> 00:11:43,199
use

319
00:11:40,880 --> 00:11:44,079
and to do that we are going to replace

320
00:11:43,200 --> 00:11:47,200
this h1

321
00:11:44,079 --> 00:11:47,199
with a permutation

322
00:11:47,839 --> 00:11:51,760
and in this formulation so from the

323
00:11:49,680 --> 00:11:53,359
outer layer it simply it still looks

324
00:11:51,760 --> 00:11:56,639
like a random strings

325
00:11:53,360 --> 00:11:59,440
but there is a inverse studies

326
00:11:56,639 --> 00:11:59,920
in words that we can have that help us

327
00:11:59,440 --> 00:12:03,120
to

328
00:11:59,920 --> 00:12:03,120
get the kicking value

329
00:12:04,320 --> 00:12:08,320
okay let's see and and let's see how

330
00:12:07,760 --> 00:12:10,959
could we

331
00:12:08,320 --> 00:12:13,440
next let's see how let's how could we

332
00:12:10,959 --> 00:12:16,560
make the shared key

333
00:12:13,440 --> 00:12:19,279
indivisible and the construction

334
00:12:16,560 --> 00:12:20,079
okay it's uh again again the

335
00:12:19,279 --> 00:12:22,160
construction

336
00:12:20,079 --> 00:12:23,519
should be the shed kick the shared key

337
00:12:22,160 --> 00:12:26,480
also has some structures

338
00:12:23,519 --> 00:12:27,839
and to get rid of the structures we also

339
00:12:26,480 --> 00:12:31,279
hash it

340
00:12:27,839 --> 00:12:35,040
and let's see if we do that

341
00:12:31,279 --> 00:12:35,040
the working of the potential attack

342
00:12:35,600 --> 00:12:42,720
we see that h0 sk1 is is actually the

343
00:12:39,920 --> 00:12:44,079
lowercase sk1 and this is representing

344
00:12:42,720 --> 00:12:45,839
the lowercase of pk2

345
00:12:44,079 --> 00:12:48,239
and we know that in the framework of

346
00:12:45,839 --> 00:12:50,720
inversibility the adversary can choose

347
00:12:48,240 --> 00:12:53,040
everything and control everything so

348
00:12:50,720 --> 00:12:56,240
that also can choose the sk1 itself and

349
00:12:53,040 --> 00:12:58,639
choose another up case ice k2 and

350
00:12:56,240 --> 00:12:59,519
force the following under and form the

351
00:12:58,639 --> 00:13:02,079
following query

352
00:12:59,519 --> 00:13:03,760
the attack this one we see is

353
00:13:02,079 --> 00:13:06,560
represented to the pk2

354
00:13:03,760 --> 00:13:07,519
and once that roster has pk2 and sk1

355
00:13:06,560 --> 00:13:09,760
they need to kind of

356
00:13:07,519 --> 00:13:13,040
calculate this one itself and make this

357
00:13:09,760 --> 00:13:15,760
query i love this query

358
00:13:13,040 --> 00:13:16,160
the attacker makes this query i mean the

359
00:13:15,760 --> 00:13:19,519
p

360
00:13:16,160 --> 00:13:22,560
keygen sk1 and which responds to the pk1

361
00:13:19,519 --> 00:13:24,480
and the test whether the unsolved shk is

362
00:13:22,560 --> 00:13:28,160
equal to nsk pk1 and

363
00:13:24,480 --> 00:13:30,880
sk2 and we see that in the real world

364
00:13:28,160 --> 00:13:31,839
this quality always pass always

365
00:13:30,880 --> 00:13:33,600
identical

366
00:13:31,839 --> 00:13:34,880
well in the ideal world we see that the

367
00:13:33,600 --> 00:13:38,320
simulator

368
00:13:34,880 --> 00:13:40,639
in this step is knows nothing about us

369
00:13:38,320 --> 00:13:41,519
knows nothing about of all of these

370
00:13:40,639 --> 00:13:45,600
things

371
00:13:41,519 --> 00:13:48,240
and and and by this

372
00:13:45,600 --> 00:13:48,800
and we see that the answer of this query

373
00:13:48,240 --> 00:13:51,600
should be

374
00:13:48,800 --> 00:13:52,160
this value and there are two ways to get

375
00:13:51,600 --> 00:13:54,399
that

376
00:13:52,160 --> 00:13:55,600
one is known the sk1 and another is

377
00:13:54,399 --> 00:13:57,920
known as k2

378
00:13:55,600 --> 00:13:59,920
of course it cannot know it cannot know

379
00:13:57,920 --> 00:14:01,439
sk2 because it was chosen by the other

380
00:13:59,920 --> 00:14:03,920
three

381
00:14:01,440 --> 00:14:04,480
so the only the only possible thing is

382
00:14:03,920 --> 00:14:07,599
that

383
00:14:04,480 --> 00:14:10,240
the adversary knows sk1 however

384
00:14:07,600 --> 00:14:12,079
if we do that there is no there is no

385
00:14:10,240 --> 00:14:16,079
chance for the adultery to know

386
00:14:12,079 --> 00:14:18,880
the upper sk1 at all and to do that

387
00:14:16,079 --> 00:14:20,160
we would to do and to prevent it we will

388
00:14:18,880 --> 00:14:23,920
enforce the adversary

389
00:14:20,160 --> 00:14:26,399
to hand in this pk1 before the hash

390
00:14:23,920 --> 00:14:27,599
what we what should we do we add pk1

391
00:14:26,399 --> 00:14:31,279
into that hash

392
00:14:27,600 --> 00:14:34,079
so this is our solution we add pk1 pk2

393
00:14:31,279 --> 00:14:34,560
also associated with this one in this

394
00:14:34,079 --> 00:14:37,680
hash

395
00:14:34,560 --> 00:14:40,560
and which means that the adversary has

396
00:14:37,680 --> 00:14:40,959
to switch the order of these two queries

397
00:14:40,560 --> 00:14:43,518
and

398
00:14:40,959 --> 00:14:44,079
once the adversary makes these queries

399
00:14:43,519 --> 00:14:46,560
to the

400
00:14:44,079 --> 00:14:47,680
simulator then the simulator would have

401
00:14:46,560 --> 00:14:50,000
some

402
00:14:47,680 --> 00:14:52,479
would random trick which we will explain

403
00:14:50,000 --> 00:14:56,160
later that how it would

404
00:14:52,480 --> 00:14:58,639
uh how it would know sk1 here

405
00:14:56,160 --> 00:14:59,360
okay here is our construction and next

406
00:14:58,639 --> 00:15:03,279
let's see

407
00:14:59,360 --> 00:15:05,600
our simulator let's firstly see the goal

408
00:15:03,279 --> 00:15:08,720
of the simulator is to simulate h0

409
00:15:05,600 --> 00:15:11,040
p p inverse and h1 properly and what

410
00:15:08,720 --> 00:15:13,839
how can we understand this properly

411
00:15:11,040 --> 00:15:16,160
properly

412
00:15:13,839 --> 00:15:16,959
the response of h0 and h1 should be

413
00:15:16,160 --> 00:15:19,199
random string

414
00:15:16,959 --> 00:15:20,399
and the response of p and p inverse must

415
00:15:19,199 --> 00:15:22,719
be random permutation

416
00:15:20,399 --> 00:15:24,560
and moreover it's these two equations

417
00:15:22,720 --> 00:15:27,839
must be held because this

418
00:15:24,560 --> 00:15:30,638
this equation holds always in the id

419
00:15:27,839 --> 00:15:31,920
in the real world and to do that the

420
00:15:30,639 --> 00:15:34,639
simulator must be

421
00:15:31,920 --> 00:15:35,680
stateful and in fact here it would give

422
00:15:34,639 --> 00:15:39,120
us four tables

423
00:15:35,680 --> 00:15:42,239
h0p and pinwords and h1 tables

424
00:15:39,120 --> 00:15:45,360
with this camera form and

425
00:15:42,240 --> 00:15:48,320
let's see how good is how could the

426
00:15:45,360 --> 00:15:50,000
how could the simulator answer this

427
00:15:48,320 --> 00:15:55,279
answer these

428
00:15:50,000 --> 00:15:57,600
queries by using this for tables

429
00:15:55,279 --> 00:15:58,959
for the h1 query we see that the input

430
00:15:57,600 --> 00:16:02,800
is the upcase

431
00:15:58,959 --> 00:16:04,079
sk and firstly it would check whether

432
00:16:02,800 --> 00:16:07,359
it's in the hcl table

433
00:16:04,079 --> 00:16:07,758
if then we are happy and next we will

434
00:16:07,360 --> 00:16:10,320
take

435
00:16:07,759 --> 00:16:10,800
the p inverse table and check whether

436
00:16:10,320 --> 00:16:14,399
the

437
00:16:10,800 --> 00:16:16,719
as nkgs k is in the p inverse

438
00:16:14,399 --> 00:16:18,000
and if n then would pretend we would

439
00:16:16,720 --> 00:16:20,560
answer this as k

440
00:16:18,000 --> 00:16:21,360
as corresponding as uh corresponding

441
00:16:20,560 --> 00:16:24,560
result

442
00:16:21,360 --> 00:16:26,800
when we do that because the third

443
00:16:24,560 --> 00:16:28,000
record that is the third equation the

444
00:16:26,800 --> 00:16:30,479
third equation we need

445
00:16:28,000 --> 00:16:31,199
we need to present is that nkg both

446
00:16:30,480 --> 00:16:34,399
involves

447
00:16:31,199 --> 00:16:36,000
p and h zero and the way need but we

448
00:16:34,399 --> 00:16:39,360
need to keep the equation

449
00:16:36,000 --> 00:16:42,320
consistent always and that's the reason

450
00:16:39,360 --> 00:16:43,920
for the hq hq rate would also it would

451
00:16:42,320 --> 00:16:46,800
check both h0 and

452
00:16:43,920 --> 00:16:47,599
p and appear in words and if we cannot

453
00:16:46,800 --> 00:16:49,920
find anything

454
00:16:47,600 --> 00:16:52,560
in these two tables the randomly center

455
00:16:49,920 --> 00:16:55,920
sk and insert this part into hcr table

456
00:16:52,560 --> 00:16:59,119
and answer as k as as

457
00:16:55,920 --> 00:17:01,439
as the answer and

458
00:16:59,120 --> 00:17:02,959
now for the p inverse table which takes

459
00:17:01,440 --> 00:17:06,640
the

460
00:17:02,959 --> 00:17:08,958
uppercase pk as input firstly it would

461
00:17:06,640 --> 00:17:09,919
check p and p was stable if in then we

462
00:17:08,959 --> 00:17:12,480
are happy

463
00:17:09,919 --> 00:17:14,079
and next uh same again it would also

464
00:17:12,480 --> 00:17:15,919
check the h zero table

465
00:17:14,079 --> 00:17:17,520
and check whether this one is in the it

466
00:17:15,919 --> 00:17:20,640
zero table if e of

467
00:17:17,520 --> 00:17:22,400
we're also happy and next if nothing

468
00:17:20,640 --> 00:17:25,360
found in these three tables

469
00:17:22,400 --> 00:17:26,000
we would we would sample a random secret

470
00:17:25,359 --> 00:17:29,678
key

471
00:17:26,000 --> 00:17:30,000
and response the value as the kitchen as

472
00:17:29,679 --> 00:17:34,000
k

473
00:17:30,000 --> 00:17:37,200
as the response we know here is the gap

474
00:17:34,000 --> 00:17:37,760
in the real world the answer is a random

475
00:17:37,200 --> 00:17:39,760
string

476
00:17:37,760 --> 00:17:40,799
while the ideal word this is a random

477
00:17:39,760 --> 00:17:43,120
public key

478
00:17:40,799 --> 00:17:44,960
and this is the gap and to make sure

479
00:17:43,120 --> 00:17:46,879
these these two distributions

480
00:17:44,960 --> 00:17:48,160
are closed i mean our computational

481
00:17:46,880 --> 00:17:51,679
close we need

482
00:17:48,160 --> 00:17:52,320
we need to assume uh uh security

483
00:17:51,679 --> 00:17:55,120
calculate

484
00:17:52,320 --> 00:17:56,000
security requirement which is certain

485
00:17:55,120 --> 00:17:58,879
random public key

486
00:17:56,000 --> 00:18:00,559
which means this part is soon random so

487
00:17:58,880 --> 00:18:03,120
it's clear it's combinational close to

488
00:18:00,559 --> 00:18:06,160
the random string

489
00:18:03,120 --> 00:18:07,678
that's the that's the uh hello idea of

490
00:18:06,160 --> 00:18:10,400
the p inverse query

491
00:18:07,679 --> 00:18:12,480
and next let's see the pquery and in

492
00:18:10,400 --> 00:18:15,039
this queries we will show

493
00:18:12,480 --> 00:18:16,559
how the uh how the adversary how the

494
00:18:15,039 --> 00:18:18,480
simulator

495
00:18:16,559 --> 00:18:21,280
how the simulator tried to prevent the

496
00:18:18,480 --> 00:18:23,679
attack we illustrate about

497
00:18:21,280 --> 00:18:25,520
firstly again it would check the p p

498
00:18:23,679 --> 00:18:28,640
inverse and there's eight zero table if

499
00:18:25,520 --> 00:18:30,080
instantly are very good and the next if

500
00:18:28,640 --> 00:18:33,520
nothing found in these

501
00:18:30,080 --> 00:18:36,320
three tables it would some pose as k

502
00:18:33,520 --> 00:18:36,639
and insert this thing into the p table

503
00:18:36,320 --> 00:18:40,159
and

504
00:18:36,640 --> 00:18:42,320
would answer this one as the response

505
00:18:40,160 --> 00:18:45,760
we see that this one is well formed

506
00:18:42,320 --> 00:18:47,520
because nkd is a random injection

507
00:18:45,760 --> 00:18:50,240
and the thing is that when we do that

508
00:18:47,520 --> 00:18:52,400
that says this technique

509
00:18:50,240 --> 00:18:54,240
how can why we cannot just use a random

510
00:18:52,400 --> 00:18:56,400
string if not if

511
00:18:54,240 --> 00:18:57,600
we just use a random string and how the

512
00:18:56,400 --> 00:19:00,880
size kick is

513
00:18:57,600 --> 00:19:03,840
additional power we recap the

514
00:19:00,880 --> 00:19:06,480
the the attack we illustrated before and

515
00:19:03,840 --> 00:19:08,840
we see this part it represents the pk1

516
00:19:06,480 --> 00:19:10,320
and the support illustrated as the lower

517
00:19:08,840 --> 00:19:13,120
pk2 and

518
00:19:10,320 --> 00:19:14,960
it would query this one and would test

519
00:19:13,120 --> 00:19:16,239
whether the answer of this one is

520
00:19:14,960 --> 00:19:21,039
identical to the nk

521
00:19:16,240 --> 00:19:24,000
and sk pk1 and sk2 and we see that

522
00:19:21,039 --> 00:19:24,960
in the answer in the answer in the

523
00:19:24,000 --> 00:19:27,679
answer of this

524
00:19:24,960 --> 00:19:29,280
the first query the simulator would

525
00:19:27,679 --> 00:19:32,559
choose the s case

526
00:19:29,280 --> 00:19:35,840
as the upper sk itself and

527
00:19:32,559 --> 00:19:38,000
see and save it as the inner state and

528
00:19:35,840 --> 00:19:38,879
would use this one and would use this

529
00:19:38,000 --> 00:19:41,440
one

530
00:19:38,880 --> 00:19:42,480
to answer some queries for the filter

531
00:19:41,440 --> 00:19:44,640
which is

532
00:19:42,480 --> 00:19:45,679
for the center for the which is for the

533
00:19:44,640 --> 00:19:47,679
query obviously

534
00:19:45,679 --> 00:19:49,760
for the query of this obvious for the

535
00:19:47,679 --> 00:19:53,360
solid query it would answer it

536
00:19:49,760 --> 00:19:56,480
by an skpk2 sk1 and

537
00:19:53,360 --> 00:19:57,760
we see that this is this is pk2 and this

538
00:19:56,480 --> 00:19:59,760
is sk1 and

539
00:19:57,760 --> 00:20:01,520
of course the other the simulator

540
00:19:59,760 --> 00:20:03,679
contract

541
00:20:01,520 --> 00:20:05,840
and this is the technique that is the

542
00:20:03,679 --> 00:20:08,320
simulator how to prevent the this kind

543
00:20:05,840 --> 00:20:10,720
of attack

544
00:20:08,320 --> 00:20:11,520
and for the h1 queries firstly check the

545
00:20:10,720 --> 00:20:15,120
h1 table

546
00:20:11,520 --> 00:20:16,559
and then using h0 p and p inverse table

547
00:20:15,120 --> 00:20:20,158
to test the validity

548
00:20:16,559 --> 00:20:23,760
of this one and the if and

549
00:20:20,159 --> 00:20:26,320
if cannot and then just and if and if

550
00:20:23,760 --> 00:20:27,520
we cannot use the h0 p and pr stable to

551
00:20:26,320 --> 00:20:29,918
test the validity

552
00:20:27,520 --> 00:20:32,080
then just replace it with the random

553
00:20:29,919 --> 00:20:33,760
string

554
00:20:32,080 --> 00:20:36,720
and now let's see how could we test the

555
00:20:33,760 --> 00:20:38,080
validity for instance we say pky is in

556
00:20:36,720 --> 00:20:41,120
h0 pk2 is

557
00:20:38,080 --> 00:20:44,480
in p and

558
00:20:41,120 --> 00:20:45,760
then since pk1 is into zero then we know

559
00:20:44,480 --> 00:20:48,559
the lower sk1

560
00:20:45,760 --> 00:20:49,360
and pk2 in ps and we know the lowercase

561
00:20:48,559 --> 00:20:51,520
of pk2

562
00:20:49,360 --> 00:20:52,799
so the simulator can calculate the the

563
00:20:51,520 --> 00:20:54,639
shadow key itself

564
00:20:52,799 --> 00:20:56,158
and test whether they are equal if we

565
00:20:54,640 --> 00:20:59,200
pass then we can answer it

566
00:20:56,159 --> 00:21:02,480
by irs k sk1 pk2

567
00:20:59,200 --> 00:21:04,799
else that's random strings and the

568
00:21:02,480 --> 00:21:06,080
underlying under the underlying secure

569
00:21:04,799 --> 00:21:08,480
requirement for the

570
00:21:06,080 --> 00:21:09,678
shared key is that the shared key is

571
00:21:08,480 --> 00:21:13,520
unpredictable

572
00:21:09,679 --> 00:21:13,919
against active attacker okay here we

573
00:21:13,520 --> 00:21:17,120
give

574
00:21:13,919 --> 00:21:19,039
the other intuitive the intuition

575
00:21:17,120 --> 00:21:20,158
for the simulator and the basic

576
00:21:19,039 --> 00:21:23,600
simulator

577
00:21:20,159 --> 00:21:25,039
we can show that we we by this emitter

578
00:21:23,600 --> 00:21:28,158
we can show that our neck

579
00:21:25,039 --> 00:21:31,520
is our our neck is individual

580
00:21:28,159 --> 00:21:34,880
from the ideal neck okay now we come

581
00:21:31,520 --> 00:21:36,080
to the conclusion in this in this talk

582
00:21:34,880 --> 00:21:39,760
we propose

583
00:21:36,080 --> 00:21:42,000
three uh three ideal we bring in the

584
00:21:39,760 --> 00:21:45,120
invisibility to the public setting and

585
00:21:42,000 --> 00:21:48,880
we propose that the three ideal notions

586
00:21:45,120 --> 00:21:51,199
which are ideal ideal as ideal notions

587
00:21:48,880 --> 00:21:53,520
for the primitive for three primitives i

588
00:21:51,200 --> 00:21:56,159
do like ideopke and i do signature

589
00:21:53,520 --> 00:21:57,520
and we construct uh individual nike in

590
00:21:56,159 --> 00:22:01,200
random oracle model and

591
00:21:57,520 --> 00:22:03,679
then construct a defendable pke

592
00:22:01,200 --> 00:22:05,840
in the ideal neck model and parallelly

593
00:22:03,679 --> 00:22:07,760
we also construct the individual very

594
00:22:05,840 --> 00:22:09,199
indifferentiable signature in the

595
00:22:07,760 --> 00:22:12,080
rainbow in the random

596
00:22:09,200 --> 00:22:14,960
oracle model and of course this is the

597
00:22:12,080 --> 00:22:17,280
first attempt to try to

598
00:22:14,960 --> 00:22:18,159
bring the infallibility into the public

599
00:22:17,280 --> 00:22:21,760
setting and

600
00:22:18,159 --> 00:22:23,840
we sincerely hope more more works

601
00:22:21,760 --> 00:22:25,520
about individuality in public sighting

602
00:22:23,840 --> 00:22:30,240
coming soon and

603
00:22:25,520 --> 00:22:30,240
and that's all thank you

