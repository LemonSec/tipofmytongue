1
00:00:01,040 --> 00:00:05,040
hi everyone my name is khan i'm a phd

2
00:00:03,280 --> 00:00:06,399
student at ibm research zurich

3
00:00:05,040 --> 00:00:09,120
and today i'm going to talk about our

4
00:00:06,399 --> 00:00:11,840
new paper called a non-pcp approach to

5
00:00:09,120 --> 00:00:13,599
succeed quantum saves your knowledge

6
00:00:11,840 --> 00:00:17,119
this is joint work with jonathan potol

7
00:00:13,599 --> 00:00:19,600
vadim yuvashevsky and gregor schuyler

8
00:00:17,119 --> 00:00:21,198
so in particular this approach is

9
00:00:19,600 --> 00:00:22,000
related to lattice-based zero-knowledge

10
00:00:21,199 --> 00:00:24,640
proofs

11
00:00:22,000 --> 00:00:25,439
which can be summarized as the problem

12
00:00:24,640 --> 00:00:29,199
of

13
00:00:25,439 --> 00:00:34,079
proving knowledge of a short vector s

14
00:00:29,199 --> 00:00:36,719
such that a c port u is equal to u mod q

15
00:00:34,079 --> 00:00:37,280
so there have been many recent works

16
00:00:36,719 --> 00:00:40,800
which

17
00:00:37,280 --> 00:00:44,239
um which prove this or similar

18
00:00:40,800 --> 00:00:46,399
relation and the main advantages are

19
00:00:44,239 --> 00:00:48,000
of these approaches as follows first of

20
00:00:46,399 --> 00:00:50,719
all they rely on the quantum safe

21
00:00:48,000 --> 00:00:53,360
assumptions such as cis or lwe

22
00:00:50,719 --> 00:00:54,079
and also they can be implemented

23
00:00:53,360 --> 00:00:57,600
efficiently

24
00:00:54,079 --> 00:01:00,079
so addition can be implemented

25
00:00:57,600 --> 00:01:01,680
straightforwardly but then we have

26
00:01:00,079 --> 00:01:04,640
multiplication which can be

27
00:01:01,680 --> 00:01:06,000
implemented using entities for example

28
00:01:04,640 --> 00:01:09,680
so the main drawback

29
00:01:06,000 --> 00:01:11,680
is that the proof size is linear in the

30
00:01:09,680 --> 00:01:13,680
number of committed messages

31
00:01:11,680 --> 00:01:14,960
so it is still fine for some

32
00:01:13,680 --> 00:01:16,720
applications such as

33
00:01:14,960 --> 00:01:18,158
group signatures or verifiable

34
00:01:16,720 --> 00:01:21,679
encryption but maybe

35
00:01:18,159 --> 00:01:24,720
for some other big scenarios this is uh

36
00:01:21,680 --> 00:01:25,600
the proof size basically blows therefore

37
00:01:24,720 --> 00:01:27,840
one can use

38
00:01:25,600 --> 00:01:29,280
a more kind of a generic approach which

39
00:01:27,840 --> 00:01:32,640
which is the pcp

40
00:01:29,280 --> 00:01:36,159
approach such as aurora or ligero so

41
00:01:32,640 --> 00:01:40,240
one could just uh transform this

42
00:01:36,159 --> 00:01:43,200
equation as equals u into the underlying

43
00:01:40,240 --> 00:01:44,399
problem for these proof systems such as

44
00:01:43,200 --> 00:01:46,560
r1cs

45
00:01:44,399 --> 00:01:48,720
and then one could just apply the

46
00:01:46,560 --> 00:01:51,840
generate proof system and then one can

47
00:01:48,720 --> 00:01:54,320
basically apply one of those protocols

48
00:01:51,840 --> 00:01:55,520
so it is quantum state because because

49
00:01:54,320 --> 00:01:59,439
they rely on the

50
00:01:55,520 --> 00:02:01,759
collision resistant hash functions but

51
00:01:59,439 --> 00:02:04,320
the proof size becomes sublinear

52
00:02:01,759 --> 00:02:07,280
asymptotically this is better than the

53
00:02:04,320 --> 00:02:08,000
using lattice commitments technique

54
00:02:07,280 --> 00:02:10,560
however it

55
00:02:08,000 --> 00:02:11,038
is pretty slow compared to the lattices

56
00:02:10,560 --> 00:02:13,280
and

57
00:02:11,038 --> 00:02:15,119
in some cases the speed can be much more

58
00:02:13,280 --> 00:02:17,200
important than the proof size right

59
00:02:15,120 --> 00:02:19,280
so for example when we want to implement

60
00:02:17,200 --> 00:02:20,399
protocols on constrained devices such as

61
00:02:19,280 --> 00:02:23,760
credit cards

62
00:02:20,400 --> 00:02:26,640
then we need we want to have

63
00:02:23,760 --> 00:02:28,399
efficient implementations the motivation

64
00:02:26,640 --> 00:02:32,720
for this paper is

65
00:02:28,400 --> 00:02:35,920
of for this talk is basically to have um

66
00:02:32,720 --> 00:02:36,879
to construct purely base zero knowledge

67
00:02:35,920 --> 00:02:39,839
proofs

68
00:02:36,879 --> 00:02:40,720
which get the advantages of the of these

69
00:02:39,840 --> 00:02:43,360
two

70
00:02:40,720 --> 00:02:45,519
worlds kind of so we want to have

71
00:02:43,360 --> 00:02:46,879
something which is sublinear but also is

72
00:02:45,519 --> 00:02:49,280
fast

73
00:02:46,879 --> 00:02:51,040
so our contributions can be split into

74
00:02:49,280 --> 00:02:53,040
two protocols

75
00:02:51,040 --> 00:02:55,840
which are called the level commitments

76
00:02:53,040 --> 00:02:58,480
and the last space will approve

77
00:02:55,840 --> 00:03:00,480
okay so the let's let's just focus on

78
00:02:58,480 --> 00:03:02,959
the first one

79
00:03:00,480 --> 00:03:05,119
okay so let's start with the level one

80
00:03:02,959 --> 00:03:08,480
which is the previous work

81
00:03:05,120 --> 00:03:11,040
so there's a paper at crypto 18

82
00:03:08,480 --> 00:03:12,640
by bomb at all which provide the let's

83
00:03:11,040 --> 00:03:15,519
spray zero knowledge proof

84
00:03:12,640 --> 00:03:16,079
of the commitment opening with which is

85
00:03:15,519 --> 00:03:18,319
with the

86
00:03:16,080 --> 00:03:20,879
sub linear proof size so the commitment

87
00:03:18,319 --> 00:03:24,640
is the standard cis commitment

88
00:03:20,879 --> 00:03:26,879
and the proof size is asymptotically

89
00:03:24,640 --> 00:03:28,399
square root of n where n is the number

90
00:03:26,879 --> 00:03:30,720
of secret integers

91
00:03:28,400 --> 00:03:31,519
so later on they show how to use that

92
00:03:30,720 --> 00:03:34,159
for

93
00:03:31,519 --> 00:03:35,760
proving circuit satisfiability okay so

94
00:03:34,159 --> 00:03:38,480
let's

95
00:03:35,760 --> 00:03:40,000
sketch out the protocol which is

96
00:03:38,480 --> 00:03:43,359
relatively simple

97
00:03:40,000 --> 00:03:47,360
so the statement is a s is equal to t

98
00:03:43,360 --> 00:03:49,200
mod q so a s and t are matrices

99
00:03:47,360 --> 00:03:52,560
and s already contains the randomness

100
00:03:49,200 --> 00:03:56,079
okay okay so s contains the randomness

101
00:03:52,560 --> 00:03:57,439
um this the commitment is hiding and

102
00:03:56,080 --> 00:04:00,640
binding

103
00:03:57,439 --> 00:04:03,200
based on the cis hardness

104
00:04:00,640 --> 00:04:06,000
okay so the protocol is as follows so

105
00:04:03,200 --> 00:04:09,040
there's a proof of mario

106
00:04:06,000 --> 00:04:11,760
it has the secret

107
00:04:09,040 --> 00:04:12,798
matrix s which is short and the

108
00:04:11,760 --> 00:04:16,079
commitment t

109
00:04:12,799 --> 00:04:18,400
so verify only has t so

110
00:04:16,079 --> 00:04:19,358
the prover at the beginning samples some

111
00:04:18,399 --> 00:04:21,279
y

112
00:04:19,358 --> 00:04:24,479
that's used for the rejection sampling

113
00:04:21,279 --> 00:04:28,159
and then sends w which is a y

114
00:04:24,479 --> 00:04:29,120
so it sends w later on the verifier gets

115
00:04:28,160 --> 00:04:33,280
the challenge

116
00:04:29,120 --> 00:04:36,080
matrix c it will be binary in our case

117
00:04:33,280 --> 00:04:36,719
it will it sends the challenge c then

118
00:04:36,080 --> 00:04:40,400
the prover

119
00:04:36,720 --> 00:04:42,320
sets z to be equal to y plus s c

120
00:04:40,400 --> 00:04:43,599
it applies rejection sampling and it

121
00:04:42,320 --> 00:04:45,520
sends set

122
00:04:43,600 --> 00:04:46,960
then the verify checks two things

123
00:04:45,520 --> 00:04:49,680
firstly if it's

124
00:04:46,960 --> 00:04:50,320
if set is small and then if a z is equal

125
00:04:49,680 --> 00:04:53,280
to w

126
00:04:50,320 --> 00:04:55,199
plus tc so correctness follows

127
00:04:53,280 --> 00:04:58,400
immediately because

128
00:04:55,199 --> 00:05:01,600
a set well z is equal to y

129
00:04:58,400 --> 00:05:02,000
plus sc so a set is equal to a y plus a

130
00:05:01,600 --> 00:05:07,039
y

131
00:05:02,000 --> 00:05:07,039
sc which is equal to w plus tc

132
00:05:08,240 --> 00:05:12,160
now the proof size is the size of t and

133
00:05:11,199 --> 00:05:15,840
the size of c

134
00:05:12,160 --> 00:05:19,199
and the size of z so um

135
00:05:15,840 --> 00:05:20,400
so now now we have to define what the

136
00:05:19,199 --> 00:05:23,280
dimensions are

137
00:05:20,400 --> 00:05:24,080
unfortunately so suppose that s is a

138
00:05:23,280 --> 00:05:27,359
matrix

139
00:05:24,080 --> 00:05:30,800
of dimensions n times m a is k

140
00:05:27,360 --> 00:05:33,919
times n and capital n

141
00:05:30,800 --> 00:05:37,360
will be defined by n times m so it's the

142
00:05:33,919 --> 00:05:40,400
number of integers inside the matrix s

143
00:05:37,360 --> 00:05:43,520
by defining new variables we set t y

144
00:05:40,400 --> 00:05:47,280
and c and z so

145
00:05:43,520 --> 00:05:50,159
t is the matrix of dimensions k times n

146
00:05:47,280 --> 00:05:51,599
y is of dimensions n times v c is of

147
00:05:50,160 --> 00:05:55,840
dimensions m times v

148
00:05:51,600 --> 00:05:58,240
and z is of dimensions n times v

149
00:05:55,840 --> 00:05:59,039
so the proof size can be simply bounded

150
00:05:58,240 --> 00:06:02,960
by

151
00:05:59,039 --> 00:06:06,719
k n times log q so this is the size of t

152
00:06:02,960 --> 00:06:08,960
plus m v which is the size of c

153
00:06:06,720 --> 00:06:10,080
but um later on we're just going to

154
00:06:08,960 --> 00:06:12,159
neglect the

155
00:06:10,080 --> 00:06:14,560
sizes of the challenges because they are

156
00:06:12,160 --> 00:06:15,440
small and then we have the size of set

157
00:06:14,560 --> 00:06:18,639
which is nv

158
00:06:15,440 --> 00:06:21,280
times log of 12

159
00:06:18,639 --> 00:06:22,400
sigma which is comes from the rejection

160
00:06:21,280 --> 00:06:25,679
sampling

161
00:06:22,400 --> 00:06:27,039
so basically we want to the idea is to

162
00:06:25,680 --> 00:06:30,160
pick parameters

163
00:06:27,039 --> 00:06:31,520
such that the sizes of the first two

164
00:06:30,160 --> 00:06:34,319
terms

165
00:06:31,520 --> 00:06:37,359
um the the well the size of that is all

166
00:06:34,319 --> 00:06:39,759
similar to the size of the last term

167
00:06:37,360 --> 00:06:40,639
so then if if we choose parameters in

168
00:06:39,759 --> 00:06:43,199
such a way

169
00:06:40,639 --> 00:06:43,759
and in a way so that the cis is hard and

170
00:06:43,199 --> 00:06:46,319
so on

171
00:06:43,759 --> 00:06:48,720
then the process can be bounded by the

172
00:06:46,319 --> 00:06:51,680
poly of lambda where lambda is the

173
00:06:48,720 --> 00:06:52,720
security parameter times big o of n plus

174
00:06:51,680 --> 00:06:55,840
m

175
00:06:52,720 --> 00:06:59,599
but then n plus m will be kind of

176
00:06:55,840 --> 00:07:02,239
um almost equal then this

177
00:06:59,599 --> 00:07:04,159
this implies that it's the proof size

178
00:07:02,240 --> 00:07:06,240
becomes poly of lambda times

179
00:07:04,160 --> 00:07:08,880
uh almost square root of n

180
00:07:06,240 --> 00:07:11,840
asymptotically

181
00:07:08,880 --> 00:07:12,479
um yeah so this is kind of the idea of

182
00:07:11,840 --> 00:07:15,679
of that

183
00:07:12,479 --> 00:07:16,639
paper which is called level one so now

184
00:07:15,680 --> 00:07:19,280
in the level two

185
00:07:16,639 --> 00:07:20,080
we will actually show how to get the

186
00:07:19,280 --> 00:07:23,198
cube root of

187
00:07:20,080 --> 00:07:26,639
n proof size okay

188
00:07:23,199 --> 00:07:29,759
so level two so suppose we have a

189
00:07:26,639 --> 00:07:32,960
secret matrix s of dimensions m1

190
00:07:29,759 --> 00:07:36,880
m2 times m3 so now

191
00:07:32,960 --> 00:07:40,080
the s has n integers in it

192
00:07:36,880 --> 00:07:44,159
which is uh equal to m1 times m2 and m

193
00:07:40,080 --> 00:07:47,440
times m3 so the elements in s

194
00:07:44,160 --> 00:07:50,479
are small they belong to set p and p

195
00:07:47,440 --> 00:07:50,879
is small okay so first of all let us

196
00:07:50,479 --> 00:07:53,919
write

197
00:07:50,879 --> 00:07:56,960
s let us write it as

198
00:07:53,919 --> 00:08:00,878
uh m1 matrices so we we

199
00:07:56,960 --> 00:08:06,080
will split s into s1 s2 up to sm1

200
00:08:00,879 --> 00:08:06,080
where each si has dimensions m2 times m3

201
00:08:06,400 --> 00:08:12,960
so for q which is less or equal

202
00:08:09,680 --> 00:08:15,520
well for q2 which is much

203
00:08:12,960 --> 00:08:16,560
smaller than q1 the the commitment

204
00:08:15,520 --> 00:08:19,359
becomes t

205
00:08:16,560 --> 00:08:21,280
is equal to so okay so this might be a

206
00:08:19,360 --> 00:08:24,840
little bit scary but uh let's

207
00:08:21,280 --> 00:08:27,919
go through it slowly t is equal to a1

208
00:08:24,840 --> 00:08:30,960
times kind of a long matrix

209
00:08:27,919 --> 00:08:32,159
for the kind of complicated expression

210
00:08:30,960 --> 00:08:35,360
for the matrix

211
00:08:32,159 --> 00:08:38,838
so identity m1 tensor a2

212
00:08:35,360 --> 00:08:40,000
times s mod q2 and the whole thing mod

213
00:08:38,839 --> 00:08:43,120
q1

214
00:08:40,000 --> 00:08:45,440
so in other words we can write it as a1

215
00:08:43,120 --> 00:08:46,480
times the matrix which contains the

216
00:08:45,440 --> 00:08:50,080
matrices

217
00:08:46,480 --> 00:08:53,279
a2 s1 mod q2 a2 s2 mod k2

218
00:08:50,080 --> 00:08:54,880
up to a2 sm1 mod q2 and the whole thing

219
00:08:53,279 --> 00:08:58,480
mod q1

220
00:08:54,880 --> 00:09:00,720
okay so why do we need to modulate

221
00:08:58,480 --> 00:09:03,920
um the answer is that they will be

222
00:09:00,720 --> 00:09:08,800
useful for the binding property

223
00:09:03,920 --> 00:09:11,120
okay so we have this um

224
00:09:08,800 --> 00:09:13,199
definition of the of this level of

225
00:09:11,120 --> 00:09:16,240
commitment for the level two

226
00:09:13,200 --> 00:09:20,080
so we say that the relaxed opening of t

227
00:09:16,240 --> 00:09:23,279
so what we actually gonna extract

228
00:09:20,080 --> 00:09:25,279
in the soundness proof um

229
00:09:23,279 --> 00:09:26,480
the relaxed opening of t is a pair of

230
00:09:25,279 --> 00:09:30,480
small matrices

231
00:09:26,480 --> 00:09:33,279
s and r such that t is equal to a1

232
00:09:30,480 --> 00:09:34,000
times so we have this matrix in it

233
00:09:33,279 --> 00:09:38,160
inside

234
00:09:34,000 --> 00:09:40,640
so identity m1 tensor a2 times s mod q2

235
00:09:38,160 --> 00:09:41,360
plus q2 r so this is this additional

236
00:09:40,640 --> 00:09:44,800
term

237
00:09:41,360 --> 00:09:45,600
and the whole thing mod q1 so now let's

238
00:09:44,800 --> 00:09:49,040
see why

239
00:09:45,600 --> 00:09:53,279
um we have this binding property

240
00:09:49,040 --> 00:09:54,399
so suppose an adversary finds two

241
00:09:53,279 --> 00:09:58,000
different pairs as

242
00:09:54,399 --> 00:10:01,200
r and s prime are prime then we have the

243
00:09:58,000 --> 00:10:02,240
equality here right so first of all we

244
00:10:01,200 --> 00:10:06,560
can see

245
00:10:02,240 --> 00:10:09,279
that um so we have a1 times something

246
00:10:06,560 --> 00:10:10,319
some matrix and it's going to be small i

247
00:10:09,279 --> 00:10:13,439
mean

248
00:10:10,320 --> 00:10:14,320
the matrix inside is small because r is

249
00:10:13,440 --> 00:10:17,600
small

250
00:10:14,320 --> 00:10:18,880
and q2 is much smaller than q1 so that's

251
00:10:17,600 --> 00:10:21,680
why the matrix

252
00:10:18,880 --> 00:10:22,800
which is in which is multiplied by a1 is

253
00:10:21,680 --> 00:10:26,399
small

254
00:10:22,800 --> 00:10:27,519
so therefore by the cis hardness of a1

255
00:10:26,399 --> 00:10:30,560
modulo q1

256
00:10:27,519 --> 00:10:32,160
we must have that these inner matrices

257
00:10:30,560 --> 00:10:35,599
are the same

258
00:10:32,160 --> 00:10:38,880
so in particular identity m1

259
00:10:35,600 --> 00:10:41,839
tensor a2 times s mod q2 plus q2

260
00:10:38,880 --> 00:10:44,240
r is equal to identity m1 tensor a2

261
00:10:41,839 --> 00:10:47,680
times s prime mod q2 plus q2 r

262
00:10:44,240 --> 00:10:51,200
prime so from that we simply have that r

263
00:10:47,680 --> 00:10:53,920
is equal to r prime and identity m1

264
00:10:51,200 --> 00:10:54,800
tensor a2 s is equal to identity m1

265
00:10:53,920 --> 00:10:58,399
tensor a2

266
00:10:54,800 --> 00:10:59,920
s prime mod q2 similarly we can argue

267
00:10:58,399 --> 00:11:02,560
that by the cis hardness of

268
00:10:59,920 --> 00:11:03,599
a2 mod q2 we get that s is equal to s

269
00:11:02,560 --> 00:11:06,479
prime

270
00:11:03,600 --> 00:11:06,959
so from that we get the binding property

271
00:11:06,480 --> 00:11:10,399
so

272
00:11:06,959 --> 00:11:13,439
the level two basically

273
00:11:10,399 --> 00:11:18,079
um is now

274
00:11:13,440 --> 00:11:21,519
so the the prover has s which is small

275
00:11:18,079 --> 00:11:24,800
and the statement is t is equal to a1

276
00:11:21,519 --> 00:11:29,440
times that matrix identity tensor a2

277
00:11:24,800 --> 00:11:32,479
s mod q2 then the whole thing mod q1

278
00:11:29,440 --> 00:11:36,240
so let us write this inner

279
00:11:32,480 --> 00:11:38,240
this matrix in the big brackets ss prime

280
00:11:36,240 --> 00:11:39,680
then the statement just becomes the

281
00:11:38,240 --> 00:11:42,880
level one

282
00:11:39,680 --> 00:11:45,920
uh protocol because s as prime

283
00:11:42,880 --> 00:11:49,600
with the s prime being let's say

284
00:11:45,920 --> 00:11:51,920
secret so obviously s prime is not short

285
00:11:49,600 --> 00:11:52,800
so we don't have to do the rejection

286
00:11:51,920 --> 00:11:56,079
sampling

287
00:11:52,800 --> 00:11:58,319
but okay so let's see how the first part

288
00:11:56,079 --> 00:12:01,279
of the protocol looks like

289
00:11:58,320 --> 00:12:03,040
okay so the this we can for now we can

290
00:12:01,279 --> 00:12:04,880
ignore the first part because this will

291
00:12:03,040 --> 00:12:05,680
be used for rejection sampling at the

292
00:12:04,880 --> 00:12:09,360
end

293
00:12:05,680 --> 00:12:09,760
but yeah so uh the prover generates some

294
00:12:09,360 --> 00:12:12,800
y

295
00:12:09,760 --> 00:12:15,519
small y and then it

296
00:12:12,800 --> 00:12:18,160
writes w which is equal to a to y and it

297
00:12:15,519 --> 00:12:18,160
sends w

298
00:12:18,320 --> 00:12:25,760
then the verifier sends the channel c

299
00:12:22,839 --> 00:12:27,839
one

300
00:12:25,760 --> 00:12:28,959
and then the prover sends v which is

301
00:12:27,839 --> 00:12:32,079
equal to s prime

302
00:12:28,959 --> 00:12:34,959
c c1 so

303
00:12:32,079 --> 00:12:36,079
then the verifier checks that a1v which

304
00:12:34,959 --> 00:12:40,239
is equal to a1

305
00:12:36,079 --> 00:12:43,040
s prime c1 one which is equal to t c one

306
00:12:40,240 --> 00:12:44,959
so this protocol is very similar to the

307
00:12:43,040 --> 00:12:47,519
level one

308
00:12:44,959 --> 00:12:48,479
protocol right without rejection

309
00:12:47,519 --> 00:12:51,680
sampling

310
00:12:48,480 --> 00:12:53,600
so what we have left to do

311
00:12:51,680 --> 00:12:55,279
is that we have to prove well formless

312
00:12:53,600 --> 00:12:57,839
of s prime

313
00:12:55,279 --> 00:12:58,480
so this means that having sent the v

314
00:12:57,839 --> 00:13:01,360
which is s

315
00:12:58,480 --> 00:13:02,000
prime c one we need to prove that v is

316
00:13:01,360 --> 00:13:05,360
equal to

317
00:13:02,000 --> 00:13:08,560
identity m one tensor a two times

318
00:13:05,360 --> 00:13:12,800
sc1 mod q2 okay

319
00:13:08,560 --> 00:13:15,920
so v is equal to as as i said before

320
00:13:12,800 --> 00:13:19,920
v is equal to identity tensor a2 times

321
00:13:15,920 --> 00:13:22,079
s mod q2 times c1 so we can

322
00:13:19,920 --> 00:13:25,920
alternatively write it as v

323
00:13:22,079 --> 00:13:29,760
is equal to the matrix a2 s1 mod k2

324
00:13:25,920 --> 00:13:33,519
a2 s2 mod q2 up to a2 as m1 mod q2

325
00:13:29,760 --> 00:13:37,200
times c1 so if we write v

326
00:13:33,519 --> 00:13:40,160
as if we split v into m1 matrices

327
00:13:37,200 --> 00:13:42,639
like sub matrices then we get that vi is

328
00:13:40,160 --> 00:13:47,199
equal to a2 as i mod q2

329
00:13:42,639 --> 00:13:49,680
times core c1 so now if we take the

330
00:13:47,199 --> 00:13:51,599
kind of a block transpose of v so we

331
00:13:49,680 --> 00:13:53,120
just take the transpose of the sub

332
00:13:51,600 --> 00:13:56,880
matrices vi

333
00:13:53,120 --> 00:14:01,040
then the matrix v1 v2 up to vm1

334
00:13:56,880 --> 00:14:04,399
is equal to a2 times

335
00:14:01,040 --> 00:14:09,519
the matrix s1 c1 s2 c1

336
00:14:04,399 --> 00:14:09,519
up to sm1 c1 mod q2

337
00:14:09,920 --> 00:14:15,839
so actually

338
00:14:13,600 --> 00:14:16,880
this becomes kind of a statement for the

339
00:14:15,839 --> 00:14:18,480
level one right

340
00:14:16,880 --> 00:14:20,240
so on the left hand side we have a

341
00:14:18,480 --> 00:14:23,680
matrix which is public

342
00:14:20,240 --> 00:14:26,079
is equal to a2 which is public times a

343
00:14:23,680 --> 00:14:29,199
matrix which is small

344
00:14:26,079 --> 00:14:32,638
this method of writing v

345
00:14:29,199 --> 00:14:34,479
into m1 matrices and then taking the

346
00:14:32,639 --> 00:14:38,959
block transpose we will call it

347
00:14:34,480 --> 00:14:41,360
folding so so now we can just continue

348
00:14:38,959 --> 00:14:42,000
with our with the level one protocol

349
00:14:41,360 --> 00:14:46,480
right

350
00:14:42,000 --> 00:14:49,360
so the verifier will send c2

351
00:14:46,480 --> 00:14:49,680
then we do the rejection sampling so we

352
00:14:49,360 --> 00:14:53,360
write

353
00:14:49,680 --> 00:14:58,399
z is equal to y plus s1 c1

354
00:14:53,360 --> 00:14:59,760
s2 c1 up to sm1 c1 times c2 then do the

355
00:14:58,399 --> 00:15:03,199
rejection sampling

356
00:14:59,760 --> 00:15:04,560
then we send set and then the verifier

357
00:15:03,199 --> 00:15:08,000
checks that set is small

358
00:15:04,560 --> 00:15:10,719
and a2z is equal to w plus

359
00:15:08,000 --> 00:15:13,839
this block transpose of v which is v1 up

360
00:15:10,720 --> 00:15:16,880
to vm1 times c2

361
00:15:13,839 --> 00:15:19,920
so now the proof size becomes

362
00:15:16,880 --> 00:15:21,279
the size of t plus the size of v plus

363
00:15:19,920 --> 00:15:24,959
the size of z

364
00:15:21,279 --> 00:15:28,560
so if one figures out all the

365
00:15:24,959 --> 00:15:31,839
dimensions then each of them

366
00:15:28,560 --> 00:15:33,359
corresponds to different mi so

367
00:15:31,839 --> 00:15:35,120
if we find parameters such that the

368
00:15:33,360 --> 00:15:37,519
sizes of t v and z

369
00:15:35,120 --> 00:15:38,800
are similar then the proof becomes

370
00:15:37,519 --> 00:15:42,000
basically

371
00:15:38,800 --> 00:15:45,439
poly of lambda times big o of

372
00:15:42,000 --> 00:15:47,920
n to the one third so in the paper we

373
00:15:45,440 --> 00:15:50,160
generalize this approach to many levels

374
00:15:47,920 --> 00:15:51,040
so if we have d levels then the proof

375
00:15:50,160 --> 00:15:54,399
size becomes

376
00:15:51,040 --> 00:15:54,959
asymptotically essentially n to the one

377
00:15:54,399 --> 00:15:57,759
over d

378
00:15:54,959 --> 00:15:58,239
plus one also it is worth mentioning

379
00:15:57,759 --> 00:16:00,560
that b

380
00:15:58,240 --> 00:16:02,880
has to be a constant because otherwise

381
00:16:00,560 --> 00:16:07,199
if d is not a constant for example if

382
00:16:02,880 --> 00:16:10,480
d is log n then um the extractor for

383
00:16:07,199 --> 00:16:12,160
soundness becomes inefficient indeed so

384
00:16:10,480 --> 00:16:14,560
asymptotically the runtime of the

385
00:16:12,160 --> 00:16:16,800
extractor is something around

386
00:16:14,560 --> 00:16:18,079
like lambda to the d unless d is a

387
00:16:16,800 --> 00:16:20,719
constant

388
00:16:18,079 --> 00:16:23,120
uh the runtime of the extractor is not

389
00:16:20,720 --> 00:16:24,959
polynomial time

390
00:16:23,120 --> 00:16:26,639
okay so now let's switch to the

391
00:16:24,959 --> 00:16:28,000
lattice-based bulletproof so we don't

392
00:16:26,639 --> 00:16:31,920
really have much time but

393
00:16:28,000 --> 00:16:34,959
it's okay to to give a high-level idea

394
00:16:31,920 --> 00:16:36,479
for that so it it is inspired by the

395
00:16:34,959 --> 00:16:39,518
original bulletproofs

396
00:16:36,480 --> 00:16:40,320
protocol and the main observation is as

397
00:16:39,519 --> 00:16:43,759
follows

398
00:16:40,320 --> 00:16:47,360
so again we have some statement like a

399
00:16:43,759 --> 00:16:47,839
s is equal to t but now we split a and s

400
00:16:47,360 --> 00:16:51,040
into

401
00:16:47,839 --> 00:16:53,759
two parts so we have a0 a1 and then the

402
00:16:51,040 --> 00:16:57,680
vector s0 and s1 so they are they have

403
00:16:53,759 --> 00:16:57,680
equal length so

404
00:16:57,920 --> 00:17:04,720
then for any scalar c we have that c

405
00:17:01,519 --> 00:17:07,760
a0 plus a1 times a 0 plus c

406
00:17:04,720 --> 00:17:10,959
s 1 is equal to

407
00:17:07,760 --> 00:17:15,039
some cross terms w 0 plus

408
00:17:10,959 --> 00:17:16,959
c t plus c squared w 1. so w 0 is a 1 is

409
00:17:15,039 --> 00:17:20,879
0 and w 1 is a 0

410
00:17:16,959 --> 00:17:24,559
s s1 so if we send

411
00:17:20,880 --> 00:17:25,520
w0 and w1 to the verifier then we end up

412
00:17:24,559 --> 00:17:28,160
proving

413
00:17:25,520 --> 00:17:30,799
kind of a similar equation so it is of

414
00:17:28,160 --> 00:17:34,000
the form bs prime is equal to d prime

415
00:17:30,799 --> 00:17:37,039
and b is c a zero plus a one s

416
00:17:34,000 --> 00:17:40,080
prime is zero plus c s one and t

417
00:17:37,039 --> 00:17:41,600
prime is w zero plus c t plus c squared

418
00:17:40,080 --> 00:17:44,639
w one

419
00:17:41,600 --> 00:17:46,000
but now s prime is two times shorter

420
00:17:44,640 --> 00:17:48,880
than the original secret

421
00:17:46,000 --> 00:17:50,000
vector s so this means that we reduce

422
00:17:48,880 --> 00:17:53,600
the

423
00:17:50,000 --> 00:17:56,080
the length of the secret vector

424
00:17:53,600 --> 00:17:56,879
okay so how does the protocol look like

425
00:17:56,080 --> 00:17:59,120
so

426
00:17:56,880 --> 00:18:00,320
for simplicity let us work over the

427
00:17:59,120 --> 00:18:03,840
polynomial ring

428
00:18:00,320 --> 00:18:09,360
so a is uh a has only one row

429
00:18:03,840 --> 00:18:12,399
um and well one row and m columns

430
00:18:09,360 --> 00:18:15,678
m is let's say very long

431
00:18:12,400 --> 00:18:19,360
and we it's over r cubed so rq

432
00:18:15,679 --> 00:18:22,160
is uh zq of x modulo x to the n plus one

433
00:18:19,360 --> 00:18:24,799
so the statement is a s is equal to t

434
00:18:22,160 --> 00:18:27,200
where t is a polynomial

435
00:18:24,799 --> 00:18:28,160
so we have the approver let's say luigi

436
00:18:27,200 --> 00:18:31,600
this time

437
00:18:28,160 --> 00:18:34,720
so he has uh the secret vector

438
00:18:31,600 --> 00:18:38,879
s obviously it's short and

439
00:18:34,720 --> 00:18:40,799
t so the first step will be sent

440
00:18:38,880 --> 00:18:43,760
would be to send the cross terms just

441
00:18:40,799 --> 00:18:46,960
like before we send the w0 and w1

442
00:18:43,760 --> 00:18:50,559
so a w0 is a1 ss0

443
00:18:46,960 --> 00:18:54,320
w1 is a0 s1 then the

444
00:18:50,559 --> 00:18:57,600
verifier selects some scalar c

445
00:18:54,320 --> 00:19:00,639
and then the prover sends s0 plus

446
00:18:57,600 --> 00:19:03,120
cs1 so

447
00:19:00,640 --> 00:19:04,480
it it will send the z and then the

448
00:19:03,120 --> 00:19:09,120
verifier would check that c

449
00:19:04,480 --> 00:19:12,559
a0 plus a1 times that is w0 plus ct

450
00:19:09,120 --> 00:19:15,120
plus c squared w1 however

451
00:19:12,559 --> 00:19:15,600
this would require sen to actually send

452
00:19:15,120 --> 00:19:18,639
the z

453
00:19:15,600 --> 00:19:20,799
and z has the length m over 2

454
00:19:18,640 --> 00:19:23,120
basically so this would be quite

455
00:19:20,799 --> 00:19:26,160
expensive so apart so

456
00:19:23,120 --> 00:19:29,199
instead of doing that we could just

457
00:19:26,160 --> 00:19:31,600
continue with another round and prove

458
00:19:29,200 --> 00:19:34,160
that c a zero plus a one z

459
00:19:31,600 --> 00:19:35,520
is equal to w zero plus c t plus c

460
00:19:34,160 --> 00:19:38,880
squared w one

461
00:19:35,520 --> 00:19:41,520
so we can do that until

462
00:19:38,880 --> 00:19:42,160
it's not expensive to read to send the

463
00:19:41,520 --> 00:19:45,918
must

464
00:19:42,160 --> 00:19:45,919
opening set basically

465
00:19:46,240 --> 00:19:50,559
by calculating the the sizes and

466
00:19:48,720 --> 00:19:53,360
choosing

467
00:19:50,559 --> 00:19:55,520
appropriate parameters we get the proof

468
00:19:53,360 --> 00:19:58,799
size is poly logarithmic and

469
00:19:55,520 --> 00:20:02,080
so and this capital n is now small

470
00:19:58,799 --> 00:20:04,480
n times n in conclusion we have

471
00:20:02,080 --> 00:20:06,559
two protocols with two different

472
00:20:04,480 --> 00:20:08,080
approaches which have their advantages

473
00:20:06,559 --> 00:20:10,080
and disadvantages

474
00:20:08,080 --> 00:20:11,439
so let's just go through them so the

475
00:20:10,080 --> 00:20:14,960
level commitments have

476
00:20:11,440 --> 00:20:16,480
the sublinear proof size and it's your

477
00:20:14,960 --> 00:20:20,240
knowledge

478
00:20:16,480 --> 00:20:22,640
but okay so the the second disadvantage

479
00:20:20,240 --> 00:20:24,559
is we have already explained that so the

480
00:20:22,640 --> 00:20:24,799
process is not poly logarithmic because

481
00:20:24,559 --> 00:20:28,000
d

482
00:20:24,799 --> 00:20:30,799
has to be a constant moreover there is

483
00:20:28,000 --> 00:20:32,159
this massive slack for large d so what

484
00:20:30,799 --> 00:20:35,679
do we mean by slack

485
00:20:32,159 --> 00:20:38,720
so we say that when the slack is big

486
00:20:35,679 --> 00:20:41,280
uh it means that when we

487
00:20:38,720 --> 00:20:42,640
when we do the knowledge extraction then

488
00:20:41,280 --> 00:20:46,158
the extractor finds

489
00:20:42,640 --> 00:20:49,760
the secret uh short vector or matrix

490
00:20:46,159 --> 00:20:53,280
s prime which is much

491
00:20:49,760 --> 00:20:56,559
much larger than the original uh

492
00:20:53,280 --> 00:20:57,200
witness s so when we say larger we mean

493
00:20:56,559 --> 00:21:00,240
the

494
00:20:57,200 --> 00:21:03,280
let's say infinity norm or the l2 norm

495
00:21:00,240 --> 00:21:05,360
and so on and so on basically both

496
00:21:03,280 --> 00:21:06,399
approaches have massive slack and this

497
00:21:05,360 --> 00:21:09,918
is because

498
00:21:06,400 --> 00:21:13,039
when we do one round then the slack is

499
00:21:09,919 --> 00:21:13,280
maybe okay in practice but then if we do

500
00:21:13,039 --> 00:21:15,520
it

501
00:21:13,280 --> 00:21:16,559
in multiple rounds then the slack grows

502
00:21:15,520 --> 00:21:19,840
exponentially

503
00:21:16,559 --> 00:21:23,120
that's why the extracted witness becomes

504
00:21:19,840 --> 00:21:25,678
very large usually zero knowledge proofs

505
00:21:23,120 --> 00:21:26,399
is a one part of some higher level

506
00:21:25,679 --> 00:21:29,039
protocol

507
00:21:26,400 --> 00:21:30,559
and if the slack is big that all the

508
00:21:29,039 --> 00:21:32,480
other components of this

509
00:21:30,559 --> 00:21:33,600
of the protocol have to accommodate for

510
00:21:32,480 --> 00:21:35,840
that

511
00:21:33,600 --> 00:21:36,639
okay but for the lattice-based bullet

512
00:21:35,840 --> 00:21:39,918
proofs

513
00:21:36,640 --> 00:21:41,600
we get the poly logarithmic proof size

514
00:21:39,919 --> 00:21:43,440
so there is no zero knowledge just like

515
00:21:41,600 --> 00:21:44,799
the original bullet proofs and there is

516
00:21:43,440 --> 00:21:46,720
this massive slack

517
00:21:44,799 --> 00:21:49,120
okay so thank you very much for

518
00:21:46,720 --> 00:21:50,960
listening and for watching

519
00:21:49,120 --> 00:21:52,479
here is the link for the full version of

520
00:21:50,960 --> 00:21:55,039
the paper thanks

521
00:21:52,480 --> 00:21:55,039
bye

