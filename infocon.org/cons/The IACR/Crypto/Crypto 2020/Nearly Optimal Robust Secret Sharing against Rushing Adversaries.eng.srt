1
00:00:02,639 --> 00:00:06,798
hey everyone

2
00:00:03,600 --> 00:00:09,360
i am and today i am going to talk about

3
00:00:06,799 --> 00:00:09,920
nearly optimal robust secret sharing

4
00:00:09,360 --> 00:00:12,559
against

5
00:00:09,920 --> 00:00:13,519
rushing adversaries this is based on

6
00:00:12,559 --> 00:00:17,360
joint work with

7
00:00:13,519 --> 00:00:17,360
passing manurangsi and prashant

8
00:00:17,680 --> 00:00:22,080
let me start this talk by recalling the

9
00:00:19,920 --> 00:00:22,400
notion of threshold secret sharing that

10
00:00:22,080 --> 00:00:25,038
was

11
00:00:22,400 --> 00:00:28,240
introduced in the seminal works of shame

12
00:00:25,039 --> 00:00:30,480
and blackly in the late 1970s

13
00:00:28,240 --> 00:00:32,000
in this setting there is a dealer who

14
00:00:30,480 --> 00:00:35,520
has a secret message

15
00:00:32,000 --> 00:00:36,399
s that is n bits law the dealer splits

16
00:00:35,520 --> 00:00:40,239
the secret

17
00:00:36,399 --> 00:00:42,160
into n shares sh1 up to shn with some

18
00:00:40,239 --> 00:00:44,879
threshold parameter d

19
00:00:42,160 --> 00:00:46,879
he then sends the ayat share ship to

20
00:00:44,879 --> 00:00:49,280
party pl

21
00:00:46,879 --> 00:00:52,320
we want a threshold secret sharing to

22
00:00:49,280 --> 00:00:54,160
satisfy the following two properties

23
00:00:52,320 --> 00:00:55,680
the first property which is called the

24
00:00:54,160 --> 00:00:58,319
correctness property

25
00:00:55,680 --> 00:01:00,399
requires that any group of more than t

26
00:00:58,320 --> 00:01:02,399
parties can come together

27
00:01:00,399 --> 00:01:04,159
use their shares to reconstruct the

28
00:01:02,399 --> 00:01:06,560
secret s

29
00:01:04,159 --> 00:01:07,439
the second property which is the secrecy

30
00:01:06,560 --> 00:01:09,760
property

31
00:01:07,439 --> 00:01:11,199
requires that the shares corresponding

32
00:01:09,760 --> 00:01:14,400
to any group of

33
00:01:11,200 --> 00:01:16,720
tea parties reveal no information about

34
00:01:14,400 --> 00:01:18,320
the underlying secret

35
00:01:16,720 --> 00:01:20,640
threshold secret sharing is a

36
00:01:18,320 --> 00:01:23,360
fundamental cryptographic primitive with

37
00:01:20,640 --> 00:01:24,240
numerous applications some of these

38
00:01:23,360 --> 00:01:27,119
applications

39
00:01:24,240 --> 00:01:28,960
include constructing secure multi-party

40
00:01:27,119 --> 00:01:30,880
computation protocols

41
00:01:28,960 --> 00:01:32,798
designing threshold cryptographic

42
00:01:30,880 --> 00:01:34,960
primitives constructing

43
00:01:32,799 --> 00:01:36,560
leakage resilient circuit compilers and

44
00:01:34,960 --> 00:01:39,039
so on

45
00:01:36,560 --> 00:01:40,479
however the basic version that i defined

46
00:01:39,040 --> 00:01:43,439
in the previous slide

47
00:01:40,479 --> 00:01:44,799
provides security only against passive

48
00:01:43,439 --> 00:01:47,360
adversities

49
00:01:44,799 --> 00:01:49,600
in order to protect against the stronger

50
00:01:47,360 --> 00:01:51,680
malicious adversaries

51
00:01:49,600 --> 00:01:53,679
there have been many strengthenings of

52
00:01:51,680 --> 00:01:54,880
threshold secret sharing that have been

53
00:01:53,680 --> 00:01:57,200
proposed

54
00:01:54,880 --> 00:01:59,439
some of these strengthenings include

55
00:01:57,200 --> 00:02:01,759
robust secret sharing

56
00:01:59,439 --> 00:02:04,559
verifiable secret sharing and the more

57
00:02:01,759 --> 00:02:07,040
recent non-malleable signature

58
00:02:04,560 --> 00:02:09,440
the focus of this work is on robust

59
00:02:07,040 --> 00:02:11,599
secret shop

60
00:02:09,440 --> 00:02:12,480
robber's secret sharing was introduced

61
00:02:11,599 --> 00:02:16,160
by robin

62
00:02:12,480 --> 00:02:17,920
and ben or in 1989. so it's just like

63
00:02:16,160 --> 00:02:19,200
any other threshold secret sharing

64
00:02:17,920 --> 00:02:21,200
scheme satisfying

65
00:02:19,200 --> 00:02:22,399
both the correctness and the secrecy

66
00:02:21,200 --> 00:02:25,040
properties

67
00:02:22,400 --> 00:02:27,280
in addition to these two properties we

68
00:02:25,040 --> 00:02:30,319
require a third property which is the

69
00:02:27,280 --> 00:02:32,720
robustness property

70
00:02:30,319 --> 00:02:33,518
roughly speaking this robustness

71
00:02:32,720 --> 00:02:36,400
property

72
00:02:33,519 --> 00:02:37,200
requires that any group of t corrupted

73
00:02:36,400 --> 00:02:40,000
parties

74
00:02:37,200 --> 00:02:41,119
who might deviate arbitrarily from the

75
00:02:40,000 --> 00:02:43,519
protocol

76
00:02:41,120 --> 00:02:47,200
cannot force an honest party to

77
00:02:43,519 --> 00:02:48,879
reconstruct to a wrong secret

78
00:02:47,200 --> 00:02:50,640
to give more details about the

79
00:02:48,879 --> 00:02:53,599
robustness let's consider the

80
00:02:50,640 --> 00:02:56,238
reconstruction phase of the protocol

81
00:02:53,599 --> 00:02:57,679
in the reconstruction the parties start

82
00:02:56,239 --> 00:03:00,640
with the shares that was

83
00:02:57,680 --> 00:03:02,800
handed over to them by the dealer we

84
00:03:00,640 --> 00:03:03,279
consider an adversary that could corrupt

85
00:03:02,800 --> 00:03:07,040
up to

86
00:03:03,280 --> 00:03:09,120
t of these parties the reconstruction

87
00:03:07,040 --> 00:03:11,280
could proceed in multiple rounds

88
00:03:09,120 --> 00:03:14,879
and in each round a party could send a

89
00:03:11,280 --> 00:03:16,959
message to every other party

90
00:03:14,879 --> 00:03:18,000
the honest parties will follow the

91
00:03:16,959 --> 00:03:20,400
protocol

92
00:03:18,000 --> 00:03:21,200
whereas the adversarial parties might

93
00:03:20,400 --> 00:03:24,080
deviate

94
00:03:21,200 --> 00:03:26,319
arbitrarily from the protocol at the end

95
00:03:24,080 --> 00:03:28,799
of the reconstruction the robustness

96
00:03:26,319 --> 00:03:29,679
requirement states that all the honest

97
00:03:28,799 --> 00:03:32,400
parties

98
00:03:29,680 --> 00:03:34,400
output the secret s that was originally

99
00:03:32,400 --> 00:03:36,640
shared

100
00:03:34,400 --> 00:03:38,159
here we might consider an adversary that

101
00:03:36,640 --> 00:03:41,518
can either be rushing

102
00:03:38,159 --> 00:03:43,120
or non russia the stronger rushing

103
00:03:41,519 --> 00:03:46,319
adversarial model

104
00:03:43,120 --> 00:03:49,200
allows a corrupted party to wait for

105
00:03:46,319 --> 00:03:50,399
all the messages from honest parties

106
00:03:49,200 --> 00:03:53,439
before sending its

107
00:03:50,400 --> 00:03:55,680
own message in a particular room

108
00:03:53,439 --> 00:03:57,439
for applications related to secure

109
00:03:55,680 --> 00:04:00,400
multi-party computation

110
00:03:57,439 --> 00:04:00,959
it is extremely crucial that the secret

111
00:04:00,400 --> 00:04:05,599
sharing

112
00:04:00,959 --> 00:04:05,599
is robust against rushing adversities

113
00:04:06,000 --> 00:04:09,920
the more formal definition of robustness

114
00:04:08,319 --> 00:04:12,560
is as follows

115
00:04:09,920 --> 00:04:13,359
a t out of n secret sharing scheme is

116
00:04:12,560 --> 00:04:16,560
said to be

117
00:04:13,360 --> 00:04:19,600
t comma n comma epsilon robust

118
00:04:16,560 --> 00:04:22,240
if for every malicious adversary a

119
00:04:19,600 --> 00:04:23,280
controlling up to t parties and for

120
00:04:22,240 --> 00:04:25,840
every secret

121
00:04:23,280 --> 00:04:26,799
s the probability that there is an

122
00:04:25,840 --> 00:04:29,599
honest party

123
00:04:26,800 --> 00:04:31,360
that output something different from s

124
00:04:29,600 --> 00:04:32,720
while interacting with a in the

125
00:04:31,360 --> 00:04:35,120
reconstruction phase

126
00:04:32,720 --> 00:04:36,000
is upper bounded by this parameter

127
00:04:35,120 --> 00:04:38,080
epsilon

128
00:04:36,000 --> 00:04:42,720
so one can think about epsilon as being

129
00:04:38,080 --> 00:04:44,800
the error parameter for the robustness

130
00:04:42,720 --> 00:04:46,000
given this definition of robustness let

131
00:04:44,800 --> 00:04:48,800
me state a couple of

132
00:04:46,000 --> 00:04:49,280
observations the first observation is

133
00:04:48,800 --> 00:04:51,919
that

134
00:04:49,280 --> 00:04:54,799
xiaomi secret sharing is perfectly

135
00:04:51,919 --> 00:04:57,198
robust that is epsilon is equal to 0

136
00:04:54,800 --> 00:04:58,080
when n is greater than or equal to 3 t

137
00:04:57,199 --> 00:04:59,680
plus 1

138
00:04:58,080 --> 00:05:01,840
and this follows due to the error

139
00:04:59,680 --> 00:05:04,160
correcting properties of read solvent

140
00:05:01,840 --> 00:05:04,159
codes

141
00:05:04,400 --> 00:05:08,320
on the other hand if an adversary is

142
00:05:06,400 --> 00:05:09,120
able to corrupt a majority of the

143
00:05:08,320 --> 00:05:11,440
parties

144
00:05:09,120 --> 00:05:12,720
in other words if n is less than or

145
00:05:11,440 --> 00:05:16,639
equal to 2t

146
00:05:12,720 --> 00:05:19,039
then robustness is impossible to achieve

147
00:05:16,639 --> 00:05:20,479
so the interesting set of parameters is

148
00:05:19,039 --> 00:05:25,360
when n lies between

149
00:05:20,479 --> 00:05:28,000
2t plus 1 and between t plus one

150
00:05:25,360 --> 00:05:31,919
and the most challenging setting here is

151
00:05:28,000 --> 00:05:31,919
when n is equal to two t plus one

152
00:05:32,960 --> 00:05:37,840
the work of robin and venor also gave a

153
00:05:36,000 --> 00:05:40,240
construction of robust secret sharing

154
00:05:37,840 --> 00:05:42,080
when n is equal to 2t plus 1

155
00:05:40,240 --> 00:05:44,080
with error parameter being true to the

156
00:05:42,080 --> 00:05:46,479
minus lambda

157
00:05:44,080 --> 00:05:47,120
the share size of their construction was

158
00:05:46,479 --> 00:05:49,440
m plus

159
00:05:47,120 --> 00:05:51,520
order n times lambda where m is the

160
00:05:49,440 --> 00:05:54,479
length of the secret

161
00:05:51,520 --> 00:05:57,039
when compared to the non-robust variant

162
00:05:54,479 --> 00:05:59,919
there is an additive overhead of order

163
00:05:57,039 --> 00:06:01,919
n times lambda in their construction so

164
00:05:59,919 --> 00:06:02,240
a natural question to ask is whether

165
00:06:01,919 --> 00:06:05,280
this

166
00:06:02,240 --> 00:06:08,800
overhead is necessary

167
00:06:05,280 --> 00:06:11,840
a work by carpentry at all in 94

168
00:06:08,800 --> 00:06:15,199
showed that for n being 2t plus 1

169
00:06:11,840 --> 00:06:17,039
an error being 2 to the minus lambda any

170
00:06:15,199 --> 00:06:19,280
robust secret sharing scheme

171
00:06:17,039 --> 00:06:20,080
has to have a share size which is at

172
00:06:19,280 --> 00:06:24,000
least n

173
00:06:20,080 --> 00:06:26,318
plus omega of lambda a couple of points

174
00:06:24,000 --> 00:06:28,560
to note about this result is that

175
00:06:26,319 --> 00:06:30,400
perfect robustness is impossible to

176
00:06:28,560 --> 00:06:32,880
achieve in this regime

177
00:06:30,400 --> 00:06:34,000
and furthermore the share size of a

178
00:06:32,880 --> 00:06:36,400
robust secret sharing

179
00:06:34,000 --> 00:06:39,440
scheme is strictly larger than their

180
00:06:36,400 --> 00:06:41,919
non-robust counterpart

181
00:06:39,440 --> 00:06:42,639
a long line of work followed and which

182
00:06:41,919 --> 00:06:44,799
has tried

183
00:06:42,639 --> 00:06:46,080
optimizing the share size of a robust

184
00:06:44,800 --> 00:06:49,599
secret sharing scheme

185
00:06:46,080 --> 00:06:51,198
to achieve this lower bound

186
00:06:49,599 --> 00:06:52,880
i would like to remark that there are

187
00:06:51,199 --> 00:06:55,039
many exciting words

188
00:06:52,880 --> 00:06:56,479
that consider the setting where t is

189
00:06:55,039 --> 00:06:59,280
equal to half minus

190
00:06:56,479 --> 00:07:02,639
delta times n where delta is some

191
00:06:59,280 --> 00:07:05,758
arbitrarily small constant however

192
00:07:02,639 --> 00:07:06,960
in this setting uh the lower bound of

193
00:07:05,759 --> 00:07:09,919
carpentry at all

194
00:07:06,960 --> 00:07:11,919
does not hold and in fact one can obtain

195
00:07:09,919 --> 00:07:13,840
a construction of robust secret sharing

196
00:07:11,919 --> 00:07:16,080
with the constant over it

197
00:07:13,840 --> 00:07:18,239
that is the share size is m plus order

198
00:07:16,080 --> 00:07:21,280
of one

199
00:07:18,240 --> 00:07:23,840
however the focus of this work is when

200
00:07:21,280 --> 00:07:26,000
n is equal to two t plus one and in this

201
00:07:23,840 --> 00:07:28,560
regime the lower bound of carpentry at

202
00:07:26,000 --> 00:07:28,560
all force

203
00:07:29,680 --> 00:07:34,560
so let me now uh give you details of the

204
00:07:32,560 --> 00:07:35,280
prior work on the setting where n is

205
00:07:34,560 --> 00:07:37,680
equal to 2

206
00:07:35,280 --> 00:07:40,638
t plus 1 and the prior work can be

207
00:07:37,680 --> 00:07:43,599
summarized in this following table

208
00:07:40,639 --> 00:07:45,440
the work of kramer at all in 2001

209
00:07:43,599 --> 00:07:46,560
improved upon the robin bernard

210
00:07:45,440 --> 00:07:49,280
construction

211
00:07:46,560 --> 00:07:50,479
by giving a robust secret sharing scheme

212
00:07:49,280 --> 00:07:53,440
whose share size is

213
00:07:50,479 --> 00:07:54,318
m which is the length of the secret plus

214
00:07:53,440 --> 00:07:57,680
o prime of

215
00:07:54,319 --> 00:08:00,319
n plus lambda here o prime hides poly

216
00:07:57,680 --> 00:08:02,720
logarithmic factors

217
00:08:00,319 --> 00:08:03,759
however the reconstruction complexity in

218
00:08:02,720 --> 00:08:06,639
their construction

219
00:08:03,759 --> 00:08:08,080
was exponential in the number of parties

220
00:08:06,639 --> 00:08:12,000
and it was only proved

221
00:08:08,080 --> 00:08:15,520
secure against non-rushing adversaries

222
00:08:12,000 --> 00:08:18,000
work by savalos at all in 2012

223
00:08:15,520 --> 00:08:20,479
gave a construction that had a similar

224
00:08:18,000 --> 00:08:23,120
share size as that of cramer at all

225
00:08:20,479 --> 00:08:24,000
but it had an efficient reconstruction

226
00:08:23,120 --> 00:08:26,160
procedure

227
00:08:24,000 --> 00:08:28,720
and was proven secure against the

228
00:08:26,160 --> 00:08:32,080
rushing adversaries

229
00:08:28,720 --> 00:08:33,120
in 2016 a work by bishop at all gave a

230
00:08:32,080 --> 00:08:35,919
construction which

231
00:08:33,120 --> 00:08:37,279
had a near optimal share size of m plus

232
00:08:35,919 --> 00:08:39,039
o prime of lambda

233
00:08:37,279 --> 00:08:40,320
and it also had an efficient

234
00:08:39,039 --> 00:08:42,479
reconstruction

235
00:08:40,320 --> 00:08:45,440
unfortunately it was proven secure

236
00:08:42,479 --> 00:08:47,839
against non-rushing adversaries

237
00:08:45,440 --> 00:08:50,320
last year fair and yuan gave two

238
00:08:47,839 --> 00:08:52,480
constructions of proper secret share

239
00:08:50,320 --> 00:08:53,360
the first construction had a share size

240
00:08:52,480 --> 00:08:56,480
of m plus

241
00:08:53,360 --> 00:08:58,720
o prime of n to the epsilon times lambda

242
00:08:56,480 --> 00:09:00,320
where epsilon could be an arbitrarily

243
00:08:58,720 --> 00:09:03,760
small constant

244
00:09:00,320 --> 00:09:05,120
the reconstruction in their work was

245
00:09:03,760 --> 00:09:07,439
efficient and it was

246
00:09:05,120 --> 00:09:09,519
proven secure against the stronger

247
00:09:07,440 --> 00:09:11,600
rushing adversaries

248
00:09:09,519 --> 00:09:13,839
they also gave another construction

249
00:09:11,600 --> 00:09:15,120
which had a near optimal share size with

250
00:09:13,839 --> 00:09:18,160
security against

251
00:09:15,120 --> 00:09:19,839
rushing adversary but the reconstruction

252
00:09:18,160 --> 00:09:24,160
was slightly super polar

253
00:09:19,839 --> 00:09:26,080
polynomial so the open problem which was

254
00:09:24,160 --> 00:09:27,519
which follows from this long line of

255
00:09:26,080 --> 00:09:29,600
work is to get

256
00:09:27,519 --> 00:09:31,839
a construction of robust secret sharing

257
00:09:29,600 --> 00:09:33,839
with the near optimal share size

258
00:09:31,839 --> 00:09:36,480
with an efficient reconstruction

259
00:09:33,839 --> 00:09:40,000
procedure and with security against

260
00:09:36,480 --> 00:09:42,080
rushing adversaries in this work we

261
00:09:40,000 --> 00:09:44,000
resolve this question in the positive by

262
00:09:42,080 --> 00:09:46,240
giving a robust secret sharing for

263
00:09:44,000 --> 00:09:48,399
the case where n is equal to two t plus

264
00:09:46,240 --> 00:09:51,120
one with security against

265
00:09:48,399 --> 00:09:52,399
rushing adversaries and the share size

266
00:09:51,120 --> 00:09:55,680
of our construction is

267
00:09:52,399 --> 00:09:55,920
m plus order of lambda times log square

268
00:09:55,680 --> 00:09:58,959
n

269
00:09:55,920 --> 00:10:01,199
plus log n times log n here

270
00:09:58,959 --> 00:10:02,800
m is the length of the secret lambda is

271
00:10:01,200 --> 00:10:05,200
the error parameter

272
00:10:02,800 --> 00:10:07,199
n is the number of parties an

273
00:10:05,200 --> 00:10:09,279
interesting point to note is that even

274
00:10:07,200 --> 00:10:12,560
when restricted to the non rushing

275
00:10:09,279 --> 00:10:15,120
case our share size is better than the

276
00:10:12,560 --> 00:10:17,359
prior best known work by bishop at all

277
00:10:15,120 --> 00:10:19,600
in 2016.

278
00:10:17,360 --> 00:10:21,920
furthermore our reconstruction is

279
00:10:19,600 --> 00:10:25,120
polynomial time and it only involves two

280
00:10:21,920 --> 00:10:25,120
rounds of communication

281
00:10:25,440 --> 00:10:29,920
so our work completes this table by

282
00:10:28,160 --> 00:10:32,160
giving a construction with the near

283
00:10:29,920 --> 00:10:33,839
optimal share size with polynomial time

284
00:10:32,160 --> 00:10:35,600
reconstruction procedure

285
00:10:33,839 --> 00:10:39,519
and its proven secure against the

286
00:10:35,600 --> 00:10:39,519
stronger rushing adversaries

287
00:10:41,360 --> 00:10:46,160
i would like to remark that in a

288
00:10:43,839 --> 00:10:48,640
concurrent and an independent work

289
00:10:46,160 --> 00:10:50,480
fair and one gave a construction of

290
00:10:48,640 --> 00:10:52,640
nearly optimal robust secret sharing

291
00:10:50,480 --> 00:10:55,519
against crushing adversaries

292
00:10:52,640 --> 00:10:57,040
when compared to our construction the

293
00:10:55,519 --> 00:11:00,079
share size is slightly

294
00:10:57,040 --> 00:11:02,640
larger and the reconstruction requires

295
00:11:00,079 --> 00:11:04,880
five rounds when compared to our two

296
00:11:02,640 --> 00:11:07,199
round reconstruction

297
00:11:04,880 --> 00:11:08,800
and furthermore the techniques used in

298
00:11:07,200 --> 00:11:11,120
both these works are completely

299
00:11:08,800 --> 00:11:12,880
different

300
00:11:11,120 --> 00:11:15,200
in the rest of the talk i would like to

301
00:11:12,880 --> 00:11:17,680
give you details of our construction and

302
00:11:15,200 --> 00:11:19,360
explain how we achieve a near optimal

303
00:11:17,680 --> 00:11:21,439
share

304
00:11:19,360 --> 00:11:22,399
but before we move on to our

305
00:11:21,440 --> 00:11:25,120
construction

306
00:11:22,399 --> 00:11:25,920
i would like to explain the ravin ben or

307
00:11:25,120 --> 00:11:29,519
construction

308
00:11:25,920 --> 00:11:31,439
and which serves as our starting point

309
00:11:29,519 --> 00:11:34,000
okay so let's take a look at the rabbit

310
00:11:31,440 --> 00:11:36,160
ben or construction

311
00:11:34,000 --> 00:11:37,600
so the rav in venue construction takes

312
00:11:36,160 --> 00:11:40,719
the secret s

313
00:11:37,600 --> 00:11:44,160
and first shares it using

314
00:11:40,720 --> 00:11:47,200
shamir secret sharing to get n chef ss1

315
00:11:44,160 --> 00:11:47,199
up to ssn

316
00:11:47,600 --> 00:11:54,399
next for every party and for every

317
00:11:50,880 --> 00:11:58,000
i in n we choose a random mac

318
00:11:54,399 --> 00:12:01,839
key and compute the tag on the ayat

319
00:11:58,000 --> 00:12:05,279
shamir share using this key

320
00:12:01,839 --> 00:12:08,839
and the share of a party includes its

321
00:12:05,279 --> 00:12:11,360
shamie share on the n pairs of ki

322
00:12:08,839 --> 00:12:14,160
kamatax

323
00:12:11,360 --> 00:12:15,040
so this can easily be shown to be

324
00:12:14,160 --> 00:12:17,760
correct

325
00:12:15,040 --> 00:12:19,519
but in order to prove security we need

326
00:12:17,760 --> 00:12:22,880
to be slightly careful

327
00:12:19,519 --> 00:12:24,000
this is because the the tag could reveal

328
00:12:22,880 --> 00:12:26,720
information about

329
00:12:24,000 --> 00:12:27,040
the shares of the other parties and it's

330
00:12:26,720 --> 00:12:29,040
not

331
00:12:27,040 --> 00:12:31,279
entirely clear on how we can prove the

332
00:12:29,040 --> 00:12:34,399
secrecy of this construction

333
00:12:31,279 --> 00:12:36,560
to ensure privacy we use what is called

334
00:12:34,399 --> 00:12:39,120
as a private tax scheme

335
00:12:36,560 --> 00:12:40,079
that is the property that this private

336
00:12:39,120 --> 00:12:42,639
tax scheme

337
00:12:40,079 --> 00:12:43,279
satisfies is that the key command tag

338
00:12:42,639 --> 00:12:45,760
pair

339
00:12:43,279 --> 00:12:46,399
does not give any information about the

340
00:12:45,760 --> 00:12:49,439
underlying

341
00:12:46,399 --> 00:12:51,920
message so if we use this

342
00:12:49,440 --> 00:12:56,079
private tax scheme we can prove the

343
00:12:51,920 --> 00:12:58,399
secrecy property of this construction

344
00:12:56,079 --> 00:12:59,599
so let's see how we prove robustness but

345
00:12:58,399 --> 00:13:02,720
before that let me

346
00:12:59,600 --> 00:13:04,720
explain the reconstruction procedure so

347
00:13:02,720 --> 00:13:07,200
in the raven benoc construction

348
00:13:04,720 --> 00:13:09,040
reconstruction just involves a single

349
00:13:07,200 --> 00:13:12,639
round of communication

350
00:13:09,040 --> 00:13:15,839
so in this round each party broadcasts

351
00:13:12,639 --> 00:13:18,160
its shame share to every other party

352
00:13:15,839 --> 00:13:20,000
note that the parties do not broadcast

353
00:13:18,160 --> 00:13:23,839
the key command tag base and these

354
00:13:20,000 --> 00:13:26,480
are private and known only to this part

355
00:13:23,839 --> 00:13:27,519
so we now consider an adversary who can

356
00:13:26,480 --> 00:13:30,399
corrupt up to

357
00:13:27,519 --> 00:13:31,680
tea parties and since we consider a

358
00:13:30,399 --> 00:13:33,920
malicious adversary

359
00:13:31,680 --> 00:13:35,760
the broadcasted share of the corrupted

360
00:13:33,920 --> 00:13:37,519
parties could be different from the

361
00:13:35,760 --> 00:13:39,920
share that was given to them by the

362
00:13:37,519 --> 00:13:39,920
dealer

363
00:13:40,720 --> 00:13:47,040
once a party of let's call it spi

364
00:13:44,000 --> 00:13:47,440
receives all the broadcasted shares it

365
00:13:47,040 --> 00:13:51,040
just

366
00:13:47,440 --> 00:13:54,079
checks if the tag is valid

367
00:13:51,040 --> 00:13:56,639
note that it follows from the uh the

368
00:13:54,079 --> 00:13:59,120
security property of the tag scheme

369
00:13:56,639 --> 00:14:01,360
that if an adversarial party has

370
00:13:59,120 --> 00:14:04,000
modified the shame share

371
00:14:01,360 --> 00:14:07,279
then the verification of the tax scheme

372
00:14:04,000 --> 00:14:09,440
fails with overwhelming probability

373
00:14:07,279 --> 00:14:11,360
so what a party does is that it just

374
00:14:09,440 --> 00:14:12,240
collects the shares for which the

375
00:14:11,360 --> 00:14:15,120
verification

376
00:14:12,240 --> 00:14:15,519
passes and does a shummy reconstruction

377
00:14:15,120 --> 00:14:19,040
to

378
00:14:15,519 --> 00:14:19,040
recover the original secret

379
00:14:20,320 --> 00:14:23,760
unfortunately the main drawback of this

380
00:14:22,320 --> 00:14:26,639
construction is that the

381
00:14:23,760 --> 00:14:27,600
size of each share is m plus order n

382
00:14:26,639 --> 00:14:31,839
times lambda

383
00:14:27,600 --> 00:14:33,760
and which is very far from being optimal

384
00:14:31,839 --> 00:14:35,920
so let us now take a look at our

385
00:14:33,760 --> 00:14:39,040
construction and let's see how we can

386
00:14:35,920 --> 00:14:39,040
improve the share size

387
00:14:40,000 --> 00:14:43,040
the first step in our construction is

388
00:14:42,079 --> 00:14:45,199
exactly

389
00:14:43,040 --> 00:14:47,279
same as the rabin penor construction

390
00:14:45,199 --> 00:14:51,199
that is we take this secret

391
00:14:47,279 --> 00:14:54,480
and share it into n shares ss1 to ssn

392
00:14:51,199 --> 00:14:54,880
using swami's secret sharing the second

393
00:14:54,480 --> 00:14:57,279
step

394
00:14:54,880 --> 00:14:58,880
is where we differ from the rabbin penor

395
00:14:57,279 --> 00:15:02,160
construction

396
00:14:58,880 --> 00:15:03,600
specifically instead of choosing a key

397
00:15:02,160 --> 00:15:07,600
and computing the tag

398
00:15:03,600 --> 00:15:10,800
for every i and n what we do is that for

399
00:15:07,600 --> 00:15:14,800
every party we choose a random subset

400
00:15:10,800 --> 00:15:17,760
of the set 1 to n with size order log

401
00:15:14,800 --> 00:15:20,160
n and we call this subset as the watch

402
00:15:17,760 --> 00:15:23,360
list of this part

403
00:15:20,160 --> 00:15:26,639
for every i in the watch list we

404
00:15:23,360 --> 00:15:30,639
choose a random mac key and compute the

405
00:15:26,639 --> 00:15:33,839
tag on the ayat shameesha using this key

406
00:15:30,639 --> 00:15:35,040
and the share for the party includes its

407
00:15:33,839 --> 00:15:37,920
shame share

408
00:15:35,040 --> 00:15:38,240
and the key comma tag page corresponding

409
00:15:37,920 --> 00:15:41,680
to

410
00:15:38,240 --> 00:15:44,240
every element of its watch list

411
00:15:41,680 --> 00:15:46,079
note that since the size of each party's

412
00:15:44,240 --> 00:15:48,160
watch list is order login

413
00:15:46,079 --> 00:15:52,638
the overhead that we achieve in this

414
00:15:48,160 --> 00:15:52,639
construction is order lambda times log

415
00:15:53,360 --> 00:15:59,040
the idea of using watch list of small

416
00:15:56,800 --> 00:16:01,359
size to authenticate the shares goes

417
00:15:59,040 --> 00:16:02,560
back to the work of bishop at all and is

418
00:16:01,360 --> 00:16:05,199
called as the local

419
00:16:02,560 --> 00:16:06,719
authentication paradigm specifically

420
00:16:05,199 --> 00:16:09,920
instead of authenticating

421
00:16:06,720 --> 00:16:10,639
every share we choose a local random

422
00:16:09,920 --> 00:16:12,319
subset

423
00:16:10,639 --> 00:16:13,680
and authenticate the shares

424
00:16:12,320 --> 00:16:16,399
corresponding to

425
00:16:13,680 --> 00:16:16,399
this subset

426
00:16:17,920 --> 00:16:22,880
but given this locally computed shares

427
00:16:20,959 --> 00:16:25,599
the reconstruction procedure is not

428
00:16:22,880 --> 00:16:27,519
no longer as straightforward as the

429
00:16:25,600 --> 00:16:28,880
previous lab and pandora construction

430
00:16:27,519 --> 00:16:30,959
so let us take a look at our

431
00:16:28,880 --> 00:16:32,639
reconstruction procedure

432
00:16:30,959 --> 00:16:34,839
so as i had mentioned before our

433
00:16:32,639 --> 00:16:36,000
reconstruction involves two rounds of

434
00:16:34,839 --> 00:16:38,480
communication

435
00:16:36,000 --> 00:16:39,839
and let us take a look at the first one

436
00:16:38,480 --> 00:16:42,560
in the first round

437
00:16:39,839 --> 00:16:45,120
the parties just broadcast the swami

438
00:16:42,560 --> 00:16:47,279
share to every other party

439
00:16:45,120 --> 00:16:48,399
as before we consider an adversary that

440
00:16:47,279 --> 00:16:51,519
could corrupt up to

441
00:16:48,399 --> 00:16:53,600
t parties and since we consider a

442
00:16:51,519 --> 00:16:55,279
malicious adversary the broadcasted

443
00:16:53,600 --> 00:16:57,040
share could be different from the share

444
00:16:55,279 --> 00:16:59,360
that was handed over to them by the

445
00:16:57,040 --> 00:17:01,839
dealer

446
00:16:59,360 --> 00:17:03,279
unlike the rabbit bin or construction a

447
00:17:01,839 --> 00:17:06,160
honest party cannot

448
00:17:03,279 --> 00:17:08,400
check if every received share was

449
00:17:06,160 --> 00:17:10,559
modified or not because it does not have

450
00:17:08,400 --> 00:17:14,240
enough key command tactics

451
00:17:10,559 --> 00:17:16,319
but what it can do is to check the the

452
00:17:14,240 --> 00:17:17,599
receive shares for those corresponding

453
00:17:16,319 --> 00:17:20,720
to its list

454
00:17:17,599 --> 00:17:23,839
so that is what the honest party does so

455
00:17:20,720 --> 00:17:26,160
and one is party p i uh for every

456
00:17:23,839 --> 00:17:26,559
element j in its watch list it checks if

457
00:17:26,160 --> 00:17:29,840
the

458
00:17:26,559 --> 00:17:32,000
the jth received share was correct that

459
00:17:29,840 --> 00:17:32,959
is it checks whether the tag is valid or

460
00:17:32,000 --> 00:17:36,000
not

461
00:17:32,960 --> 00:17:36,320
if the tag is valid it labels the party

462
00:17:36,000 --> 00:17:38,799
j

463
00:17:36,320 --> 00:17:40,879
as being good otherwise it labels the

464
00:17:38,799 --> 00:17:43,918
party j as being banned

465
00:17:40,880 --> 00:17:46,640
in the second round each party just

466
00:17:43,919 --> 00:17:48,559
broadcasts the set of labels for

467
00:17:46,640 --> 00:17:50,080
corresponding to parties in its own

468
00:17:48,559 --> 00:17:51,600
watches

469
00:17:50,080 --> 00:17:54,320
so this is the second round of

470
00:17:51,600 --> 00:17:54,320
communication

471
00:17:54,880 --> 00:17:59,760
now at the end of the second round every

472
00:17:57,600 --> 00:18:02,959
party has the labeled watch list

473
00:17:59,760 --> 00:18:05,280
of every other party let me make a

474
00:18:02,960 --> 00:18:07,679
couple of quick observations

475
00:18:05,280 --> 00:18:08,720
the first observation is that an honest

476
00:18:07,679 --> 00:18:11,440
party

477
00:18:08,720 --> 00:18:13,679
always labels an other honest party in

478
00:18:11,440 --> 00:18:15,039
its watch list as being good

479
00:18:13,679 --> 00:18:17,840
and this just follows from the

480
00:18:15,039 --> 00:18:20,720
correctness of the tax

481
00:18:17,840 --> 00:18:21,120
on the other hand if an honest party has

482
00:18:20,720 --> 00:18:23,679
a

483
00:18:21,120 --> 00:18:25,039
corrupted party in its watch list and if

484
00:18:23,679 --> 00:18:27,840
this corrupted party

485
00:18:25,039 --> 00:18:29,440
has modified the share then with

486
00:18:27,840 --> 00:18:31,760
overwhelming probability

487
00:18:29,440 --> 00:18:32,559
it labels that corrupted party as being

488
00:18:31,760 --> 00:18:35,200
packed

489
00:18:32,559 --> 00:18:38,240
and this just follows from the security

490
00:18:35,200 --> 00:18:38,240
property of the tax

491
00:18:38,640 --> 00:18:43,520
on the other hand a corrupted party

492
00:18:41,200 --> 00:18:46,320
might choose an arbitrary labeling

493
00:18:43,520 --> 00:18:47,760
it could label an other corrupted party

494
00:18:46,320 --> 00:18:49,520
as being good

495
00:18:47,760 --> 00:18:51,120
on the other hand it can also label and

496
00:18:49,520 --> 00:18:54,559
honest party is being

497
00:18:51,120 --> 00:18:56,559
backed furthermore since we allow the

498
00:18:54,559 --> 00:18:58,720
adversaries to be rushing

499
00:18:56,559 --> 00:18:59,840
then the labelings of the corrupted

500
00:18:58,720 --> 00:19:01,840
parties can

501
00:18:59,840 --> 00:19:04,320
depend on the labelings of the honest

502
00:19:01,840 --> 00:19:04,320
partners

503
00:19:05,200 --> 00:19:08,720
so given these two observations let us

504
00:19:07,520 --> 00:19:11,039
consider the

505
00:19:08,720 --> 00:19:12,080
graph that is restricted to the set of

506
00:19:11,039 --> 00:19:14,559
bad edges

507
00:19:12,080 --> 00:19:15,678
that is we remove all the edges that are

508
00:19:14,559 --> 00:19:18,799
labeled as good

509
00:19:15,679 --> 00:19:22,320
and we just include the labels that are

510
00:19:18,799 --> 00:19:24,720
that are we just include the edges that

511
00:19:22,320 --> 00:19:26,720
are labeled as being bad

512
00:19:24,720 --> 00:19:28,160
so in this restricted graph one can

513
00:19:26,720 --> 00:19:30,799
easily observe that

514
00:19:28,160 --> 00:19:32,799
the set of hornets parties will form an

515
00:19:30,799 --> 00:19:34,799
independent cell

516
00:19:32,799 --> 00:19:39,440
this is because every honest party will

517
00:19:34,799 --> 00:19:42,480
label another honest party as being good

518
00:19:39,440 --> 00:19:44,559
and it's not too hard to show that

519
00:19:42,480 --> 00:19:46,080
the maximum independent set on this

520
00:19:44,559 --> 00:19:48,399
restricted graph

521
00:19:46,080 --> 00:19:49,199
contains a large number of hornets

522
00:19:48,400 --> 00:19:51,919
parties

523
00:19:49,200 --> 00:19:54,000
and contains only a few adversarial

524
00:19:51,919 --> 00:19:56,640
parties

525
00:19:54,000 --> 00:19:58,720
so this just follows from the fact that

526
00:19:56,640 --> 00:19:59,440
the edges from the honest parties are

527
00:19:58,720 --> 00:20:03,039
chosen

528
00:19:59,440 --> 00:20:04,799
uniformly at run so this gives a very

529
00:20:03,039 --> 00:20:07,760
natural approach to

530
00:20:04,799 --> 00:20:08,879
reconstruct the original secret just

531
00:20:07,760 --> 00:20:11,919
find the maximum

532
00:20:08,880 --> 00:20:14,720
independent set on this restricted graph

533
00:20:11,919 --> 00:20:16,559
and do a read solomon decoding on the

534
00:20:14,720 --> 00:20:17,520
shares corresponding to this independent

535
00:20:16,559 --> 00:20:19,918
set

536
00:20:17,520 --> 00:20:21,200
since this independent set is guaranteed

537
00:20:19,919 --> 00:20:23,760
to contain a large

538
00:20:21,200 --> 00:20:25,760
number of honest parties and only a few

539
00:20:23,760 --> 00:20:27,600
number of adversarial parties

540
00:20:25,760 --> 00:20:29,280
the read solomon error correcting

541
00:20:27,600 --> 00:20:31,360
properties ensure that the

542
00:20:29,280 --> 00:20:34,320
reconstructed secret is same as the

543
00:20:31,360 --> 00:20:37,120
original secret so

544
00:20:34,320 --> 00:20:38,799
this is the main idea but unfortunately

545
00:20:37,120 --> 00:20:41,039
in order to make this idea

546
00:20:38,799 --> 00:20:42,720
work you need to find the maximum

547
00:20:41,039 --> 00:20:44,400
independent set on this graph in

548
00:20:42,720 --> 00:20:46,720
polynomial time

549
00:20:44,400 --> 00:20:47,440
but recall that ah it is a classic

550
00:20:46,720 --> 00:20:49,600
result that

551
00:20:47,440 --> 00:20:53,039
finding the maximum independent set is

552
00:20:49,600 --> 00:20:55,280
np hard on worst case class

553
00:20:53,039 --> 00:20:57,600
but what goes in favor for us is that

554
00:20:55,280 --> 00:21:00,080
this graph that is generated is not

555
00:20:57,600 --> 00:21:00,639
worst case and in fact there are some

556
00:21:00,080 --> 00:21:03,199
random

557
00:21:00,640 --> 00:21:04,880
edges specifically the edges from the

558
00:21:03,200 --> 00:21:07,919
harness parties are chosen

559
00:21:04,880 --> 00:21:10,880
uniformly at run

560
00:21:07,919 --> 00:21:12,880
in spite of this favorable point we do

561
00:21:10,880 --> 00:21:14,880
not know how to find the maximum

562
00:21:12,880 --> 00:21:18,559
independence set in this

563
00:21:14,880 --> 00:21:21,679
graph in polynomial time but what we do

564
00:21:18,559 --> 00:21:22,559
know is that we can find a set s such

565
00:21:21,679 --> 00:21:24,880
that the set

566
00:21:22,559 --> 00:21:26,240
s has a large intersection with the set

567
00:21:24,880 --> 00:21:28,159
of hardness parties

568
00:21:26,240 --> 00:21:30,400
and has a small intersection with the

569
00:21:28,159 --> 00:21:33,440
set of corrupted parties

570
00:21:30,400 --> 00:21:35,520
once we find this set as we can like

571
00:21:33,440 --> 00:21:38,320
before do a read solvent decoding to

572
00:21:35,520 --> 00:21:40,400
recover the actual c vector

573
00:21:38,320 --> 00:21:41,918
and one of the main contributions in our

574
00:21:40,400 --> 00:21:44,159
work is to find

575
00:21:41,919 --> 00:21:46,159
is to give a polynomial time algorithm

576
00:21:44,159 --> 00:21:48,960
for finding this set test

577
00:21:46,159 --> 00:21:52,480
and we call this algorithm as the vertex

578
00:21:48,960 --> 00:21:52,480
identification algorithm

579
00:21:52,799 --> 00:21:58,080
unfortunately uh i wouldn't have time to

580
00:21:56,159 --> 00:22:00,559
go into the details of this

581
00:21:58,080 --> 00:22:02,320
vertex identification algorithm and i

582
00:22:00,559 --> 00:22:04,158
would encourage you to look into our

583
00:22:02,320 --> 00:22:06,320
paper

584
00:22:04,159 --> 00:22:07,600
so this brings this brings me to the

585
00:22:06,320 --> 00:22:10,158
last slide

586
00:22:07,600 --> 00:22:10,639
so in this work we gave a construction

587
00:22:10,159 --> 00:22:13,280
of

588
00:22:10,640 --> 00:22:15,039
robust secret sharing with an efficient

589
00:22:13,280 --> 00:22:17,520
reconstruction procedure

590
00:22:15,039 --> 00:22:18,320
for the case where n is equal to two t

591
00:22:17,520 --> 00:22:20,799
plus one

592
00:22:18,320 --> 00:22:22,399
and a construction had security against

593
00:22:20,799 --> 00:22:25,520
rushing adversaries and

594
00:22:22,400 --> 00:22:28,240
had a near optimal share size

595
00:22:25,520 --> 00:22:29,520
some of the open problems uh that have

596
00:22:28,240 --> 00:22:32,960
been

597
00:22:29,520 --> 00:22:35,760
it to resolve are the following

598
00:22:32,960 --> 00:22:36,400
so our share size has a poly logarithmic

599
00:22:35,760 --> 00:22:38,960
overhead

600
00:22:36,400 --> 00:22:41,120
over this factor lambda so share size is

601
00:22:38,960 --> 00:22:42,960
n plus o prime of lambda

602
00:22:41,120 --> 00:22:44,399
and the question is is this poly

603
00:22:42,960 --> 00:22:47,360
logarithmic overhead

604
00:22:44,400 --> 00:22:49,360
necessary another interesting open

605
00:22:47,360 --> 00:22:52,479
problem is to improve the concrete

606
00:22:49,360 --> 00:22:54,479
efficiency of a construction

607
00:22:52,480 --> 00:22:55,919
so that's it thank you for your

608
00:22:54,480 --> 00:23:02,640
attention and you can find

609
00:22:55,919 --> 00:23:02,640
the full version of our paper on

