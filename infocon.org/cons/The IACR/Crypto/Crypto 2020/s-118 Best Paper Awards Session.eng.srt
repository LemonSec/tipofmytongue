1
00:00:06,799 --> 00:00:10,160
is the screen sharing working

2
00:00:14,920 --> 00:00:17,920
yes

3
00:00:16,239 --> 00:00:19,279
okay so we're a little bit behind

4
00:00:17,920 --> 00:00:22,400
schedule uh but

5
00:00:19,279 --> 00:00:23,439
should i shall we start or uh please

6
00:00:22,400 --> 00:00:27,198
start please start

7
00:00:23,439 --> 00:00:30,960
okay okay so welcome everybody to the

8
00:00:27,199 --> 00:00:30,960
best paper award session

9
00:00:31,039 --> 00:00:36,320
me and tom will be sharing it tom is on

10
00:00:34,320 --> 00:00:38,399
the chat

11
00:00:36,320 --> 00:00:39,520
window remember you can ask questions

12
00:00:38,399 --> 00:00:43,200
during all talks

13
00:00:39,520 --> 00:00:44,399
by posting them on zulip or on the zoom

14
00:00:43,200 --> 00:00:46,960
chat and

15
00:00:44,399 --> 00:00:47,520
tommy will bring them up at the end of

16
00:00:46,960 --> 00:00:51,600
the

17
00:00:47,520 --> 00:00:55,360
session so as usual as every year

18
00:00:51,600 --> 00:00:58,879
crypto recognizes some papers

19
00:00:55,360 --> 00:01:02,480
with an award and this year

20
00:00:58,879 --> 00:01:03,519
we selected the as the best young

21
00:01:02,480 --> 00:01:06,560
researcher award

22
00:01:03,520 --> 00:01:09,119
recipient to the work by joseph

23
00:01:06,560 --> 00:01:11,200
jagger and nirvana thiazi handling

24
00:01:09,119 --> 00:01:12,560
adaptive compromise for practical

25
00:01:11,200 --> 00:01:14,799
encryption schemes

26
00:01:12,560 --> 00:01:15,920
so this work was already presented as

27
00:01:14,799 --> 00:01:18,400
the opening talk

28
00:01:15,920 --> 00:01:20,080
for the conference yesterday if you

29
00:01:18,400 --> 00:01:21,040
missed the presentation you can watch

30
00:01:20,080 --> 00:01:24,080
the recorded

31
00:01:21,040 --> 00:01:27,680
video for the

32
00:01:24,080 --> 00:01:28,880
for the best paper award we selected the

33
00:01:27,680 --> 00:01:31,119
not one about

34
00:01:28,880 --> 00:01:32,560
three papers in three different areas of

35
00:01:31,119 --> 00:01:36,079
the cryptography

36
00:01:32,560 --> 00:01:39,920
in no particular order the one award

37
00:01:36,079 --> 00:01:42,158
went to the work of susan henberger

38
00:01:39,920 --> 00:01:44,079
then katakopula and brent waters for

39
00:01:42,159 --> 00:01:47,119
their work on chosen ciphertext

40
00:01:44,079 --> 00:01:50,158
security from injective trapdoor

41
00:01:47,119 --> 00:01:52,880
functions another award went

42
00:01:50,159 --> 00:01:54,079
to wooter castric janna sotakova and

43
00:01:52,880 --> 00:01:56,158
frederick vercatherine

44
00:01:54,079 --> 00:01:58,559
for their work on breaking the

45
00:01:56,159 --> 00:02:01,280
decisional diffie-hellman problem

46
00:01:58,560 --> 00:02:02,399
for class group actions using genus

47
00:02:01,280 --> 00:02:05,520
theory

48
00:02:02,399 --> 00:02:06,159
and then finally an award went to

49
00:02:05,520 --> 00:02:08,959
christoph

50
00:02:06,159 --> 00:02:11,120
girl gregor lander and josuke todo for

51
00:02:08,959 --> 00:02:14,480
their work on improve the differential

52
00:02:11,120 --> 00:02:17,520
linear attacks with applications to

53
00:02:14,480 --> 00:02:18,319
arcs ciphers so without further ado

54
00:02:17,520 --> 00:02:22,000
let's move

55
00:02:18,319 --> 00:02:25,440
to the first talk of the session

56
00:02:22,000 --> 00:02:26,720
so i'll um how do we do this i'll close

57
00:02:25,440 --> 00:02:37,040
my screen sharing

58
00:02:26,720 --> 00:02:41,920
so that we can get the first speaker

59
00:02:37,040 --> 00:02:41,920
okay um can everyone see this okay yes

60
00:02:42,000 --> 00:02:47,599
okay uh so i'm brent waters and i'll be

61
00:02:45,280 --> 00:02:50,000
talking about chosen ciphertext security

62
00:02:47,599 --> 00:02:51,760
um from trapdoor functions this is joint

63
00:02:50,000 --> 00:02:54,800
work with susan hoenberger

64
00:02:51,760 --> 00:02:55,920
and venkata coppola before i begin i

65
00:02:54,800 --> 00:02:57,519
just want to give you a thank you on

66
00:02:55,920 --> 00:02:58,958
behalf of all of us for the award it's a

67
00:02:57,519 --> 00:03:01,040
great honor

68
00:02:58,959 --> 00:03:02,319
i can't say i pictured giving such a

69
00:03:01,040 --> 00:03:04,799
talk from my

70
00:03:02,319 --> 00:03:06,399
office in austin texas but i guess uh

71
00:03:04,800 --> 00:03:08,879
you can't always predict how things will

72
00:03:06,400 --> 00:03:08,879
go in life

73
00:03:08,959 --> 00:03:12,000
okay so i'd like to begin by reviewing a

74
00:03:10,800 --> 00:03:14,000
very fundamental

75
00:03:12,000 --> 00:03:15,440
building block of cryptography which is

76
00:03:14,000 --> 00:03:17,360
public key encryption

77
00:03:15,440 --> 00:03:19,359
a public encryption system has three

78
00:03:17,360 --> 00:03:20,080
algorithms the first is a setup

79
00:03:19,360 --> 00:03:21,599
algorithm

80
00:03:20,080 --> 00:03:23,120
which takes is input a public key and a

81
00:03:21,599 --> 00:03:24,879
secret key or

82
00:03:23,120 --> 00:03:27,360
sorry outputs a public and secret key

83
00:03:24,879 --> 00:03:29,679
pair next the encryption algorithm takes

84
00:03:27,360 --> 00:03:32,080
his input the public key and a message m

85
00:03:29,680 --> 00:03:33,920
now puts a cipher text which i'll denote

86
00:03:32,080 --> 00:03:37,200
as the highlighted version of m

87
00:03:33,920 --> 00:03:37,599
and then finally um sorry let me change

88
00:03:37,200 --> 00:03:39,518
something

89
00:03:37,599 --> 00:03:40,798
and then finally there's a decryption

90
00:03:39,519 --> 00:03:42,480
algorithm which takes this input a

91
00:03:40,799 --> 00:03:45,440
secret key encrypted message

92
00:03:42,480 --> 00:03:46,159
and outputs the message m now when we

93
00:03:45,440 --> 00:03:48,239
first learn

94
00:03:46,159 --> 00:03:50,319
about um public key encryption the

95
00:03:48,239 --> 00:03:51,840
security notion we learn in our classes

96
00:03:50,319 --> 00:03:53,760
is usually security against what's

97
00:03:51,840 --> 00:03:55,920
called chosen plaintext attack

98
00:03:53,760 --> 00:03:57,120
um roughly an attacker gets to choose

99
00:03:55,920 --> 00:04:00,480
two messages

100
00:03:57,120 --> 00:04:01,280
m0 and m1 of its choice submits them to

101
00:04:00,480 --> 00:04:03,200
a challenger

102
00:04:01,280 --> 00:04:04,799
and the challenger will randomly choose

103
00:04:03,200 --> 00:04:06,640
one of these two to encrypt

104
00:04:04,799 --> 00:04:08,720
and send back as a challenge ciphertext

105
00:04:06,640 --> 00:04:10,319
to an attacker now we see a schema

106
00:04:08,720 --> 00:04:11,680
secure if an attacker's chance of

107
00:04:10,319 --> 00:04:13,760
guessing which one it is

108
00:04:11,680 --> 00:04:16,239
is only a negligible amount better than

109
00:04:13,760 --> 00:04:18,000
on one half

110
00:04:16,238 --> 00:04:20,719
so while cpa security is being very

111
00:04:18,000 --> 00:04:22,800
foundational there are limitations to it

112
00:04:20,720 --> 00:04:24,720
in that the only type of attacks we

113
00:04:22,800 --> 00:04:26,160
contemplate are ones when an attacker

114
00:04:24,720 --> 00:04:28,000
receives the ciphertext

115
00:04:26,160 --> 00:04:29,600
and simply just stares at it and tries

116
00:04:28,000 --> 00:04:31,360
to figure out what the message is

117
00:04:29,600 --> 00:04:33,759
however in real life an attacker might

118
00:04:31,360 --> 00:04:36,080
have more tools at its disposal

119
00:04:33,759 --> 00:04:37,840
uh for example suppose alice is sending

120
00:04:36,080 --> 00:04:39,359
an encryption of m to bob

121
00:04:37,840 --> 00:04:40,960
and we have an attacker in the middle

122
00:04:39,360 --> 00:04:43,440
who has no idea what

123
00:04:40,960 --> 00:04:45,039
m is because the scheme is cpa secure

124
00:04:43,440 --> 00:04:45,759
however it might be able to change even

125
00:04:45,040 --> 00:04:48,639
without knowing

126
00:04:45,759 --> 00:04:50,000
m uh it changes the cipher text into a

127
00:04:48,639 --> 00:04:50,800
different one which is an encryption of

128
00:04:50,000 --> 00:04:53,199
2m

129
00:04:50,800 --> 00:04:54,080
and perhaps learn something by bob's

130
00:04:53,199 --> 00:04:56,400
reaction

131
00:04:54,080 --> 00:04:59,520
to seeing the ciphertext now while this

132
00:04:56,400 --> 00:05:02,080
example here is a sort of cartoonish

133
00:04:59,520 --> 00:05:04,400
in real life such attacks can manifest

134
00:05:02,080 --> 00:05:06,320
can manifest into serious attacks

135
00:05:04,400 --> 00:05:08,560
uh one of the most prominent examples

136
00:05:06,320 --> 00:05:11,840
being the black and barker 98 attack

137
00:05:08,560 --> 00:05:13,360
on the ssl protocol uh to that

138
00:05:11,840 --> 00:05:14,799
end the communities developed a

139
00:05:13,360 --> 00:05:15,840
different definition of security a

140
00:05:14,800 --> 00:05:17,280
stronger one

141
00:05:15,840 --> 00:05:19,039
called security against chosen

142
00:05:17,280 --> 00:05:21,520
ciphertext attacks

143
00:05:19,039 --> 00:05:22,719
uh this definition behaves similarly to

144
00:05:21,520 --> 00:05:24,639
cpa encryption

145
00:05:22,720 --> 00:05:26,000
in that there's two that there's a

146
00:05:24,639 --> 00:05:27,120
challenge cipher text and attackers

147
00:05:26,000 --> 00:05:29,600
trying to figure out

148
00:05:27,120 --> 00:05:30,720
is this an encryption of um m1 or is it

149
00:05:29,600 --> 00:05:33,759
an encryption of

150
00:05:30,720 --> 00:05:35,759
um m0 or is it encryption of m1 but

151
00:05:33,759 --> 00:05:36,479
we're going to initially adopt endowed

152
00:05:35,759 --> 00:05:38,560
attacker

153
00:05:36,479 --> 00:05:40,639
with a decryption oracle and it can

154
00:05:38,560 --> 00:05:42,240
submit any ciphertext of its choice

155
00:05:40,639 --> 00:05:44,320
except for that challenge ciphertext to

156
00:05:42,240 --> 00:05:46,800
the decryption oracle and see

157
00:05:44,320 --> 00:05:48,800
what uh the decryption uh see what the

158
00:05:46,800 --> 00:05:52,400
output is

159
00:05:48,800 --> 00:05:54,479
and cca security is just um almost of uh

160
00:05:52,400 --> 00:05:56,000
is of very high importance pretty much

161
00:05:54,479 --> 00:05:57,359
for any scheme that you would consider

162
00:05:56,000 --> 00:05:59,680
standardizing anything you would

163
00:05:57,360 --> 00:06:02,479
consider deploying it really has to be

164
00:05:59,680 --> 00:06:04,560
uh cca secure to even be considered in

165
00:06:02,479 --> 00:06:06,719
the first place

166
00:06:04,560 --> 00:06:08,560
now over time uh the community has

167
00:06:06,720 --> 00:06:10,560
realized the importance of this

168
00:06:08,560 --> 00:06:12,639
and a lot of work's gone into this over

169
00:06:10,560 --> 00:06:14,560
the last let's say 20 to 30

170
00:06:12,639 --> 00:06:16,319
years and i just want to point out a

171
00:06:14,560 --> 00:06:18,240
couple i won't have time

172
00:06:16,319 --> 00:06:19,520
obviously to put out all the great works

173
00:06:18,240 --> 00:06:21,360
in cca security but

174
00:06:19,520 --> 00:06:23,440
i want to just put a couple here up on

175
00:06:21,360 --> 00:06:25,440
the slide um

176
00:06:23,440 --> 00:06:27,120
in the early 90s we saw works that could

177
00:06:25,440 --> 00:06:28,719
combine cpa security

178
00:06:27,120 --> 00:06:30,720
with a very powerful primitive called

179
00:06:28,720 --> 00:06:35,759
non-interactive zero knowledge proofs

180
00:06:30,720 --> 00:06:38,400
and these can compile into cca security

181
00:06:35,759 --> 00:06:39,280
next in 98 a breakthrough result due to

182
00:06:38,400 --> 00:06:41,198
kramer and shoop

183
00:06:39,280 --> 00:06:42,719
showed how to get practical chosen

184
00:06:41,199 --> 00:06:44,800
ciphertext secure encryption from the

185
00:06:42,720 --> 00:06:46,639
decisional diffie-hellman problem

186
00:06:44,800 --> 00:06:48,080
uh we also see how to get it if we

187
00:06:46,639 --> 00:06:50,000
happen to have identity based encryption

188
00:06:48,080 --> 00:06:51,758
we can get cca security

189
00:06:50,000 --> 00:06:54,319
um also work i was involved in with

190
00:06:51,759 --> 00:06:55,680
chris picret showed how to get um

191
00:06:54,319 --> 00:06:57,520
security from the learning with air

192
00:06:55,680 --> 00:06:59,919
assumption if we go through a

193
00:06:57,520 --> 00:07:02,000
uh intermediate primitive uh notion

194
00:06:59,919 --> 00:07:03,440
called lossy tractor functions

195
00:07:02,000 --> 00:07:04,960
and then finally we even seen how to get

196
00:07:03,440 --> 00:07:06,240
it from the learning parity with noise

197
00:07:04,960 --> 00:07:08,638
assumption

198
00:07:06,240 --> 00:07:10,639
and i think in totality i could say that

199
00:07:08,639 --> 00:07:12,479
over time the community as a whole

200
00:07:10,639 --> 00:07:14,880
has become very very good or very

201
00:07:12,479 --> 00:07:16,318
masterful at taking a particular number

202
00:07:14,880 --> 00:07:18,080
of theoretic assumption

203
00:07:16,319 --> 00:07:19,360
using the structure that seems to come

204
00:07:18,080 --> 00:07:23,039
with these things

205
00:07:19,360 --> 00:07:24,960
and i'm crafting a cca scheme from this

206
00:07:23,039 --> 00:07:26,318
but i want to focus on this talk is to

207
00:07:24,960 --> 00:07:27,599
gain let's say an even deeper

208
00:07:26,319 --> 00:07:29,919
understanding

209
00:07:27,599 --> 00:07:31,759
and how do we get chosen ciphertext

210
00:07:29,919 --> 00:07:35,440
security from more general

211
00:07:31,759 --> 00:07:37,120
um less structured assumptions

212
00:07:35,440 --> 00:07:40,000
and in this talk the focus is going to

213
00:07:37,120 --> 00:07:42,880
be on doing it from a very old function

214
00:07:40,000 --> 00:07:44,479
functionality called injective trapdoor

215
00:07:42,880 --> 00:07:46,240
functions

216
00:07:44,479 --> 00:07:48,719
now here a trapdoor function the way it

217
00:07:46,240 --> 00:07:51,120
behaves is that to be a setup algorithm

218
00:07:48,720 --> 00:07:52,720
which produces a public ek and a secret

219
00:07:51,120 --> 00:07:54,639
trapdoor td

220
00:07:52,720 --> 00:07:56,639
now given the public key k anyone can

221
00:07:54,639 --> 00:08:00,080
evaluate this function f sub k

222
00:07:56,639 --> 00:08:03,280
on a random input x and get y

223
00:08:00,080 --> 00:08:05,840
and this will since it's injective um

224
00:08:03,280 --> 00:08:07,840
y will uniquely determine x and there's

225
00:08:05,840 --> 00:08:09,919
also an inverse function where given y

226
00:08:07,840 --> 00:08:11,520
and the trapdoor some with the trapdoor

227
00:08:09,919 --> 00:08:13,680
can compute x

228
00:08:11,520 --> 00:08:15,039
the security property that we want is

229
00:08:13,680 --> 00:08:17,919
that given um

230
00:08:15,039 --> 00:08:18,960
the public key and image y it should be

231
00:08:17,919 --> 00:08:22,159
hard to invert it

232
00:08:18,960 --> 00:08:23,680
and compute x if x was chosen uniformly

233
00:08:22,160 --> 00:08:26,319
at random

234
00:08:23,680 --> 00:08:27,360
now the most important feature i think

235
00:08:26,319 --> 00:08:30,160
of trapdoor functions

236
00:08:27,360 --> 00:08:32,240
at least for this talk is that the um

237
00:08:30,160 --> 00:08:33,360
trapdoor or the sort of decrypt or

238
00:08:32,240 --> 00:08:35,360
invert algorithm

239
00:08:33,360 --> 00:08:36,560
recovers all the input when you're

240
00:08:35,360 --> 00:08:38,560
evaluating this function

241
00:08:36,559 --> 00:08:40,399
x is the only input the entirety of the

242
00:08:38,559 --> 00:08:43,119
input to the function

243
00:08:40,399 --> 00:08:44,080
we can contrast this to the encryption

244
00:08:43,120 --> 00:08:46,080
algorithm of an

245
00:08:44,080 --> 00:08:47,680
encryption scheme so an encryption

246
00:08:46,080 --> 00:08:48,480
algorithm the public key and the message

247
00:08:47,680 --> 00:08:50,319
are inputs

248
00:08:48,480 --> 00:08:52,320
but there's also a hidden input here

249
00:08:50,320 --> 00:08:53,120
which are the random coins used to

250
00:08:52,320 --> 00:08:56,399
encrypt

251
00:08:53,120 --> 00:08:57,200
that i didn't show here and when we

252
00:08:56,399 --> 00:08:59,360
decrypt

253
00:08:57,200 --> 00:09:00,240
um a ciphertext with message m encrypted

254
00:08:59,360 --> 00:09:02,320
under r

255
00:09:00,240 --> 00:09:04,080
uh we will be guaranteed to recover m

256
00:09:02,320 --> 00:09:04,720
but there's no guarantees at all about

257
00:09:04,080 --> 00:09:06,839
recovering

258
00:09:04,720 --> 00:09:08,880
r um that the randomness could simply be

259
00:09:06,839 --> 00:09:11,519
lost

260
00:09:08,880 --> 00:09:13,360
okay so the one reason to study cca

261
00:09:11,519 --> 00:09:14,720
security from trapdoor functions

262
00:09:13,360 --> 00:09:17,040
is that there's a very long history

263
00:09:14,720 --> 00:09:19,040
between the two uh first of all we could

264
00:09:17,040 --> 00:09:20,480
get cpa security from trapdoor functions

265
00:09:19,040 --> 00:09:22,640
due to yao

266
00:09:20,480 --> 00:09:24,959
uh the famous fugi saki okomoto

267
00:09:22,640 --> 00:09:27,360
transform showed how to get cpa security

268
00:09:24,959 --> 00:09:28,719
from cca security if we use the random

269
00:09:27,360 --> 00:09:31,040
oracle model

270
00:09:28,720 --> 00:09:32,320
uh however one interesting uh fact along

271
00:09:31,040 --> 00:09:33,120
the way is that they essentially

272
00:09:32,320 --> 00:09:35,360
construct

273
00:09:33,120 --> 00:09:36,160
a trapdoor function implicitly in order

274
00:09:35,360 --> 00:09:39,600
to do their

275
00:09:36,160 --> 00:09:40,240
um transformation um also we have um nor

276
00:09:39,600 --> 00:09:42,240
young and

277
00:09:40,240 --> 00:09:44,080
dole of dwark and noor i'm showing how

278
00:09:42,240 --> 00:09:44,800
to get cca for enhanced or maybe double

279
00:09:44,080 --> 00:09:48,640
enhanced

280
00:09:44,800 --> 00:09:50,880
trapdoor permutations um

281
00:09:48,640 --> 00:09:52,240
the work of uh uh chris piker and myself

282
00:09:50,880 --> 00:09:53,760
and rosen and segev

283
00:09:52,240 --> 00:09:55,600
showed how to get cca security from

284
00:09:53,760 --> 00:09:57,200
velocitraptor functions or the

285
00:09:55,600 --> 00:09:59,040
generalization of correlated input

286
00:09:57,200 --> 00:10:00,800
secure chapter functions

287
00:09:59,040 --> 00:10:02,800
and what i want to ask here is so it

288
00:10:00,800 --> 00:10:04,640
seems we can do csa security

289
00:10:02,800 --> 00:10:06,319
from some type of trapdoor functions if

290
00:10:04,640 --> 00:10:08,079
we add the right adjective or

291
00:10:06,320 --> 00:10:10,000
you know kind of endow them with enough

292
00:10:08,079 --> 00:10:10,880
power i want to ask here can we do

293
00:10:10,000 --> 00:10:12,880
something

294
00:10:10,880 --> 00:10:14,079
much more basic can we get them from

295
00:10:12,880 --> 00:10:16,640
just any old

296
00:10:14,079 --> 00:10:17,839
um trap injective trap door functions

297
00:10:16,640 --> 00:10:20,319
can we just do it

298
00:10:17,839 --> 00:10:22,640
um plainly from that and the answer is

299
00:10:20,320 --> 00:10:24,640
indeed yes

300
00:10:22,640 --> 00:10:26,480
that's what the result of this paper

301
00:10:24,640 --> 00:10:28,480
paper is without any caveats

302
00:10:26,480 --> 00:10:29,920
we go from trapdoor functions to cca

303
00:10:28,480 --> 00:10:32,320
security

304
00:10:29,920 --> 00:10:33,519
a quick one-sided overview of how we do

305
00:10:32,320 --> 00:10:34,959
things

306
00:10:33,519 --> 00:10:36,959
is that we're first going to introduce

307
00:10:34,959 --> 00:10:38,719
an intermediate primitive which will be

308
00:10:36,959 --> 00:10:39,518
public key encryption with randomness

309
00:10:38,720 --> 00:10:41,920
recovery

310
00:10:39,519 --> 00:10:44,480
something new that we call and we show

311
00:10:41,920 --> 00:10:46,319
how trapdoor functions implies this

312
00:10:44,480 --> 00:10:48,399
uh the reason we do this is that it's

313
00:10:46,320 --> 00:10:51,519
much easier to show our construction

314
00:10:48,399 --> 00:10:52,399
using this um intermediate primitive

315
00:10:51,519 --> 00:10:53,760
here

316
00:10:52,399 --> 00:10:55,440
and then we show how to go from this to

317
00:10:53,760 --> 00:10:56,880
cca security

318
00:10:55,440 --> 00:10:58,959
there's a couple helper primitives on

319
00:10:56,880 --> 00:10:59,760
the way one is a digital signature

320
00:10:58,959 --> 00:11:00,800
scheme

321
00:10:59,760 --> 00:11:03,040
and the other one is something we'll

322
00:11:00,800 --> 00:11:04,160
call tag set commitments uh these are

323
00:11:03,040 --> 00:11:07,439
both based

324
00:11:04,160 --> 00:11:08,640
these can both be realized um from uh

325
00:11:07,440 --> 00:11:09,360
public encryption with randomness

326
00:11:08,640 --> 00:11:10,959
recovery

327
00:11:09,360 --> 00:11:12,560
so there's really only one assumption

328
00:11:10,959 --> 00:11:16,160
feeding into this uh

329
00:11:12,560 --> 00:11:17,920
whole thing okay so let me first

330
00:11:16,160 --> 00:11:19,519
introduce this uh cpa with randomness

331
00:11:17,920 --> 00:11:22,160
recovery primitive

332
00:11:19,519 --> 00:11:23,440
uh it looks it's essentially public key

333
00:11:22,160 --> 00:11:24,480
encryption but with two different

334
00:11:23,440 --> 00:11:26,880
features

335
00:11:24,480 --> 00:11:28,160
uh the first one is that the decryption

336
00:11:26,880 --> 00:11:30,399
algorithm

337
00:11:28,160 --> 00:11:31,839
if a ciphered x is an encryption of m

338
00:11:30,399 --> 00:11:33,839
with randomness r

339
00:11:31,839 --> 00:11:35,120
the decryption algorithm will actually

340
00:11:33,839 --> 00:11:37,519
recover both m

341
00:11:35,120 --> 00:11:39,440
and r so it has that type of trapdoor

342
00:11:37,519 --> 00:11:42,079
flavor to it but it actually tells you

343
00:11:39,440 --> 00:11:43,680
what the randomness is the second one is

344
00:11:42,079 --> 00:11:45,439
in addition to the decryption algorithm

345
00:11:43,680 --> 00:11:46,479
which decrypts with a secret key

346
00:11:45,440 --> 00:11:48,480
we're going to sort of give an

347
00:11:46,480 --> 00:11:50,560
alternative way to decrypt

348
00:11:48,480 --> 00:11:51,920
where if you happen to have the

349
00:11:50,560 --> 00:11:52,800
randomness r that was used for

350
00:11:51,920 --> 00:11:54,319
ciphertext

351
00:11:52,800 --> 00:11:56,000
you could actually use this what we call

352
00:11:54,320 --> 00:11:59,680
recover algorithm and

353
00:11:56,000 --> 00:12:01,760
get the message m using just just that

354
00:11:59,680 --> 00:12:03,279
okay so we can decrypt the secret key or

355
00:12:01,760 --> 00:12:04,959
if we happen to have somehow known the

356
00:12:03,279 --> 00:12:07,600
randomness

357
00:12:04,959 --> 00:12:09,119
now it turns out that as i said trapdoor

358
00:12:07,600 --> 00:12:11,200
functions imply cpa

359
00:12:09,120 --> 00:12:13,519
with randomness recovery uh the

360
00:12:11,200 --> 00:12:15,680
transformation is actually pretty simple

361
00:12:13,519 --> 00:12:17,040
uh the public key and secret key for the

362
00:12:15,680 --> 00:12:18,399
randomness recovery scheme is just the

363
00:12:17,040 --> 00:12:20,959
public key and secret key

364
00:12:18,399 --> 00:12:22,639
for the trapdoor function uh to encrypt

365
00:12:20,959 --> 00:12:25,599
we choose a random x

366
00:12:22,639 --> 00:12:26,880
you evaluate f of x and give that um as

367
00:12:25,600 --> 00:12:28,959
part of the

368
00:12:26,880 --> 00:12:31,360
ciphertext and then to encrypt a bit

369
00:12:28,959 --> 00:12:35,199
message you take the hardcore bit of x

370
00:12:31,360 --> 00:12:36,160
and xor with m and then likewise to um

371
00:12:35,200 --> 00:12:38,399
decrypt

372
00:12:36,160 --> 00:12:40,399
i just one run the trapdoor function or

373
00:12:38,399 --> 00:12:42,800
when the inversion function on y

374
00:12:40,399 --> 00:12:44,880
and get what x is take the hardcore bit

375
00:12:42,800 --> 00:12:47,120
of x again and i can xor that out

376
00:12:44,880 --> 00:12:49,439
and get the message m and the recover

377
00:12:47,120 --> 00:12:50,959
algorithm just um has x to begin with

378
00:12:49,440 --> 00:12:53,680
in a sense so we can just take the

379
00:12:50,959 --> 00:12:56,479
hardcore bit of it and xor it out

380
00:12:53,680 --> 00:12:58,560
okay so this gives you one a scheme for

381
00:12:56,480 --> 00:12:59,279
one bit messages for cpa with randomness

382
00:12:58,560 --> 00:13:01,359
recovery

383
00:12:59,279 --> 00:13:03,040
if we want to get many bits we can just

384
00:13:01,360 --> 00:13:05,600
simply concatenate a lot of these

385
00:13:03,040 --> 00:13:06,959
um just concatenate a lot of these

386
00:13:05,600 --> 00:13:09,200
together

387
00:13:06,959 --> 00:13:10,479
okay um for that reason since we now

388
00:13:09,200 --> 00:13:12,560
have this new primitive and

389
00:13:10,480 --> 00:13:14,079
see and can see that and imply it's

390
00:13:12,560 --> 00:13:15,680
implied by trapdoor functions

391
00:13:14,079 --> 00:13:17,839
we're just gonna set trapdoor functions

392
00:13:15,680 --> 00:13:20,000
aside for the rest of the talk almost

393
00:13:17,839 --> 00:13:21,279
and just go from cpa plus randomness

394
00:13:20,000 --> 00:13:24,720
recovery to cca

395
00:13:21,279 --> 00:13:27,200
to chosen cipher deck security okay

396
00:13:24,720 --> 00:13:28,720
so here's a 10 000 over foot overview of

397
00:13:27,200 --> 00:13:31,200
how i'm going to do things

398
00:13:28,720 --> 00:13:32,959
uh first of all our construction will a

399
00:13:31,200 --> 00:13:35,120
c a chosen ciphertext secure

400
00:13:32,959 --> 00:13:36,959
um ciphertex in our construction we'll

401
00:13:35,120 --> 00:13:38,639
have many little different cpa with

402
00:13:36,959 --> 00:13:42,239
randomness recovery encryptions cons

403
00:13:38,639 --> 00:13:44,160
um comprising it uh

404
00:13:42,240 --> 00:13:46,000
we're gonna essentially encrypt the

405
00:13:44,160 --> 00:13:47,839
message many different times

406
00:13:46,000 --> 00:13:49,360
uh but we're gonna have a tiny bit of

407
00:13:47,839 --> 00:13:50,320
redundancy and for each of these little

408
00:13:49,360 --> 00:13:51,519
encryptions

409
00:13:50,320 --> 00:13:52,880
we're they're not gonna be made

410
00:13:51,519 --> 00:13:54,720
completely at random there's gonna be a

411
00:13:52,880 --> 00:13:56,800
little bit of redundancy in them

412
00:13:54,720 --> 00:13:57,920
uh but we have to be careful we'll see

413
00:13:56,800 --> 00:13:58,959
we have to be pretty careful this

414
00:13:57,920 --> 00:14:01,920
redundancy

415
00:13:58,959 --> 00:14:03,279
if we made it too too redundant um and

416
00:14:01,920 --> 00:14:04,000
we'll see what i mean by this in a

417
00:14:03,279 --> 00:14:06,240
second

418
00:14:04,000 --> 00:14:08,079
uh we might we might even kind of go the

419
00:14:06,240 --> 00:14:10,079
opposite direction and go from a cpa

420
00:14:08,079 --> 00:14:11,599
secure scheme to one which we can't

421
00:14:10,079 --> 00:14:13,519
prove cpa security

422
00:14:11,600 --> 00:14:16,079
uh so we need a tiny bit of redundancy

423
00:14:13,519 --> 00:14:17,279
to maintain cpa security

424
00:14:16,079 --> 00:14:19,279
and the reason we'll have this

425
00:14:17,279 --> 00:14:21,279
redundancy is it helps us answering

426
00:14:19,279 --> 00:14:22,720
decryption queries

427
00:14:21,279 --> 00:14:24,639
so for the remainder of the talk i'm

428
00:14:22,720 --> 00:14:25,199
going to really do two things first i'm

429
00:14:24,639 --> 00:14:26,959
going to show

430
00:14:25,199 --> 00:14:28,560
the a simplified version of the

431
00:14:26,959 --> 00:14:30,239
construction um

432
00:14:28,560 --> 00:14:32,079
kind of show where the redundancy plays

433
00:14:30,240 --> 00:14:33,600
in here uh and why

434
00:14:32,079 --> 00:14:35,279
and argue why it doesn't hurt cpa

435
00:14:33,600 --> 00:14:38,160
security and then

436
00:14:35,279 --> 00:14:39,040
next i'm gonna show how to add a little

437
00:14:38,160 --> 00:14:40,480
bit to it

438
00:14:39,040 --> 00:14:42,319
so that we can make it a little more

439
00:14:40,480 --> 00:14:44,079
complicated so that we can actually

440
00:14:42,320 --> 00:14:44,959
handle decryption queries which will

441
00:14:44,079 --> 00:14:48,880
give us the

442
00:14:44,959 --> 00:14:50,880
chosen ciphertext secure scheme

443
00:14:48,880 --> 00:14:52,720
okay so here here's our let's say our

444
00:14:50,880 --> 00:14:55,120
simplified construction

445
00:14:52,720 --> 00:14:55,839
so to um to create the public and secret

446
00:14:55,120 --> 00:14:58,399
keys

447
00:14:55,839 --> 00:15:01,360
i'm going to run the setup algorithm of

448
00:14:58,399 --> 00:15:03,519
the cpa with randomness recovery scheme

449
00:15:01,360 --> 00:15:04,639
two times n times so i'm going to come

450
00:15:03,519 --> 00:15:06,320
up with two

451
00:15:04,639 --> 00:15:08,720
my public key is going to consist of two

452
00:15:06,320 --> 00:15:09,440
times n keys which i'll just denote with

453
00:15:08,720 --> 00:15:12,720
a um

454
00:15:09,440 --> 00:15:15,440
double subscript over here um

455
00:15:12,720 --> 00:15:16,320
next and we'll have the corresponding

456
00:15:15,440 --> 00:15:19,360
secret keys

457
00:15:16,320 --> 00:15:21,120
um next to encrypt what i'm going to do

458
00:15:19,360 --> 00:15:24,000
is i'm going to pick a random set

459
00:15:21,120 --> 00:15:24,800
s of size n so essentially i'm going to

460
00:15:24,000 --> 00:15:27,519
pick

461
00:15:24,800 --> 00:15:29,120
half of these um half of these slots

462
00:15:27,519 --> 00:15:30,800
there's two times n slots

463
00:15:29,120 --> 00:15:32,639
i'm going to pick half of them and let's

464
00:15:30,800 --> 00:15:34,240
say highlight these in yellow

465
00:15:32,639 --> 00:15:36,000
the ones that aren't highlighted i'm

466
00:15:34,240 --> 00:15:38,720
just going to encrypt a special

467
00:15:36,000 --> 00:15:40,160
let's say don't look here symbol pound

468
00:15:38,720 --> 00:15:42,160
and then the rest of them

469
00:15:40,160 --> 00:15:43,519
what i'm going to do is i'm going to re

470
00:15:42,160 --> 00:15:45,279
encrypt the message

471
00:15:43,519 --> 00:15:46,639
over and over again so i encrypt in the

472
00:15:45,279 --> 00:15:47,839
first slot the message m on the

473
00:15:46,639 --> 00:15:49,759
randomness r1

474
00:15:47,839 --> 00:15:52,480
the second slot um the message on the

475
00:15:49,759 --> 00:15:54,639
ram is r2 and so on and so forth

476
00:15:52,480 --> 00:15:56,399
and these are going to almost be chosen

477
00:15:54,639 --> 00:15:58,000
uniformly at random

478
00:15:56,399 --> 00:15:59,519
except i'm going to restrict it such

479
00:15:58,000 --> 00:16:02,959
that the random coins

480
00:15:59,519 --> 00:16:03,440
here all xor to zero and looking ahead a

481
00:16:02,959 --> 00:16:06,079
little bit

482
00:16:03,440 --> 00:16:08,240
if the coins always xor to zero this

483
00:16:06,079 --> 00:16:08,719
means you can actually learn any one of

484
00:16:08,240 --> 00:16:12,000
them from

485
00:16:08,720 --> 00:16:13,839
n minus one of them right so this this

486
00:16:12,000 --> 00:16:17,120
is the tiny bit of redundancy

487
00:16:13,839 --> 00:16:18,639
i was talking about okay so we'll have

488
00:16:17,120 --> 00:16:19,279
so the yellow ones are the correlated

489
00:16:18,639 --> 00:16:21,839
ones

490
00:16:19,279 --> 00:16:23,360
uh encrypting m and the gray uh little

491
00:16:21,839 --> 00:16:25,839
gray boxes are ones

492
00:16:23,360 --> 00:16:28,160
just independently encrypted with a

493
00:16:25,839 --> 00:16:30,079
special pound sign

494
00:16:28,160 --> 00:16:32,560
okay so the first thing i need to answer

495
00:16:30,079 --> 00:16:35,199
is did i even make things worse

496
00:16:32,560 --> 00:16:36,079
is this scheme cpa secure not

497
00:16:35,199 --> 00:16:38,160
immediately clear

498
00:16:36,079 --> 00:16:39,599
because i had this correlation of the

499
00:16:38,160 --> 00:16:42,160
randomness

500
00:16:39,600 --> 00:16:43,040
okay so here's um here's how we're going

501
00:16:42,160 --> 00:16:44,959
to do it

502
00:16:43,040 --> 00:16:46,959
uh what i liked what you might first

503
00:16:44,959 --> 00:16:48,239
think i would do is i take all these m's

504
00:16:46,959 --> 00:16:50,479
and try to change them to

505
00:16:48,240 --> 00:16:52,800
pound symbols but i can't immediately do

506
00:16:50,480 --> 00:16:54,560
this actually because of this redundancy

507
00:16:52,800 --> 00:16:56,959
or this correlation and the randomness i

508
00:16:54,560 --> 00:16:58,000
have so somewhat counterintuitively

509
00:16:56,959 --> 00:16:59,439
i'm going to actually give more

510
00:16:58,000 --> 00:17:02,160
information about m i'm going to give it

511
00:16:59,440 --> 00:17:03,440
even more times

512
00:17:02,160 --> 00:17:05,520
in the challenge and the challenge

513
00:17:03,440 --> 00:17:08,079
ciphertext to prove security

514
00:17:05,520 --> 00:17:09,839
so first i can add m everywhere and that

515
00:17:08,079 --> 00:17:11,280
should just follow from cpa security

516
00:17:09,839 --> 00:17:13,678
that's no big deal

517
00:17:11,280 --> 00:17:15,039
and then second i want to actually argue

518
00:17:13,679 --> 00:17:16,880
that statistically

519
00:17:15,039 --> 00:17:18,959
the correlation isn't even there just

520
00:17:16,880 --> 00:17:19,839
kind of magically we can get rid of the

521
00:17:18,959 --> 00:17:23,120
yellowness

522
00:17:19,839 --> 00:17:26,319
and um just assume that all these were

523
00:17:23,119 --> 00:17:29,199
uh encrypted uniformly at random

524
00:17:26,319 --> 00:17:30,320
okay so so why could i possibly do this

525
00:17:29,200 --> 00:17:32,480
uh let me give you an

526
00:17:30,320 --> 00:17:34,559
intuitive argument why this is true uh

527
00:17:32,480 --> 00:17:37,919
just assuming that n is equal to

528
00:17:34,559 --> 00:17:39,600
four and in this slide for fun okay so i

529
00:17:37,919 --> 00:17:40,160
wanna argue that the distribution on the

530
00:17:39,600 --> 00:17:43,600
left

531
00:17:40,160 --> 00:17:45,520
or or um on my left is indistinguishable

532
00:17:43,600 --> 00:17:47,120
from the distribution uh on the right

533
00:17:45,520 --> 00:17:48,080
where everything's chosen just uniformly

534
00:17:47,120 --> 00:17:50,639
at random

535
00:17:48,080 --> 00:17:52,480
and on the left these yellow things will

536
00:17:50,640 --> 00:17:54,960
xor to zero

537
00:17:52,480 --> 00:17:56,880
okay so suppose that l was the length of

538
00:17:54,960 --> 00:17:59,840
the random coin so each of these

539
00:17:56,880 --> 00:18:00,480
um each of these strings r r sub

540
00:17:59,840 --> 00:18:04,080
something

541
00:18:00,480 --> 00:18:06,160
will be of uh l bits and let's say um

542
00:18:04,080 --> 00:18:08,240
lambda is our security parameter we're

543
00:18:06,160 --> 00:18:11,039
going to set capital n equal to

544
00:18:08,240 --> 00:18:12,080
um l plus lambda now we expect the

545
00:18:11,039 --> 00:18:14,640
numbers

546
00:18:12,080 --> 00:18:17,120
so there's about uh roughly two to the n

547
00:18:14,640 --> 00:18:19,200
subsets of size n

548
00:18:17,120 --> 00:18:21,600
and each one of these has a one over two

549
00:18:19,200 --> 00:18:23,760
to the l chance of xoring to zero

550
00:18:21,600 --> 00:18:24,799
so even if we chose everything uniformly

551
00:18:23,760 --> 00:18:26,080
at random

552
00:18:24,799 --> 00:18:28,240
we'll we will actually have an

553
00:18:26,080 --> 00:18:30,639
exponential number of things that happen

554
00:18:28,240 --> 00:18:31,760
just in some sense accidentally to xor

555
00:18:30,640 --> 00:18:34,640
to zero

556
00:18:31,760 --> 00:18:35,280
and intuitively the argument here uh-oh

557
00:18:34,640 --> 00:18:40,640
um

558
00:18:35,280 --> 00:18:40,639
let me bring that back up here

559
00:18:40,799 --> 00:18:45,280
intuitively the argument here is that

560
00:18:43,520 --> 00:18:46,160
since there's an exponential number

561
00:18:45,280 --> 00:18:48,480
already

562
00:18:46,160 --> 00:18:50,720
um actually just programming in one

563
00:18:48,480 --> 00:18:52,320
shouldn't be statistically noticeable

564
00:18:50,720 --> 00:18:54,720
um i mentioned that the actual proof in

565
00:18:52,320 --> 00:18:57,439
the paper um is is is more

566
00:18:54,720 --> 00:18:59,039
rigorous than that of course uh we show

567
00:18:57,440 --> 00:19:00,640
this under the leftover hashtag

568
00:18:59,039 --> 00:19:01,919
but just intuitively you can think well

569
00:19:00,640 --> 00:19:03,280
if i have an exponential two to the

570
00:19:01,919 --> 00:19:04,799
lambda number of things

571
00:19:03,280 --> 00:19:06,399
um just programming and one more

572
00:19:04,799 --> 00:19:09,918
shouldn't be statistically

573
00:19:06,400 --> 00:19:12,160
uh very significant okay and then once

574
00:19:09,919 --> 00:19:13,440
we happen to um have that step

575
00:19:12,160 --> 00:19:15,679
well now we have everything under

576
00:19:13,440 --> 00:19:16,240
uncorrelated randomness so what we can

577
00:19:15,679 --> 00:19:18,080
just do

578
00:19:16,240 --> 00:19:19,520
is do the normal cpa scheme and change

579
00:19:18,080 --> 00:19:22,080
everything to bot

580
00:19:19,520 --> 00:19:22,639
and uh or change everything to the pound

581
00:19:22,080 --> 00:19:24,960
sign

582
00:19:22,640 --> 00:19:26,720
and then all information about m is gone

583
00:19:24,960 --> 00:19:29,039
okay so the good news is so far we have

584
00:19:26,720 --> 00:19:31,039
not made things um worse

585
00:19:29,039 --> 00:19:33,760
uh so what about is it actually cca

586
00:19:31,039 --> 00:19:36,960
secure can we handle decryption queries

587
00:19:33,760 --> 00:19:38,000
uh to do so the property the way we're

588
00:19:36,960 --> 00:19:40,080
going to go about this

589
00:19:38,000 --> 00:19:41,280
is intuitively when going from the pound

590
00:19:40,080 --> 00:19:43,199
sign to adding in these

591
00:19:41,280 --> 00:19:44,799
m's we're going to do them in the normal

592
00:19:43,200 --> 00:19:47,120
hybrid way where we add in one

593
00:19:44,799 --> 00:19:48,559
m at a time we change one pound sign to

594
00:19:47,120 --> 00:19:50,879
an m one at a time

595
00:19:48,559 --> 00:19:51,760
and so to do this for the cpa security

596
00:19:50,880 --> 00:19:54,160
experiment

597
00:19:51,760 --> 00:19:55,200
we need to not know at least in any

598
00:19:54,160 --> 00:19:56,559
point of this hybrid

599
00:19:55,200 --> 00:19:58,880
we're going to not know one of these

600
00:19:56,559 --> 00:20:00,399
secret keys

601
00:19:58,880 --> 00:20:01,600
at the same time the trick is while

602
00:20:00,400 --> 00:20:02,159
we're not knowing one of these secret

603
00:20:01,600 --> 00:20:04,158
keys

604
00:20:02,159 --> 00:20:05,600
we're going to be asked to answer

605
00:20:04,159 --> 00:20:06,240
decryption queries the reduction

606
00:20:05,600 --> 00:20:08,240
algorithm

607
00:20:06,240 --> 00:20:09,919
will have to answer decryption queries

608
00:20:08,240 --> 00:20:11,600
uh so what we really want

609
00:20:09,919 --> 00:20:13,360
is we want a decryption procedure where

610
00:20:11,600 --> 00:20:16,399
the normal decryption procedure

611
00:20:13,360 --> 00:20:18,559
uses all two times n keys but there's

612
00:20:16,400 --> 00:20:20,080
also a decryption procedure using all

613
00:20:18,559 --> 00:20:21,440
all but one of the keys two to the n

614
00:20:20,080 --> 00:20:24,399
minus one keys

615
00:20:21,440 --> 00:20:26,080
uh which can decrypt uh in the same way

616
00:20:24,400 --> 00:20:29,679
essentially the same way

617
00:20:26,080 --> 00:20:32,158
as the um normal decryption procedure

618
00:20:29,679 --> 00:20:34,240
uh so we in the simplified scheme we

619
00:20:32,159 --> 00:20:36,480
actually don't have this um

620
00:20:34,240 --> 00:20:38,240
it won't be cca secure but i'm going to

621
00:20:36,480 --> 00:20:39,919
add just a little bit to this to make it

622
00:20:38,240 --> 00:20:41,360
work out

623
00:20:39,919 --> 00:20:42,720
uh to do this i'm going to first

624
00:20:41,360 --> 00:20:44,719
introduce what's what i'm going to call

625
00:20:42,720 --> 00:20:45,919
a tag set commitment scheme

626
00:20:44,720 --> 00:20:48,720
here we're going to imagine that there's

627
00:20:45,919 --> 00:20:51,120
a universe of indices from 1 to 2 times

628
00:20:48,720 --> 00:20:52,960
n and we're going to want a user to be

629
00:20:51,120 --> 00:20:55,439
able to commit to n

630
00:20:52,960 --> 00:20:56,799
sets of size n so the first thing is

631
00:20:55,440 --> 00:20:59,120
there'll be a trusted setup algorithm

632
00:20:56,799 --> 00:21:00,559
which i'll put some public parameters

633
00:20:59,120 --> 00:21:02,879
uh next there'll be a commitment

634
00:21:00,559 --> 00:21:05,520
algorithm which takes set s

635
00:21:02,880 --> 00:21:06,960
of size n and also some extra

636
00:21:05,520 --> 00:21:09,840
information which i'll call a tag

637
00:21:06,960 --> 00:21:10,480
t and i will output a commitment com as

638
00:21:09,840 --> 00:21:13,039
well as

639
00:21:10,480 --> 00:21:14,159
sort of proofs of n separate proofs of

640
00:21:13,039 --> 00:21:16,960
opening

641
00:21:14,159 --> 00:21:18,240
one for each um item in s one for each

642
00:21:16,960 --> 00:21:19,760
index and s

643
00:21:18,240 --> 00:21:21,360
and finally there's a verification

644
00:21:19,760 --> 00:21:22,000
algorithm which we'll take is input a

645
00:21:21,360 --> 00:21:26,320
tag

646
00:21:22,000 --> 00:21:28,799
the index uh the proof sigma sub i um

647
00:21:26,320 --> 00:21:29,360
and the commitment and output zero one

648
00:21:28,799 --> 00:21:30,879
uh

649
00:21:29,360 --> 00:21:32,479
the correctness property is roughly what

650
00:21:30,880 --> 00:21:35,039
you would think it would be if

651
00:21:32,480 --> 00:21:37,200
if it comes out a commitment uh then it

652
00:21:35,039 --> 00:21:38,960
should verify in the natural way

653
00:21:37,200 --> 00:21:40,559
uh in addition though to this normal

654
00:21:38,960 --> 00:21:42,559
setup algorithm we're also

655
00:21:40,559 --> 00:21:45,280
in the spirit of equivalent commitments

656
00:21:42,559 --> 00:21:46,799
we're gonna have an equivocal mode

657
00:21:45,280 --> 00:21:49,039
which outputs public parameter star

658
00:21:46,799 --> 00:21:50,080
commitment star and actually what what

659
00:21:49,039 --> 00:21:52,240
this does

660
00:21:50,080 --> 00:21:54,240
is it essentially says if you call setup

661
00:21:52,240 --> 00:21:56,480
on a tag tag star

662
00:21:54,240 --> 00:21:58,480
it essentially allows you to cheat um it

663
00:21:56,480 --> 00:21:59,360
allows someone who who create the setup

664
00:21:58,480 --> 00:22:02,159
to cheat

665
00:21:59,360 --> 00:22:03,280
but only on tag tag star and all the

666
00:22:02,159 --> 00:22:05,440
other tags it shouldn't

667
00:22:03,280 --> 00:22:06,480
so it gives you two times n more than

668
00:22:05,440 --> 00:22:07,440
you should twice as many as you would

669
00:22:06,480 --> 00:22:10,000
normally have

670
00:22:07,440 --> 00:22:11,280
um of these sigma values now the

671
00:22:10,000 --> 00:22:12,799
security parameter that

672
00:22:11,280 --> 00:22:15,360
sorry the security property that we're

673
00:22:12,799 --> 00:22:18,400
going to want in the scheme is twofold

674
00:22:15,360 --> 00:22:20,158
um first as i said even if we did a

675
00:22:18,400 --> 00:22:22,400
critical mode for tagstar

676
00:22:20,159 --> 00:22:23,840
it should be hard to generate n plus one

677
00:22:22,400 --> 00:22:26,960
valid openings for any tag

678
00:22:23,840 --> 00:22:27,918
not equal to tagstar um the second

679
00:22:26,960 --> 00:22:29,760
property

680
00:22:27,919 --> 00:22:31,520
is that it should be hard for anyone to

681
00:22:29,760 --> 00:22:32,480
distinguish between the equivocal mode

682
00:22:31,520 --> 00:22:34,720
parameters

683
00:22:32,480 --> 00:22:36,320
and the honestly generated parameters

684
00:22:34,720 --> 00:22:37,600
assuming they're giving the sigma values

685
00:22:36,320 --> 00:22:39,678
just for one set s

686
00:22:37,600 --> 00:22:40,959
of size n so you can't tell between

687
00:22:39,679 --> 00:22:43,280
these two

688
00:22:40,960 --> 00:22:44,320
and i won't have um time to go into how

689
00:22:43,280 --> 00:22:45,600
we build this today

690
00:22:44,320 --> 00:22:47,840
but i'll just denote this can be

691
00:22:45,600 --> 00:22:49,520
constructed from pseudorandom generators

692
00:22:47,840 --> 00:22:51,120
and sort of a similar spirit to the

693
00:22:49,520 --> 00:22:53,679
norbit commitment scheme and other

694
00:22:51,120 --> 00:22:55,360
things we've seen before

695
00:22:53,679 --> 00:22:57,200
okay so let's see um now let's see the

696
00:22:55,360 --> 00:22:59,439
construction in totality

697
00:22:57,200 --> 00:23:00,400
okay so the public and secret keys um

698
00:22:59,440 --> 00:23:02,799
public key ski

699
00:23:00,400 --> 00:23:04,000
uh setup is almost as before except for

700
00:23:02,799 --> 00:23:05,360
we're gonna have the public para

701
00:23:04,000 --> 00:23:08,240
at the public primaries for the tag

702
00:23:05,360 --> 00:23:09,918
commitment scheme uh for the ciphertext

703
00:23:08,240 --> 00:23:12,880
we're still going to choose the set s

704
00:23:09,919 --> 00:23:13,600
of size n just like before except for

705
00:23:12,880 --> 00:23:15,520
we're going to do

706
00:23:13,600 --> 00:23:16,639
something a little bit more here uh the

707
00:23:15,520 --> 00:23:17,840
first thing we're going to do is

708
00:23:16,640 --> 00:23:19,679
generate a

709
00:23:17,840 --> 00:23:21,039
verification and assigning key for

710
00:23:19,679 --> 00:23:23,440
signatures

711
00:23:21,039 --> 00:23:24,559
scheme and then we're going to call this

712
00:23:23,440 --> 00:23:26,320
commitment scheme for

713
00:23:24,559 --> 00:23:28,320
set s that we chose and with the

714
00:23:26,320 --> 00:23:30,240
verification key equal to the tag

715
00:23:28,320 --> 00:23:31,918
it's kind of a common thing to do and

716
00:23:30,240 --> 00:23:35,200
then you'll get as output of commitment

717
00:23:31,919 --> 00:23:37,120
and these n sigma sub i values

718
00:23:35,200 --> 00:23:38,480
now when we encrypt instead of just

719
00:23:37,120 --> 00:23:40,879
encrypting m

720
00:23:38,480 --> 00:23:42,640
everywhere we're going to encrypt m and

721
00:23:40,880 --> 00:23:44,240
the corresponding sigma value so here

722
00:23:42,640 --> 00:23:47,279
i'll encrypt m and sigma 1

723
00:23:44,240 --> 00:23:49,919
on around this r1 and so on and so forth

724
00:23:47,279 --> 00:23:50,559
to m and sigma sub n for the nth index i

725
00:23:49,919 --> 00:23:52,960
chose

726
00:23:50,559 --> 00:23:54,879
under randomness r sub n again we're

727
00:23:52,960 --> 00:23:55,760
going to have this r uh redundancy where

728
00:23:54,880 --> 00:23:59,440
all the

729
00:23:55,760 --> 00:24:01,360
values the ri values xor is zero

730
00:23:59,440 --> 00:24:03,760
and that's it it's actually not not that

731
00:24:01,360 --> 00:24:05,840
complicated of the construction

732
00:24:03,760 --> 00:24:07,360
okay and then we'll and then the

733
00:24:05,840 --> 00:24:07,918
ciphertext consists of the verification

734
00:24:07,360 --> 00:24:10,000
key

735
00:24:07,919 --> 00:24:13,520
the commitment and the signature on

736
00:24:10,000 --> 00:24:15,360
every on everything that came into there

737
00:24:13,520 --> 00:24:17,039
okay so now we need to see how

738
00:24:15,360 --> 00:24:17,520
decryption works i'm first going to tell

739
00:24:17,039 --> 00:24:19,840
you

740
00:24:17,520 --> 00:24:21,120
a way to decrypt using all two n keys

741
00:24:19,840 --> 00:24:21,918
then i'll tell you a way to decrypt

742
00:24:21,120 --> 00:24:24,239
using two n

743
00:24:21,919 --> 00:24:25,440
minus one keys i'll try to roughly argue

744
00:24:24,240 --> 00:24:27,360
that these are equivalent

745
00:24:25,440 --> 00:24:29,279
uh the decryption procedure will

746
00:24:27,360 --> 00:24:30,879
essentially perform a bunch of checks if

747
00:24:29,279 --> 00:24:32,240
any one of them fails it says

748
00:24:30,880 --> 00:24:34,640
get out of here i'm going to reject this

749
00:24:32,240 --> 00:24:36,720
ciphertext uh

750
00:24:34,640 --> 00:24:38,400
otherwise it will tell you the message

751
00:24:36,720 --> 00:24:39,760
first thing it does is it verifies the

752
00:24:38,400 --> 00:24:42,400
signature if that doesn't work

753
00:24:39,760 --> 00:24:44,080
reject um next it's going to use all two

754
00:24:42,400 --> 00:24:46,240
times n of its keys

755
00:24:44,080 --> 00:24:47,600
and decrypt try to decrypt each one of

756
00:24:46,240 --> 00:24:49,520
these positions

757
00:24:47,600 --> 00:24:51,918
and it's going to make a list or or a

758
00:24:49,520 --> 00:24:55,039
set u of all the indices

759
00:24:51,919 --> 00:24:56,480
um where where decryption um where

760
00:24:55,039 --> 00:24:58,640
decryption worked

761
00:24:56,480 --> 00:25:00,159
and where the corresponding indices

762
00:24:58,640 --> 00:25:00,720
verified according to the commitment

763
00:25:00,159 --> 00:25:03,760
scheme

764
00:25:00,720 --> 00:25:07,120
so it should collect to set u and the

765
00:25:03,760 --> 00:25:08,480
set u should be of size n okay so

766
00:25:07,120 --> 00:25:10,399
intuitively the set you should be all

767
00:25:08,480 --> 00:25:11,200
these yellow values for well-formed

768
00:25:10,400 --> 00:25:13,520
ciphertext

769
00:25:11,200 --> 00:25:14,400
and if it's not a size and reject also

770
00:25:13,520 --> 00:25:15,600
and finally

771
00:25:14,400 --> 00:25:17,520
we're going to reject that the

772
00:25:15,600 --> 00:25:18,879
randomness xor is to zero

773
00:25:17,520 --> 00:25:20,720
and then we want to make sure that these

774
00:25:18,880 --> 00:25:21,600
yellow or claim yellow ciphertex were

775
00:25:20,720 --> 00:25:23,200
actually created

776
00:25:21,600 --> 00:25:25,678
correctly and we're going to do this

777
00:25:23,200 --> 00:25:29,919
procedure of the decryption algorithm

778
00:25:25,679 --> 00:25:31,440
calling encryption again it's gonna um

779
00:25:29,919 --> 00:25:33,679
uh it's gonna call the encryption

780
00:25:31,440 --> 00:25:36,480
algorithm with the randomness recovered

781
00:25:33,679 --> 00:25:37,279
and make sure that um it's what it was

782
00:25:36,480 --> 00:25:40,080
originally

783
00:25:37,279 --> 00:25:42,320
to make sure things are kosher okay so

784
00:25:40,080 --> 00:25:43,918
now let's see a method for um decrypting

785
00:25:42,320 --> 00:25:45,279
using all but one of the keys

786
00:25:43,919 --> 00:25:47,120
i'm going to just imagine this key in

787
00:25:45,279 --> 00:25:48,400
the top left that i scratched out here

788
00:25:47,120 --> 00:25:50,080
is gone

789
00:25:48,400 --> 00:25:52,080
okay so to decrypt we're gonna verify

790
00:25:50,080 --> 00:25:54,240
the signature again that makes sense

791
00:25:52,080 --> 00:25:56,320
we're gonna decrypt using all two to the

792
00:25:54,240 --> 00:25:58,320
n minus one keys that we have

793
00:25:56,320 --> 00:26:01,360
okay and make this list u in the same

794
00:25:58,320 --> 00:26:03,840
way but it's possible at the end

795
00:26:01,360 --> 00:26:05,039
the size of u is n minus one and it's

796
00:26:03,840 --> 00:26:06,320
possible

797
00:26:05,039 --> 00:26:08,080
that the missing value is just the

798
00:26:06,320 --> 00:26:09,760
secret key that we don't have

799
00:26:08,080 --> 00:26:11,039
and at first seemed like okay we're in

800
00:26:09,760 --> 00:26:12,480
trouble here we don't have the secret

801
00:26:11,039 --> 00:26:15,039
key we can't decrypt

802
00:26:12,480 --> 00:26:15,679
but remember in a well-formed ciphertext

803
00:26:15,039 --> 00:26:18,640
all these

804
00:26:15,679 --> 00:26:19,840
ri values xor to zero which means we

805
00:26:18,640 --> 00:26:22,400
actually know

806
00:26:19,840 --> 00:26:22,959
what r1 is or what at least it should be

807
00:26:22,400 --> 00:26:25,679
by just

808
00:26:22,960 --> 00:26:26,960
xoring all these ri values that we were

809
00:26:25,679 --> 00:26:29,440
able to recover

810
00:26:26,960 --> 00:26:31,440
so we can do is we can come up with r1

811
00:26:29,440 --> 00:26:34,640
use the recover this alternate

812
00:26:31,440 --> 00:26:35,760
recovery decryption mechanism to um to

813
00:26:34,640 --> 00:26:38,400
decrypt

814
00:26:35,760 --> 00:26:40,080
add it to the set u now at this point

815
00:26:38,400 --> 00:26:42,400
set u should be of size n

816
00:26:40,080 --> 00:26:43,600
um whether or not we added something to

817
00:26:42,400 --> 00:26:44,799
it we can check that

818
00:26:43,600 --> 00:26:46,559
and we can perform the same

819
00:26:44,799 --> 00:26:48,158
re-encryption checks that the normal one

820
00:26:46,559 --> 00:26:50,480
did

821
00:26:48,159 --> 00:26:52,240
okay so i won't have time to go to

822
00:26:50,480 --> 00:26:54,240
actually prove that these two so what we

823
00:26:52,240 --> 00:26:57,200
now need to do is prove that these two

824
00:26:54,240 --> 00:26:58,960
indeed do the same thing uh in the paper

825
00:26:57,200 --> 00:26:59,600
it's essentially a case analysis with

826
00:26:58,960 --> 00:27:02,640
three or four

827
00:26:59,600 --> 00:27:03,678
cases i won't have time in this talk to

828
00:27:02,640 --> 00:27:05,279
go through each of them

829
00:27:03,679 --> 00:27:06,320
but let me just pull out one example

830
00:27:05,279 --> 00:27:08,159
here to show you at least how the

831
00:27:06,320 --> 00:27:09,918
redundancy works

832
00:27:08,159 --> 00:27:11,679
okay so let's imagine we actually have a

833
00:27:09,919 --> 00:27:12,960
well-formed ciphertext it was decrypted

834
00:27:11,679 --> 00:27:16,640
correctly where things

835
00:27:12,960 --> 00:27:19,679
um xor xor to zero

836
00:27:16,640 --> 00:27:21,760
uh if we decrypt using the 2n key method

837
00:27:19,679 --> 00:27:23,440
the signature verify will collect all

838
00:27:21,760 --> 00:27:24,559
four of these yellow values they will

839
00:27:23,440 --> 00:27:26,000
xor to zero

840
00:27:24,559 --> 00:27:28,799
and all the wii encryption checks will

841
00:27:26,000 --> 00:27:30,000
pass so things go okay and the algorithm

842
00:27:28,799 --> 00:27:32,000
outputs m

843
00:27:30,000 --> 00:27:33,840
if we only have two to the n minus one

844
00:27:32,000 --> 00:27:34,640
keys that means one secret key is

845
00:27:33,840 --> 00:27:36,799
missing

846
00:27:34,640 --> 00:27:38,159
we recover three the the right three

847
00:27:36,799 --> 00:27:40,480
yellow values

848
00:27:38,159 --> 00:27:42,159
and then we can figure out r1 is equal

849
00:27:40,480 --> 00:27:44,320
to the xor of the rest of them

850
00:27:42,159 --> 00:27:46,320
and then we can recover the fourth by

851
00:27:44,320 --> 00:27:48,399
just using this recover algorithm

852
00:27:46,320 --> 00:27:50,320
and again all checks will purify and

853
00:27:48,399 --> 00:27:53,439
re-encryption checks will pass

854
00:27:50,320 --> 00:27:54,720
so this is this balance between um how

855
00:27:53,440 --> 00:27:58,640
we can decrypt

856
00:27:54,720 --> 00:28:02,159
using just one using just one um

857
00:27:58,640 --> 00:28:05,200
sorry with missing just only one

858
00:28:02,159 --> 00:28:08,080
secret key okay

859
00:28:05,200 --> 00:28:10,080
oops okay now that was just one cipher

860
00:28:08,080 --> 00:28:12,799
text what we claim is that in all types

861
00:28:10,080 --> 00:28:15,520
of cipher text essentially

862
00:28:12,799 --> 00:28:16,158
the behavior is indistinguishable and

863
00:28:15,520 --> 00:28:17,918
this includes

864
00:28:16,159 --> 00:28:19,200
maliciously generated ciphertext and

865
00:28:17,919 --> 00:28:20,559
that's where using things like the

866
00:28:19,200 --> 00:28:24,240
signature

867
00:28:20,559 --> 00:28:26,080
and and the tag commitment come in

868
00:28:24,240 --> 00:28:28,640
i won't have time to show this today but

869
00:28:26,080 --> 00:28:30,879
it is in the paper

870
00:28:28,640 --> 00:28:32,399
okay now once we have all these kind of

871
00:28:30,880 --> 00:28:35,360
concepts in place

872
00:28:32,399 --> 00:28:36,879
uh what we have is that we can have a

873
00:28:35,360 --> 00:28:37,760
hybrid proof i won't have time to go

874
00:28:36,880 --> 00:28:40,159
through it

875
00:28:37,760 --> 00:28:41,760
essentially the hybrid is reject the um

876
00:28:40,159 --> 00:28:43,120
reject any queries which the

877
00:28:41,760 --> 00:28:44,879
verification key is the same as the

878
00:28:43,120 --> 00:28:46,719
challenge cipher text then we're going

879
00:28:44,880 --> 00:28:48,399
to change these pound symbols to m one

880
00:28:46,720 --> 00:28:49,600
by one as i denote it

881
00:28:48,399 --> 00:28:51,918
we're going to use the ability to

882
00:28:49,600 --> 00:28:54,000
decrypt with two n minus one keys

883
00:28:51,919 --> 00:28:55,679
um then take away the redundancy like we

884
00:28:54,000 --> 00:28:57,120
saw and then change everything to pound

885
00:28:55,679 --> 00:28:59,600
one by one

886
00:28:57,120 --> 00:29:01,279
okay okay so this essentially concludes

887
00:28:59,600 --> 00:29:02,158
my argument of the cca and i like to

888
00:29:01,279 --> 00:29:04,640
take just a

889
00:29:02,159 --> 00:29:05,279
minute or so minute or two left that i

890
00:29:04,640 --> 00:29:07,760
have

891
00:29:05,279 --> 00:29:09,440
to do a little bit of a retrospective on

892
00:29:07,760 --> 00:29:12,480
the ideas for this work

893
00:29:09,440 --> 00:29:15,279
again we um go from trapdoor functions

894
00:29:12,480 --> 00:29:16,799
to cca security and one interesting open

895
00:29:15,279 --> 00:29:18,640
problem is can we build

896
00:29:16,799 --> 00:29:19,840
now that sort of the box is open can we

897
00:29:18,640 --> 00:29:20,880
build other primitives from just

898
00:29:19,840 --> 00:29:22,240
trapdoor functions

899
00:29:20,880 --> 00:29:24,640
that maybe we didn't think we could

900
00:29:22,240 --> 00:29:26,240
before uh the second point

901
00:29:24,640 --> 00:29:28,080
that that's important here is that

902
00:29:26,240 --> 00:29:29,919
there's a very fine balance between the

903
00:29:28,080 --> 00:29:32,559
amount of redundancy that we had

904
00:29:29,919 --> 00:29:33,919
too much and it's not cpa secure and if

905
00:29:32,559 --> 00:29:36,158
we had none at all then we wouldn't be

906
00:29:33,919 --> 00:29:38,640
able to answer these decryption queries

907
00:29:36,159 --> 00:29:39,279
um so for some perspective on the far

908
00:29:38,640 --> 00:29:41,200
left here

909
00:29:39,279 --> 00:29:42,799
if we didn't have any redundancy we

910
00:29:41,200 --> 00:29:43,760
could improve cca security we couldn't

911
00:29:42,799 --> 00:29:46,480
answer these decryption

912
00:29:43,760 --> 00:29:48,158
attacks um we had just a tiny bit which

913
00:29:46,480 --> 00:29:49,760
is somewhere on the spectrum

914
00:29:48,159 --> 00:29:52,080
and we can look at some other previous

915
00:29:49,760 --> 00:29:53,679
work like the law ctdf or correlated

916
00:29:52,080 --> 00:29:55,199
products as having a lot

917
00:29:53,679 --> 00:29:56,640
but the consequence was that they needed

918
00:29:55,200 --> 00:29:57,679
a souped-up version of trapdoor

919
00:29:56,640 --> 00:30:00,240
functions

920
00:29:57,679 --> 00:30:01,440
or cpa with hindi prg's and then i'll

921
00:30:00,240 --> 00:30:04,480
just conclude by saying

922
00:30:01,440 --> 00:30:05,919
a very clear um open problem is

923
00:30:04,480 --> 00:30:08,559
uh we went from trapdoor functions to

924
00:30:05,919 --> 00:30:11,840
cca security can we go from

925
00:30:08,559 --> 00:30:14,080
cpa security to cca um i don't know

926
00:30:11,840 --> 00:30:16,080
it's hard to say it's um seems to have a

927
00:30:14,080 --> 00:30:18,320
little new hope of course uh we do use a

928
00:30:16,080 --> 00:30:21,360
lot of power over the trapdoor functions

929
00:30:18,320 --> 00:30:25,039
okay thank you very much okay

930
00:30:21,360 --> 00:30:27,760
thank you uh brian for the great talk

931
00:30:25,039 --> 00:30:27,760
the great work

932
00:30:28,080 --> 00:30:31,520
oh yeah so we can do one big club to all

933
00:30:30,799 --> 00:30:33,918
the

934
00:30:31,520 --> 00:30:35,520
our winners at the very end so in the

935
00:30:33,919 --> 00:30:39,200
interest of time perhaps we have time

936
00:30:35,520 --> 00:30:40,680
for one question or comment

937
00:30:39,200 --> 00:30:42,880
uh tom

938
00:30:40,680 --> 00:30:45,679
[Music]

939
00:30:42,880 --> 00:30:46,559
yeah so we have one question on uh zulu

940
00:30:45,679 --> 00:30:49,679
from dan

941
00:30:46,559 --> 00:30:51,520
bernstein so uh injective trapped or

942
00:30:49,679 --> 00:30:54,559
functioning stock sounds like

943
00:30:51,520 --> 00:30:58,240
perfectly correct deterministic pke

944
00:30:54,559 --> 00:30:59,600
in for example hhk17 which raises well

945
00:30:58,240 --> 00:31:00,960
three questions we'll start with one and

946
00:30:59,600 --> 00:31:02,840
we'll see how far sorry it sounds like

947
00:31:00,960 --> 00:31:05,679
what i'm sorry

948
00:31:02,840 --> 00:31:09,199
hhk17 can you hear me

949
00:31:05,679 --> 00:31:12,240
okay perfectly correct okay yeah and uh

950
00:31:09,200 --> 00:31:13,840
perfectly correct deterministic pke so

951
00:31:12,240 --> 00:31:16,840
can the technique here work with

952
00:31:13,840 --> 00:31:19,120
decryption failures is the first

953
00:31:16,840 --> 00:31:20,879
question oh okay if this game was not

954
00:31:19,120 --> 00:31:24,080
perfectly correct

955
00:31:20,880 --> 00:31:24,640
so yeah yes or no so we need it to be

956
00:31:24,080 --> 00:31:26,960
what's called

957
00:31:24,640 --> 00:31:27,760
almost all keys correct which which

958
00:31:26,960 --> 00:31:30,559
means that

959
00:31:27,760 --> 00:31:32,559
um with all but negligible probability

960
00:31:30,559 --> 00:31:34,960
it will be perfectly correct

961
00:31:32,559 --> 00:31:36,720
but if it happened to have a if there

962
00:31:34,960 --> 00:31:38,880
happened to be a significant check

963
00:31:36,720 --> 00:31:40,960
chance that there were that there could

964
00:31:38,880 --> 00:31:41,840
be correctness failures uh the proof

965
00:31:40,960 --> 00:31:44,000
actually

966
00:31:41,840 --> 00:31:45,360
cannot go through um it's a little

967
00:31:44,000 --> 00:31:46,880
nuanced i i

968
00:31:45,360 --> 00:31:48,639
i can you answer that a little bit but

969
00:31:46,880 --> 00:31:50,320
that's a good question and the answer is

970
00:31:48,640 --> 00:31:52,000
no we do need perfect correctness and it

971
00:31:50,320 --> 00:31:55,519
would be interesting

972
00:31:52,000 --> 00:31:58,640
uh to to show it from

973
00:31:55,519 --> 00:32:01,440
non-perfect correctness let's say

974
00:31:58,640 --> 00:32:02,640
okay great so one more quick question um

975
00:32:01,440 --> 00:32:04,399
from daniel brown

976
00:32:02,640 --> 00:32:06,240
uh and possibility results about

977
00:32:04,399 --> 00:32:08,399
provable security for rsaoap

978
00:32:06,240 --> 00:32:10,000
are known so i wonder if this result has

979
00:32:08,399 --> 00:32:13,279
been double checked against

980
00:32:10,000 --> 00:32:17,360
the state-of-the-art possibility results

981
00:32:13,279 --> 00:32:17,360
impossibility results for um

982
00:32:19,679 --> 00:32:23,200
for particular chapter functions that

983
00:32:21,279 --> 00:32:26,240
there's the rsaoap

984
00:32:23,200 --> 00:32:28,080
impossibility so i would okay we didn't

985
00:32:26,240 --> 00:32:30,720
explicitly check it against this

986
00:32:28,080 --> 00:32:32,639
although i will say the rsa oep is a

987
00:32:30,720 --> 00:32:34,399
particular transformation for example it

988
00:32:32,640 --> 00:32:37,120
doesn't use the rsa trapdoor function

989
00:32:34,399 --> 00:32:39,120
it doesn't use two times n keys so it's

990
00:32:37,120 --> 00:32:41,600
a different transformation

991
00:32:39,120 --> 00:32:43,039
than this one so uh to the best of my

992
00:32:41,600 --> 00:32:43,519
knowledge the art the impossibility

993
00:32:43,039 --> 00:32:45,519
result

994
00:32:43,519 --> 00:32:47,760
is for that particular transformation

995
00:32:45,519 --> 00:32:50,480
which wouldn't necessarily rule out

996
00:32:47,760 --> 00:32:51,760
other transformations right yeah i think

997
00:32:50,480 --> 00:32:53,039
that that's correct

998
00:32:51,760 --> 00:32:54,320
okay so i think in the interesting time

999
00:32:53,039 --> 00:32:57,840
there are some more questions on zoolot

1000
00:32:54,320 --> 00:32:57,840
so maybe you can

1001
00:32:57,919 --> 00:33:05,279
answer them there with chad okay okay

1002
00:33:01,760 --> 00:33:07,919
yeah yeah so there's no link to zulit

1003
00:33:05,279 --> 00:33:10,080
next to the best paper

1004
00:33:07,919 --> 00:33:11,760
session on the webpage but any other

1005
00:33:10,080 --> 00:33:13,519
link to chat to work

1006
00:33:11,760 --> 00:33:15,840
anybody interested in asking questions

1007
00:33:13,519 --> 00:33:19,279
or discussing further can go to

1008
00:33:15,840 --> 00:33:22,559
zulie tempos their questions there and

1009
00:33:19,279 --> 00:33:25,600
so now let's move to the second talk and

1010
00:33:22,559 --> 00:33:28,639
water will give the a talk so please

1011
00:33:25,600 --> 00:33:31,918
uh yeah unmute and

1012
00:33:28,640 --> 00:33:31,919
start sharing your slides

1013
00:33:34,399 --> 00:33:40,959
okay is this visible it looks right

1014
00:33:37,600 --> 00:33:43,918
yeah okay so um so

1015
00:33:40,960 --> 00:33:44,880
yeah first of all thanks uh also from uh

1016
00:33:43,919 --> 00:33:47,039
the three of us

1017
00:33:44,880 --> 00:33:48,480
for uh handing over this uh award which

1018
00:33:47,039 --> 00:33:50,320
is really an honor

1019
00:33:48,480 --> 00:33:52,480
and so our paper is on breaking the

1020
00:33:50,320 --> 00:33:53,439
decisional tv hellman problem for class

1021
00:33:52,480 --> 00:33:56,399
group actions

1022
00:33:53,440 --> 00:33:57,200
using genus theory and when i say we i

1023
00:33:56,399 --> 00:33:58,879
mean

1024
00:33:57,200 --> 00:34:01,120
joint work with jana sotakova from

1025
00:33:58,880 --> 00:34:04,399
amsterdam and frederick for carter and

1026
00:34:01,120 --> 00:34:07,760
from keo leuven um and so let's first

1027
00:34:04,399 --> 00:34:09,918
focus on this uh

1028
00:34:07,760 --> 00:34:11,520
decisional diffie element problem part

1029
00:34:09,918 --> 00:34:13,199
so let's formulate this

1030
00:34:11,520 --> 00:34:14,800
for the classical diffie-hellman key

1031
00:34:13,199 --> 00:34:18,078
exchange protocol in the way it was

1032
00:34:14,800 --> 00:34:20,320
introduced in 1976 by diffient hellmann

1033
00:34:18,079 --> 00:34:22,240
so derek alice and bob agree on some

1034
00:34:20,320 --> 00:34:24,399
finite prime field fp

1035
00:34:22,239 --> 00:34:25,520
and they fix a generator of uh the

1036
00:34:24,399 --> 00:34:27,839
multiplicative group

1037
00:34:25,520 --> 00:34:30,159
g and then alice chooses some secret

1038
00:34:27,839 --> 00:34:32,159
exponent a computes g to the a

1039
00:34:30,159 --> 00:34:34,000
sends the result to bob uh bob does the

1040
00:34:32,159 --> 00:34:36,399
same so it chooses a secret b

1041
00:34:34,000 --> 00:34:38,399
completes g to the p b since the result

1042
00:34:36,399 --> 00:34:42,560
of alice and now both parties can

1043
00:34:38,399 --> 00:34:46,239
compute the common secret g to the a b

1044
00:34:42,560 --> 00:34:47,359
um so an eavesdropper listening to this

1045
00:34:46,239 --> 00:34:50,560
channel sees

1046
00:34:47,359 --> 00:34:51,199
g sees g to the a c to the b and ideally

1047
00:34:50,560 --> 00:34:54,320
spoken

1048
00:34:51,199 --> 00:34:56,319
uh g to the a b to her just looks like

1049
00:34:54,320 --> 00:34:56,720
something absolutely random okay and so

1050
00:34:56,320 --> 00:34:59,280
this

1051
00:34:56,719 --> 00:35:00,879
uh ideal is formalized in the decisional

1052
00:34:59,280 --> 00:35:03,440
difficult problem

1053
00:35:00,880 --> 00:35:03,920
and so it's presented as a game really

1054
00:35:03,440 --> 00:35:07,280
so

1055
00:35:03,920 --> 00:35:09,520
um the attacker is presented um

1056
00:35:07,280 --> 00:35:11,440
samples from one of two distributions so

1057
00:35:09,520 --> 00:35:13,520
either he's presented samples really

1058
00:35:11,440 --> 00:35:15,040
genuine difficult samples so the form g

1059
00:35:13,520 --> 00:35:17,200
g to the a g to the b

1060
00:35:15,040 --> 00:35:18,960
and g to the a b or he's really

1061
00:35:17,200 --> 00:35:21,680
presented uh random

1062
00:35:18,960 --> 00:35:23,359
samples and so he has to be able to tell

1063
00:35:21,680 --> 00:35:25,040
from which distribution he gets the

1064
00:35:23,359 --> 00:35:26,720
samples and if he can win this game with

1065
00:35:25,040 --> 00:35:28,400
a non-negligible advantage

1066
00:35:26,720 --> 00:35:30,399
he breaks the decisional diffie-hellman

1067
00:35:28,400 --> 00:35:32,720
problem this is like a key hardness

1068
00:35:30,400 --> 00:35:35,839
assumption and all sorts of provable

1069
00:35:32,720 --> 00:35:39,118
security proofs now for the original

1070
00:35:35,839 --> 00:35:41,440
different proposal this is not hard

1071
00:35:39,119 --> 00:35:43,440
because of the following property g to

1072
00:35:41,440 --> 00:35:44,320
the a b this element of fp will be a

1073
00:35:43,440 --> 00:35:47,440
square

1074
00:35:44,320 --> 00:35:49,200
if and only if g to the a is a square or

1075
00:35:47,440 --> 00:35:50,560
g to the b is a square so we have this

1076
00:35:49,200 --> 00:35:52,560
equivalence

1077
00:35:50,560 --> 00:35:54,078
and this can be tested efficiently

1078
00:35:52,560 --> 00:35:56,240
thanks to the legendre symbol

1079
00:35:54,079 --> 00:35:57,520
so so an attacker just computes these

1080
00:35:56,240 --> 00:35:59,200
three legendre symbols

1081
00:35:57,520 --> 00:36:01,200
and verifies whether this equivalence

1082
00:35:59,200 --> 00:36:02,720
holds and if it does

1083
00:36:01,200 --> 00:36:04,720
and if it keeps doing so then very

1084
00:36:02,720 --> 00:36:05,759
likely we are in this first case and as

1085
00:36:04,720 --> 00:36:07,279
soon as it doesn't

1086
00:36:05,760 --> 00:36:09,280
we are definitely in the second case

1087
00:36:07,280 --> 00:36:11,200
okay um

1088
00:36:09,280 --> 00:36:12,800
so this is like our motivating example

1089
00:36:11,200 --> 00:36:15,279
for this work just let me remark

1090
00:36:12,800 --> 00:36:16,240
that uh of course in practice for the

1091
00:36:15,280 --> 00:36:18,720
way we do

1092
00:36:16,240 --> 00:36:19,520
difficult nowadays this is not uh not a

1093
00:36:18,720 --> 00:36:21,839
problem

1094
00:36:19,520 --> 00:36:23,759
uh because in practice like also to

1095
00:36:21,839 --> 00:36:25,359
avoid all helm anti-productions we work

1096
00:36:23,760 --> 00:36:27,839
in a prime order subgroup

1097
00:36:25,359 --> 00:36:29,440
of fb star and then automatically all

1098
00:36:27,839 --> 00:36:30,078
the elements we work with are squares

1099
00:36:29,440 --> 00:36:34,720
and so

1100
00:36:30,079 --> 00:36:37,839
this is no longer useful as an attack

1101
00:36:34,720 --> 00:36:39,439
okay so we are trying to do the same

1102
00:36:37,839 --> 00:36:41,040
for a variant of the diffidelman key

1103
00:36:39,440 --> 00:36:42,880
exchange protocol that was proposed by

1104
00:36:41,040 --> 00:36:44,720
kuvenya in 1997

1105
00:36:42,880 --> 00:36:46,480
and then rediscovered by rostov stefan

1106
00:36:44,720 --> 00:36:49,279
stolmenov in 2004

1107
00:36:46,480 --> 00:36:51,040
and so now goes under the name crs and

1108
00:36:49,280 --> 00:36:54,079
also seaside falls within this

1109
00:36:51,040 --> 00:36:56,560
framework and so the exact

1110
00:36:54,079 --> 00:36:57,200
uh terminology is not too important for

1111
00:36:56,560 --> 00:37:00,799
now

1112
00:36:57,200 --> 00:37:02,799
uh but it works with a group action

1113
00:37:00,800 --> 00:37:05,040
uh the group acting is an ideal class

1114
00:37:02,800 --> 00:37:05,680
group of some imaginary quadratic order

1115
00:37:05,040 --> 00:37:07,839
o

1116
00:37:05,680 --> 00:37:09,520
and the set on which this group acts is

1117
00:37:07,839 --> 00:37:12,400
a set of elliptic curves

1118
00:37:09,520 --> 00:37:14,240
over some finite field fq and the action

1119
00:37:12,400 --> 00:37:16,960
is through isogenes that's what's

1120
00:37:14,240 --> 00:37:18,399
what's written here but the layout is

1121
00:37:16,960 --> 00:37:20,240
really the same as in the classical

1122
00:37:18,400 --> 00:37:23,200
diffie-hellman protocol so alice chooses

1123
00:37:20,240 --> 00:37:25,598
a secret ideal class a acts on

1124
00:37:23,200 --> 00:37:27,598
this starting electric curve e with it

1125
00:37:25,599 --> 00:37:29,119
and the result a e is sent to bob

1126
00:37:27,599 --> 00:37:31,200
bob does the same with the secret ideal

1127
00:37:29,119 --> 00:37:31,920
class b and then both parties can

1128
00:37:31,200 --> 00:37:35,200
compute

1129
00:37:31,920 --> 00:37:36,480
the action of a b on e okay and so we

1130
00:37:35,200 --> 00:37:39,279
are interested in this

1131
00:37:36,480 --> 00:37:40,960
um because uh of uh the because it

1132
00:37:39,280 --> 00:37:41,680
defies schwarz algorithm so it's

1133
00:37:40,960 --> 00:37:44,720
possibly

1134
00:37:41,680 --> 00:37:47,520
uh post quantum secure um

1135
00:37:44,720 --> 00:37:48,240
in any case and if the dropper sees uh e

1136
00:37:47,520 --> 00:37:50,240
sees a

1137
00:37:48,240 --> 00:37:52,879
e c e and so the question the same

1138
00:37:50,240 --> 00:37:55,200
question can be asked is abe something

1139
00:37:52,880 --> 00:37:56,400
genuinely random to her appearance or

1140
00:37:55,200 --> 00:37:58,640
not okay and so

1141
00:37:56,400 --> 00:38:00,400
we can formalize this in an unsurprising

1142
00:37:58,640 --> 00:38:02,000
way as follows so this was first

1143
00:38:00,400 --> 00:38:03,599
first appeared formally installment of

1144
00:38:02,000 --> 00:38:05,440
sphd

1145
00:38:03,599 --> 00:38:06,640
and so the idea is now or the game is

1146
00:38:05,440 --> 00:38:08,160
now to distinguish between the

1147
00:38:06,640 --> 00:38:10,078
distributions

1148
00:38:08,160 --> 00:38:11,960
where on the one hand you get uh genuine

1149
00:38:10,079 --> 00:38:13,440
diffie-hellman samples so

1150
00:38:11,960 --> 00:38:16,640
e-a-e-b-e-a-b-e

1151
00:38:13,440 --> 00:38:18,000
or random quadrupoles okay and so our

1152
00:38:16,640 --> 00:38:20,640
main contribution is that

1153
00:38:18,000 --> 00:38:21,280
we um break this for almost all

1154
00:38:20,640 --> 00:38:23,598
instances

1155
00:38:21,280 --> 00:38:24,480
of the class group i will say something

1156
00:38:23,599 --> 00:38:27,680
about this almost

1157
00:38:24,480 --> 00:38:29,200
all in a second um by providing

1158
00:38:27,680 --> 00:38:30,078
a family of distinguishers and you

1159
00:38:29,200 --> 00:38:31,919
should really think of these

1160
00:38:30,079 --> 00:38:34,079
distinguishers as something similar to

1161
00:38:31,920 --> 00:38:37,760
the legendre symbol for classical dph

1162
00:38:34,079 --> 00:38:40,000
okay but again as in the case of

1163
00:38:37,760 --> 00:38:42,000
classical dth it's easy to fix

1164
00:38:40,000 --> 00:38:43,040
either by working with a subgroup of the

1165
00:38:42,000 --> 00:38:44,800
class group

1166
00:38:43,040 --> 00:38:46,960
or by working with one of these few

1167
00:38:44,800 --> 00:38:48,320
class groups to which the attack doesn't

1168
00:38:46,960 --> 00:38:49,119
apply let me already mention for

1169
00:38:48,320 --> 00:38:52,240
instance the

1170
00:38:49,119 --> 00:38:52,720
group that is used in seaside escapes

1171
00:38:52,240 --> 00:38:56,000
from

1172
00:38:52,720 --> 00:38:56,000
from this attack okay

1173
00:38:58,320 --> 00:39:02,560
now let's uh give a slightly more

1174
00:39:01,200 --> 00:39:04,560
precise statement

1175
00:39:02,560 --> 00:39:06,000
and so this involves uh group

1176
00:39:04,560 --> 00:39:07,279
homomorphisms that are called

1177
00:39:06,000 --> 00:39:09,200
assigned characters so this is

1178
00:39:07,280 --> 00:39:11,359
terminology that comes from genus theory

1179
00:39:09,200 --> 00:39:13,200
this is in their title

1180
00:39:11,359 --> 00:39:14,880
but an assigned character for now is

1181
00:39:13,200 --> 00:39:16,560
just a group homomorphism

1182
00:39:14,880 --> 00:39:18,320
from this class group to the group with

1183
00:39:16,560 --> 00:39:20,320
two elements

1184
00:39:18,320 --> 00:39:21,599
and so what we can do is given such a

1185
00:39:20,320 --> 00:39:23,440
group homomorphism

1186
00:39:21,599 --> 00:39:25,200
and given a pair of elliptic curves e

1187
00:39:23,440 --> 00:39:27,920
and b prime that are connected

1188
00:39:25,200 --> 00:39:28,640
by a secret ideal class a we can

1189
00:39:27,920 --> 00:39:31,440
evaluate

1190
00:39:28,640 --> 00:39:32,480
this assigned character in this a

1191
00:39:31,440 --> 00:39:35,680
without knowing a

1192
00:39:32,480 --> 00:39:37,119
so a is really unknown just

1193
00:39:35,680 --> 00:39:39,279
we are just given these elliptic curves

1194
00:39:37,119 --> 00:39:41,599
nevertheless we can compute this

1195
00:39:39,280 --> 00:39:43,280
and let's say quickly okay so this

1196
00:39:41,599 --> 00:39:45,200
modulus of the character is something

1197
00:39:43,280 --> 00:39:46,160
that will also be apparent soon what it

1198
00:39:45,200 --> 00:39:49,439
is

1199
00:39:46,160 --> 00:39:50,879
but um let's say in in the the cases

1200
00:39:49,440 --> 00:39:52,480
that we

1201
00:39:50,880 --> 00:39:55,359
run this attack this will be very small

1202
00:39:52,480 --> 00:39:57,760
and so this will be an efficient attack

1203
00:39:55,359 --> 00:39:59,119
so why is it an attack and i should

1204
00:39:57,760 --> 00:40:00,160
mention that this is really classical

1205
00:39:59,119 --> 00:40:02,000
time so there's no

1206
00:40:00,160 --> 00:40:04,319
quantum steps involved why is this an

1207
00:40:02,000 --> 00:40:05,440
attack well this distinguishes between

1208
00:40:04,319 --> 00:40:07,440
diffie-hellman

1209
00:40:05,440 --> 00:40:09,200
quadruples and random quadruples because

1210
00:40:07,440 --> 00:40:11,599
this is a group homomorphism

1211
00:40:09,200 --> 00:40:13,839
okay so using this algorithm we can

1212
00:40:11,599 --> 00:40:14,319
compute chi of a b we can compute chi of

1213
00:40:13,839 --> 00:40:16,480
a

1214
00:40:14,319 --> 00:40:17,920
we can compute chi of b and so because

1215
00:40:16,480 --> 00:40:20,319
it's a group homomorphism this

1216
00:40:17,920 --> 00:40:21,920
relation should hold always whereas for

1217
00:40:20,319 --> 00:40:23,359
random quadruples this will only hold

1218
00:40:21,920 --> 00:40:26,480
the probability one half

1219
00:40:23,359 --> 00:40:28,720
and so uh very quickly this can be used

1220
00:40:26,480 --> 00:40:30,240
to distinguish these two distributions

1221
00:40:28,720 --> 00:40:32,640
there's one caveat here

1222
00:40:30,240 --> 00:40:34,319
uh there exists assigned characters that

1223
00:40:32,640 --> 00:40:36,160
are trivial that constantly take the

1224
00:40:34,319 --> 00:40:36,720
value one and then in that case this is

1225
00:40:36,160 --> 00:40:38,640
not

1226
00:40:36,720 --> 00:40:40,319
not true okay so as soon as sky is not

1227
00:40:38,640 --> 00:40:42,799
trivial but i'll also say something

1228
00:40:40,319 --> 00:40:44,240
about that on the next slide

1229
00:40:42,800 --> 00:40:46,160
let's first describe this assigned

1230
00:40:44,240 --> 00:40:47,680
characters in more detail

1231
00:40:46,160 --> 00:40:49,759
and so this builds on a very old

1232
00:40:47,680 --> 00:40:52,720
observation due to the genre essentially

1233
00:40:49,760 --> 00:40:55,040
of course using a different language so

1234
00:40:52,720 --> 00:40:56,399
we have our imaginary quadratic order o

1235
00:40:55,040 --> 00:40:58,240
as i said and we consider its

1236
00:40:56,400 --> 00:41:00,240
discriminant so this is an important

1237
00:40:58,240 --> 00:41:02,640
integer one can attach to that

1238
00:41:00,240 --> 00:41:03,839
and then for all odd prime divisors of

1239
00:41:02,640 --> 00:41:06,000
that discriminant

1240
00:41:03,839 --> 00:41:08,000
we have the following phenomenon so if

1241
00:41:06,000 --> 00:41:11,040
we take a nonzero ideal

1242
00:41:08,000 --> 00:41:12,880
i of our order o and we consider this

1243
00:41:11,040 --> 00:41:13,839
legendre symbol so this is the norm of

1244
00:41:12,880 --> 00:41:16,319
the ideal

1245
00:41:13,839 --> 00:41:18,319
overall prime m yeah then this only

1246
00:41:16,319 --> 00:41:20,960
depends on the ideal class

1247
00:41:18,319 --> 00:41:22,319
of i so if we take an equivalent ideal

1248
00:41:20,960 --> 00:41:22,880
and compute this expression we will

1249
00:41:22,319 --> 00:41:24,880
always get

1250
00:41:22,880 --> 00:41:26,800
the same thing so this is constant on

1251
00:41:24,880 --> 00:41:27,680
ideal classes that's the observation by

1252
00:41:26,800 --> 00:41:29,200
legendre

1253
00:41:27,680 --> 00:41:31,440
there's a technical assumption here but

1254
00:41:29,200 --> 00:41:32,560
this is really nothing so one needs that

1255
00:41:31,440 --> 00:41:34,240
the norm is co-prime with the

1256
00:41:32,560 --> 00:41:35,279
discriminant but every ideal class

1257
00:41:34,240 --> 00:41:37,520
contains

1258
00:41:35,280 --> 00:41:38,400
such ideals so that's not a restriction

1259
00:41:37,520 --> 00:41:40,720
so in other

1260
00:41:38,400 --> 00:41:42,720
words we can define a well-defined group

1261
00:41:40,720 --> 00:41:44,640
homomorphism from this class group

1262
00:41:42,720 --> 00:41:45,919
to this group with two elements sending

1263
00:41:44,640 --> 00:41:48,319
an ideal class i

1264
00:41:45,920 --> 00:41:49,920
to the legendre symbol of the norm over

1265
00:41:48,319 --> 00:41:51,040
n okay and this is really a group

1266
00:41:49,920 --> 00:41:53,680
homomorphism

1267
00:41:51,040 --> 00:41:54,400
because both the norm and the legendre

1268
00:41:53,680 --> 00:41:56,560
symbol

1269
00:41:54,400 --> 00:41:58,240
are multiplicative okay and so this is

1270
00:41:56,560 --> 00:42:00,078
our first example of an assigned

1271
00:41:58,240 --> 00:42:02,078
character

1272
00:42:00,079 --> 00:42:03,119
um just for the sake of completeness

1273
00:42:02,079 --> 00:42:05,839
there are also uh

1274
00:42:03,119 --> 00:42:07,839
assigned characters attached to uh to

1275
00:42:05,839 --> 00:42:09,839
the prime two dividing the discriminant

1276
00:42:07,839 --> 00:42:11,680
in case this discriminant is even

1277
00:42:09,839 --> 00:42:13,599
uh but it's a bit more technical so i

1278
00:42:11,680 --> 00:42:15,680
just uh give the

1279
00:42:13,599 --> 00:42:17,040
descriptions here but the only thing you

1280
00:42:15,680 --> 00:42:18,078
should remember is that they are also

1281
00:42:17,040 --> 00:42:20,800
very explicit

1282
00:42:18,079 --> 00:42:21,520
and also taking the norm as an argument

1283
00:42:20,800 --> 00:42:23,680
okay so

1284
00:42:21,520 --> 00:42:25,680
there's a table which you can use to

1285
00:42:23,680 --> 00:42:27,040
check which of these characters are well

1286
00:42:25,680 --> 00:42:30,560
defined

1287
00:42:27,040 --> 00:42:32,400
but i won't go into that now uh

1288
00:42:30,560 --> 00:42:34,078
an interesting uh statement from genus

1289
00:42:32,400 --> 00:42:34,640
theory so genus theory was kind of

1290
00:42:34,079 --> 00:42:36,079
wrapped up

1291
00:42:34,640 --> 00:42:38,160
by gauss building on this work of

1292
00:42:36,079 --> 00:42:40,400
legendre in 1801

1293
00:42:38,160 --> 00:42:42,480
so the number of assigned characters so

1294
00:42:40,400 --> 00:42:44,160
the number of such characters

1295
00:42:42,480 --> 00:42:46,240
is related to the size of the two

1296
00:42:44,160 --> 00:42:49,118
torsion uh part of the class group

1297
00:42:46,240 --> 00:42:49,520
in this manner um and a corollary to

1298
00:42:49,119 --> 00:42:51,760
this

1299
00:42:49,520 --> 00:42:53,119
uh is that at most one of these assigned

1300
00:42:51,760 --> 00:42:54,560
characters is trivial

1301
00:42:53,119 --> 00:42:56,319
so i mentioned that it's possible that

1302
00:42:54,560 --> 00:42:58,160
an assigned character is trivial

1303
00:42:56,319 --> 00:43:00,319
but actually this is true for at most

1304
00:42:58,160 --> 00:43:02,640
one of them and so in particular

1305
00:43:00,319 --> 00:43:03,839
uh so this m is of course this modulus

1306
00:43:02,640 --> 00:43:06,078
from the previous slide

1307
00:43:03,839 --> 00:43:06,960
we we are guaranteed that the second

1308
00:43:06,079 --> 00:43:09,599
smallest

1309
00:43:06,960 --> 00:43:10,880
prime dividing the discriminant um in

1310
00:43:09,599 --> 00:43:12,319
the worst case we have to go to the

1311
00:43:10,880 --> 00:43:13,040
second smallest prime dividing

1312
00:43:12,319 --> 00:43:15,119
discriminant

1313
00:43:13,040 --> 00:43:16,880
to have a non-trivial character okay so

1314
00:43:15,119 --> 00:43:19,280
that's not too bad

1315
00:43:16,880 --> 00:43:20,400
um if r is one if there's only one

1316
00:43:19,280 --> 00:43:21,920
assigned character

1317
00:43:20,400 --> 00:43:23,920
and you see from this that is it's

1318
00:43:21,920 --> 00:43:24,400
equivalent to saying that the class

1319
00:43:23,920 --> 00:43:26,720
group

1320
00:43:24,400 --> 00:43:28,240
has an odd number of elements and then

1321
00:43:26,720 --> 00:43:30,399
there's only one assigned character and

1322
00:43:28,240 --> 00:43:32,640
then a distribution so that's bad news

1323
00:43:30,400 --> 00:43:33,920
and this is uh exactly the situation in

1324
00:43:32,640 --> 00:43:36,640
c sites

1325
00:43:33,920 --> 00:43:38,560
okay now how does this attack work well

1326
00:43:36,640 --> 00:43:40,640
to understand the attack we need a few

1327
00:43:38,560 --> 00:43:42,880
more things about this class group

1328
00:43:40,640 --> 00:43:44,799
action but actually not too much

1329
00:43:42,880 --> 00:43:46,560
so just let me recall that this set on

1330
00:43:44,800 --> 00:43:48,480
which we are acting is a set of elliptic

1331
00:43:46,560 --> 00:43:50,480
curves over some finite fields

1332
00:43:48,480 --> 00:43:52,400
um and all the endomorphism rings but we

1333
00:43:50,480 --> 00:43:52,960
won't really need that are isomorphic to

1334
00:43:52,400 --> 00:43:55,040
this

1335
00:43:52,960 --> 00:43:56,480
imaginary quadratic order that we fix

1336
00:43:55,040 --> 00:43:58,000
and we also fix the tricks but we

1337
00:43:56,480 --> 00:43:59,839
actually also won't need that

1338
00:43:58,000 --> 00:44:02,240
the most important ingredient on this

1339
00:43:59,839 --> 00:44:04,640
slide is this sentence

1340
00:44:02,240 --> 00:44:05,598
so whenever we have an elliptic curve in

1341
00:44:04,640 --> 00:44:07,920
this set

1342
00:44:05,599 --> 00:44:10,400
and whenever we have an invertible ideal

1343
00:44:07,920 --> 00:44:13,280
in our imaginary quadratic order

1344
00:44:10,400 --> 00:44:14,560
well to this we can attach an isogeny

1345
00:44:13,280 --> 00:44:17,680
emanating from

1346
00:44:14,560 --> 00:44:21,040
this elliptic curve e the codomain

1347
00:44:17,680 --> 00:44:22,480
lands again in the same set and the two

1348
00:44:21,040 --> 00:44:24,640
most important features of that

1349
00:44:22,480 --> 00:44:27,440
electronic for our needs are that

1350
00:44:24,640 --> 00:44:29,279
this hydrogen is defined over fq and the

1351
00:44:27,440 --> 00:44:32,079
degree of the isogeny is the norm

1352
00:44:29,280 --> 00:44:34,400
of the cycle so that will really be used

1353
00:44:32,079 --> 00:44:36,640
later on

1354
00:44:34,400 --> 00:44:38,160
and another nice feature but uh okay

1355
00:44:36,640 --> 00:44:40,240
this is just for completeness is that

1356
00:44:38,160 --> 00:44:40,720
this co-domain only depends on the iq

1357
00:44:40,240 --> 00:44:42,720
class

1358
00:44:40,720 --> 00:44:44,560
of the ibu and that's actually what

1359
00:44:42,720 --> 00:44:45,359
gives rise to this action and so you can

1360
00:44:44,560 --> 00:44:47,440
really

1361
00:44:45,359 --> 00:44:49,359
uh act on an elliptic curve with an

1362
00:44:47,440 --> 00:44:50,640
ideal class and you always end up with

1363
00:44:49,359 --> 00:44:52,640
the same

1364
00:44:50,640 --> 00:44:53,759
elliptic curve and so this turns out to

1365
00:44:52,640 --> 00:44:54,960
be a free and transitive

1366
00:44:53,760 --> 00:44:57,200
group action so this is just a

1367
00:44:54,960 --> 00:44:58,079
visualization this is the set we have

1368
00:44:57,200 --> 00:45:00,480
our elliptic curve

1369
00:44:58,079 --> 00:45:01,119
or any elliptic curve in this set and we

1370
00:45:00,480 --> 00:45:03,440
act on it

1371
00:45:01,119 --> 00:45:05,520
with ideal classes and as such we walk

1372
00:45:03,440 --> 00:45:08,480
around this set

1373
00:45:05,520 --> 00:45:11,119
okay now uh what is the strategy in some

1374
00:45:08,480 --> 00:45:11,119
more detail

1375
00:45:11,520 --> 00:45:15,200
well remember we want to evaluate an

1376
00:45:13,440 --> 00:45:18,240
assigned character

1377
00:45:15,200 --> 00:45:19,439
on a secret ideal class only being given

1378
00:45:18,240 --> 00:45:21,359
two elliptic curves

1379
00:45:19,440 --> 00:45:22,560
that are connected by the by that ideal

1380
00:45:21,359 --> 00:45:25,119
class okay

1381
00:45:22,560 --> 00:45:26,799
and remember this assigned character we

1382
00:45:25,119 --> 00:45:28,000
will only discuss the ones corresponding

1383
00:45:26,800 --> 00:45:29,280
to odd prime divisors of the

1384
00:45:28,000 --> 00:45:30,160
discriminant because they are a bit

1385
00:45:29,280 --> 00:45:32,880
easier

1386
00:45:30,160 --> 00:45:34,799
uh remember that uh this is computed by

1387
00:45:32,880 --> 00:45:37,040
the legendre symbol of the norm

1388
00:45:34,800 --> 00:45:39,040
uh over m but we don't know uh the

1389
00:45:37,040 --> 00:45:40,079
secret iu class i so we don't know this

1390
00:45:39,040 --> 00:45:42,160
note

1391
00:45:40,079 --> 00:45:43,760
what do we do know well we know that

1392
00:45:42,160 --> 00:45:46,399
these two elliptic curves are connected

1393
00:45:43,760 --> 00:45:48,880
by an fq exogenous

1394
00:45:46,400 --> 00:45:49,680
off degree that node okay and we can

1395
00:45:48,880 --> 00:45:51,359
also assume

1396
00:45:49,680 --> 00:45:53,040
as i already set up that normal scope

1397
00:45:51,359 --> 00:45:55,839
prime with the discriminant

1398
00:45:53,040 --> 00:45:57,040
okay now what is then the idea or the

1399
00:45:55,839 --> 00:45:59,200
basic strategy

1400
00:45:57,040 --> 00:46:00,640
of our eavesdropper eve well the goal is

1401
00:45:59,200 --> 00:46:03,118
to extract information

1402
00:46:00,640 --> 00:46:04,799
about this norm modulo m using the date

1403
00:46:03,119 --> 00:46:08,480
pairing so the tape pairing is a

1404
00:46:04,800 --> 00:46:10,480
well studied bi-linear map taking

1405
00:46:08,480 --> 00:46:11,520
values in two different groups so one

1406
00:46:10,480 --> 00:46:13,680
group

1407
00:46:11,520 --> 00:46:14,640
is the rational m torsion of your

1408
00:46:13,680 --> 00:46:16,399
elliptic curve

1409
00:46:14,640 --> 00:46:18,960
and the other is the set of rational

1410
00:46:16,400 --> 00:46:21,040
points modulo m on your elliptic curve

1411
00:46:18,960 --> 00:46:22,400
and it takes values in the end roots of

1412
00:46:21,040 --> 00:46:24,160
unity okay

1413
00:46:22,400 --> 00:46:25,520
and the nice or the most attractive

1414
00:46:24,160 --> 00:46:27,598
property for our needs is this

1415
00:46:25,520 --> 00:46:30,240
compatibility property

1416
00:46:27,599 --> 00:46:30,800
which says the following if you feed two

1417
00:46:30,240 --> 00:46:33,439
points

1418
00:46:30,800 --> 00:46:34,960
to the tape pairing or if you feed the

1419
00:46:33,440 --> 00:46:35,760
images of those points under some

1420
00:46:34,960 --> 00:46:37,760
misogyny

1421
00:46:35,760 --> 00:46:38,800
date pairing and the two outcomes are

1422
00:46:37,760 --> 00:46:41,359
related

1423
00:46:38,800 --> 00:46:42,160
by raising to the power the degree of

1424
00:46:41,359 --> 00:46:44,078
the estrogen

1425
00:46:42,160 --> 00:46:46,000
okay now remember the degree of our

1426
00:46:44,079 --> 00:46:46,560
esogenic is precisely the norm of our

1427
00:46:46,000 --> 00:46:49,920
ideal

1428
00:46:46,560 --> 00:46:51,920
we are looking for so that's our hope

1429
00:46:49,920 --> 00:46:54,319
to be able by computing some discrete

1430
00:46:51,920 --> 00:46:56,240
logarithm uh to extract the norm

1431
00:46:54,319 --> 00:46:57,520
modulo m that's the best we can hope

1432
00:46:56,240 --> 00:46:58,319
because we land in the empty roots of

1433
00:46:57,520 --> 00:47:01,440
unity's

1434
00:46:58,319 --> 00:47:04,400
unity from such an

1435
00:47:01,440 --> 00:47:07,040
equation okay now it's not clear that

1436
00:47:04,400 --> 00:47:09,599
this strategy will work so let's

1437
00:47:07,040 --> 00:47:10,560
discuss this a bit further first of all

1438
00:47:09,599 --> 00:47:12,240
this assumes

1439
00:47:10,560 --> 00:47:14,400
that the empty roots of unity are really

1440
00:47:12,240 --> 00:47:16,078
contained in fq star

1441
00:47:14,400 --> 00:47:17,520
and so that's not always true and so

1442
00:47:16,079 --> 00:47:19,680
potentially we need to extend

1443
00:47:17,520 --> 00:47:21,440
the base field to achieve that that's

1444
00:47:19,680 --> 00:47:23,359
typically not a problem except in the

1445
00:47:21,440 --> 00:47:24,960
super singular case there's a subtlety

1446
00:47:23,359 --> 00:47:26,480
because this can change you know the

1447
00:47:24,960 --> 00:47:28,480
morpheme and this can change everything

1448
00:47:26,480 --> 00:47:32,160
but in the ordinary case this is fine

1449
00:47:28,480 --> 00:47:33,920
so that's not a big deal and secondly

1450
00:47:32,160 --> 00:47:35,440
we don't want this equation to be one

1451
00:47:33,920 --> 00:47:36,880
equals one to the power

1452
00:47:35,440 --> 00:47:39,040
the norm because then we cannot learn

1453
00:47:36,880 --> 00:47:41,760
anything so we want this really to be a

1454
00:47:39,040 --> 00:47:43,520
primitive m truth of unity

1455
00:47:41,760 --> 00:47:44,800
and then thirdly and more importantly or

1456
00:47:43,520 --> 00:47:47,119
more more challenging

1457
00:47:44,800 --> 00:47:48,480
is we want to have a a pair of matching

1458
00:47:47,119 --> 00:47:51,440
points

1459
00:47:48,480 --> 00:47:52,079
so because we don't know phi we we don't

1460
00:47:51,440 --> 00:47:54,000
really

1461
00:47:52,079 --> 00:47:57,119
we can't really compute phi of p or phi

1462
00:47:54,000 --> 00:47:59,040
of q uh for for certain points p and q

1463
00:47:57,119 --> 00:48:00,880
nevertheless this strategy seems to

1464
00:47:59,040 --> 00:48:03,520
require uh

1465
00:48:00,880 --> 00:48:05,440
a set of matching point pairs pq on the

1466
00:48:03,520 --> 00:48:06,640
starting curve and p prime q prime on

1467
00:48:05,440 --> 00:48:09,119
the ending curve

1468
00:48:06,640 --> 00:48:10,960
that are related to this sog but here's

1469
00:48:09,119 --> 00:48:13,200
an important relaxation

1470
00:48:10,960 --> 00:48:14,400
actually we don't need to have such an

1471
00:48:13,200 --> 00:48:17,279
exact matching

1472
00:48:14,400 --> 00:48:17,839
pair of points it suffices that these

1473
00:48:17,280 --> 00:48:20,559
points p

1474
00:48:17,839 --> 00:48:20,960
prime and q prime are the images up to

1475
00:48:20,559 --> 00:48:24,240
some

1476
00:48:20,960 --> 00:48:25,359
scalar up to the same scalar why is that

1477
00:48:24,240 --> 00:48:28,319
well

1478
00:48:25,359 --> 00:48:29,200
if we then plug these points inside the

1479
00:48:28,319 --> 00:48:31,040
tape pairing

1480
00:48:29,200 --> 00:48:32,720
because of the bilinearity this lambda

1481
00:48:31,040 --> 00:48:35,920
comes out to the

1482
00:48:32,720 --> 00:48:37,680
to the power two as a square and so this

1483
00:48:35,920 --> 00:48:38,720
is enough because we are only interested

1484
00:48:37,680 --> 00:48:40,799
in the norm of

1485
00:48:38,720 --> 00:48:41,919
ideal in the legendre symbol of the norm

1486
00:48:40,800 --> 00:48:44,480
of our ideal over

1487
00:48:41,920 --> 00:48:45,599
m and so this doesn't change if we scale

1488
00:48:44,480 --> 00:48:47,359
it by a square

1489
00:48:45,599 --> 00:48:49,119
okay so that's really a crucial

1490
00:48:47,359 --> 00:48:50,880
relaxation and that's what's uh what

1491
00:48:49,119 --> 00:48:53,920
will be possible

1492
00:48:50,880 --> 00:48:56,800
so here's a basic example to which this

1493
00:48:53,920 --> 00:48:58,800
strategy applies and assume that the m

1494
00:48:56,800 --> 00:49:00,720
primary part so what is the same primary

1495
00:48:58,800 --> 00:49:03,920
part is the set of points

1496
00:49:00,720 --> 00:49:05,598
uh whose order is a power of m

1497
00:49:03,920 --> 00:49:07,119
so this forms a group assume that this

1498
00:49:05,599 --> 00:49:09,440
is isomorphic to z mod m

1499
00:49:07,119 --> 00:49:10,160
so basically as small as it can possibly

1500
00:49:09,440 --> 00:49:12,240
be

1501
00:49:10,160 --> 00:49:14,078
unless it's trivial okay so we assume

1502
00:49:12,240 --> 00:49:14,640
this then automatically this is also

1503
00:49:14,079 --> 00:49:17,040
true for

1504
00:49:14,640 --> 00:49:19,200
our curve e prime and that's because of

1505
00:49:17,040 --> 00:49:21,520
the type of hysogeny that connects them

1506
00:49:19,200 --> 00:49:23,598
and forces uh the group structures to be

1507
00:49:21,520 --> 00:49:25,839
the same okay so we have this

1508
00:49:23,599 --> 00:49:27,280
and now as our point p we just take any

1509
00:49:25,839 --> 00:49:28,720
point here of order m

1510
00:49:27,280 --> 00:49:31,200
this exists because of this group

1511
00:49:28,720 --> 00:49:34,558
structure and here we take any point uh

1512
00:49:31,200 --> 00:49:36,319
p prime of order m okay so far we

1513
00:49:34,559 --> 00:49:38,000
don't seem to have done anything

1514
00:49:36,319 --> 00:49:40,640
interesting but now note

1515
00:49:38,000 --> 00:49:41,359
the secret isogenic phi is defined over

1516
00:49:40,640 --> 00:49:42,799
f q

1517
00:49:41,359 --> 00:49:44,558
and the degree is co-prime with the

1518
00:49:42,800 --> 00:49:46,559
discriminant so in particular the degree

1519
00:49:44,559 --> 00:49:50,160
is co-prime with m

1520
00:49:46,559 --> 00:49:52,880
so necessarily phi of b is

1521
00:49:50,160 --> 00:49:54,480
a point on this curve of order m and so

1522
00:49:52,880 --> 00:49:54,880
because of this group structure it has

1523
00:49:54,480 --> 00:49:56,880
to be

1524
00:49:54,880 --> 00:49:58,800
a multiple of p prime or the other way

1525
00:49:56,880 --> 00:50:01,680
around p prime has to be a multiple

1526
00:49:58,800 --> 00:50:03,040
of this phi of b okay so we have this

1527
00:50:01,680 --> 00:50:04,799
multiple but we don't know which

1528
00:50:03,040 --> 00:50:06,800
multiple

1529
00:50:04,800 --> 00:50:08,960
now the nice thing about this situation

1530
00:50:06,800 --> 00:50:10,880
as as i will explain in a second

1531
00:50:08,960 --> 00:50:12,160
that for q our second point we can just

1532
00:50:10,880 --> 00:50:13,760
take p again

1533
00:50:12,160 --> 00:50:15,520
and then for q prime we just take p

1534
00:50:13,760 --> 00:50:17,920
prime again and obviously

1535
00:50:15,520 --> 00:50:18,559
q prime is just lambda times phi of q

1536
00:50:17,920 --> 00:50:21,839
because

1537
00:50:18,559 --> 00:50:22,559
q prime is p prime and q is p okay and

1538
00:50:21,839 --> 00:50:25,359
so we can

1539
00:50:22,559 --> 00:50:26,000
indeed recover lambda squared times the

1540
00:50:25,359 --> 00:50:28,640
norm

1541
00:50:26,000 --> 00:50:30,800
from uh computing the state pairing

1542
00:50:28,640 --> 00:50:32,400
because of the equalities that i just

1543
00:50:30,800 --> 00:50:33,839
mentioned on the previous slide by

1544
00:50:32,400 --> 00:50:36,000
computing a discrete log

1545
00:50:33,839 --> 00:50:37,920
remember for this to work we need that

1546
00:50:36,000 --> 00:50:39,599
this is a primitive and truth of unity

1547
00:50:37,920 --> 00:50:41,680
so it shouldn't be one

1548
00:50:39,599 --> 00:50:43,440
but that's true by the non-degeneracy of

1549
00:50:41,680 --> 00:50:45,279
the date pairing but this strongly

1550
00:50:43,440 --> 00:50:47,839
relies on this group structure

1551
00:50:45,280 --> 00:50:48,800
okay so i won't go into the details of

1552
00:50:47,839 --> 00:50:50,960
that but that's

1553
00:50:48,800 --> 00:50:52,000
another point where we really use this

1554
00:50:50,960 --> 00:50:54,640
group structure

1555
00:50:52,000 --> 00:50:55,760
that this is different from now this

1556
00:50:54,640 --> 00:50:57,839
basic example

1557
00:50:55,760 --> 00:50:59,839
generalizes to a slightly larger class

1558
00:50:57,839 --> 00:51:00,160
of examples i will go quickly over that

1559
00:50:59,839 --> 00:51:02,400
but

1560
00:51:00,160 --> 00:51:03,440
uh if your group if your m primary part

1561
00:51:02,400 --> 00:51:05,839
is cyclic

1562
00:51:03,440 --> 00:51:06,640
then you can really play the same game

1563
00:51:05,839 --> 00:51:08,480
again for p

1564
00:51:06,640 --> 00:51:10,480
and p prime you take any point of order

1565
00:51:08,480 --> 00:51:12,720
m and for the same reason they will be

1566
00:51:10,480 --> 00:51:15,280
connected by a secret scalar lambda

1567
00:51:12,720 --> 00:51:16,799
but now for q you cannot take p

1568
00:51:15,280 --> 00:51:17,839
otherwise this state pairing would

1569
00:51:16,800 --> 00:51:20,880
become one

1570
00:51:17,839 --> 00:51:23,040
for q you have to take

1571
00:51:20,880 --> 00:51:24,480
a point such that m to the r minus one

1572
00:51:23,040 --> 00:51:26,800
times q equals p

1573
00:51:24,480 --> 00:51:30,000
so something really at the bottom here

1574
00:51:26,800 --> 00:51:30,000
of this um

1575
00:51:30,640 --> 00:51:37,839
sorry here

1576
00:51:44,319 --> 00:51:49,040
yeah and so if we take our points q and

1577
00:51:46,880 --> 00:51:52,559
q prime consistently like that

1578
00:51:49,040 --> 00:51:52,558
and then at this point

1579
00:51:52,640 --> 00:51:56,000
q and q prime and q and phi of q are

1580
00:51:55,200 --> 00:51:58,240
again

1581
00:51:56,000 --> 00:51:59,920
connected by the same scale and lambda

1582
00:51:58,240 --> 00:52:02,959
actually it could only be that scalar

1583
00:51:59,920 --> 00:52:04,800
modulo m but that's enough okay

1584
00:52:02,960 --> 00:52:06,480
and then you have exactly the same

1585
00:52:04,800 --> 00:52:07,920
reasoning so by taking q

1586
00:52:06,480 --> 00:52:10,000
and two prime like that you will have

1587
00:52:07,920 --> 00:52:10,640
again an outcome that is different from

1588
00:52:10,000 --> 00:52:14,079
one

1589
00:52:10,640 --> 00:52:14,960
okay now what about the general strategy

1590
00:52:14,079 --> 00:52:18,400
well then we use

1591
00:52:14,960 --> 00:52:19,920
isogeny volcanoes um so what are exogeny

1592
00:52:18,400 --> 00:52:21,680
volcanoes well they are

1593
00:52:19,920 --> 00:52:23,520
graphs whose vertices are elliptic

1594
00:52:21,680 --> 00:52:26,558
curves uh and the edges

1595
00:52:23,520 --> 00:52:28,720
are mi surgeons okay and so it was

1596
00:52:26,559 --> 00:52:29,599
it's well known uh since work of lens

1597
00:52:28,720 --> 00:52:31,759
from 96

1598
00:52:29,599 --> 00:52:32,880
and this was also revisited by mira in

1599
00:52:31,760 --> 00:52:35,040
2007

1600
00:52:32,880 --> 00:52:37,119
that by walking down to the floor of the

1601
00:52:35,040 --> 00:52:38,480
isogenic volcano you can make the m

1602
00:52:37,119 --> 00:52:40,960
primary part cyclic

1603
00:52:38,480 --> 00:52:43,119
for instance here's an example where the

1604
00:52:40,960 --> 00:52:45,280
m primary part is not cyclic

1605
00:52:43,119 --> 00:52:46,720
so this elliptic curve sits somewhere on

1606
00:52:45,280 --> 00:52:49,040
this volcano

1607
00:52:46,720 --> 00:52:50,640
and now we walk down the volcano and for

1608
00:52:49,040 --> 00:52:52,400
each step basically we'll take a

1609
00:52:50,640 --> 00:52:53,040
component here and take it and put it

1610
00:52:52,400 --> 00:52:55,119
there

1611
00:52:53,040 --> 00:52:56,079
yeah so and this uh this will happen at

1612
00:52:55,119 --> 00:52:57,839
this step

1613
00:52:56,079 --> 00:53:00,240
and then if we are at the floor we will

1614
00:52:57,839 --> 00:53:02,240
have a cyclic and primary part

1615
00:53:00,240 --> 00:53:03,759
so if we do this for our two elliptic

1616
00:53:02,240 --> 00:53:07,279
curves together

1617
00:53:03,760 --> 00:53:10,720
um we uh yeah we walk

1618
00:53:07,280 --> 00:53:12,800
down all the way to the bottom

1619
00:53:10,720 --> 00:53:14,000
and now we know by this previous remark

1620
00:53:12,800 --> 00:53:16,079
that these m primary

1621
00:53:14,000 --> 00:53:17,440
parts will be cyclic on the other hand

1622
00:53:16,079 --> 00:53:19,599
they will still be connected

1623
00:53:17,440 --> 00:53:20,960
by some ideal in some class group it

1624
00:53:19,599 --> 00:53:23,440
will be a different class group

1625
00:53:20,960 --> 00:53:24,880
because these descending isogenes change

1626
00:53:23,440 --> 00:53:27,040
the endomorphism ring

1627
00:53:24,880 --> 00:53:28,319
okay but nevertheless they will still be

1628
00:53:27,040 --> 00:53:30,640
connected by an ideal

1629
00:53:28,319 --> 00:53:31,599
and by our previous work we know how to

1630
00:53:30,640 --> 00:53:34,319
compute uh

1631
00:53:31,599 --> 00:53:35,839
sorry uh this character value of that

1632
00:53:34,319 --> 00:53:37,920
ideal uh note

1633
00:53:35,839 --> 00:53:39,200
uh the order changes but m will still be

1634
00:53:37,920 --> 00:53:40,800
a divisor of

1635
00:53:39,200 --> 00:53:43,118
its discriminant so we will still have

1636
00:53:40,800 --> 00:53:46,559
that character available

1637
00:53:43,119 --> 00:53:47,200
and then we can prove um uh using a

1638
00:53:46,559 --> 00:53:48,880
result

1639
00:53:47,200 --> 00:53:51,520
in a paper we found in a paper by

1640
00:53:48,880 --> 00:53:53,040
sutherland that this character value

1641
00:53:51,520 --> 00:53:54,880
that we computed is actually also the

1642
00:53:53,040 --> 00:53:58,079
character value

1643
00:53:54,880 --> 00:54:00,960
okay so that's uh the complete uh

1644
00:53:58,079 --> 00:54:01,520
story actually of our uh attack so let

1645
00:54:00,960 --> 00:54:04,960
me end

1646
00:54:01,520 --> 00:54:07,200
uh with some concluding remarks um

1647
00:54:04,960 --> 00:54:08,480
so i didn't say something about these

1648
00:54:07,200 --> 00:54:09,919
characters epsilon delta that

1649
00:54:08,480 --> 00:54:12,400
corresponds to

1650
00:54:09,920 --> 00:54:14,480
the divisor m equals two uh but actually

1651
00:54:12,400 --> 00:54:15,920
the same strategy works it's just a

1652
00:54:14,480 --> 00:54:16,640
little bit more technical instead of the

1653
00:54:15,920 --> 00:54:18,400
two

1654
00:54:16,640 --> 00:54:20,000
uh date pairing you need to work with

1655
00:54:18,400 --> 00:54:21,760
the four eight uh date pairing or the

1656
00:54:20,000 --> 00:54:22,319
eight state pairing but uh apart from

1657
00:54:21,760 --> 00:54:25,200
that

1658
00:54:22,319 --> 00:54:27,040
there's no difference uh i also kind of

1659
00:54:25,200 --> 00:54:28,720
skipped super singularity curves so i

1660
00:54:27,040 --> 00:54:31,200
already mentioned it if you extend

1661
00:54:28,720 --> 00:54:33,279
the base fields super singular elliptic

1662
00:54:31,200 --> 00:54:35,040
curves behave a bit more different

1663
00:54:33,280 --> 00:54:37,599
but also with respect to these isogeny

1664
00:54:35,040 --> 00:54:39,599
volcanoes they behave differently

1665
00:54:37,599 --> 00:54:41,280
but we can give a complete ad hoc

1666
00:54:39,599 --> 00:54:42,960
treatment of the super single case and

1667
00:54:41,280 --> 00:54:44,880
actually this was the first case

1668
00:54:42,960 --> 00:54:46,880
that we did before doing the previous

1669
00:54:44,880 --> 00:54:49,440
work so let me just

1670
00:54:46,880 --> 00:54:51,359
go quick over this there are two

1671
00:54:49,440 --> 00:54:53,040
interesting cases

1672
00:54:51,359 --> 00:54:54,960
so we always work with super singular

1673
00:54:53,040 --> 00:54:55,520
pickers over fp in this context and

1674
00:54:54,960 --> 00:54:57,920
either p

1675
00:54:55,520 --> 00:54:59,119
is one not four and in those cases

1676
00:54:57,920 --> 00:55:01,440
there's a unique

1677
00:54:59,119 --> 00:55:03,280
uh non-trivial character and it there's

1678
00:55:01,440 --> 00:55:05,920
a very explicit formula

1679
00:55:03,280 --> 00:55:07,440
for evaluating the character in a secret

1680
00:55:05,920 --> 00:55:08,079
ideal class connecting two elliptic

1681
00:55:07,440 --> 00:55:09,839
curves

1682
00:55:08,079 --> 00:55:11,920
you just take the right curve

1683
00:55:09,839 --> 00:55:13,279
coefficients and raise them

1684
00:55:11,920 --> 00:55:15,119
take the quotient and raise to the power

1685
00:55:13,280 --> 00:55:16,480
p minus one over four okay so that's a

1686
00:55:15,119 --> 00:55:18,880
very explicit formula

1687
00:55:16,480 --> 00:55:20,720
so here the attack also works and if p

1688
00:55:18,880 --> 00:55:22,240
is three mod four then there are no

1689
00:55:20,720 --> 00:55:23,598
non-trivial characters i already

1690
00:55:22,240 --> 00:55:24,640
mentioned that and this is for instance

1691
00:55:23,599 --> 00:55:28,079
the case

1692
00:55:24,640 --> 00:55:30,720
for seaside and as a second remark

1693
00:55:28,079 --> 00:55:33,119
uh to break the decision of the phi

1694
00:55:30,720 --> 00:55:34,959
helmet problem it suffices to evaluate

1695
00:55:33,119 --> 00:55:36,640
one of these characters but in many

1696
00:55:34,960 --> 00:55:39,119
cases you can evaluate several of these

1697
00:55:36,640 --> 00:55:41,200
characters or even all of them

1698
00:55:39,119 --> 00:55:42,960
and that's helpful because this will

1699
00:55:41,200 --> 00:55:44,720
make your attack more powerful

1700
00:55:42,960 --> 00:55:47,119
okay so for each sample you will have a

1701
00:55:44,720 --> 00:55:49,040
bigger probability of being able to

1702
00:55:47,119 --> 00:55:50,640
to attack the decisional difficulty

1703
00:55:49,040 --> 00:55:52,400
helmet problem

1704
00:55:50,640 --> 00:55:54,078
and actually if you really can compute

1705
00:55:52,400 --> 00:55:55,359
all the characters what you're actually

1706
00:55:54,079 --> 00:55:58,880
computing this is also

1707
00:55:55,359 --> 00:56:01,680
consequence of genus theory is the

1708
00:55:58,880 --> 00:56:02,000
coset modulo the subgroup of squares

1709
00:56:01,680 --> 00:56:06,799
inside

1710
00:56:02,000 --> 00:56:06,799
the class group of your secret ido i

1711
00:56:13,760 --> 00:56:22,000
yeah this can be used to reduce uh this

1712
00:56:18,000 --> 00:56:26,240
to um the hardness of uh

1713
00:56:22,000 --> 00:56:28,000
the class group uh of the crs protocol

1714
00:56:26,240 --> 00:56:30,000
for this class loop product of the

1715
00:56:28,000 --> 00:56:34,720
subgroup of squares

1716
00:56:30,000 --> 00:56:34,720
okay um so let me maybe

1717
00:56:35,760 --> 00:56:41,200
um yeah just mention that the index so

1718
00:56:39,599 --> 00:56:43,200
that the amount of reduction you have

1719
00:56:41,200 --> 00:56:44,720
here depends on the

1720
00:56:43,200 --> 00:56:47,118
number of characters and as i already

1721
00:56:44,720 --> 00:56:50,000
mentioned this depends on the

1722
00:56:47,119 --> 00:56:50,960
on the size of the torsion part of the

1723
00:56:50,000 --> 00:56:53,520
class group so

1724
00:56:50,960 --> 00:56:54,880
in a way you could view this as a as a

1725
00:56:53,520 --> 00:56:55,599
confirmation that the structure of the

1726
00:56:54,880 --> 00:56:58,240
class group

1727
00:56:55,599 --> 00:56:59,359
really affects the security of crs so i

1728
00:56:58,240 --> 00:57:01,919
think i'm a bit

1729
00:56:59,359 --> 00:57:04,240
over time so let me maybe just mention

1730
00:57:01,920 --> 00:57:07,520
with this recommendation

1731
00:57:04,240 --> 00:57:09,439
that in order to avoid these kind of

1732
00:57:07,520 --> 00:57:10,640
attacks we recommend to use maximal

1733
00:57:09,440 --> 00:57:12,079
orders

1734
00:57:10,640 --> 00:57:14,879
because of a similar reasoning that was

1735
00:57:12,079 --> 00:57:15,599
known before and such that the the class

1736
00:57:14,880 --> 00:57:18,640
number

1737
00:57:15,599 --> 00:57:22,319
is up and this is an example of such uh

1738
00:57:18,640 --> 00:57:24,960
such things so i'll stop here thank you

1739
00:57:22,319 --> 00:57:26,640
okay thanks a lot uh utter for your talk

1740
00:57:24,960 --> 00:57:30,880
and a great work

1741
00:57:26,640 --> 00:57:33,040
and so

1742
00:57:30,880 --> 00:57:34,630
don't we have time for a question if any

1743
00:57:33,040 --> 00:57:36,880
or we can move to the next

1744
00:57:34,630 --> 00:57:39,200
[Music]

1745
00:57:36,880 --> 00:57:40,400
sure yeah we have a couple questions on

1746
00:57:39,200 --> 00:57:43,759
uh

1747
00:57:40,400 --> 00:57:46,240
zulip uh the first is from tomas rosa

1748
00:57:43,760 --> 00:57:47,040
uh says do you see some notable backward

1749
00:57:46,240 --> 00:57:49,439
implications

1750
00:57:47,040 --> 00:57:50,400
for complexity of certain instances of

1751
00:57:49,440 --> 00:57:54,640
the hidden shift

1752
00:57:50,400 --> 00:57:56,000
problem um

1753
00:57:54,640 --> 00:57:57,920
well except the last thing that i

1754
00:57:56,000 --> 00:58:01,280
mentioned so

1755
00:57:57,920 --> 00:58:03,680
our attack computes the coset of uh

1756
00:58:01,280 --> 00:58:06,000
the secret id class i modulo the

1757
00:58:03,680 --> 00:58:09,359
subgroup of squares

1758
00:58:06,000 --> 00:58:11,599
and so this can be used to reduce uh

1759
00:58:09,359 --> 00:58:12,640
the hardness of the hidden shift problem

1760
00:58:11,599 --> 00:58:15,040
in this context

1761
00:58:12,640 --> 00:58:16,240
uh to this smaller group which is the

1762
00:58:15,040 --> 00:58:18,640
subgroup of squares

1763
00:58:16,240 --> 00:58:19,919
okay but typically this is not a big

1764
00:58:18,640 --> 00:58:22,640
reduction

1765
00:58:19,920 --> 00:58:24,000
but it could be it's some power of of

1766
00:58:22,640 --> 00:58:25,680
two

1767
00:58:24,000 --> 00:58:29,359
but some small power of two so that's

1768
00:58:25,680 --> 00:58:29,359
the only thing we are aware of

1769
00:58:29,520 --> 00:58:33,119
great uh and then uh one more question

1770
00:58:32,079 --> 00:58:35,920
uh from hotec

1771
00:58:33,119 --> 00:58:36,799
wii does the attack also work for uh

1772
00:58:35,920 --> 00:58:39,200
d-lin

1773
00:58:36,799 --> 00:58:40,720
uh the context being that ddh is broken

1774
00:58:39,200 --> 00:58:42,078
in symmetric pairing groups one way to

1775
00:58:40,720 --> 00:58:45,520
get around that is to work with

1776
00:58:42,079 --> 00:58:51,839
d-lin i don't know what vlan

1777
00:58:45,520 --> 00:58:51,839
is i'm sorry decision linear uh

1778
00:58:52,319 --> 00:58:55,759
tech you can give more clarification if

1779
00:58:53,839 --> 00:58:56,480
you like sorry i will need to look uh

1780
00:58:55,760 --> 00:58:59,200
look it up

1781
00:58:56,480 --> 00:58:59,760
okay that's fine we can take that uh to

1782
00:58:59,200 --> 00:59:02,078
zula

1783
00:58:59,760 --> 00:59:02,960
i guess i just had a quick question um

1784
00:59:02,079 --> 00:59:06,400
you mentioned that

1785
00:59:02,960 --> 00:59:07,760
uh certain candidates like csidh i guess

1786
00:59:06,400 --> 00:59:08,640
uh avoided this attack was that

1787
00:59:07,760 --> 00:59:11,119
purposeful

1788
00:59:08,640 --> 00:59:12,558
by the you know this the authors of the

1789
00:59:11,119 --> 00:59:13,440
prime nothing or do you think it was by

1790
00:59:12,559 --> 00:59:17,200
accident

1791
00:59:13,440 --> 00:59:19,839
this is by accident yeah so um

1792
00:59:17,200 --> 00:59:21,279
yeah this was just uh because this

1793
00:59:19,839 --> 00:59:22,799
happens to be the endomorphism ring of

1794
00:59:21,280 --> 00:59:24,400
the easiest super singular elliptic

1795
00:59:22,799 --> 00:59:25,680
curve one can write down which is y

1796
00:59:24,400 --> 00:59:29,359
squared equals x u plus

1797
00:59:25,680 --> 00:59:31,598
x and so it's uh it's by accident i

1798
00:59:29,359 --> 00:59:34,160
would say

1799
00:59:31,599 --> 00:59:34,720
that's yeah uh okay so nice thank you

1800
00:59:34,160 --> 00:59:37,279
very much

1801
00:59:34,720 --> 00:59:37,919
i think we can move on okay cool so

1802
00:59:37,280 --> 00:59:41,119
thanks

1803
00:59:37,920 --> 00:59:44,640
and time to move to the last uh

1804
00:59:41,119 --> 00:59:48,640
uh talk and uh best pet power winner

1805
00:59:44,640 --> 00:59:48,640
uh yosuke will give the talk

1806
00:59:48,730 --> 00:59:51,880
[Music]

1807
00:59:55,520 --> 01:00:02,480
so can you see it yes okay so

1808
01:00:00,720 --> 01:00:04,399
thank you very much for introductions

1809
01:00:02,480 --> 01:00:07,680
and i'm very happy to

1810
01:00:04,400 --> 01:00:11,040
get our best paper about crypto 2020

1811
01:00:07,680 --> 01:00:14,319
so i'm very happy so uh the topic

1812
01:00:11,040 --> 01:00:16,319
is about symmetrical crypto and so it's

1813
01:00:14,319 --> 01:00:19,520
a crypt analysis papers

1814
01:00:16,319 --> 01:00:21,359
so first things right so that we i want

1815
01:00:19,520 --> 01:00:23,720
to explain the

1816
01:00:21,359 --> 01:00:25,279
uh high level overview for general

1817
01:00:23,720 --> 01:00:27,680
cryptographers

1818
01:00:25,280 --> 01:00:28,880
and after that i want to explain the

1819
01:00:27,680 --> 01:00:31,919
more technical

1820
01:00:28,880 --> 01:00:33,359
uh overview so if you are not familiar

1821
01:00:31,920 --> 01:00:35,680
with symmetric equipment

1822
01:00:33,359 --> 01:00:36,720
analysis so the please focus on the

1823
01:00:35,680 --> 01:00:43,839
first six

1824
01:00:36,720 --> 01:00:43,839
slides okay so now let's start the talk

1825
01:00:45,280 --> 01:00:53,440
okay uh the topic is about ar

1826
01:00:49,680 --> 01:00:56,960
is it okay okay so topic is about

1827
01:00:53,440 --> 01:00:59,359
a rx cyphers so alex ciphers are one of

1828
01:00:56,960 --> 01:01:02,480
the design strategy for symmetric

1829
01:00:59,359 --> 01:01:05,759
cyphers and usually so

1830
01:01:02,480 --> 01:01:09,119
we so the arx ciphers are compared to

1831
01:01:05,760 --> 01:01:12,640
xbox-based cyphers like aes

1832
01:01:09,119 --> 01:01:15,839
so alex cyprus the component

1833
01:01:12,640 --> 01:01:16,319
modular additions rotation and explosive

1834
01:01:15,839 --> 01:01:20,799
or

1835
01:01:16,319 --> 01:01:20,799
like this picture so

1836
01:01:21,359 --> 01:01:25,520
as far as i know the fast alex cipher is

1837
01:01:24,319 --> 01:01:28,720
speed

1838
01:01:25,520 --> 01:01:32,400
at 8 1987

1839
01:01:28,720 --> 01:01:35,598
and there are some successful as cyprus

1840
01:01:32,400 --> 01:01:36,319
successful alex ciphers for example

1841
01:01:35,599 --> 01:01:40,079
cha-cha and

1842
01:01:36,319 --> 01:01:43,440
chesky and the before our session

1843
01:01:40,079 --> 01:01:47,520
a new alex cipher families proposed

1844
01:01:43,440 --> 01:01:51,359
c clocks and t-labs so we have uh

1845
01:01:47,520 --> 01:01:54,880
some alx ciphers and why aortx ciphers

1846
01:01:51,359 --> 01:01:55,598
is important so the reason is alex

1847
01:01:54,880 --> 01:01:58,480
cipher's

1848
01:01:55,599 --> 01:01:59,440
it has very nice high performance on the

1849
01:01:58,480 --> 01:02:02,319
software

1850
01:01:59,440 --> 01:02:03,599
because the modular edition location and

1851
01:02:02,319 --> 01:02:09,038
xor is

1852
01:02:03,599 --> 01:02:11,920
very familiar on any cpu

1853
01:02:09,039 --> 01:02:13,839
so the motivation of my talk is the

1854
01:02:11,920 --> 01:02:17,599
security analysis

1855
01:02:13,839 --> 01:02:20,640
for alex cipher is sufficient or not

1856
01:02:17,599 --> 01:02:24,160
so the of course we need to compare with

1857
01:02:20,640 --> 01:02:28,319
compared to xbox-based ciphers so

1858
01:02:24,160 --> 01:02:30,879
as you know the aes used xbox so

1859
01:02:28,319 --> 01:02:33,279
there are many many design papers for

1860
01:02:30,880 --> 01:02:34,559
xbox space cipher and many many attack

1861
01:02:33,280 --> 01:02:37,440
papers for

1862
01:02:34,559 --> 01:02:39,119
against xbox-based cipher and many many

1863
01:02:37,440 --> 01:02:42,640
analysis too

1864
01:02:39,119 --> 01:02:46,480
to evaluate the xbox-based servers

1865
01:02:42,640 --> 01:02:50,640
but so compared to xbox-based ciphers

1866
01:02:46,480 --> 01:02:52,720
less analysis uh against sarx ciphers

1867
01:02:50,640 --> 01:02:54,240
of course uh some knowledge for

1868
01:02:52,720 --> 01:02:57,680
xbox-based cipher is

1869
01:02:54,240 --> 01:03:00,959
also useful to alex ciphers but it's not

1870
01:02:57,680 --> 01:03:04,879
always so but so

1871
01:03:00,960 --> 01:03:08,400
we are x cipher is very nice performance

1872
01:03:04,880 --> 01:03:12,000
so for example a cha-cha is already

1873
01:03:08,400 --> 01:03:13,599
uh commonly used in tls and the chassis

1874
01:03:12,000 --> 01:03:16,720
is also self-advised by

1875
01:03:13,599 --> 01:03:18,960
iso so i think uh

1876
01:03:16,720 --> 01:03:21,359
so the motivation is urgent necessity

1877
01:03:18,960 --> 01:03:24,559
for security analysis for ar

1878
01:03:21,359 --> 01:03:27,200
x siphons but

1879
01:03:24,559 --> 01:03:29,440
of course the analyzing arg cipher is

1880
01:03:27,200 --> 01:03:31,839
very very difficult so

1881
01:03:29,440 --> 01:03:33,680
because there are some difficulty of

1882
01:03:31,839 --> 01:03:36,960
analysis

1883
01:03:33,680 --> 01:03:40,000
so one of the reason is

1884
01:03:36,960 --> 01:03:42,640
uh so there is no xbox

1885
01:03:40,000 --> 01:03:44,160
so the only source of nonlinearity is

1886
01:03:42,640 --> 01:03:47,440
modular addition

1887
01:03:44,160 --> 01:03:49,520
but of course modularization only one

1888
01:03:47,440 --> 01:03:52,640
modularization is very very

1889
01:03:49,520 --> 01:03:54,319
simple operations so if we want to

1890
01:03:52,640 --> 01:03:58,319
attack

1891
01:03:54,319 --> 01:04:00,880
a few long alx ciphers there are very

1892
01:03:58,319 --> 01:04:02,160
efficient differential and linear

1893
01:04:00,880 --> 01:04:05,839
characteristics

1894
01:04:02,160 --> 01:04:08,960
so usually as a target is a fuel round

1895
01:04:05,839 --> 01:04:11,440
it's a very very easy to attack but

1896
01:04:08,960 --> 01:04:14,160
after a few rounds the security is

1897
01:04:11,440 --> 01:04:17,039
significantly enhanced

1898
01:04:14,160 --> 01:04:17,680
so for example this is a so just an

1899
01:04:17,039 --> 01:04:20,960
image

1900
01:04:17,680 --> 01:04:21,680
of the security uh proper security

1901
01:04:20,960 --> 01:04:25,039
property of

1902
01:04:21,680 --> 01:04:27,118
lx ciphers as a faster few rounds

1903
01:04:25,039 --> 01:04:28,559
as a differential probability and the

1904
01:04:27,119 --> 01:04:31,039
linear scale correlation

1905
01:04:28,559 --> 01:04:32,160
is very high so it's a very easy to

1906
01:04:31,039 --> 01:04:35,760
distinguish

1907
01:04:32,160 --> 01:04:36,078
but after some rounds other probability

1908
01:04:35,760 --> 01:04:39,119
is

1909
01:04:36,079 --> 01:04:42,880
dramatically worse and this axis

1910
01:04:39,119 --> 01:04:43,359
is a minus log 2 of p so the behavior is

1911
01:04:42,880 --> 01:04:47,200
double

1912
01:04:43,359 --> 01:04:50,000
exponential so this example

1913
01:04:47,200 --> 01:04:51,200
so that we can attack up to 4 round but

1914
01:04:50,000 --> 01:04:52,960
it's unlikely to

1915
01:04:51,200 --> 01:04:55,160
attract five rounds because the

1916
01:04:52,960 --> 01:04:58,240
probability is 2 to the minus

1917
01:04:55,160 --> 01:05:01,680
162 so which probability is

1918
01:04:58,240 --> 01:05:04,879
super low so

1919
01:05:01,680 --> 01:05:05,839
as a main focus of our paper is

1920
01:05:04,880 --> 01:05:08,720
differential

1921
01:05:05,839 --> 01:05:09,279
linear time so differential linear

1922
01:05:08,720 --> 01:05:12,240
attack

1923
01:05:09,280 --> 01:05:14,640
is not a new attack techniques and this

1924
01:05:12,240 --> 01:05:18,640
attack method was already proposed

1925
01:05:14,640 --> 01:05:22,160
at the 19 1994

1926
01:05:18,640 --> 01:05:26,240
so the idea is combination

1927
01:05:22,160 --> 01:05:27,520
attack so first uh this is a four of the

1928
01:05:26,240 --> 01:05:30,078
cipher

1929
01:05:27,520 --> 01:05:30,880
the forum cipher is divided into two

1930
01:05:30,079 --> 01:05:33,280
parts

1931
01:05:30,880 --> 01:05:34,079
and the first part we apply differential

1932
01:05:33,280 --> 01:05:37,200
attack

1933
01:05:34,079 --> 01:05:40,720
and second part we use linear attack

1934
01:05:37,200 --> 01:05:43,359
and so in the middle of the cipher

1935
01:05:40,720 --> 01:05:46,160
we also magically connect from

1936
01:05:43,359 --> 01:05:49,440
differential adaptive linear

1937
01:05:46,160 --> 01:05:53,038
so by using the same image

1938
01:05:49,440 --> 01:05:55,119
so i said it's unlikely to attack

1939
01:05:53,039 --> 01:05:57,520
five rounds by using traditional

1940
01:05:55,119 --> 01:06:00,400
differential or linear attacks

1941
01:05:57,520 --> 01:06:01,200
but if we use a differential linear type

1942
01:06:00,400 --> 01:06:04,160
techniques

1943
01:06:01,200 --> 01:06:06,240
so by combining three round differential

1944
01:06:04,160 --> 01:06:07,440
characteristics and three land linear

1945
01:06:06,240 --> 01:06:10,640
characteristics

1946
01:06:07,440 --> 01:06:14,000
we can attack six rounds and as also

1947
01:06:10,640 --> 01:06:15,440
for example so let's focus let's see the

1948
01:06:14,000 --> 01:06:17,520
previous best

1949
01:06:15,440 --> 01:06:18,480
hit recovery attack against chacha and

1950
01:06:17,520 --> 01:06:21,520
chesky

1951
01:06:18,480 --> 01:06:22,880
so such best attack comes from the

1952
01:06:21,520 --> 01:06:24,640
differential linear tax

1953
01:06:22,880 --> 01:06:27,200
so our program has is also

1954
01:06:24,640 --> 01:06:30,400
differentially attacked

1955
01:06:27,200 --> 01:06:31,759
so contrary this is a summary of

1956
01:06:30,400 --> 01:06:35,680
contributions

1957
01:06:31,760 --> 01:06:38,720
so we propose a new two techniques

1958
01:06:35,680 --> 01:06:42,078
for differential linear attack and

1959
01:06:38,720 --> 01:06:43,919
we improve both sides so we improve the

1960
01:06:42,079 --> 01:06:44,880
technique for a differential path and

1961
01:06:43,920 --> 01:06:48,000
linear part

1962
01:06:44,880 --> 01:06:48,799
and so we have two independent uh so new

1963
01:06:48,000 --> 01:06:51,920
techniques

1964
01:06:48,799 --> 01:06:55,119
and uh we use both or

1965
01:06:51,920 --> 01:06:56,640
either so then we finally lead the best

1966
01:06:55,119 --> 01:06:57,280
skill recovery attack against the

1967
01:06:56,640 --> 01:07:01,440
cha-cha and

1968
01:06:57,280 --> 01:07:03,839
chesky unfortunately as a it's a

1969
01:07:01,440 --> 01:07:05,039
i we can't improve the number of rounds

1970
01:07:03,839 --> 01:07:08,078
we can attack

1971
01:07:05,039 --> 01:07:13,119
but the data and time complexity uh

1972
01:07:08,079 --> 01:07:15,280
is significantly uh so reduced

1973
01:07:13,119 --> 01:07:16,720
okay so there are from now so that i

1974
01:07:15,280 --> 01:07:20,319
want to explain

1975
01:07:16,720 --> 01:07:22,640
more technical uh part

1976
01:07:20,319 --> 01:07:24,960
so first i want to explain what is the

1977
01:07:22,640 --> 01:07:28,078
differential linear attack

1978
01:07:24,960 --> 01:07:30,960
so the cipher is divided into two parts

1979
01:07:28,079 --> 01:07:32,720
the first part is e1 and second part is

1980
01:07:30,960 --> 01:07:35,599
e2

1981
01:07:32,720 --> 01:07:37,439
so for our first part we apply

1982
01:07:35,599 --> 01:07:39,839
differential attack

1983
01:07:37,440 --> 01:07:40,720
so in this case the input difference is

1984
01:07:39,839 --> 01:07:44,078
delta in

1985
01:07:40,720 --> 01:07:46,078
and output difference is delta m and

1986
01:07:44,079 --> 01:07:48,079
the probability satisfying this

1987
01:07:46,079 --> 01:07:51,839
differential uh

1988
01:07:48,079 --> 01:07:53,440
this differential is p second step is a

1989
01:07:51,839 --> 01:07:56,240
linear trade from gamma

1990
01:07:53,440 --> 01:07:57,119
m to gamma out and this correlation

1991
01:07:56,240 --> 01:08:01,118
satisfying

1992
01:07:57,119 --> 01:08:04,079
this a one bit approximation is two

1993
01:08:01,119 --> 01:08:05,520
then in the differential linear tab we

1994
01:08:04,079 --> 01:08:09,280
focus on the

1995
01:08:05,520 --> 01:08:11,759
correlation of this approximations

1996
01:08:09,280 --> 01:08:12,720
the left side is an inner product

1997
01:08:11,760 --> 01:08:16,080
between gamma

1998
01:08:12,720 --> 01:08:19,439
out and e of x and right side is a

1999
01:08:16,080 --> 01:08:22,719
inner product between gamma out and e of

2000
01:08:19,439 --> 01:08:25,120
x plus delta e and if

2001
01:08:22,719 --> 01:08:27,600
so the differential probabilities p and

2002
01:08:25,120 --> 01:08:30,238
the linear correlation is q

2003
01:08:27,600 --> 01:08:31,600
then uh the correlation satisfying this

2004
01:08:30,238 --> 01:08:34,718
approximation

2005
01:08:31,600 --> 01:08:37,759
is p2 squared so

2006
01:08:34,719 --> 01:08:39,920
but this is a one meter

2007
01:08:37,759 --> 01:08:43,120
approximation so to distinguish the

2008
01:08:39,920 --> 01:08:45,920
linear cipher with the ideal ciphers

2009
01:08:43,120 --> 01:08:46,238
the required data is p to the minus two

2010
01:08:45,920 --> 01:08:49,279
to

2011
01:08:46,238 --> 01:08:49,278
the minus four pairs

2012
01:08:49,920 --> 01:08:54,960
so this remains uh also the main

2013
01:08:53,040 --> 01:08:55,679
framework of differential linear type

2014
01:08:54,960 --> 01:08:59,520
but uh

2015
01:08:55,679 --> 01:09:02,239
can be constant when we lead the best

2016
01:08:59,520 --> 01:09:02,960
attack by using differential linear

2017
01:09:02,238 --> 01:09:06,559
attack

2018
01:09:02,960 --> 01:09:09,279
as a convenient method use the middle

2019
01:09:06,560 --> 01:09:11,520
adding middle round so this case the

2020
01:09:09,279 --> 01:09:13,040
first part and last part is the same as

2021
01:09:11,520 --> 01:09:16,560
the previous one

2022
01:09:13,040 --> 01:09:18,839
so the middle part is added and

2023
01:09:16,560 --> 01:09:20,159
this distinguishable is verified

2024
01:09:18,839 --> 01:09:23,359
experimentally

2025
01:09:20,158 --> 01:09:25,759
so we london we choose a

2026
01:09:23,359 --> 01:09:26,799
appropriate delta m and appropriate

2027
01:09:25,759 --> 01:09:30,319
gamma n

2028
01:09:26,799 --> 01:09:33,839
and uh by uh changing

2029
01:09:30,319 --> 01:09:34,560
sum delta m and gamma m and we first

2030
01:09:33,839 --> 01:09:37,000
find

2031
01:09:34,560 --> 01:09:38,880
nice uh experimental differential linear

2032
01:09:37,000 --> 01:09:41,600
distributions

2033
01:09:38,880 --> 01:09:43,600
and uh we experimentally verify the

2034
01:09:41,600 --> 01:09:47,040
correlation of this distinguish

2035
01:09:43,600 --> 01:09:49,199
and let r be the correlation then uh the

2036
01:09:47,040 --> 01:09:50,560
total correlations for differential

2037
01:09:49,198 --> 01:09:54,639
linear distinguishable

2038
01:09:50,560 --> 01:09:57,199
becomes p r q squared

2039
01:09:54,640 --> 01:09:59,199
so of course uh this is also one bit

2040
01:09:57,199 --> 01:10:00,159
approximation so to observe this

2041
01:09:59,199 --> 01:10:02,639
correlation

2042
01:10:00,159 --> 01:10:04,159
as a required data is a p to the minus

2043
01:10:02,640 --> 01:10:07,199
two added to the minus two

2044
01:10:04,159 --> 01:10:10,719
and two uh times q to the minus four

2045
01:10:07,199 --> 01:10:12,320
so in theory so the differential linear

2046
01:10:10,719 --> 01:10:14,320
connecting table papers

2047
01:10:12,320 --> 01:10:15,360
provides a nice understanding for the

2048
01:10:14,320 --> 01:10:18,159
middle layer

2049
01:10:15,360 --> 01:10:18,480
but as far as i know this technique is

2050
01:10:18,159 --> 01:10:22,480
for

2051
01:10:18,480 --> 01:10:23,199
xbox space cipher so i'm not sure what

2052
01:10:22,480 --> 01:10:26,320
happened in

2053
01:10:23,199 --> 01:10:27,120
alex cipher so it's left other open

2054
01:10:26,320 --> 01:10:30,960
questions

2055
01:10:27,120 --> 01:10:34,000
and for my papers those are

2056
01:10:30,960 --> 01:10:37,120
the middle layer is perfect perfectly

2057
01:10:34,000 --> 01:10:40,960
verified experimentally

2058
01:10:37,120 --> 01:10:43,599
so we propose two new techniques for

2059
01:10:40,960 --> 01:10:44,640
differential part and linear mode for

2060
01:10:43,600 --> 01:10:47,199
differential parts

2061
01:10:44,640 --> 01:10:48,640
we introduce probabilistic independent

2062
01:10:47,199 --> 01:10:51,759
speeds techniques

2063
01:10:48,640 --> 01:10:53,600
and uh by using these techniques we can

2064
01:10:51,760 --> 01:10:56,480
reduce the data complexity

2065
01:10:53,600 --> 01:10:57,840
from p to the minus 2 k to the minus 4

2066
01:10:56,480 --> 01:11:00,639
to p to the minus one

2067
01:10:57,840 --> 01:11:01,360
q to the minus four so the gain is

2068
01:11:00,640 --> 01:11:05,280
appears

2069
01:11:01,360 --> 01:11:07,679
minus one and also for a linear part

2070
01:11:05,280 --> 01:11:08,400
we propose a new advanced functioning

2071
01:11:07,679 --> 01:11:11,440
techniques

2072
01:11:08,400 --> 01:11:15,759
uh with a voltage amount transform

2073
01:11:11,440 --> 01:11:18,159
so the main idea is linear threads

2074
01:11:15,760 --> 01:11:19,600
linear characteristics from gamma m to

2075
01:11:18,159 --> 01:11:22,639
gamma out

2076
01:11:19,600 --> 01:11:25,760
dynamically chosen according to the

2077
01:11:22,640 --> 01:11:27,600
ciphertext and finally uh

2078
01:11:25,760 --> 01:11:29,199
first of all that we use possible

2079
01:11:27,600 --> 01:11:32,400
shutter mark transform

2080
01:11:29,199 --> 01:11:32,400
to recover the key

2081
01:11:32,640 --> 01:11:36,560
so first i want to explain a

2082
01:11:34,400 --> 01:11:40,080
differential part

2083
01:11:36,560 --> 01:11:41,199
but this idea is very simple so the

2084
01:11:40,080 --> 01:11:44,800
first step

2085
01:11:41,199 --> 01:11:48,159
we find the pair x and x plus delta

2086
01:11:44,800 --> 01:11:49,280
in satisfying output difference is delta

2087
01:11:48,159 --> 01:11:52,320
m

2088
01:11:49,280 --> 01:11:55,519
so this probability is p so of course uh

2089
01:11:52,320 --> 01:11:58,480
it's a very it's not easy to find such a

2090
01:11:55,520 --> 01:11:59,760
pairs but by trying out p to the minus

2091
01:11:58,480 --> 01:12:02,879
one pairs

2092
01:11:59,760 --> 01:12:07,440
uh so in average we can find

2093
01:12:02,880 --> 01:12:10,640
one uh such a x and x plus that in

2094
01:12:07,440 --> 01:12:14,960
next we prepare linear subspace

2095
01:12:10,640 --> 01:12:17,840
u where for any u e one of x plus u

2096
01:12:14,960 --> 01:12:18,960
plus e one of x plus u plus delta n is

2097
01:12:17,840 --> 01:12:22,080
equal to delta

2098
01:12:18,960 --> 01:12:25,360
n with probability one

2099
01:12:22,080 --> 01:12:26,800
so this is a of course so that this

2100
01:12:25,360 --> 01:12:30,320
linear subspace u

2101
01:12:26,800 --> 01:12:33,360
depends on the original text x

2102
01:12:30,320 --> 01:12:38,159
but for this x uh by adding the

2103
01:12:33,360 --> 01:12:42,880
linear subspace u so even even if we add

2104
01:12:38,159 --> 01:12:47,440
some element u from a linear subspace

2105
01:12:42,880 --> 01:12:50,800
this differential property never change

2106
01:12:47,440 --> 01:12:53,040
so if we can find such a linear subspace

2107
01:12:50,800 --> 01:12:53,040
u

2108
01:12:53,280 --> 01:12:59,759
so but only by using as the pair

2109
01:12:56,480 --> 01:13:01,519
generated by this subspace u as a final

2110
01:12:59,760 --> 01:13:02,480
correlation for differential linear

2111
01:13:01,520 --> 01:13:05,920
distinguishing

2112
01:13:02,480 --> 01:13:06,639
becomes q to the 2. of course if we want

2113
01:13:05,920 --> 01:13:10,159
to use

2114
01:13:06,640 --> 01:13:13,520
this idea the condition must be the

2115
01:13:10,159 --> 01:13:14,239
size of u is larger than q to the minus

2116
01:13:13,520 --> 01:13:17,600
4. but

2117
01:13:14,239 --> 01:13:18,159
if this condition holds the required

2118
01:13:17,600 --> 01:13:21,040
data

2119
01:13:18,159 --> 01:13:22,400
is now p to the minus one times q to the

2120
01:13:21,040 --> 01:13:25,120
minus four

2121
01:13:22,400 --> 01:13:27,120
so original uh distinguishable is p to

2122
01:13:25,120 --> 01:13:30,400
the minus two q to the minus whole

2123
01:13:27,120 --> 01:13:34,159
the gain is p to the minus one

2124
01:13:30,400 --> 01:13:37,360
but of course the main question is

2125
01:13:34,159 --> 01:13:40,719
how do we find such linear subspace u

2126
01:13:37,360 --> 01:13:43,040
so first very easy case is a trivial

2127
01:13:40,719 --> 01:13:46,159
case so i think it's a very trivial so

2128
01:13:43,040 --> 01:13:49,519
i i don't think it's a so

2129
01:13:46,159 --> 01:13:53,040
noble but uh it's this case is

2130
01:13:49,520 --> 01:13:56,080
already very useful so the part of e1

2131
01:13:53,040 --> 01:13:56,960
okay so the first cipher is divided into

2132
01:13:56,080 --> 01:14:00,000
three parts

2133
01:13:56,960 --> 01:14:03,440
e1 en and e2

2134
01:14:00,000 --> 01:14:06,640
and uh it for e2 and em so the

2135
01:14:03,440 --> 01:14:07,040
everything is the same so now uh e1 is

2136
01:14:06,640 --> 01:14:10,080
not

2137
01:14:07,040 --> 01:14:12,560
good diffusion in that case so the

2138
01:14:10,080 --> 01:14:14,960
for example we have input difference

2139
01:14:12,560 --> 01:14:16,080
delta in here and output difference is

2140
01:14:14,960 --> 01:14:19,440
delta m

2141
01:14:16,080 --> 01:14:22,239
and other parts uh zero difference

2142
01:14:19,440 --> 01:14:23,360
and even if we change these values of

2143
01:14:22,239 --> 01:14:26,559
course uh

2144
01:14:23,360 --> 01:14:28,880
it doesn't impact on the differential

2145
01:14:26,560 --> 01:14:33,840
trend from delta into delta m

2146
01:14:28,880 --> 01:14:37,360
so this side is m then we have a

2147
01:14:33,840 --> 01:14:40,960
linear subspace u whose dimension is m

2148
01:14:37,360 --> 01:14:43,679
for example cha-cha so the

2149
01:14:40,960 --> 01:14:44,880
lounge charger never diffuse each

2150
01:14:43,679 --> 01:14:47,840
columns

2151
01:14:44,880 --> 01:14:49,360
so for example uh input difference

2152
01:14:47,840 --> 01:14:52,239
original input difference

2153
01:14:49,360 --> 01:14:54,480
is zero zero zero delta in and output

2154
01:14:52,239 --> 01:14:57,280
it's still zero zero delta m

2155
01:14:54,480 --> 01:14:58,080
then uh these three columns are

2156
01:14:57,280 --> 01:15:01,360
independent

2157
01:14:58,080 --> 01:15:04,880
of this differential uh

2158
01:15:01,360 --> 01:15:08,400
propagation so we have three

2159
01:15:04,880 --> 01:15:11,120
problems that can be chosen from the

2160
01:15:08,400 --> 01:15:13,679
linear subspace u so the dimension of u

2161
01:15:11,120 --> 01:15:15,920
is 96

2162
01:15:13,679 --> 01:15:19,040
so substitute this property so that we

2163
01:15:15,920 --> 01:15:20,880
can concentrate the differential linear

2164
01:15:19,040 --> 01:15:23,199
experimental differential linear

2165
01:15:20,880 --> 01:15:24,239
distinguishes for them from delta m to

2166
01:15:23,199 --> 01:15:27,199
gamma m

2167
01:15:24,239 --> 01:15:29,280
and we can find the half round extended

2168
01:15:27,199 --> 01:15:32,960
differential linear distinguishables

2169
01:15:29,280 --> 01:15:35,759
uh compared to the previous test one

2170
01:15:32,960 --> 01:15:36,800
but the most interesting uh more

2171
01:15:35,760 --> 01:15:39,920
interesting

2172
01:15:36,800 --> 01:15:41,679
one is a non-trivial case so we mainly

2173
01:15:39,920 --> 01:15:44,320
explore the property of

2174
01:15:41,679 --> 01:15:45,840
modular additions and which could

2175
01:15:44,320 --> 01:15:49,679
involve full input

2176
01:15:45,840 --> 01:15:51,600
bits but it's highly valued for example

2177
01:15:49,679 --> 01:15:53,199
so the let's consider the

2178
01:15:51,600 --> 01:15:56,560
modularizations a plus b

2179
01:15:53,199 --> 01:16:00,159
plus c so that if the msd part of

2180
01:15:56,560 --> 01:16:03,440
a or b never affects

2181
01:16:00,159 --> 01:16:06,639
to the lsb part of the output uh

2182
01:16:03,440 --> 01:16:09,759
by output resist output values

2183
01:16:06,640 --> 01:16:11,679
and also even we change the value of the

2184
01:16:09,760 --> 01:16:14,880
lsb part of the inputs

2185
01:16:11,679 --> 01:16:17,600
to inputs so there is a less impact on

2186
01:16:14,880 --> 01:16:20,719
the msp of output because

2187
01:16:17,600 --> 01:16:23,760
so that if we have some

2188
01:16:20,719 --> 01:16:26,719
impact as a carry must

2189
01:16:23,760 --> 01:16:28,560
go to the msb part but this probability

2190
01:16:26,719 --> 01:16:32,239
is not so high

2191
01:16:28,560 --> 01:16:35,679
so for example let's focus on taski so

2192
01:16:32,239 --> 01:16:38,000
the previous uh so we have a

2193
01:16:35,679 --> 01:16:38,880
one half round differential trail with

2194
01:16:38,000 --> 01:16:42,159
probability to

2195
01:16:38,880 --> 01:16:45,280
the minus 70 and by analyzing

2196
01:16:42,159 --> 01:16:49,199
uh this modularization property

2197
01:16:45,280 --> 01:16:51,360
we found 25 bits which doesn't affect

2198
01:16:49,199 --> 01:16:55,040
the original differential trade so the

2199
01:16:51,360 --> 01:16:55,040
dimension view is 25

2200
01:16:55,199 --> 01:17:00,480
so the next part is a linear part

2201
01:16:58,239 --> 01:17:02,000
so these parties are much complicated

2202
01:17:00,480 --> 01:17:04,959
and it's very very difficult

2203
01:17:02,000 --> 01:17:06,320
to understand but i briefly explained

2204
01:17:04,960 --> 01:17:09,679
the high level

2205
01:17:06,320 --> 01:17:12,719
high level overview

2206
01:17:09,679 --> 01:17:15,840
so i before

2207
01:17:12,719 --> 01:17:17,120
our proposal i want to explain the

2208
01:17:15,840 --> 01:17:19,920
previous techniques

2209
01:17:17,120 --> 01:17:20,320
uh previous functioning techniques so

2210
01:17:19,920 --> 01:17:23,920
now

2211
01:17:20,320 --> 01:17:27,199
the goal is to compute the i speed

2212
01:17:23,920 --> 01:17:29,840
of z so and from x

2213
01:17:27,199 --> 01:17:33,599
and y but of course this is a modular

2214
01:17:29,840 --> 01:17:37,199
addition so it's a nonlinear variation

2215
01:17:33,600 --> 01:17:40,719
so now we first compute p

2216
01:17:37,199 --> 01:17:44,559
is equal to x plus complement y

2217
01:17:40,719 --> 01:17:48,159
then we take uh i minus 1 bit

2218
01:17:44,560 --> 01:17:50,080
and i minus 2 bit of p so if these two

2219
01:17:48,159 --> 01:17:53,599
bits are 0 0

2220
01:17:50,080 --> 01:17:56,960
then d i is always equal to p i plus

2221
01:17:53,600 --> 01:18:00,000
x i minus 1 and for other case

2222
01:17:56,960 --> 01:18:02,560
if this 2 bit value is 1 0

2223
01:18:00,000 --> 01:18:04,560
d i is always equal to p i plus x i

2224
01:18:02,560 --> 01:18:07,360
minus 2.

2225
01:18:04,560 --> 01:18:08,000
unfortunately so that this value is 1 1

2226
01:18:07,360 --> 01:18:11,360
it's a

2227
01:18:08,000 --> 01:18:12,320
this data is not a variable but three

2228
01:18:11,360 --> 01:18:16,239
overflow data

2229
01:18:12,320 --> 01:18:18,559
is available with correlation one so

2230
01:18:16,239 --> 01:18:19,360
the previous partitioning techniques

2231
01:18:18,560 --> 01:18:22,640
paper

2232
01:18:19,360 --> 01:18:26,000
so the it only use the data

2233
01:18:22,640 --> 01:18:29,520
satisfying this uh satisfying us three

2234
01:18:26,000 --> 01:18:32,400
overflow datas so thanks to

2235
01:18:29,520 --> 01:18:34,960
by only using such data so that they can

2236
01:18:32,400 --> 01:18:38,239
improve the tag

2237
01:18:34,960 --> 01:18:40,239
okay so now this is our extension

2238
01:18:38,239 --> 01:18:41,919
so we first introduced another

2239
01:18:40,239 --> 01:18:44,879
fashioning techniques

2240
01:18:41,920 --> 01:18:45,600
and thanks to this another passionate

2241
01:18:44,880 --> 01:18:49,920
techniques

2242
01:18:45,600 --> 01:18:52,480
so that we can find the nice strategy

2243
01:18:49,920 --> 01:18:53,280
uh where linear plane is dynamically

2244
01:18:52,480 --> 01:18:57,519
chosen

2245
01:18:53,280 --> 01:18:59,679
according to ciphertext and finally

2246
01:18:57,520 --> 01:19:00,880
so that our technique used several

2247
01:18:59,679 --> 01:19:03,920
linear trails and

2248
01:19:00,880 --> 01:19:06,960
each linear trail involves different key

2249
01:19:03,920 --> 01:19:11,280
but by using volcano transform technique

2250
01:19:06,960 --> 01:19:14,400
we can combine everything efficiently

2251
01:19:11,280 --> 01:19:17,519
so first another functioning technique

2252
01:19:14,400 --> 01:19:21,519
so instead of a speed of gi

2253
01:19:17,520 --> 01:19:26,320
we focus on z i plus c i minus one

2254
01:19:21,520 --> 01:19:26,800
like this and fortunately as a condition

2255
01:19:26,320 --> 01:19:30,000
is

2256
01:19:26,800 --> 01:19:31,520
the bits we need to focus is the same as

2257
01:19:30,000 --> 01:19:33,920
original one

2258
01:19:31,520 --> 01:19:36,080
so it means that i minus 1 bit and i

2259
01:19:33,920 --> 01:19:40,000
minus 2 bit of b

2260
01:19:36,080 --> 01:19:40,400
if this bit is at 0 0 d i plus c i minus

2261
01:19:40,000 --> 01:19:43,520
1

2262
01:19:40,400 --> 01:19:44,559
is equal to p i plus x i minus 1 plus x

2263
01:19:43,520 --> 01:19:47,679
i minus 2

2264
01:19:44,560 --> 01:19:48,400
and for example it's a 1 0 d i plus v n

2265
01:19:47,679 --> 01:19:52,719
minus 1

2266
01:19:48,400 --> 01:19:53,199
is equal to pi plus 1. so the important

2267
01:19:52,719 --> 01:19:57,199
fact

2268
01:19:53,199 --> 01:20:00,239
is the condition

2269
01:19:57,199 --> 01:20:03,360
not a variable condition is different

2270
01:20:00,239 --> 01:20:04,239
for example for gi one one is not a

2271
01:20:03,360 --> 01:20:07,040
variable

2272
01:20:04,239 --> 01:20:09,040
but uh this data is available for zf

2273
01:20:07,040 --> 01:20:12,000
plus cn minus one

2274
01:20:09,040 --> 01:20:13,199
and for zero one gi plus ei minus one is

2275
01:20:12,000 --> 01:20:16,239
not available but

2276
01:20:13,199 --> 01:20:18,000
uh it's useful for zero so why this

2277
01:20:16,239 --> 01:20:22,360
property is important

2278
01:20:18,000 --> 01:20:25,600
so this is a linear trail for

2279
01:20:22,360 --> 01:20:26,320
modularizations and that is so there are

2280
01:20:25,600 --> 01:20:29,520
two

2281
01:20:26,320 --> 01:20:32,239
linear trades blue one and red one

2282
01:20:29,520 --> 01:20:34,320
and this coordinate these correlations

2283
01:20:32,239 --> 01:20:37,280
are two to the minus one so it's a

2284
01:20:34,320 --> 01:20:38,639
absolute correlation is the same and

2285
01:20:37,280 --> 01:20:42,320
these two correlate

2286
01:20:38,639 --> 01:20:47,840
these two linear traits are best ones

2287
01:20:42,320 --> 01:20:47,840
both are best ones so

2288
01:20:48,000 --> 01:20:53,040
after propagating x2 and the rotation so

2289
01:20:51,199 --> 01:20:56,080
let's focus on here

2290
01:20:53,040 --> 01:20:58,560
so this bit is a later one

2291
01:20:56,080 --> 01:21:00,800
the focus is the 24 but the blue one is

2292
01:20:58,560 --> 01:21:03,679
the 2423

2293
01:21:00,800 --> 01:21:04,560
so it means uh if the data is not

2294
01:21:03,679 --> 01:21:07,120
available for

2295
01:21:04,560 --> 01:21:09,520
net one this data is always available

2296
01:21:07,120 --> 01:21:12,880
for blue

2297
01:21:09,520 --> 01:21:15,920
so by exploiting these properties so

2298
01:21:12,880 --> 01:21:16,320
we check the indicate we introduce in

2299
01:21:15,920 --> 01:21:19,920
the

2300
01:21:16,320 --> 01:21:23,440
4 bit indicators and out of

2301
01:21:19,920 --> 01:21:27,199
60 data so 9 data

2302
01:21:23,440 --> 01:21:30,239
is available and blue 1 also

2303
01:21:27,199 --> 01:21:32,080
we can use nine data as a variable but

2304
01:21:30,239 --> 01:21:33,120
the available position is a bit

2305
01:21:32,080 --> 01:21:35,519
different

2306
01:21:33,120 --> 01:21:36,239
and finally we combine everything like

2307
01:21:35,520 --> 01:21:39,679
this

2308
01:21:36,239 --> 01:21:43,360
then a 40 over 60 data as a buyer

2309
01:21:39,679 --> 01:21:47,840
so for example the data is 001

2310
01:21:43,360 --> 01:21:51,280
we use this blue linear tray and z100

2311
01:21:47,840 --> 01:21:54,400
we use late linear track

2312
01:21:51,280 --> 01:21:55,759
so finally we need to combine uh those

2313
01:21:54,400 --> 01:21:57,759
are

2314
01:21:55,760 --> 01:21:59,040
empirical correlations or for each

2315
01:21:57,760 --> 01:22:02,080
partitions

2316
01:21:59,040 --> 01:22:05,120
but uh it's a bit difficult because

2317
01:22:02,080 --> 01:22:07,120
if we change a linear trade uh the

2318
01:22:05,120 --> 01:22:08,159
involved secret key bits are also

2319
01:22:07,120 --> 01:22:10,639
different

2320
01:22:08,159 --> 01:22:12,080
so for example so the sum linear trade

2321
01:22:10,639 --> 01:22:14,800
involves k3

2322
01:22:12,080 --> 01:22:16,400
20 side bit of k3 but the sum thread

2323
01:22:14,800 --> 01:22:19,520
doesn't evolve

2324
01:22:16,400 --> 01:22:20,400
so usually if we want to combine

2325
01:22:19,520 --> 01:22:22,800
everything

2326
01:22:20,400 --> 01:22:23,679
we need to additionally guess such key

2327
01:22:22,800 --> 01:22:27,760
bits

2328
01:22:23,679 --> 01:22:30,080
but it's a not efficient so instead of

2329
01:22:27,760 --> 01:22:31,360
guessing we use wall shadow transform

2330
01:22:30,080 --> 01:22:34,400
technique

2331
01:22:31,360 --> 01:22:36,559
so the high level understanding is we

2332
01:22:34,400 --> 01:22:37,679
first store empirical correlation each

2333
01:22:36,560 --> 01:22:40,159
partition

2334
01:22:37,679 --> 01:22:41,040
and so apply the worship them are

2335
01:22:40,159 --> 01:22:44,559
transformed

2336
01:22:41,040 --> 01:22:47,920
then we can skip ah key bits only

2337
01:22:44,560 --> 01:22:50,239
involved linearly and of course uh

2338
01:22:47,920 --> 01:22:53,120
we can use fast voltage atomizer

2339
01:22:50,239 --> 01:22:57,440
transform to accelerate these operations

2340
01:22:53,120 --> 01:23:01,199
so the complexity could be negligible

2341
01:22:57,440 --> 01:23:03,759
okay so finally i conclude my talk so i

2342
01:23:01,199 --> 01:23:04,638
we propose two noble techniques for

2343
01:23:03,760 --> 01:23:07,520
differential

2344
01:23:04,639 --> 01:23:09,199
and linear parts for differential parts

2345
01:23:07,520 --> 01:23:11,040
so the probability

2346
01:23:09,199 --> 01:23:12,559
introduces probabilistic independent

2347
01:23:11,040 --> 01:23:14,400
speeds and this

2348
01:23:12,560 --> 01:23:16,239
improves the probability of differential

2349
01:23:14,400 --> 01:23:19,120
linear distribution

2350
01:23:16,239 --> 01:23:20,799
and also for linear parts thanks to the

2351
01:23:19,120 --> 01:23:21,599
possible volunteer demand transform and

2352
01:23:20,800 --> 01:23:24,639
the dynamic

2353
01:23:21,600 --> 01:23:28,560
choice of a choice of the linear trade

2354
01:23:24,639 --> 01:23:31,920
we can improve the time and data complex

2355
01:23:28,560 --> 01:23:35,120
but of course our attempt is not perfect

2356
01:23:31,920 --> 01:23:37,360
so for example so the left for so our

2357
01:23:35,120 --> 01:23:38,480
attacker technique against several of

2358
01:23:37,360 --> 01:23:41,759
the charger

2359
01:23:38,480 --> 01:23:42,879
so we never use our new technique for

2360
01:23:41,760 --> 01:23:46,159
linear parts

2361
01:23:42,880 --> 01:23:48,800
because uh our patching technique is

2362
01:23:46,159 --> 01:23:49,920
super complicated to attack several long

2363
01:23:48,800 --> 01:23:53,440
charger

2364
01:23:49,920 --> 01:23:55,600
so for a six round charger it's still uh

2365
01:23:53,440 --> 01:23:57,678
simple so that we can attack but uh two

2366
01:23:55,600 --> 01:24:00,800
attack seven round charger it's

2367
01:23:57,679 --> 01:24:01,520
very very complicated so instead of our

2368
01:24:00,800 --> 01:24:03,920
technique

2369
01:24:01,520 --> 01:24:06,560
we use previous technique called the

2370
01:24:03,920 --> 01:24:08,560
probabilistic neutrality technique

2371
01:24:06,560 --> 01:24:10,000
but this technique is a black box

2372
01:24:08,560 --> 01:24:13,760
analysis so it means

2373
01:24:10,000 --> 01:24:16,960
we they never express inside

2374
01:24:13,760 --> 01:24:20,800
modular additions or notations over x y

2375
01:24:16,960 --> 01:24:24,400
but i think the more theoretical

2376
01:24:20,800 --> 01:24:28,840
analysis should be better than

2377
01:24:24,400 --> 01:24:32,080
black box analysis i hope so the

2378
01:24:28,840 --> 01:24:34,800
next question is how to

2379
01:24:32,080 --> 01:24:35,360
get more number of rounds or to reduce

2380
01:24:34,800 --> 01:24:37,840
the

2381
01:24:35,360 --> 01:24:39,519
time and data complexity to attack 700

2382
01:24:37,840 --> 01:24:41,920
charger by exploiting

2383
01:24:39,520 --> 01:24:43,520
the inside of the inside of the linear

2384
01:24:41,920 --> 01:24:46,719
part

2385
01:24:43,520 --> 01:24:47,760
yeah thank you for listening okay thank

2386
01:24:46,719 --> 01:24:49,920
you for the talk

2387
01:24:47,760 --> 01:24:52,400
so we have time for a question or

2388
01:24:49,920 --> 01:24:52,400
comment

2389
01:24:54,239 --> 01:25:00,320
uh yeah so for questions you can

2390
01:24:57,440 --> 01:25:01,919
add to zulu uh i'm negotiating with uh

2391
01:25:00,320 --> 01:25:04,880
or dunkelman right now about whether he

2392
01:25:01,920 --> 01:25:04,880
has a question or not

2393
01:25:05,120 --> 01:25:08,960
ah okay uh one question from daniel uh

2394
01:25:08,239 --> 01:25:12,000
bernstein

2395
01:25:08,960 --> 01:25:15,040
any thoughts on the too much crypto

2396
01:25:12,000 --> 01:25:17,520
paper uh saying that cha-cha eight

2397
01:25:15,040 --> 01:25:17,519
is enough

2398
01:25:20,239 --> 01:25:27,839
i can repeat it if you like i said

2399
01:25:23,600 --> 01:25:27,840
so cut in three so that

2400
01:25:27,920 --> 01:25:34,320
it's very difficult to attack chapter 8

2401
01:25:31,040 --> 01:25:37,440
but uh of course so it's uh

2402
01:25:34,320 --> 01:25:40,639
i'm not sure it's enough or not but uh

2403
01:25:37,440 --> 01:25:43,440
i cannot evacuate wrong stretcher this

2404
01:25:40,639 --> 01:25:45,840
is not only my answer

2405
01:25:43,440 --> 01:25:46,879
so it it it's secure now but uh how much

2406
01:25:45,840 --> 01:25:49,840
time

2407
01:25:46,880 --> 01:25:50,880
before it becomes uh attackable you

2408
01:25:49,840 --> 01:25:55,840
think

2409
01:25:50,880 --> 01:25:55,840
not to put you on the spot too much

2410
01:25:58,320 --> 01:26:02,080
it's okay if you don't want to answer

2411
01:26:01,199 --> 01:26:05,599
okay

2412
01:26:02,080 --> 01:26:09,440
uh and i think we have oops

2413
01:26:05,600 --> 01:26:12,800
one more question that disappeared

2414
01:26:09,440 --> 01:26:15,599
nope i think that was it um

2415
01:26:12,800 --> 01:26:17,120
okay okay then i guess we can go back i

2416
01:26:15,600 --> 01:26:19,120
mean there are more questions yeah you

2417
01:26:17,120 --> 01:26:24,000
can keep posting and answering

2418
01:26:19,120 --> 01:26:26,639
online and uh um

2419
01:26:24,000 --> 01:26:27,360
okay so before we move to the next to

2420
01:26:26,639 --> 01:26:30,800
the next

2421
01:26:27,360 --> 01:26:33,839
uh social event please uh

2422
01:26:30,800 --> 01:26:37,600
join me in congratulating once more

2423
01:26:33,840 --> 01:26:41,199
all the speakers and

2424
01:26:37,600 --> 01:26:44,880
feel free to unmute yourself

2425
01:26:41,199 --> 01:26:44,879
and let's give them a big round of

2426
01:26:45,090 --> 01:26:51,840
[Applause]

2427
01:26:48,840 --> 01:26:51,840
applause

2428
01:26:53,360 --> 01:26:56,159
okay so leo

