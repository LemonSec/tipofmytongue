1
00:00:04,019 --> 00:00:08,039
thank you okay you all hear me all right

2
00:00:08,039 --> 00:00:11,260
so good morning this morning I want to

3
00:00:11,260 --> 00:00:14,290
discuss with you a quantum version of a

4
00:00:14,290 --> 00:00:15,910
well-known concept homomorphic

5
00:00:15,910 --> 00:00:17,769
encryption you're probably all familiar

6
00:00:17,769 --> 00:00:20,530
with it but because it's so early in the

7
00:00:20,530 --> 00:00:22,380
morning I just want to start with a

8
00:00:22,380 --> 00:00:25,030
refresher so it's served with some

9
00:00:25,030 --> 00:00:27,840
example and let's consider the following

10
00:00:27,840 --> 00:00:31,660
scenario so we have Dora the Explorer I

11
00:00:31,660 --> 00:00:33,760
hope you all know her she goes on tons

12
00:00:33,760 --> 00:00:35,140
of adventures and she takes a lot of

13
00:00:35,140 --> 00:00:37,210
pictures on those adventures and she

14
00:00:37,210 --> 00:00:38,679
would like to assign tags through those

15
00:00:38,679 --> 00:00:40,239
pictures describing what is on them

16
00:00:40,239 --> 00:00:42,460
however she doesn't have to time to do

17
00:00:42,460 --> 00:00:43,989
this by hand because you know she has to

18
00:00:43,989 --> 00:00:47,050
leave for her next adventure and so she

19
00:00:47,050 --> 00:00:49,139
would like to do this automatically and

20
00:00:49,139 --> 00:00:51,399
ideally she would like to outsource this

21
00:00:51,399 --> 00:00:53,829
computation to a third party for example

22
00:00:53,829 --> 00:00:56,350
Google who can do this for her but of

23
00:00:56,350 --> 00:00:58,809
course her the content of her data in

24
00:00:58,809 --> 00:01:01,749
this case images might be private so

25
00:01:01,749 --> 00:01:03,639
what homomorphic encryption would allow

26
00:01:03,639 --> 00:01:08,170
her to do is it would allow her to to

27
00:01:08,170 --> 00:01:10,210
encrypt her data before sending it to

28
00:01:10,210 --> 00:01:12,940
Google Thanks then she can send it over

29
00:01:12,940 --> 00:01:15,760
she can just go off do something else

30
00:01:15,760 --> 00:01:18,340
and in the meantime Google can compute

31
00:01:18,340 --> 00:01:20,950
on her encrypted data so he cannot he

32
00:01:20,950 --> 00:01:22,660
cannot ever see the content of her

33
00:01:22,660 --> 00:01:24,940
pictures but he can still perform

34
00:01:24,940 --> 00:01:27,760
operations on the encrypted data in this

35
00:01:27,760 --> 00:01:30,430
case he can evaluate some image tagging

36
00:01:30,430 --> 00:01:33,040
algorithm and produce an encryption of

37
00:01:33,040 --> 00:01:36,540
the resulting tags for this algorithm

38
00:01:36,540 --> 00:01:39,430
then when Dora comes back no

39
00:01:39,430 --> 00:01:40,810
communication is needed during this

40
00:01:40,810 --> 00:01:43,930
process window comes back she can get

41
00:01:43,930 --> 00:01:45,970
back those tags and she can use her own

42
00:01:45,970 --> 00:01:50,740
secret key to decrypt those tags and now

43
00:01:50,740 --> 00:01:53,350
she has the result of the computation

44
00:01:53,350 --> 00:01:58,180
that she wanted during this talk I'm

45
00:01:58,180 --> 00:02:00,550
first going to update you bit on what

46
00:02:00,550 --> 00:02:02,170
homework encryption is I'm sure you're

47
00:02:02,170 --> 00:02:04,360
probably all heard of it if not before

48
00:02:04,360 --> 00:02:06,340
crypto then certainly yesterday during a

49
00:02:06,340 --> 00:02:10,598
lot of the talks but just to to be a bit

50
00:02:10,598 --> 00:02:12,909
more formal just give an idea of what do

51
00:02:12,909 --> 00:02:14,560
we need when we when we're defining

52
00:02:14,560 --> 00:02:16,260
homework encryption scheme

53
00:02:16,260 --> 00:02:18,659
and in particular what changes if we're

54
00:02:18,659 --> 00:02:20,519
go if we're going to map this to a

55
00:02:20,519 --> 00:02:24,420
quantum setting then for the most part

56
00:02:24,420 --> 00:02:26,069
of the talk I'm going to discuss some

57
00:02:26,069 --> 00:02:27,989
previous results and in particular

58
00:02:27,989 --> 00:02:29,310
there's one scheme that I want to

59
00:02:29,310 --> 00:02:32,069
discuss in a bit more detail and because

60
00:02:32,069 --> 00:02:34,200
our new result which is the third part

61
00:02:34,200 --> 00:02:35,489
of this talk is going to be built on

62
00:02:35,489 --> 00:02:39,959
this scheme so that's the outline so

63
00:02:39,959 --> 00:02:42,329
homomorphic encryption basically a

64
00:02:42,329 --> 00:02:44,670
scheme from Norfolk encryption consists

65
00:02:44,670 --> 00:02:46,709
of four polynomial time algorithms I'm

66
00:02:46,709 --> 00:02:49,859
going to go over this pretty quickly the

67
00:02:49,859 --> 00:02:52,200
first one is key generation so given

68
00:02:52,200 --> 00:02:54,840
some security parameter we generate a

69
00:02:54,840 --> 00:02:57,989
public key a secret key and also as a

70
00:02:57,989 --> 00:03:01,159
third key we generate an evaluation key

71
00:03:01,159 --> 00:03:03,859
which is just some extra information

72
00:03:03,859 --> 00:03:06,389
independent of the input that can help

73
00:03:06,389 --> 00:03:08,340
during the evaluation phase which we'll

74
00:03:08,340 --> 00:03:12,030
see later then of course there is the

75
00:03:12,030 --> 00:03:14,489
encryption phase which just takes your

76
00:03:14,489 --> 00:03:17,190
your data X some this is just a classic

77
00:03:17,190 --> 00:03:19,590
a search to just classical data produces

78
00:03:19,590 --> 00:03:21,209
an encryption and of course this

79
00:03:21,209 --> 00:03:22,980
encryption has to be secure for some

80
00:03:22,980 --> 00:03:26,310
notion of security then the most

81
00:03:26,310 --> 00:03:29,090
interesting part is the evaluation phase

82
00:03:29,090 --> 00:03:32,519
the evaluator just takes the encrypted

83
00:03:32,519 --> 00:03:35,310
input and for some function that he

84
00:03:35,310 --> 00:03:38,879
would like to evaluate on this input he

85
00:03:38,879 --> 00:03:40,889
produces using possibly using this

86
00:03:40,889 --> 00:03:42,540
evaluation key that I mentioned earlier

87
00:03:42,540 --> 00:03:44,970
he produces an encryption of the output

88
00:03:44,970 --> 00:03:48,389
and this is where the meat of the of the

89
00:03:48,389 --> 00:03:50,970
scheme is usually and then of course at

90
00:03:50,970 --> 00:03:53,910
the end we have to have a way to from

91
00:03:53,910 --> 00:03:56,010
this encrypted result get back to the

92
00:03:56,010 --> 00:03:57,629
actual plaintext result that we're

93
00:03:57,629 --> 00:04:01,669
interested in using the secret key and

94
00:04:01,669 --> 00:04:05,190
the the class of functions for which we

95
00:04:05,190 --> 00:04:07,500
can do this evaluation is the class of

96
00:04:07,500 --> 00:04:09,389
functions that we say that such a scheme

97
00:04:09,389 --> 00:04:13,829
is homomorphic for so usually a scheme

98
00:04:13,829 --> 00:04:15,180
can be home a morphic for for example

99
00:04:15,180 --> 00:04:17,579
all functions with a limited number of

100
00:04:17,579 --> 00:04:19,949
multiplications or maybe it's its

101
00:04:19,949 --> 00:04:21,329
homomorphic for the class of all

102
00:04:21,329 --> 00:04:22,889
functions in general and that's of

103
00:04:22,889 --> 00:04:24,630
course the end goal that we're aiming

104
00:04:24,630 --> 00:04:29,610
for one other thing is that the decrypt

105
00:04:29,610 --> 00:04:32,819
has to the complexity of the decryption

106
00:04:32,819 --> 00:04:34,740
has to be independent of the complexity

107
00:04:34,740 --> 00:04:36,569
of this function f and the klaxxi of

108
00:04:36,569 --> 00:04:37,949
this function f is for example measured

109
00:04:37,949 --> 00:04:40,919
in the size of the circuit and if the if

110
00:04:40,919 --> 00:04:43,409
the decryption has this property then we

111
00:04:43,409 --> 00:04:47,400
say that this scheme is compact so what

112
00:04:47,400 --> 00:04:49,590
changes in the quantum setting quantum

113
00:04:49,590 --> 00:04:51,180
homework encryption is actually really

114
00:04:51,180 --> 00:04:52,979
similar to classical homomorphic

115
00:04:52,979 --> 00:04:55,169
encryption with the big difference that

116
00:04:55,169 --> 00:04:57,300
instead of working with classical data

117
00:04:57,300 --> 00:04:59,879
we are now working with quantum data so

118
00:04:59,879 --> 00:05:01,969
this i hear is denotes a quantum state

119
00:05:01,969 --> 00:05:04,590
i've written as a pure state but in

120
00:05:04,590 --> 00:05:06,599
general it can also be in mixed state

121
00:05:06,599 --> 00:05:09,150
and of course when we're working with

122
00:05:09,150 --> 00:05:10,740
quantum data that also means that the

123
00:05:10,740 --> 00:05:12,180
type of operations that we're going to

124
00:05:12,180 --> 00:05:13,560
do are going to be different so instead

125
00:05:13,560 --> 00:05:15,509
of classical functions we're now going

126
00:05:15,509 --> 00:05:16,949
to work with quantum operations or

127
00:05:16,949 --> 00:05:19,590
quantum circuits you can think of these

128
00:05:19,590 --> 00:05:22,409
as just this similar to classical

129
00:05:22,409 --> 00:05:25,229
circuits only with a different basic set

130
00:05:25,229 --> 00:05:28,919
of universal difference universal set of

131
00:05:28,919 --> 00:05:32,939
basic gates and one other difference is

132
00:05:32,939 --> 00:05:34,979
that now we also allow this evaluation

133
00:05:34,979 --> 00:05:37,349
key to be a quantum state so the public

134
00:05:37,349 --> 00:05:39,029
key in the sookie sookie are still going

135
00:05:39,029 --> 00:05:41,460
to be classical but the evaluation key

136
00:05:41,460 --> 00:05:43,080
can be a quantum state it so as to be

137
00:05:43,080 --> 00:05:45,120
independent of the input data apps I

138
00:05:45,120 --> 00:05:49,800
though all right so now we have an idea

139
00:05:49,800 --> 00:05:51,569
of what our goal is we want to design

140
00:05:51,569 --> 00:05:53,190
these four algorithms they have to run

141
00:05:53,190 --> 00:05:54,539
in polynomial time and they have to be

142
00:05:54,539 --> 00:05:59,219
secure and compact and now i want to

143
00:05:59,219 --> 00:06:01,379
discuss some previous results i'm going

144
00:06:01,379 --> 00:06:03,180
to start off with a few very trivial

145
00:06:03,180 --> 00:06:07,349
schemes that you can design oh sorry for

146
00:06:07,349 --> 00:06:09,719
just for the classical classical case I

147
00:06:09,719 --> 00:06:13,169
mean I'm sure you all know this it has

148
00:06:13,169 --> 00:06:15,210
been solved by Gentry in 2009 this is by

149
00:06:15,210 --> 00:06:17,550
now a very famous result I'm not going

150
00:06:17,550 --> 00:06:19,319
to go into the classical case too much

151
00:06:19,319 --> 00:06:21,569
but it's just good to mention that in

152
00:06:21,569 --> 00:06:23,789
subsequent work the assumptions from

153
00:06:23,789 --> 00:06:25,830
Gentry scheme have been standardized

154
00:06:25,830 --> 00:06:28,589
more so now we can do clássico morphic

155
00:06:28,589 --> 00:06:30,839
encryption or glasgow foolio Morken

156
00:06:30,839 --> 00:06:32,789
shin under quantum safe assumptions for

157
00:06:32,789 --> 00:06:35,310
example lwe and this will be important

158
00:06:35,310 --> 00:06:38,099
for our work and in the quantum setting

159
00:06:38,099 --> 00:06:40,050
things are still a little bit more

160
00:06:40,050 --> 00:06:42,089
complicated and that's what I'm going to

161
00:06:42,089 --> 00:06:43,080
do this

162
00:06:43,080 --> 00:06:44,610
out and here's where I want to start

163
00:06:44,610 --> 00:06:47,430
with those few trivial things that you

164
00:06:47,430 --> 00:06:50,699
might want to do first one might seem

165
00:06:50,699 --> 00:06:52,770
silly but one thing that you can do is

166
00:06:52,770 --> 00:06:54,900
just not encrypt at all so just have

167
00:06:54,900 --> 00:06:57,479
this this client Dora send over her data

168
00:06:57,479 --> 00:06:59,939
in the clear to the evaluator who can

169
00:06:59,939 --> 00:07:02,099
then just apply any circuit so it's

170
00:07:02,099 --> 00:07:04,379
homomorphic for all circuits and just

171
00:07:04,379 --> 00:07:06,870
send the result back the client doesn't

172
00:07:06,870 --> 00:07:08,580
have to do any work for a decryption so

173
00:07:08,580 --> 00:07:09,840
it's compact but of course it's not

174
00:07:09,840 --> 00:07:13,229
secure at all on the other end of the

175
00:07:13,229 --> 00:07:16,650
spectrum we can use a quantum one-time

176
00:07:16,650 --> 00:07:18,330
pad which is analogous to the classical

177
00:07:18,330 --> 00:07:20,400
one-time pad in that it provides perfect

178
00:07:20,400 --> 00:07:23,729
information theoretic security but if we

179
00:07:23,729 --> 00:07:26,310
send over and encrypt it states to to

180
00:07:26,310 --> 00:07:28,199
the evaluator then he cannot do anything

181
00:07:28,199 --> 00:07:31,050
with it so either you can just send it

182
00:07:31,050 --> 00:07:33,629
back to the client and in that case we

183
00:07:33,629 --> 00:07:35,509
have a scheme that's homomorphic for no

184
00:07:35,509 --> 00:07:37,500
circuit at all or maybe just the

185
00:07:37,500 --> 00:07:40,349
identity circuit or alternatively

186
00:07:40,349 --> 00:07:43,050
slightly less trivial what he can do is

187
00:07:43,050 --> 00:07:45,000
he can append the description of the

188
00:07:45,000 --> 00:07:46,439
circuit that he would have liked to

189
00:07:46,439 --> 00:07:48,750
evaluate on the data and then basically

190
00:07:48,750 --> 00:07:51,000
have the client do all the work so it

191
00:07:51,000 --> 00:07:52,560
doesn't touch the quantum state he just

192
00:07:52,560 --> 00:07:54,690
sends sends it back and also sends back

193
00:07:54,690 --> 00:07:57,930
at the crib description of what he would

194
00:07:57,930 --> 00:07:59,430
have liked to evaluate and then the

195
00:07:59,430 --> 00:08:01,379
client can decrypt and do all the work

196
00:08:01,379 --> 00:08:04,800
herself while this technically is a home

197
00:08:04,800 --> 00:08:06,629
Orphic and it's also still secure

198
00:08:06,629 --> 00:08:08,580
because nothing about the input data is

199
00:08:08,580 --> 00:08:10,650
revealed is not compact anymore because

200
00:08:10,650 --> 00:08:13,169
the amount of work in the in the end

201
00:08:13,169 --> 00:08:14,580
phase in the decryption phase is

202
00:08:14,580 --> 00:08:16,650
proportional to the size of the circuit

203
00:08:16,650 --> 00:08:19,680
and this is also why this compactness

204
00:08:19,680 --> 00:08:23,490
requirement is so important for us then

205
00:08:23,490 --> 00:08:25,800
we're moving out of these trivial

206
00:08:25,800 --> 00:08:29,039
trivial schemes and another well-known

207
00:08:29,039 --> 00:08:31,610
scheme is called the clifford scheme

208
00:08:31,610 --> 00:08:34,140
this is homomorphic for all clifford

209
00:08:34,140 --> 00:08:35,610
circuits and if you're not familiar with

210
00:08:35,610 --> 00:08:37,469
quantum computation the clifford

211
00:08:37,469 --> 00:08:40,229
circuits is basically all circuits that

212
00:08:40,229 --> 00:08:43,529
can be built up using the clifford gates

213
00:08:43,529 --> 00:08:46,170
which are just p agency nod and you can

214
00:08:46,170 --> 00:08:49,260
think of them as an analogy to addition

215
00:08:49,260 --> 00:08:52,140
gates and to in order to do a universal

216
00:08:52,140 --> 00:08:53,520
quantum computation though we need this

217
00:08:53,520 --> 00:08:56,460
additional t gate basically the nail

218
00:08:56,460 --> 00:08:59,790
analogous to the multiplication gate and

219
00:08:59,790 --> 00:09:02,220
this is also the one that poses all of

220
00:09:02,220 --> 00:09:04,050
our problems just like in the classical

221
00:09:04,050 --> 00:09:07,800
work for homomorphic encryption so this

222
00:09:07,800 --> 00:09:09,300
clifford scheme it only works with these

223
00:09:09,300 --> 00:09:12,810
simple gates and it's it's built on some

224
00:09:12,810 --> 00:09:15,060
classical morphic encryption scheme and

225
00:09:15,060 --> 00:09:16,890
therefore it inherits some computational

226
00:09:16,890 --> 00:09:18,420
assumptions so the security is not

227
00:09:18,420 --> 00:09:22,170
information theoretic anymore last year

228
00:09:22,170 --> 00:09:25,110
here at crypto broadband and Jeffrey

229
00:09:25,110 --> 00:09:28,440
they presented an extension of the

230
00:09:28,440 --> 00:09:30,840
clifford scheme that could deal in some

231
00:09:30,840 --> 00:09:33,450
sense with these difficult t gates so

232
00:09:33,450 --> 00:09:34,830
they presented a scheme that could deal

233
00:09:34,830 --> 00:09:37,800
with a constant depth of T gate so the T

234
00:09:37,800 --> 00:09:39,630
depth of the circuit could be constant

235
00:09:39,630 --> 00:09:41,430
and then they could do homework

236
00:09:41,430 --> 00:09:43,130
encryption for those circuits or

237
00:09:43,130 --> 00:09:45,300
alternatively they presented a scheme

238
00:09:45,300 --> 00:09:47,550
that was homework for all circuits but

239
00:09:47,550 --> 00:09:49,680
then the client at the end had to do

240
00:09:49,680 --> 00:09:51,660
some work during the decryption face so

241
00:09:51,660 --> 00:09:55,350
it's not completely compact anymore on a

242
00:09:55,350 --> 00:09:58,920
different line of work we have a result

243
00:09:58,920 --> 00:10:01,140
from youngtown and Fitzsimmons they

244
00:10:01,140 --> 00:10:02,640
provide an information theoretically

245
00:10:02,640 --> 00:10:05,100
secure scheme which basically can handle

246
00:10:05,100 --> 00:10:08,640
the same class of circuits as the scheme

247
00:10:08,640 --> 00:10:10,830
of broadband and Jeffrey however it is

248
00:10:10,830 --> 00:10:12,420
known that it's impossible to design a

249
00:10:12,420 --> 00:10:14,810
quantum Amorph can krypton scheme that's

250
00:10:14,810 --> 00:10:17,040
worked for all circuits and still

251
00:10:17,040 --> 00:10:18,600
provides information theoretic security

252
00:10:18,600 --> 00:10:21,090
so in this talk I want to continue along

253
00:10:21,090 --> 00:10:24,270
the lines of these works our scheme is

254
00:10:24,270 --> 00:10:25,770
going to also be an extension of the

255
00:10:25,770 --> 00:10:27,950
clifford scheme just like the other two

256
00:10:27,950 --> 00:10:30,210
and therefore i want to discuss this

257
00:10:30,210 --> 00:10:31,710
clifford scheme in a bit more detail

258
00:10:31,710 --> 00:10:35,280
with you so this clifford scheme it's

259
00:10:35,280 --> 00:10:38,850
going to be an encryption scheme that so

260
00:10:38,850 --> 00:10:40,710
that we can evaluate the following gates

261
00:10:40,710 --> 00:10:42,540
on them the ph and the sea not these are

262
00:10:42,540 --> 00:10:45,900
the clifford gates and we're going to

263
00:10:45,900 --> 00:10:47,550
use two ingredients for that the first

264
00:10:47,550 --> 00:10:50,040
one is a quantum encryption form knows

265
00:10:50,040 --> 00:10:51,720
it's one to one time pad I mentioned it

266
00:10:51,720 --> 00:10:53,970
earlier and the idea is really similar

267
00:10:53,970 --> 00:10:56,220
to class school one-time pad so to

268
00:10:56,220 --> 00:10:58,740
encrypt we pick two random bits instead

269
00:10:58,740 --> 00:11:01,440
of one and this is going to be our key

270
00:11:01,440 --> 00:11:04,710
to random bits a and B and then shooting

271
00:11:04,710 --> 00:11:07,470
to encrypt our quantum states I we're

272
00:11:07,470 --> 00:11:10,089
just going to apply a bit flip

273
00:11:10,089 --> 00:11:12,610
like in a classical case conditioned on

274
00:11:12,610 --> 00:11:15,279
a and then also a face flip condition

275
00:11:15,279 --> 00:11:16,839
Dombey and this completely hides the

276
00:11:16,839 --> 00:11:18,370
state of the quant or the information

277
00:11:18,370 --> 00:11:20,829
about the quantum state so the result is

278
00:11:20,829 --> 00:11:23,230
just this state basically locked in a

279
00:11:23,230 --> 00:11:26,110
box with respect to the keys a and B and

280
00:11:26,110 --> 00:11:29,040
then to decrypt we basically do the same

281
00:11:29,040 --> 00:11:31,420
operation again and this cancels out

282
00:11:31,420 --> 00:11:34,240
because x and z these bit and face lips

283
00:11:34,240 --> 00:11:37,509
they are their own in verses and the

284
00:11:37,509 --> 00:11:39,129
second ingredient we're going to use for

285
00:11:39,129 --> 00:11:41,949
this clifford scheme is any classical

286
00:11:41,949 --> 00:11:44,970
homomorphic encryption scheme it has to

287
00:11:44,970 --> 00:11:48,339
adhere to some restrictions for example

288
00:11:48,339 --> 00:11:51,129
the assumptions that we that you're

289
00:11:51,129 --> 00:11:52,329
going to need for this classical

290
00:11:52,329 --> 00:11:53,470
homework encryption scheme they of

291
00:11:53,470 --> 00:11:54,999
course have to be quantum safe so they

292
00:11:54,999 --> 00:11:56,350
have to be safe against the quantum

293
00:11:56,350 --> 00:11:58,809
adversary but there are some known

294
00:11:58,809 --> 00:12:01,930
schemes that that adhere to all these

295
00:12:01,930 --> 00:12:03,629
requirements so there's not a problem

296
00:12:03,629 --> 00:12:07,240
it's important to note that any you can

297
00:12:07,240 --> 00:12:09,670
and do pick any classical homomorphic

298
00:12:09,670 --> 00:12:10,870
encryption scheme that meets these

299
00:12:10,870 --> 00:12:13,300
requirements so if there's some

300
00:12:13,300 --> 00:12:15,189
advancements in a better better scheme

301
00:12:15,189 --> 00:12:17,040
there you can just plug and play and

302
00:12:17,040 --> 00:12:22,240
pick your favorite set of assumptions so

303
00:12:22,240 --> 00:12:23,769
with these two ingredients how is this

304
00:12:23,769 --> 00:12:25,660
going to work of course we start off

305
00:12:25,660 --> 00:12:27,790
with our input quantum state and what

306
00:12:27,790 --> 00:12:29,290
we're going to do is we're going to use

307
00:12:29,290 --> 00:12:31,300
this quantum one-time pads to encrypt

308
00:12:31,300 --> 00:12:33,579
the state so now it's completely

309
00:12:33,579 --> 00:12:35,529
securing we can send it over to the

310
00:12:35,529 --> 00:12:38,350
evaluator and let's say this evaluator

311
00:12:38,350 --> 00:12:41,019
wants to evaluate how to mark gate on

312
00:12:41,019 --> 00:12:44,829
this state this is this H gate basically

313
00:12:44,829 --> 00:12:46,420
what it's going to do is just going to

314
00:12:46,420 --> 00:12:49,600
apply this state to the encrypted input

315
00:12:49,600 --> 00:12:51,699
and we can do the math and then we can

316
00:12:51,699 --> 00:12:53,350
see that because of the way this HUD

317
00:12:53,350 --> 00:12:55,329
amarte gate interacts with this quantum

318
00:12:55,329 --> 00:12:57,579
one-time pad I mean you just have to

319
00:12:57,579 --> 00:12:59,319
know about this but you can you can do

320
00:12:59,319 --> 00:13:02,379
the math yourself we end up actually

321
00:13:02,379 --> 00:13:04,509
with a valid encryption of the results

322
00:13:04,509 --> 00:13:07,240
so we end up with an encryption of H

323
00:13:07,240 --> 00:13:09,610
apply to psi only if you're paying close

324
00:13:09,610 --> 00:13:11,800
attention you will see that the key has

325
00:13:11,800 --> 00:13:13,179
changed so the key to the quantum

326
00:13:13,179 --> 00:13:14,740
one-time pad is not the same as it was

327
00:13:14,740 --> 00:13:16,839
before it used to be a comma B and now

328
00:13:16,839 --> 00:13:20,049
it's become a for the HUD margate always

329
00:13:20,049 --> 00:13:22,329
these two values flip for the phase gate

330
00:13:22,329 --> 00:13:23,680
and the C not

331
00:13:23,680 --> 00:13:24,820
things are a little bit different but

332
00:13:24,820 --> 00:13:26,589
there's there are always some simple

333
00:13:26,589 --> 00:13:28,390
function of the original key so in this

334
00:13:28,390 --> 00:13:30,279
case it's a swap may be in for the face

335
00:13:30,279 --> 00:13:32,290
gate there's some addition involved but

336
00:13:32,290 --> 00:13:37,050
it's always a simple simple way so

337
00:13:37,050 --> 00:13:39,790
Google just applies this how to margate

338
00:13:39,790 --> 00:13:41,800
to the encrypted state ends up with a

339
00:13:41,800 --> 00:13:45,040
valid encryption of the result but if

340
00:13:45,040 --> 00:13:46,510
you would just send this back to Dora

341
00:13:46,510 --> 00:13:48,640
now she would be unable to decrypt

342
00:13:48,640 --> 00:13:51,040
because her he doesn't match anymore so

343
00:13:51,040 --> 00:13:52,360
this is where the second ingredient

344
00:13:52,360 --> 00:13:53,950
comes in our classical homework

345
00:13:53,950 --> 00:13:57,010
encryption scheme Dora just acts up her

346
00:13:57,010 --> 00:13:59,740
key to the quantum one-time pad using a

347
00:13:59,740 --> 00:14:03,370
classical encryption which he then sent

348
00:14:03,370 --> 00:14:05,050
to google google knows he has just

349
00:14:05,050 --> 00:14:07,180
applied this ha to margate so he knows

350
00:14:07,180 --> 00:14:09,610
he has to flip or swap the two values of

351
00:14:09,610 --> 00:14:11,680
the key and he can do this homomorphic

352
00:14:11,680 --> 00:14:13,330
lee using our classical homomorphic

353
00:14:13,330 --> 00:14:15,550
encryption scheme so he starts off with

354
00:14:15,550 --> 00:14:17,800
the old key he evaluates some update

355
00:14:17,800 --> 00:14:19,510
function and now he has an encryption of

356
00:14:19,510 --> 00:14:22,360
the new key of the updated key then he

357
00:14:22,360 --> 00:14:24,670
can send everything back to dora she can

358
00:14:24,670 --> 00:14:27,970
first decrypt the new updated key to the

359
00:14:27,970 --> 00:14:29,830
quantum one-time pad and then she can

360
00:14:29,830 --> 00:14:32,770
use that key to decrypt the state that

361
00:14:32,770 --> 00:14:35,110
she's interested in so how do harm are

362
00:14:35,110 --> 00:14:37,660
applied to up sigh and we can do we can

363
00:14:37,660 --> 00:14:40,240
reiterate this of course for any number

364
00:14:40,240 --> 00:14:43,480
of Clifford gates so this results in a

365
00:14:43,480 --> 00:14:45,490
scheme that works for all Clifford

366
00:14:45,490 --> 00:14:49,510
circuits and that the problem is now the

367
00:14:49,510 --> 00:14:51,160
t gate so what happens if we try to do

368
00:14:51,160 --> 00:14:53,770
the same thing with the t gate here well

369
00:14:53,770 --> 00:14:55,900
it depends depends on the key to the

370
00:14:55,900 --> 00:14:58,750
quantum one-time pad if the key to the

371
00:14:58,750 --> 00:15:00,700
one to one time pad happen to start with

372
00:15:00,700 --> 00:15:04,420
a0 so if a equals zero then everything

373
00:15:04,420 --> 00:15:06,279
is fine we can just do the same trick we

374
00:15:06,279 --> 00:15:07,690
can just apply the T gate to the

375
00:15:07,690 --> 00:15:09,640
encrypted state end up with an

376
00:15:09,640 --> 00:15:13,240
encryption of the result however if a

377
00:15:13,240 --> 00:15:15,760
happens to be one so if the first key

378
00:15:15,760 --> 00:15:17,350
first key to the quantum one-time pad

379
00:15:17,350 --> 00:15:20,350
was a one then this doesn't work if we

380
00:15:20,350 --> 00:15:22,570
try to do the same thing we do end up

381
00:15:22,570 --> 00:15:24,490
with an encryption of the result but

382
00:15:24,490 --> 00:15:26,110
there is an error term here so there's

383
00:15:26,110 --> 00:15:29,709
an extra phase applied to apply to this

384
00:15:29,709 --> 00:15:34,180
state and the challenge is now we have

385
00:15:34,180 --> 00:15:36,220
to remove this phase gate before we can

386
00:15:36,220 --> 00:15:37,190
continue to compete

387
00:15:37,190 --> 00:15:40,590
but the evaluator Google he does not

388
00:15:40,590 --> 00:15:42,780
know which of these two cases he's in so

389
00:15:42,780 --> 00:15:45,000
the challenge is how can go apply this

390
00:15:45,000 --> 00:15:47,880
correction p inverse if and only if a

391
00:15:47,880 --> 00:15:49,680
equals one so if and only if we're in

392
00:15:49,680 --> 00:15:54,540
the right case and so in the previous

393
00:15:54,540 --> 00:15:58,440
works people have found different ways

394
00:15:58,440 --> 00:16:01,800
to deal with this and our new result is

395
00:16:01,800 --> 00:16:05,100
now that we have a way to deal with

396
00:16:05,100 --> 00:16:07,860
these t gates such that we can evaluate

397
00:16:07,860 --> 00:16:11,700
more of them so our homomorphic

398
00:16:11,700 --> 00:16:14,400
encryption scheme works for circuits of

399
00:16:14,400 --> 00:16:16,320
polynomial size so in particular we can

400
00:16:16,320 --> 00:16:18,150
deal with a polynomial number of t gates

401
00:16:18,150 --> 00:16:20,490
and this polynomial is in the security

402
00:16:20,490 --> 00:16:24,870
parameter why is this during the key

403
00:16:24,870 --> 00:16:27,300
generation phase we generate a number of

404
00:16:27,300 --> 00:16:30,720
auxiliary states or gadgets and of

405
00:16:30,720 --> 00:16:32,520
course the number of gadgets that we can

406
00:16:32,520 --> 00:16:35,040
generate is limited by the security

407
00:16:35,040 --> 00:16:36,390
parameter because our key generation

408
00:16:36,390 --> 00:16:39,620
phase has to run in polynomial time and

409
00:16:39,620 --> 00:16:42,570
these gadgets they can be used to remove

410
00:16:42,570 --> 00:16:45,060
an error after the application of atty

411
00:16:45,060 --> 00:16:47,730
gate and we need one error one gadget

412
00:16:47,730 --> 00:16:49,980
forever after every t gate to remove

413
00:16:49,980 --> 00:16:52,260
this error if it was present and because

414
00:16:52,260 --> 00:16:53,580
our scheme is an extension of the

415
00:16:53,580 --> 00:16:55,980
clifford scheme we also have inherit the

416
00:16:55,980 --> 00:16:57,570
same computational assumptions with no

417
00:16:57,570 --> 00:17:01,860
additional assumptions so unfortunately

418
00:17:01,860 --> 00:17:03,780
I don't have any time to go into the

419
00:17:03,780 --> 00:17:06,000
exact details but I just want to give

420
00:17:06,000 --> 00:17:07,949
you an idea this error correction

421
00:17:07,949 --> 00:17:10,920
gadgets it's a quantum state so we

422
00:17:10,920 --> 00:17:12,690
regenerate it as part of the evaluation

423
00:17:12,690 --> 00:17:14,400
key which was allowed to be a quantum

424
00:17:14,400 --> 00:17:16,800
state of course we have to be able to

425
00:17:16,800 --> 00:17:18,180
efficiently construct and use it

426
00:17:18,180 --> 00:17:21,390
otherwise it's useless and what it does

427
00:17:21,390 --> 00:17:24,599
is it can be used in such a way that it

428
00:17:24,599 --> 00:17:27,480
applies the correction p inverse if and

429
00:17:27,480 --> 00:17:29,010
only if an error was present to begin

430
00:17:29,010 --> 00:17:31,110
with so if and only if this key a was

431
00:17:31,110 --> 00:17:34,440
equal to one and the idea is the

432
00:17:34,440 --> 00:17:36,680
following so we have our state and

433
00:17:36,680 --> 00:17:39,000
inside this gadget there is going to be

434
00:17:39,000 --> 00:17:40,680
a lot of permutations going on basically

435
00:17:40,680 --> 00:17:42,720
we do some sort of permutation branching

436
00:17:42,720 --> 00:17:45,390
program inside for the decryption I'm

437
00:17:45,390 --> 00:17:47,070
not going to go into the details but the

438
00:17:47,070 --> 00:17:48,480
idea is that if there was an error

439
00:17:48,480 --> 00:17:50,640
present so if a equals one

440
00:17:50,640 --> 00:17:53,640
then somewhere inside this gadget this

441
00:17:53,640 --> 00:17:55,410
state is going to pass a correction gate

442
00:17:55,410 --> 00:17:57,840
and out comes the corrected state

443
00:17:57,840 --> 00:18:00,360
without the error whereas if a equals

444
00:18:00,360 --> 00:18:02,490
zero so if there was no no error to

445
00:18:02,490 --> 00:18:05,190
begin with the gadget it operated in a

446
00:18:05,190 --> 00:18:08,400
different way and somehow this state is

447
00:18:08,400 --> 00:18:09,690
not going to pass through this

448
00:18:09,690 --> 00:18:12,270
correction gate so it's going to come

449
00:18:12,270 --> 00:18:14,880
out unharmed so in the end whether or

450
00:18:14,880 --> 00:18:16,590
not the air worth present to begin with

451
00:18:16,590 --> 00:18:18,630
we end up with a state where the arrow

452
00:18:18,630 --> 00:18:21,990
is not present anymore unfortunately

453
00:18:21,990 --> 00:18:24,660
though because the way the gadget is set

454
00:18:24,660 --> 00:18:26,340
up we have to perform a lot of

455
00:18:26,340 --> 00:18:27,960
measurements during the use of the

456
00:18:27,960 --> 00:18:31,620
gadget which means that after one use

457
00:18:31,620 --> 00:18:34,620
this gadget is is useless has become

458
00:18:34,620 --> 00:18:37,170
useless we can only use it once so after

459
00:18:37,170 --> 00:18:39,240
one use its destroyed and we have to go

460
00:18:39,240 --> 00:18:41,460
to new one this is why we need as many

461
00:18:41,460 --> 00:18:43,110
gadgets as their arty gaze in the

462
00:18:43,110 --> 00:18:46,230
circuit so just to give you an overview

463
00:18:46,230 --> 00:18:49,710
of what our scheme will look like we get

464
00:18:49,710 --> 00:18:51,360
those four algorithms versus key

465
00:18:51,360 --> 00:18:53,790
generation we generate some keys for

466
00:18:53,790 --> 00:18:55,080
some classical homomorphic encryption

467
00:18:55,080 --> 00:18:57,410
scheme of our of our choice and

468
00:18:57,410 --> 00:19:00,720
additionally we generate a number of

469
00:19:00,720 --> 00:19:03,450
these gadgets any number up to some

470
00:19:03,450 --> 00:19:05,190
upper bound of the number of T gates

471
00:19:05,190 --> 00:19:06,750
that we think we're going to evaluate

472
00:19:06,750 --> 00:19:11,370
during the evaluation phase for the

473
00:19:11,370 --> 00:19:13,260
encryption we first encrypt using the

474
00:19:13,260 --> 00:19:16,170
quantum one-time pad and then we encrypt

475
00:19:16,170 --> 00:19:17,790
the key to the quantum one-time pad

476
00:19:17,790 --> 00:19:20,720
using our classical encryption scheme

477
00:19:20,720 --> 00:19:23,310
for the evaluation depends on what kind

478
00:19:23,310 --> 00:19:25,110
of gates we went to evaluate the

479
00:19:25,110 --> 00:19:27,030
Clifford gates they are pretty easy we

480
00:19:27,030 --> 00:19:28,950
can just apply them and then classically

481
00:19:28,950 --> 00:19:31,650
update the keys for the T gates we have

482
00:19:31,650 --> 00:19:33,540
to use one of our gadgets in order to

483
00:19:33,540 --> 00:19:35,970
get rid of this error and then finally

484
00:19:35,970 --> 00:19:39,690
to decrypt we first decrypt the updated

485
00:19:39,690 --> 00:19:41,550
key because during the evaluation key

486
00:19:41,550 --> 00:19:43,590
this key was constantly updated we

487
00:19:43,590 --> 00:19:45,870
decrypted using our classical secret key

488
00:19:45,870 --> 00:19:48,270
and then we use this updated key to

489
00:19:48,270 --> 00:19:50,040
decrypt the final resulting state that

490
00:19:50,040 --> 00:19:51,510
we're interested in to get the plain sex

491
00:19:51,510 --> 00:19:55,740
of the result so this scheme it can deal

492
00:19:55,740 --> 00:19:57,990
with a polynomial number of T gates

493
00:19:57,990 --> 00:20:00,240
which is an improvement over previously

494
00:20:00,240 --> 00:20:02,490
known results and given that the

495
00:20:02,490 --> 00:20:03,690
classical scheme

496
00:20:03,690 --> 00:20:06,539
secure and compact our resulting scheme

497
00:20:06,539 --> 00:20:10,740
is also a securing compact for some

498
00:20:10,740 --> 00:20:12,840
future work of course one obvious thing

499
00:20:12,840 --> 00:20:17,370
is kami gets to a version of this where

500
00:20:17,370 --> 00:20:20,120
we don't need to generate this number of

501
00:20:20,120 --> 00:20:24,929
so 11 gadget for every T gate so in

502
00:20:24,929 --> 00:20:27,000
technical terms is be that that would be

503
00:20:27,000 --> 00:20:28,919
a non leveled version of our qfh a

504
00:20:28,919 --> 00:20:32,490
scheme wonderfully almost encryption and

505
00:20:32,490 --> 00:20:34,429
some other interesting things that would

506
00:20:34,429 --> 00:20:36,899
that we would like to look at which

507
00:20:36,899 --> 00:20:39,090
don't require this non leveled version

508
00:20:39,090 --> 00:20:42,179
of q fhe is just to see if some of the

509
00:20:42,179 --> 00:20:43,889
things that follow classically from

510
00:20:43,889 --> 00:20:46,590
homework encryption would also follow in

511
00:20:46,590 --> 00:20:47,759
a quantum ways of multi-party

512
00:20:47,759 --> 00:20:50,100
computation quantum obfuscation but a

513
00:20:50,100 --> 00:20:52,590
lot of other things so there's a lot to

514
00:20:52,590 --> 00:20:55,908
be done here thank you

