1
00:00:03,910 --> 00:00:06,380
Thank You else on earth so I'm going to

2
00:00:06,380 --> 00:00:07,640
tell you about the adaptively secure

3
00:00:07,640 --> 00:00:10,130
Kabul circuits from one-way function so

4
00:00:10,130 --> 00:00:13,310
what is the problem I want a server to

5
00:00:13,310 --> 00:00:15,230
compute a circuit under an input without

6
00:00:15,230 --> 00:00:17,060
learning anything else about the circuit

7
00:00:17,060 --> 00:00:20,349
for the input I'm assuming that the

8
00:00:20,349 --> 00:00:22,730
topology of the graph circuit is known

9
00:00:22,730 --> 00:00:24,439
so that's not something I need to hide

10
00:00:24,439 --> 00:00:26,720
so we have two parties you can think of

11
00:00:26,720 --> 00:00:28,699
the second party as a server and the

12
00:00:28,699 --> 00:00:30,619
first party has all of the information

13
00:00:30,619 --> 00:00:34,370
the circuit and depth input so it will

14
00:00:34,370 --> 00:00:36,710
garble the circuit send it over at some

15
00:00:36,710 --> 00:00:38,539
point gets the input or decides on an

16
00:00:38,539 --> 00:00:41,269
input also garbles it and send it to the

17
00:00:41,269 --> 00:00:43,070
second party and somehow the second

18
00:00:43,070 --> 00:00:44,780
party is able to evaluate the circuit

19
00:00:44,780 --> 00:00:46,789
and get that of course i want

20
00:00:46,789 --> 00:00:49,070
correctness security and efficiency and

21
00:00:49,070 --> 00:00:50,899
I might even want some other properties

22
00:00:50,899 --> 00:00:52,850
from the cartwheeling a scheme but we

23
00:00:52,850 --> 00:00:56,539
just talked about this three so what do

24
00:00:56,539 --> 00:00:59,179
I want from what do I mean when I say

25
00:00:59,179 --> 00:01:02,600
efficient I think about the computation

26
00:01:02,600 --> 00:01:04,760
in two phases the offline phase where we

27
00:01:04,760 --> 00:01:07,700
are garbling the circuit and you can't

28
00:01:07,700 --> 00:01:09,050
think that you're not in a rush at this

29
00:01:09,050 --> 00:01:11,150
point and then there is their online

30
00:01:11,150 --> 00:01:13,670
face way you have the input and you want

31
00:01:13,670 --> 00:01:15,590
to be able to garble the input quickly

32
00:01:15,590 --> 00:01:17,660
in particular you don't want to spend as

33
00:01:17,660 --> 00:01:19,850
much time as it takes to do the computer

34
00:01:19,850 --> 00:01:22,190
show yourself so when we say an

35
00:01:22,190 --> 00:01:24,410
efficient online complexity we are

36
00:01:24,410 --> 00:01:26,390
talking about something that is much

37
00:01:26,390 --> 00:01:29,810
smaller the other size at the circuit so

38
00:01:29,810 --> 00:01:32,570
when it comes to security we have two

39
00:01:32,570 --> 00:01:34,670
definitions the selective version where

40
00:01:34,670 --> 00:01:36,320
we have our adversary at the Challenger

41
00:01:36,320 --> 00:01:38,960
and adversaries and pick some input and

42
00:01:38,960 --> 00:01:41,210
it gets back to the garbled circuit and

43
00:01:41,210 --> 00:01:43,190
the car will input I say that the system

44
00:01:43,190 --> 00:01:44,900
is secure if there is a simulator that

45
00:01:44,900 --> 00:01:47,330
gets only the output of the computation

46
00:01:47,330 --> 00:01:51,110
and can simulate the garble circuit and

47
00:01:51,110 --> 00:01:53,720
garbled input and we want these two

48
00:01:53,720 --> 00:01:55,610
distributions to be indistinguishable

49
00:01:55,610 --> 00:01:58,070
for any circuit when it comes to

50
00:01:58,070 --> 00:02:00,020
adaptive security we just change the

51
00:02:00,020 --> 00:02:01,760
game a little bit so we still want the

52
00:02:01,760 --> 00:02:04,340
same thing except that now the adversary

53
00:02:04,340 --> 00:02:07,610
gets to choose the input after seeing

54
00:02:07,610 --> 00:02:09,949
the garbled circuit and similarly the

55
00:02:09,949 --> 00:02:12,440
simulation needs to output the simulated

56
00:02:12,440 --> 00:02:14,510
garble circuit before seeing anything

57
00:02:14,510 --> 00:02:15,390
and then

58
00:02:15,390 --> 00:02:20,250
style without the computation so what do

59
00:02:20,250 --> 00:02:22,590
we know about the online complexity of

60
00:02:22,590 --> 00:02:24,540
an adaptively Sakura burbling a scheme

61
00:02:24,540 --> 00:02:27,480
we know that it has to at least be the

62
00:02:27,480 --> 00:02:29,069
size of the input plus the size of the

63
00:02:29,069 --> 00:02:33,680
output and so the two other cameras ask

64
00:02:33,680 --> 00:02:35,970
we can consider is the width of the

65
00:02:35,970 --> 00:02:38,070
circuit which is proportional to this

66
00:02:38,070 --> 00:02:40,380
base complexity of the computation and

67
00:02:40,380 --> 00:02:42,930
the depth of the circuit so we don't

68
00:02:42,930 --> 00:02:45,000
assume anything about the circuit it can

69
00:02:45,000 --> 00:02:48,720
be a very long circuit but it's very bad

70
00:02:48,720 --> 00:02:50,450
with very small with or it can be a very

71
00:02:50,450 --> 00:02:53,880
wide circuit that wears very small depth

72
00:02:53,880 --> 00:02:56,040
the only thing that we know is that the

73
00:02:56,040 --> 00:02:57,930
width has to be at least the size of the

74
00:02:57,930 --> 00:03:01,830
input or the athlete so what are the

75
00:03:01,830 --> 00:03:04,680
constructions that we have already the

76
00:03:04,680 --> 00:03:07,500
work of the larger tell shows that well

77
00:03:07,500 --> 00:03:10,019
we can actually have adapted be secure

78
00:03:10,019 --> 00:03:12,870
acabo circuit from one-way function the

79
00:03:12,870 --> 00:03:14,700
online complex is a side of a secret but

80
00:03:14,700 --> 00:03:17,040
we have other it has other nice

81
00:03:17,040 --> 00:03:18,840
properties in addition to the efficiency

82
00:03:18,840 --> 00:03:21,959
in addition to the security that makes

83
00:03:21,959 --> 00:03:23,489
it very desirable for some parallel

84
00:03:23,489 --> 00:03:30,000
computation and other thanks the there

85
00:03:30,000 --> 00:03:34,140
is the work of pune tau that assumes

86
00:03:34,140 --> 00:03:37,140
exponential lwe and gets online

87
00:03:37,140 --> 00:03:39,060
complexity proportional to the input and

88
00:03:39,060 --> 00:03:40,890
the output and the depth of the circuit

89
00:03:40,890 --> 00:03:42,690
there are two constructions that

90
00:03:42,690 --> 00:03:46,320
actually get the optimal not get the

91
00:03:46,320 --> 00:03:48,780
optimal online complexity but assume

92
00:03:48,780 --> 00:03:51,180
very strong assumptions like I are you

93
00:03:51,180 --> 00:03:53,180
and universal computational extractors

94
00:03:53,180 --> 00:03:59,180
what do we get in this work we create a

95
00:03:59,180 --> 00:04:02,130
construction that is only based on

96
00:04:02,130 --> 00:04:04,350
one-way functions and give us online

97
00:04:04,350 --> 00:04:07,220
complexity proportional to the depth or

98
00:04:07,220 --> 00:04:11,040
to the width of the circuit so this is

99
00:04:11,040 --> 00:04:12,680
just one result but yeah it has two

100
00:04:12,680 --> 00:04:15,780
instance of it so we can just picture

101
00:04:15,780 --> 00:04:19,709
that suits your circuit best I just want

102
00:04:19,709 --> 00:04:21,120
to point out for the rest of the talk

103
00:04:21,120 --> 00:04:22,830
our circuits are going to be toppled

104
00:04:22,830 --> 00:04:24,750
over on the side so the input is on the

105
00:04:24,750 --> 00:04:26,580
Left output on the side

106
00:04:26,580 --> 00:04:28,979
and the depth is actually the horizontal

107
00:04:28,979 --> 00:04:31,919
why so next we're going to see the

108
00:04:31,919 --> 00:04:34,289
yahoos garbling a scheme and see the

109
00:04:34,289 --> 00:04:35,909
proof of security for it and then we

110
00:04:35,909 --> 00:04:37,530
will have enough intuition to see why

111
00:04:37,530 --> 00:04:39,990
it's difficult to have adaptively secure

112
00:04:39,990 --> 00:04:43,889
garbling a schism so starting with just

113
00:04:43,889 --> 00:04:46,909
one gate you can they have to input

114
00:04:46,909 --> 00:04:49,469
wires one output wire we give each of

115
00:04:49,469 --> 00:04:54,900
them we give each of them to random Keys

116
00:04:54,900 --> 00:04:59,129
associated with our values 0 & 1 & 2

117
00:04:59,129 --> 00:05:02,699
garbled you look at the truth table of

118
00:05:02,699 --> 00:05:04,889
the gate and for each line I would

119
00:05:04,889 --> 00:05:07,190
create one cypher text which is a

120
00:05:07,190 --> 00:05:10,139
encryption of the output wire using the

121
00:05:10,139 --> 00:05:14,280
input wire case i'll use this annotation

122
00:05:14,280 --> 00:05:18,900
of the encryption with two keys just to

123
00:05:18,900 --> 00:05:21,000
show this double encryption of the

124
00:05:21,000 --> 00:05:24,240
alphabet key so if you want to so we do

125
00:05:24,240 --> 00:05:25,500
the same thing for all of them and we

126
00:05:25,500 --> 00:05:28,610
just randomize there these ciphertexts

127
00:05:28,610 --> 00:05:31,740
so to come to evaluate this gate you

128
00:05:31,740 --> 00:05:35,460
just need to have sorry you need to have

129
00:05:35,460 --> 00:05:42,378
one of the keys poison this working

130
00:05:44,630 --> 00:05:48,020
okay so you need to know about one of

131
00:05:48,020 --> 00:05:49,700
the kids of each of the wires and then

132
00:05:49,700 --> 00:05:52,040
you can get you can decipher exactly one

133
00:05:52,040 --> 00:05:54,800
of these ciphertext i can get backed out

134
00:05:54,800 --> 00:05:57,590
with the key and for security we have to

135
00:05:57,590 --> 00:05:59,270
make sure that it is you only get one of

136
00:05:59,270 --> 00:06:02,930
those kids out not anything else so for

137
00:06:02,930 --> 00:06:04,310
car buying the entire self glad you just

138
00:06:04,310 --> 00:06:05,960
repeat the same thing for all of the

139
00:06:05,960 --> 00:06:08,450
gates and you have the carpet circuit

140
00:06:08,450 --> 00:06:10,610
you also have to map the output virus

141
00:06:10,610 --> 00:06:13,670
into value 0 and 1 and this would be our

142
00:06:13,670 --> 00:06:16,460
what we do during the offline phase and

143
00:06:16,460 --> 00:06:19,310
therefore garbling of the input you just

144
00:06:19,310 --> 00:06:21,380
give back the keys that are associated

145
00:06:21,380 --> 00:06:24,320
with the input X what does the simulator

146
00:06:24,320 --> 00:06:26,990
do try to do the same thing as much as

147
00:06:26,990 --> 00:06:29,420
possible she chooses the keys but

148
00:06:29,420 --> 00:06:32,630
doesn't know what the gate is doing so

149
00:06:32,630 --> 00:06:37,340
it will just encrypt all 0 so that just

150
00:06:37,340 --> 00:06:39,020
one key is going to be in the simulated

151
00:06:39,020 --> 00:06:41,390
gate and the piece the same thing for

152
00:06:41,390 --> 00:06:49,280
all of them and since it knows the

153
00:06:49,280 --> 00:06:51,860
output it can just map the output wires

154
00:06:51,860 --> 00:06:54,860
that are associated with zero to the

155
00:06:54,860 --> 00:06:58,070
values of Y and this would be the

156
00:06:58,070 --> 00:07:01,850
garbled circuit for the simulation and

157
00:07:01,850 --> 00:07:04,670
then to gobble the input will just keep

158
00:07:04,670 --> 00:07:09,350
all zeros so now we have to just show

159
00:07:09,350 --> 00:07:11,230
that these two distributions are

160
00:07:11,230 --> 00:07:17,690
indistinguishable we start with hybrid

161
00:07:17,690 --> 00:07:19,700
arguments meaning that i'm going to find

162
00:07:19,700 --> 00:07:21,710
some distributions that are hybrid of

163
00:07:21,710 --> 00:07:24,700
both the simulation and the real

164
00:07:24,700 --> 00:07:30,470
garbling and changing the gates one by

165
00:07:30,470 --> 00:07:35,530
one from the real to the simulated i

166
00:07:35,530 --> 00:07:38,150
keep doing that until all of the circuit

167
00:07:38,150 --> 00:07:41,480
is red so this would be fine if these

168
00:07:41,480 --> 00:07:42,770
two were actually distinct

169
00:07:42,770 --> 00:07:44,690
indistinguishable but they in fact are

170
00:07:44,690 --> 00:07:47,210
totally distinguishable because one of

171
00:07:47,210 --> 00:07:50,270
them is always out putting 0 and the

172
00:07:50,270 --> 00:07:51,950
other one act with something that is

173
00:07:51,950 --> 00:07:54,530
dependent on what the input was so they

174
00:07:54,530 --> 00:07:55,590
don't even compute

175
00:07:55,590 --> 00:07:57,420
same things sometimes but I want to be

176
00:07:57,420 --> 00:08:00,750
distinguishable so you look at our

177
00:08:00,750 --> 00:08:02,820
simulated gate and we see that the

178
00:08:02,820 --> 00:08:05,160
problem is that we are always encrypting

179
00:08:05,160 --> 00:08:09,060
c0 but we get the answer right there

180
00:08:09,060 --> 00:08:11,070
because we know the input x we are

181
00:08:11,070 --> 00:08:15,330
getting it right here so I can just

182
00:08:15,330 --> 00:08:17,430
define a new version of the simulated

183
00:08:17,430 --> 00:08:20,820
gate that depends on the input aptly

184
00:08:20,820 --> 00:08:23,010
named input dependent simulated gate and

185
00:08:23,010 --> 00:08:26,370
I just put the right key here that

186
00:08:26,370 --> 00:08:29,070
depends on the input X that I know the

187
00:08:29,070 --> 00:08:31,470
right output here and now if I sit

188
00:08:31,470 --> 00:08:33,929
replace this one I can actually say that

189
00:08:33,929 --> 00:08:35,220
these two are computationally

190
00:08:35,220 --> 00:08:38,760
indistinguishable so it's great we're

191
00:08:38,760 --> 00:08:42,330
going to just replace this um they place

192
00:08:42,330 --> 00:08:44,880
the red ones with the instead use the

193
00:08:44,880 --> 00:08:47,040
black ones and keep doing that over and

194
00:08:47,040 --> 00:08:51,810
over I just want to make note that

195
00:08:51,810 --> 00:08:53,820
there's a it's important that we are

196
00:08:53,820 --> 00:08:56,160
going about changing the colors row by

197
00:08:56,160 --> 00:08:58,050
row because for example if I want to

198
00:08:58,050 --> 00:09:00,570
turn this one black I'm going to be in

199
00:09:00,570 --> 00:09:02,100
trouble because there is a wire that

200
00:09:02,100 --> 00:09:04,950
comes from a real gate and then I can

201
00:09:04,950 --> 00:09:06,120
really say anything about

202
00:09:06,120 --> 00:09:07,850
indistinguishability of these two

203
00:09:07,850 --> 00:09:10,500
distributions so it's important that the

204
00:09:10,500 --> 00:09:13,560
first input the gates that the input

205
00:09:13,560 --> 00:09:15,480
wires are coming from are already

206
00:09:15,480 --> 00:09:17,760
simulated before i turn the output 1

207
00:09:17,760 --> 00:09:21,450
into a black it so this would be fine so

208
00:09:21,450 --> 00:09:22,890
we keep doing this on to the whole thing

209
00:09:22,890 --> 00:09:24,630
is black and then we just notice that

210
00:09:24,630 --> 00:09:29,120
these two are the same distribution so

211
00:09:29,120 --> 00:09:32,010
mr. we had three rules when we were

212
00:09:32,010 --> 00:09:34,200
changing the distribution and you

213
00:09:34,200 --> 00:09:36,780
started with the input gains and we were

214
00:09:36,780 --> 00:09:40,790
able to turn those into black gates and

215
00:09:41,570 --> 00:09:44,190
so if it gets all of its inputs was

216
00:09:44,190 --> 00:09:45,870
coming from brackets then we could turn

217
00:09:45,870 --> 00:09:48,060
into a black and finally when the entire

218
00:09:48,060 --> 00:09:50,760
circuit was black we were able to say

219
00:09:50,760 --> 00:09:52,350
that this is the same as being all red

220
00:09:52,350 --> 00:09:55,800
we actually can change that last rule

221
00:09:55,800 --> 00:09:58,380
and refine it a bit because we can turn

222
00:09:58,380 --> 00:10:01,200
tease turn black gets into red case way

223
00:10:01,200 --> 00:10:05,850
before I can turn this pet into a red

224
00:10:05,850 --> 00:10:06,350
gate

225
00:10:06,350 --> 00:10:08,630
because its output is only going to

226
00:10:08,630 --> 00:10:11,840
simulate at eight so when you look at

227
00:10:11,840 --> 00:10:13,610
the garble in the scheme they both have

228
00:10:13,610 --> 00:10:16,640
only one key and that key also is going

229
00:10:16,640 --> 00:10:19,190
into another simulated gate so these two

230
00:10:19,190 --> 00:10:20,960
are exactly the same distribution

231
00:10:20,960 --> 00:10:23,150
everything closes smooth Rick so it's

232
00:10:23,150 --> 00:10:24,890
just a matter of whether you interpret

233
00:10:24,890 --> 00:10:27,230
this as a zero or not doesn't change

234
00:10:27,230 --> 00:10:30,400
anything else so I can actually use this

235
00:10:30,400 --> 00:10:32,930
new rule that says that the Black Gate

236
00:10:32,930 --> 00:10:34,910
with all of its inputs going into

237
00:10:34,910 --> 00:10:41,240
simulated gate can be turned red it

238
00:10:41,240 --> 00:10:43,190
doesn't make any difference as far as

239
00:10:43,190 --> 00:10:45,110
for selective security goes we already

240
00:10:45,110 --> 00:10:48,380
have a sick selective security proof but

241
00:10:48,380 --> 00:10:51,070
it will be useful for that tactic case

242
00:10:51,070 --> 00:10:54,020
so why is it difficult to show that I

243
00:10:54,020 --> 00:10:57,110
all is adaptively secure to start with

244
00:10:57,110 --> 00:11:00,410
we done the online complexity of the

245
00:11:00,410 --> 00:11:03,230
yellow the scheme is too small it's only

246
00:11:03,230 --> 00:11:07,670
the size of the input the size of the

247
00:11:07,670 --> 00:11:10,370
input but this is very easy to solve you

248
00:11:10,370 --> 00:11:11,900
just send the output table and online

249
00:11:11,900 --> 00:11:14,510
face and this not only gives us the

250
00:11:14,510 --> 00:11:17,450
right online complexity and it also

251
00:11:17,450 --> 00:11:19,640
solves the problem of simulation because

252
00:11:19,640 --> 00:11:22,430
the core bling of the circuit didn't you

253
00:11:22,430 --> 00:11:24,140
really use the output it was only the

254
00:11:24,140 --> 00:11:25,910
output table that was using the output

255
00:11:25,910 --> 00:11:28,280
so now we have not only we have a

256
00:11:28,280 --> 00:11:32,030
correct and efficient scheme we also

257
00:11:32,030 --> 00:11:34,370
have a simulator we have just had to

258
00:11:34,370 --> 00:11:36,380
have it indistinguishability proof and

259
00:11:36,380 --> 00:11:39,140
you can imagine this is where things go

260
00:11:39,140 --> 00:11:41,570
wrong because our first hybrid had a

261
00:11:41,570 --> 00:11:44,300
input depended simulated gate so this

262
00:11:44,300 --> 00:11:46,700
wire depended at the input that i'm only

263
00:11:46,700 --> 00:11:49,820
getting after i've already given out the

264
00:11:49,820 --> 00:11:53,030
garbled circuit so this really isn't

265
00:11:53,030 --> 00:11:56,600
even well defied and this would be the

266
00:11:56,600 --> 00:12:00,890
main problem that we have so this

267
00:12:00,890 --> 00:12:03,590
approach doesn't work and doesn't mean

268
00:12:03,590 --> 00:12:06,170
kid but he always not have to be secure

269
00:12:06,170 --> 00:12:08,120
but it does mean that that approach is

270
00:12:08,120 --> 00:12:11,630
not going to help us so what do we do we

271
00:12:11,630 --> 00:12:13,880
start with adaptive we start with solar

272
00:12:13,880 --> 00:12:17,580
that's modified version of yellow again

273
00:12:17,580 --> 00:12:19,920
we try to solve this problem of not

274
00:12:19,920 --> 00:12:22,500
being able to have black gates so we

275
00:12:22,500 --> 00:12:24,630
have to come up with a way to go around

276
00:12:24,630 --> 00:12:26,820
this problem not being able to have

277
00:12:26,820 --> 00:12:29,960
hybrids that have black gates to do this

278
00:12:29,960 --> 00:12:33,270
we define a new encryption scheme and we

279
00:12:33,270 --> 00:12:36,630
construct that that what they use in new

280
00:12:36,630 --> 00:12:39,300
magical encryption is soon does it just

281
00:12:39,300 --> 00:12:42,230
said it lets me exactly define such

282
00:12:42,230 --> 00:12:44,700
hybrids where there are gates that I can

283
00:12:44,700 --> 00:12:48,020
decide about them in the online face and

284
00:12:48,020 --> 00:12:50,250
another great thing about it is that the

285
00:12:50,250 --> 00:12:52,500
ischium grows with a number of black

286
00:12:52,500 --> 00:12:55,590
gates so if its key would be wait well

287
00:12:55,590 --> 00:12:58,170
if the key is too big then it wouldn't

288
00:12:58,170 --> 00:13:00,390
be really useful why because what I'm

289
00:13:00,390 --> 00:13:02,700
going to do is to go to encrypt the

290
00:13:02,700 --> 00:13:05,580
entire Yahoo's garbled circuit with this

291
00:13:05,580 --> 00:13:07,920
encryption and give the key of the

292
00:13:07,920 --> 00:13:10,440
encryption in the online phase so I care

293
00:13:10,440 --> 00:13:13,290
that these kids not too big so what they

294
00:13:13,290 --> 00:13:14,970
believed you would do is just to decrypt

295
00:13:14,970 --> 00:13:18,800
it and do the evaluation has did before

296
00:13:18,800 --> 00:13:21,540
so that would be the first thing that we

297
00:13:21,540 --> 00:13:24,990
need to do and the second thing is to

298
00:13:24,990 --> 00:13:26,490
keep make sure that the number of black

299
00:13:26,490 --> 00:13:29,700
gays are small because the Kiku is

300
00:13:29,700 --> 00:13:31,200
growing with the number of black gays

301
00:13:31,200 --> 00:13:32,910
and then the key is part of the online

302
00:13:32,910 --> 00:13:35,900
complexity and I want to keep that small

303
00:13:35,900 --> 00:13:40,380
so to do that we try to find a way to

304
00:13:40,380 --> 00:13:42,390
turn the black gays into the simulated

305
00:13:42,390 --> 00:13:44,550
gates as soon as possible because the

306
00:13:44,550 --> 00:13:46,200
simulated gates don't depend on the

307
00:13:46,200 --> 00:13:48,150
input and I can't do that i can create

308
00:13:48,150 --> 00:13:51,200
them in the offline face and we do this

309
00:13:51,200 --> 00:13:53,970
using some smarter ways of doing hybrid

310
00:13:53,970 --> 00:13:57,900
hiding so what is this magical

311
00:13:57,900 --> 00:13:59,760
encryption is called some very equivocal

312
00:13:59,760 --> 00:14:01,290
encryption and I'm just going to show

313
00:14:01,290 --> 00:14:03,390
you what it does imagine you have a

314
00:14:03,390 --> 00:14:07,050
message that is a vector of messages and

315
00:14:07,050 --> 00:14:08,880
we're going to have two procedures the

316
00:14:08,880 --> 00:14:10,320
honest procedure and the simulated

317
00:14:10,320 --> 00:14:13,830
procedure the honest procedure does what

318
00:14:13,830 --> 00:14:15,300
you expect an honest person you do it

319
00:14:15,300 --> 00:14:17,160
creates this there's a key generation

320
00:14:17,160 --> 00:14:19,320
that gives you a key and then there's an

321
00:14:19,320 --> 00:14:21,330
encryption that this kitty gets the key

322
00:14:21,330 --> 00:14:22,590
and the message and produces the

323
00:14:22,590 --> 00:14:24,990
ciphertext of then there's a decryption

324
00:14:24,990 --> 00:14:28,170
key the decryption function so but does

325
00:14:28,170 --> 00:14:30,960
the simulation portion it just gets

326
00:14:30,960 --> 00:14:32,970
of the message and there are like some

327
00:14:32,970 --> 00:14:35,250
holes in this vector but it still

328
00:14:35,250 --> 00:14:38,100
produces the ciphertext that is looking

329
00:14:38,100 --> 00:14:41,850
very similar to there so I projects up

330
00:14:41,850 --> 00:14:43,650
the honors procedure and then there's

331
00:14:43,650 --> 00:14:45,390
another procedure that gets the rest of

332
00:14:45,390 --> 00:14:49,170
the messages and creates a key that will

333
00:14:49,170 --> 00:14:52,080
decrypt this ciphertext into their

334
00:14:52,080 --> 00:14:56,780
correct messages w1 so to see this

335
00:14:56,780 --> 00:14:59,370
victoria leigh the honest procedure will

336
00:14:59,370 --> 00:15:01,910
have the message and the key and then

337
00:15:01,910 --> 00:15:06,620
comes up with a way to cover the message

338
00:15:06,860 --> 00:15:10,050
completely but what does the fit what

339
00:15:10,050 --> 00:15:12,600
the simulated procedure will do is only

340
00:15:12,600 --> 00:15:16,260
get some of the messages and no key and

341
00:15:16,260 --> 00:15:19,680
we will still creates a cipher text and

342
00:15:19,680 --> 00:15:21,240
then when it gets the rest of the

343
00:15:21,240 --> 00:15:23,460
message if it comes up with a key that

344
00:15:23,460 --> 00:15:25,830
the key will make sure that when you

345
00:15:25,830 --> 00:15:27,600
decrypt the ciphertext you will get all

346
00:15:27,600 --> 00:15:30,180
the messages the great thing about this

347
00:15:30,180 --> 00:15:34,140
with this encryption scheme is that the

348
00:15:34,140 --> 00:15:37,260
security definition your aunt is that

349
00:15:37,260 --> 00:15:38,490
these two will actually look

350
00:15:38,490 --> 00:15:41,220
indistinguishable from each other and we

351
00:15:41,220 --> 00:15:43,200
get this we construct this based on

352
00:15:43,200 --> 00:15:44,550
distributed point functions that

353
00:15:44,550 --> 00:15:45,840
themselves are based on one-way

354
00:15:45,840 --> 00:15:48,300
functions and the last great thing but

355
00:15:48,300 --> 00:15:50,490
this scheme is that the key grows only

356
00:15:50,490 --> 00:15:55,770
with the number of holes so now that we

357
00:15:55,770 --> 00:15:58,860
have this encryption scheme as we saw

358
00:15:58,860 --> 00:16:01,130
before we're just going to encrypt the

359
00:16:01,130 --> 00:16:03,870
garbling of y'all with garbled circuit

360
00:16:03,870 --> 00:16:05,910
and give the key in the online face what

361
00:16:05,910 --> 00:16:08,730
does the simulator do does the exact

362
00:16:08,730 --> 00:16:11,070
same thing just using the car simulated

363
00:16:11,070 --> 00:16:14,670
garbled circuit so both of them are

364
00:16:14,670 --> 00:16:17,280
using the honest procedure neither of

365
00:16:17,280 --> 00:16:19,400
them are doing anything this with a

366
00:16:19,400 --> 00:16:22,290
simulation procedure so this is just an

367
00:16:22,290 --> 00:16:25,170
honest procedure for both of them where

368
00:16:25,170 --> 00:16:27,570
we use this simulated procedure for the

369
00:16:27,570 --> 00:16:31,760
encryption is going to be doing the

370
00:16:31,760 --> 00:16:34,860
indistinguishability proof so let's see

371
00:16:34,860 --> 00:16:37,610
our first hybrid

372
00:16:37,980 --> 00:16:40,860
so now my first hybrid I'm going to

373
00:16:40,860 --> 00:16:43,590
first put a hole instead of the first

374
00:16:43,590 --> 00:16:46,650
where the first gate was and then in the

375
00:16:46,650 --> 00:16:49,080
online fails when I know the input X I

376
00:16:49,080 --> 00:16:51,570
will come up with a key that will put

377
00:16:51,570 --> 00:16:56,550
the input dependent gate simulated get

378
00:16:56,550 --> 00:17:00,810
in there so voila this is where the

379
00:17:00,810 --> 00:17:02,850
magic happens and now we did it we

380
00:17:02,850 --> 00:17:07,520
wanted to come over the way to define

381
00:17:07,520 --> 00:17:10,710
hybrids with black is and we succeeded

382
00:17:10,710 --> 00:17:13,589
so this was one of the main points that

383
00:17:13,589 --> 00:17:16,740
we want me to achieve and we did I just

384
00:17:16,740 --> 00:17:18,210
want to point out there is actually an

385
00:17:18,210 --> 00:17:24,800
intermediate step here if even that

386
00:17:24,800 --> 00:17:28,020
where we have a whole but yet still we

387
00:17:28,020 --> 00:17:30,440
put the key that will put the right

388
00:17:30,440 --> 00:17:34,230
similar like the real gate here not the

389
00:17:34,230 --> 00:17:36,870
input dependent simulated k and here i

390
00:17:36,870 --> 00:17:39,960
can argue that based on the equivocal

391
00:17:39,960 --> 00:17:42,450
encryption scheme security these two are

392
00:17:42,450 --> 00:17:44,960
indistinguishable and based on cps

393
00:17:44,960 --> 00:17:47,760
security d store indistinguishable but

394
00:17:47,760 --> 00:17:49,890
this is just an intermediate hybrid and

395
00:17:49,890 --> 00:17:51,570
we'll go through it every time I want to

396
00:17:51,570 --> 00:17:53,610
take one of those steps and i won't

397
00:17:53,610 --> 00:17:57,210
mention it anymore so that's it now if

398
00:17:57,210 --> 00:17:59,520
you are able to do this we can go back

399
00:17:59,520 --> 00:18:01,610
to our rules that we had before for

400
00:18:01,610 --> 00:18:06,570
selective security and just take the

401
00:18:06,570 --> 00:18:08,430
same exact steps we only have one

402
00:18:08,430 --> 00:18:10,980
additional rules that says that every

403
00:18:10,980 --> 00:18:13,650
black agents you have a whole so our

404
00:18:13,650 --> 00:18:15,540
rules of the distinguishable this is

405
00:18:15,540 --> 00:18:18,630
this is that every black gate has to

406
00:18:18,630 --> 00:18:20,430
have a whole so the number of black a

407
00:18:20,430 --> 00:18:22,590
determine determines the number of the

408
00:18:22,590 --> 00:18:24,750
holes then we start with the input gates

409
00:18:24,750 --> 00:18:27,110
we can turn those into black gates and

410
00:18:27,110 --> 00:18:32,210
saying the same rules that we had before

411
00:18:32,210 --> 00:18:37,380
so using these rules now we can have a

412
00:18:37,380 --> 00:18:40,770
hybrid distribution for adaptive case we

413
00:18:40,770 --> 00:18:43,920
first start with the input case by rule

414
00:18:43,920 --> 00:18:46,230
one I will I will be able to turn those

415
00:18:46,230 --> 00:18:49,020
black while role to again turn their

416
00:18:49,020 --> 00:18:49,799
necks

417
00:18:49,799 --> 00:18:52,409
raw black because their previous one

418
00:18:52,409 --> 00:18:55,499
over they are black by rule 3 I can turn

419
00:18:55,499 --> 00:18:58,679
this first row in to read Kate's these

420
00:18:58,679 --> 00:19:00,419
are now similarly that kitten or not

421
00:19:00,419 --> 00:19:02,399
dependent on the input and I can just

422
00:19:02,399 --> 00:19:05,999
keep doing that until the entire circuit

423
00:19:05,999 --> 00:19:09,419
is red I just want to point out but that

424
00:19:09,419 --> 00:19:11,759
we never use more than two rows of black

425
00:19:11,759 --> 00:19:16,950
gate so Mike this therefore the key of

426
00:19:16,950 --> 00:19:19,619
the somewhere equivocal encryption only

427
00:19:19,619 --> 00:19:21,269
has to be proportional to the width of

428
00:19:21,269 --> 00:19:24,769
the circuit then we generalize this

429
00:19:24,769 --> 00:19:28,139
method I by noticing that our rules are

430
00:19:28,139 --> 00:19:30,359
very similar to pebble in rules so we

431
00:19:30,359 --> 00:19:33,179
define a new peddling game where these

432
00:19:33,179 --> 00:19:36,049
are the rules only with any time that I

433
00:19:36,049 --> 00:19:39,600
go from blue to black you can think of

434
00:19:39,600 --> 00:19:41,759
it as placing a black purple and a note

435
00:19:41,759 --> 00:19:44,580
and then every time i go from black to

436
00:19:44,580 --> 00:19:46,619
red you can think of it as removing that

437
00:19:46,619 --> 00:19:51,179
like a that that pebble like bubble so

438
00:19:51,179 --> 00:19:53,009
now i can just translate this into a

439
00:19:53,009 --> 00:19:58,759
burbling game on a stir on a graph for

440
00:20:00,019 --> 00:20:02,580
so that says that a pebble can be placed

441
00:20:02,580 --> 00:20:05,249
on an input node a pebble can replace if

442
00:20:05,249 --> 00:20:07,019
its predecessors already have pebbled

443
00:20:07,019 --> 00:20:09,690
and it can be removed if its successors

444
00:20:09,690 --> 00:20:13,049
have purpose this is a little bit too

445
00:20:13,049 --> 00:20:14,369
simple point because our rules are

446
00:20:14,369 --> 00:20:17,340
actually going both ways here so i can

447
00:20:17,340 --> 00:20:19,830
actually remove a pebble and go back to

448
00:20:19,830 --> 00:20:22,799
blue and also here but since we our

449
00:20:22,799 --> 00:20:24,809
destination is red there is no real

450
00:20:24,809 --> 00:20:26,429
intuition why we would want to go back

451
00:20:26,429 --> 00:20:29,850
from red so but if this might be still

452
00:20:29,850 --> 00:20:36,090
useful so that now that we have this

453
00:20:36,090 --> 00:20:39,119
rule you have this game pebble in game

454
00:20:39,119 --> 00:20:40,799
we start with the graph that is all blue

455
00:20:40,799 --> 00:20:42,269
and you want to end up with the graph

456
00:20:42,269 --> 00:20:44,159
that is all red and you have to follow

457
00:20:44,159 --> 00:20:47,070
these rules to get from here to here and

458
00:20:47,070 --> 00:20:50,879
the great thing is that we have a way

459
00:20:50,879 --> 00:20:54,690
now to just try to come up with a pebble

460
00:20:54,690 --> 00:20:56,879
eng strategy instead of trying to find

461
00:20:56,879 --> 00:21:00,059
sequences of hybrids so our terms is

462
00:21:00,059 --> 00:21:02,399
that if there is a way to pebble the

463
00:21:02,399 --> 00:21:03,380
circuit with s

464
00:21:03,380 --> 00:21:07,730
steps and people's then and if the

465
00:21:07,730 --> 00:21:09,530
encryption scheme for the gates is

466
00:21:09,530 --> 00:21:12,500
epsilon CPA secure and the big

467
00:21:12,500 --> 00:21:14,510
encryption of the whole entire circuit

468
00:21:14,510 --> 00:21:17,300
is somewhere cubicle encryption the

469
00:21:17,300 --> 00:21:20,480
epsilon secure with equivocation

470
00:21:20,480 --> 00:21:22,490
parameter P this is the number of holes

471
00:21:22,490 --> 00:21:26,450
that we can tolerate then we consider

472
00:21:26,450 --> 00:21:30,380
our new herbal Angus scheme is s time

473
00:21:30,380 --> 00:21:32,900
absalon adaptively secure with online

474
00:21:32,900 --> 00:21:35,210
complexity that is the size of the input

475
00:21:35,210 --> 00:21:38,510
and output plus the number of pebbles

476
00:21:38,510 --> 00:21:43,220
that we have so we already saw one per

477
00:21:43,220 --> 00:21:44,990
blowing a strategy which was going row

478
00:21:44,990 --> 00:21:47,570
by row you can think of this step as

479
00:21:47,570 --> 00:21:49,790
removing those black pebbles and then

480
00:21:49,790 --> 00:21:52,430
put using them to put pebbles on the

481
00:21:52,430 --> 00:21:54,530
next level and then again removing

482
00:21:54,530 --> 00:21:57,200
pebbles putting more pebbles today so

483
00:21:57,200 --> 00:21:59,000
this is actually pulling strategy with

484
00:21:59,000 --> 00:22:01,340
number of pebbles in order of the rest

485
00:22:01,340 --> 00:22:02,810
of the circuit and the number of the

486
00:22:02,810 --> 00:22:05,060
step is just the size of the circuit so

487
00:22:05,060 --> 00:22:07,910
using this we have our moments we can

488
00:22:07,910 --> 00:22:10,930
plug this into the previous theorem and

489
00:22:10,930 --> 00:22:13,160
so there's a strategy with these

490
00:22:13,160 --> 00:22:14,960
parameters and this gives us that our

491
00:22:14,960 --> 00:22:18,170
scheme is secure with online complexity

492
00:22:18,170 --> 00:22:20,390
proportional to the width there is

493
00:22:20,390 --> 00:22:24,500
another strategy that has does has

494
00:22:24,500 --> 00:22:27,020
number of pebbles proportional to the

495
00:22:27,020 --> 00:22:29,420
depth of the circuit and the number of

496
00:22:29,420 --> 00:22:33,380
steps being exponential in the depth so

497
00:22:33,380 --> 00:22:34,760
our scheme is secure with a non

498
00:22:34,760 --> 00:22:37,430
convexity order out depth but the

499
00:22:37,430 --> 00:22:39,980
security will do be great exponentially

500
00:22:39,980 --> 00:22:42,110
in depth so you might want to just use

501
00:22:42,110 --> 00:22:45,590
it for very low def circuits there can

502
00:22:45,590 --> 00:22:47,600
be other public strategies there are

503
00:22:47,600 --> 00:22:49,960
more efficient for a specific class of

504
00:22:49,960 --> 00:22:53,750
circus so if you have a class of circus

505
00:22:53,750 --> 00:22:55,640
that has a very good pebble Angus

506
00:22:55,640 --> 00:22:57,800
strategy then you can use our scheme and

507
00:22:57,800 --> 00:22:59,840
you get get much better security

508
00:22:59,840 --> 00:23:06,360
parameters for it that's it thank you

509
00:23:06,360 --> 00:23:08,419
you

