1
00:00:04,130 --> 00:00:09,059
thank you so let's start by recalling

2
00:00:09,059 --> 00:00:11,790
our structural or Python network so this

3
00:00:11,790 --> 00:00:17,940
is a iran python network and each wire

4
00:00:17,940 --> 00:00:21,330
or the wire length is n and we will use

5
00:00:21,330 --> 00:00:24,020
X I to represent all the intermediate

6
00:00:24,020 --> 00:00:27,750
values so each value SI is M bit wrong

7
00:00:27,750 --> 00:00:32,180
and they are satisfy this relationship

8
00:00:32,180 --> 00:00:38,280
here oh okay and we will call Fi around

9
00:00:38,280 --> 00:00:41,879
function now recall that are apart each

10
00:00:41,879 --> 00:00:43,980
round is a permutation or no matter

11
00:00:43,980 --> 00:00:47,609
whether other run function is or is not

12
00:00:47,609 --> 00:00:51,269
a permutation and the Python our network

13
00:00:51,269 --> 00:00:55,289
is a 2mp permutation with input X 0 X 1

14
00:00:55,289 --> 00:00:59,460
and output X a X 9 and in this talk we

15
00:00:59,460 --> 00:01:01,079
will assume the round functions are

16
00:01:01,079 --> 00:01:04,949
independent random functions and the

17
00:01:04,949 --> 00:01:07,770
question is to what extent is such a

18
00:01:07,770 --> 00:01:12,450
network like a random permutation so

19
00:01:12,450 --> 00:01:14,659
let's take a look at our classic

20
00:01:14,659 --> 00:01:17,310
indistinguishability experiment we have

21
00:01:17,310 --> 00:01:19,920
a distinguish oh and it's interacting

22
00:01:19,920 --> 00:01:22,649
with one of the two worlds it's our

23
00:01:22,649 --> 00:01:25,439
advantage is defined as the difference

24
00:01:25,439 --> 00:01:28,350
of the distinguisher out putting one in

25
00:01:28,350 --> 00:01:31,770
the truth two worlds in and we assume

26
00:01:31,770 --> 00:01:33,450
the distinguisher is information

27
00:01:33,450 --> 00:01:35,880
theoretic meaning that it has unbounded

28
00:01:35,880 --> 00:01:38,039
computational power it just has a

29
00:01:38,039 --> 00:01:40,490
limited number of queries to its Oracles

30
00:01:40,490 --> 00:01:43,799
in a real world interact with on the

31
00:01:43,799 --> 00:01:46,259
Python network and in the ideal world

32
00:01:46,259 --> 00:01:49,289
interact with a random permutation in

33
00:01:49,289 --> 00:01:53,250
both words it has two sides are queries

34
00:01:53,250 --> 00:01:57,619
to the Oracle so you can query backwards

35
00:01:57,619 --> 00:02:02,280
the seminal Ruby Rakoff theorem says our

36
00:02:02,280 --> 00:02:04,640
foreign feistel network is in

37
00:02:04,640 --> 00:02:06,570
distinguishable from a random

38
00:02:06,570 --> 00:02:09,020
permutation so the advantage is

39
00:02:09,020 --> 00:02:12,830
negligible for any distinct mission

40
00:02:12,830 --> 00:02:16,530
but in this talk we will use a stronger

41
00:02:16,530 --> 00:02:19,590
notion on in differentiability

42
00:02:19,590 --> 00:02:22,800
introduced by mara renner and Hornstein

43
00:02:22,800 --> 00:02:28,140
in 2004 so in this case when we give the

44
00:02:28,140 --> 00:02:30,720
distinguisher or access to the round

45
00:02:30,720 --> 00:02:32,910
functions so we can create these small

46
00:02:32,910 --> 00:02:34,590
round functions as well in the real

47
00:02:34,590 --> 00:02:37,320
world however in the ideal world there

48
00:02:37,320 --> 00:02:39,810
is no run function so we will have to

49
00:02:39,810 --> 00:02:43,320
construct a simulator that will behave

50
00:02:43,320 --> 00:02:45,360
or try to behave like the round

51
00:02:45,360 --> 00:02:47,130
functions so that the distinguisher

52
00:02:47,130 --> 00:02:48,570
cannot distinguish between the two

53
00:02:48,570 --> 00:02:51,690
worlds and will require the simulator to

54
00:02:51,690 --> 00:02:54,570
be efficient and it has Oracle access to

55
00:02:54,570 --> 00:02:58,260
pee so i'll go is to construct a

56
00:02:58,260 --> 00:03:02,280
simulator and in differentiability means

57
00:03:02,280 --> 00:03:04,950
for so many rounds and with such a

58
00:03:04,950 --> 00:03:07,050
simulator no distinguisher can

59
00:03:07,050 --> 00:03:11,330
distinguish using so many queries so

60
00:03:11,630 --> 00:03:15,209
also we require its advantage in the two

61
00:03:15,209 --> 00:03:18,870
worlds to be negligible so the first

62
00:03:18,870 --> 00:03:21,720
work on differentiability of python

63
00:03:21,720 --> 00:03:24,900
networks is done by corcoran chattering

64
00:03:24,900 --> 00:03:28,980
and surround by in 2008 so they proved

65
00:03:28,980 --> 00:03:30,780
that five round fight so is not in

66
00:03:30,780 --> 00:03:33,090
differentiable and they also proved six

67
00:03:33,090 --> 00:03:35,519
round is in depression in differentiable

68
00:03:35,519 --> 00:03:39,510
from a random permutation then are in

69
00:03:39,510 --> 00:03:43,380
2009 zone or gave a simple Terran

70
00:03:43,380 --> 00:03:49,709
simulator in his PhD thesis so however

71
00:03:49,709 --> 00:03:55,320
are into the 2011 hohenstein kunssler

72
00:03:55,320 --> 00:03:58,560
and tesaro and found some flaw in the

73
00:03:58,560 --> 00:04:03,269
previous cruise and they showed our 14

74
00:04:03,269 --> 00:04:05,370
round fight Owens is in differentiable

75
00:04:05,370 --> 00:04:08,160
therefore whether can run python is

76
00:04:08,160 --> 00:04:11,370
differentiable remains open at this

77
00:04:11,370 --> 00:04:15,840
point ah so concurrent independent of

78
00:04:15,840 --> 00:04:18,430
our work documents old or cash

79
00:04:18,430 --> 00:04:22,360
and to remember them are proved that

80
00:04:22,360 --> 00:04:25,440
Tehran fire is in differentiable and

81
00:04:25,440 --> 00:04:28,660
disappeared in this year's your crib so

82
00:04:28,660 --> 00:04:32,050
our result is a trompe I so is in

83
00:04:32,050 --> 00:04:37,300
differentiable so we will first give a

84
00:04:37,300 --> 00:04:39,759
natural and simple turnaround simulator

85
00:04:39,759 --> 00:04:43,000
and from this simulator we will obtain

86
00:04:43,000 --> 00:04:46,199
an eight-round simulator which is also

87
00:04:46,199 --> 00:04:50,229
natural and simple well not that simple

88
00:04:50,229 --> 00:04:57,250
action so no so this is our the

89
00:04:57,250 --> 00:05:00,669
comparison or adults so we achieved

90
00:05:00,669 --> 00:05:02,440
slightly better security than the

91
00:05:02,440 --> 00:05:04,599
previous work but it's still a very

92
00:05:04,599 --> 00:05:07,240
enormous advantage for the distinguish

93
00:05:07,240 --> 00:05:11,710
also not very good bounce and 0 and Q is

94
00:05:11,710 --> 00:05:13,360
the number of queries of the

95
00:05:13,360 --> 00:05:16,380
distinguisher and n is the wire length

96
00:05:16,380 --> 00:05:20,050
okay and now let's recall this in

97
00:05:20,050 --> 00:05:23,639
differentiability experiment so the

98
00:05:23,639 --> 00:05:25,570
question here is what can that

99
00:05:25,570 --> 00:05:27,669
distinguish will do to distinguish

100
00:05:27,669 --> 00:05:30,849
between these two words as we can see in

101
00:05:30,849 --> 00:05:33,039
the real world the wrong functions must

102
00:05:33,039 --> 00:05:36,159
be consistent with the permutation in a

103
00:05:36,159 --> 00:05:39,580
Python sense therefore are the

104
00:05:39,580 --> 00:05:42,460
distinguisher can well you can like

105
00:05:42,460 --> 00:05:45,699
choose x0 x1 and make query all the way

106
00:05:45,699 --> 00:05:49,300
to obtain X 8 + x 9 and we will call

107
00:05:49,300 --> 00:05:51,940
this a path so a part consists of x0

108
00:05:51,940 --> 00:05:56,409
through x9 myths are 10 values and you

109
00:05:56,409 --> 00:05:58,449
can check if the path is consistent with

110
00:05:58,449 --> 00:06:02,620
the permutation like this and it can

111
00:06:02,620 --> 00:06:04,840
also start from other positions like

112
00:06:04,840 --> 00:06:06,639
from the back and all the way to front

113
00:06:06,639 --> 00:06:09,400
or start from the middle and to both

114
00:06:09,400 --> 00:06:12,490
sides and it can also go around so you

115
00:06:12,490 --> 00:06:16,479
can query through f1 and make the

116
00:06:16,479 --> 00:06:19,990
permutation query going to x 8 x 9 and

117
00:06:19,990 --> 00:06:25,509
then go or 2x to obtain x 5 and see if

118
00:06:25,509 --> 00:06:28,409
the value of f 5 x 5 is on

119
00:06:28,409 --> 00:06:30,839
syston but there are a lot of ways to

120
00:06:30,839 --> 00:06:35,189
compete the past and moreover you can do

121
00:06:35,189 --> 00:06:38,069
something more tricky like you can use

122
00:06:38,069 --> 00:06:39,959
the same query in different paths and

123
00:06:39,959 --> 00:06:42,869
you can also interleave or queries in

124
00:06:42,869 --> 00:06:45,929
different paths to confuse the simulator

125
00:06:45,929 --> 00:06:51,389
and so we can the simulator do the basic

126
00:06:51,389 --> 00:06:53,519
strategy is our lady sampling and

127
00:06:53,519 --> 00:06:56,939
pre-emptive a path completion so how to

128
00:06:56,939 --> 00:07:01,949
complete a pot suppose it are the

129
00:07:01,949 --> 00:07:04,669
simulator decides to complete this path

130
00:07:04,669 --> 00:07:07,979
so the green queries are already defined

131
00:07:07,979 --> 00:07:12,089
and the white ones are not so the

132
00:07:12,089 --> 00:07:14,669
simulator can lady simple some of the

133
00:07:14,669 --> 00:07:17,729
queries polity simple we mean are he

134
00:07:17,729 --> 00:07:21,689
chooses a random value for the query so

135
00:07:21,689 --> 00:07:24,209
it's randomly selected from all and bit

136
00:07:24,209 --> 00:07:27,629
strings and however at this point are

137
00:07:27,629 --> 00:07:29,939
the remaining two queries cannot be

138
00:07:29,939 --> 00:07:32,849
sampled anymore because the values are

139
00:07:32,849 --> 00:07:36,029
actually fixed by the other queries in

140
00:07:36,029 --> 00:07:39,569
the path and generally in each path two

141
00:07:39,569 --> 00:07:41,699
koreas have to be adapted regardless of

142
00:07:41,699 --> 00:07:49,009
on how the other queries are defined and

143
00:07:49,009 --> 00:07:52,050
therefore are so the simulator has to

144
00:07:52,050 --> 00:07:54,659
complete a path early enough so that it

145
00:07:54,659 --> 00:07:58,349
has still has room to adapt because you

146
00:07:58,349 --> 00:08:00,329
cannot adapt a query that has already

147
00:08:00,329 --> 00:08:03,869
been defined on the other hand if you

148
00:08:03,869 --> 00:08:06,300
choose to complete them part complete

149
00:08:06,300 --> 00:08:08,639
too many paths since when you are

150
00:08:08,639 --> 00:08:10,499
completing a part you will make more

151
00:08:10,499 --> 00:08:12,989
queries and this may create an

152
00:08:12,989 --> 00:08:15,419
out-of-control chain reaction and the

153
00:08:15,419 --> 00:08:21,239
simulator main never terminate and so

154
00:08:21,239 --> 00:08:24,119
the box in the previous simulator site

155
00:08:24,119 --> 00:08:28,289
in the first our first condition so he

156
00:08:28,289 --> 00:08:32,009
has no room to adapt we will see it

157
00:08:32,009 --> 00:08:34,649
later so by adapting a path we mean

158
00:08:34,649 --> 00:08:37,169
assigning these two queries the values

159
00:08:37,169 --> 00:08:40,049
like this so so that it can all be

160
00:08:40,049 --> 00:08:41,520
consistent with the

161
00:08:41,520 --> 00:08:48,180
permutation okay so now we start by

162
00:08:48,180 --> 00:08:50,670
introducing sounds parents simulator

163
00:08:50,670 --> 00:08:53,450
which is the basis of all the subsequent

164
00:08:53,450 --> 00:08:58,140
simulators so his simulator preemptively

165
00:08:58,140 --> 00:09:00,480
completes a path when one of the to

166
00:09:00,480 --> 00:09:04,410
detect zones become filled so it has a

167
00:09:04,410 --> 00:09:06,480
middle detect on which consists of only

168
00:09:06,480 --> 00:09:10,080
two rounds meaning that for every pair

169
00:09:10,080 --> 00:09:14,490
of X f5 and f6 every pair of queries to

170
00:09:14,490 --> 00:09:16,410
these two rounds a path should be

171
00:09:16,410 --> 00:09:19,770
completed and it also has an outer

172
00:09:19,770 --> 00:09:22,170
detect own a consisting of four rounds

173
00:09:22,170 --> 00:09:25,350
so it's for every quadruple of queries

174
00:09:25,350 --> 00:09:28,800
to these forums that are compatible with

175
00:09:28,800 --> 00:09:31,650
the permutation so not for all quadruple

176
00:09:31,650 --> 00:09:34,950
but only for a small set of them a path

177
00:09:34,950 --> 00:09:40,470
should be completed and the position to

178
00:09:40,470 --> 00:09:42,450
adapt recall that we have to adapt to

179
00:09:42,450 --> 00:09:44,790
queries in each path the position to

180
00:09:44,790 --> 00:09:47,580
adapt our depends on the last query that

181
00:09:47,580 --> 00:09:51,240
that feels a detects on and we say the

182
00:09:51,240 --> 00:09:55,440
query triggers the detector so our if a

183
00:09:55,440 --> 00:09:58,260
part is triggered at X 2 or X 5 it will

184
00:09:58,260 --> 00:10:01,590
be adapted here and if it's triggered at

185
00:10:01,590 --> 00:10:08,040
f 6 or f 9 is adapted here moreover is

186
00:10:08,040 --> 00:10:11,010
multiple paths are triggered or they

187
00:10:11,010 --> 00:10:13,500
will be completed in a 50 order so the

188
00:10:13,500 --> 00:10:17,180
pathetic first will be completed first

189
00:10:17,180 --> 00:10:20,820
so let's demonstrate using an example so

190
00:10:20,820 --> 00:10:23,670
say Aquarius issued here that triggers

191
00:10:23,670 --> 00:10:26,510
on the outer detection of this path and

192
00:10:26,510 --> 00:10:29,640
first up query will be lazy simple it's

193
00:10:29,640 --> 00:10:33,000
given a random value and we will adapt

194
00:10:33,000 --> 00:10:35,940
here so we will need to send whole the

195
00:10:35,940 --> 00:10:38,940
other undefined queries in this path so

196
00:10:38,940 --> 00:10:40,830
these for Koreans will be ladies and

197
00:10:40,830 --> 00:10:44,910
hold and moreover are the queries to f5

198
00:10:44,910 --> 00:10:47,010
and f6 are in the middle detect on so

199
00:10:47,010 --> 00:10:49,320
these two Koreas will trigger more paths

200
00:10:49,320 --> 00:10:51,870
and this triggered paths are in killed

201
00:10:51,870 --> 00:10:54,660
and will be filled with

202
00:10:54,660 --> 00:10:58,350
that later and so after this path is

203
00:10:58,350 --> 00:11:03,720
completed but simulator dq's the next

204
00:11:03,720 --> 00:11:06,360
part in a queue and starts completing

205
00:11:06,360 --> 00:11:11,879
the path so okay so this is a song

206
00:11:11,879 --> 00:11:14,069
stayin around simulator and its problem

207
00:11:14,069 --> 00:11:16,379
is there is a strategy for the simulator

208
00:11:16,379 --> 00:11:19,560
that causes the up sorry there is a

209
00:11:19,560 --> 00:11:21,629
strategy for the distinguisher that

210
00:11:21,629 --> 00:11:24,899
causes the simulator to always are adapt

211
00:11:24,899 --> 00:11:29,069
some already defined query so this is

212
00:11:29,069 --> 00:11:31,949
sounds attack against his own simulator

213
00:11:31,949 --> 00:11:35,819
our witches are quite complicated but ah

214
00:11:35,819 --> 00:11:40,740
the idea is to 0 so the randomness that

215
00:11:40,740 --> 00:11:44,879
depends on you determines this adaptive

216
00:11:44,879 --> 00:11:48,209
query is sampled a long time ago before

217
00:11:48,209 --> 00:11:51,149
the query is actually simple ah the

218
00:11:51,149 --> 00:11:55,889
christopher adapted therefore or some

219
00:11:55,889 --> 00:11:58,379
other path has already used the same

220
00:11:58,379 --> 00:12:01,050
randomness and defined this query before

221
00:12:01,050 --> 00:12:05,339
so that's the problem basic thing and so

222
00:12:05,339 --> 00:12:09,089
how to fix the simulator hohenstein

223
00:12:09,089 --> 00:12:13,319
Adele did this by adding battle rounds

224
00:12:13,319 --> 00:12:16,800
around each adapt zone and moreover they

225
00:12:16,800 --> 00:12:18,449
proved that on the battle rounds are

226
00:12:18,449 --> 00:12:20,939
adapt are sampled right before the

227
00:12:20,939 --> 00:12:25,290
adaptation or curse so as you can see if

228
00:12:25,290 --> 00:12:29,220
these two values are newly simple on the

229
00:12:29,220 --> 00:12:32,209
values of x4 and x5 will be

230
00:12:32,209 --> 00:12:35,430
independently random and therefore they

231
00:12:35,430 --> 00:12:38,459
are very unlikely to collide with some

232
00:12:38,459 --> 00:12:41,819
existing query so we will use the same

233
00:12:41,819 --> 00:12:45,120
idea here but instead of adding new

234
00:12:45,120 --> 00:12:48,300
rounds we will just use existing rounds

235
00:12:48,300 --> 00:12:53,309
as the battle and if the left of that

236
00:12:53,309 --> 00:12:55,139
zone is used we will call these two

237
00:12:55,139 --> 00:12:57,449
rounds the end points and if the right

238
00:12:57,449 --> 00:12:59,819
of that don't use we call these drones

239
00:12:59,819 --> 00:13:02,160
the end points so they are the rounds

240
00:13:02,160 --> 00:13:05,819
around that long and I'll go is to keep

241
00:13:05,819 --> 00:13:06,450
end point

242
00:13:06,450 --> 00:13:09,030
and simple and Joe the party is ready to

243
00:13:09,030 --> 00:13:12,420
be adaptive so it's the same as a whole

244
00:13:12,420 --> 00:13:17,670
instance ideal and so in other words we

245
00:13:17,670 --> 00:13:19,770
will require these for queries to remain

246
00:13:19,770 --> 00:13:22,490
on same hole and here the path is

247
00:13:22,490 --> 00:13:26,310
completed okay so how to achieve this

248
00:13:26,310 --> 00:13:28,650
goal we will use the same example as

249
00:13:28,650 --> 00:13:34,500
before so when this query is issued we

250
00:13:34,500 --> 00:13:37,080
note that on the triggering query of a

251
00:13:37,080 --> 00:13:38,880
path is always one of the endpoint

252
00:13:38,880 --> 00:13:43,110
queries so since this curry is an

253
00:13:43,110 --> 00:13:44,670
endpoint query and the other endpoint

254
00:13:44,670 --> 00:13:47,160
queries are known we cannot complete

255
00:13:47,160 --> 00:13:50,160
this part yet so instead of ladies

256
00:13:50,160 --> 00:13:53,370
Embling one or the triggering query we

257
00:13:53,370 --> 00:13:56,490
can only mark it as pending and not

258
00:13:56,490 --> 00:13:59,820
sample it and then we we can issue these

259
00:13:59,820 --> 00:14:02,460
three queries and these queries will be

260
00:14:02,460 --> 00:14:05,310
are answered using the simulators own

261
00:14:05,310 --> 00:14:08,370
interface just like on a normal query

262
00:14:08,370 --> 00:14:14,010
from the distinguisher and so again the

263
00:14:14,010 --> 00:14:16,350
query to f6 is in the middle did have

264
00:14:16,350 --> 00:14:18,650
grown so it may trigger other pal and

265
00:14:18,650 --> 00:14:22,620
since this query is an endpoint query of

266
00:14:22,620 --> 00:14:25,320
this newly triggered path and our goal

267
00:14:25,320 --> 00:14:28,650
should be are achieved also for this new

268
00:14:28,650 --> 00:14:32,040
path so the query to f6 cannot be

269
00:14:32,040 --> 00:14:34,830
sampled until the new path is completed

270
00:14:34,830 --> 00:14:37,590
and but the old path cannot continue

271
00:14:37,590 --> 00:14:41,540
until our query to f6 is defined

272
00:14:41,540 --> 00:14:44,490
therefore the new path should be

273
00:14:44,490 --> 00:14:47,040
completed before the old one and this

274
00:14:47,040 --> 00:14:50,490
resulting are you know LIFO order so the

275
00:14:50,490 --> 00:14:52,440
party type it later is accurate or

276
00:14:52,440 --> 00:14:57,450
completed first so this is the maybe the

277
00:14:57,450 --> 00:15:00,060
only difference between the true

278
00:15:00,060 --> 00:15:03,750
signatures so after this query is

279
00:15:03,750 --> 00:15:06,570
defined we have not the other endpoint

280
00:15:06,570 --> 00:15:09,060
query and this query is marked pending

281
00:15:09,060 --> 00:15:11,430
as well and we say the path is ready

282
00:15:11,430 --> 00:15:13,740
when both endpoint queries are pending

283
00:15:13,740 --> 00:15:15,840
so this part is ready to be complete

284
00:15:15,840 --> 00:15:18,780
it but why don't we completed our I mean

285
00:15:18,780 --> 00:15:25,250
right away and so you may have seen this

286
00:15:25,490 --> 00:15:28,860
the query can be the endpoint query of

287
00:15:28,860 --> 00:15:31,860
multiple paths and since our goal should

288
00:15:31,860 --> 00:15:35,430
be kept for all these paths are these

289
00:15:35,430 --> 00:15:39,450
two pub should be if adapted at the same

290
00:15:39,450 --> 00:15:44,070
time after the query fx5 is defined so

291
00:15:44,070 --> 00:15:47,250
this is the batch adaptation ideal from

292
00:15:47,250 --> 00:15:50,220
a walk from the audience they all stand

293
00:15:50,220 --> 00:15:54,060
and Steinberger so are the paths that

294
00:15:54,060 --> 00:15:57,500
share an endpoint query should be

295
00:15:57,500 --> 00:16:01,200
adapted at the same time that's so

296
00:16:01,200 --> 00:16:05,790
that's the idea and this also the these

297
00:16:05,790 --> 00:16:07,830
paths will form a very nice tree

298
00:16:07,830 --> 00:16:12,990
structure and this will make our proof

299
00:16:12,990 --> 00:16:20,190
or much easier and so this is a summary

300
00:16:20,190 --> 00:16:22,170
of our turnaround simulator it has the

301
00:16:22,170 --> 00:16:23,940
same simple structure at sounds

302
00:16:23,940 --> 00:16:27,510
simulator but we change the completion

303
00:16:27,510 --> 00:16:30,840
order to life all and we delay the

304
00:16:30,840 --> 00:16:33,810
ladies and bring to ensure the freshness

305
00:16:33,810 --> 00:16:36,120
of the randomness and note that this is

306
00:16:36,120 --> 00:16:38,400
only a conceptual change because one way

307
00:16:38,400 --> 00:16:40,560
or another the endpoint queries are

308
00:16:40,560 --> 00:16:44,040
sampled randomly but as we have seen in

309
00:16:44,040 --> 00:16:46,080
the example this our conceptual change

310
00:16:46,080 --> 00:16:49,620
actually lead us to the life of order of

311
00:16:49,620 --> 00:16:54,690
hot completion okay and since we have

312
00:16:54,690 --> 00:16:57,090
the same structure as hans simulator we

313
00:16:57,090 --> 00:16:59,280
can use the exact same termination

314
00:16:59,280 --> 00:17:02,790
argument so the other interns own cannot

315
00:17:02,790 --> 00:17:05,369
be what is very unlikely to be triggered

316
00:17:05,369 --> 00:17:08,760
unless the distinguisher has queried the

317
00:17:08,760 --> 00:17:12,990
permutation query and so the number the

318
00:17:12,990 --> 00:17:15,030
number of paths triggered by the auto

319
00:17:15,030 --> 00:17:17,280
detect phone is at most Q in most

320
00:17:17,280 --> 00:17:21,300
executions and the number of careers in

321
00:17:21,300 --> 00:17:24,480
these two rounds are not increased by

322
00:17:24,480 --> 00:17:26,490
paths are triggered by the video the

323
00:17:26,490 --> 00:17:27,059
dead zone

324
00:17:27,059 --> 00:17:29,279
so they are only increased by either a

325
00:17:29,279 --> 00:17:31,860
distinguish your query whose number is

326
00:17:31,860 --> 00:17:35,730
at most Q or increased by a path that is

327
00:17:35,730 --> 00:17:37,769
triggered by the outer details own and

328
00:17:37,769 --> 00:17:40,139
with which number is also upper bounded

329
00:17:40,139 --> 00:17:42,059
by Q and therefore they are at most

330
00:17:42,059 --> 00:17:44,669
2pewdiepie inquiries in traditions five

331
00:17:44,669 --> 00:17:47,730
and six so at most for Q squared path

332
00:17:47,730 --> 00:17:50,100
can be triggered by the middle detect

333
00:17:50,100 --> 00:17:52,740
film so this is the termination argument

334
00:17:52,740 --> 00:17:56,519
of hours later so how to get down to

335
00:17:56,519 --> 00:18:00,570
eight rounds to do this we have to

336
00:18:00,570 --> 00:18:06,240
rearrange the detect and adapt owns so

337
00:18:06,240 --> 00:18:08,759
we can see the auto detect loan has four

338
00:18:08,759 --> 00:18:11,159
ounce which is obviously very wasteful

339
00:18:11,159 --> 00:18:14,940
so we split it into two other detect

340
00:18:14,940 --> 00:18:17,330
owns each consisting of three rounds and

341
00:18:17,330 --> 00:18:20,879
this makes triggering a path easier but

342
00:18:20,879 --> 00:18:25,019
this does not ruin our termination

343
00:18:25,019 --> 00:18:27,419
argument since it is still hard to

344
00:18:27,419 --> 00:18:29,009
trigger the outer detect zone without

345
00:18:29,009 --> 00:18:32,940
knowing the permutation query and we

346
00:18:32,940 --> 00:18:36,720
also have to move our adapt owns so one

347
00:18:36,720 --> 00:18:39,869
of them is moved to our the middle which

348
00:18:39,869 --> 00:18:42,659
overlaps the video detects own and this

349
00:18:42,659 --> 00:18:45,690
will create a problem that are the

350
00:18:45,690 --> 00:18:47,820
adaptive queries are actually very

351
00:18:47,820 --> 00:18:51,960
likely to trigger a new path or if the

352
00:18:51,960 --> 00:18:54,629
middle detector is still our length to

353
00:18:54,629 --> 00:19:00,450
and well we don't want this I mean in

354
00:19:00,450 --> 00:19:02,820
the general simulator the adapter is

355
00:19:02,820 --> 00:19:05,159
joined with details on so adapted

356
00:19:05,159 --> 00:19:07,889
queries are not triggering any path so

357
00:19:07,889 --> 00:19:10,499
to keep this property we will extend the

358
00:19:10,499 --> 00:19:12,869
middle detect zone in 223 round middle

359
00:19:12,869 --> 00:19:18,330
deck zones and this R will prevent that

360
00:19:18,330 --> 00:19:22,110
from happening so this is what the thing

361
00:19:22,110 --> 00:19:25,710
that I looks like the red ones are the

362
00:19:25,710 --> 00:19:27,509
adapt owns and the green ones are these

363
00:19:27,509 --> 00:19:29,999
detect owns so as we can see in this

364
00:19:29,999 --> 00:19:33,869
graph it's very symmetric and each

365
00:19:33,869 --> 00:19:36,299
position triggers exactly one type of

366
00:19:36,299 --> 00:19:37,639
path

367
00:19:37,639 --> 00:19:41,209
and moreover or we can see here the

368
00:19:41,209 --> 00:19:44,059
middle of a dead zone is actually

369
00:19:44,059 --> 00:19:47,329
surrounded by two queries and we claim

370
00:19:47,329 --> 00:19:49,249
that these two queries will be undefined

371
00:19:49,249 --> 00:19:53,119
when these two queries are adapted so

372
00:19:53,119 --> 00:19:57,499
this will prevent on well this will

373
00:19:57,499 --> 00:20:00,499
prevent odd but to adaptive queries to

374
00:20:00,499 --> 00:20:03,769
form to fill the middle detection of

375
00:20:03,769 --> 00:20:10,429
somehow okay so a samurai's of our iran

376
00:20:10,429 --> 00:20:13,249
singh later it uses the same life order

377
00:20:13,249 --> 00:20:16,669
etc simulator and has four detect loans

378
00:20:16,669 --> 00:20:19,549
and it uses the same termination

379
00:20:19,549 --> 00:20:26,690
argument so what to do next so we only

380
00:20:26,690 --> 00:20:28,969
have an attack against five round pistol

381
00:20:28,969 --> 00:20:31,729
and we now we have a proof for a prompt

382
00:20:31,729 --> 00:20:36,169
ISIL so to close the gap we are there

383
00:20:36,169 --> 00:20:41,299
are still two rounds and can we do are

384
00:20:41,299 --> 00:20:44,899
morons to improve concrete security as

385
00:20:44,899 --> 00:20:48,759
we mentioned our proof I choose very bad

386
00:20:48,759 --> 00:20:52,369
security bound and this is because we

387
00:20:52,369 --> 00:20:54,859
are aiming at reducing the number of

388
00:20:54,859 --> 00:20:58,729
rounds so can we prove a better bound if

389
00:20:58,729 --> 00:21:01,219
we use more rounds or even better prove

390
00:21:01,219 --> 00:21:04,429
the birthday bound for saying a 30 round

391
00:21:04,429 --> 00:21:09,549
file and more of us are we can consider

392
00:21:09,549 --> 00:21:12,950
alternative constructions like on stop

393
00:21:12,950 --> 00:21:16,489
shop etc oh can we prove in

394
00:21:16,489 --> 00:21:18,499
differentiability bounds on better

395
00:21:18,499 --> 00:21:23,359
bounds for these constructions ok that's

396
00:21:23,359 --> 00:21:27,579
it thank you thank you very much

397
00:21:27,740 --> 00:21:29,800
you

