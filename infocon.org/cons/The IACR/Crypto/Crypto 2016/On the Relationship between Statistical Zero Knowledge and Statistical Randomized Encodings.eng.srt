1
00:00:03,790 --> 00:00:05,680
when this powder cuff and I'm going to

2
00:00:05,680 --> 00:00:07,330
present enjoy it more convenient bomb

3
00:00:07,330 --> 00:00:09,030
about statistical earn demise encodings

4
00:00:09,030 --> 00:00:12,929
versus statistical zero knowledge pose

5
00:00:12,929 --> 00:00:14,980
as you can see in this work we're going

6
00:00:14,980 --> 00:00:17,140
to compare it to object one is a surrey

7
00:00:17,140 --> 00:00:18,640
in the second one that says EK and will

8
00:00:18,640 --> 00:00:20,140
understand the relationship between

9
00:00:20,140 --> 00:00:23,649
these two complexity classes ok so let's

10
00:00:23,649 --> 00:00:25,599
start just to introduce these notions

11
00:00:25,599 --> 00:00:27,730
and their settings to a start of a

12
00:00:27,730 --> 00:00:30,849
notion of essary if the sre setting we

13
00:00:30,849 --> 00:00:33,640
have a computationally limited client in

14
00:00:33,640 --> 00:00:35,890
this place it will be polynomially time

15
00:00:35,890 --> 00:00:37,900
bounded he can do any polynomial time

16
00:00:37,900 --> 00:00:40,330
the computation he holds some input X

17
00:00:40,330 --> 00:00:42,190
and he wants to compute some function f

18
00:00:42,190 --> 00:00:44,590
so since he is computationally meter

19
00:00:44,590 --> 00:00:46,750
decode computer functions directly by

20
00:00:46,750 --> 00:00:48,550
himself so he wants to outsource his

21
00:00:48,550 --> 00:00:50,260
computation to a computationally

22
00:00:50,260 --> 00:00:53,320
unbounded server so naively what he can

23
00:00:53,320 --> 00:00:55,030
do he can just takes his input sent to

24
00:00:55,030 --> 00:00:56,829
be sure and say okay look computer

25
00:00:56,829 --> 00:00:58,900
function f but since when our

26
00:00:58,900 --> 00:01:01,300
cryptographic world would like to get

27
00:01:01,300 --> 00:01:03,820
some privacy so privacy this setting

28
00:01:03,820 --> 00:01:05,229
means that we would like to outsource

29
00:01:05,229 --> 00:01:07,479
our computation to the server but let me

30
00:01:07,479 --> 00:01:09,490
serve only computer output of a function

31
00:01:09,490 --> 00:01:10,870
without learning thing about we input

32
00:01:10,870 --> 00:01:12,610
except the output of the function on

33
00:01:12,610 --> 00:01:16,450
this particular input okay so so if i

34
00:01:16,450 --> 00:01:18,220
just described you the setting where I

35
00:01:18,220 --> 00:01:19,540
say that if we have a son fix it

36
00:01:19,540 --> 00:01:21,250
function f and for this function you

37
00:01:21,250 --> 00:01:22,870
have a statistical and imagine coding

38
00:01:22,870 --> 00:01:25,060
system okay we've every function you can

39
00:01:25,060 --> 00:01:27,250
associate a corresponding language so I

40
00:01:27,250 --> 00:01:28,960
assume for all this talk with functions

41
00:01:28,960 --> 00:01:31,360
a binary so how from a function you can

42
00:01:31,360 --> 00:01:33,400
get a language so every input which is

43
00:01:33,400 --> 00:01:35,110
met by a function to zero is not in the

44
00:01:35,110 --> 00:01:36,940
language every input which is made by a

45
00:01:36,940 --> 00:01:39,790
function to one's in the language ok so

46
00:01:39,790 --> 00:01:41,590
now I can consider the set of all

47
00:01:41,590 --> 00:01:43,390
languages will have this statistical

48
00:01:43,390 --> 00:01:45,190
randomized encoding system and this

49
00:01:45,190 --> 00:01:49,030
complexity class I call a sorry ok so

50
00:01:49,030 --> 00:01:51,100
the second complexity classes SDK and

51
00:01:51,100 --> 00:01:52,630
probably people are more familiar with I

52
00:01:52,630 --> 00:01:54,640
was to remind you so we have again the

53
00:01:54,640 --> 00:01:56,740
setting of computational limited client

54
00:01:56,740 --> 00:01:58,720
and unbounded server and in this setting

55
00:01:58,720 --> 00:02:00,850
both of them hold some input X and they

56
00:02:00,850 --> 00:02:02,710
have some language in mind so in the

57
00:02:02,710 --> 00:02:05,290
setting the goal of server is to

58
00:02:05,290 --> 00:02:06,700
convince the client with his input is

59
00:02:06,700 --> 00:02:09,970
indeed in the language and without the

60
00:02:09,970 --> 00:02:11,980
client only can you think about his

61
00:02:11,980 --> 00:02:13,420
input except with this

62
00:02:13,420 --> 00:02:14,980
but is if input is in the language or

63
00:02:14,980 --> 00:02:19,690
not and again you can buy you can

64
00:02:19,690 --> 00:02:21,010
consider all the languages that have

65
00:02:21,010 --> 00:02:22,540
such a statistical zero-knowledge proof

66
00:02:22,540 --> 00:02:25,630
system and you denoted with sdk okay so

67
00:02:25,630 --> 00:02:27,520
the goal of this talk will be cut to

68
00:02:27,520 --> 00:02:29,500
compare this to complexity classes sra

69
00:02:29,500 --> 00:02:32,680
and ack so just briefly as you can see

70
00:02:32,680 --> 00:02:34,330
two settings are quite similar even like

71
00:02:34,330 --> 00:02:36,310
syntactically what is happening in both

72
00:02:36,310 --> 00:02:38,319
settings so the main difference is

73
00:02:38,319 --> 00:02:40,510
actually like that on the left hand side

74
00:02:40,510 --> 00:02:43,300
inverse are resetting you basically

75
00:02:43,300 --> 00:02:44,769
don't have any interaction there is like

76
00:02:44,769 --> 00:02:46,209
a single short message which is sent

77
00:02:46,209 --> 00:02:48,700
from very client to the server well in

78
00:02:48,700 --> 00:02:50,470
the SDK setting very some interaction

79
00:02:50,470 --> 00:02:52,030
this is the first main difference in the

80
00:02:52,030 --> 00:02:55,060
second is that if a necessary setting if

81
00:02:55,060 --> 00:02:57,250
it necessary setting you want to

82
00:02:57,250 --> 00:02:59,890
security against the malicious server in

83
00:02:59,890 --> 00:03:01,239
case she wants to learn too much about

84
00:03:01,239 --> 00:03:03,910
the input then as the case I think

85
00:03:03,910 --> 00:03:05,380
actually both the shoulder can be

86
00:03:05,380 --> 00:03:07,000
malicious if she wants to convince the

87
00:03:07,000 --> 00:03:09,069
client in the wrong statement and the

88
00:03:09,069 --> 00:03:10,630
client can do malicious if he wants to

89
00:03:10,630 --> 00:03:12,160
learn too much about his input

90
00:03:12,160 --> 00:03:13,510
acceptable put this in the language

91
00:03:13,510 --> 00:03:15,670
annoyed okay so the natural question to

92
00:03:15,670 --> 00:03:17,290
ask what is the relationship between

93
00:03:17,290 --> 00:03:20,019
these two languages to complexity

94
00:03:20,019 --> 00:03:22,989
classes sre and sdk and what are the

95
00:03:22,989 --> 00:03:25,560
results so this is what we knew before

96
00:03:25,560 --> 00:03:27,760
actually almost immediately you can see

97
00:03:27,760 --> 00:03:30,040
that sr is a subset of sdk and this has

98
00:03:30,040 --> 00:03:32,230
been observed by benny already in 2004

99
00:03:32,230 --> 00:03:35,049
and recently there has been worked with

100
00:03:35,049 --> 00:03:37,090
actually defined the glasses re properly

101
00:03:37,090 --> 00:03:40,030
by AG RivalsHigh karate and passion

102
00:03:40,030 --> 00:03:41,769
chernov's kim 2050 then very short

103
00:03:41,769 --> 00:03:44,470
oracle separation so now what we know

104
00:03:44,470 --> 00:03:47,109
that varies sr is a subset of SEK but we

105
00:03:47,109 --> 00:03:48,280
don't know if it's actually a proper

106
00:03:48,280 --> 00:03:50,500
subset or not so we have some indication

107
00:03:50,500 --> 00:03:52,120
that it might be a proper subset due to

108
00:03:52,120 --> 00:03:53,739
this Oracle separation but we don't know

109
00:03:53,739 --> 00:03:56,769
exactly so unfortunately we cannot and

110
00:03:56,769 --> 00:03:59,079
basically when comparing necessary to

111
00:03:59,079 --> 00:04:00,519
Ezekiel natural question is that is it a

112
00:04:00,519 --> 00:04:03,040
proper subset or not and unfortunately

113
00:04:03,040 --> 00:04:04,660
we couldn't solve this question directly

114
00:04:04,660 --> 00:04:08,260
but we got two new questions okay so

115
00:04:08,260 --> 00:04:09,940
what we know so what we did we actually

116
00:04:09,940 --> 00:04:12,370
we sandwich to new complexity classes

117
00:04:12,370 --> 00:04:15,010
between sra and sdk and now basically we

118
00:04:15,010 --> 00:04:17,500
reduced the question of s re vs sdk to

119
00:04:17,500 --> 00:04:20,108
two new questions about two different

120
00:04:20,108 --> 00:04:23,710
complexity classes ok so we introduced a

121
00:04:23,710 --> 00:04:24,850
new notion which is

122
00:04:24,850 --> 00:04:27,520
we call one re which is a relaxation of

123
00:04:27,520 --> 00:04:28,990
statistical randomized encoding where

124
00:04:28,990 --> 00:04:30,790
you require privacy only for a subset of

125
00:04:30,790 --> 00:04:33,820
input and we showed that this class is

126
00:04:33,820 --> 00:04:37,570
essentially equal to the languages that

127
00:04:37,570 --> 00:04:39,130
have non-interactive statistical zero

128
00:04:39,130 --> 00:04:41,260
knowledge proof system so basically the

129
00:04:41,260 --> 00:04:44,590
interaction substituted for a dealer who

130
00:04:44,590 --> 00:04:45,970
provides common randomness in this

131
00:04:45,970 --> 00:04:49,120
setting okay so now the big advantage of

132
00:04:49,120 --> 00:04:51,940
this result is that given what we showed

133
00:04:51,940 --> 00:04:54,760
with one re equals to disk if you want

134
00:04:54,760 --> 00:05:00,330
to compare sre and sdk essentially you

135
00:05:00,330 --> 00:05:02,620
your task is reduced to two new

136
00:05:02,620 --> 00:05:05,020
questions you need to compare sre with

137
00:05:05,020 --> 00:05:08,620
valerie and nice creeper dzieki so if

138
00:05:08,620 --> 00:05:10,150
you want understand if sr is a proper

139
00:05:10,150 --> 00:05:11,650
subset of sdk you need to understand in

140
00:05:11,650 --> 00:05:13,240
this relation is a proper subset and

141
00:05:13,240 --> 00:05:15,550
this relation is appropriate upset so

142
00:05:15,550 --> 00:05:17,200
the later for example this equation has

143
00:05:17,200 --> 00:05:18,760
been studied extensively and it's

144
00:05:18,760 --> 00:05:23,050
believed to be quite hard so okay we of

145
00:05:23,050 --> 00:05:25,330
course hope that we can resolve it but I

146
00:05:25,330 --> 00:05:27,850
I mean we have some hope but one can

147
00:05:27,850 --> 00:05:29,290
show it's a proper subset or not and

148
00:05:29,290 --> 00:05:31,090
this is a relatively new question and it

149
00:05:31,090 --> 00:05:32,500
would be interesting to understand if

150
00:05:32,500 --> 00:05:35,740
basically losing privacy for a subset of

151
00:05:35,740 --> 00:05:39,760
inputs if it changes the power of a

152
00:05:39,760 --> 00:05:43,090
complexity class okay so this is kind of

153
00:05:43,090 --> 00:05:45,130
our main result and also we introduce

154
00:05:45,130 --> 00:05:47,500
try to work on some complexity

155
00:05:47,500 --> 00:05:49,930
implications of if the classes are East

156
00:05:49,930 --> 00:05:52,960
River not an easy case review not so

157
00:05:52,960 --> 00:05:55,390
what when you before is that if SDK is

158
00:05:55,390 --> 00:05:57,870
not trivial not equals to bpt then

159
00:05:57,870 --> 00:06:00,070
auxiliary input one-way function exists

160
00:06:00,070 --> 00:06:02,320
and mrs. Rizzoli ostrovsky in nineteen

161
00:06:02,320 --> 00:06:06,040
in 1991 okay and also in the recent

162
00:06:06,040 --> 00:06:08,560
paper has been shown that based on LW

163
00:06:08,560 --> 00:06:10,060
assumption or ddh assumption you can

164
00:06:10,060 --> 00:06:13,210
separate a sorry from PDP so it seems

165
00:06:13,210 --> 00:06:16,120
that both languages sdk and the sre

166
00:06:16,120 --> 00:06:18,760
should be different from dtp so what we

167
00:06:18,760 --> 00:06:21,310
did in this work we took the results

168
00:06:21,310 --> 00:06:22,510
promised rocks can make an analogous

169
00:06:22,510 --> 00:06:25,240
result from the glass surface area so we

170
00:06:25,240 --> 00:06:27,130
showed that if s re not a close to dt

171
00:06:27,130 --> 00:06:28,780
then infinitely often one-way function

172
00:06:28,780 --> 00:06:31,510
exists so this object infinite often

173
00:06:31,510 --> 00:06:33,130
Valley functions is almost monthly

174
00:06:33,130 --> 00:06:35,560
functions and they kind of seem to the

175
00:06:35,560 --> 00:06:36,639
stronger than

176
00:06:36,639 --> 00:06:38,650
the other input one-way functions so it

177
00:06:38,650 --> 00:06:40,770
still doesn't answer us completely to

178
00:06:40,770 --> 00:06:45,219
talk to the question if s re and sdk are

179
00:06:45,219 --> 00:06:47,199
the same a lot but it's kind of shows

180
00:06:47,199 --> 00:06:48,819
but problems are is different from as

181
00:06:48,819 --> 00:06:53,370
icky ok finally and we compare tower we

182
00:06:53,370 --> 00:06:56,319
continue the work of one at Verdun so

183
00:06:56,319 --> 00:06:57,879
they showed that if there exists a hard

184
00:06:57,879 --> 00:07:00,669
on average language in SZ k then their

185
00:07:00,669 --> 00:07:02,469
existence constant round statistically

186
00:07:02,469 --> 00:07:05,740
hiding commitments and we cut it and i

187
00:07:05,740 --> 00:07:09,509
owe another result for HD key or for sre

188
00:07:09,509 --> 00:07:12,340
so basically if you substitute here as

189
00:07:12,340 --> 00:07:14,439
the cave over sorry you get collision

190
00:07:14,439 --> 00:07:16,449
resistant hash functions and it's not

191
00:07:16,449 --> 00:07:18,580
actually a sorry it's a variant of a

192
00:07:18,580 --> 00:07:20,349
sorry but it's essentially think of it

193
00:07:20,349 --> 00:07:23,620
as a sss re so we call it perfect but ok

194
00:07:23,620 --> 00:07:25,539
business so important so these are my

195
00:07:25,539 --> 00:07:28,810
main results and basically as you can

196
00:07:28,810 --> 00:07:31,930
see here the question of s re vs sdk we

197
00:07:31,930 --> 00:07:33,759
have basically made some progress

198
00:07:33,759 --> 00:07:35,469
towards understanding it but we still

199
00:07:35,469 --> 00:07:36,729
don't know if I sorry is a proper subset

200
00:07:36,729 --> 00:07:42,719
of physical not ok so now I will briefly

201
00:07:42,719 --> 00:07:44,949
make an overview of the setting and then

202
00:07:44,949 --> 00:07:49,719
I can prove some results ok so this is

203
00:07:49,719 --> 00:07:51,939
vessel resetting as I have said before

204
00:07:51,939 --> 00:07:54,159
you have a computationally limited

205
00:07:54,159 --> 00:07:55,270
client who wants the all sources

206
00:07:55,270 --> 00:07:58,300
computation to unball the server so the

207
00:07:58,300 --> 00:07:59,830
goal is to compute f of X without

208
00:07:59,830 --> 00:08:01,899
disclosing x and ok there is a

209
00:08:01,899 --> 00:08:03,520
traditional definition property base

210
00:08:03,520 --> 00:08:05,259
with Jose correctness played with the

211
00:08:05,259 --> 00:08:07,330
output produced by the sheriff I prague

212
00:08:07,330 --> 00:08:09,789
is equals to the right output to the f

213
00:08:09,789 --> 00:08:11,830
of X and there's the privacy requirement

214
00:08:11,830 --> 00:08:14,680
it means that the server doesn't learn

215
00:08:14,680 --> 00:08:16,469
anything about the input except of

216
00:08:16,469 --> 00:08:20,889
output of a function on this input ok so

217
00:08:20,889 --> 00:08:22,240
now i will introduce the notion of

218
00:08:22,240 --> 00:08:23,770
bubbles that will help me to talk about

219
00:08:23,770 --> 00:08:26,560
distributions so this blue bubble would

220
00:08:26,560 --> 00:08:27,879
represent the distribution which was

221
00:08:27,879 --> 00:08:30,370
produced by the client when he makes an

222
00:08:30,370 --> 00:08:33,159
encouraging kind of his input ok so

223
00:08:33,159 --> 00:08:35,490
whenever i have some input X i run this

224
00:08:35,490 --> 00:08:37,659
encoding procedure with it God's Way

225
00:08:37,659 --> 00:08:39,909
input with this and this message is

226
00:08:39,909 --> 00:08:43,599
later sent to the server so i will

227
00:08:43,599 --> 00:08:45,699
denote it as a blue bubble so my first

228
00:08:45,699 --> 00:08:47,290
claim is that if you consider in

229
00:08:47,290 --> 00:08:49,300
coatings of different inputs which

230
00:08:49,300 --> 00:08:52,899
evaluate to 1 this i will do not wave

231
00:08:52,899 --> 00:08:54,339
like the color blue so where are blue

232
00:08:54,339 --> 00:08:56,199
bubbles so the first claim is with the

233
00:08:56,199 --> 00:08:58,180
blue bubbles are close to each other why

234
00:08:58,180 --> 00:09:00,459
because of a privacy requirement all the

235
00:09:00,459 --> 00:09:01,569
distributions should be similar

236
00:09:01,569 --> 00:09:03,250
otherwise the server could tell apart

237
00:09:03,250 --> 00:09:06,550
inputs way to relate to one similarly if

238
00:09:06,550 --> 00:09:08,050
you consider inputs which relate to 0

239
00:09:08,050 --> 00:09:10,329
this is the red bubbles redbubble should

240
00:09:10,329 --> 00:09:11,589
be close to each other because otherwise

241
00:09:11,589 --> 00:09:14,050
the server could distinguish inputs

242
00:09:14,050 --> 00:09:16,750
vitale 20 ok and finally do the

243
00:09:16,750 --> 00:09:18,370
correctness requirements blue bubbles

244
00:09:18,370 --> 00:09:20,380
red and red bubble should be far apart

245
00:09:20,380 --> 00:09:22,480
because the server can at least go on

246
00:09:22,480 --> 00:09:24,640
value to the function so this is like

247
00:09:24,640 --> 00:09:26,140
conceptually the picture looks like

248
00:09:26,140 --> 00:09:28,660
these various two distributions blue and

249
00:09:28,660 --> 00:09:30,550
red ones and blue should be close to

250
00:09:30,550 --> 00:09:31,959
each other red ones are close to each

251
00:09:31,959 --> 00:09:34,290
other and the blue and red are far apart

252
00:09:34,290 --> 00:09:37,510
so now look let's look at the one-sided

253
00:09:37,510 --> 00:09:39,250
version in the one-sided version you

254
00:09:39,250 --> 00:09:40,899
require privacy for one input and

255
00:09:40,899 --> 00:09:43,690
correctness as before so basically the

256
00:09:43,690 --> 00:09:44,860
picture looks like this where blue

257
00:09:44,860 --> 00:09:45,970
bubbles are still close to each other

258
00:09:45,970 --> 00:09:47,620
but the red bubbles and now distributed

259
00:09:47,620 --> 00:09:49,089
the way we want except which way should

260
00:09:49,089 --> 00:09:52,480
be far from a blue bubbles this is the

261
00:09:52,480 --> 00:09:54,370
kind of conceptual understanding of what

262
00:09:54,370 --> 00:09:56,620
of what is the object rotisserie gives

263
00:09:56,620 --> 00:09:58,810
you it gives you a way to map inputs to

264
00:09:58,810 --> 00:10:01,149
two distributions and one sided privacy

265
00:10:01,149 --> 00:10:02,980
means what you can map only like two one

266
00:10:02,980 --> 00:10:04,390
distribution and the second one is far

267
00:10:04,390 --> 00:10:07,779
apart ok and now let's talk to win

268
00:10:07,779 --> 00:10:12,010
exciting so before I introduce like

269
00:10:12,010 --> 00:10:13,870
exactly the reverse there was some

270
00:10:13,870 --> 00:10:15,279
interaction between the client and the

271
00:10:15,279 --> 00:10:16,959
server now this interaction is

272
00:10:16,959 --> 00:10:20,470
substituted within the dealer who could

273
00:10:20,470 --> 00:10:22,510
give some common randomness so basically

274
00:10:22,510 --> 00:10:23,860
in the beginning clay dealer creates

275
00:10:23,860 --> 00:10:25,930
common randomness sends it to the client

276
00:10:25,930 --> 00:10:28,240
to the server the server can now compute

277
00:10:28,240 --> 00:10:29,589
the proof the proof is sent to the

278
00:10:29,589 --> 00:10:32,290
client the client accepts or not ok and

279
00:10:32,290 --> 00:10:34,540
the goal is again the for the server to

280
00:10:34,540 --> 00:10:36,730
prove that that input is invalid without

281
00:10:36,730 --> 00:10:37,810
revealing any additional information

282
00:10:37,810 --> 00:10:39,819
about the input and again there is a

283
00:10:39,819 --> 00:10:41,110
property-based definition there is a

284
00:10:41,110 --> 00:10:42,430
correctness soundness and zero knowledge

285
00:10:42,430 --> 00:10:45,339
proof correctness is minced with the

286
00:10:45,339 --> 00:10:47,600
server can always

287
00:10:47,600 --> 00:10:49,490
of a correct statement solemn this means

288
00:10:49,490 --> 00:10:51,019
that we saw we cannot prove an incorrect

289
00:10:51,019 --> 00:10:52,459
statement in zero knowledge means with a

290
00:10:52,459 --> 00:10:53,839
client doesn't do anything about three

291
00:10:53,839 --> 00:10:55,490
input except if it's in the language

292
00:10:55,490 --> 00:11:00,709
channel and kind of the the notion where

293
00:11:00,709 --> 00:11:02,750
there is no dealer batteries interaction

294
00:11:02,750 --> 00:11:05,569
is just a traditional SD commotion okay

295
00:11:05,569 --> 00:11:08,209
this is our main theorem we prove it

296
00:11:08,209 --> 00:11:10,490
one-sided randomized encoding it goes to

297
00:11:10,490 --> 00:11:11,959
a non-interactive statistical zero

298
00:11:11,959 --> 00:11:17,930
knowledge class okay so let's go into

299
00:11:17,930 --> 00:11:19,519
the proof so we start by proving that

300
00:11:19,519 --> 00:11:22,699
vineeth is a subset of binary so let's

301
00:11:22,699 --> 00:11:25,009
take any new system for some language L

302
00:11:25,009 --> 00:11:26,509
and they want to construct the one-sided

303
00:11:26,509 --> 00:11:28,009
and we want to construct one sided

304
00:11:28,009 --> 00:11:30,800
randomized encoding for this language so

305
00:11:30,800 --> 00:11:32,449
the construction works as follows

306
00:11:32,449 --> 00:11:34,699
actually it's based on the all these old

307
00:11:34,699 --> 00:11:37,639
ideas about proven properties of misc so

308
00:11:37,639 --> 00:11:42,259
it's nothing you know super revealing

309
00:11:42,259 --> 00:11:44,000
but it still works so we just presented

310
00:11:44,000 --> 00:11:45,949
so the first thing what you do you take

311
00:11:45,949 --> 00:11:47,899
the simulator of a zero knowledge you

312
00:11:47,899 --> 00:11:49,730
take the input and you get an output of

313
00:11:49,730 --> 00:11:52,130
a simulator so simulate in Venice

314
00:11:52,130 --> 00:11:54,019
setting it out put the string from a

315
00:11:54,019 --> 00:11:56,089
dealer and the proof supposed to be the

316
00:11:56,089 --> 00:11:57,470
distribution which is indistinguishable

317
00:11:57,470 --> 00:12:00,500
from the real from the real world okay

318
00:12:00,500 --> 00:12:06,560
given this thing the you can verify the

319
00:12:06,560 --> 00:12:08,630
comments drink and the proof against the

320
00:12:08,630 --> 00:12:10,970
input X and verification succeeds when

321
00:12:10,970 --> 00:12:13,189
you put the string which is common

322
00:12:13,189 --> 00:12:15,740
randomness and otherwise you'll put some

323
00:12:15,740 --> 00:12:17,149
fixed drink which is out which is

324
00:12:17,149 --> 00:12:20,720
outside of all the support of a dealer

325
00:12:20,720 --> 00:12:23,029
ok and this is the how encoding course

326
00:12:23,029 --> 00:12:27,130
so now JK a small thing so we have a

327
00:12:27,130 --> 00:12:28,939
non-interactive statistical zero

328
00:12:28,939 --> 00:12:30,050
knowledge proof system and we want to

329
00:12:30,050 --> 00:12:31,160
construct a one-sided randomized

330
00:12:31,160 --> 00:12:33,110
encoding for it so enjoy link it takes

331
00:12:33,110 --> 00:12:34,579
an input X and the randomness are and

332
00:12:34,579 --> 00:12:38,149
this is how it works ok so now I will

333
00:12:38,149 --> 00:12:44,709
prove a security orvis construction ok

334
00:12:44,709 --> 00:12:49,339
so so we start by considering the output

335
00:12:49,339 --> 00:12:51,829
of any of this encoding procedure on one

336
00:12:51,829 --> 00:12:55,430
input ok so we will start with some

337
00:12:55,430 --> 00:12:57,019
input which isn't the language and want

338
00:12:57,019 --> 00:12:58,760
to receive how is in chronic procedure

339
00:12:58,760 --> 00:13:01,340
will work so given

340
00:13:01,340 --> 00:13:03,170
this is one input it's in the language

341
00:13:03,170 --> 00:13:05,930
it means what is the correct so the

342
00:13:05,930 --> 00:13:07,820
distribution of the simulator is indeed

343
00:13:07,820 --> 00:13:10,430
close to the real distribution so what I

344
00:13:10,430 --> 00:13:11,420
want to like to claim with the

345
00:13:11,420 --> 00:13:14,980
distribution of randomness output of a

346
00:13:14,980 --> 00:13:17,570
redistribution of output of encoding is

347
00:13:17,570 --> 00:13:18,950
very close to be distribution of a

348
00:13:18,950 --> 00:13:21,620
dinner okay and I will do it in two

349
00:13:21,620 --> 00:13:23,660
steps so the first thing is that a

350
00:13:23,660 --> 00:13:25,730
distribution of a simulator is close to

351
00:13:25,730 --> 00:13:27,440
be distribution of a dealer so this

352
00:13:27,440 --> 00:13:29,810
first string Sigma should be closed of a

353
00:13:29,810 --> 00:13:31,790
distribution of it of a sigma because of

354
00:13:31,790 --> 00:13:34,040
a zero knowledge property the second

355
00:13:34,040 --> 00:13:36,140
thing because it's vapors in the

356
00:13:36,140 --> 00:13:38,660
language we know that this to the proof

357
00:13:38,660 --> 00:13:41,030
and the proof p and x sigma c is the

358
00:13:41,030 --> 00:13:44,240
valid proof for the input X so

359
00:13:44,240 --> 00:13:46,700
verification procedures should succeed

360
00:13:46,700 --> 00:13:48,680
with high probability except of

361
00:13:48,680 --> 00:13:51,650
correctness error on this proof T and

362
00:13:51,650 --> 00:13:53,510
the common randomness sigmav of input X

363
00:13:53,510 --> 00:13:56,510
so in GT will output Sigma the five

364
00:13:56,510 --> 00:13:58,460
probability acceptable error of

365
00:13:58,460 --> 00:14:00,230
correctness and the zero knowledgeable

366
00:14:00,230 --> 00:14:02,480
output Sigma so the distribution of any

367
00:14:02,480 --> 00:14:03,650
one input should the close to be

368
00:14:03,650 --> 00:14:06,050
distribution of a dealer ok so what

369
00:14:06,050 --> 00:14:07,040
picture looks like we have a

370
00:14:07,040 --> 00:14:08,270
distribution of a dealer which is a

371
00:14:08,270 --> 00:14:09,650
green distribution and you have a

372
00:14:09,650 --> 00:14:12,080
distribution of one inputs which is a

373
00:14:12,080 --> 00:14:13,550
blue bubbles and they close to the

374
00:14:13,550 --> 00:14:15,800
distribution of a deal now let's

375
00:14:15,800 --> 00:14:17,540
consider any distribution of a zero

376
00:14:17,540 --> 00:14:20,420
input I claim with the distribution of V

377
00:14:20,420 --> 00:14:22,370
0 input should be far apart or at most

378
00:14:22,370 --> 00:14:24,560
they can touch with distribution of the

379
00:14:24,560 --> 00:14:27,890
dealer a little bit why because every

380
00:14:27,890 --> 00:14:30,620
string which is output which is produced

381
00:14:30,620 --> 00:14:32,990
by varun coding and its output for a

382
00:14:32,990 --> 00:14:34,490
zero input which touches the

383
00:14:34,490 --> 00:14:36,380
distribution of a dealer it contributes

384
00:14:36,380 --> 00:14:40,790
to a silencer whenever I can whenever I

385
00:14:40,790 --> 00:14:42,290
output the distinct witches in the

386
00:14:42,290 --> 00:14:44,120
support it means what it has been

387
00:14:44,120 --> 00:14:45,650
verified correctly and it has been

388
00:14:45,650 --> 00:14:48,860
produced by the simulator so this over

389
00:14:48,860 --> 00:14:50,780
any intersection between the red bubble

390
00:14:50,780 --> 00:14:52,130
and the green bubble it contributes of a

391
00:14:52,130 --> 00:14:54,110
silencer so it means that the red bubble

392
00:14:54,110 --> 00:14:55,970
should be far also from from the green

393
00:14:55,970 --> 00:14:59,330
bubble okay so the picture looks likely

394
00:14:59,330 --> 00:15:00,620
so you have blue bubbles with a close to

395
00:15:00,620 --> 00:15:02,120
the distribution of the dealer and you

396
00:15:02,120 --> 00:15:04,760
have red bubbles with a far from it so

397
00:15:04,760 --> 00:15:05,840
this is the picture of one-sided

398
00:15:05,840 --> 00:15:08,360
randomized encoding and this direction

399
00:15:08,360 --> 00:15:11,930
is actually quite e ok now let's go to

400
00:15:11,930 --> 00:15:13,580
another direction so we're going to

401
00:15:13,580 --> 00:15:15,230
prove that one side randomizes court

402
00:15:15,230 --> 00:15:18,740
is a subset of music and thou

403
00:15:18,740 --> 00:15:20,180
construction it was it will work is

404
00:15:20,180 --> 00:15:21,770
following so as you might have a

405
00:15:21,770 --> 00:15:23,330
one-sided randomizing Cody you've been

406
00:15:23,330 --> 00:15:24,440
encoding function and you have a

407
00:15:24,440 --> 00:15:27,710
simulator for the vision coding function

408
00:15:27,710 --> 00:15:29,450
so by simulator so remember you have

409
00:15:29,450 --> 00:15:30,860
blue bubbles with a close to each other

410
00:15:30,860 --> 00:15:33,500
I will choose a universal bubble okay so

411
00:15:33,500 --> 00:15:34,910
where is the universal blue bubble with

412
00:15:34,910 --> 00:15:36,350
this close to all the other blue bubbles

413
00:15:36,350 --> 00:15:39,350
and I will construct a nice kiss

414
00:15:39,350 --> 00:15:41,210
following I will take this Universal

415
00:15:41,210 --> 00:15:43,460
blue bubble and I will sample a point

416
00:15:43,460 --> 00:15:45,920
from it and I will ask the approver so

417
00:15:45,920 --> 00:15:46,940
this is how it looks like you have this

418
00:15:46,940 --> 00:15:49,280
Universal movable case the color is

419
00:15:49,280 --> 00:15:50,600
green but all the blue bubbles are close

420
00:15:50,600 --> 00:15:53,060
to it so given that I sample vez

421
00:15:53,060 --> 00:15:56,540
universal blue bubble I can this is the

422
00:15:56,540 --> 00:15:58,820
point I will ask the server to find the

423
00:15:58,820 --> 00:16:01,400
random pretty much under the encoding

424
00:16:01,400 --> 00:16:04,460
function for this point okay and given

425
00:16:04,460 --> 00:16:06,200
that with universal bubble is close to

426
00:16:06,200 --> 00:16:07,550
all the blue bubbles it should always

427
00:16:07,550 --> 00:16:11,840
possible and this pre image will serve

428
00:16:11,840 --> 00:16:16,400
as a proof which is sent to the to the

429
00:16:16,400 --> 00:16:20,360
to the client ok so here I wrote our

430
00:16:20,360 --> 00:16:22,310
prime you can just think of it as our so

431
00:16:22,310 --> 00:16:23,540
if the server is malicious you could

432
00:16:23,540 --> 00:16:25,520
just send some R Prime and this R prime

433
00:16:25,520 --> 00:16:27,920
is verified by the client by taking our

434
00:16:27,920 --> 00:16:29,150
prime and and calling function and

435
00:16:29,150 --> 00:16:32,360
verifying that indeed the this random

436
00:16:32,360 --> 00:16:34,340
string is the right answer for this ok

437
00:16:34,340 --> 00:16:35,480
this is you can think of it as a

438
00:16:35,480 --> 00:16:38,150
challenge so basically you ask to invert

439
00:16:38,150 --> 00:16:40,820
the distribution ok so the picture it

440
00:16:40,820 --> 00:16:42,500
look it looks like this you have this

441
00:16:42,500 --> 00:16:44,720
green universal the distribution you

442
00:16:44,720 --> 00:16:46,040
have all the blue bubbles with a close

443
00:16:46,040 --> 00:16:47,570
to each other you sample from the green

444
00:16:47,570 --> 00:16:49,660
distribution and lastly server to invert

445
00:16:49,660 --> 00:16:54,500
ok whenever is it is possible to invert

446
00:16:54,500 --> 00:16:56,360
it means that the blue bubble actually

447
00:16:56,360 --> 00:16:57,740
covers this point when you can invert

448
00:16:57,740 --> 00:17:00,050
and if the blue bubble doesn't cover at

449
00:17:00,050 --> 00:17:02,360
this point when you cannot invert so we

450
00:17:02,360 --> 00:17:03,950
know that red bubbles are far from it so

451
00:17:03,950 --> 00:17:05,839
basically we get all the properties you

452
00:17:05,839 --> 00:17:08,030
can verify them so correctness

453
00:17:08,030 --> 00:17:09,800
properties of a zero knowledge system it

454
00:17:09,800 --> 00:17:12,530
follows from fact that the blue bubble

455
00:17:12,530 --> 00:17:13,970
is close to the green bubble so whenever

456
00:17:13,970 --> 00:17:15,920
you want to invert you can do it because

457
00:17:15,920 --> 00:17:18,290
two distributions are close the zero

458
00:17:18,290 --> 00:17:19,640
knowledge properties essentially it's

459
00:17:19,640 --> 00:17:23,250
inverted how you sample from the

460
00:17:23,250 --> 00:17:25,260
a green distribution it's also easy and

461
00:17:25,260 --> 00:17:27,420
the sound is property they actually the

462
00:17:27,420 --> 00:17:29,850
crucial one it tells you that under the

463
00:17:29,850 --> 00:17:32,160
red distribution you cannot simply you

464
00:17:32,160 --> 00:17:33,330
cannot find a pre image of a green

465
00:17:33,330 --> 00:17:35,790
distribution you know that the red

466
00:17:35,790 --> 00:17:36,930
distribution should be far from the

467
00:17:36,930 --> 00:17:38,520
green distribution but actually here is

468
00:17:38,520 --> 00:17:41,730
a small problem that it's not always

469
00:17:41,730 --> 00:17:43,740
possible to prove sounds like this

470
00:17:43,740 --> 00:17:45,870
directly because red distribution can

471
00:17:45,870 --> 00:17:47,460
touch little bit of a green distribution

472
00:17:47,460 --> 00:17:50,760
so that the very much exists so the

473
00:17:50,760 --> 00:17:54,360
solidness is not is it via only for this

474
00:17:54,360 --> 00:17:59,070
picture okay so now basically we have to

475
00:17:59,070 --> 00:18:02,400
fix soundness because in the case when

476
00:18:02,400 --> 00:18:04,140
the red bubble patches the green bell go

477
00:18:04,140 --> 00:18:06,360
so here I refined the notion of bubbles

478
00:18:06,360 --> 00:18:08,160
so remember before this is the red

479
00:18:08,160 --> 00:18:09,660
distribution this is just a histograms

480
00:18:09,660 --> 00:18:11,220
so this is ver el Babel this is the

481
00:18:11,220 --> 00:18:13,740
green bubble so the dy drove em is to be

482
00:18:13,740 --> 00:18:15,960
non intersecting so basically the

483
00:18:15,960 --> 00:18:17,130
statistical distance between two

484
00:18:17,130 --> 00:18:20,250
distributions 20 the problem arises if

485
00:18:20,250 --> 00:18:21,810
you take the register bution and let it

486
00:18:21,810 --> 00:18:24,150
touch little bit vagrant distribution so

487
00:18:24,150 --> 00:18:25,530
basically for every point from a green

488
00:18:25,530 --> 00:18:27,000
distribution you have a pre-image on the

489
00:18:27,000 --> 00:18:28,800
red distribution even the weight of this

490
00:18:28,800 --> 00:18:31,800
point is small and actually in order to

491
00:18:31,800 --> 00:18:34,470
fix it we need to find a way to make

492
00:18:34,470 --> 00:18:37,140
like cook transformation that allows us

493
00:18:37,140 --> 00:18:38,820
basically to make with distribution far

494
00:18:38,820 --> 00:18:41,130
apart so basically given this to

495
00:18:41,130 --> 00:18:43,260
distribution we want to put to

496
00:18:43,260 --> 00:18:44,970
distribution to distributions who want

497
00:18:44,970 --> 00:18:47,340
to apply some transformation to fix this

498
00:18:47,340 --> 00:18:49,080
picture and actually to make red guys to

499
00:18:49,080 --> 00:18:53,070
be back to the red part so we want a

500
00:18:53,070 --> 00:18:54,510
general transformation but given two

501
00:18:54,510 --> 00:18:57,540
distributions with a very far apart but

502
00:18:57,540 --> 00:18:59,520
still can intersect by silver support

503
00:18:59,520 --> 00:19:01,110
can intercept base supports can

504
00:19:01,110 --> 00:19:03,810
intersect a lot we want to make a far

505
00:19:03,810 --> 00:19:05,970
apart and the novel property actually

506
00:19:05,970 --> 00:19:07,590
simultaneously with the blue

507
00:19:07,590 --> 00:19:08,850
distribution which is close to a green

508
00:19:08,850 --> 00:19:11,400
distribution it should be still it

509
00:19:11,400 --> 00:19:14,670
should still stay close to the green

510
00:19:14,670 --> 00:19:16,620
distribution so essentially you can

511
00:19:16,620 --> 00:19:20,100
formulate a transformation task that

512
00:19:20,100 --> 00:19:21,810
given free distribution will satisfy

513
00:19:21,810 --> 00:19:23,580
these properties if two distributions

514
00:19:23,580 --> 00:19:25,140
were far apart it will make them

515
00:19:25,140 --> 00:19:26,820
actually disjoint if two distributions

516
00:19:26,820 --> 00:19:29,760
were close you want them to be still

517
00:19:29,760 --> 00:19:32,340
closed okay and this is kind of in the

518
00:19:32,340 --> 00:19:35,059
spirit of work in the AC

519
00:19:35,059 --> 00:19:36,499
there has been some different

520
00:19:36,499 --> 00:19:38,870
transformation and different properties

521
00:19:38,870 --> 00:19:40,669
we need this particular transformation

522
00:19:40,669 --> 00:19:46,460
and the the way we achieve it is

523
00:19:46,460 --> 00:19:49,519
actually we use a non-uniform advice so

524
00:19:49,519 --> 00:19:52,519
we use the work of gold ring second and

525
00:19:52,519 --> 00:19:54,559
by Dan and based on the transformation

526
00:19:54,559 --> 00:19:57,110
we actually we will made ours so in

527
00:19:57,110 --> 00:19:58,070
order basically to make this

528
00:19:58,070 --> 00:20:00,710
transformation we need to be able to

529
00:20:00,710 --> 00:20:02,690
guess the entropy of this universal

530
00:20:02,690 --> 00:20:05,929
green distribution this is the uniform

531
00:20:05,929 --> 00:20:08,210
advice which we get so this is possible

532
00:20:08,210 --> 00:20:10,190
and basically concludes the proof of

533
00:20:10,190 --> 00:20:13,929
this theorem okay so now i will just

534
00:20:13,929 --> 00:20:16,610
okay so this is not so important but so

535
00:20:16,610 --> 00:20:19,129
basically the main idea given that you

536
00:20:19,129 --> 00:20:21,679
know the entropy of a distribution you

537
00:20:21,679 --> 00:20:24,769
can essentially output for every sample

538
00:20:24,769 --> 00:20:27,769
the weight of this sample and as you can

539
00:20:27,769 --> 00:20:29,240
see here the red guys have small weight

540
00:20:29,240 --> 00:20:30,710
and the green and blue guys have a

541
00:20:30,710 --> 00:20:32,690
bigger weight and this allows you to

542
00:20:32,690 --> 00:20:34,190
make widget the distributions I would

543
00:20:34,190 --> 00:20:36,499
destroy it or still keep them close to

544
00:20:36,499 --> 00:20:40,580
each other okay actually now I think I

545
00:20:40,580 --> 00:20:45,409
will conclude okay so we have this task

546
00:20:45,409 --> 00:20:47,480
of comparing the class complexity class

547
00:20:47,480 --> 00:20:52,070
sre and complexity class sgk so our main

548
00:20:52,070 --> 00:20:54,470
result is that we put two new complexity

549
00:20:54,470 --> 00:20:56,600
classes between them where the class 1

550
00:20:56,600 --> 00:20:58,159
re and class needs can the show and the

551
00:20:58,159 --> 00:21:01,610
show equality defender and there is

552
00:21:01,610 --> 00:21:03,619
silver value there are still questions

553
00:21:03,619 --> 00:21:05,690
which remain to be answered so the first

554
00:21:05,690 --> 00:21:07,549
question is that this equality is almost

555
00:21:07,549 --> 00:21:09,440
a good equality the only people to want

556
00:21:09,440 --> 00:21:13,009
we want to make it uniform so and then

557
00:21:13,009 --> 00:21:15,230
fortunately our reduction it has to be

558
00:21:15,230 --> 00:21:16,610
small uniform and wise and it's annoying

559
00:21:16,610 --> 00:21:19,639
but it's almost what we want okay the

560
00:21:19,639 --> 00:21:22,039
second thing is that this is a kind of a

561
00:21:22,039 --> 00:21:24,139
new question s re vs 1 re and we

562
00:21:24,139 --> 00:21:26,690
understand if this relation is a is a

563
00:21:26,690 --> 00:21:29,179
proper subset or not and the second

564
00:21:29,179 --> 00:21:31,669
question is already has been studied

565
00:21:31,669 --> 00:21:33,289
before the question in East versus SDK

566
00:21:33,289 --> 00:21:35,269
we also like to understand if Fisk is a

567
00:21:35,269 --> 00:21:38,889
proper subset of vesicular load and

568
00:21:38,889 --> 00:21:41,480
basically as i said the main ghost on

569
00:21:41,480 --> 00:21:43,009
the stands relation between sra and sdk

570
00:21:43,009 --> 00:21:45,289
but there is now auxiliary questions it

571
00:21:45,289 --> 00:21:47,320
would be nice to have them all answered

572
00:21:47,320 --> 00:21:50,490
and I think this will come

