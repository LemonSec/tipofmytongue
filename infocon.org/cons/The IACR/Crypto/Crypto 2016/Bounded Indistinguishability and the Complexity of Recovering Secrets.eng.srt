1
00:00:04,460 --> 00:00:08,099
okay thank you for the introduction I'm

2
00:00:08,099 --> 00:00:09,330
Chris and I'm going to tell you today

3
00:00:09,330 --> 00:00:12,179
about low-complexity secret sharing

4
00:00:12,179 --> 00:00:14,429
schemes and this is joint work with

5
00:00:14,429 --> 00:00:17,160
andrey volk deneuve diwali shy and

6
00:00:17,160 --> 00:00:21,150
emanuel a deal de ok so let's start with

7
00:00:21,150 --> 00:00:23,370
a really simple warm up side what is the

8
00:00:23,370 --> 00:00:26,730
secret sharing scheme so we have some

9
00:00:26,730 --> 00:00:29,670
secret pit we take it to be 0 or 1 and

10
00:00:29,670 --> 00:00:32,070
if we have a more complex secret we just

11
00:00:32,070 --> 00:00:33,239
have more bits and we do the scheme

12
00:00:33,239 --> 00:00:35,489
several times and somehow we want to

13
00:00:35,489 --> 00:00:37,710
distribute this secret bit to a group of

14
00:00:37,710 --> 00:00:41,039
end people so that small coalition's

15
00:00:41,039 --> 00:00:42,420
have no access to any information

16
00:00:42,420 --> 00:00:44,999
whatsoever but a sufficiently large

17
00:00:44,999 --> 00:00:46,499
coalition is able to reconstruct the

18
00:00:46,499 --> 00:00:49,350
secret and in this talk we're going to

19
00:00:49,350 --> 00:00:52,409
be talking about ramp schemes that's

20
00:00:52,409 --> 00:00:56,429
just a generalization of threshold

21
00:00:56,429 --> 00:00:57,929
secret sharing where we may have some

22
00:00:57,929 --> 00:01:00,449
sort of gap between the security and the

23
00:01:00,449 --> 00:01:04,440
reconstruction thresholds okay so let me

24
00:01:04,440 --> 00:01:06,240
go a little bit more in depth here about

25
00:01:06,240 --> 00:01:09,060
what our specific model is so we have of

26
00:01:09,060 --> 00:01:10,469
course the dealer with a secret pit and

27
00:01:10,469 --> 00:01:12,420
the steeler will also have two

28
00:01:12,420 --> 00:01:14,909
probability distributions mu and nu and

29
00:01:14,909 --> 00:01:17,670
these distributions are over Sigma to

30
00:01:17,670 --> 00:01:20,340
the N but for now it's it's probably

31
00:01:20,340 --> 00:01:22,020
best to just think of Sigma as being 0

32
00:01:22,020 --> 00:01:25,079
or 1 and so these are distributions over

33
00:01:25,079 --> 00:01:28,560
n bit strings and so the dealer has some

34
00:01:28,560 --> 00:01:30,750
secret and depending on what his secret

35
00:01:30,750 --> 00:01:32,430
is he will sample from one of the two

36
00:01:32,430 --> 00:01:35,700
distributions and it's important to note

37
00:01:35,700 --> 00:01:39,000
that the the desert the distributions

38
00:01:39,000 --> 00:01:41,009
are publicly known and also the

39
00:01:41,009 --> 00:01:42,509
correlation between what the secret is

40
00:01:42,509 --> 00:01:44,250
and what distribution will be sampled

41
00:01:44,250 --> 00:01:47,280
from so once we've sampled our n bit

42
00:01:47,280 --> 00:01:49,590
string will give a bit to each of n

43
00:01:49,590 --> 00:01:51,899
parties and they try to reconstruct by

44
00:01:51,899 --> 00:01:54,210
applying some boolean function to their

45
00:01:54,210 --> 00:01:57,719
shares and the way that we quantify the

46
00:01:57,719 --> 00:01:59,969
reconstruction advantage is by the

47
00:01:59,969 --> 00:02:01,920
difference of the acceptance probability

48
00:02:01,920 --> 00:02:04,979
under the boolean function f and this is

49
00:02:04,979 --> 00:02:06,570
a slightly non-standard way of looking

50
00:02:06,570 --> 00:02:08,889
at the reconstruction advantage

51
00:02:08,889 --> 00:02:11,170
but just the way to think about it is

52
00:02:11,170 --> 00:02:14,050
that if we have epsilon equal to 1 then

53
00:02:14,050 --> 00:02:14,890
that means we have perfect

54
00:02:14,890 --> 00:02:16,090
reconstruction so we want to have

55
00:02:16,090 --> 00:02:22,240
epsilon as large as possible okay so

56
00:02:22,240 --> 00:02:23,680
this is good but I haven't told you what

57
00:02:23,680 --> 00:02:25,690
distributions we've sample from and I

58
00:02:25,690 --> 00:02:28,540
haven't said how we get our security so

59
00:02:28,540 --> 00:02:30,760
that's why we introduced this notion of

60
00:02:30,760 --> 00:02:32,800
bounded indistinguishability for

61
00:02:32,800 --> 00:02:35,290
distributions over at the moment and bit

62
00:02:35,290 --> 00:02:37,270
strings and this is just a

63
00:02:37,270 --> 00:02:41,280
generalization of KY is independence

64
00:02:41,280 --> 00:02:44,470
with KY is independence we require that

65
00:02:44,470 --> 00:02:48,400
the KY is marginals be uniform and k

66
00:02:48,400 --> 00:02:50,860
wise indistinguishability is a property

67
00:02:50,860 --> 00:02:52,600
of a pair of distributions and it just

68
00:02:52,600 --> 00:02:54,730
states that those very same marginals

69
00:02:54,730 --> 00:02:57,459
are identical to each other so the

70
00:02:57,459 --> 00:02:59,620
upshot of this is that we sample our

71
00:02:59,620 --> 00:03:03,100
secret shares from distributions mu and

72
00:03:03,100 --> 00:03:05,230
nu that r-ky is indistinguishable then

73
00:03:05,230 --> 00:03:06,970
we immediately get our security

74
00:03:06,970 --> 00:03:10,540
guarantee because parties of size at

75
00:03:10,540 --> 00:03:13,540
most K can not distinguish between the

76
00:03:13,540 --> 00:03:15,040
distributions based on the view of their

77
00:03:15,040 --> 00:03:18,519
shares so just to formalize notation and

78
00:03:18,519 --> 00:03:20,530
summarize what I've given you so far we

79
00:03:20,530 --> 00:03:22,600
have an NK secret sharing scheme with

80
00:03:22,600 --> 00:03:24,850
advantage Epsilon that's nothing but

81
00:03:24,850 --> 00:03:26,709
just a pair of K wise indistinct well

82
00:03:26,709 --> 00:03:28,870
distributions me own you and some

83
00:03:28,870 --> 00:03:30,880
reconstruction function f that can

84
00:03:30,880 --> 00:03:31,989
distinguish between them with some

85
00:03:31,989 --> 00:03:34,780
advantage Epsilon so with this ordered

86
00:03:34,780 --> 00:03:37,030
pair notation and as just telling us the

87
00:03:37,030 --> 00:03:38,530
number of parties in case our security

88
00:03:38,530 --> 00:03:43,510
guarantee so the main focus of this talk

89
00:03:43,510 --> 00:03:46,360
is can we have simple reconstruction

90
00:03:46,360 --> 00:03:49,329
functions and there's a common unhappy

91
00:03:49,329 --> 00:03:52,030
theme among many secret chairing schemes

92
00:03:52,030 --> 00:03:55,510
that already exist and that theme is

93
00:03:55,510 --> 00:03:57,280
that the reconstruction cannot be done

94
00:03:57,280 --> 00:04:00,850
with AC 0 circuits the polynomial size

95
00:04:00,850 --> 00:04:05,019
concept of circuits and just to convince

96
00:04:05,019 --> 00:04:07,120
you of this hopefully I mean a very very

97
00:04:07,120 --> 00:04:08,410
simple scheme that you might think of is

98
00:04:08,410 --> 00:04:11,230
just to use the XOR function and to

99
00:04:11,230 --> 00:04:13,840
sample our shares uniformly at random

100
00:04:13,840 --> 00:04:15,549
but just conditioned on the fact that

101
00:04:15,549 --> 00:04:18,640
the parody is equal to the secret but of

102
00:04:18,640 --> 00:04:20,019
course in order to reconstruct you must

103
00:04:20,019 --> 00:04:21,579
compute the parity function which is not

104
00:04:21,579 --> 00:04:22,240
in ac0

105
00:04:22,240 --> 00:04:25,040
and with something like Jimmy our secret

106
00:04:25,040 --> 00:04:27,590
sharing scheme that requires computing

107
00:04:27,590 --> 00:04:29,630
linear functions and some linear algebra

108
00:04:29,630 --> 00:04:33,950
it's also not possible in ac0 so the

109
00:04:33,950 --> 00:04:36,050
first quench line of the talk is that we

110
00:04:36,050 --> 00:04:38,680
will be constructing schemes that allow

111
00:04:38,680 --> 00:04:43,640
reconstruction in ac0 okay so I've been

112
00:04:43,640 --> 00:04:45,530
talking about how simple can we make

113
00:04:45,530 --> 00:04:47,660
these schemes right so what is the

114
00:04:47,660 --> 00:04:49,100
simplest reconstruction function you

115
00:04:49,100 --> 00:04:50,870
might think of well the or function

116
00:04:50,870 --> 00:04:52,490
seems quite simple right and of course

117
00:04:52,490 --> 00:04:55,490
the simplest secret shares that we can

118
00:04:55,490 --> 00:04:59,750
have our just single bit shares so what

119
00:04:59,750 --> 00:05:01,880
can we do with reconstruction by or and

120
00:05:01,880 --> 00:05:03,680
single bit shares well this is actually

121
00:05:03,680 --> 00:05:06,830
related to visual secret sharing which

122
00:05:06,830 --> 00:05:09,140
was introduced by Noren jamir in the 90s

123
00:05:09,140 --> 00:05:12,920
and so what is visual sigo sharing well

124
00:05:12,920 --> 00:05:14,510
our secret in this case is something

125
00:05:14,510 --> 00:05:17,240
some picture like an umbrella or you

126
00:05:17,240 --> 00:05:19,220
know anything a black and white picture

127
00:05:19,220 --> 00:05:22,610
and what we do is for every pixel in

128
00:05:22,610 --> 00:05:24,710
this picture we will run the secret

129
00:05:24,710 --> 00:05:27,890
sharing scheme and of course we have

130
00:05:27,890 --> 00:05:29,930
some correlation between 0 and 1 and

131
00:05:29,930 --> 00:05:33,320
black and white and once we run our

132
00:05:33,320 --> 00:05:35,900
secret sharing we get shares that look

133
00:05:35,900 --> 00:05:41,120
like this and so if you give you know

134
00:05:41,120 --> 00:05:42,650
people these shares they look at this

135
00:05:42,650 --> 00:05:44,600
that the image that they've got which is

136
00:05:44,600 --> 00:05:46,070
a secret sharing for every pixel and

137
00:05:46,070 --> 00:05:47,990
they see absolutely nothing in terms of

138
00:05:47,990 --> 00:05:50,570
what the image really is and if we print

139
00:05:50,570 --> 00:05:52,580
these shares on like overhead

140
00:05:52,580 --> 00:05:55,190
transparencies where you can stack them

141
00:05:55,190 --> 00:06:00,910
on a overhead projector you get to

142
00:06:00,910 --> 00:06:02,720
implement the or function that way

143
00:06:02,720 --> 00:06:05,720
because if you just stack these

144
00:06:05,720 --> 00:06:08,660
transparencies you'll have a black pixel

145
00:06:08,660 --> 00:06:11,120
at a given location exactly when at

146
00:06:11,120 --> 00:06:12,740
least one of the pixels in that stack is

147
00:06:12,740 --> 00:06:14,660
black so that's what's very nice about

148
00:06:14,660 --> 00:06:16,250
the or function is it's so simple you

149
00:06:16,250 --> 00:06:17,600
can physically implement it just by

150
00:06:17,600 --> 00:06:21,290
stacking these transparencies so if we

151
00:06:21,290 --> 00:06:24,380
have an NK secret sharing scheme for or

152
00:06:24,380 --> 00:06:26,419
what that means is we could get a visual

153
00:06:26,419 --> 00:06:29,300
secret sharing scheme where if you stack

154
00:06:29,300 --> 00:06:31,640
up 2k transparencies you still get an

155
00:06:31,640 --> 00:06:33,470
essentially random image but when you

156
00:06:33,470 --> 00:06:35,639
stack n transparencies you're able

157
00:06:35,639 --> 00:06:38,810
visually determine what the secret is

158
00:06:38,810 --> 00:06:41,340
and the reason that this is not a

159
00:06:41,340 --> 00:06:43,620
perfectly black and white image is just

160
00:06:43,620 --> 00:06:45,979
due to the fact that there are some

161
00:06:45,979 --> 00:06:47,759
distinguishing advantage of the or

162
00:06:47,759 --> 00:06:49,110
function for the distributions that we

163
00:06:49,110 --> 00:06:57,449
use and it may not be perfect oops okay

164
00:06:57,449 --> 00:06:59,699
so let me give you a little bit of

165
00:06:59,699 --> 00:07:01,669
background about visual secret sharing

166
00:07:01,669 --> 00:07:05,219
and it turns out that if we require a

167
00:07:05,219 --> 00:07:07,710
sharp threshold in these schemes so if

168
00:07:07,710 --> 00:07:09,870
we stack k transparencies you see

169
00:07:09,870 --> 00:07:11,759
nothing but if we stack k plus 1 you can

170
00:07:11,759 --> 00:07:14,039
tell it images so if we acquire this

171
00:07:14,039 --> 00:07:15,990
sharp threshold then the contrast in our

172
00:07:15,990 --> 00:07:19,110
image must vanish exponentially in K so

173
00:07:19,110 --> 00:07:20,939
what that means is eventually it will be

174
00:07:20,939 --> 00:07:24,090
essentially impossible to determine what

175
00:07:24,090 --> 00:07:26,520
the the secret image is just by looking

176
00:07:26,520 --> 00:07:29,729
at it and a question that we ask is

177
00:07:29,729 --> 00:07:31,710
whether we can get a scheme that is

178
00:07:31,710 --> 00:07:34,520
secure against as large as K as possible

179
00:07:34,520 --> 00:07:36,870
but we want to get this contrast to be

180
00:07:36,870 --> 00:07:38,580
independent of K we don't want it to

181
00:07:38,580 --> 00:07:42,300
have to to vanish with K assuming that

182
00:07:42,300 --> 00:07:44,879
we reconstruct with all end parties so

183
00:07:44,879 --> 00:07:46,169
this is why it's a ramp scheme we now

184
00:07:46,169 --> 00:07:48,509
have a gap between K and n which are our

185
00:07:48,509 --> 00:07:50,099
security and reconstruction thresholds

186
00:07:50,099 --> 00:07:52,879
but our goal is to get constant contrast

187
00:07:52,879 --> 00:07:56,189
and just to rephrase this question in a

188
00:07:56,189 --> 00:07:58,020
way that will be helpful later this is

189
00:07:58,020 --> 00:07:59,699
exactly the same thing as asking how

190
00:07:59,699 --> 00:08:02,159
large can we take K so that the or

191
00:08:02,159 --> 00:08:04,020
function is able to distinguish k wise

192
00:08:04,020 --> 00:08:06,000
and instinctual distributions with some

193
00:08:06,000 --> 00:08:10,550
content advantage and we're lucky

194
00:08:10,550 --> 00:08:12,330
there's a very nice way of

195
00:08:12,330 --> 00:08:14,699
characterizing exactly when this is

196
00:08:14,699 --> 00:08:17,819
possible for a given function so it's

197
00:08:17,819 --> 00:08:21,449
possible to write down the the property

198
00:08:21,449 --> 00:08:22,860
of being able to distinguish these

199
00:08:22,860 --> 00:08:25,379
distributions is a linear program and if

200
00:08:25,379 --> 00:08:27,569
you take the dual the program you end up

201
00:08:27,569 --> 00:08:30,479
getting a essentially representation of

202
00:08:30,479 --> 00:08:32,698
a complexity measure of f called the

203
00:08:32,698 --> 00:08:35,279
approximate degree and this approximate

204
00:08:35,279 --> 00:08:38,729
degree is the the degree necessary of

205
00:08:38,729 --> 00:08:41,599
real valued polynomials to approximate F

206
00:08:41,599 --> 00:08:44,159
to attempt some constant usually taken

207
00:08:44,159 --> 00:08:46,440
to be one-third at every input so in the

208
00:08:46,440 --> 00:08:48,390
L infinity sense

209
00:08:48,390 --> 00:08:51,630
and so the exact statement of our primal

210
00:08:51,630 --> 00:08:54,150
dual relationship here is that f is

211
00:08:54,150 --> 00:08:56,730
epsilon pool by KY Xena singable

212
00:08:56,730 --> 00:08:58,830
distributions meaning for every pair of

213
00:08:58,830 --> 00:09:01,830
such distributions it's fooled exactly

214
00:09:01,830 --> 00:09:04,710
when the exactly when F is not complex

215
00:09:04,710 --> 00:09:10,710
in terms of its approximate degree okay

216
00:09:10,710 --> 00:09:12,150
maybe you aren't familiar with

217
00:09:12,150 --> 00:09:14,940
approximate degree but as a first

218
00:09:14,940 --> 00:09:16,440
example we can discuss the or function

219
00:09:16,440 --> 00:09:17,760
because this will apply the visual

220
00:09:17,760 --> 00:09:20,580
secret sharing and nissan and sega d in

221
00:09:20,580 --> 00:09:23,160
the 90s and then later märklin and

222
00:09:23,160 --> 00:09:26,400
Justin thayler have shown that the

223
00:09:26,400 --> 00:09:27,810
epsilon approximate degree of the or

224
00:09:27,810 --> 00:09:29,400
function is on the order of square root

225
00:09:29,400 --> 00:09:33,150
of n so what does this mean well that

226
00:09:33,150 --> 00:09:35,550
just means that or can have a constant

227
00:09:35,550 --> 00:09:37,620
distinguishing advantage among these

228
00:09:37,620 --> 00:09:40,530
distributions for K as large as root end

229
00:09:40,530 --> 00:09:43,890
but not bigger so what does this mean

230
00:09:43,890 --> 00:09:46,470
well we immediately get a visual secret

231
00:09:46,470 --> 00:09:48,660
sharing scheme where if we stack square

232
00:09:48,660 --> 00:09:50,580
root of n transparencies you get nothing

233
00:09:50,580 --> 00:09:52,230
that you can distinguish but if you

234
00:09:52,230 --> 00:09:54,120
stack all the transparencies you can see

235
00:09:54,120 --> 00:09:59,370
the image and already we're able to kind

236
00:09:59,370 --> 00:10:01,590
of get a separation between the notions

237
00:10:01,590 --> 00:10:03,570
of bounded indistinguishability and

238
00:10:03,570 --> 00:10:06,270
bounded independence by the result of

239
00:10:06,270 --> 00:10:08,640
Braverman we know that poly logarithmic

240
00:10:08,640 --> 00:10:10,620
independence is sufficient to pool

241
00:10:10,620 --> 00:10:14,010
everything in ac0 but of course the or

242
00:10:14,010 --> 00:10:16,170
function is in ac0 function and yet i

243
00:10:16,170 --> 00:10:18,500
just shown you that it can distinguish

244
00:10:18,500 --> 00:10:21,090
order root and wise indistinguishable

245
00:10:21,090 --> 00:10:23,820
distributions and we can make this gap

246
00:10:23,820 --> 00:10:26,430
even bigger the majority function it's

247
00:10:26,430 --> 00:10:28,020
not an easy zero function but regardless

248
00:10:28,020 --> 00:10:30,510
it is fooled by just a constant amount

249
00:10:30,510 --> 00:10:33,780
of independence yet by this approximate

250
00:10:33,780 --> 00:10:37,080
degree result of pittore we know that it

251
00:10:37,080 --> 00:10:39,540
can distinguish order and

252
00:10:39,540 --> 00:10:41,370
indistinguishable distributions or at

253
00:10:41,370 --> 00:10:46,380
least some hair such distributions okay

254
00:10:46,380 --> 00:10:48,990
so just to to take our duality

255
00:10:48,990 --> 00:10:50,580
connection and phrase it exactly in

256
00:10:50,580 --> 00:10:52,740
terms of secret sharing we know that we

257
00:10:52,740 --> 00:10:55,200
get an NK scheme with a single bit

258
00:10:55,200 --> 00:10:58,350
alphabet and reconstruction by the

259
00:10:58,350 --> 00:11:01,379
function f if and only if the epsilon

260
00:11:01,379 --> 00:11:02,729
out to a degree of f is bigger than or

261
00:11:02,729 --> 00:11:05,939
equal to K so let me give you a little

262
00:11:05,939 --> 00:11:09,389
history of this duality connection it's

263
00:11:09,389 --> 00:11:11,910
been kind of hidden in some works for a

264
00:11:11,910 --> 00:11:13,889
while and originally starting with the

265
00:11:13,889 --> 00:11:16,139
work of lineal a new Sun and nineteen

266
00:11:16,139 --> 00:11:18,419
ninety who studied approximate inclusion

267
00:11:18,419 --> 00:11:21,079
and exclusion and it's kind of popped up

268
00:11:21,079 --> 00:11:23,039
under the radar in a couple of other

269
00:11:23,039 --> 00:11:24,569
places but it's never been made very

270
00:11:24,569 --> 00:11:26,729
explicit and it's never been thought

271
00:11:26,729 --> 00:11:30,119
about in a cryptographic context another

272
00:11:30,119 --> 00:11:32,879
nice way of or another nice feature of

273
00:11:32,879 --> 00:11:35,429
writing it down in this way is that we

274
00:11:35,429 --> 00:11:37,529
also can immediately learn this

275
00:11:37,529 --> 00:11:39,569
connection to threshold degree and

276
00:11:39,569 --> 00:11:41,819
threshold degree is similar to

277
00:11:41,819 --> 00:11:44,579
approximate degree but it only it's the

278
00:11:44,579 --> 00:11:46,709
degree required to sign represent a

279
00:11:46,709 --> 00:11:49,919
boolean function rather than represent

280
00:11:49,919 --> 00:11:53,459
within a constant and what is threshold

281
00:11:53,459 --> 00:11:55,259
degree relate to well just relates to

282
00:11:55,259 --> 00:11:56,549
these schemes where we have perfect

283
00:11:56,549 --> 00:11:59,039
reconstruction so it's like stacking

284
00:11:59,039 --> 00:12:00,389
these transparencies and getting the

285
00:12:00,389 --> 00:12:02,249
umbrella and we only have black and

286
00:12:02,249 --> 00:12:05,879
white pixels and finally another nice

287
00:12:05,879 --> 00:12:09,989
feature of this is that we can use this

288
00:12:09,989 --> 00:12:11,249
connection to show that the

289
00:12:11,249 --> 00:12:12,749
distributions that we need to sample

290
00:12:12,749 --> 00:12:14,909
from in our schemes are sample bowl with

291
00:12:14,909 --> 00:12:19,379
a c0 circuits as well okay so I mean

292
00:12:19,379 --> 00:12:21,029
obviously with this kind of connection

293
00:12:21,029 --> 00:12:22,979
to approximate degree we can consult the

294
00:12:22,979 --> 00:12:24,839
literature and we immediately obtain a

295
00:12:24,839 --> 00:12:26,729
whole bunch of schemes I've already told

296
00:12:26,729 --> 00:12:28,350
you about the aura majority ones there's

297
00:12:28,350 --> 00:12:30,959
one for element distinctness and there's

298
00:12:30,959 --> 00:12:33,509
these two here and these are threshold

299
00:12:33,509 --> 00:12:36,119
degree bounds and so we get secret

300
00:12:36,119 --> 00:12:37,829
sharing scheme for reconstruction by

301
00:12:37,829 --> 00:12:42,059
these functions and there are perfect

302
00:12:42,059 --> 00:12:44,609
reconstruction and it just follows from

303
00:12:44,609 --> 00:12:49,319
these following works immediately so let

304
00:12:49,319 --> 00:12:50,789
me take a couple of minutes now and tell

305
00:12:50,789 --> 00:12:52,529
you about a connection to secure

306
00:12:52,529 --> 00:12:55,559
multi-party computation so we have some

307
00:12:55,559 --> 00:12:58,379
client inputs x0 and x1 and they're

308
00:12:58,379 --> 00:13:01,319
trying to compute this function on their

309
00:13:01,319 --> 00:13:03,659
on their joint inputs and we want to go

310
00:13:03,659 --> 00:13:06,539
beyond an honest majority assumption and

311
00:13:06,539 --> 00:13:09,749
ask what if every every server is

312
00:13:09,749 --> 00:13:11,729
compromised in some way and it turns out

313
00:13:11,729 --> 00:13:13,739
that what I told you so far has

314
00:13:13,739 --> 00:13:14,680
applications to

315
00:13:14,680 --> 00:13:16,690
setting the global leakage of a

316
00:13:16,690 --> 00:13:21,339
low-complexity bit so what we're going

317
00:13:21,339 --> 00:13:23,980
to be talking about is t secure MPC

318
00:13:23,980 --> 00:13:26,730
protocols and all these are our

319
00:13:26,730 --> 00:13:29,860
protocols where our views of the end

320
00:13:29,860 --> 00:13:32,730
servers are t wise indistinguishable and

321
00:13:32,730 --> 00:13:34,720
why are we considering indistinguishable

322
00:13:34,720 --> 00:13:36,730
ax t in this sense well unlike and

323
00:13:36,730 --> 00:13:38,410
secret sharing it's essentially

324
00:13:38,410 --> 00:13:40,390
impossible to have T wise independence

325
00:13:40,390 --> 00:13:42,520
in these protocols because the servers

326
00:13:42,520 --> 00:13:43,540
are allowed to communicate with each

327
00:13:43,540 --> 00:13:47,920
other so a question is suppose we have a

328
00:13:47,920 --> 00:13:51,550
tea secure MPC can we say that it is

329
00:13:51,550 --> 00:13:52,990
secure against some leakage functions

330
00:13:52,990 --> 00:13:55,089
and answers yes it's secure against the

331
00:13:55,089 --> 00:13:57,370
leakage function L as long as the

332
00:13:57,370 --> 00:14:00,060
approximate degree of l is less than T

333
00:14:00,060 --> 00:14:02,380
and I'll note that these leakage

334
00:14:02,380 --> 00:14:04,089
functions what I told you about only

335
00:14:04,089 --> 00:14:06,430
suffice for views where the servers are

336
00:14:06,430 --> 00:14:08,860
have a view of a single bit and yes

337
00:14:08,860 --> 00:14:11,110
that's a that's a valid complaint but at

338
00:14:11,110 --> 00:14:14,770
least with functions like Oran and it

339
00:14:14,770 --> 00:14:15,880
doesn't really matter so much because

340
00:14:15,880 --> 00:14:19,360
you can take the you can take an oar of

341
00:14:19,360 --> 00:14:20,800
bits in any order without changing

342
00:14:20,800 --> 00:14:23,800
anything so anyway we get a win-win here

343
00:14:23,800 --> 00:14:27,160
and so if a function has low approximate

344
00:14:27,160 --> 00:14:29,080
degree then that's a win for MPC

345
00:14:29,080 --> 00:14:31,540
protocols in the worst case because it

346
00:14:31,540 --> 00:14:34,990
means every NPC protocol that's T secure

347
00:14:34,990 --> 00:14:37,000
for large enough t will be secure

348
00:14:37,000 --> 00:14:40,480
against leakage of that function but on

349
00:14:40,480 --> 00:14:41,800
the other hand of a function has very

350
00:14:41,800 --> 00:14:43,750
high approximate degree we can still be

351
00:14:43,750 --> 00:14:45,430
happy because we can get a secret

352
00:14:45,430 --> 00:14:46,930
sharing scheme with that function which

353
00:14:46,930 --> 00:14:54,250
has a better security guarantee ok so of

354
00:14:54,250 --> 00:14:55,480
course the title of the talk is about

355
00:14:55,480 --> 00:14:57,550
the complexity of these things and I've

356
00:14:57,550 --> 00:15:00,390
shown you five schemes so far that have

357
00:15:00,390 --> 00:15:02,680
reconstruction functions in ac0 or

358
00:15:02,680 --> 00:15:04,000
actually four schemes the majority

359
00:15:04,000 --> 00:15:05,770
function them so we know that

360
00:15:05,770 --> 00:15:07,959
reconstructions in ac0 but there's

361
00:15:07,959 --> 00:15:09,279
another perspective that we could

362
00:15:09,279 --> 00:15:12,040
consider here which is whether or not we

363
00:15:12,040 --> 00:15:14,800
can sample the schemes necessary with

364
00:15:14,800 --> 00:15:19,149
just a c0 circuits and it turns out that

365
00:15:19,149 --> 00:15:21,430
we can do this I won't go into the

366
00:15:21,430 --> 00:15:23,589
details so much of how we prove it but

367
00:15:23,589 --> 00:15:25,300
it turns out that we have a symmetric

368
00:15:25,300 --> 00:15:27,430
reconstruction function we can assume

369
00:15:27,430 --> 00:15:28,150
without loss of

370
00:15:28,150 --> 00:15:30,070
ality that our distributions in our

371
00:15:30,070 --> 00:15:32,050
scheme will be symmetric and just

372
00:15:32,050 --> 00:15:33,430
knowing that makes it quite easy to

373
00:15:33,430 --> 00:15:37,060
apply another work of viola or co-author

374
00:15:37,060 --> 00:15:39,210
and show that these distributions are

375
00:15:39,210 --> 00:15:43,360
sampleble and AC 0 and for some of the

376
00:15:43,360 --> 00:15:45,120
other functions I've told you about that

377
00:15:45,120 --> 00:15:47,920
are not symmetric we can just do a

378
00:15:47,920 --> 00:15:50,020
little bit of extra work and show that

379
00:15:50,020 --> 00:15:52,690
those schemes also support sample

380
00:15:52,690 --> 00:15:57,310
ability in a Caesar so it seems like a

381
00:15:57,310 --> 00:15:59,530
lot of good news so far I hope I mean we

382
00:15:59,530 --> 00:16:00,880
have these schemes and we have

383
00:16:00,880 --> 00:16:03,640
reconstruction in ac0 we have sampling

384
00:16:03,640 --> 00:16:06,250
of the shares in ac0 but I'm going to

385
00:16:06,250 --> 00:16:09,250
say I'm not satisfied so far and why am

386
00:16:09,250 --> 00:16:11,530
I not satisfied well we still have a

387
00:16:11,530 --> 00:16:14,830
polynomial gap between our security and

388
00:16:14,830 --> 00:16:17,860
reconstruction thresholds and we also

389
00:16:17,860 --> 00:16:21,190
only have a constant probability of

390
00:16:21,190 --> 00:16:22,750
success or a constant probability of

391
00:16:22,750 --> 00:16:25,960
failure so the question is can we

392
00:16:25,960 --> 00:16:28,120
address these two issues without

393
00:16:28,120 --> 00:16:30,300
sacrificing the main theme which is

394
00:16:30,300 --> 00:16:33,940
implementation in a 2-0 and yes we can

395
00:16:33,940 --> 00:16:36,970
do that just to skip to the main punch

396
00:16:36,970 --> 00:16:41,320
line if we increase our share links from

397
00:16:41,320 --> 00:16:43,000
being just single bits to being

398
00:16:43,000 --> 00:16:45,460
polynomial length shares then we can

399
00:16:45,460 --> 00:16:49,690
obtain a near threshold scheme and with

400
00:16:49,690 --> 00:16:52,600
only negligible reconstruction error and

401
00:16:52,600 --> 00:16:57,190
it's still all in ac0 so the details of

402
00:16:57,190 --> 00:16:59,800
how we exactly get here are you know

403
00:16:59,800 --> 00:17:01,930
outside the scope of this talk but the

404
00:17:01,930 --> 00:17:03,640
way that we do it is using a little bit

405
00:17:03,640 --> 00:17:05,770
of graph theory we use bipartite

406
00:17:05,770 --> 00:17:08,170
disperse or graphs what is such a graph

407
00:17:08,170 --> 00:17:10,990
well bipartite disperser graphs have n

408
00:17:10,990 --> 00:17:12,760
vertices on the left and M vertices on

409
00:17:12,760 --> 00:17:15,819
the right and it's a k epsilon dispersor

410
00:17:15,819 --> 00:17:19,810
if sufficiently large groups of vertices

411
00:17:19,810 --> 00:17:23,140
on the Left touch all but an epsilon

412
00:17:23,140 --> 00:17:26,880
fraction of vertices on the right

413
00:17:31,350 --> 00:17:35,309
very sensitive so how do we actually

414
00:17:35,309 --> 00:17:37,740
apply this a secret sharing so let's say

415
00:17:37,740 --> 00:17:39,809
that we start with some NK scheme l

416
00:17:39,809 --> 00:17:41,309
could be the one that we have for or

417
00:17:41,309 --> 00:17:42,990
that we've already talked about but

418
00:17:42,990 --> 00:17:45,960
anyway some ramp scheme and let's say

419
00:17:45,960 --> 00:17:48,270
that we have a k epsilon disperser

420
00:17:48,270 --> 00:17:51,330
bipartite disperse orgy then if you read

421
00:17:51,330 --> 00:17:54,000
our paper you can see how we define a

422
00:17:54,000 --> 00:17:55,830
new secret sharing scheme called our

423
00:17:55,830 --> 00:17:59,360
that just defined in terms of LNG and

424
00:17:59,360 --> 00:18:02,130
just I mean just a hint about how we do

425
00:18:02,130 --> 00:18:04,710
this is we have the vertices on the Left

426
00:18:04,710 --> 00:18:06,659
correspond to the parties and scheme l

427
00:18:06,659 --> 00:18:09,179
and the vertices on the right correspond

428
00:18:09,179 --> 00:18:12,480
to parties and scheme are any way with

429
00:18:12,480 --> 00:18:13,890
the way that we define it we can show

430
00:18:13,890 --> 00:18:18,419
that scheme r is a m1 minus epsilon m

431
00:18:18,419 --> 00:18:20,159
scheme so we've already increased our

432
00:18:20,159 --> 00:18:23,190
security guarantee to being against

433
00:18:23,190 --> 00:18:25,679
linearly size coalition's which is an

434
00:18:25,679 --> 00:18:27,840
improvement above among this which is

435
00:18:27,840 --> 00:18:31,350
probably a polynomial gap and MMR

436
00:18:31,350 --> 00:18:34,440
polynomial relate as well and in the way

437
00:18:34,440 --> 00:18:35,970
that we do this reconstruction is

438
00:18:35,970 --> 00:18:38,669
preserved in ac0 but we have to pay

439
00:18:38,669 --> 00:18:41,039
something and that the cost for us is

440
00:18:41,039 --> 00:18:43,559
that our shares get blown up from being

441
00:18:43,559 --> 00:18:45,360
just single bits to being polynomial and

442
00:18:45,360 --> 00:18:51,059
the number of parties and we can do even

443
00:18:51,059 --> 00:18:53,539
a little bit better than this so the

444
00:18:53,539 --> 00:18:56,780
last scheme I'll tell you about is that

445
00:18:56,780 --> 00:19:00,210
we can have a scheme that is for sharing

446
00:19:00,210 --> 00:19:03,419
2m parties and it has a security

447
00:19:03,419 --> 00:19:05,789
guarantee against Sigma FM parties and

448
00:19:05,789 --> 00:19:08,429
it can be reconstructed by Rho M parties

449
00:19:08,429 --> 00:19:10,919
and Sigma and Rho can be any constants

450
00:19:10,919 --> 00:19:12,809
you want you can just pick them so we

451
00:19:12,809 --> 00:19:14,760
can have a scheme that's secure against

452
00:19:14,760 --> 00:19:16,140
forty-nine percent of the parties but

453
00:19:16,140 --> 00:19:18,059
with 49.1 percent parties you can

454
00:19:18,059 --> 00:19:20,429
reconstruct the secret at least for

455
00:19:20,429 --> 00:19:24,900
sufficiently large n and the alphabets

456
00:19:24,900 --> 00:19:27,870
are share length year is polynomial as I

457
00:19:27,870 --> 00:19:31,440
told you it would have to be and the way

458
00:19:31,440 --> 00:19:32,610
that we do this is we use a slight

459
00:19:32,610 --> 00:19:34,890
variation of our disperser graphs and we

460
00:19:34,890 --> 00:19:36,480
want disperser graph status births well

461
00:19:36,480 --> 00:19:38,850
but not too well so maybe that's an

462
00:19:38,850 --> 00:19:40,020
interesting idea you haven't heard about

463
00:19:40,020 --> 00:19:42,270
but we were able to define what we need

464
00:19:42,270 --> 00:19:43,059
improve that they

465
00:19:43,059 --> 00:19:46,749
just and yes the scheme is still

466
00:19:46,749 --> 00:19:49,389
implementable in ac0 and what about the

467
00:19:49,389 --> 00:19:51,460
error rate well we can just repeat the

468
00:19:51,460 --> 00:19:53,499
scheme as many times as you like and

469
00:19:53,499 --> 00:19:56,409
take an approximate majority and just

470
00:19:56,409 --> 00:19:58,990
buy a Chernoff bound the array can

471
00:19:58,990 --> 00:20:01,120
become negligible and the share link

472
00:20:01,120 --> 00:20:06,519
will still just be paulino okay so just

473
00:20:06,519 --> 00:20:07,840
a few take-home points and open

474
00:20:07,840 --> 00:20:11,049
questions I guess the first take home is

475
00:20:11,049 --> 00:20:13,950
that this duality connection between

476
00:20:13,950 --> 00:20:16,559
founded in distinguish ability and

477
00:20:16,559 --> 00:20:20,080
approximate degree gives us a wide range

478
00:20:20,080 --> 00:20:21,909
of secret sharing schemes and they just

479
00:20:21,909 --> 00:20:23,379
come immediately out of the approximate

480
00:20:23,379 --> 00:20:27,429
degree literature all many of the

481
00:20:27,429 --> 00:20:28,779
schemes I've given you our implementable

482
00:20:28,779 --> 00:20:30,669
in ac0 not only in terms of

483
00:20:30,669 --> 00:20:32,919
reconstruction but also share sampling

484
00:20:32,919 --> 00:20:35,679
and probably the first major open

485
00:20:35,679 --> 00:20:37,860
question here it's going to get a better

486
00:20:37,860 --> 00:20:40,360
lower bound on the approximate degree of

487
00:20:40,360 --> 00:20:42,369
ac0 functions and at the moment the best

488
00:20:42,369 --> 00:20:45,249
we have is the element distinctness

489
00:20:45,249 --> 00:20:47,529
function has approximate degree order n

490
00:20:47,529 --> 00:20:49,779
to the two-thirds but whether we can do

491
00:20:49,779 --> 00:20:51,070
better than that would be a nice thing

492
00:20:51,070 --> 00:20:53,830
to know because that would give us a

493
00:20:53,830 --> 00:20:55,539
secret sharing scheme with single bit

494
00:20:55,539 --> 00:20:57,249
shares and an even better security

495
00:20:57,249 --> 00:21:03,009
guarantee I've given you a trade-off

496
00:21:03,009 --> 00:21:04,749
between the length of our secret shares

497
00:21:04,749 --> 00:21:07,779
and our security but of course it could

498
00:21:07,779 --> 00:21:09,309
be improved can we do something better

499
00:21:09,309 --> 00:21:11,080
than polynomial link shares and still

500
00:21:11,080 --> 00:21:13,450
get the same near threshold secret

501
00:21:13,450 --> 00:21:16,480
sharing and then lastly you can ask what

502
00:21:16,480 --> 00:21:19,720
if rather than sampling from perfectly k

503
00:21:19,720 --> 00:21:21,580
wise independent distributions we sample

504
00:21:21,580 --> 00:21:23,830
from approximately bounded in a single

505
00:21:23,830 --> 00:21:26,799
distributions but for this i'll have to

506
00:21:26,799 --> 00:21:28,679
refer you to a future we're coming soon

507
00:21:28,679 --> 00:21:32,700
so that's it thank you very much

