1
00:00:04,430 --> 00:00:07,080
yeah good morning everyone

2
00:00:07,080 --> 00:00:09,150
this talk is gonna be about how to prove

3
00:00:09,150 --> 00:00:12,629
knowledge of small secrets this is joint

4
00:00:12,629 --> 00:00:15,389
work with even done God and Casper

5
00:00:15,389 --> 00:00:16,830
Larson and Michael Nelson from Aarhus

6
00:00:16,830 --> 00:00:24,060
University um it's very very short very

7
00:00:24,060 --> 00:00:26,610
very short reminder about what where

8
00:00:26,610 --> 00:00:28,620
what is your knowledge proves you all

9
00:00:28,620 --> 00:00:30,240
know that just just to recap so we all

10
00:00:30,240 --> 00:00:32,910
know what we're talking about we have a

11
00:00:32,910 --> 00:00:35,010
relation R and we have a proof of p1 a

12
00:00:35,010 --> 00:00:38,640
verifier p2 there's a statement we both

13
00:00:38,640 --> 00:00:42,510
proven the verifier aware of and the

14
00:00:42,510 --> 00:00:44,699
prover wants to come convinced the

15
00:00:44,699 --> 00:00:47,730
verifier of the truth of statement we

16
00:00:47,730 --> 00:00:50,899
using a interactive protocol PI and

17
00:00:50,899 --> 00:00:55,140
therefore it has a weakness W and they

18
00:00:55,140 --> 00:00:57,089
exchanged messages and the whole

19
00:00:57,089 --> 00:00:59,069
protocol has to have the following three

20
00:00:59,069 --> 00:01:03,199
properties first of all we want that

21
00:01:03,199 --> 00:01:05,930
whenever they prove er actually has

22
00:01:05,930 --> 00:01:08,520
correct witness for the relation that

23
00:01:08,520 --> 00:01:13,409
the verifier will accept seconds if the

24
00:01:13,409 --> 00:01:16,049
prover starts this protocol with

25
00:01:16,049 --> 00:01:17,280
something which is not a correct witness

26
00:01:17,280 --> 00:01:19,740
for the relation then the verifier is

27
00:01:19,740 --> 00:01:21,810
not supposed to accept and your

28
00:01:21,810 --> 00:01:27,570
knowledge meaning that you can simulate

29
00:01:27,570 --> 00:01:30,030
the proper protocol transcript only

30
00:01:30,030 --> 00:01:32,609
having the relation and the statement so

31
00:01:32,609 --> 00:01:38,939
being able to generate a two sample from

32
00:01:38,939 --> 00:01:41,460
the distribution that is close to

33
00:01:41,460 --> 00:01:44,070
protocol transcripts without having the

34
00:01:44,070 --> 00:01:48,509
witness efficiently why do you why would

35
00:01:48,509 --> 00:01:52,880
you like to prove that a secret is short

36
00:01:52,880 --> 00:01:57,899
first of all very often when we use your

37
00:01:57,899 --> 00:01:59,880
knowledge proofs in interactive

38
00:01:59,880 --> 00:02:01,200
protocols we use them as a building

39
00:02:01,200 --> 00:02:03,240
block for example to show that we have

40
00:02:03,240 --> 00:02:08,460
knowledge of let's say the preimage of a

41
00:02:08,460 --> 00:02:10,110
ciphertext so we know plaintext and we

42
00:02:10,110 --> 00:02:12,150
know some randomness and they encrypt to

43
00:02:12,150 --> 00:02:15,050
a certain ciphertext

44
00:02:15,640 --> 00:02:20,420
then for special encryption schemes we

45
00:02:20,420 --> 00:02:21,980
may have to prove an additional thing

46
00:02:21,980 --> 00:02:23,420
which is not just that we know a

47
00:02:23,420 --> 00:02:24,890
plaintext and that we know some

48
00:02:24,890 --> 00:02:26,900
randomness but that both of them fulfill

49
00:02:26,900 --> 00:02:30,950
certain criteria of shortness so for

50
00:02:30,950 --> 00:02:32,330
example if you think about lettuce base

51
00:02:32,330 --> 00:02:35,420
crypto systems your encryption procedure

52
00:02:35,420 --> 00:02:36,830
will always include something like

53
00:02:36,830 --> 00:02:39,140
simple from a Gaussian distribution or

54
00:02:39,140 --> 00:02:42,110
from some simple randomness from some

55
00:02:42,110 --> 00:02:46,940
small interval or so and you will

56
00:02:46,940 --> 00:02:48,860
actually have to prove in zero knowledge

57
00:02:48,860 --> 00:02:52,850
and an interactive protocol that this is

58
00:02:52,850 --> 00:02:57,410
fulfilled why so if you if you think

59
00:02:57,410 --> 00:02:59,720
about it when you decrypt in space

60
00:02:59,720 --> 00:03:02,000
crypto systems you mostly get these it's

61
00:03:02,000 --> 00:03:05,060
a noisy plaintext right you get both

62
00:03:05,060 --> 00:03:08,720
your message plus some some randomness

63
00:03:08,720 --> 00:03:10,520
on top which if you do a modular

64
00:03:10,520 --> 00:03:13,580
reduction it goes away but then the

65
00:03:13,580 --> 00:03:16,220
problem is if your if your noise here

66
00:03:16,220 --> 00:03:19,400
gets too large then depending on the

67
00:03:19,400 --> 00:03:21,620
message this may wrap around or not and

68
00:03:21,620 --> 00:03:24,220
this you can visit an adversary and

69
00:03:24,220 --> 00:03:27,140
interactive protocol could use to figure

70
00:03:27,140 --> 00:03:30,650
out which messages for example another

71
00:03:30,650 --> 00:03:33,290
party encrypted and depending on if the

72
00:03:33,290 --> 00:03:36,590
protocol aborts or not and this we want

73
00:03:36,590 --> 00:03:38,990
to avoid and therefore it's very crucial

74
00:03:38,990 --> 00:03:41,989
to have these in knowledge groups for

75
00:03:41,989 --> 00:03:45,140
example in this situation more in

76
00:03:45,140 --> 00:03:48,670
general in our work we define

77
00:03:48,670 --> 00:03:50,750
homomorphic one-way functions over the

78
00:03:50,750 --> 00:03:53,239
integers as the main building block

79
00:03:53,239 --> 00:03:55,580
we're talking about so what is the what

80
00:03:55,580 --> 00:03:57,410
is this homomorphic one-way function

81
00:03:57,410 --> 00:04:00,140
over the integers or short IV one-way

82
00:04:00,140 --> 00:04:02,090
function so assume we have an abelian

83
00:04:02,090 --> 00:04:06,230
group G and we met from the integers or

84
00:04:06,230 --> 00:04:07,880
a vector of integers into the civilian

85
00:04:07,880 --> 00:04:12,380
group G then such a such a map is called

86
00:04:12,380 --> 00:04:14,690
a hormone morphic when we function over

87
00:04:14,690 --> 00:04:17,000
the integers if well first of all if it

88
00:04:17,000 --> 00:04:19,399
is a one-way function so we assume

89
00:04:19,399 --> 00:04:22,700
that's evaluating the function is can

90
00:04:22,700 --> 00:04:27,170
in polynomial time but if I give you an

91
00:04:27,170 --> 00:04:30,830
element from the civilian group G and

92
00:04:30,830 --> 00:04:33,950
you want to find a pre-image then it is

93
00:04:33,950 --> 00:04:37,160
very hard to find one assuming that it's

94
00:04:37,160 --> 00:04:39,530
supposed to be short this is whether the

95
00:04:39,530 --> 00:04:42,830
shortness comes into play and third

96
00:04:42,830 --> 00:04:46,390
third one third quartile criterion is

97
00:04:46,390 --> 00:04:48,710
the home offering property meaning that

98
00:04:48,710 --> 00:04:51,320
that the map into the abelian group G is

99
00:04:51,320 --> 00:04:53,000
supposed to carry over some of the

100
00:04:53,000 --> 00:04:54,920
additive structure into the abelian

101
00:04:54,920 --> 00:04:59,860
group as an example in addition to

102
00:04:59,860 --> 00:05:03,860
lattice base cryptosystems one could

103
00:05:03,860 --> 00:05:06,110
consider G G H hashing as the prime

104
00:05:06,110 --> 00:05:09,140
example of what is such a homomorphic

105
00:05:09,140 --> 00:05:13,490
one-way function so you sample in nggh

106
00:05:13,490 --> 00:05:15,950
hashing what you do is you sample a

107
00:05:15,950 --> 00:05:18,770
random matrix M which is very wide on

108
00:05:18,770 --> 00:05:20,750
one side and then compressing on the

109
00:05:20,750 --> 00:05:25,310
other side and then you define F to be

110
00:05:25,310 --> 00:05:28,580
the application of this map to a binary

111
00:05:28,580 --> 00:05:32,330
vector and so what you throw in is what

112
00:05:32,330 --> 00:05:34,010
you input in this function is a binary

113
00:05:34,010 --> 00:05:36,140
vector that is rather long let's say R

114
00:05:36,140 --> 00:05:39,740
and what you get out is a lot shorter

115
00:05:39,740 --> 00:05:43,190
vector but which is from the elements

116
00:05:43,190 --> 00:05:46,100
from Z Q and not just binary rank the

117
00:05:46,100 --> 00:05:50,210
binary elements and it is it is known

118
00:05:50,210 --> 00:05:53,570
since 1996 that this finding finding

119
00:05:53,570 --> 00:05:57,410
short three images for for this GGH hash

120
00:05:57,410 --> 00:05:59,810
function produces two known lattice

121
00:05:59,810 --> 00:06:03,250
problems which we think are Harbhajan

122
00:06:06,670 --> 00:06:10,670
other examples for for in homo fig

123
00:06:10,670 --> 00:06:12,230
one-way functions would be for example

124
00:06:12,230 --> 00:06:14,420
the swift hash function as a set ring

125
00:06:14,420 --> 00:06:17,660
lwe encryption or for example integer

126
00:06:17,660 --> 00:06:24,110
commitments so the title of this talk is

127
00:06:24,110 --> 00:06:28,010
how to prove that something is short the

128
00:06:28,010 --> 00:06:30,440
first idea coming to once might may be

129
00:06:30,440 --> 00:06:33,830
let's use Sigma protocols just to remind

130
00:06:33,830 --> 00:06:36,229
you what Sigma protocols are

131
00:06:36,229 --> 00:06:39,889
you simple an axillary value s that is

132
00:06:39,889 --> 00:06:41,150
supposed to be short that's what the

133
00:06:41,150 --> 00:06:42,680
proof of does she applies to one

134
00:06:42,680 --> 00:06:44,479
wavefunction sends it over to the very

135
00:06:44,479 --> 00:06:46,400
fire and the verifier decide he flips a

136
00:06:46,400 --> 00:06:49,310
bit and says well I ever show me that

137
00:06:49,310 --> 00:06:52,729
this value here was good so send it to

138
00:06:52,729 --> 00:06:55,729
me if zero or if E is one sent me the

139
00:06:55,729 --> 00:06:59,300
sum of the two values s and X where X is

140
00:06:59,300 --> 00:07:02,509
the element you want to prove shot

141
00:07:02,509 --> 00:07:09,430
myself so it's typical signal protocol

142
00:07:09,580 --> 00:07:11,990
in addition to two but we don't have

143
00:07:11,990 --> 00:07:14,330
normal signal protocols here since this

144
00:07:14,330 --> 00:07:16,340
is smaller than B and our X is supposed

145
00:07:16,340 --> 00:07:19,370
to be smaller than B the sum of the two

146
00:07:19,370 --> 00:07:22,669
must be smaller than to B it will turn

147
00:07:22,669 --> 00:07:26,000
out that what what we can verify in the

148
00:07:26,000 --> 00:07:27,650
end and how far this is away from the

149
00:07:27,650 --> 00:07:30,529
original bound is actually very crucial

150
00:07:30,529 --> 00:07:33,319
and we call this the soundness lag in in

151
00:07:33,319 --> 00:07:38,509
our work and as you know Sigma protocol

152
00:07:38,509 --> 00:07:40,479
if you do it this way only gives you

153
00:07:40,479 --> 00:07:44,750
soundness one half basically because you

154
00:07:44,750 --> 00:07:50,389
only have one bit challenge right so if

155
00:07:50,389 --> 00:07:54,550
you want to have security against

156
00:07:54,550 --> 00:07:57,439
cheating approver with probability two

157
00:07:57,439 --> 00:07:59,659
to a minus K then you have to repeat

158
00:07:59,659 --> 00:08:02,120
this thing K times so you have to

159
00:08:02,120 --> 00:08:05,020
generate K of these axillary values

160
00:08:05,020 --> 00:08:10,310
which we call the overhead so first of

161
00:08:10,310 --> 00:08:12,229
all the this Sigma protocol gives you a

162
00:08:12,229 --> 00:08:15,020
very very small sound and slag so can we

163
00:08:15,020 --> 00:08:16,580
also make the overhead small then we

164
00:08:16,580 --> 00:08:18,830
would be definitely done but then I

165
00:08:18,830 --> 00:08:21,770
probably wouldn't stand here turns out

166
00:08:21,770 --> 00:08:24,789
it's not that easy

167
00:08:25,990 --> 00:08:28,099
firstly it would be like let's let's

168
00:08:28,099 --> 00:08:29,719
take this year from a larger interval

169
00:08:29,719 --> 00:08:32,089
like what could possibly go wrong

170
00:08:32,089 --> 00:08:34,549
correctness would still be the whole

171
00:08:34,549 --> 00:08:36,440
thing would still be correct but if you

172
00:08:36,440 --> 00:08:37,940
if you want to prove that you can

173
00:08:37,940 --> 00:08:39,860
extract a witness using this special

174
00:08:39,860 --> 00:08:43,429
soundness for a property then you would

175
00:08:43,429 --> 00:08:46,790
normally do this by taking to accepting

176
00:08:46,790 --> 00:08:49,320
transcripts with the same Excel revalue

177
00:08:49,320 --> 00:08:51,720
and subtracting the equations from each

178
00:08:51,720 --> 00:08:53,940
other which are supposed to hold but

179
00:08:53,940 --> 00:08:56,279
then it's quite immediately to have to

180
00:08:56,279 --> 00:08:59,100
divide by the difference of the

181
00:08:59,100 --> 00:09:02,910
challenges over the integers but if E is

182
00:09:02,910 --> 00:09:05,730
0-1 then the difference is one or minus

183
00:09:05,730 --> 00:09:07,230
one right you can always divide by that

184
00:09:07,230 --> 00:09:10,259
but if you choose you from a larger

185
00:09:10,259 --> 00:09:11,910
interval you may have to divide by two

186
00:09:11,910 --> 00:09:14,370
or three five which over the integers is

187
00:09:14,370 --> 00:09:15,899
not always possible or in the worst case

188
00:09:15,899 --> 00:09:21,990
by zero so but don't worry not all hope

189
00:09:21,990 --> 00:09:23,720
is lost

190
00:09:23,720 --> 00:09:26,430
they were most straightforward idea

191
00:09:26,430 --> 00:09:28,980
would now be what can we if we can't go

192
00:09:28,980 --> 00:09:31,560
for one ciphertext and make it better or

193
00:09:31,560 --> 00:09:32,970
one preimage and make it better

194
00:09:32,970 --> 00:09:37,470
can we prove knowledge of a lot of them

195
00:09:37,470 --> 00:09:40,019
at the same time while making the

196
00:09:40,019 --> 00:09:43,110
overhead quite slow if you do if you

197
00:09:43,110 --> 00:09:45,389
just do the naive repetition of Sigma

198
00:09:45,389 --> 00:09:49,800
protocols you get K overhead where K is

199
00:09:49,800 --> 00:09:52,199
the statistical security parameter well

200
00:09:52,199 --> 00:09:54,839
as the sounds like is very small in some

201
00:09:54,839 --> 00:09:57,899
work by camera and download in 2009 they

202
00:09:57,899 --> 00:10:00,149
showed that basically the complete

203
00:10:00,149 --> 00:10:02,839
opposite also holds that you can have

204
00:10:02,839 --> 00:10:05,160
soundless like that is exponentially far

205
00:10:05,160 --> 00:10:06,329
away from what you actually wanted to

206
00:10:06,329 --> 00:10:08,670
prove but on the other hand that the

207
00:10:08,670 --> 00:10:14,519
overhead is very very small in the

208
00:10:14,519 --> 00:10:18,420
speeds speeds and PC protocol there was

209
00:10:18,420 --> 00:10:20,130
some additional that's a trade-off

210
00:10:20,130 --> 00:10:23,550
between these two things where they

211
00:10:23,550 --> 00:10:25,560
achieve polynomial sounds like and

212
00:10:25,560 --> 00:10:27,959
logarithmic overhead using some

213
00:10:27,959 --> 00:10:32,430
techniques due to due to Nielsen and

214
00:10:32,430 --> 00:10:37,410
Alon D and in in this work we show that

215
00:10:37,410 --> 00:10:41,430
by having slightly super polynomial

216
00:10:41,430 --> 00:10:43,949
sounds like we can actually go down to

217
00:10:43,949 --> 00:10:47,339
constant overhead again there the reason

218
00:10:47,339 --> 00:10:50,310
why we care about this is this overhead

219
00:10:50,310 --> 00:10:51,990
means additional messages we have to

220
00:10:51,990 --> 00:10:55,110
sent an MPC protocol if we use zero

221
00:10:55,110 --> 00:10:57,120
knowledge proof and

222
00:10:57,120 --> 00:11:00,220
the less we send the better for NPC in

223
00:11:00,220 --> 00:11:04,830
the real world so how do we get down to

224
00:11:04,830 --> 00:11:09,250
two constant overhead so the first step

225
00:11:09,250 --> 00:11:12,640
of a protocol let's say we have we have

226
00:11:12,640 --> 00:11:15,270
n values of which we want to prove

227
00:11:15,270 --> 00:11:20,050
knowledge of so I'd say we have x i4 m

228
00:11:20,050 --> 00:11:22,149
x1 to xn and what we do in the first

229
00:11:22,149 --> 00:11:25,959
step is we sample T auxilary values for

230
00:11:25,959 --> 00:11:27,399
a T which is supposed to be defined

231
00:11:27,399 --> 00:11:31,000
later so what we do is they first of all

232
00:11:31,000 --> 00:11:33,130
a traditional cap and choose where the

233
00:11:33,130 --> 00:11:35,610
prover chooses a lot of auxilary values

234
00:11:35,610 --> 00:11:38,320
since applies the function f sends them

235
00:11:38,320 --> 00:11:39,700
over to the verifier the verifier

236
00:11:39,700 --> 00:11:41,560
chooses the subset and the prover opens

237
00:11:41,560 --> 00:11:46,000
that subset to him so the prover looks

238
00:11:46,000 --> 00:11:47,350
at all of at the verifier looks that all

239
00:11:47,350 --> 00:11:50,350
of these opened choices that he made and

240
00:11:50,350 --> 00:11:52,839
if they're all like short and if they

241
00:11:52,839 --> 00:11:56,230
actually all exist then in the next step

242
00:11:56,230 --> 00:11:59,020
the prover will send him for the

243
00:11:59,020 --> 00:12:04,690
remaining values sums of the secrets

244
00:12:04,690 --> 00:12:06,339
that he wants to prove knowledge of and

245
00:12:06,339 --> 00:12:09,700
the accessory value so what do we

246
00:12:09,700 --> 00:12:15,430
intuitively achieve by doing this for

247
00:12:15,430 --> 00:12:17,350
the using the cut and choose what we get

248
00:12:17,350 --> 00:12:19,390
is that most of the axillary values that

249
00:12:19,390 --> 00:12:24,510
we're not opened are also short and are

250
00:12:24,510 --> 00:12:28,329
and do also exist now if we send sums

251
00:12:28,329 --> 00:12:31,930
with all the secrets that we have what

252
00:12:31,930 --> 00:12:34,930
is actually true is that most of the

253
00:12:34,930 --> 00:12:37,060
values you want to prove knowledge of do

254
00:12:37,060 --> 00:12:41,250
exist and are short so these so

255
00:12:41,250 --> 00:12:45,220
basically we do cut and choose on random

256
00:12:45,220 --> 00:12:47,230
values but at the same time achieve a

257
00:12:47,230 --> 00:12:49,839
cut and choose affect on what we

258
00:12:49,839 --> 00:12:52,029
actually want to prove knowledge of so

259
00:12:52,029 --> 00:12:54,220
we start out by n values we want to

260
00:12:54,220 --> 00:12:56,800
prove knowledge of and doing this we get

261
00:12:56,800 --> 00:13:01,450
down to K that are still to be to be

262
00:13:01,450 --> 00:13:03,520
proven where K is the statistical

263
00:13:03,520 --> 00:13:06,420
security parameter

264
00:13:06,529 --> 00:13:10,220
and what we show in our work is that if

265
00:13:10,220 --> 00:13:13,639
you said this T to be three times n so

266
00:13:13,639 --> 00:13:18,290
linear in the number of values you want

267
00:13:18,290 --> 00:13:21,499
to prove knowledge of then everything is

268
00:13:21,499 --> 00:13:23,689
fine normal cut and choose you would set

269
00:13:23,689 --> 00:13:26,600
T to be 2 n but we have to do some

270
00:13:26,600 --> 00:13:28,339
rejection sampling in order to keep the

271
00:13:28,339 --> 00:13:31,879
the sound is like small and we we cope

272
00:13:31,879 --> 00:13:33,860
for the rejections by having this T to

273
00:13:33,860 --> 00:13:35,870
be a little bit larger and in addition

274
00:13:35,870 --> 00:13:39,589
we show that you do not in in in the

275
00:13:39,589 --> 00:13:42,319
work in in speech too they need to

276
00:13:42,319 --> 00:13:44,540
assume random Oracle's in order to be

277
00:13:44,540 --> 00:13:46,100
able to extract and we get around this

278
00:13:46,100 --> 00:13:49,009
using some some some interesting

279
00:13:49,009 --> 00:13:52,220
techniques so now that we're done with

280
00:13:52,220 --> 00:13:56,569
this knowledge really done from n 2k

281
00:13:56,569 --> 00:13:58,610
unproven images free images

282
00:13:58,610 --> 00:14:01,910
let's get from k to 0 so how do we do

283
00:14:01,910 --> 00:14:03,639
that

284
00:14:03,639 --> 00:14:06,980
the idea is to basically do the same as

285
00:14:06,980 --> 00:14:09,649
we did before with the cashews but

286
00:14:09,649 --> 00:14:11,240
instead of going for each value

287
00:14:11,240 --> 00:14:14,439
individually we let the verifier sample

288
00:14:14,439 --> 00:14:18,769
some random sums of of these pre images

289
00:14:18,769 --> 00:14:21,439
and let the vary that approver proof

290
00:14:21,439 --> 00:14:26,300
knowledge of these and for this proof we

291
00:14:26,300 --> 00:14:27,740
then use the same cut and choose as

292
00:14:27,740 --> 00:14:35,059
before again so why why do we hope that

293
00:14:35,059 --> 00:14:36,559
this works what is the intuition behind

294
00:14:36,559 --> 00:14:40,550
that the intuition is to let's look at

295
00:14:40,550 --> 00:14:42,939
this from the balls and bins perspective

296
00:14:42,939 --> 00:14:45,350
let's say the prove the verify assess

297
00:14:45,350 --> 00:14:47,870
the approver put these values into the

298
00:14:47,870 --> 00:14:49,550
first bin these values into the second

299
00:14:49,550 --> 00:14:51,529
bin and these values into the third pin

300
00:14:51,529 --> 00:14:55,160
and then prove me knowledge of the sum

301
00:14:55,160 --> 00:14:58,399
of all of these values right then he's

302
00:14:58,399 --> 00:15:00,319
then the verifier is going to be happy

303
00:15:00,319 --> 00:15:03,769
if let's say this this red one these red

304
00:15:03,769 --> 00:15:06,199
ones are the ones we didn't we weren't

305
00:15:06,199 --> 00:15:09,019
able to explain yet then if there's only

306
00:15:09,019 --> 00:15:11,449
one of these unexplained or bad pre

307
00:15:11,449 --> 00:15:13,550
images in the bucket then we're happy

308
00:15:13,550 --> 00:15:15,860
and if there's 0 2 or 3 then we're not

309
00:15:15,860 --> 00:15:17,540
that happy

310
00:15:17,540 --> 00:15:19,100
the reason

311
00:15:19,100 --> 00:15:22,100
for the happiness of the verifier can be

312
00:15:22,100 --> 00:15:24,700
found in the linearity of the

313
00:15:24,700 --> 00:15:27,590
homomorphic property of the one-way

314
00:15:27,590 --> 00:15:30,560
function so assume we already have an X

315
00:15:30,560 --> 00:15:33,560
for and we have an X 9 to explain

316
00:15:33,560 --> 00:15:38,180
certain values and now we're left to in

317
00:15:38,180 --> 00:15:39,730
the soundest proof really left with

318
00:15:39,730 --> 00:15:43,550
extracting an X 3 and the proven was

319
00:15:43,550 --> 00:15:45,800
actually able to convince us that the

320
00:15:45,800 --> 00:15:49,550
sum of these values is short then since

321
00:15:49,550 --> 00:15:51,020
we already know that the other two

322
00:15:51,020 --> 00:15:53,000
values in the equation are short we can

323
00:15:53,000 --> 00:15:58,960
just like subtract them from from the

324
00:15:58,960 --> 00:16:01,870
since the proof of that the sum is short

325
00:16:01,870 --> 00:16:05,620
is also sound we can just get the

326
00:16:05,620 --> 00:16:08,540
extracted preimage there subtract the X

327
00:16:08,540 --> 00:16:12,490
4 X 9 and there we go we have a

328
00:16:12,490 --> 00:16:17,660
pre-image for that is that it goes to

329
00:16:17,660 --> 00:16:20,000
the same value as X 3 and it's also

330
00:16:20,000 --> 00:16:24,620
short so that's that's the most

331
00:16:24,620 --> 00:16:28,190
fundamental insight and so now we just

332
00:16:28,190 --> 00:16:32,720
have to for a in an actual proof now we

333
00:16:32,720 --> 00:16:35,030
just have to figure out how often does

334
00:16:35,030 --> 00:16:36,830
this event happened so we know how often

335
00:16:36,830 --> 00:16:42,530
the verifier has to generate sums in our

336
00:16:42,530 --> 00:16:46,400
work we're able to so but what we do is

337
00:16:46,400 --> 00:16:48,440
we establish a certain invariant which

338
00:16:48,440 --> 00:16:55,730
is that if you if you for a certain set

339
00:16:55,730 --> 00:17:00,020
of bins and their elements and if you

340
00:17:00,020 --> 00:17:01,430
should play this game a few number of

341
00:17:01,430 --> 00:17:04,819
times we show that with probability

342
00:17:04,819 --> 00:17:08,150
exponential small and the number of bad

343
00:17:08,150 --> 00:17:11,480
pre images you would be able so this

344
00:17:11,480 --> 00:17:14,599
this event will occur often enough to be

345
00:17:14,599 --> 00:17:19,160
able to extract for a to be able to

346
00:17:19,160 --> 00:17:21,859
extract so so this this holds for

347
00:17:21,859 --> 00:17:25,699
certain choices of B and T so but

348
00:17:25,699 --> 00:17:29,900
unfortunately this goes the D the

349
00:17:29,900 --> 00:17:32,720
probability goes actually down

350
00:17:32,720 --> 00:17:34,429
in the number of bad preimages right so

351
00:17:34,429 --> 00:17:37,549
if we if we have let's say in one round

352
00:17:37,549 --> 00:17:40,070
if we have extracted half of them then

353
00:17:40,070 --> 00:17:43,130
the next realm with only probability 2

354
00:17:43,130 --> 00:17:46,280
to the minus K over 2 we can extract the

355
00:17:46,280 --> 00:17:50,120
rest so we actually have to play this

356
00:17:50,120 --> 00:17:53,169
game now 2 times right

357
00:17:53,169 --> 00:17:58,850
we moreover then show that actually if

358
00:17:58,850 --> 00:18:02,870
we if we start with K sums the first

359
00:18:02,870 --> 00:18:05,720
time in the first round and we extract

360
00:18:05,720 --> 00:18:08,780
that say half of the preimages then the

361
00:18:08,780 --> 00:18:11,929
second time we actually only need to

362
00:18:11,929 --> 00:18:15,860
have K half of these of this sums or

363
00:18:15,860 --> 00:18:18,500
buckets in every in every such instance

364
00:18:18,500 --> 00:18:21,559
and we now have two instant to insist to

365
00:18:21,559 --> 00:18:25,400
do but you know the number of packets

366
00:18:25,400 --> 00:18:27,380
goes by in half you play the game twice

367
00:18:27,380 --> 00:18:29,059
so like it cancels out and actually the

368
00:18:29,059 --> 00:18:30,530
number of sums you play around this

369
00:18:30,530 --> 00:18:36,890
constant in addition as you as you as

370
00:18:36,890 --> 00:18:39,350
you now see if we if we go in half in

371
00:18:39,350 --> 00:18:42,110
the first round and we go in half and

372
00:18:42,110 --> 00:18:44,030
the second round again we have to play

373
00:18:44,030 --> 00:18:46,299
this game elaborate with number of times

374
00:18:46,299 --> 00:18:49,580
so this is already like the overall

375
00:18:49,580 --> 00:18:52,130
protocol in the first in the first step

376
00:18:52,130 --> 00:18:53,860
as I said you do the cut and choose and

377
00:18:53,860 --> 00:18:56,659
open the sum of the auxilary value and

378
00:18:56,659 --> 00:18:58,490
the secret you want to prove knowledge

379
00:18:58,490 --> 00:19:01,640
of and in the second step you do a cut

380
00:19:01,640 --> 00:19:03,530
and choose again but this time instead

381
00:19:03,530 --> 00:19:05,210
of the actual elements you would use

382
00:19:05,210 --> 00:19:09,049
these random sums as chosen as explained

383
00:19:09,049 --> 00:19:15,500
before so what about the overhead if you

384
00:19:15,500 --> 00:19:17,510
have let's say a constant number of sums

385
00:19:17,510 --> 00:19:21,350
which is let's say linear in K in every

386
00:19:21,350 --> 00:19:22,730
in every round that you play and you

387
00:19:22,730 --> 00:19:25,220
play a lower number of rounds all in all

388
00:19:25,220 --> 00:19:27,710
you will have K times low K sum so you

389
00:19:27,710 --> 00:19:29,059
have to prove knowledge of so we have to

390
00:19:29,059 --> 00:19:31,820
choose n to be bigger than K times low K

391
00:19:31,820 --> 00:19:35,980
to get overhead that is constant

392
00:19:35,980 --> 00:19:38,659
additionally the cotton juice is

393
00:19:38,659 --> 00:19:40,340
actually imperfect right from the first

394
00:19:40,340 --> 00:19:44,120
step we had that K from the N values K

395
00:19:44,120 --> 00:19:44,659
are still

396
00:19:44,659 --> 00:19:46,220
remaining unexplained right this will

397
00:19:46,220 --> 00:19:50,210
also happen to us again if we if we if

398
00:19:50,210 --> 00:19:52,099
we do the cashews in the second step but

399
00:19:52,099 --> 00:19:55,009
we showed it you know this doesn't the

400
00:19:55,009 --> 00:19:56,179
chance that this is actually like

401
00:19:56,179 --> 00:19:58,789
matters is very very small so we kind of

402
00:19:58,789 --> 00:20:03,859
get away a caveat is if we if we

403
00:20:03,859 --> 00:20:05,899
actually try to prove the soundness

404
00:20:05,899 --> 00:20:09,409
bound a bound on the sound is like then

405
00:20:09,409 --> 00:20:11,659
in our work at least we were only able

406
00:20:11,659 --> 00:20:14,149
to achieve something that is slightly

407
00:20:14,149 --> 00:20:15,889
super polynomial in the security

408
00:20:15,889 --> 00:20:19,099
parameter but I mean you can you can

409
00:20:19,099 --> 00:20:22,999
always let's say go for let's say if you

410
00:20:22,999 --> 00:20:25,220
want to prove security parameter 40 you

411
00:20:25,220 --> 00:20:27,769
can just be a prior proof twice for

412
00:20:27,769 --> 00:20:29,559
security parameter 20 and then you know

413
00:20:29,559 --> 00:20:33,889
fine question is of course are we done

414
00:20:33,889 --> 00:20:38,299
yet first of all our analysis comes with

415
00:20:38,299 --> 00:20:41,080
large hidden constants I mean it's it's

416
00:20:41,080 --> 00:20:44,570
super polynomial and you know the number

417
00:20:44,570 --> 00:20:46,489
of axillary values is is constant but

418
00:20:46,489 --> 00:20:51,289
it's a big constant so one would if you

419
00:20:51,289 --> 00:20:52,759
want to apply this in fact it's

420
00:20:52,759 --> 00:20:56,840
definitely like to to get these hidden

421
00:20:56,840 --> 00:20:59,929
constants smaller moreover we have to

422
00:20:59,929 --> 00:21:01,879
quasi-polynomial soundness lag and

423
00:21:01,879 --> 00:21:03,529
getting this down to some years

424
00:21:03,529 --> 00:21:05,659
polynomial or linear would definitely be

425
00:21:05,659 --> 00:21:08,720
desirable and also it would be nice to

426
00:21:08,720 --> 00:21:10,519
see whether this actually works and how

427
00:21:10,519 --> 00:21:14,690
it performs in practice and after we

428
00:21:14,690 --> 00:21:17,090
published our work on ePrint there was

429
00:21:17,090 --> 00:21:19,999
some subsequent work by kramer and damn

430
00:21:19,999 --> 00:21:25,179
god who showed that actually you can do

431
00:21:25,179 --> 00:21:27,379
this whole thing with a linear sound

432
00:21:27,379 --> 00:21:31,549
it's like but they need this end to be

433
00:21:31,549 --> 00:21:33,229
bigger than K squared where in our case

434
00:21:33,229 --> 00:21:37,220
it was K times log K so first of all

435
00:21:37,220 --> 00:21:41,389
there are techniques for for forgetting

436
00:21:41,389 --> 00:21:43,220
there are like a little more involved in

437
00:21:43,220 --> 00:21:47,389
our somewhat simplistic instant balls

438
00:21:47,389 --> 00:21:50,090
game so it's definitely also interesting

439
00:21:50,090 --> 00:21:51,739
to see to look at our dare work and how

440
00:21:51,739 --> 00:21:55,849
it evolves so if you if you compare

441
00:21:55,849 --> 00:21:57,590
everything on the graph

442
00:21:57,590 --> 00:21:59,179
this is how the current state of the art

443
00:21:59,179 --> 00:22:01,309
looks like you have zigging protocols at

444
00:22:01,309 --> 00:22:04,760
one end of the whole game you have crime

445
00:22:04,760 --> 00:22:07,340
a downward on the other end the speeds

446
00:22:07,340 --> 00:22:09,830
to prove here and we were able to get

447
00:22:09,830 --> 00:22:11,980
somewhere close to here and of course

448
00:22:11,980 --> 00:22:15,200
long term goal is to get both the

449
00:22:15,200 --> 00:22:18,020
soundman's slack and the overhead to be

450
00:22:18,020 --> 00:22:19,669
as small as possible and with those

451
00:22:19,669 --> 00:22:21,110
words I'd like to thank you for your

452
00:22:21,110 --> 00:22:21,620
attention

453
00:22:21,620 --> 00:22:25,090
and I'm open for questions

