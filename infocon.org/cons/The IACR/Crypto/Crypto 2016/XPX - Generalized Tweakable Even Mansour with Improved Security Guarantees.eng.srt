1
00:00:03,930 --> 00:00:06,430
okay welcome to my presentation and

2
00:00:06,430 --> 00:00:08,440
yannick already gave a very nice

3
00:00:08,440 --> 00:00:10,480
introduction on how important and useful

4
00:00:10,480 --> 00:00:12,760
300 block ciphers are and let me never

5
00:00:12,760 --> 00:00:14,590
let's give you a brief introduction as

6
00:00:14,590 --> 00:00:16,450
well and however I will do it a little

7
00:00:16,450 --> 00:00:19,599
bit quicker than and so a normal block

8
00:00:19,599 --> 00:00:22,029
cipher is just essentially permutations

9
00:00:22,029 --> 00:00:23,560
for every secret key is a permutation

10
00:00:23,560 --> 00:00:25,930
which means that if you encrypt the same

11
00:00:25,930 --> 00:00:27,369
message you get the same time protect

12
00:00:27,369 --> 00:00:29,559
every time and to add some flexibility

13
00:00:29,559 --> 00:00:32,070
people used tweaks and a tweak

14
00:00:32,070 --> 00:00:34,239
randomizes the scheme in some way it's a

15
00:00:34,239 --> 00:00:36,780
public parameter associate every tweak

16
00:00:36,780 --> 00:00:39,360
it gives an independent looking

17
00:00:39,360 --> 00:00:42,130
permutation and the relevance of it

18
00:00:42,130 --> 00:00:44,230
already became clear in this picture in

19
00:00:44,230 --> 00:00:47,200
this scheme of SCT and to give you an

20
00:00:47,200 --> 00:00:51,700
order example let me discuss it well I

21
00:00:51,700 --> 00:00:54,940
call it always be ex and I learned that

22
00:00:54,940 --> 00:00:57,579
I should have called it that a CB so

23
00:00:57,579 --> 00:00:59,560
this is essentially the generic design

24
00:00:59,560 --> 00:01:02,590
of osb 10 sp2 and os be a tree and the

25
00:01:02,590 --> 00:01:04,328
thing is one of the pioneering designs

26
00:01:04,328 --> 00:01:06,579
and using Treecko block cipher for such

27
00:01:06,579 --> 00:01:08,920
applications and I think it also shows

28
00:01:08,920 --> 00:01:11,650
how y 2 equal blog sites are interesting

29
00:01:11,650 --> 00:01:15,250
and important for security analysis so

30
00:01:15,250 --> 00:01:16,690
what we see here or so again

31
00:01:16,690 --> 00:01:19,570
authenticated encryption scheme a its

32
00:01:19,570 --> 00:01:21,820
associated data I missed a message you

33
00:01:21,820 --> 00:01:24,580
get a ciphertext and attack and but we

34
00:01:24,580 --> 00:01:26,170
use a trickle blood type everywhere

35
00:01:26,170 --> 00:01:28,900
where the tweak is a consists of a nonce

36
00:01:28,900 --> 00:01:32,049
and some position identifier so the

37
00:01:32,049 --> 00:01:33,760
nonce is a unique value for every

38
00:01:33,760 --> 00:01:36,040
encryption and the potential position

39
00:01:36,040 --> 00:01:38,290
identify uniquely determines at which

40
00:01:38,290 --> 00:01:39,820
position the three call block cipher

41
00:01:39,820 --> 00:01:42,250
peers and because it is a trickle blog

42
00:01:42,250 --> 00:01:44,170
site for every new evaluation of the

43
00:01:44,170 --> 00:01:45,460
streak of rocks i press on under a

44
00:01:45,460 --> 00:01:47,470
different week you get independent

45
00:01:47,470 --> 00:01:49,090
looking trickle block sizes everywhere

46
00:01:49,090 --> 00:01:51,880
and you can easily prove security of the

47
00:01:51,880 --> 00:01:55,150
scheme am note that by changing the

48
00:01:55,150 --> 00:01:56,650
tweak you're essentially changing the

49
00:01:56,650 --> 00:01:58,479
function so there is a site condition

50
00:01:58,479 --> 00:02:00,340
here namely that you want that changing

51
00:02:00,340 --> 00:02:02,020
the tweak should be very efficient so it

52
00:02:02,020 --> 00:02:03,580
should be very efficient to move from

53
00:02:03,580 --> 00:02:07,900
one tweak at another one sir question is

54
00:02:07,900 --> 00:02:09,669
how to design three call block ciphers

55
00:02:09,669 --> 00:02:11,439
and yannick shows already that there are

56
00:02:11,439 --> 00:02:13,290
various approaches to do it from scratch

57
00:02:13,290 --> 00:02:16,060
the most recent one is this Twinkie

58
00:02:16,060 --> 00:02:17,090
framework which

59
00:02:17,090 --> 00:02:19,160
kind of blends the key and the tweak in

60
00:02:19,160 --> 00:02:22,160
this work focus on generic designer we

61
00:02:22,160 --> 00:02:23,959
use an existing primitive like a block

62
00:02:23,959 --> 00:02:26,090
cipher and build a trick or block cipher

63
00:02:26,090 --> 00:02:29,810
on top of this so in the first

64
00:02:29,810 --> 00:02:31,640
formalization of two equal block size

65
00:02:31,640 --> 00:02:33,319
very disk off at all they also

66
00:02:33,319 --> 00:02:35,569
introduced to two equal groups i press

67
00:02:35,569 --> 00:02:37,900
based on the normal block cipher and

68
00:02:37,900 --> 00:02:40,489
those are these two actually and the

69
00:02:40,489 --> 00:02:41,870
most interesting map for us is now the

70
00:02:41,870 --> 00:02:43,940
right one so what we see is that it has

71
00:02:43,940 --> 00:02:46,310
a normal block cipher which is masked by

72
00:02:46,310 --> 00:02:48,319
some universal hash function on the left

73
00:02:48,319 --> 00:02:52,280
and on the right and and it's similar to

74
00:02:52,280 --> 00:02:55,130
well what was proposed by rockaway three

75
00:02:55,130 --> 00:02:57,280
years later rockaway improves the scheme

76
00:02:57,280 --> 00:02:59,420
specifically for the users you know ECB

77
00:02:59,420 --> 00:03:01,700
two and the idea of the new scheme is

78
00:03:01,700 --> 00:03:03,410
that the masking is not based on a

79
00:03:03,410 --> 00:03:04,760
universal hash function which you use

80
00:03:04,760 --> 00:03:07,670
the same block size and the tweak

81
00:03:07,670 --> 00:03:11,209
consists of anons of course and alphabet

82
00:03:11,209 --> 00:03:13,430
and gamma an alpha beta and gamma are

83
00:03:13,430 --> 00:03:15,410
used to represent the position in the

84
00:03:15,410 --> 00:03:18,470
ocb scheme so the mosque is then

85
00:03:18,470 --> 00:03:19,940
computed in this case is 2 to the power

86
00:03:19,940 --> 00:03:22,370
alpha times 3 3rd power bad that's four

87
00:03:22,370 --> 00:03:24,500
times 70 power gamma times the

88
00:03:24,500 --> 00:03:27,170
encryption of the nonce so it was

89
00:03:27,170 --> 00:03:28,519
introduced for us we too but there are

90
00:03:28,519 --> 00:03:30,319
many caesar submissions that adopted

91
00:03:30,319 --> 00:03:34,639
this idea so this is block cipher based

92
00:03:34,639 --> 00:03:36,079
approach but appeared a British track

93
00:03:36,079 --> 00:03:37,609
there is a current trend towards

94
00:03:37,609 --> 00:03:39,680
permutation based designs this was

95
00:03:39,680 --> 00:03:41,630
already apparent in the Caesar come and

96
00:03:41,630 --> 00:03:43,519
the shattering competition with with

97
00:03:43,519 --> 00:03:46,000
catch a temptation based hash function

98
00:03:46,000 --> 00:03:49,010
also in the decision competition are

99
00:03:49,010 --> 00:03:50,900
quite some permutation based designs and

100
00:03:50,900 --> 00:03:53,450
it is possible to transform this through

101
00:03:53,450 --> 00:03:55,910
presentation based setting as a matter

102
00:03:55,910 --> 00:03:58,099
of fact in 2014 the men off for Team

103
00:03:58,099 --> 00:03:59,480
introduced the tweak will have a monster

104
00:03:59,480 --> 00:04:01,849
or construction and it is similar it

105
00:04:01,849 --> 00:04:05,660
uses a public permutation yes but use

106
00:04:05,660 --> 00:04:07,310
the public permutation and masking is

107
00:04:07,310 --> 00:04:09,200
done in a form like 2 to the power alpha

108
00:04:09,200 --> 00:04:11,480
times 3 to the power by that time 70 / 0

109
00:04:11,480 --> 00:04:14,959
gamma times the key exhort with a

110
00:04:14,959 --> 00:04:17,440
permutation / muted version of the key

111
00:04:17,440 --> 00:04:20,570
and I got so 25 months record

112
00:04:20,570 --> 00:04:23,270
generalized about bike aliotti at all

113
00:04:23,270 --> 00:04:26,060
last year and it's clear that there is a

114
00:04:26,060 --> 00:04:27,790
relation between this scheme and that

115
00:04:27,790 --> 00:04:29,620
and the XEX scheme of the previous tribe

116
00:04:29,620 --> 00:04:31,270
because if we take for instance XE act

117
00:04:31,270 --> 00:04:35,710
with non zero and we take the normal

118
00:04:35,710 --> 00:04:38,050
Evan monsterQuest construction this one

119
00:04:38,050 --> 00:04:41,950
and we plug it into XCX we get this

120
00:04:41,950 --> 00:04:43,360
construction that very much looks like

121
00:04:43,360 --> 00:04:45,070
XP x so there is a relation among

122
00:04:45,070 --> 00:04:49,210
between these two schemes so i already

123
00:04:49,210 --> 00:04:50,710
mentioned that in the Cesar competition

124
00:04:50,710 --> 00:04:52,780
there are quite some 300 block cipher

125
00:04:52,780 --> 00:04:55,000
based designs and as a matter of fact we

126
00:04:55,000 --> 00:04:56,500
can group these directions in three

127
00:04:56,500 --> 00:04:58,380
approaches we have this dedicated

128
00:04:58,380 --> 00:05:01,900
Treecko block cipher design we have xex

129
00:05:01,900 --> 00:05:03,730
inspired designs and tweak will have a

130
00:05:03,730 --> 00:05:05,290
monster inspired designs and if you

131
00:05:05,290 --> 00:05:06,970
check the list of initial Caesar

132
00:05:06,970 --> 00:05:10,750
submissions or 57 submissions and 18 of

133
00:05:10,750 --> 00:05:13,330
them were based either explicitly or

134
00:05:13,330 --> 00:05:16,080
implicitly on 300 block ciphers and

135
00:05:16,080 --> 00:05:19,260
actually I after the the one that only

136
00:05:19,260 --> 00:05:21,520
participated in the first round I put it

137
00:05:21,520 --> 00:05:23,710
in play and plain text both is the

138
00:05:23,710 --> 00:05:25,300
second front I didn't manage to update

139
00:05:25,300 --> 00:05:28,360
it to the new result from this eve last

140
00:05:28,360 --> 00:05:30,430
night but it turns out the six of these

141
00:05:30,430 --> 00:05:33,220
schemes man went to the third round six

142
00:05:33,220 --> 00:05:35,440
of the third round candidates are two

143
00:05:35,440 --> 00:05:40,000
equal block cipher base and this work we

144
00:05:40,000 --> 00:05:41,590
consider permutation based design so we

145
00:05:41,590 --> 00:05:43,570
effectively generalize this to equal F

146
00:05:43,570 --> 00:05:46,930
monster approach a more detail we

147
00:05:46,930 --> 00:05:50,140
consider XP x and x DX is a public

148
00:05:50,140 --> 00:05:52,810
permutation in the middle mosque by on

149
00:05:52,810 --> 00:05:56,380
the left t 11 x k XR t 12 x PK and on

150
00:05:56,380 --> 00:06:00,610
the right t 2 1 x KX RT 22 x BK so the

151
00:06:00,610 --> 00:06:03,130
idea is that a tweak is also formed p 1

152
00:06:03,130 --> 00:06:06,430
1 t 1 to t 2 1 and t 2 1 which comes

153
00:06:06,430 --> 00:06:09,190
from a certain pre described tweak set a

154
00:06:09,190 --> 00:06:12,490
tee and this tweak status depends on the

155
00:06:12,490 --> 00:06:15,420
use case of the threequel block cipher

156
00:06:15,420 --> 00:06:17,770
so for now the tweaks that can still be

157
00:06:17,770 --> 00:06:19,570
any set however it turns out that the

158
00:06:19,570 --> 00:06:22,390
security of xpx strongly depends on the

159
00:06:22,390 --> 00:06:26,110
choice of the tweak set at a high level

160
00:06:26,110 --> 00:06:28,000
we will show we will essentially make a

161
00:06:28,000 --> 00:06:30,250
separation so we synthetically analyze

162
00:06:30,250 --> 00:06:32,620
all possible tweak sets and we'll make a

163
00:06:32,620 --> 00:06:35,710
separation between week-to-week sites

164
00:06:35,710 --> 00:06:38,130
for which X px is completely and secure

165
00:06:38,130 --> 00:06:40,419
normal to XS for which you get single

166
00:06:40,419 --> 00:06:41,139
key security

167
00:06:41,139 --> 00:06:42,430
and normal to acccess are essentially

168
00:06:42,430 --> 00:06:44,590
the ones that are not weak and if you

169
00:06:44,590 --> 00:06:46,120
put slightly more conditions on the

170
00:06:46,120 --> 00:06:47,710
tweak set the turns out that you can get

171
00:06:47,710 --> 00:06:50,349
related key security and surprisingly

172
00:06:50,349 --> 00:06:52,240
there is no much efficiency difference

173
00:06:52,240 --> 00:06:54,159
between this among these three cases so

174
00:06:54,159 --> 00:06:57,580
it's very easy to to get the key

175
00:06:57,580 --> 00:06:59,409
security for a scheme if you have normal

176
00:06:59,409 --> 00:07:01,539
single kiss your key I will come back to

177
00:07:01,539 --> 00:07:05,590
this later so what now remains to do is

178
00:07:05,590 --> 00:07:07,360
to essentially formalize what we mean by

179
00:07:07,360 --> 00:07:12,099
week or month strong and let me start

180
00:07:12,099 --> 00:07:14,259
with with weak to excess by giving

181
00:07:14,259 --> 00:07:16,479
example so here we have well as ex my ex

182
00:07:16,479 --> 00:07:20,889
again suppose now that the tweak 0000 is

183
00:07:20,889 --> 00:07:23,229
allowed so the tweaks at the set of

184
00:07:23,229 --> 00:07:28,870
allowed tweaks contains tweak 0000 and I

185
00:07:28,870 --> 00:07:31,060
think it's trivial to see what happens

186
00:07:31,060 --> 00:07:33,779
if you use this tweak set this tweak

187
00:07:33,779 --> 00:07:37,330
0000 for any message m the output of the

188
00:07:37,330 --> 00:07:39,520
XP x is just B of M it's independent of

189
00:07:39,520 --> 00:07:42,430
the key and you can break it trivially

190
00:07:42,430 --> 00:07:46,270
so this week should not be allowed there

191
00:07:46,270 --> 00:07:49,750
are different tricks like 10 11 if this

192
00:07:49,750 --> 00:07:51,339
tweak is allowed the attacker can use

193
00:07:51,339 --> 00:07:54,279
this tweet for message 0 then we see

194
00:07:54,279 --> 00:07:57,159
that the input to the permutation equals

195
00:07:57,159 --> 00:08:00,669
K output equals pfk which cancels out

196
00:08:00,669 --> 00:08:02,710
with pfk from the mosque in the art of

197
00:08:02,710 --> 00:08:04,810
this K so if this tweak is allows you

198
00:08:04,810 --> 00:08:07,149
have a key recovery attack there are

199
00:08:07,149 --> 00:08:10,000
more advanced cases like 100 to there

200
00:08:10,000 --> 00:08:12,039
are also cases where we have couples of

201
00:08:12,039 --> 00:08:14,319
tweaks it should not be allowed at the

202
00:08:14,319 --> 00:08:15,789
same time because then you can break the

203
00:08:15,789 --> 00:08:19,899
scheme so there are some silly cases and

204
00:08:19,899 --> 00:08:21,969
certain way and it makes sense to limit

205
00:08:21,969 --> 00:08:24,939
that week set to exclude these cases and

206
00:08:24,939 --> 00:08:26,770
this brings me to the first definition

207
00:08:26,770 --> 00:08:28,539
which is the definition of valid tweak

208
00:08:28,539 --> 00:08:30,819
sets and it's a technical technical

209
00:08:30,819 --> 00:08:32,849
definition I will not go into detail but

210
00:08:32,849 --> 00:08:35,229
it's a tankful definition but it's easy

211
00:08:35,229 --> 00:08:37,769
to verify whether or not a tweak set is

212
00:08:37,769 --> 00:08:41,289
valid or not and we actually prove that

213
00:08:41,289 --> 00:08:43,328
it's a minimal definition we show that

214
00:08:43,328 --> 00:08:45,250
eight weeks that is not valid if you

215
00:08:45,250 --> 00:08:47,410
have an invalid tweak set then XP x is

216
00:08:47,410 --> 00:08:50,680
completely insecure so it's really a

217
00:08:50,680 --> 00:08:51,970
minimal definition of

218
00:08:51,970 --> 00:08:59,769
validity and these are effectively too

219
00:08:59,769 --> 00:09:02,709
weak to excess we will show the opposite

220
00:09:02,709 --> 00:09:04,300
to it said in fact we will show also

221
00:09:04,300 --> 00:09:06,250
that if three if the tweaks it is valid

222
00:09:06,250 --> 00:09:09,100
then you have security then XP x is

223
00:09:09,100 --> 00:09:12,519
secure and this is done in the normal

224
00:09:12,519 --> 00:09:14,829
well strong tweak website a random

225
00:09:14,829 --> 00:09:17,529
permutation security model so the

226
00:09:17,529 --> 00:09:19,269
attacker is given access to either the

227
00:09:19,269 --> 00:09:21,370
construction query either to their

228
00:09:21,370 --> 00:09:25,240
construction XP x or a random equivalent

229
00:09:25,240 --> 00:09:29,379
to the pi and the attacker is also given

230
00:09:29,379 --> 00:09:31,149
access to the underlying primitive p

231
00:09:31,149 --> 00:09:33,220
which is assumed to be an ideal

232
00:09:33,220 --> 00:09:35,439
permutation and the complexity of the

233
00:09:35,439 --> 00:09:36,910
attacker is counted by the number of

234
00:09:36,910 --> 00:09:39,610
queries so it can make q construction

235
00:09:39,610 --> 00:09:41,790
queries and our primitive queries and

236
00:09:41,790 --> 00:09:44,439
that we prove that if the tweaks at is

237
00:09:44,439 --> 00:09:46,209
valid then we get birthday bound

238
00:09:46,209 --> 00:09:50,290
security of this construction and where

239
00:09:50,290 --> 00:09:51,939
q is the number of construction queries

240
00:09:51,939 --> 00:09:55,180
an RS number of primitive queries and so

241
00:09:55,180 --> 00:09:57,009
this is just explained single key

242
00:09:57,009 --> 00:10:02,170
security but we also consider related

243
00:10:02,170 --> 00:10:03,970
key security and in a the key security

244
00:10:03,970 --> 00:10:06,430
the attacker has more power but the

245
00:10:06,430 --> 00:10:07,870
attacker can do is it can query the

246
00:10:07,870 --> 00:10:10,990
construction and not only for the tweak

247
00:10:10,990 --> 00:10:12,579
in a message but for every query to the

248
00:10:12,579 --> 00:10:14,230
construction the attacker chooses a

249
00:10:14,230 --> 00:10:16,629
function Phi and it learns the

250
00:10:16,629 --> 00:10:20,410
construction evaluation on input of 45 k

251
00:10:20,410 --> 00:10:22,180
so it can choose for every query a

252
00:10:22,180 --> 00:10:25,120
function to transform the key and this

253
00:10:25,120 --> 00:10:28,750
gives the attacker extra strength it

254
00:10:28,750 --> 00:10:30,670
makes sense to restrict the set of key

255
00:10:30,670 --> 00:10:32,259
deriving functions in some way otherwise

256
00:10:32,259 --> 00:10:35,980
you can trivially break it and there is

257
00:10:35,980 --> 00:10:37,660
a well-known function as a function that

258
00:10:37,660 --> 00:10:40,600
consists of a set of x or differences

259
00:10:40,600 --> 00:10:43,059
this was already considered a long time

260
00:10:43,059 --> 00:10:45,149
ago in the formalization of related key

261
00:10:45,149 --> 00:10:49,750
security Bible era in kono and so what

262
00:10:49,750 --> 00:10:52,269
we defined by 5x or and consists of all

263
00:10:52,269 --> 00:10:55,240
functions the map k2k X or Delta where

264
00:10:55,240 --> 00:10:58,059
the attacker can choose Delta for every

265
00:10:58,059 --> 00:11:01,600
new evaluation and it has some relation

266
00:11:01,600 --> 00:11:05,050
to us too silly implementations where

267
00:11:05,050 --> 00:11:07,390
very key is for instance refreshed by

268
00:11:07,390 --> 00:11:09,220
adding a counter in this case you would

269
00:11:09,220 --> 00:11:12,610
facilitate attackers with such a set of

270
00:11:12,610 --> 00:11:15,070
key to ripen functions and we also look

271
00:11:15,070 --> 00:11:16,720
at the slightly stronger set which we

272
00:11:16,720 --> 00:11:20,410
call 5b axor which consists of a set of

273
00:11:20,410 --> 00:11:23,019
all functions to map K 2 K X or Delta or

274
00:11:23,019 --> 00:11:25,690
the set of functions that abusing

275
00:11:25,690 --> 00:11:29,890
notation map bfk to PF KX or epsilon so

276
00:11:29,890 --> 00:11:32,070
the attacker can always choose Delta or

277
00:11:32,070 --> 00:11:34,720
epsilon the second set looks a bit

278
00:11:34,720 --> 00:11:36,070
contrived but let me recall that the

279
00:11:36,070 --> 00:11:38,500
masking in X DX is of the form TI 1 K

280
00:11:38,500 --> 00:11:41,980
XOR ti2 PK so this respect that makes

281
00:11:41,980 --> 00:11:43,600
sense to look at these two sets of key

282
00:11:43,600 --> 00:11:47,110
to rajan functions and now for these

283
00:11:47,110 --> 00:11:50,470
sets we define every proof the following

284
00:11:50,470 --> 00:11:54,279
results so first we show that so so

285
00:11:54,279 --> 00:11:56,560
first for normal PRP security where the

286
00:11:56,560 --> 00:11:58,180
attacker can only make forward queries

287
00:11:58,180 --> 00:12:00,459
we show that if the tweaks at is valid

288
00:12:00,459 --> 00:12:02,470
so if it satisfies this condition it

289
00:12:02,470 --> 00:12:05,890
doesn't contain silly tweaks and p12 is

290
00:12:05,890 --> 00:12:09,279
always non zero so in the use case t12

291
00:12:09,279 --> 00:12:12,850
is never 0 then we get X or related key

292
00:12:12,850 --> 00:12:16,630
security and if you also condition that

293
00:12:16,630 --> 00:12:18,700
the 22 is always non zero and you have

294
00:12:18,700 --> 00:12:20,500
this tactical side condition then you

295
00:12:20,500 --> 00:12:22,690
get even strong related key security for

296
00:12:22,690 --> 00:12:24,910
X or differences really attacker can

297
00:12:24,910 --> 00:12:27,760
make in first case for the more involved

298
00:12:27,760 --> 00:12:29,470
set we have similar result so for

299
00:12:29,470 --> 00:12:30,850
instance for the last one we have that

300
00:12:30,850 --> 00:12:34,149
if the tweaks that is valid and t 1 1 t

301
00:12:34,149 --> 00:12:37,000
1 to t 2 1 and t 2 2 are always nonzero

302
00:12:37,000 --> 00:12:39,730
then you get strong related key security

303
00:12:39,730 --> 00:12:41,620
for this strong set of key driving

304
00:12:41,620 --> 00:12:44,040
functions

305
00:12:46,930 --> 00:12:49,670
so I will not go into detail in the

306
00:12:49,670 --> 00:12:51,500
proof and I said I would like to give

307
00:12:51,500 --> 00:12:53,570
you some examples of how this result can

308
00:12:53,570 --> 00:12:56,420
be used and what it means and how it can

309
00:12:56,420 --> 00:12:59,270
be used for certain applications let me

310
00:12:59,270 --> 00:13:00,770
start with a very simple example which

311
00:13:00,770 --> 00:13:03,470
is the norm 11 months or scheme so on

312
00:13:03,470 --> 00:13:05,150
the Left we see XD X on the right we see

313
00:13:05,150 --> 00:13:07,610
this normal this well known as monster

314
00:13:07,610 --> 00:13:11,000
scheme and F monster is covered by X px

315
00:13:11,000 --> 00:13:12,920
by taking a streak set just a singleton

316
00:13:12,920 --> 00:13:17,870
just the trick value 10 10 I mean if the

317
00:13:17,870 --> 00:13:19,670
tweaks that consists of one tuple the

318
00:13:19,670 --> 00:13:22,040
user always has to take this as the

319
00:13:22,040 --> 00:13:24,770
tweak which effectively means that it's

320
00:13:24,770 --> 00:13:28,400
just a normal block cipher the tweaks

321
00:13:28,400 --> 00:13:30,020
that is valid which means that this

322
00:13:30,020 --> 00:13:32,450
result which means that our results

323
00:13:32,450 --> 00:13:34,580
shows that have a monster is a secure

324
00:13:34,580 --> 00:13:37,910
block cipher well they should not sound

325
00:13:37,910 --> 00:13:39,380
as a surprise to you because this has

326
00:13:39,380 --> 00:13:42,080
been proven many times already but this

327
00:13:42,080 --> 00:13:44,210
shows to show that well what it means

328
00:13:44,210 --> 00:13:46,790
and in general XP x for any possible so

329
00:13:46,790 --> 00:13:49,190
if you take any tweaks at a size one XP

330
00:13:49,190 --> 00:13:50,780
x is a normal block ciphers where the

331
00:13:50,780 --> 00:13:53,600
site result it essentially covers a wide

332
00:13:53,600 --> 00:13:56,230
range of even months seven months which

333
00:13:56,230 --> 00:14:01,640
block ciphers MxPx also covers this XD X

334
00:14:01,640 --> 00:14:04,220
with Evan monster so we're here take x e

335
00:14:04,220 --> 00:14:07,580
x with evan monster installed into it

336
00:14:07,580 --> 00:14:10,370
it's covered by x PX way more of all set

337
00:14:10,370 --> 00:14:14,240
of more evolved to tweak set and so what

338
00:14:14,240 --> 00:14:16,580
we do essentially is we take alpha

339
00:14:16,580 --> 00:14:20,720
bettor gamma just any possible x e next

340
00:14:20,720 --> 00:14:24,380
week and we define T 1 1 t 1 to t 2 1

341
00:14:24,380 --> 00:14:27,470
and t 2 2 on top of this so the DI j's

342
00:14:27,470 --> 00:14:29,180
are functions of alpha beta and gamma

343
00:14:29,180 --> 00:14:33,140
and that's the way we can define x PX to

344
00:14:33,140 --> 00:14:36,260
cover XD X with having monster and this

345
00:14:36,260 --> 00:14:38,840
set is valid and as a matter of fact it

346
00:14:38,840 --> 00:14:41,000
also satisfies that the values are

347
00:14:41,000 --> 00:14:45,500
always non zero because in actually x2

348
00:14:45,500 --> 00:14:47,240
to the Alpha treated by that 72 the gum

349
00:14:47,240 --> 00:14:52,870
has never won and it's never 0 first

350
00:14:52,870 --> 00:14:56,610
so then this one is never 0 of course

351
00:14:56,610 --> 00:14:58,870
actually access the condition that do

352
00:14:58,870 --> 00:15:01,510
this to to the Alpha treated bad scepter

353
00:15:01,510 --> 00:15:04,150
gum has never won so you always never

354
00:15:04,150 --> 00:15:06,310
have a 0 here so you have very strong

355
00:15:06,310 --> 00:15:08,140
related key security for this very

356
00:15:08,140 --> 00:15:12,300
strong set of key deriving functions and

357
00:15:12,300 --> 00:15:15,160
to show you how this can be used to me

358
00:15:15,160 --> 00:15:18,100
and go to the Copa authenticated

359
00:15:18,100 --> 00:15:22,300
encryption scheme and so Copa is a

360
00:15:22,300 --> 00:15:25,270
design by America at all 2014 it has

361
00:15:25,270 --> 00:15:28,300
associated data the message and using

362
00:15:28,300 --> 00:15:29,920
some magic you get a ciphertext in the

363
00:15:29,920 --> 00:15:32,620
tank for now it's not important to look

364
00:15:32,620 --> 00:15:34,360
at how the scheme works what's important

365
00:15:34,360 --> 00:15:37,570
is that M Copa is implicitly based on X

366
00:15:37,570 --> 00:15:41,650
in X in which internally AES is used so

367
00:15:41,650 --> 00:15:45,610
copass based on is XCX based on aes and

368
00:15:45,610 --> 00:15:47,830
there is a variant of this as Pro scopa

369
00:15:47,830 --> 00:15:50,260
and first Copa differs from Copa and

370
00:15:50,260 --> 00:15:53,230
that it doesn't use a yet but instead it

371
00:15:53,230 --> 00:15:56,080
uses Evan monstro construction so post

372
00:15:56,080 --> 00:15:59,380
Copa Copa based on ax XCX based on Evan

373
00:15:59,380 --> 00:16:02,410
Mansour based on a permutation and it

374
00:16:02,410 --> 00:16:05,350
makes sense to do question what to what

375
00:16:05,350 --> 00:16:07,660
extent can we use the existing security

376
00:16:07,660 --> 00:16:10,150
results of Copa to guarantee security of

377
00:16:10,150 --> 00:16:12,160
course Copa so to what extent do the

378
00:16:12,160 --> 00:16:13,839
results carry over from one scheme to

379
00:16:13,839 --> 00:16:16,450
another one and four single key security

380
00:16:16,450 --> 00:16:17,860
that's quite a straightforward question

381
00:16:17,860 --> 00:16:19,950
is the fact almost a trivial question

382
00:16:19,950 --> 00:16:22,540
and to see this let me look at how the

383
00:16:22,540 --> 00:16:24,640
Copa security proof works so what song

384
00:16:24,640 --> 00:16:26,440
from Copa is essentially as follows the

385
00:16:26,440 --> 00:16:30,520
first step is a deduction to XCX so when

386
00:16:30,520 --> 00:16:32,230
he chooses the security of Copa to the

387
00:16:32,230 --> 00:16:36,029
security of XCX up to the birth a bond

388
00:16:36,029 --> 00:16:39,520
that's the existing proof ragga we

389
00:16:39,520 --> 00:16:41,950
analyze XCX and rahway prove that XCX

390
00:16:41,950 --> 00:16:44,380
based on the block's have e is b'day

391
00:16:44,380 --> 00:16:46,060
points cure so you could use security of

392
00:16:46,060 --> 00:16:49,570
XD X to the security of lots of e then

393
00:16:49,570 --> 00:16:51,910
you plug an exit aes and you hope that a

394
00:16:51,910 --> 00:16:55,270
es is secure that's how the cocoa proof

395
00:16:55,270 --> 00:16:56,890
works now for poor school but you don't

396
00:16:56,890 --> 00:16:58,839
stop at the block cipher e but we have

397
00:16:58,839 --> 00:17:00,610
an additional step we have an amp of

398
00:17:00,610 --> 00:17:02,260
months or construction based on a

399
00:17:02,260 --> 00:17:03,339
permutation

400
00:17:03,339 --> 00:17:06,349
so we make one more step namely that

401
00:17:06,349 --> 00:17:08,119
every monster is secure up to the

402
00:17:08,119 --> 00:17:10,309
birthday band and that's for a single

403
00:17:10,309 --> 00:17:11,419
key security so this is nothing

404
00:17:11,419 --> 00:17:14,480
surprising now dated key

405
00:17:14,480 --> 00:17:16,160
security it turns out that for copa you

406
00:17:16,160 --> 00:17:17,809
can do the same trick so if you dive

407
00:17:17,809 --> 00:17:19,339
into the proof of co-pi you see that you

408
00:17:19,339 --> 00:17:21,140
can do the same trick for the late the

409
00:17:21,140 --> 00:17:23,390
key security so that elated key security

410
00:17:23,390 --> 00:17:25,309
of copa and uses to the relay the key

411
00:17:25,309 --> 00:17:27,799
security of XCX to the birth of

412
00:17:27,799 --> 00:17:29,929
introduces to relate key security of e

413
00:17:29,929 --> 00:17:32,419
up to the birthday bond and then you

414
00:17:32,419 --> 00:17:36,950
assume that aes escalated is secure but

415
00:17:36,950 --> 00:17:38,540
what if you go for post scope of course

416
00:17:38,540 --> 00:17:39,919
copa we need to make an additional step

417
00:17:39,919 --> 00:17:42,410
and this step is that he laid the key

418
00:17:42,410 --> 00:17:45,410
security of a monster and have an answer

419
00:17:45,410 --> 00:17:47,210
is not related key secure you can break

420
00:17:47,210 --> 00:17:48,710
the delay the key security of have a

421
00:17:48,710 --> 00:17:53,000
monster in two queries so this approach

422
00:17:53,000 --> 00:17:55,669
does not work for post copa it doesn't

423
00:17:55,669 --> 00:17:56,960
mean that close corpus and secure it

424
00:17:56,960 --> 00:17:58,610
just means that this this now if this

425
00:17:58,610 --> 00:18:00,830
straightforward reduction doesn't work

426
00:18:00,830 --> 00:18:04,610
and now we can use XP x because x PX is

427
00:18:04,610 --> 00:18:06,860
essentially exia covers XCX which have a

428
00:18:06,860 --> 00:18:09,650
monster so we make we just skip the step

429
00:18:09,650 --> 00:18:12,620
through e you make a direct step and we

430
00:18:12,620 --> 00:18:16,909
get related key security I am similar

431
00:18:16,909 --> 00:18:18,559
idea can for instance we use to mid

432
00:18:18,559 --> 00:18:21,200
alpha which used this to equal Evan

433
00:18:21,200 --> 00:18:25,010
monster and so ever min up was defined

434
00:18:25,010 --> 00:18:26,570
to use people have a monster but you can

435
00:18:26,570 --> 00:18:29,450
also see it as based on XP x which quite

436
00:18:29,450 --> 00:18:32,270
a simple tweak set and using similar

437
00:18:32,270 --> 00:18:36,280
techniques you get related key security

438
00:18:36,280 --> 00:18:39,620
a final example which is I think it's

439
00:18:39,620 --> 00:18:41,240
interesting is the chassis design so

440
00:18:41,240 --> 00:18:42,320
it's not an authenticated encryption

441
00:18:42,320 --> 00:18:45,740
scheme but it's a mac function and so we

442
00:18:45,740 --> 00:18:47,360
have to of course the secret key we have

443
00:18:47,360 --> 00:18:49,190
to message and then we do some magic

444
00:18:49,190 --> 00:18:53,480
with the key and then you get the tag so

445
00:18:53,480 --> 00:18:55,820
we have two pictures the top one is for

446
00:18:55,820 --> 00:18:57,380
integral de to the bottom one is for

447
00:18:57,380 --> 00:19:00,860
fractional data and the scheme is but

448
00:19:00,860 --> 00:19:04,090
has introduced by mu at all in 2014 and

449
00:19:04,090 --> 00:19:06,679
the proof went as follows to the proof

450
00:19:06,679 --> 00:19:08,270
essentially it uses the security of

451
00:19:08,270 --> 00:19:11,419
cesky to the security of three Evan

452
00:19:11,419 --> 00:19:13,940
monstro construction so it's not clear

453
00:19:13,940 --> 00:19:15,230
from the picture but somewhere in this

454
00:19:15,230 --> 00:19:16,519
picture there tree

455
00:19:16,519 --> 00:19:18,979
constructions hidden and the proof

456
00:19:18,979 --> 00:19:20,839
reduces the security of chaska to the

457
00:19:20,839 --> 00:19:22,929
security of these three constructions

458
00:19:22,929 --> 00:19:25,399
but if you really if you now look back

459
00:19:25,399 --> 00:19:28,129
at this proof this is equivalent to X px

460
00:19:28,129 --> 00:19:30,519
with the tweak set of three doubles

461
00:19:30,519 --> 00:19:36,739
namely 10 1030 20 and 50 40 because the

462
00:19:36,739 --> 00:19:38,539
attacker can choose every time which

463
00:19:38,539 --> 00:19:40,129
have a monster construction to carry

464
00:19:40,129 --> 00:19:42,200
which is essentially equivalent to

465
00:19:42,200 --> 00:19:43,399
saying that the attacker can choose a

466
00:19:43,399 --> 00:19:48,279
tweak every time this week sat is valid

467
00:19:48,279 --> 00:19:50,389
which means that we get single key

468
00:19:50,389 --> 00:19:52,190
security of the X px construction and we

469
00:19:52,190 --> 00:19:54,440
get birthday bond security so we've

470
00:19:54,440 --> 00:19:56,950
redone the security proof of chaski and

471
00:19:56,950 --> 00:19:59,329
the tweaks that is valid but no more

472
00:19:59,329 --> 00:20:01,099
than that you cannot get related key

473
00:20:01,099 --> 00:20:02,869
security and actually you can break away

474
00:20:02,869 --> 00:20:05,539
the key security of chatzky right if you

475
00:20:05,539 --> 00:20:07,879
have activated key difference you can

476
00:20:07,879 --> 00:20:10,309
undo it with em on you need to do some

477
00:20:10,309 --> 00:20:13,519
tricks here too but that doesn't harm

478
00:20:13,519 --> 00:20:17,119
the attack but now if you adjust chaski

479
00:20:17,119 --> 00:20:18,739
so I left some blank space here I did

480
00:20:18,739 --> 00:20:20,149
this on purpose because now i'm going to

481
00:20:20,149 --> 00:20:22,549
plug in a permutation here and this is

482
00:20:22,549 --> 00:20:24,859
so what we do is we permute the stage we

483
00:20:24,859 --> 00:20:26,799
first acts are the key then we previewed

484
00:20:26,799 --> 00:20:30,739
the state and effectively this adjusts

485
00:20:30,739 --> 00:20:32,869
that Chesky is based on X px with the

486
00:20:32,869 --> 00:20:35,419
tweak set V Prime I'll consisting of

487
00:20:35,419 --> 00:20:38,149
these three triples and if you do we do

488
00:20:38,149 --> 00:20:40,190
the exercise now this tweak cell is

489
00:20:40,190 --> 00:20:42,079
valid it gives related key security and

490
00:20:42,079 --> 00:20:44,659
you get related keys curative of chaski

491
00:20:44,659 --> 00:20:47,329
and you see the change is not expensive

492
00:20:47,329 --> 00:20:49,429
you just have to pre-compute pfk once

493
00:20:49,429 --> 00:20:52,039
and and you get away the key security

494
00:20:52,039 --> 00:20:56,359
that's a simple fix of off of achieving

495
00:20:56,359 --> 00:20:59,749
stronger security and similar techniques

496
00:20:59,749 --> 00:21:01,519
could be applied to keiths pointers and

497
00:21:01,519 --> 00:21:04,579
key duplexes because jasky can be seen

498
00:21:04,579 --> 00:21:09,679
as a member of these schemes it can also

499
00:21:09,679 --> 00:21:12,139
be applied to various sponge base Caesar

500
00:21:12,139 --> 00:21:13,969
candidates I said ten candidates these

501
00:21:13,969 --> 00:21:16,249
are the initial candidates I think there

502
00:21:16,249 --> 00:21:19,429
are still three left in the third round

503
00:21:19,429 --> 00:21:22,879
which it could be applied so to conclude

504
00:21:22,879 --> 00:21:25,519
we introduced the XP x it can be seen as

505
00:21:25,519 --> 00:21:27,079
a generalization of two equal at a

506
00:21:27,079 --> 00:21:30,150
monster and not a generalization the way

507
00:21:30,150 --> 00:21:31,950
karate at all did it with a number of

508
00:21:31,950 --> 00:21:34,620
runs but instead looking at a single rod

509
00:21:34,620 --> 00:21:37,050
and checking what level of security can

510
00:21:37,050 --> 00:21:39,630
we get em you achieve various levels of

511
00:21:39,630 --> 00:21:41,820
security ranging from insecurity to

512
00:21:41,820 --> 00:21:43,440
single key security to alkylated key

513
00:21:43,440 --> 00:21:46,320
security and we show that result as

514
00:21:46,320 --> 00:21:48,750
various applications many Cesar

515
00:21:48,750 --> 00:21:50,720
candidates many initial Cesar candidates

516
00:21:50,720 --> 00:21:54,900
could be covered by xbx and also various

517
00:21:54,900 --> 00:21:57,870
hash function Mac functions for further

518
00:21:57,870 --> 00:21:59,430
questions it would be interesting to see

519
00:21:59,430 --> 00:22:01,740
what happens if we go for mold or run so

520
00:22:01,740 --> 00:22:03,300
you can get beyond birthday bond

521
00:22:03,300 --> 00:22:06,630
security and which could be of interest

522
00:22:06,630 --> 00:22:08,130
if you have small permutations if you

523
00:22:08,130 --> 00:22:09,570
use the scheme with a big thousand

524
00:22:09,570 --> 00:22:12,240
24-bit permutation and makes no sense to

525
00:22:12,240 --> 00:22:13,680
look at beyond birthday bound security

526
00:22:13,680 --> 00:22:15,330
but if you have small permutations that

527
00:22:15,330 --> 00:22:17,730
make sense and another question would be

528
00:22:17,730 --> 00:22:20,130
to get all of settings where related key

529
00:22:20,130 --> 00:22:22,800
security am it's important that probably

530
00:22:22,800 --> 00:22:25,470
also and this would also give different

531
00:22:25,470 --> 00:22:28,110
sets of key to writing functions so that

532
00:22:28,110 --> 00:22:29,880
concludes my presentation or like to

533
00:22:29,880 --> 00:22:31,200
thank you for your attention thank you

534
00:22:31,200 --> 00:22:33,470
very much

