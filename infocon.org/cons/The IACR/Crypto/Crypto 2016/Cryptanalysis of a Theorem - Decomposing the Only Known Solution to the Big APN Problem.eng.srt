1
00:00:03,780 --> 00:00:06,930
and this is a joint work with Leo Brown

2
00:00:06,930 --> 00:00:12,089
and Alex beautiful first I will give a

3
00:00:12,089 --> 00:00:15,150
brief introduction to the problem then i

4
00:00:15,150 --> 00:00:17,220
will show how we managed to decompose

5
00:00:17,220 --> 00:00:20,760
the APN permutation then i will show an

6
00:00:20,760 --> 00:00:23,540
attempt to generalize the structure and

7
00:00:23,540 --> 00:00:25,920
then i will show some interesting

8
00:00:25,920 --> 00:00:27,720
properties obtained using the

9
00:00:27,720 --> 00:00:30,690
decomposition and then i will conclude

10
00:00:30,690 --> 00:00:38,300
the talk so this talk is about s-boxes

11
00:00:38,300 --> 00:00:44,249
small permutations functions not asleep

12
00:00:44,249 --> 00:00:48,449
limitations and when designing a

13
00:00:48,449 --> 00:00:52,079
symmetric primitive we often use s box

14
00:00:52,079 --> 00:00:56,010
is to provide non-linearity and in

15
00:00:56,010 --> 00:00:58,460
particular in order to prevent

16
00:00:58,460 --> 00:01:02,069
differential tax we study differential

17
00:01:02,069 --> 00:01:07,080
properties of S boxes and so a complete

18
00:01:07,080 --> 00:01:09,030
definition of a defense distribution

19
00:01:09,030 --> 00:01:14,250
table of has box it's a table which for

20
00:01:14,250 --> 00:01:17,729
each input difference a and output

21
00:01:17,729 --> 00:01:20,420
difference be says how many inputs

22
00:01:20,420 --> 00:01:22,979
satisfy this differential transition or

23
00:01:22,979 --> 00:01:30,149
so this equation and we want this values

24
00:01:30,149 --> 00:01:33,030
for always for all differences NB to be

25
00:01:33,030 --> 00:01:34,859
as low as possible to prevent

26
00:01:34,859 --> 00:01:38,399
differential attacks all the values are

27
00:01:38,399 --> 00:01:41,640
even in this table and they can control

28
00:01:41,640 --> 00:01:47,189
be 0 so the best possible values is when

29
00:01:47,189 --> 00:01:50,369
there are only zeros and twos and when

30
00:01:50,369 --> 00:01:52,590
this happens we call the function almost

31
00:01:52,590 --> 00:01:58,649
perfect nonlinear or a p.m. and we know

32
00:01:58,649 --> 00:02:03,090
many AP ins appear functions for all

33
00:02:03,090 --> 00:02:06,060
dimensions but we are also very

34
00:02:06,060 --> 00:02:08,038
interested in a peon permutations so

35
00:02:08,038 --> 00:02:10,850
better active functions

36
00:02:10,850 --> 00:02:15,680
we know many open permutations in all

37
00:02:15,680 --> 00:02:19,580
dimensions by foreign dimensions it was

38
00:02:19,580 --> 00:02:23,930
a very long open program and deal in

39
00:02:23,930 --> 00:02:27,950
2009 given and others have found

40
00:02:27,950 --> 00:02:30,320
actually an example of six bit ap and

41
00:02:30,320 --> 00:02:34,820
permutation and since then no new a

42
00:02:34,820 --> 00:02:36,560
paper invitations in even dimensions

43
00:02:36,560 --> 00:02:43,130
were found so they found it using some

44
00:02:43,130 --> 00:02:46,160
code theory and algorithmic search and

45
00:02:46,160 --> 00:02:50,000
as a result we have this S box just as a

46
00:02:50,000 --> 00:02:53,810
lookup table and this gives a few few

47
00:02:53,810 --> 00:02:56,150
insights where we need to search for

48
00:02:56,150 --> 00:03:01,130
them so I mean our result is that we

49
00:03:01,130 --> 00:03:04,090
have found extra structure in this S box

50
00:03:04,090 --> 00:03:09,920
we should look like this so up to a

51
00:03:09,920 --> 00:03:12,110
linear as applied before and after this

52
00:03:12,110 --> 00:03:14,570
is equivalent to that I paint

53
00:03:14,570 --> 00:03:18,140
permutation so in this structure a is

54
00:03:18,140 --> 00:03:21,100
any three bit ap implementation and

55
00:03:21,100 --> 00:03:25,430
alpha is a so Dalton a circle is a

56
00:03:25,430 --> 00:03:27,710
financial multiplication by non zero

57
00:03:27,710 --> 00:03:30,680
alpha such that trace of alpha is equal

58
00:03:30,680 --> 00:03:36,170
to zero so now i will show how we manage

59
00:03:36,170 --> 00:03:40,400
to find this decomposition first recall

60
00:03:40,400 --> 00:03:42,860
the definition the notion of sbox

61
00:03:42,860 --> 00:03:46,040
reverse engineering so when some cipher

62
00:03:46,040 --> 00:03:50,870
or some primitive designers they publish

63
00:03:50,870 --> 00:03:54,530
NL box they might not explain how they

64
00:03:54,530 --> 00:03:57,230
obtained it be they generated by random

65
00:03:57,230 --> 00:03:59,960
optimized it or is some structure in

66
00:03:59,960 --> 00:04:02,810
order to have efficient software or

67
00:04:02,810 --> 00:04:05,690
hardware implementation and reverse

68
00:04:05,690 --> 00:04:10,400
engineering s box means to find some

69
00:04:10,400 --> 00:04:12,890
possible design criteria just from a

70
00:04:12,890 --> 00:04:17,238
lookup table and possible targets for

71
00:04:17,238 --> 00:04:20,120
reverse engineering for example s box of

72
00:04:20,120 --> 00:04:23,030
keep Jack this work represented

73
00:04:23,030 --> 00:04:27,500
my coasters at previous crypto where

74
00:04:27,500 --> 00:04:29,450
they basically introduced to the notion

75
00:04:29,450 --> 00:04:31,790
of S box reverse engineering and they

76
00:04:31,790 --> 00:04:34,820
showed that the S box of skipjack could

77
00:04:34,820 --> 00:04:36,770
have been optimized for some linear

78
00:04:36,770 --> 00:04:40,639
resistance at your clip this year we

79
00:04:40,639 --> 00:04:44,090
presented reverse engineering of S box

80
00:04:44,090 --> 00:04:46,639
of russian standard primitives where we

81
00:04:46,639 --> 00:04:50,030
actually found some structure and it

82
00:04:50,030 --> 00:04:52,340
turns out that we can use this summer

83
00:04:52,340 --> 00:04:55,880
cryptanalytic methods and apply them to

84
00:04:55,880 --> 00:04:59,180
this jion's a pain permutation it's

85
00:04:59,180 --> 00:05:00,830
interesting because the the paper

86
00:05:00,830 --> 00:05:02,870
invitation is more like a mathematical

87
00:05:02,870 --> 00:05:05,120
object and we know how it was generated

88
00:05:05,120 --> 00:05:07,940
by C we can apply this kind of crypt

89
00:05:07,940 --> 00:05:09,710
analysis and that's why we call this

90
00:05:09,710 --> 00:05:13,640
crypt analysis of a theorem so to

91
00:05:13,640 --> 00:05:16,040
introduce the methods are called

92
00:05:16,040 --> 00:05:17,960
definition of linear approximation table

93
00:05:17,960 --> 00:05:21,830
or allergy of a function it's very

94
00:05:21,830 --> 00:05:24,500
similar to DDT but instead of difference

95
00:05:24,500 --> 00:05:26,750
approximation we use linear

96
00:05:26,750 --> 00:05:29,090
approximation so which is defined by

97
00:05:29,090 --> 00:05:33,200
linear mask a and linear input mask a

98
00:05:33,200 --> 00:05:37,880
and output must be and the dog defines a

99
00:05:37,880 --> 00:05:45,320
scalar product okay so one of the ideas

100
00:05:45,320 --> 00:05:48,520
from the previous scripture paper was to

101
00:05:48,520 --> 00:05:50,720
draw a so-called Jackson Pollock

102
00:05:50,720 --> 00:05:54,950
representation of the 80 as we just

103
00:05:54,950 --> 00:05:57,919
compute this table and assign colors to

104
00:05:57,919 --> 00:05:59,990
the values and draw the corresponding

105
00:05:59,990 --> 00:06:02,510
image and then that is to look for

106
00:06:02,510 --> 00:06:06,740
patterns with your eyes and here we can

107
00:06:06,740 --> 00:06:09,620
so here's a such representation of the

108
00:06:09,620 --> 00:06:12,110
IT of the Jiang's fermentation so the

109
00:06:12,110 --> 00:06:16,130
one which we want to decompose and clear

110
00:06:16,130 --> 00:06:17,150
there are some patterns there are

111
00:06:17,150 --> 00:06:20,180
stripes and on top there are no gray

112
00:06:20,180 --> 00:06:23,870
areas and using the same metals as in

113
00:06:23,870 --> 00:06:27,830
previous papers we can actually apply so

114
00:06:27,830 --> 00:06:30,650
we can compose a linear mapping quiz

115
00:06:30,650 --> 00:06:33,610
sbox such that the resolution has box

116
00:06:33,610 --> 00:06:35,379
has this

117
00:06:35,379 --> 00:06:38,990
representation of the AG it's much more

118
00:06:38,990 --> 00:06:41,030
structured and so there is some kind of

119
00:06:41,030 --> 00:06:44,360
square structure but more importantly

120
00:06:44,360 --> 00:06:47,870
there is a wide square in the top left

121
00:06:47,870 --> 00:06:51,440
corner and this white square is an

122
00:06:51,440 --> 00:06:54,759
indicator of some multi set properties

123
00:06:54,759 --> 00:06:59,210
which can be which is a result we can

124
00:06:59,210 --> 00:07:02,690
obtain the following structure for the S

125
00:07:02,690 --> 00:07:05,690
box so forth as books which is consists

126
00:07:05,690 --> 00:07:07,729
of a vacation in your lair and the

127
00:07:07,729 --> 00:07:11,419
generals permutation here attuned you

128
00:07:11,419 --> 00:07:14,509
are keyed permutations that is for

129
00:07:14,509 --> 00:07:16,789
example 40 when the left branch is fixed

130
00:07:16,789 --> 00:07:19,639
then it is a permutation on one branch

131
00:07:19,639 --> 00:07:23,659
and when the key come in from apt is

132
00:07:23,659 --> 00:07:25,520
different the permutation is different

133
00:07:25,520 --> 00:07:27,860
each time you can also think about them

134
00:07:27,860 --> 00:07:32,780
as small block ciphers for example huge

135
00:07:32,780 --> 00:07:35,930
table 40 the level branch selects a row

136
00:07:35,930 --> 00:07:37,849
and then each Road you finds a

137
00:07:37,849 --> 00:07:43,520
permutation so this y square indicates

138
00:07:43,520 --> 00:07:45,650
some other properties and the mod set

139
00:07:45,650 --> 00:07:49,430
properties that if you fix the out

140
00:07:49,430 --> 00:07:52,699
branch and we put all values on the

141
00:07:52,699 --> 00:07:54,770
right branch then we will get all values

142
00:07:54,770 --> 00:07:57,590
on the right branch of the output has

143
00:07:57,590 --> 00:07:59,960
just exactly what this tu decomposition

144
00:07:59,960 --> 00:08:04,069
captures and the white square and we

145
00:08:04,069 --> 00:08:06,590
also notice that in you in particular in

146
00:08:06,590 --> 00:08:09,409
this case are related by linear mapping

147
00:08:09,409 --> 00:08:11,960
so we need to decompose only tea and

148
00:08:11,960 --> 00:08:14,360
they will get immediately decomposition

149
00:08:14,360 --> 00:08:18,710
of you so here's a small order how we

150
00:08:18,710 --> 00:08:22,909
can decompose tea first we detach linear

151
00:08:22,909 --> 00:08:27,020
from a feisty function such that T prime

152
00:08:27,020 --> 00:08:32,419
maps 0204 oh geez so for always coming

153
00:08:32,419 --> 00:08:35,390
from right in particular in this case it

154
00:08:35,390 --> 00:08:38,919
turns out that d is a linear permutation

155
00:08:38,919 --> 00:08:42,260
it's a good indicator that we are in the

156
00:08:42,260 --> 00:08:44,240
right way because in general this can be

157
00:08:44,240 --> 00:08:46,680
arbitrary function

158
00:08:46,680 --> 00:08:50,010
then we look at the univariate

159
00:08:50,010 --> 00:08:52,050
representation of key for all different

160
00:08:52,050 --> 00:08:55,140
keys and we found that nonlinear part is

161
00:08:55,140 --> 00:08:58,020
key independent so we can separate it

162
00:08:58,020 --> 00:09:00,870
into nonlinear part and and linear still

163
00:09:00,870 --> 00:09:06,180
dependent part and then we can apply

164
00:09:06,180 --> 00:09:08,370
submarine implementation so that

165
00:09:08,370 --> 00:09:10,500
nonlinear part actually becomes the

166
00:09:10,500 --> 00:09:15,480
field universe on three bits and some

167
00:09:15,480 --> 00:09:18,510
few strips later similar steps we

168
00:09:18,510 --> 00:09:22,910
actually obtain the foundry composition

169
00:09:22,910 --> 00:09:26,880
so the top part corresponds to t and the

170
00:09:26,880 --> 00:09:29,040
bottom part corresponds to you and there

171
00:09:29,040 --> 00:09:32,130
is a linear layer among them between

172
00:09:32,130 --> 00:09:36,720
them and we remove the X or constants

173
00:09:36,720 --> 00:09:38,640
and it's still an open permutation and

174
00:09:38,640 --> 00:09:41,310
we also look for a nice representation

175
00:09:41,310 --> 00:09:45,630
of the central inner layer and the

176
00:09:45,630 --> 00:09:48,180
result we obtain the decomposition the

177
00:09:48,180 --> 00:09:52,620
final the competition that we have in

178
00:09:52,620 --> 00:09:54,750
particular it allows for a nice big

179
00:09:54,750 --> 00:09:57,630
slice implementation so if somebody

180
00:09:57,630 --> 00:09:59,850
wants to design some lightweight cipher

181
00:09:59,850 --> 00:10:05,870
using these books can be quite efficient

182
00:10:05,870 --> 00:10:09,480
so the next question is the initial

183
00:10:09,480 --> 00:10:11,910
question is so we have this structure

184
00:10:11,910 --> 00:10:15,300
and we can simply change the branch size

185
00:10:15,300 --> 00:10:17,040
because it was six be test box and the

186
00:10:17,040 --> 00:10:19,290
branch size 43 and now we can change it

187
00:10:19,290 --> 00:10:20,880
to some larger values and see what

188
00:10:20,880 --> 00:10:24,089
happens and we call such a structure

189
00:10:24,089 --> 00:10:26,550
butterfly structure kind of looks like

190
00:10:26,550 --> 00:10:31,140
butterfly and so we call this open

191
00:10:31,140 --> 00:10:33,150
butterfly structure and we denote it by

192
00:10:33,150 --> 00:10:36,720
H and additionally we study this another

193
00:10:36,720 --> 00:10:38,820
structure which we go closed butterfly

194
00:10:38,820 --> 00:10:42,029
and we denote it by we it is interesting

195
00:10:42,029 --> 00:10:46,980
from analysis perspective now we recall

196
00:10:46,980 --> 00:10:51,089
definition of CC set equivalents to

197
00:10:51,089 --> 00:10:53,130
function size is the equivalent if the

198
00:10:53,130 --> 00:10:55,470
graphs the functional graphs are related

199
00:10:55,470 --> 00:10:58,220
by an affine mapping

200
00:10:58,290 --> 00:11:00,930
a good thing about the set equivalence

201
00:11:00,930 --> 00:11:02,940
is that it preserves the maximum

202
00:11:02,940 --> 00:11:07,500
coefficients in DDT and la tee and it

203
00:11:07,500 --> 00:11:09,209
turns out that the open and close

204
00:11:09,209 --> 00:11:11,610
butterflies us is that equivalent so

205
00:11:11,610 --> 00:11:13,019
these two structures are sis data

206
00:11:13,019 --> 00:11:17,430
current and therefore they have same DDT

207
00:11:17,430 --> 00:11:25,680
and LG maximum coefficients and we

208
00:11:25,680 --> 00:11:28,319
managed to prove that both open closed

209
00:11:28,319 --> 00:11:31,350
but replace the GT coefficients are at

210
00:11:31,350 --> 00:11:34,649
most four experimentally we checked for

211
00:11:34,649 --> 00:11:37,730
small L and we did not find any new IBM

212
00:11:37,730 --> 00:11:41,310
because there were some force always but

213
00:11:41,310 --> 00:11:43,319
we don't know if for some larger and

214
00:11:43,319 --> 00:11:47,279
maybe there will be some the algebraic

215
00:11:47,279 --> 00:11:49,889
degree of closed butterflies to and of

216
00:11:49,889 --> 00:11:53,069
open of artifice and plus 1 where n is

217
00:11:53,069 --> 00:11:56,690
the branch size and experimentally we

218
00:11:56,690 --> 00:11:59,040
for small L we found that the

219
00:11:59,040 --> 00:12:01,019
non-linearity which depends on the

220
00:12:01,019 --> 00:12:04,589
maximum aletta coefficient is the best

221
00:12:04,589 --> 00:12:08,579
known to be possible this for multiplies

222
00:12:08,579 --> 00:12:12,060
and this corresponds to case when alpha

223
00:12:12,060 --> 00:12:16,829
is not equal to 0 and 1 and interesting

224
00:12:16,829 --> 00:12:19,760
things happen when we put our 50 to 1

225
00:12:19,760 --> 00:12:22,410
the open butterfly actually becomes

226
00:12:22,410 --> 00:12:24,839
functional equivalent to a three-round

227
00:12:24,839 --> 00:12:27,149
feistel network and the clothes

228
00:12:27,149 --> 00:12:29,069
butterfly becomes equivalent through

229
00:12:29,069 --> 00:12:34,319
this lemma is like structure they have

230
00:12:34,319 --> 00:12:37,829
some similar properties but for this we

231
00:12:37,829 --> 00:12:39,000
can prove that they are not AP and

232
00:12:39,000 --> 00:12:42,260
always they adjust they contain only

233
00:12:42,260 --> 00:12:47,779
ladies contain only force for any n and

234
00:12:47,779 --> 00:12:50,339
the algebraic degree of clothes barflies

235
00:12:50,339 --> 00:12:52,889
also to and for open bar fight is n

236
00:12:52,889 --> 00:12:56,100
instead of time postponed for the

237
00:12:56,100 --> 00:13:00,300
previous case and another interesting

238
00:13:00,300 --> 00:13:04,050
properties at fault some exponents e for

239
00:13:04,050 --> 00:13:09,060
example equal to 5 the clothes butterfly

240
00:13:09,060 --> 00:13:10,640
this structure

241
00:13:10,640 --> 00:13:13,610
a fine equivalent to a monomial X to the

242
00:13:13,610 --> 00:13:16,630
power e in the in the large field and

243
00:13:16,630 --> 00:13:18,800
since these two structures us is that

244
00:13:18,800 --> 00:13:21,200
equivalent will you use it the this

245
00:13:21,200 --> 00:13:23,000
fighter network figure on fight network

246
00:13:23,000 --> 00:13:25,540
is this is at equivalent to a monomial

247
00:13:25,540 --> 00:13:32,020
sir quite interesting okay and now some

248
00:13:32,020 --> 00:13:34,810
new properties of the Appian permutation

249
00:13:34,810 --> 00:13:40,040
so we go back to six bits the appended

250
00:13:40,040 --> 00:13:42,800
structure that we have found and we look

251
00:13:42,800 --> 00:13:46,250
what we can change in this structure so

252
00:13:46,250 --> 00:13:49,390
that it still remains an APN permutation

253
00:13:49,390 --> 00:13:52,490
first we can replace a by any small

254
00:13:52,490 --> 00:13:57,290
Appian permutation we can replace alpha

255
00:13:57,290 --> 00:13:59,840
by any field element with trace equal to

256
00:13:59,840 --> 00:14:04,250
zero and non zero element we can solve

257
00:14:04,250 --> 00:14:08,210
values here here here and here like

258
00:14:08,210 --> 00:14:10,130
there was always five in the original

259
00:14:10,130 --> 00:14:12,170
structure we removed it but we can put

260
00:14:12,170 --> 00:14:14,980
any source and it still remains napn

261
00:14:14,980 --> 00:14:20,840
imitation we can apply linear functions

262
00:14:20,840 --> 00:14:25,070
here and here and here and here and also

263
00:14:25,070 --> 00:14:29,440
we can add branch swaps before the red

264
00:14:29,440 --> 00:14:33,140
rectangle and after the first four

265
00:14:33,140 --> 00:14:35,780
transformations they preserve a fine

266
00:14:35,780 --> 00:14:37,760
equivalence that is applying these

267
00:14:37,760 --> 00:14:40,400
transformations is equivalent to apply

268
00:14:40,400 --> 00:14:42,260
in sum of five mappings before the

269
00:14:42,260 --> 00:14:45,620
structure and after the structure but

270
00:14:45,620 --> 00:14:48,410
the last transformation engine swaps

271
00:14:48,410 --> 00:14:50,960
before and after breaks a fine

272
00:14:50,960 --> 00:14:54,020
equivalents let us we obtain for

273
00:14:54,020 --> 00:14:55,940
different of an equivalence classes of

274
00:14:55,940 --> 00:15:00,590
this AP and permutation but the cset

275
00:15:00,590 --> 00:15:03,590
occurrence is still preserved so it from

276
00:15:03,590 --> 00:15:05,780
the point view of CC that equivalence

277
00:15:05,780 --> 00:15:08,000
it's still the same as box as Jones

278
00:15:08,000 --> 00:15:11,960
permutation and other interesting

279
00:15:11,960 --> 00:15:14,750
properties first we define a component

280
00:15:14,750 --> 00:15:18,260
wise product and then the property is

281
00:15:18,260 --> 00:15:20,060
that foreclose butterflies if you

282
00:15:20,060 --> 00:15:22,810
multiply both input branches by lambda

283
00:15:22,810 --> 00:15:25,340
then it is equivalent to multiplying our

284
00:15:25,340 --> 00:15:27,710
two branches by lambda to the power e

285
00:15:27,710 --> 00:15:32,180
and for the open butterfly if you

286
00:15:32,180 --> 00:15:34,160
multiply the input branches by lambda to

287
00:15:34,160 --> 00:15:36,740
the power n lambda it is equivalent to

288
00:15:36,740 --> 00:15:38,840
multiplying the output branches by the

289
00:15:38,840 --> 00:15:45,020
same radius also the close butterfly is

290
00:15:45,020 --> 00:15:46,220
actually a fine equivalent to a

291
00:15:46,220 --> 00:15:50,170
concatenation of two bent functions

292
00:15:50,170 --> 00:15:53,450
extra one band function and same bed

293
00:15:53,450 --> 00:16:00,350
function with swapped parameters usually

294
00:16:00,350 --> 00:16:05,450
in the Johnsons paper they present a

295
00:16:05,450 --> 00:16:07,910
univariate representation of this APN

296
00:16:07,910 --> 00:16:10,760
permutation who are the composition of

297
00:16:10,760 --> 00:16:12,740
two functions where each contains like

298
00:16:12,740 --> 00:16:15,730
18 monomials it's quite complex and

299
00:16:15,730 --> 00:16:18,190
using our decomposition we managed to

300
00:16:18,190 --> 00:16:21,380
find much smaller representation with

301
00:16:21,380 --> 00:16:24,740
only like four and six monomials or

302
00:16:24,740 --> 00:16:27,320
using a composition of three three

303
00:16:27,320 --> 00:16:29,950
functions even more compact

304
00:16:29,950 --> 00:16:36,320
representation and a small remark about

305
00:16:36,320 --> 00:16:40,610
the key mapping it is an apparent

306
00:16:40,610 --> 00:16:44,390
function given by this polynomial it's

307
00:16:44,390 --> 00:16:47,360
not a permutation and it was already

308
00:16:47,360 --> 00:16:53,090
home before g1 in dallas and actually it

309
00:16:53,090 --> 00:16:56,030
was a starting point from each the july

310
00:16:56,030 --> 00:16:58,130
nine dollars obtained the APN

311
00:16:58,130 --> 00:17:01,610
permutation so Kim a pink is a PN but

312
00:17:01,610 --> 00:17:03,980
not permutation and using some code

313
00:17:03,980 --> 00:17:06,369
theory and algorithmic search they

314
00:17:06,369 --> 00:17:08,569
managed to transform it into a

315
00:17:08,569 --> 00:17:13,180
permutation very painful mutation and

316
00:17:13,180 --> 00:17:16,940
our structures our decompositions I

317
00:17:16,940 --> 00:17:19,280
related like this so strong before the

318
00:17:19,280 --> 00:17:20,780
open butterflies corresponds to the

319
00:17:20,780 --> 00:17:24,010
paint permutation a fine equivalent and

320
00:17:24,010 --> 00:17:26,569
actually the close butterfly is a fine

321
00:17:26,569 --> 00:17:29,660
equivalent to the key mapping so in some

322
00:17:29,660 --> 00:17:32,440
sense we can reinterpret this

323
00:17:32,440 --> 00:17:35,180
transformation Dion and others did

324
00:17:35,180 --> 00:17:40,570
as open in the closed butterfly

325
00:17:42,670 --> 00:17:46,250
conclusions there is a decomposition of

326
00:17:46,250 --> 00:17:48,530
the only known a pimper mutation in

327
00:17:48,530 --> 00:17:52,250
human dimension but we did not find any

328
00:17:52,250 --> 00:17:54,320
new I pain permutations in even

329
00:17:54,320 --> 00:17:58,070
dimension and there are is to open

330
00:17:58,070 --> 00:18:00,980
problems to prove the experimental

331
00:18:00,980 --> 00:18:05,330
result about non-linearity and to see

332
00:18:05,330 --> 00:18:07,010
whether there are actually ap and

333
00:18:07,010 --> 00:18:10,850
permutations sorry APN butterflies for

334
00:18:10,850 --> 00:18:14,390
larger L but actually there is a group

335
00:18:14,390 --> 00:18:16,520
which as i think is answer these

336
00:18:16,520 --> 00:18:20,330
questions so to the first question there

337
00:18:20,330 --> 00:18:24,350
is a positive answer so it's the

338
00:18:24,350 --> 00:18:27,830
butterflies always have the best put

339
00:18:27,830 --> 00:18:30,340
known to be possible on linearity and

340
00:18:30,340 --> 00:18:32,660
for the second question the answer is

341
00:18:32,660 --> 00:18:36,440
negative the butterflies actually never

342
00:18:36,440 --> 00:18:40,040
i pn except this six beat fermentation

343
00:18:40,040 --> 00:18:44,210
and so the only the main open quick

344
00:18:44,210 --> 00:18:46,760
question is whether they're still gives

345
00:18:46,760 --> 00:18:49,100
a pen permutations in even dimension

346
00:18:49,100 --> 00:18:54,820
other than this John permutation thank

347
00:18:57,400 --> 00:18:59,460
you

