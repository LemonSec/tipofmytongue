1
00:00:04,300 --> 00:00:07,340
thank you for the introduction so this

2
00:00:07,340 --> 00:00:09,400
is joint work with Vika Park ASCII and

3
00:00:09,400 --> 00:00:13,190
Christina busca and when you're talking

4
00:00:13,190 --> 00:00:13,820
about

5
00:00:13,820 --> 00:00:15,350
statistically secure of the station with

6
00:00:15,350 --> 00:00:16,789
approximate correctness the first

7
00:00:16,789 --> 00:00:18,800
obvious question is what is

8
00:00:18,800 --> 00:00:20,949
statistically secure for station and

9
00:00:20,949 --> 00:00:23,599
it's a very short reminder an obfuscator

10
00:00:23,599 --> 00:00:25,699
is basically just a program that gets us

11
00:00:25,699 --> 00:00:27,800
input a circuit see and probably some

12
00:00:27,800 --> 00:00:29,359
randomness and it outputs another

13
00:00:29,359 --> 00:00:31,880
circuit C prime and what he would

14
00:00:31,880 --> 00:00:34,120
usually want is perfect correctness

15
00:00:34,120 --> 00:00:37,820
meaning that the output circuit should

16
00:00:37,820 --> 00:00:39,590
be functionally equivalent to the input

17
00:00:39,590 --> 00:00:44,929
circuit however we can sometimes get

18
00:00:44,929 --> 00:00:46,940
away with much weaker definitions what

19
00:00:46,940 --> 00:00:48,379
we are doing with this approximate

20
00:00:48,379 --> 00:00:49,730
correctness approximate correctness

21
00:00:49,730 --> 00:00:53,000
basically means that for a random input

22
00:00:53,000 --> 00:00:56,929
the output circuit must agree with the

23
00:00:56,929 --> 00:00:59,059
input circuit with probability at least

24
00:00:59,059 --> 00:01:01,280
1 minus epsilon for some function

25
00:01:01,280 --> 00:01:02,989
epsilon that basically describes the

26
00:01:02,989 --> 00:01:05,980
approximation error of the obfuscator

27
00:01:05,980 --> 00:01:08,270
the second thing we want from our

28
00:01:08,270 --> 00:01:10,340
obfuscator is of course that it's secure

29
00:01:10,340 --> 00:01:12,440
and what you would usually go with is

30
00:01:12,440 --> 00:01:15,200
indistinct ability of the station and in

31
00:01:15,200 --> 00:01:17,510
the statistical sense indistinct ability

32
00:01:17,510 --> 00:01:20,690
obfuscation simply means that the if you

33
00:01:20,690 --> 00:01:22,070
have two circuits that are functionally

34
00:01:22,070 --> 00:01:24,620
equivalent and have the same size then

35
00:01:24,620 --> 00:01:26,570
their statistical distance léo the

36
00:01:26,570 --> 00:01:28,070
statistical distance of the obfuscation

37
00:01:28,070 --> 00:01:31,760
must be negligible however we can also

38
00:01:31,760 --> 00:01:34,550
weaken this definition to something that

39
00:01:34,550 --> 00:01:36,620
we know a paper call correlation of the

40
00:01:36,620 --> 00:01:39,830
station and there the difference is that

41
00:01:39,830 --> 00:01:43,580
we no longer want that the statistical

42
00:01:43,580 --> 00:01:45,530
distance was necessarily bounded by a

43
00:01:45,530 --> 00:01:47,930
negligible function instead it's enough

44
00:01:47,930 --> 00:01:50,210
that we know some function Delta that

45
00:01:50,210 --> 00:01:53,510
bounce this statistical distance for the

46
00:01:53,510 --> 00:01:55,010
main part of my talk I will actually

47
00:01:55,010 --> 00:01:56,660
focus on the indistinct ability of the

48
00:01:56,660 --> 00:01:58,730
SCADA simply to keep things a bit

49
00:01:58,730 --> 00:02:01,160
simpler but I will mention how our

50
00:02:01,160 --> 00:02:02,870
result also applies to correlation of

51
00:02:02,870 --> 00:02:07,790
the scalars so the next obvious question

52
00:02:07,790 --> 00:02:10,160
might be why we even care about

53
00:02:10,160 --> 00:02:12,260
approximate correctness because an

54
00:02:12,260 --> 00:02:14,690
approximately correct obfuscator might

55
00:02:14,690 --> 00:02:17,330
seem like a multiple useful thing

56
00:02:17,330 --> 00:02:20,210
it does not even a guarantee that it is

57
00:02:20,210 --> 00:02:24,080
correct on any fixed input however it

58
00:02:24,080 --> 00:02:25,610
turns out that it is in fact still

59
00:02:25,610 --> 00:02:28,130
useful in particular it was observed by

60
00:02:28,130 --> 00:02:31,280
Mahmud II Muhammad knew mati Hutchy Paz

61
00:02:31,280 --> 00:02:34,220
and Sheila that you can still construct

62
00:02:34,220 --> 00:02:35,990
a public key encryption from one way

63
00:02:35,990 --> 00:02:37,790
functions if you have statistically

64
00:02:37,790 --> 00:02:42,260
secure i/o approximately all and this is

65
00:02:42,260 --> 00:02:43,880
basically done by just applying the

66
00:02:43,880 --> 00:02:46,430
construction of the high-end waters that

67
00:02:46,430 --> 00:02:48,050
usually constructs poplu key encryption

68
00:02:48,050 --> 00:02:50,660
from one-way functions niño to an

69
00:02:50,660 --> 00:02:52,790
approximate i/o and then you get

70
00:02:52,790 --> 00:02:54,860
something that you can amplify using an

71
00:02:54,860 --> 00:02:56,690
amplification technique due to Hornstein

72
00:02:56,690 --> 00:02:58,730
to a full public key encryption scheme

73
00:02:58,730 --> 00:03:01,910
and in our paper we show with the

74
00:03:01,910 --> 00:03:03,709
careful analysis that this is not only

75
00:03:03,709 --> 00:03:05,780
true for statistically secure

76
00:03:05,780 --> 00:03:07,640
approximate i/o but this is even true

77
00:03:07,640 --> 00:03:09,650
for correlation obfuscation for

78
00:03:09,650 --> 00:03:12,200
everything for all the parameters

79
00:03:12,200 --> 00:03:15,530
basically in this blue area here so that

80
00:03:15,530 --> 00:03:17,480
means that even correlation Association

81
00:03:17,480 --> 00:03:19,880
is still an interesting primitive and

82
00:03:19,880 --> 00:03:21,769
it's a very interesting question to ask

83
00:03:21,769 --> 00:03:24,230
whether it might exist especially in

84
00:03:24,230 --> 00:03:28,040
this region for with statistical

85
00:03:28,040 --> 00:03:29,360
security because it would lead to a

86
00:03:29,360 --> 00:03:30,920
major breakthrough in crypto giving your

87
00:03:30,920 --> 00:03:32,090
public key encryption from one-way

88
00:03:32,090 --> 00:03:35,060
functions and our answer to that

89
00:03:35,060 --> 00:03:38,090
question is mainly negative what we show

90
00:03:38,090 --> 00:03:40,670
is that if statistically secure

91
00:03:40,670 --> 00:03:42,769
approximately correct IO would exist

92
00:03:42,769 --> 00:03:44,750
then either one-way functions do not

93
00:03:44,750 --> 00:03:46,850
exist or the polynomial hierarchy

94
00:03:46,850 --> 00:03:49,790
collapses and since we do not believe

95
00:03:49,790 --> 00:03:51,140
that either one-way functions do not

96
00:03:51,140 --> 00:03:52,519
exist or the polynomial hierarchy

97
00:03:52,519 --> 00:03:55,670
collapses probably statistically secure

98
00:03:55,670 --> 00:03:58,610
approximate ioad does not exist our

99
00:03:58,610 --> 00:04:00,890
actual proof is more general in that it

100
00:04:00,890 --> 00:04:02,720
also applies to correlation of physician

101
00:04:02,720 --> 00:04:05,209
and it basically gives us a lower bound

102
00:04:05,209 --> 00:04:07,310
on the possible parameters for

103
00:04:07,310 --> 00:04:09,100
statistically correct

104
00:04:09,100 --> 00:04:11,510
statistically secure approximately

105
00:04:11,510 --> 00:04:14,330
correct correlation of the station how

106
00:04:14,330 --> 00:04:15,680
our focal relation of the station we

107
00:04:15,680 --> 00:04:17,839
also have a positive result where we can

108
00:04:17,839 --> 00:04:21,168
for very weak parameters give a trivial

109
00:04:21,168 --> 00:04:25,090
construction and this gives us this

110
00:04:25,090 --> 00:04:27,520
landscape of correlation obfuscation

111
00:04:27,520 --> 00:04:29,689
where in the

112
00:04:29,689 --> 00:04:31,999
right we have a large area that we

113
00:04:31,999 --> 00:04:34,059
actually know a trivial construction

114
00:04:34,059 --> 00:04:37,039
however the construction is actually so

115
00:04:37,039 --> 00:04:39,529
trivial that we are pretty certain that

116
00:04:39,529 --> 00:04:42,349
it is completely useless on the other

117
00:04:42,349 --> 00:04:45,289
hand we have down here the red range in

118
00:04:45,289 --> 00:04:47,469
this range we cannot construct

119
00:04:47,469 --> 00:04:49,099
correlation of the station with

120
00:04:49,099 --> 00:04:54,289
statistical security unless the

121
00:04:54,289 --> 00:04:55,879
polynomial hierarchy collapses or one

122
00:04:55,879 --> 00:04:58,069
way functions do not exist however I

123
00:04:58,069 --> 00:05:00,259
need to mention that we cannot rule out

124
00:05:00,259 --> 00:05:02,269
the full range of parameters that are

125
00:05:02,269 --> 00:05:04,519
actually useful for the transformation

126
00:05:04,519 --> 00:05:08,449
to public image so how does our proof

127
00:05:08,449 --> 00:05:11,749
work basically our the starting point

128
00:05:11,749 --> 00:05:13,610
for all proof is the previous proof by

129
00:05:13,610 --> 00:05:16,219
God Foster and wrote bloom and what they

130
00:05:16,219 --> 00:05:17,709
showed was the impossibility of

131
00:05:17,709 --> 00:05:20,809
statistically secure IO with perfect

132
00:05:20,809 --> 00:05:24,979
correctness and they also rely on the

133
00:05:24,979 --> 00:05:27,919
assumption that the polynomial hierarchy

134
00:05:27,919 --> 00:05:29,479
does not collapse and what they do is

135
00:05:29,479 --> 00:05:31,909
basically show how and statistically

136
00:05:31,909 --> 00:05:33,559
secure obfuscator would help you in

137
00:05:33,559 --> 00:05:36,589
solving set so the set problem is that

138
00:05:36,589 --> 00:05:39,199
you you're given a formula it's either

139
00:05:39,199 --> 00:05:41,149
unsatisfiable or satisfiable and you

140
00:05:41,149 --> 00:05:44,419
have to decide which one it is and to be

141
00:05:44,419 --> 00:05:47,829
able to use an obfuscator to do that we

142
00:05:47,829 --> 00:05:50,899
look at another formula the formula 0 is

143
00:05:50,899 --> 00:05:54,259
some canonical unsatisfiable formula it

144
00:05:54,259 --> 00:05:55,729
doesn't matter what it is just we know

145
00:05:55,729 --> 00:05:59,300
this formula is unsatisfiable and now we

146
00:05:59,300 --> 00:06:02,419
obfuscate all of these formula and what

147
00:06:02,419 --> 00:06:04,579
we get is that because the two

148
00:06:04,579 --> 00:06:06,829
unsatisfiable formula are functionally

149
00:06:06,829 --> 00:06:08,959
equivalent the security of the

150
00:06:08,959 --> 00:06:11,269
obfuscator guarantees us that the output

151
00:06:11,269 --> 00:06:13,699
distributions must be negligible close

152
00:06:13,699 --> 00:06:16,369
on the other hand if we have a

153
00:06:16,369 --> 00:06:17,919
satisfiable formula then by definition

154
00:06:17,919 --> 00:06:20,659
this formula is not functionally

155
00:06:20,659 --> 00:06:23,089
equivalent to a zero circuit because

156
00:06:23,089 --> 00:06:25,099
they exist at least one point on which

157
00:06:25,099 --> 00:06:28,249
it actually outputs one and because you

158
00:06:28,249 --> 00:06:29,599
have perfect correctness in the

159
00:06:29,599 --> 00:06:31,639
obfuscator this means that the output

160
00:06:31,639 --> 00:06:33,229
distributions are actually completely

161
00:06:33,229 --> 00:06:36,139
disjoint and now it turns out that the

162
00:06:36,139 --> 00:06:38,179
problem of deciding where the two

163
00:06:38,179 --> 00:06:40,240
distributions are either very close

164
00:06:40,240 --> 00:06:42,729
statistically or very far

165
00:06:42,729 --> 00:06:44,439
this is called the gap statistical

166
00:06:44,439 --> 00:06:47,110
distance problem and it was proven by is

167
00:06:47,110 --> 00:06:49,479
a high-end Vardhan that this problem is

168
00:06:49,479 --> 00:06:52,479
actually in am intersect OEM which would

169
00:06:52,479 --> 00:06:54,819
mean that we can decide sat in am

170
00:06:54,819 --> 00:06:57,430
intersect OEM which would imply collapse

171
00:06:57,430 --> 00:07:02,680
of the polynomial hierarchy so the next

172
00:07:02,680 --> 00:07:04,870
obvious question is of course can we

173
00:07:04,870 --> 00:07:06,610
just use exactly the same approach in

174
00:07:06,610 --> 00:07:09,279
the approximate case and the answer is

175
00:07:09,279 --> 00:07:12,099
no and to see why just consider that we

176
00:07:12,099 --> 00:07:14,349
have a satisfiable formula that has very

177
00:07:14,349 --> 00:07:16,839
few satisfying assignments I'd say it

178
00:07:16,839 --> 00:07:18,669
only has a single satisfying assignment

179
00:07:18,669 --> 00:07:20,979
then it actually disagrees with the zero

180
00:07:20,979 --> 00:07:23,099
circuit only on a single point and

181
00:07:23,099 --> 00:07:25,300
because we only have an approximate

182
00:07:25,300 --> 00:07:25,899
obfuscator

183
00:07:25,899 --> 00:07:27,789
the obfuscator can just ignore that

184
00:07:27,789 --> 00:07:30,969
point obfuscate this satisfiable formula

185
00:07:30,969 --> 00:07:34,659
to a zero circuit and therefore we no

186
00:07:34,659 --> 00:07:36,039
longer have the guarantee that there

187
00:07:36,039 --> 00:07:39,849
will be a large statistical distance so

188
00:07:39,849 --> 00:07:42,330
how do we solve this problem

189
00:07:42,330 --> 00:07:45,969
our approach is basically to obfuscate

190
00:07:45,969 --> 00:07:48,849
more complicated circuits and for this

191
00:07:48,849 --> 00:07:50,770
we construct two different circuits we

192
00:07:50,770 --> 00:07:52,689
construct a reference circuit see why

193
00:07:52,689 --> 00:07:55,810
and the circuit see X that's indexed

194
00:07:55,810 --> 00:07:59,339
with a PRF key and a formula beside and

195
00:07:59,339 --> 00:08:01,569
we construct these circuits in such a

196
00:08:01,569 --> 00:08:03,959
way that if the formula precise

197
00:08:03,959 --> 00:08:07,120
unsatisfiable then the two circuits are

198
00:08:07,120 --> 00:08:09,099
functioning privileged and the output

199
00:08:09,099 --> 00:08:11,110
distributions are once again negligibly

200
00:08:11,110 --> 00:08:15,099
close on the other hand if Sai is

201
00:08:15,099 --> 00:08:17,589
satisfiable then the two circuits are

202
00:08:17,589 --> 00:08:19,809
almost functionally equivalent however

203
00:08:19,809 --> 00:08:22,689
there exists a point we call x0 on which

204
00:08:22,689 --> 00:08:24,969
they disagree now this may seem

205
00:08:24,969 --> 00:08:27,069
confusing because I just spent some time

206
00:08:27,069 --> 00:08:28,959
arguing that if you have two circuit

207
00:08:28,959 --> 00:08:30,999
that only disagree on a single point an

208
00:08:30,999 --> 00:08:32,679
obfuscator might choose to ignore that

209
00:08:32,679 --> 00:08:35,110
point and that is why we basically have

210
00:08:35,110 --> 00:08:37,380
to hide whether this point exists or not

211
00:08:37,380 --> 00:08:45,970
so to do this to do this we introduce

212
00:08:45,970 --> 00:08:49,180
another circuit see and this circuit is

213
00:08:49,180 --> 00:08:50,620
constructed in such a way that it is

214
00:08:50,620 --> 00:08:52,750
functioning provement to the reference

215
00:08:52,750 --> 00:08:55,610
circuit however the obfuscator cannot

216
00:08:55,610 --> 00:08:57,769
we distinguish between the circuit C X

217
00:08:57,769 --> 00:09:02,470
and the circuit C and this allows us to

218
00:09:02,470 --> 00:09:05,120
to ensure that the while the

219
00:09:05,120 --> 00:09:06,680
distributions are no longer completely

220
00:09:06,680 --> 00:09:08,779
disjoint that the statistical distance

221
00:09:08,779 --> 00:09:12,260
is large and to be able to do this we

222
00:09:12,260 --> 00:09:14,060
leverage the fact that the obfuscator is

223
00:09:14,060 --> 00:09:15,500
actually an efficient algorithm even

224
00:09:15,500 --> 00:09:17,990
though it must be statistically secure

225
00:09:17,990 --> 00:09:19,940
it must itself be an efficient algorithm

226
00:09:19,940 --> 00:09:24,980
to be useful and so we leverage here our

227
00:09:24,980 --> 00:09:26,930
assumption that one-way functions exist

228
00:09:26,930 --> 00:09:30,500
and this assumption is leverage in the

229
00:09:30,500 --> 00:09:33,880
form of punctual surrender functions and

230
00:09:33,880 --> 00:09:36,589
functions of random functions were shown

231
00:09:36,589 --> 00:09:40,209
by Bonnie waters boiled goat versa even

232
00:09:40,209 --> 00:09:43,399
and key ayahs of Otto Poulos treetopolis

233
00:09:43,399 --> 00:09:46,519
aha yes basically concurrently to be

234
00:09:46,519 --> 00:09:48,410
existentially equivalent to one wave

235
00:09:48,410 --> 00:09:51,769
functions and we use a very simple

236
00:09:51,769 --> 00:09:54,350
notion of functional PRF here where we

237
00:09:54,350 --> 00:09:57,589
have two algorithms we have a PRF

238
00:09:57,589 --> 00:10:02,690
algorithm that on input a key and an

239
00:10:02,690 --> 00:10:05,630
input value outputs a single bit and we

240
00:10:05,630 --> 00:10:08,029
have a puncture algorithm that on input

241
00:10:08,029 --> 00:10:11,600
a key and a value x0 outputs a punctured

242
00:10:11,600 --> 00:10:13,730
key and we want two things from a

243
00:10:13,730 --> 00:10:16,160
punctual PRF first of all functionality

244
00:10:16,160 --> 00:10:17,600
should be preserved on the puncturing

245
00:10:17,600 --> 00:10:19,910
meaning that for all inputs that are not

246
00:10:19,910 --> 00:10:22,010
X zero it makes no difference whether

247
00:10:22,010 --> 00:10:23,870
you use the Patchett key or the normal

248
00:10:23,870 --> 00:10:27,290
key second thing is of course security

249
00:10:27,290 --> 00:10:30,500
and security for punctual PRF is defined

250
00:10:30,500 --> 00:10:32,540
as follows you have the attacker the

251
00:10:32,540 --> 00:10:34,730
attacker may choose a point X 0 on which

252
00:10:34,730 --> 00:10:36,829
we should puncture the key we choose a

253
00:10:36,829 --> 00:10:40,300
key K we puncture that key on X 0 and

254
00:10:40,300 --> 00:10:43,070
then we have two cases either we give

255
00:10:43,070 --> 00:10:45,769
the attacker the punctured key and the

256
00:10:45,769 --> 00:10:49,670
actual PRF value on X 0 or we give the

257
00:10:49,670 --> 00:10:55,940
attacker or we give the attacker the

258
00:10:55,940 --> 00:10:59,209
punctured key and a random bit B and the

259
00:10:59,209 --> 00:11:01,670
security states that the two cases

260
00:11:01,670 --> 00:11:05,390
should be indistinguishable so how can

261
00:11:05,390 --> 00:11:08,570
we use this to ensure that two circuits

262
00:11:08,570 --> 00:11:11,990
that are that only differ on a single

263
00:11:11,990 --> 00:11:13,910
point are obfuscated in such a way that

264
00:11:13,910 --> 00:11:17,180
the the statistic distance is large and

265
00:11:17,180 --> 00:11:19,010
to see this we first look at this

266
00:11:19,010 --> 00:11:20,960
circuit this circuit is for now not

267
00:11:20,960 --> 00:11:23,150
indexed by a formula instead we have a

268
00:11:23,150 --> 00:11:26,360
punctured key K star here in value X 0

269
00:11:26,360 --> 00:11:28,760
on which the key is punctured and a bit

270
00:11:28,760 --> 00:11:32,180
B and what the circuit does is on X 0 it

271
00:11:32,180 --> 00:11:34,850
simply outputs B on all other wellies it

272
00:11:34,850 --> 00:11:37,460
outputs the PF circuit the EDPs value

273
00:11:37,460 --> 00:11:47,720
and we can see that if B is not the PRF

274
00:11:47,720 --> 00:11:49,580
value so our PF only outputs a single

275
00:11:49,580 --> 00:11:51,560
bit so this means it's simply the PRF Lu

276
00:11:51,560 --> 00:11:54,170
X or 1 then this circuit disagrees with

277
00:11:54,170 --> 00:11:56,600
the PRF circuit on exactly a single

278
00:11:56,600 --> 00:12:00,440
point on exactly x0 and what we want to

279
00:12:00,440 --> 00:12:03,650
show is that the obfuscation of this

280
00:12:03,650 --> 00:12:05,540
circuit is nevertheless statistically

281
00:12:05,540 --> 00:12:07,220
far from an obfuscation of the PRF

282
00:12:07,220 --> 00:12:10,280
circuit and to do this we look at the

283
00:12:10,280 --> 00:12:11,870
other case we look at the case where B

284
00:12:11,870 --> 00:12:15,170
is actually the PRF lon in this case we

285
00:12:15,170 --> 00:12:16,910
have that this circuit is functionally

286
00:12:16,910 --> 00:12:20,180
equivalent to the PRF circuit and this

287
00:12:20,180 --> 00:12:22,190
has an interesting implication because

288
00:12:22,190 --> 00:12:25,010
if we escaped the PRF circuit then we

289
00:12:25,010 --> 00:12:26,360
guaranteed by the approximate

290
00:12:26,360 --> 00:12:29,660
correctness that on X 0 the obfuscated

291
00:12:29,660 --> 00:12:31,970
circuit will output B because b is the

292
00:12:31,970 --> 00:12:35,360
actual PRF value and it will output this

293
00:12:35,360 --> 00:12:36,800
with probability at least 1 minus

294
00:12:36,800 --> 00:12:39,290
Epsilon however because the two circuits

295
00:12:39,290 --> 00:12:42,140
are functionally equivalent we have

296
00:12:42,140 --> 00:12:44,030
basically this bound carries over to

297
00:12:44,030 --> 00:12:47,290
this case minus some negligible loss and

298
00:12:47,290 --> 00:12:50,510
now we can leverage the fact that the

299
00:12:50,510 --> 00:12:52,880
attacker le the office cater is actually

300
00:12:52,880 --> 00:12:56,150
an efficient algorithm and use the PRF

301
00:12:56,150 --> 00:12:58,820
security because the office gate is

302
00:12:58,820 --> 00:13:00,350
actually not able to distinguish between

303
00:13:00,350 --> 00:13:02,240
the two different cases because this is

304
00:13:02,240 --> 00:13:05,080
exactly the security of the punctual PRF

305
00:13:05,080 --> 00:13:08,390
so this bound also - again some

306
00:13:08,390 --> 00:13:10,490
negligible loss carries over to this

307
00:13:10,490 --> 00:13:13,550
case and this means what we have is that

308
00:13:13,550 --> 00:13:15,440
if we would obfuscate the PRF circuit

309
00:13:15,440 --> 00:13:18,020
then the PRF circuit outputs the correct

310
00:13:18,020 --> 00:13:20,870
PRF value on X 0 with probability at

311
00:13:20,870 --> 00:13:21,300
least

312
00:13:21,300 --> 00:13:24,390
- epsilon whereas the obfuscated circuit

313
00:13:24,390 --> 00:13:27,149
C disagrees with a prf circuit on X 0

314
00:13:27,149 --> 00:13:29,519
with probability roughly 1 minus Epsilon

315
00:13:29,519 --> 00:13:31,740
giving us a statistical distance of

316
00:13:31,740 --> 00:13:35,070
roughly 1 minus 2 epsilon and therefore

317
00:13:35,070 --> 00:13:36,360
we have enforced a large statistical

318
00:13:36,360 --> 00:13:37,320
distance

319
00:13:37,320 --> 00:13:39,149
even though the two circuits disagree

320
00:13:39,149 --> 00:13:41,910
only on a single point now of course

321
00:13:41,910 --> 00:13:43,529
what's missing here is still that we

322
00:13:43,529 --> 00:13:45,480
have to somehow put our formula into

323
00:13:45,480 --> 00:13:48,720
this and to be able to do this we

324
00:13:48,720 --> 00:13:50,250
actually have to restrict our attention

325
00:13:50,250 --> 00:13:53,010
to unique set so unique set is exactly

326
00:13:53,010 --> 00:13:54,810
the same thing as sad except that you're

327
00:13:54,810 --> 00:13:57,540
guaranteed that any satisfiable formula

328
00:13:57,540 --> 00:14:00,680
has only a single satisfying assignment

329
00:14:00,680 --> 00:14:03,990
now unique set it was shown to be NP

330
00:14:03,990 --> 00:14:07,470
hard by valiant and Vassy Ronny

331
00:14:07,470 --> 00:14:10,230
however only by a randomized reduction

332
00:14:10,230 --> 00:14:11,910
and that's a problem because we can't

333
00:14:11,910 --> 00:14:15,269
use the exact same approach as Godfather

334
00:14:15,269 --> 00:14:19,860
and bloom because if we would show that

335
00:14:19,860 --> 00:14:22,200
unique said is in am intersect Co a.m.

336
00:14:22,200 --> 00:14:25,350
this would not directly apply imply that

337
00:14:25,350 --> 00:14:27,720
sat is also in a.m. intersect koream

338
00:14:27,720 --> 00:14:30,959
however we can combine previous results

339
00:14:30,959 --> 00:14:33,270
due to Mahmud II and she'll and Bach

340
00:14:33,270 --> 00:14:36,029
tano faintly to show that it's enough to

341
00:14:36,029 --> 00:14:38,820
prove that unique set can be solved if

342
00:14:38,820 --> 00:14:40,890
we are given a gap statistical distance

343
00:14:40,890 --> 00:14:45,000
Oracle then this implies that that is in

344
00:14:45,000 --> 00:14:46,380
a.m. it to say Co a.m. and the

345
00:14:46,380 --> 00:14:49,320
polynomial hierarchy collapses so this

346
00:14:49,320 --> 00:14:51,060
is what we're doing we are showing that

347
00:14:51,060 --> 00:14:53,550
unique set can be decided if we have a

348
00:14:53,550 --> 00:14:57,480
gap statistical distance Oracle so to do

349
00:14:57,480 --> 00:14:59,520
this we are looking at this circuit here

350
00:14:59,520 --> 00:15:02,640
this circuit CX is indexed with a key K

351
00:15:02,640 --> 00:15:06,770
a random value s and a formula site and

352
00:15:06,770 --> 00:15:09,329
what it does is it simply checks whether

353
00:15:09,329 --> 00:15:12,779
the input value X or s satisfies in the

354
00:15:12,779 --> 00:15:15,000
formula and if it does it outputs in the

355
00:15:15,000 --> 00:15:17,610
opposite of the PRF value and otherwise

356
00:15:17,610 --> 00:15:21,449
it's simply evaluates the PRF now there

357
00:15:21,449 --> 00:15:23,490
are obviously two cases here either

358
00:15:23,490 --> 00:15:25,680
site is uniquely satisfiable or besides

359
00:15:25,680 --> 00:15:28,170
unsatisfiable now if sine is

360
00:15:28,170 --> 00:15:30,029
unsatisfiable then this circuit is

361
00:15:30,029 --> 00:15:31,940
functionally equivalent to the PRF

362
00:15:31,940 --> 00:15:34,860
because well this is simply

363
00:15:34,860 --> 00:15:37,020
a true because there is no satisfying

364
00:15:37,020 --> 00:15:40,980
assignment in on the other hand in the

365
00:15:40,980 --> 00:15:43,050
uniquely satisfiable case what we have

366
00:15:43,050 --> 00:15:46,560
is that CX is actually function

367
00:15:46,560 --> 00:15:48,240
equivalent to the circuit C we saw on

368
00:15:48,240 --> 00:15:51,350
the previous slide for X zero being the

369
00:15:51,350 --> 00:15:54,030
satisfying assignment of the formula X

370
00:15:54,030 --> 00:15:56,430
or s and this is where the s is

371
00:15:56,430 --> 00:15:57,990
important because we need that this

372
00:15:57,990 --> 00:16:00,720
value x0 is uniformly distributed

373
00:16:00,720 --> 00:16:02,970
otherwise the approximate correctness of

374
00:16:02,970 --> 00:16:04,650
the obfuscation scheme does not apply

375
00:16:04,650 --> 00:16:08,820
and of course B is here not the PRF

376
00:16:08,820 --> 00:16:12,390
value but the opposite and what that

377
00:16:12,390 --> 00:16:16,590
means is what that means is that if we

378
00:16:16,590 --> 00:16:19,470
define these two distributions here that

379
00:16:19,470 --> 00:16:21,270
basically only differ in that one

380
00:16:21,270 --> 00:16:23,340
distribution obfuscates the circuit C X

381
00:16:23,340 --> 00:16:25,110
and the other one obfuscates the PRF

382
00:16:25,110 --> 00:16:28,140
circuit then in the unique in the

383
00:16:28,140 --> 00:16:31,020
unsatisfiable case we have that the two

384
00:16:31,020 --> 00:16:32,250
circuits are functional equivalent

385
00:16:32,250 --> 00:16:34,080
meaning that the statistical distance

386
00:16:34,080 --> 00:16:35,780
between their obfuscation z' is

387
00:16:35,780 --> 00:16:39,510
negligible on the other hand in the

388
00:16:39,510 --> 00:16:41,910
uniquely satisfiable case this circuit

389
00:16:41,910 --> 00:16:43,560
as I said is functional equivalent to

390
00:16:43,560 --> 00:16:45,120
the circuit C we saw on the previous

391
00:16:45,120 --> 00:16:48,870
slide and what that means is that our

392
00:16:48,870 --> 00:16:51,810
bound basically carries over again to

393
00:16:51,810 --> 00:16:54,090
this case - again some negligible loss

394
00:16:54,090 --> 00:16:56,010
meaning that we can bound this

395
00:16:56,010 --> 00:16:58,110
statistical distance with roughly 1

396
00:16:58,110 --> 00:17:02,010
minus 2 epsilon and this gives us a gap

397
00:17:02,010 --> 00:17:05,190
between the two cases and this means and

398
00:17:05,190 --> 00:17:06,869
this gap is large enough that we can

399
00:17:06,869 --> 00:17:09,810
decide in which case we're in given a

400
00:17:09,810 --> 00:17:14,069
gap statistical distance Oracle and that

401
00:17:14,069 --> 00:17:17,190
means that if sa arrow and one-way

402
00:17:17,190 --> 00:17:20,280
functions both exist then the polynomial

403
00:17:20,280 --> 00:17:22,950
hierarchy collapses and this concludes

404
00:17:22,950 --> 00:17:29,460
our proof and if we apply exactly the

405
00:17:29,460 --> 00:17:32,610
same proof and very careful to

406
00:17:32,610 --> 00:17:34,650
correlation of FISC action then we

407
00:17:34,650 --> 00:17:38,340
basically end up with this lower bound

408
00:17:38,340 --> 00:17:42,150
that I showed before and I can leave you

409
00:17:42,150 --> 00:17:44,190
with the interesting open question where

410
00:17:44,190 --> 00:17:46,230
the this bound can actually be extended

411
00:17:46,230 --> 00:17:48,030
to also rule out this interesting region

412
00:17:48,030 --> 00:17:48,630
here

413
00:17:48,630 --> 00:17:50,820
or if there's a reason why we can rule

414
00:17:50,820 --> 00:17:52,830
out this region because maybe an

415
00:17:52,830 --> 00:17:54,450
obfuscator in this region actually

416
00:17:54,450 --> 00:17:57,270
exists which would as I said lead to a

417
00:17:57,270 --> 00:17:59,850
major breakthrough in crypto and with

418
00:17:59,850 --> 00:18:01,140
that I'd like to thank you and if there

419
00:18:01,140 --> 00:18:02,549
any questions I'd be happy to answer

420
00:18:02,549 --> 00:18:04,730
them

