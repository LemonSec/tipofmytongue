1
00:00:03,790 --> 00:00:10,210
Oh everyone's coming so in a point I'm

2
00:00:10,210 --> 00:00:11,950
going to present my joint work with IQ

3
00:00:11,950 --> 00:00:13,150
codes and venomously

4
00:00:13,150 --> 00:00:16,379
for there are multiple signatures from

5
00:00:16,379 --> 00:00:19,540
identity so basically this paper we

6
00:00:19,540 --> 00:00:21,880
mainly talk about the five year

7
00:00:21,880 --> 00:00:24,970
transformation which transform and I

8
00:00:24,970 --> 00:00:26,980
think Asians came to a signature scheme

9
00:00:26,980 --> 00:00:30,520
so one of the famous like like the

10
00:00:30,520 --> 00:00:33,780
textbook example is there's no signature

11
00:00:33,780 --> 00:00:36,250
there's many resolves on its no

12
00:00:36,250 --> 00:00:38,350
signature for example their

13
00:00:38,350 --> 00:00:40,720
lemur or December or some improvement on

14
00:00:40,720 --> 00:00:42,550
the secret pool and also at the same

15
00:00:42,550 --> 00:00:44,680
time there's some impossibility resolve

16
00:00:44,680 --> 00:00:46,870
is showing that the reduction has to

17
00:00:46,870 --> 00:00:48,940
lose effect of Q and so on and so forth

18
00:00:48,940 --> 00:00:52,050
so in this work I'm going to propose

19
00:00:52,050 --> 00:00:55,360
modulo proof framework which can

20
00:00:55,360 --> 00:00:59,079
simplify this security analyze and also

21
00:00:59,079 --> 00:01:00,579
at the same time I'm going to keep a

22
00:01:00,579 --> 00:01:02,260
high production from the single user

23
00:01:02,260 --> 00:01:05,909
security to a multi-user systems okay so

24
00:01:05,909 --> 00:01:08,110
this toy is mainly focused on the

25
00:01:08,110 --> 00:01:10,330
tightness so I'm going to explain what

26
00:01:10,330 --> 00:01:12,970
is the Chinese so basically the Chinese

27
00:01:12,970 --> 00:01:15,729
is defined like in terms of a success

28
00:01:15,729 --> 00:01:19,240
ratio so basically is episode the RT by

29
00:01:19,240 --> 00:01:22,960
T so it so mister advantage of the over

30
00:01:22,960 --> 00:01:25,420
three and he is the one time okay so

31
00:01:25,420 --> 00:01:28,000
usually in the security pop we always do

32
00:01:28,000 --> 00:01:30,130
this we always assume they're Teresa

33
00:01:30,130 --> 00:01:33,250
first we who can break the scheme with

34
00:01:33,250 --> 00:01:36,220
success ratio role then we can construct

35
00:01:36,220 --> 00:01:38,350
some reduction which can break

36
00:01:38,350 --> 00:01:40,270
underlying assumption for example

37
00:01:40,270 --> 00:01:42,490
describe lock with success ratio Rho

38
00:01:42,490 --> 00:01:44,470
Prime and there are some security laws

39
00:01:44,470 --> 00:01:48,220
let's say capital L so if the cicada

40
00:01:48,220 --> 00:01:50,350
loss is some constant then we say the

41
00:01:50,350 --> 00:01:52,960
security reduction is tight otherwise we

42
00:01:52,960 --> 00:01:55,450
say the security paxton is non time for

43
00:01:55,450 --> 00:01:57,790
example music a loss is some large

44
00:01:57,790 --> 00:02:00,670
polynomial of security parameter lambda

45
00:02:00,670 --> 00:02:03,630
okay for example like the number of user

46
00:02:03,630 --> 00:02:06,159
so why we care about the Chinese because

47
00:02:06,159 --> 00:02:09,549
we want some efficient scheme right so

48
00:02:09,549 --> 00:02:11,980
it let's say we want the scheme to have

49
00:02:11,980 --> 00:02:17,109
like 80 bit secure and if you have an on

50
00:02:17,109 --> 00:02:17,680
time

51
00:02:17,680 --> 00:02:20,290
let's say you assume your number of user

52
00:02:20,290 --> 00:02:23,140
is 230 then you end up with some you

53
00:02:23,140 --> 00:02:25,420
need to essentially or for example you

54
00:02:25,420 --> 00:02:27,730
cook with a larger parameter that's why

55
00:02:27,730 --> 00:02:30,640
we care about Chinese so in the polling

56
00:02:30,640 --> 00:02:32,230
I just want to remind you what is

57
00:02:32,230 --> 00:02:35,140
suffice I'm a transformation so so first

58
00:02:35,140 --> 00:02:36,939
of all it's the identification scheme so

59
00:02:36,939 --> 00:02:39,120
case your scheme is a interactive

60
00:02:39,120 --> 00:02:41,730
protocol where you have to prove ER

61
00:02:41,730 --> 00:02:44,260
which hosts a secret key you also have a

62
00:02:44,260 --> 00:02:46,590
verifier which holds the public key and

63
00:02:46,590 --> 00:02:49,150
it's a free run protocol so the first

64
00:02:49,150 --> 00:02:50,650
one is called commitments so Cooper

65
00:02:50,650 --> 00:02:52,599
sends to come commitments and then the

66
00:02:52,599 --> 00:02:54,879
verify sign some random challenge and an

67
00:02:54,879 --> 00:02:57,909
approver need to response and the verify

68
00:02:57,909 --> 00:03:00,370
will accept it while a deterministic

69
00:03:00,370 --> 00:03:03,069
algorithm B so either you accept approve

70
00:03:03,069 --> 00:03:03,480
or not

71
00:03:03,480 --> 00:03:05,970
so when you want to convert it to

72
00:03:05,970 --> 00:03:08,379
signature so basically it's just one

73
00:03:08,379 --> 00:03:11,470
important step you just need to compute

74
00:03:11,470 --> 00:03:13,810
your random challenge via our hash which

75
00:03:13,810 --> 00:03:16,959
is a random Oracle we just hashed our

76
00:03:16,959 --> 00:03:19,420
and the message as your random challenge

77
00:03:19,420 --> 00:03:21,120
and then you get on the signature scheme

78
00:03:21,120 --> 00:03:24,430
so as I said before one of the important

79
00:03:24,430 --> 00:03:26,919
instantiation is snow signature which is

80
00:03:26,919 --> 00:03:29,049
if you use the number you can

81
00:03:29,049 --> 00:03:31,780
prove the snow the security is based on

82
00:03:31,780 --> 00:03:33,699
a script block in a random Oracle model

83
00:03:33,699 --> 00:03:36,699
okay and also there's some impossibility

84
00:03:36,699 --> 00:03:39,190
without showing that your security

85
00:03:39,190 --> 00:03:41,650
reduction has to lose at least factor of

86
00:03:41,650 --> 00:03:43,629
Q which is the number of your random

87
00:03:43,629 --> 00:03:47,290
Oracle queries for the security model

88
00:03:47,290 --> 00:03:49,930
you have to use a programmable random

89
00:03:49,930 --> 00:03:51,489
Oracle you need to program ability for

90
00:03:51,489 --> 00:03:55,000
the security okay so but if you look

91
00:03:55,000 --> 00:03:57,400
closer to this possibility we saw

92
00:03:57,400 --> 00:03:59,169
actually it's quite specific to the

93
00:03:59,169 --> 00:04:01,239
snore case for example in a sarong

94
00:04:01,239 --> 00:04:03,940
result they assumed the reduction assume

95
00:04:03,940 --> 00:04:06,099
the reduction is algebraic which is

96
00:04:06,099 --> 00:04:08,650
really specific to the snow case for

97
00:04:08,650 --> 00:04:12,489
example for the efforts F is 1 4 is also

98
00:04:12,489 --> 00:04:14,680
assumed the reduction is to never cook

99
00:04:14,680 --> 00:04:17,019
everything ok so a natural question to

100
00:04:17,019 --> 00:04:19,690
us is that is it possible to generalize

101
00:04:19,690 --> 00:04:22,199
this impossibility result to any

102
00:04:22,199 --> 00:04:24,490
signature schemes while the file shammy

103
00:04:24,490 --> 00:04:27,820
transformation and also at the same time

104
00:04:27,820 --> 00:04:30,430
there's one important property is the

105
00:04:30,430 --> 00:04:31,470
multi-user

106
00:04:31,470 --> 00:04:33,690
right because now they like you

107
00:04:33,690 --> 00:04:35,370
should've cryptosystem involved many

108
00:04:35,370 --> 00:04:37,920
users so it's important to consider this

109
00:04:37,920 --> 00:04:40,380
security notion so for the reduction

110
00:04:40,380 --> 00:04:44,130
from single user to multi user there is

111
00:04:44,130 --> 00:04:46,200
a triple reduction which we basically

112
00:04:46,200 --> 00:04:49,740
just guess the the challenge use of the

113
00:04:49,740 --> 00:04:51,420
target user and then you lose effect of

114
00:04:51,420 --> 00:04:55,710
n which is a number of user so in 2002

115
00:04:55,710 --> 00:04:57,810
there is a paper showing that for small

116
00:04:57,810 --> 00:05:00,240
case I'd sure you can do a type

117
00:05:00,240 --> 00:05:03,050
reduction okay

118
00:05:03,050 --> 00:05:06,510
unfortunately like last year that person

119
00:05:06,510 --> 00:05:09,480
shows that actually the proof in 2002 is

120
00:05:09,480 --> 00:05:12,330
there's some issue there okay and then

121
00:05:12,330 --> 00:05:15,720
he fix it by proposal variant of small

122
00:05:15,720 --> 00:05:17,550
signature which is called key purposing

123
00:05:17,550 --> 00:05:20,670
and then for this arms for this variant

124
00:05:20,670 --> 00:05:22,770
of signature then you get a type

125
00:05:22,770 --> 00:05:25,860
reduction so now the question to ask is

126
00:05:25,860 --> 00:05:28,410
that is there some way to fix the pool

127
00:05:28,410 --> 00:05:31,050
in 2002 three so is there is there a

128
00:05:31,050 --> 00:05:32,640
reduction for the original small

129
00:05:32,640 --> 00:05:35,370
signature because keep practicing is no

130
00:05:35,370 --> 00:05:37,230
signature is some variant of it and

131
00:05:37,230 --> 00:05:40,440
maybe more generically is saying that is

132
00:05:40,440 --> 00:05:42,650
there any time reduction for any like

133
00:05:42,650 --> 00:05:45,300
any signature scheme like generic

134
00:05:45,300 --> 00:05:47,970
signature schemes milder unfashionable

135
00:05:47,970 --> 00:05:50,460
transformation so that's the motivations

136
00:05:50,460 --> 00:05:53,730
of this work so in this paper I am going

137
00:05:53,730 --> 00:05:56,490
to give modular pool framework which

138
00:05:56,490 --> 00:05:59,610
simplified security analyzed in

139
00:05:59,610 --> 00:06:01,110
particularly generalize the

140
00:06:01,110 --> 00:06:03,360
impossibility result for any signature

141
00:06:03,360 --> 00:06:04,970
scheme from the facial transformation

142
00:06:04,970 --> 00:06:07,640
which shows that for all these chance

143
00:06:07,640 --> 00:06:10,500
signature schemes it has to lose effect

144
00:06:10,500 --> 00:06:12,750
of cue and also needs a programmer

145
00:06:12,750 --> 00:06:15,900
remark and also we keep a tight security

146
00:06:15,900 --> 00:06:18,120
reduction from single user setting to

147
00:06:18,120 --> 00:06:21,000
the multi user setting mikta education

148
00:06:21,000 --> 00:06:23,250
scheme is random so beautiful in a

149
00:06:23,250 --> 00:06:25,680
random Oracle model we saw fixed

150
00:06:25,680 --> 00:06:27,240
improved in there

151
00:06:27,240 --> 00:06:29,060
in the 2002

152
00:06:29,060 --> 00:06:31,400
so now in the folding I'm going to give

153
00:06:31,400 --> 00:06:33,470
you a big picture of our framework and

154
00:06:33,470 --> 00:06:35,930
then I'm going to sketch like the

155
00:06:35,930 --> 00:06:37,430
reduction for the single user to the

156
00:06:37,430 --> 00:06:41,750
multi user Oh security so now I give to

157
00:06:41,750 --> 00:06:44,480
all of you about framework so our famous

158
00:06:44,480 --> 00:06:47,840
starts from the recurse security notion

159
00:06:47,840 --> 00:06:49,940
for education scheme which is called key

160
00:06:49,940 --> 00:06:52,130
recovery security against key on the

161
00:06:52,130 --> 00:06:54,290
attack so what it basically doing is

162
00:06:54,290 --> 00:06:56,030
that you were the only guests are

163
00:06:56,030 --> 00:06:59,690
publicly and you need to sort extract

164
00:06:59,690 --> 00:07:01,670
this very secret key out of them which

165
00:07:01,670 --> 00:07:03,110
is the weakest possible

166
00:07:03,110 --> 00:07:05,390
it doesn't get any other all cookies

167
00:07:05,390 --> 00:07:08,410
okay and in the end we want to convert a

168
00:07:08,410 --> 00:07:11,840
education scheme to UFC I'm a secure so

169
00:07:11,840 --> 00:07:15,020
the the goal is to help you have CMS

170
00:07:15,020 --> 00:07:18,140
secure signatures okay so actually for

171
00:07:18,140 --> 00:07:20,150
them so here I'm going to in the Polly

172
00:07:20,150 --> 00:07:21,890
I'm going to consider a wicker notion

173
00:07:21,890 --> 00:07:23,110
which is called

174
00:07:23,110 --> 00:07:27,020
UF koe like unforgeable to you again ski

175
00:07:27,020 --> 00:07:29,300
on the attack so basically we don't have

176
00:07:29,300 --> 00:07:32,150
the university doesn't have signing

177
00:07:32,150 --> 00:07:35,480
cookies and there's a previous we saw

178
00:07:35,480 --> 00:07:37,010
showing that if the ratification scheme

179
00:07:37,010 --> 00:07:39,260
is on this verifies your knowledge then

180
00:07:39,260 --> 00:07:42,050
you can transfer it so in the all right

181
00:07:42,050 --> 00:07:44,660
so all the previous result just goes

182
00:07:44,660 --> 00:07:48,020
from the key recovery security to the UF

183
00:07:48,020 --> 00:07:52,550
KOAT security so it's a large step but

184
00:07:52,550 --> 00:07:54,050
in our framework we just consider this

185
00:07:54,050 --> 00:07:56,930
in a small step so we simplify the prove

186
00:07:56,930 --> 00:07:59,090
and also we also see we can find out

187
00:07:59,090 --> 00:08:03,140
impossibility so let's see okay so we

188
00:08:03,140 --> 00:08:06,080
boy I'm just chopped the CMA security we

189
00:08:06,080 --> 00:08:09,470
just consider to the cape is good so the

190
00:08:09,470 --> 00:08:14,420
first time we just like convert the Kira

191
00:08:14,420 --> 00:08:16,730
Korea to attack to the impersonation

192
00:08:16,730 --> 00:08:19,160
attack so impersonation attack it's just

193
00:08:19,160 --> 00:08:21,440
a standard impersonation check okay so

194
00:08:21,440 --> 00:08:23,630
for this proof we required a special

195
00:08:23,630 --> 00:08:25,610
soundness for the allocation scheme and

196
00:08:25,610 --> 00:08:28,130
we also need a rewinding tannic in

197
00:08:28,130 --> 00:08:29,960
particular if tile education scheme has

198
00:08:29,960 --> 00:08:32,059
the random self with its ability then

199
00:08:32,059 --> 00:08:34,970
this reduction is tight and we also keep

200
00:08:34,970 --> 00:08:37,400
a meter reduction to show that there if

201
00:08:37,400 --> 00:08:40,190
you don't use rewinding technique there

202
00:08:40,190 --> 00:08:42,900
is no security reduction

203
00:08:42,900 --> 00:08:48,040
KRK way to MKE and the second step is

204
00:08:48,040 --> 00:08:50,730
that we transfer the impersonate we have

205
00:08:50,730 --> 00:08:55,480
we paralyze the impersonation attack

206
00:08:55,480 --> 00:08:59,020
security to a pimp KOAT security so the

207
00:08:59,020 --> 00:09:01,029
reduction here we required a guessing

208
00:09:01,029 --> 00:09:02,710
technique we just guess where is the

209
00:09:02,710 --> 00:09:05,470
channel section and then the security

210
00:09:05,470 --> 00:09:08,290
going to lose effect of Q we also showed

211
00:09:08,290 --> 00:09:10,390
that this step is the security losses

212
00:09:10,390 --> 00:09:13,630
optimal you can't do it better and the

213
00:09:13,630 --> 00:09:15,580
last step is somehow trivial you just

214
00:09:15,580 --> 00:09:17,680
need to program the random area code and

215
00:09:17,680 --> 00:09:20,080
you gather you have KOAT security so

216
00:09:20,080 --> 00:09:21,940
here we also show that you need to

217
00:09:21,940 --> 00:09:23,560
program ability for the random Oracle

218
00:09:23,560 --> 00:09:26,650
for this Redemption and that's basically

219
00:09:26,650 --> 00:09:29,140
the overview for the single user setting

220
00:09:29,140 --> 00:09:30,970
and now I'm going to move on to the

221
00:09:30,970 --> 00:09:33,040
multi user setting okay I'm going to

222
00:09:33,040 --> 00:09:36,400
convert chance transform that you fko a

223
00:09:36,400 --> 00:09:38,830
to them you have cma in the multi user

224
00:09:38,830 --> 00:09:42,580
setting okay so for this step I need to

225
00:09:42,580 --> 00:09:44,440
run himself this beatty for the

226
00:09:44,440 --> 00:09:46,600
allocation scheme and also owners

227
00:09:46,600 --> 00:09:49,089
verifies your knowledge poverty and this

228
00:09:49,089 --> 00:09:51,700
step is done it a random Oracle sank and

229
00:09:51,700 --> 00:09:55,750
in particular if we also show that from

230
00:09:55,750 --> 00:09:58,390
DBH assumption of are hiding assumption

231
00:09:58,390 --> 00:10:00,580
you get a tie rack consumption for the

232
00:10:00,580 --> 00:10:03,880
tight team KOAT security which means

233
00:10:03,880 --> 00:10:06,370
that if you go through our framework

234
00:10:06,370 --> 00:10:08,830
then in the end you get a tiny security

235
00:10:08,830 --> 00:10:11,440
signature in a multi-user setting based

236
00:10:11,440 --> 00:10:15,310
on DDH of are hiding assumption so

237
00:10:15,310 --> 00:10:18,100
actually this step life of the single

238
00:10:18,100 --> 00:10:21,490
user to the multi user CMA security we

239
00:10:21,490 --> 00:10:23,830
actually have two small step so the

240
00:10:23,830 --> 00:10:26,350
first step is that we convert

241
00:10:26,350 --> 00:10:28,600
koat security in a single user setting

242
00:10:28,600 --> 00:10:32,080
the multi user setting if the education

243
00:10:32,080 --> 00:10:34,750
schema has the random Socrates beach and

244
00:10:34,750 --> 00:10:37,060
this step is done in a standard model we

245
00:10:37,060 --> 00:10:41,980
don't require any any property of like

246
00:10:41,980 --> 00:10:44,980
any random Oracle here for the first

247
00:10:44,980 --> 00:10:47,290
step the second step we need a program

248
00:10:47,290 --> 00:10:49,990
about random Oracle then we can convert

249
00:10:49,990 --> 00:10:53,250
to the CMP security

250
00:10:53,250 --> 00:10:56,850
okay so let's see the first step so what

251
00:10:56,850 --> 00:10:59,310
does me by KOAT security allows to user

252
00:10:59,310 --> 00:11:01,050
settings so basically is also somehow

253
00:11:01,050 --> 00:11:03,779
straightforward so in what user setting

254
00:11:03,779 --> 00:11:08,009
you have n public key and then like when

255
00:11:08,009 --> 00:11:12,209
you and then the forgery is a for 340i

256
00:11:12,209 --> 00:11:15,180
star public key this is somehow straight

257
00:11:15,180 --> 00:11:18,149
over so here I need some poverty core

258
00:11:18,149 --> 00:11:21,089
random self with the PT which basically

259
00:11:21,089 --> 00:11:25,560
saying that there's we're an algorithm

260
00:11:25,560 --> 00:11:28,560
if you give me a public key I can we

261
00:11:28,560 --> 00:11:30,300
randomized we have we randomized a

262
00:11:30,300 --> 00:11:32,279
public key and also I also give you a

263
00:11:32,279 --> 00:11:35,220
chapter every chapter there's a

264
00:11:35,220 --> 00:11:37,910
algorithm called Chan which can convert

265
00:11:37,910 --> 00:11:41,730
valid transcript for public key pki to a

266
00:11:41,730 --> 00:11:44,430
valid transcript under public key I can

267
00:11:44,430 --> 00:11:48,660
go back to source a but this father for

268
00:11:48,660 --> 00:11:50,389
the protocol transfer okay

269
00:11:50,389 --> 00:11:52,649
okay so once you have this property

270
00:11:52,649 --> 00:11:54,300
actually the reduction is somehow

271
00:11:54,300 --> 00:11:57,990
straightforward and because your public

272
00:11:57,990 --> 00:11:59,639
key basically it's just we're and your

273
00:11:59,639 --> 00:12:01,139
public key and then you send your public

274
00:12:01,139 --> 00:12:03,689
key to the OS way so when you get poetry

275
00:12:03,689 --> 00:12:05,519
from your worst week you use the chapter

276
00:12:05,519 --> 00:12:08,160
to convert to the public to avoid a

277
00:12:08,160 --> 00:12:10,920
transcript for the public key and then

278
00:12:10,920 --> 00:12:13,680
you you have your security that's

279
00:12:13,680 --> 00:12:15,120
somehow straightforward here we don't

280
00:12:15,120 --> 00:12:17,879
need any random Oracle here and the

281
00:12:17,879 --> 00:12:20,670
second step is more involved actually so

282
00:12:20,670 --> 00:12:24,000
the second step we need the education

283
00:12:24,000 --> 00:12:25,860
scheme has the onus verifies your

284
00:12:25,860 --> 00:12:28,079
knowledge property so what it's saying

285
00:12:28,079 --> 00:12:30,750
that is that for honest verify civil

286
00:12:30,750 --> 00:12:32,509
knowledge basically they're a six

287
00:12:32,509 --> 00:12:35,610
simulator which inputs the public aid

288
00:12:35,610 --> 00:12:39,089
and you have that your output protocol

289
00:12:39,089 --> 00:12:41,100
transcript which disturb you identically

290
00:12:41,100 --> 00:12:43,230
to the wheelchairs good with respect to

291
00:12:43,230 --> 00:12:46,410
the public key PK that's the only spare

292
00:12:46,410 --> 00:12:50,850
parts for lunch so now I'm going to

293
00:12:50,850 --> 00:12:53,160
first define what does it mean for UFC

294
00:12:53,160 --> 00:12:55,410
MA in multi user setting which is

295
00:12:55,410 --> 00:12:57,480
somehow straightforward you have n

296
00:12:57,480 --> 00:13:00,329
public key and so here is you are in the

297
00:13:00,329 --> 00:13:02,899
random Oracle that you can have like

298
00:13:02,899 --> 00:13:06,499
our calories and also you can us signing

299
00:13:06,499 --> 00:13:11,869
on under the public key PK IJ and now

300
00:13:11,869 --> 00:13:14,149
you get back to the signature and then

301
00:13:14,149 --> 00:13:17,930
you send the poetry it's a straight over

302
00:13:17,930 --> 00:13:20,480
so in forward I'm going to come some

303
00:13:20,480 --> 00:13:24,139
reduction which can break the you have

304
00:13:24,139 --> 00:13:27,529
koa in a multi-user setting okay so

305
00:13:27,529 --> 00:13:30,199
actually it looks at the first at the

306
00:13:30,199 --> 00:13:32,059
first time you it looks quite

307
00:13:32,059 --> 00:13:34,639
straightforward right because we can try

308
00:13:34,639 --> 00:13:37,009
to solve the trivial solution but

309
00:13:37,009 --> 00:13:39,619
actually this solution does not work so

310
00:13:39,619 --> 00:13:42,559
what's what its meaning so basically for

311
00:13:42,559 --> 00:13:44,029
the public key I just forward the public

312
00:13:44,029 --> 00:13:46,850
key so when you comes to random Oracle

313
00:13:46,850 --> 00:13:49,819
query I just forward so the random

314
00:13:49,819 --> 00:13:52,399
Oracle query form from the left hand

315
00:13:52,399 --> 00:13:56,360
side I did know as H prime tester when I

316
00:13:56,360 --> 00:13:59,689
want concrete for KOA and so when you

317
00:13:59,689 --> 00:14:02,990
ask me for the sign I just use the

318
00:14:02,990 --> 00:14:05,509
honest verify supermodel to sign the

319
00:14:05,509 --> 00:14:07,490
simulator to sign it okay and then a

320
00:14:07,490 --> 00:14:12,230
program the random Oracle H so so far so

321
00:14:12,230 --> 00:14:14,179
good so because a public case this

322
00:14:14,179 --> 00:14:16,519
should build it properly everything is

323
00:14:16,519 --> 00:14:19,189
fine and your signatures distribute so

324
00:14:19,189 --> 00:14:21,350
now comes the question is that when the

325
00:14:21,350 --> 00:14:24,199
also give you the poetry okay so how can

326
00:14:24,199 --> 00:14:28,209
you break the security of the KOA so

327
00:14:28,209 --> 00:14:31,459
another way to ask if if this poetry is

328
00:14:31,459 --> 00:14:34,069
also a valid poetry for the KOA security

329
00:14:34,069 --> 00:14:36,379
that's the question but actually it's

330
00:14:36,379 --> 00:14:38,990
not always sometimes it is but not

331
00:14:38,990 --> 00:14:40,850
always so let's consider the following

332
00:14:40,850 --> 00:14:43,970
is so like the critical case so let's

333
00:14:43,970 --> 00:14:45,709
assume there were so it just us one

334
00:14:45,709 --> 00:14:48,589
signing crew and then there were three

335
00:14:48,589 --> 00:14:50,899
we use the message m and also the are

336
00:14:50,899 --> 00:14:55,999
for a spa tree and if this happened

337
00:14:55,999 --> 00:14:58,850
actually the hashes can inconsistent on

338
00:14:58,850 --> 00:15:02,449
a point R comma M right because on your

339
00:15:02,449 --> 00:15:05,749
right hand side the hash value is

340
00:15:05,749 --> 00:15:09,049
program locally by the reduction R which

341
00:15:09,049 --> 00:15:12,189
is inconsistent to the random Oracle of

342
00:15:12,189 --> 00:15:15,800
your left hand side which is H Prime

343
00:15:15,800 --> 00:15:19,759
and as star and also like a star is

344
00:15:19,759 --> 00:15:23,059
valid but it's only for the H only for

345
00:15:23,059 --> 00:15:25,220
the random Oracle chrome of your right

346
00:15:25,220 --> 00:15:28,129
hand side but not for the H prime which

347
00:15:28,129 --> 00:15:30,559
means that if you put it to the if you

348
00:15:30,559 --> 00:15:33,019
give it back to the Kon Challenger is

349
00:15:33,019 --> 00:15:34,759
going to our zero you're going to it's

350
00:15:34,759 --> 00:15:37,100
not a valid fortunately so in the

351
00:15:37,100 --> 00:15:39,199
following so how to fix this critical

352
00:15:39,199 --> 00:15:41,059
case in the polymers always assume it's

353
00:15:41,059 --> 00:15:42,980
always in the critical case because the

354
00:15:42,980 --> 00:15:47,449
other cases is simple so our solution is

355
00:15:47,449 --> 00:15:50,540
to randomly generate a public key such

356
00:15:50,540 --> 00:15:53,209
that with probability one over two we

357
00:15:53,209 --> 00:15:55,910
know the secret key such that we can

358
00:15:55,910 --> 00:15:58,309
generate a signature by asking the

359
00:15:58,309 --> 00:16:00,829
random Oracle of your left hand side by

360
00:16:00,829 --> 00:16:04,069
asking the random Oracle such that the

361
00:16:04,069 --> 00:16:07,610
hash curious consistent so how do you do

362
00:16:07,610 --> 00:16:11,689
that so you just pick a random coin BJ

363
00:16:11,689 --> 00:16:14,149
and the random coin is zero then you

364
00:16:14,149 --> 00:16:15,980
know the secret key otherwise you just

365
00:16:15,980 --> 00:16:19,160
forward a challenge public key and when

366
00:16:19,160 --> 00:16:20,869
you simply the random Oracle key is the

367
00:16:20,869 --> 00:16:24,019
same so when you comes to critical you

368
00:16:24,019 --> 00:16:26,689
know when you come to signing queries so

369
00:16:26,689 --> 00:16:29,540
there's two cases so either VI is equal

370
00:16:29,540 --> 00:16:31,610
to zero which actually is a good case

371
00:16:31,610 --> 00:16:34,910
because I know the secret key and then a

372
00:16:34,910 --> 00:16:37,220
simulated signature and when I simulate

373
00:16:37,220 --> 00:16:39,649
the signature asked or when imarco H

374
00:16:39,649 --> 00:16:42,319
Prime and then a program to H such that

375
00:16:42,319 --> 00:16:47,990
these two are consistent okay and if B

376
00:16:47,990 --> 00:16:50,839
is equal to one which is the bad case

377
00:16:50,839 --> 00:16:53,029
but it only happened with one over two

378
00:16:53,029 --> 00:16:56,660
probability which is a constant okay so

379
00:16:56,660 --> 00:16:59,179
when you're done with this now you come

380
00:16:59,179 --> 00:17:03,860
the forgery and now you want to extract

381
00:17:03,860 --> 00:17:06,260
for like the forgery for the KOAT

382
00:17:06,260 --> 00:17:11,449
security so now for the BI for the hash

383
00:17:11,449 --> 00:17:14,419
curry so now it's consistent with one

384
00:17:14,419 --> 00:17:15,720
over two

385
00:17:15,720 --> 00:17:18,539
and I was we also need to make sure that

386
00:17:18,539 --> 00:17:20,878
PKI star is really coming from the

387
00:17:20,878 --> 00:17:23,250
challenge which also happened which

388
00:17:23,250 --> 00:17:25,799
means bi star is equal to one which also

389
00:17:25,799 --> 00:17:27,269
happened with one over to power ability

390
00:17:27,269 --> 00:17:29,940
so in the end the reduction can break

391
00:17:29,940 --> 00:17:34,320
the UF KOAT security in a multi-user

392
00:17:34,320 --> 00:17:37,980
setting with 1 over 4 times I assume of

393
00:17:37,980 --> 00:17:41,399
8 then you finish your reduction is

394
00:17:41,399 --> 00:17:45,809
tight ok and that's that's basically the

395
00:17:45,809 --> 00:17:47,190
security cool

396
00:17:47,190 --> 00:17:50,759
ok that's basically the idea ok and now

397
00:17:50,759 --> 00:17:54,000
I'm going to summarize this paper so

398
00:17:54,000 --> 00:17:57,240
basically this paper give new framework

399
00:17:57,240 --> 00:17:59,789
to prove the security of the partially

400
00:17:59,789 --> 00:18:02,009
transformation it starts from the

401
00:18:02,009 --> 00:18:04,919
weakest possible security motion which

402
00:18:04,919 --> 00:18:07,610
is called key recovery attack against

403
00:18:07,610 --> 00:18:10,110
key recovery security against key on

404
00:18:10,110 --> 00:18:11,820
your Tech and then we go all the way

405
00:18:11,820 --> 00:18:15,870
until you have cma in a multi-user

406
00:18:15,870 --> 00:18:18,299
setting and all these steps are tied

407
00:18:18,299 --> 00:18:21,330
except the one in between even and pin

408
00:18:21,330 --> 00:18:26,159
and also like the other direction is our

409
00:18:26,159 --> 00:18:28,590
triple because because it's chilly and

410
00:18:28,590 --> 00:18:30,720
which means so here which means that

411
00:18:30,720 --> 00:18:34,169
actually the single user security and a

412
00:18:34,169 --> 00:18:36,090
multi-user security they're equivalent

413
00:18:36,090 --> 00:18:37,830
that's highly equivalent in a random

414
00:18:37,830 --> 00:18:41,850
Oracle model and also in particular from

415
00:18:41,850 --> 00:18:44,220
the DTH assumption or by hiding

416
00:18:44,220 --> 00:18:45,659
assumption we have a diagram

417
00:18:45,659 --> 00:18:49,139
construction of the tightly people carry

418
00:18:49,139 --> 00:18:52,799
security which basically is the cuts

419
00:18:52,799 --> 00:18:54,899
while adaptation scheme or 2q allocation

420
00:18:54,899 --> 00:19:01,169
scheme also for more detail you can go

421
00:19:01,169 --> 00:19:03,840
to our a promotion and that's all for my

422
00:19:03,840 --> 00:19:06,799
presentation thanks

423
00:19:08,300 --> 00:19:10,360
you

