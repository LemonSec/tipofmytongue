1
00:00:05,130 --> 00:00:08,800
thank you for the introduction<font color="#CCCCCC"> hi I'm</font>

2
00:00:08,109 --> 00:00:12,790
Lisa

3
00:00:08,800 --> 00:00:15,280
<font color="#E5E5E5">I'm PhD student and Cairo University of</font>

4
00:00:12,790 --> 00:00:18,700
a<font color="#CCCCCC"> Casio Institute of Technology I'm</font>

5
00:00:15,280 --> 00:00:20,770
<font color="#E5E5E5">currently visiting</font><font color="#CCCCCC"> IDC Herzliya</font><font color="#E5E5E5"> and I'm</font>

6
00:00:18,700 --> 00:00:22,448
happy<font color="#E5E5E5"> to present our results on tightly</font>

7
00:00:20,770 --> 00:00:25,539
<font color="#E5E5E5">secured</font><font color="#CCCCCC"> non interactive key exchange</font>

8
00:00:22,449 --> 00:00:27,609
<font color="#E5E5E5">today this</font><font color="#CCCCCC"> is joint work with Yulia HESA</font>

9
00:00:25,539 --> 00:00:30,880
from<font color="#CCCCCC"> tio dumb stunt</font><font color="#E5E5E5"> and my</font><font color="#CCCCCC"> adviser</font>

10
00:00:27,609 --> 00:00:31,539
<font color="#E5E5E5">Dennis</font><font color="#CCCCCC"> orphans so let's begin at the</font>

11
00:00:30,880 --> 00:00:34,629
<font color="#CCCCCC">beginning</font>

12
00:00:31,539 --> 00:00:36,670
<font color="#E5E5E5">non interactive key exchange</font><font color="#CCCCCC"> what do I</font>

13
00:00:34,629 --> 00:00:40,300
mean<font color="#E5E5E5"> by that</font><font color="#CCCCCC"> so we have Alice and Bob</font>

14
00:00:36,670 --> 00:00:42,399
who want<font color="#CCCCCC"> to establish</font><font color="#E5E5E5"> a secure</font><font color="#CCCCCC"> channel</font>

15
00:00:40,300 --> 00:00:45,250
and they can do so by generating<font color="#E5E5E5"> a</font>

16
00:00:42,399 --> 00:00:47,800
public key secret key pair publishing

17
00:00:45,250 --> 00:00:51,820
<font color="#E5E5E5">the public key and then at any point of</font>

18
00:00:47,800 --> 00:00:55,059
time<font color="#E5E5E5"> they can derive a shared key with</font>

19
00:00:51,820 --> 00:00:56,890
their own secret key and<font color="#CCCCCC"> the other users</font>

20
00:00:55,059 --> 00:00:59,379
<font color="#CCCCCC">public key without</font><font color="#E5E5E5"> any further</font>

21
00:00:56,890 --> 00:01:01,510
interaction<font color="#E5E5E5"> of course we want</font>

22
00:00:59,379 --> 00:01:04,030
correctness<font color="#E5E5E5"> so Alice and Bob should</font>

23
00:01:01,510 --> 00:01:08,649
derive the same shared key and we want

24
00:01:04,030 --> 00:01:11,340
<font color="#E5E5E5">security for now we want that</font>

25
00:01:08,649 --> 00:01:14,590
anniversary<font color="#E5E5E5"> seeing both public keys</font>

26
00:01:11,340 --> 00:01:19,420
<font color="#CCCCCC">still cannot distinguish a key a shared</font>

27
00:01:14,590 --> 00:01:21,520
key from from<font color="#E5E5E5"> from a random key</font><font color="#CCCCCC"> as the</font>

28
00:01:19,420 --> 00:01:23,530
<font color="#CCCCCC">title</font><font color="#E5E5E5"> says we're not just</font><font color="#CCCCCC"> interested in</font>

29
00:01:21,520 --> 00:01:25,810
security<font color="#CCCCCC"> in</font><font color="#E5E5E5"> this talk but</font><font color="#CCCCCC"> in tight</font>

30
00:01:23,530 --> 00:01:28,240
security<font color="#E5E5E5"> so what is tight security</font>

31
00:01:25,810 --> 00:01:33,789
generally in<font color="#CCCCCC"> cryptography we prefer</font>

32
00:01:28,240 --> 00:01:35,380
scheme<font color="#E5E5E5"> secure by showing that if we find</font>

33
00:01:33,789 --> 00:01:38,830
an adverse you're attacking<font color="#E5E5E5"> the scheme</font>

34
00:01:35,380 --> 00:01:41,560
we can<font color="#E5E5E5"> construct an adversary attacking</font>

35
00:01:38,830 --> 00:01:44,649
some problem which we<font color="#CCCCCC"> assumed to be hard</font>

36
00:01:41,560 --> 00:01:46,780
<font color="#CCCCCC">and then so that we can found the</font>

37
00:01:44,649 --> 00:01:50,349
advantage of the adversary<font color="#E5E5E5"> attacking the</font>

38
00:01:46,780 --> 00:01:53,440
scheme can<font color="#CCCCCC"> be bounded by some L times</font>

39
00:01:50,349 --> 00:01:56,590
<font color="#CCCCCC">the advantage that</font><font color="#E5E5E5"> the adversary</font><font color="#CCCCCC"> has in</font>

40
00:01:53,440 --> 00:01:58,660
<font color="#E5E5E5">attacking the problem</font><font color="#CCCCCC"> and if we</font><font color="#E5E5E5"> just</font>

41
00:01:56,590 --> 00:02:00,880
interested in asymptotic security we're

42
00:01:58,660 --> 00:02:02,890
fine well with L to<font color="#CCCCCC"> be polynomial</font>

43
00:02:00,880 --> 00:02:03,310
<font color="#E5E5E5">because if we assume a problem to be</font>

44
00:02:02,890 --> 00:02:06,429
<font color="#CCCCCC">hard</font>

45
00:02:03,310 --> 00:02:09,910
then we assumed advantage that any

46
00:02:06,429 --> 00:02:12,400
adversary can have to<font color="#E5E5E5"> be negligible</font>

47
00:02:09,910 --> 00:02:14,799
polynomial times negligible<font color="#CCCCCC"> is still</font>

48
00:02:12,400 --> 00:02:15,790
<font color="#CCCCCC">nicknamed</font><font color="#E5E5E5"> sharable so we're fine but</font><font color="#CCCCCC"> for</font>

49
00:02:14,799 --> 00:02:18,190
tight security

50
00:02:15,790 --> 00:02:20,350
<font color="#CCCCCC">we want more</font><font color="#E5E5E5"> name</font>

51
00:02:18,190 --> 00:02:24,700
we want that the<font color="#CCCCCC"> loss is small for</font>

52
00:02:20,350 --> 00:02:26,880
<font color="#CCCCCC">example a</font><font color="#E5E5E5"> small constant and why do we</font>

53
00:02:24,700 --> 00:02:30,040
<font color="#E5E5E5">care about that</font><font color="#CCCCCC"> so there's two reasons</font>

54
00:02:26,880 --> 00:02:32,019
<font color="#CCCCCC">in</font><font color="#E5E5E5"> theory it's interesting because it</font>

55
00:02:30,040 --> 00:02:33,850
<font color="#CCCCCC">gives a closer relation between</font><font color="#E5E5E5"> the</font>

56
00:02:32,020 --> 00:02:36,820
between<font color="#E5E5E5"> the scheme and the underlying</font>

57
00:02:33,850 --> 00:02:38,440
problem<font color="#E5E5E5"> so it's interesting to</font><font color="#CCCCCC"> think</font>

58
00:02:36,820 --> 00:02:41,200
about constructions impossibility

59
00:02:38,440 --> 00:02:43,720
results<font color="#E5E5E5"> that's also more</font><font color="#CCCCCC"> desculpe that</font>

60
00:02:41,200 --> 00:02:46,209
this work is in and for practice it's

61
00:02:43,720 --> 00:02:48,790
interesting because it gives<font color="#CCCCCC"> smaller</font>

62
00:02:46,210 --> 00:02:50,590
keys<font color="#E5E5E5"> because we have to account for the</font>

63
00:02:48,790 --> 00:02:52,510
security loss in the key size and

64
00:02:50,590 --> 00:02:56,050
therefore<font color="#CCCCCC"> more efficient</font><font color="#E5E5E5"> instantiations</font>

65
00:02:52,510 --> 00:02:58,269
<font color="#CCCCCC">and in settings</font><font color="#E5E5E5"> that we will also see</font>

66
00:02:56,050 --> 00:03:00,700
now where the loss depends on the users

67
00:02:58,270 --> 00:03:02,770
and we can have a<font color="#E5E5E5"> huge amount of users</font>

68
00:03:00,700 --> 00:03:07,480
and this actually this can<font color="#CCCCCC"> actually make</font>

69
00:03:02,770 --> 00:03:11,650
a difference<font color="#CCCCCC"> ok I claimed it everyone</font><font color="#E5E5E5"> of</font>

70
00:03:07,480 --> 00:03:15,910
you<font color="#CCCCCC"> knows</font><font color="#E5E5E5"> Nike</font><font color="#CCCCCC"> and namely the</font>

71
00:03:11,650 --> 00:03:20,410
diffie-hellman key exchange so Alice and

72
00:03:15,910 --> 00:03:23,140
Bob<font color="#E5E5E5"> can exchange it can can can choose a</font>

73
00:03:20,410 --> 00:03:25,959
<font color="#CCCCCC">scaler and just publish group element to</font>

74
00:03:23,140 --> 00:03:28,089
the<font color="#CCCCCC"> scaler</font><font color="#E5E5E5"> and the shared key will just</font>

75
00:03:25,959 --> 00:03:30,520
be G to the a B if a<font color="#CCCCCC"> and B are the</font>

76
00:03:28,090 --> 00:03:32,110
exponents that Alice and<font color="#E5E5E5"> Bob choose we</font>

77
00:03:30,520 --> 00:03:34,510
<font color="#E5E5E5">have security from</font><font color="#CCCCCC"> the decisional</font>

78
00:03:32,110 --> 00:03:37,000
diffie-hellman assumption which states

79
00:03:34,510 --> 00:03:39,250
that given<font color="#CCCCCC"> T to the a</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> C to the a B</font><font color="#E5E5E5"> G</font>

80
00:03:37,000 --> 00:03:43,300
to the B G to the a B looks like a

81
00:03:39,250 --> 00:03:45,910
random group element G to<font color="#CCCCCC"> the C</font><font color="#E5E5E5"> so</font>

82
00:03:43,300 --> 00:03:51,220
there's no loss here so instead<font color="#E5E5E5"> what we</font>

83
00:03:45,910 --> 00:03:52,870
mean by<font color="#E5E5E5"> a tight</font><font color="#CCCCCC"> Nike well if we would I</font>

84
00:03:51,220 --> 00:03:55,180
would<font color="#CCCCCC"> not be</font><font color="#E5E5E5"> standing here we would have</font>

85
00:03:52,870 --> 00:03:58,810
<font color="#CCCCCC">one since 1976</font>

86
00:03:55,180 --> 00:04:01,330
so we consider it like a different

87
00:03:58,810 --> 00:04:04,030
security<font color="#E5E5E5"> model first of all we want not</font>

88
00:04:01,330 --> 00:04:06,400
<font color="#E5E5E5">just to consider two parties in</font>

89
00:04:04,030 --> 00:04:08,950
isolation but we have<font color="#CCCCCC"> the</font><font color="#E5E5E5"> scenario where</font>

90
00:04:06,400 --> 00:04:10,780
we<font color="#CCCCCC"> have many many parties that want to</font>

91
00:04:08,950 --> 00:04:13,299
want to<font color="#CCCCCC"> communicate with each other</font><font color="#E5E5E5"> and</font>

92
00:04:10,780 --> 00:04:15,850
any two parties at any point of time for

93
00:04:13,300 --> 00:04:18,160
<font color="#E5E5E5">example</font><font color="#CCCCCC"> Carol</font><font color="#E5E5E5"> and David should be able</font>

94
00:04:15,850 --> 00:04:20,589
<font color="#E5E5E5">to</font><font color="#CCCCCC"> do so</font><font color="#E5E5E5"> just giving the public keys of</font>

95
00:04:18,160 --> 00:04:23,320
the other parties and<font color="#E5E5E5"> even if all</font><font color="#CCCCCC"> the</font>

96
00:04:20,589 --> 00:04:25,150
other parties come together<font color="#E5E5E5"> and</font><font color="#CCCCCC"> gleek</font>

97
00:04:23,320 --> 00:04:28,570
all their secret keys they should still

98
00:04:25,150 --> 00:04:31,140
not be able<font color="#E5E5E5"> to learn about the shared</font>

99
00:04:28,570 --> 00:04:35,430
key that<font color="#E5E5E5"> Carol and David derive</font>

100
00:04:31,140 --> 00:04:40,090
this can be captured in<font color="#E5E5E5"> the following</font>

101
00:04:35,430 --> 00:04:42,490
simplified security model<font color="#E5E5E5"> so the</font>

102
00:04:40,090 --> 00:04:44,530
adversary<font color="#E5E5E5"> gets</font><font color="#CCCCCC"> an public keys</font><font color="#E5E5E5"> like you</font>

103
00:04:42,490 --> 00:04:46,600
saw in<font color="#E5E5E5"> the picture before and then at</font>

104
00:04:44,530 --> 00:04:48,520
any point like and then he can he can

105
00:04:46,600 --> 00:04:54,790
choose which two<font color="#E5E5E5"> parties to attack I</font>

106
00:04:48,520 --> 00:04:57,159
star<font color="#E5E5E5"> J star</font><font color="#CCCCCC"> Carroll</font><font color="#E5E5E5"> and David and from</font>

107
00:04:54,790 --> 00:04:59,470
the experiment<font color="#E5E5E5"> he gets back the secret</font>

108
00:04:57,160 --> 00:05:01,360
keys of all the other parties<font color="#CCCCCC"> so that's</font>

109
00:04:59,470 --> 00:05:03,250
what we call extractions he can extract

110
00:05:01,360 --> 00:05:05,830
the secret<font color="#E5E5E5"> keys of every everything</font>

111
00:05:03,250 --> 00:05:08,410
<font color="#E5E5E5">except the one he challenges on and</font>

112
00:05:05,830 --> 00:05:10,990
either<font color="#E5E5E5"> a shared key or a completely</font>

113
00:05:08,410 --> 00:05:13,480
<font color="#E5E5E5">random key and he has to distinguish</font>

114
00:05:10,990 --> 00:05:15,400
which one it<font color="#CCCCCC"> is and</font><font color="#E5E5E5"> we say his advantage</font>

115
00:05:13,480 --> 00:05:18,370
in isn't how much is he better<font color="#E5E5E5"> than</font>

116
00:05:15,400 --> 00:05:20,530
<font color="#CCCCCC">guessing in doing so so how does</font>

117
00:05:18,370 --> 00:05:25,210
<font color="#CCCCCC">diffie-hellman key exchange look like in</font>

118
00:05:20,530 --> 00:05:27,039
<font color="#E5E5E5">this setting</font><font color="#CCCCCC"> so in this setting how can</font>

119
00:05:25,210 --> 00:05:29,469
we prove security well we can just<font color="#E5E5E5"> guess</font>

120
00:05:27,040 --> 00:05:32,980
<font color="#CCCCCC">the reduction can choose</font><font color="#E5E5E5"> yes I start a</font>

121
00:05:29,470 --> 00:05:35,350
<font color="#CCCCCC">sir that adversary' will later query on</font>

122
00:05:32,980 --> 00:05:37,950
and will embed<font color="#CCCCCC"> DDH challenge in those</font>

123
00:05:35,350 --> 00:05:41,650
two public keys just<font color="#E5E5E5"> as you saw before</font>

124
00:05:37,950 --> 00:05:43,180
<font color="#E5E5E5">but because the reduction has to give</font>

125
00:05:41,650 --> 00:05:46,390
out the secret keys for all the other

126
00:05:43,180 --> 00:05:49,600
<font color="#CCCCCC">public keys</font><font color="#E5E5E5"> whenever an adversary does</font>

127
00:05:46,390 --> 00:05:51,370
not query<font color="#E5E5E5"> exactly this</font><font color="#CCCCCC"> I star J</font><font color="#E5E5E5"> so the</font>

128
00:05:49,600 --> 00:05:53,169
<font color="#CCCCCC">reduction has to abort</font><font color="#E5E5E5"> so we have a</font>

129
00:05:51,370 --> 00:05:58,000
security loss which<font color="#CCCCCC"> is quadratic</font><font color="#E5E5E5"> in the</font>

130
00:05:53,169 --> 00:05:59,650
number<font color="#E5E5E5"> of users and maybe this is</font><font color="#CCCCCC"> just</font>

131
00:05:58,000 --> 00:06:01,870
not a<font color="#E5E5E5"> good reduction I mean this was the</font>

132
00:05:59,650 --> 00:06:03,340
<font color="#E5E5E5">simple this is</font><font color="#CCCCCC"> the simplest</font><font color="#E5E5E5"> we can think</font>

133
00:06:01,870 --> 00:06:05,140
of maybe<font color="#E5E5E5"> there's a better reduction and</font>

134
00:06:03,340 --> 00:06:08,289
<font color="#E5E5E5">we can prove it tighter</font><font color="#CCCCCC"> but actually</font>

135
00:06:05,140 --> 00:06:12,310
this is<font color="#E5E5E5"> not true so by the</font><font color="#CCCCCC"> Yaga</font><font color="#E5E5E5"> lien</font>

136
00:06:08,290 --> 00:06:14,800
shake it<font color="#E5E5E5"> proved in</font><font color="#CCCCCC"> 2006 16</font><font color="#E5E5E5"> that for for</font>

137
00:06:12,310 --> 00:06:16,900
the diffie-hellman key exchange<font color="#CCCCCC"> this</font>

138
00:06:14,800 --> 00:06:19,390
<font color="#E5E5E5">lawson is inherent and not only for this</font>

139
00:06:16,900 --> 00:06:23,440
<font color="#CCCCCC">but for a broad class of non-interactive</font>

140
00:06:19,390 --> 00:06:26,080
key exchange schemes so what are our

141
00:06:23,440 --> 00:06:31,060
<font color="#E5E5E5">results well first can we do better and</font>

142
00:06:26,080 --> 00:06:32,950
yes we<font color="#E5E5E5"> actually achieve a</font><font color="#CCCCCC"> nike with</font><font color="#E5E5E5"> very</font>

143
00:06:31,060 --> 00:06:38,169
security losses only<font color="#E5E5E5"> linear in the</font>

144
00:06:32,950 --> 00:06:39,820
security parameter and the question is

145
00:06:38,169 --> 00:06:41,740
well linear is still far<font color="#CCCCCC"> from tight</font>

146
00:06:39,820 --> 00:06:43,930
before<font color="#E5E5E5"> I said like small constant if</font><font color="#CCCCCC"> we</font>

147
00:06:41,740 --> 00:06:44,580
have many users<font color="#E5E5E5"> linear is still not what</font>

148
00:06:43,930 --> 00:06:48,210
we aim for

149
00:06:44,580 --> 00:06:49,318
but we give we<font color="#CCCCCC"> give some intuition</font><font color="#E5E5E5"> that</font>

150
00:06:48,210 --> 00:06:51,539
this is<font color="#CCCCCC"> hard</font>

151
00:06:49,319 --> 00:06:54,870
namely be proof that<font color="#E5E5E5"> for a broad class</font>

152
00:06:51,539 --> 00:06:57,590
of<font color="#E5E5E5"> 90s including ours again this linear</font>

153
00:06:54,870 --> 00:06:59,819
loss is<font color="#E5E5E5"> is actually inherent and</font>

154
00:06:57,590 --> 00:07:01,318
additional because the security<font color="#CCCCCC"> model</font>

155
00:06:59,819 --> 00:07:03,389
that I<font color="#E5E5E5"> showed you before it's not what</font>

156
00:07:01,319 --> 00:07:05,280
we aim for<font color="#CCCCCC"> but we aim for active</font>

157
00:07:03,389 --> 00:07:08,389
security<font color="#CCCCCC"> in the end</font><font color="#E5E5E5"> we give a generic</font>

158
00:07:05,280 --> 00:07:10,919
transformation<font color="#E5E5E5"> for any Nike with passive</font>

159
00:07:08,389 --> 00:07:13,919
<font color="#E5E5E5">security to Nike with active</font><font color="#CCCCCC"> security</font>

160
00:07:10,919 --> 00:07:16,049
and<font color="#E5E5E5"> tight instantiation for our scheme</font>

161
00:07:13,919 --> 00:07:22,198
<font color="#E5E5E5">but I will probably not have much time</font>

162
00:07:16,050 --> 00:07:24,360
to<font color="#E5E5E5"> talk about</font><font color="#CCCCCC"> that ok so the I want to</font>

163
00:07:22,199 --> 00:07:28,440
<font color="#E5E5E5">talk about mainly the first two parts of</font>

164
00:07:24,360 --> 00:07:30,060
the result<font color="#E5E5E5"> and in order to do so well to</font>

165
00:07:28,440 --> 00:07:32,250
understand how we<font color="#E5E5E5"> can circumvent the</font>

166
00:07:30,060 --> 00:07:35,219
lower bound of budget I'll like let's

167
00:07:32,250 --> 00:07:38,009
<font color="#E5E5E5">take a look at how how the lower bound</font>

168
00:07:35,219 --> 00:07:39,690
works so first of all it applies to<font color="#E5E5E5"> all</font>

169
00:07:38,009 --> 00:07:40,469
Nikes<font color="#E5E5E5"> wear public keys have unique</font>

170
00:07:39,690 --> 00:07:42,479
<font color="#E5E5E5">secret keys</font>

171
00:07:40,469 --> 00:07:44,520
so for diffie-hellman key exchange this

172
00:07:42,479 --> 00:07:47,430
<font color="#E5E5E5">is the case because just because</font><font color="#CCCCCC"> the D</font>

173
00:07:44,520 --> 00:07:52,020
<font color="#CCCCCC">discreet lock is unique and it rules</font><font color="#E5E5E5"> out</font>

174
00:07:47,430 --> 00:07:56,490
any tight simple black box reduction how

175
00:07:52,020 --> 00:07:59,008
does it do so so reduction<font color="#E5E5E5"> here we have</font>

176
00:07:56,490 --> 00:08:01,740
reduction<font color="#CCCCCC"> be transforming anniversary</font>

177
00:07:59,009 --> 00:08:04,919
attacking the scheme into a solver<font color="#CCCCCC"> for</font>

178
00:08:01,740 --> 00:08:07,949
the underlying<font color="#E5E5E5"> problem the idea</font><font color="#CCCCCC"> at a</font>

179
00:08:04,919 --> 00:08:10,020
technique<font color="#E5E5E5"> now of this lower bound is the</font>

180
00:08:07,949 --> 00:08:11,550
<font color="#E5E5E5">so-called</font><font color="#CCCCCC"> metre reduction technique</font><font color="#E5E5E5"> so</font>

181
00:08:10,020 --> 00:08:14,400
the idea is we<font color="#E5E5E5"> don't actually have an</font>

182
00:08:11,550 --> 00:08:16,560
adversary but just but just<font color="#CCCCCC"> a reduction</font>

183
00:08:14,400 --> 00:08:19,229
<font color="#E5E5E5">and we want to simulate the adversary</font>

184
00:08:16,560 --> 00:08:20,819
<font color="#E5E5E5">employing the reduction itself and how</font>

185
00:08:19,229 --> 00:08:23,370
can we simulate the adversary well it's

186
00:08:20,819 --> 00:08:25,229
certainly<font color="#E5E5E5"> sufficient</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> compute K I star</font>

187
00:08:23,370 --> 00:08:27,870
J star because then we can compare<font color="#E5E5E5"> with</font>

188
00:08:25,229 --> 00:08:30,360
<font color="#CCCCCC">KB</font><font color="#E5E5E5"> and give the result</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> of course</font>

189
00:08:27,870 --> 00:08:32,310
this is generally hard how can we use

190
00:08:30,360 --> 00:08:34,860
the reduction<font color="#E5E5E5"> to do so well we can</font>

191
00:08:32,309 --> 00:08:37,348
<font color="#E5E5E5">rewind to reduction because of our</font>

192
00:08:34,860 --> 00:08:39,870
extractions the reduction has to give us

193
00:08:37,349 --> 00:08:43,140
actually give us back secret<font color="#E5E5E5"> keys so</font>

194
00:08:39,870 --> 00:08:46,680
when we rewind<font color="#E5E5E5"> the reduction when we are</font>

195
00:08:43,140 --> 00:08:48,990
<font color="#CCCCCC">successful for like a say I star J then</font>

196
00:08:46,680 --> 00:08:52,560
the reduction<font color="#E5E5E5"> has to give us the secret</font>

197
00:08:48,990 --> 00:08:55,319
<font color="#CCCCCC">key for</font><font color="#E5E5E5"> J star and when we have the</font>

198
00:08:52,560 --> 00:08:58,250
secret key<font color="#CCCCCC"> we can now compute</font><font color="#E5E5E5"> K I star J</font>

199
00:08:55,319 --> 00:09:02,689
star<font color="#E5E5E5"> why is that because</font><font color="#CCCCCC"> C</font>

200
00:08:58,250 --> 00:09:05,090
keys are unique<font color="#E5E5E5"> and because a shared</font>

201
00:09:02,690 --> 00:09:06,800
<font color="#CCCCCC">Cajun shared key</font><font color="#E5E5E5"> is derived it</font><font color="#CCCCCC"> to</font>

202
00:09:05,090 --> 00:09:10,430
mystically from the secret<font color="#E5E5E5"> key</font><font color="#CCCCCC"> in the</font>

203
00:09:06,800 --> 00:09:12,949
<font color="#CCCCCC">public key so unique secret</font><font color="#E5E5E5"> keys we have</font>

204
00:09:10,430 --> 00:09:17,060
<font color="#CCCCCC">unique</font><font color="#E5E5E5"> share keys so we can perfectly</font>

205
00:09:12,950 --> 00:09:19,970
<font color="#E5E5E5">simulate adverse way so assume there</font>

206
00:09:17,060 --> 00:09:22,880
would be<font color="#E5E5E5"> such a run where we on which</font>

207
00:09:19,970 --> 00:09:25,010
the reduction does not abort<font color="#E5E5E5"> well then</font>

208
00:09:22,880 --> 00:09:26,689
we could the<font color="#E5E5E5"> extra</font><font color="#CCCCCC"> Demeter reduction</font>

209
00:09:25,010 --> 00:09:28,490
could<font color="#E5E5E5"> efficiently solve the problem</font>

210
00:09:26,690 --> 00:09:30,110
because<font color="#CCCCCC"> it</font><font color="#E5E5E5"> just uses the efficient</font>

211
00:09:28,490 --> 00:09:33,260
reduction it doesn't need an adversary

212
00:09:30,110 --> 00:09:35,180
anymore but this<font color="#CCCCCC"> is a</font><font color="#E5E5E5"> contradiction</font>

213
00:09:33,260 --> 00:09:37,760
because we assume the<font color="#E5E5E5"> problem to be hard</font>

214
00:09:35,180 --> 00:09:41,540
<font color="#E5E5E5">so we have a security loss of at least</font>

215
00:09:37,760 --> 00:09:44,720
lambda or at least Omega of N<font color="#CCCCCC"> squared</font>

216
00:09:41,540 --> 00:09:48,770
<font color="#E5E5E5">because</font><font color="#CCCCCC"> there can be only one</font><font color="#E5E5E5"> run where</font>

217
00:09:44,720 --> 00:09:53,360
the<font color="#E5E5E5"> reduction</font><font color="#CCCCCC"> does not abort</font><font color="#E5E5E5"> in other</font>

218
00:09:48,770 --> 00:09:55,730
words the intuition is<font color="#E5E5E5"> that</font><font color="#CCCCCC"> the</font>

219
00:09:53,360 --> 00:09:57,980
reduction<font color="#E5E5E5"> doesn't know the secret key</font>

220
00:09:55,730 --> 00:09:59,420
for at least<font color="#CCCCCC"> two index in this is</font>

221
00:09:57,980 --> 00:10:01,130
<font color="#E5E5E5">because otherwise it couldn't make use</font>

222
00:09:59,420 --> 00:10:04,729
of the<font color="#E5E5E5"> adversary because it's a simple</font>

223
00:10:01,130 --> 00:10:06,589
blackbox reduction and because it has to

224
00:10:04,730 --> 00:10:17,450
give back to<font color="#CCCCCC"> secret keys it has to abort</font>

225
00:10:06,589 --> 00:10:19,190
on all other runs<font color="#CCCCCC"> ok if so basically for</font>

226
00:10:17,450 --> 00:10:21,920
for<font color="#CCCCCC"> continuing for explaining</font><font color="#E5E5E5"> our</font>

227
00:10:19,190 --> 00:10:25,730
construction<font color="#E5E5E5"> all you have to get from</font>

228
00:10:21,920 --> 00:10:28,160
<font color="#CCCCCC">that is that uniqueness</font><font color="#E5E5E5"> of the secret</font>

229
00:10:25,730 --> 00:10:29,930
<font color="#CCCCCC">keys implies uniqueness of shared keys</font>

230
00:10:28,160 --> 00:10:31,699
and because we have uniqueness of the

231
00:10:29,930 --> 00:10:40,040
share keys the lower bound<font color="#E5E5E5"> actually</font>

232
00:10:31,700 --> 00:10:41,870
<font color="#CCCCCC">works in our scheme public keys so how</font>

233
00:10:40,040 --> 00:10:43,819
can we circumvent that<font color="#E5E5E5"> so in our scheme</font>

234
00:10:41,870 --> 00:10:45,950
public keys<font color="#CCCCCC"> have obviously cannot have</font>

235
00:10:43,820 --> 00:10:47,750
unique keys if we want to if<font color="#CCCCCC"> we want</font><font color="#E5E5E5"> to</font>

236
00:10:45,950 --> 00:10:49,960
if we<font color="#E5E5E5"> want</font><font color="#CCCCCC"> to make use of</font><font color="#E5E5E5"> that but</font>

237
00:10:47,750 --> 00:10:52,910
<font color="#E5E5E5">practically public keys have many many</font>

238
00:10:49,960 --> 00:10:55,760
secret keys this alone<font color="#E5E5E5"> is not enough</font>

239
00:10:52,910 --> 00:10:57,800
<font color="#E5E5E5">because because of correctness</font><font color="#CCCCCC"> all these</font>

240
00:10:55,760 --> 00:11:02,569
secret<font color="#E5E5E5"> keys have</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be in some some</font>

241
00:10:57,800 --> 00:11:04,609
sense some sense equivalent<font color="#E5E5E5"> because the</font>

242
00:11:02,570 --> 00:11:06,800
correctness of the scheme requires<font color="#CCCCCC"> that</font>

243
00:11:04,610 --> 00:11:09,200
no matter which secret key we use the

244
00:11:06,800 --> 00:11:12,079
shared key has to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> the same otherwise</font>

245
00:11:09,200 --> 00:11:14,750
<font color="#E5E5E5">we would not</font><font color="#CCCCCC"> have correctness but</font>

246
00:11:12,080 --> 00:11:17,240
what we can now do<font color="#CCCCCC"> well</font><font color="#E5E5E5"> what reductions</font>

247
00:11:14,750 --> 00:11:19,580
often do we can introduce<font color="#E5E5E5"> invalid public</font>

248
00:11:17,240 --> 00:11:22,120
keys so envelope<font color="#CCCCCC"> uh blue keys have of</font>

249
00:11:19,580 --> 00:11:25,730
course<font color="#CCCCCC"> to</font><font color="#E5E5E5"> look like public keys and</font>

250
00:11:22,120 --> 00:11:27,380
computationally<font color="#E5E5E5"> but for</font><font color="#CCCCCC"> invalid public</font>

251
00:11:25,730 --> 00:11:31,820
keys<font color="#CCCCCC"> of course we don't have any</font>

252
00:11:27,380 --> 00:11:33,890
correctness requirements so what we can

253
00:11:31,820 --> 00:11:37,220
what<font color="#E5E5E5"> we will what we will show in our</font>

254
00:11:33,890 --> 00:11:40,010
scheme<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that the shared key of an</font>

255
00:11:37,220 --> 00:11:43,330
<font color="#E5E5E5">invalid public key together with</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> valid</font>

256
00:11:40,010 --> 00:11:48,340
public<font color="#E5E5E5"> key will look completely random</font>

257
00:11:43,330 --> 00:11:51,620
even knowing<font color="#E5E5E5"> both public keys and so</font>

258
00:11:48,340 --> 00:11:53,510
what how comes the many secret key how

259
00:11:51,620 --> 00:11:56,450
does it<font color="#E5E5E5"> play a role here</font><font color="#CCCCCC"> well this is</font>

260
00:11:53,510 --> 00:11:58,550
<font color="#E5E5E5">only possible if there's entropy left in</font>

261
00:11:56,450 --> 00:12:00,140
the secret key given the public<font color="#E5E5E5"> key so</font>

262
00:11:58,550 --> 00:12:02,540
if there's many secret keys that<font color="#CCCCCC"> are</font>

263
00:12:00,140 --> 00:12:05,150
possible<font color="#CCCCCC"> for one public key</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is how</font>

264
00:12:02,540 --> 00:12:09,860
<font color="#CCCCCC">we will how we will employ how we will</font>

265
00:12:05,150 --> 00:12:11,300
employ<font color="#E5E5E5"> our many many secret keys okay so</font>

266
00:12:09,860 --> 00:12:13,940
now it's just<font color="#E5E5E5"> a question how to</font>

267
00:12:11,300 --> 00:12:15,709
instantiate it<font color="#E5E5E5"> to get the computation</font>

268
00:12:13,940 --> 00:12:17,930
indistinguishable<font color="#CCCCCC"> onto the end</font><font color="#E5E5E5"> and to</font>

269
00:12:15,710 --> 00:12:19,610
get the equation<font color="#CCCCCC"> here so for the</font>

270
00:12:17,930 --> 00:12:21,859
computational<font color="#E5E5E5"> indistinguishable we</font>

271
00:12:19,610 --> 00:12:24,890
employ the<font color="#E5E5E5"> subset membership assumption</font>

272
00:12:21,860 --> 00:12:26,570
which states that<font color="#E5E5E5"> for a language it's</font>

273
00:12:24,890 --> 00:12:28,310
indistinguishable where do we choose

274
00:12:26,570 --> 00:12:30,530
from inside the language or from outside

275
00:12:28,310 --> 00:12:33,380
<font color="#CCCCCC">the language</font><font color="#E5E5E5"> and you can see the colors</font>

276
00:12:30,530 --> 00:12:35,990
here green and red<font color="#CCCCCC"> so maybe you recall</font>

277
00:12:33,380 --> 00:12:37,640
that<font color="#CCCCCC"> on the last slide the valid public</font>

278
00:12:35,990 --> 00:12:41,090
keys between<font color="#E5E5E5"> the invalid public keys</font>

279
00:12:37,640 --> 00:12:42,680
<font color="#E5E5E5">Verret so this is exactly what what what</font>

280
00:12:41,090 --> 00:12:45,620
will be valid public<font color="#E5E5E5"> he's an invalid</font>

281
00:12:42,680 --> 00:12:50,900
public keys<font color="#CCCCCC"> and then we have the second</font>

282
00:12:45,620 --> 00:12:53,420
part we have we can instantiate using a

283
00:12:50,900 --> 00:12:55,730
hash<font color="#E5E5E5"> system so how does the hash proof</font>

284
00:12:53,420 --> 00:13:00,709
system<font color="#E5E5E5"> work a hash</font><font color="#CCCCCC"> per system</font><font color="#E5E5E5"> gives us</font>

285
00:12:55,730 --> 00:13:03,140
<font color="#E5E5E5">two two methods of a relation so we have</font>

286
00:13:00,710 --> 00:13:05,690
public<font color="#CCCCCC"> evaluation and private</font><font color="#E5E5E5"> emulation</font>

287
00:13:03,140 --> 00:13:09,080
public<font color="#E5E5E5"> relation on a word from a</font>

288
00:13:05,690 --> 00:13:11,570
language<font color="#CCCCCC"> we need it we have we take the</font>

289
00:13:09,080 --> 00:13:13,310
public key<font color="#E5E5E5"> of the hash proof system but</font>

290
00:13:11,570 --> 00:13:15,020
we need additionally to the<font color="#E5E5E5"> word we need</font>

291
00:13:13,310 --> 00:13:17,989
a<font color="#CCCCCC"> witness that</font><font color="#E5E5E5"> the word is</font><font color="#CCCCCC"> actually in</font>

292
00:13:15,020 --> 00:13:19,910
the language private emulation<font color="#CCCCCC"> we just</font>

293
00:13:17,990 --> 00:13:21,580
need a secret key of the hash proof

294
00:13:19,910 --> 00:13:23,920
<font color="#CCCCCC">system together</font><font color="#E5E5E5"> with the world and</font>

295
00:13:21,580 --> 00:13:27,010
whenever the word is actually<font color="#CCCCCC"> in the</font>

296
00:13:23,920 --> 00:13:31,959
language we want<font color="#E5E5E5"> that</font><font color="#CCCCCC"> public emulation</font>

297
00:13:27,010 --> 00:13:36,730
<font color="#E5E5E5">on privately evaluation yield the same</font><font color="#CCCCCC"> T</font>

298
00:13:31,959 --> 00:13:38,920
so we have correctness<font color="#E5E5E5"> and further we</font>

299
00:13:36,730 --> 00:13:41,680
want universality so whenever<font color="#E5E5E5"> we're</font>

300
00:13:38,920 --> 00:13:43,420
outside the<font color="#CCCCCC"> language then even giving</font>

301
00:13:41,680 --> 00:13:46,779
the public<font color="#E5E5E5"> key corresponding to the</font>

302
00:13:43,420 --> 00:13:49,329
<font color="#E5E5E5">cecum secret key private emulation of</font>

303
00:13:46,779 --> 00:13:51,070
<font color="#E5E5E5">the</font><font color="#CCCCCC"> secret key</font><font color="#E5E5E5"> on some word outside</font><font color="#CCCCCC"> the</font>

304
00:13:49,329 --> 00:13:55,449
language<font color="#CCCCCC"> should look completely random</font>

305
00:13:51,070 --> 00:13:57,610
<font color="#E5E5E5">and maybe you can see this that this</font>

306
00:13:55,449 --> 00:13:59,560
looks very<font color="#E5E5E5"> much like what</font><font color="#CCCCCC"> we what we</font>

307
00:13:57,610 --> 00:14:03,940
needed before<font color="#E5E5E5"> and actually this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> the</font>

308
00:13:59,560 --> 00:14:05,979
case so<font color="#CCCCCC"> our Nike um it's simply</font><font color="#E5E5E5"> Ellis</font>

309
00:14:03,940 --> 00:14:08,350
<font color="#CCCCCC">generally chooses a word from a</font><font color="#E5E5E5"> language</font>

310
00:14:05,980 --> 00:14:10,480
together<font color="#E5E5E5"> with</font><font color="#CCCCCC"> a witness and Bob chooses</font>

311
00:14:08,350 --> 00:14:12,639
hash<font color="#E5E5E5"> proof</font><font color="#CCCCCC"> system public</font><font color="#E5E5E5"> key hospital</font>

312
00:14:10,480 --> 00:14:15,459
system secret key and<font color="#E5E5E5"> now they can both</font>

313
00:14:12,639 --> 00:14:18,459
derive a shared key<font color="#CCCCCC"> Ellis can do so by</font>

314
00:14:15,459 --> 00:14:20,888
taking by evaluating<font color="#CCCCCC"> the</font><font color="#E5E5E5"> hospital system</font>

315
00:14:18,459 --> 00:14:23,290
using the<font color="#E5E5E5"> hospital system public key of</font>

316
00:14:20,889 --> 00:14:26,079
Bob which he published<font color="#CCCCCC"> as his public key</font>

317
00:14:23,290 --> 00:14:31,329
and his own and her own word and her own

318
00:14:26,079 --> 00:14:33,310
witness but Bob can take can evaluate

319
00:14:31,329 --> 00:14:35,589
<font color="#E5E5E5">privately because</font><font color="#CCCCCC"> he has the hash Pro</font>

320
00:14:33,310 --> 00:14:37,750
<font color="#CCCCCC">System secret key because he generated</font>

321
00:14:35,589 --> 00:14:41,070
himself<font color="#E5E5E5"> and he has the word of Ellis</font>

322
00:14:37,750 --> 00:14:44,050
which is the public here<font color="#CCCCCC"> fellows</font><font color="#E5E5E5"> and</font>

323
00:14:41,070 --> 00:14:46,600
<font color="#E5E5E5">okay now we</font><font color="#CCCCCC"> we have the multi user</font>

324
00:14:44,050 --> 00:14:49,120
<font color="#E5E5E5">settings so actually we did</font><font color="#CCCCCC"> not just</font>

325
00:14:46,600 --> 00:14:51,130
have<font color="#CCCCCC"> Alice and Bob</font><font color="#E5E5E5"> so what they will do</font>

326
00:14:49,120 --> 00:14:53,350
well they will generate both and publish

327
00:14:51,130 --> 00:14:58,000
both<font color="#E5E5E5"> and then either you can think of</font>

328
00:14:53,350 --> 00:15:01,510
multiplying<font color="#E5E5E5"> both evaluations or you you</font>

329
00:14:58,000 --> 00:15:03,790
<font color="#E5E5E5">choose the the</font><font color="#CCCCCC"> house proof system</font>

330
00:15:01,510 --> 00:15:05,709
<font color="#E5E5E5">parameters are always after of the party</font>

331
00:15:03,790 --> 00:15:07,660
with<font color="#CCCCCC"> the larger</font><font color="#E5E5E5"> index</font><font color="#CCCCCC"> so there's several</font>

332
00:15:05,709 --> 00:15:09,939
possibilities to<font color="#CCCCCC"> make it work</font><font color="#E5E5E5"> for four</font>

333
00:15:07,660 --> 00:15:13,029
more parties and what's<font color="#CCCCCC"> very what's</font>

334
00:15:09,940 --> 00:15:15,640
crucial<font color="#E5E5E5"> here</font><font color="#CCCCCC"> is that first of all we</font>

335
00:15:13,029 --> 00:15:17,189
have that secret<font color="#CCCCCC"> keys are not unique</font>

336
00:15:15,640 --> 00:15:19,569
<font color="#E5E5E5">because hash systems</font>

337
00:15:17,190 --> 00:15:22,269
secret keys are not<font color="#E5E5E5"> unique this</font><font color="#CCCCCC"> is what</font>

338
00:15:19,569 --> 00:15:25,329
allows<font color="#CCCCCC"> us to get the universality</font><font color="#E5E5E5"> and we</font>

339
00:15:22,269 --> 00:15:27,730
can<font color="#E5E5E5"> switch X to X outside</font><font color="#CCCCCC"> L so</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font>

340
00:15:25,329 --> 00:15:31,540
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the crucial part what allows us</font>

341
00:15:27,730 --> 00:15:36,069
<font color="#CCCCCC">to get a tighter</font><font color="#E5E5E5"> reduction and now the</font>

342
00:15:31,540 --> 00:15:37,660
security<font color="#E5E5E5"> proof is is is very easy and</font>

343
00:15:36,069 --> 00:15:40,270
the idea is we<font color="#E5E5E5"> don't now</font>

344
00:15:37,660 --> 00:15:42,370
don't have to guess both in the<font color="#CCCCCC"> indices</font>

345
00:15:40,270 --> 00:15:45,010
right we just<font color="#E5E5E5"> have to guess the smaller</font>

346
00:15:42,370 --> 00:15:48,130
of the two<font color="#E5E5E5"> indices right so we just</font>

347
00:15:45,010 --> 00:15:50,620
guess one index and then we embed<font color="#E5E5E5"> the</font>

348
00:15:48,130 --> 00:15:52,720
<font color="#E5E5E5">subset membership challenge</font><font color="#CCCCCC"> X I star</font>

349
00:15:50,620 --> 00:15:56,290
which can be either<font color="#E5E5E5"> in the language or</font>

350
00:15:52,720 --> 00:15:59,320
outside the language<font color="#E5E5E5"> into the public key</font>

351
00:15:56,290 --> 00:16:01,839
<font color="#E5E5E5">of this party and if we were indeed</font>

352
00:15:59,320 --> 00:16:06,610
right<font color="#E5E5E5"> as I said if this was</font><font color="#CCCCCC"> indeed the</font>

353
00:16:01,840 --> 00:16:08,710
<font color="#CCCCCC">the larger index</font><font color="#E5E5E5"> if if if we always use</font>

354
00:16:06,610 --> 00:16:11,230
the<font color="#E5E5E5"> hash proof parameter of the larger</font>

355
00:16:08,710 --> 00:16:13,470
language<font color="#E5E5E5"> then the shared key will just</font>

356
00:16:11,230 --> 00:16:16,330
be the private revelation of the hash

357
00:16:13,470 --> 00:16:19,960
secret key of the J's party together

358
00:16:16,330 --> 00:16:22,270
<font color="#E5E5E5">with X I star if X I star was in</font><font color="#CCCCCC"> the</font>

359
00:16:19,960 --> 00:16:25,510
language<font color="#CCCCCC"> that's a</font><font color="#E5E5E5"> perfectly perfect</font>

360
00:16:22,270 --> 00:16:27,160
<font color="#CCCCCC">shared key but if X</font><font color="#E5E5E5"> I star was outside</font>

361
00:16:25,510 --> 00:16:31,180
the<font color="#CCCCCC"> language this looks completely</font>

362
00:16:27,160 --> 00:16:33,490
random<font color="#E5E5E5"> because</font><font color="#CCCCCC"> HS KJ</font><font color="#E5E5E5"> is unknown so this</font>

363
00:16:31,180 --> 00:16:35,949
is simply the universal universality of

364
00:16:33,490 --> 00:16:39,310
the<font color="#CCCCCC"> house proof system and the intuition</font>

365
00:16:35,950 --> 00:16:41,440
<font color="#E5E5E5">is now this gives us a security a linear</font>

366
00:16:39,310 --> 00:16:43,599
security<font color="#E5E5E5"> loss we don't have to get to</font>

367
00:16:41,440 --> 00:16:46,420
<font color="#CCCCCC">any X's</font><font color="#E5E5E5"> right we just</font><font color="#CCCCCC"> have to</font><font color="#E5E5E5"> guess one</font>

368
00:16:43,600 --> 00:16:50,950
<font color="#E5E5E5">right so this gives us a linear security</font>

369
00:16:46,420 --> 00:16:53,589
loss and tuition<font color="#E5E5E5"> is we shifted one key</font>

370
00:16:50,950 --> 00:16:54,880
from the<font color="#E5E5E5"> red box</font><font color="#CCCCCC"> to the green box</font><font color="#E5E5E5"> so we</font>

371
00:16:53,590 --> 00:16:57,220
have in the green box

372
00:16:54,880 --> 00:16:59,410
we now have all<font color="#E5E5E5"> his except for one and</font>

373
00:16:57,220 --> 00:17:01,330
in the red box it's<font color="#E5E5E5"> not only the</font>

374
00:16:59,410 --> 00:17:03,130
reduction doesn't<font color="#E5E5E5"> know the secret key</font>

375
00:17:01,330 --> 00:17:05,319
it's possible that there doesn't<font color="#CCCCCC"> even</font>

376
00:17:03,130 --> 00:17:08,079
exist<font color="#E5E5E5"> the secret key anymore because it</font>

377
00:17:05,319 --> 00:17:13,270
might be an invalid<font color="#E5E5E5"> it's generally an</font>

378
00:17:08,079 --> 00:17:15,099
invalid public key once we switch<font color="#CCCCCC"> okay</font>

379
00:17:13,270 --> 00:17:16,810
<font color="#CCCCCC">so this is</font><font color="#E5E5E5"> our scheme and now the</font>

380
00:17:15,099 --> 00:17:18,310
<font color="#E5E5E5">question is is this the</font><font color="#CCCCCC"> best we can do</font>

381
00:17:16,810 --> 00:17:21,730
can<font color="#CCCCCC"> we</font><font color="#E5E5E5"> can we get better than linear</font>

382
00:17:18,310 --> 00:17:24,280
security loss and<font color="#E5E5E5"> well as I said</font><font color="#CCCCCC"> before</font>

383
00:17:21,730 --> 00:17:26,230
<font color="#CCCCCC">the answer is no but why</font><font color="#E5E5E5"> is that so</font>

384
00:17:24,280 --> 00:17:28,930
<font color="#E5E5E5">let's take</font><font color="#CCCCCC"> it let's recap the lower</font>

385
00:17:26,230 --> 00:17:31,330
bound that<font color="#E5E5E5"> we saw before</font><font color="#CCCCCC"> and the lower</font>

386
00:17:28,930 --> 00:17:35,830
bound from before the<font color="#E5E5E5"> idea was that we</font>

387
00:17:31,330 --> 00:17:38,530
can<font color="#E5E5E5"> either obtain s ki star or as KJ</font>

388
00:17:35,830 --> 00:17:41,889
star we are rewinding to compute<font color="#E5E5E5"> our</font>

389
00:17:38,530 --> 00:17:46,030
unique ki star J star because the secret

390
00:17:41,890 --> 00:17:47,770
keys are unique<font color="#E5E5E5"> this shows that the</font>

391
00:17:46,030 --> 00:17:50,879
reduction has to abort on all runs

392
00:17:47,770 --> 00:17:53,040
without<font color="#CCCCCC"> except for this</font><font color="#E5E5E5"> one</font>

393
00:17:50,880 --> 00:17:58,860
<font color="#E5E5E5">I star J star and this means we</font><font color="#CCCCCC"> have a</font>

394
00:17:53,040 --> 00:18:02,070
loss<font color="#E5E5E5"> that is at least</font><font color="#CCCCCC"> n squared the</font>

395
00:17:58,860 --> 00:18:04,439
problem of<font color="#E5E5E5"> course now is our secret keys</font>

396
00:18:02,070 --> 00:18:06,000
are not<font color="#E5E5E5"> unique we we exactly we exactly</font>

397
00:18:04,440 --> 00:18:07,710
did something to circumvent<font color="#E5E5E5"> the lower</font>

398
00:18:06,000 --> 00:18:10,080
bound<font color="#E5E5E5"> but now</font><font color="#CCCCCC"> we want</font><font color="#E5E5E5"> to employ the</font>

399
00:18:07,710 --> 00:18:12,510
techniques<font color="#E5E5E5"> of the lower bound again</font><font color="#CCCCCC"> so</font>

400
00:18:10,080 --> 00:18:15,480
of<font color="#E5E5E5"> course it doesn't work</font><font color="#CCCCCC"> but what can</font>

401
00:18:12,510 --> 00:18:17,129
we do<font color="#E5E5E5"> in order</font><font color="#CCCCCC"> for it for the for the</font>

402
00:18:15,480 --> 00:18:20,040
<font color="#CCCCCC">middle reduction technique to work</font><font color="#E5E5E5"> all</font>

403
00:18:17,130 --> 00:18:25,140
we require is that<font color="#E5E5E5"> ki star J star is</font>

404
00:18:20,040 --> 00:18:27,899
<font color="#CCCCCC">actually unique</font><font color="#E5E5E5"> and well between valid</font>

405
00:18:25,140 --> 00:18:29,640
public<font color="#CCCCCC"> keys okay I star J star is unique</font>

406
00:18:27,900 --> 00:18:32,130
this<font color="#E5E5E5"> is the correctness of the scheme so</font>

407
00:18:29,640 --> 00:18:34,920
we have that<font color="#E5E5E5"> and furthermore which is</font>

408
00:18:32,130 --> 00:18:37,650
crucial<font color="#CCCCCC"> for</font><font color="#E5E5E5"> the low bound invalid public</font>

409
00:18:34,920 --> 00:18:43,800
keys of our scheme don't have secret

410
00:18:37,650 --> 00:18:45,750
keys so how does our how can we employ

411
00:18:43,800 --> 00:18:49,500
us in our metal reduction well if we can

412
00:18:45,750 --> 00:18:52,290
now extract<font color="#CCCCCC"> s ki star</font><font color="#E5E5E5"> NS KJ star then we</font>

413
00:18:49,500 --> 00:18:56,160
know that<font color="#CCCCCC"> P ki star</font><font color="#E5E5E5"> n</font><font color="#CCCCCC"> PK J star are</font>

414
00:18:52,290 --> 00:18:58,409
actually our<font color="#E5E5E5"> extra valid</font><font color="#CCCCCC"> public keys and</font>

415
00:18:56,160 --> 00:19:01,830
then we know ki star J star is unique

416
00:18:58,410 --> 00:19:04,410
<font color="#E5E5E5">and if we know ki star J star is unique</font>

417
00:19:01,830 --> 00:19:06,840
we can argue exactly as before<font color="#CCCCCC"> that we</font>

418
00:19:04,410 --> 00:19:09,000
can solve the problem without actually

419
00:19:06,840 --> 00:19:16,050
employing an adversary just by using the

420
00:19:09,000 --> 00:19:18,900
reduction itself so the idea of and so

421
00:19:16,050 --> 00:19:21,090
in our<font color="#CCCCCC"> case like now what changed now</font><font color="#E5E5E5"> is</font>

422
00:19:18,900 --> 00:19:23,100
<font color="#E5E5E5">before it was</font><font color="#CCCCCC"> we said they can just be</font>

423
00:19:21,090 --> 00:19:25,560
<font color="#E5E5E5">this one run I star J star on which the</font>

424
00:19:23,100 --> 00:19:28,919
reduction doesn't abort<font color="#CCCCCC"> well now it can</font>

425
00:19:25,560 --> 00:19:31,740
report on all runs without<font color="#CCCCCC"> I star or on</font>

426
00:19:28,920 --> 00:19:37,160
all without J star but not on both

427
00:19:31,740 --> 00:19:39,360
<font color="#E5E5E5">because if it would on both</font><font color="#CCCCCC"> it can I</font>

428
00:19:37,160 --> 00:19:42,030
think<font color="#CCCCCC"> now it's headed the</font><font color="#E5E5E5"> wrong way</font>

429
00:19:39,360 --> 00:19:43,889
<font color="#E5E5E5">around I'm sorry so and we</font><font color="#CCCCCC"> know that the</font>

430
00:19:42,030 --> 00:19:46,470
reduction has to abort<font color="#E5E5E5"> on either all</font>

431
00:19:43,890 --> 00:19:48,270
runs without<font color="#CCCCCC"> I star or on all runs</font>

432
00:19:46,470 --> 00:19:50,730
without<font color="#E5E5E5"> a star if it would be successful</font>

433
00:19:48,270 --> 00:19:53,760
<font color="#E5E5E5">for both then we could we could really</font>

434
00:19:50,730 --> 00:19:55,380
solve<font color="#E5E5E5"> the problem ourselves</font><font color="#CCCCCC"> so now we</font>

435
00:19:53,760 --> 00:19:58,480
have a linear loss instead<font color="#E5E5E5"> of a</font>

436
00:19:55,380 --> 00:20:01,090
quadratic loss and

437
00:19:58,480 --> 00:20:02,410
<font color="#E5E5E5">okay I have</font><font color="#CCCCCC"> I think I can say something</font>

438
00:20:01,090 --> 00:20:05,860
how we get<font color="#CCCCCC"> from passive to active</font>

439
00:20:02,410 --> 00:20:08,440
security<font color="#E5E5E5"> just very shortly the active</font>

440
00:20:05,860 --> 00:20:12,399
<font color="#CCCCCC">security every user can</font><font color="#E5E5E5"> what can</font>

441
00:20:08,440 --> 00:20:14,920
register<font color="#E5E5E5"> public</font><font color="#CCCCCC"> keys</font><font color="#E5E5E5"> himself so he can</font>

442
00:20:12,400 --> 00:20:18,280
<font color="#E5E5E5">register whatever he wants as a public</font>

443
00:20:14,920 --> 00:20:20,440
key<font color="#CCCCCC"> and this makes proving security</font>

444
00:20:18,280 --> 00:20:22,870
harder<font color="#E5E5E5"> but how can we force him</font><font color="#CCCCCC"> to</font>

445
00:20:20,440 --> 00:20:27,250
actually<font color="#E5E5E5"> register something something</font>

446
00:20:22,870 --> 00:20:29,679
<font color="#E5E5E5">right</font><font color="#CCCCCC"> as a as a public</font><font color="#E5E5E5"> evil just let him</font>

447
00:20:27,250 --> 00:20:32,440
prove it<font color="#E5E5E5"> and we need like kind of a</font>

448
00:20:29,680 --> 00:20:34,240
strong kind<font color="#E5E5E5"> of strong so he proves that</font>

449
00:20:32,440 --> 00:20:36,930
actually his public he has a<font color="#E5E5E5"> secret key</font>

450
00:20:34,240 --> 00:20:38,980
<font color="#E5E5E5">using an unbounded simulation sound</font>

451
00:20:36,930 --> 00:20:42,040
non-interactive<font color="#CCCCCC"> sir knowledge proof of</font>

452
00:20:38,980 --> 00:20:45,280
knowledge and where we need the<font color="#E5E5E5"> first</font>

453
00:20:42,040 --> 00:20:47,830
part so unbounded simulation sound music

454
00:20:45,280 --> 00:20:49,510
we need that we can simulate during the

455
00:20:47,830 --> 00:20:51,879
reduction<font color="#CCCCCC"> where we might not know the</font>

456
00:20:49,510 --> 00:20:54,070
<font color="#E5E5E5">secret key</font><font color="#CCCCCC"> as you</font><font color="#E5E5E5"> just saw</font><font color="#CCCCCC"> before</font><font color="#E5E5E5"> and</font>

457
00:20:51,880 --> 00:20:56,020
the proof of knowledge allows<font color="#CCCCCC"> us to</font>

458
00:20:54,070 --> 00:20:58,360
extract<font color="#CCCCCC"> the secret</font><font color="#E5E5E5"> key from corrupted</font>

459
00:20:56,020 --> 00:21:03,490
users which<font color="#CCCCCC"> is also necessary to to</font>

460
00:20:58,360 --> 00:21:05,709
<font color="#E5E5E5">proof security and we give a generic</font>

461
00:21:03,490 --> 00:21:09,250
<font color="#E5E5E5">instantiation as I said before from</font>

462
00:21:05,710 --> 00:21:12,220
standard components and for our for our

463
00:21:09,250 --> 00:21:14,410
<font color="#CCCCCC">4i</font><font color="#E5E5E5"> our Nike we can actually achieve</font>

464
00:21:12,220 --> 00:21:17,530
<font color="#E5E5E5">optimize tightly secure instantiation</font>

465
00:21:14,410 --> 00:21:20,290
<font color="#E5E5E5">because for example we can use the</font>

466
00:21:17,530 --> 00:21:22,930
linearity and also actually<font color="#E5E5E5"> a one time</font>

467
00:21:20,290 --> 00:21:27,970
simulation<font color="#CCCCCC"> sound music is sufficient</font><font color="#E5E5E5"> and</font>

468
00:21:22,930 --> 00:21:30,190
this lets me<font color="#E5E5E5"> get to recap our results so</font>

469
00:21:27,970 --> 00:21:32,470
instantiating<font color="#E5E5E5"> the construction so it's</font>

470
00:21:30,190 --> 00:21:36,460
all modular constructions instantiating

471
00:21:32,470 --> 00:21:40,930
<font color="#E5E5E5">it with the hash proof system</font><font color="#CCCCCC"> of Cramer</font>

472
00:21:36,460 --> 00:21:43,000
soup we<font color="#CCCCCC"> have the first nike passive</font>

473
00:21:40,930 --> 00:21:45,280
<font color="#E5E5E5">secure nike requiring three group</font>

474
00:21:43,000 --> 00:21:48,610
elements and having<font color="#E5E5E5"> only linear security</font>

475
00:21:45,280 --> 00:21:50,110
<font color="#CCCCCC">laws</font><font color="#E5E5E5"> and using our trends</font><font color="#CCCCCC"> the</font>

476
00:21:48,610 --> 00:21:53,169
instantiation<font color="#E5E5E5"> of the generic</font>

477
00:21:50,110 --> 00:21:55,600
transformation we get<font color="#CCCCCC"> 12 group elements</font>

478
00:21:53,170 --> 00:21:58,480
for active security<font color="#CCCCCC"> so as you can see</font>

479
00:21:55,600 --> 00:22:01,750
<font color="#E5E5E5">there's still room for for future</font>

480
00:21:58,480 --> 00:22:03,790
<font color="#E5E5E5">improvement to get not</font><font color="#CCCCCC"> just from red to</font>

481
00:22:01,750 --> 00:22:06,730
orange but actually from orange<font color="#E5E5E5"> to green</font>

482
00:22:03,790 --> 00:22:12,200
<font color="#E5E5E5">but it seems it seems it seems</font>

483
00:22:06,730 --> 00:22:15,080
inherently hard to do so as our

484
00:22:12,200 --> 00:22:18,289
<font color="#E5E5E5">bound applies to all schemes which which</font>

485
00:22:15,080 --> 00:22:20,149
which were<font color="#E5E5E5"> also like in our scheme</font>

486
00:22:18,289 --> 00:22:22,279
invalid public keys have no secret keys

487
00:22:20,149 --> 00:22:26,629
<font color="#E5E5E5">so you will need inherently new</font>

488
00:22:22,279 --> 00:22:30,169
techniques<font color="#E5E5E5"> to get there</font><font color="#CCCCCC"> and yes I</font><font color="#E5E5E5"> think</font>

489
00:22:26,629 --> 00:22:32,449
<font color="#CCCCCC">that's all</font><font color="#E5E5E5"> I want to say thank you</font><font color="#CCCCCC"> very</font>

490
00:22:30,169 --> 00:22:33,700
much for<font color="#E5E5E5"> joining and I'm happy about</font>

491
00:22:32,450 --> 00:22:38,549
questions

492
00:22:33,700 --> 00:22:38,549
[Applause]

