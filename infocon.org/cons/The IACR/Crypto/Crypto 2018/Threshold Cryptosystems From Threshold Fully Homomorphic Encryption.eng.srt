1
00:00:05,310 --> 00:00:08,879
thanks again<font color="#E5E5E5"> for introducing me</font><font color="#CCCCCC"> so I'm</font>

2
00:00:07,930 --> 00:00:11,700
<font color="#E5E5E5">going to talk</font><font color="#CCCCCC"> about</font>

3
00:00:08,880 --> 00:00:13,040
<font color="#E5E5E5">systems from threshold fully homomorphic</font>

4
00:00:11,700 --> 00:00:17,400
encryption

5
00:00:13,040 --> 00:00:19,380
let me now motivate you first<font color="#E5E5E5"> so I want</font>

6
00:00:17,400 --> 00:00:20,640
to introduce you<font color="#CCCCCC"> to the characters there</font>

7
00:00:19,380 --> 00:00:24,479
<font color="#E5E5E5">are two characters</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> the first</font>

8
00:00:20,640 --> 00:00:26,130
<font color="#E5E5E5">character is Tony Stark</font><font color="#CCCCCC"> and he is he</font>

9
00:00:24,480 --> 00:00:28,169
<font color="#CCCCCC">play he'll play the role of</font><font color="#E5E5E5"> the good guy</font>

10
00:00:26,130 --> 00:00:30,869
and there is another character<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is</font>

11
00:00:28,169 --> 00:00:36,060
like Thanos<font color="#CCCCCC"> and he is adversarial and</font>

12
00:00:30,869 --> 00:00:38,130
like very powerful so consider this

13
00:00:36,060 --> 00:00:41,040
following motivate motivating example

14
00:00:38,130 --> 00:00:43,710
suppose<font color="#E5E5E5"> Tony wants to send across some</font>

15
00:00:41,040 --> 00:00:45,030
messages over<font color="#E5E5E5"> a channel and let's say he</font>

16
00:00:43,710 --> 00:00:47,370
maintains no<font color="#E5E5E5"> private information</font>

17
00:00:45,030 --> 00:00:49,020
whatsoever<font color="#E5E5E5"> so of course in this setting</font>

18
00:00:47,370 --> 00:00:53,699
<font color="#CCCCCC">there is it's pointless to ask for any</font>

19
00:00:49,020 --> 00:00:55,020
kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> security but so it's essential</font>

20
00:00:53,700 --> 00:00:57,840
for security to<font color="#E5E5E5"> have some kind of</font>

21
00:00:55,020 --> 00:00:59,940
private<font color="#CCCCCC"> information</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> now let's say he</font>

22
00:00:57,840 --> 00:01:03,120
generates a key for an encryption scheme

23
00:00:59,940 --> 00:01:04,619
<font color="#CCCCCC">and uses some</font><font color="#E5E5E5"> uses it somehow to to</font>

24
00:01:03,120 --> 00:01:08,548
encrypt the messages before sending it

25
00:01:04,619 --> 00:01:09,930
over to<font color="#E5E5E5"> the channel in this setting</font><font color="#CCCCCC"> 10</font>

26
00:01:08,549 --> 00:01:11,850
of suddenly<font color="#CCCCCC"> family finds</font><font color="#E5E5E5"> himself in</font>

27
00:01:09,930 --> 00:01:15,749
trouble<font color="#E5E5E5"> because now he cannot understand</font>

28
00:01:11,850 --> 00:01:17,850
what he's trying<font color="#CCCCCC"> to say but as we</font><font color="#E5E5E5"> all</font>

29
00:01:15,749 --> 00:01:19,920
<font color="#CCCCCC">know key management</font><font color="#E5E5E5"> is a hard problem</font>

30
00:01:17,850 --> 00:01:21,719
<font color="#E5E5E5">and it's it's prone to</font><font color="#CCCCCC"> all sorts of</font>

31
00:01:19,920 --> 00:01:24,210
<font color="#E5E5E5">attacks such</font><font color="#CCCCCC"> as side channel leaks</font>

32
00:01:21,719 --> 00:01:27,839
social hacking human error<font color="#E5E5E5"> so on so</font>

33
00:01:24,210 --> 00:01:31,589
forth<font color="#CCCCCC"> so now if Thanos</font><font color="#E5E5E5"> gets access to</font>

34
00:01:27,840 --> 00:01:33,149
<font color="#E5E5E5">this key of Tony's he can understand</font>

35
00:01:31,590 --> 00:01:38,819
everything<font color="#E5E5E5"> and</font><font color="#CCCCCC"> he is happy all over</font>

36
00:01:33,149 --> 00:01:40,979
<font color="#CCCCCC">again ok</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is the</font><font color="#CCCCCC"> main question</font>

37
00:01:38,819 --> 00:01:42,959
that<font color="#E5E5E5"> we</font><font color="#CCCCCC"> asked in</font><font color="#E5E5E5"> this paper can we</font>

38
00:01:40,979 --> 00:01:48,658
address<font color="#E5E5E5"> this issue at more basic and</font>

39
00:01:42,959 --> 00:01:50,759
fundamental level and this area<font color="#CCCCCC"> is of</font>

40
00:01:48,659 --> 00:01:53,999
<font color="#E5E5E5">that</font><font color="#CCCCCC"> of threshold cryptography so let's</font>

41
00:01:50,759 --> 00:01:56,670
just consider a knife solution<font color="#E5E5E5"> first can</font>

42
00:01:53,999 --> 00:01:59,699
we<font color="#CCCCCC"> divide the key K into shares s1</font>

43
00:01:56,670 --> 00:02:02,880
through SN and store them<font color="#CCCCCC"> separately so</font>

44
00:01:59,700 --> 00:02:04,859
<font color="#CCCCCC">you have a key</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> you just use a secret</font>

45
00:02:02,880 --> 00:02:08,728
<font color="#E5E5E5">sharing scheme and showed it across</font>

46
00:02:04,859 --> 00:02:10,919
servers now but note that<font color="#E5E5E5"> such a dumb</font>

47
00:02:08,729 --> 00:02:12,890
way of secret sharing<font color="#E5E5E5"> is</font><font color="#CCCCCC"> not going to</font>

48
00:02:10,919 --> 00:02:15,660
lead you anywhere because<font color="#E5E5E5"> Tony has to</font>

49
00:02:12,890 --> 00:02:18,320
reconstruct all these secret keys in

50
00:02:15,660 --> 00:02:21,060
order<font color="#CCCCCC"> to do anything</font><font color="#E5E5E5"> meaningful with it</font>

51
00:02:18,320 --> 00:02:23,120
so as an example<font color="#E5E5E5"> what Tony would like is</font>

52
00:02:21,060 --> 00:02:25,390
that<font color="#E5E5E5"> if he wants to generate</font><font color="#CCCCCC"> a</font>

53
00:02:23,120 --> 00:02:27,950
signature<font color="#E5E5E5"> he would like to share these</font>

54
00:02:25,390 --> 00:02:30,589
partial signing keys on<font color="#CCCCCC"> these</font><font color="#E5E5E5"> servers</font>

55
00:02:27,950 --> 00:02:32,720
and then so and<font color="#E5E5E5"> these servers should be</font>

56
00:02:30,590 --> 00:02:34,430
able<font color="#E5E5E5"> to issue you some sort of partial</font>

57
00:02:32,720 --> 00:02:39,470
signatures which Tony<font color="#CCCCCC"> should be able</font><font color="#E5E5E5"> to</font>

58
00:02:34,430 --> 00:02:42,379
<font color="#CCCCCC">combine to get a</font><font color="#E5E5E5"> signature and more</font>

59
00:02:39,470 --> 00:02:44,150
formally we require<font color="#E5E5E5"> the notion of</font>

60
00:02:42,379 --> 00:02:47,750
correctness where we want that each

61
00:02:44,150 --> 00:02:51,010
server can independently compute<font color="#E5E5E5"> on the</font>

62
00:02:47,750 --> 00:02:55,069
share to generate this<font color="#E5E5E5"> F of</font><font color="#CCCCCC"> si and these</font>

63
00:02:51,010 --> 00:02:56,810
evaluation shares<font color="#CCCCCC"> we can we should be</font>

64
00:02:55,069 --> 00:03:00,260
able<font color="#E5E5E5"> to combine them publicly</font><font color="#CCCCCC"> to recover</font>

65
00:02:56,810 --> 00:03:02,720
<font color="#E5E5E5">the final computation F of K and from</font>

66
00:03:00,260 --> 00:03:04,489
security we<font color="#E5E5E5"> want that it should be hard</font>

67
00:03:02,720 --> 00:03:09,170
to form the final computation F of K

68
00:03:04,489 --> 00:03:12,530
without<font color="#E5E5E5"> knowing all</font><font color="#CCCCCC"> key shirts but in</font>

69
00:03:09,170 --> 00:03:14,540
<font color="#CCCCCC">cryptography we study more fine grained</font>

70
00:03:12,530 --> 00:03:16,069
access patterns and classical<font color="#CCCCCC"> and</font>

71
00:03:14,540 --> 00:03:18,319
historical example is of that<font color="#E5E5E5"> of</font>

72
00:03:16,069 --> 00:03:22,458
<font color="#E5E5E5">threshold which is</font><font color="#CCCCCC"> T out of an axis</font>

73
00:03:18,319 --> 00:03:25,879
pattern<font color="#E5E5E5"> and here we want that each from</font>

74
00:03:22,459 --> 00:03:28,130
correctness we want that each server can

75
00:03:25,879 --> 00:03:31,700
independently compute on the share F of

76
00:03:28,130 --> 00:03:33,260
Si and then any<font color="#CCCCCC"> t valuation shares can</font>

77
00:03:31,700 --> 00:03:35,208
be publicly<font color="#E5E5E5"> combined later to form the</font>

78
00:03:33,260 --> 00:03:36,858
final computation<font color="#E5E5E5"> and again from the</font>

79
00:03:35,209 --> 00:03:38,299
security what we want is<font color="#CCCCCC"> that it should</font>

80
00:03:36,859 --> 00:03:40,940
still<font color="#CCCCCC"> be hard</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> form the final</font>

81
00:03:38,299 --> 00:03:44,780
<font color="#E5E5E5">computation F of K without knowing TK</font>

82
00:03:40,940 --> 00:03:46,879
shares and in this example suppose

83
00:03:44,780 --> 00:03:48,950
<font color="#CCCCCC">Stannis</font><font color="#E5E5E5"> suddenly snaps and corrupts half</font>

84
00:03:46,879 --> 00:03:51,470
of the servers on<font color="#CCCCCC"> the earth he should</font>

85
00:03:48,950 --> 00:03:55,940
still be<font color="#CCCCCC"> in trouble and not be</font><font color="#E5E5E5"> able to</font>

86
00:03:51,470 --> 00:03:58,040
break<font color="#E5E5E5"> security let's just look at this</font>

87
00:03:55,940 --> 00:04:00,500
example concretely<font color="#E5E5E5"> let's just look at</font>

88
00:03:58,040 --> 00:04:04,099
sexual signatures now in this

89
00:04:00,500 --> 00:04:06,109
application to<font color="#E5E5E5"> anyone's to have a sign</font>

90
00:04:04,099 --> 00:04:09,349
on a<font color="#E5E5E5"> message suppose he has already</font>

91
00:04:06,109 --> 00:04:12,230
secret shared his signature key with<font color="#E5E5E5"> n</font>

92
00:04:09,349 --> 00:04:15,048
servers<font color="#E5E5E5"> he should be able</font><font color="#CCCCCC"> to relay this</font>

93
00:04:12,230 --> 00:04:17,209
message to the servers<font color="#E5E5E5"> and then get some</font>

94
00:04:15,049 --> 00:04:19,430
kind<font color="#E5E5E5"> of partial signatures which he</font>

95
00:04:17,209 --> 00:04:23,810
<font color="#CCCCCC">should be later able</font><font color="#E5E5E5"> to combine to to</font>

96
00:04:19,430 --> 00:04:26,470
recover<font color="#CCCCCC"> the final signature</font><font color="#E5E5E5"> and as with</font>

97
00:04:23,810 --> 00:04:30,020
all signature schemes we would require

98
00:04:26,470 --> 00:04:31,580
<font color="#E5E5E5">this notion to satisfy various sorts of</font>

99
00:04:30,020 --> 00:04:36,330
requirements<font color="#CCCCCC"> such as unforgeable</font><font color="#E5E5E5"> ax</font><font color="#CCCCCC"> t</font>

100
00:04:31,580 --> 00:04:38,698
compactness correctness robustness<font color="#E5E5E5"> etc</font>

101
00:04:36,330 --> 00:04:41,460
another example is of thresholded<font color="#CCCCCC"> public</font>

102
00:04:38,699 --> 00:04:44,400
<font color="#CCCCCC">key encryption here</font><font color="#E5E5E5"> let's say that</font><font color="#CCCCCC"> Tony</font>

103
00:04:41,460 --> 00:04:47,818
has<font color="#CCCCCC"> secrets a</font><font color="#E5E5E5"> partial decryption keys to</font>

104
00:04:44,400 --> 00:04:49,440
the servers and he gets a ciphertext<font color="#CCCCCC"> he</font>

105
00:04:47,819 --> 00:04:51,539
should be able to<font color="#E5E5E5"> relay these ciphertext</font>

106
00:04:49,440 --> 00:04:54,090
to the servers and then<font color="#E5E5E5"> servers should</font>

107
00:04:51,539 --> 00:04:56,789
be able<font color="#E5E5E5"> to give out partial decryptions</font>

108
00:04:54,090 --> 00:04:59,400
which he should<font color="#CCCCCC"> be able</font><font color="#E5E5E5"> to combine to</font>

109
00:04:56,789 --> 00:05:00,780
learn the message<font color="#CCCCCC"> and as with</font><font color="#E5E5E5"> all</font>

110
00:04:59,400 --> 00:05:02,008
encryption schemes you might<font color="#E5E5E5"> ask for</font>

111
00:05:00,780 --> 00:05:04,020
<font color="#CCCCCC">various sorts of</font><font color="#E5E5E5"> requirements such as</font>

112
00:05:02,009 --> 00:05:08,099
<font color="#CCCCCC">CCA security compactness correctness</font>

113
00:05:04,020 --> 00:05:09,780
<font color="#E5E5E5">robustness so on so forth let me again</font>

114
00:05:08,099 --> 00:05:12,630
tell you that there has been tons and

115
00:05:09,780 --> 00:05:15,150
tons of work in<font color="#E5E5E5"> this</font><font color="#CCCCCC"> area</font><font color="#E5E5E5"> there's been</font>

116
00:05:12,630 --> 00:05:18,060
work on<font color="#E5E5E5"> RSA signatures</font><font color="#CCCCCC"> noise signatures</font>

117
00:05:15,150 --> 00:05:20,159
ECDSA signatures<font color="#CCCCCC"> Els signatures</font><font color="#E5E5E5"> grammar</font>

118
00:05:18,060 --> 00:05:24,120
<font color="#CCCCCC">Shoop encryption and many other words</font>

119
00:05:20,159 --> 00:05:28,560
<font color="#E5E5E5">but most of these words have focused on</font>

120
00:05:24,120 --> 00:05:30,659
specific primitives and here we would

121
00:05:28,560 --> 00:05:34,080
<font color="#CCCCCC">like to</font><font color="#E5E5E5"> focus more on a general</font>

122
00:05:30,659 --> 00:05:36,900
framework<font color="#E5E5E5"> to capture these primitives so</font>

123
00:05:34,080 --> 00:05:39,990
let<font color="#E5E5E5"> me summarize our results so we</font>

124
00:05:36,900 --> 00:05:41,580
construct<font color="#E5E5E5"> threshold effigy then we</font>

125
00:05:39,990 --> 00:05:44,430
formalize this notion of<font color="#E5E5E5"> universal</font>

126
00:05:41,580 --> 00:05:46,380
sexualize<font color="#E5E5E5"> err then we show that we can</font>

127
00:05:44,430 --> 00:05:48,750
use this Universal threshold<font color="#CCCCCC"> Iser</font><font color="#E5E5E5"> to as</font>

128
00:05:46,380 --> 00:05:51,449
a general tool to construct threshold

129
00:05:48,750 --> 00:05:53,099
crypto systems and then we construct

130
00:05:51,449 --> 00:05:55,259
<font color="#E5E5E5">this Universal threshold</font><font color="#CCCCCC"> Iser from</font>

131
00:05:53,099 --> 00:05:57,270
<font color="#E5E5E5">special effigy and this</font><font color="#CCCCCC"> immediately</font>

132
00:05:55,259 --> 00:05:59,310
<font color="#CCCCCC">gives rise to</font><font color="#E5E5E5"> all sorts of threshold</font>

133
00:05:57,270 --> 00:06:02,340
crypto systems such as special

134
00:05:59,310 --> 00:06:05,610
signatures<font color="#CCCCCC"> CC secure PK distributed PRF</font>

135
00:06:02,340 --> 00:06:08,239
function<font color="#CCCCCC"> sitting</font><font color="#E5E5E5"> all from</font><font color="#CCCCCC"> lwe</font><font color="#E5E5E5"> and many</font>

136
00:06:05,610 --> 00:06:14,699
of these notions were not known to

137
00:06:08,240 --> 00:06:16,409
<font color="#CCCCCC">construct from lwe before so let's just</font>

138
00:06:14,699 --> 00:06:19,650
recall what<font color="#E5E5E5"> hopefully how much</font><font color="#CCCCCC"> fake</font>

139
00:06:16,409 --> 00:06:21,539
encryption is and and even before that

140
00:06:19,650 --> 00:06:23,940
<font color="#E5E5E5">let's just recall what fully homomorphic</font>

141
00:06:21,539 --> 00:06:26,280
<font color="#E5E5E5">encryption is so in home our second</font>

142
00:06:23,940 --> 00:06:27,930
encryption you have<font color="#CCCCCC"> four algorithms</font>

143
00:06:26,280 --> 00:06:30,780
<font color="#CCCCCC">there is a set up algorithm which takes</font>

144
00:06:27,930 --> 00:06:32,909
<font color="#E5E5E5">in the security parameter</font><font color="#CCCCCC"> and it gives</font>

145
00:06:30,780 --> 00:06:35,609
out a key pair<font color="#E5E5E5"> a public key and a secret</font>

146
00:06:32,909 --> 00:06:37,740
<font color="#E5E5E5">key and then using the public key you</font>

147
00:06:35,610 --> 00:06:40,830
can encrypt any message<font color="#E5E5E5"> to</font><font color="#CCCCCC"> give out a</font>

148
00:06:37,740 --> 00:06:42,960
<font color="#CCCCCC">ciphertext</font><font color="#E5E5E5"> and then this this evaluate</font>

149
00:06:40,830 --> 00:06:45,389
algorithm which<font color="#CCCCCC"> takes the public key</font><font color="#E5E5E5"> is</font>

150
00:06:42,960 --> 00:06:47,250
the circuit and bunch of<font color="#CCCCCC"> ciphertext</font><font color="#E5E5E5"> to</font>

151
00:06:45,389 --> 00:06:49,620
give out<font color="#E5E5E5"> an evaluated cipher text and</font>

152
00:06:47,250 --> 00:06:50,100
<font color="#CCCCCC">then you can decrypt this evaluate</font>

153
00:06:49,620 --> 00:06:52,350
deciphered

154
00:06:50,100 --> 00:06:54,660
using the<font color="#E5E5E5"> secret key to recover the</font>

155
00:06:52,350 --> 00:06:56,370
evaluated message<font color="#E5E5E5"> and we want this</font>

156
00:06:54,660 --> 00:07:00,560
<font color="#CCCCCC">valued</font><font color="#E5E5E5"> message to be equal to the</font>

157
00:06:56,370 --> 00:07:06,000
circuit applied on<font color="#CCCCCC"> m1</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> MK where</font><font color="#E5E5E5"> CT I</font>

158
00:07:00,560 --> 00:07:07,290
had encrypted the message<font color="#CCCCCC"> am i and now</font>

159
00:07:06,000 --> 00:07:08,730
let's<font color="#E5E5E5"> just move on to</font><font color="#CCCCCC"> threshold for</font>

160
00:07:07,290 --> 00:07:10,710
harmful encryption so I'm<font color="#E5E5E5"> just going to</font>

161
00:07:08,730 --> 00:07:13,830
tell<font color="#CCCCCC"> you what modifications to</font><font color="#E5E5E5"> make in</font>

162
00:07:10,710 --> 00:07:15,120
the syntax so now setup<font color="#E5E5E5"> instead of just</font>

163
00:07:13,830 --> 00:07:17,400
taking<font color="#E5E5E5"> the security parameter which</font>

164
00:07:15,120 --> 00:07:18,840
additionally takes<font color="#CCCCCC"> N and T where n is</font>

165
00:07:17,400 --> 00:07:21,419
<font color="#E5E5E5">the</font><font color="#CCCCCC"> number of parties and 3</font><font color="#E5E5E5"> is the</font>

166
00:07:18,840 --> 00:07:25,679
threshold<font color="#E5E5E5"> and now instead of just one</font>

167
00:07:21,420 --> 00:07:27,180
key it gives a public key and<font color="#E5E5E5"> n partial</font>

168
00:07:25,680 --> 00:07:29,790
decryption keys as opposed to<font color="#E5E5E5"> just one</font>

169
00:07:27,180 --> 00:07:32,010
secret<font color="#E5E5E5"> key then you can encrypt any</font>

170
00:07:29,790 --> 00:07:34,500
message m using the public<font color="#CCCCCC"> key as before</font>

171
00:07:32,010 --> 00:07:37,500
you can<font color="#CCCCCC"> evaluate as before</font><font color="#E5E5E5"> using public</font>

172
00:07:34,500 --> 00:07:41,550
key<font color="#E5E5E5"> the circuit CN and ciphertext C T 1</font>

173
00:07:37,500 --> 00:07:43,890
<font color="#E5E5E5">2 3 D K and and but here the decryption</font>

174
00:07:41,550 --> 00:07:46,080
runs in two phases<font color="#CCCCCC"> the first</font><font color="#E5E5E5"> phases of</font>

175
00:07:43,890 --> 00:07:49,050
is that<font color="#CCCCCC"> of</font><font color="#E5E5E5"> partial decryption which</font>

176
00:07:46,080 --> 00:07:51,810
essentially is<font color="#E5E5E5"> the decentralized version</font>

177
00:07:49,050 --> 00:07:54,720
of decryption which takes the partial

178
00:07:51,810 --> 00:07:56,130
decryption key of any party I and the

179
00:07:54,720 --> 00:07:58,890
valued<font color="#E5E5E5"> ciphertext and it outputs a</font>

180
00:07:56,130 --> 00:08:00,570
partial decryption<font color="#E5E5E5"> and then you should</font>

181
00:07:58,890 --> 00:08:02,849
be able<font color="#E5E5E5"> to combine all these partial</font>

182
00:08:00,570 --> 00:08:05,330
decryptions in using the final

183
00:08:02,850 --> 00:08:10,560
decryption algorithm to recover<font color="#CCCCCC"> m</font><font color="#E5E5E5"> eval</font>

184
00:08:05,330 --> 00:08:12,599
<font color="#E5E5E5">and we require some sort of correctness</font>

185
00:08:10,560 --> 00:08:15,420
as in<font color="#E5E5E5"> effigy and the correctness notion</font>

186
00:08:12,600 --> 00:08:17,840
<font color="#E5E5E5">will just say that</font><font color="#CCCCCC"> if I pick set of</font>

187
00:08:15,420 --> 00:08:19,860
partial<font color="#CCCCCC"> decryptions for some ciphertext</font>

188
00:08:17,840 --> 00:08:22,289
correspond<font color="#CCCCCC"> R corresponding to some set</font>

189
00:08:19,860 --> 00:08:26,160
<font color="#CCCCCC">of size T I always recover the correct</font>

190
00:08:22,290 --> 00:08:30,060
output<font color="#CCCCCC"> that is C</font><font color="#E5E5E5"> of M</font><font color="#CCCCCC"> 1</font><font color="#E5E5E5"> through</font><font color="#CCCCCC"> m K</font><font color="#E5E5E5"> ok</font>

191
00:08:26,160 --> 00:08:33,539
so now let's<font color="#E5E5E5"> move on</font><font color="#CCCCCC"> to another</font>

192
00:08:30,060 --> 00:08:36,150
efficiency requirements and<font color="#CCCCCC"> it's called</font>

193
00:08:33,539 --> 00:08:38,640
compactness<font color="#CCCCCC"> it just says that</font><font color="#E5E5E5"> the size</font>

194
00:08:36,150 --> 00:08:41,250
<font color="#E5E5E5">of public key size of ciphertext size of</font>

195
00:08:38,640 --> 00:08:43,679
partial decryption should not grow too

196
00:08:41,250 --> 00:08:50,850
<font color="#E5E5E5">much</font><font color="#CCCCCC"> they should</font><font color="#E5E5E5"> they should just be</font>

197
00:08:43,679 --> 00:08:53,939
small let's<font color="#CCCCCC"> look</font><font color="#E5E5E5"> at the security notions</font>

198
00:08:50,850 --> 00:08:59,130
of this primitive<font color="#E5E5E5"> so there are two</font>

199
00:08:53,940 --> 00:09:01,170
<font color="#CCCCCC">notions and the first motion is the more</font>

200
00:08:59,130 --> 00:09:03,740
intuitive one it's called semantic

201
00:09:01,170 --> 00:09:07,010
security which just says that

202
00:09:03,740 --> 00:09:09,500
if I am not<font color="#E5E5E5"> given</font><font color="#CCCCCC"> T</font><font color="#E5E5E5"> secret</font><font color="#CCCCCC"> keys if I'm</font>

203
00:09:07,010 --> 00:09:11,510
given less than<font color="#E5E5E5"> T secret keys then an</font>

204
00:09:09,500 --> 00:09:13,550
encryption of any<font color="#CCCCCC"> message m0 should be</font>

205
00:09:11,510 --> 00:09:16,730
indistinguishable from encryption<font color="#CCCCCC"> of any</font>

206
00:09:13,550 --> 00:09:18,829
<font color="#E5E5E5">message m1 the second one is more</font>

207
00:09:16,730 --> 00:09:22,490
technical<font color="#E5E5E5"> if it just talks that talks</font>

208
00:09:18,830 --> 00:09:25,100
about that partial decryptions should

209
00:09:22,490 --> 00:09:27,170
not leak much in too much information

210
00:09:25,100 --> 00:09:29,030
<font color="#CCCCCC">about the ciphertext they should</font><font color="#E5E5E5"> just</font>

211
00:09:27,170 --> 00:09:33,860
hide the ciphertext<font color="#E5E5E5"> is the way to</font>

212
00:09:29,030 --> 00:09:35,300
capture capture this is by<font color="#E5E5E5"> simulating by</font>

213
00:09:33,860 --> 00:09:38,660
just<font color="#E5E5E5"> showing that this partial</font>

214
00:09:35,300 --> 00:09:42,439
decryption can be<font color="#CCCCCC"> simulated</font><font color="#E5E5E5"> knowing set</font>

215
00:09:38,660 --> 00:09:48,410
of<font color="#E5E5E5"> t</font><font color="#CCCCCC"> minus 1 secret keys and and message</font>

216
00:09:42,440 --> 00:09:50,600
that was<font color="#E5E5E5"> encrypted by the ciphertext how</font>

217
00:09:48,410 --> 00:09:55,219
do we construct<font color="#E5E5E5"> this so our</font><font color="#CCCCCC"> starting</font>

218
00:09:50,600 --> 00:09:56,870
point is of that<font color="#CCCCCC"> of g SW</font><font color="#E5E5E5"> fhe schemes and</font>

219
00:09:55,220 --> 00:10:01,040
<font color="#E5E5E5">let me just recall the properties that</font>

220
00:09:56,870 --> 00:10:04,040
<font color="#E5E5E5">we use so in j SW the ciphertext</font><font color="#CCCCCC"> is a</font>

221
00:10:01,040 --> 00:10:08,420
matrix of dimension L cross L with

222
00:10:04,040 --> 00:10:13,490
entries 0<font color="#CCCCCC"> & 1 and secret key s is a</font>

223
00:10:08,420 --> 00:10:16,400
<font color="#E5E5E5">vector in in</font><font color="#CCCCCC"> zq to</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> l where</font><font color="#E5E5E5"> q is some</font>

224
00:10:13,490 --> 00:10:18,260
modulus and the secret key has the

225
00:10:16,400 --> 00:10:20,660
following structure the structure<font color="#E5E5E5"> is</font>

226
00:10:18,260 --> 00:10:23,420
that<font color="#E5E5E5"> the first</font><font color="#CCCCCC"> L minus</font><font color="#E5E5E5"> 1 components of</font>

227
00:10:20,660 --> 00:10:28,510
the secret key are random whereas the

228
00:10:23,420 --> 00:10:28,510
last<font color="#E5E5E5"> component is the floor of Q by 2</font>

229
00:10:29,080 --> 00:10:33,770
this notion<font color="#E5E5E5"> this J sub</font><font color="#CCCCCC"> u scheme</font>

230
00:10:31,670 --> 00:10:36,500
satisfies what is called as approximate

231
00:10:33,770 --> 00:10:39,260
eigenvector property which is<font color="#CCCCCC"> that if</font>

232
00:10:36,500 --> 00:10:42,080
you<font color="#CCCCCC"> have any</font><font color="#E5E5E5"> ciphertext C T when you</font>

233
00:10:39,260 --> 00:10:44,660
decrypt it<font color="#E5E5E5"> when you take multiply s with</font>

234
00:10:42,080 --> 00:10:47,990
CT what you get is message<font color="#CCCCCC"> times the</font>

235
00:10:44,660 --> 00:10:50,180
secret<font color="#E5E5E5"> plus a noise here message is the</font>

236
00:10:47,990 --> 00:10:51,590
<font color="#E5E5E5">message that you were encrypt when what</font>

237
00:10:50,180 --> 00:10:57,859
you had encrypted inside the<font color="#E5E5E5"> ciphertext</font>

238
00:10:51,590 --> 00:11:00,170
<font color="#CCCCCC">and noise is just as a</font><font color="#E5E5E5"> small</font><font color="#CCCCCC"> vector so</font>

239
00:10:57,860 --> 00:11:03,770
I'm<font color="#E5E5E5"> I am recalling this again on this</font>

240
00:11:00,170 --> 00:11:06,469
slide<font color="#E5E5E5"> and now we</font><font color="#CCCCCC"> observe that</font><font color="#E5E5E5"> when you</font>

241
00:11:03,770 --> 00:11:10,160
do<font color="#E5E5E5"> CT 1</font><font color="#CCCCCC"> +</font><font color="#E5E5E5"> CD 2 and you try to multiply</font>

242
00:11:06,470 --> 00:11:13,340
<font color="#E5E5E5">it</font><font color="#CCCCCC"> with this what you</font><font color="#E5E5E5"> get is</font><font color="#CCCCCC"> m1 plus m2</font>

243
00:11:10,160 --> 00:11:15,439
times<font color="#E5E5E5"> s plus noise so it just can be</font>

244
00:11:13,340 --> 00:11:17,310
seen that CD 1 plus C 2 is<font color="#CCCCCC"> Homeric</font>

245
00:11:15,440 --> 00:11:19,529
<font color="#CCCCCC">edition</font>

246
00:11:17,310 --> 00:11:22,319
and similarly if you multiply<font color="#CCCCCC"> ct1</font><font color="#E5E5E5"> times</font>

247
00:11:19,529 --> 00:11:25,350
<font color="#CCCCCC">you</font><font color="#E5E5E5"> do you</font><font color="#CCCCCC"> observe that</font><font color="#E5E5E5"> s time CD one</font>

248
00:11:22,319 --> 00:11:29,639
time CD 2 is just m1 times m2 times s

249
00:11:25,350 --> 00:11:32,189
<font color="#E5E5E5">plus noise and CD 1 CD 2 can</font><font color="#CCCCCC"> be treated</font>

250
00:11:29,639 --> 00:11:38,490
as evaluation<font color="#E5E5E5"> multiplication of two</font>

251
00:11:32,189 --> 00:11:41,189
<font color="#CCCCCC">cipher texts ok so so now this way we</font>

252
00:11:38,490 --> 00:11:44,160
can define decryption as follows we just

253
00:11:41,189 --> 00:11:46,829
say s times CD times<font color="#E5E5E5"> a public vector</font>

254
00:11:44,160 --> 00:11:50,339
<font color="#CCCCCC">zero zero 1 transpose and when you</font>

255
00:11:46,829 --> 00:11:56,309
compute this you get M<font color="#E5E5E5"> times Q by 2 plus</font>

256
00:11:50,339 --> 00:11:59,430
noise so note that decryption is linear

257
00:11:56,309 --> 00:12:01,649
in s so this<font color="#CCCCCC"> immediately gives rise to</font>

258
00:11:59,430 --> 00:12:04,878
some sort of initial idea that maybe you

259
00:12:01,649 --> 00:12:08,730
<font color="#E5E5E5">can secret share this secret key s into</font>

260
00:12:04,879 --> 00:12:11,249
into vectors<font color="#E5E5E5"> into n shares and then use</font>

261
00:12:08,730 --> 00:12:13,110
them to compute partial decryption<font color="#E5E5E5"> so</font>

262
00:12:11,249 --> 00:12:17,699
the idea<font color="#E5E5E5"> is that we</font><font color="#CCCCCC"> can show mushy</font>

263
00:12:13,110 --> 00:12:20,610
<font color="#E5E5E5">secret share this this secret key into s</font>

264
00:12:17,699 --> 00:12:23,639
1 to s<font color="#E5E5E5"> n and again I'm just</font><font color="#CCCCCC"> going to</font>

265
00:12:20,610 --> 00:12:25,589
recall that in shamil secret sharing<font color="#E5E5E5"> if</font>

266
00:12:23,639 --> 00:12:28,529
I have any set of<font color="#CCCCCC"> size T there will</font>

267
00:12:25,589 --> 00:12:30,540
exist<font color="#CCCCCC"> lagrange coefficients such that my</font>

268
00:12:28,529 --> 00:12:35,009
<font color="#E5E5E5">secret s is</font><font color="#CCCCCC"> just lambda linear</font>

269
00:12:30,540 --> 00:12:36,300
combination of these shares so this is

270
00:12:35,009 --> 00:12:39,959
the<font color="#CCCCCC"> initial idea we can define the</font>

271
00:12:36,300 --> 00:12:42,229
partial<font color="#CCCCCC"> decryption as just SI x GD x 0 u</font>

272
00:12:39,959 --> 00:12:44,819
<font color="#CCCCCC">1 transpose where s i was the share and</font>

273
00:12:42,230 --> 00:12:46,290
you can<font color="#CCCCCC"> define final decryption as</font>

274
00:12:44,819 --> 00:12:48,899
lambda linear combination of these

275
00:12:46,290 --> 00:12:50,910
<font color="#E5E5E5">partial decryptions and note that</font><font color="#CCCCCC"> when</font>

276
00:12:48,899 --> 00:12:53,970
you simplify<font color="#CCCCCC"> it you</font><font color="#E5E5E5"> just get s</font><font color="#CCCCCC"> times C 3</font>

277
00:12:50,910 --> 00:12:57,300
<font color="#E5E5E5">times u 0 1 transpose and</font><font color="#CCCCCC"> you just just</font>

278
00:12:53,970 --> 00:12:59,459
get and<font color="#E5E5E5"> M times Q by 2 plus noise it</font>

279
00:12:57,300 --> 00:13:02,849
seems like we are fine<font color="#E5E5E5"> we are good here</font>

280
00:12:59,459 --> 00:13:04,829
we get correctness but now we<font color="#CCCCCC"> note that</font>

281
00:13:02,850 --> 00:13:07,559
<font color="#CCCCCC">I fetch a decryption should just reveal</font>

282
00:13:04,829 --> 00:13:09,420
<font color="#CCCCCC">then message and nothing more in fact</font>

283
00:13:07,559 --> 00:13:14,699
this revealing this noise turns out to

284
00:13:09,420 --> 00:13:17,699
<font color="#CCCCCC">be fatal</font><font color="#E5E5E5"> and it just leads to attacks so</font>

285
00:13:14,699 --> 00:13:20,758
how do we hide that<font color="#E5E5E5"> fhe noise the idea</font>

286
00:13:17,699 --> 00:13:22,109
is that<font color="#E5E5E5"> what we can do is perturb these</font>

287
00:13:20,759 --> 00:13:23,910
partial decryptions

288
00:13:22,110 --> 00:13:27,389
with some further<font color="#E5E5E5"> noise in a hope that</font>

289
00:13:23,910 --> 00:13:29,069
<font color="#E5E5E5">it will hide the fhe noise so now we can</font>

290
00:13:27,389 --> 00:13:31,519
define<font color="#E5E5E5"> final decryption as just lambda</font>

291
00:13:29,069 --> 00:13:35,670
linear combinations of these

292
00:13:31,519 --> 00:13:38,399
<font color="#E5E5E5">these partial decryptions but when you</font>

293
00:13:35,670 --> 00:13:41,160
evaluate<font color="#E5E5E5"> it further what you get is s</font>

294
00:13:38,399 --> 00:13:45,629
<font color="#CCCCCC">times C D times 0 0 1 transpose plus a</font>

295
00:13:41,160 --> 00:13:47,569
linear combination of noise<font color="#E5E5E5"> but but now</font>

296
00:13:45,629 --> 00:13:51,000
we run into correctness issues because

297
00:13:47,569 --> 00:13:53,069
this lambda<font color="#E5E5E5"> combination of noise is just</font>

298
00:13:51,000 --> 00:13:56,540
<font color="#E5E5E5">too big because these</font><font color="#CCCCCC"> lagrange</font>

299
00:13:53,069 --> 00:13:56,540
coefficients can<font color="#E5E5E5"> be huge</font>

300
00:13:56,899 --> 00:14:07,649
so correctness is lost now we<font color="#CCCCCC"> ask how do</font>

301
00:14:02,759 --> 00:14:10,379
we fix this noise<font color="#E5E5E5"> blow-up issue and how</font>

302
00:14:07,649 --> 00:14:12,449
can we proceed<font color="#E5E5E5"> about this by defining</font>

303
00:14:10,379 --> 00:14:14,579
new linear secret sharing scheme with

304
00:14:12,449 --> 00:14:16,500
<font color="#CCCCCC">lone arm requests</font><font color="#E5E5E5"> reconstruction</font>

305
00:14:14,579 --> 00:14:19,349
coefficients<font color="#E5E5E5"> so there were two ways of</font>

306
00:14:16,500 --> 00:14:21,810
of there are<font color="#E5E5E5"> two ways</font><font color="#CCCCCC"> in which we</font>

307
00:14:19,350 --> 00:14:23,610
address<font color="#E5E5E5"> this issue the first is by</font>

308
00:14:21,810 --> 00:14:25,050
<font color="#E5E5E5">giving a more</font><font color="#CCCCCC"> general-purpose secret</font>

309
00:14:23,610 --> 00:14:27,360
sharing scheme which suppose of it

310
00:14:25,050 --> 00:14:31,620
supports<font color="#CCCCCC"> broader access patterns and the</font>

311
00:14:27,360 --> 00:14:34,139
second is we<font color="#E5E5E5"> give a</font><font color="#CCCCCC"> more</font><font color="#E5E5E5"> direct</font>

312
00:14:31,620 --> 00:14:36,500
modification of<font color="#CCCCCC"> Shamir secrets</font><font color="#E5E5E5"> sharing</font>

313
00:14:34,139 --> 00:14:39,810
and this leads to<font color="#E5E5E5"> more efficient scheme</font>

314
00:14:36,500 --> 00:14:42,329
with shorter keys<font color="#E5E5E5"> but slightly larger</font>

315
00:14:39,810 --> 00:14:45,119
ciphertext let me just tell<font color="#CCCCCC"> you more</font>

316
00:14:42,329 --> 00:14:47,279
about<font color="#CCCCCC"> our first</font><font color="#E5E5E5"> approach which is just</font>

317
00:14:45,120 --> 00:14:49,560
constructing a new<font color="#E5E5E5"> linear secret sharing</font>

318
00:14:47,279 --> 00:14:52,529
scheme with<font color="#E5E5E5"> Luna reconstruction</font>

319
00:14:49,560 --> 00:14:54,209
coefficients so let me recall what

320
00:14:52,529 --> 00:14:56,579
linear secret sharing scheme is a linear

321
00:14:54,209 --> 00:14:59,579
secret sharing scheme consists of

322
00:14:56,579 --> 00:15:03,209
following algorithms you can<font color="#E5E5E5"> share any</font>

323
00:14:59,579 --> 00:15:06,540
secret<font color="#CCCCCC"> K</font><font color="#E5E5E5"> and using any access structure</font>

324
00:15:03,209 --> 00:15:09,599
to to give out any shares and then<font color="#E5E5E5"> you</font>

325
00:15:06,540 --> 00:15:12,899
can combine a set of<font color="#E5E5E5"> these shares as</font>

326
00:15:09,600 --> 00:15:15,569
follows<font color="#E5E5E5"> if the set s is qualified then</font>

327
00:15:12,899 --> 00:15:16,889
then there<font color="#E5E5E5"> will exist some computable if</font>

328
00:15:15,569 --> 00:15:19,410
<font color="#E5E5E5">we efficiently computable the</font>

329
00:15:16,889 --> 00:15:21,899
<font color="#E5E5E5">coefficient C is such that our secret is</font>

330
00:15:19,410 --> 00:15:27,029
just<font color="#E5E5E5"> C linear combination of these</font>

331
00:15:21,899 --> 00:15:30,000
shares and we<font color="#CCCCCC"> now we define</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> 0</font>

332
00:15:27,029 --> 00:15:32,100
analysis as a class of linear sacred

333
00:15:30,000 --> 00:15:36,839
sharing schemes<font color="#CCCCCC"> where the reconstruction</font>

334
00:15:32,100 --> 00:15:40,800
<font color="#CCCCCC">coefficients are always binary one might</font>

335
00:15:36,839 --> 00:15:43,529
<font color="#E5E5E5">ask how expressive is this 0 1</font><font color="#CCCCCC"> LS</font><font color="#E5E5E5"> it</font>

336
00:15:40,800 --> 00:15:44,760
turns out it<font color="#E5E5E5"> at least captures the class</font>

337
00:15:43,529 --> 00:15:47,520
of monotone boolean

338
00:15:44,760 --> 00:15:49,860
<font color="#CCCCCC">Milas</font><font color="#E5E5E5"> so let me just take an</font><font color="#CCCCCC"> example of</font>

339
00:15:47,520 --> 00:15:53,010
this circuit<font color="#E5E5E5"> suppose I wanted to secret</font>

340
00:15:49,860 --> 00:15:57,660
share the secret K sub first gate is<font color="#CCCCCC"> an</font>

341
00:15:53,010 --> 00:15:59,730
<font color="#E5E5E5">gate and I want that I want that case</font>

342
00:15:57,660 --> 00:16:01,920
should<font color="#CCCCCC"> B be reconstructed</font><font color="#E5E5E5"> only if you</font>

343
00:15:59,730 --> 00:16:04,170
have shares<font color="#CCCCCC"> corresponding to</font><font color="#E5E5E5"> both these</font>

344
00:16:01,920 --> 00:16:06,870
wires so what I<font color="#E5E5E5"> will do is assign</font><font color="#CCCCCC"> random</font>

345
00:16:04,170 --> 00:16:10,020
on one wire and<font color="#E5E5E5"> K</font><font color="#CCCCCC"> minus random</font><font color="#E5E5E5"> or the on</font>

346
00:16:06,870 --> 00:16:12,990
the other next gate we encounter is the

347
00:16:10,020 --> 00:16:15,750
<font color="#CCCCCC">or gate</font><font color="#E5E5E5"> so here I want that r1</font><font color="#CCCCCC"> should</font><font color="#E5E5E5"> be</font>

348
00:16:12,990 --> 00:16:17,040
possible<font color="#E5E5E5"> to be reconstructed as long as</font>

349
00:16:15,750 --> 00:16:19,650
you know<font color="#E5E5E5"> shears corresponding to either</font>

350
00:16:17,040 --> 00:16:21,839
of<font color="#E5E5E5"> them so I</font><font color="#CCCCCC"> will assign r1 on both the</font>

351
00:16:19,650 --> 00:16:23,340
wires<font color="#CCCCCC"> and similarly</font><font color="#E5E5E5"> I can also handle</font>

352
00:16:21,840 --> 00:16:25,950
<font color="#E5E5E5">the third and gate by assigning random</font>

353
00:16:23,340 --> 00:16:28,620
on one wire K minus r1 minus or that

354
00:16:25,950 --> 00:16:31,920
random on the other way so this<font color="#E5E5E5"> way we</font>

355
00:16:28,620 --> 00:16:34,440
know<font color="#CCCCCC"> for shares and note that now</font><font color="#E5E5E5"> secret</font>

356
00:16:31,920 --> 00:16:39,510
is<font color="#CCCCCC"> just addition</font><font color="#E5E5E5"> of some subset of the</font>

357
00:16:34,440 --> 00:16:42,270
shares so to answer the question<font color="#CCCCCC"> zero of</font>

358
00:16:39,510 --> 00:16:44,340
analysis<font color="#E5E5E5"> at least contains class of</font>

359
00:16:42,270 --> 00:16:48,390
monotone boolean<font color="#E5E5E5"> formers and it</font>

360
00:16:44,340 --> 00:16:50,220
<font color="#CCCCCC">unveiling</font><font color="#E5E5E5"> in 84 showed that these</font>

361
00:16:48,390 --> 00:16:53,460
<font color="#E5E5E5">threshold functions can</font><font color="#CCCCCC"> be expressed by</font>

362
00:16:50,220 --> 00:16:56,940
<font color="#CCCCCC">a monotone boolean formula</font><font color="#E5E5E5"> and again I</font>

363
00:16:53,460 --> 00:16:59,430
am reminding<font color="#CCCCCC"> you that zero analysis</font><font color="#E5E5E5"> the</font>

364
00:16:56,940 --> 00:17:03,600
<font color="#E5E5E5">reconstruction coefficients are either 0</font>

365
00:16:59,430 --> 00:17:06,419
<font color="#E5E5E5">or 1</font><font color="#CCCCCC"> let's</font><font color="#E5E5E5"> just now use this idea</font><font color="#CCCCCC"> to fix</font>

366
00:17:03,600 --> 00:17:08,849
our problem so we had to find partial

367
00:17:06,420 --> 00:17:11,339
decryptions as si times<font color="#E5E5E5"> 80 times 0</font><font color="#CCCCCC"> 0 1</font>

368
00:17:08,849 --> 00:17:13,760
transpose plus noise<font color="#E5E5E5"> and final</font>

369
00:17:11,339 --> 00:17:15,990
decryption as lambda linear combinations

370
00:17:13,760 --> 00:17:19,980
so now when you evaluate<font color="#E5E5E5"> this you get</font>

371
00:17:15,990 --> 00:17:22,290
noise<font color="#E5E5E5"> I the error term as noise times</font>

372
00:17:19,980 --> 00:17:25,530
lambda<font color="#E5E5E5"> I but since these lambdas</font><font color="#CCCCCC"> are</font>

373
00:17:22,290 --> 00:17:28,349
small you<font color="#CCCCCC"> get</font><font color="#E5E5E5"> M</font><font color="#CCCCCC"> times Q by 2 plus noise</font>

374
00:17:25,530 --> 00:17:31,830
the small so<font color="#E5E5E5"> this does fix correctness</font>

375
00:17:28,349 --> 00:17:33,570
issue issue<font color="#CCCCCC"> however it needs careful</font>

376
00:17:31,830 --> 00:17:35,429
<font color="#E5E5E5">security analysis which I am NOT going</font>

377
00:17:33,570 --> 00:17:39,689
to talk about and I will refer you<font color="#E5E5E5"> to</font>

378
00:17:35,430 --> 00:17:41,160
the paper for details now let<font color="#E5E5E5"> me just</font>

379
00:17:39,690 --> 00:17:44,940
<font color="#CCCCCC">quickly</font><font color="#E5E5E5"> tell you about the more direct</font>

380
00:17:41,160 --> 00:17:46,560
approach that we pursue so this is known

381
00:17:44,940 --> 00:17:49,650
as the clearing the<font color="#E5E5E5"> denominators trick</font>

382
00:17:46,560 --> 00:17:52,080
<font color="#E5E5E5">and the basic idea is following if you</font>

383
00:17:49,650 --> 00:17:53,490
have any<font color="#CCCCCC"> lagrange coefficient any</font>

384
00:17:52,080 --> 00:17:56,280
lagrange coefficient lambda is just

385
00:17:53,490 --> 00:17:58,490
ratio of<font color="#E5E5E5"> products of bounded integers</font>

386
00:17:56,280 --> 00:18:00,770
and<font color="#CCCCCC"> you</font><font color="#E5E5E5"> compute this over Zeke</font>

387
00:17:58,490 --> 00:18:03,140
so when you multiply this<font color="#CCCCCC"> LaGrant</font>

388
00:18:00,770 --> 00:18:04,820
coefficient with n factorial<font color="#E5E5E5"> due to some</font>

389
00:18:03,140 --> 00:18:07,130
cancellations what you get is a bounded

390
00:18:04,820 --> 00:18:10,610
integer and you can show the same<font color="#CCCCCC"> thing</font>

391
00:18:07,130 --> 00:18:13,370
<font color="#CCCCCC">for</font><font color="#E5E5E5"> lambda inverse so this is just the</font>

392
00:18:10,610 --> 00:18:16,010
basic idea and we use<font color="#CCCCCC"> it</font><font color="#E5E5E5"> to build the</font>

393
00:18:13,370 --> 00:18:20,090
scheme and I will again refer you to the

394
00:18:16,010 --> 00:18:22,520
paper for details here is a short

395
00:18:20,090 --> 00:18:24,740
comparison<font color="#E5E5E5"> of the two schemes so for the</font>

396
00:18:22,520 --> 00:18:27,770
first game<font color="#CCCCCC"> talks</font><font color="#E5E5E5"> about</font><font color="#CCCCCC"> zero analysis</font>

397
00:18:24,740 --> 00:18:29,180
here the<font color="#CCCCCC"> ciphertext size sizes</font><font color="#E5E5E5"> in poly</font>

398
00:18:27,770 --> 00:18:30,980
lambda<font color="#E5E5E5"> or in D where lambda is</font><font color="#CCCCCC"> a</font>

399
00:18:29,180 --> 00:18:34,040
security parameter depth D is the depth

400
00:18:30,980 --> 00:18:38,300
size of the<font color="#CCCCCC"> park</font><font color="#E5E5E5"> key and the partial</font>

401
00:18:34,040 --> 00:18:41,930
decryption is n to the<font color="#CCCCCC"> 4.2</font><font color="#E5E5E5"> n is the</font>

402
00:18:38,300 --> 00:18:43,520
number of parties and poly lambda D but

403
00:18:41,930 --> 00:18:46,070
again this is only for threshold access

404
00:18:43,520 --> 00:18:48,800
structures<font color="#CCCCCC"> this</font><font color="#E5E5E5"> scheme is more general</font>

405
00:18:46,070 --> 00:18:52,639
<font color="#E5E5E5">and for smaller and other acts of</font>

406
00:18:48,800 --> 00:18:55,610
structures it might even be smaller the

407
00:18:52,640 --> 00:18:57,740
second scheme the size of the<font color="#E5E5E5"> ciphertext</font>

408
00:18:55,610 --> 00:19:00,409
<font color="#E5E5E5">and the public key is n times poly</font>

409
00:18:57,740 --> 00:19:02,480
lambda<font color="#E5E5E5"> D the size of the key and partial</font>

410
00:19:00,410 --> 00:19:04,430
<font color="#E5E5E5">decryption is also n times poly family</font>

411
00:19:02,480 --> 00:19:09,350
<font color="#E5E5E5">however</font><font color="#CCCCCC"> this works for only</font><font color="#E5E5E5"> threshold</font>

412
00:19:04,430 --> 00:19:11,660
access structures now given this

413
00:19:09,350 --> 00:19:13,939
threshold fhe how can we address this

414
00:19:11,660 --> 00:19:16,900
issue<font color="#CCCCCC"> of</font><font color="#E5E5E5"> special signature for example</font>

415
00:19:13,940 --> 00:19:20,390
now<font color="#CCCCCC"> suppose to anyone's to sign he has</font>

416
00:19:16,900 --> 00:19:23,060
he has<font color="#E5E5E5"> he has a set up for the threshold</font>

417
00:19:20,390 --> 00:19:27,620
<font color="#E5E5E5">fhe he can give a secret keys to the</font>

418
00:19:23,060 --> 00:19:31,250
server<font color="#E5E5E5"> and he gives us encryption of his</font>

419
00:19:27,620 --> 00:19:33,110
signing key to all<font color="#CCCCCC"> these servers now</font>

420
00:19:31,250 --> 00:19:34,340
these servers can using the<font color="#E5E5E5"> encryption</font>

421
00:19:33,110 --> 00:19:36,199
of the<font color="#E5E5E5"> signing key can compute an</font>

422
00:19:34,340 --> 00:19:38,689
encryption of<font color="#E5E5E5"> the signature on the</font>

423
00:19:36,200 --> 00:19:40,700
message<font color="#E5E5E5"> that he wants to compute and</font>

424
00:19:38,690 --> 00:19:42,680
<font color="#CCCCCC">then once you have</font><font color="#E5E5E5"> these encryption</font>

425
00:19:40,700 --> 00:19:44,150
<font color="#E5E5E5">these these servers can provide the</font>

426
00:19:42,680 --> 00:19:47,720
partial decryption<font color="#E5E5E5"> of these this</font>

427
00:19:44,150 --> 00:19:51,650
encryption<font color="#E5E5E5"> and then Tony can combine to</font>

428
00:19:47,720 --> 00:19:53,960
get<font color="#CCCCCC"> a signature so this is this exactly</font>

429
00:19:51,650 --> 00:19:55,430
<font color="#E5E5E5">is the idea in fact we build under the</font>

430
00:19:53,960 --> 00:19:57,440
<font color="#E5E5E5">notion of universal threshold</font><font color="#CCCCCC"> Iser</font>

431
00:19:55,430 --> 00:19:59,630
by capturing<font color="#E5E5E5"> this idea however</font><font color="#CCCCCC"> there are</font>

432
00:19:57,440 --> 00:20:01,310
more details and about robustness<font color="#E5E5E5"> and</font>

433
00:19:59,630 --> 00:20:04,910
<font color="#E5E5E5">all those things which I am NOT going to</font>

434
00:20:01,310 --> 00:20:06,620
<font color="#E5E5E5">cover in this talk</font><font color="#CCCCCC"> so let me just tell</font>

435
00:20:04,910 --> 00:20:10,160
you<font color="#CCCCCC"> that</font><font color="#E5E5E5"> this scheme is like directly</font>

436
00:20:06,620 --> 00:20:11,570
using threshold fhe<font color="#E5E5E5"> using the idea that</font>

437
00:20:10,160 --> 00:20:15,160
<font color="#E5E5E5">I just described</font>

438
00:20:11,570 --> 00:20:18,710
and I will skip the<font color="#CCCCCC"> details</font>

439
00:20:15,160 --> 00:20:20,510
let me summarize our<font color="#CCCCCC"> results again</font><font color="#E5E5E5"> so we</font>

440
00:20:18,710 --> 00:20:21,860
construct her shoulder<font color="#CCCCCC"> fetch e we</font>

441
00:20:20,510 --> 00:20:24,110
formalize the notion of<font color="#E5E5E5"> universal</font>

442
00:20:21,860 --> 00:20:25,750
<font color="#E5E5E5">visualizer then we show that</font><font color="#CCCCCC"> Universal</font>

443
00:20:24,110 --> 00:20:28,820
visualizer is<font color="#CCCCCC"> the general tool for</font>

444
00:20:25,750 --> 00:20:31,130
constructing sensual<font color="#E5E5E5"> cryptosystems then</font>

445
00:20:28,820 --> 00:20:34,060
we construct<font color="#E5E5E5"> a universal visualizer from</font>

446
00:20:31,130 --> 00:20:36,050
threshold effigy<font color="#E5E5E5"> then this gives rise</font><font color="#CCCCCC"> to</font>

447
00:20:34,060 --> 00:20:38,330
various sorts of<font color="#CCCCCC"> threshold</font><font color="#E5E5E5"> crypto</font>

448
00:20:36,050 --> 00:20:40,070
<font color="#E5E5E5">systems and many of them were</font><font color="#CCCCCC"> not known</font>

449
00:20:38,330 --> 00:20:45,350
to<font color="#CCCCCC"> construct from lattices before our</font>

450
00:20:40,070 --> 00:20:46,760
work also although<font color="#E5E5E5"> like we use very</font>

451
00:20:45,350 --> 00:20:50,230
<font color="#E5E5E5">simple techniques but these techniques</font>

452
00:20:46,760 --> 00:20:54,740
have<font color="#E5E5E5"> also found use later on in in</font>

453
00:20:50,230 --> 00:20:58,550
<font color="#CCCCCC">follow-up works so first</font><font color="#E5E5E5"> I will talk</font>

454
00:20:54,740 --> 00:21:03,770
<font color="#CCCCCC">about this notion of lazy</font><font color="#E5E5E5"> NPC this is an</font>

455
00:20:58,550 --> 00:21:06,379
<font color="#CCCCCC">NPC model where we're honest parties can</font>

456
00:21:03,770 --> 00:21:07,940
just go<font color="#E5E5E5"> to sleep so they might they</font>

457
00:21:06,380 --> 00:21:09,890
<font color="#CCCCCC">might be limited in computing power they</font>

458
00:21:07,940 --> 00:21:11,540
might<font color="#CCCCCC"> lose connections</font><font color="#E5E5E5"> and for all sorts</font>

459
00:21:09,890 --> 00:21:14,020
of reason they can just go to<font color="#E5E5E5"> sleep</font>

460
00:21:11,540 --> 00:21:16,520
and they are treated<font color="#CCCCCC"> differently from</font>

461
00:21:14,020 --> 00:21:18,500
corrupted parties in this setting we

462
00:21:16,520 --> 00:21:22,129
would want some kind<font color="#E5E5E5"> of correctness as</font>

463
00:21:18,500 --> 00:21:26,000
well as security requirements it turns

464
00:21:22,130 --> 00:21:28,070
out that this<font color="#E5E5E5"> model implies has a</font>

465
00:21:26,000 --> 00:21:30,830
theoretical<font color="#CCCCCC"> odd outcome and the outcome</font>

466
00:21:28,070 --> 00:21:33,649
is<font color="#CCCCCC"> that it leads to first NPC with</font>

467
00:21:30,830 --> 00:21:36,350
guaranteed output delivery in standard

468
00:21:33,650 --> 00:21:38,780
model in<font color="#E5E5E5"> three rounds and this work is</font>

469
00:21:36,350 --> 00:21:41,659
<font color="#CCCCCC">concurrent</font><font color="#E5E5E5"> with another work of unintel</font>

470
00:21:38,780 --> 00:21:43,190
all however their work<font color="#CCCCCC"> the focus is</font>

471
00:21:41,660 --> 00:21:44,420
completely<font color="#CCCCCC"> different and their</font>

472
00:21:43,190 --> 00:21:49,970
assumptions are also completely

473
00:21:44,420 --> 00:21:53,660
<font color="#E5E5E5">different also threshold fhe as such has</font>

474
00:21:49,970 --> 00:21:56,570
also found use<font color="#CCCCCC"> in things like</font><font color="#E5E5E5"> amplifying</font>

475
00:21:53,660 --> 00:21:59,120
security in particular<font color="#E5E5E5"> interestingly it</font>

476
00:21:56,570 --> 00:22:02,600
<font color="#CCCCCC">turns out that using threshold fhe you</font>

477
00:21:59,120 --> 00:22:05,600
can given<font color="#E5E5E5"> any fer</font><font color="#CCCCCC"> i/o candidate with</font>

478
00:22:02,600 --> 00:22:07,969
weak<font color="#CCCCCC"> security</font><font color="#E5E5E5"> you can output a fully</font>

479
00:22:05,600 --> 00:22:14,629
secure candidate and this<font color="#E5E5E5"> idea appeared</font>

480
00:22:07,970 --> 00:22:18,260
<font color="#CCCCCC">recently in in a work ok</font><font color="#E5E5E5"> so let me just</font>

481
00:22:14,630 --> 00:22:23,570
end this with some description<font color="#E5E5E5"> of open</font>

482
00:22:18,260 --> 00:22:25,220
<font color="#E5E5E5">problems</font><font color="#CCCCCC"> we use fhe</font><font color="#E5E5E5"> as a tool to general</font>

483
00:22:23,570 --> 00:22:27,799
<font color="#E5E5E5">for to build this you</font>

484
00:22:25,220 --> 00:22:31,460
a threshold<font color="#CCCCCC"> Iser but can we build this</font>

485
00:22:27,799 --> 00:22:33,520
<font color="#CCCCCC">Universal threshold Iser from from not</font>

486
00:22:31,460 --> 00:22:35,720
relying on<font color="#E5E5E5"> the heavy machinery of fhe</font>

487
00:22:33,520 --> 00:22:38,240
<font color="#E5E5E5">another way to ask is is can we give a</font>

488
00:22:35,720 --> 00:22:42,730
more efficient construction<font color="#E5E5E5"> maybe for</font>

489
00:22:38,240 --> 00:22:42,730
more simple classes of functionalities

490
00:22:43,480 --> 00:22:48,470
are there more applications<font color="#E5E5E5"> of this</font>

491
00:22:45,950 --> 00:22:52,159
<font color="#CCCCCC">Thresher the threshold</font><font color="#E5E5E5"> fhe and universal</font>

492
00:22:48,470 --> 00:22:53,539
<font color="#CCCCCC">Thresh Eliezer</font><font color="#E5E5E5"> and and another</font>

493
00:22:52,159 --> 00:22:57,020
<font color="#E5E5E5">interesting question is can</font><font color="#CCCCCC"> we get</font>

494
00:22:53,539 --> 00:22:59,179
better assumptions so in<font color="#E5E5E5"> particular can</font>

495
00:22:57,020 --> 00:23:03,020
we get this from<font color="#CCCCCC"> lwe with polynomial</font>

496
00:22:59,179 --> 00:23:07,340
approximation factor<font color="#E5E5E5"> so with this I</font>

497
00:23:03,020 --> 00:23:10,840
would<font color="#CCCCCC"> like</font><font color="#E5E5E5"> to just conclude and if you</font>

498
00:23:07,340 --> 00:23:10,840
want to<font color="#E5E5E5"> ask questions just feel free</font>

499
00:23:11,420 --> 00:23:17,519
[Applause]

