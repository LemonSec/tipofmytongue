1
00:00:05,069 --> 00:00:10,930
okay do you<font color="#CCCCCC"> hear</font><font color="#E5E5E5"> me I'm going to talk</font>

2
00:00:08,710 --> 00:00:14,879
<font color="#E5E5E5">about Ryan around</font><font color="#CCCCCC"> optimal secure</font>

3
00:00:10,930 --> 00:00:14,879
<font color="#CCCCCC">multiply the</font><font color="#E5E5E5"> computation without setup</font>

4
00:00:15,119 --> 00:00:18,750
<font color="#E5E5E5">and in our setting the adversary is</font>

5
00:00:17,500 --> 00:00:22,990
going<font color="#CCCCCC"> to be polynomially bounded</font>

6
00:00:18,750 --> 00:00:24,460
<font color="#E5E5E5">malicious and static the main question</font>

7
00:00:22,990 --> 00:00:26,470
<font color="#E5E5E5">we are going to address in this talk</font><font color="#CCCCCC"> is</font>

8
00:00:24,460 --> 00:00:29,380
whether we<font color="#E5E5E5"> can construct around optimal</font>

9
00:00:26,470 --> 00:00:31,479
<font color="#E5E5E5">NPC protocols but what are the rules of</font>

10
00:00:29,380 --> 00:00:34,329
the game<font color="#CCCCCC"> first</font><font color="#E5E5E5"> we don't want to assume</font>

11
00:00:31,480 --> 00:00:36,579
any trusted<font color="#CCCCCC"> setup we want</font><font color="#E5E5E5"> to accommodate</font>

12
00:00:34,329 --> 00:00:38,170
malicious<font color="#E5E5E5"> adversaries</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> also we want</font>

13
00:00:36,579 --> 00:00:41,110
<font color="#E5E5E5">to build protocols understand the</font>

14
00:00:38,170 --> 00:00:44,980
polynomial time assumptions but what is

15
00:00:41,110 --> 00:00:47,410
the optimal<font color="#CCCCCC"> grant complexity Garga</font><font color="#E5E5E5"> tall</font>

16
00:00:44,980 --> 00:00:50,160
gave the lower bound of four<font color="#E5E5E5"> rounds</font>

17
00:00:47,410 --> 00:00:53,529
restricted to black<font color="#E5E5E5"> box emulation and</font>

18
00:00:50,160 --> 00:00:55,209
that said we're<font color="#E5E5E5"> going to ask the</font>

19
00:00:53,530 --> 00:00:58,830
question if<font color="#CCCCCC"> we can</font><font color="#E5E5E5"> protect for around</font>

20
00:00:55,210 --> 00:01:01,330
<font color="#E5E5E5">MPC protocols under all these conditions</font>

21
00:00:58,830 --> 00:01:02,980
the first<font color="#E5E5E5"> work in</font><font color="#CCCCCC"> the space has lived</font>

22
00:01:01,330 --> 00:01:05,789
<font color="#E5E5E5">round optimal complexity</font><font color="#CCCCCC"> that garage</font>

23
00:01:02,980 --> 00:01:08,500
with the depth of the<font color="#CCCCCC"> evaluated circuit</font>

24
00:01:05,790 --> 00:01:11,289
<font color="#E5E5E5">then the work of</font><font color="#CCCCCC"> be very tall introduce</font>

25
00:01:08,500 --> 00:01:12,700
the first course<font color="#E5E5E5"> and run protocols for</font>

26
00:01:11,289 --> 00:01:15,579
the restricted<font color="#E5E5E5"> setting of honest</font>

27
00:01:12,700 --> 00:01:17,170
majority<font color="#E5E5E5"> then we had the first course on</font>

28
00:01:15,579 --> 00:01:23,109
the road protocols in<font color="#E5E5E5"> the dishonest</font>

29
00:01:17,170 --> 00:01:24,670
majority setting and very<font color="#E5E5E5"> recently we</font>

30
00:01:23,109 --> 00:01:28,179
<font color="#CCCCCC">also had like the first six sound</font>

31
00:01:24,670 --> 00:01:32,950
protocols and also got<font color="#CCCCCC"> also that</font><font color="#E5E5E5"> they</font>

32
00:01:28,179 --> 00:01:36,280
learn<font color="#E5E5E5"> bout is</font><font color="#CCCCCC"> four and we also have five</font>

33
00:01:32,950 --> 00:01:38,710
round protocols<font color="#E5E5E5"> and foreign protocols so</font>

34
00:01:36,280 --> 00:01:40,179
there is a<font color="#CCCCCC"> cat</font><font color="#E5E5E5"> so this foreign protocols</font>

35
00:01:38,710 --> 00:01:43,359
are not based on polynomial time

36
00:01:40,179 --> 00:01:45,159
assumptions<font color="#E5E5E5"> and in this talk we're going</font>

37
00:01:43,359 --> 00:01:46,689
to<font color="#E5E5E5"> construct the first four around</font>

38
00:01:45,159 --> 00:01:51,850
embassy protocol<font color="#E5E5E5"> under all these</font>

39
00:01:46,689 --> 00:01:53,288
conditions here our results assuming

40
00:01:51,850 --> 00:01:55,208
injective one-way functions

41
00:01:53,289 --> 00:01:57,639
<font color="#CCCCCC">Zapp's which are two round</font><font color="#E5E5E5"> witness</font>

42
00:01:55,209 --> 00:01:59,920
indistinguishable proofs and additive

43
00:01:57,639 --> 00:02:01,810
homomorphic encryption<font color="#CCCCCC"> we construct</font><font color="#E5E5E5"> for</font>

44
00:01:59,920 --> 00:02:04,810
<font color="#E5E5E5">around malicious embassy protocols and</font>

45
00:02:01,810 --> 00:02:07,899
<font color="#CCCCCC">we can instantiate</font><font color="#E5E5E5"> or disparities from</font>

46
00:02:04,810 --> 00:02:11,740
enhanced<font color="#CCCCCC"> Raptor permutations and</font><font color="#E5E5E5"> lwa or</font>

47
00:02:07,899 --> 00:02:15,340
QR<font color="#CCCCCC"> or dd8</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> DCR or from the single</font>

48
00:02:11,740 --> 00:02:16,780
assumption of QR our work does<font color="#CCCCCC"> not send</font>

49
00:02:15,340 --> 00:02:17,660
a lot in the space there's also the

50
00:02:16,780 --> 00:02:20,990
concurrent

51
00:02:17,660 --> 00:02:22,340
but you<font color="#CCCCCC"> just saw and there they assumed</font>

52
00:02:20,990 --> 00:02:24,620
<font color="#E5E5E5">injective one-way functions</font><font color="#CCCCCC"> thence</font>

53
00:02:22,340 --> 00:02:26,690
<font color="#CCCCCC">cryptosystems</font><font color="#E5E5E5"> into round</font><font color="#CCCCCC"> ot and then can</font>

54
00:02:24,620 --> 00:02:31,580
instantiate<font color="#E5E5E5"> oldest primitives from</font><font color="#CCCCCC"> QR</font>

55
00:02:26,690 --> 00:02:33,230
deviates this year and<font color="#CCCCCC"> lwe so a</font><font color="#E5E5E5"> common</font>

56
00:02:31,580 --> 00:02:35,840
paradigm<font color="#CCCCCC"> that we use to achieve</font>

57
00:02:33,230 --> 00:02:38,179
<font color="#CCCCCC">malicious security is the gym W paradigm</font>

58
00:02:35,840 --> 00:02:40,940
<font color="#E5E5E5">so in this paradigm we start with the</font>

59
00:02:38,180 --> 00:02:43,760
<font color="#CCCCCC">week variant of an MPC protocol</font><font color="#E5E5E5"> like a</font>

60
00:02:40,940 --> 00:02:46,280
semi malicious protocol and then we use

61
00:02:43,760 --> 00:02:48,890
zero knowledge<font color="#E5E5E5"> to lift this protocol</font><font color="#CCCCCC"> to</font>

62
00:02:46,280 --> 00:02:50,870
malicious security so there are works

63
00:02:48,890 --> 00:02:53,119
that<font color="#CCCCCC"> they</font><font color="#E5E5E5"> followed this approach and</font>

64
00:02:50,870 --> 00:02:55,700
they use the<font color="#E5E5E5"> for around non</font><font color="#CCCCCC"> malleable</font>

65
00:02:53,120 --> 00:02:57,170
zero knowledge proof to achieve that<font color="#E5E5E5"> so</font>

66
00:02:55,700 --> 00:02:58,940
they built foreign protocols and then

67
00:02:57,170 --> 00:03:01,459
they saw that it's enough to prove

68
00:02:58,940 --> 00:03:05,240
correctness of the third and the fourth

69
00:03:01,460 --> 00:03:08,390
round<font color="#CCCCCC"> of their protocol</font><font color="#E5E5E5"> so they plug in</font>

70
00:03:05,240 --> 00:03:09,830
a<font color="#E5E5E5"> foreign type zero knowledge to prove</font>

71
00:03:08,390 --> 00:03:11,299
the correctness of a third round<font color="#E5E5E5"> and a</font>

72
00:03:09,830 --> 00:03:14,060
<font color="#CCCCCC">four-round zk to prove the correctness</font>

73
00:03:11,300 --> 00:03:16,220
of the fourth round and even<font color="#CCCCCC"> if we have</font>

74
00:03:14,060 --> 00:03:17,450
a two<font color="#E5E5E5"> round protocol again we need</font><font color="#CCCCCC"> to</font>

75
00:03:16,220 --> 00:03:18,890
prove<font color="#E5E5E5"> the correctness of the first in</font>

76
00:03:17,450 --> 00:03:22,609
the second round so we<font color="#E5E5E5"> again have a</font>

77
00:03:18,890 --> 00:03:26,570
<font color="#CCCCCC">forum protocol</font><font color="#E5E5E5"> so can we do better than</font>

78
00:03:22,610 --> 00:03:28,850
that<font color="#E5E5E5"> so their works that in fact they</font>

79
00:03:26,570 --> 00:03:30,500
<font color="#E5E5E5">replaced the</font><font color="#CCCCCC"> four hundred zero knowledge</font>

80
00:03:28,850 --> 00:03:34,940
<font color="#CCCCCC">proof with three</font><font color="#E5E5E5"> rounds you know</font><font color="#CCCCCC"> it's</font>

81
00:03:30,500 --> 00:03:36,410
proofs and then they end up<font color="#CCCCCC"> with four</font>

82
00:03:34,940 --> 00:03:39,560
<font color="#CCCCCC">run protocols if we have a</font><font color="#E5E5E5"> three round</font>

83
00:03:36,410 --> 00:03:41,240
zero<font color="#CCCCCC"> knowledge but the price they paid</font>

84
00:03:39,560 --> 00:03:44,870
to reduce from four rounds to<font color="#CCCCCC"> three</font>

85
00:03:41,240 --> 00:03:46,900
rounds<font color="#E5E5E5"> is</font><font color="#CCCCCC"> complexly averaging</font><font color="#E5E5E5"> and then</font>

86
00:03:44,870 --> 00:03:50,510
the protocol only assumes

87
00:03:46,900 --> 00:03:52,520
<font color="#E5E5E5">sub-exponential</font><font color="#CCCCCC"> its assumptions</font><font color="#E5E5E5"> and in</font>

88
00:03:50,510 --> 00:03:54,470
fact we cannot<font color="#E5E5E5"> build a three round zero</font>

89
00:03:52,520 --> 00:03:58,820
<font color="#E5E5E5">knowledge proof like with</font><font color="#CCCCCC"> black box</font>

90
00:03:54,470 --> 00:04:00,260
<font color="#CCCCCC">emulation so in</font><font color="#E5E5E5"> our approach we</font><font color="#CCCCCC"> are</font>

91
00:03:58,820 --> 00:04:02,690
going to<font color="#E5E5E5"> replace the zero knowledge</font>

92
00:04:00,260 --> 00:04:05,450
proof with the wiki tool of witness

93
00:04:02,690 --> 00:04:07,040
indistinguishable proofs and<font color="#E5E5E5"> even if we</font>

94
00:04:05,450 --> 00:04:09,440
use<font color="#E5E5E5"> this weaker tool of witness</font>

95
00:04:07,040 --> 00:04:11,920
indistinguishable proofs<font color="#E5E5E5"> that provide</font>

96
00:04:09,440 --> 00:04:15,380
the weaker correctness guarantees

97
00:04:11,920 --> 00:04:18,048
<font color="#E5E5E5">nothing is lost</font><font color="#CCCCCC"> as long as we build the</font>

98
00:04:15,380 --> 00:04:19,730
final protocol where we give the<font color="#CCCCCC"> same</font>

99
00:04:18,048 --> 00:04:23,229
level<font color="#E5E5E5"> of security as the zero knowledge</font>

100
00:04:19,730 --> 00:04:23,230
proof<font color="#CCCCCC"> offered</font>

101
00:04:23,630 --> 00:04:27,600
this brings<font color="#CCCCCC"> me</font><font color="#E5E5E5"> to our approach so we</font>

102
00:04:25,860 --> 00:04:30,150
<font color="#E5E5E5">will build a</font><font color="#CCCCCC"> four run</font><font color="#E5E5E5"> semi</font><font color="#CCCCCC"> malicious</font>

103
00:04:27,600 --> 00:04:33,960
<font color="#CCCCCC">embassy protocol</font><font color="#E5E5E5"> and then they will use</font>

104
00:04:30,150 --> 00:04:36,508
<font color="#E5E5E5">three round</font><font color="#CCCCCC"> WI</font><font color="#E5E5E5"> proofs to prove</font>

105
00:04:33,960 --> 00:04:41,789
correctness of our third<font color="#E5E5E5"> round</font><font color="#CCCCCC"> and that</font>

106
00:04:36,509 --> 00:04:43,740
will bring us to<font color="#CCCCCC"> a foreign protocol so</font>

107
00:04:41,789 --> 00:04:46,800
<font color="#E5E5E5">following this philosophy of replacing</font>

108
00:04:43,740 --> 00:04:48,690
the<font color="#CCCCCC"> zero-knowledge</font><font color="#E5E5E5"> spruce with wi proofs</font>

109
00:04:46,800 --> 00:04:51,150
there were many<font color="#E5E5E5"> obstacles that arise and</font>

110
00:04:48,690 --> 00:04:54,419
we used one technique after<font color="#CCCCCC"> the other</font><font color="#E5E5E5"> to</font>

111
00:04:51,150 --> 00:04:57,539
overcome these difficulties<font color="#E5E5E5"> and here is</font>

112
00:04:54,419 --> 00:04:59,099
like a<font color="#CCCCCC"> one-minute elevator pitch for our</font>

113
00:04:57,539 --> 00:05:00,270
approach<font color="#E5E5E5"> suppose I'm in the elevator</font>

114
00:04:59,099 --> 00:05:05,340
<font color="#CCCCCC">with mati</font>

115
00:05:00,270 --> 00:05:07,919
<font color="#CCCCCC">and yes per so we</font><font color="#E5E5E5"> first built a same</font>

116
00:05:05,340 --> 00:05:09,659
<font color="#CCCCCC">value same PC protocol and to</font><font color="#E5E5E5"> prove the</font>

117
00:05:07,919 --> 00:05:13,080
correctness of<font color="#E5E5E5"> this protocol we don't</font>

118
00:05:09,660 --> 00:05:15,449
use<font color="#CCCCCC"> your</font><font color="#E5E5E5"> knowledge with wi proofs</font><font color="#CCCCCC"> and to</font>

119
00:05:13,080 --> 00:05:18,330
do<font color="#E5E5E5"> that we use the time-tested approach</font>

120
00:05:15,449 --> 00:05:20,430
of nor young paradigm for<font color="#E5E5E5"> those of you</font>

121
00:05:18,330 --> 00:05:25,620
<font color="#E5E5E5">that you are familiar I think what is</font>

122
00:05:20,430 --> 00:05:27,750
<font color="#E5E5E5">familiar</font><font color="#CCCCCC"> with it but doing</font><font color="#E5E5E5"> that we need</font>

123
00:05:25,620 --> 00:05:30,720
to weaken<font color="#E5E5E5"> the NP statement of the WI</font>

124
00:05:27,750 --> 00:05:32,940
proofs and to do that like the<font color="#CCCCCC"> adviser</font>

125
00:05:30,720 --> 00:05:35,520
is free to<font color="#E5E5E5"> learn some more attacks and</font>

126
00:05:32,940 --> 00:05:38,159
in<font color="#E5E5E5"> fact he came launched some additive</font>

127
00:05:35,520 --> 00:05:39,750
attacks in the protocol<font color="#E5E5E5"> and we built</font>

128
00:05:38,159 --> 00:05:43,380
some new technology to<font color="#CCCCCC"> avoid this</font>

129
00:05:39,750 --> 00:05:45,840
additive attacks<font color="#E5E5E5"> and finally we build a</font>

130
00:05:43,380 --> 00:05:48,240
non malleable<font color="#E5E5E5"> with this</font>

131
00:05:45,840 --> 00:05:49,979
indistinguishable proofs from polynomial

132
00:05:48,240 --> 00:05:53,250
time assumptions which was not known

133
00:05:49,979 --> 00:05:54,810
before so in the next<font color="#CCCCCC"> couple of slides</font>

134
00:05:53,250 --> 00:05:57,949
I'm gonna like give you give you<font color="#CCCCCC"> only</font>

135
00:05:54,810 --> 00:06:00,449
<font color="#E5E5E5">the key insights of</font><font color="#CCCCCC"> these puzzle pieces</font>

136
00:05:57,949 --> 00:06:01,830
<font color="#CCCCCC">so it's not that secure computation of</font>

137
00:06:00,449 --> 00:06:04,880
some function<font color="#CCCCCC"> reduces the secure</font>

138
00:06:01,830 --> 00:06:07,590
computation of<font color="#E5E5E5"> some randomized incurring</font>

139
00:06:04,880 --> 00:06:09,800
to achieve<font color="#CCCCCC"> a foreign protocol we need to</font>

140
00:06:07,590 --> 00:06:12,109
<font color="#E5E5E5">randomized encoding of degree three</font>

141
00:06:09,800 --> 00:06:15,979
because a randomized degree three

142
00:06:12,110 --> 00:06:21,120
<font color="#E5E5E5">encoding can be expressed as the sum of</font>

143
00:06:15,979 --> 00:06:23,219
<font color="#E5E5E5">the grade three terms and for that we</font>

144
00:06:21,120 --> 00:06:26,130
<font color="#E5E5E5">can use</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> 3 bit multiplication protocol</font>

145
00:06:23,219 --> 00:06:29,909
<font color="#E5E5E5">based on to run ot which was recently</font>

146
00:06:26,130 --> 00:06:31,409
<font color="#E5E5E5">constructed from an ant at all and what</font>

147
00:06:29,909 --> 00:06:33,960
<font color="#CCCCCC">we are going to do so to compute</font><font color="#E5E5E5"> our</font>

148
00:06:31,409 --> 00:06:38,270
function f we are going to securely

149
00:06:33,960 --> 00:06:38,270
evaluate<font color="#CCCCCC"> these three month protocols</font>

150
00:06:38,850 --> 00:06:44,160
and<font color="#E5E5E5"> we compute the sum of them and in</font>

151
00:06:40,890 --> 00:06:47,250
the fourth round<font color="#E5E5E5"> so this is going to be</font>

152
00:06:44,160 --> 00:06:49,680
our base protocol in a<font color="#E5E5E5"> high</font><font color="#CCCCCC"> level then</font>

153
00:06:47,250 --> 00:06:51,720
to make this protocol<font color="#E5E5E5"> secure against</font>

154
00:06:49,680 --> 00:06:53,990
malicious adversaries<font color="#E5E5E5"> we're gonna</font>

155
00:06:51,720 --> 00:06:56,190
replace<font color="#E5E5E5"> the</font><font color="#CCCCCC"> WI with zero knowledge proof</font>

156
00:06:53,990 --> 00:06:57,480
<font color="#E5E5E5">so the part that we</font><font color="#CCCCCC"> have with the zero</font>

157
00:06:56,190 --> 00:07:00,090
knowledge proof<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that there's a</font>

158
00:06:57,480 --> 00:07:02,090
<font color="#E5E5E5">trapdoor that</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> simulator knows and he</font>

159
00:07:00,090 --> 00:07:04,409
can use the trap to remove the honest

160
00:07:02,090 --> 00:07:07,169
<font color="#E5E5E5">inputs of</font><font color="#CCCCCC"> the parties in the simulation</font>

161
00:07:04,410 --> 00:07:08,910
<font color="#E5E5E5">but with</font><font color="#CCCCCC"> WL proofs</font><font color="#E5E5E5"> like the simulator is</font>

162
00:07:07,170 --> 00:07:12,450
to follow<font color="#CCCCCC"> the owner strategy he doesn't</font>

163
00:07:08,910 --> 00:07:14,720
have any trapdoor so to use<font color="#CCCCCC"> wi</font><font color="#E5E5E5"> proves</font>

164
00:07:12,450 --> 00:07:16,950
<font color="#E5E5E5">we're going to use the</font><font color="#CCCCCC"> anarchic</font><font color="#E5E5E5"> paradigm</font>

165
00:07:14,720 --> 00:07:19,290
which is<font color="#E5E5E5"> the following like if you</font>

166
00:07:16,950 --> 00:07:21,000
encrypt<font color="#CCCCCC"> something twice then you prove</font>

167
00:07:19,290 --> 00:07:23,460
correctness on<font color="#E5E5E5"> you one</font><font color="#CCCCCC"> of the two</font>

168
00:07:21,000 --> 00:07:25,440
encryptions<font color="#CCCCCC"> and</font><font color="#E5E5E5"> here we're</font><font color="#CCCCCC"> going to do</font>

169
00:07:23,460 --> 00:07:28,650
something<font color="#E5E5E5"> similar we're going to repeat</font>

170
00:07:25,440 --> 00:07:32,520
its protocol twice<font color="#E5E5E5"> and prove correctness</font>

171
00:07:28,650 --> 00:07:34,530
<font color="#CCCCCC">only one</font><font color="#E5E5E5"> of the two</font><font color="#CCCCCC"> protocols but</font><font color="#E5E5E5"> you</font>

172
00:07:32,520 --> 00:07:37,349
know life<font color="#CCCCCC"> is not simple this doesn't</font>

173
00:07:34,530 --> 00:07:41,700
quite work<font color="#E5E5E5"> because the adversary can</font>

174
00:07:37,350 --> 00:07:44,130
inject some errors in<font color="#E5E5E5"> this double</font><font color="#CCCCCC"> three</font>

175
00:07:41,700 --> 00:07:50,909
multiplication protocols and<font color="#E5E5E5"> we</font><font color="#CCCCCC"> need to</font>

176
00:07:44,130 --> 00:07:54,030
cope with this errors here so this is

177
00:07:50,910 --> 00:07:56,880
<font color="#E5E5E5">the</font><font color="#CCCCCC"> outer protein high level and in the</font>

178
00:07:54,030 --> 00:07:59,130
next<font color="#E5E5E5"> few minutes I left I'm gonna like</font>

179
00:07:56,880 --> 00:08:04,080
so<font color="#CCCCCC"> I</font><font color="#E5E5E5"> like how this</font><font color="#CCCCCC"> three puzzle pieces</font>

180
00:07:59,130 --> 00:08:06,510
are connected<font color="#E5E5E5"> to each other</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> as I said</font>

181
00:08:04,080 --> 00:08:08,700
we<font color="#E5E5E5"> are</font><font color="#CCCCCC"> using this nice</font><font color="#E5E5E5"> three round</font><font color="#CCCCCC"> three</font>

182
00:08:06,510 --> 00:08:11,580
bit multiplication protocol which

183
00:08:08,700 --> 00:08:14,039
involves three parties<font color="#E5E5E5"> they give inputs</font>

184
00:08:11,580 --> 00:08:16,590
x1 x2 and<font color="#E5E5E5"> x3 and to construct the</font>

185
00:08:14,040 --> 00:08:20,400
protocol we use three instances<font color="#E5E5E5"> of an</font>

186
00:08:16,590 --> 00:08:23,630
oblivious<font color="#E5E5E5"> transfer protocol</font><font color="#CCCCCC"> to get</font><font color="#E5E5E5"> the</font>

187
00:08:20,400 --> 00:08:26,849
result which is x1 times x2 times 16

188
00:08:23,630 --> 00:08:29,930
careful for this talk<font color="#E5E5E5"> it's not important</font>

189
00:08:26,850 --> 00:08:32,970
how the protocol works<font color="#CCCCCC"> it's not required</font>

190
00:08:29,930 --> 00:08:36,270
so now since we want<font color="#E5E5E5"> to incorporate the</font>

191
00:08:32,970 --> 00:08:39,090
<font color="#CCCCCC">new</font><font color="#E5E5E5"> organ paradigm what we're going to</font>

192
00:08:36,270 --> 00:08:41,579
<font color="#E5E5E5">do</font><font color="#CCCCCC"> we are going</font><font color="#E5E5E5"> to like run its OD twice</font>

193
00:08:39,090 --> 00:08:43,370
so you're gonna have<font color="#E5E5E5"> like six</font><font color="#CCCCCC"> ortiz now</font>

194
00:08:41,580 --> 00:08:46,080
instead<font color="#CCCCCC"> of</font><font color="#E5E5E5"> three</font>

195
00:08:43,370 --> 00:08:50,520
but as I said<font color="#E5E5E5"> before life is not simple</font>

196
00:08:46,080 --> 00:08:52,650
<font color="#E5E5E5">like we cannot do this while</font>

197
00:08:50,520 --> 00:08:57,240
achieving correctness<font color="#E5E5E5"> and also the</font>

198
00:08:52,650 --> 00:08:58,770
privacy and<font color="#CCCCCC"> that verse</font><font color="#E5E5E5"> they can inject</font>

199
00:08:57,240 --> 00:09:00,420
some errors because to<font color="#E5E5E5"> achieve the</font>

200
00:08:58,770 --> 00:09:02,400
<font color="#E5E5E5">security of this protocol we need to</font>

201
00:09:00,420 --> 00:09:04,469
weaken<font color="#E5E5E5"> then P</font><font color="#CCCCCC"> statements further</font><font color="#E5E5E5"> and</font>

202
00:09:02,400 --> 00:09:10,470
that's why the adversary is able to

203
00:09:04,470 --> 00:09:12,330
introduce<font color="#E5E5E5"> some error here so what do we</font>

204
00:09:10,470 --> 00:09:14,190
<font color="#E5E5E5">really want we want a randomized</font>

205
00:09:12,330 --> 00:09:18,060
encoding which is<font color="#CCCCCC"> secured against this</font>

206
00:09:14,190 --> 00:09:23,340
additive attacks so it<font color="#CCCCCC"> would</font><font color="#E5E5E5"> be nice if</font>

207
00:09:18,060 --> 00:09:25,829
<font color="#E5E5E5">we could apply</font><font color="#CCCCCC"> these compilers</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> gain</font>

208
00:09:23,340 --> 00:09:28,110
<font color="#E5E5E5">team at all so this compilers</font><font color="#CCCCCC"> they're</font>

209
00:09:25,830 --> 00:09:30,720
very nice because they can convert the

210
00:09:28,110 --> 00:09:32,790
protocol<font color="#E5E5E5"> to like a protocol which is</font>

211
00:09:30,720 --> 00:09:35,460
secure against additive attacks<font color="#CCCCCC"> it's a</font>

212
00:09:32,790 --> 00:09:37,680
generic compiler that<font color="#CCCCCC"> we can use but</font>

213
00:09:35,460 --> 00:09:40,710
unfortunately these<font color="#E5E5E5"> compilers are not</font>

214
00:09:37,680 --> 00:09:43,589
run preserving so if we apply<font color="#CCCCCC"> these</font>

215
00:09:40,710 --> 00:09:45,360
compilers on our previous protocol then

216
00:09:43,590 --> 00:09:47,460
we're gonna we're not<font color="#E5E5E5"> gonna have four</font>

217
00:09:45,360 --> 00:09:52,110
rounds<font color="#CCCCCC"> the run complexity will explode</font>

218
00:09:47,460 --> 00:09:53,760
<font color="#CCCCCC">so what we're going to do instead</font><font color="#E5E5E5"> we're</font>

219
00:09:52,110 --> 00:09:56,120
<font color="#E5E5E5">going to pick a specific randomized</font>

220
00:09:53,760 --> 00:09:58,140
encoding<font color="#E5E5E5"> we're using the BMR encoding</font>

221
00:09:56,120 --> 00:10:00,470
and we're<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to show that</font><font color="#E5E5E5"> any</font>

222
00:09:58,140 --> 00:10:02,880
additive attack on that protocol

223
00:10:00,470 --> 00:10:05,130
corresponds to an additive attack on the

224
00:10:02,880 --> 00:10:07,260
underlying circuit that we are computing

225
00:10:05,130 --> 00:10:09,390
what is the underlying<font color="#E5E5E5"> secret I mean</font>

226
00:10:07,260 --> 00:10:10,650
that if this is the circuit<font color="#CCCCCC"> of the</font>

227
00:10:09,390 --> 00:10:14,460
function that<font color="#E5E5E5"> we want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> securely</font>

228
00:10:10,650 --> 00:10:18,090
evaluate<font color="#E5E5E5"> I call it C and if C prime is</font>

229
00:10:14,460 --> 00:10:21,450
the<font color="#CCCCCC"> secure version of a circuit what we</font>

230
00:10:18,090 --> 00:10:23,760
do we prove<font color="#CCCCCC"> that any attack reduces to</font>

231
00:10:21,450 --> 00:10:26,760
an additive attack on the underlying

232
00:10:23,760 --> 00:10:29,750
circuit C so what did<font color="#CCCCCC"> we achieve with</font>

233
00:10:26,760 --> 00:10:32,490
that<font color="#CCCCCC"> like why is this fine</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> now</font>

234
00:10:29,750 --> 00:10:37,110
<font color="#E5E5E5">we</font><font color="#CCCCCC"> can apply</font><font color="#E5E5E5"> the compilers of game</font>

235
00:10:32,490 --> 00:10:40,050
<font color="#E5E5E5">Gimmerton on the original circuit C</font><font color="#CCCCCC"> ok</font>

236
00:10:37,110 --> 00:10:41,640
<font color="#E5E5E5">so what the compilers do like they take</font>

237
00:10:40,050 --> 00:10:43,170
the circuit and<font color="#E5E5E5"> transform it to a</font>

238
00:10:41,640 --> 00:10:46,470
circuit which is<font color="#E5E5E5"> secure against this</font>

239
00:10:43,170 --> 00:10:48,870
additive attacks<font color="#E5E5E5"> so we do this with pre</font>

240
00:10:46,470 --> 00:10:51,570
compiler circuit with these<font color="#E5E5E5"> compilers</font>

241
00:10:48,870 --> 00:10:55,670
<font color="#E5E5E5">and then we apply</font><font color="#CCCCCC"> their atomized</font>

242
00:10:51,570 --> 00:10:59,730
encoding<font color="#CCCCCC"> okay so in that</font><font color="#E5E5E5"> way</font><font color="#CCCCCC"> we achieve</font>

243
00:10:55,670 --> 00:11:02,459
the run complexity that we want and the

244
00:10:59,730 --> 00:11:03,560
high like actually the<font color="#CCCCCC"> take-home message</font>

245
00:11:02,460 --> 00:11:05,779
here<font color="#CCCCCC"> is that we can</font>

246
00:11:03,560 --> 00:11:07,250
in fact the build<font color="#E5E5E5"> randomized encoding</font>

247
00:11:05,779 --> 00:11:08,420
which is secure against additive attacks

248
00:11:07,250 --> 00:11:17,960
and maybe it can find some<font color="#E5E5E5"> other</font>

249
00:11:08,420 --> 00:11:21,290
applications<font color="#CCCCCC"> so to conclude</font><font color="#E5E5E5"> we have the</font>

250
00:11:17,960 --> 00:11:23,779
first round<font color="#E5E5E5"> optimal MPC protocol without</font>

251
00:11:21,290 --> 00:11:26,540
<font color="#E5E5E5">setup in the presence of malicious</font>

252
00:11:23,779 --> 00:11:28,820
adversaries<font color="#E5E5E5"> understand our polynomial</font>

253
00:11:26,540 --> 00:11:33,260
<font color="#CCCCCC">term assumptions and these are the</font>

254
00:11:28,820 --> 00:11:34,880
<font color="#CCCCCC">Annunciations four protocols and there</font>

255
00:11:33,260 --> 00:11:37,850
are many open problems but I'll leave

256
00:11:34,880 --> 00:11:39,710
you with one<font color="#CCCCCC"> main</font><font color="#E5E5E5"> upper problem is like</font>

257
00:11:37,850 --> 00:11:42,020
to build a foreign malicious protocol

258
00:11:39,710 --> 00:11:44,930
actually<font color="#CCCCCC"> from like minimal assumptions</font>

259
00:11:42,020 --> 00:11:46,970
like<font color="#E5E5E5"> 4</font><font color="#CCCCCC"> of malicious ot and with that I</font>

260
00:11:44,930 --> 00:11:53,799
will end the<font color="#E5E5E5"> top thank you</font>

261
00:11:46,970 --> 00:11:53,799
[Applause]

