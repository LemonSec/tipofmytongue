1
00:00:05,019 --> 00:00:10,719
hi everyone today I'm going<font color="#CCCCCC"> to talk to</font>

2
00:00:08,570 --> 00:00:14,990
you about my team production encryption

3
00:00:10,719 --> 00:00:19,070
<font color="#CCCCCC">for inner products</font><font color="#E5E5E5"> yeah so</font><font color="#CCCCCC"> I'm hiding</font>

4
00:00:14,990 --> 00:00:22,550
<font color="#E5E5E5">and I related</font><font color="#CCCCCC"> how to construct multiple</font>

5
00:00:19,070 --> 00:00:26,420
<font color="#E5E5E5">personal encryption without parents so</font>

6
00:00:22,550 --> 00:00:31,580
let's get this started with some

7
00:00:26,420 --> 00:00:34,160
motivation<font color="#E5E5E5"> we have this context of a</font>

8
00:00:31,580 --> 00:00:36,289
server that<font color="#E5E5E5"> manages emails and we would</font>

9
00:00:34,160 --> 00:00:38,409
like that it only has access<font color="#CCCCCC"> to</font>

10
00:00:36,289 --> 00:00:40,370
encrypted emails<font color="#E5E5E5"> so he knows</font><font color="#CCCCCC"> are</font>

11
00:00:38,409 --> 00:00:45,079
encrypted with the public key<font color="#E5E5E5"> of the</font>

12
00:00:40,370 --> 00:00:50,718
<font color="#E5E5E5">users and the goal would be</font><font color="#CCCCCC"> that the</font>

13
00:00:45,079 --> 00:00:53,510
server can<font color="#E5E5E5"> compute the spam function yes</font>

14
00:00:50,719 --> 00:00:56,030
the<font color="#CCCCCC"> the server can compute the staff</font>

15
00:00:53,510 --> 00:00:59,239
function on<font color="#E5E5E5"> each</font><font color="#CCCCCC"> email and decide if</font>

16
00:00:56,030 --> 00:01:00,679
emails are spam<font color="#E5E5E5"> but it cannot actually</font>

17
00:00:59,239 --> 00:01:02,659
read the emails<font color="#CCCCCC"> like this is the only</font>

18
00:01:00,679 --> 00:01:05,000
<font color="#E5E5E5">information that is being leaked and</font>

19
00:01:02,659 --> 00:01:08,260
this is<font color="#CCCCCC"> a nice motivation for why</font>

20
00:01:05,000 --> 00:01:10,490
<font color="#E5E5E5">functional encryption is interesting</font>

21
00:01:08,260 --> 00:01:12,110
<font color="#E5E5E5">encryption is just a generalization of</font>

22
00:01:10,490 --> 00:01:14,410
public key encryption so you can public

23
00:01:12,110 --> 00:01:16,940
encryption<font color="#E5E5E5"> when you decrypt a message</font>

24
00:01:14,410 --> 00:01:19,759
with a secret key you get the message

25
00:01:16,940 --> 00:01:23,270
in fact encryption decryption keys are

26
00:01:19,760 --> 00:01:26,330
now associated<font color="#E5E5E5"> with functions and we</font>

27
00:01:23,270 --> 00:01:29,240
also have master keys<font color="#E5E5E5"> so if you want to</font>

28
00:01:26,330 --> 00:01:31,970
decrypt a message with the<font color="#E5E5E5"> decryption</font>

29
00:01:29,240 --> 00:01:33,320
key associated<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the function f instead</font>

30
00:01:31,970 --> 00:01:37,640
of<font color="#E5E5E5"> getting the message you get the</font>

31
00:01:33,320 --> 00:01:40,309
function<font color="#E5E5E5"> of the message</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> where do</font>

32
00:01:37,640 --> 00:01:43,480
<font color="#E5E5E5">this master keys come into play and</font>

33
00:01:40,310 --> 00:01:45,830
where do this s case<font color="#CCCCCC"> SKS come from</font>

34
00:01:43,480 --> 00:01:48,350
basically<font color="#E5E5E5"> we have also a master</font>

35
00:01:45,830 --> 00:01:50,030
authority in our model<font color="#E5E5E5"> and if</font><font color="#CCCCCC"> Bob</font><font color="#E5E5E5"> was</font>

36
00:01:48,350 --> 00:01:54,800
really something<font color="#E5E5E5"> that he got from Alice</font>

37
00:01:50,030 --> 00:01:57,320
this<font color="#E5E5E5"> he is first to ask the function to</font>

38
00:01:54,800 --> 00:02:00,500
the wizard<font color="#E5E5E5"> which represents the</font><font color="#CCCCCC"> master</font>

39
00:01:57,320 --> 00:02:04,220
and<font color="#E5E5E5"> if you know he'll get the function</font>

40
00:02:00,500 --> 00:02:07,789
of the message<font color="#CCCCCC"> so it is why we have the</font>

41
00:02:04,220 --> 00:02:10,380
<font color="#E5E5E5">master keys and</font><font color="#CCCCCC"> keys</font>

42
00:02:07,789 --> 00:02:12,240
<font color="#E5E5E5">okay now what is</font><font color="#CCCCCC"> multi input functional</font>

43
00:02:10,380 --> 00:02:17,700
encryption<font color="#E5E5E5"> this is a notion from allies</font>

44
00:02:12,240 --> 00:02:19,650
in 2014 and in this context instead<font color="#CCCCCC"> of</font>

45
00:02:17,700 --> 00:02:21,540
wanting<font color="#CCCCCC"> to decrypt just want</font><font color="#E5E5E5"> ciphertext</font>

46
00:02:19,650 --> 00:02:23,850
we want to decrypt and<font color="#CCCCCC"> ciphertext</font><font color="#E5E5E5"> at the</font>

47
00:02:21,540 --> 00:02:26,310
<font color="#E5E5E5">same time but the catch is</font><font color="#CCCCCC"> that the</font>

48
00:02:23,850 --> 00:02:31,140
<font color="#E5E5E5">cipher</font><font color="#CCCCCC"> texts are generated independently</font>

49
00:02:26,310 --> 00:02:32,550
<font color="#E5E5E5">so this one</font><font color="#CCCCCC"> over here is</font><font color="#E5E5E5"> generated</font>

50
00:02:31,140 --> 00:02:34,410
independently from<font color="#E5E5E5"> this one over</font><font color="#CCCCCC"> here so</font>

51
00:02:32,550 --> 00:02:37,050
<font color="#E5E5E5">with fresh randomness and completely</font>

52
00:02:34,410 --> 00:02:39,090
<font color="#E5E5E5">separately</font><font color="#CCCCCC"> and when you want to</font><font color="#E5E5E5"> and try</font>

53
00:02:37,050 --> 00:02:45,450
to<font color="#CCCCCC"> decrypt you decrypt</font><font color="#E5E5E5"> all the messages</font>

54
00:02:39,090 --> 00:02:46,920
at the same<font color="#CCCCCC"> time here they are</font>

55
00:02:45,450 --> 00:02:48,780
independent<font color="#CCCCCC"> so the function now is a</font>

56
00:02:46,920 --> 00:02:54,059
<font color="#E5E5E5">function that takes an input it</font><font color="#CCCCCC"> has an</font>

57
00:02:48,780 --> 00:02:55,410
<font color="#E5E5E5">era</font><font color="#CCCCCC"> T</font><font color="#E5E5E5"> and last thing</font><font color="#CCCCCC"> that I wanna</font>

58
00:02:54,060 --> 00:02:59,040
introduce and before I state the

59
00:02:55,410 --> 00:03:01,109
contribution<font color="#E5E5E5"> is we work we look at</font>

60
00:02:59,040 --> 00:03:02,820
schemes for specific classes<font color="#E5E5E5"> of</font>

61
00:03:01,110 --> 00:03:06,989
functions in this<font color="#E5E5E5"> case</font><font color="#CCCCCC"> the inner product</font>

62
00:03:02,820 --> 00:03:08,940
and<font color="#E5E5E5"> we would in this context the</font>

63
00:03:06,989 --> 00:03:12,840
<font color="#E5E5E5">function is just the functions are</font>

64
00:03:08,940 --> 00:03:14,760
<font color="#E5E5E5">associated</font><font color="#CCCCCC"> to vectors Y and the function</font>

65
00:03:12,840 --> 00:03:19,170
is<font color="#CCCCCC"> just in their products of input with</font>

66
00:03:14,760 --> 00:03:21,600
<font color="#E5E5E5">y so if</font><font color="#CCCCCC"> you have so the messages are now</font>

67
00:03:19,170 --> 00:03:25,649
factors and when<font color="#E5E5E5"> you decrypt you obtain</font>

68
00:03:21,600 --> 00:03:29,370
the inner product of X Y similarly<font color="#E5E5E5"> in</font>

69
00:03:25,650 --> 00:03:32,160
the multi input setting you<font color="#CCCCCC"> have X</font><font color="#E5E5E5"> you</font>

70
00:03:29,370 --> 00:03:33,959
<font color="#E5E5E5">have n input vectors and when you</font>

71
00:03:32,160 --> 00:03:36,380
decrypt<font color="#E5E5E5"> you obtain a big inner product</font>

72
00:03:33,959 --> 00:03:39,420
<font color="#E5E5E5">so keys now associated</font><font color="#CCCCCC"> with an small</font>

73
00:03:36,380 --> 00:03:40,220
wife<font color="#E5E5E5"> and you get the big in a product of</font>

74
00:03:39,420 --> 00:03:43,500
everything

75
00:03:40,220 --> 00:03:46,620
so again recall that this thing is

76
00:03:43,500 --> 00:03:51,060
independent<font color="#CCCCCC"> from these</font><font color="#E5E5E5"> things</font><font color="#CCCCCC"> they come</font>

77
00:03:46,620 --> 00:03:54,420
<font color="#E5E5E5">from</font><font color="#CCCCCC"> different places so previous work</font>

78
00:03:51,060 --> 00:03:57,600
<font color="#E5E5E5">and this since the seminal paper in 2014</font>

79
00:03:54,420 --> 00:04:00,720
we have seen a<font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of a lot of work in</font>

80
00:03:57,600 --> 00:04:02,430
the fields<font color="#CCCCCC"> and they achieve not impose</font>

81
00:04:00,720 --> 00:04:05,060
functional encryption for<font color="#E5E5E5"> a wide variety</font>

82
00:04:02,430 --> 00:04:07,380
<font color="#E5E5E5">of functions but most of them rely on</font>

83
00:04:05,060 --> 00:04:12,540
<font color="#E5E5E5">complicated assumption is like a</font><font color="#CCCCCC"> omar's</font>

84
00:04:07,380 --> 00:04:14,260
in your<font color="#CCCCCC"> Maps</font><font color="#E5E5E5"> and then in 2017</font><font color="#CCCCCC"> it's not</font>

85
00:04:12,540 --> 00:04:17,560
<font color="#E5E5E5">very efficient</font>

86
00:04:14,260 --> 00:04:18,969
<font color="#CCCCCC">until 2017 the question was asked if we</font>

87
00:04:17,560 --> 00:04:21,370
could<font color="#E5E5E5"> actually have</font><font color="#CCCCCC"> the efficient scheme</font>

88
00:04:18,970 --> 00:04:26,020
<font color="#E5E5E5">16 excuse which we can actually infinite</font>

89
00:04:21,370 --> 00:04:27,940
the practice<font color="#E5E5E5"> and this paper presented a</font>

90
00:04:26,020 --> 00:04:30,460
scheme<font color="#CCCCCC"> that worked</font><font color="#E5E5E5"> for the</font><font color="#CCCCCC"> inner</font>

91
00:04:27,940 --> 00:04:32,170
products with supporting a polynomial

92
00:04:30,460 --> 00:04:34,299
<font color="#CCCCCC">number of inputs while</font><font color="#E5E5E5"> only relying on</font>

93
00:04:32,170 --> 00:04:36,070
polynomial hardness assumptions<font color="#CCCCCC"> in this</font>

94
00:04:34,300 --> 00:04:39,430
case the assumption was<font color="#CCCCCC"> X is</font><font color="#E5E5E5"> the agent</font>

95
00:04:36,070 --> 00:04:40,890
<font color="#E5E5E5">airing groups and also concurrently with</font>

96
00:04:39,430 --> 00:04:44,470
our work

97
00:04:40,890 --> 00:04:45,820
beginning<font color="#E5E5E5"> of this year the same the same</font>

98
00:04:44,470 --> 00:04:48,040
result has been<font color="#E5E5E5"> obtained</font>

99
00:04:45,820 --> 00:04:50,560
but for unbounded polynomial number<font color="#CCCCCC"> of</font>

100
00:04:48,040 --> 00:04:55,930
inputs so now the inputs are not being

101
00:04:50,560 --> 00:05:00,550
set at the setup and but also from

102
00:04:55,930 --> 00:05:03,310
pairings<font color="#E5E5E5"> so what do we do we complement</font>

103
00:05:00,550 --> 00:05:07,990
a<font color="#E5E5E5"> bit the figure by proposing</font><font color="#CCCCCC"> two</font>

104
00:05:03,310 --> 00:05:10,060
schemes<font color="#E5E5E5"> the first one is a</font><font color="#CCCCCC"> multiple</font>

105
00:05:07,990 --> 00:05:13,380
encryption for inner<font color="#E5E5E5"> products in which</font>

106
00:05:10,060 --> 00:05:17,020
we remove the need to rely on earrings

107
00:05:13,380 --> 00:05:19,570
<font color="#E5E5E5">so now we we can construct schemes that</font>

108
00:05:17,020 --> 00:05:24,430
<font color="#E5E5E5">have the same personality but can be</font>

109
00:05:19,570 --> 00:05:25,960
based on DD HD CR or<font color="#CCCCCC"> lwe and all we also</font>

110
00:05:24,430 --> 00:05:30,760
<font color="#CCCCCC">propose</font><font color="#E5E5E5"> the function</font><font color="#CCCCCC"> hider</font><font color="#E5E5E5"> scheme</font>

111
00:05:25,960 --> 00:05:33,070
concurrently with this 2018 paper<font color="#E5E5E5"> but in</font>

112
00:05:30,760 --> 00:05:35,020
<font color="#E5E5E5">a slightly weaker model like in the</font>

113
00:05:33,070 --> 00:05:38,980
weaker model because here they can do

114
00:05:35,020 --> 00:05:41,320
unbounded and we don't<font color="#E5E5E5"> have this</font><font color="#CCCCCC"> ok so</font>

115
00:05:38,980 --> 00:05:43,150
now let's<font color="#CCCCCC"> move on to the</font><font color="#E5E5E5"> appreciation of</font>

116
00:05:41,320 --> 00:05:45,159
the model<font color="#E5E5E5"> yeah so in this talk I</font><font color="#CCCCCC"> will</font>

117
00:05:43,150 --> 00:05:46,510
talk more<font color="#CCCCCC"> about the</font><font color="#E5E5E5"> the construction</font>

118
00:05:45,160 --> 00:05:50,560
without parents because there is no time

119
00:05:46,510 --> 00:05:52,840
<font color="#CCCCCC">to talk about</font><font color="#E5E5E5"> everything so what is the</font>

120
00:05:50,560 --> 00:05:54,970
security code<font color="#E5E5E5"> the security goal would be</font>

121
00:05:52,840 --> 00:05:57,070
that<font color="#E5E5E5"> if you have the encryption of the</font>

122
00:05:54,970 --> 00:05:59,080
<font color="#E5E5E5">view</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the vector X and if you have any</font>

123
00:05:57,070 --> 00:06:01,120
picture<font color="#E5E5E5"> and key</font><font color="#CCCCCC"> associated with why you</font>

124
00:05:59,080 --> 00:06:04,570
would like to leak only the inner

125
00:06:01,120 --> 00:06:06,880
product of<font color="#E5E5E5"> x y y and the size of the</font>

126
00:06:04,570 --> 00:06:09,460
message<font color="#E5E5E5"> which we usually</font><font color="#CCCCCC"> make in the</font>

127
00:06:06,880 --> 00:06:11,860
crypto so with the<font color="#E5E5E5"> only information</font><font color="#CCCCCC"> that</font>

128
00:06:09,460 --> 00:06:16,810
<font color="#CCCCCC">slipped about X is the inner</font><font color="#E5E5E5"> product of</font>

129
00:06:11,860 --> 00:06:18,940
X with the key any margin in production

130
00:06:16,810 --> 00:06:20,980
Egyptian of course<font color="#E5E5E5"> similarly</font><font color="#CCCCCC"> you have</font><font color="#E5E5E5"> a</font>

131
00:06:18,940 --> 00:06:23,650
<font color="#CCCCCC">ciphertext and you would like</font><font color="#E5E5E5"> to that</font>

132
00:06:20,980 --> 00:06:26,540
the only<font color="#E5E5E5"> leakage is this big inner</font>

133
00:06:23,650 --> 00:06:31,520
product<font color="#E5E5E5"> big the concatenation of vectors</font>

134
00:06:26,540 --> 00:06:33,260
from<font color="#E5E5E5"> different sources and</font><font color="#CCCCCC"> wise this is</font>

135
00:06:31,520 --> 00:06:35,450
how you would<font color="#E5E5E5"> expect the leakage to look</font>

136
00:06:33,260 --> 00:06:38,510
like but it's actually<font color="#E5E5E5"> not that simple</font>

137
00:06:35,450 --> 00:06:40,700
<font color="#CCCCCC">so it's more</font><font color="#E5E5E5"> complex and now I will</font>

138
00:06:38,510 --> 00:06:43,610
explain explain why this leakage comes

139
00:06:40,700 --> 00:06:46,300
from the model<font color="#E5E5E5"> and the</font><font color="#CCCCCC"> reason is that</font>

140
00:06:43,610 --> 00:06:47,960
<font color="#CCCCCC">these ciphertexts</font><font color="#E5E5E5"> are independent</font><font color="#CCCCCC"> so</font>

141
00:06:46,300 --> 00:06:50,210
<font color="#E5E5E5">they come from different sources</font>

142
00:06:47,960 --> 00:06:53,299
<font color="#E5E5E5">different computers</font><font color="#CCCCCC"> so for example with</font>

143
00:06:50,210 --> 00:06:54,830
a cloud<font color="#CCCCCC"> that has a</font><font color="#E5E5E5"> secret key this</font><font color="#CCCCCC"> is</font>

144
00:06:53,300 --> 00:06:57,710
<font color="#CCCCCC">the</font><font color="#E5E5E5"> functionality</font><font color="#CCCCCC"> that we get but the</font>

145
00:06:54,830 --> 00:07:00,229
goal would be that we only get<font color="#CCCCCC"> the inner</font>

146
00:06:57,710 --> 00:07:01,580
<font color="#CCCCCC">products</font><font color="#E5E5E5"> of the big vectors and</font><font color="#CCCCCC"> not and</font>

147
00:07:00,230 --> 00:07:03,950
<font color="#E5E5E5">this should be</font><font color="#CCCCCC"> the only information that</font>

148
00:07:01,580 --> 00:07:07,400
<font color="#CCCCCC">you obtained and not independent in</font>

149
00:07:03,950 --> 00:07:08,690
their products like X I Y<font color="#E5E5E5"> I so only the</font>

150
00:07:07,400 --> 00:07:10,479
inner<font color="#E5E5E5"> products the big ones and</font><font color="#CCCCCC"> not</font>

151
00:07:08,690 --> 00:07:15,560
being the product of small<font color="#E5E5E5"> ones that</font>

152
00:07:10,480 --> 00:07:17,600
<font color="#CCCCCC">would</font><font color="#E5E5E5"> be the co but this doesn't make</font>

153
00:07:15,560 --> 00:07:20,120
<font color="#CCCCCC">sense in the public key setting in the</font>

154
00:07:17,600 --> 00:07:21,950
sense that it's an inherent leakage so

155
00:07:20,120 --> 00:07:27,400
in the<font color="#CCCCCC"> politics</font><font color="#E5E5E5"> I think</font><font color="#CCCCCC"> if the adversary</font>

156
00:07:21,950 --> 00:07:27,400
<font color="#CCCCCC">has the master</font><font color="#E5E5E5"> public key</font><font color="#CCCCCC"> it would</font><font color="#E5E5E5"> just</font>

157
00:07:28,360 --> 00:07:32,810
encryption key it could just<font color="#E5E5E5"> include</font>

158
00:07:30,590 --> 00:07:35,539
<font color="#E5E5E5">zero and then it</font><font color="#CCCCCC"> would construct this</font>

159
00:07:32,810 --> 00:07:38,030
big<font color="#E5E5E5"> vector</font><font color="#CCCCCC"> in which it concatenates</font><font color="#E5E5E5"> it</font>

160
00:07:35,540 --> 00:07:40,400
puts<font color="#E5E5E5"> zero and every other</font><font color="#CCCCCC"> strut</font><font color="#E5E5E5"> except</font>

161
00:07:38,030 --> 00:07:42,169
for the<font color="#E5E5E5"> I when we I started to sex the</font>

162
00:07:40,400 --> 00:07:47,599
rest are zeros and<font color="#E5E5E5"> when if we crypt it</font>

163
00:07:42,170 --> 00:07:49,250
obtains<font color="#E5E5E5"> X I Y so this small inner</font>

164
00:07:47,600 --> 00:07:51,650
product is inherently kitchen the<font color="#E5E5E5"> public</font>

165
00:07:49,250 --> 00:07:56,780
<font color="#E5E5E5">key setting and it's too much and so we</font>

166
00:07:51,650 --> 00:07:58,789
looked at the symmetric key setting and

167
00:07:56,780 --> 00:08:00,919
to finish the presentation<font color="#E5E5E5"> of the model</font>

168
00:07:58,790 --> 00:08:04,910
we I will talk<font color="#CCCCCC"> a little</font><font color="#E5E5E5"> bit about</font>

169
00:08:00,920 --> 00:08:07,040
<font color="#E5E5E5">ciphertext mixing so what we would</font><font color="#CCCCCC"> like</font>

170
00:08:04,910 --> 00:08:10,520
to<font color="#CCCCCC"> be what what is math</font><font color="#E5E5E5"> looking for such</font>

171
00:08:07,040 --> 00:08:13,940
confusion about<font color="#CCCCCC"> you would like if if the</font>

172
00:08:10,520 --> 00:08:16,030
cloud obtains multiple<font color="#CCCCCC"> ciphertext from</font><font color="#E5E5E5"> a</font>

173
00:08:13,940 --> 00:08:18,860
<font color="#CCCCCC">dip from the same source so in this case</font>

174
00:08:16,030 --> 00:08:20,780
ciphertext for<font color="#CCCCCC"> X 1 X on crime and</font><font color="#E5E5E5"> from</font>

175
00:08:18,860 --> 00:08:23,450
<font color="#E5E5E5">another different source it obtains X 2</font>

176
00:08:20,780 --> 00:08:28,039
X<font color="#CCCCCC"> 2 prime many should be able to</font><font color="#E5E5E5"> compute</font>

177
00:08:23,450 --> 00:08:30,320
all the combinations and<font color="#CCCCCC"> four to get</font>

178
00:08:28,040 --> 00:08:34,789
<font color="#CCCCCC">four combinations for any</font><font color="#E5E5E5"> you'll get an</font>

179
00:08:30,320 --> 00:08:37,010
<font color="#E5E5E5">exponential number and we want to allow</font>

180
00:08:34,789 --> 00:08:39,030
<font color="#E5E5E5">ciphertext mixing we want to allow our</font>

181
00:08:37,010 --> 00:08:41,970
<font color="#CCCCCC">skin to decrypt the cipher</font>

182
00:08:39,030 --> 00:08:43,169
<font color="#CCCCCC">come from</font><font color="#E5E5E5"> different</font><font color="#CCCCCC"> sources at</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> same</font>

183
00:08:41,970 --> 00:08:45,180
time we don't want<font color="#E5E5E5"> to allow</font><font color="#CCCCCC"> keep</font>

184
00:08:43,169 --> 00:08:48,089
<font color="#CCCCCC">pollution</font><font color="#E5E5E5"> like we don't we don't want to</font>

185
00:08:45,180 --> 00:08:49,380
be able to take two keys and mix like

186
00:08:48,090 --> 00:08:51,390
somehow mix them together and obtain

187
00:08:49,380 --> 00:08:57,689
another one with<font color="#CCCCCC"> Neary</font><font color="#E5E5E5"> information so</font>

188
00:08:51,390 --> 00:08:59,250
ciphertext mixing but not<font color="#CCCCCC"> kill and now</font><font color="#E5E5E5"> I</font>

189
00:08:57,690 --> 00:09:00,960
just<font color="#E5E5E5"> memorize the security notion I'm</font>

190
00:08:59,250 --> 00:09:04,680
just not<font color="#CCCCCC"> premised I will just</font><font color="#E5E5E5"> explain it</font>

191
00:09:00,960 --> 00:09:07,380
in a very<font color="#E5E5E5"> formal</font><font color="#CCCCCC"> way</font><font color="#E5E5E5"> so assume that this</font>

192
00:09:04,680 --> 00:09:09,449
challenger here the owl has run the

193
00:09:07,380 --> 00:09:11,400
setup<font color="#E5E5E5"> and</font><font color="#CCCCCC"> has the master</font><font color="#E5E5E5"> public</font><font color="#CCCCCC"> and the</font>

194
00:09:09,450 --> 00:09:12,780
master secret key in this evil horse

195
00:09:11,400 --> 00:09:15,870
which is anniversary

196
00:09:12,780 --> 00:09:18,720
it's<font color="#CCCCCC"> his yellow he has access to</font><font color="#E5E5E5"> two</font>

197
00:09:15,870 --> 00:09:21,780
<font color="#E5E5E5">workers so he can either query the</font>

198
00:09:18,720 --> 00:09:23,970
kitchen<font color="#CCCCCC"> Oracle on vectors Y y1</font><font color="#E5E5E5"> + ym</font><font color="#CCCCCC"> +</font>

199
00:09:21,780 --> 00:09:26,970
care decryption keys or he can query<font color="#E5E5E5"> the</font>

200
00:09:23,970 --> 00:09:30,480
encryption Oracle on a specific slot

201
00:09:26,970 --> 00:09:34,410
which<font color="#CCCCCC"> was specific input</font><font color="#E5E5E5"> I with X I and</font>

202
00:09:30,480 --> 00:09:36,060
<font color="#E5E5E5">you'll get it will get encryptions so</font>

203
00:09:34,410 --> 00:09:37,439
these two Oracle's are actually

204
00:09:36,060 --> 00:09:38,939
interleaved<font color="#CCCCCC"> if you first called</font><font color="#E5E5E5"> the</font>

205
00:09:37,440 --> 00:09:41,370
first one and then<font color="#E5E5E5"> the second one</font><font color="#CCCCCC"> the</font>

206
00:09:38,940 --> 00:09:43,110
<font color="#E5E5E5">first</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> second one were maybe first</font>

207
00:09:41,370 --> 00:09:45,030
time<font color="#CCCCCC"> three times and so</font><font color="#E5E5E5"> on they are</font>

208
00:09:43,110 --> 00:09:46,830
interleaved<font color="#E5E5E5"> and the goal would be that</font>

209
00:09:45,030 --> 00:09:49,949
<font color="#CCCCCC">it only gets</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> beginner products and</font>

210
00:09:46,830 --> 00:09:51,960
not maybe<font color="#E5E5E5"> not small last</font><font color="#CCCCCC"> note this would</font>

211
00:09:49,950 --> 00:09:53,430
be drawing<font color="#CCCCCC"> information and the</font><font color="#E5E5E5"> only</font>

212
00:09:51,960 --> 00:09:56,580
information<font color="#CCCCCC"> that the</font><font color="#E5E5E5"> diversity</font><font color="#CCCCCC"> gets you</font>

213
00:09:53,430 --> 00:09:59,120
the information<font color="#CCCCCC"> derives from this this</font>

214
00:09:56,580 --> 00:10:01,830
<font color="#E5E5E5">is</font><font color="#CCCCCC"> a very informal</font><font color="#E5E5E5"> description because</font>

215
00:09:59,120 --> 00:10:03,300
we actually<font color="#E5E5E5"> rely on we</font><font color="#CCCCCC"> actually achieve</font>

216
00:10:01,830 --> 00:10:06,590
in distinguishability security and this

217
00:10:03,300 --> 00:10:10,550
is more looks more like<font color="#E5E5E5"> simulation</font>

218
00:10:06,590 --> 00:10:15,990
<font color="#CCCCCC">okay so a</font><font color="#E5E5E5"> road map of our</font><font color="#CCCCCC"> construction</font>

219
00:10:10,550 --> 00:10:18,750
we I will show you first<font color="#E5E5E5"> a very easy way</font>

220
00:10:15,990 --> 00:10:21,660
to achieve security<font color="#E5E5E5"> for one cipher text</font>

221
00:10:18,750 --> 00:10:24,450
query<font color="#E5E5E5"> coming from one input source and</font>

222
00:10:21,660 --> 00:10:26,670
then I will show you how to<font color="#E5E5E5"> bootstrap</font>

223
00:10:24,450 --> 00:10:30,570
this<font color="#E5E5E5"> to one cipher text query but for</font>

224
00:10:26,670 --> 00:10:32,849
many input sources<font color="#E5E5E5"> and then in parallel</font>

225
00:10:30,570 --> 00:10:36,030
<font color="#CCCCCC">we will also go to many cipher text</font>

226
00:10:32,850 --> 00:10:37,440
queries<font color="#E5E5E5"> in one input source</font><font color="#CCCCCC"> so why do we</font>

227
00:10:36,030 --> 00:10:39,660
<font color="#E5E5E5">have to go from one cipher text too many</font>

228
00:10:37,440 --> 00:10:42,030
cipher<font color="#CCCCCC"> text</font><font color="#E5E5E5"> well it's because we open</font>

229
00:10:39,660 --> 00:10:44,100
the symmetric key setting<font color="#CCCCCC"> so once the</font>

230
00:10:42,030 --> 00:10:45,810
<font color="#CCCCCC">vortex doesn't really imply that we also</font>

231
00:10:44,100 --> 00:10:48,110
have security<font color="#CCCCCC"> for many cipher text</font>

232
00:10:45,810 --> 00:10:48,109
queries

233
00:10:48,460 --> 00:10:53,230
and in the end<font color="#E5E5E5"> we'll put everything</font>

234
00:10:49,960 --> 00:10:57,580
<font color="#E5E5E5">together and step</font><font color="#CCCCCC"> four and we would have</font>

235
00:10:53,230 --> 00:10:59,680
our<font color="#E5E5E5"> final skin</font><font color="#CCCCCC"> again we only need to we</font>

236
00:10:57,580 --> 00:11:00,940
need<font color="#CCCCCC"> to go from one to many</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> cipher</font>

237
00:10:59,680 --> 00:11:03,849
to explain it<font color="#E5E5E5"> to many subjects</font><font color="#CCCCCC"> please</font>

238
00:11:00,940 --> 00:11:07,899
because we<font color="#E5E5E5"> don't</font><font color="#CCCCCC"> have this trivial</font>

239
00:11:03,850 --> 00:11:10,920
implication so I start<font color="#E5E5E5"> with one</font>

240
00:11:07,899 --> 00:11:14,230
ciphertext<font color="#CCCCCC"> and one</font><font color="#E5E5E5"> from one input source</font>

241
00:11:10,920 --> 00:11:16,000
this<font color="#E5E5E5"> is just one I want a pad very</font>

242
00:11:14,230 --> 00:11:19,810
simple<font color="#E5E5E5"> the master secret key it's a</font>

243
00:11:16,000 --> 00:11:21,940
uniform vector<font color="#CCCCCC"> u from zqm the encryption</font>

244
00:11:19,810 --> 00:11:24,819
is just a one-time<font color="#CCCCCC"> pad of X with you and</font>

245
00:11:21,940 --> 00:11:27,580
the key<font color="#E5E5E5"> generation will be Y along with</font>

246
00:11:24,820 --> 00:11:31,450
<font color="#CCCCCC">inner product of U with y so why does</font>

247
00:11:27,580 --> 00:11:33,370
this work<font color="#E5E5E5"> well it's because</font><font color="#CCCCCC"> for example</font>

248
00:11:31,450 --> 00:11:35,589
if I wanted<font color="#E5E5E5"> to decrypt I would just take</font>

249
00:11:33,370 --> 00:11:37,120
the<font color="#CCCCCC"> ciphertext I will make the cipher</font>

250
00:11:35,589 --> 00:11:39,760
the inner product of the<font color="#E5E5E5"> ciphertext with</font>

251
00:11:37,120 --> 00:11:44,080
<font color="#CCCCCC">Y obtaining</font><font color="#E5E5E5"> express</font><font color="#CCCCCC"> u in a product</font><font color="#E5E5E5"> with</font>

252
00:11:39,760 --> 00:11:46,149
<font color="#E5E5E5">Y and then I can remove from this I can</font>

253
00:11:44,080 --> 00:11:49,000
<font color="#E5E5E5">remove this quantity here which</font><font color="#CCCCCC"> I have</font>

254
00:11:46,149 --> 00:11:50,910
<font color="#E5E5E5">this is the key so only the person with</font>

255
00:11:49,000 --> 00:11:55,240
the key should<font color="#E5E5E5"> be able to decrypt and</font>

256
00:11:50,910 --> 00:11:57,279
what we will<font color="#E5E5E5"> get is we</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> get the</font>

257
00:11:55,240 --> 00:11:59,770
inner product of X with Y<font color="#E5E5E5"> and this will</font>

258
00:11:57,279 --> 00:12:01,990
<font color="#E5E5E5">cancel</font><font color="#CCCCCC"> because it's because of beginning</font>

259
00:11:59,770 --> 00:12:06,370
argument a product you comes out<font color="#E5E5E5"> of the</font>

260
00:12:01,990 --> 00:12:08,080
inner<font color="#E5E5E5"> product and why is this secure so</font>

261
00:12:06,370 --> 00:12:10,510
the goal<font color="#E5E5E5"> remember it will be to own a</font>

262
00:12:08,080 --> 00:12:14,620
<font color="#E5E5E5">bit X Y and not any other information</font>

263
00:12:10,510 --> 00:12:16,600
<font color="#E5E5E5">about X the way the reason why it works</font>

264
00:12:14,620 --> 00:12:19,540
is because if<font color="#E5E5E5"> we look at what the</font>

265
00:12:16,600 --> 00:12:22,870
adversity sees the bursary sees<font color="#CCCCCC"> xsu</font><font color="#E5E5E5"> the</font>

266
00:12:19,540 --> 00:12:28,599
<font color="#CCCCCC">ciphertext the decryption key</font><font color="#E5E5E5"> UI and</font><font color="#CCCCCC"> why</font>

267
00:12:22,870 --> 00:12:31,420
and this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the exact</font><font color="#E5E5E5"> in the same</font><font color="#CCCCCC"> way as</font>

268
00:12:28,600 --> 00:12:34,810
<font color="#E5E5E5">a uniformly random vector</font><font color="#CCCCCC"> w instead of</font>

269
00:12:31,420 --> 00:12:38,650
the<font color="#E5E5E5"> ciphertext the inner product of W is</font>

270
00:12:34,810 --> 00:12:42,869
<font color="#CCCCCC">Y minus X Y</font><font color="#E5E5E5"> and if you look at this in</font>

271
00:12:38,650 --> 00:12:45,699
<font color="#E5E5E5">this in this final game this is the game</font>

272
00:12:42,870 --> 00:12:47,500
here in this<font color="#E5E5E5"> word the adversary doesn't</font>

273
00:12:45,700 --> 00:12:51,730
<font color="#E5E5E5">the only information that the diversity</font>

274
00:12:47,500 --> 00:12:53,829
<font color="#E5E5E5">can ever hope to obtain about X is this</font>

275
00:12:51,730 --> 00:12:55,240
<font color="#E5E5E5">w completely</font><font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> there</font><font color="#CCCCCC"> is no</font>

276
00:12:53,829 --> 00:12:57,219
information<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the ciphertext about X</font>

277
00:12:55,240 --> 00:12:59,290
<font color="#E5E5E5">anymore and the only</font><font color="#CCCCCC"> information about X</font>

278
00:12:57,220 --> 00:13:01,430
here in this word is<font color="#E5E5E5"> being a product of</font>

279
00:12:59,290 --> 00:13:06,439
X with<font color="#CCCCCC"> y which is</font><font color="#E5E5E5"> exactly what</font>

280
00:13:01,430 --> 00:13:07,819
<font color="#CCCCCC">we're hoping to achieve</font><font color="#E5E5E5"> so we have we</font>

281
00:13:06,440 --> 00:13:09,590
<font color="#E5E5E5">have security for once</font><font color="#CCCCCC"> I protects</font>

282
00:13:07,820 --> 00:13:12,980
everyone what's up<font color="#E5E5E5"> for text query and</font>

283
00:13:09,590 --> 00:13:14,840
one input<font color="#CCCCCC"> and now let's see how do we</font><font color="#E5E5E5"> go</font>

284
00:13:12,980 --> 00:13:18,500
<font color="#CCCCCC">too many inputs</font><font color="#E5E5E5"> this is very easy to</font>

285
00:13:14,840 --> 00:13:22,430
<font color="#E5E5E5">paralyze we just instead of having</font><font color="#CCCCCC"> only</font>

286
00:13:18,500 --> 00:13:27,230
one<font color="#E5E5E5"> you we will have n news and that you</font>

287
00:13:22,430 --> 00:13:29,780
use so bigger massive shift key and to

288
00:13:27,230 --> 00:13:32,150
encrypt beyond<font color="#E5E5E5"> one slot</font><font color="#CCCCCC"> I we will</font><font color="#E5E5E5"> just</font>

289
00:13:29,780 --> 00:13:34,430
make make the<font color="#CCCCCC"> one</font><font color="#E5E5E5"> time out the next</font><font color="#CCCCCC"> side</font>

290
00:13:32,150 --> 00:13:36,230
<font color="#E5E5E5">plus you press you I see exactly is the</font>

291
00:13:34,430 --> 00:13:38,479
same the only thing<font color="#E5E5E5"> that changes a</font>

292
00:13:36,230 --> 00:13:43,490
little bit<font color="#E5E5E5"> is the is the key generation</font>

293
00:13:38,480 --> 00:13:45,590
<font color="#CCCCCC">and because now we have a sum and before</font>

294
00:13:43,490 --> 00:13:48,890
it<font color="#E5E5E5"> was just you</font><font color="#CCCCCC"> I so</font><font color="#E5E5E5"> now we have the sum</font>

295
00:13:45,590 --> 00:13:53,240
over<font color="#E5E5E5"> all the world the eyes of you I why</font>

296
00:13:48,890 --> 00:13:54,530
<font color="#CCCCCC">I and the</font><font color="#E5E5E5"> reason why it</font><font color="#CCCCCC"> worked is</font><font color="#E5E5E5"> of</font>

297
00:13:53,240 --> 00:13:57,290
<font color="#E5E5E5">course because</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the linearity of</font><font color="#CCCCCC"> the</font>

298
00:13:54,530 --> 00:14:00,050
inner<font color="#CCCCCC"> product</font><font color="#E5E5E5"> all these sums actually</font>

299
00:13:57,290 --> 00:14:02,750
come out what<font color="#CCCCCC"> the device why I come out</font>

300
00:14:00,050 --> 00:14:05,990
and in the<font color="#E5E5E5"> end they cancel so</font><font color="#CCCCCC"> we are</font>

301
00:14:02,750 --> 00:14:09,830
left<font color="#E5E5E5"> with our</font><font color="#CCCCCC"> goal in a product to be</font>

302
00:14:05,990 --> 00:14:12,230
vectors this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> how we do</font><font color="#E5E5E5"> for how we do</font>

303
00:14:09,830 --> 00:14:16,190
it<font color="#E5E5E5"> if you had many input sources and one</font>

304
00:14:12,230 --> 00:14:18,350
<font color="#E5E5E5">cypher text query per per source and now</font>

305
00:14:16,190 --> 00:14:21,230
let's go to step<font color="#CCCCCC"> three now we want to</font>

306
00:14:18,350 --> 00:14:23,840
see how do<font color="#CCCCCC"> we achieve security only</font><font color="#E5E5E5"> one</font>

307
00:14:21,230 --> 00:14:25,250
one input and only one from one if you

308
00:14:23,840 --> 00:14:27,320
have only one input source so<font color="#E5E5E5"> this is</font>

309
00:14:25,250 --> 00:14:29,210
basically just single input<font color="#CCCCCC"> function</font>

310
00:14:27,320 --> 00:14:31,910
encryption normal functional encryption

311
00:14:29,210 --> 00:14:37,340
but<font color="#E5E5E5"> with many supporting many ciphertext</font>

312
00:14:31,910 --> 00:14:39,260
<font color="#CCCCCC">ways</font><font color="#E5E5E5"> and this is actually this line of</font>

313
00:14:37,340 --> 00:14:41,090
work<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> started in 2015 with a</font>

314
00:14:39,260 --> 00:14:45,230
work by Abdullah<font color="#CCCCCC"> boots</font><font color="#E5E5E5"> the karo</font>

315
00:14:41,090 --> 00:14:47,180
impartial<font color="#CCCCCC"> in each day year they showed</font>

316
00:14:45,230 --> 00:14:51,590
<font color="#CCCCCC">that in a</font><font color="#E5E5E5"> product</font><font color="#CCCCCC"> samsung encryption for</font>

317
00:14:47,180 --> 00:14:53,660
one slot can be constructed and the way

318
00:14:51,590 --> 00:14:58,190
it works<font color="#E5E5E5"> here I will present it</font><font color="#CCCCCC"> for a</font>

319
00:14:53,660 --> 00:15:00,500
group<font color="#CCCCCC"> rank group eg of</font><font color="#E5E5E5"> order Q</font><font color="#CCCCCC"> well the</font>

320
00:14:58,190 --> 00:15:03,440
<font color="#E5E5E5">master</font><font color="#CCCCCC"> 50 remains the same so</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> still</font>

321
00:15:00,500 --> 00:15:05,450
a uniform vector V from zqm the

322
00:15:03,440 --> 00:15:05,750
encryption now though changes a little

323
00:15:05,450 --> 00:15:08,510
bit

324
00:15:05,750 --> 00:15:11,810
it's we will draw a uniform<font color="#CCCCCC"> random</font><font color="#E5E5E5"> our</font>

325
00:15:08,510 --> 00:15:13,970
<font color="#E5E5E5">only from scalar are very scanner</font><font color="#CCCCCC"> xnv</font>

326
00:15:11,810 --> 00:15:15,229
here are vectors so everything with

327
00:15:13,970 --> 00:15:17,000
color is a lecturer

328
00:15:15,230 --> 00:15:21,470
if you don't have a color<font color="#CCCCCC"> it's probably</font>

329
00:15:17,000 --> 00:15:24,410
not<font color="#CCCCCC"> a bit so we had G to</font><font color="#E5E5E5"> D R and G to</font>

330
00:15:21,470 --> 00:15:27,980
the X<font color="#E5E5E5"> plus RV the</font><font color="#CCCCCC"> kitchen remains the</font>

331
00:15:24,410 --> 00:15:30,110
same and the the hope is<font color="#E5E5E5"> if we try to</font>

332
00:15:27,980 --> 00:15:34,190
argue security in a<font color="#E5E5E5"> very intuitive way</font>

333
00:15:30,110 --> 00:15:38,060
<font color="#E5E5E5">the hope is that this RV here will from</font>

334
00:15:34,190 --> 00:15:39,710
<font color="#CCCCCC">DBH assumption will look like</font><font color="#E5E5E5"> a</font>

335
00:15:38,060 --> 00:15:41,989
uniformly<font color="#E5E5E5"> random vector for each new</font>

336
00:15:39,710 --> 00:15:44,030
exploration encryption and it will

337
00:15:41,990 --> 00:15:45,920
behave<font color="#E5E5E5"> like a one-time pad so this is</font>

338
00:15:44,030 --> 00:15:49,730
actually a generalization of<font color="#CCCCCC"> el-hammam</font>

339
00:15:45,920 --> 00:15:53,180
a<font color="#CCCCCC"> nice generalization of the Altima so</font>

340
00:15:49,730 --> 00:15:56,480
this is how you do it for<font color="#CCCCCC"> DDH but</font><font color="#E5E5E5"> it can</font>

341
00:15:53,180 --> 00:15:58,880
also using for<font color="#CCCCCC"> example this</font><font color="#E5E5E5"> 2016 paper</font>

342
00:15:56,480 --> 00:16:02,690
by<font color="#CCCCCC"> other-worldly bells</font><font color="#E5E5E5"> the bells</font><font color="#CCCCCC"> tell a</font>

343
00:15:58,880 --> 00:16:08,420
we can do we<font color="#CCCCCC"> can make this step also</font>

344
00:16:02,690 --> 00:16:11,120
from<font color="#CCCCCC"> fw or this year and actually if</font>

345
00:16:08,420 --> 00:16:14,569
this<font color="#E5E5E5"> step it's more efficient if you</font>

346
00:16:11,120 --> 00:16:18,830
date with these<font color="#E5E5E5"> assumptions than with</font>

347
00:16:14,570 --> 00:16:21,650
<font color="#CCCCCC">Vth and what they</font><font color="#E5E5E5"> can say here also is</font>

348
00:16:18,830 --> 00:16:24,830
the<font color="#E5E5E5"> fact that here we</font><font color="#CCCCCC"> cannot really hope</font>

349
00:16:21,650 --> 00:16:27,050
<font color="#E5E5E5">for here we have</font><font color="#CCCCCC"> to rely on updation</font>

350
00:16:24,830 --> 00:16:29,270
assumption at this step we cannot mask

351
00:16:27,050 --> 00:16:32,859
<font color="#E5E5E5">all these messages all these queries</font>

352
00:16:29,270 --> 00:16:35,060
<font color="#CCCCCC">just from the master</font><font color="#E5E5E5"> 250 it's not enough</font>

353
00:16:32,860 --> 00:16:36,410
so let's look at the big<font color="#E5E5E5"> one</font><font color="#CCCCCC"> map and</font>

354
00:16:35,060 --> 00:16:41,449
let's see how to<font color="#E5E5E5"> put everything together</font>

355
00:16:36,410 --> 00:16:43,910
<font color="#E5E5E5">now we saw how</font><font color="#CCCCCC"> to do it how to do how to</font>

356
00:16:41,450 --> 00:16:45,440
achieve a scheme that<font color="#E5E5E5"> has that can</font>

357
00:16:43,910 --> 00:16:48,020
achieve security<font color="#E5E5E5"> for a ciphertext theory</font>

358
00:16:45,440 --> 00:16:50,800
<font color="#E5E5E5">and one input then we saw that</font><font color="#CCCCCC"> just by</font>

359
00:16:48,020 --> 00:16:53,660
making<font color="#CCCCCC"> the psalms we can make we can</font>

360
00:16:50,800 --> 00:16:57,740
<font color="#CCCCCC">bootstrap this</font><font color="#E5E5E5"> to many inputs but only</font>

361
00:16:53,660 --> 00:16:59,930
one ciphertext<font color="#E5E5E5"> great for input</font><font color="#CCCCCC"> in</font>

362
00:16:57,740 --> 00:17:02,420
parallel we have seen how<font color="#CCCCCC"> to do this</font>

363
00:16:59,930 --> 00:17:05,959
<font color="#E5E5E5">only for</font><font color="#CCCCCC"> one input source how to support</font>

364
00:17:02,420 --> 00:17:09,709
<font color="#E5E5E5">multiple</font><font color="#CCCCCC"> ciphertext queries here just</font>

365
00:17:05,959 --> 00:17:12,020
<font color="#CCCCCC">alcohol now</font><font color="#E5E5E5"> putting everything together</font>

366
00:17:09,709 --> 00:17:14,390
we the<font color="#CCCCCC"> master 250 will be the</font><font color="#E5E5E5"> master</font>

367
00:17:12,020 --> 00:17:17,209
<font color="#CCCCCC">typically from step 2 so we'll have the</font>

368
00:17:14,390 --> 00:17:21,500
uisce beathe<font color="#E5E5E5"> um a specificity from step</font>

369
00:17:17,209 --> 00:17:24,470
3<font color="#CCCCCC"> will have the</font><font color="#E5E5E5"> V ice and the the</font>

370
00:17:21,500 --> 00:17:27,380
encryption<font color="#E5E5E5"> is a double</font><font color="#CCCCCC"> a encryption so</font>

371
00:17:24,470 --> 00:17:29,660
encrypting in step 4

372
00:17:27,380 --> 00:17:38,990
in<font color="#E5E5E5"> the scheme for it's not a step for</font>

373
00:17:29,660 --> 00:17:42,650
<font color="#CCCCCC">skin for vector X will be just yeah</font><font color="#E5E5E5"> so</font>

374
00:17:38,990 --> 00:17:44,840
<font color="#CCCCCC">including LXi in the step</font><font color="#E5E5E5"> for there is</font>

375
00:17:42,650 --> 00:17:49,789
just the encryption<font color="#E5E5E5"> or it can step</font><font color="#CCCCCC"> to so</font>

376
00:17:44,840 --> 00:17:51,080
here this one uses UI and then so this

377
00:17:49,789 --> 00:17:55,100
encryption we apply encryption is step

378
00:17:51,080 --> 00:17:57,230
<font color="#CCCCCC">three the one</font><font color="#E5E5E5"> that uses V and the reason</font>

379
00:17:55,100 --> 00:17:58,750
why this<font color="#E5E5E5"> works that why we can do this</font>

380
00:17:57,230 --> 00:18:02,870
lab or double layer encryption is

381
00:17:58,750 --> 00:18:05,270
because the outputs of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> n2 are</font>

382
00:18:02,870 --> 00:18:07,969
compatible with<font color="#E5E5E5"> the inputs of entry so</font>

383
00:18:05,270 --> 00:18:12,918
<font color="#E5E5E5">you have to work a little bit</font><font color="#CCCCCC"> to to make</font>

384
00:18:07,970 --> 00:18:14,600
<font color="#E5E5E5">sure that these</font><font color="#CCCCCC"> two fit and the</font><font color="#E5E5E5"> the key</font>

385
00:18:12,919 --> 00:18:17,120
generation<font color="#E5E5E5"> will just be the key</font>

386
00:18:14,600 --> 00:18:20,780
<font color="#E5E5E5">generation is step</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> this some of</font><font color="#CCCCCC"> you</font>

387
00:18:17,120 --> 00:18:22,699
guys<font color="#CCCCCC"> why is exactly the one here but on</font>

388
00:18:20,780 --> 00:18:28,280
the Y side things change a little bit we

389
00:18:22,700 --> 00:18:31,630
need<font color="#CCCCCC"> to apply T gen 3 on the Y eyes</font><font color="#E5E5E5"> so</font>

390
00:18:28,280 --> 00:18:37,360
why does it<font color="#CCCCCC"> work</font><font color="#E5E5E5"> we can</font><font color="#CCCCCC"> argue that</font>

391
00:18:31,630 --> 00:18:39,710
<font color="#CCCCCC">everything</font><font color="#E5E5E5"> decrypts correctly by just so</font>

392
00:18:37,360 --> 00:18:43,428
first you want to decrypt<font color="#E5E5E5"> the outer</font>

393
00:18:39,710 --> 00:18:45,650
layer with a clip<font color="#CCCCCC"> end and three by using</font>

394
00:18:43,429 --> 00:18:48,890
agent<font color="#CCCCCC"> three so</font><font color="#E5E5E5"> you're cooking the outer</font>

395
00:18:45,650 --> 00:18:51,820
layer<font color="#E5E5E5"> the correctness of this comes just</font>

396
00:18:48,890 --> 00:18:54,950
from the practice of<font color="#CCCCCC"> skin 3 and</font>

397
00:18:51,820 --> 00:18:59,030
decrypting the the the inner layer the

398
00:18:54,950 --> 00:19:01,580
egg<font color="#CCCCCC"> 2 will come because this after we</font><font color="#E5E5E5"> we</font>

399
00:18:59,030 --> 00:19:07,039
got rid of being<font color="#CCCCCC"> 3 we</font><font color="#E5E5E5"> are only left with</font>

400
00:19:01,580 --> 00:19:10,129
<font color="#E5E5E5">n 2 and the</font><font color="#CCCCCC"> key Jen from step 2 so by</font>

401
00:19:07,039 --> 00:19:14,809
the correctness of<font color="#E5E5E5"> of</font><font color="#CCCCCC"> set</font><font color="#E5E5E5"> to we can</font>

402
00:19:10,130 --> 00:19:16,789
decrypt<font color="#E5E5E5"> completely but of course I mean</font>

403
00:19:14,809 --> 00:19:18,020
here we can put<font color="#E5E5E5"> other schemes if you put</font>

404
00:19:16,789 --> 00:19:23,210
<font color="#CCCCCC">a loblolly even</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> becomes a little</font><font color="#E5E5E5"> bit</font>

405
00:19:18,020 --> 00:19:28,850
<font color="#E5E5E5">more complicated</font><font color="#CCCCCC"> VCR but this is the big</font>

406
00:19:23,210 --> 00:19:31,070
picture<font color="#CCCCCC"> so to conclude what do we</font>

407
00:19:28,850 --> 00:19:34,580
achieve<font color="#E5E5E5"> we have a construction where our</font>

408
00:19:31,070 --> 00:19:36,830
pairings compared<font color="#E5E5E5"> to the previous work</font>

409
00:19:34,580 --> 00:19:39,009
<font color="#E5E5E5">we remove the need for body in your</font>

410
00:19:36,830 --> 00:19:41,080
groups

411
00:19:39,009 --> 00:19:44,559
just as them we achieve without<font color="#E5E5E5"> the</font>

412
00:19:41,080 --> 00:19:49,570
security<font color="#E5E5E5"> we support larger</font><font color="#CCCCCC"> messes faces</font>

413
00:19:44,559 --> 00:19:53,408
<font color="#CCCCCC">why is this it's</font><font color="#E5E5E5"> because if you if you</font>

414
00:19:49,570 --> 00:19:56,950
use<font color="#CCCCCC"> TDH</font><font color="#E5E5E5"> then the message is encrypted in</font>

415
00:19:53,409 --> 00:19:59,590
<font color="#E5E5E5">the message is decrypted in the</font><font color="#CCCCCC"> exponent</font>

416
00:19:56,950 --> 00:20:02,230
<font color="#CCCCCC">so</font><font color="#E5E5E5"> you'll have some kind of bound on</font><font color="#CCCCCC"> how</font>

417
00:19:59,590 --> 00:20:06,908
big<font color="#E5E5E5"> X can</font><font color="#CCCCCC"> be which</font><font color="#E5E5E5"> you don't have if you</font>

418
00:20:02,230 --> 00:20:08,409
rely on LW or<font color="#CCCCCC"> DCR so we can support more</font>

419
00:20:06,909 --> 00:20:12,070
<font color="#CCCCCC">lot more assumptions and we have more</font>

420
00:20:08,409 --> 00:20:13,509
efficient<font color="#E5E5E5"> schemes</font><font color="#CCCCCC"> and we of course just</font>

421
00:20:12,070 --> 00:20:15,999
<font color="#E5E5E5">as the</font><font color="#CCCCCC"> previous work we achieve a</font>

422
00:20:13,509 --> 00:20:17,289
polynomial<font color="#CCCCCC"> number of slots we can we</font>

423
00:20:15,999 --> 00:20:21,940
have security for<font color="#CCCCCC"> polynomial number of</font>

424
00:20:17,289 --> 00:20:25,029
inputs but only relying on<font color="#E5E5E5"> one</font>

425
00:20:21,940 --> 00:20:27,190
polynomial hardness assumptions and now

426
00:20:25,029 --> 00:20:29,879
I got a little bit about our second

427
00:20:27,190 --> 00:20:32,919
<font color="#CCCCCC">contribution the function hiding scheme</font>

428
00:20:29,879 --> 00:20:35,889
here the<font color="#E5E5E5"> security goal is that if you</font>

429
00:20:32,919 --> 00:20:38,559
have the encryption<font color="#E5E5E5"> of X and the</font>

430
00:20:35,889 --> 00:20:41,769
<font color="#E5E5E5">decryption key of Y what</font><font color="#CCCCCC"> is being leaked</font>

431
00:20:38,559 --> 00:20:45,869
is just the inner product of XY<font color="#E5E5E5"> size of</font>

432
00:20:41,769 --> 00:20:45,869
X<font color="#E5E5E5"> but now this</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> Y is hidden as well</font>

433
00:20:46,529 --> 00:20:52,659
so we do this<font color="#E5E5E5"> by your by</font><font color="#CCCCCC"> your by</font>

434
00:20:50,859 --> 00:20:54,369
applying to an idea which was<font color="#E5E5E5"> first</font>

435
00:20:52,659 --> 00:20:58,539
<font color="#E5E5E5">appeared</font><font color="#CCCCCC"> in a paper by</font><font color="#E5E5E5"> Lena dichotomous</font>

436
00:20:54,369 --> 00:21:00,730
<font color="#E5E5E5">on AB double layer encryption</font><font color="#CCCCCC"> we still</font>

437
00:20:58,539 --> 00:21:03,669
have to have to rely on by in<font color="#E5E5E5"> your</font>

438
00:21:00,730 --> 00:21:04,899
groups but what is nice<font color="#CCCCCC"> is that the</font>

439
00:21:03,669 --> 00:21:10,119
scheme is<font color="#CCCCCC"> adaptively secure and which</font>

440
00:21:04,899 --> 00:21:13,689
you program and many inputs and

441
00:21:10,119 --> 00:21:15,100
comparing this to previous work we

442
00:21:13,690 --> 00:21:18,489
started<font color="#CCCCCC"> from this scheme</font><font color="#E5E5E5"> and we build</font>

443
00:21:15,100 --> 00:21:21,850
<font color="#CCCCCC">upon it and we have almost</font><font color="#E5E5E5"> the same</font>

444
00:21:18,489 --> 00:21:24,029
<font color="#CCCCCC">efficiency but this time we also check</font>

445
00:21:21,850 --> 00:21:27,699
function hiding<font color="#CCCCCC"> forum</font><font color="#E5E5E5"> almost for free</font>

446
00:21:24,029 --> 00:21:29,649
and<font color="#E5E5E5"> yeah I forgot to</font><font color="#CCCCCC"> mention</font><font color="#E5E5E5"> but the</font>

447
00:21:27,700 --> 00:21:33,460
<font color="#CCCCCC">parent reconstruction is also almost</font><font color="#E5E5E5"> for</font>

448
00:21:29,649 --> 00:21:38,039
<font color="#CCCCCC">free in compared with this paper for</font>

449
00:21:33,460 --> 00:21:40,269
which is concurrent work<font color="#E5E5E5"> we they have</font>

450
00:21:38,039 --> 00:21:42,730
they<font color="#CCCCCC"> help they</font><font color="#E5E5E5"> achieve things in a</font>

451
00:21:40,269 --> 00:21:47,200
better model<font color="#E5E5E5"> and also</font><font color="#CCCCCC"> a little bit</font><font color="#E5E5E5"> more</font>

452
00:21:42,730 --> 00:21:49,350
efficient so H here<font color="#CCCCCC"> is just that the</font>

453
00:21:47,200 --> 00:21:52,809
function is<font color="#E5E5E5"> a function hiding</font>

454
00:21:49,350 --> 00:21:55,750
so now I'm ready<font color="#CCCCCC"> to compute I</font><font color="#E5E5E5"> think it's</font>

455
00:21:52,809 --> 00:21:58,149
I can finish it<font color="#CCCCCC"> an open problem</font><font color="#E5E5E5"> is it</font>

456
00:21:55,750 --> 00:22:00,429
possible to adapt our techniques<font color="#E5E5E5"> to</font><font color="#CCCCCC"> four</font>

457
00:21:58,150 --> 00:22:02,650
other classes<font color="#CCCCCC"> of functions which are in</font>

458
00:22:00,429 --> 00:22:06,850
your product so quadratic functions

459
00:22:02,650 --> 00:22:10,390
<font color="#CCCCCC">general</font><font color="#E5E5E5"> polynomials even more</font><font color="#CCCCCC"> this is a</font>

460
00:22:06,850 --> 00:22:12,240
very interesting question<font color="#CCCCCC"> so thank</font><font color="#E5E5E5"> you</font>

461
00:22:10,390 --> 00:22:17,890
have questions

462
00:22:12,240 --> 00:22:17,890
[Applause]

