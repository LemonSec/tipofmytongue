1
00:00:05,290 --> 00:00:11,570
unfortunately last night my computer

2
00:00:07,910 --> 00:00:14,389
<font color="#E5E5E5">broke</font><font color="#CCCCCC"> down so</font><font color="#E5E5E5"> luckily I had</font><font color="#CCCCCC"> some backup</font>

3
00:00:11,570 --> 00:00:17,150
of<font color="#CCCCCC"> my slides</font><font color="#E5E5E5"> otherwise I guess I would</font>

4
00:00:14,389 --> 00:00:18,890
have<font color="#E5E5E5"> had to use a</font><font color="#CCCCCC"> whiteboard here</font><font color="#E5E5E5"> but</font>

5
00:00:17,150 --> 00:00:21,829
hopefully<font color="#E5E5E5"> hopefully there</font><font color="#CCCCCC"> won't be any</font>

6
00:00:18,890 --> 00:00:24,230
<font color="#E5E5E5">there won't be any glitches so okay so</font>

7
00:00:21,829 --> 00:00:28,759
<font color="#E5E5E5">and this is joint</font><font color="#CCCCCC"> work with Manuel</font>

8
00:00:24,230 --> 00:00:30,470
Barbosa<font color="#E5E5E5"> so</font><font color="#CCCCCC"> who is also here in the</font>

9
00:00:28,759 --> 00:00:32,329
audience<font color="#CCCCCC"> so if you'd like</font><font color="#E5E5E5"> to come</font>

10
00:00:30,470 --> 00:00:35,269
afterwards and talk to any<font color="#E5E5E5"> of us about</font>

11
00:00:32,329 --> 00:00:41,450
<font color="#CCCCCC">the results or just say hi</font><font color="#E5E5E5"> he's also</font>

12
00:00:35,270 --> 00:00:45,500
<font color="#E5E5E5">right</font><font color="#CCCCCC"> okay so let me</font><font color="#E5E5E5"> start with a topic</font>

13
00:00:41,450 --> 00:00:46,970
that<font color="#E5E5E5"> should be familiar to everyone here</font>

14
00:00:45,500 --> 00:00:49,760
in<font color="#CCCCCC"> the audience</font><font color="#E5E5E5"> if</font><font color="#CCCCCC"> you don't know about</font>

15
00:00:46,970 --> 00:00:51,739
hash functions you<font color="#E5E5E5"> probably should not</font>

16
00:00:49,760 --> 00:00:54,890
be<font color="#CCCCCC"> here at crypto</font><font color="#E5E5E5"> so other hash</font>

17
00:00:51,740 --> 00:00:58,220
functions functions are functions<font color="#CCCCCC"> that</font>

18
00:00:54,890 --> 00:01:00,260
take<font color="#E5E5E5"> a long</font><font color="#CCCCCC"> and arbitrary text</font><font color="#E5E5E5"> like this</font>

19
00:00:58,220 --> 00:01:02,150
book<font color="#E5E5E5"> from the medieval ages and then</font>

20
00:01:00,260 --> 00:01:04,158
applies a hash function<font color="#CCCCCC"> apply the</font>

21
00:01:02,150 --> 00:01:07,789
function<font color="#E5E5E5"> to it and outputs a short and</font>

22
00:01:04,159 --> 00:01:09,290
random looking string<font color="#CCCCCC"> so as you know</font>

23
00:01:07,790 --> 00:01:12,500
there<font color="#E5E5E5"> are many protocols out there that</font>

24
00:01:09,290 --> 00:01:14,750
use hash functions however<font color="#CCCCCC"> provable</font>

25
00:01:12,500 --> 00:01:18,620
security for these protocols<font color="#E5E5E5"> are not</font>

26
00:01:14,750 --> 00:01:20,600
<font color="#E5E5E5">always possible</font><font color="#CCCCCC"> and one reason for this</font>

27
00:01:18,620 --> 00:01:23,000
<font color="#E5E5E5">is that when designers have implemented</font>

28
00:01:20,600 --> 00:01:24,798
<font color="#E5E5E5">these protocols they have actually</font>

29
00:01:23,000 --> 00:01:29,510
assumed that these hash functions behave

30
00:01:24,799 --> 00:01:31,430
<font color="#E5E5E5">like random functions so what they have</font>

31
00:01:29,510 --> 00:01:34,850
assumed is<font color="#CCCCCC"> that this hash function here</font>

32
00:01:31,430 --> 00:01:37,909
<font color="#E5E5E5">actually behaves like a random</font><font color="#CCCCCC"> function</font>

33
00:01:34,850 --> 00:01:40,820
which is<font color="#E5E5E5"> more commonly known as a random</font>

34
00:01:37,909 --> 00:01:43,250
Oracle<font color="#E5E5E5"> and a random Oracle is basically</font>

35
00:01:40,820 --> 00:01:47,779
a<font color="#E5E5E5"> function that outputs independent and</font>

36
00:01:43,250 --> 00:01:50,390
uniform output inputs that it gets and

37
00:01:47,780 --> 00:01:54,979
this<font color="#E5E5E5"> methodology to design protocols</font>

38
00:01:50,390 --> 00:02:00,490
<font color="#E5E5E5">have</font><font color="#CCCCCC"> been very successful so</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> can use</font>

39
00:01:54,979 --> 00:02:00,490
the random<font color="#CCCCCC"> Oracle methodology to to</font>

40
00:02:00,759 --> 00:02:07,280
study the security<font color="#CCCCCC"> of poverty encryption</font>

41
00:02:03,409 --> 00:02:09,470
<font color="#E5E5E5">schemes signature signature schemes</font><font color="#CCCCCC"> as</font>

42
00:02:07,280 --> 00:02:13,849
far as I know parts<font color="#E5E5E5"> of the TLS protocol</font>

43
00:02:09,470 --> 00:02:16,319
still use the random Oracle symmetric

44
00:02:13,849 --> 00:02:19,000
schemes<font color="#CCCCCC"> it's</font>

45
00:02:16,319 --> 00:02:21,548
so what<font color="#E5E5E5"> these random Oracle's actually</font>

46
00:02:19,000 --> 00:02:25,290
mother is an ideal hash function<font color="#E5E5E5"> hash</font>

47
00:02:21,549 --> 00:02:30,730
functions just output independent random

48
00:02:25,290 --> 00:02:33,129
outputs so what is this talk<font color="#CCCCCC"> about so</font>

49
00:02:30,730 --> 00:02:36,548
let's talk<font color="#CCCCCC"> we're</font><font color="#E5E5E5"> giving a we are given a</font>

50
00:02:33,129 --> 00:02:39,879
random<font color="#E5E5E5"> Oracle and our task is to</font><font color="#CCCCCC"> build a</font>

51
00:02:36,549 --> 00:02:42,549
encryption scheme<font color="#E5E5E5"> so you might say</font><font color="#CCCCCC"> that</font>

52
00:02:39,879 --> 00:02:44,530
well surely this is a problem that<font color="#CCCCCC"> has</font>

53
00:02:42,549 --> 00:02:46,450
been studied<font color="#CCCCCC"> in cryptography in the last</font>

54
00:02:44,530 --> 00:02:47,890
40<font color="#CCCCCC"> years you know how can how can we</font>

55
00:02:46,450 --> 00:02:50,950
build<font color="#E5E5E5"> an encryption</font><font color="#CCCCCC"> scheme from</font><font color="#E5E5E5"> a hash</font>

56
00:02:47,890 --> 00:02:53,230
function<font color="#CCCCCC"> well but the difference in this</font>

57
00:02:50,950 --> 00:02:54,940
talk is<font color="#CCCCCC"> that as I as I mentioned</font><font color="#E5E5E5"> a</font>

58
00:02:53,230 --> 00:02:56,768
random<font color="#E5E5E5"> Oracle's in an ideal hash</font>

59
00:02:54,940 --> 00:02:59,079
function<font color="#E5E5E5"> and what we want to do is that</font>

60
00:02:56,769 --> 00:03:01,060
we want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> inherit all the strengths</font>

61
00:02:59,079 --> 00:03:03,370
that<font color="#CCCCCC"> are built into</font><font color="#E5E5E5"> this hash function</font>

62
00:03:01,060 --> 00:03:05,760
into our<font color="#E5E5E5"> encryption scheme that is we</font>

63
00:03:03,370 --> 00:03:12,400
<font color="#E5E5E5">want</font><font color="#CCCCCC"> to build</font><font color="#E5E5E5"> an ideal encryption scheme</font>

64
00:03:05,760 --> 00:03:15,099
now I told you<font color="#CCCCCC"> that</font><font color="#E5E5E5"> an ideal hash</font>

65
00:03:12,400 --> 00:03:17,500
function is a random function and that

66
00:03:15,099 --> 00:03:20,290
<font color="#E5E5E5">this raises</font><font color="#CCCCCC"> the question what is the</font>

67
00:03:17,500 --> 00:03:24,280
appropriate<font color="#CCCCCC"> reference object</font><font color="#E5E5E5"> for an</font>

68
00:03:20,290 --> 00:03:26,200
<font color="#E5E5E5">ideal encryption scheme okay so with</font>

69
00:03:24,280 --> 00:03:28,299
<font color="#E5E5E5">that let</font><font color="#CCCCCC"> me</font><font color="#E5E5E5"> tell you what an</font>

70
00:03:26,200 --> 00:03:30,940
authenticated encryption scheme is and

71
00:03:28,299 --> 00:03:33,489
here's syntax for authenticated

72
00:03:30,940 --> 00:03:36,010
encryption<font color="#CCCCCC"> it</font><font color="#E5E5E5"> basically consists of</font>

73
00:03:33,489 --> 00:03:39,459
three algorithms<font color="#E5E5E5"> key generation which</font>

74
00:03:36,010 --> 00:03:41,849
outputs a key<font color="#E5E5E5"> K</font><font color="#CCCCCC"> an encryption</font><font color="#E5E5E5"> algorithm</font>

75
00:03:39,459 --> 00:03:45,370
which takes<font color="#CCCCCC"> a key K announced</font><font color="#E5E5E5"> n</font>

76
00:03:41,849 --> 00:03:49,750
associate data<font color="#E5E5E5"> a a message</font><font color="#CCCCCC"> M</font><font color="#E5E5E5"> an</font>

77
00:03:45,370 --> 00:03:52,329
expansion parameter tau and<font color="#E5E5E5"> outputs the</font>

78
00:03:49,750 --> 00:03:55,030
cipher text<font color="#CCCCCC"> which is tablets</font><font color="#E5E5E5"> longer than</font>

79
00:03:52,329 --> 00:03:57,639
the message and decryption takes key

80
00:03:55,030 --> 00:04:01,449
nonce<font color="#CCCCCC"> search</font><font color="#E5E5E5"> it data ciphertext and</font>

81
00:03:57,639 --> 00:04:03,160
outputs message or<font color="#CCCCCC"> perp</font><font color="#E5E5E5"> and the</font>

82
00:04:01,449 --> 00:04:05,590
intuitive security properties that we

83
00:04:03,160 --> 00:04:07,930
need are confidentiality and

84
00:04:05,590 --> 00:04:10,000
authenticity<font color="#E5E5E5"> in the sense that nothing</font>

85
00:04:07,930 --> 00:04:13,569
<font color="#E5E5E5">about the messages are leaked under a</font>

86
00:04:10,000 --> 00:04:15,879
<font color="#E5E5E5">randomly</font><font color="#CCCCCC"> chosen an unknown key and also</font>

87
00:04:13,569 --> 00:04:18,070
on authenticity in<font color="#CCCCCC"> the sense that</font><font color="#E5E5E5"> an</font>

88
00:04:15,879 --> 00:04:21,310
adversary cannot<font color="#CCCCCC"> forge</font><font color="#E5E5E5"> a new cipher text</font>

89
00:04:18,070 --> 00:04:24,900
without<font color="#E5E5E5"> knowing the key so let me</font>

90
00:04:21,310 --> 00:04:31,360
simplify this even<font color="#CCCCCC"> further</font>

91
00:04:24,900 --> 00:04:33,280
look at just a very<font color="#E5E5E5"> simple version of a</font>

92
00:04:31,360 --> 00:04:34,960
<font color="#CCCCCC">Iver</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> have just got rid of the nonce</font>

93
00:04:33,280 --> 00:04:38,049
and<font color="#E5E5E5"> associate data so we have key</font>

94
00:04:34,960 --> 00:04:40,539
generation<font color="#CCCCCC"> encryption and decryption and</font>

95
00:04:38,050 --> 00:04:42,820
if you think<font color="#CCCCCC"> about it for a second</font>

96
00:04:40,540 --> 00:04:46,330
you'll see<font color="#E5E5E5"> that this</font><font color="#CCCCCC"> is basically a</font><font color="#E5E5E5"> heat</font>

97
00:04:42,820 --> 00:04:48,040
injection<font color="#CCCCCC"> why injection because</font><font color="#E5E5E5"> we want</font>

98
00:04:46,330 --> 00:04:50,650
different messages to go to different

99
00:04:48,040 --> 00:04:51,910
cipher texts<font color="#E5E5E5"> so we can actually uniquely</font>

100
00:04:50,650 --> 00:04:54,010
decrypt<font color="#E5E5E5"> these ciphertexts</font>

101
00:04:51,910 --> 00:04:58,570
so it injected<font color="#CCCCCC"> lis Maps messages to</font>

102
00:04:54,010 --> 00:05:02,800
<font color="#CCCCCC">cypher tips</font><font color="#E5E5E5"> okay so what is ideal</font>

103
00:04:58,570 --> 00:05:06,010
<font color="#CCCCCC">encryption</font><font color="#E5E5E5"> so hash functions are</font><font color="#CCCCCC"> just</font>

104
00:05:02,800 --> 00:05:09,610
functions<font color="#E5E5E5"> and as I told</font><font color="#CCCCCC"> an ideal hash</font>

105
00:05:06,010 --> 00:05:12,610
function<font color="#CCCCCC"> is a random function</font><font color="#E5E5E5"> what our</font>

106
00:05:09,610 --> 00:05:16,080
ciphers<font color="#CCCCCC"> or block ciphers</font><font color="#E5E5E5"> these are keyed</font>

107
00:05:12,610 --> 00:05:20,590
permutations<font color="#E5E5E5"> so</font><font color="#CCCCCC"> what is an ideal</font><font color="#E5E5E5"> cipher</font>

108
00:05:16,080 --> 00:05:22,990
<font color="#E5E5E5">it's a random key permutation encryption</font>

109
00:05:20,590 --> 00:05:25,299
<font color="#E5E5E5">well we just discussed that it's a keyed</font>

110
00:05:22,990 --> 00:05:27,490
injection so what's a what's an ideal

111
00:05:25,300 --> 00:05:30,940
encryption it's a very easy<font color="#CCCCCC"> exercise</font>

112
00:05:27,490 --> 00:05:36,130
that you<font color="#E5E5E5"> can just steal in randomly it's</font>

113
00:05:30,940 --> 00:05:38,140
a random key to injection<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> and this</font>

114
00:05:36,130 --> 00:05:40,780
<font color="#E5E5E5">actually gives rise</font><font color="#CCCCCC"> to a new</font><font color="#E5E5E5"> model of</font>

115
00:05:38,140 --> 00:05:42,490
computation which is somewhere in

116
00:05:40,780 --> 00:05:44,619
between the random<font color="#E5E5E5"> Oracle model</font>

117
00:05:42,490 --> 00:05:47,200
corresponding to random functions and

118
00:05:44,620 --> 00:05:49,060
the ideal<font color="#E5E5E5"> cypher model corresponding to</font>

119
00:05:47,200 --> 00:05:51,190
the random<font color="#E5E5E5"> key permutation so it's</font>

120
00:05:49,060 --> 00:05:54,160
somewhere in between<font color="#E5E5E5"> because injections</font>

121
00:05:51,190 --> 00:05:58,930
<font color="#E5E5E5">have more structure than functions but</font>

122
00:05:54,160 --> 00:06:01,090
less structures and permutations okay so

123
00:05:58,930 --> 00:06:02,890
let's go back<font color="#CCCCCC"> to this picture so what is</font>

124
00:06:01,090 --> 00:06:05,080
the object<font color="#E5E5E5"> that</font><font color="#CCCCCC"> the random</font><font color="#E5E5E5"> keyed</font>

125
00:06:02,890 --> 00:06:08,320
injection and then<font color="#E5E5E5"> the question becomes</font>

126
00:06:05,080 --> 00:06:11,500
how<font color="#CCCCCC"> can we go</font><font color="#E5E5E5"> from random functions to</font>

127
00:06:08,320 --> 00:06:13,030
random injections and there's a

128
00:06:11,500 --> 00:06:15,100
beautiful framework out there

129
00:06:13,030 --> 00:06:18,010
formalizing<font color="#E5E5E5"> what it means to go</font><font color="#CCCCCC"> from</font>

130
00:06:15,100 --> 00:06:20,890
<font color="#E5E5E5">different systems called</font><font color="#CCCCCC"> in</font>

131
00:06:18,010 --> 00:06:23,289
differentiability<font color="#CCCCCC"> so let</font><font color="#E5E5E5"> me just briefly</font>

132
00:06:20,890 --> 00:06:26,530
talk<font color="#E5E5E5"> about what the in differentiability</font>

133
00:06:23,290 --> 00:06:29,200
definition says so in differentiability

134
00:06:26,530 --> 00:06:31,570
basically says that<font color="#E5E5E5"> basically tries to</font>

135
00:06:29,200 --> 00:06:34,300
define what it means<font color="#CCCCCC"> for a construction</font>

136
00:06:31,570 --> 00:06:35,120
<font color="#E5E5E5">C with access to random Oracle to</font><font color="#CCCCCC"> be as</font>

137
00:06:34,300 --> 00:06:38,330
good

138
00:06:35,120 --> 00:06:40,669
another random<font color="#E5E5E5"> system here</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> ideal</font>

139
00:06:38,330 --> 00:06:43,159
encryption scheme<font color="#E5E5E5"> so one attempt in</font>

140
00:06:40,669 --> 00:06:44,930
doing this would be<font color="#CCCCCC"> to basically say</font>

141
00:06:43,160 --> 00:06:47,389
that<font color="#E5E5E5"> the construction with access</font><font color="#CCCCCC"> to the</font>

142
00:06:44,930 --> 00:06:51,620
random<font color="#E5E5E5"> Oracle is indistinguishable from</font>

143
00:06:47,389 --> 00:06:53,600
ideal encryption but you might<font color="#E5E5E5"> say</font><font color="#CCCCCC"> that</font>

144
00:06:51,620 --> 00:06:55,490
well this<font color="#E5E5E5"> is not everything</font><font color="#CCCCCC"> that the</font>

145
00:06:53,600 --> 00:06:57,620
adversary<font color="#E5E5E5"> has access to the adversary</font>

146
00:06:55,490 --> 00:06:59,240
also has access<font color="#CCCCCC"> to the underlying random</font>

147
00:06:57,620 --> 00:07:02,150
Oracle in trying to distinguish these

148
00:06:59,240 --> 00:07:06,229
two<font color="#E5E5E5"> systems so we can say</font><font color="#CCCCCC"> that well</font><font color="#E5E5E5"> how</font>

149
00:07:02,150 --> 00:07:08,479
about<font color="#E5E5E5"> we look at this setting but a</font>

150
00:07:06,229 --> 00:07:10,310
minute of<font color="#E5E5E5"> thought reveals that this is</font>

151
00:07:08,479 --> 00:07:12,830
actually never going to<font color="#E5E5E5"> be the case</font>

152
00:07:10,310 --> 00:07:14,900
because<font color="#E5E5E5"> these are dependent</font><font color="#CCCCCC"> to random</font>

153
00:07:12,830 --> 00:07:16,820
variables whereas here you<font color="#CCCCCC"> have</font>

154
00:07:14,900 --> 00:07:19,310
independent<font color="#CCCCCC"> random variables</font><font color="#E5E5E5"> this is a</font>

155
00:07:16,820 --> 00:07:21,669
this is a independently chosen random

156
00:07:19,310 --> 00:07:24,830
injection from this<font color="#E5E5E5"> random function here</font>

157
00:07:21,669 --> 00:07:26,359
<font color="#E5E5E5">so actually the approach is wrong so</font>

158
00:07:24,830 --> 00:07:28,760
what we need<font color="#E5E5E5"> to do is actually we need</font>

159
00:07:26,360 --> 00:07:31,699
<font color="#E5E5E5">to try to define this in terms of</font>

160
00:07:28,760 --> 00:07:35,750
simulation based security<font color="#E5E5E5"> from</font><font color="#CCCCCC"> the UC</font>

161
00:07:31,699 --> 00:07:37,550
framework etc and it takes<font color="#CCCCCC"> 10</font><font color="#E5E5E5"> minutes</font><font color="#CCCCCC"> 15</font>

162
00:07:35,750 --> 00:07:39,229
minutes<font color="#E5E5E5"> to develop</font><font color="#CCCCCC"> the definition but it</font>

163
00:07:37,550 --> 00:07:41,660
turns out<font color="#E5E5E5"> the right definition</font><font color="#CCCCCC"> is that</font>

164
00:07:39,229 --> 00:07:43,280
<font color="#E5E5E5">you say that basically</font><font color="#CCCCCC"> this system here</font>

165
00:07:41,660 --> 00:07:45,229
the<font color="#E5E5E5"> construction of it ran amok was</font>

166
00:07:43,280 --> 00:07:48,229
indistinguishable<font color="#E5E5E5"> from ideal encryption</font>

167
00:07:45,229 --> 00:07:50,840
<font color="#E5E5E5">and a simulator which cooks up random</font>

168
00:07:48,229 --> 00:07:55,580
Oracle values as if they<font color="#E5E5E5"> are coming from</font>

169
00:07:50,840 --> 00:07:57,950
this<font color="#E5E5E5"> ideal encryption scheme right so in</font>

170
00:07:55,580 --> 00:07:59,810
terms of pictures I'm not a big fan<font color="#CCCCCC"> of</font>

171
00:07:57,950 --> 00:08:01,849
this<font color="#E5E5E5"> picture it appears everywhere so I</font>

172
00:07:59,810 --> 00:08:03,229
<font color="#E5E5E5">thought I'll</font><font color="#CCCCCC"> put it up as well so</font><font color="#E5E5E5"> the</font>

173
00:08:01,849 --> 00:08:04,820
distinguisher gets access<font color="#CCCCCC"> to</font>

174
00:08:03,229 --> 00:08:07,070
construction<font color="#E5E5E5"> random Oracle which goes</font>

175
00:08:04,820 --> 00:08:08,389
<font color="#E5E5E5">around</font><font color="#CCCCCC"> am Oracle and here the simulator</font>

176
00:08:07,070 --> 00:08:09,889
is<font color="#E5E5E5"> calling</font><font color="#CCCCCC"> I think it's kind of</font>

177
00:08:08,389 --> 00:08:13,310
confusing<font color="#CCCCCC"> that the arrows go in the</font>

178
00:08:09,889 --> 00:08:15,169
opposite directions<font color="#CCCCCC"> but the important</font>

179
00:08:13,310 --> 00:08:17,449
thing<font color="#CCCCCC"> about this definition is that</font><font color="#E5E5E5"> it</font>

180
00:08:15,169 --> 00:08:19,190
actually<font color="#CCCCCC"> provides a unified</font><font color="#E5E5E5"> attack</font>

181
00:08:17,449 --> 00:08:21,560
surface to the adversary<font color="#E5E5E5"> in the sense</font>

182
00:08:19,190 --> 00:08:24,979
that the adversary can actually control

183
00:08:21,560 --> 00:08:26,630
<font color="#E5E5E5">all the inputs to</font><font color="#CCCCCC"> the encryption</font><font color="#E5E5E5"> scheme</font>

184
00:08:24,979 --> 00:08:28,849
<font color="#E5E5E5">so it's not the case</font><font color="#CCCCCC"> that there's</font><font color="#E5E5E5"> a</font>

185
00:08:26,630 --> 00:08:30,260
random<font color="#CCCCCC"> key chosen and</font><font color="#E5E5E5"> it's on is not</font>

186
00:08:28,849 --> 00:08:31,789
under<font color="#E5E5E5"> the control</font><font color="#CCCCCC"> of the add</font><font color="#E5E5E5"> mystery</font>

187
00:08:30,260 --> 00:08:34,909
everything is under<font color="#E5E5E5"> the adversarial</font>

188
00:08:31,789 --> 00:08:38,689
control<font color="#E5E5E5"> the key denounced the message</font>

189
00:08:34,909 --> 00:08:42,979
<font color="#CCCCCC">associated data</font><font color="#E5E5E5"> etc and I want to</font>

190
00:08:38,690 --> 00:08:45,230
<font color="#E5E5E5">emphasize that</font><font color="#CCCCCC"> oops</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> Keys can be for</font>

191
00:08:42,979 --> 00:08:46,730
example chosen in a correlated way<font color="#E5E5E5"> or</font>

192
00:08:45,230 --> 00:08:49,910
messages could depend<font color="#E5E5E5"> on the</font>

193
00:08:46,730 --> 00:08:52,160
he's completely<font color="#E5E5E5"> arbitrary correlations</font>

194
00:08:49,910 --> 00:08:56,269
<font color="#E5E5E5">and that is the power of</font><font color="#CCCCCC"> a</font>

195
00:08:52,160 --> 00:09:00,380
differentially so you might say<font color="#E5E5E5"> well why</font>

196
00:08:56,269 --> 00:09:03,380
consider<font color="#E5E5E5"> in different ability so there</font>

197
00:09:00,380 --> 00:09:06,980
is a fundamental<font color="#E5E5E5"> theorem of marinelle</font>

198
00:09:03,380 --> 00:09:09,320
<font color="#E5E5E5">Hornstein from TCC 2004 which</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> the</font>

199
00:09:06,980 --> 00:09:12,079
test of time award a few years ago

200
00:09:09,320 --> 00:09:14,690
<font color="#E5E5E5">showing that if a construction is</font><font color="#CCCCCC"> in</font>

201
00:09:12,079 --> 00:09:17,810
differentiable<font color="#E5E5E5"> from an ideal encryption</font>

202
00:09:14,690 --> 00:09:21,790
scheme then this construction is<font color="#E5E5E5"> secure</font>

203
00:09:17,810 --> 00:09:21,790
in many adversarial environments

204
00:09:22,209 --> 00:09:27,979
so these adversarial and environments

205
00:09:25,279 --> 00:09:30,139
include the standard<font color="#CCCCCC"> a II notion of</font>

206
00:09:27,980 --> 00:09:33,730
security<font color="#E5E5E5"> or misuse resilient</font><font color="#CCCCCC"> a II</font>

207
00:09:30,139 --> 00:09:36,199
security or robust<font color="#CCCCCC"> a security these are</font>

208
00:09:33,730 --> 00:09:38,480
recent notions of security for

209
00:09:36,199 --> 00:09:40,790
authenticated encryption<font color="#E5E5E5"> but it goes</font>

210
00:09:38,480 --> 00:09:42,889
well beyond<font color="#CCCCCC"> these</font><font color="#E5E5E5"> it includes for</font>

211
00:09:40,790 --> 00:09:44,949
example<font color="#CCCCCC"> KTM security where you can</font>

212
00:09:42,889 --> 00:09:47,240
choose messages<font color="#E5E5E5"> dependent of the keys</font>

213
00:09:44,949 --> 00:09:50,180
leakage resilience where you can maybe

214
00:09:47,240 --> 00:09:52,310
obtain some leakage about the key<font color="#CCCCCC"> RK a</font>

215
00:09:50,180 --> 00:09:53,120
security or<font color="#E5E5E5"> keys could be</font><font color="#CCCCCC"> correlated</font>

216
00:09:52,310 --> 00:09:55,250
<font color="#CCCCCC">with each other</font>

217
00:09:53,120 --> 00:09:57,649
committing encryption this is a notion

218
00:09:55,250 --> 00:09:59,089
<font color="#CCCCCC">which we show in</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> previous talk where</font>

219
00:09:57,649 --> 00:10:01,490
the encryption should be basically

220
00:09:59,089 --> 00:10:05,269
collision resistant deduplication

221
00:10:01,490 --> 00:10:07,250
schemes etc however<font color="#E5E5E5"> more is true in the</font>

222
00:10:05,269 --> 00:10:09,380
<font color="#E5E5E5">sense that you can actually consider</font>

223
00:10:07,250 --> 00:10:11,959
combined models<font color="#E5E5E5"> where you for example</font>

224
00:10:09,380 --> 00:10:14,839
<font color="#E5E5E5">have a super model where you combine</font><font color="#CCCCCC"> RKA</font>

225
00:10:11,959 --> 00:10:16,760
security and KTM security and you ask is

226
00:10:14,839 --> 00:10:18,459
it the<font color="#E5E5E5"> case</font><font color="#CCCCCC"> that my idea encryption</font>

227
00:10:16,760 --> 00:10:21,290
scheme is secure in this model and

228
00:10:18,459 --> 00:10:23,000
actually unforeseen security models

229
00:10:21,290 --> 00:10:25,519
<font color="#E5E5E5">security models that we have not yet</font>

230
00:10:23,000 --> 00:10:30,339
<font color="#E5E5E5">thought about as long as they fall under</font>

231
00:10:25,519 --> 00:10:33,649
<font color="#E5E5E5">this umbrella of gains which are called</font>

232
00:10:30,339 --> 00:10:35,449
<font color="#E5E5E5">single stage these are games where there</font>

233
00:10:33,649 --> 00:10:37,430
is a central adversary which basically

234
00:10:35,449 --> 00:10:41,120
orchestrates the attack on the ideal

235
00:10:37,430 --> 00:10:43,040
encryption scheme so in the paper we

236
00:10:41,120 --> 00:10:45,889
give a slight extension<font color="#E5E5E5"> of this</font>

237
00:10:43,040 --> 00:10:51,160
composition result which contains the KD

238
00:10:45,889 --> 00:10:51,160
m<font color="#CCCCCC"> and</font><font color="#E5E5E5"> RK for practical use use cases</font>

239
00:10:51,970 --> 00:10:58,029
<font color="#E5E5E5">okay so you might ask are there any</font>

240
00:10:58,110 --> 00:11:02,529
authenticated encryption schemes out

241
00:11:00,189 --> 00:11:03,849
<font color="#E5E5E5">there</font><font color="#CCCCCC"> so we went on and</font><font color="#E5E5E5"> we looked at</font>

242
00:11:02,529 --> 00:11:05,980
<font color="#E5E5E5">some of</font><font color="#CCCCCC"> these schemes</font><font color="#E5E5E5"> out</font><font color="#CCCCCC"> there in the</font>

243
00:11:03,850 --> 00:11:09,509
<font color="#CCCCCC">literature so we</font><font color="#E5E5E5"> started with a paper of</font>

244
00:11:05,980 --> 00:11:12,339
nampara<font color="#CCCCCC"> rogova and Shrimpton from</font><font color="#E5E5E5"> 2014</font>

245
00:11:09,509 --> 00:11:14,679
<font color="#E5E5E5">which basically look at different ways</font>

246
00:11:12,339 --> 00:11:16,329
<font color="#CCCCCC">to combine</font><font color="#E5E5E5"> an encryption and a PRF to</font>

247
00:11:14,679 --> 00:11:18,970
build an authenticated encryption scheme

248
00:11:16,329 --> 00:11:21,729
for<font color="#CCCCCC"> example here this one is</font><font color="#E5E5E5"> encrypted</font>

249
00:11:18,970 --> 00:11:26,139
Mac<font color="#E5E5E5"> because you encrypt a message and</font>

250
00:11:21,730 --> 00:11:28,449
then<font color="#CCCCCC"> you kind</font><font color="#E5E5E5"> of pass it</font><font color="#CCCCCC"> to the PRF</font><font color="#E5E5E5"> so</font>

251
00:11:26,139 --> 00:11:30,519
here's a<font color="#E5E5E5"> macton encrypt you Mac and then</font>

252
00:11:28,449 --> 00:11:33,399
you encrypt<font color="#CCCCCC"> that roughly</font><font color="#E5E5E5"> speaking</font><font color="#CCCCCC"> and</font>

253
00:11:30,519 --> 00:11:35,499
here's the synthetic<font color="#E5E5E5"> IV mod where you</font>

254
00:11:33,399 --> 00:11:39,579
synthetically generate this IV from

255
00:11:35,499 --> 00:11:40,929
nonce message and associated<font color="#CCCCCC"> date so</font>

256
00:11:39,579 --> 00:11:42,809
what we<font color="#CCCCCC"> actually show in the paper is</font>

257
00:11:40,929 --> 00:11:45,819
<font color="#E5E5E5">that none of these are in differentiable</font>

258
00:11:42,809 --> 00:11:48,639
<font color="#CCCCCC">except a eight that all</font><font color="#E5E5E5"> of these fall</font>

259
00:11:45,819 --> 00:11:50,319
under in the French attack and let me

260
00:11:48,639 --> 00:11:52,239
<font color="#CCCCCC">just give you an idea</font><font color="#E5E5E5"> what this is a</font>

261
00:11:50,319 --> 00:11:53,920
<font color="#E5E5E5">very simple</font><font color="#CCCCCC"> observation about this one</font>

262
00:11:52,239 --> 00:11:55,480
so in<font color="#E5E5E5"> this construction by the way</font>

263
00:11:53,920 --> 00:11:57,099
there's a typo<font color="#CCCCCC"> here I should say I could</font>

264
00:11:55,480 --> 00:12:00,939
not change it because<font color="#E5E5E5"> my laptop is not</font>

265
00:11:57,100 --> 00:12:02,799
working anymore<font color="#CCCCCC"> so so if you look at</font><font color="#E5E5E5"> the</font>

266
00:12:00,939 --> 00:12:05,889
<font color="#CCCCCC">construction you see</font><font color="#E5E5E5"> that this key L</font>

267
00:12:02,799 --> 00:12:07,329
here only<font color="#E5E5E5"> affects the tag t here it does</font>

268
00:12:05,889 --> 00:12:09,480
<font color="#CCCCCC">not affect</font><font color="#E5E5E5"> the cipher text so it's</font>

269
00:12:07,329 --> 00:12:12,368
written<font color="#CCCCCC"> the other</font><font color="#E5E5E5"> way</font><font color="#CCCCCC"> around here</font>

270
00:12:09,480 --> 00:12:14,139
<font color="#CCCCCC">however if you if you consider an ideal</font>

271
00:12:12,369 --> 00:12:16,569
encryption scheme which<font color="#CCCCCC"> is a totally</font>

272
00:12:14,139 --> 00:12:19,209
random injection then all inputs<font color="#E5E5E5"> are</font>

273
00:12:16,569 --> 00:12:20,860
going<font color="#E5E5E5"> to affect all outputs so and then</font>

274
00:12:19,209 --> 00:12:23,378
you can use that<font color="#E5E5E5"> feature to actually</font>

275
00:12:20,860 --> 00:12:25,059
differentiate these two<font color="#E5E5E5"> and if you try</font>

276
00:12:23,379 --> 00:12:26,740
to practically interpret that<font color="#E5E5E5"> this</font>

277
00:12:25,059 --> 00:12:33,160
actually can<font color="#CCCCCC"> be interpreted</font><font color="#E5E5E5"> as a related</font>

278
00:12:26,740 --> 00:12:35,290
<font color="#E5E5E5">key attack on this key so in the paper</font>

279
00:12:33,160 --> 00:12:38,469
<font color="#E5E5E5">we actually give a general template for</font>

280
00:12:35,290 --> 00:12:40,540
composition<font color="#E5E5E5"> of various schemes and we</font>

281
00:12:38,470 --> 00:12:44,470
show<font color="#E5E5E5"> that if a scheme falls under this</font>

282
00:12:40,540 --> 00:12:48,549
template then you can attack it via two

283
00:12:44,470 --> 00:12:51,069
different differentiators<font color="#E5E5E5"> details are on</font>

284
00:12:48,549 --> 00:12:53,739
<font color="#CCCCCC">the</font><font color="#E5E5E5"> paper so it's just to simplify the</font>

285
00:12:51,069 --> 00:12:55,449
analysis for all these escapes<font color="#E5E5E5"> what</font>

286
00:12:53,739 --> 00:12:57,939
<font color="#E5E5E5">about the specific scheme so we also</font>

287
00:12:55,449 --> 00:13:00,549
looked at OCD<font color="#CCCCCC"> deoxys which is a seizure</font>

288
00:12:57,939 --> 00:13:04,389
candidate<font color="#CCCCCC"> a Zed</font><font color="#E5E5E5"> which was the</font><font color="#CCCCCC"> seizure</font>

289
00:13:00,549 --> 00:13:05,980
candidate and these schemes also fall to

290
00:13:04,389 --> 00:13:08,060
differentiability attacks and some of

291
00:13:05,980 --> 00:13:10,760
these are<font color="#CCCCCC"> not surprising</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

292
00:13:08,060 --> 00:13:12,380
are not supposed to<font color="#E5E5E5"> be misused resilient</font>

293
00:13:10,760 --> 00:13:14,630
<font color="#E5E5E5">so they are not going to be in</font>

294
00:13:12,380 --> 00:13:16,580
differentiable either<font color="#E5E5E5"> but some of them</font>

295
00:13:14,630 --> 00:13:19,370
are supposed<font color="#E5E5E5"> to be misused resilient and</font>

296
00:13:16,580 --> 00:13:28,010
we<font color="#E5E5E5"> attack them with more specific</font>

297
00:13:19,370 --> 00:13:29,450
attacks so the conclusion of<font color="#E5E5E5"> that part</font>

298
00:13:28,010 --> 00:13:31,460
of the talk<font color="#CCCCCC"> is that</font><font color="#E5E5E5"> here is in depth</font>

299
00:13:29,450 --> 00:13:37,430
different in different<font color="#CCCCCC"> years brutally</font>

300
00:13:31,460 --> 00:13:38,900
stabbing the<font color="#CCCCCC"> Caesar</font><font color="#E5E5E5"> handle it so I</font>

301
00:13:37,430 --> 00:13:42,890
<font color="#CCCCCC">needing differentiable schemes out</font><font color="#E5E5E5"> there</font>

302
00:13:38,900 --> 00:13:45,020
<font color="#CCCCCC">you</font><font color="#E5E5E5"> might disturb</font><font color="#CCCCCC"> ask well</font><font color="#E5E5E5"> we went back</font>

303
00:13:42,890 --> 00:13:48,260
<font color="#CCCCCC">to what else the</font><font color="#E5E5E5"> feistel construction</font>

304
00:13:45,020 --> 00:13:49,880
from<font color="#E5E5E5"> the 70s so here is the</font><font color="#CCCCCC"> feistel</font>

305
00:13:48,260 --> 00:13:51,890
construction which takes a<font color="#E5E5E5"> left and</font>

306
00:13:49,880 --> 00:13:54,110
right part<font color="#E5E5E5"> of the message and processes</font>

307
00:13:51,890 --> 00:13:57,590
<font color="#CCCCCC">it to random hash want and more codes as</font>

308
00:13:54,110 --> 00:14:01,400
it is written<font color="#E5E5E5"> here</font><font color="#CCCCCC"> so what do we know</font>

309
00:13:57,590 --> 00:14:04,580
about these this construction well it

310
00:14:01,400 --> 00:14:07,069
was shown that<font color="#E5E5E5"> at some point</font><font color="#CCCCCC"> that five</font>

311
00:14:04,580 --> 00:14:10,640
rounds of<font color="#CCCCCC"> feistel</font><font color="#E5E5E5"> are necessary to get a</font>

312
00:14:07,070 --> 00:14:12,860
key to a random keyed injection<font color="#CCCCCC"> or</font><font color="#E5E5E5"> five</font>

313
00:14:10,640 --> 00:14:15,260
<font color="#E5E5E5">rounds</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> not sufficient to get a random</font>

314
00:14:12,860 --> 00:14:17,540
<font color="#E5E5E5">key injection you can you can attack for</font>

315
00:14:15,260 --> 00:14:19,910
every<font color="#CCCCCC"> ounce and six sounds</font><font color="#E5E5E5"> on words is</font>

316
00:14:17,540 --> 00:14:21,680
actually<font color="#E5E5E5"> secure but then</font><font color="#CCCCCC"> a bark was</font>

317
00:14:19,910 --> 00:14:25,250
found in<font color="#E5E5E5"> this proof and the number of</font>

318
00:14:21,680 --> 00:14:27,709
rounds went all the way up<font color="#CCCCCC"> to 14 and</font>

319
00:14:25,250 --> 00:14:30,470
<font color="#CCCCCC">then it was</font><font color="#E5E5E5"> reduced to</font><font color="#CCCCCC"> 10 and</font><font color="#E5E5E5"> then to</font>

320
00:14:27,710 --> 00:14:32,300
<font color="#E5E5E5">eight by many clever people some of whom</font>

321
00:14:30,470 --> 00:14:38,030
are<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the audience and one of which</font>

322
00:14:32,300 --> 00:14:41,000
here is on is chairing the session so

323
00:14:38,030 --> 00:14:42,949
what we show<font color="#CCCCCC"> for injections is that if</font>

324
00:14:41,000 --> 00:14:45,050
you<font color="#CCCCCC"> just replace the left part with</font>

325
00:14:42,950 --> 00:14:46,970
<font color="#E5E5E5">zeros</font><font color="#CCCCCC"> you just path you</font><font color="#E5E5E5"> just put some</font>

326
00:14:45,050 --> 00:14:49,819
<font color="#CCCCCC">zeros there and you just put the message</font>

327
00:14:46,970 --> 00:14:52,040
<font color="#E5E5E5">in the right part of the wire then three</font>

328
00:14:49,820 --> 00:14:53,780
rounds of<font color="#CCCCCC"> feistel</font><font color="#E5E5E5"> are necessary and</font>

329
00:14:52,040 --> 00:14:57,980
<font color="#CCCCCC">sufficient to build random key</font>

330
00:14:53,780 --> 00:14:59,510
injections so in terms of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> picture</font>

331
00:14:57,980 --> 00:15:01,060
for injection it looks something like

332
00:14:59,510 --> 00:15:03,410
this

333
00:15:01,060 --> 00:15:06,890
<font color="#CCCCCC">and we also</font><font color="#E5E5E5"> mention that these proofs</font>

334
00:15:03,410 --> 00:15:09,020
for<font color="#CCCCCC"> permutations go for 800 pages</font>

335
00:15:06,890 --> 00:15:10,910
whereas the proof for injection you know

336
00:15:09,020 --> 00:15:14,060
only<font color="#E5E5E5"> goes for a 13-game hops so if</font>

337
00:15:10,910 --> 00:15:15,680
you're<font color="#E5E5E5"> interested in learning about in</font>

338
00:15:14,060 --> 00:15:19,430
differentiability maybe you can look at

339
00:15:15,680 --> 00:15:20,689
the paper<font color="#CCCCCC"> and try to see so the bounds</font>

340
00:15:19,430 --> 00:15:21,739
<font color="#CCCCCC">that we achieved the actual concrete</font>

341
00:15:20,690 --> 00:15:23,480
<font color="#E5E5E5">bounds for secure</font>

342
00:15:21,740 --> 00:15:26,060
that we achieve<font color="#CCCCCC"> are all so much</font><font color="#E5E5E5"> better</font>

343
00:15:23,480 --> 00:15:33,530
<font color="#CCCCCC">than the balance</font><font color="#E5E5E5"> for permutation so it's</font>

344
00:15:26,060 --> 00:15:35,569
like a birthday<font color="#CCCCCC"> bound</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so that</font>

345
00:15:33,530 --> 00:15:38,060
<font color="#E5E5E5">actually gives</font><font color="#CCCCCC"> us an offline</font>

346
00:15:35,570 --> 00:15:40,160
authenticated encryption<font color="#CCCCCC"> and we in the</font>

347
00:15:38,060 --> 00:15:41,660
paper we also study online<font color="#E5E5E5"> authenticated</font>

348
00:15:40,160 --> 00:15:43,760
encryption<font color="#CCCCCC"> so what's an online</font>

349
00:15:41,660 --> 00:15:47,870
encryption<font color="#E5E5E5"> or maybe streaming encryption</font>

350
00:15:43,760 --> 00:15:50,510
it's very it's<font color="#E5E5E5"> where we need to process</font>

351
00:15:47,870 --> 00:15:52,190
these messages<font color="#E5E5E5"> as</font><font color="#CCCCCC"> they arrive so we</font>

352
00:15:50,510 --> 00:15:54,170
<font color="#CCCCCC">don't want to wait for the movie to</font><font color="#E5E5E5"> end</font>

353
00:15:52,190 --> 00:15:57,050
and then start watching it<font color="#E5E5E5"> we want to</font>

354
00:15:54,170 --> 00:15:58,939
watch the<font color="#CCCCCC"> movie as the packets arrive so</font>

355
00:15:57,050 --> 00:16:02,359
you can actually take this<font color="#E5E5E5"> intuition and</font>

356
00:15:58,940 --> 00:16:04,610
<font color="#E5E5E5">then tries to formalize it and then you</font>

357
00:16:02,360 --> 00:16:06,230
can take<font color="#E5E5E5"> the syntax of a normal online</font>

358
00:16:04,610 --> 00:16:08,360
authenticated encryption and then

359
00:16:06,230 --> 00:16:11,120
consider a random online authenticated

360
00:16:08,360 --> 00:16:13,430
<font color="#CCCCCC">encryption</font><font color="#E5E5E5"> which then gives rise</font><font color="#CCCCCC"> to the</font>

361
00:16:11,120 --> 00:16:16,340
reference object for ideal online

362
00:16:13,430 --> 00:16:19,280
<font color="#E5E5E5">authenticated encryption</font><font color="#CCCCCC"> and what we</font>

363
00:16:16,340 --> 00:16:21,820
show in the paper that chaining up and a

364
00:16:19,280 --> 00:16:25,010
EAD will in differentiability turn it<font color="#E5E5E5"> on</font>

365
00:16:21,820 --> 00:16:27,680
in the sense that you can for<font color="#CCCCCC"> example</font>

366
00:16:25,010 --> 00:16:30,470
start with your key unknowns<font color="#E5E5E5"> hash it to</font>

367
00:16:27,680 --> 00:16:32,959
get some state value<font color="#E5E5E5"> and</font><font color="#CCCCCC"> feed</font><font color="#E5E5E5"> that state</font>

368
00:16:30,470 --> 00:16:36,020
value to your hash function with the

369
00:16:32,960 --> 00:16:38,600
incoming associate data<font color="#E5E5E5"> you know pass it</font>

370
00:16:36,020 --> 00:16:40,250
to the<font color="#E5E5E5"> encryption as the key encrypt a</font>

371
00:16:38,600 --> 00:16:42,680
message with this key get your cipher

372
00:16:40,250 --> 00:16:44,930
<font color="#E5E5E5">text then again prepare a summary of</font>

373
00:16:42,680 --> 00:16:47,689
everything<font color="#E5E5E5"> so far by hashing everything</font>

374
00:16:44,930 --> 00:16:50,780
and putting<font color="#CCCCCC"> into state and</font><font color="#E5E5E5"> then chaining</font>

375
00:16:47,690 --> 00:16:52,550
onwards again<font color="#E5E5E5"> so we can</font><font color="#CCCCCC"> show that</font><font color="#E5E5E5"> this</font>

376
00:16:50,780 --> 00:17:00,439
<font color="#E5E5E5">construction actually gives an ideal</font>

377
00:16:52,550 --> 00:17:02,479
online authenticated<font color="#E5E5E5"> encryption</font><font color="#CCCCCC"> so let</font>

378
00:17:00,440 --> 00:17:06,110
<font color="#E5E5E5">me end by saying a couple of words about</font>

379
00:17:02,480 --> 00:17:08,020
efficiency<font color="#CCCCCC"> so the final result our of</font>

380
00:17:06,109 --> 00:17:10,879
our paper is<font color="#CCCCCC"> actually a negative</font><font color="#E5E5E5"> result</font>

381
00:17:08,020 --> 00:17:13,310
<font color="#E5E5E5">which shows</font><font color="#CCCCCC"> that any in differentiable</font>

382
00:17:10,880 --> 00:17:16,820
construction of<font color="#CCCCCC"> a WM bit random</font>

383
00:17:13,310 --> 00:17:19,159
injection from<font color="#E5E5E5"> an N bit permutation must</font>

384
00:17:16,819 --> 00:17:21,560
place<font color="#CCCCCC"> 2w minus two queries</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> the random</font>

385
00:17:19,160 --> 00:17:24,140
permutation<font color="#E5E5E5"> so it</font><font color="#CCCCCC"> basically</font><font color="#E5E5E5"> gives a</font>

386
00:17:21,560 --> 00:17:26,060
lower bound on<font color="#CCCCCC"> the number of queries</font>

387
00:17:24,140 --> 00:17:29,810
<font color="#E5E5E5">that the construction should make to the</font>

388
00:17:26,060 --> 00:17:31,550
underlying random<font color="#E5E5E5"> permutation and to</font>

389
00:17:29,810 --> 00:17:34,060
<font color="#E5E5E5">prove this we basically combine</font>

390
00:17:31,550 --> 00:17:35,830
techniques used for<font color="#E5E5E5"> lower</font>

391
00:17:34,060 --> 00:17:38,980
for<font color="#CCCCCC"> collision-resistant that Paul</font>

392
00:17:35,830 --> 00:17:42,370
<font color="#E5E5E5">mentioned in in his slide with lower</font>

393
00:17:38,980 --> 00:17:44,770
bounds for pseudo-random generators from

394
00:17:42,370 --> 00:17:46,750
<font color="#CCCCCC">dinner</font><font color="#E5E5E5"> work of genera and Trevisan so as</font>

395
00:17:44,770 --> 00:17:49,030
far<font color="#CCCCCC"> as I know correct me if I'm wrong</font>

396
00:17:46,750 --> 00:17:54,220
<font color="#CCCCCC">this is the first in differentiability</font>

397
00:17:49,030 --> 00:17:56,290
lower bound<font color="#E5E5E5"> that I know out there but</font>

398
00:17:54,220 --> 00:17:58,780
our feistel construction actually<font color="#E5E5E5"> has</font>

399
00:17:56,290 --> 00:18:01,240
makes<font color="#E5E5E5"> three W queries because it has</font>

400
00:17:58,780 --> 00:18:05,639
three random Oracle's<font color="#E5E5E5"> and then this</font>

401
00:18:01,240 --> 00:18:08,350
leaves a gap<font color="#CCCCCC"> that</font><font color="#E5E5E5"> do we actually have</font>

402
00:18:05,640 --> 00:18:11,020
<font color="#E5E5E5">does a lower bond extend all the way up</font>

403
00:18:08,350 --> 00:18:12,490
to three you know just under<font color="#E5E5E5"> three or is</font>

404
00:18:11,020 --> 00:18:14,200
it the<font color="#E5E5E5"> case that we</font><font color="#CCCCCC"> can have a more</font>

405
00:18:12,490 --> 00:18:17,050
<font color="#E5E5E5">efficient construction</font><font color="#CCCCCC"> coming down all</font>

406
00:18:14,200 --> 00:18:18,850
the way<font color="#E5E5E5"> to two queries so it would be</font>

407
00:18:17,050 --> 00:18:24,610
nice to resolve<font color="#E5E5E5"> questions like this I</font>

408
00:18:18,850 --> 00:18:27,719
liked it<font color="#CCCCCC"> okay so that</font><font color="#E5E5E5"> concludes the</font><font color="#CCCCCC"> talk</font>

409
00:18:24,610 --> 00:18:30,639
so basically the talk was<font color="#E5E5E5"> about a new</font>

410
00:18:27,720 --> 00:18:34,600
way of<font color="#E5E5E5"> viewing authenticated encryption</font>

411
00:18:30,640 --> 00:18:36,100
as a random<font color="#CCCCCC"> key injection and this was</font>

412
00:18:34,600 --> 00:18:38,560
motivated<font color="#CCCCCC"> by</font><font color="#E5E5E5"> the in differentiability</font>

413
00:18:36,100 --> 00:18:43,570
composition theorem which<font color="#CCCCCC"> gives</font><font color="#E5E5E5"> security</font>

414
00:18:38,560 --> 00:18:44,870
in all single stage environments thank

415
00:18:43,570 --> 00:18:48,480
you

416
00:18:44,870 --> 00:18:48,479
[Applause]

