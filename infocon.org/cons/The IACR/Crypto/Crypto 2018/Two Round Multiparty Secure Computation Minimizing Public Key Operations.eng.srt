1
00:00:05,000 --> 00:00:10,200
introduction hello<font color="#CCCCCC"> everyone I'm Pahang</font>

2
00:00:08,189 --> 00:00:12,209
<font color="#E5E5E5">I'm going to talk about</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> round secure</font>

3
00:00:10,200 --> 00:00:14,280
multi-party computation<font color="#E5E5E5"> minimizing</font>

4
00:00:12,210 --> 00:00:17,270
public key operations<font color="#E5E5E5"> it is joint</font><font color="#CCCCCC"> work</font>

5
00:00:14,280 --> 00:00:20,340
with<font color="#E5E5E5"> syndrome</font><font color="#CCCCCC"> Garg and actuation yamasa</font>

6
00:00:17,270 --> 00:00:22,830
the first question<font color="#E5E5E5"> you want</font><font color="#CCCCCC"> ask</font><font color="#E5E5E5"> what</font><font color="#CCCCCC"> do</font>

7
00:00:20,340 --> 00:00:25,200
<font color="#CCCCCC">you</font><font color="#E5E5E5"> achieve in this work and this is</font>

8
00:00:22,830 --> 00:00:26,970
<font color="#E5E5E5">exactly</font><font color="#CCCCCC"> what we did</font><font color="#E5E5E5"> next</font><font color="#CCCCCC"> I'm going</font><font color="#E5E5E5"> to</font>

9
00:00:25,200 --> 00:00:28,740
explain each of<font color="#E5E5E5"> these terms in more</font>

10
00:00:26,970 --> 00:00:31,320
detail<font color="#E5E5E5"> what is the</font><font color="#CCCCCC"> kill multi-party</font>

11
00:00:28,740 --> 00:00:33,210
computation<font color="#CCCCCC"> or does</font><font color="#E5E5E5"> to around me what is</font>

12
00:00:31,320 --> 00:00:36,390
<font color="#CCCCCC">publicly operations</font><font color="#E5E5E5"> and why do we</font><font color="#CCCCCC"> want</font>

13
00:00:33,210 --> 00:00:39,120
<font color="#E5E5E5">to</font><font color="#CCCCCC"> minimize it so let's get</font><font color="#E5E5E5"> started</font>

14
00:00:36,390 --> 00:00:41,250
secure<font color="#E5E5E5"> multi-party computation</font><font color="#CCCCCC"> NPC once</font>

15
00:00:39,120 --> 00:00:43,919
<font color="#E5E5E5">again it</font><font color="#CCCCCC"> is a protocol among</font><font color="#E5E5E5"> multiple</font>

16
00:00:41,250 --> 00:00:45,780
parties every party has a private input

17
00:00:43,920 --> 00:00:48,540
and they want<font color="#E5E5E5"> to jointly compute some</font>

18
00:00:45,780 --> 00:00:50,790
function f on their private inputs<font color="#E5E5E5"> so</font>

19
00:00:48,540 --> 00:00:52,410
they can run such<font color="#E5E5E5"> a</font><font color="#CCCCCC"> MPC protocol at the</font>

20
00:00:50,790 --> 00:00:56,460
end of the protocol<font color="#E5E5E5"> everyone learns the</font>

21
00:00:52,410 --> 00:00:58,260
output<font color="#E5E5E5"> security guarantee is again the</font>

22
00:00:56,460 --> 00:01:00,329
the<font color="#E5E5E5"> output</font><font color="#CCCCCC"> wide the only thing that they</font>

23
00:00:58,260 --> 00:01:03,149
can<font color="#E5E5E5"> learn from this computation</font>

24
00:01:00,329 --> 00:01:05,250
even if up to<font color="#CCCCCC"> a minus one parties are</font>

25
00:01:03,149 --> 00:01:07,229
corrupted and<font color="#E5E5E5"> colluding they cannot</font>

26
00:01:05,250 --> 00:01:09,870
learn anything more about this<font color="#CCCCCC"> parties</font>

27
00:01:07,229 --> 00:01:14,549
input X 3 so this<font color="#CCCCCC"> is the definition of</font>

28
00:01:09,870 --> 00:01:16,640
MPC what does<font color="#CCCCCC"> two-round mean well it</font>

29
00:01:14,549 --> 00:01:19,440
means<font color="#E5E5E5"> the MPC protocol has two rounds</font>

30
00:01:16,640 --> 00:01:21,420
here is whether<font color="#CCCCCC"> to run MPC protocol</font>

31
00:01:19,440 --> 00:01:23,190
<font color="#E5E5E5">looks like we assume there is a</font>

32
00:01:21,420 --> 00:01:26,040
broadcast channel<font color="#E5E5E5"> and the protocol has</font>

33
00:01:23,190 --> 00:01:28,289
<font color="#E5E5E5">two rounds in the first round every</font>

34
00:01:26,040 --> 00:01:30,360
party<font color="#CCCCCC"> Barack has one message to all the</font>

35
00:01:28,290 --> 00:01:33,689
<font color="#E5E5E5">other parties which depends on their</font>

36
00:01:30,360 --> 00:01:36,030
private input and of<font color="#E5E5E5"> the first round in</font>

37
00:01:33,689 --> 00:01:37,889
the second<font color="#E5E5E5"> round every party Barack has</font>

38
00:01:36,030 --> 00:01:40,110
<font color="#E5E5E5">another message</font><font color="#CCCCCC"> to all the</font><font color="#E5E5E5"> other parties</font>

39
00:01:37,890 --> 00:01:41,909
which depends on their private input and

40
00:01:40,110 --> 00:01:44,430
the first round of messages<font color="#CCCCCC"> that they</font>

41
00:01:41,909 --> 00:01:46,530
have received<font color="#CCCCCC"> and of the second round</font>

42
00:01:44,430 --> 00:01:50,070
<font color="#E5E5E5">and then everyone</font><font color="#CCCCCC"> can figure out the</font>

43
00:01:46,530 --> 00:01:51,479
<font color="#CCCCCC">output now you may be asking</font><font color="#E5E5E5"> why do we</font>

44
00:01:50,070 --> 00:01:53,130
care about<font color="#E5E5E5"> wrong complexity</font>

45
00:01:51,479 --> 00:01:54,900
why is<font color="#E5E5E5"> the important to minimize the</font>

46
00:01:53,130 --> 00:01:57,929
number of rounds<font color="#E5E5E5"> why do we consider two</font>

47
00:01:54,900 --> 00:02:00,420
round consider Paula Cole<font color="#E5E5E5"> let's say</font>

48
00:01:57,930 --> 00:02:03,060
between<font color="#E5E5E5"> two parties and if the</font><font color="#CCCCCC"> road</font>

49
00:02:00,420 --> 00:02:05,340
complexity is too high<font color="#E5E5E5"> then probably</font>

50
00:02:03,060 --> 00:02:08,369
<font color="#CCCCCC">most of</font><font color="#E5E5E5"> the work has</font><font color="#CCCCCC"> to be done just in</font>

51
00:02:05,340 --> 00:02:11,400
<font color="#CCCCCC">the communication especially if these</font>

52
00:02:08,369 --> 00:02:13,770
<font color="#E5E5E5">two parties are say me and my mom who</font>

53
00:02:11,400 --> 00:02:16,780
<font color="#E5E5E5">sits in China which means the network</font>

54
00:02:13,770 --> 00:02:19,060
<font color="#E5E5E5">latency between us becomes a few hundred</font>

55
00:02:16,780 --> 00:02:21,220
seconds<font color="#E5E5E5"> so maybe most of</font><font color="#CCCCCC"> the work of</font>

56
00:02:19,060 --> 00:02:23,440
<font color="#E5E5E5">this protocol has</font><font color="#CCCCCC"> to be</font><font color="#E5E5E5"> spent on the</font>

57
00:02:21,220 --> 00:02:25,840
network latency<font color="#E5E5E5"> so it's usually very</font>

58
00:02:23,440 --> 00:02:29,680
important<font color="#CCCCCC"> to MPC to minimize the</font><font color="#E5E5E5"> run</font>

59
00:02:25,840 --> 00:02:31,720
complexity why do why<font color="#CCCCCC"> don't we consider</font>

60
00:02:29,680 --> 00:02:34,180
<font color="#E5E5E5">the</font><font color="#CCCCCC"> minimum number runs which</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> wore</font>

61
00:02:31,720 --> 00:02:36,489
<font color="#CCCCCC">out</font><font color="#E5E5E5"> or because it's impossible to</font>

62
00:02:34,180 --> 00:02:39,100
compute certain<font color="#E5E5E5"> functions in war on in</font>

63
00:02:36,489 --> 00:02:42,640
MPC<font color="#E5E5E5"> so two rounds is the minimum number</font>

64
00:02:39,100 --> 00:02:45,489
<font color="#E5E5E5">of rounds</font><font color="#CCCCCC"> that we can hope for</font><font color="#E5E5E5"> can we do</font>

65
00:02:42,640 --> 00:02:48,519
to learn MPC them let's briefly<font color="#CCCCCC"> look at</font>

66
00:02:45,489 --> 00:02:51,610
<font color="#E5E5E5">the</font><font color="#CCCCCC"> literature back in the 80s go drake</font>

67
00:02:48,520 --> 00:02:54,040
<font color="#CCCCCC">mccallion</font><font color="#E5E5E5"> Widdowson gave up MPC protocol</font>

68
00:02:51,610 --> 00:02:56,170
<font color="#E5E5E5">that</font><font color="#CCCCCC"> come that</font><font color="#E5E5E5"> can compute any function</font>

69
00:02:54,040 --> 00:02:57,730
and the wrong complexity<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> depths</font>

70
00:02:56,170 --> 00:03:00,160
of<font color="#CCCCCC"> the circuit</font><font color="#E5E5E5"> that computes this</font>

71
00:02:57,730 --> 00:03:03,160
function<font color="#CCCCCC"> the</font><font color="#E5E5E5"> number of rounds grows with</font>

72
00:03:00,160 --> 00:03:06,160
the<font color="#CCCCCC"> types of the circuit</font><font color="#E5E5E5"> later</font><font color="#CCCCCC"> Bieber</font>

73
00:03:03,160 --> 00:03:06,940
<font color="#CCCCCC">mccallion rogue away</font><font color="#E5E5E5"> gave a</font><font color="#CCCCCC"> coulson give</font>

74
00:03:06,160 --> 00:03:09,250
a<font color="#CCCCCC"> constant</font><font color="#E5E5E5"> around</font>

75
00:03:06,940 --> 00:03:13,239
MPC<font color="#E5E5E5"> protocol which is independent of the</font>

76
00:03:09,250 --> 00:03:16,390
<font color="#E5E5E5">depth of the circuit okay great</font><font color="#CCCCCC"> and</font>

77
00:03:13,239 --> 00:03:18,190
<font color="#CCCCCC">there in terms of to learn</font><font color="#E5E5E5"> MPC now we</font>

78
00:03:16,390 --> 00:03:20,649
know constructions from various

79
00:03:18,190 --> 00:03:23,019
assumptions<font color="#E5E5E5"> especially</font><font color="#CCCCCC"> the recent</font><font color="#E5E5E5"> work</font>

80
00:03:20,650 --> 00:03:25,660
by<font color="#CCCCCC"> Penha modeling and gargantuan</font>

81
00:03:23,019 --> 00:03:28,030
<font color="#CCCCCC">Universal</font><font color="#E5E5E5"> which constructs to run MPC</font>

82
00:03:25,660 --> 00:03:31,239
from this primitive<font color="#E5E5E5"> called to run</font>

83
00:03:28,030 --> 00:03:34,360
oblivious transfer since we also know<font color="#CCCCCC"> to</font>

84
00:03:31,239 --> 00:03:36,910
run MPC implies to round<font color="#CCCCCC"> ot</font><font color="#E5E5E5"> so now they</font>

85
00:03:34,360 --> 00:03:38,709
imply each other<font color="#E5E5E5"> so this is also kind of</font>

86
00:03:36,910 --> 00:03:41,920
<font color="#E5E5E5">the minimal assumption that we can hope</font>

87
00:03:38,709 --> 00:03:44,799
<font color="#E5E5E5">for</font><font color="#CCCCCC"> okay now we</font><font color="#E5E5E5"> can construct to run MPC</font>

88
00:03:41,920 --> 00:03:48,250
from the<font color="#E5E5E5"> minimal assumption what's next</font>

89
00:03:44,799 --> 00:03:51,370
can we implement<font color="#CCCCCC"> well you can but it's</font>

90
00:03:48,250 --> 00:03:53,579
just<font color="#CCCCCC"> too</font><font color="#E5E5E5"> slow well the reasons is</font><font color="#CCCCCC"> that</font>

91
00:03:51,370 --> 00:03:57,910
there are too many public key operations

92
00:03:53,579 --> 00:04:00,010
why is that<font color="#E5E5E5"> why that about thing because</font>

93
00:03:57,910 --> 00:04:02,489
<font color="#E5E5E5">public key operations are</font><font color="#CCCCCC"> very slow to</font>

94
00:04:00,010 --> 00:04:04,959
<font color="#CCCCCC">give you a better</font><font color="#E5E5E5"> sense how slow it is</font>

95
00:04:02,489 --> 00:04:07,660
compared to symmetric key operations

96
00:04:04,959 --> 00:04:10,780
like AES it can be done like hundreds of

97
00:04:07,660 --> 00:04:11,560
<font color="#E5E5E5">minutes of operations per second but in</font>

98
00:04:10,780 --> 00:04:13,420
contrast

99
00:04:11,560 --> 00:04:16,000
public key operations or asymmetric key

100
00:04:13,420 --> 00:04:18,130
operations<font color="#E5E5E5"> can only be down tens of</font>

101
00:04:16,000 --> 00:04:19,870
thousands per second this number may

102
00:04:18,130 --> 00:04:21,789
vary<font color="#E5E5E5"> for different implementations or</font>

103
00:04:19,870 --> 00:04:24,220
different machines but this<font color="#E5E5E5"> is just to</font>

104
00:04:21,789 --> 00:04:26,949
give you a high-level<font color="#E5E5E5"> idea why why</font>

105
00:04:24,220 --> 00:04:29,750
public<font color="#E5E5E5"> key operations are very slow</font>

106
00:04:26,949 --> 00:04:32,150
<font color="#E5E5E5">okay so it's very important</font><font color="#CCCCCC"> to minimize</font>

107
00:04:29,750 --> 00:04:36,050
<font color="#E5E5E5">how the key operations and here comes</font>

108
00:04:32,150 --> 00:04:38,690
our main result we construct a<font color="#CCCCCC"> to run</font>

109
00:04:36,050 --> 00:04:41,120
<font color="#CCCCCC">NPC from</font><font color="#E5E5E5"> Turin</font><font color="#CCCCCC"> ot</font><font color="#E5E5E5"> which is a minimal</font>

110
00:04:38,690 --> 00:04:43,610
assumption and the<font color="#CCCCCC"> state-of-the-art she</font>

111
00:04:41,120 --> 00:04:45,470
uses this<font color="#E5E5E5"> many ortiz which is</font>

112
00:04:43,610 --> 00:04:48,410
essentially<font color="#E5E5E5"> this many public key</font>

113
00:04:45,470 --> 00:04:50,510
operations and we improve it<font color="#CCCCCC"> to this</font>

114
00:04:48,410 --> 00:04:52,699
many ortiz and essentially this many

115
00:04:50,510 --> 00:04:54,949
public key operations plus polynomial

116
00:04:52,699 --> 00:04:57,919
number of symmetric key operations well

117
00:04:54,949 --> 00:05:00,680
n is<font color="#CCCCCC"> the number of parties lambda</font><font color="#E5E5E5"> is a</font>

118
00:04:57,919 --> 00:05:02,719
security parameter and<font color="#E5E5E5"> C is the size of</font>

119
00:05:00,680 --> 00:05:05,750
the circuit namely the<font color="#CCCCCC"> number of gates</font>

120
00:05:02,720 --> 00:05:08,389
<font color="#E5E5E5">in a circuit so before the number of</font>

121
00:05:05,750 --> 00:05:11,810
public key operations is a polynomial<font color="#E5E5E5"> in</font>

122
00:05:08,389 --> 00:05:14,360
the number of parties security parameter

123
00:05:11,810 --> 00:05:16,130
and size of a circuit now we improve it

124
00:05:14,360 --> 00:05:18,949
<font color="#CCCCCC">to be independent of the size</font><font color="#E5E5E5"> of the</font>

125
00:05:16,130 --> 00:05:20,600
circuit that<font color="#CCCCCC"> computes the function the</font>

126
00:05:18,949 --> 00:05:24,260
rest of the result is the<font color="#CCCCCC"> same as</font><font color="#E5E5E5"> before</font>

127
00:05:20,600 --> 00:05:26,750
<font color="#E5E5E5">semi honest to run MVC from</font><font color="#CCCCCC"> two Ron semi</font>

128
00:05:24,260 --> 00:05:30,289
rs30 and malicious NPC from<font color="#E5E5E5"> Tehran</font>

129
00:05:26,750 --> 00:05:33,260
<font color="#E5E5E5">malicious</font><font color="#CCCCCC"> OT in the crs model</font><font color="#E5E5E5"> okay so</font>

130
00:05:30,289 --> 00:05:34,669
this is our<font color="#E5E5E5"> main result next question</font>

131
00:05:33,260 --> 00:05:38,120
how<font color="#CCCCCC"> did we achieve it</font>

132
00:05:34,669 --> 00:05:42,859
if you think<font color="#CCCCCC"> about</font><font color="#E5E5E5"> it now we have</font><font color="#CCCCCC"> to run</font>

133
00:05:38,120 --> 00:05:45,410
<font color="#CCCCCC">NPC which uses this many OTS</font><font color="#E5E5E5"> how can we</font>

134
00:05:42,860 --> 00:05:48,229
reduce<font color="#E5E5E5"> the</font><font color="#CCCCCC"> number of RTS or</font><font color="#E5E5E5"> the number</font>

135
00:05:45,410 --> 00:05:51,110
of public key operations<font color="#E5E5E5"> a natural idea</font>

136
00:05:48,229 --> 00:05:54,169
<font color="#E5E5E5">is to</font><font color="#CCCCCC"> use ot extension what is ot</font>

137
00:05:51,110 --> 00:05:56,630
extension it is<font color="#E5E5E5"> intended to do</font><font color="#CCCCCC"> the same</font>

138
00:05:54,169 --> 00:05:59,180
<font color="#E5E5E5">number of all T's but with much fewer</font>

139
00:05:56,630 --> 00:06:00,530
<font color="#E5E5E5">public key operations</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> seems to be</font>

140
00:05:59,180 --> 00:06:03,320
<font color="#CCCCCC">exactly</font><font color="#E5E5E5"> what</font><font color="#CCCCCC"> we want</font>

141
00:06:00,530 --> 00:06:05,599
can<font color="#E5E5E5"> we just combine these two primitives</font>

142
00:06:03,320 --> 00:06:09,080
<font color="#CCCCCC">to minimize the public key operations</font>

143
00:06:05,599 --> 00:06:11,719
the NPC<font color="#E5E5E5"> the first question you need</font><font color="#CCCCCC"> to</font>

144
00:06:09,080 --> 00:06:14,859
ask<font color="#E5E5E5"> is that since we still</font><font color="#CCCCCC"> want a</font><font color="#E5E5E5"> to run</font>

145
00:06:11,720 --> 00:06:17,990
<font color="#CCCCCC">a</font><font color="#E5E5E5"> protocol is there to run</font><font color="#CCCCCC"> ot extension</font>

146
00:06:14,860 --> 00:06:21,199
the answers yes beaver so the extension

147
00:06:17,990 --> 00:06:24,050
<font color="#CCCCCC">is to round this seems even more perfect</font>

148
00:06:21,199 --> 00:06:26,180
<font color="#E5E5E5">can we just combine to run MVC was to</font>

149
00:06:24,050 --> 00:06:29,539
<font color="#CCCCCC">run all</font><font color="#E5E5E5"> the extension to minimize the</font>

150
00:06:26,180 --> 00:06:33,229
public key<font color="#CCCCCC"> operation CNPC unfortunately</font>

151
00:06:29,539 --> 00:06:34,460
the answer is no she really<font color="#E5E5E5"> combining</font>

152
00:06:33,229 --> 00:06:38,490
these two primitives

153
00:06:34,460 --> 00:06:41,039
doesn't work<font color="#E5E5E5"> why</font>

154
00:06:38,490 --> 00:06:44,030
at a very<font color="#E5E5E5"> very high level the reason is</font>

155
00:06:41,039 --> 00:06:46,500
the following<font color="#CCCCCC"> you look at this puzzle</font>

156
00:06:44,030 --> 00:06:48,448
<font color="#CCCCCC">that's to run</font><font color="#E5E5E5"> NPC</font><font color="#CCCCCC"> and we want to</font>

157
00:06:46,500 --> 00:06:51,060
minimize<font color="#CCCCCC"> a public key operations and</font>

158
00:06:48,449 --> 00:06:53,580
there is a missing piece here<font color="#E5E5E5"> and you</font>

159
00:06:51,060 --> 00:06:55,830
feel<font color="#CCCCCC"> like to</font><font color="#E5E5E5"> round out</font><font color="#CCCCCC"> the extension</font><font color="#E5E5E5"> is</font>

160
00:06:53,580 --> 00:06:59,219
exactly the missing piece can we just

161
00:06:55,830 --> 00:07:02,430
plug it in but if<font color="#CCCCCC"> you look at around</font><font color="#E5E5E5"> ot</font>

162
00:06:59,220 --> 00:07:06,150
extension<font color="#E5E5E5"> it actually looks like this so</font>

163
00:07:02,430 --> 00:07:08,940
it doesn't match and in more detail if

164
00:07:06,150 --> 00:07:11,698
you<font color="#E5E5E5"> look at to run NPC it needs to do</font>

165
00:07:08,940 --> 00:07:13,889
<font color="#E5E5E5">this many number of all T's and there</font>

166
00:07:11,699 --> 00:07:16,199
are two special<font color="#E5E5E5"> properties that</font><font color="#CCCCCC"> they</font>

167
00:07:13,889 --> 00:07:18,630
need from the<font color="#E5E5E5"> analysis</font><font color="#CCCCCC"> I will talk about</font>

168
00:07:16,199 --> 00:07:22,530
<font color="#E5E5E5">this in a minute but</font><font color="#CCCCCC"> let's look</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> two</font>

169
00:07:18,630 --> 00:07:25,259
<font color="#E5E5E5">round</font><font color="#CCCCCC"> ot</font><font color="#E5E5E5"> extension it can do the same</font>

170
00:07:22,530 --> 00:07:26,940
number<font color="#CCCCCC"> of OTUs that's no problem</font><font color="#E5E5E5"> but it</font>

171
00:07:25,259 --> 00:07:28,590
doesn't<font color="#E5E5E5"> set aside these special</font>

172
00:07:26,940 --> 00:07:32,190
<font color="#CCCCCC">properties</font><font color="#E5E5E5"> so there is a mismatch</font>

173
00:07:28,590 --> 00:07:35,549
between<font color="#E5E5E5"> these two primitives how can we</font>

174
00:07:32,190 --> 00:07:38,789
solve it again at a very very high<font color="#CCCCCC"> level</font>

175
00:07:35,550 --> 00:07:41,610
here<font color="#E5E5E5"> is what we are going to do we're</font>

176
00:07:38,789 --> 00:07:44,099
going<font color="#CCCCCC"> to somehow modify the puzzle here</font>

177
00:07:41,610 --> 00:07:47,370
<font color="#CCCCCC">and also</font><font color="#E5E5E5"> the small piece here</font><font color="#CCCCCC"> so that</font>

178
00:07:44,099 --> 00:07:49,500
they can match<font color="#E5E5E5"> in more detail we're</font>

179
00:07:47,370 --> 00:07:52,830
going to weaken the special properties

180
00:07:49,500 --> 00:07:55,139
<font color="#E5E5E5">and also we're going to look deeper into</font>

181
00:07:52,830 --> 00:07:59,400
<font color="#CCCCCC">the to run NPC and to run ot extension</font>

182
00:07:55,139 --> 00:08:01,259
somehow modify them so<font color="#CCCCCC"> that first the</font>

183
00:07:59,400 --> 00:08:04,258
<font color="#CCCCCC">weekend the properties are are</font>

184
00:08:01,259 --> 00:08:06,449
sufficient for<font color="#E5E5E5"> the to run NPC and second</font>

185
00:08:04,259 --> 00:08:09,509
to run out the extension<font color="#E5E5E5"> also satisfies</font>

186
00:08:06,449 --> 00:08:11,430
these<font color="#CCCCCC"> weaken</font><font color="#E5E5E5"> the properties in the rest</font>

187
00:08:09,509 --> 00:08:13,110
of<font color="#CCCCCC"> our talk I will</font><font color="#E5E5E5"> tell</font><font color="#CCCCCC"> you what are</font>

188
00:08:11,430 --> 00:08:15,449
these special<font color="#E5E5E5"> properties why they're</font>

189
00:08:13,110 --> 00:08:18,330
needed for NPC<font color="#CCCCCC"> and why they're</font><font color="#E5E5E5"> not</font>

190
00:08:15,449 --> 00:08:20,909
<font color="#E5E5E5">satisfied in to run ot extension and how</font>

191
00:08:18,330 --> 00:08:23,280
we're<font color="#E5E5E5"> going to solve it here's a</font>

192
00:08:20,909 --> 00:08:26,370
<font color="#E5E5E5">technical overview for the rest of our</font>

193
00:08:23,280 --> 00:08:28,830
talk first I will<font color="#CCCCCC"> need to define two</font>

194
00:08:26,370 --> 00:08:31,289
building blocks<font color="#CCCCCC"> why is called Yakubu</font>

195
00:08:28,830 --> 00:08:33,569
circuit the other is to round the

196
00:08:31,289 --> 00:08:34,890
<font color="#E5E5E5">oblivious transfer this is only place</font>

197
00:08:33,570 --> 00:08:37,529
that we need<font color="#E5E5E5"> to use public key</font>

198
00:08:34,890 --> 00:08:39,419
operations<font color="#E5E5E5"> and next I will tell you what</font>

199
00:08:37,529 --> 00:08:41,849
are<font color="#E5E5E5"> the special properties that are</font>

200
00:08:39,419 --> 00:08:44,430
needed<font color="#E5E5E5"> for the</font><font color="#CCCCCC"> existence around the</font><font color="#E5E5E5"> NPC</font>

201
00:08:41,849 --> 00:08:46,290
<font color="#E5E5E5">and why they are</font><font color="#CCCCCC"> needed</font><font color="#E5E5E5"> and also I</font><font color="#CCCCCC"> will</font>

202
00:08:44,430 --> 00:08:48,479
<font color="#CCCCCC">tell you how</font><font color="#E5E5E5"> to on ot extension works</font>

203
00:08:46,290 --> 00:08:50,769
and why it doesn't<font color="#E5E5E5"> satisfy the special</font>

204
00:08:48,480 --> 00:08:53,170
properties<font color="#E5E5E5"> why there is a mess</font>

205
00:08:50,769 --> 00:08:55,899
and finally I<font color="#E5E5E5"> will briefly tell you how</font>

206
00:08:53,170 --> 00:08:57,449
we solve the problem<font color="#E5E5E5"> okay let's get</font>

207
00:08:55,899 --> 00:09:00,100
started

208
00:08:57,449 --> 00:09:02,769
the first building block<font color="#CCCCCC"> young cowboy</font>

209
00:09:00,100 --> 00:09:05,079
circuit<font color="#E5E5E5"> and very high level it takes the</font>

210
00:09:02,769 --> 00:09:07,870
arbitrary boolean circuit<font color="#E5E5E5"> and Gobbo it</font>

211
00:09:05,079 --> 00:09:10,060
into a garbled circuit take an arbitrary

212
00:09:07,870 --> 00:09:13,029
input to the<font color="#E5E5E5"> simple to the circuit and</font>

213
00:09:10,060 --> 00:09:14,979
Gobbo it into a garbled input and then

214
00:09:13,029 --> 00:09:18,399
you can evaluate<font color="#CCCCCC"> the scabbard circuit</font>

215
00:09:14,980 --> 00:09:20,079
<font color="#CCCCCC">and figure out</font><font color="#E5E5E5"> the output security</font>

216
00:09:18,399 --> 00:09:22,629
guarantees that the only<font color="#E5E5E5"> thing that</font><font color="#CCCCCC"> you</font>

217
00:09:20,079 --> 00:09:24,519
can learn<font color="#CCCCCC"> from this evaluation</font><font color="#E5E5E5"> is the</font>

218
00:09:22,629 --> 00:09:26,319
output<font color="#CCCCCC"> nothing more</font><font color="#E5E5E5"> nothing about the</font>

219
00:09:24,519 --> 00:09:28,839
circuit nothing about input<font color="#E5E5E5"> only thing</font>

220
00:09:26,319 --> 00:09:32,769
that you can learn is the output<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font>

221
00:09:28,839 --> 00:09:35,019
<font color="#E5E5E5">the oscar</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> circuit</font><font color="#CCCCCC"> ii</font><font color="#E5E5E5"> primitive that</font>

222
00:09:32,769 --> 00:09:38,920
will go neither is<font color="#CCCCCC"> odd</font><font color="#E5E5E5"> or oblivious</font>

223
00:09:35,019 --> 00:09:40,750
transfer<font color="#E5E5E5"> it is a special</font><font color="#CCCCCC"> NPC protocol</font>

224
00:09:38,920 --> 00:09:43,089
<font color="#E5E5E5">between two parties we call them sender</font>

225
00:09:40,750 --> 00:09:45,970
and receiver<font color="#E5E5E5"> the input from the sender</font>

226
00:09:43,089 --> 00:09:47,769
is<font color="#CCCCCC"> a pair of messages m0 m1 and the</font>

227
00:09:45,970 --> 00:09:50,319
input from the receiver is a single<font color="#CCCCCC"> bit</font>

228
00:09:47,769 --> 00:09:51,959
P and the end of<font color="#E5E5E5"> Allah protocol the</font>

229
00:09:50,319 --> 00:09:54,790
receiver<font color="#E5E5E5"> gets one of the two messages</font>

230
00:09:51,959 --> 00:09:57,930
<font color="#CCCCCC">depending</font><font color="#E5E5E5"> on his choice bit so if B is</font>

231
00:09:54,790 --> 00:10:02,139
<font color="#CCCCCC">zero he gets him 0 if</font><font color="#E5E5E5"> P is</font><font color="#CCCCCC"> 1 he gets</font><font color="#E5E5E5"> m1</font>

232
00:09:57,930 --> 00:10:04,420
security guarantees<font color="#E5E5E5"> very simple</font><font color="#CCCCCC"> P is</font>

233
00:10:02,139 --> 00:10:08,160
hidden<font color="#CCCCCC"> to the sender</font><font color="#E5E5E5"> and the other</font>

234
00:10:04,420 --> 00:10:11,259
message is<font color="#CCCCCC"> hidden to</font><font color="#E5E5E5"> the receiver okay</font>

235
00:10:08,160 --> 00:10:13,839
<font color="#CCCCCC">Carano t is a speciality protocol that</font>

236
00:10:11,259 --> 00:10:16,720
only has<font color="#CCCCCC"> two rounds in the first round</font>

237
00:10:13,839 --> 00:10:18,939
<font color="#E5E5E5">the receiver somehow encrypts his</font><font color="#CCCCCC"> PHP</font>

238
00:10:16,720 --> 00:10:21,279
sends to the receiver<font color="#CCCCCC"> a</font><font color="#E5E5E5"> sense to the</font>

239
00:10:18,939 --> 00:10:24,310
sender<font color="#E5E5E5"> and</font><font color="#CCCCCC"> keeps</font><font color="#E5E5E5"> some randomness</font><font color="#CCCCCC"> as</font>

240
00:10:21,279 --> 00:10:26,589
security information in the second<font color="#E5E5E5"> round</font>

241
00:10:24,310 --> 00:10:28,649
the sender is<font color="#E5E5E5"> somehow</font><font color="#CCCCCC"> encrypts hard to</font>

242
00:10:26,589 --> 00:10:31,029
<font color="#E5E5E5">messages and sends to the receiver and</font>

243
00:10:28,649 --> 00:10:34,569
then<font color="#E5E5E5"> the receiver can use the secret</font>

244
00:10:31,029 --> 00:10:36,100
information<font color="#CCCCCC"> to recover M sub</font><font color="#E5E5E5"> B security</font>

245
00:10:34,569 --> 00:10:37,930
guarantees the same as before P is

246
00:10:36,100 --> 00:10:40,959
hidden to<font color="#E5E5E5"> the sender</font><font color="#CCCCCC"> the other</font><font color="#E5E5E5"> message</font>

247
00:10:37,930 --> 00:10:44,019
is<font color="#CCCCCC"> hidden to</font><font color="#E5E5E5"> the receiver</font><font color="#CCCCCC"> ok now we have</font>

248
00:10:40,959 --> 00:10:46,869
<font color="#E5E5E5">the two building</font><font color="#CCCCCC"> blocks we can look into</font>

249
00:10:44,019 --> 00:10:49,860
to run NPC<font color="#E5E5E5"> how does it work what</font><font color="#CCCCCC"> are the</font>

250
00:10:46,870 --> 00:10:53,379
<font color="#E5E5E5">special properties why they are</font><font color="#CCCCCC"> needed</font>

251
00:10:49,860 --> 00:10:56,470
<font color="#E5E5E5">at a very very high</font><font color="#CCCCCC"> level the</font><font color="#E5E5E5"> tauren npc</font>

252
00:10:53,379 --> 00:10:59,439
works as follows between every pair

253
00:10:56,470 --> 00:11:02,139
parties they need to<font color="#E5E5E5"> run K number of</font>

254
00:10:59,439 --> 00:11:02,699
oblivious transfer in parallel where K

255
00:11:02,139 --> 00:11:04,890
is a

256
00:11:02,700 --> 00:11:07,470
<font color="#CCCCCC">knowing the security parameter and size</font>

257
00:11:04,890 --> 00:11:10,740
of the circuit<font color="#CCCCCC"> and each</font><font color="#E5E5E5"> of these</font>

258
00:11:07,470 --> 00:11:13,050
oblivious transfer is a<font color="#E5E5E5"> to run</font><font color="#CCCCCC"> ot so the</font>

259
00:11:10,740 --> 00:11:16,800
two parties were wrong<font color="#E5E5E5"> k number of to</font>

260
00:11:13,050 --> 00:11:18,750
run<font color="#CCCCCC"> ot in parallel</font><font color="#E5E5E5"> and here are the two</font>

261
00:11:16,800 --> 00:11:22,290
special properties<font color="#CCCCCC"> that they need from</font>

262
00:11:18,750 --> 00:11:25,410
the underlying<font color="#CCCCCC"> RT the first property is</font>

263
00:11:22,290 --> 00:11:27,959
<font color="#CCCCCC">that the lease the equipment secrets are</font>

264
00:11:25,410 --> 00:11:31,199
known by the receiver<font color="#E5E5E5"> before the first</font>

265
00:11:27,960 --> 00:11:33,660
before the second round and<font color="#CCCCCC"> this is</font>

266
00:11:31,200 --> 00:11:36,090
naturally satisfied in this<font color="#E5E5E5"> case because</font>

267
00:11:33,660 --> 00:11:38,250
<font color="#CCCCCC">all these secrets are generated by the</font>

268
00:11:36,090 --> 00:11:40,500
receiver in the first run so<font color="#E5E5E5"> there</font><font color="#CCCCCC"> know</font>

269
00:11:38,250 --> 00:11:43,820
before the second<font color="#CCCCCC"> ROM</font><font color="#E5E5E5"> okay this is</font>

270
00:11:40,500 --> 00:11:46,790
<font color="#E5E5E5">satisfied the second property is</font><font color="#CCCCCC"> that</font>

271
00:11:43,820 --> 00:11:49,560
these the equipment secrets are

272
00:11:46,790 --> 00:11:53,219
independent<font color="#CCCCCC"> to each other</font><font color="#E5E5E5"> what does they</font>

273
00:11:49,560 --> 00:11:55,319
mean it means that<font color="#CCCCCC"> if</font><font color="#E5E5E5"> you want to equip</font>

274
00:11:53,220 --> 00:11:57,660
the first message you only need the

275
00:11:55,320 --> 00:11:59,790
first a secret<font color="#E5E5E5"> if you want</font><font color="#CCCCCC"> to equip</font><font color="#E5E5E5"> the</font>

276
00:11:57,660 --> 00:12:02,430
last message you only need the last a

277
00:11:59,790 --> 00:12:04,170
secret<font color="#E5E5E5"> they're all independent revealing</font>

278
00:12:02,430 --> 00:12:07,109
one secret doesn't affect any other

279
00:12:04,170 --> 00:12:09,300
<font color="#CCCCCC">ortiz</font><font color="#E5E5E5"> and this is also naturally</font>

280
00:12:07,110 --> 00:12:11,940
satisfied in this<font color="#CCCCCC"> case because all the</font>

281
00:12:09,300 --> 00:12:14,969
<font color="#CCCCCC">OT s are in parallel and independent so</font>

282
00:12:11,940 --> 00:12:16,830
the decryption<font color="#E5E5E5"> are also independent but</font>

283
00:12:14,970 --> 00:12:18,840
now you might be<font color="#E5E5E5"> asking why do we need</font>

284
00:12:16,830 --> 00:12:21,870
these two primitives they're trivially

285
00:12:18,840 --> 00:12:24,200
satisfied<font color="#E5E5E5"> they are actually very</font>

286
00:12:21,870 --> 00:12:27,240
important<font color="#CCCCCC"> for the to run NPC to work</font>

287
00:12:24,200 --> 00:12:31,800
<font color="#E5E5E5">let's take a closer look at the to run</font>

288
00:12:27,240 --> 00:12:34,200
NPC what are the messages in the first

289
00:12:31,800 --> 00:12:38,400
round every party prepares a bunch of

290
00:12:34,200 --> 00:12:40,770
<font color="#CCCCCC">OTO messages and broadcasts in</font><font color="#E5E5E5"> the</font>

291
00:12:38,400 --> 00:12:42,959
second round<font color="#E5E5E5"> every party prepares a</font>

292
00:12:40,770 --> 00:12:45,860
bunch of gobble turkeys along with<font color="#CCCCCC"> ot</font>

293
00:12:42,960 --> 00:12:49,260
<font color="#CCCCCC">two</font><font color="#E5E5E5"> messages and broadcasts that's it</font>

294
00:12:45,860 --> 00:12:51,260
one crucial<font color="#CCCCCC"> point here is that the</font>

295
00:12:49,260 --> 00:12:53,790
decryption secrets are somehow

296
00:12:51,260 --> 00:12:56,370
<font color="#E5E5E5">hard-coded inside the gobble circuits</font>

297
00:12:53,790 --> 00:12:59,550
and that's why we need the<font color="#E5E5E5"> first</font>

298
00:12:56,370 --> 00:13:01,050
<font color="#E5E5E5">property because the decryption secrets</font>

299
00:12:59,550 --> 00:13:03,089
are<font color="#CCCCCC"> hard-coded inside the</font><font color="#E5E5E5"> gobble</font>

300
00:13:01,050 --> 00:13:05,189
circuits<font color="#E5E5E5"> they have to be known by the</font>

301
00:13:03,090 --> 00:13:07,140
receiver before<font color="#E5E5E5"> the second round because</font>

302
00:13:05,190 --> 00:13:10,680
<font color="#CCCCCC">they are used in</font><font color="#E5E5E5"> generating the second</font>

303
00:13:07,140 --> 00:13:13,470
round messages another crucial point

304
00:13:10,680 --> 00:13:15,689
<font color="#CCCCCC">here is that after the</font><font color="#E5E5E5"> second</font><font color="#CCCCCC"> round the</font>

305
00:13:13,470 --> 00:13:19,650
parties will try<font color="#E5E5E5"> to evaluate this car</font>

306
00:13:15,690 --> 00:13:22,860
so kids<font color="#E5E5E5"> and in the evaluation these</font>

307
00:13:19,650 --> 00:13:24,540
decryption secrets<font color="#CCCCCC"> are output by</font>

308
00:13:22,860 --> 00:13:26,250
different<font color="#CCCCCC"> garbled circuits in different</font>

309
00:13:24,540 --> 00:13:29,370
places depending on<font color="#E5E5E5"> the actual</font>

310
00:13:26,250 --> 00:13:32,130
computation<font color="#E5E5E5"> so that's why we need the</font>

311
00:13:29,370 --> 00:13:33,990
second property<font color="#E5E5E5"> revealing one secret</font>

312
00:13:32,130 --> 00:13:36,660
<font color="#E5E5E5">shouldn't affect the security</font><font color="#CCCCCC"> of any</font>

313
00:13:33,990 --> 00:13:41,100
other<font color="#CCCCCC"> OGIS</font><font color="#E5E5E5"> the decryption secrets have</font>

314
00:13:36,660 --> 00:13:42,990
to be<font color="#E5E5E5"> independent to each other</font><font color="#CCCCCC"> ok so</font>

315
00:13:41,100 --> 00:13:44,820
now we have<font color="#CCCCCC"> seen the two special</font>

316
00:13:42,990 --> 00:13:47,400
properties and why they<font color="#CCCCCC"> are needed</font><font color="#E5E5E5"> for</font>

317
00:13:44,820 --> 00:13:51,540
<font color="#CCCCCC">MPC</font><font color="#E5E5E5"> now let's look at two round</font><font color="#CCCCCC"> ot</font>

318
00:13:47,400 --> 00:13:53,910
extension<font color="#E5E5E5"> ot extension at a very high</font>

319
00:13:51,540 --> 00:13:56,430
level<font color="#E5E5E5"> the</font><font color="#CCCCCC"> idea is the following</font><font color="#E5E5E5"> the two</font>

320
00:13:53,910 --> 00:13:57,089
parties<font color="#E5E5E5"> instead</font><font color="#CCCCCC"> of doing K oblivious</font>

321
00:13:56,430 --> 00:14:00,540
transfer

322
00:13:57,090 --> 00:14:02,550
they just do<font color="#E5E5E5"> lambda of them and in</font>

323
00:14:00,540 --> 00:14:04,860
addition the<font color="#E5E5E5"> the two parties who were</font>

324
00:14:02,550 --> 00:14:07,189
around polynomial<font color="#CCCCCC"> number of symmetric</font>

325
00:14:04,860 --> 00:14:09,600
key operations which we don't<font color="#E5E5E5"> care</font><font color="#CCCCCC"> so</font>

326
00:14:07,190 --> 00:14:13,680
<font color="#CCCCCC">this way you can minimize</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> public key</font>

327
00:14:09,600 --> 00:14:15,540
operations to just lambda and<font color="#CCCCCC"> to on the</font>

328
00:14:13,680 --> 00:14:18,329
OT extension in particular<font color="#E5E5E5"> works as</font>

329
00:14:15,540 --> 00:14:21,209
follows<font color="#CCCCCC"> it has two rounds in the first</font>

330
00:14:18,330 --> 00:14:23,730
round the receiver generates a new set

331
00:14:21,210 --> 00:14:26,400
of choice bits<font color="#E5E5E5"> lambda of them somehow</font>

332
00:14:23,730 --> 00:14:30,570
encrypts it sends to<font color="#E5E5E5"> the sender and keep</font>

333
00:14:26,400 --> 00:14:32,699
some secret<font color="#E5E5E5"> information in the second</font>

334
00:14:30,570 --> 00:14:35,100
<font color="#E5E5E5">round the sender somehow encrypts all</font>

335
00:14:32,700 --> 00:14:37,260
<font color="#E5E5E5">her</font><font color="#CCCCCC"> messages and sends to the receiver</font>

336
00:14:35,100 --> 00:14:39,360
<font color="#E5E5E5">and then the receiver can use the secret</font>

337
00:14:37,260 --> 00:14:42,689
<font color="#E5E5E5">information to recover all the messages</font>

338
00:14:39,360 --> 00:14:45,660
<font color="#E5E5E5">now</font><font color="#CCCCCC"> let's see if the two</font><font color="#E5E5E5"> round the OT</font>

339
00:14:42,690 --> 00:14:48,720
extension satisfies the two special

340
00:14:45,660 --> 00:14:50,130
properties the first property the

341
00:14:48,720 --> 00:14:52,890
<font color="#E5E5E5">equation secrets</font><font color="#CCCCCC"> are know by the</font>

342
00:14:50,130 --> 00:14:55,200
receiver before<font color="#E5E5E5"> the second round this is</font>

343
00:14:52,890 --> 00:14:57,480
satisfied<font color="#CCCCCC"> because</font><font color="#E5E5E5"> all these secrets are</font>

344
00:14:55,200 --> 00:14:59,430
generated by the receiver in the first

345
00:14:57,480 --> 00:15:02,730
<font color="#E5E5E5">round</font><font color="#CCCCCC"> so there</font><font color="#E5E5E5"> are no before the second</font>

346
00:14:59,430 --> 00:15:05,550
round<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is good however the second</font>

347
00:15:02,730 --> 00:15:07,530
property is unsatisfied namely the

348
00:15:05,550 --> 00:15:08,099
decryption secrets are not independent

349
00:15:07,530 --> 00:15:10,980
anymore

350
00:15:08,100 --> 00:15:14,280
if you want to decrypt any of these

351
00:15:10,980 --> 00:15:18,470
messages<font color="#E5E5E5"> you need to</font><font color="#CCCCCC"> actually review</font><font color="#E5E5E5"> the</font>

352
00:15:14,280 --> 00:15:22,010
<font color="#E5E5E5">entire secret here and why is that</font>

353
00:15:18,470 --> 00:15:24,630
let's take a closer look<font color="#CCCCCC"> at the protocol</font>

354
00:15:22,010 --> 00:15:26,880
<font color="#CCCCCC">so in the first</font><font color="#E5E5E5"> round the receiver</font>

355
00:15:24,630 --> 00:15:30,110
randomly generates a new set of choice

356
00:15:26,880 --> 00:15:30,110
bits<font color="#CCCCCC"> lambda of them</font>

357
00:15:30,329 --> 00:15:37,269
and create<font color="#E5E5E5"> lambda would he want messages</font>

358
00:15:34,990 --> 00:15:39,519
for<font color="#E5E5E5"> these new toys</font><font color="#CCCCCC"> bits he</font><font color="#E5E5E5"> sends to the</font>

359
00:15:37,269 --> 00:15:42,459
sender<font color="#E5E5E5"> and keep some secret information</font>

360
00:15:39,519 --> 00:15:45,730
<font color="#CCCCCC">it computes something else</font><font color="#E5E5E5"> also sends to</font>

361
00:15:42,459 --> 00:15:48,310
the sender in a certain round<font color="#E5E5E5"> the</font>

362
00:15:45,730 --> 00:15:51,579
message sent from the<font color="#CCCCCC"> sender consists of</font>

363
00:15:48,310 --> 00:15:54,040
a big<font color="#CCCCCC"> cabo circuit along</font><font color="#E5E5E5"> with a bunch of</font>

364
00:15:51,579 --> 00:15:57,550
<font color="#CCCCCC">42 messages which are corresponding to</font>

365
00:15:54,040 --> 00:16:01,959
<font color="#E5E5E5">these</font><font color="#CCCCCC"> ot1 messages</font><font color="#E5E5E5"> and now the receiver</font>

366
00:15:57,550 --> 00:16:04,599
<font color="#E5E5E5">can use the secret information to</font>

367
00:16:01,959 --> 00:16:07,239
decrypt these ot2 messages and the

368
00:16:04,600 --> 00:16:10,629
output is actually<font color="#E5E5E5"> the garbled input so</font>

369
00:16:07,240 --> 00:16:12,490
he can evaluate the<font color="#CCCCCC"> gaba circuit</font><font color="#E5E5E5"> and get</font>

370
00:16:10,629 --> 00:16:16,589
the output which<font color="#CCCCCC"> is exactly what he</font>

371
00:16:12,490 --> 00:16:19,300
wants<font color="#E5E5E5"> what is inside the</font><font color="#CCCCCC"> Scarfo circuit</font>

372
00:16:16,589 --> 00:16:21,129
this is a functionality<font color="#E5E5E5"> of this garbo</font>

373
00:16:19,300 --> 00:16:23,469
circuit but<font color="#E5E5E5"> you don't have to look very</font>

374
00:16:21,129 --> 00:16:27,009
closely<font color="#E5E5E5"> into</font><font color="#CCCCCC"> it but one thing</font><font color="#E5E5E5"> you should</font>

375
00:16:23,470 --> 00:16:29,500
notice is that this circuit takes as

376
00:16:27,009 --> 00:16:32,139
input a string of all the new choice

377
00:16:29,500 --> 00:16:34,060
bits and inside the functionality<font color="#E5E5E5"> it</font>

378
00:16:32,139 --> 00:16:37,389
computes a pseudo-random generator on

379
00:16:34,060 --> 00:16:39,819
this<font color="#CCCCCC"> s which means if you want</font><font color="#E5E5E5"> to</font>

380
00:16:37,389 --> 00:16:42,759
compute<font color="#E5E5E5"> any of these messages you have</font>

381
00:16:39,819 --> 00:16:45,759
<font color="#CCCCCC">to take</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> ink tau s and first to</font>

382
00:16:42,759 --> 00:16:48,250
compute a PRG<font color="#E5E5E5"> which means if you want to</font>

383
00:16:45,759 --> 00:16:51,519
<font color="#E5E5E5">do if you want to decrypt any of these</font>

384
00:16:48,250 --> 00:16:53,649
<font color="#E5E5E5">ot messages you have to</font><font color="#CCCCCC"> actually reveal</font>

385
00:16:51,519 --> 00:16:57,670
the Intel secret and recover all<font color="#CCCCCC"> the</font>

386
00:16:53,649 --> 00:17:00,100
garbled inputs and that's the reason why

387
00:16:57,670 --> 00:17:02,349
the second property isn't<font color="#E5E5E5"> satisfied the</font>

388
00:17:00,100 --> 00:17:07,449
<font color="#E5E5E5">decryption secrets are not independent</font>

389
00:17:02,350 --> 00:17:09,909
<font color="#E5E5E5">at all</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so now we have</font><font color="#CCCCCC"> seen why there</font>

390
00:17:07,449 --> 00:17:13,569
is a mismatch<font color="#CCCCCC"> between to run</font><font color="#E5E5E5"> MPC</font><font color="#CCCCCC"> and to</font>

391
00:17:09,909 --> 00:17:16,179
run<font color="#CCCCCC"> ot extension in the last few minutes</font>

392
00:17:13,569 --> 00:17:19,750
<font color="#CCCCCC">our talk I briefly tell you how we can</font>

393
00:17:16,179 --> 00:17:22,000
solve it let's go back<font color="#E5E5E5"> to the tool and</font>

394
00:17:19,750 --> 00:17:25,179
ot extension<font color="#E5E5E5"> it doesn't satisfy the</font>

395
00:17:22,000 --> 00:17:28,359
second property the<font color="#E5E5E5"> first thing that we</font>

396
00:17:25,179 --> 00:17:31,179
<font color="#E5E5E5">are</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to do is to somehow modify the</font>

397
00:17:28,359 --> 00:17:33,010
<font color="#E5E5E5">two round</font><font color="#CCCCCC"> OT extension such that the</font>

398
00:17:31,179 --> 00:17:37,960
second property<font color="#E5E5E5"> will be satisfied</font><font color="#CCCCCC"> and</font>

399
00:17:33,010 --> 00:17:40,390
here's idea<font color="#E5E5E5"> the sender will in addition</font>

400
00:17:37,960 --> 00:17:41,350
generate a new set of<font color="#E5E5E5"> messages</font><font color="#CCCCCC"> we call</font>

401
00:17:40,390 --> 00:17:43,269
them masks

402
00:17:41,350 --> 00:17:46,590
and the two parties were around the

403
00:17:43,269 --> 00:17:51,610
<font color="#CCCCCC">tauren OT extension</font><font color="#E5E5E5"> all these masks and</font>

404
00:17:46,590 --> 00:17:54,899
in addition the the<font color="#E5E5E5"> sender will send her</font>

405
00:17:51,610 --> 00:17:58,870
original messages<font color="#CCCCCC"> xor</font><font color="#E5E5E5"> with these masks</font>

406
00:17:54,899 --> 00:18:02,529
now the receiver can use these masks<font color="#E5E5E5"> to</font>

407
00:17:58,870 --> 00:18:05,789
<font color="#E5E5E5">UM ask the corresponding message</font><font color="#CCCCCC"> so</font>

408
00:18:02,529 --> 00:18:08,980
these masks are kind of a one-time pads

409
00:18:05,789 --> 00:18:11,710
but<font color="#E5E5E5"> the benefit of this is that</font><font color="#CCCCCC"> now you</font>

410
00:18:08,980 --> 00:18:15,399
<font color="#E5E5E5">can view these masks as decryption</font>

411
00:18:11,710 --> 00:18:17,590
<font color="#E5E5E5">sequence</font><font color="#CCCCCC"> and now they are independent if</font>

412
00:18:15,399 --> 00:18:19,330
you want to recover any<font color="#E5E5E5"> of these</font>

413
00:18:17,590 --> 00:18:21,959
messages you only need to<font color="#CCCCCC"> reveal the</font>

414
00:18:19,330 --> 00:18:24,879
corresponding<font color="#CCCCCC"> masks</font><font color="#E5E5E5"> they're independent</font>

415
00:18:21,960 --> 00:18:28,269
however<font color="#E5E5E5"> the first property</font><font color="#CCCCCC"> isn't</font>

416
00:18:24,879 --> 00:18:30,519
satisfied<font color="#E5E5E5"> anymore because</font><font color="#CCCCCC"> now these are</font>

417
00:18:28,269 --> 00:18:32,409
the<font color="#E5E5E5"> decryption secrets and they're only</font>

418
00:18:30,519 --> 00:18:35,860
know by the receiver<font color="#E5E5E5"> after</font><font color="#CCCCCC"> the second</font>

419
00:18:32,409 --> 00:18:39,250
round remember we<font color="#E5E5E5"> need this</font><font color="#CCCCCC"> property</font>

420
00:18:35,860 --> 00:18:41,320
because<font color="#E5E5E5"> in the</font><font color="#CCCCCC"> to run NPC protocol the</font>

421
00:18:39,250 --> 00:18:44,529
<font color="#E5E5E5">equipment secrets are hard-coded</font>

422
00:18:41,320 --> 00:18:46,899
inside the<font color="#E5E5E5"> capo circuit and we're going</font>

423
00:18:44,529 --> 00:18:50,860
<font color="#CCCCCC">to solve this problem</font><font color="#E5E5E5"> by somehow</font>

424
00:18:46,899 --> 00:18:53,189
weakening this property<font color="#E5E5E5"> and the idea is</font>

425
00:18:50,860 --> 00:18:57,129
to<font color="#E5E5E5"> remove this restriction</font>

426
00:18:53,190 --> 00:19:00,100
so here's idea now the decryption

427
00:18:57,129 --> 00:19:03,158
secrets become<font color="#E5E5E5"> these masks and instead</font>

428
00:19:00,100 --> 00:19:06,789
<font color="#CCCCCC">of hard-coding these masks</font><font color="#E5E5E5"> inside the</font>

429
00:19:03,159 --> 00:19:09,610
<font color="#CCCCCC">Gobbo circuit</font><font color="#E5E5E5"> we will have another</font><font color="#CCCCCC"> garbo</font>

430
00:19:06,789 --> 00:19:13,809
circuit that computes<font color="#E5E5E5"> these masks and</font>

431
00:19:09,610 --> 00:19:16,029
somehow feed into these<font color="#CCCCCC"> gaba circuits so</font>

432
00:19:13,809 --> 00:19:18,309
we will weaken<font color="#CCCCCC"> the special properties to</font>

433
00:19:16,029 --> 00:19:21,519
be the decryption secrets can<font color="#E5E5E5"> be somehow</font>

434
00:19:18,309 --> 00:19:24,428
computed<font color="#E5E5E5"> and fed into the the</font><font color="#CCCCCC"> gaba</font>

435
00:19:21,519 --> 00:19:26,919
circuits this is very vague<font color="#CCCCCC"> but after</font>

436
00:19:24,429 --> 00:19:29,710
weakening<font color="#E5E5E5"> the special properties we</font><font color="#CCCCCC"> can</font>

437
00:19:26,919 --> 00:19:31,539
further modify the<font color="#E5E5E5"> to run NPC</font><font color="#CCCCCC"> and to run</font>

438
00:19:29,710 --> 00:19:34,720
over<font color="#E5E5E5"> the extension so</font><font color="#CCCCCC"> that everything</font>

439
00:19:31,539 --> 00:19:38,200
everything<font color="#E5E5E5"> matches I won't have time to</font>

440
00:19:34,720 --> 00:19:40,750
<font color="#E5E5E5">talk about that but let me summarize so</font>

441
00:19:38,200 --> 00:19:42,820
this is what we achieved<font color="#E5E5E5"> to run an NPC</font>

442
00:19:40,750 --> 00:19:46,809
protocol from<font color="#E5E5E5"> the minimum assumption to</font>

443
00:19:42,820 --> 00:19:48,730
run<font color="#E5E5E5"> ot and using we improve the number</font>

444
00:19:46,809 --> 00:19:50,590
of public key operations to<font color="#CCCCCC"> be</font>

445
00:19:48,730 --> 00:19:53,990
independent of<font color="#E5E5E5"> the size of the circuit</font>

446
00:19:50,590 --> 00:19:56,689
<font color="#E5E5E5">and when we try to combine to run NPC</font>

447
00:19:53,990 --> 00:19:59,179
was to run<font color="#E5E5E5"> ot extension they don't match</font>

448
00:19:56,690 --> 00:20:01,250
<font color="#CCCCCC">so we somehow</font><font color="#E5E5E5"> change the special</font>

449
00:19:59,179 --> 00:20:03,740
properties that<font color="#E5E5E5"> are needed for</font><font color="#CCCCCC"> MPC and</font>

450
00:20:01,250 --> 00:20:07,400
modify these<font color="#E5E5E5"> two primitives so that</font>

451
00:20:03,740 --> 00:20:10,429
everything<font color="#CCCCCC"> can match so that's that's</font>

452
00:20:07,400 --> 00:20:12,440
all for<font color="#E5E5E5"> symmetric that's all for semi</font>

453
00:20:10,429 --> 00:20:13,820
honest study for malicious<font color="#CCCCCC"> studying</font>

454
00:20:12,440 --> 00:20:17,470
there are more challenges<font color="#CCCCCC"> and we</font>

455
00:20:13,820 --> 00:20:21,290
developed<font color="#CCCCCC"> new tools to</font><font color="#E5E5E5"> solve them a</font>

456
00:20:17,470 --> 00:20:23,210
little bit<font color="#CCCCCC"> under future work</font><font color="#E5E5E5"> essential</font>

457
00:20:21,290 --> 00:20:26,960
question we<font color="#E5E5E5"> want to ask is how to make</font>

458
00:20:23,210 --> 00:20:28,700
him more practical like for example<font color="#E5E5E5"> now</font>

459
00:20:26,960 --> 00:20:30,950
the construction<font color="#E5E5E5"> is making non</font><font color="#CCCCCC"> gray box</font>

460
00:20:28,700 --> 00:20:34,309
use of the underlying crypto operations

461
00:20:30,950 --> 00:20:36,140
can we make<font color="#CCCCCC"> your black box</font><font color="#E5E5E5"> unfortunately</font>

462
00:20:34,309 --> 00:20:38,270
it is<font color="#CCCCCC"> impossible if you want to keep</font>

463
00:20:36,140 --> 00:20:42,230
<font color="#E5E5E5">hitting</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> runs and you will hear it</font>

464
00:20:38,270 --> 00:20:43,520
<font color="#E5E5E5">why in tomorrow morning second talk so</font>

465
00:20:42,230 --> 00:20:46,580
can we can we

466
00:20:43,520 --> 00:20:48,830
<font color="#E5E5E5">waken it a little bit to have black box</font>

467
00:20:46,580 --> 00:20:51,230
<font color="#CCCCCC">/ three rounds maybe</font><font color="#E5E5E5"> combining with</font><font color="#CCCCCC"> the</font>

468
00:20:48,830 --> 00:20:55,159
three round<font color="#E5E5E5"> black box of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> extension</font>

469
00:20:51,230 --> 00:20:56,450
<font color="#E5E5E5">and</font><font color="#CCCCCC"> further if we want to</font><font color="#E5E5E5"> make it more</font>

470
00:20:55,160 --> 00:20:59,270
<font color="#E5E5E5">practical what are the</font><font color="#CCCCCC"> concrete</font>

471
00:20:56,450 --> 00:21:01,030
optimizations that we can do with<font color="#E5E5E5"> that I</font>

472
00:20:59,270 --> 00:21:07,119
will conclude<font color="#E5E5E5"> my talk</font>

473
00:21:01,030 --> 00:21:07,119
[Applause]

