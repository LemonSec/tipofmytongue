1
00:00:04,870 --> 00:00:10,780
I'm going to then talk<font color="#E5E5E5"> about the</font>

2
00:00:07,479 --> 00:00:13,929
interactive case<font color="#E5E5E5"> so here we are the</font>

3
00:00:10,780 --> 00:00:15,549
answer is<font color="#E5E5E5"> coming and something is known</font>

4
00:00:13,929 --> 00:00:20,650
about the interactive case let me<font color="#CCCCCC"> just</font>

5
00:00:15,549 --> 00:00:23,410
very quickly<font color="#CCCCCC"> repeat</font><font color="#E5E5E5"> this so</font><font color="#CCCCCC"> we're we</font>

6
00:00:20,650 --> 00:00:25,390
almost all<font color="#CCCCCC"> start teaching of the crypto</font>

7
00:00:23,410 --> 00:00:28,869
<font color="#E5E5E5">course is Alice</font><font color="#CCCCCC"> involved they want to</font>

8
00:00:25,390 --> 00:00:30,520
exchange a key what we<font color="#CCCCCC"> often don't</font><font color="#E5E5E5"> say</font>

9
00:00:28,869 --> 00:00:32,920
in the basic crypto course is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is</font>

10
00:00:30,520 --> 00:00:38,019
not<font color="#E5E5E5"> just Alice and Bob out there there</font>

11
00:00:32,920 --> 00:00:40,809
are<font color="#CCCCCC"> lots of people out there so and and</font>

12
00:00:38,019 --> 00:00:42,820
this is a problem<font color="#E5E5E5"> because we have lots</font>

13
00:00:40,809 --> 00:00:45,129
of<font color="#E5E5E5"> security proofs that work</font><font color="#CCCCCC"> very well</font>

14
00:00:42,820 --> 00:00:47,800
for<font color="#CCCCCC"> two people but when you mix in lots</font>

15
00:00:45,129 --> 00:00:51,699
of people we get lots of trouble<font color="#CCCCCC"> as we</font>

16
00:00:47,800 --> 00:00:54,819
shall see let's just remind<font color="#E5E5E5"> ourselves</font>

17
00:00:51,699 --> 00:00:57,248
what are the<font color="#CCCCCC"> properties</font><font color="#E5E5E5"> of key exchange</font>

18
00:00:54,820 --> 00:01:00,399
what does the what is the adversary

19
00:00:57,249 --> 00:01:02,440
allowed to do so the adversary first of

20
00:01:00,399 --> 00:01:03,999
all he directs everyone because we're

21
00:01:02,440 --> 00:01:06,700
trying<font color="#E5E5E5"> to give the adversary as much</font>

22
00:01:03,999 --> 00:01:09,760
power<font color="#E5E5E5"> as</font><font color="#CCCCCC"> possible</font><font color="#E5E5E5"> and to get as much</font>

23
00:01:06,700 --> 00:01:11,740
<font color="#E5E5E5">power as</font><font color="#CCCCCC"> possible well we have to allow</font>

24
00:01:09,760 --> 00:01:12,970
<font color="#CCCCCC">him to</font><font color="#E5E5E5"> do everything that could</font>

25
00:01:11,740 --> 00:01:17,589
conceivably<font color="#E5E5E5"> give him an advantage</font>

26
00:01:12,970 --> 00:01:19,720
<font color="#CCCCCC">without making his work too easy without</font>

27
00:01:17,590 --> 00:01:22,570
<font color="#CCCCCC">these trivial queries that we talked</font>

28
00:01:19,720 --> 00:01:25,240
about<font color="#E5E5E5"> in a previous session so he</font>

29
00:01:22,570 --> 00:01:27,610
directs every honest user he can inspect

30
00:01:25,240 --> 00:01:29,229
<font color="#E5E5E5">keys and then he gets the wheel key or</font>

31
00:01:27,610 --> 00:01:31,750
he can test<font color="#E5E5E5"> keys and this is the real a</font>

32
00:01:29,230 --> 00:01:35,020
random query<font color="#E5E5E5"> that's where he earns his</font>

33
00:01:31,750 --> 00:01:37,060
<font color="#CCCCCC">money</font><font color="#E5E5E5"> so to speak</font><font color="#CCCCCC"> he controls Network of</font>

34
00:01:35,020 --> 00:01:40,240
course<font color="#CCCCCC"> and he can also adaptively</font>

35
00:01:37,060 --> 00:01:46,060
corrupt users and this is what really

36
00:01:40,240 --> 00:01:48,310
causes trouble for us all so<font color="#CCCCCC"> we'll just</font>

37
00:01:46,060 --> 00:01:51,010
remind ourselves what our<font color="#E5E5E5"> goal is</font><font color="#CCCCCC"> well</font>

38
00:01:48,310 --> 00:01:53,380
we want authenticated key exchange<font color="#E5E5E5"> and</font>

39
00:01:51,010 --> 00:01:54,850
<font color="#E5E5E5">I've tried to render it</font><font color="#CCCCCC"> into English and</font>

40
00:01:53,380 --> 00:01:57,759
some of you<font color="#E5E5E5"> can probably find some</font>

41
00:01:54,850 --> 00:02:01,179
corner cases<font color="#E5E5E5"> where this is wrong never</font>

42
00:01:57,760 --> 00:02:03,700
<font color="#E5E5E5">mind once we have a security notion what</font>

43
00:02:01,180 --> 00:02:06,520
we next<font color="#CCCCCC"> want is a security proof we want</font>

44
00:02:03,700 --> 00:02:08,348
to prove that<font color="#E5E5E5"> our scheme is</font><font color="#CCCCCC"> secure and</font>

45
00:02:06,520 --> 00:02:11,230
this<font color="#E5E5E5"> usually</font><font color="#CCCCCC"> takes the form of</font><font color="#E5E5E5"> it</font>

46
00:02:08,348 --> 00:02:15,488
<font color="#CCCCCC">reduction why do we want security</font><font color="#E5E5E5"> proofs</font>

47
00:02:11,230 --> 00:02:17,280
<font color="#CCCCCC">and there are well we had this slide in</font>

48
00:02:15,489 --> 00:02:20,280
the previous talk<font color="#E5E5E5"> to</font>

49
00:02:17,280 --> 00:02:24,450
the first<font color="#CCCCCC"> mathematical answer</font><font color="#E5E5E5"> is why not</font>

50
00:02:20,280 --> 00:02:26,760
<font color="#CCCCCC">it's interesting the second</font><font color="#E5E5E5"> and some</font>

51
00:02:24,450 --> 00:02:29,910
people actually use<font color="#E5E5E5"> this as an</font><font color="#CCCCCC"> argument</font>

52
00:02:26,760 --> 00:02:32,040
<font color="#CCCCCC">if we have a security proof we know that</font>

53
00:02:29,910 --> 00:02:35,010
the adversary in some sense has to

54
00:02:32,040 --> 00:02:37,350
<font color="#E5E5E5">tangle with the mathematical problems</font>

55
00:02:35,010 --> 00:02:41,489
underlying our key exchange<font color="#E5E5E5"> so we</font>

56
00:02:37,350 --> 00:02:43,560
haven't<font color="#CCCCCC"> really messed up</font><font color="#E5E5E5"> okay and the</font>

57
00:02:41,490 --> 00:02:45,300
third reason you<font color="#E5E5E5"> might want to give is</font>

58
00:02:43,560 --> 00:02:49,680
that<font color="#CCCCCC"> the</font><font color="#E5E5E5"> security proof is going</font><font color="#CCCCCC"> to help</font>

59
00:02:45,300 --> 00:02:53,850
us choose<font color="#E5E5E5"> security parameters because we</font>

60
00:02:49,680 --> 00:02:55,860
know<font color="#CCCCCC"> that</font><font color="#E5E5E5"> and then this just saying that</font>

61
00:02:53,850 --> 00:02:57,239
we have a<font color="#CCCCCC"> polynomial time</font><font color="#E5E5E5"> bla bla bla</font><font color="#CCCCCC"> it</font>

62
00:02:55,860 --> 00:03:00,510
doesn't really help us we need<font color="#CCCCCC"> to be a</font>

63
00:02:57,239 --> 00:03:03,420
bit<font color="#E5E5E5"> more concrete</font><font color="#CCCCCC"> so we get this</font><font color="#E5E5E5"> if you</font>

64
00:03:00,510 --> 00:03:05,579
have an attacker with advantage t sorry

65
00:03:03,420 --> 00:03:10,708
it using time<font color="#CCCCCC"> t with advantage epsilon</font>

66
00:03:05,580 --> 00:03:15,630
<font color="#CCCCCC">bla bla bla</font><font color="#E5E5E5"> and this we can then use to</font>

67
00:03:10,709 --> 00:03:18,600
<font color="#E5E5E5">decide security parameters and then as a</font>

68
00:03:15,630 --> 00:03:21,660
previous<font color="#E5E5E5"> talk mentioned if we can have a</font>

69
00:03:18,600 --> 00:03:25,380
tight reduction<font color="#E5E5E5"> a tight reduction is one</font>

70
00:03:21,660 --> 00:03:27,870
where<font color="#CCCCCC"> there</font><font color="#E5E5E5"> we don't get a loss of</font>

71
00:03:25,380 --> 00:03:31,470
advantage or an increase in time by

72
00:03:27,870 --> 00:03:33,420
running<font color="#E5E5E5"> the reduction then we can</font>

73
00:03:31,470 --> 00:03:36,570
probably<font color="#E5E5E5"> have smaller keys and that</font>

74
00:03:33,420 --> 00:03:39,798
might result in effect more effective

75
00:03:36,570 --> 00:03:42,420
systems<font color="#E5E5E5"> if you actually believe in this</font>

76
00:03:39,799 --> 00:03:44,790
provable security I want to use it to

77
00:03:42,420 --> 00:03:49,890
choose security<font color="#E5E5E5"> parameters of course</font>

78
00:03:44,790 --> 00:03:52,260
today no one does so but anyway let's

79
00:03:49,890 --> 00:03:54,179
just yet again remind ourselves what<font color="#E5E5E5"> is</font>

80
00:03:52,260 --> 00:03:56,040
<font color="#E5E5E5">the diffie-hellman</font><font color="#CCCCCC"> why do we care</font><font color="#E5E5E5"> about</font>

81
00:03:54,180 --> 00:04:00,000
the fuel<font color="#CCCCCC"> Manuel because we're going</font><font color="#E5E5E5"> to</font>

82
00:03:56,040 --> 00:04:04,019
make<font color="#E5E5E5"> different better</font><font color="#CCCCCC"> you thought that</font>

83
00:04:00,000 --> 00:04:07,440
<font color="#E5E5E5">was impossible but just wait so we all</font>

84
00:04:04,019 --> 00:04:09,180
know diffie-hellman<font color="#E5E5E5"> and in a very</font>

85
00:04:07,440 --> 00:04:10,709
simplified case we can say<font color="#E5E5E5"> that the</font>

86
00:04:09,180 --> 00:04:12,840
adversary<font color="#CCCCCC"> is going to promise not to</font>

87
00:04:10,709 --> 00:04:15,269
tamper<font color="#CCCCCC"> with</font><font color="#E5E5E5"> any messages and he's also</font>

88
00:04:12,840 --> 00:04:18,120
telling<font color="#E5E5E5"> us in advance which users he has</font>

89
00:04:15,269 --> 00:04:22,530
corrupted<font color="#CCCCCC"> and then we can do a very</font><font color="#E5E5E5"> nice</font>

90
00:04:18,120 --> 00:04:25,650
reduction<font color="#CCCCCC"> from to prove that this</font><font color="#E5E5E5"> de</font>

91
00:04:22,530 --> 00:04:28,919
<font color="#CCCCCC">filma</font><font color="#E5E5E5"> key exchange is actually secure so</font>

92
00:04:25,650 --> 00:04:30,780
what we do is if<font color="#E5E5E5"> Carol which were what</font>

93
00:04:28,919 --> 00:04:33,389
which Alice wants<font color="#E5E5E5"> to talk to it</font>

94
00:04:30,780 --> 00:04:35,940
is corrupt<font color="#CCCCCC"> then you just</font><font color="#E5E5E5"> run</font><font color="#CCCCCC"> the</font>

95
00:04:33,389 --> 00:04:39,240
diffie-hellman key exchange<font color="#E5E5E5"> as usual why</font>

96
00:04:35,940 --> 00:04:42,750
well<font color="#CCCCCC"> because you have no expectations of</font>

97
00:04:39,240 --> 00:04:44,160
<font color="#E5E5E5">privacy for this key because Carol</font>

98
00:04:42,750 --> 00:04:47,700
you're the one<font color="#E5E5E5"> you're talking to is</font>

99
00:04:44,160 --> 00:04:51,690
corrupt<font color="#CCCCCC"> so who cares</font><font color="#E5E5E5"> however if you're</font>

100
00:04:47,700 --> 00:04:55,110
talking<font color="#E5E5E5"> to</font><font color="#CCCCCC"> an almost</font><font color="#E5E5E5"> Bob then you just</font>

101
00:04:51,690 --> 00:04:57,210
pick out<font color="#CCCCCC"> a few</font><font color="#E5E5E5"> Hellman tuple you use the</font>

102
00:04:55,110 --> 00:05:00,900
X and the y as your messages back and

103
00:04:57,210 --> 00:05:02,789
<font color="#E5E5E5">forth</font><font color="#CCCCCC"> and then you use the</font><font color="#E5E5E5"> third or the</font>

104
00:05:00,900 --> 00:05:07,460
<font color="#E5E5E5">fourth element of the defilement tuple</font>

105
00:05:02,790 --> 00:05:12,150
as your key and as<font color="#E5E5E5"> Lisa just explained</font>

106
00:05:07,460 --> 00:05:14,430
<font color="#E5E5E5">diffie-hellman says the real de filma</font>

107
00:05:12,150 --> 00:05:17,159
tuple is<font color="#CCCCCC"> indistinguishable from a random</font>

108
00:05:14,430 --> 00:05:21,990
tuple<font color="#CCCCCC"> so you can't tell the real key</font>

109
00:05:17,160 --> 00:05:25,830
from a random key<font color="#E5E5E5"> and this well then we</font>

110
00:05:21,990 --> 00:05:27,390
have<font color="#E5E5E5"> security and all is very nice and</font>

111
00:05:25,830 --> 00:05:30,570
we also have<font color="#E5E5E5"> this</font><font color="#CCCCCC"> other beautiful</font>

112
00:05:27,390 --> 00:05:32,610
property of the fuel<font color="#CCCCCC"> Minh to 'pls</font><font color="#E5E5E5"> there</font>

113
00:05:30,570 --> 00:05:35,760
re<font color="#E5E5E5"> randomized</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> so if I have one</font>

114
00:05:32,610 --> 00:05:38,220
tuple<font color="#CCCCCC"> I can very easily create a huge</font>

115
00:05:35,760 --> 00:05:40,860
<font color="#CCCCCC">amount of them and what</font><font color="#E5E5E5"> happens then</font>

116
00:05:38,220 --> 00:05:42,990
<font color="#E5E5E5">well for every conversation between two</font>

117
00:05:40,860 --> 00:05:45,240
<font color="#E5E5E5">honest</font><font color="#CCCCCC"> people I can just pick out</font><font color="#E5E5E5"> a new</font>

118
00:05:42,990 --> 00:05:48,120
random tuple from<font color="#CCCCCC"> irie randomizations</font>

119
00:05:45,240 --> 00:05:51,090
<font color="#E5E5E5">and I get lots of keys</font><font color="#CCCCCC"> that are</font><font color="#E5E5E5"> all</font>

120
00:05:48,120 --> 00:05:53,669
either real or all either<font color="#E5E5E5"> random and</font>

121
00:05:51,090 --> 00:05:57,239
this is very nice we get a tight

122
00:05:53,669 --> 00:05:59,190
security<font color="#CCCCCC"> brook</font><font color="#E5E5E5"> of course we haven't</font>

123
00:05:57,240 --> 00:06:00,780
allowed adaptive corruptions we haven't

124
00:05:59,190 --> 00:06:04,680
allowed the adversary<font color="#E5E5E5"> to mess with the</font>

125
00:06:00,780 --> 00:06:06,570
messages so this is too easy<font color="#E5E5E5"> what</font>

126
00:06:04,680 --> 00:06:08,490
<font color="#E5E5E5">happens and now we're going to the</font>

127
00:06:06,570 --> 00:06:10,320
adversary still promises not<font color="#CCCCCC"> to tamper</font>

128
00:06:08,490 --> 00:06:12,330
<font color="#CCCCCC">with messages but now he's allowed to</font>

129
00:06:10,320 --> 00:06:14,490
adaptively corrupt that means he<font color="#E5E5E5"> doesn't</font>

130
00:06:12,330 --> 00:06:17,580
<font color="#E5E5E5">have to tell</font><font color="#CCCCCC"> us in advance who is going</font>

131
00:06:14,490 --> 00:06:19,890
<font color="#E5E5E5">to</font><font color="#CCCCCC"> corrupt</font><font color="#E5E5E5"> so now the adversary tells</font>

132
00:06:17,580 --> 00:06:23,270
<font color="#CCCCCC">Kara tells Alice I want you to talk</font><font color="#E5E5E5"> to</font>

133
00:06:19,890 --> 00:06:27,390
Carol and he<font color="#E5E5E5"> hasn't yet corrupted Carol</font>

134
00:06:23,270 --> 00:06:29,099
<font color="#E5E5E5">so now our reduction which is us trying</font>

135
00:06:27,390 --> 00:06:30,690
to<font color="#E5E5E5"> trick the adversary into solving</font>

136
00:06:29,100 --> 00:06:33,750
<font color="#CCCCCC">defilement for us or some other and</font>

137
00:06:30,690 --> 00:06:39,120
interesting thing we have to decide<font color="#E5E5E5"> on a</font>

138
00:06:33,750 --> 00:06:41,159
<font color="#CCCCCC">message</font><font color="#E5E5E5"> to Carol we</font><font color="#CCCCCC"> have to decide first</font>

139
00:06:39,120 --> 00:06:44,340
the adversary who can do<font color="#E5E5E5"> it after</font>

140
00:06:41,159 --> 00:06:48,630
corruption<font color="#E5E5E5"> he gets to decide later</font>

141
00:06:44,340 --> 00:06:51,539
<font color="#E5E5E5">not to corrupt</font><font color="#CCCCCC"> Carol which means we have</font>

142
00:06:48,630 --> 00:06:54,000
to commit to<font color="#CCCCCC"> something</font><font color="#E5E5E5"> before the</font>

143
00:06:51,540 --> 00:07:01,500
adversary<font color="#CCCCCC"> chews makes his choice we have</font>

144
00:06:54,000 --> 00:07:06,690
a commitment<font color="#E5E5E5"> problem</font><font color="#CCCCCC"> and this one might</font>

145
00:07:01,500 --> 00:07:10,530
ask<font color="#CCCCCC"> why</font><font color="#E5E5E5"> is this a problem</font><font color="#CCCCCC"> well because</font>

146
00:07:06,690 --> 00:07:12,710
we have to commit first we can't<font color="#E5E5E5"> chew we</font>

147
00:07:10,530 --> 00:07:16,380
can't use the strategy we just used

148
00:07:12,710 --> 00:07:20,430
because<font color="#E5E5E5"> that strategy depended on if</font>

149
00:07:16,380 --> 00:07:25,469
<font color="#CCCCCC">Carol was dishonest we chose our message</font>

150
00:07:20,430 --> 00:07:28,290
as G to some exponent<font color="#E5E5E5"> if</font><font color="#CCCCCC"> Bob</font><font color="#E5E5E5"> was honest</font>

151
00:07:25,470 --> 00:07:31,290
<font color="#E5E5E5">we chose our message as something coming</font>

152
00:07:28,290 --> 00:07:33,120
<font color="#E5E5E5">from a different</font><font color="#CCCCCC"> table</font><font color="#E5E5E5"> now when we don't</font>

153
00:07:31,290 --> 00:07:35,430
know if<font color="#E5E5E5"> Carol is going to be honest or</font>

154
00:07:33,120 --> 00:07:40,050
dishonest<font color="#CCCCCC"> by the time she gets</font><font color="#E5E5E5"> this</font>

155
00:07:35,430 --> 00:07:42,450
message<font color="#E5E5E5"> well I can choose something from</font>

156
00:07:40,050 --> 00:07:45,240
<font color="#E5E5E5">a defilement tuple but if</font><font color="#CCCCCC"> Carol then</font>

157
00:07:42,450 --> 00:07:48,560
turns out<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be corrupted</font><font color="#E5E5E5"> I can't find</font>

158
00:07:45,240 --> 00:07:52,110
the key<font color="#CCCCCC"> so I don't know what the key is</font>

159
00:07:48,560 --> 00:07:55,290
and that's<font color="#E5E5E5"> a problem</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> the same way if</font>

160
00:07:52,110 --> 00:07:58,530
I say oh he's bound to corrupt Carol

161
00:07:55,290 --> 00:08:00,840
because that<font color="#E5E5E5"> always happens</font><font color="#CCCCCC"> what if he</font>

162
00:07:58,530 --> 00:08:02,760
<font color="#CCCCCC">doesn't</font><font color="#E5E5E5"> well then I've chosen G to the a</font>

163
00:08:00,840 --> 00:08:04,799
<font color="#E5E5E5">and then I have no reasonable</font>

164
00:08:02,760 --> 00:08:08,430
expectation<font color="#CCCCCC"> that my key is going to</font><font color="#E5E5E5"> be</font>

165
00:08:04,800 --> 00:08:11,610
random looking so this is the commitment

166
00:08:08,430 --> 00:08:17,840
problem we have to commit before<font color="#E5E5E5"> the</font>

167
00:08:11,610 --> 00:08:17,840
adversary has<font color="#CCCCCC"> to commit to</font><font color="#E5E5E5"> corrupting</font>

168
00:08:19,400 --> 00:08:24,210
now the standard<font color="#CCCCCC"> strategy when you</font><font color="#E5E5E5"> want</font>

169
00:08:22,770 --> 00:08:26,909
<font color="#CCCCCC">to do a proof like</font><font color="#E5E5E5"> this is you shouldn't</font>

170
00:08:24,210 --> 00:08:29,489
<font color="#E5E5E5">be guess like the last talk mention you</font>

171
00:08:26,910 --> 00:08:31,380
simply guess a pair and<font color="#CCCCCC"> you put your</font>

172
00:08:29,490 --> 00:08:33,450
<font color="#E5E5E5">defilement tuple into that pair and if</font>

173
00:08:31,380 --> 00:08:35,580
it goes wrong<font color="#CCCCCC"> well and it goes wrong but</font>

174
00:08:33,450 --> 00:08:38,040
with a certain<font color="#CCCCCC"> non negligible</font>

175
00:08:35,580 --> 00:08:40,710
<font color="#E5E5E5">probability it goes right but we don't</font>

176
00:08:38,039 --> 00:08:45,270
get a tight proof we get this loss of n

177
00:08:40,710 --> 00:08:48,390
<font color="#E5E5E5">square and that's bad so we want to do</font>

178
00:08:45,270 --> 00:08:53,819
<font color="#E5E5E5">something really simple and this is</font>

179
00:08:48,390 --> 00:08:57,149
really<font color="#CCCCCC"> simple</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is what we do what we</font>

180
00:08:53,820 --> 00:08:59,249
do is we just<font color="#E5E5E5"> hash the first message</font>

181
00:08:57,149 --> 00:09:05,370
and then we<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> send the first message</font>

182
00:08:59,249 --> 00:09:09,629
we send the hash<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then the hash goes</font>

183
00:09:05,370 --> 00:09:14,100
to<font color="#CCCCCC"> Carol who then replies and only when</font>

184
00:09:09,629 --> 00:09:17,160
<font color="#CCCCCC">Carol has replied do we send a real</font>

185
00:09:14,100 --> 00:09:21,059
message<font color="#CCCCCC"> the point is</font><font color="#E5E5E5"> that we</font><font color="#CCCCCC"> only send</font>

186
00:09:17,160 --> 00:09:24,649
the<font color="#E5E5E5"> real message once we know whether or</font>

187
00:09:21,059 --> 00:09:29,910
not<font color="#E5E5E5"> the one who replied is honest or not</font>

188
00:09:24,649 --> 00:09:33,899
and in the random Oracle<font color="#CCCCCC"> model this</font>

189
00:09:29,910 --> 00:09:35,670
<font color="#E5E5E5">means we don't have to commit because</font><font color="#CCCCCC"> in</font>

190
00:09:33,899 --> 00:09:39,779
the random Oracle model<font color="#E5E5E5"> we can reprogram</font>

191
00:09:35,670 --> 00:09:41,279
our<font color="#E5E5E5"> hash so we don't have to choose the</font>

192
00:09:39,779 --> 00:09:45,059
<font color="#CCCCCC">message we just have to choose</font><font color="#E5E5E5"> the hash</font>

193
00:09:41,279 --> 00:09:48,720
value<font color="#CCCCCC"> and once we know</font><font color="#E5E5E5"> what we want the</font>

194
00:09:45,059 --> 00:09:53,040
hash value<font color="#E5E5E5"> to be then we can just</font>

195
00:09:48,720 --> 00:09:56,730
reprogram<font color="#E5E5E5"> the hash Oracle and in this</font>

196
00:09:53,040 --> 00:10:04,219
way we get a beautiful<font color="#E5E5E5"> tight little</font>

197
00:09:56,730 --> 00:10:09,300
reduction<font color="#E5E5E5"> and that's kind of nice of</font>

198
00:10:04,220 --> 00:10:12,059
course<font color="#CCCCCC"> some</font><font color="#E5E5E5"> of you will</font><font color="#CCCCCC"> then complain</font>

199
00:10:09,300 --> 00:10:14,689
now we have a different protocol it's

200
00:10:12,059 --> 00:10:18,540
not as nice as diffie-hellman<font color="#E5E5E5"> because</font>

201
00:10:14,689 --> 00:10:22,230
really<font color="#CCCCCC"> Bob here who now gets</font><font color="#E5E5E5"> the message</font>

202
00:10:18,540 --> 00:10:26,279
<font color="#E5E5E5">he gets a hash and in the ordinary</font>

203
00:10:22,230 --> 00:10:28,649
<font color="#CCCCCC">define</font><font color="#E5E5E5"> once he gets that hash he held</font>

204
00:10:26,279 --> 00:10:31,769
once he gets the first message he also

205
00:10:28,649 --> 00:10:35,759
gets<font color="#E5E5E5"> the key but in our protocol he</font>

206
00:10:31,769 --> 00:10:38,249
doesn't get the key he has to first send

207
00:10:35,759 --> 00:10:41,240
his message back<font color="#E5E5E5"> and then he has to wait</font>

208
00:10:38,249 --> 00:10:44,040
until<font color="#CCCCCC"> the message from Alice arrives</font><font color="#E5E5E5"> and</font>

209
00:10:41,240 --> 00:10:47,899
only then is he able<font color="#E5E5E5"> to compute his key</font>

210
00:10:44,040 --> 00:10:51,748
so there is an increased latency for Bob

211
00:10:47,899 --> 00:10:55,259
<font color="#E5E5E5">there is also a bit of extra things you</font>

212
00:10:51,749 --> 00:10:56,910
have<font color="#E5E5E5"> to transfer back</font><font color="#CCCCCC"> and forth</font><font color="#E5E5E5"> but</font>

213
00:10:55,259 --> 00:10:59,850
remember this is often<font color="#E5E5E5"> not a problem</font>

214
00:10:56,910 --> 00:11:01,499
because frankly you were often

215
00:10:59,850 --> 00:11:04,649
transferring some<font color="#E5E5E5"> something</font><font color="#CCCCCC"> like</font>

216
00:11:01,499 --> 00:11:06,629
signatures and<font color="#E5E5E5"> stuff so very often</font>

217
00:11:04,649 --> 00:11:10,009
difficult<font color="#E5E5E5"> ends up being a three move</font>

218
00:11:06,629 --> 00:11:10,009
protocol anyway

219
00:11:10,910 --> 00:11:18,389
the thing is and this<font color="#E5E5E5"> is kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> nice if</font>

220
00:11:14,610 --> 00:11:20,220
you actually<font color="#CCCCCC"> look at what's the likely</font>

221
00:11:18,389 --> 00:11:23,759
result of using diffie-hellman if you

222
00:11:20,220 --> 00:11:26,299
use a<font color="#E5E5E5"> small scale system and likely</font>

223
00:11:23,759 --> 00:11:28,350
<font color="#E5E5E5">you're likely to actually bump your</font>

224
00:11:26,299 --> 00:11:31,559
curve that you're going<font color="#CCCCCC"> to use for</font>

225
00:11:28,350 --> 00:11:33,329
diffie-hellman<font color="#CCCCCC"> up the</font><font color="#E5E5E5"> size and if you</font>

226
00:11:31,559 --> 00:11:35,579
use a really<font color="#E5E5E5"> large system you might have</font>

227
00:11:33,329 --> 00:11:41,008
to bump it<font color="#E5E5E5"> up really large to get the</font>

228
00:11:35,579 --> 00:11:44,160
same security<font color="#E5E5E5"> level and then our nice</font>

229
00:11:41,009 --> 00:11:48,989
little forget to sign thing that's a bug

230
00:11:44,160 --> 00:11:51,839
in the slides<font color="#CCCCCC"> are nice little</font><font color="#E5E5E5"> hash yes</font>

231
00:11:48,989 --> 00:11:55,470
it does cost us some things but it gives

232
00:11:51,839 --> 00:11:59,069
us<font color="#CCCCCC"> really better performance</font><font color="#E5E5E5"> and this is</font>

233
00:11:55,470 --> 00:12:02,970
where tight security<font color="#E5E5E5"> proofs might</font>

234
00:11:59,069 --> 00:12:04,829
actually do some<font color="#CCCCCC"> good ok</font>

235
00:12:02,970 --> 00:12:07,379
you might quibble with<font color="#E5E5E5"> the choice of</font>

236
00:12:04,829 --> 00:12:13,378
curse blah blah blah but the idea<font color="#E5E5E5"> is</font>

237
00:12:07,379 --> 00:12:15,419
essentially<font color="#E5E5E5"> correct but obviously I was</font>

238
00:12:13,379 --> 00:12:17,279
<font color="#E5E5E5">still working in a model where the</font>

239
00:12:15,419 --> 00:12:19,470
adversary<font color="#E5E5E5"> had promised me not to tamper</font>

240
00:12:17,279 --> 00:12:23,970
<font color="#E5E5E5">with</font><font color="#CCCCCC"> his message</font><font color="#E5E5E5"> with my messages and</font>

241
00:12:19,470 --> 00:12:26,129
that's not actually a realistic<font color="#E5E5E5"> so if he</font>

242
00:12:23,970 --> 00:12:28,949
doesn't keep<font color="#CCCCCC"> that</font><font color="#E5E5E5"> promise</font><font color="#CCCCCC"> my protocol</font>

243
00:12:26,129 --> 00:12:30,989
obviously fails<font color="#E5E5E5"> it falls to exactly the</font>

244
00:12:28,949 --> 00:12:33,748
same<font color="#CCCCCC"> man in the middle attack as as</font>

245
00:12:30,989 --> 00:12:39,059
ordinary<font color="#CCCCCC"> defilement so we're we're</font>

246
00:12:33,749 --> 00:12:43,589
<font color="#CCCCCC">nowhere the natural answer</font><font color="#E5E5E5"> is to use</font>

247
00:12:39,059 --> 00:12:47,879
<font color="#CCCCCC">sine diffie-hellman the problem we now</font>

248
00:12:43,589 --> 00:12:50,309
run into is of course that if we just

249
00:12:47,879 --> 00:12:53,100
<font color="#CCCCCC">throw any old signature scheme at this</font>

250
00:12:50,309 --> 00:12:56,249
protocol<font color="#E5E5E5"> we no longer have a tight</font>

251
00:12:53,100 --> 00:12:58,379
<font color="#E5E5E5">security proof because any old signature</font>

252
00:12:56,249 --> 00:13:01,709
scheme<font color="#E5E5E5"> doesn't have a tight security</font>

253
00:12:58,379 --> 00:13:05,129
proof<font color="#E5E5E5"> what do I mean my tight security</font>

254
00:13:01,709 --> 00:13:09,569
proof for signature schemes<font color="#E5E5E5"> well first</font>

255
00:13:05,129 --> 00:13:11,459
of all for<font color="#E5E5E5"> ordinary signatures the</font>

256
00:13:09,569 --> 00:13:14,779
<font color="#CCCCCC">signature game that we're all used to</font>

257
00:13:11,459 --> 00:13:19,289
<font color="#E5E5E5">that we learn in</font><font color="#CCCCCC"> basic cryptography well</font>

258
00:13:14,779 --> 00:13:22,559
it only<font color="#E5E5E5"> considers a single key and to</font>

259
00:13:19,289 --> 00:13:22,949
see why<font color="#E5E5E5"> we get non tight if we want to</font>

260
00:13:22,559 --> 00:13:25,680
<font color="#E5E5E5">consider</font>

261
00:13:22,950 --> 00:13:31,800
many keys<font color="#E5E5E5"> consider for instance RSA</font>

262
00:13:25,680 --> 00:13:34,410
signatures well every one of<font color="#E5E5E5"> the users</font>

263
00:13:31,800 --> 00:13:37,050
are going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> have their own or</font><font color="#E5E5E5"> as a</font>

264
00:13:34,410 --> 00:13:41,880
modulus<font color="#E5E5E5"> that's kind of how we're RSA</font>

265
00:13:37,050 --> 00:13:43,790
signatures work<font color="#CCCCCC"> and which one are you</font>

266
00:13:41,880 --> 00:13:47,700
going<font color="#E5E5E5"> to get the adversary to factor</font>

267
00:13:43,790 --> 00:13:49,380
well you get at least<font color="#CCCCCC"> a 1 over</font><font color="#E5E5E5"> N and in</font>

268
00:13:47,700 --> 00:13:52,650
this interactive key exchange where we

269
00:13:49,380 --> 00:13:54,780
<font color="#CCCCCC">actually have</font><font color="#E5E5E5"> to guess both parties who</font>

270
00:13:52,650 --> 00:13:57,689
might be corrupted we get n square

271
00:13:54,780 --> 00:13:59,760
security<font color="#CCCCCC"> laws when</font><font color="#E5E5E5"> we have to move to a</font>

272
00:13:57,690 --> 00:14:01,470
situation where<font color="#E5E5E5"> not only do we have many</font>

273
00:13:59,760 --> 00:14:05,970
keys but we also have adaptive

274
00:14:01,470 --> 00:14:07,920
corruptions<font color="#E5E5E5"> so we're going to</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> to do</font>

275
00:14:05,970 --> 00:14:11,580
<font color="#E5E5E5">something with signatures as well and</font>

276
00:14:07,920 --> 00:14:16,069
<font color="#CCCCCC">not is believe it or not substantially</font>

277
00:14:11,580 --> 00:14:19,020
<font color="#E5E5E5">more complicated because of all</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> these</font>

278
00:14:16,070 --> 00:14:21,000
obstacles<font color="#CCCCCC"> right I'm just redoing the</font>

279
00:14:19,020 --> 00:14:25,160
arguments that<font color="#E5E5E5"> we've all heard in</font>

280
00:14:21,000 --> 00:14:31,380
previous talk so this is all

281
00:14:25,160 --> 00:14:33,240
<font color="#E5E5E5">straightforward all the obstacles here</font>

282
00:14:31,380 --> 00:14:38,910
is the idea this<font color="#E5E5E5"> is an idea that</font>

283
00:14:33,240 --> 00:14:42,270
<font color="#E5E5E5">appeared</font><font color="#CCCCCC"> tsetse</font><font color="#E5E5E5"> 15</font><font color="#CCCCCC"> the idea is to use a</font>

284
00:14:38,910 --> 00:14:46,650
double signature thing I did you kind<font color="#E5E5E5"> of</font>

285
00:14:42,270 --> 00:14:49,560
<font color="#CCCCCC">already heard the idea</font><font color="#E5E5E5"> so what we want</font>

286
00:14:46,650 --> 00:14:52,920
is for every user<font color="#CCCCCC"> to have</font><font color="#E5E5E5"> two public</font>

287
00:14:49,560 --> 00:14:54,839
<font color="#E5E5E5">keys one of them is</font><font color="#CCCCCC"> this real key</font><font color="#E5E5E5"> that's</font>

288
00:14:52,920 --> 00:14:59,339
the<font color="#CCCCCC"> one is going to</font><font color="#E5E5E5"> actually</font><font color="#CCCCCC"> use to sign</font>

289
00:14:54,840 --> 00:15:01,650
<font color="#E5E5E5">and the other is a fake key and whenever</font>

290
00:14:59,340 --> 00:15:04,290
he wants to<font color="#E5E5E5"> sign something he's going to</font>

291
00:15:01,650 --> 00:15:10,020
sign it with<font color="#CCCCCC"> the real key and he's going</font>

292
00:15:04,290 --> 00:15:12,990
<font color="#CCCCCC">to fake a signature</font><font color="#E5E5E5"> for the fake key the</font>

293
00:15:10,020 --> 00:15:14,819
idea in this is<font color="#E5E5E5"> that the real signatures</font>

294
00:15:12,990 --> 00:15:18,180
and the fake signatures and the real

295
00:15:14,820 --> 00:15:22,980
public key and<font color="#E5E5E5"> the fake public key they</font>

296
00:15:18,180 --> 00:15:24,930
are going<font color="#E5E5E5"> to be indistinguishable so</font>

297
00:15:22,980 --> 00:15:28,890
since the adversary<font color="#CCCCCC"> can't tell them</font>

298
00:15:24,930 --> 00:15:30,719
apart when the adversary<font color="#E5E5E5"> says I'd</font><font color="#CCCCCC"> like</font>

299
00:15:28,890 --> 00:15:33,630
to get your<font color="#E5E5E5"> secret key we're going to</font>

300
00:15:30,720 --> 00:15:36,589
give him the real key we<font color="#E5E5E5"> can do that</font>

301
00:15:33,630 --> 00:15:39,059
because<font color="#E5E5E5"> we have the real key of the</font>

302
00:15:36,589 --> 00:15:41,279
that's very<font color="#E5E5E5"> easy</font><font color="#CCCCCC"> and he</font><font color="#E5E5E5"> doesn't really</font>

303
00:15:39,059 --> 00:15:46,019
expect<font color="#E5E5E5"> there to be a key for the fake</font>

304
00:15:41,279 --> 00:15:48,049
one<font color="#CCCCCC"> so who cares</font><font color="#E5E5E5"> so he gets what</font><font color="#CCCCCC"> he</font>

305
00:15:46,019 --> 00:15:48,049
wants

306
00:15:48,470 --> 00:15:59,459
but we're<font color="#E5E5E5"> going to put our difficult</font>

307
00:15:53,220 --> 00:16:02,040
<font color="#E5E5E5">hard problem into the fake keys because</font>

308
00:15:59,459 --> 00:16:03,719
<font color="#CCCCCC">the real key and the fake key are</font>

309
00:16:02,040 --> 00:16:06,059
indistinguishable when the adversary

310
00:16:03,720 --> 00:16:09,119
makes his forgery that's going to allow

311
00:16:06,059 --> 00:16:12,209
<font color="#CCCCCC">us to</font><font color="#E5E5E5"> do an extraction he can't tell the</font>

312
00:16:09,119 --> 00:16:19,019
<font color="#CCCCCC">real key and the fake key apart</font><font color="#E5E5E5"> he can't</font>

313
00:16:12,209 --> 00:16:21,628
tell which is which<font color="#E5E5E5"> which means that</font>

314
00:16:19,019 --> 00:16:24,509
when he<font color="#E5E5E5"> creates his forgery it's going</font>

315
00:16:21,629 --> 00:16:28,439
to be a forgery<font color="#E5E5E5"> for the fake key with</font>

316
00:16:24,509 --> 00:16:30,629
probability 1/2 which means<font color="#CCCCCC"> that every</font>

317
00:16:28,439 --> 00:16:33,209
other time he's going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> produce a</font>

318
00:16:30,629 --> 00:16:37,199
forgery for the<font color="#E5E5E5"> fakey allowing us to do</font>

319
00:16:33,209 --> 00:16:40,529
our<font color="#E5E5E5"> extraction so this is the existing</font>

320
00:16:37,199 --> 00:16:44,160
<font color="#E5E5E5">idea and it was used before in a rather</font>

321
00:16:40,529 --> 00:16:47,279
really nice<font color="#E5E5E5"> scheme that had lots of</font>

322
00:16:44,160 --> 00:16:50,549
pairings and lots of whatever<font color="#CCCCCC"> and it's</font>

323
00:16:47,279 --> 00:16:53,730
completely<font color="#E5E5E5"> impractical so what we did</font>

324
00:16:50,549 --> 00:16:55,230
was<font color="#E5E5E5"> let's forget about this pairing and</font>

325
00:16:53,730 --> 00:16:57,689
so all the nice<font color="#CCCCCC"> stuff let's</font><font color="#E5E5E5"> just throw</font>

326
00:16:55,230 --> 00:17:02,220
some random<font color="#E5E5E5"> Oracle's at this and see if</font>

327
00:16:57,689 --> 00:17:04,019
it sticks<font color="#E5E5E5"> so we did and</font><font color="#CCCCCC"> we threw it at</font>

328
00:17:02,220 --> 00:17:07,139
lots of different signature schemes and

329
00:17:04,019 --> 00:17:09,179
it didn't<font color="#E5E5E5"> work</font><font color="#CCCCCC"> because we need most of</font>

330
00:17:07,138 --> 00:17:12,839
these signature schemes that<font color="#E5E5E5"> you start</font>

331
00:17:09,179 --> 00:17:14,639
with<font color="#E5E5E5"> which are tight with respect to</font>

332
00:17:12,839 --> 00:17:19,109
lots of keys just not adaptive

333
00:17:14,638 --> 00:17:21,869
corruptions<font color="#E5E5E5"> they use indistinguishable</font>

334
00:17:19,109 --> 00:17:25,589
keys and then<font color="#E5E5E5"> you distinguish keys</font>

335
00:17:21,869 --> 00:17:27,629
<font color="#E5E5E5">instead of extracting something we need</font>

336
00:17:25,589 --> 00:17:29,820
<font color="#CCCCCC">to</font><font color="#E5E5E5"> be able to extract something because</font>

337
00:17:27,630 --> 00:17:34,760
it's not<font color="#E5E5E5"> somehow it doesn't work with</font>

338
00:17:29,820 --> 00:17:37,740
this<font color="#E5E5E5"> is indistinguishable</font><font color="#CCCCCC"> it keys so we</font>

339
00:17:34,760 --> 00:17:42,029
<font color="#CCCCCC">need to find</font><font color="#E5E5E5"> a real system and then we</font>

340
00:17:37,740 --> 00:17:45,990
found the system and this is<font color="#E5E5E5"> or somehow</font>

341
00:17:42,029 --> 00:17:47,850
<font color="#E5E5E5">embarrassing</font><font color="#CCCCCC"> I use this system</font><font color="#E5E5E5"> it's it's</font>

342
00:17:45,990 --> 00:17:49,169
I think<font color="#E5E5E5"> it's a real old system and I use</font>

343
00:17:47,850 --> 00:17:53,369
it<font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of to motive</font>

344
00:17:49,169 --> 00:17:55,950
<font color="#E5E5E5">eight the development of zero knowledge</font>

345
00:17:53,369 --> 00:17:58,678
proof in my crypto course<font color="#E5E5E5"> and I say this</font>

346
00:17:55,950 --> 00:18:00,720
is<font color="#CCCCCC"> completely useless of course it's an</font>

347
00:17:58,679 --> 00:18:03,929
old system<font color="#E5E5E5"> it's when you want to do</font>

348
00:18:00,720 --> 00:18:06,840
discrete log<font color="#CCCCCC"> basis</font><font color="#E5E5E5"> signatures in exactly</font>

349
00:18:03,929 --> 00:18:08,519
the<font color="#CCCCCC"> same way</font><font color="#E5E5E5"> you do RSA signatures you</font>

350
00:18:06,840 --> 00:18:12,178
want to take the hash of a message you

351
00:18:08,519 --> 00:18:15,149
<font color="#E5E5E5">race it to your secret and then some in</font>

352
00:18:12,179 --> 00:18:17,309
RSA I mean you have the public<font color="#E5E5E5"> exponent</font>

353
00:18:15,149 --> 00:18:19,768
<font color="#E5E5E5">so everyone can check if you did did</font>

354
00:18:17,309 --> 00:18:22,918
this race incorrectly but<font color="#E5E5E5"> in discrete</font>

355
00:18:19,769 --> 00:18:25,590
logs no one can do it<font color="#E5E5E5"> so somehow we need</font>

356
00:18:22,919 --> 00:18:27,480
<font color="#CCCCCC">to</font><font color="#E5E5E5"> get some way to check</font><font color="#CCCCCC"> that this</font>

357
00:18:25,590 --> 00:18:30,480
racing to my secret key was done

358
00:18:27,480 --> 00:18:32,340
correctly<font color="#E5E5E5"> and the way we do this of</font>

359
00:18:30,480 --> 00:18:33,749
course is<font color="#CCCCCC"> within all</font><font color="#E5E5E5"> interactive zero</font>

360
00:18:32,340 --> 00:18:36,149
knowledge<font color="#E5E5E5"> proof so</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> just prove that</font>

361
00:18:33,749 --> 00:18:40,470
<font color="#CCCCCC">these two discrete logs are</font><font color="#E5E5E5"> equivalent</font>

362
00:18:36,149 --> 00:18:42,570
are the same<font color="#E5E5E5"> so this is a proof I stood</font>

363
00:18:40,470 --> 00:18:46,289
in my crypto course and I said<font color="#CCCCCC"> this is a</font>

364
00:18:42,570 --> 00:18:49,019
useless course and system and<font color="#E5E5E5"> then a few</font>

365
00:18:46,289 --> 00:18:51,539
weeks<font color="#CCCCCC"> later we suddenly realized this is</font>

366
00:18:49,019 --> 00:18:53,759
<font color="#CCCCCC">what we need this is</font><font color="#E5E5E5"> always happens</font>

367
00:18:51,539 --> 00:18:56,820
<font color="#E5E5E5">whenever you say</font><font color="#CCCCCC"> something is useless in</font>

368
00:18:53,759 --> 00:19:01,350
mathematics it shows up somewhere<font color="#E5E5E5"> being</font>

369
00:18:56,820 --> 00:19:05,249
useful<font color="#E5E5E5"> so and this scheme what we do</font>

370
00:19:01,350 --> 00:19:08,219
here<font color="#E5E5E5"> and this is actually I'm skipping a</font>

371
00:19:05,249 --> 00:19:11,940
lot<font color="#E5E5E5"> of details in this presentation but</font>

372
00:19:08,220 --> 00:19:15,869
the idea<font color="#CCCCCC"> here is really simple</font><font color="#E5E5E5"> what we</font>

373
00:19:11,940 --> 00:19:19,049
<font color="#CCCCCC">do is we just combine two signatures and</font>

374
00:19:15,869 --> 00:19:23,999
these are just the signatures are just

375
00:19:19,049 --> 00:19:28,529
the hash race to some power<font color="#CCCCCC"> and then</font>

376
00:19:23,999 --> 00:19:30,570
there is an equality<font color="#CCCCCC"> of D log proof</font><font color="#E5E5E5"> and</font>

377
00:19:28,529 --> 00:19:32,340
we just<font color="#CCCCCC"> combine</font><font color="#E5E5E5"> those proofs using the</font>

378
00:19:30,570 --> 00:19:35,789
standard or proof techniques that were

379
00:19:32,340 --> 00:19:40,668
developed<font color="#E5E5E5"> in 90s these really</font><font color="#CCCCCC"> old</font>

380
00:19:35,789 --> 00:19:40,669
techniques but still work really well

381
00:19:40,909 --> 00:19:49,470
so<font color="#E5E5E5"> whenever you'd want to do this</font><font color="#CCCCCC"> you</font>

382
00:19:44,960 --> 00:19:51,480
you raise the real thing<font color="#CCCCCC"> we're at the</font>

383
00:19:49,470 --> 00:19:53,399
hash<font color="#CCCCCC"> into your real key and then you</font>

384
00:19:51,480 --> 00:19:56,720
just<font color="#E5E5E5"> choose a random element for the</font>

385
00:19:53,399 --> 00:19:59,340
fake signature and then you fake an

386
00:19:56,720 --> 00:20:02,580
equality<font color="#CCCCCC"> of D log proof for the fake</font>

387
00:19:59,340 --> 00:20:04,168
signature and then you hash

388
00:20:02,580 --> 00:20:07,529
under your<font color="#CCCCCC"> if your mere</font><font color="#E5E5E5"> and blah blah</font>

389
00:20:04,169 --> 00:20:09,210
blah<font color="#CCCCCC"> and then you connect this</font><font color="#E5E5E5"> and then</font>

390
00:20:07,529 --> 00:20:11,010
you do the real proof for the real

391
00:20:09,210 --> 00:20:12,960
signature<font color="#E5E5E5"> keys where you know the</font>

392
00:20:11,010 --> 00:20:17,100
discrete logs are equal and you can do

393
00:20:12,960 --> 00:20:18,600
this equality proof and of course there

394
00:20:17,100 --> 00:20:21,510
<font color="#CCCCCC">are some details</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> you need to get</font>

395
00:20:18,600 --> 00:20:23,969
<font color="#E5E5E5">right</font><font color="#CCCCCC"> here but this is essentially the</font>

396
00:20:21,510 --> 00:20:29,269
<font color="#CCCCCC">idea</font><font color="#E5E5E5"> throw random Oracle</font><font color="#CCCCCC"> cite it and it</font>

397
00:20:23,970 --> 00:20:34,919
works<font color="#E5E5E5"> we get a proof with tight security</font>

398
00:20:29,269 --> 00:20:37,559
of course<font color="#E5E5E5"> this scheme well we can't</font>

399
00:20:34,919 --> 00:20:39,840
prove we can't give a tight proof that

400
00:20:37,559 --> 00:20:41,519
we have strongly unfortunate<font color="#E5E5E5"> injury so</font>

401
00:20:39,840 --> 00:20:43,769
when we get existentially unforgeable

402
00:20:41,519 --> 00:20:45,570
and this gives us problems when<font color="#E5E5E5"> you go</font>

403
00:20:43,769 --> 00:20:47,190
back<font color="#E5E5E5"> and put those signatures in the key</font>

404
00:20:45,570 --> 00:20:50,879
exchange so we get lots of problems

405
00:20:47,190 --> 00:20:53,250
there as well<font color="#E5E5E5"> so everything</font><font color="#CCCCCC"> is cascading</font>

406
00:20:50,880 --> 00:20:55,740
into<font color="#E5E5E5"> problems but the end result is we</font>

407
00:20:53,250 --> 00:20:58,590
<font color="#E5E5E5">get a really nice tight or authenticated</font>

408
00:20:55,740 --> 00:21:01,799
<font color="#E5E5E5">key exchange and we get this nice</font>

409
00:20:58,590 --> 00:21:04,408
<font color="#E5E5E5">signature scheme of course those</font><font color="#CCCCCC"> of you</font>

410
00:21:01,799 --> 00:21:06,600
who know what<font color="#CCCCCC"> these proofs are</font><font color="#E5E5E5"> and can</font>

411
00:21:04,409 --> 00:21:11,250
count exponentiations you have by now

412
00:21:06,600 --> 00:21:13,610
counted fairly high<font color="#E5E5E5"> you have counted</font>

413
00:21:11,250 --> 00:21:17,190
almost<font color="#E5E5E5"> as high as I have seconds left so</font>

414
00:21:13,610 --> 00:21:19,439
let's go<font color="#E5E5E5"> so if you look at some</font>

415
00:21:17,190 --> 00:21:22,139
performance we do not get the same

416
00:21:19,440 --> 00:21:25,740
<font color="#E5E5E5">really good performance here but still</font>

417
00:21:22,139 --> 00:21:29,039
<font color="#E5E5E5">that's</font><font color="#CCCCCC"> the first thing you might</font><font color="#E5E5E5"> even</font>

418
00:21:25,740 --> 00:21:31,980
<font color="#E5E5E5">think</font><font color="#CCCCCC"> about implementing this</font><font color="#E5E5E5"> is quite</font>

419
00:21:29,039 --> 00:21:35,190
<font color="#E5E5E5">good we</font><font color="#CCCCCC"> are competitive reasonably sure</font>

420
00:21:31,980 --> 00:21:37,169
and of course<font color="#E5E5E5"> there might be other</font>

421
00:21:35,190 --> 00:21:40,380
applications where<font color="#E5E5E5"> a singular scheme</font>

422
00:21:37,169 --> 00:21:44,490
with a tight<font color="#E5E5E5"> security proof is gives you</font>

423
00:21:40,380 --> 00:21:47,909
a much bigger advantage<font color="#CCCCCC"> okay so let me</font>

424
00:21:44,490 --> 00:21:50,190
<font color="#E5E5E5">just reiterate we have our first really</font>

425
00:21:47,909 --> 00:21:54,000
<font color="#E5E5E5">practical tightly secure signature</font>

426
00:21:50,190 --> 00:21:58,320
scheme we have<font color="#E5E5E5"> a first practical tightly</font>

427
00:21:54,000 --> 00:22:01,380
secure authenticated key exchange<font color="#E5E5E5"> and if</font>

428
00:21:58,320 --> 00:22:03,689
you go to really<font color="#E5E5E5"> large-scale deployments</font>

429
00:22:01,380 --> 00:22:06,450
this is going to be more effective<font color="#CCCCCC"> I</font>

430
00:22:03,690 --> 00:22:08,760
should also say in fairness<font color="#E5E5E5"> these</font>

431
00:22:06,450 --> 00:22:11,580
numbers were I didn't come off so well I

432
00:22:08,760 --> 00:22:13,500
really gave this<font color="#CCCCCC"> sign different every</font>

433
00:22:11,580 --> 00:22:16,409
advantage<font color="#E5E5E5"> because I used elliptic curve</font>

434
00:22:13,500 --> 00:22:20,760
DSA which doesn't really have

435
00:22:16,410 --> 00:22:23,040
security proof<font color="#E5E5E5"> so it</font><font color="#CCCCCC"> got some something</font>

436
00:22:20,760 --> 00:22:24,900
<font color="#E5E5E5">for free there</font><font color="#CCCCCC"> you should really</font><font color="#E5E5E5"> because</font>

437
00:22:23,040 --> 00:22:28,920
the the signature schemes that<font color="#E5E5E5"> are as a</font>

438
00:22:24,900 --> 00:22:31,050
<font color="#E5E5E5">as fast as elliptic curve DSA</font><font color="#CCCCCC"> they</font>

439
00:22:28,920 --> 00:22:33,240
typically have<font color="#CCCCCC"> very non tight reductions</font>

440
00:22:31,050 --> 00:22:37,020
not just in a number<font color="#E5E5E5"> of users</font><font color="#CCCCCC"> but also</font>

441
00:22:33,240 --> 00:22:38,550
in a<font color="#E5E5E5"> number of Oracle queries so the</font>

442
00:22:37,020 --> 00:22:41,850
numbers might<font color="#CCCCCC"> be actually a lot worse</font>

443
00:22:38,550 --> 00:22:47,820
<font color="#CCCCCC">and if you move to these schemes that</font>

444
00:22:41,850 --> 00:22:50,850
are<font color="#CCCCCC"> tight otherwise</font><font color="#E5E5E5"> well then you get</font>

445
00:22:47,820 --> 00:22:51,780
more exponentiation so I shall get show

446
00:22:50,850 --> 00:22:54,510
off yep

447
00:22:51,780 --> 00:22:59,270
our results are better really than we

448
00:22:54,510 --> 00:22:59,270
showed off so we were really<font color="#E5E5E5"> modest here</font>

449
00:23:00,440 --> 00:23:07,539
questions<font color="#CCCCCC"> thanks</font>

450
00:23:02,630 --> 00:23:07,539
[Applause]

