1
00:00:04,900 --> 00:00:11,860
yes thank you<font color="#CCCCCC"> for</font><font color="#E5E5E5"> the introduction</font><font color="#CCCCCC"> whoo</font>

2
00:00:07,240 --> 00:00:13,629
yeah<font color="#E5E5E5"> good morning everyone</font><font color="#CCCCCC"> this is a</font>

3
00:00:11,860 --> 00:00:16,900
<font color="#E5E5E5">joint</font><font color="#CCCCCC"> work with aguilas chaos</font><font color="#E5E5E5"> and from</font>

4
00:00:13,630 --> 00:00:19,119
Harley<font color="#E5E5E5"> oh this is the outline of that</font>

5
00:00:16,900 --> 00:00:21,790
<font color="#E5E5E5">talk</font><font color="#CCCCCC"> so first I will introduce</font><font color="#E5E5E5"> the</font>

6
00:00:19,119 --> 00:00:23,890
primitive and I will<font color="#CCCCCC"> present the</font>

7
00:00:21,790 --> 00:00:26,918
adversarial model and I will give some

8
00:00:23,890 --> 00:00:28,660
<font color="#CCCCCC">motivation behind the model</font><font color="#E5E5E5"> then I will</font>

9
00:00:26,919 --> 00:00:30,160
present results and construction<font color="#E5E5E5"> and</font>

10
00:00:28,660 --> 00:00:34,600
finally if there is<font color="#E5E5E5"> still time I will</font>

11
00:00:30,160 --> 00:00:36,730
give some<font color="#E5E5E5"> intuition so some very basic</font>

12
00:00:34,600 --> 00:00:39,760
stuff so any encoding<font color="#CCCCCC"> schemes like the</font>

13
00:00:36,730 --> 00:00:41,890
pair like often it is an encoding

14
00:00:39,760 --> 00:00:44,099
procedure<font color="#E5E5E5"> has the encoding procedure and</font>

15
00:00:41,890 --> 00:00:46,510
the<font color="#E5E5E5"> decoding procedure and the minimum</font>

16
00:00:44,100 --> 00:00:49,300
requirements correctness<font color="#E5E5E5"> so we won't</font>

17
00:00:46,510 --> 00:00:50,980
like for any<font color="#CCCCCC"> messages</font><font color="#E5E5E5"> the decoding of</font>

18
00:00:49,300 --> 00:00:54,010
<font color="#CCCCCC">the encoding of face should be equal</font><font color="#E5E5E5"> to</font>

19
00:00:50,980 --> 00:00:56,078
<font color="#E5E5E5">s so an example of an encoding schemes</font>

20
00:00:54,010 --> 00:00:57,760
<font color="#E5E5E5">an error correction code which</font>

21
00:00:56,079 --> 00:00:59,739
guarantees correctness if there is a

22
00:00:57,760 --> 00:01:03,550
bounded number<font color="#CCCCCC"> of errors</font><font color="#E5E5E5"> over the</font><font color="#CCCCCC"> code</font>

23
00:00:59,739 --> 00:01:07,300
<font color="#CCCCCC">word</font><font color="#E5E5E5"> normal</font><font color="#CCCCCC"> codes were introduced by the</font>

24
00:01:03,550 --> 00:01:09,520
<font color="#CCCCCC">box computer second weeks in 2010 this</font>

25
00:01:07,300 --> 00:01:13,830
<font color="#CCCCCC">year also</font><font color="#E5E5E5"> have like other journal</font>

26
00:01:09,520 --> 00:01:16,149
version of their paper<font color="#E5E5E5"> and</font><font color="#CCCCCC"> informally</font>

27
00:01:13,830 --> 00:01:17,950
<font color="#E5E5E5">normal ability means that you cannot</font>

28
00:01:16,150 --> 00:01:19,810
create like correlated code words

29
00:01:17,950 --> 00:01:22,720
meaning<font color="#E5E5E5"> that you cannot tamper with a</font>

30
00:01:19,810 --> 00:01:24,790
code word<font color="#E5E5E5"> in a way that decodes to</font><font color="#CCCCCC"> a</font>

31
00:01:22,720 --> 00:01:27,270
message which is related to the<font color="#CCCCCC"> original</font>

32
00:01:24,790 --> 00:01:31,000
one of course if it is<font color="#E5E5E5"> different right</font>

33
00:01:27,270 --> 00:01:33,280
so the tampering experiment that we

34
00:01:31,000 --> 00:01:35,650
consider is the<font color="#E5E5E5"> following so we have the</font>

35
00:01:33,280 --> 00:01:39,820
<font color="#CCCCCC">adversary we have a message which is</font>

36
00:01:35,650 --> 00:01:42,220
<font color="#CCCCCC">denoted by s first we encode our message</font>

37
00:01:39,820 --> 00:01:43,990
and<font color="#E5E5E5"> we get a code word C and then we are</font>

38
00:01:42,220 --> 00:01:46,450
<font color="#CCCCCC">very</font><font color="#E5E5E5"> sorry applies a tampering function</font>

39
00:01:43,990 --> 00:01:49,390
f<font color="#E5E5E5"> from the</font><font color="#CCCCCC"> codeword</font><font color="#E5E5E5"> and we have a code</font>

40
00:01:46,450 --> 00:01:51,640
word C<font color="#E5E5E5"> Prime and</font><font color="#CCCCCC"> then decoding takes</font>

41
00:01:49,390 --> 00:01:53,650
place<font color="#E5E5E5"> so the output of the decoder can</font>

42
00:01:51,640 --> 00:01:55,750
be either like the original message<font color="#CCCCCC"> or</font>

43
00:01:53,650 --> 00:01:59,260
it can be a special<font color="#CCCCCC"> symbol a symbol</font>

44
00:01:55,750 --> 00:02:02,650
bottom which basically tells<font color="#E5E5E5"> us that C</font>

45
00:01:59,260 --> 00:02:05,050
prime is<font color="#CCCCCC"> an invalid</font><font color="#E5E5E5"> code word</font><font color="#CCCCCC"> or it</font><font color="#E5E5E5"> can</font>

46
00:02:02,650 --> 00:02:06,910
<font color="#E5E5E5">be</font><font color="#CCCCCC"> like a messages prime which we say</font>

47
00:02:05,050 --> 00:02:07,450
that s prime like should be<font color="#E5E5E5"> unrelated to</font>

48
00:02:06,910 --> 00:02:13,629
<font color="#CCCCCC">s</font>

49
00:02:07,450 --> 00:02:15,129
and<font color="#E5E5E5"> more formally this is like that the</font>

50
00:02:13,629 --> 00:02:16,410
<font color="#E5E5E5">execution that was considering the</font>

51
00:02:15,129 --> 00:02:18,579
previously

52
00:02:16,410 --> 00:02:20,670
it's what we call<font color="#E5E5E5"> the real-world</font>

53
00:02:18,580 --> 00:02:24,370
execution in which the adversary

54
00:02:20,670 --> 00:02:27,869
interacts with with the<font color="#CCCCCC"> codeword</font><font color="#E5E5E5"> over</font>

55
00:02:24,370 --> 00:02:30,459
the message<font color="#CCCCCC"> s the private messages and</font>

56
00:02:27,870 --> 00:02:33,209
<font color="#CCCCCC">then normal ability means</font><font color="#E5E5E5"> that for any</font>

57
00:02:30,459 --> 00:02:37,540
shots<font color="#CCCCCC"> are very sorry</font><font color="#E5E5E5"> we have a simulator</font>

58
00:02:33,209 --> 00:02:41,530
<font color="#E5E5E5">the simulator interacts with the</font>

59
00:02:37,540 --> 00:02:45,040
adversary<font color="#E5E5E5"> without having access to s and</font>

60
00:02:41,530 --> 00:02:46,750
<font color="#CCCCCC">he</font><font color="#E5E5E5"> is able to produce a view which is</font>

61
00:02:45,040 --> 00:02:50,290
indistinguishable from<font color="#CCCCCC"> the real</font><font color="#E5E5E5"> view</font>

62
00:02:46,750 --> 00:02:51,670
from the real execution and of<font color="#E5E5E5"> course</font>

63
00:02:50,290 --> 00:02:54,250
the adversary cannot distinguish<font color="#CCCCCC"> between</font>

64
00:02:51,670 --> 00:02:56,910
the two worlds<font color="#E5E5E5"> right and since the</font>

65
00:02:54,250 --> 00:03:02,160
<font color="#E5E5E5">simulator does not have access to as</font>

66
00:02:56,910 --> 00:03:04,780
this gives like privacy over<font color="#E5E5E5"> the message</font>

67
00:03:02,160 --> 00:03:06,700
<font color="#CCCCCC">so the main application</font><font color="#E5E5E5"> of non malleable</font>

68
00:03:04,780 --> 00:03:09,930
codes that was like proposed in the

69
00:03:06,700 --> 00:03:12,540
original papers<font color="#E5E5E5"> like for for having like</font>

70
00:03:09,930 --> 00:03:16,900
for<font color="#CCCCCC"> achieving temporaries ilion's</font>

71
00:03:12,540 --> 00:03:19,690
against physical attacks<font color="#CCCCCC"> so let's say</font>

72
00:03:16,900 --> 00:03:22,060
you have any cryptographic<font color="#CCCCCC"> Hardware it</font>

73
00:03:19,690 --> 00:03:24,579
can be a smart card that computes like

74
00:03:22,060 --> 00:03:26,650
some functionality<font color="#E5E5E5"> Z over private state</font>

75
00:03:24,579 --> 00:03:31,269
s so it could compute let's say<font color="#CCCCCC"> digital</font>

76
00:03:26,650 --> 00:03:33,250
signatures<font color="#E5E5E5"> over</font><font color="#CCCCCC"> like signing</font><font color="#E5E5E5"> key s so</font>

77
00:03:31,269 --> 00:03:36,400
the standard adversary the the<font color="#CCCCCC"> blackbox</font>

78
00:03:33,250 --> 00:03:37,959
adversary he is like<font color="#E5E5E5"> wearing the the</font>

79
00:03:36,400 --> 00:03:39,880
hardware<font color="#E5E5E5"> to divide the functionality</font>

80
00:03:37,959 --> 00:03:44,019
with input X and receives the<font color="#E5E5E5"> output of</font>

81
00:03:39,880 --> 00:03:46,269
<font color="#E5E5E5">the computation</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is the blackbox</font>

82
00:03:44,019 --> 00:03:48,209
adversary but of course in reality<font color="#E5E5E5"> the</font>

83
00:03:46,269 --> 00:03:51,340
adversary can be much more powerful

84
00:03:48,209 --> 00:03:53,470
<font color="#CCCCCC">because he can exploit</font><font color="#E5E5E5"> physical</font>

85
00:03:51,340 --> 00:03:56,019
properties of<font color="#CCCCCC"> the implementation and he</font>

86
00:03:53,470 --> 00:03:59,019
came out<font color="#CCCCCC"> like attacks</font><font color="#E5E5E5"> that we call</font>

87
00:03:56,019 --> 00:04:01,870
<font color="#CCCCCC">physical attacks so the community has</font>

88
00:03:59,019 --> 00:04:04,420
like<font color="#CCCCCC"> a significant effort like</font><font color="#E5E5E5"> in in</font>

89
00:04:01,870 --> 00:04:07,209
<font color="#CCCCCC">modeling such attacks</font><font color="#E5E5E5"> so one way</font><font color="#CCCCCC"> to</font>

90
00:04:04,420 --> 00:04:09,040
model them is like considering attacks

91
00:04:07,209 --> 00:04:11,980
against the memory of of the

92
00:04:09,040 --> 00:04:15,190
cryptographic<font color="#CCCCCC"> Hardware</font><font color="#E5E5E5"> so in this</font>

93
00:04:11,980 --> 00:04:17,620
setting<font color="#CCCCCC"> the</font><font color="#E5E5E5"> adversary gives input X to</font>

94
00:04:15,190 --> 00:04:20,350
the to the to the functionality<font color="#CCCCCC"> and he</font>

95
00:04:17,620 --> 00:04:23,470
can also issue like a<font color="#CCCCCC"> tampering query F</font>

96
00:04:20,350 --> 00:04:24,790
and he receives the output of the

97
00:04:23,470 --> 00:04:28,780
<font color="#CCCCCC">computation</font>

98
00:04:24,790 --> 00:04:31,330
<font color="#E5E5E5">G over X but evaluated over the tampered</font>

99
00:04:28,780 --> 00:04:33,969
memory value which is<font color="#CCCCCC"> F</font><font color="#E5E5E5"> of s and the</font>

100
00:04:31,330 --> 00:04:36,520
main<font color="#E5E5E5"> goal is like</font><font color="#CCCCCC"> - to infer information</font>

101
00:04:33,970 --> 00:04:40,180
<font color="#E5E5E5">over the private state or like to</font>

102
00:04:36,520 --> 00:04:44,320
compute stuff that he wouldn't be

103
00:04:40,180 --> 00:04:45,580
<font color="#E5E5E5">allowed to compute without tampering so</font>

104
00:04:44,320 --> 00:04:47,290
non malleable codes provide a

105
00:04:45,580 --> 00:04:49,570
straightforward<font color="#E5E5E5"> way to provide to</font>

106
00:04:47,290 --> 00:04:51,630
protect against such<font color="#CCCCCC"> attacks</font><font color="#E5E5E5"> and the</font>

107
00:04:49,570 --> 00:04:54,280
Quai des<font color="#CCCCCC"> Aleutian is very like simple</font>

108
00:04:51,630 --> 00:04:56,170
<font color="#CCCCCC">basically what we do is like if this</font><font color="#E5E5E5"> is</font>

109
00:04:54,280 --> 00:04:59,549
<font color="#CCCCCC">the original functionality</font><font color="#E5E5E5"> with private</font>

110
00:04:56,170 --> 00:05:01,840
state s what we do is like we<font color="#E5E5E5"> encode our</font>

111
00:04:59,550 --> 00:05:04,480
<font color="#E5E5E5">private state using a non malleable</font>

112
00:05:01,840 --> 00:05:07,150
encoding scheme<font color="#E5E5E5"> and the</font><font color="#CCCCCC"> compiled</font>

113
00:05:04,480 --> 00:05:10,690
functionality<font color="#CCCCCC"> jehad first needs to</font>

114
00:05:07,150 --> 00:05:12,909
<font color="#E5E5E5">recover the original methods so it first</font>

115
00:05:10,690 --> 00:05:15,070
decodes<font color="#E5E5E5"> as hot and recovers s and</font>

116
00:05:12,910 --> 00:05:20,560
computes the original functionality<font color="#E5E5E5"> over</font>

117
00:05:15,070 --> 00:05:22,480
<font color="#E5E5E5">s and X</font><font color="#CCCCCC"> of course</font><font color="#E5E5E5"> this requires that</font><font color="#CCCCCC"> the</font>

118
00:05:20,560 --> 00:05:24,970
computational is<font color="#E5E5E5"> trust the computation</font>

119
00:05:22,480 --> 00:05:26,680
is trusted<font color="#CCCCCC"> but this is like different</font>

120
00:05:24,970 --> 00:05:28,030
line of work like modeling attacks

121
00:05:26,680 --> 00:05:30,460
against the computation is not

122
00:05:28,030 --> 00:05:33,669
considered like in this in this<font color="#E5E5E5"> world so</font>

123
00:05:30,460 --> 00:05:35,739
any attack against the memory here like

124
00:05:33,670 --> 00:05:37,510
any application of a function<font color="#E5E5E5"> f here can</font>

125
00:05:35,740 --> 00:05:42,430
be simulated<font color="#E5E5E5"> without having access to</font>

126
00:05:37,510 --> 00:05:44,680
<font color="#CCCCCC">the original</font><font color="#E5E5E5"> private state unfortunately</font>

127
00:05:42,430 --> 00:05:48,430
<font color="#CCCCCC">we cannot</font><font color="#E5E5E5"> add sieve-like security</font>

128
00:05:44,680 --> 00:05:51,040
against any any tampering function class

129
00:05:48,430 --> 00:05:53,620
for<font color="#E5E5E5"> instance consider the function that</font>

130
00:05:51,040 --> 00:05:56,590
first decodes<font color="#E5E5E5"> the code word like applies</font>

131
00:05:53,620 --> 00:05:59,110
any function like<font color="#CCCCCC"> two to the methods</font>

132
00:05:56,590 --> 00:06:00,700
like plus 1 and then we<font color="#E5E5E5"> encode then the</font>

133
00:05:59,110 --> 00:06:02,500
resulting code word is highly related

134
00:06:00,700 --> 00:06:05,710
right so we cannot<font color="#CCCCCC"> add C security</font>

135
00:06:02,500 --> 00:06:07,660
against any class that<font color="#CCCCCC"> contains</font><font color="#E5E5E5"> F so</font>

136
00:06:05,710 --> 00:06:09,400
over the last<font color="#E5E5E5"> years</font><font color="#CCCCCC"> there have been many</font>

137
00:06:07,660 --> 00:06:12,040
many<font color="#E5E5E5"> papers that consider different</font>

138
00:06:09,400 --> 00:06:14,289
<font color="#E5E5E5">models apologies if like you have a</font>

139
00:06:12,040 --> 00:06:17,290
paper<font color="#E5E5E5"> and it's not</font><font color="#CCCCCC"> setting in in this</font>

140
00:06:14,290 --> 00:06:19,540
slide<font color="#CCCCCC"> so</font><font color="#E5E5E5"> we have like split state</font>

141
00:06:17,290 --> 00:06:23,560
functions we have<font color="#CCCCCC"> permutation bitwise</font>

142
00:06:19,540 --> 00:06:30,030
tampering and and many others<font color="#E5E5E5"> so in this</font>

143
00:06:23,560 --> 00:06:33,970
work we consider partial functions so

144
00:06:30,030 --> 00:06:38,380
the idea is that we allow the adversary

145
00:06:33,970 --> 00:06:40,600
to<font color="#CCCCCC"> access arbitrary subset of</font>

146
00:06:38,380 --> 00:06:44,620
arbitrary subsets of<font color="#CCCCCC"> corporate locations</font>

147
00:06:40,600 --> 00:06:46,810
with specific cardinality so before like

148
00:06:44,620 --> 00:06:48,850
in split state functions let's say you

149
00:06:46,810 --> 00:06:50,440
put like some structural restriction<font color="#E5E5E5"> on</font>

150
00:06:48,850 --> 00:06:52,810
the way the<font color="#E5E5E5"> adversaries accessing the</font>

151
00:06:50,440 --> 00:06:55,690
private memory<font color="#E5E5E5"> but he can access the</font>

152
00:06:52,810 --> 00:06:58,960
<font color="#CCCCCC">entire private</font><font color="#E5E5E5"> memory so he can override</font>

153
00:06:55,690 --> 00:07:01,060
let's say the code<font color="#CCCCCC"> board but there is a</font>

154
00:06:58,960 --> 00:07:03,820
restriction<font color="#CCCCCC"> for instance in split state</font>

155
00:07:01,060 --> 00:07:05,620
the attacker who tampers with<font color="#CCCCCC"> the left</font>

156
00:07:03,820 --> 00:07:06,969
part<font color="#CCCCCC"> of the memory he doesn't have</font>

157
00:07:05,620 --> 00:07:10,300
access<font color="#E5E5E5"> on the right part</font><font color="#CCCCCC"> of the memory</font>

158
00:07:06,970 --> 00:07:12,280
<font color="#E5E5E5">and somatically for the other part so</font>

159
00:07:10,300 --> 00:07:14,710
here there<font color="#CCCCCC"> is no</font><font color="#E5E5E5"> structural restriction</font>

160
00:07:12,280 --> 00:07:18,190
and the adversary is allowed to<font color="#CCCCCC"> choose</font>

161
00:07:14,710 --> 00:07:20,260
codeword locations<font color="#E5E5E5"> so as in any coding</font>

162
00:07:18,190 --> 00:07:22,690
<font color="#E5E5E5">scheme we want efficiency where</font>

163
00:07:20,260 --> 00:07:24,780
efficiency<font color="#E5E5E5"> like is measured by the</font>

164
00:07:22,690 --> 00:07:27,670
information<font color="#E5E5E5"> rate of the encoding scheme</font>

165
00:07:24,780 --> 00:07:29,559
<font color="#E5E5E5">which is</font><font color="#CCCCCC"> actually the message</font><font color="#E5E5E5"> length</font>

166
00:07:27,670 --> 00:07:32,920
over<font color="#CCCCCC"> the codeword length as a as a</font>

167
00:07:29,560 --> 00:07:34,600
message<font color="#E5E5E5"> length goes infinity and we</font><font color="#CCCCCC"> also</font>

168
00:07:32,920 --> 00:07:36,310
in<font color="#E5E5E5"> this paper consider another</font><font color="#CCCCCC"> measure</font>

169
00:07:34,600 --> 00:07:40,300
<font color="#CCCCCC">of effectiveness</font><font color="#E5E5E5"> that we call access</font>

170
00:07:36,310 --> 00:07:44,770
rate<font color="#E5E5E5"> which actually reflects the</font><font color="#CCCCCC"> adverse</font>

171
00:07:40,300 --> 00:07:47,680
<font color="#CCCCCC">aerial access</font><font color="#E5E5E5"> so it is actually the the</font>

172
00:07:44,770 --> 00:07:49,450
number<font color="#E5E5E5"> of code words symbols or bits</font>

173
00:07:47,680 --> 00:07:51,730
that the<font color="#CCCCCC"> adviser is allowed to access</font>

174
00:07:49,450 --> 00:07:56,289
over<font color="#E5E5E5"> the total</font><font color="#CCCCCC"> number of codeword bits</font>

175
00:07:51,730 --> 00:07:58,990
<font color="#E5E5E5">or symbols and again we take the</font><font color="#CCCCCC"> limit</font>

176
00:07:56,290 --> 00:08:02,050
<font color="#E5E5E5">so ideally we would like rate</font><font color="#CCCCCC"> 1 for both</font>

177
00:07:58,990 --> 00:08:04,300
of them<font color="#CCCCCC"> so the main question that</font><font color="#E5E5E5"> we try</font>

178
00:08:02,050 --> 00:08:06,250
<font color="#CCCCCC">to like to</font><font color="#E5E5E5"> answer in this paper is like</font>

179
00:08:04,300 --> 00:08:08,680
<font color="#E5E5E5">if we can have like efficient non</font>

180
00:08:06,250 --> 00:08:13,510
malleable codes<font color="#E5E5E5"> meaning high formation</font>

181
00:08:08,680 --> 00:08:15,370
rate that while<font color="#CCCCCC"> allowing</font><font color="#E5E5E5"> the adversary</font>

182
00:08:13,510 --> 00:08:19,960
to<font color="#E5E5E5"> access almost the entire code word</font>

183
00:08:15,370 --> 00:08:21,310
which means<font color="#E5E5E5"> high high access rate so I</font>

184
00:08:19,960 --> 00:08:23,260
will give<font color="#CCCCCC"> some motivation behind the</font>

185
00:08:21,310 --> 00:08:26,950
<font color="#E5E5E5">model first</font><font color="#CCCCCC"> right because the attack</font>

186
00:08:23,260 --> 00:08:28,810
that<font color="#CCCCCC"> I described like some slides</font><font color="#E5E5E5"> before</font>

187
00:08:26,950 --> 00:08:31,599
like does<font color="#CCCCCC"> not apply in this setting</font>

188
00:08:28,810 --> 00:08:33,159
<font color="#E5E5E5">right fully like decoding and then the</font>

189
00:08:31,600 --> 00:08:35,830
encoding does not apply<font color="#E5E5E5"> anymore</font>

190
00:08:33,159 --> 00:08:39,069
so this trivial<font color="#CCCCCC"> attacker that</font><font color="#E5E5E5"> I</font>

191
00:08:35,830 --> 00:08:40,840
<font color="#E5E5E5">described does not apply</font><font color="#CCCCCC"> however</font><font color="#E5E5E5"> the</font>

192
00:08:39,070 --> 00:08:45,040
fact that<font color="#E5E5E5"> we allow the adversary to pick</font>

193
00:08:40,840 --> 00:08:47,800
the locations carefully<font color="#CCCCCC"> it allows for</font>

194
00:08:45,040 --> 00:08:49,750
like potential attacks<font color="#E5E5E5"> right so if let's</font>

195
00:08:47,800 --> 00:08:52,628
<font color="#E5E5E5">say you use a primitive to</font>

196
00:08:49,750 --> 00:08:55,360
like<font color="#CCCCCC"> encryption - too big no malleable</font>

197
00:08:52,629 --> 00:08:57,339
codes<font color="#E5E5E5"> then the adversary if he</font><font color="#CCCCCC"> carefully</font>

198
00:08:55,360 --> 00:09:00,879
chooses the locations<font color="#E5E5E5"> he can choose like</font>

199
00:08:57,339 --> 00:09:03,069
<font color="#E5E5E5">secret key and like something else</font><font color="#CCCCCC"> in</font>

200
00:09:00,879 --> 00:09:04,779
<font color="#E5E5E5">ciphertext so if you use</font><font color="#CCCCCC"> Haas</font><font color="#E5E5E5"> he can</font>

201
00:09:03,069 --> 00:09:08,410
choose like<font color="#E5E5E5"> to alter the hearts and the</font>

202
00:09:04,779 --> 00:09:10,509
<font color="#E5E5E5">pre-meds so so he might be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> somehow</font>

203
00:09:08,410 --> 00:09:15,339
to create correlated code words or to

204
00:09:10,509 --> 00:09:16,899
break security secondly partial

205
00:09:15,339 --> 00:09:18,790
functions is a model<font color="#CCCCCC"> that complies with</font>

206
00:09:16,899 --> 00:09:21,610
<font color="#E5E5E5">the real world attacks like with attacks</font>

207
00:09:18,790 --> 00:09:24,310
that we have seen that can recover<font color="#E5E5E5"> the</font>

208
00:09:21,610 --> 00:09:27,399
private state of the primitive<font color="#E5E5E5"> by doing</font>

209
00:09:24,310 --> 00:09:31,750
like<font color="#E5E5E5"> only small modifications over the</font>

210
00:09:27,399 --> 00:09:35,230
private state of the primitive<font color="#E5E5E5"> the third</font>

211
00:09:31,750 --> 00:09:41,160
points that the passive<font color="#CCCCCC"> analog off of</font>

212
00:09:35,230 --> 00:09:44,199
this model<font color="#E5E5E5"> when the adversary is not</font>

213
00:09:41,160 --> 00:09:46,800
modifying code<font color="#CCCCCC"> root location but he's</font>

214
00:09:44,199 --> 00:09:49,269
only<font color="#E5E5E5"> reading code</font><font color="#CCCCCC"> codeword locations</font>

215
00:09:46,800 --> 00:09:50,709
implies all-or-nothing transforms which

216
00:09:49,269 --> 00:09:54,129
is a<font color="#CCCCCC"> primitive that was introduced by</font>

217
00:09:50,709 --> 00:09:55,779
<font color="#CCCCCC">diversity 97</font><font color="#E5E5E5"> 1997 and has numerous</font>

218
00:09:54,129 --> 00:09:58,779
applications so<font color="#CCCCCC"> all-or-nothing</font>

219
00:09:55,779 --> 00:10:03,160
<font color="#CCCCCC">transforms</font><font color="#E5E5E5"> say is like the</font><font color="#CCCCCC"> adversary is</font>

220
00:09:58,779 --> 00:10:05,019
similar but he only<font color="#E5E5E5"> receives read access</font>

221
00:10:03,160 --> 00:10:07,899
<font color="#E5E5E5">over the</font><font color="#CCCCCC"> code word</font><font color="#E5E5E5"> and what you require</font>

222
00:10:05,019 --> 00:10:09,879
<font color="#CCCCCC">is</font><font color="#E5E5E5"> privacy so non malleable codes for</font>

223
00:10:07,899 --> 00:10:13,689
partial functions imply all-or-nothing

224
00:10:09,879 --> 00:10:16,199
transforms<font color="#E5E5E5"> and finally our constant</font>

225
00:10:13,689 --> 00:10:18,699
functions are excluded from<font color="#E5E5E5"> the model so</font>

226
00:10:16,199 --> 00:10:22,209
potentially<font color="#E5E5E5"> we can achieve stronger</font>

227
00:10:18,699 --> 00:10:24,040
primitives so actually this<font color="#CCCCCC"> is what we</font>

228
00:10:22,209 --> 00:10:26,529
do we<font color="#CCCCCC"> see</font><font color="#E5E5E5"> the stronger notion which we</font>

229
00:10:24,040 --> 00:10:29,529
call<font color="#E5E5E5"> non malleable codes with</font>

230
00:10:26,529 --> 00:10:31,860
manipulation detection which

231
00:10:29,529 --> 00:10:34,449
manipulation detection is on top of

232
00:10:31,860 --> 00:10:36,309
normal<font color="#CCCCCC"> abilities so we have simulation</font>

233
00:10:34,449 --> 00:10:38,680
<font color="#E5E5E5">based security</font><font color="#CCCCCC"> and we all sorts of</font>

234
00:10:36,309 --> 00:10:41,889
manipulation detection so manipulation

235
00:10:38,680 --> 00:10:44,769
detection guarantees that the modified

236
00:10:41,889 --> 00:10:48,000
code word will either decode to the

237
00:10:44,769 --> 00:10:53,520
original message<font color="#E5E5E5"> or it will decode to</font>

238
00:10:48,000 --> 00:10:55,230
<font color="#E5E5E5">they</font><font color="#CCCCCC"> 'invalid the symbol</font><font color="#E5E5E5"> bottom</font><font color="#CCCCCC"> so as I</font>

239
00:10:53,520 --> 00:10:56,819
<font color="#E5E5E5">said manipulation detection does not</font>

240
00:10:55,230 --> 00:10:58,440
apply non malleable<font color="#CCCCCC"> Kozma with</font>

241
00:10:56,820 --> 00:11:01,410
manipulation detection<font color="#E5E5E5"> but</font><font color="#CCCCCC"> they the</font>

242
00:10:58,440 --> 00:11:03,030
other<font color="#E5E5E5"> way around holds and I would like</font>

243
00:11:01,410 --> 00:11:04,500
<font color="#E5E5E5">to stress out that this is an important</font>

244
00:11:03,030 --> 00:11:07,140
property<font color="#CCCCCC"> for the applications of the</font>

245
00:11:04,500 --> 00:11:08,790
primitive<font color="#CCCCCC"> right so if you have</font>

246
00:11:07,140 --> 00:11:10,680
manipulation detection you can<font color="#CCCCCC"> use a</font>

247
00:11:08,790 --> 00:11:12,810
primitive like another like settings

248
00:11:10,680 --> 00:11:15,180
than tamper resilience like for secure

249
00:11:12,810 --> 00:11:17,130
communication<font color="#E5E5E5"> right we cannot allow the</font>

250
00:11:15,180 --> 00:11:19,680
adversary<font color="#E5E5E5"> to override the whole message</font>

251
00:11:17,130 --> 00:11:21,900
<font color="#E5E5E5">we need to know the receiver needs to</font>

252
00:11:19,680 --> 00:11:24,120
know that<font color="#CCCCCC"> he received actually the</font>

253
00:11:21,900 --> 00:11:26,220
correct<font color="#E5E5E5"> message</font><font color="#CCCCCC"> or he wants to detect</font>

254
00:11:24,120 --> 00:11:28,310
<font color="#E5E5E5">that somebody tampered with a</font>

255
00:11:26,220 --> 00:11:30,870
<font color="#E5E5E5">communication</font>

256
00:11:28,310 --> 00:11:34,500
so assuming<font color="#E5E5E5"> one-way functions we</font>

257
00:11:30,870 --> 00:11:36,120
construct this notion<font color="#E5E5E5"> non malleable</font>

258
00:11:34,500 --> 00:11:39,450
codes with manipulation detection the

259
00:11:36,120 --> 00:11:42,000
<font color="#CCCCCC">crs model with rate</font><font color="#E5E5E5"> 1 and deformation</font>

260
00:11:39,450 --> 00:11:43,680
rate 1 - over my<font color="#E5E5E5"> below K where K is the</font>

261
00:11:42,000 --> 00:11:46,050
security parameter we are in the

262
00:11:43,680 --> 00:11:50,760
computational setting and then we show

263
00:11:46,050 --> 00:11:53,339
how<font color="#E5E5E5"> to remove the CRS and we have a</font>

264
00:11:50,760 --> 00:11:55,800
<font color="#E5E5E5">construction in the standard model with</font>

265
00:11:53,339 --> 00:11:58,980
information rate and access rate 1 over

266
00:11:55,800 --> 00:12:01,650
1 - over<font color="#CCCCCC"> Omega log K and we increase the</font>

267
00:11:58,980 --> 00:12:03,870
alphabet size<font color="#E5E5E5"> so before the adversary</font>

268
00:12:01,650 --> 00:12:06,300
<font color="#CCCCCC">was accessing</font><font color="#E5E5E5"> bits of the code word</font>

269
00:12:03,870 --> 00:12:09,660
now<font color="#E5E5E5"> his existing like bit strings of</font>

270
00:12:06,300 --> 00:12:13,650
length log K we have<font color="#E5E5E5"> like our symbols</font>

271
00:12:09,660 --> 00:12:15,420
are like at<font color="#E5E5E5"> the alphabet</font><font color="#CCCCCC"> is bigger and</font>

272
00:12:13,650 --> 00:12:17,819
our results of course<font color="#E5E5E5"> apply efficient</font>

273
00:12:15,420 --> 00:12:20,069
all of<font color="#CCCCCC"> nothing transforms under standard</font>

274
00:12:17,820 --> 00:12:21,720
assumptions and which is like to our

275
00:12:20,070 --> 00:12:23,520
knowledge<font color="#E5E5E5"> is the first construction that</font>

276
00:12:21,720 --> 00:12:28,470
achieves this kind<font color="#E5E5E5"> of</font><font color="#CCCCCC"> rate under</font>

277
00:12:23,520 --> 00:12:30,780
<font color="#E5E5E5">standard assumptions so I will go over</font>

278
00:12:28,470 --> 00:12:33,300
<font color="#E5E5E5">the challenges a bit and towards the</font>

279
00:12:30,780 --> 00:12:34,860
construction<font color="#E5E5E5"> so we cannot</font><font color="#CCCCCC"> allow the</font>

280
00:12:33,300 --> 00:12:36,719
adversary to<font color="#CCCCCC"> read the entire like</font>

281
00:12:34,860 --> 00:12:38,460
<font color="#CCCCCC">codeword</font><font color="#E5E5E5"> otherwise we have the trivial</font>

282
00:12:36,720 --> 00:12:40,170
attack and of course<font color="#E5E5E5"> this might not be</font><font color="#CCCCCC"> a</font>

283
00:12:38,460 --> 00:12:43,110
partial function<font color="#E5E5E5"> but I would like to say</font>

284
00:12:40,170 --> 00:12:44,729
it anyway<font color="#E5E5E5"> secondly we have an</font>

285
00:12:43,110 --> 00:12:46,260
impossibility result on the<font color="#E5E5E5"> information</font>

286
00:12:44,730 --> 00:12:48,600
theoretic setting but you're<font color="#CCCCCC"> urging</font><font color="#E5E5E5"> was</font>

287
00:12:46,260 --> 00:12:50,610
<font color="#E5E5E5">warming which says that any scheme that</font>

288
00:12:48,600 --> 00:12:52,320
achieves<font color="#E5E5E5"> our constant</font><font color="#CCCCCC"> access and</font>

289
00:12:50,610 --> 00:12:55,530
information<font color="#E5E5E5"> rate it can only achieve</font>

290
00:12:52,320 --> 00:12:56,730
<font color="#E5E5E5">security with constant</font><font color="#CCCCCC"> probability so we</font>

291
00:12:55,530 --> 00:12:59,730
focus on<font color="#CCCCCC"> the information theoretic</font>

292
00:12:56,730 --> 00:13:01,440
setting and since we need privacy<font color="#E5E5E5"> let's</font>

293
00:12:59,730 --> 00:13:04,380
start like to build our construction

294
00:13:01,440 --> 00:13:09,500
from<font color="#CCCCCC"> a trip and let's</font><font color="#E5E5E5"> have an encryption</font>

295
00:13:04,380 --> 00:13:18,780
based<font color="#E5E5E5"> solution so what we do is like</font>

296
00:13:09,500 --> 00:13:20,550
sorry so what we do is<font color="#CCCCCC"> that we encrypt</font>

297
00:13:18,780 --> 00:13:22,470
<font color="#E5E5E5">our methods we use symmetric</font><font color="#CCCCCC"> encryption</font>

298
00:13:20,550 --> 00:13:24,810
and we encrypt our<font color="#E5E5E5"> methods using a</font>

299
00:13:22,470 --> 00:13:27,360
secret key<font color="#E5E5E5"> and then we somehow</font>

300
00:13:24,810 --> 00:13:29,640
distribute like the<font color="#E5E5E5"> ciphertext and the</font>

301
00:13:27,360 --> 00:13:31,860
secret key inside the code word<font color="#E5E5E5"> in any</font>

302
00:13:29,640 --> 00:13:33,780
possible<font color="#E5E5E5"> way like we don't</font><font color="#CCCCCC"> care we put</font>

303
00:13:31,860 --> 00:13:35,250
somehow those bits inside the code word

304
00:13:33,780 --> 00:13:37,530
<font color="#E5E5E5">and we don't care about the structure</font>

305
00:13:35,250 --> 00:13:39,300
<font color="#CCCCCC">and we might also use</font><font color="#E5E5E5"> some other like</font>

306
00:13:37,530 --> 00:13:42,180
primitives to<font color="#E5E5E5"> achieve</font><font color="#CCCCCC"> security so this</font>

307
00:13:39,300 --> 00:13:44,910
those<font color="#CCCCCC"> patterned bits</font><font color="#E5E5E5"> over here</font><font color="#CCCCCC"> denote</font>

308
00:13:42,180 --> 00:13:47,040
let's say<font color="#CCCCCC"> our</font><font color="#E5E5E5"> know a commitment or zero</font>

309
00:13:44,910 --> 00:13:52,050
knowledge proof or something that we use

310
00:13:47,040 --> 00:13:54,780
<font color="#E5E5E5">that same</font><font color="#CCCCCC"> security so any any such type</font>

311
00:13:52,050 --> 00:13:56,550
of<font color="#E5E5E5"> attack like and have of construction</font>

312
00:13:54,780 --> 00:13:59,250
<font color="#CCCCCC">that you can have a simple attack</font>

313
00:13:56,550 --> 00:14:02,459
what is the attack the attacker simply

314
00:13:59,250 --> 00:14:04,230
<font color="#E5E5E5">is accessing the secret key the secret</font>

315
00:14:02,460 --> 00:14:06,990
<font color="#E5E5E5">key is short we are in the computational</font>

316
00:14:04,230 --> 00:14:08,820
setting right<font color="#E5E5E5"> so compared to the message</font>

317
00:14:06,990 --> 00:14:10,680
length the<font color="#E5E5E5"> secret key length is very</font>

318
00:14:08,820 --> 00:14:13,830
small<font color="#CCCCCC"> so the attacker is</font><font color="#E5E5E5"> accessing the</font>

319
00:14:10,680 --> 00:14:17,040
secret key and constant number<font color="#CCCCCC"> of bits</font>

320
00:14:13,830 --> 00:14:18,990
of the<font color="#E5E5E5"> ciphertext</font><font color="#CCCCCC"> and he can personally</font>

321
00:14:17,040 --> 00:14:23,430
recover the message<font color="#E5E5E5"> and he</font><font color="#CCCCCC"> requires</font>

322
00:14:18,990 --> 00:14:25,500
access<font color="#E5E5E5"> rate of like this</font><font color="#CCCCCC"> of like</font><font color="#E5E5E5"> length</font>

323
00:14:23,430 --> 00:14:28,920
of<font color="#CCCCCC"> SK over over the message length which</font>

324
00:14:25,500 --> 00:14:33,660
<font color="#CCCCCC">is very small right so we might actually</font>

325
00:14:28,920 --> 00:14:35,610
try to to<font color="#E5E5E5"> protect the secret key like</font>

326
00:14:33,660 --> 00:14:38,100
using<font color="#E5E5E5"> some inner encoding so instead of</font>

327
00:14:35,610 --> 00:14:40,650
<font color="#E5E5E5">storing the secret key</font><font color="#CCCCCC"> directly to to</font>

328
00:14:38,100 --> 00:14:42,300
the code word will like store the

329
00:14:40,650 --> 00:14:43,740
encoding over the<font color="#E5E5E5"> secret key but again</font>

330
00:14:42,300 --> 00:14:47,640
we have we have the same problem because

331
00:14:43,740 --> 00:14:49,470
<font color="#E5E5E5">any such a coding will be</font><font color="#CCCCCC"> sort it will</font>

332
00:14:47,640 --> 00:14:51,120
be very efficient and<font color="#E5E5E5"> its length is</font>

333
00:14:49,470 --> 00:14:54,060
going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be independent</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> the length</font><font color="#E5E5E5"> of</font>

334
00:14:51,120 --> 00:14:56,510
the<font color="#E5E5E5"> methods so we can have the same</font>

335
00:14:54,060 --> 00:14:58,920
attack again

336
00:14:56,510 --> 00:15:02,939
one other solution<font color="#CCCCCC"> will be like to</font>

337
00:14:58,920 --> 00:15:06,510
encode the<font color="#E5E5E5"> ciphertext somehow so</font><font color="#CCCCCC"> that</font>

338
00:15:02,940 --> 00:15:09,600
partial decryption cannot happen anymore

339
00:15:06,510 --> 00:15:11,850
however this encoding over here<font color="#CCCCCC"> it's</font>

340
00:15:09,600 --> 00:15:13,320
length is<font color="#CCCCCC"> proportional to to the methods</font>

341
00:15:11,850 --> 00:15:15,990
so<font color="#E5E5E5"> well</font>

342
00:15:13,320 --> 00:15:17,910
<font color="#CCCCCC">is</font><font color="#E5E5E5"> gonna this this will affect the</font>

343
00:15:15,990 --> 00:15:21,259
length of the scheme and we would like

344
00:15:17,910 --> 00:15:25,230
to<font color="#CCCCCC"> achieve</font><font color="#E5E5E5"> like the best possible rate</font>

345
00:15:21,259 --> 00:15:28,410
so the question is is<font color="#E5E5E5"> it possible</font><font color="#CCCCCC"> to</font>

346
00:15:25,230 --> 00:15:33,089
have<font color="#E5E5E5"> like access rate greater than this</font>

347
00:15:28,410 --> 00:15:36,060
fraction<font color="#E5E5E5"> and more generally is it</font>

348
00:15:33,089 --> 00:15:38,100
possible to<font color="#E5E5E5"> have access rate which is</font>

349
00:15:36,060 --> 00:15:39,930
greater<font color="#CCCCCC"> than</font><font color="#E5E5E5"> the weakest primitive that</font>

350
00:15:38,100 --> 00:15:42,720
you use in<font color="#CCCCCC"> your construction sustains</font>

351
00:15:39,930 --> 00:15:45,420
<font color="#E5E5E5">you have a secret key of specific length</font>

352
00:15:42,720 --> 00:15:51,269
can you read more than this specific

353
00:15:45,420 --> 00:15:53,160
length so the observation<font color="#E5E5E5"> here</font><font color="#CCCCCC"> is that</font>

354
00:15:51,269 --> 00:15:55,649
the structure<font color="#CCCCCC"> of the code word</font><font color="#E5E5E5"> is fixed</font>

355
00:15:53,160 --> 00:15:57,240
and the attacker<font color="#E5E5E5"> knows all the sensitive</font>

356
00:15:55,649 --> 00:15:59,069
<font color="#CCCCCC">codeword locations he knows the</font>

357
00:15:57,240 --> 00:16:02,730
locations of the secret key for instance

358
00:15:59,069 --> 00:16:04,979
so the main<font color="#CCCCCC"> idea is like to hide the</font>

359
00:16:02,730 --> 00:16:10,529
structure<font color="#E5E5E5"> via randomization right we</font>

360
00:16:04,980 --> 00:16:12,660
somehow<font color="#CCCCCC"> queue in</font><font color="#E5E5E5"> the structure and of</font>

361
00:16:10,529 --> 00:16:14,850
course<font color="#E5E5E5"> it is easy to kill</font><font color="#CCCCCC"> the structure</font>

362
00:16:12,660 --> 00:16:16,980
<font color="#E5E5E5">but you need a way</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> recover the</font>

363
00:16:14,850 --> 00:16:19,230
structure right you need some

364
00:16:16,980 --> 00:16:23,029
<font color="#E5E5E5">information that will enable you to</font>

365
00:16:19,230 --> 00:16:25,889
decode<font color="#E5E5E5"> because if if the adversary like</font>

366
00:16:23,029 --> 00:16:28,470
modifies things if legs<font color="#CCCCCC"> say permute</font>

367
00:16:25,889 --> 00:16:30,209
things you don't know where are like the

368
00:16:28,470 --> 00:16:33,329
secret key bits where is the<font color="#E5E5E5"> ciphertext</font>

369
00:16:30,209 --> 00:16:36,660
you know nothing so so in this work like

370
00:16:33,329 --> 00:16:38,310
<font color="#E5E5E5">we implement this structure recovering</font>

371
00:16:36,660 --> 00:16:40,230
mechanism in two ways our first

372
00:16:38,310 --> 00:16:43,680
construction is in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> crs model and</font>

373
00:16:40,230 --> 00:16:47,279
then<font color="#E5E5E5"> we saw how to remove the</font><font color="#CCCCCC"> CRS</font><font color="#E5E5E5"> so</font>

374
00:16:43,680 --> 00:16:50,130
what we do actually<font color="#E5E5E5"> is we encrypt</font><font color="#CCCCCC"> our</font>

375
00:16:47,279 --> 00:16:53,279
<font color="#CCCCCC">methods</font><font color="#E5E5E5"> using symmetric authenticate</font>

376
00:16:50,130 --> 00:16:56,279
using authenticated encryption<font color="#CCCCCC"> and we</font>

377
00:16:53,279 --> 00:16:58,350
also apply<font color="#E5E5E5"> a protection like an inner</font>

378
00:16:56,279 --> 00:17:00,029
encoding to protect the secret key<font color="#E5E5E5"> our</font>

379
00:16:58,350 --> 00:17:02,639
protection<font color="#CCCCCC"> level and</font><font color="#E5E5E5"> secret is very</font>

380
00:17:00,029 --> 00:17:04,679
<font color="#E5E5E5">efficient</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> very simple what we</font>

381
00:17:02,639 --> 00:17:07,280
actually do is like<font color="#CCCCCC"> we secret sure the</font>

382
00:17:04,679 --> 00:17:10,949
secret key and secret key<font color="#CCCCCC"> to the third</font>

383
00:17:07,280 --> 00:17:13,799
so the value<font color="#CCCCCC"> 3 like you can consider</font>

384
00:17:10,949 --> 00:17:16,260
<font color="#E5E5E5">also other values there it we just need</font>

385
00:17:13,799 --> 00:17:20,189
a nonlinear relation over<font color="#E5E5E5"> the secret key</font>

386
00:17:16,260 --> 00:17:24,010
so we construct this encoding<font color="#E5E5E5"> and we get</font>

387
00:17:20,189 --> 00:17:28,320
Z and then we<font color="#CCCCCC"> randomly distributed</font>

388
00:17:24,010 --> 00:17:33,429
bits of Z inside the code<font color="#CCCCCC"> world</font>

389
00:17:28,319 --> 00:17:37,030
according to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> CRS so the CRS defines</font>

390
00:17:33,429 --> 00:17:40,510
<font color="#E5E5E5">the</font><font color="#CCCCCC"> codeword locations in which we are</font>

391
00:17:37,030 --> 00:17:44,760
<font color="#E5E5E5">going to store the sensitive bits like</font>

392
00:17:40,510 --> 00:17:48,760
the bits<font color="#CCCCCC"> output by</font><font color="#E5E5E5"> the inner encoding</font>

393
00:17:44,760 --> 00:17:51,460
and<font color="#E5E5E5"> the</font><font color="#CCCCCC"> remaining remaining bits</font><font color="#E5E5E5"> like</font>

394
00:17:48,760 --> 00:17:54,370
the white bits store<font color="#CCCCCC"> sort the</font><font color="#E5E5E5"> ciphertext</font>

395
00:17:51,460 --> 00:17:58,480
<font color="#CCCCCC">of course there is an important</font><font color="#E5E5E5"> detail</font>

396
00:17:54,370 --> 00:18:02,139
here<font color="#E5E5E5"> the sampling function</font><font color="#CCCCCC"> is not</font>

397
00:17:58,480 --> 00:18:04,780
<font color="#E5E5E5">adopted with respect to the CRS so first</font>

398
00:18:02,140 --> 00:18:07,750
the adversary fixes the locations of the

399
00:18:04,780 --> 00:18:10,510
<font color="#CCCCCC">codeword that he's going to access then</font>

400
00:18:07,750 --> 00:18:12,580
we sample the CRS and then they are<font color="#CCCCCC"> very</font>

401
00:18:10,510 --> 00:18:15,190
sorry tampers with the<font color="#CCCCCC"> codeword while</font>

402
00:18:12,580 --> 00:18:17,049
receiving read<font color="#E5E5E5"> access over the CRS which</font>

403
00:18:15,190 --> 00:18:19,169
is a restriction that<font color="#E5E5E5"> will</font><font color="#CCCCCC"> we'll remove</font>

404
00:18:17,049 --> 00:18:22,780
later

405
00:18:19,169 --> 00:18:28,720
so the idea has as follows behind<font color="#E5E5E5"> like</font>

406
00:18:22,780 --> 00:18:34,480
the proof<font color="#CCCCCC"> due to the sampling since we</font>

407
00:18:28,720 --> 00:18:36,820
permute like the locations we can<font color="#E5E5E5"> prove</font>

408
00:18:34,480 --> 00:18:40,540
<font color="#CCCCCC">that the adversary knows</font><font color="#E5E5E5"> nothing about</font>

409
00:18:36,820 --> 00:18:42,460
SK<font color="#CCCCCC"> and test K</font><font color="#E5E5E5"> to the third he</font><font color="#CCCCCC"> all his</font>

410
00:18:40,540 --> 00:18:44,440
only accessing shares for those<font color="#E5E5E5"> values</font>

411
00:18:42,460 --> 00:18:49,450
<font color="#E5E5E5">but he learns nothing about the secret</font>

412
00:18:44,440 --> 00:18:52,090
key<font color="#E5E5E5"> so let's say that he modifies Z in a</font>

413
00:18:49,450 --> 00:18:54,460
way such that<font color="#E5E5E5"> this pair through the</font>

414
00:18:52,090 --> 00:18:56,370
function f goes to this pair s K<font color="#E5E5E5"> Prime</font>

415
00:18:54,460 --> 00:19:02,020
<font color="#E5E5E5">and s K double Prime</font>

416
00:18:56,370 --> 00:19:04,059
so the idea<font color="#E5E5E5"> is that having having that</font>

417
00:19:02,020 --> 00:19:06,580
the adversary learns nothing<font color="#E5E5E5"> about the</font>

418
00:19:04,059 --> 00:19:12,639
secret key<font color="#CCCCCC"> if he modifies those values</font>

419
00:19:06,580 --> 00:19:16,059
in a<font color="#CCCCCC"> way that actually</font><font color="#E5E5E5"> he produces like</font>

420
00:19:12,640 --> 00:19:19,000
a different key different<font color="#CCCCCC"> SK</font><font color="#E5E5E5"> or</font>

421
00:19:16,059 --> 00:19:25,059
different<font color="#E5E5E5"> SK to the third then we can</font>

422
00:19:19,000 --> 00:19:26,890
prove that<font color="#E5E5E5"> the probability in according</font>

423
00:19:25,059 --> 00:19:29,139
to which the<font color="#E5E5E5"> new values satisfy this</font>

424
00:19:26,890 --> 00:19:30,910
relation as<font color="#CCCCCC"> KS k to the</font><font color="#E5E5E5"> third is</font>

425
00:19:29,140 --> 00:19:34,360
negligible<font color="#E5E5E5"> otherwise we have a way to</font>

426
00:19:30,910 --> 00:19:37,180
recover<font color="#CCCCCC"> the original secret key and we</font>

427
00:19:34,360 --> 00:19:39,270
break security of<font color="#CCCCCC"> encryption and</font>

428
00:19:37,180 --> 00:19:42,280
<font color="#CCCCCC">now simulation is like straightforward</font>

429
00:19:39,270 --> 00:19:45,730
<font color="#E5E5E5">why the adversary is only accessing</font>

430
00:19:42,280 --> 00:19:48,940
shares<font color="#E5E5E5"> so we can give shares to the</font>

431
00:19:45,730 --> 00:19:51,910
adversary<font color="#E5E5E5"> and we can check if he</font>

432
00:19:48,940 --> 00:19:54,010
modifies the secret key or<font color="#E5E5E5"> not if he</font>

433
00:19:51,910 --> 00:19:56,770
modifies the secret key<font color="#E5E5E5"> the</font><font color="#CCCCCC"> simulator</font>

434
00:19:54,010 --> 00:20:01,030
<font color="#E5E5E5">outputs bottom otherwise the secret key</font>

435
00:19:56,770 --> 00:20:03,129
is<font color="#E5E5E5"> secure and security follows by the</font>

436
00:20:01,030 --> 00:20:05,080
authenticity property of the encryption

437
00:20:03,130 --> 00:20:08,440
<font color="#E5E5E5">scheme which means that if he modifies</font>

438
00:20:05,080 --> 00:20:10,330
the<font color="#CCCCCC"> cipher text</font><font color="#E5E5E5"> the simulator outputs</font>

439
00:20:08,440 --> 00:20:12,670
bottom<font color="#CCCCCC"> otherwise we know that the code</font>

440
00:20:10,330 --> 00:20:14,939
word like is like the same the message

441
00:20:12,670 --> 00:20:17,260
is secure

442
00:20:14,940 --> 00:20:23,320
so of course there is friction over the

443
00:20:17,260 --> 00:20:25,450
<font color="#CCCCCC">crs we want to avoid it</font><font color="#E5E5E5"> so in our next</font>

444
00:20:23,320 --> 00:20:29,439
<font color="#E5E5E5">construction we</font><font color="#CCCCCC"> manage to remove the</font><font color="#E5E5E5"> CRS</font>

445
00:20:25,450 --> 00:20:32,350
<font color="#E5E5E5">and how we are</font><font color="#CCCCCC"> doing it we increase we</font>

446
00:20:29,440 --> 00:20:35,530
increase the alphabet size<font color="#E5E5E5"> so before</font>

447
00:20:32,350 --> 00:20:39,159
like those boxes were bits now those

448
00:20:35,530 --> 00:20:42,850
boxes are<font color="#E5E5E5"> blocks or symbols of size log</font>

449
00:20:39,160 --> 00:20:47,230
K where K is the security parameter so

450
00:20:42,850 --> 00:20:51,159
again we have we encrypt and we use the

451
00:20:47,230 --> 00:20:53,200
inner encoding and we have sensitive and

452
00:20:51,160 --> 00:20:56,650
non sensitive blocks<font color="#E5E5E5"> the white blocks</font>

453
00:20:53,200 --> 00:21:00,310
are like ciphertext blocks which we call

454
00:20:56,650 --> 00:21:03,820
like non sensitive<font color="#E5E5E5"> and the blue or</font><font color="#CCCCCC"> gray</font>

455
00:21:00,310 --> 00:21:08,080
<font color="#E5E5E5">it should be</font><font color="#CCCCCC"> gray but</font><font color="#E5E5E5"> now it's blue</font><font color="#CCCCCC"> the</font>

456
00:21:03,820 --> 00:21:12,100
blue let's say blocks are like sensitive

457
00:21:08,080 --> 00:21:15,520
<font color="#E5E5E5">blocks in which</font><font color="#CCCCCC"> we use to</font><font color="#E5E5E5"> store</font><font color="#CCCCCC"> Z that</font>

458
00:21:12,100 --> 00:21:18,699
<font color="#E5E5E5">sensitive bits so the structure has as</font>

459
00:21:15,520 --> 00:21:21,610
follows it's like non sensitive block

460
00:21:18,700 --> 00:21:24,310
starts with a<font color="#E5E5E5"> zero and stores like part</font>

461
00:21:21,610 --> 00:21:27,179
<font color="#E5E5E5">of the ciphertext</font><font color="#CCCCCC"> it's sensitive like</font><font color="#E5E5E5"> a</font>

462
00:21:24,310 --> 00:21:30,610
block starts with a bit<font color="#CCCCCC"> one and stores</font>

463
00:21:27,180 --> 00:21:32,860
<font color="#CCCCCC">the index</font><font color="#E5E5E5"> of the beat together</font><font color="#CCCCCC"> with a</font>

464
00:21:30,610 --> 00:21:40,350
bit so an<font color="#CCCCCC"> example for such a block would</font>

465
00:21:32,860 --> 00:21:40,350
be<font color="#E5E5E5"> like</font><font color="#CCCCCC"> one five and</font><font color="#E5E5E5"> a fifth bit of</font><font color="#CCCCCC"> Z</font>

466
00:21:40,440 --> 00:21:48,460
<font color="#E5E5E5">and we can prove security using similar</font>

467
00:21:43,120 --> 00:21:50,620
arguments as before so to conclude

468
00:21:48,460 --> 00:21:51,910
we<font color="#CCCCCC"> propose a stronger notion which is</font>

469
00:21:50,620 --> 00:21:54,669
<font color="#E5E5E5">like no malleable codes with</font>

470
00:21:51,910 --> 00:21:59,830
manipulation detection which we believe

471
00:21:54,670 --> 00:22:01,210
it might like gives us like applications

472
00:21:59,830 --> 00:22:03,669
of the primitive beyond<font color="#E5E5E5"> tamper</font>

473
00:22:01,210 --> 00:22:07,000
resilience<font color="#E5E5E5"> like for secure communication</font>

474
00:22:03,670 --> 00:22:10,950
or like<font color="#E5E5E5"> anything like an</font><font color="#CCCCCC"> application</font>

475
00:22:07,000 --> 00:22:13,270
which you<font color="#CCCCCC"> require some</font><font color="#E5E5E5"> sort of like</font>

476
00:22:10,950 --> 00:22:17,290
detection if like the attacker has

477
00:22:13,270 --> 00:22:20,710
modified the original<font color="#CCCCCC"> message or not</font><font color="#E5E5E5"> we</font>

478
00:22:17,290 --> 00:22:22,870
we have official constructions for this

479
00:22:20,710 --> 00:22:26,580
notion<font color="#E5E5E5"> for the class of partial</font>

480
00:22:22,870 --> 00:22:31,239
functions constructions<font color="#CCCCCC"> that are like</font>

481
00:22:26,580 --> 00:22:33,100
they can<font color="#E5E5E5"> be all like implemented and we</font>

482
00:22:31,240 --> 00:22:35,590
also<font color="#E5E5E5"> propose several applications like</font>

483
00:22:33,100 --> 00:22:39,580
<font color="#CCCCCC">in Taba rezulin</font><font color="#E5E5E5"> cryptography for</font><font color="#CCCCCC"> boolean</font>

484
00:22:35,590 --> 00:22:41,709
and<font color="#CCCCCC"> arithmetic circuits and for secure</font>

485
00:22:39,580 --> 00:22:45,040
communication over adversarial channels

486
00:22:41,710 --> 00:22:46,960
<font color="#E5E5E5">and of course the</font><font color="#CCCCCC"> application like</font><font color="#E5E5E5"> that</font>

487
00:22:45,040 --> 00:22:51,360
comes all the applications<font color="#CCCCCC"> that</font><font color="#E5E5E5"> are like</font>

488
00:22:46,960 --> 00:22:51,360
come from all<font color="#E5E5E5"> or nothing transforms</font>

489
00:22:51,510 --> 00:22:58,540
<font color="#CCCCCC">thank you for listening and</font><font color="#E5E5E5"> I'm happy to</font>

490
00:22:56,110 --> 00:22:58,820
answer any questions<font color="#CCCCCC"> the papers</font><font color="#E5E5E5"> or new</font>

491
00:22:58,540 --> 00:23:02,079
things

492
00:22:58,820 --> 00:23:02,079
[Applause]

