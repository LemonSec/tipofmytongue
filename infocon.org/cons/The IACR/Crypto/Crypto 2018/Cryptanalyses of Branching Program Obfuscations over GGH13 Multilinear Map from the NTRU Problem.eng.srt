1
00:00:05,779 --> 00:00:11,430
<font color="#E5E5E5">okay so as it was said this is a male</font>

2
00:00:08,430 --> 00:00:14,190
<font color="#E5E5E5">shark but as to talk so we</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> going to</font>

3
00:00:11,430 --> 00:00:15,090
present you<font color="#E5E5E5"> two attacks against</font>

4
00:00:14,190 --> 00:00:17,100
<font color="#CCCCCC">obfuscated House</font>

5
00:00:15,090 --> 00:00:19,400
grunting<font color="#CCCCCC"> forum of mosquitoes and</font><font color="#E5E5E5"> as the</font>

6
00:00:17,100 --> 00:00:23,190
two talks are<font color="#CCCCCC"> very similar</font>

7
00:00:19,400 --> 00:00:25,799
sorry<font color="#E5E5E5"> articles share to attack the same</font>

8
00:00:23,190 --> 00:00:27,720
structure we<font color="#E5E5E5"> decided with</font><font color="#CCCCCC"> minke so I'm</font>

9
00:00:25,800 --> 00:00:29,490
to<font color="#CCCCCC"> chair the Turks I'm going to do the</font>

10
00:00:27,720 --> 00:00:31,619
<font color="#E5E5E5">introduction and then</font><font color="#CCCCCC"> we're going</font><font color="#E5E5E5"> to do</font>

11
00:00:29,490 --> 00:00:35,579
more<font color="#CCCCCC"> into the</font><font color="#E5E5E5"> details so there is only</font>

12
00:00:31,619 --> 00:00:37,170
one<font color="#CCCCCC"> torque so let's start with what is</font>

13
00:00:35,579 --> 00:00:40,860
<font color="#CCCCCC">this talk about so what</font><font color="#E5E5E5"> you are going to</font>

14
00:00:37,170 --> 00:00:43,620
present you two attacks<font color="#E5E5E5"> against some</font>

15
00:00:40,860 --> 00:00:45,300
candidate branching program when they

16
00:00:43,620 --> 00:00:48,089
are built upon<font color="#CCCCCC"> the</font><font color="#E5E5E5"> G th certain</font>

17
00:00:45,300 --> 00:00:49,410
multi-layer map<font color="#E5E5E5"> and so there are partial</font>

18
00:00:48,090 --> 00:00:51,870
attack in the sense that the<font color="#CCCCCC"> first</font>

19
00:00:49,410 --> 00:00:54,480
attack works only for a specific set<font color="#E5E5E5"> of</font>

20
00:00:51,870 --> 00:00:58,980
parameters and the second attack works

21
00:00:54,480 --> 00:01:01,739
<font color="#CCCCCC">on in the quantum</font><font color="#E5E5E5"> city so as</font><font color="#CCCCCC"> such the</font>

22
00:00:58,980 --> 00:01:04,619
two attacks have as I<font color="#E5E5E5"> stated similar</font>

23
00:01:01,739 --> 00:01:07,200
structure where we<font color="#E5E5E5"> both use weaknesses</font>

24
00:01:04,619 --> 00:01:10,590
<font color="#E5E5E5">of the</font><font color="#CCCCCC"> underlining gg8</font><font color="#E5E5E5"> certain</font><font color="#CCCCCC"> media map</font>

25
00:01:07,200 --> 00:01:14,850
to construct<font color="#E5E5E5"> concrete attacks against</font>

26
00:01:10,590 --> 00:01:16,709
the candidate of<font color="#E5E5E5"> mosquitoes so let me</font>

27
00:01:14,850 --> 00:01:20,548
start<font color="#CCCCCC"> by defining</font><font color="#E5E5E5"> what is an obfuscation</font>

28
00:01:16,709 --> 00:01:23,639
scheme so from a functionality point<font color="#E5E5E5"> of</font>

29
00:01:20,549 --> 00:01:25,649
view and a biscuit<font color="#CCCCCC"> ax is simply an</font>

30
00:01:23,639 --> 00:01:28,889
efficient<font color="#CCCCCC"> and efficiently computable</font>

31
00:01:25,649 --> 00:01:30,539
function<font color="#E5E5E5"> transforming a circuit into an</font>

32
00:01:28,889 --> 00:01:31,920
equivalent<font color="#CCCCCC"> circuit that means</font><font color="#E5E5E5"> the</font>

33
00:01:30,539 --> 00:01:35,130
<font color="#E5E5E5">circuits</font><font color="#CCCCCC"> that compute the same function</font>

34
00:01:31,920 --> 00:01:36,749
as a first circuit and in this circuit

35
00:01:35,130 --> 00:01:38,670
will be interested in a<font color="#CCCCCC"> physical for the</font>

36
00:01:36,749 --> 00:01:41,969
class of all<font color="#CCCCCC"> polynomial size</font><font color="#E5E5E5"> circuits</font>

37
00:01:38,670 --> 00:01:44,670
are all parameters<font color="#E5E5E5"> branching program but</font>

38
00:01:41,969 --> 00:01:47,639
I'm going<font color="#E5E5E5"> to define</font><font color="#CCCCCC"> what it is later and</font>

39
00:01:44,670 --> 00:01:50,849
so that's for<font color="#E5E5E5"> functionality</font><font color="#CCCCCC"> of a</font>

40
00:01:47,639 --> 00:01:52,919
branching program and what<font color="#CCCCCC"> are the</font>

41
00:01:50,849 --> 00:01:57,209
security<font color="#CCCCCC"> requirements so the more</font>

42
00:01:52,919 --> 00:02:00,658
natural<font color="#CCCCCC"> definition we would like it's</font>

43
00:01:57,209 --> 00:02:02,880
called virtual<font color="#CCCCCC"> black box BBB and it</font>

44
00:02:00,659 --> 00:02:06,029
basically require that<font color="#CCCCCC"> your pisghetti</font>

45
00:02:02,880 --> 00:02:09,690
program should reveal nothing<font color="#E5E5E5"> about the</font>

46
00:02:06,029 --> 00:02:12,120
initial<font color="#E5E5E5"> circuit except</font><font color="#CCCCCC"> its</font><font color="#E5E5E5"> input-output</font>

47
00:02:09,690 --> 00:02:15,329
behavior so we want the obfuscated

48
00:02:12,120 --> 00:02:16,370
<font color="#E5E5E5">program to act as a black box the</font>

49
00:02:15,330 --> 00:02:17,840
program that

50
00:02:16,370 --> 00:02:20,360
it has been<font color="#E5E5E5"> shown to be impossible to</font>

51
00:02:17,840 --> 00:02:24,319
<font color="#E5E5E5">achieve</font><font color="#CCCCCC"> so that's a result</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> barakato</font>

52
00:02:20,360 --> 00:02:26,930
<font color="#E5E5E5">in 2001</font><font color="#CCCCCC"> and so in the same article they</font>

53
00:02:24,319 --> 00:02:28,730
also proposed a new security definition

54
00:02:26,930 --> 00:02:32,450
which<font color="#E5E5E5"> is called indistinguishability</font>

55
00:02:28,730 --> 00:02:34,518
application<font color="#E5E5E5"> and so this definition just</font>

56
00:02:32,450 --> 00:02:36,560
require that for<font color="#E5E5E5"> any two equivalent</font>

57
00:02:34,519 --> 00:02:39,950
<font color="#E5E5E5">circuits so</font><font color="#CCCCCC"> circuits that compute the</font>

58
00:02:36,560 --> 00:02:41,599
same function we want<font color="#E5E5E5"> that the</font>

59
00:02:39,950 --> 00:02:45,200
obfuscated version of the two circuits

60
00:02:41,599 --> 00:02:48,048
<font color="#E5E5E5">are computationally indistinguishable so</font>

61
00:02:45,200 --> 00:02:50,119
all the<font color="#E5E5E5"> obfuscator</font><font color="#CCCCCC"> are going to describe</font>

62
00:02:48,049 --> 00:02:54,709
<font color="#E5E5E5">in this</font><font color="#CCCCCC"> circuit in this</font><font color="#E5E5E5"> candidate</font>

63
00:02:50,120 --> 00:02:59,799
indistinguishability of mosquitoes so

64
00:02:54,709 --> 00:03:02,450
this second<font color="#E5E5E5"> definition may seem a bit a</font>

65
00:02:59,799 --> 00:03:05,629
bit strange because<font color="#E5E5E5"> what we really</font><font color="#CCCCCC"> want</font>

66
00:03:02,450 --> 00:03:08,179
is that the obfuscated<font color="#E5E5E5"> program hides the</font>

67
00:03:05,629 --> 00:03:09,798
<font color="#E5E5E5">circuits but it still has a lot of</font>

68
00:03:08,180 --> 00:03:11,720
application<font color="#E5E5E5"> to cryptographic</font>

69
00:03:09,799 --> 00:03:13,519
<font color="#CCCCCC">constructions so functional encryption</font>

70
00:03:11,720 --> 00:03:19,129
for instance<font color="#E5E5E5"> but also a lot of other</font>

71
00:03:13,519 --> 00:03:21,709
<font color="#CCCCCC">applications</font><font color="#E5E5E5"> okay so the fact is</font><font color="#CCCCCC"> that</font>

72
00:03:19,129 --> 00:03:24,828
almost all<font color="#CCCCCC"> candidate obfuscators we</font>

73
00:03:21,709 --> 00:03:28,130
currently have relied on cryptographic

74
00:03:24,829 --> 00:03:30,980
<font color="#CCCCCC">limit in our</font><font color="#E5E5E5"> maps</font><font color="#CCCCCC"> and we have a</font><font color="#E5E5E5"> mystery</font>

75
00:03:28,130 --> 00:03:37,870
main candidate cryptographic<font color="#CCCCCC"> in our maps</font>

76
00:03:30,980 --> 00:03:40,399
which are<font color="#CCCCCC"> DG 8 13 13</font><font color="#E5E5E5"> and GD</font><font color="#CCCCCC"> age 15 the</font>

77
00:03:37,870 --> 00:03:41,900
<font color="#CCCCCC">problem is</font><font color="#E5E5E5"> that all this reckoned with</font>

78
00:03:40,400 --> 00:03:44,629
as much<font color="#E5E5E5"> in a map</font><font color="#CCCCCC"> i've been shown to</font>

79
00:03:41,900 --> 00:03:47,690
suffer from weaknesses basically because

80
00:03:44,629 --> 00:03:49,370
of<font color="#E5E5E5"> the encoding of</font><font color="#CCCCCC"> zeros and so these</font>

81
00:03:47,690 --> 00:03:51,530
witnesses of the<font color="#CCCCCC"> melting amethyst does</font>

82
00:03:49,370 --> 00:03:55,879
<font color="#E5E5E5">not directly implies attack</font>

83
00:03:51,530 --> 00:03:57,620
<font color="#E5E5E5">interpreters using it but still so all</font>

84
00:03:55,879 --> 00:03:59,298
the attacks we have uncounted eight of

85
00:03:57,620 --> 00:04:03,440
the skaters<font color="#CCCCCC"> realize and the</font><font color="#E5E5E5"> weaknesses</font>

86
00:03:59,299 --> 00:04:06,169
of<font color="#E5E5E5"> the media maps and so in this talk we</font>

87
00:04:03,440 --> 00:04:09,290
are going<font color="#E5E5E5"> to use weaknesses of the</font><font color="#CCCCCC"> G th</font>

88
00:04:06,169 --> 00:04:11,180
certain map<font color="#E5E5E5"> to attack the</font><font color="#CCCCCC"> obfuscated</font>

89
00:04:09,290 --> 00:04:15,310
<font color="#CCCCCC">also we</font><font color="#E5E5E5"> will consider only a biscuit are</font>

90
00:04:11,180 --> 00:04:15,310
built upon<font color="#E5E5E5"> to DJ certain map</font>

91
00:04:17,040 --> 00:04:22,450
<font color="#CCCCCC">okay so let me</font><font color="#E5E5E5"> give you a bit of history</font>

92
00:04:20,140 --> 00:04:28,479
of obfuscators<font color="#E5E5E5"> candidate branching</font>

93
00:04:22,450 --> 00:04:31,840
program<font color="#CCCCCC"> officiator and some attacks so</font>

94
00:04:28,480 --> 00:04:33,850
in this history we focus on branching

95
00:04:31,840 --> 00:04:36,539
<font color="#CCCCCC">program appreciators</font><font color="#E5E5E5"> so there are other</font>

96
00:04:33,850 --> 00:04:39,970
candidate of<font color="#CCCCCC"> mosquitoes</font><font color="#E5E5E5"> which are not</font>

97
00:04:36,540 --> 00:04:41,470
<font color="#CCCCCC">venturing program</font><font color="#E5E5E5"> ones but we will focus</font>

98
00:04:39,970 --> 00:04:44,530
in<font color="#E5E5E5"> this torque interpreting program of</font>

99
00:04:41,470 --> 00:04:48,670
mosquitoes<font color="#E5E5E5"> so the first candidate of</font>

100
00:04:44,530 --> 00:04:51,159
<font color="#E5E5E5">this</font><font color="#CCCCCC"> Gator was proposed in 2013 and it</font>

101
00:04:48,670 --> 00:04:54,670
was<font color="#CCCCCC"> a</font><font color="#E5E5E5"> branching program of mosquito but</font>

102
00:04:51,160 --> 00:04:57,430
so it<font color="#CCCCCC"> also</font><font color="#E5E5E5"> candidates we have no</font>

103
00:04:54,670 --> 00:04:59,950
security proof and this one<font color="#E5E5E5"> so didn't</font>

104
00:04:57,430 --> 00:05:01,420
have<font color="#E5E5E5"> any any security proof so after</font>

105
00:04:59,950 --> 00:05:05,039
this candidate was proposed other

106
00:05:01,420 --> 00:05:08,910
candidates have<font color="#CCCCCC"> been proposed also lot</font>

107
00:05:05,040 --> 00:05:12,280
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> not exhaustive I don't think so</font>

108
00:05:08,910 --> 00:05:14,890
but<font color="#E5E5E5"> they try to prove security of this</font>

109
00:05:12,280 --> 00:05:17,320
<font color="#E5E5E5">Gator in some idealized model so</font><font color="#CCCCCC"> where</font>

110
00:05:14,890 --> 00:05:22,870
<font color="#CCCCCC">the underlying</font><font color="#E5E5E5"> multi Namib is supposed</font>

111
00:05:17,320 --> 00:05:26,710
to be<font color="#E5E5E5"> somehow either so in 2013 there</font>

112
00:05:22,870 --> 00:05:29,530
was a first attack against so old<font color="#CCCCCC"> you're</font>

113
00:05:26,710 --> 00:05:33,969
please get off previously<font color="#CCCCCC"> mansion</font><font color="#E5E5E5"> except</font>

114
00:05:29,530 --> 00:05:36,119
the first<font color="#E5E5E5"> one so by</font><font color="#CCCCCC"> mile</font><font color="#E5E5E5"> science in 1916</font>

115
00:05:33,970 --> 00:05:38,860
in<font color="#CCCCCC"> 2016 sorry</font>

116
00:05:36,120 --> 00:05:41,710
so which relied on the fact<font color="#E5E5E5"> that the G</font>

117
00:05:38,860 --> 00:05:44,950
th map was<font color="#CCCCCC"> not ideal so they were able</font>

118
00:05:41,710 --> 00:05:47,739
to<font color="#E5E5E5"> attack</font><font color="#CCCCCC"> home to</font><font color="#E5E5E5"> visitors except the</font>

119
00:05:44,950 --> 00:05:49,479
<font color="#CCCCCC">processor</font><font color="#E5E5E5"> so after all this attack was</font>

120
00:05:47,740 --> 00:05:52,000
proposed a new candidate<font color="#CCCCCC"> had been</font>

121
00:05:49,479 --> 00:05:55,810
proposed in a weaker model so<font color="#E5E5E5"> this model</font>

122
00:05:52,000 --> 00:05:57,640
captures the attack and so we cannot

123
00:05:55,810 --> 00:06:01,450
extend the attack to attack<font color="#CCCCCC"> this new</font>

124
00:05:57,640 --> 00:06:04,539
<font color="#E5E5E5">applicator and so more recently there</font>

125
00:06:01,450 --> 00:06:07,719
was a new attack by change and healthy

126
00:06:04,540 --> 00:06:10,390
and<font color="#E5E5E5"> the first candidate obfuscator which</font>

127
00:06:07,720 --> 00:06:14,380
works<font color="#E5E5E5"> only for specific type of inputs</font>

128
00:06:10,390 --> 00:06:17,380
and there was<font color="#CCCCCC"> concern with your proposed</font>

129
00:06:14,380 --> 00:06:20,860
a bit later to<font color="#CCCCCC"> try</font><font color="#E5E5E5"> to prevent this</font>

130
00:06:17,380 --> 00:06:24,580
attack<font color="#CCCCCC"> okay so let me sum this up</font><font color="#E5E5E5"> in a</font>

131
00:06:20,860 --> 00:06:27,020
big table so the first two lines of<font color="#CCCCCC"> the</font>

132
00:06:24,580 --> 00:06:30,659
tables are the<font color="#E5E5E5"> two attacks I already man</font>

133
00:06:27,020 --> 00:06:32,310
so in this<font color="#E5E5E5"> table we also mentioned some</font>

134
00:06:30,660 --> 00:06:36,419
circuits<font color="#E5E5E5"> obfuscator but we are not going</font>

135
00:06:32,310 --> 00:06:38,190
to<font color="#E5E5E5"> speak of them later in the talk</font><font color="#CCCCCC"> and</font>

136
00:06:36,419 --> 00:06:40,289
<font color="#E5E5E5">so what we are going to describe</font><font color="#CCCCCC"> you are</font>

137
00:06:38,190 --> 00:06:44,069
the two last lines of the table the two

138
00:06:40,289 --> 00:06:46,740
attacks in<font color="#CCCCCC"> the last lines</font><font color="#E5E5E5"> so the first</font>

139
00:06:44,069 --> 00:06:50,610
attack works against all<font color="#E5E5E5"> branching</font>

140
00:06:46,740 --> 00:06:53,400
program of<font color="#E5E5E5"> mosquitoes</font><font color="#CCCCCC"> in particular it</font>

141
00:06:50,610 --> 00:06:55,560
works for<font color="#CCCCCC"> GM</font><font color="#E5E5E5"> m plus of guitar which was</font>

142
00:06:53,400 --> 00:06:57,900
<font color="#E5E5E5">not attacked previously but it works</font>

143
00:06:55,560 --> 00:07:00,990
<font color="#E5E5E5">only in a specific regime of parameters</font>

144
00:06:57,900 --> 00:07:02,729
<font color="#E5E5E5">and</font><font color="#CCCCCC"> several</font><font color="#E5E5E5"> attack works only for the</font>

145
00:07:00,990 --> 00:07:05,550
more recent branching program of his

146
00:07:02,729 --> 00:07:12,180
guitars<font color="#E5E5E5"> and for surface guitars but</font>

147
00:07:05,550 --> 00:07:15,660
again it's an e in the quantum city<font color="#CCCCCC"> okay</font>

148
00:07:12,180 --> 00:07:19,949
so that's what we are going to<font color="#CCCCCC"> describe</font>

149
00:07:15,660 --> 00:07:24,509
in this talk<font color="#CCCCCC"> so in order to</font><font color="#E5E5E5"> describe the</font>

150
00:07:19,949 --> 00:07:28,530
<font color="#CCCCCC">to attack</font><font color="#E5E5E5"> let me first describe so give</font>

151
00:07:24,509 --> 00:07:30,120
you<font color="#E5E5E5"> a simplified explanation</font><font color="#CCCCCC"> of how is</font>

152
00:07:28,530 --> 00:07:31,530
the obfuscated<font color="#E5E5E5"> artwork so we are going</font>

153
00:07:30,120 --> 00:07:34,889
<font color="#E5E5E5">to focus on the branching program of</font>

154
00:07:31,530 --> 00:07:37,530
mosquitoes<font color="#E5E5E5"> and they are very similar in</font>

155
00:07:34,889 --> 00:07:40,530
<font color="#E5E5E5">structure so I'm going to define</font><font color="#CCCCCC"> a very</font>

156
00:07:37,530 --> 00:07:41,880
simple of mosquitoes which captures so

157
00:07:40,530 --> 00:07:44,789
not all<font color="#E5E5E5"> of the branching program</font>

158
00:07:41,880 --> 00:07:48,000
<font color="#CCCCCC">officials but a</font><font color="#E5E5E5"> more recent</font><font color="#CCCCCC"> one and then</font>

159
00:07:44,789 --> 00:07:52,520
he is going<font color="#CCCCCC"> to describe you how the</font>

160
00:07:48,000 --> 00:07:54,960
attack works<font color="#E5E5E5"> and this simple fiscal</font><font color="#CCCCCC"> talk</font>

161
00:07:52,520 --> 00:07:56,580
<font color="#CCCCCC">ok so because we</font><font color="#E5E5E5"> are going to speak of</font>

162
00:07:54,960 --> 00:07:58,820
<font color="#E5E5E5">branching</font><font color="#CCCCCC"> programming theater let me</font>

163
00:07:56,580 --> 00:08:03,508
first define<font color="#CCCCCC"> what is a branching program</font>

164
00:07:58,820 --> 00:08:07,349
so it's simply a way<font color="#CCCCCC"> of representing</font><font color="#E5E5E5"> and</font>

165
00:08:03,509 --> 00:08:08,449
computing a function<font color="#E5E5E5"> and so how does it</font>

166
00:08:07,349 --> 00:08:16,020
<font color="#E5E5E5">work</font>

167
00:08:08,449 --> 00:08:18,120
we we have a<font color="#E5E5E5"> collection of matrices so</font>

168
00:08:16,020 --> 00:08:19,770
let<font color="#E5E5E5"> me show you in the example so a</font>

169
00:08:18,120 --> 00:08:22,650
branching program consists of a

170
00:08:19,770 --> 00:08:25,979
collection<font color="#CCCCCC"> of 2l</font><font color="#E5E5E5"> mattresses so in my</font>

171
00:08:22,650 --> 00:08:28,830
example<font color="#CCCCCC"> L is 6</font><font color="#E5E5E5"> we have</font><font color="#CCCCCC"> also two vectors</font>

172
00:08:25,979 --> 00:08:33,718
a0 and a7<font color="#E5E5E5"> and we have an input selection</font>

173
00:08:28,830 --> 00:08:38,169
function<font color="#E5E5E5"> which</font>

174
00:08:33,719 --> 00:08:42,399
which goes so the invitation function

175
00:08:38,169 --> 00:08:44,529
goes from<font color="#CCCCCC"> one</font><font color="#E5E5E5"> six so six is the</font><font color="#CCCCCC"> number</font>

176
00:08:42,399 --> 00:08:47,410
<font color="#CCCCCC">of pairs</font><font color="#E5E5E5"> of matrices in the branching</font>

177
00:08:44,529 --> 00:08:50,680
program<font color="#CCCCCC"> in two</font><font color="#E5E5E5"> one three or</font><font color="#CCCCCC"> three bits</font>

178
00:08:47,410 --> 00:08:52,750
length of the<font color="#CCCCCC"> input and so how do</font><font color="#E5E5E5"> we</font>

179
00:08:50,680 --> 00:08:57,069
evaluate<font color="#E5E5E5"> so let me show you a we</font>

180
00:08:52,750 --> 00:09:00,129
evaluate sorry<font color="#E5E5E5"> the branching program</font><font color="#CCCCCC"> and</font>

181
00:08:57,069 --> 00:09:03,519
<font color="#E5E5E5">this input X so we're going to</font><font color="#CCCCCC"> multiply</font>

182
00:09:00,129 --> 00:09:06,329
the matrices and pick only one<font color="#E5E5E5"> matrix</font>

183
00:09:03,519 --> 00:09:08,740
<font color="#CCCCCC">Baccarin</font><font color="#E5E5E5"> so do we choose it we first</font>

184
00:09:06,329 --> 00:09:11,529
pick a<font color="#CCCCCC"> zero</font><font color="#E5E5E5"> because there</font><font color="#CCCCCC"> is no choice</font>

185
00:09:08,740 --> 00:09:14,529
<font color="#E5E5E5">then for the first column we will look</font>

186
00:09:11,529 --> 00:09:17,529
at the input selection function<font color="#E5E5E5"> of 1</font>

187
00:09:14,529 --> 00:09:20,050
which<font color="#CCCCCC"> is 1 so we are going</font><font color="#E5E5E5"> to look at</font>

188
00:09:17,529 --> 00:09:22,829
the first<font color="#E5E5E5"> bit effects</font><font color="#CCCCCC"> it's zero so we</font>

189
00:09:20,050 --> 00:09:25,930
<font color="#CCCCCC">are</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to pick the matrix with a</font><font color="#E5E5E5"> zero</font>

190
00:09:22,829 --> 00:09:28,899
yeah so this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> one we look at the first</font>

191
00:09:25,930 --> 00:09:32,229
bit and we do the<font color="#E5E5E5"> same</font><font color="#CCCCCC"> for the second</font>

192
00:09:28,899 --> 00:09:34,689
<font color="#E5E5E5">current so in of two is one again so</font><font color="#CCCCCC"> we</font>

193
00:09:32,230 --> 00:09:37,329
look at<font color="#E5E5E5"> the first bit</font><font color="#CCCCCC"> effects it's still</font>

194
00:09:34,689 --> 00:09:40,719
<font color="#E5E5E5">zero</font><font color="#CCCCCC"> so we pick the</font><font color="#E5E5E5"> matrix with a zero</font>

195
00:09:37,329 --> 00:09:42,279
<font color="#E5E5E5">for the third one</font><font color="#CCCCCC"> it's a one so we pick</font>

196
00:09:40,720 --> 00:09:45,279
<font color="#CCCCCC">the matrix with the one exit rights</font><font color="#E5E5E5"> at</font>

197
00:09:42,279 --> 00:09:48,130
<font color="#E5E5E5">all</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> so we</font><font color="#CCCCCC"> multiply all these</font>

198
00:09:45,279 --> 00:09:50,680
<font color="#CCCCCC">matrices and we obtain something</font><font color="#E5E5E5"> which</font>

199
00:09:48,130 --> 00:09:52,089
is<font color="#E5E5E5"> either 0 in which case we says it's</font>

200
00:09:50,680 --> 00:09:53,500
<font color="#E5E5E5">your put of the branching program is</font><font color="#CCCCCC"> 0</font>

201
00:09:52,089 --> 00:09:56,050
or<font color="#CCCCCC"> 1</font>

202
00:09:53,500 --> 00:09:57,850
no sorry none zero<font color="#CCCCCC"> and in which</font><font color="#E5E5E5"> case we</font>

203
00:09:56,050 --> 00:10:03,359
say that<font color="#E5E5E5"> I put of the branching program</font>

204
00:09:57,850 --> 00:10:03,360
is<font color="#CCCCCC"> 1 so this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> it for</font><font color="#E5E5E5"> branching program</font>

205
00:10:03,630 --> 00:10:09,819
so let<font color="#E5E5E5"> me give you a brief</font><font color="#CCCCCC"> definition of</font>

206
00:10:08,230 --> 00:10:13,019
what is a cryptographic module in<font color="#E5E5E5"> our</font>

207
00:10:09,819 --> 00:10:16,209
map so cryptographic mutant our map is

208
00:10:13,019 --> 00:10:18,279
<font color="#CCCCCC">indexed</font><font color="#E5E5E5"> but is so there is some</font>

209
00:10:16,209 --> 00:10:20,170
parameter<font color="#E5E5E5"> Kappa which will denote the</font>

210
00:10:18,279 --> 00:10:23,110
maximum<font color="#E5E5E5"> level of them</font><font color="#CCCCCC"> reading and so we</font>

211
00:10:20,170 --> 00:10:27,670
will<font color="#E5E5E5"> have encoding with levels from 0 to</font>

212
00:10:23,110 --> 00:10:30,459
Kappa<font color="#E5E5E5"> and we want three public</font>

213
00:10:27,670 --> 00:10:33,189
procedures to<font color="#E5E5E5"> be available</font><font color="#CCCCCC"> and these</font>

214
00:10:30,459 --> 00:10:35,680
<font color="#E5E5E5">ingredients we want to be able</font><font color="#CCCCCC"> to add</font><font color="#E5E5E5"> to</font>

215
00:10:33,189 --> 00:10:38,699
<font color="#CCCCCC">encode things</font><font color="#E5E5E5"> at the same level and get</font>

216
00:10:35,680 --> 00:10:41,380
an encoding of<font color="#CCCCCC"> the Sun at the</font><font color="#E5E5E5"> same level</font>

217
00:10:38,699 --> 00:10:42,439
we want to be able<font color="#E5E5E5"> to multiply</font><font color="#CCCCCC"> through</font>

218
00:10:41,380 --> 00:10:44,810
<font color="#E5E5E5">on</font><font color="#CCCCCC"> cuttings</font>

219
00:10:42,440 --> 00:10:46,790
get an<font color="#CCCCCC"> inkling of the product</font><font color="#E5E5E5"> but whose</font>

220
00:10:44,810 --> 00:10:48,770
level is the sum of the two level<font color="#CCCCCC"> so</font>

221
00:10:46,790 --> 00:10:51,250
when we<font color="#CCCCCC"> multiply we add the levels and</font>

222
00:10:48,770 --> 00:10:53,660
when we add we keep the same<font color="#CCCCCC"> level</font><font color="#E5E5E5"> and</font>

223
00:10:51,250 --> 00:10:55,340
finally we want a public<font color="#E5E5E5"> zero test</font>

224
00:10:53,660 --> 00:10:56,750
procedure so we<font color="#E5E5E5"> want to be able</font><font color="#CCCCCC"> to</font>

225
00:10:55,340 --> 00:10:59,210
determine<font color="#CCCCCC"> without including at the</font>

226
00:10:56,750 --> 00:11:02,630
<font color="#E5E5E5">maximum level isn't including of zero</font>

227
00:10:59,210 --> 00:11:04,130
<font color="#E5E5E5">element so that's what it's a</font>

228
00:11:02,630 --> 00:11:06,530
<font color="#E5E5E5">functionality we would like</font><font color="#CCCCCC"> ferment in</font>

229
00:11:04,130 --> 00:11:09,290
<font color="#CCCCCC">our map</font><font color="#E5E5E5"> and mean he's going to describe</font>

230
00:11:06,530 --> 00:11:12,530
<font color="#E5E5E5">better how does the gdh map achieve this</font>

231
00:11:09,290 --> 00:11:15,410
functionality<font color="#E5E5E5"> but we just need that so</font>

232
00:11:12,530 --> 00:11:18,380
now I can<font color="#E5E5E5"> define I can present you the</font>

233
00:11:15,410 --> 00:11:21,800
simple obfuscator<font color="#E5E5E5"> so how does it work</font><font color="#CCCCCC"> it</font>

234
00:11:18,380 --> 00:11:24,920
takes as input a branching program then

235
00:11:21,800 --> 00:11:26,930
the first<font color="#CCCCCC"> type</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> first</font><font color="#E5E5E5"> step sorry will</font>

236
00:11:24,920 --> 00:11:28,550
be to randomize the branching program<font color="#E5E5E5"> so</font>

237
00:11:26,930 --> 00:11:32,239
there is<font color="#E5E5E5"> three main procedures to do</font>

238
00:11:28,550 --> 00:11:35,900
that the<font color="#E5E5E5"> first one is adding diagonal</font>

239
00:11:32,240 --> 00:11:37,880
<font color="#E5E5E5">block to the matrices but we put a block</font>

240
00:11:35,900 --> 00:11:40,310
of<font color="#CCCCCC"> zeros here so when we multiply</font>

241
00:11:37,880 --> 00:11:42,710
<font color="#CCCCCC">everything is</font><font color="#E5E5E5"> a big blocks gets</font><font color="#CCCCCC"> canceled</font>

242
00:11:40,310 --> 00:11:46,130
out<font color="#E5E5E5"> and so it's</font><font color="#CCCCCC"> just the a block that</font>

243
00:11:42,710 --> 00:11:47,870
remains the second randomization

244
00:11:46,130 --> 00:11:50,810
technique is multiplying by random

245
00:11:47,870 --> 00:11:53,420
matrices<font color="#E5E5E5"> but in such a way that when we</font>

246
00:11:50,810 --> 00:11:56,449
<font color="#E5E5E5">multiply something</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> one will become</font>

247
00:11:53,420 --> 00:11:58,969
self by r1 minus<font color="#CCCCCC"> 1 R 2 by R minus</font><font color="#E5E5E5"> 1 etc</font>

248
00:11:56,450 --> 00:12:02,920
<font color="#E5E5E5">and so at the end we</font><font color="#CCCCCC"> still get a</font><font color="#E5E5E5"> product</font>

249
00:11:58,970 --> 00:12:05,240
of the a matrices<font color="#CCCCCC"> and finally the last</font>

250
00:12:02,920 --> 00:12:07,880
possibilities is to multiply everything

251
00:12:05,240 --> 00:12:09,170
by random<font color="#CCCCCC"> scales because</font><font color="#E5E5E5"> at the end we</font>

252
00:12:07,880 --> 00:12:11,090
<font color="#CCCCCC">only</font><font color="#E5E5E5"> need to check whether something</font><font color="#CCCCCC"> is</font>

253
00:12:09,170 --> 00:12:13,189
<font color="#E5E5E5">zero or nonzero so if we</font><font color="#CCCCCC"> multiply by</font>

254
00:12:11,090 --> 00:12:17,740
random<font color="#E5E5E5"> nonzero scoffs there is no</font>

255
00:12:13,190 --> 00:12:20,300
<font color="#E5E5E5">problem so</font><font color="#CCCCCC"> you have these three</font>

256
00:12:17,740 --> 00:12:22,520
<font color="#E5E5E5">randomization techniques you can pick</font>

257
00:12:20,300 --> 00:12:25,280
any subset of them and you will get

258
00:12:22,520 --> 00:12:27,350
different of the<font color="#E5E5E5"> scales but basically</font>

259
00:12:25,280 --> 00:12:29,660
all<font color="#CCCCCC"> GOP skaters the branching program of</font>

260
00:12:27,350 --> 00:12:31,610
the skaters use some subset of<font color="#CCCCCC"> this</font>

261
00:12:29,660 --> 00:12:34,510
randomization techniques and then we

262
00:12:31,610 --> 00:12:37,010
just<font color="#E5E5E5"> anchored all so sorry so we get</font>

263
00:12:34,510 --> 00:12:40,310
18-day which has a randomized matrices

264
00:12:37,010 --> 00:12:43,700
<font color="#E5E5E5">and we just anchored them using multi</font>

265
00:12:40,310 --> 00:12:45,680
<font color="#CCCCCC">namib</font><font color="#E5E5E5"> and so because it's</font><font color="#CCCCCC"> emily a</font><font color="#E5E5E5"> map we</font>

266
00:12:43,700 --> 00:12:47,900
can<font color="#E5E5E5"> multiply</font><font color="#CCCCCC"> the encoding we get an</font>

267
00:12:45,680 --> 00:12:50,989
encoding at maximum<font color="#CCCCCC"> libel and</font><font color="#E5E5E5"> we can</font>

268
00:12:47,900 --> 00:12:53,680
test<font color="#E5E5E5"> whether it's</font><font color="#CCCCCC"> zero on it so that's</font>

269
00:12:50,990 --> 00:12:56,130
<font color="#E5E5E5">this encoding is out the</font><font color="#CCCCCC"> output of</font><font color="#E5E5E5"> the</font>

270
00:12:53,680 --> 00:12:58,239
<font color="#E5E5E5">launching photo of the obfuscated</font>

271
00:12:56,130 --> 00:13:01,089
<font color="#E5E5E5">obfuscator so is that</font><font color="#CCCCCC"> the obfuscated</font>

272
00:12:58,240 --> 00:13:03,520
<font color="#CCCCCC">planting</font><font color="#E5E5E5"> program so that's all for</font><font color="#CCCCCC"> the</font>

273
00:13:01,089 --> 00:13:05,980
definition<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> simple</font><font color="#E5E5E5"> skater so I</font>

274
00:13:03,520 --> 00:13:09,550
hope it's<font color="#E5E5E5"> clear and so now Mickey is</font>

275
00:13:05,980 --> 00:13:11,850
going<font color="#E5E5E5"> to give you more details about the</font>

276
00:13:09,550 --> 00:13:11,849
attacks

277
00:13:19,150 --> 00:13:26,720
Thank You<font color="#CCCCCC"> Alyssa</font><font color="#E5E5E5"> now</font>

278
00:13:23,570 --> 00:13:28,580
we received on<font color="#CCCCCC"> gg starting working</font>

279
00:13:26,720 --> 00:13:33,110
<font color="#E5E5E5">immediately</font><font color="#CCCCCC"> and then talk about the</font>

280
00:13:28,580 --> 00:13:35,180
<font color="#E5E5E5">contributions details and limits GG</font>

281
00:13:33,110 --> 00:13:37,730
certain<font color="#CCCCCC"> mode remap usually defined on</font>

282
00:13:35,180 --> 00:13:41,329
<font color="#E5E5E5">the</font><font color="#CCCCCC"> Linga text over X to the n</font><font color="#E5E5E5"> plus</font><font color="#CCCCCC"> 1</font>

283
00:13:37,730 --> 00:13:44,720
for a pulp to ensure<font color="#CCCCCC"> N and it takes the</font>

284
00:13:41,330 --> 00:13:48,950
plain text paste P which is the<font color="#CCCCCC"> quote</font>

285
00:13:44,720 --> 00:13:52,030
<font color="#CCCCCC">out over the ideology for</font><font color="#E5E5E5"> all small</font><font color="#CCCCCC"> and</font>

286
00:13:48,950 --> 00:13:55,190
<font color="#CCCCCC">elements G in her here small means that</font>

287
00:13:52,030 --> 00:14:01,459
she is<font color="#E5E5E5"> every every coefficient of G</font>

288
00:13:55,190 --> 00:14:06,710
sufficiently small and<font color="#CCCCCC"> it's it's it's</font>

289
00:14:01,460 --> 00:14:10,700
it's<font color="#E5E5E5"> that work</font><font color="#CCCCCC"> our work its including</font>

290
00:14:06,710 --> 00:14:13,640
spaces IQ which is<font color="#E5E5E5"> equal to</font><font color="#CCCCCC"> R / qi for a</font>

291
00:14:10,700 --> 00:14:15,830
large integer<font color="#CCCCCC"> kill</font><font color="#E5E5E5"> and usually like</font>

292
00:14:13,640 --> 00:14:22,550
<font color="#E5E5E5">express acute to denote the leper the</font>

293
00:14:15,830 --> 00:14:24,350
representative of<font color="#CCCCCC"> x in r q2 initial CJ</font>

294
00:14:22,550 --> 00:14:26,630
certain<font color="#CCCCCC"> martini ahmet vicious</font>

295
00:14:24,350 --> 00:14:31,190
temperature tenets which have a<font color="#CCCCCC"> happy</font>

296
00:14:26,630 --> 00:14:34,189
<font color="#CCCCCC">disguise of q</font><font color="#E5E5E5"> and on encoding of a</font><font color="#CCCCCC"> at</font>

297
00:14:31,190 --> 00:14:37,130
level<font color="#CCCCCC"> is defined by a plus RG</font><font color="#E5E5E5"> over said</font>

298
00:14:34,190 --> 00:14:41,839
to the I here R is also small element

299
00:14:37,130 --> 00:14:43,610
<font color="#E5E5E5">inner in the Ling are then is that it it</font>

300
00:14:41,839 --> 00:14:45,470
is easy to verify<font color="#E5E5E5"> that that it is</font>

301
00:14:43,610 --> 00:14:48,020
satisfies the addition<font color="#E5E5E5"> and</font>

302
00:14:45,470 --> 00:14:52,640
multiplication condition of the<font color="#E5E5E5"> Virginia</font>

303
00:14:48,020 --> 00:14:54,350
<font color="#CCCCCC">map and to check the sir testing</font><font color="#E5E5E5"> issue</font>

304
00:14:52,640 --> 00:14:59,180
define a thorough testing parameter

305
00:14:54,350 --> 00:15:01,970
which is<font color="#E5E5E5"> equal</font><font color="#CCCCCC"> to some failure and the</font>

306
00:14:59,180 --> 00:15:04,819
despite the following property for<font color="#E5E5E5"> some</font>

307
00:15:01,970 --> 00:15:06,760
level including<font color="#CCCCCC"> yield to product of you</font>

308
00:15:04,820 --> 00:15:11,510
enter testing parameter

309
00:15:06,760 --> 00:15:17,050
modulus<font color="#CCCCCC"> q is small 10 the time level</font>

310
00:15:11,510 --> 00:15:17,050
including is indeed<font color="#E5E5E5"> including of</font><font color="#CCCCCC"> zero</font>

311
00:15:17,589 --> 00:15:23,360
now we are ready to<font color="#CCCCCC"> see the</font>

312
00:15:20,390 --> 00:15:25,780
contributions let's begin with<font color="#E5E5E5"> only</font>

313
00:15:23,360 --> 00:15:28,520
present<font color="#E5E5E5"> the praising the main idea</font>

314
00:15:25,780 --> 00:15:30,670
postal bar what explains the don't make

315
00:15:28,520 --> 00:15:33,430
<font color="#CCCCCC">missus no Gigi's dirty martini</font>

316
00:15:30,670 --> 00:15:37,930
into the<font color="#E5E5E5"> concrete or text for the</font>

317
00:15:33,430 --> 00:15:41,410
opposition cases<font color="#E5E5E5"> more concretely the</font>

318
00:15:37,930 --> 00:15:45,699
first attacks of<font color="#CCCCCC"> the spy</font><font color="#E5E5E5"> tongue Kim Lee</font>

319
00:15:41,410 --> 00:15:49,630
and me used our intro<font color="#E5E5E5"> tech previously</font>

320
00:15:45,700 --> 00:15:52,839
for the<font color="#E5E5E5"> suggested parameter of CJ 13 the</font>

321
00:15:49,630 --> 00:15:55,000
underlying entry problem is solvable in

322
00:15:52,839 --> 00:15:57,910
polynomial time<font color="#E5E5E5"> using Excel</font><font color="#CCCCCC"> filter</font><font color="#E5E5E5"> text</font>

323
00:15:55,000 --> 00:16:01,540
but this<font color="#CCCCCC"> enter uptick is nothing to a</font>

324
00:15:57,910 --> 00:16:06,089
concrete or type of<font color="#CCCCCC"> GG 13 in this work</font>

325
00:16:01,540 --> 00:16:06,089
<font color="#E5E5E5">we show that using intracerebral</font>

326
00:16:07,980 --> 00:16:12,700
printing<font color="#E5E5E5"> program of post occasions over</font>

327
00:16:10,120 --> 00:16:15,970
GG 13 can be<font color="#CCCCCC"> broken in polynomial time</font>

328
00:16:12,700 --> 00:16:19,029
and<font color="#CCCCCC"> the second attack</font><font color="#E5E5E5"> so this</font><font color="#CCCCCC"> pi</font>

329
00:16:15,970 --> 00:16:21,550
alehsalaam<font color="#CCCCCC"> re-used</font><font color="#E5E5E5"> are short which the</font>

330
00:16:19,029 --> 00:16:25,060
provider program purple which known to

331
00:16:21,550 --> 00:16:27,180
learn in contemporary<font color="#E5E5E5"> time in other</font><font color="#CCCCCC"> word</font>

332
00:16:25,060 --> 00:16:29,979
<font color="#E5E5E5">she showed that many</font><font color="#CCCCCC"> obfuscation and</font>

333
00:16:27,180 --> 00:16:37,089
circuit of<font color="#E5E5E5"> post occasions can be broken</font>

334
00:16:29,980 --> 00:16:40,750
in contemporary time now<font color="#CCCCCC"> we will see in</font>

335
00:16:37,089 --> 00:16:43,600
detail<font color="#E5E5E5"> let's consider tool everyone</font>

336
00:16:40,750 --> 00:16:45,910
including a 1 over G and<font color="#E5E5E5"> 800 G</font><font color="#CCCCCC"> then by</font>

337
00:16:43,600 --> 00:16:48,730
dividing them we can obtain a 1 over a 2

338
00:16:45,910 --> 00:16:50,949
which is done entering instance then

339
00:16:48,730 --> 00:16:55,170
thanks<font color="#CCCCCC"> to</font><font color="#E5E5E5"> this table field</font><font color="#CCCCCC"> optic we can</font>

340
00:16:50,949 --> 00:16:58,810
obtain a GI even and she<font color="#CCCCCC"> too</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> dalinar</font>

341
00:16:55,170 --> 00:17:01,660
<font color="#CCCCCC">murabba for the other including</font><font color="#E5E5E5"> a 3 over</font>

342
00:16:58,810 --> 00:17:04,089
<font color="#CCCCCC">G we can compute</font><font color="#E5E5E5"> she a tree in the Ling</font>

343
00:17:01,660 --> 00:17:09,099
are in some<font color="#CCCCCC"> are stick</font><font color="#E5E5E5"> back our estimate</font>

344
00:17:04,089 --> 00:17:11,859
respectively then combining this<font color="#CCCCCC"> we can</font>

345
00:17:09,099 --> 00:17:14,829
obtain some kind of simultaneous<font color="#E5E5E5"> entry</font>

346
00:17:11,859 --> 00:17:18,458
<font color="#E5E5E5">server</font><font color="#CCCCCC"> that is</font><font color="#E5E5E5"> forgiving many including</font>

347
00:17:14,829 --> 00:17:22,059
a<font color="#E5E5E5"> re obereg' you can obtain</font><font color="#CCCCCC"> Shi</font><font color="#E5E5E5"> AI in</font>

348
00:17:18,459 --> 00:17:24,699
the Ling are simultaneously and in other

349
00:17:22,059 --> 00:17:28,290
words for<font color="#CCCCCC"> keeping including of matrix a</font>

350
00:17:24,699 --> 00:17:32,450
we can obtain or another form of

351
00:17:28,290 --> 00:17:36,510
<font color="#E5E5E5">including obey yes</font>

352
00:17:32,450 --> 00:17:38,430
the thing is every<font color="#E5E5E5"> element</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> obtain</font>

353
00:17:36,510 --> 00:17:40,710
these are in the lingaiah

354
00:17:38,430 --> 00:17:45,420
<font color="#CCCCCC">rather than on cue in other word we help</font>

355
00:17:40,710 --> 00:17:49,140
<font color="#CCCCCC">the modular</font><font color="#E5E5E5"> skill now we will see the</font>

356
00:17:45,420 --> 00:17:51,810
<font color="#E5E5E5">attack we take</font><font color="#CCCCCC"> a novice cated program</font>

357
00:17:49,140 --> 00:17:54,750
<font color="#CCCCCC">Opie and a prime plane program Q as on</font>

358
00:17:51,810 --> 00:17:58,139
input and the purpose of<font color="#E5E5E5"> the attack is</font>

359
00:17:54,750 --> 00:18:01,260
distinguish whether PS q or not<font color="#E5E5E5"> note</font>

360
00:17:58,140 --> 00:18:03,950
<font color="#CCCCCC">that it is not least to prep the</font>

361
00:18:01,260 --> 00:18:07,140
indistinguishability of the<font color="#CCCCCC"> Opposition</font>

362
00:18:03,950 --> 00:18:10,530
then for each given<font color="#CCCCCC"> pension program</font>

363
00:18:07,140 --> 00:18:13,100
<font color="#CCCCCC">mattress test host</font><font color="#E5E5E5"> Katie reading program</font>

364
00:18:10,530 --> 00:18:15,420
as matrices<font color="#CCCCCC"> mr. blanton problem</font>

365
00:18:13,100 --> 00:18:18,959
<font color="#E5E5E5">simultaneously then we obtain we obtain</font>

366
00:18:15,420 --> 00:18:22,830
our new matrices which are<font color="#E5E5E5"> all in the</font>

367
00:18:18,960 --> 00:18:25,680
Ling<font color="#CCCCCC"> R and it is also</font><font color="#E5E5E5"> of the form of</font>

368
00:18:22,830 --> 00:18:28,850
<font color="#CCCCCC">branching program and let's consider</font><font color="#E5E5E5"> the</font>

369
00:18:25,680 --> 00:18:32,280
evaluation of the pension<font color="#CCCCCC"> program for</font>

370
00:18:28,850 --> 00:18:36,570
<font color="#E5E5E5">the plane broke when playing</font><font color="#CCCCCC"> program</font>

371
00:18:32,280 --> 00:18:40,980
output<font color="#E5E5E5"> 0 then opposite Katie's program</font>

372
00:18:36,570 --> 00:18:45,179
<font color="#CCCCCC">Alice tomliboo</font><font color="#E5E5E5"> encoding</font><font color="#CCCCCC"> op 0 of the from</font>

373
00:18:40,980 --> 00:18:47,910
our geo budget to the<font color="#E5E5E5"> kappa and in I</font>

374
00:18:45,180 --> 00:18:52,710
program<font color="#CCCCCC"> it is correspond</font><font color="#E5E5E5"> to multi</font><font color="#CCCCCC"> probe</font>

375
00:18:47,910 --> 00:18:55,230
G by some computations in other in other

376
00:18:52,710 --> 00:18:58,380
word we can come<font color="#E5E5E5"> many multi probe G</font>

377
00:18:55,230 --> 00:19:02,520
<font color="#E5E5E5">using the evaluation</font><font color="#CCCCCC"> of printing</font>

378
00:18:58,380 --> 00:19:03,780
programs then by collecting this using

379
00:19:02,520 --> 00:19:06,900
<font color="#CCCCCC">homie number form we can recover the</font>

380
00:19:03,780 --> 00:19:10,710
<font color="#E5E5E5">ideology and then compute</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> she ate</font>

381
00:19:06,900 --> 00:19:13,380
here the modulus G<font color="#CCCCCC"> notice a</font><font color="#E5E5E5"> till the</font>

382
00:19:10,710 --> 00:19:15,360
modulus G<font color="#E5E5E5"> to not contain randomness</font><font color="#CCCCCC"> our</font>

383
00:19:13,380 --> 00:19:19,500
and the<font color="#CCCCCC"> by parameter Z and the modulus</font>

384
00:19:15,360 --> 00:19:22,889
<font color="#CCCCCC">kill broker we can remove the effect of</font>

385
00:19:19,500 --> 00:19:25,020
skull<font color="#CCCCCC"> Evangeline seen it is the team but</font>

386
00:19:22,890 --> 00:19:27,800
<font color="#CCCCCC">we</font><font color="#E5E5E5"> omit this in detail because it is</font>

387
00:19:25,020 --> 00:19:30,650
case<font color="#CCCCCC"> by case study and is not complex</font>

388
00:19:27,800 --> 00:19:32,790
<font color="#E5E5E5">then we can learn the mix team to detect</font>

389
00:19:30,650 --> 00:19:34,530
<font color="#E5E5E5">next</font><font color="#CCCCCC"> team to the tag is</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> distinct</font>

390
00:19:32,790 --> 00:19:38,250
<font color="#CCCCCC">issue not</font><font color="#E5E5E5"> take on printing programs or</font>

391
00:19:34,530 --> 00:19:39,830
obfuscated<font color="#CCCCCC"> brainsick program using</font>

392
00:19:38,250 --> 00:19:43,410
invalid inputs

393
00:19:39,830 --> 00:19:44,999
let's see the<font color="#CCCCCC"> example consider on in</font>

394
00:19:43,410 --> 00:19:46,709
function with output<font color="#CCCCCC"> 1 1</font>

395
00:19:44,999 --> 00:19:50,429
- and<font color="#CCCCCC"> to</font><font color="#E5E5E5"> functionally equivalent</font>

396
00:19:46,709 --> 00:19:52,739
<font color="#CCCCCC">printing program for a pellet</font><font color="#E5E5E5"> in put</font>

397
00:19:50,429 --> 00:19:55,319
these two<font color="#CCCCCC"> printing</font><font color="#E5E5E5"> program should</font><font color="#CCCCCC"> output</font>

398
00:19:52,739 --> 00:19:59,099
the<font color="#E5E5E5"> same value however consider it is</font>

399
00:19:55,319 --> 00:20:01,499
invalid<font color="#E5E5E5"> input indices 0</font><font color="#CCCCCC"> 1 1 it is</font>

400
00:19:59,099 --> 00:20:04,408
<font color="#E5E5E5">invalid because first two indices are</font>

401
00:20:01,499 --> 00:20:08,569
not equal<font color="#E5E5E5"> which is which violate</font>

402
00:20:04,409 --> 00:20:12,179
constraint from the input function so

403
00:20:08,569 --> 00:20:14,779
<font color="#E5E5E5">for this invalid input disturbance even</font>

404
00:20:12,179 --> 00:20:19,319
program may have different value say a

405
00:20:14,779 --> 00:20:22,109
<font color="#E5E5E5">output 0 whereas</font><font color="#CCCCCC"> B</font><font color="#E5E5E5"> ops nonzero so we can</font>

406
00:20:19,319 --> 00:20:26,279
distinguish a MP by evaluating<font color="#CCCCCC"> these</font>

407
00:20:22,109 --> 00:20:28,319
invalid inputs<font color="#E5E5E5"> in fact this is</font><font color="#CCCCCC"> not</font>

408
00:20:26,279 --> 00:20:30,779
<font color="#E5E5E5">permitted in the post gated mode because</font>

409
00:20:28,319 --> 00:20:33,539
many randomizing values such as<font color="#CCCCCC"> color</font>

410
00:20:30,779 --> 00:20:37,829
<font color="#CCCCCC">bond links</font><font color="#E5E5E5"> but we have removed many</font>

411
00:20:33,539 --> 00:20:41,789
randoms so we can learn<font color="#E5E5E5"> this and another</font>

412
00:20:37,829 --> 00:20:43,408
in<font color="#E5E5E5"> fact we in the paper we have done the</font>

413
00:20:41,789 --> 00:20:45,869
<font color="#E5E5E5">matrix theorizing or take later than</font>

414
00:20:43,409 --> 00:20:48,619
fixed input optic which is the

415
00:20:45,869 --> 00:20:51,448
generalization<font color="#E5E5E5"> of mixed in protect this</font>

416
00:20:48,619 --> 00:20:54,269
<font color="#CCCCCC">used the sum of many valuations letter</font>

417
00:20:51,449 --> 00:20:58,319
<font color="#E5E5E5">the name but one invalid</font><font color="#CCCCCC"> inputs what we</font>

418
00:20:54,269 --> 00:21:02,459
skip it<font color="#E5E5E5"> here now let's see the second</font>

419
00:20:58,319 --> 00:21:04,739
<font color="#CCCCCC">object</font><font color="#E5E5E5"> for every evaluation of output</font>

420
00:21:02,459 --> 00:21:07,289
evaluation with output 0 it is

421
00:21:04,739 --> 00:21:09,689
correspond we always complete the<font color="#CCCCCC"> tamna</font>

422
00:21:07,289 --> 00:21:13,609
<font color="#E5E5E5">encoding of 0 product through testing</font>

423
00:21:09,689 --> 00:21:16,849
parameter<font color="#CCCCCC"> mode rescue</font><font color="#E5E5E5"> and it is</font><font color="#CCCCCC"> a value</font>

424
00:21:13,609 --> 00:21:20,728
correspond<font color="#E5E5E5"> to probate in the Ling are</font>

425
00:21:16,849 --> 00:21:23,639
<font color="#CCCCCC">then by collecting</font><font color="#E5E5E5"> this many values many</font>

426
00:21:20,729 --> 00:21:26,039
multi probates<font color="#E5E5E5"> we can compute a</font><font color="#CCCCCC"> step in</font>

427
00:21:23,639 --> 00:21:27,779
condom<font color="#CCCCCC"> polina with quantum polynomial</font>

428
00:21:26,039 --> 00:21:32,609
time using<font color="#E5E5E5"> short Princip write your</font>

429
00:21:27,779 --> 00:21:35,399
problem<font color="#E5E5E5"> server and then using this we</font>

430
00:21:32,609 --> 00:21:38,458
<font color="#CCCCCC">can manipulate some kind of double 0</font>

431
00:21:35,399 --> 00:21:43,258
testing at level 2<font color="#CCCCCC"> kappa using this</font>

432
00:21:38,459 --> 00:21:48,749
period in other word we have<font color="#CCCCCC"> reckon long</font>

433
00:21:43,259 --> 00:21:52,129
- couple of alpha skated program<font color="#E5E5E5"> the</font>

434
00:21:48,749 --> 00:21:54,359
second step is<font color="#E5E5E5"> the</font><font color="#CCCCCC"> mixed team project</font>

435
00:21:52,129 --> 00:21:56,839
however for the hopper a very mixed

436
00:21:54,359 --> 00:21:59,968
<font color="#CCCCCC">Infotech</font>

437
00:21:56,839 --> 00:22:03,719
for<font color="#E5E5E5"> disability</font><font color="#CCCCCC"> input</font><font color="#E5E5E5"> it is not permitted</font>

438
00:21:59,969 --> 00:22:08,450
<font color="#CCCCCC">because we do nothing about the lambda</font>

439
00:22:03,719 --> 00:22:10,559
<font color="#E5E5E5">misers though it is fluid</font><font color="#CCCCCC"> down</font><font color="#E5E5E5"> instead</font>

440
00:22:08,450 --> 00:22:12,389
<font color="#E5E5E5">we construct the two couple I've ever</font>

441
00:22:10,559 --> 00:22:15,899
post<font color="#CCCCCC"> gated program by the</font><font color="#E5E5E5"> application</font>

442
00:22:12,389 --> 00:22:19,218
<font color="#CCCCCC">door or is in every one and then for</font>

443
00:22:15,899 --> 00:22:23,218
<font color="#E5E5E5">statistical to be</font><font color="#CCCCCC"> choosen</font><font color="#E5E5E5"> invalid input</font>

444
00:22:19,219 --> 00:22:25,049
which output some kind of<font color="#CCCCCC"> w0 we can</font>

445
00:22:23,219 --> 00:22:30,809
learn the mixed<font color="#E5E5E5"> in with</font><font color="#CCCCCC"> object and then</font>

446
00:22:25,049 --> 00:22:34,979
<font color="#CCCCCC">attack</font><font color="#E5E5E5"> is done now let's see the table</font>

447
00:22:30,809 --> 00:22:37,649
showing<font color="#CCCCCC"> the lizards in the first attack</font>

448
00:22:34,979 --> 00:22:40,619
we show<font color="#E5E5E5"> that in the interest of a</font>

449
00:22:37,649 --> 00:22:43,918
<font color="#CCCCCC">parameter let him or eventing program of</font>

450
00:22:40,619 --> 00:22:47,249
<font color="#E5E5E5">post Gators are vulnerable to enter</font>

451
00:22:43,919 --> 00:22:50,549
attack<font color="#E5E5E5"> and in the second attack many of</font>

452
00:22:47,249 --> 00:22:53,789
<font color="#E5E5E5">us occasions over</font><font color="#CCCCCC"> GG</font><font color="#E5E5E5"> 13 is not</font><font color="#CCCCCC"> secure in</font>

453
00:22:50,549 --> 00:22:59,820
<font color="#CCCCCC">the</font><font color="#E5E5E5"> Kanto Mart this table</font><font color="#CCCCCC"> lays two</font>

454
00:22:53,789 --> 00:23:02,129
natural<font color="#E5E5E5"> questions at first how</font><font color="#CCCCCC"> about the</font>

455
00:22:59,820 --> 00:23:05,399
first occasion<font color="#CCCCCC"> JYJ's</font><font color="#E5E5E5"> RSW</font>

456
00:23:02,129 --> 00:23:07,228
in the quantum world and how about<font color="#E5E5E5"> the</font>

457
00:23:05,399 --> 00:23:12,570
circuit obfuscation for<font color="#E5E5E5"> entropy and</font>

458
00:23:07,229 --> 00:23:14,729
through a circular metal is<font color="#E5E5E5"> it actually</font>

459
00:23:12,570 --> 00:23:17,999
we have made many progress<font color="#E5E5E5"> tests in this</font>

460
00:23:14,729 --> 00:23:21,209
regard why we are preparing the

461
00:23:17,999 --> 00:23:25,639
presentation<font color="#E5E5E5"> for the first obfuscation</font>

462
00:23:21,209 --> 00:23:29,849
<font color="#CCCCCC">GTRs w it is broken in Kanto mode by</font>

463
00:23:25,639 --> 00:23:32,248
combining our work in other word<font color="#E5E5E5"> at</font>

464
00:23:29,849 --> 00:23:34,200
first manipulating<font color="#E5E5E5"> double</font><font color="#CCCCCC"> zero testing</font>

465
00:23:32,249 --> 00:23:37,349
and then<font color="#E5E5E5"> lambda matrix terrorizing</font>

466
00:23:34,200 --> 00:23:39,329
<font color="#E5E5E5">attack</font><font color="#CCCCCC"> and for the circuit of</font>

467
00:23:37,349 --> 00:23:41,178
ossification in enter<font color="#CCCCCC"> observable</font>

468
00:23:39,329 --> 00:23:44,759
parameterizing

469
00:23:41,179 --> 00:23:51,479
many<font color="#CCCCCC"> has the thermal circuit of post</font>

470
00:23:44,759 --> 00:23:55,320
occasion is broken using<font color="#CCCCCC"> into attack now</font>

471
00:23:51,479 --> 00:23:57,450
we leave open problems and<font color="#CCCCCC"> Damac our</font>

472
00:23:55,320 --> 00:24:01,320
take heavily rely on the time level

473
00:23:57,450 --> 00:24:04,139
including of<font color="#E5E5E5"> zero store however</font><font color="#CCCCCC"> a basic</font>

474
00:24:01,320 --> 00:24:06,269
function<font color="#E5E5E5"> to not output values so we do</font>

475
00:24:04,139 --> 00:24:08,030
not know how<font color="#E5E5E5"> to take special occasion</font>

476
00:24:06,269 --> 00:24:10,040
for evasive functions

477
00:24:08,030 --> 00:24:13,910
and we are really<font color="#CCCCCC"> curious</font><font color="#E5E5E5"> about the</font>

478
00:24:10,040 --> 00:24:16,520
<font color="#CCCCCC">contem</font><font color="#E5E5E5"> assist for</font><font color="#CCCCCC"> the critical</font><font color="#E5E5E5"> tech it</font>

479
00:24:13,910 --> 00:24:19,780
is easy to<font color="#E5E5E5"> prevent by increasing the</font>

480
00:24:16,520 --> 00:24:23,180
dimension n to prevent antibiotic

481
00:24:19,780 --> 00:24:26,000
<font color="#E5E5E5">however for the quantum</font><font color="#CCCCCC"> otech we do</font><font color="#E5E5E5"> not</font>

482
00:24:23,180 --> 00:24:30,830
know how<font color="#E5E5E5"> to prevent it and we guess that</font>

483
00:24:26,000 --> 00:24:35,960
<font color="#E5E5E5">it is very hard to modify the</font><font color="#CCCCCC"> CG certain</font>

484
00:24:30,830 --> 00:24:37,879
to prevent<font color="#CCCCCC"> a condom or take a test we</font>

485
00:24:35,960 --> 00:24:42,230
<font color="#CCCCCC">give all important implication of the</font>

486
00:24:37,880 --> 00:24:45,140
work many schemes<font color="#E5E5E5"> especially listen to</font>

487
00:24:42,230 --> 00:24:47,060
post occasions that<font color="#CCCCCC"> are proven in their</font>

488
00:24:45,140 --> 00:24:50,750
<font color="#E5E5E5">security in the idealized model or</font>

489
00:24:47,060 --> 00:24:53,030
somewhat weaker<font color="#CCCCCC"> border</font><font color="#E5E5E5"> what the earlier</font>

490
00:24:50,750 --> 00:24:56,630
construction heavily rely on the

491
00:24:53,030 --> 00:25:00,980
concrete concrete other schemes or<font color="#E5E5E5"> mere</font>

492
00:24:56,630 --> 00:25:02,930
candidates however<font color="#E5E5E5"> these candidates may</font>

493
00:25:00,980 --> 00:25:07,310
not fit in the idealized model or

494
00:25:02,930 --> 00:25:10,070
accommodate in fact this work we show

495
00:25:07,310 --> 00:25:14,090
that this<font color="#CCCCCC"> cap can cause a significant</font>

496
00:25:10,070 --> 00:25:16,700
<font color="#CCCCCC">weakness of the concrete</font><font color="#E5E5E5"> games in other</font>

497
00:25:14,090 --> 00:25:20,419
<font color="#CCCCCC">word we should</font><font color="#E5E5E5"> focus we should pay</font>

498
00:25:16,700 --> 00:25:24,770
attention<font color="#E5E5E5"> on this gap if the concrete</font>

499
00:25:20,420 --> 00:25:26,660
schemes concrete schemes are proven

500
00:25:24,770 --> 00:25:29,870
interior security<font color="#CCCCCC"> in only</font><font color="#E5E5E5"> in the</font>

501
00:25:26,660 --> 00:25:31,150
idealized model thank you for<font color="#E5E5E5"> your</font>

502
00:25:29,870 --> 00:25:37,758
attention

503
00:25:31,150 --> 00:25:37,759
[Applause]

504
00:25:51,710 --> 00:25:57,009
[Applause]

