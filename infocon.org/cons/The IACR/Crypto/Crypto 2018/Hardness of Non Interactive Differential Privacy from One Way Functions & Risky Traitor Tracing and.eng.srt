1
00:00:05,100 --> 00:00:09,160
so thanks for<font color="#CCCCCC"> the introduction hello i'm</font>

2
00:00:07,540 --> 00:00:11,350
rishabh<font color="#E5E5E5"> and today i'm going to talk</font>

3
00:00:09,160 --> 00:00:12,520
<font color="#E5E5E5">about the basically Luke and I are going</font>

4
00:00:11,350 --> 00:00:15,760
to give a joint talk on<font color="#CCCCCC"> an</font>

5
00:00:12,520 --> 00:00:17,380
aforementioned works<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> let's start</font>

6
00:00:15,760 --> 00:00:19,240
<font color="#E5E5E5">by talking about trader tracing so what</font>

7
00:00:17,380 --> 00:00:21,250
is trader tracing consider<font color="#CCCCCC"> following</font>

8
00:00:19,240 --> 00:00:21,700
scenario<font color="#E5E5E5"> suppose we have</font><font color="#CCCCCC"> n</font><font color="#E5E5E5"> users in</font><font color="#CCCCCC"> the</font>

9
00:00:21,250 --> 00:00:23,680
system

10
00:00:21,700 --> 00:00:25,689
each user have their own private secret

11
00:00:23,680 --> 00:00:27,250
key<font color="#CCCCCC"> and we have one common</font><font color="#E5E5E5"> public key</font>

12
00:00:25,690 --> 00:00:29,170
<font color="#E5E5E5">you can use the</font><font color="#CCCCCC"> public key to decrypt</font><font color="#E5E5E5"> to</font>

13
00:00:27,250 --> 00:00:30,820
<font color="#E5E5E5">enter any information</font><font color="#CCCCCC"> of our choice</font><font color="#E5E5E5"> the</font>

14
00:00:29,170 --> 00:00:32,140
property is<font color="#E5E5E5"> that any of these n user</font>

15
00:00:30,820 --> 00:00:33,780
<font color="#E5E5E5">keys could be used to decrypt the nth</font>

16
00:00:32,140 --> 00:00:36,370
corresponding<font color="#CCCCCC"> ciphertext</font><font color="#E5E5E5"> on the message</font>

17
00:00:33,780 --> 00:00:38,019
<font color="#E5E5E5">now suppose an adversary</font><font color="#CCCCCC"> in a system is</font>

18
00:00:36,370 --> 00:00:40,239
able<font color="#CCCCCC"> to corrupt some</font><font color="#E5E5E5"> of these users some</font>

19
00:00:38,019 --> 00:00:41,769
of<font color="#E5E5E5"> these users in the system</font><font color="#CCCCCC"> and using</font>

20
00:00:40,239 --> 00:00:43,959
the the corrupted information these

21
00:00:41,769 --> 00:00:46,149
corrupted<font color="#E5E5E5"> securities the adversary could</font>

22
00:00:43,960 --> 00:00:48,550
potentially create<font color="#E5E5E5"> some special decoding</font>

23
00:00:46,149 --> 00:00:50,859
device<font color="#E5E5E5"> or a decoder box such that this</font>

24
00:00:48,550 --> 00:00:53,140
decoder box chain also<font color="#E5E5E5"> received</font><font color="#CCCCCC"> shaft</font><font color="#E5E5E5"> X</font>

25
00:00:50,859 --> 00:00:55,989
encrypted on the public key<font color="#CCCCCC"> and output</font>

26
00:00:53,140 --> 00:00:57,640
the corresponding messages now a treaty

27
00:00:55,989 --> 00:00:59,589
<font color="#E5E5E5">tracing system allows</font><font color="#CCCCCC"> the following</font>

28
00:00:57,640 --> 00:01:01,149
capability<font color="#E5E5E5"> it says that if we can just</font>

29
00:00:59,589 --> 00:01:03,699
<font color="#E5E5E5">get a hold of some</font><font color="#CCCCCC"> of these decoding</font>

30
00:01:01,149 --> 00:01:05,650
devices<font color="#E5E5E5"> then we can basically trace we</font>

31
00:01:03,699 --> 00:01:07,630
can figure out which parties have been

32
00:01:05,650 --> 00:01:09,790
quashed by<font color="#E5E5E5"> the adversary that's the</font>

33
00:01:07,630 --> 00:01:11,110
<font color="#E5E5E5">problem of trader tracing now why is</font>

34
00:01:09,790 --> 00:01:13,149
this problem interesting or why is this

35
00:01:11,110 --> 00:01:14,770
<font color="#E5E5E5">problem even I mean biases from</font><font color="#CCCCCC"> heart</font>

36
00:01:13,149 --> 00:01:16,509
the hardness<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> problem stems</font><font color="#E5E5E5"> from</font>

37
00:01:14,770 --> 00:01:18,548
the<font color="#CCCCCC"> fact that the adversary in this</font>

38
00:01:16,509 --> 00:01:19,960
<font color="#E5E5E5">system</font><font color="#CCCCCC"> it could potentially</font><font color="#E5E5E5"> collude</font><font color="#CCCCCC"> it</font>

39
00:01:18,549 --> 00:01:21,460
<font color="#E5E5E5">basically it could corrupt multiple</font>

40
00:01:19,960 --> 00:01:23,020
users<font color="#E5E5E5"> and could use different</font><font color="#CCCCCC"> of the</font>

41
00:01:21,460 --> 00:01:23,339
secret keys to create just one decoding

42
00:01:23,020 --> 00:01:25,450
device

43
00:01:23,340 --> 00:01:27,460
additionally the adverse she could be

44
00:01:25,450 --> 00:01:29,200
using obfuscation<font color="#E5E5E5"> hardware or any other</font>

45
00:01:27,460 --> 00:01:30,429
technique<font color="#E5E5E5"> and we can't rely</font><font color="#CCCCCC"> that we can</font>

46
00:01:29,200 --> 00:01:32,229
<font color="#E5E5E5">basically look inside this recording</font>

47
00:01:30,430 --> 00:01:35,109
device<font color="#E5E5E5"> and figure out which is have been</font>

48
00:01:32,229 --> 00:01:37,270
used next let<font color="#E5E5E5"> me try to formalize the</font>

49
00:01:35,109 --> 00:01:38,859
problem of<font color="#CCCCCC"> trader tracing so intraday</font>

50
00:01:37,270 --> 00:01:40,119
<font color="#CCCCCC">tracing our systems we have four</font>

51
00:01:38,859 --> 00:01:41,770
<font color="#E5E5E5">algorithms the first three algorithms</font>

52
00:01:40,119 --> 00:01:43,030
<font color="#E5E5E5">are pretty strand</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> straightforward</font>

53
00:01:41,770 --> 00:01:45,070
they just corresponding the regular

54
00:01:43,030 --> 00:01:47,320
public<font color="#CCCCCC"> key encryption algorithms</font><font color="#E5E5E5"> except</font>

55
00:01:45,070 --> 00:01:50,079
giving<font color="#E5E5E5"> the</font><font color="#CCCCCC"> setup algorithm we output at</font>

56
00:01:47,320 --> 00:01:51,639
these all<font color="#E5E5E5"> end user keys at once but</font>

57
00:01:50,079 --> 00:01:53,500
<font color="#E5E5E5">special algorithm enter a tracing system</font>

58
00:01:51,640 --> 00:01:55,450
is the tracing algorithm<font color="#E5E5E5"> it takes us</font>

59
00:01:53,500 --> 00:01:57,700
<font color="#CCCCCC">input this master</font><font color="#E5E5E5"> secret key some</font>

60
00:01:55,450 --> 00:02:00,070
parameter<font color="#CCCCCC"> wire and two messages m0 m1</font>

61
00:01:57,700 --> 00:02:02,200
and additionally<font color="#E5E5E5"> this algorithm gets</font>

62
00:02:00,070 --> 00:02:06,130
<font color="#CCCCCC">Oracle access to some decoding device</font><font color="#E5E5E5"> T</font>

63
00:02:02,200 --> 00:02:07,899
and basically outputs<font color="#E5E5E5"> are set T this set</font>

64
00:02:06,130 --> 00:02:11,560
P will correspond to the traitors<font color="#CCCCCC"> that</font>

65
00:02:07,899 --> 00:02:13,300
the tracing algorithm points to now the

66
00:02:11,560 --> 00:02:14,620
<font color="#E5E5E5">interesting</font><font color="#CCCCCC"> properties so basically if</font>

67
00:02:13,300 --> 00:02:16,030
<font color="#E5E5E5">you don't have any secret keys we</font>

68
00:02:14,620 --> 00:02:17,620
require NCP security from a<font color="#CCCCCC"> treaty</font>

69
00:02:16,030 --> 00:02:18,440
<font color="#E5E5E5">tracing system that you cannot learn the</font>

70
00:02:17,620 --> 00:02:20,210
<font color="#E5E5E5">underlying message</font>

71
00:02:18,440 --> 00:02:21,859
and correctness we require that any<font color="#E5E5E5"> of</font>

72
00:02:20,210 --> 00:02:23,840
<font color="#E5E5E5">these end users could decrypt the</font>

73
00:02:21,860 --> 00:02:25,370
ciphertext using their their private

74
00:02:23,840 --> 00:02:26,900
secret keys<font color="#E5E5E5"> but the more interesting</font>

75
00:02:25,370 --> 00:02:28,340
<font color="#E5E5E5">security property that we required for</font>

76
00:02:26,900 --> 00:02:30,290
<font color="#E5E5E5">my</font><font color="#CCCCCC"> trade trading system is called</font><font color="#E5E5E5"> a</font>

77
00:02:28,340 --> 00:02:31,520
secure tracing property<font color="#CCCCCC"> its formalized</font>

78
00:02:30,290 --> 00:02:33,440
by a game<font color="#CCCCCC"> between an ad</font><font color="#E5E5E5"> version and</font>

79
00:02:31,520 --> 00:02:34,730
<font color="#E5E5E5">Challenger and the</font><font color="#CCCCCC"> game starts</font><font color="#E5E5E5"> when the</font>

80
00:02:33,440 --> 00:02:36,079
<font color="#CCCCCC">channel when the adverse she sends the</font>

81
00:02:34,730 --> 00:02:38,239
number of<font color="#CCCCCC"> users to</font><font color="#E5E5E5"> the Challenger it</font>

82
00:02:36,080 --> 00:02:39,890
sets of the system<font color="#E5E5E5"> sends the public key</font>

83
00:02:38,240 --> 00:02:41,510
able to be adversary<font color="#E5E5E5"> it where she says</font>

84
00:02:39,890 --> 00:02:43,339
then<font color="#CCCCCC"> okay I want to cut</font><font color="#E5E5E5"> up the following</font>

85
00:02:41,510 --> 00:02:45,739
set<font color="#E5E5E5"> SF users give me the corresponding</font>

86
00:02:43,340 --> 00:02:48,130
<font color="#E5E5E5">secret keys I'm then going to output a</font>

87
00:02:45,740 --> 00:02:50,900
<font color="#CCCCCC">decoder device</font><font color="#E5E5E5"> T and two messages m0 m1</font>

88
00:02:48,130 --> 00:02:52,579
finally the Challenger it runs the

89
00:02:50,900 --> 00:02:54,500
tracing algorithm<font color="#E5E5E5"> honestly on all these</font>

90
00:02:52,580 --> 00:02:56,360
inputs<font color="#E5E5E5"> and let</font><font color="#CCCCCC"> B be the output of the</font>

91
00:02:54,500 --> 00:02:57,830
tracing algorithm<font color="#CCCCCC"> we say a</font><font color="#E5E5E5"> trade a</font>

92
00:02:56,360 --> 00:02:59,810
trading system<font color="#E5E5E5"> is a secure tracing</font>

93
00:02:57,830 --> 00:03:00,230
system if it satisfies<font color="#CCCCCC"> the following two</font>

94
00:02:59,810 --> 00:03:01,730
properties

95
00:03:00,230 --> 00:03:04,000
the first property<font color="#E5E5E5"> sort of like a</font>

96
00:03:01,730 --> 00:03:06,470
soundness condition<font color="#CCCCCC"> it says that</font>

97
00:03:04,000 --> 00:03:07,880
irrespective<font color="#E5E5E5"> of what</font><font color="#CCCCCC"> uses the adversity</font>

98
00:03:06,470 --> 00:03:09,980
corrupts the tracing algorithm<font color="#CCCCCC"> should</font>

99
00:03:07,880 --> 00:03:11,810
never point to any any user who<font color="#E5E5E5"> was not</font>

100
00:03:09,980 --> 00:03:13,519
corrupted by the adversity<font color="#E5E5E5"> basically</font>

101
00:03:11,810 --> 00:03:15,800
should not falsely<font color="#E5E5E5"> accuse anyone of</font>

102
00:03:13,520 --> 00:03:17,450
shielding the other condition<font color="#E5E5E5"> is sort of</font>

103
00:03:15,800 --> 00:03:19,340
<font color="#E5E5E5">like a complete list condition it says</font>

104
00:03:17,450 --> 00:03:21,440
that if the<font color="#E5E5E5"> decoding device that the</font>

105
00:03:19,340 --> 00:03:23,030
adversary outputs<font color="#CCCCCC"> it can</font><font color="#E5E5E5"> really</font>

106
00:03:21,440 --> 00:03:24,440
distinguish between<font color="#E5E5E5"> encryptions of</font><font color="#CCCCCC"> m0</font>

107
00:03:23,030 --> 00:03:26,810
and m1<font color="#E5E5E5"> with some non-negligible</font>

108
00:03:24,440 --> 00:03:28,280
probability<font color="#E5E5E5"> then the output of the</font>

109
00:03:26,810 --> 00:03:30,020
tracing algorithm<font color="#E5E5E5"> should be</font><font color="#CCCCCC"> non-empty</font>

110
00:03:28,280 --> 00:03:34,040
<font color="#CCCCCC">you should find at least</font><font color="#E5E5E5"> someone and the</font>

111
00:03:30,020 --> 00:03:36,080
set now before this book appeared they

112
00:03:34,040 --> 00:03:37,880
would<font color="#E5E5E5"> three main pathways to build trait</font>

113
00:03:36,080 --> 00:03:40,160
a tracing system which<font color="#CCCCCC"> were from public</font>

114
00:03:37,880 --> 00:03:41,390
key encryption<font color="#E5E5E5"> from</font><font color="#CCCCCC"> bi linear maps and</font>

115
00:03:40,160 --> 00:03:42,859
from<font color="#E5E5E5"> a function crip ssin</font><font color="#CCCCCC"> and</font>

116
00:03:41,390 --> 00:03:44,208
<font color="#CCCCCC">indistinguishable</font><font color="#E5E5E5"> obfuscation the</font>

117
00:03:42,860 --> 00:03:47,090
difference<font color="#CCCCCC"> between all</font><font color="#E5E5E5"> these approaches</font>

118
00:03:44,209 --> 00:03:48,530
were the efficiency<font color="#E5E5E5"> that they led</font><font color="#CCCCCC"> to so</font>

119
00:03:47,090 --> 00:03:50,540
if<font color="#E5E5E5"> you just use probably</font><font color="#CCCCCC"> relate public</font>

120
00:03:48,530 --> 00:03:52,280
encryption<font color="#CCCCCC"> it had a pretty bad their</font>

121
00:03:50,540 --> 00:03:54,380
efficiency the size the septics<font color="#CCCCCC"> drawed</font>

122
00:03:52,280 --> 00:03:55,700
linearly with the number of<font color="#CCCCCC"> users n the</font>

123
00:03:54,380 --> 00:03:58,040
<font color="#CCCCCC">bilinear map so you could improve</font><font color="#E5E5E5"> it in</font>

124
00:03:55,700 --> 00:03:59,869
slightly but with<font color="#E5E5E5"> function</font><font color="#CCCCCC"> Krypton in</font>

125
00:03:58,040 --> 00:04:03,260
this<font color="#CCCCCC"> initial opposition</font><font color="#E5E5E5"> unsurprisingly</font>

126
00:03:59,870 --> 00:04:04,519
<font color="#CCCCCC">you can get optimal ciphertext size now</font>

127
00:04:03,260 --> 00:04:06,649
the question that we posed in this work

128
00:04:04,519 --> 00:04:08,450
is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> okay maybe just getting</font><font color="#CCCCCC"> treated</font>

129
00:04:06,650 --> 00:04:10,580
<font color="#CCCCCC">racing a full traded racing system is</font>

130
00:04:08,450 --> 00:04:12,738
hard but what if we try to<font color="#E5E5E5"> relax the</font>

131
00:04:10,580 --> 00:04:14,660
tracing requirement<font color="#E5E5E5"> slightly then can we</font>

132
00:04:12,739 --> 00:04:18,230
build efficient systems from standard

133
00:04:14,660 --> 00:04:19,880
assumptions<font color="#E5E5E5"> to that end we</font><font color="#CCCCCC"> relaxed the</font>

134
00:04:18,230 --> 00:04:22,310
tracing requirement as follows

135
00:04:19,880 --> 00:04:23,480
so in tracing<font color="#CCCCCC"> inst annotated tracing we</font>

136
00:04:22,310 --> 00:04:24,950
<font color="#CCCCCC">said that okay you should not false make</font>

137
00:04:23,480 --> 00:04:27,110
use<font color="#CCCCCC"> anyone and it</font><font color="#E5E5E5"> should catch someone</font>

138
00:04:24,950 --> 00:04:28,490
if you get adequate decoding device<font color="#CCCCCC"> what</font>

139
00:04:27,110 --> 00:04:30,410
we do is that<font color="#CCCCCC"> we define</font><font color="#E5E5E5"> something that</font>

140
00:04:28,490 --> 00:04:32,630
we called<font color="#CCCCCC"> risky</font><font color="#E5E5E5"> to tracing or F whiskey</font>

141
00:04:30,410 --> 00:04:34,160
<font color="#E5E5E5">retracing so this function</font>

142
00:04:32,630 --> 00:04:35,780
this parameter<font color="#CCCCCC"> F it's basically</font>

143
00:04:34,160 --> 00:04:37,910
<font color="#E5E5E5">multiplied on the right side of this</font>

144
00:04:35,780 --> 00:04:40,010
second constraint<font color="#E5E5E5"> what are you trying to</font>

145
00:04:37,910 --> 00:04:42,140
say is that now suppose this function f

146
00:04:40,010 --> 00:04:44,150
is<font color="#CCCCCC"> 1/2</font><font color="#E5E5E5"> for simplicity he is trying to</font>

147
00:04:42,140 --> 00:04:45,710
say if the decoding device<font color="#CCCCCC"> R is a good</font>

148
00:04:44,150 --> 00:04:48,530
recording device<font color="#CCCCCC"> the D diversity outputs</font>

149
00:04:45,710 --> 00:04:50,450
<font color="#CCCCCC">the tracing algorithm needs</font><font color="#E5E5E5"> to just find</font>

150
00:04:48,530 --> 00:04:52,130
someone<font color="#E5E5E5"> with at least 1/2 probability it</font>

151
00:04:50,450 --> 00:04:54,409
could be any function<font color="#CCCCCC"> of lambda</font><font color="#E5E5E5"> and N</font>

152
00:04:52,130 --> 00:04:57,469
and we just relax this completeness

153
00:04:54,410 --> 00:04:59,300
requirement slightly now<font color="#E5E5E5"> formally in</font>

154
00:04:57,470 --> 00:05:00,740
this work we show that under simple

155
00:04:59,300 --> 00:05:02,480
assumptions<font color="#E5E5E5"> over by near groups</font><font color="#CCCCCC"> we can</font>

156
00:05:00,740 --> 00:05:03,920
<font color="#E5E5E5">build some F</font><font color="#CCCCCC"> risky to trace or some</font>

157
00:05:02,480 --> 00:05:06,680
risky<font color="#CCCCCC"> Taylor tracing schemes with</font>

158
00:05:03,920 --> 00:05:08,150
following<font color="#CCCCCC"> parameters so the parameter</font><font color="#E5E5E5"> so</font>

159
00:05:06,680 --> 00:05:10,520
just choose any parameter<font color="#E5E5E5"> K of your</font>

160
00:05:08,150 --> 00:05:12,530
choice<font color="#E5E5E5"> the</font><font color="#CCCCCC"> F risky parameter that</font><font color="#E5E5E5"> we can</font>

161
00:05:10,520 --> 00:05:14,840
target is K over<font color="#CCCCCC"> N where</font><font color="#E5E5E5"> n is the</font><font color="#CCCCCC"> number</font>

162
00:05:12,530 --> 00:05:16,640
of users<font color="#CCCCCC"> and that leads to</font><font color="#E5E5E5"> the scheme</font>

163
00:05:14,840 --> 00:05:18,349
which has secret<font color="#E5E5E5"> a bit in which the</font>

164
00:05:16,640 --> 00:05:20,630
<font color="#CCCCCC">cipher the cipher text size grows</font>

165
00:05:18,350 --> 00:05:22,700
linearly with the parameter K for

166
00:05:20,630 --> 00:05:24,650
<font color="#E5E5E5">example if the parameter K is</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> 2 and</font>

167
00:05:22,700 --> 00:05:26,719
<font color="#CCCCCC">that means the probability of</font><font color="#E5E5E5"> finding</font>

168
00:05:24,650 --> 00:05:27,950
someone<font color="#E5E5E5"> is 2 over n at least and then</font>

169
00:05:26,720 --> 00:05:29,750
the cipher text size is basically

170
00:05:27,950 --> 00:05:32,479
<font color="#CCCCCC">constant it just depends</font><font color="#E5E5E5"> upon the</font>

171
00:05:29,750 --> 00:05:34,790
<font color="#E5E5E5">security parameter additionally we also</font>

172
00:05:32,480 --> 00:05:36,290
show that<font color="#CCCCCC"> ok that risky idea tracing can</font>

173
00:05:34,790 --> 00:05:38,090
also lead to some differential<font color="#E5E5E5"> probably</font>

174
00:05:36,290 --> 00:05:41,270
<font color="#E5E5E5">negative</font><font color="#CCCCCC"> solves just like standard</font><font color="#E5E5E5"> rate</font>

175
00:05:38,090 --> 00:05:43,700
<font color="#CCCCCC">of tracing now I'm only going to focus</font>

176
00:05:41,270 --> 00:05:45,710
on risky<font color="#E5E5E5"> tracing in the next part of the</font>

177
00:05:43,700 --> 00:05:47,260
talk and I'll hand it over to<font color="#CCCCCC"> a loop to</font>

178
00:05:45,710 --> 00:05:49,760
tell you more about differential<font color="#E5E5E5"> privacy</font>

179
00:05:47,260 --> 00:05:51,830
<font color="#E5E5E5">now before moving on to how to actually</font>

180
00:05:49,760 --> 00:05:53,840
really build trader tracing how to build

181
00:05:51,830 --> 00:05:55,700
risky<font color="#CCCCCC"> ray tracing</font><font color="#E5E5E5"> let's see what are</font>

182
00:05:53,840 --> 00:05:59,000
some standard standalone applications of

183
00:05:55,700 --> 00:06:01,520
<font color="#E5E5E5">risky</font><font color="#CCCCCC"> DT</font><font color="#E5E5E5"> now recall in a trade a tracing</font>

184
00:05:59,000 --> 00:06:03,380
system when we deploy<font color="#CCCCCC"> it they could be</font>

185
00:06:01,520 --> 00:06:05,780
<font color="#E5E5E5">any users and each have their own secret</font>

186
00:06:03,380 --> 00:06:07,219
<font color="#E5E5E5">keys suppose that the key manager or the</font>

187
00:06:05,780 --> 00:06:09,020
<font color="#E5E5E5">person</font><font color="#CCCCCC"> who gives</font><font color="#E5E5E5"> you secret keys it</font>

188
00:06:07,220 --> 00:06:11,570
tries to refresh the secret keys<font color="#E5E5E5"> after</font>

189
00:06:09,020 --> 00:06:13,010
<font color="#E5E5E5">some time it refreshes it there is a</font>

190
00:06:11,570 --> 00:06:15,409
different cycle<font color="#CCCCCC"> you</font><font color="#E5E5E5"> get a new secret</font>

191
00:06:13,010 --> 00:06:17,360
<font color="#E5E5E5">each time so in such settings</font><font color="#CCCCCC"> what we</font>

192
00:06:15,410 --> 00:06:19,130
can do is that you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> only</font><font color="#CCCCCC"> use risky</font>

193
00:06:17,360 --> 00:06:21,080
tater tracing to actually just give very

194
00:06:19,130 --> 00:06:22,580
strong guarantees of tracing we can

195
00:06:21,080 --> 00:06:24,650
amplify<font color="#CCCCCC"> the probability of</font><font color="#E5E5E5"> catching</font>

196
00:06:22,580 --> 00:06:26,210
<font color="#E5E5E5">someone because if we ask the decoding</font>

197
00:06:24,650 --> 00:06:28,039
device should work across<font color="#E5E5E5"> different key</font>

198
00:06:26,210 --> 00:06:29,810
cycles different key different cycles

199
00:06:28,040 --> 00:06:32,770
<font color="#E5E5E5">then we can just switch around this</font>

200
00:06:29,810 --> 00:06:36,230
probability we<font color="#CCCCCC"> can just divide this out</font>

201
00:06:32,770 --> 00:06:37,820
<font color="#E5E5E5">now in other other possible applications</font>

202
00:06:36,230 --> 00:06:38,840
could<font color="#E5E5E5"> be if you want to deploy a trade a</font>

203
00:06:37,820 --> 00:06:40,610
tracing system in<font color="#E5E5E5"> a resource-constrained</font>

204
00:06:38,840 --> 00:06:42,020
setting or if you want to guarantee

205
00:06:40,610 --> 00:06:43,700
security against very risk-averse

206
00:06:42,020 --> 00:06:46,349
attackers who really<font color="#E5E5E5"> don't want to get</font>

207
00:06:43,700 --> 00:06:47,760
<font color="#E5E5E5">caught because the because</font>

208
00:06:46,350 --> 00:06:49,860
because if you get<font color="#CCCCCC"> caught</font><font color="#E5E5E5"> then they're</font>

209
00:06:47,760 --> 00:06:51,170
pretty bad<font color="#E5E5E5"> scenarios that could happen</font>

210
00:06:49,860 --> 00:06:53,670
<font color="#CCCCCC">all</font><font color="#E5E5E5"> right</font>

211
00:06:51,170 --> 00:06:55,560
so now in the rest<font color="#E5E5E5"> of the talk what I'll</font>

212
00:06:53,670 --> 00:06:57,270
do is that I'll<font color="#E5E5E5"> quickly tell you more</font>

213
00:06:55,560 --> 00:07:00,330
<font color="#E5E5E5">about how to build risky</font><font color="#CCCCCC"> dated racing</font>

214
00:06:57,270 --> 00:07:01,950
schemes do that and we<font color="#CCCCCC"> propose a new</font>

215
00:07:00,330 --> 00:07:04,140
framework that we<font color="#CCCCCC"> call mixed</font><font color="#E5E5E5"> bit</font>

216
00:07:01,950 --> 00:07:05,550
matching encryption systems<font color="#E5E5E5"> a mixed with</font>

217
00:07:04,140 --> 00:07:07,050
matching encryption systems<font color="#CCCCCC"> consists of</font>

218
00:07:05,550 --> 00:07:09,480
five algorithms which I'm going<font color="#E5E5E5"> to</font>

219
00:07:07,050 --> 00:07:11,130
describe next<font color="#E5E5E5"> so the set up algorithm it</font>

220
00:07:09,480 --> 00:07:13,530
takes as input a security<font color="#E5E5E5"> parameter and</font>

221
00:07:11,130 --> 00:07:15,480
some length parameter<font color="#CCCCCC"> L it outputs a</font>

222
00:07:13,530 --> 00:07:16,770
public key<font color="#E5E5E5"> and a master secret key then</font>

223
00:07:15,480 --> 00:07:18,780
<font color="#E5E5E5">we have a</font><font color="#CCCCCC"> public</font><font color="#E5E5E5"> key encryption</font>

224
00:07:16,770 --> 00:07:20,270
algorithm it takes<font color="#E5E5E5"> input a public key</font>

225
00:07:18,780 --> 00:07:22,440
<font color="#E5E5E5">some message gives you the subtext</font>

226
00:07:20,270 --> 00:07:24,390
<font color="#E5E5E5">additionally we have a secret</font><font color="#CCCCCC"> encryption</font>

227
00:07:22,440 --> 00:07:27,390
algorithm<font color="#E5E5E5"> the HS input a master secret</font>

228
00:07:24,390 --> 00:07:30,180
<font color="#E5E5E5">key</font><font color="#CCCCCC"> a message and an attribute</font><font color="#E5E5E5"> string Y</font>

229
00:07:27,390 --> 00:07:32,969
which is<font color="#CCCCCC"> a basically</font><font color="#E5E5E5"> a length</font><font color="#CCCCCC"> L</font><font color="#E5E5E5"> bit</font>

230
00:07:30,180 --> 00:07:34,800
string and gets your<font color="#CCCCCC"> ciphertext</font><font color="#E5E5E5"> we also</font>

231
00:07:32,970 --> 00:07:36,810
have a key<font color="#E5E5E5"> generation algorithm it gets</font>

232
00:07:34,800 --> 00:07:38,430
us in for a master secret<font color="#E5E5E5"> key again some</font>

233
00:07:36,810 --> 00:07:40,230
attribute vector X<font color="#E5E5E5"> and gives you some</font>

234
00:07:38,430 --> 00:07:41,760
secret key<font color="#E5E5E5"> and again we have a</font>

235
00:07:40,230 --> 00:07:44,100
decryption algorithm<font color="#E5E5E5"> just takes us in</font><font color="#CCCCCC"> /</font>

236
00:07:41,760 --> 00:07:45,210
secret UNICEF<font color="#E5E5E5"> gives you a message so</font>

237
00:07:44,100 --> 00:07:47,220
what are the correct<font color="#E5E5E5"> meta comments from</font>

238
00:07:45,210 --> 00:07:48,719
such a<font color="#E5E5E5"> system the</font><font color="#CCCCCC"> first</font><font color="#E5E5E5"> requirement is</font>

239
00:07:47,220 --> 00:07:50,520
<font color="#E5E5E5">for the public interruptions</font><font color="#CCCCCC"> architects</font>

240
00:07:48,720 --> 00:07:52,380
<font color="#E5E5E5">if it says that if you</font><font color="#CCCCCC"> try to decrypt</font>

241
00:07:50,520 --> 00:07:53,880
<font color="#CCCCCC">any public key cipher</font><font color="#E5E5E5"> text using the</font>

242
00:07:52,380 --> 00:07:55,469
secret keys<font color="#E5E5E5"> generated by the key</font>

243
00:07:53,880 --> 00:07:56,670
<font color="#E5E5E5">generation algorithm then the output</font>

244
00:07:55,470 --> 00:08:00,030
should always be the message<font color="#E5E5E5"> that was</font>

245
00:07:56,670 --> 00:08:01,680
encrypted<font color="#E5E5E5"> that's good but now for</font><font color="#CCCCCC"> our</font>

246
00:08:00,030 --> 00:08:03,539
secret<font color="#E5E5E5"> key encryption we require that if</font>

247
00:08:01,680 --> 00:08:06,270
you try to decrypt<font color="#E5E5E5"> the secret key</font><font color="#CCCCCC"> cipher</font>

248
00:08:03,540 --> 00:08:08,010
<font color="#CCCCCC">text using secret</font><font color="#E5E5E5"> key then the output</font>

249
00:08:06,270 --> 00:08:10,080
should be<font color="#E5E5E5"> much it in the message</font><font color="#CCCCCC"> M</font><font color="#E5E5E5"> if</font>

250
00:08:08,010 --> 00:08:11,969
the predicate G<font color="#E5E5E5"> is satisfied on these</font>

251
00:08:10,080 --> 00:08:14,669
attribute strings<font color="#E5E5E5"> x and y and the</font>

252
00:08:11,970 --> 00:08:16,380
attribute<font color="#CCCCCC"> a and the policy that we want</font>

253
00:08:14,670 --> 00:08:18,840
on these attribute strings is that that

254
00:08:16,380 --> 00:08:20,940
at least<font color="#E5E5E5"> that in each bit position of</font>

255
00:08:18,840 --> 00:08:22,349
both these<font color="#E5E5E5"> bit strings</font><font color="#CCCCCC"> at least one</font><font color="#E5E5E5"> of</font>

256
00:08:20,940 --> 00:08:24,150
them<font color="#CCCCCC"> should be</font><font color="#E5E5E5"> one one of them should</font>

257
00:08:22,350 --> 00:08:26,190
allow decryption in a sense<font color="#E5E5E5"> it's just</font>

258
00:08:24,150 --> 00:08:30,150
<font color="#E5E5E5">basically</font><font color="#CCCCCC"> an and of on all these on</font>

259
00:08:26,190 --> 00:08:32,940
these two attribute strings<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> so</font>

260
00:08:30,150 --> 00:08:34,289
let's see<font color="#CCCCCC"> that or</font><font color="#E5E5E5"> actually I should also</font>

261
00:08:32,940 --> 00:08:35,700
<font color="#E5E5E5">tell you something about what are the</font>

262
00:08:34,289 --> 00:08:37,500
<font color="#CCCCCC">security properties</font><font color="#E5E5E5"> that we require from</font>

263
00:08:35,700 --> 00:08:39,120
<font color="#E5E5E5">mixed bit matching encryption the three</font>

264
00:08:37,500 --> 00:08:39,780
<font color="#E5E5E5">security properties</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> basically</font>

265
00:08:39,120 --> 00:08:42,090
<font color="#CCCCCC">they're</font><font color="#E5E5E5"> these are three different</font>

266
00:08:39,780 --> 00:08:44,550
<font color="#CCCCCC">flavors</font><font color="#E5E5E5"> of security properties the first</font>

267
00:08:42,090 --> 00:08:45,630
<font color="#E5E5E5">property is trying to say that you</font>

268
00:08:44,550 --> 00:08:47,400
should not<font color="#CCCCCC"> be able</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> distinguish</font>

269
00:08:45,630 --> 00:08:48,900
<font color="#CCCCCC">between two modes</font><font color="#E5E5E5"> of interruptions so we</font>

270
00:08:47,400 --> 00:08:51,060
have a secret key mode of encryption<font color="#CCCCCC"> we</font>

271
00:08:48,900 --> 00:08:52,770
have a public American<font color="#CCCCCC"> caption</font><font color="#E5E5E5"> if you</font>

272
00:08:51,060 --> 00:08:54,150
don't have some distinguishing<font color="#E5E5E5"> keys then</font>

273
00:08:52,770 --> 00:08:55,590
you should not<font color="#E5E5E5"> be</font><font color="#CCCCCC"> able to tell ok</font>

274
00:08:54,150 --> 00:08:57,840
<font color="#CCCCCC">whether you get a</font><font color="#E5E5E5"> public key cipher text</font>

275
00:08:55,590 --> 00:08:59,730
or a secret key cipher text<font color="#E5E5E5"> the second</font>

276
00:08:57,840 --> 00:09:00,180
<font color="#E5E5E5">property is sort of a</font><font color="#CCCCCC"> ciphertext</font><font color="#E5E5E5"> hiding</font>

277
00:08:59,730 --> 00:09:01,770
property

278
00:09:00,180 --> 00:09:03,359
<font color="#E5E5E5">it says that you should</font><font color="#CCCCCC"> not be able</font><font color="#E5E5E5"> to</font>

279
00:09:01,770 --> 00:09:05,189
<font color="#E5E5E5">distinguish</font><font color="#CCCCCC"> me in</font><font color="#E5E5E5"> to secret piece of</font>

280
00:09:03,360 --> 00:09:07,770
text if you<font color="#CCCCCC"> don't get any distinguishing</font>

281
00:09:05,190 --> 00:09:09,899
keys<font color="#E5E5E5"> basically they will exist some</font>

282
00:09:07,770 --> 00:09:12,569
distinguishing<font color="#CCCCCC"> keys which</font><font color="#E5E5E5"> can decrypt</font>

283
00:09:09,899 --> 00:09:15,089
<font color="#E5E5E5">one so application and not the other one</font>

284
00:09:12,570 --> 00:09:15,830
in that case<font color="#CCCCCC"> you should</font><font color="#E5E5E5"> not get</font><font color="#CCCCCC"> C</font><font color="#E5E5E5"> those</font>

285
00:09:15,089 --> 00:09:18,660
secret keys

286
00:09:15,830 --> 00:09:20,459
the last<font color="#CCCCCC"> security property is</font><font color="#E5E5E5"> called the</font>

287
00:09:18,660 --> 00:09:21,719
key hiding property<font color="#CCCCCC"> it says that you</font>

288
00:09:20,459 --> 00:09:22,829
should<font color="#CCCCCC"> not be</font><font color="#E5E5E5"> able to distinguish again</font>

289
00:09:21,720 --> 00:09:24,600
<font color="#CCCCCC">between two secret keys for two</font>

290
00:09:22,830 --> 00:09:26,310
<font color="#CCCCCC">different attribute vectors X n</font><font color="#E5E5E5"> 0 and X</font>

291
00:09:24,600 --> 00:09:27,720
1<font color="#CCCCCC"> again if you're not</font><font color="#E5E5E5"> giving some</font>

292
00:09:26,310 --> 00:09:29,729
distinguishing<font color="#E5E5E5"> subtext</font>

293
00:09:27,720 --> 00:09:30,870
I'm not going<font color="#E5E5E5"> to formalize exactly what</font>

294
00:09:29,730 --> 00:09:32,790
these distinguishing<font color="#E5E5E5"> subtext and</font>

295
00:09:30,870 --> 00:09:35,100
distinguishing keys means<font color="#E5E5E5"> but these can</font>

296
00:09:32,790 --> 00:09:37,709
be just some natural motions that<font color="#E5E5E5"> you</font>

297
00:09:35,100 --> 00:09:39,300
can imagine<font color="#CCCCCC"> alright so next let's see</font>

298
00:09:37,709 --> 00:09:41,399
how<font color="#CCCCCC"> we can use a mixed bit matching</font>

299
00:09:39,300 --> 00:09:44,640
encryption system<font color="#E5E5E5"> to build to realize a</font>

300
00:09:41,399 --> 00:09:46,170
<font color="#E5E5E5">risky</font><font color="#CCCCCC"> TV system what we do is that we</font>

301
00:09:44,640 --> 00:09:48,000
have<font color="#E5E5E5"> to do a set up algorithm and we</font>

302
00:09:46,170 --> 00:09:50,550
have to produce<font color="#CCCCCC"> this end secret keys</font><font color="#E5E5E5"> for</font>

303
00:09:48,000 --> 00:09:52,560
all<font color="#E5E5E5"> these users now let K be the</font>

304
00:09:50,550 --> 00:09:55,439
<font color="#E5E5E5">parameter that risky parameter that was</font>

305
00:09:52,560 --> 00:09:57,089
<font color="#E5E5E5">defined in the theorem before and what</font>

306
00:09:55,440 --> 00:09:59,250
<font color="#E5E5E5">we are trying</font><font color="#CCCCCC"> to say is that you're</font>

307
00:09:57,089 --> 00:10:01,980
trying<font color="#CCCCCC"> to say</font><font color="#E5E5E5"> if we choose this</font>

308
00:09:59,250 --> 00:10:04,140
parameter<font color="#E5E5E5"> K then we can catch at least</font><font color="#CCCCCC"> K</font>

309
00:10:01,980 --> 00:10:05,910
of the users if the<font color="#E5E5E5"> inverse uses some of</font>

310
00:10:04,140 --> 00:10:07,230
<font color="#E5E5E5">these K users then we can catch them</font>

311
00:10:05,910 --> 00:10:09,089
that doesn't make sense

312
00:10:07,230 --> 00:10:11,880
I'll try to elaborate more on it so what

313
00:10:09,089 --> 00:10:14,160
we do is<font color="#CCCCCC"> that we</font><font color="#E5E5E5"> run the</font><font color="#CCCCCC"> nbme setup with</font>

314
00:10:11,880 --> 00:10:15,689
the length parameter<font color="#E5E5E5"> to be k</font><font color="#CCCCCC"> plus 1 okay</font>

315
00:10:14,160 --> 00:10:17,610
<font color="#E5E5E5">is that risky parameter we get the</font>

316
00:10:15,690 --> 00:10:20,250
public<font color="#CCCCCC"> and a master secret</font><font color="#E5E5E5"> key now we</font>

317
00:10:17,610 --> 00:10:22,260
have to sample<font color="#CCCCCC"> these n secret keys for</font>

318
00:10:20,250 --> 00:10:24,209
the<font color="#CCCCCC"> trader tracing system so what we do</font>

319
00:10:22,260 --> 00:10:27,000
is that<font color="#CCCCCC"> we choose</font><font color="#E5E5E5"> a random window of</font>

320
00:10:24,209 --> 00:10:28,560
size<font color="#CCCCCC"> K out of all these</font><font color="#E5E5E5"> end users</font><font color="#CCCCCC"> what</font>

321
00:10:27,000 --> 00:10:30,029
we're trying<font color="#E5E5E5"> to say here is</font><font color="#CCCCCC"> that if the</font>

322
00:10:28,560 --> 00:10:31,859
adverse<font color="#E5E5E5"> recur ups one of these users in</font>

323
00:10:30,029 --> 00:10:33,240
<font color="#E5E5E5">this window then basically we can catch</font>

324
00:10:31,860 --> 00:10:35,100
one<font color="#CCCCCC"> of these users if they are being</font>

325
00:10:33,240 --> 00:10:36,570
<font color="#CCCCCC">used to create a decoding device if</font><font color="#E5E5E5"> you</font>

326
00:10:35,100 --> 00:10:39,120
use<font color="#E5E5E5"> something outside it maybe we can't</font>

327
00:10:36,570 --> 00:10:40,620
catch it<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is a target window what we</font>

328
00:10:39,120 --> 00:10:43,260
do is<font color="#CCCCCC"> that we select the target</font><font color="#E5E5E5"> window</font>

329
00:10:40,620 --> 00:10:44,040
and then<font color="#E5E5E5"> we set the attribute vectors as</font>

330
00:10:43,260 --> 00:10:47,069
follows

331
00:10:44,040 --> 00:10:49,140
we say if your index lies<font color="#E5E5E5"> before the</font>

332
00:10:47,070 --> 00:10:51,150
start the<font color="#E5E5E5"> window start location the</font>

333
00:10:49,140 --> 00:10:52,949
target window<font color="#E5E5E5"> start location then your</font>

334
00:10:51,150 --> 00:10:55,890
attribute vector will be<font color="#E5E5E5"> all 0 string if</font>

335
00:10:52,950 --> 00:10:57,630
you're inside the window then the

336
00:10:55,890 --> 00:10:59,520
attribute vector will have<font color="#E5E5E5"> one more one</font>

337
00:10:57,630 --> 00:11:01,860
than<font color="#CCCCCC"> the previous index that</font><font color="#E5E5E5"> you have so</font>

338
00:10:59,520 --> 00:11:04,230
the X this the<font color="#CCCCCC"> the first attribute</font>

339
00:11:01,860 --> 00:11:06,240
vector and the window has one in the

340
00:11:04,230 --> 00:11:08,040
<font color="#E5E5E5">last the next one has two ones and the</font>

341
00:11:06,240 --> 00:11:09,990
<font color="#E5E5E5">last one has once in the all the</font>

342
00:11:08,040 --> 00:11:11,310
position but except the<font color="#E5E5E5"> first one and if</font>

343
00:11:09,990 --> 00:11:13,290
<font color="#CCCCCC">you are outside</font><font color="#E5E5E5"> the window</font><font color="#CCCCCC"> on the other</font>

344
00:11:11,310 --> 00:11:13,768
<font color="#E5E5E5">side then it's going to be the old ones</font>

345
00:11:13,290 --> 00:11:15,689
actually

346
00:11:13,769 --> 00:11:17,999
vector we said the attribute vectors

347
00:11:15,689 --> 00:11:19,199
<font color="#E5E5E5">this way we run the</font><font color="#CCCCCC"> MDM a key generation</font>

348
00:11:17,999 --> 00:11:21,360
algorithm<font color="#E5E5E5"> we get the corresponding</font>

349
00:11:19,199 --> 00:11:23,209
<font color="#E5E5E5">secret keys and that's how we sample the</font>

350
00:11:21,360 --> 00:11:25,170
<font color="#CCCCCC">end-user secret</font><font color="#E5E5E5"> keys and system</font>

351
00:11:23,209 --> 00:11:26,790
<font color="#E5E5E5">basically the functionality</font><font color="#CCCCCC"> of this</font>

352
00:11:25,170 --> 00:11:30,179
distinguishing is captured in this

353
00:11:26,790 --> 00:11:31,410
window<font color="#CCCCCC"> that we select now how did we</font>

354
00:11:30,179 --> 00:11:33,149
<font color="#E5E5E5">encryption and decryption that's pretty</font>

355
00:11:31,410 --> 00:11:34,350
<font color="#CCCCCC">straightforward</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> just run the MDM</font><font color="#E5E5E5"> you</font>

356
00:11:33,149 --> 00:11:35,910
public key encryption and<font color="#E5E5E5"> the</font>

357
00:11:34,350 --> 00:11:37,199
corresponding<font color="#CCCCCC"> me caption algorithm just</font>

358
00:11:35,910 --> 00:11:38,759
<font color="#E5E5E5">to give you the encryption and</font>

359
00:11:37,199 --> 00:11:41,069
decryption<font color="#E5E5E5"> and you can just clearly</font>

360
00:11:38,759 --> 00:11:43,079
check<font color="#E5E5E5"> if the underlying</font><font color="#CCCCCC"> nbme</font><font color="#E5E5E5"> system</font>

361
00:11:41,069 --> 00:11:44,610
gives you correctness<font color="#E5E5E5"> in the public key</font>

362
00:11:43,079 --> 00:11:46,799
setting and this gives you a correctness

363
00:11:44,610 --> 00:11:48,569
in the<font color="#E5E5E5"> trader tracing seven all</font><font color="#CCCCCC"> right</font>

364
00:11:46,799 --> 00:11:49,829
but let's<font color="#E5E5E5"> move on to the more</font>

365
00:11:48,569 --> 00:11:51,509
<font color="#CCCCCC">interesting case which is how to</font><font color="#E5E5E5"> build</font>

366
00:11:49,829 --> 00:11:54,508
<font color="#CCCCCC">trader</font><font color="#E5E5E5"> tracing how to build the tracing</font>

367
00:11:51,509 --> 00:11:55,649
algorithm with this framework<font color="#E5E5E5"> so the</font>

368
00:11:54,509 --> 00:11:57,059
idea is that<font color="#E5E5E5"> we</font><font color="#CCCCCC"> have this much</font>

369
00:11:55,649 --> 00:11:58,529
<font color="#CCCCCC">substitute</font><font color="#E5E5E5"> here and two messages and you</font>

370
00:11:57,059 --> 00:12:00,779
won't trace it what we<font color="#E5E5E5"> will do is that</font>

371
00:11:58,529 --> 00:12:03,269
<font color="#E5E5E5">we will choose some random message</font><font color="#CCCCCC"> m out</font>

372
00:12:00,779 --> 00:12:05,249
of these two<font color="#E5E5E5"> messages m0 m1 let the</font>

373
00:12:03,269 --> 00:12:06,869
random<font color="#E5E5E5"> message be mb and we'll compute</font>

374
00:12:05,249 --> 00:12:08,699
the falling surf text<font color="#CCCCCC"> we will</font><font color="#E5E5E5"> compute</font>

375
00:12:06,869 --> 00:12:10,499
the<font color="#E5E5E5"> cipher text</font><font color="#CCCCCC"> the secret key version</font>

376
00:12:08,699 --> 00:12:11,878
of these<font color="#E5E5E5"> effects for different</font><font color="#CCCCCC"> attribute</font>

377
00:12:10,499 --> 00:12:13,350
vectors<font color="#E5E5E5"> where the first attribute</font>

378
00:12:11,879 --> 00:12:14,970
vectors all<font color="#CCCCCC"> wants the second attribute</font>

379
00:12:13,350 --> 00:12:17,670
vector is all<font color="#E5E5E5"> ones except the last bit</font>

380
00:12:14,970 --> 00:12:19,589
is<font color="#CCCCCC"> zero and so on</font><font color="#E5E5E5"> now what</font><font color="#CCCCCC"> we're</font><font color="#E5E5E5"> trying</font>

381
00:12:17,670 --> 00:12:21,209
<font color="#E5E5E5">to do is that the first</font><font color="#CCCCCC"> cipher text can</font>

382
00:12:19,589 --> 00:12:22,679
<font color="#CCCCCC">be decrypted by all the parties the</font>

383
00:12:21,209 --> 00:12:24,839
second<font color="#E5E5E5"> cipher text can</font><font color="#CCCCCC"> be decrypted by</font>

384
00:12:22,679 --> 00:12:26,790
all the parties that<font color="#CCCCCC"> that whose index</font><font color="#E5E5E5"> is</font>

385
00:12:24,839 --> 00:12:28,350
larger than<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Windows Start location</font>

386
00:12:26,790 --> 00:12:29,819
the second one will be whose<font color="#E5E5E5"> windows</font>

387
00:12:28,350 --> 00:12:31,410
start looking<font color="#E5E5E5"> whose index is larger than</font>

388
00:12:29,819 --> 00:12:31,860
the<font color="#CCCCCC"> windows start location</font><font color="#E5E5E5"> plus one and</font>

389
00:12:31,410 --> 00:12:34,079
so on

390
00:12:31,860 --> 00:12:36,600
<font color="#E5E5E5">basically all these</font><font color="#CCCCCC"> subjects to</font><font color="#E5E5E5"> kill the</font>

391
00:12:34,079 --> 00:12:39,809
functionality<font color="#E5E5E5"> of one user in the window</font>

392
00:12:36,600 --> 00:12:41,850
<font color="#E5E5E5">one by one from</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> left side so what we</font>

393
00:12:39,809 --> 00:12:43,319
do is<font color="#CCCCCC"> that we</font><font color="#E5E5E5"> create such a text we run</font>

394
00:12:41,850 --> 00:12:45,119
the decoding device on it on these

395
00:12:43,319 --> 00:12:47,459
architects and then we basically<font color="#E5E5E5"> check</font>

396
00:12:45,119 --> 00:12:49,980
<font color="#CCCCCC">whether decoder works correctly</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> these</font>

397
00:12:47,459 --> 00:12:51,689
type of<font color="#CCCCCC"> cipher text or not</font><font color="#E5E5E5"> finally we</font>

398
00:12:49,980 --> 00:12:53,730
run this we<font color="#CCCCCC"> do this</font><font color="#E5E5E5"> check multiple times</font>

399
00:12:51,689 --> 00:12:55,799
<font color="#E5E5E5">basically to come up with some estimate</font>

400
00:12:53,730 --> 00:12:57,540
of successful decryption probability so

401
00:12:55,799 --> 00:12:59,639
for<font color="#E5E5E5"> scheme we get the exact successful</font>

402
00:12:57,540 --> 00:13:01,319
decryption probability then what we<font color="#E5E5E5"> are</font>

403
00:12:59,639 --> 00:13:03,749
trying<font color="#E5E5E5"> to begin here is that whether the</font>

404
00:13:01,319 --> 00:13:05,610
the decoding device can distinguish if

405
00:13:03,749 --> 00:13:07,410
we kill out the<font color="#E5E5E5"> functionality of one of</font>

406
00:13:05,610 --> 00:13:09,709
the<font color="#E5E5E5"> users in</font><font color="#CCCCCC"> that particular window if</font>

407
00:13:07,410 --> 00:13:12,509
the decoding device can distinguish the

408
00:13:09,709 --> 00:13:14,699
can distinguish between the

409
00:13:12,509 --> 00:13:16,199
functionality for<font color="#CCCCCC"> these</font><font color="#E5E5E5"> two</font><font color="#CCCCCC"> surf X then</font>

410
00:13:14,699 --> 00:13:17,819
<font color="#E5E5E5">that means</font><font color="#CCCCCC"> ok you have that particular</font>

411
00:13:16,199 --> 00:13:18,748
secret<font color="#E5E5E5"> key if you don't have the</font>

412
00:13:17,819 --> 00:13:21,118
security<font color="#CCCCCC"> you should not be able to</font>

413
00:13:18,749 --> 00:13:22,949
distinguish between these<font color="#CCCCCC"> two steps so</font>

414
00:13:21,119 --> 00:13:24,720
what we<font color="#CCCCCC"> just see is that if there any</font>

415
00:13:22,949 --> 00:13:26,878
two<font color="#E5E5E5"> adjacent probabilities P I and P I</font>

416
00:13:24,720 --> 00:13:27,730
plus 1 which are sufficiently<font color="#CCCCCC"> or</font>

417
00:13:26,879 --> 00:13:29,799
<font color="#E5E5E5">noticeably</font><font color="#CCCCCC"> for</font>

418
00:13:27,730 --> 00:13:33,279
then we add<font color="#E5E5E5"> the corresponding index to</font>

419
00:13:29,799 --> 00:13:35,019
the set of<font color="#E5E5E5"> traders and since I do not</font>

420
00:13:33,279 --> 00:13:37,660
<font color="#E5E5E5">have much time I won't go into security</font>

421
00:13:35,019 --> 00:13:39,129
proof<font color="#E5E5E5"> but I'll</font><font color="#CCCCCC"> just briefly say that</font><font color="#E5E5E5"> the</font>

422
00:13:37,660 --> 00:13:40,540
<font color="#E5E5E5">proof techniques that we used to prove</font>

423
00:13:39,129 --> 00:13:42,249
security of a risky<font color="#E5E5E5"> trade addressing</font>

424
00:13:40,540 --> 00:13:43,540
scheme<font color="#E5E5E5"> they significantly depart from</font>

425
00:13:42,249 --> 00:13:45,879
the techniques used<font color="#E5E5E5"> in the trader</font>

426
00:13:43,540 --> 00:13:48,429
tracing literature<font color="#E5E5E5"> because we have to</font>

427
00:13:45,879 --> 00:13:50,169
include<font color="#E5E5E5"> this parameter of K by</font><font color="#CCCCCC"> n</font><font color="#E5E5E5"> in the</font>

428
00:13:48,429 --> 00:13:52,059
inequalities and that<font color="#E5E5E5"> causes some</font>

429
00:13:50,169 --> 00:13:53,350
problems<font color="#CCCCCC"> so it's</font><font color="#E5E5E5"> ably nice proof</font><font color="#CCCCCC"> and</font>

430
00:13:52,059 --> 00:13:55,209
maybe you want to<font color="#E5E5E5"> look</font><font color="#CCCCCC"> at it in the</font>

431
00:13:53,350 --> 00:13:56,829
paper<font color="#E5E5E5"> also</font><font color="#CCCCCC"> I didn't have enough time to</font>

432
00:13:55,209 --> 00:13:58,179
<font color="#E5E5E5">tell you more about how to build</font><font color="#CCCCCC"> mix</font>

433
00:13:56,829 --> 00:14:00,368
with matching encryption<font color="#E5E5E5"> from bi linear</font>

434
00:13:58,179 --> 00:14:02,410
maps<font color="#CCCCCC"> like till you look at the paper for</font>

435
00:14:00,369 --> 00:14:04,089
<font color="#CCCCCC">that as well and we also</font><font color="#E5E5E5"> give some</font>

436
00:14:02,410 --> 00:14:06,249
generic risky amplification so how to

437
00:14:04,089 --> 00:14:08,139
combine<font color="#E5E5E5"> two different risky</font><font color="#CCCCCC"> to trader</font>

438
00:14:06,249 --> 00:14:10,689
<font color="#E5E5E5">tracing schemes to amplify the success</font>

439
00:14:08,139 --> 00:14:11,889
probability<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> with that I'll hand</font>

440
00:14:10,689 --> 00:14:15,358
<font color="#E5E5E5">it over to Luke and he'll tell you more</font>

441
00:14:11,889 --> 00:14:15,359
<font color="#CCCCCC">about differential privacy net results</font>

442
00:14:24,390 --> 00:14:29,420
I hope everyone has their<font color="#CCCCCC"> I clicker</font><font color="#E5E5E5"> is</font>

443
00:14:26,220 --> 00:14:31,560
set to<font color="#CCCCCC"> double</font><font color="#E5E5E5"> a it's gonna be important</font>

444
00:14:29,420 --> 00:14:34,199
<font color="#E5E5E5">all right so I'm</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> switch gears</font><font color="#CCCCCC"> here</font>

445
00:14:31,560 --> 00:14:35,579
a little<font color="#E5E5E5"> bit and talk about</font><font color="#CCCCCC"> hardest</font>

446
00:14:34,200 --> 00:14:38,760
results for answering statistical

447
00:14:35,580 --> 00:14:40,050
queries with<font color="#E5E5E5"> difference</font><font color="#CCCCCC"> or privacy and</font>

448
00:14:38,760 --> 00:14:43,740
so what's the connection<font color="#E5E5E5"> to the previous</font>

449
00:14:40,050 --> 00:14:45,689
talk why<font color="#E5E5E5"> are we soft merged here in 2009</font>

450
00:14:43,740 --> 00:14:47,370
work it all showed that any trader

451
00:14:45,690 --> 00:14:48,990
tracing<font color="#E5E5E5"> scheme immediately implies a</font>

452
00:14:47,370 --> 00:14:51,570
<font color="#E5E5E5">differential privacy hardness result</font>

453
00:14:48,990 --> 00:14:53,760
where the quality of the result<font color="#E5E5E5"> depends</font>

454
00:14:51,570 --> 00:14:56,180
<font color="#CCCCCC">on the size</font><font color="#E5E5E5"> of the secret keys and</font>

455
00:14:53,760 --> 00:14:58,350
<font color="#CCCCCC">ciphertext</font><font color="#E5E5E5"> for the trader tracing scheme</font>

456
00:14:56,180 --> 00:15:00,150
so kind of<font color="#E5E5E5"> the state of the art for</font>

457
00:14:58,350 --> 00:15:02,130
trader tracing schemes with small cipher

458
00:15:00,150 --> 00:15:05,100
<font color="#E5E5E5">texts and secret keys up until up until</font>

459
00:15:02,130 --> 00:15:06,689
now<font color="#CCCCCC"> is bone ang</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> reads trader tracing</font>

460
00:15:05,100 --> 00:15:08,220
scheme which<font color="#CCCCCC"> is built using one-way</font>

461
00:15:06,690 --> 00:15:10,860
functions and in distinguishability

462
00:15:08,220 --> 00:15:13,050
obfuscation<font color="#CCCCCC"> so this gives a</font><font color="#E5E5E5"> good lower</font>

463
00:15:10,860 --> 00:15:14,700
bound<font color="#CCCCCC"> for differential privacy</font><font color="#E5E5E5"> but we'd</font>

464
00:15:13,050 --> 00:15:15,839
<font color="#E5E5E5">like to get our lower bounds to depend</font>

465
00:15:14,700 --> 00:15:19,560
on kind of<font color="#E5E5E5"> the most conservative</font>

466
00:15:15,840 --> 00:15:21,810
assumptions possible<font color="#E5E5E5"> and so it's the</font>

467
00:15:19,560 --> 00:15:23,400
previous work of<font color="#CCCCCC"> rishabh at all showed</font>

468
00:15:21,810 --> 00:15:24,869
that it's sufficient<font color="#E5E5E5"> to consider a</font>

469
00:15:23,400 --> 00:15:26,939
weaker<font color="#E5E5E5"> version of trader tracing their</font>

470
00:15:24,870 --> 00:15:29,010
risky trader tracing scheme that<font color="#E5E5E5"> will</font>

471
00:15:26,940 --> 00:15:31,710
get the same<font color="#E5E5E5"> lower bound</font><font color="#CCCCCC"> for</font>

472
00:15:29,010 --> 00:15:33,330
differential<font color="#CCCCCC"> privacy and since they're</font>

473
00:15:31,710 --> 00:15:34,740
considering a weaker notion of trader

474
00:15:33,330 --> 00:15:39,960
tracing they're able<font color="#E5E5E5"> to build this using</font>

475
00:15:34,740 --> 00:15:41,670
just<font color="#CCCCCC"> bilinear</font><font color="#E5E5E5"> groups in our work we</font>

476
00:15:39,960 --> 00:15:43,230
consider a trader tracing scheme and

477
00:15:41,670 --> 00:15:44,870
build one<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> even worse</font><font color="#CCCCCC"> than all</font>

478
00:15:43,230 --> 00:15:47,160
these other<font color="#E5E5E5"> trading tracing schemes</font>

479
00:15:44,870 --> 00:15:48,600
it's still sufficient to prove<font color="#E5E5E5"> the</font>

480
00:15:47,160 --> 00:15:50,280
differential privacy lower bound though

481
00:15:48,600 --> 00:15:51,900
and since we consider such a weak

482
00:15:50,280 --> 00:15:53,490
version<font color="#E5E5E5"> of trader tracing we're</font><font color="#CCCCCC"> able to</font>

483
00:15:51,900 --> 00:15:55,050
build it<font color="#CCCCCC"> just using one-way functions so</font>

484
00:15:53,490 --> 00:15:59,340
we've<font color="#E5E5E5"> reduced the</font><font color="#CCCCCC"> assumptions face to</font>

485
00:15:55,050 --> 00:16:00,569
just<font color="#CCCCCC"> that so what exactly</font><font color="#E5E5E5"> is the</font>

486
00:15:59,340 --> 00:16:02,220
hardness result that we're going to<font color="#E5E5E5"> talk</font>

487
00:16:00,570 --> 00:16:03,780
<font color="#CCCCCC">about like</font><font color="#E5E5E5"> what does it mean to answer</font>

488
00:16:02,220 --> 00:16:06,210
statistical queries with differential

489
00:16:03,780 --> 00:16:07,980
privacy<font color="#E5E5E5"> so we're in a setting</font><font color="#CCCCCC"> where we</font>

490
00:16:06,210 --> 00:16:10,350
have some database that has n elements

491
00:16:07,980 --> 00:16:12,690
<font color="#CCCCCC">and each element</font><font color="#E5E5E5"> assemblers data and</font>

492
00:16:10,350 --> 00:16:15,630
each<font color="#E5E5E5"> individual's data comes from this</font>

493
00:16:12,690 --> 00:16:17,580
data universe that I'll denote<font color="#E5E5E5"> by X and</font>

494
00:16:15,630 --> 00:16:19,410
we<font color="#E5E5E5"> want to answer statistical queries on</font>

495
00:16:17,580 --> 00:16:21,840
this data set and these are queries of

496
00:16:19,410 --> 00:16:24,209
<font color="#E5E5E5">the form what fraction of</font><font color="#CCCCCC"> individuals in</font>

497
00:16:21,840 --> 00:16:25,710
this data set satisfies some<font color="#CCCCCC"> predicate P</font>

498
00:16:24,210 --> 00:16:27,540
and the collection of<font color="#E5E5E5"> all</font><font color="#CCCCCC"> these</font>

499
00:16:25,710 --> 00:16:30,810
predicates<font color="#E5E5E5"> will be called the query set</font>

500
00:16:27,540 --> 00:16:33,030
capital<font color="#E5E5E5"> Q and</font><font color="#CCCCCC"> we want to do this task</font>

501
00:16:30,810 --> 00:16:35,219
<font color="#E5E5E5">with differential</font><font color="#CCCCCC"> privacy which means</font>

502
00:16:33,030 --> 00:16:37,050
that we do it in a way that<font color="#E5E5E5"> such that no</font>

503
00:16:35,220 --> 00:16:37,520
one<font color="#E5E5E5"> individuals data has significant</font>

504
00:16:37,050 --> 00:16:40,099
<font color="#CCCCCC">influence</font>

505
00:16:37,520 --> 00:16:41,689
<font color="#E5E5E5">on our answers it's a little bit more</font>

506
00:16:40,100 --> 00:16:43,880
formally we're in this<font color="#CCCCCC"> non-interactive</font>

507
00:16:41,690 --> 00:16:45,230
difference of privacy setting<font color="#CCCCCC"> we're from</font>

508
00:16:43,880 --> 00:16:47,840
some database I<font color="#E5E5E5"> want to be able to</font>

509
00:16:45,230 --> 00:16:50,030
create<font color="#E5E5E5"> a summary s that can be</font>

510
00:16:47,840 --> 00:16:52,190
interacted with<font color="#E5E5E5"> by any algorithm to ask</font>

511
00:16:50,030 --> 00:16:54,770
to<font color="#E5E5E5"> receive answers to queries for all</font>

512
00:16:52,190 --> 00:16:56,390
the<font color="#E5E5E5"> queries on the query set and the</font>

513
00:16:54,770 --> 00:16:59,500
guarantee<font color="#CCCCCC"> for difference or privacy says</font>

514
00:16:56,390 --> 00:17:01,880
that for any<font color="#CCCCCC"> two adjacent</font><font color="#E5E5E5"> data sets so</font>

515
00:16:59,500 --> 00:17:03,980
we're chasin means that they<font color="#E5E5E5"> differ in</font>

516
00:17:01,880 --> 00:17:05,270
<font color="#E5E5E5">exactly one element so here D star is</font>

517
00:17:03,980 --> 00:17:07,130
adjacent<font color="#E5E5E5"> because it</font><font color="#CCCCCC"> differs in the</font>

518
00:17:05,270 --> 00:17:10,430
<font color="#E5E5E5">second element so</font><font color="#CCCCCC"> I've</font><font color="#E5E5E5"> changed</font>

519
00:17:07,130 --> 00:17:12,620
X<font color="#E5E5E5"> 2 to y 2 so for any two adjacent data</font>

520
00:17:10,430 --> 00:17:15,380
sets<font color="#CCCCCC"> then if we use the the other data</font>

521
00:17:12,619 --> 00:17:17,060
set to construct the<font color="#E5E5E5"> same summary then</font>

522
00:17:15,380 --> 00:17:18,530
the behavior of the adversary

523
00:17:17,060 --> 00:17:20,300
interacting with the summary shouldn't

524
00:17:18,530 --> 00:17:24,349
change up<font color="#CCCCCC"> to some small statistical</font>

525
00:17:20,300 --> 00:17:25,940
difference<font color="#CCCCCC"> so that's the task and so the</font>

526
00:17:24,349 --> 00:17:27,589
question<font color="#E5E5E5"> is can</font><font color="#CCCCCC"> we do this</font><font color="#E5E5E5"> can we</font>

527
00:17:25,940 --> 00:17:29,990
efficiently answer statistical queries

528
00:17:27,589 --> 00:17:31,940
with differential privacy<font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of how</font>

529
00:17:29,990 --> 00:17:34,340
hard<font color="#E5E5E5"> it is</font><font color="#CCCCCC"> to do</font><font color="#E5E5E5"> this depends on how</font>

530
00:17:31,940 --> 00:17:35,630
<font color="#E5E5E5">large of a query set and how large of a</font>

531
00:17:34,340 --> 00:17:38,870
data universe you want to be able<font color="#CCCCCC"> to</font>

532
00:17:35,630 --> 00:17:40,880
support<font color="#E5E5E5"> so</font><font color="#CCCCCC"> blum</font><font color="#E5E5E5"> it all and work it all</font>

533
00:17:38,870 --> 00:17:42,620
show that<font color="#E5E5E5"> if both of these sets are</font>

534
00:17:40,880 --> 00:17:44,990
polynomial a large in the size of<font color="#CCCCCC"> the</font>

535
00:17:42,620 --> 00:17:46,610
<font color="#E5E5E5">database</font><font color="#CCCCCC"> then it is possible to</font><font color="#E5E5E5"> answer</font>

536
00:17:44,990 --> 00:17:50,210
specific queries<font color="#CCCCCC"> a difference or privacy</font>

537
00:17:46,610 --> 00:17:51,469
in an efficient manner<font color="#E5E5E5"> and like I</font><font color="#CCCCCC"> said</font>

538
00:17:50,210 --> 00:17:53,210
<font color="#CCCCCC">before the trader trading scheme of</font>

539
00:17:51,470 --> 00:17:54,710
<font color="#CCCCCC">Bonadies Andriy combined with the</font><font color="#E5E5E5"> de</font>

540
00:17:53,210 --> 00:17:57,500
<font color="#E5E5E5">Voort could all lower bound show that</font>

541
00:17:54,710 --> 00:17:59,900
there is<font color="#CCCCCC"> a there is a set</font><font color="#E5E5E5"> of queries and</font>

542
00:17:57,500 --> 00:18:03,860
data universe that is super polynomial<font color="#E5E5E5"> a</font>

543
00:17:59,900 --> 00:18:06,680
large in the data set<font color="#E5E5E5"> size for which</font>

544
00:18:03,860 --> 00:18:09,649
this task is impossible<font color="#E5E5E5"> efficiently</font><font color="#CCCCCC"> and</font>

545
00:18:06,680 --> 00:18:12,470
it isn't<font color="#CCCCCC"> 16 we showed that it's actually</font>

546
00:18:09,650 --> 00:18:14,210
<font color="#CCCCCC">okay for either</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> the two sets to be</font>

547
00:18:12,470 --> 00:18:17,090
super polynomial large to show<font color="#E5E5E5"> that this</font>

548
00:18:14,210 --> 00:18:18,700
<font color="#E5E5E5">is not possible</font><font color="#CCCCCC"> and so</font><font color="#E5E5E5"> this is good and</font>

549
00:18:17,090 --> 00:18:20,689
<font color="#CCCCCC">it kind of gives us a nearly complete</font>

550
00:18:18,700 --> 00:18:22,700
picture of the complexity of this

551
00:18:20,690 --> 00:18:25,520
problem except for the problem<font color="#CCCCCC"> that all</font>

552
00:18:22,700 --> 00:18:27,170
these all these lower<font color="#E5E5E5"> bounds assume is</font>

553
00:18:25,520 --> 00:18:29,060
<font color="#E5E5E5">in distinguishing bility obfuscation and</font>

554
00:18:27,170 --> 00:18:29,780
we'd like to<font color="#CCCCCC"> get</font><font color="#E5E5E5"> rid of that and this</font>

555
00:18:29,060 --> 00:18:32,690
prompts

556
00:18:29,780 --> 00:18:34,700
<font color="#CCCCCC">Salil Adan in 2016 in his survey on</font>

557
00:18:32,690 --> 00:18:36,380
differential<font color="#CCCCCC"> privacy</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> posed as an open</font>

558
00:18:34,700 --> 00:18:38,360
problem<font color="#E5E5E5"> if any of these hardest results</font>

559
00:18:36,380 --> 00:18:40,100
can<font color="#CCCCCC"> be replicated under</font><font color="#E5E5E5"> a quote a more</font>

560
00:18:38,360 --> 00:18:43,729
standard and<font color="#CCCCCC"> widely believed complexity</font>

561
00:18:40,100 --> 00:18:46,070
assumption and so you can kind of view

562
00:18:43,730 --> 00:18:48,350
<font color="#E5E5E5">the work of</font><font color="#CCCCCC"> rishabh at all and our paper</font>

563
00:18:46,070 --> 00:18:50,639
as a<font color="#E5E5E5"> partial answer of yes to</font><font color="#CCCCCC"> this</font>

564
00:18:48,350 --> 00:18:53,179
<font color="#CCCCCC">question where we replicate the low</font>

565
00:18:50,640 --> 00:18:55,560
<font color="#CCCCCC">bounine Andria's trader tracing scheme</font>

566
00:18:53,180 --> 00:18:59,400
<font color="#CCCCCC">without having to assume by</font><font color="#E5E5E5"> linear maps</font>

567
00:18:55,560 --> 00:19:01,440
<font color="#E5E5E5">so in</font><font color="#CCCCCC"> Rishabha dolls paper they assumed</font>

568
00:18:59,400 --> 00:19:03,270
just bilinear map machinery<font color="#E5E5E5"> and in our</font>

569
00:19:01,440 --> 00:19:06,300
paper we just<font color="#CCCCCC"> assume one-way functions</font>

570
00:19:03,270 --> 00:19:07,889
and our result actually<font color="#E5E5E5"> goes a little</font>

571
00:19:06,300 --> 00:19:10,800
bit further<font color="#CCCCCC"> past</font><font color="#E5E5E5"> this bottom right box</font>

572
00:19:07,890 --> 00:19:15,320
in the key direction to<font color="#E5E5E5"> achieve a</font>

573
00:19:10,800 --> 00:19:15,320
slightly<font color="#E5E5E5"> better super polynomial found</font>

574
00:19:16,040 --> 00:19:19,920
so<font color="#E5E5E5"> I'll talk a little bit about the</font>

575
00:19:18,180 --> 00:19:24,360
techniques that we use<font color="#E5E5E5"> basically</font><font color="#CCCCCC"> both</font>

576
00:19:19,920 --> 00:19:25,680
papers use a modified version<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> the</font>

577
00:19:24,360 --> 00:19:28,800
lower bound argument of the original

578
00:19:25,680 --> 00:19:31,050
<font color="#CCCCCC">Devore cat all paper and so I'll explain</font>

579
00:19:28,800 --> 00:19:32,639
<font color="#E5E5E5">that first so we're gonna construct a</font>

580
00:19:31,050 --> 00:19:34,889
setting<font color="#CCCCCC"> that we show is impossible to</font>

581
00:19:32,640 --> 00:19:37,620
answer<font color="#E5E5E5"> specifically these statistical</font>

582
00:19:34,890 --> 00:19:39,990
queries<font color="#CCCCCC"> of differential privacy and so</font>

583
00:19:37,620 --> 00:19:42,540
consider consider a database where each

584
00:19:39,990 --> 00:19:44,550
of the elements is a secret key in a

585
00:19:42,540 --> 00:19:45,870
trader tracing scheme<font color="#E5E5E5"> and we're going to</font>

586
00:19:44,550 --> 00:19:47,480
consider<font color="#E5E5E5"> answering the statistical</font>

587
00:19:45,870 --> 00:19:50,010
queries of<font color="#CCCCCC"> a following</font><font color="#E5E5E5"> form which are</font>

588
00:19:47,480 --> 00:19:54,210
parameterised by cipher texts in the

589
00:19:50,010 --> 00:19:57,240
trader trading scheme so the query for

590
00:19:54,210 --> 00:19:59,100
ciphertext C asks what fraction<font color="#E5E5E5"> of the</font>

591
00:19:57,240 --> 00:20:03,180
database<font color="#CCCCCC"> decrypt the cipher text C to</font>

592
00:19:59,100 --> 00:20:05,790
<font color="#CCCCCC">one and so this</font><font color="#E5E5E5"> gives us a query set of</font>

593
00:20:03,180 --> 00:20:08,190
size<font color="#E5E5E5"> 2</font><font color="#CCCCCC"> to the size of</font><font color="#E5E5E5"> each</font><font color="#CCCCCC"> cipher text</font>

594
00:20:05,790 --> 00:20:10,710
and<font color="#CCCCCC"> data Universal size to the size of</font>

595
00:20:08,190 --> 00:20:14,090
each<font color="#E5E5E5"> secret key because we have</font><font color="#CCCCCC"> one</font>

596
00:20:10,710 --> 00:20:17,400
aquarii for every cipher<font color="#E5E5E5"> text and one</font>

597
00:20:14,090 --> 00:20:19,500
and so the key observation<font color="#CCCCCC"> in this</font>

598
00:20:17,400 --> 00:20:21,900
<font color="#CCCCCC">argument to show</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> this particular</font>

599
00:20:19,500 --> 00:20:24,300
situation<font color="#E5E5E5"> is</font><font color="#CCCCCC"> impossible</font><font color="#E5E5E5"> is that in this</font>

600
00:20:21,900 --> 00:20:26,430
in this setting<font color="#E5E5E5"> any summary s that</font>

601
00:20:24,300 --> 00:20:28,710
answers<font color="#E5E5E5"> these queries is itself a pirate</font>

602
00:20:26,430 --> 00:20:30,780
decoder and<font color="#E5E5E5"> you can see this because</font>

603
00:20:28,710 --> 00:20:32,670
every<font color="#E5E5E5"> element in the database is a</font>

604
00:20:30,780 --> 00:20:35,129
secret key and<font color="#E5E5E5"> so if we have</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> cipher</font>

605
00:20:32,670 --> 00:20:37,140
<font color="#CCCCCC">text</font><font color="#E5E5E5"> then either all the secret keys in</font>

606
00:20:35,130 --> 00:20:38,460
this database<font color="#E5E5E5"> decrypt the cipher text</font><font color="#CCCCCC"> of</font>

607
00:20:37,140 --> 00:20:41,190
one say the cipher text<font color="#CCCCCC"> is either</font>

608
00:20:38,460 --> 00:20:42,930
<font color="#CCCCCC">encryption of</font><font color="#E5E5E5"> 1 or 0</font><font color="#CCCCCC"> so either all the</font>

609
00:20:41,190 --> 00:20:44,490
secret<font color="#CCCCCC"> keys decrypted to one or all the</font>

610
00:20:42,930 --> 00:20:47,280
secret<font color="#CCCCCC"> keys dont decrypted to one they</font>

611
00:20:44,490 --> 00:20:48,750
decrypt it to<font color="#E5E5E5"> 0</font><font color="#CCCCCC"> so the answer to the</font>

612
00:20:47,280 --> 00:20:50,700
statistical query is either going to<font color="#E5E5E5"> be</font>

613
00:20:48,750 --> 00:20:54,210
1 or 0 which is the decryption<font color="#E5E5E5"> of that</font>

614
00:20:50,700 --> 00:20:56,190
<font color="#E5E5E5">cipher text so any summary of this</font>

615
00:20:54,210 --> 00:20:58,440
database is<font color="#E5E5E5"> going to be a pirate decoder</font>

616
00:20:56,190 --> 00:21:00,030
and<font color="#E5E5E5"> therefore by the property of the</font>

617
00:20:58,440 --> 00:21:02,280
trader tracing scheme we know that we

618
00:21:00,030 --> 00:21:04,139
can<font color="#E5E5E5"> run this trace algorithm on it to</font>

619
00:21:02,280 --> 00:21:04,410
<font color="#E5E5E5">identify one an index of one of the</font>

620
00:21:04,140 --> 00:21:06,000
seeker

621
00:21:04,410 --> 00:21:08,610
<font color="#E5E5E5">keys that was used to create the pirate</font>

622
00:21:06,000 --> 00:21:10,800
decoder<font color="#CCCCCC"> there are n secret keys here</font>

623
00:21:08,610 --> 00:21:12,240
that are<font color="#E5E5E5"> used to create</font><font color="#CCCCCC"> the summary so</font>

624
00:21:10,800 --> 00:21:13,830
just<font color="#E5E5E5"> by a pigeonhole</font><font color="#CCCCCC"> principle there's</font>

625
00:21:12,240 --> 00:21:15,690
some index that this algorithm<font color="#CCCCCC"> is going</font>

626
00:21:13,830 --> 00:21:18,090
<font color="#E5E5E5">to output with probability more than</font><font color="#CCCCCC"> one</font>

627
00:21:15,690 --> 00:21:20,640
<font color="#E5E5E5">over</font><font color="#CCCCCC"> N let's call it</font><font color="#E5E5E5"> let's say that</font>

628
00:21:18,090 --> 00:21:22,230
index is<font color="#E5E5E5"> I so that's fine but the</font>

629
00:21:20,640 --> 00:21:23,670
<font color="#E5E5E5">problem</font><font color="#CCCCCC"> comes</font><font color="#E5E5E5"> into when we use the</font>

630
00:21:22,230 --> 00:21:25,920
differential privacy guarantee now to

631
00:21:23,670 --> 00:21:28,200
change the<font color="#E5E5E5"> database</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> we know we can</font>

632
00:21:25,920 --> 00:21:29,610
<font color="#E5E5E5">switch this database that we used to</font>

633
00:21:28,200 --> 00:21:32,070
generate the summary to any adjacent

634
00:21:29,610 --> 00:21:33,750
<font color="#CCCCCC">database</font><font color="#E5E5E5"> without changing the behavior</font>

635
00:21:32,070 --> 00:21:36,179
<font color="#E5E5E5">of any algorithm interacting with the</font>

636
00:21:33,750 --> 00:21:39,510
summary so if we<font color="#E5E5E5"> change the database to</font>

637
00:21:36,180 --> 00:21:42,240
not use<font color="#CCCCCC"> CI anymore instead substitute</font><font color="#E5E5E5"> it</font>

638
00:21:39,510 --> 00:21:43,650
<font color="#E5E5E5">say with your key two then we know by</font>

639
00:21:42,240 --> 00:21:45,870
<font color="#E5E5E5">differential privacy that the trace</font>

640
00:21:43,650 --> 00:21:48,420
algorithm won't change its behavior<font color="#E5E5E5"> and</font>

641
00:21:45,870 --> 00:21:51,199
<font color="#CCCCCC">so it will</font><font color="#E5E5E5"> continue to output the index</font>

642
00:21:48,420 --> 00:21:53,310
<font color="#CCCCCC">I with this somewhat</font><font color="#E5E5E5"> high probability</font>

643
00:21:51,200 --> 00:21:54,930
except now it's going<font color="#E5E5E5"> to be an incorrect</font>

644
00:21:53,310 --> 00:21:57,000
<font color="#E5E5E5">designation of because we know that</font>

645
00:21:54,930 --> 00:22:00,360
<font color="#E5E5E5">secret key I was not used to create the</font>

646
00:21:57,000 --> 00:22:02,280
the summary<font color="#CCCCCC"> and so this is a</font>

647
00:22:00,360 --> 00:22:04,169
contradiction<font color="#CCCCCC"> that it violates the</font>

648
00:22:02,280 --> 00:22:06,440
tracing property and gives us<font color="#E5E5E5"> our lower</font>

649
00:22:04,170 --> 00:22:10,200
bound<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the original</font><font color="#CCCCCC"> work at all paper</font>

650
00:22:06,440 --> 00:22:12,510
<font color="#E5E5E5">so the</font><font color="#CCCCCC"> the paper rishabh at all</font>

651
00:22:10,200 --> 00:22:14,070
basically<font color="#E5E5E5"> say they look at this same</font>

652
00:22:12,510 --> 00:22:15,870
lower bound<font color="#E5E5E5"> and they noticed that it</font>

653
00:22:14,070 --> 00:22:18,179
kind of still goes through even if they

654
00:22:15,870 --> 00:22:20,510
even if the trace algorithm<font color="#E5E5E5"> algorithm</font>

655
00:22:18,180 --> 00:22:22,770
doesn't<font color="#E5E5E5"> succeed with 100%</font><font color="#CCCCCC"> probability</font>

656
00:22:20,510 --> 00:22:24,780
<font color="#E5E5E5">and so instead they're able to</font>

657
00:22:22,770 --> 00:22:27,450
<font color="#E5E5E5">substitute their risky trader tracing</font>

658
00:22:24,780 --> 00:22:29,700
scheme and get a lower<font color="#E5E5E5"> bound that</font>

659
00:22:27,450 --> 00:22:32,730
<font color="#E5E5E5">matches the</font><font color="#CCCCCC"> the Oneidas Andriy result</font>

660
00:22:29,700 --> 00:22:34,050
with a query set and data universe of

661
00:22:32,730 --> 00:22:35,190
exponential size and the security

662
00:22:34,050 --> 00:22:38,159
parameter due to the size of<font color="#E5E5E5"> their</font>

663
00:22:35,190 --> 00:22:39,780
<font color="#CCCCCC">cipher text and secret keys with</font><font color="#E5E5E5"> only</font>

664
00:22:38,160 --> 00:22:43,350
<font color="#E5E5E5">using their risky trader tracing scheme</font>

665
00:22:39,780 --> 00:22:46,470
which only needs by linear maps<font color="#E5E5E5"> in our</font>

666
00:22:43,350 --> 00:22:48,419
paper we kind of take<font color="#E5E5E5"> the same analysis</font>

667
00:22:46,470 --> 00:22:50,820
again and we look<font color="#E5E5E5"> we make some</font>

668
00:22:48,420 --> 00:22:52,410
additional observations about it for the

669
00:22:50,820 --> 00:22:54,990
<font color="#E5E5E5">first and the kind of the main idea is</font>

670
00:22:52,410 --> 00:22:56,430
<font color="#CCCCCC">that we noticed that the trader tracing</font>

671
00:22:54,990 --> 00:22:57,990
scheme<font color="#E5E5E5"> and this argument doesn't really</font>

672
00:22:56,430 --> 00:22:59,760
<font color="#CCCCCC">even have to be public key like there's</font>

673
00:22:57,990 --> 00:23:01,590
nothing in<font color="#E5E5E5"> the argument</font><font color="#CCCCCC"> that needed</font><font color="#E5E5E5"> the</font>

674
00:22:59,760 --> 00:23:04,080
fact that<font color="#E5E5E5"> ciphertext can be generated in</font>

675
00:23:01,590 --> 00:23:06,870
a public key<font color="#E5E5E5"> fashion</font><font color="#CCCCCC"> so that's</font><font color="#E5E5E5"> one</font>

676
00:23:04,080 --> 00:23:08,639
weakening<font color="#CCCCCC"> that we can we can get and the</font>

677
00:23:06,870 --> 00:23:11,189
second thing<font color="#E5E5E5"> is that we can notice</font><font color="#CCCCCC"> that</font>

678
00:23:08,640 --> 00:23:13,020
<font color="#E5E5E5">the summary in this argument is created</font>

679
00:23:11,190 --> 00:23:15,000
before<font color="#E5E5E5"> without any knowledge of the</font>

680
00:23:13,020 --> 00:23:16,260
cipher text so the differentially

681
00:23:15,000 --> 00:23:17,560
private algorithm that's creating the

682
00:23:16,260 --> 00:23:20,050
summary<font color="#E5E5E5"> here which</font>

683
00:23:17,560 --> 00:23:21,909
the pirate decoder<font color="#E5E5E5"> it only ever sees</font>

684
00:23:20,050 --> 00:23:24,100
<font color="#CCCCCC">secrets it doesn't have to know anything</font>

685
00:23:21,910 --> 00:23:25,750
<font color="#CCCCCC">about</font><font color="#E5E5E5"> the ciphertext</font><font color="#CCCCCC"> so we can</font><font color="#E5E5E5"> consider</font>

686
00:23:24,100 --> 00:23:28,659
a weakened version<font color="#E5E5E5"> of trader tracing</font>

687
00:23:25,750 --> 00:23:31,000
where the security of the the trace

688
00:23:28,660 --> 00:23:33,070
algorithm<font color="#E5E5E5"> doesn't have to only has to</font>

689
00:23:31,000 --> 00:23:35,470
work on pirate decoders that<font color="#CCCCCC"> were</font>

690
00:23:33,070 --> 00:23:36,639
created without knowledge of<font color="#E5E5E5"> the cipher</font>

691
00:23:35,470 --> 00:23:40,750
<font color="#E5E5E5">text so they don't need any kind</font><font color="#CCCCCC"> of like</font>

692
00:23:36,640 --> 00:23:43,660
CPA security<font color="#CCCCCC"> so to</font><font color="#E5E5E5"> create this kind of</font>

693
00:23:40,750 --> 00:23:46,690
<font color="#E5E5E5">private key weakened trader tracing</font>

694
00:23:43,660 --> 00:23:48,010
security trader tracing scheme<font color="#E5E5E5"> we show</font>

695
00:23:46,690 --> 00:23:49,870
<font color="#E5E5E5">how you can do this from functional</font>

696
00:23:48,010 --> 00:23:52,120
encryption for comparison functions and

697
00:23:49,870 --> 00:23:54,429
we use a modified construction of the

698
00:23:52,120 --> 00:23:56,290
gorbunov at all<font color="#E5E5E5"> public</font><font color="#CCCCCC"> key functional</font>

699
00:23:54,430 --> 00:23:58,780
encryption scheme for<font color="#E5E5E5"> batted collision</font>

700
00:23:56,290 --> 00:24:00,370
<font color="#E5E5E5">basically we make it turn it into a</font>

701
00:23:58,780 --> 00:24:02,530
<font color="#E5E5E5">private key variant</font><font color="#CCCCCC"> that lets us do some</font>

702
00:24:00,370 --> 00:24:04,560
modifications on<font color="#E5E5E5"> it to get the weak</font>

703
00:24:02,530 --> 00:24:06,639
trader tracing scheme that we need<font color="#E5E5E5"> and</font>

704
00:24:04,560 --> 00:24:11,470
<font color="#E5E5E5">we</font><font color="#CCCCCC"> can do this</font><font color="#E5E5E5"> just using one-way</font>

705
00:24:06,640 --> 00:24:13,960
functions so that's kind of<font color="#E5E5E5"> all I have</font>

706
00:24:11,470 --> 00:24:16,020
time for just to recap what we're doing

707
00:24:13,960 --> 00:24:18,580
here in both of<font color="#E5E5E5"> these papers is</font>

708
00:24:16,020 --> 00:24:20,370
replicating a lower bound<font color="#CCCCCC"> for answering</font>

709
00:24:18,580 --> 00:24:23,199
statistical queries<font color="#E5E5E5"> differential</font><font color="#CCCCCC"> privacy</font>

710
00:24:20,370 --> 00:24:24,520
<font color="#E5E5E5">and removing the dependence on</font>

711
00:24:23,200 --> 00:24:27,100
<font color="#E5E5E5">indistinguishable the obfuscation</font>

712
00:24:24,520 --> 00:24:28,720
replacing it just with bilinear maps in

713
00:24:27,100 --> 00:24:32,230
the<font color="#CCCCCC"> shadowed all paper</font><font color="#E5E5E5"> and one-way</font>

714
00:24:28,720 --> 00:24:34,000
functions for our<font color="#E5E5E5"> paper</font><font color="#CCCCCC"> and in there's a</font>

715
00:24:32,230 --> 00:24:36,160
lot<font color="#E5E5E5"> of future work to be done here</font><font color="#CCCCCC"> like</font>

716
00:24:34,000 --> 00:24:38,110
<font color="#E5E5E5">obviously</font><font color="#CCCCCC"> we'd like to kind of expand</font>

717
00:24:36,160 --> 00:24:40,150
this<font color="#E5E5E5"> and remove all the read dependence</font>

718
00:24:38,110 --> 00:24:43,840
<font color="#CCCCCC">on</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> distinguishability obfuscation</font><font color="#E5E5E5"> and</font>

719
00:24:40,150 --> 00:24:45,370
<font color="#E5E5E5">also there's a work on maybe reducing</font>

720
00:24:43,840 --> 00:24:47,050
the complexity of the queries that<font color="#CCCCCC"> are</font>

721
00:24:45,370 --> 00:24:50,699
allowed because the complexities in this

722
00:24:47,050 --> 00:24:52,750
case are kind<font color="#E5E5E5"> of complex cryptographic</font>

723
00:24:50,700 --> 00:24:54,790
<font color="#E5E5E5">decryption operations and would be nice</font>

724
00:24:52,750 --> 00:24:57,040
to have lower bounds that are dependent

725
00:24:54,790 --> 00:24:58,629
<font color="#E5E5E5">on the</font><font color="#CCCCCC"> kind of more simple</font><font color="#E5E5E5"> simple</font>

726
00:24:57,040 --> 00:25:01,300
queries showing<font color="#E5E5E5"> that simpler queries are</font>

727
00:24:58,630 --> 00:25:03,210
<font color="#E5E5E5">impossible to answer all right</font>

728
00:25:01,300 --> 00:25:09,129
that's<font color="#E5E5E5"> it thank you</font>

729
00:25:03,210 --> 00:25:09,130
[Applause]

