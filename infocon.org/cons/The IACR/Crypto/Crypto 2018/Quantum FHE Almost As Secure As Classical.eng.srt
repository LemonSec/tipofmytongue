1
00:00:05,930 --> 00:00:14,070
<font color="#CCCCCC">Thanks I also do</font><font color="#E5E5E5"> bar mitzvahs</font><font color="#CCCCCC"> thanks for</font>

2
00:00:12,240 --> 00:00:15,150
valve<font color="#CCCCCC"> so let me start by talking</font><font color="#E5E5E5"> about</font>

3
00:00:14,070 --> 00:00:17,880
classical fully homomorphic encryption

4
00:00:15,150 --> 00:00:19,470
<font color="#E5E5E5">so in this case we have a week one a</font>

5
00:00:17,880 --> 00:00:20,730
week a client that wants<font color="#CCCCCC"> to</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> the</font>

6
00:00:19,470 --> 00:00:22,140
<font color="#CCCCCC">computational power</font><font color="#E5E5E5"> of a strong server</font>

7
00:00:20,730 --> 00:00:24,270
to compute some<font color="#CCCCCC"> function so the client</font>

8
00:00:22,140 --> 00:00:25,680
has input X and<font color="#CCCCCC"> it wants to get f of</font><font color="#E5E5E5"> X</font>

9
00:00:24,270 --> 00:00:26,880
and the restriction is<font color="#CCCCCC"> that we</font><font color="#E5E5E5"> don't</font>

10
00:00:25,680 --> 00:00:28,800
<font color="#E5E5E5">want the server to learn anything about</font>

11
00:00:26,880 --> 00:00:30,060
<font color="#E5E5E5">the input X in a way this</font><font color="#CCCCCC"> is done</font><font color="#E5E5E5"> fully</font>

12
00:00:28,800 --> 00:00:31,440
homomorphic encryption<font color="#E5E5E5"> is that the</font>

13
00:00:30,060 --> 00:00:32,969
client generates a pair<font color="#E5E5E5"> of keys a secret</font>

14
00:00:31,440 --> 00:00:34,680
key<font color="#CCCCCC"> and a public key</font><font color="#E5E5E5"> is just encrypts</font>

15
00:00:32,969 --> 00:00:36,329
its input<font color="#E5E5E5"> using the using the public key</font>

16
00:00:34,680 --> 00:00:37,980
and our security requirement is just

17
00:00:36,329 --> 00:00:39,420
standard semantic security<font color="#E5E5E5"> just</font><font color="#CCCCCC"> like any</font>

18
00:00:37,980 --> 00:00:41,010
other encryption scheme<font color="#E5E5E5"> but with the</font>

19
00:00:39,420 --> 00:00:43,079
fully homomorphic encryption<font color="#CCCCCC"> the server</font>

20
00:00:41,010 --> 00:00:45,540
<font color="#E5E5E5">can perform homomorphic evaluation on on</font>

21
00:00:43,079 --> 00:00:47,820
ciphertext<font color="#E5E5E5"> and get from</font><font color="#CCCCCC"> encryption</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> x</font>

22
00:00:45,540 --> 00:00:48,899
to an encryption<font color="#E5E5E5"> of f of X now this</font>

23
00:00:47,820 --> 00:00:50,370
doesn't<font color="#E5E5E5"> have to</font><font color="#CCCCCC"> look</font><font color="#E5E5E5"> like a fresh</font>

24
00:00:48,899 --> 00:00:52,140
encryption of<font color="#E5E5E5"> f of X but it needs to</font>

25
00:00:50,370 --> 00:00:53,760
decrypt<font color="#E5E5E5"> to the right value and of course</font>

26
00:00:52,140 --> 00:00:55,410
we require this notion of compactness

27
00:00:53,760 --> 00:00:57,089
<font color="#E5E5E5">which means that the length of this</font>

28
00:00:55,410 --> 00:00:58,260
encryption<font color="#E5E5E5"> of f of X and the time that</font>

29
00:00:57,090 --> 00:00:59,579
it takes<font color="#E5E5E5"> to decrypt it should be</font>

30
00:00:58,260 --> 00:01:02,070
<font color="#CCCCCC">independent of</font><font color="#E5E5E5"> the complexity of the</font>

31
00:00:59,579 --> 00:01:03,899
function f itself another property that

32
00:01:02,070 --> 00:01:05,459
<font color="#E5E5E5">is not always required</font><font color="#CCCCCC"> but it's actually</font>

33
00:01:03,899 --> 00:01:07,259
going<font color="#CCCCCC"> to be important for this talk it's</font>

34
00:01:05,459 --> 00:01:08,939
called circuit privacy and for our

35
00:01:07,259 --> 00:01:10,770
<font color="#E5E5E5">purposes circuit privacy just means that</font>

36
00:01:08,939 --> 00:01:12,240
<font color="#E5E5E5">this encryption of f of X really does</font>

37
00:01:10,770 --> 00:01:13,950
need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> look</font><font color="#CCCCCC"> like a fresh encryption of</font>

38
00:01:12,240 --> 00:01:15,568
<font color="#E5E5E5">f of X and this should hold even for</font>

39
00:01:13,950 --> 00:01:18,209
computationally unbounded distinguisher

40
00:01:15,569 --> 00:01:20,310
<font color="#E5E5E5">so this is circuit privacy and homework</font>

41
00:01:18,209 --> 00:01:21,990
encryption schemes<font color="#E5E5E5"> classical have been</font>

42
00:01:20,310 --> 00:01:23,549
constructed<font color="#CCCCCC"> based on the</font><font color="#E5E5E5"> hardness of the</font>

43
00:01:21,990 --> 00:01:25,350
learning with errors problem and this

44
00:01:23,549 --> 00:01:27,240
<font color="#E5E5E5">problem</font><font color="#CCCCCC"> is considered to be intractable</font>

45
00:01:25,350 --> 00:01:29,249
even from quantum computers this gives

46
00:01:27,240 --> 00:01:31,439
you a plausible<font color="#E5E5E5"> post quantum candidate</font>

47
00:01:29,249 --> 00:01:34,199
for fully homomorphic encryption<font color="#E5E5E5"> so post</font>

48
00:01:31,439 --> 00:01:35,428
quantum means that the the<font color="#E5E5E5"> actual users</font>

49
00:01:34,200 --> 00:01:37,740
of the scheme<font color="#E5E5E5"> are classical but the</font>

50
00:01:35,429 --> 00:01:38,969
adversary might be quantum so quantum

51
00:01:37,740 --> 00:01:40,529
fully homomorphic encryption was

52
00:01:38,969 --> 00:01:43,020
presented by broadband<font color="#E5E5E5"> and</font><font color="#CCCCCC"> Jeffery</font><font color="#E5E5E5"> and</font>

53
00:01:40,529 --> 00:01:44,579
there you want<font color="#E5E5E5"> to outsource a quantum</font>

54
00:01:43,020 --> 00:01:46,380
computation so the server has quantum

55
00:01:44,579 --> 00:01:49,318
powers and you wanted to quantumly

56
00:01:46,380 --> 00:01:51,389
<font color="#E5E5E5">evaluate a function</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> encrypted</font>

57
00:01:49,319 --> 00:01:53,249
unencrypted ciphertext<font color="#E5E5E5"> now we want to</font>

58
00:01:51,389 --> 00:01:55,798
allow the client to<font color="#CCCCCC"> be either classical</font>

59
00:01:53,249 --> 00:01:57,389
or quantum whatever it wants so for<font color="#CCCCCC"> that</font>

60
00:01:55,799 --> 00:01:58,590
purpose<font color="#CCCCCC"> we need the key generation</font><font color="#E5E5E5"> and</font>

61
00:01:57,389 --> 00:02:00,149
the<font color="#CCCCCC"> keys</font><font color="#E5E5E5"> to be classical so that the</font>

62
00:01:58,590 --> 00:02:02,099
<font color="#CCCCCC">classical line can use them as</font><font color="#E5E5E5"> well and</font>

63
00:02:00,149 --> 00:02:03,329
<font color="#E5E5E5">we</font><font color="#CCCCCC"> also need</font><font color="#E5E5E5"> the property that when we</font>

64
00:02:02,099 --> 00:02:04,560
<font color="#E5E5E5">encrypt the classical message we</font>

65
00:02:03,329 --> 00:02:06,419
actually get a classical<font color="#CCCCCC"> ciphertex so</font>

66
00:02:04,560 --> 00:02:07,979
<font color="#E5E5E5">this can</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> done by classical by</font>

67
00:02:06,419 --> 00:02:09,149
classical client<font color="#E5E5E5"> but if the client</font><font color="#CCCCCC"> is</font>

68
00:02:07,979 --> 00:02:10,380
quantum and it wants<font color="#E5E5E5"> to encrypt a</font>

69
00:02:09,149 --> 00:02:12,690
quantum message<font color="#E5E5E5"> then they should be able</font>

70
00:02:10,380 --> 00:02:14,490
<font color="#E5E5E5">to do that as well</font><font color="#CCCCCC"> so we want to be able</font>

71
00:02:12,690 --> 00:02:16,530
<font color="#CCCCCC">to encrypt one two messages in such a</font>

72
00:02:14,490 --> 00:02:17,040
way that<font color="#E5E5E5"> it can</font><font color="#CCCCCC"> degenerate to classical</font>

73
00:02:16,530 --> 00:02:19,680
and

74
00:02:17,040 --> 00:02:21,840
<font color="#CCCCCC">straightforwardly</font><font color="#E5E5E5"> so this is what we</font>

75
00:02:19,680 --> 00:02:24,450
want<font color="#E5E5E5"> and</font><font color="#CCCCCC"> broadband</font><font color="#E5E5E5"> Jeffrey don't didn't</font>

76
00:02:21,840 --> 00:02:25,799
<font color="#CCCCCC">only</font><font color="#E5E5E5"> only present the the concept but</font>

77
00:02:24,450 --> 00:02:27,719
<font color="#E5E5E5">also presented an approach on</font><font color="#CCCCCC"> how</font><font color="#E5E5E5"> to</font>

78
00:02:25,799 --> 00:02:29,790
achieve it<font color="#CCCCCC"> it</font><font color="#E5E5E5"> essentially uses hybrid</font>

79
00:02:27,719 --> 00:02:30,989
encryption so they<font color="#E5E5E5"> propose</font><font color="#CCCCCC"> to combine</font>

80
00:02:29,790 --> 00:02:33,480
classical fully homomorphic encryption

81
00:02:30,989 --> 00:02:35,099
<font color="#CCCCCC">with the quantum one-time pad</font><font color="#E5E5E5"> to get a</font>

82
00:02:33,480 --> 00:02:36,569
quantum fully homomorphic encryption<font color="#CCCCCC"> and</font>

83
00:02:35,099 --> 00:02:38,099
this<font color="#E5E5E5"> approach was</font><font color="#CCCCCC"> used by</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> previous</font>

84
00:02:36,569 --> 00:02:40,319
works and<font color="#E5E5E5"> also by</font><font color="#CCCCCC"> the work that I'm</font>

85
00:02:38,099 --> 00:02:42,119
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> talk</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> today</font><font color="#CCCCCC"> whoever it</font>

86
00:02:40,319 --> 00:02:43,170
seems pretty hard to actually<font color="#E5E5E5"> apply this</font>

87
00:02:42,120 --> 00:02:44,970
approach<font color="#E5E5E5"> to</font><font color="#CCCCCC"> actually get the</font>

88
00:02:43,170 --> 00:02:46,319
<font color="#CCCCCC">full-fledged definition and in fact the</font>

89
00:02:44,970 --> 00:02:48,000
only<font color="#CCCCCC"> prior works that achieves the</font>

90
00:02:46,319 --> 00:02:50,730
definition<font color="#E5E5E5"> that I described is the very</font>

91
00:02:48,000 --> 00:02:51,930
recent<font color="#E5E5E5"> work of Mahadev</font><font color="#CCCCCC"> and she</font>

92
00:02:50,730 --> 00:02:53,099
constructed<font color="#E5E5E5"> the scheme based on the</font>

93
00:02:51,930 --> 00:02:54,750
hardness<font color="#E5E5E5"> of the learning with errors</font>

94
00:02:53,099 --> 00:02:56,608
problem so similarly<font color="#E5E5E5"> to their classical</font>

95
00:02:54,750 --> 00:02:59,280
schemes but with a super polynomial

96
00:02:56,609 --> 00:03:00,659
modulus<font color="#E5E5E5"> Q so the modulus is a parameter</font>

97
00:02:59,280 --> 00:03:03,269
of<font color="#E5E5E5"> the learning with errors problem and</font>

98
00:03:00,659 --> 00:03:04,620
the smaller<font color="#E5E5E5"> the modules get the harder</font>

99
00:03:03,269 --> 00:03:07,560
problem becomes so the<font color="#E5E5E5"> assumption</font>

100
00:03:04,620 --> 00:03:09,030
becomes more favorable or weaker and so

101
00:03:07,560 --> 00:03:11,220
originally<font color="#CCCCCC"> reg a proposed the hardness</font>

102
00:03:09,030 --> 00:03:12,540
of<font color="#E5E5E5"> lwe with polynomial modulus but as</font>

103
00:03:11,220 --> 00:03:14,040
far as<font color="#E5E5E5"> we know super polynomial should</font>

104
00:03:12,540 --> 00:03:17,879
<font color="#CCCCCC">also be hard so this is an assumption</font>

105
00:03:14,040 --> 00:03:19,650
that we're okay<font color="#CCCCCC"> to rely on the reason</font>

106
00:03:17,879 --> 00:03:21,448
why<font color="#CCCCCC"> certain polynomial modulus was</font>

107
00:03:19,650 --> 00:03:23,190
needed was because this quantum<font color="#CCCCCC"> who</font>

108
00:03:21,449 --> 00:03:24,690
<font color="#E5E5E5">morphic evaluation actually had</font>

109
00:03:23,190 --> 00:03:26,940
correctness error and the correctness

110
00:03:24,690 --> 00:03:28,680
<font color="#E5E5E5">error scaled more or less with</font><font color="#CCCCCC"> the size</font>

111
00:03:26,940 --> 00:03:31,319
of the quantum function that<font color="#E5E5E5"> you wanted</font>

112
00:03:28,680 --> 00:03:32,790
to evaluate<font color="#E5E5E5"> divided by the modulus so if</font>

113
00:03:31,319 --> 00:03:36,750
you want<font color="#CCCCCC"> the scheme that works</font><font color="#E5E5E5"> for every</font>

114
00:03:32,790 --> 00:03:38,790
for every polynomial<font color="#CCCCCC"> size function</font><font color="#E5E5E5"> then</font>

115
00:03:36,750 --> 00:03:42,919
you want the super polynomial modulus so

116
00:03:38,790 --> 00:03:45,358
that the correctness<font color="#CCCCCC"> errors</font><font color="#E5E5E5"> remain small</font>

117
00:03:42,919 --> 00:03:46,859
<font color="#CCCCCC">so additionally if you want the</font>

118
00:03:45,359 --> 00:03:48,239
strongest<font color="#E5E5E5"> notion of a fully homomorphic</font>

119
00:03:46,859 --> 00:03:50,040
encryption you need an<font color="#CCCCCC"> additional</font>

120
00:03:48,239 --> 00:03:51,329
assumption<font color="#E5E5E5"> and this holds even in the</font>

121
00:03:50,040 --> 00:03:52,560
classical<font color="#E5E5E5"> setting so even in the</font>

122
00:03:51,329 --> 00:03:53,489
classical<font color="#CCCCCC"> setting for the strongest</font>

123
00:03:52,560 --> 00:03:55,769
possible

124
00:03:53,489 --> 00:03:57,449
notion of homomorphism you actually need

125
00:03:55,769 --> 00:03:59,280
what's<font color="#E5E5E5"> called a circular security</font>

126
00:03:57,449 --> 00:04:01,379
assumption and this is needed<font color="#E5E5E5"> even in</font>

127
00:03:59,280 --> 00:04:03,269
mahadeva's quantum scheme<font color="#E5E5E5"> but actually</font>

128
00:04:01,379 --> 00:04:05,220
she needed<font color="#E5E5E5"> a new circle of security</font>

129
00:04:03,269 --> 00:04:06,840
assumption which seems<font color="#E5E5E5"> stronger to the</font>

130
00:04:05,220 --> 00:04:08,728
assumptions that were<font color="#CCCCCC"> used in it for</font>

131
00:04:06,840 --> 00:04:09,959
classical schemes however<font color="#CCCCCC"> this is like</font>

132
00:04:08,729 --> 00:04:13,979
<font color="#E5E5E5">pretty amazing</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> this can be done</font>

133
00:04:09,959 --> 00:04:15,689
that this<font color="#E5E5E5"> definition can be achieved but</font>

134
00:04:13,979 --> 00:04:17,549
<font color="#E5E5E5">let's be greedy and ask you know now</font>

135
00:04:15,689 --> 00:04:19,680
that<font color="#E5E5E5"> we know that it's</font><font color="#CCCCCC"> possible why why</font>

136
00:04:17,548 --> 00:04:21,448
<font color="#CCCCCC">can't it be as good as classical fully</font>

137
00:04:19,680 --> 00:04:23,400
homomorphic encryption schemes so let's

138
00:04:21,449 --> 00:04:25,110
let's do the comparison here<font color="#E5E5E5"> so in terms</font>

139
00:04:23,400 --> 00:04:26,460
of of<font color="#E5E5E5"> the modulus for classical schemes</font>

140
00:04:25,110 --> 00:04:29,580
we know how to get<font color="#E5E5E5"> it from Tomomi</font>

141
00:04:26,460 --> 00:04:31,320
available<font color="#E5E5E5"> you the polynomial modulus</font>

142
00:04:29,580 --> 00:04:32,940
in terms of<font color="#CCCCCC"> circular security you need</font><font color="#E5E5E5"> a</font>

143
00:04:31,320 --> 00:04:34,740
weaker<font color="#E5E5E5"> flavor of circular security</font>

144
00:04:32,940 --> 00:04:37,110
assumption or seemingly<font color="#E5E5E5"> weaker at least</font>

145
00:04:34,740 --> 00:04:38,550
and for correctness<font color="#E5E5E5"> error actually</font><font color="#CCCCCC"> in</font>

146
00:04:37,110 --> 00:04:39,780
the classical setting<font color="#E5E5E5"> you can get</font>

147
00:04:38,550 --> 00:04:42,150
schemes with perfect correctness so

148
00:04:39,780 --> 00:04:44,789
there's no correctness error at<font color="#E5E5E5"> all what</font>

149
00:04:42,150 --> 00:04:47,130
we do here is get<font color="#E5E5E5"> close to achieving the</font>

150
00:04:44,790 --> 00:04:49,920
the<font color="#E5E5E5"> to getting to the classical setting</font>

151
00:04:47,130 --> 00:04:51,300
<font color="#E5E5E5">so it all sort</font><font color="#CCCCCC"> of boils down or most of</font>

152
00:04:49,920 --> 00:04:52,770
<font color="#E5E5E5">it</font><font color="#CCCCCC"> boils down to the to the correctness</font>

153
00:04:51,300 --> 00:04:54,570
<font color="#E5E5E5">error</font><font color="#CCCCCC"> so instead of getting correctness</font>

154
00:04:52,770 --> 00:04:56,549
<font color="#E5E5E5">error that is</font><font color="#CCCCCC"> sizeof function divided</font><font color="#E5E5E5"> by</font>

155
00:04:54,570 --> 00:04:58,650
<font color="#CCCCCC">modulus we get sizeof function</font><font color="#E5E5E5"> divided</font>

156
00:04:56,550 --> 00:05:00,330
by 2 to<font color="#E5E5E5"> the modulus which allows us</font><font color="#CCCCCC"> to</font>

157
00:04:58,650 --> 00:05:01,859
<font color="#E5E5E5">use the polynomial modulus to get an</font>

158
00:05:00,330 --> 00:05:06,060
exponentially small correctness<font color="#E5E5E5"> error</font>

159
00:05:01,860 --> 00:05:08,610
and<font color="#E5E5E5"> this allows us to use</font><font color="#CCCCCC"> lwe</font><font color="#E5E5E5"> with just</font>

160
00:05:06,060 --> 00:05:09,990
polynomial modulus<font color="#E5E5E5"> which is slightly</font>

161
00:05:08,610 --> 00:05:11,940
<font color="#E5E5E5">larger than the modulus that you need</font>

162
00:05:09,990 --> 00:05:14,310
for for the classical setting<font color="#E5E5E5"> but</font><font color="#CCCCCC"> it's</font>

163
00:05:11,940 --> 00:05:16,020
still polynomial<font color="#E5E5E5"> in terms of the</font>

164
00:05:14,310 --> 00:05:17,070
circular security assumption<font color="#E5E5E5"> we don't</font>

165
00:05:16,020 --> 00:05:18,479
get the same assumption is in the

166
00:05:17,070 --> 00:05:19,620
classical<font color="#E5E5E5"> setting</font><font color="#CCCCCC"> we're actually getting</font>

167
00:05:18,480 --> 00:05:21,240
an assumption<font color="#E5E5E5"> that appeared in</font>

168
00:05:19,620 --> 00:05:22,710
literature<font color="#CCCCCC"> before and perhaps</font>

169
00:05:21,240 --> 00:05:23,970
surprisingly it appeared in<font color="#E5E5E5"> the context</font>

170
00:05:22,710 --> 00:05:25,650
<font color="#E5E5E5">of multi carefully homomorphic</font>

171
00:05:23,970 --> 00:05:27,120
encryption<font color="#CCCCCC"> so this is the same</font>

172
00:05:25,650 --> 00:05:28,620
assumption that<font color="#E5E5E5"> you need in order to get</font>

173
00:05:27,120 --> 00:05:29,880
the strongest<font color="#CCCCCC"> flavor</font><font color="#E5E5E5"> of multi key</font>

174
00:05:28,620 --> 00:05:31,980
classical fully homomorphic encryption

175
00:05:29,880 --> 00:05:33,659
<font color="#E5E5E5">so this is an assumption that already</font>

176
00:05:31,980 --> 00:05:36,090
appeared<font color="#E5E5E5"> in the</font><font color="#CCCCCC"> literature</font><font color="#E5E5E5"> but perhaps</font>

177
00:05:33,660 --> 00:05:38,310
as important as the specific

178
00:05:36,090 --> 00:05:40,349
contributions here<font color="#E5E5E5"> we have sort of a</font>

179
00:05:38,310 --> 00:05:42,450
conceptual<font color="#E5E5E5"> approach to the problem</font><font color="#CCCCCC"> that</font>

180
00:05:40,350 --> 00:05:45,240
connects a quantum homomorphism with

181
00:05:42,450 --> 00:05:47,310
this circle this circuit privacy notion

182
00:05:45,240 --> 00:05:49,470
<font color="#E5E5E5">that I was mentioning</font><font color="#CCCCCC"> before and</font><font color="#E5E5E5"> this</font>

183
00:05:47,310 --> 00:05:51,060
<font color="#CCCCCC">red light</font><font color="#E5E5E5"> even on previous works so let</font>

184
00:05:49,470 --> 00:05:52,440
me tell<font color="#E5E5E5"> you a little bit</font><font color="#CCCCCC"> of let me tell</font>

185
00:05:51,060 --> 00:05:54,330
you a little<font color="#E5E5E5"> bit about it but</font><font color="#CCCCCC"> first</font>

186
00:05:52,440 --> 00:05:56,700
<font color="#E5E5E5">let's do a little primer about qubits</font>

187
00:05:54,330 --> 00:05:58,020
and<font color="#E5E5E5"> quantum registers so a quantum</font>

188
00:05:56,700 --> 00:06:00,120
<font color="#E5E5E5">registers the register can be in</font>

189
00:05:58,020 --> 00:06:01,590
superposition<font color="#CCCCCC"> between a few</font><font color="#E5E5E5"> classical</font>

190
00:06:00,120 --> 00:06:04,050
<font color="#CCCCCC">states</font><font color="#E5E5E5"> and if these two states are</font><font color="#CCCCCC"> just</font>

191
00:06:01,590 --> 00:06:05,190
<font color="#E5E5E5">0</font><font color="#CCCCCC"> & 1</font><font color="#E5E5E5"> then we call</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> the qubit in terms</font>

192
00:06:04,050 --> 00:06:09,290
of notation<font color="#CCCCCC"> we use this Dirac notation</font>

193
00:06:05,190 --> 00:06:11,610
<font color="#E5E5E5">which presents a quantum state</font><font color="#CCCCCC"> as a</font>

194
00:06:09,290 --> 00:06:13,830
linear combination a linear combination

195
00:06:11,610 --> 00:06:16,410
of classical<font color="#CCCCCC"> states where these</font>

196
00:06:13,830 --> 00:06:18,390
coefficients w0 and w1<font color="#CCCCCC"> are related to</font>

197
00:06:16,410 --> 00:06:19,740
the<font color="#CCCCCC"> probability of measuring</font><font color="#E5E5E5"> the value 0</font>

198
00:06:18,390 --> 00:06:22,110
or<font color="#E5E5E5"> 1 when you measure this quantum</font>

199
00:06:19,740 --> 00:06:23,430
register<font color="#CCCCCC"> in particular if you measure</font>

200
00:06:22,110 --> 00:06:25,770
the register then the probability of

201
00:06:23,430 --> 00:06:27,660
<font color="#E5E5E5">getting zero</font><font color="#CCCCCC"> is the amplitude square of</font>

202
00:06:25,770 --> 00:06:29,460
<font color="#E5E5E5">w0 and this means</font><font color="#CCCCCC"> that the sum of</font>

203
00:06:27,660 --> 00:06:32,010
squares<font color="#E5E5E5"> of</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> the amplitudes should</font>

204
00:06:29,460 --> 00:06:34,020
should be<font color="#CCCCCC"> 1 so when you</font><font color="#E5E5E5"> measure a</font>

205
00:06:32,010 --> 00:06:35,550
quantum register you actually collapse

206
00:06:34,020 --> 00:06:38,099
<font color="#E5E5E5">it</font><font color="#CCCCCC"> States to a classical</font><font color="#E5E5E5"> state so if a</font>

207
00:06:35,550 --> 00:06:39,540
measured measured<font color="#E5E5E5"> 0 then</font><font color="#CCCCCC"> the register</font><font color="#E5E5E5"> is</font>

208
00:06:38,100 --> 00:06:41,730
going now going to be in<font color="#E5E5E5"> classical state</font>

209
00:06:39,540 --> 00:06:43,380
0<font color="#E5E5E5"> but in fact you can collapse a</font>

210
00:06:41,730 --> 00:06:45,600
register without<font color="#E5E5E5"> measuring it</font>

211
00:06:43,380 --> 00:06:47,340
if it's entangled with another register

212
00:06:45,600 --> 00:06:49,980
<font color="#E5E5E5">so for example let's consider a two</font>

213
00:06:47,340 --> 00:06:52,200
qubit state so to<font color="#E5E5E5"> say 0 0</font><font color="#CCCCCC"> plus 1 1 this</font>

214
00:06:49,980 --> 00:06:54,480
<font color="#E5E5E5">is 8 over 2 qubits and these two qubits</font>

215
00:06:52,200 --> 00:06:55,770
<font color="#E5E5E5">are related or entangled or even less</font>

216
00:06:54,480 --> 00:06:57,000
<font color="#E5E5E5">formally you can say that if you see</font>

217
00:06:55,770 --> 00:06:59,159
qubit number<font color="#E5E5E5"> 2 then it clicks</font>

218
00:06:57,000 --> 00:07:01,410
information qubit number<font color="#E5E5E5"> 1 in such</font><font color="#CCCCCC"> a</font>

219
00:06:59,160 --> 00:07:03,120
case measuring qubit number 2<font color="#E5E5E5"> will</font>

220
00:07:01,410 --> 00:07:04,470
collapse the<font color="#E5E5E5"> state of qubit number 1 as</font>

221
00:07:03,120 --> 00:07:07,500
<font color="#E5E5E5">well so even</font><font color="#CCCCCC"> though I didn't measure</font><font color="#E5E5E5"> a</font>

222
00:07:04,470 --> 00:07:09,180
qubit number<font color="#E5E5E5"> 1 explicitly</font><font color="#CCCCCC"> I can collapse</font>

223
00:07:07,500 --> 00:07:11,490
<font color="#CCCCCC">its state just by</font><font color="#E5E5E5"> measuring a related</font>

224
00:07:09,180 --> 00:07:13,770
qubit<font color="#CCCCCC"> two properties that</font><font color="#E5E5E5"> we're going to</font>

225
00:07:11,490 --> 00:07:16,230
need<font color="#CCCCCC"> about quantum registers</font><font color="#E5E5E5"> so if I</font>

226
00:07:13,770 --> 00:07:17,729
have a superposition over<font color="#CCCCCC"> States</font><font color="#E5E5E5"> a then</font>

227
00:07:16,230 --> 00:07:20,130
I can create<font color="#CCCCCC"> a superposition with the</font>

228
00:07:17,730 --> 00:07:21,690
same<font color="#E5E5E5"> weight but</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> States a comma F of a</font>

229
00:07:20,130 --> 00:07:24,090
for every<font color="#E5E5E5"> function for any</font><font color="#CCCCCC"> function f</font>

230
00:07:21,690 --> 00:07:25,140
with the<font color="#E5E5E5"> same weights as before and the</font>

231
00:07:24,090 --> 00:07:26,909
<font color="#E5E5E5">last thing is</font><font color="#CCCCCC"> that you can efficiently</font>

232
00:07:25,140 --> 00:07:29,010
<font color="#E5E5E5">do Fourier transform</font><font color="#CCCCCC"> on a quantum</font>

233
00:07:26,910 --> 00:07:31,800
register if the states come from like a

234
00:07:29,010 --> 00:07:33,539
nice abelian groups which they will<font color="#E5E5E5"> all</font>

235
00:07:31,800 --> 00:07:34,980
right so let's<font color="#E5E5E5"> try</font><font color="#CCCCCC"> to see how to use</font><font color="#E5E5E5"> a</font>

236
00:07:33,540 --> 00:07:39,090
fully homomorphic encryption together

237
00:07:34,980 --> 00:07:40,710
with quantum one-time pad to get<font color="#E5E5E5"> quantum</font>

238
00:07:39,090 --> 00:07:42,599
fully homomorphic encryption<font color="#E5E5E5"> so I should</font>

239
00:07:40,710 --> 00:07:45,090
tell<font color="#CCCCCC"> you what is quantum</font><font color="#E5E5E5"> one-time pad</font><font color="#CCCCCC"> so</font>

240
00:07:42,600 --> 00:07:46,740
this was presented<font color="#CCCCCC"> by a -</font><font color="#E5E5E5"> at all and the</font>

241
00:07:45,090 --> 00:07:49,409
cool<font color="#CCCCCC"> thing is that allows to encrypt a</font>

242
00:07:46,740 --> 00:07:51,210
quantum state using a classical key<font color="#E5E5E5"> so</font>

243
00:07:49,410 --> 00:07:53,640
<font color="#E5E5E5">using a using</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> sequence of classical</font>

244
00:07:51,210 --> 00:07:55,409
<font color="#CCCCCC">beats and get</font><font color="#E5E5E5"> perfect security</font><font color="#CCCCCC"> so in</font>

245
00:07:53,640 --> 00:07:58,169
<font color="#E5E5E5">particular to perfectly encrypt a single</font>

246
00:07:55,410 --> 00:08:00,770
<font color="#E5E5E5">qubit</font><font color="#CCCCCC"> all you need is two random</font>

247
00:07:58,170 --> 00:08:03,300
classical bits<font color="#E5E5E5"> and and you can do this</font>

248
00:08:00,770 --> 00:08:05,969
<font color="#CCCCCC">and in terms of notation we're going to</font>

249
00:08:03,300 --> 00:08:07,890
denote alpha sub<font color="#CCCCCC"> Y Z</font><font color="#E5E5E5"> the quantum</font>

250
00:08:05,970 --> 00:08:11,850
<font color="#E5E5E5">one-time pad encryption of</font><font color="#CCCCCC"> the state</font>

251
00:08:07,890 --> 00:08:14,789
<font color="#E5E5E5">alpha using using pad keys using pad</font>

252
00:08:11,850 --> 00:08:16,830
bits<font color="#E5E5E5"> y&z so if you're wondering</font><font color="#CCCCCC"> how this</font>

253
00:08:14,790 --> 00:08:18,690
<font color="#E5E5E5">is done so in the quantum one-time pad</font>

254
00:08:16,830 --> 00:08:20,219
you use one<font color="#CCCCCC"> of the bits</font><font color="#E5E5E5"> to do exactly</font>

255
00:08:18,690 --> 00:08:23,060
<font color="#CCCCCC">the same</font><font color="#E5E5E5"> thing as classical one-time pad</font>

256
00:08:20,220 --> 00:08:25,500
<font color="#E5E5E5">so you use the bit Y to do a bit flip of</font>

257
00:08:23,060 --> 00:08:27,300
the quantum register<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you have and</font>

258
00:08:25,500 --> 00:08:28,830
then<font color="#CCCCCC"> you use the bit</font><font color="#E5E5E5"> Z to do the dual</font>

259
00:08:27,300 --> 00:08:30,270
operation so you're<font color="#CCCCCC"> doing a phase flip</font>

260
00:08:28,830 --> 00:08:32,098
if you don't know what a face flip is

261
00:08:30,270 --> 00:08:36,860
don't worry about<font color="#E5E5E5"> we're not really going</font>

262
00:08:32,099 --> 00:08:39,240
<font color="#E5E5E5">to mention need it today but importantly</font>

263
00:08:36,860 --> 00:08:41,130
<font color="#E5E5E5">note that the classical one-time pad</font><font color="#CCCCCC"> is</font>

264
00:08:39,240 --> 00:08:42,270
just<font color="#E5E5E5"> a special case of the can be</font>

265
00:08:41,130 --> 00:08:44,070
derived<font color="#E5E5E5"> as a special case of quantum</font>

266
00:08:42,270 --> 00:08:46,770
one-time pad<font color="#CCCCCC"> when you take the bit Z to</font>

267
00:08:44,070 --> 00:08:48,840
<font color="#E5E5E5">be 0</font><font color="#CCCCCC"> so a classically one-time pad at</font>

268
00:08:46,770 --> 00:08:52,589
value classical value can<font color="#E5E5E5"> be seen as a</font>

269
00:08:48,840 --> 00:08:53,760
quantumly one-time pad at value so the

270
00:08:52,589 --> 00:08:55,740
probe<font color="#CCCCCC"> and Jeffrey approach is the</font>

271
00:08:53,760 --> 00:08:56,850
following so if I want to<font color="#E5E5E5"> quantumly</font>

272
00:08:55,740 --> 00:08:58,769
encrypt a Quantum's

273
00:08:56,850 --> 00:09:00,600
date<font color="#CCCCCC"> what I'm going to do is I'm going</font>

274
00:08:58,769 --> 00:09:02,699
<font color="#CCCCCC">to generate</font><font color="#E5E5E5"> a quantum one-time pass I'm</font>

275
00:09:00,600 --> 00:09:05,130
going to<font color="#E5E5E5"> generate two classical bits</font><font color="#CCCCCC"> Y &</font>

276
00:09:02,699 --> 00:09:08,040
<font color="#CCCCCC">Z</font><font color="#E5E5E5"> I'm going to use them to quantum</font>

277
00:09:05,130 --> 00:09:09,959
one-time pad<font color="#E5E5E5"> the the my register alpha</font>

278
00:09:08,040 --> 00:09:12,990
<font color="#E5E5E5">and then I'm going to use a classical</font>

279
00:09:09,959 --> 00:09:14,279
encryption scheme to encrypt<font color="#E5E5E5"> y&z and for</font>

280
00:09:12,990 --> 00:09:15,569
the sake of my own<font color="#E5E5E5"> sanity instead of</font>

281
00:09:14,279 --> 00:09:17,759
writing<font color="#E5E5E5"> you know classical fully</font>

282
00:09:15,569 --> 00:09:19,439
homomorphic encryption<font color="#CCCCCC"> classical fully</font>

283
00:09:17,759 --> 00:09:21,120
homomorphic encryption of y&z<font color="#E5E5E5"> I'm just</font>

284
00:09:19,440 --> 00:09:23,069
going to<font color="#E5E5E5"> use</font><font color="#CCCCCC"> brackets so things in</font>

285
00:09:21,120 --> 00:09:25,800
brackets are encrypted with a classical

286
00:09:23,069 --> 00:09:27,630
<font color="#E5E5E5">scheme so this is a pretty cool idea</font>

287
00:09:25,800 --> 00:09:29,670
<font color="#CCCCCC">even</font><font color="#E5E5E5"> regardless of whom morphism it</font>

288
00:09:27,630 --> 00:09:31,560
shows that<font color="#E5E5E5"> you can get a quantum public</font>

289
00:09:29,670 --> 00:09:34,170
<font color="#E5E5E5">key encryption from any classical public</font>

290
00:09:31,560 --> 00:09:35,550
key encryption scheme<font color="#E5E5E5"> and security is</font>

291
00:09:34,170 --> 00:09:38,880
<font color="#E5E5E5">pretty immediate just by just by</font><font color="#CCCCCC"> a</font>

292
00:09:35,550 --> 00:09:40,199
hybrid<font color="#E5E5E5"> argument</font><font color="#CCCCCC"> as usual with home or</font>

293
00:09:38,880 --> 00:09:41,819
<font color="#CCCCCC">'fuck encryption the problem is how did</font>

294
00:09:40,199 --> 00:09:44,849
how to get correctness how to get home

295
00:09:41,819 --> 00:09:46,319
morphic evaluation to work and as<font color="#CCCCCC"> I</font><font color="#E5E5E5"> said</font>

296
00:09:44,850 --> 00:09:47,850
this is<font color="#CCCCCC"> sort of</font><font color="#E5E5E5"> always the problem</font>

297
00:09:46,319 --> 00:09:49,649
so we're going<font color="#E5E5E5"> to forget about security</font>

298
00:09:47,850 --> 00:09:51,750
<font color="#E5E5E5">once we got to this point security is</font>

299
00:09:49,649 --> 00:09:52,980
guaranteed<font color="#CCCCCC"> there's no nothing</font><font color="#E5E5E5"> that I can</font>

300
00:09:51,750 --> 00:09:54,930
do<font color="#CCCCCC"> from this</font><font color="#E5E5E5"> point and</font><font color="#CCCCCC"> on can harm</font>

301
00:09:52,980 --> 00:09:56,850
security<font color="#E5E5E5"> all need to worry about now is</font>

302
00:09:54,930 --> 00:09:59,250
to<font color="#E5E5E5"> get the functionalities</font><font color="#CCCCCC"> to get the</font>

303
00:09:56,850 --> 00:10:01,709
correctness<font color="#E5E5E5"> how do you get the</font>

304
00:09:59,250 --> 00:10:04,170
correctness<font color="#E5E5E5"> well it turns out that</font><font color="#CCCCCC"> the</font>

305
00:10:01,709 --> 00:10:06,180
following building block is required in

306
00:10:04,170 --> 00:10:08,219
order to get home<font color="#CCCCCC"> morphic evaluation for</font>

307
00:10:06,180 --> 00:10:11,008
this<font color="#E5E5E5"> type</font><font color="#CCCCCC"> of schemes so you can think</font>

308
00:10:08,220 --> 00:10:12,360
<font color="#CCCCCC">about this in analogue for</font><font color="#E5E5E5"> home</font><font color="#CCCCCC"> morphism</font>

309
00:10:11,009 --> 00:10:15,620
for linear functions in the classical

310
00:10:12,360 --> 00:10:18,959
setting<font color="#E5E5E5"> so I haven't encrypted bit</font><font color="#CCCCCC"> x + 2</font>

311
00:10:15,620 --> 00:10:21,420
<font color="#CCCCCC">+ 2 bits a and b and</font><font color="#E5E5E5"> what</font><font color="#CCCCCC"> i want is to</font>

312
00:10:18,959 --> 00:10:23,790
<font color="#E5E5E5">get an encryption of ax</font><font color="#CCCCCC"> + B this</font><font color="#E5E5E5"> is sort</font>

313
00:10:21,420 --> 00:10:25,469
of a pretty basic primitive<font color="#E5E5E5"> but it's</font>

314
00:10:23,790 --> 00:10:28,199
quantum analog is slightly<font color="#E5E5E5"> more</font>

315
00:10:25,470 --> 00:10:29,759
complicated<font color="#CCCCCC"> so now again we have an</font>

316
00:10:28,199 --> 00:10:33,329
encrypted classical bit in a

317
00:10:29,759 --> 00:10:36,589
superposition<font color="#E5E5E5"> over two qubits and what I</font>

318
00:10:33,329 --> 00:10:39,810
want is to<font color="#E5E5E5"> get an encryption of ax + B</font>

319
00:10:36,589 --> 00:10:41,759
but now using<font color="#CCCCCC"> our sort</font><font color="#E5E5E5"> of new using our</font>

320
00:10:39,810 --> 00:10:43,469
encryption method<font color="#E5E5E5"> so this superposition</font>

321
00:10:41,759 --> 00:10:45,089
needs to be encrypted<font color="#E5E5E5"> with a quantum</font>

322
00:10:43,470 --> 00:10:46,139
one-time pad and the quantum one-time

323
00:10:45,089 --> 00:10:48,569
pad needs to be encrypted<font color="#E5E5E5"> with a</font>

324
00:10:46,139 --> 00:10:50,670
classical<font color="#E5E5E5"> scheme so if I'm able to</font>

325
00:10:48,569 --> 00:10:53,969
perform<font color="#E5E5E5"> this type of transformation</font>

326
00:10:50,670 --> 00:10:57,089
<font color="#E5E5E5">given a classically encrypted bit X and</font>

327
00:10:53,970 --> 00:10:58,110
a superposition over a and B then I I'm

328
00:10:57,089 --> 00:11:00,569
going<font color="#E5E5E5"> to be able to get the entire</font>

329
00:10:58,110 --> 00:11:03,959
<font color="#E5E5E5">quantum quantum evaluation that I want</font>

330
00:11:00,569 --> 00:11:06,059
and<font color="#E5E5E5"> actually another way to think about</font>

331
00:11:03,959 --> 00:11:08,430
it is that this<font color="#E5E5E5"> operation in fact takes</font>

332
00:11:06,059 --> 00:11:09,430
this bit<font color="#E5E5E5"> X which is sort of inside the</font>

333
00:11:08,430 --> 00:11:12,339
<font color="#E5E5E5">cipher</font>

334
00:11:09,430 --> 00:11:16,180
<font color="#E5E5E5">and teleports it into the into the</font>

335
00:11:12,340 --> 00:11:18,100
<font color="#CCCCCC">quantum superposition so this is</font>

336
00:11:16,180 --> 00:11:22,750
actually an approach that<font color="#E5E5E5"> was</font><font color="#CCCCCC"> was useful</font>

337
00:11:18,100 --> 00:11:25,090
<font color="#E5E5E5">in the past</font><font color="#CCCCCC"> so let's see how</font><font color="#E5E5E5"> to actually</font>

338
00:11:22,750 --> 00:11:26,620
do<font color="#E5E5E5"> it</font><font color="#CCCCCC"> so this is</font><font color="#E5E5E5"> kind of complicated so</font>

339
00:11:25,090 --> 00:11:28,690
I'm just going<font color="#CCCCCC"> to simplify</font><font color="#E5E5E5"> it a little</font>

340
00:11:26,620 --> 00:11:31,420
<font color="#E5E5E5">bit I'm going to do something that's I</font>

341
00:11:28,690 --> 00:11:33,910
<font color="#CCCCCC">think it's as hard</font><font color="#E5E5E5"> and I'm just going to</font>

342
00:11:31,420 --> 00:11:36,280
take I'm<font color="#CCCCCC"> just going to take a classical</font>

343
00:11:33,910 --> 00:11:38,170
bit<font color="#CCCCCC"> X and now a superposition just over</font>

344
00:11:36,280 --> 00:11:39,819
a<font color="#E5E5E5"> single qubit</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> what they want is to</font>

345
00:11:38,170 --> 00:11:42,880
<font color="#E5E5E5">get serve the quantum analog of an</font>

346
00:11:39,820 --> 00:11:46,330
encryption of<font color="#CCCCCC"> a times X so this</font><font color="#E5E5E5"> is what</font>

347
00:11:42,880 --> 00:11:48,250
I'm going<font color="#E5E5E5"> to work on from</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> on and</font>

348
00:11:46,330 --> 00:11:49,600
naively so if I'm saying<font color="#CCCCCC"> that</font><font color="#E5E5E5"> this is</font>

349
00:11:48,250 --> 00:11:51,550
<font color="#E5E5E5">the quantum analog of getting an</font>

350
00:11:49,600 --> 00:11:53,860
encryption of<font color="#E5E5E5"> a times X well I know my</font>

351
00:11:51,550 --> 00:11:55,050
<font color="#CCCCCC">original</font><font color="#E5E5E5"> X bit was encrypted using a</font>

352
00:11:53,860 --> 00:11:58,030
classical fully homomorphic encryption

353
00:11:55,050 --> 00:12:00,219
<font color="#CCCCCC">so I can</font><font color="#E5E5E5"> start from a superposition over</font>

354
00:11:58,030 --> 00:12:02,650
the A's and get to a superposition<font color="#E5E5E5"> over</font>

355
00:12:00,220 --> 00:12:04,540
a comma<font color="#E5E5E5"> encryption of a times X this</font>

356
00:12:02,650 --> 00:12:06,970
just follows for the from<font color="#E5E5E5"> the home from</font>

357
00:12:04,540 --> 00:12:09,579
the classical homomorphic evaluation so

358
00:12:06,970 --> 00:12:12,220
what I get now<font color="#E5E5E5"> is a superposition over</font>

359
00:12:09,580 --> 00:12:14,770
classical<font color="#E5E5E5"> over classical home Orphic</font>

360
00:12:12,220 --> 00:12:16,780
ciphertext<font color="#E5E5E5"> and this is not what I want I</font>

361
00:12:14,770 --> 00:12:18,730
<font color="#E5E5E5">mean I'd</font><font color="#CCCCCC"> want to now pull out this</font>

362
00:12:16,780 --> 00:12:20,770
classical<font color="#E5E5E5"> ciphertext from outside</font><font color="#CCCCCC"> of my</font>

363
00:12:18,730 --> 00:12:22,660
superposition<font color="#E5E5E5"> because what I want in the</font>

364
00:12:20,770 --> 00:12:24,460
end is that<font color="#E5E5E5"> all classical encryptions</font>

365
00:12:22,660 --> 00:12:25,810
are outside of the superposition<font color="#CCCCCC"> and I'm</font>

366
00:12:24,460 --> 00:12:27,400
only getting<font color="#CCCCCC"> a superposition</font><font color="#E5E5E5"> that is one</font>

367
00:12:25,810 --> 00:12:29,530
time padded and<font color="#E5E5E5"> not like encrypted using</font>

368
00:12:27,400 --> 00:12:31,300
classical homomorphic encryption so

369
00:12:29,530 --> 00:12:32,470
maybe the right<font color="#CCCCCC"> thing to do is to just</font>

370
00:12:31,300 --> 00:12:35,020
<font color="#E5E5E5">sort of measure the register that</font>

371
00:12:32,470 --> 00:12:36,250
contains a times X but this is not<font color="#E5E5E5"> going</font>

372
00:12:35,020 --> 00:12:39,430
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> good</font><font color="#CCCCCC"> because it's going</font><font color="#E5E5E5"> to</font>

373
00:12:36,250 --> 00:12:41,230
<font color="#CCCCCC">collapse the superposition so the first</font>

374
00:12:39,430 --> 00:12:44,109
thing that<font color="#E5E5E5"> we could notice is that the</font>

375
00:12:41,230 --> 00:12:45,940
value 8 times X actually<font color="#E5E5E5"> depends on a so</font>

376
00:12:44,110 --> 00:12:47,200
once I measure an encryption of a times

377
00:12:45,940 --> 00:12:48,820
X I'm going<font color="#E5E5E5"> to collapse the</font>

378
00:12:47,200 --> 00:12:50,410
superposition<font color="#E5E5E5"> of a and this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font>

379
00:12:48,820 --> 00:12:52,330
destroy<font color="#CCCCCC"> the correctness of my the</font>

380
00:12:50,410 --> 00:12:54,490
correctness of my<font color="#CCCCCC"> evaluation</font><font color="#E5E5E5"> however</font>

381
00:12:52,330 --> 00:12:56,500
<font color="#CCCCCC">this is</font><font color="#E5E5E5"> not so hard to fix</font><font color="#CCCCCC"> I'm just</font>

382
00:12:54,490 --> 00:12:58,030
going<font color="#CCCCCC"> to introduce</font><font color="#E5E5E5"> a mediator between</font><font color="#CCCCCC"> a</font>

383
00:12:56,500 --> 00:12:59,590
times X and the classical encrypted

384
00:12:58,030 --> 00:13:01,329
value and we're going to<font color="#E5E5E5"> see that this</font>

385
00:12:59,590 --> 00:13:02,680
is<font color="#E5E5E5"> going to solve our problem</font><font color="#CCCCCC"> so I'm</font>

386
00:13:01,330 --> 00:13:04,270
<font color="#E5E5E5">going to introduce a new register Y</font>

387
00:13:02,680 --> 00:13:06,520
<font color="#E5E5E5">Prime and this Y prime</font><font color="#CCCCCC"> is just</font><font color="#E5E5E5"> in</font>

388
00:13:04,270 --> 00:13:09,100
superposition between 0<font color="#CCCCCC"> and 1 and now</font>

389
00:13:06,520 --> 00:13:11,020
<font color="#E5E5E5">instead</font><font color="#CCCCCC"> of computing ax plus ax</font><font color="#E5E5E5"> I'm</font>

390
00:13:09,100 --> 00:13:14,410
computing<font color="#CCCCCC"> ax plus y Prime and I'm going</font>

391
00:13:11,020 --> 00:13:16,480
<font color="#E5E5E5">to call this value Y now why do I claim</font>

392
00:13:14,410 --> 00:13:18,490
that this<font color="#CCCCCC"> solve</font><font color="#E5E5E5"> the problem and what I'm</font>

393
00:13:16,480 --> 00:13:20,140
going to<font color="#CCCCCC"> try</font><font color="#E5E5E5"> to do is pull Y out this is</font>

394
00:13:18,490 --> 00:13:21,910
going to be my new goal but first let's

395
00:13:20,140 --> 00:13:22,470
see why this<font color="#CCCCCC"> is like why this</font><font color="#E5E5E5"> is</font>

396
00:13:21,910 --> 00:13:25,740
progress

397
00:13:22,470 --> 00:13:27,750
so just by definition y equals ax plus<font color="#CCCCCC"> y</font>

398
00:13:25,740 --> 00:13:30,779
prime which means<font color="#CCCCCC"> that equivalently Y</font>

399
00:13:27,750 --> 00:13:33,750
prime equals ax<font color="#E5E5E5"> plus y so Y</font><font color="#CCCCCC"> prime is</font>

400
00:13:30,779 --> 00:13:36,660
just<font color="#E5E5E5"> the value</font><font color="#CCCCCC"> a times</font><font color="#E5E5E5"> X one time padded</font>

401
00:13:33,750 --> 00:13:37,980
by Y so if we measured the the

402
00:13:36,660 --> 00:13:40,620
encryption of<font color="#E5E5E5"> Y then really what we</font>

403
00:13:37,980 --> 00:13:43,290
<font color="#E5E5E5">would get is a times</font><font color="#CCCCCC"> X one time padded</font>

404
00:13:40,620 --> 00:13:45,689
with this value<font color="#E5E5E5"> Y for which we we get</font>

405
00:13:43,290 --> 00:13:47,849
<font color="#E5E5E5">the cipher</font><font color="#CCCCCC"> text</font><font color="#E5E5E5"> for so this is this</font>

406
00:13:45,689 --> 00:13:49,639
<font color="#E5E5E5">seems like a step</font><font color="#CCCCCC"> in the</font><font color="#E5E5E5"> right direction</font>

407
00:13:47,850 --> 00:13:52,319
so this is really<font color="#E5E5E5"> what we're going to</font><font color="#CCCCCC"> do</font>

408
00:13:49,639 --> 00:13:55,110
<font color="#E5E5E5">however we observed it even though now</font>

409
00:13:52,319 --> 00:13:56,490
if we<font color="#E5E5E5"> just measure the</font><font color="#CCCCCC"> value Y this is</font>

410
00:13:55,110 --> 00:13:58,290
not going<font color="#E5E5E5"> to collapse our</font><font color="#CCCCCC"> superposition</font>

411
00:13:56,490 --> 00:14:01,019
<font color="#E5E5E5">from for the reasons that that</font><font color="#CCCCCC"> I just</font>

412
00:13:58,290 --> 00:14:02,490
<font color="#CCCCCC">explained we're</font><font color="#E5E5E5"> not measuring</font><font color="#CCCCCC"> Y itself</font>

413
00:14:01,019 --> 00:14:04,290
<font color="#E5E5E5">but actually</font><font color="#CCCCCC"> we were measuring</font><font color="#E5E5E5"> an</font>

414
00:14:02,490 --> 00:14:06,420
encryption of<font color="#E5E5E5"> Y we're measuring a whole</font>

415
00:14:04,290 --> 00:14:09,769
<font color="#E5E5E5">cipher text and the</font><font color="#CCCCCC"> cipher text might</font>

416
00:14:06,420 --> 00:14:12,149
click about about the history about<font color="#E5E5E5"> it's</font>

417
00:14:09,769 --> 00:14:15,269
about<font color="#E5E5E5"> the way that it was the way that</font>

418
00:14:12,149 --> 00:14:16,860
<font color="#E5E5E5">was created so and this actually has to</font>

419
00:14:15,269 --> 00:14:19,259
<font color="#CCCCCC">be the</font><font color="#E5E5E5"> case so</font><font color="#CCCCCC"> long as</font><font color="#E5E5E5"> you're home</font>

420
00:14:16,860 --> 00:14:23,910
morphic evaluation<font color="#E5E5E5"> is a deterministic</font>

421
00:14:19,259 --> 00:14:25,379
process<font color="#E5E5E5"> so if we were if we were to</font>

422
00:14:23,910 --> 00:14:27,649
<font color="#E5E5E5">measure Y then we would be</font><font color="#CCCCCC"> okay but we</font>

423
00:14:25,379 --> 00:14:29,939
<font color="#E5E5E5">need to measure this ciphertext of Y and</font>

424
00:14:27,649 --> 00:14:31,350
this this could create this could<font color="#E5E5E5"> create</font>

425
00:14:29,939 --> 00:14:33,060
a problem<font color="#CCCCCC"> because the</font><font color="#E5E5E5"> cipher text itself</font>

426
00:14:31,350 --> 00:14:34,709
contains some information<font color="#CCCCCC"> about the</font>

427
00:14:33,060 --> 00:14:36,000
<font color="#E5E5E5">value a that was used to create it and</font>

428
00:14:34,709 --> 00:14:37,380
this<font color="#E5E5E5"> will still collapse our</font>

429
00:14:36,000 --> 00:14:40,709
<font color="#CCCCCC">superposition so this is like</font><font color="#E5E5E5"> sort of</font>

430
00:14:37,380 --> 00:14:46,970
the hard problem<font color="#CCCCCC"> any suggestions on</font><font color="#E5E5E5"> how</font>

431
00:14:40,709 --> 00:14:49,800
this<font color="#E5E5E5"> can be fixed okay</font><font color="#CCCCCC"> never mind</font>

432
00:14:46,970 --> 00:14:50,910
so circuit privacy seems like a tool

433
00:14:49,800 --> 00:14:53,099
that<font color="#E5E5E5"> could</font><font color="#CCCCCC"> be useful here because</font>

434
00:14:50,910 --> 00:14:55,259
circuit privacy<font color="#E5E5E5"> essentially says that</font>

435
00:14:53,100 --> 00:14:57,389
<font color="#CCCCCC">the information in the ciphertext</font><font color="#E5E5E5"> should</font>

436
00:14:55,259 --> 00:14:58,800
not<font color="#E5E5E5"> be much more than just</font><font color="#CCCCCC"> the</font>

437
00:14:57,389 --> 00:15:02,189
information<font color="#CCCCCC"> that exists in the plaintext</font>

438
00:14:58,800 --> 00:15:04,649
<font color="#E5E5E5">so let's sort of talk a little bit more</font>

439
00:15:02,189 --> 00:15:09,420
in depth about<font color="#CCCCCC"> circuit private classical</font>

440
00:15:04,649 --> 00:15:11,220
fully homomorphic encryption<font color="#E5E5E5"> so what we</font>

441
00:15:09,420 --> 00:15:12,870
have is<font color="#E5E5E5"> instead of having a</font>

442
00:15:11,220 --> 00:15:14,100
deterministic evaluation process<font color="#CCCCCC"> so</font>

443
00:15:12,870 --> 00:15:16,170
<font color="#CCCCCC">remember</font><font color="#E5E5E5"> now we're talking about the</font>

444
00:15:14,100 --> 00:15:18,209
classical setting<font color="#E5E5E5"> our home morphic</font>

445
00:15:16,170 --> 00:15:20,729
evaluation is<font color="#CCCCCC"> going to be randomized</font><font color="#E5E5E5"> so</font>

446
00:15:18,209 --> 00:15:22,349
in addition to<font color="#CCCCCC"> taking the encrypted the</font>

447
00:15:20,730 --> 00:15:24,089
<font color="#E5E5E5">encrypted value encrypted input X and</font>

448
00:15:22,350 --> 00:15:26,220
the<font color="#CCCCCC"> function f</font><font color="#E5E5E5"> there's also going to be</font>

449
00:15:24,089 --> 00:15:27,930
<font color="#CCCCCC">a random tape</font><font color="#E5E5E5"> and this is going to be a</font>

450
00:15:26,220 --> 00:15:29,699
randomized functionality and the

451
00:15:27,930 --> 00:15:31,199
guarantee<font color="#E5E5E5"> is that the</font><font color="#CCCCCC"> OP the</font>

452
00:15:29,699 --> 00:15:33,269
distribution of the outputs the outputs

453
00:15:31,199 --> 00:15:34,529
Y is going<font color="#E5E5E5"> to only</font><font color="#CCCCCC"> depend on the</font>

454
00:15:33,269 --> 00:15:36,299
plaintext

455
00:15:34,529 --> 00:15:38,579
the encryption<font color="#E5E5E5"> of</font><font color="#CCCCCC"> wires only depend only</font>

456
00:15:36,299 --> 00:15:40,259
<font color="#CCCCCC">depends on</font><font color="#E5E5E5"> why and this is true even if</font>

457
00:15:38,579 --> 00:15:42,299
you know X<font color="#E5E5E5"> and even if you know F even</font>

458
00:15:40,259 --> 00:15:45,869
<font color="#CCCCCC">if you know</font><font color="#E5E5E5"> everything except the random</font>

459
00:15:42,299 --> 00:15:48,149
tape<font color="#E5E5E5"> so in a sense the circuit private</font>

460
00:15:45,869 --> 00:15:50,459
home<font color="#CCCCCC"> Orphic evaluation actually</font><font color="#E5E5E5"> pushes</font>

461
00:15:48,149 --> 00:15:52,439
all of<font color="#CCCCCC"> this ugly information that we</font>

462
00:15:50,459 --> 00:15:53,638
don't<font color="#E5E5E5"> want</font><font color="#CCCCCC"> into the</font><font color="#E5E5E5"> randomness register</font>

463
00:15:52,439 --> 00:15:55,468
so so<font color="#E5E5E5"> long as you don't see the rendered</font>

464
00:15:53,639 --> 00:16:00,319
<font color="#E5E5E5">randomness register you don't get any</font>

465
00:15:55,469 --> 00:16:02,519
bad<font color="#CCCCCC"> information so property for</font>

466
00:16:00,319 --> 00:16:05,728
randomized the evaluation<font color="#E5E5E5"> that is going</font>

467
00:16:02,519 --> 00:16:07,139
to matter<font color="#E5E5E5"> for</font><font color="#CCCCCC"> us is the conditional</font>

468
00:16:05,729 --> 00:16:08,759
<font color="#E5E5E5">distribution of the randomness</font>

469
00:16:07,139 --> 00:16:10,649
<font color="#E5E5E5">conditioned on like all this other</font>

470
00:16:08,759 --> 00:16:13,469
information<font color="#E5E5E5"> to import the output and the</font>

471
00:16:10,649 --> 00:16:15,509
function that<font color="#E5E5E5"> was evaluated so I'm going</font>

472
00:16:13,469 --> 00:16:17,789
to<font color="#E5E5E5"> explain why this is important</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> in</font>

473
00:16:15,509 --> 00:16:19,799
in the next<font color="#E5E5E5"> slide</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> for now mmm</font>

474
00:16:17,789 --> 00:16:22,019
this let's<font color="#E5E5E5"> just think about the</font>

475
00:16:19,799 --> 00:16:24,029
definition<font color="#CCCCCC"> so if you know the encryption</font>

476
00:16:22,019 --> 00:16:26,389
<font color="#CCCCCC">of</font><font color="#E5E5E5"> X descriptions of Y and F what can</font>

477
00:16:24,029 --> 00:16:28,589
you tell<font color="#CCCCCC"> me about the randomness are and</font>

478
00:16:26,389 --> 00:16:31,469
the way we interpret<font color="#E5E5E5"> some</font><font color="#CCCCCC"> aha revs</font>

479
00:16:28,589 --> 00:16:33,389
construction is<font color="#E5E5E5"> that she requires a</font>

480
00:16:31,469 --> 00:16:35,699
circuit private classical home morphic

481
00:16:33,389 --> 00:16:37,229
encryption scheme where the runways are

482
00:16:35,699 --> 00:16:43,108
<font color="#E5E5E5">is uniquely</font><font color="#CCCCCC"> determined by these values</font>

483
00:16:37,229 --> 00:16:45,269
<font color="#CCCCCC">XY and XY and F sorry</font><font color="#E5E5E5"> whereas here we</font>

484
00:16:43,109 --> 00:16:51,299
want<font color="#E5E5E5"> to work with sort of more efficient</font>

485
00:16:45,269 --> 00:16:55,649
or more<font color="#CCCCCC"> elaborate ways to get to get</font>

486
00:16:51,299 --> 00:16:58,919
circuit privacy<font color="#CCCCCC"> and especially we rely</font>

487
00:16:55,649 --> 00:17:01,799
on a scheme<font color="#CCCCCC"> by bourse at all from</font><font color="#E5E5E5"> from</font>

488
00:16:58,919 --> 00:17:02,970
crypto 2016<font color="#E5E5E5"> and there the this</font>

489
00:17:01,799 --> 00:17:05,128
<font color="#E5E5E5">conditional</font><font color="#CCCCCC"> distribution of randomness</font>

490
00:17:02,970 --> 00:17:07,230
<font color="#E5E5E5">is much uglier so it's a Gaussian</font>

491
00:17:05,128 --> 00:17:09,658
<font color="#E5E5E5">distribution over</font><font color="#CCCCCC"> a lattice coset that</font>

492
00:17:07,230 --> 00:17:11,519
is determined by<font color="#CCCCCC"> these XY NF so if you</font>

493
00:17:09,659 --> 00:17:12,869
don't know what<font color="#E5E5E5"> these lattice cosets are</font>

494
00:17:11,519 --> 00:17:14,429
don't<font color="#E5E5E5"> worry about it we won't need them</font>

495
00:17:12,868 --> 00:17:18,418
<font color="#E5E5E5">much but it's like an much uglier</font>

496
00:17:14,429 --> 00:17:21,990
<font color="#E5E5E5">distribution</font><font color="#CCCCCC"> okay good so let's see how</font>

497
00:17:18,419 --> 00:17:25,019
<font color="#E5E5E5">to use how</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> use this circuit privacy</font>

498
00:17:21,990 --> 00:17:26,699
in order to teleport<font color="#E5E5E5"> X into our state so</font>

499
00:17:25,019 --> 00:17:28,980
before we said that we<font color="#E5E5E5"> are going to</font>

500
00:17:26,699 --> 00:17:30,720
<font color="#E5E5E5">evaluate a</font><font color="#CCCCCC"> X plus y prime now we're just</font>

501
00:17:28,980 --> 00:17:32,759
<font color="#E5E5E5">going to do it using a circuit private</font>

502
00:17:30,720 --> 00:17:35,700
scheme so we need additionally a

503
00:17:32,759 --> 00:17:36,750
randomness a randomness register so in

504
00:17:35,700 --> 00:17:38,639
addition<font color="#CCCCCC"> our quantum state we're going</font>

505
00:17:36,750 --> 00:17:41,309
<font color="#CCCCCC">to have a randomness value and we're</font>

506
00:17:38,639 --> 00:17:43,320
going to<font color="#E5E5E5"> do and we're</font><font color="#CCCCCC"> going to</font><font color="#E5E5E5"> do</font>

507
00:17:41,309 --> 00:17:45,720
<font color="#CCCCCC">circuit private homomorphic evaluation</font>

508
00:17:43,320 --> 00:17:47,909
of this<font color="#E5E5E5"> value</font><font color="#CCCCCC"> ax plus y prime</font><font color="#E5E5E5"> and this</font>

509
00:17:45,720 --> 00:17:49,590
actually works<font color="#CCCCCC"> now if</font><font color="#E5E5E5"> I do this</font><font color="#CCCCCC"> the</font>

510
00:17:47,910 --> 00:17:53,070
I<font color="#CCCCCC"> can actually measure</font><font color="#E5E5E5"> this part of the</font>

511
00:17:49,590 --> 00:17:56,159
register and get this classical

512
00:17:53,070 --> 00:17:57,780
encryption of<font color="#E5E5E5"> Y but now the quantum part</font>

513
00:17:56,160 --> 00:17:59,610
<font color="#CCCCCC">while it contains a and</font><font color="#E5E5E5"> Y prime which is</font>

514
00:17:57,780 --> 00:18:02,010
<font color="#E5E5E5">good this is</font><font color="#CCCCCC"> what I want</font><font color="#E5E5E5"> but in addition</font>

515
00:17:59,610 --> 00:18:03,750
<font color="#E5E5E5">it contains</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> randomness value which</font>

516
00:18:02,010 --> 00:18:05,670
as I<font color="#CCCCCC"> said</font><font color="#E5E5E5"> before now it contains all</font>

517
00:18:03,750 --> 00:18:07,380
this like sort<font color="#E5E5E5"> of bad information</font><font color="#CCCCCC"> that I</font>

518
00:18:05,670 --> 00:18:09,570
didn't want the ciphertext Y to contain

519
00:18:07,380 --> 00:18:12,470
before so now I need<font color="#E5E5E5"> to find a way to</font>

520
00:18:09,570 --> 00:18:15,689
sort<font color="#CCCCCC"> of get rid or uncomputable</font>

521
00:18:12,470 --> 00:18:17,490
terminology<font color="#E5E5E5"> this register this register</font>

522
00:18:15,690 --> 00:18:19,410
<font color="#E5E5E5">R in order to avoid the stage from</font>

523
00:18:17,490 --> 00:18:21,210
collapsing<font color="#E5E5E5"> so if I just measure this R</font>

524
00:18:19,410 --> 00:18:23,070
to try to get<font color="#CCCCCC"> rid of it then</font><font color="#E5E5E5"> I would</font>

525
00:18:21,210 --> 00:18:24,350
collapse<font color="#E5E5E5"> the</font><font color="#CCCCCC"> sate just as I would</font><font color="#E5E5E5"> just</font>

526
00:18:23,070 --> 00:18:29,040
as I did<font color="#CCCCCC"> before</font>

527
00:18:24,350 --> 00:18:31,560
so what mahadev showed was<font color="#CCCCCC"> that</font><font color="#E5E5E5"> in the</font>

528
00:18:29,040 --> 00:18:33,149
in the case where R<font color="#E5E5E5"> as unique then you</font>

529
00:18:31,560 --> 00:18:35,879
can actually<font color="#E5E5E5"> remove it by performing</font>

530
00:18:33,150 --> 00:18:37,770
<font color="#E5E5E5">binary Fourier transform on the register</font>

531
00:18:35,880 --> 00:18:39,600
<font color="#CCCCCC">R so it doesn't actually</font><font color="#E5E5E5"> remove it it</font>

532
00:18:37,770 --> 00:18:41,070
just sort<font color="#CCCCCC"> of pushes it into</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> face in</font>

533
00:18:39,600 --> 00:18:42,240
a<font color="#E5E5E5"> way that is manageable but let's not</font>

534
00:18:41,070 --> 00:18:44,550
get<font color="#CCCCCC"> into that</font>

535
00:18:42,240 --> 00:18:46,590
so<font color="#E5E5E5"> for unique</font><font color="#CCCCCC"> or you can actually find</font><font color="#E5E5E5"> a</font>

536
00:18:44,550 --> 00:18:48,480
solution<font color="#E5E5E5"> which is sort of I would</font><font color="#CCCCCC"> say</font>

537
00:18:46,590 --> 00:18:50,310
it's<font color="#E5E5E5"> computer</font><font color="#CCCCCC"> toriel a nation in nature</font>

538
00:18:48,480 --> 00:18:52,850
whereas what we<font color="#E5E5E5"> try to do here</font><font color="#CCCCCC"> is get</font>

539
00:18:50,310 --> 00:18:55,679
some sort of an algebraic approach to

540
00:18:52,850 --> 00:18:58,709
removing this<font color="#E5E5E5"> to remove this randomness</font>

541
00:18:55,680 --> 00:19:01,320
register so really at a super<font color="#CCCCCC"> high level</font>

542
00:18:58,710 --> 00:19:03,510
what we try to<font color="#E5E5E5"> do is replace the binary</font>

543
00:19:01,320 --> 00:19:06,540
Fourier transform with QRF<font color="#E5E5E5"> we transform</font>

544
00:19:03,510 --> 00:19:09,270
where Q<font color="#CCCCCC"> is this lwe modulo so all of our</font>

545
00:19:06,540 --> 00:19:12,330
elements<font color="#CCCCCC"> sort</font><font color="#E5E5E5"> of natively live in Z mod</font>

546
00:19:09,270 --> 00:19:13,560
Q so it's natural to try<font color="#E5E5E5"> by the</font><font color="#CCCCCC"> qre</font>

547
00:19:12,330 --> 00:19:15,419
<font color="#E5E5E5">fourier transform it doesn't work</font>

548
00:19:13,560 --> 00:19:17,820
immediately<font color="#CCCCCC"> so</font><font color="#E5E5E5"> you need to sort</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> work</font>

549
00:19:15,420 --> 00:19:19,410
hard to make<font color="#CCCCCC"> it work and</font><font color="#E5E5E5"> then use this</font>

550
00:19:17,820 --> 00:19:22,110
algebraic properties of these<font color="#E5E5E5"> lattice</font>

551
00:19:19,410 --> 00:19:24,030
cosets<font color="#E5E5E5"> instead of the uniqueness</font>

552
00:19:22,110 --> 00:19:25,169
<font color="#CCCCCC">property that that was used before in</font>

553
00:19:24,030 --> 00:19:27,180
order<font color="#E5E5E5"> to show that</font><font color="#CCCCCC"> when you do</font><font color="#E5E5E5"> this</font>

554
00:19:25,170 --> 00:19:29,100
<font color="#E5E5E5">Fourier transform it allows you to sort</font>

555
00:19:27,180 --> 00:19:32,370
<font color="#E5E5E5">of push the bad</font><font color="#CCCCCC"> information again into</font>

556
00:19:29,100 --> 00:19:35,520
the<font color="#E5E5E5"> face in a manageable way and this</font>

557
00:19:32,370 --> 00:19:37,080
<font color="#CCCCCC">involves sort of coming up with with</font>

558
00:19:35,520 --> 00:19:40,470
some additional tools and<font color="#E5E5E5"> some</font><font color="#CCCCCC"> analogs</font>

559
00:19:37,080 --> 00:19:42,870
<font color="#E5E5E5">quantum analogues of classical tools</font>

560
00:19:40,470 --> 00:19:47,070
that were known before<font color="#CCCCCC"> but I'm</font><font color="#E5E5E5"> not going</font>

561
00:19:42,870 --> 00:19:49,020
<font color="#E5E5E5">to get into</font><font color="#CCCCCC"> the details</font><font color="#E5E5E5"> let me not</font>

562
00:19:47,070 --> 00:19:50,879
summarize but give you some remaining

563
00:19:49,020 --> 00:19:52,740
<font color="#E5E5E5">some</font><font color="#CCCCCC"> ringing questions</font><font color="#E5E5E5"> from this work</font>

564
00:19:50,880 --> 00:19:57,000
<font color="#E5E5E5">and then maybe tell you something else</font>

565
00:19:52,740 --> 00:19:58,980
so I think<font color="#E5E5E5"> so the way</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> I view things</font>

566
00:19:57,000 --> 00:20:01,170
<font color="#E5E5E5">is that what we did here was</font><font color="#CCCCCC"> to sort</font><font color="#E5E5E5"> of</font>

567
00:19:58,980 --> 00:20:04,620
show<font color="#CCCCCC"> that</font><font color="#E5E5E5"> this approach of</font>

568
00:20:01,170 --> 00:20:06,780
<font color="#E5E5E5">to evaluation actually requires this</font>

569
00:20:04,620 --> 00:20:08,159
requires circuit privacy<font color="#CCCCCC"> and the</font>

570
00:20:06,780 --> 00:20:09,510
question is whether this is inherent it

571
00:20:08,160 --> 00:20:11,190
seems like you know in the quantum

572
00:20:09,510 --> 00:20:12,960
setting<font color="#E5E5E5"> things are so delicate that you</font>

573
00:20:11,190 --> 00:20:14,520
have to somehow<font color="#E5E5E5"> prevent prevent them</font>

574
00:20:12,960 --> 00:20:16,200
from<font color="#CCCCCC"> collapsing</font><font color="#E5E5E5"> by something like</font>

575
00:20:14,520 --> 00:20:18,180
circuit privacy but I don't even<font color="#E5E5E5"> know</font>

576
00:20:16,200 --> 00:20:20,100
how<font color="#CCCCCC"> to formally so define it</font><font color="#E5E5E5"> so that I</font>

577
00:20:18,180 --> 00:20:23,640
<font color="#E5E5E5">can try to prove it so</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is sort of</font>

578
00:20:20,100 --> 00:20:25,050
one one interesting question<font color="#CCCCCC"> so the</font>

579
00:20:23,640 --> 00:20:27,570
second<font color="#E5E5E5"> one is I said that</font><font color="#CCCCCC"> we get a</font>

580
00:20:25,050 --> 00:20:29,610
slightly larger modulus<font color="#CCCCCC"> Q</font><font color="#E5E5E5"> than the</font>

581
00:20:27,570 --> 00:20:31,770
classical setting<font color="#E5E5E5"> in fact we match the</font>

582
00:20:29,610 --> 00:20:33,750
classical modulus of<font color="#E5E5E5"> the circuit private</font>

583
00:20:31,770 --> 00:20:35,100
scheme of<font color="#CCCCCC"> bore Sadao I wouldn't be</font>

584
00:20:33,750 --> 00:20:36,780
surprised<font color="#CCCCCC"> if</font><font color="#E5E5E5"> you can take it further</font>

585
00:20:35,100 --> 00:20:40,919
down<font color="#E5E5E5"> and</font><font color="#CCCCCC"> get very</font><font color="#E5E5E5"> close to</font><font color="#CCCCCC"> the classical</font>

586
00:20:36,780 --> 00:20:42,780
setting the issue of correctness<font color="#E5E5E5"> error</font>

587
00:20:40,920 --> 00:20:44,430
is kind of annoying<font color="#CCCCCC"> so we get like</font><font color="#E5E5E5"> great</font>

588
00:20:42,780 --> 00:20:46,020
tiny correctness<font color="#E5E5E5"> error but why can't we</font>

589
00:20:44,430 --> 00:20:48,570
get perfect correctness like we do in

590
00:20:46,020 --> 00:20:50,879
the classical setting<font color="#CCCCCC"> it's not clear</font><font color="#E5E5E5"> how</font>

591
00:20:48,570 --> 00:20:52,230
to do it but<font color="#E5E5E5"> I haven't</font><font color="#CCCCCC"> actually a</font><font color="#E5E5E5"> purely</font>

592
00:20:50,880 --> 00:20:54,000
classical question that you can think of

593
00:20:52,230 --> 00:20:56,340
and if you can solve<font color="#E5E5E5"> it then I</font><font color="#CCCCCC"> think it</font>

594
00:20:54,000 --> 00:20:58,350
would be a good<font color="#E5E5E5"> big first first step</font>

595
00:20:56,340 --> 00:21:00,149
<font color="#CCCCCC">toward solving</font><font color="#E5E5E5"> the quantum issue so the</font>

596
00:20:58,350 --> 00:21:02,459
question is to come up<font color="#E5E5E5"> with a semi</font>

597
00:21:00,150 --> 00:21:05,280
honest oblivious transfer scheme that

598
00:21:02,460 --> 00:21:07,110
has both perfect correctness and<font color="#E5E5E5"> perfect</font>

599
00:21:05,280 --> 00:21:09,180
privacy for the sender so we actually

600
00:21:07,110 --> 00:21:11,879
know how to do it based on<font color="#CCCCCC"> DDH and other</font>

601
00:21:09,180 --> 00:21:13,890
number theoretic<font color="#E5E5E5"> assumptions but</font><font color="#CCCCCC"> I want</font>

602
00:21:11,880 --> 00:21:15,320
to get<font color="#CCCCCC"> a post quantum solution so I want</font>

603
00:21:13,890 --> 00:21:17,670
<font color="#E5E5E5">to come up</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> a post quantum scheme</font>

604
00:21:15,320 --> 00:21:19,860
oblivious transfer scheme that<font color="#E5E5E5"> has both</font>

605
00:21:17,670 --> 00:21:21,540
perfect correctness and perfect sender

606
00:21:19,860 --> 00:21:22,740
privacy<font color="#E5E5E5"> completely classical question</font>

607
00:21:21,540 --> 00:21:24,750
and I think<font color="#CCCCCC"> if you solve it it would be</font>

608
00:21:22,740 --> 00:21:28,800
a good step<font color="#CCCCCC"> towards</font><font color="#E5E5E5"> perfect correctness</font>

609
00:21:24,750 --> 00:21:31,200
here lastly there's some ugliness in the

610
00:21:28,800 --> 00:21:32,520
construction so<font color="#CCCCCC"> we apply</font><font color="#E5E5E5"> like every</font>

611
00:21:31,200 --> 00:21:34,200
quantum gate<font color="#CCCCCC"> we apply requires</font>

612
00:21:32,520 --> 00:21:36,240
afterwards a lot<font color="#CCCCCC"> of post-processing</font><font color="#E5E5E5"> in</font>

613
00:21:34,200 --> 00:21:38,580
<font color="#E5E5E5">order to restore the state and again we</font>

614
00:21:36,240 --> 00:21:40,530
have<font color="#CCCCCC"> the slightly non-standard circular</font>

615
00:21:38,580 --> 00:21:41,520
security assumption and you know we

616
00:21:40,530 --> 00:21:44,370
don't want<font color="#E5E5E5"> to have these we</font><font color="#CCCCCC"> actually</font>

617
00:21:41,520 --> 00:21:45,900
want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> get the same the same efficiency</font>

618
00:21:44,370 --> 00:21:51,209
guarantees<font color="#CCCCCC"> that we have in the classical</font>

619
00:21:45,900 --> 00:21:53,490
setting so I want to<font color="#E5E5E5"> tell you I want</font><font color="#CCCCCC"> to</font>

620
00:21:51,210 --> 00:21:55,320
buy<font color="#CCCCCC"> eight into my questions time and</font>

621
00:21:53,490 --> 00:21:57,110
tell<font color="#E5E5E5"> you a</font><font color="#CCCCCC"> little bit about things that</font>

622
00:21:55,320 --> 00:21:59,159
<font color="#E5E5E5">are slightly different so there's been</font>

623
00:21:57,110 --> 00:22:01,260
pretty<font color="#E5E5E5"> interesting developments in this</font>

624
00:21:59,160 --> 00:22:03,390
whole<font color="#E5E5E5"> area of quantum outsourcing so</font>

625
00:22:01,260 --> 00:22:04,860
<font color="#E5E5E5">this setting where you have</font><font color="#CCCCCC"> a quantum</font><font color="#E5E5E5"> at</font>

626
00:22:03,390 --> 00:22:06,870
<font color="#E5E5E5">quantum server that wants to perform</font>

627
00:22:04,860 --> 00:22:09,240
some operation for a weaker<font color="#E5E5E5"> possibly</font>

628
00:22:06,870 --> 00:22:11,699
classical possibly classical client so

629
00:22:09,240 --> 00:22:13,740
<font color="#E5E5E5">we talked about the privacy issue but</font>

630
00:22:11,700 --> 00:22:15,450
some other interesting things<font color="#CCCCCC"> that</font><font color="#E5E5E5"> are</font>

631
00:22:13,740 --> 00:22:17,760
<font color="#CCCCCC">happening</font><font color="#E5E5E5"> so</font>

632
00:22:15,450 --> 00:22:19,320
you might want this quantum server to

633
00:22:17,760 --> 00:22:22,140
<font color="#CCCCCC">actually convince you that it's really</font>

634
00:22:19,320 --> 00:22:23,850
<font color="#E5E5E5">doing a quantum operation so you only</font>

635
00:22:22,140 --> 00:22:25,290
<font color="#E5E5E5">have a classical communication and you</font>

636
00:22:23,850 --> 00:22:27,270
at classical dude<font color="#E5E5E5"> but you want the</font>

637
00:22:25,290 --> 00:22:28,980
server to compute to convince you that

638
00:22:27,270 --> 00:22:30,570
it's actually<font color="#E5E5E5"> performing a quantum</font>

639
00:22:28,980 --> 00:22:34,410
quantum operation this<font color="#E5E5E5"> is related to the</font>

640
00:22:30,570 --> 00:22:36,750
<font color="#E5E5E5">so-called quantum supremacy problem</font>

641
00:22:34,410 --> 00:22:39,780
that's that<font color="#E5E5E5"> practitioners</font><font color="#CCCCCC"> also care</font>

642
00:22:36,750 --> 00:22:42,059
<font color="#CCCCCC">about I don't think that you can they</font>

643
00:22:39,780 --> 00:22:43,379
can<font color="#CCCCCC"> want a quantum party to do is to</font>

644
00:22:42,059 --> 00:22:45,149
<font color="#E5E5E5">provide you with fewer and</font><font color="#CCCCCC"> Ernest this</font>

645
00:22:43,380 --> 00:22:46,500
is sort of the only<font color="#E5E5E5"> way in the universe</font>

646
00:22:45,150 --> 00:22:48,750
<font color="#CCCCCC">that</font><font color="#E5E5E5"> we know to get pure randomness is</font>

647
00:22:46,500 --> 00:22:51,120
to use<font color="#CCCCCC"> quantum is to use quantum</font>

648
00:22:48,750 --> 00:22:53,850
<font color="#E5E5E5">processes and me as a classical person</font>

649
00:22:51,120 --> 00:22:56,580
<font color="#E5E5E5">want a proof</font><font color="#CCCCCC"> that indeed</font><font color="#E5E5E5"> my server</font>

650
00:22:53,850 --> 00:22:59,159
produces<font color="#E5E5E5"> produced randomness in proper</font>

651
00:22:56,580 --> 00:23:02,250
quantum way last thing<font color="#CCCCCC"> that you may want</font>

652
00:22:59,160 --> 00:23:05,100
is the delegation problem<font color="#CCCCCC"> so you want</font>

653
00:23:02,250 --> 00:23:06,900
the server to solve a quantum problem

654
00:23:05,100 --> 00:23:08,490
for you and you<font color="#CCCCCC"> want to be able to sort</font>

655
00:23:06,900 --> 00:23:09,900
<font color="#CCCCCC">of verify</font><font color="#E5E5E5"> the solution</font><font color="#CCCCCC"> it's correct even</font>

656
00:23:08,490 --> 00:23:12,929
though you're<font color="#CCCCCC"> just a classical users a</font>

657
00:23:09,900 --> 00:23:15,299
classical person<font color="#E5E5E5"> so the first two</font><font color="#CCCCCC"> issues</font>

658
00:23:12,929 --> 00:23:17,940
were addressed in work by<font color="#CCCCCC"> Christy</font><font color="#E5E5E5"> with</font>

659
00:23:15,299 --> 00:23:21,960
<font color="#E5E5E5">the</font><font color="#CCCCCC"> Christiano Mahadev fuzzy</font><font color="#E5E5E5"> Ronnie and</font>

660
00:23:17,940 --> 00:23:24,809
<font color="#CCCCCC">Vivek and this last point was addressed</font>

661
00:23:21,960 --> 00:23:26,820
<font color="#E5E5E5">by a recent work of Mahadev</font><font color="#CCCCCC"> so both of</font>

662
00:23:24,809 --> 00:23:29,730
these<font color="#CCCCCC"> are going to appear in Fox</font><font color="#E5E5E5"> in the</font>

663
00:23:26,820 --> 00:23:31,830
upcoming<font color="#E5E5E5"> Fox</font><font color="#CCCCCC"> and all these like these</font>

664
00:23:29,730 --> 00:23:34,169
two works and<font color="#CCCCCC"> mahadeva's original</font>

665
00:23:31,830 --> 00:23:35,610
quantum<font color="#E5E5E5"> fhe or actually related and let</font>

666
00:23:34,169 --> 00:23:37,770
me sort of<font color="#E5E5E5"> try to give you a super high</font>

667
00:23:35,610 --> 00:23:40,770
level intuition<font color="#E5E5E5"> that connects these</font>

668
00:23:37,770 --> 00:23:44,970
three problems<font color="#E5E5E5"> to the quantum</font><font color="#CCCCCC"> whole</font>

669
00:23:40,770 --> 00:23:47,610
morphism problem that we that we<font color="#E5E5E5"> saw so</font>

670
00:23:44,970 --> 00:23:49,350
the verifier can use a quantum sort of a

671
00:23:47,610 --> 00:23:51,629
<font color="#E5E5E5">quantum a fully homomorphic encryption</font>

672
00:23:49,350 --> 00:23:53,189
<font color="#CCCCCC">he generates classical keys and encrypts</font>

673
00:23:51,630 --> 00:23:55,470
the classical<font color="#CCCCCC"> message to zero and he</font>

674
00:23:53,190 --> 00:23:58,590
sends those<font color="#E5E5E5"> to the and he sends those to</font>

675
00:23:55,470 --> 00:24:00,470
the server now the server<font color="#E5E5E5"> does quantum</font>

676
00:23:58,590 --> 00:24:02,370
<font color="#E5E5E5">amorphic evaluation of a designated</font>

677
00:24:00,470 --> 00:24:04,410
<font color="#E5E5E5">quantum function</font><font color="#CCCCCC"> according to this</font>

678
00:24:02,370 --> 00:24:05,820
specific task<font color="#E5E5E5"> that we want the server</font><font color="#CCCCCC"> to</font>

679
00:24:04,410 --> 00:24:06,990
perform<font color="#E5E5E5"> so there's some basically the</font>

680
00:24:05,820 --> 00:24:08,790
quantum function<font color="#E5E5E5"> of the server needs to</font>

681
00:24:06,990 --> 00:24:10,830
apply<font color="#E5E5E5"> and then he sends</font><font color="#CCCCCC"> back the</font>

682
00:24:08,790 --> 00:24:13,049
<font color="#E5E5E5">classical part of the result and what</font>

683
00:24:10,830 --> 00:24:16,350
<font color="#CCCCCC">you want to</font><font color="#E5E5E5"> argue is that the verifier</font>

684
00:24:13,049 --> 00:24:18,270
<font color="#CCCCCC">who has the</font><font color="#E5E5E5"> secret key now knows why and</font>

685
00:24:16,350 --> 00:24:21,000
<font color="#E5E5E5">also the randomness that</font><font color="#CCCCCC"> was used</font><font color="#E5E5E5"> to</font>

686
00:24:18,270 --> 00:24:22,980
encrypt<font color="#E5E5E5"> why</font><font color="#CCCCCC"> in this you need to work</font>

687
00:24:21,000 --> 00:24:25,410
hard to<font color="#CCCCCC"> argue that this sort of</font>

688
00:24:22,980 --> 00:24:27,660
straddles the prover in some meaningful

689
00:24:25,410 --> 00:24:28,200
<font color="#E5E5E5">way</font><font color="#CCCCCC"> that allows you to get soundness for</font>

690
00:24:27,660 --> 00:24:30,000
these

691
00:24:28,200 --> 00:24:32,250
for these sort of tasks<font color="#E5E5E5"> so this is super</font>

692
00:24:30,000 --> 00:24:33,659
<font color="#CCCCCC">high</font><font color="#E5E5E5"> level connection also</font><font color="#CCCCCC"> not</font>

693
00:24:32,250 --> 00:24:35,250
chronological connection between these

694
00:24:33,659 --> 00:24:36,600
<font color="#E5E5E5">between these two things</font>

695
00:24:35,250 --> 00:24:38,490
and I<font color="#CCCCCC"> think there's some pretty cool</font>

696
00:24:36,600 --> 00:24:42,230
progress and some some interesting

697
00:24:38,490 --> 00:24:48,039
<font color="#E5E5E5">problems that lie ahead</font><font color="#CCCCCC"> thank you</font>

698
00:24:42,230 --> 00:24:48,039
[Applause]

