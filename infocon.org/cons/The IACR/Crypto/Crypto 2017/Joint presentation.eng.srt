1
00:00:05,120 --> 00:00:07,319
today I'm going to talk about all about

2
00:00:07,319 --> 00:00:10,260
many lost attractor functions from now

3
00:00:10,260 --> 00:00:13,650
on called ABM LTS and selectively

4
00:00:13,650 --> 00:00:16,980
opening secure public key encryption

5
00:00:16,980 --> 00:00:19,860
from lattices from standard lattice

6
00:00:19,860 --> 00:00:24,330
assumptions so as a session chair I

7
00:00:24,330 --> 00:00:26,580
mentioned it's a soft melt between two

8
00:00:26,580 --> 00:00:31,800
papers buoyantly from now on refer to BL

9
00:00:31,800 --> 00:00:36,239
17 and the second one is is referred to

10
00:00:36,239 --> 00:00:40,320
L 3 / s 17 so so you can distinguish

11
00:00:40,320 --> 00:00:44,460
between the results during the talk so

12
00:00:44,460 --> 00:00:48,120
what are the motivations here

13
00:00:48,120 --> 00:00:52,739
it's about constructing a BM Altea

14
00:00:52,739 --> 00:00:56,129
from lattice assumptions and we are

15
00:00:56,129 --> 00:00:58,260
going to build the selective opening and

16
00:00:58,260 --> 00:00:59,940
CCI security

17
00:00:59,940 --> 00:01:01,979
I mean CCA secure public key encryption

18
00:01:01,979 --> 00:01:05,729
from from these primitives so what are

19
00:01:05,729 --> 00:01:09,480
the contributions the constructions that

20
00:01:09,480 --> 00:01:12,000
are provided in these two papers the

21
00:01:12,000 --> 00:01:16,050
first one the BL 17 uses weak PR and the

22
00:01:16,050 --> 00:01:19,640
second one else repeal s 17 will use PR

23
00:01:19,640 --> 00:01:23,670
although they use big PR of the BL 17

24
00:01:23,670 --> 00:01:28,070
use which PRF they they achieve a weaker

25
00:01:28,070 --> 00:01:30,630
security notion that is

26
00:01:30,630 --> 00:01:35,640
indistinguishability based security in

27
00:01:35,640 --> 00:01:39,300
contrast to what we achieve in fact L

28
00:01:39,300 --> 00:01:41,520
triple-as achieve and that is simulation

29
00:01:41,520 --> 00:01:44,810
based security which is a stronger

30
00:01:44,810 --> 00:01:50,720
security notion than than the IND in the

31
00:01:50,720 --> 00:01:55,770
in this all so so there are also other

32
00:01:55,770 --> 00:01:59,070
contributions for these two papers that

33
00:01:59,070 --> 00:02:02,310
I will not discuss in this top because

34
00:02:02,310 --> 00:02:06,620
it's so it's going to be longer than

35
00:02:06,620 --> 00:02:10,430
my time so well I'll triple as 17 also

36
00:02:10,430 --> 00:02:12,650
obtained the title security proof for

37
00:02:12,650 --> 00:02:14,780
the lattice pesky homomorphic PRS

38
00:02:14,780 --> 00:02:19,600
introduced in PLM our tap team and also

39
00:02:19,600 --> 00:02:22,640
we will achieve tightly secured public

40
00:02:22,640 --> 00:02:25,700
key encryption from lattices in the

41
00:02:25,700 --> 00:02:29,200
multi-channel multi challenge setting so

42
00:02:29,200 --> 00:02:31,910
let's start with the definition of lossy

43
00:02:31,910 --> 00:02:35,360
trapdoor functions this is introduced

44
00:02:35,360 --> 00:02:40,250
first in vehicle waters in 2008 and well

45
00:02:40,250 --> 00:02:43,570
the functions will have two months in

46
00:02:43,570 --> 00:02:46,550
injective mode and the law Sima so in

47
00:02:46,550 --> 00:02:48,680
the injective mode so we will be given

48
00:02:48,680 --> 00:02:52,220
by an evaluation key and an inverse key

49
00:02:52,220 --> 00:02:56,630
so using the evaluation key you can

50
00:02:56,630 --> 00:03:00,830
compute F that function at any X in the

51
00:03:00,830 --> 00:03:04,130
domain and using the inverse key you can

52
00:03:04,130 --> 00:03:10,670
recover back the X in fact the Y which

53
00:03:10,670 --> 00:03:13,580
is achieved which is the evaluation of F

54
00:03:13,580 --> 00:03:16,040
at X can be reversed back to X using the

55
00:03:16,040 --> 00:03:19,510
inversion key but in the lossy mode

56
00:03:19,510 --> 00:03:22,040
although you are given by another

57
00:03:22,040 --> 00:03:26,239
evaluation key which is computationally

58
00:03:26,239 --> 00:03:27,980
indistinguishable from the evaluation

59
00:03:27,980 --> 00:03:31,070
key in the injective mode you cannot

60
00:03:31,070 --> 00:03:35,030
recover back the X from from the output

61
00:03:35,030 --> 00:03:40,400
of the function so what about all what

62
00:03:40,400 --> 00:03:43,790
many likely the lossy trapdoor function

63
00:03:43,790 --> 00:03:47,330
the ABM LTS they are introduced first by

64
00:03:47,330 --> 00:03:53,019
half lines in 2012 and in in that paper

65
00:03:53,019 --> 00:03:56,120
the the modes are kind of parameterized

66
00:03:56,120 --> 00:03:59,930
by the tax so the the whole set of tags

67
00:03:59,930 --> 00:04:02,420
will be partitioned into type the two

68
00:04:02,420 --> 00:04:06,080
two sets the lossy set and the the

69
00:04:06,080 --> 00:04:09,260
injective set of the tags so if a tag

70
00:04:09,260 --> 00:04:13,000
belongs to the injective one then then

71
00:04:13,000 --> 00:04:16,250
it makes the function itself injective

72
00:04:16,250 --> 00:04:17,920
that I explained you can

73
00:04:17,920 --> 00:04:21,670
power back using the inverse key and if

74
00:04:21,670 --> 00:04:24,610
the T the tag belongs to the to the loss

75
00:04:24,610 --> 00:04:27,340
he said then it makes the function lossy

76
00:04:27,340 --> 00:04:31,150
so usually the tax comes in pairs there

77
00:04:31,150 --> 00:04:33,940
are two parts associated to two parts

78
00:04:33,940 --> 00:04:36,880
associated to each tag a primary one and

79
00:04:36,880 --> 00:04:41,170
an auxilary one so the one of the other

80
00:04:41,170 --> 00:04:43,060
properties which would be needed for

81
00:04:43,060 --> 00:04:45,330
this construction is the large number of

82
00:04:45,330 --> 00:04:48,570
lossy tags in fact they should be

83
00:04:48,570 --> 00:04:50,650
exponentially many in the security

84
00:04:50,650 --> 00:04:55,750
parameter and the other difference is

85
00:04:55,750 --> 00:05:01,240
this special private key tag key shows

86
00:05:01,240 --> 00:05:06,010
40k that is the in response of I mean

87
00:05:06,010 --> 00:05:09,400
generating these lossy tags out of the

88
00:05:09,400 --> 00:05:15,610
auxiliary port and tacky so what are the

89
00:05:15,610 --> 00:05:17,860
properties which would be needed for the

90
00:05:17,860 --> 00:05:21,940
ABM LTS first of all would like to have

91
00:05:21,940 --> 00:05:24,040
the tag indistinguishability that I

92
00:05:24,040 --> 00:05:28,240
explained so the tag the the lossy mode

93
00:05:28,240 --> 00:05:30,430
the tag from the locking mode and the

94
00:05:30,430 --> 00:05:31,720
injective mode they should be

95
00:05:31,720 --> 00:05:34,990
computationally indistinguishable we

96
00:05:34,990 --> 00:05:36,580
would like to have a vast eveness which

97
00:05:36,580 --> 00:05:39,190
means that generating new lossy tags

98
00:05:39,190 --> 00:05:46,360
should be hot and well here I wanted to

99
00:05:46,360 --> 00:05:49,780
note that this definition of security

100
00:05:49,780 --> 00:05:52,480
the security model is in contrast to D

101
00:05:52,480 --> 00:05:57,970
all but one LTF where all of the tags

102
00:05:57,970 --> 00:06:01,960
are except one are dirty lousy ones and

103
00:06:01,960 --> 00:06:04,570
the all but non-lds which are

104
00:06:04,570 --> 00:06:09,900
introducing these two papers so well

105
00:06:09,900 --> 00:06:12,790
what does that mean exactly what what

106
00:06:12,790 --> 00:06:15,160
what do we mean by ABM RTS what's the

107
00:06:15,160 --> 00:06:18,820
usage in fact they are all kind of the

108
00:06:18,820 --> 00:06:24,310
same as encrypted messages and you can

109
00:06:24,310 --> 00:06:27,250
see the lossy tags as the valid

110
00:06:27,250 --> 00:06:30,100
signature in fact these signatures of

111
00:06:30,100 --> 00:06:32,320
that I am talking about it's not only

112
00:06:32,320 --> 00:06:34,900
encrypted message signatures you can

113
00:06:34,900 --> 00:06:39,370
also replace signatures with Max and the

114
00:06:39,370 --> 00:06:42,220
loss attacks means you will have valid

115
00:06:42,220 --> 00:06:44,470
signatures or valid max the

116
00:06:44,470 --> 00:06:47,110
aggressiveness is kind of the same as

117
00:06:47,110 --> 00:06:51,250
having signature unforgeable T or in the

118
00:06:51,250 --> 00:06:53,380
Mac case it should look like a random

119
00:06:53,380 --> 00:06:58,000
one the tag indistinguishability which

120
00:06:58,000 --> 00:07:00,460
comes from the the indistinguishability

121
00:07:00,460 --> 00:07:06,460
of encryption scheme so the idea here is

122
00:07:06,460 --> 00:07:10,360
to replace the signatures with the PRF

123
00:07:10,360 --> 00:07:13,090
so in these two papers we are trying to

124
00:07:13,090 --> 00:07:16,810
do this replacement is changing between

125
00:07:16,810 --> 00:07:19,510
signatures and PRF

126
00:07:19,510 --> 00:07:23,770
so in fact we will build the weak PRS

127
00:07:23,770 --> 00:07:26,640
and of opioids which are homomorphic

128
00:07:26,640 --> 00:07:29,650
evaluation friendly and they will have

129
00:07:29,650 --> 00:07:35,650
long outputs so the work of BL 17 is

130
00:07:35,650 --> 00:07:38,830
inspired by the buoyantly ibe which is

131
00:07:38,830 --> 00:07:42,400
appeared in IP and in there they will

132
00:07:42,400 --> 00:07:47,200
use the encrypted PRS with single bit

133
00:07:47,200 --> 00:07:50,140
outputs in contrast to deal with so long

134
00:07:50,140 --> 00:07:54,550
outputs that we have so what about the

135
00:07:54,550 --> 00:07:57,810
latest Raptors a little bit of lattices

136
00:07:57,810 --> 00:08:01,780
so well this looks a bit ugly because so

137
00:08:01,780 --> 00:08:04,350
there are too many parameters here but

138
00:08:04,350 --> 00:08:08,980
let me tell you this function f is which

139
00:08:08,980 --> 00:08:13,060
is introduced in the second bullet of

140
00:08:13,060 --> 00:08:15,220
here it's it's the trapdoor function

141
00:08:15,220 --> 00:08:20,350
with with input X and E so the idea is

142
00:08:20,350 --> 00:08:23,290
to multiply this X by a concatenation of

143
00:08:23,290 --> 00:08:27,640
a random matrix a and a r plus G and

144
00:08:27,640 --> 00:08:31,000
then now add the additive noise and take

145
00:08:31,000 --> 00:08:34,719
the modulo Q so it should be noted that

146
00:08:34,719 --> 00:08:38,320
if H is is full rank for example

147
00:08:38,320 --> 00:08:43,010
identity matrix then then there is a

148
00:08:43,010 --> 00:08:45,290
there is an inverse matrix that you can

149
00:08:45,290 --> 00:08:48,140
multiply from the right to the to that

150
00:08:48,140 --> 00:08:52,450
concatenation matrix and that will make

151
00:08:52,450 --> 00:08:55,810
finding the inverse of such a function

152
00:08:55,810 --> 00:09:01,520
easy although if you take H to be zero

153
00:09:01,520 --> 00:09:04,310
matrix then that would be hard to kind

154
00:09:04,310 --> 00:09:14,720
of inverse this this function okay so so

155
00:09:14,720 --> 00:09:16,310
what about the parameters which are

156
00:09:16,310 --> 00:09:19,520
inscribed in these two concatenation of

157
00:09:19,520 --> 00:09:24,770
matrices I mean this a a R plus FG so FG

158
00:09:24,770 --> 00:09:29,180
is the typical gadget matrix probably

159
00:09:29,180 --> 00:09:32,960
all know but what about a a comes from

160
00:09:32,960 --> 00:09:37,130
lwe from learning with error and as I

161
00:09:37,130 --> 00:09:40,730
mentioned if H is 0 then it makes f

162
00:09:40,730 --> 00:09:45,950
flossy and well the a that you can use

163
00:09:45,950 --> 00:09:52,910
here will look like this one the a can

164
00:09:52,910 --> 00:09:56,630
be replaced by this CB plus F and as an

165
00:09:56,630 --> 00:09:59,090
especial case you can see this aid to be

166
00:09:59,090 --> 00:10:05,090
an lwe kind of set of samples in fact a

167
00:10:05,090 --> 00:10:08,750
and a s plus plus each concatenated

168
00:10:08,750 --> 00:10:13,420
together so that that serves as a itself

169
00:10:15,760 --> 00:10:20,540
okay so well as I said we need to have

170
00:10:20,540 --> 00:10:23,900
our evaluation homomorphic evaluation

171
00:10:23,900 --> 00:10:26,450
friendly constructions for for that

172
00:10:26,450 --> 00:10:31,040
reason we use the typical g SW 13

173
00:10:31,040 --> 00:10:33,620
construction where the gadget matrix

174
00:10:33,620 --> 00:10:36,620
will will have a small inverse with

175
00:10:36,620 --> 00:10:39,920
respect to matrix a and that we call it

176
00:10:39,920 --> 00:10:43,850
G inverse of a and as you can see you

177
00:10:43,850 --> 00:10:46,720
can compute the additions and

178
00:10:46,720 --> 00:10:49,910
multiplications and Nandor functions of

179
00:10:49,910 --> 00:10:54,230
two ciphertext C 1 and C 2 corresponding

180
00:10:54,230 --> 00:10:55,410
to you and we

181
00:10:55,410 --> 00:11:00,269
easily by just computing G - C C one

182
00:11:00,269 --> 00:11:02,940
time so that the small matrix with

183
00:11:02,940 --> 00:11:10,920
respect to a times of off C - okay so

184
00:11:10,920 --> 00:11:15,420
well where do we plug in all these PRF

185
00:11:15,420 --> 00:11:21,089
soar weak PRF into IBM LTS in fact the

186
00:11:21,089 --> 00:11:24,449
idea from L Triple S 17 is to use the

187
00:11:24,449 --> 00:11:27,509
PRF which are conceptually simpler than

188
00:11:27,509 --> 00:11:30,660
the weak PR and the construction itself

189
00:11:30,660 --> 00:11:33,360
is also simpler than the construction in

190
00:11:33,360 --> 00:11:37,439
the PL 70 well we'll use the Equality

191
00:11:37,439 --> 00:11:40,620
circuit which is so which x if x equals

192
00:11:40,620 --> 00:11:46,500
y and we in fact plug in this this

193
00:11:46,500 --> 00:11:50,100
equality of the PRF evaluated at at the

194
00:11:50,100 --> 00:11:55,470
auxiliary port of the attack and and and

195
00:11:55,470 --> 00:11:57,899
the tag that the first part the the

196
00:11:57,899 --> 00:12:01,800
primary part of the tag and we check if

197
00:12:01,800 --> 00:12:04,290
these two are equal and and that will go

198
00:12:04,290 --> 00:12:08,939
instead of as a as a roll of hatch so

199
00:12:08,939 --> 00:12:10,800
the whole thing which which is

200
00:12:10,800 --> 00:12:14,519
underlined will will be hatch so that's

201
00:12:14,519 --> 00:12:17,490
for the injective but for the lossy mode

202
00:12:17,490 --> 00:12:20,939
to generate a lossy tag what we do is to

203
00:12:20,939 --> 00:12:25,439
to to get a lossy tag generation T which

204
00:12:25,439 --> 00:12:28,380
we call the attack key and we put it as

205
00:12:28,380 --> 00:12:31,230
the key for the PRF that we use to

206
00:12:31,230 --> 00:12:34,439
generate hatch and given the the

207
00:12:34,439 --> 00:12:36,959
auxiliary port of the tag we can easily

208
00:12:36,959 --> 00:12:41,639
compute the primary part of the tag by

209
00:12:41,639 --> 00:12:45,449
evaluating the PRF add that auxilary

210
00:12:45,449 --> 00:12:48,990
part of the T so just note that if PRF

211
00:12:48,990 --> 00:12:53,009
is evaluated at a TA and that equals to

212
00:12:53,009 --> 00:12:57,329
TP and then that equality will be will

213
00:12:57,329 --> 00:13:00,180
be satisfied and out that will then we

214
00:13:00,180 --> 00:13:03,389
will have 0 instead of H so the lossy

215
00:13:03,389 --> 00:13:07,110
mode is equivalent to half H equal to

216
00:13:07,110 --> 00:13:11,370
see okay so what about BL 17 they will

217
00:13:11,370 --> 00:13:16,170
use the week PRS instead of the PRS note

218
00:13:16,170 --> 00:13:18,839
that week PRF or pseudo-random given the

219
00:13:18,839 --> 00:13:22,320
random input output samples and the

220
00:13:22,320 --> 00:13:24,930
output of a weak PRF is just a bit it's

221
00:13:24,930 --> 00:13:28,410
not a string of binary element it will

222
00:13:28,410 --> 00:13:31,940
also use chameleon hash functions and

223
00:13:31,940 --> 00:13:35,970
well the idea is to again construct one

224
00:13:35,970 --> 00:13:39,320
hedge to be inscribed in that

225
00:13:39,320 --> 00:13:45,180
concatenation of matrices and what they

226
00:13:45,180 --> 00:13:47,610
do is just to insert a linear

227
00:13:47,610 --> 00:13:51,750
combination of parts of the the tag key

228
00:13:51,750 --> 00:13:54,750
with coefficients coming from the weak

229
00:13:54,750 --> 00:13:58,380
piata so the weak PRF will output a bit

230
00:13:58,380 --> 00:14:00,510
so these are these will serve as the

231
00:14:00,510 --> 00:14:02,760
coefficients and then there will be some

232
00:14:02,760 --> 00:14:04,920
parts of the tag key which will be

233
00:14:04,920 --> 00:14:08,820
inscribed to thee to the Duda matrix

234
00:14:08,820 --> 00:14:11,220
which will serve as the hatch so dude

235
00:14:11,220 --> 00:14:14,459
generated velocity tactic they just use

236
00:14:14,459 --> 00:14:16,230
the output of the channel leon hash

237
00:14:16,230 --> 00:14:18,449
function to find the auxiliary part of

238
00:14:18,449 --> 00:14:24,600
the the loss attack because because they

239
00:14:24,600 --> 00:14:28,680
again want to have that h matrix equal

240
00:14:28,680 --> 00:14:29,490
to zero

241
00:14:29,490 --> 00:14:33,990
equivalent to loss see no okay so what

242
00:14:33,990 --> 00:14:35,550
is achieved using these two

243
00:14:35,550 --> 00:14:40,910
constructions the tag

244
00:14:40,910 --> 00:14:43,380
indistinguishability will be achieved in

245
00:14:43,380 --> 00:14:48,269
fact so in the injective mode the random

246
00:14:48,269 --> 00:14:52,769
tag t will have will have the auxiliary

247
00:14:52,769 --> 00:14:56,579
port as a random one and the primary one

248
00:14:56,579 --> 00:14:59,790
as a random but in the lossy mode the

249
00:14:59,790 --> 00:15:03,350
auxiliary part will be again random but

250
00:15:03,350 --> 00:15:06,420
by the methods the two methods that I

251
00:15:06,420 --> 00:15:09,089
described in the previous two slides the

252
00:15:09,089 --> 00:15:11,519
primary part will look like a random

253
00:15:11,519 --> 00:15:14,310
will be a pseudo random the

254
00:15:14,310 --> 00:15:16,290
aggressiveness will be achieved give our

255
00:15:16,290 --> 00:15:17,770
bye-bye

256
00:15:17,770 --> 00:15:20,560
by the fact that given TI given the

257
00:15:20,560 --> 00:15:23,350
auxiliary part of the tag it's so it's

258
00:15:23,350 --> 00:15:26,650
hard to predict it the primary part of

259
00:15:26,650 --> 00:15:31,780
the attack and what we will achieve in

260
00:15:31,780 --> 00:15:36,700
fact both both paper is the Selective

261
00:15:36,700 --> 00:15:37,810
opening attack

262
00:15:37,810 --> 00:15:40,810
I mean security against this kind of

263
00:15:40,810 --> 00:15:42,850
attacks but what is the SEC selective

264
00:15:42,850 --> 00:15:46,200
opening attacks in these kind of attacks

265
00:15:46,200 --> 00:15:50,310
there will be n ciphertext given to the

266
00:15:50,310 --> 00:15:53,620
to the Challenger the Challenger will

267
00:15:53,620 --> 00:15:56,440
select a subset of these ciphertext and

268
00:15:56,440 --> 00:15:59,680
open them for the for the adversary in

269
00:15:59,680 --> 00:16:02,980
fact the Challenger will reveal posting

270
00:16:02,980 --> 00:16:06,010
messages and the randomness that that is

271
00:16:06,010 --> 00:16:08,860
used to generate these ciphertext but

272
00:16:08,860 --> 00:16:12,730
keep a couple of them like I know the

273
00:16:12,730 --> 00:16:16,360
the complement of those n unopened in

274
00:16:16,360 --> 00:16:19,300
fact in this example there are 3-3

275
00:16:19,300 --> 00:16:21,460
ciphertext given to the Challenger the

276
00:16:21,460 --> 00:16:23,650
Challenger will open the first and the

277
00:16:23,650 --> 00:16:25,900
third one in fact it reveals the message

278
00:16:25,900 --> 00:16:29,980
and the randomness those red one and now

279
00:16:29,980 --> 00:16:34,030
the question that we ask is that does m2

280
00:16:34,030 --> 00:16:39,180
remain secure in fact can we show the

281
00:16:39,180 --> 00:16:42,430
indistinguishability of c2 with respect

282
00:16:42,430 --> 00:16:45,670
to an origin new a fresh generated

283
00:16:45,670 --> 00:16:53,380
encryption so that's in fact the notion

284
00:16:53,380 --> 00:16:56,170
of indistinguishable selective opening

285
00:16:56,170 --> 00:16:58,360
security in fact we would like to have

286
00:16:58,360 --> 00:17:00,670
unopened ciphertext to be

287
00:17:00,670 --> 00:17:02,890
computationally indistinguishable from

288
00:17:02,890 --> 00:17:04,810
the ciphertext which are freshly

289
00:17:04,810 --> 00:17:07,660
resample from the message space it's

290
00:17:07,660 --> 00:17:10,390
also written down here in terms of the

291
00:17:10,390 --> 00:17:14,050
mathematics so both I mean all 3 + 1 M 2

292
00:17:14,050 --> 00:17:18,130
M 3 are distributed based on that

293
00:17:18,130 --> 00:17:22,450
distribution T so given that M 1 and M 3

294
00:17:22,450 --> 00:17:25,150
are opened for the challenge for the

295
00:17:25,150 --> 00:17:28,270
adversary by the challenge I would like

296
00:17:28,270 --> 00:17:30,140
to resemble this

297
00:17:30,140 --> 00:17:32,930
to Prime and you would like to have

298
00:17:32,930 --> 00:17:35,180
these two encryptions computation of

299
00:17:35,180 --> 00:17:37,550
indistinguishable in fact the first one

300
00:17:37,550 --> 00:17:40,820
the one on the left is the ciphertext

301
00:17:40,820 --> 00:17:43,820
which was not opened and the one on the

302
00:17:43,820 --> 00:17:46,520
right is the one which is so which is

303
00:17:46,520 --> 00:17:49,550
freshly sampled so this sorry sampling

304
00:17:49,550 --> 00:17:54,530
might not be efficient but this is what

305
00:17:54,530 --> 00:17:57,700
the notion

306
00:17:58,270 --> 00:18:03,770
okay so both tier schemes PL 17 and L

307
00:18:03,770 --> 00:18:05,450
triple-s 17 will achieve

308
00:18:05,450 --> 00:18:10,000
indistinguishable selective opening CCA

309
00:18:10,000 --> 00:18:12,050
security for a public key encryption

310
00:18:12,050 --> 00:18:15,620
which is described on this slide so the

311
00:18:15,620 --> 00:18:19,400
idea of construction for both the scheme

312
00:18:19,400 --> 00:18:22,370
is kind of the same we'll both use this

313
00:18:22,370 --> 00:18:25,100
double LTF evaluation construction

314
00:18:25,100 --> 00:18:27,860
describing that in those two papers in

315
00:18:27,860 --> 00:18:32,390
the packet paper and in the and the idea

316
00:18:32,390 --> 00:18:36,890
is to have a triplet of ciphertext the

317
00:18:36,890 --> 00:18:39,140
first one is just a universal hash plus

318
00:18:39,140 --> 00:18:41,870
a message to Heidi message

319
00:18:41,870 --> 00:18:44,180
the the second part is just the Altea

320
00:18:44,180 --> 00:18:48,290
without any avian it's just kind of a

321
00:18:48,290 --> 00:18:51,500
trapdoor function and the last one that

322
00:18:51,500 --> 00:18:54,320
the last part of the ciphertext is is

323
00:18:54,320 --> 00:18:58,700
the ABM LTS that we described so far in

324
00:18:58,700 --> 00:19:02,090
these two constructions for all that tag

325
00:19:02,090 --> 00:19:08,870
T so the loss attacks will be used to to

326
00:19:08,870 --> 00:19:11,330
respond to challenge ciphertext so in

327
00:19:11,330 --> 00:19:12,970
fact it will provide

328
00:19:12,970 --> 00:19:15,410
indistinguishability the tag

329
00:19:15,410 --> 00:19:19,430
indistinguishability and the decryption

330
00:19:19,430 --> 00:19:21,500
queries will be responded using the

331
00:19:21,500 --> 00:19:26,540
injective tags and and there we will use

332
00:19:26,540 --> 00:19:31,730
the aggressiveness of the property so

333
00:19:31,730 --> 00:19:34,040
there are some tweaks and the

334
00:19:34,040 --> 00:19:36,680
construction for example al triple as

335
00:19:36,680 --> 00:19:40,430
seventeen will also use a Mac 4 because

336
00:19:40,430 --> 00:19:42,420
that would be needed later on for

337
00:19:42,420 --> 00:19:47,070
or to achieve some security and il-17

338
00:19:47,070 --> 00:19:50,610
will also use their own tricks but the

339
00:19:50,610 --> 00:19:53,880
general idea I mean the bit high

340
00:19:53,880 --> 00:19:55,710
view of the construction will look like

341
00:19:55,710 --> 00:20:03,000
this one okay so what is achieved in

342
00:20:03,000 --> 00:20:05,400
fact let's look at first on the

343
00:20:05,400 --> 00:20:08,340
simulation based a so selective opening

344
00:20:08,340 --> 00:20:14,310
security and that is to ask a simulator

345
00:20:14,310 --> 00:20:19,370
to to output exactly what is what is

346
00:20:19,370 --> 00:20:23,220
produced by an adversary which has seen

347
00:20:23,220 --> 00:20:25,890
the public keys and the ciphertext and

348
00:20:25,890 --> 00:20:29,280
the open ciphertext so the adversary in

349
00:20:29,280 --> 00:20:31,020
this case in the simulation based

350
00:20:31,020 --> 00:20:33,750
selectively opening the adversary will

351
00:20:33,750 --> 00:20:36,720
see the public key the ciphertext the

352
00:20:36,720 --> 00:20:40,530
the open ciphertext and then output

353
00:20:40,530 --> 00:20:44,010
something but we would like to have a

354
00:20:44,010 --> 00:20:46,350
simulator which which only sees the

355
00:20:46,350 --> 00:20:49,140
messages the open message and we will

356
00:20:49,140 --> 00:20:51,720
ask the simulator to to produce the same

357
00:20:51,720 --> 00:20:58,770
thing okay and if this simulator can

358
00:20:58,770 --> 00:21:01,110
also be computed only with the open

359
00:21:01,110 --> 00:21:06,450
messages then the CMAs o security is at

360
00:21:06,450 --> 00:21:09,480
you so this is a stronger of security

361
00:21:09,480 --> 00:21:12,680
notion than indistinguishability

362
00:21:12,680 --> 00:21:18,330
selectively opening and and there are

363
00:21:18,330 --> 00:21:22,110
only a few simulation based selectively

364
00:21:22,110 --> 00:21:24,450
opening CCA public key encryption for

365
00:21:24,450 --> 00:21:26,940
example the first one is based on the

366
00:21:26,940 --> 00:21:29,010
first two constructions are based on the

367
00:21:29,010 --> 00:21:35,220
standard assumption yes standard

368
00:21:35,220 --> 00:21:37,380
assumptions but the encryption is bit by

369
00:21:37,380 --> 00:21:42,240
bit the last one is based on a random

370
00:21:42,240 --> 00:21:44,900
Oracle model and the second one is so

371
00:21:44,900 --> 00:21:47,640
it's it's based on known as standard

372
00:21:47,640 --> 00:21:52,170
assumptions but it does have smaller

373
00:21:52,170 --> 00:21:53,400
ciphertext

374
00:21:53,400 --> 00:21:59,080
so so we'll achieve in fact I'll triple

375
00:21:59,080 --> 00:22:03,090
as seventeen will achieved simulation

376
00:22:03,090 --> 00:22:13,210
selective opening CCA and that's going

377
00:22:13,210 --> 00:22:15,640
to be based on standard lattice

378
00:22:15,640 --> 00:22:19,570
assumptions and we'll make use of these

379
00:22:19,570 --> 00:22:22,840
well-known results from below in 2009

380
00:22:22,840 --> 00:22:26,470
which which says that if you are are

381
00:22:26,470 --> 00:22:30,850
given by an indistinguishable selective

382
00:22:30,850 --> 00:22:34,320
opening secure public key and if you

383
00:22:34,320 --> 00:22:37,980
couple it with with an efficient opener

384
00:22:37,980 --> 00:22:42,040
then that will that will give you a

385
00:22:42,040 --> 00:22:44,620
simulation by selectively opening secure

386
00:22:44,620 --> 00:22:47,799
public key encryption so the only thing

387
00:22:47,799 --> 00:22:50,500
we need to provide here is an efficient

388
00:22:50,500 --> 00:22:54,460
open okay so I'm not going to give the

389
00:22:54,460 --> 00:22:58,090
details of constructing the opener in l3

390
00:22:58,090 --> 00:23:01,809
palace 70 but just giving it a

391
00:23:01,809 --> 00:23:06,460
definition of the the opener so what

392
00:23:06,460 --> 00:23:10,540
what does the opener do is that given a

393
00:23:10,540 --> 00:23:16,000
ciphertext C of the message m and

394
00:23:16,000 --> 00:23:21,270
randomness off then for any other

395
00:23:21,270 --> 00:23:24,220
message and Prime in the message space

396
00:23:24,220 --> 00:23:27,429
the opener should give you a new

397
00:23:27,429 --> 00:23:30,940
randomness up right where the deciphered

398
00:23:30,940 --> 00:23:35,679
texts coming on the M and O is just the

399
00:23:35,679 --> 00:23:38,380
cipher text it's exactly equal to

400
00:23:38,380 --> 00:23:40,690
decipher the new cipher text from the M

401
00:23:40,690 --> 00:23:45,400
prime and an awkward and if you feel

402
00:23:45,400 --> 00:23:47,980
active I mean if you construct such a

403
00:23:47,980 --> 00:23:50,980
such a efficient open then you can

404
00:23:50,980 --> 00:23:53,110
achieve the simulation selectively

405
00:23:53,110 --> 00:23:56,020
opening security and in fact L triple a

406
00:23:56,020 --> 00:23:59,770
17 will achieve simulation selective

407
00:23:59,770 --> 00:24:02,559
opening yah CCA

408
00:24:02,559 --> 00:24:13,110
see see a secure security okay finally

409
00:24:14,159 --> 00:24:21,870
well time to conclude so poster scheme

410
00:24:21,870 --> 00:24:25,330
constructed ABM LTS from lattices one

411
00:24:25,330 --> 00:24:30,400
used which PRF one used appearance also

412
00:24:30,400 --> 00:24:33,309
schemes are indistinguishable

413
00:24:33,309 --> 00:24:38,110
selectively opening CCA the one given in

414
00:24:38,110 --> 00:24:42,370
L triple s 17 is simulation-based s Oh

415
00:24:42,370 --> 00:24:46,620
CCA which is kind of stronger than the

416
00:24:46,620 --> 00:24:51,880
second bullet and as I mentioned we also

417
00:24:51,880 --> 00:24:54,700
achieved tightly secured in CCA secure

418
00:24:54,700 --> 00:24:57,010
public key encryption and that is one of

419
00:24:57,010 --> 00:25:00,309
the contributions that I promised not to

420
00:25:00,309 --> 00:25:02,830
discuss here so that's the end of the

421
00:25:02,830 --> 00:25:04,430
top thank you

422
00:25:04,430 --> 00:25:11,349
[Applause]

