1
00:00:04,910 --> 00:00:09,590
okay welcome to my presentation well

2
00:00:09,590 --> 00:00:10,760
we've seen on a previous slide on the

3
00:00:10,760 --> 00:00:13,010
blog site 4sm so I can go over it

4
00:00:13,010 --> 00:00:14,210
quickly it's a function that's

5
00:00:14,210 --> 00:00:15,860
essentially a permutation for a fixed

6
00:00:15,860 --> 00:00:19,640
key if the key is secret loops if the

7
00:00:19,640 --> 00:00:21,710
key is secret then the message gets

8
00:00:21,710 --> 00:00:23,419
encrypted to a ciphertext in a project

9
00:00:23,419 --> 00:00:25,099
this way in many applications whoever

10
00:00:25,099 --> 00:00:27,560
you want to have some flexibility we saw

11
00:00:27,560 --> 00:00:28,970
this in the previous presentation but

12
00:00:28,970 --> 00:00:32,149
there are many other applications and a

13
00:00:32,149 --> 00:00:34,880
way to get flexibility is by using this

14
00:00:34,880 --> 00:00:37,190
tweak and the idea is that for every key

15
00:00:37,190 --> 00:00:39,860
and fix tweak the scheme behaves like a

16
00:00:39,860 --> 00:00:41,480
permutation but if you change the tweak

17
00:00:41,480 --> 00:00:44,090
you get an independent permutation and

18
00:00:44,090 --> 00:00:45,710
there are many applications of three

19
00:00:45,710 --> 00:00:48,260
coil block ciphers and form of

20
00:00:48,260 --> 00:00:49,670
preserving encryption this one another

21
00:00:49,670 --> 00:00:51,650
one that's very popular is authenticated

22
00:00:51,650 --> 00:00:52,850
encryption I would like to give you an

23
00:00:52,850 --> 00:00:56,540
example of this and and this example is

24
00:00:56,540 --> 00:00:58,370
essentially OCB so there are three

25
00:00:58,370 --> 00:01:02,570
versions of OS e BOS b12 and tree but

26
00:01:02,570 --> 00:01:04,670
behind these schemes is essentially a

27
00:01:04,670 --> 00:01:06,560
three cool block cipher based scheme

28
00:01:06,560 --> 00:01:08,600
osep is based on a block cipher but if

29
00:01:08,600 --> 00:01:10,369
you look at how the proof is performed

30
00:01:10,369 --> 00:01:12,380
how you can analyze the scheme it's

31
00:01:12,380 --> 00:01:13,880
based on the three core block cipher

32
00:01:13,880 --> 00:01:16,159
namely this three code block cipher

33
00:01:16,159 --> 00:01:19,189
based scheme so it's a bit technical but

34
00:01:19,189 --> 00:01:20,869
essentially we have a message the

35
00:01:20,869 --> 00:01:22,909
message M is padded into several blocks

36
00:01:22,909 --> 00:01:25,609
and these blocks are then encrypted to

37
00:01:25,609 --> 00:01:29,179
ciphertext blocks and using not a normal

38
00:01:29,179 --> 00:01:30,380
block cipher but a tweakable block

39
00:01:30,380 --> 00:01:32,420
cipher and then also here we have

40
00:01:32,420 --> 00:01:34,459
Associated data and a checksum of the

41
00:01:34,459 --> 00:01:37,549
message which get authenticated but the

42
00:01:37,549 --> 00:01:39,079
important part to note here is that we

43
00:01:39,079 --> 00:01:40,609
have a tweakable block cipher that

44
00:01:40,609 --> 00:01:43,700
transforms that the messages that does

45
00:01:43,700 --> 00:01:45,979
the cryptographic work and the tweak of

46
00:01:45,979 --> 00:01:47,630
rock cipher gets its input of course the

47
00:01:47,630 --> 00:01:49,969
key but in addition it gets its input at

48
00:01:49,969 --> 00:01:51,709
week and the street consists of a nonce

49
00:01:51,709 --> 00:01:54,409
the nonce n is a unique value for every

50
00:01:54,409 --> 00:01:57,229
evaluation and it gets some tweak

51
00:01:57,229 --> 00:01:59,359
identifier which identifies at which

52
00:01:59,359 --> 00:02:01,340
position position in the scheme the

53
00:02:01,340 --> 00:02:04,310
tricot block cipher is evaluated this

54
00:02:04,310 --> 00:02:05,359
means that if you have two different

55
00:02:05,359 --> 00:02:07,939
evaluations of the scheme the nonce will

56
00:02:07,939 --> 00:02:09,770
be different but if you look at the same

57
00:02:09,770 --> 00:02:12,130
evaluation of the scheme two different

58
00:02:12,130 --> 00:02:14,060
evaluations for instance this one and

59
00:02:14,060 --> 00:02:16,040
this one the three core Blox articles

60
00:02:16,040 --> 00:02:17,720
occur at a different position so they

61
00:02:17,720 --> 00:02:18,380
have a different

62
00:02:18,380 --> 00:02:21,260
tweet and situate that every evaluation

63
00:02:21,260 --> 00:02:23,900
of the 300 block cipher is kind of

64
00:02:23,900 --> 00:02:26,330
independent and that's the way how the

65
00:02:26,330 --> 00:02:29,300
OCB scheme is generically proven secure

66
00:02:29,300 --> 00:02:32,570
based on the 300 block cipher the

67
00:02:32,570 --> 00:02:34,880
question now is how to design a block

68
00:02:34,880 --> 00:02:37,850
cipher and a simple there is a way of

69
00:02:37,850 --> 00:02:40,250
designing it generically so there we

70
00:02:40,250 --> 00:02:41,630
always refer to the Hasty Pudding

71
00:02:41,630 --> 00:02:44,750
ciphers first tweakable cipher more

72
00:02:44,750 --> 00:02:46,280
interesting right now as I think the

73
00:02:46,280 --> 00:02:48,140
TWiki framework and skinny and Montes

74
00:02:48,140 --> 00:02:49,490
from crypto last year those are

75
00:02:49,490 --> 00:02:52,040
tweakable block cipher designs from

76
00:02:52,040 --> 00:02:55,490
scratch now the focus is on a generic

77
00:02:55,490 --> 00:02:57,230
design so suppose you use a block cipher

78
00:02:57,230 --> 00:03:00,020
like AES I construct the 300 block

79
00:03:00,020 --> 00:03:02,480
cipher on top of this and the first

80
00:03:02,480 --> 00:03:04,160
formalization of three equal block types

81
00:03:04,160 --> 00:03:06,530
well discovered all day already gave two

82
00:03:06,530 --> 00:03:08,930
designs so the first one is one this

83
00:03:08,930 --> 00:03:10,190
based on two block cipher

84
00:03:10,190 --> 00:03:12,710
calls and with the tweak expert in the

85
00:03:12,710 --> 00:03:14,090
middle no one talks about the scheme

86
00:03:14,090 --> 00:03:16,850
anymore and I think there is a good

87
00:03:16,850 --> 00:03:18,410
reason for this because alongside this

88
00:03:18,410 --> 00:03:19,790
one they also introduced another one

89
00:03:19,790 --> 00:03:21,740
which is more efficient so it's the

90
00:03:21,740 --> 00:03:23,150
scheme based on one block cipher call

91
00:03:23,150 --> 00:03:26,150
and where the key goes to the block

92
00:03:26,150 --> 00:03:28,010
cipher and a universal hash function

93
00:03:28,010 --> 00:03:29,750
evaluation so H is a universal hash

94
00:03:29,750 --> 00:03:31,970
function and a message just gets

95
00:03:31,970 --> 00:03:35,180
encrypted and through this normal block

96
00:03:35,180 --> 00:03:37,550
cipher like AES where the blocks of

97
00:03:37,550 --> 00:03:39,560
course mosque with the universal hash

98
00:03:39,560 --> 00:03:42,350
function evaluated on their tweak so

99
00:03:42,350 --> 00:03:45,230
this is called a love w2 it's really

100
00:03:45,230 --> 00:03:47,150
similar essentially essentially is kind

101
00:03:47,150 --> 00:03:50,060
of a predecessor of X DX and actually XS

102
00:03:50,060 --> 00:03:52,280
used a no CBE and xes disk encryption

103
00:03:52,280 --> 00:03:54,320
and many C's are candidates so

104
00:03:54,320 --> 00:03:56,330
essentially if used pretty much

105
00:03:56,330 --> 00:03:59,810
everywhere and it's an efficient scheme

106
00:03:59,810 --> 00:04:01,580
but it only achieves birthday bound

107
00:04:01,580 --> 00:04:03,850
security so two to the N over to

108
00:04:03,850 --> 00:04:06,020
security what this means that if the

109
00:04:06,020 --> 00:04:07,990
block cipher has a state size of n bits

110
00:04:07,990 --> 00:04:10,910
then you can break the scheme in about 2

111
00:04:10,910 --> 00:04:14,870
to the N of 2 evaluations if you take a

112
00:04:14,870 --> 00:04:18,200
yes AES 128 bits you can break the

113
00:04:18,200 --> 00:04:20,510
scheme in 2 to the power 64 bits which

114
00:04:20,510 --> 00:04:23,630
is usually ok if you refresh the key

115
00:04:23,630 --> 00:04:25,190
often enough but if you take a

116
00:04:25,190 --> 00:04:26,660
lightweight block cipher or something

117
00:04:26,660 --> 00:04:28,220
like this if you take a 64 bit block

118
00:04:28,220 --> 00:04:30,200
cipher you only get 32 bits of security

119
00:04:30,200 --> 00:04:32,840
and that's

120
00:04:32,840 --> 00:04:35,600
so what we look for is essentially a

121
00:04:35,600 --> 00:04:37,100
scheme that the chief security beyond

122
00:04:37,100 --> 00:04:39,410
the birthday poncho beyond 64 bits or

123
00:04:39,410 --> 00:04:41,169
beyond to to the end of the two bits

124
00:04:41,169 --> 00:04:44,120
security and a notable way to do this is

125
00:04:44,120 --> 00:04:46,430
essentially to glue together various

126
00:04:46,430 --> 00:04:49,729
evaluations of llw to so the picture

127
00:04:49,729 --> 00:04:52,490
here is essentially a cascade of Sigma

128
00:04:52,490 --> 00:04:55,849
evaluations of Allah w2 and where for

129
00:04:55,849 --> 00:04:58,190
ease of analyses of analysis we have

130
00:04:58,190 --> 00:05:00,139
different in we have independent keys in

131
00:05:00,139 --> 00:05:03,680
universal hash function calls at crypto

132
00:05:03,680 --> 00:05:05,990
2012 London cradle proved that if you

133
00:05:05,990 --> 00:05:08,090
glue together two evaluations this

134
00:05:08,090 --> 00:05:10,070
construction achieves security up to 2

135
00:05:10,070 --> 00:05:12,650
to the 2 and over 3 so beyond birthday

136
00:05:12,650 --> 00:05:13,370
bond security

137
00:05:13,370 --> 00:05:15,889
and it was a small flaw such as fixed by

138
00:05:15,889 --> 00:05:17,419
Proctor but in the end we know that if

139
00:05:17,419 --> 00:05:19,160
you glue together two of them you get 2

140
00:05:19,160 --> 00:05:22,220
to the 2n over 3 security and Lampard's

141
00:05:22,220 --> 00:05:23,810
Ram went further than this they looked

142
00:05:23,810 --> 00:05:25,849
at the general cascade of an even number

143
00:05:25,849 --> 00:05:27,710
of runs and proof that you get 2 to the

144
00:05:27,710 --> 00:05:30,970
Sigma and divided by Sigma plus 2

145
00:05:30,970 --> 00:05:32,780
acknowledging that it's probably not

146
00:05:32,780 --> 00:05:34,970
tight so the conjecture is generally

147
00:05:34,970 --> 00:05:36,740
conjectured that you can get 2 to the

148
00:05:36,740 --> 00:05:39,220
Sigma and divided by Sigma plus 1

149
00:05:39,220 --> 00:05:41,539
security it also looks like this is the

150
00:05:41,539 --> 00:05:45,050
best we can get so if you look at the

151
00:05:45,050 --> 00:05:46,550
table what we see is we've got an

152
00:05:46,550 --> 00:05:47,930
efficient scheme but only birthday by

153
00:05:47,930 --> 00:05:50,870
secure you can't get to improve beyond

154
00:05:50,870 --> 00:05:51,949
birth lunch you can't even get to

155
00:05:51,949 --> 00:05:54,320
optimal security but only asymptotically

156
00:05:54,320 --> 00:05:55,909
is you have to cost the number of blocks

157
00:05:55,909 --> 00:05:57,349
after evaluations the number of

158
00:05:57,349 --> 00:05:58,699
universal hash function calls go to

159
00:05:58,699 --> 00:06:02,240
infinity you get optimal security and

160
00:06:02,240 --> 00:06:03,860
the question now is can we do better so

161
00:06:03,860 --> 00:06:05,860
can we get an optimally secure scheme

162
00:06:05,860 --> 00:06:09,919
with which is reasonably cheap and to do

163
00:06:09,919 --> 00:06:13,840
so and we look at a slightly different

164
00:06:14,349 --> 00:06:16,880
approach so if you look at the original

165
00:06:16,880 --> 00:06:18,919
formulation of risk of at all on three

166
00:06:18,919 --> 00:06:20,360
equal block ciphers they suggested that

167
00:06:20,360 --> 00:06:23,060
well the key is secretly stays the same

168
00:06:23,060 --> 00:06:25,460
for a long time the tweak changes a lot

169
00:06:25,460 --> 00:06:28,099
of times so for efficiency reasons

170
00:06:28,099 --> 00:06:30,440
changing the tweak should be cheaper and

171
00:06:30,440 --> 00:06:33,169
changing the key but they'll show at all

172
00:06:33,169 --> 00:06:34,520
considered it the other way around

173
00:06:34,520 --> 00:06:35,840
essentially what they said is well the

174
00:06:35,840 --> 00:06:37,370
attacker doesn't have access to the key

175
00:06:37,370 --> 00:06:39,710
but the attacker has access to the tweak

176
00:06:39,710 --> 00:06:42,770
so looking at it from this way to make

177
00:06:42,770 --> 00:06:45,580
it secure changing the tweak should be

178
00:06:45,580 --> 00:06:47,320
the three sketches should be stronger

179
00:06:47,320 --> 00:06:49,630
than the key schedule and inspired by

180
00:06:49,630 --> 00:06:51,640
this if you combine the two few points

181
00:06:51,640 --> 00:06:54,310
and you come to the TWiki framework

182
00:06:54,310 --> 00:06:56,050
which essentially blends the key and the

183
00:06:56,050 --> 00:07:00,160
tweak and there is a much our

184
00:07:00,160 --> 00:07:01,390
construction that already does this

185
00:07:01,390 --> 00:07:04,690
minimus who did this in 2009 and what it

186
00:07:04,690 --> 00:07:06,630
essentially does is the key the tweak

187
00:07:06,630 --> 00:07:09,040
gets encrypted to get a sub key and the

188
00:07:09,040 --> 00:07:11,410
message is then encrypted with a sub key

189
00:07:11,410 --> 00:07:13,840
and this one is be imperative unsecure

190
00:07:13,840 --> 00:07:16,690
of the tweak is short enough so if the

191
00:07:16,690 --> 00:07:18,460
tweak length that's less than n over 2

192
00:07:18,460 --> 00:07:20,770
bits you get beyond birthday party you

193
00:07:20,770 --> 00:07:22,390
can stretch the tweak a bit but you can

194
00:07:22,390 --> 00:07:25,000
never get to optimal security to 32 n

195
00:07:25,000 --> 00:07:28,090
over three at most two years ago we

196
00:07:28,090 --> 00:07:29,800
introduced two other schemes for the

197
00:07:29,800 --> 00:07:31,930
incentive us a bit different so it was

198
00:07:31,930 --> 00:07:34,270
the goal to be to design a block cipher

199
00:07:34,270 --> 00:07:37,450
PI scheme just with a single key so not

200
00:07:37,450 --> 00:07:39,250
two keys not a key in the universe -

201
00:07:39,250 --> 00:07:42,820
function just a single key and we

202
00:07:42,820 --> 00:07:44,440
introduced two schemes the first one is

203
00:07:44,440 --> 00:07:47,170
not that interesting for now but they

204
00:07:47,170 --> 00:07:48,910
look similar but essentially the idea is

205
00:07:48,910 --> 00:07:51,070
that the key and the tweak get exhort

206
00:07:51,070 --> 00:07:53,140
this will be the key to the block cipher

207
00:07:53,140 --> 00:07:55,930
and the message is then encrypted using

208
00:07:55,930 --> 00:07:58,900
this block cipher masked with some value

209
00:07:58,900 --> 00:08:00,940
Z which is also coming from an

210
00:08:00,940 --> 00:08:03,490
encryption so you the the masking and

211
00:08:03,490 --> 00:08:05,050
the key input to the block cipher our

212
00:08:05,050 --> 00:08:07,840
function of the key and tweak and we

213
00:08:07,840 --> 00:08:09,730
proved the disk scheme achieved security

214
00:08:09,730 --> 00:08:11,980
up to 2td and optimal security very

215
00:08:11,980 --> 00:08:13,540
efficiently with only two block cipher

216
00:08:13,540 --> 00:08:15,880
calls a Wang at all generalized it they

217
00:08:15,880 --> 00:08:17,260
find some other constructions that were

218
00:08:17,260 --> 00:08:19,390
optimally secure and but there is a

219
00:08:19,390 --> 00:08:21,130
twist and this twist is that the

220
00:08:21,130 --> 00:08:22,750
security proves in the ideal cipher

221
00:08:22,750 --> 00:08:25,270
model so whereas the other schemes were

222
00:08:25,270 --> 00:08:26,680
in the standard model this one is in the

223
00:08:26,680 --> 00:08:29,200
ideal cipher model so if you look at the

224
00:08:29,200 --> 00:08:31,360
state-of-the-art you have the the the

225
00:08:31,360 --> 00:08:33,929
top part top five rows are and not

226
00:08:33,929 --> 00:08:36,580
rekeying so the three the key to the

227
00:08:36,580 --> 00:08:38,710
block cipher is always the same that's

228
00:08:38,710 --> 00:08:40,870
hence the last column the tweak to the

229
00:08:40,870 --> 00:08:42,400
key to the block cipher is not

230
00:08:42,400 --> 00:08:44,860
influenced by the tweak you can get

231
00:08:44,860 --> 00:08:47,200
optimal security only in the limit and

232
00:08:47,200 --> 00:08:49,960
the other one you can get optimal

233
00:08:49,960 --> 00:08:52,210
security fairly efficiently but only in

234
00:08:52,210 --> 00:08:54,550
the ideal size model the question is can

235
00:08:54,550 --> 00:08:56,830
we get the best of both so optimal

236
00:08:56,830 --> 00:08:58,480
security of an efficient scheme in the

237
00:08:58,480 --> 00:08:59,820
stand

238
00:08:59,820 --> 00:09:03,880
and to try to get this we have to dive

239
00:09:03,880 --> 00:09:06,760
into a proof I will not dive into the

240
00:09:06,760 --> 00:09:08,410
proof exactly but essentially into the

241
00:09:08,410 --> 00:09:10,900
into the proof technique so if you look

242
00:09:10,900 --> 00:09:13,570
at this optimally secure scheme how to

243
00:09:13,570 --> 00:09:15,580
prove essentially goes as follows so we

244
00:09:15,580 --> 00:09:17,680
have this scheme you consider this

245
00:09:17,680 --> 00:09:19,840
scheme with an ideal cipher and we

246
00:09:19,840 --> 00:09:21,690
compare it with an idol to equal

247
00:09:21,690 --> 00:09:25,570
permutation PI tilde and the proof then

248
00:09:25,570 --> 00:09:26,950
go is essentially a probabilistic

249
00:09:26,950 --> 00:09:29,110
argument and saying that if you if an

250
00:09:29,110 --> 00:09:30,580
attacker wants to distinguish these two

251
00:09:30,580 --> 00:09:32,140
schemes so the scheme based on an either

252
00:09:32,140 --> 00:09:35,340
side II from an either permutation it

253
00:09:35,340 --> 00:09:38,410
succeeds with probability at most q over

254
00:09:38,410 --> 00:09:40,360
2 to the N which means that the attacker

255
00:09:40,360 --> 00:09:43,090
has to make 2 to the n evaluations which

256
00:09:43,090 --> 00:09:45,670
means optimal security now suppose you

257
00:09:45,670 --> 00:09:47,140
want to prove the scheme in a standard

258
00:09:47,140 --> 00:09:47,590
model

259
00:09:47,590 --> 00:09:50,080
it means we start from a third box or

260
00:09:50,080 --> 00:09:53,590
the first one and which is this scheme

261
00:09:53,590 --> 00:09:56,080
based on any block size E and now we

262
00:09:56,080 --> 00:09:58,270
want to prove that this scheme based on

263
00:09:58,270 --> 00:10:00,190
any block cipher e is indistinguishable

264
00:10:00,190 --> 00:10:05,230
from PI tilde and the question now is

265
00:10:05,230 --> 00:10:07,510
how can we prove this and well if you

266
00:10:07,510 --> 00:10:08,710
look in the literature if you look at

267
00:10:08,710 --> 00:10:11,320
fairly any symmetric key security proof

268
00:10:11,320 --> 00:10:14,800
and at least any proof I know of is done

269
00:10:14,800 --> 00:10:17,230
in a heavier argument so we just go from

270
00:10:17,230 --> 00:10:18,790
the first book to the second box and

271
00:10:18,790 --> 00:10:21,730
then from the second to the third so

272
00:10:21,730 --> 00:10:24,490
there is a slight in accuracy here in

273
00:10:24,490 --> 00:10:27,400
the picture but that's just minor thing

274
00:10:27,400 --> 00:10:28,840
it's just for the sake of argument this

275
00:10:28,840 --> 00:10:31,150
is how it's usually done so the first

276
00:10:31,150 --> 00:10:33,190
step is we start from a normal block

277
00:10:33,190 --> 00:10:35,860
cipher we replace the peroxide provides

278
00:10:35,860 --> 00:10:39,250
ideal equivalent at the cost of the

279
00:10:39,250 --> 00:10:40,840
security of the block cipher so if you

280
00:10:40,840 --> 00:10:42,580
assume that the AES is the secure block

281
00:10:42,580 --> 00:10:44,860
cipher it replace it by a random cipher

282
00:10:44,860 --> 00:10:48,220
at the cost of the AES security and then

283
00:10:48,220 --> 00:10:49,870
we do a probabilistic argument and it

284
00:10:49,870 --> 00:10:53,590
gives say Q over to TN ok that's

285
00:10:53,590 --> 00:10:55,690
essentially every proof has this generic

286
00:10:55,690 --> 00:10:59,440
step but now for our scheme the key

287
00:10:59,440 --> 00:11:01,720
input to the block cipher is ki plus T

288
00:11:01,720 --> 00:11:03,700
the key process which the attacker has

289
00:11:03,700 --> 00:11:06,670
influence on the key and in fact the

290
00:11:06,670 --> 00:11:08,890
Fiat is related key security what we

291
00:11:08,890 --> 00:11:10,390
need so in this case the attacker can

292
00:11:10,390 --> 00:11:11,059
make relate

293
00:11:11,059 --> 00:11:13,459
he attacks on the block cipher so in

294
00:11:13,459 --> 00:11:14,989
this case we have two related key

295
00:11:14,989 --> 00:11:16,219
security of the block cipher one can

296
00:11:16,219 --> 00:11:18,019
prove that for any block cipher how good

297
00:11:18,019 --> 00:11:20,539
it is you can break the related key

298
00:11:20,539 --> 00:11:23,119
security in the birthday bond so

299
00:11:23,119 --> 00:11:24,559
whatever block cipher you take you can

300
00:11:24,559 --> 00:11:26,569
find a related key attack and XOR relate

301
00:11:26,569 --> 00:11:28,039
the key attack and about two to the N

302
00:11:28,039 --> 00:11:30,169
over two queries and this means that if

303
00:11:30,169 --> 00:11:32,269
we use this generic step you can never

304
00:11:32,269 --> 00:11:33,889
prove optimal security of this scheme

305
00:11:33,889 --> 00:11:35,359
it's even worse you can only prove

306
00:11:35,359 --> 00:11:39,469
birthday bound security and this is

307
00:11:39,469 --> 00:11:41,359
weird if you look at it because the

308
00:11:41,359 --> 00:11:43,129
attack here this attack on the he later

309
00:11:43,129 --> 00:11:45,439
key security of the block cipher cannot

310
00:11:45,439 --> 00:11:47,239
be used to break this entire scheme

311
00:11:47,239 --> 00:11:50,869
because this attack only focuses on this

312
00:11:50,869 --> 00:11:53,509
isolated block cipher here essentially

313
00:11:53,509 --> 00:11:56,029
and in our case it is mosque and this

314
00:11:56,029 --> 00:11:59,059
mosque really frustrates the attack so

315
00:11:59,059 --> 00:12:00,769
it looks like this generic step seems

316
00:12:00,769 --> 00:12:04,249
unnecessarily and loose so what we

317
00:12:04,249 --> 00:12:05,929
essentially have we have two extremes

318
00:12:05,929 --> 00:12:08,119
and the bounce get a bit more more

319
00:12:08,119 --> 00:12:09,799
complicated but essentially what we say

320
00:12:09,799 --> 00:12:11,299
is this is the conjectured bound for

321
00:12:11,299 --> 00:12:14,599
cascaded llw and this is what we call

322
00:12:14,599 --> 00:12:16,699
the the tweakable block cipher security

323
00:12:16,699 --> 00:12:19,579
of this mode against any attacker that

324
00:12:19,579 --> 00:12:23,299
makes q evaluations and has tea time or

325
00:12:23,299 --> 00:12:26,629
can make tea offline evaluations and the

326
00:12:26,629 --> 00:12:28,999
typical part we see an escape-proof 10

327
00:12:28,999 --> 00:12:31,809
is like the the block cypher security

328
00:12:31,809 --> 00:12:34,309
which in this case is against an

329
00:12:34,309 --> 00:12:36,519
attacker with Sigma Q queries and about

330
00:12:36,519 --> 00:12:39,499
tea time plus this probabilistic

331
00:12:39,499 --> 00:12:42,409
argument which is non optimal actually

332
00:12:42,409 --> 00:12:43,789
this is the conjectured bound is not

333
00:12:43,789 --> 00:12:47,889
even proven yet but it is not optimal

334
00:12:47,889 --> 00:12:51,909
this one if E is a very good cipher then

335
00:12:51,909 --> 00:12:54,379
it's fair to assume that this is of the

336
00:12:54,379 --> 00:12:56,659
order P over 2 to the N so it's kind of

337
00:12:56,659 --> 00:12:59,599
optimal so the the first term the blocks

338
00:12:59,599 --> 00:13:01,819
term block cipher step is optimal but

339
00:13:01,819 --> 00:13:04,429
the probabilistic step is not optimal on

340
00:13:04,429 --> 00:13:05,719
the other hand for men too it's the

341
00:13:05,719 --> 00:13:07,879
other way around in this case the

342
00:13:07,879 --> 00:13:10,309
probabilistic argument is optimal but

343
00:13:10,309 --> 00:13:11,719
the block cipher security is to

344
00:13:11,719 --> 00:13:13,159
highlight the key security and it's only

345
00:13:13,159 --> 00:13:14,929
birthday bond so that's one it's not

346
00:13:14,929 --> 00:13:18,349
optimal now if one is we want to have a

347
00:13:18,349 --> 00:13:20,059
security and it looks like this generic

348
00:13:20,059 --> 00:13:21,709
steps and avoidable so what we want is

349
00:13:21,709 --> 00:13:24,300
that both terms are optimal

350
00:13:24,300 --> 00:13:25,920
and if you look at the picture we want

351
00:13:25,920 --> 00:13:27,630
to sit well these are the two extremes

352
00:13:27,630 --> 00:13:28,830
you want to be somewhere in the middle

353
00:13:28,830 --> 00:13:31,590
so we want to look at can we design a

354
00:13:31,590 --> 00:13:35,160
block cipher and we're too weak rekeying

355
00:13:35,160 --> 00:13:37,260
so changing the key using the tweak is a

356
00:13:37,260 --> 00:13:39,750
lot but only in a limited way

357
00:13:39,750 --> 00:13:41,760
so here the attacker has full freedom

358
00:13:41,760 --> 00:13:43,830
and in this case the attacker has no

359
00:13:43,830 --> 00:13:45,270
freedom so essentially it looks like we

360
00:13:45,270 --> 00:13:49,890
should go somewhere in-between so the

361
00:13:49,890 --> 00:13:51,300
goal now is to design us actually a

362
00:13:51,300 --> 00:13:54,300
tweakable block cipher te-tell where we

363
00:13:54,300 --> 00:13:55,950
have a key and put off well we have the

364
00:13:55,950 --> 00:13:57,690
same inputs key input tweak and put

365
00:13:57,690 --> 00:13:59,130
message goes to the ciphertext and

366
00:13:59,130 --> 00:14:01,770
terminally it uses a block cipher where

367
00:14:01,770 --> 00:14:03,420
the key input to the block cipher is a

368
00:14:03,420 --> 00:14:05,760
function of the key and the tweak and it

369
00:14:05,760 --> 00:14:07,590
may change so there is some tweak

370
00:14:07,590 --> 00:14:09,950
influenced to the key but it's limited

371
00:14:09,950 --> 00:14:12,300
essentially is suppose we have left at

372
00:14:12,300 --> 00:14:13,590
different instances of the issue

373
00:14:13,590 --> 00:14:15,510
essentially lab that different keys that

374
00:14:15,510 --> 00:14:18,540
can go to the block cipher then we

375
00:14:18,540 --> 00:14:22,200
expect to get a bound hope to get a

376
00:14:22,200 --> 00:14:23,970
bound essentially of this form so the

377
00:14:23,970 --> 00:14:26,430
tweak or block cipher security is upper

378
00:14:26,430 --> 00:14:28,560
bounded by the related key security of

379
00:14:28,560 --> 00:14:31,530
this underlying block cipher and which

380
00:14:31,530 --> 00:14:35,010
will probably be at most lab that t / -

381
00:14:35,010 --> 00:14:36,270
to the animal lab that's the number of

382
00:14:36,270 --> 00:14:39,360
different instances and in the paper

383
00:14:39,360 --> 00:14:40,740
there is actually a proof that this is

384
00:14:40,740 --> 00:14:44,100
the point that could be achieved and if

385
00:14:44,100 --> 00:14:46,410
e is very good you can do the analysis

386
00:14:46,410 --> 00:14:49,590
and so if lambda is constant if you have

387
00:14:49,590 --> 00:14:51,630
only a very limited amount of different

388
00:14:51,630 --> 00:14:52,830
instances then this one is fairly

389
00:14:52,830 --> 00:14:55,530
optimal and then you hope to get an

390
00:14:55,530 --> 00:14:58,830
optimally secure probability term so

391
00:14:58,830 --> 00:15:00,720
this is quite a fix with lab the

392
00:15:00,720 --> 00:15:02,490
different e instances let me give you an

393
00:15:02,490 --> 00:15:05,160
example and this is a very silly example

394
00:15:05,160 --> 00:15:07,470
so this is a tricot block cipher we have

395
00:15:07,470 --> 00:15:09,720
a block cipher we have the message it

396
00:15:09,720 --> 00:15:11,400
gets encrypted through the block cipher

397
00:15:11,400 --> 00:15:13,980
to get the cipher text and we have the

398
00:15:13,980 --> 00:15:16,080
secret key everywhere and we have a

399
00:15:16,080 --> 00:15:18,480
tweak and the key input to the block

400
00:15:18,480 --> 00:15:20,190
ciphers is in this case the key plus the

401
00:15:20,190 --> 00:15:23,190
first week keep the key plus the first

402
00:15:23,190 --> 00:15:26,370
bit key plus the second bit etc of the

403
00:15:26,370 --> 00:15:30,510
tweak okay so this is a tricot block

404
00:15:30,510 --> 00:15:31,950
cipher if you change the tweak you get a

405
00:15:31,950 --> 00:15:36,180
different permutation one expects to get

406
00:15:36,180 --> 00:15:37,550
a part of this

407
00:15:37,550 --> 00:15:39,410
so that this is the bound I copied from

408
00:15:39,410 --> 00:15:42,710
the previous slide and how many blocks I

409
00:15:42,710 --> 00:15:44,030
for instance do we have we have two

410
00:15:44,030 --> 00:15:46,520
different instances namely the key is

411
00:15:46,520 --> 00:15:48,860
secret and fixed and in this case we

412
00:15:48,860 --> 00:15:51,380
have the key or the key with the last

413
00:15:51,380 --> 00:15:53,420
bit flipped so we have two different

414
00:15:53,420 --> 00:15:57,110
instances the two different instances of

415
00:15:57,110 --> 00:15:59,570
the block cipher and essentially one can

416
00:15:59,570 --> 00:16:01,910
then show that if E is a very good block

417
00:16:01,910 --> 00:16:03,580
cipher like a yes and this would be

418
00:16:03,580 --> 00:16:06,860
around lambda times C over two to the n

419
00:16:06,860 --> 00:16:09,110
laughs that's two so two times T over

420
00:16:09,110 --> 00:16:10,760
two to the N I think it's quite optimal

421
00:16:10,760 --> 00:16:12,920
so two is almost 1 so this is quite

422
00:16:12,920 --> 00:16:18,710
optimum unfortunately suppose we have

423
00:16:18,710 --> 00:16:20,750
replaced the block type by a random

424
00:16:20,750 --> 00:16:22,970
permutation and the scheme is of course

425
00:16:22,970 --> 00:16:26,120
completely insecure I mean it's this is

426
00:16:26,120 --> 00:16:28,070
a very naive example I mean if the

427
00:16:28,070 --> 00:16:29,630
attacker makes two queries with the same

428
00:16:29,630 --> 00:16:30,230
message

429
00:16:30,230 --> 00:16:32,360
what's the tweak only changed at the

430
00:16:32,360 --> 00:16:35,870
last bit and then you can make two 4002

431
00:16:35,870 --> 00:16:37,370
infer you can play around with four

432
00:16:37,370 --> 00:16:39,230
queries you can break it but essentially

433
00:16:39,230 --> 00:16:41,060
I try to get the message here that if

434
00:16:41,060 --> 00:16:43,370
you have only a limited amount of

435
00:16:43,370 --> 00:16:45,470
different key inputs you can have some

436
00:16:45,470 --> 00:16:47,380
more flexibility and hopefully you can

437
00:16:47,380 --> 00:16:51,410
design a scheme but this brings me to my

438
00:16:51,410 --> 00:16:52,880
negative result namely that it's not

439
00:16:52,880 --> 00:16:55,550
possible so that you can never get any

440
00:16:55,550 --> 00:16:58,370
scheme whatever you do any scheme that's

441
00:16:58,370 --> 00:17:02,090
optimally secure and how we do this is

442
00:17:02,090 --> 00:17:03,770
essentially we look at the generalized

443
00:17:03,770 --> 00:17:06,500
scheme so this this looks very technical

444
00:17:06,500 --> 00:17:09,380
it is also very technical and but this

445
00:17:09,380 --> 00:17:11,750
essentially covers fairly any tweakable

446
00:17:11,750 --> 00:17:14,420
block cipher that is based on road calls

447
00:17:14,420 --> 00:17:18,079
and Rho plus Sigma block cipher calls so

448
00:17:18,079 --> 00:17:19,819
we have Rho block cipher calls to do

449
00:17:19,819 --> 00:17:21,380
some pre-processing these are

450
00:17:21,380 --> 00:17:24,680
independent of the message rogue calls

451
00:17:24,680 --> 00:17:27,470
and then we have Sigma calls essentially

452
00:17:27,470 --> 00:17:29,060
to transform the message to get the

453
00:17:29,060 --> 00:17:32,600
cipher text so hopeless Sigma for any

454
00:17:32,600 --> 00:17:35,780
row of and Sigma and there are some

455
00:17:35,780 --> 00:17:40,220
Mexicans like AI 3 bi pre a is and B is

456
00:17:40,220 --> 00:17:42,560
they need to satisfy certain conditions

457
00:17:42,560 --> 00:17:45,290
I mean the AIC to be invertible here

458
00:17:45,290 --> 00:17:47,780
because you want to be able to invert

459
00:17:47,780 --> 00:17:50,450
the ciphertext and we also require the

460
00:17:50,450 --> 00:17:50,960
mix

461
00:17:50,960 --> 00:17:54,770
functions bi to be uniform in a certain

462
00:17:54,770 --> 00:17:56,750
way so there are some conditions but it

463
00:17:56,750 --> 00:17:58,820
covers fairly any to equal block cipher

464
00:17:58,820 --> 00:18:03,860
design and that we proved it I think

465
00:18:03,860 --> 00:18:07,940
it's quite a strange result and to a

466
00:18:07,940 --> 00:18:09,350
certain extent essentially we prove that

467
00:18:09,350 --> 00:18:11,750
if we use this generic reduction so if

468
00:18:11,750 --> 00:18:13,730
you use this generic standard to ideal

469
00:18:13,730 --> 00:18:15,789
reduction that everyone uses apparently

470
00:18:15,789 --> 00:18:19,279
then achieving optimal security in the

471
00:18:19,279 --> 00:18:22,130
standard model for a scheme that does

472
00:18:22,130 --> 00:18:24,760
tweak wiki is at least as hard as

473
00:18:24,760 --> 00:18:26,809
achieving it for a scheme that does not

474
00:18:26,809 --> 00:18:29,450
treat crickey so stated differently

475
00:18:29,450 --> 00:18:31,309
assuming that this reduction is

476
00:18:31,309 --> 00:18:34,240
necessary assuming that this bound on

477
00:18:34,240 --> 00:18:36,919
cascaded llw is the best we can get so

478
00:18:36,919 --> 00:18:38,390
this to to the Sigma and divided by

479
00:18:38,390 --> 00:18:40,460
Sigma plus one that this is the best we

480
00:18:40,460 --> 00:18:42,470
can get without freaking then it's

481
00:18:42,470 --> 00:18:45,080
impossible to get optimal security with

482
00:18:45,080 --> 00:18:50,630
Ricky so um it's it's a conditional

483
00:18:50,630 --> 00:18:52,370
result I assume that the proof technique

484
00:18:52,370 --> 00:18:55,029
is necessary I assumed that that

485
00:18:55,029 --> 00:18:57,950
cascaded l.w only achieves sub optimal

486
00:18:57,950 --> 00:19:00,230
security then you cannot get optimal

487
00:19:00,230 --> 00:19:03,559
security and the proof is very technical

488
00:19:03,559 --> 00:19:06,169
as a probabilistic argument and but

489
00:19:06,169 --> 00:19:08,659
intuitively it sounds quite easy and

490
00:19:08,659 --> 00:19:10,520
essentially intuitively it corresponds

491
00:19:10,520 --> 00:19:13,580
to the idea that the bout always

492
00:19:13,580 --> 00:19:14,929
consists of two terms so the block

493
00:19:14,929 --> 00:19:16,700
cipher security term and a probability

494
00:19:16,700 --> 00:19:19,159
probability term that either of those

495
00:19:19,159 --> 00:19:22,039
two is too high and whatever approach

496
00:19:22,039 --> 00:19:24,789
you take and whatever scheme you take

497
00:19:24,789 --> 00:19:27,880
and more generally consider any possible

498
00:19:27,880 --> 00:19:30,470
tweakable block cipher scheme of this

499
00:19:30,470 --> 00:19:34,360
form so any possible scheme of this form

500
00:19:34,360 --> 00:19:37,250
and now we put some lambda that is

501
00:19:37,250 --> 00:19:39,200
essentially a threshold on the number of

502
00:19:39,200 --> 00:19:41,179
block cipher instances that occurs in

503
00:19:41,179 --> 00:19:43,580
the scheme so if lambda is high this

504
00:19:43,580 --> 00:19:45,740
means that there are many different key

505
00:19:45,740 --> 00:19:47,929
inputs possible to the block ciphers the

506
00:19:47,929 --> 00:19:50,059
flap is low this means that there are

507
00:19:50,059 --> 00:19:52,640
only a few different key instances to

508
00:19:52,640 --> 00:19:54,309
the block cipher

509
00:19:54,309 --> 00:19:57,380
now we prove essentially is that if this

510
00:19:57,380 --> 00:20:00,049
level is too high there are many

511
00:20:00,049 --> 00:20:02,299
different key inputs to the block cipher

512
00:20:02,299 --> 00:20:05,090
and this block cipher secure

513
00:20:05,090 --> 00:20:07,940
at that related key security term that

514
00:20:07,940 --> 00:20:09,710
dominates the bound and you can never

515
00:20:09,710 --> 00:20:12,950
get optimal security on the other hand

516
00:20:12,950 --> 00:20:16,340
the flap that's too low then this means

517
00:20:16,340 --> 00:20:19,549
that there is a large set of tweaks for

518
00:20:19,549 --> 00:20:22,549
which there is no tweak wiki so if

519
00:20:22,549 --> 00:20:25,519
lambda is very low there is only very

520
00:20:25,519 --> 00:20:27,260
few different blocks are instances and

521
00:20:27,260 --> 00:20:29,390
you can identify a very large set of

522
00:20:29,390 --> 00:20:32,120
tweaks for which you don't have tweak

523
00:20:32,120 --> 00:20:36,590
wiki and this large set is large enough

524
00:20:36,590 --> 00:20:38,630
actually to perform an attack so

525
00:20:38,630 --> 00:20:40,159
essentially to consider this specific

526
00:20:40,159 --> 00:20:42,289
scheme for this specific set of tweaks

527
00:20:42,289 --> 00:20:44,450
for which there is no he keying

528
00:20:44,450 --> 00:20:45,919
but that scheme only achieve suboptimal

529
00:20:45,919 --> 00:20:48,740
security so you cannot get optimal

530
00:20:48,740 --> 00:20:51,200
security and essentially it turns out

531
00:20:51,200 --> 00:20:53,299
that even the best trade-off it's not

532
00:20:53,299 --> 00:20:55,490
optimal so whatever tweak tweak kruky

533
00:20:55,490 --> 00:20:58,130
will scheme you take and it gives it

534
00:20:58,130 --> 00:21:00,049
potentially different value lambda and

535
00:21:00,049 --> 00:21:01,730
whatever level it gives you cannot get

536
00:21:01,730 --> 00:21:06,440
optimal security I would like to stress

537
00:21:06,440 --> 00:21:08,779
again I do not claim that optimist here

538
00:21:08,779 --> 00:21:12,169
it is impossible and however I claim

539
00:21:12,169 --> 00:21:14,929
that if we use this proof technique we

540
00:21:14,929 --> 00:21:18,500
are aware and then it is at least as

541
00:21:18,500 --> 00:21:20,570
hard as achieving optimal security am

542
00:21:20,570 --> 00:21:24,049
using for instance cascaded llw which

543
00:21:24,049 --> 00:21:28,130
looks impossible and in general it

544
00:21:28,130 --> 00:21:30,320
raises the question what does a security

545
00:21:30,320 --> 00:21:32,419
proof essentially mean I mean we have

546
00:21:32,419 --> 00:21:33,830
different models what does the security

547
00:21:33,830 --> 00:21:37,100
prove in a model and mean the simple

548
00:21:37,100 --> 00:21:38,690
answer is it means nothing

549
00:21:38,690 --> 00:21:41,419
and because I mean it's just a model you

550
00:21:41,419 --> 00:21:43,639
have a different assumption on a scheme

551
00:21:43,639 --> 00:21:45,289
I mean if we assume the block cipher to

552
00:21:45,289 --> 00:21:47,630
be ideal you can prove the most secure

553
00:21:47,630 --> 00:21:50,480
but of course you have an idea of the

554
00:21:50,480 --> 00:21:52,789
assumption but that's also the case for

555
00:21:52,789 --> 00:21:54,409
a standard model proof if you assume

556
00:21:54,409 --> 00:21:57,950
that a es is an S PRP then you can prove

557
00:21:57,950 --> 00:22:00,049
security but you still assume that a es

558
00:22:00,049 --> 00:22:02,419
is an spop and as far as I know no one

559
00:22:02,419 --> 00:22:04,460
knows what's the s PRP security of of

560
00:22:04,460 --> 00:22:07,190
AES of course it's a different

561
00:22:07,190 --> 00:22:09,440
assumption ideally we would like to have

562
00:22:09,440 --> 00:22:12,110
a weaker assumption like the standard

563
00:22:12,110 --> 00:22:14,450
model assumption but it looks like for

564
00:22:14,450 --> 00:22:16,549
some schemes the idle cipher model a

565
00:22:16,549 --> 00:22:18,110
bound could be

566
00:22:18,110 --> 00:22:20,480
closer to what's the actual security

567
00:22:20,480 --> 00:22:23,299
than the standard monopod and I

568
00:22:23,299 --> 00:22:25,700
mentioned this llw to conjecture I think

569
00:22:25,700 --> 00:22:28,100
it's a very interesting conjecture and a

570
00:22:28,100 --> 00:22:30,290
final problem is this this standard

571
00:22:30,290 --> 00:22:32,090
reduction this generic reduction of

572
00:22:32,090 --> 00:22:33,770
replacing any cipher by it's either

573
00:22:33,770 --> 00:22:37,549
equivalent I can we do better and there

574
00:22:37,549 --> 00:22:38,840
is a simple way of doing it better

575
00:22:38,840 --> 00:22:41,120
namely instead of just isolating the

576
00:22:41,120 --> 00:22:42,679
block cipher with the key and do it just

577
00:22:42,679 --> 00:22:44,090
isolating the block cipher with key

578
00:22:44,090 --> 00:22:46,549
input and the masking so instead of

579
00:22:46,549 --> 00:22:48,860
looking at s PRP security looking at

580
00:22:48,860 --> 00:22:51,640
something like masked s PRP security

581
00:22:51,640 --> 00:22:54,080
which is of course also a standard model

582
00:22:54,080 --> 00:22:55,429
assumption but then the deduction is

583
00:22:55,429 --> 00:22:56,840
trivial because you get the exact same

584
00:22:56,840 --> 00:22:59,900
scheme another approach is the thing

585
00:22:59,900 --> 00:23:01,760
what's done for instance last year at

586
00:23:01,760 --> 00:23:03,679
Asia crib by Shrimpton and terashima a

587
00:23:03,679 --> 00:23:05,360
Shrimpton terashima they looked at the

588
00:23:05,360 --> 00:23:07,280
different approach where the kind of

589
00:23:07,280 --> 00:23:09,110
weekend the ideal cipher model but

590
00:23:09,110 --> 00:23:11,120
ultimately it's still an ideal model and

591
00:23:11,120 --> 00:23:13,580
what we would like to go is to we would

592
00:23:13,580 --> 00:23:16,880
like to go to a standard and model proof

593
00:23:16,880 --> 00:23:19,880
and that concludes my presentation so I

594
00:23:19,880 --> 00:23:20,750
would like to thank you for your

595
00:23:20,750 --> 00:23:21,730
attention

596
00:23:21,730 --> 00:23:28,079
[Applause]

