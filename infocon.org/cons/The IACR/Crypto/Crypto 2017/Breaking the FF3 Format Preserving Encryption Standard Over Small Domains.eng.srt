1
00:00:04,890 --> 00:00:06,899
let's start with the concept of a block

2
00:00:06,899 --> 00:00:09,690
cipher for example a yes it encrypts a

3
00:00:09,690 --> 00:00:11,610
message of a certain fixed length say

4
00:00:11,610 --> 00:00:14,549
128 bits into the same length of cipher

5
00:00:14,549 --> 00:00:17,670
texts with an hardwired key but block

6
00:00:17,670 --> 00:00:19,439
ciphers are somewhat rigid because of

7
00:00:19,439 --> 00:00:22,380
the fixed block lengths a new concept

8
00:00:22,380 --> 00:00:24,240
called format preserving encryption has

9
00:00:24,240 --> 00:00:26,730
been introduced and it's basically a

10
00:00:26,730 --> 00:00:28,650
cipher that encrypts a message from a

11
00:00:28,650 --> 00:00:31,410
general domain eg into the same domain D

12
00:00:31,410 --> 00:00:34,940
and this general domain D is typically

13
00:00:34,940 --> 00:00:38,400
like these domains are pass codes or

14
00:00:38,400 --> 00:00:40,320
social security numbers or credit card

15
00:00:40,320 --> 00:00:43,920
numbers as we can see the they are not

16
00:00:43,920 --> 00:00:47,220
specifically binary strings and they are

17
00:00:47,220 --> 00:00:49,559
not they're much smaller than hundred 28

18
00:00:49,559 --> 00:00:52,500
bits and FPE provides a method to

19
00:00:52,500 --> 00:00:57,320
encrypt those type of domains and it FP

20
00:00:57,320 --> 00:00:59,699
specifically designed for legacy

21
00:00:59,699 --> 00:01:02,150
databases because it provides a way to

22
00:01:02,150 --> 00:01:04,949
encrypt in a transparent way to its

23
00:01:04,949 --> 00:01:06,990
application that are running to top of

24
00:01:06,990 --> 00:01:09,720
the legacy databases so no significant

25
00:01:09,720 --> 00:01:11,910
schema changes are required or no

26
00:01:11,910 --> 00:01:15,390
significant applications they need to be

27
00:01:15,390 --> 00:01:19,560
relative one way to construct and form a

28
00:01:19,560 --> 00:01:22,500
preserving encryption could be to use a

29
00:01:22,500 --> 00:01:24,570
conventional block cipher a yes for

30
00:01:24,570 --> 00:01:26,730
example with a padded input and

31
00:01:26,730 --> 00:01:30,540
truncated output but as we can guess

32
00:01:30,540 --> 00:01:33,540
this disables the decryption so we need

33
00:01:33,540 --> 00:01:35,400
more neat methods and they are not easy

34
00:01:35,400 --> 00:01:37,580
to construct fps

35
00:01:37,580 --> 00:01:40,830
indeed we can classify the EPI

36
00:01:40,830 --> 00:01:43,050
constructions in two classes in the

37
00:01:43,050 --> 00:01:45,080
first class we have some provably secure

38
00:01:45,080 --> 00:01:47,370
constructions but they are not fast

39
00:01:47,370 --> 00:01:50,420
enough for practitioners unfortunately

40
00:01:50,420 --> 00:01:55,260
on the other hand we have NIST standards

41
00:01:55,260 --> 00:01:59,550
they are fast enough for practice but

42
00:01:59,550 --> 00:02:01,950
the security of these constructions are

43
00:02:01,950 --> 00:02:04,380
supported by crypt analysis which is

44
00:02:04,380 --> 00:02:07,170
exactly the topic of this talk and it's

45
00:02:07,170 --> 00:02:11,489
more importantly constructions called

46
00:02:11,489 --> 00:02:13,020
ff1 and ff2

47
00:02:13,020 --> 00:02:15,690
in east standards are based on feistel

48
00:02:15,690 --> 00:02:17,310
networks and they are tweakable block

49
00:02:17,310 --> 00:02:18,450
ciphers and I've

50
00:02:18,450 --> 00:02:20,459
come to that what they mean in a second

51
00:02:20,459 --> 00:02:23,459
but let me remind you that the topic of

52
00:02:23,459 --> 00:02:28,530
this talk is ff3 construction so let's

53
00:02:28,530 --> 00:02:30,450
look at the faisal Network which is a

54
00:02:30,450 --> 00:02:33,569
widely known iterative cipher it was

55
00:02:33,569 --> 00:02:35,849
invented by dr. Faisal in IBM in early

56
00:02:35,849 --> 00:02:40,620
seventies each iteration in this network

57
00:02:40,620 --> 00:02:41,190
is called

58
00:02:41,190 --> 00:02:44,370
around and here we see an example in any

59
00:02:44,370 --> 00:02:45,989
instance of a feistel network with four

60
00:02:45,989 --> 00:02:49,680
rounds each round consists of a secure

61
00:02:49,680 --> 00:02:52,290
round function I typically secure prf

62
00:02:52,290 --> 00:02:55,110
and a group operation defined on a

63
00:02:55,110 --> 00:02:57,780
domain ad and I will explain how

64
00:02:57,780 --> 00:02:59,400
encryption happens in a couple of

65
00:02:59,400 --> 00:03:02,370
minutes so before that let's look at

66
00:03:02,370 --> 00:03:03,780
what tweakable from a preserving

67
00:03:03,780 --> 00:03:08,700
encryption is as you may guess FPE is a

68
00:03:08,700 --> 00:03:11,340
deterministic encryption because the

69
00:03:11,340 --> 00:03:13,380
length of the site message has to be

70
00:03:13,380 --> 00:03:15,599
preserved in the ciphertext so it cannot

71
00:03:15,599 --> 00:03:18,930
be randomized and as I said again FP is

72
00:03:18,930 --> 00:03:21,930
designed for small messages small domain

73
00:03:21,930 --> 00:03:24,239
sizes so it is vulnerable to the

74
00:03:24,239 --> 00:03:27,090
dictionary attacks which is very likely

75
00:03:27,090 --> 00:03:29,489
that we will have two messages equal to

76
00:03:29,489 --> 00:03:30,959
each other and they will encrypt to the

77
00:03:30,959 --> 00:03:33,180
same ciphertext to prevent dictionary

78
00:03:33,180 --> 00:03:36,150
attacks the constructions introduced at

79
00:03:36,150 --> 00:03:39,660
week and these tweaks as long as they

80
00:03:39,660 --> 00:03:41,459
are different than each other for for

81
00:03:41,459 --> 00:03:43,560
example for these two encryptions as

82
00:03:43,560 --> 00:03:45,269
long as these two tweaks are different

83
00:03:45,269 --> 00:03:47,040
than each other they define through

84
00:03:47,040 --> 00:03:48,930
different sadr random permutations so

85
00:03:48,930 --> 00:03:52,739
this prevents the dictionary attacks so

86
00:03:52,739 --> 00:03:55,290
tweaks are very essential for FPE and

87
00:03:55,290 --> 00:03:57,859
more importantly these tweaks are

88
00:03:57,859 --> 00:04:00,450
publicly available and under the control

89
00:04:00,450 --> 00:04:05,400
of the adversary so let's look at FF

90
00:04:05,400 --> 00:04:11,700
tree with Faisal networks to simplify FF

91
00:04:11,700 --> 00:04:15,419
tree we can look at the permutation on

92
00:04:15,419 --> 00:04:17,940
integer domains say the N square and

93
00:04:17,940 --> 00:04:19,380
then square is because of the two

94
00:04:19,380 --> 00:04:22,560
branches of Faisal Network and in here

95
00:04:22,560 --> 00:04:25,950
what fffp FF 3 does is that it takes the

96
00:04:25,950 --> 00:04:28,409
input right off of the input it pairs it

97
00:04:28,409 --> 00:04:31,719
to the 96 bits and it concatenates admit

98
00:04:31,719 --> 00:04:34,209
two bits of Twix and it inputs to the

99
00:04:34,209 --> 00:04:37,839
AES the output is truncated with the

100
00:04:37,839 --> 00:04:40,449
modular modular operation so this is

101
00:04:40,449 --> 00:04:46,779
basically how ff3 is designed from now

102
00:04:46,779 --> 00:04:48,489
on I will drop the secret keys and

103
00:04:48,489 --> 00:04:50,529
tweaks from the notation so don't get

104
00:04:50,529 --> 00:04:55,659
confused again very quickly what FF 3

105
00:04:55,659 --> 00:04:59,169
was in NIST standards the specifications

106
00:04:59,169 --> 00:05:02,709
for FF 3 is the number of runs r8 and

107
00:05:02,709 --> 00:05:06,759
domain size must be at least hundred and

108
00:05:06,759 --> 00:05:10,899
the security so it's targeted security

109
00:05:10,899 --> 00:05:13,869
128 bits since its bailed on feistel

110
00:05:13,869 --> 00:05:15,969
network all the security notions there

111
00:05:15,969 --> 00:05:18,879
are security coming from feistel network

112
00:05:18,879 --> 00:05:21,939
in Hertz to F F 3 and F F train

113
00:05:21,939 --> 00:05:25,449
additionally asserts PRP security

114
00:05:25,449 --> 00:05:27,909
against chosen plaintext and ciphertext

115
00:05:27,909 --> 00:05:34,649
attacks and in this work I like to

116
00:05:34,649 --> 00:05:37,659
introduce our contributions in two parts

117
00:05:37,659 --> 00:05:39,789
in the first part I will be only talking

118
00:05:39,789 --> 00:05:41,739
about the generic attacks on feistel

119
00:05:41,739 --> 00:05:43,539
networks without mentioning at what F F

120
00:05:43,539 --> 00:05:47,079
3 is and in this feistel network psy

121
00:05:47,079 --> 00:05:48,969
will be specifically focusing on a

122
00:05:48,969 --> 00:05:51,399
modular Edition as a group operation and

123
00:05:51,399 --> 00:05:54,669
on integer domains in the second part I

124
00:05:54,669 --> 00:05:56,919
will describe an attack on FF 3

125
00:05:56,919 --> 00:05:59,469
construction by using by using a glitch

126
00:05:59,469 --> 00:06:04,179
in this in the in the construction the

127
00:06:04,179 --> 00:06:07,269
design of the FF 3 and as far as we know

128
00:06:07,269 --> 00:06:09,489
the our attack works with the best known

129
00:06:09,489 --> 00:06:11,949
query and time complexity and good news

130
00:06:11,949 --> 00:06:14,800
is that it is easy to fix in order to

131
00:06:14,800 --> 00:06:16,959
prevent it from our present attack and

132
00:06:16,959 --> 00:06:18,129
we don't know what happens for the

133
00:06:18,129 --> 00:06:24,399
future attacks so I first want to talk a

134
00:06:24,399 --> 00:06:26,079
little bit about a covalent round

135
00:06:26,079 --> 00:06:28,449
functions and what they mean because I

136
00:06:28,449 --> 00:06:32,860
will use this fact as an intuition for

137
00:06:32,860 --> 00:06:36,669
our attack and for that I like to show

138
00:06:36,669 --> 00:06:38,589
you how encryption happens me briefly

139
00:06:38,589 --> 00:06:40,419
and quickly maybe most of you guys are

140
00:06:40,419 --> 00:06:40,950
only

141
00:06:40,950 --> 00:06:44,160
you know how encryption happens but for

142
00:06:44,160 --> 00:06:46,260
three-round faisal network we have seen

143
00:06:46,260 --> 00:06:49,050
here with an intermediate value C which

144
00:06:49,050 --> 00:06:51,690
is unknown to the adversary the

145
00:06:51,690 --> 00:06:54,720
encryption happens as follows the for

146
00:06:54,720 --> 00:06:56,670
the right half of the message why it is

147
00:06:56,670 --> 00:06:59,040
input to the first round function f 0

148
00:06:59,040 --> 00:07:01,350
and its output added to the left part of

149
00:07:01,350 --> 00:07:03,600
the message to generate intermediate

150
00:07:03,600 --> 00:07:06,570
value C and as soon as C is generated

151
00:07:06,570 --> 00:07:09,240
the now this intermediate value is input

152
00:07:09,240 --> 00:07:11,070
the second round function and its output

153
00:07:11,070 --> 00:07:13,230
is added to the right half of the

154
00:07:13,230 --> 00:07:15,810
message to generate the left right half

155
00:07:15,810 --> 00:07:18,660
of the ciphertext and we continue for it

156
00:07:18,660 --> 00:07:22,590
last round in the same way in order to

157
00:07:22,590 --> 00:07:24,270
generate the left part of the ciphertext

158
00:07:24,270 --> 00:07:27,720
this is how the round function f is the

159
00:07:27,720 --> 00:07:30,120
set of round functions F 0 F 1 and F 2

160
00:07:30,120 --> 00:07:33,390
encrypts the message XY into ZT and I

161
00:07:33,390 --> 00:07:35,670
will I like to show you that this is not

162
00:07:35,670 --> 00:07:39,420
uniquely defined encryption what I mean

163
00:07:39,420 --> 00:07:42,420
is that I like you to assume that I add

164
00:07:42,420 --> 00:07:44,850
an Delta value over here to the output

165
00:07:44,850 --> 00:07:47,190
of the first round function so what

166
00:07:47,190 --> 00:07:50,190
happens here is that the additional data

167
00:07:50,190 --> 00:07:52,230
value is transmitted to the intermediate

168
00:07:52,230 --> 00:07:57,150
to C value so for the second the aim is

169
00:07:57,150 --> 00:08:00,030
that to show that X Y is going to be

170
00:08:00,030 --> 00:08:02,190
encrypted to Z T again but with

171
00:08:02,190 --> 00:08:05,190
different triples of round functions but

172
00:08:05,190 --> 00:08:06,930
that input-output behavior of the

173
00:08:06,930 --> 00:08:09,510
encryption will be same so in the second

174
00:08:09,510 --> 00:08:11,430
round function in order to eliminate

175
00:08:11,430 --> 00:08:14,190
this into additional data value from the

176
00:08:14,190 --> 00:08:16,830
intermediate value I like to subtract

177
00:08:16,830 --> 00:08:18,960
this better value before inputting to

178
00:08:18,960 --> 00:08:21,990
the second round function so I didn't I

179
00:08:21,990 --> 00:08:25,200
this again generates the same half of

180
00:08:25,200 --> 00:08:28,170
the ciphertext and this in the last

181
00:08:28,170 --> 00:08:30,480
round function since the additional data

182
00:08:30,480 --> 00:08:32,640
value stays in the intermediate part

183
00:08:32,640 --> 00:08:35,549
again I like to subtract this subtract

184
00:08:35,549 --> 00:08:37,500
this Delta value from the output of last

185
00:08:37,500 --> 00:08:40,169
round function to eliminate as it

186
00:08:40,169 --> 00:08:41,970
generates the same left part of the

187
00:08:41,970 --> 00:08:42,840
ciphertext

188
00:08:42,840 --> 00:08:46,860
so these two triples f0 f1 f2 and the

189
00:08:46,860 --> 00:08:50,130
the one that is defined over here has

190
00:08:50,130 --> 00:08:51,930
the same input-output behavior of

191
00:08:51,930 --> 00:08:54,360
encryption so

192
00:08:54,360 --> 00:08:56,430
what that means is that the adversary

193
00:08:56,430 --> 00:09:00,510
can fix or set one output of an

194
00:09:00,510 --> 00:09:03,300
arbitrary input for first round function

195
00:09:03,300 --> 00:09:05,899
so it gives this flexibility to the

196
00:09:05,899 --> 00:09:10,860
adversary so now in my terminology I

197
00:09:10,860 --> 00:09:13,050
like to tell you that the round function

198
00:09:13,050 --> 00:09:15,810
recovery means that recovering the

199
00:09:15,810 --> 00:09:17,820
Drowned functions either the true one

200
00:09:17,820 --> 00:09:20,730
which is used for encryption which is in

201
00:09:20,730 --> 00:09:23,100
the previous slide F 0 F 1 and F 2

202
00:09:23,100 --> 00:09:27,600
defined as f0 f1 f2 the round function

203
00:09:27,600 --> 00:09:30,360
recovery mean that means that either

204
00:09:30,360 --> 00:09:34,079
this true triple is recovered or one of

205
00:09:34,079 --> 00:09:36,779
the equivalent triples is going to be

206
00:09:36,779 --> 00:09:40,140
recovered because they all will define

207
00:09:40,140 --> 00:09:45,800
the same encryption as I shown you and

208
00:09:45,800 --> 00:09:49,320
there is also wrong code book recovery

209
00:09:49,320 --> 00:09:52,589
in that chase the adversary can recover

210
00:09:52,589 --> 00:09:55,050
the mapping of messages to their

211
00:09:55,050 --> 00:09:57,959
corresponding cipher texts and it

212
00:09:57,959 --> 00:10:00,420
doesn't have to be the round function

213
00:10:00,420 --> 00:10:03,420
recovery so the very very simple way of

214
00:10:03,420 --> 00:10:07,589
code book recovery is that I make an

215
00:10:07,589 --> 00:10:11,519
encryption making Oracle queries for

216
00:10:11,519 --> 00:10:14,399
each messages and we will be able to

217
00:10:14,399 --> 00:10:17,699
learn which messages map to which map to

218
00:10:17,699 --> 00:10:19,920
which cipher text so the decryption will

219
00:10:19,920 --> 00:10:22,560
be simple and if these both attack types

220
00:10:22,560 --> 00:10:25,680
the boat attacks are as powerful as

221
00:10:25,680 --> 00:10:31,320
recovering the secret key ok ok so the

222
00:10:31,320 --> 00:10:33,570
first part is going to be the generic

223
00:10:33,570 --> 00:10:39,060
attacks on faisal network in the the art

224
00:10:39,060 --> 00:10:41,970
represents here the round numbers so I

225
00:10:41,970 --> 00:10:43,949
will first give an attack for 3 round

226
00:10:43,949 --> 00:10:46,410
attacks three round feistel networks and

227
00:10:46,410 --> 00:10:48,959
as far as I know there is no other known

228
00:10:48,959 --> 00:10:52,230
attack with round function recovery so

229
00:10:52,230 --> 00:10:54,570
this is the only work I know like the

230
00:10:54,570 --> 00:10:56,519
artwork is the only work I have known

231
00:10:56,519 --> 00:10:59,430
it's a non plaintext attack with given

232
00:10:59,430 --> 00:11:02,060
query and time complexities and Naga and

233
00:11:02,060 --> 00:11:05,790
we also have for the attack against for

234
00:11:05,790 --> 00:11:08,370
round faisal networks again round

235
00:11:08,370 --> 00:11:10,620
recover with known plaintext power given

236
00:11:10,620 --> 00:11:12,930
to the adversary with the given query

237
00:11:12,930 --> 00:11:15,390
and time complexities but we are not

238
00:11:15,390 --> 00:11:19,170
alone there is another work by Billy Coe

239
00:11:19,170 --> 00:11:20,160
at all

240
00:11:20,160 --> 00:11:22,620
they have better time complexity with

241
00:11:22,620 --> 00:11:24,930
the same query complexity but in their

242
00:11:24,930 --> 00:11:27,600
case the adversary has given chosen

243
00:11:27,600 --> 00:11:29,880
plaintext and ciphertext power as

244
00:11:29,880 --> 00:11:32,730
opposed to known plaintext power okay so

245
00:11:32,730 --> 00:11:33,930
that verse there is a little bit more

246
00:11:33,930 --> 00:11:36,660
powerful in their attack and similarly

247
00:11:36,660 --> 00:11:39,420
we have given the attack for against

248
00:11:39,420 --> 00:11:41,880
five rounds Python network with chosen

249
00:11:41,880 --> 00:11:45,839
plaintext power and given complexities

250
00:11:45,839 --> 00:11:49,339
over here again we recall at all defines

251
00:11:49,339 --> 00:11:54,240
five round faisal network attacks with

252
00:11:54,240 --> 00:11:57,620
chosen plaintext and ciphertext power

253
00:11:57,620 --> 00:12:01,290
given to the adversary and our

254
00:12:01,290 --> 00:12:03,690
complexities are better with a less

255
00:12:03,690 --> 00:12:07,980
powerful adversarial model so and what

256
00:12:07,980 --> 00:12:09,810
is good about our work is that we can

257
00:12:09,810 --> 00:12:11,640
extend our attacks to six and more

258
00:12:11,640 --> 00:12:14,279
rounds and they are again chosen

259
00:12:14,279 --> 00:12:17,760
plaintext attacks and I will be just

260
00:12:17,760 --> 00:12:19,650
talking about the very detailed three

261
00:12:19,650 --> 00:12:21,510
round attack and really briefly for

262
00:12:21,510 --> 00:12:24,300
around the truck in the store so let's

263
00:12:24,300 --> 00:12:26,720
start with the three round attack the

264
00:12:26,720 --> 00:12:31,410
input to the given to the adversary is

265
00:12:31,410 --> 00:12:35,100
that a message ciphertext pairs with

266
00:12:35,100 --> 00:12:37,980
unknown intermediate values and I will

267
00:12:37,980 --> 00:12:41,790
call that this set as s and output of

268
00:12:41,790 --> 00:12:45,360
the attack by by the adversary is going

269
00:12:45,360 --> 00:12:47,880
to be the either partial tables of round

270
00:12:47,880 --> 00:12:50,190
functions or full tables of round

271
00:12:50,190 --> 00:12:51,660
functions yes

272
00:12:51,660 --> 00:12:53,760
again we I work with the three round

273
00:12:53,760 --> 00:12:55,500
faisal network with unknown intermediate

274
00:12:55,500 --> 00:12:58,050
values so in the first step the

275
00:12:58,050 --> 00:13:01,560
adversary picked a pair x 0 y 0 Z 0 and

276
00:13:01,560 --> 00:13:02,459
T 0

277
00:13:02,459 --> 00:13:04,380
arbitrarily starts with an arbitrary

278
00:13:04,380 --> 00:13:09,810
input message ciphertext pair and as we

279
00:13:09,810 --> 00:13:12,660
have talked the adversary is free to set

280
00:13:12,660 --> 00:13:16,290
one output of n1 arbitrary input in an

281
00:13:16,290 --> 00:13:18,480
arbitrary manner so the adversary picks

282
00:13:18,480 --> 00:13:21,139
y 0 and it evaluates F

283
00:13:21,139 --> 00:13:24,799
zero at this point as zero it's free -

284
00:13:24,799 --> 00:13:26,839
he's free to do that that we say is free

285
00:13:26,839 --> 00:13:31,420
to do that so as soon as the adversary

286
00:13:31,420 --> 00:13:34,819
evaluates y zero every its f zero on

287
00:13:34,819 --> 00:13:37,489
this Y zero point it can start to doing

288
00:13:37,489 --> 00:13:40,160
encryption and it learns what is the

289
00:13:40,160 --> 00:13:42,230
intermediate value C zero is biting

290
00:13:42,230 --> 00:13:46,069
during this encryption and since it

291
00:13:46,069 --> 00:13:49,309
learned what is F what is C zero value

292
00:13:49,309 --> 00:13:52,309
is now it can evaluate everyone on this

293
00:13:52,309 --> 00:13:54,589
point so we filled one point over here

294
00:13:54,589 --> 00:13:57,889
for F zero and 1 point for F 1 and again

295
00:13:57,889 --> 00:13:59,989
we know intermediate value now and we

296
00:13:59,989 --> 00:14:02,509
can learn one point for F through and

297
00:14:02,509 --> 00:14:04,790
this is this has done with only one

298
00:14:04,790 --> 00:14:07,879
message ciphertext pair in the second

299
00:14:07,879 --> 00:14:11,359
step the adversary will pick a pair with

300
00:14:11,359 --> 00:14:14,089
a matching right half of the ciphertext

301
00:14:14,089 --> 00:14:16,970
why because it knows how to evaluate

302
00:14:16,970 --> 00:14:19,669
this right half of the right half of the

303
00:14:19,669 --> 00:14:22,879
ciphertext and the last round one in the

304
00:14:22,879 --> 00:14:25,129
last round function so the adversary now

305
00:14:25,129 --> 00:14:28,309
we try to decrypt backward and we learn

306
00:14:28,309 --> 00:14:30,649
again the intermediate values for this

307
00:14:30,649 --> 00:14:34,669
pair which is a C 1 and how to evaluate

308
00:14:34,669 --> 00:14:37,970
F 1 on this point and similarly how to

309
00:14:37,970 --> 00:14:42,799
evaluate F 0 on point y 1 and with the

310
00:14:42,799 --> 00:14:45,019
second size message ciphertext fake pair

311
00:14:45,019 --> 00:14:48,079
it failed a little bit more the tables

312
00:14:48,079 --> 00:14:51,110
and the next step the adversary will

313
00:14:51,110 --> 00:14:54,459
pick now message ciphertext pair which

314
00:14:54,459 --> 00:14:57,649
with matching right half of the messages

315
00:14:57,649 --> 00:15:01,839
from the previous previously picked pair

316
00:15:01,839 --> 00:15:04,970
YB y again because the adversary okay

317
00:15:04,970 --> 00:15:06,499
sorry about that this is supposed to be

318
00:15:06,499 --> 00:15:09,679
why - because because the adversary

319
00:15:09,679 --> 00:15:13,249
knows how to evaluate F 0 on point y 2

320
00:15:13,249 --> 00:15:19,850
and again enable him to encrypt by

321
00:15:19,850 --> 00:15:24,049
finding intermediate values ok so the

322
00:15:24,049 --> 00:15:26,720
adversary continues this yo-yo game

323
00:15:26,720 --> 00:15:30,139
until normal points in any of the round

324
00:15:30,139 --> 00:15:33,649
functions at the tables the tables for

325
00:15:33,649 --> 00:15:34,160
the round

326
00:15:34,160 --> 00:15:37,400
are recovered okay so now the question

327
00:15:37,400 --> 00:15:42,470
is that how much of these partial tables

328
00:15:42,470 --> 00:15:45,020
are recovered in order to answer this

329
00:15:45,020 --> 00:15:47,510
question we but like we be like to model

330
00:15:47,510 --> 00:15:50,450
our set s as bipartite graph and in this

331
00:15:50,450 --> 00:15:52,610
bipartite graph the vertices are with

332
00:15:52,610 --> 00:15:55,880
right off of all the possible right half

333
00:15:55,880 --> 00:15:57,710
of the messages which are y-values and

334
00:15:57,710 --> 00:15:59,330
all the possible right half of the

335
00:15:59,330 --> 00:16:01,130
psychotics which are T values and the

336
00:16:01,130 --> 00:16:03,440
domain size to the round function was n

337
00:16:03,440 --> 00:16:07,610
so this those are the vertices and the

338
00:16:07,610 --> 00:16:11,330
edges are now they define with each pair

339
00:16:11,330 --> 00:16:14,450
inside the S so as soon as we see a PAYT

340
00:16:14,450 --> 00:16:17,390
pair in the set s we will put that edge

341
00:16:17,390 --> 00:16:20,720
in this graph so all the algorithm the

342
00:16:20,720 --> 00:16:23,000
attack algorithm is doing here is that

343
00:16:23,000 --> 00:16:24,950
to look for a connected component

344
00:16:24,950 --> 00:16:31,100
starting from an arbitrary point y0 okay

345
00:16:31,100 --> 00:16:34,220
so the adversary start with y0 and found

346
00:16:34,220 --> 00:16:37,790
that it finds an edge between y0 t 0 and

347
00:16:37,790 --> 00:16:40,340
in the second step it found another edge

348
00:16:40,340 --> 00:16:44,000
from t0 to another y-value by value and

349
00:16:44,000 --> 00:16:47,450
from then it continues exploring this

350
00:16:47,450 --> 00:16:52,040
graph and now what is happening here is

351
00:16:52,040 --> 00:16:56,120
that in this trying to the in this

352
00:16:56,120 --> 00:17:00,050
algorithm the how do we find a connected

353
00:17:00,050 --> 00:17:02,690
component like how big it will look like

354
00:17:02,690 --> 00:17:06,800
right and if the side offset s the brim

355
00:17:06,800 --> 00:17:09,079
others realize that the size of set s is

356
00:17:09,079 --> 00:17:10,699
going to be the number of edges over

357
00:17:10,699 --> 00:17:13,369
here and I'd like to the adversary is

358
00:17:13,369 --> 00:17:16,160
trying to explore all possible vertices

359
00:17:16,160 --> 00:17:17,990
over here starting from an arbitrary

360
00:17:17,990 --> 00:17:22,520
point so if the fiesel network is a

361
00:17:22,520 --> 00:17:26,060
secure faisal network this graph should

362
00:17:26,060 --> 00:17:29,600
look like a random graph so what we know

363
00:17:29,600 --> 00:17:32,990
from random graph theory is that if the

364
00:17:32,990 --> 00:17:36,050
size of s or number of edges is n log n

365
00:17:36,050 --> 00:17:40,280
then this graph is with high probability

366
00:17:40,280 --> 00:17:41,630
this graph is going to be fully

367
00:17:41,630 --> 00:17:43,910
connected and if it is not fully

368
00:17:43,910 --> 00:17:47,660
connected what is the probability that

369
00:17:47,660 --> 00:17:49,370
being a giant behaving the giant

370
00:17:49,370 --> 00:17:52,850
connected component so again from random

371
00:17:52,850 --> 00:17:55,580
graph theory the size of s if the size

372
00:17:55,580 --> 00:17:58,280
of s is an with high probability did

373
00:17:58,280 --> 00:18:01,790
this bipartite graph will have a giant

374
00:18:01,790 --> 00:18:04,420
connected component and this is

375
00:18:04,420 --> 00:18:08,420
basically the the justification of our

376
00:18:08,420 --> 00:18:10,850
algorithm and here are some experimental

377
00:18:10,850 --> 00:18:15,950
results in the in here we have set s the

378
00:18:15,950 --> 00:18:17,750
size of set s parameterize with the

379
00:18:17,750 --> 00:18:19,880
theta value which is shown in the x-axis

380
00:18:19,880 --> 00:18:22,640
here and the y-axis is basically stands

381
00:18:22,640 --> 00:18:25,070
for two different things for thick lines

382
00:18:25,070 --> 00:18:26,780
it stands for the fraction of

383
00:18:26,780 --> 00:18:28,870
experiments which is fully recovered

384
00:18:28,870 --> 00:18:31,880
recovering all the round functions over

385
00:18:31,880 --> 00:18:35,960
10,000 experiments and independent runs

386
00:18:35,960 --> 00:18:38,450
in the team lines

387
00:18:38,450 --> 00:18:40,430
it shows the fraction of recovered ip0

388
00:18:40,430 --> 00:18:43,670
depending on theta and if you see here

389
00:18:43,670 --> 00:18:46,330
the fraction of recovered recovered

390
00:18:46,330 --> 00:18:50,180
f0i they are not depend on depending on

391
00:18:50,180 --> 00:18:52,850
n at all so the fraction is always

392
00:18:52,850 --> 00:18:56,120
regardless of n the fraction of record F

393
00:18:56,120 --> 00:18:58,780
theory is always giving the similar

394
00:18:58,780 --> 00:19:04,640
correction similar figures okay so and I

395
00:19:04,640 --> 00:19:06,410
like to quickly switch the foreground

396
00:19:06,410 --> 00:19:09,500
attack but I'm not going to get into

397
00:19:09,500 --> 00:19:11,090
details because we don't have time for

398
00:19:11,090 --> 00:19:13,370
that but the basic idea were here is

399
00:19:13,370 --> 00:19:17,090
that since we know how to we know how to

400
00:19:17,090 --> 00:19:19,190
reconstruct the tables for three-round

401
00:19:19,190 --> 00:19:21,440
if we know if we have a set of known

402
00:19:21,440 --> 00:19:24,470
plaintext ciphertext pairs the question

403
00:19:24,470 --> 00:19:26,870
is can we reduce the attack for for

404
00:19:26,870 --> 00:19:28,700
round five sub networks into three round

405
00:19:28,700 --> 00:19:31,280
Phi sub Network attacks and the way to

406
00:19:31,280 --> 00:19:33,410
do that is to basically try to

407
00:19:33,410 --> 00:19:35,300
characterize F 0 which is the first

408
00:19:35,300 --> 00:19:37,820
round function over here in a way that

409
00:19:37,820 --> 00:19:40,130
we learned some intermediate values C

410
00:19:40,130 --> 00:19:42,350
values and then the rest of the graph

411
00:19:42,350 --> 00:19:44,630
will look like a three-round feistel

412
00:19:44,630 --> 00:19:46,870
network and we already know how to

413
00:19:46,870 --> 00:19:49,130
reconstruct these round functions with a

414
00:19:49,130 --> 00:19:51,380
three round attack with known plaintext

415
00:19:51,380 --> 00:19:56,090
cipher taxpayers and the to characterize

416
00:19:56,090 --> 00:19:57,620
the first round function is not easy

417
00:19:57,620 --> 00:19:59,560
first of all it's not so

418
00:19:59,560 --> 00:20:03,530
intuitive but yeah I don't have time for

419
00:20:03,530 --> 00:20:06,170
details and you can talk to me after the

420
00:20:06,170 --> 00:20:09,950
presentation if you like and the results

421
00:20:09,950 --> 00:20:12,260
I would like to show you is you is here

422
00:20:12,260 --> 00:20:14,480
it's important because of the data query

423
00:20:14,480 --> 00:20:17,570
complexity which is shown with M value

424
00:20:17,570 --> 00:20:20,210
which is parameterized with L and it is

425
00:20:20,210 --> 00:20:22,910
typically set to 3 in the experimental

426
00:20:22,910 --> 00:20:25,850
results I like what I like to say is

427
00:20:25,850 --> 00:20:28,100
that the success probability means that

428
00:20:28,100 --> 00:20:29,780
the entire run function have been

429
00:20:29,780 --> 00:20:31,880
recovered out of this many trials and

430
00:20:31,880 --> 00:20:34,160
these trials are run for different

431
00:20:34,160 --> 00:20:36,860
independent cheese ok and when n gets

432
00:20:36,860 --> 00:20:39,110
larger and larger the success

433
00:20:39,110 --> 00:20:41,870
probability gets larger as well it gets

434
00:20:41,870 --> 00:20:44,360
close to 1 the for round attack succeeds

435
00:20:44,360 --> 00:20:46,820
as well so we are good to go now I'd

436
00:20:46,820 --> 00:20:48,950
like to switch to your stood of ff3

437
00:20:48,950 --> 00:20:51,860
construction very quickly this is the

438
00:20:51,860 --> 00:20:55,310
how the v reconstruction looks like it's

439
00:20:55,310 --> 00:20:59,210
a 8 round feistel network with the

440
00:20:59,210 --> 00:21:03,730
different round functions and the way to

441
00:21:03,730 --> 00:21:06,200
the round functions are basically all

442
00:21:06,200 --> 00:21:08,630
our same functions under the same key

443
00:21:08,630 --> 00:21:12,680
and what happens over here is that Jarek

444
00:21:12,680 --> 00:21:16,070
the tweaked generic T is divided into

445
00:21:16,070 --> 00:21:19,220
two halves left and right house and it

446
00:21:19,220 --> 00:21:22,040
is export with the round index for each

447
00:21:22,040 --> 00:21:25,460
round ok so these two round functions

448
00:21:25,460 --> 00:21:26,930
now pairwise the different round

449
00:21:26,930 --> 00:21:29,480
functions defining different PRPP

450
00:21:29,480 --> 00:21:32,510
defining different periods ok so this is

451
00:21:32,510 --> 00:21:35,060
the domain separation FFT reconstruction

452
00:21:35,060 --> 00:21:38,780
is considering and we will exploit this

453
00:21:38,780 --> 00:21:41,590
design because it is some weaknesses

454
00:21:41,590 --> 00:21:47,900
before that and this work the again we

455
00:21:47,900 --> 00:21:49,760
give a round function recovery attack

456
00:21:49,760 --> 00:21:52,790
with chosen plaintext and tweak power

457
00:21:52,790 --> 00:21:55,940
that adversary has and the query

458
00:21:55,940 --> 00:21:59,690
complexity is in this time so tweaks and

459
00:21:59,690 --> 00:22:01,340
the time complexity is n to the fifth

460
00:22:01,340 --> 00:22:02,990
and there is another work given by

461
00:22:02,990 --> 00:22:07,700
balerion ccs 2015 which is a slightly

462
00:22:07,700 --> 00:22:10,070
different flavor because it's not the

463
00:22:10,070 --> 00:22:11,510
round function recovery it is a

464
00:22:11,510 --> 00:22:12,860
different security notion

465
00:22:12,860 --> 00:22:14,960
against this security notion they give

466
00:22:14,960 --> 00:22:17,809
an attack and in here the time and tweak

467
00:22:17,809 --> 00:22:19,670
complexity are equal to this I didn't

468
00:22:19,670 --> 00:22:21,290
have space so I'm sorry for that but

469
00:22:21,290 --> 00:22:23,570
these two are same time complexity ensue

470
00:22:23,570 --> 00:22:26,420
complexity here and they give an attack

471
00:22:26,420 --> 00:22:29,210
against a factory yet FF 1 not only FF 3

472
00:22:29,210 --> 00:22:32,870
so maybe not so failure to compare these

473
00:22:32,870 --> 00:22:36,290
results but yeah so again coming back to

474
00:22:36,290 --> 00:22:38,270
the FF 3 construction with Tweetie I

475
00:22:38,270 --> 00:22:42,020
like to introduce its sibling with tweak

476
00:22:42,020 --> 00:22:46,190
C prime C prime is basically T X orbit 4

477
00:22:46,190 --> 00:22:50,450
and y it is basically it's a chosen

478
00:22:50,450 --> 00:22:54,169
tweak attack the attacker I'm presenting

479
00:22:54,169 --> 00:22:58,340
now and it is basically important to

480
00:22:58,340 --> 00:23:01,640
tweak the pick another tweak T prime it

481
00:23:01,640 --> 00:23:05,330
ex-ored with twig tea because it gives

482
00:23:05,330 --> 00:23:10,370
us this nice slided versions of each

483
00:23:10,370 --> 00:23:12,380
other so what is happening here is that

484
00:23:12,380 --> 00:23:16,250
the upper half of the left encryption is

485
00:23:16,250 --> 00:23:20,179
equal to the bottom half of the right

486
00:23:20,179 --> 00:23:23,419
encryption and vice versa we are running

487
00:23:23,419 --> 00:23:27,650
out of time so please wrap up ok so very

488
00:23:27,650 --> 00:23:30,500
quickly we start with an arbitrary

489
00:23:30,500 --> 00:23:32,600
message we apply a chain chain

490
00:23:32,600 --> 00:23:35,290
encryption with Tweetie and secret key K

491
00:23:35,290 --> 00:23:39,710
and we do it a many times and same is

492
00:23:39,710 --> 00:23:42,590
done with the TTT prime which is X XOR

493
00:23:42,590 --> 00:23:44,990
bit for and all the adversary is trying

494
00:23:44,990 --> 00:23:50,179
to do is that to find a mapping of X Y

495
00:23:50,179 --> 00:23:52,700
IJ which is the Jade encryption of ID

496
00:23:52,700 --> 00:23:57,980
column over here and this is going to be

497
00:23:57,980 --> 00:24:01,220
mapped X Y by bar I prime 0 under G and

498
00:24:01,220 --> 00:24:03,679
if the adversary can detect that the

499
00:24:03,679 --> 00:24:06,230
rest will follow and we will have some

500
00:24:06,230 --> 00:24:08,059
input output of for round

501
00:24:08,059 --> 00:24:10,340
feistel network which is defined with G

502
00:24:10,340 --> 00:24:14,059
and H ok so we will be able to reduce

503
00:24:14,059 --> 00:24:17,960
our attack so for round attack okay over

504
00:24:17,960 --> 00:24:20,780
here and what is the to see the success

505
00:24:20,780 --> 00:24:22,640
probability of our attack we just need

506
00:24:22,640 --> 00:24:25,730
to see these two segments of length to

507
00:24:25,730 --> 00:24:26,299
be

508
00:24:26,299 --> 00:24:29,059
should overlap it at least em points and

509
00:24:29,059 --> 00:24:31,729
em well the query complexity of our non

510
00:24:31,729 --> 00:24:34,039
four round four round feistel network

511
00:24:34,039 --> 00:24:37,609
attack known plaintext attack so all we

512
00:24:37,609 --> 00:24:39,019
need to look at is that what is the

513
00:24:39,019 --> 00:24:40,669
probability of these two segments

514
00:24:40,669 --> 00:24:43,779
overlap on endpoints and if they do

515
00:24:43,779 --> 00:24:47,629
overlap on its endpoint we have enough

516
00:24:47,629 --> 00:24:50,809
data to reconstruct four round functions

517
00:24:50,809 --> 00:24:54,349
defined with G and H both of them okay

518
00:24:54,349 --> 00:24:57,919
and here are the results again

519
00:24:57,919 --> 00:25:00,079
amb i defined here the number of

520
00:25:00,079 --> 00:25:01,759
arbitrary plaintext i apply chain

521
00:25:01,759 --> 00:25:03,469
encryption and b is the length of the

522
00:25:03,469 --> 00:25:06,859
chain encryption and when n goes larger

523
00:25:06,859 --> 00:25:09,109
the success probability gets larger the

524
00:25:09,109 --> 00:25:11,269
success probability is again to recover

525
00:25:11,269 --> 00:25:13,009
all the round functions eight round

526
00:25:13,009 --> 00:25:18,909
functions and the conclusion is that we

527
00:25:18,909 --> 00:25:21,619
we are not sure how high still networks

528
00:25:21,619 --> 00:25:24,079
behavior with small domain sizes we

529
00:25:24,079 --> 00:25:25,729
maybe need a little more research for

530
00:25:25,729 --> 00:25:28,459
that and also ff3 suffers from the bad

531
00:25:28,459 --> 00:25:30,259
the domain separation li and it is

532
00:25:30,259 --> 00:25:33,109
luckily easy to fix instead of exploring

533
00:25:33,109 --> 00:25:35,659
around tweak with around index just a

534
00:25:35,659 --> 00:25:38,299
concatenated and it will be preventing

535
00:25:38,299 --> 00:25:42,049
our against our attack thank you so much

536
00:25:42,049 --> 00:25:43,770
for your attention

537
00:25:43,770 --> 00:25:47,220
[Applause]

