1
00:00:04,910 --> 00:00:08,790
so this talk is about the gap between

2
00:00:08,790 --> 00:00:10,799
selective and adaptive security in

3
00:00:10,799 --> 00:00:14,040
various cryptographic protocols so as we

4
00:00:14,040 --> 00:00:16,619
all know selective security is the

5
00:00:16,619 --> 00:00:19,529
notion of security in which we required

6
00:00:19,529 --> 00:00:21,510
that the adversary commits to some or

7
00:00:21,510 --> 00:00:24,720
all of its choices ahead of time before

8
00:00:24,720 --> 00:00:27,000
seeing either the public parameters or

9
00:00:27,000 --> 00:00:29,490
other features of the of the

10
00:00:29,490 --> 00:00:31,710
construction where is the adaptive

11
00:00:31,710 --> 00:00:35,129
notion allows him to do all his choices

12
00:00:35,129 --> 00:00:37,049
choices adaptively as the protocol

13
00:00:37,049 --> 00:00:38,940
continues this is of course much more

14
00:00:38,940 --> 00:00:40,379
natural but much harder to achieve

15
00:00:40,379 --> 00:00:43,879
usually as an example thick I think of

16
00:00:43,879 --> 00:00:46,650
garbling where the standard notion of

17
00:00:46,650 --> 00:00:49,470
security requires the adversary to

18
00:00:49,470 --> 00:00:53,850
commit on his on his input that he wants

19
00:00:53,850 --> 00:00:55,769
to gamble before seeing the garbled

20
00:00:55,769 --> 00:00:59,369
circuit this is the classical security

21
00:00:59,369 --> 00:01:02,070
notion of Yahoo garbled circuits and of

22
00:01:02,070 --> 00:01:04,019
course the more natural notion the

23
00:01:04,019 --> 00:01:06,180
adaptive one adaptive one in which we

24
00:01:06,180 --> 00:01:08,040
require the adversary not to commit to

25
00:01:08,040 --> 00:01:09,630
his input ahead of time but only after

26
00:01:09,630 --> 00:01:12,150
seeing the garble circuit is much more

27
00:01:12,150 --> 00:01:16,620
natural and harder to achieve there's a

28
00:01:16,620 --> 00:01:19,050
long series of works in the past decade

29
00:01:19,050 --> 00:01:21,420
showing these various protocols that we

30
00:01:21,420 --> 00:01:23,280
only knew how to approve selective

31
00:01:23,280 --> 00:01:27,390
security can be a shown to satisfy some

32
00:01:27,390 --> 00:01:29,820
notion of adaptive security it all

33
00:01:29,820 --> 00:01:31,520
started in the work of conjoining in

34
00:01:31,520 --> 00:01:35,490
2007 where he devised the game he called

35
00:01:35,490 --> 00:01:37,740
the general selective decryption which

36
00:01:37,740 --> 00:01:39,630
is very easy to prove it's selective

37
00:01:39,630 --> 00:01:42,150
security but seems super hard to prove

38
00:01:42,150 --> 00:01:45,270
it's adaptive security the latest work

39
00:01:45,270 --> 00:01:47,790
in this series of works is by Jeff ergo

40
00:01:47,790 --> 00:01:50,820
lien weeks showing that Yahoo's garbled

41
00:01:50,820 --> 00:01:52,200
circuit construction is actually

42
00:01:52,200 --> 00:01:55,710
adaptively secure one downside of all

43
00:01:55,710 --> 00:01:57,950
this works is that whoever knows them

44
00:01:57,950 --> 00:02:00,390
had a feeling that they're all somehow

45
00:02:00,390 --> 00:02:03,299
related this level also all the series

46
00:02:03,299 --> 00:02:05,159
of works they all had the common

47
00:02:05,159 --> 00:02:07,020
features in the proof and the analysis

48
00:02:07,020 --> 00:02:09,060
looked similar but nobody could really

49
00:02:09,060 --> 00:02:11,129
point out what the jury was the main

50
00:02:11,129 --> 00:02:14,130
common thing and the second point is

51
00:02:14,130 --> 00:02:16,350
that the original work of Connie

52
00:02:16,350 --> 00:02:18,540
and some other works are very hard to

53
00:02:18,540 --> 00:02:19,890
understand they're like super

54
00:02:19,890 --> 00:02:23,040
complicated our first main contribution

55
00:02:23,040 --> 00:02:25,380
is a framework that shows that all of

56
00:02:25,380 --> 00:02:27,900
these constructions basically follow the

57
00:02:27,900 --> 00:02:31,050
same framework they have the same

58
00:02:31,050 --> 00:02:35,010
pattern in the proof and we recover all

59
00:02:35,010 --> 00:02:36,450
the results from multiple all these

60
00:02:36,450 --> 00:02:39,960
previous works using our framework our

61
00:02:39,960 --> 00:02:42,210
framework is quite modular it's

62
00:02:42,210 --> 00:02:44,040
basically it takes a problem and it

63
00:02:44,040 --> 00:02:46,410
reduces it to some combinatorial problem

64
00:02:46,410 --> 00:02:50,070
about babbling of graphs and there's a

65
00:02:50,070 --> 00:02:52,530
bonus we also get a new result for the

66
00:02:52,530 --> 00:02:54,480
adaptive security of Yahoo's secret

67
00:02:54,480 --> 00:02:57,660
sharing scheme which I'll talk next in

68
00:02:57,660 --> 00:03:02,450
this talk so these are our results I

69
00:03:02,450 --> 00:03:04,890
would like to spend a couple of slides

70
00:03:04,890 --> 00:03:08,910
about the framework so there is a very

71
00:03:08,910 --> 00:03:11,790
classical way or a very trivial way to

72
00:03:11,790 --> 00:03:14,250
take a selectively secure protocol and

73
00:03:14,250 --> 00:03:17,210
make it adaptable secure and it's called

74
00:03:17,210 --> 00:03:19,500
commits computer a combination of the

75
00:03:19,500 --> 00:03:22,290
hybrid argument and guessing so here's

76
00:03:22,290 --> 00:03:23,070
how it works

77
00:03:23,070 --> 00:03:26,760
think of two games G left and G right G

78
00:03:26,760 --> 00:03:28,830
L and G Raju are there are adaptive

79
00:03:28,830 --> 00:03:31,490
games so keep in mind the adaptive VI

80
00:03:31,490 --> 00:03:34,160
adaptively all garbling as an example

81
00:03:34,160 --> 00:03:36,270
and want to prove that they're

82
00:03:36,270 --> 00:03:38,730
indistinguishable so what we usually do

83
00:03:38,730 --> 00:03:41,730
we just selectively ice them we just

84
00:03:41,730 --> 00:03:44,250
guess the adaptive choice choices of the

85
00:03:44,250 --> 00:03:45,720
adversary ahead of time

86
00:03:45,720 --> 00:03:48,720
define selective games H left a knight

87
00:03:48,720 --> 00:03:51,540
right and now we just apply the

88
00:03:51,540 --> 00:03:53,900
selective proof security which usually

89
00:03:53,900 --> 00:03:56,490
consists of a sequence of hybrids H 1

90
00:03:56,490 --> 00:04:00,300
till HL now the result is that the

91
00:04:00,300 --> 00:04:02,310
original adaptive games are

92
00:04:02,310 --> 00:04:04,890
indistinguishable but the security loss

93
00:04:04,890 --> 00:04:08,250
is huge it's 2 to the N for guessing the

94
00:04:08,250 --> 00:04:11,010
choices of the adversary and there's a

95
00:04:11,010 --> 00:04:12,450
factor of L which is the number of

96
00:04:12,450 --> 00:04:13,950
hybrids we have in the Selective proof

97
00:04:13,950 --> 00:04:15,660
security and this is of course something

98
00:04:15,660 --> 00:04:17,670
not very good that we would like to

99
00:04:17,670 --> 00:04:21,810
avoid the main idea in our framework can

100
00:04:21,810 --> 00:04:24,240
be said in one sentence it's very simple

101
00:04:24,240 --> 00:04:27,450
to say it's basically saying devise a

102
00:04:27,450 --> 00:04:30,270
new sequence of hybrids not the original

103
00:04:30,270 --> 00:04:32,850
ones from the selective security but a

104
00:04:32,850 --> 00:04:35,580
new one and make sure that in order to

105
00:04:35,580 --> 00:04:38,040
move from each hybrid to the following

106
00:04:38,040 --> 00:04:40,830
one you don't need to know the whole set

107
00:04:40,830 --> 00:04:42,660
of choices of the adversary but only

108
00:04:42,660 --> 00:04:45,090
some small fraction of it some H of the

109
00:04:45,090 --> 00:04:48,450
choice of the adversary to my own small

110
00:04:48,450 --> 00:04:50,040
comments that are important you can

111
00:04:50,040 --> 00:04:52,350
choose a different age at any C to

112
00:04:52,350 --> 00:04:55,440
follow two consecutive hybrids so that

113
00:04:55,440 --> 00:04:57,630
allows you to have much more flexibility

114
00:04:57,630 --> 00:05:00,419
and overall overall you might need to

115
00:05:00,419 --> 00:05:02,550
know the whole choice of the nursery but

116
00:05:02,550 --> 00:05:04,530
at any specific point you will need to

117
00:05:04,530 --> 00:05:07,680
know only few bits as an example think

118
00:05:07,680 --> 00:05:10,919
of again that garbling adaptive Yahoo

119
00:05:10,919 --> 00:05:13,650
garbling so if we had a sequence of

120
00:05:13,650 --> 00:05:15,960
reductions in which we could only know

121
00:05:15,960 --> 00:05:18,450
in every two consecutive hybrids only a

122
00:05:18,450 --> 00:05:22,110
few wires not the whole input then we

123
00:05:22,110 --> 00:05:23,460
would be able to devise a much more

124
00:05:23,460 --> 00:05:27,390
efficient reduction so here's a glimpse

125
00:05:27,390 --> 00:05:30,090
of the formalization of our framework so

126
00:05:30,090 --> 00:05:32,550
again we have the adaptive games G left

127
00:05:32,550 --> 00:05:35,430
and G right and we have a hybrid the

128
00:05:35,430 --> 00:05:38,790
selective hybrids h-12 HL but now the

129
00:05:38,790 --> 00:05:40,620
selective hybrids have an additional

130
00:05:40,620 --> 00:05:42,479
property not only there are the

131
00:05:42,479 --> 00:05:44,550
selective iced versions of the adaptive

132
00:05:44,550 --> 00:05:47,460
games but there are as but each to

133
00:05:47,460 --> 00:05:49,919
selective hybrids are the selective iced

134
00:05:49,919 --> 00:05:53,100
versions of something we call les select

135
00:05:53,100 --> 00:05:55,979
advised games that I symbolized by H hat

136
00:05:55,979 --> 00:05:59,550
and the property this less selective

137
00:05:59,550 --> 00:06:02,460
iced games have is that in order to move

138
00:06:02,460 --> 00:06:04,979
from one to the consecutive one you need

139
00:06:04,979 --> 00:06:07,919
to know fewer bits about the choices of

140
00:06:07,919 --> 00:06:10,830
the adversary so that's the

141
00:06:10,830 --> 00:06:12,690
formalization you can have a different

142
00:06:12,690 --> 00:06:16,440
pair for each two consecutive hybrids if

143
00:06:16,440 --> 00:06:18,450
you have this property then you can get

144
00:06:18,450 --> 00:06:20,370
a security reduction in which the loss

145
00:06:20,370 --> 00:06:23,310
is two to the M times L rather than two

146
00:06:23,310 --> 00:06:26,250
to the N times ed and if M the number of

147
00:06:26,250 --> 00:06:27,870
bits you have to know in every two

148
00:06:27,870 --> 00:06:31,020
hybrids is much smaller than n we win we

149
00:06:31,020 --> 00:06:33,630
get a much more efficient reduction so

150
00:06:33,630 --> 00:06:35,010
this is the main idea of the framework

151
00:06:35,010 --> 00:06:36,860
and I'm going to show how it applies to

152
00:06:36,860 --> 00:06:38,550
secretary the news

153
00:06:38,550 --> 00:06:41,060
in the paper so what is the clustering

154
00:06:41,060 --> 00:06:45,110
secret sharing is a very simple game

155
00:06:45,110 --> 00:06:48,060
introduced in the late in the early in

156
00:06:48,060 --> 00:06:50,400
the late 70s by Blakely and Shamir and

157
00:06:50,400 --> 00:06:52,590
the game is described as follows there's

158
00:06:52,590 --> 00:06:54,210
a dealer that has a secret think of the

159
00:06:54,210 --> 00:06:56,160
bit of the secret is a single bit just

160
00:06:56,160 --> 00:06:58,710
the raw one he wants to distribute it

161
00:06:58,710 --> 00:07:02,240
among end players such that there are

162
00:07:02,240 --> 00:07:04,620
qualified sets and there are unqualified

163
00:07:04,620 --> 00:07:07,350
sets the qualified ones should know the

164
00:07:07,350 --> 00:07:09,030
secret and the unqualified ones should

165
00:07:09,030 --> 00:07:12,780
not know the secret so it's just a we

166
00:07:12,780 --> 00:07:15,120
just take the whole set of any inputs

167
00:07:15,120 --> 00:07:17,520
and we split them into two sets one of

168
00:07:17,520 --> 00:07:19,740
which is good inputs and one of them is

169
00:07:19,740 --> 00:07:22,410
it means bad ones and the goal is that

170
00:07:22,410 --> 00:07:25,200
the subsets that all qualified will be

171
00:07:25,200 --> 00:07:26,850
able to recover the secrets while

172
00:07:26,850 --> 00:07:29,250
subsets that are unqualified will not be

173
00:07:29,250 --> 00:07:32,750
able to recover it and cannot can be

174
00:07:32,750 --> 00:07:35,100
formalized in various ways either

175
00:07:35,100 --> 00:07:36,420
information theoretically all

176
00:07:36,420 --> 00:07:39,810
computationally and we know a bunch of

177
00:07:39,810 --> 00:07:41,340
stuff so on each one of them and I'll

178
00:07:41,340 --> 00:07:43,350
talk about in the next slide but now I

179
00:07:43,350 --> 00:07:44,370
want to talk about the security

180
00:07:44,370 --> 00:07:47,820
definition so in the Selective security

181
00:07:47,820 --> 00:07:50,670
definition that the dealer has a secret

182
00:07:50,670 --> 00:07:53,610
it generates a bunch of shares by one

183
00:07:53,610 --> 00:07:56,610
two pi N and that versary commits to his

184
00:07:56,610 --> 00:07:59,100
whole set of parties that he wants to

185
00:07:59,100 --> 00:08:01,140
see their shares I want till I K and

186
00:08:01,140 --> 00:08:03,150
sends them to the dealer the dealer

187
00:08:03,150 --> 00:08:05,550
replies with the set of the set of

188
00:08:05,550 --> 00:08:07,350
shares of the corresponding parties and

189
00:08:07,350 --> 00:08:10,860
then the dresser has to say what what he

190
00:08:10,860 --> 00:08:12,840
his get was his guest for the secret

191
00:08:12,840 --> 00:08:15,150
either a zero or one he wins if he

192
00:08:15,150 --> 00:08:18,420
succeeds in his guess in the adaptive

193
00:08:18,420 --> 00:08:20,730
game the dealer does the same thing he

194
00:08:20,730 --> 00:08:23,700
chooses a secret s at random generates a

195
00:08:23,700 --> 00:08:26,190
set of shares but now that versary

196
00:08:26,190 --> 00:08:28,950
only sends one index out of n to the

197
00:08:28,950 --> 00:08:31,710
dealer and gets back the share of that

198
00:08:31,710 --> 00:08:34,710
dealer of death party and he can do it

199
00:08:34,710 --> 00:08:36,960
multiple times so he can choose the

200
00:08:36,960 --> 00:08:39,750
share of the next party based on the

201
00:08:39,750 --> 00:08:42,929
shares that has seen so far and again

202
00:08:42,929 --> 00:08:46,110
when he decides to finish he choose he

203
00:08:46,110 --> 00:08:49,080
sends the his what he thinks the secret

204
00:08:49,080 --> 00:08:51,390
is and he wins if he

205
00:08:51,390 --> 00:08:55,230
yes correct we say that a scheme is

206
00:08:55,230 --> 00:08:55,860
secure

207
00:08:55,860 --> 00:08:58,590
in either case if the probability the

208
00:08:58,590 --> 00:09:01,050
adversary wins and he chose only and

209
00:09:01,050 --> 00:09:04,590
unqualified set is at most 1/2 plus

210
00:09:04,590 --> 00:09:08,970
something agreeable okay so what do we

211
00:09:08,970 --> 00:09:12,330
know about this notion there's a long

212
00:09:12,330 --> 00:09:14,010
line of works about information

213
00:09:14,010 --> 00:09:15,480
theoretic constructions that achieve

214
00:09:15,480 --> 00:09:18,720
perfect security there's and they're all

215
00:09:18,720 --> 00:09:21,660
perfect but we will focus about the

216
00:09:21,660 --> 00:09:24,300
computational ones in computational

217
00:09:24,300 --> 00:09:26,490
setting we have two main schemes the

218
00:09:26,490 --> 00:09:29,040
first one is the scheme of Yahoo that

219
00:09:29,040 --> 00:09:31,350
I'll talk about more in the rest of this

220
00:09:31,350 --> 00:09:34,380
talk it basically allows us to share a

221
00:09:34,380 --> 00:09:37,650
secret to a set which is described by a

222
00:09:37,650 --> 00:09:40,470
monotone boolean circuit so there is a

223
00:09:40,470 --> 00:09:41,910
book mount on boolean circuit which is

224
00:09:41,910 --> 00:09:44,460
public that tells you who are the

225
00:09:44,460 --> 00:09:45,900
qualified sets and who are the

226
00:09:45,900 --> 00:09:49,020
disqualified Seth there is also another

227
00:09:49,020 --> 00:09:51,210
construction that allows us to share a

228
00:09:51,210 --> 00:09:53,880
secret to every access structure not

229
00:09:53,880 --> 00:09:56,040
only to ones that are described by a

230
00:09:56,040 --> 00:10:01,440
mount on boolean circuits and what we

231
00:10:01,440 --> 00:10:02,820
currently know is that both of these

232
00:10:02,820 --> 00:10:05,340
schemes are only selectively secure we

233
00:10:05,340 --> 00:10:06,960
have no result about their adaptive

234
00:10:06,960 --> 00:10:10,650
security of course you can do what I

235
00:10:10,650 --> 00:10:12,630
said in the beginning hybrid argument in

236
00:10:12,630 --> 00:10:14,910
guessing but lose two to the N factor in

237
00:10:14,910 --> 00:10:16,350
security which is something we would

238
00:10:16,350 --> 00:10:19,950
like to avoid so our result is the

239
00:10:19,950 --> 00:10:22,680
following a based on the access

240
00:10:22,680 --> 00:10:25,980
structure it is described on the on by a

241
00:10:25,980 --> 00:10:28,110
monotone circuit that has various

242
00:10:28,110 --> 00:10:30,960
parameters but basically our result says

243
00:10:30,960 --> 00:10:33,120
that if you are given if the access

244
00:10:33,120 --> 00:10:34,920
structure is described by a monotone

245
00:10:34,920 --> 00:10:38,820
circuit of size s and depth D then there

246
00:10:38,820 --> 00:10:41,190
is a secret then a secret sharing scheme

247
00:10:41,190 --> 00:10:44,100
is adaptively secure and the loss is

248
00:10:44,100 --> 00:10:46,790
only s to the D and not to to the M

249
00:10:46,790 --> 00:10:49,440
which is much better in several cases

250
00:10:49,440 --> 00:10:53,970
one notable example is an access

251
00:10:53,970 --> 00:10:55,650
structure called directly desta

252
00:10:55,650 --> 00:10:58,290
connectivity it's an access structure in

253
00:10:58,290 --> 00:11:01,700
which parties are edges in a graph and

254
00:11:01,700 --> 00:11:04,010
the qualified sets are

255
00:11:04,010 --> 00:11:06,250
that forum a directed path from some

256
00:11:06,250 --> 00:11:08,420
specified vertex s to some specified

257
00:11:08,420 --> 00:11:12,230
vertex T before this work we didn't have

258
00:11:12,230 --> 00:11:14,270
any adaptively secure construction for

259
00:11:14,270 --> 00:11:16,160
this access structure in which the

260
00:11:16,160 --> 00:11:18,340
security loss is less than 2 to the n

261
00:11:18,340 --> 00:11:21,500
with our result it's only the security

262
00:11:21,500 --> 00:11:23,540
loss is only quasi-polynomial it's only

263
00:11:23,540 --> 00:11:26,680
2 to the poly log

264
00:11:26,710 --> 00:11:30,020
ok so I'll continue with the description

265
00:11:30,020 --> 00:11:32,120
of our scheme and then I'll show our

266
00:11:32,120 --> 00:11:35,890
analysis so your scheme works as follows

267
00:11:35,890 --> 00:11:38,810
you give me the boolean circuit which

268
00:11:38,810 --> 00:11:41,390
describes the access structure and I am

269
00:11:41,390 --> 00:11:43,970
going to label each wire in the circuit

270
00:11:43,970 --> 00:11:48,050
with some label the labels of the of the

271
00:11:48,050 --> 00:11:50,510
input wires are going to be the shares

272
00:11:50,510 --> 00:11:53,180
of the parties so we start by labeling

273
00:11:53,180 --> 00:11:57,350
the output wire with the secret and then

274
00:11:57,350 --> 00:12:00,680
we see either an or gate or an end gate

275
00:12:00,680 --> 00:12:03,920
they might have multiple like fan a fan

276
00:12:03,920 --> 00:12:05,780
out larger than 1 and Fannie now

277
00:12:05,780 --> 00:12:07,760
gentlemen let's assume it's just two

278
00:12:07,760 --> 00:12:11,000
bottle number just two so let's say we

279
00:12:11,000 --> 00:12:14,450
see an end gate in which the output

280
00:12:14,450 --> 00:12:17,060
wires are labeled with labeled with l1

281
00:12:17,060 --> 00:12:19,310
and l2 or an or gate with the same

282
00:12:19,310 --> 00:12:22,340
labels so the first thing we do we

283
00:12:22,340 --> 00:12:24,530
sample a fresh encryption key for a

284
00:12:24,530 --> 00:12:28,540
symmetric encryption anyone and we

285
00:12:28,540 --> 00:12:30,620
associate this encryption key with the

286
00:12:30,620 --> 00:12:35,540
gate now if it's an end gate we label

287
00:12:35,540 --> 00:12:37,900
the left input wire with the random

288
00:12:37,900 --> 00:12:41,210
label and the right input wire with

289
00:12:41,210 --> 00:12:44,060
round with cake sort with this random

290
00:12:44,060 --> 00:12:46,790
label so we just one-time pad this key

291
00:12:46,790 --> 00:12:50,090
if it's an or gate we just duplicate it

292
00:12:50,090 --> 00:12:53,770
to both input wires this is the scheme

293
00:12:53,770 --> 00:12:57,560
last thing we do we publish we publish

294
00:12:57,560 --> 00:12:59,870
on some board or just give each party

295
00:12:59,870 --> 00:13:03,170
the encryption of the label l1 and l2

296
00:13:03,170 --> 00:13:07,070
with respect to the key K we do this in

297
00:13:07,070 --> 00:13:09,790
both cases so that's the scheme a

298
00:13:09,790 --> 00:13:12,560
correctness is quite easy to see by just

299
00:13:12,560 --> 00:13:14,660
reversing the process going from the

300
00:13:14,660 --> 00:13:15,459
leaves

301
00:13:15,459 --> 00:13:18,490
to the to the input wire to the output

302
00:13:18,490 --> 00:13:22,119
wire of the circuit and let me talk

303
00:13:22,119 --> 00:13:25,749
about security so in the security proof

304
00:13:25,749 --> 00:13:29,589
of this scheme a the Selective proof of

305
00:13:29,589 --> 00:13:31,059
security which is the classical proof of

306
00:13:31,059 --> 00:13:33,519
security we do a sequence of hybrids

307
00:13:33,519 --> 00:13:36,369
what is the sequence of hybrids what

308
00:13:36,369 --> 00:13:38,259
we're doing is we're replacing the

309
00:13:38,259 --> 00:13:40,689
encryptions that everybody see the

310
00:13:40,689 --> 00:13:43,480
ciphertext we replace them with bogus

311
00:13:43,480 --> 00:13:45,339
ones so instead of encrypting real

312
00:13:45,339 --> 00:13:48,519
labels we are encrypting random stuff or

313
00:13:48,519 --> 00:13:53,679
junk but we can do it for every gate

314
00:13:53,679 --> 00:13:55,689
right because some gates that versary

315
00:13:55,689 --> 00:13:58,629
can know the encryption key and can open

316
00:13:58,629 --> 00:14:00,879
the encryption so we do it only for the

317
00:14:00,879 --> 00:14:03,129
gates for which the for which the

318
00:14:03,129 --> 00:14:04,809
adversary doesn't have the encryption

319
00:14:04,809 --> 00:14:09,579
key but how do we know which ones so we

320
00:14:09,579 --> 00:14:11,290
know because this is where we use the

321
00:14:11,290 --> 00:14:13,600
selective security we know the set of

322
00:14:13,600 --> 00:14:15,670
parties that were sir we opens their

323
00:14:15,670 --> 00:14:18,610
shares ahead of time so we know exactly

324
00:14:18,610 --> 00:14:20,799
which gates that were sir can compute

325
00:14:20,799 --> 00:14:22,720
their key in which the gates who cannot

326
00:14:22,720 --> 00:14:24,970
compute their key and there must be a

327
00:14:24,970 --> 00:14:28,269
path from the input wires to the output

328
00:14:28,269 --> 00:14:29,980
wire in which we can replace all

329
00:14:29,980 --> 00:14:32,619
ciphertext with bogus ones and thus

330
00:14:32,619 --> 00:14:34,720
replacing the output wire with their

331
00:14:34,720 --> 00:14:36,699
bogus one which makes the whole thing

332
00:14:36,699 --> 00:14:39,009
independent of the secret so the skin

333
00:14:39,009 --> 00:14:41,740
becomes secure so this is the high-level

334
00:14:41,740 --> 00:14:44,829
idea of the proof and notice that it

335
00:14:44,829 --> 00:14:47,319
seems in this in this approach using

336
00:14:47,319 --> 00:14:49,629
this approach it seems inherent to know

337
00:14:49,629 --> 00:14:51,970
ahead of time the set of parties that

338
00:14:51,970 --> 00:14:54,040
were sir is going to choose just to know

339
00:14:54,040 --> 00:14:57,249
the path of of gates that we can replace

340
00:14:57,249 --> 00:15:02,889
with bogus ones so what we do we devise

341
00:15:02,889 --> 00:15:07,209
a new sequence of hybrids that that

342
00:15:07,209 --> 00:15:09,579
allow us to use our framework so here's

343
00:15:09,579 --> 00:15:13,059
our sequence of hybrids each hybrid h i

344
00:15:13,059 --> 00:15:15,579
will correspond to a peddling

345
00:15:15,579 --> 00:15:18,670
configuration of the graph meaning that

346
00:15:18,670 --> 00:15:21,610
on every we think of it as as if on

347
00:15:21,610 --> 00:15:24,459
every gate in this circuit we either put

348
00:15:24,459 --> 00:15:25,550
a pebble or

349
00:15:25,550 --> 00:15:27,290
with the pebbles so all gates are either

350
00:15:27,290 --> 00:15:30,080
pebbled or not pebbled gates will

351
00:15:30,080 --> 00:15:33,080
correspond to circuits that have bogus

352
00:15:33,080 --> 00:15:35,360
ciphertext bogus associated ciphertext

353
00:15:35,360 --> 00:15:38,270
and gates without the pebble will

354
00:15:38,270 --> 00:15:42,260
correspond to gates with with the real

355
00:15:42,260 --> 00:15:45,110
ciphertext and our goal will be to start

356
00:15:45,110 --> 00:15:47,600
with the game in which there are no

357
00:15:47,600 --> 00:15:49,760
pebbles so all the cipher texts are

358
00:15:49,760 --> 00:15:52,850
honest and divides the sequence of

359
00:15:52,850 --> 00:15:55,580
hybrids in which in the last Hybrid

360
00:15:55,580 --> 00:15:57,710
there is a single pebble on the output

361
00:15:57,710 --> 00:16:00,230
gate and what it means is that the

362
00:16:00,230 --> 00:16:01,700
ciphertext that corresponds to the

363
00:16:01,700 --> 00:16:04,730
secret will be a bogus one and therefore

364
00:16:04,730 --> 00:16:09,170
the secret is hidden ok so this is the

365
00:16:09,170 --> 00:16:12,430
high level of our high level approach a

366
00:16:12,430 --> 00:16:15,740
let me tell you before showing the

367
00:16:15,740 --> 00:16:17,600
sequence of hybrids how we go from a

368
00:16:17,600 --> 00:16:19,730
hybrid in which there is some set of

369
00:16:19,730 --> 00:16:21,830
pebbles to a hybrid in which we have a

370
00:16:21,830 --> 00:16:25,100
different set of pebbles so this is for

371
00:16:25,100 --> 00:16:26,750
this we use something we call babbling

372
00:16:26,750 --> 00:16:29,990
rules we define - babbling rules that we

373
00:16:29,990 --> 00:16:32,960
allow to make in order to move from

374
00:16:32,960 --> 00:16:36,260
hybrid a chai to a hybrid H I plus 1 the

375
00:16:36,260 --> 00:16:39,320
first rule that we allow is if you have

376
00:16:39,320 --> 00:16:42,890
an end gate in which one of its inputs

377
00:16:42,890 --> 00:16:45,740
is pebbled meaning its corresponding

378
00:16:45,740 --> 00:16:47,960
ciphertext its bogus then you can also

379
00:16:47,960 --> 00:16:51,320
pebble that delegate and you can reverse

380
00:16:51,320 --> 00:16:54,830
it by unpacking it and if you have an or

381
00:16:54,830 --> 00:16:58,400
gate in which both children are pebbled

382
00:16:58,400 --> 00:17:01,580
you can also pebble that one or reverse

383
00:17:01,580 --> 00:17:04,760
it and the idea yhi is indistinguishable

384
00:17:04,760 --> 00:17:08,420
from h I plus 1 is just because just due

385
00:17:08,420 --> 00:17:09,709
to the semantic security of the

386
00:17:09,709 --> 00:17:14,990
encryption so our main idea would be to

387
00:17:14,990 --> 00:17:18,970
find the sequence of hybrids a in which

388
00:17:18,970 --> 00:17:21,829
in every two consecutive hybrids we

389
00:17:21,829 --> 00:17:25,040
apply one of our pedaling rules and in

390
00:17:25,040 --> 00:17:27,650
addition the the number or the

391
00:17:27,650 --> 00:17:29,980
description of the pebble

392
00:17:29,980 --> 00:17:32,200
or the peplum configuration would be

393
00:17:32,200 --> 00:17:34,299
very short and this is what we are going

394
00:17:34,299 --> 00:17:38,799
to guess in our hybrid argument so our

395
00:17:38,799 --> 00:17:41,830
goal now is to find a pedaling strategy

396
00:17:41,830 --> 00:17:45,309
for boolean circuits with not so many

397
00:17:45,309 --> 00:17:49,240
pebbles at any point in time and in

398
00:17:49,240 --> 00:17:51,880
which the number of of hybrids or

399
00:17:51,880 --> 00:17:55,030
babbling configurations is not so big so

400
00:17:55,030 --> 00:17:58,660
this is the goal and our result is a

401
00:17:58,660 --> 00:18:02,049
babbling strategy that requires 2 to the

402
00:18:02,049 --> 00:18:06,549
D moves or babbling steps and in every

403
00:18:06,549 --> 00:18:08,380
step every pebble in configuration

404
00:18:08,380 --> 00:18:11,230
requires only D times log as bits and

405
00:18:11,230 --> 00:18:14,049
here is where our loss as to the D comes

406
00:18:14,049 --> 00:18:18,400
from by by just guessing the description

407
00:18:18,400 --> 00:18:20,140
of the babbling configuration in each

408
00:18:20,140 --> 00:18:23,679
two consecutive steps so the

409
00:18:23,679 --> 00:18:25,960
configuration will consist of two things

410
00:18:25,960 --> 00:18:29,520
it will consist of a sequence of pairs a

411
00:18:29,520 --> 00:18:35,290
of the form a label a label of gate like

412
00:18:35,290 --> 00:18:38,679
a name of a gate and a bit this bit will

413
00:18:38,679 --> 00:18:41,500
just represent either whether the only

414
00:18:41,500 --> 00:18:44,410
the left only the left subtree is

415
00:18:44,410 --> 00:18:46,630
pebbled or the right subtrees beveled or

416
00:18:46,630 --> 00:18:50,320
both of them so if none of the input

417
00:18:50,320 --> 00:18:53,620
wires of a gate is pebbled we will just

418
00:18:53,620 --> 00:18:55,870
not write it if only the left one is

419
00:18:55,870 --> 00:18:58,210
pebbled we will write a zero in the bit

420
00:18:58,210 --> 00:19:00,640
if the both of them are pebbled we will

421
00:19:00,640 --> 00:19:03,070
write a one corresponding to the gate

422
00:19:03,070 --> 00:19:06,460
name and we'll have another bit just for

423
00:19:06,460 --> 00:19:09,610
the just to specify if the route gate is

424
00:19:09,610 --> 00:19:11,620
pebbled or not so this is the

425
00:19:11,620 --> 00:19:14,650
configuration and let's see how we how

426
00:19:14,650 --> 00:19:17,230
we pebbel a circuit so that's what we

427
00:19:17,230 --> 00:19:19,630
are left to wait to do so think that you

428
00:19:19,630 --> 00:19:21,160
have the following circuit there is an

429
00:19:21,160 --> 00:19:23,020
or gate and for example it has two

430
00:19:23,020 --> 00:19:26,230
inputs which are by themselves or gates

431
00:19:26,230 --> 00:19:29,169
and there is a big sub-tree underneath

432
00:19:29,169 --> 00:19:31,840
each of them so we're doing going to do

433
00:19:31,840 --> 00:19:36,669
to recursively a pebble this circuit so

434
00:19:36,669 --> 00:19:39,429
first we pebble the left subtree of this

435
00:19:39,429 --> 00:19:42,950
circuit recursively we put a pebble

436
00:19:42,950 --> 00:19:46,609
we add the we add the pair root Gate

437
00:19:46,609 --> 00:19:48,499
comma zero to the configuration to

438
00:19:48,499 --> 00:19:51,109
symbolize that the left subtree of the

439
00:19:51,109 --> 00:19:54,739
root gate is pebbled then the next step

440
00:19:54,739 --> 00:19:57,379
is to pebble the right subtree and to

441
00:19:57,379 --> 00:19:59,720
update the configuration to contain the

442
00:19:59,720 --> 00:20:02,210
pair that the root Gate comma wine

443
00:20:02,210 --> 00:20:04,460
meaning that both of its children are

444
00:20:04,460 --> 00:20:08,059
pebbled at this point we can wecan

445
00:20:08,059 --> 00:20:09,679
pebble the route gate which is an or

446
00:20:09,679 --> 00:20:11,929
gate so we need both of his children to

447
00:20:11,929 --> 00:20:12,590
be pebbles

448
00:20:12,590 --> 00:20:15,169
so we pebble the route gate and update

449
00:20:15,169 --> 00:20:16,669
the bit corresponding to the road gate

450
00:20:16,669 --> 00:20:19,609
in the configuration and now we reverse

451
00:20:19,609 --> 00:20:22,970
this process by unpublish the right

452
00:20:22,970 --> 00:20:25,850
child updating the configuration and nun

453
00:20:25,850 --> 00:20:27,859
babbling the left child and updating the

454
00:20:27,859 --> 00:20:30,139
configuration and now we're in the

455
00:20:30,139 --> 00:20:32,149
situation we wanted to get to we wanted

456
00:20:32,149 --> 00:20:34,309
that there is only one pebble in the

457
00:20:34,309 --> 00:20:37,460
tree and in the integrand it's on the

458
00:20:37,460 --> 00:20:40,639
route gate so this is what we wanted if

459
00:20:40,639 --> 00:20:43,369
you followed me then what you can show

460
00:20:43,369 --> 00:20:48,350
is that the number of babbling rules has

461
00:20:48,350 --> 00:20:52,460
a recursive equation which is for if you

462
00:20:52,460 --> 00:20:54,739
want to pebble a tree or a circuit of

463
00:20:54,739 --> 00:20:58,369
depth D you need four times whatever you

464
00:20:58,369 --> 00:21:01,970
needed to do with a circuit of depth D

465
00:21:01,970 --> 00:21:04,429
minus one the four comes from the fact

466
00:21:04,429 --> 00:21:06,019
that you need two pebble the left child

467
00:21:06,019 --> 00:21:07,519
and then the right child and then to

468
00:21:07,519 --> 00:21:09,529
reverse everything so that's the four

469
00:21:09,529 --> 00:21:13,450
and the size of the configuration is

470
00:21:13,450 --> 00:21:15,799
just the size of a configuration in the

471
00:21:15,799 --> 00:21:19,399
subtree plus the description size of the

472
00:21:19,399 --> 00:21:21,109
name of the root gate which is log s

473
00:21:21,109 --> 00:21:23,960
bits plus two more bits which are a

474
00:21:23,960 --> 00:21:26,840
minor just this is the bit to specify

475
00:21:26,840 --> 00:21:29,619
whether the root is a pebble or not a

476
00:21:29,619 --> 00:21:32,960
and that's it that basically gives us

477
00:21:32,960 --> 00:21:34,970
whatever we wanted if you solve this

478
00:21:34,970 --> 00:21:37,820
recursion you recover what is written in

479
00:21:37,820 --> 00:21:43,759
the top so I'll conclude what we have is

480
00:21:43,759 --> 00:21:45,320
a framework what I showed you is a

481
00:21:45,320 --> 00:21:46,700
framework a general framework for

482
00:21:46,700 --> 00:21:49,489
proving adaptive security of various

483
00:21:49,489 --> 00:21:51,980
protocols using our framework we

484
00:21:51,980 --> 00:21:54,440
recovered many previous works and

485
00:21:54,440 --> 00:21:55,580
simplify the

486
00:21:55,580 --> 00:21:59,380
proof by in some of them significantly

487
00:21:59,380 --> 00:22:01,760
we have a new result for secret sharing

488
00:22:01,760 --> 00:22:03,950
that I described to you there's a

489
00:22:03,950 --> 00:22:06,290
related framework in a work of finance

490
00:22:06,290 --> 00:22:08,360
total from last year's TCC in the

491
00:22:08,360 --> 00:22:11,210
context of adaptive run delegation which

492
00:22:11,210 --> 00:22:13,220
leads me to the following question of

493
00:22:13,220 --> 00:22:15,740
whether we can find more applications or

494
00:22:15,740 --> 00:22:18,620
more works where that can be phrased in

495
00:22:18,620 --> 00:22:19,910
this framework it's really easy to

496
00:22:19,910 --> 00:22:23,300
define really easy to use of course it

497
00:22:23,300 --> 00:22:25,490
raises questions many questions about

498
00:22:25,490 --> 00:22:28,970
babbling babbling games peppering games

499
00:22:28,970 --> 00:22:30,860
and I think a very nice question is

500
00:22:30,860 --> 00:22:32,780
whether there is a relation in the

501
00:22:32,780 --> 00:22:35,660
opposite direction namely if we can

502
00:22:35,660 --> 00:22:38,120
prove a lower bound for peddling can you

503
00:22:38,120 --> 00:22:40,700
use it to devise the text on the

504
00:22:40,700 --> 00:22:42,350
adaptive security of various protocols

505
00:22:42,350 --> 00:22:46,870
that we're trying to prove and

506
00:22:47,400 --> 00:22:51,479
[Applause]

