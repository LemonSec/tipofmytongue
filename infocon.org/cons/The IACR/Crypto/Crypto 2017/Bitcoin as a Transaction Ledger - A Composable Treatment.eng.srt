1
00:00:05,090 --> 00:00:11,820
so but not a motors protocol initially I

2
00:00:11,820 --> 00:00:15,030
wanted to solve a kind of very concrete

3
00:00:15,030 --> 00:00:18,110
so the initial motivation was

4
00:00:18,110 --> 00:00:21,420
implementing well the accounting of

5
00:00:21,420 --> 00:00:25,470
money transaction so the initial problem

6
00:00:25,470 --> 00:00:27,390
was that Elise wants to transfer some

7
00:00:27,390 --> 00:00:30,660
money to Bob but yes somebody has to do

8
00:00:30,660 --> 00:00:33,269
the accounting right and if you don't

9
00:00:33,269 --> 00:00:37,739
want to trust a single entity then you

10
00:00:37,739 --> 00:00:40,769
have to implement such a lecture as it's

11
00:00:40,769 --> 00:00:44,040
called a linear distributed manner and

12
00:00:44,040 --> 00:00:45,900
nakamoto's protocol as we have seen us

13
00:00:45,900 --> 00:00:49,170
in the previous talk is one method to to

14
00:00:49,170 --> 00:00:52,019
to achieve this so the it's not

15
00:00:52,019 --> 00:00:54,690
surprising then that people started to

16
00:00:54,690 --> 00:00:56,250
think about what what is actually the

17
00:00:56,250 --> 00:00:59,339
service that bitcoin can export to to

18
00:00:59,339 --> 00:01:01,019
applications to to higher-level

19
00:01:01,019 --> 00:01:05,010
protocols and so actually what

20
00:01:05,010 --> 00:01:08,520
functionality does bitcoin achieve so if

21
00:01:08,520 --> 00:01:12,120
you want to specify this book here as as

22
00:01:12,120 --> 00:01:14,310
a functionality then what does it much

23
00:01:14,310 --> 00:01:17,610
how should look like so roughly so what

24
00:01:17,610 --> 00:01:19,860
what you can find in the literature is

25
00:01:19,860 --> 00:01:23,460
basically that well the basic structure

26
00:01:23,460 --> 00:01:25,260
of such a lecture functionality it's

27
00:01:25,260 --> 00:01:28,410
it's a chain of blocks and each block

28
00:01:28,410 --> 00:01:31,800
has some contents so as we have seen

29
00:01:31,800 --> 00:01:34,170
simple transactions so Alice transfers

30
00:01:34,170 --> 00:01:36,210
some money well in reality these are

31
00:01:36,210 --> 00:01:37,860
addresses so it's not really Alice it's

32
00:01:37,860 --> 00:01:41,430
Alice address source and destination but

33
00:01:41,430 --> 00:01:43,950
also could think about to have complex

34
00:01:43,950 --> 00:01:45,630
contracts in their so called smart

35
00:01:45,630 --> 00:01:48,210
contracts and everything is listed in

36
00:01:48,210 --> 00:01:51,420
these blocks right so what are the

37
00:01:51,420 --> 00:01:54,740
properties that you often hear about

38
00:01:54,740 --> 00:02:00,390
well the content is sorry the content is

39
00:02:00,390 --> 00:02:05,180
provided by anyone right that submits

40
00:02:05,180 --> 00:02:07,409
such a transaction or contract with

41
00:02:07,409 --> 00:02:10,378
sufficient fund right so Alice can

42
00:02:10,378 --> 00:02:12,780
decide well I transfer this money to Bob

43
00:02:12,780 --> 00:02:15,060
she can even say I have an entire

44
00:02:15,060 --> 00:02:17,220
contract that depends on

45
00:02:17,220 --> 00:02:19,680
on the time and even that Pope does this

46
00:02:19,680 --> 00:02:24,270
I do that and the second property that

47
00:02:24,270 --> 00:02:26,310
one is interested is that anyone can

48
00:02:26,310 --> 00:02:28,980
read this state so it's public you can

49
00:02:28,980 --> 00:02:30,840
just say what's the state of this legend

50
00:02:30,840 --> 00:02:32,820
you you can just see how much money a

51
00:02:32,820 --> 00:02:35,880
certain address has and probably the

52
00:02:35,880 --> 00:02:39,360
most interesting properties that even an

53
00:02:39,360 --> 00:02:42,570
adversary cannot modify what's already

54
00:02:42,570 --> 00:02:45,060
in there so it's immutable it's written

55
00:02:45,060 --> 00:02:47,070
in stone what's written in the letter

56
00:02:47,070 --> 00:02:54,690
and it's the third fourth property you

57
00:02:54,690 --> 00:02:56,850
want the letter such a ledge function

58
00:02:56,850 --> 00:02:58,640
I'd is typically connected to a clock

59
00:02:58,640 --> 00:03:03,660
due to reason about speed so how much

60
00:03:03,660 --> 00:03:07,610
blocks show up over time and this is

61
00:03:07,610 --> 00:03:09,780
typically found in in the literature

62
00:03:09,780 --> 00:03:14,760
such specification so why do do we want

63
00:03:14,760 --> 00:03:16,350
such a functionality

64
00:03:16,350 --> 00:03:20,550
well it's nice to to assume it such that

65
00:03:20,550 --> 00:03:22,530
you can design an application around it

66
00:03:22,530 --> 00:03:26,040
and then assume these ideal properties

67
00:03:26,040 --> 00:03:28,160
to conclude security of your application

68
00:03:28,160 --> 00:03:30,780
and it's also nice to have such

69
00:03:30,780 --> 00:03:32,280
functionality because you can work in a

70
00:03:32,280 --> 00:03:39,090
composable framework and get kind of

71
00:03:39,090 --> 00:03:40,770
assumed this as a hybrid functionality

72
00:03:40,770 --> 00:03:46,440
and and use it well let me just give one

73
00:03:46,440 --> 00:03:48,900
example so I will quickly go into these

74
00:03:48,900 --> 00:03:51,030
two points so for example one

75
00:03:51,030 --> 00:03:54,030
application that is actually very nice

76
00:03:54,030 --> 00:03:58,800
so briefly the idea now so imagine these

77
00:03:58,800 --> 00:04:00,930
people want to compute some embassy

78
00:04:00,930 --> 00:04:06,420
protocol so now what is the nice thing

79
00:04:06,420 --> 00:04:08,970
here so instead of sending the messages

80
00:04:08,970 --> 00:04:12,989
directly to each other now they submit

81
00:04:12,989 --> 00:04:14,910
something to the lecture functionality

82
00:04:14,910 --> 00:04:17,519
and what they submit this in each round

83
00:04:17,519 --> 00:04:20,310
of the synchronous protocol they submit

84
00:04:20,310 --> 00:04:24,630
their next protocol message but with

85
00:04:24,630 --> 00:04:28,510
attach refund and this

86
00:04:28,510 --> 00:04:30,670
this thing here so this as I told you

87
00:04:30,670 --> 00:04:32,020
before you can submit the entire

88
00:04:32,020 --> 00:04:34,720
contracts this contract says well if you

89
00:04:34,720 --> 00:04:38,620
behave nicely now you will get your

90
00:04:38,620 --> 00:04:43,180
money back in the next round so if this

91
00:04:43,180 --> 00:04:46,390
protocol message of your current round

92
00:04:46,390 --> 00:04:50,920
is correct and doesn t leads to an abort

93
00:04:50,920 --> 00:04:53,530
for example then you will receive your

94
00:04:53,530 --> 00:04:54,250
money back

95
00:04:54,250 --> 00:04:57,600
of course this requires some form of

96
00:04:57,600 --> 00:05:00,460
public identify ability for example NPCs

97
00:05:00,460 --> 00:05:02,920
identify the board this has been for

98
00:05:02,920 --> 00:05:06,340
example worked out in ER settle in the

99
00:05:06,340 --> 00:05:11,890
recent in a recent work and so dishonest

100
00:05:11,890 --> 00:05:13,690
behavior is kind of punishment honest

101
00:05:13,690 --> 00:05:15,250
behavior is encouraged

102
00:05:15,250 --> 00:05:18,370
so even worse for for if this protocol

103
00:05:18,370 --> 00:05:22,060
message that you submitted before led to

104
00:05:22,060 --> 00:05:24,610
an abort she will be identified and not

105
00:05:24,610 --> 00:05:28,030
receive a money but even worse for her

106
00:05:28,030 --> 00:05:30,850
and even better food on the skies they

107
00:05:30,850 --> 00:05:34,120
really receive and of her her her

108
00:05:34,120 --> 00:05:41,230
deposit this kind of favors honest

109
00:05:41,230 --> 00:05:45,010
behaved so let me quickly go into the

110
00:05:45,010 --> 00:05:47,350
the second point so why so we would like

111
00:05:47,350 --> 00:05:52,450
to have a functionality tool to use to

112
00:05:52,450 --> 00:05:54,970
follow this modular approach so we

113
00:05:54,970 --> 00:05:57,280
quickly discussed before this number two

114
00:05:57,280 --> 00:06:01,090
here namely that we assume electro

115
00:06:01,090 --> 00:06:04,830
functionality and create an application

116
00:06:04,830 --> 00:06:08,200
but we also need the first step so how

117
00:06:08,200 --> 00:06:10,080
do we get the latter functionality and

118
00:06:10,080 --> 00:06:12,520
they should rather be the same so what

119
00:06:12,520 --> 00:06:14,050
we assumed here should be one that way

120
00:06:14,050 --> 00:06:16,780
we can actually get for example from a

121
00:06:16,780 --> 00:06:19,360
random Oracle and a clock in the network

122
00:06:19,360 --> 00:06:22,090
and this is the problem which we

123
00:06:22,090 --> 00:06:24,310
addressed in this talk so they should be

124
00:06:24,310 --> 00:06:26,980
the same otherwise data mismatch and in

125
00:06:26,980 --> 00:06:29,590
real usage so what are too strong

126
00:06:29,590 --> 00:06:34,030
properties that appeared well an over

127
00:06:34,030 --> 00:06:37,090
idealization of bitcoin was for example

128
00:06:37,090 --> 00:06:40,420
that all submit the transaction would

129
00:06:40,420 --> 00:06:42,059
make it even explore

130
00:06:42,059 --> 00:06:44,830
that's in the case of an almighty

131
00:06:44,830 --> 00:06:49,409
adversary this cannot this cannot hold

132
00:06:49,409 --> 00:06:53,830
so the lecture state extent in fixed

133
00:06:53,830 --> 00:06:56,979
time intervals under the influence of

134
00:06:56,979 --> 00:06:59,939
net equities can also not really be

135
00:06:59,939 --> 00:07:03,429
third that everyone sees the same state

136
00:07:03,429 --> 00:07:06,969
as one would may be intuitively thing

137
00:07:06,969 --> 00:07:09,939
you can also not be guaranteed maybe

138
00:07:09,939 --> 00:07:13,059
they see a similar state but one sees

139
00:07:13,059 --> 00:07:15,429
maybe a prefix of the other but not

140
00:07:15,429 --> 00:07:19,599
everyone sees the same state and what we

141
00:07:19,599 --> 00:07:21,879
also have to consider is what is the the

142
00:07:21,879 --> 00:07:30,909
influence of an adversary we have to

143
00:07:30,909 --> 00:07:34,929
allow the adversary to influence the

144
00:07:34,929 --> 00:07:38,319
lecture and how it behaves more than for

145
00:07:38,319 --> 00:07:40,089
example just that you can create own

146
00:07:40,089 --> 00:07:44,289
transactions or permute the list of

147
00:07:44,289 --> 00:07:47,439
transactions so the road map for the

148
00:07:47,439 --> 00:07:51,149
rest of this talk is we would like to

149
00:07:51,149 --> 00:07:55,990
define electro functionality which is

150
00:07:55,990 --> 00:07:57,879
realizable by the Bitcoin backbone

151
00:07:57,879 --> 00:08:02,139
protocol the questions we have to

152
00:08:02,139 --> 00:08:05,379
consider so important questions are for

153
00:08:05,379 --> 00:08:08,919
example so which transactions are part

154
00:08:08,919 --> 00:08:12,459
of the next block or when is the next

155
00:08:12,459 --> 00:08:17,379
block inserted into the state which part

156
00:08:17,379 --> 00:08:19,659
of the state to honest party see and

157
00:08:19,659 --> 00:08:21,789
body statement adversary influence on

158
00:08:21,789 --> 00:08:25,029
the state itself these are the questions

159
00:08:25,029 --> 00:08:28,599
we will answer in the following so let's

160
00:08:28,599 --> 00:08:29,979
start now with the description of the

161
00:08:29,979 --> 00:08:31,809
lecture functionality that we define in

162
00:08:31,809 --> 00:08:35,589
the paper so first of all parties can

163
00:08:35,589 --> 00:08:39,039
input values well trying to think of

164
00:08:39,039 --> 00:08:43,328
transactions and they are they run

165
00:08:43,328 --> 00:08:45,759
through a so called validate predicate

166
00:08:45,759 --> 00:08:50,610
and are inserted into a buffer here

167
00:08:50,610 --> 00:08:52,809
validate is a lecture specific

168
00:08:52,809 --> 00:08:53,920
validation check

169
00:08:53,920 --> 00:08:58,060
think of the sally's have sufficient

170
00:08:58,060 --> 00:09:03,310
fund to transfer this money to ball so

171
00:09:03,310 --> 00:09:05,320
validate gets us input for example the

172
00:09:05,320 --> 00:09:10,150
state of the lecture the transaction and

173
00:09:10,150 --> 00:09:13,210
decides is this transaction valid if yes

174
00:09:13,210 --> 00:09:15,430
it goes into the buffer and stays there

175
00:09:15,430 --> 00:09:16,830
for a while

176
00:09:16,830 --> 00:09:20,650
so let's jump to a to the more

177
00:09:20,650 --> 00:09:25,390
interesting setting state updates so as

178
00:09:25,390 --> 00:09:27,880
I said before the lecture does not just

179
00:09:27,880 --> 00:09:32,230
press proceed by him by itself there has

180
00:09:32,230 --> 00:09:35,220
to be some influence that the adversary

181
00:09:35,220 --> 00:09:40,000
can have on on this update so how do we

182
00:09:40,000 --> 00:09:44,020
model that so there is Eve well she can

183
00:09:44,020 --> 00:09:46,510
propose the next block so this sounds

184
00:09:46,510 --> 00:09:49,630
now a bit too too much right so it's

185
00:09:49,630 --> 00:09:52,750
it's just a proposal and this proposal

186
00:09:52,750 --> 00:09:55,300
it's not this is not the next block that

187
00:09:55,300 --> 00:10:00,460
goes into the state it will be it will

188
00:10:00,460 --> 00:10:04,080
be around again for allege specific

189
00:10:04,080 --> 00:10:07,330
pride a procedure which we call extend

190
00:10:07,330 --> 00:10:10,570
policy so what is extend policy so this

191
00:10:10,570 --> 00:10:14,700
next block proposal is evaluated if it

192
00:10:14,700 --> 00:10:16,990
complies with the standards with the

193
00:10:16,990 --> 00:10:21,550
policy that the lecture defines so this

194
00:10:21,550 --> 00:10:24,880
is a lecture specific parameter and at

195
00:10:24,880 --> 00:10:26,260
the same time a compliance enforcing

196
00:10:26,260 --> 00:10:30,040
mechanism so this blueprint so to speak

197
00:10:30,040 --> 00:10:32,530
what you see here is a very channel

198
00:10:32,530 --> 00:10:34,930
class of lectures that you can now

199
00:10:34,930 --> 00:10:37,320
instantiate by giving concrete

200
00:10:37,320 --> 00:10:40,710
procedures for example easy invalidate

201
00:10:40,710 --> 00:10:47,290
for example in Bitcoin so let's so let's

202
00:10:47,290 --> 00:10:50,530
discuss Bitcoin so to recall the input

203
00:10:50,530 --> 00:10:52,690
to extend policy is the next block so

204
00:10:52,690 --> 00:10:54,940
the proposal of the adversary' the

205
00:10:54,940 --> 00:10:58,630
buffer at the time for example and it

206
00:10:58,630 --> 00:11:03,700
produces an X block the invariant of

207
00:11:03,700 --> 00:11:06,579
this extend policy procedure is

208
00:11:06,579 --> 00:11:09,819
that if the adversary complies with the

209
00:11:09,819 --> 00:11:12,629
standards of the policy of the ledge

210
00:11:12,629 --> 00:11:15,970
then this Netley its proposal is really

211
00:11:15,970 --> 00:11:17,499
the next block that goes into the state

212
00:11:17,499 --> 00:11:21,459
and if it doesn't comply with the policy

213
00:11:21,459 --> 00:11:24,369
of the lecture this exempt policy will

214
00:11:24,369 --> 00:11:26,230
enforce the default block go into the

215
00:11:26,230 --> 00:11:28,540
next state and this default block will

216
00:11:28,540 --> 00:11:32,889
of course be compliant with their of the

217
00:11:32,889 --> 00:11:36,819
policy so in Bitcoin this will remind

218
00:11:36,819 --> 00:11:39,819
you of of the channel of the properties

219
00:11:39,819 --> 00:11:43,600
that have appeared in the literature so

220
00:11:43,600 --> 00:11:46,860
the extent policy of Bitcoin can say

221
00:11:46,860 --> 00:11:49,509
well we enforce a minimal chain growth

222
00:11:49,509 --> 00:11:54,420
so if the adversary says well don't

223
00:11:54,420 --> 00:11:58,209
extend the chain then at some point

224
00:11:58,209 --> 00:12:00,549
extend policy starts producing blocks on

225
00:12:00,549 --> 00:12:05,189
its own we can infer strength quality

226
00:12:05,189 --> 00:12:10,689
for example so which means that not too

227
00:12:10,689 --> 00:12:17,589
many blocks can have as their owner a

228
00:12:17,589 --> 00:12:21,970
dishonest party for some and we can also

229
00:12:21,970 --> 00:12:23,589
force a big transaction liveness which

230
00:12:23,589 --> 00:12:25,600
means that all transactions that wait in

231
00:12:25,600 --> 00:12:28,269
a buffer for too long well they aren't

232
00:12:28,269 --> 00:12:30,549
forced to go into the next state block

233
00:12:30,549 --> 00:12:34,749
and hence we have some weak transaction

234
00:12:34,749 --> 00:12:36,519
liveness which can be amplified for

235
00:12:36,519 --> 00:12:39,910
example by by adding signatures to

236
00:12:39,910 --> 00:12:44,709
during the paper let's continue today to

237
00:12:44,709 --> 00:12:49,689
the third question so what state what

238
00:12:49,689 --> 00:12:52,119
which part of the say to honest parties

239
00:12:52,119 --> 00:12:54,749
actually see

240
00:12:59,439 --> 00:13:03,769
so when Ellis wants to read the state of

241
00:13:03,769 --> 00:13:07,100
the lecture I told you before that it's

242
00:13:07,100 --> 00:13:09,230
a it's kind of too strong that she just

243
00:13:09,230 --> 00:13:12,740
gets the entire state to see so what is

244
00:13:12,740 --> 00:13:15,649
the influence of the anniv there the

245
00:13:15,649 --> 00:13:17,899
adversary can when Alice wants to read

246
00:13:17,899 --> 00:13:21,379
the state if can define a pointer into

247
00:13:21,379 --> 00:13:25,339
this state you if the effect that Alice

248
00:13:25,339 --> 00:13:29,930
gets this prefix of the state so this

249
00:13:29,930 --> 00:13:32,930
again seems a bit too strong so there is

250
00:13:32,930 --> 00:13:34,850
a restriction on how this pointer here

251
00:13:34,850 --> 00:13:38,980
can be defined the restriction is that

252
00:13:38,980 --> 00:13:41,300
this pointer cannot be too far away from

253
00:13:41,300 --> 00:13:44,810
the head of the state and it can only

254
00:13:44,810 --> 00:13:49,100
move forward that's also if Alice reads

255
00:13:49,100 --> 00:13:51,800
the state she will get some prefix of

256
00:13:51,800 --> 00:13:53,959
the state which is she can be sure that

257
00:13:53,959 --> 00:13:56,420
it's not and if the state is not much

258
00:13:56,420 --> 00:13:59,120
longer than what she can see and she

259
00:13:59,120 --> 00:14:04,959
will only see increasing frequencies and

260
00:14:04,959 --> 00:14:10,309
let me mention a last point so I also

261
00:14:10,309 --> 00:14:12,769
said that the lecture doesn't just

262
00:14:12,769 --> 00:14:17,149
proceed alone but it's also important

263
00:14:17,149 --> 00:14:20,180
this in a in a framework like you sees

264
00:14:20,180 --> 00:14:22,970
that a functionality has to receive

265
00:14:22,970 --> 00:14:27,079
activations to work so there are special

266
00:14:27,079 --> 00:14:29,809
in the individual world they are special

267
00:14:29,809 --> 00:14:33,699
let's say dummy inputs dummy commands

268
00:14:33,699 --> 00:14:37,120
which we called maintained lecture and

269
00:14:37,120 --> 00:14:39,980
whether the ledge proceeds in terms of x

270
00:14:39,980 --> 00:14:41,990
in terms of this clock functionality

271
00:14:41,990 --> 00:14:44,300
also depends on the number of queries

272
00:14:44,300 --> 00:14:47,779
you can get and if you get only a few

273
00:14:47,779 --> 00:14:50,029
queries it proceeds lowered and if you

274
00:14:50,029 --> 00:14:54,889
get a lot of queries and so the

275
00:14:54,889 --> 00:14:56,809
punchline here is that the lecture

276
00:14:56,809 --> 00:14:59,360
functionally itself depending on the

277
00:14:59,360 --> 00:15:02,809
activations it gets can influence the

278
00:15:02,809 --> 00:15:09,290
speed of this clock so to sum up this is

279
00:15:09,290 --> 00:15:12,259
the blueprint of the latch functionality

280
00:15:12,259 --> 00:15:12,860
we put four

281
00:15:12,860 --> 00:15:17,150
in our paper we have modeled the

282
00:15:17,150 --> 00:15:23,570
influence of the adversary and the

283
00:15:23,570 --> 00:15:26,450
parties they can submit inputs they can

284
00:15:26,450 --> 00:15:29,690
read the state and they are assured that

285
00:15:29,690 --> 00:15:34,330
whatever they read this points into a

286
00:15:34,330 --> 00:15:38,000
window that's too too wide and starts at

287
00:15:38,000 --> 00:15:42,950
at the head of the state they so this

288
00:15:42,950 --> 00:15:45,500
blue arrow means that Alice can read up

289
00:15:45,500 --> 00:15:46,280
to here

290
00:15:46,280 --> 00:15:49,520
so on and this window now slide so as

291
00:15:49,520 --> 00:15:52,310
the as the state extends through the

292
00:15:52,310 --> 00:15:56,230
extent mechanism I explained before the

293
00:15:56,230 --> 00:15:59,300
party spoof kind of move with this

294
00:15:59,300 --> 00:16:02,270
window and this gives a kind of a

295
00:16:02,270 --> 00:16:04,010
sliding window view on this on this

296
00:16:04,010 --> 00:16:08,420
block chain model so that's kind of the

297
00:16:08,420 --> 00:16:13,460
summary of our lecture functionality so

298
00:16:13,460 --> 00:16:17,050
how do we realize that so the usual

299
00:16:17,050 --> 00:16:19,670
suspects here we assume a couple of

300
00:16:19,670 --> 00:16:24,940
hybrid functionalities a clock of course

301
00:16:24,940 --> 00:16:28,460
at the random Oracle and diffusion

302
00:16:28,460 --> 00:16:32,060
network so it's a it's not the broadcast

303
00:16:32,060 --> 00:16:34,010
network it's kind of an ad hoc network

304
00:16:34,010 --> 00:16:37,160
where you can implement an multicast on

305
00:16:37,160 --> 00:16:41,450
top of it and so what we then first

306
00:16:41,450 --> 00:16:44,120
state is to to cast the backbone

307
00:16:44,120 --> 00:16:47,480
protocol as a synchronous UC protocol

308
00:16:47,480 --> 00:16:51,350
following the synchrony model by cuts it

309
00:16:51,350 --> 00:16:58,340
all and so in a nutshell so the protocol

310
00:16:58,340 --> 00:17:01,640
proceeds in rounds and each round we

311
00:17:01,640 --> 00:17:03,280
have to do with this proof-of-work step

312
00:17:03,280 --> 00:17:05,720
and you have to fetch the information so

313
00:17:05,720 --> 00:17:06,710
what's the longest chain what

314
00:17:06,710 --> 00:17:09,290
transactions came up and so on so we

315
00:17:09,290 --> 00:17:11,540
divided each round into two mini rounds

316
00:17:11,540 --> 00:17:15,560
to reflect this logical structure so the

317
00:17:15,560 --> 00:17:18,109
mining protocol is roughly the protocol

318
00:17:18,109 --> 00:17:21,109
you saw in the in the previous talk so

319
00:17:21,109 --> 00:17:22,849
in the first mini round you fetch all

320
00:17:22,849 --> 00:17:24,260
the information from the network new

321
00:17:24,260 --> 00:17:25,819
transactions long as chain

322
00:17:25,819 --> 00:17:28,940
and so on in the second mini round you

323
00:17:28,940 --> 00:17:31,990
try to extend your local longest chain

324
00:17:31,990 --> 00:17:35,690
if you found a longer chain if you could

325
00:17:35,690 --> 00:17:38,780
extend it in the broker you multicast

326
00:17:38,780 --> 00:17:44,740
this again or the network at any time

327
00:17:44,740 --> 00:17:47,570
remember that we want to realize such a

328
00:17:47,570 --> 00:17:49,130
ledger functionality so the letter

329
00:17:49,130 --> 00:17:52,070
states that the part is implement is

330
00:17:52,070 --> 00:17:54,770
defined to be the prefix of the longest

331
00:17:54,770 --> 00:18:00,950
local chain here so then the main

332
00:18:00,950 --> 00:18:04,820
theorem of course again depends on on

333
00:18:04,820 --> 00:18:08,330
the on some parameters we saw before so

334
00:18:08,330 --> 00:18:10,010
we do any setting with a fixed

335
00:18:10,010 --> 00:18:12,680
difficulty we have the probability that

336
00:18:12,680 --> 00:18:16,460
you find the end of it that you find a

337
00:18:16,460 --> 00:18:19,510
proof of her we have the network delay

338
00:18:19,510 --> 00:18:22,490
we have to quantify the honest money

339
00:18:22,490 --> 00:18:24,140
power and the dishonest mining power

340
00:18:24,140 --> 00:18:26,480
roughly the honest mining power is

341
00:18:26,480 --> 00:18:28,430
quantified as probability that at least

342
00:18:28,430 --> 00:18:32,990
one on the sky find proof of urbanism

343
00:18:32,990 --> 00:18:38,240
round and the dishonest or mining power

344
00:18:38,240 --> 00:18:40,850
is quantified as this expected value of

345
00:18:40,850 --> 00:18:42,140
number of proof of works that the

346
00:18:42,140 --> 00:18:51,770
adversary can find in one round then we

347
00:18:51,770 --> 00:18:55,460
can state the main theorem so if the if

348
00:18:55,460 --> 00:18:57,320
this honest mining power and the

349
00:18:57,320 --> 00:19:00,470
dishonest mining power are a part so

350
00:19:00,470 --> 00:19:02,960
which means the beta here is

351
00:19:02,960 --> 00:19:04,970
sufficiently bounded away from alpha and

352
00:19:04,970 --> 00:19:07,040
alpha is larger according to this

353
00:19:07,040 --> 00:19:09,200
formula then this mining protocol like

354
00:19:09,200 --> 00:19:14,230
the synchronous you see lecture protocol

355
00:19:14,230 --> 00:19:17,450
with the concrete extent policy for

356
00:19:17,450 --> 00:19:19,240
Bitcoin for the Bitcoin backbone

357
00:19:19,240 --> 00:19:21,320
realizes this ledge functionality that

358
00:19:21,320 --> 00:19:24,170
we explained before where you define the

359
00:19:24,170 --> 00:19:26,690
legislate as the prefix of the longest

360
00:19:26,690 --> 00:19:29,930
local chain so one nice thing in this

361
00:19:29,930 --> 00:19:32,870
proof is that kind of the proof of work

362
00:19:32,870 --> 00:19:37,220
step could be kind of distilled out as a

363
00:19:37,220 --> 00:19:38,890
modular modular

364
00:19:38,890 --> 00:19:42,540
sub-step so the proof-of-work step so we

365
00:19:42,540 --> 00:19:46,960
the first thing is to create an affair

366
00:19:46,960 --> 00:19:49,240
you see functionality that resembles a

367
00:19:49,240 --> 00:19:52,870
lottery so what does this mean so every

368
00:19:52,870 --> 00:19:54,610
the dis lottery that the proof-of-work

369
00:19:54,610 --> 00:19:58,930
step implements and very easy each one

370
00:19:58,930 --> 00:20:03,430
each party can submit input and a

371
00:20:03,430 --> 00:20:06,610
lottery throw some coins and if you

372
00:20:06,610 --> 00:20:09,100
accept it then it's in it then it's

373
00:20:09,100 --> 00:20:11,610
stored in the pool of accepted inputs

374
00:20:11,610 --> 00:20:15,250
that's already it for this lottery

375
00:20:15,250 --> 00:20:17,290
functionality and the nice observation

376
00:20:17,290 --> 00:20:20,470
is then that under these assumptions of

377
00:20:20,470 --> 00:20:23,740
the theorem the honest parties have an

378
00:20:23,740 --> 00:20:26,020
advantage in winning this lottery over

379
00:20:26,020 --> 00:20:29,590
the dishonest parties and this finally

380
00:20:29,590 --> 00:20:31,870
then leads to to the consensus we you

381
00:20:31,870 --> 00:20:37,510
already know about Bitcoin so to to sum

382
00:20:37,510 --> 00:20:43,960
up we have seen that and if if you

383
00:20:43,960 --> 00:20:45,640
define that if you assume alleged

384
00:20:45,640 --> 00:20:47,170
functionality for your application you

385
00:20:47,170 --> 00:20:49,840
should not over idealize what Bitcoin

386
00:20:49,840 --> 00:20:54,250
achieves and what we now provided is an

387
00:20:54,250 --> 00:20:56,590
implementable lecture so we specified it

388
00:20:56,590 --> 00:20:58,930
and for general applause of lectures and

389
00:20:58,930 --> 00:21:01,270
showed how which concrete one be the

390
00:21:01,270 --> 00:21:04,470
Bitcoin backbone protocol can realize

391
00:21:04,470 --> 00:21:07,810
and this realizable lecture can now be

392
00:21:07,810 --> 00:21:10,180
used as the basis for proving

393
00:21:10,180 --> 00:21:13,090
applications it can also be used as

394
00:21:13,090 --> 00:21:16,930
further as a basis for further analysis

395
00:21:16,930 --> 00:21:22,320
itself example rational analysis and and

396
00:21:22,320 --> 00:21:27,430
this kind of extends what we already

397
00:21:27,430 --> 00:21:29,770
knew about Bitcoin so we had property

398
00:21:29,770 --> 00:21:34,690
based definitions and then proofs now we

399
00:21:34,690 --> 00:21:37,330
also know of which functionality in a

400
00:21:37,330 --> 00:21:40,350
composed of the framework you can assume

401
00:21:40,350 --> 00:21:45,130
in a in a large application so this

402
00:21:45,130 --> 00:21:47,800
concludes my talk and thank you for your

403
00:21:47,800 --> 00:21:50,070
attention

404
00:21:50,070 --> 00:21:52,129
you

