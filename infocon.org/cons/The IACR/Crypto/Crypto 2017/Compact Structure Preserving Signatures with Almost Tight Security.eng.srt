1
00:00:04,910 --> 00:00:07,700
thank you for the introduction I'm going

2
00:00:07,700 --> 00:00:09,620
to talk about compact structure

3
00:00:09,620 --> 00:00:11,570
preserving signatures with almost tight

4
00:00:11,570 --> 00:00:13,610
security this is a joint watt with

5
00:00:13,610 --> 00:00:16,820
master hobby this Heinz Mia pourquoi and

6
00:00:16,820 --> 00:00:22,310
just pump in this work we propose a new

7
00:00:22,310 --> 00:00:24,080
structure preserving signature

8
00:00:24,080 --> 00:00:27,890
I call this SPS for shot and this is

9
00:00:27,890 --> 00:00:29,810
based on symmetric external diffusion

10
00:00:29,810 --> 00:00:33,170
mass sumption and which satisfies two

11
00:00:33,170 --> 00:00:35,750
properties the past is almost right

12
00:00:35,750 --> 00:00:38,719
security and the our stream achieve

13
00:00:38,719 --> 00:00:40,989
constant exchange and the public key

14
00:00:40,989 --> 00:00:44,359
let's see the detail of this work from

15
00:00:44,359 --> 00:00:47,479
the next slides so what is the structure

16
00:00:47,479 --> 00:00:50,059
visible photography this is a framework

17
00:00:50,059 --> 00:00:52,550
for efficient constructions using

18
00:00:52,550 --> 00:00:56,539
bilinear groups for building blocks this

19
00:00:56,539 --> 00:00:58,729
is compatible with growth high

20
00:00:58,729 --> 00:01:01,309
non-interactive proof system based on

21
00:01:01,309 --> 00:01:05,360
barrier groups so it is easy to combine

22
00:01:05,360 --> 00:01:08,960
with grow site persistence so we can

23
00:01:08,960 --> 00:01:11,390
construct there many many applications

24
00:01:11,390 --> 00:01:14,030
for example blind signatures group

25
00:01:14,030 --> 00:01:16,130
signatures anonymous credentials and

26
00:01:16,130 --> 00:01:21,609
more press we can it is easy to sorry

27
00:01:21,609 --> 00:01:24,619
subtype is urban cryptography enables us

28
00:01:24,619 --> 00:01:30,020
to construct public also cryptographic

29
00:01:30,020 --> 00:01:32,990
protocols in a modular way so it's very

30
00:01:32,990 --> 00:01:38,149
useful tool in this talk we focus on

31
00:01:38,149 --> 00:01:41,659
signatures so I am explaining what is a

32
00:01:41,659 --> 00:01:45,200
structure preserving ginger SPS in SPS

33
00:01:45,200 --> 00:01:47,929
all public object consists of elements

34
00:01:47,929 --> 00:01:49,810
in groups

35
00:01:49,810 --> 00:01:57,469
Surya and so our message verification

36
00:01:57,469 --> 00:02:00,170
key and the signature all our group

37
00:02:00,170 --> 00:02:04,759
elements plus in SPS

38
00:02:04,759 --> 00:02:07,189
verification is done by computing a

39
00:02:07,189 --> 00:02:09,470
pairing product equation like this

40
00:02:09,470 --> 00:02:15,680
equation this is SPS these two

41
00:02:15,680 --> 00:02:18,920
properties is for gross hydro system I'm

42
00:02:18,920 --> 00:02:21,410
it is easy to combine with Gloucester

43
00:02:21,410 --> 00:02:24,819
hydro systems so SPS is very useful to

44
00:02:24,819 --> 00:02:27,890
concept for example Brian signatures or

45
00:02:27,890 --> 00:02:32,270
group signatures something like that now

46
00:02:32,270 --> 00:02:36,140
let's move to the definition of tight

47
00:02:36,140 --> 00:02:38,930
security to prove the security of a

48
00:02:38,930 --> 00:02:44,209
cryptography we use some hard problem we

49
00:02:44,209 --> 00:02:49,130
assume there exists problem for it's

50
00:02:49,130 --> 00:02:52,550
hard to hard for other batteries to

51
00:02:52,550 --> 00:02:56,209
solve problem who's running food success

52
00:02:56,209 --> 00:02:58,610
property is epsilon P and the running

53
00:02:58,610 --> 00:03:00,950
time is T P then we can construct the

54
00:03:00,950 --> 00:03:03,860
secure cryptography against adversaries

55
00:03:03,860 --> 00:03:05,870
whose success probability is if shown

56
00:03:05,870 --> 00:03:09,620
and the running time is T typically in

57
00:03:09,620 --> 00:03:12,160
the reduction to prove the security

58
00:03:12,160 --> 00:03:14,780
challenge is given a problem instance

59
00:03:14,780 --> 00:03:17,420
and simulate verification key and send

60
00:03:17,420 --> 00:03:19,760
it to the adversary and the adversary

61
00:03:19,760 --> 00:03:23,930
send message M sub I and the Challenger

62
00:03:23,930 --> 00:03:27,350
respond with buried signatures in my and

63
00:03:27,350 --> 00:03:30,519
this process is repeated many times and

64
00:03:30,519 --> 00:03:33,230
finally the other battery output our

65
00:03:33,230 --> 00:03:37,160
target message a mr. and forged

66
00:03:37,160 --> 00:03:41,470
signature Sigma star then the Challenger

67
00:03:41,470 --> 00:03:46,930
output an solution to a hard program

68
00:03:46,930 --> 00:03:50,239
here we define the lead action cost as

69
00:03:50,239 --> 00:03:52,880
follows the reduction cost is epsilon

70
00:03:52,880 --> 00:03:57,260
over epsilon P times T P over T so what

71
00:03:57,260 --> 00:04:00,019
is tight security here I mean the type

72
00:04:00,019 --> 00:04:03,350
of security it is the reduction cost is

73
00:04:03,350 --> 00:04:06,200
just constant so it's independent of

74
00:04:06,200 --> 00:04:08,420
security parameters or the number of

75
00:04:08,420 --> 00:04:13,459
queries and almost type this security

76
00:04:13,459 --> 00:04:15,950
means the reduction cost is order of

77
00:04:15,950 --> 00:04:18,589
security parameter here here am the is

78
00:04:18,589 --> 00:04:21,709
security parameter or older or log of

79
00:04:21,709 --> 00:04:23,960
the number of queries this is almost

80
00:04:23,960 --> 00:04:26,750
tight security so in this talk we we

81
00:04:26,750 --> 00:04:29,090
achieve the Olmstead's key G so our

82
00:04:29,090 --> 00:04:30,650
reduction cost is all the security

83
00:04:30,650 --> 00:04:32,519
parameter

84
00:04:32,519 --> 00:04:36,599
however the reduction cost all many

85
00:04:36,599 --> 00:04:41,110
cryptographic schemes is order over the

86
00:04:41,110 --> 00:04:43,809
number of queries actually this is not

87
00:04:43,809 --> 00:04:46,839
good why why types beauty is important

88
00:04:46,839 --> 00:04:50,589
in particular for SPS if we achieve

89
00:04:50,589 --> 00:04:52,719
tight security then we can use shorter

90
00:04:52,719 --> 00:04:55,839
security parameters so I mean if we use

91
00:04:55,839 --> 00:04:58,779
a non-title secure in the reduction

92
00:04:58,779 --> 00:05:01,899
psyche psyche loss is around order of

93
00:05:01,899 --> 00:05:04,629
two to the thirty so we need use longer

94
00:05:04,629 --> 00:05:07,809
stability parameter to achieve standard

95
00:05:07,809 --> 00:05:09,819
security level for example our 80-bit

96
00:05:09,819 --> 00:05:15,039
security and generally speaking it is

97
00:05:15,039 --> 00:05:18,009
very difficult to find the best format

98
00:05:18,009 --> 00:05:22,469
setting so tight security is probable

99
00:05:22,469 --> 00:05:24,759
moreover in structure prism in

100
00:05:24,759 --> 00:05:28,059
cryptography demand for tight skippy is

101
00:05:28,059 --> 00:05:31,929
much stronger because if we increase

102
00:05:31,929 --> 00:05:34,899
security parameter for one of building

103
00:05:34,899 --> 00:05:37,659
blocks in structure feasible crypto then

104
00:05:37,659 --> 00:05:41,529
we need increase security parameter of

105
00:05:41,529 --> 00:05:44,289
other building blocks too because all

106
00:05:44,289 --> 00:05:46,179
other building blocks use the same

107
00:05:46,179 --> 00:05:49,149
barrier groups so in civil project

108
00:05:49,149 --> 00:05:52,659
preserving crypto tight security is

109
00:05:52,659 --> 00:05:57,849
preferable okay here is a comparison of

110
00:05:57,849 --> 00:06:04,419
SPS Hawkins and Ryoga proposed title

111
00:06:04,419 --> 00:06:07,419
secure SPS based on Dearing assumption

112
00:06:07,419 --> 00:06:10,779
however their scheme is the tree based

113
00:06:10,779 --> 00:06:14,139
signature so to generate two to Dedes

114
00:06:14,139 --> 00:06:18,849
signatures their signature size is 10

115
00:06:18,849 --> 00:06:21,699
times D plus 6 so this is not constant

116
00:06:21,699 --> 00:06:26,289
sized signature after that many constant

117
00:06:26,289 --> 00:06:28,300
size D structure visible ginger based on

118
00:06:28,300 --> 00:06:30,539
standard assumption had been proposed

119
00:06:30,539 --> 00:06:33,550
however none of them are not tightly

120
00:06:33,550 --> 00:06:36,699
secured so they are reduction cost order

121
00:06:36,699 --> 00:06:40,389
of Q or order qs q square or audible cue

122
00:06:40,389 --> 00:06:45,129
log Q our SPS scheme at

123
00:06:45,129 --> 00:06:48,099
the constant size signature and poverty

124
00:06:48,099 --> 00:06:52,539
and almost title secure and this is the

125
00:06:52,539 --> 00:06:55,899
first thing the based on standard a

126
00:06:55,899 --> 00:06:57,369
symmetric external deeply harm

127
00:06:57,369 --> 00:07:01,469
assumption okay so now let's move to

128
00:07:01,469 --> 00:07:05,469
data detail of our skin and the proof

129
00:07:05,469 --> 00:07:07,800
idea

130
00:07:08,039 --> 00:07:10,899
so for non structure pizza being in

131
00:07:10,899 --> 00:07:14,469
cryptography there is very powerful

132
00:07:14,469 --> 00:07:16,659
framework to achieve almost high

133
00:07:16,659 --> 00:07:19,839
security this is it is the chain with

134
00:07:19,839 --> 00:07:24,009
limit proposed at the crypto 2013 in the

135
00:07:24,009 --> 00:07:26,139
framework the core technique is

136
00:07:26,139 --> 00:07:29,759
partitioning by bits so I am going to

137
00:07:29,759 --> 00:07:35,709
explain briefly this technique in the

138
00:07:35,709 --> 00:07:39,969
framework we somehow increase the

139
00:07:39,969 --> 00:07:45,099
entropy of secret KX to achieve this we

140
00:07:45,099 --> 00:07:47,800
gradually change the signature in the

141
00:07:47,800 --> 00:07:50,559
simulation here signature is the for

142
00:07:50,559 --> 00:07:53,679
uniform signature is a secret key times

143
00:07:53,679 --> 00:07:57,209
some function H of message actually

144
00:07:57,209 --> 00:08:00,519
cherry lock is a basically a tip

145
00:08:00,519 --> 00:08:02,469
applicable to IDT based encryption

146
00:08:02,469 --> 00:08:05,669
however in this talk I focus on

147
00:08:05,669 --> 00:08:07,089
signature caste

148
00:08:07,089 --> 00:08:12,429
okay so to gradually change the

149
00:08:12,429 --> 00:08:15,939
signature we define many hybrid games so

150
00:08:15,939 --> 00:08:20,860
at the case hybrid game so if K speed

151
00:08:20,860 --> 00:08:23,889
odd message M is equal to K speed of

152
00:08:23,889 --> 00:08:26,529
target message answer then nothing is

153
00:08:26,529 --> 00:08:27,279
changed

154
00:08:27,279 --> 00:08:31,269
however if case bit of M is not equal to

155
00:08:31,269 --> 00:08:33,849
cast bit of target message gamester then

156
00:08:33,849 --> 00:08:38,099
we slightly change a signature like this

157
00:08:38,099 --> 00:08:41,649
signature is x time here if K prime is

158
00:08:41,649 --> 00:08:43,990
some independent and random function

159
00:08:43,990 --> 00:08:49,600
takes cabot prefix of message m and a

160
00:08:49,600 --> 00:08:53,050
signature is x times f k prime over k

161
00:08:53,050 --> 00:08:56,740
bit prefix of a message m and times H of

162
00:08:56,740 --> 00:08:58,720
M here

163
00:08:58,720 --> 00:09:01,899
we can insert more entropy by using this

164
00:09:01,899 --> 00:09:05,259
independent and random function and so

165
00:09:05,259 --> 00:09:10,120
after lambda hybrid games we can arrive

166
00:09:10,120 --> 00:09:12,220
at the last hybrid game where our

167
00:09:12,220 --> 00:09:15,069
signatures are randomized by independent

168
00:09:15,069 --> 00:09:17,589
and random function so at the last

169
00:09:17,589 --> 00:09:21,009
hybrid game X is am pretty unpredictable

170
00:09:21,009 --> 00:09:23,860
for adversary so it is we can show that

171
00:09:23,860 --> 00:09:26,800
it is difficult for adversary to output

172
00:09:26,800 --> 00:09:29,920
berry the signature so this is a rough

173
00:09:29,920 --> 00:09:36,850
idea of chain we framework so we somehow

174
00:09:36,850 --> 00:09:39,759
would like to make this remark in

175
00:09:39,759 --> 00:09:42,639
structure preserving signature however

176
00:09:42,639 --> 00:09:45,759
there is a serious program in this room

177
00:09:45,759 --> 00:09:49,899
to to apply this remark in SPS because

178
00:09:49,899 --> 00:09:54,189
in the chain we framework they use a bit

179
00:09:54,189 --> 00:09:57,910
by bit technique in an essential way so

180
00:09:57,910 --> 00:10:00,430
however in structure preserving

181
00:10:00,430 --> 00:10:03,100
signature or pub all elements are in

182
00:10:03,100 --> 00:10:06,069
group group elements so we cannot use

183
00:10:06,069 --> 00:10:08,800
bit by bit technique this is a serious

184
00:10:08,800 --> 00:10:09,430
problem

185
00:10:09,430 --> 00:10:12,970
so rates from the next ride I explained

186
00:10:12,970 --> 00:10:18,130
how to overcome this problem in this in

187
00:10:18,130 --> 00:10:21,939
our work so based here is a basic design

188
00:10:21,939 --> 00:10:25,420
idea of our scheme our signature scheme

189
00:10:25,420 --> 00:10:29,769
a signature is consist of encryption of

190
00:10:29,769 --> 00:10:33,160
secret key X and no interpreter large

191
00:10:33,160 --> 00:10:35,769
proof for consistency so a signature

192
00:10:35,769 --> 00:10:39,519
includes the cipher text of X and mist

193
00:10:39,519 --> 00:10:42,759
proof law and a verification key

194
00:10:42,759 --> 00:10:46,660
includes some bio see and hear this

195
00:10:46,660 --> 00:10:50,529
proof law proves that pub or the old

196
00:10:50,529 --> 00:10:53,589
statement was the treatment era is

197
00:10:53,589 --> 00:10:56,290
reckless the cipher text is an

198
00:10:56,290 --> 00:10:59,829
encryption of secret key X and C is a

199
00:10:59,829 --> 00:11:04,569
commitment of X or some drop the witness

200
00:11:04,569 --> 00:11:08,199
for patterning so I soon explained what

201
00:11:08,199 --> 00:11:11,139
kind of drop the witnesses are used in

202
00:11:11,139 --> 00:11:11,949
our ski

203
00:11:11,949 --> 00:11:16,040
this is the basic design of our skin

204
00:11:16,040 --> 00:11:20,300
here we use el-gamal encryption for the

205
00:11:20,300 --> 00:11:22,610
Phi part X because Adamo encryption is

206
00:11:22,610 --> 00:11:24,699
structure preserving and the title

207
00:11:24,699 --> 00:11:30,589
secured to under s xdh assumption and we

208
00:11:30,589 --> 00:11:32,930
use gross high commitment skin this is

209
00:11:32,930 --> 00:11:35,569
also structure prism in crypto and Title

210
00:11:35,569 --> 00:11:37,459
II is secure and the sxga

211
00:11:37,459 --> 00:11:41,569
assumption okay so here is there are two

212
00:11:41,569 --> 00:11:46,430
programs to achieve almost at secure SPS

213
00:11:46,430 --> 00:11:50,209
the first how to bind the message in

214
00:11:50,209 --> 00:11:52,100
group into a message

215
00:11:52,100 --> 00:11:55,699
so in this idea there is no message so

216
00:11:55,699 --> 00:12:00,019
what how to bind a message in signature

217
00:12:00,019 --> 00:12:04,870
a second problem what kind of trap door

218
00:12:04,870 --> 00:12:07,939
should we use for partitioning and to

219
00:12:07,939 --> 00:12:13,009
achieve almost ID security okay let's

220
00:12:13,009 --> 00:12:17,809
see how to bind a message into a

221
00:12:17,809 --> 00:12:20,750
signature we use equity encrypted the

222
00:12:20,750 --> 00:12:25,040
one time Mac to achieve this here X 0 is

223
00:12:25,040 --> 00:12:27,949
the randomly chosen bar you from zippy

224
00:12:27,949 --> 00:12:31,639
and x1 is equal to 0 a verification

225
00:12:31,639 --> 00:12:34,819
Shakti includes the commitment of X 0

226
00:12:34,819 --> 00:12:39,439
and X 1 there are many other barriers

227
00:12:39,439 --> 00:12:42,860
but we focus on these two commitment in

228
00:12:42,860 --> 00:12:46,149
this white a signature includes

229
00:12:46,149 --> 00:12:50,029
ciphertext of G to the G 0 and missed

230
00:12:50,029 --> 00:12:52,730
proof low mark what is low Mac this

231
00:12:52,730 --> 00:12:57,079
prove that G to the G 0 is equal to G to

232
00:12:57,079 --> 00:13:01,750
the X 0 times e to the X 1 what does

233
00:13:01,750 --> 00:13:06,589
this equation means if we focus on the

234
00:13:06,589 --> 00:13:11,209
exponent of this equation G 0 is kind of

235
00:13:11,209 --> 00:13:18,589
one time Mac for message so we would

236
00:13:18,589 --> 00:13:22,279
like to somehow we use the security of

237
00:13:22,279 --> 00:13:24,439
one time mark to prove the security of

238
00:13:24,439 --> 00:13:25,070
our

239
00:13:25,070 --> 00:13:30,980
a scheme to achieve this we would like

240
00:13:30,980 --> 00:13:35,780
to achieve this these two requirements

241
00:13:35,780 --> 00:13:42,530
first somehow we show that signatures

242
00:13:42,530 --> 00:13:46,460
given the signing oracle userís for

243
00:13:46,460 --> 00:13:49,790
adversaries if we can achieve this we

244
00:13:49,790 --> 00:13:52,820
can force the other battery to use

245
00:13:52,820 --> 00:13:57,440
encrypted one time mark so we can reduce

246
00:13:57,440 --> 00:14:00,410
the security of signature to to one time

247
00:14:00,410 --> 00:14:05,540
Mac so here is the problem how to

248
00:14:05,540 --> 00:14:09,680
achieve the first property so how to

249
00:14:09,680 --> 00:14:12,920
make signatures useless for otherwise

250
00:14:12,920 --> 00:14:17,750
reads we use some extended the technique

251
00:14:17,750 --> 00:14:20,570
of chain we framework here is the

252
00:14:20,570 --> 00:14:23,360
somehow we insert more entropy for z0

253
00:14:23,360 --> 00:14:26,330
and by partitioning and achieve almost

254
00:14:26,330 --> 00:14:32,470
had security so let's move to the

255
00:14:32,470 --> 00:14:35,630
technique to achieve almost high

256
00:14:35,630 --> 00:14:39,470
security to achieve tight security we

257
00:14:39,470 --> 00:14:42,320
use a proof technique this is an

258
00:14:42,320 --> 00:14:44,330
extension of adaptable patterning

259
00:14:44,330 --> 00:14:46,910
technique proposed by James Heintz

260
00:14:46,910 --> 00:14:53,150
at last year equipped here we introduce

261
00:14:53,150 --> 00:14:57,190
another value x2 x2 is equal to 0 and

262
00:14:57,190 --> 00:14:59,630
the verification key includes the

263
00:14:59,630 --> 00:15:02,570
commitment of x2 and the different

264
00:15:02,570 --> 00:15:04,880
series from the from the commitment of

265
00:15:04,880 --> 00:15:09,980
x0 and x1 i omit other buried in this

266
00:15:09,980 --> 00:15:12,920
right just we I would like to focus on

267
00:15:12,920 --> 00:15:16,100
the patterning technique a signature

268
00:15:16,100 --> 00:15:19,130
includes the ciphertext of jitu the G 0

269
00:15:19,130 --> 00:15:23,540
and D 2 D 1 and D 2 D D 2 and music

270
00:15:23,540 --> 00:15:24,680
proof lower

271
00:15:24,680 --> 00:15:30,140
what is lower lower prove that Z 0 minus

272
00:15:30,140 --> 00:15:33,550
D 1 times x2 minus D 2 is equal to 0

273
00:15:33,550 --> 00:15:36,500
what does this equation means

274
00:15:36,500 --> 00:15:41,200
this is kind of our statement because if

275
00:15:41,200 --> 00:15:45,290
z0 it could equal to z1 then this

276
00:15:45,290 --> 00:15:49,340
equation Hort so this the first part is

277
00:15:49,340 --> 00:15:51,320
kind of now I and W encryption technique

278
00:15:51,320 --> 00:15:54,440
this prove the consistency of the two

279
00:15:54,440 --> 00:16:00,110
ciphertext the under if X equal to Z

280
00:16:00,110 --> 00:16:03,500
then the equation also holds so what

281
00:16:03,500 --> 00:16:04,310
does it mean

282
00:16:04,310 --> 00:16:06,740
this is just for adapt to be passionate

283
00:16:06,740 --> 00:16:09,530
I think so I'm going to explain this

284
00:16:09,530 --> 00:16:12,200
more detail from the next slide

285
00:16:12,200 --> 00:16:16,070
this latter statement last letter a

286
00:16:16,070 --> 00:16:19,190
condition is to achieve adaptive

287
00:16:19,190 --> 00:16:22,880
fashioning so life idea is as follows if

288
00:16:22,880 --> 00:16:27,470
can collect three yes the sister output

289
00:16:27,470 --> 00:16:32,150
by the adversary then we can force X is

290
00:16:32,150 --> 00:16:35,870
not equal to Z sister for adversary so

291
00:16:35,870 --> 00:16:39,020
the other battery must use the first

292
00:16:39,020 --> 00:16:42,530
condition I mean G 0 is easy equal to z1

293
00:16:42,530 --> 00:16:45,500
so the other battery must use constant

294
00:16:45,500 --> 00:16:50,120
consistent to ciphertext the work

295
00:16:50,120 --> 00:16:57,770
statement is for this okay so now I

296
00:16:57,770 --> 00:17:00,950
briefly explained the proof outline for

297
00:17:00,950 --> 00:17:04,550
partitioning part so I omit the other

298
00:17:04,550 --> 00:17:10,490
part other than patching apart so our in

299
00:17:10,490 --> 00:17:14,030
our SPS skin a bit ancient key includes

300
00:17:14,030 --> 00:17:17,329
commitment of x0 and x1 and the CR s 0

301
00:17:17,329 --> 00:17:22,130
and the commitment x2 and the CRS crs-1

302
00:17:22,130 --> 00:17:26,000
here x2 is equal to 0 and the signature

303
00:17:26,000 --> 00:17:28,880
includes hypertext always e to the Z 0 D

304
00:17:28,880 --> 00:17:32,450
to the D 1 and D 2 D D 2 and there are

305
00:17:32,450 --> 00:17:36,380
two no active the rights proofs in the

306
00:17:36,380 --> 00:17:39,620
patent apart only lower is important so

307
00:17:39,620 --> 00:17:43,310
I focus on door nor prove that this

308
00:17:43,310 --> 00:17:49,440
equation first the simulator guess

309
00:17:49,440 --> 00:17:53,640
mr. output by the adversary I define

310
00:17:53,640 --> 00:18:00,120
this as better and we switch the CRS one

311
00:18:00,120 --> 00:18:03,990
from binding mode to hiding mode yeah so

312
00:18:03,990 --> 00:18:05,820
in the ghost high-proof system there are

313
00:18:05,820 --> 00:18:07,830
two mode hiding and binding mode so

314
00:18:07,830 --> 00:18:10,560
first we change CRS one to hiding mode

315
00:18:10,560 --> 00:18:15,720
so we can change value x2 from the from

316
00:18:15,720 --> 00:18:21,570
0 to 1 minus beta because we use the

317
00:18:21,570 --> 00:18:25,200
hiding modern our next we use the

318
00:18:25,200 --> 00:18:29,850
security of public key encryption and a

319
00:18:29,850 --> 00:18:33,570
picket and we change the tools from 0 to

320
00:18:33,570 --> 00:18:39,300
K speak of mu what is mu nu is a random

321
00:18:39,300 --> 00:18:43,170
binary encoding of message m so we

322
00:18:43,170 --> 00:18:46,530
consider SPS so a message is a group

323
00:18:46,530 --> 00:18:52,560
element however in this this random

324
00:18:52,560 --> 00:18:55,080
binary encoding does not appear in the

325
00:18:55,080 --> 00:18:59,100
scheme in the real world so this is the

326
00:18:59,100 --> 00:19:01,950
only for the security proof so we can

327
00:19:01,950 --> 00:19:05,580
use random binary coding for for

328
00:19:05,580 --> 00:19:10,110
simulation and here the g2 is defined as

329
00:19:10,110 --> 00:19:15,420
case bit of dynamic on the MU so we use

330
00:19:15,420 --> 00:19:18,660
the security of in the CPA or on the

331
00:19:18,660 --> 00:19:21,390
pickets so we can now use the decryption

332
00:19:21,390 --> 00:19:26,880
key of ticket to so we check disturb by

333
00:19:26,880 --> 00:19:29,550
decryption by decrypting the ciphertext

334
00:19:29,550 --> 00:19:32,990
and the pika - so we can check whether

335
00:19:32,990 --> 00:19:36,540
the guess is correct or not if the guess

336
00:19:36,540 --> 00:19:40,470
is not correct we abort this is just

337
00:19:40,470 --> 00:19:46,700
property 1 over 1 1 over 2 so now we

338
00:19:46,700 --> 00:19:51,390
move to randomization by patterning so

339
00:19:51,390 --> 00:19:55,110
if this sister is equal to capital mu

340
00:19:55,110 --> 00:19:57,570
then nothing is changed like chain we

341
00:19:57,570 --> 00:20:00,150
framework so Z 0 is equal to Z 1 and

342
00:20:00,150 --> 00:20:03,389
this is a random

343
00:20:03,389 --> 00:20:05,659
are you from the previous hybrid game

344
00:20:05,659 --> 00:20:10,289
however if this is not equal to KF e

345
00:20:10,289 --> 00:20:13,169
tomu then we can change the contents of

346
00:20:13,169 --> 00:20:17,489
ciphertext under P k1 because if this

347
00:20:17,489 --> 00:20:22,320
conditional hold we extra is defined by

348
00:20:22,320 --> 00:20:29,219
1 minus beta so in this case X is equal

349
00:20:29,219 --> 00:20:33,059
to z2 by simulation so we do not need

350
00:20:33,059 --> 00:20:36,029
that's why the first collision I mean we

351
00:20:36,029 --> 00:20:39,690
do not satisfy 0 is equal to z1 so we

352
00:20:39,690 --> 00:20:45,329
can safely change the contents of a

353
00:20:45,329 --> 00:20:51,179
ciphertext and the PK 1 from previous

354
00:20:51,179 --> 00:20:55,200
value to 2 the new random value we use

355
00:20:55,200 --> 00:20:58,289
independent random function f prime and

356
00:20:58,289 --> 00:21:03,089
that takes K bit perfect so mu so now 0

357
00:21:03,089 --> 00:21:05,669
is not equal to 0 and we can insert more

358
00:21:05,669 --> 00:21:11,969
entropy to the 1 so now and move to next

359
00:21:11,969 --> 00:21:16,529
step to check the validity or forgery

360
00:21:16,529 --> 00:21:18,450
over the other battery we need to check

361
00:21:18,450 --> 00:21:22,369
the contents of ciphertext to whether

362
00:21:22,369 --> 00:21:26,999
whether map is part 1 not so we need

363
00:21:26,999 --> 00:21:32,489
decrypt psychotics and PK 1 now we

364
00:21:32,489 --> 00:21:35,369
already change the contents of

365
00:21:35,369 --> 00:21:38,129
ciphertext under PK 1 so we now we can

366
00:21:38,129 --> 00:21:40,679
use the decryption key or but PK 1 so we

367
00:21:40,679 --> 00:21:47,609
now check by Z 1 star by the crucial so

368
00:21:47,609 --> 00:21:50,609
next we can change the contents or the

369
00:21:50,609 --> 00:21:53,669
ciphertext and the PTH now in a similar

370
00:21:53,669 --> 00:21:56,369
way we change the contents of ciphertext

371
00:21:56,369 --> 00:21:59,579
and Deepika 0 from previous value to the

372
00:21:59,579 --> 00:22:02,969
independent on the random function so

373
00:22:02,969 --> 00:22:06,869
now again we can satisfy Z 0 and equal

374
00:22:06,869 --> 00:22:11,729
to Z 1 so we can give party on the set

375
00:22:11,729 --> 00:22:14,489
of signature by using this technique and

376
00:22:14,489 --> 00:22:16,980
we can repeat these processes

377
00:22:16,980 --> 00:22:20,550
so at the last hybrid game or signature

378
00:22:20,550 --> 00:22:23,940
has a sufficient entropy and our

379
00:22:23,940 --> 00:22:26,160
signatures are useless for the

380
00:22:26,160 --> 00:22:28,740
adversaries and audible sorry the

381
00:22:28,740 --> 00:22:31,950
adversary must use must use some

382
00:22:31,950 --> 00:22:34,530
signature from gaben signatures by

383
00:22:34,530 --> 00:22:38,340
defining oracle so this control

384
00:22:38,340 --> 00:22:41,490
contradict to the one-time security of

385
00:22:41,490 --> 00:22:45,770
Mac this is a a trial proof

386
00:22:45,770 --> 00:22:48,990
let's summarize of this talk we propose

387
00:22:48,990 --> 00:22:51,150
new structure president signature they

388
00:22:51,150 --> 00:22:53,880
still own s xdh assumption which

389
00:22:53,880 --> 00:22:56,630
satisfies almost all tight security and

390
00:22:56,630 --> 00:22:59,130
constant size signature and public key

391
00:22:59,130 --> 00:23:02,400
to achieve this we introduce a new

392
00:23:02,400 --> 00:23:04,410
adaptive patterning technique for

393
00:23:04,410 --> 00:23:06,780
structure prism in cryptography based on

394
00:23:06,780 --> 00:23:11,370
gross hypu system it seems that our

395
00:23:11,370 --> 00:23:15,530
scheme is not super efficient because

396
00:23:15,530 --> 00:23:21,390
signature consists of 12 25 or 28 group

397
00:23:21,390 --> 00:23:25,230
element but if we use the best parameter

398
00:23:25,230 --> 00:23:28,770
setting actually our scheme very

399
00:23:28,770 --> 00:23:32,130
efficient compared with previous as SPS

400
00:23:32,130 --> 00:23:37,200
schemes and there is a so one open

401
00:23:37,200 --> 00:23:39,960
question is whether we can construct a

402
00:23:39,960 --> 00:23:43,320
more efficient title secure SPS or it's

403
00:23:43,320 --> 00:23:46,590
Roger prism in cryptography sati thank

404
00:23:46,590 --> 00:23:48,380
you

405
00:23:48,380 --> 00:23:54,229
[Applause]

