1
00:00:04,880 --> 00:00:08,630
all right so thank everyone for being

2
00:00:08,630 --> 00:00:10,340
here for the last dog of the session

3
00:00:10,340 --> 00:00:14,719
it's been a long day so in this talk

4
00:00:14,719 --> 00:00:16,670
I'll tell you about the burrows a

5
00:00:16,670 --> 00:00:18,500
probably secure perfect steak protocol

6
00:00:18,500 --> 00:00:20,840
and this is John work with Alex Rosser

7
00:00:20,840 --> 00:00:23,470
another David and Romanorum new golf

8
00:00:23,470 --> 00:00:30,289
so you heard in this session and what

9
00:00:30,289 --> 00:00:33,920
about the ledger objective so the goal

10
00:00:33,920 --> 00:00:35,680
is to construct this protocol that

11
00:00:35,680 --> 00:00:38,800
realizes this robust transaction ledger

12
00:00:38,800 --> 00:00:42,379
and as you've learned this was the

13
00:00:42,379 --> 00:00:45,229
objective of a paper by FUNKER I myself

14
00:00:45,229 --> 00:00:48,559
am a novice in DKR we formalized this

15
00:00:48,559 --> 00:00:51,729
definition this has an objective and

16
00:00:51,729 --> 00:00:55,100
this gave rise some Pollock work which

17
00:00:55,100 --> 00:00:56,600
we find a model and definition some of

18
00:00:56,600 --> 00:00:57,620
which were also heard in this session

19
00:00:57,620 --> 00:01:00,249
with now we can say we have finally a

20
00:01:00,249 --> 00:01:02,989
simulation based definition which which

21
00:01:02,989 --> 00:01:06,170
is composable now once you have an

22
00:01:06,170 --> 00:01:08,030
objective which is clinically finest at

23
00:01:08,030 --> 00:01:12,200
know you can ask do we know the best way

24
00:01:12,200 --> 00:01:17,090
to realize it so trying to answer that

25
00:01:17,090 --> 00:01:19,670
question is is the topic of this final

26
00:01:19,670 --> 00:01:23,659
talk so we know that the ledger can be

27
00:01:23,659 --> 00:01:25,399
realized by Bitcoin based on all this

28
00:01:25,399 --> 00:01:28,070
wonderful previous works which we

29
00:01:28,070 --> 00:01:33,140
decided but we also know from the way

30
00:01:33,140 --> 00:01:36,890
the protocol actually works in the real

31
00:01:36,890 --> 00:01:39,710
world that it exhibits significant

32
00:01:39,710 --> 00:01:41,450
scalability and energy efficiency

33
00:01:41,450 --> 00:01:46,280
disadvantages so how we realize in a

34
00:01:46,280 --> 00:01:48,350
more efficient way so at least at this

35
00:01:48,350 --> 00:01:54,560
point that an idea that is called proof

36
00:01:54,560 --> 00:01:59,179
of stake for circulate were circulated

37
00:01:59,179 --> 00:02:01,819
in the Bitcoin community as well go on

38
00:02:01,819 --> 00:02:04,939
as 2011 as a possible way of designing a

39
00:02:04,939 --> 00:02:07,969
more efficient letter so what's the

40
00:02:07,969 --> 00:02:13,160
background the kind of a stake so as

41
00:02:13,160 --> 00:02:14,810
also highlighted in the previous talk

42
00:02:14,810 --> 00:02:17,950
you can think that at the core

43
00:02:17,950 --> 00:02:19,810
of bitcoins operation is an election

44
00:02:19,810 --> 00:02:23,650
process so the next block is produced in

45
00:02:23,650 --> 00:02:25,569
the form of an election so somehow a

46
00:02:25,569 --> 00:02:28,239
minor one of the protocol participants

47
00:02:28,239 --> 00:02:35,440
is selected to extend the chain and this

48
00:02:35,440 --> 00:02:36,849
is done with probability proportional to

49
00:02:36,849 --> 00:02:39,040
its housing power and collisions that

50
00:02:39,040 --> 00:02:41,410
may occur are supposed to be resolved by

51
00:02:41,410 --> 00:02:42,940
following some rule let's say the

52
00:02:42,940 --> 00:02:45,430
longest chain rule or the most difficult

53
00:02:45,430 --> 00:02:49,720
chain rule so propose stake the idea

54
00:02:49,720 --> 00:02:51,010
behind it is to follow a similar

55
00:02:51,010 --> 00:02:56,130
approach but use the amount of stake

56
00:02:56,130 --> 00:03:00,220
that an entity has as that is reflected

57
00:03:00,220 --> 00:03:04,030
in the ledger and use a randomized

58
00:03:04,030 --> 00:03:05,620
process that takes into account that

59
00:03:05,620 --> 00:03:09,700
stake to elect the next entity the next

60
00:03:09,700 --> 00:03:11,970
participant we will extend the protocol

61
00:03:11,970 --> 00:03:16,090
so in some sense this respects the

62
00:03:16,090 --> 00:03:18,370
fundamental logic behind how these

63
00:03:18,370 --> 00:03:21,430
protocols operate because after all in

64
00:03:21,430 --> 00:03:24,280
the real world you can use money to buy

65
00:03:24,280 --> 00:03:28,209
housing power and as a result what you

66
00:03:28,209 --> 00:03:30,040
increase your probability of being

67
00:03:30,040 --> 00:03:33,040
elected by investing more money in the

68
00:03:33,040 --> 00:03:35,049
equipment of the system but in this case

69
00:03:35,049 --> 00:03:37,930
is somehow cutting out this physical

70
00:03:37,930 --> 00:03:40,060
footprint of the protocol and use

71
00:03:40,060 --> 00:03:42,190
directly the stake as it is reported in

72
00:03:42,190 --> 00:03:45,130
the blockchain itself as the main

73
00:03:45,130 --> 00:03:47,290
guidance for how the election process

74
00:03:47,290 --> 00:03:50,440
should go to elect the next entity to

75
00:03:50,440 --> 00:03:56,079
extend the blockchain so you can

76
00:03:56,079 --> 00:03:57,760
classify all these protocols in this

77
00:03:57,760 --> 00:03:59,950
like two dimensional space that cover

78
00:03:59,950 --> 00:04:02,769
two parameters of interest so you can

79
00:04:02,769 --> 00:04:07,329
think like of the x-axis as showing how

80
00:04:07,329 --> 00:04:11,079
performance in energy efficiency scales

81
00:04:11,079 --> 00:04:13,269
and on the x-axis we have the

82
00:04:13,269 --> 00:04:15,190
centralization so if you put it here

83
00:04:15,190 --> 00:04:16,870
together and you can think like the

84
00:04:16,870 --> 00:04:19,329
objective is to have a ledger well we

85
00:04:19,329 --> 00:04:21,339
have a centralized database on the one

86
00:04:21,339 --> 00:04:22,780
side and you can easily see this is on

87
00:04:22,780 --> 00:04:24,610
the upper left corner and then we have

88
00:04:24,610 --> 00:04:27,190
Bitcoin which is on the lower right more

89
00:04:27,190 --> 00:04:28,690
decentralized but non area energy

90
00:04:28,690 --> 00:04:30,880
efficient and there's a direct way of

91
00:04:30,880 --> 00:04:31,750
also

92
00:04:31,750 --> 00:04:34,210
implementing a ledger by just composing

93
00:04:34,210 --> 00:04:35,980
sequentially a series of business in

94
00:04:35,980 --> 00:04:38,290
agreement protocols and you can see that

95
00:04:38,290 --> 00:04:40,120
this would not be as the centralized as

96
00:04:40,120 --> 00:04:43,780
Bitcoin is and it would be less

97
00:04:43,780 --> 00:04:45,310
efficient of course than a centralized

98
00:04:45,310 --> 00:04:47,140
database which is just has a single

99
00:04:47,140 --> 00:04:49,270
point of failure so a proof of stake

100
00:04:49,270 --> 00:04:51,490
protocol at least that's the hope

101
00:04:51,490 --> 00:04:55,330
if we can design it would actually feel

102
00:04:55,330 --> 00:04:58,090
this much coveted space which is here on

103
00:04:58,090 --> 00:05:00,820
the upper right corner because it's mode

104
00:05:00,820 --> 00:05:03,520
it can be more decentralized than you

105
00:05:03,520 --> 00:05:04,600
know this classical business in

106
00:05:04,600 --> 00:05:06,310
agreement sequence sequential

107
00:05:06,310 --> 00:05:09,700
composition because the stake hold the

108
00:05:09,700 --> 00:05:13,510
distribution may shift over time but at

109
00:05:13,510 --> 00:05:15,610
the same time the protocol can actually

110
00:05:15,610 --> 00:05:18,270
produce one block every heartbeat and

111
00:05:18,270 --> 00:05:21,250
this can be done without actually

112
00:05:21,250 --> 00:05:24,310
suffering a penalty for scaling the

113
00:05:24,310 --> 00:05:25,419
protocol to a large number of

114
00:05:25,419 --> 00:05:27,700
participants so if such a protocol like

115
00:05:27,700 --> 00:05:30,550
could be designed it could possibly be

116
00:05:30,550 --> 00:05:32,830
more decentralized and more efficient

117
00:05:32,830 --> 00:05:38,230
than what we have so this was realized

118
00:05:38,230 --> 00:05:40,270
early on when proof of stake was

119
00:05:40,270 --> 00:05:42,100
suggested as a possible as a possible

120
00:05:42,100 --> 00:05:45,880
course of action and very soon enough

121
00:05:45,880 --> 00:05:47,140
people realized that there were

122
00:05:47,140 --> 00:05:50,229
significant challenges that are specific

123
00:05:50,229 --> 00:05:52,080
to designing proof of stakeholder goals

124
00:05:52,080 --> 00:05:56,400
first one which has been coded as

125
00:05:56,400 --> 00:05:58,930
grindin attacks is the fact that the

126
00:05:58,930 --> 00:06:01,450
adversary exactly because now the

127
00:06:01,450 --> 00:06:03,700
election process becomes a computational

128
00:06:03,700 --> 00:06:06,910
protocol which is reflected in the

129
00:06:06,910 --> 00:06:09,990
blockchain itself it stops being this

130
00:06:09,990 --> 00:06:12,930
idealized process that we can think of

131
00:06:12,930 --> 00:06:15,700
in the blockchain protocol like Bitcoin

132
00:06:15,700 --> 00:06:17,860
that uses proof of work so it is

133
00:06:17,860 --> 00:06:20,580
possible somehow the part is to use

134
00:06:20,580 --> 00:06:23,020
computational power and try to bias the

135
00:06:23,020 --> 00:06:25,450
protocol to it to their advantage and

136
00:06:25,450 --> 00:06:27,100
this type of grinding attacks were

137
00:06:27,100 --> 00:06:28,630
present in all the protocols that were

138
00:06:28,630 --> 00:06:30,490
suggesting proof of stake based

139
00:06:30,490 --> 00:06:31,740
blockchains

140
00:06:31,740 --> 00:06:34,870
another attack which has been considered

141
00:06:34,870 --> 00:06:36,160
and has been seen in many cases was the

142
00:06:36,160 --> 00:06:37,720
nothing at stake attack that somehow

143
00:06:37,720 --> 00:06:40,960
reflected the fact that a stakeholder

144
00:06:40,960 --> 00:06:43,169
didn't have to commit to a specific

145
00:06:43,169 --> 00:06:45,610
extending a specific blockchain but

146
00:06:45,610 --> 00:06:47,020
you could just try multiple ones at the

147
00:06:47,020 --> 00:06:49,060
same time and finally there was the

148
00:06:49,060 --> 00:06:52,240
circularity argument that somehow you

149
00:06:52,240 --> 00:06:53,860
would use the blockchain to run a

150
00:06:53,860 --> 00:06:56,259
protocol to produce randomness but at

151
00:06:56,259 --> 00:06:59,439
the same time now the security of the

152
00:06:59,439 --> 00:07:00,610
protocol would have to rely on the

153
00:07:00,610 --> 00:07:01,870
blockchain so there is a circularity

154
00:07:01,870 --> 00:07:03,849
between the random generation and the

155
00:07:03,849 --> 00:07:05,349
security of the blockchain that you have

156
00:07:05,349 --> 00:07:07,689
somehow to avoid if you hope to prove

157
00:07:07,689 --> 00:07:11,050
this protocol secure so this is where we

158
00:07:11,050 --> 00:07:13,710
stand and the question is is it possible

159
00:07:13,710 --> 00:07:17,259
to realize the ledger objective by using

160
00:07:17,259 --> 00:07:21,219
just per for state discipline so let's

161
00:07:21,219 --> 00:07:23,500
recap we are in a synchronous setting

162
00:07:23,500 --> 00:07:25,779
time is divided in rounds which we call

163
00:07:25,779 --> 00:07:28,900
them slots and messages are sent through

164
00:07:28,900 --> 00:07:30,729
a diffusion mechanism is the same model

165
00:07:30,729 --> 00:07:32,460
that you've seen the previous two talks

166
00:07:32,460 --> 00:07:36,849
the adversary can is rushing which means

167
00:07:36,849 --> 00:07:38,349
that he has the advantage he can deliver

168
00:07:38,349 --> 00:07:40,210
our messages and spoof their source

169
00:07:40,210 --> 00:07:42,759
inject messages of its own reordered

170
00:07:42,759 --> 00:07:45,189
messages and send some messages to some

171
00:07:45,189 --> 00:07:48,849
parties and some refused some of their

172
00:07:48,849 --> 00:07:52,000
solid messages to others so in this

173
00:07:52,000 --> 00:07:56,169
setting this is how a first rendering

174
00:07:56,169 --> 00:08:00,849
over protocol works so this is the first

175
00:08:00,849 --> 00:08:02,979
stage of the protocol where basically

176
00:08:02,979 --> 00:08:07,389
let's assume that the stake is static so

177
00:08:07,389 --> 00:08:09,240
we have a fixed set of stakeholders

178
00:08:09,240 --> 00:08:11,650
which are identified here at the

179
00:08:11,650 --> 00:08:13,539
beginning it's one of them with a

180
00:08:13,539 --> 00:08:15,270
certain amount of stake and that's

181
00:08:15,270 --> 00:08:18,669
predetermined it's written in the

182
00:08:18,669 --> 00:08:21,550
Genesis block now Antonius block also

183
00:08:21,550 --> 00:08:25,569
has a seed which even think of it as a

184
00:08:25,569 --> 00:08:28,960
random string that is going to produce a

185
00:08:28,960 --> 00:08:32,769
sequence of random choices for leaders

186
00:08:32,769 --> 00:08:33,729
so called

187
00:08:33,729 --> 00:08:36,309
that will be assigned to each every slot

188
00:08:36,309 --> 00:08:38,969
that is coming up next

189
00:08:38,969 --> 00:08:42,370
so this leader here will be responsible

190
00:08:42,370 --> 00:08:44,769
for producing a block for that

191
00:08:44,769 --> 00:08:47,410
particular slot and only that entity is

192
00:08:47,410 --> 00:08:50,709
going to be responsible for producing

193
00:08:50,709 --> 00:08:52,899
that block here now observe that because

194
00:08:52,899 --> 00:08:54,940
the seed is part of the Genesis block

195
00:08:54,940 --> 00:08:58,690
it's agreed already what is the slot in

196
00:08:58,690 --> 00:09:00,370
their sequence

197
00:09:00,370 --> 00:09:03,709
now the sampling of that slot leader

198
00:09:03,709 --> 00:09:05,570
sequence is done according to weight

199
00:09:05,570 --> 00:09:08,930
that is based on the stakeholder

200
00:09:08,930 --> 00:09:11,209
distribution that means that the more

201
00:09:11,209 --> 00:09:12,709
stake you have the more likely you are

202
00:09:12,709 --> 00:09:14,769
to be assigned on a certain slot

203
00:09:14,769 --> 00:09:17,029
otherwise the assignment is completely

204
00:09:17,029 --> 00:09:20,410
independent so now the protocol starts

205
00:09:20,410 --> 00:09:23,660
all stakeholders have a public key and a

206
00:09:23,660 --> 00:09:25,310
secret key that corresponds to a digital

207
00:09:25,310 --> 00:09:27,320
signature you know the protocol

208
00:09:27,320 --> 00:09:29,870
follows an extremely simple discipline

209
00:09:29,870 --> 00:09:32,450
on every slot there is one slot leader

210
00:09:32,450 --> 00:09:35,240
that is responsible and that one is

211
00:09:35,240 --> 00:09:39,170
going to issue a block it's not

212
00:09:39,170 --> 00:09:40,370
necessary that this may happen

213
00:09:40,370 --> 00:09:43,399
for example a swab here might be off

214
00:09:43,399 --> 00:09:45,260
line or it might be controlled by the

215
00:09:45,260 --> 00:09:48,230
adversary and prefer not to do that so

216
00:09:48,230 --> 00:09:50,329
the protocol will still continue and

217
00:09:50,329 --> 00:09:53,630
parties will extend the previous block

218
00:09:53,630 --> 00:09:56,570
they know following a longest chain rule

219
00:09:56,570 --> 00:09:59,600
very simple exactly like in the case of

220
00:09:59,600 --> 00:10:01,970
Bitcoin excluding the fact that there is

221
00:10:01,970 --> 00:10:06,040
no difficulty to take into account so

222
00:10:06,040 --> 00:10:08,600
the protocol is simple but how do you

223
00:10:08,600 --> 00:10:10,790
analyze that so here is the first

224
00:10:10,790 --> 00:10:12,769
glimpse of how do we perform the

225
00:10:12,769 --> 00:10:16,550
security analysis of this so the first

226
00:10:16,550 --> 00:10:18,800
important object to observe here is what

227
00:10:18,800 --> 00:10:20,810
we call a characteristic string the

228
00:10:20,810 --> 00:10:22,910
characteristic string is as long as the

229
00:10:22,910 --> 00:10:24,380
number of slots you have in a system

230
00:10:24,380 --> 00:10:28,550
execution and it's zero if the slot

231
00:10:28,550 --> 00:10:30,920
belongs to known as party whereas

232
00:10:30,920 --> 00:10:33,589
malicious where if it's malicious it's

233
00:10:33,589 --> 00:10:35,839
one observer the characteristic string

234
00:10:35,839 --> 00:10:37,519
is something that the parties themselves

235
00:10:37,519 --> 00:10:41,120
do not know but we know that we observe

236
00:10:41,120 --> 00:10:43,339
the execution of the protocol that

237
00:10:43,339 --> 00:10:45,740
follows some are betrayal adversarial

238
00:10:45,740 --> 00:10:48,800
strategy that is determined as the

239
00:10:48,800 --> 00:10:51,620
adversary proceeds together with the

240
00:10:51,620 --> 00:10:53,240
protocol that the parties around the

241
00:10:53,240 --> 00:10:56,089
protocol so let's imagine that this is

242
00:10:56,089 --> 00:10:58,970
the string that characterizes how the

243
00:10:58,970 --> 00:11:02,510
protocol executes and let's see how does

244
00:11:02,510 --> 00:11:04,310
the protocol extends and along this

245
00:11:04,310 --> 00:11:06,680
protocol execution I will I will define

246
00:11:06,680 --> 00:11:10,310
this tree which we're gonna call a fork

247
00:11:10,310 --> 00:11:12,310
and is

248
00:11:12,310 --> 00:11:16,190
is produced based on that characteristic

249
00:11:16,190 --> 00:11:19,279
string so here is a zero node which

250
00:11:19,279 --> 00:11:20,870
corresponds to the Genesis block and

251
00:11:20,870 --> 00:11:23,000
that's always assumed to be honest and

252
00:11:23,000 --> 00:11:25,730
now you hear word here at slots the

253
00:11:25,730 --> 00:11:27,709
first slot where it's an honest party

254
00:11:27,709 --> 00:11:30,259
that produces block one now what happens

255
00:11:30,259 --> 00:11:32,209
next is that we do have an adversarial

256
00:11:32,209 --> 00:11:35,300
slot without loss of generality the

257
00:11:35,300 --> 00:11:37,430
adversary need not act at that

258
00:11:37,430 --> 00:11:39,860
particular moment so he can wait he can

259
00:11:39,860 --> 00:11:41,449
wait up to the third slot where we have

260
00:11:41,449 --> 00:11:43,190
an honest party and here is what the

261
00:11:43,190 --> 00:11:45,410
adversary does the adversary who

262
00:11:45,410 --> 00:11:47,540
controls slot two he produces a block

263
00:11:47,540 --> 00:11:50,630
and presents that first to the party

264
00:11:50,630 --> 00:11:53,060
that will produce the slot of the third

265
00:11:53,060 --> 00:11:55,160
position so now what happens is that

266
00:11:55,160 --> 00:11:57,350
this party in this party have been split

267
00:11:57,350 --> 00:12:01,730
into so and this honest party now is

268
00:12:01,730 --> 00:12:04,730
extending this particular path that we

269
00:12:04,730 --> 00:12:09,290
call a time so this particular fork as

270
00:12:09,290 --> 00:12:10,759
we will see is going to have three times

271
00:12:10,759 --> 00:12:14,139
and the adversary is going to schedule

272
00:12:14,139 --> 00:12:17,839
its attacked so that it will divide the

273
00:12:17,839 --> 00:12:19,220
change that the parties are actually

274
00:12:19,220 --> 00:12:22,579
extending as the protocol proceeded so

275
00:12:22,579 --> 00:12:24,889
let's look at what happens at position 5

276
00:12:24,889 --> 00:12:27,350
at this moment the adversary who is in

277
00:12:27,350 --> 00:12:29,630
control of the fourth slot he produces a

278
00:12:29,630 --> 00:12:31,880
block here and presents that to party 5

279
00:12:31,880 --> 00:12:34,790
now observe that this party observes

280
00:12:34,790 --> 00:12:37,430
this time which is of length 3 including

281
00:12:37,430 --> 00:12:39,649
the Genesis block and it's as good as

282
00:12:39,649 --> 00:12:42,199
this one the adversary who is internal

283
00:12:42,199 --> 00:12:44,870
control of the of the ordering of

284
00:12:44,870 --> 00:12:47,060
messages can convince that party a

285
00:12:47,060 --> 00:12:49,850
position 5 to extend this one in a

286
00:12:49,850 --> 00:12:51,470
similar way the same thing happens in 6

287
00:12:51,470 --> 00:12:54,620
and finally the adversary convinces the

288
00:12:54,620 --> 00:12:56,810
party at position 9 to extend that

289
00:12:56,810 --> 00:12:59,569
particular block so what you have

290
00:12:59,569 --> 00:13:03,170
witnessed is how this simple protocol

291
00:13:03,170 --> 00:13:04,550
that I described in the previous slide

292
00:13:04,550 --> 00:13:07,399
gives rise to a rather complex execution

293
00:13:07,399 --> 00:13:09,410
where the adversary can switch the

294
00:13:09,410 --> 00:13:10,759
positions of the honest parties to

295
00:13:10,759 --> 00:13:16,069
different sides so what is the problem

296
00:13:16,069 --> 00:13:19,250
here how can we think about this

297
00:13:19,250 --> 00:13:21,889
protocol with all the knowledge that we

298
00:13:21,889 --> 00:13:23,510
have gained through all these previous

299
00:13:23,510 --> 00:13:25,430
works that started on proof-of-work the

300
00:13:25,430 --> 00:13:26,300
situation is

301
00:13:26,300 --> 00:13:28,340
different as we'll see first of all

302
00:13:28,340 --> 00:13:30,440
observe that the adversary now is in

303
00:13:30,440 --> 00:13:32,720
much better position so the protocol

304
00:13:32,720 --> 00:13:35,030
execution compared to proof of work

305
00:13:35,030 --> 00:13:38,390
protocol based execution is much better

306
00:13:38,390 --> 00:13:41,390
here why because it can see ahead of

307
00:13:41,390 --> 00:13:44,360
time how stakeholders are activated it

308
00:13:44,360 --> 00:13:45,830
can generate multiple different blocks

309
00:13:45,830 --> 00:13:48,050
for the same slot at any time without

310
00:13:48,050 --> 00:13:51,080
cost so contrary to how Bitcoin works

311
00:13:51,080 --> 00:13:52,400
where the other has to invest

312
00:13:52,400 --> 00:13:54,560
computational power to extend the

313
00:13:54,560 --> 00:13:57,200
specific like chain the same is not true

314
00:13:57,200 --> 00:13:58,240
here

315
00:13:58,240 --> 00:14:01,580
finally the obvious a can wait and act

316
00:14:01,580 --> 00:14:03,590
just before an honest party becomes

317
00:14:03,590 --> 00:14:05,690
activated it doesn't need to do anything

318
00:14:05,690 --> 00:14:08,900
in the Schloss that it's assigned to

319
00:14:08,900 --> 00:14:12,050
himself he can just wait until an honest

320
00:14:12,050 --> 00:14:13,730
part is activated and then at that

321
00:14:13,730 --> 00:14:15,260
moment can choose the best possible

322
00:14:15,260 --> 00:14:17,180
course of action so there's no need for

323
00:14:17,180 --> 00:14:19,400
the other side to commit ahead of time

324
00:14:19,400 --> 00:14:25,730
how it extends a chain so let's look at

325
00:14:25,730 --> 00:14:27,980
the strings and say here is the

326
00:14:27,980 --> 00:14:29,540
characteristic strings they are

327
00:14:29,540 --> 00:14:31,160
exponentially many of them in an

328
00:14:31,160 --> 00:14:36,050
execution which from ones are the ones

329
00:14:36,050 --> 00:14:38,600
that the adversary prefers now you can

330
00:14:38,600 --> 00:14:41,960
see that the string 0 0 0 is obviously a

331
00:14:41,960 --> 00:14:44,050
saying that the adversary does not like

332
00:14:44,050 --> 00:14:46,970
and it's very easy to see that there is

333
00:14:46,970 --> 00:14:48,740
nothing really the adversary can do here

334
00:14:48,740 --> 00:14:50,270
we have just a complete sequence like

335
00:14:50,270 --> 00:14:52,460
that well the other hand just look at

336
00:14:52,460 --> 00:14:56,810
that string 0 0 1 1 0 0 0 1 now that

337
00:14:56,810 --> 00:14:58,580
string is actually a string that errors

338
00:14:58,580 --> 00:15:00,590
I can do it completed arc we call that

339
00:15:00,590 --> 00:15:02,390
string for cable how does the attack

340
00:15:02,390 --> 00:15:04,970
works now you can see it here why we

341
00:15:04,970 --> 00:15:07,130
call that string for cable just look

342
00:15:07,130 --> 00:15:09,860
exactly about what happens here in

343
00:15:09,860 --> 00:15:12,770
imagining that you are the next honest

344
00:15:12,770 --> 00:15:15,560
party to be activated exactly after this

345
00:15:15,560 --> 00:15:19,640
point now observe how this looks and

346
00:15:19,640 --> 00:15:24,800
just see that it is absolutely in the

347
00:15:24,800 --> 00:15:27,860
discretion of the adversary to serve you

348
00:15:27,860 --> 00:15:31,220
either the upper time or the lower time

349
00:15:31,220 --> 00:15:35,240
of that fork that's because that time is

350
00:15:35,240 --> 00:15:39,200
of length 5 and this one is at length 4

351
00:15:39,200 --> 00:15:39,950
but

352
00:15:39,950 --> 00:15:41,960
the adversary is in control of that slot

353
00:15:41,960 --> 00:15:45,230
so when you come up here as an honest

354
00:15:45,230 --> 00:15:47,720
party it will be up to the adversary to

355
00:15:47,720 --> 00:15:52,700
serve you whatever time it prefers so

356
00:15:52,700 --> 00:15:55,610
this is a bad string for us in a string

357
00:15:55,610 --> 00:15:57,320
that the other sari wins so we call that

358
00:15:57,320 --> 00:16:01,010
thing portable so the main point is

359
00:16:01,010 --> 00:16:03,350
going to be if you pick a string at

360
00:16:03,350 --> 00:16:07,370
random what is the probability that it's

361
00:16:07,370 --> 00:16:09,980
for cable and that's the core point of

362
00:16:09,980 --> 00:16:11,750
the security analysis not to understand

363
00:16:11,750 --> 00:16:15,230
that we have to introduce two quantities

364
00:16:15,230 --> 00:16:17,120
which are useful so we call them

365
00:16:17,120 --> 00:16:20,000
reach-in margin but first observe that

366
00:16:20,000 --> 00:16:21,800
we're just gonna focus on what we call a

367
00:16:21,800 --> 00:16:24,800
closed fork a closed fork is a fork that

368
00:16:24,800 --> 00:16:27,680
ends on just nodes that correspond to

369
00:16:27,680 --> 00:16:30,530
honest parties so the leaves of that

370
00:16:30,530 --> 00:16:33,050
tree is just honest parties because we

371
00:16:33,050 --> 00:16:35,150
don't need to consider those Forks but a

372
00:16:35,150 --> 00:16:37,640
non-adversarial blocks exactly because

373
00:16:37,640 --> 00:16:40,160
the adversary can always fill them in at

374
00:16:40,160 --> 00:16:42,980
the right time now for it's one of those

375
00:16:42,980 --> 00:16:46,700
times just observe that we can define

376
00:16:46,700 --> 00:16:49,940
two useful quantities the first one we

377
00:16:49,940 --> 00:16:52,610
call the reserved which corresponds to

378
00:16:52,610 --> 00:16:56,450
how many blocks the adversary can add to

379
00:16:56,450 --> 00:16:58,790
extend a certain time so in this

380
00:16:58,790 --> 00:17:02,300
particular case this one has a reserve

381
00:17:02,300 --> 00:17:05,000
of 3 because there are three adversarial

382
00:17:05,000 --> 00:17:07,699
slots coming up so for example when an

383
00:17:07,699 --> 00:17:10,220
honest party is activated here the

384
00:17:10,220 --> 00:17:12,319
adversary can use the reserve of three

385
00:17:12,319 --> 00:17:16,790
to advance this time by three blocks at

386
00:17:16,790 --> 00:17:20,359
the same time there is another parameter

387
00:17:20,359 --> 00:17:22,579
other quantity which we call gap which

388
00:17:22,579 --> 00:17:27,199
says how far away behind is this time

389
00:17:27,199 --> 00:17:32,870
from the leading time of the fork so if

390
00:17:32,870 --> 00:17:40,280
we take the reserve and we subtract the

391
00:17:40,280 --> 00:17:42,380
gap from it we define a quantity which

392
00:17:42,380 --> 00:17:45,770
we call reach and this says how much

393
00:17:45,770 --> 00:17:49,130
this time is behind the leading time in

394
00:17:49,130 --> 00:17:52,850
a fork so written margin are going to be

395
00:17:52,850 --> 00:17:53,690
the two important

396
00:17:53,690 --> 00:17:55,340
quantities in that computer in the

397
00:17:55,340 --> 00:17:57,409
probabilistic analysis that that we will

398
00:17:57,409 --> 00:17:59,320
do the nice thing is that

399
00:17:59,320 --> 00:18:01,429
combinatorially you can show that the

400
00:18:01,429 --> 00:18:03,529
string is for cable if and only if there

401
00:18:03,529 --> 00:18:05,269
is some close fork for which it holds

402
00:18:05,269 --> 00:18:07,820
that the margin is zero at least zero

403
00:18:07,820 --> 00:18:10,309
where the margin is basically you take

404
00:18:10,309 --> 00:18:11,929
the time which is the longest and you

405
00:18:11,929 --> 00:18:13,970
compare it with the one which is second

406
00:18:13,970 --> 00:18:16,700
longest and you try to see what is the

407
00:18:16,700 --> 00:18:22,190
difference between the two so this is

408
00:18:22,190 --> 00:18:25,309
what we show in establishing the

409
00:18:25,309 --> 00:18:27,820
probabilistic experiment that determines

410
00:18:27,820 --> 00:18:30,919
the region margin what happens is that

411
00:18:30,919 --> 00:18:33,080
greets and margin they do like a complex

412
00:18:33,080 --> 00:18:37,039
random walk as new stakeholders are

413
00:18:37,039 --> 00:18:41,269
elected to add the block so when you

414
00:18:41,269 --> 00:18:44,090
have a one which means it's adversarial

415
00:18:44,090 --> 00:18:46,870
what happens is that region margin are

416
00:18:46,870 --> 00:18:52,220
extended by one on the other hand if you

417
00:18:52,220 --> 00:18:54,679
have a zero what we would like to happen

418
00:18:54,679 --> 00:18:58,419
is that reach and margin are decreased

419
00:18:58,419 --> 00:19:00,769
basically it would have been this

420
00:19:00,769 --> 00:19:05,149
setting just this final line here if it

421
00:19:05,149 --> 00:19:06,590
was like that that would have been a

422
00:19:06,590 --> 00:19:08,870
simple random walk but what happens

423
00:19:08,870 --> 00:19:10,700
actually is that this only happens in

424
00:19:10,700 --> 00:19:13,490
one case so written margin decrement in

425
00:19:13,490 --> 00:19:16,970
this case but what happens is that mark

426
00:19:16,970 --> 00:19:19,429
reads will never drop below zero so if

427
00:19:19,429 --> 00:19:21,409
it is 0 it will remain zero because

428
00:19:21,409 --> 00:19:24,889
reads expresses the advantage of the

429
00:19:24,889 --> 00:19:26,600
adversary and now what's very

430
00:19:26,600 --> 00:19:29,720
interesting that happens in this in this

431
00:19:29,720 --> 00:19:33,409
recursive formula is that when the

432
00:19:33,409 --> 00:19:35,659
margin is zero then the reach is

433
00:19:35,659 --> 00:19:37,879
decremented which basically means that

434
00:19:37,879 --> 00:19:40,730
it's possible for the adversary to

435
00:19:40,730 --> 00:19:42,710
compensate for the margin for how much

436
00:19:42,710 --> 00:19:46,519
it is behind by sacrificing reach now if

437
00:19:46,519 --> 00:19:48,320
you take this recursive formula and you

438
00:19:48,320 --> 00:19:50,990
apply it to X to the experiment that

439
00:19:50,990 --> 00:19:52,820
samples the next slot leader what

440
00:19:52,820 --> 00:19:55,039
happens is that is we do have a two

441
00:19:55,039 --> 00:19:57,379
dimensional random walk and these two

442
00:19:57,379 --> 00:19:59,840
dimensional random walk it's kind of

443
00:19:59,840 --> 00:20:02,450
simple when variable rates and margin

444
00:20:02,450 --> 00:20:04,700
are positive and negative respectively

445
00:20:04,700 --> 00:20:07,129
so then the two variables like behave

446
00:20:07,129 --> 00:20:07,440
like

447
00:20:07,440 --> 00:20:09,779
simple random walk but what happens when

448
00:20:09,779 --> 00:20:12,750
margin when reaches positive then margin

449
00:20:12,750 --> 00:20:15,419
gravitates and sticks to zero so here's

450
00:20:15,419 --> 00:20:17,879
a dependency and the two dimensional fit

451
00:20:17,879 --> 00:20:20,250
the do dimensional aspect of this random

452
00:20:20,250 --> 00:20:25,049
walk is revealed so now we have to see

453
00:20:25,049 --> 00:20:27,389
what is the probability that if we take

454
00:20:27,389 --> 00:20:28,980
a long string in this two-dimensional

455
00:20:28,980 --> 00:20:31,919
random walk we're going to end up with a

456
00:20:31,919 --> 00:20:34,830
margin which is at least zero and what

457
00:20:34,830 --> 00:20:36,750
we prove is that this will happen with

458
00:20:36,750 --> 00:20:39,090
very small probability that's going to

459
00:20:39,090 --> 00:20:41,190
be 2 to the minus square root of n times

460
00:20:41,190 --> 00:20:44,100
a constant and the in the key idea is

461
00:20:44,100 --> 00:20:46,620
that we can divide the two-dimensional

462
00:20:46,620 --> 00:20:49,769
space into three areas what we call them

463
00:20:49,769 --> 00:20:52,799
hot volatile and cold what happens is

464
00:20:52,799 --> 00:20:54,870
that the volatile area is the one which

465
00:20:54,870 --> 00:20:57,090
is at the center of it of the two axis

466
00:20:57,090 --> 00:21:00,240
when the margin and reach are close to

467
00:21:00,240 --> 00:21:02,399
zero and that's actually our initial

468
00:21:02,399 --> 00:21:04,679
state and then we're going to have a

469
00:21:04,679 --> 00:21:08,039
cold region which basically when the

470
00:21:08,039 --> 00:21:10,259
margin is negative and that's safe and

471
00:21:10,259 --> 00:21:11,909
then we're going to have a hot region

472
00:21:11,909 --> 00:21:13,470
where basically we've lost again

473
00:21:13,470 --> 00:21:16,799
so what happens in what we prove is that

474
00:21:16,799 --> 00:21:19,200
if you start from the volatile state as

475
00:21:19,200 --> 00:21:22,039
it is the case in our game the

476
00:21:22,039 --> 00:21:24,000
probability of moving to the hot state

477
00:21:24,000 --> 00:21:27,690
is negatively close to zero to the minus

478
00:21:27,690 --> 00:21:29,309
square root of n whereas there is a

479
00:21:29,309 --> 00:21:31,049
concert probability of moving to cold

480
00:21:31,049 --> 00:21:33,929
and the key observation is that once you

481
00:21:33,929 --> 00:21:36,029
move to cold then you will remain to

482
00:21:36,029 --> 00:21:37,679
call basically random walk has moved

483
00:21:37,679 --> 00:21:40,950
away from the volatile and hot territory

484
00:21:40,950 --> 00:21:43,980
and now we are safe given that all this

485
00:21:43,980 --> 00:21:46,080
happens with error to the minus square

486
00:21:46,080 --> 00:21:48,059
root of N and we have a cost probability

487
00:21:48,059 --> 00:21:49,919
of doing this transition what we need to

488
00:21:49,919 --> 00:21:52,590
do is divide this into square root of n

489
00:21:52,590 --> 00:21:54,539
regions and then we can see that with

490
00:21:54,539 --> 00:21:56,690
very high probability in one of those

491
00:21:56,690 --> 00:21:59,700
steps of the process you're going to

492
00:21:59,700 --> 00:22:01,230
transition from the volatile to cold

493
00:22:01,230 --> 00:22:03,779
State and basically that means that you

494
00:22:03,779 --> 00:22:07,139
are safe so finally this concludes that

495
00:22:07,139 --> 00:22:08,879
the density of this work of strings is

496
00:22:08,879 --> 00:22:12,870
just that so armed with this now we show

497
00:22:12,870 --> 00:22:15,330
how we can actually go to the dynamic

498
00:22:15,330 --> 00:22:17,399
State case the dynamics take what

499
00:22:17,399 --> 00:22:20,999
happens is that we run an instance

500
00:22:20,999 --> 00:22:24,479
of the basic protocol for a certain

501
00:22:24,479 --> 00:22:27,329
number of slots assuming some initial

502
00:22:27,329 --> 00:22:29,009
randomness seed which is part of the

503
00:22:29,009 --> 00:22:32,249
Genesis block and now let's assume that

504
00:22:32,249 --> 00:22:34,829
we have a magic beacon that when we

505
00:22:34,829 --> 00:22:37,649
reach that end of that sequence of

506
00:22:37,649 --> 00:22:40,349
blocks it will give us a new seed that

507
00:22:40,349 --> 00:22:43,799
we can use to sample again from the

508
00:22:43,799 --> 00:22:46,289
stakeholder distribution so the beacon

509
00:22:46,289 --> 00:22:48,419
comes it gives us another seed and now

510
00:22:48,419 --> 00:22:51,509
and that's what neat about this we can

511
00:22:51,509 --> 00:22:55,229
use the blockchain itself to refresh our

512
00:22:55,229 --> 00:22:58,919
stakeholder distribution and use the new

513
00:22:58,919 --> 00:23:01,349
stakeholder distribution that has arisen

514
00:23:01,349 --> 00:23:05,099
as the stake has shifted on this initial

515
00:23:05,099 --> 00:23:07,649
sequence of blocks so here you can see

516
00:23:07,649 --> 00:23:09,839
like this self-referential aspect that

517
00:23:09,839 --> 00:23:11,759
we use the block thing that we have here

518
00:23:11,759 --> 00:23:15,149
the short segment and we can reseed that

519
00:23:15,149 --> 00:23:17,729
process using the bacon choosing a new

520
00:23:17,729 --> 00:23:20,159
stakeholder distribution now this is

521
00:23:20,159 --> 00:23:22,289
used now with a new seed to create

522
00:23:22,289 --> 00:23:25,079
another stakeholder distribution and the

523
00:23:25,079 --> 00:23:28,619
protocol continues so of course in

524
00:23:28,619 --> 00:23:32,039
practice we do not have such a trusted

525
00:23:32,039 --> 00:23:34,529
bacon so how do we how can we solve that

526
00:23:34,529 --> 00:23:37,319
and the answer is coming from God or

527
00:23:37,319 --> 00:23:39,929
more specifically guaranteed output

528
00:23:39,929 --> 00:23:42,659
delivery coin-tossing so guaranteed up

529
00:23:42,659 --> 00:23:44,459
with delivery coin tossing or God coin

530
00:23:44,459 --> 00:23:47,069
tossing has this godly property that it

531
00:23:47,069 --> 00:23:50,009
guarantees the output basically that

532
00:23:50,009 --> 00:23:51,989
means that if you have honest majority

533
00:23:51,989 --> 00:23:53,969
you are guaranteed to produce an

534
00:23:53,969 --> 00:23:56,879
unbiased seed so what we have to do is

535
00:23:56,879 --> 00:23:59,429
use this little short opportunity of

536
00:23:59,429 --> 00:24:02,039
time we have to create this blocks in

537
00:24:02,039 --> 00:24:05,579
segments so that we can run this God

538
00:24:05,579 --> 00:24:08,249
coin tossing protocol that is going to

539
00:24:08,249 --> 00:24:11,009
be enough to produce the seed for the

540
00:24:11,009 --> 00:24:15,449
next epoch and that is going to be done

541
00:24:15,449 --> 00:24:16,919
by using this tool called publicly

542
00:24:16,919 --> 00:24:18,569
verifiable secret sharing which is

543
00:24:18,569 --> 00:24:21,029
something that we can construct using

544
00:24:21,029 --> 00:24:24,839
simple cryptographic tools so based on

545
00:24:24,839 --> 00:24:27,299
all that we finally have our proof

546
00:24:27,299 --> 00:24:29,819
ledger objective and even though I don't

547
00:24:29,819 --> 00:24:31,169
have the time to go over the detail of

548
00:24:31,169 --> 00:24:33,509
the proof what we show is that they were

549
00:24:33,509 --> 00:24:34,919
a borås protocol

550
00:24:34,919 --> 00:24:37,000
assuming a certain restriction on how

551
00:24:37,000 --> 00:24:39,490
adaptive is the adversary we can prove

552
00:24:39,490 --> 00:24:41,080
the properties of common prefix same

553
00:24:41,080 --> 00:24:42,429
quality and say growth that you've heard

554
00:24:42,429 --> 00:24:45,399
in previous talks with negligible error

555
00:24:45,399 --> 00:24:47,529
in K which means that a Burroughs will

556
00:24:47,529 --> 00:24:50,399
give rise to a robust transaction letter

557
00:24:50,399 --> 00:24:52,539
so some things I don't have the time to

558
00:24:52,539 --> 00:24:54,429
cover in this talk but you can find in

559
00:24:54,429 --> 00:24:57,070
the paper is that on top of what we have

560
00:24:57,070 --> 00:24:59,710
we also provide an incentive structure

561
00:24:59,710 --> 00:25:01,659
for the protocol based on weights and

562
00:25:01,659 --> 00:25:04,480
I'm going to skip those slides now but

563
00:25:04,480 --> 00:25:06,279
I'm just going to focus on this final

564
00:25:06,279 --> 00:25:08,289
point we actually prove that for this

565
00:25:08,289 --> 00:25:10,480
incentive reward mechanism that we have

566
00:25:10,480 --> 00:25:13,179
we can prove that running the robots

567
00:25:13,179 --> 00:25:14,559
protocol is an approximate Nash

568
00:25:14,559 --> 00:25:17,529
equilibrium and the good feature about

569
00:25:17,529 --> 00:25:19,779
this is that contrary to Bitcoin we can

570
00:25:19,779 --> 00:25:22,149
actually establish this incentive

571
00:25:22,149 --> 00:25:25,179
compatibility of the protocol some

572
00:25:25,179 --> 00:25:27,210
further details and I'm gonna finish

573
00:25:27,210 --> 00:25:31,539
with some performance characteristics

574
00:25:31,539 --> 00:25:33,159
that you can see here this is an

575
00:25:33,159 --> 00:25:35,559
implementation using 40 nodes in the

576
00:25:35,559 --> 00:25:37,600
Amazon Cloud we have implemented our

577
00:25:37,600 --> 00:25:38,980
protocol and we've benchmarked it and

578
00:25:38,980 --> 00:25:40,419
you can see here appreciate the

579
00:25:40,419 --> 00:25:42,850
efficiency of the proof of stake

580
00:25:42,850 --> 00:25:44,889
protocol in this case the transaction

581
00:25:44,889 --> 00:25:48,490
per second is about 250 in this simple

582
00:25:48,490 --> 00:25:49,929
implementation that we have you can

583
00:25:49,929 --> 00:25:52,080
compare this with seven eight or nine

584
00:25:52,080 --> 00:25:54,279
transactions per second that you might

585
00:25:54,279 --> 00:25:57,519
get from a protocol like Bitcoin so some

586
00:25:57,519 --> 00:26:00,039
upcoming work that we have is solving to

587
00:26:00,039 --> 00:26:01,389
open questions that were left in this

588
00:26:01,389 --> 00:26:03,669
one so send asynchronous setting or

589
00:26:03,669 --> 00:26:06,399
basically parcel synchrony and adaptive

590
00:26:06,399 --> 00:26:08,049
corruption is dealt with in an upcoming

591
00:26:08,049 --> 00:26:10,659
work joined with Brad David Pendergast

592
00:26:10,659 --> 00:26:13,830
and Alex Russell and you can find this

593
00:26:13,830 --> 00:26:17,649
on eBay so further work is here and you

594
00:26:17,649 --> 00:26:20,470
can find the talk you can find a talk

595
00:26:20,470 --> 00:26:24,190
online and that time is running out but

596
00:26:24,190 --> 00:26:26,169
this is related work which you can find

597
00:26:26,169 --> 00:26:28,480
a comparison in the init version of the

598
00:26:28,480 --> 00:26:29,889
paper as well as in the proceedings and

599
00:26:29,889 --> 00:26:31,899
this brings me to the end thank you very

600
00:26:31,899 --> 00:26:35,070
much for your attention

601
00:26:35,630 --> 00:26:37,690
you

