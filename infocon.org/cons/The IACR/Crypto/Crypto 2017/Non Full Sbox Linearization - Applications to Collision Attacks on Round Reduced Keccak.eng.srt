1
00:00:05,259 --> 00:00:08,840
the tag presents collision attacks run

2
00:00:08,840 --> 00:00:11,450
reduce the key check using none for sbox

3
00:00:11,450 --> 00:00:16,190
Minear ization the Tuck is divided into

4
00:00:16,190 --> 00:00:18,140
five parts the first part briefly

5
00:00:18,140 --> 00:00:20,420
reviews the pie Cochrane's the second

6
00:00:20,420 --> 00:00:23,030
part provides an overview of our

7
00:00:23,030 --> 00:00:26,150
collision attacks part three elaborate

8
00:00:26,150 --> 00:00:29,980
non-free sports linearization part four

9
00:00:29,980 --> 00:00:33,140
introduces GPU implementations the last

10
00:00:33,140 --> 00:00:40,399
parts summarizes the results ok hash

11
00:00:40,399 --> 00:00:43,219
functions and important parts in

12
00:00:43,219 --> 00:00:46,940
important type of primitives use encrypt

13
00:00:46,940 --> 00:00:50,749
systems the most widely used hash

14
00:00:50,749 --> 00:00:54,289
functions are the chef Emmalee the first

15
00:00:54,289 --> 00:00:58,399
member of this family is Shallon however

16
00:00:58,399 --> 00:01:01,190
is theoretical collision attacks were

17
00:01:01,190 --> 00:01:06,830
found in 2005 where his real collisions

18
00:01:06,830 --> 00:01:08,810
were found early this year which is

19
00:01:08,810 --> 00:01:12,020
another crypto paper to develop a new

20
00:01:12,020 --> 00:01:15,590
cryptographic hash function nests opened

21
00:01:15,590 --> 00:01:19,729
a public a computation in 2007 the

22
00:01:19,729 --> 00:01:22,070
competition received dozens of

23
00:01:22,070 --> 00:01:26,200
submissions after years of evaluation

24
00:01:26,200 --> 00:01:29,500
catch egg was selected as the winner and

25
00:01:29,500 --> 00:01:37,130
standardized in 2015 a cheque adopts the

26
00:01:37,130 --> 00:01:39,320
sponge construction the sponge

27
00:01:39,320 --> 00:01:41,679
construction as a framework for

28
00:01:41,679 --> 00:01:43,960
constructing hash functions from

29
00:01:43,960 --> 00:01:45,369
permutations

30
00:01:45,369 --> 00:01:49,520
it uses a bits of underlying permutation

31
00:01:49,520 --> 00:01:54,020
f there are two parameters beta rate our

32
00:01:54,020 --> 00:02:00,249
capacity C the sum of our industry is B

33
00:02:00,249 --> 00:02:03,140
Tkaczyk takes in a message and and

34
00:02:03,140 --> 00:02:07,219
output a digest of debbie's before

35
00:02:07,219 --> 00:02:10,160
processing the message is padded and

36
00:02:10,160 --> 00:02:13,460
then split into our bait blocks each

37
00:02:13,460 --> 00:02:17,240
block is export to the first RB

38
00:02:17,240 --> 00:02:21,940
before applying the permutation earth

39
00:02:23,800 --> 00:02:27,830
Tkaczyk itself has four versions Tkaczyk

40
00:02:27,830 --> 00:02:38,750
an Enka be 224 256 384 512 sha-3

41
00:02:38,750 --> 00:02:41,960
has six versions including two

42
00:02:41,960 --> 00:02:44,860
extendable outboard hash functions

43
00:02:44,860 --> 00:02:53,510
chicane and can be 128 256 to promote

44
00:02:53,510 --> 00:02:56,300
crypt analysis against decay check the

45
00:02:56,300 --> 00:02:59,210
designers launched challenges with

46
00:02:59,210 --> 00:03:03,320
regarding and collision attacks in the

47
00:03:03,320 --> 00:03:06,620
preimage attacks where versions of lower

48
00:03:06,620 --> 00:03:10,250
security levels were proposed these

49
00:03:10,250 --> 00:03:14,540
versions were denoted by a check our C

50
00:03:14,540 --> 00:03:19,940
and not D D is the digest size the

51
00:03:19,940 --> 00:03:22,730
underlying permutation used in Tkaczyk

52
00:03:22,730 --> 00:03:26,420
is Kartika check f it has an internal

53
00:03:26,420 --> 00:03:28,670
state of one thousand and six hundred

54
00:03:28,670 --> 00:03:32,270
bees which can be seen as five times

55
00:03:32,270 --> 00:03:37,640
five array of 64-bit lines it raised 24

56
00:03:37,640 --> 00:03:41,000
runs it's rank consists of five steps

57
00:03:41,000 --> 00:03:45,800
theta Rho PI Chi and Judah Chi is the

58
00:03:45,800 --> 00:03:50,390
only nonlinear operation before in the

59
00:03:50,390 --> 00:03:52,850
introduction of these steps let's review

60
00:03:52,850 --> 00:03:55,400
some notations defined by the designers

61
00:03:55,400 --> 00:03:58,820
look at the figure on the right suppose

62
00:03:58,820 --> 00:04:04,280
it is the internal side the yellow part

63
00:04:04,280 --> 00:04:09,230
is called a slice and the purple part is

64
00:04:09,230 --> 00:04:13,040
called a column and the blue part is

65
00:04:13,040 --> 00:04:16,100
called a lane and the sky blue part is

66
00:04:16,100 --> 00:04:24,080
called a row Sita has two columns to the

67
00:04:24,080 --> 00:04:27,590
current debate so it's out birth date

68
00:04:27,590 --> 00:04:30,770
depends on eleven input

69
00:04:30,770 --> 00:04:35,729
mm if it's Colin has even parity then

70
00:04:35,729 --> 00:04:39,569
the sitter acts as the identity in this

71
00:04:39,569 --> 00:04:42,360
case we say the state is in the :

72
00:04:42,360 --> 00:04:46,490
periodic kernel civic ANOVA shot

73
00:04:46,490 --> 00:04:53,370
hi Steve isla Naval rotations PI step is

74
00:04:53,370 --> 00:04:58,499
the permutation arm lanes hi Steve

75
00:04:58,499 --> 00:05:02,819
applies a 5-bit s box to each row from

76
00:05:02,819 --> 00:05:06,270
the algebraic expression it can be seen

77
00:05:06,270 --> 00:05:10,169
the IOT break degree of Kai as to which

78
00:05:10,169 --> 00:05:14,669
is quite a low Judah Judah as a rung the

79
00:05:14,669 --> 00:05:17,430
constraint to the first line to destroy

80
00:05:17,430 --> 00:05:23,399
symmetry suppose the internal state is a

81
00:05:23,399 --> 00:05:27,870
2 5 x 5 array then the run function can

82
00:05:27,870 --> 00:05:30,839
be described in this way kept in mind

83
00:05:30,839 --> 00:05:33,300
Chi is the only nonlinear operation and

84
00:05:33,300 --> 00:05:36,779
we define the compensation of theta Rho

85
00:05:36,779 --> 00:05:41,610
PI to be L Judah in this talk is omitted

86
00:05:41,610 --> 00:05:44,370
since it plays no essential role in our

87
00:05:44,370 --> 00:05:49,620
attacks the major contribution of our

88
00:05:49,620 --> 00:05:53,219
work is that we propose to practical

89
00:05:53,219 --> 00:05:55,379
collision attacks and increase the

90
00:05:55,379 --> 00:06:02,309
number of ramps attacked to 6 party to

91
00:06:02,309 --> 00:06:06,089
an overview of our attacks our collision

92
00:06:06,089 --> 00:06:09,389
attacks have two stages the connecting

93
00:06:09,389 --> 00:06:11,759
stage and the brute-force searching

94
00:06:11,759 --> 00:06:15,029
stage in the connecting stage one

95
00:06:15,029 --> 00:06:16,649
constructs an another one round

96
00:06:16,649 --> 00:06:19,529
connector and gets a subspace of

97
00:06:19,529 --> 00:06:22,469
messages by passing the first in our one

98
00:06:22,469 --> 00:06:25,789
runs in the brute-force searching stage

99
00:06:25,789 --> 00:06:29,009
one tries to find a gliding hair

100
00:06:29,009 --> 00:06:31,050
following the ladder and not to run the

101
00:06:31,050 --> 00:06:34,789
differential trail by brute force

102
00:06:35,330 --> 00:06:38,279
supposed not to run the differential

103
00:06:38,279 --> 00:06:41,009
trail has imported difference data Si

104
00:06:41,009 --> 00:06:43,100
and output a difference

105
00:06:43,100 --> 00:06:46,160
that is Oh then the NI one round

106
00:06:46,160 --> 00:06:49,490
connector is a procedure which produces

107
00:06:49,490 --> 00:06:53,480
message pairs and two M 1 such that the

108
00:06:53,480 --> 00:06:55,990
difference after an hour 1 grams is

109
00:06:55,990 --> 00:07:04,820
exactly data SI @ FS e 2012 Dina dong

110
00:07:04,820 --> 00:07:07,010
coma and Shamir proposed the one round

111
00:07:07,010 --> 00:07:09,850
connectors the one round connector is

112
00:07:09,850 --> 00:07:12,050
constructed by processing linear

113
00:07:12,050 --> 00:07:16,070
equations in the one round connector two

114
00:07:16,070 --> 00:07:18,410
major properties of the icebergs are

115
00:07:18,410 --> 00:07:21,980
used property when given the output

116
00:07:21,980 --> 00:07:25,220
difference the set of possible imported

117
00:07:25,220 --> 00:07:29,000
difference contains at least 5

118
00:07:29,000 --> 00:07:33,340
2-dimensional spine affine subspace

119
00:07:33,910 --> 00:07:36,920
property to given the input output the

120
00:07:36,920 --> 00:07:40,580
differences the solution state forms an

121
00:07:40,580 --> 00:07:44,120
affine subspace this is an example for

122
00:07:44,120 --> 00:07:50,000
property to supposed both the inputs

123
00:07:50,000 --> 00:07:53,270
output differences are 0 1 then the DDT

124
00:07:53,270 --> 00:07:59,170
injury is 8 the solution set V forms an

125
00:07:59,170 --> 00:08:02,510
3-dimensional affine subspace which can

126
00:08:02,510 --> 00:08:07,850
be defined by these two equations based

127
00:08:07,850 --> 00:08:10,520
on these two properties the 1 round

128
00:08:10,520 --> 00:08:13,570
connector proceeds in two phases

129
00:08:13,570 --> 00:08:16,310
suppose the input the difference of the

130
00:08:16,310 --> 00:08:20,300
protégée frames of Kai beta I alpha I

131
00:08:20,300 --> 00:08:24,800
then in the difference of phase 1 fence

132
00:08:24,800 --> 00:08:27,170
a subspace of important difference

133
00:08:27,170 --> 00:08:30,260
better theorem and in the value of phase

134
00:08:30,260 --> 00:08:35,539
by fixing better 0 one obtains a service

135
00:08:35,539 --> 00:08:38,570
base of import values that leads you

136
00:08:38,570 --> 00:08:45,980
data si a dagger equipped 2017 Chow at

137
00:08:45,980 --> 00:08:46,520
all

138
00:08:46,520 --> 00:08:49,400
extended the one round connectors to two

139
00:08:49,400 --> 00:08:52,160
round connectors by fully linearizing

140
00:08:52,160 --> 00:08:56,000
the first round let's show how to

141
00:08:56,000 --> 00:08:57,020
linearize

142
00:08:57,020 --> 00:09:01,610
as parks by confining the inputs to the

143
00:09:01,610 --> 00:09:06,800
set V V contains four elements which can

144
00:09:06,800 --> 00:09:10,780
be defined by these three equations

145
00:09:17,560 --> 00:09:22,190
these three equations the in the S box

146
00:09:22,190 --> 00:09:25,460
is equivalent to the following linear

147
00:09:25,460 --> 00:09:33,350
mapping however there are limitations of

148
00:09:33,350 --> 00:09:36,800
current techniques first of all it's

149
00:09:36,800 --> 00:09:40,100
five bits active s-works allows an

150
00:09:40,100 --> 00:09:43,370
affine subspace solution of dimension at

151
00:09:43,370 --> 00:09:47,420
most two consequently for linearization

152
00:09:47,420 --> 00:09:49,460
of two runs is impossible

153
00:09:49,460 --> 00:09:52,970
sames three over five degree of freedom

154
00:09:52,970 --> 00:09:54,890
is lasts in eight rounds of

155
00:09:54,890 --> 00:09:58,520
linearization so it is also impossible

156
00:09:58,520 --> 00:10:02,980
to construct the three round connectors

157
00:10:02,980 --> 00:10:07,160
to overcome these limitations we follow

158
00:10:07,160 --> 00:10:10,300
these two directions for improvements

159
00:10:10,300 --> 00:10:14,420
first we try to save degrees of freedom

160
00:10:14,420 --> 00:10:18,220
by a logging non-active s-boxes and

161
00:10:18,220 --> 00:10:23,840
partial linearization second we develop

162
00:10:23,840 --> 00:10:26,960
a faster implementations of K check for

163
00:10:26,960 --> 00:10:29,180
finding better differential trails as

164
00:10:29,180 --> 00:10:31,910
well as debating harbours the brute

165
00:10:31,910 --> 00:10:34,580
force stage sames

166
00:10:34,580 --> 00:10:37,310
finding differential trails and the

167
00:10:37,310 --> 00:10:38,960
brute force searching our most

168
00:10:38,960 --> 00:10:42,670
time-consuming in the attacks

169
00:10:42,940 --> 00:10:45,290
part three nonetheless works

170
00:10:45,290 --> 00:10:50,750
linearization in the construction of two

171
00:10:50,750 --> 00:10:53,750
round connectors once the differences

172
00:10:53,750 --> 00:10:57,770
alpha I Bella I are fixed an equation

173
00:10:57,770 --> 00:11:00,710
system over the import value of Chi can

174
00:11:00,710 --> 00:11:03,470
be constructed respectively for the

175
00:11:03,470 --> 00:11:06,260
first Chi end of the second kind using

176
00:11:06,260 --> 00:11:10,450
the property to of the sbox

177
00:11:10,689 --> 00:11:15,680
here M is the equation system over the

178
00:11:15,680 --> 00:11:20,389
input value of of the first Chi and is a

179
00:11:20,389 --> 00:11:23,389
is the equation system of the input

180
00:11:23,389 --> 00:11:27,730
value of the second Chi from is a and

181
00:11:27,730 --> 00:11:30,470
equivalent assistant your Y can be

182
00:11:30,470 --> 00:11:31,339
derived

183
00:11:31,339 --> 00:11:35,029
since between they and why is the Nina

184
00:11:35,029 --> 00:11:38,509
my pin air to construct a true round

185
00:11:38,509 --> 00:11:41,899
connector these two equation system am

186
00:11:41,899 --> 00:11:46,699
and you I should be merged fully

187
00:11:46,699 --> 00:11:50,749
linearizing the first round is a MEMS to

188
00:11:50,749 --> 00:11:53,689
this end however it is not a necessary

189
00:11:53,689 --> 00:11:55,129
to do so

190
00:11:55,129 --> 00:11:59,300
seems some base of why mean not involved

191
00:11:59,300 --> 00:12:06,230
maybe not involved in UI before move the

192
00:12:06,230 --> 00:12:09,680
arm let's introduce some notations let

193
00:12:09,680 --> 00:12:12,889
you be of like vector where UI is well

194
00:12:12,889 --> 00:12:17,540
if Y is involved in UI otherwise u is 0

195
00:12:17,540 --> 00:12:21,050
let capital u be a vector of five bit

196
00:12:21,050 --> 00:12:25,809
values if capital UI is not a zero then

197
00:12:25,809 --> 00:12:29,600
the base of y marked by UI should be

198
00:12:29,600 --> 00:12:33,199
linearized but that is to say for the

199
00:12:33,199 --> 00:12:36,139
base which are not marked by UI there is

200
00:12:36,139 --> 00:12:41,720
no needed to linearize them we have two

201
00:12:41,720 --> 00:12:45,290
observations observation one for a non

202
00:12:45,290 --> 00:12:50,029
active as part if u is zero then it does

203
00:12:50,029 --> 00:12:54,290
not require any linearization if your I

204
00:12:54,290 --> 00:12:59,179
belongs to set T then at least one

205
00:12:59,179 --> 00:13:02,360
equation should be edited to am to

206
00:13:02,360 --> 00:13:05,139
linearize the output of is marked by UI

207
00:13:05,139 --> 00:13:08,269
otherwise at least two equations are

208
00:13:08,269 --> 00:13:13,759
required this table shows the number of

209
00:13:13,759 --> 00:13:16,339
linear equations required for

210
00:13:16,339 --> 00:13:18,019
linearizing certain number of out

211
00:13:18,019 --> 00:13:24,140
purpose observation to

212
00:13:24,140 --> 00:13:27,620
for an activist box if the data TN 3 is

213
00:13:27,620 --> 00:13:31,460
8 then 4 out of 5 outer pas de base are

214
00:13:31,460 --> 00:13:34,700
already Nene if the input is chosen from

215
00:13:34,700 --> 00:13:38,180
the solution set for example if the

216
00:13:38,180 --> 00:13:41,870
input output the differences are 0 there

217
00:13:41,870 --> 00:13:46,490
are 1 then the data entry is 8 if the

218
00:13:46,490 --> 00:13:49,430
input is chosen from the solution set

219
00:13:49,430 --> 00:13:51,950
then the algebraic expression of the

220
00:13:51,950 --> 00:13:52,670
sbox

221
00:13:52,670 --> 00:13:57,620
are reduced at this as can be seen by 1

222
00:13:57,620 --> 00:14:02,000
is the only nonlinear bed if y1 is not

223
00:14:02,000 --> 00:14:04,130
involved in the equation system

224
00:14:04,130 --> 00:14:08,300
ey then two equations are enough for the

225
00:14:08,300 --> 00:14:13,310
linearization this table summarizes the

226
00:14:13,310 --> 00:14:14,870
two observations

227
00:14:14,870 --> 00:14:17,180
as can be seen there are many cases

228
00:14:17,180 --> 00:14:20,890
where less than three equations are used

229
00:14:20,890 --> 00:14:25,010
so compared with 4s Burke's

230
00:14:25,010 --> 00:14:27,410
linearization where at least three

231
00:14:27,410 --> 00:14:30,760
equations are used now for sbox

232
00:14:30,760 --> 00:14:33,770
linearization consumes consume less

233
00:14:33,770 --> 00:14:38,540
degrees of freedom from the table it is

234
00:14:38,540 --> 00:14:41,920
also learned that now for non active

235
00:14:41,920 --> 00:14:45,170
s-boxes probably have advantage over

236
00:14:45,170 --> 00:14:52,310
active s-boxes however if there are more

237
00:14:52,310 --> 00:14:55,730
non active s-boxes it would be harder to

238
00:14:55,730 --> 00:14:58,880
construct connectors but once the

239
00:14:58,880 --> 00:15:01,250
connector is constructed is a

240
00:15:01,250 --> 00:15:04,610
constructed successfully solution set

241
00:15:04,610 --> 00:15:06,980
with higher dimension would be obtained

242
00:15:06,980 --> 00:15:11,180
for the brutal for searching stage what

243
00:15:11,180 --> 00:15:15,710
we do is we find the best number of non

244
00:15:15,710 --> 00:15:22,520
active s-boxes by experiments another

245
00:15:22,520 --> 00:15:24,650
technique for saving decrease of a freed

246
00:15:24,650 --> 00:15:25,510
innescourt

247
00:15:25,510 --> 00:15:29,450
adaptive connectors adaptive connectors

248
00:15:29,450 --> 00:15:32,420
are those ones where some degree of

249
00:15:32,420 --> 00:15:35,150
readin that linearized the nonlinear

250
00:15:35,150 --> 00:15:37,730
layer are reused

251
00:15:37,730 --> 00:15:41,769
for example suppose we want to linearize

252
00:15:41,769 --> 00:15:46,639
the output a bit y0 by fixing the value

253
00:15:46,639 --> 00:15:53,300
of x1 here x1 can be fixed at you either

254
00:15:53,300 --> 00:15:56,779
1 or 0 if we fix it to 0 this time we

255
00:15:56,779 --> 00:15:58,760
can fix a to u1 next time

256
00:15:58,760 --> 00:16:02,240
so the one page freed degree of freedom

257
00:16:02,240 --> 00:16:08,990
can be reused and that's not consumed by

258
00:16:08,990 --> 00:16:12,260
combining techniques of non-forest parks

259
00:16:12,260 --> 00:16:15,829
linearization and adaptive connectors we

260
00:16:15,829 --> 00:16:18,470
could extend the two round connectors to

261
00:16:18,470 --> 00:16:21,820
three round connectors

262
00:16:28,160 --> 00:16:33,530
sorry for faster implementations with

263
00:16:33,530 --> 00:16:37,540
amateur GPU we developed two versions

264
00:16:37,540 --> 00:16:40,310
for someone for finding different

265
00:16:40,310 --> 00:16:44,270
softwares versus you for finding real

266
00:16:44,270 --> 00:16:46,700
collisions this table shows that

267
00:16:46,700 --> 00:16:50,330
benchmark of our implementation of

268
00:16:50,330 --> 00:16:53,870
Kerchak in CUDA the experiments show

269
00:16:53,870 --> 00:17:00,080
that GT x1 0 7 0 GPU can be 256 times

270
00:17:00,080 --> 00:17:05,140
faster than a CPU core with our GPU

271
00:17:05,140 --> 00:17:07,490
implementations we find better different

272
00:17:07,490 --> 00:17:16,150
software's as listed in this table here

273
00:17:16,150 --> 00:17:19,939
the blue numbers affects the execution

274
00:17:19,939 --> 00:17:22,670
time of connectors and the purple

275
00:17:22,670 --> 00:17:25,160
numbers determines the time complexity

276
00:17:25,160 --> 00:17:31,460
for the protocol searching stage in the

277
00:17:31,460 --> 00:17:34,280
end we find a two practical collision

278
00:17:34,280 --> 00:17:36,860
attacks one for the five round connector

279
00:17:36,860 --> 00:17:40,940
24 and the other is a six round instance

280
00:17:40,940 --> 00:17:45,950
of catch a collision challenges this

281
00:17:45,950 --> 00:17:48,320
table shows the current status of the

282
00:17:48,320 --> 00:17:54,070
cachaca collision challenges in summary

283
00:17:54,070 --> 00:17:57,520
we develop the two types of techniques

284
00:17:57,520 --> 00:18:00,860
for saving degrees of freedom one is

285
00:18:00,860 --> 00:18:03,830
numb for a sparks the linearization the

286
00:18:03,830 --> 00:18:07,700
other is adaptive connectors we also

287
00:18:07,700 --> 00:18:10,430
develop the GPU implementations of K

288
00:18:10,430 --> 00:18:12,890
check which gain better computing

289
00:18:12,890 --> 00:18:17,150
capacity over CPU implementations the

290
00:18:17,150 --> 00:18:19,310
main results are three round connectors

291
00:18:19,310 --> 00:18:23,110
and two new practical collision attacks

292
00:18:23,110 --> 00:18:26,830
thank you for your attention

293
00:18:28,160 --> 00:18:30,220
you

