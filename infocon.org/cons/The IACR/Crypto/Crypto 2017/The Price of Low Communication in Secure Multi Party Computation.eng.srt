1
00:00:04,880 --> 00:00:07,100
so I'm going to use the alternative tidy

2
00:00:07,100 --> 00:00:09,320
for the stock which is the quest for

3
00:00:09,320 --> 00:00:11,719
abound that was not rationale which will

4
00:00:11,719 --> 00:00:13,280
become clear a mislead or two

5
00:00:13,280 --> 00:00:15,469
so yeah this is going work with one car

6
00:00:15,469 --> 00:00:17,300
I'll leave a Lisa you've Alex I in Rafi

7
00:00:17,300 --> 00:00:19,910
Ostrovsky and we're going to be looking

8
00:00:19,910 --> 00:00:21,830
at the problem of secure multi-party

9
00:00:21,830 --> 00:00:26,359
computation MPC we have n parties each

10
00:00:26,359 --> 00:00:27,920
party has private data and they want to

11
00:00:27,920 --> 00:00:30,380
perform some joint computation by

12
00:00:30,380 --> 00:00:32,330
running a protocol where the exchange

13
00:00:32,330 --> 00:00:33,980
messages over some communication network

14
00:00:33,980 --> 00:00:35,360
here it's gonna be point-to-point

15
00:00:35,360 --> 00:00:37,460
samples and the protocol should be

16
00:00:37,460 --> 00:00:39,469
secure meaning that even if an adversary

17
00:00:39,469 --> 00:00:41,780
goes and corrupts parties he cannot

18
00:00:41,780 --> 00:00:44,539
disrupt privacy namely he doesn't learn

19
00:00:44,539 --> 00:00:46,039
anything he's not supposed to or

20
00:00:46,039 --> 00:00:47,120
correctness

21
00:00:47,120 --> 00:00:48,920
you know the onus parties to get the

22
00:00:48,920 --> 00:00:52,340
correct output so more concretely here

23
00:00:52,340 --> 00:00:53,719
we're going to be looking at information

24
00:00:53,719 --> 00:00:55,879
theoretic MPC with the dishonest

25
00:00:55,879 --> 00:00:57,739
majority and no setup so we have M

26
00:00:57,739 --> 00:00:59,750
parties and - one of them might be

27
00:00:59,750 --> 00:01:02,449
corrupted and they have no setup what do

28
00:01:02,449 --> 00:01:04,340
we know about this setting we know we

29
00:01:04,340 --> 00:01:07,130
cannot do it so it's impossible to do it

30
00:01:07,130 --> 00:01:09,110
even for the simplest corruption with

31
00:01:09,110 --> 00:01:11,390
the semi honest corruption so Arthur

32
00:01:11,390 --> 00:01:14,540
walk-arounds likely there are you can

33
00:01:14,540 --> 00:01:16,610
either I assume a trusted set up but

34
00:01:16,610 --> 00:01:18,710
this means we need trust which we don't

35
00:01:18,710 --> 00:01:19,130
want

36
00:01:19,130 --> 00:01:21,500
or we can resort to computational

37
00:01:21,500 --> 00:01:24,799
security but even there if we want

38
00:01:24,799 --> 00:01:26,030
something strong and like strong

39
00:01:26,030 --> 00:01:27,619
composition guarantees like you see

40
00:01:27,619 --> 00:01:29,750
security we will again need a set up and

41
00:01:29,750 --> 00:01:32,950
that's also something we want to avoid

42
00:01:32,950 --> 00:01:37,100
another idea is the parties are nowadays

43
00:01:37,100 --> 00:01:38,299
servers they are connected to the

44
00:01:38,299 --> 00:01:40,070
internet which is a huge network of

45
00:01:40,070 --> 00:01:42,290
parties itself so maybe they can use the

46
00:01:42,290 --> 00:01:43,549
help of these servers to do the

47
00:01:43,549 --> 00:01:45,590
computation so this naturally leads to

48
00:01:45,590 --> 00:01:48,290
the so-called MPC in the client-server

49
00:01:48,290 --> 00:01:50,960
model where the parties are now

50
00:01:50,960 --> 00:01:52,369
clients that's how we're going to call

51
00:01:52,369 --> 00:01:53,659
them they have their inputs they want to

52
00:01:53,659 --> 00:01:55,399
perform a computation of the function

53
00:01:55,399 --> 00:01:58,670
and we have a huge with respects to the

54
00:01:58,670 --> 00:02:01,750
number of clients number of servers and

55
00:02:01,750 --> 00:02:03,950
because this number of servers is huge

56
00:02:03,950 --> 00:02:06,110
the goal is not to use all of them and

57
00:02:06,110 --> 00:02:08,119
not to communicate two months so

58
00:02:08,119 --> 00:02:09,350
essentially we won't sub linear

59
00:02:09,350 --> 00:02:11,840
communication complexity in the size of

60
00:02:11,840 --> 00:02:13,250
the server set in the size of the

61
00:02:13,250 --> 00:02:16,130
internet and in this work we consider

62
00:02:16,130 --> 00:02:18,440
two clients and n servers but

63
00:02:18,440 --> 00:02:20,330
whatever I say here very easily extends

64
00:02:20,330 --> 00:02:23,270
to the case of a constant size client

65
00:02:23,270 --> 00:02:29,000
said with dishonest majority all right

66
00:02:29,000 --> 00:02:30,800
so about the adversary as I said with

67
00:02:30,800 --> 00:02:32,510
one information theoretic security so

68
00:02:32,510 --> 00:02:33,950
the adversary is computationally

69
00:02:33,950 --> 00:02:36,110
unbounded you can corrupt any of the two

70
00:02:36,110 --> 00:02:38,540
clients and additionally any T of the

71
00:02:38,540 --> 00:02:40,070
servers and we're going to be looking at

72
00:02:40,070 --> 00:02:44,330
bounds on T that allow MPC with sub

73
00:02:44,330 --> 00:02:46,670
linear communication and he can be semi

74
00:02:46,670 --> 00:02:49,100
honest or passive namely he just looks

75
00:02:49,100 --> 00:02:50,240
at the view of the parties and tries to

76
00:02:50,240 --> 00:02:52,250
extract information or he can be

77
00:02:52,250 --> 00:02:54,770
malicious or active meaning that she

78
00:02:54,770 --> 00:02:56,210
makes the parties misbehave arbitrarily

79
00:02:56,210 --> 00:02:59,150
I will also consider static and adaptive

80
00:02:59,150 --> 00:03:01,130
both cases static means the adversary

81
00:03:01,130 --> 00:03:03,050
corrupts everyone at the beginning of

82
00:03:03,050 --> 00:03:04,880
the protocol adaptive means that while

83
00:03:04,880 --> 00:03:06,740
the protocol evolves in depending on his

84
00:03:06,740 --> 00:03:08,810
view she corrupts more parties and even

85
00:03:08,810 --> 00:03:10,670
more for adaptive corruption we're going

86
00:03:10,670 --> 00:03:13,070
to consider both the case where honest

87
00:03:13,070 --> 00:03:15,500
parties might be able to erase making it

88
00:03:15,500 --> 00:03:17,000
harder for the adversary to see their

89
00:03:17,000 --> 00:03:19,940
history when they're corrupted and the

90
00:03:19,940 --> 00:03:24,020
case where they cannot erase so what do

91
00:03:24,020 --> 00:03:28,310
we know if we we're okay or be free if

92
00:03:28,310 --> 00:03:29,390
we're okay with a quadratic

93
00:03:29,390 --> 00:03:30,950
communication complexity and when I say

94
00:03:30,950 --> 00:03:33,200
quadratic I mean a quadratic number of

95
00:03:33,200 --> 00:03:35,660
bits pair multiplication gate of the

96
00:03:35,660 --> 00:03:37,160
circuit representing the function we

97
00:03:37,160 --> 00:03:40,459
want to compute then already from the

98
00:03:40,459 --> 00:03:42,590
ADEs we have results that solve this for

99
00:03:42,590 --> 00:03:44,300
the semi honest case we in tolerate

100
00:03:44,300 --> 00:03:48,620
arbitrary corrupted minorities and for

101
00:03:48,620 --> 00:03:49,760
the malicious case Robin and Ben are

102
00:03:49,760 --> 00:03:51,260
assuming broadcast gives us the same

103
00:03:51,260 --> 00:03:54,530
bound for actually it's for adaptive but

104
00:03:54,530 --> 00:03:58,120
here we're only gonna consider static so

105
00:03:58,120 --> 00:04:00,050
what happens if we want less

106
00:04:00,050 --> 00:04:02,330
communication there's a lot of work I

107
00:04:02,330 --> 00:04:04,310
just have some work you've indicated ly

108
00:04:04,310 --> 00:04:06,500
to just demonstrate that we achieved the

109
00:04:06,500 --> 00:04:07,370
same bound

110
00:04:07,370 --> 00:04:10,610
sorry we'd see the same bound or at

111
00:04:10,610 --> 00:04:12,050
least asymptotically the same bound and

112
00:04:12,050 --> 00:04:13,700
actually some of this works even get sub

113
00:04:13,700 --> 00:04:16,310
linear communication complexity as a

114
00:04:16,310 --> 00:04:18,320
multiplicative factor of the circuit

115
00:04:18,320 --> 00:04:20,930
size but I want you to notice that all

116
00:04:20,930 --> 00:04:24,290
those have a an additive polynomial

117
00:04:24,290 --> 00:04:26,539
factor in the player set so if the

118
00:04:26,539 --> 00:04:28,789
circuit is huge this doesn't really

119
00:04:28,789 --> 00:04:31,960
matter but if the circuit is small then

120
00:04:31,960 --> 00:04:33,670
those works this polynomial factor

121
00:04:33,670 --> 00:04:36,130
actually dominates the complexity so

122
00:04:36,130 --> 00:04:38,530
what we're after here is an absolutely

123
00:04:38,530 --> 00:04:40,210
if you want sub linear communication

124
00:04:40,210 --> 00:04:42,850
complexity namely we want that we have

125
00:04:42,850 --> 00:04:45,790
an sub linear multiplicative factor with

126
00:04:45,790 --> 00:04:48,330
the circuit size or a smaller event and

127
00:04:48,330 --> 00:04:51,720
then no additive polynomial factors and

128
00:04:51,720 --> 00:04:54,220
as you already see here the situation

129
00:04:54,220 --> 00:04:55,780
change drastically right before we have

130
00:04:55,780 --> 00:04:58,450
in half both in the case of quadratic

131
00:04:58,450 --> 00:05:00,360
and in the case of linear or sub linear

132
00:05:00,360 --> 00:05:02,830
here we have a completely different

133
00:05:02,830 --> 00:05:05,500
landscape so for the semi honest case

134
00:05:05,500 --> 00:05:07,780
it's roughly the same asymptotically the

135
00:05:07,780 --> 00:05:09,520
same at least it's 1/2 minus epsilon

136
00:05:09,520 --> 00:05:12,910
which is a tight bound for the static

137
00:05:12,910 --> 00:05:14,800
history when we go to the adaptive case

138
00:05:14,800 --> 00:05:17,080
with our erasers the situation is

139
00:05:17,080 --> 00:05:19,419
completely devastating here we cannot

140
00:05:19,419 --> 00:05:21,280
tolerate any constant fraction of

141
00:05:21,280 --> 00:05:23,860
corruptions so but we can tolerate sub

142
00:05:23,860 --> 00:05:25,990
linear so we can disturb it a very very

143
00:05:25,990 --> 00:05:28,720
very restricted adversary and the most

144
00:05:28,720 --> 00:05:30,820
interesting case is actually that of

145
00:05:30,820 --> 00:05:34,840
adaptive security with erasers and I

146
00:05:34,840 --> 00:05:35,950
should point out here that I have this

147
00:05:35,950 --> 00:05:38,680
ordering usually in MPC when we have

148
00:05:38,680 --> 00:05:42,100
adaptive security with erasers its life

149
00:05:42,100 --> 00:05:44,290
is easier and with our erasers this is

150
00:05:44,290 --> 00:05:45,580
not the case here as you're going to see

151
00:05:45,580 --> 00:05:47,470
in the remainder of the talk so the

152
00:05:47,470 --> 00:05:49,030
bound in the adaptive security with

153
00:05:49,030 --> 00:05:52,090
erasers is this asymptotically close to

154
00:05:52,090 --> 00:05:55,930
1 minus square root of 0.5 which might

155
00:05:55,930 --> 00:05:57,610
look a bit worried but it's not it's

156
00:05:57,610 --> 00:06:00,910
actually tight so and you know this

157
00:06:00,910 --> 00:06:02,710
justifies the title this is the first

158
00:06:02,710 --> 00:06:04,990
bound which is not rational so now the

159
00:06:04,990 --> 00:06:06,820
obvious open question is can we get a

160
00:06:06,820 --> 00:06:09,010
bound which is imaginary not imaginary

161
00:06:09,010 --> 00:06:13,150
bound bound is magic ok and we also

162
00:06:13,150 --> 00:06:14,890
scratched the surface of the malicious

163
00:06:14,890 --> 00:06:17,800
case only for the static I adversary and

164
00:06:17,800 --> 00:06:19,630
prove that the same bound that we have

165
00:06:19,630 --> 00:06:20,770
for the semi honest works for the

166
00:06:20,770 --> 00:06:23,260
malicious as well modular that we might

167
00:06:23,260 --> 00:06:28,000
abort the computation there all right so

168
00:06:28,000 --> 00:06:29,080
I'm going to focus for the rest of the

169
00:06:29,080 --> 00:06:31,660
talk to the semi honest case and look at

170
00:06:31,660 --> 00:06:34,360
the static adaptive without the reason

171
00:06:34,360 --> 00:06:35,890
adaptive with erasers to give you a

172
00:06:35,890 --> 00:06:38,050
summary of how the results are let's

173
00:06:38,050 --> 00:06:39,490
start with a very very simple case

174
00:06:39,490 --> 00:06:44,110
static corruption so here we want to

175
00:06:44,110 --> 00:06:45,399
prove that this nearly

176
00:06:45,399 --> 00:06:49,239
one half fraction of corruption work so

177
00:06:49,239 --> 00:06:50,349
we can have a protocol for that and the

178
00:06:50,349 --> 00:06:51,669
protocol is extremely simple it's

179
00:06:51,669 --> 00:06:53,589
actually the full cure protocol we have

180
00:06:53,589 --> 00:06:55,360
any of the two clients choose a

181
00:06:55,360 --> 00:06:58,929
committee of poly log size and then this

182
00:06:58,929 --> 00:07:00,759
committee runs one of the existing

183
00:07:00,759 --> 00:07:01,919
protocols which are quadratic

184
00:07:01,919 --> 00:07:05,019
communication complexity because the

185
00:07:05,019 --> 00:07:07,629
committee is randomly chosen it's a poly

186
00:07:07,629 --> 00:07:10,409
log size we have an honest majority and

187
00:07:10,409 --> 00:07:12,610
because it's a poly log size poly log

188
00:07:12,610 --> 00:07:14,080
square is a poly log so the total

189
00:07:14,080 --> 00:07:15,580
communication complexity will be sub

190
00:07:15,580 --> 00:07:19,990
linear very simple okay now why is this

191
00:07:19,990 --> 00:07:22,360
tight and actually it's tied in a strong

192
00:07:22,360 --> 00:07:25,629
manner so if we go a constant number of

193
00:07:25,629 --> 00:07:27,969
fraction close to one half then we

194
00:07:27,969 --> 00:07:29,860
cannot tolerate this adversary for that

195
00:07:29,860 --> 00:07:31,360
we're going to use any possibility

196
00:07:31,360 --> 00:07:33,969
result from the literature by Hilton M

197
00:07:33,969 --> 00:07:36,550
our which it's easier to look at the

198
00:07:36,550 --> 00:07:39,129
picture to understand the brain tuition

199
00:07:39,129 --> 00:07:41,589
of the result so the result says that if

200
00:07:41,589 --> 00:07:44,919
there are two sets q1 and q2 that cover

201
00:07:44,919 --> 00:07:47,259
the entire server set and then c1 is in

202
00:07:47,259 --> 00:07:49,059
one of them and c2 is in the other so if

203
00:07:49,059 --> 00:07:53,050
we have such a covering of in terms of

204
00:07:53,050 --> 00:07:54,999
union of two sets of the entire party

205
00:07:54,999 --> 00:07:57,249
set then there are functions we cannot

206
00:07:57,249 --> 00:07:58,869
compute so if the adversary can compute

207
00:07:58,869 --> 00:08:00,490
and concur up either this one or that

208
00:08:00,490 --> 00:08:02,619
one with no trouble probabilities there

209
00:08:02,619 --> 00:08:04,869
are functions we cannot compute and how

210
00:08:04,869 --> 00:08:07,300
we're going to use it so let me just you

211
00:08:07,300 --> 00:08:12,329
know replace this one with a constant so

212
00:08:12,329 --> 00:08:15,009
for our case for proving that let's

213
00:08:15,009 --> 00:08:16,360
start with a simple case if epsilon is 0

214
00:08:16,360 --> 00:08:18,309
epsilon 0 then this thing here means

215
00:08:18,309 --> 00:08:20,490
that we have a corrupted majority and

216
00:08:20,490 --> 00:08:22,899
this means that the adversary can

217
00:08:22,899 --> 00:08:25,929
corrupt c1 and the first half of the

218
00:08:25,929 --> 00:08:28,089
parties or he can corrupt c2 and the

219
00:08:28,089 --> 00:08:29,949
second half of the parties right you can

220
00:08:29,949 --> 00:08:33,610
do both or either actually and the union

221
00:08:33,610 --> 00:08:35,259
of those two choices cover the entire

222
00:08:35,259 --> 00:08:37,630
party set there for ATM kicks in we

223
00:08:37,630 --> 00:08:40,089
cannot compute the end game now

224
00:08:40,089 --> 00:08:42,429
the case where the constant is an

225
00:08:42,429 --> 00:08:44,709
epsilon is greater than 0 is slightly

226
00:08:44,709 --> 00:08:46,089
more involved but not too much so the

227
00:08:46,089 --> 00:08:48,519
general idea here is that the adversary

228
00:08:48,519 --> 00:08:50,589
can play the I feel like strategy so he

229
00:08:50,589 --> 00:08:53,199
will choose epsilon parties and ignore

230
00:08:53,199 --> 00:08:56,319
them and apply the same strategy as

231
00:08:56,319 --> 00:08:58,150
before to the remainder and

232
00:08:58,150 --> 00:09:00,700
Oh servers and now the idea is that

233
00:09:00,700 --> 00:09:02,380
because we want sublinear communication

234
00:09:02,380 --> 00:09:04,960
complexity there can only be a sublinear

235
00:09:04,960 --> 00:09:06,460
number of servers that speak throughout

236
00:09:06,460 --> 00:09:08,740
the protocol so with noticeable

237
00:09:08,740 --> 00:09:10,270
probability this said that the adversary

238
00:09:10,270 --> 00:09:13,120
ignores will not fit the set that speaks

239
00:09:13,120 --> 00:09:18,310
and therefore this union is on the on

240
00:09:18,310 --> 00:09:20,110
all servers that actually matter for the

241
00:09:20,110 --> 00:09:21,700
computation and therefore again ATM

242
00:09:21,700 --> 00:09:25,260
kicks in that's the general intuition

243
00:09:25,260 --> 00:09:28,720
all right so now building towards the

244
00:09:28,720 --> 00:09:29,980
most interesting case which is the

245
00:09:29,980 --> 00:09:31,390
adaptive graphing with the radius I will

246
00:09:31,390 --> 00:09:32,830
start with the case where we don't have

247
00:09:32,830 --> 00:09:34,570
erasers as I said here the situation is

248
00:09:34,570 --> 00:09:36,780
pretty bad we cannot tolerate any

249
00:09:36,780 --> 00:09:40,060
constant fraction of Corrections and to

250
00:09:40,060 --> 00:09:41,920
see that you need to consider an

251
00:09:41,920 --> 00:09:44,050
adversary that uses a follow the money

252
00:09:44,050 --> 00:09:46,000
type of strategy or rather follow the

253
00:09:46,000 --> 00:09:47,740
message type of strategy so let's look

254
00:09:47,740 --> 00:09:49,900
again at the protocol execution like one

255
00:09:49,900 --> 00:09:51,550
instance to see what the fraud is is

256
00:09:51,550 --> 00:09:54,070
like so let's say in first round see one

257
00:09:54,070 --> 00:09:55,810
since the methods then these guys

258
00:09:55,810 --> 00:09:57,070
exchange the message then these guys

259
00:09:57,070 --> 00:09:58,900
extends the methods then these guys

260
00:09:58,900 --> 00:10:00,370
extend semesters and maybe c1 and c2

261
00:10:00,370 --> 00:10:02,650
extends several messages after that

262
00:10:02,650 --> 00:10:04,900
so this follow the message strategy is

263
00:10:04,900 --> 00:10:07,180
as follows the adversary injects you can

264
00:10:07,180 --> 00:10:08,710
think of it like that injects corruption

265
00:10:08,710 --> 00:10:10,600
through either of the clients so he

266
00:10:10,600 --> 00:10:12,760
starts with c1 and corrupt in the end of

267
00:10:12,760 --> 00:10:14,530
the protocol perhaps whoever talked to

268
00:10:14,530 --> 00:10:15,820
him in the protocol and then perhaps

269
00:10:15,820 --> 00:10:17,110
whoever talked to those guys in the

270
00:10:17,110 --> 00:10:18,550
protocol and then corrupt so ever talk

271
00:10:18,550 --> 00:10:20,140
to those guys in the broader role but he

272
00:10:20,140 --> 00:10:23,230
never grabs it to the other side could

273
00:10:23,230 --> 00:10:25,570
do the same thing from C to corrupt c2

274
00:10:25,570 --> 00:10:26,860
and whoever talks to him in the protocol

275
00:10:26,860 --> 00:10:30,100
and now it's not hard to see that all

276
00:10:30,100 --> 00:10:31,960
the servers that ever speak in the

277
00:10:31,960 --> 00:10:34,810
protocol can be split in three sets they

278
00:10:34,810 --> 00:10:36,040
might not be disjoint but this doesn't

279
00:10:36,040 --> 00:10:38,500
matter so this is the set q1 corrupted

280
00:10:38,500 --> 00:10:39,820
by the adversary injecting

281
00:10:39,820 --> 00:10:42,640
corruption through c1 they said q2

282
00:10:42,640 --> 00:10:44,620
corrupting by the adversary adversary to

283
00:10:44,620 --> 00:10:46,330
injecting corruption through c2 and

284
00:10:46,330 --> 00:10:48,190
there is a bunch of guys that are doing

285
00:10:48,190 --> 00:10:49,630
something completely foolish let's talk

286
00:10:49,630 --> 00:10:51,160
to each other and never communicate with

287
00:10:51,160 --> 00:10:52,690
any component connected to the server's

288
00:10:52,690 --> 00:10:54,820
hence we can just ignore those guys so

289
00:10:54,820 --> 00:10:56,050
the review is independent of the

290
00:10:56,050 --> 00:10:58,600
computation we can simulate so if we

291
00:10:58,600 --> 00:11:00,580
ignore those guys or if we give those

292
00:11:00,580 --> 00:11:02,500
guys to the adversary for free then what

293
00:11:02,500 --> 00:11:05,560
we get is that the union of the sets

294
00:11:05,560 --> 00:11:07,660
that are corrupted covers everyone who

295
00:11:07,660 --> 00:11:09,280
speaks in the protocol and once again

296
00:11:09,280 --> 00:11:10,889
ATM will kick in and

297
00:11:10,889 --> 00:11:12,980
so that you cannot compute the endgame

298
00:11:12,980 --> 00:11:15,899
so that's the possibility and the

299
00:11:15,899 --> 00:11:17,009
original by the under sir can do this

300
00:11:17,009 --> 00:11:18,359
follow the message attack is because he

301
00:11:18,359 --> 00:11:20,999
has a linear budget and the only sub

302
00:11:20,999 --> 00:11:22,230
linear number of parties can speak

303
00:11:22,230 --> 00:11:23,790
through the protocol so that we maintain

304
00:11:23,790 --> 00:11:26,910
sub linear communication complexity all

305
00:11:26,910 --> 00:11:28,619
right so now about the broad of all this

306
00:11:28,619 --> 00:11:30,419
is the even simpler the adversary is

307
00:11:30,419 --> 00:11:31,049
very weak

308
00:11:31,049 --> 00:11:32,879
he can only corrupt a sub linear number

309
00:11:32,879 --> 00:11:34,619
of parties and therefore we can again

310
00:11:34,619 --> 00:11:36,869
use the Fogler protocol - x sub linear

311
00:11:36,869 --> 00:11:39,959
is sub linear so let's just use more

312
00:11:39,959 --> 00:11:41,549
parties than the other so I can grab the

313
00:11:41,549 --> 00:11:44,790
majority of c1 soos is 2 times the

314
00:11:44,790 --> 00:11:46,470
corruption budget plus 1 which is sub

315
00:11:46,470 --> 00:11:47,879
linear and we have them do the

316
00:11:47,879 --> 00:11:50,459
computation since this is a linear the

317
00:11:50,459 --> 00:11:51,869
computation complexity will be sub

318
00:11:51,869 --> 00:11:54,869
linear and since there are too many for

319
00:11:54,869 --> 00:11:56,549
the adversary even adaptively to corrupt

320
00:11:56,549 --> 00:11:58,859
you can only go up top of them because W

321
00:11:58,859 --> 00:12:02,850
will be secure and we're done so this is

322
00:12:02,850 --> 00:12:04,350
a very pessimistic bound which is very

323
00:12:04,350 --> 00:12:05,189
easy to prove

324
00:12:05,189 --> 00:12:08,249
ok so now going to the most interesting

325
00:12:08,249 --> 00:12:10,980
case which is adaptive corruption with

326
00:12:10,980 --> 00:12:12,809
erasers and here I would like to

327
00:12:12,809 --> 00:12:15,329
demonstrate why there's hope

328
00:12:15,329 --> 00:12:17,129
why the follow the message that pack

329
00:12:17,129 --> 00:12:19,709
does not work and let's look again at a

330
00:12:19,709 --> 00:12:21,179
run of the protocol let's assume that we

331
00:12:21,179 --> 00:12:24,239
start C and and this party here this

332
00:12:24,239 --> 00:12:25,829
server here sends a message to that guy

333
00:12:25,829 --> 00:12:28,410
then he sends a message m2 to that guy

334
00:12:28,410 --> 00:12:31,559
and then what happens is that he raises

335
00:12:31,559 --> 00:12:34,019
m1 and four gates who that guys and this

336
00:12:34,019 --> 00:12:35,399
guy forgets who that guy is entirely

337
00:12:35,399 --> 00:12:38,999
raises information and then this guy

338
00:12:38,999 --> 00:12:41,220
sends a message sent 3 2 c1 it's easy to

339
00:12:41,220 --> 00:12:43,559
see that because you know m2 originated

340
00:12:43,559 --> 00:12:44,910
from that guy which arisen from that guy

341
00:12:44,910 --> 00:12:48,660
while he knew m1 this message here hence

342
00:12:48,660 --> 00:12:52,379
the view of c1 depends on m1 now so that

343
00:12:52,379 --> 00:12:54,449
the protocol proceeds and this guy sends

344
00:12:54,449 --> 00:12:57,449
a message m4 and erases m4 and both

345
00:12:57,449 --> 00:12:59,009
erased information of who sent the

346
00:12:59,009 --> 00:13:00,809
message to cool and then in the next

347
00:13:00,809 --> 00:13:03,899
round m5 I sent here and once again same

348
00:13:03,899 --> 00:13:06,539
argument m5 will depend on m4 which

349
00:13:06,539 --> 00:13:09,749
potentially depend on m1 now if we use

350
00:13:09,749 --> 00:13:12,809
the injecting corruption strategy here

351
00:13:12,809 --> 00:13:15,089
the atmosphere can corrupt you know he

352
00:13:15,089 --> 00:13:16,739
can wrap c1 he goes and grabs the guy

353
00:13:16,739 --> 00:13:18,269
that dr. Kim's perhaps I guided him in

354
00:13:18,269 --> 00:13:21,959
he stopped and on the other side he

355
00:13:21,959 --> 00:13:23,279
corrupt c2 herbs the guy that touched

356
00:13:23,279 --> 00:13:23,760
him and he

357
00:13:23,760 --> 00:13:26,250
stack so now what we have is we have

358
00:13:26,250 --> 00:13:28,290
these two sets that do not cover

359
00:13:28,290 --> 00:13:29,760
everyone who's relevant for the

360
00:13:29,760 --> 00:13:31,620
computation so this guy has a message

361
00:13:31,620 --> 00:13:33,570
which is correlated with the view of c1

362
00:13:33,570 --> 00:13:35,790
and c2 and this means that we cannot use

363
00:13:35,790 --> 00:13:36,690
its M anymore

364
00:13:36,690 --> 00:13:38,340
so this doesn't mean that we have a

365
00:13:38,340 --> 00:13:40,340
protocol but it means there's hope and

366
00:13:40,340 --> 00:13:42,810
in order to explore this hope the

367
00:13:42,810 --> 00:13:44,850
challenge is to figure out how we can

368
00:13:44,850 --> 00:13:46,590
activate the paracin route the messages

369
00:13:46,590 --> 00:13:49,080
so that the adversary cannot actually

370
00:13:49,080 --> 00:13:53,000
use this follow the message attack and

371
00:13:53,000 --> 00:13:56,880
I'm going to describe how by this is

372
00:13:56,880 --> 00:13:58,230
actually what I meant by the quest for a

373
00:13:58,230 --> 00:14:00,420
bomb that was not rational I'm going to

374
00:14:00,420 --> 00:14:01,740
give you several solutions which are

375
00:14:01,740 --> 00:14:04,050
flawed leading to the final correct

376
00:14:04,050 --> 00:14:06,390
solution the first solution I'm going to

377
00:14:06,390 --> 00:14:07,920
call dictatorship this is actually a

378
00:14:07,920 --> 00:14:09,930
full-blood protocol where we have one

379
00:14:09,930 --> 00:14:11,910
party one client see one say he's a

380
00:14:11,910 --> 00:14:13,860
dictator he chooses who is going to help

381
00:14:13,860 --> 00:14:15,900
in the protocol announces it and those

382
00:14:15,900 --> 00:14:18,960
guys help this is clearly bad in the

383
00:14:18,960 --> 00:14:21,240
adaptive corruption case why because the

384
00:14:21,240 --> 00:14:23,430
adversary is going to corrupt c1 he's

385
00:14:23,430 --> 00:14:25,080
going to corrupt everyone that he

386
00:14:25,080 --> 00:14:27,720
suggests and therefore did this but this

387
00:14:27,720 --> 00:14:30,090
way he has everyone corrupted hence we

388
00:14:30,090 --> 00:14:33,060
cannot do anything with him okay so bad

389
00:14:33,060 --> 00:14:33,570
idea

390
00:14:33,570 --> 00:14:35,630
what's better than dictatorship

391
00:14:35,630 --> 00:14:38,730
parliamentary democracy so here

392
00:14:38,730 --> 00:14:42,720
c1 suggests his set of helpers c2

393
00:14:42,720 --> 00:14:44,640
suggests his set of help present

394
00:14:44,640 --> 00:14:47,160
together all those helpers help the

395
00:14:47,160 --> 00:14:49,740
parties run the protocol this is clearly

396
00:14:49,740 --> 00:14:52,320
seems better but unfortunately doesn't

397
00:14:52,320 --> 00:14:54,240
work why because the adversary can

398
00:14:54,240 --> 00:14:56,940
corrupt c1 and q1 everyone hiss exists

399
00:14:56,940 --> 00:15:00,090
or c2 and q2 everyone he said this those

400
00:15:00,090 --> 00:15:01,950
are again two sets that cover the entire

401
00:15:01,950 --> 00:15:03,890
set of parties are playing the protocol

402
00:15:03,890 --> 00:15:06,480
8cm kicks in we cannot compute the MJ

403
00:15:06,480 --> 00:15:11,370
the mk3 okay so what's the problem with

404
00:15:11,370 --> 00:15:13,920
these solutions the problem is that the

405
00:15:13,920 --> 00:15:16,920
clients choose their helpers so what can

406
00:15:16,920 --> 00:15:20,580
we do to circumvent this issue we can

407
00:15:20,580 --> 00:15:22,470
have the helper sues themselves they

408
00:15:22,470 --> 00:15:24,690
volunteer which leads me to the third

409
00:15:24,690 --> 00:15:26,130
type of protocols which I call

410
00:15:26,130 --> 00:15:28,670
non-government organizations or NGOs

411
00:15:28,670 --> 00:15:33,300
here any server might wake up we throw

412
00:15:33,300 --> 00:15:35,070
ability poly log n over N this will

413
00:15:35,070 --> 00:15:37,130
guarantee that no more than poly log men

414
00:15:37,130 --> 00:15:39,680
servers wake up and he volunteers to

415
00:15:39,680 --> 00:15:43,250
help so now the challenge is that we

416
00:15:43,250 --> 00:15:44,690
need to make sure that it doesn't help

417
00:15:44,690 --> 00:15:46,850
two months right if he speaks to the

418
00:15:46,850 --> 00:15:49,040
same guy in too many rounds then he

419
00:15:49,040 --> 00:15:50,450
gives too many chances of the adversary

420
00:15:50,450 --> 00:15:52,190
to go rap so what we're going to do is

421
00:15:52,190 --> 00:15:53,360
we're going to use a volunteering

422
00:15:53,360 --> 00:15:54,890
strategy which is asked not knowing

423
00:15:54,890 --> 00:15:56,960
non-interactive as possible and for that

424
00:15:56,960 --> 00:15:59,210
we're going to use a oblivious transfer

425
00:15:59,210 --> 00:16:01,340
or pre-computer blueish transversal okay

426
00:16:01,340 --> 00:16:02,780
so what is oblivious transfer very

427
00:16:02,780 --> 00:16:04,340
briefly we have a sender that has two

428
00:16:04,340 --> 00:16:06,500
messages and a receiver but wants to

429
00:16:06,500 --> 00:16:08,330
receive one of them so that he learns

430
00:16:08,330 --> 00:16:10,430
nothing about the other methods and the

431
00:16:10,430 --> 00:16:11,660
sender doesn't learn which message was

432
00:16:11,660 --> 00:16:14,180
received so this is oblivious transfer

433
00:16:14,180 --> 00:16:15,890
it's a fantastic primitive because it's

434
00:16:15,890 --> 00:16:17,630
complete for information theoretic NPC

435
00:16:17,630 --> 00:16:19,850
if we can do that we can compute any

436
00:16:19,850 --> 00:16:22,430
function so for the remainder of the

437
00:16:22,430 --> 00:16:23,810
talk I'm going to focus on implementing

438
00:16:23,810 --> 00:16:27,260
ot and how are we going to do it how are

439
00:16:27,260 --> 00:16:29,860
the server's gonna help implementing ot

440
00:16:29,860 --> 00:16:32,600
they're gonna act as ot dealers so there

441
00:16:32,600 --> 00:16:34,550
is a way to pre-compute ot so that a

442
00:16:34,550 --> 00:16:38,900
dealer can compute a pair so a value for

443
00:16:38,900 --> 00:16:40,130
the sender and a value for the receiver

444
00:16:40,130 --> 00:16:42,590
and distribute despair and later on

445
00:16:42,590 --> 00:16:44,120
sender and receiver can hughes doesn't

446
00:16:44,120 --> 00:16:45,380
really matter the protocol what matters

447
00:16:45,380 --> 00:16:47,120
is that they can use this pair to

448
00:16:47,120 --> 00:16:50,270
implement ot by the communication

449
00:16:50,270 --> 00:16:51,980
complexity which is the same as that of

450
00:16:51,980 --> 00:16:57,320
this pair so the Tallis now is to do

451
00:16:57,320 --> 00:16:59,240
this precomputed of this in a way which

452
00:16:59,240 --> 00:17:01,250
cannot be followed the message kind of

453
00:17:01,250 --> 00:17:07,189
attack okay so first attempt the simple

454
00:17:07,189 --> 00:17:09,619
one so just you know choose the pair so

455
00:17:09,619 --> 00:17:12,410
the guy wakes up he choose the sender's

456
00:17:12,410 --> 00:17:13,910
in the receivers part sends the part of

457
00:17:13,910 --> 00:17:15,199
the sender to the sender the part of the

458
00:17:15,199 --> 00:17:19,300
receiver the receiver now if we do that

459
00:17:19,300 --> 00:17:22,490
again the adversary has corrupted c1 he

460
00:17:22,490 --> 00:17:24,619
can jump and corrupt this server here

461
00:17:24,619 --> 00:17:26,089
and then learn the other part of the

462
00:17:26,089 --> 00:17:28,580
pair right so it doesn't help mats so

463
00:17:28,580 --> 00:17:31,790
what can we do to avoid that we can

464
00:17:31,790 --> 00:17:32,300
actually

465
00:17:32,300 --> 00:17:34,430
randomized who gets the message first

466
00:17:34,430 --> 00:17:36,380
the guy that gets the message second

467
00:17:36,380 --> 00:17:39,670
doesn't have this chance if we erase so

468
00:17:39,670 --> 00:17:42,350
what we can do is this guy again wakes

469
00:17:42,350 --> 00:17:44,600
up by himself he prepares the pair and

470
00:17:44,600 --> 00:17:46,370
then he flips a coin to see who he's

471
00:17:46,370 --> 00:17:47,270
going to talk to first

472
00:17:47,270 --> 00:17:50,090
let's say the coin says c1 he talks to

473
00:17:50,090 --> 00:17:50,660
c1

474
00:17:50,660 --> 00:17:55,550
she raises and then talks to c2 now it's

475
00:17:55,550 --> 00:17:56,780
easy to see that if the address has

476
00:17:56,780 --> 00:17:59,300
corrupted c2 who's the second guy that

477
00:17:59,300 --> 00:18:01,070
gets the message he doesn't get anything

478
00:18:01,070 --> 00:18:02,930
by corrupting that guy at that at the

479
00:18:02,930 --> 00:18:04,730
point where C to get the message from

480
00:18:04,730 --> 00:18:07,130
him right why because this has been

481
00:18:07,130 --> 00:18:10,790
erased so we are actually quite good

482
00:18:10,790 --> 00:18:13,160
this means that the probability since we

483
00:18:13,160 --> 00:18:14,600
are choosing who goes first with

484
00:18:14,600 --> 00:18:16,190
probability 1/2 the probability that

485
00:18:16,190 --> 00:18:18,530
both pairs are corrupted by ham

486
00:18:18,530 --> 00:18:22,160
corrupted the client is now 1/2 which

487
00:18:22,160 --> 00:18:23,930
does seem pretty good but it's not

488
00:18:23,930 --> 00:18:27,350
enough because if any of those pairs is

489
00:18:27,350 --> 00:18:29,480
crab is probability 1/2 then we were

490
00:18:29,480 --> 00:18:31,520
stuck with a setup where half of it is

491
00:18:31,520 --> 00:18:33,470
corrupted roughly and we can not really

492
00:18:33,470 --> 00:18:36,620
do something with it but if we could get

493
00:18:36,620 --> 00:18:39,670
somehow to a setting where less than 1/2

494
00:18:39,670 --> 00:18:42,950
is of these all these are corrupted then

495
00:18:42,950 --> 00:18:44,690
we're game then we can do ot we can use

496
00:18:44,690 --> 00:18:47,030
an OT combiner and compute a good or T

497
00:18:47,030 --> 00:18:48,580
that then allows us to do everything

498
00:18:48,580 --> 00:18:53,810
okay so here's a way to get there so

499
00:18:53,810 --> 00:18:56,240
this error once again wakes up he

500
00:18:56,240 --> 00:18:58,190
prepares an OT pair but don't doesn't

501
00:18:58,190 --> 00:19:00,920
speak to the clients instead he

502
00:19:00,920 --> 00:19:02,780
volunteers someone else he volunteers an

503
00:19:02,780 --> 00:19:05,300
intermediary and he sends him part of

504
00:19:05,300 --> 00:19:08,930
this OT pair and they both erase

505
00:19:08,930 --> 00:19:10,940
everything else it's our identity and

506
00:19:10,940 --> 00:19:12,950
the part that they don't know and then

507
00:19:12,950 --> 00:19:17,180
they contact the clients now it's it's

508
00:19:17,180 --> 00:19:21,230
easy to see that in this protocol by

509
00:19:21,230 --> 00:19:23,300
corrupting a client there so it doesn't

510
00:19:23,300 --> 00:19:24,830
get anything right because by the time

511
00:19:24,830 --> 00:19:26,930
this client is contacted by a server the

512
00:19:26,930 --> 00:19:29,000
information the other half of the OT has

513
00:19:29,000 --> 00:19:31,550
been erased but now we have another

514
00:19:31,550 --> 00:19:36,560
problem and the problem is that unlike

515
00:19:36,560 --> 00:19:38,960
before where an adversary that tries to

516
00:19:38,960 --> 00:19:41,030
hit should throw darts on the servers

517
00:19:41,030 --> 00:19:43,730
and corrupt parties had one chance to

518
00:19:43,730 --> 00:19:46,910
hit the OT pair now he has to he can

519
00:19:46,910 --> 00:19:48,080
actually at the beginning of the

520
00:19:48,080 --> 00:19:49,400
protocol throw darts and if he hits that

521
00:19:49,400 --> 00:19:51,770
guy or that guy in both cases he could

522
00:19:51,770 --> 00:19:53,780
have the entire OT pair so we double the

523
00:19:53,780 --> 00:19:56,600
chance that he does it with scale sucks

524
00:19:56,600 --> 00:19:57,740
and

525
00:19:57,740 --> 00:20:00,320
you know bye-bye now probably you're fed

526
00:20:00,320 --> 00:20:01,910
up with wrong solutions this is not

527
00:20:01,910 --> 00:20:04,040
wrong this is the right solution so this

528
00:20:04,040 --> 00:20:05,990
is the best we can do we have a lower

529
00:20:05,990 --> 00:20:10,640
bound matching that okay so by then I

530
00:20:10,640 --> 00:20:12,350
should say that the protocol in the end

531
00:20:12,350 --> 00:20:14,780
of all this thing uses a note the

532
00:20:14,780 --> 00:20:16,640
combiner to get a good Orton right okay

533
00:20:16,640 --> 00:20:21,860
so very briefly how does this protocol

534
00:20:21,860 --> 00:20:23,510
how's it wrote about secure when this

535
00:20:23,510 --> 00:20:25,880
bound one minus square root of 0.5 holes

536
00:20:25,880 --> 00:20:28,040
and that will also show you where the

537
00:20:28,040 --> 00:20:31,160
square root of 0.5 comes from let's look

538
00:20:31,160 --> 00:20:32,870
at the sketch of the proof so and I will

539
00:20:32,870 --> 00:20:34,400
start with what I call the jackpot

540
00:20:34,400 --> 00:20:35,809
scenario right which is the easiest to

541
00:20:35,809 --> 00:20:37,100
describe and actually the best for the

542
00:20:37,100 --> 00:20:39,320
protocol and this is the one where by

543
00:20:39,320 --> 00:20:42,230
luck the volunteers and the

544
00:20:42,230 --> 00:20:44,570
intermediaries are arranged in a perfect

545
00:20:44,570 --> 00:20:44,960
matching

546
00:20:44,960 --> 00:20:47,240
there's no collusion so no two

547
00:20:47,240 --> 00:20:48,830
volunteers speak to the same

548
00:20:48,830 --> 00:20:50,960
intermediary so this I call the jackpot

549
00:20:50,960 --> 00:20:53,750
sauna if the scenario occurs let's look

550
00:20:53,750 --> 00:20:55,580
at what's the probability that one of

551
00:20:55,580 --> 00:20:58,010
those edges gets corrupted meaning both

552
00:20:58,010 --> 00:20:59,720
those guys get corrupted meaning the OT

553
00:20:59,720 --> 00:21:03,320
entirely gets corrupted so this

554
00:21:03,320 --> 00:21:05,540
probability because those edges appear

555
00:21:05,540 --> 00:21:06,860
completely randomly right this is a

556
00:21:06,860 --> 00:21:09,200
perfect matching this probability is the

557
00:21:09,200 --> 00:21:11,330
probability that the adversary randomly

558
00:21:11,330 --> 00:21:13,670
hits that guy corrupts him or random

559
00:21:13,670 --> 00:21:15,140
sorry that guy or randomly corrupt that

560
00:21:15,140 --> 00:21:18,050
guy - reveals that he grabs both random

561
00:21:18,050 --> 00:21:20,179
because we counted this twice and if we

562
00:21:20,179 --> 00:21:24,080
have a fraction tau of corruptions this

563
00:21:24,080 --> 00:21:26,630
probability will be t plus t minus T

564
00:21:26,630 --> 00:21:30,470
Square to t minus T Square so if we want

565
00:21:30,470 --> 00:21:33,890
half of those edges to be uncorrupted

566
00:21:33,890 --> 00:21:35,690
which will yield to half of the oldest

567
00:21:35,690 --> 00:21:39,290
being uncorrupted then what we need to

568
00:21:39,290 --> 00:21:42,020
do is solve this equation here and this

569
00:21:42,020 --> 00:21:44,390
will give us T less than 1 minus square

570
00:21:44,390 --> 00:21:47,470
root of 0.5 so this is the turning point

571
00:21:47,470 --> 00:21:51,429
so if we have tau less than that then

572
00:21:51,429 --> 00:21:54,110
any of those edges is grabbing with less

573
00:21:54,110 --> 00:21:55,670
the probability 1/2 independently and

574
00:21:55,670 --> 00:21:59,059
therefore with favorable with overrun

575
00:21:59,059 --> 00:22:00,559
probability the majority of those edges

576
00:22:00,559 --> 00:22:02,390
will be honest and then we can use a

577
00:22:02,390 --> 00:22:04,880
note the combiner of them so as I said

578
00:22:04,880 --> 00:22:06,620
this is a dream scenario the actual

579
00:22:06,620 --> 00:22:08,870
scenario is not like that it's more like

580
00:22:08,870 --> 00:22:11,290
that so there might be collusion

581
00:22:11,290 --> 00:22:13,930
right we just think do random things so

582
00:22:13,930 --> 00:22:15,580
it might be that the same volunteer is

583
00:22:15,580 --> 00:22:18,070
chosen by two intermediaries this is not

584
00:22:18,070 --> 00:22:20,470
a problem because there's so few players

585
00:22:20,470 --> 00:22:22,180
that so few servers that speak its

586
00:22:22,180 --> 00:22:24,580
oblivia number so that these collisions

587
00:22:24,580 --> 00:22:26,860
are very very very few so what we can do

588
00:22:26,860 --> 00:22:28,900
is we can simply give them all for free

589
00:22:28,900 --> 00:22:30,430
to the adversary everyone who's in sets

590
00:22:30,430 --> 00:22:32,740
over connected component can be given

591
00:22:32,740 --> 00:22:34,390
for free to the adversary and still we

592
00:22:34,390 --> 00:22:36,160
will have a majority of the edges that

593
00:22:36,160 --> 00:22:43,570
appear here being honest okay so now

594
00:22:43,570 --> 00:22:47,560
going to the negative result why we

595
00:22:47,560 --> 00:22:48,940
cannot do anything better than one minus

596
00:22:48,940 --> 00:22:53,410
square root of 0.5 and in the next one

597
00:22:53,410 --> 00:22:55,150
minute I'm going to scribe you the most

598
00:22:55,150 --> 00:22:58,390
technical proof of the paper which means

599
00:22:58,390 --> 00:22:59,470
that I'm going to give you a very very

600
00:22:59,470 --> 00:23:00,850
very high level intuition which is

601
00:23:00,850 --> 00:23:03,040
flawed in many ways but hopefully in one

602
00:23:03,040 --> 00:23:06,040
minute you want not do so okay but the

603
00:23:06,040 --> 00:23:08,020
intuition this is the intuition so

604
00:23:08,020 --> 00:23:10,570
having that you can do you can at least

605
00:23:10,570 --> 00:23:13,030
understand why it's actually it's

606
00:23:13,030 --> 00:23:14,380
actually a lower bound okay

607
00:23:14,380 --> 00:23:15,910
so assume that the adversary corrupts

608
00:23:15,910 --> 00:23:18,760
more than that many guides and now let's

609
00:23:18,760 --> 00:23:20,050
look again at this two cases so the

610
00:23:20,050 --> 00:23:21,550
dream scenario where we have a perfect

611
00:23:21,550 --> 00:23:25,330
matching in that scenario if the address

612
00:23:25,330 --> 00:23:26,500
of this is the remember this is a

613
00:23:26,500 --> 00:23:27,790
turning point which means that if the

614
00:23:27,790 --> 00:23:29,140
adversary corrupts more than that many

615
00:23:29,140 --> 00:23:30,970
parties then it's aids is corrupted with

616
00:23:30,970 --> 00:23:34,180
probability at least 1/2 and therefore

617
00:23:34,180 --> 00:23:35,920
he has a decent chance and also the

618
00:23:35,920 --> 00:23:37,750
probability of corrupting a majority of

619
00:23:37,750 --> 00:23:39,580
the edges which means that we cannot do

620
00:23:39,580 --> 00:23:43,750
anything now if in this is a dream

621
00:23:43,750 --> 00:23:45,190
scenario right in the non dream scenario

622
00:23:45,190 --> 00:23:47,980
we have over connected components which

623
00:23:47,980 --> 00:23:49,780
actually give the adversary more chances

624
00:23:49,780 --> 00:23:51,700
to corrupt right because by corrupting

625
00:23:51,700 --> 00:23:53,380
an edge he can just jump and grab the

626
00:23:53,380 --> 00:23:55,990
rest of the component so in the other

627
00:23:55,990 --> 00:23:58,120
case you could grab even more so which

628
00:23:58,120 --> 00:23:59,410
means that if this is a lower bound for

629
00:23:59,410 --> 00:24:00,550
the dream scenario it's definitely a

630
00:24:00,550 --> 00:24:02,350
lower bound for the other case once

631
00:24:02,350 --> 00:24:04,000
again this is a very very very vague

632
00:24:04,000 --> 00:24:06,340
sketch the actual foreign possibility

633
00:24:06,340 --> 00:24:09,280
goes through a novel a dresser that we

634
00:24:09,280 --> 00:24:10,540
introduced which we call probabilistic

635
00:24:10,540 --> 00:24:12,520
adversary structures those are described

636
00:24:12,520 --> 00:24:15,970
by a probability distribution of players

637
00:24:15,970 --> 00:24:18,220
set over subs of the player sets and the

638
00:24:18,220 --> 00:24:20,290
distribution the probability depends on

639
00:24:20,290 --> 00:24:22,330
both the course of the adversary and the

640
00:24:22,330 --> 00:24:23,740
coins of the protocol

641
00:24:23,740 --> 00:24:25,559
that we can capture adaptive corruption

642
00:24:25,559 --> 00:24:29,380
okay so this kind of completes my talk

643
00:24:29,380 --> 00:24:31,260
this is the bounds that we have and

644
00:24:31,260 --> 00:24:32,980
there's a bunch of movement problems

645
00:24:32,980 --> 00:24:35,200
like you know we as I said everything I

646
00:24:35,200 --> 00:24:37,360
said extends to constant number of

647
00:24:37,360 --> 00:24:40,510
clients how about super constant what

648
00:24:40,510 --> 00:24:42,700
happens with the other cases of active

649
00:24:42,700 --> 00:24:45,309
corruption like adaptive or a corruption

650
00:24:45,309 --> 00:24:46,900
without a board what happens with

651
00:24:46,900 --> 00:24:48,940
fairness this is actually those are part

652
00:24:48,940 --> 00:24:51,790
of ongoing work and another very

653
00:24:51,790 --> 00:24:54,730
interesting question is what are

654
00:24:54,730 --> 00:24:56,710
complete bounds for row ballistic

655
00:24:56,710 --> 00:24:57,730
advisor so this is a new type of

656
00:24:57,730 --> 00:24:59,320
adversaries we don't know exactly you

657
00:24:59,320 --> 00:25:00,640
know what is a complete characterization

658
00:25:00,640 --> 00:25:02,170
and I think that's a very interesting

659
00:25:02,170 --> 00:25:04,000
problem and with that I'd like to thank

660
00:25:04,000 --> 00:25:06,150
you

661
00:25:06,920 --> 00:25:10,699
[Applause]

