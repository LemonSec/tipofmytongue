1
00:00:04,930 --> 00:00:10,049
I'll give the talk on behalf of Meacham

2
00:00:13,349 --> 00:00:16,900
the non linear feedback shift register

3
00:00:16,900 --> 00:00:20,590
NFS of a short as a common component in

4
00:00:20,590 --> 00:00:23,649
modern cryptographic primitives there

5
00:00:23,649 --> 00:00:25,649
are a lot of lightweight cryptographic

6
00:00:25,649 --> 00:00:29,500
algorithms built on NFS ours including

7
00:00:29,500 --> 00:00:32,529
stream ciphers Trivium grain authentic

8
00:00:32,529 --> 00:00:35,950
ad decipher a comm block ciphers can't

9
00:00:35,950 --> 00:00:36,879
rank atanga

10
00:00:36,879 --> 00:00:42,539
and hash function crack most

11
00:00:42,539 --> 00:00:45,760
cryptographic primitives including any

12
00:00:45,760 --> 00:00:48,190
visa based crypto systems can be

13
00:00:48,190 --> 00:00:50,980
described by tweakable boolean functions

14
00:00:50,980 --> 00:00:54,670
which contain secrets variables and

15
00:00:54,670 --> 00:00:58,899
public variables the IOD break degree of

16
00:00:58,899 --> 00:01:01,210
these boolean functions plays an

17
00:01:01,210 --> 00:01:04,830
important role in the security in fact

18
00:01:04,830 --> 00:01:07,810
cryptographic primitive with the Lord

19
00:01:07,810 --> 00:01:10,660
algebraic degree is vulnerable to many

20
00:01:10,660 --> 00:01:13,570
known attacks such as higher order

21
00:01:13,570 --> 00:01:16,270
differential attacks IOT break attacks

22
00:01:16,270 --> 00:01:22,360
cuber attacks and integral attacks Cuba

23
00:01:22,360 --> 00:01:25,240
attacks and higher order differential

24
00:01:25,240 --> 00:01:28,360
attacks are most powerful against I

25
00:01:28,360 --> 00:01:31,720
never saw bass the crypto systems the

26
00:01:31,720 --> 00:01:34,270
based mount key recovery attack on

27
00:01:34,270 --> 00:01:39,670
Trivium Cuba attacks and reach 700 and a

28
00:01:39,670 --> 00:01:43,750
99 Ranch the best no distinguish around

29
00:01:43,750 --> 00:01:50,070
Trivium covers 839 ranch the Frog crane

30
00:01:50,070 --> 00:01:53,650
128 was broken by then I make cube

31
00:01:53,650 --> 00:01:58,230
attacks these attacks exploit low degree

32
00:01:58,230 --> 00:02:00,640
relations of the tweakable boolean

33
00:02:00,640 --> 00:02:03,430
functions that is the low degree

34
00:02:03,430 --> 00:02:06,280
relations between the other bees and the

35
00:02:06,280 --> 00:02:13,120
keystream base a boolean function can be

36
00:02:13,120 --> 00:02:16,890
written as the sums of term which

37
00:02:16,890 --> 00:02:18,180
superset of

38
00:02:18,180 --> 00:02:22,290
di and the terms which miss at least one

39
00:02:22,290 --> 00:02:28,409
variable from ti the basic idea of qubit

40
00:02:28,409 --> 00:02:32,069
X and cube testers is that the symbolic

41
00:02:32,069 --> 00:02:36,659
sum of boolean functions F by assigning

42
00:02:36,659 --> 00:02:42,469
all possible values to Ti is exactly FS

43
00:02:42,469 --> 00:02:48,540
because directly FS cuba attacks work by

44
00:02:48,540 --> 00:02:53,459
trying to find low degree polynomial FS

45
00:02:53,459 --> 00:02:57,150
in secret base while cubed testers work

46
00:02:57,150 --> 00:03:01,290
by trying to distinguish FS from random

47
00:03:01,290 --> 00:03:07,530
functions it is difficult to compute the

48
00:03:07,530 --> 00:03:10,019
exact algebraic degree for modern

49
00:03:10,019 --> 00:03:13,439
cryptographic primitives after years of

50
00:03:13,439 --> 00:03:17,549
development of cryptanalysis two majors

51
00:03:17,549 --> 00:03:20,669
are proposed for estimating the upper

52
00:03:20,669 --> 00:03:24,209
bound and algebraic decree for iterated

53
00:03:24,209 --> 00:03:28,319
upon mutations one is based on worse

54
00:03:28,319 --> 00:03:31,049
spectrum the other is based on division

55
00:03:31,049 --> 00:03:36,930
property however for NFS are based the

56
00:03:36,930 --> 00:03:40,319
crypto system there are few terms for

57
00:03:40,319 --> 00:03:43,139
estimating the algebraic degree of NFS

58
00:03:43,139 --> 00:03:48,449
odd systems except symbolic computation

59
00:03:48,449 --> 00:03:52,229
and statistical analysis these

60
00:03:52,229 --> 00:03:55,849
traditional techniques highly depend on

61
00:03:55,849 --> 00:03:59,519
computational capacities and the results

62
00:03:59,519 --> 00:04:02,340
is limited by the computational

63
00:04:02,340 --> 00:04:07,560
resources for example so far cubes with

64
00:04:07,560 --> 00:04:10,319
face less than 54 have never been

65
00:04:10,319 --> 00:04:14,250
utilized in crypt analysis against any

66
00:04:14,250 --> 00:04:17,699
visa based crypto systems so to gain

67
00:04:17,699 --> 00:04:21,899
better attacks one has to utilize more

68
00:04:21,899 --> 00:04:25,169
computer computational resources which

69
00:04:25,169 --> 00:04:28,919
could turn out to be very expensive in

70
00:04:28,919 --> 00:04:31,980
this talk we devote our

71
00:04:31,980 --> 00:04:34,890
a Shinto evaluating the algebraic degree

72
00:04:34,890 --> 00:04:38,910
of NFS a base decrypt assistance to

73
00:04:38,910 --> 00:04:42,810
overcome the existing limitations we

74
00:04:42,810 --> 00:04:46,320
explore a new technique called numeric

75
00:04:46,320 --> 00:04:50,220
mapping to iteratively estimated an

76
00:04:50,220 --> 00:04:53,190
upper bound on the algebraic decree for

77
00:04:53,190 --> 00:04:57,900
the NFS are systems based on this new

78
00:04:57,900 --> 00:05:00,930
tool we develop an algorithm for

79
00:05:00,930 --> 00:05:04,320
estimating I would break decrease for

80
00:05:04,320 --> 00:05:07,830
NFS our crypto systems as for an

81
00:05:07,830 --> 00:05:10,710
illustration we refine the algorithm for

82
00:05:10,710 --> 00:05:13,950
trivial like ciphers including Trivium

83
00:05:13,950 --> 00:05:21,990
Caribbean and trivia as a see first

84
00:05:21,990 --> 00:05:24,570
let's see that the nation of numeric

85
00:05:24,570 --> 00:05:27,810
mapping let us be a boolean function on

86
00:05:27,810 --> 00:05:31,740
M variables the numeric mapping Mike's

87
00:05:31,740 --> 00:05:35,910
the boolean function F and M integers to

88
00:05:35,910 --> 00:05:40,230
one integer the numeric mapping is

89
00:05:40,230 --> 00:05:46,580
denoted by capital D eg dig here AC add

90
00:05:46,580 --> 00:05:49,470
coefficients of the algebraic normal

91
00:05:49,470 --> 00:05:54,510
form of the putting function f the

92
00:05:54,510 --> 00:05:57,150
numeric degree of a composite function

93
00:05:57,150 --> 00:06:00,770
is defined as follows then we can prove

94
00:06:00,770 --> 00:06:04,170
the algebraic degree of the composite

95
00:06:04,170 --> 00:06:06,870
function is less than or equal to is

96
00:06:06,870 --> 00:06:13,800
numeric degree an emphasize the crypto

97
00:06:13,800 --> 00:06:16,740
system usually consists of a potato

98
00:06:16,740 --> 00:06:20,280
function G and an output a function f

99
00:06:20,280 --> 00:06:23,840
the internal state is updated by the

100
00:06:23,840 --> 00:06:27,030
update function and the outer birth date

101
00:06:27,030 --> 00:06:30,660
is generated by the output function f

102
00:06:30,660 --> 00:06:34,200
after an initialization of sufficient

103
00:06:34,200 --> 00:06:39,110
number of rounds keep in mind the

104
00:06:39,110 --> 00:06:42,720
algebraic degree of a composite function

105
00:06:42,720 --> 00:06:47,000
less is to toss not exceed is a numeric

106
00:06:47,000 --> 00:06:52,560
degree we can easily show that this

107
00:06:52,560 --> 00:06:56,220
factor can be used that you the NFS are

108
00:06:56,220 --> 00:06:58,740
based the crypto systems let's see an

109
00:06:58,740 --> 00:07:02,730
example suppose we have an NFS R with

110
00:07:02,730 --> 00:07:08,630
size 8 and XT is the update function

111
00:07:08,630 --> 00:07:12,120
suppose we want to estimate the algebric

112
00:07:12,120 --> 00:07:16,500
degree of x 16 the updated debate at

113
00:07:16,500 --> 00:07:20,970
Clarke 16 then we can it's razor

114
00:07:20,970 --> 00:07:27,930
recompute X 9 X 9 X 11 X 12 X 14 and

115
00:07:27,930 --> 00:07:31,380
then by the numeric might be we can

116
00:07:31,380 --> 00:07:37,820
calculate the numeric degree of X 16 and

117
00:07:37,820 --> 00:07:45,720
get that to be 6 we can also check that

118
00:07:45,720 --> 00:07:51,630
the algebraic degree of x 16 is 6 by

119
00:07:51,630 --> 00:07:54,510
calculating the algebraic normal form of

120
00:07:54,510 --> 00:07:59,430
X 16 so the numeric degree of X 16 is

121
00:07:59,430 --> 00:08:03,020
exactly the same as the algebraic degree

122
00:08:03,020 --> 00:08:06,990
this fact implies that we can get an

123
00:08:06,990 --> 00:08:10,410
accurate estimation of algebraic degree

124
00:08:10,410 --> 00:08:13,320
using the numeric mapping without

125
00:08:13,320 --> 00:08:16,500
computations of the algebraic normal

126
00:08:16,500 --> 00:08:23,460
form the algebraic degrees of output a

127
00:08:23,460 --> 00:08:26,970
base and the internal states can be

128
00:08:26,970 --> 00:08:31,370
estimated iteratively this estimation is

129
00:08:31,370 --> 00:08:38,490
described in algorithm 1 in the

130
00:08:38,490 --> 00:08:41,339
algorithm the update function G is

131
00:08:41,339 --> 00:08:45,150
written as factorial boolean function

132
00:08:45,150 --> 00:08:47,940
which takes consideration of the shift

133
00:08:47,940 --> 00:08:53,899
operations and Digger s

134
00:08:53,899 --> 00:08:58,019
dick asked is a procedure for estimating

135
00:08:58,019 --> 00:09:02,070
the algebraic degree when setting the

136
00:09:02,070 --> 00:09:04,529
dica asked to the numeric my pin dick

137
00:09:04,529 --> 00:09:08,360
this algorithm gives an upper bond

138
00:09:08,360 --> 00:09:13,199
algebraic degree of the output of 8 to

139
00:09:13,199 --> 00:09:16,980
reach a tighter upper bond we use a more

140
00:09:16,980 --> 00:09:19,790
dedicated digger asked rather than the

141
00:09:19,790 --> 00:09:26,399
numeric degree my ping later will show

142
00:09:26,399 --> 00:09:28,829
the application of this algorithm to

143
00:09:28,829 --> 00:09:31,889
achieve an like ciphers we introduced

144
00:09:31,889 --> 00:09:35,040
even like ciphers first and then based

145
00:09:35,040 --> 00:09:37,529
on our observations and the update

146
00:09:37,529 --> 00:09:40,649
functions we formalize linear time

147
00:09:40,649 --> 00:09:43,110
algorithm for estimating the algebraic

148
00:09:43,110 --> 00:09:48,029
degree the internal state which is a

149
00:09:48,029 --> 00:09:52,470
denoted by s T at clock T consists of

150
00:09:52,470 --> 00:09:57,870
three registers a B and C the update

151
00:09:57,870 --> 00:10:03,390
functions updates update 3 B's each time

152
00:10:03,390 --> 00:10:08,790
as shown in equation 4 2 6 8 of which is

153
00:10:08,790 --> 00:10:12,089
a sum of a single quadratic term and

154
00:10:12,089 --> 00:10:16,010
some linear terms the quadratic term

155
00:10:16,010 --> 00:10:21,440
consists of two adjacent debate after an

156
00:10:21,440 --> 00:10:24,930
initialization of aim runs the cipher

157
00:10:24,930 --> 00:10:27,360
ought to put a key stream Bates using

158
00:10:27,360 --> 00:10:32,610
the output function f trivial and

159
00:10:32,610 --> 00:10:36,089
trickiest see exactly 4 into this kind

160
00:10:36,089 --> 00:10:38,459
of a cipher and the Caribbean is a

161
00:10:38,459 --> 00:10:42,180
variant of trivia these three ciphers

162
00:10:42,180 --> 00:10:45,630
use different lengths of key and IV but

163
00:10:45,630 --> 00:10:50,639
all of them at arrays 1152 runs in the

164
00:10:50,639 --> 00:10:55,920
initialization the procedure for finding

165
00:10:55,920 --> 00:10:58,620
an upper bound on the algebraic degree

166
00:10:58,620 --> 00:11:00,949
of the output of 8 after Ingram's

167
00:11:00,949 --> 00:11:05,459
proceeds as follows first initialize the

168
00:11:05,459 --> 00:11:06,160
degree

169
00:11:06,160 --> 00:11:09,370
the initial state the initialized the

170
00:11:09,370 --> 00:11:13,899
degree is denoted by D zero then it's a

171
00:11:13,899 --> 00:11:17,259
relatively computer DT for T varies from

172
00:11:17,259 --> 00:11:21,819
1 to n finally applied the numeric

173
00:11:21,819 --> 00:11:24,970
mapping to calculate and estimate the

174
00:11:24,970 --> 00:11:28,600
degree for the first out for a bit in

175
00:11:28,600 --> 00:11:34,089
the calculation of DT two procedures are

176
00:11:34,089 --> 00:11:38,709
used D gamma and the numeric mapping for

177
00:11:38,709 --> 00:11:41,170
dealing with the quadratic and linear

178
00:11:41,170 --> 00:11:45,879
parts separately this estimate taste

179
00:11:45,879 --> 00:11:49,750
this this estimation is described in

180
00:11:49,750 --> 00:11:56,339
algorithm to we just skip the details

181
00:11:57,750 --> 00:12:01,810
algorithm 3 provides an instance of D

182
00:12:01,810 --> 00:12:05,800
gamma on the line this algorithm there

183
00:12:05,800 --> 00:12:08,259
are several members which are proved in

184
00:12:08,259 --> 00:12:10,720
the paper the details of the proof are

185
00:12:10,720 --> 00:12:13,870
omitted in this talk based on this lemma

186
00:12:13,870 --> 00:12:17,560
we can prove that algorithm to output an

187
00:12:17,560 --> 00:12:20,170
upper bound and the algebraic degree of

188
00:12:20,170 --> 00:12:23,199
the first case stream bed for and round

189
00:12:23,199 --> 00:12:25,899
the treatment like cipher one thing to

190
00:12:25,899 --> 00:12:30,639
note is that algorithm 2 has linear time

191
00:12:30,639 --> 00:12:35,980
and memory complexity in the following

192
00:12:35,980 --> 00:12:39,759
our experiments review some bound and

193
00:12:39,759 --> 00:12:43,019
algebraic degree of trivial like ciphers

194
00:12:43,019 --> 00:12:46,689
first we had the key and IV B is

195
00:12:46,689 --> 00:12:50,199
sufficiently mixed the experiments show

196
00:12:50,199 --> 00:12:54,189
that these the initialization should

197
00:12:54,189 --> 00:12:57,699
contain more than this number of runs in

198
00:12:57,699 --> 00:13:04,209
the third row for example for trayvion

199
00:13:04,209 --> 00:13:07,300
the initialization should have more than

200
00:13:07,300 --> 00:13:10,209
nine hundred and seven rounds in order

201
00:13:10,209 --> 00:13:14,559
to make the key and IV sufficiently

202
00:13:14,559 --> 00:13:19,149
mixed this was done by taking all the

203
00:13:19,149 --> 00:13:19,970
key and

204
00:13:19,970 --> 00:13:25,490
the base at input variables second when

205
00:13:25,490 --> 00:13:28,819
will the IV be sufficiently mixed in

206
00:13:28,819 --> 00:13:32,060
this case we take a subset of IV as

207
00:13:32,060 --> 00:13:36,129
input variables and the key as parameter

208
00:13:36,129 --> 00:13:40,370
the experiments show that the

209
00:13:40,370 --> 00:13:42,889
initialization should contain at least

210
00:13:42,889 --> 00:13:46,160
at this number of rounds otherwise there

211
00:13:46,160 --> 00:13:54,980
exist chosen IV distinguisher next we

212
00:13:54,980 --> 00:13:59,569
did more dedicated research where import

213
00:13:59,569 --> 00:14:01,850
of arrivals contain no added tests and

214
00:14:01,850 --> 00:14:05,509
debates for Trivium we exhaust to all

215
00:14:05,509 --> 00:14:12,230
the two to the 25 cubes of size 37 to 44

216
00:14:12,230 --> 00:14:15,949
Trivium and we exhaust all the 2 to the

217
00:14:15,949 --> 00:14:20,629
30 cubes of size 61 to 64 for Caribbean

218
00:14:20,629 --> 00:14:23,779
and the trivia SSE then we obtained

219
00:14:23,779 --> 00:14:26,449
improved results as shown in this table

220
00:14:26,449 --> 00:14:32,569
for example with a cube of size 37 the

221
00:14:32,569 --> 00:14:40,519
distinguisher covers 837 rounds further

222
00:14:40,519 --> 00:14:46,189
experiments show that the output of 837

223
00:14:46,189 --> 00:14:49,100
round 2 Treveon has degree strictly less

224
00:14:49,100 --> 00:14:54,379
than 37 and the best also implies the

225
00:14:54,379 --> 00:14:59,240
distinguisher for 842 ramps seems that

226
00:14:59,240 --> 00:15:02,600
seems a buyers are is detected for the

227
00:15:02,600 --> 00:15:09,410
output of 8 the accuracy of our

228
00:15:09,410 --> 00:15:13,870
algorithm is verified by comparing the

229
00:15:13,870 --> 00:15:16,850
exact algebraic degree with the

230
00:15:16,850 --> 00:15:19,250
estimated a degree using by our

231
00:15:19,250 --> 00:15:23,800
algorithm for Trivium from 66 runs to

232
00:15:23,800 --> 00:15:28,220
426 rounds our experiments show that

233
00:15:28,220 --> 00:15:32,569
when taking all the key and IV B's or or

234
00:15:32,569 --> 00:15:33,130
the

235
00:15:33,130 --> 00:15:36,310
Oh Oh the IV bees as input of arrivals

236
00:15:36,310 --> 00:15:40,030
our estimated bond is equal to the real

237
00:15:40,030 --> 00:15:44,050
bond so for most cases and when taking

238
00:15:44,050 --> 00:15:47,830
the best cube of size 37 as input of

239
00:15:47,830 --> 00:15:51,250
arrivals our estimated bound is always

240
00:15:51,250 --> 00:15:57,370
equal to the real bond this figure shows

241
00:15:57,370 --> 00:16:00,190
the estimated algebraic degree for

242
00:16:00,190 --> 00:16:05,890
trayvion under the 3 mentioned cases in

243
00:16:05,890 --> 00:16:09,460
order to improve our algorithm we made

244
00:16:09,460 --> 00:16:13,390
two adoptions first we compute the exact

245
00:16:13,390 --> 00:16:16,150
algebraic degree of the internal state

246
00:16:16,150 --> 00:16:19,780
for the first and zero grams second we

247
00:16:19,780 --> 00:16:22,990
use a modified dickham R star to replace

248
00:16:22,990 --> 00:16:26,560
the original Deek amount and the rest

249
00:16:26,560 --> 00:16:31,090
remains the same as the algorithm to now

250
00:16:31,090 --> 00:16:34,660
it becomes hard to estimate the time

251
00:16:34,660 --> 00:16:38,500
complexity of our algorithm the adapted

252
00:16:38,500 --> 00:16:44,220
algorithm is described in algorithm for

253
00:16:44,220 --> 00:16:47,110
applications of the improved algorithm

254
00:16:47,110 --> 00:16:50,740
brims new bounds for trivia SSE however

255
00:16:50,740 --> 00:16:53,590
it is not the case for trivia and a

256
00:16:53,590 --> 00:16:57,400
Caribbean as shown in the table beta

257
00:16:57,400 --> 00:17:00,400
bonds are obtained of using algorithm

258
00:17:00,400 --> 00:17:05,800
for this table summarizes the main

259
00:17:05,800 --> 00:17:12,880
results of our paper in summary we have

260
00:17:12,880 --> 00:17:15,780
shown a framework of algebraic

261
00:17:15,780 --> 00:17:18,069
evaluation for a novice I based the

262
00:17:18,069 --> 00:17:21,010
crypto system using the numeric miming

263
00:17:21,010 --> 00:17:24,700
we have also detailed the techniques for

264
00:17:24,700 --> 00:17:27,250
efficiently finding an upper bound on

265
00:17:27,250 --> 00:17:29,170
the algebraic decree for trivia like

266
00:17:29,170 --> 00:17:32,950
ciphers to the best of our knowledge the

267
00:17:32,950 --> 00:17:36,670
turul is the first theoretical one for

268
00:17:36,670 --> 00:17:38,710
finding an upper bound on the algebraic

269
00:17:38,710 --> 00:17:42,540
degree of anniversaries decrypted system

270
00:17:42,540 --> 00:17:46,780
in parallel with our work total at

271
00:17:46,780 --> 00:17:50,170
exploited after of division property to

272
00:17:50,170 --> 00:17:53,680
estimate the algebraic degree of NFS are

273
00:17:53,680 --> 00:17:56,320
based a cryptosystem the difference

274
00:17:56,320 --> 00:17:59,770
between these two matters is that the

275
00:17:59,770 --> 00:18:02,490
pound founded by division property is

276
00:18:02,490 --> 00:18:07,510
possibly more accurate however our I 2

277
00:18:07,510 --> 00:18:11,770
over 2 is much faster and use mass then

278
00:18:11,770 --> 00:18:14,590
much less memory and has no limitation

279
00:18:14,590 --> 00:18:17,740
and the size of arrivals and internal

280
00:18:17,740 --> 00:18:22,900
state this slice lists some directions

281
00:18:22,900 --> 00:18:25,660
for future work one needs to apply the

282
00:18:25,660 --> 00:18:29,550
algorithm to more NFS are based servers

283
00:18:29,550 --> 00:18:32,980
yeah the second a is to apply the

284
00:18:32,980 --> 00:18:36,160
algorithm for key recovery attacks a

285
00:18:36,160 --> 00:18:39,640
third application may be general general

286
00:18:39,640 --> 00:18:43,090
des algorithm to non FS are based the

287
00:18:43,090 --> 00:18:45,190
crypto systems thank you for your

288
00:18:45,190 --> 00:18:47,220
attention

289
00:18:47,220 --> 00:18:52,279
[Applause]

